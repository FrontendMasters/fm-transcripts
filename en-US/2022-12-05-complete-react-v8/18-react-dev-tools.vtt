WEBVTT

1
00:00:00.000 --> 00:00:07.080
So let's go back to our course
website here for a little bit.

2
00:00:07.080 --> 00:00:11.635
We're down here on dev tools.

3
00:00:11.635 --> 00:00:13.263
So a couple of notes here.

4
00:00:13.263 --> 00:00:19.890
Right now we're doing node, we're doing,
react development and development mode.

5
00:00:19.890 --> 00:00:24.222
Which means when we see errors down
here in our console they're like

6
00:00:24.222 --> 00:00:26.130
really nice errors, right?

7
00:00:26.130 --> 00:00:27.120
They have hey,

8
00:00:27.120 --> 00:00:32.690
you're doing this maybe think about doing
this here's a link to something like that.

9
00:00:32.690 --> 00:00:34.499
The development package for

10
00:00:34.499 --> 00:00:38.575
react is four times bigger than
the normal production package.

11
00:00:38.575 --> 00:00:43.553
So please do not ship the development
mode react to production,

12
00:00:43.553 --> 00:00:46.052
it's slower and it's bigger.

13
00:00:46.052 --> 00:00:48.417
Famously, Slack did this forever.

14
00:00:48.417 --> 00:00:50.579
Like your when you were using slack,

15
00:00:50.579 --> 00:00:54.854
their electron app was shipping you
the development package for React.

16
00:00:54.854 --> 00:00:56.246
It's a desktop application.

17
00:00:56.246 --> 00:00:59.674
It wasn't the end of the world but
it did make slack slower.

18
00:00:59.674 --> 00:01:02.979
So the way that you change that,
which Vite handles for you automatically.

19
00:01:02.979 --> 00:01:08.024
So if you're using Vite or you're using
Parcel, don't even think twice about it.

20
00:01:08.024 --> 00:01:11.126
But if you're doing
something like Webpack,

21
00:01:11.126 --> 00:01:14.156
you do have to care what
is the Node end set to.

22
00:01:14.156 --> 00:01:17.400
So you can set environmental
variables in Node.

23
00:01:17.400 --> 00:01:19.367
If Node end is equal to development,

24
00:01:19.367 --> 00:01:22.165
you are shipping the development
version of React.

25
00:01:22.165 --> 00:01:27.224
If it's equal to production, or
I think anything else you will get,

26
00:01:27.224 --> 00:01:30.292
like the production small version of it.

27
00:01:30.292 --> 00:01:34.203
When you have an error in the production
version, it basically says like, hey,

28
00:01:34.203 --> 00:01:38.171
there's an error, go copy and paste this
into Google, and it'll take you to what

29
00:01:38.171 --> 00:01:41.417
the error is, but it doesn't give
you any useful error messages.

30
00:01:43.484 --> 00:01:44.744
So that's number one.

31
00:01:44.744 --> 00:01:50.626
React has something called strict mode
which basically it helps you be ready for

32
00:01:50.626 --> 00:01:53.020
react changes that are coming.

33
00:01:53.020 --> 00:01:56.492
So basically like if they had some big
thing that was coming in React 19,

34
00:01:56.492 --> 00:01:58.844
which they don't at the moment,
as far as I know,

35
00:01:58.844 --> 00:02:01.545
they'll put that into strict
mode first to let you know.

36
00:02:01.545 --> 00:02:06.007
It's like, hey, you're doing this,
this works now, it will not work later.

37
00:02:06.007 --> 00:02:07.550
We are not going to do that today.

38
00:02:07.550 --> 00:02:09.320
I used to do it during this course.

39
00:02:09.320 --> 00:02:13.606
But they started doing a thing where they
render your app twice, to make sure that

40
00:02:13.606 --> 00:02:17.218
you don't have side effects that
are not happening consistently.

41
00:02:17.218 --> 00:02:19.436
And I think it's dumb,
and I don't like it.

42
00:02:19.436 --> 00:02:22.386
So therefore I'm not doing it.

43
00:02:22.386 --> 00:02:25.177
I don't get it, like they run
all of your API requests twice.

44
00:02:25.177 --> 00:02:25.959
They do a bunch of stuff like that.

45
00:02:25.959 --> 00:02:31.137
It didn't make any sense to me, so
right now, I don't use strict mode.

46
00:02:31.137 --> 00:02:36.835
Whenever they do away with that nonsense
then I will put strict mode back in,

47
00:02:36.835 --> 00:02:42.087
but that's up to you, you can definitely
right now all you have to do is

48
00:02:42.087 --> 00:02:47.536
come into your app.js, and just wrap
your app in strict mode like this.

49
00:02:47.536 --> 00:02:49.738
It comes from React.

50
00:02:52.197 --> 00:02:52.825
That's it.

51
00:02:52.825 --> 00:02:54.465
That's all you need to do
to put it in strict mode.

52
00:02:54.465 --> 00:02:56.925
It doesn't slow down your app or
anything like that.

53
00:02:56.925 --> 00:02:58.715
It doesn't ship anything
additional to production.

54
00:02:58.715 --> 00:03:04.955
It only does anything in development mode,
but that's what strict mode does.

55
00:03:04.955 --> 00:03:10.303
To prove my point here,
if I go to network and

56
00:03:10.303 --> 00:03:16.097
I look at XHR,
notice that it calls this twice.

57
00:03:16.097 --> 00:03:19.448
That annoys the hell out of me,
which is why I don't do it.

58
00:03:19.448 --> 00:03:21.108
Specifically that is the only
reason why I don't like it.

59
00:03:21.108 --> 00:03:23.067
Everything else is great
about strict mode, but

60
00:03:23.067 --> 00:03:24.510
I don't like that they do it twice.

61
00:03:24.510 --> 00:03:28.197
And I'm not the only person
that doesn't like it.

62
00:03:28.197 --> 00:03:31.812
That's number two that I have here.

63
00:03:31.812 --> 00:03:33.517
Last one is we're going
to talk about dev tools.

64
00:03:33.517 --> 00:03:36.754
React has its own dev tools.

65
00:03:36.754 --> 00:03:39.601
And let's go install that.

66
00:03:39.601 --> 00:03:41.073
I don't think I have that
on Chrome at the moment.

67
00:03:41.073 --> 00:03:42.006
So let's go do it.

68
00:03:42.006 --> 00:03:44.610
Just search for React dev tools.

69
00:03:44.610 --> 00:03:47.344
And if you're using Chrome, search chrome.

70
00:03:47.344 --> 00:03:50.730
Or if you're using Firefox, search that.

71
00:03:50.730 --> 00:03:52.850
It's this one.

72
00:03:52.850 --> 00:03:55.458
And you just click Add to Chrome.

73
00:04:01.193 --> 00:04:03.419
Okay, so now I come back over here.

74
00:04:03.419 --> 00:04:05.333
Let's just try opening a new tab.

75
00:04:14.659 --> 00:04:16.541
Okay, it's good so far.

76
00:04:21.294 --> 00:04:23.342
Here we go.

77
00:04:23.342 --> 00:04:28.646
So you should see showing up in
here the components and profiler.

78
00:04:28.646 --> 00:04:33.310
This is basically like a little explorer
for you to use for your dev tools, right?

79
00:04:33.310 --> 00:04:36.771
So I have my app component,
which is like everything.

80
00:04:36.771 --> 00:04:40.316
I have the search components,
the search prams, the results,

81
00:04:40.316 --> 00:04:44.666
which you can see are over here, pet
components, and then I can click on them.

82
00:04:44.666 --> 00:04:49.370
I can see the state,
something kind of cool is I can

83
00:04:49.370 --> 00:04:53.180
like modify it so I can say Seattle, WA.

84
00:04:53.180 --> 00:04:56.718
If I hit Enter,
notice that it modifies that over there so

85
00:04:56.718 --> 00:04:59.087
you can actually mess with the state.

86
00:04:59.087 --> 00:05:04.294
If I click here into results I can see
the props that are being passed in, right,

87
00:05:04.294 --> 00:05:09.271
you can't mess with props I guess it's
not something I've said out loud but

88
00:05:09.271 --> 00:05:10.854
I think it makes sense.

89
00:05:10.854 --> 00:05:14.420
If I go over here into results,
and I'm getting these props,

90
00:05:14.420 --> 00:05:16.147
props are read only, right?

91
00:05:16.147 --> 00:05:17.833
They come in as properties.

92
00:05:17.833 --> 00:05:21.934
If I modify the props, it doesn't
modify what the parent is passing in.

93
00:05:21.934 --> 00:05:26.874
So props are read only, state is mutable
that are like you know, use state and

94
00:05:26.874 --> 00:05:28.706
hooks and things like that.

95
00:05:28.706 --> 00:05:33.294
So, by the same token here,
I cannot mess with these here, right?

96
00:05:39.779 --> 00:05:41.815
Interesting, It wants me
to put it in strict mode.

97
00:05:41.815 --> 00:05:44.317
Well, no, I don't want to can't make me,

98
00:05:44.317 --> 00:05:48.592
it'll tell you where it came from,
which is nice like the source, right?

99
00:05:48.592 --> 00:05:49.802
That's cool.

100
00:05:49.802 --> 00:05:54.954
It can tell you like the render
path here which is also good.

101
00:05:54.954 --> 00:05:59.997
And then there's a profiler here as well.

102
00:05:59.997 --> 00:06:03.669
So, if I do that and
then refresh the page and then stop here,

103
00:06:03.669 --> 00:06:07.631
it's going to give me like a burndown
of like, what took so long.

104
00:06:07.631 --> 00:06:13.947
Why it took so long, timeline, ranked,
it gives you a bunch of stuff here.

105
00:06:13.947 --> 00:06:17.644
Like if you really want to get into
the depth of the performance of your

106
00:06:17.644 --> 00:06:18.486
application.

107
00:06:18.486 --> 00:06:20.558
This is it.

108
00:06:20.558 --> 00:06:25.070
This is available in Chromium,
so this works in Edge,

109
00:06:25.070 --> 00:06:30.185
Brave, Vivaldi, any of those,
then also works on Firefox.

110
00:06:30.185 --> 00:06:35.890
They don't publish Safari anymore,
they used to but they don't anymore.

111
00:06:35.890 --> 00:06:39.820
So, please use the dev tools,
they're awesome.

112
00:06:39.820 --> 00:06:42.797
It's an essential part of being a reacted
all by using these extensively.

