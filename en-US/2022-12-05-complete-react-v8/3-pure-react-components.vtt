WEBVTT

1
00:00:00.000 --> 00:00:05.834
So let's talk about a couple other
things a component must return markup,

2
00:00:05.834 --> 00:00:10.480
which will always be the result
of React.createElement.

3
00:00:10.480 --> 00:00:15.041
So this is about the simplest
react app possible,

4
00:00:15.041 --> 00:00:19.392
this is the hello world
of React applications.

5
00:00:19.392 --> 00:00:25.242
So next thing, let's get this
out of a script tag on a page,

6
00:00:25.242 --> 00:00:30.390
so I'm gonna cut this, and
I'm gonna make a new file

7
00:00:30.390 --> 00:00:35.672
here inside of source and
I'm gonna call it App.js.

8
00:00:39.965 --> 00:00:41.458
And I'm gonna save that.

9
00:00:43.535 --> 00:00:47.853
And then back here my index and
literally this is unmodified.

10
00:00:47.853 --> 00:00:52.696
Here in App.js and
then here I'm gonna put in

11
00:00:52.696 --> 00:00:57.420
this script tag source equals dot App.js.

12
00:01:00.038 --> 00:01:05.041
Okay, that should be slightly
less offensive code now.

13
00:01:05.041 --> 00:01:09.851
So back here in App.js,
let's make another component,

14
00:01:09.851 --> 00:01:15.260
this is a pet adoption app, so
we're gonna make a pet component.

15
00:01:15.260 --> 00:01:21.140
Be another function it's going to return

16
00:01:21.140 --> 00:01:27.189
the results of, React.CreateElement.

17
00:01:27.189 --> 00:01:33.089
And it's gonna be a div,
it's gonna have nothing there and

18
00:01:33.089 --> 00:01:38.989
then we're gonna give it
an array of components to return.

19
00:01:38.989 --> 00:01:43.643
So React.createElement,
we'll give it an h1,

20
00:01:43.643 --> 00:01:49.606
empty object, and
we're gonna describe one pet individually.

21
00:01:49.606 --> 00:01:56.970
So we're gonna do my dog, which is Luna
but you can put whatever you want there.

22
00:01:56.970 --> 00:02:03.344
And I'm gonna just copy and paste this
cuz it's relatively the same thing.

23
00:02:04.562 --> 00:02:10.708
And I'm gonna make this in h2, and
I'm like that in h2, Luna is a dog and

24
00:02:10.708 --> 00:02:16.528
her breed, she is a Havanese So

25
00:02:16.528 --> 00:02:20.736
now that we have this pet component
again we've created the rubber stamp but

26
00:02:20.736 --> 00:02:25.286
we haven't actually used the rubber stamp,
right so we have to go use it somewhere

27
00:02:27.739 --> 00:02:30.339
I mean, this is just a function
at the end of the day, right?

28
00:02:30.339 --> 00:02:35.510
You have to use the function
doesn't really do anything.

29
00:02:37.678 --> 00:02:40.240
So and then you'll notice here,

30
00:02:40.240 --> 00:02:44.909
instead of just a result of
one React.createElement call,

31
00:02:44.909 --> 00:02:49.135
we've given it an array of
that which is totally fine.

32
00:02:49.135 --> 00:02:52.550
React knows how to handle that, right?

33
00:02:52.550 --> 00:02:56.983
Just so you know, this is just
trivia that you don't need to know,

34
00:02:56.983 --> 00:03:01.769
you actually can just give it,
Like multiple

35
00:03:01.769 --> 00:03:06.460
parameters here and
it'll also know what to do with that,

36
00:03:06.460 --> 00:03:12.316
it's variablearity if you want to use
the computer science term for it.

37
00:03:12.316 --> 00:03:16.366
But what react will do for
you under the hood it does put an array so

38
00:03:16.366 --> 00:03:19.533
I'm just letting you know
that it's in an array.

39
00:03:21.022 --> 00:03:23.130
Again, trivia, you can just go ahead and

40
00:03:23.130 --> 00:03:25.491
let that go out the other
ear doesn't matter.

41
00:03:27.219 --> 00:03:30.287
Okay, so now I have this.

42
00:03:30.287 --> 00:03:35.138
And I'm gonna make this
an array here as well cuz we're

43
00:03:35.138 --> 00:03:38.411
gonna use a bunch of pet components.

44
00:03:40.954 --> 00:03:45.259
Okay, and
let's just put three pets in here, so

45
00:03:45.259 --> 00:03:49.778
I'm gonna say react dot create element,
and pet.

46
00:03:54.721 --> 00:03:57.319
So again, I made this pet rubber stamp and

47
00:03:57.319 --> 00:04:00.375
I just went stamped it
three times inside of app.

48
00:04:00.375 --> 00:04:06.298
And then app is going to be
rendered out here to the root.

49
00:04:08.282 --> 00:04:13.100
So one of my favorite exercises when I
write code like this is I asked myself,

50
00:04:13.100 --> 00:04:16.733
when I go back to the browser,
what am I expecting to see?

51
00:04:16.733 --> 00:04:22.533
Because it forces me to think through
logically the code that I've written.

52
00:04:22.533 --> 00:04:25.369
Just start from the end and
work backwards.

53
00:04:25.369 --> 00:04:29.292
We have app, right which has been
rendered out to the root, so

54
00:04:29.292 --> 00:04:33.527
we have our app component this is
gonna be rendered how many times?

55
00:04:33.527 --> 00:04:39.720
It's once, we're gonna see an h1 that
has an adopt me here at the top.

56
00:04:39.720 --> 00:04:42.732
It's gonna be inside of a div, right and

57
00:04:42.732 --> 00:04:46.373
then we have used the pet
component three times.

58
00:04:46.373 --> 00:04:49.381
So how many times is it
gonna say Luna on my page?

59
00:04:49.381 --> 00:04:50.374
&gt;&gt; Three
&gt;&gt; Three,

60
00:04:50.374 --> 00:04:55.231
dog three times having these three times.

61
00:04:55.231 --> 00:05:01.714
Total I'm gonna have four h ones
right one of these three of these and

62
00:05:01.714 --> 00:05:09.003
I'm going to have what six h twos and
inside of and I'll have what four divs.

63
00:05:09.003 --> 00:05:14.361
Okay, so now if I refresh the page here
you can see I have Luna three times,

64
00:05:14.361 --> 00:05:18.610
dog three times,
matches up with my expectations, yes?

65
00:05:18.610 --> 00:05:22.393
Yeah, so you can see components
are made up of components,

66
00:05:22.393 --> 00:05:24.140
are made up of components.

67
00:05:26.531 --> 00:05:31.658
If you will, right now, just so
you know if you look here in your console,

68
00:05:31.658 --> 00:05:34.912
you will certainly see
you have this warning.

69
00:05:34.912 --> 00:05:35.686
That's fine,

70
00:05:35.686 --> 00:05:39.806
we will take care of it that's expected
right now, just ignore it for the moment.

71
00:05:39.806 --> 00:05:42.975
So obviously not everyone's pet is my pet,
right,

72
00:05:42.975 --> 00:05:47.016
it's not very useful that we have
a pet that represents just Luna.

73
00:05:47.016 --> 00:05:50.932
It'd be cool if we had a pet component
that could be any pet, right?

74
00:05:50.932 --> 00:05:55.548
A little bit more flexibility than just
outputting Luna dog Havanese three times.

75
00:05:55.548 --> 00:05:59.057
It'd be cool if we could
have three different pets,

76
00:05:59.057 --> 00:06:02.898
as you might imagine,
this is this is possible, right.

77
00:06:02.898 --> 00:06:07.473
So React is a concept
called one-way data flow,

78
00:06:07.473 --> 00:06:13.402
which basically means that I can
pass data from app down to pet.

79
00:06:13.402 --> 00:06:18.639
I cannot pass data from pet up to app for
the most part.

80
00:06:18.639 --> 00:06:23.702
Let's just say 99% of the time you don't,
this is called one way data flow.

81
00:06:23.702 --> 00:06:28.055
It was, I'm gonna say popularized
by React, but it's basically

82
00:06:28.055 --> 00:06:33.043
been adopted now by every major framework,
because it was such a good idea.

83
00:06:33.043 --> 00:06:35.044
Why is this such a good idea?

84
00:06:35.044 --> 00:06:38.780
I'm gonna pass information down to pet.

85
00:06:38.780 --> 00:06:43.556
If I have an issue inside of app,
I know for a fact that pet

86
00:06:43.556 --> 00:06:48.650
didn't cause it because pet
can't mess with its parents.

87
00:06:48.650 --> 00:06:52.800
App can mess with it's children, but
the pet cannot mess with its parents.

88
00:06:52.800 --> 00:06:58.663
So basically it allows it makes debugging
react apps much more straightforward.

89
00:06:58.663 --> 00:07:01.668
It also makes the data flow very explicit,

90
00:07:01.668 --> 00:07:06.935
if pet has weird data being passed into
it you know it came from app, right?

91
00:07:06.935 --> 00:07:11.530
Cuz that you can see the data flow
from parent to child from parent to

92
00:07:11.530 --> 00:07:13.511
child from parent to child.

93
00:07:13.511 --> 00:07:17.866
This is one of the biggest benefits of
React in my opinion is it makes this flow

94
00:07:17.866 --> 00:07:21.556
of data very explicit,
very easy to read, very easy to follow.

95
00:07:21.556 --> 00:07:25.393
My favorite story about React as I showed
you that tweet of me launching React at

96
00:07:25.393 --> 00:07:27.480
Reddit for the first time.

97
00:07:27.480 --> 00:07:30.180
I had a colleague Python developer,
awesome developer but

98
00:07:30.180 --> 00:07:32.470
very much not a front end developer.

99
00:07:32.470 --> 00:07:36.824
I launched that React code and then
immediately went on a cruise, immediately,

100
00:07:36.824 --> 00:07:39.730
like launched it, left the next day.

101
00:07:39.730 --> 00:07:42.520
Great idea I was an awesome coworker,
hire me please.

102
00:07:44.030 --> 00:07:46.451
It broke as all codes want to do,

103
00:07:46.451 --> 00:07:51.400
my coworker was able to look at
the code and he is like, I get this.

104
00:07:51.400 --> 00:07:54.676
I can read this, I can understand
where the data is going, and

105
00:07:54.676 --> 00:07:57.960
he found it very quickly fixed it and
relaunched.

106
00:07:57.960 --> 00:08:02.124
And I only owed him a few beers instead of
like an entire case of beers afterwards,

107
00:08:02.124 --> 00:08:03.790
right so it ended up being okay.

108
00:08:05.920 --> 00:08:08.921
But that is due to the fact of
how explicit React is, you're,

109
00:08:08.921 --> 00:08:12.907
gonna get a little annoyed at how explicit
it is because it requires a decent amount

110
00:08:12.907 --> 00:08:13.510
of typing.

111
00:08:14.550 --> 00:08:19.300
So that part it's worth it, though like
the juice here is worth the squeeze.

112
00:08:19.300 --> 00:08:24.300
Yeah, because you're gonna have to
say every time like this goes here.

113
00:08:24.300 --> 00:08:28.440
That was, like one of the really
cool benefits of like old angular

114
00:08:28.440 --> 00:08:30.560
is it was very implicit, right?

115
00:08:30.560 --> 00:08:34.276
You were able to say, okay, this is bound
to this and it made writing that code

116
00:08:34.276 --> 00:08:37.779
really nice, but it made maintaining
that code an absolute nightmare.

117
00:08:38.990 --> 00:08:41.550
They fix that modern Angular
doesn't do that anymore,

118
00:08:41.550 --> 00:08:45.350
I'm talking about really old Angular,
that like two way data binding.

119
00:08:45.350 --> 00:08:49.986
If you've done that before you now have
this forlorn look on your face and

120
00:08:49.986 --> 00:08:55.390
you're like having like flashbacks of
terrible times in your coding career.

121
00:08:55.390 --> 00:08:58.049
If you don't know what that is,
just consider yourself very lucky.

122
00:08:58.049 --> 00:09:01.665
Anyway, okay, so
I've explained to you that

123
00:09:01.665 --> 00:09:05.755
we wanna flow some data from
our app parent into pet.

124
00:09:05.755 --> 00:09:08.022
Let's see how you do that, so

125
00:09:08.022 --> 00:09:12.396
what I want is I wanna get some
sort of like object in here.

126
00:09:12.396 --> 00:09:15.557
Let's just call it props and
I wanna use these props here,

127
00:09:15.557 --> 00:09:19.180
these properties that are gonna be
passed in from the parent here.

128
00:09:19.180 --> 00:09:24.769
So instead of having Luna here
I'm gonna have props dot name,

129
00:09:24.769 --> 00:09:30.262
instead of having dog here I'm
gonna have props dot animal.

130
00:09:30.262 --> 00:09:35.363
Instead of having Havanese here I'm gonna

131
00:09:35.363 --> 00:09:40.857
have props dot breed Okay,
so now it's expecting

132
00:09:40.857 --> 00:09:45.430
something from its parent that it needs to
be passed into so that it can render it.

133
00:09:46.520 --> 00:09:50.750
So it shows you here like here I
can give it like an ID of whatever.

134
00:09:50.750 --> 00:09:53.610
Same thing applies here for
properties passed into a component,

135
00:09:53.610 --> 00:09:56.480
I can just say all right,
here's properties I wanna give to pet.

136
00:09:57.960 --> 00:10:00.628
I wanna give it an animal of

137
00:10:05.236 --> 00:10:11.463
We'll just use Luna again here,
animal is gonna be dog,

138
00:10:11.463 --> 00:10:19.010
though, the name is gonna be Luna and
the breed is gonna be Havanese.

139
00:10:24.456 --> 00:10:27.755
And let's just copy and
paste that a few times here.

140
00:10:30.954 --> 00:10:35.662
This one instead of being a dog,
let's make this was my childhood bird, so

141
00:10:35.662 --> 00:10:37.170
this is gonna be a bird.

142
00:10:38.570 --> 00:10:42.880
And the bird same was Pepper I was a very
creative child that we had a black and

143
00:10:42.880 --> 00:10:47.054
white bird which I named Pepper I
thought that was very clever it was not,

144
00:10:47.054 --> 00:10:48.160
it was not clever.

145
00:10:49.830 --> 00:10:51.320
Pepper was a cocktail.

146
00:10:53.954 --> 00:10:56.186
And this was my neighbor's cat,

147
00:10:56.186 --> 00:11:00.580
which I just has the best name ever,
the name of the cat was Doink.

148
00:11:02.420 --> 00:11:07.156
And there was some mixed breed, we called
the cat Doink because it was mostly

149
00:11:07.156 --> 00:11:11.530
blind so we just run into walls all
the time, it's very charming cat.

150
00:11:12.710 --> 00:11:14.020
So now what do I expect to see?

151
00:11:15.910 --> 00:11:19.884
Can be really similar, same amount
of divs and H ones and H twos but

152
00:11:19.884 --> 00:11:24.170
now I'm gonna have a more
flexible structure here, right?

153
00:11:24.170 --> 00:11:25.463
And it's gonna have a different name for

154
00:11:25.463 --> 00:11:27.680
each one, it's gonna have a different
breed and different animal.

155
00:11:29.490 --> 00:11:32.866
So if I go back over here and refresh
the page, you can see here I have Luna,

156
00:11:32.866 --> 00:11:34.294
I have Pepper and I have Doink.

157
00:11:35.760 --> 00:11:40.436
And again, one way data flow I
have information flowing from

158
00:11:40.436 --> 00:11:44.810
App into pet right
through these properties.

159
00:11:44.810 --> 00:11:47.633
But how would data,
like how would pet ever mess with app?

160
00:11:49.382 --> 00:11:50.550
It can't, right?

161
00:11:50.550 --> 00:11:54.557
It has no concept of where or
how it's being rendered,

162
00:11:54.557 --> 00:11:56.900
pet is just simply a function.

163
00:11:56.900 --> 00:12:01.831
No pun intended, actually is that
it's just a function of its state,

164
00:12:01.831 --> 00:12:04.422
right it gets props passed into it and

165
00:12:04.422 --> 00:12:08.704
it renders itself based on
whatever the state I did, right?

166
00:12:08.704 --> 00:12:10.434
And you can do like right now
I'm just doing strings but

167
00:12:10.434 --> 00:12:11.458
I could do is dark mode, right.

168
00:12:11.458 --> 00:12:14.873
And I could have this one be true and
this one be false and

169
00:12:14.873 --> 00:12:18.670
all that kind of stuff and
go back and forth that way, right?

170
00:12:18.670 --> 00:12:21.017
You can pass any sort of state in there,

171
00:12:21.017 --> 00:12:25.369
you can pass objects you can pass URLs
like whatever you need to do there.

172
00:12:25.369 --> 00:12:29.200
And we're gonna do all sorts
of wild stuff with state but

173
00:12:29.200 --> 00:12:33.615
that is how you pass information
down from parents to children.

