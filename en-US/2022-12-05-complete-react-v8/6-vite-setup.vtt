WEBVTT

1
00:00:00.000 --> 00:00:03.406
So let's talk about Vit.

2
00:00:03.406 --> 00:00:05.759
And I've been pronouncing it Vit for so

3
00:00:05.759 --> 00:00:08.621
long that I probably will
keep calling it that.

4
00:00:08.621 --> 00:00:12.557
It is pronounced V-I-T, not V-I-T.

5
00:00:12.557 --> 00:00:17.409
And it means quick in French,
which is where the name comes from.

6
00:00:17.409 --> 00:00:20.309
So Vit is a tool put out by the view team.

7
00:00:20.309 --> 00:00:23.378
It's going to be our build tool
that we're gonna be using today.

8
00:00:23.378 --> 00:00:30.760
Previous versions of this class used
Parcel, and before that it was Webpack.

9
00:00:30.760 --> 00:00:31.722
I think that's it.

10
00:00:31.722 --> 00:00:33.999
I don't think I ever use
Browserify in this class.

11
00:00:35.930 --> 00:00:38.722
But I basically just described to
you my history of build tools.

12
00:00:38.722 --> 00:00:44.234
I used to use Browserify long
time ago with Grunt and Gulp.

13
00:00:44.234 --> 00:00:46.161
Yeah, maybe we didn't used to do that.

14
00:00:46.161 --> 00:00:48.110
I'd have to go look at what
version one actually used.

15
00:00:48.110 --> 00:00:52.131
Anyway, after that we used Webpack.

16
00:00:52.131 --> 00:00:53.883
And then for
the longest time I've been using Parcel.

17
00:00:53.883 --> 00:00:58.776
I like Parcel because, and it's still
super valid for you to use Parcel now.

18
00:00:58.776 --> 00:00:59.834
Parcel is zero config.

19
00:00:59.834 --> 00:01:02.553
You just put it in a file, and
the entire thing just works.

20
00:01:02.553 --> 00:01:06.446
Vit is create a very small file,
and then everything just works.

21
00:01:06.446 --> 00:01:10.668
So it works really well.

22
00:01:10.668 --> 00:01:13.028
Vit under the hood is using roll up,
right?

23
00:01:13.028 --> 00:01:18.401
Roll up is a very useful build
tool created by Rich Harris,

24
00:01:18.401 --> 00:01:22.250
who's also the guy that created Svelte.

25
00:01:22.250 --> 00:01:25.594
He's taught here Frontend Masters,
very smart, very nice person.

26
00:01:25.594 --> 00:01:29.584
Works at Parcel now.

27
00:01:29.584 --> 00:01:32.000
So Vit, which is created by the view team,

28
00:01:32.000 --> 00:01:36.497
which was created by a person who created
Svelte, which we're now gonna use for

29
00:01:36.497 --> 00:01:39.273
React, I feel like it's
just a full circle now.

30
00:01:39.273 --> 00:01:44.664
It's like a framework group hug.

31
00:01:44.664 --> 00:01:49.083
So Vit, awesome project.

32
00:01:49.083 --> 00:01:51.870
If you wanna use Parcel,
just checkout v7 in this course.

33
00:01:51.870 --> 00:01:54.330
It works relatively similar.

34
00:01:54.330 --> 00:01:56.212
So let's go ahead and use Vit.

35
00:01:56.212 --> 00:02:02.363
So we're gonna install here,
npm install- capital D.

36
00:02:02.363 --> 00:02:08.880
We're gonna do vite@3.1.4,

37
00:02:08.880 --> 00:02:12.242
and we're gonna do

38
00:02:12.242 --> 00:02:20.030
@vitejs/plugin-react@2.1.0.

39
00:02:20.030 --> 00:02:21.364
Okay, that'll take a second.

40
00:02:21.364 --> 00:02:23.021
It builds a lot of stuff.

41
00:02:23.021 --> 00:02:24.627
Yeah, so it does use roll up.

42
00:02:24.627 --> 00:02:26.326
But it also uses es build as well.

43
00:02:26.326 --> 00:02:27.692
There's a bunch of stuff
that goes into Vit.

44
00:02:27.692 --> 00:02:30.563
So I actually don't know all
the misdirection that happens in there.

45
00:02:30.563 --> 00:02:32.707
Suffice to say,
it's handling a lot of stuff for

46
00:02:32.707 --> 00:02:34.808
you that you don't have
to really worry about.

47
00:02:34.808 --> 00:02:37.074
It's also handling TypeScript.

48
00:02:37.074 --> 00:02:40.531
For the most part, you set up a little
config file, everything else Vit just

49
00:02:40.531 --> 00:02:43.843
figures out for you, and you end up
with a really good optimized output.

50
00:02:43.843 --> 00:02:46.887
Super valid tool to use
in production today.

51
00:02:46.887 --> 00:02:51.432
Go back to your code in index dot HTML.

52
00:02:51.432 --> 00:02:54.158
We're gonna delete these
two script tags cuz for

53
00:02:54.158 --> 00:02:57.565
now we're actually going to
bundle React into our project.

54
00:03:00.398 --> 00:03:03.166
Okay, and then we have to
put type equals module here.

55
00:03:07.553 --> 00:03:12.810
This is for Vit to know that
we're not doing common JS here,

56
00:03:12.810 --> 00:03:16.822
we're gonna be doing ES6 modules, right?

57
00:03:16.822 --> 00:03:21.434
And then not dot slash app JS,
we're actually gonna make this a JSX file.

58
00:03:25.094 --> 00:03:29.856
Next question that I know someone's
thinking is, why are we doing JS and not,

59
00:03:29.856 --> 00:03:31.886
or why are we doing JSX and not JS?

60
00:03:31.886 --> 00:03:36.341
Famously, one of the React core Devs said,
I just do JS.

61
00:03:36.341 --> 00:03:39.748
Why doesn't everyone do JS?

62
00:03:39.748 --> 00:03:45.147
JSX is just an extension of JS, why do we
need a different file extension for it?

63
00:03:45.147 --> 00:03:48.545
Frankly, a little inclined to agree
previous versions of this class called

64
00:03:48.545 --> 00:03:49.242
them JS files.

65
00:03:49.242 --> 00:03:53.468
But Vit insists that you call it JSX,
or it will not do the JSX translation.

66
00:03:53.468 --> 00:03:55.277
So we have to call it that.

67
00:03:55.277 --> 00:04:00.657
Or we have to go configure Vit to look at
JS files for JSX, which I didn't wanna do.

68
00:04:00.657 --> 00:04:05.975
So for my benefit, for your benefit,
for this class, we're gonna say, JSX.

69
00:04:05.975 --> 00:04:10.307
So, dot JSX,
we're gonna rename this app JSX up

70
00:04:10.307 --> 00:04:14.759
here momentarily, or
we can just do it now, JSX.

71
00:04:14.759 --> 00:04:16.491
And now all that stuff will work.

72
00:04:18.735 --> 00:04:22.911
Okay, now we need to create, again,

73
00:04:22.911 --> 00:04:29.840
at the root of our project,
a, what is it, config.vit.js.

74
00:04:29.840 --> 00:04:32.437
All right, did I get that backwards,
other way?

75
00:04:32.437 --> 00:04:34.816
Vit.config.js.

76
00:04:38.921 --> 00:04:42.081
I didn't get my cool little logo there,
so that's how I knew that I messed it up.

77
00:04:45.405 --> 00:04:51.703
Okay, in here we're gonna say import,
define config from, not roll up.

78
00:04:51.703 --> 00:04:52.996
Thank you.

79
00:04:52.996 --> 00:04:56.949
Config from Vit.

80
00:04:56.949 --> 00:05:01.692
And we're going to import react from

81
00:05:01.692 --> 00:05:06.130
@vitejsplugin- react, okay?

82
00:05:06.130 --> 00:05:11.449
We're going to export a default

83
00:05:11.449 --> 00:05:18.345
to find config with an object, plugins.

84
00:05:18.345 --> 00:05:23.961
And we're gonna give it react with
the invocation of the React function.

85
00:05:23.961 --> 00:05:28.493
And then I'm gonna tell it
that my route is source.

86
00:05:32.848 --> 00:05:37.348
So what I will tell you is, most people
actually will put their index html file

87
00:05:37.348 --> 00:05:39.644
directly in the base of their project.

88
00:05:39.644 --> 00:05:43.642
So if you did that,
then you wouldn't need this route.

89
00:05:43.642 --> 00:05:45.500
In retrospect,
that probably would have been easier,

90
00:05:45.500 --> 00:05:46.930
but the entire course is written this way.

91
00:05:46.930 --> 00:05:50.171
So just follow with me here.

92
00:05:50.171 --> 00:05:53.303
At the end it really doesn't matter,
to be totally honest with you.

93
00:05:53.303 --> 00:05:56.959
Okay, we now have a build process.

94
00:05:56.959 --> 00:05:58.383
This is it.
This is really all we need to do for

95
00:05:58.383 --> 00:05:59.026
our build process.

96
00:05:59.026 --> 00:06:01.257
We'll come back here and
mess with it maybe a little bit later.

97
00:06:01.257 --> 00:06:04.228
But for the most part, this is just done.

98
00:06:04.228 --> 00:06:05.984
Parcel is zero config.

99
00:06:05.984 --> 00:06:11.988
Vit is this much config, which is,
I'm gonna judge acceptable, right?

100
00:06:11.988 --> 00:06:12.946
Not too bad.

101
00:06:12.946 --> 00:06:16.457
And so what's gonna happen is, it's
going to go into your source directory.

102
00:06:16.457 --> 00:06:19.593
It's gonna find the index html file.

103
00:06:19.593 --> 00:06:22.979
And then it's going to find it's like,
okay, you have an app dot JSX,

104
00:06:22.979 --> 00:06:25.139
and it crawls your graph from there,
right?

105
00:06:25.139 --> 00:06:28.119
So understands your JS.

106
00:06:28.119 --> 00:06:32.773
It'll understand your CSS, it runs
all that stuff through Vit as well.

107
00:06:32.773 --> 00:06:38.444
And then, it'll come in into your app dot
JSX, it'll find all of its dependencies.

108
00:06:38.444 --> 00:06:40.413
So it finds your graph all by itself.

109
00:06:40.413 --> 00:06:42.073
You don't have to do
anything more than that.

110
00:06:42.073 --> 00:06:44.688
That's how the black
magic is happening here.

111
00:06:44.688 --> 00:06:47.759
If it's all coming from
your index dot HTML.

112
00:06:47.759 --> 00:06:52.347
If you have other heads, right, index HTML
being the head file that it crawls out of,

113
00:06:52.347 --> 00:06:55.232
you can identify that to Vit,
and have a go find that.

114
00:06:55.232 --> 00:06:58.570
Maybe you have two different apps
that need to be rendered out, right?

115
00:06:58.570 --> 00:07:02.691
You would do that here in your config.

116
00:07:02.691 --> 00:07:05.465
So by default,
this is just gonna work for us.

117
00:07:05.465 --> 00:07:09.311
So the next thing that we wanna do, we
deleted the source or those script tags.

118
00:07:09.311 --> 00:07:12.952
So now we need to go install React so
that it'll build correctly.

119
00:07:12.952 --> 00:07:15.281
So npm install -D.

120
00:07:15.281 --> 00:07:19.904
And then when you react @ a team, and

121
00:07:19.904 --> 00:07:24.834
this isn't D, we actually want this.

122
00:07:28.449 --> 00:07:31.612
React.2.0, and

123
00:07:31.612 --> 00:07:36.183
react-dom@18.2.0.

124
00:07:36.183 --> 00:07:39.839
So NPM install without the capital D,
it is not a dev dependency,

125
00:07:39.839 --> 00:07:41.644
it is a production dependency.

126
00:07:41.644 --> 00:07:45.785
And then we want 18.2.0,
and react-dom@18.2.0.

127
00:07:45.785 --> 00:07:48.497
They release them in lockstep, so
they're always the same version.

128
00:07:52.840 --> 00:07:59.211
So you go in here, we see that we do have,
in fact, Vit is in here, React, React-dom.

129
00:07:59.211 --> 00:08:02.102
Awesome, all good stuff.

130
00:08:02.102 --> 00:08:04.881
We're gonna go back to app dot JS.

131
00:08:04.881 --> 00:08:09.647
If you haven't renamed it app dot JSX,
please do so now so it's app dot JSX.

132
00:08:09.647 --> 00:08:12.966
And we have this React is like I don't
know what that is, React is not defined.

133
00:08:12.966 --> 00:08:16.183
You can see here the saying
es lint no undefined,

134
00:08:16.183 --> 00:08:18.467
just as a helpful thing by the way.

135
00:08:18.467 --> 00:08:23.576
If you click on this, no on def,
this will actually take you directly to

136
00:08:23.576 --> 00:08:29.124
the esint doc telling you,
it's opening Firefox for me, taking a sec.

137
00:08:29.124 --> 00:08:32.015
It'll take you directly to
the rule that it's breaking so

138
00:08:32.015 --> 00:08:33.610
you can actually read, right?

139
00:08:33.610 --> 00:08:39.287
That's just a helpful tip for
VS Code that I quite like.

140
00:08:39.287 --> 00:08:46.373
So what we're gonna do up
here is we're going to say,

141
00:08:46.373 --> 00:08:50.309
import react from react, and

142
00:08:50.309 --> 00:08:55.353
import react-dom from react-dom.

143
00:08:55.353 --> 00:08:58.343
So now, notice this isn't read anymore.

144
00:08:58.343 --> 00:09:04.416
If we run npm and lint,
no problems anymore.

145
00:09:04.416 --> 00:09:06.555
Cuz now these are not undefined,
they're defined.

146
00:09:06.555 --> 00:09:08.419
Cuz we know where they're getting from.

147
00:09:08.419 --> 00:09:11.977
And again, V is smart not to say,
you're importing react from react,

148
00:09:11.977 --> 00:09:14.216
I'm going to include
that in your package now.

149
00:09:14.216 --> 00:09:17.016
So for the most part, we don't have
to think about our build anymore.

150
00:09:17.016 --> 00:09:19.524
Vit just kind of takes care of it for us.

151
00:09:19.524 --> 00:09:23.825
So one thing that I want to
show you about ES6 modules.

152
00:09:23.825 --> 00:09:27.795
Let's say that right now we're
only using create route, right?

153
00:09:27.795 --> 00:09:31.368
So I can come up here and
I can delete this and I can say,

154
00:09:31.368 --> 00:09:33.440
I want just create route here.

155
00:09:33.440 --> 00:09:37.461
And I can go down here and
instead of saying react-dom.

156
00:09:37.461 --> 00:09:41.750
So this is how you import just
parts of packages, right?

157
00:09:41.750 --> 00:09:45.509
In theory, this is what you wanna do for
the most part.

158
00:09:45.509 --> 00:09:49.601
Vit has something that's called tree
shaking, which is another word for

159
00:09:49.601 --> 00:09:54.030
live code inclusion, which is different
than dead code elimination, right?

160
00:09:54.030 --> 00:09:56.417
Live code inclusion, aka tree shaking,

161
00:09:56.417 --> 00:09:59.290
only includes code that
you're actively using.

162
00:10:00.470 --> 00:10:03.079
Whereas dead code elimination
actually we'll go through and

163
00:10:03.079 --> 00:10:05.095
see if we can find things
that are never called.

164
00:10:05.095 --> 00:10:08.636
Live code inclusion is always better,
right, for the most part.

165
00:10:08.636 --> 00:10:12.793
So if you do all of your code like this,
where you're only including things that

166
00:10:12.793 --> 00:10:15.849
you use, it gives Vit
the opportunity to eliminate code.

167
00:10:15.849 --> 00:10:20.071
Let's say react-dom had some different
part that you were never going to use.

168
00:10:20.071 --> 00:10:23.525
It wouldn't include that in
your bundle anymore, right,

169
00:10:23.525 --> 00:10:25.606
which is objectively a good thing.

170
00:10:25.606 --> 00:10:28.269
Now, I think no matter what you do,
because of react-dom,

171
00:10:28.269 --> 00:10:29.902
it includes everything every time.

172
00:10:29.902 --> 00:10:32.075
So I don't think we're
actually saving anything here.

173
00:10:32.075 --> 00:10:36.264
I'm just trying to get you in a good habit
of an only including the things that

174
00:10:36.264 --> 00:10:36.793
you use.

175
00:10:36.793 --> 00:10:39.649
But that's what those Cali brackets mean.

176
00:10:39.649 --> 00:10:43.695
It's like I'm only including part of this,
which I only use here, right?

177
00:10:43.695 --> 00:10:49.746
So, head back to your
package.json to your scripts tag.

178
00:10:49.746 --> 00:10:51.516
We have format, we have lint here.

179
00:10:51.516 --> 00:10:53.294
Let's put a couple more in here.

180
00:10:53.294 --> 00:10:57.509
We're gonna put Dev,
which is just gonna be Vit.

181
00:10:57.509 --> 00:11:02.548
That's just gonna be like start
my DevServer and get me going.

182
00:11:02.548 --> 00:11:06.294
Build, which is, get me ready for

183
00:11:06.294 --> 00:11:11.087
production, build me out to static files.

184
00:11:11.087 --> 00:11:14.224
So this is what you would run in like
CI or something like that, right?

185
00:11:16.882 --> 00:11:19.105
Okay, and then we want preview.

186
00:11:19.105 --> 00:11:21.155
I find this one to be useful and

187
00:11:21.155 --> 00:11:26.740
one of my favorite things that's different
about Vit versus other build tools.

188
00:11:26.740 --> 00:11:32.613
I wanna see my production build
before I go to production, right?

189
00:11:32.613 --> 00:11:35.893
So what preview does is,
it runs Vit build, and

190
00:11:35.893 --> 00:11:39.098
then it shows you what Vit build built for
you.

191
00:11:39.098 --> 00:11:41.866
If you were doing this with Parcel or
something like that,

192
00:11:41.866 --> 00:11:45.706
you'd have to do Parcel build, and then
you'd have to use some sort of static web

193
00:11:45.706 --> 00:11:48.036
server to spin it up and
shove yourself, right?

194
00:11:48.036 --> 00:11:50.232
It's fine, it's not that hard to do.

195
00:11:50.232 --> 00:11:56.026
But with Vit preview,
it does all that for you.

196
00:11:56.026 --> 00:12:03.586
Okay, and now I can say npm run dev,
I get this nice little thing going here.

197
00:12:03.586 --> 00:12:09.126
And now I can say,
open this in my browser.

198
00:12:09.126 --> 00:12:13.376
And now I have Adopt Me
running on my local computer.

199
00:12:15.747 --> 00:12:19.494
So I don't want that in Firefox,
I want this here.

200
00:12:19.494 --> 00:12:23.052
So [INAUDIBLE] you have
sort of file one here.

201
00:12:23.052 --> 00:12:27.667
Close this tab please.

202
00:12:27.667 --> 00:12:29.580
The one that we were using before, right?

203
00:12:29.580 --> 00:12:32.088
Please close that one
that your file opened.

204
00:12:32.088 --> 00:12:36.656
And now just go to local host, 5173,

205
00:12:36.656 --> 00:12:40.318
that's what Vit runs on always.

206
00:12:40.318 --> 00:12:41.403
And you should see the same thing.

207
00:12:41.403 --> 00:12:44.664
But the reason why I'm being very explicit
like, please close this, itt's very

208
00:12:44.664 --> 00:12:47.419
easy to come back to your browser and
not look at which tab you're on.

209
00:12:47.419 --> 00:12:51.774
And you're refreshing, it's like, why is
this breaking, why is this not working?

210
00:12:51.774 --> 00:12:55.765
It's cuz you're not using your DevServer.

211
00:12:55.765 --> 00:12:58.434
Cuz if I open that and I refresh that,
you're gonna get not rendered, right?

212
00:12:58.434 --> 00:13:01.523
Because now React is no longer in the
project, and so doesn't know what to do.

213
00:13:03.871 --> 00:13:07.635
So please make sure
you're on localhost 5173.

214
00:13:07.635 --> 00:13:09.455
Any questions?

215
00:13:09.455 --> 00:13:11.750
&gt;&gt; Getting the error you
installed ES build for

216
00:13:11.750 --> 00:13:14.735
another platform than the one
you're currently using?

217
00:13:14.735 --> 00:13:16.076
&gt;&gt; That's interesting.

218
00:13:19.654 --> 00:13:24.583
So it sounds when MPM installed Vit,

219
00:13:24.583 --> 00:13:29.353
it chose the wrong ES build for you.

220
00:13:29.353 --> 00:13:32.489
I'm gonna guess it's an Intel Mac, yeah?

221
00:13:32.489 --> 00:13:35.339
&gt;&gt; So my guess is [CROSSTALK]
&gt;&gt; I'm sorry, it's a-

222
00:13:35.339 --> 00:13:37.266
&gt;&gt; M one?

223
00:13:37.266 --> 00:13:38.371
So this is an M one max.

224
00:13:38.371 --> 00:13:41.303
So it does work on M one max.

225
00:13:41.303 --> 00:13:44.837
It probably installed the intel build for
it, not the.

226
00:13:44.837 --> 00:13:50.199
So maybe notice, self identifying
is the wrong architecture?

227
00:13:50.199 --> 00:13:51.566
That's what I look into.

228
00:13:51.566 --> 00:13:58.611
All right, so if you go back to
your React hold courses here,

229
00:13:58.611 --> 00:14:04.563
we are all the way through Vit here and
our JS tools.

230
00:14:04.563 --> 00:14:07.302
And you can see here we now have another.

231
00:14:07.302 --> 00:14:11.141
If you're this far and
all your stuff is not working correctly,

232
00:14:11.141 --> 00:14:13.144
please to top over 02 JS tools.

233
00:14:13.144 --> 00:14:17.660
And you can see all the stuff that we just
did together here should be right here.

234
00:14:20.972 --> 00:14:23.997
And if you do open one of these.

235
00:14:23.997 --> 00:14:27.340
So let's say I installed it, cloned it,
and I go into this directory,

236
00:14:27.340 --> 00:14:31.380
just make sure you do MPM install, right,
to get all of the dependencies installed.

237
00:14:31.380 --> 00:14:34.380
And then you can run MPM, run Dev,
and everything should just be working.

