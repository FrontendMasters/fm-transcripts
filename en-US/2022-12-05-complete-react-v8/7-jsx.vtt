WEBVTT

1
00:00:00.000 --> 00:00:05.712
All right so
we just finished the JS tool section,

2
00:00:05.712 --> 00:00:10.747
we are now moving into
core React concepts.

3
00:00:10.747 --> 00:00:13.311
We are here at JSX, this one here.

4
00:00:13.311 --> 00:00:21.050
And if you need to pick up,
then you can from here from 02-js-tools.

5
00:00:21.050 --> 00:00:24.872
So far we've been working without JSX,
but now that we have Vite and

6
00:00:24.872 --> 00:00:28.776
all of our tools in place, we can go
ahead and start working with JSX.

7
00:00:28.776 --> 00:00:32.730
So I want you to think about your code for
a second,

8
00:00:32.730 --> 00:00:37.542
let's just even glance maybe
at App.jsx here for a second.

9
00:00:37.542 --> 00:00:43.089
We are writing JavaScript that
is imitating HTML, right?

10
00:00:43.089 --> 00:00:49.091
We have a div and inside of that we have
indented here this h1, h2, h2, right?

11
00:00:49.091 --> 00:00:54.044
It's JavaScript meant to imitate JSX,
or sorry,

12
00:00:54.044 --> 00:00:56.932
it's meant to imitate HTML.

13
00:00:56.932 --> 00:01:01.649
It would be nice if we could just
directly write HTML since that's

14
00:01:01.649 --> 00:01:04.754
what we're trying to generate at the end.

15
00:01:04.754 --> 00:01:08.334
Otherwise, you have to go through
this mental translation layer of,

16
00:01:08.334 --> 00:01:10.165
I have this idea of HTML that I want.

17
00:01:10.165 --> 00:01:15.160
I have to write this JavaScript that then
gets translated back to HTML, right?

18
00:01:15.160 --> 00:01:18.140
So it's this multiple hops.

19
00:01:18.140 --> 00:01:20.879
It'd be cool if our tools could
just make the hops for us, and

20
00:01:20.879 --> 00:01:23.120
we get to describe what we want.

21
00:01:23.120 --> 00:01:27.230
That is the principle behind JSX.

22
00:01:27.230 --> 00:01:32.088
So one of my favorite fun facts
about where JSX actually came from,

23
00:01:32.088 --> 00:01:35.313
obviously invented at Facebook, as well.

24
00:01:35.313 --> 00:01:41.660
They invented JSX to appease
the PHP developers at Facebook.

25
00:01:41.660 --> 00:01:45.311
They thought, if we show them something
that looks like what they're already

26
00:01:45.311 --> 00:01:47.487
writing, they're gonna be into it, right?

27
00:01:47.487 --> 00:01:51.183
And so they invented it, not so
they thought that they would use it and

28
00:01:51.183 --> 00:01:55.796
that people would like it, but they did it
to to appease their back-end developers.

29
00:01:55.796 --> 00:01:59.498
Or so I'm told, so the legend goes, right?

30
00:01:59.498 --> 00:02:00.938
And then it turns out everyone
just liked it anyway.

31
00:02:00.938 --> 00:02:05.238
And so, yeah,
they ended up sticking with it.

32
00:02:05.238 --> 00:02:08.225
But I remember when it
very first came out and

33
00:02:08.225 --> 00:02:11.390
Pete Hunt talked about
it at some conference.

34
00:02:11.390 --> 00:02:16.072
And everyone was like, why are they
writing HTML in our JavaScript right?

35
00:02:16.072 --> 00:02:20.540
And that was a big barrier to entry for
React.

36
00:02:20.540 --> 00:02:23.960
And so, for a good year, every time
that React came up on Hacker News and

37
00:02:23.960 --> 00:02:26.415
stuff like that,
people would just make fun of it.

38
00:02:26.415 --> 00:02:29.201
It was like 2013, 2012 kind of area.

39
00:02:29.201 --> 00:02:33.171
And eventually some bigger companies
like Reddit, like Khan Academy,

40
00:02:33.171 --> 00:02:37.220
started shipping it and people were like,
okay, this is a serious deal.

41
00:02:37.220 --> 00:02:42.456
And then it hit some sort of critical
mass, Airbnb started using it,

42
00:02:42.456 --> 00:02:47.715
and Netflix started using it, and
some bigger companies like that.

43
00:02:47.715 --> 00:02:51.826
And overnight everything like, Ember
was dropped, Angular was dropped, and

44
00:02:51.826 --> 00:02:53.741
everyone just started using React.

45
00:02:53.741 --> 00:02:59.700
All this to say, we're gonna start
putting HTML into our JavaScript.

46
00:02:59.700 --> 00:03:03.480
Now, if you've never done this before, it
feels a little weird and a little gross.

47
00:03:03.480 --> 00:03:05.980
I felt a little weird and
gross when I started doing it.

48
00:03:05.980 --> 00:03:09.144
But let me assure you that, one,
everyone does it this way, peer pressure,

49
00:03:09.144 --> 00:03:10.760
which is great, it's a great reason.

50
00:03:12.120 --> 00:03:17.260
And, two,
it's gonna help you write cleaner code.

51
00:03:17.260 --> 00:03:20.800
It's gonna help you write code
that's easier to understand.

52
00:03:20.800 --> 00:03:23.636
It's very different than putting
JavaScript into your HTML.

53
00:03:23.636 --> 00:03:27.145
Which if you've been writing code as
long as I have, we used to do that and

54
00:03:27.145 --> 00:03:28.135
that was a bad idea.

55
00:03:28.135 --> 00:03:31.240
And putting H on your JavaScript,
though, that's a good idea.

56
00:03:31.240 --> 00:03:32.670
So this goes one way and not the other.

57
00:03:33.990 --> 00:03:38.533
Anyway, make sure you have this, it's
called App.jsx, we definitely want that.

58
00:03:41.285 --> 00:03:46.122
And then I want you to create another
file here next we call Pet.jsx.

59
00:03:46.122 --> 00:03:50.605
And we're gonna move this part right here,
Pet,

60
00:03:50.605 --> 00:03:55.852
into its own file, Okay?

61
00:03:55.852 --> 00:04:00.736
So we have this file here, Pet, and
down here at the bottom we're gonna say,

62
00:04:00.736 --> 00:04:06.245
export default Pet, Okay?

63
00:04:06.245 --> 00:04:11.612
So one of the advantages of using a build
tool like Vite, is now we can separate

64
00:04:11.612 --> 00:04:16.580
our files into separate files, so
we can have little smaller modules.

65
00:04:16.580 --> 00:04:19.603
Vite is gonna be the tool that
actually stitches it back

66
00:04:19.603 --> 00:04:21.189
together at the end, okay?

67
00:04:21.189 --> 00:04:24.699
And so if we wanted this to
work just as is, we'd say,

68
00:04:24.699 --> 00:04:27.511
import React from 'react', like that.

69
00:04:27.511 --> 00:04:32.322
And then here we're gonna
say import Pet from

70
00:04:32.322 --> 00:04:37.772
'./Pet', Okay?

71
00:04:37.772 --> 00:04:38.678
Everything's happy now.

72
00:04:41.959 --> 00:04:46.815
So we have this JavaScript
that's imitating HTML.

73
00:04:46.815 --> 00:04:50.030
It'd be really great if we
could just have HTML directly.

74
00:04:50.030 --> 00:04:52.590
So I'm just gonna comment this out so
you can see what this looks like.

75
00:04:52.590 --> 00:04:55.506
I'm gonna say const Pet =, and

76
00:04:55.506 --> 00:05:00.691
it's gonna take in props and
it's going to return this.

77
00:05:00.691 --> 00:05:04.988
I'm gonna say, return, and I'm just
gonna directly start writing my HTML.

78
00:05:16.569 --> 00:05:24.590
Or props.name, rather, props.animal,

79
00:05:30.556 --> 00:05:33.306
And props.breed.

80
00:05:40.908 --> 00:05:48.770
These lines and
these lines are exactly equivalent.

81
00:05:52.860 --> 00:05:57.819
I would bet, if you go look at
the output of what Vite creates for

82
00:05:57.819 --> 00:06:00.541
you, this might literally be it.

83
00:06:00.541 --> 00:06:02.149
If it's not, it's very close.

84
00:06:05.139 --> 00:06:09.202
So I want you to ask yourself,
between these two things,

85
00:06:09.202 --> 00:06:11.835
which one do you find more readable?

86
00:06:15.018 --> 00:06:15.809
&gt;&gt; The second.

87
00:06:15.809 --> 00:06:20.381
&gt;&gt; The second, I think that's a fairly
uncontroversial opinion to say that this

88
00:06:20.381 --> 00:06:25.385
more purely expresses your intent as a
developer, there's less indirection here.

89
00:06:27.896 --> 00:06:29.540
I'm all about readable code.

90
00:06:29.540 --> 00:06:30.750
I'm all about maintainable code.

91
00:06:30.750 --> 00:06:33.250
I've written enough bad code, and
I've had to maintain enough bad code.

92
00:06:34.850 --> 00:06:40.590
That I erred so strongly and the site was
like, can a developer read this later?

93
00:06:42.000 --> 00:06:44.744
I don't optimize for writing code,
I optimize for maintaining code.

94
00:06:44.744 --> 00:06:48.868
It's to the point that I believe that code
is actually just annotating how to solve

95
00:06:48.868 --> 00:06:54.115
a problem that a computer
happens to understand, Right?

96
00:06:56.868 --> 00:06:59.347
So because I find this so
much more readable,

97
00:06:59.347 --> 00:07:03.330
even though I had to introduce a build
step to understand how this works,

98
00:07:03.330 --> 00:07:06.026
which in general is a bit of a code smell,
right?

99
00:07:06.026 --> 00:07:12.171
That I have to introduce tools and
augment the language, this is worth it.

100
00:07:12.171 --> 00:07:13.434
And I'm not alone thinking this.

101
00:07:13.434 --> 00:07:16.129
Everyone that I know that writes React,
writes React this way.

102
00:07:16.129 --> 00:07:22.479
I'm good friends with the person who
created Emotion JS, Kye, great guy.

103
00:07:22.479 --> 00:07:26.395
For the longest time wrote this, for
the exact reasons I was just describing,

104
00:07:26.395 --> 00:07:28.484
he found that to be an unacceptable cost.

105
00:07:28.484 --> 00:07:32.144
But even he came around eventually, right?

106
00:07:32.144 --> 00:07:34.512
And he's the last person
that I knew that wrote this.

107
00:07:34.512 --> 00:07:36.063
And he came around some years ago.

108
00:07:36.063 --> 00:07:40.196
So if this still feels weird to you,
I'm just gonna invite you for

109
00:07:40.196 --> 00:07:44.040
the rest of this class,
just follow on with me and write JSX.

110
00:07:44.040 --> 00:07:46.172
And if at the end of it,
you still don't like it,

111
00:07:46.172 --> 00:07:48.100
then by all means go
back to create element.

112
00:07:48.100 --> 00:07:55.711
But for now just try this and you'll see
over time it just gets really natural.

113
00:07:55.711 --> 00:07:59.171
Okay, so go ahead and delete this.

114
00:08:01.902 --> 00:08:05.850
It's gonna say, hey,
you don't use React here.

115
00:08:07.010 --> 00:08:10.660
So we actually could go set up ESLint to
understand that this actually is calling

116
00:08:10.660 --> 00:08:11.450
React, right?

117
00:08:11.450 --> 00:08:14.020
Because implicitly this is
calling React.createElement.

118
00:08:15.330 --> 00:08:18.363
However, within latest versions of React,
you can even get rid of that.

119
00:08:18.363 --> 00:08:20.670
So you can actually just do that and
everything works.

120
00:08:22.670 --> 00:08:25.822
It knows that if you're importing JSX,
you're importing React, and

121
00:08:25.822 --> 00:08:28.420
the build tool will just handle that for
you.

122
00:08:28.420 --> 00:08:32.838
So there you go,
that is your first bit of JSX.

123
00:08:32.838 --> 00:08:38.295
Again, you must call this Pet.jsx for
Vite to understand,

124
00:08:38.295 --> 00:08:42.581
you want JSX transformations
applied to this.

125
00:08:42.581 --> 00:08:48.981
If you call Pet.js, Vite doesn't know
that use JSX, and is gonna fail on this.

126
00:08:48.981 --> 00:08:54.006
So please do call this Pet.jsx.

127
00:08:54.006 --> 00:08:57.630
It's possible to fix, but
if you wanna go fix that and use JS,

128
00:08:57.630 --> 00:09:00.094
I'm gonna leave that to you to go do that.

129
00:09:00.094 --> 00:09:02.631
&gt;&gt; What's the default
in export default Pet?

130
00:09:02.631 --> 00:09:07.617
&gt;&gt; It's a function of how ES6
modules work, or ES2015 modules are,

131
00:09:07.617 --> 00:09:11.869
just ESM is what people call them now,
ACMA script modules.

132
00:09:13.370 --> 00:09:16.210
Notice I say, import Pet, from here.

133
00:09:16.210 --> 00:09:19.528
It has a top level thing that
has no curly braces around it,

134
00:09:19.528 --> 00:09:21.236
that's the default export.

135
00:09:21.236 --> 00:09:28.242
If I did export const Thing = Pet,
so now I've given it a name,

136
00:09:28.242 --> 00:09:32.620
so this would be called a named export.

137
00:09:32.620 --> 00:09:38.652
So if I wanted to import,
let's just say this is 5, right?

138
00:09:38.652 --> 00:09:40.031
Just something different.

139
00:09:40.031 --> 00:09:46.880
If I wanted to import that here, I would
have to say Thing like that, right?

140
00:09:46.880 --> 00:09:49.570
You'd have to import the named
thing from the other file.

141
00:09:51.140 --> 00:09:54.902
So the default part is just like
the general top level export thing,

142
00:09:54.902 --> 00:09:56.560
that's the default export.

143
00:09:59.580 --> 00:10:02.544
People have opinions about when to use,
and some people would say,

144
00:10:02.544 --> 00:10:04.830
never use default exports, right?

145
00:10:04.830 --> 00:10:06.100
I do, cuz I think it's readable.

146
00:10:06.100 --> 00:10:08.360
But, again, it's kind of up to you.

147
00:10:08.360 --> 00:10:10.000
That's an opinion, cool.

148
00:10:10.000 --> 00:10:12.588
Let's go update App.jsx now.

149
00:10:15.334 --> 00:10:19.052
So delete import React,
we don't need that anymore.

150
00:10:19.052 --> 00:10:26.888
And we are going to rewrite this in JSX.

151
00:10:26.888 --> 00:10:27.681
I'm just gonna delete it.

152
00:10:30.447 --> 00:10:34.829
Div h1 Adopt Me.

153
00:10:41.522 --> 00:10:44.673
And then we're gonna give
it a pet component, right?

154
00:10:44.673 --> 00:10:48.874
So this is why I was saying it's really
important that you call things with

155
00:10:48.874 --> 00:10:49.969
a capital letter.

156
00:10:49.969 --> 00:10:50.945
Remember I said,

157
00:10:50.945 --> 00:10:55.497
if it's a string that it's just going to
literally output whatever the string is,

158
00:10:55.497 --> 00:11:00.000
and if it's a capital letter or if it's
a component it'll render the component.

159
00:11:02.170 --> 00:11:04.786
The way that JSX differentiates this,
if it's a capital letter,

160
00:11:04.786 --> 00:11:06.870
it knows that it's
a component that you created.

161
00:11:06.870 --> 00:11:08.958
If it's a lowercase,
like it is here with the h1,

162
00:11:08.958 --> 00:11:10.570
it's going to literally output that.

163
00:11:11.610 --> 00:11:16.160
So x-some-thing, write it like this.

164
00:11:16.160 --> 00:11:20.046
This is going to literally
output x something to the DOM.

165
00:11:20.046 --> 00:11:22.119
Or an h1, it'll output h1.

166
00:11:22.119 --> 00:11:27.765
But if I had h1 here, it would think
that it's a component that I created.

167
00:11:27.765 --> 00:11:31.930
So that's why
the capitalization is required.

168
00:11:31.930 --> 00:11:35.161
So lowercase h1, capital P, Pet,

169
00:11:37.476 --> 00:11:41.868
name="Luna", animal="dog", and

170
00:11:41.868 --> 00:11:50.802
breed="Havanese", Okay?

171
00:11:50.802 --> 00:11:53.803
Are you familiar with self-closing tags,
where you input and

172
00:11:53.803 --> 00:11:56.359
you have to put the slash and
angle bracket at the end?

173
00:11:56.359 --> 00:12:01.370
It's optional in HTML,
it is not optional in JSX,

174
00:12:01.370 --> 00:12:05.107
you must put that self-closing tag.

175
00:12:05.107 --> 00:12:11.288
So if you have an input,
that is valid HTML, right?

176
00:12:11.288 --> 00:12:14.903
Without the self-closing tag to it,
it's not valid JSX.

177
00:12:14.903 --> 00:12:18.797
If you have an input you must put
the slash there to let it know that it's

178
00:12:18.797 --> 00:12:20.720
a void tag or a self-closing tag.

179
00:12:22.390 --> 00:12:24.620
That's just a JSX requirement.

180
00:12:24.620 --> 00:12:27.970
But, fun fact, you can do things like
div and have a self-closing div.

181
00:12:27.970 --> 00:12:30.580
That's not valid HTML, it's valid JSX.

182
00:12:33.050 --> 00:12:35.060
Some people think that that's
a really bad idea to do it.

183
00:12:35.060 --> 00:12:39.380
I do it anyway,
because I still find it readable, right?

184
00:12:39.380 --> 00:12:40.130
Up to you.

185
00:12:40.130 --> 00:12:44.364
All right, so I have this pet,
I'm gonna just copy that a few times.

186
00:12:44.364 --> 00:12:47.065
This was Pepper.

187
00:12:47.065 --> 00:12:51.753
Pepper was a bird, and it is a Cockatiel.

188
00:12:51.753 --> 00:12:55.668
And this was Doink the cat.

189
00:12:58.487 --> 00:13:01.307
Which is mixed, okay?

190
00:13:01.307 --> 00:13:05.884
And then down here,
instead of React.createElement here,

191
00:13:05.884 --> 00:13:09.675
I'm just gonna have
self-closing App like that.

192
00:13:09.675 --> 00:13:14.004
You do currently have ES sent errors,
so the fact that this is underlined,

193
00:13:14.004 --> 00:13:16.355
expected, we will fix it momentarily.

194
00:13:19.815 --> 00:13:24.360
I'm gonna argue that this is way more
readable than what we just had, right?

195
00:13:25.500 --> 00:13:29.432
Very compact, very succinct,
very readable at a high level.

196
00:13:29.432 --> 00:13:31.602
Did we fix index.html?

197
00:13:31.602 --> 00:13:33.530
If not, make sure that this is JSX here.

198
00:13:33.530 --> 00:13:36.274
I just had that in my notes here
that you should go fix that.

