WEBVTT

1
00:00:00.430 --> 00:00:05.085
The next thing I'm gonna show you how to
do really quick is we're gonna set up

2
00:00:05.085 --> 00:00:06.269
ESLint together.

3
00:00:06.269 --> 00:00:09.501
And I know this is probably some people's
least favorite part of the course is

4
00:00:09.501 --> 00:00:10.607
setting up all the tools.

5
00:00:10.607 --> 00:00:13.093
My favorite part about this is,
we're gonna set it up, and

6
00:00:13.093 --> 00:00:14.948
then we're gonna forget about it, right?

7
00:00:14.948 --> 00:00:17.641
And it's just going to help us
catch problems as we're going.

8
00:00:17.641 --> 00:00:20.622
And so the reason why I have students
do this as we go is this will help

9
00:00:20.622 --> 00:00:23.198
you catch problems while
you're going on in your class.

10
00:00:23.198 --> 00:00:27.675
This will keep you focused on React, and
not on like weird JavaScript problems.

11
00:00:27.675 --> 00:00:29.540
So that's the reason why you and

12
00:00:29.540 --> 00:00:34.108
I are setting this up together even if
it's a little bit tedious and annoying.

13
00:00:34.108 --> 00:00:37.641
So we're gonna set ESLint together
prettier catches all of your formatting

14
00:00:37.641 --> 00:00:41.520
problems, and ESLint is going to catch
very simple JavaScript problems, right?

15
00:00:41.520 --> 00:00:44.426
If I have something here called App, and

16
00:00:44.426 --> 00:00:49.311
down here I call App like this and
I forget a p or something like that.

17
00:00:49.311 --> 00:00:51.617
This is something that ESLint is like,
hey,

18
00:00:51.617 --> 00:00:55.269
you're referencing something that
you have not talked about before.

19
00:00:55.269 --> 00:00:59.176
This is probably a problem of some sort,
right?

20
00:00:59.176 --> 00:01:01.185
Those are the kinds of problems
that ESLint can catch for you.

21
00:01:01.185 --> 00:01:07.364
So I want you to come up here, and
we're gonna install a few things.

22
00:01:07.364 --> 00:01:10.512
So go to your terminal.

23
00:01:10.512 --> 00:01:12.537
We're gonna npm install-D.

24
00:01:12.537 --> 00:01:20.056
We're gonna do eslint@8.24.0,

25
00:01:20.056 --> 00:01:28.871
and eslint-config-prettier@8.5.0.

26
00:01:32.556 --> 00:01:41.331
Okay, I have no vulnerabilities here.

27
00:01:41.331 --> 00:01:44.091
By the time that you're
watching this course,

28
00:01:44.091 --> 00:01:46.996
I guarantee there's gonna
be vulnerabilities.

29
00:01:46.996 --> 00:01:49.211
It's okay, right?
You're not shipping this to production.

30
00:01:49.211 --> 00:01:53.596
These are developer tools for
the most part, not an attack vector.

31
00:01:53.596 --> 00:02:00.295
For what we're doing, so it's okay
if this number is not zero, okay?

32
00:02:00.295 --> 00:02:02.910
Make a file here es.lintrc.json.

33
00:02:02.910 --> 00:02:07.749
I like the JSON way, but you can do
it with YAML, you can do it with .JS,

34
00:02:07.749 --> 00:02:10.273
but we're not doing anything wild.

35
00:02:10.273 --> 00:02:12.192
So we're just gonna do JSON.

36
00:02:14.328 --> 00:02:16.839
Okay, we're gonna have extends up here.

37
00:02:16.839 --> 00:02:21.126
I have a very bare bones
ESLint configuration.

38
00:02:21.126 --> 00:02:25.810
Now, I used to use like
really heavy handed ones like

39
00:02:25.810 --> 00:02:30.396
the Airbnb config or
standard or things like that.

40
00:02:30.396 --> 00:02:34.605
These days I just do eslint:recommended.

41
00:02:34.605 --> 00:02:39.627
This is a very non-controversial set
of rules of like, don't use variables

42
00:02:39.627 --> 00:02:45.207
that you haven't created yet, this is
basically if it's in eslint:recommended.

43
00:02:45.207 --> 00:02:47.774
It's definitely a problem and
it's not an opinion.

44
00:02:47.774 --> 00:02:52.361
If you're using the Airbnb one like
there's definitely some strong

45
00:02:52.361 --> 00:02:53.713
opinions in there.

46
00:02:53.713 --> 00:02:55.701
And you can disagree with them, but

47
00:02:55.701 --> 00:02:59.354
nothing in ESLint recommends
that you're gonna disagree with.

48
00:03:00.560 --> 00:03:01.290
So that's the first one.

49
00:03:01.290 --> 00:03:06.732
The second one is prettier, ESLint can do
some formatting things like you can say,

50
00:03:06.732 --> 00:03:12.118
hey, this person has too many indents or
not enough indents and things like that.

51
00:03:12.118 --> 00:03:15.976
We ESLint to not worry about
that because we have prettier,

52
00:03:15.976 --> 00:03:18.607
a whole separate tool doing that for us.

53
00:03:18.607 --> 00:03:23.332
So this prettier config all it does
is it just ignores a bunch of rules.

54
00:03:23.332 --> 00:03:27.672
It doesn't add anything,
it just removes stuff.

55
00:03:27.672 --> 00:03:31.758
This extends array for
the most part doesn't matter.

56
00:03:31.758 --> 00:03:33.682
The only thing is prettier comes last.

57
00:03:33.682 --> 00:03:37.675
Your prettier one should always be last,

58
00:03:37.675 --> 00:03:42.250
100% of the time, unexceptional, okay?

59
00:03:42.250 --> 00:03:47.456
Plugins, we have no plugins yet,
we will have plugins,

60
00:03:47.456 --> 00:03:52.343
and then we have some parserOptions,
ecmaVersion.

61
00:03:52.343 --> 00:03:57.419
We are gonna use 20, you can put latest,

62
00:03:57.419 --> 00:04:04.517
I put 2022 in here SourceType,
it is a module.

63
00:04:06.573 --> 00:04:12.245
EcmaFeatures, we're gonna
use jsx fairly soon.

64
00:04:12.245 --> 00:04:15.283
So just go ahead and put that in there.

65
00:04:20.158 --> 00:04:23.350
Okay, let's get for parserOptions and
then we have an env,

66
00:04:23.350 --> 00:04:25.109
we're gonna be working in es6.

67
00:04:25.109 --> 00:04:29.919
We are going to be working in the browser,

68
00:04:29.919 --> 00:04:34.322
and we are going to be working in node.

69
00:04:34.322 --> 00:04:36.515
You might ask what all
these things are doing.

70
00:04:36.515 --> 00:04:37.427
For the most part,
I'll be honest with you, I just copy and

71
00:04:37.427 --> 00:04:38.001
paste this from project to project.

72
00:04:38.001 --> 00:04:42.830
I don't really think about too much
what's going into these configs anymore.

73
00:04:42.830 --> 00:04:47.783
But ecmaVersion will tell like,
if I'm targeting 2016 and

74
00:04:47.783 --> 00:04:51.274
async await, it's not gonna work, right?

75
00:04:51.274 --> 00:04:54.115
So it's basically how modern of
JavaScript do you want here?

76
00:04:54.115 --> 00:04:58.507
The module type is basically
like I'm doing an import and

77
00:04:58.507 --> 00:05:00.712
export not common JS stuff.

78
00:05:00.712 --> 00:05:03.840
I'm gonna use jsx,
it's saying like account for that.

79
00:05:03.840 --> 00:05:07.022
And then es6 browser and
node is just saying,

80
00:05:07.022 --> 00:05:10.379
don't give me an error if you see fetch,
right?

81
00:05:10.379 --> 00:05:13.117
Fetch is a global that
exists in the browser, or

82
00:05:13.117 --> 00:05:17.781
don't give me an error if I do like
__dirname, right, which comes from node.

83
00:05:17.781 --> 00:05:20.598
So this is just telling you what
sort of environments that you're

84
00:05:20.598 --> 00:05:23.170
gonna be working and
what kind of Global's are available.

85
00:05:25.418 --> 00:05:28.759
Now if I was doing like
a much more careful ESLint,

86
00:05:28.759 --> 00:05:32.272
I'd have the browser one
only apply in the browser.

87
00:05:32.272 --> 00:05:34.568
I'd have the node one only apply in node.

88
00:05:34.568 --> 00:05:41.061
I'm not being so cautious right
now though, so this is fine Okay.

89
00:05:42.230 --> 00:05:46.393
So you can see here already,
it's already finding areas for me.

90
00:05:46.393 --> 00:05:50.778
So the extension that you wanna install
for that, here is the ESLlint1,

91
00:05:50.778 --> 00:05:52.772
it's directly from Microsoft.

92
00:05:52.772 --> 00:05:54.677
Just go ahead and install that.

93
00:05:54.677 --> 00:05:59.162
I will say that notoriously,
this is a finicky extension.

94
00:05:59.162 --> 00:06:00.929
Sometimes it gets really
weird about stuff.

95
00:06:02.804 --> 00:06:07.888
It's partially my fault because I worked
at the team that worked on this so

96
00:06:07.888 --> 00:06:11.742
you can blame me a little bit for
it, but it's worth it.

97
00:06:11.742 --> 00:06:16.341
So go ahead install that,
you might need to restart VS Code for

98
00:06:16.341 --> 00:06:20.332
it to work, but go ahead and
have that one installed.

99
00:06:20.332 --> 00:06:24.840
And then let's go ahead and
put back into our package.JSON,

100
00:06:24.840 --> 00:06:29.184
the same sort of thing for
people that are not using VS Code.

101
00:06:30.404 --> 00:06:36.534
So I'm showing you how to put like
the commands in here for other people.

102
00:06:36.534 --> 00:06:42.120
You might ask Brian how often do you
use npm run format on your code?

103
00:06:42.120 --> 00:06:47.080
And the answer is never,
VS Code always does it for me.

104
00:06:47.080 --> 00:06:52.389
But here we are gonna do ESLint, and
you can literally just copy this

105
00:06:52.389 --> 00:06:57.983
part of the string right there,
because it's the same thing.

106
00:06:57.983 --> 00:07:00.263
And then just do --quiet at the end.

107
00:07:00.263 --> 00:07:03.657
It has a lot of output otherwise.

108
00:07:03.657 --> 00:07:06.614
So I just put quiet,
just tell me when there are problems.

109
00:07:06.614 --> 00:07:08.897
I don't care about anything else.

110
00:07:08.897 --> 00:07:10.919
Just tell me if I have a problem.

111
00:07:10.919 --> 00:07:13.219
Otherwise, please leave me alone.

112
00:07:14.229 --> 00:07:17.948
So you can actually run it if you want to,
and you will see some errors,

113
00:07:17.948 --> 00:07:18.909
which we expect.

114
00:07:21.125 --> 00:07:26.544
Which is mostly reaction is not defined,
which is a good error for us to see.

115
00:07:26.544 --> 00:07:33.206
Just sometimes when I have issues this
is just a useful thing for you to know.

116
00:07:33.206 --> 00:07:36.890
You can do npm run lint-- --debug.

117
00:07:36.890 --> 00:07:42.804
So the -- here means I'm going to
pass something not to npm, right?

118
00:07:42.804 --> 00:07:46.273
If I leave this off,
it's gonna pass debug to npm.

119
00:07:46.273 --> 00:07:50.499
I don't wanna pass it to npm,
I wanna pass it to ESLint.

120
00:07:50.499 --> 00:07:53.556
So it's passing it on to
the underlying command.

121
00:07:53.556 --> 00:07:57.648
And then here you can see what
did it load, how did it load it,

122
00:07:57.648 --> 00:07:59.180
did I have any issues?

123
00:07:59.180 --> 00:08:02.974
It's very noisy, right So

124
00:08:02.974 --> 00:08:08.292
that can be useful if you're having issues
you can see all the rules that has turned

125
00:08:08.292 --> 00:08:13.704
on all of them that are turned off, just
useful for someone who's having an issue.

126
00:08:14.713 --> 00:08:20.090
And sometimes ESLint can fix things for
you, there's nothing to fix here but

127
00:08:20.090 --> 00:08:24.558
like some sometimes it has rules
that it can fix automatically,

128
00:08:24.558 --> 00:08:28.135
there's not too many of them but
sometimes it can.

129
00:08:28.135 --> 00:08:32.410
So that's what -- fix would do for
you, okay?

130
00:08:32.410 --> 00:08:37.400
We're gonna fix the errors, but right
now you should have errors, that's fine.

131
00:08:37.400 --> 00:08:42.000
You can see that this has already
turned red in here for me.

132
00:08:42.000 --> 00:08:44.306
All expected, and
we'll fix it here in a bit, question?

133
00:08:44.306 --> 00:08:48.386
&gt;&gt; Yeah, I got a environment key es5

134
00:08:48.386 --> 00:08:53.368
is unknown in my,
&gt;&gt; Probably because yeah,

135
00:08:53.368 --> 00:08:56.620
you should have you
should have es6 not five.

136
00:08:56.620 --> 00:08:57.896
&gt;&gt; I got it.

137
00:08:57.896 --> 00:08:59.132
&gt;&gt; ES6 is another word for ES2015,
right, so that's gonna say,

138
00:08:59.132 --> 00:08:59.933
expect things like map, set, and symbol.

139
00:08:59.933 --> 00:09:05.134
There's a bunch of stuff that

140
00:09:05.134 --> 00:09:09.507
came with the "es6".

141
00:09:09.507 --> 00:09:12.239
So that's what that does for you.

142
00:09:14.096 --> 00:09:15.357
Other questions?

143
00:09:17.299 --> 00:09:21.966
All right, I swear to God
we're getting really close to

144
00:09:21.966 --> 00:09:24.457
the end of tool hell, right?

145
00:09:24.457 --> 00:09:27.327
And then we're just straight
on to React after that.

146
00:09:27.327 --> 00:09:30.241
Right now, we are building our
Create React app, basically.

147
00:09:30.241 --> 00:09:33.148
So if you say, Create React app,
create a new app for

148
00:09:33.148 --> 00:09:35.607
you, it just does all of this stuff for
you.

149
00:09:35.607 --> 00:09:38.505
And so next time you go to do that,
you'll be like, cool,

150
00:09:38.505 --> 00:09:41.358
here's a bunch of stuff that
I don't have to do anymore.

151
00:09:41.358 --> 00:09:43.789
Screw you, Brian, which is fine.

152
00:09:43.789 --> 00:09:45.141
I'm okay with that.

153
00:09:45.141 --> 00:09:48.704
I've done my job if you're
saying stuff like that.

154
00:09:50.245 --> 00:09:55.231
All right, one more thing here every
good project needs to get ignore.

155
00:09:55.231 --> 00:09:59.602
So please make a get ignore here
at the root of your project.

156
00:09:59.602 --> 00:10:01.610
Please ignore node_modules.

157
00:10:01.610 --> 00:10:06.129
Well, this doesn't use parcel anymore so
you have to ignore that,

158
00:10:06.129 --> 00:10:08.603
this is when you wanna ignore .emv.

159
00:10:08.603 --> 00:10:11.174
It's always a good one and more ignore.

160
00:10:11.174 --> 00:10:13.916
Many of you are gonna be on Macs.

161
00:10:13.916 --> 00:10:15.667
So DS_Store is always a must to ignore.

162
00:10:15.667 --> 00:10:20.117
I did find out the other day,
what DS_Store finally does,

163
00:10:20.117 --> 00:10:24.656
it's like positions of file, so
if I had my finder up here and

164
00:10:24.656 --> 00:10:28.133
drag something around like that and
moves it.

165
00:10:28.133 --> 00:10:31.561
DS_Store is the file that keeps
track of stuff like that.

166
00:10:31.561 --> 00:10:34.093
Which is silly.

167
00:10:34.093 --> 00:10:35.454
But here we are.

168
00:10:35.454 --> 00:10:40.548
And it probably does other stuff,
that's stuff that will get generated.

169
00:10:40.548 --> 00:10:47.373
Coverage, that's for intermediate React,
but it's like code coverage kind of stuff.

170
00:10:47.373 --> 00:10:51.676
And I don't want to track VS Code
directory here, so there is that as well.

171
00:10:51.676 --> 00:10:55.841
So this is just telling,
get stuff to ignore.

172
00:10:55.841 --> 00:10:59.641
You should probably track
your projects and get,

173
00:10:59.641 --> 00:11:03.180
you can just do that best and
get in it, right?

174
00:11:03.180 --> 00:11:07.511
And if you want any more information
on Git, please take Nina's class,

175
00:11:07.511 --> 00:11:10.564
on front of masters I have
left a link there to do it.

176
00:11:10.564 --> 00:11:17.333
Git is always one of those tools,
it's just worth the investment to learn.

177
00:11:17.333 --> 00:11:21.954
You're gonna spend an afternoon
learning pretty dry,

178
00:11:21.954 --> 00:11:26.782
boring stuff that I think Nina
does a good job of teaching.

179
00:11:26.782 --> 00:11:27.582
It's just worth it.

