WEBVTT

1
00:00:00.018 --> 00:00:04.392
The initial version of our app was one.

2
00:00:04.392 --> 00:00:06.217
I was the first front-end engineer and

3
00:00:06.217 --> 00:00:09.099
the only front-end engineer in
working with that designer.

4
00:00:09.099 --> 00:00:14.358
And I think out of the box,
any kind of really flexible general

5
00:00:14.358 --> 00:00:20.648
purpose styling tool, Tailwind,
whatever, doesn't really matter.

6
00:00:20.648 --> 00:00:25.556
It has stuff like red and blue,
and stuff along those lines.

7
00:00:25.556 --> 00:00:29.458
And so early me and
then now as the leader of the team,

8
00:00:29.458 --> 00:00:33.896
everyone else followed my fault
is what I'm trying to say,

9
00:00:33.896 --> 00:00:38.089
use colors like red and
blue throughout the UI, right?

10
00:00:38.089 --> 00:00:41.525
And so I work on the thing has workflows,
some of them are canceled,

11
00:00:41.525 --> 00:00:44.441
some of them are terminated,
those had color meanings.

12
00:00:44.441 --> 00:00:45.991
Design team comes in and

13
00:00:45.991 --> 00:00:51.183
now all of a sudden you wanna change what
certain colors mean throughout the UI,

14
00:00:51.183 --> 00:00:55.930
which means going through, because
not all red, red was the bad stuff.

15
00:00:55.930 --> 00:00:58.174
It was also like the little
required button.

16
00:00:58.174 --> 00:01:00.433
It was also lots of other things.

17
00:01:00.433 --> 00:01:02.558
Don't get me started on blue, right?

18
00:01:02.558 --> 00:01:07.750
[LAUGH] And so at one point, it makes
sense to no longer refer to colors,

19
00:01:07.750 --> 00:01:11.187
but to refer to the semantic meaning,
right?

20
00:01:11.187 --> 00:01:15.884
Especially once you have theming,
because you might have a color called

21
00:01:15.884 --> 00:01:20.279
light blue turns out in dark mode,
that's not light blue, right?

22
00:01:20.279 --> 00:01:22.830
And so then you need to go ahead and

23
00:01:22.830 --> 00:01:27.032
have a new philosophy on how
you go about this, right?

24
00:01:27.032 --> 00:01:30.696
And there's different extremes
to which you can take it, right?

25
00:01:30.696 --> 00:01:34.509
One is you can start even just
with the various shades of,

26
00:01:34.509 --> 00:01:37.216
no longer calling it green or whatever.

27
00:01:37.216 --> 00:01:42.075
So by default,
we start out with primary warning,

28
00:01:42.075 --> 00:01:47.730
danger, you can call it error,
call it whatever you want.

29
00:01:47.730 --> 00:01:52.546
And then informations,
which are primary, secondary warning,

30
00:01:52.546 --> 00:01:57.368
information, danger, success,
that was the one I was missing.

31
00:01:57.368 --> 00:01:59.348
[LAUGH] You can tell I'm a pessimist.

32
00:01:59.348 --> 00:02:02.604
So starting out with those colors, because
then like theoretically, if you wanna

33
00:02:02.604 --> 00:02:05.718
change all the success messages, you can
just actually find that class and just

34
00:02:05.718 --> 00:02:09.041
tweak that color versus green, which could
be used for things that are not success.

35
00:02:09.041 --> 00:02:13.429
And you don't wanna change that per se,
or blue is, again, like even more

36
00:02:13.429 --> 00:02:17.555
insidious than green and red,
which kind of tend to map very closely.

37
00:02:17.555 --> 00:02:18.671
So we don't,

38
00:02:18.671 --> 00:02:24.354
we purged all of the references through
a color in our code base, right?

39
00:02:24.354 --> 00:02:27.020
Because it made refactoring hard.

40
00:02:27.020 --> 00:02:30.882
Now, under the hood, obviously
colors are things that exist, but

41
00:02:30.882 --> 00:02:35.353
one of the things you can do is whether or
not you're doing with your own utility

42
00:02:35.353 --> 00:02:40.231
classes, your own CSS variables we have
you or with Tailwind, is sometimes, like,

43
00:02:40.231 --> 00:02:43.603
replacing the color set with
something themed devalues.

44
00:02:43.603 --> 00:02:46.680
And so I'll show a few different because
we use multiple strategies for this.

45
00:02:46.680 --> 00:02:48.734
I'll kind of show you all of them.

46
00:02:48.734 --> 00:02:53.462
One of them is if I kind of pull
out the derived color palette

47
00:02:53.462 --> 00:02:56.366
from our fun little design system.

48
00:02:56.366 --> 00:02:59.703
You've got these colors,
they have their semantic meanings or

49
00:02:59.703 --> 00:03:03.966
primary secondary accent, which is yet
just a little like the required button and

50
00:03:03.966 --> 00:03:08.516
stuff like that, and then this information
success, warning, danger, and state.

51
00:03:08.516 --> 00:03:12.675
Here's the issue,
if people on your team, or

52
00:03:12.675 --> 00:03:19.087
you on a bad day have access to colors,
you're gonna use them, right?

53
00:03:19.087 --> 00:03:24.474
So part of it becomes how do we
basically limit the access that goes,

54
00:03:24.474 --> 00:03:28.266
which is somehow hiding
them in your code base?

55
00:03:28.266 --> 00:03:32.944
And so let's say we didn't wanna
say any kind of background, and

56
00:03:32.944 --> 00:03:37.636
I've slayed, those are just my
various surface colors as well.

57
00:03:37.636 --> 00:03:41.330
So Tailwind, we can go ahead and
just kind of you can extend it,

58
00:03:41.330 --> 00:03:44.845
things of a Tailwind theme,
and then you can replace them.

59
00:03:44.845 --> 00:03:48.844
And I feel this way a lot
of any kind of UI kit and

60
00:03:48.844 --> 00:03:53.489
Tailwind in particular is
there are a lot of colors.

61
00:03:53.489 --> 00:03:54.603
Let's not be too hyperbolic.

62
00:03:54.603 --> 00:03:55.866
There's a lot of colors.

63
00:03:55.866 --> 00:04:03.016
There's also like, I think eight or
nine different border radii settings,

64
00:04:03.016 --> 00:04:06.986
like eight or nine different box shadows.

65
00:04:06.986 --> 00:04:09.418
And if you have eight or nine box shadows,

66
00:04:09.418 --> 00:04:12.555
your team will use eight or
nine box shadows, right?

67
00:04:12.555 --> 00:04:14.814
They will use eight or nine border radii.

68
00:04:14.814 --> 00:04:17.849
And then you'll try to reuse something
in a different part of the codebase and

69
00:04:17.849 --> 00:04:19.913
realize that everything looks like trash,
right?

70
00:04:19.913 --> 00:04:25.741
And so kind of beginning to part of
like implementing a design system being

71
00:04:25.741 --> 00:04:30.911
to maintain your codebase is taking
the surface area of choice and

72
00:04:30.911 --> 00:04:33.925
constraining it as much as possible.

73
00:04:33.925 --> 00:04:38.064
So let's look at how to do that
in Tailwind, but like it could.

74
00:04:38.064 --> 00:04:39.714
We'll see CSS variables in a little bit.

75
00:04:39.714 --> 00:04:45.922
I'll show you a strategy that we literally
shipped this past Friday, right?

76
00:04:45.922 --> 00:04:50.625
So I'll show you that as well and kind
of just some of our thinking around it.

77
00:04:50.625 --> 00:04:55.907
So over in here, I've got those
colors that you saw earlier.

78
00:04:55.907 --> 00:05:00.803
One of the things I would say as
a workflow thing, and for whatever set of

79
00:05:00.803 --> 00:05:06.041
tools that you have, is if you can
automate this in some way, this is great.

80
00:05:06.041 --> 00:05:08.981
So we happen to use Figma, but

81
00:05:08.981 --> 00:05:14.636
there's always a version of
this that'll work for you.

82
00:05:14.636 --> 00:05:15.725
There are plugins.

83
00:05:15.725 --> 00:05:22.069
So, for instance,
there's variables to CSS.

84
00:05:22.069 --> 00:05:27.254
This tool is great,
because I can grab this case colors, and

85
00:05:27.254 --> 00:05:34.079
then I can either generate a Tailwind
theme or honestly CSS variables, right?

86
00:05:34.079 --> 00:05:41.372
And from the design system in
Figma generate all of the CSS for

87
00:05:41.372 --> 00:05:45.951
variables that I might need, right?

88
00:05:45.951 --> 00:05:49.963
And so this involves two things, though
this involves how you structure your code,

89
00:05:49.963 --> 00:05:52.408
and also how you collaborate
with the design team.

90
00:05:52.408 --> 00:05:54.873
Because if they're just
using hex codes willy-nilly,

91
00:05:54.873 --> 00:05:57.964
then it doesn't really matter,
like you're kind of stuck with that.

92
00:05:57.964 --> 00:05:59.676
So it involves a little bit of like,

93
00:05:59.676 --> 00:06:02.197
kind of like that collaboration
working together.

94
00:06:02.197 --> 00:06:04.949
But if you can kind of
Come up with this system,

95
00:06:04.949 --> 00:06:09.678
you can first of all come up with a set of
colors that you use and generate that, so

96
00:06:09.678 --> 00:06:12.453
at least you have a more
defined set of colors.

97
00:06:12.453 --> 00:06:16.059
The other thing that you can
do to take it one step further

98
00:06:16.059 --> 00:06:20.609
is we actually don't use those colors
in our code base at all, right?

99
00:06:20.609 --> 00:06:24.877
They're aliased to from,
if you could see these component colors.

100
00:06:24.877 --> 00:06:28.705
And Ash and I worked on this for honestly
two months because figuring out a naming

101
00:06:28.705 --> 00:06:32.134
convention that didn't drive us
insane was really, really hard, and

102
00:06:32.134 --> 00:06:34.209
it will be different in your application.

103
00:06:34.209 --> 00:06:38.353
There's no silver bullet for
solving this, but we then have, and

104
00:06:38.353 --> 00:06:43.163
this is just a smaller subset of, okay,
we've got button primary default,

105
00:06:43.163 --> 00:06:46.719
button primary hover,
button primary active, right?

106
00:06:46.719 --> 00:06:50.658
I've got that for disabled buttons,
ghost buttons, secondary buttons,

107
00:06:50.658 --> 00:06:53.059
input fields while they're disabled,
and so

108
00:06:53.059 --> 00:06:56.705
there's a bunch of name colors that
do alias to those colors, right?

109
00:06:56.705 --> 00:07:00.122
These are the only colors you're allowed
to reference in our code base, right?

110
00:07:00.122 --> 00:07:02.321
Because we just literally
hide the rest of the color.

111
00:07:02.321 --> 00:07:04.962
You can't get the rest of them.

112
00:07:04.962 --> 00:07:07.113
And so then you just say, okay,

113
00:07:07.113 --> 00:07:12.472
this button should have reference to CSS
variable that, we use CSS variables.

114
00:07:12.472 --> 00:07:15.032
It could be anything you want,
that is this color.

115
00:07:15.032 --> 00:07:17.107
So now we need to change
all the primary buttons.

116
00:07:17.107 --> 00:07:19.805
We just tweak that one variable.

117
00:07:19.805 --> 00:07:22.283
And so
we have all of that kinda put in place and

118
00:07:22.283 --> 00:07:25.936
instead of even those dark colon stuff,
we actually just have a set

119
00:07:25.936 --> 00:07:29.612
of CSS variables that relate to
everything we use in the code base.

120
00:07:29.612 --> 00:07:31.432
And then when you switch
them to dark mode,

121
00:07:31.432 --> 00:07:33.367
we switch the values of
those CSS variables.

122
00:07:33.367 --> 00:07:37.573
So if we wanted to add seven more themes,
what's involved in that?

123
00:07:37.573 --> 00:07:41.619
Going into Figma,
once Ash finishes that up,

124
00:07:41.619 --> 00:07:46.497
going to variables2css,
going to Component Colors,

125
00:07:46.497 --> 00:07:52.122
hitting Ignore aliases, and
getting these new CSS variables.

126
00:07:52.122 --> 00:07:56.860
And having whatever the selector
is that puts into high

127
00:07:56.860 --> 00:08:01.706
contrast mode, like summer mode,
whatever, right?

128
00:08:01.706 --> 00:08:05.258
And we can swap these out, and this is
where that kind of both designers and

129
00:08:05.258 --> 00:08:07.166
how they structure the design system.

130
00:08:07.166 --> 00:08:10.097
And then for you and the way that
you structure your code base and

131
00:08:10.097 --> 00:08:13.027
the implementation of that design system,
take things that,

132
00:08:13.027 --> 00:08:15.863
like it took us six weeks to
refactor our code base to do this.

133
00:08:15.863 --> 00:08:17.413
It will take about six hours,

134
00:08:17.413 --> 00:08:21.319
not even that right just honestly just
running through the tests and like,

135
00:08:21.319 --> 00:08:25.355
our tests are good, but a little clicking
around is usually helpful as well.

136
00:08:25.355 --> 00:08:27.395
And you know beta stuff like that and

137
00:08:27.395 --> 00:08:31.681
like adding another theme will then
not take any work whatsoever, right?

138
00:08:31.681 --> 00:08:34.693
And just swapping out another mode
with another set of variables,

139
00:08:34.693 --> 00:08:35.984
adding maybe the stories and

140
00:08:35.984 --> 00:08:39.448
stuff like that that kind of updating
the automation around it, will work.

141
00:08:39.448 --> 00:08:43.607
Because if we go to three or four themes,
having again, a set of automation around

142
00:08:43.607 --> 00:08:47.104
this really helps and this is kinda
what we have set up in storybook and

143
00:08:47.104 --> 00:08:49.186
when you can too, in our time together.

