WEBVTT

1
00:00:00.690 --> 00:00:06.561
All right, so when last we spoke we were
talking a little bit about adding and

2
00:00:06.561 --> 00:00:10.597
theming kind of when to when
to not use tailwind, and

3
00:00:10.597 --> 00:00:14.849
the various ways that a button
kind of grows over time.

4
00:00:14.849 --> 00:00:19.320
And this is actually a version
from our actual code base.

5
00:00:19.320 --> 00:00:22.120
Two things I wanna point out here is just,
one,

6
00:00:22.120 --> 00:00:26.952
the number of classes as your button kinda
grows to handle a bunch of other things.

7
00:00:26.952 --> 00:00:32.079
And the number of buttons, we've got
the primary secondary destructive

8
00:00:32.079 --> 00:00:37.054
that goes and we have one's existent
table header, an array of sizes.

9
00:00:37.054 --> 00:00:40.539
We can see that even with
the tailwind utility classes,

10
00:00:40.539 --> 00:00:43.356
it's a helpful way to
handle media queries,

11
00:00:43.356 --> 00:00:49.068
but as you can still see, it kind of grows
a little bit out of control over time.

12
00:00:49.068 --> 00:00:55.441
CSLX is one tool for
managing all the different styling and

13
00:00:55.441 --> 00:01:03.227
stuff that you might have to worry
about through a design system.

14
00:01:03.227 --> 00:01:09.476
There's another super interesting library
that we leverage heavily called a class

15
00:01:09.476 --> 00:01:15.537
variance authority, that is a Loki joke
for those of you keeping track at home.

16
00:01:15.537 --> 00:01:17.437
And it's a library that does a few things.

17
00:01:17.437 --> 00:01:22.514
It allows you to kind of structure
your styles in a way that supports

18
00:01:22.514 --> 00:01:28.238
this idea of having variants of a button
or anything else along those ways.

19
00:01:28.238 --> 00:01:33.141
And it does a bunch of other really
interesting things that help when

20
00:01:33.141 --> 00:01:36.633
you're building out
a design system as well.

21
00:01:36.633 --> 00:01:43.391
The other thing that is a value prop is
that it is 100% framework agnostic, right?

22
00:01:43.391 --> 00:01:50.171
There was a time where our code base for
our application was in Svelte and

23
00:01:50.171 --> 00:01:55.596
SvelteKit and
our website was in react and next, right?

24
00:01:55.596 --> 00:02:00.800
And so you can you share
components between the two?

25
00:02:00.800 --> 00:02:03.728
And we saw the issue where our
dock site is still, in React and

26
00:02:03.728 --> 00:02:05.860
we have a bunch of React
properties as well.

27
00:02:05.860 --> 00:02:09.660
But the two big ones, that really needed
to share a lot of style listings,

28
00:02:09.660 --> 00:02:11.762
were in two very different frameworks.

29
00:02:11.762 --> 00:02:17.526
So having tooling that helps
the styling of your various components.

30
00:02:17.526 --> 00:02:22.166
Because it's not just,
we have a marketing site and a core app,

31
00:02:22.166 --> 00:02:25.926
the Venn diagram began to
overlap a little bit, right?

32
00:02:25.926 --> 00:02:30.150
And so, for instance,
we now have a sign up flow that exists on

33
00:02:30.150 --> 00:02:34.256
the marketing website and
drops you into the app, right?

34
00:02:34.256 --> 00:02:38.049
So you have new and different demands, and
this is one of those stories about whether

35
00:02:38.049 --> 00:02:41.356
you intend to or not, you actually
end up with a design system, right?

36
00:02:41.356 --> 00:02:46.577
We had new and interesting demands where
we had to keep a consistent experience,

37
00:02:46.577 --> 00:02:49.208
right, across different properties.

38
00:02:49.208 --> 00:02:52.889
Implemented at the time in
different frameworks, right, and

39
00:02:52.889 --> 00:02:57.473
still the next battle and we're not
probably converting the dock site because

40
00:02:57.473 --> 00:02:59.546
it's just too hard to do that.

41
00:02:59.546 --> 00:03:04.434
Immediately, we do need to spread our
design system across multiple frameworks.

42
00:03:04.434 --> 00:03:09.324
So having tools that are framework
agnostic makes this really easy.

43
00:03:09.324 --> 00:03:13.559
Yeah, maybe you need to have
a little bit of code that

44
00:03:13.559 --> 00:03:19.264
triggers how a drop down menu
works in Svelte versus React.

45
00:03:19.264 --> 00:03:23.096
But nobody wants to rewrite all
the styling and stuff along those lines.

46
00:03:23.096 --> 00:03:27.536
So in being able to apply that
across is incredibly powerful.

47
00:03:27.536 --> 00:03:31.807
And then also just the ability to like
separate it from your code makes it easier

48
00:03:31.807 --> 00:03:33.176
to work with in general.

49
00:03:33.176 --> 00:03:37.342
Anytime you find yourself working in
regular old JavaScript objects and

50
00:03:37.342 --> 00:03:40.756
functions, everything from
unit testing to IntelliSense

51
00:03:40.756 --> 00:03:42.886
to just everything becomes easier.

52
00:03:44.146 --> 00:03:48.974
So it's again, one of these libraries,
I've not actually read the code to

53
00:03:48.974 --> 00:03:53.596
see how much code it is but
could you write a tool like this yourself?

54
00:03:53.596 --> 00:03:59.786
You probably could, but why would you when
you have shareholder value to go capture?

55
00:04:01.088 --> 00:04:03.398
And something like this exists.

56
00:04:03.398 --> 00:04:07.883
And so I'll show it to you, let's take a
tour of it because it's a lot to write, so

57
00:04:07.883 --> 00:04:11.628
we're gonna kinda look at
it in a use-case thing.

58
00:04:11.628 --> 00:04:16.159
We'll see it both in my kinda core app and
then we'll see a version of the button

59
00:04:16.159 --> 00:04:20.278
that I also wrote that we'll bring
into our design system as well.

60
00:04:20.278 --> 00:04:22.933
So this is the one that we
kinda have in our code base and

61
00:04:22.933 --> 00:04:25.936
you'll see this roughly
similar at the end of the day.

62
00:04:25.936 --> 00:04:29.006
So the first thing is CVA for
the class variants authority.

63
00:04:29.006 --> 00:04:33.882
You can give it a string,
you can give it an array of classes, so

64
00:04:33.882 --> 00:04:38.956
far not that much different than
what we had with, CLSX, right?

65
00:04:40.106 --> 00:04:42.421
Where things become interesting, and

66
00:04:42.421 --> 00:04:46.990
this is the only time I regret calling
that various button variants variant.

67
00:04:46.990 --> 00:04:50.468
Because variants can be your size,
all these things but

68
00:04:50.468 --> 00:04:52.473
also it's an overloaded term.

69
00:04:52.473 --> 00:04:58.792
Where you can say, okay, well here's
the classes that make a primary button,

70
00:04:58.792 --> 00:05:05.507
its current color and these BG interactive
that's for anything you touch, right?

71
00:05:05.507 --> 00:05:09.162
When I told you we were moving to those
semantic colors and like the last section,

72
00:05:09.162 --> 00:05:11.767
this is an example from you know,
our code base.

73
00:05:11.767 --> 00:05:13.965
Interactive is like your buttons,

74
00:05:13.965 --> 00:05:18.957
your various radio is the accent on a
radio thing, it's that kind of core color.

75
00:05:20.087 --> 00:05:23.250
We still referenced white and
stuff like that.

76
00:05:23.250 --> 00:05:25.792
We are still in the transition so

77
00:05:25.792 --> 00:05:30.324
it took a lot to unwind
the initial choices there as well.

78
00:05:30.324 --> 00:05:33.989
The idea of a danger color so
on and so forth.

79
00:05:33.989 --> 00:05:38.059
But like you see so this is what
makes the primary button primary.

80
00:05:38.059 --> 00:05:41.516
This was what makes a secondary button
secondary destructive destructive ghost

81
00:05:41.516 --> 00:05:43.719
ghost, table header, so
on and so forth, right?

82
00:05:43.719 --> 00:05:47.229
The sizes, these are the classes
that you might pick, right?

83
00:05:47.229 --> 00:05:50.399
Other things that we might choose to do.

84
00:05:50.399 --> 00:05:52.199
And then the default variance.

85
00:05:52.199 --> 00:05:58.450
And what's really powerful with this is
we'll also kinda see it in React as well,

86
00:05:58.450 --> 00:06:03.343
is there is basically two major
pieces to class variance story,

87
00:06:03.343 --> 00:06:07.006
the function and this type variant props.

88
00:06:07.006 --> 00:06:09.633
And I'm gonna talk about it now and
then we'll do it again in our code base so

89
00:06:09.633 --> 00:06:10.436
that you see it twice.

90
00:06:10.436 --> 00:06:14.760
cuz I think it takes two
mental spiritual passes.

91
00:06:14.760 --> 00:06:19.097
So this function when we
create button styles, or

92
00:06:19.097 --> 00:06:24.259
button variance is what we'll
call it in ours An then here,

93
00:06:24.259 --> 00:06:27.958
you can actually create a type.

94
00:06:27.958 --> 00:06:32.273
So how before we did that type,
okay, variant is primary, secondary,

95
00:06:32.273 --> 00:06:33.488
destructive.

96
00:06:33.488 --> 00:06:37.293
Size is like you just write
what the classes are and

97
00:06:37.293 --> 00:06:41.823
it will generate a TypeScript
type that expects a variant,

98
00:06:41.823 --> 00:06:46.430
a size, everything that
matches up with those classes.

99
00:06:46.430 --> 00:06:50.039
And again, this code is felt,
we're gonna look at it and React and

100
00:06:50.039 --> 00:06:52.460
you're gonna notice no difference.

101
00:06:52.460 --> 00:06:56.731
And so now you have the ability to
separate all of the styling in your

102
00:06:56.731 --> 00:06:59.402
codebase from the actual framework, and

103
00:06:59.402 --> 00:07:04.762
you can use it across multiple Properties
you could use it in regular old like HTML.

104
00:07:04.762 --> 00:07:07.082
I guess you need a little
bit of JavaScript in there.

105
00:07:07.082 --> 00:07:10.926
Right, but you can use it across anything
you need and you get all of it kind

106
00:07:10.926 --> 00:07:15.018
of like for free and we've got the, all
these are set for the type is a little bit

107
00:07:15.018 --> 00:07:19.442
easier in react than it is in spelt for
it'll be easier and store in file.

108
00:07:19.442 --> 00:07:23.398
But like, you get the basically and
we can export this and

109
00:07:23.398 --> 00:07:25.632
share it across the code bases.

