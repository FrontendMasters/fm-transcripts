WEBVTT

1
00:00:00.000 --> 00:00:04.164
So let's figure out how to swap in these
colors in Tailwind, but like I said,

2
00:00:04.164 --> 00:00:06.033
you can also do the CSS variables.

3
00:00:06.033 --> 00:00:08.292
We actually do like a combination of both,

4
00:00:08.292 --> 00:00:12.513
we have a file that looks almost exactly
like this because I stole it from there.

5
00:00:12.513 --> 00:00:14.036
And I started working
open source code base.

6
00:00:14.036 --> 00:00:21.888
And then actually these are Creates CSS
variables based on that.

7
00:00:21.888 --> 00:00:25.535
And then we create those semantic names,
but it's effectively the same idea.

8
00:00:25.535 --> 00:00:31.116
This is just a 300 line file that
I'm not gonna bother you with.

9
00:00:31.116 --> 00:00:34.515
So let's go ahead and try that out.

10
00:00:34.515 --> 00:00:38.233
So now in my Tailwind theme,
really all I'm gonna do is,

11
00:00:38.233 --> 00:00:41.963
I'm gonna import this JSON file,
so I'm gonna import.

12
00:00:41.963 --> 00:00:44.308
Let me just remember what I ended up.

13
00:00:44.308 --> 00:00:49.379
I have all these colors and because I'm
replacing wholesale, the Tailwind ones,

14
00:00:49.379 --> 00:00:54.015
because I don't wanna be able to access
red and blue and green, I have to take

15
00:00:54.015 --> 00:00:58.601
a few of the special ones and make sure
that I include those as well, right?

16
00:00:58.601 --> 00:01:02.000
White and black, space black in our case,

17
00:01:02.000 --> 00:01:06.831
transparent and currentColor,
which are CSS properties.

18
00:01:06.831 --> 00:01:12.196
So we'll import colors, white,

19
00:01:12.196 --> 00:01:16.637
black, currentColor, and

20
00:01:16.637 --> 00:01:22.199
transparent, from, what was it?

21
00:01:22.199 --> 00:01:28.469
./source/tokens/colors, cool.

22
00:01:28.469 --> 00:01:34.184
And again, if you're using regular CSS,
it's just slightly different.

23
00:01:34.184 --> 00:01:38.316
It has this theme and has two options
where you can either replace it outright,

24
00:01:38.316 --> 00:01:40.579
or has this extra property called extend.

25
00:01:40.579 --> 00:01:43.341
If you wanna add additional things,
use extend.

26
00:01:43.341 --> 00:01:46.704
I don't wanna add additional
colors because if I do that,

27
00:01:46.704 --> 00:01:49.254
someone's gonna still use green, right?

28
00:01:49.254 --> 00:01:54.303
What I wanna do is wholesale
replace it with all of my colors,

29
00:01:54.303 --> 00:01:59.360
white, black, transparent,
and currentColor, right?

30
00:01:59.360 --> 00:02:02.246
And, yeah,
if one was to take this next step,

31
00:02:02.246 --> 00:02:05.132
I would take a good look
at the design system and

32
00:02:05.132 --> 00:02:09.669
notice that I'm only really using
three border radii, one box shadow.

33
00:02:09.669 --> 00:02:14.273
May be, yeah, eventually, I think
the real code base is like two or three.

34
00:02:14.273 --> 00:02:18.158
A smaller set of fonts and
spacing and stuff like that.

35
00:02:18.158 --> 00:02:23.025
So one of the recommendations, and it will
depend on what you're doing is to contract

36
00:02:23.025 --> 00:02:26.893
the surface area of the design
tokens you have to work with, right?

37
00:02:26.893 --> 00:02:31.428
Because both designers will have
a bad day and just cut a corner and

38
00:02:31.428 --> 00:02:33.506
not use their own variables.

39
00:02:33.506 --> 00:02:38.492
And then the nicest engineer on your
team will comply with that, and

40
00:02:38.492 --> 00:02:41.208
now you both have a problem, right?

41
00:02:41.208 --> 00:02:44.509
So yeah, now we can construct the colors.

42
00:02:44.509 --> 00:02:50.002
The other thing I wanna do is pull in the
font, in our UI, we use Poppins and Inter,

43
00:02:50.002 --> 00:02:55.118
except both designers hate pop and so
we're gonna put everything to Inter.

44
00:02:55.118 --> 00:02:57.576
There's much ways to do
this in terms of free font.

45
00:02:57.576 --> 00:03:01.753
Free fonts are great because I
don't have to manually do anything.

46
00:03:01.753 --> 00:03:04.030
We use something called font source,

47
00:03:04.030 --> 00:03:07.446
font source is basically all
of your various free fonts,

48
00:03:07.446 --> 00:03:11.729
I think more than just a Google ones,
I think your assorted free fonts.

49
00:03:11.729 --> 00:03:14.527
Let's look at the website, put onto npm.

50
00:03:14.527 --> 00:03:19.367
So you can basically do
an npm install of fonts.

51
00:03:19.367 --> 00:03:20.225
So it's super great.

52
00:03:20.225 --> 00:03:22.757
Also like just for
side projects and stuff like that.

53
00:03:22.757 --> 00:03:27.959
So you can grab any font that makes
you happy, I'm gonna grab it to you,

54
00:03:27.959 --> 00:03:33.022
if you wanna go rogue, and
grab a different font, go for it, right?

55
00:03:33.022 --> 00:03:38.453
If you wanna make the entire
thing papyrus that's a choice.

56
00:03:38.453 --> 00:03:41.622
But basically can go,
find the font, hit Install, and

57
00:03:41.622 --> 00:03:45.005
you can see that all it is at
the end of the day is npm install.

58
00:03:45.005 --> 00:03:48.545
This is a variable font, so it's
variable width and you can tweak stuff,

59
00:03:48.545 --> 00:03:49.927
@fontsource-variable.

60
00:03:49.927 --> 00:03:51.930
The ones that are not variable
font are @fontsource.

61
00:03:51.930 --> 00:03:54.142
And you can npm install this font,

62
00:03:54.142 --> 00:03:58.960
which I think I already have in the npm
install, but you can also run it too.

63
00:03:58.960 --> 00:04:01.600
And then, in my CSS file,

64
00:04:01.600 --> 00:04:07.127
which is already imported in Storybook,
there it is.

65
00:04:07.127 --> 00:04:11.754
index.css, I can

66
00:04:11.754 --> 00:04:15.224
just do import

67
00:04:15.224 --> 00:04:23.618
fontsourcevariable/ inter;.

68
00:04:23.618 --> 00:04:28.698
And now, through the magic of Post CSS and
VIT, or Webpack in this case,

69
00:04:28.698 --> 00:04:34.131
that entire file is being included, and
now I have that font available to me.

70
00:04:34.131 --> 00:04:39.671
I do need to just set it in Tailwind,
but if I wasn't using Tailwind,

71
00:04:39.671 --> 00:04:44.841
I could literally go to the body here and
say like font-family.

72
00:04:53.824 --> 00:04:55.814
Right, that would work.

73
00:04:55.814 --> 00:04:57.025
I'm gonna put in my tailwind theme.

74
00:04:57.025 --> 00:05:02.578
Both are equally fine ways of doing this,
whichever one makes you happier.

75
00:05:02.578 --> 00:05:05.909
I'm gonna do the one that I do for
a living here though.

76
00:05:05.909 --> 00:05:10.972
So this is where I'm gonna
extend the current theme

77
00:05:10.972 --> 00:05:15.808
cuz I wanna keep the monospace
font in this case.

78
00:05:15.808 --> 00:05:20.421
And I'll say fontFamily, I'm gonna
replace a Sans-serif font with it.

79
00:05:27.835 --> 00:05:32.380
Cool, and that's a great way for if you're
using the free fonts and you don't want to

80
00:05:32.380 --> 00:05:35.871
copy and paste a bunch of link tags or
anything along those lines.

81
00:05:35.871 --> 00:05:39.325
The other reason I really
like using font source for

82
00:05:39.325 --> 00:05:43.178
this, which is you can also
use an import in JavaScript,

83
00:05:43.178 --> 00:05:47.699
which means if you're only using
a font in one component, right?

84
00:05:47.699 --> 00:05:50.710
Then it'll be lazily loaded when that
component gets lazily loaded as long

85
00:05:50.710 --> 00:05:52.448
as you have anything that is tree shaking.

86
00:05:52.448 --> 00:05:55.175
So there's performance reasons as well.

87
00:05:55.175 --> 00:05:59.948
But yeah, and also we programmatically
switch it out because

88
00:05:59.948 --> 00:06:04.370
Open Source we can only use free fonts for
the licensing.

89
00:06:04.370 --> 00:06:08.159
But on our website and
stuff like that we use proprietary fonts.

90
00:06:08.159 --> 00:06:12.657
So having to be programmatic makes my
life easier, because I can code and

91
00:06:12.657 --> 00:06:15.696
use environment variables and
stuff like that.

92
00:06:15.696 --> 00:06:20.256
Cool, so I've got all of that in place,
so we got fonts,

93
00:06:20.256 --> 00:06:22.631
we got our own unique colors.

94
00:06:22.631 --> 00:06:25.265
We will need to go ahead and
refactor this in a second.

95
00:06:25.265 --> 00:06:28.677
I think I was playing with
stuff earlier in there.

96
00:06:28.677 --> 00:06:32.995
We do need a way to deal with the idea
of like, I have primary, a secondary,

97
00:06:32.995 --> 00:06:34.793
there could be a ghost button.

98
00:06:34.793 --> 00:06:38.690
But we need some better strategies for
managing the style of every variant.

99
00:06:38.690 --> 00:06:41.384
So we'll talk about
about that momentarily.

100
00:06:41.384 --> 00:06:44.524
&gt;&gt; What would be the approach for Sass?

101
00:06:44.524 --> 00:06:49.396
&gt;&gt; I mean, if we were doing figma,
starting from there, literally,

102
00:06:49.396 --> 00:06:52.387
the amazing part about
this is you can also

103
00:06:52.387 --> 00:06:55.222
export a bunch of Sass aliases as well.

104
00:06:55.222 --> 00:06:59.347
And then you would use these tokens
throughout your codebase, right?

105
00:06:59.347 --> 00:07:01.146
If I grab the component colors as well.

106
00:07:01.146 --> 00:07:04.761
But yeah, it could be setting
up Sass variables like this.

107
00:07:04.761 --> 00:07:07.886
It could be setting up CSS variables and
referencing them.

108
00:07:07.886 --> 00:07:11.614
It doesn't really matter
which strategy you use,

109
00:07:11.614 --> 00:07:15.264
that's coz it's more
the conceptual approach.

110
00:07:15.264 --> 00:07:19.621
But your variables will vary slightly
based on which technology that you use.

