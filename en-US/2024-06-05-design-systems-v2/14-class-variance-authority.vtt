WEBVTT

1
00:00:00.193 --> 00:00:03.959
And so there's a version of this cuz
nobody wants to watch me type that many

2
00:00:03.959 --> 00:00:05.005
Tailwind classes.

3
00:00:05.005 --> 00:00:07.838
If you do, I have a course that
you can watch some other time,

4
00:00:07.838 --> 00:00:10.405
if you wanna watch me type
that many Tailwind classes.

5
00:00:10.405 --> 00:00:14.576
But if we look at this,
this is what the button that we had in our

6
00:00:14.576 --> 00:00:18.051
little anthology design
system kinda looks like.

7
00:00:18.051 --> 00:00:23.143
So this is kinda taking that
CSS module that we had and

8
00:00:23.143 --> 00:00:26.285
refactoring it into Tailwind.

9
00:00:26.285 --> 00:00:30.702
Again, Tailwind is not like some of
the things that came before Bootstrap or

10
00:00:30.702 --> 00:00:32.644
whatever, where it's a theme.

11
00:00:32.644 --> 00:00:35.409
It comes with a default theme that
you can toss in the garbage and

12
00:00:35.409 --> 00:00:36.515
use your own if you want.

13
00:00:36.515 --> 00:00:42.409
What I like it for is stuff like
now I don't need to write these,

14
00:00:42.409 --> 00:00:44.969
either pseudo selectors or

15
00:00:44.969 --> 00:00:50.771
media queries in the case of
responsive design and dark mode.

16
00:00:50.771 --> 00:00:55.389
I can just basically use focus column,
they'll give me a focus state.

17
00:00:55.389 --> 00:00:58.086
I can use disabled column,
will give me a disabled state.

18
00:00:58.086 --> 00:01:02.378
There's also some other helpers like, you
have the situation where if someone hovers

19
00:01:02.378 --> 00:01:05.628
over the entire card,
everything should change underneath it.

20
00:01:05.628 --> 00:01:08.137
And so there's a group selector appear.

21
00:01:08.137 --> 00:01:11.022
So if they're hovering over the pier,
or they're hovering over the parent or

22
00:01:11.022 --> 00:01:13.181
something like that,
you can cascade those things down.

23
00:01:13.181 --> 00:01:15.256
Could you write those on regular CSS?

24
00:01:15.256 --> 00:01:18.295
Absolutely, do I want to?

25
00:01:18.295 --> 00:01:20.061
I don't, right?

26
00:01:20.061 --> 00:01:24.154
And then getting the ability if that tree
shakes all the unused CSS is just useful.

27
00:01:24.154 --> 00:01:27.865
For us, we use it less as like, we use all
the Tailwind thing and all that stuff.

28
00:01:27.865 --> 00:01:31.304
We use it more as like a utility knife for

29
00:01:31.304 --> 00:01:35.693
things might otherwise be
a little more tedious.

30
00:01:35.693 --> 00:01:39.283
So here we've got our variance,
great, awesome, right?

31
00:01:39.283 --> 00:01:42.038
Well, this is the base styles
that they all got, right?

32
00:01:42.038 --> 00:01:45.674
And then we can say, okay, we've got
the primary, well, that's a color

33
00:01:45.674 --> 00:01:48.997
that we pulled in in the last section
when we play so Tailwind theme.

34
00:01:48.997 --> 00:01:51.169
So instead of purple, it's primary.

35
00:01:51.169 --> 00:01:54.077
And now,
if I need to change primary to red,

36
00:01:54.077 --> 00:01:57.927
which we shouldn't do, or
blue or green or what have you,

37
00:01:57.927 --> 00:02:02.583
I can switch literally the actual
theme file and it'll all just work.

38
00:02:02.583 --> 00:02:04.680
And like I said,
I could take that the step further,

39
00:02:04.680 --> 00:02:06.118
where we just call it interactive.

40
00:02:06.118 --> 00:02:09.184
And I can say that it's like should
be the primary button color and

41
00:02:09.184 --> 00:02:11.314
change where those
variables point as well.

42
00:02:11.314 --> 00:02:15.756
That's kind of like up the levels of the
Galaxy Brain, what you might choose to do.

43
00:02:15.756 --> 00:02:20.633
And I'll show you our code for
that in a second as well.

44
00:02:20.633 --> 00:02:24.044
Secondary button, okay, that one's
white with the different borders and

45
00:02:24.044 --> 00:02:25.815
the different active colors, right?

46
00:02:25.815 --> 00:02:29.152
Destructive and then the default
variant is before I had primary,

47
00:02:29.152 --> 00:02:31.487
I can choose to make it secondary,
whatever.

48
00:02:31.487 --> 00:02:35.424
It doesn't really matter and
we can put a default size and

49
00:02:35.424 --> 00:02:37.975
all of those things in there as well.

50
00:02:37.975 --> 00:02:43.241
And then basically, now we can
derive the type from our styling.

51
00:02:43.241 --> 00:02:46.016
So we add another variant, automatically,

52
00:02:46.016 --> 00:02:48.799
that gets added to that
ButtonProps as well.

53
00:02:48.799 --> 00:02:52.771
So let's pull this in and
take it for a spin.

54
00:02:52.771 --> 00:02:56.881
So there's two choices,
you can include this in the file

55
00:02:56.881 --> 00:03:01.602
itself of our component or
you can choose to put it in its own file.

56
00:03:01.602 --> 00:03:06.144
I think before I did it,
that one is its own file, but

57
00:03:06.144 --> 00:03:10.596
if you do wanna share it
across code bases, right?

58
00:03:10.596 --> 00:03:13.836
Having it as just as
a regular JavaScript or

59
00:03:13.836 --> 00:03:18.973
TypeScript file that you can just
import anywhere is super useful.

60
00:03:18.973 --> 00:03:21.657
So let's do that pattern.

61
00:03:21.657 --> 00:03:23.531
And so you can call it variant.

62
00:03:23.531 --> 00:03:25.853
If it's in the button directory,
you can call it button-variant.

63
00:03:25.853 --> 00:03:30.154
It really depends on how much you
wanna be able to command P, okay, or

64
00:03:30.154 --> 00:03:32.613
whatever editor you use to get into it.

65
00:03:32.613 --> 00:03:38.736
We'll call it button-variant.ts,

66
00:03:38.736 --> 00:03:42.821
and we will paste this in.

67
00:03:42.821 --> 00:03:50.896
And then we'll also,
Call it ButtonVariants.

68
00:03:50.896 --> 00:03:55.320
And so if we look at this type now,
you can see that we only have the variant,

69
00:03:55.320 --> 00:03:58.567
we don't have the sizes in here,
we can do that, too.

70
00:03:58.567 --> 00:04:03.224
But you can see that it is
already very similar to what we

71
00:04:03.224 --> 00:04:05.565
kinda wrote by ourselves.

72
00:04:05.565 --> 00:04:08.790
But you can imagine, if you looked at
all the button combinations I have,

73
00:04:08.790 --> 00:04:10.409
I'd be writing more and more types.

74
00:04:10.409 --> 00:04:11.842
They might get out of sync, and

75
00:04:11.842 --> 00:04:14.448
then I'd have to match them
up with the default params.

76
00:04:14.448 --> 00:04:16.568
And all that stuff that
I was doing earlier,

77
00:04:16.568 --> 00:04:18.525
it's nice to just get that all for free.

78
00:04:18.525 --> 00:04:21.786
And again, this is basically
just a JavaScript function.

79
00:04:21.786 --> 00:04:24.224
If your needs are slightly different and
there's nothing,

80
00:04:24.224 --> 00:04:26.819
this doesn't have to be Tailwind,
these are just class names.

81
00:04:26.819 --> 00:04:30.155
Yes, those are then powered by a Tailwind.

82
00:04:30.155 --> 00:04:34.426
But if you have an existing style system,
right, and you have a bunch of class names

83
00:04:34.426 --> 00:04:37.553
that you wanna use the same approach,
it works there, too.

84
00:04:37.553 --> 00:04:41.733
It doesn't really matter in any way,
shape, or form.

85
00:04:41.733 --> 00:04:48.635
So we've got that in place, let's go
ahead and pull it into our button now.

86
00:04:48.635 --> 00:04:52.356
So here, we can just say, import,

87
00:04:52.356 --> 00:04:57.950
do I have an export on
export const variants.

88
00:04:57.950 --> 00:05:04.522
Sure, import now, variants and

89
00:05:04.522 --> 00:05:10.162
then type ButtonVariants.

90
00:05:16.704 --> 00:05:20.539
Nope, not from there,
we wanna do it from the ./button-variants.

91
00:05:20.539 --> 00:05:26.459
And now, we'll move size in a second, but

92
00:05:26.459 --> 00:05:31.721
now what this can become is we can say,

93
00:05:31.721 --> 00:05:34.686
&amp; ButtonVariants.

94
00:05:34.686 --> 00:05:37.612
So it's basically,
we'll get rid of the size momentarily.

95
00:05:37.612 --> 00:05:42.950
Our type is eventually just going to be,
hey, all the default props that

96
00:05:42.950 --> 00:05:48.126
a regular HTML button takes plus
whatever my design system supports.

97
00:05:48.126 --> 00:05:50.485
And then you never update this again,
right?

98
00:05:50.485 --> 00:05:53.327
You kinda get all the types, and

99
00:05:53.327 --> 00:05:58.178
even storybook will catch
all of these things as well.

100
00:05:58.178 --> 00:06:04.246
And so then now in here,
we'll kinda lose the sizes for a second.

101
00:06:04.246 --> 00:06:08.789
It'll be okay,
we can get rid of all of this.

102
00:06:08.789 --> 00:06:15.572
And we can just say that this is variants.

103
00:06:15.572 --> 00:06:20.788
And then unfortunately, because we've
followed the predominant nomenclature,

104
00:06:20.788 --> 00:06:25.129
the button-variant, eventually,
we'll add size in here as well.

105
00:06:25.129 --> 00:06:29.253
And it's gonna look like a primary,
it'll get you the base classes.

106
00:06:29.253 --> 00:06:34.053
It will get you then all the other
classes specific to the primary button.

107
00:06:34.053 --> 00:06:37.689
And if you pass in some
garbage that doesn't work,

108
00:06:37.689 --> 00:06:40.997
the type checking in there will know,
right?

109
00:06:40.997 --> 00:06:44.972
And you'll kinda get that helpful red
squiggly line that is frustrating when you

110
00:06:44.972 --> 00:06:45.799
don't like it.

111
00:06:45.799 --> 00:06:50.060
And super helpful when you just made
a typo when you're live coding in front of

112
00:06:50.060 --> 00:06:51.579
all your friends, right?

113
00:06:51.579 --> 00:06:56.895
And so we can kind of flip back over to
our storybook, that's Microsoft Storybook.

114
00:06:56.895 --> 00:07:00.757
Let's close, probably comes hard.

115
00:07:00.757 --> 00:07:04.178
It looks like we need to do
a little bit of tweaking there, but

116
00:07:04.178 --> 00:07:08.487
we get the kind of like, it's because
I think sizes is where the padding is.

117
00:07:08.487 --> 00:07:13.099
So I need to bring that back in,
but I kind of get the initial

118
00:07:13.099 --> 00:07:17.725
colors in place as well and
kind of support for all of that.

119
00:07:17.725 --> 00:07:24.806
So let's say we wanted to add in
the sizes, we can do that as well.

120
00:07:24.806 --> 00:07:28.241
I don't have them memorized, so
we'll kinda take some lucky guesses from

121
00:07:28.241 --> 00:07:31.198
the number of times I've done this
over and over and over again.

122
00:07:31.198 --> 00:07:35.890
We can go in here and we can say, okay, we
don't even need to have necessarily base

123
00:07:35.890 --> 00:07:39.020
styles for the sizes cuz we
can have this default size.

124
00:07:39.020 --> 00:07:44.508
So we'll go add another one here,

125
00:07:44.508 --> 00:07:47.920
we'll call it size.

126
00:07:47.920 --> 00:07:50.976
Here's the nice part about some
of this autocomplete stuff,

127
00:07:50.976 --> 00:07:54.677
is that when you've worked on the same
repo, preparing for things over and

128
00:07:54.677 --> 00:07:58.460
over and over again, sometimes it's
caught on to what you're gonna type.

129
00:07:58.460 --> 00:08:01.149
We'll see if this is totally right, but

130
00:08:01.149 --> 00:08:04.958
that looks like literally what
I typed a thousand times.

131
00:08:04.958 --> 00:08:08.739
This is for Tailwind,
this is our x padding,

132
00:08:08.739 --> 00:08:12.332
our y padding, and these are based on RAM.

133
00:08:12.332 --> 00:08:20.072
So a p of 4 is 1 RAM, 2.5 I wanna
say is 10 pixels, 1.5 is 6 pixels.

134
00:08:20.072 --> 00:08:22.952
I hate that I know this.

135
00:08:22.952 --> 00:08:27.067
But in the actual Figma for the design
system, you can actually see this as well.

136
00:08:27.067 --> 00:08:29.379
And the fonts that we saw in that Figma,

137
00:08:29.379 --> 00:08:32.896
they're all kind of mapped to
these correct sizes as well.

138
00:08:32.896 --> 00:08:39.178
And then we can say that the default
size is medium, just like we had before.

139
00:08:39.178 --> 00:08:43.416
And what's super cool about this is if we
look at, so we got rid of all our style

140
00:08:43.416 --> 00:08:47.743
sheet and everything along those lines,
so we're down one file completely.

141
00:08:47.743 --> 00:08:52.345
If I look at the ButtonVariants,
look, it now also just automatically

142
00:08:52.345 --> 00:08:57.038
updated to say, hey, this thing also
supports an optional style prop.

143
00:08:57.038 --> 00:08:59.447
All right, there's either small,
medium, or large.

144
00:08:59.447 --> 00:09:03.876
And because it's an optional one,
cuz we have a default value, null and

145
00:09:03.876 --> 00:09:08.977
undefined also work as well, right, cuz
it will fall through to the falsie value.

146
00:09:08.977 --> 00:09:16.122
And now adding sizes,
ready for it, sizes or size.

147
00:09:16.122 --> 00:09:19.363
How many times have you guys made
the same mistake by pluralizing it?

148
00:09:19.363 --> 00:09:24.917
And our button is effectively back with
the entire font that we had before,

149
00:09:24.917 --> 00:09:29.784
and the sizing that matches to what
I had in the Figma file as well.

150
00:09:29.784 --> 00:09:36.198
And what's kinda cool about this is that
because everything in that file is based

151
00:09:36.198 --> 00:09:41.778
on the work that the product designer
hash on my team worked on as well.

152
00:09:41.778 --> 00:09:48.114
Is that their Figma variables are mapped
to the same theme values that we have.

153
00:09:48.114 --> 00:09:53.224
So all we do is export a new version of
those pasted in to the same theme file,

154
00:09:53.224 --> 00:09:57.622
and any changes they make,
we get completely for free, right?

155
00:09:57.622 --> 00:10:02.779
And that kind of interrupt there because
we aligned on a system that works and

156
00:10:02.779 --> 00:10:04.803
we have the tooling in place.

157
00:10:04.803 --> 00:10:08.423
And what we'll see in a second, we'll
set up some visual regression testing,

158
00:10:08.423 --> 00:10:09.893
not in a second, a few minutes.

159
00:10:09.893 --> 00:10:13.293
We'll set up some visual regression
testing so we can actually then see like,

160
00:10:13.293 --> 00:10:15.780
did this change in the way we
thought it changed, right?

161
00:10:15.780 --> 00:10:19.599
And you can start with just the button,
but then you can have one of your alerts,

162
00:10:19.599 --> 00:10:21.258
things that have buttons in them.

163
00:10:21.258 --> 00:10:22.426
Do they all change?

164
00:10:22.426 --> 00:10:23.603
You can kinda get this high level thing.

165
00:10:23.603 --> 00:10:27.749
And the visual regression testings
are great for two reasons, right?

166
00:10:27.749 --> 00:10:30.153
One, if you didn't mean
to change something,

167
00:10:30.153 --> 00:10:33.653
that's the value prop that says on
the thing, it should catch that.

168
00:10:33.653 --> 00:10:39.029
But two, it's a great way of you may
be intentionally changing the button,

169
00:10:39.029 --> 00:10:43.566
but maybe you forgot all the places
the button might be, right?

170
00:10:43.566 --> 00:10:45.750
It's one thing to go look
at the button story, but

171
00:10:45.750 --> 00:10:48.454
as you kinda build up the larger
pieces in your design system,

172
00:10:48.454 --> 00:10:50.856
it's great to be like,
hey, this changed also.

173
00:10:50.856 --> 00:10:54.525
And you can just kinda go ahead and
validate it, right?

174
00:10:54.525 --> 00:10:59.247
Especially for our website,
we run it on every single PR, right?

175
00:10:59.247 --> 00:11:01.659
We'll just generate all the visual diffs,
right?

176
00:11:01.659 --> 00:11:02.526
A lot of times yeah,

177
00:11:02.526 --> 00:11:05.535
they're changing on purpose because
what do you think we were doing?

178
00:11:05.535 --> 00:11:10.444
But we can actually see the major one,
only things we changed actually changed.

179
00:11:10.444 --> 00:11:13.153
And two, that maybe we didn't
need to change all the buttons,

180
00:11:13.153 --> 00:11:15.571
we didn't really know all
the places the buttons were.

181
00:11:15.571 --> 00:11:20.850
Like, this one button, it being bigger
like we intended in a table header or

182
00:11:20.850 --> 00:11:24.283
something like that is
actually not what we wanted.

183
00:11:24.283 --> 00:11:29.252
And it calls it out before our
customers do, cuz like I said,

184
00:11:29.252 --> 00:11:31.206
you always have tests.

185
00:11:31.206 --> 00:11:34.122
It's just a big question of,
are you doing it manually?

186
00:11:34.122 --> 00:11:34.825
Are they automated?

187
00:11:34.825 --> 00:11:38.221
Are your customers filing a bug report?

188
00:11:38.221 --> 00:11:42.335
So cool, we've got that class variants,
and that will work across everything.

189
00:11:42.335 --> 00:11:45.901
I have a few more examples in the code
base if you just wanna see it in action.

190
00:11:45.901 --> 00:11:48.963
So here, we've got one for a badge, right,

191
00:11:48.963 --> 00:11:53.249
where we can have what the default
badge looks like, primary.

192
00:11:53.249 --> 00:11:57.466
And all of a sudden, first of all,
with a little bit of multicursor,

193
00:11:57.466 --> 00:11:59.523
how hard it's to edit this file?

194
00:11:59.523 --> 00:12:01.006
Not that hard.

195
00:12:01.006 --> 00:12:06.905
If I needed to change hypothetically,
if I was going to, what is it like?

196
00:12:06.905 --> 00:12:08.601
If there's gonna be something
in a later chapter,

197
00:12:08.601 --> 00:12:09.829
make sure you mentioned it earlier.

198
00:12:09.829 --> 00:12:14.531
Let's say hypothetically one of these
badges isn't accessible in dark mode,

199
00:12:14.531 --> 00:12:16.155
hypothetically, right?

200
00:12:16.155 --> 00:12:19.115
And I needed to change the contrast
of all these dark mode ones, right?

201
00:12:19.115 --> 00:12:21.682
This becomes incredibly easy to manage.

202
00:12:21.682 --> 00:12:25.026
If I had gone to the full galaxy brand
with this, which we could choose to do,

203
00:12:25.026 --> 00:12:27.036
we'll take a look at it
in action in a second.

204
00:12:27.036 --> 00:12:29.376
Then you could literally
kind of just go and

205
00:12:29.376 --> 00:12:32.301
find that one class that
points to something as well.

206
00:12:32.301 --> 00:12:35.251
But even that, doing a large scale
change of all of the different

207
00:12:35.251 --> 00:12:37.669
contrasts would be roughly
the same amount of work.

208
00:12:37.669 --> 00:12:43.237
I'll show you a little bit about
what it's talking about before,

209
00:12:43.237 --> 00:12:46.331
which is all where you can take this.

210
00:12:46.331 --> 00:12:51.499
So we have a, I'll go back a file,
we've got this colors.ts,

211
00:12:51.499 --> 00:12:57.247
which looks shockingly like
the colors.ts that I showed you earlier,

212
00:12:57.247 --> 00:12:58.990
right, that we had.

213
00:12:58.990 --> 00:13:03.619
And yes, secretly, there are blues, and
there are cyans, and there are greens, and

214
00:13:03.619 --> 00:13:07.361
there are all sorts of colors cuz I
have statuses of a lot of things, and

215
00:13:07.361 --> 00:13:09.415
they all have to be different colors.

216
00:13:09.415 --> 00:13:14.118
So I have more colors than I would like,
but we have all these colors.

217
00:13:14.118 --> 00:13:17.939
But you can't use purple in our code base,
right?

218
00:13:17.939 --> 00:13:24.788
This is just like the kinda list
that then gets abstracted away.

219
00:13:24.788 --> 00:13:30.669
We have color primary, a CSS variable,
so not Tailwind-specific.

220
00:13:30.669 --> 00:13:34.159
We then map it to also
a Tailwind class as well.

221
00:13:34.159 --> 00:13:38.049
But you could theoretically
use --color-primary, and

222
00:13:38.049 --> 00:13:41.094
you will get the primary
color are secondary.

223
00:13:41.094 --> 00:13:45.000
And you can see this is a little helper
function I wrote that will go get slate

224
00:13:45.000 --> 00:13:46.799
950, but it's the same idea.

225
00:13:46.799 --> 00:13:49.849
It's just pulling off
that JavaScript object.

226
00:13:49.849 --> 00:13:51.738
I didn't like writing square brackets.

227
00:13:51.738 --> 00:13:56.365
And this also has a TypeScript
interface on it so that,

228
00:13:56.365 --> 00:14:01.204
if you've watched me type,
I make typos, [LAUGH] right?

229
00:14:01.204 --> 00:14:03.529
And nothing worse than like,
it's just undefined,

230
00:14:03.529 --> 00:14:05.086
you don't know why it's working.

231
00:14:05.086 --> 00:14:08.446
It's like some of those things
with key values, if you miss it,

232
00:14:08.446 --> 00:14:10.824
it doesn't blow up, it just doesn't work.

233
00:14:10.824 --> 00:14:12.949
So this will actually give
me a red squiggly line, but

234
00:14:12.949 --> 00:14:15.086
it's just getting the key and
value of those colors.

235
00:14:15.086 --> 00:14:20.071
But then throughout, we've got
you know this primary color text,

236
00:14:20.071 --> 00:14:25.328
we've got what it means to be a surface,
which is kinda any card table.

237
00:14:25.328 --> 00:14:30.255
And then what we do is I have
other values that we just switch

238
00:14:30.255 --> 00:14:33.690
the values of those same CSS variables.

239
00:14:33.690 --> 00:14:36.885
So we'll use the default
Tailwind stuff with dark:/.

240
00:14:36.885 --> 00:14:41.078
But you can theoretically just reference
these variables and then swap them out.

241
00:14:41.078 --> 00:14:43.322
And so I can add six different modes, and

242
00:14:43.322 --> 00:14:46.695
it's really just like I swap in
a different key value store.

243
00:14:46.695 --> 00:14:51.329
And what's cool about this approach is if
it should be the same color across both,

244
00:14:51.329 --> 00:14:53.679
we start with the base CSS variables, and

245
00:14:53.679 --> 00:14:56.987
I only override the ones that
change on the theme, right?

246
00:14:56.987 --> 00:15:01.967
But then at end of the day,
these just map to Tailwind classes, right,

247
00:15:01.967 --> 00:15:05.626
or I could just use the var syntax and
CSS variables.

248
00:15:05.626 --> 00:15:11.557
The reason that we chose to map into
Tailwind classes is that in Teleasense,

249
00:15:11.557 --> 00:15:15.274
where I do BG and
I see all of them and the colors.

250
00:15:15.274 --> 00:15:18.250
It's an ergonomics thing,
not a thing that you need to do.

251
00:15:18.250 --> 00:15:19.640
And if you don't use Tailwind,

252
00:15:19.640 --> 00:15:22.535
you can just literally use the same
approach as the CSS variables.

253
00:15:22.535 --> 00:15:25.195
There's nothing special or
Tailwind-specific.

254
00:15:25.195 --> 00:15:27.315
I just like auto complete a lot and

255
00:15:27.315 --> 00:15:31.878
I'm willing to do ridiculous things
to have that ergonomics, right?

256
00:15:31.878 --> 00:15:34.447
And cuz then all we do
at the end of the day is

257
00:15:34.447 --> 00:15:38.798
I add that root selector to the CSS
file with all my variables, right?

258
00:15:38.798 --> 00:15:41.420
You can imagine what the CSS
looks like in this case.

259
00:15:41.420 --> 00:15:47.762
And then if it's got that, we had to put
the body class on dark at this point.

260
00:15:47.762 --> 00:15:52.613
And then we have these additional classes,
surface primary, surface secondary, so

261
00:15:52.613 --> 00:15:54.948
nobody references a color ever, right?

262
00:15:54.948 --> 00:15:59.035
And if I need to change when these
are someone comes into this file and

263
00:15:59.035 --> 00:16:00.406
tweaks them, right?

264
00:16:00.406 --> 00:16:04.163
And yes, it took us a while to then
replace all the colors and use these and

265
00:16:04.163 --> 00:16:05.836
figure out what they should be.

266
00:16:05.836 --> 00:16:11.039
But now adding another theme or
tweaking anything, I just tweak one file.

267
00:16:11.039 --> 00:16:14.043
And then what we'll see when we get
to the testament storybook, and

268
00:16:14.043 --> 00:16:15.781
then I have an automated set of things,

269
00:16:15.781 --> 00:16:18.219
then verify that I did not
mess things up along the way.

