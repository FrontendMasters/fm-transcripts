WEBVTT

1
00:00:00.000 --> 00:00:03.676
All right, so
our job was to add a destructive button.

2
00:00:03.676 --> 00:00:07.777
Again, and that's what makes us kinda
really cool here is that button will be

3
00:00:07.777 --> 00:00:09.303
passed to all the children.

4
00:00:09.303 --> 00:00:11.507
The word button, in this case,
is passed to all of them.

5
00:00:11.507 --> 00:00:19.086
So really, all I have to do is write what
makes this unique, which is destructive.

6
00:00:19.086 --> 00:00:23.534
Nope, I want to hit a capital D,
story, and

7
00:00:23.534 --> 00:00:28.478
then there was the arts
variant is destructive.

8
00:00:28.478 --> 00:00:32.767
Cool, so we've got that in place and
I should be able to flip over and

9
00:00:32.767 --> 00:00:36.170
there's my destructive button,
so on and so forth.

10
00:00:36.170 --> 00:00:40.493
It does keep some stuff in memory, cool.

11
00:00:40.493 --> 00:00:45.209
So we've got all of
those in place as well.

12
00:00:45.209 --> 00:00:48.377
Before I take a tour of
this top bar up here,

13
00:00:48.377 --> 00:00:51.197
I do wanna refactor this a little bit.

14
00:00:51.197 --> 00:00:58.804
I'm gonna show you a library that
is my starter kit templates.

15
00:00:58.804 --> 00:01:03.380
It's a library that I include,
because I use it all the time,

16
00:01:03.380 --> 00:01:09.100
which is a lot of times, especially as
our components get more complicated,

17
00:01:09.100 --> 00:01:13.591
we do some amount of composing
of that class string, right?

18
00:01:13.591 --> 00:01:16.111
It's like okay,
add this class if they pass this prop.

19
00:01:16.111 --> 00:01:20.719
For instance, small, medium and large,
that's gonna be a different set of classes

20
00:01:20.719 --> 00:01:23.417
that I'm gonna programmatically add or
remove.

21
00:01:23.417 --> 00:01:28.081
And you can play a game called Fun with
Ternaries and string interpolation.

22
00:01:28.081 --> 00:01:31.365
And I mean, you will still be playing
some version of Fun with Ternaries.

23
00:01:31.365 --> 00:01:36.294
But then you end up with extra
spaces in your class name, and

24
00:01:36.294 --> 00:01:40.347
you're learning parts of
why I am very anxious.

25
00:01:40.347 --> 00:01:43.570
I don't like that, I like the ability
to have some amount of programmability.

26
00:01:43.570 --> 00:01:45.575
This is a utility, you can npm install.

27
00:01:45.575 --> 00:01:52.893
It's actually included in this repo
already that you could write yourself,

28
00:01:52.893 --> 00:02:00.001
but you don't have to because it exists,
and this library is called clsx.

29
00:02:00.001 --> 00:02:03.526
And there are some other ones,
I think there's one called CX.

30
00:02:03.526 --> 00:02:08.058
And all it does is a little utility
library for composing class names.

31
00:02:08.058 --> 00:02:12.079
Cuz right now, I have to remember to add
the space in there as I'm concatenating

32
00:02:12.079 --> 00:02:13.228
different things on.

33
00:02:13.228 --> 00:02:18.571
And with only one unique property to this
button, that's not the big deal, right?

34
00:02:18.571 --> 00:02:22.282
But you can imagine that
eventually I'm gonna cry.

35
00:02:22.282 --> 00:02:27.840
And so all this does, I'll kinda write
just some pseudo code real quick up here,

36
00:02:27.840 --> 00:02:33.576
then we'll delete it, is that it will
take some class names, foo bar, whatever.

37
00:02:33.576 --> 00:02:36.996
And then you can either
do it as one string,

38
00:02:36.996 --> 00:02:42.615
you can give it as many arguments as
you want, you can give it an array.

39
00:02:42.615 --> 00:02:46.795
But more importantly, anything that
evaluates the falsy will not be included.

40
00:02:46.795 --> 00:02:50.286
So if I said something like,
variant is secondary and

41
00:02:50.286 --> 00:02:54.399
then put secondary, right, or
something along those lines,

42
00:02:54.399 --> 00:02:59.072
right, those will not be included
if those don't evaluate the truth.

43
00:02:59.072 --> 00:03:02.631
You can use a ternary, you can use
functions, you can use whatever.

44
00:03:02.631 --> 00:03:07.315
It will effectively let you
programmatically compose a class.

45
00:03:07.315 --> 00:03:11.768
So I'm gonna refactor
this code a little bit,

46
00:03:11.768 --> 00:03:15.877
and we're gonna say
that let class name and

47
00:03:15.877 --> 00:03:20.804
we'll say clsx is initially
those button styles.

48
00:03:20.804 --> 00:03:26.760
And we'll say,
I can do this a bunch of different ways.

49
00:03:26.760 --> 00:03:28.268
You get to choose which
one makes you happy.

50
00:03:28.268 --> 00:03:35.682
You can say something like
variant = = secondary,

51
00:03:35.682 --> 00:03:42.310
and then you do &amp;&amp;, styles.

52
00:03:44.456 --> 00:03:46.183
And we do .secondary.

53
00:03:49.657 --> 00:03:52.952
And you:re gonna do the same thing for
destructive.

54
00:03:52.952 --> 00:03:59.003
Variant === destructive, and
let's say that real quick,

55
00:03:59.003 --> 00:04:04.037
and we'll say &amp;&amp; styles.destructive,
right?

56
00:04:04.037 --> 00:04:07.011
This will do the trick and
we can verify that.

57
00:04:07.011 --> 00:04:09.796
Again, this is why I like
developing with this.

58
00:04:09.796 --> 00:04:14.579
But happens to be that the way that
CSS modules work this is as you

59
00:04:14.579 --> 00:04:19.196
can almost tell an object where
the keys are the class names.

60
00:04:19.196 --> 00:04:23.726
And because you saw when I refactor
that code instead of make it button dash

61
00:04:23.726 --> 00:04:27.180
secondary button dash destructive,
now you know why.

62
00:04:27.180 --> 00:04:29.689
I could theoretically also
do something like this.

63
00:04:34.912 --> 00:04:41.884
Right, and that will theoretically get
me secondary and destructive as well.

64
00:04:41.884 --> 00:04:43.896
Could I have made a primary class sharp?

65
00:04:43.896 --> 00:04:47.722
But because that will become undefined,
it won't be included in there.

66
00:04:47.722 --> 00:04:50.185
So we get the same idea and so

67
00:04:50.185 --> 00:04:55.231
you can see how this becomes
a really nice way to do this.

68
00:04:55.231 --> 00:05:02.054
One pattern that this is a choice
time on if you wanna do this, right?

69
00:05:02.054 --> 00:05:04.494
And we've gone back and forth on our team.

70
00:05:04.494 --> 00:05:09.720
And my official stance on this is for
very primitive components,

71
00:05:09.720 --> 00:05:15.421
go for it and maybe you don't do it for
more complicated ones, he says,

72
00:05:15.421 --> 00:05:20.456
before he tells you what it is,
which is do you want the consumer

73
00:05:20.456 --> 00:05:25.608
of this button to be able to pass
in additional classes, right?

74
00:05:25.608 --> 00:05:30.576
Cuz right now, we have a problem with they
pass in classes since that comes after,

75
00:05:30.576 --> 00:05:34.693
then theoretically, they will
override even my default classes.

76
00:05:34.693 --> 00:05:39.810
So one way to solve for that, it's just
an order of operations issue, right?

77
00:05:39.810 --> 00:05:43.829
Now, these class take precedents,
right, but

78
00:05:43.829 --> 00:05:49.531
if you want to let somebody pass in
classes, right, you can do that.

79
00:05:49.531 --> 00:05:51.057
Why do you wanna do that?

80
00:05:51.057 --> 00:05:53.949
The reason you do and
do not wanna do that are the same reason,

81
00:05:53.949 --> 00:05:55.952
why you would wanna let somebody do that.

82
00:05:55.952 --> 00:05:58.859
Okay, well, they need to just
like add some extra padding or

83
00:05:58.859 --> 00:06:00.003
some little edge case.

84
00:06:00.003 --> 00:06:04.513
It's nice to give them that ability,
right, to pass in just a few

85
00:06:04.513 --> 00:06:09.112
extra classes for some amount of
spacing or create another color.

86
00:06:09.112 --> 00:06:11.941
Now, think about the worst
person on your team.

87
00:06:11.941 --> 00:06:15.962
Probably you.

88
00:06:15.962 --> 00:06:19.468
The one that writes the most
reckless code, right, and

89
00:06:19.468 --> 00:06:23.869
know that they are going to do that
rather than update the component and

90
00:06:23.869 --> 00:06:26.416
you will eventually regret it, right?

91
00:06:26.416 --> 00:06:30.061
And that's why I say for very simple
components, maybe you choose to do it.

92
00:06:30.061 --> 00:06:32.090
We currently do this trick and

93
00:06:32.090 --> 00:06:36.481
then I think we kinda had the talk
of maybe we stopped doing this.

94
00:06:36.481 --> 00:06:39.551
But I cannot say it's always a bad idea or
always a good idea.

95
00:06:39.551 --> 00:06:42.567
This is a kind of it depends situation.

96
00:06:42.567 --> 00:06:44.468
So it's the ability to let
them pass on a class name.

97
00:06:44.468 --> 00:06:49.347
So what we can do here is we can separate
out class name as one of the props

98
00:06:49.347 --> 00:06:50.526
that we take in.

99
00:06:50.526 --> 00:06:55.360
And now that we've done this,
we've got the issue where

100
00:06:55.360 --> 00:06:59.699
it's duplicated, so
we'll fix that in a second.

101
00:06:59.699 --> 00:07:03.720
The order doesn't matter anymore, cuz it's
no longer in that prop spread operator,

102
00:07:03.720 --> 00:07:04.721
cuz we pulled it out.

103
00:07:04.721 --> 00:07:06.282
So this is the rest of everything.

104
00:07:06.282 --> 00:07:09.385
So we're taking out variant class name,
this is all the other props.

105
00:07:09.385 --> 00:07:10.355
Now, order doesn't matter.

106
00:07:10.355 --> 00:07:13.357
You can put in whatever order you want.

107
00:07:13.357 --> 00:07:19.678
And what we can do here is we can
actually put it into the CLSX function,

108
00:07:19.678 --> 00:07:27.987
right, and just say, Class name,
and here the order does matter.

109
00:07:27.987 --> 00:07:30.562
We'll call this one classes,
right, I don't know.

110
00:07:30.562 --> 00:07:35.008
It can't be class, cuz of JavaScript.

111
00:07:35.008 --> 00:07:40.670
So now, basically, you've got your default
styles, right, for the primary button.

112
00:07:40.670 --> 00:07:47.001
Then you have any kind of overrides for
the secondary destruction button,

113
00:07:47.001 --> 00:07:50.829
then you have whatever they pass in,
right?

114
00:07:50.829 --> 00:07:56.906
And this means that if they wanna add
some extra margins to the button or

115
00:07:56.906 --> 00:08:01.554
what have you, they can go ahead and
do that, right?

116
00:08:01.554 --> 00:08:03.094
If you don't that, don't do it.

117
00:08:03.094 --> 00:08:04.890
We're on the fence both ways.

118
00:08:04.890 --> 00:08:08.450
I can argue for it, I can argue against
it, but this is a way to kind of let,

119
00:08:08.450 --> 00:08:10.935
at least the primitive
components be extensible.

120
00:08:10.935 --> 00:08:15.606
I would say that for the kinda higher
order components that build out of

121
00:08:15.606 --> 00:08:20.910
multiple kind of atoms and stuff like
that, you might not choose to allow that,

122
00:08:20.910 --> 00:08:26.612
especially, cuz a great example is we have
this component called input with label and

123
00:08:26.612 --> 00:08:29.020
all the different accoutrements.

124
00:08:29.020 --> 00:08:31.182
So then where does the classes go?

125
00:08:31.182 --> 00:08:35.698
They go on the input, they're going to
container, they're going to label, right?

126
00:08:35.698 --> 00:08:39.613
And there's no right answer, that all
answers to that question are wrong,

127
00:08:39.613 --> 00:08:43.237
cuz [LAUGH] I have done them all and
regretted each and every one of them.

128
00:08:43.237 --> 00:08:45.982
So this is a pattern you can
choose to use, choose not to use.

129
00:08:45.982 --> 00:08:50.062
Our current philosophy on my team is that
we're pretty sure it's a bad idea because,

130
00:08:50.062 --> 00:08:53.687
again, then it becomes really clear to
know if you make a change in the design

131
00:08:53.687 --> 00:08:56.350
system, is it consistent
across your code base or not,

132
00:08:56.350 --> 00:08:58.865
because somebody could have added a class,
right?

133
00:08:58.865 --> 00:09:01.476
And so I'm not gonna argue
that we should do that, but

134
00:09:01.476 --> 00:09:03.739
I want to expose you to it
if you have a use case or

135
00:09:03.739 --> 00:09:07.825
you're actually in the way that we're
using these things it is really important.

136
00:09:07.825 --> 00:09:13.286
I would advise though only on the lowest
level doesn't make a ton of sense.

