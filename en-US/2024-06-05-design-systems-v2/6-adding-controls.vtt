WEBVTT

1
00:00:00.000 --> 00:00:05.051
So we have a problem, it's not really
a problem, it's an opportunity, right?

2
00:00:05.051 --> 00:00:09.156
Did this team building and it was like,
we don't call it a blindfold,

3
00:00:09.156 --> 00:00:11.046
we call it an opportunity fold.

4
00:00:11.046 --> 00:00:13.425
It's gonna live rent free in my head.

5
00:00:13.425 --> 00:00:18.792
Which is, I got my disruptive button,
a secondary button,

6
00:00:18.792 --> 00:00:23.424
a primary button,
I don't have a disabled button,

7
00:00:23.424 --> 00:00:28.283
right, and there are some
ways that I can handle this.

8
00:00:28.283 --> 00:00:33.461
I could theoretically, I could override,
I could put like disabled in here.

9
00:00:33.461 --> 00:00:35.768
TypeScript is gonna get angry with you.

10
00:00:35.768 --> 00:00:39.194
Right, it's like, then you got to
omit it from the one you inherited.

11
00:00:39.194 --> 00:00:43.085
This is not a type of course on I don't
wanna have that conversation right now.

12
00:00:43.085 --> 00:00:48.599
But I would love to have a toggle here,
I'd love to be able to say like,

13
00:00:48.599 --> 00:00:52.911
hey, I want to toggle this
thing enabled or disabled.

14
00:00:52.911 --> 00:00:53.529
Can you make an argument?

15
00:00:53.529 --> 00:00:54.743
We should make our own story for it.

16
00:00:54.743 --> 00:01:00.020
Sure, but like, again, buttons in
particular, I might have one disabled

17
00:01:00.020 --> 00:01:05.145
button to make sure that like,
I don't need to test native HTML, right?

18
00:01:05.145 --> 00:01:07.093
I just wanna be able to
toggle it at some point.

19
00:01:07.093 --> 00:01:09.558
So our problem right now is that,

20
00:01:09.558 --> 00:01:14.400
this was able to figure out these
controls based on the props, but

21
00:01:14.400 --> 00:01:20.230
it doesn't go into the JXX types and
figure out every single button property.

22
00:01:20.230 --> 00:01:22.218
So how do we deal with that?

23
00:01:22.218 --> 00:01:25.131
So, it tried to acquiesce
its own controls,

24
00:01:25.131 --> 00:01:28.733
we can actually have a little
bit of a say in this as well,

25
00:01:28.733 --> 00:01:33.046
which is we have ARGs and
then we have another one called ARG types.

26
00:01:33.046 --> 00:01:34.479
Thank you IntelliSense.

27
00:01:34.479 --> 00:01:36.409
And so ARG types lets you then,

28
00:01:36.409 --> 00:01:40.863
say like you can add extra detail to any
of the types that it came up with or

29
00:01:40.863 --> 00:01:45.787
you can actually define additional
controls that you wanna have here as well.

30
00:01:45.787 --> 00:01:50.180
So we're gonna add one called disabled,

31
00:01:50.180 --> 00:01:56.088
we're going to say that
it is a Boolean control.

32
00:01:56.088 --> 00:01:58.918
I spelled control wrong,
that's why it didn't render.

33
00:01:58.918 --> 00:02:00.724
There we go.

34
00:02:00.724 --> 00:02:07.184
And so, we have this set Boolean, and
if we hit that, then we get the toggle.

35
00:02:07.184 --> 00:02:12.557
You might be, your initial thought,
if you're like me,

36
00:02:12.557 --> 00:02:19.701
is, why do I got to click Set Boolean and
then set the Boolean to true or false?

37
00:02:19.701 --> 00:02:20.738
That's annoying.

38
00:02:20.738 --> 00:02:23.200
So he's two options.

39
00:02:23.200 --> 00:02:29.109
When you think that that is annoying,
you can just give it a default argument.

40
00:02:29.109 --> 00:02:33.333
A false and
anyone that had false as an argument,

41
00:02:33.333 --> 00:02:38.597
it will go ahead and now by default
it is a toggle set to false.

42
00:02:38.597 --> 00:02:43.761
And so now, the reason why Storybook
defaults that, or at least my belief

43
00:02:43.761 --> 00:02:49.364
of the reason why storybook defaults that,
is sometimes undefined is its own.

44
00:02:49.364 --> 00:02:53.371
[LAUGH] Like, you don't want to assume
false or falsy based on undefined,

45
00:02:53.371 --> 00:02:56.748
sometimes undefined means
something different than false.

46
00:02:56.748 --> 00:03:03.221
So that gives you the ability
to have undefined true or false.

47
00:03:03.221 --> 00:03:06.401
So in a lot of cases, but if I know
I want it to be false or true, so

48
00:03:06.401 --> 00:03:10.241
now all of my stories have this disabled,
so I can see the disabled version,

49
00:03:10.241 --> 00:03:13.977
the destructive button, the disabled
version of the secondary button.

50
00:03:13.977 --> 00:03:17.060
We can see that the cursor
has a fun little not allowed,

51
00:03:17.060 --> 00:03:19.618
we can set the disabled here as well,
right?

52
00:03:19.618 --> 00:03:24.439
And so, if you need to add additional
controls, again, if you have it,

53
00:03:24.439 --> 00:03:29.024
if you're using TypeScript and
React or View or the big frameworks,

54
00:03:29.024 --> 00:03:32.762
then it will try to acquiesce
these as best as possible.

55
00:03:32.762 --> 00:03:35.571
And if you pass it in as an ARG
with any framework, it'll lag,

56
00:03:35.571 --> 00:03:38.552
if you're passing a string,
it'll assume that it's a string.

57
00:03:38.552 --> 00:03:41.514
So we just felt like
the tooling is not the same.

58
00:03:41.514 --> 00:03:45.827
So I do have to define almost all
of my archetypes, React I don't.

59
00:03:45.827 --> 00:03:47.862
It all kinda depends, and

60
00:03:47.862 --> 00:03:52.865
we'll see more ways to tweak these
things as we go along as well.

61
00:03:52.865 --> 00:03:58.122
So, other things we can do is we can add
a little bit of extra nuance here, right?

62
00:03:58.122 --> 00:04:02.389
Like this set of radio buttons, it's fine.

63
00:04:02.389 --> 00:04:03.893
It's good.

64
00:04:03.893 --> 00:04:08.270
But you can imagine like,
what happens if we end up with a component

65
00:04:08.270 --> 00:04:11.724
that takes a union of 42 different types,
right?

66
00:04:11.724 --> 00:04:16.167
That could get out of hand,
even if there are more buttons, right?

67
00:04:16.167 --> 00:04:20.304
And so, we can also kind of
take existing ones here, and

68
00:04:20.304 --> 00:04:26.138
then also kind of like adds some extra
nuanced as to what they should be as well.

69
00:04:26.138 --> 00:04:29.849
So let's go take a look at that.

70
00:04:29.849 --> 00:04:34.435
So we can go ahead and say something like,

71
00:04:34.435 --> 00:04:41.263
we'll say that variant is a control,
why can't I type that?

72
00:04:44.812 --> 00:04:51.338
Will say that it's a select, and
now it becomes a drop down instead, right?

73
00:04:51.338 --> 00:04:57.720
And there are other nuances that
we'll explore as we go along in here.

74
00:04:57.720 --> 00:05:02.661
The other interesting part is that
right now it is saying that that little

75
00:05:02.661 --> 00:05:05.259
star means that it is a required prop.

76
00:05:05.259 --> 00:05:07.228
I'm not exactly sure that that's true,

77
00:05:07.228 --> 00:05:10.280
it's probably true in the way that
I wrote the story or the type.

78
00:05:10.280 --> 00:05:16.816
But I don't think that it's necessarily
true because we default to,

79
00:05:16.816 --> 00:05:21.591
let's keep the defaults
the primary theoretically,

80
00:05:21.591 --> 00:05:27.110
say variant is primary, and
we'll make this an optional one.

81
00:05:27.110 --> 00:05:31.025
And then we get some kind
of implicit documentation

