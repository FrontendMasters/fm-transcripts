WEBVTT

1
00:00:00.000 --> 00:00:04.485
This is a relatively unoptimized system,
some of these cores can be really slow,

2
00:00:04.485 --> 00:00:07.351
we're gonna talk about
optimizing queries later.

3
00:00:09.058 --> 00:00:13.330
But in the meantime I'm gonna ask you to,
I think this is a useful exercise for you,

4
00:00:13.330 --> 00:00:16.680
you have all of the tools already
to answer all these questions.

5
00:00:16.680 --> 00:00:20.361
They're gonna require you to kind of
explore the data, look at the tables,

6
00:00:20.361 --> 00:00:22.099
figure out how the tables connect.

7
00:00:22.099 --> 00:00:23.513
This is all stuff that I did.

8
00:00:26.301 --> 00:00:29.880
But I've taught you everything
that you need to do here.

9
00:00:29.880 --> 00:00:32.087
It just might be hard to put it together,
but that's hard,

10
00:00:32.087 --> 00:00:33.157
struggling will teach you.

11
00:00:34.997 --> 00:00:37.439
So, I'm gonna give you some time here, but

12
00:00:37.439 --> 00:00:40.220
these are the questions
that I want you to answer.

13
00:00:40.220 --> 00:00:43.399
Which movie made the most money?

14
00:00:43.399 --> 00:00:45.913
ORDER BY is gonna be your friend here,

15
00:00:45.913 --> 00:00:50.561
particularly is descending order and
some of these have no revenues.

16
00:00:50.561 --> 00:00:56.246
You can use coalesce, column name and
zero to say if it's null, give me zero or

17
00:00:56.246 --> 00:01:02.402
you can also say ORDER BY,
I think it's revenue is the name of the.

18
00:01:02.402 --> 00:01:04.716
And then you can put nulls last,

19
00:01:04.716 --> 00:01:08.672
it'll actually incorporate
that into your ORDER BY.

20
00:01:11.125 --> 00:01:18.245
This one, there's no joins here,
you're gonna do an ORDER BY basically.

21
00:01:18.245 --> 00:01:24.082
How much revenue did the movies
Keanu Reeves act in make?

22
00:01:26.838 --> 00:01:32.752
So casts is the name of the connecting
table between movies and people.

23
00:01:32.752 --> 00:01:35.952
You're gonna have to do
multiple joins here and

24
00:01:35.952 --> 00:01:41.397
you're also gonna have to use something
that we haven't used so far called sum.

25
00:01:41.397 --> 00:01:45.589
So, we have select count star,
which we did, right?

26
00:01:45.589 --> 00:01:50.548
We can also do select, Sum of revenue.

27
00:01:55.596 --> 00:01:58.940
This is how much money all movies
have made in this database,

28
00:01:58.940 --> 00:02:00.263
that's what sum does.

29
00:02:05.038 --> 00:02:06.724
I think if we do average,
it might get upset.

30
00:02:06.724 --> 00:02:08.087
No, this is the average as well.

31
00:02:10.743 --> 00:02:12.168
This is not gonna be totally accurate,

32
00:02:12.168 --> 00:02:15.367
because a bunch of these movies don't have
revenue information associated with them,

33
00:02:15.367 --> 00:02:22.344
but, Another aggregation function like
count, you treat it exactly like count.

34
00:02:22.344 --> 00:02:25.187
Which 5 people were in the movies
that had the most revenue?

35
00:02:31.078 --> 00:02:36.404
The answer probably won't surprise you.

36
00:02:36.404 --> 00:02:38.662
So, these two are really similar.

37
00:02:41.110 --> 00:02:45.045
But it's kind of inverting, one's
looking at Keanu Reeves specifically so

38
00:02:45.045 --> 00:02:47.345
you're driving that from the people table,

39
00:02:47.345 --> 00:02:50.806
whereas the other one's driving
it from the movies table, right?

40
00:02:50.806 --> 00:02:54.120
Which 10 movies have the most keywords?

41
00:02:54.120 --> 00:02:58.079
So there is a movie keywords table.

42
00:02:58.079 --> 00:03:03.506
There is a categories table that
names what's the movie keywords,

43
00:03:03.506 --> 00:03:09.420
because if you look at movie keywords,
it has a movie ID and a category ID.

44
00:03:09.420 --> 00:03:12.400
It actually doesn't tell you what
the name of the category is,

45
00:03:12.400 --> 00:03:15.450
the name of the category exists
in the categories table.

46
00:03:15.450 --> 00:03:17.827
So you got to join multiple times here,
right?

47
00:03:17.827 --> 00:03:19.449
It's a many to many relationship.

48
00:03:21.697 --> 00:03:25.634
And then which category is
associated with the most movies?

49
00:03:32.345 --> 00:03:37.910
Another thing to know about this database,
There is German,

50
00:03:37.910 --> 00:03:41.860
English, Spanish and
French on this database as well.

51
00:03:43.400 --> 00:03:44.422
So, this one for

52
00:03:44.422 --> 00:03:48.880
example, I think there's actually
quite a bit of German stuff in here.

53
00:03:50.050 --> 00:03:53.144
The most common one might
actually be German, so

54
00:03:53.144 --> 00:03:55.792
don't be surprised if that's the case.

55
00:03:55.792 --> 00:03:59.371
Bonus points if you can help me with
the English ones, or the German ones,

56
00:03:59.371 --> 00:04:00.138
I don't care.

57
00:04:00.138 --> 00:04:04.831
So hopefully the brain is going,
you're thinking about this.

58
00:04:04.831 --> 00:04:07.785
Just start typing some queries,
see what happens.

59
00:04:07.785 --> 00:04:12.637
If you click here on the next one,
all of the answers are on the next page.

60
00:04:12.637 --> 00:04:15.910
So again, I just want you to learn,
I don't care if you get it right or

61
00:04:15.910 --> 00:04:18.917
whatever the case,
just care that you're learning about it.

62
00:04:20.027 --> 00:04:22.047
So, do whatever you have
to do to get there.

