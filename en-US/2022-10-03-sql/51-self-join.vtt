WEBVTT

1
00:00:00.000 --> 00:00:03.583
So, I found myself when I was doing

2
00:00:03.583 --> 00:00:08.905
the One of the part earlier where I gave
myself the category name of Brian Holt.

3
00:00:08.905 --> 00:00:12.695
I was trying to find where there was an
English, or there were there was a German

4
00:00:12.695 --> 00:00:15.525
word for something and
not an English word for something.

5
00:00:15.525 --> 00:00:18.064
So, I was like I can use SQL to find that.

6
00:00:18.064 --> 00:00:23.323
You can use SQL to Find something that
has a German translation in a table but

7
00:00:23.323 --> 00:00:27.266
does not have an English
translation in the same table.

8
00:00:27.266 --> 00:00:28.804
How do you do that?

9
00:00:28.804 --> 00:00:33.493
You are actually going to
join a table to itself.

10
00:00:33.493 --> 00:00:35.235
So, you can do what's called a self join.

11
00:00:35.235 --> 00:00:36.986
And I'm gonna show you how
to do that really quick.

12
00:00:36.986 --> 00:00:38.885
So, reasonable question.

13
00:00:38.885 --> 00:00:43.382
Let's say you run this multinational
movie database and you wanna go and

14
00:00:43.382 --> 00:00:46.562
make sure that everything
has a translation in it.

15
00:00:46.562 --> 00:00:50.245
You can write a query that said like, give
me all of the Italian things that don't

16
00:00:50.245 --> 00:00:52.211
have English translations or vice versa.

17
00:00:53.981 --> 00:01:00.019
So, I'm gonna select c1.category id.

18
00:01:00.019 --> 00:01:04.942
C1 language As de

19
00:01:04.942 --> 00:01:09.325
language or de lang.

20
00:01:09.325 --> 00:01:15.316
So, we're gonna do C1 dot name as de name.

21
00:01:17.369 --> 00:01:25.013
C2 to language as English name en-lang

22
00:01:28.717 --> 00:01:34.762
And C2.name as en name.

23
00:01:34.762 --> 00:01:37.034
So, it's a bunch of things
that we're selecting.

24
00:01:39.799 --> 00:01:47.297
From categories names c1.

25
00:01:49.709 --> 00:01:55.309
We're gonna do a LEFT JOIN because we're
trying to find things that have For

26
00:01:55.309 --> 00:01:57.557
a language of de.

27
00:01:57.557 --> 00:02:01.317
So, you wanna include those in the result
set but don't have an English translation.

28
00:02:01.317 --> 00:02:03.384
So, you want to do a LEFT JOIN.

29
00:02:03.384 --> 00:02:05.586
We can also get it done in
like a full OUTER JOIN.

30
00:02:05.586 --> 00:02:07.655
And then we will be able
to see on both sides and

31
00:02:07.655 --> 00:02:09.244
just check where things are null.

32
00:02:09.244 --> 00:02:09.966
We're not gonna do that.

33
00:02:09.966 --> 00:02:11.778
We're just looking for

34
00:02:11.778 --> 00:02:16.496
things that have German words
that do not have English words.

35
00:02:16.496 --> 00:02:20.557
So, LEFT JOIN category names again.

36
00:02:20.557 --> 00:02:22.835
And we're just referencing the same table.

37
00:02:22.835 --> 00:02:25.285
There's no special magic to self joins.

38
00:02:25.285 --> 00:02:28.066
We're just calling it something else.

39
00:02:28.066 --> 00:02:30.452
And we have two versions
of the same table.

40
00:02:31.952 --> 00:02:37.776
On C1 dot category

41
00:02:37.776 --> 00:02:45.421
id = c2.category id.

42
00:02:45.421 --> 00:02:50.794
And C2.language= en,

43
00:02:52.536 --> 00:03:00.025
Where C2 dot language Is NULL.

44
00:03:02.564 --> 00:03:11.036
And C1.language is German, right?

45
00:03:12.981 --> 00:03:17.435
And we'll limit that to 20 or
something like that.

46
00:03:19.575 --> 00:03:23.096
So what I did, is I asked the question,
let's just break it.

47
00:03:23.096 --> 00:03:29.898
I recognize this is weird and confusing
to look at a table Adjoining to itself.

48
00:03:29.898 --> 00:03:35.072
But I joined the category tables to itself
and on once on the left side I have

49
00:03:35.072 --> 00:03:40.095
all German categories on the right
side I have all English categories.

50
00:03:40.095 --> 00:03:43.122
And I'm asking, join them together.

51
00:03:43.122 --> 00:03:47.235
Wherever there is both an English name and
a German leg,

52
00:03:47.235 --> 00:03:49.694
eliminated from the result set.

53
00:03:49.694 --> 00:03:54.168
Leave me with only things that
have a German translation and

54
00:03:54.168 --> 00:03:58.474
what you are not able to find
an English translation for.

55
00:03:58.474 --> 00:04:01.980
So, all of these things here
they exist in the category names

56
00:04:01.980 --> 00:04:03.989
table with a German translation.

57
00:04:03.989 --> 00:04:07.190
But there's not a second row to
represent the English translation of it.

58
00:04:07.190 --> 00:04:09.686
So, this is easier to read.

59
00:04:10.906 --> 00:04:13.325
Just talking about it one more time.

60
00:04:13.325 --> 00:04:16.921
I'm treating this,
as far as PostgreSQL cares these are two

61
00:04:16.921 --> 00:04:21.022
separate tables It does not care
that it's actually the same table.

62
00:04:21.022 --> 00:04:22.541
So, that's why we have C1 and C2.

63
00:04:22.541 --> 00:04:25.238
The first thing what I do where here,

64
00:04:25.238 --> 00:04:31.075
I make sure that everything that is in
the result set from the from from this C1.

65
00:04:31.075 --> 00:04:38.327
This is just German words in
the category names table.

66
00:04:38.327 --> 00:04:40.629
So, my first result set.

67
00:04:40.629 --> 00:04:45.150
My first table, if you will,
is just German words.

68
00:04:45.150 --> 00:04:47.715
I am left joining the table.

69
00:04:47.715 --> 00:04:51.143
C2 ignore that it's the same thing.

70
00:04:51.143 --> 00:04:55.116
And in this set over here,
it's just English words.

71
00:04:55.116 --> 00:04:58.747
Just German words just English words,
right?

72
00:04:58.747 --> 00:05:01.593
And then joining them on the category id.

73
00:05:03.057 --> 00:05:08.292
So, it's gonna join everything
together and I'm saying eliminate

74
00:05:08.292 --> 00:05:12.996
where C2 is no, that means it
came in from left join, right?

75
00:05:12.996 --> 00:05:16.709
So, that there was a German word, and
there was no English word for it.

76
00:05:16.709 --> 00:05:18.602
Which means that there was
no translation for it.

77
00:05:18.602 --> 00:05:21.966
Little mind bending, but
does that make sense?

78
00:05:21.966 --> 00:05:23.573
Yeah, Mark.

79
00:05:23.573 --> 00:05:26.163
&gt;&gt; Could you not do that
with the sub-group?

80
00:05:27.236 --> 00:05:28.584
&gt;&gt; You would still have a join.

81
00:05:28.584 --> 00:05:32.973
So, no I don't think you could no matter
what somewhere you're gonna have to

82
00:05:32.973 --> 00:05:33.722
have a join.

83
00:05:33.722 --> 00:05:35.625
To be really clear about this,

84
00:05:35.625 --> 00:05:40.690
this took me some time of me staring at my
computer's like, how am I gonna do this?

85
00:05:44.300 --> 00:05:50.062
So, that was a fun little adventure and
joins.

86
00:05:50.062 --> 00:05:52.725
Nothing here is anything that
you haven't seen before,

87
00:05:52.725 --> 00:05:54.725
it's just weird cuz it's the same thing.

