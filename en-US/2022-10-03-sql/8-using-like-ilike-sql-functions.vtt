WEBVTT

1
00:00:00.156 --> 00:00:07.079
We are gonna talk about functions and
we're gonna look at some text search.

2
00:00:07.079 --> 00:00:13.679
So the section we're on here is like and
functions under the data section.

3
00:00:14.970 --> 00:00:19.178
So imagine you're writing something where
people can like search for stuff, right?

4
00:00:19.178 --> 00:00:22.724
Imagine someone can type
a little text string and

5
00:00:22.724 --> 00:00:27.576
then it's gonna go search your
database to find things like that.

6
00:00:27.576 --> 00:00:31.105
If someone says search for pota,

7
00:00:31.105 --> 00:00:35.642
you would expect that to show up potatoes,

8
00:00:35.642 --> 00:00:40.443
right, I think that's pretty reasonable.

9
00:00:40.443 --> 00:00:42.248
So let's read that query, select star.

10
00:00:44.103 --> 00:00:49.035
FROM ingredients

11
00:00:49.035 --> 00:00:54.954
WHERE title= pota.

12
00:00:54.954 --> 00:01:01.868
As you might guess,
that doesn't work, right, why?

13
00:01:01.868 --> 00:01:04.519
Well, nothing equals potatoes, right?

14
00:01:04.519 --> 00:01:07.474
It's actually doing like
a full equality check.

15
00:01:07.474 --> 00:01:11.912
We need something that's
a little bit more fuzzy, right?

16
00:01:11.912 --> 00:01:16.313
So the way that we can do that
is with something called LIKE.

17
00:01:16.313 --> 00:01:19.203
So you can say a word title.

18
00:01:19.203 --> 00:01:25.591
Instead of saying equals,
you're gonna say LIKE And

19
00:01:25.591 --> 00:01:29.010
then you have to say WHERE is it LIKE,
right?

20
00:01:29.010 --> 00:01:30.453
So if you wanna search for

21
00:01:30.453 --> 00:01:34.314
everything where it's just like it
ends in pota you would do this.

22
00:01:34.314 --> 00:01:35.888
You put the percent here.

23
00:01:35.888 --> 00:01:39.883
And then, it would give you
anything that ends in pota,

24
00:01:39.883 --> 00:01:42.349
obviously that's not anything.

25
00:01:42.349 --> 00:01:46.908
So, if we put it here,
that means that pota

26
00:01:46.908 --> 00:01:51.476
shows up somewhere in the string, right?

27
00:01:51.476 --> 00:01:52.332
And there you go.

28
00:01:54.851 --> 00:02:01.991
This would also match this, right, because
it does actually start with pota, okay?

29
00:02:01.991 --> 00:02:03.737
And that is what LIKE does.

30
00:02:03.737 --> 00:02:08.000
LIKE basically says like this is going
to show up somewhere in here and

31
00:02:08.000 --> 00:02:10.799
I'll give you some sort
of pattern to match.

32
00:02:10.799 --> 00:02:13.715
And again this won't show up anything
because you're not giving it any space.

33
00:02:13.715 --> 00:02:20.213
Now there's still a problem with this
if I do capital P, well like this.

34
00:02:23.138 --> 00:02:28.127
This capital is kind of making it
mess up because of this, right?

35
00:02:28.127 --> 00:02:32.910
It's not matching that P, there's a couple
options here of things you can do.

36
00:02:35.423 --> 00:02:37.027
We could do something like.

37
00:02:46.653 --> 00:02:50.503
So LOWER is a function is gonna
take everything in title and

38
00:02:50.503 --> 00:02:52.397
make it lowercase, right?

39
00:02:52.397 --> 00:02:55.280
Same thing you could do upper and then you
just have to make sure that your search

40
00:02:55.280 --> 00:02:58.043
string can contain uppercase characters
and that would also work as well.

41
00:03:01.377 --> 00:03:04.402
That totally works, that's very okay.

42
00:03:04.402 --> 00:03:08.837
But there's actually a lot
easier way to do that.

43
00:03:10.878 --> 00:03:16.311
You can just say ILIKE,
which is insensitive like, right?

44
00:03:16.311 --> 00:03:19.574
And then you get this it works
just fine it doesn't matter.

45
00:03:19.574 --> 00:03:22.280
We can make this all
sorts of weird things.

46
00:03:25.518 --> 00:03:27.568
So that's actually what you're gonna do.

47
00:03:27.568 --> 00:03:30.259
I wanted to show you how to use a built-in
function because those end up being

48
00:03:30.259 --> 00:03:30.982
pretty important.

49
00:03:30.982 --> 00:03:34.640
In fact, we're gonna use another
one here in just a second.

50
00:03:34.640 --> 00:03:39.665
So all right, we're writing our text
box that people can search for stuff.

51
00:03:39.665 --> 00:03:47.134
If someone searches for fruit, we'll do
expect cherry to show up, probably, right?

52
00:03:47.134 --> 00:03:50.210
It's very reasonable someone search for
fruit and expect cherry to show up.

53
00:03:50.210 --> 00:03:52.060
So how do we do that?

54
00:03:52.060 --> 00:03:55.288
The type does not exist in the title,

55
00:03:55.288 --> 00:04:00.197
so how do we search across
multiple different columns.

56
00:04:00.197 --> 00:04:01.200
A bunch of ways to do it, but

57
00:04:01.200 --> 00:04:03.361
I'm gonna show you one of
the most straightforward ways.

58
00:04:03.361 --> 00:04:07.967
Let's start FROM ingredients WHERE and

59
00:04:07.967 --> 00:04:12.444
then we'll use this CONCAT function.

60
00:04:12.444 --> 00:04:17.540
And we're gonna do title and type.

61
00:04:17.540 --> 00:04:24.879
Then we're gonna say ILIKE fruit.

62
00:04:28.986 --> 00:04:30.294
And there you go.

63
00:04:30.294 --> 00:04:32.175
This will search across all these.

64
00:04:32.175 --> 00:04:34.176
And because fruit shows up in the type,

65
00:04:34.176 --> 00:04:38.190
these are all showing up despite the fact
that they don't show up in the title.

66
00:04:38.190 --> 00:04:41.234
And CONCAT is exactly what you expect
to be it's just taking two strings and

67
00:04:41.234 --> 00:04:42.258
shoving them together.

68
00:04:46.054 --> 00:04:49.263
Now let me show you why this
ends up being a little weird,

69
00:04:49.263 --> 00:04:52.559
it literally is just putting
strings together, right?

70
00:04:52.559 --> 00:04:58.808
So what happens if I search for
something like rryfru?

71
00:05:03.821 --> 00:05:08.755
Well, you're gonna get all
the berries because the rry and

72
00:05:08.755 --> 00:05:14.096
the fru get pushed together into
matching that stream, right?

73
00:05:14.096 --> 00:05:17.839
Now, for the most part,
if someone's searching for rryfru,

74
00:05:17.839 --> 00:05:21.383
what the hell are they looking for,
right, I don't know.

75
00:05:21.383 --> 00:05:24.814
You might as well give them something,
but that is a little bit strange so

76
00:05:24.814 --> 00:05:27.586
you have to be kinda aware that
it's a little bit strange.

77
00:05:31.184 --> 00:05:34.970
And I did want to show you that you
can use multiple these together.

78
00:05:39.224 --> 00:05:42.093
Right, that does work and then you can do

79
00:05:49.182 --> 00:05:53.796
Now except, yeah we're doing lower,
so that's why that doesn't match.

80
00:05:59.530 --> 00:06:01.744
But you can do multiple
does functions change and

81
00:06:01.744 --> 00:06:04.392
there's a bunch of those built
in functions to Postgres.

82
00:06:04.392 --> 00:06:09.854
Most of the things that you expect
coming from like JavaScript and

83
00:06:09.854 --> 00:06:11.851
stuff like that exist.

84
00:06:11.851 --> 00:06:16.833
I think, Now is one of them

85
00:06:16.833 --> 00:06:21.084
we can actually get like the time it
is right now there's a bunch of them.

86
00:06:21.084 --> 00:06:22.388
That's kind of a fun little trick that

87
00:06:22.388 --> 00:06:24.075
you can do with some of
these built in functions.

88
00:06:24.075 --> 00:06:26.950
You can select LOWER,

89
00:06:31.732 --> 00:06:34.800
It'll actually give you
the results of some of these.

90
00:06:34.800 --> 00:06:35.876
If you want to try them out.

91
00:06:35.876 --> 00:06:38.104
You just do select and
then whatever you wanna try.

92
00:06:38.104 --> 00:06:43.516
Yeah, and so
I did leave you a link here in the ducts,

93
00:06:43.516 --> 00:06:50.416
there is a ton a ton a ton a ton of
functions and operators to do here.

94
00:06:50.416 --> 00:06:54.006
We are not even gonna like scratched the
surface and how many of them there are.

95
00:06:54.006 --> 00:06:58.560
I think we're gonna do coalesce here in
a little bit because that one's really

96
00:06:58.560 --> 00:06:59.119
useful.

97
00:06:59.119 --> 00:07:03.579
But I showed you like now, you can do
like regular expressions if you're

98
00:07:03.579 --> 00:07:08.350
feeling like you want to go and crazy,
like there's a lot of stuff you can do.

99
00:07:11.218 --> 00:07:12.705
Exists, that's another one.

100
00:07:12.705 --> 00:07:15.650
There's like arrays and such.

101
00:07:15.650 --> 00:07:20.020
But not the point, we're not gonna
go too much into those today.

102
00:07:20.020 --> 00:07:22.502
I just want you to know
that they are there.

103
00:07:22.502 --> 00:07:29.716
Wanted to show you so
far I show the circuits.

104
00:07:29.716 --> 00:07:34.158
I showed you the percentages which
basically means it matches 0 to many

105
00:07:34.158 --> 00:07:35.276
things, right?

106
00:07:35.276 --> 00:07:39.253
So, for example, if I put pota,
on the front side of this,

107
00:07:39.253 --> 00:07:42.527
this is going to match zero characters,
right?

108
00:07:42.527 --> 00:07:45.656
On the back side of this, this is
going to match a lot of characters.

109
00:07:45.656 --> 00:07:47.888
So it's zero to many characters.

110
00:07:47.888 --> 00:07:51.456
When I'm done,
I want to match exactly one character.

111
00:07:57.062 --> 00:07:58.457
That's what this underscore does.

112
00:07:58.457 --> 00:08:01.645
It matches precisely one character.

113
00:08:01.645 --> 00:08:06.314
So if there was a, I don't know churi
in here or something like that,

114
00:08:06.314 --> 00:08:08.093
it would also match that.

115
00:08:08.093 --> 00:08:10.994
But the underscore there will
match exactly one character.

116
00:08:14.510 --> 00:08:18.658
So again to try that home,
if you wanna do like berry,

117
00:08:18.658 --> 00:08:21.620
this will match all berries, right?

118
00:08:21.620 --> 00:08:26.134
But this would match any of them
because there's no aberry or bberry,

119
00:08:26.134 --> 00:08:28.133
something like that, right?

120
00:08:28.133 --> 00:08:30.959
So, and then again,
using those built in functions,

121
00:08:30.959 --> 00:08:34.584
you can actually get into full regular
expressions if you want to, but

122
00:08:34.584 --> 00:08:38.594
we're not gonna get into that because
I do not wanna do regular expressions.

