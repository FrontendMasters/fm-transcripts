WEBVTT

1
00:00:00.259 --> 00:00:06.731
Updates and deletes,
let's just do a normal old update now.

2
00:00:07.985 --> 00:00:13.417
So I'm gonna say UPDATE ingredients.

3
00:00:13.417 --> 00:00:18.535
Set image equal to WATERMELON.jpg or
we can go back to

4
00:00:18.535 --> 00:00:23.440
I don't know,
we'll call it strawberry I guess.

5
00:00:23.440 --> 00:00:30.140
.jpg WHERE title = watermelon.

6
00:00:33.055 --> 00:00:38.940
You can see there it didn't update.

7
00:00:38.940 --> 00:00:43.633
So now if I say select star FROM the.

8
00:00:43.633 --> 00:00:46.945
In case is unclear, you can hit up, it'll
scroll backwards through the queries that

9
00:00:46.945 --> 00:00:48.835
you've done before,
which is what I'm doing.

10
00:00:50.860 --> 00:00:56.087
Okay, so I've done this update here.

11
00:00:56.087 --> 00:00:59.925
You just say set whatever do you want and

12
00:00:59.925 --> 00:01:04.939
then you give it a WHERE
clause to define which one.

13
00:01:04.939 --> 00:01:11.643
If I didn't give it a WHERE clause, it
would update literally every single one,

14
00:01:11.643 --> 00:01:15.993
right, might be what you're trying to do,
right?

15
00:01:15.993 --> 00:01:20.432
You might want literally everything
to have a picture of a strawberry.

16
00:01:20.432 --> 00:01:24.296
You have a weird recipe app in my opinion
at that point, but it's possible, right?

17
00:01:24.296 --> 00:01:26.990
What if you wanna see what you're doing,
right?

18
00:01:26.990 --> 00:01:31.335
And this actually works on
the inserts this works under deletes,

19
00:01:31.335 --> 00:01:36.635
what if you want to see what the result
of your works are after you've done them?

20
00:01:36.635 --> 00:01:41.898
So we can say UPDATE ingredients,

21
00:01:41.898 --> 00:01:47.708
set image equal to watermelon.jpg,

22
00:01:47.708 --> 00:01:52.973
where title equals watermelon and

23
00:01:52.973 --> 00:01:58.246
then I'm going to say returning.

24
00:01:58.246 --> 00:02:00.291
And you can just ask for
whatever you want back right?

25
00:02:00.291 --> 00:02:05.172
In this case, I want back the title,
the image and

26
00:02:05.172 --> 00:02:08.088
the id and the title, right?

27
00:02:09.738 --> 00:02:13.430
So not only am I updating it right,
this is an update command, right?

28
00:02:13.430 --> 00:02:15.641
It's not a select command.

29
00:02:15.641 --> 00:02:19.175
By saying RETURNING, this is like,
hey, once you've done everything,

30
00:02:19.175 --> 00:02:21.209
give me back everything that you updated.

31
00:02:21.209 --> 00:02:24.671
I'm sure you can imagine this being
useful, like let's say you're updating

32
00:02:24.671 --> 00:02:28.445
a user's profile, you wanna confirm to the
user that's like, hey, you set your new

33
00:02:28.445 --> 00:02:31.826
picture and you told me that you now
live in Minneapolis instead of Seattle.

34
00:02:31.826 --> 00:02:36.287
So, I'm going to update the, database and
ask for the new information back, so,

35
00:02:36.287 --> 00:02:38.539
that I can send that
back down to the user.

36
00:02:38.539 --> 00:02:43.063
To confirm to them, your stuff
actually changed, I promise, I did it.

37
00:02:43.063 --> 00:02:44.702
So that's what the returning does.

38
00:02:44.702 --> 00:02:47.837
Now this is kind of a burdensome
thing to say let's say,

39
00:02:47.837 --> 00:02:50.383
I literally just wanna
get everything back.

40
00:02:50.383 --> 00:02:54.998
That's what the star is for, so
I can actually just say RETURN star,

41
00:02:54.998 --> 00:02:57.633
which just means everything, right?

42
00:03:00.986 --> 00:03:04.687
Notice this one, it gave me back
everything in the order I asked for it,

43
00:03:04.687 --> 00:03:06.178
title, image, id, type.

44
00:03:06.178 --> 00:03:12.152
This one will give it back to you, I think
it's generally in the order we created it,

45
00:03:12.152 --> 00:03:15.027
but I don't think you're guaranteed.

46
00:03:15.027 --> 00:03:17.051
Let's do another insert really quick.

47
00:03:17.051 --> 00:03:25.328
I wanna show you that you can delete
multiple things with one query.

48
00:03:25.328 --> 00:03:26.075
We can even copy and

49
00:03:26.075 --> 00:03:29.069
paste this one directly out of it
because there's nothing really new here.

50
00:03:29.069 --> 00:03:30.600
Scroll down and copy.

51
00:03:34.130 --> 00:03:39.978
This one here, that one.

52
00:03:39.978 --> 00:03:46.348
So insert into ingredients title image,
not real one, delete.jpg, delete to this.

53
00:03:46.348 --> 00:03:51.120
Actually, I think it's going to
error cuz I was not, which is fine.

54
00:03:51.120 --> 00:03:59.354
Yep, okay, so we did look up what
this 0 is It's always going to be 0.

55
00:03:59.354 --> 00:04:04.437
So in modern Postgres, which is I think
post nine, this will always return to 0.

56
00:04:04.437 --> 00:04:09.287
It used to be like an identifier for
object ids, which they don't use anymore.

57
00:04:09.287 --> 00:04:12.439
But there's enough stuff that
depends on that 0 being there or

58
00:04:12.439 --> 00:04:16.842
that number being there, that they kind of
constricted by backwards compatibility for

59
00:04:16.842 --> 00:04:18.105
that always to be there.

60
00:04:18.105 --> 00:04:20.023
So, in other words, ignore it.

61
00:04:20.023 --> 00:04:22.259
The second number is the only
one that you care about.

62
00:04:22.259 --> 00:04:28.320
So now I have two titles or I have two
images where the image is delete.jpg.

63
00:04:28.320 --> 00:04:34.831
And I want to delete both
of these with one query.

64
00:04:34.831 --> 00:04:42.607
So I can say, DELETE FROM ingredients,

65
00:04:42.607 --> 00:04:49.248
WHERE image equals delete.jpg?

66
00:04:51.196 --> 00:04:55.462
For fun, let's just say I want
to RETURN all of them as well.

67
00:04:55.462 --> 00:04:57.084
Again, this returning part is optional.

68
00:04:57.084 --> 00:05:01.160
It's only if you wanna see
what was actually deleted.

69
00:05:01.160 --> 00:05:05.421
So that I had id 100 and id 101,

70
00:05:05.421 --> 00:05:08.869
title image type vegetable.

71
00:05:08.869 --> 00:05:14.718
So again that default
vegetable is coming from our

72
00:05:14.718 --> 00:05:19.740
constraint here from back/dingredients

73
00:05:24.080 --> 00:05:26.671
So this one has a default
here of vegetable.

74
00:05:26.671 --> 00:05:30.073
If you didn't delete and
recreate the table with me,

75
00:05:30.073 --> 00:05:32.651
you probably didn't get this default.

76
00:05:32.651 --> 00:05:37.195
In which case,
this first insert might've not worked.

77
00:05:37.195 --> 00:05:42.007
In which case, you would have to go
back and add, not really, we have to

78
00:05:42.007 --> 00:05:46.839
add another type here of vegetable,
or meat, or something like that.

79
00:05:46.839 --> 00:05:49.859
But if you did at the default constraint,
then it would work.

80
00:05:49.859 --> 00:05:52.445
So just to kinda show you
what that would like.

81
00:05:56.034 --> 00:06:00.331
I'm gonna put, it doesn't matter
cuz we have no constraint on it for

82
00:06:00.331 --> 00:06:01.305
it to be valid.

83
00:06:04.264 --> 00:06:10.109
And then here you would have to put type,
okay?

84
00:06:10.109 --> 00:06:14.521
Insert it again and
then again we can do the same

85
00:06:14.521 --> 00:06:19.397
DELETE FROM RERUTNING star,
and you can see here.

86
00:06:19.397 --> 00:06:22.787
Notice that we're inserting and
deleting here.

87
00:06:22.787 --> 00:06:27.586
Here's 101, this is 102 and 103,

88
00:06:27.586 --> 00:06:31.767
it did not reuse those old ids, right?

89
00:06:31.767 --> 00:06:33.702
It's just continuing to increment.

90
00:06:33.702 --> 00:06:37.430
So if you delete something that
unique identifier is gone forever.

91
00:06:37.430 --> 00:06:41.472
I don't know about you but like I feel
like weird about deleting something and

92
00:06:41.472 --> 00:06:43.406
it's like never going to come back.

93
00:06:43.406 --> 00:06:49.436
I don't know if the style is
the right word for it, attached.

94
00:06:49.436 --> 00:06:51.990
I don't know, I probably should
ask a therapist about that.

95
00:06:51.990 --> 00:06:58.448
Like the object permanence of
unique identifiers in the universe.

96
00:06:58.448 --> 00:07:02.304
I feel bad for
qubits that never going to exist again.

97
00:07:02.304 --> 00:07:05.291
Just therapy with Brian now.

98
00:07:05.291 --> 00:07:09.237
Anyway, so the Delete funds
are really similar to a updates.

99
00:07:09.237 --> 00:07:11.315
We just don't have a set in there, right?

100
00:07:11.315 --> 00:07:19.506
All you're doing is just you're
identifying deleting from.

101
00:07:19.506 --> 00:07:23.007
You're giving us some WHERE clause to say,
like, delete these things so

102
00:07:23.007 --> 00:07:25.219
you can kinda pick
the things that you delete.

103
00:07:25.219 --> 00:07:28.702
And then you can return them if you're
interested in seeing what you deleted,

104
00:07:28.702 --> 00:07:31.470
otherwise it'll just show you
the number of delete to right.

