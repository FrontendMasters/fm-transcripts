WEBVTT

1
00:00:00.000 --> 00:00:04.430
I'm gonna show you how to use a GUI for
this.

2
00:00:04.430 --> 00:00:06.568
So far, I've been doing
everything on the command line.

3
00:00:06.568 --> 00:00:10.660
Honestly, this is how I work,
but I really like command lines.

4
00:00:10.660 --> 00:00:14.179
That's why I teach a whole class on the
command line because I like it so much.

5
00:00:14.179 --> 00:00:15.900
I know not everyone's
in the same boat as me.

6
00:00:17.980 --> 00:00:21.648
There's lots of tools, I've seen people
using various tools throughout the day,

7
00:00:21.648 --> 00:00:22.744
and which are all great.

8
00:00:22.744 --> 00:00:24.880
I'm gonna show you how
to use a web-based one.

9
00:00:26.210 --> 00:00:30.963
So having learned MySQL first,
that's the first relational database

10
00:00:30.963 --> 00:00:34.855
that I used extensively at work,
it comes with PHP Admin.

11
00:00:34.855 --> 00:00:40.637
Basically, everyone that uses MySQL has
at least used PHP Admin to some degree.

12
00:00:40.637 --> 00:00:44.730
There is a very similar project for
Postgres called pgAdmin.

13
00:00:44.730 --> 00:00:48.846
There's another one that's also
called PHP PostgresAdmin or

14
00:00:48.846 --> 00:00:52.830
something like that,
that's actually almost a clone.

15
00:00:52.830 --> 00:00:54.661
So if you wanna use that, you can.

16
00:00:54.661 --> 00:00:59.200
Anyway, we're not, but
I'm gonna show you how to setup pgAdmin.

17
00:01:01.418 --> 00:01:08.250
So I'm gonna kill my SQL
database right here.

18
00:01:08.250 --> 00:01:13.036
And then this is this directory
that I'm in right now,

19
00:01:14.505 --> 00:01:21.187
It's the same one that we've been
working in with all of our projects.

20
00:01:21.187 --> 00:01:24.725
You'll notice that there is
a docker-compose file that I checked in

21
00:01:24.725 --> 00:01:27.442
there, that looks just like this.

22
00:01:27.442 --> 00:01:30.043
You don't have to know a damn
thing about docker-compose.

23
00:01:30.043 --> 00:01:34.724
I do talk about it in my containers
course if you wanna learn more about

24
00:01:34.724 --> 00:01:40.225
docker-compose, but all this is gonna
do is it's gonna start two containers.

25
00:01:40.225 --> 00:01:43.908
It's gonna start the container that
you and I have been working with,

26
00:01:43.908 --> 00:01:46.790
this one,
the btholt/complete-intro-to-sql.

27
00:01:46.790 --> 00:01:50.622
And it's also gonna start
another one called pgadmin,

28
00:01:50.622 --> 00:01:54.706
which you can see I'm pulling
directly off the docker hub.

29
00:01:54.706 --> 00:01:57.972
It's just a web server
that connects to your

30
00:01:57.972 --> 00:02:02.131
Postgres database that can run queries for
you, okay?

31
00:02:02.131 --> 00:02:07.705
So keep in mind that I gave it
a default email of admin@example.com.

32
00:02:07.705 --> 00:02:10.419
You will need that here in a second, and

33
00:02:10.419 --> 00:02:14.382
the password is to the various safe and
secure password.

34
00:02:14.382 --> 00:02:19.355
Yeah, I highly suggest you use this for
all of your passwords, all the time.

35
00:02:19.355 --> 00:02:21.630
Okay, and
then it'll be exposed on port 1234.

36
00:02:21.630 --> 00:02:24.161
So you should be able to come in here.

37
00:02:24.161 --> 00:02:28.867
Notice, I have nothing running in,
cuz I killed my container.

38
00:02:28.867 --> 00:02:31.392
If you don't kill your container,

39
00:02:31.392 --> 00:02:35.272
it's going to conflict on the port,
just so you know.

40
00:02:35.272 --> 00:02:37.960
I'm gonna say docker compose up.

41
00:02:37.960 --> 00:02:41.894
Now, I have all this stuff already
downloaded and ready to go.

42
00:02:41.894 --> 00:02:47.691
There's a good chance that you are gonna
have to download the pgadmin container,

43
00:02:47.691 --> 00:02:50.979
which will take a little
bit longer than mine.

44
00:02:50.979 --> 00:02:57.291
But once you see something like this
that says postgres-apps-pgadmin-1,

45
00:02:57.291 --> 00:03:00.030
this part is probably different.

46
00:03:01.160 --> 00:03:05.225
But this part,
the pgadmin-1 is probably the correct one.

47
00:03:08.320 --> 00:03:11.043
Once you see that that's working,

48
00:03:11.043 --> 00:03:16.503
you should be able to go to your
browser and go to localhost:1234.

49
00:03:16.503 --> 00:03:20.710
You'll see something that
looks a lot like this.

50
00:03:23.631 --> 00:03:26.702
Okay, put in your super secure,

51
00:03:26.702 --> 00:03:32.574
very top secret admin@example.com and
password.

52
00:03:32.574 --> 00:03:38.160
Cuz we are people of class,
we use secure things.

53
00:03:40.570 --> 00:03:45.335
I literally updated this yesterday, and
they've released a new version, typical.

54
00:03:45.335 --> 00:03:50.720
Anyway, I pinned it to 6.12,
you can probably update this to 6.13.

55
00:03:50.720 --> 00:03:54.679
And I doubt much changed.

56
00:03:54.679 --> 00:03:58.355
Okay, by default,
it will not connect to your database,

57
00:03:58.355 --> 00:04:00.840
you actually have to go and set that up.

58
00:04:02.830 --> 00:04:08.624
So I had that step by
step with pictures here.

59
00:04:08.624 --> 00:04:12.390
I'm gonna click Add Server,
you have to add a couple of things.

60
00:04:13.680 --> 00:04:16.404
And then once you've done that,
it will connect to your database, so

61
00:04:16.404 --> 00:04:17.521
let's go ahead and do that.

62
00:04:17.521 --> 00:04:23.066
Now, we're gonna add new server, give
it some sort of name, does not matter.

63
00:04:23.066 --> 00:04:25.191
I called mine db.

64
00:04:25.191 --> 00:04:26.370
Click on Connection.

65
00:04:28.130 --> 00:04:31.533
The host name is going to be db because
this is on a docker network, so

66
00:04:31.533 --> 00:04:35.502
it actually names the name of the host
whatever you call it, we called ours db.

67
00:04:35.502 --> 00:04:40.530
If you look in your docker-compose file,
port 532, that's exactly what we want.

68
00:04:40.530 --> 00:04:42.880
It means this database is Postgres.

69
00:04:42.880 --> 00:04:44.251
That's correct.

70
00:04:44.251 --> 00:04:48.081
The name of our user is Postgres,
and the password,

71
00:04:48.081 --> 00:04:52.616
if you remember, again,
very secure passwords here, lol.

72
00:04:52.616 --> 00:04:56.206
And you can save the password there,
and you can click Save.

73
00:04:59.850 --> 00:05:04.855
Lo and behold,
we now have all of our stuff

74
00:05:04.855 --> 00:05:10.148
in a nice little GUI for
us to interact with.

75
00:05:14.410 --> 00:05:17.278
So I am by no means a pgAdmin expert.

76
00:05:17.278 --> 00:05:21.890
I don't really use it very much, but
it is undeniably a very useful tool.

77
00:05:23.080 --> 00:05:26.594
So if you prefer a GUI,
here you go, this is what you get.

78
00:05:26.594 --> 00:05:28.910
This is what I'm giving you,
you get no more from me.

79
00:05:30.910 --> 00:05:36.553
The thing that I did find useful here
is we can just click Query Tool,

80
00:05:36.553 --> 00:05:41.616
which is right here, or
you can also use Tools &gt; Query Tool.

81
00:05:41.616 --> 00:05:47.759
You can come in here and say,
looks like it's connected to recipeguru.

82
00:05:47.759 --> 00:05:52.532
Let's connect this instead
to server db database.

83
00:05:52.532 --> 00:05:57.100
You can switch it to omdb right here,
and click Save.

84
00:05:58.290 --> 00:05:59.734
That's fine, I don't care.

85
00:05:59.734 --> 00:06:03.900
Postgres, so you can see here now I'm
connected to the omdb/postgres@db.

86
00:06:03.900 --> 00:06:12.627
We are going to SELECT * FROM movies.

87
00:06:12.627 --> 00:06:15.380
So you can see, you get a nice,
little autocomplete here.

88
00:06:16.440 --> 00:06:21.585
LIMIT 5, and press Play.

89
00:06:21.585 --> 00:06:25.640
You can see here, I've got a nice table
output of all the stuff that I got back.

90
00:06:25.640 --> 00:06:27.717
Again, I don't really know
very much about pgAdmin.

91
00:06:32.510 --> 00:06:34.718
But I think if you go
back here to Dashboard,

92
00:06:34.718 --> 00:06:37.480
you'll actually get a bunch
of information about it.

93
00:06:37.480 --> 00:06:40.604
You can see the sessions that I've had,
the transactions per second,

94
00:06:40.604 --> 00:06:43.010
how much it's blocking it out.

95
00:06:43.010 --> 00:06:46.451
Tuples, tuples, whatever you wanna call
that in and out, pretty cool stuff.

96
00:06:51.250 --> 00:06:55.403
I showed you how to set
up with docker_compose,

97
00:06:55.403 --> 00:06:58.248
cuz that was easy for us to fit in.

98
00:06:58.248 --> 00:07:01.849
But you don't have to use
this with docker_compose,

99
00:07:01.849 --> 00:07:05.381
you can just set up pgAdmin
locally in your computer.

100
00:07:05.381 --> 00:07:06.506
It's just a web server.

101
00:07:06.506 --> 00:07:10.200
I think it's all written in Python and
Flask, if I'm not mistaken.

102
00:07:13.994 --> 00:07:17.961
All right, so you have the instructions
there, you can see how to do it yourself.

103
00:07:17.961 --> 00:07:21.321
You can leave this up, if you want to,
you can write the rest of the queries for

104
00:07:21.321 --> 00:07:23.311
the rest of the class in this,
if you want to.

105
00:07:23.311 --> 00:07:25.679
I'm gonna go back to the command
line cuz that's my safe place.

106
00:07:25.679 --> 00:07:26.179
[LAUGH]

