WEBVTT

1
00:00:00.590 --> 00:00:04.707
Any questions before I move
on other than why are we

2
00:00:04.707 --> 00:00:09.190
not seeing the change once
the way Mike describe it?

3
00:00:09.190 --> 00:00:12.494
I am comfortable leaving that as
an excercise to you because I probably

4
00:00:12.494 --> 00:00:16.810
just have like a parenthesis in the wrong
place, that's not the tricky part yet.

5
00:00:16.810 --> 00:00:20.055
The tricky part is getting this set up and

6
00:00:20.055 --> 00:00:26.510
understanding that you have to
learn of this I have a question.

7
00:00:26.510 --> 00:00:27.240
&gt;&gt; Yes, please.

8
00:00:28.390 --> 00:00:33.004
Is there a config that
specifies the convention

9
00:00:33.004 --> 00:00:36.590
that we have to follow for cobis Lee?

10
00:00:37.676 --> 00:00:40.747
You know what, I think you might
have asked the question and

11
00:00:40.747 --> 00:00:42.520
it's gonna make this work.

12
00:00:42.520 --> 00:00:43.020
Hold on.

13
00:00:45.370 --> 00:00:47.930
Laundry, I think you might
have just saved this here.

14
00:00:47.930 --> 00:00:54.430
So the config is this can commit lint,
that config j s.

15
00:00:54.430 --> 00:00:59.028
And I notice here I don't have
this conventional commits

16
00:00:59.028 --> 00:01:03.032
thing in the config let's
see what happens now.

17
00:01:03.032 --> 00:01:09.000
[BLANK AUDIO].

18
00:01:09.000 --> 00:01:10.510
There we go.
That was it.

19
00:01:10.510 --> 00:01:11.880
There's the config.

20
00:01:11.880 --> 00:01:12.390
Right.

21
00:01:12.390 --> 00:01:18.286
So the learner scopes thing
it's strictly a helping

22
00:01:18.286 --> 00:01:24.450
commitment understand what
learners scopes are, but

23
00:01:24.450 --> 00:01:31.050
this is this main Like configuration for
commitlint.

24
00:01:31.050 --> 00:01:32.980
This is what's doing most of the lifting.

25
00:01:32.980 --> 00:01:35.490
And of course, now Husky is doing its job.

26
00:01:35.490 --> 00:01:39.297
I think Husky was always doing
its job except now we have,

27
00:01:39.297 --> 00:01:43.265
now commitlint is doing something
much more meaningful and

28
00:01:43.265 --> 00:01:47.230
it's actually stopping us when
it should be stopping us.

29
00:01:47.230 --> 00:01:51.050
Let's see if I can make another commit
here and we'll see what happens.

30
00:01:51.050 --> 00:01:56.468
So we'll say let say that

31
00:01:56.468 --> 00:02:01.631
this is fix(utils).

32
00:02:01.631 --> 00:02:08.214
Again this is distribute chore but
I'm calling it fix.

33
00:02:08.214 --> 00:02:12.951
Correction to commitlint config

34
00:02:15.856 --> 00:02:19.888
&gt;&gt; Now it accepts it And

35
00:02:19.888 --> 00:02:22.049
I'm going to actually sit on this for

36
00:02:22.049 --> 00:02:26.590
a second because we're going to talk
about how how we publish packages next.

37
00:02:30.050 --> 00:02:35.470
&gt;&gt; So
Can I change the templating configuration?

38
00:02:35.470 --> 00:02:42.060
Mean if I have a change in the method
of committing this difference?

39
00:02:43.170 --> 00:02:43.670
&gt;&gt; Yep.

40
00:02:45.200 --> 00:02:51.310
It is possible that commitment can
align with your existing convention.

41
00:02:53.060 --> 00:02:58.648
&gt;&gt; And let me see cheat config.

42
00:02:58.648 --> 00:03:01.500
So these are all different patterns.

43
00:03:01.500 --> 00:03:04.130
This is almost like a base
lint configuration.

44
00:03:04.130 --> 00:03:06.969
You know if you ever
seen like the standard,

45
00:03:06.969 --> 00:03:11.731
standard JavaScript lint configuration
is like I think Brian Holt used to

46
00:03:11.731 --> 00:03:15.758
use this a lot in his workshops where
&gt;&gt; They're no semi colons,

47
00:03:15.758 --> 00:03:18.540
all sorts of crazy wacky
decisions like that.

48
00:03:18.540 --> 00:03:23.279
So this is another place where
we can choose our pattern but

49
00:03:23.279 --> 00:03:27.438
and my advice here is,
I'm not saying that exactly

50
00:03:27.438 --> 00:03:32.900
the default conventional commits
are the important thing.

51
00:03:32.900 --> 00:03:38.531
It's more If you establish a pattern and
having an enforcement mechanism in there,

52
00:03:38.531 --> 00:03:42.980
your commit history becomes
a very valuable source of truth.

53
00:03:42.980 --> 00:03:47.529
So adopting a convention is
better than no convention,

54
00:03:47.529 --> 00:03:51.060
because this is a great source of truth.

55
00:03:51.060 --> 00:03:53.800
And it means that some of this
stuff can just be automated.

56
00:03:53.800 --> 00:03:58.300
Your change logs can come for
free Your picking of versions can.

57
00:03:58.300 --> 00:04:01.262
If you have 50 packages in this

58
00:04:01.262 --> 00:04:06.440
it's just such a pain to figure out
what a version of something could be.

59
00:04:06.440 --> 00:04:11.268
Here's why, my new release in a low
level package that gets bumped,

60
00:04:11.268 --> 00:04:14.690
but then it gets upgraded
in six other packages.

61
00:04:14.690 --> 00:04:17.090
And then,
those cause upgrades another packages.

62
00:04:17.090 --> 00:04:18.870
It sort of all flows through.

63
00:04:18.870 --> 00:04:22.290
Figuring these numbers out
is really complicated and

64
00:04:22.290 --> 00:04:25.102
error prone, if done manually, so you want

65
00:04:25.102 --> 00:04:30.050
to have some mechanism where you're not
having to figure that out yourself.

66
00:04:31.340 --> 00:04:37.500
And the two popular ways of doing
this are to use the commit messages.

67
00:04:37.500 --> 00:04:40.965
Or to use labels on pull requests,
this is where, for

68
00:04:40.965 --> 00:04:45.046
popular open source projects
where you don't necessarily you

69
00:04:45.046 --> 00:04:50.450
don't have a team where you can train
them up and say please go and do this.

70
00:04:50.450 --> 00:04:54.085
This lets maintainers decide,
this is a feature, this is effects,

71
00:04:54.085 --> 00:04:56.153
this is chore And they can kind of like,

72
00:04:56.153 --> 00:05:00.380
take on the burden of making sure
that all that works properly.

73
00:05:00.380 --> 00:05:04.209
But commitments commitment
is pretty flexible,

74
00:05:04.209 --> 00:05:07.590
conventional commits is a specific thing.

75
00:05:08.850 --> 00:05:10.020
So that's one.

76
00:05:10.020 --> 00:05:12.786
That's why it like commitment is flexible,
but

77
00:05:12.786 --> 00:05:17.960
this specific thing is for conventional
And then this one's for Angular.

78
00:05:17.960 --> 00:05:21.280
And some of these layer up like
we're using learning scopes as well.

79
00:05:21.280 --> 00:05:23.690
Right learning scopes is what lets us do.

80
00:05:23.690 --> 00:05:25.620
It lets us do something like this.

81
00:05:25.620 --> 00:05:26.740
Right?

82
00:05:26.740 --> 00:05:27.590
The parentheses.

