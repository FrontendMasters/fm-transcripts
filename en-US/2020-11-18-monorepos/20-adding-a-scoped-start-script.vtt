WEBVTT

1
00:00:00.760 --> 00:00:02.550
Let's look at this UI here for a sec.

2
00:00:06.312 --> 00:00:12.320
Actually, I can stay at this root
level here at the base of my package.

3
00:00:12.320 --> 00:00:16.940
This also is, by the way,
a really important aspect of these tools.

4
00:00:16.940 --> 00:00:21.477
Because you do not even just the act of
changing directories and going in and

5
00:00:21.477 --> 00:00:25.810
coming back out, that takes time,
and it's cumbersome.

6
00:00:25.810 --> 00:00:28.769
So from the outside here,

7
00:00:28.769 --> 00:00:34.702
I can just say lerna run
dev --scope @slack/ui.

8
00:00:34.702 --> 00:00:37.040
Let's see what happens.

9
00:00:37.040 --> 00:00:38.390
This should run parcel.

10
00:00:38.390 --> 00:00:40.020
Ooh, actually, I wanna cancel this.

11
00:00:41.380 --> 00:00:45.945
Want to add this stream argument because I
want to see the output from my build tool.

12
00:00:49.072 --> 00:00:51.290
Right so it's listening on localhost 1234.

13
00:00:51.290 --> 00:00:53.944
And let's see what that looks like.

14
00:00:58.541 --> 00:01:02.780
.And here we are it kind looks
like upside down stack app.

15
00:01:02.780 --> 00:01:07.060
It's like team, and
change channels, etcetera.

16
00:01:07.060 --> 00:01:08.900
so this is that React App.

17
00:01:08.900 --> 00:01:11.826
and over here we can see like
we are receiving API calls,

18
00:01:11.826 --> 00:01:15.120
like there is a little express
server that's running.

19
00:01:15.120 --> 00:01:16.160
So I can run this.

20
00:01:18.430 --> 00:01:20.655
In fact, this command here,

21
00:01:20.655 --> 00:01:26.460
I kind of want it to be the like
the NPM start for my whole workspace.

22
00:01:26.460 --> 00:01:27.530
So I can go up here.

23
00:01:28.980 --> 00:01:29.960
I could say start.

24
00:01:33.170 --> 00:01:37.883
Script D, And then just create
a new workspace level script

25
00:01:44.315 --> 00:01:47.020
And I like these little ASCII art things.

26
00:01:47.020 --> 00:01:50.714
They just helped make the output
a bit more readable and it helps,

27
00:01:50.714 --> 00:01:53.010
helps you have something to spot.

28
00:01:53.010 --> 00:01:58.040
That makes it obvious when
something's not running at all.

29
00:01:59.710 --> 00:02:04.344
So do you favour this or no run dev
with a scope over using the yarn

30
00:02:04.344 --> 00:02:09.170
workspace command for
like the single execution on the package.

31
00:02:10.810 --> 00:02:16.200
I the general solution of
Lerner run is very nice.

32
00:02:16.200 --> 00:02:22.900
So if I mean you could
use either to be honest.

33
00:02:24.300 --> 00:02:28.860
And here here's Let me tell you my
reasoning for explaining this one.

34
00:02:28.860 --> 00:02:31.020
There is no getting away from learner run.

35
00:02:32.070 --> 00:02:34.708
Unless you truly want
to enter every package,

36
00:02:34.708 --> 00:02:37.889
like for things that have to
be applied to all packages or

37
00:02:37.889 --> 00:02:41.490
a subset of packages,
you need to learn how to use learn to run.

38
00:02:42.920 --> 00:02:45.736
And if I don't have to
teach you something else,

39
00:02:45.736 --> 00:02:48.330
I may avoid teaching you something else.

40
00:02:48.330 --> 00:02:50.270
Like that's fewer things for
you to remember.

41
00:02:50.270 --> 00:02:52.380
That's true that there
are alternate ways of doing this.

42
00:02:52.380 --> 00:02:58.126
In fact, Right down to,
I could literally have done this.

43
00:02:58.126 --> 00:03:04.210
Node, packages/ UI/server/server.

44
00:03:04.210 --> 00:03:06.640
And this will do exactly the same thing.

45
00:03:06.640 --> 00:03:10.480
In fact, I might prefer this
because I get colorized output.

46
00:03:10.480 --> 00:03:12.630
Nothing is interfering with
the stuff that's coming out.

47
00:03:15.620 --> 00:03:20.126
But I do not really see how some of the
other yarn stuff that I have not talked

48
00:03:20.126 --> 00:03:24.800
about here least the ability to
execute something like that.

49
00:03:24.800 --> 00:03:30.410
I don't see that that is it is not
better than what I just did and.

50
00:03:31.690 --> 00:03:33.500
It's one more thing to know.

51
00:03:33.500 --> 00:03:36.078
So you already know how to
run something with node and

52
00:03:36.078 --> 00:03:41.050
you already have to know how to use Learn,
learn how to run, and that is sufficient.

53
00:03:41.050 --> 00:03:42.602
Does that rationale make sense?

54
00:03:45.144 --> 00:03:46.062
&gt;&gt; Yes.
&gt;&gt; In fact,

55
00:03:46.062 --> 00:03:48.620
I'm gonna switch it out for this.

56
00:03:48.620 --> 00:03:51.660
I kinda like the colorized output.

57
00:03:52.660 --> 00:03:54.210
Makes me happy.

58
00:03:57.360 --> 00:04:01.290
So now at the root of my project,
I can just run, yarn.

59
00:04:02.800 --> 00:04:03.300
Start.

60
00:04:04.740 --> 00:04:05.580
Ooh, what's wrong?

61
00:04:07.000 --> 00:04:07.920
What did I forget?

62
00:04:09.560 --> 00:04:17.250
I need to chmod Write start.sh was ignored
because it is not readable and executable.

63
00:04:19.030 --> 00:04:23.071
So basically this is going to be part of
your muscle memory, make that script so

64
00:04:23.071 --> 00:04:24.370
you can actually run it.

65
00:04:24.370 --> 00:04:29.410
It's not just a text file that contains
a bash script it is a runnable thing.

66
00:04:29.410 --> 00:04:31.571
Now when I run this,
it should work and there it does.

67
00:04:36.032 --> 00:04:37.480
And does it actually work?

68
00:04:37.480 --> 00:04:38.510
Let's come full circle.

69
00:04:41.880 --> 00:04:42.500
And it does.

70
00:04:44.270 --> 00:04:46.280
Some of the messages
might be duplicates here.

71
00:04:48.720 --> 00:04:51.218
There's a bug with maybe
there's like no messages for

72
00:04:51.218 --> 00:04:53.300
this one channel when it's like.

73
00:04:53.300 --> 00:04:55.833
We can add a little bit but
many of them are working

