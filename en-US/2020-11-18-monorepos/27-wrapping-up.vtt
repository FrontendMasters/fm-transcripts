WEBVTT

1
00:00:00.160 --> 00:00:05.071
If I wanted to serve the documentation
site internally instead of on

2
00:00:05.071 --> 00:00:10.510
GitHub Pages, and I saw on the
documentation and said, Doc, you Saurus.

3
00:00:11.700 --> 00:00:13.598
&gt;&gt; Yep,
&gt;&gt; Burn those markdown files into

4
00:00:13.598 --> 00:00:15.030
a documentation site.

5
00:00:15.030 --> 00:00:18.670
I'm assuming that's the answer, but
they wanted to know a few of them.

6
00:00:18.670 --> 00:00:20.200
Any other thoughts?

7
00:00:20.200 --> 00:00:26.230
So we made it very clear how you could
end up with mark down API documentation.

8
00:00:26.230 --> 00:00:29.570
And we got a question in the class about,
you know,

9
00:00:29.570 --> 00:00:34.740
like if you're not using GitHub,
how do you get from mark down files?

10
00:00:34.740 --> 00:00:39.370
To something more meaningful,
right to maybe a static site,

11
00:00:39.370 --> 00:00:43.821
like you put somewhere,
put it on an s3 bucket or you know,

12
00:00:43.821 --> 00:00:48.300
just serve it up with engine x,
something like that.

13
00:00:48.300 --> 00:00:49.010
So.

14
00:00:50.390 --> 00:00:55.111
I would say like I've
tried these dinosaurs and

15
00:00:55.111 --> 00:00:58.900
has not been so successful with this.

16
00:01:00.110 --> 00:01:06.350
What I have done before is Oops, sorry.

17
00:01:09.660 --> 00:01:12.260
I have used let's see, it's not this.

18
00:01:12.260 --> 00:01:16.780
It's this, So
this is a fantastic little ecosystem.

19
00:01:16.780 --> 00:01:20.630
It's a part of this thing
called the unified collective.

20
00:01:20.630 --> 00:01:27.400
And it sounds kind of like
a hippie commune or something.

21
00:01:27.400 --> 00:01:32.652
But the idea is they want to have
a sts Abstract Syntax trees for

22
00:01:32.652 --> 00:01:36.895
things like HTML And
text and restructured text,

23
00:01:36.895 --> 00:01:43.420
which is what like a lot of the Python
community is this, and mark down.

24
00:01:43.420 --> 00:01:47.528
So there's this unified collective
that sort of at the top level remark

25
00:01:47.528 --> 00:01:50.230
is the mark down specific variant of it.

26
00:01:50.230 --> 00:01:55.164
And this is super, super,
super good at taking in mark

27
00:01:55.164 --> 00:02:00.421
down as input and spitting out HTML and
there are a slew of,

28
00:02:00.421 --> 00:02:06.800
Fantastic little plugins they
should surely have a list of them.

29
00:02:06.800 --> 00:02:07.410
Here they are.

30
00:02:08.528 --> 00:02:09.650
Lots of plugins.

31
00:02:09.650 --> 00:02:11.150
What is the red mean?

32
00:02:11.150 --> 00:02:13.540
Currently broken, but a lot of green ones.

33
00:02:13.540 --> 00:02:16.110
And I actually maintain a couple of these.

34
00:02:16.110 --> 00:02:21.894
The green ones you know,
like here we go compile markdown to react,

35
00:02:21.894 --> 00:02:24.790
help you could drop these.

36
00:02:24.790 --> 00:02:29.847
I believe I'm not a Gatsby expert, but
I hear Gatsby takes in, like MDX files or

37
00:02:29.847 --> 00:02:34.310
something, something that's very,
very close to markdown.

38
00:02:34.310 --> 00:02:35.760
You could just feed into that.

39
00:02:36.800 --> 00:02:43.462
I like that It's your job to take it
this last little mile because frankly,

40
00:02:43.462 --> 00:02:48.110
for s doc and for for type doc for
js doc and why UI doc,

41
00:02:48.110 --> 00:02:54.280
all these things they just kind of
they're let down in the end right?

42
00:02:54.280 --> 00:02:59.570
They don't have good search And
I think the world needs some of these.

43
00:02:59.570 --> 00:03:01.414
They need a better solution here and

44
00:03:01.414 --> 00:03:04.480
markdown is a perfectly
acceptable sort of end result.

45
00:03:04.480 --> 00:03:09.940
If you don't like that,
use the JSON files.

46
00:03:09.940 --> 00:03:15.150
There's another thing This.

47
00:03:15.150 --> 00:03:19.420
So if you read the API documenter.

48
00:03:21.170 --> 00:03:28.290
guides, they mentioned that this Microsoft
Project also works with API extractor.

49
00:03:28.290 --> 00:03:33.330
And they describe it as like if API
if API document or is the go kart.

50
00:03:33.330 --> 00:03:35.530
This is the space shuttle.

51
00:03:35.530 --> 00:03:38.770
And this is incredibly rich.

52
00:03:38.770 --> 00:03:43.734
And frankly, it's a bit complicated
because it's designed to work with

53
00:03:43.734 --> 00:03:47.830
like any programming language
that you might need, right.

54
00:03:47.830 --> 00:03:52.933
It's what's used for this site for
doc stop Microsoft comm right where you

55
00:03:52.933 --> 00:03:57.880
get this nice syntax highlighting
the ability to copy things like this.

56
00:03:57.880 --> 00:04:04.690
You get It is incredibly rich.

57
00:04:04.690 --> 00:04:08.420
It is also very, very,
very challenging to set up at this time.

58
00:04:10.950 --> 00:04:13.500
So, here's the good news.

59
00:04:13.500 --> 00:04:16.282
If you're looking to make
an impact in open source,

60
00:04:16.282 --> 00:04:19.010
you can figure out how
to make this turnkey.

61
00:04:19.010 --> 00:04:20.810
It should not be too difficult to do.

62
00:04:20.810 --> 00:04:22.330
Maybe not doc effects.

63
00:04:22.330 --> 00:04:26.770
But just something that works really well
with API Extractor and API Documentor.

64
00:04:26.770 --> 00:04:30.760
If you wanna make a Great Gatsby
pipeline that's just ready to go and

65
00:04:30.760 --> 00:04:34.860
accepts this stuff, I think it
could be really, really popular.

66
00:04:34.860 --> 00:04:35.890
I think it would take off.

67
00:04:38.010 --> 00:04:39.280
That's the short answer.

68
00:04:39.280 --> 00:04:40.060
It's an opportunity.

69
00:04:41.950 --> 00:04:46.952
With GitHub buying NPM and NPM,
involving with seven with workspaces,

70
00:04:46.952 --> 00:04:51.070
what do you feel as far as
the direction they're going?

71
00:04:51.070 --> 00:04:54.686
I'm in opposed to like yarn workspaces,
and

72
00:04:54.686 --> 00:05:00.587
learn a All right I feel like I should
first say I'm a Microsoft employee,

73
00:05:00.587 --> 00:05:05.850
which I mean, my Microsoft owns LinkedIn,
who I work for.

74
00:05:05.850 --> 00:05:07.180
They also and GitHub.

75
00:05:07.180 --> 00:05:08.940
GitHub runs NPM.

76
00:05:08.940 --> 00:05:13.610
So, I cannot possibly have
an unbiased opinion here.

77
00:05:13.610 --> 00:05:17.438
I will say, I work with yarn and

78
00:05:17.438 --> 00:05:23.770
NPM Had some challenges with it and
I have not like,

79
00:05:23.770 --> 00:05:30.102
I found that sometimes I
would report bugs to NPM and

80
00:05:30.102 --> 00:05:34.540
they would be classified as ideas.

81
00:05:35.590 --> 00:05:36.260
Right.

82
00:05:36.260 --> 00:05:40.700
So I think I have more faith in
the management of the yarn project at

83
00:05:40.700 --> 00:05:41.520
this time.

84
00:05:42.810 --> 00:05:46.190
I think that there's room for
two package managers or three or four.

85
00:05:47.940 --> 00:05:52.590
I just see yarn as the best thing in,
October of 2020.

86
00:05:52.590 --> 00:05:58.360
I feel like it is the best thing for
my needs in this ecosystem.

87
00:05:58.360 --> 00:06:03.527
And I think that that They've
provided a good solution

88
00:06:03.527 --> 00:06:09.255
in this space that minimises
foot gun kind of problems.

89
00:06:09.255 --> 00:06:14.152
&gt;&gt; Yeah, there's another question
along the lines of learn on not being

90
00:06:14.152 --> 00:06:16.115
super active anymore.

91
00:06:16.115 --> 00:06:21.622
&gt;&gt; All right, so the question we got in
the class was Like somebody noticed that

92
00:06:21.622 --> 00:06:27.303
learner appears to be short on maintainers
at this time in october 2020 and

93
00:06:27.303 --> 00:06:31.420
that's a real thing that's
happening right now.

94
00:06:31.420 --> 00:06:36.341
There's sort of a bottleneck where there
are a lot of people are hoping things will

95
00:06:36.341 --> 00:06:41.190
get fixed and they have poll requests that
are opened and it takes effort to manage

96
00:06:41.190 --> 00:06:47.230
these projects and it seems like
&gt;&gt; There's slow advancement at this time.

97
00:06:47.230 --> 00:06:52.365
Here's what I think is important to
know as a viewer of this course,

98
00:06:52.365 --> 00:06:56.510
learner is a tool that we
use to carry out a job.

99
00:06:56.510 --> 00:07:01.223
And it the only trace it leaves in
your project is that config file,

100
00:07:01.223 --> 00:07:02.960
learn dot JSON.

101
00:07:02.960 --> 00:07:08.310
So don't feel like you're
heavily buying into it.

102
00:07:08.310 --> 00:07:11.080
An ecosystem where the future's uncertain.

103
00:07:11.080 --> 00:07:16.491
It just does some things and other tools
in this space like bolt potentially, or

104
00:07:16.491 --> 00:07:22.320
the rush stack, which is what Microsoft
uses for its TypeScript project.

105
00:07:22.320 --> 00:07:27.250
Or, you know, even like yarn
workspaces won't become that tool.

106
00:07:27.250 --> 00:07:30.570
It has clearly stated that
just want to be a low level.

107
00:07:30.570 --> 00:07:33.667
API they,
like yarn workspaces is where it ends and

108
00:07:33.667 --> 00:07:37.060
they're not trying to become
the learner in the space.

109
00:07:38.660 --> 00:07:41.810
So don't worry too much
about being locked in.

110
00:07:41.810 --> 00:07:43.875
I don't see it happening that way.

111
00:07:43.875 --> 00:07:49.636
I do see that it everything else that
is being built right now that's new and

112
00:07:49.636 --> 00:07:50.635
shiny.

113
00:07:50.635 --> 00:07:51.595
In the mono repo space.

114
00:07:51.595 --> 00:07:54.585
It's kind of standing
on learners shoulders.

115
00:07:54.585 --> 00:07:55.125
Right?

116
00:07:55.125 --> 00:08:00.199
So like don't the good things that
look like they might be better than

117
00:08:00.199 --> 00:08:05.445
learn out there only that way because
of what they learned from Lerna But

118
00:08:05.445 --> 00:08:08.490
yeah, these things happen.

119
00:08:08.490 --> 00:08:13.455
So I don't think that learner
will necessarily be around the de

120
00:08:13.455 --> 00:08:15.534
facto solution forever.

121
00:08:15.534 --> 00:08:19.971
Just because some people have
some new ideas and in particular,

122
00:08:19.971 --> 00:08:25.065
I think for tools like these people
are starting to write them in in rust and

123
00:08:25.065 --> 00:08:31.078
just trying to make the CI tools as fast
and snappy and responsive as possible.

124
00:08:31.078 --> 00:08:32.330
&gt;&gt; That might be the path forward.

125
00:08:32.330 --> 00:08:36.400
Just don't don't stress about it too
much because you're not locked in.

126
00:08:36.400 --> 00:08:39.720
You can always ditch learner and
get whatever's next.

127
00:08:39.720 --> 00:08:45.375
The concept of a mono repo is more closely
linked to the node require resolve

128
00:08:45.375 --> 00:08:51.298
algorithm and the idea of workspaces that
is going nowhere from what I can see,

129
00:08:51.298 --> 00:08:56.630
So any tool that aims to work in
that space will continue to work.

130
00:08:56.630 --> 00:08:58.830
And you'll just swap one out for
the other.

131
00:08:58.830 --> 00:09:03.950
So, a question came up in class
about version two documentation.

132
00:09:03.950 --> 00:09:06.349
This is super important and

133
00:09:06.349 --> 00:09:11.050
also why I like to check my
markdown docs into GitHub.

134
00:09:12.190 --> 00:09:16.840
Because what that lets me do is just
sort of roll back, roll forward, etc.

135
00:09:16.840 --> 00:09:24.260
Not a whole lot of documentation, hosting
sites, support versioning all that well.

136
00:09:25.280 --> 00:09:30.117
But what we do at LinkedIn,
we have a Think of it like,

137
00:09:30.117 --> 00:09:36.070
we have S3 buckets where we
can just toss static sites.

138
00:09:36.070 --> 00:09:40.440
And we just build the version
number into the URL scheme.

139
00:09:40.440 --> 00:09:43.677
So when we create a tarball and
we publish it and

140
00:09:43.677 --> 00:09:46.860
we'll say this is slack slash types.

141
00:09:46.860 --> 00:09:48.390
Version, 007, publish.

142
00:09:48.390 --> 00:09:52.263
And then we'll have our
doc site that users had,

143
00:09:52.263 --> 00:09:58.180
where we just iframe the appropriate
versions of things into place.

144
00:09:58.180 --> 00:10:02.652
So you could like, potentially, you could
just run a command in your project,

145
00:10:02.652 --> 00:10:06.650
and it'll bake the right versions
of things into query puram.

146
00:10:06.650 --> 00:10:10.170
And then you can kind of just fetch
the right things from the right places.

147
00:10:10.170 --> 00:10:12.240
That's a tricky problem thought.

148
00:10:12.240 --> 00:10:16.629
I think once, there's a good way
to publish this kind of thing,

149
00:10:16.629 --> 00:10:19.460
then versioning gets a lot easier.

150
00:10:19.460 --> 00:10:24.263
Just to recap what we've done,
we started with a pretty

151
00:10:24.263 --> 00:10:28.363
empty monorepo or
not even a monorepo, right?

152
00:10:28.363 --> 00:10:33.870
We started with Yarn and
knit, very basic project.

153
00:10:33.870 --> 00:10:36.390
We went with yarn workspaces.

154
00:10:36.390 --> 00:10:40.090
We added tests linting,
we learned about scripting.

155
00:10:40.090 --> 00:10:43.200
So you can consolidate your shell scripts,
right?

156
00:10:43.200 --> 00:10:46.532
Get get that scripting out
of your package JSON and

157
00:10:46.532 --> 00:10:49.120
into a place where you can manage it.

158
00:10:49.120 --> 00:10:52.130
You can work on it like
it's code because it is.

159
00:10:53.270 --> 00:10:55.260
We use learner.

160
00:10:55.260 --> 00:11:00.850
And we, we experienced the difference
between yarn workspaces and learner.

161
00:11:00.850 --> 00:11:02.860
We know what learner does now.

162
00:11:02.860 --> 00:11:06.660
And we know the line between
yarn workspaces and learner.

163
00:11:06.660 --> 00:11:11.420
And then we talked about
extracting your API surface.

164
00:11:11.420 --> 00:11:13.320
API documentation.

165
00:11:13.320 --> 00:11:16.270
And then probably a new
pattern to many of you.

166
00:11:17.630 --> 00:11:22.722
building an app based mono repo,
where we're not just dealing with,

167
00:11:22.722 --> 00:11:25.850
you know, the UI kit, like use case.

168
00:11:25.850 --> 00:11:28.796
But we're we're using this as a way for

169
00:11:28.796 --> 00:11:33.360
teams to have the benefit
of encapsulated libraries.

170
00:11:33.360 --> 00:11:36.740
Sort of layer their way up to
a more complicated application.

171
00:11:36.740 --> 00:11:38.840
I hope this was useful for you.

172
00:11:38.840 --> 00:11:42.440
And I hope that you learned some tricks
that you'll take back to your teams.

173
00:11:42.440 --> 00:11:47.080
Because this is a tricky area of
the JavaScript and TypeScript ecosystem.

174
00:11:47.080 --> 00:11:52.036
And part of the reason I do this is to
make sure that, I learned the hard way and

175
00:11:52.036 --> 00:11:56.310
you don't have to So
thanks very much for your attention.

176
00:11:56.310 --> 00:11:56.993
Have a great rest of the day.

