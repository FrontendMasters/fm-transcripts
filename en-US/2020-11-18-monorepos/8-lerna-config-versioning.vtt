WEBVTT

1
00:00:00.550 --> 00:00:05.243
By the way,
if you feel like you're falling behind or

2
00:00:05.243 --> 00:00:09.418
there's something wrong
with your project and

3
00:00:09.418 --> 00:00:16.220
you want to check out my code on the Git
repo, there's this branch called f e.

4
00:00:16.220 --> 00:00:18.336
m.

5
00:00:21.853 --> 00:00:24.219
We're now on the fifth step and

6
00:00:24.219 --> 00:00:30.490
we are going to be adding a tool called
learner to our mono repo project.

7
00:00:30.490 --> 00:00:37.490
The learner solves a bunch of problems and
we're gonna feel the benefits.

8
00:00:37.490 --> 00:00:42.237
Having solved one big problem
almost immediately, and

9
00:00:42.237 --> 00:00:46.984
that is it provides us with
a mechanism to run a command on

10
00:00:46.984 --> 00:00:51.230
each package in our mono
repo with a one c li right.

11
00:00:51.230 --> 00:00:55.430
So if we wanted to just
say Run all the tests.

12
00:00:55.430 --> 00:00:57.260
learner makes that really easy.

13
00:00:57.260 --> 00:00:59.190
Now it does many other things.

14
00:00:59.190 --> 00:01:04.070
It's kind of like a Swiss Army knife for
JavaScript and TypeScript mana repos.

15
00:01:04.070 --> 00:01:07.350
But that's that is the first
benefit we're gonna feel.

16
00:01:07.350 --> 00:01:13.479
So learner is a workspace
level dependency.

17
00:01:15.050 --> 00:01:18.527
We don't have a different version of
learner we could not have a different

18
00:01:18.527 --> 00:01:20.640
version of learner for each package.

19
00:01:20.640 --> 00:01:22.626
So we're going to install
it at the workspace level.

20
00:01:22.626 --> 00:01:28.382
Yarn add dw learner

21
00:01:33.391 --> 00:01:40.038
All right, and
I'm going to look in my course files and

22
00:01:40.038 --> 00:01:45.250
there should be a config learner dot JSON.

23
00:01:45.250 --> 00:01:49.330
So copy this file into
the root of your workspace.

24
00:01:49.330 --> 00:01:52.230
I wanna talk a little bit about
what we see in this config file.

25
00:01:53.440 --> 00:01:57.200
This first property here, let me copy
it in before I forget to do that.

26
00:01:58.870 --> 00:02:01.130
The first property packages.

27
00:02:02.810 --> 00:02:08.910
It is kind of equivalent to
workspaces In our package JSON.

28
00:02:10.610 --> 00:02:12.670
Remember this this is where we started,
right?

29
00:02:12.670 --> 00:02:16.170
See it's also packages slash star.

30
00:02:16.170 --> 00:02:20.940
So we have to tell learner about
where it can find our packages.

31
00:02:20.940 --> 00:02:24.889
You may be wondering, why do we need
to specify this if we're already

32
00:02:24.889 --> 00:02:27.680
specifying it in our package, JSON.

33
00:02:27.680 --> 00:02:31.105
Well, a couple answers here, number one,

34
00:02:31.105 --> 00:02:35.510
Lerner works with NPM,
in addition to yarn.

35
00:02:35.510 --> 00:02:39.458
In fact, this is the second line here
we're saying we wish to use yarn, but

36
00:02:39.458 --> 00:02:40.850
it could be used with NPM.

37
00:02:41.910 --> 00:02:47.014
So NPM doesn't have this concept
of workspaces, and that's there

38
00:02:47.014 --> 00:02:52.400
needs to be some way To clue learner
in about where it can find our stuff.

39
00:02:53.800 --> 00:02:58.730
Second thing, learner deals with
things like publishing packages.

40
00:02:58.730 --> 00:03:02.746
So there may be things that
are present in your workspace

41
00:03:02.746 --> 00:03:06.490
that you do not wish to learn to manage.

42
00:03:06.490 --> 00:03:10.510
In many cases,
these will be the same set of folders.

43
00:03:10.510 --> 00:03:14.712
But it's convenient to be able to make
adjustments if you ever need to be

44
00:03:14.712 --> 00:03:16.470
able to be ever have a need to.

45
00:03:19.415 --> 00:03:22.745
All right, this third field here version.

46
00:03:22.745 --> 00:03:29.365
So right now, we're using a versioning
strategy called lockstep.

47
00:03:29.365 --> 00:03:35.226
What that means is,
if we were to publish everything

48
00:03:35.226 --> 00:03:40.325
in this repo, we would get at slack/types.

49
00:03:40.325 --> 00:03:43.570
I put this lerna.json in the wrong place,
by the way, I'm gonna move it.

50
00:03:43.570 --> 00:03:46.110
Was not in my workspace route and
it should have been.

51
00:03:47.130 --> 00:03:48.510
There it is workspace route.

52
00:03:50.310 --> 00:03:54.990
So we would get slack utils
one slack types one and

53
00:03:54.990 --> 00:04:02.160
every time we make a change this version
number will bump for everything.

54
00:04:02.160 --> 00:04:07.240
An example of a project that
uses this in practice is Babel.

55
00:04:08.800 --> 00:04:15.538
So if we go and
look at our root level package JSON here,

56
00:04:15.538 --> 00:04:20.234
actually the yarn lock would be better

57
00:04:26.981 --> 00:04:33.645
So we've got a lot of different,
like they're not all exactly the same,

58
00:04:33.645 --> 00:04:37.512
but you see a lot of a lot
of seven twelves and

59
00:04:37.512 --> 00:04:42.673
then a lot of 710 fours,
right this is because as Babel

60
00:04:42.673 --> 00:04:48.360
evolves All of the core plugins
are versioned in lockstep.

61
00:04:48.360 --> 00:04:53.087
That does not mean I'm consuming
a unified set of like 7 12, 7 12,

62
00:04:53.087 --> 00:04:58.045
7 12, 7 12 I can still, consume a mix,
but whenever a change is made,

63
00:04:58.045 --> 00:05:03.083
everything is published with the new
version number all 50 or so packages so

64
00:05:03.083 --> 00:05:08.490
that that's an example of a project
that uses lockstep versioning.

65
00:05:08.490 --> 00:05:15.690
In practice, the other option we
have here is to say independent.

66
00:05:18.460 --> 00:05:23.291
This allows the versions of the different
packages in my mono repo to

67
00:05:23.291 --> 00:05:26.460
float with respect to each other.

68
00:05:26.460 --> 00:05:30.689
So if I only change slack slash utils.

69
00:05:31.940 --> 00:05:35.330
Only that package will cut a new release.

70
00:05:35.330 --> 00:05:38.170
And only it's version number will go up.

71
00:05:38.170 --> 00:05:41.980
So the version numbers across my
whole project may be different.

72
00:05:41.980 --> 00:05:47.110
And this is what you would want to do if
you kind of have a collection of things.

73
00:05:47.110 --> 00:05:53.420
But the way these packages within
the mono repo talk to each other.

74
00:05:53.420 --> 00:05:56.630
Might be through their own public API's.

75
00:05:56.630 --> 00:06:00.356
And so, someone may consume these things,
you know,

76
00:06:00.356 --> 00:06:05.298
only one package from the mono repo and
they want semantic versioning and

77
00:06:05.298 --> 00:06:09.490
to not have to like upgrade
a whole bunch of extra stuff.

78
00:06:09.490 --> 00:06:12.120
Just because you touch one little
thing in one package, right?

79
00:06:12.120 --> 00:06:12.840
You don't.

80
00:06:12.840 --> 00:06:15.990
You don't need to trigger
that kind of churn.

81
00:06:15.990 --> 00:06:20.013
Now, it's important to understand
the condition I just added there

82
00:06:20.013 --> 00:06:20.990
the qualifier.

83
00:06:22.390 --> 00:06:26.116
If everything talks to each
other through its public API,

84
00:06:26.116 --> 00:06:30.452
then semantic versioning is
sufficient to describe that you know,

85
00:06:30.452 --> 00:06:35.420
it is safe to take in this next version
of one package from the mono repo.

86
00:06:35.420 --> 00:06:37.556
If you have a lot of private stuff,

87
00:06:37.556 --> 00:06:42.348
talking to other private stuff between
your packages You probably want to use

88
00:06:42.348 --> 00:06:47.920
lockstep because your version numbers
are no longer really describing.

89
00:06:47.920 --> 00:06:52.759
This is a major, you know breaking change
non breaking enhancement, a patch,

90
00:06:52.759 --> 00:06:56.970
right like a bug fix that doesn't
affect the public API at all.

91
00:06:56.970 --> 00:07:00.370
You're not using your version numbers
to describe that stuff anymore.

92
00:07:00.370 --> 00:07:04.687
You're using version numbers to
describe Maybe that same concept but

93
00:07:04.687 --> 00:07:06.881
of the whole collection of things,

94
00:07:06.881 --> 00:07:11.270
not the safety of moving individual
packages within the monitor repo,

95
00:07:11.270 --> 00:07:17.290
forward or backward, you're more signaling
like these are all meant to work together.

96
00:07:17.290 --> 00:07:19.130
These are all mentors together etc.

97
00:07:21.520 --> 00:07:25.729
We're gonna start out with lockstep
versioning and later we'll change,

98
00:07:25.729 --> 00:07:28.224
because this is the simplest way, for now.

99
00:07:28.224 --> 00:07:30.780
We're done.

100
00:07:30.780 --> 00:07:35.151
All we needed to do I know I've been
talking for a little bit but all we need

101
00:07:35.151 --> 00:07:40.190
to do is install learner drop that config
file in place and let's see what happens.

