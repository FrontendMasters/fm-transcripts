WEBVTT

1
00:00:00.280 --> 00:00:05.149
So we're gonna do another kind of
little example here, which is before

2
00:00:05.149 --> 00:00:10.030
he just had to add some onClick
handlers with the dispatch, I was fine.

3
00:00:10.030 --> 00:00:12.050
It was nice to get us warmed up.

4
00:00:12.050 --> 00:00:15.467
But here we have something
a little bit more complicated and

5
00:00:15.467 --> 00:00:19.905
by a little bit mean just slightly, we're
gonna have a little bit of a form and

6
00:00:19.905 --> 00:00:23.840
this form is going to allow them to
set the count to any given number.

7
00:00:23.840 --> 00:00:28.292
All right, so it's going to
the simplest version could just be

8
00:00:28.292 --> 00:00:33.170
an input field that we dispatch,
based on whatever is in that field.

9
00:00:33.170 --> 00:00:35.570
We can dispatch the set action
that we created earlier.

10
00:00:35.570 --> 00:00:40.104
If you wanna take it for an extension,
it would be cool, if we could also like,

11
00:00:40.104 --> 00:00:44.190
if it reflected the current number
that we have in the counter as well.

12
00:00:44.190 --> 00:00:48.270
So the counter is 45, the value of
the input field was 45 as well, right?

13
00:00:48.270 --> 00:00:54.320
That's going to be a little bit trickier,
but either way we will do it together.

14
00:00:54.320 --> 00:00:59.146
So which was trying to implement
the set counter, the one thing you're

15
00:00:59.146 --> 00:01:04.800
gonna need to do is go into counter,
just add this set counter here as well.

16
00:01:04.800 --> 00:01:08.760
And we should be able to go ahead and
now see that we have in the application.

17
00:01:08.760 --> 00:01:14.610
We'd love to get this working so that when
it hits submit, we can change the count.

18
00:01:14.610 --> 00:01:18.246
Originally, we can just keep this as some
amount of state, but if you can actually

19
00:01:18.246 --> 00:01:22.170
kinda sync it up with the actual account
that would be really cool as well.

20
00:01:22.170 --> 00:01:22.670
Awesome.

