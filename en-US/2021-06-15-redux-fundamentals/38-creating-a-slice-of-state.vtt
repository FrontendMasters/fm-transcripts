WEBVTT

1
00:00:00.030 --> 00:00:00.894
So we're gonna go.

2
00:00:00.894 --> 00:00:06.140
If you go into the repose in the,
on the course website,

3
00:00:06.140 --> 00:00:13.185
there's one, called chores Redux,
which is a relatively, simple app.

4
00:00:13.185 --> 00:00:19.521
And what it seeks to do is maintain a list
of humans, maintain a list of tasks and

5
00:00:19.521 --> 00:00:24.327
give you eventually the ability
to assign tasks to a human.

6
00:00:24.327 --> 00:00:28.360
So I can see who has to do what,
around the house.

7
00:00:28.360 --> 00:00:33.472
So let's go ahead and we know that
we're gonna need two slices of state.

8
00:00:33.472 --> 00:00:37.520
We're gonna need one for
the humans and one for the tasks.

9
00:00:37.520 --> 00:00:42.440
And then we'll begin to use both of them
to kind of build our application up.

10
00:00:44.190 --> 00:00:47.125
So let's go into this code base.

11
00:00:47.125 --> 00:00:51.869
And we'll switch out to,
I got to open this one up.

12
00:01:05.759 --> 00:01:06.731
That's the wrong one.

13
00:01:09.542 --> 00:01:10.261
I just.

14
00:01:15.849 --> 00:01:18.447
All right, give it one second
we've got open in Visual Studio.

15
00:01:20.506 --> 00:01:21.691
So we've got our components.

16
00:01:21.691 --> 00:01:27.870
Our store right now is actually
the normal one from react Redux.

17
00:01:27.870 --> 00:01:31.185
So we wanna actually,
instead of using Redux directly,

18
00:01:31.185 --> 00:01:34.443
we're gonna use Redux toolkit for
most of what we need.

19
00:01:34.443 --> 00:01:37.162
So we'll get rid of this code and

20
00:01:37.162 --> 00:01:42.303
we're gonna export our conts
store is configure store which

21
00:01:42.303 --> 00:01:47.444
is an abstraction that will
eventually take some options and

22
00:01:47.444 --> 00:01:53.820
return a fully configured store
things that are gonna happen in here.

23
00:01:53.820 --> 00:01:58.432
It will automatically apply a few
different middlewares for us.

24
00:01:58.432 --> 00:02:02.693
In development there are three middlewares
there is one that checks if you're

25
00:02:02.693 --> 00:02:06.319
accidentally mutating state somewhere and
yells at you about it.

26
00:02:06.319 --> 00:02:09.880
Another that makes sure we saw that you
can export an import entire serialized

27
00:02:09.880 --> 00:02:12.399
version of state as JSON that
works with our objects and

28
00:02:12.399 --> 00:02:15.670
arrays if you start using maps and
sets stuff starts to get weird.

29
00:02:15.670 --> 00:02:18.312
So it will go and
check to make sure you're not doing that.

30
00:02:18.312 --> 00:02:21.647
And then it will give you a Redux thunk,
which we briefly mentioned earlier,

31
00:02:21.647 --> 00:02:24.540
which allows you to dispatch functions,
to make Ajax calls.

32
00:02:24.540 --> 00:02:26.332
It's gonna wire up all that middleware for
you.

33
00:02:26.332 --> 00:02:28.360
It's gonna wire up the developer tools.

34
00:02:28.360 --> 00:02:30.916
It's gonna do everything
under the hood for you.

35
00:02:30.916 --> 00:02:32.510
Get you kind of set up.

36
00:02:32.510 --> 00:02:37.226
So it takes a reducer key.

37
00:02:37.226 --> 00:02:41.752
We'll just start out with our simple one
for now, but we'll add to it momentarily,

38
00:02:41.752 --> 00:02:45.481
but we know that things get angry
with us if we don't have it in place.

39
00:02:45.481 --> 00:02:50.292
So now if we go over here, and
just with that configure store

40
00:02:54.990 --> 00:02:59.801
We can see that we already
have the dev tools in place.

41
00:02:59.801 --> 00:03:03.991
Great, so let's create the tasksSlice.

42
00:03:03.991 --> 00:03:05.313
So I'll go in this store.

43
00:03:08.860 --> 00:03:14.269
TaskSlice.js.

44
00:03:14.269 --> 00:03:19.951
And we need this createSlice ability.

45
00:03:19.951 --> 00:03:22.373
So we'll go ahead and
we'll start with, we'll just say.

46
00:03:24.941 --> 00:03:31.304
CreateSlice, and there's a bunch
of other little helpers in here.

47
00:03:31.304 --> 00:03:33.400
Before we were just incrementing an ID.

48
00:03:33.400 --> 00:03:37.685
But Redux toolkit also comes with
a little helper library called nano ID,

49
00:03:37.685 --> 00:03:39.906
which just create unique IDs for you.

50
00:03:39.906 --> 00:03:41.174
So we'll make a function.

51
00:03:41.174 --> 00:03:43.670
This is a regular JavaScript function for
creating a task.

52
00:03:45.030 --> 00:03:45.547
And really,

53
00:03:45.547 --> 00:03:48.565
the only thing that we're going to need
eventually is a title for this task.

54
00:03:51.280 --> 00:03:54.673
And the ID is gonna use
this library called nanoid.

55
00:03:58.460 --> 00:03:59.873
We'll get the title.

56
00:03:59.873 --> 00:04:03.910
We'll say,
completed as false in the very beginning.

57
00:04:03.910 --> 00:04:06.984
This is very similar to what
we did with the menu items.

58
00:04:06.984 --> 00:04:12.659
And assigned to,
will be an empty string for now.

59
00:04:12.659 --> 00:04:15.926
Great, so we've got that initial state.

60
00:04:15.926 --> 00:04:17.389
We'll just get some of that in place.

61
00:04:21.080 --> 00:04:24.692
And we'll say createTask.

62
00:04:27.730 --> 00:04:29.569
Do order more energy drinks again.

63
00:04:33.439 --> 00:04:34.740
And make another one, I don't know.

64
00:04:36.210 --> 00:04:37.152
What are the plants?

65
00:04:40.009 --> 00:04:42.861
Right, so
this is again just calling this function.

66
00:04:42.861 --> 00:04:44.221
We did it by hand in the previous ones.

67
00:04:44.221 --> 00:04:46.040
I've just given myself a little helper.

68
00:04:46.040 --> 00:04:48.024
And now we just need to make the slice.

69
00:04:48.024 --> 00:04:52.454
So we can say, export const

70
00:04:52.454 --> 00:04:57.274
tasksSlice is createSlice.

71
00:04:57.274 --> 00:05:03.242
And we know that the name
is going to be tasks.

72
00:05:03.242 --> 00:05:05.956
We know the initial state, we have here.

73
00:05:05.956 --> 00:05:07.103
And then we have our reducers.

74
00:05:07.103 --> 00:05:07.669
Right?

75
00:05:07.669 --> 00:05:10.170
These are all the things that can happen.

76
00:05:10.170 --> 00:05:13.033
Let's just start with the simplest thing
which is we know we saw that form we know

77
00:05:13.033 --> 00:05:14.112
we're gonna need to add one.

78
00:05:14.112 --> 00:05:17.333
So we'll say add and just like before,

79
00:05:17.333 --> 00:05:22.808
it has the same API as any reducer
itself will say state and action.

80
00:05:22.808 --> 00:05:30.130
And then const task is that createTask
helper that we made before.

81
00:05:32.300 --> 00:05:36.191
And whatever the action dot payload is.

82
00:05:36.191 --> 00:05:38.132
And then really we just
push that onto the state.

83
00:05:41.590 --> 00:05:44.095
I could even get this down to
a one liner if I really wanted to.

84
00:05:49.020 --> 00:05:50.842
And we've got that in place.

85
00:05:50.842 --> 00:05:54.169
So now let's just hook it up to the,
to the store,

86
00:05:54.169 --> 00:05:57.120
which we'll get rid of this one here.

87
00:05:57.120 --> 00:05:59.308
And let's go ahead and we'll just say.

88
00:05:59.308 --> 00:06:03.012
Do you remember the syntax for
combined reducers where we have keys and

89
00:06:03.012 --> 00:06:04.907
then we have the value is a reducer?

90
00:06:04.907 --> 00:06:06.591
That's exactly the same syntax.

91
00:06:06.591 --> 00:06:08.686
It's using everything we've seen so

92
00:06:08.686 --> 00:06:12.090
far under the hood to wire
this all together for us.

93
00:06:12.090 --> 00:06:18.799
So we'll say tasks and
that's gonna be tasksSlice.reducer.

94
00:06:18.799 --> 00:06:22.378
And great, so
we have all of that in place.

95
00:06:22.378 --> 00:06:28.360
Let's go take a look in our developer
tools and see if that's in our state now.

96
00:06:28.360 --> 00:06:33.181
TasksSlice is not meant corresponding
on disk, I don't know why,

97
00:06:33.181 --> 00:06:37.337
we capitalize that with the auto
complete but here we are.

98
00:06:37.337 --> 00:06:40.536
Can I read probably map undefined Okay,
we don't have the humans yet

99
00:06:40.536 --> 00:06:42.090
because I move that out of there.

100
00:06:42.090 --> 00:06:47.316
So actually say I

101
00:06:47.316 --> 00:06:54.040
should do the trick.

