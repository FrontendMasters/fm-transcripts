WEBVTT

1
00:00:00.350 --> 00:00:03.690
All right, so we'll learn
a little bit about Redux today.

2
00:00:03.690 --> 00:00:07.782
Redux it is a state management tool,

3
00:00:07.782 --> 00:00:11.450
it is commonly used with React.

4
00:00:11.450 --> 00:00:15.275
But it doesn't have to be, redux can
be used with any front end framework,

5
00:00:15.275 --> 00:00:18.400
redux can even be used anywhere
JavaScript can be written.

6
00:00:18.400 --> 00:00:21.964
Redux can be used on the back end,
on the front end, with React,

7
00:00:21.964 --> 00:00:26.420
with whatever you wanna do with just
vanilla JavaScript, with Angular.

8
00:00:26.420 --> 00:00:28.679
In this case where we'll
talk about Redux and

9
00:00:28.679 --> 00:00:32.671
then we'll build some react applications
with it to kind of see it in practice.

10
00:00:32.671 --> 00:00:36.434
All right, so
what are we gonna cover in this workshop?

11
00:00:36.434 --> 00:00:39.400
One of the things that I've noticed is
a lot of times you're learning Redux, but

12
00:00:39.400 --> 00:00:40.950
you're learning Redux and React.

13
00:00:40.950 --> 00:00:44.652
And then there is a third library that
we'll see in our time together called

14
00:00:44.652 --> 00:00:45.750
React-Redux.

15
00:00:45.750 --> 00:00:49.657
So all of a sudden, you sitting down
you're learning Redux, React Redux, and

16
00:00:49.657 --> 00:00:53.214
then how to integrate into a React
application and all the best practices

17
00:00:53.214 --> 00:00:57.145
around that at the same time, and
all of a sudden, you're really sad, right?

18
00:00:57.145 --> 00:01:00.036
And then you enter the next
phase of learning React and

19
00:01:00.036 --> 00:01:04.470
Redux I've gotten really good at copy and
pasting these pieces from the other part

20
00:01:04.470 --> 00:01:07.680
of the code base and
I think I mostly know what they do.

21
00:01:07.680 --> 00:01:11.313
Or I've grabbed stuff from the
documentation and it kind of makes sense,

22
00:01:11.313 --> 00:01:13.410
it works at least, right?

23
00:01:13.410 --> 00:01:17.614
We're gonna try to move us to the third
stage pass out which is, now I get it,

24
00:01:17.614 --> 00:01:20.967
I understand Redux,
I can plug it into a React application,

25
00:01:20.967 --> 00:01:22.760
I understand each piece.

26
00:01:22.760 --> 00:01:24.240
So kind of work through it and

27
00:01:24.240 --> 00:01:27.199
see how each piece kind of
builds on top of each other, and

28
00:01:27.199 --> 00:01:31.207
then finally we'll look at this thing
called React Toolkit which is a another

29
00:01:31.207 --> 00:01:35.238
set of abstractions to take all the kind
of low level stuff that we're doing.

30
00:01:35.238 --> 00:01:39.542
And bundles it up real nicely, in a way
that hides some of the inner workings,

31
00:01:39.542 --> 00:01:41.596
that I think are important to know but

32
00:01:41.596 --> 00:01:45.042
also allows you to kind of reduce
the amount of boiler plate and

33
00:01:45.042 --> 00:01:49.567
TDM that you might have to go through
while setting up a React application.

34
00:01:49.567 --> 00:01:53.117
Finally, what good front end application
doesn't have to make at least some kind of

35
00:01:53.117 --> 00:01:55.237
network request at some
point to get some data.

36
00:01:55.237 --> 00:01:58.747
So we'll look at how do we make API
requests and update our state as well?

37
00:01:58.747 --> 00:02:02.553
So it kind of slowly build, we'll use
hooks, we'll use higher order components,

38
00:02:02.553 --> 00:02:05.770
we're gonna see each phase as we
learned Redux all the way from.

39
00:02:05.770 --> 00:02:06.980
Okay, here it is,

40
00:02:06.980 --> 00:02:11.840
just the library itself to building
some small applications as we go along.

41
00:02:12.860 --> 00:02:18.025
Great, so the good news is
that the API service area for

42
00:02:18.025 --> 00:02:22.968
Redux is pretty reasonable,
Redux has effectively

43
00:02:22.968 --> 00:02:27.700
five methods are functions attached to it.

44
00:02:27.700 --> 00:02:32.620
And four of them are just
helper utility methods, right?

45
00:02:32.620 --> 00:02:37.823
They are just effectively not
dissimilar from methods you might find

46
00:02:37.823 --> 00:02:42.844
in a library like Lodash or underscore,
they just allow you to kind

47
00:02:42.844 --> 00:02:48.140
of take very common things and
do them a little bit easier, right?

48
00:02:48.140 --> 00:02:51.782
And so we'll kind of go through the entire
API surface area of Redux just by

49
00:02:51.782 --> 00:02:52.680
itself, right?

50
00:02:52.680 --> 00:02:56.198
We're not gonna worry about okay, then I
got to plug it into react application so

51
00:02:56.198 --> 00:02:56.780
on so forth.

52
00:02:56.780 --> 00:03:01.580
We will do all that but at first,
what if we just mastered Redux?

53
00:03:01.580 --> 00:03:02.690
Seems good, right?

54
00:03:02.690 --> 00:03:07.004
So the question was, where are things
like use reducer, or in this case,

55
00:03:07.004 --> 00:03:10.100
it's actually use selector and
use dispatch.

56
00:03:10.100 --> 00:03:13.303
They're not in Redux,
that's not in the Redux library, right?

57
00:03:13.303 --> 00:03:16.392
That isn't a I kind of
alluded to this earlier,

58
00:03:16.392 --> 00:03:20.871
a fun other library called React Redux,
which is, neither react nor

59
00:03:20.871 --> 00:03:24.210
redux and
is the bindings between Redux and React.

60
00:03:24.210 --> 00:03:29.252
So we will jump into that but that is
actually not on the surface area of Redux,

61
00:03:29.252 --> 00:03:31.205
and that kind of makes sense.

62
00:03:31.205 --> 00:03:36.013
If you think about it, cuz like we said
before, Redux is very commonly found used

63
00:03:36.013 --> 00:03:39.490
in React applications but
it doesn't have to be, right?

64
00:03:39.490 --> 00:03:42.910
You code,
build a game with HTML5 Canvas and

65
00:03:42.910 --> 00:03:47.240
choose to use Redux to manage
the state and application.

66
00:03:47.240 --> 00:03:49.692
You could decide I wanna use this
in an embryo application and

67
00:03:49.692 --> 00:03:52.590
you could use Redux to manage the state
in that application or Angular.

68
00:03:52.590 --> 00:03:56.682
You could use it on the server side and
node, you could also use it just as easily

69
00:03:56.682 --> 00:03:59.700
to kind of manage state
using the same principles.

70
00:03:59.700 --> 00:04:06.890
So the actual core library itself is kind
of just like unaware of react, right?

71
00:04:06.890 --> 00:04:11.571
And then we have those bindings
in the either amazingly named or

72
00:04:11.571 --> 00:04:14.800
poorly named React and Redux library.

73
00:04:14.800 --> 00:04:18.216
Cuz it on one hand does exactly what it
says on the tin, on the other hand is kind

74
00:04:18.216 --> 00:04:21.069
of when you explain the what
something means by using the words.

75
00:04:22.720 --> 00:04:25.464
And we'll figure out how to bind it
into react application there, so

76
00:04:25.464 --> 00:04:27.510
it's actually not on
the surface here of Redux.

77
00:04:27.510 --> 00:04:32.854
So the question was, well why use
Redux doesn't React these days

78
00:04:32.854 --> 00:04:38.505
come with a use reducer that is
kind of basically the same thing.

79
00:04:38.505 --> 00:04:44.765
It is similar, but it also lacks a lot of
the bells and whistles as well, right?

80
00:04:44.765 --> 00:04:48.250
One way to think about it is,
you might have a single speed

81
00:04:48.250 --> 00:04:51.740
bike that's probably useful for
getting around town but

82
00:04:51.740 --> 00:04:56.630
it's maybe not a mountain bike or a racing
bike or something along those lines.

83
00:04:56.630 --> 00:05:01.138
So one of the things that Redux has that
they kind of built in version two react

84
00:05:01.138 --> 00:05:04.675
doesn't have is things like
middleware built in, right?

85
00:05:04.675 --> 00:05:08.651
Things like the binding for high order
components that will take care of

86
00:05:08.651 --> 00:05:13.107
memorization and try to avoid re rendering
components when possible, right?

87
00:05:13.107 --> 00:05:17.432
There's a lot of kind of just slightly
more advanced things that come in Redux

88
00:05:17.432 --> 00:05:20.506
that are not in the use reducer
hook that come in React.

89
00:05:20.506 --> 00:05:24.793
That in a large enough application, you're
either going to find yourself needing

90
00:05:24.793 --> 00:05:28.237
Redux or if you're going down this
kind of, reducer kind of path.

91
00:05:28.237 --> 00:05:30.192
Or you might find yourself putting so

92
00:05:30.192 --> 00:05:33.848
many plugins into the built in user
duser hook into React that you've

93
00:05:33.848 --> 00:05:37.330
effectively recreated Redux
without the same level of support.

94
00:05:39.180 --> 00:05:41.460
Cool, Mark?

95
00:05:41.460 --> 00:05:45.222
&gt;&gt; Yeah, could you briefly describe
the difference between Redux and

96
00:05:45.222 --> 00:05:46.785
the context API.

97
00:05:46.785 --> 00:05:49.914
&gt;&gt; Yeah, so the difference in Redux and
the context API,

98
00:05:49.914 --> 00:05:54.095
which is Redux is very similar to
this whole users reducer part.

99
00:05:54.095 --> 00:05:58.255
The context API is actually used by both
of them to kind of thread access to your

100
00:05:58.255 --> 00:06:00.700
store throughout the application.

101
00:06:00.700 --> 00:06:04.871
So, Redux isn't necessarily different
than the context API in so far that it

102
00:06:04.871 --> 00:06:09.123
uses the context API, the React Redux
library that we'll see in a little bit.

103
00:06:09.123 --> 00:06:12.495
Uses the context API to give all
of your different components,

104
00:06:12.495 --> 00:06:16.070
access to your Redux store from
anywhere within the application.

105
00:06:16.070 --> 00:06:21.037
So both Use reducer and Redux will use the
context API to make your store available

106
00:06:21.037 --> 00:06:25.347
without having to thread your props
from the highest component down to

107
00:06:25.347 --> 00:06:28.770
the lowest level component and
your events back up.

108
00:06:28.770 --> 00:06:30.301
They both use the context API, so

109
00:06:30.301 --> 00:06:33.480
it's not necessary that Redux is
different than the context API.

110
00:06:33.480 --> 00:06:35.800
It is using it as well
as the use reducer hook.

