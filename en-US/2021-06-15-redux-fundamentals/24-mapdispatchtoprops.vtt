WEBVTT

1
00:00:00.000 --> 00:00:03.150
We know that the item can be dispatched.

2
00:00:03.150 --> 00:00:05.753
But now we also need to actually
wire it up to this button,

3
00:00:05.753 --> 00:00:09.910
because like right now,
there's nothing actually happening here.

4
00:00:09.910 --> 00:00:12.940
And so there's a bunch of ways to do this.

5
00:00:12.940 --> 00:00:18.587
And we'll kind of step through just the,
dead simple approach first, and then

6
00:00:18.587 --> 00:00:24.166
we'll kind of escalate it a little bit
to a more kind of sustainable approach.

7
00:00:24.166 --> 00:00:28.844
So if we go in, we want to create
this NewItemFormContainer.

8
00:00:28.844 --> 00:00:32.238
Now that's going to wrap our new item form
with everything it needs to be connected

9
00:00:32.238 --> 00:00:32.790
up to Redux.

10
00:00:34.350 --> 00:00:39.833
And we can say NewItemFormContainer,

11
00:00:39.833 --> 00:00:43.328
and we need a new item form

12
00:00:51.694 --> 00:00:58.490
From ../components/newitemform, right?

13
00:00:58.490 --> 00:01:04.683
And we will, pull in connect as well.

14
00:01:04.683 --> 00:01:10.966
And so the cool thing that, is if you
don't give connect any arguments or

15
00:01:10.966 --> 00:01:15.086
if you don't give it any
map dispatch to props,

16
00:01:15.086 --> 00:01:19.219
it's gonna pass in that
full dispatch object.

17
00:01:19.219 --> 00:01:25.310
Which is just like map state to props
was an analog towards Uselector,

18
00:01:25.310 --> 00:01:29.649
that dispatch is effectively
the same dispatch,

19
00:01:29.649 --> 00:01:37.580
that you get from the use dispatch hook,
in our, or say NewItemFormContainer.

20
00:01:37.580 --> 00:01:41.711
Equals Connect by giving no arguments, no
map state to props, no dispatch to props.

21
00:01:41.711 --> 00:01:44.759
Unlike that tip selector I
showed you the very beginning.

22
00:01:44.759 --> 00:01:49.589
And we pass the NewItemForm, it's going
to pass in, an empty object for the state

23
00:01:49.589 --> 00:01:54.141
props, and then it will actually pass
in dispatch, as a prop to that object.

24
00:01:54.141 --> 00:02:01.273
So I can go ahead and, if we go into
calculator, we can swap it out.

25
00:02:02.418 --> 00:02:06.593
And we'll say you want to FormContainer.

26
00:02:10.434 --> 00:02:16.770
Containers, great, so
I should be swapped in at this point.

27
00:02:16.770 --> 00:02:19.809
Now this isn't great because like
we need to go into NewItemForm and

28
00:02:19.809 --> 00:02:20.889
modified a little bit.

29
00:02:20.889 --> 00:02:25.111
And one of the selling points of
using the connect API is basically,

30
00:02:25.111 --> 00:02:27.850
your regular old presentational UI.

31
00:02:27.850 --> 00:02:33.568
React components can be completely
agnostic, to the existence of redux.

32
00:02:33.568 --> 00:02:36.740
And if you want to swap it out or
use it in a test suite or

33
00:02:36.740 --> 00:02:41.595
anything along those lines, but just
approve the dispatch does get passed in.

34
00:02:41.595 --> 00:02:46.192
We will take this dispatch, and
we'll say, whenever they submit the form,

35
00:02:46.192 --> 00:02:47.253
will dispatch and

36
00:02:47.253 --> 00:02:51.870
I'm going to just hard coded in because
we're gonna delete this in a second.

37
00:02:51.870 --> 00:02:55.950
I don't need any more
imports than we already have.

38
00:02:55.950 --> 00:03:01.248
So we'll say type is item
added I believe it was,

39
00:03:01.248 --> 00:03:03.972
and the payload will be.

40
00:03:06.252 --> 00:03:12.519
Name and price, that should do the trick.

41
00:03:12.519 --> 00:03:15.670
So I'm gonna go ahead and we'll say.

42
00:03:20.534 --> 00:03:22.052
We'll get the price of 500 bucks.

43
00:03:23.938 --> 00:03:26.091
You can see that it was
added there as well.

44
00:03:26.091 --> 00:03:27.540
So dispatch does get passed in.

45
00:03:27.540 --> 00:03:30.272
If you pass nothing, you just connect a,

46
00:03:30.272 --> 00:03:34.250
any old react component to
Redux using the connect API.

47
00:03:34.250 --> 00:03:38.204
Dispatch gets handed in, just as if
you would use to use dispatch hook.

48
00:03:38.204 --> 00:03:43.723
But if we want to say like, hey,
if you look at this component, the API for

49
00:03:43.723 --> 00:03:48.636
this component, is that it has a onSubmit,
props is expecting.

50
00:03:48.636 --> 00:03:52.094
If you want to be like say, hey, I want
to create my state management in a way,

51
00:03:52.094 --> 00:03:55.750
that doesn't even touch any of the UI
components that are being created.

52
00:03:55.750 --> 00:03:59.879
This is where that map dispatch
props can take that dispatch and,

53
00:03:59.879 --> 00:04:04.930
kind of work with it to get in a way that
component is expecting, on your behalf.

54
00:04:04.930 --> 00:04:06.778
So I'll just remove
everything we did just now.

55
00:04:10.117 --> 00:04:16.437
I'll save that, and let's actually
go into this NewItemFormContainer,

56
00:04:16.437 --> 00:04:20.945
and we'll get it working,
which is just review.

57
00:04:20.945 --> 00:04:24.480
The NewItemForm is expecting
a prop called onSubmit.

58
00:04:24.480 --> 00:04:29.040
And it's going to call that onSubmit
function, whenever the form is submitted.

59
00:04:29.040 --> 00:04:32.198
So really all we want to do is,
give it an onSubmit prop,

60
00:04:32.198 --> 00:04:34.390
that comes from our Redux dispatch.

61
00:04:34.390 --> 00:04:39.300
So this is what we'll do this
const MapDispatchToProps.

62
00:04:39.300 --> 00:04:42.610
And that is a function
that will take Dispatch.

63
00:04:43.790 --> 00:04:47.520
Just as what was getting passed in,
but it lets us modify it first.

64
00:04:47.520 --> 00:04:49.808
So I could say something like cool,

65
00:04:49.808 --> 00:04:53.250
actually return an object
which has a onSubmit prop.

66
00:04:54.745 --> 00:04:56.225
And that's going to be a function.

67
00:04:56.225 --> 00:05:00.194
It's going to be name and price,
basically conforming to the API,

68
00:05:00.194 --> 00:05:02.165
of the existing function.

69
00:05:02.165 --> 00:05:06.155
That will go ahead and
dispatch[addnewitem],

70
00:05:06.155 --> 00:05:09.102
with the name and the price, right?

71
00:05:09.102 --> 00:05:14.352
This is very similar to what we wrote in
line with the hooks, example from before.

72
00:05:14.352 --> 00:05:17.672
And then, the first argument is
connect is map states of props.

73
00:05:17.672 --> 00:05:20.702
The second item of connect
is map dispatch to props.

74
00:05:20.702 --> 00:05:23.182
So you don't have to
map any state in there.

75
00:05:23.182 --> 00:05:25.722
You can always just say null for
the first argument.

76
00:05:27.302 --> 00:05:32.545
And then pass map dispatch to
props as the second argument.

77
00:05:32.545 --> 00:05:34.782
All right,
let's go verify that this works as well.

78
00:05:43.606 --> 00:05:46.761
And you can see that we have
something delicious added as well.

79
00:05:46.761 --> 00:05:50.244
So, [COUGH] now we saw before the,
you can imagine,

80
00:05:50.244 --> 00:05:54.942
like let's say we had a whole bunch
of different props of this thing,

81
00:05:54.942 --> 00:05:59.500
this took, you could theoretically
use dispatch every time.

82
00:05:59.500 --> 00:06:02.412
We saw some things we did with
the hooks earlier to just try to,

83
00:06:02.412 --> 00:06:04.020
make our own lives easier.

84
00:06:04.020 --> 00:06:07.470
We can do that with bind
action creators as well.

85
00:06:07.470 --> 00:06:14.710
So we could say instead of, just
returning we'll say, bindactioncreators.

86
00:06:14.710 --> 00:06:19.664
And imagine this was a much larger object,
you could say, and

87
00:06:19.664 --> 00:06:23.100
pass and dispatch as the second argument.

88
00:06:25.110 --> 00:06:30.224
And now none of the small,
none of the values inside the object.

89
00:06:30.224 --> 00:06:33.177
Need to know about dispatch,
let's go verify that.

90
00:06:39.557 --> 00:06:40.670
We'll make a $700 sandwich.

91
00:06:40.670 --> 00:06:42.730
I'm from New York City, it's fine.

92
00:06:44.080 --> 00:06:48.940
And so we've got our $700 sandwich
in there, and that works as well.

93
00:06:48.940 --> 00:06:51.786
But, even this is tedious, right?

94
00:06:51.786 --> 00:06:55.236
Nobody wants to do this,
nobody wants to live like this.

95
00:06:55.236 --> 00:07:00.290
So if you give map dispatch to props of
a function, it will call the function and

96
00:07:00.290 --> 00:07:03.904
pass in dispatch, but
this is a common enough pattern.

97
00:07:03.904 --> 00:07:07.629
Right, and one of the things that
always like to say is, if you have to

98
00:07:07.629 --> 00:07:12.204
do something and it feels tedious, other
people probably think it's tedious too.

99
00:07:12.204 --> 00:07:16.947
And there might be a better way to do it,
which is if you simply don't give map

100
00:07:16.947 --> 00:07:20.824
dispatch to props a function,
but you just give it an object.

101
00:07:20.824 --> 00:07:25.252
In this case, the props is expecting, and

102
00:07:25.252 --> 00:07:28.944
the functions that it should call.

103
00:07:28.944 --> 00:07:32.786
It will automatically map
dispatch to props for you.

104
00:07:32.786 --> 00:07:36.513
Right, so generally,
if your just making very simple props that

105
00:07:36.513 --> 00:07:39.786
are going to fire your actions,
you can just use syntax.

106
00:07:39.786 --> 00:07:42.834
It will automatically
pass this dispatching,

107
00:07:42.834 --> 00:07:47.640
it will bind them all to a store dispatch,
and just set everything for you.

108
00:07:47.640 --> 00:07:49.458
You don't need to do any of that.

109
00:07:49.458 --> 00:07:52.005
If you need to do something a little
bit more complicated, like work with

110
00:07:52.005 --> 00:07:54.531
the functions before you send them off or
something along those lines.

111
00:07:54.531 --> 00:07:58.881
Or if you need to know other props about
the component that were passed in,

112
00:07:58.881 --> 00:08:03.720
well then you are going to need to use the
function, so you've got a very simple and

113
00:08:03.720 --> 00:08:05.530
easy API that you can use.

114
00:08:05.530 --> 00:08:08.276
And then if you need to drop down,
and have a little bit more control

115
00:08:08.276 --> 00:08:10.840
of what you're doing,
then you can use the function as well.

116
00:08:10.840 --> 00:08:12.954
And we'll see that like a few other times,

117
00:08:12.954 --> 00:08:16.320
it just various places throughout
using Redux with react.

118
00:08:16.320 --> 00:08:19.770
So now I'll make a salad, and
I'll make this $1,000 salad.

119
00:08:20.910 --> 00:08:23.466
And you can see that
this works still as well.

120
00:08:23.466 --> 00:08:27.289
So there's a bunch of different
ways to doing the same thing.

121
00:08:27.289 --> 00:08:31.598
One of the things that you
can kind of see is that,

122
00:08:31.598 --> 00:08:37.609
you can either just use connect,
and not like think about it at all.

123
00:08:39.140 --> 00:08:42.038
Or you can pass a function
that will receive dispatch,

124
00:08:42.038 --> 00:08:46.090
where you can work with dispatch and
do whatever you need to do.

125
00:08:46.090 --> 00:08:47.502
Or you can just give it an object and

126
00:08:47.502 --> 00:08:49.850
it will figure out all
the rest on your behalf.

127
00:08:49.850 --> 00:08:53.272
You have lots of options are each like,
simple, but it's hands off,

128
00:08:53.272 --> 00:08:57.710
versus a little more involved, but
you have full control of what's going on.

129
00:08:57.710 --> 00:09:00.810
Right, and that is,
one of the great things about this API.

