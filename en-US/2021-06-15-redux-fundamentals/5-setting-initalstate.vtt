WEBVTT

1
00:00:00.290 --> 00:00:03.160
We saw that we have a few
different methods here,

2
00:00:03.160 --> 00:00:05.860
we already explained reflates reducer.

3
00:00:05.860 --> 00:00:07.780
We've already taken
a lucky guess I get state.

4
00:00:09.090 --> 00:00:14.600
How anyone wanted, yeah we're down to
two methods less dispatch and subscribe.

5
00:00:14.600 --> 00:00:18.870
So if you wanted an easy 100 points,
these are Super Mario Brothers points.

6
00:00:18.870 --> 00:00:21.600
They don't actually get you anything but
you can see how many points you can earn.

7
00:00:21.600 --> 00:00:25.380
That should have been our demo app now
I think about it, but here we are.

8
00:00:25.380 --> 00:00:28.790
Anyway, we'll take a look
between dispatch and subscribe.

9
00:00:28.790 --> 00:00:30.746
Which one is gonna get
an action into my reducer?

10
00:00:33.780 --> 00:00:34.976
&gt;&gt; Is it dispatch?

11
00:00:34.976 --> 00:00:36.497
&gt;&gt; Dispatch, all right, 100 points.

12
00:00:38.838 --> 00:00:43.403
So with that, once we have our
store in place, I can go ahead and

13
00:00:43.403 --> 00:00:46.331
I can cancel a store and then we'll say,

14
00:00:46.331 --> 00:00:51.280
store the dispatch and
I can call that action creator.

15
00:00:51.280 --> 00:00:55.150
Increment that will return
the object in there.

16
00:00:55.150 --> 00:00:58.444
And then just to get take stored,
I get state for a spin.

17
00:01:03.359 --> 00:01:05.978
We've got that in there as well.

18
00:01:05.978 --> 00:01:10.887
Can't read value undefined.

19
00:01:10.887 --> 00:01:13.760
&gt;&gt; Maybe we need to
pass the initial state.

20
00:01:13.760 --> 00:01:17.710
&gt;&gt; Yep, this is why again, so we have
two options to pass the initial state.

21
00:01:17.710 --> 00:01:20.070
So we can't find the value on undefined.

22
00:01:20.070 --> 00:01:24.180
That's because the very first time around,
we haven't returned anything out of here.

23
00:01:24.180 --> 00:01:27.850
We have two options for
getting the initial state in there.

24
00:01:27.850 --> 00:01:30.827
The first option kind of the older
option is just pass it in here.

25
00:01:34.335 --> 00:01:36.440
Right and now you can see my code works.

26
00:01:36.440 --> 00:01:39.390
This is the kind of
the original way to do it.

27
00:01:39.390 --> 00:01:43.107
And one of the reasons that the create
store supports that is like that seems

28
00:01:43.107 --> 00:01:44.770
like a reasonable place to do it.

29
00:01:44.770 --> 00:01:49.312
But also default arguments weren't
standard in the JavaScript spec yet

30
00:01:49.312 --> 00:01:51.440
when Redux first came out.

31
00:01:51.440 --> 00:01:53.518
So, there wasn't an easy way to also do.

32
00:01:57.008 --> 00:02:00.362
This will be if state ends
up being undefined the first

33
00:02:00.362 --> 00:02:04.660
time we call it then it will set
it to the initial state as well.

34
00:02:04.660 --> 00:02:08.774
The reason that I like this syntax more
is because as you start to split up your

35
00:02:08.774 --> 00:02:11.080
reducers all over the place, right?

36
00:02:11.080 --> 00:02:14.828
You can then have the initial state just
being for that particular reducer when

37
00:02:14.828 --> 00:02:18.500
we see combined reducers that'll
make a little bit more sense.

38
00:02:18.500 --> 00:02:21.995
But it allow you to okay you have
each piece of initial state per slice

39
00:02:21.995 --> 00:02:23.000
the reducer.

40
00:02:23.000 --> 00:02:24.590
I think I saw another hand.

41
00:02:24.590 --> 00:02:28.610
&gt;&gt; I noticed if we have multiple
properties in the state, but

42
00:02:28.610 --> 00:02:33.105
certainly we just have value
what if we have more properties.

43
00:02:33.105 --> 00:02:36.865
&gt;&gt; So, the answer like most things is
it depends if they are all related,

44
00:02:36.865 --> 00:02:39.245
they can all be in the same reducer,
right?

45
00:02:39.245 --> 00:02:42.935
Let's say it's an array of tasks, right?

46
00:02:42.935 --> 00:02:46.955
Or it might be, are we loading,
is there what's the data.

47
00:02:46.955 --> 00:02:50.981
That might belong in a reducer, generally
speaking when we get to combine reducers

48
00:02:50.981 --> 00:02:55.110
we'll see it's better to split our
reducers out to each little common piece.

49
00:02:55.110 --> 00:02:59.857
So we might take care if it's buying
a phone number a Twilio, we might have

50
00:02:59.857 --> 00:03:04.910
one that just keeps track of the phone
numbers that are currently loaded.

51
00:03:04.910 --> 00:03:07.530
We might have another one that keeps
track of the current user, right?

52
00:03:07.530 --> 00:03:13.309
Well, we do is we could put it all in one
giant reducer and we could walk that state

53
00:03:13.309 --> 00:03:19.190
and try to manipulate it and we can see
that I can get a little tricky, right?

54
00:03:19.190 --> 00:03:25.620
And this kinda goes into one of my
recommendations about reducers.

