WEBVTT

1
00:00:00.060 --> 00:00:03.140
&gt;&gt; Mathew DesLauriers: Maybe
you had a moment to try and

2
00:00:03.140 --> 00:00:05.860
work on this exercise that we had up here.

3
00:00:05.860 --> 00:00:07.140
If not, that's okay too.

4
00:00:07.140 --> 00:00:08.710
We can just talk about it a bit.

5
00:00:08.710 --> 00:00:12.330
I can show what I came up with

6
00:00:12.330 --> 00:00:15.530
when I was experimenting with
this idea of instructions.

7
00:00:15.530 --> 00:00:17.730
And this is one of the outputs.

8
00:00:17.730 --> 00:00:20.440
The colors look a little bit
different on the projected artwork

9
00:00:20.440 --> 00:00:22.880
than they do on the final artwork.

10
00:00:22.880 --> 00:00:27.049
But sort of the same idea, and when you
project that kind of an image onto a 3D

11
00:00:27.049 --> 00:00:31.740
scene, which is not something we're gonna
get into today cuz it involves blender and

12
00:00:31.740 --> 00:00:35.806
three dimensional animation softwares
which we're not gonna get into.

13
00:00:35.806 --> 00:00:41.161
But, just know that you can take these
images that you're exporting with Cmd+S or

14
00:00:41.161 --> 00:00:43.012
Ctr+S from kernel sketch.

15
00:00:43.012 --> 00:00:45.868
And you can use those in
other forms of media, or

16
00:00:45.868 --> 00:00:51.470
you can continue to design with those and
continue to tweak those in different ways.

17
00:00:51.470 --> 00:00:52.960
Here's another export.

18
00:00:52.960 --> 00:00:56.970
And this is just using the same exact
formula, or the same exact algorithm.

19
00:00:56.970 --> 00:01:01.940
It's just trapezoids that are overlapping,
and each trapezoid is colored differently.

20
00:01:01.940 --> 00:01:05.690
Each trapezoid has a stroke, and
the stroke is the same as the background.

21
00:01:05.690 --> 00:01:09.820
So you can start to see these
disconnections between them.

22
00:01:09.820 --> 00:01:11.930
And I also did a few other small things.

23
00:01:11.930 --> 00:01:17.147
Like I used a slight opacity, instead of
filling it completely with a solid color.

24
00:01:17.147 --> 00:01:21.389
So you can start to see some of
them are almost like stained glass,

25
00:01:21.389 --> 00:01:25.184
showing the background image or
the content behind them.

26
00:01:25.184 --> 00:01:28.143
And also generally when I do this kind of,

27
00:01:28.143 --> 00:01:33.220
this artwork with 2D shapes,
I then put the image through Photoshop or

28
00:01:33.220 --> 00:01:38.510
through a similar software and
add a bit of noise, add a bit of grain.

29
00:01:38.510 --> 00:01:41.600
Just to do some final processing on it.

30
00:01:41.600 --> 00:01:46.470
I just find that it ends up sharing much
better when you share it on Instagram or

31
00:01:46.470 --> 00:01:47.600
online, or something like that.

32
00:01:48.790 --> 00:01:52.890
And there it is again
projected onto an actual wall.

33
00:01:52.890 --> 00:01:55.940
So this is kind of taken the idea
of Sol LeWitt's wall drawings,

34
00:01:55.940 --> 00:01:59.470
taking the same idea of using
instructions to create simple

35
00:02:01.040 --> 00:02:03.870
scenes that are random and generative.

36
00:02:03.870 --> 00:02:09.120
And then producing actual murals, or in
this case, virtual murals using that code.

