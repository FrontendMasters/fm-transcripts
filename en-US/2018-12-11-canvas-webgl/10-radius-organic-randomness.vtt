WEBVTT

1
00:00:00.160 --> 00:00:02.750
&gt;&gt; Mathew DesLauriers: So if I go back,
I'll leave this code up in a second.

2
00:00:02.750 --> 00:00:05.000
I just want to go back to this image.

3
00:00:05.000 --> 00:00:08.660
So we're already pretty close to this
we can get to this exact image just by

4
00:00:08.660 --> 00:00:12.585
changing the background,
changing the size of the circles using,

5
00:00:12.585 --> 00:00:17.170
fill instead of stroke,
changing the fill style and so on.

6
00:00:17.170 --> 00:00:20.910
So the next thing we want to do is maybe
create something with a bit more color

7
00:00:20.910 --> 00:00:22.160
a bit more life.

8
00:00:22.160 --> 00:00:25.600
As well as a bit more randomness in
the way that the circles are sized.

9
00:00:26.610 --> 00:00:29.390
So if we go back to our code,

10
00:00:31.340 --> 00:00:36.790
one thing that I like to do is to

11
00:00:36.790 --> 00:00:41.170
set up my data structure and
then render the data structure later.

12
00:00:41.170 --> 00:00:43.810
And so every time I render it,
it's always the same.

13
00:00:43.810 --> 00:00:46.800
And so that's kind of what we're
doing with this UV coordinates.

14
00:00:46.800 --> 00:00:51.086
But now what we want to do is we wanna
give each of these circles an individual

15
00:00:51.086 --> 00:00:51.700
radius.

16
00:00:51.700 --> 00:00:56.870
Rather than all of them using the same
radius of five, we want them to have

17
00:00:56.870 --> 00:01:02.970
different radius, radii or, whatever,
different radius values for each circle.

18
00:01:02.970 --> 00:01:08.500
And so to do that, instead of passing a
coordinate here, just like an array, we're

19
00:01:08.500 --> 00:01:14.200
going to store this array as position, and
we're going to store it within an object.

20
00:01:14.200 --> 00:01:19.880
And this object is going to hold the data
for each individual cell on our grid.

21
00:01:19.880 --> 00:01:22.780
And so,
I'm going to say position is equal, or is.

22
00:01:22.780 --> 00:01:28.160
Assigned to the UV coordinate and
then let's say radius

23
00:01:28.160 --> 00:01:33.890
is assigned to some value and
here is where we can say.

24
00:01:33.890 --> 00:01:39.530
We give a random.value to each radius and
all of a sudden

25
00:01:39.530 --> 00:01:44.400
if we save we're going to get an error and
that's because if we scroll down.

26
00:01:44.400 --> 00:01:48.500
So just so you can see,
it's an object with radius and position.

27
00:01:48.500 --> 00:01:52.640
But if we scroll down, we're still using
this same code, where we're de-structuring

28
00:01:52.640 --> 00:01:56.740
it, expecting it just to be a coordinate,
but it's no longer a coordinate.

29
00:01:56.740 --> 00:02:01.590
So we can instead call this data, and

30
00:02:01.590 --> 00:02:07.290
then I'm gonna de-structure
the data to a position and

31
00:02:07.290 --> 00:02:09.990
radius so that's how that looks.

32
00:02:11.000 --> 00:02:13.470
And then I'm still going to
get an error if I save and

33
00:02:13.470 --> 00:02:16.850
that's cuz UNV isn't defined here.

34
00:02:16.850 --> 00:02:21.082
So I have to then get the UV
coordinate from position so

35
00:02:21.082 --> 00:02:23.632
I can de-structure like this.

36
00:02:25.232 --> 00:02:28.137
&gt;&gt; Mathew DesLauriers: And
so that's how that looks.

37
00:02:28.137 --> 00:02:31.896
And hopefully you should get back to this
point where things are running again and

38
00:02:31.896 --> 00:02:34.830
the code is working and
you're not getting an error.

39
00:02:34.830 --> 00:02:39.207
If you're getting a white screen,
just open the console, check the console,

40
00:02:39.207 --> 00:02:41.637
there is maybe just
an error in the console.

41
00:02:41.637 --> 00:02:44.648
And everything is still
the same radius and

42
00:02:44.648 --> 00:02:48.996
that's because we're still using
a radius value of five, so

43
00:02:48.996 --> 00:02:54.096
let's use the radius that we specified
here, and what we're gonna do is

44
00:02:54.096 --> 00:02:59.385
we're gonna make this radius relative
to the width of the page let's say.

45
00:02:59.385 --> 00:03:02.860
So we're gonna do radius times width.

46
00:03:02.860 --> 00:03:06.930
And it's gonna be very huge because
we're using five times width and

47
00:03:06.930 --> 00:03:08.600
that's gonna be a big radius.

48
00:03:08.600 --> 00:03:10.470
Or one times radius.

49
00:03:10.470 --> 00:03:16.182
So here instead of using random.value
we're gonna use random.value times,

50
00:03:16.182 --> 00:03:19.430
let's say 0.01 or something like that.

51
00:03:19.430 --> 00:03:27.030
Or 0.02, some value that's small
0.005 even something like that.

52
00:03:27.030 --> 00:03:31.390
So that's what I'm doing here is I'm
just using very small radius value and

53
00:03:31.390 --> 00:03:32.080
it's random.

54
00:03:32.080 --> 00:03:36.673
So each cell is gonna have
a different size to it.

55
00:03:36.673 --> 00:03:39.420
And then down here we're just
saying the radius times with.

56
00:03:39.420 --> 00:03:41.350
And the reason we're using
radius times with is just so

57
00:03:41.350 --> 00:03:46.240
that different screen sizes, it'll be
relative to the different screen size.

58
00:03:46.240 --> 00:03:49.180
So if we ever end up changing
the resolution of this canvas,

59
00:03:49.180 --> 00:03:51.380
it'll still look relatively the same.

60
00:03:51.380 --> 00:03:54.170
And then the other thing I'm gonna do
is I'm gonna use fill instead of using

61
00:03:54.170 --> 00:03:58.700
stroke, cuz I just like fill
in this kind of situation.

62
00:03:58.700 --> 00:04:03.930
And so remember when you fill, before
you fill you have to set a fill style.

63
00:04:03.930 --> 00:04:06.540
So that's what we're doing here.

64
00:04:06.540 --> 00:04:11.730
So we're getting closer to this image
that we want, but we're still not there.

65
00:04:11.730 --> 00:04:13.760
So I'm just tweaking some parameters here.

66
00:04:13.760 --> 00:04:14.390
But already,

67
00:04:14.390 --> 00:04:18.400
we're getting like something kind of
cool by just tweaking these numbers.

68
00:04:18.400 --> 00:04:20.810
We're getting some sort of
randomness in some sort of grid.

69
00:04:22.190 --> 00:04:25.070
It's kind of looking a little
bit closer to generative art.

70
00:04:25.070 --> 00:04:27.700
That's one of the fun things
about creative coding is that

71
00:04:27.700 --> 00:04:31.570
you can get really lost in just really
tweaking numbers and changing things and

72
00:04:31.570 --> 00:04:34.490
saving things and then changing things
again and then saving things, and

73
00:04:34.490 --> 00:04:36.570
that's something you should
definitely be open to.

74
00:04:36.570 --> 00:04:37.960
That's a really nice way of working.

75
00:04:39.230 --> 00:04:44.970
So like I was saying,
we wanna get a bit more of the organic

76
00:04:44.970 --> 00:04:50.250
randomness cuz right now everything
still feels very grid like, and

77
00:04:50.250 --> 00:04:54.710
one of the reasons why potentially
is that when we use random.value,

78
00:04:54.710 --> 00:04:57.990
we end up with this uniform
distribution of numbers.

79
00:04:57.990 --> 00:05:00.323
We end up with the equal number of.

80
00:05:00.323 --> 00:05:05.360
Of 0.2s and 0.6s if we were to call
this function millions of times.

81
00:05:05.360 --> 00:05:08.520
And so we're gonna use something
else called random.gaussian.

82
00:05:08.520 --> 00:05:13.185
And that's gonna produce
a much more interesting, and

83
00:05:13.185 --> 00:05:17.950
a much more maybe organic
distribution of numbers.

84
00:05:17.950 --> 00:05:22.850
And the distribution of numbers is gonna
be between some where like negative 3.5

85
00:05:22.850 --> 00:05:24.213
and positive 3.5.

86
00:05:24.213 --> 00:05:27.310
And so actually that's gonna
cause an error in our code, and

87
00:05:27.310 --> 00:05:30.490
that's because we can't
have a negative radius.

88
00:05:30.490 --> 00:05:35.040
So we have to just either make
this an absolute value, so

89
00:05:35.040 --> 00:05:38.260
just by wrapping it in Math.abs, or

90
00:05:38.260 --> 00:05:44.060
you can make it Math.max 0.

91
00:05:44.060 --> 00:05:46.410
And that's a different way
of approaching that as well.

92
00:05:46.410 --> 00:05:52.544
Or you can also try and
use a different sort of starting point for

93
00:05:52.544 --> 00:05:57.637
your circle size, so
you could say something like,

94
00:05:57.637 --> 00:06:05.090
my circle size is 0.5 or lets say 0.1 and
then plus random.gaussian.

95
00:06:05.090 --> 00:06:08.050
So that means it's gonna be,
all these circles are 0.1, but

96
00:06:08.050 --> 00:06:13.660
then offset them by some value positive or
some value negative.

97
00:06:14.660 --> 00:06:19.582
And again we're multiplying this
gaussian value by 0.01 just because

98
00:06:19.582 --> 00:06:24.673
without that we're gonna end up with
huge circles and the screen will be red.

