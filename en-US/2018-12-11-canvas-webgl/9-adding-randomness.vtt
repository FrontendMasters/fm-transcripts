WEBVTT

1
00:00:00.240 --> 00:00:03.840
&gt;&gt; Mathew DesLauriers: Okay, so
one thing I mentioned already for

2
00:00:03.840 --> 00:00:08.330
you guys is if you're lost at any point
and you're feeling like you're falling

3
00:00:08.330 --> 00:00:14.390
behind in the code, then open up the repo,
the workshop generative art repo, and you

4
00:00:14.390 --> 00:00:19.080
go into the source folder and it's split
up into the different sections of today.

5
00:00:19.080 --> 00:00:23.560
We're gonna be doing 2D, and
I've tried to piecewise split it up into

6
00:00:23.560 --> 00:00:27.740
some of the different chunks of code
that we're gonna be working with.

7
00:00:27.740 --> 00:00:30.530
Right now we're still on grid margin, and

8
00:00:30.530 --> 00:00:33.090
we're eventually gonna be
working our way through those.

9
00:00:33.090 --> 00:00:37.130
But that's just in case you're lost,
hopefully don't look too far ahead because

10
00:00:37.130 --> 00:00:39.290
it should be a bit more of a surprise,
but we'll see.

11
00:00:40.640 --> 00:00:41.700
So yeah, here we are.

12
00:00:41.700 --> 00:00:45.820
We have a grid of circles,
pretty basic so far.

13
00:00:45.820 --> 00:00:48.860
But already with this code
we can start to do some

14
00:00:48.860 --> 00:00:51.580
tweaks to it to start to get
some more interesting results.

15
00:00:51.580 --> 00:00:53.810
So for example, instead of doing 5 by 5,

16
00:00:53.810 --> 00:00:58.910
we can do 20 by 20 and
all of a sudden it's a big black mass.

17
00:00:58.910 --> 00:01:03.560
But if we reduce the size of each of
these circles after we set the count

18
00:01:03.560 --> 00:01:07.690
to a higher number, we set the radius
of the circle, and that's this here.

19
00:01:07.690 --> 00:01:12.810
Let's say we set it to 20 or
something like that, or even lower, 10.

20
00:01:12.810 --> 00:01:15.900
You can even do lower like five pixels.

21
00:01:15.900 --> 00:01:20.439
And then we can set the line width to
a smaller value as well, maybe 10 or 20.

22
00:01:22.459 --> 00:01:25.813
&gt;&gt; Mathew DesLauriers: So if I'm using
a radius of 5, line width of 20,

23
00:01:25.813 --> 00:01:29.635
I can start to see a lot more
of these cells here in the grid,

24
00:01:29.635 --> 00:01:33.080
maybe use a higher grid count,
maybe as far as 40.

25
00:01:33.080 --> 00:01:37.700
And then we can also start to
introduce a bit of randomness.

26
00:01:37.700 --> 00:01:42.520
So one way of doing that is once we
have our grid cells, we can just

27
00:01:42.520 --> 00:01:46.890
randomly take some of them out, and
we can do that with the filter function.

28
00:01:46.890 --> 00:01:53.340
So after we create our grid, we create
a filter function that looks like this.

29
00:01:53.340 --> 00:01:58.226
And the function is gonna say,
if Math.random is greater than five

30
00:01:58.226 --> 00:02:02.050
return true,
if it's less than five return false.

31
00:02:02.050 --> 00:02:07.520
And that's just gonna end up taking
away some of the grid cells at random.

32
00:02:07.520 --> 00:02:10.840
So we're gonna be getting a little bit
closer to this idea of generative art and

33
00:02:10.840 --> 00:02:14.781
this idea of randomness and
emergent systems and rule based systems.

34
00:02:15.860 --> 00:02:21.390
And every time we run reload the page,
or every time we save our file,

35
00:02:21.390 --> 00:02:24.948
we're gonna end up with
a different set of randomness.

36
00:02:24.948 --> 00:02:31.688
And so Math.random is pretty basic,
it gives us back a value between zero and

37
00:02:31.688 --> 00:02:38.134
one, where one is actually exclusive,
I don't think one ever appears.

38
00:02:38.134 --> 00:02:42.937
But one sort of limitation of this if you
wanted to have a random number between 10

39
00:02:42.937 --> 00:02:47.680
and 30 or something like that,
you have to create your own function.

40
00:02:47.680 --> 00:02:51.550
And another limitation,
especially when you're working with,

41
00:02:51.550 --> 00:02:55.370
whether it's generative art or
any creative project that's using code,

42
00:02:55.370 --> 00:02:58.670
sometimes your randomness is
just a bit out of control.

43
00:02:58.670 --> 00:03:03.339
And sometimes you'll have a really good
output and then you'll show the client and

44
00:03:03.339 --> 00:03:08.023
the client will use a different, they'll
reload the page or something like that.

45
00:03:08.023 --> 00:03:10.062
And the random numbers will be different,
and

46
00:03:10.062 --> 00:03:12.800
it might not look like
the client wanted it to look.

47
00:03:12.800 --> 00:03:17.180
So what you can actually do with random
numbers is you can have a deterministic

48
00:03:17.180 --> 00:03:22.060
random so that every time we reload
the page it's that same set of randomness.

49
00:03:22.060 --> 00:03:24.292
And to do that we´re gonna install, or
not install we've already installed,

50
00:03:24.292 --> 00:03:25.571
we´re gonna bring in another utility here.

51
00:03:25.571 --> 00:03:32.950
We're gonna bring in the random utility
from the same Canvas sketch detail.

52
00:03:34.340 --> 00:03:38.020
So here we're gonna bring
in the random utility and

53
00:03:38.020 --> 00:03:42.870
it looks like this,
canvas-sketch-util/random.

54
00:03:42.870 --> 00:03:46.360
And this module you can look at the docs.

55
00:03:48.950 --> 00:03:53.674
Again, it's a link here,
canvas-sketch-util, and you'll see this

56
00:03:53.674 --> 00:03:59.096
module has a lot of different utilities
around pseudo-random number generation.

57
00:03:59.096 --> 00:04:02.122
So if you're familiar with Math.random,

58
00:04:02.122 --> 00:04:05.818
this is a super powered
version of that times 100.

59
00:04:05.818 --> 00:04:12.854
And it includes, this function is
basically the equivalent of Math.random,

60
00:04:12.854 --> 00:04:18.323
random.value, that gives you
number between zero and one.

61
00:04:18.323 --> 00:04:22.662
But there's a lot of other things that
we're gonna be getting into here, like

62
00:04:22.662 --> 00:04:27.000
range is a function where it gives you
back a value between this function here,

63
00:04:27.000 --> 00:04:29.260
between minimum and maximum.

64
00:04:29.260 --> 00:04:32.410
Range floor is really useful for
index values,

65
00:04:32.410 --> 00:04:35.566
like an integer value between zero and
six, or something like that.

66
00:04:36.970 --> 00:04:39.070
And so we're just gonna use,

67
00:04:39.070 --> 00:04:43.694
instead of using Math.random
we're gonna use random.value.

68
00:04:43.694 --> 00:04:47.694
And that's the same thing,
it's just using the random module instead.

69
00:04:47.694 --> 00:04:51.273
And now because we're
using the random module,

70
00:04:51.273 --> 00:04:56.320
we can set a deterministic seed
before we start using the module.

71
00:04:56.320 --> 00:04:58.970
And that looks like this,
random.setSeed and

72
00:04:58.970 --> 00:05:01.420
then you pass in any number you want here.

73
00:05:01.420 --> 00:05:04.580
It can be one or ten,
it can be a string as well.

74
00:05:04.580 --> 00:05:08.920
It's just some unique identifier for
this random number generator.

75
00:05:08.920 --> 00:05:12.760
And so let's say I used 512 and
I just keep it at 512.

76
00:05:12.760 --> 00:05:15.730
You end up with this
deterministic randomness so

77
00:05:15.730 --> 00:05:20.800
that every time I reload the page it
will give me the same exact result.

78
00:05:20.800 --> 00:05:24.400
So that's really useful for generative
art, but it's also really useful for

79
00:05:24.400 --> 00:05:25.870
creative coding in general.

80
00:05:25.870 --> 00:05:29.930
Like let's say you have
a web socket server, or

81
00:05:29.930 --> 00:05:33.880
something where you're connecting physical
installation with a digital screen,

82
00:05:33.880 --> 00:05:36.440
and they're both using randomness.

83
00:05:36.440 --> 00:05:38.600
You want those random numbers to align.

84
00:05:38.600 --> 00:05:43.702
And so you might wanna use a deterministic
seed where both the physical installation

85
00:05:43.702 --> 00:05:48.340
and the screen, or maybe the multiple
screens, they all use the same seed so

86
00:05:48.340 --> 00:05:51.360
that they're all producing the same string
of random numbers one after another.

87
00:05:52.700 --> 00:05:55.020
And so that's randomness in a nutshell.

88
00:05:55.020 --> 00:05:58.240
And we're gonna be getting into
some of these other functions.

89
00:05:58.240 --> 00:06:04.200
Cuz a lot of the work that I do is just
really playing on random values and

90
00:06:04.200 --> 00:06:05.890
Gaussian distributions and
stuff like that.

91
00:06:05.890 --> 00:06:09.836
So you'll start to see the pattern
that I like to use this module a lot.

