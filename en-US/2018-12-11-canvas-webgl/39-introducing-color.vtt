WEBVTT

1
00:00:00.000 --> 00:00:02.283
&gt;&gt; Mathew DesLauriers: And
then the next thing I'm gonna do is,

2
00:00:02.283 --> 00:00:03.971
I'm gonna introduce color.

3
00:00:03.971 --> 00:00:08.359
And we can introduce color in the same
way we've been doing before, but

4
00:00:08.359 --> 00:00:12.469
we kinda wanna get it a bit more
advanced just with another module.

5
00:00:12.469 --> 00:00:18.624
And so we're gonna require a module
called glsl hsl to our gb.

6
00:00:18.624 --> 00:00:23.604
And so, the syntax, let's write this out,

7
00:00:23.604 --> 00:00:27.797
hsl2rgb and it's the same as above,

8
00:00:27.797 --> 00:00:32.135
except the module itself is just this.

9
00:00:32.135 --> 00:00:33.895
We don't need to do any slashes.

10
00:00:33.895 --> 00:00:38.718
And, you're gonna notice an error,
that's cuz we have to install the module.

11
00:00:38.718 --> 00:00:41.734
So if I search on npm,

12
00:00:41.734 --> 00:00:46.765
ust googling npm glsl-hsl2rgb,

13
00:00:46.765 --> 00:00:50.295
you'll see the module.

14
00:00:50.295 --> 00:00:52.592
I'll leave that code there.

15
00:00:52.592 --> 00:00:55.517
So this is the code that we need here.

16
00:00:55.517 --> 00:01:02.889
And to fix that error,
we have to just npm install,

17
00:01:02.889 --> 00:01:07.011
or npmi, glsl-hsl2rgb.

18
00:01:07.011 --> 00:01:11.039
And that's the command,
we run that command.

19
00:01:11.039 --> 00:01:15.663
And now lastly, we have these these
two utilities, we're using this one,

20
00:01:15.663 --> 00:01:18.130
we haven't started using this one yet.

21
00:01:18.130 --> 00:01:22.189
And what we wanna do using
this this noise value,

22
00:01:22.189 --> 00:01:25.764
we wanna try and create different colors.

23
00:01:25.764 --> 00:01:29.607
And so what we'll do is we'll manipulate
the hue, cuz h itself stand for

24
00:01:29.607 --> 00:01:31.127
hue saturation lightness.

25
00:01:31.127 --> 00:01:34.267
And so we'll manipulate the hugh
based on this noise I'll do.

26
00:01:34.267 --> 00:01:39.008
So we're gonna create a new color, and

27
00:01:39.008 --> 00:01:42.744
we will use this hsl2rgb, and

28
00:01:42.744 --> 00:01:47.643
we're gonna give it three parameters.

29
00:01:47.643 --> 00:01:50.177
The first parameter is between 0 and 1.

30
00:01:50.177 --> 00:01:54.281
And it's hue, so we can just set
them all to .5 for now, just so

31
00:01:54.281 --> 00:01:56.870
we can visualize what it'll look like.

32
00:01:56.870 --> 00:02:01.640
Once we've set that, we actually

33
00:02:01.640 --> 00:02:06.249
have to change the output color.

34
00:02:06.249 --> 00:02:09.399
And generally, what I like to do
before I get too far into the code,

35
00:02:09.399 --> 00:02:10.595
is just test things out.

36
00:02:10.595 --> 00:02:14.899
There's no way to console log in a shader,
and there's no way to use debugger.

37
00:02:14.899 --> 00:02:19.090
So you have to test by actually
printing a colors as pixels.

38
00:02:19.090 --> 00:02:21.872
So that's what we're doing here,
just making sure it works.

39
00:02:21.872 --> 00:02:26.682
By setting this color somewhere between
0 and 1 for the first parameter,

40
00:02:26.682 --> 00:02:28.374
we're changing the hue.

41
00:02:28.374 --> 00:02:32.597
Using 0.5 for
this parameter is the saturation.

42
00:02:32.597 --> 00:02:35.291
Using 0.5 for
this parameter is the lightness.

43
00:02:35.291 --> 00:02:39.698
And when it's 50% lightness and
saturation, it's a nice pastel color.

44
00:02:39.698 --> 00:02:43.327
So if we just change this number here,
the first parameter,

45
00:02:43.327 --> 00:02:46.046
we're gonna end up with different results.

46
00:02:46.046 --> 00:02:51.535
So, you can try putting in n, you're
going to get some wonky, disco color.

47
00:02:51.535 --> 00:02:55.064
But we wanna make it a bit more
polished and a bit more clean.

48
00:02:55.064 --> 00:02:59.986
And so, one thing to remember is that
noise values go from negative one to one.

49
00:02:59.986 --> 00:03:03.542
So we have to turn this into,
zeroo to one space.

50
00:03:09.632 --> 00:03:14.039
&gt;&gt; Mathew DesLauriers: And then the next
thing we can do, or instead of doing that,

51
00:03:14.039 --> 00:03:15.636
we'll just do this.

52
00:03:15.636 --> 00:03:18.181
We'll leave it at n for now, and

53
00:03:18.181 --> 00:03:22.720
we'll choose a specific hue
that we want as our base hue.

54
00:03:22.720 --> 00:03:30.227
So we'll say 0.2, let's say,
which is 20% of 360 degrees of a hue.

55
00:03:30.227 --> 00:03:33.280
I don't know what color that is but
we'll find out in a second.

56
00:03:33.280 --> 00:03:37.001
And then, we're gonna to add n, but
we're going to make n very small.

57
00:03:37.001 --> 00:03:41.070
So we're going to add just a little
bit of n, maybe even like,

58
00:03:41.070 --> 00:03:43.195
0.2 or 0.5 or something.

59
00:03:43.195 --> 00:03:46.852
And what you're gonna start to
see as you change these numbers,

60
00:03:46.852 --> 00:03:49.233
is you're gonna start to see the larger.

61
00:03:49.233 --> 00:03:54.814
This value is the larger, our offset is,
the more the hue spectrum is gonna change.

62
00:03:54.814 --> 00:03:57.412
It's gonna become more of a rainbow and
disco/ And

63
00:03:57.412 --> 00:04:00.381
the smaller it is the more it's
just gonna be a single hue.

64
00:04:00.381 --> 00:04:02.148
So we can use 0.2 for now,

65
00:04:02.148 --> 00:04:05.987
and then we can change this value
to be a different base value.

66
00:04:05.987 --> 00:04:12.517
So if we use something higher,
it's gonna be more blue, or more purple.

67
00:04:12.517 --> 00:04:18.699
Maybe a bit closer to this reference that
we are looking at with the color mask.

68
00:04:18.699 --> 00:04:22.122
And at this point,
we're pretty close, I think,

69
00:04:22.122 --> 00:04:25.320
to getting these kind of
images that we wanted.

70
00:04:25.320 --> 00:04:29.402
But the only thing we have to do
now is bring back our masking.

71
00:04:29.402 --> 00:04:32.623
So we're gonna do that with
the code that I commented out.

72
00:04:35.748 --> 00:04:37.417
&gt;&gt; Mathew DesLauriers: And
this is just the Alpha.

73
00:04:42.163 --> 00:04:43.653
&gt;&gt; Mathew DesLauriers: So
actually, right now,

74
00:04:43.653 --> 00:04:48.125
I didn't intend to make it this soft but,
because we're using smooth step and

75
00:04:48.125 --> 00:04:51.378
because our values between
a smooth step are very large,

76
00:04:51.378 --> 00:04:55.813
it's creating this really nice,
soft image which is actually kind of cool.

77
00:04:55.813 --> 00:04:58.077
But to make it a bit
more like a reference,

78
00:04:58.077 --> 00:05:00.880
we need to use values that
are very close together.

79
00:05:00.880 --> 00:05:06.026
So for example, 0.25 and 0.245,

80
00:05:06.026 --> 00:05:13.542
or 0.235, something that's
close to the first trailer.

81
00:05:13.542 --> 00:05:18.005
And the last thing we can do is just
continue to tweak some of these settings,

82
00:05:18.005 --> 00:05:22.988
so I can increase the frequency of noise,
or decrease the frequency, we can maybe.

83
00:05:22.988 --> 00:05:26.406
Reduce the time so
by multiplying time by some low number,

84
00:05:26.406 --> 00:05:30.889
we slow down this animation, or bulk
by multiplying it by some high number.

85
00:05:30.889 --> 00:05:33.225
We speed it up, and make it more frequent.

86
00:05:33.225 --> 00:05:36.505
Those are just things to keep in mind.

87
00:05:36.505 --> 00:05:40.653
And now we're pretty close to this sort of
graphic that we were looking at earlier,

88
00:05:40.653 --> 00:05:43.160
and trying to recreate
that encode with shaders.

