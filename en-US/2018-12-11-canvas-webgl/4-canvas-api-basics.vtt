WEBVTT

1
00:00:00.420 --> 00:00:05.050
&gt;&gt; Mathew DesLauriers: So
just another couple API basics would be

2
00:00:05.050 --> 00:00:06.990
let's learn about circles.

3
00:00:06.990 --> 00:00:07.820
Once we get the basics,

4
00:00:07.820 --> 00:00:12.200
we can start to apply those but
first I just wanna sort of show.

5
00:00:12.200 --> 00:00:12.919
How do we draw circles?

6
00:00:12.919 --> 00:00:15.360
How do we draw lines
in that kind of stuff?

7
00:00:15.360 --> 00:00:20.050
So if you go through the docks,
you'll see this, this is here.

8
00:00:20.050 --> 00:00:21.520
I'll just open this a bit wider.

9
00:00:24.440 --> 00:00:29.020
So in the Canvas API docs, you can go to
reference, CanvasRendereingContext2D,

10
00:00:29.020 --> 00:00:32.690
and then they have a lot
of different examples here.

11
00:00:32.690 --> 00:00:37.670
And what we're gonna be looking for is
a method called arc, and it's under paths.

12
00:00:39.030 --> 00:00:41.800
This is the method we're
gonna be looking for, arc.

13
00:00:41.800 --> 00:00:44.170
And this is how we draw
circles from the Canvas API.

14
00:00:45.230 --> 00:00:50.070
So if I go back to my sketch, the way it

15
00:00:50.070 --> 00:00:52.790
works is you specify
the beginning of the path.

16
00:00:52.790 --> 00:00:59.650
So you say, okay, I'm gonna start
rendering a path, and when you do

17
00:00:59.650 --> 00:01:04.410
this begin path then everything after it
is gonna be part of this path operation.

18
00:01:04.410 --> 00:01:08.120
And we're going to just draw a single
circle in the center of the screen,

19
00:01:08.120 --> 00:01:11.580
just to test things out,
using the arc function.

20
00:01:11.580 --> 00:01:13.850
And the parameters are x and
y coordinates,

21
00:01:13.850 --> 00:01:16.450
the center of the circle
that we're gonna draw.

22
00:01:16.450 --> 00:01:18.010
And the best way to think of this is like,

23
00:01:18.010 --> 00:01:21.740
if you had one of those old school
compasses that swings around the circle.

24
00:01:21.740 --> 00:01:23.850
What's the center of that compass?

25
00:01:23.850 --> 00:01:27.418
We can just say width divided by 2,
height divided by 2.

26
00:01:27.418 --> 00:01:31.780
The radius of the circle, we can just
say 200 or something, whatever you want.

27
00:01:32.810 --> 00:01:34.580
Then this is the start angle and
the end angle.

28
00:01:34.580 --> 00:01:37.210
So how far around our circle we go?

29
00:01:37.210 --> 00:01:38.660
So start would be 0,

30
00:01:38.660 --> 00:01:43.520
and the end angle would be 2 pi
which means full circle in radians.

31
00:01:43.520 --> 00:01:47.550
Cuz these angles are in radians,
not in degrees.

32
00:01:47.550 --> 00:01:52.130
And so pi would be half a circle,
and 2 pi would be a full circle.

33
00:01:52.130 --> 00:01:55.080
And then the last parameter, just true or

34
00:01:55.080 --> 00:01:59.780
false whether we're swinging around in
clockwise or counterclockwise, but because

35
00:01:59.780 --> 00:02:02.510
we're gonna be doing a full circle, it
doesn't matter so we can just say false.

36
00:02:05.600 --> 00:02:10.460
And then lastly, once we specify the path
then we fill it or we stroke it.

37
00:02:10.460 --> 00:02:12.356
So fill would be like this.

38
00:02:12.356 --> 00:02:16.606
You do .fill and
you're not gonna see anything yet.

39
00:02:16.606 --> 00:02:20.350
And that's because our fill
style is still set to orange.

40
00:02:20.350 --> 00:02:23.850
So, like I was saying it's
a state sort of based API, and so

41
00:02:23.850 --> 00:02:29.290
we have to change this fill style from
orange to something else before we fill.

42
00:02:29.290 --> 00:02:30.670
So I'm just copy, pasting.

43
00:02:32.060 --> 00:02:33.230
Just gonna do red.

44
00:02:33.230 --> 00:02:37.857
So now we have a red circle in
the middle of our 2D canvas.

45
00:02:37.857 --> 00:02:41.510
And we can start tweaking these numbers,
you can make them bigger,

46
00:02:41.510 --> 00:02:44.150
and start to get a sense
of what these numbers do.

47
00:02:44.150 --> 00:02:48.594
If you've never used this before then
you can move things around and so on.

48
00:02:48.594 --> 00:02:51.660
You can also try changing 2 pi to 1 pi.

49
00:02:51.660 --> 00:02:54.710
Then all of a sudden you'll
have a semicircle, and

50
00:02:54.710 --> 00:02:58.430
this'll be kinda cool later on when we're
doing our own experimental art stuff.

51
00:02:59.980 --> 00:03:02.620
And then, the next thing to
know is stroking, so we so

52
00:03:02.620 --> 00:03:04.090
far we're just filling shapes.

53
00:03:04.090 --> 00:03:07.680
But there's another command,
another function called stroke.

54
00:03:08.740 --> 00:03:14.220
And stroke will take whatever path you
have before it, and it's gonna outline it.

55
00:03:14.220 --> 00:03:16.591
And we can't really see it on the screen,
so

56
00:03:16.591 --> 00:03:19.020
that's because this stroke is very small.

57
00:03:19.020 --> 00:03:22.670
By default,
it's a very small one pixel black stroke.

58
00:03:22.670 --> 00:03:24.650
So we're gonna make it thicker.

59
00:03:24.650 --> 00:03:28.960
And remember these parameters that
we're gonna be changing have to be set

60
00:03:28.960 --> 00:03:34.250
before we do the stroke function,
otherwise it's not gonna really work.

61
00:03:34.250 --> 00:03:35.830
So we just do lineWidth.

62
00:03:35.830 --> 00:03:39.740
Let's say the lineWidth of
our stroke is gonna be 20.

63
00:03:39.740 --> 00:03:45.940
And let's say the, yeah, lineWidth is
20 or 40, or whatever, something thick.

64
00:03:46.980 --> 00:03:48.630
And you'll notice it's black, and

65
00:03:48.630 --> 00:03:52.990
that's because fill style is
different than stroke style.

66
00:03:52.990 --> 00:03:56.800
So here, before we stroke,

67
00:03:56.800 --> 00:04:03.080
we can change the color of the stroke by
doing stroke style to something else.

68
00:04:03.080 --> 00:04:07.460
So, this is kind of,
this is the API basics.

69
00:04:07.460 --> 00:04:11.650
And if you're new to the Canvas API,
you can sort of copy this, and

70
00:04:11.650 --> 00:04:13.990
maybe paste it somewhere else and
just use that as reference.

71
00:04:13.990 --> 00:04:17.049
I've also included this
def in the cheat sheet.

72
00:04:18.270 --> 00:04:20.610
Here it is in the cheat sheet and
you can look through the cheat sheet and

73
00:04:20.610 --> 00:04:22.340
there's a few things like circles,

74
00:04:22.340 --> 00:04:25.660
and that kind of stuff in the cheat
sheet just to remind you.

75
00:04:25.660 --> 00:04:28.959
But if you're already familiar with
the API, you might be thinking, okay,

76
00:04:28.959 --> 00:04:29.841
this is easy stuff.

77
00:04:29.841 --> 00:04:31.495
So don't worry.
We're gonna make it a bit

78
00:04:31.495 --> 00:04:32.444
more complicated,

79
00:04:32.444 --> 00:04:35.700
but I just wanted to make sure
everyone's on the same page with that.

