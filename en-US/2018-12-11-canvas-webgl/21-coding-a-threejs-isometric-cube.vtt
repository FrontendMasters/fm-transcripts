WEBVTT

1
00:00:01.226 --> 00:00:04.050
&gt;&gt; Mathew DesLauriers: So I just wanted
to get us started which a simple scene.

2
00:00:04.050 --> 00:00:08.160
Just like a cube type scene,
just to explain some of the basics and

3
00:00:08.160 --> 00:00:10.797
then we're gonna start to go from there.

4
00:00:10.797 --> 00:00:14.828
Just like we did in the first part of this
workshop, we're gonna start small and

5
00:00:14.828 --> 00:00:18.268
we're gonna iterate and try and
iteratively improve our outputs.

6
00:00:22.801 --> 00:00:27.073
&gt;&gt; Mathew DesLauriers: So I'm just gonna
go back to my desktop in my terminal, and

7
00:00:27.073 --> 00:00:31.360
I'll go back to my folder where
I saved my sketches so far.

8
00:00:32.830 --> 00:00:35.120
So I'll just show that, so
we have our sketch from the morning,

9
00:00:35.120 --> 00:00:36.720
I'm gonna keep that.

10
00:00:36.720 --> 00:00:39.673
I don't wanna lose our
sketch in the morning, or

11
00:00:39.673 --> 00:00:41.771
in the first part of the workshop.

12
00:00:41.771 --> 00:00:46.083
So I'm gonna create a new sketch and
let's call it Web GL,

13
00:00:46.083 --> 00:00:50.852
you can call it whatever you like but
I'm gonna call mine Web GL.

14
00:00:50.852 --> 00:00:56.131
And so, when I'm in my folder here in the
terminal, again we just do canvas-sketch.

15
00:00:56.131 --> 00:00:59.463
And we can call our file whatever we want,
and

16
00:00:59.463 --> 00:01:04.230
then in this case I'm calling it webgl.js,
JavaScript file.

17
00:01:04.230 --> 00:01:06.270
And then we do new --new, and

18
00:01:06.270 --> 00:01:11.531
then other thing we're gonna do here is
instead of starting with a 2D art work or

19
00:01:11.531 --> 00:01:15.635
2D sketch, we're gonna start
with a new three.js sketch.

20
00:01:15.635 --> 00:01:20.941
So, we do --template = 3, just like that,

21
00:01:20.941 --> 00:01:25.850
and what this will do
is it's gonna scaffold

22
00:01:25.850 --> 00:01:29.710
out a three.js sort of template.

23
00:01:30.740 --> 00:01:35.720
That is, instead of just using 2D,
it's actually using three.js,

24
00:01:35.720 --> 00:01:39.730
and it will install that,
and it'll start running.

25
00:01:39.730 --> 00:01:44.757
And if we copy this link, or
if we just open local host in the browser,

26
00:01:44.757 --> 00:01:47.098
so you can localhost 9966,

27
00:01:47.098 --> 00:01:52.758
just make sure that the link that's
here is the same port number, 9966.

28
00:01:52.758 --> 00:01:58.193
If you have it open in another terminal
it might be 9967 just be mindful of that.

29
00:01:58.193 --> 00:02:02.114
And also, one thing I didn't
mention earlier on today is that,

30
00:02:02.114 --> 00:02:06.835
if you're making an experience that you
wanna test on desktop and on mobile,

31
00:02:06.835 --> 00:02:10.269
you just need to copy this link,
this local IP address.

32
00:02:10.269 --> 00:02:14.987
As long as your mobile is on
the same wireless as your desktop,

33
00:02:14.987 --> 00:02:21.004
you can view the same scene, in the same
sort of setup, on your mobile device.

34
00:02:21.004 --> 00:02:24.080
And so here we go, I've opened it up and

35
00:02:24.080 --> 00:02:29.044
now I'm just gonna open my terminal,
or sorry my code editor.

36
00:02:29.044 --> 00:02:31.228
I'm just gonna open this
file that we just created.

37
00:02:36.363 --> 00:02:40.125
&gt;&gt; Mathew DesLauriers: So I'll give
you a second to just open that, and

38
00:02:40.125 --> 00:02:45.865
you'll see on the browser it's now
working with a full screen artwork,

39
00:02:45.865 --> 00:02:48.430
or scene I guess you could say.

40
00:02:48.430 --> 00:02:51.700
It's not really an artwork yet,
and you can click and

41
00:02:51.700 --> 00:02:52.920
drag to move around the scene.

42
00:02:54.230 --> 00:02:57.646
And so I'll just walk you through what's
going on in this actual code example.

43
00:02:57.646 --> 00:03:01.888
This is what's given to us by
a basic three.js template, and

44
00:03:01.888 --> 00:03:05.314
it's maybe more than we need or
maybe not enough,

45
00:03:05.314 --> 00:03:09.412
it depends on what you're
trying to build with three.js.

46
00:03:09.412 --> 00:03:13.300
And this is of course just one
way of working with three.js, but

47
00:03:13.300 --> 00:03:17.050
this is the way that hopefully
we're gonna be working today.

48
00:03:17.050 --> 00:03:19.530
It will allow us to do
some interesting stuff, so

49
00:03:19.530 --> 00:03:20.990
again we start with Canvas Sketch.

50
00:03:20.990 --> 00:03:22.480
We require that,

51
00:03:22.480 --> 00:03:27.900
the next thing we're doing is we're
requiring three.js which is the library.

52
00:03:27.900 --> 00:03:33.240
And we don't need to install this because
when we ran our terminal command,

53
00:03:33.240 --> 00:03:36.570
and we used Canvas Sketch with template 3,

54
00:03:36.570 --> 00:03:39.090
you'll notice it actual was
installing this dependency.

55
00:03:39.090 --> 00:03:43.720
So it installed it for
us automatically in this case, but

56
00:03:43.720 --> 00:03:47.790
it did install it using the same technique
of using NPM Install, basically.

57
00:03:47.790 --> 00:03:51.394
So it will appear in your package JSON and
in your Node modules.

58
00:03:51.394 --> 00:03:55.540
And we're using this thing here,
global.THREE = require('three');.

59
00:03:55.540 --> 00:04:00.415
And the reason we're doing that is because
some of three.js's code just assumes that

60
00:04:00.415 --> 00:04:05.080
three.js, the variable, the three
variable, exists on the window scope.

61
00:04:06.550 --> 00:04:10.384
So we're just getting it on the global or
the window scope, we're just assigning it

62
00:04:10.384 --> 00:04:14.067
as soon as we require it, that's kind
of just a weird, annoying, hacky thing.

63
00:04:14.067 --> 00:04:20.654
But it's because this three.js library was
created long before things like WebPack,

64
00:04:20.654 --> 00:04:25.474
or things like modules, and
things like Node.js modularity.

65
00:04:25.474 --> 00:04:30.741
And we're trying to sort of fit that into
our way of creating very modular and

66
00:04:30.741 --> 00:04:35.861
individual pieces of code, so
that's just something you cut and paste.

67
00:04:35.861 --> 00:04:40.826
Then after you require three,
you can require any of its examples, so

68
00:04:40.826 --> 00:04:46.060
one thing I didn't bring up,
is if you go to three.js.org/examples.

69
00:04:46.060 --> 00:04:49.123
You'll actually see a whole
ton of code examples,

70
00:04:49.123 --> 00:04:52.186
all of them are just using plain HTML and
Canvas, so

71
00:04:52.186 --> 00:04:56.549
they're not even using Canvas Sketch,
you don't need Canvas Sketch.

72
00:04:56.549 --> 00:04:59.385
But you can see there's just
a bit more boilerplate,

73
00:04:59.385 --> 00:05:02.923
things like copy-pasting script tags,
or something like that.

74
00:05:02.923 --> 00:05:05.406
But generally,
the code is gonna be very similar,

75
00:05:05.406 --> 00:05:08.889
there's gonna be a lot of similarities,
so it's not that different.

76
00:05:08.889 --> 00:05:13.282
So there's lots of examples here,
definitely worth spending some time just

77
00:05:13.282 --> 00:05:16.138
to browse through them
cuz they're really cool.

78
00:05:16.138 --> 00:05:22.507
And all the code is open source, so
I'm going back to this code here.

79
00:05:24.741 --> 00:05:28.293
&gt;&gt; Mathew DesLauriers: So then we have
our setting, it's kinda like the morning

80
00:05:28.293 --> 00:05:33.800
except this is the settings for
our sketch instead of setting a dimension.

81
00:05:33.800 --> 00:05:36.710
Earlier we were setting
dimensions with height,

82
00:05:36.710 --> 00:05:38.970
we don't need to do that
if we don't want to.

83
00:05:38.970 --> 00:05:42.876
If you don't specify it then the Canvas
just gonna be resized to this size of

84
00:05:42.876 --> 00:05:43.622
the browser.

85
00:05:43.622 --> 00:05:45.689
Here we say animate = true,

86
00:05:45.689 --> 00:05:50.954
which basically just means start
canvas sketch shop with a render loop.

87
00:05:50.954 --> 00:05:54.346
It's gonna be 60 frames per second so it's
going to be just kind of what we need for

88
00:05:54.346 --> 00:05:55.880
three.js stuff.

89
00:05:55.880 --> 00:05:59.880
And then here these two lines just make
sure that when we're setting up our canvas

90
00:05:59.880 --> 00:06:05.420
sketch we make sure that we ask for
a Web GL context.

91
00:06:05.420 --> 00:06:10.121
Rather than a 2D context which is
what we had in the morning, and

92
00:06:10.121 --> 00:06:13.515
this line is just one that
I tend to include a lot

93
00:06:13.515 --> 00:06:17.972
is to specify antialiusing when
we create our web GL canvas.

94
00:06:17.972 --> 00:06:22.309
And that just means it's gonna
give us a nice soft edge,

95
00:06:22.309 --> 00:06:26.752
and if we didn't have that true,
if we had left that out.

96
00:06:26.752 --> 00:06:29.604
You might notice a bit of a jagged
edge on the end of the cube,

97
00:06:29.604 --> 00:06:33.253
it's very hard to see on the screen but
if you save this as an image or a video,

98
00:06:33.253 --> 00:06:36.280
that's where it start to
become more noticeable.

99
00:06:36.280 --> 00:06:41.129
So just in general,
you wanna use this antialius true as

100
00:06:41.129 --> 00:06:46.198
a context flag when you're
creating your web GL context.

101
00:06:46.198 --> 00:06:49.558
It will make it a bit slower to render but
it's not usually a big deal.

102
00:06:49.558 --> 00:06:52.265
And then we go into our
actual sketch function,

103
00:06:52.265 --> 00:06:56.731
just like this morning we have a bunch
of stuff inside our sketch function, and

104
00:06:56.731 --> 00:06:58.774
then we're returning something.

105
00:06:58.774 --> 00:07:02.263
And I'll just walk you through
quickly what's going on, just so

106
00:07:02.263 --> 00:07:03.537
we're on he same page.

107
00:07:03.537 --> 00:07:07.857
So we have a render, this is
the three.js thing that sort of puts

108
00:07:07.857 --> 00:07:11.227
everything together and
makes an image out of it.

109
00:07:11.227 --> 00:07:13.733
We have this clear color which
is the background color,

110
00:07:13.733 --> 00:07:15.500
you can try tweaking this.

111
00:07:15.500 --> 00:07:18.010
You can set it to another color, and

112
00:07:18.010 --> 00:07:21.010
then you have this second
parameter which is the alpha.

113
00:07:21.010 --> 00:07:25.693
And if you set it to zero it means
the background is gonna be transparent.

114
00:07:25.693 --> 00:07:30.235
You can even test this by clicking
your canvas and exporting it, Cmd + S,

115
00:07:30.235 --> 00:07:35.770
looking in your downloads folder, and
it should be a transparent image.

116
00:07:35.770 --> 00:07:38.540
So that's one way of getting
a transparent background, but

117
00:07:38.540 --> 00:07:43.310
we're gonna keep it as black for
now, and then we have a camera.

118
00:07:43.310 --> 00:07:46.210
Just like we were saying earlier,
this is using a perspective camera.

119
00:07:46.210 --> 00:07:49.410
So it's trying to sort of simulate this
real way of looking at things that we

120
00:07:49.410 --> 00:07:50.240
are familiar with.

121
00:07:51.360 --> 00:07:57.594
The first argument here for the camera is
the field of view, which is in degrees.

122
00:07:57.594 --> 00:07:58.617
And if you tweak that value,

123
00:07:58.617 --> 00:08:02.410
you're gonna see that the camera's going
to start looking a little different.

124
00:08:02.410 --> 00:08:07.720
It's gonna basically pull the field of
view in or out, and so I like to use it

125
00:08:07.720 --> 00:08:13.040
just leave it at 45 more some time and
then you can tweak it later if you want.

126
00:08:13.040 --> 00:08:17.330
These are the arguments,
we won't get to end of them,

127
00:08:17.330 --> 00:08:21.620
this is aspect ratio which we're gonna
change later on when the canvass resizes.

128
00:08:21.620 --> 00:08:24.255
And then this is the near and
far values and

129
00:08:24.255 --> 00:08:28.109
this is basically just saying
how far away can we see a scene.

130
00:08:28.109 --> 00:08:31.441
So if you've ever played a video game
where there's mountains in the very far

131
00:08:31.441 --> 00:08:35.290
distance, and the mountains just
disappear because they're too far away.

132
00:08:35.290 --> 00:08:40.840
That's the far plane and
if you're in a big open world and

133
00:08:40.840 --> 00:08:44.660
you're making a video game in a big open
world you might need a really big number.

134
00:08:44.660 --> 00:08:48.040
To say that there's mountains that
are hundreds of meters away from me.

135
00:08:48.040 --> 00:08:51.506
Or you might need a really small number
if your game is entirely within the small

136
00:08:51.506 --> 00:08:55.900
room or something like that, you don't
need a thousand meters away from you.

137
00:08:55.900 --> 00:08:59.596
But we don't really need to think too,
too much about that today,

138
00:08:59.596 --> 00:09:02.516
that's a bit more of an advanced topic,
all right.

139
00:09:02.516 --> 00:09:06.288
And then we're setting the, we're gonna
chat a bit more about positioning in

140
00:09:06.288 --> 00:09:08.987
a second, but this is just so
you know what's going on.

141
00:09:08.987 --> 00:09:14.100
We're setting the position of the camera
to some xyz, so whenever we're talking

142
00:09:14.100 --> 00:09:19.890
about position, or rotation, or a scale in
three.js, it's always in three dimensions.

143
00:09:19.890 --> 00:09:22.080
It's xyz instead of just x and y,

144
00:09:22.080 --> 00:09:26.890
and we'll talk in a second about what that
means, but for now just bear with me.

145
00:09:26.890 --> 00:09:30.290
So we set the position, you can try
just tweaking these numbers, and

146
00:09:30.290 --> 00:09:34.340
you'll see maybe that it's
gonna move around the scene.

147
00:09:34.340 --> 00:09:37.054
So, if you were to set this to 00,

148
00:09:37.054 --> 00:09:41.583
-4, now we're kind of on
the same eye level as this cube.

149
00:09:41.583 --> 00:09:44.482
And if we were to set it to 000,
we're not gonna see anything,

150
00:09:44.482 --> 00:09:46.670
cuz we're sort of colliding with the cube,
so.

151
00:09:46.670 --> 00:09:49.710
We wanna set it to some value like 22 or
444 or

152
00:09:49.710 --> 00:09:53.353
something like that play around with it,
see what works.

153
00:09:53.353 --> 00:09:57.645
This one just says make our camera
look at the center of the world, and

154
00:09:57.645 --> 00:09:59.721
then we have a controller setup.

155
00:09:59.721 --> 00:10:03.217
This is what's giving us
our Mouse interaction,

156
00:10:03.217 --> 00:10:08.057
we have our scene which remember is
sort of everything all together.

157
00:10:08.057 --> 00:10:12.819
And we create a scene and
then we add objects into our scene,

158
00:10:12.819 --> 00:10:15.210
and so we start with the mesh.

159
00:10:15.210 --> 00:10:19.344
And remember that this mesh that
we're adding into our scene is

160
00:10:19.344 --> 00:10:22.075
a combination of geometry and material.

161
00:10:22.075 --> 00:10:26.842
So it's a combination of one box geometry
and one MeshPhysicalMaterial, or

162
00:10:26.842 --> 00:10:30.142
this is actually the same
as MeshStandardMaterial,

163
00:10:30.142 --> 00:10:33.240
it's basically the same thing for
our purposes.

164
00:10:34.270 --> 00:10:38.340
Basically just a material that
is reacting to light, and so

165
00:10:38.340 --> 00:10:40.290
it's changing depending on where
the lights are in this scene.

166
00:10:41.560 --> 00:10:44.320
We'll get into this sort
of stuff a little later,

167
00:10:44.320 --> 00:10:48.280
but then you'll see some lights
are being added to the scene.

168
00:10:48.280 --> 00:10:53.368
We can come back to this later on, but
for now you can just take a look at it.

169
00:10:53.368 --> 00:10:57.146
Maybe tweak some numbers if you want
to get a sense of what's going on.

170
00:10:57.146 --> 00:11:00.794
And then here,
instead of returning your render function,

171
00:11:00.794 --> 00:11:03.953
which is what we had before,
and with the 2D stuff.

172
00:11:03.953 --> 00:11:08.671
Now we want to have a bit more
control over the actual sketch.

173
00:11:08.671 --> 00:11:13.089
So we wanna have a something triggered
every time the browsers resized, so

174
00:11:13.089 --> 00:11:17.028
this is why we're returning an object
instead of just a function.

175
00:11:17.028 --> 00:11:21.676
So our object has a resize function,
here's where every time this

176
00:11:21.676 --> 00:11:26.252
browsers resized, this method
will be called by Canvas Sketch.

177
00:11:26.252 --> 00:11:30.473
And in this method we just set
up our camera positioning and

178
00:11:30.473 --> 00:11:35.403
camera sort of aspect ratio, and
we set up our size of the renderer.

179
00:11:35.403 --> 00:11:37.782
And then this is our
actual render function,

180
00:11:37.782 --> 00:11:39.983
just like we had earlier in the workshop.

181
00:11:39.983 --> 00:11:43.557
You can tweak this stuff here, and

182
00:11:43.557 --> 00:11:47.631
you can get a sense of what's going on.

183
00:11:47.631 --> 00:11:50.623
You'll see that every time we render,

184
00:11:50.623 --> 00:11:56.072
we're setting the rotation of the cube
to time times this number here.

185
00:11:56.072 --> 00:11:59.879
And so time is a property that's
in seconds, starting at zero,

186
00:11:59.879 --> 00:12:03.555
going up to however many seconds
you're looking at this for.

187
00:12:03.555 --> 00:12:07.675
And if we were just to set the rotation
to y, sorry, the rotation to time,

188
00:12:07.675 --> 00:12:10.073
you're gonna end up with a spinning cube.

189
00:12:10.073 --> 00:12:14.327
If you multiply it by some big number,
it's gonna spin much faster, and

190
00:12:14.327 --> 00:12:17.899
if you multiply it by a low number,
it'll spin much slower.

191
00:12:19.875 --> 00:12:23.153
&gt;&gt; Mathew DesLauriers: And then you have
controls update, render, you're rendering.

192
00:12:23.153 --> 00:12:29.692
And lastly, we're just disposing of
the scene whenever it's done with it,

193
00:12:29.692 --> 00:12:35.439
so that's kinda the template,
it's a lot of stuff all in one file.

194
00:12:35.439 --> 00:12:38.818
But we're gonna try and
whittle it down and we're gonna try and

195
00:12:38.818 --> 00:12:41.710
do something a bit more
interesting than just a cube.

