WEBVTT

1
00:00:02.011 --> 00:00:02.614
&gt;&gt; Mathew DesLauriers: Yeah,

2
00:00:02.614 --> 00:00:08.253
I'll just show one more thing here
which is the pen plotter stuff.

3
00:00:08.253 --> 00:00:12.080
Because this might be useful if you're
doing SVG graphics or anything like that.

4
00:00:13.970 --> 00:00:20.750
Instead of doing a sketch around Web GL or
2D if you do, sorry, Canvas-sketch.

5
00:00:20.750 --> 00:00:24.285
And let's call it, the file penplotter.

6
00:00:24.285 --> 00:00:28.875
And then you can do new-template
is equal to pen plot.

7
00:00:28.875 --> 00:00:32.221
It might be penplotter,
penplotter, penplot.

8
00:00:33.342 --> 00:00:36.244
&gt;&gt; Mathew DesLauriers: And what that's
gonna do is it's gonna start us off with

9
00:00:36.244 --> 00:00:37.613
a basic penplotter file.

10
00:00:40.054 --> 00:00:43.419
&gt;&gt; Mathew DesLauriers: And the difference
of this one is when you save it,

11
00:00:43.419 --> 00:00:48.340
and you go to your downloads,
it creates two different files.

12
00:00:48.340 --> 00:00:52.190
It crates an SVG file, and a PNG file.

13
00:00:52.190 --> 00:00:56.680
And so, this SVG file is already
set up to include all of the path

14
00:00:56.680 --> 00:01:01.220
information that we've
defined in the file.

15
00:01:02.360 --> 00:01:05.088
And so, it looks like this,

16
00:01:05.088 --> 00:01:11.079
it's just
&gt;&gt; Mathew DesLauriers: One sec.

17
00:01:16.122 --> 00:01:19.073
&gt;&gt; Mathew DesLauriers: Yeah, and so,
this is sort of the idea is that

18
00:01:19.073 --> 00:01:23.590
the template itself,
it just spits out this whole file.

19
00:01:23.590 --> 00:01:28.460
And really, the only main thing to
be mindful of is this last line.

20
00:01:28.460 --> 00:01:31.301
Instead of returning render,

21
00:01:31.301 --> 00:01:37.102
we return a function that uses
this utility render poly lines.

22
00:01:37.102 --> 00:01:41.590
And this is from the canvas
sketch util slash penplot module.

23
00:01:41.590 --> 00:01:47.100
And this method here, what it's
doing is it's basically saying okay,

24
00:01:47.100 --> 00:01:49.360
with the given set of lines
that you're giving me,

25
00:01:49.360 --> 00:01:52.340
I'm going to make it into a set of
commands that could be run through

26
00:01:52.340 --> 00:01:56.530
a SVG file or an AxiDraw pen plotter
like a mechanical pen plotter.

27
00:01:56.530 --> 00:02:00.600
And you can use the same SVG file for
a CNC machine to do laser cutting.

28
00:02:00.600 --> 00:02:05.230
So if you had like a piece of wood,
and you wanted to engrave or etch or

29
00:02:05.230 --> 00:02:09.040
laser cut all of these lines,
you can just go to a wood shop or

30
00:02:09.040 --> 00:02:10.490
any shop that will have a CNC.

31
00:02:10.490 --> 00:02:12.510
Most of them will in most cities.

32
00:02:12.510 --> 00:02:15.760
And usually, you can just say,
hey, I have an SVG file, and

33
00:02:15.760 --> 00:02:18.640
I want to etch it onto a piece of wood.

34
00:02:18.640 --> 00:02:21.683
You can actually use the exact
same dimensions here.

35
00:02:21.683 --> 00:02:26.185
You can say my piece of wood is 8, 4 size,
and they will sometimes help you out and

36
00:02:26.185 --> 00:02:30.842
they'll sometimes just say okay, this is
the CNC machine, here's how you use it.

37
00:02:30.842 --> 00:02:34.380
You put down a piece of wood or whatever
the material is, acrylic or anything.

38
00:02:34.380 --> 00:02:38.846
And then you just feed these
svg files into the machine,

39
00:02:38.846 --> 00:02:43.421
this literal file, and
you end up with an etched result.

40
00:02:43.421 --> 00:02:48.809
And it's pretty fun, pretty beautiful,
and you can create little jewelry,

41
00:02:48.809 --> 00:02:53.705
or you can create prints that are instead
of being printed with ink maybe

42
00:02:53.705 --> 00:02:59.580
they're printed with a laser cutter
burning a pattern into the wood itself.

43
00:02:59.580 --> 00:03:00.293
So it's kinda fun.

44
00:03:04.745 --> 00:03:08.881
&gt;&gt; Mathew DesLauriers: Yeah, and
the way it's working is just by the render

45
00:03:08.881 --> 00:03:14.803
function is just returning some objects
instead of returning the canvas or

46
00:03:14.803 --> 00:03:20.370
instead of just having a regular
render function, it returns a file.

47
00:03:20.370 --> 00:03:23.513
In this case, an svg file.

48
00:03:28.355 --> 00:03:31.623
&gt;&gt; Mathew DesLauriers: So if I write a
render function that looks like this where

49
00:03:31.623 --> 00:03:36.210
maybe here is where you have your canvas
rendering stuff, and at the end of your

50
00:03:36.210 --> 00:03:40.240
canvas rendering stuff you return
the data that you want to export and

51
00:03:40.240 --> 00:03:44.390
the data that you actually
want to generate as an image.

52
00:03:44.390 --> 00:03:47.410
And so, in this case it's
an array of different files.

53
00:03:47.410 --> 00:03:49.656
You can have an array of just one file or
two different files.

54
00:03:51.371 --> 00:03:53.135
&gt;&gt; Mathew DesLauriers: And
when you hit Cmd+S,

55
00:03:53.135 --> 00:03:57.290
it's gonna generate those
two different files.

56
00:03:57.290 --> 00:03:59.910
And in this case,
we're just generating text files.

57
00:03:59.910 --> 00:04:03.230
But yeah, as I was saying earlier, you can
imagine that it can be used for g code or

58
00:04:03.230 --> 00:04:07.811
for svg or JSON, or 3D exports

