WEBVTT

1
00:00:00.170 --> 00:00:03.230
&gt;&gt; Mathew DesLauriers: To actually
export this as a GIF that we can share,

2
00:00:03.230 --> 00:00:05.040
we're gonna have to do a couple things.

3
00:00:05.040 --> 00:00:10.020
One thing we're gonna have to do is set
a specific size cuz we want our GIF

4
00:00:10.020 --> 00:00:11.938
to be a very specific size.

5
00:00:11.938 --> 00:00:16.348
So we're just gonna use dimensions again,
and

6
00:00:16.348 --> 00:00:19.670
we're gonna say 512 by 512.

7
00:00:19.670 --> 00:00:21.647
And that should make a square.

8
00:00:24.570 --> 00:00:27.844
&gt;&gt; Mathew DesLauriers: And then we're
gonna set a couple of other things.

9
00:00:27.844 --> 00:00:29.570
We're gonna set a fps.

10
00:00:30.610 --> 00:00:33.630
And this is short for
frames per second, and

11
00:00:33.630 --> 00:00:36.740
by default it's just using a maximum but
we're gonna set

12
00:00:36.740 --> 00:00:41.250
a specific frames per second which
is gonna be used for our export.

13
00:00:41.250 --> 00:00:45.250
So generally speaking,
24 frames per second is pretty good.

14
00:00:45.250 --> 00:00:46.600
It's good for GIFs.

15
00:00:46.600 --> 00:00:48.250
If you want really high quality animation,

16
00:00:48.250 --> 00:00:51.380
you might wanna use 30 frames
per second or even higher.

17
00:00:51.380 --> 00:00:54.612
If you're just doing a video,
you can do 24, 25.

18
00:00:54.612 --> 00:00:56.060
I just tend to do 24 a lot.

19
00:00:57.500 --> 00:01:01.178
And then lastly we need to specify
a duration because right now we're not

20
00:01:01.178 --> 00:01:04.793
saying how long our GIF is, and so
we can maybe time this, and say okay,

21
00:01:04.793 --> 00:01:07.771
it loops in a second or
something like that or two seconds.

22
00:01:07.771 --> 00:01:10.650
But what we're gonna do is
we're gonna specify a duration.

23
00:01:10.650 --> 00:01:14.030
I'm gonna do 4 seconds.

24
00:01:15.730 --> 00:01:22.797
And now what you might notice
is after 4 seconds, it flips.

25
00:01:22.797 --> 00:01:25.924
There's a blip where it's rotating nicely,
and

26
00:01:25.924 --> 00:01:30.547
then all of a sudden it no longer connects
and it rotates in this weird way.

27
00:01:30.547 --> 00:01:32.118
And it looks like a glitch, and

28
00:01:32.118 --> 00:01:35.950
that basically just means that our
loop is not actually seamless.

29
00:01:35.950 --> 00:01:38.960
Our loop isn't starting and
ending in the exact same spot.

30
00:01:38.960 --> 00:01:41.810
And so to change that,
we're gonna scroll down.

31
00:01:43.690 --> 00:01:47.950
And so what's happening is that time
is going up, and it's hitting four, and

32
00:01:47.950 --> 00:01:50.030
then it's starting again from zero.

33
00:01:50.030 --> 00:01:54.420
And what we want it to do is we want
it to basically rotate perfectly so

34
00:01:54.420 --> 00:01:58.130
that by the time it's finishing its
rotation, the loop is starting again, and

35
00:01:58.130 --> 00:01:59.970
it becomes a seamless loop.

36
00:01:59.970 --> 00:02:04.610
To do that, instead of using time, we can
use this different prop called playhead.

37
00:02:06.400 --> 00:02:09.610
And playhead is only really useful,

38
00:02:09.610 --> 00:02:14.360
it only exists when you have
a specified duration on your loop.

39
00:02:14.360 --> 00:02:17.648
So if you don't have a duration
then there's no sense of playhead.

40
00:02:17.648 --> 00:02:21.186
Playhead basically is if you think
of watching a movie on QuickTime,

41
00:02:21.186 --> 00:02:24.602
it's like that little seek bar is
at the very start of the movie, or

42
00:02:24.602 --> 00:02:26.996
somewhere in the middle,
or maybe at the end.

43
00:02:26.996 --> 00:02:31.569
It's just telling you the value
between zero, and one for your loop.

44
00:02:31.569 --> 00:02:35.129
For however long your loop is,
it's gonna be zero when it starts,

45
00:02:35.129 --> 00:02:38.400
and when it gets the end,
it's gonna be one.

46
00:02:38.400 --> 00:02:42.415
So, if I save,
it doesn't really look great yet and

47
00:02:42.415 --> 00:02:46.882
what we have to do is we have to
make it loop in a full circle so

48
00:02:46.882 --> 00:02:50.931
we're gonna use playhead
times Math.PI times 2.

49
00:02:54.042 --> 00:02:58.347
&gt;&gt; Mathew DesLauriers: And so now what we
should have is a perfectly seamless GIF

50
00:02:58.347 --> 00:03:00.371
where we can export this.

51
00:03:00.371 --> 00:03:03.070
And it will actually just loop perfectly.

52
00:03:03.070 --> 00:03:05.334
And if you feel like
the speed is too fast,

53
00:03:05.334 --> 00:03:07.682
you can maybe increase the duration a bit.

54
00:03:07.682 --> 00:03:10.292
I would stick,
cuz what we're gonna do is export it,

55
00:03:10.292 --> 00:03:12.325
I would just stick with duration for now.

56
00:03:12.325 --> 00:03:14.010
And I'll show you how to export it.

57
00:03:14.010 --> 00:03:16.980
And this is gonna actually end
up creating a lot of frames.

58
00:03:16.980 --> 00:03:20.750
So just be careful and if you don't wanna
create 100 png frames on your computer,

59
00:03:20.750 --> 00:03:22.320
maybe don't run the command yet.

60
00:03:22.320 --> 00:03:23.790
Maybe just watch me do it.

61
00:03:23.790 --> 00:03:30.357
But what I'm gonna do,
is I'm gonna open my terminal,

62
00:03:30.357 --> 00:03:35.682
and I'm going to cancel
this build command.

63
00:03:35.682 --> 00:03:43.107
And I'm gonna run canvas sketch again, but
with no arguments except for one argument.

64
00:03:43.107 --> 00:03:50.140
Which I'm gonna specify as output, and
it's gonna look like this output is temp.

65
00:03:50.140 --> 00:03:53.920
And what this is gonna do is
when we're saving png's, so

66
00:03:53.920 --> 00:03:56.390
far they just go into
our downloads folder.

67
00:03:56.390 --> 00:04:00.730
And what I wanna do is save all
these frames as png sequence, and so

68
00:04:00.730 --> 00:04:03.450
we're gonna end up with 120 frames or
something.

69
00:04:03.450 --> 00:04:06.946
And I don't wanna just save it all into
my downloads folder cuz it'll get messy.

70
00:04:06.946 --> 00:04:11.850
So I'm gonna specify a folder relative to
the folder that we're working in right

71
00:04:11.850 --> 00:04:15.840
now, canvas sketch, or sorry, genart,
wherever you put it on your desktop.

72
00:04:16.990 --> 00:04:21.440
And so now it's running and just a test.

73
00:04:21.440 --> 00:04:23.489
I'm gonna reload this page.

74
00:04:23.489 --> 00:04:27.017
I'm gonna click the canvas to make sure
it's focused, and hit command s or

75
00:04:27.017 --> 00:04:29.250
Ctrl+s if you're on Windows.

76
00:04:29.250 --> 00:04:31.430
And it should say exported temp.

77
00:04:31.430 --> 00:04:33.470
You can just test to make sure.

78
00:04:33.470 --> 00:04:38.340
Maybe go into your desktop,
open up that folder and

79
00:04:38.340 --> 00:04:40.690
just double check, and
make sure it's exported into that folder.

80
00:04:43.270 --> 00:04:44.940
Rather than your downloads folder.

81
00:04:44.940 --> 00:04:47.570
And so what I'm gonna do is I'm
gonna clear this folder out,

82
00:04:47.570 --> 00:04:50.579
just delete it basically,
make sure it's empty, the temp folder.

83
00:04:50.579 --> 00:04:54.699
And then the command to
export an entire sequence

84
00:04:54.699 --> 00:04:58.726
with this kind of a sketch
tool is Cmd+Shift s.

85
00:04:58.726 --> 00:05:01.527
And you just push it once, and
it's gonna start exporting.

86
00:05:01.527 --> 00:05:06.160
Just be careful if you're not
specifying a loop duration.

87
00:05:06.160 --> 00:05:10.160
So if you didn't specify this,
it's gonna endlessly export hundreds and

88
00:05:10.160 --> 00:05:11.010
hundreds of frames.

89
00:05:11.010 --> 00:05:14.780
And if it's doing that, you can just close
your browser and just be like whoops.

90
00:05:14.780 --> 00:05:18.620
Don't do that cuz you'll lose space.

91
00:05:18.620 --> 00:05:22.790
But, yeah, this is how you would
export all the frames of your artwork.

92
00:05:24.310 --> 00:05:30.652
And you'll notice now in our temp folder,
we have each individual frame.

93
00:05:30.652 --> 00:05:35.347
And the cool thing is that each individual
frame is rendered exactly using the time

94
00:05:35.347 --> 00:05:37.150
and playhead values.

95
00:05:37.150 --> 00:05:39.150
So you can do really specific things,

96
00:05:39.150 --> 00:05:42.980
like if you wanted it to be on
a specific frame or a specific second,

97
00:05:42.980 --> 00:05:46.040
one of these things change colors or
something like that, you can do that.

98
00:05:47.150 --> 00:05:50.960
And now the next thing we need
to do is figure out, okay,

99
00:05:50.960 --> 00:05:57.040
how do we take this sequence of images and
put it into a GIF or an MP4?

100
00:05:57.040 --> 00:05:59.850
So there is a few ways to doing that.

101
00:05:59.850 --> 00:06:02.217
If you're using Photoshop,
you can use that.

102
00:06:02.217 --> 00:06:04.510
If you're using after effects,
you can use that.

103
00:06:04.510 --> 00:06:05.190
Some people,

104
00:06:05.190 --> 00:06:09.130
maybe if you're more like code savvy,
you can use this thing called FFmpeg.

105
00:06:09.130 --> 00:06:12.570
And this, all right, sometimes used.

106
00:06:12.570 --> 00:06:18.080
If you have FFmpeg installed,
canvas sketch actually includes a command.

107
00:06:18.080 --> 00:06:24.490
But it might not work if you don't have
FFmpeg installed, so it's maybe not even.

108
00:06:24.490 --> 00:06:28.859
Worth trying, but just so
you know what that it's there,

109
00:06:28.859 --> 00:06:31.544
you can do canvas-sketch-mp4.

110
00:06:31.544 --> 00:06:34.936
But that would probably not work
if you don't have FFmpeg, but

111
00:06:34.936 --> 00:06:36.861
I'll show you an alternative way.

112
00:06:36.861 --> 00:06:41.830
Cuz if you do have an FFmpeg,
you immediately have a video like this.

113
00:06:41.830 --> 00:06:43.480
But I'll show you sort of the open source,

114
00:06:43.480 --> 00:06:47.030
free, like zero setup
required version of that.

115
00:06:48.090 --> 00:06:53.120
Is to go into the repo, and
to scroll down to the bottom.

116
00:06:53.120 --> 00:06:57.941
And here we have this list of tools.

117
00:06:57.941 --> 00:07:01.145
And the first tool is called giftool,
I'll just open it up.

118
00:07:01.145 --> 00:07:06.140
And first you set up your size and pixels,

119
00:07:06.140 --> 00:07:11.009
so 512 is already good for our scene.

120
00:07:11.009 --> 00:07:15.617
You can do 256 or 512 or whatever
you want, just the width and height.

121
00:07:15.617 --> 00:07:18.330
Then you set a FPS.

122
00:07:18.330 --> 00:07:20.700
We're gonna stick to 24.

123
00:07:20.700 --> 00:07:23.089
This is just the optimization level.

124
00:07:23.089 --> 00:07:29.490
And then when you drag this temp folder,
oops, I just lost it.

125
00:07:31.380 --> 00:07:37.140
So when you drag this temp folder onto the
browser window, it should generate a GIF.

126
00:07:37.140 --> 00:07:42.380
And this is a tool that I just created
myself and open-sourced it online.

127
00:07:42.380 --> 00:07:44.270
It's not perfect, this tool.

128
00:07:44.270 --> 00:07:49.040
It probably only works in Chrome, but
it's more or less for you guys so that you

129
00:07:49.040 --> 00:07:53.758
don't need to install any more complex
build tooling or anything like that.

130
00:07:56.079 --> 00:07:58.590
&gt;&gt; Mathew DesLauriers: But yeah,
this should generate a GIF.

131
00:07:58.590 --> 00:08:02.300
It might not be so perfect,
let me just look at why that is.

132
00:08:02.300 --> 00:08:05.273
&gt;&gt; Speaker 2: [INAUDIBLE]
&gt;&gt; Mathew DesLauriers: Yeah.

133
00:08:05.273 --> 00:08:11.903
Yeah, so one thing I did by
accident is I saved a frame.

134
00:08:11.903 --> 00:08:15.901
And if you save a frame into the same
folder as temp, and then you drag

135
00:08:15.901 --> 00:08:20.755
the whole folder into this giftool, it's
just gonna include that frame as well.

136
00:08:20.755 --> 00:08:25.571
So, just to be safe,
you can also just select all

137
00:08:25.571 --> 00:08:29.570
of these images and drag them on as well.

138
00:08:29.570 --> 00:08:31.220
Let me just try that again.

139
00:08:31.220 --> 00:08:34.740
You can see it's pretty like hacky,
this tool that I built.

140
00:08:34.740 --> 00:08:38.885
The CSS isn't perfect, but
I just wanted to have something basic for

141
00:08:38.885 --> 00:08:40.253
you guys to work with.

142
00:08:42.760 --> 00:08:43.780
&gt;&gt; Mathew DesLauriers: So
this is the new one.

143
00:08:46.010 --> 00:08:47.320
Yeah, and it loops perfectly.

144
00:08:48.400 --> 00:08:51.090
And you can upload that to GIPHY.

145
00:08:51.090 --> 00:08:53.440
You could probably upload
it to other places.

146
00:08:53.440 --> 00:08:58.360
You can share this on Instagram or
on Twitter, and so on and so forth.

