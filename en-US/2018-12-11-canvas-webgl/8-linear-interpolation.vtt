WEBVTT

1
00:00:00.380 --> 00:00:04.160
&gt;&gt; Mathew DesLauriers: Now we've got
a grid, it's still not very interesting.

2
00:00:04.160 --> 00:00:07.670
We want to give it a bit of margin, this
is the next thing I tend to do in all of

3
00:00:07.670 --> 00:00:11.980
my artworks is to space things out a bit,
just to give the artwork a bit more

4
00:00:11.980 --> 00:00:14.480
breathing room and
we're gonna install the module.

5
00:00:14.480 --> 00:00:18.690
And this is sort of our way of
introducing some MPM modules.

6
00:00:18.690 --> 00:00:24.170
In this case, we're gonna install
one called canvas-sketch-util,

7
00:00:24.170 --> 00:00:25.470
and it looks like that.

8
00:00:25.470 --> 00:00:31.010
And sorry, I should write "npm
install canvas-sketch-util".

9
00:00:31.010 --> 00:00:34.943
And you have to run this command from the
same folder that you have all your other

10
00:00:34.943 --> 00:00:36.506
JavaScript stuff going on in.

11
00:00:38.797 --> 00:00:40.458
&gt;&gt; Mathew DesLauriers: So
if you run that command,

12
00:00:40.458 --> 00:00:43.719
it should just install
the module within our folder.

13
00:00:44.720 --> 00:00:47.060
And once it's installed,
it'll look just like that.

14
00:00:48.150 --> 00:00:51.350
Once it's installed,
you can require it up here,

15
00:00:51.350 --> 00:00:53.510
just like we've required canvas sketch.

16
00:00:53.510 --> 00:00:58.950
And we're gonna require a specific
function called lerping,

17
00:00:58.950 --> 00:01:01.240
canvas sketch util.

18
00:01:01.240 --> 00:01:03.380
And the way it looks is like this.

19
00:01:03.380 --> 00:01:07.598
So, you start with lerping or
destructuring a single function from

20
00:01:07.598 --> 00:01:12.350
the utility library and
we're installing canvas-sketch-util/math.

21
00:01:12.350 --> 00:01:18.490
If we go to our docs, here in our repo,
you'll see canvas-sketch-util.

22
00:01:18.490 --> 00:01:21.720
You can learn all about
the actual utilities here and

23
00:01:21.720 --> 00:01:24.500
you can see the documentation for
each of these utilities.

24
00:01:24.500 --> 00:01:29.320
And right now, we're requiring math,
which is a specific library within that.

25
00:01:29.320 --> 00:01:34.050
Has all sorts of functions here,
lerp and all these,

26
00:01:34.050 --> 00:01:35.490
fract and signs and stuff like that.

27
00:01:35.490 --> 00:01:36.940
We'll just talk about lerp.

28
00:01:36.940 --> 00:01:40.530
Lerp is a function for
linear interpolation and

29
00:01:40.530 --> 00:01:46.200
the way it works is you pass in
a minimum and a maximum bound.

30
00:01:46.200 --> 00:01:49.180
So here it is on the left,
I've got the documentation.

31
00:01:49.180 --> 00:01:53.410
You pass in a minimum and a maximum and
then you pass in a T value and

32
00:01:53.410 --> 00:01:58.080
usually the T value that you
pass in is between 0 and 1.

33
00:01:58.080 --> 00:02:02.780
And what's gonna happen is if you pass in
0 as the T value you're gonna get back

34
00:02:02.780 --> 00:02:04.100
the same value as min.

35
00:02:04.100 --> 00:02:09.390
And if you pass in 1 as a t value, you're
gonna get back the same value as max.

36
00:02:09.390 --> 00:02:13.630
That's just a number between whatever
your minimum and maximum is.

37
00:02:13.630 --> 00:02:17.940
And if you pass in 0.5 as your T value,
you're gonna get a number that's

38
00:02:17.940 --> 00:02:21.880
equally spaced between min and max,
kind of the middle of the two.

39
00:02:21.880 --> 00:02:25.670
And that might be a bit complicated,
yeah, but once we see it happening,

40
00:02:25.670 --> 00:02:26.799
hopefully it will make more sense.

41
00:02:27.810 --> 00:02:30.930
So I'm just gonna go back to this code,
and

42
00:02:32.190 --> 00:02:36.560
once I've required this function,
I'm gonna scroll down.

43
00:02:36.560 --> 00:02:40.610
And instead of just saying, I want my grid
to go from the very top left of the screen

44
00:02:40.610 --> 00:02:45.270
to the very bottom right of the screen
using U times width and V times height,

45
00:02:45.270 --> 00:02:50.370
what I want to do is I want to
interpolate from somewhere close

46
00:02:50.370 --> 00:02:55.270
to the top left of the screen to somewhere
close to the bottom right of the screen.

47
00:02:55.270 --> 00:02:59.730
So that I have a bit of a margin
around the edge of our image here.

48
00:02:59.730 --> 00:03:01.890
And so to do that,
I'm gonna define a margin.

49
00:03:01.890 --> 00:03:05.560
And you can define it wherever you like,
I'm just gonna define it here.

50
00:03:07.710 --> 00:03:09.400
Let's say it's 100 for now.

51
00:03:09.400 --> 00:03:11.200
It's just a number.

52
00:03:11.200 --> 00:03:12.750
We can define it after we create our grid.

53
00:03:13.930 --> 00:03:18.740
And here, we're gonna replace
the u * width with lerp.

54
00:03:18.740 --> 00:03:23.660
We're gonna give it the minimum value,
which is the top left of our surface,

55
00:03:23.660 --> 00:03:24.920
with the margin included.

56
00:03:24.920 --> 00:03:26.060
So.

57
00:03:26.060 --> 00:03:27.890
One margin across.

58
00:03:27.890 --> 00:03:32.380
And then we're gonna do width- margin and
then U as the T parameter.

59
00:03:33.790 --> 00:03:35.870
And that's gonna just make it, so

60
00:03:35.870 --> 00:03:39.180
that all the circles go from
our minimum to our maximum.

61
00:03:39.180 --> 00:03:43.028
And it's hard to see right now but
if I make this margin really big,

62
00:03:43.028 --> 00:03:47.220
all of a sudden we're gonna see that
instead of it going from 0 to width,

63
00:03:47.220 --> 00:03:50.000
it's going from 400 to width minus 400.

64
00:03:50.000 --> 00:03:52.173
We do the same thing on the y-axis.

65
00:03:56.259 --> 00:03:58.974
&gt;&gt; Mathew DesLauriers: And all of
a sudden, we're gonna have this grid,

66
00:03:58.974 --> 00:04:01.020
which is a bit more margined.

67
00:04:01.020 --> 00:04:02.780
So that's something I like to do a lot,

68
00:04:02.780 --> 00:04:07.310
is bring everything in
using the lerp function.

