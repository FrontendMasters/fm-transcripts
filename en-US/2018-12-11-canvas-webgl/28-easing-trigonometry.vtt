WEBVTT

1
00:00:00.070 --> 00:00:02.270
&gt;&gt; Mathew DesLauriers: Just one
other quick thing I'll talk about.

2
00:00:02.270 --> 00:00:05.130
Cuz right now this is
a pretty basic rotation.

3
00:00:06.170 --> 00:00:10.890
And maybe it would be kinda interesting
to make it swing back and forth.

4
00:00:10.890 --> 00:00:14.730
Instead of just having it rotate
in a constant way like that.

5
00:00:14.730 --> 00:00:18.590
And one thing you can do is use sine and
cosine and

6
00:00:18.590 --> 00:00:21.080
some sort of trigonomic functions.

7
00:00:21.080 --> 00:00:25.792
And so what we're gonna do is wrap this

8
00:00:25.792 --> 00:00:30.100
play head value with Math.sign.

9
00:00:30.100 --> 00:00:35.011
And I think I closed my canvas sketch so
I need to just make sure that I'm

10
00:00:35.011 --> 00:00:40.106
running it, just make sure that it's
running with the output attempt.

11
00:00:43.783 --> 00:00:47.792
&gt;&gt; Mathew DesLauriers: And now what's
happening in our scene is that we're

12
00:00:47.792 --> 00:00:52.450
wrapping the play head times pi and
then wrapping the n sign.

13
00:00:52.450 --> 00:00:56.330
You can play with these values a lot like
sometimes just multiplying things by 2,

14
00:00:56.330 --> 00:00:57.830
multiplying things by 0.5.

15
00:00:57.830 --> 00:00:59.970
You start to get some interesting motion.

16
00:00:59.970 --> 00:01:04.590
Really this is where it starts to become
like this cool iterative creative coding

17
00:01:04.590 --> 00:01:07.170
where you're just tweaking values and
having fun.

18
00:01:07.170 --> 00:01:09.634
And if you use pi and
you use pi times two,

19
00:01:09.634 --> 00:01:14.290
if you work with those numbers quite
often then you can create seamless loops.

20
00:01:14.290 --> 00:01:18.325
If I was to use pi or
something multiply it by 1.7,

21
00:01:18.325 --> 00:01:21.182
there might be a spot where it jumps.

22
00:01:21.182 --> 00:01:24.279
And that's why pi times
two is pretty useful for

23
00:01:24.279 --> 00:01:26.530
this kind of seamless loops, so.

24
00:01:27.550 --> 00:01:28.740
It's just sign keep in mind.

25
00:01:30.790 --> 00:01:37.938
One of those things that's really
useful to know is around easy.

26
00:01:37.938 --> 00:01:45.860
So right now, we have a bit of this
like cool swinging motion and it's okay.

27
00:01:45.860 --> 00:01:51.630
But maybe what we'll do is, I'll just
take this out times two and times two.

28
00:01:53.010 --> 00:01:59.400
And what we have here is sign
of the play head times pi.

29
00:01:59.400 --> 00:02:01.540
And what I want to do is maybe make this

30
00:02:03.090 --> 00:02:06.320
maybe I'll do times pi times two just so
it's like a nice.

31
00:02:08.110 --> 00:02:08.820
Yeah, that's a bit better.

32
00:02:10.010 --> 00:02:14.150
And what I want to do because right now
it's like rocking like a cradle but

33
00:02:14.150 --> 00:02:17.720
in Motion Graphics when you start to see
Motion Graphics on the web quite often,

34
00:02:17.720 --> 00:02:21.810
they do really sharp and
really quick and speedy animations.

35
00:02:21.810 --> 00:02:25.570
They'll use what's called easing so
that it goes like really fast and

36
00:02:25.570 --> 00:02:27.770
then it slows down and vice versa.

37
00:02:27.770 --> 00:02:29.850
It goes really slow and then it speeds up.

38
00:02:29.850 --> 00:02:36.410
And one way of achieving that is by
installing this module called eases.

39
00:02:38.510 --> 00:02:40.100
And the first we've acquired,

40
00:02:40.100 --> 00:02:42.190
it's gonna give some error
because we haven't installed it.

41
00:02:43.460 --> 00:02:49.556
So we'll just into our folder,
[SOUND] NPM install eases.

42
00:02:55.549 --> 00:02:59.667
&gt;&gt; Mathew DesLauriers: And,
&gt;&gt; Mathew DesLauriers: So

43
00:02:59.667 --> 00:03:04.695
once it's installed down here,
we can save this value,

44
00:03:04.695 --> 00:03:08.797
let's say as t,
let's just call it t for now.

45
00:03:12.905 --> 00:03:16.900
&gt;&gt; Mathew DesLauriers: And let's try and
wrap this t value with an ease.

46
00:03:16.900 --> 00:03:20.459
So if you look at eases,
I'll just open this up real quick so

47
00:03:20.459 --> 00:03:21.896
you can see the module.

48
00:03:25.284 --> 00:03:28.600
&gt;&gt; Mathew DesLauriers: You'll see it
has a bunch of different functions.

49
00:03:28.600 --> 00:03:33.520
Like cubic-in-out, cubic-in, cubic-out.

50
00:03:33.520 --> 00:03:37.980
These are sort of referred to as
Robert Penner's easing equations.

51
00:03:40.610 --> 00:03:42.680
They look a bit, let's find a nice thing.

52
00:03:42.680 --> 00:03:48.916
There's one of these
&gt;&gt; Mathew DesLauriers: Here

53
00:03:48.916 --> 00:03:50.330
this is a good one.

54
00:03:50.330 --> 00:03:51.170
They look a bit like this.

55
00:03:51.170 --> 00:03:55.530
They're just basically a function
that takes in a value and

56
00:03:55.530 --> 00:03:58.710
it changes the value as it goes over time.

57
00:03:58.710 --> 00:04:02.530
And then with these sort of functions
you can produce different motion,

58
00:04:02.530 --> 00:04:03.300
different animation.

59
00:04:04.570 --> 00:04:07.253
So easing in and out.

60
00:04:07.253 --> 00:04:12.366
So we're just gonna do eases.quadInOut.

61
00:04:12.366 --> 00:04:13.150
Let's try that.

62
00:04:14.350 --> 00:04:16.742
And now let's go back to our image.

63
00:04:16.742 --> 00:04:21.419
And you should see this kind
of weirdness going on, and

64
00:04:21.419 --> 00:04:26.402
that's probably because this
t value is sometimes -1,

65
00:04:26.402 --> 00:04:31.502
sometimes positive,
maybe what I'll do is I'll do this.

66
00:04:31.502 --> 00:04:34.146
I'll remove this times two, and

67
00:04:34.146 --> 00:04:40.620
I'll change instead of quad enum
I'm gonna rename this to expo enum.

68
00:04:40.620 --> 00:04:46.710
Expo is short for exponential, and
exponential is a really sharp ease and

69
00:04:46.710 --> 00:04:49.140
so now we have something
that's a bit more interesting.

70
00:04:49.140 --> 00:04:53.904
It's not, a no longer just like a slow
rotating motion, but it's actually like

71
00:04:53.904 --> 00:04:58.683
sometimes holding on a position, and
then speeding to one rotation or another.

72
00:05:01.385 --> 00:05:05.533
&gt;&gt; Mathew DesLauriers: And one last sort
of tip in this sort of in this kind of

73
00:05:05.533 --> 00:05:07.500
idea of things.

74
00:05:07.500 --> 00:05:14.940
Is a tool called cubic bezier curves.

75
00:05:14.940 --> 00:05:18.194
And so if you go to cubic-bezier.com.

76
00:05:20.916 --> 00:05:24.540
&gt;&gt; Mathew DesLauriers: Just
type it in cubic-bezier.com.

77
00:05:24.540 --> 00:05:25.470
There's a pretty handy tool.

78
00:05:25.470 --> 00:05:27.930
There's a couple of these
different tools on the web.

79
00:05:27.930 --> 00:05:30.560
It's just the one I use quite often, and

80
00:05:30.560 --> 00:05:34.160
we can start to create
our own easing functions.

81
00:05:34.160 --> 00:05:39.100
This is really useful when you have a
project and you want the animations to be

82
00:05:39.100 --> 00:05:43.400
really original and really carefully
crafted, carefully designed.

83
00:05:43.400 --> 00:05:47.420
This is where you might use a tool like
this and you might tweak this graph.

84
00:05:47.420 --> 00:05:50.640
And you can play with it,
you can click this go button.

85
00:05:50.640 --> 00:05:53.140
And see this purple is gonna show us what

86
00:05:54.370 --> 00:05:58.090
the actual graph is producing
in terms of animation.

87
00:05:58.090 --> 00:06:01.220
So maybe I have something like this and
I preview it, and

88
00:06:01.220 --> 00:06:05.930
now the purple looks nice and
smooth, so that's pretty cool.

89
00:06:05.930 --> 00:06:10.630
And what we're going to do is we're going
to use these values in our code just so

90
00:06:10.630 --> 00:06:14.590
that we have like full control over
the way that the motion is happening.

91
00:06:15.620 --> 00:06:18.850
So I'm going to just hide that for
a second.

92
00:06:18.850 --> 00:06:24.660
And I'm going to install one more
module called bezier easing and

93
00:06:24.660 --> 00:06:27.730
it looks like this bezier-easy.

94
00:06:29.130 --> 00:06:31.705
So we have to install it in NPM.

95
00:06:38.510 --> 00:06:42.940
&gt;&gt; Mathew DesLauriers: And
then you can use this method.

96
00:06:42.940 --> 00:06:46.380
So again, if you're ever lost
in a module just hit NPM, and

97
00:06:46.380 --> 00:06:48.350
then type the name of the module.

98
00:06:48.350 --> 00:06:52.930
NPM BezierEasing,
usually they have documentation.

99
00:06:52.930 --> 00:06:54.107
They show you how to use the module.

100
00:06:58.728 --> 00:07:01.681
&gt;&gt; Mathew DesLauriers: And so
what we're gonna do is we're going to,

101
00:07:01.681 --> 00:07:03.850
once we've acquired it.

102
00:07:03.850 --> 00:07:06.759
We can use this capitalization cuz it's
actually like a class kind of thing.

103
00:07:09.984 --> 00:07:11.070
&gt;&gt; Mathew DesLauriers: Once
we've required it.

104
00:07:11.070 --> 00:07:14.310
Somewhere before we return our render,
resize functions and

105
00:07:14.310 --> 00:07:18.774
stuff like that we're just gonna
call this thing called ease fn and

106
00:07:18.774 --> 00:07:23.960
we're going create anew
bezier-easing function.

107
00:07:23.960 --> 00:07:27.760
So when you create, when you call this
method bezier-easing with some values.

108
00:07:27.760 --> 00:07:29.260
It gives you back an ease function.

109
00:07:30.330 --> 00:07:35.080
And so we're gonna give these values that
we have in our cubic-bezier tool, so

110
00:07:35.080 --> 00:07:36.160
the one I just minimized.

111
00:07:37.500 --> 00:07:43.340
So just find an ease that you like,
copy these values from the URL,

112
00:07:43.340 --> 00:07:45.800
so after the pound sign,
or after the hash sign.

113
00:07:45.800 --> 00:07:48.510
Just all the rest of the numbers.

114
00:07:48.510 --> 00:07:50.866
Go back to our code,
and just paste them in.

115
00:07:50.866 --> 00:07:54.302
To our constructor there.

116
00:07:56.192 --> 00:08:00.578
&gt;&gt; Mathew DesLauriers: What you should
now have is this function, ease function.

117
00:08:00.578 --> 00:08:05.293
And if we simply remove
this eases.expoInOut, and

118
00:08:05.293 --> 00:08:08.990
we replace it with ease function.

119
00:08:08.990 --> 00:08:15.270
Now we've actually used our own
man made or hand made curve

120
00:08:15.270 --> 00:08:18.720
that we sort of designed ourselves rather
than using one of the built in curves.

121
00:08:18.720 --> 00:08:20.080
And that's a really powerful thing for

122
00:08:20.080 --> 00:08:23.400
animation because generally
I think when you start to do

123
00:08:23.400 --> 00:08:27.870
really complex motion graphics if you're
using all the same built in curves.

124
00:08:27.870 --> 00:08:30.990
You can start to recognize them sometimes.

125
00:08:30.990 --> 00:08:34.215
But when you can actually tweak
the curves yourselves, in a tool like

126
00:08:34.215 --> 00:08:40.450
cubic-bezier.com, and then maybe tweak it,
copy, and paste, and do it again.

127
00:08:40.450 --> 00:08:42.684
You can have a bit more flexibility.

