WEBVTT

1
00:00:00.150 --> 00:00:03.218
We're moving on to the sizzle
part of this particular workshop,

2
00:00:03.218 --> 00:00:05.301
which are some of these
new pseudo classes.

3
00:00:05.301 --> 00:00:09.996
And if you are following anyone who talks
about CSS on Twitter or other locations,

4
00:00:09.996 --> 00:00:14.963
you will find that they're talking about
these new pseudo classes called is, where,

5
00:00:14.963 --> 00:00:15.864
not, and has.

6
00:00:15.864 --> 00:00:17.424
Not has been around for a while.

7
00:00:17.424 --> 00:00:19.890
Is, where, and has are brand new ones.

8
00:00:19.890 --> 00:00:24.378
And so I wanted to take some
time to put some focus on these

9
00:00:24.378 --> 00:00:29.250
because they are mind blowingly
helpful and interesting and

10
00:00:29.250 --> 00:00:32.613
different as you write your HTML and CSS.

11
00:00:32.613 --> 00:00:39.169
All right, so this is our Iceland website
again, and Iceland was very kind.

12
00:00:39.169 --> 00:00:41.173
If you go to their government website,

13
00:00:41.173 --> 00:00:44.770
they will tell you what exactly those
hex codes for their flag colors.

14
00:00:44.770 --> 00:00:49.423
So that is of course what I have used
here on the Web page, are those, and

15
00:00:49.423 --> 00:00:53.660
I've set those up at the top
here as some variables.

16
00:00:53.660 --> 00:00:58.120
And as you'll recall here on the page,
just a couple of things to point out.

17
00:00:59.250 --> 00:01:01.120
We had this aside here in the middle and

18
00:01:01.120 --> 00:01:03.350
people were talking
about that as a sidebar.

19
00:01:03.350 --> 00:01:06.261
Generally speaking,
we think of that as vertically-oriented.

20
00:01:06.261 --> 00:01:07.843
Just to be different for you,

21
00:01:07.843 --> 00:01:12.274
I have made it horizontally-oriented right
here in the middle of the page, just to

22
00:01:12.274 --> 00:01:16.611
show you that a sidebar doesn't have to
actually be a vertical thing on the page.

23
00:01:16.611 --> 00:01:20.290
You could do something like that instead,
okay.

24
00:01:20.290 --> 00:01:24.229
So this is mostly a styled page
that we have going on here, but

25
00:01:24.229 --> 00:01:28.030
there's some things that maybe
we would want to improve.

26
00:01:28.030 --> 00:01:28.795
So for example,

27
00:01:28.795 --> 00:01:32.621
I've added a section here to this Web page
that talks about the animals of Iceland,

28
00:01:32.621 --> 00:01:35.701
because I know you're just dying
to know what animals live there.

29
00:01:35.701 --> 00:01:39.070
It is a long list of animals
that live there in Iceland.

30
00:01:39.070 --> 00:01:43.850
But we certainly have a gaping
bunch of the page over here, right?

31
00:01:43.850 --> 00:01:46.680
But then these lists get kinda long,
we have a lot of space.

32
00:01:46.680 --> 00:01:48.520
What are we going to do about that?

33
00:01:48.520 --> 00:01:50.909
That is one problem we might
wanna think about solving.

34
00:01:52.670 --> 00:01:55.763
We also might wanna think about
how I separated out one footer

35
00:01:55.763 --> 00:01:58.550
from the other footer
down here at the bottom.

36
00:01:58.550 --> 00:02:04.019
You could do that with classes, but I did
that in a different way just to show you.

37
00:02:09.646 --> 00:02:14.489
Okay, so we have down here, we have a
footer, that's sort of the generic footer

38
00:02:14.489 --> 00:02:18.068
styling that would apply to
both kinds of footers, right?

39
00:02:18.068 --> 00:02:22.976
If I were to say,
start a comment right here,

40
00:02:22.976 --> 00:02:29.963
both of my footers would look
the same way on this page like that.

41
00:02:29.963 --> 00:02:35.226
But because I separated these,
with the article footer coming second,

42
00:02:35.226 --> 00:02:39.634
then I could apply a different
kind of styling here for that.

43
00:02:39.634 --> 00:02:41.022
So that's what's going on for that.

44
00:02:43.118 --> 00:02:49.036
All right, so there's nothing new in that
CSS if you wanna read through it and

45
00:02:49.036 --> 00:02:51.323
see how I styled everything.

46
00:02:51.323 --> 00:02:53.632
You're gonna see a whole bunch
of stuff that I've done before.

47
00:02:53.632 --> 00:02:58.096
But now what I wanna do is I wanna go back
and refactor some of the code that I have

48
00:02:58.096 --> 00:03:01.200
here to make this a little
bit more efficient, okay?

49
00:03:01.200 --> 00:03:09.030
So we're gonna scroll back up here
in our CSS, Up here to the top.

50
00:03:09.030 --> 00:03:13.597
So here's something that is fairly
typical that you'll find inside of

51
00:03:13.597 --> 00:03:17.300
pretty much any kinda CSS
that's out there right now.

52
00:03:17.300 --> 00:03:21.456
Here on line 31,
I have a long list of article h1,

53
00:03:21.456 --> 00:03:25.490
article h2, article h3, article h4.

54
00:03:25.490 --> 00:03:30.278
Because I want all of these article
headings to be styled in a specific way,

55
00:03:30.278 --> 00:03:33.023
in this case, with a PT Serif font family.

56
00:03:33.023 --> 00:03:35.883
This is the way we've done it for
20 years,

57
00:03:35.883 --> 00:03:40.140
we've just made a huge,
long list of these kinda things.

58
00:03:40.140 --> 00:03:43.277
And inevitably,
somebody makes the mistake of this.

59
00:03:43.277 --> 00:03:48.833
They'll do article h2,
then, h3, h4, h5, right,

60
00:03:48.833 --> 00:03:54.380
and think that that actually
means the same thing.

61
00:03:54.380 --> 00:03:55.630
It doesn't.

62
00:03:55.630 --> 00:04:00.830
Okay, so that particular selector that
I just put there says for h2s located

63
00:04:00.830 --> 00:04:06.920
in an article and all h3s and all h4s,
right, for everywhere in the document.

64
00:04:06.920 --> 00:04:11.645
So you have to be verbose like this and
you have to repeat yourself over and

65
00:04:11.645 --> 00:04:12.950
over again.

66
00:04:12.950 --> 00:04:18.751
One of the brand new selectors is targeted
to making this a little bit easier to deal

67
00:04:18.751 --> 00:04:24.700
with, and it is for that reason that this
is just amazing to have this selector.

68
00:04:24.700 --> 00:04:26.760
So there are two of these.

69
00:04:26.760 --> 00:04:32.890
One of these is called is and
the other one is called where.

70
00:04:36.220 --> 00:04:39.510
And the difference has to do
with specificity for these.

71
00:04:39.510 --> 00:04:47.160
So where is less specific and
is is more specific.

72
00:04:47.160 --> 00:04:49.581
And I'm gonna leave it vague like that for

73
00:04:49.581 --> 00:04:54.300
now until we get to the specificity
part of this course later on, okay.

74
00:04:54.300 --> 00:04:58.195
So one way that you can rewrite these,

75
00:04:58.195 --> 00:05:03.794
the syntax is gonna be the same for
either one of these,

76
00:05:03.794 --> 00:05:09.394
but the way you could rewrite
this would be as follows,

77
00:05:09.394 --> 00:05:15.276
article :is, we could say h2,
h3, h4, h5, h6.

78
00:05:15.276 --> 00:05:16.673
Then we want,

79
00:05:25.107 --> 00:05:30.385
Then we're gonna wanna have the PT Serif
font family displaying here.

80
00:05:30.385 --> 00:05:39.730
And just to show you that this worked,
we could add to it a color, Fire-red.

81
00:05:39.730 --> 00:05:43.541
So that will select all of those
headings there on the page.

82
00:05:43.541 --> 00:05:47.687
In other words, we don't have to write
article h1, article h2, article h3 and

83
00:05:47.687 --> 00:05:50.311
all the commas separated,
we can now do it this way.

84
00:05:50.311 --> 00:05:55.144
So article is the thing that's in common,
these are what come after that.

85
00:05:55.144 --> 00:05:58.653
Does that kind of makes sense,
how that fits together?

86
00:05:58.653 --> 00:06:02.760
And you can change this from is to where,
that will also,

87
00:06:02.760 --> 00:06:06.792
in this environment,
it will work as well, I believe.

88
00:06:06.792 --> 00:06:10.370
You'll see absolutely
no change whatsoever.

89
00:06:10.370 --> 00:06:13.770
The specificity of the where
selector is lower.

90
00:06:13.770 --> 00:06:21.200
And I'm gonna talk all about specificity
in lots of detail most likely later on.

91
00:06:21.200 --> 00:06:26.450
Okay, so later on here,
we have an aside h3, all right?

92
00:06:26.450 --> 00:06:32.246
So basically, right now, for all of my
headings I want them to be PT Serif,

93
00:06:32.246 --> 00:06:36.030
but for my h3, I want it to be Fira Sans.

94
00:06:36.030 --> 00:06:39.933
And I've got the my aside h3 with a whole
bunch of other styling that goes with it,

95
00:06:39.933 --> 00:06:42.980
it comes later in the document,
and it works fine.

96
00:06:42.980 --> 00:06:47.139
But I could combine this
particular issue here,

97
00:06:47.139 --> 00:06:53.160
this font family Sans Serif,
with the selector that I just wrote.

98
00:06:53.160 --> 00:06:57.316
But another way that I could
do this is simply to say,

99
00:06:57.316 --> 00:07:03.330
all of those h3s except for,
right, just not this type of h3.

100
00:07:03.330 --> 00:07:06.508
In this case, it's an h3 inside an aside.

101
00:07:06.508 --> 00:07:11.497
So we could rewrite that,
I'm just gonna remove that style here,

102
00:07:11.497 --> 00:07:14.180
you'll see it reverts to PT Serif.

103
00:07:15.520 --> 00:07:18.940
Let's go back to my is style up here.

104
00:07:18.940 --> 00:07:23.761
So here, what I'm going to do this,

105
00:07:23.761 --> 00:07:29.277
is h3:not, Aside h3.

106
00:07:32.876 --> 00:07:35.205
Sweet?

107
00:07:35.205 --> 00:07:42.113
So now for all h3s, make it PT Sans,
but not the aside h3.

108
00:07:42.113 --> 00:07:44.661
The aside h3 is not gonna get this style.

109
00:07:46.279 --> 00:07:48.948
So it is just gonna continue
on being Fari Sans.

110
00:07:48.948 --> 00:07:50.504
Makes sense?

111
00:07:50.504 --> 00:07:55.424
So we're getting very efficient with our
selectors, right, kind of refactoring.

112
00:07:55.424 --> 00:07:59.038
And it may be that the easiest way for you
to work with these is to write your CSS

113
00:07:59.038 --> 00:08:01.865
first and then refactor,
do these little mini refactors,

114
00:08:01.865 --> 00:08:05.395
just like what we're doing here to
make this a little bit more efficient.

115
00:08:05.395 --> 00:08:08.425
By the way, of course, you'll wanna
check with browser support for

116
00:08:08.425 --> 00:08:10.419
whatever browsers it is that you're using.

117
00:08:10.419 --> 00:08:13.454
These are kind of cutting bleeding edge,

118
00:08:13.454 --> 00:08:18.058
the last few versions of browsers
support these at the moment.

119
00:08:18.058 --> 00:08:25.420
Okay, and then we have my last favorite
trick here which has to do with hats.

120
00:08:25.420 --> 00:08:28.646
And this just blew my
mind when I saw this one.

121
00:08:28.646 --> 00:08:32.539
All right, so we're gonna deal
with this list of animals here.

122
00:08:32.539 --> 00:08:38.458
Now, it would be really nice to be able to
take these bullets that I have here and

123
00:08:38.458 --> 00:08:41.360
maybe make some columns out of them.

124
00:08:41.360 --> 00:08:42.940
Wouldn't that be great?

125
00:08:42.940 --> 00:08:47.710
And we could write flexbox to do this,
or we could write columns to do that.

126
00:08:47.710 --> 00:08:52.030
But it would be even better if
we could make this conditional.

127
00:08:52.030 --> 00:08:58.063
So in other words, if Iceland suddenly
gains a whole bunch of animals.

128
00:08:58.063 --> 00:09:03.392
[LAUGH] A whole bunch of new animals move
to Iceland and this list gets longer, or

129
00:09:03.392 --> 00:09:08.639
a bunch of animals die off and this list
gets shorter, we will be able to handle

130
00:09:08.639 --> 00:09:13.996
that inside of some kind of conditional
code that we'll format accordingly.

131
00:09:13.996 --> 00:09:18.570
And so the way that we can do
this is with the has selector.

132
00:09:18.570 --> 00:09:19.920
So has is this wild and

133
00:09:19.920 --> 00:09:24.810
crazy one that selects completely
differently than everybody else.

134
00:09:24.810 --> 00:09:27.491
So as I have told you
now a couple of times,

135
00:09:27.491 --> 00:09:32.258
we write our selectors left to right,
but we read them from right to left.

136
00:09:32.258 --> 00:09:36.344
We go from deep in our
HTML going outwards.

137
00:09:36.344 --> 00:09:38.430
Has goes the other direction.

138
00:09:38.430 --> 00:09:41.910
It's gonna start from the parents and
work down to the children.

139
00:09:41.910 --> 00:09:45.824
It looks for patterns on the parents and
then applies,

140
00:09:45.824 --> 00:09:49.483
if that pattern in parentage works,
or ancestry,

141
00:09:49.483 --> 00:09:53.993
I should be more specific,
if that pattern of ancestry works,

142
00:09:53.993 --> 00:09:58.580
then it will apply styles
to the specific children.

143
00:09:58.580 --> 00:10:03.410
And so the crazy thing that we can do with
this has to do with that list layout.

144
00:10:05.310 --> 00:10:10.000
So I'm just gonna add this down here
to the bottom after everything else.

145
00:10:10.000 --> 00:10:11.099
What we can do is this.

146
00:10:13.180 --> 00:10:15.880
So it's an unordered list, right, ul:has.

147
00:10:18.800 --> 00:10:24.250
And what I'm gonna say is,
for my li:nth-child(6).

148
00:10:25.600 --> 00:10:31.140
In other words, we're testing to see if we
have at least six children in this list.

149
00:10:32.630 --> 00:10:35.530
Because we just tested to see
if the sixth one is there.

150
00:10:35.530 --> 00:10:40.895
If there are 6, let's make columns 2.

151
00:10:45.036 --> 00:10:46.889
Whoa, [SOUND] sizzle, sizzle, right?

152
00:10:46.889 --> 00:10:51.946
So now it's smart enough to know that I
have at least six things in that list.

153
00:10:51.946 --> 00:10:52.960
Why six?

154
00:10:52.960 --> 00:10:53.860
I don't know.

155
00:10:53.860 --> 00:10:55.400
I just decided that was a good spot.

156
00:10:55.400 --> 00:10:58.890
And it's smart enough here, by the way,
to make those relatively even.

157
00:10:58.890 --> 00:11:00.004
I think there are 15 of these.

158
00:11:00.004 --> 00:11:04.850
So one column has eight and
the other column has seven, right?

159
00:11:06.350 --> 00:11:08.630
So we can apply even further styling.

160
00:11:08.630 --> 00:11:10.300
We just put it a little
further down the page.

161
00:11:10.300 --> 00:11:14.763
So ul:has(li:nth-child),

162
00:11:14.763 --> 00:11:18.461
let's say the 11 of them.

163
00:11:18.461 --> 00:11:22.113
So if there's 11 of them,
that may still look a little bit long.

164
00:11:22.113 --> 00:11:29.309
Then we can say, columns: 3, waah.

165
00:11:29.309 --> 00:11:34.187
So it's smart enough to know that in my
15-item list, I do have an 11th child.

166
00:11:34.187 --> 00:11:37.665
So now we're going to set it
up with three columns instead.

167
00:11:37.665 --> 00:11:42.269
And it doesn't apply to the seabirds
where there were only three of those.

168
00:11:42.269 --> 00:11:44.838
So it doesn't fit either of those tests.

169
00:11:44.838 --> 00:11:49.489
It doesn't fit that there are 6 items,
doesn't fit that there are 11 items, yes.

170
00:11:49.489 --> 00:11:52.569
Yes, Mark says has, is, and

171
00:11:52.569 --> 00:11:58.130
where are difficult to search for
on search engines.

172
00:11:58.130 --> 00:12:00.250
You're absolutely correct on that.

173
00:12:00.250 --> 00:12:02.780
That is because they
are brand spanking new.

174
00:12:02.780 --> 00:12:09.564
I would just suggest that you go do
a search for MDN CSS has, MDN CSS where,

175
00:12:09.564 --> 00:12:17.070
those will pull up the pages with
information about where, is, and has.

176
00:12:17.070 --> 00:12:19.600
Yeah, and
they were very happy in the chat.

177
00:12:19.600 --> 00:12:20.910
So there's that.

178
00:12:21.930 --> 00:12:24.837
Okay, so this is a really cool use of has.

179
00:12:24.837 --> 00:12:26.651
We can apply conditional formatting.

180
00:12:26.651 --> 00:12:29.800
It's not a media query,
it's not anything like that,

181
00:12:29.800 --> 00:12:32.950
we're just testing to see how
many things are in a list.

182
00:12:32.950 --> 00:12:36.870
And if there are enough of them,
we'll just put some columns in place.

