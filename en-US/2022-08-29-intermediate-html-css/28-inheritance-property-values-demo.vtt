WEBVTT

1
00:00:00.488 --> 00:00:04.432
So as I've just told you and
as I've just demonstrated,

2
00:00:04.432 --> 00:00:10.367
many properties inherit automatically it's
part of their DNA, it's what they do.

3
00:00:10.367 --> 00:00:14.907
But, we can force inheritance
in some some cases as well,

4
00:00:14.907 --> 00:00:19.550
enforcing inheritance is done
through the inherit value.

5
00:00:19.550 --> 00:00:24.433
So we can assign inherit to pretty
much any type of property in CSS and

6
00:00:24.433 --> 00:00:30.019
it will inherit whatever is coming from
the parent and that's the key point.

7
00:00:30.019 --> 00:00:33.547
So regular inheritance goes on forever,

8
00:00:33.547 --> 00:00:39.391
using the inherit keyword will only
go as far back as one generation so

9
00:00:39.391 --> 00:00:43.341
to speak only back to the parent and
no father.

10
00:00:43.341 --> 00:00:48.248
So let's take a look at how that works
as well, all right, so what we have here

11
00:00:48.248 --> 00:00:53.155
in our example is the same HTML that we
just had from the previous example, and

12
00:00:53.155 --> 00:00:57.909
now I have changed nothing in that HTML,
so all the IDs, all the classes and

13
00:00:57.909 --> 00:01:00.206
the text is all basically the same.

14
00:01:00.206 --> 00:01:03.108
And we're gonna switch
over to our CSS here.

15
00:01:03.108 --> 00:01:06.042
And some of the styling that I
just showed you is still there.

16
00:01:06.042 --> 00:01:10.619
So here is the body image,
any link hover and

17
00:01:10.619 --> 00:01:17.191
clearing the float, and
a little bit of styling on the footer.

18
00:01:17.191 --> 00:01:17.961
Okay, So,

19
00:01:17.961 --> 00:01:22.895
let's try putting on some properties
here that definitely do not inherit.

20
00:01:22.895 --> 00:01:26.609
Anything having to do with Box Model
typically does NOT inherit.

21
00:01:26.609 --> 00:01:28.174
So the border is one of those.

22
00:01:28.174 --> 00:01:36.014
So let's say the article has going to
have a border of two pixels solid blue

23
00:01:37.604 --> 00:01:41.864
So there is a nice blue box
around that particular webpage.

24
00:01:41.864 --> 00:01:46.898
As you know of course it doesn't
inherit because if it did inherit

25
00:01:46.898 --> 00:01:52.112
we would see borders around our
paragraphs and our H ones and so on and

26
00:01:52.112 --> 00:01:57.786
so forth, we can force this inheritance
if we want to simply by saying p and

27
00:01:57.786 --> 00:01:59.735
then border:inherit.

28
00:01:59.735 --> 00:02:04.267
So by setting it up this way, I'm now
stating that all of my paragraphs should

29
00:02:04.267 --> 00:02:06.931
inherit that same border
from their parent.

30
00:02:06.931 --> 00:02:12.820
And if we take a look at our HTML,
you'll see there's that article.

31
00:02:12.820 --> 00:02:16.872
Right, that's the first big
blue box around everything and

32
00:02:16.872 --> 00:02:21.401
then we have our paragraph for
cloud, starts get tough with it, and

33
00:02:21.401 --> 00:02:25.633
we have our paragraph for tree,
that says pretend your water.

34
00:02:25.633 --> 00:02:31.483
Notice that we do have a paragraph
that's down here in the footer.

35
00:02:31.483 --> 00:02:34.832
The footer is descended from the article.

36
00:02:34.832 --> 00:02:39.484
But the paragraph is not a direct
descendant, paragraph is more of

37
00:02:39.484 --> 00:02:44.149
a grandchild relative to the article
as opposed to a direct child.

38
00:02:44.149 --> 00:02:47.981
And the paragraph in the footer
does not have a border around it.

39
00:02:47.981 --> 00:02:55.154
That's because we only go back
one level on that inheritance.

40
00:02:55.154 --> 00:02:58.012
You might be wondering
how far can we push this?

41
00:02:58.012 --> 00:03:02.734
So here I've declared on my article
that the border is going to be on all

42
00:03:02.734 --> 00:03:04.183
four sides, right?

43
00:03:04.183 --> 00:03:09.780
What if I said just,
I want it only on the border bottom.

44
00:03:09.780 --> 00:03:14.180
That is also legal because border
bottom is a subset of that border

45
00:03:14.180 --> 00:03:15.546
property overall.

46
00:03:15.546 --> 00:03:21.295
So now I can just put in simply those
borders on the bottom of those paragraphs,

47
00:03:21.295 --> 00:03:23.919
not necessarily on all four sides.

48
00:03:26.719 --> 00:03:31.482
But what if I wanted to have those borders
on the bottom I wanted them to be green

49
00:03:31.482 --> 00:03:35.751
instead of blue, well unfortunately
that is not gonna be possible.

50
00:03:35.751 --> 00:03:40.589
Border bottom inherit will pull in all
of the properties from the parent,

51
00:03:40.589 --> 00:03:43.254
but it's not going to change the color.

52
00:03:43.254 --> 00:03:50.385
What we'd have to do is add to this
then something like border-color:green.

53
00:03:50.385 --> 00:03:54.177
And putting it after that
border bottom inherit,

54
00:03:54.177 --> 00:04:00.058
means that we bring in the blue border and
then we change it to the green color.

55
00:04:00.058 --> 00:04:05.785
What would happen if I put this border
color before the border bottom inherit,

56
00:04:05.785 --> 00:04:07.277
what would happen?

57
00:04:07.277 --> 00:04:08.291
Take a guess.

58
00:04:15.071 --> 00:04:18.254
Sure enough,
the cascade is still in effect.

59
00:04:18.254 --> 00:04:23.065
So even though I said that it was green,
because border bottom inherit comes later,

60
00:04:23.065 --> 00:04:24.505
it will be blue instead.

61
00:04:24.505 --> 00:04:29.276
Now inside of our paragraphs,
At least those

62
00:04:29.276 --> 00:04:34.054
two particular paragraphs,
you'll see here that I have some links.

63
00:04:34.054 --> 00:04:37.174
So I have fluff this cloud and
I have happy little limbs.

64
00:04:37.174 --> 00:04:39.449
Both of those are links.

65
00:04:39.449 --> 00:04:45.503
What would happen if I tried to
inherit the border to those links?

66
00:04:45.503 --> 00:04:52.458
So if I said a { border-bottom: inherit;

67
00:04:55.145 --> 00:04:59.107
So now I can inherit the border-bottom
underneath the links,

68
00:04:59.107 --> 00:05:02.260
sorry it's double underlined,
but there we go.

69
00:05:02.260 --> 00:05:09.496
We have those links also now have
a blue border underneath of them.

70
00:05:09.496 --> 00:05:13.956
But if I wanted to change this,
say to border top inherit,

71
00:05:13.956 --> 00:05:16.697
we don't inherit anything at all.

72
00:05:16.697 --> 00:05:23.191
That's because the parent only has
a border bottom to inherit to this A.

73
00:05:23.191 --> 00:05:25.496
It doesn't have the full border,

74
00:05:25.496 --> 00:05:30.502
I would have to change this back to
the full border that is being inherited,

75
00:05:30.502 --> 00:05:34.006
in order for
border tops take effect over the links.

76
00:05:34.006 --> 00:05:38.930
So basically there's some limitations as
to how you can inherit properties from one

77
00:05:38.930 --> 00:05:40.882
particular element to another.

78
00:05:40.882 --> 00:05:44.181
Remember, you have to have a direct
parent child relationship.

79
00:05:44.181 --> 00:05:48.228
If you are using a more complicated
type of declaration like a border

80
00:05:48.228 --> 00:05:51.636
declaration where it might
be on four sides, two sides,

81
00:05:51.636 --> 00:05:55.470
one side, whatever, the inheritance
is going to be a little bit

82
00:05:55.470 --> 00:05:59.172
more complicated as to what's
available to those children.

83
00:05:59.172 --> 00:06:02.706
And if you wanna override anything
that's coming from the parent,

84
00:06:02.706 --> 00:06:06.240
you need to make sure it comes after
your inherited declaration, so

85
00:06:06.240 --> 00:06:09.723
that it will take priority over
what comes in via its inheritance.

86
00:06:13.745 --> 00:06:14.598
Any questions so far?

87
00:06:14.598 --> 00:06:19.227
All right, so now we have taken
it's properties that don't normally

88
00:06:19.227 --> 00:06:24.024
inherit we've used the inherit
Keyword in order to force inheritance.

89
00:06:24.024 --> 00:06:28.023
What about when inheritance is happening
and we don't want it to happen?

90
00:06:28.023 --> 00:06:30.804
How can we turn off inheritance?

91
00:06:30.804 --> 00:06:34.854
One of the great ways to take
a look at the this in detail

92
00:06:34.854 --> 00:06:37.563
is looking at a link in particular.

93
00:06:37.563 --> 00:06:40.564
So here I have, a paragraph here,

94
00:06:40.564 --> 00:06:45.853
it's got a font family font size,
a color and a border on it.

95
00:06:45.853 --> 00:06:50.481
So one of those will inherit the font
family, the font size and the color.

96
00:06:50.481 --> 00:06:53.508
The border of course does
not inherit by default.

97
00:06:55.164 --> 00:06:58.992
If we take a look at our hover state,
when I just hover over this link,

98
00:06:58.992 --> 00:07:02.504
right now I haven't applied any
special link styling to this.

99
00:07:02.504 --> 00:07:07.282
So all of the styling is coming from
the user agent or the browser stylesheet,

100
00:07:07.282 --> 00:07:11.914
which as you know means it's going to
be blue and underlined when the link is

101
00:07:11.914 --> 00:07:16.127
unvisited, it's purple and
underlined when the link is visited.

102
00:07:16.127 --> 00:07:21.025
So depending on whether you've been to
the front end masters website today,

103
00:07:21.025 --> 00:07:25.937
that link will either show up as blue or
purple inside of your browser window.

104
00:07:25.937 --> 00:07:31.318
By default, there is no hover state,
necessarily on that link.

105
00:07:31.318 --> 00:07:35.516
It looks exactly the same as
whatever state your link is in now,

106
00:07:35.516 --> 00:07:38.528
so if you visited the link
it'll be purple and

107
00:07:38.528 --> 00:07:43.045
underlined when you hover over it
if you haven't visited the link,

108
00:07:43.045 --> 00:07:46.637
it'll be blue and
underlined when you hover over it.

109
00:07:46.637 --> 00:07:53.485
So I'm gonna style up that link now we'll
start with just a simple a style and

110
00:07:53.485 --> 00:07:58.737
I'm going to use the key property of all,
all:inherit.

111
00:07:58.737 --> 00:08:04.353
All right, so I'm telling the link to
inherit everything from its parent so

112
00:08:04.353 --> 00:08:06.558
the parent is the paragraph.

113
00:08:06.558 --> 00:08:11.485
Notice of what's happened here,
we have now the words front end masters

114
00:08:11.485 --> 00:08:16.492
are green and not underlined like
the paragraph, it has a border around it

115
00:08:16.492 --> 00:08:21.614
like the paragraph and what else it's
on its own line, isn't that weird?

116
00:08:21.614 --> 00:08:25.559
We'll remember that paragraphs
are block level elements,

117
00:08:25.559 --> 00:08:28.572
so they have a display
block set on them whereas

118
00:08:28.572 --> 00:08:32.296
links are in line they have
a display in lines set on them.

119
00:08:32.296 --> 00:08:37.755
In this case, front and masters
that link has inherited the display

120
00:08:37.755 --> 00:08:43.808
property as well from its parent and so
it is displaying as a block element.

121
00:08:43.808 --> 00:08:47.698
Note that this link is
indeed still a link.

122
00:08:47.698 --> 00:08:48.967
We can roll our mouse over it.

123
00:08:48.967 --> 00:08:51.693
It looks like I'm rolling my
mouse over the paragraph,

124
00:08:51.693 --> 00:08:53.207
it looks like it's an eye bar.

125
00:08:53.207 --> 00:08:57.286
Instead of the cursor that looks
like a finger pointer thing,

126
00:08:57.286 --> 00:09:00.120
as I roll over the link but
it is clickable.

127
00:09:00.120 --> 00:09:03.784
So when I click it,
it opens up in a new window.

128
00:09:03.784 --> 00:09:08.734
So inherit is really serious business,
it will literally inherit everything

129
00:09:08.734 --> 00:09:12.043
from its parent when you
have the set to all inherit.

130
00:09:12.043 --> 00:09:17.252
Now I'd like to go into some values
that you can use with any CSS property,

131
00:09:17.252 --> 00:09:20.964
that will control certain
aspects of inheritance.

132
00:09:20.964 --> 00:09:25.841
We use the generic inherit keyword
before to inherit certain properties.

133
00:09:25.841 --> 00:09:30.839
But with these properties we are going
to cancel parts of the inheritance,

134
00:09:30.839 --> 00:09:35.519
and the key words that we're going
to use for these values are revert,

135
00:09:35.519 --> 00:09:36.887
initial and unset.

136
00:09:36.887 --> 00:09:41.145
So let's look at those in
the context of this link.

137
00:09:41.145 --> 00:09:43.698
Okay, so
I am going to change my 'a' here and

138
00:09:43.698 --> 00:09:48.291
we're going to do this inheritance
between the 'a' and the 'a' hover state.

139
00:09:48.291 --> 00:09:50.387
So, as I demonstrated before,

140
00:09:50.387 --> 00:09:54.826
your link when you hover over it
right now really has no change to it.

141
00:09:54.826 --> 00:09:58.621
So I'm hovering over my link,
there's no change to it.

142
00:09:58.621 --> 00:10:01.780
So let's make some changes happen to it.

143
00:10:01.780 --> 00:10:04.121
For my a, I'm going to style it this way.

144
00:10:04.121 --> 00:10:11.197
I'm gonna say the font-family:courier,

145
00:10:11.197 --> 00:10:14.927
monospace and the color

146
00:10:18.304 --> 00:10:23.198
Is brown, okay?

147
00:10:23.198 --> 00:10:26.132
So when I roll my mouse over that link,

148
00:10:26.132 --> 00:10:30.363
it will continue to be brown and
courier, by default.

149
00:10:30.363 --> 00:10:34.686
So now I'm going to start changing
some of these properties on hover.

150
00:10:34.686 --> 00:10:39.711
So when I go to a:hover, I'm gonna

151
00:10:39.711 --> 00:10:45.253
use my all property and
I'm going to say initial as the value.

152
00:10:45.253 --> 00:10:48.277
So we are going to try
to reset some things,

153
00:10:48.277 --> 00:10:53.065
this is going to strip away all of
the styling even the styling that is

154
00:10:53.065 --> 00:10:58.195
coming from the users from the stylesheet
of the browser the user agent.

155
00:10:58.195 --> 00:11:02.922
So when I roll over this,
notice what happens,

156
00:11:02.922 --> 00:11:09.902
it completely changes and
what we wind up with, it's a little weird.

157
00:11:09.902 --> 00:11:14.370
I am hovered over it right there
at that point with my browser.

158
00:11:14.370 --> 00:11:20.170
You'll see the words front and
masters are roughly 1 RAM.

159
00:11:20.170 --> 00:11:23.945
There are Times new roman,
they are not blue.

160
00:11:23.945 --> 00:11:25.555
They're not underlined.

161
00:11:25.555 --> 00:11:27.347
They don't look any way like link.

162
00:11:27.347 --> 00:11:31.049
We have stripped away all of
the styling from everywhere.

163
00:11:31.049 --> 00:11:33.392
The default browser styling is gone.

164
00:11:33.392 --> 00:11:37.792
All of the styling from above where
I have the font family of courier and

165
00:11:37.792 --> 00:11:40.402
the color of brown, everything is gone,

166
00:11:40.402 --> 00:11:45.339
we blew it all away and all we're left
with is some basic text there on the page.

167
00:11:45.339 --> 00:11:50.295
So initial, the job of initial is to
strip away all the styling that's

168
00:11:50.295 --> 00:11:53.575
being inherited from
anywhere along the way.

169
00:11:58.272 --> 00:12:00.418
The next keyword is revert.

170
00:12:02.368 --> 00:12:06.905
And what revert will do is,
it's kind of an undo button.

171
00:12:06.905 --> 00:12:11.644
So when I roll over this link with revert,
you'll notice that if you have not

172
00:12:11.644 --> 00:12:16.780
visited the front end masters link lately,
it will still be blue and underlined.

173
00:12:16.780 --> 00:12:20.932
If you have visited that link lately,
it'll be purple and underlined.

174
00:12:20.932 --> 00:12:23.798
So that is what revert is going to do.

175
00:12:23.798 --> 00:12:28.086
It will strip away basically what comes
before it in the author stylesheet.

176
00:12:28.086 --> 00:12:31.998
And it will leave in place what it
would have gotten from, in this case,

177
00:12:31.998 --> 00:12:35.066
the user agent stylesheet or
the browser stylesheet and

178
00:12:35.066 --> 00:12:37.499
it will wind up looking
that way by default.

179
00:12:37.499 --> 00:12:40.361
So notice the font is gone,
the color is gone.

180
00:12:40.361 --> 00:12:45.766
That's what happens on hover, so
that is the purpose of revert.

181
00:12:45.766 --> 00:12:50.960
So the last one here is unset, and
if we put in unset here on hover,

182
00:12:50.960 --> 00:12:55.882
then when I roll over the link
notice what's happening here.

183
00:12:55.882 --> 00:13:01.443
So basically, what we've done is,
the immediate parent in this case,

184
00:13:01.443 --> 00:13:05.927
the 'a' has set to courier
monospace in a color of brown.

185
00:13:05.927 --> 00:13:10.120
The paragraph is set to
aerial with a color of green.

186
00:13:10.120 --> 00:13:13.801
Now what has happened
with this unset property?

187
00:13:13.801 --> 00:13:17.685
When I roll over my link,
we've stripped away the styling for

188
00:13:17.685 --> 00:13:21.876
the 'a', and we've gone back to
the styling for the paragraph.

189
00:13:21.876 --> 00:13:26.076
In other words,
we've skipped back to basically the great,

190
00:13:26.076 --> 00:13:28.509
kind of the grandparent, I guess.

191
00:13:28.509 --> 00:13:31.974
But we've gone back to an earlier
version of that styling.

192
00:13:31.974 --> 00:13:36.356
We've stripped away the immediate 'a'
styling and gone back to the styling that

193
00:13:36.356 --> 00:13:39.292
is coming from the paragraph
in this particular case.

194
00:13:39.292 --> 00:13:46.180
So that's what's happening
here with the unset keyword.

195
00:13:46.180 --> 00:13:50.259
Finally let me just show you
that I've used unset, revert and

196
00:13:50.259 --> 00:13:55.435
initial now with the all property on hover
just to show you that you can use these

197
00:13:55.435 --> 00:14:00.395
with individual properties, you don't
have to always use them with all.

198
00:14:00.395 --> 00:14:03.826
Let me show you how that would work.

199
00:14:03.826 --> 00:14:10.529
So now on hover,
let's just say I want the color to revert.

200
00:14:10.529 --> 00:14:15.645
So when I roll over my link now,
revert remember is going to revert

201
00:14:15.645 --> 00:14:21.334
me to what is coming from the user
agent stylesheet in terms of its color.

202
00:14:21.334 --> 00:14:26.584
Now, we can go back to
our font family revert.

203
00:14:26.584 --> 00:14:30.063
So this is gonna revert to again
to the user agent stylesheet.

204
00:14:30.063 --> 00:14:32.548
So when I roll over this
now it should be Arial.

205
00:14:34.319 --> 00:14:36.803
Sure enough, that's what happens and

206
00:14:36.803 --> 00:14:40.881
it will continue to be blue because
that we reset the color on it.

207
00:14:40.881 --> 00:14:43.804
But if I wanted to reset the font size,

208
00:14:47.086 --> 00:14:51.405
The font size is coming from
the paragraph not from the 'a'.

209
00:14:51.405 --> 00:14:55.329
And so it will actually have no effect.

210
00:14:55.329 --> 00:14:58.434
It will stay the font size that it is,

211
00:14:58.434 --> 00:15:03.942
the font size is too far back,
that declaration is too far back for

212
00:15:03.942 --> 00:15:08.666
revert to take effect here
in this particular example.

213
00:15:08.666 --> 00:15:13.798
Okay, so that's a little bit about
the all property, the revert,

214
00:15:13.798 --> 00:15:19.755
initial and unset values and how you can
apply them inside of your style sheet.

215
00:15:19.755 --> 00:15:22.419
We've just demonstrated
them here on links but

216
00:15:22.419 --> 00:15:26.690
of course you could use it with any type
of selector inside of your document.

