WEBVTT

1
00:00:00.450 --> 00:00:03.531
Okay, so we are gonna go back
to our same code pen here

2
00:00:03.531 --> 00:00:07.160
where we're looking at our
crazy unordered lists.

3
00:00:07.160 --> 00:00:11.390
And now I wanna move on to
the parent child selectors.

4
00:00:11.390 --> 00:00:16.436
So an example of this, let us say
that I want to select the li's here,

5
00:00:16.436 --> 00:00:21.221
let's say this li on line 11 and
maybe the one here on line 12,

6
00:00:21.221 --> 00:00:27.040
but I don't wanna select all of
the ones inside of the ordered list.

7
00:00:27.040 --> 00:00:32.179
I just wanna select the li's that are or

8
00:00:32.179 --> 00:00:39.600
direct children of that ul
with a class of nested.

9
00:00:39.600 --> 00:00:41.560
How might we go about doing that?

10
00:00:41.560 --> 00:00:47.720
Well, this is where, Okay,

11
00:00:47.720 --> 00:00:52.820
so this would be
the parent-child selector.

12
00:00:54.260 --> 00:00:56.890
And this would be a case,
where we might do something like that.

13
00:00:56.890 --> 00:01:00.010
So we could say .nested, right?

14
00:01:00.010 --> 00:01:06.870
And then we use a &gt; symbol and
then say li.

15
00:01:06.870 --> 00:01:10.453
So in other words, the children of nested.

16
00:01:10.453 --> 00:01:15.051
Now sometimes you also see it written
this way by the way, ul.nested.

17
00:01:15.051 --> 00:01:18.240
What does that means when
it's all one word like that?

18
00:01:18.240 --> 00:01:24.000
&gt;&gt; ul elements with the nested class,
&gt;&gt; Right, ul with the nested class.

19
00:01:24.000 --> 00:01:25.437
What if I did it this way?

20
00:01:25.437 --> 00:01:26.493
What would that mean?

21
00:01:26.493 --> 00:01:30.903
&gt;&gt; Starting with ul elements, they're
nested children direct list element and

22
00:01:30.903 --> 00:01:32.519
list item children to that.

23
00:01:32.519 --> 00:01:33.481
&gt;&gt; Right, close,

24
00:01:33.481 --> 00:01:38.097
you've read it from left to right there,
we wanna read them from right to left.

25
00:01:38.097 --> 00:01:43.342
So anybody else wanna take
another crack at that there

26
00:01:43.342 --> 00:01:48.588
are list items that our
children of a class of nested,

27
00:01:48.588 --> 00:01:51.516
which is descended from a ul.

28
00:01:51.516 --> 00:01:55.460
Okay, so remember there could be a great
big huge gap between that ul and

29
00:01:55.460 --> 00:01:57.370
the nested, right?

30
00:01:57.370 --> 00:02:00.003
Okay, but
if we put them together with no space,

31
00:02:00.003 --> 00:02:02.650
then it is a ul with
the class of nested together.

32
00:02:03.690 --> 00:02:08.546
Okay, so here, let's say border: 2px

33
00:02:08.546 --> 00:02:12.720
dotted orange, so there they are.

34
00:02:14.090 --> 00:02:15.133
Doesn't display very well.

35
00:02:15.133 --> 00:02:18.923
Let me change that color, black.

36
00:02:18.923 --> 00:02:19.772
There we go.

37
00:02:19.772 --> 00:02:22.893
So now you see, here's the thing,
another thing, and

38
00:02:22.893 --> 00:02:25.361
more things are the ones
that are selected.

39
00:02:25.361 --> 00:02:29.394
The two inside there though number points
number one and two, they still have that

40
00:02:29.394 --> 00:02:32.627
blue border on them.selected,
those are not selected, okay?

41
00:02:32.627 --> 00:02:35.660
So that is the purpose of
a parent child selector,

42
00:02:35.660 --> 00:02:38.489
we wanna select just
the immediate children.

43
00:02:38.489 --> 00:02:43.651
Where else do we see this type of pattern
where we have a parent and then we have

44
00:02:43.651 --> 00:02:49.154
its immediate children have certain
properties associated with it, anybody?

45
00:02:49.154 --> 00:02:51.761
That parent we just say
it can do one thing and

46
00:02:51.761 --> 00:02:53.957
its children can do something else.

47
00:02:53.957 --> 00:02:59.254
Flexbox and grid right, Flexbox and
grid same kinda relationship.

48
00:02:59.254 --> 00:03:04.806
We just say display flexbox on the parent
its children get very specific properties.

49
00:03:04.806 --> 00:03:05.758
Make sense?

50
00:03:05.758 --> 00:03:08.965
Same thing with display grid,
its children get very specific property.

51
00:03:08.965 --> 00:03:11.491
So here's how we would write that out,
this way.

52
00:03:13.582 --> 00:03:15.935
Okay, let's talk about siblings.

53
00:03:17.115 --> 00:03:20.635
I don't really wanna talk about my
brothers, but let's talk about siblings.

54
00:03:20.635 --> 00:03:26.695
So let's just continue on with
that ul with a class of nested.

55
00:03:26.695 --> 00:03:29.345
We have some li's that are here, right?

56
00:03:30.365 --> 00:03:38.707
And we can select those particular
li's In a very interesting way.

57
00:03:38.707 --> 00:03:42.656
So what I'm going to do,

58
00:03:42.656 --> 00:03:48.863
is I'm going to just say ul.nested and

59
00:03:48.863 --> 00:03:53.763
then I'm going to say li~li.

60
00:03:53.763 --> 00:03:58.768
And I am going to set this to be,
let's put

61
00:03:58.768 --> 00:04:04.490
some padding on him and
let's make them green.

62
00:04:05.570 --> 00:04:07.145
So when I put this on,

63
00:04:07.145 --> 00:04:11.710
notice that it's going to select
the same things that we had.

64
00:04:12.850 --> 00:04:19.550
Well, it'll actually select,
It's gonna select the same li's.

65
00:04:19.550 --> 00:04:24.369
Here's a thing, here's another thing,
and here's more things, but

66
00:04:24.369 --> 00:04:28.310
this time we're selecting
the siblings here, okay?

67
00:04:28.310 --> 00:04:31.180
So we'll close call them 1, 2, and 3.

68
00:04:31.180 --> 00:04:33.620
When I say that the color is green,

69
00:04:33.620 --> 00:04:36.998
how many of these li's
are going to turn green?

70
00:04:42.471 --> 00:04:45.210
One, how many say one?

71
00:04:45.210 --> 00:04:48.460
One li's turns green, how many say two,
two li's turned green?

72
00:04:50.410 --> 00:04:51.355
How many say three?

73
00:04:51.355 --> 00:04:54.418
Three li's turn green,
nobody has any clue.

74
00:04:54.418 --> 00:04:56.070
All right, so we'll just do it.

75
00:04:56.070 --> 00:05:00.925
Color green padding 1rem.

76
00:05:03.591 --> 00:05:07.675
Okay, so what's going on here?

77
00:05:07.675 --> 00:05:11.513
So we got the ul.nested
li we did that before, so

78
00:05:11.513 --> 00:05:16.486
we know that those are affected
from that part of the selector.

79
00:05:16.486 --> 00:05:21.409
li tilde li,
this is the general sibling selector.

80
00:05:21.409 --> 00:05:25.040
So we're saying an li with
a sibling of an li and

81
00:05:25.040 --> 00:05:28.125
it could be anywhere there in the list.

82
00:05:28.125 --> 00:05:31.075
So here we have three of these siblings.

83
00:05:31.075 --> 00:05:33.682
And we've only selected though,
the last two.

84
00:05:33.682 --> 00:05:36.958
Why isn't the first one selected?

85
00:05:36.958 --> 00:05:43.935
Because, The first one does not have
a sibling that comes before it.

86
00:05:44.945 --> 00:05:48.611
So remember when you write
this style of selector here,

87
00:05:48.611 --> 00:05:54.270
you have to have an li and the one that
said the end is the one that's affected.

88
00:05:54.270 --> 00:05:57.440
So, here we have the second sibling.

89
00:05:57.440 --> 00:06:01.330
Here's an li with a sibling of an li,
right?

90
00:06:01.330 --> 00:06:04.070
Oops, or an li with a sibling of an li.

91
00:06:06.500 --> 00:06:11.000
This one down here also has
a sibling of an li, all right?

92
00:06:12.060 --> 00:06:16.970
This one has a sibling, this one has
siblings, but not that first one.

93
00:06:19.650 --> 00:06:22.146
So that's what that means.

94
00:06:22.146 --> 00:06:22.750
Yes.

95
00:06:22.750 --> 00:06:26.299
&gt;&gt; Isn't that siblings are defined
by what comes after it?

96
00:06:26.299 --> 00:06:30.920
I don't quite understand why that
first li isn't being selected.

97
00:06:30.920 --> 00:06:34.240
&gt;&gt; So this is for
any li with a sibling of an li.

98
00:06:34.240 --> 00:06:39.550
So here we would have to work our way up
where we're working our way up the HTML.

99
00:06:39.550 --> 00:06:42.076
This li doesn't have an li
that comes before it.

100
00:06:42.076 --> 00:06:45.025
&gt;&gt; Okay, and so-
&gt;&gt; And that's why it's not selected.

101
00:06:45.025 --> 00:06:49.184
&gt;&gt; We would say that, that first li does
not have a sibling, is that accurate

102
00:06:49.184 --> 00:06:50.033
&gt;&gt; It has siblings,

103
00:06:50.033 --> 00:06:52.473
it's just doesn't have
one that comes before it.

104
00:06:54.169 --> 00:06:55.996
&gt;&gt; Okay, and
that's what the selector is saying.

105
00:06:55.996 --> 00:07:00.652
&gt;&gt; That's what the selector is saying
when that comes before it, right?

106
00:07:04.248 --> 00:07:05.746
Weird, but true.

107
00:07:08.916 --> 00:07:11.466
If we looked at our ol here,

108
00:07:19.149 --> 00:07:21.598
Neither of those actually got selected.

109
00:07:21.598 --> 00:07:23.614
Does that even apply?

110
00:07:23.614 --> 00:07:24.860
Let's see.

111
00:07:26.625 --> 00:07:29.910
Ul nest, well, this doesn't apply.

112
00:07:29.910 --> 00:07:34.269
That's not true that ul
is not a child of the ol.

113
00:07:34.269 --> 00:07:39.290
So here we have only one
li that is selected.

114
00:07:39.290 --> 00:07:44.009
So ul nested to the ol, that's not
a direct relationship there, remember,

115
00:07:44.009 --> 00:07:45.687
there's an li in between.

116
00:07:48.780 --> 00:07:54.398
So we could say that, That's legal.

117
00:07:56.046 --> 00:07:59.309
Yep, just have to follow the patterns
that are here in the HTML.

118
00:07:59.309 --> 00:08:03.440
That is what we're looking at,
what are the patterns, okay?

119
00:08:05.120 --> 00:08:07.700
Likewise, there's also a plus sign.

120
00:08:07.700 --> 00:08:11.826
This is gonna be harder to really
differentiate between the general sibling

121
00:08:11.826 --> 00:08:15.500
selector and this next one which
is the adjacent sibling selector,

122
00:08:15.500 --> 00:08:19.192
because they're gonna look like
they select the same things here.

123
00:08:19.192 --> 00:08:22.453
The adjacent sibling selector
means that it is directly next to,

124
00:08:22.453 --> 00:08:25.000
these two siblings are next to each other.

125
00:08:25.000 --> 00:08:27.961
So it is, for example,
the second and the third child,

126
00:08:27.961 --> 00:08:31.945
they are next to each other they would
be selected in this particular case.

127
00:08:31.945 --> 00:08:35.038
The general sibling selector
if we had the second child and

128
00:08:35.038 --> 00:08:40.010
the tenth child they're siblings, even
though there are many siblings in between.

129
00:08:40.010 --> 00:08:41.970
So the tilde would select those two,

130
00:08:41.970 --> 00:08:46.660
whereas the plus only selects the two that
are right immediately next to each other.

131
00:08:46.660 --> 00:08:49.582
That is the difference
between those two selectors.

132
00:08:49.582 --> 00:08:50.736
Yes.

133
00:08:50.736 --> 00:08:56.229
&gt;&gt; So it's not the element that comes
before it that is considered a sibling.

134
00:08:58.422 --> 00:09:02.885
&gt;&gt; No, because we have to start with an li
sort of think of it as like an anchor, and

135
00:09:02.885 --> 00:09:05.810
then we want the one that
comes immediately after.

136
00:09:05.810 --> 00:09:09.570
So here the second gets selected,
the second has one,

137
00:09:09.570 --> 00:09:13.510
maybe it has one after it,
those two would get selected.

138
00:09:13.510 --> 00:09:16.440
The third one has one immediately
after it, those two gets selected.

139
00:09:16.440 --> 00:09:19.912
So sometimes you'll see a whole
bunch of those selected, but

140
00:09:19.912 --> 00:09:24.205
just it's never the first one because
it doesn't follow the same pattern.

