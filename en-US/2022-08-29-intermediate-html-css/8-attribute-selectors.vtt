WEBVTT

1
00:00:00.082 --> 00:00:01.426
What is an attribute?

2
00:00:04.138 --> 00:00:07.813
&gt;&gt; Property on an HTML element
&gt;&gt; Property in the HTML element if

3
00:00:07.813 --> 00:00:12.149
the HTML element is a noun and
then the attributes are adjectives, so

4
00:00:12.149 --> 00:00:14.614
it's helpful to have a link with an a but

5
00:00:14.614 --> 00:00:18.460
it doesn't tell us anything if
we don't tell it where to go.

6
00:00:18.460 --> 00:00:21.948
So, href winds up being an attribute,
target is an attribute,

7
00:00:21.948 --> 00:00:23.248
title is an attribute.

8
00:00:23.248 --> 00:00:28.252
All of those things are attributes,
and the amazing thing is

9
00:00:28.252 --> 00:00:34.346
that in CSS we can select by attribute,
instead of selecting by element.

10
00:00:34.346 --> 00:00:39.063
Sometimes this is incredibly useful I have
some cool tricks to show you with this

11
00:00:40.985 --> 00:00:44.928
So first of all, there are many
kinds of attribute selectors.

12
00:00:44.928 --> 00:00:49.136
Those of you who like regular expressions,
you're gonna love attribute selectors

13
00:00:49.136 --> 00:00:53.167
because there's many different ways that
you can write this to select different

14
00:00:53.167 --> 00:00:55.610
parts of these particular
kinds of attributes.

15
00:00:55.610 --> 00:00:58.615
So let's go through what all of those are.

16
00:00:58.615 --> 00:01:02.875
Okay, so let's start with what's
called the simple attribute value.

17
00:01:02.875 --> 00:01:07.683
And basically, what the simple
attribute value is going to do,

18
00:01:07.683 --> 00:01:11.966
is simply test if that
particular attribute is present.

19
00:01:11.966 --> 00:01:17.445
So if I were to, for example,
let's test for the title attribute,

20
00:01:17.445 --> 00:01:22.172
and you're gonna put these in
square brackets like this.

21
00:01:22.172 --> 00:01:27.160
Okay, so square brackets, and
here I've put in the title attribute.

22
00:01:27.160 --> 00:01:30.168
So you just put in for
the simple attribute value,

23
00:01:30.168 --> 00:01:33.902
just put in the name of
the attribute that you're selecting.

24
00:01:33.902 --> 00:01:34.771
And then.

25
00:01:36.001 --> 00:01:43.109
You can style it however you want, so
let's say background-color: green.

26
00:01:45.487 --> 00:01:51.105
So those three things on the page have
a title attribute associated with them.

27
00:01:51.105 --> 00:01:54.961
Doesn't say anything about what
the value of that title attribute is?

28
00:01:54.961 --> 00:01:57.481
It just says that it has
the title attribute.

29
00:01:57.481 --> 00:01:58.068
Make sense?

30
00:01:59.591 --> 00:02:01.727
So that's a super simple one.

31
00:02:01.727 --> 00:02:06.251
Where we just test for
is something present or not.

32
00:02:06.251 --> 00:02:11.210
Now, what if you want to look for
an attribute that has an exact value?

33
00:02:11.210 --> 00:02:13.333
This is where it starts to
get a little bit weird.

34
00:02:16.428 --> 00:02:19.053
So I'll go through a few of these here.

35
00:02:22.487 --> 00:02:27.273
So I want the one let's see,
I have a title here in line five

36
00:02:27.273 --> 00:02:31.400
in this link I have a title
of unguessable, okay?

37
00:02:31.400 --> 00:02:37.448
So let's say that I want to select that
a title with a value of unguessable.

38
00:02:42.846 --> 00:02:45.106
Shockingly, it looks just like that.

39
00:02:51.322 --> 00:02:53.335
Now you can read that link again.

40
00:02:54.568 --> 00:02:59.486
Okay, so those other two links
that I have here that had title

41
00:02:59.486 --> 00:03:03.639
attributes did not match
the string unguessable.

42
00:03:03.639 --> 00:03:09.323
Here's the thing for those of you who are
concerned with the exact attribute value.

43
00:03:09.323 --> 00:03:14.069
It must match exactly letter for
letter, if there's a space, and

44
00:03:14.069 --> 00:03:16.864
we have more blah, blah in this title,

45
00:03:16.864 --> 00:03:21.902
because of course you can put in long
phrases in your title attribute.

46
00:03:21.902 --> 00:03:25.149
All of those words in that
order are spelled that way,

47
00:03:25.149 --> 00:03:29.060
with all those spaces and
punctuation it must be an exact match.

48
00:03:29.060 --> 00:03:35.695
It can be partial match, it can be
anything order than exactly that, okay?

49
00:03:35.695 --> 00:03:41.301
So that is what the exact attribute
value is, they don't float around.

50
00:03:41.301 --> 00:03:42.889
What did I have for my other titles?

51
00:03:44.971 --> 00:03:49.929
Okay, so here I have a line
if Guess here on line 26.

52
00:03:51.488 --> 00:03:56.676
And that is, here's the thing and
hiding in this one.

53
00:03:56.676 --> 00:04:03.395
Okay, so we have Guess, and we have
Guess this, so guess is here on line 26.

54
00:04:05.536 --> 00:04:07.948
Guess this is on line 33.

55
00:04:07.948 --> 00:04:09.378
And then we had unguessable.

56
00:04:09.378 --> 00:04:14.727
So the whole string unguessable
does not match those particular

57
00:04:14.727 --> 00:04:21.080
things that come later, even though it
has some of those letters in common.

58
00:04:25.511 --> 00:04:28.436
All right, so
then we'll do my other favorite one, so

59
00:04:28.436 --> 00:04:30.097
these are the three that I use.

60
00:04:30.097 --> 00:04:34.721
This is the attribute present or not
that's a useful one the exact match that's

61
00:04:34.721 --> 00:04:36.942
a useful one I use that a lot in my code.

62
00:04:36.942 --> 00:04:42.801
And this last one I also use a lot of my
code, and this is the partial match comes

63
00:04:42.801 --> 00:04:48.864
before comes after as long as it contains
part of the string, it will be a match.

64
00:04:48.864 --> 00:04:53.762
So this is the technical name,
is the arbitrary.

65
00:04:55.875 --> 00:05:00.739
Substring attribute value.

66
00:05:02.331 --> 00:05:07.491
And shockingly, title*= star for

67
00:05:07.491 --> 00:05:13.654
the wild card equals let's just say guess.

68
00:05:16.205 --> 00:05:20.623
And let us, what we got going on here.

69
00:05:20.623 --> 00:05:22.176
Let us put in a.

70
00:05:24.814 --> 00:05:29.003
Border 5 pixels dashed red.

71
00:05:31.357 --> 00:05:32.210
Okay.

72
00:05:33.293 --> 00:05:38.233
So notice that it put a border around
the one with the green background.

73
00:05:38.233 --> 00:05:41.182
Let me pick a different color black,

74
00:05:41.182 --> 00:05:46.805
I put a border around the very first
link up there at the top of the page.

75
00:05:46.805 --> 00:05:51.051
Guess was part of that string but
notice that it did not match later in

76
00:05:51.051 --> 00:05:55.385
the document where I had the word guess,
but it was a capital letter.

77
00:05:56.714 --> 00:06:00.540
Okay, so
it has to match in capitalization as well.

78
00:06:00.540 --> 00:06:04.181
So if I change this to a capital G for
Guess,

79
00:06:04.181 --> 00:06:08.542
then the last two are going
to be selected instead.

80
00:06:08.542 --> 00:06:09.415
Make sense?

81
00:06:13.115 --> 00:06:16.086
Okay, so that's what that is.

82
00:06:18.386 --> 00:06:21.918
Then we have the two that
I think of is for nerds.

83
00:06:21.918 --> 00:06:24.978
So you can also select
a beginning substring, or

84
00:06:24.978 --> 00:06:27.301
you can select an ending substring.

85
00:06:27.301 --> 00:06:30.986
So I'll just put that here
in your notes as well.

86
00:06:30.986 --> 00:06:37.030
So beginning substring selector.

87
00:06:40.077 --> 00:06:41.561
Would look like this.

88
00:06:41.561 --> 00:06:44.340
Title would be.

89
00:06:48.410 --> 00:06:51.601
Caret equals.

90
00:06:54.236 --> 00:07:01.512
In other words it's gonna start with this,
background-color: orange.

91
00:07:03.958 --> 00:07:05.047
It will start with it.

92
00:07:11.698 --> 00:07:15.671
&gt;&gt; One is Guess and one is Guess this.

93
00:07:15.671 --> 00:07:18.969
&gt;&gt; All right, and
the other one is Guess this yep, and

94
00:07:18.969 --> 00:07:22.531
then I have an ending substring selector.

95
00:07:22.531 --> 00:07:29.986
Ending substring selector,
which is gonna get title.

96
00:07:32.962 --> 00:07:35.975
Dollar sign equals this.

97
00:07:40.270 --> 00:07:43.736
Background-color: brown.

98
00:07:49.117 --> 00:07:51.043
Color yellow, okay, so

99
00:07:51.043 --> 00:07:57.109
that will select only the very last one
at the bottom because it ends with this.

100
00:08:00.404 --> 00:08:04.469
So let me open up my CSS window here,
so you can see all of these.

101
00:08:06.397 --> 00:08:08.040
So just a quick review on that.

102
00:08:08.040 --> 00:08:10.956
So the first one simple
attribute value just test for

103
00:08:10.956 --> 00:08:13.546
the presence or
absence of a given attribute.

104
00:08:13.546 --> 00:08:18.853
It's not gonna test as to any of its
value, just test if it's present.

105
00:08:20.854 --> 00:08:25.823
The exact attribute value is going
to guess like that string with that

106
00:08:25.823 --> 00:08:28.575
capitalization it is an exact match.

107
00:08:28.575 --> 00:08:34.102
So by the way, if I said,
capital Guess on this one,

108
00:08:34.102 --> 00:08:39.767
it would still not necessarily
select both of these.

109
00:08:39.767 --> 00:08:45.669
It's selects this one down here,
which has just guesses the full value,

110
00:08:45.669 --> 00:08:50.428
but Guess this the title with Guess this,
it doesn't match

111
00:08:50.428 --> 00:08:55.490
that because this is still part
of the value of that attribute.

112
00:08:55.490 --> 00:08:57.894
And so it won't match that.

113
00:09:00.391 --> 00:09:02.150
Okay, let me go back to what that was.

114
00:09:04.628 --> 00:09:08.038
All right, the arbitrary substring
attribute value beginning ending,

115
00:09:08.038 --> 00:09:08.926
it doesn't care.

116
00:09:08.926 --> 00:09:13.103
It just looks for the string somewhere
inside of the value of that particular

117
00:09:13.103 --> 00:09:15.072
attribute, which is really nice.

118
00:09:15.072 --> 00:09:17.438
And this tends to be the one
that I use all the time.

119
00:09:17.438 --> 00:09:20.687
But I know that we have a lot of hardcore
nerds out there who want it like

120
00:09:20.687 --> 00:09:22.942
a beginning substring or
an ending substring.

121
00:09:22.942 --> 00:09:27.614
So those exist as well and if you saw me
here, I had to like really read my notes

122
00:09:27.614 --> 00:09:32.301
it's because I never used them, but
they exist, so it may be useful to you.

