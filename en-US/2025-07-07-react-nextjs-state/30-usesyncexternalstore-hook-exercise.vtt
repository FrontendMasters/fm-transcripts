WEBVTT

1
00:00:00.240 --> 00:00:05.664
&gt;&gt; David Khourshid: Okay, so in this
exercise, we are syncing with an external

2
00:00:05.664 --> 00:00:10.327
store, and
this external store is responsible for

3
00:00:10.327 --> 00:00:14.640
showing us a bunch of flight information.

4
00:00:14.640 --> 00:00:16.640
And it updates every second or so.

5
00:00:16.640 --> 00:00:19.115
You could see that some of
the statuses are changing,

6
00:00:19.115 --> 00:00:20.600
some of the gates are changing.

7
00:00:20.600 --> 00:00:25.200
This is a very chaotic airport
that we're modeling over here.

8
00:00:25.200 --> 00:00:31.100
And what's happening is we're subscribing
to this store to get these flight updates.

9
00:00:31.100 --> 00:00:35.836
The way that we're doing that is we're
using useEffect to subscribe to this

10
00:00:35.836 --> 00:00:40.646
flight store, and we're setting the
flights and putting them in use date and

11
00:00:40.646 --> 00:00:43.340
then we're returning the flights.

12
00:00:43.340 --> 00:00:46.189
So just to get used to
USYNC external store,

13
00:00:46.189 --> 00:00:49.808
I want you to take a couple of minutes and
refactor this so

14
00:00:49.808 --> 00:00:54.980
that instead of UseState and UseEffect,
we use the USYNC external store hook.

15
00:01:01.220 --> 00:01:04.020
All right, so let's refactor this.

16
00:01:04.020 --> 00:01:06.980
We're going to use SYNC external store.

17
00:01:06.980 --> 00:01:10.500
And again,
it's going to take three arguments.

18
00:01:10.500 --> 00:01:14.660
The first one is a way to
subscribe to the flight store.

19
00:01:14.660 --> 00:01:19.369
And so we could just pass subscribe here
because looking at the implementation,

20
00:01:19.369 --> 00:01:23.190
we already have like this way of
subscribing and unsubscribing.

21
00:01:24.630 --> 00:01:29.628
So whenever we get new data,
it's going to basically add the callback

22
00:01:29.628 --> 00:01:33.190
to the listeners and
then call those listeners.

23
00:01:33.190 --> 00:01:38.230
So we get those flights and we also
have a way of getting the snapshot.

24
00:01:38.230 --> 00:01:41.190
So flightStore.getSnapshot.

25
00:01:41.190 --> 00:01:46.702
And since the snapshot is going to be
the the same whether it's the client or

26
00:01:46.702 --> 00:01:51.950
server, we could also safely pass
in this snapshot for here as well.

27
00:01:51.950 --> 00:01:56.766
And typically when you're using this with
external systems and not browser APIs,

28
00:01:56.766 --> 00:02:02.270
you'll realize that the client and the
server snapshot are going to be the same.

29
00:02:02.270 --> 00:02:07.070
So the return value of here
is what we're subscribing to.

30
00:02:07.070 --> 00:02:12.342
So we could say const
flights equals USYNC external

31
00:02:12.342 --> 00:02:17.613
store with all of that data,
and we're going to see

32
00:02:17.613 --> 00:02:23.740
that the end result is pretty
much exactly the same.

33
00:02:23.740 --> 00:02:28.940
So we're still subscribing, but we have
a much more concise way of doing that.

