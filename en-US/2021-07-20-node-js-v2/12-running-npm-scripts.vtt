WEBVTT

1
00:00:00.244 --> 00:00:03.687
Did I mention that or
I don't think I mentioned this?

2
00:00:03.687 --> 00:00:05.387
But you can also do multiple
installs at one time.

3
00:00:05.387 --> 00:00:07.405
So, I don't think I mentioned that.

4
00:00:07.405 --> 00:00:14.362
So if you wanted to install npm,
install lodash,

5
00:00:14.362 --> 00:00:19.178
express, react, typescripts.

6
00:00:19.178 --> 00:00:22.668
Just all these things,
you can do them all at the same time.

7
00:00:22.668 --> 00:00:25.282
And this is where you'll get
these long npm installs.

8
00:00:25.282 --> 00:00:29.439
I mean, I've literally had npm
installs where I'll just walk away,

9
00:00:29.439 --> 00:00:33.257
go watch some anime, come back,
check on it, walk away [LAUGH].

10
00:00:33.257 --> 00:00:36.797
Sometimes it takes forever,
depending on where you're installing from.

11
00:00:36.797 --> 00:00:39.555
Some internal things,
some proxy or whatever.

12
00:00:39.555 --> 00:00:42.063
In this case is was really fast,
I'm going really fast Internet and

13
00:00:42.063 --> 00:00:43.214
things are going really good.

14
00:00:43.214 --> 00:00:48.812
But yeah, you can install as many as you
want and the same goes for uninstaller.

15
00:00:48.812 --> 00:00:53.107
So, I'm gonna uninstall all of these and
it works pretty much the same.

16
00:00:53.107 --> 00:00:58.003
Yeah, I think that's pretty much
really all you need to know

17
00:00:58.003 --> 00:01:01.373
about installing and uninstalling npm.

18
00:01:01.373 --> 00:01:03.683
Now when it comes to running the scripts.

19
00:01:03.683 --> 00:01:07.753
So let's say we have this test script
here, right now it just says echo,

20
00:01:07.753 --> 00:01:09.910
no error, no test, specify exit 1.

21
00:01:09.910 --> 00:01:14.306
So, if you wanna run a script,
you can type in npm,

22
00:01:14.306 --> 00:01:19.950
followed by the run keyword,
followed by the name of the script.

23
00:01:19.950 --> 00:01:24.277
The only one that doesn't have to be
prefixed with the run keyword, is test.

24
00:01:24.277 --> 00:01:27.371
So, you don't have to put run on test,
you can actually just say npm test.

25
00:01:27.371 --> 00:01:31.816
And as you can see, it echoed out
error no test specified exit 1, right.

26
00:01:31.816 --> 00:01:33.712
So, cuz that's exactly what's here.

27
00:01:33.712 --> 00:01:38.064
It exited 1, remember I told you about
how the process could exit with a 1.

28
00:01:38.064 --> 00:01:39.788
That's where this came from.

29
00:01:39.788 --> 00:01:43.458
Exit 1 means error, that's what this is.

30
00:01:43.458 --> 00:01:44.486
This is an error.

31
00:01:44.486 --> 00:01:49.619
So, if you were to listen to
the standard error to standard out,

32
00:01:49.619 --> 00:01:52.005
you would see an error there.

33
00:01:52.005 --> 00:01:53.986
You could pipe into that and
write it to a log or

34
00:01:53.986 --> 00:01:56.136
something like that
because it's an exit of 1.

35
00:01:56.136 --> 00:01:58.803
Obviously, we can change the test
script to be whatever we want.

36
00:01:58.803 --> 00:02:01.847
And we will get into testing,
so you'll see how that works.

37
00:02:01.847 --> 00:02:04.028
But yeah, that you can change it.

38
00:02:04.028 --> 00:02:05.714
So, we can also add other things here.

39
00:02:05.714 --> 00:02:08.323
So, if I wanted to add, I don't know,

40
00:02:08.323 --> 00:02:11.417
I wanted to add something
that removed a file.

41
00:02:11.417 --> 00:02:15.808
So, I'll say,
I'm gonna add a script called remove.

42
00:02:15.808 --> 00:02:21.481
And it's going to,
actually let's make one called serve.

43
00:02:21.481 --> 00:02:23.905
So, I'll make one called serve.

44
00:02:23.905 --> 00:02:31.224
And it's going to open this index.html and
serve it on the browser, right?

45
00:02:31.224 --> 00:02:33.385
So, first I need to find
a package that will serve.

46
00:02:33.385 --> 00:02:37.791
I know one off the top of my head
it's literally called serve,

47
00:02:37.791 --> 00:02:39.588
some npm install serve.

48
00:02:39.588 --> 00:02:42.889
And I'm gonna save that globally,
actually.

49
00:02:42.889 --> 00:02:45.821
Someone's gonna say serve, like that.

50
00:02:45.821 --> 00:02:49.072
So while that's installing,
I'm gonna go back here and

51
00:02:49.072 --> 00:02:51.992
I'm going to say,
I'm going to use the serve cli.

52
00:02:51.992 --> 00:02:55.482
And I'm pretty sure I can
point it to a folder.

53
00:02:55.482 --> 00:02:57.949
And it'll find the index.html,
but it'll serve it for me.

54
00:02:57.949 --> 00:02:59.136
So, I'm gonna just do that.

55
00:02:59.136 --> 00:03:02.299
And let's see if that's done,
that seems to be done.

56
00:03:02.299 --> 00:03:07.990
Now I can serve an npm, run, serve,
and boom local host 5000 and

57
00:03:07.990 --> 00:03:13.291
it could not be found because I
clearly didn't set it up right and

58
00:03:13.291 --> 00:03:16.457
I didn't look at the documentation.

59
00:03:16.457 --> 00:03:18.960
But that wasn't the point
to get the serve, right?

60
00:03:18.960 --> 00:03:22.665
It was to show you that you can
pretty much customize how this works,

61
00:03:22.665 --> 00:03:24.876
you can literally do whatever you want.

62
00:03:24.876 --> 00:03:28.597
You can write bash script here,
you can put a JavaScript file here, and

63
00:03:28.597 --> 00:03:31.275
have it execute a JavaScript
file if you wanted to.

64
00:03:31.275 --> 00:03:33.229
So, you can literally
do whatever you want.

65
00:03:33.229 --> 00:03:35.151
And these scripts are very powerful.

66
00:03:35.151 --> 00:03:38.807
So, if you'd like,
hop into like a big repo at a big company.

67
00:03:38.807 --> 00:03:42.455
Don't be surprised if you see like 20
scripts here that are doing a whole bunch

68
00:03:42.455 --> 00:03:44.699
of crazy stuff,
because that's just how it is.

69
00:03:44.699 --> 00:03:48.056
npm serve, let's look at that,
right click.

70
00:03:48.056 --> 00:03:54.240
We got here, so the way serve works is,
serve a folder name.

71
00:03:54.240 --> 00:03:56.903
&gt;&gt; I think it also plays a role for
them and

72
00:03:56.903 --> 00:04:00.827
I think this was to ensure to react and
not just central.

73
00:04:00.827 --> 00:04:02.174
&gt;&gt; Yes, this is not central.

74
00:04:02.174 --> 00:04:03.642
Let's just let's do it the long way.

75
00:04:03.642 --> 00:04:07.890
So we'll say, serve like that and
let's see what happens.

76
00:04:09.833 --> 00:04:14.641
Run that, let's see what the network says.

77
00:04:14.641 --> 00:04:21.117
Network says, Come here.

78
00:04:21.117 --> 00:04:24.675
No request, there we go.

79
00:04:24.675 --> 00:04:29.088
404 not found, okay, let's try.

80
00:04:31.139 --> 00:04:36.863
Let's try, Let's just literally load up
that thing like that and see what happens.

81
00:04:36.863 --> 00:04:38.339
So, see that.

82
00:04:38.339 --> 00:04:41.646
You know what, it's because I'm
in the package directory, right?

83
00:04:41.646 --> 00:04:43.004
So, I got a CDO.

84
00:04:43.004 --> 00:04:44.761
So, there we go.

85
00:04:44.761 --> 00:04:47.529
Now, that should work.

86
00:04:47.529 --> 00:04:48.567
Let's try it now.

87
00:04:48.567 --> 00:04:50.971
So, do npm, run serve.

88
00:04:55.565 --> 00:05:00.423
Yeah, see, the problem is I'm in
a package.JSON that's in a package folder,

89
00:05:00.423 --> 00:05:03.647
but I'm trying to run it
on a sibling folder, right?

90
00:05:03.647 --> 00:05:09.444
So, this package.JSON would
have to exists on a higher up.

91
00:05:09.444 --> 00:05:13.151
So, what I was gonna do, I'm just gonna
just bring this over here, like this.

92
00:05:13.151 --> 00:05:14.206
There we go.

93
00:05:14.206 --> 00:05:17.176
&gt;&gt; You just do dot dots slash.

94
00:05:17.176 --> 00:05:19.619
&gt;&gt; Or I can do dot dot slash shot,
I guess that will work too.

95
00:05:19.619 --> 00:05:22.034
So, yeah,
obviously that's the easy answer.

96
00:05:22.034 --> 00:05:23.824
But all right, so we just did that.

97
00:05:23.824 --> 00:05:27.899
Let me go back into package.

98
00:05:27.899 --> 00:05:29.979
And then we could do npm run serve.

99
00:05:29.979 --> 00:05:35.827
Now we can go here and it still doesn't
wanna work because I put the wrong folder,

100
00:05:35.827 --> 00:05:37.899
it should just be serve now.

101
00:05:41.029 --> 00:05:43.200
Now we've run serve, we go back.

102
00:05:43.200 --> 00:05:44.764
There we go, okay.

103
00:05:44.764 --> 00:05:49.548
So, now you can see how you're
able to create pretty much

104
00:05:49.548 --> 00:05:53.935
whatever script do you want
in the package.JSON and

105
00:05:53.935 --> 00:05:59.039
just prefix it with npm run,
whatever you want and it works.

106
00:05:59.039 --> 00:06:00.251
It works pretty good and

107
00:06:00.251 --> 00:06:03.470
you can also see how important
it is to read the documentation.

108
00:06:03.470 --> 00:06:07.048
Even if you've already used the thing
1000 times, and I use serve all the time.

109
00:06:07.048 --> 00:06:10.589
So, cool.

110
00:06:10.589 --> 00:06:15.487
I think that's pretty much what
I want to cover with packages.

111
00:06:15.487 --> 00:06:18.147
Any final questions on
that before we move on?

112
00:06:18.147 --> 00:06:19.514
The question was,

113
00:06:19.514 --> 00:06:24.739
can you specify additional parameters
to commands inside the scripts?

114
00:06:24.739 --> 00:06:25.785
&gt;&gt; Yes.

115
00:06:25.785 --> 00:06:26.652
&gt;&gt; Yes, you can.

116
00:06:26.652 --> 00:06:30.048
So, let me write another one.

117
00:06:30.048 --> 00:06:34.816
So, if I say, What's a good way?

118
00:06:34.816 --> 00:06:35.543
Try to think of a good one.

119
00:06:35.543 --> 00:06:37.067
Yes, you can totally do it.

120
00:06:37.067 --> 00:06:39.913
I'm trying to think what's a good
example at the top of my head.

121
00:06:39.913 --> 00:06:45.376
Let's try this, so
if I make one called remove,

122
00:06:45.376 --> 00:06:50.713
and I use rm-rf, and
then it takes a argument.

123
00:06:50.713 --> 00:06:53.391
What folder do you wanna actually or
actually let's do a file?

124
00:06:53.391 --> 00:06:55.362
What file do you wanna move?

125
00:06:55.362 --> 00:06:59.270
So I can say, cuz rm actually removes
a file, that's what rm was gonna do.

126
00:06:59.270 --> 00:07:05.232
So, I can say npm run rm and
then followed by the file name.

127
00:07:05.232 --> 00:07:09.873
In this case,
let's remove this index.html.

128
00:07:09.873 --> 00:07:15.082
Let's do that.
So, we'll say remove index.html.

129
00:07:15.082 --> 00:07:19.528
So, if I run that,
you can see I was able to pass

130
00:07:19.528 --> 00:07:24.563
an index.html to the rm
command here as a argument.

131
00:07:24.563 --> 00:07:28.919
And it was actually able to execute and
remove it from here.

132
00:07:28.919 --> 00:07:30.335
And the same thing goes with flags.

133
00:07:30.335 --> 00:07:34.424
So, if you had a flag that you
wanted to pass in here, like rf,

134
00:07:34.424 --> 00:07:36.956
obviously this is going to break now.

135
00:07:36.956 --> 00:07:39.032
Let me make a folder so we can see that.

136
00:07:39.032 --> 00:07:42.143
So we'll make a new folder, call it hello.

137
00:07:42.143 --> 00:07:47.582
Now, if we wanna remove that folder,
I could say remove rf which

138
00:07:47.582 --> 00:07:52.539
means recursively remove this folder and
I call it hello.

139
00:07:52.539 --> 00:07:54.513
Hello, is a directory, okay?

140
00:07:54.513 --> 00:07:58.823
So I think you actually
have to do like that.

141
00:07:58.823 --> 00:08:01.159
So, let's check that out.

142
00:08:01.159 --> 00:08:05.525
Okay, now the problem is, if I do that,
I can't pass an argument.

143
00:08:05.525 --> 00:08:07.216
So, now I'm starting to remember.

144
00:08:07.216 --> 00:08:11.662
Yeah, you can't pass in
an argument with a flag unless you

145
00:08:11.662 --> 00:08:14.401
hard code the argument here first.

146
00:08:14.401 --> 00:08:15.368
So, it's either or.

147
00:08:15.368 --> 00:08:17.325
So, there's not a lot
of flexibility in it.

148
00:08:17.325 --> 00:08:22.440
So, if I wanted to do that,
I'll have to put the name of it here.

149
00:08:22.440 --> 00:08:29.270
So, hello and then now I could use
a flag because I have this slash here.

150
00:08:29.270 --> 00:08:32.463
Which tells us, hey, whatever other
flags they want to pass in do that.

151
00:08:32.463 --> 00:08:35.647
But if I prefix that,
then now I'm not able

152
00:08:35.647 --> 00:08:40.529
to pass in an argument which would
be in this case be a folder name.

153
00:08:40.529 --> 00:08:44.267
So, in this case what I like to
do when it gets that complicated,

154
00:08:44.267 --> 00:08:46.922
is that I would point
to something like this.

155
00:08:46.922 --> 00:08:52.176
I would say some file js here,
like run that thing, do that thing.

156
00:08:52.176 --> 00:08:54.903
And then in that file,
I'll do the stuff that I wanna do.

157
00:08:54.903 --> 00:08:59.880
And you can use whatever npm module
you wanna use, whether it's shell js,

158
00:08:59.880 --> 00:09:02.891
or custom bash scripting, a child process.

159
00:09:02.891 --> 00:09:06.237
Whatever you wanna do to run
a bash script if you want.

160
00:09:06.237 --> 00:09:10.239
And that's what I do, I like to keep these
pretty simple when they started getting

161
00:09:10.239 --> 00:09:13.090
complicated with all the arguments and
things like that.

