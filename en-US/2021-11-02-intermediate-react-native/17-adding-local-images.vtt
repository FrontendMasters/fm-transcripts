WEBVTT

1
00:00:00.140 --> 00:00:03.680 A:middle L:90%
there are various ways that you can add images to

2
00:00:03.930 --> 00:00:05.769 A:middle L:90%
react native. We're going to be looking at local

3
00:00:06.030 --> 00:00:09.250 A:middle L:90%
images. Network images and vector icons to S P

4
00:00:09.349 --> 00:00:12.150 A:middle L:90%
G S. So when I say local images,

5
00:00:12.679 --> 00:00:15.619 A:middle L:90%
I mean images that are within your app, so

6
00:00:15.990 --> 00:00:18.879 A:middle L:90%
you ship them with your app bundle. So these

7
00:00:19.140 --> 00:00:21.820 A:middle L:90%
are things that like, one of the things to

8
00:00:21.899 --> 00:00:23.609 A:middle L:90%
be wary of is that if you have a very

9
00:00:23.899 --> 00:00:26.859 A:middle L:90%
large image, you want to try to reduce it

10
00:00:27.190 --> 00:00:29.649 A:middle L:90%
as much as possible. So I usually use tiny

11
00:00:30.329 --> 00:00:37.289 A:middle L:90%
PNG, a tiny PNG. Yeah, I usually

12
00:00:37.729 --> 00:00:41.450 A:middle L:90%
use use this like if for example your product team

13
00:00:41.859 --> 00:00:43.600 A:middle L:90%
or your client gives you a bunch of images.

14
00:00:44.100 --> 00:00:46.560 A:middle L:90%
Like I run them through here to unify them to

15
00:00:46.659 --> 00:00:49.170 A:middle L:90%
make them as small as possible because any local images

16
00:00:49.869 --> 00:00:51.359 A:middle L:90%
that you add to your app, they will get

17
00:00:51.539 --> 00:00:53.039 A:middle L:90%
shipped with your app bundle. So for example,

18
00:00:53.409 --> 00:00:54.890 A:middle L:90%
if you have, I don't know 20 images.

19
00:00:55.439 --> 00:00:58.229 A:middle L:90%
One megabyte eats each, that's like 20 megabytes extra

20
00:00:58.939 --> 00:01:00.659 A:middle L:90%
that everything we use it with data download. Just

21
00:01:00.899 --> 00:01:02.460 A:middle L:90%
use your app. So that's something to be wary

22
00:01:02.689 --> 00:01:09.959 A:middle L:90%
of. Alright, so usually you can pretty much

23
00:01:10.170 --> 00:01:13.489 A:middle L:90%
put images wherever you want but in the interest of

24
00:01:13.590 --> 00:01:16.560 A:middle L:90%
keeping our code base clean, I usually create a

25
00:01:16.799 --> 00:01:20.920 A:middle L:90%
new directory. So at the top level uh that's

26
00:01:21.120 --> 00:01:25.040 A:middle L:90%
going into source still here and you folder and let's

27
00:01:25.180 --> 00:01:28.450 A:middle L:90%
call it assets. So you can you can do

28
00:01:28.569 --> 00:01:30.730 A:middle L:90%
assets. Images as its funds. So any kind

29
00:01:30.900 --> 00:01:33.959 A:middle L:90%
of content that isn't code um would go in here

30
00:01:35.840 --> 00:01:37.969 A:middle L:90%
. So I have chosen an image for us to

31
00:01:38.090 --> 00:01:40.640 A:middle L:90%
use already. So if you right click save as

32
00:01:42.439 --> 00:01:46.909 A:middle L:90%
and then we will find our app. So mine

33
00:01:47.239 --> 00:01:52.939 A:middle L:90%
is in projects, mood tracker and assets. Mhm

34
00:01:55.739 --> 00:01:59.099 A:middle L:90%
So here is our image. So surprise surprise wreck

35
00:01:59.329 --> 00:02:03.170 A:middle L:90%
native has an image component that you can import from

36
00:02:03.329 --> 00:02:06.049 A:middle L:90%
react native and I'm going to just render this image

37
00:02:08.639 --> 00:02:11.520 A:middle L:90%
you want a tip. Um so to add local

38
00:02:11.960 --> 00:02:15.919 A:middle L:90%
images we need to import the image path. Using

39
00:02:16.569 --> 00:02:22.639 A:middle L:90%
require so that's two const image source equals and we'll

40
00:02:22.770 --> 00:02:26.539 A:middle L:90%
use require and then this will be the image path

41
00:02:27.840 --> 00:02:34.990 A:middle L:90%
. So uh huh Oh, assets. It was

42
00:02:35.319 --> 00:02:41.080 A:middle L:90%
butterflies dot PNG cool. And the reason we need

43
00:02:41.199 --> 00:02:43.199 A:middle L:90%
to do that is for metro bundler to know where

44
00:02:43.449 --> 00:02:46.300 A:middle L:90%
the images and also package it, we ship europe

45
00:02:47.340 --> 00:02:49.460 A:middle L:90%
. So in image, so on the web you

46
00:02:49.599 --> 00:02:53.919 A:middle L:90%
would use source um on the web, you would

47
00:02:54.090 --> 00:02:56.569 A:middle L:90%
use source and react native just to make it a

48
00:02:56.629 --> 00:03:01.009 A:middle L:90%
little bit more frustrating its source, the whole world

49
00:03:02.250 --> 00:03:05.180 A:middle L:90%
. And we're passing the image source. Now when

50
00:03:05.280 --> 00:03:11.259 A:middle L:90%
I say this visit image um now let's talk about

51
00:03:11.639 --> 00:03:13.780 A:middle L:90%
the size of the image so you can see that

52
00:03:14.280 --> 00:03:16.430 A:middle L:90%
I didn't give it a width or height but it

53
00:03:16.810 --> 00:03:20.120 A:middle L:90%
has some default size so the size actually comes from

54
00:03:20.909 --> 00:03:26.039 A:middle L:90%
the image itself, so it will be in display

55
00:03:26.629 --> 00:03:31.419 A:middle L:90%
points, whatever this is and um but whatever is

56
00:03:31.530 --> 00:03:33.669 A:middle L:90%
compatible for for this device. So now that we

57
00:03:33.780 --> 00:03:35.610 A:middle L:90%
render the image, let's actually put it in a

58
00:03:35.659 --> 00:03:37.599 A:middle L:90%
thank you page. So you want to when the

59
00:03:37.750 --> 00:03:41.180 A:middle L:90%
user has chosen and emerging and we've done this um

60
00:03:41.659 --> 00:03:44.659 A:middle L:90%
let's flick to a version of this view that says

61
00:03:45.180 --> 00:03:47.360 A:middle L:90%
thank you and like choose another. Um and then

62
00:03:47.580 --> 00:03:50.500 A:middle L:90%
you know it has the little um little butterflies icon

63
00:03:50.780 --> 00:03:55.240 A:middle L:90%
that so if we go to our mood pick up

64
00:03:57.539 --> 00:04:03.430 A:middle L:90%
and let's add another state variable for whether we're in

65
00:04:03.659 --> 00:04:06.939 A:middle L:90%
this, I have selected state. So const is

66
00:04:07.310 --> 00:04:17.310 A:middle L:90%
selected has selected. Set has selected and this is

67
00:04:17.550 --> 00:04:22.860 A:middle L:90%
a react use ST and we'll start with false.

68
00:04:24.339 --> 00:04:27.129 A:middle L:90%
So here so just a tight note on TypeScript because

69
00:04:27.810 --> 00:04:30.339 A:middle L:90%
we're giving this an initial value. I don't need

70
00:04:30.620 --> 00:04:33.740 A:middle L:90%
to explicitly say that's going to be that is going

71
00:04:33.879 --> 00:04:35.610 A:middle L:90%
to be a brilliant types. You will just know

72
00:04:35.759 --> 00:04:38.269 A:middle L:90%
this. So if you hover over this it will

73
00:04:38.370 --> 00:04:41.740 A:middle L:90%
say that it's a billion. So let's do if

74
00:04:42.189 --> 00:04:45.930 A:middle L:90%
has selected let's return early with a version of this

75
00:04:46.100 --> 00:04:49.110 A:middle L:90%
container that has the thank you message and choose another

76
00:04:49.939 --> 00:04:53.129 A:middle L:90%
. So I'm going to reuse the same styles for

77
00:04:53.240 --> 00:04:54.649 A:middle L:90%
the containers. I wouldn't have to type them.

78
00:04:55.540 --> 00:04:58.500 A:middle L:90%
So let's do return and this is a view and

79
00:04:58.730 --> 00:05:01.500 A:middle L:90%
let's copy the button here. The bottom press able

80
00:05:03.139 --> 00:05:10.579 A:middle L:90%
. Yeah and let's say choose another. And then

81
00:05:10.910 --> 00:05:16.829 A:middle L:90%
on press we want to just set has selected to

82
00:05:16.949 --> 00:05:23.350 A:middle L:90%
false and here handle select we select the mood.

83
00:05:24.240 --> 00:05:29.310 A:middle L:90%
We said it's undefined but also that set has selected

84
00:05:30.089 --> 00:05:34.629 A:middle L:90%
to true. Okay so I think this should work

85
00:05:35.139 --> 00:05:40.509 A:middle L:90%
. Okay cool mm So we have this struggling and

86
00:05:40.709 --> 00:05:43.519 A:middle L:90%
let's also move this image into our thank you page

87
00:05:44.939 --> 00:05:51.310 A:middle L:90%
. So I'm gonna copy this image source and move

88
00:05:51.509 --> 00:05:56.689 A:middle L:90%
it to the mood picker. And also will import

89
00:05:57.180 --> 00:06:03.430 A:middle L:90%
the image. And let's render the image above here

90
00:06:06.439 --> 00:06:13.639 A:middle L:90%
. So the sauce and then image source. And

91
00:06:14.160 --> 00:06:15.350 A:middle L:90%
I'm going to remove it from the home screen.

92
00:06:19.939 --> 00:06:23.649 A:middle L:90%
Mm hmm. Great. So we have an image

93
00:06:24.639 --> 00:06:27.810 A:middle L:90%
image but it's on the side on the left of

94
00:06:27.949 --> 00:06:29.759 A:middle L:90%
the screen. So I wanted to be sent here

95
00:06:29.930 --> 00:06:31.600 A:middle L:90%
. So I'll just add a quick style. So

96
00:06:32.180 --> 00:06:36.810 A:middle L:90%
style style start image. And in our style sheet

97
00:06:37.149 --> 00:06:39.029 A:middle L:90%
, let's create a new style for the image.

98
00:06:40.540 --> 00:06:46.240 A:middle L:90%
And we'll use our own self center. Excellent.

99
00:06:47.540 --> 00:06:51.029 A:middle L:90%
So now we have this nice toddling behavior with a

100
00:06:51.149 --> 00:06:55.930 A:middle L:90%
nice image. And now I want to talk about

101
00:06:56.230 --> 00:06:59.100 A:middle L:90%
is adapting to screen sizes. So one of things

102
00:06:59.279 --> 00:07:03.170 A:middle L:90%
should be wary of for mobile phones especially is that

103
00:07:03.470 --> 00:07:06.889 A:middle L:90%
one pixel Um like when you do with 10,

104
00:07:07.730 --> 00:07:10.050 A:middle L:90%
this doesn't mean 10 pixels. It means 10 display

105
00:07:10.449 --> 00:07:14.339 A:middle L:90%
points. And then a display point is basically um

106
00:07:15.240 --> 00:07:17.939 A:middle L:90%
that really to the pixel density. So if you

107
00:07:18.040 --> 00:07:20.990 A:middle L:90%
hear of retina displays on iphone for example, they

108
00:07:21.389 --> 00:07:26.220 A:middle L:90%
have three times the amount of precision um on your

109
00:07:26.350 --> 00:07:28.420 A:middle L:90%
images which means that their pixel density is higher.

110
00:07:29.240 --> 00:07:33.209 A:middle L:90%
This creates a really beautiful user experiences for users.

111
00:07:33.779 --> 00:07:36.230 A:middle L:90%
But as developers is kind of a nightmare because we

112
00:07:36.329 --> 00:07:39.230 A:middle L:90%
need to provide images that are compatible for all the

113
00:07:39.329 --> 00:07:43.819 A:middle L:90%
different sizes. So you might have seen file names

114
00:07:44.319 --> 00:07:47.649 A:middle L:90%
before that have two X and three X like at

115
00:07:47.850 --> 00:07:50.629 A:middle L:90%
two X and three X in the file name and

116
00:07:50.910 --> 00:07:54.709 A:middle L:90%
there's actually a convention for mobile. Um so here

117
00:07:55.120 --> 00:07:58.569 A:middle L:90%
we have this image that's the normal size and then

118
00:07:58.800 --> 00:08:00.769 A:middle L:90%
I have two more which are two X and three

119
00:08:00.980 --> 00:08:04.040 A:middle L:90%
X. If I save these right click save image

120
00:08:04.290 --> 00:08:07.329 A:middle L:90%
as and save them both in the same assets directory

121
00:08:14.540 --> 00:08:17.339 A:middle L:90%
, you'll have butterflies butterflies to X and butterflies free

122
00:08:17.589 --> 00:08:20.610 A:middle L:90%
X. And what this actually does. So we

123
00:08:20.709 --> 00:08:24.279 A:middle L:90%
don't need to change anything in our require so we'll

124
00:08:24.399 --> 00:08:26.670 A:middle L:90%
still go to butterflies the PNG. What all happened

125
00:08:27.009 --> 00:08:29.870 A:middle L:90%
behind the scenes is that react native will choose the

126
00:08:29.980 --> 00:08:34.139 A:middle L:90%
correct file depending on your pixel density. So when

127
00:08:34.370 --> 00:08:36.899 A:middle L:90%
you refresh, like you have the correct file for

128
00:08:37.279 --> 00:08:39.740 A:middle L:90%
the kind of extensive you have, you need um

129
00:08:40.129 --> 00:08:43.409 A:middle L:90%
and then you'll basically have the right resolution file like

130
00:08:43.679 --> 00:08:46.490 A:middle L:90%
based on the device, which is like an optimization

131
00:08:47.019 --> 00:08:48.419 A:middle L:90%
thing we don't have to think about on the web

132
00:08:48.970 --> 00:08:51.559 A:middle L:90%
. So as for sizing images by default, the

133
00:08:51.679 --> 00:08:54.679 A:middle L:90%
image size will be based on the resolution of the

134
00:08:54.809 --> 00:08:56.840 A:middle L:90%
main image. So even though we have two X

135
00:08:57.049 --> 00:08:59.090 A:middle L:90%
and three X here, it will choose this as

136
00:08:59.419 --> 00:09:01.950 A:middle L:90%
a reference point. And then just these are for

137
00:09:02.389 --> 00:09:07.070 A:middle L:90%
adjusting to the pixel density and to resize the image

138
00:09:07.879 --> 00:09:10.809 A:middle L:90%
is actually on mobile devices. Uh, it's really

139
00:09:10.990 --> 00:09:13.129 A:middle L:90%
nice to use aspect ratio. So you can have

140
00:09:13.620 --> 00:09:16.389 A:middle L:90%
either with or height and an aspect ratio and then

141
00:09:16.480 --> 00:09:19.259 A:middle L:90%
you will adjust accordingly, which is quite handy.

142
00:09:19.559 --> 00:09:21.850 A:middle L:90%
And also it will make sure its scales for different

143
00:09:22.639 --> 00:09:23.149 A:middle L:90%
sizes of phone.

