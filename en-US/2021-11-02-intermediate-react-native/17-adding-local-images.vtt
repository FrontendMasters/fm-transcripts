WEBVTT

1
00:00:00.000 --> 00:00:05.073
There are various ways that you can
add images to react native we're

2
00:00:05.073 --> 00:00:10.951
going to be looking at liquid images
network images and vector icons the SPGs.

3
00:00:10.951 --> 00:00:15.577
So when I say local images I mean
images that are within your app so

4
00:00:15.577 --> 00:00:18.160
you ship them with your app bundle.

5
00:00:18.160 --> 00:00:23.119
So these are things that like one of
the things to be wary of is that if you

6
00:00:23.119 --> 00:00:24.897
have a very large image.

7
00:00:24.897 --> 00:00:30.939
You want to try to reduce
it as much as possible so

8
00:00:30.939 --> 00:00:38.688
I usually use tiny PNG Yeah,
I usually use this if,

9
00:00:38.688 --> 00:00:44.185
for example, your product team or
your client gives you a bunch of images.

10
00:00:44.185 --> 00:00:47.867
I run them through here to minify them,
to make them as small as possible.

11
00:00:47.867 --> 00:00:50.393
Because any local images
that you add to your app,

12
00:00:50.393 --> 00:00:52.632
they will get shipped
with your app bundle.

13
00:00:52.632 --> 00:00:55.605
So for example, if you have,
I don't know, 20 images or

14
00:00:55.605 --> 00:00:58.885
one megabyte deeds that each
that's like 20 megabytes extra.

15
00:00:58.885 --> 00:01:01.594
That every single user would have
to download, just use your app, so

16
00:01:01.594 --> 00:01:02.910
that's something to be wary of.

17
00:01:06.114 --> 00:01:12.444
All right, so usually, you can pretty
much put images wherever you want.

18
00:01:12.444 --> 00:01:17.376
But in interest of keeping our code base
clean I usually create a new directory,

19
00:01:17.376 --> 00:01:20.924
so at the top level that's
going into the source to here.

20
00:01:20.924 --> 00:01:27.627
That's going to source to here, and
you follow that and it's called assets.

21
00:01:27.627 --> 00:01:31.863
So you can you can do assets,
images, assets, bonds, so

22
00:01:31.863 --> 00:01:35.767
any kind of content that
isn't code would go in here.

23
00:01:35.767 --> 00:01:40.769
So I have chosen an image for
us to use already, so

24
00:01:40.769 --> 00:01:46.627
if you right click Save as,
and then we will find our app.

25
00:01:46.627 --> 00:01:50.804
So mine is in project next mood tracker,
and assets.

26
00:01:55.713 --> 00:02:01.481
So here is our image, so surprise,
React Native has an image component,

27
00:02:01.481 --> 00:02:04.560
that you can import from React Native.

28
00:02:04.560 --> 00:02:08.707
And I'm gonna just render this image.

29
00:02:08.707 --> 00:02:12.157
Okay, so to add local images,

30
00:02:12.157 --> 00:02:17.477
we need to import the image
path using require.

31
00:02:17.477 --> 00:02:25.198
So let's do const image source equals and
we'll use require.

32
00:02:25.198 --> 00:02:32.583
And then, this will be the image pause,

33
00:02:32.583 --> 00:02:39.763
so app app assets butterflies dot PNG.

34
00:02:39.763 --> 00:02:42.546
Cool, and
the reason we need to do that is for

35
00:02:42.546 --> 00:02:47.229
metroband to know where the images and
also package it, we ship your app.

36
00:02:47.229 --> 00:02:52.317
So in image, so on the web,
you would use source

37
00:02:52.317 --> 00:02:58.692
in [INAUDIBLE] just to make it
a little bit more frustrating.

38
00:02:58.692 --> 00:03:04.916
Its source, the whole word and
we're passing the image source.

39
00:03:04.916 --> 00:03:08.711
Now let's save this and see the image,

40
00:03:08.711 --> 00:03:12.968
now let's talk about
the size of the image.

41
00:03:12.968 --> 00:03:15.864
So you can see that I
didn't give it a width or

42
00:03:15.864 --> 00:03:18.383
a height but it has some default size.

43
00:03:18.383 --> 00:03:24.682
So the size actually comes
from the image itself, so

44
00:03:24.682 --> 00:03:30.275
it will be in display
points whatever this is.

45
00:03:30.275 --> 00:03:33.225
But whatever is compatible for
this device.

46
00:03:33.225 --> 00:03:37.180
So now that we've rendered the image,
let's actually put it in a thank you page.

47
00:03:37.180 --> 00:03:41.412
When the user has chosen an emoji and
we've done this,

48
00:03:41.412 --> 00:03:45.186
let's flick to a version
of this view that says.

49
00:03:45.186 --> 00:03:48.057
Thank you and like choose another, and

50
00:03:48.057 --> 00:03:51.542
then it has the little
butterflies icon there.

51
00:03:51.542 --> 00:03:56.245
So if we go to mood picker.

52
00:04:00.005 --> 00:04:04.209
And let's add another state variable for

53
00:04:04.209 --> 00:04:11.067
whether we're in this I have selected
state, so has selected [COUGH]

54
00:04:13.943 --> 00:04:19.019
Has selected And this is a React use

55
00:04:19.019 --> 00:04:24.279
state and we'll start with false.

56
00:04:24.279 --> 00:04:24.892
So here so

57
00:04:24.892 --> 00:04:29.810
just as a side note on TypeScript
because we're giving this initial value.

58
00:04:29.810 --> 00:04:34.583
I don't need to explicitly
say that's gonna be a Boolean

59
00:04:34.583 --> 00:04:37.076
type she will just know this.

60
00:04:37.076 --> 00:04:39.823
So for hover over this,
it will say that it's a Boolean.

61
00:04:39.823 --> 00:04:44.879
So let's do if has selected,
let's return early with a version of

62
00:04:44.879 --> 00:04:49.957
this container that has the thank
you message and choose another.

63
00:04:49.957 --> 00:04:54.011
So I'm going to reuse the same styles for
the container so

64
00:04:54.011 --> 00:04:57.231
we'll have to type them so
let's do return.

65
00:04:57.231 --> 00:05:02.222
And this is a view and let's copy
the button here the bottom pressable

66
00:05:05.322 --> 00:05:11.831
And let's say choose another and
then on press,

67
00:05:11.831 --> 00:05:17.556
we want to just set
have selected to false.

68
00:05:20.829 --> 00:05:26.021
And here's our handle select,
we select the mood,

69
00:05:26.021 --> 00:05:32.524
we said it's undefined but
also let's set has selected to true.

70
00:05:32.524 --> 00:05:38.873
Okay, so I think this should work,
okay, cool.

71
00:05:38.873 --> 00:05:44.806
So we have this toggling and let's also
move this image into a thank you page, so

72
00:05:44.806 --> 00:05:52.308
I'm gonna copy this image source,
Move it in the new pickup.

73
00:05:55.786 --> 00:06:00.475
And also import the image.

74
00:06:00.475 --> 00:06:05.460
And let's render the image above here,

75
00:06:05.460 --> 00:06:09.125
so we'll do source and then,

76
00:06:09.125 --> 00:06:13.973
image source and I'm going to remove.

77
00:06:13.973 --> 00:06:16.208
We have it from the home screen,

78
00:06:22.797 --> 00:06:28.636
Great, so we have an image image but it's
on the side on the left of the screen.

79
00:06:28.636 --> 00:06:35.795
So we wanted to be center, so I'll just
add a quick style, so style start image.

80
00:06:35.795 --> 00:06:41.365
And in our style sheet let's
create a new style for

81
00:06:41.365 --> 00:06:47.609
the image and
we'll use line self center, excellent.

82
00:06:47.609 --> 00:06:52.106
So now we have this nice toggling
behavior with a nice image.

83
00:06:54.980 --> 00:06:57.997
Now, I want to talk about is
adapting to screen sizes.

84
00:06:57.997 --> 00:07:02.994
So one of the things you'd be wary of and
for mobile phones, especially.

85
00:07:02.994 --> 00:07:06.247
Is that one pixel, when you do with ten,

86
00:07:06.247 --> 00:07:11.238
this doesn't mean ten pixels,
it means ten display points.

87
00:07:11.238 --> 00:07:17.007
And then a display point is basically
that relates to the pixel density so

88
00:07:17.007 --> 00:07:21.088
if you have retina displays on iPhone for
example.

89
00:07:21.088 --> 00:07:25.639
They have three times the amount
of precision on your images,

90
00:07:25.639 --> 00:07:29.239
which means that their
pixel density is higher.

91
00:07:29.239 --> 00:07:33.447
This is create really beautiful
user experiences for users, but

92
00:07:33.447 --> 00:07:35.905
as developers is kind of a nightmare.

93
00:07:35.905 --> 00:07:41.062
Because we need to provide images that are
compatible for all the different sizes.

94
00:07:41.062 --> 00:07:46.585
So you might have seen file names before,
that have 2x and

95
00:07:46.585 --> 00:07:50.652
3x, like add 2x and 3x in the file name.

96
00:07:50.652 --> 00:07:54.423
And that's actually a convention for
mobile, so

97
00:07:54.423 --> 00:07:58.297
here we have this image,
that's the normal size.

98
00:07:58.297 --> 00:08:01.216
And then,
I have two more which are 2x and 3x.

99
00:08:01.216 --> 00:08:04.537
If I save these surveyed,
click Save image as and

100
00:08:04.537 --> 00:08:07.944
then save them both in
the same assets directory.

101
00:08:14.430 --> 00:08:18.847
We'll have butterflies,
butterflies 2x and butterflies 3x and

102
00:08:18.847 --> 00:08:23.976
what this actually does, so we don't
need to change anything in our require.

103
00:08:23.976 --> 00:08:26.253
So we'll still go to butterflies to PNG.

104
00:08:26.253 --> 00:08:30.873
What will happen behind the scenes is that
React Native will choose the correct file

105
00:08:30.873 --> 00:08:32.798
depending on your pixel density.

106
00:08:32.798 --> 00:08:36.788
So when you refresh,
you have the correct file For

107
00:08:36.788 --> 00:08:39.639
the kind of pixel density you need.

108
00:08:39.639 --> 00:08:40.336
And then,

109
00:08:40.336 --> 00:08:45.302
you will basically have the right
resolution file like based on the device.

110
00:08:45.302 --> 00:08:48.772
Which is an optimization thing we
don't have to think about on the web.

111
00:08:48.772 --> 00:08:51.262
So as society images, by default,

112
00:08:51.262 --> 00:08:55.754
the image size will be based on
the resolution of the main image.

113
00:08:55.754 --> 00:09:00.318
So even though we have 2x and 3x here, it
will choose this as the reference point.

114
00:09:00.318 --> 00:09:05.787
And then, just these are for
adjusting to the actual density and

115
00:09:05.787 --> 00:09:10.352
to resize the image,
is actually on mobile devices.

116
00:09:10.352 --> 00:09:15.097
It's really nice to use aspect ratio so
you can have either width or height and

117
00:09:15.097 --> 00:09:16.198
an aspect ratio.

118
00:09:16.198 --> 00:09:19.882
And then, you will adjust
accordingly which is quite handy and

119
00:09:19.882 --> 00:09:23.440
also it will make sure it scales for
different sizes of bone.

