WEBVTT

1
00:00:00.133 --> 00:00:02.017
Let's move on to vector icons.

2
00:00:02.017 --> 00:00:06.773
Now, remember all this kind of
hassle that we have to go through to

3
00:00:06.773 --> 00:00:10.152
have really crisp local images for
our users.

4
00:00:10.152 --> 00:00:14.193
We need to have three different files of
different sizes and we need to package

5
00:00:14.193 --> 00:00:18.435
them with your app and then all the users
have to download them it's a nightmare.

6
00:00:18.435 --> 00:00:22.744
Well vector icons amazing on
the web amazing on native.

7
00:00:22.744 --> 00:00:24.979
So I use vector icons a lot.

8
00:00:24.979 --> 00:00:27.269
If it's possible I'll make
it into a vector icon.

9
00:00:27.269 --> 00:00:29.101
So vector icons are small.

10
00:00:29.101 --> 00:00:32.032
They use vectors,
which means that they scale automatically.

11
00:00:32.032 --> 00:00:36.874
You don't need to have several
versions of the same icon.

12
00:00:36.874 --> 00:00:40.815
And also you can customize them so
you can change the color of your path.

13
00:00:40.815 --> 00:00:46.079
Or you can use the color of the whole
vector or part of it programmatically.

14
00:00:46.079 --> 00:00:46.861
They're super handy.

15
00:00:46.861 --> 00:00:49.527
I use them on pretty
much all of my projects.

16
00:00:49.527 --> 00:00:56.196
So there are plenty of resources for
finding icons.

17
00:00:56.196 --> 00:01:00.776
One that I use quite frequently
is called flat icon.

18
00:01:00.776 --> 00:01:03.289
And basically there's
a bunch of free icons here.

19
00:01:03.289 --> 00:01:04.734
They require attribution though.

20
00:01:04.734 --> 00:01:08.012
So you can use them for
personal commercial use but

21
00:01:08.012 --> 00:01:12.006
you have to give attribution
if you don't have pro license.

22
00:01:12.006 --> 00:01:13.375
So just a caveat there.

23
00:01:13.375 --> 00:01:18.160
But if you're looking for just icons for
your projects that's a good resource.

24
00:01:18.160 --> 00:01:21.854
So I've chosen three
icons from here already.

25
00:01:21.854 --> 00:01:24.162
And you guessed it.

26
00:01:24.162 --> 00:01:25.608
We have a library for this.

27
00:01:25.608 --> 00:01:30.187
So for rendering SVG we're
going to use React Native SVG.

28
00:01:30.187 --> 00:01:35.800
So plain SVG is won't just work in React
Native unfortunately we do need a library.

29
00:01:35.800 --> 00:01:38.080
So let's install it, so

30
00:01:38.080 --> 00:01:43.952
let's copy the install command
open the terminal and paste it.

31
00:01:43.952 --> 00:01:48.957
So this one does have native modules so
we'll need to

32
00:01:48.957 --> 00:01:56.022
also run yarn install Rebuild iOS
rebuild Android see the iOS uninstall.

33
00:02:01.263 --> 00:02:03.645
Game to stop.

34
00:02:03.645 --> 00:02:05.934
And restart Android.

35
00:02:05.934 --> 00:02:12.389
If you're a React Native developer,
you get to be like the XKCD comic.

36
00:02:12.389 --> 00:02:15.990
Where your boss is like, what are you
doing, and cuz your sword fighting,

37
00:02:15.990 --> 00:02:19.307
and you'll be like, I'm compiling,
it's the same you're like,

38
00:02:19.307 --> 00:02:24.974
I'm installing native modules All right,

39
00:02:24.974 --> 00:02:28.311
so we'll see back into the root
directory and run ios.

40
00:02:30.741 --> 00:02:35.651
So let's have a look at the API for
React Native SVG and how it works.

41
00:02:35.651 --> 00:02:40.193
So to add an SVG icon.SVG is
generally looked like this.

42
00:02:40.193 --> 00:02:44.083
So you have an SVG it has some width and
a height it has a view box and

43
00:02:44.083 --> 00:02:48.280
then basically the view box tells
the SVG like how to render the path.

44
00:02:48.280 --> 00:02:52.885
And you have various,
like SPG elements you can have a path,

45
00:02:52.885 --> 00:02:55.608
the circle, a group, and cetera.

46
00:02:55.608 --> 00:03:00.584
Now on the web, like SVGs will
look like this with the lowercase,

47
00:03:00.584 --> 00:03:04.304
the same, way we have div and
paragraph and etc.

48
00:03:04.304 --> 00:03:09.474
For react native SVG, actually all
we need to do to convert this SVG,

49
00:03:09.474 --> 00:03:12.640
to be rendered using react native.

50
00:03:12.640 --> 00:03:18.114
Is use the SVG and path and
search for elements from here.

51
00:03:18.114 --> 00:03:21.015
And they're super easy to find
because it's basically on

52
00:03:21.015 --> 00:03:24.800
the web is SVG with a lowercase and then
the export will be exactly the same but

53
00:03:24.800 --> 00:03:27.247
with a capital because
it's a React component.

54
00:03:31.784 --> 00:03:36.987
So to convert this into a reconnaissance
version, we'll basically

55
00:03:36.987 --> 00:03:43.279
replace these will give me the width and a
height and, but also give it a fill color.

56
00:03:43.279 --> 00:03:45.502
So let's see if this has finished.

57
00:03:45.502 --> 00:03:49.228
No, it's not, but
I guess I can do this anyway.

58
00:03:49.228 --> 00:03:55.301
So, I'm going to copy this SVG file and
go back to our project.

59
00:03:55.301 --> 00:04:01.563
And in components, so it's up to you
whether you have one file per SVG, or

60
00:04:01.563 --> 00:04:07.829
whether you have all SVG in one file,
it's completely your preference.

61
00:04:07.829 --> 00:04:12.939
In this case, I'm going to do one file and

62
00:04:12.939 --> 00:04:16.304
put all of my SVGs in there.

63
00:04:16.304 --> 00:04:23.448
So, in components let's do
a new file quotes icons.tsx and

64
00:04:23.448 --> 00:04:27.938
here let's import react from react.

65
00:04:30.374 --> 00:04:36.386
And let's do home icon react.FC.

66
00:04:36.386 --> 00:04:40.034
It's an arrow function and it will return.

67
00:04:40.034 --> 00:04:43.764
I'm going to paste the SVG
that I've just copied in here.

68
00:04:43.764 --> 00:04:45.519
Now this isn't valid yet.

69
00:04:45.519 --> 00:04:50.708
So I need to import SVG and

70
00:04:50.708 --> 00:04:56.647
path from React Native SVG.

71
00:04:56.647 --> 00:05:04.690
And then allow me to do is replace
these with the uppercase versions and

72
00:05:04.690 --> 00:05:09.337
also export this the letter can be used.

73
00:05:09.337 --> 00:05:14.034
Now the last thing that I
always do with my icons is

74
00:05:14.034 --> 00:05:18.856
I give them properties for
the size and the color.

75
00:05:18.856 --> 00:05:23.571
In this case I always want square icons
which is what we want for our bottom tabs.

76
00:05:23.571 --> 00:05:27.727
Otherwise you could have width and
height separate but

77
00:05:27.727 --> 00:05:32.434
because I know it was one a square
I'm going to just use a size.

78
00:05:32.434 --> 00:05:37.393
So let's do type I call it props.

79
00:05:37.393 --> 00:05:43.002
So we want a size which is optional
because we're going to give it a default.

80
00:05:43.002 --> 00:05:46.601
And let's have it a number and color,

81
00:05:46.601 --> 00:05:51.223
which is also optional,
and it will be a string.

82
00:05:54.951 --> 00:06:00.004
Here, let's say pass
icon props interactive c,

83
00:06:00.004 --> 00:06:03.142
and let's destructure them.

84
00:06:03.142 --> 00:06:04.819
So this size.

85
00:06:04.819 --> 00:06:10.762
Let's default to 40 and color.

86
00:06:10.762 --> 00:06:13.906
Let's default to teal.

87
00:06:13.906 --> 00:06:15.988
I always end up with teal.

88
00:06:15.988 --> 00:06:21.693
Now, the size, so at the top level for
the SVG, you have a width and a height.

89
00:06:21.693 --> 00:06:28.592
So I'm going to use size for both of them,
so width, size, and height size.

90
00:06:28.592 --> 00:06:31.941
And then lastly,
I'm going to add the filled color.

91
00:06:31.941 --> 00:06:35.370
So fill equals color.

92
00:06:35.370 --> 00:06:39.290
I'm gonna render it on the homepage,

93
00:06:39.290 --> 00:06:43.339
just to see that something is working.

94
00:06:43.339 --> 00:06:45.853
So home Icon.

95
00:06:57.009 --> 00:07:01.563
Not rebuilt should be, there it is.

96
00:07:01.563 --> 00:07:03.720
Right so go home icon here.

97
00:07:03.720 --> 00:07:09.814
And if I do size,
let's do 100 it's massive and

98
00:07:09.814 --> 00:07:13.226
then I do color make it pink.

99
00:07:13.226 --> 00:07:17.547
It has a pink so basically you can now
change this icon however you want,

100
00:07:17.547 --> 00:07:18.925
which is super handy.

101
00:07:18.925 --> 00:07:25.015
All right so we actually want to do is we
want to use this icon for our home tab.

102
00:07:25.015 --> 00:07:30.619
So the way we do that,
we move it from here and

103
00:07:30.619 --> 00:07:35.782
let's open our bottom tabs navigator.

104
00:07:35.782 --> 00:07:41.844
So this tab navigator will have a Screen

105
00:07:41.844 --> 00:07:47.925
options prop which takes
an arrow function.

106
00:07:47.925 --> 00:07:53.305
And then, this,

107
00:07:57.568 --> 00:08:01.125
Here we have tab, bar, icon.

108
00:08:05.901 --> 00:08:08.499
Okay, and then this will be a function.

109
00:08:08.499 --> 00:08:12.604
And then I think here, let's return text.

110
00:08:15.880 --> 00:08:18.649
I don't usually type this out live.

111
00:08:18.649 --> 00:08:22.216
So, it's fun to find the exact API.

112
00:08:22.216 --> 00:08:28.767
Okay, cool awesome.

113
00:08:28.767 --> 00:08:29.944
So this actually works.

114
00:08:29.944 --> 00:08:33.661
So not that I'm surprised I
shouldn't be surprised it works.

115
00:08:33.661 --> 00:08:37.783
Cool, so you can see that
whatever I pass in here on

116
00:08:37.783 --> 00:08:40.934
the tab bar icon gets rendered on top.

117
00:08:42.963 --> 00:08:48.605
So what we really want to do is you want
to get access to what route we're in.

118
00:08:48.605 --> 00:08:52.308
And then based on that we want
to render the correct tab.

119
00:08:52.308 --> 00:08:55.645
So, I guess a tab icon.

120
00:08:55.645 --> 00:09:01.027
So, I'm not looking at the API right now,
I'm just looking at the target types,

121
00:09:01.027 --> 00:09:04.782
just to remind me what the actual
properties are called.

122
00:09:04.782 --> 00:09:08.248
So this tab icon,
it knows whether it's currently focused,

123
00:09:08.248 --> 00:09:11.057
what color it should be and
what size it should be.

124
00:09:11.057 --> 00:09:16.457
So we said that globally rather than
within each icon, which is nice.

125
00:09:16.457 --> 00:09:17.715
And then, Screen Options.

126
00:09:17.715 --> 00:09:22.502
Okay cool, so this gives me route,
and navigation.

127
00:09:22.502 --> 00:09:25.356
So, I should get access to the route here.

128
00:09:25.356 --> 00:09:32.048
Cool, and then root name, okay, cool.

129
00:09:32.048 --> 00:09:36.328
So I'll do that's past
the stew the root name here so

130
00:09:36.328 --> 00:09:39.555
we'll just print out this, or the text

131
00:09:46.849 --> 00:09:50.081
Route.name.

132
00:09:50.081 --> 00:09:52.497
So this is the name that
we gave each of our routes.

133
00:09:52.497 --> 00:09:56.088
And then we can use our route name
to friends in the correct icon.

134
00:09:56.088 --> 00:09:59.304
So we'll do use a switch statement here,
but

135
00:09:59.304 --> 00:10:02.360
I'm just going to keep
it simple with an F.

136
00:10:02.360 --> 00:10:07.412
If route.name equals home then

137
00:10:07.412 --> 00:10:11.721
let's find the home icon.

138
00:10:11.721 --> 00:10:18.140
And then otherwise we'll
just return the route.name.

