WEBVTT

1
00:00:00.640 --> 00:00:04.480 A:middle L:90%
Next up we have a one additional tab application for

2
00:00:04.950 --> 00:00:07.099 A:middle L:90%
analytics. So there's all kinds of things that you

3
00:00:07.200 --> 00:00:10.039 A:middle L:90%
can do with data once you have it. Um

4
00:00:10.480 --> 00:00:12.230 A:middle L:90%
and this is a good opportunity to try your hand

5
00:00:12.539 --> 00:00:17.809 A:middle L:90%
at some um some data visualization. So for this

6
00:00:17.969 --> 00:00:21.719 A:middle L:90%
task I would recommend you use something like Victory which

7
00:00:22.579 --> 00:00:26.940 A:middle L:90%
is a charting library for react web and react native

8
00:00:27.210 --> 00:00:29.699 A:middle L:90%
as well. And you can use it to for

9
00:00:29.800 --> 00:00:33.039 A:middle L:90%
example creates a pie chart for the moods. So

10
00:00:33.229 --> 00:00:36.750 A:middle L:90%
the Victory talks are pretty comprehensive and they have all

11
00:00:37.159 --> 00:00:41.789 A:middle L:90%
kinds of different animation. Um like charting utilities that

12
00:00:41.890 --> 00:00:43.770 A:middle L:90%
you can use, you can create by charts or

13
00:00:43.880 --> 00:00:46.590 A:middle L:90%
line charts and you can get pretty fancy with what

14
00:00:46.740 --> 00:00:49.409 A:middle L:90%
you create. All right. So basically to create

15
00:00:50.030 --> 00:00:52.640 A:middle L:90%
to create this we will use Victory Native. So

16
00:00:52.969 --> 00:00:55.719 A:middle L:90%
we do young at Victory Native and Victory Native actually

17
00:00:55.979 --> 00:00:58.320 A:middle L:90%
has a dependency of cognitive spg. So that's where

18
00:00:58.479 --> 00:01:00.740 A:middle L:90%
it uses to render all of the, all of

19
00:01:00.810 --> 00:01:03.520 A:middle L:90%
the charting, charting stuff. And we already have

20
00:01:03.799 --> 00:01:05.609 A:middle L:90%
the creative as well because we need to install it

21
00:01:05.790 --> 00:01:09.040 A:middle L:90%
for our bottom tab icons. So there's actually no

22
00:01:09.230 --> 00:01:12.000 A:middle L:90%
native dependencies on this one and it will just work

23
00:01:13.040 --> 00:01:18.590 A:middle L:90%
fact. I can just add it. And next

24
00:01:18.959 --> 00:01:21.530 A:middle L:90%
if you look at the documentation for Victory Pie,

25
00:01:22.239 --> 00:01:24.730 A:middle L:90%
which is what I use for my analytics tab.

26
00:01:25.540 --> 00:01:29.140 A:middle L:90%
It is looking for data that's in the format of

27
00:01:29.560 --> 00:01:33.069 A:middle L:90%
X cats and X which is the title that you're

28
00:01:33.159 --> 00:01:35.859 A:middle L:90%
going to be used and why being the number of

29
00:01:36.030 --> 00:01:39.790 A:middle L:90%
those items in the set and obviously our data doesn't

30
00:01:40.140 --> 00:01:42.980 A:middle L:90%
look like that. Um So we need to convert

31
00:01:43.439 --> 00:01:45.480 A:middle L:90%
it into that format for this. Are you slow

32
00:01:45.799 --> 00:01:48.840 A:middle L:90%
dash but you can do it in plain JavaScript So

33
00:01:49.420 --> 00:01:51.650 A:middle L:90%
lo dash doesn't have TypeScript types. So if you

34
00:01:51.730 --> 00:01:53.969 A:middle L:90%
want to use it with TypeScript um you'll have to

35
00:01:54.099 --> 00:01:57.349 A:middle L:90%
install types, community types which are thankfully available and

36
00:01:57.650 --> 00:01:59.700 A:middle L:90%
you can do that with Dion. Ad add types

37
00:02:00.140 --> 00:02:06.810 A:middle L:90%
dash, low dash slash low dash. So here

38
00:02:07.250 --> 00:02:09.780 A:middle L:90%
this is an example of how you could group the

39
00:02:09.879 --> 00:02:12.550 A:middle L:90%
entity. So you can use group by from low

40
00:02:12.740 --> 00:02:15.560 A:middle L:90%
dash which basically automatically create groups based on a key

41
00:02:16.090 --> 00:02:18.590 A:middle L:90%
value on an object. And then you can call

42
00:02:18.810 --> 00:02:20.150 A:middle L:90%
it a brutal entries on that. So you could

43
00:02:20.300 --> 00:02:22.939 A:middle L:90%
map over it and then we can pass the data

44
00:02:23.669 --> 00:02:26.849 A:middle L:90%
down to victory Pie and then there are a bunch

45
00:02:27.069 --> 00:02:28.430 A:middle L:90%
of properties. So if you look at my solution

46
00:02:29.539 --> 00:02:31.060 A:middle L:90%
so here are a bunch of properties that are used

47
00:02:31.710 --> 00:02:34.199 A:middle L:90%
to create the right colors and sizes that I was

48
00:02:34.349 --> 00:02:36.949 A:middle L:90%
looking for. But you can solid to your heart's

49
00:02:37.180 --> %!s(<nil>) A:middle L:90%
content

