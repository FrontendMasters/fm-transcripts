WEBVTT

1
00:00:00.540 --> 00:00:03.799 A:middle L:90%
now most animations actually are in stand alone most of

2
00:00:03.859 --> 00:00:05.830 A:middle L:90%
the time we're going to be using animations in conjunction

3
00:00:06.690 --> 00:00:09.179 A:middle L:90%
with gestures. So an example of this is when

4
00:00:09.320 --> 00:00:12.269 A:middle L:90%
you have a scroll view and as you scroll up

5
00:00:12.699 --> 00:00:16.429 A:middle L:90%
the header changes or for example if the user swipes

6
00:00:17.199 --> 00:00:18.660 A:middle L:90%
and then as you swipe the U. I needs

7
00:00:18.829 --> 00:00:21.030 A:middle L:90%
to change. So for us, what we want

8
00:00:21.190 --> 00:00:23.120 A:middle L:90%
to do is you want to implement swipe to delete

9
00:00:23.769 --> 00:00:26.480 A:middle L:90%
so at the moment you need to tap on the

10
00:00:26.550 --> 00:00:28.940 A:middle L:90%
delete button. But most applications that you use,

11
00:00:29.210 --> 00:00:31.929 A:middle L:90%
for example, gmail will have a functionality to swipe

12
00:00:32.170 --> 00:00:33.880 A:middle L:90%
to delete as well. So we're going to add

13
00:00:34.229 --> 00:00:38.420 A:middle L:90%
a pretty simple implementation so that the user will swipe

14
00:00:39.009 --> 00:00:41.079 A:middle L:90%
right or left and when they go over a threshold

15
00:00:41.899 --> 00:00:45.530 A:middle L:90%
, the card will will animate all the way to

16
00:00:45.689 --> 00:00:50.539 A:middle L:90%
the like right or left and then disappear. So

17
00:00:50.799 --> 00:00:53.609 A:middle L:90%
to do that, let's install react native gesture handler

18
00:01:03.640 --> 00:01:06.390 A:middle L:90%
and then in your index Js So this is at

19
00:01:06.519 --> 00:01:09.900 A:middle L:90%
the root level. Let's add import react native gesture

20
00:01:10.209 --> 00:01:17.290 A:middle L:90%
handler. So this will be the very first line

21
00:01:18.069 --> 00:01:19.939 A:middle L:90%
in your file. You don't add it anywhere in

22
00:01:20.000 --> 00:01:26.810 A:middle L:90%
the bottom and we'll see the IOS and pulling store

23
00:01:32.659 --> 00:01:35.549 A:middle L:90%
and then for android will also need to update the

24
00:01:35.689 --> 00:01:39.959 A:middle L:90%
main activity. The java so that it overrides the

25
00:01:40.269 --> 00:01:45.640 A:middle L:90%
method responsible for like basically you need to eat to

26
00:01:45.730 --> 00:01:47.400 A:middle L:90%
add this in order for the gesture handed to work

27
00:01:47.620 --> 00:01:53.159 A:middle L:90%
on android. So let's copy this and open main

28
00:01:53.689 --> 00:02:05.799 A:middle L:90%
activity and we'll add these imports and also we need

29
00:02:06.010 --> 00:02:19.199 A:middle L:90%
to add this function. Yeah. And then we

30
00:02:19.310 --> 00:02:27.020 A:middle L:90%
should be good to go so we'll need to john

31
00:02:27.909 --> 00:02:31.439 A:middle L:90%
is to rebuild the I was up. Alright,

32
00:02:31.789 --> 00:02:35.759 A:middle L:90%
let's open our mood item row. And in here

33
00:02:36.939 --> 00:02:46.729 A:middle L:90%
let's import pan gesture handler from react native gesture handler

34
00:02:48.240 --> 00:02:54.139 A:middle L:90%
. Mhm. Now pan is like a swipe um

35
00:02:54.849 --> 00:02:57.830 A:middle L:90%
interaction you can also have like for example a pinch

36
00:02:58.139 --> 00:03:02.300 A:middle L:90%
gesture handler. Yeah. And then let's wrap our

37
00:03:02.650 --> 00:03:10.639 A:middle L:90%
entire mood item in the pan gesture handler. Now

38
00:03:10.949 --> 00:03:14.349 A:middle L:90%
you also want to set the min delta X and

39
00:03:14.750 --> 00:03:17.789 A:middle L:90%
min delta Y. Uh And this is basically to

40
00:03:18.270 --> 00:03:21.400 A:middle L:90%
tell the gesture handler when to start registering the gesture

41
00:03:21.719 --> 00:03:25.650 A:middle L:90%
event. So this basically tells us that we don't

42
00:03:25.810 --> 00:03:28.169 A:middle L:90%
really care about like gestures that go this way.

43
00:03:28.490 --> 00:03:30.469 A:middle L:90%
We only really care about gestures that go this way

44
00:03:32.439 --> 00:03:39.680 A:middle L:90%
and then we use we use on just a moment

45
00:03:45.539 --> 00:03:49.590 A:middle L:90%
and this will be a function. And so just

46
00:03:49.830 --> 00:03:52.539 A:middle L:90%
to show you what this looks like. Mhm.

47
00:03:53.740 --> 00:04:00.300 A:middle L:90%
Event. Native event dot why? So if I

48
00:04:00.409 --> 00:04:09.009 A:middle L:90%
do console dot warn then if I go right or

49
00:04:09.090 --> 00:04:12.199 A:middle L:90%
left. Oh I think I care about X instead

50
00:04:14.639 --> 00:04:16.750 A:middle L:90%
. Thank you. So as I go right or

51
00:04:16.819 --> 00:04:18.980 A:middle L:90%
left, you can see the logs here updating.

52
00:04:20.639 --> 00:04:23.439 A:middle L:90%
Now we're actually not going to use this event directly

53
00:04:23.970 --> 00:04:26.600 A:middle L:90%
because we want to combine it with reanimated too.

54
00:04:27.110 --> 00:04:31.680 A:middle L:90%
So there is a animated gesture handler that's built into

55
00:04:32.209 --> 00:04:37.839 A:middle L:90%
reanimated which works in combination with um the react native

56
00:04:38.060 --> 00:04:42.040 A:middle L:90%
gesture handler and creates like an optimized workflow. So

57
00:04:43.740 --> 00:04:50.399 A:middle L:90%
yeah, if we do const um on gesture meant

58
00:04:51.740 --> 00:05:00.060 A:middle L:90%
. Mhm. And we'll do use animated gesture handler

59
00:05:03.839 --> 00:05:06.300 A:middle L:90%
and then this takes an object and this has a

60
00:05:06.379 --> 00:05:10.480 A:middle L:90%
dependency rate and this takes an object so on active

61
00:05:11.060 --> 00:05:14.370 A:middle L:90%
. So this gets called whenever you change whenever you

62
00:05:14.930 --> 00:05:21.779 A:middle L:90%
swipe and this takes the event and we'll do console

63
00:05:23.040 --> 00:05:30.500 A:middle L:90%
warn event dot X. The other is that if

64
00:05:30.709 --> 00:05:33.519 A:middle L:90%
we use the gesture event directly we to do event

65
00:05:33.879 --> 00:05:36.230 A:middle L:90%
dot NATO mental X. But with the animals a

66
00:05:36.300 --> 00:05:38.430 A:middle L:90%
gesture handler, we don't need to select the native

67
00:05:38.680 --> 00:05:44.439 A:middle L:90%
events separately. So that's past this here. Mhm

68
00:05:45.839 --> 00:05:47.939 A:middle L:90%
. Alright. So now when we swipe we get

69
00:05:48.060 --> 00:05:51.160 A:middle L:90%
this error saying on gesture handler, event is expected

70
00:05:51.540 --> 00:05:53.759 A:middle L:90%
to function. Got value of object type. And

71
00:05:53.870 --> 00:05:58.329 A:middle L:90%
this is actually because the first item inside the gesture

72
00:05:58.649 --> 00:06:01.889 A:middle L:90%
handler has to be an animated or be animated component

73
00:06:03.040 --> 00:06:09.670 A:middle L:90%
. So if we import reanimated. Mhm from recognition

74
00:06:10.160 --> 00:06:13.519 A:middle L:90%
reanimated. And then here on this view that's just

75
00:06:13.779 --> 00:06:17.740 A:middle L:90%
inside the pan gesture handler. We do reanimated dot

76
00:06:18.029 --> 00:06:21.459 A:middle L:90%
view. So both of you and text can be

77
00:06:22.199 --> 00:06:28.680 A:middle L:90%
created like this reanimated? Yes, top you.

78
00:06:30.350 --> 00:06:33.379 A:middle L:90%
So now when you reload, let me go here

79
00:06:34.839 --> 00:06:37.139 A:middle L:90%
we get our log. Like we were expecting.

80
00:06:37.709 --> 00:06:40.220 A:middle L:90%
All right. So what we're interested in is the

81
00:06:40.600 --> 00:06:44.930 A:middle L:90%
translation. So how much the user has moved the

82
00:06:45.620 --> 00:06:48.860 A:middle L:90%
item from when they started. So on this event

83
00:06:49.610 --> 00:06:54.620 A:middle L:90%
we have translation. X. So let's see how

84
00:06:54.800 --> 00:06:58.290 A:middle L:90%
this works. Okay, so here when I start

85
00:06:59.839 --> 00:07:02.589 A:middle L:90%
you can see it's like minus values and then go

86
00:07:02.750 --> 00:07:05.970 A:middle L:90%
to the right is plus values. Perfect and then

87
00:07:06.060 --> 00:07:10.540 A:middle L:90%
we want to use this translation to actually animate this

88
00:07:10.779 --> 00:07:13.709 A:middle L:90%
card so that when I move this with my finger

89
00:07:14.410 --> 00:07:18.459 A:middle L:90%
then the card moves with it. So let's create

90
00:07:18.810 --> 00:07:25.519 A:middle L:90%
a shared value. So translate X. Use shared

91
00:07:25.970 --> 00:07:35.040 A:middle L:90%
value And we'll start with zero and here we'll do

92
00:07:35.459 --> 00:07:45.040 A:middle L:90%
on active translate X dot value equals event dot translation

93
00:07:46.589 --> 00:07:56.939 A:middle L:90%
X. Did I misspell translate translate X. Yeah

94
00:07:58.540 --> 00:08:01.740 A:middle L:90%
excellent. And now we will create an animated style

95
00:08:02.379 --> 00:08:11.170 A:middle L:90%
. So const a card style equals use animated style

96
00:08:13.139 --> 00:08:17.350 A:middle L:90%
and this will be an arrow function that returns an

97
00:08:17.470 --> 00:08:23.089 A:middle L:90%
object with the dependencies array and let's translate the card

98
00:08:23.689 --> 00:08:26.540 A:middle L:90%
based on this translation value. So let's do transform

99
00:08:28.839 --> 00:08:32.169 A:middle L:90%
Is an array with one object and translate X.

100
00:08:33.750 --> 00:08:37.240 A:middle L:90%
And this will be the translate X dot value.

101
00:08:40.340 --> 00:08:45.639 A:middle L:90%
Mhm. Now we can apply the card style to

102
00:08:46.049 --> 00:08:51.419 A:middle L:90%
our mood item. Now when we swipe on this

103
00:08:51.549 --> 00:08:54.129 A:middle L:90%
card you can see the card moves however it doesn't

104
00:08:54.470 --> 00:08:57.460 A:middle L:90%
go back to its original position. So here in

105
00:08:57.659 --> 00:09:01.980 A:middle L:90%
our used on gesture event we can do on end

106
00:09:03.940 --> 00:09:06.929 A:middle L:90%
, look at the event, you don't need the

107
00:09:07.070 --> 00:09:13.740 A:middle L:90%
went on end. Well basically do translate X dr

108
00:09:14.179 --> 00:09:17.809 A:middle L:90%
value Equals zero. So when we finish we'll go

109
00:09:17.950 --> 00:09:20.190 A:middle L:90%
back to zero. So there you go. So

110
00:09:20.519 --> 00:09:22.299 A:middle L:90%
I go here and it goes back to zero.

111
00:09:22.970 --> 00:09:25.700 A:middle L:90%
Now obviously this snaps but thankfully we already have a

112
00:09:25.850 --> 00:09:28.279 A:middle L:90%
nice tool to make any value, any of these

113
00:09:28.440 --> 00:09:33.039 A:middle L:90%
values animate. So if we use with timing.

114
00:09:36.940 --> 00:09:41.580 A:middle L:90%
20. Yeah and say so now. Okay so

115
00:09:42.460 --> 00:09:48.549 A:middle L:90%
I need to reload as well so now when we

116
00:09:48.639 --> 00:09:52.279 A:middle L:90%
let go you can see that it smoothly transitions back

117
00:09:52.490 --> 00:09:55.870 A:middle L:90%
to zero. Now I want to do is when

118
00:09:56.039 --> 00:09:59.860 A:middle L:90%
the user swipes past a certain threshold, we animate

119
00:10:00.419 --> 00:10:02.179 A:middle L:90%
the card all the way to the right, all

120
00:10:02.360 --> 00:10:04.750 A:middle L:90%
the way to the left off the screen and then

121
00:10:04.990 --> 00:10:09.389 A:middle L:90%
we delete the item. So let's define a threshold

122
00:10:10.509 --> 00:10:15.779 A:middle L:90%
as the const of max swipe And let's make it

123
00:10:16.230 --> 00:10:21.639 A:middle L:90%
let's make it 80. Alright, so here on

124
00:10:21.970 --> 00:10:27.049 A:middle L:90%
active so when we finish we want to I think

125
00:10:27.240 --> 00:10:35.679 A:middle L:90%
we get the event here and we can do if

126
00:10:36.269 --> 00:10:43.960 A:middle L:90%
event, translation X. Okay, so I want

127
00:10:44.159 --> 00:10:47.980 A:middle L:90%
the absolute value of this. So math dot apps

128
00:10:49.539 --> 00:10:54.509 A:middle L:90%
of translation X. So if this is larger then

129
00:10:55.539 --> 00:11:00.720 A:middle L:90%
um next swipe, so if this is true.

130
00:11:03.240 --> 00:11:08.120 A:middle L:90%
Yeah then we're going to delete, so let me

131
00:11:08.250 --> 00:11:11.940 A:middle L:90%
just check that we're getting here correctly. Mhm.

132
00:11:17.639 --> 00:11:19.509 A:middle L:90%
Okay and then if I just do a little bit

133
00:11:20.440 --> 00:11:26.240 A:middle L:90%
. Okay cool so this works. Okay so if

134
00:11:26.570 --> 00:11:28.320 A:middle L:90%
we're at max wipe then we wanted to leave.

135
00:11:28.509 --> 00:11:30.190 A:middle L:90%
So firstly what we want to do is you want

136
00:11:30.330 --> 00:11:33.690 A:middle L:90%
to swipe the card all the way to the like

137
00:11:33.889 --> 00:11:37.009 A:middle L:90%
off the screen so it turns it X. Stop

138
00:11:37.250 --> 00:11:46.809 A:middle L:90%
value equals um It's 2 1000. So still with

139
00:11:46.950 --> 00:11:53.690 A:middle L:90%
timing and 1000. Okay let's try that. So

140
00:11:54.019 --> 00:11:58.940 A:middle L:90%
we swipe here, let's reload again. If you

141
00:11:59.029 --> 00:12:01.570 A:middle L:90%
update these hooks they don't hot reload properly. So

142
00:12:01.769 --> 00:12:04.029 A:middle L:90%
it's good to do a proper refresh. So here

143
00:12:04.120 --> 00:12:10.490 A:middle L:90%
we go here. Okay so oh it's just because

144
00:12:10.789 --> 00:12:15.940 A:middle L:90%
we're setting this to zero so that's still else this

145
00:12:16.159 --> 00:12:20.970 A:middle L:90%
one. Okay so reload good here. Alright so

146
00:12:22.039 --> 00:12:26.909 A:middle L:90%
where thresholds? Okay so this is not Oh I

147
00:12:26.980 --> 00:12:33.620 A:middle L:90%
did 100. Still 1000. Okay so we go

148
00:12:33.990 --> 00:12:36.779 A:middle L:90%
here. Okay so it it does go off the

149
00:12:36.889 --> 00:12:39.190 A:middle L:90%
screen but it goes the wrong way so it always

150
00:12:39.519 --> 00:12:41.419 A:middle L:90%
goes on the right. So we want to make

151
00:12:41.720 --> 00:12:45.139 A:middle L:90%
this minus 1000 if the user swipe to the left

152
00:12:45.850 --> 00:12:47.620 A:middle L:90%
and actually a nice way to do that is you

153
00:12:47.720 --> 00:12:51.120 A:middle L:90%
can use math dot sine. So I think it's

154
00:12:51.279 --> 00:13:01.299 A:middle L:90%
a you multiplied so math dot sign of this and

155
00:13:01.409 --> 00:13:05.509 A:middle L:90%
the check if this works. Okay so it's method

156
00:13:05.850 --> 00:13:10.509 A:middle L:90%
sign but I accidentally He didn't put it inside here

157
00:13:10.679 --> 00:13:13.929 A:middle L:90%
so it's 1000 times method sign with the translation.

158
00:13:15.440 --> 00:13:18.090 A:middle L:90%
So let me just reload this so you can see

159
00:13:18.330 --> 00:13:21.340 A:middle L:90%
that if I go to the left it's close to

160
00:13:21.419 --> 00:13:23.370 A:middle L:90%
the left if you go to the right. So

161
00:13:23.610 --> 00:13:26.470 A:middle L:90%
so light. So what methods sign does is it

162
00:13:26.629 --> 00:13:29.370 A:middle L:90%
looks at whatever sign this is and then it just

163
00:13:29.590 --> 00:13:32.009 A:middle L:90%
returns basically plus one or minus one. So if

164
00:13:32.120 --> 00:13:33.909 A:middle L:90%
this is negative, it will make this whole value

165
00:13:34.149 --> 00:13:39.039 A:middle L:90%
negative and if it's positive it's a positive. All

166
00:13:39.169 --> 00:13:42.580 A:middle L:90%
right, so we've now swiped our item off the

167
00:13:42.669 --> 00:13:44.850 A:middle L:90%
screen. So now we also want to delete it

168
00:13:45.940 --> 00:13:48.750 A:middle L:90%
. So we already have up context here and we

169
00:13:48.830 --> 00:13:51.440 A:middle L:90%
all have already have handled the lead here. So

170
00:13:51.899 --> 00:13:55.450 A:middle L:90%
let's just yeah, um Call Hand of Elite.

171
00:13:55.820 --> 00:13:57.600 A:middle L:90%
But the thing is we don't want to delete it

172
00:13:57.710 --> 00:13:59.649 A:middle L:90%
straight away. We want to leave some time for

173
00:13:59.740 --> 00:14:02.279 A:middle L:90%
the animation to finish and then delete it. So

174
00:14:03.049 --> 00:14:13.139 A:middle L:90%
let's create another use callback. Delete with delay and

175
00:14:13.440 --> 00:14:20.889 A:middle L:90%
direct. He was called back. Okay, let's

176
00:14:21.019 --> 00:14:22.490 A:middle L:90%
just do a set time out. So here let's

177
00:14:22.679 --> 00:14:26.450 A:middle L:90%
do a set time out and an arrow function.

178
00:14:28.039 --> 00:14:31.899 A:middle L:90%
Let's just wait for half a second. It's probably

179
00:14:32.159 --> 00:14:35.730 A:middle L:90%
enough. And after this time out let's just call

180
00:14:36.639 --> 00:14:41.970 A:middle L:90%
and I'll delete. Mhm. So we'll add the

181
00:14:42.389 --> 00:14:49.240 A:middle L:90%
dependency array to meet with delay. Yeah. Okay

182
00:14:49.809 --> 00:14:57.230 A:middle L:90%
. And let's open her up and then if we

183
00:14:57.350 --> 00:15:00.279 A:middle L:90%
swipe. Okay, So now we actually get this

184
00:15:00.429 --> 00:15:02.450 A:middle L:90%
error and you'll see this a lot when you're working

185
00:15:02.840 --> 00:15:05.340 A:middle L:90%
with the animated too. If you're trying to like

186
00:15:05.629 --> 00:15:09.399 A:middle L:90%
cold JavaScript from within an animation. So if you

187
00:15:09.509 --> 00:15:11.779 A:middle L:90%
want to call a javascript code within this treasure hunter

188
00:15:12.120 --> 00:15:14.299 A:middle L:90%
, like we do you need to use run on

189
00:15:14.519 --> 00:15:16.470 A:middle L:90%
Js to tell it to run the javascript thread.

190
00:15:16.850 --> 00:15:21.720 A:middle L:90%
So if you import, run on Js and then

191
00:15:21.889 --> 00:15:24.379 A:middle L:90%
here are delete with delay. We wrap it and

192
00:15:24.700 --> 00:15:35.120 A:middle L:90%
run on Js and safe and also reload. And

193
00:15:35.269 --> 00:15:38.450 A:middle L:90%
now we swipe, You can see that it's wipes

194
00:15:38.710 --> 00:15:45.379 A:middle L:90%
away our items sketch be tickled. Yeah. So

195
00:15:45.840 --> 00:15:48.789 A:middle L:90%
I do realize that this is different from my code

196
00:15:49.049 --> 00:15:51.529 A:middle L:90%
example. I'll probably update the code example later.

197
00:15:51.860 --> 00:15:54.429 A:middle L:90%
So this is actually a simpler way of doing this

198
00:15:54.779 --> 00:15:57.919 A:middle L:90%
. The original on gesture event that I built wasn't

199
00:15:58.470 --> 00:16:00.980 A:middle L:90%
using the animated gesture handler so this is a much

200
00:16:01.240 --> 00:16:04.539 A:middle L:90%
more optimized way of doing it rather than storing this

201
00:16:04.960 --> 00:16:05.080 A:middle L:90%
in context.

