WEBVTT

1
00:00:01.139 --> 00:00:03.049 A:middle L:90%
awesome. That's it. We have reached the end

2
00:00:03.549 --> 00:00:05.799 A:middle L:90%
. Thank you so much for this course. I

3
00:00:05.870 --> 00:00:08.750 A:middle L:90%
hope you learned, I hope you found something interesting

4
00:00:09.400 --> 00:00:11.550 A:middle L:90%
in the schools. Um, so just a recap

5
00:00:12.050 --> 00:00:13.609 A:middle L:90%
of things that we looked at. So we looked

6
00:00:13.839 --> 00:00:16.339 A:middle L:90%
at using TypeScript with react native. We did agree

7
00:00:16.660 --> 00:00:19.449 A:middle L:90%
cap of core components and react hooks. We added

8
00:00:19.890 --> 00:00:23.640 A:middle L:90%
a bottom navigation bar so you better to bottom navigation

9
00:00:24.120 --> 00:00:27.050 A:middle L:90%
bar. We looked at JavaScript only versus native libraries

10
00:00:27.480 --> 00:00:30.850 A:middle L:90%
in react native we used react context to store global

11
00:00:31.329 --> 00:00:34.210 A:middle L:90%
upstate, we learned how to persist aps data,

12
00:00:34.789 --> 00:00:37.859 A:middle L:90%
we learned how to persist data across app launches using

13
00:00:38.159 --> 00:00:40.820 A:middle L:90%
a sting storage. We looked at rendering images locally

14
00:00:41.460 --> 00:00:45.259 A:middle L:90%
and remotely via Euro. We added Sp Gs in

15
00:00:45.409 --> 00:00:48.000 A:middle L:90%
react native for a bottom tabs. We added custom

16
00:00:48.350 --> 00:00:51.820 A:middle L:90%
funds. We created animations using layout animation as well

17
00:00:52.009 --> 00:00:55.130 A:middle L:90%
as custom animations using reanimated too. We added an

18
00:00:55.229 --> 00:00:58.539 A:middle L:90%
app icon and splash screen and we also did a

19
00:00:58.689 --> 00:01:04.019 A:middle L:90%
well wind in show into data visualization so where to

20
00:01:04.140 --> 00:01:06.750 A:middle L:90%
next? Well we have only really escaped escaped the

21
00:01:06.829 --> 00:01:09.069 A:middle L:90%
surface when it comes to animations in react native.

22
00:01:09.659 --> 00:01:11.180 A:middle L:90%
And I think that's one of the most exciting part

23
00:01:11.500 --> 00:01:13.549 A:middle L:90%
. So now that you have the Fundamentals and you

24
00:01:13.620 --> 00:01:15.500 A:middle L:90%
have the dogs, here's some things that you could

25
00:01:15.640 --> 00:01:18.159 A:middle L:90%
try, you could try to group the items in

26
00:01:18.230 --> 00:01:20.459 A:middle L:90%
the history tab by day and then render the days

27
00:01:20.739 --> 00:01:23.250 A:middle L:90%
using a draw so that each day is a draw

28
00:01:23.480 --> 00:01:25.420 A:middle L:90%
and then when you tap on it it will expand

29
00:01:26.230 --> 00:01:29.579 A:middle L:90%
to show the actual entries, you could create a

30
00:01:29.739 --> 00:01:33.030 A:middle L:90%
component to fade or scale in when an image is

31
00:01:33.150 --> 00:01:34.730 A:middle L:90%
loaded by a Ural. So this is a very

32
00:01:34.909 --> 00:01:37.819 A:middle L:90%
common use case if you're loading something by your all

33
00:01:38.090 --> 00:01:39.719 A:middle L:90%
, you need to call the on load event and

34
00:01:39.840 --> 00:01:42.090 A:middle L:90%
then fade in so you don't have the white image

35
00:01:42.450 --> 00:01:45.599 A:middle L:90%
while you're loading. And you could try using an

36
00:01:45.750 --> 00:01:48.750 A:middle L:90%
animated header for a scroll the page. So this

37
00:01:48.920 --> 00:01:51.409 A:middle L:90%
will be using the animated gesture handler. So when

38
00:01:51.530 --> 00:01:53.480 A:middle L:90%
you scroll down on a page you could have head

39
00:01:53.829 --> 00:01:57.700 A:middle L:90%
of pop up or change. Another thing that we

40
00:01:57.790 --> 00:02:00.370 A:middle L:90%
didn't really touch on was haptic feedback. So haptic

41
00:02:00.689 --> 00:02:03.689 A:middle L:90%
feedback is vibration and it's often used to make apps

42
00:02:04.010 --> 00:02:05.569 A:middle L:90%
kind of nicer to use. You'll see the lot

43
00:02:05.810 --> 00:02:08.979 A:middle L:90%
of you like a tweet for example and also sounds

44
00:02:09.490 --> 00:02:13.560 A:middle L:90%
so playing sounds when something good happens. So there

45
00:02:13.699 --> 00:02:15.669 A:middle L:90%
are two libraries here that you could try using so

46
00:02:15.919 --> 00:02:18.870 A:middle L:90%
react native haptic feedback and react native sound. So

47
00:02:19.300 --> 00:02:21.560 A:middle L:90%
for example you could add a haptic feedback effect.

48
00:02:21.949 --> 00:02:25.939 A:middle L:90%
We'll use a selection mood. And also I've only

49
00:02:26.129 --> 00:02:28.729 A:middle L:90%
given one example of using a victory chart in the

50
00:02:28.819 --> 00:02:30.750 A:middle L:90%
rap. But there are so many more charts available

51
00:02:31.270 --> 00:02:33.699 A:middle L:90%
and different ways of displaying your data. So you

52
00:02:33.770 --> 00:02:36.379 A:middle L:90%
can get creative and try visualizing your data in a

53
00:02:36.419 --> 00:02:38.000 A:middle L:90%
different kind of chart, Maybe a bar chart.

54
00:02:40.159 --> 00:02:42.349 A:middle L:90%
And finally thanks so much for taking my cause I

55
00:02:42.560 --> 00:02:45.110 A:middle L:90%
hope you find it informative and helpful in your react

56
00:02:45.370 --> 00:02:47.509 A:middle L:90%
native journey. Would you be able to use react

57
00:02:48.060 --> 00:02:53.939 A:middle L:90%
native for game development? Yes. Yeah. Um

58
00:02:54.500 --> 00:02:57.439 A:middle L:90%
so it depends on the games I think. Um

59
00:02:57.849 --> 00:03:02.060 A:middle L:90%
so for for like 3D platformers um you know,

60
00:03:02.189 --> 00:03:04.840 A:middle L:90%
you would use something like unity which you can you

61
00:03:04.990 --> 00:03:08.110 A:middle L:90%
can run on on mobile mobile apps. Um but

62
00:03:08.680 --> 00:03:12.099 A:middle L:90%
if it was maybe a gesture based up you could

63
00:03:12.199 --> 00:03:15.419 A:middle L:90%
definitely do it. Um One of my colleagues actually

64
00:03:16.039 --> 00:03:18.689 A:middle L:90%
built an app which is drag and drop based so

65
00:03:18.889 --> 00:03:20.650 A:middle L:90%
you could do things like for example if you wanted

66
00:03:20.840 --> 00:03:22.710 A:middle L:90%
to do a Sudoku that was in react native or

67
00:03:22.800 --> 00:03:25.389 A:middle L:90%
if you wanted to do something where you're like drag

68
00:03:25.909 --> 00:03:29.240 A:middle L:90%
items the right position that would work. Um So

69
00:03:29.599 --> 00:03:31.330 A:middle L:90%
it's just like tools for the job but if it

70
00:03:31.389 --> 00:03:32.990 A:middle L:90%
was something like to do with three D. Um

71
00:03:33.889 --> 00:03:36.550 A:middle L:90%
like I personally don't know at all to do it

72
00:03:36.680 --> 00:03:44.199 A:middle L:90%
at the moment about testing libraries. Um So for

73
00:03:44.479 --> 00:03:48.300 A:middle L:90%
entering testing, detox is kind of the go to

74
00:03:48.719 --> 00:03:50.840 A:middle L:90%
so for testing like Madonna JavaScript stuff you would still

75
00:03:51.090 --> 00:03:54.360 A:middle L:90%
use uh Just just it was still works and most

76
00:03:54.620 --> 00:03:56.759 A:middle L:90%
of your testing on the front end would be using

77
00:03:57.000 --> 00:04:03.039 A:middle L:90%
just but foreign twins, you would use detox mr

78
00:04:03.409 --> 00:04:07.990 A:middle L:90%
busy doctor back native. Mhm. There you go

79
00:04:08.740 --> 00:04:10.340 A:middle L:90%
. And that's kind of the go to so you

80
00:04:10.439 --> 00:04:15.419 A:middle L:90%
still write your tests in JavaScript but then you know

81
00:04:15.490 --> 00:04:17.709 A:middle L:90%
you can run them on random on ci and uh

82
00:04:18.310 --> 00:04:20.529 A:middle L:90%
and run them into end, could you give an

83
00:04:20.670 --> 00:04:25.339 A:middle L:90%
overview of authentication strategies for react native? Yes,

84
00:04:26.120 --> 00:04:28.310 A:middle L:90%
so that's something I was hoping to cover in this

85
00:04:28.500 --> 00:04:31.790 A:middle L:90%
in this uh in this course but didn't quite get

86
00:04:31.990 --> 00:04:35.480 A:middle L:90%
to. Okay, so with authentication, so one

87
00:04:35.660 --> 00:04:41.050 A:middle L:90%
of the things is like where do you authenticate?

88
00:04:41.810 --> 00:04:46.910 A:middle L:90%
And when? So if you're up um has a

89
00:04:47.069 --> 00:04:52.079 A:middle L:90%
completely different view for users that are authenticated and then

90
00:04:52.579 --> 00:04:55.680 A:middle L:90%
users that aren't authenticated, what you would do is

91
00:04:55.959 --> 00:04:58.509 A:middle L:90%
at the very root level. So here, before

92
00:04:59.360 --> 00:05:03.560 A:middle L:90%
you Hide the splash screen, you would decide whether

93
00:05:04.069 --> 00:05:06.709 A:middle L:90%
the user should either locked in flow or the locked

94
00:05:06.970 --> 00:05:09.959 A:middle L:90%
outflow. So you could for example, do if

95
00:05:10.139 --> 00:05:13.740 A:middle L:90%
you store your user's token in 18 stories or secure

96
00:05:14.069 --> 00:05:17.560 A:middle L:90%
storage you would see okay if there is no token

97
00:05:18.389 --> 00:05:21.540 A:middle L:90%
, they are probably um not locked in but they're

98
00:05:21.649 --> 00:05:23.290 A:middle L:90%
definitely not locked in. So show them the looked

99
00:05:23.720 --> 00:05:25.569 A:middle L:90%
out of you are the way show them locked in

100
00:05:25.689 --> 00:05:27.560 A:middle L:90%
view. So that would be one way of doing

101
00:05:27.829 --> 00:05:29.949 A:middle L:90%
it. Um on the current app that I'm working

102
00:05:30.310 --> 00:05:32.560 A:middle L:90%
on. It's a little bit frustrating that you have

103
00:05:33.069 --> 00:05:37.259 A:middle L:90%
a um the app is usable if you are not

104
00:05:37.529 --> 00:05:39.689 A:middle L:90%
logged in but then you can choose to log in

105
00:05:39.879 --> 00:05:43.160 A:middle L:90%
in the middle and then everything should still work like

106
00:05:43.379 --> 00:05:44.910 A:middle L:90%
the same way and the Ui looks really similar.

107
00:05:45.399 --> 00:05:47.170 A:middle L:90%
So the way we handle it is that we have

108
00:05:47.660 --> 00:05:51.180 A:middle L:90%
an oath context. So a north provider that basically

109
00:05:51.569 --> 00:05:53.610 A:middle L:90%
handles like whether you're logged in, what's the current

110
00:05:53.850 --> 00:05:56.089 A:middle L:90%
user, like what was the state and then it's

111
00:05:56.209 --> 00:05:58.120 A:middle L:90%
handled on a global level. If I have an

112
00:05:58.250 --> 00:06:02.810 A:middle L:90%
svg tag can I add on click interactivity and stuff

113
00:06:03.290 --> 00:06:07.279 A:middle L:90%
directly to the element or? Um So you can

114
00:06:08.199 --> 00:06:11.500 A:middle L:90%
um I wouldn't recommend it. It's a little it's

115
00:06:11.660 --> 00:06:15.629 A:middle L:90%
a little bit so we actually like again in a

116
00:06:15.699 --> 00:06:18.720 A:middle L:90%
recent project we have some complex S. V.

117
00:06:18.850 --> 00:06:20.519 A:middle L:90%
G. As going on where we need to press

118
00:06:20.829 --> 00:06:22.259 A:middle L:90%
in the middle tap in the middle of an spg

119
00:06:22.899 --> 00:06:26.589 A:middle L:90%
. And on annual in particular it created some unexpected

120
00:06:27.759 --> 00:06:31.069 A:middle L:90%
behaviors and the press wasn't always um always struggled.

121
00:06:31.600 --> 00:06:34.689 A:middle L:90%
So actually what we ended up doing is we absolute

122
00:06:35.610 --> 00:06:40.019 A:middle L:90%
positioned a the the press herbal area on top of

123
00:06:40.110 --> 00:06:42.790 A:middle L:90%
the spg at the at the right position so you

124
00:06:42.879 --> 00:06:43.930 A:middle L:90%
will have the S. P. G. And

125
00:06:44.220 --> 00:06:47.060 A:middle L:90%
then the button is absolute position on top of it

126
00:06:47.439 --> 00:06:49.620 A:middle L:90%
that will handle the precedent because we need to animate

127
00:06:50.089 --> 00:06:53.269 A:middle L:90%
it and yeah it just wasn't working as we wanted

128
00:06:54.839 --> 00:06:57.100 A:middle L:90%
but in general it is supposedly like there is an

129
00:06:57.189 --> 00:07:02.490 A:middle L:90%
unprecedented I own a species any deployment pipeline or deployment

130
00:07:03.230 --> 00:07:06.110 A:middle L:90%
tools for react native that we should be aware of

131
00:07:06.649 --> 00:07:10.269 A:middle L:90%
. So I almost exclusively have been using app center

132
00:07:11.439 --> 00:07:16.939 A:middle L:90%
which is Microsoft absent er and basically it is I

133
00:07:17.040 --> 00:07:19.889 A:middle L:90%
will say that it is slow especially for IOS I

134
00:07:19.949 --> 00:07:23.389 A:middle L:90%
think the current current build for IOS it takes like

135
00:07:23.779 --> 00:07:26.879 A:middle L:90%
30 or 40 minutes but enjoyed it's like 15 minutes

136
00:07:27.399 --> 00:07:31.540 A:middle L:90%
. So it's no ideal however for like a paid

137
00:07:32.300 --> 00:07:37.439 A:middle L:90%
um subscription is like $30 or £30 a month which

138
00:07:37.769 --> 00:07:40.240 A:middle L:90%
is like affordable for for a ci service for unlimited

139
00:07:40.660 --> 00:07:45.939 A:middle L:90%
builds and basically how it is absent. Um Most

140
00:07:46.230 --> 00:07:48.279 A:middle L:90%
of time they also have a free tier but I

141
00:07:48.319 --> 00:07:50.689 A:middle L:90%
think it's only 60 minutes a month so it's not

142
00:07:50.860 --> 00:07:54.930 A:middle L:90%
usually enough and I would always always always build on

143
00:07:55.139 --> 00:07:57.889 A:middle L:90%
ci rather than locally. So even though you can

144
00:07:58.220 --> 00:08:01.689 A:middle L:90%
obviously built locally just to manage the certificates and build

145
00:08:01.920 --> 00:08:04.949 A:middle L:90%
, signing both on IOS and android just to make

146
00:08:05.160 --> 00:08:07.189 A:middle L:90%
sure that you have the right environment variables. It's

147
00:08:07.449 --> 00:08:10.300 A:middle L:90%
just much safer to set it up once on ci

148
00:08:10.839 --> 00:08:13.139 A:middle L:90%
and then you know you're having a consistent, consistent

149
00:08:13.939 --> 00:08:17.629 A:middle L:90%
response, consistent behavior. You can also actually set

150
00:08:18.129 --> 00:08:20.910 A:middle L:90%
this up fully on get up actions so get up

151
00:08:21.009 --> 00:08:25.610 A:middle L:90%
actions support max. So um you can set up

152
00:08:25.730 --> 00:08:27.810 A:middle L:90%
your pipeline to build fully on get up actions.

153
00:08:28.379 --> 00:08:30.790 A:middle L:90%
So some of the projects in my company actually do

154
00:08:30.959 --> 00:08:32.750 A:middle L:90%
that so most of, most of them. All

155
00:08:32.870 --> 00:08:35.440 A:middle L:90%
right. Get up actions or absent. Um Do

156
00:08:35.610 --> 00:08:39.429 A:middle L:90%
you ever use a web view or linking especially with

157
00:08:39.720 --> 00:08:43.240 A:middle L:90%
payments with Paypal, that kind of thing? Um

158
00:08:43.809 --> 00:08:47.330 A:middle L:90%
Yeah, regulated web you is pretty awesome and sometimes

159
00:08:48.019 --> 00:08:50.230 A:middle L:90%
, I mean I think it depends like if you're

160
00:08:50.360 --> 00:08:53.250 A:middle L:90%
doing something from scratch and you know it's the company

161
00:08:53.750 --> 00:08:55.409 A:middle L:90%
, their first app, they've never had anything else

162
00:08:55.820 --> 00:08:59.919 A:middle L:90%
and um you have free reign to build everything from

163
00:09:00.070 --> 00:09:02.409 A:middle L:90%
scratch. Obviously it's nice not to use web views

164
00:09:02.940 --> 00:09:04.419 A:middle L:90%
but all the time, especially for big companies,

165
00:09:05.340 --> 00:09:08.690 A:middle L:90%
um, like not everything is available via an Api

166
00:09:09.299 --> 00:09:12.100 A:middle L:90%
um, so you'll have elements or application that you'll

167
00:09:12.240 --> 00:09:15.639 A:middle L:90%
have to render within a web you, so it's

168
00:09:15.889 --> 00:09:19.580 A:middle L:90%
not ideal because it can take you outside of the

169
00:09:20.299 --> 00:09:22.659 A:middle L:90%
kind of flow that the user was in and also

170
00:09:22.840 --> 00:09:25.269 A:middle L:90%
you don't have control over the styling of the web

171
00:09:25.519 --> 00:09:28.000 A:middle L:90%
, you um, so it might look not the

172
00:09:28.090 --> 00:09:33.460 A:middle L:90%
same as the rest of europe, but sometimes you

173
00:09:33.539 --> 00:09:36.200 A:middle L:90%
have to uh and yeah, I've used vaccinated web

174
00:09:36.389 --> 00:09:38.049 A:middle L:90%
. You could have it. Oh, it looks

175
00:09:38.250 --> 00:09:41.710 A:middle L:90%
like there's one last one about the path for upgrading

176
00:09:42.220 --> 00:09:44.740 A:middle L:90%
, react native with new versions of android and IOS

177
00:09:45.500 --> 00:09:47.669 A:middle L:90%
. Is that getting better or is it still pain

178
00:09:48.740 --> 00:09:50.519 A:middle L:90%
? It's not been a pain. I mean you

179
00:09:50.789 --> 00:09:53.200 A:middle L:90%
literally, I think you saw it at the very

180
00:09:53.559 --> 00:09:55.710 A:middle L:90%
beginning when we create a new project, we had

181
00:09:56.029 --> 00:09:58.940 A:middle L:90%
an expert update which basically broke the template. Uh

182
00:09:59.429 --> 00:10:01.460 A:middle L:90%
so things like that will happen. But they usually

183
00:10:01.889 --> 00:10:03.759 A:middle L:90%
like one small thing in a community will sort it

184
00:10:03.850 --> 00:10:04.330 A:middle L:90%
out stupid quickly

