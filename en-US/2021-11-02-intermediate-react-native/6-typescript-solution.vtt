WEBVTT

1
00:00:00.240 --> 00:00:01.980 A:middle L:90%
All right. Let's see how to implement this pet

2
00:00:02.259 --> 00:00:04.370 A:middle L:90%
type. So we already have a name which is

3
00:00:04.469 --> 00:00:06.950 A:middle L:90%
a string. Now let's look at the second type

4
00:00:07.299 --> 00:00:09.369 A:middle L:90%
. So we have kind which can be a cut

5
00:00:10.070 --> 00:00:13.050 A:middle L:90%
a dog or a fish. So I could do

6
00:00:13.419 --> 00:00:16.440 A:middle L:90%
kind is a string because they're all string elements.

7
00:00:17.050 --> 00:00:20.039 A:middle L:90%
However, we can actually be more strict here because

8
00:00:20.539 --> 00:00:22.929 A:middle L:90%
if I made it a string, I could type

9
00:00:23.260 --> 00:00:25.239 A:middle L:90%
whatever hit and it would still be valid. So

10
00:00:25.699 --> 00:00:27.960 A:middle L:90%
let's use the old type and call it a cat

11
00:00:29.140 --> 00:00:37.369 A:middle L:90%
or a fish or a dog. Now this means

12
00:00:37.679 --> 00:00:40.100 A:middle L:90%
if you get different kinds of pets introduced, you'll

13
00:00:40.369 --> 00:00:42.140 A:middle L:90%
need to add it to the coins. Next up

14
00:00:42.350 --> 00:00:45.240 A:middle L:90%
we have an age so we got 102 and one

15
00:00:45.829 --> 00:00:48.109 A:middle L:90%
so we can see that the age is a number

16
00:00:50.840 --> 00:00:52.649 A:middle L:90%
. Now I've got favorite foods. So we have

17
00:00:53.060 --> 00:00:56.060 A:middle L:90%
an array of strings, an array of one string

18
00:00:56.719 --> 00:01:00.140 A:middle L:90%
and array of the string. So let's do they're

19
00:01:00.380 --> 00:01:05.269 A:middle L:90%
rich foods. Let's make it a string away.

20
00:01:09.439 --> 00:01:12.189 A:middle L:90%
Next up we have a function for speak. So

21
00:01:12.340 --> 00:01:15.799 A:middle L:90%
this just console logs something. This console looks something

22
00:01:16.799 --> 00:01:19.219 A:middle L:90%
and this doesn't have the speak function. So let's

23
00:01:19.450 --> 00:01:23.000 A:middle L:90%
do speak. And let's make it an arrow function

24
00:01:23.989 --> 00:01:28.109 A:middle L:90%
and then make it return void. Okay, so

25
00:01:28.590 --> 00:01:32.750 A:middle L:90%
it works here works here. But here under the

26
00:01:32.849 --> 00:01:37.230 A:middle L:90%
fish we don't have to speak function. So we

27
00:01:37.290 --> 00:01:39.120 A:middle L:90%
need to make this optional. So let's add a

28
00:01:39.250 --> 00:01:42.299 A:middle L:90%
question mark before the colon and now it's an optional

29
00:01:42.599 --> 00:01:46.000 A:middle L:90%
type and lastly we have an owner. So an

30
00:01:46.150 --> 00:01:50.049 A:middle L:90%
owner is an object with two properties. So we

31
00:01:50.129 --> 00:01:52.090 A:middle L:90%
can easily add an object here, called owner.

32
00:01:53.739 --> 00:01:55.980 A:middle L:90%
And we'll make this into an object and we'll do

33
00:01:56.450 --> 00:02:05.069 A:middle L:90%
name, string and age. Yeah, you can

34
00:02:05.189 --> 00:02:08.199 A:middle L:90%
also pull this out into a separate type so you

35
00:02:08.280 --> 00:02:13.169 A:middle L:90%
can do it type ona equals, and then we

36
00:02:13.289 --> 00:02:25.560 A:middle L:90%
can copy the name and the age here and in

37
00:02:25.710 --> 00:02:28.319 A:middle L:90%
our pet type. We can reference this owners Hope

38
00:02:28.530 --> 00:02:30.740 A:middle L:90%
instead. And for example, if this owner was

39
00:02:30.909 --> 00:02:32.289 A:middle L:90%
in a race, if we had multiple owners,

40
00:02:32.889 --> 00:02:35.139 A:middle L:90%
you could add an array in the end. So

41
00:02:35.310 --> 00:02:36.620 A:middle L:90%
this is how you can combine types.

