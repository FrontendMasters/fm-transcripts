WEBVTT

1
00:00:00.200 --> 00:00:02.044
Let's move on to pressable.

2
00:00:02.044 --> 00:00:04.117
So pressable is
a relatively new component.

3
00:00:04.117 --> 00:00:07.280
It was introduced in React Native 63.

4
00:00:07.280 --> 00:00:12.450
And it's a more versatile alternative to
the touchable opacity such as a highlight.

5
00:00:12.450 --> 00:00:17.216
So, usually, people tend to use
touchable opacity because it gives you

6
00:00:17.216 --> 00:00:20.121
some quick interaction feedback for free.

7
00:00:20.121 --> 00:00:22.172
The problem with that is
it's very distinctive.

8
00:00:22.172 --> 00:00:25.958
So you can almost tell which apps are
built with React Native by the touchable

9
00:00:25.958 --> 00:00:28.980
opacity, because people
use the default values.

10
00:00:28.980 --> 00:00:34.780
So you can either use touchable
opacity but reduce the active opacity.

11
00:00:34.780 --> 00:00:40.163
Or actually what is recommended is
that we all switch to using pressable.

12
00:00:40.163 --> 00:00:44.132
So, in the future, I think the touchable
components are going to be deprecated.

13
00:00:44.132 --> 00:00:46.480
So in my applications,
I only use pressable.

14
00:00:47.850 --> 00:00:50.921
So pressable is very similar
to touchable opacity.

15
00:00:50.921 --> 00:00:53.428
It has all the same events, but

16
00:00:53.428 --> 00:00:58.353
you can explicitly style the pressed and
not pressed state.

17
00:00:58.353 --> 00:01:01.809
So the pressable component knows
whether it's pressed or not so

18
00:01:01.809 --> 00:01:03.032
you can apply styles.

19
00:01:03.032 --> 00:01:05.110
And I've added an example here.

20
00:01:05.110 --> 00:01:09.213
If you want it to have the same
effect as touchable opacity but

21
00:01:09.213 --> 00:01:12.279
using pressable you can
use this component.

22
00:01:12.279 --> 00:01:14.823
So I've called it presser area and

23
00:01:14.823 --> 00:01:20.436
basically what this does is you can use
it this it applies the pressed state so

24
00:01:20.436 --> 00:01:24.491
when you are pressed,
it applies the opacity 9.9.

25
00:01:24.491 --> 00:01:26.822
Otherwise, it doesn't do anything.

26
00:01:26.822 --> 00:01:30.273
And the effect is very similar to
what the touchable opacity does, but

27
00:01:30.273 --> 00:01:33.270
it's actually the same as what
the touchable opacity does.

28
00:01:34.900 --> 00:01:38.330
And this file here is just to make
sure that we also apply styles.

29
00:01:40.370 --> 00:01:44.370
Cool, and you stayed, if you remember
is one of the React hooks and

30
00:01:44.370 --> 00:01:47.743
we used a short and
we use it to store the selected value.

31
00:01:47.743 --> 00:01:56.340
All right, let's start by creating
a typescript type for the emoji option.

32
00:01:56.340 --> 00:01:59.962
So usually in TypeScript projects,
I create a types file.

33
00:01:59.962 --> 00:02:02.052
So in source let's create types.ts.

34
00:02:02.052 --> 00:02:05.314
I'm just going to copy this.

35
00:02:05.314 --> 00:02:08.667
And in here we're going to export
a type mood option type, and

36
00:02:08.667 --> 00:02:11.451
we basically typed the emoji and
the description.

37
00:02:11.451 --> 00:02:15.991
So this is so that if we use
the same type in say various files,

38
00:02:15.991 --> 00:02:19.923
we have one source of truth for
the type definition.

39
00:02:19.923 --> 00:02:25.094
Now, next up let's import
this type in our mood picker.

40
00:02:25.094 --> 00:02:31.734
So, in mood picker, we will import mood,
option type from types,

41
00:02:31.734 --> 00:02:38.851
and we can actually explicitly type
these mood options if you wanted to.

42
00:02:38.851 --> 00:02:40.130
So mood, option type.

43
00:02:42.550 --> 00:02:46.293
Okay, so now we want to use state
variable for the selected mood.

44
00:02:46.293 --> 00:02:52.331
So inside of component let's do a const,

45
00:02:52.331 --> 00:02:57.852
selected mood, set selected mood and

46
00:02:57.852 --> 00:03:01.660
this is a React use state.

47
00:03:03.220 --> 00:03:04.498
And no initial value.

48
00:03:04.498 --> 00:03:09.353
Now the question becomes how do we
tell TypeScript that we want this to

49
00:03:09.353 --> 00:03:11.374
be of type mood option type?

50
00:03:11.374 --> 00:03:15.833
And actually the way we do this is
just after you state and before

51
00:03:15.833 --> 00:03:21.322
the parentheses we will add some angle
brackets and we place the typing here.

52
00:03:21.322 --> 00:03:23.885
So now when you hover over selected mood,

53
00:03:23.885 --> 00:03:28.732
it actually tells you that here it's
either mood option type, or undefined.

54
00:03:28.732 --> 00:03:33.229
So next up let's import
pressable from React Native, and

55
00:03:33.229 --> 00:03:37.283
let's wrap each of these
texts inside a pressable.

56
00:03:42.010 --> 00:03:43.372
And on press.

57
00:03:47.283 --> 00:03:52.223
Let's set selection need
to be the current option.

