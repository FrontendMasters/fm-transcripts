WEBVTT

1
00:00:00.470 --> 00:00:05.522
Okay, so the first thing you would do with
any project is we create a new folder for

2
00:00:05.522 --> 00:00:06.600
the source.

3
00:00:06.600 --> 00:00:08.846
So let's call create a source directory.

4
00:00:11.087 --> 00:00:16.204
And next let's move our app
TSX into the source directory.

5
00:00:19.858 --> 00:00:22.774
So let's start by deleting
everything in update after TSX and

6
00:00:22.774 --> 00:00:24.129
let's start from scratch.

7
00:00:24.129 --> 00:00:29.279
So let's import react from react and

8
00:00:29.279 --> 00:00:33.266
let's export const app, so

9
00:00:33.266 --> 00:00:37.751
we'll use the Patriot typing so

10
00:00:37.751 --> 00:00:40.916
we'll do react.fc.

11
00:00:40.916 --> 00:00:46.466
And we'll make this into an arrow
function and let's return a view,

12
00:00:46.466 --> 00:00:51.935
one nice thing with Typescript is
if you use TypeScript and VS code.

13
00:00:51.935 --> 00:00:55.907
Which has amazing TypeScript support,
you will get auto imports so

14
00:00:55.907 --> 00:00:58.774
you don't have to add
a lot of imports yourself.

15
00:01:03.622 --> 00:01:09.462
Cool, and I'm going to do
a const styles at the bottom,

16
00:01:09.462 --> 00:01:15.210
let's do, Style sheet.create,

17
00:01:15.210 --> 00:01:20.913
a style sheet got imported from
react native automatically.

18
00:01:20.913 --> 00:01:28.194
And let's just have a container and I'm
going to make it full width so flex one,

19
00:01:29.885 --> 00:01:34.152
And I'm gonna give it
a background color of teal.

20
00:01:36.148 --> 00:01:42.997
And let's do on the view,
let's do style equals styles.container.

21
00:01:46.201 --> 00:01:51.750
Right, the last thing we need to
do is update the import for app.

22
00:01:51.750 --> 00:01:57.660
So if you go to index JS, you might have
not noticed but previously in a template.

23
00:01:57.660 --> 00:02:02.880
After TSX has a default export, but
we've changed it to a named export.

24
00:02:02.880 --> 00:02:07.920
So here's where we import up, we just
need to destructure it from the export.

25
00:02:09.860 --> 00:02:13.510
So when we say that you should have
a full screen, teal background.

26
00:02:14.610 --> 00:02:19.285
If you previously did my intro to React
Native course, you'll notice that the way

27
00:02:19.285 --> 00:02:23.170
we're structuring the app
file is little bit different.

28
00:02:23.170 --> 00:02:27.320
So we're using named exports
instead of default exports.

29
00:02:27.320 --> 00:02:29.293
And this is kind of a convenience thing,

30
00:02:29.293 --> 00:02:33.480
because you're guaranteed to know what
your export is going to be called.

31
00:02:33.480 --> 00:02:37.094
Because if it's a default export,
you could technically call it anything you

32
00:02:37.094 --> 00:02:39.700
could have typos,
it's hard to refactor them.

33
00:02:39.700 --> 00:02:42.847
So the current modern convention
is to have named exports and

34
00:02:42.847 --> 00:02:46.630
that's what we're going to be
doing throughout this course.

35
00:02:46.630 --> 00:02:50.474
All right, so in our source directory
let's create a new folder and

36
00:02:50.474 --> 00:02:51.895
let's call it screens.

37
00:02:51.895 --> 00:02:55.801
This is where we're going to
put all of our screens in and

38
00:02:55.801 --> 00:03:00.470
let's create a new file and
let's call it home dot screen dot TSX.

39
00:03:01.640 --> 00:03:05.267
So the dot screenpad is just a convention
I like to use just to tell myself that

40
00:03:05.267 --> 00:03:08.210
this file is a screen
without having to go into it.

41
00:03:08.210 --> 00:03:13.178
And here let's import react from react and

42
00:03:13.178 --> 00:03:16.904
expo const home, react FC, and

43
00:03:16.904 --> 00:03:21.370
we'll make it an arrow function.

44
00:03:21.370 --> 00:03:26.251
And let's just return
a view with some text.

45
00:03:29.921 --> 00:03:31.334
And let's call it home.

46
00:03:34.656 --> 00:03:37.237
Let's import text from React Native.

47
00:03:37.237 --> 00:03:41.352
All right and let's do the same for
our history tab, so

48
00:03:41.352 --> 00:03:46.914
in the screen directory we'll do new
file and history dot screen dot TSX.

49
00:03:46.914 --> 00:03:53.160
And I'm going to copy the contents of the
home file and just rename home to history.

50
00:03:55.950 --> 00:03:58.080
All right, so now we need a navigator.

51
00:03:58.080 --> 00:04:03.344
So let's add another file and
call it bottom tabs,

52
00:04:04.995 --> 00:04:09.273
Dot navigator dot TSX and

53
00:04:09.273 --> 00:04:14.367
here all the const bottom tabs

54
00:04:14.367 --> 00:04:20.895
equals create bottom tab navigator.

55
00:04:20.895 --> 00:04:25.753
And so this is auto imported from
react navigation bottom tabs.

56
00:04:28.528 --> 00:04:36.103
And we're going to do const,
we're going to export the components and

57
00:04:36.103 --> 00:04:41.925
we're going to the export
const button tabs react FC.

58
00:04:41.925 --> 00:04:43.612
So don't forget to import react.

59
00:04:46.633 --> 00:04:51.100
From react and we'll make this
into an arrow function as well.

60
00:04:52.510 --> 00:04:55.692
And we're going to return
then we're going to use

61
00:04:55.692 --> 00:04:59.030
this bottom tabs that we just created.

62
00:04:59.030 --> 00:05:03.235
So, let's do bottom tabs dot,
so we have a navigator so

63
00:05:03.235 --> 00:05:07.985
there's a full button tab is
always a one top level navigator.

64
00:05:10.647 --> 00:05:15.815
And then as children,
we will do bottom tabs dot screen and

65
00:05:15.815 --> 00:05:18.991
this is where we pass in our screen.

66
00:05:18.991 --> 00:05:23.569
So the screen has a name
this is what we call it who

67
00:05:23.569 --> 00:05:28.613
wants to navigate to it just to home and
a component.

68
00:05:28.613 --> 00:05:33.883
And for us it is our Home tab,
yeah we'll call

69
00:05:33.883 --> 00:05:38.888
this bottom tabs navigator as the export.

70
00:05:38.888 --> 00:05:42.028
Cool, so now we have the navigator and

71
00:05:42.028 --> 00:05:47.343
we have the home screen let's
also add our history screen, so,

72
00:05:51.092 --> 00:05:54.605
Add the history screen to the import and

73
00:05:54.605 --> 00:05:59.512
then copy this bottom tabs screen and
call it history.

74
00:06:02.209 --> 00:06:07.749
Excellent and lastly we need to use this
bottom tab navigator in our entry point so

75
00:06:07.749 --> 00:06:09.060
in our app dot TSX.

76
00:06:10.540 --> 00:06:15.598
So in our app dot TSX let's
remove the view that we had and

77
00:06:15.598 --> 00:06:20.018
let's instead return
a navigation container.

78
00:06:20.018 --> 00:06:22.894
So this is an import
from react navigation, so

79
00:06:22.894 --> 00:06:25.860
this will be wrapped at
the very top of your app.

80
00:06:25.860 --> 00:06:28.770
So this is like all the navigation
is inside this navigation container.

81
00:06:29.770 --> 00:06:34.123
And in here, we'll do a bottom tabs

82
00:06:36.246 --> 00:06:41.470
Navigator, which is the import
from screens that we just created.

83
00:06:44.010 --> 00:06:48.905
&gt;&gt; Just a quick question of why you
prefer exporting const instead of

84
00:06:48.905 --> 00:06:52.640
exporting default in your modules?

85
00:06:52.640 --> 00:06:58.362
&gt;&gt; Firstly, make sure your factoring
easier and also it makes it so,

86
00:06:58.362 --> 00:07:02.360
you have a consistent name style,
so, okay.

87
00:07:02.360 --> 00:07:08.860
So, for example, if I exported this
as default, so if I did export,

88
00:07:08.860 --> 00:07:15.630
default, something,
then if I import this something in here.

89
00:07:15.630 --> 00:07:21.958
I could do import anything, so
I could name this anything so

90
00:07:21.958 --> 00:07:26.570
it's not guaranteed to be consistent.

91
00:07:26.570 --> 00:07:31.471
Whereas if we export it as a const as
a named export, I don't have a choice but

92
00:07:31.471 --> 00:07:35.548
to use this I mean obviously I
could alias it to something else.

93
00:07:35.548 --> 00:07:39.327
But usually if you wanted to for example
rename something in your code base it

94
00:07:39.327 --> 00:07:41.997
becomes easier to find, so
it's just a convention.

95
00:07:46.418 --> 00:07:50.802
Cool, obviously if you prefer
default exports go for it,

96
00:07:50.802 --> 00:07:55.105
we can all have opinions in
JavaScript that's for sure.

97
00:07:55.105 --> 00:07:59.683
All right, so
now that we've saved this let's

98
00:07:59.683 --> 00:08:04.038
just remove the code we
don't need any more.

99
00:08:04.038 --> 00:08:11.075
We have a bottom toner gators so we have
a home tab and we have a history tab and

100
00:08:11.075 --> 00:08:17.035
they work and, And

101
00:08:17.035 --> 00:08:21.899
the same thing is working on Android, so
we have our history tab, and our home tab.

102
00:08:30.761 --> 00:08:33.312
And this is basically how you
make a bottom navigator, so

103
00:08:33.312 --> 00:08:35.240
if you've used stack navigators before.

104
00:08:35.240 --> 00:08:36.716
You can always nest them so for

105
00:08:36.716 --> 00:08:39.785
example if in your home tab
there are several screens.

106
00:08:39.785 --> 00:08:44.009
Then this component, which at the moment
is just a one JavaScript file,

107
00:08:44.009 --> 00:08:47.679
one JavaScript screens could be
a stack navigator instead, or

108
00:08:47.679 --> 00:08:49.355
another bottom navigator.

109
00:08:49.355 --> 00:08:55.312
So basically that's how the nesting
works within react navigation.

110
00:09:01.486 --> 00:09:05.415
All right, next up,
let's add a third tab for analytics.

111
00:09:08.001 --> 00:09:12.786
So to do that in screens,
let's create a new file the same way as we

112
00:09:12.786 --> 00:09:17.670
did with home and history and
call it analytics dot screen dot TSX.

113
00:09:19.930 --> 00:09:24.322
And I'm going to again copy the content
of our home, and paste it here and

114
00:09:24.322 --> 00:09:26.273
just rename this to analytics.

115
00:09:28.433 --> 00:09:34.827
And in our bottom tab navigator,
we want to import our analytics screen,

116
00:09:36.462 --> 00:09:39.752
And also add another bottom
tab screen to it, so

117
00:09:39.752 --> 00:09:44.070
we need to name analytics and
component analytics.

118
00:09:44.070 --> 00:09:47.490
&gt;&gt; Is there a limit to how many
navigation items you can have?

119
00:09:47.490 --> 00:09:53.215
&gt;&gt; No there isn't,
it's just kind of a tree view,

120
00:09:53.215 --> 00:10:00.490
it's there a limit to how many
depths you can have in HTML.

121
00:10:00.490 --> 00:10:02.660
It's kind of like you can
have as many as you want.

122
00:10:02.660 --> 00:10:08.597
Presumably if you had 1000s, there will
be some performance implications but

123
00:10:08.597 --> 00:10:13.061
there isn't a limit
&gt;&gt; How about the tab bar is there a limit,

124
00:10:13.061 --> 00:10:15.800
on that bottom tab bar, how many?

125
00:10:17.880 --> 00:10:21.480
&gt;&gt; That's a good question,
let's have a look.

126
00:10:22.734 --> 00:10:27.349
So, really what needs to be unique is
the name, so if I create a bunch of them,

127
00:10:27.349 --> 00:10:29.340
I think there's a visual limit.

128
00:10:30.370 --> 00:10:33.292
So they will just be spaced evenly,
obviously so

129
00:10:33.292 --> 00:10:37.658
now I've added a bunch of them and
it's just not going to look sensible.

130
00:10:37.658 --> 00:10:42.345
So I think realistically
you wouldn't really have

131
00:10:42.345 --> 00:10:45.508
any more than four or five I think.

132
00:10:45.508 --> 00:10:50.302
So if I add I guess if I add
five that's just about works,

133
00:10:50.302 --> 00:10:54.699
but usually most apps have
between three and four.

134
00:10:54.699 --> 00:11:01.550
&gt;&gt; How about stacked navigation like two
bottom bars could that be a potential?

135
00:11:04.062 --> 00:11:09.120
&gt;&gt; Yeah, you can nest them, so I could,
well, I can't recursively make this.

136
00:11:09.120 --> 00:11:14.223
Okay, so
if I did another bottom tabs navigator,

137
00:11:14.223 --> 00:11:17.753
so let's do two, I think to work.

138
00:11:17.753 --> 00:11:20.911
Okay, so I added in analytics three so

139
00:11:20.911 --> 00:11:25.955
I would expect it to be yeah so
there's like a double navbar.

140
00:11:25.955 --> 00:11:28.778
So if you nest them you'll just
get like navigation inside, so

141
00:11:28.778 --> 00:11:30.334
it's literally just a tree view.

142
00:11:30.334 --> 00:11:37.075
So it's basically saying, so each of these
components you can treat as your Abdo TSX.

143
00:11:37.075 --> 00:11:41.778
The kind of well no kind of each
of these components are their own,

144
00:11:41.778 --> 00:11:47.650
playground, and then anything you add
in here will just be rendered inside.

145
00:11:47.650 --> 00:11:52.571
So that's why for example if you need
to have full screen modals in your app.

146
00:11:52.571 --> 00:11:56.607
They need to be rendered outside
of this bottom tabs navigator,

147
00:11:56.607 --> 00:11:59.982
otherwise they get rendered
like above your nav bar.

