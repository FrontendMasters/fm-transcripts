WEBVTT

1
00:00:00.300 --> 00:00:04.740
So next we need to display a selected
state for the mood so we have this kind of

2
00:00:04.740 --> 00:00:09.630
blueish background and we need to
copy the color of this background.

3
00:00:09.630 --> 00:00:15.701
So let's do style equals styles.mooditem,

4
00:00:15.701 --> 00:00:22.679
and mood item we'll give
this a background color.

5
00:00:22.679 --> 00:00:27.068
This let me just check what I did okay so

6
00:00:27.068 --> 00:00:31.194
we'll do height and width of 60.

7
00:00:38.520 --> 00:00:45.670
And now we want to make it a circle,
so we'll do a border radius of 30.

8
00:00:45.670 --> 00:00:49.877
So if your border radius is double the
width or the heights then it makes you to

9
00:00:49.877 --> 00:00:53.710
circle and let's center the content
using justify content center.

10
00:00:56.699 --> 00:01:00.677
And align items center, and

11
00:01:00.677 --> 00:01:04.496
let's add a border color,

12
00:01:06.002 --> 00:01:10.157
Of white and

13
00:01:10.157 --> 00:01:17.224
order width of two.

14
00:01:17.224 --> 00:01:23.165
Cool, so now we only want to show
this style for the selected item.

15
00:01:23.165 --> 00:01:26.454
So let's do like mood item for

16
00:01:26.454 --> 00:01:31.727
the default styles and
also if the selected mood

17
00:01:36.460 --> 00:01:41.642
.emoji equals option.emoji then

18
00:01:41.642 --> 00:01:47.150
we also apply styles selected.

19
00:01:47.150 --> 00:01:49.431
Otherwise we do nothing.

20
00:01:51.583 --> 00:01:54.915
Styles.selectedmooditems.

21
00:01:58.972 --> 00:02:02.022
And we add a selected
mood item style here.

22
00:02:06.396 --> 00:02:08.905
And we copy the background color.

23
00:02:08.905 --> 00:02:11.678
So we want all of them to
be spaced the same way, but

24
00:02:11.678 --> 00:02:14.799
we want only the selected one
to have background color.

25
00:02:18.011 --> 00:02:19.845
And also the border color.

26
00:02:22.210 --> 00:02:27.980
And the border Cool.

27
00:02:29.550 --> 00:02:35.052
So now only the items that we
actually select, are highlighted.

28
00:02:35.052 --> 00:02:38.870
And finally, we also want to
display the text underneath.

29
00:02:40.030 --> 00:02:42.113
So let's wrap this in a view,

30
00:02:47.430 --> 00:02:50.999
And use a text.

31
00:02:50.999 --> 00:02:54.750
And here let's do option.description.

32
00:02:54.750 --> 00:03:00.285
And then that's only displayed for

33
00:03:00.285 --> 00:03:03.976
the selected items so if

34
00:03:06.191 --> 00:03:10.665
If option.emoji equals

35
00:03:10.665 --> 00:03:15.288
selectedmood.emoji then we display

36
00:03:15.288 --> 00:03:20.204
the description otherwise undefined.

37
00:03:22.025 --> 00:03:26.975
Now we need to add a style to this,
so let's do style,

38
00:03:26.975 --> 00:03:30.500
styles.emoji,descriptiontext.

39
00:03:33.860 --> 00:03:36.203
Let's create a style
called description text.

40
00:03:39.384 --> 00:03:43.759
And we'll use this color, so

41
00:03:43.759 --> 00:03:51.188
let's do color So
the same color as the background.

42
00:03:53.917 --> 00:03:57.197
And we'll do font weight bold.

43
00:04:01.844 --> 00:04:03.515
Text align center.

44
00:04:07.655 --> 00:04:11.860
And let's reduce the font size,
so let's do font size 10.

45
00:04:11.860 --> 00:04:14.404
So now we can select these options, and

46
00:04:14.404 --> 00:04:18.040
they actually become highlighted
when we select them.

47
00:04:19.920 --> 00:04:21.719
Next up, let's do some styling.

48
00:04:21.719 --> 00:04:24.307
So one of the downsides well the pros and

49
00:04:24.307 --> 00:04:28.550
the cons of styling in React Native
is that we use inline styles.

50
00:04:28.550 --> 00:04:32.374
And because we use inline styles we can't
do things that we would in CSS where

51
00:04:32.374 --> 00:04:35.379
we create global class names
that kind of reusable styles.

52
00:04:35.379 --> 00:04:39.741
So, what I usually do is create a theme
file and then in this theme file

53
00:04:39.741 --> 00:04:45.070
I would put all the constants that
can be shared throughout your app.

54
00:04:45.070 --> 00:04:51.046
So in a source directory, let's create
a new file and let's call it theme.ts and

55
00:04:51.046 --> 00:04:57.120
in here I'm going to just copy the two
colour constants that we're already using.

56
00:04:58.720 --> 00:05:01.649
So usually,
if you were using this on a real app,

57
00:05:01.649 --> 00:05:06.730
you would also add things like fonts or
spacing in here as far as the colors.

58
00:05:06.730 --> 00:05:12.991
So my convention actually where I like
to use that if I use it for spacing,

59
00:05:12.991 --> 00:05:19.370
I would do things like space 10 for
10 and then space 12 for 12 etc.

60
00:05:19.370 --> 00:05:23.063
And this is quite handy, because you will
know exactly all the spacing that are used

61
00:05:23.063 --> 00:05:24.516
throughout your application.

62
00:05:24.516 --> 00:05:29.307
And also using the point number,
picker does the number in the name,

63
00:05:29.307 --> 00:05:35.511
ensures that you won't have things like,
this was medium, and then this is large.

64
00:05:35.511 --> 00:05:39.580
And then if you get 11,
you have to call it medium large.

65
00:05:41.480 --> 00:05:43.381
But we're just going to be using it for
colors for now.

66
00:05:46.068 --> 00:05:51.059
Now next up we want to do is
basically create this layout

67
00:05:51.059 --> 00:05:54.645
where you have a box around your emoji.

68
00:05:54.645 --> 00:05:59.220
You have a prompt text to
ask you to select an emoji.

69
00:05:59.220 --> 00:06:05.850
And there's a Choose button that doesn't
actually do anything at the moment.

70
00:06:05.850 --> 00:06:08.370
But we're just going to start like this.

71
00:06:08.370 --> 00:06:12.640
&gt;&gt; Is it better to use margin or
reusable spacer component?

72
00:06:12.640 --> 00:06:17.720
&gt;&gt; It depends, I think in a lot of
places like margin makes more sense.

73
00:06:17.720 --> 00:06:22.820
Like, for example spacing around
this module would make more sense.

74
00:06:22.820 --> 00:06:27.399
But for example, if you add spacing,
like horizontally between elements,

75
00:06:27.399 --> 00:06:32.130
actually spacing component is super nice
because it keeps your JSX tree clean.

76
00:06:33.280 --> 00:06:36.480
Because basically you'll know
exactly where the spacing is.

77
00:06:36.480 --> 00:06:40.514
You don't have to worry about was
it bottom spacing or top spacing.

78
00:06:40.514 --> 00:06:42.980
So yeah, I use this basic component.

79
00:06:42.980 --> 00:06:44.911
All right.
So if we're starting we're going

80
00:06:44.911 --> 00:06:48.293
to create this little box that has
a prompt for how are you right now and

81
00:06:48.293 --> 00:06:50.450
a button to choose the emoji.

82
00:06:50.450 --> 00:06:54.680
So for a change try to implement
this just using a design.

83
00:06:54.680 --> 00:06:58.767
So I'm going to use the checkpoint
to copy the whole file.

84
00:07:12.195 --> 00:07:12.695
Perfect

