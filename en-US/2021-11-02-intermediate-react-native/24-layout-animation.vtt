WEBVTT

1
00:00:00.540 --> 00:00:03.250 A:middle L:90%
There are two ways to really animate your you are

2
00:00:03.439 --> 00:00:05.690 A:middle L:90%
in react native. You can either define the exact

3
00:00:06.209 --> 00:00:08.839 A:middle L:90%
animation that you need to do yourself or you can

4
00:00:09.009 --> 00:00:11.769 A:middle L:90%
let layout animation to all the work. So layered

5
00:00:12.029 --> 00:00:14.390 A:middle L:90%
animation. I was really excited when I discovered the

6
00:00:14.589 --> 00:00:17.870 A:middle L:90%
animation is incredibly flavorful but it's not very flexible.

7
00:00:18.839 --> 00:00:23.679 A:middle L:90%
Basically. It works by somewhat magically animating your app

8
00:00:24.260 --> 00:00:26.609 A:middle L:90%
from the current state of the Ui to the next

9
00:00:26.890 --> 00:00:29.019 A:middle L:90%
one. So basically after you trigger the layered animation

10
00:00:29.800 --> 00:00:32.210 A:middle L:90%
, the next Ui update that happens in your app

11
00:00:32.939 --> 00:00:36.299 A:middle L:90%
, um pregnancy will automatically animated Ui to the next

12
00:00:36.509 --> 00:00:38.979 A:middle L:90%
state. The downside of this is that it's not

13
00:00:39.159 --> 00:00:42.070 A:middle L:90%
flexible at all. You can't choose to do a

14
00:00:42.159 --> 00:00:44.890 A:middle L:90%
layered animation on just one element. It's kind of

15
00:00:44.979 --> 00:00:48.340 A:middle L:90%
all or nothing. So in most cases you will

16
00:00:48.450 --> 00:00:52.079 A:middle L:90%
probably end up writing your own animation. But the

17
00:00:52.189 --> 00:00:54.240 A:middle L:90%
animation is kind of handy if you want something quick

18
00:00:54.590 --> 00:00:57.369 A:middle L:90%
because it's often it's still a lot better than having

19
00:00:57.600 --> 00:01:07.950 A:middle L:90%
no animation at all. Okay, so the first

20
00:01:08.189 --> 00:01:10.099 A:middle L:90%
thing we want to do uh basically what we're going

21
00:01:10.260 --> 00:01:11.700 A:middle L:90%
to do is we're going to use the add animation

22
00:01:12.510 --> 00:01:15.379 A:middle L:90%
to animate the list when you remove an item.

23
00:01:16.540 --> 00:01:17.780 A:middle L:90%
So the first thing we need to do for that

24
00:01:18.180 --> 00:01:21.019 A:middle L:90%
is we need to add the delete mood functionality.

25
00:01:23.540 --> 00:01:29.420 A:middle L:90%
So let's open our app provider and let's add another

26
00:01:30.780 --> 00:01:38.680 A:middle L:90%
function here called handle delete mood and this will be

27
00:01:39.040 --> 00:01:46.920 A:middle L:90%
a react use Quebec and this takes in. So

28
00:01:47.480 --> 00:01:50.189 A:middle L:90%
we deleted. We have the mood option with the

29
00:01:51.079 --> 00:02:00.109 A:middle L:90%
timestamp. So mood option is quite mood and this

30
00:02:00.230 --> 00:02:05.480 A:middle L:90%
will be a mood option with timestamp. Mm hmm

31
00:02:13.439 --> 00:02:15.250 A:middle L:90%
. All right. And now we want to set

32
00:02:15.729 --> 00:02:30.110 A:middle L:90%
move list and we take the current. And we

33
00:02:30.229 --> 00:02:36.289 A:middle L:90%
want to do the new mood list which is the

34
00:02:37.030 --> 00:02:46.310 A:middle L:90%
current list. We need to filter. And this

35
00:02:46.550 --> 00:02:51.250 A:middle L:90%
is a mood and we can use the timestamp to

36
00:02:51.379 --> 00:02:53.449 A:middle L:90%
filter it because time stamps will be unique. You

37
00:02:53.539 --> 00:02:57.330 A:middle L:90%
can't ever go um back in time stamps. And

38
00:02:57.509 --> 00:03:02.939 A:middle L:90%
we'll do if mood dot timestamp is not um,

39
00:03:05.439 --> 00:03:06.830 A:middle L:90%
what's this called again? So we need to call

40
00:03:07.000 --> 00:03:11.840 A:middle L:90%
this something else still value. Mm hmm. The

41
00:03:12.020 --> 00:03:16.139 A:middle L:90%
value that time stem is not mood dot timestamp.

42
00:03:17.240 --> 00:03:20.990 A:middle L:90%
So for filter, if this is true, we

43
00:03:21.139 --> 00:03:22.759 A:middle L:90%
keep it. So we want to get rid of

44
00:03:22.840 --> 00:03:28.449 A:middle L:90%
this one. And we also need to update the

45
00:03:28.580 --> 00:03:34.569 A:middle L:90%
app data. So we'll do set data just to

46
00:03:34.639 --> 00:03:37.509 A:middle L:90%
make sure that our persisted state will be updated as

47
00:03:37.629 --> 00:03:41.449 A:middle L:90%
well. So we'll do mood list and new mood

48
00:03:41.729 --> 00:03:53.289 A:middle L:90%
list and turn need new mood list. Oh yeah

49
00:03:53.590 --> 00:03:56.479 A:middle L:90%
, this looks right to me and let's also pass

50
00:03:56.930 --> 00:03:59.110 A:middle L:90%
it down our context. So this will make it

51
00:03:59.219 --> 00:04:03.669 A:middle L:90%
available for other components to use. So if we

52
00:04:03.789 --> 00:04:07.159 A:middle L:90%
go here to up context will add a type for

53
00:04:07.289 --> 00:04:12.340 A:middle L:90%
that. So the default for this will be uh

54
00:04:13.439 --> 00:04:17.939 A:middle L:90%
mood to delete. We shall be a mood option

55
00:04:18.319 --> 00:04:23.480 A:middle L:90%
with timestamp. Oh, actually sorry. This is

56
00:04:23.589 --> 00:04:26.209 A:middle L:90%
not where the type is. Yeah. So we

57
00:04:26.279 --> 00:04:28.050 A:middle L:90%
need to go up here to the context. I

58
00:04:28.110 --> 00:04:31.120 A:middle L:90%
have to actually add the type. So handle delete

59
00:04:31.529 --> 00:04:35.899 A:middle L:90%
mood will take mood which is mood option with timestamp

60
00:04:37.319 --> 00:04:40.639 A:middle L:90%
didn't return anything and he will just add an empty

61
00:04:41.740 --> 00:04:45.439 A:middle L:90%
function. Has to place holder. Cool. Looks

62
00:04:45.699 --> 00:04:49.740 A:middle L:90%
like TypeScript is happy with me. So now let's

63
00:04:50.079 --> 00:04:54.579 A:middle L:90%
go to the mood item row and let's add a

64
00:04:55.079 --> 00:05:00.339 A:middle L:90%
delete button. So we'll add some more text and

65
00:05:00.769 --> 00:05:06.009 A:middle L:90%
we'll do delete. This will have a style styles

66
00:05:07.639 --> 00:05:17.839 A:middle L:90%
dot complete text and this at the bottom. Um

67
00:05:21.240 --> 00:05:29.319 A:middle L:90%
front family theme, french family bold and let's make

68
00:05:29.810 --> 00:05:32.589 A:middle L:90%
this purple corn bread. Didn't have a new color

69
00:05:32.889 --> 00:05:39.269 A:middle L:90%
effort. Oh amazes blue. Okay. Color theme

70
00:05:40.939 --> 00:05:46.040 A:middle L:90%
12 family. Mhm. Color blue. Okay there

71
00:05:46.160 --> 00:05:48.540 A:middle L:90%
we go. So you got a delete button and

72
00:05:48.660 --> 00:05:50.829 A:middle L:90%
now to make this into an actual button because right

73
00:05:51.129 --> 00:05:53.529 A:middle L:90%
now it's text. Let's wrap this in a press

74
00:05:53.850 --> 00:06:06.430 A:middle L:90%
a ble. And so one of the nice things

75
00:06:06.660 --> 00:06:08.860 A:middle L:90%
about context is we don't get access to it just

76
00:06:09.050 --> 00:06:10.750 A:middle L:90%
from screens. We can get access to it from

77
00:06:11.139 --> 00:06:14.620 A:middle L:90%
any component. So we're going to import context here

78
00:06:14.879 --> 00:06:20.329 A:middle L:90%
so we'll do a const context equals use app context

79
00:06:23.329 --> 00:06:25.110 A:middle L:90%
and then here on the principle we can do on

80
00:06:25.269 --> 00:06:35.069 A:middle L:90%
press let's create a handle. Uh huh handled delete

81
00:06:36.439 --> 00:06:43.189 A:middle L:90%
. Yeah direct your school back. Um Press we're

82
00:06:43.290 --> 00:06:45.209 A:middle L:90%
going to court hand of the lead. I don't

83
00:06:45.420 --> 00:06:47.639 A:middle L:90%
handle the lead. We're going to do up context

84
00:06:51.540 --> 00:06:54.629 A:middle L:90%
. Delete mood has led mood and who passed in

85
00:06:54.810 --> 00:07:03.439 A:middle L:90%
the item. This is from props. Okay yeah

86
00:07:04.040 --> 00:07:08.740 A:middle L:90%
so let's just check that this works. Yeah,

87
00:07:09.060 --> 00:07:10.449 A:middle L:90%
so let's get the leashes, but obviously there's no

88
00:07:10.579 --> 00:07:12.949 A:middle L:90%
animation yet. So the way we do animation is

89
00:07:13.350 --> 00:07:18.360 A:middle L:90%
we use layout animation from react native. So we

90
00:07:18.670 --> 00:07:25.139 A:middle L:90%
imported from react native. And here in I use

91
00:07:25.389 --> 00:07:28.879 A:middle L:90%
cold back hook, we do little animation configure next

92
00:07:31.850 --> 00:07:35.800 A:middle L:90%
and we pass in the uh configuration for the actual

93
00:07:36.240 --> 00:07:38.250 A:middle L:90%
their transition. And there's a couple of presets.

94
00:07:38.810 --> 00:07:40.600 A:middle L:90%
So I always use the preset, so the animation

95
00:07:41.660 --> 00:07:48.319 A:middle L:90%
presets and he's in, he's out. So let's

96
00:07:48.490 --> 00:07:51.790 A:middle L:90%
just refresh this just in case. And now when

97
00:07:51.920 --> 00:07:53.910 A:middle L:90%
I delete these moods, you can see that the

98
00:07:54.420 --> 00:07:58.819 A:middle L:90%
rest of the list um kind of slides up just

99
00:07:59.019 --> 00:08:00.779 A:middle L:90%
very nice. Oh, we should make this into

100
00:08:01.009 --> 00:08:04.279 A:middle L:90%
a scroll view. So let's go into the history

101
00:08:04.649 --> 00:08:06.430 A:middle L:90%
screen yet. So this is a view. Um

102
00:08:06.980 --> 00:08:08.790 A:middle L:90%
so if you haven't already, you probably ahead of

103
00:08:08.889 --> 00:08:13.850 A:middle L:90%
me change this into a scroll view so we can

104
00:08:13.970 --> 00:08:16.279 A:middle L:90%
actually scroll on our mood list. All right,

105
00:08:16.470 --> 00:08:19.120 A:middle L:90%
So currently when we add new moods, they get

106
00:08:19.279 --> 00:08:21.810 A:middle L:90%
added to the bottom of the list. But really

107
00:08:22.040 --> 00:08:23.930 A:middle L:90%
we would expect them to show up at the very

108
00:08:24.170 --> 00:08:26.230 A:middle L:90%
top. So to do that, we can reverse

109
00:08:26.949 --> 00:08:32.240 A:middle L:90%
our mood list. So we just call reverse on

110
00:08:32.480 --> 00:08:35.470 A:middle L:90%
this array, it was arrested. But this actually

111
00:08:35.809 --> 00:08:40.399 A:middle L:90%
causes an interesting um ui bug. So if I

112
00:08:40.480 --> 00:08:43.159 A:middle L:90%
delete this mood, we get this kind of transition

113
00:08:43.799 --> 00:08:46.789 A:middle L:90%
where it goes up and down and I think that's

114
00:08:46.990 --> 00:08:51.070 A:middle L:90%
because this reverse is a mutating function. So it

115
00:08:51.169 --> 00:08:55.379 A:middle L:90%
actually mutates this mood list uh and reverses it and

116
00:08:55.490 --> 00:08:57.360 A:middle L:90%
then we map over it. So what we can

117
00:08:57.470 --> 00:08:59.539 A:middle L:90%
actually do is we can create a copy of it

118
00:08:59.679 --> 00:09:02.970 A:middle L:90%
. So if you call dot splice on it first

119
00:09:05.320 --> 00:09:08.429 A:middle L:90%
we'll slice. So if we call moonless dot slice

120
00:09:08.940 --> 00:09:12.169 A:middle L:90%
and then reverse, then you create a copy of

121
00:09:12.289 --> 00:09:14.240 A:middle L:90%
it. And we don't get this weird you're effect

122
00:09:18.200 --> 00:09:19.929 A:middle L:90%
. Now when we add a new mood, it

123
00:09:20.070 --> 00:09:22.340 A:middle L:90%
gets added at the top of our list. So

124
00:09:22.529 --> 00:09:24.210 A:middle L:90%
one thing about the add animations is that they are

125
00:09:24.360 --> 00:09:27.320 A:middle L:90%
still and have forever been for years and years experimental

126
00:09:28.169 --> 00:09:30.090 A:middle L:90%
on android. So if you want to enable these

127
00:09:30.299 --> 00:09:34.120 A:middle L:90%
on android, you need to explicitly sets the animation

128
00:09:34.590 --> 00:09:37.399 A:middle L:90%
enabled flag to true. So if you copy this

129
00:09:38.639 --> 00:09:41.820 A:middle L:90%
a piece of code and open app dot tsx,

130
00:09:44.539 --> 00:09:46.840 A:middle L:90%
I didn't have to kill six. Yeah. Um

131
00:09:47.220 --> 00:09:49.529 A:middle L:90%
and then just paste it in. So basically what

132
00:09:49.700 --> 00:09:53.169 A:middle L:90%
this does, it goes it imports platform from cognitive

133
00:09:53.779 --> 00:09:57.799 A:middle L:90%
and it goes if you're on android and this option

134
00:09:58.419 --> 00:10:06.639 A:middle L:90%
exists. Said it's true. Now since I have

135
00:10:06.820 --> 00:10:08.549 A:middle L:90%
an android phone here, let's see if this works

136
00:10:18.539 --> 00:10:21.440 A:middle L:90%
. We'll go here and hit delete there we go

137
00:10:22.009 --> 00:10:26.950 A:middle L:90%
. It's lights closed. Beautiful. So one thing

138
00:10:27.139 --> 00:10:29.710 A:middle L:90%
that I have found on android is that layer.

139
00:10:29.990 --> 00:10:35.500 A:middle L:90%
Animation sometimes is some sometimes doesn't work when you have

140
00:10:35.899 --> 00:10:39.090 A:middle L:90%
a scroll view and the contents of the scroll wheel

141
00:10:39.279 --> 00:10:43.179 A:middle L:90%
changes uh there's there's something about keys within scroll view

142
00:10:43.559 --> 00:10:45.590 A:middle L:90%
that can error. Um, so that's why you

143
00:10:45.690 --> 00:10:47.350 A:middle L:90%
need to kind of watch out for it on android

144
00:10:47.730 --> 00:10:48.129 A:middle L:90%
to make sure it works.

