WEBVTT

1
00:00:00.540 --> 00:00:02.600 A:middle L:90%
as we want to make network images. So network

2
00:00:03.009 --> 00:00:05.990 A:middle L:90%
images are images that are loaded while you are all

3
00:00:06.299 --> 00:00:08.550 A:middle L:90%
Usually I think in my experience, most of the

4
00:00:08.619 --> 00:00:10.750 A:middle L:90%
images you'll be using in your app are loaded this

5
00:00:10.929 --> 00:00:14.140 A:middle L:90%
way because you'll have an api request that has an

6
00:00:14.210 --> 00:00:16.739 A:middle L:90%
immature else and then you lose the image. So

7
00:00:17.010 --> 00:00:20.100 A:middle L:90%
in order to render images from Ural just this year

8
00:00:20.239 --> 00:00:22.559 A:middle L:90%
as an example. Um so I've got this image

9
00:00:22.899 --> 00:00:25.160 A:middle L:90%
from on splash, just a nice smoky background.

10
00:00:26.140 --> 00:00:28.710 A:middle L:90%
So let's add this as a background to our home

11
00:00:28.890 --> 00:00:33.649 A:middle L:90%
screen. So I got the home screen open.

12
00:00:35.049 --> 00:00:44.429 A:middle L:90%
I'm going to copy this Euro. All right.

13
00:00:44.630 --> 00:00:48.950 A:middle L:90%
So let's import image from react native. And I'm

14
00:00:49.020 --> 00:00:51.869 A:middle L:90%
going to start by just rendering it inside the container

15
00:00:52.700 --> 00:00:57.649 A:middle L:90%
as to image and source. Now, one thing

16
00:00:58.020 --> 00:01:00.679 A:middle L:90%
to note is that if you have in network images

17
00:01:01.149 --> 00:01:03.689 A:middle L:90%
, images where you are, you can't just do

18
00:01:04.040 --> 00:01:06.799 A:middle L:90%
this. This won't work. Source will have to

19
00:01:06.909 --> 00:01:09.859 A:middle L:90%
be an object and you pass in the U.

20
00:01:10.090 --> 00:01:12.040 A:middle L:90%
R. I. Which will be the image URL

21
00:01:12.540 --> 00:01:15.290 A:middle L:90%
from the web. Now, when I say this

22
00:01:15.719 --> 00:01:18.540 A:middle L:90%
, nothing actually renders. And that's because this image

23
00:01:18.859 --> 00:01:22.560 A:middle L:90%
isn't local. So IOS doesn't know how much space

24
00:01:23.329 --> 00:01:25.840 A:middle L:90%
to give it to render. So for images that

25
00:01:25.989 --> 00:01:27.780 A:middle L:90%
you render bar Euro, you always have to give

26
00:01:28.280 --> 00:01:32.030 A:middle L:90%
a with and or height. So if I do

27
00:01:32.230 --> 00:01:44.280 A:middle L:90%
style and just do with 100% and height 100.

28
00:01:46.540 --> 00:01:51.939 A:middle L:90%
Yeah. Actually let's just do height 100. Mhm

29
00:01:53.640 --> 00:01:57.739 A:middle L:90%
. Thank you. We got our image. Now

30
00:01:57.959 --> 00:01:59.629 A:middle L:90%
, what I would like to do is actually have

31
00:01:59.939 --> 00:02:03.280 A:middle L:90%
this image in the background so that our content is

32
00:02:03.420 --> 00:02:06.650 A:middle L:90%
over laid on the image. So what I would

33
00:02:06.810 --> 00:02:09.610 A:middle L:90%
like to do as a react development is basically just

34
00:02:10.740 --> 00:02:13.840 A:middle L:90%
do this and then move the mood picker inside it

35
00:02:14.349 --> 00:02:16.539 A:middle L:90%
. Now this won't work because the react native image

36
00:02:16.810 --> 00:02:19.580 A:middle L:90%
component doesn't allow you to put Children inside it.

37
00:02:19.919 --> 00:02:22.879 A:middle L:90%
So one way around it is to use an absolute

38
00:02:24.009 --> 00:02:30.460 A:middle L:90%
layout. So let's put the image first and then

39
00:02:30.629 --> 00:02:38.710 A:middle L:90%
move picker underneath it and that's yeah and they are

40
00:02:38.810 --> 00:02:45.400 A:middle L:90%
both wrapped inside a container and then let's wrap the

41
00:02:45.830 --> 00:02:51.050 A:middle L:90%
mood picker in a view and let's give this view

42
00:02:52.629 --> 00:02:55.240 A:middle L:90%
an absolute fill. So we want this view to

43
00:02:55.520 --> 00:02:59.000 A:middle L:90%
absolutely fill its content. So we'll do a style

44
00:02:59.819 --> 00:03:03.810 A:middle L:90%
and there is a convenience um style in style sheet

45
00:03:04.370 --> 00:03:06.520 A:middle L:90%
. So style sheet don't absolute film. So if

46
00:03:06.639 --> 00:03:09.069 A:middle L:90%
we look over this like look into it, it

47
00:03:09.270 --> 00:03:12.259 A:middle L:90%
actually just position absolute top zero, bottom zero left

48
00:03:12.469 --> 00:03:13.969 A:middle L:90%
, zero, right, zero. You don't have

49
00:03:14.060 --> 00:03:18.120 A:middle L:90%
to type it out. Cool. So let me

50
00:03:18.210 --> 00:03:25.069 A:middle L:90%
just remove this height And give this image a flex

51
00:03:25.580 --> 00:03:30.099 A:middle L:90%
one. Okay so interview that's around the mood picker

52
00:03:31.240 --> 00:03:35.139 A:middle L:90%
, we'll turn this into an array and we'll do

53
00:03:35.719 --> 00:03:41.330 A:middle L:90%
justify content santa. Cool. So now we have

54
00:03:41.620 --> 00:03:43.770 A:middle L:90%
a container and this is basically if you need to

55
00:03:43.870 --> 00:03:49.740 A:middle L:90%
display content over your image but you can't um like

56
00:03:50.150 --> 00:03:52.000 A:middle L:90%
give the image Children, this is the way you

57
00:03:52.080 --> 00:03:55.030 A:middle L:90%
do it. So you basically um wrap a container

58
00:03:55.849 --> 00:03:59.060 A:middle L:90%
around the image and then the content you want to

59
00:03:59.169 --> 00:04:04.039 A:middle L:90%
overlay then you give the image like render it the

60
00:04:04.129 --> 00:04:06.379 A:middle L:90%
site or whatever size you need which means that this

61
00:04:06.569 --> 00:04:10.000 A:middle L:90%
container will automatically be of that size and then,

62
00:04:10.330 --> 00:04:12.620 A:middle L:90%
so this is basically for the content we overlay.

63
00:04:13.539 --> 00:04:17.470 A:middle L:90%
Now if you add absolute feel here um which is

64
00:04:17.620 --> 00:04:21.399 A:middle L:90%
position absolute and then uh filling the whole container so

65
00:04:21.740 --> 00:04:25.529 A:middle L:90%
this will fill all of this container and then you

66
00:04:25.620 --> 00:04:28.389 A:middle L:90%
can add anything in here which will then be over

67
00:04:28.670 --> 00:04:34.319 A:middle L:90%
late on top of the image. So in react

68
00:04:34.589 --> 00:04:36.389 A:middle L:90%
native, if you don't want to do this there

69
00:04:36.610 --> 00:04:40.889 A:middle L:90%
is actually a component called background image, Our image

70
00:04:41.120 --> 00:04:44.319 A:middle L:90%
background, yes, call an image background which you

71
00:04:44.410 --> 00:04:48.709 A:middle L:90%
can use instead. So if instead of doing all

72
00:04:48.920 --> 00:04:54.589 A:middle L:90%
of this, can't you remove this and wrap this

73
00:04:58.740 --> 00:05:04.490 A:middle L:90%
whole thing into an image background to sauce it has

74
00:05:04.649 --> 00:05:07.639 A:middle L:90%
the same Api is the image of the source um

75
00:05:10.240 --> 00:05:18.240 A:middle L:90%
you're I in Majuro no this works as well but

76
00:05:18.750 --> 00:05:21.399 A:middle L:90%
if you actually look into the react native repository into

77
00:05:22.009 --> 00:05:25.579 A:middle L:90%
how image background is implemented is actually implemented exactly how

78
00:05:25.930 --> 00:05:27.279 A:middle L:90%
I just showed you. It just renders the image

79
00:05:27.589 --> 00:05:32.180 A:middle L:90%
component underneath and absolutely overlays the content. So why

80
00:05:32.420 --> 00:05:34.860 A:middle L:90%
did I even go through like showing you how to

81
00:05:35.000 --> 00:05:38.180 A:middle L:90%
do this well for production use, I don't personally

82
00:05:38.740 --> 00:05:41.040 A:middle L:90%
use the image component from react native, I think

83
00:05:41.240 --> 00:05:43.439 A:middle L:90%
a lot of people don't because it doesn't have,

84
00:05:43.720 --> 00:05:45.720 A:middle L:90%
it doesn't have a lot of capabilities in terms of

85
00:05:46.199 --> 00:05:49.810 A:middle L:90%
catching and performance. So usually there is a component

86
00:05:50.639 --> 00:05:54.040 A:middle L:90%
, there's a library called react native fast image which

87
00:05:54.839 --> 00:05:57.279 A:middle L:90%
is here and I think this is what most people

88
00:05:57.480 --> 00:05:59.889 A:middle L:90%
end up using in production. It's it's a little

89
00:06:00.100 --> 00:06:04.170 A:middle L:90%
bit, it has like, well it's very good

90
00:06:04.449 --> 00:06:06.579 A:middle L:90%
for lots of images. So if you have a

91
00:06:06.629 --> 00:06:09.660 A:middle L:90%
list with lots of images react directly damage component wouldn't

92
00:06:09.850 --> 00:06:11.279 A:middle L:90%
be able to handle this, especially on android.

93
00:06:13.139 --> 00:06:16.720 A:middle L:90%
And also it has some extra properties for cashing and

94
00:06:16.959 --> 00:06:19.110 A:middle L:90%
prioritization, which we want to priority. We have

95
00:06:19.300 --> 00:06:21.230 A:middle L:90%
lots of images to load and you want to prioritize

96
00:06:22.180 --> 00:06:24.600 A:middle L:90%
some images and not others, then you can use

97
00:06:24.980 --> 00:06:27.000 A:middle L:90%
that. And one of the reasons I wanted to

98
00:06:27.089 --> 00:06:30.290 A:middle L:90%
go through how to overlay content is because this fast

99
00:06:30.649 --> 00:06:33.029 A:middle L:90%
image, it doesn't allow you to have Children inside

100
00:06:33.430 --> 00:06:35.100 A:middle L:90%
either. So you would have to do the method

101
00:06:35.449 --> 00:06:38.910 A:middle L:90%
I showed you earlier. Alright. So lastly I

102
00:06:39.430 --> 00:06:43.459 A:middle L:90%
now feel like this little layout um it doesn't really

103
00:06:43.680 --> 00:06:46.259 A:middle L:90%
show the content very much. So I want to

104
00:06:46.319 --> 00:06:49.009 A:middle L:90%
add some capacity behind there just to make it popular

105
00:06:49.480 --> 00:06:52.189 A:middle L:90%
a bit more. So if we open our mood

106
00:06:52.540 --> 00:06:55.420 A:middle L:90%
picker and then go to where the container lives.

107
00:06:57.040 --> 00:06:59.750 A:middle L:90%
So here it is, let's give it a background

108
00:07:00.389 --> 00:07:07.660 A:middle L:90%
color of our db a 000. It's black and

109
00:07:08.279 --> 00:07:12.449 A:middle L:90%
no point to Okay, I think this looks a

110
00:07:12.480 --> 00:07:13.990 A:middle L:90%
little bit nicer. So you can definitely see where

111
00:07:14.129 --> 00:07:17.370 A:middle L:90%
the area for the content lives. And just a

112
00:07:17.420 --> 00:07:20.350 A:middle L:90%
quick note um so you can add R G B

113
00:07:20.699 --> 00:07:23.430 A:middle L:90%
A values for colors. So this is basically the

114
00:07:24.220 --> 00:07:27.209 A:middle L:90%
bread green and blue values and the north point to

115
00:07:27.610 --> 00:07:30.829 A:middle L:90%
is the A value or the opacity of the value

116
00:07:31.050 --> 00:07:33.259 A:middle L:90%
of the or the opacity. And the reason that

117
00:07:33.389 --> 00:07:36.839 A:middle L:90%
I'm doing this instead of using normal capacity. Yes

118
00:07:37.269 --> 00:07:45.379 A:middle L:90%
, if I did background color um 000 and then

119
00:07:45.730 --> 00:07:51.639 A:middle L:90%
capacity. No point to. Mhm. Then you

120
00:07:51.850 --> 00:07:54.870 A:middle L:90%
see the whole content will have this capacity and obviously

121
00:07:55.120 --> 00:07:56.430 A:middle L:90%
this is not what I want. I want just

122
00:07:56.709 --> 00:07:59.579 A:middle L:90%
the background to have this capacity and that's why in

123
00:07:59.920 --> 00:08:02.610 A:middle L:90%
this case I needed to use an RGB A value

124
00:08:03.180 --> 00:08:08.680 A:middle L:90%
instead. And lastly, if we find where the

125
00:08:08.790 --> 00:08:12.180 A:middle L:90%
heading text is. Um let's look at what the

126
00:08:12.290 --> 00:08:15.660 A:middle L:90%
type is, it's called, heading. Let's just

127
00:08:15.920 --> 00:08:25.439 A:middle L:90%
make this white. So color and theme color white

128
00:08:27.040 --> 00:08:29.649 A:middle L:90%
. Okay. I think now this matches our little

129
00:08:29.860 --> %!s(<nil>) A:middle L:90%
design.

