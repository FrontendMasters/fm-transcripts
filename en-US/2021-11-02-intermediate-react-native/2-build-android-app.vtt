WEBVTT

1
00:00:00.340 --> 00:00:02.009 A:middle L:90%
All right, let's build the android app. So

2
00:00:02.399 --> 00:00:05.290 A:middle L:90%
for android development we will use android studio. So

3
00:00:08.240 --> 00:00:11.109 A:middle L:90%
and Andrew studios to go to integrated development environment for

4
00:00:11.199 --> 00:00:14.169 A:middle L:90%
android. Uh They actually also recently had a huge

5
00:00:14.660 --> 00:00:17.239 A:middle L:90%
upgrade to arctic Fox, uh which is this?

6
00:00:17.440 --> 00:00:19.039 A:middle L:90%
So they've changed the UI so the UI now,

7
00:00:19.379 --> 00:00:22.300 A:middle L:90%
like when you launch it looks different, but all

8
00:00:22.410 --> 00:00:29.839 A:middle L:90%
you do is we go open and we do find

9
00:00:30.359 --> 00:00:32.429 A:middle L:90%
we find where our project is. Some line is

10
00:00:32.600 --> 00:00:37.079 A:middle L:90%
projects, Node tracker. And then similarly to what

11
00:00:37.259 --> 00:00:40.539 A:middle L:90%
we did in IOS, just select the folder um

12
00:00:40.850 --> 00:00:44.409 A:middle L:90%
for android and open it. So then you don't

13
00:00:44.530 --> 00:00:46.170 A:middle L:90%
need to worry about which file exactly to open.

14
00:00:48.140 --> 00:00:49.439 A:middle L:90%
All right. So that's going to load your workspace

15
00:00:50.210 --> 00:00:52.740 A:middle L:90%
and notice that I spent quite a lot of time

16
00:00:52.979 --> 00:00:55.600 A:middle L:90%
talking about pots for IOS, but I didn't talk

17
00:00:55.780 --> 00:00:59.640 A:middle L:90%
about anything related to that for android. Well it's

18
00:00:59.810 --> 00:01:02.520 A:middle L:90%
because android dependency management is done differently. It's kind

19
00:01:02.719 --> 00:01:04.349 A:middle L:90%
of done behind the scenes by the bill tool.

20
00:01:04.829 --> 00:01:08.510 A:middle L:90%
So android users cradle for dependency management and if you

21
00:01:08.590 --> 00:01:12.480 A:middle L:90%
look at the bottom right corner here, um you

22
00:01:12.629 --> 00:01:14.939 A:middle L:90%
can see what the editors doing. So when you

23
00:01:15.060 --> 00:01:17.950 A:middle L:90%
load the editor, um it's like comparing plug ins

24
00:01:18.319 --> 00:01:19.370 A:middle L:90%
, making sure your project is up to date.

25
00:01:19.810 --> 00:01:22.069 A:middle L:90%
And then when I build it, it actually downloads

26
00:01:22.500 --> 00:01:28.540 A:middle L:90%
any missing plug ins and build the app. So

27
00:01:29.260 --> 00:01:31.739 A:middle L:90%
for android we're going to use an emulator. So

28
00:01:32.159 --> 00:01:34.930 A:middle L:90%
emulators, you can configure within android studio. So

29
00:01:35.430 --> 00:01:37.170 A:middle L:90%
if you click on a B. D Manager which

30
00:01:37.370 --> 00:01:40.859 A:middle L:90%
is this a little phone with the android face on

31
00:01:40.959 --> 00:01:43.680 A:middle L:90%
it. And you can choose, you haven't got

32
00:01:43.810 --> 00:01:45.980 A:middle L:90%
a virtual device already. You can choose create virtual

33
00:01:46.280 --> 00:01:50.040 A:middle L:90%
device and you can choose the device. Usually I

34
00:01:50.120 --> 00:01:52.239 A:middle L:90%
would choose like the latest or braking system. But

35
00:01:52.359 --> 00:01:54.659 A:middle L:90%
obviously if you could test other operating systems, like

36
00:01:54.819 --> 00:01:57.290 A:middle L:90%
older versions you can create a device specific for that

37
00:01:58.340 --> 00:02:01.870 A:middle L:90%
personally. I actually mostly do my android development on

38
00:02:02.010 --> 00:02:04.659 A:middle L:90%
a physical device. So I I plug I have

39
00:02:04.980 --> 00:02:07.489 A:middle L:90%
an android phone that I use for testing and I

40
00:02:07.519 --> 00:02:09.259 A:middle L:90%
plug it in and I find out more convenient than

41
00:02:09.430 --> 00:02:12.680 A:middle L:90%
using the emulators on a map. Um but in

42
00:02:12.770 --> 00:02:14.229 A:middle L:90%
this case just because I want a screen share,

43
00:02:14.620 --> 00:02:18.189 A:middle L:90%
I'm going to use about your device. So I'm

44
00:02:18.330 --> 00:02:20.430 A:middle L:90%
going to use the pixel five. So I'm going

45
00:02:20.569 --> 00:02:31.990 A:middle L:90%
to launch it. Okay, it looks like greater

46
00:02:32.280 --> 00:02:33.900 A:middle L:90%
list and all these things. So I'm going to

47
00:02:34.020 --> 00:02:37.379 A:middle L:90%
choose pixel five from this list of devices. If

48
00:02:37.639 --> 00:02:40.719 A:middle L:90%
you had your own android device plugged in it should

49
00:02:40.960 --> 00:02:42.550 A:middle L:90%
appear here on the list and you can choose that

50
00:02:42.699 --> 00:02:45.490 A:middle L:90%
instead now. And I'm gonna run the up.

51
00:02:49.139 --> 00:02:50.639 A:middle L:90%
So this will take a little while to build as

52
00:02:50.729 --> 00:02:54.090 A:middle L:90%
well. So now we have both our IOS app

53
00:02:54.590 --> 00:02:57.840 A:middle L:90%
and our android app. I will be looking more

54
00:02:58.199 --> 00:03:00.990 A:middle L:90%
into X code and android studio later on when we

55
00:03:01.090 --> 00:03:03.639 A:middle L:90%
install native dependencies for now, let's move on to

56
00:03:03.750 --> 00:03:04.030 A:middle L:90%
the next section

