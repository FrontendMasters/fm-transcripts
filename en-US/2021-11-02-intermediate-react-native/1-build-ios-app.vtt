WEBVTT

1
00:00:00.440 --> 00:00:02.899 A:middle L:90%
all right now that our app has loaded into X

2
00:00:03.100 --> 00:00:06.679 A:middle L:90%
code. So this is the native IOS development environment

3
00:00:07.320 --> 00:00:09.289 A:middle L:90%
, it does a huge amount of things. There's

4
00:00:09.750 --> 00:00:14.669 A:middle L:90%
there's various stimulators and there's profiling and performance tracking and

5
00:00:15.369 --> 00:00:18.899 A:middle L:90%
the amount of features expert has is kind of ridiculous

6
00:00:20.239 --> 00:00:21.579 A:middle L:90%
. But we're just going to use it to run

7
00:00:21.809 --> 00:00:24.670 A:middle L:90%
our project. So here on the devices you can

8
00:00:24.809 --> 00:00:26.170 A:middle L:90%
choose where you want to run it on. If

9
00:00:26.339 --> 00:00:28.489 A:middle L:90%
you have your own device connected, you would you

10
00:00:28.859 --> 00:00:31.660 A:middle L:90%
would see it here. I'm going to choose iPhone

11
00:00:31.989 --> 00:00:37.100 A:middle L:90%
12 and actually first on a terminal, I'm going

12
00:00:37.270 --> 00:00:40.320 A:middle L:90%
to start the packager. So there's 22 parts of

13
00:00:40.630 --> 00:00:42.340 A:middle L:90%
a Native IOS app, you have the JavaScript bundle

14
00:00:42.840 --> 00:00:44.929 A:middle L:90%
and the native app. So I'm going to start

15
00:00:45.659 --> 00:00:48.530 A:middle L:90%
around the yard start. Mhm. To start the

16
00:00:48.609 --> 00:00:53.750 A:middle L:90%
Javascript de Metro Bundler 1st and then I get to

17
00:00:53.850 --> 00:00:56.399 A:middle L:90%
explode X code and hit play. So this is

18
00:00:56.490 --> 00:00:58.810 A:middle L:90%
going to build the native app the first time,

19
00:00:59.020 --> 00:01:02.039 A:middle L:90%
this will take a little bit longer. Um But

20
00:01:02.289 --> 00:01:04.340 A:middle L:90%
after you've had a couple of times about the second

21
00:01:04.640 --> 00:01:08.109 A:middle L:90%
time it's going to go much quicker. Why did

22
00:01:08.319 --> 00:01:11.870 A:middle L:90%
you choose cocoa pods instead of another pods dependency manager

23
00:01:13.040 --> 00:01:16.810 A:middle L:90%
? Ah So this this kind of two main ones

24
00:01:17.180 --> 00:01:19.609 A:middle L:90%
, there's coco ports and cartridge. And actually the

25
00:01:19.790 --> 00:01:21.920 A:middle L:90%
choice is very easy for react native because react Native

26
00:01:22.420 --> 00:01:25.420 A:middle L:90%
officially switched to using pods for dependency management. Um

27
00:01:25.959 --> 00:01:28.069 A:middle L:90%
So she do react native in it like as we

28
00:01:28.189 --> 00:01:30.450 A:middle L:90%
did and they already have pods set up so they

29
00:01:30.780 --> 00:01:33.480 A:middle L:90%
load the react native native dependencies by our pots as

30
00:01:33.590 --> 00:01:35.090 A:middle L:90%
well. So it's kind of a no brainer because

31
00:01:35.260 --> 00:01:36.989 A:middle L:90%
if you wanted to use for example cartridge instead,

32
00:01:37.540 --> 00:01:40.040 A:middle L:90%
you would then manually have to set it up while

33
00:01:40.230 --> 00:01:41.909 A:middle L:90%
we're waiting for this. I can tell you a

34
00:01:41.989 --> 00:01:44.650 A:middle L:90%
little bit about the project structure. So if you

35
00:01:44.730 --> 00:01:47.000 A:middle L:90%
go to the very first tab here that has the

36
00:01:47.099 --> 00:01:50.049 A:middle L:90%
folder uh this is kind of a folder layout.

37
00:01:50.560 --> 00:01:52.140 A:middle L:90%
Now, one thing to know about X code is

38
00:01:52.290 --> 00:01:54.760 A:middle L:90%
like because it's an integrated I. D. This

39
00:01:55.180 --> 00:01:59.640 A:middle L:90%
folder layout doesn't necessarily necessarily reflect your fold, actual

40
00:02:00.120 --> 00:02:02.760 A:middle L:90%
directory layout on your device, on your on your

41
00:02:02.879 --> 00:02:05.709 A:middle L:90%
Mac which is kind of frustrating but it's something to

42
00:02:05.849 --> 00:02:08.240 A:middle L:90%
be aware of. Also when adding files, you

43
00:02:08.439 --> 00:02:11.889 A:middle L:90%
should always like do new file or add files because

44
00:02:12.229 --> 00:02:14.219 A:middle L:90%
if you were to for example drag and drop a

45
00:02:14.310 --> 00:02:17.669 A:middle L:90%
file into this directory, it would just link the

46
00:02:17.810 --> 00:02:19.939 A:middle L:90%
file but not actually move it into a Git repository

47
00:02:20.580 --> 00:02:22.599 A:middle L:90%
. So that's kind of a gotcha, that's we

48
00:02:22.870 --> 00:02:26.889 A:middle L:90%
asked JavaScript developers kind of fall into quite a bit

49
00:02:27.139 --> 00:02:29.879 A:middle L:90%
because in our editors are editor for all the layout

50
00:02:30.449 --> 00:02:33.560 A:middle L:90%
reflect what's actually on a device. Where is the

51
00:02:33.639 --> 00:02:37.389 A:middle L:90%
next step? That's not the case. And here

52
00:02:37.620 --> 00:02:41.199 A:middle L:90%
so these these two are objective C files. So

53
00:02:41.469 --> 00:02:43.930 A:middle L:90%
we have the head of file and the implementation file

54
00:02:44.639 --> 00:02:48.860 A:middle L:90%
and essentially what's a react native app when you use

55
00:02:49.060 --> 00:02:52.020 A:middle L:90%
it from template. All it's doing is it's creating

56
00:02:53.439 --> 00:02:57.580 A:middle L:90%
um it's just initializing the react native and the JavaScript

57
00:02:57.919 --> 00:02:59.759 A:middle L:90%
bundle that's pretty much what it's doing. So here

58
00:02:59.939 --> 00:03:01.509 A:middle L:90%
it is, you got a bridge, we gotta

59
00:03:01.689 --> 00:03:03.419 A:middle L:90%
root view and then we launch it. So throughout

60
00:03:03.740 --> 00:03:06.610 A:middle L:90%
this course we're going to be adding like little bits

61
00:03:06.860 --> 00:03:10.500 A:middle L:90%
of code uh into the IOS and the android apps

62
00:03:12.139 --> 00:03:14.889 A:middle L:90%
, do we need to configure native modules separately in

63
00:03:15.280 --> 00:03:19.490 A:middle L:90%
this course we will do you so we're installing several

64
00:03:19.909 --> 00:03:23.849 A:middle L:90%
libraries um that have native dependencies and some of them

65
00:03:25.039 --> 00:03:29.879 A:middle L:90%
like requires to add bits of code into the native

66
00:03:30.840 --> 00:03:32.620 A:middle L:90%
native files. So for example, for a splash

67
00:03:32.949 --> 00:03:35.439 A:middle L:90%
screen, basically anything that you can't launch from JavaScript

68
00:03:36.199 --> 00:03:37.879 A:middle L:90%
So for example, for the splash screen, you

69
00:03:38.330 --> 00:03:41.479 A:middle L:90%
need to show the splash splash screen in native code

70
00:03:42.340 --> 00:03:44.650 A:middle L:90%
and then hide it in javascript code. So it's

71
00:03:44.740 --> 00:03:46.729 A:middle L:90%
just a one line thing, but I've added them

72
00:03:47.090 --> 00:03:48.960 A:middle L:90%
here on purpose just to get more comfortable cause if

73
00:03:49.039 --> 00:03:52.689 A:middle L:90%
you're doing, basically, if you're doing reactive development

74
00:03:53.150 --> 00:03:56.240 A:middle L:90%
without expo you will occasionally have to touch these native

75
00:03:56.539 --> 00:03:58.870 A:middle L:90%
codes and the more comfortable you become with it um

76
00:03:59.360 --> 00:04:01.400 A:middle L:90%
Just easier easier will be in the long run.

77
00:04:02.930 --> 00:04:05.939 A:middle L:90%
Cool, okay, so our build failed and this

78
00:04:06.069 --> 00:04:10.199 A:middle L:90%
is actually expected um and this is another thing that's

79
00:04:10.629 --> 00:04:14.860 A:middle L:90%
pretty frequent when you're doing native development because your environment

80
00:04:15.400 --> 00:04:17.209 A:middle L:90%
keeps changing. Okay, so now we have a

81
00:04:17.300 --> 00:04:19.189 A:middle L:90%
build error and this is actually something that I was

82
00:04:19.329 --> 00:04:21.860 A:middle L:90%
expecting to happen and I just wanted to illustrate that

83
00:04:22.290 --> 00:04:24.470 A:middle L:90%
these things happen, don't worry, google the error

84
00:04:25.029 --> 00:04:29.000 A:middle L:90%
, things happen and the reason this is happening is

85
00:04:29.170 --> 00:04:33.920 A:middle L:90%
because our development environment changed. So last week I

86
00:04:34.019 --> 00:04:37.800 A:middle L:90%
think exco 13 came out and his ex CO 13

87
00:04:38.389 --> 00:04:41.410 A:middle L:90%
and I think my Mac at least automatically upgrades to

88
00:04:41.620 --> 00:04:47.660 A:middle L:90%
it and Exco 13 supports swift by default and our

89
00:04:48.389 --> 00:04:51.339 A:middle L:90%
template app doesn't have any swift files. So what

90
00:04:51.509 --> 00:04:53.100 A:middle L:90%
this is actually trying to do is is trying to

91
00:04:53.240 --> 00:04:54.949 A:middle L:90%
load a swift file is going, there's no swift

92
00:04:55.209 --> 00:04:57.720 A:middle L:90%
in your project, everything is terrible. So there's

93
00:04:57.860 --> 00:04:59.310 A:middle L:90%
a quick fix for it. And basically what we're

94
00:04:59.399 --> 00:05:01.790 A:middle L:90%
going to do is we're going to add a empty

95
00:05:02.189 --> 00:05:04.600 A:middle L:90%
swift file into our project. So I was going

96
00:05:04.810 --> 00:05:10.519 A:middle L:90%
to right click on mood tracker, you file swift

97
00:05:10.850 --> 00:05:15.339 A:middle L:90%
file next and I'm just gonna call it dummy for

98
00:05:15.519 --> 00:05:18.579 A:middle L:90%
a dummy file. Great. And now this is

99
00:05:18.689 --> 00:05:21.699 A:middle L:90%
a bit less important. It's asking me if I

100
00:05:21.759 --> 00:05:24.279 A:middle L:90%
want to create an objective c bridging header and bridging

101
00:05:24.550 --> 00:05:28.220 A:middle L:90%
header is basically um the way that you can interact

102
00:05:28.740 --> 00:05:31.040 A:middle L:90%
between swift code and objective C code. So if

103
00:05:31.120 --> 00:05:33.240 A:middle L:90%
you wanted to write native modules for example, for

104
00:05:33.600 --> 00:05:34.930 A:middle L:90%
react native and you wanted to do it in swift

105
00:05:35.480 --> 00:05:38.069 A:middle L:90%
we actually have to do is you write your react

106
00:05:38.449 --> 00:05:41.670 A:middle L:90%
native security, JavaScript code and then you bind it

107
00:05:41.790 --> 00:05:44.069 A:middle L:90%
to your objective C code and then use a bridging

108
00:05:44.420 --> 00:05:50.000 A:middle L:90%
header to like Bridget to your swift code and we

109
00:05:50.089 --> 00:05:52.379 A:middle L:90%
create a bridging header. This has created the stomach

110
00:05:52.689 --> 00:05:55.779 A:middle L:90%
file and the bridging header, you mentioned that in

111
00:05:55.939 --> 00:06:00.019 A:middle L:90%
the future the react native template will probably resolve this

112
00:06:00.519 --> 00:06:02.699 A:middle L:90%
, correct Yes, yes, it definitely will.

113
00:06:03.540 --> 00:06:06.480 A:middle L:90%
Um I was thinking of doing a pr for it

114
00:06:06.600 --> 00:06:08.490 A:middle L:90%
but I didn't want to like do a last minute

115
00:06:08.670 --> 00:06:10.189 A:middle L:90%
fix. Actually thought it would be nice to show

116
00:06:10.509 --> 00:06:13.860 A:middle L:90%
this on the workshop as well because if you're doing

117
00:06:14.110 --> 00:06:16.910 A:middle L:90%
this in real life, like for clients like these

118
00:06:17.100 --> 00:06:19.550 A:middle L:90%
things will happen and you just you just become more

119
00:06:19.709 --> 00:06:21.579 A:middle L:90%
comfortable, like you're like, okay, something's changed

120
00:06:21.949 --> 00:06:23.420 A:middle L:90%
. Is there a new version of one of the

121
00:06:23.490 --> 00:06:25.519 A:middle L:90%
major tools that I use? Okay, yes there

122
00:06:25.689 --> 00:06:27.459 A:middle L:90%
is, I can see what's going on. So

123
00:06:27.920 --> 00:06:29.519 A:middle L:90%
it's kind of just part of it's part of being

124
00:06:29.720 --> 00:06:35.339 A:middle L:90%
a developer and it's not at all scary. Right

125
00:06:36.220 --> 00:06:37.560 A:middle L:90%
, it looks like this has worked, which is

126
00:06:37.699 --> 00:06:44.300 A:middle L:90%
excellent. So this is now bundling the JavaScript bundle

127
00:06:44.560 --> 00:06:51.089 A:middle L:90%
here. Excellent. So one thing to note and

128
00:06:51.500 --> 00:06:54.470 A:middle L:90%
I've been doing reaction development for years and I never

129
00:06:54.759 --> 00:06:57.860 A:middle L:90%
read these um I never I never read these instructions

130
00:06:58.540 --> 00:07:01.360 A:middle L:90%
but if you're for example pressed are in the tab

131
00:07:01.980 --> 00:07:04.470 A:middle L:90%
where your metro boundaries, it refreshes the up and

132
00:07:04.629 --> 00:07:06.509 A:middle L:90%
use that and saying for d you can open the

133
00:07:06.600 --> 00:07:10.160 A:middle L:90%
developer tools uh that only works in the world device

134
00:07:11.540 --> 00:07:14.740 A:middle L:90%
well let's now swap and do android

