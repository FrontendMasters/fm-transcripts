WEBVTT

1
00:00:00.170 --> 00:00:03.940
So React Native actually comes
with its own animated API.

2
00:00:03.940 --> 00:00:05.961
So you can import this from React Native,

3
00:00:05.961 --> 00:00:09.790
and there are loads of examples on the
React Native Doc's on how you can use it.

4
00:00:09.790 --> 00:00:14.322
For this course, we're actually going
to use reanimated and in particular,

5
00:00:14.322 --> 00:00:17.130
we're going to use reanimated 2.

6
00:00:17.130 --> 00:00:20.760
So just to give you a little bit
of history on reanimated, so

7
00:00:20.760 --> 00:00:24.685
originally reanimated was created
to address some performance

8
00:00:24.685 --> 00:00:28.260
deficiencies on React Native
built in animated library.

9
00:00:28.260 --> 00:00:33.860
In particular was around operating on the
UI thread, versus the main thread, etc.

10
00:00:35.450 --> 00:00:40.371
And the reanimated one basically
copied exactly the API that

11
00:00:40.371 --> 00:00:43.758
React Native's animated API was using.

12
00:00:43.758 --> 00:00:47.347
Higher Reanimated 2,
even though it's still in beta,

13
00:00:47.347 --> 00:00:50.290
it kind of sidestep that completely.

14
00:00:50.290 --> 00:00:56.070
And the API for Reanimated 2 is really
nice to use, especially for React hooks.

15
00:00:56.070 --> 00:01:00.603
So the reason I'm using Reanimate two is
because I genuinely think it's the nicest

16
00:01:00.603 --> 00:01:03.500
use animation library for React Native.

17
00:01:03.500 --> 00:01:08.010
And that's what we are going to be using
for all of our animations in the future.

18
00:01:08.010 --> 00:01:11.176
It's a lot less code than
the animated API, and

19
00:01:11.176 --> 00:01:13.800
also the animated API is declarative.

20
00:01:14.950 --> 00:01:19.223
Which is a little bit hard to read and
also reason about when you're new to

21
00:01:19.223 --> 00:01:23.430
animations, so
first let's install reanimated too.

22
00:01:23.430 --> 00:01:28.390
So at the time of ricing,
this is the latest version.

23
00:01:28.390 --> 00:01:33.252
And because we're still in beta, I've also
tagged the actual latest version that I'm

24
00:01:33.252 --> 00:01:36.946
going to be using just to make sure
that we're all on the same page.

25
00:01:36.946 --> 00:01:39.724
In the future this is going
to not be in visa and

26
00:01:39.724 --> 00:01:42.004
you might have a different version.

27
00:01:42.004 --> 00:01:45.929
So we're all on the same version
of the package let's install this

28
00:01:45.929 --> 00:01:49.869
particular version so let's copy it and
paste it to our terminal.

29
00:01:53.210 --> 00:01:59.741
So for Reanimated we also need to add
a babel plugin, so this is very important.

30
00:01:59.741 --> 00:02:05.283
So if you open your Babel configures and
then copy this line of code,

31
00:02:05.283 --> 00:02:10.631
so Babel config will be at the root
directory of your project, and

32
00:02:10.631 --> 00:02:16.460
then we need to add the Reanimated
plugin to our plugins list.

33
00:02:16.460 --> 00:02:19.113
So if you're working on
an existing project,

34
00:02:19.113 --> 00:02:21.970
you might already have some plugins here.

35
00:02:21.970 --> 00:02:26.145
In this case, it's super important that
this plugin is the very last thing on

36
00:02:26.145 --> 00:02:28.275
the array, otherwise you're gonna.

37
00:02:34.625 --> 00:02:37.719
To enable this on Android we
to do a couple of extra steps,

38
00:02:37.719 --> 00:02:39.530
just a little bit of native code.

39
00:02:40.610 --> 00:02:45.890
So firstly, we need to turn on the Hermes
engine which is disabled by default.

40
00:02:45.890 --> 00:02:51.046
Hermes is React Native or
Facebook's proprietary JavaScript runtime,

41
00:02:51.046 --> 00:02:53.620
which is optimized for mobile app.

42
00:02:53.620 --> 00:02:57.660
So basically, they are building
their own JavaScript runtime,

43
00:02:57.660 --> 00:03:00.310
which should help your React Native apps.

44
00:03:02.970 --> 00:03:08.905
Load faster, and kind of genuinely getting
up more optimized for running JavaScript.

45
00:03:08.905 --> 00:03:12.098
On the mobile device because obviously
JavaScript is generally meant for

46
00:03:12.098 --> 00:03:15.457
the web which has different restrictions
and different performance needs.

47
00:03:18.516 --> 00:03:21.614
So if we go to Android app build gradle.

48
00:03:21.614 --> 00:03:28.481
So Android app, whoops, build gradle, and

49
00:03:28.481 --> 00:03:34.230
here we got enable Hermes false.

50
00:03:34.230 --> 00:03:37.415
We will turn this to true,
and then for Android,

51
00:03:37.415 --> 00:03:41.232
we also need to add some code
to main application dot Java.

52
00:03:41.232 --> 00:03:43.754
So we copy these two imports and

53
00:03:43.754 --> 00:03:48.801
then we go to app source main
Java main application that Java.

54
00:03:48.801 --> 00:03:54.123
And then we add these imports
actually remove the comments because,

55
00:03:54.123 --> 00:03:56.610
they are not valid in Java land.

56
00:03:57.690 --> 00:04:02.324
And we need to add this override method,
so

57
00:04:02.324 --> 00:04:07.486
the whole method, and
we will paste it in here.

58
00:04:15.366 --> 00:04:20.396
Just underneath the get JS module name and

59
00:04:20.396 --> 00:04:24.852
also just comment excellent that's

60
00:04:24.852 --> 00:04:29.746
just to rebuild the Android app as well.

61
00:04:29.746 --> 00:04:35.085
And then when system called for
IOS you want

62
00:04:35.085 --> 00:04:40.583
to go to the IOS directory
I run pod install.

63
00:04:44.047 --> 00:04:47.024
And after that's done we're
also going to rebuild our app.

64
00:04:51.784 --> 00:04:54.088
So young IOS to rebuild so

65
00:04:54.088 --> 00:04:59.574
just to tell you a little bit
about how Reanimated 2 works,

66
00:04:59.574 --> 00:05:05.330
so the best place to start
is the API documentation.

67
00:05:05.330 --> 00:05:09.154
So we look at API reference, and hooks, so

68
00:05:09.154 --> 00:05:13.460
these are kind of
the hooks that you can use.

69
00:05:13.460 --> 00:05:16.283
So Reanimated 2 is completely hooks based,
so

70
00:05:16.283 --> 00:05:21.610
this fits perfectly in how we already
think about data and things moving around.

71
00:05:21.610 --> 00:05:25.086
Whereas the animated API not so much, so

72
00:05:25.086 --> 00:05:31.600
the data that you'll be using most
frequently is use animated style.

73
00:05:31.600 --> 00:05:35.250
So this is basically a hook that
allows you to create a style,

74
00:05:35.250 --> 00:05:38.200
which you can then use in
an animated component.

75
00:05:40.450 --> 00:05:44.573
And in his hook, you can use animated
values where you can animate any of these

76
00:05:44.573 --> 00:05:47.954
styles from one value to the next,
which is what we going to do.

77
00:05:51.345 --> 00:05:55.670
Another central component
is a use shared value.

78
00:05:55.670 --> 00:06:01.770
So this is a value that you can animate,
and then use within your animated style,

79
00:06:01.770 --> 00:06:07.260
this will be especially handy later
on when we're doing gestures.

80
00:06:07.260 --> 00:06:11.378
We're basically we're setting the position
of the view that we're looking at in

81
00:06:11.378 --> 00:06:14.790
a shared value, and
then animating that view, correspondingly.

82
00:06:16.750 --> 00:06:18.538
Then used to write value,

83
00:06:18.538 --> 00:06:23.751
this is basically what you use if you
have values that you want to calculate.

84
00:06:23.751 --> 00:06:27.296
So if you want to do a calculation
in a shared value so

85
00:06:27.296 --> 00:06:32.078
here we have a shared value which
might change and then you want to like

86
00:06:32.078 --> 00:06:37.120
multiply this for example something
that's outside of animators.

87
00:06:37.120 --> 00:06:40.750
Like welds, like the state value,
then you can use the derived value here.

88
00:06:43.840 --> 00:06:48.017
And then bunch of these are like if
you want to use the on scroll event on

89
00:06:48.017 --> 00:06:53.510
a scroll view within your animation,
there's a built-in scroll handler.

90
00:06:53.510 --> 00:06:56.534
And there's also a gesture handler
that works great with React Native

91
00:06:56.534 --> 00:06:57.360
gesture handler.

92
00:06:58.380 --> 00:07:03.390
There's other ways props and
we'd address animated reactions.

93
00:07:03.390 --> 00:07:05.560
And you can explore
these on your own time.

94
00:07:05.560 --> 00:07:09.886
So yeah, we're going to look
at useAnimatedStyle and

95
00:07:09.886 --> 00:07:13.090
useAnimatedGestureHandler later on.

96
00:07:14.450 --> 00:07:18.162
So when it comes to animations
you have these helper functions,

97
00:07:18.162 --> 00:07:22.229
with timing with spring with with decay,
with sequence with repeat.

98
00:07:22.229 --> 00:07:26.894
And as you'll see later this is these
are what we're going to basically

99
00:07:26.894 --> 00:07:29.938
using to animate a value
from one muted index.

100
00:07:29.938 --> 00:07:35.086
And now the last thing so we haven't had
to do this before, but because we added

101
00:07:35.086 --> 00:07:40.590
something to our Babel config,
we also need to restart the Metro Bundler.

102
00:07:40.590 --> 00:07:46.358
So in your tab wherever you have, wherever
you run yarn, start at the very beginning,

103
00:07:46.358 --> 00:07:50.322
just close it and
redo it just to restart the Metro Bundler.

104
00:07:55.231 --> 00:07:57.980
All right,
now we should be able to use Reanimated.

