WEBVTT

1
00:00:00.340 --> 00:00:03.609 A:middle L:90%
So let me just quickly show you on the home

2
00:00:03.870 --> 00:00:07.940 A:middle L:90%
screen. Just how the reanimated components work. So

3
00:00:08.400 --> 00:00:11.750 A:middle L:90%
I'm going to just have a little little view here

4
00:00:13.529 --> 00:00:15.349 A:middle L:90%
and I'm going to animate the styles of dispute.

5
00:00:15.820 --> 00:00:22.140 A:middle L:90%
You see, you see how it works. Okay

6
00:00:22.649 --> 00:00:31.769 A:middle L:90%
, so let's do const shared equals use shared value

7
00:00:33.039 --> 00:00:37.390 A:middle L:90%
. Let's start with zero. And then let's do

8
00:00:37.789 --> 00:00:50.100 A:middle L:90%
a style which is use animated style and this is

9
00:00:50.520 --> 00:00:58.270 A:middle L:90%
a function and it returns an object which is the

10
00:00:58.380 --> 00:01:07.560 A:middle L:90%
style object. And so yeah, it's just a

11
00:01:07.620 --> 00:01:10.950 A:middle L:90%
return an empty object to begin with. All right

12
00:01:11.290 --> 00:01:14.879 A:middle L:90%
. So let's make this into a square. So

13
00:01:15.250 --> 00:01:24.560 A:middle L:90%
I'm going to do styles dot square square and I'm

14
00:01:24.659 --> 00:01:31.540 A:middle L:90%
going to give it some width and a height and

15
00:01:31.950 --> 00:01:40.629 A:middle L:90%
a background color off light green styles start square.

16
00:01:41.840 --> 00:01:43.689 A:middle L:90%
Okay. So we have a little square here.

17
00:01:45.340 --> 00:01:47.319 A:middle L:90%
So I want to do it so that when I

18
00:01:47.459 --> 00:01:51.180 A:middle L:90%
click on the square it moves slightly to the right

19
00:01:52.840 --> 00:01:56.189 A:middle L:90%
so to do that, I want to actually use

20
00:01:56.750 --> 00:02:04.500 A:middle L:90%
a press a ble so it's important possible. And

21
00:02:04.859 --> 00:02:15.050 A:middle L:90%
let's do an on press will do shared dr value

22
00:02:17.039 --> 00:02:23.689 A:middle L:90%
equals Shared dr value plus 20. Now our use

23
00:02:24.039 --> 00:02:28.530 A:middle L:90%
this shared value to update the style. So let's

24
00:02:28.919 --> 00:02:34.639 A:middle L:90%
do transform and that's this is an array and then

25
00:02:34.740 --> 00:02:39.439 A:middle L:90%
we want a object so we want to translate why

26
00:02:41.840 --> 00:02:48.039 A:middle L:90%
to whatever the shed value is shared value. Yeah

27
00:02:50.039 --> 00:02:51.599 A:middle L:90%
. All right. And now we want to add

28
00:02:51.900 --> 00:02:54.750 A:middle L:90%
this style to appreciable. Now, in order for

29
00:02:55.030 --> 00:02:58.150 A:middle L:90%
animated styles to take any effect on your component.

30
00:02:59.139 --> 00:03:03.039 A:middle L:90%
This needs to be an animated reanimated component. So

31
00:03:03.210 --> 00:03:05.000 A:middle L:90%
it's a way to do that. Yes, we'll

32
00:03:05.150 --> 00:03:12.889 A:middle L:90%
do const reanimated irrepressible and then where we have recommitted

33
00:03:13.310 --> 00:03:16.889 A:middle L:90%
reanimated, we need a default export. So reanimated

34
00:03:20.240 --> 00:03:25.939 A:middle L:90%
and we'll do a reanimated dot create animated component and

35
00:03:26.150 --> 00:03:33.240 A:middle L:90%
we pass in compressible. Okay. Yeah. And

36
00:03:33.560 --> 00:03:37.039 A:middle L:90%
we're going to use that instead of depressed people and

37
00:03:37.330 --> 00:03:40.060 A:middle L:90%
now we can pass in the style as the second

38
00:03:41.139 --> 00:03:44.919 A:middle L:90%
item on nostalgia. Now when I click on that

39
00:03:46.039 --> 00:03:48.250 A:middle L:90%
, okay, translate why obviously goes down. So

40
00:03:48.360 --> 00:03:52.210 A:middle L:90%
just to translate X they go. So every time

41
00:03:52.389 --> 00:03:54.419 A:middle L:90%
I click on it it moves now you'll notice that

42
00:03:54.659 --> 00:03:57.710 A:middle L:90%
it moves but it's not animating. So I wanted

43
00:03:58.110 --> 00:04:01.330 A:middle L:90%
to move move smoothly. So this is where the

44
00:04:01.710 --> 00:04:05.509 A:middle L:90%
with transition health and methods come in. So if

45
00:04:05.689 --> 00:04:08.550 A:middle L:90%
you remember in the animated dogs we have with timing

46
00:04:09.030 --> 00:04:11.360 A:middle L:90%
with spring with decay, we're timing is the one

47
00:04:11.560 --> 00:04:13.449 A:middle L:90%
that you're going to be using most often or at

48
00:04:13.539 --> 00:04:15.750 A:middle L:90%
least I do. So if we're import with timing

49
00:04:20.540 --> 00:04:22.490 A:middle L:90%
. So here on press where we set the new

50
00:04:22.689 --> 00:04:27.279 A:middle L:90%
value, we can do shared value and with timing

51
00:04:31.540 --> 00:04:34.329 A:middle L:90%
. So this will set this value to this new

52
00:04:34.879 --> 00:04:37.660 A:middle L:90%
value. So the current value plus 20 but it

53
00:04:37.850 --> 00:04:42.040 A:middle L:90%
will transition to it. So now let's reload when

54
00:04:42.329 --> 00:04:44.769 A:middle L:90%
working with the animator to it's often good to reload

55
00:04:45.500 --> 00:04:48.610 A:middle L:90%
in between hot reloading because it doesn't always update correctly

56
00:04:49.939 --> 00:04:53.149 A:middle L:90%
. Um so now when I, whenever I click

57
00:04:53.410 --> 00:04:55.949 A:middle L:90%
on it, it kind of shifts slightly to the

58
00:04:56.069 --> 00:04:59.379 A:middle L:90%
right there's an anime animation conflict here as well.

59
00:04:59.649 --> 00:05:03.170 A:middle L:90%
So I can tweak the duration. So I think

60
00:05:03.339 --> 00:05:07.310 A:middle L:90%
for example, say duration, 1000 of a second

61
00:05:07.740 --> 00:05:10.829 A:middle L:90%
. So we'll take a whole second to go to

62
00:05:10.959 --> 00:05:17.889 A:middle L:90%
the right. Mm hmm. So on a high

63
00:05:18.089 --> 00:05:21.389 A:middle L:90%
level, this is how animating component using animator styles

64
00:05:21.680 --> 00:05:24.680 A:middle L:90%
will work. Um let's use this now on our

65
00:05:24.980 --> 00:05:29.329 A:middle L:90%
button. So currently what's happening is you can't really

66
00:05:29.819 --> 00:05:33.180 A:middle L:90%
choose an emoji. Uh you can't really choose a

67
00:05:33.269 --> 00:05:36.279 A:middle L:90%
mood if you haven't selected one. However, this

68
00:05:36.480 --> 00:05:39.170 A:middle L:90%
button looks enabled so we just want to do a

69
00:05:39.339 --> 00:05:41.920 A:middle L:90%
visual ui update for the user to know that.

70
00:05:42.139 --> 00:05:44.740 A:middle L:90%
Oh well I know that. I can't currently choose

71
00:05:44.970 --> 00:05:48.750 A:middle L:90%
anything because this is dimmed out. So I'm going

72
00:05:48.930 --> 00:06:02.300 A:middle L:90%
to remove this VSCode from here. Alright, let's

73
00:06:02.610 --> 00:06:12.269 A:middle L:90%
go into our mood picker component. Okay, so

74
00:06:12.720 --> 00:06:16.069 A:middle L:90%
our choose button is over here and it's a press

75
00:06:16.339 --> 00:06:18.709 A:middle L:90%
a ble so we need to create an animated component

76
00:06:19.220 --> 00:06:30.689 A:middle L:90%
for it. So let's import reanimated from react native

77
00:06:31.740 --> 00:06:34.769 A:middle L:90%
. We animated. So we were talking about default

78
00:06:35.250 --> 00:06:38.800 A:middle L:90%
exports versus non default exports. So in the code

79
00:06:39.050 --> 00:06:41.310 A:middle L:90%
based on working at the moment, we have some

80
00:06:41.600 --> 00:06:45.110 A:middle L:90%
people imported as animated and some people imported as reanimated

81
00:06:45.740 --> 00:06:48.360 A:middle L:90%
. So we have to to standards. So if

82
00:06:48.560 --> 00:06:51.939 A:middle L:90%
this was and named exports, you wouldn't have that

83
00:06:52.069 --> 00:06:59.040 A:middle L:90%
problem. So const um reanimated, press a ble

84
00:07:01.339 --> 00:07:07.220 A:middle L:90%
he's reanimated create animated component and it's passing depress able

85
00:07:10.740 --> 00:07:14.819 A:middle L:90%
Now let's use it for our choose button. Let's

86
00:07:15.000 --> 00:07:18.850 A:middle L:90%
create an animated style for this. So const latin

87
00:07:19.699 --> 00:07:27.889 A:middle L:90%
style is use animated style and this is an arrow

88
00:07:28.149 --> 00:07:31.819 A:middle L:90%
function that returns an object and it has a dependency

89
00:07:32.329 --> 00:07:40.839 A:middle L:90%
to ray. And let's do capacity. It's too

90
00:07:41.110 --> 00:07:44.930 A:middle L:90%
if there is a selective mood Then let's do capacity

91
00:07:45.439 --> 00:07:54.509 A:middle L:90%
one. Otherwise let's do capacity 9.5. And let's

92
00:07:54.720 --> 00:08:05.000 A:middle L:90%
also pass this button style into our button. Excellent

93
00:08:05.879 --> 00:08:07.579 A:middle L:90%
. So now we are at where we were with

94
00:08:07.740 --> 00:08:10.379 A:middle L:90%
the previous case of doing animations so this works but

95
00:08:10.470 --> 00:08:13.189 A:middle L:90%
it doesn't actually animate. So how do we make

96
00:08:13.399 --> 00:08:16.620 A:middle L:90%
this animate? Well the handy thing about those weird

97
00:08:16.769 --> 00:08:19.709 A:middle L:90%
transition hooks is that you can use them within use

98
00:08:20.029 --> 00:08:21.680 A:middle L:90%
an immediate styles as well. So if you toggle

99
00:08:22.009 --> 00:08:24.990 A:middle L:90%
between two states, you don't have to create an

100
00:08:25.089 --> 00:08:27.980 A:middle L:90%
external shared value just to track it. You can

101
00:08:28.110 --> 00:08:34.440 A:middle L:90%
do it here. So if we import with timing

102
00:08:35.740 --> 00:08:40.820 A:middle L:90%
from react native reanimated, we can wrap these one

103
00:08:41.940 --> 00:08:46.059 A:middle L:90%
and no point no 0.0.5 with the timing function.

104
00:08:47.029 --> 00:08:50.820 A:middle L:90%
And then if this changes this capacity gets changed to

105
00:08:50.909 --> 00:08:54.909 A:middle L:90%
one or 2.5 but it will transition to that value

106
00:08:55.830 --> 00:08:59.279 A:middle L:90%
to know to reload and select one of these.

107
00:09:00.539 --> 00:09:02.730 A:middle L:90%
Oh okay. So the reason this doesn't work is

108
00:09:02.980 --> 00:09:05.600 A:middle L:90%
that there is a dependencies array but my ESPN plugging

109
00:09:06.049 --> 00:09:08.990 A:middle L:90%
isn't telling me that I need to add something to

110
00:09:09.149 --> 00:09:11.559 A:middle L:90%
it. So make sure you had selected mood to

111
00:09:11.860 --> 00:09:18.309 A:middle L:90%
the dependencies away and reload. Now when I select

112
00:09:18.669 --> 00:09:23.340 A:middle L:90%
something, you can see that it goes from Capacity

113
00:09:24.159 --> 00:09:29.379 A:middle L:90%
. Open five Capacity 1 Now, honey thing here

114
00:09:29.669 --> 00:09:33.179 A:middle L:90%
is that you can actually um animate several properties at

115
00:09:33.330 --> 00:09:35.710 A:middle L:90%
the same time. So we can also animate the

116
00:09:35.789 --> 00:09:40.750 A:middle L:90%
scale. So if we do transform, there's an

117
00:09:40.840 --> 00:09:45.429 A:middle L:90%
array and we'll do scale and we can do a

118
00:09:45.529 --> 00:09:47.960 A:middle L:90%
similar thing. So we'll do if the selected mood

119
00:09:48.340 --> 00:09:50.700 A:middle L:90%
a mood is selected, we will do a scale

120
00:09:51.200 --> 00:09:56.330 A:middle L:90%
of one. Otherwise that's too no .8 and we

121
00:09:56.419 --> 00:10:04.529 A:middle L:90%
can add a with timing. Yeah. So now

122
00:10:04.669 --> 00:10:10.139 A:middle L:90%
if you reload, you can see that this is

123
00:10:10.350 --> 00:10:14.419 A:middle L:90%
small and then when we choose an emoji, it

124
00:10:14.919 --> 00:10:18.059 A:middle L:90%
kind of both phase in and zooms in a little

125
00:10:18.230 --> 00:10:21.620 A:middle L:90%
bit. Now you notice that I didn't add with

126
00:10:21.889 --> 00:10:23.809 A:middle L:90%
timing here. This is because when I was doing

127
00:10:24.070 --> 00:10:27.179 A:middle L:90%
this earlier on android, there is currently a bug

128
00:10:27.480 --> 00:10:30.450 A:middle L:90%
for adding a timing function on scale on this particular

129
00:10:30.889 --> 00:10:33.940 A:middle L:90%
version. Already talked to the reanimated folks about it

130
00:10:34.049 --> 00:10:37.269 A:middle L:90%
. So we'll get this fixed thing. All right

131
00:10:37.730 --> 00:10:40.429 A:middle L:90%
. Let's make sure that we have our android app

132
00:10:40.669 --> 00:10:54.940 A:middle L:90%
also running so it's probably hasn't rebuilt. Yeah,

133
00:10:55.429 --> 00:11:00.889 A:middle L:90%
this needs to be rebuilt. Okay, so let's

134
00:11:01.200 --> 00:11:07.429 A:middle L:90%
rebuild android. There you go. So it turns

135
00:11:07.730 --> 00:11:11.259 A:middle L:90%
out you choose and then it both goes to opacity

136
00:11:11.690 --> 00:11:13.879 A:middle L:90%
one and it flows in. So this is a

137
00:11:14.320 --> 00:11:18.309 A:middle L:90%
pretty quick simple example, but it's very powerful because

138
00:11:18.789 --> 00:11:20.820 A:middle L:90%
you use the same kind of methods to do all

139
00:11:20.970 --> 00:11:21.870 A:middle L:90%
kinds of animations

