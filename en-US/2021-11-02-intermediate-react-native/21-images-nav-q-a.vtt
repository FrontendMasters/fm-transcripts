WEBVTT

1
00:00:00.405 --> 00:00:04.982
For the bottom tab,
how can we enlarge our anime tab on click?

2
00:00:04.982 --> 00:00:08.970
&gt;&gt; Because we know if
the selected shape changes,

3
00:00:08.970 --> 00:00:14.464
we could trigger an animation here and
just animate your styles.

4
00:00:14.464 --> 00:00:16.437
So you can animate SVG elements.

5
00:00:16.437 --> 00:00:17.984
SVG actually also for animating.

6
00:00:17.984 --> 00:00:21.693
You can create animated SVG so,
you can like enlarge it, or something.

7
00:00:21.693 --> 00:00:24.153
So I think I would do it here, but

8
00:00:24.153 --> 00:00:28.266
I think it depends on
the specific animation as well.

9
00:00:28.266 --> 00:00:31.778
Cuz a lot of animations
are kind of sleight of hand.

10
00:00:31.778 --> 00:00:36.479
So, for example,
a recent animation that I built was we

11
00:00:36.479 --> 00:00:39.787
have a search box at the top of the page.

12
00:00:39.787 --> 00:00:42.540
And then when you tap on the search box,

13
00:00:42.540 --> 00:00:46.224
the page kind of fades into
the search page, right.

14
00:00:46.224 --> 00:00:50.083
Which kind of looks like there's a search
page that opens up on top of your current

15
00:00:50.083 --> 00:00:50.610
content.

16
00:00:50.610 --> 00:00:53.729
But actually 3Ds is just
a mode with a fancy animation.

17
00:00:53.729 --> 00:00:59.721
So it will depend on the actual animation
like how complex it is or how simple.

18
00:00:59.721 --> 00:01:03.993
So a lot of animations will just be
overlaid on top of your content..

19
00:01:03.993 --> 00:01:07.932
So they like give the effect of something
happening where actually like behind

20
00:01:07.932 --> 00:01:09.851
the scenes is kind of sleight of hand.

21
00:01:09.851 --> 00:01:13.769
&gt;&gt; For network images,
how do we handle high resolution images?

22
00:01:13.769 --> 00:01:18.383
Is receiving different URLs for
different resolutions the only way?

23
00:01:18.383 --> 00:01:21.763
&gt;&gt; Yes, so usually you would use like,

24
00:01:21.763 --> 00:01:26.888
there are a bunch of different
image CDNs that basically

25
00:01:26.888 --> 00:01:31.794
give you the image base and
associate you put in the URL

26
00:01:31.794 --> 00:01:37.047
should pretty common solution
on the web as well I think.

27
00:01:37.047 --> 00:01:39.000
So usually what you would do or

28
00:01:39.000 --> 00:01:43.073
like what I would do is you get
the pixel density of the device.

29
00:01:43.073 --> 00:01:48.198
Which I think is in platform where you
can get the pixel density of the device.

30
00:01:48.198 --> 00:01:52.795
And then you request the image based on
the size that you need to render it to

31
00:01:52.795 --> 00:01:54.441
times the pixel density.

32
00:01:54.441 --> 00:01:59.669
And then basically, you get it so
it would be just via different URLs.

33
00:01:59.669 --> 00:02:01.750
So if you have user generated content,

34
00:02:01.750 --> 00:02:04.839
you need to make sure that when
the user uploads the image,

35
00:02:04.839 --> 00:02:09.214
you do some processing on your back end to
be able to support the different images.

36
00:02:09.214 --> 00:02:15.252
So if they upload a huge image, you don't
want to just render it as is in your app.

37
00:02:15.252 --> 00:02:20.211
&gt;&gt; I have question, why wouldn't we use
free acquire code directly in the image

38
00:02:20.211 --> 00:02:24.268
source rather than defining
a const outside of the component.

39
00:02:24.268 --> 00:02:28.686
&gt;&gt; Absolutely no reason,
feel free to do that.

40
00:02:28.686 --> 00:02:33.443
I think it's just a habit because it
really requires we're unsupported until

41
00:02:33.443 --> 00:02:37.621
recently so my habit is to add the
requires see at the top of the page but

42
00:02:37.621 --> 00:02:40.018
there's no reason to do that anymore.

43
00:02:40.018 --> 00:02:45.304
&gt;&gt; And then can you use import syntax
rather than required to load images?

44
00:02:45.304 --> 00:02:48.970
&gt;&gt; No you can't, so,
I actually had one other thing

45
00:02:48.970 --> 00:02:53.263
that I've just remembered that
I wanted to share as a tip.

46
00:02:53.263 --> 00:02:57.461
If you get SVGs from your workplace or
your designers, and

47
00:02:57.461 --> 00:03:01.488
you need to convert them into
these SVGs using your app,

48
00:03:01.488 --> 00:03:05.871
a lot of the time the SVGs you
get you get don't look as clean.

49
00:03:05.871 --> 00:03:09.410
As this there's a lot of time
there's like transitions and

50
00:03:09.410 --> 00:03:14.293
it's like gee like the group elements all
over the place they don't really need we

51
00:03:14.293 --> 00:03:16.443
don't want to update them by hand.

52
00:03:16.443 --> 00:03:21.451
So there's a couple of tools out
there that will help you and

53
00:03:21.451 --> 00:03:27.477
one of them the one I use is React
Native SVGR which has this playground.

54
00:03:27.477 --> 00:03:30.584
And basically so
here's an example of an SVG element and

55
00:03:30.584 --> 00:03:34.830
this is pretty typical of something
that you might receive from a designer.

56
00:03:34.830 --> 00:03:39.402
It has all this meta data from where it
was generated and it's got a bunch of D

57
00:03:39.402 --> 00:03:44.204
elements and there's some like a bunch
of translations that you don't want.

58
00:03:44.204 --> 00:03:47.605
And here there's actually like
gives you options if it will create

59
00:03:47.605 --> 00:03:48.829
the component for you.

60
00:03:48.829 --> 00:03:52.527
So if you wanna you could
do React Native and

61
00:03:52.527 --> 00:03:56.758
whether you want to pass the properties so
like.

62
00:03:56.758 --> 00:04:00.973
Here to the SVG or not and
you can see that it hides it up so

63
00:04:00.973 --> 00:04:04.007
this whole component turns into this.

64
00:04:04.007 --> 00:04:08.899
So usually what I do because I
don't quite like the syntax of this

65
00:04:08.899 --> 00:04:12.248
is if I get an SVG,
I will paste it into here,

66
00:04:12.248 --> 00:04:17.796
generate the React Native component and
just copy this bit into my code.

67
00:04:17.796 --> 00:04:20.358
So one thing to note though for

68
00:04:20.358 --> 00:04:25.276
some reason, they all always
add this XML NS property and

69
00:04:25.276 --> 00:04:29.597
this isn't a valid property
in React Native SVG.

70
00:04:29.597 --> 00:04:33.247
So after you copy it
you'll have to remove it.

71
00:04:33.247 --> 00:04:36.981
But that's my this has
saved me hours of my life.

72
00:04:36.981 --> 00:04:42.158
&gt;&gt; So you mentioned tabs and
drawers, as the main navigation,

73
00:04:42.158 --> 00:04:46.943
is there any other navigations or
types of navigation.

74
00:04:46.943 --> 00:04:52.127
&gt;&gt; Okay, so we have tabs, stacks,
you have Talon navigation,

75
00:04:52.127 --> 00:04:56.825
you have stuck navigation,
and then you have Moodles.

76
00:04:56.825 --> 00:05:02.809
And so
there's an example I have on GitHub.

77
00:05:02.809 --> 00:05:09.312
I have a demo project that has
navigation setup which just started us.

78
00:05:09.312 --> 00:05:15.789
This is a template project that has
a two tab layout with two models and

79
00:05:15.789 --> 00:05:21.613
a stack navigator so
if you look at the navigation story here.

80
00:05:21.613 --> 00:05:25.496
So we've got the root stack,
then we've got the bottom tabs, so

81
00:05:25.496 --> 00:05:27.341
you could have these two tabs.

82
00:05:27.341 --> 00:05:31.447
And then we got on a home tab,
we have a stack navigator inside it.

83
00:05:31.447 --> 00:05:33.927
So if you go to open second page here,

84
00:05:33.927 --> 00:05:37.138
it will open a page inside
your home navigator.

85
00:05:37.138 --> 00:05:40.538
And then in the other tab,
this is just a tab on its own.

86
00:05:40.538 --> 00:05:44.282
So the other tab looks
exactly like our tab.

87
00:05:44.282 --> 00:05:48.457
Tabs look like so
we don't have anything nesting inside and

88
00:05:48.457 --> 00:05:50.544
then lastly we have a Moodle or

89
00:05:50.544 --> 00:05:56.574
you'll notice that this Moodle is adjacent
to the bottom tabs rather than inside it.

90
00:05:56.574 --> 00:06:01.086
And that's because I want the moodle
to appear over the bottom tabs and

91
00:06:01.086 --> 00:06:05.382
that's why we need to have a stack
navigator at the very top level.

92
00:06:05.382 --> 00:06:07.758
So you could put both of
the bottom tabs navigator and

93
00:06:07.758 --> 00:06:09.329
the example module inside there.

94
00:06:09.329 --> 00:06:13.510
I need to update the Type Script types for
navigation on here, but

95
00:06:13.510 --> 00:06:17.016
otherwise this is this you
can use this for reference.

96
00:06:17.016 --> 00:06:22.055
So if you look at the template,
so, screens,

97
00:06:22.055 --> 00:06:28.272
so this follows the same format
as we did in our workshop.

98
00:06:28.272 --> 00:06:32.900
So we have bottom tabs navigator,
modal screen home tab, so

99
00:06:32.900 --> 00:06:37.643
if you go to root navigator will
see that we have so root stack.

100
00:06:37.643 --> 00:06:41.904
So this is a stack navigator, and
then it has two things inside.

101
00:06:41.904 --> 00:06:45.956
So you have the bottom tabs,
which is most of your content, and

102
00:06:45.956 --> 00:06:49.480
then you have a modal which
is like a blue screen modal.

103
00:06:49.480 --> 00:06:53.773
So usually when I built apps,
this is the format that I go with, so

104
00:06:53.773 --> 00:06:56.426
you have roof stack, you have a tab, and

105
00:06:56.426 --> 00:07:01.369
then all of your full screen models
will be here so you might have like 20.

106
00:07:01.369 --> 00:07:03.570
And then obviously for each of the models,

107
00:07:03.570 --> 00:07:05.954
if the moodle itself has
a stack navigator, so

108
00:07:05.954 --> 00:07:09.461
if you can navigate the screens
within the moodle, you can do that.

109
00:07:09.461 --> 00:07:13.755
So you can have the component
be in itself a stack navigator.

110
00:07:17.187 --> 00:07:19.455
Yeah, and this is a template, so

111
00:07:19.455 --> 00:07:24.000
you can try it out if you just
entered a new app using this template.

