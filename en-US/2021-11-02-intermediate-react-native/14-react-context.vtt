WEBVTT

1
00:00:00.140 --> 00:00:02.600 A:middle L:90%
now there are several ways to handle data in your

2
00:00:03.040 --> 00:00:05.450 A:middle L:90%
app, react native app. So you probably have

3
00:00:05.589 --> 00:00:07.200 A:middle L:90%
already heard of redox. It's kind of the go

4
00:00:07.419 --> 00:00:11.759 A:middle L:90%
to way in this in this workshop we are going

5
00:00:11.929 --> 00:00:14.849 A:middle L:90%
to use react context which is a built end way

6
00:00:15.429 --> 00:00:18.690 A:middle L:90%
a built in way in, react to handle global

7
00:00:19.050 --> 00:00:21.589 A:middle L:90%
state. Just as a side note, if you

8
00:00:21.690 --> 00:00:23.510 A:middle L:90%
are going to read use Redux for your project,

9
00:00:24.030 --> 00:00:27.010 A:middle L:90%
I strongly recommend you check out Redux toolkit which basically

10
00:00:27.550 --> 00:00:30.440 A:middle L:90%
gives you all the power of Redux but with very

11
00:00:30.920 --> 00:00:33.979 A:middle L:90%
very little boilerplate also, it's fully typed with typescript

12
00:00:34.619 --> 00:00:38.840 A:middle L:90%
so it's basically magic. However, in this project

13
00:00:39.570 --> 00:00:42.609 A:middle L:90%
we're going to be exploring react context. Now the

14
00:00:42.799 --> 00:00:45.890 A:middle L:90%
context basically the way it works is you wrap a

15
00:00:46.039 --> 00:00:49.140 A:middle L:90%
context around a section of your app or you can

16
00:00:49.310 --> 00:00:51.789 A:middle L:90%
wrap it around your whole app and then basically you

17
00:00:52.020 --> 00:00:55.939 A:middle L:90%
pass down specific elements through the context and all the

18
00:00:56.070 --> 00:00:58.740 A:middle L:90%
items that you passed down can be then used or

19
00:00:59.070 --> 00:01:04.150 A:middle L:90%
by all the Children inside your app. Now context

20
00:01:04.700 --> 00:01:06.969 A:middle L:90%
has two parts. There is a provider and a

21
00:01:07.030 --> 00:01:09.680 A:middle L:90%
consumer. So the provider is this top level component

22
00:01:10.430 --> 00:01:12.290 A:middle L:90%
and this is where we also store the data and

23
00:01:12.640 --> 00:01:15.870 A:middle L:90%
then a consumer is something that can consume all the

24
00:01:15.969 --> 00:01:18.299 A:middle L:90%
data within the provider from anywhere in the app component

25
00:01:18.739 --> 00:01:20.120 A:middle L:90%
tree. So you don't need to do any prop

26
00:01:20.349 --> 00:01:25.219 A:middle L:90%
drilling. So this is handy for us because if

27
00:01:25.400 --> 00:01:27.109 A:middle L:90%
we look at our app, we would like to

28
00:01:28.040 --> 00:01:30.689 A:middle L:90%
have, we would like to be entering our data

29
00:01:31.060 --> 00:01:33.010 A:middle L:90%
from the home page but really want the data,

30
00:01:33.670 --> 00:01:37.010 A:middle L:90%
the history to appear on the history page. And

31
00:01:37.290 --> 00:01:39.370 A:middle L:90%
if you go to the navigation. Oftentimes navigation,

32
00:01:40.069 --> 00:01:43.209 A:middle L:90%
we couldn't even pass these down as props because home

33
00:01:43.469 --> 00:01:46.379 A:middle L:90%
and history are adjacent in the component tree. So

34
00:01:46.640 --> 00:01:48.819 A:middle L:90%
that's why we have to use something like context or

35
00:01:49.150 --> 00:01:55.859 A:middle L:90%
redux. So to start, let's create a provider

36
00:01:56.469 --> 00:01:58.540 A:middle L:90%
. So I'm going to create one top level context

37
00:01:59.370 --> 00:02:01.230 A:middle L:90%
. So in a source directory must create a new

38
00:02:01.430 --> 00:02:05.140 A:middle L:90%
file and call it up dot provider dot tsx.

39
00:02:10.240 --> 00:02:12.129 A:middle L:90%
And here let's create a new context. So let's

40
00:02:12.400 --> 00:02:20.439 A:middle L:90%
do const mhm up. Mhm. To check if

41
00:02:20.550 --> 00:02:23.340 A:middle L:90%
it was capital or not. Oh no, it

42
00:02:23.569 --> 00:02:25.530 A:middle L:90%
was. Yeah. So let's create any context.

43
00:02:26.060 --> 00:02:35.009 A:middle L:90%
Let's to contact const up context equals create context and

44
00:02:35.110 --> 00:02:39.969 A:middle L:90%
then create context is imported from react. And here

45
00:02:40.250 --> 00:02:42.780 A:middle L:90%
we need to pass in a default value and also

46
00:02:42.979 --> 00:02:47.840 A:middle L:90%
the type for it. So let's start with up

47
00:02:48.479 --> 00:02:57.539 A:middle L:90%
context type. Let's just say greeting and I'm going

48
00:02:57.710 --> 00:03:01.259 A:middle L:90%
to say hello and we're going to pass this context

49
00:03:01.939 --> 00:03:05.240 A:middle L:90%
type here as we did with with you state.

50
00:03:06.240 --> 00:03:08.060 A:middle L:90%
And we also need to pass in an initial value

51
00:03:08.479 --> 00:03:10.939 A:middle L:90%
. So let's do So this is the type.

52
00:03:11.229 --> 00:03:14.219 A:middle L:90%
So this should be greeting string. Here we do

53
00:03:14.539 --> 00:03:19.770 A:middle L:90%
greeting. Hello. All right. So now we

54
00:03:19.879 --> 00:03:22.479 A:middle L:90%
have an up context and we have an initial value

55
00:03:23.039 --> 00:03:24.520 A:middle L:90%
. This thing we need is a provider. So

56
00:03:24.969 --> 00:03:27.009 A:middle L:90%
so this is the bit that's exported from this um

57
00:03:28.240 --> 00:03:30.139 A:middle L:90%
from from the app provider. So let's do export

58
00:03:31.090 --> 00:03:37.740 A:middle L:90%
const app provider. So this will be a react

59
00:03:38.680 --> 00:03:48.740 A:middle L:90%
fc. And we're going to return up context dot

60
00:03:49.400 --> 00:03:55.110 A:middle L:90%
provider. And so basically the purpose of this component

61
00:03:55.639 --> 00:03:57.659 A:middle L:90%
is that we're going to wrap it around where we

62
00:03:57.759 --> 00:03:59.840 A:middle L:90%
want our context to be. So we're going to

63
00:04:00.449 --> 00:04:05.349 A:middle L:90%
take the Children so anything that's inside it and we're

64
00:04:05.469 --> 00:04:08.240 A:middle L:90%
going to just pass the Children down. Yeah.

65
00:04:09.139 --> 00:04:11.840 A:middle L:90%
Mhm. And lastly, we need to give this

66
00:04:13.039 --> 00:04:16.560 A:middle L:90%
the context a value. So the value in a

67
00:04:16.629 --> 00:04:20.829 A:middle L:90%
provider is basically what's the current value of the context

68
00:04:21.300 --> 00:04:23.110 A:middle L:90%
is? So this is the part that will be

69
00:04:23.259 --> 00:04:25.079 A:middle L:90%
available for all the Children to use. So we

70
00:04:25.180 --> 00:04:28.199 A:middle L:90%
do value. And then this needs to match this

71
00:04:28.399 --> 00:04:36.040 A:middle L:90%
syntax. So we'll do greeting. Hello. And

72
00:04:36.360 --> 00:04:39.350 A:middle L:90%
lastly we should also import react if we're using the

73
00:04:39.449 --> 00:04:45.490 A:middle L:90%
sx. All right. So now this is all

74
00:04:45.629 --> 00:04:48.660 A:middle L:90%
set up. Now let's go to where we want

75
00:04:49.000 --> 00:04:51.259 A:middle L:90%
this app provider to be. So in our case

76
00:04:51.540 --> 00:04:53.350 A:middle L:90%
let's go to the top level. I'm going to

77
00:04:53.459 --> 00:04:56.810 A:middle L:90%
go to up the Tsx and I'm going to wrap

78
00:04:57.279 --> 00:05:14.930 A:middle L:90%
this in the app provider. Cool. So now

79
00:05:15.649 --> 00:05:18.410 A:middle L:90%
this means that this value that we're passing to our

80
00:05:18.639 --> 00:05:24.370 A:middle L:90%
provider will be available for anything that's inside the app

81
00:05:24.500 --> 00:05:26.420 A:middle L:90%
providers. So all of our screens will have access

82
00:05:26.740 --> 00:05:30.019 A:middle L:90%
to the same instance of that value. So usually

83
00:05:30.600 --> 00:05:34.129 A:middle L:90%
I create a convenience function in my provider for using

84
00:05:34.519 --> 00:05:36.939 A:middle L:90%
it. So there's a used context hook. So

85
00:05:37.319 --> 00:05:43.720 A:middle L:90%
I will do export const use up context. And

86
00:05:44.000 --> 00:05:46.819 A:middle L:90%
the way they use context is you use use context

87
00:05:50.839 --> 00:05:57.269 A:middle L:90%
use context which is important say as to react dot

88
00:05:57.490 --> 00:06:04.209 A:middle L:90%
to use context and we pass in the context you

89
00:06:04.300 --> 00:06:06.029 A:middle L:90%
want to use in our case it's the app context

90
00:06:06.800 --> 00:06:09.220 A:middle L:90%
. So you can have multiple contexts within europe.

91
00:06:10.029 --> 00:06:12.540 A:middle L:90%
So in this case you could you could you could

92
00:06:12.699 --> 00:06:15.879 A:middle L:90%
have a use the context or theme, context or

93
00:06:16.240 --> 00:06:21.029 A:middle L:90%
authentication context and now from any component. So let's

94
00:06:21.230 --> 00:06:24.740 A:middle L:90%
for example, go to our history screen. We

95
00:06:25.269 --> 00:06:33.439 A:middle L:90%
can do const context equals use up context. Now

96
00:06:33.730 --> 00:06:37.439 A:middle L:90%
if you hover over this, you'll see that and

97
00:06:37.629 --> 00:06:41.540 A:middle L:90%
to give you the return value. Um yeah,

98
00:06:41.850 --> 00:06:44.459 A:middle L:90%
we'll see that this is of type app context type

99
00:06:45.339 --> 00:06:47.579 A:middle L:90%
which means that it has a greeting in it.

100
00:06:48.439 --> 00:06:51.540 A:middle L:90%
So in history instead of typing path, instead of

101
00:06:51.740 --> 00:06:54.930 A:middle L:90%
logging out history, I can do up context greeting

102
00:06:56.939 --> 00:06:58.329 A:middle L:90%
and now I can see that this says hello.

103
00:06:59.339 --> 00:07:03.319 A:middle L:90%
So if I had more things here, Hello world

104
00:07:05.439 --> 00:07:07.079 A:middle L:90%
, it will update. And the cool thing about

105
00:07:07.339 --> 00:07:09.670 A:middle L:90%
that is that we can use the same thing on

106
00:07:10.459 --> 00:07:13.029 A:middle L:90%
any component without having to pass this down. So

107
00:07:13.160 --> 00:07:15.819 A:middle L:90%
for example, if I went to the analytics tab

108
00:07:16.240 --> 00:07:18.850 A:middle L:90%
that we haven't used this exact same thing will work

109
00:07:19.089 --> 00:07:27.790 A:middle L:90%
here. So constant context use context. If I

110
00:07:27.879 --> 00:07:30.939 A:middle L:90%
did have context of greeting, you can see that

111
00:07:31.160 --> 00:07:34.220 A:middle L:90%
. So I went home history says hello world and

112
00:07:34.509 --> 00:07:36.319 A:middle L:90%
analytics also says hello world. So they have access

113
00:07:36.769 --> 00:07:42.519 A:middle L:90%
to the same instance of context. So he's going

114
00:07:42.699 --> 00:07:46.839 A:middle L:90%
to riff about this from the allergic screen. So

115
00:07:47.129 --> 00:07:49.620 A:middle L:90%
what we want to use our context for is basically

116
00:07:50.180 --> 00:07:55.949 A:middle L:90%
to pull out this mood list item into context so

117
00:07:56.279 --> 00:07:58.490 A:middle L:90%
we could access the mood list from both pages.

118
00:08:09.740 --> 00:08:12.459 A:middle L:90%
So let's do this. Now when we go to

119
00:08:13.149 --> 00:08:18.920 A:middle L:90%
the let's go to the home screen. Okay let's

120
00:08:19.100 --> 00:08:20.850 A:middle L:90%
open the home screen where you currently have the mood

121
00:08:21.149 --> 00:08:24.470 A:middle L:90%
list and handle select mood. And I'm going to

122
00:08:24.579 --> 00:08:32.039 A:middle L:90%
copy both these and go to the app provider and

123
00:08:32.509 --> 00:08:35.429 A:middle L:90%
this is just a react component. So I'm going

124
00:08:35.629 --> 00:08:38.370 A:middle L:90%
to paste them here. So we've got movie list

125
00:08:38.710 --> 00:08:43.940 A:middle L:90%
and select mood going to import the types. Mhm

126
00:08:45.940 --> 00:08:49.120 A:middle L:90%
And I want to pass both of these down so

127
00:08:49.320 --> 00:08:53.419 A:middle L:90%
they could be accessed by any component. So let's

128
00:08:53.659 --> 00:08:58.600 A:middle L:90%
do move list and handle select mood. And obviously

129
00:08:59.049 --> 00:09:02.139 A:middle L:90%
now our context type has changed only to update this

130
00:09:03.240 --> 00:09:06.600 A:middle L:90%
. Mhm. So mood list is now an array

131
00:09:08.139 --> 00:09:15.850 A:middle L:90%
or move option with timestamp and handle select mood is

132
00:09:16.360 --> 00:09:20.840 A:middle L:90%
a function that takes in a mood which is a

133
00:09:21.009 --> 00:09:25.960 A:middle L:90%
mood option type and returns nothing. So one thing

134
00:09:26.289 --> 00:09:29.919 A:middle L:90%
is that you need to provide a default value for

135
00:09:30.269 --> 00:09:32.909 A:middle L:90%
all these. So we'll do mood list which is

136
00:09:33.029 --> 00:09:38.690 A:middle L:90%
just an empty ray and handle select mood which is

137
00:09:39.289 --> 00:09:45.750 A:middle L:90%
a Node function. Excellent. So now both mood

138
00:09:46.009 --> 00:09:50.100 A:middle L:90%
list and the handle select functions are available within our

139
00:09:50.200 --> 00:09:55.539 A:middle L:90%
context. So now if we go to home um

140
00:09:56.159 --> 00:10:00.129 A:middle L:90%
let's delete this and use up context instead. So

141
00:10:00.340 --> 00:10:10.200 A:middle L:90%
that's two up context. Use context and here where

142
00:10:10.360 --> 00:10:13.230 A:middle L:90%
we have the mood picker for handle select mood will

143
00:10:13.730 --> 00:10:19.899 A:middle L:90%
instead passing up context dot handle select mood. And

144
00:10:20.360 --> 00:10:25.809 A:middle L:90%
I'm going to copy this smooth list away from the

145
00:10:26.129 --> 00:10:27.409 A:middle L:90%
app screen because we don't want it to be here

146
00:10:28.740 --> 00:10:35.320 A:middle L:90%
and instead let's hope in history screen. So we

147
00:10:35.409 --> 00:10:42.440 A:middle L:90%
already have up context here and we want to do

148
00:10:42.820 --> 00:10:46.850 A:middle L:90%
up context dot mood list. So you want to

149
00:10:46.909 --> 00:10:54.169 A:middle L:90%
copy this bit? Yeah we want to map them

150
00:10:54.399 --> 00:10:56.480 A:middle L:90%
to move items so let's make sure this is imported

151
00:10:58.639 --> 00:11:03.340 A:middle L:90%
and this doesn't need to be in text. Mhm

152
00:11:06.440 --> 00:11:09.059 A:middle L:90%
. Okay so in our home screen all we're doing

153
00:11:09.399 --> 00:11:11.970 A:middle L:90%
is we're accessing the app context, passing in the

154
00:11:12.090 --> 00:11:16.210 A:middle L:90%
select and in history we're also passing like accessing up

155
00:11:16.330 --> 00:11:19.429 A:middle L:90%
context and we're just using that to access up context

156
00:11:19.950 --> 00:11:22.159 A:middle L:90%
mood list to map over it and render each of

157
00:11:22.230 --> 00:11:24.250 A:middle L:90%
the food items. So let's see if this works

158
00:11:26.240 --> 00:11:31.370 A:middle L:90%
. So choose some food items. Hey it's in

159
00:11:31.500 --> 00:11:33.889 A:middle L:90%
the correct screen. We're going to add extra celebratory

160
00:11:34.620 --> 00:11:37.820 A:middle L:90%
emoji for that. Say I'm recording my mood every

161
00:11:38.110 --> 00:11:40.230 A:middle L:90%
day for a few days and I traveled from London

162
00:11:40.710 --> 00:11:43.029 A:middle L:90%
to san Francisco and then recorded my mood in san

163
00:11:43.210 --> 00:11:45.600 A:middle L:90%
Francisco then came back to London. How would we

164
00:11:45.750 --> 00:11:49.679 A:middle L:90%
adjust the time and show BST for all of my

165
00:11:49.809 --> 00:11:51.860 A:middle L:90%
moods in P. S. Or P. C

166
00:11:52.080 --> 00:11:54.649 A:middle L:90%
. T. Anyway it's time zone. Well the

167
00:11:54.769 --> 00:11:56.779 A:middle L:90%
way the jealous give times work is that it's a

168
00:11:56.840 --> 00:12:00.220 A:middle L:90%
point in time if that makes sense. So so

169
00:12:00.570 --> 00:12:03.200 A:middle L:90%
the actual timestamp like it's it's a timestamp in that

170
00:12:03.720 --> 00:12:06.879 A:middle L:90%
. Um So currently it says you know 28th of

171
00:12:06.990 --> 00:12:12.700 A:middle L:90%
September 1258 to me. Like if I'm if I

172
00:12:13.409 --> 00:12:16.129 A:middle L:90%
took this exact date object and moved it to the

173
00:12:16.269 --> 00:12:18.149 A:middle L:90%
U. S. The date would be different.

174
00:12:19.039 --> 00:12:20.720 A:middle L:90%
So it's still a point in times you wouldn't have

175
00:12:20.980 --> 00:12:22.450 A:middle L:90%
like dates that are like all over the place.

176
00:12:23.240 --> 00:12:26.710 A:middle L:90%
Um But to actually say that oh this state was

177
00:12:26.879 --> 00:12:29.429 A:middle L:90%
recorded in a different time zone. I think you

178
00:12:29.539 --> 00:12:33.490 A:middle L:90%
need to at the actual time zone information on the

179
00:12:33.590 --> 00:12:37.950 A:middle L:90%
date. Um Yeah I think that's how I would

180
00:12:38.080 --> 00:12:40.129 A:middle L:90%
do it. I I had the actual time zone

181
00:12:40.519 --> 00:12:44.639 A:middle L:90%
information into the date because the JavaScript eight actually disappointing

182
00:12:45.169 --> 00:12:46.899 A:middle L:90%
time. So it doesn't know what time zone is

183
00:12:47.019 --> 00:12:50.220 A:middle L:90%
is. So it's telling me my date in my

184
00:12:50.389 --> 00:12:53.460 A:middle L:90%
time zone because it knows the context. Um Like

185
00:12:53.809 --> 00:12:58.129 A:middle L:90%
from my from my device time zones are hot.

186
00:12:59.830 --> 00:13:02.940 A:middle L:90%
Maybe you're recording it in UTC or something. Yeah

187
00:13:03.340 --> 00:13:05.480 A:middle L:90%
you need you need a different way of recording it

188
00:13:05.590 --> 00:13:06.769 A:middle L:90%
. You couldn't wouldn't be able to use it in

189
00:13:06.850 --> 00:13:08.679 A:middle L:90%
time stamps. So you could you could actually do

190
00:13:08.970 --> 00:13:11.649 A:middle L:90%
the date string that includes the time zone information.

191
00:13:12.940 --> 00:13:17.389 A:middle L:90%
Um But genuinely like I just stick to JavaScript dates

192
00:13:17.679 --> 00:13:20.990 A:middle L:90%
. So like if you recorded your mood at 10

193
00:13:21.289 --> 00:13:22.590 A:middle L:90%
a.m. In the U. S. And then moved

194
00:13:22.889 --> 00:13:25.970 A:middle L:90%
to the move to London then it would it would

195
00:13:26.110 --> 00:13:29.909 A:middle L:90%
say that it was recorded at five a.m. Or whatever

196
00:13:30.190 --> 00:13:33.070 A:middle L:90%
the time differences is. The app context type that

197
00:13:33.230 --> 00:13:38.340 A:middle L:90%
you just implemented the interface. Uh is the app

198
00:13:38.580 --> 00:13:42.200 A:middle L:90%
context type of interface? It's not, you could

199
00:13:42.389 --> 00:13:45.500 A:middle L:90%
use interfaces. Um So I wanted to keep this

200
00:13:45.669 --> 00:13:48.960 A:middle L:90%
as simple as possible so there is um so you

201
00:13:49.110 --> 00:13:50.990 A:middle L:90%
could use an interface for this so you can do

202
00:13:51.159 --> 00:13:55.399 A:middle L:90%
this. Um and and and that would work that's

203
00:13:55.620 --> 00:13:58.809 A:middle L:90%
valid. Um There are some differences with how interfaces

204
00:13:59.799 --> 00:14:04.480 A:middle L:90%
work versus how types work and I think types are

205
00:14:04.870 --> 00:14:07.220 A:middle L:90%
easier to work with. So I don't generally use

206
00:14:07.440 --> 00:14:09.539 A:middle L:90%
interfaces. One thing with interfaces is that you could

207
00:14:09.690 --> 00:14:13.620 A:middle L:90%
have um two interfaces with the same name. So

208
00:14:14.740 --> 00:14:18.370 A:middle L:90%
just a greeting and strength. All right. And

209
00:14:18.710 --> 00:14:22.889 A:middle L:90%
then what actually would happen is that because these are

210
00:14:23.029 --> 00:14:25.610 A:middle L:90%
two interfaces with the same name, they kind of

211
00:14:25.679 --> 00:14:29.279 A:middle L:90%
get combined like in your type, which I think

212
00:14:29.440 --> 00:14:32.870 A:middle L:90%
is quite unexpected and if you use type it's a

213
00:14:32.929 --> 00:14:35.590 A:middle L:90%
feature right? If you use object oriented programming especially

214
00:14:36.309 --> 00:14:38.379 A:middle L:90%
but if you use type you wouldn't be able to

215
00:14:38.940 --> 00:14:42.240 A:middle L:90%
Have two types with the same name. Um So

216
00:14:42.590 --> 00:14:44.610 A:middle L:90%
in general I kind of stick two types. I

217
00:14:44.690 --> 00:14:45.360 A:middle L:90%
think they're a bit more straightforward

