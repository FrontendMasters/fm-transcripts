WEBVTT

1
00:00:00.150 --> 00:00:03.030
&gt;&gt; Burke: Let's talk about
debugging browser apps.

2
00:00:03.030 --> 00:00:04.910
I love this subject.

3
00:00:04.910 --> 00:00:09.390
So I would like to propose to you that
JavaScript and web developers have

4
00:00:09.390 --> 00:00:14.500
the distinguished, what's the word?

5
00:00:14.500 --> 00:00:19.363
The distinct capability or
position of writing

6
00:00:19.363 --> 00:00:24.110
code in one place and
debugging it in another.

7
00:00:25.276 --> 00:00:29.170
Can anybody name me any other platform
where you write code in one place and

8
00:00:29.170 --> 00:00:30.810
then go somewhere else to debug it?

9
00:00:32.000 --> 00:00:32.935
I don't think it exists.

10
00:00:32.935 --> 00:00:35.980
So what I mean by that is we write
apps and then we go to Chrome and

11
00:00:35.980 --> 00:00:37.829
we open the DevTools and
we debug in there.

12
00:00:39.660 --> 00:00:42.900
The reason why we do that is because
it's a zero setup debug environment,

13
00:00:42.900 --> 00:00:44.130
totally understandable.

14
00:00:44.130 --> 00:00:45.600
But here's the thing.

15
00:00:45.600 --> 00:00:49.930
If you can get your browser
apps to debug in your editor,

16
00:00:49.930 --> 00:00:52.100
it's a way better experience.

17
00:00:52.100 --> 00:00:56.500
Would you not want to debug your code
in the same place where you write it?

18
00:00:56.500 --> 00:00:58.270
You do, absolutely.

19
00:00:58.270 --> 00:01:01.250
So what we're gonna do in this
next one is do that with Chrome.

20
00:01:02.680 --> 00:01:04.660
So let's go ahead here and

21
00:01:04.660 --> 00:01:09.530
open up a launch configuration for
our debug browser apps.

22
00:01:09.530 --> 00:01:13.392
So I'm gonna hit the drop-down list,
I'm gonna add a config.

23
00:01:15.621 --> 00:01:18.300
&gt;&gt; Burke: And I'm going to make it Chrome.

24
00:01:19.550 --> 00:01:22.280
And I'm gonna make sure that I
have the correct settings here.

25
00:01:22.280 --> 00:01:26.400
So I'm gonna just call this
one Launch Project 3, so

26
00:01:26.400 --> 00:01:28.480
I know which one I'm working with.

27
00:01:28.480 --> 00:01:31.250
And anybody see anything
else we need to change?

28
00:01:32.540 --> 00:01:33.586
Can you see it?

29
00:01:33.586 --> 00:01:35.075
Anybody getting ideas?

30
00:01:35.075 --> 00:01:36.088
&gt;&gt; Speaker 2: The ports.

31
00:01:36.088 --> 00:01:37.890
&gt;&gt; Burke: Ports, that's right,
that's not gonna work.

32
00:01:37.890 --> 00:01:38.820
What port are you running on?

33
00:01:38.820 --> 00:01:40.830
&gt;&gt; Speaker 3: 3000.
&gt;&gt; Burke: 3000, that's right.

34
00:01:40.830 --> 00:01:46.430
And then we need the webRoot,
which is workspaceFolder, which is right.

35
00:01:46.430 --> 00:01:47.780
The URL is correct.

36
00:01:47.780 --> 00:01:50.862
And really, we shouldn't have to do
anything else here for this to work.

37
00:01:50.862 --> 00:01:54.127
I'm gonna go ahead and
open up the terminal and

38
00:01:54.127 --> 00:01:56.813
add another terminal instance here.

39
00:01:56.813 --> 00:02:03.120
Now, the app that I'm running here has to
be started with MP, so here's the thing.

40
00:02:03.120 --> 00:02:07.625
VS code when it opens Chrome is gonna
open another instance of Chrome

41
00:02:07.625 --> 00:02:12.539
because it has to pass in a flag to
Chrome, that says, open in debug mode.

42
00:02:12.539 --> 00:02:14.450
By default, chrome doesn't do that.

43
00:02:14.450 --> 00:02:16.870
So what we wanna do is wanna start
this thing, so let's do that.

44
00:02:18.960 --> 00:02:20.160
Here we go.

45
00:02:20.160 --> 00:02:22.150
So now we're running,
and we wanna debug this.

46
00:02:23.520 --> 00:02:26.650
So let's go ahead and make sure
we've got the right thing selected,

47
00:02:26.650 --> 00:02:27.520
Launch Project 3.

48
00:02:27.520 --> 00:02:30.560
And I'm gonna go ahead and hit the debug.

49
00:02:30.560 --> 00:02:32.990
And you're gonna get
a second instance of Chrome.

50
00:02:32.990 --> 00:02:35.830
And so we get two instances
of Chrome open, right?

51
00:02:35.830 --> 00:02:37.059
One is debug mode.

52
00:02:37.059 --> 00:02:38.560
One is regular Chrome.

53
00:02:40.040 --> 00:02:44.010
We can close this if you get confused,
this is the one we're working with.

54
00:02:44.010 --> 00:02:49.476
And now we can add a break
point here in our app.js file.

55
00:02:49.476 --> 00:02:55.740
So we're using SignalR to retrieve
updates whenever the colors change.

56
00:02:55.740 --> 00:02:57.074
I don't know if you noticed this but

57
00:02:57.074 --> 00:03:00.320
in your app if somebody else changes
the color, your app changes too.

58
00:03:00.320 --> 00:03:03.780
And the reason that works is because
there's a service called Azure SignalR

59
00:03:03.780 --> 00:03:04.815
that I've tied into.

60
00:03:04.815 --> 00:03:08.512
And basically anytime somebody updates
the color, I send that through SignalR,

61
00:03:08.512 --> 00:03:12.049
SignalR are connected to all of you,
by virtue of you opening a connection with

62
00:03:12.049 --> 00:03:14.950
JavaScript, and
it's updating everyone at the same time.

63
00:03:14.950 --> 00:03:17.480
It's just a real time update service.

64
00:03:17.480 --> 00:03:23.670
We can intercept the message coming back
from SignalR by putting a breakpoint here.

65
00:03:23.670 --> 00:03:27.590
Notice that I tried to put a breakpoint
on the comment, and VS code did what?

66
00:03:27.590 --> 00:03:31.540
As like now, you mean this,
it moved it down one for me.

67
00:03:31.540 --> 00:03:32.540
It's trying to help you.

68
00:03:33.670 --> 00:03:35.200
Thank you VS code.

69
00:03:35.200 --> 00:03:36.770
Alright, so we've got a breakpoint here.

70
00:03:36.770 --> 00:03:41.817
So if somebody changes the color actually,
and in fact, it doesn't have to be me.

71
00:03:41.817 --> 00:03:44.974
It should be able to be anybody
that's got the app up and

72
00:03:44.974 --> 00:03:48.828
running that can make a call to
the API that changes the land color.

73
00:03:50.727 --> 00:03:52.532
&gt;&gt; Burke: I'm gonna go ahead and select.

74
00:03:57.064 --> 00:04:00.433
&gt;&gt; Burke: And
it's now broken inside of, VS code, but

75
00:04:00.433 --> 00:04:03.900
this JavaScript is running in Chrome.

76
00:04:03.900 --> 00:04:07.280
So we're now debugging our
browser app inside of VS code.

77
00:04:07.280 --> 00:04:11.250
This is all browser code here, all of it.

78
00:04:11.250 --> 00:04:14.890
Now, here's what's even more
interesting about this.

79
00:04:14.890 --> 00:04:17.080
If we come back to Chrome,
what does it say up top?

80
00:04:18.550 --> 00:04:20.210
Paused in Visual Studio Code.

81
00:04:20.210 --> 00:04:21.544
It's like they know each other.

82
00:04:21.544 --> 00:04:27.710
And check this out,
if we open the DevTools, look at that.

83
00:04:27.710 --> 00:04:28.210
Guess what?

84
00:04:29.400 --> 00:04:32.150
It's broken in the Chrome DevTools too.

85
00:04:32.150 --> 00:04:36.230
The reason why this is cool is because
you can seamlessly move between these

86
00:04:36.230 --> 00:04:36.860
two environments.

87
00:04:36.860 --> 00:04:39.080
You don't have to give up one set for
another.

88
00:04:39.080 --> 00:04:43.730
And in fact, let's just say we
added a break point here, okay?

89
00:04:43.730 --> 00:04:45.944
And then we continued on in Chrome.

90
00:04:45.944 --> 00:04:47.029
What do you think's gonna happen?

91
00:04:48.122 --> 00:04:49.306
&gt;&gt; Speaker 4: It hit the break point.

92
00:04:49.306 --> 00:04:53.376
&gt;&gt; Burke: It's gonna continue on in
VS Code and it's gonna hit a break point

93
00:04:53.376 --> 00:04:57.770
that doesn't exist in VS code, but
it exists in the Chrome DevTools.

94
00:04:57.770 --> 00:05:00.630
So you see how these two things
work together and make for

95
00:05:00.630 --> 00:05:03.950
a very powerful debugging environment.

96
00:05:03.950 --> 00:05:07.030
Debugging browser apps
is a very different,

97
00:05:07.030 --> 00:05:09.920
interesting, and
unique way to think about your JavaScript.

98
00:05:09.920 --> 00:05:16.070
We haven't had this capability so
far as Frontend web developers.

