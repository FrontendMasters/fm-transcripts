WEBVTT

1
00:00:00.000 --> 00:00:02.289
&gt;&gt; Burke Holland: So this is what our
application's gonna look like today.

2
00:00:02.289 --> 00:00:05.089
And then later on we're gonna have
a little bulb that sits down here at

3
00:00:05.089 --> 00:00:07.500
the bottom that's gonna
represent the LAMP.

4
00:00:07.500 --> 00:00:11.775
The LAMP is gonna change colors, your
bulb is gonna change colors in real time.

5
00:00:11.775 --> 00:00:16.670
We're gonna use Azure SignalR to do that,
which is a real time updating service.

6
00:00:16.670 --> 00:00:19.070
And we've got an API that's
running in Azure functions,

7
00:00:19.070 --> 00:00:21.640
which we'll actually look
at a little bit later on.

8
00:00:23.040 --> 00:00:26.470
All right, a couple more productivity
tricks, we talked about Prettier.

9
00:00:26.470 --> 00:00:32.220
I wanna open a code file here for a second
and show you something else with Prettier.

10
00:00:32.220 --> 00:00:35.744
So I'm gonna move, I'm actually
going to move into exercise-3, but

11
00:00:35.744 --> 00:00:36.950
you don't have to.

12
00:00:36.950 --> 00:00:40.012
Let's go up one, let's go to exercise-3,

13
00:00:40.012 --> 00:00:44.136
I'm gonna bring that up
&gt;&gt; Burke Holland: And

14
00:00:44.136 --> 00:00:49.376
then I wanna look at a code file
that's inside of this start file,

15
00:00:49.376 --> 00:00:52.740
so let's bring up the app.js file here.

16
00:00:52.740 --> 00:00:54.570
There we go,
I'm gonna collapse the sidebar.

17
00:00:54.570 --> 00:00:58.510
Now, we talked about Prettier,
Prettier also works in code files, and

18
00:00:58.510 --> 00:01:01.440
is most often used with
formatting JavaScript.

19
00:01:01.440 --> 00:01:06.091
So for instance, there are some
people who think that this is okay.

20
00:01:08.253 --> 00:01:10.826
&gt;&gt; Burke Holland: And
my opinion on this is that, yes,

21
00:01:10.826 --> 00:01:14.380
semicolons in JavaScript are optional.

22
00:01:14.380 --> 00:01:16.670
Kind of like brushing
your teeth is optional.

23
00:01:17.850 --> 00:01:22.140
So you can do it, but in my opinion,
you should have semicolons.

24
00:01:22.140 --> 00:01:24.760
That's a joke, if you don't wanna
use semicolons, you don't have to.

25
00:01:24.760 --> 00:01:28.920
But if you do, then you want everybody
else to also use semicolons.

26
00:01:28.920 --> 00:01:32.460
And so what Prettier will do is it will
automatically format some of these

27
00:01:32.460 --> 00:01:33.870
things for you.

28
00:01:33.870 --> 00:01:37.461
Some people like to do this, right?

29
00:01:37.461 --> 00:01:40.960
I prefer single quotes as well.

30
00:01:40.960 --> 00:01:43.390
But again, you wanna standardize
this across your application.

31
00:01:43.390 --> 00:01:45.490
And a lot of times when you're copying and

32
00:01:45.490 --> 00:01:49.909
pasting code in from Stack Overflow,
&gt;&gt; Burke Holland: As one does,

33
00:01:49.909 --> 00:01:53.280
maybe it has single quotes and
you need double quotes.

34
00:01:53.280 --> 00:01:57.460
So what we can do here is we're just
gonna format the document with safe.

35
00:01:57.460 --> 00:01:59.970
And if you'll notice,
all the semicolons came back and

36
00:01:59.970 --> 00:02:01.920
the quotes changed back to double quotes.

37
00:02:01.920 --> 00:02:05.570
That's Prettier is doing that, it's
formatting that for us behind the scenes,

38
00:02:05.570 --> 00:02:07.350
which is really nice.

39
00:02:07.350 --> 00:02:10.950
Another place that Prettier
comes in handy is that

40
00:02:10.950 --> 00:02:15.020
when you have something like a promise.

41
00:02:15.020 --> 00:02:17.860
So let's just come down here and
do a promise here.

42
00:02:17.860 --> 00:02:22.180
So let's assume instead
we're doing the fetch.

43
00:02:22.180 --> 00:02:23.810
In fact, let's grab this whole line.

44
00:02:25.060 --> 00:02:28.960
And I'm using async await but
we're gonna do a fetch instead and

45
00:02:28.960 --> 00:02:30.122
use the promise API.

46
00:02:30.122 --> 00:02:33.920
So then we have a then, and
that result goes in, and

47
00:02:33.920 --> 00:02:36.420
we're gonna take that to json.

48
00:02:36.420 --> 00:02:41.110
And then out of that we're gonna say
then again, and now we have json and

49
00:02:41.110 --> 00:02:43.800
now we can do something with the json.

50
00:02:43.800 --> 00:02:45.927
Let me go ahead and close this.

51
00:02:47.491 --> 00:02:49.782
&gt;&gt; Burke Holland: I don't know
what we're gonna do with it.

52
00:02:49.782 --> 00:02:53.770
Let's say we're gonna do something, okay.

53
00:02:53.770 --> 00:02:55.838
So now we've got a promise here.

54
00:02:55.838 --> 00:02:57.920
And I'm gonna turn off the formatting for
a second here,

55
00:02:57.920 --> 00:03:00.200
I'm gonna toggle Format on Save.

56
00:03:00.200 --> 00:03:03.030
And a lot of times what we'll do is
we'll come down and we'll say, okay,

57
00:03:03.030 --> 00:03:04.030
this goes here.

58
00:03:04.030 --> 00:03:06.610
I'm gonna indent this and this goes here.

59
00:03:06.610 --> 00:03:07.850
No, you know what, I don't like that.

60
00:03:07.850 --> 00:03:09.660
I'm gonna pull this back up.

61
00:03:09.660 --> 00:03:13.140
Formatting promises is just kind of
a pain, everybody does it differently.

62
00:03:13.140 --> 00:03:16.740
But if we change this,
if we toggle the formatting,

63
00:03:16.740 --> 00:03:21.460
toggle Format on Save,
then we can come back and let's see here.

64
00:03:21.460 --> 00:03:23.390
I've got an error somewhere.

65
00:03:23.390 --> 00:03:24.251
Where's my error?

66
00:03:26.483 --> 00:03:28.377
&gt;&gt; Burke Holland: Let's see,
let's see, let's see.

67
00:03:31.615 --> 00:03:33.070
&gt;&gt; Burke Holland: Maybe it's here,
maybe it doesn't like this.

68
00:03:34.620 --> 00:03:36.210
Can I console.log it?

69
00:03:36.210 --> 00:03:36.759
Okay.

70
00:03:38.442 --> 00:03:39.077
&gt;&gt; Burke Holland: There we go.

71
00:03:39.077 --> 00:03:42.790
And then Prettier will format this for
us, just like this.

72
00:03:42.790 --> 00:03:45.270
So it's automatically
formatting your promises.

73
00:03:45.270 --> 00:03:48.670
Just less things for
you to have to worry about and

74
00:03:48.670 --> 00:03:52.030
argue about with your co workers,
which is nice.

75
00:03:52.030 --> 00:03:55.000
And you can also run Prettier on check in.

76
00:03:55.000 --> 00:03:57.130
I'm not exactly sure how to do that.

77
00:03:57.130 --> 00:03:58.784
But you can set your source control up so

78
00:03:58.784 --> 00:04:01.710
that Prettier's run automatically
on all files that are coming in.

