WEBVTT

1
00:00:00.390 --> 00:00:02.690
&gt;&gt; Burke Holland: We are now
connected to our container.

2
00:00:02.690 --> 00:00:05.920
So everything that we need to run this
environment is already in this container.

3
00:00:06.970 --> 00:00:12.090
So if I come over here to the debug,
I can do attach to functions here.

4
00:00:13.260 --> 00:00:14.248
And this will run.

5
00:00:16.631 --> 00:00:19.212
&gt;&gt; Burke Holland: And
it's running Azure functions here.

6
00:00:19.212 --> 00:00:22.555
All of this is happening inside
of the containers not happening

7
00:00:22.555 --> 00:00:23.697
on my local machine.

8
00:00:23.697 --> 00:00:28.114
And now I can access and say,

9
00:00:28.114 --> 00:00:32.913
let's set it to color=blue.

10
00:00:35.454 --> 00:00:37.125
&gt;&gt; Burke Holland: Here we go,
and we changed it to blue.

11
00:00:37.125 --> 00:00:39.115
All this is happening
inside of the container.

12
00:00:39.115 --> 00:00:42.555
And I can add break points, and
I'm completely inside of the container.

13
00:00:42.555 --> 00:00:46.375
To prove that to you, I'm going to
create a new terminal instance, and

14
00:00:46.375 --> 00:00:47.965
you'll see, this is where I am.

15
00:00:47.965 --> 00:00:50.890
If I hit ls, these are my files.

16
00:00:50.890 --> 00:00:54.250
If I do cd,
this is the container that I'm inside of.

17
00:00:54.250 --> 00:00:57.020
So I am completely encased in a container.

18
00:00:57.020 --> 00:01:00.140
All of the dependencies that
I need are just right here.

19
00:01:02.920 --> 00:01:07.445
Now the magical thing about this is that
you can check this into GitHub, okay?

20
00:01:07.445 --> 00:01:10.662
Can take this project,
I can put it in GitHub, and

21
00:01:10.662 --> 00:01:13.060
include the devcontainer folder.

22
00:01:13.060 --> 00:01:17.580
And as long as you have docker and
the remote containers extension installed,

23
00:01:17.580 --> 00:01:20.960
when you go to open it,
it will just work on your machine.

24
00:01:20.960 --> 00:01:23.530
There is no environment configuration for
you to do.

25
00:01:24.570 --> 00:01:27.570
This should be earth shattering for
every developer.

26
00:01:27.570 --> 00:01:31.080
Can you imagine pulling down a project,
and it just works?

27
00:01:31.080 --> 00:01:33.580
There's no configuration
like we're this close.

28
00:01:33.580 --> 00:01:35.570
We are very close to that sort of reality.

29
00:01:35.570 --> 00:01:39.040
Now there are a couple of edge cases
with remote containers that we need

30
00:01:39.040 --> 00:01:40.080
to talk about.

31
00:01:40.080 --> 00:01:44.280
The first one is how do you extensions
work locally versus how they work

32
00:01:44.280 --> 00:01:46.010
in a remote container?

33
00:01:46.010 --> 00:01:52.398
The answer is they do, but
you have to install them.

34
00:01:52.398 --> 00:01:56.165
Now in our extensions over
here have new section, and

35
00:01:56.165 --> 00:01:59.030
it says devcontainer Azure Functions.

36
00:01:59.030 --> 00:02:02.370
So there's three extensions
already in here.

37
00:02:02.370 --> 00:02:03.300
Where did these come from?

38
00:02:05.050 --> 00:02:06.520
Come back to our devcontainer file.

39
00:02:08.610 --> 00:02:11.520
We've got a couple of different
things in here that we can look at.

40
00:02:11.520 --> 00:02:14.408
The first one is just the name,
the dockerFile,

41
00:02:14.408 --> 00:02:16.670
that's this dockerFile right here.

42
00:02:18.212 --> 00:02:23.858
The appPort is basically which port do you
wanna expose on this container to use,

43
00:02:23.858 --> 00:02:24.696
7071.

44
00:02:24.696 --> 00:02:27.547
And if we go down here to the bottom,
look,

45
00:02:27.547 --> 00:02:30.179
which extension do you wanna include?

46
00:02:30.179 --> 00:02:32.989
That how extension get
in sold in a container.

47
00:02:32.989 --> 00:02:36.454
So that means, as the up developer
there is an extension that you want

48
00:02:36.454 --> 00:02:38.628
developers to have inside of a container.

49
00:02:38.628 --> 00:02:41.130
Once to get there like Prettier, EsLint,

50
00:02:41.130 --> 00:02:44.406
to see sharp extension,
whatever extension you want.

51
00:02:44.406 --> 00:02:49.120
If you included in here, it's just there
when they get in into the container.

52
00:02:49.120 --> 00:02:51.150
Whole environment ready to go.

53
00:02:51.150 --> 00:02:53.040
If you want to put other
extensions int here.

54
00:02:53.040 --> 00:02:56.190
Like let's say we wanna do, I don't know.

55
00:02:56.190 --> 00:02:58.431
Let's say, we wanna do prettier.

56
00:02:58.431 --> 00:03:00.380
Prettier is not int here
we want to make sure.

57
00:03:00.380 --> 00:03:02.940
See there's a button that
says install in devcontainer?

58
00:03:02.940 --> 00:03:07.810
Just click that, and
it will install into the devcontainer.

59
00:03:07.810 --> 00:03:13.460
And then when it's done here,
it will ask us to reload the editor.

60
00:03:15.290 --> 00:03:19.360
Give it a second to install
reload required will hit that.

61
00:03:19.360 --> 00:03:22.822
It will reload and now it's gonna see it
says installing devcontainer watch how

62
00:03:22.822 --> 00:03:25.523
much faster it is this time than
it was the first time we did it.

63
00:03:28.128 --> 00:03:29.227
&gt;&gt; Burke Holland: Boom, it's up.

64
00:03:32.084 --> 00:03:35.195
&gt;&gt; Burke Holland: So if we look at the
devcontainer, we've now got a EsLint and

65
00:03:35.195 --> 00:03:36.670
Prettier.

66
00:03:36.670 --> 00:03:39.160
Now if you wanted to include
Prettier by default,

67
00:03:39.160 --> 00:03:43.090
we need to get the id of Prettier,
which is this right here.

68
00:03:43.090 --> 00:03:45.852
So we would grab this, pull it across,

69
00:03:45.852 --> 00:03:49.549
put it in our devcontainer
file down here like this.

70
00:03:52.181 --> 00:03:54.113
&gt;&gt; Burke Holland: And it would
automatically be installed whenever

71
00:03:54.113 --> 00:03:56.880
the container was loaded by whoever
was loading the remote container.

72
00:03:58.270 --> 00:04:02.850
&gt;&gt; Speaker 2: So if someone had loaded the
remote container, and then removed it from

73
00:04:02.850 --> 00:04:07.510
their system, would these three extensions
still be installed on their machine?

74
00:04:07.510 --> 00:04:08.050
&gt;&gt; Burke Holland: No.

75
00:04:08.050 --> 00:04:08.600
&gt;&gt; Speaker 2: No.
&gt;&gt; Burke Holland: No,

76
00:04:08.600 --> 00:04:11.450
they're only installed on the other side.

77
00:04:11.450 --> 00:04:15.300
So what happens is VS code sets up
a little server in the container.

78
00:04:15.300 --> 00:04:16.970
And it's just talking to that server.

79
00:04:16.970 --> 00:04:20.900
But that server has all of the environment
information, and that's how it's working.

80
00:04:20.900 --> 00:04:22.950
So extensions actually
installed on the other side,

81
00:04:22.950 --> 00:04:26.060
talking across that
little server connection.

82
00:04:26.060 --> 00:04:31.760
Yeah, it's a very creative solution
to an extremely complex problem.

83
00:04:31.760 --> 00:04:34.473
Very simple solution really,
if you think about it.

84
00:04:34.473 --> 00:04:37.140
If you can't tell I'm very
excited about remote containers.

85
00:04:37.140 --> 00:04:39.920
I published an article today on
freeCodeCamp about them because I really

86
00:04:39.920 --> 00:04:40.890
believe that,

87
00:04:40.890 --> 00:04:47.060
as developers if we all put remote
container files in our GitHub repos.

88
00:04:47.060 --> 00:04:49.377
And everybody can do that
we can standardize there,

89
00:04:49.377 --> 00:04:52.443
then that's the last time we have to
say works on my machine might be.

