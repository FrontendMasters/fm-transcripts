WEBVTT

1
00:00:00.008 --> 00:00:04.609
We're gonna go over unit testing, and
so unit testing sucks in JavaScript.

2
00:00:04.609 --> 00:00:06.907
As you know,
you have to create these folders,

3
00:00:06.907 --> 00:00:10.537
then you have to download libraries,
and then you have to knit the config.

4
00:00:10.537 --> 00:00:12.818
And if the config doesn't play well
with your build system, you cry and

5
00:00:12.818 --> 00:00:13.970
configuration for a couple hours.

6
00:00:13.970 --> 00:00:17.845
And eventually, you get a unit
testing system up and running and

7
00:00:17.845 --> 00:00:19.513
it's fantastic, right?

8
00:00:19.513 --> 00:00:22.777
Go has the exact same thing except for
its built in, right?

9
00:00:22.777 --> 00:00:24.873
So it has a testing already built in.

10
00:00:24.873 --> 00:00:26.008
The testing kind of sucks.

11
00:00:26.008 --> 00:00:30.565
We are gonna only rely on
ghost testing library today.

12
00:00:30.565 --> 00:00:34.392
Cuz I'm just gonna use the most canonical
items cuz there are assertion libraries

13
00:00:34.392 --> 00:00:36.291
forego that do make testing a lot nicer.

14
00:00:36.291 --> 00:00:39.576
So I can just like assert on
stuff as opposed to doing this.

15
00:00:39.576 --> 00:00:42.426
Where I'm like, hey,
I expected it to equal 7.

16
00:00:42.426 --> 00:00:46.184
If it doesn't have to explicitly say
the error right here, it doesn't give you

17
00:00:46.184 --> 00:00:49.568
that nice printing out and you kinda
have to individually test things.

18
00:00:49.568 --> 00:00:50.562
Which kinda sucks, right?

19
00:00:50.562 --> 00:00:53.019
If that's not exactly what you want.

20
00:00:53.019 --> 00:00:55.773
Rust of course, is significantly better.

21
00:00:55.773 --> 00:00:57.198
You test in the file.

22
00:00:57.198 --> 00:00:59.640
So you don't create a separate file for
testing.

23
00:00:59.640 --> 00:01:04.437
And you do have to be careful about
one thing with rust which is you gain

24
00:01:04.437 --> 00:01:07.920
the ability to test private interfaces,
right?

25
00:01:07.920 --> 00:01:10.451
And so that is always really
painful when you can,

26
00:01:10.451 --> 00:01:13.111
the more you test private
interfaces what happens?

27
00:01:13.111 --> 00:01:15.803
Your code changes,
your testing underneath the hood.

28
00:01:15.803 --> 00:01:17.773
And then now when you make
a change to your code,

29
00:01:17.773 --> 00:01:20.790
you have like way more stuff you need
to change because more tests break.

30
00:01:20.790 --> 00:01:26.070
So rust though, I think is one of the
better ones for testing also provides more

31
00:01:26.070 --> 00:01:31.125
ability to make what I'd say is difficult
decisions [LAUGH] with your life.

32
00:01:31.125 --> 00:01:32.268
So be careful about that.

33
00:01:32.268 --> 00:01:35.148
Rust test of code
effectively looks like this.

34
00:01:35.148 --> 00:01:37.658
This is called a procedural macro or
proc macro.

35
00:01:37.658 --> 00:01:39.333
And it does something
magical to your code.

36
00:01:39.333 --> 00:01:40.998
You don't know what it does,
doesn't matter what it does.

37
00:01:40.998 --> 00:01:42.806
And then you just say hey,
this thing is the test.

38
00:01:42.806 --> 00:01:44.029
Does something magical to your code.

39
00:01:44.029 --> 00:01:44.828
Doesn't matter.

40
00:01:44.828 --> 00:01:48.632
If you can just say assert equal, and
it will break if it doesn't equal.

41
00:01:48.632 --> 00:01:53.565
There's even a plugin or library you can
download that overrides assert equals,

42
00:01:53.565 --> 00:01:56.507
and it will do like the full
just style print out.

43
00:01:56.507 --> 00:02:00.688
If you have two objects, it'll say which
properties aren't matching each other and

44
00:02:00.688 --> 00:02:02.791
you'll get that red, green and all that.

45
00:02:02.791 --> 00:02:04.844
So very, very fantastic.

46
00:02:04.844 --> 00:02:06.884
I would again, we're not gonna
use any additional libraries.

47
00:02:06.884 --> 00:02:09.005
We're just gonna use what is available.

48
00:02:09.005 --> 00:02:13.121
TypeScript being the only one that you
can't do that with because there is no

49
00:02:13.121 --> 00:02:15.192
testing available with TypeScript.

50
00:02:15.192 --> 00:02:17.616
And you're going to forget
everything I said, right?

51
00:02:17.616 --> 00:02:18.863
I just said a whole bunch of stuff.

52
00:02:18.863 --> 00:02:20.192
We're all gonna forget it.

53
00:02:20.192 --> 00:02:22.670
So let's start building stuff, right?

