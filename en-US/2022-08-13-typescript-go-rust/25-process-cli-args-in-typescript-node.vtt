WEBVTT

1
00:00:00.016 --> 00:00:02.123
All right, so
we're breaking up the problem.

2
00:00:02.123 --> 00:00:05.841
So first let's start here, the CLI
options, let's solve this for TypeScript.

3
00:00:05.841 --> 00:00:07.874
We're gonna always start in TypeScript,

4
00:00:07.874 --> 00:00:11.431
even though some of these things are gonna
be a little different I think this

5
00:00:11.431 --> 00:00:15.101
is probably going to be the most different
part of it and I may forget one option

6
00:00:15.101 --> 00:00:19.120
which I really am hoping I do not forget
one option cuz that's always the worst.

7
00:00:19.120 --> 00:00:21.330
But this is just using a library, right?

8
00:00:21.330 --> 00:00:23.090
So we're just gonna have to do it.

9
00:00:23.090 --> 00:00:26.340
The reason why I chose this library was
this is one of the first ones I found that

10
00:00:26.340 --> 00:00:28.000
also had a pretty simple interface.

11
00:00:28.000 --> 00:00:29.390
There wasn't a lot to it.

12
00:00:29.390 --> 00:00:31.865
You could kind of just look at it and
go, okay,

13
00:00:31.865 --> 00:00:34.370
I see effectively what you got to do.

14
00:00:34.370 --> 00:00:35.260
And that's good enough for me.

15
00:00:36.290 --> 00:00:38.470
All right, let's see.

16
00:00:38.470 --> 00:00:42.510
So let's set up a project, this is
effectively how I might set up my project.

17
00:00:42.510 --> 00:00:45.320
I think I'm gonna drop the word
projector from each one of them.

18
00:00:45.320 --> 00:00:47.080
You can choose how to set it up.

19
00:00:47.080 --> 00:00:50.564
The places where we did all those practice
problems is where I'm gonna be just doing

20
00:00:50.564 --> 00:00:52.020
it all cuz I already have it set up.

21
00:00:52.020 --> 00:00:53.220
I already have cargo knitted.

22
00:00:53.220 --> 00:00:57.739
I already have Gogo knitted I already have
TypeScript installed with TS node and

23
00:00:57.739 --> 00:01:01.190
Typescript and types node so
everything seems pretty good.

24
00:01:01.190 --> 00:01:04.621
I also use Tmux by the way so I mean
if you're wondering how switching so

25
00:01:04.621 --> 00:01:07.570
fast before it's Tmux just
in case you're wondering.

26
00:01:07.570 --> 00:01:11.754
I also use Vim by the way it's pretty
fantastic, I don't know if that but

27
00:01:11.754 --> 00:01:12.932
Vim's fantastic.

28
00:01:12.932 --> 00:01:13.799
I also use Dvorak by the way.

29
00:01:13.799 --> 00:01:17.951
I just by the way do three times in
the row by the way it's just because I

30
00:01:17.951 --> 00:01:19.754
use a lot of super cool stuff.

31
00:01:19.754 --> 00:01:24.290
I also use a Kinesis 360 Advantage
prototype, okay, right here proto type,

32
00:01:24.290 --> 00:01:28.440
anywho so let's get started, so
we need to install all these things.

33
00:01:28.440 --> 00:01:32.004
So I'm just gonna grab this because I
already have my directory sort of started

34
00:01:32.004 --> 00:01:34.280
up, I don't need to do the old yarn knit.

35
00:01:34.280 --> 00:01:37.640
I don't need to do the TLS node,
I don't need to do the git init.

36
00:01:37.640 --> 00:01:40.110
But we do need to get
that Git ignore going.

37
00:01:40.110 --> 00:01:42.410
So let's do that right now.

38
00:01:42.410 --> 00:01:47.230
So I'm gonna jump back here and I'm
gonna go projects, TypeScript, awesome.

39
00:01:47.230 --> 00:01:50.020
And let's just,
I'm gonna delete out all these things.

40
00:01:50.020 --> 00:01:51.570
We just don't need those anymore.

41
00:01:51.570 --> 00:01:55.120
I'm gonna add a gitignore, and
I'm gonna put in my node modules.

42
00:01:55.120 --> 00:01:59.250
Just set up your project so
it's not totally screwed up right now.

43
00:01:59.250 --> 00:02:03.337
And then of course we need to add in
that yarn command, you can copy and

44
00:02:03.337 --> 00:02:06.320
paste it for yourself, but it's yard add.

45
00:02:06.320 --> 00:02:09.029
Command line args and
of course types command line args.

46
00:02:09.029 --> 00:02:11.520
I know there's dependency or
developer dependencies versus not,

47
00:02:11.520 --> 00:02:13.189
we're just not gonna care for this, right?

48
00:02:13.189 --> 00:02:16.360
You can set up your project nice and
pristine.

49
00:02:16.360 --> 00:02:19.789
This is more about learning a language,
not crying and configuration.

50
00:02:19.789 --> 00:02:21.430
All right there we go, awesome.

51
00:02:21.430 --> 00:02:25.550
We have command line args,
we should be able to get started now.

52
00:02:25.550 --> 00:02:28.340
So I'm gonna jump back to my favorite
editor, so let's just get started.

53
00:02:28.340 --> 00:02:30.906
So we're gonna open up
our source directory and

54
00:02:30.906 --> 00:02:33.480
we're gonna create the opts.ts, right?

55
00:02:33.480 --> 00:02:37.995
So, the only responsibility of this
one is simply to get the command line

56
00:02:37.995 --> 00:02:42.040
arguments and turn it into
an object that we can manipulate.

57
00:02:42.040 --> 00:02:43.970
I like to do things kind
of in simple steps.

58
00:02:43.970 --> 00:02:45.305
I don't know, easiest for me,

59
00:02:45.305 --> 00:02:47.980
I'm too simple to be able to
understand a bunch of things I want.

60
00:02:47.980 --> 00:02:49.620
So I just do it very, very simple.

61
00:02:49.620 --> 00:02:51.670
So first,
let's think about our type, right?

62
00:02:51.670 --> 00:02:54.360
Export type,
we'll just call this Opts, right?

63
00:02:54.360 --> 00:02:56.841
Why not?
We can keep it simple.

64
00:02:56.841 --> 00:02:59.738
And we need that nice little equal sign,
because it's how works.

65
00:02:59.738 --> 00:03:03.397
And so if you think about it,
we can call projector with nothing.

66
00:03:03.397 --> 00:03:06.106
Therefore we should
probably have a set of args

67
00:03:06.106 --> 00:03:10.002
that are some sort of string array but
they may be nothing, right?

68
00:03:10.002 --> 00:03:11.858
We may not provide anything, so

69
00:03:11.858 --> 00:03:15.038
we do want to kind of constrain
ourself in a sort of way.

70
00:03:15.038 --> 00:03:18.241
Next we're gonna want a present
working directory, right?

71
00:03:18.241 --> 00:03:22.498
A present working directory of course
is either the directory you execute,

72
00:03:22.498 --> 00:03:25.374
project or from or
a directory you give it, right?

73
00:03:25.374 --> 00:03:30.270
So you can imagine we could have a command
line flag that is just pwd, so you can say

74
00:03:30.270 --> 00:03:35.470
hey, go execute, go give me the variables
that are located in this other area.

75
00:03:35.470 --> 00:03:38.350
That way you could imagine you
could use this in CI pretty easy.

76
00:03:38.350 --> 00:03:40.322
You don't have to be in
the directory you want to execute,

77
00:03:40.322 --> 00:03:42.960
you just simply need to point
it towards the directory.

78
00:03:42.960 --> 00:03:45.220
And we'll do the same thing with config.

79
00:03:45.220 --> 00:03:47.699
We can also imagine that there's a config,

80
00:03:47.699 --> 00:03:50.849
that is your JSON config that
contains all your values.

81
00:03:52.200 --> 00:03:57.000
So either we can point to some sort of
default location that everyone's used to

82
00:03:57.000 --> 00:04:00.990
using or we can point to a specific
one that says our unusual one.

83
00:04:00.990 --> 00:04:04.340
So for purposes of just testing ourselves,
we're gonna do this but

84
00:04:04.340 --> 00:04:07.395
you can also imagine that there's
some sort of CLI out there or

85
00:04:07.395 --> 00:04:10.214
CI operation out there that
wanna do it in a specific way,

86
00:04:10.214 --> 00:04:13.615
this would give them the opportunity
to just point somewhere else.

87
00:04:13.615 --> 00:04:14.540
Awesome.

88
00:04:14.540 --> 00:04:19.385
So let's export a nice default
function and just do getOps and

89
00:04:19.385 --> 00:04:23.404
of course this thing is
gonna retun an ops, right?

90
00:04:23.404 --> 00:04:26.989
Feels good, everyone's on board,
all right so

91
00:04:26.989 --> 00:04:30.669
we need to use that whole
command line arguments.

92
00:04:30.669 --> 00:04:35.960
So I'm gonna import import CLI
from command line args, awesome.

93
00:04:35.960 --> 00:04:40.570
There we go, we have it, we can just jump
into the code itself and just look at it.

94
00:04:40.570 --> 00:04:42.370
You can see right away that it takes.

95
00:04:42.370 --> 00:04:46.660
It's just a function that takes in
some sort of options definitions.

96
00:04:46.660 --> 00:04:49.950
That thing includes the long option name,
right?

97
00:04:49.950 --> 00:04:52.294
I also by the way, I really do like
looking through the source code.

98
00:04:52.294 --> 00:04:55.828
I feel like that's often the best
documentation out there is what the code

99
00:04:55.828 --> 00:04:57.426
actually says it's going to do.

100
00:04:57.426 --> 00:04:59.610
So name is obviously required, right?

101
00:04:59.610 --> 00:05:01.640
It's not so much of an option definition.

102
00:05:01.640 --> 00:05:03.050
It's a required definition.

103
00:05:03.050 --> 00:05:05.710
We can have type if it's a string,
what is it gonna be?

104
00:05:05.710 --> 00:05:06.560
Alias?

105
00:05:06.560 --> 00:05:10.722
So this would be like the single character
if we wanted to add in a say a dash P

106
00:05:10.722 --> 00:05:15.850
option for the present working directory,
multiple, lazy multiple, default option.

107
00:05:17.840 --> 00:05:20.007
So default option is any
values unaccounted for

108
00:05:20.007 --> 00:05:22.240
by the option definition
will be set on this one.

109
00:05:22.240 --> 00:05:24.030
So we probably need that one as well,
right?

110
00:05:24.030 --> 00:05:26.447
Cuz we have projector add foo bar,
right, so

111
00:05:26.447 --> 00:05:29.680
all of those needs to be put
into a specific location.

112
00:05:29.680 --> 00:05:32.120
This sounds like our goal here.

113
00:05:32.120 --> 00:05:34.830
So I feel pretty confident at this point.

114
00:05:34.830 --> 00:05:37.833
So let's go here and go return CLI, and

115
00:05:37.833 --> 00:05:43.080
I believe it said it takes an array
of these kind of configs here.

116
00:05:43.080 --> 00:05:44.650
So let's just build them one at a time.

117
00:05:45.820 --> 00:05:47.320
First thing is name, right?

118
00:05:47.320 --> 00:05:49.390
You can see right here,
let's call the first one.

119
00:05:49.390 --> 00:05:51.420
Let's start with args, right?

120
00:05:51.420 --> 00:05:53.110
Cuz that's the one you know,
that's our first one.

121
00:05:53.110 --> 00:05:54.940
All right, args, awesome.

122
00:05:54.940 --> 00:05:57.260
This is gonna be that default value.

123
00:05:57.260 --> 00:06:02.108
Right, true all right, that's the one we
want to make sure that everything just

124
00:06:02.108 --> 00:06:05.410
falls into and
then of course was there anything else?

125
00:06:05.410 --> 00:06:07.451
Yeah, type we probably want the type.

126
00:06:07.451 --> 00:06:10.856
The type should be something
along the lines of a string array

127
00:06:10.856 --> 00:06:12.140
is that what I wanted?

128
00:06:13.310 --> 00:06:14.549
Or it's a string.

129
00:06:14.549 --> 00:06:15.653
We got multiple, true, right?

130
00:06:15.653 --> 00:06:19.609
We can try out these different
ones to see how each one does,

131
00:06:19.609 --> 00:06:23.723
we can go look up on the documentation
to see how they do that but

132
00:06:23.723 --> 00:06:26.356
each one seems to have its own options.

133
00:06:26.356 --> 00:06:29.456
I believe this is about
the right set of values,

134
00:06:29.456 --> 00:06:34.120
we may need to include a type string,
I'm not 100% sure quite yet.

135
00:06:34.120 --> 00:06:36.126
And so let's just return it as Opts,

136
00:06:36.126 --> 00:06:40.218
there we go cuz it doesn't quite define
what the object is coming out of it.

137
00:06:40.218 --> 00:06:43.257
So of course I'm gonna cheat and
type land and just say, trust me,

138
00:06:43.257 --> 00:06:44.573
I'm telling you the truth.

139
00:06:44.573 --> 00:06:46.000
I'm never lying to you.

140
00:06:46.000 --> 00:06:47.662
Come on, I'd never lie to you.

141
00:06:47.662 --> 00:06:52.100
And so let's create another one
of these and let's click this.

142
00:06:52.100 --> 00:06:54.008
Name should be config, all right?

143
00:06:54.008 --> 00:06:57.841
This is definitely the config you
want to use for your projector and

144
00:06:57.841 --> 00:07:00.390
we're definitely going to want an alias.

145
00:07:00.390 --> 00:07:01.160
C, right?

146
00:07:01.160 --> 00:07:02.830
That makes sense.

147
00:07:02.830 --> 00:07:07.220
We're gonna want to be able to just say
dash C as opposed to dash, dash config.

148
00:07:07.220 --> 00:07:11.200
On top of that we're probably gonna
want the type to be a string, right?

149
00:07:12.450 --> 00:07:16.911
I believe I should be doing this as well,
we'll find out.

150
00:07:16.911 --> 00:07:19.988
And then let's do one more,
let's do present working directory.

151
00:07:19.988 --> 00:07:24.452
So in case you want to be able to
use values from somewhere else on

152
00:07:24.452 --> 00:07:28.086
your operating system and
we can use a p right here.

153
00:07:28.086 --> 00:07:30.520
So if I've done everything correct,

154
00:07:30.520 --> 00:07:34.714
this should effectively be
everything we need for this program.

155
00:07:34.714 --> 00:07:39.206
And so let's create a index, index.ts,
everyone's favorite file and

156
00:07:39.206 --> 00:07:42.685
we should be able to import
that little option creator and

157
00:07:42.685 --> 00:07:45.735
it should just create the options for
us, right?

158
00:07:45.735 --> 00:07:51.865
So import getOpts from, what is it?

159
00:07:51.865 --> 00:07:55.840
GetOpts or opts, there we go.

160
00:07:55.840 --> 00:07:57.180
Awesome.

161
00:07:57.180 --> 00:07:59.594
And now I should be able
to go console.loggetOpts.

162
00:08:01.380 --> 00:08:06.028
So long as I've done everything
correctly in npx ts-node index,

163
00:08:06.028 --> 00:08:08.630
it should just simply print out.

164
00:08:08.630 --> 00:08:11.312
Okay, there's nothing there but
I did get this args: true so

165
00:08:11.312 --> 00:08:14.460
I probably missed up default
value versus default option.

166
00:08:14.460 --> 00:08:16.780
So let's just go back in there,
make sure I didn't do that.

167
00:08:18.210 --> 00:08:20.360
The initial value,
whoopsie daisies, right?

168
00:08:20.360 --> 00:08:24.320
I did the wrong thing,
it should have been default option.

169
00:08:24.320 --> 00:08:25.861
There you go, awesome.

170
00:08:25.861 --> 00:08:30.210
Re-executed again and its like,
hey there's nothing, you're good to go.

171
00:08:30.210 --> 00:08:35.082
I can never remember with npx do,
you have to do the double dashes,

172
00:08:35.082 --> 00:08:36.822
we can find out foo bar.

173
00:08:36.822 --> 00:08:38.690
Okay, that's not quite it.

174
00:08:38.690 --> 00:08:41.930
So you might not need to do
the double dashes, foo bar.

175
00:08:41.930 --> 00:08:43.490
Okay.
So it's saying unknown value.

176
00:08:43.490 --> 00:08:44.820
What are we getting here?

177
00:08:44.820 --> 00:08:48.443
All right, so it looks like we got
ourselves a small little bit of an error,

178
00:08:48.443 --> 00:08:51.970
which is a little bit funny, cuz I
figured that was the right way to do it.

179
00:08:51.970 --> 00:08:53.533
It might be multiple.

180
00:08:53.533 --> 00:08:56.532
Is the thing we're missing,
hey can you have multiple items?

181
00:08:56.532 --> 00:09:00.461
That's probably the thing we're missing,
doing these things from heart,

182
00:09:00.461 --> 00:09:03.194
you always forget a couple
of the options there we go.

183
00:09:03.194 --> 00:09:05.514
Foo bar, we got the options out,
fantastic.

184
00:09:05.514 --> 00:09:07.751
And so if I have nothing, what do we get?

185
00:09:07.751 --> 00:09:11.049
We get nothing, so that's exactly
kind of how we specified it.

186
00:09:11.049 --> 00:09:11.935
Can I do-- config?

187
00:09:11.935 --> 00:09:17.170
And then this would be a path, right?

188
00:09:18.580 --> 00:09:20.810
Awesome.
So we see that config is correct.

189
00:09:20.810 --> 00:09:23.110
We see that the args are correct.

190
00:09:23.110 --> 00:09:25.800
And I bet you present working
directory is the exact same thing.

191
00:09:28.780 --> 00:09:29.573
Perfect.
Okay, so

192
00:09:29.573 --> 00:09:32.890
I'd say that we've effectively
finished this little object.

193
00:09:32.890 --> 00:09:35.400
They're mostly undefined or notables.

194
00:09:35.400 --> 00:09:39.140
But some of them of course are,
they require this.

195
00:09:39.140 --> 00:09:40.810
So here we go.
I'll leave this up for a quick second.

196
00:09:40.810 --> 00:09:45.461
If you wish to follow along,
I believe if I am not mistaken,

197
00:09:45.461 --> 00:09:48.260
I also have the code on the website.

198
00:09:48.260 --> 00:09:49.702
So if you just feel like cutting and

199
00:09:49.702 --> 00:09:51.953
pasting this,
it's just a bunch of configuration.

200
00:09:51.953 --> 00:09:53.440
Are you getting a much out of it?

201
00:09:53.440 --> 00:09:54.240
That's up to you.

202
00:09:54.240 --> 00:09:55.560
Here we go.

203
00:09:55.560 --> 00:09:56.850
I'm gonna jump over for a second.

204
00:09:58.130 --> 00:09:58.810
There we go.

205
00:09:58.810 --> 00:10:00.640
Arguments type string default option.

206
00:10:00.640 --> 00:10:01.280
True, multiple, true.

207
00:10:01.280 --> 00:10:02.940
See, I eventually was gonna get it.

208
00:10:02.940 --> 00:10:04.300
And I also called the projector options.

209
00:10:04.300 --> 00:10:07.530
Like look at how ambitious
I was at one point, man.

210
00:10:07.530 --> 00:10:10.380
How far do you fall when you
start calling something ops?

211
00:10:10.380 --> 00:10:11.480
Just nothing right there.

