WEBVTT

1
00:00:00.410 --> 00:00:02.840
Who here knows what advent of code is?

2
00:00:02.840 --> 00:00:06.728
We got one, we got two, we got three,
yeah, four, yeah, five, all right, full,

3
00:00:06.728 --> 00:00:07.864
everyone here knows it.

4
00:00:07.864 --> 00:00:12.055
If you know what advent of code is,
of course, definitely type one in chat,

5
00:00:12.055 --> 00:00:13.503
it's a fantastic thing.

6
00:00:13.503 --> 00:00:15.327
The best part about it is Mr.

7
00:00:15.327 --> 00:00:20.119
Santa himself, he gave me the permission
to do this for Frontend Masters.

8
00:00:20.119 --> 00:00:21.485
I just have to cite him, right?

9
00:00:21.485 --> 00:00:23.127
Fantastic, what a nice guy.

10
00:00:23.127 --> 00:00:25.563
Thank you, Eric, I appreciate this.

11
00:00:25.563 --> 00:00:26.503
You should definitely check it out.

12
00:00:26.503 --> 00:00:29.429
I think it's one of the best ways
to start learning a new language.

13
00:00:29.429 --> 00:00:33.512
Simple problems that get progressively
more complex that allows you to learn

14
00:00:33.512 --> 00:00:35.220
a lot about their STD, right?

15
00:00:35.220 --> 00:00:37.266
Exactly what they have to offer to you,

16
00:00:37.266 --> 00:00:40.862
but you don't have to have all
the nonsense complication of actually

17
00:00:40.862 --> 00:00:44.589
building something that you get
frustrated with and all that, right?

18
00:00:44.589 --> 00:00:47.418
And if you can't solve that one problem,
you just move on to the next thing, right?

19
00:00:47.418 --> 00:00:50.603
Just fun,
it's actually how I started learning Rust.

20
00:00:50.603 --> 00:00:53.045
So we're gonna actually go
over three of these problems.

21
00:00:53.045 --> 00:00:56.861
I've picked the easiest problems just
more string processing problems.

22
00:00:56.861 --> 00:01:00.345
Cuz like I said, I feel like string
processing, great way to learn a language,

23
00:01:00.345 --> 00:01:03.685
what it has to offer, how it does things
differently than other languages.

24
00:01:03.685 --> 00:01:05.990
And so, we're gonna do that.

25
00:01:05.990 --> 00:01:10.385
So without all the fluff and fiesta,
festive fun of advent of code,

26
00:01:10.385 --> 00:01:14.472
if you read it, the elves are always
somehow messing up Santa,

27
00:01:14.472 --> 00:01:19.680
that Santa has to do all these crazy
things to get everything back in track.

28
00:01:19.680 --> 00:01:22.111
And so this one your submarine
is looking for, I believe,

29
00:01:22.111 --> 00:01:24.404
a pair of keys that the elves
actually lost overboard.

30
00:01:24.404 --> 00:01:26.078
That's the whole plot to the story.

31
00:01:26.078 --> 00:01:28.021
And so we have these three rules.

32
00:01:28.021 --> 00:01:30.908
You have a submarine that
starts at position 00.

33
00:01:30.908 --> 00:01:34.343
You parse input to direct your submarine.

34
00:01:34.343 --> 00:01:39.379
You multiply your depth by your
x progression to get the answer.

35
00:01:39.379 --> 00:01:45.167
That means, when you go forward 5,
your x moves forward by 5.

36
00:01:45.167 --> 00:01:51.670
When you go down 5, your y increases by 5,
cuz it's a submarine in depth, right?

37
00:01:51.670 --> 00:01:57.680
When you go forward 8, you get it,
up 3 decreases your depth, right?

38
00:01:57.680 --> 00:01:58.390
So it's backwards.

39
00:01:58.390 --> 00:02:00.438
It's the trick of the problem,
very, very simple, right?

40
00:02:00.438 --> 00:02:03.896
You just have to make things
go a little bit, there you go.

41
00:02:03.896 --> 00:02:06.437
I even put the little note there,
you get it?

42
00:02:06.437 --> 00:02:06.950
Awesome.

