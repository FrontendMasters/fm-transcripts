WEBVTT

1
00:00:00.060 --> 00:00:00.770
Well, hello.

2
00:00:00.770 --> 00:00:04.997
We are doing what I consider the greatest
course I have personally ever done

3
00:00:04.997 --> 00:00:06.886
today here on Frontend Masters.

4
00:00:06.886 --> 00:00:07.672
I'm pretty excited.

5
00:00:07.672 --> 00:00:11.204
We're gonna be going over three separate
languages at the exact same time,

6
00:00:11.204 --> 00:00:13.686
a management of three I
believe is what it's called,

7
00:00:13.686 --> 00:00:16.550
might be said differently
in different languages.

8
00:00:16.550 --> 00:00:19.670
And it's gonna be TypeScript, Go,
and Rust all at the same time.

9
00:00:19.670 --> 00:00:20.300
I'm pretty excited.

10
00:00:20.300 --> 00:00:21.890
I hope you guys are very excited.

11
00:00:21.890 --> 00:00:23.008
Audience, are you guys excited?

12
00:00:23.008 --> 00:00:26.040
&gt;&gt; [NOISE]
&gt;&gt; Okay, I like the excitement.

13
00:00:26.040 --> 00:00:28.160
I could feel it deep down.

14
00:00:28.160 --> 00:00:29.340
So why three languages?

15
00:00:30.630 --> 00:00:34.370
The big thing is I'm pretty sure most
people know TypeScript or JavaScript.

16
00:00:34.370 --> 00:00:35.349
This is just standard.

17
00:00:35.349 --> 00:00:37.773
And it's really hard to
start a new language,

18
00:00:37.773 --> 00:00:40.329
especially if it's far
away from what you know.

19
00:00:40.329 --> 00:00:44.640
And it's also really annoying and
there's just so many things that go wrong.

20
00:00:44.640 --> 00:00:47.762
And specifically with Rust,
it's just classically known as

21
00:00:47.762 --> 00:00:50.910
just a really annoying
language to get started with.

22
00:00:50.910 --> 00:00:55.662
And so I spent all that annoyance and
all those emotional tears and

23
00:00:55.662 --> 00:01:01.670
rage quit several times before actually
successfully becoming good at Rust.

24
00:01:01.670 --> 00:01:04.877
And I figured I could just try to make
something in which we'll give you,

25
00:01:04.877 --> 00:01:07.600
here's a problem solved
in the language you know.

26
00:01:07.600 --> 00:01:09.940
Here's a problem solved in
a language slightly different.

27
00:01:09.940 --> 00:01:12.020
Here's a problem solved, the same one,

28
00:01:12.020 --> 00:01:14.940
solved in a language you just
have very little idea about.

29
00:01:14.940 --> 00:01:17.500
It may look familiar, but
it's completely different.

30
00:01:17.500 --> 00:01:20.203
And that way you can kinda relate
these concepts in a much more

31
00:01:20.203 --> 00:01:21.430
understandable way.

32
00:01:21.430 --> 00:01:22.440
Who am I?

33
00:01:22.440 --> 00:01:23.730
My name is ThePrimeagen.

34
00:01:23.730 --> 00:01:26.986
Now, this might sound like an odd name,
but if you knew the back story,

35
00:01:26.986 --> 00:01:28.739
it's actually not that odd of a name.

36
00:01:30.516 --> 00:01:32.000
Yeah, I'm not gonna tell
you the back story.

37
00:01:32.000 --> 00:01:35.580
I'm just saying if you knew it,
it would not actually be all that strange.

38
00:01:35.580 --> 00:01:37.417
So I took these pictures
a little while ago.

39
00:01:37.417 --> 00:01:41.660
I liked this one cuz it had all threes,
but I stream on Twitch,

40
00:01:41.660 --> 00:01:44.200
I am also on the YouTubes and, yeah.

41
00:01:44.200 --> 00:01:45.078
So you can find me out there.

42
00:01:45.078 --> 00:01:47.640
And I also work at a small DVD company.

43
00:01:47.640 --> 00:01:50.878
We ship DVDs across the United States.

44
00:01:50.878 --> 00:01:53.350
I hear about this streaming thing.

45
00:01:53.350 --> 00:01:55.660
I'm pretty excited about it,
a little skeptical.

46
00:01:55.660 --> 00:01:57.210
We'll see how it goes.

47
00:01:57.210 --> 00:01:58.009
And so, yeah,

48
00:01:58.009 --> 00:02:02.650
for those that don't understand this
level of humor, I work at Netflix.

49
00:02:02.650 --> 00:02:04.680
I work on the television.

50
00:02:04.680 --> 00:02:07.456
And I neither work on the front end nor
the back end, so

51
00:02:07.456 --> 00:02:10.930
I always feel really strange because
people ask me that question.

52
00:02:10.930 --> 00:02:11.930
What do you work on?

53
00:02:11.930 --> 00:02:13.110
I don't know, app end?

54
00:02:13.110 --> 00:02:17.014
Which sounds a little different if
you're not really listening, and

55
00:02:17.014 --> 00:02:19.610
it's just always a kinda
funny thing to go on.

56
00:02:19.610 --> 00:02:21.387
So the pace of this is gonna be fast.

57
00:02:21.387 --> 00:02:23.997
We're gonna be obviously
doing a lot of languages and

58
00:02:23.997 --> 00:02:25.918
I'm gonna be moving pretty dang fast.

59
00:02:25.918 --> 00:02:29.917
And if you wish to be able to move with
such speed and swiftness as I do, well,

60
00:02:29.917 --> 00:02:33.370
you gotta learn VIM, VIM,
the greatest editor of all time.

61
00:02:33.370 --> 00:02:35.960
You may have heard of it, 1976, Bill Joy.

62
00:02:35.960 --> 00:02:39.821
Not a big deal if you haven't,
not a lot of many people have.

63
00:02:39.821 --> 00:02:43.532
And then second, developer productivity,
being able to use more of your operating

64
00:02:43.532 --> 00:02:47.440
system in a more powerful way, being
able to jump around and get things done.

65
00:02:47.440 --> 00:02:48.819
I really enjoy it.

66
00:02:48.819 --> 00:02:52.126
By the way, little fun fact, this laptop,
I haven't used it in six months.

67
00:02:52.126 --> 00:02:56.980
Jumped on, hit my Ansible scripts
that I did for this Frontend Masters.

68
00:02:56.980 --> 00:02:59.332
Everything's updated,
I'm on the latest Neo VIM, and

69
00:02:59.332 --> 00:03:01.985
proof is in the pudding of course,
look at that, look at that.

70
00:03:01.985 --> 00:03:06.578
0.8 Bleeding Edge,
we may just air out because it's so new.

71
00:03:06.578 --> 00:03:10.401
Anyways, so yeah, it was pretty fun to do.

72
00:03:10.401 --> 00:03:11.613
I am very, very excited.

73
00:03:11.613 --> 00:03:13.313
Are you guys ready to do this?

74
00:03:13.313 --> 00:03:17.734
Okay, good cuz we got some more
talking and then we're gonna do it.

75
00:03:17.734 --> 00:03:21.518
I do put this note in here, I actually
just, I wrote this before I did a YouTube

76
00:03:21.518 --> 00:03:24.820
video, but I did a YouTube
video on this just yesterday.

77
00:03:24.820 --> 00:03:28.002
Which is stop Googling as much, right?

78
00:03:28.002 --> 00:03:30.879
I think a big problem that we have,
especially as developers,

79
00:03:30.879 --> 00:03:34.190
is that all the answers are always
at our fingertips, and so therefore,

80
00:03:34.190 --> 00:03:37.120
you don't take the time to
really remember things.

81
00:03:37.120 --> 00:03:41.965
And so with this course, I may forget
the exact syntax and I may go in there and

82
00:03:41.965 --> 00:03:44.792
play a couple times before doing anything.

83
00:03:44.792 --> 00:03:48.410
You're probably not gonna see me google,
but it's not because I have everything

84
00:03:48.410 --> 00:03:50.830
perfectly memorized or
am I walking an exact roadmap.

85
00:03:50.830 --> 00:03:53.541
I don't have anything
really strongly planned for

86
00:03:53.541 --> 00:03:56.540
the exact shape of code
other than a few key points.

87
00:03:56.540 --> 00:03:59.360
But the point is that you
shouldn't have to google if you

88
00:03:59.360 --> 00:04:00.920
have enough of it in your head.

89
00:04:00.920 --> 00:04:03.580
And if you practice enough times,
you won't have to do that.

90
00:04:03.580 --> 00:04:07.058
And ultimately, I wanna see you to be
the best programmer you can possibly be.

91
00:04:07.058 --> 00:04:10.458
And if every single time you need to do
something, you're always jumping out of

92
00:04:10.458 --> 00:04:14.079
your editor doing something, you're
breaking that flow, you're slowing down.

93
00:04:14.079 --> 00:04:16.510
I wanna see people fast and
just knowing these things.

94
00:04:16.510 --> 00:04:18.876
So don't always reach for Google first.

95
00:04:18.876 --> 00:04:23.350
Just try recalling it, and if you can't
recall it then, yeah, go to Google.

96
00:04:23.350 --> 00:04:26.634
So how would crush such great
feats as we're doing today?

97
00:04:26.634 --> 00:04:28.301
Well, we're gonna be
doing a couple things.

98
00:04:28.301 --> 00:04:31.737
But one of them, the main part of this
will be building a CLI application.

99
00:04:31.737 --> 00:04:33.688
We'll be going over it all together.

100
00:04:33.688 --> 00:04:37.373
We'll be doing it kind of in tracks, so
we're gonna be building a little part of

101
00:04:37.373 --> 00:04:40.398
one of them in one language and
then building it through all of it,

102
00:04:40.398 --> 00:04:43.656
then building another small part and
then building through all of it.

103
00:04:43.656 --> 00:04:46.572
And we're gonna just do that about
four times to get all the way through

104
00:04:46.572 --> 00:04:49.500
the program, should give you enough
understanding of the language.

105
00:04:49.500 --> 00:04:54.140
I always think that a good measure of the
language is how it processes the strings.

106
00:04:54.140 --> 00:04:56.237
I feel like that's very kind
of fundamental thing we do.

107
00:04:56.237 --> 00:04:59.059
We either add, we add one,
remove one, add one to a list,

108
00:04:59.059 --> 00:05:01.780
remove something from a list,
or manipulate strings.

109
00:05:01.780 --> 00:05:04.877
That's pretty much our
job 95% of the time.

110
00:05:04.877 --> 00:05:08.254
And so for me,
this is how I judge languages, so

111
00:05:08.254 --> 00:05:10.990
I think that's a pretty good one.

112
00:05:10.990 --> 00:05:14.390
So before we begin,
I do wanna take a quick poll.

113
00:05:14.390 --> 00:05:17.539
Who here, or
at least in here at audience or

114
00:05:17.539 --> 00:05:22.788
Twitchchat/frontendmasters, type
1 if you if you agree with this,

115
00:05:22.788 --> 00:05:26.821
who came to learn Rust or
potentially get better at it?

116
00:05:26.821 --> 00:05:29.595
All right, so
we got a lot of potential Rustaceans,

117
00:05:29.595 --> 00:05:32.500
as you guys have been lovingly known as.

118
00:05:32.500 --> 00:05:33.347
This is excellent.

119
00:05:33.347 --> 00:05:35.680
Okay, I see a lot of
ones flying by as well.

120
00:05:35.680 --> 00:05:39.330
How much Rust, at least you five,
how much do you guys know?

121
00:05:41.030 --> 00:05:44.299
Okay, we've got a zero, a little bit,
little bit, lot of zeros.

122
00:05:44.299 --> 00:05:46.500
Okay, a lot of zeros, excellent.

123
00:05:46.500 --> 00:05:50.262
Who here came to learn Go?

124
00:05:50.262 --> 00:05:53.906
All right, okay, so I mean,
don't feel guilty that they did,

125
00:05:53.906 --> 00:05:55.930
you don't have to join it.

126
00:05:55.930 --> 00:05:59.200
All right, how much Go do you do for now?

127
00:06:01.100 --> 00:06:01.790
Do you know Go?

128
00:06:01.790 --> 00:06:02.590
Is that why you didn't come here?

129
00:06:02.590 --> 00:06:04.200
Okay, if I can do it,
I already know it all.

130
00:06:04.200 --> 00:06:06.142
And of course,
this is kinda the whole point.

131
00:06:06.142 --> 00:06:08.369
Who knows TypeScript?

132
00:06:08.369 --> 00:06:12.373
Yeah, okay, so this is kind of why I chose
TypeScript as the jump off language cuz I

133
00:06:12.373 --> 00:06:16.440
figured most people are gonna either
know JavaScript or TypeScript.

134
00:06:16.440 --> 00:06:18.760
Very simple language, right?

135
00:06:18.760 --> 00:06:22.960
It's actually one of my favorite
languages as far as syntax goes.

136
00:06:22.960 --> 00:06:24.520
Extremely simple to understand.

137
00:06:24.520 --> 00:06:26.010
Very simple to do stuff.

138
00:06:26.010 --> 00:06:29.200
And then plenty of fun convolution and
footguns out there.

139
00:06:29.200 --> 00:06:31.050
So you get all the best of every world,
right?

140
00:06:31.050 --> 00:06:33.720
Simple to understand and
dangerous, favorite things.

141
00:06:33.720 --> 00:06:35.210
So where did this course really come from?

142
00:06:36.610 --> 00:06:40.131
Due to the twitching,
the saying stupid things on Twitter,

143
00:06:40.131 --> 00:06:44.894
and YouTubing, I get this question almost
every single day of my life, which is,

144
00:06:44.894 --> 00:06:46.860
what should I learn next?

145
00:06:46.860 --> 00:06:48.260
How should I learn it?

146
00:06:48.260 --> 00:06:49.210
What should I build?

147
00:06:49.210 --> 00:06:50.580
Where do I start, right?

148
00:06:50.580 --> 00:06:55.031
I just get these questions constantly,
and I always answer the exact same thing,

149
00:06:55.031 --> 00:06:57.482
which is,
you should build what is useful for

150
00:06:57.482 --> 00:06:59.890
you in a language you want to learn,
right?

151
00:06:59.890 --> 00:07:02.618
For me, that's the only way
I can ever learn something.

152
00:07:02.618 --> 00:07:06.195
And it's the same reason why I didn't
start off by reading the Rust book,

153
00:07:06.195 --> 00:07:09.830
even though that's considered the best
way to learn Rust, is that for me,

154
00:07:09.830 --> 00:07:13.970
I can read all day and just nothing
really feels like it concretely sticks.

155
00:07:13.970 --> 00:07:16.096
It's been this way my whole
life when I was in college.

156
00:07:16.096 --> 00:07:22.317
I could crush out the proof for how to
do derivatives slash the integral proof,

157
00:07:22.317 --> 00:07:25.723
but I didn't understand what I was doing.

158
00:07:25.723 --> 00:07:27.278
And then after doing all the integrals,

159
00:07:27.278 --> 00:07:29.715
I was like, okay, I understand,
it now makes way more sense.

160
00:07:29.715 --> 00:07:33.284
I'm definitely a work backwards kinda
person, and I feel like at least half

161
00:07:33.284 --> 00:07:36.982
the people are that way too, where
concrete is much easier than the abstract.

162
00:07:36.982 --> 00:07:40.473
And so for me, just banging my head
against a wall, not using language

163
00:07:40.473 --> 00:07:44.734
correctly, just hacking my way through, is
one of the best learning experiences for

164
00:07:44.734 --> 00:07:46.945
myself, and then going back and learning.

165
00:07:46.945 --> 00:07:50.835
And so I say this every time, which is,
inevitably, if you work at a job, if you

166
00:07:50.835 --> 00:07:55.135
are doing things, if you're learning, if
you're in school, there's like a hundred

167
00:07:55.135 --> 00:07:59.177
things that kinda bother you about your
environment, about what you're doing.

168
00:07:59.177 --> 00:08:01.124
There's plenty of things you can build.

169
00:08:01.124 --> 00:08:02.110
There's things you want to build.

170
00:08:02.110 --> 00:08:04.798
So you just gotta pick something and
do it.

171
00:08:04.798 --> 00:08:08.950
Pick a language, it doesn't even have
to be the best language for the task.

172
00:08:08.950 --> 00:08:10.393
If the sake is learning,

173
00:08:10.393 --> 00:08:14.049
then every step of the journey
is you're achieving your goal.

174
00:08:14.049 --> 00:08:17.185
And that's kinda how I look at, I don't
even try to finish all my projects,

175
00:08:17.185 --> 00:08:20.027
because A, no developer actually
finishes their projects, but B,

176
00:08:20.027 --> 00:08:21.460
it's just that's not the point.

177
00:08:21.460 --> 00:08:22.680
The point is not the end.

178
00:08:23.710 --> 00:08:27.900
The point is actually taking each
step is an end in of itself.

179
00:08:27.900 --> 00:08:29.566
All right, and of course,
I love building CLI apps,

180
00:08:29.566 --> 00:08:30.650
I already kind of explained that.

181
00:08:30.650 --> 00:08:33.883
I think they're one of the best
ways to really understand what

182
00:08:33.883 --> 00:08:37.751
the language offers cuz you're just
pretty much working with their STD.

183
00:08:37.751 --> 00:08:39.660
And you get what you get out of it, or

184
00:08:39.660 --> 00:08:42.158
else you have to download
a bunch of packages.

185
00:08:42.158 --> 00:08:45.250
So you can kind of gauge what the language
does and does not do for you.

186
00:08:46.360 --> 00:08:49.008
And here's the roadmap,
it's mostly correct roadmap.

187
00:08:49.008 --> 00:08:50.700
We may deviate from time to time, but

188
00:08:50.700 --> 00:08:53.660
effectively, we're gonna start
with just getting familiar.

189
00:08:53.660 --> 00:08:57.980
I am gonna go over a little bit about
the languages, just in general.

190
00:08:57.980 --> 00:09:01.529
So you have maybe the right words to use,
some basic understandings.

191
00:09:01.529 --> 00:09:04.450
And then we're gonna hop in and
just start doing things.

192
00:09:04.450 --> 00:09:08.762
And so part 2, we're gonna actually just
do some simple string parsing problems,

193
00:09:08.762 --> 00:09:11.000
and we're gonna go through three of them.

194
00:09:11.000 --> 00:09:13.774
And we're gonna see how they feel,
and hopefully,

195
00:09:13.774 --> 00:09:16.559
I can use some more fun
features from the languages.

196
00:09:16.559 --> 00:09:19.012
Part 3,
we'll just start building the CLI app.

197
00:09:19.012 --> 00:09:20.849
Part 4,
we're gonna build the core of the program.

198
00:09:20.849 --> 00:09:25.537
Part 5 and 6 were accidentally removed and
not updated here, and part 7,

199
00:09:25.537 --> 00:09:30.260
of course, the conclusion,
which I think is the best part.

200
00:09:30.260 --> 00:09:32.200
I do have one regret, though.

201
00:09:32.200 --> 00:09:36.253
I know I've just been talking nonstop and
fairly fast, but

202
00:09:36.253 --> 00:09:41.131
I do have one regret, which is,
I really wanted to add in concurrency.

203
00:09:41.131 --> 00:09:42.150
It's awesome.

204
00:09:42.150 --> 00:09:46.942
It really makes these other languages way
outshine TypeScript because TypeScript

205
00:09:46.942 --> 00:09:49.050
does have concurrency, yes.

206
00:09:49.050 --> 00:09:51.580
It can execute, but
it has no parallelism, right?

207
00:09:51.580 --> 00:09:54.772
Unless if you consider VA to reading
things from a socket underneath

208
00:09:54.772 --> 00:09:56.792
the hood while your program is executing.

209
00:09:56.792 --> 00:10:00.000
The language itself, JavaScript,
does not run in parallel.

210
00:10:00.000 --> 00:10:05.135
And so you don't get a lot of these really
awesome benefits of say, knowing something

211
00:10:05.135 --> 00:10:10.690
like Go, where it's extremely easy to get
parallelism right, and it's really fast.

212
00:10:10.690 --> 00:10:13.596
And so if you're at a startup and
you're like, okay,

213
00:10:13.596 --> 00:10:17.891
we have tens of thousands of users, we can
either spawn a bunch of Node machines or

214
00:10:17.891 --> 00:10:22.316
just have one simple Go thing that's just
running at pretty much nothing even using

215
00:10:22.316 --> 00:10:26.190
the machine, cuz it's just fast and
it's so easy to get right.

216
00:10:26.190 --> 00:10:31.884
And so I really wanted to work that in,
but Go's complexity with concurrency and

217
00:10:31.884 --> 00:10:37.510
parallelism is really small, very easy
to grasp, but Rust's is really hard.

218
00:10:37.510 --> 00:10:42.270
It has all of the right words that
you're familiar with from JavaScript,

219
00:10:42.270 --> 00:10:45.820
async await, but
it's just way harder to get right.

220
00:10:45.820 --> 00:10:49.534
And I've built many a web server at this
point in Rust, and I've gotten it wrong

221
00:10:49.534 --> 00:10:53.560
almost universally every time, but
now I actually feel like I get it right.

222
00:10:53.560 --> 00:10:55.290
But people still tell me
that I've gotten it wrong.

223
00:10:56.990 --> 00:10:58.410
But it's much, much harder.

224
00:10:58.410 --> 00:11:03.171
And so I didn't wanna spend the whole
time explaining async await as opposed to

225
00:11:03.171 --> 00:11:05.510
just building something.

226
00:11:05.510 --> 00:11:09.360
Second thing, we're gonna pretty
much never touch lifetimes.

227
00:11:09.360 --> 00:11:11.824
For the most part,
if you're not writing really,

228
00:11:11.824 --> 00:11:16.080
really performance-driven code in Rust,
you don't have to touch lifetimes.

229
00:11:16.080 --> 00:11:18.538
There are lifetimes happening,
they are implicit,

230
00:11:18.538 --> 00:11:21.030
you just don't know
that they're happening.

231
00:11:21.030 --> 00:11:24.979
And we'll kind of talk about it, but
we're not gonna be building things that

232
00:11:24.979 --> 00:11:27.800
are the single most efficient
form of what they can be.

233
00:11:27.800 --> 00:11:30.974
There will be a little bit of copying here
and there, and I'll explain it as we come

234
00:11:30.974 --> 00:11:34.066
to it like, hey, I'm copying for the sake
of not having to go through all this.

235
00:11:34.066 --> 00:11:38.398
Cuz I think lifetimes are just something
you build when you're building the best

236
00:11:38.398 --> 00:11:39.744
form of an application.

237
00:11:39.744 --> 00:11:42.554
It's not something you do if you're
just kind of learning the language.

238
00:11:42.554 --> 00:11:45.307
And so that's how I feel.

239
00:11:45.307 --> 00:11:49.220
And lastly, I am gonna try to
write these mostly canonical,

240
00:11:49.220 --> 00:11:53.100
meaning people use this term canonical or
idiomatic.

241
00:11:53.100 --> 00:11:55.946
I'm gonna try to write it in
the most sensible fashion for

242
00:11:55.946 --> 00:11:57.400
each of the languages.

243
00:11:57.400 --> 00:11:59.542
But I'm also gonna compete with myself and

244
00:11:59.542 --> 00:12:03.124
try to write it such that each language
has an easier one to one jumping.

245
00:12:03.124 --> 00:12:06.918
So not everything is gonna
be as idiomatic Go or

246
00:12:06.918 --> 00:12:11.605
canonical Rust or
whatever the term, Rustaceous Rust.

247
00:12:11.605 --> 00:12:15.416
It's just it's not gonna be able to do
that every single time cuz I do want it to

248
00:12:15.416 --> 00:12:19.600
make an easy translation, and I think
ultimately, it's better to learn that way.

249
00:12:19.600 --> 00:12:23.224
Because if you're always bogged down with
doing things the most canonical way in

250
00:12:23.224 --> 00:12:26.157
some language, you often just
find yourself always googling and

251
00:12:26.157 --> 00:12:27.721
looking at other people's code.

252
00:12:27.721 --> 00:12:30.244
And canonical doesn't always mean
the same thing to everybody.

253
00:12:30.244 --> 00:12:34.080
Like right now in JavaScript,
our class is canonical or not, right?

254
00:12:34.080 --> 00:12:37.139
Well, half the community hates classes,
the other half,

255
00:12:37.139 --> 00:12:38.740
things are just fine, right?

256
00:12:38.740 --> 00:12:42.210
So it's like,
what makes something the de facto way?

257
00:12:42.210 --> 00:12:43.680
It's hard.

258
00:12:43.680 --> 00:12:44.860
So it's time.

259
00:12:44.860 --> 00:12:46.571
It's time to get ready to program.

260
00:12:46.571 --> 00:12:47.630
I hope you're excited.

261
00:12:48.660 --> 00:12:49.480
But hold on.

262
00:12:49.480 --> 00:12:50.721
Do you have Go installed?

263
00:12:50.721 --> 00:12:51.844
Do you have Rust installed?

264
00:12:51.844 --> 00:12:56.060
I did link these right here, so you can
even just type it straight off the screen.

265
00:12:56.060 --> 00:12:59.960
I figured we could take a quick moment,
let everyone see this,

266
00:12:59.960 --> 00:13:04.785
make sure it's installed,
go.dev/doc/install, very, very simple.

267
00:13:04.785 --> 00:13:08.300
1.18 has generics, very good,
we won't use generics.

268
00:13:08.300 --> 00:13:12.547
The syntax kinda sucks, but it does have
generics, and it is very, very good.

269
00:13:12.547 --> 00:13:15.966
Second, Rust, you just do a nice little
curling of a script that exists on

270
00:13:15.966 --> 00:13:18.061
the Internet and
just run it on your machine,

271
00:13:18.061 --> 00:13:21.940
because you should always do that, find
scripts on the Internet and just run them.

272
00:13:21.940 --> 00:13:24.110
Cuz nothing bad has ever
happened from that.

273
00:13:25.440 --> 00:13:28.390
And if you want,
you can get Rust nightly as well.

274
00:13:28.390 --> 00:13:31.150
Rust nightly has some pretty
cool features, but obviously,

275
00:13:31.150 --> 00:13:32.433
it's a little less stable.

276
00:13:32.433 --> 00:13:35.620
I actually think that the best part
of Rust is still coming, right?

277
00:13:35.620 --> 00:13:37.571
It's still a pretty
fast evolving language.

278
00:13:37.571 --> 00:13:40.343
A good example is that in nightly,
there is FS exists,

279
00:13:40.343 --> 00:13:43.430
at least last time I checked
was like a week ago.

280
00:13:43.430 --> 00:13:47.538
And in stable, you have to ask for
the stats, and if it does not exist,

281
00:13:47.538 --> 00:13:50.200
then you don't have the file exist, right?

282
00:13:50.200 --> 00:13:52.802
It's still kind of evolving and
becoming easier to use.

283
00:13:52.802 --> 00:13:54.051
Use whatever works for you.

284
00:13:54.051 --> 00:13:57.391
The thing is, whenever you use
these installation managers,

285
00:13:57.391 --> 00:13:59.920
just make sure that
the version is high enough.

286
00:13:59.920 --> 00:14:03.769
I don't know what Go comes down.

287
00:14:03.769 --> 00:14:06.991
I think with app, Go is at 113 or
something like that.

288
00:14:06.991 --> 00:14:08.460
It's pretty far behind.

289
00:14:08.460 --> 00:14:10.717
So I just tend to just
install it from that.

290
00:14:10.717 --> 00:14:13.410
Obviously, for
those that join me a lot in Twitch,

291
00:14:13.410 --> 00:14:15.989
this is me trying to be
a little bit more subdued.

292
00:14:15.989 --> 00:14:17.930
We're doing educational content.

293
00:14:17.930 --> 00:14:20.096
I'm not screaming and making Flappy Birds,

294
00:14:20.096 --> 00:14:22.836
which we all know the name that
you guys chose on Twitter.

295
00:14:22.836 --> 00:14:26.250
I won't even say it here, it's disgusting.

