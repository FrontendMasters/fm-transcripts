WEBVTT

1
00:00:00.290 --> 00:00:05.700
&gt;&gt; Jem Young: So, let's make SSH Key back
in your favorite tool, the command line.

2
00:00:05.700 --> 00:00:09.676
Go ahead, in that cd into the .ssh
directory, is to save your time in

3
00:00:09.676 --> 00:00:15.665
the future so you don't move your key.
&gt;&gt; Speaker 2: Before

4
00:00:15.665 --> 00:00:18.784
you jump in that next command, you might
wanna check and see if they already

5
00:00:18.784 --> 00:00:22.400
have a key that they're using.
&gt;&gt; Jem Young: That's true.

6
00:00:22.400 --> 00:00:24.510
Actually, no, we'll make a new key.

7
00:00:24.510 --> 00:00:26.750
Yeah, I don't wanna confuse anybody.

8
00:00:26.750 --> 00:00:27.770
I have a lot of keys, too, and

9
00:00:27.770 --> 00:00:30.830
I just, I'm not gonna make a new
one cuz I have a lot of keys.

10
00:00:30.830 --> 00:00:33.675
If you already have an SH key,
go ahead and feel free to use that.

11
00:00:33.675 --> 00:00:36.730
&gt;&gt; Speaker 2: [INAUDIBLE]

12
00:00:36.730 --> 00:00:38.138
if they're already using it some place

13
00:00:38.138 --> 00:00:39.820
&gt;&gt; Jem Young: Yeah, that's fine.

14
00:00:39.820 --> 00:00:43.630
Again, cuz that's the great thing about
public key authentication is I can reuse

15
00:00:43.630 --> 00:00:48.880
my public key infinitely cuz I'm the only
one that has the key to unlock that.

16
00:00:48.880 --> 00:00:50.160
So, it's a-
&gt;&gt; Speaker 2: What I'm saying is if they

17
00:00:50.160 --> 00:00:53.270
already have a public and
private pair, and

18
00:00:53.270 --> 00:00:56.990
they share that public key,
say, for example, to GitHub.

19
00:00:58.080 --> 00:00:59.290
Okay, and they overwrite it.

20
00:01:00.430 --> 00:01:03.180
They'll have to submit
the new key to GitHub.

21
00:01:03.180 --> 00:01:04.290
&gt;&gt; Jem Young: Yeah, definitely

22
00:01:04.290 --> 00:01:05.914
do not overwrite your current keys.

23
00:01:05.914 --> 00:01:07.376
[LAUGH]
&gt;&gt; Speaker 2: That's what I'm saying.

24
00:01:07.376 --> 00:01:08.712
&gt;&gt; Jem Young: I got you, all right, so

25
00:01:08.712 --> 00:01:10.250
I'm gonna go through this.

26
00:01:10.250 --> 00:01:11.556
I'll make a new key myself.

27
00:01:11.556 --> 00:01:18.354
[LAUGH] Just kick everyone
out of the server.

28
00:01:18.354 --> 00:01:22.481
All right.
&gt;&gt; Jem Young: So, I'm gonna see,

29
00:01:22.481 --> 00:01:24.380
this is a shortcut.
&gt;&gt; Speaker 3: Just to be clear,

30
00:01:24.380 --> 00:01:27.570
you want them to make this on there own
computer, not on that server, right?

31
00:01:27.570 --> 00:01:28.290
&gt;&gt; Jem Young: Yes, I am sorry,

32
00:01:28.290 --> 00:01:31.020
you can exit out of that server
just type exit to get out

33
00:01:33.220 --> 00:01:34.518
back on your home computer.

34
00:01:34.518 --> 00:01:41.000
So cd ~ is short for
just your own home directory.

35
00:01:41.000 --> 00:01:46.294
So, if I see here,
I'm back in my own home directory.

36
00:01:46.294 --> 00:01:50.100
cd ~/.ssh is where your ssh keys live, and

37
00:01:50.100 --> 00:01:54.615
I have a lot of SSH keys.
&gt;&gt; Jem Young: I'm just

38
00:01:54.615 --> 00:01:57.711
gonna clean up some of those, some file.

39
00:02:02.903 --> 00:02:04.486
&gt;&gt; [MUSIC]

40
00:02:11.294 --> 00:02:12.866
&gt;&gt; Jem Young: Yeah I should not
play around with this directory

41
00:02:16.195 --> 00:02:18.590
&gt;&gt; Jem Young: Cool, all right.

42
00:02:18.590 --> 00:02:23.681
So, I'm going to make a key,
ssh-keygem-t, rsa is

43
00:02:23.681 --> 00:02:31.098
just an encryption strategy that we're
going to use Rsa is just Pretty secure,

44
00:02:31.098 --> 00:02:35.968
and the t is just saying
where you wanna use this for,

45
00:02:35.968 --> 00:02:40.449
the type encryption,
for generating the key.

46
00:02:40.449 --> 00:02:46.610
And,
&gt;&gt; Jem Young: Give the file name.

47
00:02:46.610 --> 00:02:47.700
Do not use the default.

48
00:02:47.700 --> 00:02:49.000
If you just hit enter, you're probably.

49
00:02:49.000 --> 00:02:50.670
If you already have a key,
you're gonna overwrite that.

50
00:02:50.670 --> 00:02:56.600
Do not overwrite your existing
SSH key This is really important.

51
00:02:56.600 --> 00:02:58.820
You will get yourself
into a world of hurt.

52
00:02:58.820 --> 00:03:00.760
So I'm going to call this one, my key.

53
00:03:00.760 --> 00:03:04.210
That's it.
You can call it whatever you want.

54
00:03:04.210 --> 00:03:06.290
Just make sure it's memorable,
but I'll just call it my key for

55
00:03:06.290 --> 00:03:07.000
the sake of the example.

56
00:03:07.000 --> 00:03:09.410
My key already exists.

57
00:03:09.410 --> 00:03:11.500
Good.
I don't want to overwrite that.

58
00:03:11.500 --> 00:03:13.700
So I'm going to call this My key two.

59
00:03:18.480 --> 00:03:19.850
I'm going to put no
passphrase cause I'm lazy,

60
00:03:19.850 --> 00:03:21.010
but you should put a passphrase on it.

61
00:03:21.010 --> 00:03:23.750
All right.

62
00:03:23.750 --> 00:03:24.750
That's it.

63
00:03:24.750 --> 00:03:30.922
So, move this up a bit.
&gt;&gt; Jem Young: Now I

64
00:03:30.922 --> 00:03:32.980
have a public private key.

65
00:03:32.980 --> 00:03:38.760
The public key is .pub the private
key doesn't have a file type on it.

66
00:03:38.760 --> 00:03:44.493
So if I wanna look at that public key,
or actually look at public key first,

67
00:03:44.493 --> 00:03:49.278
so I'll say my_key2.pub
&gt;&gt; Jem Young: This is what

68
00:03:49.278 --> 00:03:50.330
a public key looks like.

69
00:03:52.690 --> 00:03:55.650
As you can see it's extremely long.

70
00:03:56.740 --> 00:04:02.010
It's I don't want to say unbreakable but
it's very, very difficult to hack this.

71
00:04:02.010 --> 00:04:04.910
The order of magnitude you need to
break into this with a public key

72
00:04:04.910 --> 00:04:06.220
is pretty high.

73
00:04:06.220 --> 00:04:07.790
This is just a public key.

74
00:04:07.790 --> 00:04:11.380
I'm a show you my private key which you
general don't ever wanna do to anybody.

75
00:04:11.380 --> 00:04:15.160
But since this is just for
this test server.

76
00:04:15.160 --> 00:04:16.900
This is a private key.

77
00:04:16.900 --> 00:04:21.003
As we see it substantially larger.

78
00:04:21.003 --> 00:04:26.730
We're talking decades of computing
time to break a private key.

79
00:04:26.730 --> 00:04:31.100
As we can tell this is much more
security than password 1,2,3, 4, 5.

80
00:04:31.100 --> 00:04:33.050
This is why we use public private key.

81
00:04:34.110 --> 00:04:41.480
So is everybody with me so far?
&gt;&gt; Jem Young: Okay good we all have a key.

82
00:04:41.480 --> 00:04:44.380
So everybody has a public and private key?

83
00:04:44.380 --> 00:04:45.540
We're all good.

84
00:04:45.540 --> 00:04:47.740
All right.
Because we are going to use this later.

85
00:04:47.740 --> 00:04:54.500
And you should have some
sort of random marks.

86
00:04:55.880 --> 00:04:58.410
Yes, do not lose your private key.

87
00:04:58.410 --> 00:05:02.960
If you lose your private key,
you have zero ways of getting it back, and

88
00:05:02.960 --> 00:05:04.400
getting back to that server.

89
00:05:04.400 --> 00:05:06.830
Especially, we're going to
disable login with a password.

90
00:05:06.830 --> 00:05:09.560
That's because we all
learned it's very insecure.

91
00:05:09.560 --> 00:05:12.585
So if you lose your private
key you are screwed.

92
00:05:12.585 --> 00:05:14.170
[LAUGH].

93
00:05:14.170 --> 00:05:16.690
We're in that realm now
theres no handholding,

94
00:05:16.690 --> 00:05:19.500
if you do something you break your server,
you loose your key,

95
00:05:19.500 --> 00:05:22.610
you change your permissions incorrectly,
your locked out.

96
00:05:22.610 --> 00:05:26.340
No one can help you unfortunately,
that's, you know,

97
00:05:26.340 --> 00:05:28.920
we're real engineers now this is serious.

98
00:05:28.920 --> 00:05:31.872
Yes.
&gt;&gt; Speaker 3: Question on tips on keeping

99
00:05:31.872 --> 00:05:34.230
your SSH keys organized.

100
00:05:34.230 --> 00:05:35.670
Like, they have many keys for
many services.

101
00:05:35.670 --> 00:05:37.440
What's the best way to do that?

102
00:05:37.440 --> 00:05:40.910
They're asking, should you have one
key for all the services or should you

103
00:05:40.910 --> 00:05:43.740
have a new key for each service?
&gt;&gt; Jem Young: That's a great

104
00:05:43.740 --> 00:05:44.750
question, Derek.

105
00:05:46.062 --> 00:05:49.451
A lot of +1s on that.

106
00:05:49.451 --> 00:05:53.190
I tend to use the same key depending
on the level of security that I

107
00:05:53.190 --> 00:05:53.760
want for my service.

108
00:05:53.760 --> 00:05:59.680
So for my GitHub accounts,
I use one SSH key for most things.

109
00:05:59.680 --> 00:06:03.030
But for Netflix services, things
like that, I use a separate SSH key,

110
00:06:03.030 --> 00:06:06.580
just in case I lose my private key or
somehow it gets compromised.

111
00:06:06.580 --> 00:06:09.910
Someone gets a copy of it,
all my things aren't insecure.

112
00:06:09.910 --> 00:06:12.540
But inherently,
the great thing about the public private

113
00:06:12.540 --> 00:06:16.380
key authentication system is that,
you can reuse it over and over again.

114
00:06:16.380 --> 00:06:19.270
And you can be fairly
confident that it's secure.

115
00:06:19.270 --> 00:06:22.050
But, do it to your own level of paranoia.

116
00:06:22.050 --> 00:06:26.030
If you're extremely paranoid, make
a different key for every single site or

117
00:06:26.030 --> 00:06:28.300
every single system we need to login to.

118
00:06:28.300 --> 00:06:32.060
I like to give my naming scheme for
what it is, so for date hub key,

119
00:06:32.060 --> 00:06:34.904
it's probably called jem_github, for

120
00:06:34.904 --> 00:06:39.690
my jemian.com login to that server
it's probably called jemain.com.

121
00:06:39.690 --> 00:06:43.410
Just giving a name, so something that
you remember, that the default system of

122
00:06:43.410 --> 00:06:47.490
ID underscore RSA, do not use that
system is not helpful at all.

123
00:06:47.490 --> 00:06:51.690
Because once you make that key you have
zero context on what that key was for and

124
00:06:51.690 --> 00:06:55.780
when you're trying to log into a server
and you have like 50 keys it's not helpful

125
00:06:55.780 --> 00:07:02.630
at all to try each one individually.
&gt;&gt; Speaker 3: Follow up question was about

126
00:07:02.630 --> 00:07:06.150
the config file in the SSH directory.
&gt;&gt; Jem Young: Config file.

127
00:07:06.150 --> 00:07:07.110
&gt;&gt; Speaker 3: They see

128
00:07:07.110 --> 00:07:11.210
a config file what do you do with it?
&gt;&gt; Jem Young: Just leave that alone.

129
00:07:11.210 --> 00:07:15.750
It's, we won't go into that today.
&gt;&gt; Speaker 2: So, just to offer,

130
00:07:15.750 --> 00:07:20.790
my way of doing it is I make
an SSH key pair for every machine.

131
00:07:20.790 --> 00:07:25.950
And then just keep one for every machine.
&gt;&gt; Jem Young: That's smart.

132
00:07:25.950 --> 00:07:28.780
A lot of people that
carry around a USB stick

133
00:07:28.780 --> 00:07:31.550
with all their private keys on it,
which is pretty useful too

134
00:07:31.550 --> 00:07:34.270
unless somebody steals your-
&gt;&gt; Speaker 2: Actually let me amend that

135
00:07:34.270 --> 00:07:37.910
every user on the machine.
&gt;&gt; Speaker 2: Right, so

136
00:07:37.910 --> 00:07:42.752
if I have two users on each machine,
each of them has there own SSH que.

137
00:07:42.752 --> 00:07:44.650
&gt;&gt; Jem Young: Okay, that's smart too.

138
00:07:44.650 --> 00:07:47.470
Yeah.
&gt;&gt; Speaker 2: LIke I used virtual machines

139
00:07:47.470 --> 00:07:52.170
a lot, so each virtual machine, like
vagrant, you know, each of those has their

140
00:07:52.170 --> 00:07:57.580
own SSH key.
&gt;&gt; Jem Young: Okay, that's useful too.

141
00:07:57.580 --> 00:08:01.550
Again, do it to your level of
comfortability with security.

142
00:08:01.550 --> 00:08:06.620
I, in general don't have much to steal,
not that it would stop anybody.

143
00:08:06.620 --> 00:08:09.320
Some people are just jerks.

144
00:08:09.320 --> 00:08:11.310
They'll break into things
just cause they can.

145
00:08:11.310 --> 00:08:15.540
But in general,
you can have probably one SSH key and

146
00:08:15.540 --> 00:08:19.000
use it for multiple services and
probably be pretty secure.

147
00:08:19.000 --> 00:08:22.400
But, again, be vigilant about
not sharing your private key and

148
00:08:22.400 --> 00:08:26.230
not losing your private key,
so always have backups.

149
00:08:26.230 --> 00:08:27.160
Use Time Machine.

150
00:08:27.160 --> 00:08:30.320
Use some sort of Cloud
backup that you want.

151
00:08:30.320 --> 00:08:32.980
And you should usually secure
your private key with a password.

152
00:08:32.980 --> 00:08:38.080
Just in case someone gets it, they can't
just easily break into your server.

