WEBVTT

1
00:00:00.340 --> 00:00:01.800
&gt;&gt; Jem: So, now,
our app is up and running.

2
00:00:03.630 --> 00:00:05.540
It's putting all the output into logs.

3
00:00:05.540 --> 00:00:09.605
So if there's any errors,
it's gonna show up in our log, so

4
00:00:09.605 --> 00:00:11.535
we can diagnose this later.

5
00:00:11.535 --> 00:00:16.038
So let's learn how to tail a log file.

6
00:00:16.038 --> 00:00:19.667
I think of all the tools, other than
VIM and just basic command lines,

7
00:00:19.667 --> 00:00:23.930
how to tail a log file is essentially how
to see what's going on in your server.

8
00:00:23.930 --> 00:00:27.415
We learned top, we learned h top,
which is just a pretty version of top.

9
00:00:27.415 --> 00:00:30.130
And that tells you kind of a high
level about what's going on.

10
00:00:30.130 --> 00:00:33.570
But if you wanna know what's going on
in a process, let's tail a log file.

11
00:00:33.570 --> 00:00:36.212
So, which one did I decide?

12
00:00:36.212 --> 00:00:37.380
Our auth log, perfect.

13
00:00:38.380 --> 00:00:42.782
So on your server,
go ahead and sudo tail -f,

14
00:00:44.574 --> 00:00:48.323
&gt;&gt; Jem: /var/log/auth.log.

15
00:00:48.323 --> 00:00:51.378
So auth.log is just people logging in and
out of your server,

16
00:00:51.378 --> 00:00:53.100
it's kind of what's happening.

17
00:00:54.410 --> 00:00:57.420
Tail looks at the bottom half of your log.

18
00:00:57.420 --> 00:01:01.100
There's also head, head will look
at the top part of a file and tail.

19
00:01:01.100 --> 00:01:04.030
Yeah, just like there's less,
there's also more.

20
00:01:04.030 --> 00:01:06.634
There's a lot of ways to do things
in UNIX cuz everybody's opinionated,

21
00:01:06.634 --> 00:01:09.581
they're like no, I wanna look at the top
of a file, no, I wanna look at the bottom.

22
00:01:09.581 --> 00:01:12.997
But the -f command means follow, which
means it won't just print the last ten

23
00:01:12.997 --> 00:01:15.656
lines, it's gonna follow
everything that's happening.

24
00:01:15.656 --> 00:01:18.369
So I'm gonna go ahead and do that now.

25
00:01:18.369 --> 00:01:23.848
So sudo tail -f /var,

26
00:01:27.609 --> 00:01:32.002
&gt;&gt; Jem: /log/auth.log.

27
00:01:32.002 --> 00:01:34.452
So now I see a real time stream
of what's happening on my server.

28
00:01:34.452 --> 00:01:38.296
So I'm just gonna jump over to
a different command prompt.

29
00:01:48.020 --> 00:01:51.043
&gt;&gt; Jem: Well,
&gt;&gt; Jem: I don't think I can fit both of

30
00:01:51.043 --> 00:01:52.084
these on the screen at the same time.

31
00:01:52.084 --> 00:01:56.450
But since this is my auth log,
I'm gonna go ahead.

32
00:01:56.450 --> 00:01:59.176
Let me highlight this to
show that the tail's moving.

33
00:01:59.176 --> 00:02:02.838
I'm gonna ssh in the server, and it will
show up in my auth log in real time.

34
00:02:02.838 --> 00:02:07.727
So ssh -i ~/.

35
00:02:13.864 --> 00:02:15.645
&gt;&gt; Jem: What's my key name, my_key2.

36
00:02:22.223 --> 00:02:25.668
&gt;&gt; Jem: I forgot what my IP address was,
look at my IP address.

37
00:02:40.349 --> 00:02:45.379
&gt;&gt; Jem: Cool, yeah, we couldn't see it,
but the log file didn't move.

38
00:02:45.379 --> 00:02:48.350
This is how you diagnose
problems on your server.

39
00:02:48.350 --> 00:02:51.793
So if you have a SQL database,
you have a problem with your Node app,

40
00:02:51.793 --> 00:02:52.890
server's not up and running.

41
00:02:53.970 --> 00:02:57.680
Tailing a log file will tell you
exactly what's going on in real time.

42
00:02:57.680 --> 00:03:01.060
It tells you precisely
what the output is and

43
00:03:01.060 --> 00:03:05.500
is one of the most useful tools
you'll ever learn tailing a log file.

44
00:03:05.500 --> 00:03:08.640
Know it, love it, none of this is sexy,
there's no cool UI,

45
00:03:08.640 --> 00:03:10.740
this is just as old school as it gets.

46
00:03:10.740 --> 00:03:12.740
But this is how you solve
problems on servers.

47
00:03:13.830 --> 00:03:17.045
Look, failed password for root,
someone is trying to root into my server.

48
00:03:17.045 --> 00:03:20.706
There's nothing even on there,
they don't know that.

49
00:03:20.706 --> 00:03:22.025
&gt;&gt; Speaker 2: Yeah, so
if you're seeing those pop up,

50
00:03:22.025 --> 00:03:23.310
that's what someone's trying to do?

51
00:03:23.310 --> 00:03:24.490
&gt;&gt; Jem: Yes.
&gt;&gt; Speaker 2: So I'm just watching them,

52
00:03:24.490 --> 00:03:25.280
they just keep coming.

53
00:03:25.280 --> 00:03:28.404
&gt;&gt; Jem: Yep, that's why it's
always fun to watch the auth log.

54
00:03:28.404 --> 00:03:35.754
Yeah, some people are literally right
now trying to break into the server.

55
00:03:35.754 --> 00:03:36.557
Good luck to them though.

56
00:03:39.743 --> 00:03:42.496
&gt;&gt; Jem: And quit, oops, [INAUDIBLE].

57
00:03:42.496 --> 00:03:45.527
&gt;&gt; Speaker 2: Quick question though,
so had we not set up any

58
00:03:45.527 --> 00:03:50.520
of this ssh stuff prior to, they could
have gotten into our server, right?

59
00:03:51.680 --> 00:03:53.940
&gt;&gt; Jem: No, by default,
Digital Ocean really holds your hand.

60
00:03:53.940 --> 00:03:58.180
So let's say, yeah, if you didn't put
ssh key, they'll email you a very long

61
00:03:58.180 --> 00:04:02.020
password for your root password, rather
than, they don't just leave it open.

62
00:04:02.020 --> 00:04:05.320
Cuz they know that the minute you bring up
a server, someone's gonna try to break in.

63
00:04:05.320 --> 00:04:06.010
&gt;&gt; Speaker 2: Well, that was the thing,

64
00:04:06.010 --> 00:04:08.680
yeah, if they're getting in 30
seconds after you create the thing,

65
00:04:08.680 --> 00:04:12.110
how do you even protect against
that if they're that quick?

66
00:04:12.110 --> 00:04:14.140
&gt;&gt; Jem: Exactly,
the smart way to do it would,

67
00:04:14.140 --> 00:04:17.680
you would do this all on a local area
network not exposed to the Internet yet.

68
00:04:17.680 --> 00:04:20.160
Then when it's all set up,
you actually plug it into the Internet.

69
00:04:20.160 --> 00:04:22.710
But Digital Ocean, again,
is extremely user friendly,

70
00:04:22.710 --> 00:04:25.840
where they'll mail you the password
if you don't put an ssh key.

71
00:04:25.840 --> 00:04:28.330
But we learned today ssh is just so

72
00:04:28.330 --> 00:04:33.180
much easier [LAUGH] and much more secure
than password based authentication.

73
00:04:34.430 --> 00:04:37.000
Owen asks,
how do they find our servers so quickly?

74
00:04:37.000 --> 00:04:40.800
Well, it's just, these are the scripts
running across entire IP ranges.

75
00:04:40.800 --> 00:04:45.080
So, people, I hate to say hackers,
that's such a generic word,

76
00:04:46.480 --> 00:04:50.650
bad people, they know that Digital Ocean
owns certain blocks of IPs.

77
00:04:50.650 --> 00:04:55.417
So let's say they own 155.155.whatever,
they own that entire block.

78
00:04:55.417 --> 00:04:58.236
All they have to do is just keep scanning
that over and over and over again,

79
00:04:58.236 --> 00:05:01.460
until they get a hit on a port,
which means that server's up and running.

80
00:05:01.460 --> 00:05:03.720
And at that point, they try to break in.

81
00:05:03.720 --> 00:05:05.050
It's not an actual person doing it.

82
00:05:05.050 --> 00:05:07.550
These are all just like
scripts most of the time.

83
00:05:07.550 --> 00:05:10.000
Sometimes it's a real person,
but usually, it's just automated.

84
00:05:12.020 --> 00:05:15.840
And Francois G asks,
how can we keep those logs under control?

85
00:05:15.840 --> 00:05:19.470
Well, thank goodness Ubuntu is great.

86
00:05:19.470 --> 00:05:22.470
Ubuntu will automatically clean
up your log files for you,

87
00:05:22.470 --> 00:05:25.730
and it's gonna tarball them and gzip them.

88
00:05:25.730 --> 00:05:28.290
Actually, I think it just tarballs them,
and it's gonna archive them, so

89
00:05:28.290 --> 00:05:31.520
it compresses them and
then stores them for you.

90
00:05:31.520 --> 00:05:33.670
Eventually, probably over months and
months and months,

91
00:05:33.670 --> 00:05:36.690
you'll have to clean up your log files,
but because they're compressed and

92
00:05:36.690 --> 00:05:37.820
that's all done automatically,

93
00:05:37.820 --> 00:05:40.040
you really don't have to worry about
keeping track of your logs too much.

94
00:05:40.040 --> 00:05:44.040
It's a very nice feature of
using a well-built Unix system,

95
00:05:44.040 --> 00:05:45.220
but great question.

