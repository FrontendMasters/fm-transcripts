WEBVTT

1
00:00:00.400 --> 00:00:02.430
&gt;&gt; Jem: What did we learn
from security Terry?

2
00:00:02.430 --> 00:00:04.070
We learned we don't wanna use passwords.

3
00:00:04.070 --> 00:00:07.480
And right now we can currently log
into our server with just a password.

4
00:00:07.480 --> 00:00:08.380
And that's insecure.

5
00:00:08.380 --> 00:00:12.085
I know most of you use a short
password because well,

6
00:00:12.085 --> 00:00:13.260
we're humans that's what we do.

7
00:00:13.260 --> 00:00:14.760
I use a short password.

8
00:00:14.760 --> 00:00:17.914
So we wanna use an SSH key
instead of a password.

9
00:00:19.420 --> 00:00:20.920
What's the best way to do this?

10
00:00:20.920 --> 00:00:24.250
We can actually do all of that
without even being in the server.

11
00:00:24.250 --> 00:00:26.850
We can do it through SSH commands,
and that's what this does.

12
00:00:28.020 --> 00:00:29.995
Don't worry.
I'm gonna break this out into tiny,

13
00:00:29.995 --> 00:00:31.960
bite-sized chunks.

14
00:00:31.960 --> 00:00:35.980
And this is fairly advanced command line,

15
00:00:35.980 --> 00:00:40.776
so by the end of this,
you'll be a master at command line.

16
00:00:40.776 --> 00:00:44.840
So first off,

17
00:00:44.840 --> 00:00:49.960
this command, what it does is I'm printing
out the contents of my public key,

18
00:00:49.960 --> 00:00:52.711
cuz I want to put the public
key onto the server.

19
00:00:54.500 --> 00:00:57.370
And then, I wanna SSH into my server.

20
00:00:57.370 --> 00:01:01.479
So, just to go back to this example,
first part,

21
00:01:01.479 --> 00:01:05.890
cat public key,
pipe that into the SSH command.

22
00:01:08.460 --> 00:01:10.440
And don't worry,
I have followup at the end.

23
00:01:10.440 --> 00:01:12.640
I just want everybody to
understand what we're doing here.

24
00:01:13.790 --> 00:01:16.820
Because, again, I don't want you to do
anything that you don't understand.

25
00:01:16.820 --> 00:01:17.440
Never do that.

26
00:01:17.440 --> 00:01:19.010
Someone's like, hey,
type this to your server.

27
00:01:19.010 --> 00:01:21.637
You're like, okay, ha-ha, never do that.

28
00:01:21.637 --> 00:01:22.610
Always want to know what you're doing.

29
00:01:24.150 --> 00:01:27.310
So next, on that server,
we're gonna make a new directory.

30
00:01:28.570 --> 00:01:31.570
The -p command in the command line says,

31
00:01:31.570 --> 00:01:33.360
make that directory if it
doesn't already exist.

32
00:01:34.430 --> 00:01:39.880
So, we're gonna make a .ssh directory,
where we want our SSH keys to live.

33
00:01:39.880 --> 00:01:43.443
Just like on your home computer,
SSH keys live in .ssh for

34
00:01:43.443 --> 00:01:47.283
that user.
&gt;&gt; Jem: And then,

35
00:01:47.283 --> 00:01:52.847
we're gonna pipe the output from
SSH into the authorized_keys

36
00:01:52.847 --> 00:01:56.979
file.
&gt;&gt; Jem: I know,

37
00:01:56.979 --> 00:01:58.620
people look a little confused.

38
00:02:01.010 --> 00:02:04.150
There is a longer way to do this,
but this is definitely the shortest,

39
00:02:04.150 --> 00:02:08.210
most efficient way of adding
an SSH key for a user.

40
00:02:08.210 --> 00:02:09.840
So, let's go and do that.

41
00:02:09.840 --> 00:02:13.800
I'm gonna pull up my own.

42
00:02:13.800 --> 00:02:15.250
Try not to copy paste it.

43
00:02:15.250 --> 00:02:18.363
Again, you learn better
by typing it by hand.

44
00:02:18.363 --> 00:02:22.312
So, exit out of my server.

45
00:02:22.312 --> 00:02:24.944
I'm currently in my SSH directory,
you don't have to be but

46
00:02:24.944 --> 00:02:26.138
it's just faster to do it.

47
00:02:26.138 --> 00:02:32.490
So I want a cat,
&gt;&gt; Jem: My public key,

48
00:02:32.490 --> 00:02:37.513
so that's my_key2.pub.

49
00:02:37.513 --> 00:02:38.447
So if we just run this now,

50
00:02:38.447 --> 00:02:44.534
it's just gonna print out my key.
&gt;&gt; Jem: So in UNIX, the pipe command

51
00:02:44.534 --> 00:02:49.920
takes the output of the last command and
it sends it to the next command.

52
00:02:49.920 --> 00:02:54.792
Think of it like a function passing
an argument through another function.

53
00:02:54.792 --> 00:02:58.641
So we wanna SSH into our directory.

54
00:02:58.641 --> 00:03:05.063
So, ssh jem@, what was my server IP.

55
00:03:05.063 --> 00:03:14.810
Just going to copy this.
&gt;&gt; Jem: Well with me so far.

56
00:03:14.810 --> 00:03:18.860
So we're just piping the command
out our public key into SSH,

57
00:03:18.860 --> 00:03:19.520
doesn't do anything yet.

58
00:03:20.520 --> 00:03:24.916
So then in quotes, "mkdir -p,

59
00:03:24.916 --> 00:03:30.257
the- means it's your home directory.

60
00:03:30.257 --> 00:03:34.880
So this is gonna be slash user slash Jem,
the home directory for me.

61
00:03:34.880 --> 00:03:39.821
So, ~.ssh,
&gt;&gt; Jem: With me so

62
00:03:39.821 --> 00:03:43.247
far?
&gt;&gt; Jem: Then, actually I have to look

63
00:03:43.247 --> 00:03:47.261
at it [LAUGH] cuz it's so long.
&gt;&gt; Jem: Right,

64
00:03:47.261 --> 00:03:52.950
double ampersand,
just means do this, and do this.

65
00:03:52.950 --> 00:03:53.930
That's what double ampersand means.

66
00:03:56.070 --> 00:03:57.870
And we're just going to cat the file.

67
00:03:57.870 --> 00:03:59.650
Gotta remember to do this.

68
00:03:59.650 --> 00:04:05.471
Into,
&gt;&gt; Jem: SSH.

69
00:04:05.471 --> 00:04:10.786
Authorized keys, close it,

70
00:04:10.786 --> 00:04:16.108
and just gonna test this out.

71
00:04:16.108 --> 00:04:19.199
Enter my password.

72
00:04:19.199 --> 00:04:21.280
Don't worry I'm gonna jump back.

73
00:04:21.280 --> 00:04:23.860
I just wanna make sure I actually
typed everything correctly.

74
00:04:23.860 --> 00:04:29.725
So now I should be able to SSH into

75
00:04:29.725 --> 00:04:37.560
that server using my_ key2 jem@ there.

76
00:04:37.560 --> 00:04:39.452
It's gonna ask for a password.

77
00:04:39.452 --> 00:04:42.218
Cool.

78
00:04:42.218 --> 00:04:44.568
Okay so, I'm gonna rewind.

79
00:04:56.712 --> 00:04:59.030
&gt;&gt; Jem: So this is the command I just ran.

80
00:04:59.030 --> 00:05:03.170
So what I did was I made a directory,
or first I printed out my public key,

81
00:05:03.170 --> 00:05:06.240
I made a directory on my server, and

82
00:05:06.240 --> 00:05:10.860
I just piped the output of my public
key into a file called authorized_keys.

83
00:05:10.860 --> 00:05:15.211
Authorized_keys is where
the server holds your public SSH

84
00:05:15.211 --> 00:05:21.115
keys.
&gt;&gt; Jem: Again,

85
00:05:21.115 --> 00:05:24.890
the slides are available,
jemyoung.com/fefs.

86
00:05:24.890 --> 00:05:27.670
Cuz this is pretty advanced stuff.

87
00:05:28.740 --> 00:05:30.780
So I'm gonna show you
the longer way of doing this.

88
00:05:30.780 --> 00:05:32.980
This is definitely the cooler way.

89
00:05:32.980 --> 00:05:39.500
The much longer way of doing this is,
so we're in our serve, we have a user.

90
00:05:41.510 --> 00:05:46.143
I'm just gonna make a new user, just for,

91
00:05:46.143 --> 00:05:49.653
I think jem3.
&gt;&gt; Speaker 2: Yeah, I think you missed

92
00:05:49.653 --> 00:05:53.238
part of the command in that, that you did.
&gt;&gt; Jem: Which?

93
00:05:53.238 --> 00:05:55.242
&gt;&gt; Speaker 2: It should be cat and

94
00:05:55.242 --> 00:05:57.500
then angle bracket.

95
00:05:58.930 --> 00:06:02.540
That's why you got the null file.
&gt;&gt; Jem: Crap, you're right.

96
00:06:04.290 --> 00:06:07.060
Good call.
And that's why it asked me for a password.

97
00:06:07.060 --> 00:06:08.440
See, I'm not perfect.

98
00:06:08.440 --> 00:06:09.608
Thank you for catching that.

99
00:06:09.608 --> 00:06:12.257
So I'm just going to run that again.

100
00:06:12.257 --> 00:06:15.540
I forget to pipe that into this file.

101
00:06:16.610 --> 00:06:25.080
So, bracket bracket.
&gt;&gt; Jem: Okay, that worked.

102
00:06:26.860 --> 00:06:30.700
And now when I login,
it should not ask me for a password again.

103
00:06:30.700 --> 00:06:31.200
There we go.

104
00:06:32.610 --> 00:06:35.880
So you know it worked correctly when
you log in as that user using that

105
00:06:35.880 --> 00:06:38.110
private key and it doesn't ask you for
a password this time around.

106
00:06:39.640 --> 00:06:46.320
And if you look you can, whoops, ls -la,
you should see a .ssh directory now.

107
00:06:46.320 --> 00:06:49.400
That wasn't there before and
you just made it.

108
00:06:49.400 --> 00:06:52.820
Okay, but that was advanced, and
I don't want anybody to feel too lost.

109
00:06:52.820 --> 00:06:55.730
So we're gonna do this the longer,
boring way.

110
00:06:55.730 --> 00:06:59.830
So I'm gonna add a new user, adduser Jem3,

111
00:06:59.830 --> 00:07:03.498
I need to be sudo so
what do we learn sudo bang bang.

112
00:07:03.498 --> 00:07:06.886
And password.

113
00:07:15.344 --> 00:07:16.129
&gt;&gt; Jem: So I'm in a new user,

114
00:07:16.129 --> 00:07:20.814
I'm gonna switch to that user now
&gt;&gt; Jem: So su,

115
00:07:20.814 --> 00:07:25.246
whatever that user is.
&gt;&gt; Jem: And

116
00:07:25.246 --> 00:07:26.845
right now there's nothing here.

117
00:07:26.845 --> 00:07:33.698
So let's go into the, whoops, there we go.

118
00:07:33.698 --> 00:07:37.320
Cd ~ it switched back into
your home directory for

119
00:07:37.320 --> 00:07:38.395
the current user that you're on.

120
00:07:38.395 --> 00:07:42.002
So pwd should be home/jem3.

121
00:07:42.002 --> 00:07:46.790
That tells me that I'm in the jem, or
whatever user you just made, directory.

122
00:07:46.790 --> 00:07:50.070
So now ls -la, there's no .ssh directory.

123
00:07:50.070 --> 00:07:54.311
So, let's mkdir, make directory,

124
00:07:54.311 --> 00:07:58.861
.ssh
&gt;&gt; Jem: Now when we ls.la,

125
00:07:58.861 --> 00:08:02.800
ls is just list files,
la means list all the files.

126
00:08:04.560 --> 00:08:09.270
And if something starts with dot, it's a
hidden file by default, so we have to -la.

127
00:08:09.270 --> 00:08:14.860
So let's go ahead and
cd into that .ssh directory.

128
00:08:14.860 --> 00:08:18.470
And we're gonna make a file
called authorized_keys.

129
00:08:18.470 --> 00:08:23.526
So, there's different ways to make a file,
I can say, I can vi authorized_keys.

130
00:08:34.790 --> 00:08:35.882
&gt;&gt; Jem: And I'm not gonna put anything in

131
00:08:35.882 --> 00:08:36.430
here right now.

132
00:08:38.160 --> 00:08:42.750
The easier way to do this is just you
can say touch and that makes a file.

133
00:08:42.750 --> 00:08:45.170
So if I say touch foo,
it makes a file called foo.

134
00:08:46.700 --> 00:08:48.410
That's an easier way to
just make an empty file.

135
00:08:48.410 --> 00:08:50.990
But let's go back to vi.

136
00:08:50.990 --> 00:08:52.300
Remember our old friend, vi?

137
00:08:52.300 --> 00:08:58.500
Just gonna vi into authorized_keys.

138
00:08:58.500 --> 00:09:04.410
Now, we need to copy our
public key into this file.

139
00:09:04.410 --> 00:09:05.270
Now how do we do that?

140
00:09:06.390 --> 00:09:08.673
Well, because we are cheating,
we are just gonna copy,

141
00:09:08.673 --> 00:09:10.110
paste directly from our computer.

142
00:09:10.110 --> 00:09:11.450
In the real world you can't do that,

143
00:09:11.450 --> 00:09:13.340
that is why we have to use
the advance command line.

144
00:09:13.340 --> 00:09:17.507
But, this is a beginner class,
so let's slow it down.

145
00:09:17.507 --> 00:09:24.843
So I am just gonna go ahead and
open a new tab on my terminal.

146
00:09:24.843 --> 00:09:30.734
Cd into my .ssg directory,

147
00:09:30.734 --> 00:09:36.138
and cat my_key2.pub.

148
00:09:36.138 --> 00:09:37.670
And I'm just gonna copy and paste this in.

149
00:09:39.040 --> 00:09:41.810
This is totally cheating because in
the real world you can't do this

150
00:09:41.810 --> 00:09:42.980
in a data center.

151
00:09:42.980 --> 00:09:49.664
You can't just copy and paste things, but.
&gt;&gt; Jem: Thanks,

152
00:09:49.664 --> 00:09:53.883
Mark for pasting that into the chatroom.

153
00:09:53.883 --> 00:09:56.197
But now, we can just insert, and

154
00:09:56.197 --> 00:10:00.343
we can paste this public key
into our authorized keys file.

155
00:10:00.343 --> 00:10:02.710
Good, good.

156
00:10:02.710 --> 00:10:09.530
And what do we do, we write quit.
&gt;&gt; Jem: And that's it.

157
00:10:09.530 --> 00:10:16.595
So doing this command, exit again
&gt;&gt; Jem: So

158
00:10:16.595 --> 00:10:21.195
this command is equivalent of what we just
did, except if you can tell doing it by

159
00:10:21.195 --> 00:10:24.709
command line is significantly
faster if you're fast at it.

160
00:10:24.709 --> 00:10:29.709
And, I don't know is just easier to
reason about, but you can always do it

161
00:10:29.709 --> 00:10:35.870
the long way which we just did, either way
will work and we're coming close to lunch.

162
00:10:35.870 --> 00:10:39.466
I don't wanna go too far ahead cuz I know
some people are still struggling a bit.

163
00:10:39.466 --> 00:10:43.550
So as long as you can
SSH into your server.

164
00:10:43.550 --> 00:10:48.420
So again the way to test that is,
ssh the private key that you just used,

165
00:10:54.821 --> 00:10:56.993
&gt;&gt; Jem: The user that I just made, so

166
00:10:56.993 --> 00:11:06.146
Jem@.
&gt;&gt; Jem: 247.250.

167
00:11:08.752 --> 00:11:09.870
&gt;&gt; Jem: Cool.

168
00:11:09.870 --> 00:11:11.831
And if you did things correctly,
it will not ask you for

169
00:11:11.831 --> 00:11:12.900
a password this time around.

170
00:11:14.070 --> 00:11:16.780
If you didn't do things correctly,
it's gonna ask you for a password.

171
00:11:16.780 --> 00:11:20.962
So this is very, very, very important

172
00:11:20.962 --> 00:11:25.916
make sure you can log in
with only your SSH key.

173
00:11:25.916 --> 00:11:31.853
Because in a minute, actually after lunch
we'll disable login with a password.

174
00:11:31.853 --> 00:11:34.534
Which means if you didn't
set your SSH keys correctly,

175
00:11:34.534 --> 00:11:36.370
you will be locked out of your server.

176
00:11:36.370 --> 00:11:38.070
This is really important.

177
00:11:38.070 --> 00:11:41.970
You will be locked out your own server
if you didn't set this up correctly.

178
00:11:41.970 --> 00:11:44.840
So, verify that you can login using

179
00:11:44.840 --> 00:11:47.650
SSH key only.
&gt;&gt; Speaker 2: It's not necessarily

180
00:11:47.650 --> 00:11:50.830
locked out forever,
cuz Digital will let you reset it.

181
00:11:50.830 --> 00:11:51.367
&gt;&gt; Jem: Fair, yeah.

182
00:11:51.367 --> 00:11:54.480
[LAUGH] In the real world,
running your own server,

183
00:11:54.480 --> 00:11:56.676
you could not go to help and reset it.

184
00:11:56.676 --> 00:12:01.130
But is 100% right, they will help you out.
&gt;&gt; Speaker 3: So wait,

185
00:12:01.130 --> 00:12:05.020
we should be able to just type our
username at our IP address and it will

186
00:12:05.020 --> 00:12:07.338
just connect without typing in password?
&gt;&gt; Jem: Exactly,

187
00:12:07.338 --> 00:12:10.891
you should be able to use your key file,
so -i is to use that private key, and you

188
00:12:10.891 --> 00:12:13.469
should be able to log into your server.
&gt;&gt; Speaker 3: Okay,

189
00:12:13.469 --> 00:12:14.677
hold on.
&gt;&gt; Jem: Yeah, so

190
00:12:14.677 --> 00:12:17.759
make sure you can do something like
this with your private key and login and

191
00:12:17.759 --> 00:12:20.056
it shouldn't ask you for
a password this time around.

192
00:12:29.731 --> 00:12:32.200
&gt;&gt; Jem: This is really, really important.

193
00:12:32.200 --> 00:12:34.340
Otherwise, yeah if you get
locked out of your server,

194
00:12:34.340 --> 00:12:37.890
you've gotta start all the way
back at the beginning.

195
00:12:37.890 --> 00:12:40.424
Or contact Digital Ocean which
will probably take a while, so.

196
00:12:52.678 --> 00:12:54.530
&gt;&gt; Speaker 3: So should we still have to

197
00:12:54.530 --> 00:12:57.210
type in a password for the key?
&gt;&gt; Jem: No,

198
00:12:57.210 --> 00:13:00.315
if you're typing a password,
you did not do things correctly.

199
00:13:00.315 --> 00:13:04.990
[LAUGH] Okay,
since we have a few minutes until lunch,

200
00:13:04.990 --> 00:13:06.807
I'm going to go over it again.

201
00:13:06.807 --> 00:13:09.790
And this is nobody's fault.

202
00:13:09.790 --> 00:13:11.000
This is pretty advanced stuff.

203
00:13:11.000 --> 00:13:16.650
So this command,
I'm just gonna go break it down.

204
00:13:18.570 --> 00:13:20.050
Cat, your public key.

205
00:13:20.050 --> 00:13:21.120
Cat's just printing out the public key.

206
00:13:21.120 --> 00:13:22.480
Pipe it into your SSH.

207
00:13:23.650 --> 00:13:28.192
This is the user you wanna log into,
let me pull this up a little bit.

208
00:13:34.596 --> 00:13:36.939
&gt;&gt; Jem: So we're printing our public kay,

209
00:13:36.939 --> 00:13:42.530
we're logged into the server,
in quotes we're making a directory.

210
00:13:42.530 --> 00:13:45.518
The -p command just makes it
if it doesn't already exist.

211
00:13:45.518 --> 00:13:48.990
We're making, ~/.ssh.

212
00:13:48.990 --> 00:13:52.091
So in your home directory,
we're making a .ssh

213
00:13:52.091 --> 00:13:58.842
directory.
&gt;&gt; Jem: With me so

214
00:13:58.842 --> 00:14:01.810
far?
&gt;&gt; Speaker 3: I ran the command just

215
00:14:01.810 --> 00:14:05.190
fine but it still asks me for
a password for

216
00:14:05.190 --> 00:14:07.600
my key, not for my user code.
&gt;&gt; Speaker 2: Did

217
00:14:07.600 --> 00:14:10.680
you type in a pass phrase?
&gt;&gt; Speaker 3: For my key?

218
00:14:10.680 --> 00:14:11.810
&gt;&gt; Speaker 2: For your key.

219
00:14:11.810 --> 00:14:14.145
Was I not supposed to?
&gt;&gt; Jem: You can if you want,

220
00:14:14.145 --> 00:14:15.750
I don't cuz I'm a bad-
&gt;&gt; Speaker 2: Because of

221
00:14:15.750 --> 00:14:17.795
this.
&gt;&gt; Jem: Yes.

222
00:14:17.795 --> 00:14:18.520
&gt;&gt; Speaker 3: Okay, so

223
00:14:18.520 --> 00:14:21.790
it must be working fine then.
&gt;&gt; Jem: Yes.

224
00:14:21.790 --> 00:14:24.615
If it asked for a key for
your server then you did [CROSSTALK].

225
00:14:24.615 --> 00:14:25.764
&gt;&gt; Speaker 3: Yeah.

226
00:14:25.764 --> 00:14:26.278
&gt;&gt; Speaker 2: I'm totally sorry,

227
00:14:26.278 --> 00:14:27.673
that's my bad.
&gt;&gt; Speaker 3: That's okay,

228
00:14:27.673 --> 00:14:31.190
cuz it asked me for a password for the key
itself, and I didn't realize I should of

229
00:14:31.190 --> 00:14:32.250
just not set it up.
&gt;&gt; Speaker 2: Yeah,

230
00:14:32.250 --> 00:14:35.120
the word is pass phrase.
&gt;&gt; Speaker 3: Yeah, sorry, sorry,

231
00:14:35.120 --> 00:14:39.913
I didn't see that.
&gt;&gt; Jem: Yeah, but it's confusing for sure.

232
00:14:39.913 --> 00:14:44.024
&gt;&gt; Speaker 2: Couple questions here.

233
00:14:44.024 --> 00:14:47.500
The cat command, should we be running
that from the local computer?

234
00:14:47.500 --> 00:14:49.110
&gt;&gt; Jem: Yes, this is all on your

235
00:14:49.110 --> 00:14:51.510
local machine, not your server.
&gt;&gt; Speaker 2: Cuz we're copying our

236
00:14:51.510 --> 00:14:54.290
local keys up to the remote server.
&gt;&gt; Jem: Exactly, exactly.

237
00:14:54.290 --> 00:14:54.810
&gt;&gt; Speaker 2: Next question,

238
00:14:54.810 --> 00:14:56.900
if I change the file name on my SSH key,

239
00:14:56.900 --> 00:15:01.415
will that effect anything like I have
named foo_key, if I rename that to

240
00:15:01.415 --> 00:15:06.540
DigitalOcean_key will that be fine?
&gt;&gt; Jem: That's fine, just as long as a,

241
00:15:06.540 --> 00:15:11.580
you remember it, b, you change your public
and private key to the same name, so

242
00:15:11.580 --> 00:15:13.600
you know that they sync up together.
&gt;&gt; Speaker 2: Okay and

243
00:15:13.600 --> 00:15:17.430
then, would there be any difference if
we used the .pub key when we log in?

244
00:15:17.430 --> 00:15:19.750
&gt;&gt; Jem: Yes, you can't use your public key

245
00:15:19.750 --> 00:15:20.520
to login.

246
00:15:20.520 --> 00:15:23.990
It's again,
private public private encryption.

247
00:15:23.990 --> 00:15:25.610
The public key lives on the server,

248
00:15:25.610 --> 00:15:28.210
the private key only lives
on your local machine.

249
00:15:29.230 --> 00:15:32.158
Public key locks everything,
only your private key can unlock it.

250
00:15:42.648 --> 00:15:45.038
&gt;&gt; Jem: And remember the test it -i,

251
00:15:45.038 --> 00:15:48.580
your key, your username @ your server IP.

252
00:15:50.090 --> 00:15:52.320
And it shouldn't ask you for a password.

253
00:15:52.320 --> 00:15:55.420
There might be a passphrase on your
SSH key, but it shouldn't ask you for

254
00:15:55.420 --> 00:15:56.860
a server password if you
did things correctly.

255
00:15:58.350 --> 00:16:00.200
Hopefully, we all got this working, and

256
00:16:00.200 --> 00:16:05.150
we are able to log into our
server without using a password.

257
00:16:05.150 --> 00:16:08.989
I'm gonna go through creating a key one
more time because I think there's two or

258
00:16:08.989 --> 00:16:14.710
three people having a bit of trouble.
&gt;&gt; Speaker 2: Can

259
00:16:14.710 --> 00:16:16.970
you make a key with a different name?

260
00:16:16.970 --> 00:16:18.690
I think that's confusing people.
&gt;&gt; Jem: Yeah.

261
00:16:18.690 --> 00:16:19.370
&gt;&gt; Speaker 2: And how you would give

262
00:16:19.370 --> 00:16:22.230
its unique name.
&gt;&gt; Jem: Just exit out of here.

263
00:16:23.550 --> 00:16:26.825
Clear, so now I'm in my .ssh,
so we're gonna use SSH keygen.

264
00:16:26.825 --> 00:16:35.360
That's right,
&gt;&gt; Jem: -t,

265
00:16:35.360 --> 00:16:38.600
fill out the encryption method.

266
00:16:40.560 --> 00:16:43.800
And at this point it says
what you want to name it.

267
00:16:43.800 --> 00:16:46.580
If you hit Enter, it's gonna give
you a default name of id_rsa,

268
00:16:46.580 --> 00:16:52.180
which is gonna overwrite your key if
you already have a key called id_rsa.

269
00:16:52.180 --> 00:16:54.160
So at this point, give it a name.

270
00:16:54.160 --> 00:16:56.820
So, foo_bar, it doesn't matter.

271
00:16:56.820 --> 00:17:00.430
And then I'm not gonna give it
a passphrase, cuz I'm lazy and

272
00:17:00.430 --> 00:17:01.440
I hate typing it in every time.

273
00:17:01.440 --> 00:17:03.410
But you can, it's optional.

274
00:17:03.410 --> 00:17:05.610
If you're using something
with you need high security,

275
00:17:05.610 --> 00:17:07.970
I'd give it a pass phrase but
I'm not going to.

276
00:17:09.120 --> 00:17:09.810
And that's our key.

277
00:17:10.890 --> 00:17:15.077
So if we ls,
we can see foo_bar our private key and

278
00:17:15.077 --> 00:17:23.290
our public key has just been created.
&gt;&gt; Jem: Everybody so

279
00:17:23.290 --> 00:17:26.820
far, hopefully we're all caught up again.

280
00:17:26.820 --> 00:17:33.379
So I'm just gonna log back into my server.
&gt;&gt; Jem: So,

281
00:17:33.379 --> 00:17:38.965
everybody needs to be able to do
this at this point to SSH into

282
00:17:38.965 --> 00:17:45.280
your server just using your private
key and not use a password.

283
00:17:45.280 --> 00:17:46.680
This is really important everyone.

284
00:17:48.630 --> 00:17:49.600
So no password needed.

