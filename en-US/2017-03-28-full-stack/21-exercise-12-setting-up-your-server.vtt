WEBVTT

1
00:00:00.610 --> 00:00:03.080
&gt;&gt; Jem: So now let's set up our server.

2
00:00:03.080 --> 00:00:06.060
First thing we want to do, we wanna
update all the software on the server.

3
00:00:06.060 --> 00:00:09.910
Usually when you install a brand
new droplet it's up to date.

4
00:00:09.910 --> 00:00:11.820
But let's keep it up to date just in case.

5
00:00:11.820 --> 00:00:14.430
We always want to make
sure this runs regularly.

6
00:00:14.430 --> 00:00:20.226
So I'm gonna say apt-get update.

7
00:00:24.152 --> 00:00:27.250
&gt;&gt; Jem: And it's just gonna check all
the packages, kind of the core things.

8
00:00:27.250 --> 00:00:28.168
Probably not much to update.

9
00:00:28.168 --> 00:00:32.334
But it's always good to go and
locate that or go ahead and

10
00:00:32.334 --> 00:00:35.390
run that on any new computer.

11
00:00:35.390 --> 00:00:38.624
And on my personal site,
I have this run on a regular job that

12
00:00:38.624 --> 00:00:41.747
just updates once a week or so,
just to keep it up to date.

13
00:00:51.770 --> 00:00:55.660
&gt;&gt; Jem: Okay, so right now,
there's a problem.

14
00:00:55.660 --> 00:00:57.050
We're running as root.

15
00:00:57.050 --> 00:01:02.110
Root is the ultimate gatekeeper,

16
00:01:02.110 --> 00:01:05.020
person in charge, bouncer,
they have all the commands.

17
00:01:05.020 --> 00:01:08.440
They can run everything and
the server will never ask them,

18
00:01:08.440 --> 00:01:09.620
are you sure want to do this?

19
00:01:09.620 --> 00:01:12.800
Because if you're doing something as root,
you should know what you're doing.

20
00:01:12.800 --> 00:01:13.890
So we don't want to do that.

21
00:01:13.890 --> 00:01:17.020
We're going to add a new user,
that has way less permissions.

22
00:01:17.020 --> 00:01:22.658
So just in case, well, it keeps you from
shooting yourself in the foot, so [LAUGH].

23
00:01:22.658 --> 00:01:28.620
And pro tip, never, never run anything
as root unless you absolutely have to.

24
00:01:28.620 --> 00:01:31.861
Because the system will not tell you when
you're about to do something stupid.

25
00:01:31.861 --> 00:01:33.914
So let's go ahead and add a user.

26
00:01:33.914 --> 00:01:34.801
Yes?

27
00:01:34.801 --> 00:01:36.386
&gt;&gt; Speaker 2: You said do the update,

28
00:01:36.386 --> 00:01:40.121
do they have to do upgrade
too to actually install them?

29
00:01:40.121 --> 00:01:40.900
&gt;&gt; Jem: No,
you can just do apt-get update.

30
00:01:41.900 --> 00:01:42.400
&gt;&gt; Speaker 2: Okay.

31
00:01:44.000 --> 00:01:48.162
And then are there any risks of
automatically doing apt-get upgrade or

32
00:01:48.162 --> 00:01:48.724
update?

33
00:01:48.724 --> 00:01:50.320
I don't know if that was a typo.

34
00:01:50.320 --> 00:01:51.210
&gt;&gt; Jem: There are,

35
00:01:51.210 --> 00:01:57.090
the one danger of using the apt-get
repository is that it's a little behind.

36
00:01:57.090 --> 00:02:01.249
Because Ubuntu, the foundation,
I believe it's Canonical,

37
00:02:01.249 --> 00:02:05.649
they verify all the packages are all
stable and working correctly.

38
00:02:05.649 --> 00:02:08.520
So it's always gonna be a little
bit behind of what the actual

39
00:02:08.520 --> 00:02:09.490
repositories are.

40
00:02:09.490 --> 00:02:13.340
So when we install Node later, it probably
won't be the latest version of Node, but

41
00:02:13.340 --> 00:02:16.340
it's gonna be the latest stable
version that they're comfortable with,

42
00:02:16.340 --> 00:02:18.360
which is why I generally use apt-get.

43
00:02:18.360 --> 00:02:21.710
But you're always free to install
your own software on your own server.

44
00:02:21.710 --> 00:02:26.303
But again, once you go off that path,
you're on your own if something breaks.

45
00:02:28.727 --> 00:02:30.336
&gt;&gt; Jem: Let's see, Nick asked,

46
00:02:30.336 --> 00:02:36.210
could you explain a little more when using
our .pub key versus the private key.

47
00:02:36.210 --> 00:02:38.400
It looked like we use the public
key when creating the droplet and

48
00:02:38.400 --> 00:02:39.640
private key to log in.

49
00:02:39.640 --> 00:02:41.330
Yes, great question.

50
00:02:41.330 --> 00:02:46.294
And let us jump back to my

51
00:02:46.294 --> 00:02:50.274
awesome diagram.

52
00:02:50.274 --> 00:02:53.770
So, again, with the public key,
public private key authentication,

53
00:02:53.770 --> 00:02:56.680
the public key always lives on the server.

54
00:02:56.680 --> 00:03:00.503
That is, you're free to distribute,
you're free to hand out.

55
00:03:00.503 --> 00:03:02.673
You put it on GitHub,
you put it on Digital Ocean,

56
00:03:02.673 --> 00:03:04.080
the public key can go anywhere.

57
00:03:04.080 --> 00:03:06.480
It's not a big deal if that gets out.

58
00:03:06.480 --> 00:03:09.740
The private key has to
stay on your computer.

59
00:03:09.740 --> 00:03:14.040
Because, again, all your messages
are encrypted using that public key, and

60
00:03:14.040 --> 00:03:18.140
only your private key can unlock
those messages, can decode that.

61
00:03:18.140 --> 00:03:20.977
Hopefully, Nick, that helps a little bit.

62
00:03:20.977 --> 00:03:23.750
And remember,
if you're using public key, it's .pub.

63
00:03:23.750 --> 00:03:27.379
The private key does not have an extension
on it, and it's a much larger file.

64
00:03:31.410 --> 00:03:35.748
&gt;&gt; Jem: And let's jump back.

65
00:03:35.748 --> 00:03:42.372
&gt;&gt; [INAUDIBLE]
&gt;&gt; Jem: Okay,

66
00:03:42.372 --> 00:03:43.512
so we're gonna add a user now.

67
00:03:43.512 --> 00:03:45.490
Because, again,
we don't wanna run things as root.

68
00:03:45.490 --> 00:03:46.665
We wanna stay off root.

69
00:03:46.665 --> 00:03:49.063
As quickly as possible,
we want to jump off there.

70
00:03:49.063 --> 00:03:50.450
So we're going to add a user.

71
00:03:50.450 --> 00:03:55.840
So in your command line, type adduser
where username is whatever you want.

72
00:03:55.840 --> 00:03:59.241
I'm going to be Jem on my server,
but pick whatever you want.

73
00:03:59.241 --> 00:04:00.790
Just not root, obviously.

74
00:04:01.800 --> 00:04:02.620
&gt;&gt; Speaker 2: With the dollar sign?

75
00:04:04.040 --> 00:04:04.970
&gt;&gt; Jem: No, sorry.

76
00:04:04.970 --> 00:04:07.560
If you see dollar sign,
that is a placeholder.

77
00:04:08.770 --> 00:04:13.502
So in my instance, I'm gonna say.

78
00:04:13.502 --> 00:04:15.485
Let's go ahead and clear this.

79
00:04:15.485 --> 00:04:17.101
adduser jem.

80
00:04:20.475 --> 00:04:23.086
&gt;&gt; Jem: And I'll give it a password.

81
00:04:23.086 --> 00:04:25.358
Re-enter that password.

82
00:04:25.358 --> 00:04:28.139
You can skip all of this, steps.

83
00:04:28.139 --> 00:04:31.403
You can tell [LAUGH] Linux is
an old system, Room Number,

84
00:04:31.403 --> 00:04:33.283
Work Phone, things like that.

85
00:04:33.283 --> 00:04:35.353
Just hit Enter.

86
00:04:35.353 --> 00:04:38.245
Now you're good.

87
00:04:38.245 --> 00:04:41.760
Okay, so I'll do that one more time,
I'll add a different user.

88
00:04:41.760 --> 00:04:47.190
So adduser, I don't know,
jem2, I'm not very creative.

89
00:04:49.060 --> 00:04:50.496
And I'll give it a password.

90
00:04:53.030 --> 00:04:57.523
&gt;&gt; Jem: And you just hit Enter,
Enter, and now you have two users.

91
00:05:00.463 --> 00:05:04.932
&gt;&gt; Jem: Okay, so far,
we're taking baby steps.

92
00:05:08.859 --> 00:05:12.510
&gt;&gt; Jem: So next, so I have a user now,
but the user has no permissions.

93
00:05:12.510 --> 00:05:14.670
They have permission to work in
their own directory, but that's it.

94
00:05:14.670 --> 00:05:21.260
We need to give our user permission to do
things as sudo, as sudo, the super user.

95
00:05:21.260 --> 00:05:25.000
So not Tamer,
can anyone tell me what sudo stands for?

96
00:05:26.190 --> 00:05:27.696
Anybody?

97
00:05:27.696 --> 00:05:28.675
I even said it.

98
00:05:28.675 --> 00:05:30.218
&gt;&gt; Speaker 2: Didn't you
just say super user?

99
00:05:30.218 --> 00:05:34.316
&gt;&gt; Jem: Yes, but
what does sudo stand for though?

100
00:05:34.316 --> 00:05:35.634
&gt;&gt; Speaker 2: Super user do.

101
00:05:35.634 --> 00:05:36.530
&gt;&gt; Jem: Exactly, yes.

102
00:05:36.530 --> 00:05:39.562
Super user do,
that's what sudo stands for.

103
00:05:39.562 --> 00:05:41.171
I don't know, yeah.

104
00:05:41.171 --> 00:05:44.382
There's lots of little
jokes built into Linux,

105
00:05:44.382 --> 00:05:47.133
they had a lot of free
time back in the day.

106
00:05:47.133 --> 00:05:49.532
But sudo just means super user do.

107
00:05:49.532 --> 00:05:51.254
And super user, of course, is root.

108
00:05:51.254 --> 00:05:52.720
That is a super user.

109
00:05:52.720 --> 00:05:56.380
So we wanna give our user we just
created the ability to do things as root

110
00:05:56.380 --> 00:05:58.350
when necessary, but not all the time.

111
00:05:58.350 --> 00:06:02.037
So we're gonna add it
to the user group sudo.

112
00:06:02.037 --> 00:06:06.444
It's actually called the sudoers group,
super user doers [LAUGH].

113
00:06:06.444 --> 00:06:11.061
So, say usermod -a, for add it,

114
00:06:11.061 --> 00:06:15.530
adding it to a group, capital G.

115
00:06:18.500 --> 00:06:22.220
Sudo, which is a group of super users.

116
00:06:22.220 --> 00:06:24.330
And then just put in your
username that you just created.

117
00:06:24.330 --> 00:06:26.135
So in my case, it's Jem.

118
00:06:29.175 --> 00:06:29.690
&gt;&gt; Jem: Yes?

119
00:06:29.690 --> 00:06:31.620
&gt;&gt; Speaker 2: Just a quick question,

120
00:06:31.620 --> 00:06:35.050
my understanding of like sudo is
that it lets you do things as root.

121
00:06:35.050 --> 00:06:38.480
So then how is it any different than
us just running around as root?

122
00:06:38.480 --> 00:06:42.380
Or is it just that if we're in sudo, it'll
ask us, it'll say, hey, you're about to do

123
00:06:42.380 --> 00:06:45.950
something that makes you root,
are you sure you want to proceed?

124
00:06:45.950 --> 00:06:46.709
&gt;&gt; Jem: Yes.

125
00:06:46.709 --> 00:06:50.750
Fantastic question, and
that's actually the next part, I think.

126
00:06:52.230 --> 00:06:53.896
Yes, okay.

127
00:06:53.896 --> 00:06:55.570
I will answer you in 30 seconds.

128
00:06:55.570 --> 00:06:58.210
So now, let's switch to that user.

129
00:06:59.220 --> 00:07:04.295
So I can say su for switch user to jem.

130
00:07:04.295 --> 00:07:06.188
And my shell's gonna look
a little different now,

131
00:07:06.188 --> 00:07:07.560
because I just switched out of root.

132
00:07:09.270 --> 00:07:14.320
And another pro tip, if you're ever in
root, it's gonna be this hash right here.

133
00:07:14.320 --> 00:07:17.530
The hash invariably means you're in root
and you generally don't wanna see that.

134
00:07:18.650 --> 00:07:20.060
So I'll switch back to that.

135
00:07:20.060 --> 00:07:24.114
Switch user, su, so now I'm jem.

136
00:07:24.114 --> 00:07:25.740
I can cd to my home directory.

137
00:07:27.160 --> 00:07:30.780
So, how do I check if I have sudo command?

138
00:07:30.780 --> 00:07:33.420
Let's just do a basic,
let's look at a log file.

139
00:07:33.420 --> 00:07:36.300
And to look at a log file,
you need sudo permission.

140
00:07:36.300 --> 00:07:41.410
So if I say cat, cat is just
a way of displaying a file name.

141
00:07:41.410 --> 00:07:45.340
So I say /var, why is it so slow?

142
00:07:46.620 --> 00:07:50.080
Log, and let's look at the auth log.

143
00:07:52.280 --> 00:07:54.040
I don't have permission to look at that,

144
00:07:54.040 --> 00:07:56.820
because only a superuser
can look at the log.

145
00:07:56.820 --> 00:07:57.380
Why is that?

146
00:07:57.380 --> 00:08:00.230
Because if you're using something
like password authentication,

147
00:08:00.230 --> 00:08:03.780
which you shouldn't, you'll see passwords
in plain text often in the auth log,

148
00:08:03.780 --> 00:08:06.570
which is why you need superuser
permission to look at it.

149
00:08:06.570 --> 00:08:11.892
So to make sure that we have super user
permission, I'll just say sudo cat

150
00:08:11.892 --> 00:08:18.361
/var/log/auth.log.

151
00:08:18.361 --> 00:08:21.930
I put in my password, and
I can see the auth.log now.

152
00:08:23.050 --> 00:08:26.920
So to answer your question,
if you're doing something dangerous that

153
00:08:26.920 --> 00:08:29.650
the system says, hey,
should you really be doing this?

154
00:08:29.650 --> 00:08:34.210
You're doing something pretty advanced
that you could actually break stuff.

155
00:08:34.210 --> 00:08:35.694
It's gonna make you sudo it.

156
00:08:35.694 --> 00:08:37.722
And it's just a failsafe to make sure,
again,

157
00:08:37.722 --> 00:08:41.750
you don't shoot yourself in the foot and
do something potentially dangerous.

158
00:08:41.750 --> 00:08:48.350
So super shortcut pro tip,
if you wanna, let's try this again.

159
00:08:48.350 --> 00:08:51.160
Permission denied,
cuz I didn't sudo that command.

160
00:08:51.160 --> 00:08:53.335
If you want a short cut for

161
00:08:53.335 --> 00:08:56.747
that, sudo sudo will replay,
the bang will replay your history.

162
00:08:56.747 --> 00:08:57.725
The bang is gonna execute it.

163
00:08:57.725 --> 00:09:03.240
So sudo will execute that last
command as the super user.

164
00:09:03.240 --> 00:09:07.337
It's a nice shortcut, because I do that
all the time where I'm like aah, and

165
00:09:07.337 --> 00:09:09.241
I don't want to type in sudo /var.

166
00:09:09.241 --> 00:09:16.350
That's silly, so
sudo bang bang will replay that as sudo.

167
00:09:16.350 --> 00:09:20.781
&gt;&gt; Speaker 2: So you said we're not in
sudo if we don't have the pound, the hash.

168
00:09:20.781 --> 00:09:21.719
&gt;&gt; Jem: Right.

169
00:09:23.801 --> 00:09:24.847
&gt;&gt; Speaker 3: Do you
see the hash right now?

170
00:09:24.847 --> 00:09:31.702
&gt;&gt; Speaker 2: No, but I think I see
the cat /var/log, so I'm just confused.

171
00:09:31.702 --> 00:09:32.290
&gt;&gt; Jem: You shouldn't.

172
00:09:34.490 --> 00:09:40.669
The default permissions are set to the
logs that a non-sudoer can't see those.

173
00:09:40.669 --> 00:09:42.754
So it's very strange.

174
00:09:42.754 --> 00:09:44.630
&gt;&gt; Speaker 2: So
how do we get off of sudo again?

175
00:09:45.780 --> 00:09:46.640
&gt;&gt; Jem: Switch user, su.

176
00:09:48.190 --> 00:09:50.328
su your user name.

177
00:09:50.328 --> 00:09:55.470
I wonder if I could switch to my
own user from myself, yes I can.

178
00:09:55.470 --> 00:09:56.880
Don't know why I would, but you can.

179
00:09:57.910 --> 00:10:00.600
And to exit out of this user,
I can just say exit.

180
00:10:01.880 --> 00:10:04.890
And because I was already in my other
user, I just create another instance.

181
00:10:04.890 --> 00:10:05.680
I exit again.

182
00:10:06.910 --> 00:10:07.460
I'm back at root.

183
00:10:08.990 --> 00:10:11.580
And if I exit one more time,
I'm off my server.

184
00:10:13.550 --> 00:10:16.413
So we learned log in
to the server as root.

185
00:10:19.340 --> 00:10:22.370
&gt;&gt; Jem: And I can switch my user.

186
00:10:22.370 --> 00:10:24.920
Okay, so now let's just test to see,

187
00:10:24.920 --> 00:10:28.358
can I log into the server
as the user I just created?

188
00:10:28.358 --> 00:10:29.416
So let's go ahead and exit.

189
00:10:32.395 --> 00:10:33.447
&gt;&gt; Jem: Exit again.

190
00:10:39.572 --> 00:10:41.066
&gt;&gt; Jem: Cuz I'm lazy.

191
00:10:46.904 --> 00:10:52.360
&gt;&gt; Jem: So now when you SSH in to your
server, so back on your computer.

192
00:10:52.360 --> 00:10:55.536
We're back on our home computer.

193
00:10:55.536 --> 00:10:59.500
You should be able to SSH into
as user name at your IP address.

194
00:11:01.240 --> 00:11:04.470
Type in the password that you
created when you created that user.

195
00:11:04.470 --> 00:11:06.690
And now, you're logged in as the user.

196
00:11:08.640 --> 00:11:09.530
Everybody with me so far?

197
00:11:09.530 --> 00:11:11.340
I see people nodding, cool.

198
00:11:11.340 --> 00:11:12.255
All right, this is good.

199
00:11:20.718 --> 00:11:24.252
&gt;&gt; Jem: Okay, everybody watching live,
if I'm going too fast, Just tell me and

200
00:11:24.252 --> 00:11:25.820
I will pause for a minute or two.

201
00:11:25.820 --> 00:11:27.310
Just to get everybody caught up.

202
00:11:27.310 --> 00:11:30.406
Cuz we're gonna kinda pick
up speed a little bit.

203
00:11:37.210 --> 00:11:39.512
&gt;&gt; Jem: Okay,
just go back to the set up, switch user,

204
00:11:39.512 --> 00:11:41.596
to make sure that
the user has sudo access.

205
00:11:41.596 --> 00:11:43.389
So sudo cat /var/log.

206
00:11:43.389 --> 00:11:46.007
There's a lot of ways to test sudo access,

207
00:11:46.007 --> 00:11:48.717
but just the quickest
way that I always use.

208
00:11:48.717 --> 00:11:52.824
And the exit, just exit, and then exit.

209
00:11:52.824 --> 00:11:56.600
We're almost there.

210
00:11:56.600 --> 00:11:58.562
&gt;&gt; Speaker 2: [INAUDIBLE] one more time,
please?

211
00:12:03.441 --> 00:12:05.520
&gt;&gt; Jem: Okay,
I'll go over it one more time.

212
00:12:05.520 --> 00:12:07.190
So we created the server.

213
00:12:07.190 --> 00:12:08.560
We updated our software.

214
00:12:10.600 --> 00:12:11.687
&gt;&gt; Jem: We created a new user.

215
00:12:11.687 --> 00:12:13.938
So adduser whatever your
username you want it to be.

216
00:12:13.938 --> 00:12:14.870
In my case, it's Jem.

217
00:12:16.850 --> 00:12:19.142
I added that user to the sudoers group.

218
00:12:19.142 --> 00:12:23.189
So usermod -aG sudo the username.

219
00:12:23.189 --> 00:12:26.810
We switch to that user, so
su $USERNAME, so in my case su jem.

220
00:12:28.370 --> 00:12:32.338
And then we just test it to make sure that
that user we created has sudo access.

221
00:12:39.201 --> 00:12:39.790
&gt;&gt; Jem: And we exit,

