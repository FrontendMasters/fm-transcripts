WEBVTT

1
00:00:00.420 --> 00:00:02.090
&gt;&gt; Jem: Now we're gonna set up nginx.

2
00:00:02.090 --> 00:00:08.180
So now instead of using less sudo vi
/etc/nginx/sites-available/default.

3
00:00:08.180 --> 00:00:10.413
&gt;&gt; Speaker 2: Do we have to make it
stop listening to do all this stuff?

4
00:00:10.413 --> 00:00:11.530
&gt;&gt; Jem: Yeah,
Ctrl+C to kill your Node server.

5
00:00:11.530 --> 00:00:12.569
&gt;&gt; Speaker 2: Yeah,
that's what I was thinking.

6
00:00:12.569 --> 00:00:14.720
&gt;&gt; Jem: Or you can open a new terminal and
leave it running.

7
00:00:14.720 --> 00:00:15.910
But it's better just to kill the server.

8
00:00:17.490 --> 00:00:21.930
And then find that location
block slash in the nginx config.

9
00:00:21.930 --> 00:00:24.686
Delete whatever's in there and

10
00:00:24.686 --> 00:00:29.899
change it to proxy_pass http://127.0.0.1.

11
00:00:29.899 --> 00:00:35.486
I believe you can also use localhost,
should resolve correctly, or 0.0.0.

12
00:00:35.486 --> 00:00:39.504
But just do 127.0.0.1 port 3001.

13
00:00:41.823 --> 00:00:46.645
&gt;&gt; Jem: So what we're doing here is we're
now proxying all the traffic that comes

14
00:00:46.645 --> 00:00:50.790
into slash to our domain to
port 3001 on our local machine.

15
00:00:50.790 --> 00:00:53.216
So I'm just gonna go ahead and
do that now.

16
00:00:54.475 --> 00:00:56.007
&gt;&gt; Jem: So I'm gonna stop my server.

17
00:00:57.298 --> 00:01:06.025
&gt;&gt; Jem: sudo vi
/etc/nginx/sites-available/default.

18
00:01:07.696 --> 00:01:10.469
&gt;&gt; Jem: And
let's find that location block.

19
00:01:12.918 --> 00:01:18.149
&gt;&gt; Jem: Down here, and I'm just
gonna delete this, delete you too.

20
00:01:18.149 --> 00:01:21.110
Go to insert mode.

21
00:01:24.278 --> 00:01:28.257
&gt;&gt; Jem: Say proxy_pass

22
00:01:28.257 --> 00:01:36.787
http://127.0.0.1,

23
00:01:38.146 --> 00:01:43.020
&gt;&gt; Jem: Port 3001, and a semicolon, slash.

24
00:01:43.020 --> 00:01:43.888
Make sure I typed that correctly.

25
00:01:43.888 --> 00:01:44.895
Yes, I did.

26
00:01:47.201 --> 00:01:52.779
&gt;&gt; Jem: Okay,
&gt;&gt; Jem: Everybody with me so

27
00:01:52.779 --> 00:01:54.589
far, excellent.

28
00:01:57.720 --> 00:02:02.100
&gt;&gt; Jem: Let me slow down,
there's some questions.

29
00:02:02.100 --> 00:02:05.614
Lets see, Craig says,
how did he get to port 3001?

30
00:02:05.614 --> 00:02:10.230
3001 is just what I set
the express server up to run on.

31
00:02:10.230 --> 00:02:12.690
You're free to edit that and
change to whatever port you like.

32
00:02:12.690 --> 00:02:14.705
You could say port 4000.

33
00:02:14.705 --> 00:02:21.580
There are some reserved ports that you
can't use, such as port 22 is for FTP.

34
00:02:21.580 --> 00:02:23.580
Things like that, no SSH.

35
00:02:23.580 --> 00:02:29.571
But, yeah, 3001 is just the port that I'm
using in my nginx, or my express server.

36
00:02:29.571 --> 00:02:31.212
How do we get out of the app?

37
00:02:31.212 --> 00:02:35.380
Ctrl+C will kill the Node server so
you can get back to the command line.

38
00:02:39.808 --> 00:02:42.844
&gt;&gt; Speaker 2: So if you wanted to serve
this on like slash app you would just make

39
00:02:42.844 --> 00:02:44.820
another location slash app?

40
00:02:44.820 --> 00:02:46.299
&gt;&gt; Jem: Exactly, that's exactly right.

41
00:02:47.460 --> 00:02:51.660
And this is why we're using nginx instead
of serving directly from our Node server,

42
00:02:51.660 --> 00:02:54.160
so that we can have multiple paths and
easily handle.

43
00:02:54.160 --> 00:02:58.380
Or we can let the express server
handle the routing for us.

44
00:02:58.380 --> 00:03:01.830
There's lots of ways to do things,
but great question.

45
00:03:07.994 --> 00:03:11.739
&gt;&gt; Jem: So for everybody here,
let's go ahead and save and quit.

46
00:03:13.437 --> 00:03:18.500
&gt;&gt; Jem: And let's go and
try it without the port on there.

47
00:03:20.720 --> 00:03:21.750
No, it's the same page.

48
00:03:21.750 --> 00:03:23.038
We didn't restart nginx.

49
00:03:23.038 --> 00:03:26.279
So again,
you can make all the changes you want.

50
00:03:26.279 --> 00:03:28.235
If you don't start nginx none
of them will take place.

51
00:03:28.235 --> 00:03:33.943
So sudo service,
&gt;&gt; Jem: Can't

52
00:03:33.943 --> 00:03:38.564
spell, service nginx restart.

53
00:03:38.564 --> 00:03:44.330
Okay, oops,
forgot to start my server again, duh.

54
00:03:45.460 --> 00:03:46.586
So let's start up our server.

55
00:03:50.612 --> 00:03:52.277
&gt;&gt; Jem: And there we go.

56
00:03:52.277 --> 00:03:56.337
We have now linked a domain
directly into a Node server.

57
00:04:04.124 --> 00:04:08.770
&gt;&gt; Jem: Yeah, so let me go back to
the slides for people in a bit of trouble.

58
00:04:08.770 --> 00:04:11.430
So, remember,
we're editing our nginx configuration.

59
00:04:12.440 --> 00:04:16.801
We're proxying all traffic to slash,
so just our default URL,

60
00:04:16.801 --> 00:04:19.482
to port 3001 on our local machine.

61
00:04:24.039 --> 00:04:26.716
&gt;&gt; Jem: And then when we're done we're
gonna go ahead and restart nginx.

62
00:04:28.341 --> 00:04:29.802
&gt;&gt; Jem: You can use restart, reload.

63
00:04:32.725 --> 00:04:34.541
&gt;&gt; Jem: And
here is where we are right now.

64
00:04:34.541 --> 00:04:39.970
This is essentially how
most basic websites work.

65
00:04:39.970 --> 00:04:44.190
Domain, IP, it's a server or a proxy.

66
00:04:44.190 --> 00:04:47.360
Goes to the real file server,
which is Node in this instance.

67
00:04:47.360 --> 00:04:49.900
But it could be Apache going to PHP.

68
00:04:49.900 --> 00:04:52.480
It could be nginx going
to a Python server.

69
00:04:52.480 --> 00:04:54.485
It could be a Java server, yes?

70
00:04:54.485 --> 00:04:56.393
&gt;&gt; Speaker 2: So what's the point?

71
00:04:56.393 --> 00:04:59.600
Couldn't you just point nginx?

72
00:04:59.600 --> 00:05:03.590
Just have that point to whatever you want
to return when they go to your domain?

73
00:05:03.590 --> 00:05:07.470
Like what's the point of having nginx on
top of Node, I guess, is what I'm saying?

74
00:05:07.470 --> 00:05:10.060
&gt;&gt; Jem: Yeah, you can absolutely
serve files directly out of Node.

75
00:05:10.060 --> 00:05:12.880
It's just not recommended
because it's not scalable.

76
00:05:12.880 --> 00:05:15.550
So let's say I wanted to
add a different path.

77
00:05:15.550 --> 00:05:20.610
I'd have to do all my routing within
my Node server rather than nginx.

78
00:05:20.610 --> 00:05:21.180
&gt;&gt; Speaker 2: Okay.

79
00:05:21.180 --> 00:05:24.300
&gt;&gt; Jem: It's confusing, cuz we're
just doing a very, very basic thing.

80
00:05:24.300 --> 00:05:28.190
But let's say I also wanted to have
a database server on this computer.

81
00:05:28.190 --> 00:05:29.620
But it's on a different port.

82
00:05:29.620 --> 00:05:31.790
Well, at that point I'd have
to do that in my Node server.

83
00:05:31.790 --> 00:05:34.930
Which I don't wanna point
MySQL in a Node server.

84
00:05:34.930 --> 00:05:35.848
So we do that nginx.

85
00:05:35.848 --> 00:05:38.830
We do it at the highest level possible so
that requests come in and

86
00:05:38.830 --> 00:05:40.350
they just fork off entirely.

87
00:05:40.350 --> 00:05:42.104
&gt;&gt; Speaker 2: Okay.
&gt;&gt; Jem: But that's a great question.

88
00:05:42.104 --> 00:05:46.271
Yes, always challenge if you don't
know why I'm doing something.

89
00:05:46.271 --> 00:05:47.128
&gt;&gt; Speaker 2: Yeah, I was just curious.

90
00:05:47.128 --> 00:05:48.701
&gt;&gt; Jem: No, no, fantastic point.

91
00:05:48.701 --> 00:05:55.410
&gt;&gt; Speaker 2: So I could just
do location forward slash MySQL.

92
00:05:55.410 --> 00:05:59.553
And then I could have it to that specific
port for the MySQL or PHP thing?

93
00:05:59.553 --> 00:06:00.502
&gt;&gt; Jem: That's exactly right.

94
00:06:00.502 --> 00:06:01.132
&gt;&gt; Speaker 2: Okay.

95
00:06:01.132 --> 00:06:06.688
&gt;&gt; Jem: Yeah, so if for some reason you
wanna expose a public MySQL interface,

96
00:06:06.688 --> 00:06:08.640
you'd do that in nginx.

97
00:06:08.640 --> 00:06:13.408
I'll go through this one more time
just in case you missed the magic.

98
00:06:16.415 --> 00:06:18.440
&gt;&gt; Jem: So
we're editing our nginx configuration.

99
00:06:18.440 --> 00:06:22.840
So sudo vi
/etc/nginx/sites-available/default.

100
00:06:22.840 --> 00:06:28.373
In our location block, so
that's location slash our default block,

101
00:06:28.373 --> 00:06:36.087
we're changing those lines to say
proxy_pass http://127.0.0.1 port 3001.

102
00:06:36.087 --> 00:06:42.120
So we're just proxying all traffic
coming to slash our default URL.

103
00:06:42.120 --> 00:06:44.313
And just proxying that
straight to our Node server.

104
00:06:48.551 --> 00:06:50.790
&gt;&gt; Jem: And I think everybody's good.

105
00:06:50.790 --> 00:06:53.550
So, yes, this is the fun part.

106
00:06:54.710 --> 00:06:56.650
We have successfully hooked up everything.

107
00:06:56.650 --> 00:06:59.624
We've gone from DNS to nginx to Node.

108
00:06:59.624 --> 00:07:03.090
And now we're actually running
a real application server.

109
00:07:03.090 --> 00:07:06.540
But again, swap out Node for anything
you want, any sort of services you want.

110
00:07:06.540 --> 00:07:09.980
And change your nginx
configuration to match.

111
00:07:09.980 --> 00:07:11.270
And it's really powerful.

112
00:07:11.270 --> 00:07:15.230
This is the basis of building
anything you wanna build at all.

113
00:07:15.230 --> 00:07:17.068
That's the fun part about this.

114
00:07:17.068 --> 00:07:21.696
All right, so let's actually
build a little bit of HTML so

115
00:07:21.696 --> 00:07:25.540
it's not just saying I'm a blank slate.

116
00:07:25.540 --> 00:07:27.660
So first,

117
00:07:27.660 --> 00:07:30.620
if you're not in your app director anymore
let's move back into the app directory.

118
00:07:36.604 --> 00:07:40.070
&gt;&gt; Jem: Let's go ahead and
check out a new branch.

119
00:07:41.070 --> 00:07:42.070
This you don't actually have to do.

120
00:07:42.070 --> 00:07:45.690
But it's just a good habit not to work on
the master branch of someone else's repo.

121
00:07:57.523 --> 00:08:00.093
&gt;&gt; Jem: And go ahead and
edit the index.html.

122
00:08:00.093 --> 00:08:01.745
You could change it to whatever you want.

123
00:08:01.745 --> 00:08:06.224
I'm gonna try to see if I can help out
some of these people still having some

124
00:08:06.224 --> 00:08:07.250
issues.

125
00:08:07.250 --> 00:08:10.140
But go to change the HTML
to do whatever you want.

126
00:08:10.140 --> 00:08:12.846
Get as fancy or
as not fancy as you'd like.

