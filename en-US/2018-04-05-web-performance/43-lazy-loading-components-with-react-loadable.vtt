WEBVTT

1
00:00:00.900 --> 00:00:02.840
&gt;&gt; Steve Kinney: So
let's see if we can get rid of it.

2
00:00:02.840 --> 00:00:05.474
One of my favorite libraries is called

3
00:00:05.474 --> 00:00:12.486
React Loadable.
&gt;&gt; Steve Kinney: And

4
00:00:12.486 --> 00:00:16.170
what React Loadable does is it kind
of takes advantage of two things.

5
00:00:16.170 --> 00:00:20.020
Webpack out of the box
supports this new es6 syntax,

6
00:00:20.020 --> 00:00:22.740
which allows you to have
an import that returns a promise.

7
00:00:22.740 --> 00:00:26.490
What happens is, you say import and
it will go ahead and fetch the thing, and

8
00:00:26.490 --> 00:00:31.400
then the promise will resolve when we
have the access we're looking for.

9
00:00:31.400 --> 00:00:34.970
So you'll be like, go get this later and
do the code once you have it, right?

10
00:00:34.970 --> 00:00:37.170
Which is like, one key piece of this.

11
00:00:37.170 --> 00:00:40.454
React Loadable just gives us a really
quick abstraction over this.

12
00:00:40.454 --> 00:00:44.790
Which is you can take a component that you
know has some pretty big dependencies.

13
00:00:44.790 --> 00:00:50.580
And you can say like, hey,
go ahead when we use this component,

14
00:00:50.580 --> 00:00:54.580
go and load, like ask for
that extra chunk of code.

15
00:00:54.580 --> 00:00:57.810
In the meantime,
show this loading component.

16
00:00:57.810 --> 00:00:59.220
That could be a spinner.

17
00:00:59.220 --> 00:01:03.410
A lot of times you'll see the pattern of,
especially you'll see it in Facebook.

18
00:01:03.410 --> 00:01:07.810
If you open Facebook up before it's
loaded your timeline, you see empty ones,

19
00:01:07.810 --> 00:01:09.040
like that's kind of skeleton model.

20
00:01:09.040 --> 00:01:12.570
You can show the user something that
indicates you're getting the rest.

21
00:01:12.570 --> 00:01:14.760
And put it in place then.

22
00:01:14.760 --> 00:01:17.700
The nice part is, if you fetched it once,
it will never do this again.

23
00:01:17.700 --> 00:01:19.040
You will always just have the components,
so

24
00:01:19.040 --> 00:01:21.640
this will be the first time they ask for
it.

25
00:01:21.640 --> 00:01:22.810
So, I'm gonna do two things here.

26
00:01:23.890 --> 00:01:27.620
I'm gonna go ahead and create like
a small little loader component,

27
00:01:27.620 --> 00:01:28.723
which really good.

28
00:01:28.723 --> 00:01:33.050
It's gonna be like intentionally sample
like, there's should be better than mine.

29
00:01:34.060 --> 00:01:38.100
Does anyone wanna me tweak with CSS,
cuz I'm very bad at it.

30
00:01:38.100 --> 00:01:40.116
We'll make a new component, and

31
00:01:40.116 --> 00:01:43.519
we'll call it loading.
&gt;&gt; Steve Kinney: And

32
00:01:43.519 --> 00:01:46.150
in a real application,
you might have multiple loaders.

33
00:01:46.150 --> 00:01:48.060
You might have a generic one for
things that are generic,

34
00:01:48.060 --> 00:01:50.020
if it's an entire page
that you're loading.

35
00:01:50.020 --> 00:01:51.490
But you might have like, for

36
00:01:51.490 --> 00:01:53.960
a given smaller piece,
like one that's more appropriate.

37
00:01:53.960 --> 00:01:56.550
Ours is not gonna be that sophisticated.

38
00:01:56.550 --> 00:02:01.321
We'll just simply import,

39
00:02:01.321 --> 00:02:04.509
react from react.

40
00:02:04.509 --> 00:02:09.901
And we'll just make like
the world's simplest loading

41
00:02:09.901 --> 00:02:15.995
component.
&gt;&gt; Steve Kinney: It'll be a paragraph,

42
00:02:15.995 --> 00:02:24.550
and it will say loading.
&gt;&gt; Steve Kinney: Again,

43
00:02:24.550 --> 00:02:28.510
like yours arguably should
be more sophisticated, but

44
00:02:28.510 --> 00:02:31.410
that is not the high value of this piece.

45
00:02:31.410 --> 00:02:33.444
All right, neat.

46
00:02:33.444 --> 00:02:36.800
Now, lets take something
that has taken us some time.

47
00:02:36.800 --> 00:02:38.450
I think like code mirror.

48
00:02:38.450 --> 00:02:40.870
We’re not anti code mirror,
we are just like, not now,

49
00:02:40.870 --> 00:02:43.090
I am trying to load a web
page code mirror, please.

50
00:02:43.090 --> 00:02:46.400
You are large and
you’re taking up a lot of parsing time.

51
00:02:46.400 --> 00:02:48.460
I don’t need you.

52
00:02:48.460 --> 00:02:49.320
So lets go ahead.

53
00:02:50.540 --> 00:02:54.280
The way my application is structured,
I have the redux container pattern.

54
00:02:54.280 --> 00:02:58.060
So if you look at the editor, it grabs
a bunch of stuff from my store and

55
00:02:58.060 --> 00:03:00.700
then passes it to the editor, right?

56
00:03:00.700 --> 00:03:04.250
I would love to pass it to a loadable
version of the editor like,

57
00:03:04.250 --> 00:03:06.570
here, pass this data to a component.

58
00:03:06.570 --> 00:03:09.030
I'm gonna go fetch that
stuff in a little bit.

59
00:03:09.030 --> 00:03:12.300
So what I'm gonna do,
I'm gonna make one more component here.

60
00:03:12.300 --> 00:03:19.880
And I'm gonna call it, Loadable Editor and
this is gonna be my fork in the road.

61
00:03:19.880 --> 00:03:23.632
If you have the editor component
loaded already, use it.

62
00:03:23.632 --> 00:03:28.300
If you don't, go get it and show my
loading component in the mean time.

63
00:03:28.300 --> 00:03:31.360
And once you have it,
switch me over to the editor component.

64
00:03:31.360 --> 00:03:32.109
Does that make sense?

65
00:03:33.250 --> 00:03:35.350
Cool, so let's go ahead and
code this one up real quick.

66
00:03:35.350 --> 00:03:43.535
So we'll say, import React from 'react';.

67
00:03:43.535 --> 00:03:51.652
Import Loadable from 'react-loadable'.

68
00:03:53.110 --> 00:04:01.898
And we'll say,
&gt;&gt; Steve Kinney: LoadableEditor and

69
00:04:01.898 --> 00:04:06.714
then we take the loadable
method that takes an object.

70
00:04:06.714 --> 00:04:11.350
That takes

71
00:04:11.350 --> 00:04:14.820
the component that you want to load and
then what to show in the meantime.

72
00:04:16.330 --> 00:04:22.712
So we'll say, loader,
&gt;&gt; Steve Kinney: And

73
00:04:22.712 --> 00:04:27.802
we'll just import the one that we need.
&gt;&gt; Steve Kinney: And

74
00:04:27.802 --> 00:04:29.380
this is for
dealing with reaction components.

75
00:04:29.380 --> 00:04:33.080
If you use that import statement, it's
gonna return a promise and fetch it then.

76
00:04:33.080 --> 00:04:35.010
You can use it for any kind of code,

77
00:04:35.010 --> 00:04:36.900
it doesn't matter if it's
a reaction component.

78
00:04:36.900 --> 00:04:39.840
You can use it for anything that
might have a lot of dependencies.

79
00:04:39.840 --> 00:04:42.980
When you'll be like, go get this thing,
and then we'll come forward.

80
00:04:42.980 --> 00:04:45.494
So we'll import the editor.

81
00:04:45.494 --> 00:04:50.394
And we'll say that
the loading component is,

82
00:05:05.702 --> 00:05:06.483
&gt;&gt; Steve Kinney: I will

83
00:05:06.483 --> 00:05:10.400
export the loadable editor.

84
00:05:10.400 --> 00:05:12.110
So now, we have this new component.

85
00:05:12.110 --> 00:05:14.050
It has the smarts to get what it needs.

86
00:05:14.050 --> 00:05:15.010
Show the loading in the meantime.

87
00:05:15.010 --> 00:05:16.310
We just need to use it.

88
00:05:16.310 --> 00:05:20.580
So what we'll go ahead and
do is we'll go into this editor container,

89
00:05:20.580 --> 00:05:22.490
and we're just gonna swap it out.

90
00:05:22.490 --> 00:05:27.196
We'll say,
&gt;&gt; Steve Kinney: And

91
00:05:27.196 --> 00:05:29.654
this actually doesn't work, but
I'm gonna change the name just to make

92
00:05:29.654 --> 00:05:34.787
a point.
&gt;&gt; Steve Kinney: And

93
00:05:34.787 --> 00:05:40.430
we'll use the LoadableEditor instead
in our React or Redux container.

94
00:05:40.430 --> 00:05:41.410
All right, so we did it.

95
00:05:42.530 --> 00:05:49.443
Let's,
&gt;&gt; Steve Kinney: Go ahead and

96
00:05:49.443 --> 00:05:51.940
I have to change one setting.

97
00:05:53.000 --> 00:05:55.180
I purposely left this out,
so you can watch me do it.

98
00:05:55.180 --> 00:05:57.400
And you can see right
now the app is crashing.

99
00:05:57.400 --> 00:06:00.570
It's like, I don't understand
what this import syntax is.

100
00:06:00.570 --> 00:06:05.760
So, new features in JavaScript,
go through a phase in the group TC39,

101
00:06:05.760 --> 00:06:08.280
Technical Committee 39.

102
00:06:08.280 --> 00:06:10.080
You might ask where are 1 through 38.

103
00:06:10.080 --> 00:06:11.498
I have no idea.

104
00:06:11.498 --> 00:06:12.340
And what do they do?

105
00:06:12.340 --> 00:06:13.000
I don't know.

106
00:06:13.000 --> 00:06:13.840
This is all part of

107
00:06:13.840 --> 00:06:18.000
what was formally called the European
Computer Manufacturers Association.

108
00:06:18.000 --> 00:06:22.120
Now just called its why
the real name of JavaScript is.

109
00:06:22.120 --> 00:06:27.770
So the loading, this import syntax,
is what we call stage three.

110
00:06:27.770 --> 00:06:31.270
Stage three means not totally
ratified in the language, but

111
00:06:31.270 --> 00:06:35.160
like pretty much a strong candidate for
the next version of the language.

112
00:06:35.160 --> 00:06:39.220
You will see things like,
Webpack and babble support features

113
00:06:39.220 --> 00:06:43.510
that are almost done early, and this is
part of like the extensible web manifesto.

114
00:06:43.510 --> 00:06:46.880
Of like, let's get these things into
developers hands early before we put them

115
00:06:46.880 --> 00:06:47.750
in the language.

116
00:06:47.750 --> 00:06:50.290
Cuz if we made mistakes or
didn't think about it'd

117
00:06:50.290 --> 00:06:53.980
be cool to get that feedback before
they are ratified in language, and

118
00:06:53.980 --> 00:06:56.670
every browser has to follow
all the spec for them.

119
00:06:56.670 --> 00:06:58.920
So import,
you do need a babel plugin for this.

120
00:06:58.920 --> 00:07:04.578
If we look in the package JSON,
we can see that I've

121
00:07:04.578 --> 00:07:11.303
got this syntax-dynamic-import,
which is what we want.

122
00:07:11.303 --> 00:07:14.486
So go ahead and
we'll add that to our babel-rc,

123
00:07:14.486 --> 00:07:17.369
as well.
&gt;&gt; Steve Kinney: And

124
00:07:17.369 --> 00:07:19.140
I'm gonna kill that previous server.

125
00:07:20.960 --> 00:07:22.660
It said compiled it successfully,
but I don't believe it.

126
00:07:23.980 --> 00:07:29.449
It probably did, but,
&gt;&gt; Steve Kinney: Then

127
00:07:29.449 --> 00:07:33.894
we'll refresh the page,
&gt;&gt; Steve Kinney: And

128
00:07:33.894 --> 00:07:42.103
things will break.
&gt;&gt; Steve Kinney: Transform

129
00:07:42.103 --> 00:07:47.981
is autofunction.
&gt;&gt; Steve Kinney: Let's go ahead and

130
00:07:47.981 --> 00:07:49.976
get rid of that custom loadash code from

131
00:07:49.976 --> 00:07:54.169
before.
&gt;&gt; Steve Kinney: Yeah,

132
00:07:54.169 --> 00:07:55.790
I still had loadash/transform.

133
00:07:55.790 --> 00:08:00.490
It's like, one or the other,
I do like regular loadash here, and

134
00:08:00.490 --> 00:08:01.370
the plug in will work.

135
00:08:01.370 --> 00:08:03.629
But I was looking for
the transform from there and

136
00:08:03.629 --> 00:08:08.687
trying to find its.
&gt;&gt; Steve Kinney: So

137
00:08:08.687 --> 00:08:16.761
we've got transform.
&gt;&gt; Steve Kinney: And

138
00:08:16.761 --> 00:08:17.690
you see my app is here.

139
00:08:17.690 --> 00:08:22.750
All right, so the app functionally
behaves the way it did before.

140
00:08:22.750 --> 00:08:25.760
If you watch for it, you can see
that tiny little loading there.

141
00:08:26.950 --> 00:08:27.720
I'll replay it for you.

142
00:08:29.230 --> 00:08:30.080
Nope, that's not gonna work.

143
00:08:31.440 --> 00:08:32.120
Replay it from here.

144
00:08:33.610 --> 00:08:34.700
Things to do, watch closely.

145
00:08:34.700 --> 00:08:36.240
I'm gonna hit the Edit button, you ready?

146
00:08:36.240 --> 00:08:39.160
You saw a load for a second there.

147
00:08:39.160 --> 00:08:41.910
It didn't have that code originally,
and it went and got it, right.

148
00:08:41.910 --> 00:08:42.940
If I had it slightly nicer,

149
00:08:42.940 --> 00:08:44.930
I could show something that
almost looked like the editor.

150
00:08:44.930 --> 00:08:46.700
I could do a whole bunch
of trickery there,

151
00:08:46.700 --> 00:08:49.220
to make the user feel like
it's a little snappier.

152
00:08:49.220 --> 00:08:52.830
And it wasn't in the initial bundle,
we went and got it.

153
00:08:52.830 --> 00:08:53.702
Let's do one other thing.

154
00:08:53.702 --> 00:08:58.560
We'll start over again.
&gt;&gt; Steve Kinney: I'm going

155
00:08:58.560 --> 00:09:02.344
to go to the network.

156
00:09:08.076 --> 00:09:09.562
&gt;&gt; Steve Kinney: I'll hit edit, and

157
00:09:09.562 --> 00:09:14.458
you can see that, when we hit the editor,
we got two more entries,

158
00:09:14.458 --> 00:09:17.877
two small entries in the network tab,
right.

159
00:09:17.877 --> 00:09:20.090
Cuz that's when I went and
got that editor.

160
00:09:20.090 --> 00:09:26.122
Now, what I want to show you is, what
this looks like with the bundle analyzer.

161
00:09:34.698 --> 00:09:35.794
&gt;&gt; Steve Kinney: Well C is like a large

162
00:09:35.794 --> 00:09:40.290
difference in the way that our, we had
one bundle, we cut down low dash by 10%.

163
00:09:40.290 --> 00:09:41.240
That was good, right?

164
00:09:41.240 --> 00:09:42.990
We're feeling pretty good about that.

165
00:09:42.990 --> 00:09:46.150
I think it will really interesting
when we see the next piece of code.

166
00:09:47.760 --> 00:09:49.951
Run acts of visualization,

167
00:09:49.951 --> 00:09:55.896
which is you can see that we're now
producing two bundles, actually three.

168
00:09:55.896 --> 00:10:01.998
Which is our main, which is our initial
application, is now down to 272, right.

169
00:10:01.998 --> 00:10:05.530
From 450.
So now we're under that 300 threshold.

170
00:10:05.530 --> 00:10:08.130
Right, cuz we have code mirror and
everything you need.

171
00:10:08.130 --> 00:10:10.010
Can you go over there?

172
00:10:10.010 --> 00:10:11.100
We'll get you later.

173
00:10:11.100 --> 00:10:14.030
So we get that initial render time,
those critical assets, so

174
00:10:14.030 --> 00:10:15.030
the user sees our page.

175
00:10:15.030 --> 00:10:17.980
Remember all those statistics that
we talked about in the beginning?

176
00:10:17.980 --> 00:10:20.030
If the page takes more
than whatever to load, and

177
00:10:20.030 --> 00:10:23.160
load includes parsing, as we discussed.

178
00:10:23.160 --> 00:10:25.870
It takes all this time to do it,
then they leave.

179
00:10:25.870 --> 00:10:28.610
We've said, hey, let's get you
the initial page that you stay,

180
00:10:28.610 --> 00:10:31.130
and we'll get you the rest later.

181
00:10:31.130 --> 00:10:33.810
So our bundle is now down to 272.

182
00:10:33.810 --> 00:10:38.590
A whole 182,
cuz there was some components and

183
00:10:38.590 --> 00:10:40.360
other stuff in there that's
going along as well.

184
00:10:41.760 --> 00:10:44.200
We'll go there, in that bundle.

185
00:10:44.200 --> 00:10:49.250
Also we'll have this other tiny one,
which has got not much in it.

186
00:10:49.250 --> 00:10:51.670
We can see it's too small.

187
00:10:51.670 --> 00:10:56.340
We can see that we have already split
out the biggest problem in there.

188
00:10:56.340 --> 00:10:57.890
But there's more that we can do.

189
00:10:57.890 --> 00:11:00.140
I don't know which
character entity is this.

190
00:11:00.140 --> 00:11:07.050
But I do know what this remark parse is,
it's the mark down component, right?

191
00:11:07.050 --> 00:11:10.290
And again, when they first see
that initial landing page,

192
00:11:10.290 --> 00:11:11.730
we're not using that.

193
00:11:11.730 --> 00:11:15.350
We're not using that until they
actually go to view a note.

194
00:11:15.350 --> 00:11:17.150
So why are we shipping it now?

195
00:11:17.150 --> 00:11:20.230
Why are we paying the cost of
shoving it through the tube of cats?

196
00:11:20.230 --> 00:11:25.720
Why are we parsing it right now,
when we can do it later and not do it now?

197
00:11:25.720 --> 00:11:27.270
So, let's look at what
I did with the editor.

198
00:11:28.480 --> 00:11:32.600
I made a loading component,
which is reusable because it's silly.

199
00:11:32.600 --> 00:11:35.510
I made, I used react loadable to
make a component that's basically

200
00:11:35.510 --> 00:11:36.590
a fork in the road.

201
00:11:36.590 --> 00:11:38.370
Go get it, if you don't have it.

202
00:11:38.370 --> 00:11:41.140
Show this loading one in the meantime.

203
00:11:41.140 --> 00:11:43.610
The important thing to note is
that it will only fetch that once.

204
00:11:43.610 --> 00:11:45.920
If I watch other notes,
it already has the editor.

205
00:11:45.920 --> 00:11:48.610
It's not gonna go get it again,
which is super cool.

206
00:11:48.610 --> 00:11:53.120
And then in my editor here,

207
00:11:53.120 --> 00:11:55.830
I just swapped out the editor here,
for the loadable editor.

