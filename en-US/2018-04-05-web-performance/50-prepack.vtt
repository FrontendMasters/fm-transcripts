WEBVTT

1
00:00:00.030 --> 00:00:01.840
&gt;&gt; Steve Kinney: There's one other
one that's kind of experimental that

2
00:00:01.840 --> 00:00:02.770
I wanna talk about.

3
00:00:02.770 --> 00:00:04.710
And it's the idea called prepack.

4
00:00:04.710 --> 00:00:08.460
And so prepack, I mean,
I can, you know, I'm a teen.

5
00:00:08.460 --> 00:00:11.420
It says a tool for
making Java's code run faster.

6
00:00:11.420 --> 00:00:13.120
Emphasis on the word run.

7
00:00:13.120 --> 00:00:16.360
It might not always
make your code smaller.

8
00:00:16.360 --> 00:00:18.900
But it's that kind of
interesting in my project.

9
00:00:18.900 --> 00:00:21.810
It's definitely not ready for production
but it's interesting to play around with.

10
00:00:23.130 --> 00:00:28.990
And so, here's a loop but this loop
starts at 0, goes to 10 and does a thing.

11
00:00:28.990 --> 00:00:32.620
And so what happens is
the parser parses this loop,

12
00:00:32.620 --> 00:00:37.440
compiles it out like re-run through it but
effectively what happens is this.

13
00:00:37.440 --> 00:00:41.530
So, a prepack does is that it takes this
and at build time turns it into this so

14
00:00:41.530 --> 00:00:43.590
the browser never has to do it.

15
00:00:43.590 --> 00:00:47.660
Right, it does all of those things
that gonna happen anyway immediately.

16
00:00:47.660 --> 00:00:51.300
But like, this code is shorter
than this code, right?

17
00:00:51.300 --> 00:00:52.810
So there's some trade offs there.

18
00:00:52.810 --> 00:00:57.020
But sometimes you can do some interesting
things like here's a Fibonacci sequence.

19
00:00:57.020 --> 00:01:02.133
And you can see if you put it in prepack,
it executes it in time.

20
00:01:03.920 --> 00:01:07.170
And just spits out the result.

21
00:01:07.170 --> 00:01:10.160
So now the browser will never go
through this Fibonacci sequence.

22
00:01:10.160 --> 00:01:13.530
It's just gonna spit out 55 cuz that's
what was gonna come out anyway.

23
00:01:13.530 --> 00:01:15.560
There's no point making you users do it.

24
00:01:15.560 --> 00:01:18.140
Definitely experimental tool but
kind of interesting.

25
00:01:18.140 --> 00:01:21.220
I showed more to like frame
the way you think about.

26
00:01:21.220 --> 00:01:23.770
Like what do we do it on
our computers at build time

27
00:01:23.770 --> 00:01:25.730
whether we ship it out
to our users to do it.

28
00:01:25.730 --> 00:01:28.840
That's the main goal like I,
I don't use this.

29
00:01:28.840 --> 00:01:31.840
I don't think it's even recommended
to be used at this point.

30
00:01:31.840 --> 00:01:33.570
But I think it's an interesting idea for

31
00:01:33.570 --> 00:01:36.390
framing the way we think
about do we do time.

32
00:01:36.390 --> 00:01:41.110
Or do we ship it to users for
them to do at their compile time?

33
00:01:41.110 --> 00:01:45.360
We can get a lot of winds on our user
side by figuring out interesting ways

34
00:01:45.360 --> 00:01:48.210
to do this at the one time that
we ever have to build that asset.

35
00:01:48.210 --> 00:01:50.080
And push it up to S3 or whatever.

