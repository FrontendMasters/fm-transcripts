WEBVTT

1
00:00:00.210 --> 00:00:03.771
&gt;&gt; Steve Kinney: But like they all have an
a property, what's the difference, right?

2
00:00:03.771 --> 00:00:08.322
Clearly, if we think about what happened
when we tried to delete points properties

3
00:00:08.322 --> 00:00:12.821
from the point class, we think about what
happens when we get different objects.

4
00:00:12.821 --> 00:00:17.644
We can definitely measure that there is
some amount of difference that happens.

5
00:00:17.644 --> 00:00:22.913
And it doesn't really make any sense
because why would one of these be faster

6
00:00:22.913 --> 00:00:30.819
than the other, if only they were slides.
&gt;&gt; Steve Kinney: So

7
00:00:30.819 --> 00:00:35.018
it turns out that there
is a type system in V8.

8
00:00:35.018 --> 00:00:37.721
There's not in JavaScript,
but there's one in V8.

9
00:00:37.721 --> 00:00:40.746
We had suspicions of that when we
saw the strings and the numbers,

10
00:00:40.746 --> 00:00:42.513
our suspicions have been confirmed.

11
00:00:42.513 --> 00:00:46.152
Yeah, numbers and strings,
it keeps track of those, cool, but

12
00:00:46.152 --> 00:00:49.806
clearly there's something
involving objects as well, right.

13
00:00:49.806 --> 00:00:55.067
And the terminology we use is the morphism

14
00:00:55.067 --> 00:00:59.282
of that object, right?
&gt;&gt; Group: [LAUGH]

15
00:00:59.282 --> 00:01:01.046
&gt;&gt; Steve Kinney: Yeah, everyone's back,

16
00:01:01.046 --> 00:01:03.197
everyone's here again, cool.

17
00:01:03.197 --> 00:01:09.223
And so we can say that in the case that
a function could be monomorphic, right.

18
00:01:09.223 --> 00:01:12.632
Remember where we passed a whole bunch
of objects that only had an A property,

19
00:01:12.632 --> 00:01:13.951
that A property was a number.

20
00:01:13.951 --> 00:01:18.279
Monomorphic, it's the same
thing every time.

21
00:01:18.279 --> 00:01:24.982
There's polymorphic, which is I see
many things or see a few things.

22
00:01:24.982 --> 00:01:30.985
Sometimes there's a B on it, sometimes
there's a C, it's generally the same.

23
00:01:30.985 --> 00:01:33.112
I've seen it just a subset of things,
I can basically go in this case,

24
00:01:33.112 --> 00:01:33.953
I'm gonna optimize here.

25
00:01:33.953 --> 00:01:38.798
In this other case I'm gonna
optimize there, I'll figure it out.

26
00:01:38.798 --> 00:01:41.364
And then finally there's megamorphism,

27
00:01:41.364 --> 00:01:44.006
which is a whole bunch
of different things.

28
00:01:44.006 --> 00:01:46.753
I don't know what's happening,
I don't know what to expect.

29
00:01:46.753 --> 00:01:49.731
I'm not gonna optimize this situation,
right.

30
00:01:49.731 --> 00:01:54.599
You can take a lucky guess on like,
where you wanna be on this spectrum of,

31
00:01:54.599 --> 00:01:58.917
I'm highly optimized for
one kinda thing, mostly optimized for

32
00:01:58.917 --> 00:02:02.156
a few kinds of things are not optimized,
right.

33
00:02:02.156 --> 00:02:04.653
You can take a lucky guess on
where you wanna be in that case.

34
00:02:04.653 --> 00:02:08.312
This is not just for objects,
like the plus operator we saw before.

35
00:02:08.312 --> 00:02:11.134
Behaves way differently than it would,

36
00:02:11.134 --> 00:02:14.792
when we always got numbers
there's a lot of things.

37
00:02:14.792 --> 00:02:17.930
Generally speaking,
the more consistent stuff is,

38
00:02:17.930 --> 00:02:22.331
the more speculative optimizations
can be done, the faster your code is.

39
00:02:22.331 --> 00:02:25.780
So yeah, here's the summary again,
monomorphic.

40
00:02:25.780 --> 00:02:29.317
This is all I know, I've seen this
type of object a million times.

41
00:02:29.317 --> 00:02:31.626
I'm ready, I know what to do,
this is my thing.

42
00:02:31.626 --> 00:02:36.049
Polymorphic is basically,
I've seen a few different ones,

43
00:02:36.049 --> 00:02:39.798
all right,
it's effectively a switch statement.

44
00:02:39.798 --> 00:02:41.986
Okay, if it's this kinda thing, do this.

45
00:02:41.986 --> 00:02:44.332
If it's this other kind of thing,
do the other thing, right.

46
00:02:44.332 --> 00:02:47.947
And you can do a few of those,
that's not free, that switch statement.

47
00:02:47.947 --> 00:02:49.920
And if the switch
statement gets too large,

48
00:02:49.920 --> 00:02:51.795
it's like not worth it anymore, right.

49
00:02:51.795 --> 00:02:54.100
All of a sudden it's like,
we've all written the code,

50
00:02:54.100 --> 00:02:57.271
where you can put a conditional inside
a conditional, inside a conditional,

51
00:02:57.271 --> 00:03:00.269
inside a conditional, but
eventually that becomes untenable, right.

52
00:03:00.269 --> 00:03:05.417
Maybe you're all better programmers
than me and haven't done that.

53
00:03:05.417 --> 00:03:06.740
So we know that doesn't really scale.

54
00:03:06.740 --> 00:03:09.239
So eventually it gives up and
I've seen a lot of things.

55
00:03:09.239 --> 00:03:13.919
I'm not specialized in any of them,
I'm just gonna do the normal thing, right.

56
00:03:13.919 --> 00:03:15.975
The closer we can stay to monomorphic,
the better we get.

57
00:03:15.975 --> 00:03:21.135
But that's neat advice,
but that's not actionable,

58
00:03:21.135 --> 00:03:24.332
how does any of this work, right?

59
00:03:24.332 --> 00:03:26.740
So we'll kind of explore
that a little bit.

60
00:03:26.740 --> 00:03:28.406
So we ask question of,

61
00:03:28.406 --> 00:03:32.631
how does the browser figure
out the type of something is?

62
00:03:32.631 --> 00:03:36.189
And what we'll do is, we're gonna
go back to more a few experiments.

63
00:03:36.189 --> 00:03:41.157
We're gonna take a look at another one of
those like special hidden functions that

64
00:03:41.157 --> 00:03:44.479
can basically say like,
are you two the same, right?

65
00:03:44.479 --> 00:03:49.183
In Chrome it's called something
different in each one,

66
00:03:49.183 --> 00:03:52.123
in one of the browsers, the shape.

67
00:03:52.123 --> 00:03:55.335
Chrome calls them hidden classes or
maps internally.

68
00:03:55.335 --> 00:03:57.925
There's a whole bunch
of different names but

69
00:03:57.925 --> 00:04:01.066
most of the engines have
some concept of this, right.

70
00:04:01.066 --> 00:04:05.669
It's a way of keeping track what type
something is in a completely untyped

71
00:04:05.669 --> 00:04:06.420
language.

