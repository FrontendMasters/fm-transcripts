WEBVTT

1
00:00:00.070 --> 00:00:02.280
&gt;&gt; Steve Kinney: But you're thinking,
how do I avoid painting?

2
00:00:02.280 --> 00:00:05.015
Isn't that fact of life when I'd
like to get pixels on the screen?

3
00:00:05.015 --> 00:00:10.527
That's you all right now thinking,
I can read your minds, turns out.

4
00:00:10.527 --> 00:00:13.090
My thing is, let the Compositor Thread
handle that stuff.

5
00:00:13.090 --> 00:00:14.520
You're like, well what does that mean?

6
00:00:14.520 --> 00:00:19.272
So here are some things that compositor
thread that works with the GPU is really

7
00:00:19.272 --> 00:00:19.851
good at.

8
00:00:19.851 --> 00:00:23.832
It's not good at drawing bitmaps, but
it's very good at taking a bitmap that

9
00:00:23.832 --> 00:00:27.277
was drawn before and drawing it
in more different places, right?

10
00:00:27.277 --> 00:00:30.360
It's good at scaling and rotating bitmaps.

11
00:00:30.360 --> 00:00:35.490
It's good at making them transparent and
applying Instagram filters to them.

12
00:00:35.490 --> 00:00:37.600
It's also good at mining Bitcoin, right?

13
00:00:37.600 --> 00:00:40.240
There's lots of stuff you can do on
a compositor thread that you can ship on

14
00:00:40.240 --> 00:00:42.320
over to it.

15
00:00:42.320 --> 00:00:45.900
So generally speaking, whenever we're
doing some of these things, if we can pass

16
00:00:45.900 --> 00:00:50.800
it off to the less-busy thread that's
only good, super good at a few things and

17
00:00:50.800 --> 00:00:54.220
not do those on the very busy thread
that's not as good at those things,

18
00:00:54.220 --> 00:00:56.180
we should totally do that.

19
00:00:56.180 --> 00:00:59.239
So the browser does that and
it creates these things called layers.

20
00:01:00.390 --> 00:01:02.780
Now this is a single website
where we have a sticky header.

21
00:01:02.780 --> 00:01:05.660
And in this little 3D view
in the Chrome Dev tools,

22
00:01:05.660 --> 00:01:08.990
you can see that it's on its own layer.

23
00:01:08.990 --> 00:01:11.810
So if you've ever used Photoshop and
you have something on a layer and

24
00:01:11.810 --> 00:01:14.510
you can move it around without
destroying the pixels underneath it.

25
00:01:14.510 --> 00:01:16.680
It's the exact same concept, right?

26
00:01:16.680 --> 00:01:18.750
So the top bar kinda floats above, and

27
00:01:18.750 --> 00:01:22.350
we basically instead of repainting the top
bar over different pieces of text,

28
00:01:22.350 --> 00:01:26.160
we're basically sliding the rest
of the page underneath it.

29
00:01:26.160 --> 00:01:28.384
And we can have it like that.

30
00:01:28.384 --> 00:01:31.081
And this is really kinda cool, and it's
why if you are looking at a retina screen

31
00:01:31.081 --> 00:01:33.216
before when you took this for
a spin and you saw this happening,

32
00:01:33.216 --> 00:01:35.954
you didn't see the paint before, because
it was like automatically on retina,

33
00:01:35.954 --> 00:01:38.269
it will take anything on position
fixed and move it to its own layer.

34
00:01:38.269 --> 00:01:42.066
Right, and you didn't see it but

35
00:01:42.066 --> 00:01:47.223
on a non-retina screen, we don't do that.

36
00:01:47.223 --> 00:01:50.556
The reason for
that is when you move it to its own layer,

37
00:01:50.556 --> 00:01:54.996
you lose some pixel aliasing which
makes your font look smooth, right?

38
00:01:54.996 --> 00:01:58.788
On Retina, you will never notice that,
on non-retina you could notice that so

39
00:01:58.788 --> 00:02:01.053
the browser doesn't automatically do it,
and

40
00:02:01.053 --> 00:02:03.710
that's why you have the difference there.

41
00:02:03.710 --> 00:02:06.650
So it's like, I wanna know
everything about how to get stuff to

42
00:02:06.650 --> 00:02:08.450
the compositor thread.

43
00:02:08.450 --> 00:02:14.450
That's not possible or useful because
the compositing is kind of a hack.

44
00:02:14.450 --> 00:02:16.597
It's not like, in the W3C spec.

45
00:02:16.597 --> 00:02:19.486
Java Script is specced out,
the dom is specced out,

46
00:02:19.486 --> 00:02:21.334
the CSS object model Inspector.

47
00:02:21.334 --> 00:02:23.791
There are rules for
how these things behave.

48
00:02:23.791 --> 00:02:25.715
Compositing is kinda done by browsers,

49
00:02:25.715 --> 00:02:27.983
however they want with
the rights to change it.

50
00:02:27.983 --> 00:02:31.551
We just need to know that it exists and
we're gonna talk about how to make

51
00:02:31.551 --> 00:02:35.604
suggestions to the browser like hey, hey,
why do you make this it's own layer?

52
00:02:35.604 --> 00:02:37.060
I think it will be good, right?

53
00:02:37.060 --> 00:02:39.830
And the browser can choose to either
listen to us or not listen to us.

54
00:02:39.830 --> 00:02:41.890
Some other kind of use cases.

55
00:02:41.890 --> 00:02:46.190
We do our thing, this is our code
area with a side by side code and

56
00:02:46.190 --> 00:02:50.810
then the Visual Studio Side and we have
this settings that slides out over it.

57
00:02:50.810 --> 00:02:53.650
So that would cause a whole
bunch of repaints, but

58
00:02:53.650 --> 00:02:56.780
because it's its own layer,
it slides out in front.

59
00:02:56.780 --> 00:02:59.720
We slide it back when it's done,
the only repainting that you saw

60
00:02:59.720 --> 00:03:05.040
there was the turning of the gear.

61
00:03:06.190 --> 00:03:11.849
And select to drop down that I wanna talk
about, but jQuery plugin that's fine

62
00:03:11.849 --> 00:03:17.523
yeah the thing slides out we don't repaint
any of those parts which very cool.

63
00:03:17.523 --> 00:03:21.227
So all right I wanna use layers
through everything, that's great.

64
00:03:21.227 --> 00:03:23.270
One does not simply use layers, right?

65
00:03:23.270 --> 00:03:29.020
You can say I want this to be it's
own layer, you probably shouldn't.

66
00:03:29.020 --> 00:03:31.180
We'll talk about why in a second.

67
00:03:31.180 --> 00:03:33.490
But you're not really in charge of layers.

68
00:03:33.490 --> 00:03:34.900
That's not your thing.

69
00:03:34.900 --> 00:03:37.260
You can simply make recommendations.

70
00:03:37.260 --> 00:03:40.115
There are optimizations that the browser
does for you under the hood.

71
00:03:40.115 --> 00:03:41.205
Again they're not specced out.

72
00:03:41.205 --> 00:03:44.685
You don't really have any control
over them but you can influence.

73
00:03:44.685 --> 00:03:47.805
[LAUGH] You can bow before
the compositor king.

74
00:03:47.805 --> 00:03:51.605
And ask to become a layer and
the browser can decide whether or

75
00:03:51.605 --> 00:03:53.945
not you're worthy of becoming one.

76
00:03:53.945 --> 00:03:58.315
So out of the box we saw that right now
those top bars got their own layers,

77
00:03:58.315 --> 00:04:00.065
a few other things do as well.

78
00:04:00.065 --> 00:04:03.760
The root object of a page gets its own
layer cuz you need at least one layer,

79
00:04:03.760 --> 00:04:05.200
right, you need something.

80
00:04:06.600 --> 00:04:09.780
Objects that have specific CSS
positions like position fixed,

81
00:04:09.780 --> 00:04:11.900
so that's when, that's only on Retina.

82
00:04:11.900 --> 00:04:14.720
That's when you saw that
header float above.

83
00:04:14.720 --> 00:04:19.320
Objects with CSS transforms,
objects that have overflow so

84
00:04:19.320 --> 00:04:22.360
if they can scroll those are usually
on their own thread cuz you don't wanna

85
00:04:22.360 --> 00:04:26.700
repaint, wanna keep each part,
just basically slide it from underneath.

86
00:04:26.700 --> 00:04:29.160
A bunch of stuff will get its own layer,
right?

87
00:04:29.160 --> 00:04:31.030
Again it's a browser thing.

88
00:04:31.030 --> 00:04:32.710
It's not necessarily for you, but

89
00:04:32.710 --> 00:04:35.010
it can be really useful in
some of work that we do.

90
00:04:35.010 --> 00:04:38.290
If you wanna know all the things,
you can be an elite hacker and

91
00:04:38.290 --> 00:04:40.308
go read the Chromium source code, and

92
00:04:40.308 --> 00:04:43.669
see, there's literally a file
called compositing reasons.

93
00:04:43.669 --> 00:04:48.035
[LAUGH] And you can sit down with a cup
of coffee or a drink and sit there and

94
00:04:48.035 --> 00:04:52.253
read through this file but
generally speaking the shorter list that

95
00:04:52.253 --> 00:04:55.080
I showed you before is
probably a good start.

96
00:04:56.230 --> 00:04:59.680
So an object that doesn't fall
under compositingreasons.h is

97
00:04:59.680 --> 00:05:02.970
not going to get its own layer and
that's probably a good thing.

98
00:05:02.970 --> 00:05:04.763
We'll talk about that, right?

99
00:05:04.763 --> 00:05:10.137
It will be on the same layer as
the last element that did get worthy.

100
00:05:10.137 --> 00:05:11.120
So it will go up to its parents.

101
00:05:11.120 --> 00:05:12.234
Somebody got their own layer.

102
00:05:12.234 --> 00:05:14.062
If nobody got their own layer, well,

103
00:05:14.062 --> 00:05:16.820
the root object is on the layer's
one flat page, right?

104
00:05:16.820 --> 00:05:19.150
It will just join the previous layer,
which makes sense.

