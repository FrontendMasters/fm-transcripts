WEBVTT

1
00:00:00.030 --> 00:00:01.191
&gt;&gt; Steve Kinney: So let's talk about that,

2
00:00:01.191 --> 00:00:03.470
talk about this thing called
the compositor thread.

3
00:00:03.470 --> 00:00:09.010
An oversimplification is to say
that a browser has three threads.

4
00:00:09.010 --> 00:00:10.340
That's not really true anymore,

5
00:00:10.340 --> 00:00:12.880
some browsers have all sorts
of other like special threads.

6
00:00:12.880 --> 00:00:18.390
But let's oversimplify for
a second and say that there's three.

7
00:00:18.390 --> 00:00:20.470
The UI thread is none of our business.

8
00:00:20.470 --> 00:00:22.420
The UI thread, you're like, I write UIs.

9
00:00:22.420 --> 00:00:23.890
This is more Chrome's UI.

10
00:00:23.890 --> 00:00:28.860
This is like the tab bar and the location
bar and all of that kind of stuff.

11
00:00:28.860 --> 00:00:30.650
That is Chrome itself.

12
00:00:30.650 --> 00:00:31.300
You don't touch that.

13
00:00:31.300 --> 00:00:32.680
You don't have access to it.

14
00:00:32.680 --> 00:00:33.680
That exists.

15
00:00:33.680 --> 00:00:36.630
The renderer thread is where
we live most of the time.

16
00:00:36.630 --> 00:00:39.160
That's where our Javascript runs,
that's where our painting happens,

17
00:00:39.160 --> 00:00:41.740
that's where layout thrashing happens,
right?

18
00:00:41.740 --> 00:00:44.159
All of the fun stuff that we do in there.

19
00:00:44.159 --> 00:00:47.280
That's where all the HTML
gets parsed sometimess and

20
00:00:47.280 --> 00:00:49.190
stuff along those like there.

21
00:00:49.190 --> 00:00:54.730
Every tab in Chrome or Firefox,
Safari has one of these threads.

22
00:00:54.730 --> 00:00:57.920
It used to be that they all shared one,
which meant one webpage would take

23
00:00:57.920 --> 00:01:02.700
down all the tabs, now, one webpage
can only take down its own tab.

24
00:01:02.700 --> 00:01:04.391
We live in better times.

25
00:01:04.391 --> 00:01:07.600
So there's one of these per page, and
it's where all of our JavaScript runs.

26
00:01:07.600 --> 00:01:09.780
Everything we're doing,
almost everything happens there.

27
00:01:10.780 --> 00:01:13.030
Then we have this other thing
called the compositor thread.

28
00:01:14.090 --> 00:01:18.975
Its sole job is to draw bitmaps,
take the bitmaps, send them to GPU,

29
00:01:18.975 --> 00:01:20.674
put them on the screen.

30
00:01:20.674 --> 00:01:23.790
So remember,
painting makes a bunch of bitmaps.

31
00:01:23.790 --> 00:01:27.705
The compositor's job is to take those and
toss them onto the screen, so

32
00:01:27.705 --> 00:01:31.240
we hand them over, we'll talk
a little bit about it in a second.

33
00:01:31.240 --> 00:01:32.580
So when we paint, we create the bitmaps.

34
00:01:32.580 --> 00:01:35.760
After painting, the bitmaps are shared
with the compositor thread,

35
00:01:35.760 --> 00:01:38.460
there is a line of shared memory
space that uses some OpenGL.

36
00:01:38.460 --> 00:01:40.900
I am now getting hand wavy,
but it's fine hand wavy.

37
00:01:40.900 --> 00:01:42.680
Before, it was unacceptable hand wavy.

38
00:01:42.680 --> 00:01:45.250
This is acceptable hand
wavy cuz it's OpenGL.

39
00:01:45.250 --> 00:01:49.710
Cool, so
the main thread is CPU intensive, right?

40
00:01:49.710 --> 00:01:53.290
You saw me peg the CPU at
multiple times today, right?

41
00:01:53.290 --> 00:01:55.400
When we block it, nothing happens.

42
00:01:55.400 --> 00:01:58.700
The compositor thread is GPU intensive,
right?

43
00:01:58.700 --> 00:02:02.480
There's, like, a hidden part here
of everything that we can take away

44
00:02:02.480 --> 00:02:06.320
from that main renderer thread and
pass it over to the GPU thread.

45
00:02:06.320 --> 00:02:09.970
Like the main thread has, the renderer
thread, has way more responsibilities.

46
00:02:09.970 --> 00:02:14.260
It's got to parse everything, calculate
styles, paint, layout, JavaScript.

47
00:02:14.260 --> 00:02:18.880
Anything that we can offload to this
other thread that's like doing GPU stuff,

48
00:02:18.880 --> 00:02:21.640
right, we should go ahead and do that.

49
00:02:23.690 --> 00:02:25.810
So, yeah,
there's a lot of stuff responsible for.

50
00:02:25.810 --> 00:02:28.300
So anything we can say,
hey, GPU handle this.

51
00:02:28.300 --> 00:02:30.110
It's going to make us faster.

52
00:02:31.130 --> 00:02:31.660
So how do we do that?

53
00:02:31.660 --> 00:02:34.200
We're managing layers.

54
00:02:34.200 --> 00:02:37.370
I'll get to what that is in a second.

55
00:02:37.370 --> 00:02:39.390
Painting is super expensive,
we should avoid it.

