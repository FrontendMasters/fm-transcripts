WEBVTT

1
00:00:00.210 --> 00:00:02.080
&gt;&gt; Steve Kinney: Cool, so
let's give it a shot and try it out.

2
00:00:02.080 --> 00:00:04.316
We're gonna hit the record button,

3
00:00:04.316 --> 00:00:09.005
hit double sizes a few times,
&gt;&gt; Steve Kinney: And

4
00:00:09.005 --> 00:00:10.800
you can see we've got
these screenshots here.

5
00:00:10.800 --> 00:00:12.898
And I see these like jumps of purple.

6
00:00:14.983 --> 00:00:17.460
&gt;&gt; Steve Kinney: If we look
we can see what happens.

7
00:00:17.460 --> 00:00:20.900
So we've got the click event,
recalling a function,

8
00:00:20.900 --> 00:00:22.600
we'll take a look at it in a second.

9
00:00:22.600 --> 00:00:26.040
We've got this for
each double width but then,

10
00:00:26.040 --> 00:00:28.800
the real kind of culprit is down here.

11
00:00:28.800 --> 00:00:32.730
When you see a bunch of stuff repeating,
that's not great.

12
00:00:32.730 --> 00:00:37.110
And if you look, recalculate style layout,

13
00:00:37.110 --> 00:00:40.470
recalculate style layout, recalculate
style layout, a whole bunch of times.

14
00:00:40.470 --> 00:00:45.740
Like we kind of just, I did a preamble
here saying layout, not great.

15
00:00:45.740 --> 00:00:50.180
I mean, you can see this
frame took 48.7 milliseconds,

16
00:00:50.180 --> 00:00:55.590
which is well past the 16 milliseconds
that we're aiming for, right?

17
00:00:55.590 --> 00:00:59.090
This was 21 frames a second, not 60.

18
00:00:59.090 --> 00:01:01.863
Right, so
because we are recalculating style layout,

19
00:01:01.863 --> 00:01:06.000
recalculating style layout so much,
that's usually where the big culprit here.

20
00:01:07.650 --> 00:01:10.810
And then finally, we even had to do
a garbage collection in the middle there.

21
00:01:10.810 --> 00:01:12.620
That's where the browser goes ahead and

22
00:01:12.620 --> 00:01:17.190
tries to reclaim some memory
to get some stuff done.

23
00:01:17.190 --> 00:01:19.300
We can look at this,
we know that we have a problem.

24
00:01:20.470 --> 00:01:24.830
The big question is what is our
problem and what do we do about it?

25
00:01:24.830 --> 00:01:26.703
So if we flip over and

26
00:01:26.703 --> 00:01:33.081
look at the code,
&gt;&gt; Steve Kinney: We

27
00:01:33.081 --> 00:01:37.804
can see this is a pretty like innocuous
piece of code, right, like okay, like go

28
00:01:37.804 --> 00:01:42.470
get me the elements, make an array out of
them so I can use for each cuz I'm lazy.

29
00:01:42.470 --> 00:01:45.670
And just double their width, right?

30
00:01:45.670 --> 00:01:49.780
But it seems like we've
got some kind of problem.

31
00:01:49.780 --> 00:01:53.730
What I could try to do is
kinda change this code.

32
00:01:53.730 --> 00:01:57.110
So here's how I might
consider refactoring it.

33
00:01:58.310 --> 00:02:00.520
In here, I will go ahead and

34
00:02:00.520 --> 00:02:03.260
I'm gonna see if I can figure out
the widths of all of them first.

35
00:02:03.260 --> 00:02:07.330
I'm gonna figure out all the widths first
and then I'm going to update all of them.

36
00:02:07.330 --> 00:02:08.850
We'll see if that has any effect.

37
00:02:08.850 --> 00:02:14.030
Let me get rid of this double width row
in a second, but let's go ahead and

38
00:02:14.030 --> 00:02:18.230
lets, it'll even be technically more code,
right, everyone is like don't loop through

39
00:02:18.230 --> 00:02:22.650
stuff twice, that's a waste you know what,
I don't need to be told what to do.

40
00:02:22.650 --> 00:02:26.540
And we'll go ahead and
we'll get the boxes, and

41
00:02:26.540 --> 00:02:31.430
like all the bosses, the boxes and
we'll map over them and like go ahead and

42
00:02:31.430 --> 00:02:33.600
get me an array of all of the widths.

43
00:02:33.600 --> 00:02:39.137
Let's get that out of way first,
so we can see,

44
00:02:39.137 --> 00:02:43.310
so cool give me an event of set with.

45
00:02:43.310 --> 00:02:45.940
Despite how many years I've been
teaching and teaching programming,

46
00:02:45.940 --> 00:02:48.410
I still can't type correctly when
people are looking at me, and

47
00:02:48.410 --> 00:02:51.420
it's never gonna change so here I am.

48
00:02:51.420 --> 00:02:55.750
So then we'll go through all the boxes,
&gt;&gt; Steve Kinney: And we'll for

49
00:02:55.750 --> 00:02:56.730
each over them.

50
00:02:57.870 --> 00:02:59.830
And for each actually takes two arguments.

51
00:02:59.830 --> 00:03:04.170
It'll take the thing you're iterating over
and it actually takes three arguments.

52
00:03:04.170 --> 00:03:06.620
It'll also take the index
that it's currently on.

53
00:03:06.620 --> 00:03:09.850
So, zero, one, two, three,
four, until it gets to the end.

54
00:03:09.850 --> 00:03:12.810
I guess, I should tell you what the third
thing is since I mentioned it takes three

55
00:03:12.810 --> 00:03:14.220
and it's not important.

56
00:03:14.220 --> 00:03:17.170
Is the third argument is
the entire array itself.

57
00:03:17.170 --> 00:03:18.030
So the boxes array.

58
00:03:19.390 --> 00:03:22.424
If anyone has questions on why
does it do that, I don't know.

59
00:03:22.424 --> 00:03:25.625
So, we got the boxes,
we go through each of them and

60
00:03:25.625 --> 00:03:28.460
then we'll say element
dot style dot width.

61
00:03:32.140 --> 00:03:36.960
And we'll go ahead and we'll say go
get wherever you were in the array.

62
00:03:36.960 --> 00:03:37.920
Multiply that by two.

63
00:03:39.940 --> 00:03:41.520
And set it like that.

64
00:03:41.520 --> 00:03:46.384
&gt;&gt; Speaker 2: Did you mean
boxes down to add on line ten?

65
00:03:46.384 --> 00:03:48.962
&gt;&gt; Steve Kinney: Yep, I was probably
too busy thinking of how I was gonna

66
00:03:48.962 --> 00:03:52.912
make a comment that I can't type in front
of people and caused that problem myself.

67
00:03:52.912 --> 00:03:54.774
All right, so let's go check it out.

68
00:03:57.302 --> 00:03:58.823
&gt;&gt; Steve Kinney: We'll go ahead,
we'll open up our tools,

69
00:03:58.823 --> 00:03:59.900
let's do another recording.

70
00:04:02.850 --> 00:04:04.825
I is not defined, let's go fix that.

71
00:04:07.040 --> 00:04:10.884
&gt;&gt; Steve Kinney: Stop
the recording while we do that.

72
00:04:13.902 --> 00:04:15.685
&gt;&gt; Steve Kinney: Call
it index both places.

73
00:04:22.251 --> 00:04:26.146
&gt;&gt; Steve Kinney: Go back to the full page,
yeah, stay and save.

74
00:04:29.004 --> 00:04:30.230
&gt;&gt; Steve Kinney: All right,
let's try it again now.

75
00:04:32.020 --> 00:04:33.084
Go ahead and we'll record.

76
00:04:41.377 --> 00:04:42.710
&gt;&gt; Steve Kinney: And
if we take a look, we can see,

77
00:04:42.710 --> 00:04:44.630
let's find the place
where they first double.

78
00:04:47.790 --> 00:04:49.120
Go, kinda zoom in there.

79
00:04:54.123 --> 00:04:56.670
&gt;&gt; Steve Kinney: And
there's a lot less happening.

80
00:04:56.670 --> 00:05:00.729
The whole thing happens even though
I'm looping over everything twice now,

81
00:05:00.729 --> 00:05:04.226
the whole thing happens in
about 13.2 milliseconds, right,

82
00:05:04.226 --> 00:05:05.551
like that's a lot less.

83
00:05:05.551 --> 00:05:10.449
And you can see the most important part
is I don't have all of those purple

84
00:05:10.449 --> 00:05:13.570
little bars, not like why is this fast?

85
00:05:13.570 --> 00:05:17.740
Because I did less stuff, right, I didn't
do this thing repeatedly of checking

86
00:05:17.740 --> 00:05:20.620
layout, recalculating style,
checking layout, recalculating style.

87
00:05:20.620 --> 00:05:25.284
The only big difference with my code is
that instead of checking each one for

88
00:05:25.284 --> 00:05:29.133
its width and then adjusting it,
I got all the widths first and

89
00:05:29.133 --> 00:05:31.146
then I adjusted all the widths.

90
00:05:31.146 --> 00:05:35.325
All right, does anyone remember that large
slide I had with all the reasons and

91
00:05:35.325 --> 00:05:38.884
one of them was calculating the styles,
right, causes a reflow.

92
00:05:38.884 --> 00:05:43.783
The simple act of like,
trying to figure out the size of something

93
00:05:43.783 --> 00:05:47.168
causes the browser to reflow the page,
and so

94
00:05:47.168 --> 00:05:52.670
I was paying that cost by checking,
updating, checking, updating.

95
00:05:52.670 --> 00:05:54.300
So let's talk a little more
about what's going on there.

