WEBVTT

1
00:00:00.110 --> 00:00:02.400
&gt;&gt; Steve Kinney: So,
you told me all layers,

2
00:00:02.400 --> 00:00:05.100
you told me I have no impact on them.

3
00:00:05.100 --> 00:00:09.086
That was really demoralizing,
you can make suggestions to the browser.

4
00:00:09.086 --> 00:00:14.019
It has its rules, it does its thing,
right, you can say,

5
00:00:14.019 --> 00:00:18.462
hey, would you consider
making this its own layer?

6
00:00:18.462 --> 00:00:22.030
Right, and they're like,
it's gonna change, I'm just telling you.

7
00:00:22.030 --> 00:00:24.980
Things are gonna change, you're not gonna
wanna do all that repainting, browser,

8
00:00:24.980 --> 00:00:26.830
I'm telling you, right?

9
00:00:26.830 --> 00:00:31.100
You can convince the browser and
recommend that it become its own layer.

10
00:00:31.100 --> 00:00:33.930
And so the way it works is a CSS
property called will-change.

11
00:00:33.930 --> 00:00:36.768
And then whatever property
you think is going to change.

12
00:00:36.768 --> 00:00:39.454
And a lot of our examples are sidebar,
we did with the transform.

13
00:00:39.454 --> 00:00:43.220
I have, every time I've used this,
I think it takes so much arguments.

14
00:00:43.220 --> 00:00:47.396
Every time I've used this one,
I'm using transform all the time.

15
00:00:47.396 --> 00:00:50.310
So that's gonna be the example that I use,

16
00:00:50.310 --> 00:00:52.170
cuz I couldn't come up with
a good reason for another one.

17
00:00:52.170 --> 00:00:54.680
All right, what's the support for
this one look like?

18
00:00:54.680 --> 00:01:01.378
IE and Edge don't support it, and you'll
be like, well, they are lagging behind.

19
00:01:01.378 --> 00:01:05.579
Actually, Edge is of the opinion that
their compositing reasons are so

20
00:01:05.579 --> 00:01:08.835
good that they don't need
your suggestions, right?

21
00:01:08.835 --> 00:01:10.947
[LAUGH] It's not like they're behind,

22
00:01:10.947 --> 00:01:15.439
that's not fair to whoever probably made
that case that I oversimplify like that.

23
00:01:15.439 --> 00:01:18.720
But we're amongst friends,
it's cool [LAUGH].

24
00:01:20.090 --> 00:01:22.790
They don't believe it's necessary, so
they have no intent on implementing it.

25
00:01:22.790 --> 00:01:24.880
And the nice part is,
this is a progressive enhancement.

26
00:01:24.880 --> 00:01:27.500
It's not like, well,
I can't use it cuz I support IE or Edge,

27
00:01:27.500 --> 00:01:28.991
it just doesn't do anything then.

28
00:01:28.991 --> 00:01:31.999
[LAUGH] Right, it's fine,
it doesn't break the web page,

29
00:01:31.999 --> 00:01:35.323
it doesn't do anything wrong,
it's just a no-op in that case.

30
00:01:35.323 --> 00:01:38.673
And then Opera Mini,
it renders your web page as an image and

31
00:01:38.673 --> 00:01:41.558
sends it to the phone, so
it doesn't do anything.

32
00:01:41.558 --> 00:01:44.840
Every time you see one of these can I
use charts, Opera Mini is always red.

33
00:01:46.370 --> 00:01:49.790
But other than that, it's got pretty good
support across the rest of the browsers.

34
00:01:49.790 --> 00:01:52.030
And like I said,
when it doesn't do anything,

35
00:01:52.030 --> 00:01:55.180
that is also fine cuz then it just
doesn't do anything, it doesn't break.

36
00:01:55.180 --> 00:01:59.920
You can use it and
browsers that support it will support it,

37
00:01:59.920 --> 00:02:01.570
browsers that don't, don't.

38
00:02:01.570 --> 00:02:05.790
There was an old hack for
this, which is translateZ.

39
00:02:05.790 --> 00:02:08.850
Which is to change the 3D
positioning of an element.

40
00:02:08.850 --> 00:02:13.700
And you can see, we're setting it to 0,
this will make it its own layer, but

41
00:02:13.700 --> 00:02:14.690
it will force it.

42
00:02:14.690 --> 00:02:18.725
will-change is a little bit better because
you make the recommendation saying,

43
00:02:18.725 --> 00:02:21.246
this may become its own layer,
I'm just telling you.

44
00:02:21.246 --> 00:02:23.565
Before, you were like,
that's its own layer, do it, and

45
00:02:23.565 --> 00:02:25.865
you've tricked the browser into doing it.

46
00:02:25.865 --> 00:02:31.285
You have this relationship of trust and
you violated it, so that's not great.

47
00:02:31.285 --> 00:02:35.821
So generally speaking, this is a hack,
this is kind of a hack, but

48
00:02:35.821 --> 00:02:40.606
it's a documented, supported,
recommended hack, so it's fine.

49
00:02:40.606 --> 00:02:42.860
Cool, so what I'm gonna do is,

50
00:02:42.860 --> 00:02:46.950
I'm gonna take that non-retina
version of the page, and

51
00:02:46.950 --> 00:02:53.520
give it the CSS property of will-change,
and we'll see what effect that has.

52
00:02:53.520 --> 00:02:58.827
&gt;&gt; Steve Kinney: So if I go in here into,
this one's called and go to style.css.

53
00:02:58.827 --> 00:03:03.829
I'm gonna tell the header,
&gt;&gt; Steve Kinney: And

54
00:03:03.829 --> 00:03:10.310
I'm gonna tell the footer the same thing.

55
00:03:10.310 --> 00:03:15.054
And I will go back,
&gt;&gt; Steve Kinney: And

56
00:03:15.054 --> 00:03:18.351
no more repaints.

57
00:03:18.351 --> 00:03:21.039
Very cool, and so it works,
like I said, you got it for

58
00:03:21.039 --> 00:03:25.189
free if you're using read to screen, cuz
the browser has made that optimization for

59
00:03:25.189 --> 00:03:27.530
you, I didn't have it, and now it exists.

60
00:03:27.530 --> 00:03:31.495
We're gonna look at a slightly more
intuitive example in a second, but

61
00:03:31.495 --> 00:03:32.427
let's go back.

62
00:03:35.466 --> 00:03:38.941
&gt;&gt; Steve Kinney: So here were
the layers before I made that change,

63
00:03:38.941 --> 00:03:41.720
here were the layers after.

64
00:03:41.720 --> 00:03:46.264
Let's do those slides two more times,
before, after, before,

65
00:03:46.264 --> 00:03:48.870
after, right, get the major point?

66
00:03:48.870 --> 00:03:53.050
Now, when we scroll the page,
that underlying layer is moving.

67
00:03:53.050 --> 00:03:56.496
The compositor is basically just
moving it, but it's not repainting it.

68
00:03:56.496 --> 00:03:57.954
We don't have to be like, hey,

69
00:03:57.954 --> 00:04:00.860
what you look like now with how
much of you's in this slide?

70
00:04:00.860 --> 00:04:04.297
We simply slide it up and
down underneath the header and the footer,

71
00:04:04.297 --> 00:04:05.877
which also aren't changing.

72
00:04:05.877 --> 00:04:09.293
And that's less work, less work is faster.

73
00:04:09.293 --> 00:04:12.752
We got to skip painting,
we got to skip layout,

74
00:04:12.752 --> 00:04:16.388
we went directly to compositor,
which is great.

75
00:04:16.388 --> 00:04:22.082
So yeah, make everything a layer, right,
seems great, layer all the things.

76
00:04:22.082 --> 00:04:25.310
Layers themselves aren't free, and
it's, again, a set of trade-offs.

77
00:04:25.310 --> 00:04:28.770
So managing layers takes a certain
amount of work on the browser's behalf.

78
00:04:28.770 --> 00:04:32.087
Each layer needs to be kept in
shared memory between the main and

79
00:04:32.087 --> 00:04:33.640
composite threads.

80
00:04:33.640 --> 00:04:38.227
When it's faster than painting,
it's great, but if you go ahead and

81
00:04:38.227 --> 00:04:40.736
you make everything a layer, [LAUGH].

82
00:04:40.736 --> 00:04:43.415
If everything is a layer,
then you have this entire thing,

83
00:04:43.415 --> 00:04:45.520
you have to keep all of that in memory.

84
00:04:45.520 --> 00:04:49.550
It's trying to help you out under
the hood, this is like putting parentheses

85
00:04:49.550 --> 00:04:53.494
around everything to try to like help
the parser in JavaScript, right?

86
00:04:53.494 --> 00:04:58.200
If you opt out of its helpful algorithms,
you've effectively made it useless.

87
00:04:58.200 --> 00:05:03.606
If everything should be optimized,
guess what, nothing is optimized.

88
00:05:03.606 --> 00:05:08.188
And our current example has a problem,
right?

89
00:05:08.188 --> 00:05:12.080
I told you, things that are transformed
automatically get their own layer, right?

90
00:05:12.080 --> 00:05:15.770
Things that are position fixed
on retina get their own layer.

91
00:05:15.770 --> 00:05:18.453
Also, it seems weird that
it's called will-change, but

92
00:05:18.453 --> 00:05:20.502
it didn't really change anything, right?

93
00:05:20.502 --> 00:05:23.995
Seems like I've kind of hiding
something from you this entire time.

94
00:05:23.995 --> 00:05:26.408
Which is,
the CSS rules are great for knowing,

95
00:05:26.408 --> 00:05:30.250
the browser's good at figuring out
something that is its own layer.

96
00:05:30.250 --> 00:05:33.970
What will-change is really useful for
is figuring out, wait,

97
00:05:33.970 --> 00:05:37.260
it wasn't its own layer before, and
shouldn't have been its own layer.

98
00:05:37.260 --> 00:05:40.630
But might need to be its own
layer very shortly, right?

99
00:05:40.630 --> 00:05:43.380
So again, we render the page,
but then JavaScript shows up and

100
00:05:43.380 --> 00:05:45.330
it's like,
I'm gonna change everything, right?

101
00:05:45.330 --> 00:05:49.180
So we know, hey, this box,
that's the example we're gonna use.

102
00:05:49.180 --> 00:05:52.120
But this element on the page,
it was static,

103
00:05:52.120 --> 00:05:54.690
but the user's about to do something.

104
00:05:54.690 --> 00:05:59.110
I am going to make it a CSS trans, I'm
gonna change the styles on it soon, right,

105
00:05:59.110 --> 00:06:00.934
you have two choices, browser.

106
00:06:00.934 --> 00:06:05.297
Either A, you can figure out all this
layer stuff at the moment I'm asking you

107
00:06:05.297 --> 00:06:07.730
to do stuff, or you can get ready, right?

108
00:06:07.730 --> 00:06:10.660
I'm gonna tell you that this box is gonna
change, this element is gonna change.

109
00:06:10.660 --> 00:06:14.510
It's not changing yet, but why don't you,
while you're not doing anything else,

110
00:06:14.510 --> 00:06:18.514
promote it to its own layer, so
when it's time to get going, you're ready?

111
00:06:18.514 --> 00:06:23.210
Right, so this is an example where
it's not super helpful, right.

112
00:06:23.210 --> 00:06:29.183
We're already transforming this sidebar in
this case, so it's already its own layer.

113
00:06:29.183 --> 00:06:35.481
But what might become more
useful is to say, all right,

114
00:06:35.481 --> 00:06:41.917
imagine that top will-change
isn't up there [LAUGH] so.

115
00:06:44.674 --> 00:06:46.574
&gt;&gt; Steve Kinney: We'll have a transition,
when they hover,

116
00:06:46.574 --> 00:06:48.930
we know that they're gonna click, right?

117
00:06:48.930 --> 00:06:50.950
When they click,
we're gonna add the open thing, right?

118
00:06:50.950 --> 00:06:54.465
We could theoretically promote it to
its own layer as soon as they click.

119
00:06:54.465 --> 00:06:57.958
But when they hover, It's likely that
they're going to click, right, so

120
00:06:57.958 --> 00:07:01.685
that's when we'll add the transform, and
we do need to clean it up afterwards.

121
00:07:01.685 --> 00:07:04.310
We'll add the transform,
then it'll be promoted to it's own layer.

122
00:07:04.310 --> 00:07:07.947
By the time they get around to clicking,
just slide that layer over.

123
00:07:07.947 --> 00:07:10.870
Right, it's a really
useful way of doing it.

