WEBVTT

1
00:00:00.030 --> 00:00:02.758
&gt;&gt; Steve Kinney: Large takeaways
from this entire section.

2
00:00:02.758 --> 00:00:04.628
All these are immediately cool, but

3
00:00:04.628 --> 00:00:07.470
I'm going to give you a pro
tip at the end of this course.

4
00:00:07.470 --> 00:00:11.180
None of these are as cool as just
shifting less JavaScript to the browser.

5
00:00:11.180 --> 00:00:15.730
Right, because the less JavaScript you
shift, the less any of this stuff matters.

6
00:00:15.730 --> 00:00:19.640
Right, but the user timing API,
the performance mark and

7
00:00:19.640 --> 00:00:23.340
performance measure, that can be super
useful in your real world applications.

8
00:00:23.340 --> 00:00:25.758
You can go ahead, and
you can drop that in right now, right,

9
00:00:25.758 --> 00:00:28.949
into parts of your application that
you're suspicious of being slow, right?

10
00:00:28.949 --> 00:00:32.410
You can do the recording,
you can see that larger I saw, and

11
00:00:32.410 --> 00:00:36.500
then you can actual actions, cuz you know
your code better than v8 does right.

12
00:00:36.500 --> 00:00:37.010
You can go ahead and

13
00:00:37.010 --> 00:00:39.980
drop that end and you can actually
meter how long is this taking.

14
00:00:39.980 --> 00:00:42.880
You can do a thing, like,
that was cool for a start of time but

15
00:00:42.880 --> 00:00:45.480
maybe the slow thing is dragging and

16
00:00:45.480 --> 00:00:49.130
dropping something in your application,
like updating the thing.

17
00:00:49.130 --> 00:00:52.670
You can actually use a timing if you
have to find out how low is this,

18
00:00:52.670 --> 00:00:54.020
is this where the hurt is?

19
00:00:54.020 --> 00:00:55.530
Maybe it is, maybe it isn't.

20
00:00:55.530 --> 00:00:59.330
And then, finally we saw that
maybe using a type system

21
00:00:59.330 --> 00:01:03.790
gives you performance gains for free.

22
00:01:03.790 --> 00:01:05.560
I think that's really helpful as well.

23
00:01:06.780 --> 00:01:07.280
Very cool.

24
00:01:08.290 --> 00:01:09.606
Let's break for lunch.

25
00:01:09.606 --> 00:01:11.280
And then we'll actually
get into the browser and

26
00:01:11.280 --> 00:01:13.490
see how everything we saw JavaScript.

27
00:01:13.490 --> 00:01:17.490
How does this interact with HTML and
CSS and the dom and all that crazy stuff.

28
00:01:17.490 --> 00:01:19.690
We'll actually see how web pages are born.

29
00:01:19.690 --> 00:01:21.970
A stork actually brings them to
the browser, it's very cool.

30
00:01:21.970 --> 00:01:25.770
From the cloud, it descends out of
the cloud and brings them, it's very cool.

31
00:01:25.770 --> 00:01:26.280
All right.

