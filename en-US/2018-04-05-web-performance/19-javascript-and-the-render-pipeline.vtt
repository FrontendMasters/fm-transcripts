WEBVTT

1
00:00:00.140 --> 00:00:04.948
&gt;&gt; Steve Kinney: Except.
&gt;&gt; Steve Kinney: That gets you to the very

2
00:00:04.948 --> 00:00:12.381
first page render, then our friend
comes along and changes stuff, right.

3
00:00:12.381 --> 00:00:14.018
That'll get you to a static page,

4
00:00:14.018 --> 00:00:17.469
if you're a content site that will
get you most of the way there, right.

5
00:00:17.469 --> 00:00:23.575
Again, see the lazy approach
to web performance,

6
00:00:23.575 --> 00:00:26.704
new title for the course.

7
00:00:26.704 --> 00:00:31.157
So likely that is not the only time
that you are going to end up rendering

8
00:00:31.157 --> 00:00:32.377
the page, right.

9
00:00:32.377 --> 00:00:35.006
And most user interfaced based

10
00:00:35.006 --> 00:00:39.970
applications you're moving
stuff around a lot, right.

11
00:00:39.970 --> 00:00:43.424
This is the large majority
of what is happening there.

12
00:00:43.424 --> 00:00:46.584
And if you are doing weird
stuff with objects and

13
00:00:46.584 --> 00:00:51.030
managing state the end result is
you wanna display a UI, right.

14
00:00:51.030 --> 00:00:54.680
You want to change the UI based on all of
this other JavaScript calculation that

15
00:00:54.680 --> 00:00:55.464
you're doing.

16
00:00:55.464 --> 00:00:59.376
So an incomplete list of things that
JavaScript can do that impact rendering

17
00:00:59.376 --> 00:01:02.510
performance is they can change
the class of an object.

18
00:01:02.510 --> 00:01:05.935
What does that mean,
does the class two x size, right, it,

19
00:01:05.935 --> 00:01:09.511
does it change the dimensions of it,
does it change the color?

20
00:01:09.511 --> 00:01:11.089
We don't know what that does so

21
00:01:11.089 --> 00:01:14.748
it means we need to do some part of
the rendering process all over again.

22
00:01:14.748 --> 00:01:18.354
Did we change the inline styles of
the objects is effectively the same as

23
00:01:18.354 --> 00:01:20.471
the changing the class, except darker.

24
00:01:20.471 --> 00:01:23.745
And adding or
removing elements to the page,

25
00:01:23.745 --> 00:01:27.200
you might need to re-lay out the page,
right.

26
00:01:27.200 --> 00:01:28.637
These are all things that can happen.

27
00:01:28.637 --> 00:01:32.292
And for all the steps we saw before,
okay, the DOM,

28
00:01:32.292 --> 00:01:36.010
the CSS object model,
the render tree, right.

29
00:01:36.010 --> 00:01:40.275
We effectively mostly keep around the DOM
and sometimes the CSS object model.

30
00:01:40.275 --> 00:01:42.740
If you change style sheets
that's gotta be recalculated.

31
00:01:42.740 --> 00:01:44.756
But everything else that render
tree needs to be remade.

32
00:01:44.756 --> 00:01:48.566
When the render tree needs to be remade
we probably need to re-layout the page.

33
00:01:48.566 --> 00:01:51.830
When layout changes we probably
need to repaint the page, right.

34
00:01:51.830 --> 00:01:57.651
So anytime we have these big effects we
end up having to redo a lot of this work.

35
00:01:57.651 --> 00:02:00.390
So it's not a one-time thing,
it's a many times thing.

36
00:02:00.390 --> 00:02:02.119
And there are some things you
can do that really get you that.

37
00:02:02.119 --> 00:02:05.777
Remember that red bar along the top
when we were in the introduction and

38
00:02:05.777 --> 00:02:07.578
we could say you could peg the CPU?

39
00:02:07.578 --> 00:02:11.615
You can do a lot of stuff in this process
because they're all sharing the main

40
00:02:11.615 --> 00:02:12.571
thread, right.

41
00:02:12.571 --> 00:02:15.981
Your painting, your layout,
your JavaScript are all competing for

42
00:02:15.981 --> 00:02:17.935
the same computer resources, right.

43
00:02:17.935 --> 00:02:21.150
So kinda keeping those all
together is important.

44
00:02:21.150 --> 00:02:22.728
So this is the render pipeline.

45
00:02:22.728 --> 00:02:26.490
Javascript can change the styles
of a page by either adding or

46
00:02:26.490 --> 00:02:31.454
removing classes, which could change
the geometry and the layout of the page.

47
00:02:31.454 --> 00:02:33.548
That could change the colors.

48
00:02:33.548 --> 00:02:37.220
Like, okay, when they hover I wanna change
this button from white to blue, right.

49
00:02:37.220 --> 00:02:39.899
That's gonna need you to repaint and

50
00:02:39.899 --> 00:02:45.701
then you need to send all that new data
over to the GPU to get done, right, cool.

51
00:02:45.701 --> 00:02:49.356
So each one of those steps triggers
everything change the style,

52
00:02:49.356 --> 00:02:53.780
change the computed styles all
that recalculation has to happen.

53
00:02:53.780 --> 00:02:58.109
Anything could change that may or
may not have changed the geometry

54
00:02:58.109 --> 00:03:01.751
those things are now different,
send it to GPU, cool.

55
00:03:01.751 --> 00:03:05.300
You don't always need to do all
of those every time, right.

56
00:03:05.300 --> 00:03:08.330
In the event that you're just
changing the background color or

57
00:03:08.330 --> 00:03:09.995
the opacity of an object, right.

58
00:03:09.995 --> 00:03:12.497
Do you need to re-lay out the page?

59
00:03:12.497 --> 00:03:14.740
Probably not, right.

60
00:03:14.740 --> 00:03:19.130
So there are some times, especially with
stuff like opacity and CSS transforms,

61
00:03:19.130 --> 00:03:21.942
where you can actually skip
even the paint process.

62
00:03:21.942 --> 00:03:24.300
You can skip different parts of this.

63
00:03:24.300 --> 00:03:27.036
If the window resizes,
none of the styles have changed so

64
00:03:27.036 --> 00:03:30.004
you can theoretically keep
the style calculations, right.

65
00:03:30.004 --> 00:03:33.423
It's just maybe the flexbox has different
rules you might need to re-layout or

66
00:03:33.423 --> 00:03:34.000
re-paint.

67
00:03:34.000 --> 00:03:37.123
So you don't always need
to do all of them, right.

68
00:03:37.123 --> 00:03:39.625
Sometimes you can skip a few of them,
right.

69
00:03:39.625 --> 00:03:43.760
And that's what this whole
section is about, right.

70
00:03:43.760 --> 00:03:45.303
Because not doing stuff,

71
00:03:45.303 --> 00:03:49.659
skipping entire sections will always
be faster than doing them, right.

72
00:03:49.659 --> 00:03:55.327
And the same corollary applies, right,
of not doing stuff is faster than doing

73
00:03:55.327 --> 00:04:00.930
stuff, doing stuff more than you need
to can also be problematic, right.

74
00:04:00.930 --> 00:04:03.141
So we want to skip
whatever we can skip and

75
00:04:03.141 --> 00:04:06.931
we definitely don't wanna do anything
more than we need to, right.

76
00:04:06.931 --> 00:04:11.865
Again, see the lazy approach to web
performance, new title for the course.

