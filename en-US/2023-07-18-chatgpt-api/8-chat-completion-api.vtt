WEBVTT

1
00:00:00.000 --> 00:00:03.576
So now we'll go to API reference.

2
00:00:03.576 --> 00:00:06.420
In API reference, you can, of course,

3
00:00:06.420 --> 00:00:09.776
see things that you can
do with different APIs.

4
00:00:09.776 --> 00:00:17.126
Because we are going to work with ChatGPT,
we are looking for Chat, not Completions.

5
00:00:17.126 --> 00:00:21.206
Completions is for
using other models within OpenAI.

6
00:00:21.206 --> 00:00:26.047
So within Chat,
you can see how that works.

7
00:00:26.047 --> 00:00:29.981
So basically, to talk to the API,

8
00:00:29.981 --> 00:00:35.416
we need to make a post
request to that endpoint.

9
00:00:35.416 --> 00:00:40.311
And within the headers,
we have a header for authorization,

10
00:00:40.311 --> 00:00:43.334
where we are going to send the API key.

11
00:00:43.334 --> 00:00:50.531
That's how OpenAI will know who we are so
it can charge the tokens to us.

12
00:00:50.531 --> 00:00:54.375
So here we can see the example in curl.

13
00:00:54.375 --> 00:00:57.887
So we can copy and
paste this into the console,

14
00:00:57.887 --> 00:01:00.690
we just need to paste the OpenAI key.

15
00:01:00.690 --> 00:01:05.105
But also, you can click here and
select python or node.js.

16
00:01:05.105 --> 00:01:10.517
And you can see the code ready for
copy and paste on Python or node.js.

17
00:01:10.517 --> 00:01:12.640
Why not JavaScript client-side?

18
00:01:12.640 --> 00:01:16.384
Because as I mentioned before,
it's a bad idea, but anyway,

19
00:01:16.384 --> 00:01:17.878
we will try it right now.

20
00:01:17.878 --> 00:01:23.287
So if we try that version, let me paste

21
00:01:23.287 --> 00:01:28.535
that directly here in a text format.

22
00:01:28.535 --> 00:01:33.901
I'm just going to copy and
paste the OPENAI_KEY key and

23
00:01:33.901 --> 00:01:37.565
paste it here where it says, the KEY.

24
00:01:37.565 --> 00:01:42.758
So I want you to see this part,
it's a JSON that

25
00:01:42.758 --> 00:01:48.361
we are sending through
post to OpenAI's server.

26
00:01:48.361 --> 00:01:53.308
It has some properties, for example,
we are selecting which model that we want.

27
00:01:53.308 --> 00:02:00.246
3.5, that's the cheapest ChatGPT model,
it's called gpt-3.5-turbo.

28
00:02:00.246 --> 00:02:01.373
That's the name.

29
00:02:01.373 --> 00:02:06.476
If you want gpt-4, it's just gpt-4,
the expensive one.

30
00:02:06.476 --> 00:02:11.396
Let's stay with 3.5-turbo because we
are not going to make too complex queries.

31
00:02:11.396 --> 00:02:16.516
And then look at this, we need to send
messages because we are talking to chat.

32
00:02:16.516 --> 00:02:21.615
messages is always an array,
and we need to pass objects

33
00:02:21.615 --> 00:02:26.615
with role and content,
role content, role content.

34
00:02:26.615 --> 00:02:31.336
For example, remember that within
the playground, we have a system message,

35
00:02:31.336 --> 00:02:34.865
where we were explaining who you are,
or who the system is.

36
00:02:34.865 --> 00:02:39.608
If we want that,
it's something that we pass in the array.

37
00:02:39.608 --> 00:02:46.186
It's role system, That's the name,
and we pass a content.

38
00:02:46.186 --> 00:02:52.763
And we say you are, I don't need
to close this here, like there.

39
00:02:54.770 --> 00:02:58.287
You are a computer answering questions.

40
00:02:58.287 --> 00:03:04.220
It's not mandatory,
right, so it's optional.

41
00:03:04.220 --> 00:03:10.325
But this is just giving more context
to the model to make a better answer.

42
00:03:10.325 --> 00:03:14.245
So this is role user, so

43
00:03:14.245 --> 00:03:18.361
the user is saying, Hi,

44
00:03:18.361 --> 00:03:24.634
do you know what to do in Minneapolis on

45
00:03:24.634 --> 00:03:30.000
Saturday, Question mark?

46
00:03:30.000 --> 00:03:32.298
That's the prompt, okay?

47
00:03:32.298 --> 00:03:36.905
So if we copy and
paste this into a terminal,

48
00:03:41.624 --> 00:03:43.489
And we got the answer.

49
00:03:43.489 --> 00:03:46.954
The answer says, that is the JSON here.

50
00:03:46.954 --> 00:03:53.290
In fact, let's try to get this
JSON answer into VS Code so

51
00:03:53.290 --> 00:03:57.785
we can look it better, we can format it.

52
00:03:57.785 --> 00:04:03.104
So this is the answer that we
receive from the OpenAI server.

53
00:04:03.104 --> 00:04:09.594
It says the model that is using
is gpt-3.5-turbo version 0301.

54
00:04:09.594 --> 00:04:13.689
How many tokens we use for the prompt, and

55
00:04:13.689 --> 00:04:17.560
how many tokens we use for completion?

56
00:04:17.560 --> 00:04:23.431
In total, 130 tokens,
it was US $2 per million.

57
00:04:23.431 --> 00:04:24.601
Wow, do the math.

58
00:04:24.601 --> 00:04:27.784
It is still pretty cheap,
okay, in that interaction.

59
00:04:27.784 --> 00:04:32.747
And then we receive an array of choices,
where you have a message saying,

60
00:04:32.747 --> 00:04:34.677
the assistant is the model.

61
00:04:34.677 --> 00:04:37.504
And so we Hello, there are many things
you can do in Minneapolis on Saturday,

62
00:04:37.504 --> 00:04:38.819
here are the few recommendations.

63
00:04:38.819 --> 00:04:43.780
One, visit the iconic sculpture garden at
the blah, blah, blah, blah, blah, blah,

64
00:04:43.780 --> 00:04:44.585
blah, blah.

65
00:04:44.585 --> 00:04:50.834
So that's the basics of
how we deal with this.

66
00:04:50.834 --> 00:04:56.946
So now we need to just mix this
into our app.js folder for

67
00:04:56.946 --> 00:05:01.368
the chat, because remember, so here,

68
00:05:01.368 --> 00:05:05.681
it's here, we were trying to do this.

69
00:05:05.681 --> 00:05:10.945
So I wanna say, Hello, send,
and I wanna see that in the UI.

70
00:05:10.945 --> 00:05:14.692
So that's what I'm going to do right now.

71
00:05:14.692 --> 00:05:21.385
So to do that, let's open,
we in the chat folder, the app.js file.

72
00:05:21.385 --> 00:05:24.427
And there is a function, sendChat.

73
00:05:24.427 --> 00:05:28.973
That is already reading the prompt
from the user in a variable, and

74
00:05:28.973 --> 00:05:30.443
there is a TODO here.

75
00:05:30.443 --> 00:05:32.553
So we actually need to make a query.

76
00:05:32.553 --> 00:05:38.211
Remember, let's say WARNING,
we are doing this

77
00:05:38.211 --> 00:05:44.420
client-side with a big security risk,
just for fun.

78
00:05:44.420 --> 00:05:49.220
In fact, this is pretty good if you wanna
do an interface locally in your computer

79
00:05:49.220 --> 00:05:53.475
that is playing with GPT, but
don't publish this with the key, okay?

80
00:05:53.475 --> 00:05:56.856
We will do it better on the next example.

81
00:05:56.856 --> 00:05:58.803
So we need to make a fetch.

82
00:05:58.803 --> 00:06:05.585
So we need to create a response object
that will await for a fetch API.

83
00:06:05.585 --> 00:06:11.158
The endpoint that we want, by the way,
I do have it here as well,

84
00:06:11.158 --> 00:06:16.344
the fetch function, but
I'm going to do it from a scratch.

85
00:06:16.344 --> 00:06:20.177
The endpoint is this one, that's the URL.

86
00:06:20.177 --> 00:06:21.296
Okay, make sense?

87
00:06:21.296 --> 00:06:23.057
And then we need to pass some arguments.

88
00:06:23.057 --> 00:06:26.961
In fact,
I think that they were already here.

89
00:06:26.961 --> 00:06:32.116
I guess just just for
the sake of doing this faster.

90
00:06:32.116 --> 00:06:35.205
Don't wanna waste too much time,
too much of your time.

91
00:06:35.205 --> 00:06:37.482
So that's the endpoint, and

92
00:06:37.482 --> 00:06:42.225
then I need to pass an object
where we say, the method is POST.

93
00:06:42.225 --> 00:06:47.681
So I want to send the POST, and
though this is the header and the body.

94
00:06:47.681 --> 00:06:52.464
We don't have that data yet, we need to
create it, so we will do it in a minute.

95
00:06:52.464 --> 00:06:58.869
So for the headers, if we look at this
version, it's not just the content type.

96
00:06:58.869 --> 00:07:05.619
We also need to pass
Authorization: Bearer and the key.

97
00:07:05.619 --> 00:07:09.979
So I need to also add that,
because if not, it's not gonna work.

98
00:07:09.979 --> 00:07:17.405
So it's Authorization,
that's the name of the property.

99
00:07:19.252 --> 00:07:22.919
And we can use backtick here and

100
00:07:22.919 --> 00:07:28.562
use the OPENAI_KEY there
with all the warnings

101
00:07:28.562 --> 00:07:33.935
that I gave you about
doing this on frontend.

102
00:07:33.935 --> 00:07:35.536
Okay, make sense?

103
00:07:35.536 --> 00:07:37.084
So what about the data?

104
00:07:37.084 --> 00:07:39.773
I need to create that data object.

105
00:07:39.773 --> 00:07:44.127
So I need to create the data object
that actually matches what we saw here.

106
00:07:44.127 --> 00:07:48.089
It's not so complicated,
it's just that object, so I can copy and

107
00:07:48.089 --> 00:07:49.281
paste that object.

108
00:07:49.281 --> 00:07:52.585
It's the model and an array of messages.

109
00:07:52.585 --> 00:07:58.332
I can pass the system message or not,
it's one system message per query, right?

110
00:07:58.332 --> 00:08:04.043
And instead of, Hi,
do you know what to do in Minneapolis,

111
00:08:04.043 --> 00:08:08.384
I need to take what is
coming as the prompt that

112
00:08:08.384 --> 00:08:11.837
the user typed in our form control.

113
00:08:11.837 --> 00:08:13.963
Okay, like so.

114
00:08:13.963 --> 00:08:17.318
So we have the prompt,
and that's the array.

115
00:08:17.318 --> 00:08:19.728
And then we await for the response.

116
00:08:19.728 --> 00:08:25.641
And because it's a JSON response, a JSON
response needs to be parsed as JSON.

117
00:08:25.641 --> 00:08:32.909
So we are going to say, response.json, and
we are going to await for that response.

118
00:08:32.909 --> 00:08:38.928
Let's call that json, and let's do
a console.log to see if that works.

119
00:08:38.928 --> 00:08:40.499
Does it make sense?

120
00:08:40.499 --> 00:08:44.436
So we're just making the same request,
but from here.

121
00:08:44.436 --> 00:08:50.887
So I'm going to open the console
to have that on hand and

122
00:08:50.887 --> 00:08:56.370
say, Hi, send, and we received the answer.

123
00:08:56.370 --> 00:09:03.532
So the object is there,
now we need to dig into these objects and

124
00:09:03.532 --> 00:09:09.087
get into choices sub 0
dot message dot content.

125
00:09:09.087 --> 00:09:11.443
That's the actual message.

126
00:09:11.443 --> 00:09:17.689
So we actually need to get that,
so it was great.

127
00:09:17.689 --> 00:09:21.753
The message from the, let's say,

128
00:09:21.753 --> 00:09:25.557
computer from GPT is the object.

129
00:09:25.557 --> 00:09:30.513
So json.choices sub 0.

130
00:09:30.513 --> 00:09:35.959
Let's go again here,
choices sub 0 dot message dot content.

131
00:09:40.046 --> 00:09:45.602
And now, what I need to do is
to attach that into my HTML.

132
00:09:45.602 --> 00:09:50.688
So we can go quickly to HTML and
see that we have a ul, so it's an italic.

133
00:09:50.688 --> 00:09:54.000
So we're going to add list items
pretty quickly to that ul.

134
00:09:54.000 --> 00:09:59.531
So something that I can do is
query quickly the vanilla.js.

135
00:09:59.531 --> 00:10:03.336
We will take the only ul that we have
in the page, we can add an ID or

136
00:10:03.336 --> 00:10:04.184
a class name.

137
00:10:04.184 --> 00:10:09.098
And we can say that we are going to

138
00:10:09.098 --> 00:10:13.839
add a new li with that message.

139
00:10:13.839 --> 00:10:17.260
Okay, so
we send the message like this, and

140
00:10:17.260 --> 00:10:23.095
maybe something that we can do is also
add our own message before in prompt.

141
00:10:23.095 --> 00:10:26.677
And because it's our own message,

142
00:10:26.677 --> 00:10:32.660
let's put this into a bold HTML so
we can make a separation.

143
00:10:32.660 --> 00:10:37.368
So now, here I will say,
Hi, and if you look there,

144
00:10:37.368 --> 00:10:44.441
there are some nice emojis through CSS
there, hi, how can I assist you today?

145
00:10:44.441 --> 00:10:48.056
Let me show you also, is it working
the way how we judge GPT clone?

146
00:10:48.056 --> 00:10:49.071
We'll see.

147
00:10:49.071 --> 00:10:52.506
So what if I ask a question such as,

148
00:10:52.506 --> 00:10:57.253
do you know something
about frontend masters?

149
00:11:02.698 --> 00:11:06.036
Let's wait, Frontend Masters is
an online learning platform,

150
00:11:06.036 --> 00:11:08.232
blah, blah, blah, blah, blah, blah.

