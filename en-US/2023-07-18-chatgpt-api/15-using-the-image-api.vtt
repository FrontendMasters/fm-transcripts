WEBVTT

1
00:00:00.000 --> 00:00:04.401
And then we need the image side,
and this is using the DALI API,

2
00:00:04.401 --> 00:00:06.160
the Image Creation API.

3
00:00:06.160 --> 00:00:12.975
So let's go to the documentation,
the API reference,

4
00:00:12.975 --> 00:00:17.472
and we're going to look for images.

5
00:00:17.472 --> 00:00:23.309
Here we can just take
the example on Node.js.

6
00:00:23.309 --> 00:00:27.333
We already have all the declaration
we just need to copy this

7
00:00:30.695 --> 00:00:32.544
something like that.

8
00:00:32.544 --> 00:00:35.439
You can see it's a response a waiting for

9
00:00:35.439 --> 00:00:38.600
a cute baby see other
bonobo first the size.

10
00:00:38.600 --> 00:00:43.991
We can make it smaller because
we don't need it that big.

11
00:00:43.991 --> 00:00:50.660
And then what we need is to get the prompt
that we are sending from the app.

12
00:00:50.660 --> 00:00:57.420
So similar to what we have done before,
we are going to get,

13
00:00:57.420 --> 00:01:02.033
let's see first What's going on here?

14
00:01:02.033 --> 00:01:08.526
So we're going to say,
the body, From the request,

15
00:01:08.526 --> 00:01:13.099
the body, the prompt,
it's actually body dot prompt.

16
00:01:13.099 --> 00:01:16.652
And we can send in one.

17
00:01:16.652 --> 00:01:20.694
If you look at the API Let's go back here.

18
00:01:20.694 --> 00:01:23.306
The n is the number of images to generate.

19
00:01:23.306 --> 00:01:26.720
I don't want two, I want one.

20
00:01:26.720 --> 00:01:30.267
Because we are not going
to see them manually.

21
00:01:30.267 --> 00:01:35.495
So let's cross our fingers and
send the image directly to the user.

22
00:01:35.495 --> 00:01:39.652
And finally, what we're going to
receive is not actually the image.

23
00:01:39.652 --> 00:01:42.559
So it's not the image bytes.

24
00:01:42.559 --> 00:01:45.124
We're going to receive the URL.

25
00:01:45.124 --> 00:01:51.190
So we're going to respond back to
the client, back to the front-end,

26
00:01:51.190 --> 00:01:55.245
a JSON with the URL Taking
from their response.

27
00:01:55.245 --> 00:01:58.573
But their response is the data,

28
00:01:58.573 --> 00:02:03.265
the data subzero dot URL,
how do I know that?

29
00:02:03.265 --> 00:02:05.229
It should be in the sample.

30
00:02:07.505 --> 00:02:10.715
Somewhere more down.

31
00:02:10.715 --> 00:02:15.560
Because that's how you get into the URL,
like that.

32
00:02:15.560 --> 00:02:19.690
So you get the data.

33
00:02:19.690 --> 00:02:23.448
I think that should be good.

34
00:02:23.448 --> 00:02:23.984
Okay.
So

35
00:02:23.984 --> 00:02:27.051
the only difference that we are changing.

36
00:02:27.051 --> 00:02:32.260
The function name that behind the scenes,
what's going on here is

37
00:02:32.260 --> 00:02:37.669
that it's changing the endpoint and
the arguments and that's all.

38
00:02:37.669 --> 00:02:44.040
So the library is just changing the
endpoint and making a normal HTTP request.

39
00:02:44.040 --> 00:02:48.946
Well before testing this, we need
to solve to box that we have first.

40
00:02:48.946 --> 00:02:53.178
In our prompt we are passing
the list of ingredients but

41
00:02:53.178 --> 00:02:56.952
that's actually an object
because it's JSON.

42
00:02:56.952 --> 00:03:04.298
So because this is a string, we should
stringify the list of ingredients.

43
00:03:04.298 --> 00:03:10.870
And also it's not request.ingredients,
it's body.ingredients.

44
00:03:10.870 --> 00:03:13.585
And also we need to do something similar,

45
00:03:13.585 --> 00:03:17.473
stringify the recipe because
the recipe is also an object.

46
00:03:17.473 --> 00:03:24.093
So I'm going to stringify
the recipe sample and

47
00:03:24.093 --> 00:03:28.241
now we are ready to test this.

48
00:03:28.241 --> 00:03:32.109
So back in our
Cooking Masters application,

49
00:03:32.109 --> 00:03:38.233
I will type a list of ingredients
that I have just as chicken, avocado.

50
00:03:38.233 --> 00:03:44.489
Bread, butter and eggs and
I will get a recipe with AI.

51
00:03:44.489 --> 00:03:48.465
And now, our AI Chef is working.

52
00:03:48.465 --> 00:03:53.448
This will take some seconds because
actually it's going to GPT first to get

53
00:03:53.448 --> 00:03:58.369
the recipe and after that, It's going
to get robbed the image from Dali.

54
00:03:58.369 --> 00:04:06.805
And finally, we have a beautiful chicken
avocado sandwich that has its own image.

55
00:04:06.805 --> 00:04:09.984
And you can see it's part
of the same data structure.

56
00:04:09.984 --> 00:04:11.908
So it's actually the UI.

57
00:04:11.908 --> 00:04:14.874
It's getting the right name.

58
00:04:14.874 --> 00:04:20.084
Type ingredients, the amount of
minutes that it takes I can get in.

59
00:04:20.084 --> 00:04:23.055
And I can see the ingredients and

60
00:04:23.055 --> 00:04:28.893
I can start cooking my chicken
avocado sandwich in four steps.

61
00:04:28.893 --> 00:04:31.018
And I can go one by one.

62
00:04:31.018 --> 00:04:37.195
So we actually got and
a structure data that was embeddable

63
00:04:37.195 --> 00:04:42.878
by the artificial intelligence
based on user input.

