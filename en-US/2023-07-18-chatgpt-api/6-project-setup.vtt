WEBVTT

1
00:00:00.200 --> 00:00:02.690
Okay, so
it's time to start touching things.

2
00:00:02.690 --> 00:00:09.220
So on gitHub.com/firtman/chatgpt-webdev.

3
00:00:09.220 --> 00:00:12.660
We have the repo that
we will be using today.

4
00:00:12.660 --> 00:00:16.608
That repo has already some HTML and
some very basic JavaScript and

5
00:00:16.608 --> 00:00:18.660
a very basic web server.

6
00:00:18.660 --> 00:00:23.700
It's not yet connected to open AI so
we're going to connect that first.

7
00:00:23.700 --> 00:00:28.199
In the repo you will find the slides,
a samples folder and

8
00:00:28.199 --> 00:00:30.990
the cookie masters folder.

9
00:00:30.990 --> 00:00:36.603
Cookie masters is an app that we will
use at the end of today's course,

10
00:00:36.603 --> 00:00:39.550
to actually end haste with AI.

11
00:00:39.550 --> 00:00:41.820
It's actually pretty cool, so stay there.

12
00:00:41.820 --> 00:00:46.853
So you will see how we can actually
use artificial intelligence to

13
00:00:46.853 --> 00:00:51.795
provide directly something cool
such as for example a recipe and

14
00:00:51.795 --> 00:00:57.306
images from that recipe from ingredients
that you have in your at home.

15
00:00:57.306 --> 00:01:01.527
But that's for later, we're going to
start working with a sample folder.

16
00:01:01.527 --> 00:01:07.560
So I will just open that folder directly,
so it's my root.

17
00:01:07.560 --> 00:01:12.740
So I open the folder and we have on
package.json, the list of dependencies.

18
00:01:12.740 --> 00:01:16.215
We are just going to use Express.JS,
course for

19
00:01:16.215 --> 00:01:20.620
making the API available cross-domain,
and OpenAI.

20
00:01:20.620 --> 00:01:24.751
That's a specific library that
will make our life easier when we

21
00:01:24.751 --> 00:01:26.440
are talking with OpenAI.

22
00:01:27.490 --> 00:01:31.004
Then we have a server that you
can see that is pretty empty,

23
00:01:31.004 --> 00:01:33.630
it's a very basic express js server.

24
00:01:33.630 --> 00:01:38.744
If you don't have experience with
this you can just go to the frontend

25
00:01:38.744 --> 00:01:43.750
massive library and
get one of the node.js basic courses.

26
00:01:43.750 --> 00:01:47.844
Anyway, it's pretty simple,
but we're going to to create,

27
00:01:47.844 --> 00:01:51.610
we have a public folder
that we are serving.

28
00:01:51.610 --> 00:01:57.233
And then we have some endpoints already
set up that are empty /api/chat,

29
00:01:57.233 --> 00:02:03.670
/api/general, /api/image, and
/api/recipe, they are completely empty.

30
00:02:03.670 --> 00:02:10.380
Within the public folder, we have two
sections, the chat and the playground.

31
00:02:11.640 --> 00:02:16.000
So they both have HTML, CSS,
and pretty basic JavaScript, so

32
00:02:16.000 --> 00:02:19.100
nothing really, really fancy.

33
00:02:19.100 --> 00:02:24.372
Just start the server,
I'm going to open a terminal and

34
00:02:24.372 --> 00:02:28.758
run npm start And

35
00:02:28.758 --> 00:02:35.221
it's not working because I need to run npm
install first, to install my dependencies.

36
00:02:35.221 --> 00:02:40.699
After the dependencies are ready,
we can start the server and

37
00:02:40.699 --> 00:02:45.640
now, local host 3000 will open my server.

38
00:02:45.640 --> 00:02:53.222
So I'm going to look at Hal 3000, it says
404 because we can get into [INAUDIBLE].

39
00:02:53.222 --> 00:02:58.303
And this is a very basic
interface to create a chat, clone,

40
00:02:58.303 --> 00:03:03.540
so we're going to create
our own version of ChatGPT.

41
00:03:03.540 --> 00:03:06.836
Just to understand how the API works.

