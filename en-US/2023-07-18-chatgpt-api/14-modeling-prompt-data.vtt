WEBVTT

1
00:00:00.188 --> 00:00:05.017
Now, it's time for our last live sample,

2
00:00:05.017 --> 00:00:09.320
and I promised you to work with an app.

3
00:00:09.320 --> 00:00:13.979
So I will keep my server up and
running as it is right now,

4
00:00:13.979 --> 00:00:18.359
and I'm opening a new window,
a new VS Code window.

5
00:00:18.359 --> 00:00:21.217
And I'm going to open another app,

6
00:00:23.082 --> 00:00:27.738
That is the one that you
have as CookingMasters.

7
00:00:30.048 --> 00:00:33.072
This app is separate just to
show you that, in this case,

8
00:00:33.072 --> 00:00:34.908
it's going to use my web service.

9
00:00:34.908 --> 00:00:38.725
It can be in a different server,
different domain, completely different.

10
00:00:38.725 --> 00:00:43.680
In fact, it doesn't contain a node.js
server, so I can use, in this case,

11
00:00:43.680 --> 00:00:46.899
I'm going to use the plugin
that I have in VS Code.

12
00:00:46.899 --> 00:00:50.669
It's an extension for a web server.

13
00:00:50.669 --> 00:00:53.636
So I'm going to use a server on,
this is Live Server.

14
00:00:53.636 --> 00:00:55.637
That's the one I'm using.

15
00:00:55.637 --> 00:00:57.857
I'm going to open a server
on a different port.

16
00:00:57.857 --> 00:01:04.086
So now I have this app in one port,
and the other up there.

17
00:01:04.086 --> 00:01:06.694
This app is known as Cooking Masters.

18
00:01:06.694 --> 00:01:10.255
The idea of the app is to
help us while we're cooking,

19
00:01:10.255 --> 00:01:15.499
the idea is that I wanna cook fish tacos
with pickled onions, and I click here.

20
00:01:15.499 --> 00:01:18.838
I can see the ingredients,
and I can start cooking.

21
00:01:18.838 --> 00:01:23.866
So I can go step by step
with the cook process.

22
00:01:23.866 --> 00:01:27.162
While I'm cooking, I'm looking at my app,

23
00:01:27.162 --> 00:01:31.864
I can add timers, like that,
different timers while cooking.

24
00:01:31.864 --> 00:01:35.213
So that's an app, it's a web app,
it's pretty simple.

25
00:01:35.213 --> 00:01:43.479
It's an app, all the recipes are coming
from a JSON file, or it can be a database.

26
00:01:43.479 --> 00:01:47.497
But how to integrate this
with artificial intelligence,

27
00:01:47.497 --> 00:01:50.044
how to integrate this with ChatGPT?

28
00:01:50.044 --> 00:01:51.704
Well, here we have an idea,

29
00:01:51.704 --> 00:01:55.453
what if I can enter here a list of
ingredients that I have at home?

30
00:01:55.453 --> 00:01:59.891
I have tomato or tomato, I have eggs,

31
00:01:59.891 --> 00:02:05.163
I have chicken, butter, bread, carrots,

32
00:02:05.163 --> 00:02:11.710
and I get the recipe with AI,
that sounds interesting.

33
00:02:11.710 --> 00:02:17.557
And not just the recipe,
I can ask OpenAI to grade

34
00:02:17.557 --> 00:02:22.558
the photo of that recipe, like that one.

35
00:02:22.558 --> 00:02:26.598
That's the goal, can we achieve that?

36
00:02:26.598 --> 00:02:32.303
And with the same structure, so we can
inject that recipe in the system and

37
00:02:32.303 --> 00:02:37.104
it will work as if it's a recipe
coming from our own database.

38
00:02:37.104 --> 00:02:41.043
So all the client-side part
is already there, waiting for

39
00:02:41.043 --> 00:02:43.024
us to finish the server part.

40
00:02:43.024 --> 00:02:49.829
So if we'll look here at scripts &gt; app.js,
there is a place where we can

41
00:02:49.829 --> 00:02:55.409
see that it's taking the ingredients
from the text area and

42
00:02:55.409 --> 00:03:00.338
it's going to localhost 3000/api/recipe.

43
00:03:00.338 --> 00:03:04.933
So we need to go to our server
with OpenAI implement dot.

44
00:03:04.933 --> 00:03:08.201
And then after we get the recipe,

45
00:03:08.201 --> 00:03:13.112
it will ask for an image,
and how the image works?

46
00:03:13.112 --> 00:03:15.126
The image work with a prompt.

47
00:03:15.126 --> 00:03:19.082
So probably, you have played
with creating the image with AI.

48
00:03:19.082 --> 00:03:21.163
So you create the prompt, and this case,

49
00:03:21.163 --> 00:03:24.153
the prompt will be a high-quality
photograph of the meal.

50
00:03:24.153 --> 00:03:29.117
And the name of the recipe and
the description of the recipe

51
00:03:29.117 --> 00:03:33.583
that was actually created by the AI,
by GPT, okay?

52
00:03:33.583 --> 00:03:39.706
So GPT will create actually the prompt for
the image creation.

53
00:03:39.706 --> 00:03:44.103
So what we need to do is go and
create then the server.

54
00:03:44.103 --> 00:03:48.309
So I'm going back to the other project,
and in our server,

55
00:03:48.309 --> 00:03:50.169
we need to work with that.

56
00:03:50.169 --> 00:03:53.190
Well, first,
do we need to see something new?

57
00:03:53.190 --> 00:03:58.767
Well, the image part, the image part is
new, we haven't used that API before,

58
00:03:58.767 --> 00:04:02.060
but for the recipe,
it's just the same thing.

59
00:04:04.050 --> 00:04:08.785
The only thing, the only important
part is to work with the prompt, so

60
00:04:08.785 --> 00:04:11.369
what I need is to work with the prompt.

61
00:04:11.369 --> 00:04:17.499
I need a good prompt so I can get the
recipe in the format that I'm expecting.

62
00:04:17.499 --> 00:04:19.750
In fact,
what's the format that I'm expecting?

63
00:04:19.750 --> 00:04:24.780
Let's look at the other recipes
available in the data folder.

64
00:04:24.780 --> 00:04:28.482
So this is how it looks like,
it's a JSON and a slug.

65
00:04:28.482 --> 00:04:34.043
That's for the router, the URL,
a name, a type, a duration in minutes,

66
00:04:34.043 --> 00:04:39.981
an image, a description, the list of
ingredients in this particular format.

67
00:04:39.981 --> 00:04:44.913
And this steps, that is, an array with
name, description, and some steps,

68
00:04:44.913 --> 00:04:48.501
they have a timer,
because it's saying, for example,

69
00:04:48.501 --> 00:04:52.947
here, I wanna do something for
30 minutes and it has a timer of 30.

70
00:04:52.947 --> 00:05:00.356
Can we make GPT to create something like
this from a list of random ingredients?

71
00:05:00.356 --> 00:05:03.814
That's the challenge, okay?

72
00:05:03.814 --> 00:05:07.248
So I'm going to copy one of these objects

73
00:05:07.248 --> 00:05:11.396
because we can use that as
a sample in our prompt.

74
00:05:11.396 --> 00:05:17.216
Okay, so I'm going to copy that
just to have here somewhere.

75
00:05:17.216 --> 00:05:24.184
I will grade the constants for
the recipe sample, okay, I will copy that.

76
00:05:24.184 --> 00:05:27.787
That's okay, yeah, it's okay,
I can just minimize that one,

77
00:05:27.787 --> 00:05:29.567
I can collapse that one, okay?

78
00:05:29.567 --> 00:05:30.779
So how to do that?

79
00:05:30.779 --> 00:05:35.980
Well, actually, it will be the same
as the general thing, the only

80
00:05:35.980 --> 00:05:41.840
thing that we are going to work is with
the content that is not body.prompt.

81
00:05:41.840 --> 00:05:45.060
We are going to get from the body
probably the list of ingredients.

82
00:05:47.690 --> 00:05:50.420
In fact, let's check if that's the case.

83
00:05:50.420 --> 00:05:53.709
So I'm going to app.js again, and

84
00:05:53.709 --> 00:05:59.639
I'm sending here to the first
request the list of ingredients.

85
00:05:59.639 --> 00:06:03.206
Okay, so ingredients is
the key of the JSON objects,

86
00:06:03.206 --> 00:06:06.550
I'm going back here and
say this is ingredients.

87
00:06:06.550 --> 00:06:10.590
I have a typo, ingredients, like so.

88
00:06:10.590 --> 00:06:14.095
And now,
what I need is to create the prompt,

89
00:06:14.095 --> 00:06:17.799
and this is going to be
probably a large prompt.

90
00:06:17.799 --> 00:06:22.146
So I will say that we'll create
the prompt, I will use a backticks so

91
00:06:22.146 --> 00:06:24.220
I can be multiline, like that.

92
00:06:24.220 --> 00:06:30.279
But first, we can go to our playground and
play first there to see if we get that,

93
00:06:30.279 --> 00:06:35.081
or just be confident enough and
try a prompt directly, right?

94
00:06:35.081 --> 00:06:42.215
So first, we need to pass some data, or
we need to pass specific instructions.

95
00:06:42.215 --> 00:06:50.034
And also, we could add here,
A role for the system.

96
00:06:50.034 --> 00:06:54.311
Remember, in our chat system,
we can pass a role.

97
00:06:54.311 --> 00:06:58.669
The role is who you are or
who the GPT model should be, okay?

98
00:06:58.669 --> 00:07:03.654
So we can say that you are a cooking

99
00:07:03.654 --> 00:07:08.285
expert that creates recipes or

100
00:07:08.285 --> 00:07:12.916
healthy recipes or whatever,

101
00:07:12.916 --> 00:07:19.159
vegan recipes, whatever you wanna add.

102
00:07:19.159 --> 00:07:20.879
So and then we have the prompt.

103
00:07:20.879 --> 00:07:25.334
And the prompt is, for example,

104
00:07:25.334 --> 00:07:29.472
create a recipe with the list of

105
00:07:29.472 --> 00:07:34.421
ingredients defined in the markup.

106
00:07:34.421 --> 00:07:41.601
And then we can put ingredients,
we create the markup.

107
00:07:41.601 --> 00:07:47.347
Again, we don't need to explain the
markup, the model will understand that,

108
00:07:47.347 --> 00:07:51.919
and put the ingredients that we
are receiving like that there.

109
00:07:51.919 --> 00:07:57.839
And then we can also say, again,
the more specific you are, the better.

110
00:07:57.839 --> 00:08:04.819
You can include typical
ingredients found in a kitchen,

111
00:08:04.819 --> 00:08:08.747
such as, say, salt, pepper,

112
00:08:08.747 --> 00:08:13.693
condiments, because yeah, the user,

113
00:08:13.693 --> 00:08:18.796
probably, will never say, I have salt.

114
00:08:18.796 --> 00:08:22.477
What else?

115
00:08:22.477 --> 00:08:27.699
Remember, we have here ingredients,
that's an input from the user.

116
00:08:27.699 --> 00:08:32.889
We need to be very careful with that
because the user might be saying anything.

117
00:08:32.889 --> 00:08:37.221
They even can be trying to
inject the prompt and say,

118
00:08:37.221 --> 00:08:43.339
forget about everything that was said
before, now I want you to do x and y.

119
00:08:43.339 --> 00:08:48.317
But also,
we need to do something like this,

120
00:08:48.317 --> 00:08:55.915
if the ingredients is empty, or
if the list of ingredients is empty,

121
00:08:55.915 --> 00:09:00.369
or you can't find ingredients inside,

122
00:09:00.369 --> 00:09:06.269
just answer with false
without any other character.

123
00:09:06.269 --> 00:09:09.903
So if the list of ingredients is empty,
or I have a typo here.

124
00:09:09.903 --> 00:09:12.919
By the way, what happens if I left off?

125
00:09:12.919 --> 00:09:17.419
That is wrong,
the model will probably get it anyway.

126
00:09:17.419 --> 00:09:22.984
I mean, we should do it better,
but actually, if we have a typo,

127
00:09:22.984 --> 00:09:28.161
most of the time,
GPT will recognize what you meant anyway.

128
00:09:28.161 --> 00:09:33.077
In fact, there are people
researching right now as we

129
00:09:33.077 --> 00:09:36.365
speak in a way to save tokens, how?

130
00:09:36.365 --> 00:09:42.187
They found the way that these models are
pretty good understanding compressed text.

131
00:09:42.187 --> 00:09:46.532
For example,
if you write the text without vowels,

132
00:09:46.532 --> 00:09:51.481
or if you compress the words,
they understand you anyway.

133
00:09:51.481 --> 00:09:58.137
So there are people playing with prompt
compression algorithms to save you money.

134
00:09:58.137 --> 00:10:01.108
That makes sense, that's why.

135
00:10:01.108 --> 00:10:03.789
Anyway, I also have another typo here, but

136
00:10:03.789 --> 00:10:07.773
I think that's a brain typo because
ingredients in Spanish, and

137
00:10:07.773 --> 00:10:11.340
I speak Spanish, is ingredientes,
that's the e there.

138
00:10:11.340 --> 00:10:14.012
I'm not sure if it's the autocompletion or
is my brain.

139
00:10:14.012 --> 00:10:18.341
Anyway, so we were making sure
that if the list of ingredients

140
00:10:18.341 --> 00:10:23.337
that we are passing is not good enough or
is not the list of ingredients,

141
00:10:23.337 --> 00:10:27.448
we want just the false,
we don't want the value, right?

142
00:10:27.448 --> 00:10:30.628
So what else?

143
00:10:30.628 --> 00:10:34.319
If you have found a recipe,

144
00:10:34.319 --> 00:10:38.652
send the output in JSON format as

145
00:10:38.652 --> 00:10:44.119
the following sample in triple quotes.

146
00:10:44.119 --> 00:10:47.047
Then I use triple quotes and

147
00:10:47.047 --> 00:10:52.271
I pass the sample that
was called recipeSample.

148
00:10:52.271 --> 00:10:57.330
I can add more instructions,
the more instructions you add,

149
00:10:57.330 --> 00:11:00.061
the better results you will get.

150
00:11:00.061 --> 00:11:04.602
By the way,
because I'm using also template string,

151
00:11:04.602 --> 00:11:08.759
I may wanna change this
maybe in three asterisks.

152
00:11:08.759 --> 00:11:11.866
Just because it's JavaScript and
you will complain,

153
00:11:11.866 --> 00:11:13.900
I need to escape those characters.

154
00:11:13.900 --> 00:11:17.299
I can use double quotes,
triple double quotes.

155
00:11:17.299 --> 00:11:22.324
So okay, we can try with that and

156
00:11:22.324 --> 00:11:25.309
see what happens.

157
00:11:25.309 --> 00:11:29.564
So that's the prompt,
I'm sending the prompt as content.

158
00:11:29.564 --> 00:11:34.870
You can see, this is large, and
the answer might take some time.

159
00:11:34.870 --> 00:11:39.020
So maybe 30 seconds, so
we need to be patient here.

160
00:11:39.020 --> 00:11:44.359
We can try here and do console.log
of the prompt if you wanna see it,

161
00:11:44.359 --> 00:11:47.462
at least the first time in the console.

162
00:11:47.462 --> 00:11:51.834
And also, we may wanna see
the answer in the console.

163
00:11:51.834 --> 00:11:53.750
We don't need to, but just in case.

164
00:11:55.949 --> 00:11:57.866
Like so, okay,

