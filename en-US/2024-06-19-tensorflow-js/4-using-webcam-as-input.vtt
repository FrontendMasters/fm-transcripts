WEBVTT

1
00:00:00.280 --> 00:00:04.141
So that's for
the part one of the first project.

2
00:00:04.141 --> 00:00:08.228
But then I thought I wanted to kind of
show you a little bit another twist to

3
00:00:08.228 --> 00:00:09.370
that thing as well.

4
00:00:09.370 --> 00:00:13.234
Let's say that, for example, your user
does not have an image in the desktop,

5
00:00:13.234 --> 00:00:15.380
but they want something
a bit more dynamic.

6
00:00:15.380 --> 00:00:18.885
So what you can do is
you can use the Webcam.

7
00:00:18.885 --> 00:00:24.193
So what we're gonna do here,
if you just comment

8
00:00:24.193 --> 00:00:28.991
out part 1 and
below there is part 2 and 3.

9
00:00:28.991 --> 00:00:30.729
There's gonna be as well, in part 3,

10
00:00:30.729 --> 00:00:34.220
we're gonna use a different model just
to show you a little bit how that works.

11
00:00:34.220 --> 00:00:38.504
But here in this section, so
in part 2 of the first project,

12
00:00:38.504 --> 00:00:42.291
we're going to use an image
content from the Webcam.

13
00:00:42.291 --> 00:00:47.373
And the last thing we need to do
is to change part1.js to part2.

14
00:00:47.373 --> 00:00:52.003
Some of the code is going to be similar
but I thought that just having a new

15
00:00:52.003 --> 00:00:56.961
file might be better so that you can
keep everything that you've worked on.

16
00:00:56.961 --> 00:01:01.049
So, if we now maybe we might
be able to copy some line.

17
00:01:01.049 --> 00:01:03.578
So let's open part 2
will be an empty file.

18
00:01:03.578 --> 00:01:06.487
So we're going to use cocossd as well.

19
00:01:06.487 --> 00:01:10.222
So you can copy your import
of TensorFlow.js and

20
00:01:10.222 --> 00:01:12.691
of the model so we can copy that.

21
00:01:12.691 --> 00:01:16.114
And then let's think a little
bit about our logic.

22
00:01:16.114 --> 00:01:20.890
So again, if we go to the utils file, and
you scroll down a little bit, I have some

23
00:01:20.890 --> 00:01:25.765
helper functions to cover the part of the
code is not related to TensorFlow, Jas.

24
00:01:25.765 --> 00:01:31.054
So you might have used that before if
you've if you've built a web app that

25
00:01:31.054 --> 00:01:36.022
had access to the camera, so
we're using the Get User Media web API.

26
00:01:36.022 --> 00:01:40.813
And the way that it works is you
call navigator.media.getusermedia.

27
00:01:40.813 --> 00:01:43.339
There's some,
then parameters that you can pass.

28
00:01:43.339 --> 00:01:45.858
So we don't need the order in this case,
so order is false.

29
00:01:45.858 --> 00:01:49.389
And then video here,
we just pass it a width and height for

30
00:01:49.389 --> 00:01:51.979
the size of our Webcam feed on the screen.

31
00:01:51.979 --> 00:01:56.136
And then when it's ready, we have
a stream and we can get different tracks.

32
00:01:56.136 --> 00:01:59.113
We're just gonna get the first one and
when the video is loaded,

33
00:01:59.113 --> 00:02:01.386
we're going to actually
play it in the browser.

34
00:02:01.386 --> 00:02:04.139
So you're gonna be able to
see yourself in the camera.

35
00:02:04.139 --> 00:02:09.137
And then, so for the webcam feed,
it is like a video element,

36
00:02:09.137 --> 00:02:13.382
but the COCO-SSD model is
like an image detection.

37
00:02:13.382 --> 00:02:18.277
So what we're gonna do, basically
a video is like a sequence of pictures.

38
00:02:18.277 --> 00:02:20.772
So what we're gonna be able to
do is to click a button and

39
00:02:20.772 --> 00:02:23.177
it's gonna take a picture
of the current live feed.

40
00:02:23.177 --> 00:02:26.516
And then we're going to give that
to the machine learning model.

41
00:02:26.516 --> 00:02:32.091
So here, I just wrote like a take
picture helper function as well,

42
00:02:32.091 --> 00:02:34.780
where all it basically does is,

43
00:02:34.780 --> 00:02:39.460
there is like a predict button
that is in IHTML here, and

44
00:02:39.460 --> 00:02:44.167
we're going to basically
predict Webcam and capture.

45
00:02:44.167 --> 00:02:49.633
So here, the button Webcam is to just
start the webcam, then pause is just pause

46
00:02:49.633 --> 00:02:55.193
it and capture, and predict is going to
actually predict what's on the screen.

47
00:02:55.193 --> 00:02:57.942
The video is going to be the Webcam and

48
00:02:57.942 --> 00:03:03.809
Canvas is actually going to display
the image that I captured from the camera.

49
00:03:03.809 --> 00:03:08.257
What we're gonna do is once we call
that function to take a picture,

50
00:03:08.257 --> 00:03:10.765
we're going to draw it on the canvas.

51
00:03:10.765 --> 00:03:14.873
And here when we call the predict button,
also I'm gonna pass a callback with

52
00:03:14.873 --> 00:03:19.441
the actual image from that canvas and it's
going to call the machine learning model.

53
00:03:19.441 --> 00:03:20.471
So we're gonna write that.

54
00:03:20.471 --> 00:03:21.794
This is just a helper function,

55
00:03:21.794 --> 00:03:24.153
it will make more sense once
we actually write some code.

56
00:03:24.153 --> 00:03:29.696
So as I said before, we have imported
TensorFlowjs and the cocoSsd model.

57
00:03:29.696 --> 00:03:34.641
So first of all, because we need to
actually enable the camera we're going to

58
00:03:34.641 --> 00:03:36.171
get the camera button.

59
00:03:36.171 --> 00:03:39.253
So if we right camera button, and

60
00:03:39.253 --> 00:03:44.876
we're just going to get the element,
element by ID Webcam.

61
00:03:44.876 --> 00:03:49.023
So here we have our webcam button,
and at the same time,

62
00:03:49.023 --> 00:03:53.877
let's also get the capture button,
and given the idea of pause,

63
00:03:53.877 --> 00:03:58.377
but maybe calling it capture
would have made more sense, but

64
00:03:58.377 --> 00:04:02.552
it was basically that post the video and
take a capture.

65
00:04:02.552 --> 00:04:06.765
So we have our webcam button,
we have our capture button, and

66
00:04:06.765 --> 00:04:10.993
we are going to need our video
element as well from the webcam.

67
00:04:10.993 --> 00:04:17.415
So we have const video, and
then document, getElement.

68
00:04:17.415 --> 00:04:22.049
I mean, I'm probably easier to
do querySelector A video so

69
00:04:22.049 --> 00:04:24.933
that's gonna be our video element.

70
00:04:24.933 --> 00:04:28.618
And as we did before, we before we can use
the model, we need to load it as well.

71
00:04:28.618 --> 00:04:35.518
So we can recreate a function called
init to kind of get started everything.

72
00:04:35.518 --> 00:04:41.129
And here,
let's redeclare a model variable as well.

73
00:04:41.129 --> 00:04:43.396
So, that's very similar
to what we did before.

74
00:04:43.396 --> 00:04:50.765
And it's kind of oops,
nope, nada, no cookies.

75
00:04:50.765 --> 00:04:54.765
To show you that if you get started
with one way of doing things,

76
00:04:54.765 --> 00:04:58.401
you can actually update your
code with minimal changes.

77
00:04:58.401 --> 00:05:00.651
And I'll show you that as well in part 3.

78
00:05:00.651 --> 00:05:04.612
But here, when we're gonna call that init
function, the model is going to load, but

79
00:05:04.612 --> 00:05:06.387
at the moment we have no interaction.

80
00:05:06.387 --> 00:05:10.355
So the first thing that we need to do is
actually enable the camera on the screen.

81
00:05:10.355 --> 00:05:14.614
So we have a webcam button, so
we can have an onclick event.

82
00:05:14.614 --> 00:05:19.828
So webcam button, then onclick,
we're gonna have a function And

83
00:05:19.828 --> 00:05:26.264
we are gonna call the start webcam util
and we're gonna pass it our video element.

84
00:05:26.264 --> 00:05:29.324
And this time it did not auto import so

85
00:05:29.324 --> 00:05:33.076
I'm gonna import it from
my utils file okay so

86
00:05:33.076 --> 00:05:38.706
when we click the webcam button it's
gonna start the camera maybe at

87
00:05:38.706 --> 00:05:43.879
this point we can even check in
the browser that it works fine.

88
00:05:43.879 --> 00:05:44.964
So if I refresh,

89
00:05:44.964 --> 00:05:49.934
you shouldn't have to rerun the terminal
like it should be live reloading.

90
00:05:49.934 --> 00:05:54.574
So if I click on the webcam,
it might ask you for blocking or

91
00:05:54.574 --> 00:06:00.050
allowing the camera, so
you have to allow it and then no camera.

92
00:06:00.050 --> 00:06:05.299
Okay, but at the moment capture,
there's no event associated with it.

93
00:06:05.299 --> 00:06:09.572
So at the moment we should just have the
webcam trans on when you click the webcam

94
00:06:09.572 --> 00:06:10.100
button.

95
00:06:10.100 --> 00:06:14.656
So I'm just going to go back to the code,
so what we wanna do next, as I said,

96
00:06:14.656 --> 00:06:17.866
the image detection model
takes in an image as input,

97
00:06:17.866 --> 00:06:20.464
so we need to actually capture that image.

98
00:06:20.464 --> 00:06:25.730
So we can add an event, an onclick
event to the capture button as well.

99
00:06:25.730 --> 00:06:28.167
And then we have on click.

100
00:06:28.167 --> 00:06:33.097
And if you remember the take
picture helper function as well

101
00:06:33.097 --> 00:06:38.136
take picture and
then we're gonna import it from the utils.

102
00:06:38.136 --> 00:06:40.851
It's a function and
if we go back to the utils file,

103
00:06:40.851 --> 00:06:45.149
this take picture function gets the video
element, and our callback function,

104
00:06:45.149 --> 00:06:47.441
that's going to be the predict function.

105
00:06:47.441 --> 00:06:49.261
So we have our video element, and

106
00:06:49.261 --> 00:06:52.781
here the same way that we kind of
did it in the previous exercise.

107
00:06:52.781 --> 00:06:57.492
We're passing predict, but
we have not kind of written it yet.

108
00:06:57.492 --> 00:07:02.111
So here, we can now move on to
writing our predict function is

109
00:07:02.111 --> 00:07:06.549
gonna be very similar actually,
if you want to go faster,

110
00:07:06.549 --> 00:07:11.620
you can even go back here,
copy the predict function from part 1,

111
00:07:11.620 --> 00:07:16.627
and then copy it over in part 2,
and that's the exact same code.

112
00:07:16.627 --> 00:07:20.480
So all we need to do at this point
is call our init function here,

113
00:07:20.480 --> 00:07:25.372
actually I mean, we might not have
necessarily needed the init function here.

114
00:07:25.372 --> 00:07:28.519
I just kind of kept the same
structure as I had before.

115
00:07:28.519 --> 00:07:32.328
I wrote show result, but
I did not import it from and

116
00:07:32.328 --> 00:07:34.904
I don't know why there's a pink.

117
00:07:34.904 --> 00:07:38.690
Okay, so I turn on the Webcam again,
capture, and

118
00:07:38.690 --> 00:07:41.781
if I could predict, I should be a person?

119
00:07:41.781 --> 00:07:46.280
Yes, prediction, person,
and then probability 0.91.

120
00:07:46.280 --> 00:07:51.596
So it's 91% sure that on
the screen I am a person.

121
00:07:51.596 --> 00:07:54.931
So then you can have a bit of fun with
trying to predict something else.

122
00:07:54.931 --> 00:07:58.459
So I do not have much with me
right now and I have a phone.

123
00:07:58.459 --> 00:08:00.954
Maybe I can try to put
the phone on camera and

124
00:08:00.954 --> 00:08:03.323
see if it will detect that it's a phone.

125
00:08:03.323 --> 00:08:06.290
If I move myself out and
then I put my phone,

126
00:08:06.290 --> 00:08:10.006
[LAUGH] I don't know what's
going to come out of here.

127
00:08:10.006 --> 00:08:11.618
So a remote.

128
00:08:11.618 --> 00:08:12.655
I mean, it's not too bad.

129
00:08:12.655 --> 00:08:17.215
A phone can be a remote and
probability is 0.92.

130
00:08:17.215 --> 00:08:21.438
So technically, it kind of looks
like it could be a TV remote.

131
00:08:21.438 --> 00:08:25.556
But that's basically as well how you can
use a webcam feed to take a still of

132
00:08:25.556 --> 00:08:29.409
the video and give it to a machine
learning model, like the exact same

133
00:08:29.409 --> 00:08:34.016
machine learning model, but find different
ways of interacting with it as well.

134
00:08:34.016 --> 00:08:35.680
&gt;&gt; There's collapse and chat.

135
00:08:35.680 --> 00:08:36.208
&gt;&gt; Really?

136
00:08:36.208 --> 00:08:40.532
Well, thank you,
[LAUGH] I think if you remember them,

137
00:08:40.532 --> 00:08:43.549
I'm just gonna stop the camera here.

138
00:08:43.549 --> 00:08:45.731
So this is what I used for this project.

139
00:08:45.731 --> 00:08:49.097
It was also like what I showed you
at the beginning, it's a website.

140
00:08:49.097 --> 00:08:53.414
Turn on the camera, I go around and
I take pictures, it gives me a label.

141
00:08:53.414 --> 00:08:56.171
And then I would decide, it's kind
of asking me, what is it made of?

142
00:08:56.171 --> 00:08:58.218
And it's like, well, it's plastic.

143
00:08:58.218 --> 00:09:00.227
So then it will tell Tell me
plastic goes in like this bin.

144
00:09:00.227 --> 00:09:04.785
But again, it depends on which
country you're in cuz the bins.

145
00:09:04.785 --> 00:09:08.156
I think when I was in Australia, the time
the yellow bin was the recycling bin.

146
00:09:08.156 --> 00:09:09.456
But here I think colors are different.

147
00:09:09.456 --> 00:09:12.451
&gt;&gt; And what model did you use for
that one?

148
00:09:12.451 --> 00:09:16.048
&gt;&gt; It was either Mobilenet or Coco-ssd.

149
00:09:16.048 --> 00:09:17.608
COCO-SSD, actually I have both here.

150
00:09:17.608 --> 00:09:20.597
May I have tried with both them and
then picked It's one.

151
00:09:20.597 --> 00:09:27.103
But if we look,
I built that years ago, COCO-SSD.

152
00:09:27.103 --> 00:09:29.329
Okay, so I built I built exactly the same.

153
00:09:29.329 --> 00:09:32.051
And here, I don't know what to
look at this code is very old.

154
00:09:32.051 --> 00:09:37.042
[LAUGH] So maybe let's not look at six,
seven years old code.

155
00:09:37.042 --> 00:09:39.349
But that's the type of things
that you can do with images.

156
00:09:39.349 --> 00:09:41.039
So, in the context right now,

157
00:09:41.039 --> 00:09:44.617
you might not be thinking right
away what you can build with this.

158
00:09:44.617 --> 00:09:49.733
But there was another application
that someone else builds where, for

159
00:09:49.733 --> 00:09:55.457
example, you had a tool to generate alt
tags for images kind of automatically.

160
00:09:55.457 --> 00:09:59.025
So it could do a first pass for
you and then as a human is probably

161
00:09:59.025 --> 00:10:03.556
veterans to still kind of check if the alt
tag that is generated is correct, and

162
00:10:03.556 --> 00:10:07.901
if you just add some details, but
that's one idea of a tool that was built.

163
00:10:07.901 --> 00:10:13.558
And at some point there was a tool that
was built that was called nsfw.js,

164
00:10:13.558 --> 00:10:15.392
like not safe for work.

165
00:10:15.392 --> 00:10:20.008
I will not Google that right now, but it
was a tool basically to kind of tell you

166
00:10:20.008 --> 00:10:23.712
if an image that was uploaded
somewhere was not safe for work.

167
00:10:23.712 --> 00:10:28.371
And that could be when I stumbled upon
this project, it would actually would have

168
00:10:28.371 --> 00:10:31.795
been useful in my previous life
when I was in advertising and

169
00:10:31.795 --> 00:10:36.248
sometimes you have brands that run
competitions online and they tell users,

170
00:10:36.248 --> 00:10:38.600
I put pictures and win soap or whatever.

171
00:10:38.600 --> 00:10:40.160
And obviously people pick pictures,

172
00:10:40.160 --> 00:10:42.852
but sometimes you can't control
what they're going to upload.

173
00:10:42.852 --> 00:10:44.852
You only have to do
the check manually later.

174
00:10:44.852 --> 00:10:47.999
And a tool like that could have
done a first pass as well and for

175
00:10:47.999 --> 00:10:51.965
a human to not have to necessarily see
pictures that they don't want to see.

176
00:10:51.965 --> 00:10:56.732
And what was interesting with that model
is that it wasn't telling you necessarily

177
00:10:56.732 --> 00:11:01.586
a label about what was in the picture, but
it was telling you more of, is it obscene?

178
00:11:01.586 --> 00:11:02.861
Is it neutral?

179
00:11:02.861 --> 00:11:04.996
Is it a fun or something like that?

180
00:11:04.996 --> 00:11:09.798
And you you could build your application
so that if what comes out of the modal

181
00:11:09.798 --> 00:11:14.001
is obscene or nudity, then you could
kind of like have a little flag

182
00:11:14.001 --> 00:11:18.755
in your application that was maybe
this image, isn't quite what we want.

183
00:11:18.755 --> 00:11:19.666
Yes question.

184
00:11:19.666 --> 00:11:24.853
&gt;&gt; Kristen and Cat said he got it
working and took a picture of his cat.

185
00:11:24.853 --> 00:11:28.165
And his cat is 72% sure it was a cat.

186
00:11:28.165 --> 00:11:29.684
&gt;&gt; Maybe it's only half a cat.

187
00:11:29.684 --> 00:11:32.288
I don't know.
[LAUGH] Well, maybe it was, I mean,

188
00:11:32.288 --> 00:11:37.224
because what happened is that sometimes
depending on how much space the cat is or

189
00:11:37.224 --> 00:11:40.686
the person or
whatever object is taking in the picture,

190
00:11:40.686 --> 00:11:45.548
as well as sometimes if you're closer
than technically in terms of pixels that

191
00:11:45.548 --> 00:11:48.226
you're taking more space in the picture.

192
00:11:48.226 --> 00:11:53.605
If I was a person but I was far away,
then in terms of the way that the model

193
00:11:53.605 --> 00:11:58.733
looks at the picture, it's just
really a long range of pixel data.

194
00:11:58.733 --> 00:12:01.349
And if you're very far,
then it might look like, okay,

195
00:12:01.349 --> 00:12:04.033
what's the biggest thing in
the picture and what is that?

196
00:12:04.033 --> 00:12:09.026
So depending on where the cat was or maybe
you just didn't like that particular cat.

197
00:12:09.026 --> 00:12:12.461
But it was still you know
70% smaller than 0.5?

