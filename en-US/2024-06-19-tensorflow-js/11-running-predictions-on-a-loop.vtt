WEBVTT

1
00:00:00.080 --> 00:00:04.110
So we could do const loop and
it's gonna be an async function.

2
00:00:06.110 --> 00:00:10.721
And inside it we're going to,
the way that they do it and

3
00:00:10.721 --> 00:00:17.090
they have like a webcam.update
function to update the webcam frame.

4
00:00:17.090 --> 00:00:19.574
So that's the way that they
do it with this library So

5
00:00:19.574 --> 00:00:22.291
you have to call webcam.update
every time that we loop.

6
00:00:22.291 --> 00:00:27.213
And when the camera is updated, we need
to predict what's on the screen, right?

7
00:00:27.213 --> 00:00:32.173
So we're also going to await a predict
function that we have not written yet,

8
00:00:32.173 --> 00:00:33.023
but we will.

9
00:00:34.033 --> 00:00:37.201
And in an example here actually,

10
00:00:37.201 --> 00:00:43.468
let's leave it like this for
now, i want to try something.

11
00:00:43.468 --> 00:00:46.861
If it doesn't work, I'll tell you what
I want you to try and I will do it, but

12
00:00:46.861 --> 00:00:48.468
first, let's leave it like this.

13
00:00:48.468 --> 00:00:52.987
So we have a request animation frame,
it calls the loop function,

14
00:00:52.987 --> 00:00:55.731
it updates the webcam frame and it runs or

15
00:00:55.731 --> 00:01:00.919
it calls a predict function that we
have not written yet, so let's find it.

16
00:01:00.919 --> 00:01:06.890
Okay, so predict function again,
that will be an async function,

17
00:01:06.890 --> 00:01:14.690
okay, so here in the predict function that
will look similar to what we did before.

18
00:01:14.690 --> 00:01:21.009
So we know that when we call predict or
detective re-transportation,

19
00:01:21.009 --> 00:01:27.906
so we can have a prediction is
the variable and here we're gonna await.

20
00:01:27.906 --> 00:01:35.546
We have our model loaded so it's available
and then we in this example it is predict.

21
00:01:35.546 --> 00:01:38.772
So predict, but
we need to pass it something and

22
00:01:38.772 --> 00:01:43.531
because we declared our webcam
variable at the top, we at this point,

23
00:01:43.531 --> 00:01:48.305
should be ready to have the canvas
again to actually give it the image.

24
00:01:48.305 --> 00:01:52.826
I don't actually know what's in
just the webcam object here, but

25
00:01:52.826 --> 00:01:57.684
I think canvas is what we want because
we only want the canvas snapshot.

26
00:01:57.684 --> 00:02:01.643
Okay, So we have predictions here and
maybe at this point,

27
00:02:01.643 --> 00:02:04.658
let's log that and see what happens.

28
00:02:04.658 --> 00:02:09.262
So we can go a bit further later
because I think if I remember well,

29
00:02:09.262 --> 00:02:14.623
what's gonna come back is not only
the single prediction of what it thinks,

30
00:02:14.623 --> 00:02:19.564
either right or left, but
it's gonna come back with both labels, but

31
00:02:19.564 --> 00:02:22.630
the probability is going to be different.

32
00:02:22.630 --> 00:02:28.054
And then we're going to be able to extract
the one with the highest probability,

33
00:02:28.054 --> 00:02:33.450
so at this point, let me check that
there's no error, there is no error.

34
00:02:33.450 --> 00:02:39.952
So if you click on start,
it should, it did not do anything.

35
00:02:42.384 --> 00:02:44.868
Failed to parse model JSON response.

36
00:02:44.868 --> 00:02:50.738
So instead of running npm run start in
the terminal, run npm watch instead.

37
00:02:50.738 --> 00:02:54.437
So I think that I had two different
comments here where one of them

38
00:02:54.437 --> 00:02:58.128
is using a normal npm parcel
index html that we had before.

39
00:02:58.128 --> 00:03:02.575
But I had some issues with If
either loading like local file

40
00:03:02.575 --> 00:03:07.586
that's not served as the route
is not that, it's like outside.

41
00:03:07.586 --> 00:03:09.709
So let's run npm run watch,

42
00:03:09.709 --> 00:03:15.741
that's gonna just run a simple python
server with the on local host, 1234.

43
00:03:15.741 --> 00:03:20.940
So in the part one, the JS where we are,
so below predict I do think that

44
00:03:20.940 --> 00:03:25.793
you have to call again,
window.requestAnimationFrame loop,

45
00:03:25.793 --> 00:03:31.172
because I think what happened here is
that it enabled the webcam and it ran

46
00:03:31.172 --> 00:03:37.519
a prediction on like the first frame that
it saw but then it doesn't keep running.

47
00:03:37.519 --> 00:03:44.405
So let's try let's try that yeah.

48
00:03:44.405 --> 00:03:47.305
Okay, and now that works better
,and then you have continuously

49
00:03:47.305 --> 00:03:48.894
like all the stuff in the browsing.

50
00:03:48.894 --> 00:03:52.682
What you see here is that you do get
the an array with both your labels, so

51
00:03:52.682 --> 00:03:56.616
right and left but what you see here
is that the probability is different.

52
00:03:56.616 --> 00:03:59.688
So we're gonna have to write
a bit more code to only return

53
00:03:59.688 --> 00:04:02.120
the highest probability because of course,

54
00:04:02.120 --> 00:04:05.640
i want to know if it's 92% sure
that I'm tilting my head left,

55
00:04:05.640 --> 00:04:10.652
then I don't really necessarily care
about getting the right label as well.

56
00:04:10.652 --> 00:04:14.822
So I'm just gonna refresh that.

57
00:04:14.822 --> 00:04:18.342
So we can pick backup where we
console log our predictions and

58
00:04:18.342 --> 00:04:23.241
we're just gonna do again that's like the
part of code that we're gonna right now is

59
00:04:23.241 --> 00:04:26.431
not necessarily like it's
not TensorFlow specific.

60
00:04:26.431 --> 00:04:30.706
It's like how to get the maximum
prediction in an array and

61
00:04:30.706 --> 00:04:34.761
there's probably other ways to write this.

62
00:04:34.761 --> 00:04:39.590
But what I'm gonna do, we're gonna create

63
00:04:39.590 --> 00:04:44.290
a variable called topPredictionIndex and

64
00:04:44.290 --> 00:04:49.380
that is going to be the maximum so
Math.max and

65
00:04:49.380 --> 00:04:55.515
inside we're going to spread
our predictions array and

66
00:04:55.515 --> 00:04:59.813
we're going to map through it.

67
00:04:59.813 --> 00:05:03.863
And only look at the max of
the probability property.

68
00:05:05.183 --> 00:05:10.213
Okay, so again,
maybe there's better ways to do this.

69
00:05:10.213 --> 00:05:15.373
But again, because the predictions
array comes back as, [INAUDIBLE],

70
00:05:15.373 --> 00:05:19.848
you don't have to write
the comments that I'm writing here.

71
00:05:19.848 --> 00:05:25.360
But because it comes back as an array
of objects with class and then for

72
00:05:25.360 --> 00:05:30.399
example, write probability 0.2 and
then the same object,

73
00:05:30.399 --> 00:05:35.933
but with the left property, so
it goes back continuously like that.

74
00:05:37.333 --> 00:05:42.246
What we're doing here is that we are doing
like a map operation to kinda isolate

75
00:05:42.246 --> 00:05:46.423
the probability property and
we're doing math.max on this one.

76
00:05:46.423 --> 00:05:50.059
It should be returning the actually,
sorry,

77
00:05:50.059 --> 00:05:55.353
I called the index but
it's just top prediction should be fine.

78
00:05:55.353 --> 00:05:58.576
So it's going to return the maximum
probability but at this point,

79
00:05:58.576 --> 00:06:01.570
it's not the way that I wrote it,
again, could be better, but

80
00:06:01.570 --> 00:06:06.052
at this point it's going to return
the probability, not the whole object.

81
00:06:06.052 --> 00:06:13.288
So then the way I did it is to then
create a top prediction index and

82
00:06:13.288 --> 00:06:18.112
then loop through the predictions array.

83
00:06:19.232 --> 00:06:23.254
I'm gonna find the index of 5 and

84
00:06:23.254 --> 00:06:32.269
we want the index of the object in
the array that has that probability.

85
00:06:32.269 --> 00:06:39.013
So I probably over complicated it,
but it works in for now that's enough,

86
00:06:39.013 --> 00:06:45.466
so we're gonna isolate probability and
we're want to, okay?

87
00:06:45.466 --> 00:06:47.177
So here the top prediction index,

88
00:06:47.177 --> 00:06:51.425
we're gonna look through the predictions
array and we're gonna find the index where

89
00:06:51.425 --> 00:06:55.146
the probability in that object is the same
as the one that we isolated here.

90
00:06:56.776 --> 00:07:01.739
And then we are going to log
the class that is related to

91
00:07:01.739 --> 00:07:07.048
that index or
to the object at the index in the array.

92
00:07:07.048 --> 00:07:11.551
So console.log, so
we have again our predictions array, so

93
00:07:11.551 --> 00:07:14.128
predictions and we have an index.

94
00:07:14.128 --> 00:07:15.719
So top prediction index,

95
00:07:15.719 --> 00:07:20.257
that should actually be the object
with the highest probability.

96
00:07:20.257 --> 00:07:23.050
But we want to just isolate the label and
in the object,

97
00:07:23.050 --> 00:07:27.035
I think from what I can see in my code,
that's called classname, not class.

98
00:07:27.035 --> 00:07:32.563
So now, When that's done,

99
00:07:32.563 --> 00:07:37.263
then it means that what we're gonna log
instead is going to be the actual label

100
00:07:37.263 --> 00:07:42.645
of the gesture that is the most likely
to have been recognized by the model.

101
00:07:42.645 --> 00:07:49.460
So if you have written all this,
then when we're refreshing our browser and

102
00:07:49.460 --> 00:07:55.995
my camera is on and i click start,
what we should see in the, yeah.

103
00:07:55.995 --> 00:07:59.892
Also, I left the other console a little
bit, see, so I'm tilting right?

104
00:08:02.732 --> 00:08:05.028
So remember when I said
the flipping the camera,

105
00:08:05.028 --> 00:08:08.287
I think we're probably needed to
be true because that's a big word.

106
00:08:08.287 --> 00:08:11.648
Okay, so
let's see if actually maybe by default,

107
00:08:11.648 --> 00:08:16.822
the webcam kind of flips you and
you actually want it to be the other way.

108
00:08:16.822 --> 00:08:20.625
So if you have the same issue as me,
when we're declaring,

109
00:08:20.625 --> 00:08:23.743
i have it on line 16, but
I don't know about but

110
00:08:23.743 --> 00:08:29.167
it should be like towards the top of the
code where we're calling tmImage.webcam.

111
00:08:29.167 --> 00:08:34.040
You can change the last variable to or
the last argument to true and

112
00:08:34.040 --> 00:08:37.848
if we save that and
I'm also going to remove logging

113
00:08:37.848 --> 00:08:42.431
predictions because I just
want to see the label.

114
00:08:42.431 --> 00:08:46.907
I don't want to necessarily
see the array of labels, so

115
00:08:46.907 --> 00:08:51.572
if we try again, [SOUND] Well,
I mean sometimes ,okay, so

116
00:08:51.572 --> 00:08:57.305
if I do that right, yes, it looks
right It doesn't look left too much.

117
00:08:57.305 --> 00:09:02.145
So it could be, again,
we only recorded 30 samples

118
00:09:02.145 --> 00:09:07.532
,that's not much but
I've heard more chance sometimes.

119
00:09:07.532 --> 00:09:12.495
So as it's getting confused, what we
can do, what's cool to do as well with

120
00:09:12.495 --> 00:09:16.993
transfer learning like that as well,
is that if you realize that your

121
00:09:16.993 --> 00:09:22.445
predictions are not super great and
that you wish they were more accurate.

122
00:09:22.445 --> 00:09:25.597
You could actually, and
we're gonna do that now, we

123
00:09:25.597 --> 00:09:30.815
can go back to Teachable Machine, retrain
our two classes with maybe more samples.

124
00:09:30.815 --> 00:09:35.015
So instead of 30, let's try to do like a
hundred, like that should just take a few

125
00:09:35.015 --> 00:09:38.515
seconds and we can replace our,
my model folder with a new one.

126
00:09:38.515 --> 00:09:43.793
And our code shouldn't have to change
at all because as long as the name

127
00:09:43.793 --> 00:09:49.012
of the folder is the same,
then the rest should be good as well.

128
00:09:49.012 --> 00:09:52.040
So we can try to do that and
see if that works, so

129
00:09:52.040 --> 00:09:54.392
if we go back to Teachable Machine.

130
00:09:57.282 --> 00:10:00.635
I mean, maybe for you, depending on what
you recorded it actually works a lot

131
00:10:00.635 --> 00:10:03.308
better, but for me,
it seems to have a bit of a issue.

132
00:10:03.308 --> 00:10:09.580
So if I use the same labels as like,
you know I'm gonna start write and

133
00:10:09.580 --> 00:10:14.243
my camera is on and
I'm gonna record more samples.

134
00:10:18.527 --> 00:10:24.039
So it takes about 10 seconds
to record about 100 images and

135
00:10:24.039 --> 00:10:27.582
then on right, left turn on the camera.

136
00:10:32.433 --> 00:10:33.153
Cool?

137
00:10:33.153 --> 00:10:36.584
Okay, so now I have 100 images for
both, it should take maybe a second or

138
00:10:36.584 --> 00:10:39.363
two longer than before
because we have more images.

139
00:10:39.363 --> 00:10:43.511
But if it means that our prediction is
better then when you build an application,

140
00:10:43.511 --> 00:10:45.834
that's accuracy is probably what you want.

141
00:10:47.974 --> 00:10:52.674
Okay, so here, right,
the left seems to be less wobbly.

142
00:10:52.674 --> 00:10:55.243
So remember before when I was
in the center, well okay,

143
00:10:55.243 --> 00:10:58.644
now that I just said that,
it starts [LAUGH] being confused again.

144
00:10:58.644 --> 00:11:04.123
But now that we or
that I at least re-recorded right left

145
00:11:04.123 --> 00:11:10.208
about 100 samples each,
I can re-export, so download.

146
00:11:10.208 --> 00:11:14.231
That's my number two,
I'm gonna extract it,

147
00:11:14.231 --> 00:11:20.567
I'm going to open my files and I'm gonna
delete the first model that I had,

148
00:11:20.567 --> 00:11:26.214
it's totally fine to not keep it and
I'm gonna re-drag this one.

149
00:11:27.264 --> 00:11:33.444
I'm gonna rename it my model like I
had before and now if I just re-run,

150
00:11:33.444 --> 00:11:38.903
I'm gonna stop Teachable Machine and
if I reload the page again

151
00:11:38.903 --> 00:11:44.795
I did not change the code,
I just changed them the model.

152
00:11:44.795 --> 00:11:49.854
And if I start again, Okay,

153
00:11:49.854 --> 00:11:52.549
It's much better now, so now it's not
going between the right, left, right,

154
00:11:52.549 --> 00:11:55.185
left, When I'm right, it's right,
when I'm left, it's left.

155
00:11:55.185 --> 00:11:59.704
So maybe all we needed was just to record
more samples, which it makes sense,

156
00:11:59.704 --> 00:12:00.399
but again,

157
00:12:00.399 --> 00:12:05.355
if you buy with recording 30 samples,
it was enough, then that's great as well.

158
00:12:05.355 --> 00:12:09.957
And you know, sometimes if I do this,
then it might get a bit confused,

159
00:12:09.957 --> 00:12:14.822
because it doesn't know what this is,
you just know right or left, okay.

160
00:12:14.822 --> 00:12:19.601
So just to recap, to kind of go over what
happens, it means that first of all in

161
00:12:19.601 --> 00:12:24.141
less than 50 lines of code,
you're implemented transfer learning.

162
00:12:24.141 --> 00:12:28.436
So basically we start by writing
the path where the model is and

163
00:12:28.436 --> 00:12:30.591
then we have our start button.

164
00:12:31.601 --> 00:12:35.166
When we click,
we're initiating like our main function

165
00:12:35.166 --> 00:12:38.210
we are giving it the path
to the model JSON file and

166
00:12:38.210 --> 00:12:42.988
the metadata and then the we don't need
to give the path to the weights file.

167
00:12:42.988 --> 00:12:47.515
It's more the model JSON file does that or
the load function does that from

168
00:12:47.515 --> 00:12:50.747
getting the path to the model and
the metadata file.

169
00:12:51.877 --> 00:12:56.261
And then Teachable Machine
image library exposes a tmImage

170
00:12:56.261 --> 00:13:01.259
variable that you can then call webcam
on it to initiate a webcam with

171
00:13:01.259 --> 00:13:04.680
dimension of what you see on the screen.

172
00:13:04.680 --> 00:13:09.540
And here is the flip variable that we
first set to false and it was weird so

173
00:13:09.540 --> 00:13:11.830
we can set it to true.

174
00:13:11.830 --> 00:13:15.572
Here the setup is asking you for
permission to set up the webcam,

175
00:13:15.572 --> 00:13:19.388
play is to actually start
streaming the webcam.

176
00:13:19.388 --> 00:13:23.117
And then we're appending the canvas on the
page to be able to see what's coming from

177
00:13:23.117 --> 00:13:23.928
the webcam feed.

178
00:13:25.218 --> 00:13:29.086
And then with request animation loop,
we're calling constantly

179
00:13:29.086 --> 00:13:32.676
the loop function that's going
to update the webcam frame and

180
00:13:32.676 --> 00:13:35.798
we're calling predict on every frame,
basically.

181
00:13:35.798 --> 00:13:38.646
We're trying to see what's in this image,
what label are we getting back.

182
00:13:40.027 --> 00:13:42.649
And in our predict function, we by now,

183
00:13:42.649 --> 00:13:47.052
it's expected that with TensorFlow.js
it's usually a predict or

184
00:13:47.052 --> 00:13:52.087
detect or classify method and
we're passing it the canvas as well.

185
00:13:52.087 --> 00:13:56.962
And then we can do some kind of normal,
object manipulation

186
00:13:56.962 --> 00:14:01.641
thing in JavaScript to get the maximum,
probability and

187
00:14:01.641 --> 00:14:07.018
display that here as a log message,
but otherwise on the screen.

188
00:14:07.018 --> 00:14:11.622
And from there, you can then build
a bigger application where, for example,

189
00:14:11.622 --> 00:14:13.597
you could scroll with your head.

190
00:14:13.597 --> 00:14:17.455
Where if the gestures that you record
are like up or down, then you could have

191
00:14:17.455 --> 00:14:21.917
a machine learning model that if, let's
say, you're eating a sandwich while you're

192
00:14:21.917 --> 00:14:25.473
reading the news and you can go up and
down, and you can scroll with your

193
00:14:25.473 --> 00:14:29.634
head instead of putting your dirty
fingers on your keyboard or something.

194
00:14:29.634 --> 00:14:33.431
But you can think about whatever
applications that you want to build

195
00:14:33.431 --> 00:14:34.324
with this.

196
00:14:34.324 --> 00:14:39.886
But it means that in a few minutes you can
train a model with digital machine and

197
00:14:39.886 --> 00:14:46.217
in less than send 50 lines of code you
can start to have it on a web page.

