WEBVTT

1
00:00:00.170 --> 00:00:05.352
But even better,
I think that the face landmarks detection.

2
00:00:05.352 --> 00:00:10.852
Okay, so here, you can see again
it's like a media pipe model and

3
00:00:10.852 --> 00:00:13.310
it gives you a face smash.

4
00:00:13.310 --> 00:00:17.613
So you can also use that one and it gives
you a lot more points around your face.

5
00:00:17.613 --> 00:00:22.563
But every point to between the lines here
is actually a key point that you can get

6
00:00:22.563 --> 00:00:26.313
data from, x and y,
in terms of coordinates on the screen.

7
00:00:27.423 --> 00:00:29.704
And I believe that with this model,

8
00:00:29.704 --> 00:00:34.463
you can do some calculation where you
see really the movement of the eye.

9
00:00:34.463 --> 00:00:37.288
Also, I'm showing my projects
because I know how I built them, so

10
00:00:37.288 --> 00:00:39.477
if you have any questions,
I can answer them.

11
00:00:39.477 --> 00:00:42.447
But there's more people
building things like this.

12
00:00:42.447 --> 00:00:45.694
But with that kind of model
you can build prototypes.

13
00:00:45.694 --> 00:00:50.313
I tried to build a hands- free coding
where that uses TensorFlow js, and

14
00:00:50.313 --> 00:00:53.207
I'm just gonna play
the stream be any sound.

15
00:00:53.207 --> 00:00:56.878
But it's TensorFlow.js that's
looking at where my eyes are going.

16
00:00:56.878 --> 00:00:59.044
There's a bit of logic there.

17
00:00:59.044 --> 00:01:03.656
It's basically able to isolate
the white part of your eye and

18
00:01:03.656 --> 00:01:06.276
where your iris actually is.

19
00:01:06.276 --> 00:01:09.622
And then you can do a delta between the
current position and the next position,

20
00:01:09.622 --> 00:01:11.036
it's right or left.

21
00:01:11.036 --> 00:01:13.466
And then you can start thinking about,
well, what can you do with that?

22
00:01:13.466 --> 00:01:16.782
And in the context of hands-free coding,
I was thinking,

23
00:01:16.782 --> 00:01:21.575
well, in general, there's only a certain
subset of things that we can do with code.

24
00:01:21.575 --> 00:01:26.085
You can declare variables, or declare
functions, or have a written statement, or

25
00:01:26.085 --> 00:01:26.662
imports.

26
00:01:26.662 --> 00:01:32.137
And you can then think about, well, if I
was creating snippets in VS code, then

27
00:01:32.137 --> 00:01:38.235
I could just select them with, I think on
the right is, well, it ended up on, okay.

28
00:01:38.235 --> 00:01:41.035
So on the right here,
it's a very small prototype, but

29
00:01:41.035 --> 00:01:44.969
the first one is var to create a variable,
then I can select the right column and

30
00:01:44.969 --> 00:01:47.197
isolate only the ones
that are on the right.

31
00:01:47.197 --> 00:01:52.179
So FUN would be like a function or
then CLG is like console log, or

32
00:01:52.179 --> 00:01:54.592
return, or things like that.

33
00:01:54.592 --> 00:01:58.782
And then navigate, I think I maybe
wanted to go up and down my code.

34
00:01:58.782 --> 00:02:01.824
But you can start thinking about
applications like this where maybe

35
00:02:01.824 --> 00:02:05.020
the first time that you hear of a model
to detect key points in your face,

36
00:02:05.020 --> 00:02:08.353
you might not be thinking about then,
I'll do hands-free coding.

37
00:02:08.353 --> 00:02:11.428
But the more you experiment with this,
the more you realize and

38
00:02:11.428 --> 00:02:14.398
think about different applications
where you could use it.

39
00:02:14.398 --> 00:02:18.538
So again, it's like every time I
move my eye, I'm actually selecting

40
00:02:18.538 --> 00:02:22.915
between the right and
left column of the little selection here.

41
00:02:22.915 --> 00:02:25.033
And I think the first one is probably,
I want to create a component, yeah.

42
00:02:25.033 --> 00:02:28.636
So I selected RCE for
React component something,

43
00:02:28.636 --> 00:02:33.111
and then it just spits out a basic
structure of the component.

44
00:02:33.111 --> 00:02:37.675
So if you write code every day, you know
it's a bit more complex than that, but

45
00:02:37.675 --> 00:02:39.610
it was a prototype to see, well,

46
00:02:39.610 --> 00:02:43.507
if you could either add an eye
detection functionality to VS code.

47
00:02:43.507 --> 00:02:47.178
Or even as a compliment,
you could write and

48
00:02:47.178 --> 00:02:52.152
also use your eyes,
then you end up doing things like this.

49
00:02:52.152 --> 00:02:56.056
So obviously it's not like
a product that's ready to use, but

50
00:02:56.056 --> 00:02:59.752
I think I just wrote the yeah,
hi, or something like that.

51
00:03:01.233 --> 00:03:05.180
And that's the type of applications
that you can work with.

52
00:03:05.180 --> 00:03:06.123
Sorry, question?

53
00:03:06.123 --> 00:03:10.526
&gt;&gt; I'm just curious how you're
deciding what to show for

54
00:03:10.526 --> 00:03:13.783
the options like letters or variables?

55
00:03:13.783 --> 00:03:14.579
&gt;&gt; Sure, so

56
00:03:14.579 --> 00:03:20.650
the nice stuff with that is what's
on the right is standard JavaScript.

57
00:03:20.650 --> 00:03:23.126
You have a layout of two columns.

58
00:03:23.126 --> 00:03:26.273
And then here when I'm for
example, if I'm looking right,

59
00:03:26.273 --> 00:03:29.864
then my logic is to isolate just
the four things that are on the right.

60
00:03:29.864 --> 00:03:33.296
Because I'm looking at the screen and
I'm thinking, okay,

61
00:03:33.296 --> 00:03:36.736
I want to write a function, and
I can see fun on the right part.

62
00:03:36.736 --> 00:03:39.680
So I'm just looking right and
it's just isolate, and

63
00:03:39.680 --> 00:03:43.267
that is actually not Tensorflow.js,
it's normal JavaScript.

64
00:03:43.267 --> 00:03:45.763
But the eye detection is Tensorflow.js.

65
00:03:45.763 --> 00:03:49.943
So when I'm getting as a prediction
the position of my eye,

66
00:03:49.943 --> 00:03:53.600
then I can see which part
on the screen it's on.

67
00:03:53.600 --> 00:03:58.390
And if I'm looking right,
then I can isolate that.

68
00:03:58.390 --> 00:04:03.750
For example, if I had been looking left,
then I would have had the options var,

69
00:04:03.750 --> 00:04:07.523
import, react, and text,
if I want to write letters.

70
00:04:07.523 --> 00:04:11.820
So if I knew I want to write just the word
hello, then I would have looked to

71
00:04:11.820 --> 00:04:16.376
the left text, and that would have
displayed a fake keyboard of letters.

72
00:04:16.376 --> 00:04:20.105
And then I can also,
depending on where the letters are,

73
00:04:20.105 --> 00:04:24.779
I think there's a better example that
I can show of something similar.

74
00:04:24.779 --> 00:04:27.454
Okay, this one, the gaze control keyboard.

75
00:04:27.454 --> 00:04:30.871
So this is the same concept where
I have a keyboard of letters and

76
00:04:30.871 --> 00:04:33.164
they're separated into columns.

77
00:04:33.164 --> 00:04:38.086
And the reason why, so that's actually
a reproduction of a project that was built

78
00:04:38.086 --> 00:04:41.721
by a part of Google and
they were building an app in Android for

79
00:04:41.721 --> 00:04:44.381
people who actually have mobility issues.

80
00:04:44.381 --> 00:04:49.315
Where to allow them to text faster,
they actually do look at the screen and

81
00:04:49.315 --> 00:04:51.217
they select letters.

82
00:04:51.217 --> 00:04:54.318
And it actually made me also think about
the way that the keyboard layout is.

83
00:04:54.318 --> 00:04:57.892
It's like, well, I could have a keyboard
and select letter one by one by going

84
00:04:57.892 --> 00:05:00.617
right, right, right, right,
until I reach the letter.

85
00:05:00.617 --> 00:05:01.904
But that would take a long time.

86
00:05:01.904 --> 00:05:05.647
And if you instead separate your
keyboard into two sections and

87
00:05:05.647 --> 00:05:10.166
you end up doing almost like a binary
search when you're just like the letter

88
00:05:10.166 --> 00:05:13.480
that I want is in the right portion,
so I look right.

89
00:05:13.480 --> 00:05:15.037
And then it isolates and
it splits that into two.

90
00:05:15.037 --> 00:05:16.839
And it's what's happening here.

91
00:05:16.839 --> 00:05:18.999
The letters are just in
the order of the alphabet, but

92
00:05:18.999 --> 00:05:22.023
if I want to write hello, I'm like,
okay, the h is in the left column, and

93
00:05:22.023 --> 00:05:25.055
then the e is also in the left column,
and then l, but then o is on the right.

94
00:05:25.055 --> 00:05:28.965
And once you're done with your word,
then it redisplays.

95
00:05:28.965 --> 00:05:32.213
And that is really just a reproduction
of the Google project but

96
00:05:32.213 --> 00:05:35.155
in the browser because I was
interested to see as they've

97
00:05:35.155 --> 00:05:37.931
had built it using just Android,
Colleen probably.

98
00:05:37.931 --> 00:05:42.283
I was just thinking, well can we have
the same but as a web interface so

99
00:05:42.283 --> 00:05:46.655
that people don't have to download an app,
you just open a browser.

100
00:05:46.655 --> 00:05:50.856
And then I had a little bit of fun
doing it with Chrome dyno game as

101
00:05:50.856 --> 00:05:52.769
well where I think I forgot.

102
00:05:52.769 --> 00:05:55.588
Yeah, I just look up for a jump.

103
00:05:55.588 --> 00:05:58.126
And you could see that it's pretty good.

104
00:05:58.126 --> 00:05:59.549
It's pretty quite reactive.

105
00:05:59.549 --> 00:06:01.262
I actually was quite impressed.

106
00:06:01.262 --> 00:06:04.430
Well, it made me look like
I played pretty well.

107
00:06:04.430 --> 00:06:10.278
So [LAUGH] I was actually really
impressed with how fast the model was.

108
00:06:10.278 --> 00:06:14.338
I was thinking, maybe JavaScript in
the browser are using the camera,

109
00:06:14.338 --> 00:06:16.058
maybe there'll be some delay.

110
00:06:16.058 --> 00:06:19.725
But actually, in terms of doing that,
it was pretty fast.

