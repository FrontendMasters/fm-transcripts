WEBVTT

1
00:00:00.150 --> 00:00:05.279
All right, well, welcome to the third and
final part of this workshop,

2
00:00:05.279 --> 00:00:10.850
where we are going to create our
own custom machine learning model.

3
00:00:10.850 --> 00:00:14.592
So, previously, we have used a pre-train
model, where we just import and

4
00:00:14.592 --> 00:00:18.291
then feed it new data, and in a few
lines of code, we get some predictions.

5
00:00:18.291 --> 00:00:20.461
And then we moved on to transfer learning,

6
00:00:20.461 --> 00:00:23.235
where we are kind of combining
a pre-trained model and

7
00:00:23.235 --> 00:00:27.116
adding our own examples and
retraining a model on top of that.

8
00:00:27.116 --> 00:00:30.516
But now, we're going to kinda
do everything from scratch.

9
00:00:30.516 --> 00:00:34.617
And not only are we gonna create our own
model, we're also going to create our own

10
00:00:34.617 --> 00:00:37.223
data set that we're going
to feed into that model.

11
00:00:37.223 --> 00:00:39.396
And there's kind of two reasons for that.

12
00:00:39.396 --> 00:00:43.724
So, first of all, I kind of wanted
you to maybe experience the pain of

13
00:00:43.724 --> 00:00:48.355
creating your own dataset, just because
you'll have a better idea of how

14
00:00:48.355 --> 00:00:51.808
long it takes to actually
create a data set that works.

15
00:00:51.808 --> 00:00:55.329
And you'll see, well, we won't create
an asset that has thousands or

16
00:00:55.329 --> 00:00:58.588
millions of images because we
won't have the time for that.

17
00:00:58.588 --> 00:01:03.034
But we'll do maybe 40, 50, images each,
cuz the model that we're gonna create

18
00:01:03.034 --> 00:01:06.385
is gonna be an image classification
model with our own samples.

19
00:01:06.385 --> 00:01:09.205
And the second reason why I
want people to build their own

20
00:01:09.205 --> 00:01:12.446
data set is because sometimes,
if you end up doing that at work,

21
00:01:12.446 --> 00:01:15.206
even if you find a data set
online that's open source,

22
00:01:15.206 --> 00:01:19.395
sometimes the license does not allow
you to use it for commercial purposes.

23
00:01:19.395 --> 00:01:24.900
So it's a good thing to kind of experience
what it's like to actually build your own.

24
00:01:24.900 --> 00:01:28.558
And if you ended up doing image detection
at work, you could use photos and

25
00:01:28.558 --> 00:01:31.272
things like that, but
even then, taking pictures and

26
00:01:31.272 --> 00:01:34.527
labeling them and things like that,
it does take time.

27
00:01:34.527 --> 00:01:38.666
So in this particular project,
we're going to work not with pictures, but

28
00:01:38.666 --> 00:01:41.394
with drawings that were
going to draw ourselves.

29
00:01:41.394 --> 00:01:46.514
So if you navigate to the project
three folder in the exercises

30
00:01:46.514 --> 00:01:51.634
folder of the repository,
first of all, what we're gonna do

31
00:01:51.634 --> 00:01:56.869
is if you open your terminal,
or sorry, not your code editor.

32
00:01:56.869 --> 00:02:00.306
So just to explain a little
bit what's going on in the,

33
00:02:00.306 --> 00:02:04.438
let's say the initial state of
our application, let's run it.

34
00:02:04.438 --> 00:02:08.902
So if you go to a terminal and
you run npm, run watch,

35
00:02:08.902 --> 00:02:13.979
it's just going to start
a Python server on port 1234,

36
00:02:13.979 --> 00:02:18.666
so if we open then the browser on 1234,
yeah.

37
00:02:18.666 --> 00:02:24.182
Then just select the public folder, and
you should end up on something like this.

38
00:02:24.182 --> 00:02:29.142
So we just have a simple page, image
detector with a canvas here in the middle.

39
00:02:29.142 --> 00:02:32.702
And what we're gonna end up doing,
is draw shapes like this, but

40
00:02:32.702 --> 00:02:37.622
at the moment, there's no interaction in
the buttons, but there are three of them.

41
00:02:37.622 --> 00:02:42.158
So the clear button is going to allow us
to clear the Canvas every time that we

42
00:02:42.158 --> 00:02:44.050
draw a new shape.

43
00:02:44.050 --> 00:02:47.017
So at the moment, the functionality
is not implemented, so if you click,

44
00:02:47.017 --> 00:02:48.530
nothing is happening.

45
00:02:48.530 --> 00:02:52.276
But then we'll have a Predict button
here so that when our model is ready and

46
00:02:52.276 --> 00:02:56.380
we're actually loading it in this UI later
on, we'll be able to draw a new shape,

47
00:02:56.380 --> 00:03:00.500
click predict, and it should not
return us the label about prediction.

48
00:03:00.500 --> 00:03:04.700
And then the download button here is going
to actually download images locally.

49
00:03:04.700 --> 00:03:06.336
So we're going to do that a few times,

50
00:03:06.336 --> 00:03:09.220
we're going to pick two
different shapes that we want.

51
00:03:09.220 --> 00:03:14.060
And then, change the name of these files
so that then we'll use the name of

52
00:03:14.060 --> 00:03:19.544
the file size labels, and we'll work on
getting all our data from our local files.

53
00:03:19.544 --> 00:03:22.508
Then we'll create model,
we'll train it, and

54
00:03:22.508 --> 00:03:25.410
then we'll use our custom
model back in the UI.

55
00:03:25.410 --> 00:03:30.038
So first of all,
let's implement the clear functionality so

56
00:03:30.038 --> 00:03:33.959
that then we can start to be
able to clear the Canvas.

57
00:03:33.959 --> 00:03:39.397
So what I need to show you then, so here,
if you look at the index.html file,

58
00:03:39.397 --> 00:03:44.083
we have a Canvas here and we'll have
a div for the prediction that we

59
00:03:44.083 --> 00:03:48.961
won't use right away, we'll use
when we import the model later on.

60
00:03:48.961 --> 00:03:52.941
This, we don't need to worry about now
that's for the next step as well, and

61
00:03:52.941 --> 00:03:54.361
here we have a few buttons.

62
00:03:54.361 --> 00:03:58.492
And what you should have here when
you downloaded the repository

63
00:03:58.492 --> 00:04:00.022
is just the index.js,

64
00:04:00.022 --> 00:04:05.339
file, but let's add a script tag above
it and import the utils file as well.

65
00:04:05.339 --> 00:04:08.309
And I will show you what's in there, so

66
00:04:08.309 --> 00:04:12.449
if you just add a script tag
with the source utils.js,

67
00:04:12.449 --> 00:04:17.779
and type module,
then I'll go through what this file has.

68
00:04:17.779 --> 00:04:21.754
But again, it has just functions
around handling drawing on the Canvas,

69
00:04:21.754 --> 00:04:25.602
cuz that's not necessarily directly
related to TensorFlow.js, but

70
00:04:25.602 --> 00:04:28.731
I just wanted to kind of
be able to get started.

71
00:04:28.731 --> 00:04:33.351
So if we look at what's in there, so
it's, if you have ever worked with Canvas

72
00:04:33.351 --> 00:04:37.068
before where you can draw on it,
you might be familiar with it.

73
00:04:37.068 --> 00:04:41.589
It's not super important to really,
really dive into this.

74
00:04:41.589 --> 00:04:46.633
But if we look at your Canvas,
we have a an EventListener on mousedown,

75
00:04:46.633 --> 00:04:51.424
and then I just have a function where
I'm getting basically the x and

76
00:04:51.424 --> 00:04:53.626
y coordinates of my drawings.

77
00:04:53.626 --> 00:04:58.932
And I'm redrawing it as as I'm moving
the mouse, and then mousemove.

78
00:04:58.932 --> 00:05:01.848
Same, so we don't necessarily
have to really go into this,

79
00:05:01.848 --> 00:05:05.662
it's just the functionality to
be able to draw on the Canvas.

80
00:05:05.662 --> 00:05:08.352
And then I just have a re-drow function.

81
00:05:09.352 --> 00:05:13.503
And again, this is just details function.

