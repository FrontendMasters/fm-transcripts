WEBVTT

1
00:00:00.004 --> 00:00:03.729
&gt;&gt; Brian Holt: So if (isCorrect),

2
00:00:07.176 --> 00:00:09.725
&gt;&gt; Brian Holt: points += 200,

3
00:00:09.725 --> 00:00:12.135
return isCorrect.

4
00:00:18.430 --> 00:00:21.370
&gt;&gt; Brian Holt: squared,
I kinda did this one for you.

5
00:00:21.370 --> 00:00:24.753
Key here is I used ==.

6
00:00:24.753 --> 00:00:31.720
Again, here you could've said ===, but you
would have to say parseInt out of this.

7
00:00:34.663 --> 00:00:35.990
&gt;&gt; Brian Holt: That
would've worked as well.

8
00:00:35.990 --> 00:00:39.634
So that's up to you, but you need
to get userAnswer to be a number so

9
00:00:39.634 --> 00:00:41.924
you can compare them against each other.

10
00:00:45.863 --> 00:00:50.593
&gt;&gt; Brian Holt: If (isCorrect),

11
00:00:50.593 --> 00:00:55.600
points += 200,

12
00:00:55.600 --> 00:01:02.005
return isCorrect, okay?

13
00:01:05.607 --> 00:01:08.073
&gt;&gt; Brian Holt: Then again
parseInt just takes a string and

14
00:01:08.073 --> 00:01:10.272
attempts to convert it into a number.

15
00:01:14.585 --> 00:01:17.319
&gt;&gt; Brian Holt: So you're gonna
have to do that for most of these.

16
00:01:21.345 --> 00:01:25.348
&gt;&gt; Brian Holt: So,
in this one you're gonna say,

17
00:01:25.348 --> 00:01:29.420
const isCorrect= userAnswer.

18
00:01:29.420 --> 00:01:31.400
=== or ==.

19
00:01:33.340 --> 00:01:35.835
Either way will do ==here.

20
00:01:35.835 --> 00:01:39.291
num1 * num 2.

21
00:01:45.898 --> 00:01:47.508
&gt;&gt; Brian Holt: If isCorrect.

22
00:01:49.070 --> 00:01:54.423
&gt;&gt; Brian Holt: Points += 300,
return isCorrect.

23
00:01:58.955 --> 00:02:00.239
&gt;&gt; Brian Holt: Make sense so far?

24
00:02:06.596 --> 00:02:08.208
&gt;&gt; Brian Holt: Okay, age.

25
00:02:11.849 --> 00:02:17.543
&gt;&gt; Brian Holt: So
here you're gonna say const

26
00:02:17.543 --> 00:02:22.800
isCorrect = currentYear-

27
00:02:22.800 --> 00:02:28.281
birthYear == userAnswer.

28
00:02:31.405 --> 00:02:34.541
&gt;&gt; Brian Holt: As you can see here,
you can put userAnswer on either side,

29
00:02:34.541 --> 00:02:38.262
right it's doesn't matter if it
comes before after the equal signs.

30
00:02:42.852 --> 00:02:48.172
&gt;&gt; Brian Holt: If (isCorrect) points + =

31
00:02:48.172 --> 00:02:53.073
300 return isCorrect.

32
00:02:58.585 --> 00:02:59.924
&gt;&gt; Brian Holt: Okay.

33
00:02:59.924 --> 00:03:05.079
So which of these two numbers is larger?

34
00:03:08.773 --> 00:03:12.429
&gt;&gt; Brian Holt: A couple ways you could
have done this if you want to be more

35
00:03:12.429 --> 00:03:15.870
explicit about this,
which you probably should be.

36
00:03:15.870 --> 00:03:20.056
So I num1 is greater than num2, and

37
00:03:20.056 --> 00:03:27.226
up here we’ll say let isCorrect so
it doesn’t go out of scope.

38
00:03:29.580 --> 00:03:34.748
&gt;&gt; Brian Holt: IsCorrect is assigned

39
00:03:34.748 --> 00:03:40.463
userAnswer == num1,

40
00:03:47.810 --> 00:03:48.767
&gt;&gt; Brian Holt: else here and

41
00:03:48.767 --> 00:03:50.034
then we'll do.

42
00:03:50.034 --> 00:03:57.925
isCorrect = userAnswer == num2.

43
00:03:57.925 --> 00:04:04.417
Then here will do the points

44
00:04:04.417 --> 00:04:10.346
if(isCorrect) points

45
00:04:10.346 --> 00:04:17.980
+= 300 return is correct.

46
00:04:17.980 --> 00:04:19.940
Yes.
&gt;&gt; Speaker 2: Two questions on this.

47
00:04:19.940 --> 00:04:22.710
Would this actually work if they're equal?

48
00:04:22.710 --> 00:04:28.166
Or I get that the else statement will
come to us like if either num2 is

49
00:04:28.166 --> 00:04:33.680
greater than num1 or
they're equal than else will be evaluated.

50
00:04:33.680 --> 00:04:37.520
But if the two numbers are equal, how

51
00:04:37.520 --> 00:04:42.010
does it know that the person is putting
in num2 as the answer instead of num1?

52
00:04:42.010 --> 00:04:43.680
&gt;&gt; Brian Holt: Okay,
that's a good question.

53
00:04:43.680 --> 00:04:46.110
So let's say they're both five, right?

54
00:04:46.110 --> 00:04:50.170
So this is 5 and this is 5,
it's gonna say is 5 greater than 5.

55
00:04:50.170 --> 00:04:51.780
That's not right.

56
00:04:51.780 --> 00:04:56.758
So then, here, it's going to ask,
is the user answer equal to 5?

57
00:04:56.758 --> 00:04:57.522
&gt;&gt; Speaker 2: Okay.

58
00:04:57.522 --> 00:04:59.210
&gt;&gt; Brian Holt: In other words,
a number's a number,

59
00:04:59.210 --> 00:05:02.820
it doesn't matter which number is
equal to 5, they're both 5, right?

60
00:05:02.820 --> 00:05:03.370
Make sense?

61
00:05:03.370 --> 00:05:04.670
&gt;&gt; Speaker 2: Yes.
&gt;&gt; Brian Holt: Cool.

62
00:05:04.670 --> 00:05:05.490
&gt;&gt; Speaker 2: I have one more question.

63
00:05:05.490 --> 00:05:06.950
&gt;&gt; Brian Holt: Sure.
&gt;&gt; Speaker 2: What is the purpose of

64
00:05:06.950 --> 00:05:09.640
returning isCorrect in every function?

65
00:05:10.820 --> 00:05:14.990
&gt;&gt; Brian Holt: So,
the code down, like down here.

66
00:05:16.340 --> 00:05:17.410
What it is doing.

67
00:05:18.600 --> 00:05:19.640
I can go down here.

68
00:05:22.550 --> 00:05:26.580
It's calling your function here, which is
gonna be this validate function, right?

69
00:05:26.580 --> 00:05:31.290
And so it's passing in input
into your function and

70
00:05:31.290 --> 00:05:34.830
then it's expecting back whether or
not the user got the answer correct right?

71
00:05:34.830 --> 00:05:37.980
And so you have to give it back
to the program of either true or

72
00:05:37.980 --> 00:05:39.280
false they got it right.

73
00:05:39.280 --> 00:05:42.780
And that's how the program knows
that something was right or wrong.

74
00:05:42.780 --> 00:05:43.510
Does that make sense?

75
00:05:43.510 --> 00:05:44.950
&gt;&gt; Speaker 2: Yes.
&gt;&gt; Brian Holt: Cool, good question.

76
00:05:44.950 --> 00:05:50.960
&gt;&gt; Speaker 3: So
on 999 I put let instead of constant.

77
00:05:50.960 --> 00:05:54.840
Sorry I put constant instead of let,
and it didn't work.

78
00:05:54.840 --> 00:06:00.618
So I was wondering why if
I didn't assign a value to

79
00:06:00.618 --> 00:06:07.919
constant it wouldn't in 1999
it would only work with let.

80
00:06:09.663 --> 00:06:11.770
&gt;&gt; Brian Holt: That's a good question.

81
00:06:11.770 --> 00:06:14.900
With const you have to
assign it a value up front.

82
00:06:14.900 --> 00:06:18.340
So even if I try and change it right now
you can see down here it's actually giving

83
00:06:18.340 --> 00:06:19.890
me an error as like hey.

84
00:06:19.890 --> 00:06:21.930
You're not assigning const right?

85
00:06:21.930 --> 00:06:24.290
Whenever you do a const you
have to assign it right away.

86
00:06:24.290 --> 00:06:28.200
So here I would have to say
something like = 5 right?

87
00:06:28.200 --> 00:06:29.930
Then it's gonna be happy.

88
00:06:29.930 --> 00:06:32.550
So even though this doesn't look like

89
00:06:32.550 --> 00:06:36.355
you're reassigning it you actually
kind of are actually literally are.

90
00:06:36.355 --> 00:06:38.516
[LAUGH] Answer your question?

91
00:06:38.516 --> 00:06:39.932
&gt;&gt; Speaker 3: Yes.
&gt;&gt; Brian Holt: Cool.

92
00:06:39.932 --> 00:06:46.270
&gt;&gt; Speaker 4: Of your solution and of
using math.Max, which would be preferable?

93
00:06:47.860 --> 00:06:52.230
&gt;&gt; Brian Holt: Either,
those are both totally valid.

94
00:06:54.236 --> 00:06:57.238
&gt;&gt; Speaker 4: Okay.

95
00:06:57.238 --> 00:06:59.935
&gt;&gt; Brian Holt: Yeah,
that would be a good way of doing it.

96
00:06:59.935 --> 00:07:01.160
It would be something like this, right.

97
00:07:01.160 --> 00:07:10.410
const isCorrect = userAnswer ===or ==.

98
00:07:10.410 --> 00:07:15.106
Math.max num1, num2.

99
00:07:15.106 --> 00:07:18.820
That would be just fine.

100
00:07:18.820 --> 00:07:20.670
&gt;&gt; Speaker 5: Equation about this code.

101
00:07:20.670 --> 00:07:21.290
&gt;&gt; Brian Holt: Sure.

102
00:07:21.290 --> 00:07:25.910
&gt;&gt; Speaker 5: If variable is outside
a code block like if a function

103
00:07:25.910 --> 00:07:27.700
whatever it's global, right.

104
00:07:27.700 --> 00:07:29.490
And it can be called from anywhere.

105
00:07:29.490 --> 00:07:33.785
It doesn't matter where
it is at the bottom.

106
00:07:33.785 --> 00:07:36.320
&gt;&gt; Brian Holt: It has to be
declared at that point, right?

107
00:07:36.320 --> 00:07:43.334
So,
&gt;&gt; Brian Holt: Let's say I had some, or

108
00:07:43.334 --> 00:07:47.911
let's just put it above points and I tried
to call function here that had points.

109
00:07:55.458 --> 00:07:57.709
&gt;&gt; Brian Holt: And
then I try to call thing right here.

110
00:07:59.727 --> 00:08:02.400
&gt;&gt; Brian Holt: Points isn't defined
by the time this is called, right?

111
00:08:02.400 --> 00:08:05.136
So it matters when that
function's invoked.

112
00:08:05.136 --> 00:08:06.320
Does that answer your question?

113
00:08:06.320 --> 00:08:06.980
&gt;&gt; Speaker 5: Yeah.

114
00:08:06.980 --> 00:08:07.480
&gt;&gt; Brian Holt: Cool.

115
00:08:10.850 --> 00:08:12.694
&gt;&gt; Brian Holt: Good questions,
any other questions?

116
00:08:16.824 --> 00:08:20.045
&gt;&gt; Brian Holt: Great, I take it that
that was one of the harder ones.

117
00:08:20.045 --> 00:08:22.940
[LAUGH] No?

118
00:08:22.940 --> 00:08:23.960
Maybe not?

119
00:08:23.960 --> 00:08:26.630
Easy?
Cool, and

120
00:08:26.630 --> 00:08:29.110
here we're just gonna return points.

121
00:08:29.110 --> 00:08:30.141
Run get score.

122
00:08:33.304 --> 00:08:35.880
&gt;&gt; Brian Holt: Okay, and
now hopefully this works.

123
00:08:39.518 --> 00:08:41.823
&gt;&gt; Brian Holt: Capital is Canbera.

124
00:08:41.823 --> 00:08:46.893
Correct, Ottawa.

125
00:08:46.893 --> 00:08:48.483
Part.

126
00:08:48.483 --> 00:08:53.958
HOR, Oops, approach should

127
00:08:53.958 --> 00:08:58.995
have made that lowercase,

128
00:08:58.995 --> 00:09:06.230
but 422 times 6, 132, right?

129
00:09:08.107 --> 00:09:14.128
&gt;&gt; Brian Holt: Yes, someone's born in 78,

130
00:09:14.128 --> 00:09:20.150
that'll be 40 is killing it.

131
00:09:21.270 --> 00:09:22.950
I'm pretty sure 21 is larger.

132
00:09:25.610 --> 00:09:27.994
And I got 1500 points on my
own quiz I wrote [LAUGH].

