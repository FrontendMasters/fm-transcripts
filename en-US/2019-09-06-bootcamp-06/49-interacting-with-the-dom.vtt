WEBVTT

1
00:00:00.410 --> 00:00:04.150
&gt;&gt; Brian Holt: Let's start just doing some
basic interactions here with the DOM.

2
00:00:06.010 --> 00:00:12.288
So, ignoring the script tag down here, you
have this red square right here, right?

3
00:00:12.288 --> 00:00:16.380
And, that Red Square corresponds to
this red square class right there.

4
00:00:16.380 --> 00:00:19.710
So, given that the background
color is crimson here,

5
00:00:19.710 --> 00:00:22.200
what would you expect
the color of this div to be?

6
00:00:23.850 --> 00:00:25.642
Should be crimson, right?

7
00:00:27.671 --> 00:00:32.367
&gt;&gt; Brian Holt: But it's green, and the
reason being is down here you see const

8
00:00:32.367 --> 00:00:36.730
redSquare =
document.querySelector.red-square.

9
00:00:36.730 --> 00:00:38.630
That's getting like a handle now so

10
00:00:38.630 --> 00:00:42.500
this red square variable
represents that DOM node, right?

11
00:00:42.500 --> 00:00:45.700
And, when I say node, I'm just talking
about some tag on the page, right?

12
00:00:45.700 --> 00:00:47.060
In this case, that's a div.

13
00:00:49.150 --> 00:00:52.500
Okay, so
now I say RedSquare.style.background

14
00:00:52.500 --> 00:00:54.570
color equals lime green.

15
00:00:54.570 --> 00:00:56.130
Okay, and I can put blue in there.

16
00:00:57.350 --> 00:00:59.110
Except this doesn't refresh super well.

17
00:01:02.340 --> 00:01:07.454
But, suffice to say that
that's why its lime green now.

18
00:01:07.454 --> 00:01:11.463
So,JavaScript can overwrite CSS.

19
00:01:11.463 --> 00:01:15.584
In fact, if you look at this
inspect element turn here,

20
00:01:15.584 --> 00:01:20.502
you can see here it's actually
putting the style in line right here

21
00:01:22.818 --> 00:01:25.496
&gt;&gt; Brian Holt: And, that's why it has more

22
00:01:25.496 --> 00:01:30.190
specificity, it's more
specific than the CSS.

23
00:01:33.360 --> 00:01:36.764
&gt;&gt; Brian Holt: And, that's why you
can see here if I go up here where,

24
00:01:38.674 --> 00:01:39.580
&gt;&gt; Brian Holt: If I turn that off,

25
00:01:39.580 --> 00:01:40.777
then it goes back to red.

26
00:01:40.777 --> 00:01:41.551
Goes back on.

27
00:01:44.478 --> 00:01:45.805
&gt;&gt; Brian Holt: So,
that's pretty cool, right?

28
00:01:45.805 --> 00:01:49.379
This allows us now using JavaScript we
can interact with our HTML documents.

29
00:01:49.379 --> 00:01:52.735
We can change style,
we can change all that kind of stuff.

30
00:01:52.735 --> 00:01:58.590
So, notice that background color here
is Kebab case up here as it's called.

31
00:01:59.820 --> 00:02:02.640
And down here, it is Camel case.

32
00:02:02.640 --> 00:02:06.069
So, here we're using dashes between
the background dash color and

33
00:02:06.069 --> 00:02:09.810
here when we you're doing RedSquare.style
this is gonna be Camel case.

34
00:02:09.810 --> 00:02:15.258
So, you can just assume that padding right
is gonna be padding capital R right,

35
00:02:15.258 --> 00:02:20.786
right, so that's something to keep in
mind and here, let's talk about this for

36
00:02:20.786 --> 00:02:25.610
a second Document.QuerySelector
(*red-square').

37
00:02:25.610 --> 00:02:26.110
Okay.

38
00:02:27.350 --> 00:02:29.270
So, document represents the DOM, right.

39
00:02:29.270 --> 00:02:33.613
So, there's a bunch of API's on here for
interacting with the DOM.

40
00:02:33.613 --> 00:02:35.790
We're using one here
called query selector.

41
00:02:35.790 --> 00:02:39.691
And, what query selector is gonna do is
we're going to give it some sort of CSS

42
00:02:39.691 --> 00:02:43.848
selector right here, and it's gonna go
find just the first instance that it has.

43
00:02:43.848 --> 00:02:49.080
So, if I have nine red squares here,
it's only gonna grab the first one.

44
00:02:49.080 --> 00:02:51.080
It's not gonna grab all of them.

45
00:02:51.080 --> 00:02:56.250
If I wanted all of them,
I can put query selector all here.

46
00:02:56.250 --> 00:02:58.180
And, now this is gonna be red squares.

47
00:02:58.180 --> 00:03:00.460
This is actually gonna be a list.

48
00:03:00.460 --> 00:03:02.341
Of red squares.

49
00:03:02.341 --> 00:03:06.457
Okay, so that's the difference between
query selector and query selector all.

50
00:03:10.578 --> 00:03:12.478
&gt;&gt; Brian Holt: Notice that there's
a little period right there,

51
00:03:12.478 --> 00:03:14.080
this should look familiar to you, right?

52
00:03:14.080 --> 00:03:15.550
This looks like a CSS selector.

53
00:03:15.550 --> 00:03:16.845
That's because it is.

54
00:03:16.845 --> 00:03:20.500
[LAUGH] And, that's how you're
gonna grab ahold of that.

55
00:03:20.500 --> 00:03:24.735
If this was an ID over here,
ID equals Red Square.

56
00:03:29.486 --> 00:03:31.159
&gt;&gt; Brian Holt: Work the same way as well,
right?

57
00:03:32.960 --> 00:03:34.237
&gt;&gt; Brian Holt: Now there's
a bunch of ways you can do this.

58
00:03:34.237 --> 00:03:39.882
There's also, if this is an ID,
you can also do get element by ID and

59
00:03:39.882 --> 00:03:45.451
then you wouldn't have the pound
sign there, this works as well.

60
00:03:49.326 --> 00:03:51.170
&gt;&gt; Brian Holt: Query
selector is quite new.

61
00:03:51.170 --> 00:03:55.500
It's maybe five years old,
which is new in terms of JavaScript

62
00:03:56.850 --> 00:04:01.430
get element by the get tagged,
get elements by tag name.

63
00:04:01.430 --> 00:04:04.180
There's a bunch of those that
are older they work just as well.

64
00:04:04.180 --> 00:04:05.498
These are just a little bit more modern.

65
00:04:07.298 --> 00:04:09.460
&gt;&gt; Brian Holt: So, in other words,
feel free to use both.

66
00:04:10.590 --> 00:04:13.060
There's no reason that you
can't use either one of them.

67
00:04:13.060 --> 00:04:17.580
It's not, this is not frowned on using
get element by ID so either works.

68
00:04:18.580 --> 00:04:20.622
So now I have red square here.

69
00:04:20.622 --> 00:04:21.852
Make that a little bit bigger for you.

70
00:04:21.852 --> 00:04:24.820
Red square dot,

71
00:04:24.820 --> 00:04:29.920
let's say style.border.

72
00:04:29.920 --> 00:04:37.960
Let's say border = 5pixels solid, and
you can pick your favorite CSS color.

73
00:04:37.960 --> 00:04:38.790
My favorite is Peru.

74
00:04:38.790 --> 00:04:40.850
I don't know if you knew this,
but Peru is a color.

75
00:04:40.850 --> 00:04:43.605
And, that's what color it is.

76
00:04:43.605 --> 00:04:46.841
It's a nice shade of orangish yellow,

77
00:04:46.841 --> 00:04:51.067
kind of pukish a little bit,
but who's counting?

78
00:04:52.703 --> 00:04:54.460
&gt;&gt; Brian Holt: But
I mean that could be anything, right?

79
00:04:54.460 --> 00:04:55.950
This could be blue.

80
00:04:55.950 --> 00:04:57.550
But notice it's changing
colors down there, right?

81
00:04:57.550 --> 00:05:02.690
And you can absolutely do that
from the console as well.

82
00:05:02.690 --> 00:05:04.890
Nice little life hack here.

83
00:05:04.890 --> 00:05:08.820
If I right click on this and
say, Inspect Element right here.

84
00:05:08.820 --> 00:05:09.410
Okay.

85
00:05:09.410 --> 00:05:11.850
So, now it's highlighted right there,
right?

86
00:05:11.850 --> 00:05:17.548
I can come back to my console and say $0.

87
00:05:17.548 --> 00:05:23.431
And, that's gonna refer to
whatever I have selected

88
00:05:23.431 --> 00:05:28.659
in my Inspector so
it's nice if you wanna be able

89
00:05:28.659 --> 00:05:33.800
to like manipulate that and say $0.style.

90
00:05:33.800 --> 00:05:39.524
let's change the width to 100%.

91
00:05:42.320 --> 00:05:44.342
So, that works as well.

92
00:05:44.342 --> 00:05:48.914
&gt;&gt; Speaker 2: So now, if you inspect
something else would that other thing

93
00:05:48.914 --> 00:05:52.061
immediately change to width a 100%?

94
00:05:52.061 --> 00:05:54.704
&gt;&gt; Brian Holt: No.
&gt;&gt; Speaker 2: Or would you have to.

95
00:05:54.704 --> 00:05:56.680
&gt;&gt; Brian Holt: Now $0 would refer to that,
but

96
00:05:56.680 --> 00:05:58.610
you'd have to run it again in order for
that to happen.

