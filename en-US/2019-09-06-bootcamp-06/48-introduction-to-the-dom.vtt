WEBVTT

1
00:00:02.461 --> 00:00:05.360
&gt;&gt; Brian Holt: Hopefully you've
de-melted your mind, and

2
00:00:05.360 --> 00:00:08.118
we're going to come back and
melt it again.

3
00:00:08.118 --> 00:00:11.989
But the good news here is,
we're going to get back into browser.

4
00:00:11.989 --> 00:00:15.277
We're going to get back into
the more creative stuff here,

5
00:00:15.277 --> 00:00:18.990
because now you have the foundations
of programming, right?

6
00:00:18.990 --> 00:00:22.140
I'm not really gonna teach you much more
about foundational kind of stuff about

7
00:00:22.140 --> 00:00:23.040
programming.

8
00:00:23.040 --> 00:00:28.190
The rest of is gonna be more practical
applied, taking stuff like on websites and

9
00:00:28.190 --> 00:00:32.240
adding interactivity and behavior and
all the fun stuff, right.

10
00:00:32.240 --> 00:00:36.972
So, the first thing we're gonna talk about
is the document object model that no one

11
00:00:36.972 --> 00:00:37.857
can remember.

12
00:00:37.857 --> 00:00:42.048
So just called the DOM because
that's what it's called.

13
00:00:42.048 --> 00:00:46.177
So, so far we've been using
console.log to show like our work,

14
00:00:46.177 --> 00:00:48.970
right like we've been here in the console.

15
00:00:48.970 --> 00:00:53.913
And let's see,
doing stuff in here, right, and

16
00:00:53.913 --> 00:00:57.444
saying like console.log 5 plus,

17
00:00:57.444 --> 00:01:02.400
where my plus, 5, and
stuff like that, right?

18
00:01:04.810 --> 00:01:08.310
But now, we're going to actually be
interacting with the browser itself.

19
00:01:08.310 --> 00:01:12.552
So, the key thing here to recognize is
there is a difference between the DOM and

20
00:01:12.552 --> 00:01:13.305
JavaScript, right.

21
00:01:14.390 --> 00:01:15.425
JavaScript is a language,

22
00:01:15.425 --> 00:01:17.861
it can be used at other places
besides just in browsers, right?

23
00:01:17.861 --> 00:01:21.285
There's like no JS where we can run
like servers that run on JavaScript.

24
00:01:21.285 --> 00:01:25.511
There is like when I was working at
Netflix, we embedded JavaScript in TV's so

25
00:01:25.511 --> 00:01:27.249
that was not a browser, right?

26
00:01:27.249 --> 00:01:29.467
That was JavaScript running on your TV.

27
00:01:29.467 --> 00:01:32.774
So little known in fact every time that
you're on Netflix is actually doing

28
00:01:32.774 --> 00:01:34.199
JavaScript for all that stuff.

29
00:01:35.690 --> 00:01:39.827
Which is pretty cool, a lot of your
raspberry pies, and like little IoT,

30
00:01:39.827 --> 00:01:44.371
Internet of Things devices, those
are running something called JerryScript,

31
00:01:44.371 --> 00:01:48.009
which is a subset of, or superset,
subset, whatever that is.

32
00:01:48.009 --> 00:01:51.440
It's a set of some sort JavaScript, right?

33
00:01:51.440 --> 00:01:56.060
So there is a bunch of places that can
run JavaScript, not just browsers, okay.

34
00:01:56.060 --> 00:01:57.780
So what I'm gonna show
you here is the DOM,

35
00:01:57.780 --> 00:02:01.710
which is the JavaScript parts that
are very specific to the browser, right?

36
00:02:01.710 --> 00:02:04.358
Like modifying h1s and
changing CSS, right?

37
00:02:04.358 --> 00:02:09.792
Those are going to be like
that's what the DOM is for.

38
00:02:09.792 --> 00:02:15.333
So,
&gt;&gt; Brian Holt: Yeah,

39
00:02:15.333 --> 00:02:20.400
let's talk a little bit about
this Internet fundamentals course

40
00:02:20.400 --> 00:02:26.250
that Jen taught, but just kinda to
recap how a browser actually works.

41
00:02:26.250 --> 00:02:29.969
Whenever you load an HTML document,
I go to index.html or

42
00:02:29.969 --> 00:02:34.170
dom.html in this particular website,
it goes and hits the server.

43
00:02:34.170 --> 00:02:38.060
It does a bunch of stuff in the middle to
do handshakes for SSL and stuff like that.

44
00:02:38.060 --> 00:02:39.743
You don't have to care about that, but

45
00:02:39.743 --> 00:02:42.040
eventually gives you back
an HTML document, right?

46
00:02:42.040 --> 00:02:45.838
On the HTML document, you're gonna have
links to CSS, which you've done before.

47
00:02:45.838 --> 00:02:48.860
You're gonna have script tags,
which are gonna load JavaScript files.

48
00:02:48.860 --> 00:02:53.140
But then, it's going to load that script,
it's going to parse it.

49
00:02:53.140 --> 00:02:56.445
It's going to then execute
that JavaScript, but

50
00:02:56.445 --> 00:03:00.620
that's only gonna happen after
everything else is loaded, okay.

51
00:03:01.890 --> 00:03:04.107
Relatively similar
processes happens with CSS.

52
00:03:04.107 --> 00:03:09.583
So, that didn't tells you often putting
this up on something like Microsoft Azure,

53
00:03:09.583 --> 00:03:12.563
which is where I work or
you can put it up on AWS.

54
00:03:12.563 --> 00:03:14.948
You can put it on GoDaddy,
you can put it on Bluehost,

55
00:03:14.948 --> 00:03:17.662
there's a bunch of different
hosting solutions out there.

56
00:03:17.662 --> 00:03:21.784
So, I guess it's key to recognize here is
that you can have multiple files they can

57
00:03:21.784 --> 00:03:22.761
be loaded in here.

58
00:03:26.811 --> 00:03:29.122
&gt;&gt; Brian Holt: That was a point
of confusion for me here, so

59
00:03:29.122 --> 00:03:31.441
that's why I kind of
put this thing in here.

60
00:03:31.441 --> 00:03:34.800
I was confused about what
order things were loaded in.

61
00:03:34.800 --> 00:03:37.170
So typically,
your JavaScript's gonna be loaded last,

62
00:03:37.170 --> 00:03:40.090
after all of your HTML has been loaded,
after all your CSS has been loaded.

