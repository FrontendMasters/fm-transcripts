WEBVTT

1
00:00:00.140 --> 00:00:01.350
&gt;&gt; Brian Holt: Event Delegation.

2
00:00:02.430 --> 00:00:04.250
So this is,

3
00:00:05.650 --> 00:00:09.790
people love to ask this question of
junior engineers in the interviews.

4
00:00:09.790 --> 00:00:11.480
So if you're trying to get
a job as a junior engineer,

5
00:00:11.480 --> 00:00:13.220
this is probably one to pay attention to.

6
00:00:13.220 --> 00:00:15.100
Just forget everything else I just said.

7
00:00:15.100 --> 00:00:16.050
Just kidding.
Don't forget it.

8
00:00:18.150 --> 00:00:20.490
So I have five buttons here.

9
00:00:20.490 --> 00:00:23.020
As you might imagine if I
wanted to have an event

10
00:00:23.020 --> 00:00:26.000
to be responded to on each one of those
buttons, it's kind of burns some to go

11
00:00:26.000 --> 00:00:29.330
through an event listener to every
single one of those individually.

12
00:00:30.890 --> 00:00:32.190
It'd be super nice,

13
00:00:32.190 --> 00:00:35.580
if I could have one event listener
that would respond to all five.

14
00:00:35.580 --> 00:00:39.274
Now this is done through
a process called event bubbling.

15
00:00:41.185 --> 00:00:42.718
&gt;&gt; Brian Holt: So what I can do here,

16
00:00:42.718 --> 00:00:48.430
rather than have each one of these
have an individual event listener.

17
00:00:48.430 --> 00:00:52.790
What I can do is I can actually listen for
events here at the div layer, so

18
00:00:52.790 --> 00:00:55.290
the the div button container above it.

19
00:00:55.290 --> 00:00:57.630
I'm listening for events on that.

20
00:00:57.630 --> 00:01:02.222
It'd be super nice here if I didn't have
to listen for events on every individual,

21
00:01:02.222 --> 00:01:05.410
but it'd be really nice if I
could just listen to events like

22
00:01:05.410 --> 00:01:06.760
one event listener at a top level.

23
00:01:07.850 --> 00:01:10.290
So here, I have this button container.

24
00:01:10.290 --> 00:01:13.300
And I'm going to bind an event
listener to the button container,

25
00:01:13.300 --> 00:01:15.100
not to the individual buttons.

26
00:01:15.100 --> 00:01:19.370
The way that events work in the DOM,
is that the button or the button here,

27
00:01:19.370 --> 00:01:22.700
if I click on one, it's gonna fire
an event, and nothing's listening for

28
00:01:22.700 --> 00:01:23.390
events on that button.

29
00:01:23.390 --> 00:01:26.294
So then what it's gonna do,
it's gonna go to the next layer above it.

30
00:01:26.294 --> 00:01:28.490
It's gonna go to this
button container above it.

31
00:01:28.490 --> 00:01:32.050
And if it doesn't anything, it just keeps
going up until eventually it bubbles out.

32
00:01:32.050 --> 00:01:33.870
It bubbles to the body level and
then it's done.

33
00:01:35.950 --> 00:01:37.810
So what I'm gonna do is I'm
going to capture that event

34
00:01:37.810 --> 00:01:39.220
here at the button container.

35
00:01:40.330 --> 00:01:43.950
So if I click on this one, notice it
still says you clicked on button one.

36
00:01:45.610 --> 00:01:47.560
I don't know why it's doing it twice,
but whatever.

37
00:01:47.560 --> 00:01:48.060
Who cares.

38
00:01:49.820 --> 00:01:50.960
But I clicked on button forward.

39
00:01:50.960 --> 00:01:52.460
And it's actually able
to respond differently,

40
00:01:52.460 --> 00:01:55.750
based on which button I'm clicking on.

41
00:01:55.750 --> 00:02:01.055
And the way that I am doing
that is that same event.target.

42
00:02:01.055 --> 00:02:05.440
So, click even function, and
it takes in this event as a parameter.

43
00:02:05.440 --> 00:02:08.950
All event listeners take in an event,
you can just depend on that being there.

44
00:02:08.950 --> 00:02:13.010
And then I say alert,
you clicked on button and

45
00:02:13.010 --> 00:02:16.790
I'm looking at the inner text,
because this has three in it.

46
00:02:16.790 --> 00:02:19.950
So it's just saying,
you clicked on button three.

47
00:02:23.060 --> 00:02:28.470
&gt;&gt; Speaker 2: Event.target means the thing
that spark to the event, essentially?

48
00:02:28.470 --> 00:02:29.400
&gt;&gt; Brian Holt: That's exactly right.

49
00:02:32.850 --> 00:02:34.150
&gt;&gt; Speaker 3: If you
didn't have the class,

50
00:02:34.150 --> 00:02:39.130
then you would have to do with
each one on their own, right?

51
00:02:39.130 --> 00:02:42.400
&gt;&gt; Brian Holt: If I wasn't
gonna do it at this diff layer,

52
00:02:42.400 --> 00:02:47.510
if I wasn't going to do one event,
if I wasn't gonna do event bubbling.

53
00:02:47.510 --> 00:02:50.790
Then yeah, I would have to bind one
individually to each individual button,

54
00:02:50.790 --> 00:02:51.548
which is kind of a pain.

55
00:02:51.548 --> 00:02:56.670
Event.target or event.target.

56
00:02:56.670 --> 00:03:01.590
This is gonna be just like Emma said,
it's gonna be whatever sparked the event.

57
00:03:01.590 --> 00:03:04.800
Wherever the genesis of
that particular event is.

58
00:03:04.800 --> 00:03:07.800
What happens if I want to get
where the event was caught.

59
00:03:07.800 --> 00:03:09.610
So I wanna get access to this div.

60
00:03:09.610 --> 00:03:15.420
I don't know why you would, but let's just
say here you wanted to say event dot and

61
00:03:15.420 --> 00:03:18.518
spoiler, it's gonna be current target.

62
00:03:18.518 --> 00:03:24.919
Let's say, .style.backgroundcolor=

63
00:03:24.919 --> 00:03:29.590
orange, something like that.

64
00:03:33.629 --> 00:03:35.328
&gt;&gt; Brian Holt: So
just paste that in there.

65
00:03:40.104 --> 00:03:45.954
&gt;&gt; Brian Holt: Yeah sorry, this is
gonna be backgroundcolor like that.

66
00:03:51.808 --> 00:03:56.366
&gt;&gt; Brian Holt: And then, so that allows
me to get access to whatever where I'm

67
00:03:56.366 --> 00:04:01.440
listening for the event,
not necessarily where it's sparked from.

68
00:04:02.870 --> 00:04:05.250
Now let's talk about one
issue with this that I have.

69
00:04:06.290 --> 00:04:08.100
My issue now is that I'm listening for

70
00:04:08.100 --> 00:04:10.280
click events at the button
container level.

71
00:04:10.280 --> 00:04:12.990
What happens if I click on button
container and not on a button?

72
00:04:14.510 --> 00:04:15.404
So if I click over here.

73
00:04:19.329 --> 00:04:21.430
&gt;&gt; Brian Holt: So
you clicked on button 1, 2, 3, 4, right?

74
00:04:21.430 --> 00:04:24.210
Because that's the inner text of that.

75
00:04:24.210 --> 00:04:27.310
So it's just grabbing all the text
from all of its inner nodes.

76
00:04:27.310 --> 00:04:30.540
And getting that back to you.

77
00:04:30.540 --> 00:04:33.460
So that seems like it's a problem,
doesn't it?

78
00:04:34.480 --> 00:04:38.534
So the way that you can
mitigate that is you can say,

79
00:04:38.534 --> 00:04:42.399
if event that target tag name,
triple equals and

80
00:04:42.399 --> 00:04:46.938
it's all in caps for some reason,
I don't know button.

81
00:04:50.897 --> 00:04:55.238
&gt;&gt; Brian Holt: And
then you move this up there, like that.

82
00:04:59.868 --> 00:05:04.019
&gt;&gt; Brian Holt: And now that will mitigate
our problem, cuz if the tag name is div,

83
00:05:04.019 --> 00:05:07.430
which is what this is gonna
be then is gonna say cool,

84
00:05:07.430 --> 00:05:10.830
I'm just gonna not do anything about it.

85
00:05:10.830 --> 00:05:11.590
Go ahead.

86
00:05:11.590 --> 00:05:12.830
&gt;&gt; Speaker 4: In order
to get this to work,

87
00:05:12.830 --> 00:05:14.258
you're gonna have to put
it into your console.

88
00:05:14.258 --> 00:05:18.737
&gt;&gt; Brian Holt: Correct, yeah.

89
00:05:25.257 --> 00:05:27.682
&gt;&gt; Brian Holt: So now if I go in here,
it's not gonna work.

90
00:05:30.350 --> 00:05:32.080
&gt;&gt; Brian Holt: But
if I click on that, it'll still work.

91
00:05:35.470 --> 00:05:37.980
&gt;&gt; Speaker 2: So
why is button all in uppercase?

92
00:05:37.980 --> 00:05:43.100
&gt;&gt; Brian Holt: So something to
keep in mind is that, browsers and

93
00:05:43.100 --> 00:05:44.590
JavaScript are quite old, right?

94
00:05:44.590 --> 00:05:49.820
And there's been a fundamental idea
of whenever we revise the DOM,

95
00:05:49.820 --> 00:05:51.550
we revise JavaScript.

96
00:05:51.550 --> 00:05:54.260
We don't wanna break anything
that used to exist, right?

97
00:05:54.260 --> 00:05:56.690
So that's why like if you go to
the space channel website for

98
00:05:56.690 --> 00:06:00.970
space channel one,
it's still out there and it still works.

99
00:06:00.970 --> 00:06:03.540
Which to me,
I think it's actually quite cool.

100
00:06:03.540 --> 00:06:05.273
That if I write something,
and I put it on the Internet,

101
00:06:05.273 --> 00:06:08.680
and as long as it's still on the internet,
it's going to work indefinitely.

102
00:06:09.870 --> 00:06:15.600
So it's actually an archival, as well as a
human history since the Internet started.

103
00:06:17.770 --> 00:06:22.340
But, the part that's kinda crappy about
that is we end up with stuff like this

104
00:06:22.340 --> 00:06:26.150
that it was defined 20 years ago,

105
00:06:26.150 --> 00:06:28.590
that the tag name was always
gonna be in upper case.

106
00:06:28.590 --> 00:06:31.005
And now we're still stuck with
that decision 20 years later.

