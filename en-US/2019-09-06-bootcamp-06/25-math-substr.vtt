WEBVTT

1
00:00:00.260 --> 00:00:03.040
&gt;&gt; Brian Holt: So another one is like we
were talking about how numbers are kind of

2
00:00:03.040 --> 00:00:03.970
weird in JavaScript.

3
00:00:04.990 --> 00:00:12.690
There's a math collection of
functions that you can call.

4
00:00:12.690 --> 00:00:17.390
So this one I call
console.log(Math.round(5.1).

5
00:00:17.390 --> 00:00:19.240
This works exactly like how
you would expect it to,

6
00:00:19.240 --> 00:00:21.190
it rounds to the nearest number.

7
00:00:21.190 --> 00:00:23.580
So you can see here it gives me five.

8
00:00:23.580 --> 00:00:27.170
You can also say round down and
you can force it to round down.

9
00:00:27.170 --> 00:00:33.116
So if I say floor, it always rounds down,
even if this is like 5.9 right?

10
00:00:33.116 --> 00:00:35.670
And same with ceil.

11
00:00:35.670 --> 00:00:40.610
Ceiling, then someone got lazy and
didn't want the I-N-G, so.

12
00:00:41.930 --> 00:00:44.640
Even if this is 5.1, it rounds up, right?

13
00:00:46.700 --> 00:00:49.570
There’s a bunch of them,
like the math object has a lot of stuff.

14
00:00:49.570 --> 00:00:54.910
If I put max and I give it two things,
it’ll return to me the bigger one.

15
00:00:54.910 --> 00:00:57.095
That can be useful, right?

16
00:00:57.095 --> 00:00:58.953
And min as well, right?

17
00:00:58.953 --> 00:01:02.537
So it’ll return to, and
I can give it as many numbers as I want.

18
00:01:06.522 --> 00:01:07.676
&gt;&gt; Brian Holt: Right?
It'll just say like,

19
00:01:07.676 --> 00:01:10.430
okay, I'm just gonna give you the smallest
one of all those numbers that you gave me.

20
00:01:11.510 --> 00:01:16.130
So, again, these are on MDN,
don't memorize these.

21
00:01:16.130 --> 00:01:17.400
That's kind of a rule of thumb.

22
00:01:17.400 --> 00:01:20.300
If you know how to Google it quickly,
you don't need to memorize it.

23
00:01:22.330 --> 00:01:24.960
And also, please Google everything.

24
00:01:25.960 --> 00:01:28.430
Little known fact,
developers are just professional Googlers.

25
00:01:30.540 --> 00:01:34.570
I'm constantly looking this stuff up,
constantly.

26
00:01:35.610 --> 00:01:36.660
So there's no need,

27
00:01:36.660 --> 00:01:40.080
there's no expectations that you
need to memorize any of this, right?

28
00:01:40.080 --> 00:01:42.910
Mostly you just need to be familiar enough
with it that you can Google it later.

29
00:01:46.000 --> 00:01:47.950
Okay, here's another one.

30
00:01:47.950 --> 00:01:55.720
So I put my name here, and there's
a thing called sub-string or sub stir.

31
00:01:55.720 --> 00:02:00.572
And the first number is,
now we've got to remember.

32
00:02:00.572 --> 00:02:05.538
It's where to start, right, so
if you go through Brian Holt,

33
00:02:05.538 --> 00:02:10.315
the sixth position,
which starting from 0, 1, 2, 3,

34
00:02:10.315 --> 00:02:15.250
4, 5, 6, it's how it starts there, right?

35
00:02:15.250 --> 00:02:20.040
Again, remember, starting from 0,
because everything starts from 0, and

36
00:02:20.040 --> 00:02:24.700
then 3 is how many characters
that you want to take, right?

37
00:02:24.700 --> 00:02:28.550
So notice it's returning Hol,
so it takes, it starts at 6,

38
00:02:28.550 --> 00:02:32.360
it goes one, two, three,
and then it stops.

39
00:02:32.360 --> 00:02:34.270
So that's how we get that.

40
00:02:36.090 --> 00:02:42.460
So what happens if I change this from 6
to 4, it's gonna give me back the n H.

41
00:02:43.900 --> 00:02:47.420
If I get rid of the three, it's going to
take all the way to the end of the string.

42
00:02:47.420 --> 00:02:49.790
&gt;&gt; Speaker 2: Can you add
a third number where, you know,

43
00:02:49.790 --> 00:02:51.200
it tells you where to start?

44
00:02:51.200 --> 00:02:52.760
And then the second would be like, step.

45
00:02:52.760 --> 00:02:56.878
So you want every second
letter from there.

46
00:02:56.878 --> 00:02:58.330
&gt;&gt; Brian Holt: I don't know.

47
00:02:58.330 --> 00:02:59.328
So let's look it up.

48
00:02:59.328 --> 00:03:00.350
&gt;&gt; Speaker 2: Okay.

49
00:03:00.350 --> 00:03:03.260
&gt;&gt; Brian Holt: So I mean, this is exactly
my point, like, I've been doing this for

50
00:03:03.260 --> 00:03:04.320
over a decade at this point.

51
00:03:06.570 --> 00:03:07.080
I don't know.

52
00:03:07.080 --> 00:03:11.260
[LAUGH] I have to look this up
almost every time that I do this.

53
00:03:11.260 --> 00:03:14.230
So I would just come in here and
say substr.

54
00:03:15.540 --> 00:03:17.770
It's confusing,
because there's also a sub string.

55
00:03:17.770 --> 00:03:20.510
And they're two different things and
I can't remember why they're different.

56
00:03:22.460 --> 00:03:24.790
I just see like,
you can see the first one is sub string.

57
00:03:27.030 --> 00:03:30.704
And the second one is substr, so.

58
00:03:34.981 --> 00:03:38.312
&gt;&gt; Brian Holt: You can even see here that
it's not strictly deprecated, whatever,

59
00:03:38.312 --> 00:03:39.050
I don't care.

60
00:03:41.390 --> 00:03:46.740
So, if you go down here, this is the end,

61
00:03:46.740 --> 00:03:50.060
so the first number is start,
the second number, which,

62
00:03:50.060 --> 00:03:54.800
if it's in these square brackets,
means it's optional, right, the length.

63
00:03:54.800 --> 00:03:56.790
So that's when we're
going to use that one,

64
00:03:56.790 --> 00:03:58.110
you might be talking
about the other one else.

65
00:03:58.110 --> 00:03:59.263
Let's take a look at what that one is.

66
00:04:01.743 --> 00:04:03.490
&gt;&gt; Brian Holt: Index start and index end.

67
00:04:03.490 --> 00:04:08.510
Okay, so this one, you would say like,
from five to seven and

68
00:04:08.510 --> 00:04:10.180
it would give you a three length one,
right?

69
00:04:10.180 --> 00:04:12.740
Whereas the substr gives you,
you give it a length.

70
00:04:13.810 --> 00:04:15.870
So they work roughly the same way.

71
00:04:15.870 --> 00:04:21.522
So you'd have to write your own
function to do something like that.

72
00:04:21.522 --> 00:04:22.254
Which, now that's your assignment.

73
00:04:22.254 --> 00:04:28.089
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Brian Holt: Cool,

74
00:04:28.089 --> 00:04:32.378
so yeah, again, there are tons and
tons and tons of these.

75
00:04:36.496 --> 00:04:37.470
&gt;&gt; Speaker 2: And make use of them, right?

76
00:04:37.470 --> 00:04:41.950
&gt;&gt; Brian Holt: Someone else, if it already
exists inside of like the browser and

77
00:04:41.950 --> 00:04:44.080
all that kind of stuff,
then just use it, right?

78
00:04:44.080 --> 00:04:47.340
Because that means someone else wrote it,
it's already fast, it's already tested.

79
00:04:48.600 --> 00:04:50.720
So yeah, you should definitely
lean on those kind of things.

80
00:04:50.720 --> 00:04:52.760
You should just learn more and
more about them.

