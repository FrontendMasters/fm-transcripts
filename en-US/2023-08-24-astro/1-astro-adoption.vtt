WEBVTT

1
00:00:00.070 --> 00:00:05.193
And I think the biggest piece of this and
one of the things that is nearest and

2
00:00:05.193 --> 00:00:09.583
dearest to my heart is most of what
we're doing is not complex and

3
00:00:09.583 --> 00:00:14.950
now that is not to say that the work
we're doing isn't challenging it's not to

4
00:00:14.950 --> 00:00:20.156
say that it's not important or that
it's not hardly it's not easy right but

5
00:00:20.156 --> 00:00:24.713
it's not complex we're not building
multiple updates per second

6
00:00:24.713 --> 00:00:29.349
hundreds of thousands or
millions of concurrent users like the vast

7
00:00:29.349 --> 00:00:33.880
majority of us are just trying to
get information on to a website.

8
00:00:33.880 --> 00:00:37.782
And that website is updating,
I don't know, maybe once an hour,

9
00:00:37.782 --> 00:00:41.892
maybe a couple times an hour on
a really active site, because it just,

10
00:00:41.892 --> 00:00:44.350
that's just the nature of the internet.

11
00:00:44.350 --> 00:00:46.550
Most of what we're doing is informational.

12
00:00:46.550 --> 00:00:49.800
Most of what we're doing is we're
allowing people to perform a task.

13
00:00:49.800 --> 00:00:53.418
And the vast majority of websites,
even really busy websites,

14
00:00:53.418 --> 00:00:55.820
aren't seeing the type of scale.

15
00:00:55.820 --> 00:00:59.564
That a lot of these frameworks have been
built for when you start looking at what

16
00:00:59.564 --> 00:01:02.514
next or react or some of these
frameworks are built to handle,

17
00:01:02.514 --> 00:01:05.240
they're built to handle
the scale of Facebook.

18
00:01:05.240 --> 00:01:10.022
They're built to handle the scale of
a site like Airbnb, where the things that

19
00:01:10.022 --> 00:01:15.312
are happening are extraordinarily high
volume, extraordinarily high complexity,

20
00:01:15.312 --> 00:01:19.803
and realistically speaking, if you
think about the websites you visit on

21
00:01:19.803 --> 00:01:24.876
a day-to-day basis, the websites that we
work on, most of them aren't that most

22
00:01:24.876 --> 00:01:29.940
of what we use is not Facebook or Twitter
or Airbnb or similar types of sites.

23
00:01:29.940 --> 00:01:33.430
It's usually something that's more like,
I need some information.

24
00:01:33.430 --> 00:01:34.600
I need a list of products.

25
00:01:34.600 --> 00:01:36.350
I need to see what my
shopping card is doing.

26
00:01:36.350 --> 00:01:39.984
And each of those things is,
it's not easy to build, but

27
00:01:39.984 --> 00:01:44.380
it's not the level of complexity
that that seems necessary to manage

28
00:01:44.380 --> 00:01:49.100
alike multi-user real time feed or
something like that, right?

29
00:01:49.100 --> 00:01:53.706
So we get told that we need these
these big frameworks with lots and

30
00:01:53.706 --> 00:01:58.900
lots of power and you know, the ability
to instantly invalidate things or

31
00:01:58.900 --> 00:02:03.337
the ability to control your cache or
to do all of this stuff, and

32
00:02:03.337 --> 00:02:07.777
we just don't it's it's a lot
of kinda voluntary suffering to

33
00:02:07.777 --> 00:02:12.360
pick up caching manually to pick
up managing servers manually.

34
00:02:12.360 --> 00:02:14.577
If you're not actually
using those features for

35
00:02:14.577 --> 00:02:17.119
a business critical thing
if you're opting into that,

36
00:02:17.119 --> 00:02:20.240
because somebody told you that
maybe you'll need it someday.

37
00:02:20.240 --> 00:02:25.221
If you grow to Twitter scale
you can do that there is no

38
00:02:25.221 --> 00:02:29.538
wrong choice in tech they
are just trade offs.

39
00:02:29.538 --> 00:02:30.176
Right?

40
00:02:30.176 --> 00:02:36.025
And so what I like about Astro is
that it's going at it the other way. Where frameworks like Nexn and Remix and stuff,

41
00:02:36.025 --> 00:02:41.775
they're thinking about, like,
how does this thing become big and very complicated and very interactive

42
00:02:41.775 --> 00:02:47.620
what Astro is saying is,
it's probably gonna start simple.

43
00:02:47.620 --> 00:02:50.430
And it's gonna scale, and
it's gonna get complex.

44
00:02:50.430 --> 00:02:54.694
But you should do that like on a per
page or even on a per component level,

45
00:02:54.694 --> 00:02:58.533
not necessarily up your entire
website into this very complex,

46
00:02:58.533 --> 00:03:02.587
hard to manage framework that is
gonna have things like pagerduty,

47
00:03:02.587 --> 00:03:07.208
that's gonna have things like Running
servers and caches that you have to now

48
00:03:07.208 --> 00:03:11.304
think about and maintain.Whereas
Astro's like just put it on a CDN.

49
00:03:11.304 --> 00:03:14.719
You'll know when it's time to
no longer use the CDN, but

50
00:03:14.719 --> 00:03:18.776
it probably won't be as soon as
you might suspect, because again,

51
00:03:18.776 --> 00:03:24.020
we kind of get sold this idea that we need
all of this complexity and all this power.

52
00:03:24.020 --> 00:03:27.960
But we just don't,
in the vast majority of websites.

53
00:03:27.960 --> 00:03:32.575
&gt;&gt; Yeah people are just kinda debating
in chat around the adoption of astro and

54
00:03:32.575 --> 00:03:34.845
I pointed to the astro showcase, but

55
00:03:34.845 --> 00:03:39.840
maybe you could talk about how either
you're using it or companies are using it.

56
00:03:39.840 --> 00:03:44.517
&gt;&gt; So there's the fairly standard
this is a listing of the things that

57
00:03:44.517 --> 00:03:46.530
happen on learn with Jason.

58
00:03:46.530 --> 00:03:51.843
So I've got these are dynamic in
the sense that they update whenever my

59
00:03:51.843 --> 00:03:58.163
schedule updates, but those are once per
day not per second or anything like that.

60
00:03:58.163 --> 00:04:02.076
These are pulled from
YouTube at build time again,

61
00:04:02.076 --> 00:04:07.627
these update once per day probably a few
times per week same with these and

62
00:04:07.627 --> 00:04:12.906
then I have a list of episodes that
list of episodes is everything that

63
00:04:12.906 --> 00:04:18.366
I've ever made this is I think where
am I at three almost 350 episodes

64
00:04:18.366 --> 00:04:23.645
of the show I've got the schedule
of everything that's coming up and

65
00:04:23.645 --> 00:04:27.775
then I also run a blog I've
got a newsletter capture.

66
00:04:27.775 --> 00:04:33.008
And then a few really dynamic pieces
like we've got fuzzy search so

67
00:04:33.008 --> 00:04:37.585
if you wanna find stuff about
Astro you can jump through and

68
00:04:37.585 --> 00:04:42.443
find a video on Astro right and
this is powered by Algolia and so

69
00:04:42.443 --> 00:04:47.209
this is a like partially hydrated
section of the website that

70
00:04:47.209 --> 00:04:51.253
runs this command K overlay
&gt;&gt; So

71
00:04:51.253 --> 00:04:55.210
do you have it set up where Netlify
builds every night or something.

72
00:04:55.210 --> 00:04:59.865
&gt;&gt; Netlify builds whenever I make a change
and so I just have webhooks built so

73
00:04:59.865 --> 00:05:03.619
that if I update my CMS Netlify
knows to rebuild, whenever I

74
00:05:03.619 --> 00:05:08.499
change the YouTube stuff, that one I
haven't bothered to set up a webhook for

75
00:05:08.499 --> 00:05:13.529
because I build the site often enough
anyways, that it kinda doesn't matter,

76
00:05:13.529 --> 00:05:18.257
but yeah, all of this is run, the episodes
in the schedule are powered by,

77
00:05:18.257 --> 00:05:20.470
Sanity CMS and that has web hooks.

78
00:05:20.470 --> 00:05:24.386
So, whenever I make a change, Astro
is aware of it because of Netlify and

79
00:05:24.386 --> 00:05:26.070
that rebuilds the, the site.

80
00:05:27.860 --> 00:05:32.229
Astro itself is being used
by a lot of different

81
00:05:32.229 --> 00:05:35.800
websites It's still pretty early.

82
00:05:35.800 --> 00:05:39.780
So take like take a lot of what I'm
saying with a grain of salt like

83
00:05:39.780 --> 00:05:42.970
Astro is still a relatively
new coming framework.

84
00:05:42.970 --> 00:05:47.265
And this idea of partial
hydration is solid, but

85
00:05:47.265 --> 00:05:52.620
not thoroughly battle tested
on every particular use case.

86
00:05:52.620 --> 00:05:54.585
So use your judgment and and

87
00:05:54.585 --> 00:06:00.410
you like my goal today is not to tell you
that you should use Astro for everything.

88
00:06:00.410 --> 00:06:03.659
My goal is to give you another
tool in your toolbox, so

89
00:06:03.659 --> 00:06:08.426
that as you're looking at projects that
you need to build, you're able to say

90
00:06:08.426 --> 00:06:13.360
this doesn't seem as complex as would
be as would merit like a next JS build.

91
00:06:13.360 --> 00:06:15.350
Let's put this thing on Astro.

92
00:06:15.350 --> 00:06:17.290
And a lot of times you can, and

93
00:06:17.290 --> 00:06:21.557
what I wanna show you today is
actually how far you can take Astro so

94
00:06:21.557 --> 00:06:26.720
that, where that window of this is
complex enough to use something else.

95
00:06:26.720 --> 00:06:29.770
It's actually further away than I
think a lot of us might suspect.

96
00:06:30.830 --> 00:06:31.466
But yeah,

97
00:06:31.466 --> 00:06:35.790
there are a lot of sites on here.The
Firebase website is running on it.

98
00:06:35.790 --> 00:06:38.808
Everybody's welcome to dig through
these and see what they can find.

99
00:06:38.808 --> 00:06:42.343
But in the grand scheme of things,
in the grand scheme of the web,

100
00:06:42.343 --> 00:06:46.905
a fun stat that I found that kinda blew my
mind, I was thinking, I'm on Twitter, and

101
00:06:46.905 --> 00:06:49.733
I spend a lot of time on
Twitter talking about tech and

102
00:06:49.733 --> 00:06:53.077
listening to people talk about
what they're excited about,

103
00:06:53.077 --> 00:06:57.840
what the standards are, what you
should and shouldn't be building with.

104
00:06:57.840 --> 00:07:00.900
And because I've spent so
much time in that bubble.

105
00:07:00.900 --> 00:07:04.401
I was convinced that React had
a chokehold on the industry and

106
00:07:04.401 --> 00:07:08.940
that everybody was building in React and
so many websites were in React.

107
00:07:08.940 --> 00:07:09.940
And so I went and I looked at it.

108
00:07:09.940 --> 00:07:12.591
There's this website called W3Techs and

109
00:07:12.591 --> 00:07:17.750
it keeps track of what they can measure
from millions of websites, right?

110
00:07:17.750 --> 00:07:23.600
And so if you start digging in
to how many websites use React.

111
00:07:23.600 --> 00:07:28.513
This is giant JavaScript here's
react React is being used by

112
00:07:28.513 --> 00:07:32.366
roughly 3% of all websites
on the internet and

113
00:07:32.366 --> 00:07:37.468
that is not by no means a small
number like 3% of the Internet is

114
00:07:37.468 --> 00:07:43.245
a huge number of websites but
to listen to the bubble of tech discourse,

115
00:07:43.245 --> 00:07:49.380
you would think that this number
was significantly higher, right?

116
00:07:49.380 --> 00:07:52.956
And also, the way that I hear people
talk about things like jQuery,

117
00:07:52.956 --> 00:07:54.410
it sounds like it's dead.

118
00:07:54.410 --> 00:07:55.830
It sounds like nobody uses it.

119
00:07:55.830 --> 00:07:56.790
But look at this.

120
00:07:57.800 --> 00:08:05.810
Almost every website, that is shipped with
JavaScript is running jQuery today, right?

121
00:08:05.810 --> 00:08:08.020
This is these are relatively recent stats.

122
00:08:08.020 --> 00:08:10.050
I think they update weekly or something.

123
00:08:10.050 --> 00:08:15.702
So if three out of four websites on
the internet is shipping jQuery,

124
00:08:15.702 --> 00:08:20.461
and three out of 100 websites
is shipping React the use

125
00:08:20.461 --> 00:08:23.650
cases that we think we need React for.

126
00:08:24.700 --> 00:08:27.250
They're just not as prevalent as we think.

127
00:08:27.250 --> 00:08:30.068
Right?
And so reaching for these frameworks as

128
00:08:30.068 --> 00:08:34.510
a default, it can get us into
maintenance trouble later down the road.

129
00:08:34.510 --> 00:08:39.036
And for me, the biggest thing that we're
after here is I want to spend my time

130
00:08:39.036 --> 00:08:42.140
building things, not maintaining things.

131
00:08:42.140 --> 00:08:46.710
I don't ever want to get paged
because the marketing site is down.

132
00:08:46.710 --> 00:08:49.510
I don't ever, actually,
I don't ever wanna get paged ever.

133
00:08:49.510 --> 00:08:53.962
So if I can build every single part of the
website in a way that doesn't go down and

134
00:08:53.962 --> 00:08:57.682
like, if you want to go for
never get page ship HTML and CSS to a CDN,

135
00:08:57.682 --> 00:08:58.990
it will not go down.

136
00:08:58.990 --> 00:09:01.724
CDNs are about the last thing in
the technology chain that's gonna get

137
00:09:01.724 --> 00:09:02.770
taken down.

138
00:09:02.770 --> 00:09:05.373
And if the CDN goes down,
nobody's worried about your website,

139
00:09:05.373 --> 00:09:06.780
the whole internet is down.

140
00:09:06.780 --> 00:09:09.050
So yeah, like I said,
I want to build stuff, not maintain it.

141
00:09:09.050 --> 00:09:12.963
And I think that one of the reasons that
Astro is attractive to me is that it

142
00:09:12.963 --> 00:09:16.760
defaults toward the thing that has
the least number of moving parts.

143
00:09:16.760 --> 00:09:21.206
I don't want to have to think about
whether or not my serverless functions

144
00:09:21.206 --> 00:09:25.810
are speaking to my cache properly or
speaking to whatever other piece.

145
00:09:25.810 --> 00:09:27.810
I don't wanna be maintaining a server.

146
00:09:27.810 --> 00:09:33.346
I had to ship a server for a server
full framework and for the first time

147
00:09:33.346 --> 00:09:39.670
in my last decade of work was getting
emails about your server is out of memory.

148
00:09:39.670 --> 00:09:41.980
Your server crashed and was restarted.

149
00:09:41.980 --> 00:09:45.667
And I just I was like, My God, I forgot
that these problems existed because I'd

150
00:09:45.667 --> 00:09:49.310
been shipping static websites and
not having to deal with these problems.

151
00:09:49.310 --> 00:09:53.321
So what part of the problem that I think
we have is that a lot of us just either

152
00:09:53.321 --> 00:09:57.398
never had to do it or have forgotten how
much work it was to keep servers up and

153
00:09:57.398 --> 00:09:58.840
running.

154
00:09:58.840 --> 00:10:05.050
And so seeing everybody moving towards
servers as a default freaks me out.

155
00:10:05.050 --> 00:10:08.630
Again, there is no such thing as
a wrong choice, there's just trade-offs.

156
00:10:08.630 --> 00:10:13.434
And I personally I'm not willing to accept
the trade-off of running a server unless

157
00:10:13.434 --> 00:10:17.694
there is no other option, and the way I
see it in the vast majority of cases,

158
00:10:17.694 --> 00:10:22.161
there are other options and you can ship
something much simpler that takes a lot

159
00:10:22.161 --> 00:10:26.900
less maintenance and is easier to
deploy and keep healthy question.

160
00:10:26.900 --> 00:10:31.580
&gt;&gt; So would it be accurate to characterize
Astro as content oriented versus app

161
00:10:31.580 --> 00:10:32.320
oriented?

162
00:10:34.510 --> 00:10:38.006
&gt;&gt; I think that is what has
been most proven out right now,

163
00:10:38.006 --> 00:10:42.350
is that Astro is very,
very good for content oriented.

164
00:10:42.350 --> 00:10:48.190
That being said,
most apps are single page apps.

165
00:10:48.190 --> 00:10:53.423
Like if you look at the dominance of
the 3.3% of websites on the internet

166
00:10:53.423 --> 00:10:58.240
that are running React,
most of them are running create React app.

167
00:10:58.240 --> 00:11:03.020
So it's mostly single page apps
that are just mounted into HTML.

168
00:11:03.020 --> 00:11:04.567
And if you wanna do that on Astro,

169
00:11:04.567 --> 00:11:08.170
you absolutely can because Astro
under the hood is running Vite.

170
00:11:08.170 --> 00:11:12.933
So if you wanna build a page on your Astro
site that has a div that mounts a single

171
00:11:12.933 --> 00:11:15.350
page app that runs React router.

172
00:11:15.350 --> 00:11:17.100
And has your whole dashboard on it.

173
00:11:17.100 --> 00:11:18.200
You can absolutely do that.

174
00:11:18.200 --> 00:11:23.320
And I've seen that done is like,
is it gonna give you server rendering?

175
00:11:23.320 --> 00:11:27.091
It can we'll talk about how Astra does
server rendering if you if you wanna opt

176
00:11:27.091 --> 00:11:28.350
into that.

177
00:11:28.350 --> 00:11:30.288
But for the vast majority of use cases,

178
00:11:30.288 --> 00:11:35.170
we're seeing that single page apps are the
way that that the internet gets built.

179
00:11:35.170 --> 00:11:40.053
Despite claims to the contrary,
like server rendering is the exception,

180
00:11:40.053 --> 00:11:40.990
not the rule.

181
00:11:40.990 --> 00:11:45.517
And I think that we've, again,
tech Twitter is a is a big bubble and

182
00:11:45.517 --> 00:11:46.480
Hacker News.

183
00:11:46.480 --> 00:11:48.260
And these these websites are very,

184
00:11:48.260 --> 00:11:52.293
very aggressively telling us that things
are this way and they must be this way and

185
00:11:52.293 --> 00:11:56.204
I just, I'm not here to tell you
that anything must be anyway, I'm trying

186
00:11:56.204 --> 00:12:00.400
to remind everybody that there are a lot
of tools and this is a big spectrum.

187
00:12:00.400 --> 00:12:05.405
And you wanna pick a tool that's actually
solving the problem you have, you know,

188
00:12:05.405 --> 00:12:10.820
like, sure you can go and get a pneumatic
drill and use that to put in one painting.

189
00:12:10.820 --> 00:12:12.170
But why?

190
00:12:12.170 --> 00:12:13.306
Like it's a lot of setup and

191
00:12:13.306 --> 00:12:16.480
maintenance to keep a pneumatic drill
running when all you need is one hole.

192
00:12:16.480 --> 00:12:21.331
All right so just get the hammer get
the screwdriver like it's gonna be okay

193
00:12:21.331 --> 00:12:25.029
you don't need the big complex
many moving parts thing.

194
00:12:25.029 --> 00:12:29.976
I really like the developer experience
of modern JavaScript I really really

195
00:12:29.976 --> 00:12:34.921
like building component based websites
I love the portability of being able

196
00:12:34.921 --> 00:12:39.730
to build with React or Solid or Svelte
and Vue is wonderful to work with.

197
00:12:39.730 --> 00:12:43.667
So all of these have amazing perks
of how it is to work with them

198
00:12:43.667 --> 00:12:48.382
the improvements they have over
manually rolling your own JavaScript or

199
00:12:48.382 --> 00:12:52.015
writing HTML templates and
copy pasting the headers and

200
00:12:52.015 --> 00:12:57.220
footers around The problem is that all
of them come with JavaScript trade offs.

201
00:12:57.220 --> 00:13:00.672
You get these big bundle sizes of,
it's 30 something kilobytes for

202
00:13:00.672 --> 00:13:04.850
React these days, and that's before
you add any of your app code.

203
00:13:04.850 --> 00:13:07.370
And again,
when you're running it like that,

204
00:13:07.370 --> 00:13:09.960
the whole page has to be
hydrated as JavaScript.

205
00:13:11.210 --> 00:13:14.342
And so when the whole page has to be
hydrated to JavaScript, and that means

206
00:13:14.342 --> 00:13:17.640
that people need to be able to run it
without JavaScript, but it won't work.

207
00:13:17.640 --> 00:13:19.840
So then you have to reach for
server rendering.

208
00:13:19.840 --> 00:13:22.806
So this is again, like some of this stuff
is like we're solving problems that we

209
00:13:22.806 --> 00:13:25.490
created for ourselves that we could
have solved by going the other way.

210
00:13:25.490 --> 00:13:27.560
And I think that Astro
is going the other way.

211
00:13:27.560 --> 00:13:29.300
It's saying,
you don't need server rendering.

212
00:13:29.300 --> 00:13:31.770
Just build with the DX that's great.

213
00:13:31.770 --> 00:13:36.470
And ship the thing that works best for
the vast majority of use cases.

214
00:13:36.470 --> 00:13:38.510
And only add complexity
when it's necessary.

215
00:13:40.490 --> 00:13:44.003
And I think that leads me to like my
biggest takeaway which is Astro is

216
00:13:44.003 --> 00:13:46.240
the right kind of boring.

217
00:13:46.240 --> 00:13:50.020
I desperately want to be bored at work.

218
00:13:50.020 --> 00:13:53.813
The last thing I want to use
my energy my excitement for

219
00:13:53.813 --> 00:13:55.980
is putting out a fire at work.

220
00:13:55.980 --> 00:13:57.230
I want to cook over fires.

221
00:13:57.230 --> 00:13:58.990
I don't wanna put out fires Right.

222
00:13:58.990 --> 00:14:01.796
I want all of my energy left to
hang out with my friends and

223
00:14:01.796 --> 00:14:05.520
family to do my hobbies to work
on projects that are fun for me.

224
00:14:05.520 --> 00:14:08.825
I don't want to ship some complicated
thing into production and

225
00:14:08.825 --> 00:14:11.220
then find out that is
down on a Saturday night.

226
00:14:11.220 --> 00:14:15.280
Now I get to leave the barbecue
to go do something for work.

227
00:14:15.280 --> 00:14:17.340
That is never how I wanna spend my time.

228
00:14:17.340 --> 00:14:20.780
So I want my tech to be boring.

229
00:14:20.780 --> 00:14:25.762
And I want it to be boring in the way that
after I've shipped it if I forget to look

230
00:14:25.762 --> 00:14:29.988
at it for the rest of my life it will
continue to be on the internet and

231
00:14:29.988 --> 00:14:34.894
HTML and CSS on a CDN will continue to
function probably until the heat death of

232
00:14:34.894 --> 00:14:39.230
the universe judging by the way
that We've handled web standards.

233
00:14:39.230 --> 00:14:43.690
So far, the web is very, very good at
maintaining backward compatibility.

234
00:14:43.690 --> 00:14:45.840
The JavaScript ecosystem is less so.

235
00:14:45.840 --> 00:14:50.862
So if you're betting on something that
takes the least amount of your time

236
00:14:50.862 --> 00:14:55.803
after you build it, go for the things
that don't have moving parts go for

237
00:14:55.803 --> 00:15:00.950
the things that don't rely on changing
standards that are very fast.

238
00:15:00.950 --> 00:15:03.686
Look for something that is
just gonna set and forget for

239
00:15:03.686 --> 00:15:07.792
the rest of time.Maintenance should be
because you've got a new feature to add or

240
00:15:07.792 --> 00:15:11.780
because you've, you wanna go overhaul
that page, not because it's broken or

241
00:15:11.780 --> 00:15:14.697
because it's down or
because the major version change and

242
00:15:14.697 --> 00:15:18.890
now you've got to rewrite the whole thing
to match whatever the breaking changes.

243
00:15:18.890 --> 00:15:20.440
We're in version four.

244
00:15:20.440 --> 00:15:20.940
Right?

