WEBVTT

1
00:00:00.148 --> 00:00:01.199
We have our homepage.

2
00:00:01.199 --> 00:00:04.804
Right now, the homepage consists of
a hero button and a call to action.

3
00:00:04.804 --> 00:00:07.564
We've got our About page set up,
it's powered by Markdown.

4
00:00:07.564 --> 00:00:11.591
And we have our shop, our shop is
loading products from a third-party API.

5
00:00:11.591 --> 00:00:15.506
And we have a cart, the Add to
Cart button is powered by React.

6
00:00:15.506 --> 00:00:17.668
The cart itself is powered by Solid, and

7
00:00:17.668 --> 00:00:20.664
we're sharing state between
those using Nano Stores.

8
00:00:20.664 --> 00:00:24.762
So this is probably
a fairly dynamic setup.

9
00:00:24.762 --> 00:00:29.189
You could see going further with this,
we could start looking at user accounts,

10
00:00:29.189 --> 00:00:32.379
we could start looking at
storing the cart somewhere, and

11
00:00:32.379 --> 00:00:34.480
rehydrating that as you come back in.

12
00:00:34.480 --> 00:00:37.836
All of which is possible, but is a little
out of the scope of what we wanna do,

13
00:00:37.836 --> 00:00:39.364
cuz I wanna show a little bit more.

14
00:00:39.364 --> 00:00:42.935
So looking at how can we reuse
some of these Astro components, so

15
00:00:42.935 --> 00:00:46.720
we're gonna look at putting a preview
of products on our homepage.

16
00:00:46.720 --> 00:00:50.791
Then we're gonna look at Astro
content collections, we're going to

17
00:00:50.791 --> 00:00:55.143
figure out how to run a blog in Astro,
we're gonna power it with Markdown.

18
00:00:55.143 --> 00:00:59.254
Because we've already looked at how to
load from an API, so we could use any

19
00:00:59.254 --> 00:01:03.432
headless CMS that we wanted, whether
that's WordPress in headless mode or

20
00:01:03.432 --> 00:01:06.525
Contentful or Sanity or
any of the other ones out there.

21
00:01:06.525 --> 00:01:08.010
But we're gonna use Markdown so

22
00:01:08.010 --> 00:01:11.259
that we can look at how we can make
our Markdown front matter type safe.

23
00:01:11.259 --> 00:01:15.800
And also how we can take advantage of some
of these built-in features of content

24
00:01:15.800 --> 00:01:19.530
collections that make building
a blog powered by Markdown really

25
00:01:19.530 --> 00:01:20.708
straightforward.

26
00:01:20.708 --> 00:01:22.690
We're also going to set up an RSS feed,
and

27
00:01:22.690 --> 00:01:25.402
then we'll start looking into
doing some dynamic stuff.

28
00:01:25.402 --> 00:01:31.299
We'll get ourselves a newsletter form that
will work powered completely by Astro,

29
00:01:31.299 --> 00:01:34.964
with Javascript disabled
using server rendering.

30
00:01:34.964 --> 00:01:41.605
So first, why don't we go ahead and add
our sandwich kit preview on the homepage?

31
00:01:41.605 --> 00:01:46.769
So we wanna add a new section below our
hero that shows a few of the products and

32
00:01:46.769 --> 00:01:49.608
gives people a nudge to go check them out.

33
00:01:49.608 --> 00:01:50.569
Because again,

34
00:01:50.569 --> 00:01:54.835
point of the website is to try to get
people to try out these sandwich kits.

35
00:01:54.835 --> 00:02:00.152
And we want them to go check out
the store, so that is our big focus here.

36
00:02:00.152 --> 00:02:04.789
So the first thing that we need
to do is I want this preview to

37
00:02:04.789 --> 00:02:07.451
only show three of the products.

38
00:02:07.451 --> 00:02:11.680
And the way that the shop items component
is built right now is it shows all of

39
00:02:11.680 --> 00:02:12.565
the products.

40
00:02:12.565 --> 00:02:16.809
So I wanna add the ability
to modify the output of

41
00:02:16.809 --> 00:02:20.744
the shop items component using some props.

42
00:02:20.744 --> 00:02:25.192
So we're gonna do that by adding
some props to our component.

43
00:02:25.192 --> 00:02:29.902
And the way that those work in Astro
is if we want some types, we set up

44
00:02:29.902 --> 00:02:35.288
an interface called Props, and then we
can add whatever we want to be in here.

45
00:02:35.288 --> 00:02:38.465
So I wanna include a count,
that's gonna be a number.

46
00:02:38.465 --> 00:02:40.761
And the question mark makes it optional so

47
00:02:40.761 --> 00:02:43.656
that we don't want to have
to send through account.

48
00:02:43.656 --> 00:02:48.391
And then we want to decide whether or not
we're gonna show the Add to Cart button.

49
00:02:48.391 --> 00:02:52.396
Now, because of the way that this is
built, where the cart lives on the shop

50
00:02:52.396 --> 00:02:56.355
page, we're not gonna have the ability
to add to cart from the homepage.

51
00:02:56.355 --> 00:03:00.370
We're only gonna have the ability
to go through to the shop page and

52
00:03:00.370 --> 00:03:01.813
look at the cart there.

53
00:03:01.813 --> 00:03:05.507
So we want that to basically be
toggleable, we wanna say like,

54
00:03:05.507 --> 00:03:09.563
don't show the Add to Cart buttons
when we're showing the preview.

55
00:03:09.563 --> 00:03:12.389
Next, we're gonna
actually use these props.

56
00:03:12.389 --> 00:03:16.605
And the way that you access props
in Astro is you get a component or

57
00:03:16.605 --> 00:03:20.821
a global called Astro, and
then you can grab props out of it, and

58
00:03:20.821 --> 00:03:25.294
then you destructure those, and
those will map to your count here.

59
00:03:25.294 --> 00:03:29.189
And because we've defined the type,
that's the wrong button.

60
00:03:29.189 --> 00:03:34.606
So [LAUGH] If I start typing count,
you can see here that it has the count,

61
00:03:34.606 --> 00:03:38.232
and then if I do addToCart,
I get my addToCart.

62
00:03:38.232 --> 00:03:42.581
And that needs to be props, that's
probably a lot of what just went wrong.

63
00:03:42.581 --> 00:03:46.928
So now I've got my count and it knows it's
a number, and it's got my addToCart and

64
00:03:46.928 --> 00:03:49.640
it knows that it's Boolean or
undefined, great.

65
00:03:49.640 --> 00:03:52.480
So I'm going to set a default on this one,

66
00:03:52.480 --> 00:03:58.015
we'll make it true if it's not declared,
because we wanna show the addToCart.

67
00:03:58.015 --> 00:04:04.154
And then the count, we're gonna set
to be infinity, because by default,

68
00:04:04.154 --> 00:04:08.841
we wanna show all of the items
if we don't pass that prop.

69
00:04:08.841 --> 00:04:12.616
To actually use this, we can,
before we map over the items,

70
00:04:12.616 --> 00:04:14.178
we'll just run a slice.

71
00:04:14.178 --> 00:04:18.543
This is a JavaScript thing, so we'll
start at the first item in the array,

72
00:04:18.543 --> 00:04:21.188
the 0, and
then we just finish at the count.

73
00:04:21.188 --> 00:04:24.784
So we want the first count items.

74
00:04:24.784 --> 00:04:29.391
And then we're going to add
a little conditional check here,

75
00:04:29.391 --> 00:04:31.960
where we say if addToCart is true,

76
00:04:31.960 --> 00:04:36.312
show this addToCart component,
otherwise render null.

77
00:04:40.067 --> 00:04:43.683
So with that addition, we've now
added props to an Astro component.

78
00:04:43.683 --> 00:04:47.642
These will work functionally when
we actually call the component.

79
00:04:47.642 --> 00:04:52.186
In the same way as any React or
Solid or Svelte component works,

80
00:04:52.186 --> 00:04:55.896
you just add the name of
the prop equals and a value.

81
00:04:55.896 --> 00:04:59.619
And we can now show a limited
number of our products and

82
00:04:59.619 --> 00:05:03.196
we can decide whether or
not we wanna show the cart.

83
00:05:03.196 --> 00:05:07.923
So to actually do this,
we will head over to our index, and

84
00:05:07.923 --> 00:05:12.509
we're gonna import, Oops,

85
00:05:12.509 --> 00:05:19.457
shopItems from components and shop-items.

86
00:05:19.457 --> 00:05:23.858
And then down here, underneath this
section, we're gonna add a new one.

87
00:05:23.858 --> 00:05:27.581
And this section is going
to have a class of,

88
00:05:27.581 --> 00:05:33.634
we're gonna use that block again and
we'll give it a name of products.

89
00:05:33.634 --> 00:05:38.928
And inside,
we're going to add in our shop items,

90
00:05:38.928 --> 00:05:46.210
we want three of them, and we don't
wanna show the Add to Cart button.

91
00:05:46.210 --> 00:05:50.644
And then, so
that people can get over to the shop,

92
00:05:50.644 --> 00:05:54.339
we're going to add
a class of shop link and

93
00:05:54.339 --> 00:05:59.316
display a link, and
that is gonna head over to the shop.

94
00:05:59.316 --> 00:06:03.298
And we'll say Shop All Sandwich,

95
00:06:03.298 --> 00:06:07.287
if I can spell it, Sandwich Kits.

96
00:06:07.287 --> 00:06:11.880
And then we're gonna use an HTML
entity to show an arrow.

97
00:06:11.880 --> 00:06:15.496
And I picked this up a long
time ago before emoji

98
00:06:15.496 --> 00:06:20.056
were really well supported and
I still use it all the time.

99
00:06:20.056 --> 00:06:21.935
These HTML entities are great.

100
00:06:21.935 --> 00:06:26.224
There's a lot of flexibility and
it doesn't require any dependencies or

101
00:06:26.224 --> 00:06:27.269
any other stuff.

102
00:06:27.269 --> 00:06:32.029
So save that, head out here,
and look at it go,

103
00:06:32.029 --> 00:06:36.909
we've got products
displayed on the homepage,

104
00:06:36.909 --> 00:06:40.968
takes you through to the sandwich kits.

105
00:06:40.968 --> 00:06:44.462
What a time to be alive, how great is
that that we can do that that quickly?

106
00:06:44.462 --> 00:06:49.030
And this is really like, again, what I
love about this framework is that it just

107
00:06:49.030 --> 00:06:52.930
lets you build stuff, I'm not
having to go add configure options.

108
00:06:52.930 --> 00:06:56.215
I'm not having to go check the docs,
I just, hey, I need some props,

109
00:06:56.215 --> 00:06:58.921
great, I've got some props,
now I can go do some stuff.

110
00:06:58.921 --> 00:07:03.287
It just uses the knowledge I already
have from working with other frameworks.

111
00:07:03.287 --> 00:07:06.534
Now, if I need the docs, the docs
are great and they will fill any gap.

112
00:07:06.534 --> 00:07:09.646
So if you haven't worked with
a component-based framework before,

113
00:07:09.646 --> 00:07:11.544
some of that knowledge might not be there,

114
00:07:11.544 --> 00:07:14.779
you might not be able to call on it
from having worked with React or Solid.

115
00:07:14.779 --> 00:07:18.574
But it's still, grab the documentation,
it's gonna walk you right through it and

116
00:07:18.574 --> 00:07:21.585
you're building features instead
of wrestling with your tools.

117
00:07:21.585 --> 00:07:26.233
And I really, really do treasure that when
I find a tool that makes that possible.

