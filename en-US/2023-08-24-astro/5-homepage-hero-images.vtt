WEBVTT

1
00:00:00.000 --> 00:00:04.776
What I wanna do next is actually
turn this homepage into a homepage.

2
00:00:04.776 --> 00:00:08.497
We don't have any of the components that
would be present on a standard homepage.

3
00:00:08.497 --> 00:00:12.785
So I'm gonna start with what I think
every website ends up with eventually,

4
00:00:12.785 --> 00:00:16.001
which is a hero section, and
that's gonna be an image and

5
00:00:16.001 --> 00:00:18.485
a call to action and
a big headline, right?

6
00:00:18.485 --> 00:00:25.887
So let's grab out of the workshop-assets,
there are some images,

7
00:00:25.887 --> 00:00:30.864
and I'm gonna grab this sandwich-hero, and

8
00:00:30.864 --> 00:00:36.878
I'm going to move that into
a new folder called images.

9
00:00:36.878 --> 00:00:39.349
And so this is going to be our hero image,

10
00:00:39.349 --> 00:00:41.985
this will be the top
banner of the website.

11
00:00:41.985 --> 00:00:46.763
Next up,
we're going to actually style this thing.

12
00:00:46.763 --> 00:00:52.320
So let's get into our homepage,
and I'm gonna remove this thing,

13
00:00:52.320 --> 00:00:58.280
and we're going to add out a section and
give it a class of block and hero.

14
00:00:58.280 --> 00:01:02.906
These are things that we put into
the style sheet of the global style

15
00:01:02.906 --> 00:01:05.479
sheet already, or some of them are.

16
00:01:05.479 --> 00:01:08.748
The hero is gonna be scoped
to the homepage itself,

17
00:01:08.748 --> 00:01:13.156
we'll get to that in a little bit,
but the block is a global style, so

18
00:01:13.156 --> 00:01:17.055
that we have a way of sharing this
concept of a block on a page.

19
00:01:17.055 --> 00:01:22.097
Inside of that, we're gonna set up a div,
give it a class of cta.

20
00:01:22.097 --> 00:01:25.319
And you may notice that we're
not having to use class name,

21
00:01:25.319 --> 00:01:29.067
we're able to just use class,
which is a small thing, but I like it.

22
00:01:29.067 --> 00:01:31.292
It makes me feel closer to
the language I'm writing.

23
00:01:36.391 --> 00:01:40.841
Okay, so we've got our hero section,
we get a headline.

24
00:01:40.841 --> 00:01:46.298
I'm gonna set up a lede here, and
lede, if you've never seen that word,

25
00:01:46.298 --> 00:01:50.186
it's something that I
picked up from journalists.

26
00:01:50.186 --> 00:01:55.466
And I don't know why they spell it
wrong on purpose, but it makes me feel

27
00:01:55.466 --> 00:02:00.932
like I know things about other industries
when I use those types of words.

28
00:02:03.538 --> 00:02:08.278
Okay, can I spell connoisseurs
right on the first try?

29
00:02:08.278 --> 00:02:09.215
I think I did.

30
00:02:11.096 --> 00:02:13.420
Okay, so we've got a heading, and

31
00:02:13.420 --> 00:02:18.311
then the other piece that we want here
is we need to have that call to action.

32
00:02:18.311 --> 00:02:23.069
So what we want people
to do on this site is,

33
00:02:23.069 --> 00:02:30.476
the premise of this site is it is
a build your own sandwich kit sale,

34
00:02:30.476 --> 00:02:34.871
like a kind of a blue apron style thing.

35
00:02:34.871 --> 00:02:37.523
And so
we're gonna sell people sandwich kits and

36
00:02:37.523 --> 00:02:39.536
we want them to go check out our shop.

37
00:02:39.536 --> 00:02:45.014
So we're gonna make that our call to
action, is go check out sandwich kits.

38
00:02:47.201 --> 00:02:52.105
All right, then the last thing we need to
do is we need to put in the image here.

39
00:02:52.105 --> 00:02:54.241
So the image, we have to import.

40
00:02:54.241 --> 00:02:57.880
So there are a lot of ways that
you can handle images in Astro.

41
00:02:57.880 --> 00:03:00.302
Astro does have a built-in
image component.

42
00:03:00.302 --> 00:03:04.463
They've got an experimental assets
directory that will give you extra image

43
00:03:04.463 --> 00:03:06.270
optimization and stuff.

44
00:03:06.270 --> 00:03:11.202
My personal preference has become to
rely on something like Cloudinary or

45
00:03:11.202 --> 00:03:14.462
Imgix because they do the optimization for
you,

46
00:03:14.462 --> 00:03:17.739
they work on every framework,
every platform.

47
00:03:17.739 --> 00:03:22.594
And it offloads a lot of your bandwidth
to the Cloudinary CDN or the Imgix CDN,

48
00:03:22.594 --> 00:03:27.322
which is very good at optimizing for
images, and has a generous free tier.

49
00:03:27.322 --> 00:03:32.911
So I run, for example, Learn the JSON
off of Cloudinary's free tier, and

50
00:03:32.911 --> 00:03:38.877
I very rarely get close, and I get a lot
of traffic on the Learn the JSON website.

51
00:03:38.877 --> 00:03:43.906
So that's my preference,
you have other options as well,

52
00:03:43.906 --> 00:03:46.934
but I'm not gonna get deep into it.

53
00:03:46.934 --> 00:03:49.796
Big thing is, if you put something
into the source directory,

54
00:03:49.796 --> 00:03:50.877
you can just import it.

55
00:03:50.877 --> 00:03:55.107
So what I'm gonna say is
give me that heroImg, and

56
00:03:55.107 --> 00:03:58.750
I want it from images and sandwich-hero.

57
00:03:58.750 --> 00:04:02.919
Then once we've got that,

58
00:04:02.919 --> 00:04:08.358
we can go with a src=(heroImg),

59
00:04:08.358 --> 00:04:14.174
give it an alt of A sandwich on a plate.

60
00:04:17.101 --> 00:04:21.863
And then give it a class of hero-image so
that we can find it.

61
00:04:21.863 --> 00:04:27.467
And this one, because it's at the top of
the page, I want the loading to be eager,

62
00:04:27.467 --> 00:04:32.031
I don't want it to get turned into
a lazy loaded image or anything.

63
00:04:32.031 --> 00:04:35.419
I think that's the default, but

64
00:04:35.419 --> 00:04:40.259
it's helpful for
me to signify that to myself.

65
00:04:40.259 --> 00:04:41.945
And then the decoding can be async.

66
00:04:41.945 --> 00:04:44.329
We don't necessarily need to
block the rest of the page, but

67
00:04:44.329 --> 00:04:46.641
we do want that image to start
loading as fast as possible.

68
00:04:46.641 --> 00:04:50.808
So now that we've got this,
this is our hero section.

69
00:04:50.808 --> 00:04:56.328
And if I collapse this down a little bit,
we can see now that we've got,

70
00:04:56.328 --> 00:05:01.944
it's here, but this is a bit of a mess,
this is kinda all over the place.

71
00:05:01.944 --> 00:05:07.038
So the next thing we're gonna
need to do is actually style it.

72
00:05:07.038 --> 00:05:12.232
So to style it, we have the exact same
approach as we did in the default,

73
00:05:12.232 --> 00:05:16.821
or in the template, where we add
a style tag, and then I've got

74
00:05:16.821 --> 00:05:21.862
the styles up in the pages-index
section of the workshop-assets.

75
00:05:21.862 --> 00:05:26.049
So under the styles and
pages-index, you can just copy,

76
00:05:26.049 --> 00:05:31.524
paste that right out, drop it in here,
and this is now a hero image, right?

77
00:05:31.524 --> 00:05:34.989
So we've got this thing set up,
it looks nice.

78
00:05:34.989 --> 00:05:38.772
We've got the call to action,
we're telling people what we need.

79
00:05:38.772 --> 00:05:40.886
The marketing team is gonna be thrilled,
right?

80
00:05:40.886 --> 00:05:44.355
And the product team is gonna be thrilled
because this drives directly to an action

81
00:05:44.355 --> 00:05:45.672
that is good for the business.

82
00:05:45.672 --> 00:05:49.160
So all right, we're accomplishing business
goals, we're making a website, and

83
00:05:49.160 --> 00:05:50.496
we've done it all pretty fast.

84
00:05:50.496 --> 00:05:54.018
We're not spending a lot of time on
foundational stuff or boilerplate,

85
00:05:54.018 --> 00:05:56.976
we're just getting right into
building value, question?

86
00:05:56.976 --> 00:06:01.766
&gt;&gt; Assuming you're gonna get into this,
but image optimization and

87
00:06:01.766 --> 00:06:04.170
the story there, is there any-
&gt;&gt; So-

88
00:06:04.170 --> 00:06:05.796
&gt;&gt; Way you can talk about that?

89
00:06:05.796 --> 00:06:09.983
&gt;&gt; By default, this image,
I optimized before I saved it.

90
00:06:09.983 --> 00:06:14.211
So I just got it to the size I wanted
it to be and I put it in like that.

91
00:06:14.211 --> 00:06:18.806
The way that I would optimize these images
is I would put them into Cloudinary and

92
00:06:18.806 --> 00:06:20.942
use their automatic optimization.

93
00:06:20.942 --> 00:06:26.510
Astro does have a,
let me get into their docs here and

94
00:06:26.510 --> 00:06:29.814
look at the Assets directory.

95
00:06:29.814 --> 00:06:33.698
Now, I'm not using this because it's
experimental, and I have been bitten

96
00:06:33.698 --> 00:06:37.243
before by teaching something like
this right before the API changes.

97
00:06:37.243 --> 00:06:41.164
So I don't wanna get into
it in the workshop, but

98
00:06:41.164 --> 00:06:47.297
it's a built-in image component,
they will do the optimization for you.

99
00:06:47.297 --> 00:06:51.532
And it's kind of integrated into the
content collection so that it just works.

100
00:06:51.532 --> 00:06:57.005
This is pretty cool stuff and
will give you a lot of power.

101
00:06:57.005 --> 00:07:00.268
It brings in the images that it
does import with the source,

102
00:07:00.268 --> 00:07:03.925
which you're gonna need,
as well as the width and height so you can

103
00:07:03.925 --> 00:07:08.457
get your aspect ratios right in a format
if you wanna do any kinda detection there.

104
00:07:08.457 --> 00:07:14.643
And it'll let you bring in
just about any image format,

105
00:07:14.643 --> 00:07:19.787
and I mean, that's the whole thing, right?

106
00:07:19.787 --> 00:07:23.753
If you wanna get into
the original image asset,

107
00:07:23.753 --> 00:07:27.720
I don't think does any image optimization,
so

108
00:07:27.720 --> 00:07:33.487
you would be either optimizing on
your own or using a CDN of some sort.

109
00:07:33.487 --> 00:07:38.938
Again, because we tend, in real jobs,
to end up using multiple frameworks,

110
00:07:38.938 --> 00:07:43.992
I lean toward having a solution that
works regardless of the framework.

111
00:07:43.992 --> 00:07:47.538
Because then I don't have to remember
what's the difference between an Astro

112
00:07:47.538 --> 00:07:48.622
image and a Next image.

113
00:07:48.622 --> 00:07:52.272
I also find whenever,
like next image is a good example,

114
00:07:52.272 --> 00:07:57.140
every time I try to use it, I find myself
fighting against it because you have

115
00:07:57.140 --> 00:08:00.509
to explicitly allow each
domain that you wanna use.

116
00:08:00.509 --> 00:08:03.469
You have to remember what their
exact syntax is, and you have

117
00:08:03.469 --> 00:08:07.359
to know the width and height, which isn't
always something that you know, and

118
00:08:07.359 --> 00:08:09.878
sometimes you're okay with not knowing,
right?

119
00:08:09.878 --> 00:08:12.630
But it doesn't matter
because they'll fail,

120
00:08:12.630 --> 00:08:16.705
the build will fail if you haven't
met those explicit requirements.

121
00:08:16.705 --> 00:08:21.925
So in my case, I prefer to lean on
something like Cloudinary or Imgix because

122
00:08:21.925 --> 00:08:26.914
it's going to give me the control,
and it also gives me a uniform layer.

123
00:08:26.914 --> 00:08:35.229
And there's tools, like Matt Kane
has made a thing called Unpic Image.

124
00:08:35.229 --> 00:08:38.695
And this is a cross-framework setup, so

125
00:08:38.695 --> 00:08:43.744
you can use this in pretty much
every popular framework, and

126
00:08:43.744 --> 00:08:50.882
if you don't wanna use it in a framework,
there's also just plain old, just use it.

127
00:08:50.882 --> 00:08:56.011
And this is also, it's integrated
with your favorite image CDN so

128
00:08:56.011 --> 00:08:59.857
that you don't have to
trust Unpic to do this, but

129
00:08:59.857 --> 00:09:05.649
it will do other pieces as well,
like it'll optimize for you and all that.

130
00:09:05.649 --> 00:09:08.632
My preference would be don't
rely on your framework for

131
00:09:08.632 --> 00:09:13.263
image optimization because that's not its
primary job, and they typically don't do

132
00:09:13.263 --> 00:09:17.017
it as well as something that has
the primary job of optimizing assets.

