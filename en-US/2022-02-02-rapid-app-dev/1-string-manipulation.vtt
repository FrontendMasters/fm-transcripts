WEBVTT

1
00:00:00.000 --> 00:00:04.536
And now for our first module, the primer,

2
00:00:04.536 --> 00:00:08.579
I wanna ask a question, what is code?

3
00:00:11.192 --> 00:00:16.559
There are a few ways that
you could answer this.

4
00:00:16.559 --> 00:00:21.678
And I think depending
on your vantage point,

5
00:00:21.678 --> 00:00:26.131
you would be correct more than likely.

6
00:00:26.131 --> 00:00:30.615
But for instance, if I asked you
just to give you a hint of how I'm

7
00:00:30.615 --> 00:00:34.204
thinking about this,
if I said what is a computer?

8
00:00:34.204 --> 00:00:38.752
Well, somebody could say well that's
a device that you basically can

9
00:00:38.752 --> 00:00:41.462
interact with and do meaningful things.

10
00:00:41.462 --> 00:00:44.927
And I would say you're correct,
but what is a computer?

11
00:00:44.927 --> 00:00:49.752
In the most basic, absolute basic sense,

12
00:00:49.752 --> 00:00:57.675
a computer is nothing more than a bunch
of switches that turn on or off.

13
00:00:57.675 --> 00:01:04.992
And so it's the kind of quantum level,
if you will, especially now.

14
00:01:04.992 --> 00:01:08.081
When you think about computers and

15
00:01:08.081 --> 00:01:12.872
you go beneath kind of the hardware and
the software,

16
00:01:12.872 --> 00:01:17.784
what you have is a bunch of
switches turning on and off.

17
00:01:17.784 --> 00:01:22.717
And so, when we think about that
in terms of code, what is code?

18
00:01:22.717 --> 00:01:27.377
Well, the answer is, it's characters.

19
00:01:27.377 --> 00:01:32.537
It's a string of characters,
it's a bunch of

20
00:01:32.537 --> 00:01:37.562
strings, and so
when we look at JavaScript,

21
00:01:37.562 --> 00:01:41.811
Java, Python, Go, Rust whatever.

22
00:01:41.811 --> 00:01:46.896
You are writing text entering
in characters to create

23
00:01:46.896 --> 00:01:51.981
strings that then get
interpreted by your compiler,

24
00:01:51.981 --> 00:01:58.202
by your run time to do something
meaningful, but under the hood.

25
00:01:58.202 --> 00:02:06.281
When we start from the vantage point
of code is nothing more than strings.

26
00:02:06.281 --> 00:02:10.824
This allows us to start
taking a much broader,

27
00:02:10.824 --> 00:02:17.706
more kind of generic approach to how
we think about any code as a whole.

28
00:02:17.706 --> 00:02:23.478
And so with that said,
we are going to step through a few very,

29
00:02:23.478 --> 00:02:26.808
very basic JavaScript functions.

30
00:02:26.808 --> 00:02:33.512
So the question is how much do you
need to know to be rapid to be read?

31
00:02:33.512 --> 00:02:38.228
Well, my approximation is
there's a couple functions

32
00:02:38.228 --> 00:02:42.555
that it's helpful to know
that we'll talk about.

33
00:02:42.555 --> 00:02:47.356
And what we're going to do is we're
going to just start to assemble

34
00:02:47.356 --> 00:02:52.255
these into kind of interesting
ways that does interesting things.

35
00:02:52.255 --> 00:02:55.438
But most of what I'm doing here,

36
00:02:55.438 --> 00:02:59.993
I would say it most is
level 200 JavaScript.

37
00:02:59.993 --> 00:03:04.767
So for instance, if I wanted to replace

38
00:03:04.767 --> 00:03:10.421
a character in a string,
how would we do that?

39
00:03:10.421 --> 00:03:14.984
Well, the easiest way, and
I think in a lot of cases,

40
00:03:14.984 --> 00:03:20.476
the most performant way is with
Array.split and Array.join.

41
00:03:20.476 --> 00:03:25.164
So I'll save the slide for,
when my seven-year-old wants to

42
00:03:25.164 --> 00:03:29.151
learn how to program, but,
imagine we have a train.

43
00:03:29.151 --> 00:03:36.174
And we go train.split,
on this particular car.

44
00:03:36.174 --> 00:03:37.567
What do we have?

45
00:03:37.567 --> 00:03:43.430
Well, now we no longer have a train,
we just have some individual cars here.

46
00:03:44.700 --> 00:03:49.520
But then I can join them back
together with this flat car.

47
00:03:49.520 --> 00:03:50.880
And so what do we have now?

48
00:03:53.690 --> 00:03:59.047
We have a new train that
is now joined by flat cars,

49
00:03:59.047 --> 00:04:03.004
so train.split, train.join, so

50
00:04:03.004 --> 00:04:07.996
you are already well on
your way to being read.

51
00:04:07.996 --> 00:04:11.308
The next one array.map and so

52
00:04:11.308 --> 00:04:16.212
on array.map is pretty
fantastic in that we

53
00:04:16.212 --> 00:04:21.128
take an array or
a collection of something.

54
00:04:21.128 --> 00:04:26.144
We iterate over it and we perform
an operation, so imagine you have

55
00:04:26.144 --> 00:04:31.893
a bunch of hanging shirts and you want
to map over them, and you want to fold.

56
00:04:31.893 --> 00:04:37.273
And so now at the end of this you
have a new array of folded shirts,

57
00:04:37.273 --> 00:04:42.855
so you take one collection you
transform it into a new collection,

58
00:04:42.855 --> 00:04:45.264
this is level 100 stuff.

59
00:04:45.264 --> 00:04:50.580
And probably one of my all-time
favorites is array.reduce,

60
00:04:50.580 --> 00:04:54.701
and we're going to use
this one really heavily.

61
00:04:54.701 --> 00:04:59.313
So imagine you have a bunch of strands and

62
00:04:59.313 --> 00:05:05.971
you want to reduce them or
combine them into a single rope.

63
00:05:05.971 --> 00:05:08.174
And so strings that reduce, and

64
00:05:08.174 --> 00:05:13.487
we're just introducing individual
strands intertwining it into the rope.

65
00:05:13.487 --> 00:05:16.854
And when it's all said and
done instead of having,

66
00:05:16.854 --> 00:05:19.841
in this case five strands,
we have one rope.

67
00:05:19.841 --> 00:05:24.004
So in the context of where we're going,

68
00:05:24.004 --> 00:05:28.600
imagine you have five code snippets.

69
00:05:28.600 --> 00:05:33.450
We can reduce that into
a single code snippet.

70
00:05:34.550 --> 00:05:40.254
And so
let's see what this looks like in code,

71
00:05:40.254 --> 00:05:43.189
so this is the primmer.

72
00:05:43.189 --> 00:05:48.465
And we're going to go into
the rapid primer start.

73
00:05:48.465 --> 00:05:55.044
So you can go to this URL here or
if you are on the GitHub page,

74
00:05:55.044 --> 00:06:00.189
you can just click on
that rapid primer start.

75
00:06:00.189 --> 00:06:08.029
All right, so the first thing
we wanna do is I have a title,

76
00:06:08.029 --> 00:06:12.989
how can we remove spaces in a string?

77
00:06:12.989 --> 00:06:17.750
Well, how we can do this
is if you remember,

78
00:06:17.750 --> 00:06:24.330
we have using array.join,
array.split, array.join.

79
00:06:24.330 --> 00:06:31.176
We can go remove spaces, so
we're just going to create a new function.

80
00:06:31.176 --> 00:06:36.682
That's going to take a string, and
we're just going to go string split.

81
00:06:36.682 --> 00:06:42.358
And up at the top here, I have just went
ahead and taken these basic characters,

82
00:06:42.358 --> 00:06:47.373
created constants for them, so
that we're not doing magic strings.

83
00:06:47.373 --> 00:06:51.373
And we're just gonna go

84
00:06:51.373 --> 00:06:56.574
space.join and empty, and so

85
00:06:56.574 --> 00:07:02.774
now this will take in turn this into,

86
00:07:02.774 --> 00:07:08.974
this is kind of a quasi Pascall case,

87
00:07:08.974 --> 00:07:14.774
but what I can do, remove space and

88
00:07:14.774 --> 00:07:17.992
pass in the title.

89
00:07:17.992 --> 00:07:22.728
So, super, super basic, but let's go and

90
00:07:22.728 --> 00:07:27.464
just put this in here, and we're gonna, so

91
00:07:27.464 --> 00:07:31.446
you see here, we remove the spaces.

92
00:07:31.446 --> 00:07:36.148
Now the next question is
how can we replace a space

93
00:07:36.148 --> 00:07:40.058
with a different character in a string?

94
00:07:40.058 --> 00:07:45.909
So we want to replace this
space with something else,

95
00:07:45.909 --> 00:07:50.329
so we'll go const replace, space, and

96
00:07:50.329 --> 00:07:54.489
let's go ahead we'll go with sub, so

97
00:07:54.489 --> 00:08:02.568
this is what we want to substitute
our space with and so, splits, space.

98
00:08:06.070 --> 00:08:10.686
Join sub, okay, and

99
00:08:10.686 --> 00:08:17.876
let's go with const SnakeCase.

100
00:08:17.876 --> 00:08:22.946
And so in this case,
what we want to do is we want

101
00:08:22.946 --> 00:08:27.507
to replace the space with an underscore.

102
00:08:27.507 --> 00:08:34.417
So we'll save this,
let's go down and paste this in.

103
00:08:34.417 --> 00:08:39.217
And so now you can see that,
not true SnakeCase because,

104
00:08:39.217 --> 00:08:43.120
it's uppercase but,
I think we get the idea.

105
00:08:43.120 --> 00:08:48.290
Now let's do one more extension of this,
what if we want

106
00:08:48.290 --> 00:08:53.360
to replace any character
with a different character?

107
00:08:53.360 --> 00:08:57.544
And so we're going very, very small
here and incrementing on this, but

108
00:08:57.544 --> 00:09:01.672
I wanna illustrate almost comically
this iterative thought process.

109
00:09:01.672 --> 00:09:07.088
So now, we're just gonna go replace, and

110
00:09:07.088 --> 00:09:12.354
we'll go s for string, we'll go targ for

111
00:09:12.354 --> 00:09:20.792
targ, sub and then we're going
to go s split, targ, join, sub.

112
00:09:20.792 --> 00:09:24.942
And let's go ahead and

113
00:09:24.942 --> 00:09:29.967
what I'd like to do is go and

114
00:09:29.967 --> 00:09:34.121
let's go kabob case.

115
00:09:34.121 --> 00:09:37.420
And we are going to replace,

116
00:09:37.420 --> 00:09:43.195
In this case let's go we'll
pass in SnakeCase and

117
00:09:43.195 --> 00:09:49.669
we want to replace the underscore
with a hyphen, okay?

118
00:09:56.933 --> 00:10:01.899
And here we go, so
now we've done some very,

119
00:10:01.899 --> 00:10:07.393
basic string manipulation
which is going to prove

120
00:10:07.393 --> 00:10:13.780
to be really really,
really important in a little bit.

121
00:10:13.780 --> 00:10:18.000
So on one hand it's like if
the question is like, can I do this?

122
00:10:19.250 --> 00:10:22.730
If this make sense and I hope it does.

123
00:10:22.730 --> 00:10:26.308
This is very basic JavaScript
we can build on this ideas and

124
00:10:26.308 --> 00:10:29.310
we are going to go somewhere
pretty neat with this

