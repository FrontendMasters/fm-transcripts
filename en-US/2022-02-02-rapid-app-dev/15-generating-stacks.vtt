WEBVTT

1
00:00:00.215 --> 00:00:05.718
Finally, the question is,

2
00:00:05.718 --> 00:00:11.230
how do we do an entire stack?

3
00:00:11.230 --> 00:00:17.905
Well, hopefully at this point, you've
heard 10,000 variations of the same thing.

4
00:00:17.905 --> 00:00:23.035
And you've started to do some
pattern recognition of your own,

5
00:00:23.035 --> 00:00:26.270
and you know where i'm going with this.

6
00:00:26.270 --> 00:00:32.945
So let's go to our stack generator start.

7
00:00:32.945 --> 00:00:38.449
And let's build this out.

8
00:00:38.449 --> 00:00:44.090
So up to this point,
this is pretty much where we left off.

9
00:00:44.090 --> 00:00:50.949
So we have our domain,
and we have our layer.

10
00:00:50.949 --> 00:00:56.044
So, if we wanted to generate more than

11
00:00:56.044 --> 00:01:00.514
one layer, how would we do that?

12
00:01:00.514 --> 00:01:05.031
Pausing for dramatic effect, [SOUND].

13
00:01:05.031 --> 00:01:09.888
Well, I have confidence that you

14
00:01:09.888 --> 00:01:14.052
have probably figured out,

15
00:01:14.052 --> 00:01:21.000
at least you have some
idea what is coming next.

16
00:01:21.000 --> 00:01:27.199
So if a layer is a grouping of cells,

17
00:01:27.199 --> 00:01:33.204
or entities, or domain objects.

18
00:01:33.204 --> 00:01:36.081
A stack is a grouping of layers.

19
00:01:36.081 --> 00:01:39.801
So, we're going to go, and

20
00:01:39.801 --> 00:01:44.141
we're going to go, layers dot,

21
00:01:44.141 --> 00:01:49.101
wait for it, reduce, and from here,

22
00:01:49.101 --> 00:01:55.160
we're going to accumulate
on the code layer.

23
00:01:55.160 --> 00:02:00.144
And within this,
I have forgotten some parentheses.

24
00:02:05.195 --> 00:02:07.822
We're going to go code +,

25
00:02:10.511 --> 00:02:14.328
Equals something,
we'll fix that in just a moment.

26
00:02:14.328 --> 00:02:18.664
We're going to return code, And

27
00:02:18.664 --> 00:02:23.762
we're going to start with an empty string.

28
00:02:23.762 --> 00:02:32.280
And so with this, We need to define
our layer before we go any further.

29
00:02:32.280 --> 00:02:36.165
So what does a layer look like?

30
00:02:36.165 --> 00:02:40.948
What would this look like?

31
00:02:40.948 --> 00:02:46.204
Now remember what I said,
I gave everybody hint earlier,

32
00:02:46.204 --> 00:02:49.002
a generator is tied to a layer.

33
00:02:49.002 --> 00:02:55.287
So you typically will use a single
generator to generate a layer,

34
00:02:55.287 --> 00:02:59.069
or a generator to generate a sub layer.

35
00:02:59.069 --> 00:03:06.537
So within this, what we need to do,
is we need to define our layer.

36
00:03:06.537 --> 00:03:09.103
And we're going to give it two properties.

37
00:03:09.103 --> 00:03:13.976
So the first thing that we're going
to do is give it a name, data layer.

38
00:03:13.976 --> 00:03:19.493
And then we're going to define,
can you believe it?

39
00:03:19.493 --> 00:03:21.079
The generator.

40
00:03:21.079 --> 00:03:24.332
So, service generator, and

41
00:03:24.332 --> 00:03:29.023
we'll do this twice, so we'll go state.

42
00:03:29.023 --> 00:03:34.055
Or rather I really should have waited for
dramatic effect as well to just be like,

43
00:03:34.055 --> 00:03:36.946
how hard would it be for
me to do another layer?

44
00:03:36.946 --> 00:03:38.321
Wait for it.

45
00:03:38.321 --> 00:03:44.063
But I am just going to
play it straight here,

46
00:03:44.063 --> 00:03:49.351
and just do both of them at the same time.

47
00:03:49.351 --> 00:03:54.781
But again, if I asked everybody
on a scale of one to 10,

48
00:03:54.781 --> 00:03:58.754
how complicated Is this data structure?

49
00:03:58.754 --> 00:04:00.654
Well, it's [INAUDIBLE] G,

50
00:04:00.654 --> 00:04:04.961
it's an array with objects that
have two properties on them.

51
00:04:04.961 --> 00:04:08.370
That's a two, maybe even a one.

52
00:04:08.370 --> 00:04:11.417
Well, that's the point.

53
00:04:11.417 --> 00:04:17.467
And so from here, let's go ahead and
let's just add for

54
00:04:17.467 --> 00:04:21.728
the sake of UI UX, we're gonna add in,

55
00:04:25.001 --> 00:04:27.105
A header here, so H2.

56
00:04:27.105 --> 00:04:32.280
And within this, layer name, and

57
00:04:32.280 --> 00:04:38.356
then we're gonna do one more line here.

58
00:04:38.356 --> 00:04:42.885
And I realized there's a couple ways
that I could do this, in this case,

59
00:04:42.885 --> 00:04:45.572
this is the way the wind
was blowing today.

60
00:04:47.536 --> 00:04:51.787
So, we're gonna go generate layer, and

61
00:04:51.787 --> 00:04:56.652
in here,
we are gonna pass in layer generator.

62
00:04:56.652 --> 00:05:02.098
And you could absolutely type this,
and we're gonna go domain,

63
00:05:02.098 --> 00:05:05.473
config, and we're going to save this.

64
00:05:05.473 --> 00:05:09.589
So all I've done at this point,
up to this point,

65
00:05:09.589 --> 00:05:15.291
is defined a layers collection,
super simplistic object in there.

66
00:05:15.291 --> 00:05:21.705
And then i'm just reducing,
or iterating over the layers.

67
00:05:21.705 --> 00:05:28.142
And then for each layer,
i'm capturing the layer itself, and

68
00:05:28.142 --> 00:05:33.621
then reducing all of this
into a single piece of code.

69
00:05:33.621 --> 00:05:35.944
And remember code is what?

70
00:05:35.944 --> 00:05:41.423
Strings, lots of strings, and so,
let's open this in a new window.

71
00:05:44.542 --> 00:05:45.448
Yeah.

72
00:05:48.056 --> 00:05:49.358
I feel pretty good about this.

73
00:05:52.070 --> 00:05:53.430
How long did that take me?

74
00:05:56.286 --> 00:06:02.050
So if we go from template, To layer,

75
00:06:02.050 --> 00:06:07.008
to stack,
we're just taking the same approach for

76
00:06:07.008 --> 00:06:13.015
the most part, certainly between
the layer, and the stack.

77
00:06:13.015 --> 00:06:18.958
And notice how, for
the layer in the stack,

78
00:06:18.958 --> 00:06:27.160
the code between these two
functions are almost identical.

79
00:06:27.160 --> 00:06:31.650
Very similar, and
they're not doing the same thing.

80
00:06:31.650 --> 00:06:35.309
So don't think that they're duplicated,
but conventionally,

81
00:06:35.309 --> 00:06:36.951
they're very much the same.

82
00:06:36.951 --> 00:06:42.499
And so this is when I say
that I realized that when

83
00:06:42.499 --> 00:06:49.716
I started to converge to best
practices in first principles,

84
00:06:49.716 --> 00:06:54.986
that I was doing a lot of
the same thing over and

85
00:06:54.986 --> 00:06:58.761
over in very small increments.

86
00:06:58.761 --> 00:07:05.370
And this is where,
when I say that mastery is reductive,

87
00:07:05.370 --> 00:07:10.741
this is,
I think we're seeing hints of this,

88
00:07:10.741 --> 00:07:16.252
that we are literally
generating entire pieces

89
00:07:16.252 --> 00:07:22.195
of an application in well,
we got 50 lines here.

90
00:07:22.195 --> 00:07:27.697
And if we go back to our generator,
or our engine,

91
00:07:27.697 --> 00:07:32.675
rather, and so
this is our name variations.

92
00:07:32.675 --> 00:07:38.506
55, 56 lines, and
I really do believe that the core of this,

93
00:07:38.506 --> 00:07:41.699
comes down to this file right here.

94
00:07:41.699 --> 00:07:44.376
And we're just iterating over this.

95
00:07:44.376 --> 00:07:48.142
And just like we're
building a code snippet,

96
00:07:48.142 --> 00:07:52.875
we're just taking the pieces
that need to be changed, and

97
00:07:52.875 --> 00:07:55.882
we're building a mold around that.

98
00:07:55.882 --> 00:07:58.464
This is working code for the most part.

99
00:07:58.464 --> 00:08:02.857
If I were to go and
build an angular or react application,

100
00:08:02.857 --> 00:08:07.716
this is the code that I would be
handing off to you, the client.

101
00:08:07.716 --> 00:08:11.989
And so there's nothing about this
that I have to apologize for, or

102
00:08:11.989 --> 00:08:15.592
make concessions of like,
we'll fix that later.

103
00:08:15.592 --> 00:08:19.922
But rather, this is equivalent.

104
00:08:19.922 --> 00:08:25.359
It has parody too, what I would consider
to be enterprise grade production code.

