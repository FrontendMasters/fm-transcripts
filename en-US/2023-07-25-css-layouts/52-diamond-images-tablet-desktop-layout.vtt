WEBVTT

1
00:00:00.210 --> 00:00:03.090
So, now let's go on to
making our diamonds.

2
00:00:04.770 --> 00:00:08.709
So I'm gonna set up a media query, and

3
00:00:08.709 --> 00:00:14.011
we're gonna say our
min-width is 324 pixels.

4
00:00:17.757 --> 00:00:22.948
And now, I can just read
re-declare all of the variables

5
00:00:22.948 --> 00:00:28.060
that I declared earlier and
just change their values.

6
00:00:28.060 --> 00:00:33.820
So I'm gonna put in my diamond-container.

7
00:00:33.820 --> 00:00:37.290
My square variable,
I'm going to set to 150 pixels.

8
00:00:39.390 --> 00:00:44.498
My square gap to three pixels,

9
00:00:44.498 --> 00:00:50.200
and my max width to 325 pixels.

10
00:00:52.840 --> 00:00:56.385
Okay, so you notice that all
of those variable changes

11
00:00:56.385 --> 00:00:59.170
had an immediate impact on my design.

12
00:00:59.170 --> 00:01:03.731
And that's because this is one of
the wonderful things about CSS variables,

13
00:01:03.731 --> 00:01:06.490
you can re-declare them per media query.

14
00:01:06.490 --> 00:01:10.830
That is actually something you can't do
with SAS variables, if you're wondering

15
00:01:10.830 --> 00:01:14.980
about one of the big differences between
SAS variables and CSS variables.

16
00:01:14.980 --> 00:01:18.359
SAS variables do not change
between media queries,

17
00:01:18.359 --> 00:01:22.059
whereas CSS variables are very
flexible and can do that.

18
00:01:24.163 --> 00:01:28.991
So now that we've got that in place,
let's turn off our

19
00:01:28.991 --> 00:01:33.937
image rotation and
we can say diamonds li:nth-child.

20
00:01:35.680 --> 00:01:42.099
And you could do this with just
n by itself in other words for

21
00:01:42.099 --> 00:01:47.220
all of them, transform, rotate 0degrees.

22
00:01:50.151 --> 00:01:52.840
So we've turned off that
little bit of rotation there.

23
00:01:54.120 --> 00:01:58.968
And then we're ready to change
the way all of our images look.

24
00:01:58.968 --> 00:02:04.422
Right now they are set up to be square,
we want to turn them into diamonds and

25
00:02:04.422 --> 00:02:08.071
we're gonna do that with
the clip path property.

26
00:02:08.071 --> 00:02:12.890
So .diamonds li.

27
00:02:12.890 --> 00:02:18.914
We'll set this up with clip-path
which is gonna trim these up for

28
00:02:18.914 --> 00:02:22.428
us and we're gonna call it a polygon.

29
00:02:22.428 --> 00:02:27.015
And we're gonna

30
00:02:27.015 --> 00:02:31.274
say 50% 0,

31
00:02:31.274 --> 00:02:36.516
100% 50%,

32
00:02:36.516 --> 00:02:41.758
50% 100%,

33
00:02:41.758 --> 00:02:46.677
and 0% 50%.

34
00:02:46.677 --> 00:02:52.610
So that changes all of our images into
a diamond by using this clip path.

35
00:02:52.610 --> 00:02:57.859
Obviously, I just did this with squares,
you could do this width and

36
00:02:57.859 --> 00:03:01.520
turn your images into
any other kind of shape.

37
00:03:01.520 --> 00:03:03.820
There's all kinds of
possibilities with clip path.

38
00:03:03.820 --> 00:03:07.930
If you Google for it, you'll find other
various recipes for this kind of thing.

39
00:03:07.930 --> 00:03:11.000
The next thing to do
is to turn on Flexbox.

40
00:03:11.000 --> 00:03:15.349
So right now, these are just stacked
on top of each other just as any other

41
00:03:15.349 --> 00:03:17.360
unordered list would be.

42
00:03:17.360 --> 00:03:22.270
So let's turn this into Flexbox and
start setting these up for an alignment.

43
00:03:22.270 --> 00:03:26.130
And we'll do that by selecting
our parent which is diamonds.

44
00:03:28.310 --> 00:03:31.167
And we're gonna say display flex.

45
00:03:34.211 --> 00:03:38.215
Which immediately puts them all
together just like that, kinda awesome.

46
00:03:38.215 --> 00:03:43.340
And then flex-flow: row wrap.

47
00:03:43.340 --> 00:03:46.651
We do want them to wrap onto other rows.

48
00:03:46.651 --> 00:03:51.883
Justify-content: center,

49
00:03:51.883 --> 00:03:58.931
and our gap will be var(--sq-gap).

50
00:04:03.145 --> 00:04:07.425
So not a lot of change there because
we have our images are of a size,

51
00:04:07.425 --> 00:04:12.290
our max width is of a size,
they haven't showed up next to each other.

52
00:04:12.290 --> 00:04:16.340
So they're wrapping onto
other rows at the moment.

53
00:04:16.340 --> 00:04:20.470
So we need to encourage these
diamonds to overlap a little bit.

54
00:04:20.470 --> 00:04:23.563
So let's put in .diamonds li and

55
00:04:23.563 --> 00:04:28.097
we're gonna play around
with some margin here.

56
00:04:28.097 --> 00:04:35.086
So we'll say our margin on the left

57
00:04:35.086 --> 00:04:41.111
will be calc(-0.5 times

58
00:04:41.111 --> 00:04:46.177
our square variable).

59
00:04:46.177 --> 00:04:53.031
So basically half of our square value and
remember our square value was 150 pixels.

60
00:04:53.031 --> 00:04:58.631
So half of that would be 75 pixels,
we do it here with math because

61
00:04:58.631 --> 00:05:04.031
this now becomes flexible as we
change the value of sq, square,

62
00:05:04.031 --> 00:05:09.436
across our media queries,
then that logic will carry through.

63
00:05:09.436 --> 00:05:10.990
We just have to change its value.

64
00:05:12.490 --> 00:05:16.985
And we can also say our margin on
the bottom is 0 because earlier we

65
00:05:16.985 --> 00:05:21.740
had some margin on the bottom
with our previous layouts.

66
00:05:21.740 --> 00:05:25.860
So there we go, if you like that layout,
you can totally keep it.

67
00:05:25.860 --> 00:05:29.000
I mean, that's kind of fun
looking too just like that.

68
00:05:29.000 --> 00:05:34.750
So, just by changing your clip path on
these images, changing with overlapping

69
00:05:34.750 --> 00:05:40.004
images, you wind up making some very
interesting art for your websites.

70
00:05:41.616 --> 00:05:44.918
But now what I wanna do,
if you think about it,

71
00:05:44.918 --> 00:05:49.860
if we look at our diamonds here,
we can kind of think of these as rows.

72
00:05:49.860 --> 00:05:55.640
So these top three images here in
our layout, that is kind of a row.

73
00:05:56.920 --> 00:06:02.525
The next three images here,
kind of a row, and in our current layout,

74
00:06:02.525 --> 00:06:06.730
we have our three images here,
just like this.

75
00:06:06.730 --> 00:06:10.480
What I wanna do now is take
this second image, right?

76
00:06:10.480 --> 00:06:12.860
This one in the middle,
and I wanna pull it up.

77
00:06:14.580 --> 00:06:18.570
The other two go down, and
that will form our layout.

78
00:06:18.570 --> 00:06:25.119
So this is the coolest part of the whole
thing because we can in fact do this.

79
00:06:26.330 --> 00:06:32.974
So what I wanna do is,
.diamonds li:nth-child and

80
00:06:32.974 --> 00:06:37.992
what I wanna do is I
wanna pick every third

81
00:06:37.992 --> 00:06:42.878
diamond starting with the second one.

82
00:06:42.878 --> 00:06:49.838
So the math for that looks like (3n + 2)
always looks like algebra but it's not.

83
00:06:49.838 --> 00:06:54.353
And then we're going to say our

84
00:06:54.353 --> 00:06:59.042
margin on the the top will be calc

85
00:06:59.042 --> 00:07:04.947
(-0.5 * var square variable) and

86
00:07:04.947 --> 00:07:09.560
then we're gonna subtract.

87
00:07:09.560 --> 00:07:12.338
So there we go, see how we
pulled that on up really nicely,

88
00:07:12.338 --> 00:07:13.660
might take that out again.

89
00:07:14.780 --> 00:07:18.480
See how that diamond gets pulled
up really, really nicely there?

90
00:07:18.480 --> 00:07:18.980
Awesome.

91
00:07:21.340 --> 00:07:24.452
Then from that we'll subtract.

92
00:07:31.713 --> 00:07:38.530
0.5 times var square gap.

93
00:07:41.852 --> 00:07:45.028
Because when we pull it up that way,
it looked great,

94
00:07:45.028 --> 00:07:47.580
but the gap was a little bit inconsistent.

95
00:07:47.580 --> 00:07:51.580
We need half the gap in addition to
half the width of these diamonds.

96
00:07:51.580 --> 00:07:53.708
So there it is,
we've pulled that on up and

97
00:07:53.708 --> 00:07:56.420
we wind up with that awesome layout there.

98
00:07:56.420 --> 00:07:59.442
Notice that our last diamond
is kinda hanging out in space,

99
00:07:59.442 --> 00:08:01.200
what's going on there?

100
00:08:01.200 --> 00:08:06.102
Well, remember that we don't have the
other diamonds that are there with it, and

101
00:08:06.102 --> 00:08:10.008
so, that last diamond that you see
there with the two women on it,

102
00:08:10.008 --> 00:08:13.370
it's effectively at the first
one of the next row.

103
00:08:13.370 --> 00:08:15.690
But it happens to be
displaying in the middle,

104
00:08:15.690 --> 00:08:18.010
because it's the only one in that row.

105
00:08:18.010 --> 00:08:21.738
So we may have to do a separate
treatment for that specific item.

106
00:08:26.464 --> 00:08:31.039
Let's bring our diamonds back onto
the page again because, of course,

107
00:08:31.039 --> 00:08:34.040
now they're hanging out
of their box up there.

108
00:08:34.040 --> 00:08:36.980
We wanna push it all
back down into the page.

109
00:08:36.980 --> 00:08:43.113
So to my diamonds style here,
I'm going to add some padding on the left.

110
00:08:43.113 --> 00:08:48.202
And we can say, once again,

111
00:08:48.202 --> 00:08:55.422
calc(0.5 times var variable sq).

112
00:08:55.422 --> 00:09:00.231
So half that distance, that'll push them
nicely there in the box and then boom,

113
00:09:00.231 --> 00:09:04.421
everything broke because sometimes
that happens along the way here.

114
00:09:04.421 --> 00:09:11.673
And then we wanna push
it down from the top,

115
00:09:11.673 --> 00:09:19.738
so padding-top calc(0.5) times var sq.

116
00:09:21.771 --> 00:09:25.014
So now we've pushed everything back down
in the box, it's centered there very,

117
00:09:25.014 --> 00:09:25.580
very nicely.

118
00:09:27.710 --> 00:09:30.479
Okay, so now let's deal with
that last diamond down there

119
00:09:30.479 --> 00:09:32.579
in the bottom that's hanging out in space.

120
00:09:33.680 --> 00:09:40.615
And we can select that one,
it is our 10th diamond,

121
00:09:40.615 --> 00:09:48.500
so .diamonds li:nth-child(10)
that specific one.

122
00:09:48.500 --> 00:09:53.668
We want the margin on the top

123
00:09:53.668 --> 00:10:00.419
to calc(-0.5 times var sq).

124
00:10:04.756 --> 00:10:10.840
Minus (0.5 times

125
00:10:10.840 --> 00:10:15.572
var sq-gap).

126
00:10:24.252 --> 00:10:25.540
There we go.

127
00:10:25.540 --> 00:10:28.617
So that'll pull that last
diamond on up into place, and

128
00:10:28.617 --> 00:10:30.710
we wind up with this awesome layout.

129
00:10:30.710 --> 00:10:36.503
It has a consistent gap throughout
because we had to take that into account,

130
00:10:36.503 --> 00:10:40.320
Flexbox, of course,
is running in horizontal.

131
00:10:40.320 --> 00:10:42.240
Absolutely parallel for all of these.

132
00:10:42.240 --> 00:10:46.409
When we turn things like this and
we put a little bit of an angle to stuff,

133
00:10:46.409 --> 00:10:50.577
we have to do a little bit of extra work
to make sure that our gap is even and

134
00:10:50.577 --> 00:10:54.870
to make sure that our diamonds show
up correctly in the right spots.

135
00:10:54.870 --> 00:11:00.740
So that is how we go about setting
up that initial diamond layout.

136
00:11:00.740 --> 00:11:03.866
Now, that's pretty much
all of our heavy lifting.

137
00:11:03.866 --> 00:11:08.517
So now all we have to do is change
the values of our variables as we go,

138
00:11:08.517 --> 00:11:13.738
because all of the logic is contained
here in this initial media query here,

139
00:11:13.738 --> 00:11:16.367
for our min-width of 324 pixels.

140
00:11:16.367 --> 00:11:22.201
So now you can add as many additional
media queries as you want and

141
00:11:22.201 --> 00:11:26.534
just change the value of
those initial values.

142
00:11:26.534 --> 00:11:31.690
So I'm going to say at media,

143
00:11:31.690 --> 00:11:36.642
min-width 440 pixels,

144
00:11:36.642 --> 00:11:42.842
let's say our diamond container.

145
00:11:45.436 --> 00:11:48.450
Sq is now 200 pixels.

146
00:11:50.170 --> 00:11:52.225
Notice that that breaks here, don't panic.

147
00:11:52.225 --> 00:11:56.980
Sq-gap is 4 pixels and

148
00:11:56.980 --> 00:12:04.360
our max width will be 440 pixels.

149
00:12:06.170 --> 00:12:10.750
So see how that reformed once I
had all those variables typed in?

150
00:12:10.750 --> 00:12:15.735
If we make it smaller,
then it will go to our smaller format.

151
00:12:15.735 --> 00:12:20.234
And when we make it even smaller, it'll
go back to our series of kind of polaroid

152
00:12:20.234 --> 00:12:23.875
kind of treatment here that we
have here on the page, all right?

153
00:12:27.465 --> 00:12:29.625
And we can continue to add media queries,

154
00:12:29.625 --> 00:12:32.229
I'm just gonna copy this
whole media query here.

155
00:12:33.560 --> 00:12:39.380
Paste it in and
we could say something like 800 pixels.

156
00:12:39.380 --> 00:12:44.910
So at least 800 pixels,
we want to have values of 250.

157
00:12:48.917 --> 00:12:53.574
A gap of six, and a max width of 550.

158
00:12:56.127 --> 00:12:59.482
So now when I make the page even bigger,

159
00:12:59.482 --> 00:13:04.267
then we come up with a really
large diamond layout here.

160
00:13:07.000 --> 00:13:11.649
Then we go to our medium, sort of our
medium size, or smaller size, and

161
00:13:11.649 --> 00:13:14.280
the final layout there.

162
00:13:14.280 --> 00:13:20.640
Okay, so this is really super fun stuff
that we have going on here, right?

163
00:13:20.640 --> 00:13:24.116
The concept of being able to
take a bunch of images and

164
00:13:24.116 --> 00:13:28.820
lay them out in this diamond layout
like this is totally awesome.

165
00:13:28.820 --> 00:13:33.900
And I hope this is something
that sparked some ideas for you.

166
00:13:33.900 --> 00:13:38.566
Maybe experimenting with other clip paths,
maybe thinking about using nth-child and

167
00:13:38.566 --> 00:13:40.090
its various permutations.

168
00:13:40.090 --> 00:13:44.182
How could you move things around on the
page in order to make them line up exactly

169
00:13:44.182 --> 00:13:45.770
the way that you want?

170
00:13:45.770 --> 00:13:50.683
And we could wind up with image galleries
that are more interesting than just tiled

171
00:13:50.683 --> 00:13:52.510
images over and over again.

172
00:13:52.510 --> 00:13:55.170
We could wind up with more
interesting art like this.

