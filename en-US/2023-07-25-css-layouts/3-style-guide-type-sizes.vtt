WEBVTT

1
00:00:00.140 --> 00:00:03.570
Okay fabulous,
that's a little bonus CodePen for you.

2
00:00:03.570 --> 00:00:08.685
Okay, so the next thing that I wanna work
on here inside of the CodePen, we're just

3
00:00:08.685 --> 00:00:14.190
gonna continue on with the same pen, we're
going to work on creating a type scale.

4
00:00:14.190 --> 00:00:17.980
This is something that I did
in the advanced CSS course.

5
00:00:17.980 --> 00:00:24.732
If you open up another browser tab,
we're gonna go to type-scale.com,

6
00:00:24.732 --> 00:00:30.328
or I guess typescale, all one word,
.com, that works too.

7
00:00:30.328 --> 00:00:34.054
And this is basically a tool for

8
00:00:34.054 --> 00:00:39.050
setting up really good looking type.

9
00:00:39.050 --> 00:00:40.426
Now, I am not a graphic designer.

10
00:00:40.426 --> 00:00:43.620
Do we have any graphic
designers in the room today?

11
00:00:43.620 --> 00:00:46.940
One graphic designer,
two graphic designers, awesome.

12
00:00:46.940 --> 00:00:49.874
Maybe we have a few graphic
designers there online, but

13
00:00:49.874 --> 00:00:51.693
many of us are challenged by type.

14
00:00:51.693 --> 00:00:53.330
How do we pick the right sizes?

15
00:00:53.330 --> 00:00:55.410
And how do we make them
all look proportional?

16
00:00:55.410 --> 00:00:59.420
Well, this is a really cool way of
doing it is through a Type Scale.

17
00:00:59.420 --> 00:01:00.740
And this is done through math.

18
00:01:01.890 --> 00:01:04.740
So, now, we can work with calc as well,
inside of CSS.

19
00:01:05.890 --> 00:01:10.178
So as you see here at the top, this
has got a base font size that's set to

20
00:01:10.178 --> 00:01:14.570
16 pixels, which is what we're
going to start with here.

21
00:01:14.570 --> 00:01:18.722
And then,
there is a scale in this drop down.

22
00:01:18.722 --> 00:01:25.390
And so, this is a relative unit of measure
between one type size and another.

23
00:01:25.390 --> 00:01:28.760
So we could go to, let's say,
an augmented fourth.

24
00:01:29.940 --> 00:01:33.913
Those of you who are trained in music
theory will notice that these names match

25
00:01:33.913 --> 00:01:37.040
some really cool music
theory types of things.

26
00:01:37.040 --> 00:01:41.955
So, this is going to basically
scale each of these sizes of type

27
00:01:41.955 --> 00:01:45.687
from very small to very large, by 1.414.

28
00:01:45.687 --> 00:01:46.187
Why?

29
00:01:48.500 --> 00:01:51.256
Because the type people
say this is what's pretty.

30
00:01:51.256 --> 00:01:58.930
Here's the major third or
a minor third, okay?

31
00:01:58.930 --> 00:02:01.553
So, you can see how these
kind of scale together and

32
00:02:01.553 --> 00:02:03.449
they look proportional and pretty.

33
00:02:05.010 --> 00:02:12.780
So we can set this up to borrow this and
use it inside of our design as well.

34
00:02:12.780 --> 00:02:18.095
And the way to do this,
I'm going to set this to the major third.

35
00:02:20.046 --> 00:02:25.601
And it just so happens to be that this
is set to Poppins, is our font-family.

36
00:02:25.601 --> 00:02:31.504
This is the same Poppins believe it or
not that we're going to use in our design.

37
00:02:31.504 --> 00:02:34.762
And so, this is all done and
set and ready to go.

38
00:02:34.762 --> 00:02:38.137
And then,
if you pull over from the side here,

39
00:02:38.137 --> 00:02:41.615
this will show you what this looks like,
okay?

40
00:02:41.615 --> 00:02:42.430
Looks good.

41
00:02:43.810 --> 00:02:46.820
And then,
we can copy this over to our CodePen.

42
00:02:49.200 --> 00:02:53.440
You can see here that it's giving you
the sizes, both in rems and in pixels.

43
00:02:53.440 --> 00:02:57.430
So, we are going to kind
of borrow some of this.

44
00:02:57.430 --> 00:03:00.926
You can either click on
the Edit on CodePen button,

45
00:03:00.926 --> 00:03:05.723
this will open up a whole new CodePen for
you with everything there, or

46
00:03:05.723 --> 00:03:09.320
you can grab the CSS which
is down here at the bottom.

47
00:03:09.320 --> 00:03:11.462
And I'm just gonna grab
the CSS that's here.

48
00:03:15.336 --> 00:03:16.230
Copy that.

49
00:03:18.430 --> 00:03:24.310
And I am going to paste this
into my CodePen right here.

50
00:03:24.310 --> 00:03:27.620
So, our font-family is set to
Poppins kind of San Serif.

51
00:03:27.620 --> 00:03:30.500
So this looks like Arial
that's here on the screen.

52
00:03:30.500 --> 00:03:32.870
That is because Ariel is
the default font here.

53
00:03:32.870 --> 00:03:35.020
That's what's going on, all right?

54
00:03:35.020 --> 00:03:40.860
Now, let us make some changes to this, and
we'll show you how the scaling can work.

55
00:03:40.860 --> 00:03:45.273
All right, so, this has started
with our body background of white,

56
00:03:45.273 --> 00:03:48.178
we don't need that,
you can get rid of that.

57
00:03:48.178 --> 00:03:52.370
The color of black, we don't need that,
you can get rid of that.

58
00:03:53.930 --> 00:03:57.627
The paragraph, the margin on
the bottom of 1rem, we don't need that,

59
00:03:57.627 --> 00:03:58.846
you can get rid of that.

60
00:04:01.405 --> 00:04:06.593
And then, it's going to set up a generic
style for us for headings 1 through 5,

61
00:04:06.593 --> 00:04:11.190
and it's set it up with margins and
all the rest of that, that is great.

62
00:04:12.330 --> 00:04:17.250
And then, here,
we have our series of font sizes, okay?

63
00:04:17.250 --> 00:04:23.548
What we're gonna do is we're gonna write a
little bit of code here with variables and

64
00:04:23.548 --> 00:04:28.350
with scaling, so that we can have
a flexible series of numbers.

65
00:04:28.350 --> 00:04:33.410
Right now, we're locked into what
the Type Scale has given us but

66
00:04:33.410 --> 00:04:37.836
we can write this such that it
will calculate this for us.

67
00:04:37.836 --> 00:04:40.095
So, let's go through that process now.

68
00:04:40.095 --> 00:04:45.403
I'm gonna scroll back in
my CSS up to the root and

69
00:04:45.403 --> 00:04:51.131
we can set up a variable called base-size,
okay?

70
00:04:51.131 --> 00:04:52.060
Base-size.

71
00:04:53.200 --> 00:05:00.010
And we're at root, so we can call it 1rem,
which will be 16 pixels, okay?

72
00:05:01.860 --> 00:05:03.720
So, that's our base-size.

73
00:05:03.720 --> 00:05:08.240
We can also set up an item
we'll call it scale.

74
00:05:09.320 --> 00:05:13.288
So this is the number that comes from
that drop down where we had major third,

75
00:05:13.288 --> 00:05:16.450
minor third, augmented fourth,
all those numbers.

76
00:05:16.450 --> 00:05:17.850
What is the scale?

77
00:05:17.850 --> 00:05:20.969
This is going to be 1.25.

78
00:05:20.969 --> 00:05:25.700
That's our number, okay?

79
00:05:25.700 --> 00:05:29.927
And then what we'll do,
is we can set up a series of items here.

80
00:05:29.927 --> 00:05:36.112
So, if our paragraphs and our body and

81
00:05:36.112 --> 00:05:41.728
such, let's go here to our body.

82
00:05:41.728 --> 00:05:46.188
We can say our font size will be what?

83
00:05:46.188 --> 00:05:54.720
var(--base-size).

84
00:05:54.720 --> 00:05:56.310
We could set that on the body tag.

85
00:05:57.390 --> 00:05:58.810
Very non-specific,

86
00:05:58.810 --> 00:06:03.300
we're setting the base font size
to 16 pixels, which it already is.

87
00:06:03.300 --> 00:06:06.010
You won't see any changing or
anything like that.

88
00:06:06.010 --> 00:06:10.200
From here, we can scale forward,
so let's take a look at that.

89
00:06:10.200 --> 00:06:13.390
We're gonna start down here with h5.

90
00:06:13.390 --> 00:06:17.573
h5, currently says it's set to 1.25rem.

91
00:06:17.573 --> 00:06:20.010
How did we get to 1.25rem?

92
00:06:22.410 --> 00:06:24.489
Anybody know?

93
00:06:24.489 --> 00:06:27.630
&gt;&gt; Base-size times scale.

94
00:06:27.630 --> 00:06:30.300
&gt;&gt; Base size times the scale gave us 1.25,
makes sense?

95
00:06:30.300 --> 00:06:31.280
So, let's just write that.

96
00:06:33.400 --> 00:06:38.910
So our font size is gonna wind up being
our var, actually, we'll do a calc.

97
00:06:40.020 --> 00:06:44.130
Calc is the way that we do math in CSS,
if that's new to you.

98
00:06:44.130 --> 00:06:45.940
Calc with parentheses.

99
00:06:45.940 --> 00:06:50.980
We can do addition, subtraction,
multiplication, and division, that's all.

100
00:06:50.980 --> 00:06:57.210
So no exponents, no funny stuff,
just basic arithmetic, okay?

101
00:06:57.210 --> 00:06:59.357
So, calc is what we need here.

102
00:06:59.357 --> 00:07:03.852
And we are going to then
set this up with our

103
00:07:03.852 --> 00:07:08.734
two variables, var(--base-size) and

104
00:07:08.734 --> 00:07:13.753
we can multiply that by var(---scale).

105
00:07:19.971 --> 00:07:24.590
And absolutely nothing
changes on the page, right?

106
00:07:26.150 --> 00:07:27.125
So far so good?

107
00:07:30.417 --> 00:07:35.586
Okay, so now if we go to our h4,
it's 1.563.

108
00:07:35.586 --> 00:07:39.537
What is this?

109
00:07:39.537 --> 00:07:41.927
What is the math behind that?

110
00:07:41.927 --> 00:07:42.940
A little bit more difficult.

111
00:07:42.940 --> 00:07:43.650
Yes.

112
00:07:43.650 --> 00:07:45.230
&gt;&gt; h5 times the scale.

113
00:07:45.230 --> 00:07:48.480
&gt;&gt; It's basically the h5 times the scale,
right?

114
00:07:48.480 --> 00:07:52.430
Except we can't grab that h5, right?

115
00:07:53.750 --> 00:07:59.450
Can't grab that h5, cuz we've set it
to our CSS selector of h5, didn't we?

116
00:08:00.510 --> 00:08:01.862
Okay, so let's borrow that.

117
00:08:05.029 --> 00:08:09.853
Let's take that right there,
the value of font size, and

118
00:08:09.853 --> 00:08:12.816
let's go back up to our variables.

119
00:08:15.624 --> 00:08:19.703
So now we can set up a variable,
we'll call it h5, and

120
00:08:19.703 --> 00:08:22.295
we'll give it that value, yeah?

121
00:08:28.195 --> 00:08:31.808
So, now, if I set up a variable
called h4 what is this going to be?

122
00:08:31.808 --> 00:08:33.181
&gt;&gt; h5 times scale.

123
00:08:33.181 --> 00:08:34.204
&gt;&gt; h5 times scale.

124
00:08:34.204 --> 00:08:42.759
So, calc(var(--h5) *

125
00:08:42.759 --> 00:08:48.684
var(--scale).

126
00:08:53.452 --> 00:08:58.790
Now, it would be nice if we could just
say, base-size times scale squared.

127
00:08:59.940 --> 00:09:01.866
That would be really, really awesome.

128
00:09:01.866 --> 00:09:06.838
But we have to do it this way because CSS
calc doesn't handle exponents, right?

129
00:09:06.838 --> 00:09:12.193
And 1.25 times or
I'm sorry, 1.25 times two

130
00:09:12.193 --> 00:09:18.910
is not the same thing as 1.25 times 1.25,
makes sense?

131
00:09:18.910 --> 00:09:20.505
That is often a question I get.

132
00:09:20.505 --> 00:09:23.330
We'll just say two, 1.25s.

133
00:09:23.330 --> 00:09:26.169
No they're squared, [LAUGH], all right?

134
00:09:26.169 --> 00:09:31.302
So type along with me, we're gonna

135
00:09:31.302 --> 00:09:38.155
set up a whole bunch of
these as you can imagine.

136
00:09:38.155 --> 00:09:40.062
We're gonna go to h3, h2, and h1.

137
00:09:40.062 --> 00:09:45.355
So, h4, h3, h2, And h1.

138
00:09:45.355 --> 00:09:50.133
Okay, so for my h3,
what is its calculation?

139
00:09:50.133 --> 00:09:53.079
&gt;&gt; h4 times scale.
&gt;&gt; h4 times scale.

140
00:09:57.423 --> 00:10:00.198
Okay, for h2, what is its calculation?

141
00:10:00.198 --> 00:10:01.790
&gt;&gt; h3 times scale.

142
00:10:01.790 --> 00:10:04.190
&gt;&gt; h3 times scale.

143
00:10:04.190 --> 00:10:08.450
And for h1 what is our calculation?

144
00:10:08.450 --> 00:10:11.450
&gt;&gt; h2 times scale
&gt;&gt; h2 times scale.

145
00:10:11.450 --> 00:10:12.268
Nice?

146
00:10:12.268 --> 00:10:16.910
Cool little math here,
so you see what happens?

147
00:10:16.910 --> 00:10:21.630
Now, if we decide to change our base
font size, the boss comes to us and

148
00:10:21.630 --> 00:10:26.630
says everything needs to come up by
a little bit, we change one variable.

149
00:10:26.630 --> 00:10:27.380
How cool is that?

150
00:10:28.430 --> 00:10:30.280
Yeah, right?

151
00:10:30.280 --> 00:10:32.078
The other cool thing, of course,

152
00:10:32.078 --> 00:10:36.220
with CSS variables is we can change
their value across media queries.

153
00:10:36.220 --> 00:10:40.043
So, if you wanna change all of your
font sizes, when we go in a media query,

154
00:10:40.043 --> 00:10:44.116
you wanna make everything slightly bigger
for mobile, or smaller for mobile,

155
00:10:44.116 --> 00:10:45.390
or whatever.

156
00:10:45.390 --> 00:10:47.120
All we have to do is
change our base font size.

157
00:10:49.300 --> 00:10:51.460
Or we can change our scale or both.

158
00:10:52.980 --> 00:10:54.540
Pretty awesome.

159
00:10:54.540 --> 00:10:58.670
So this is something you may wanna do
on all of your production websites.

160
00:10:58.670 --> 00:11:01.690
We've set these up with headings in mind.

161
00:11:01.690 --> 00:11:05.830
You can, of course, set them up with
all kinds of other things as well,

162
00:11:05.830 --> 00:11:07.628
other various points in time.

163
00:11:07.628 --> 00:11:11.290
And of course, this also solves
the problem that a lot of people have.

164
00:11:11.290 --> 00:11:15.764
For accessibility purposes, we always
want our headings to go in order,

165
00:11:15.764 --> 00:11:17.360
h1, h2, h3, right?

166
00:11:18.370 --> 00:11:23.340
But sometimes the designers want
the h2 to look like an h4, don't they?

167
00:11:25.170 --> 00:11:27.450
This is gonna allow us
to make that happen.

168
00:11:27.450 --> 00:11:29.986
So we can keep the semantics
of our HTML but

169
00:11:29.986 --> 00:11:32.390
make it look however we want it to look.

170
00:11:32.390 --> 00:11:35.670
&gt;&gt; Does order matter when you're
declaring variables in your root?

171
00:11:37.150 --> 00:11:42.450
&gt;&gt; If it works like CSS, so
you can build these on top of each other.

172
00:11:42.450 --> 00:11:47.200
&gt;&gt; So if you were to put h1 at the top and
then try to reference it down further?

173
00:11:47.200 --> 00:11:49.043
&gt;&gt; It'll all calculate, yeah.

174
00:11:49.043 --> 00:11:54.289
All right, so guess what the next
thing we have to do now in our CSS,

175
00:11:54.289 --> 00:11:58.991
when we get down here to our h1,
h2, h3, h4, and h5?

176
00:11:58.991 --> 00:12:00.304
What do we do now?

177
00:12:00.304 --> 00:12:03.200
&gt;&gt; Set the font sizes to those variables.

178
00:12:03.200 --> 00:12:06.910
&gt;&gt; Set the font sizes to those variables,
exactly.

179
00:12:06.910 --> 00:12:11.294
So, our font size will become var(--h1).

180
00:12:15.104 --> 00:12:16.711
Var(--h2).

181
00:12:21.743 --> 00:12:23.780
And so on and so forth, right?

182
00:12:23.780 --> 00:12:26.566
I'm going ahead and type all those in.

183
00:12:40.062 --> 00:12:44.192
Change our math down here
when we get to our h5,

184
00:12:44.192 --> 00:12:49.863
var( --h5), Okay?

185
00:12:49.863 --> 00:12:53.900
Now, let's look at this last
one down here at the bottom.

186
00:12:54.990 --> 00:12:58.895
For the HTML element called small, and for

187
00:12:58.895 --> 00:13:04.549
a class of text_small,
this is set to a font size of 0.8rem

188
00:13:06.746 --> 00:13:10.361
So instead of just going from our base
font size and making things bigger as we

189
00:13:10.361 --> 00:13:14.860
do with headings, now we're going from our
base font size and making things smaller.

190
00:13:14.860 --> 00:13:19.104
So, what is the math
to get us to a 0.8rem?

191
00:13:22.866 --> 00:13:23.847
&gt;&gt; Divided by the scale.

192
00:13:23.847 --> 00:13:24.830
&gt;&gt; Exactly, divided by the scale.

193
00:13:24.830 --> 00:13:29.380
So, we can set that up as a series
of variables if you want.

194
00:13:29.380 --> 00:13:33.501
Or if you just have one
of them as we do here,

195
00:13:33.501 --> 00:13:37.174
then we can just set this up to be calc.

196
00:13:37.174 --> 00:13:44.621
And then,
we'll say var(--base-size), right?

197
00:13:46.190 --> 00:13:51.004
Divided by var(--scale)).

198
00:14:00.229 --> 00:14:00.835
How cool is that?

199
00:14:04.442 --> 00:14:07.442
Worth the price of admission?

200
00:14:07.442 --> 00:14:08.077
Sweet.

