WEBVTT

1
00:00:00.230 --> 00:00:01.570
&gt;&gt; Sarah: SVG Sprites.

2
00:00:01.570 --> 00:00:04.860
We're gonna cover this section, and
I'm not gonna make you do an exercise for

3
00:00:04.860 --> 00:00:06.650
it because I think it's
good to know about, but

4
00:00:06.650 --> 00:00:10.040
it's a little less useful than some of
the other things that we're gonna cover.

5
00:00:10.040 --> 00:00:12.110
So, we're gonna go
straight from SVG Sprites.

6
00:00:12.110 --> 00:00:14.490
I'm gonna explain some principles, and

7
00:00:14.490 --> 00:00:18.570
then we're gonna go directly into
GreenSock in the next section.

8
00:00:18.570 --> 00:00:23.206
When we talk about GreenSock, before we
talk about GreenSock we're gonna talk

9
00:00:23.206 --> 00:00:26.247
a bit about all the tools,
all the ways to animate and

10
00:00:26.247 --> 00:00:30.213
why we're talking about GreenSock
of all of the tools in the world.

11
00:00:30.213 --> 00:00:34.120
So that you get a sense of
what you're deciding on.

12
00:00:34.120 --> 00:00:37.640
All of those tools are totally acceptable,
I'm just giving you kind of,

13
00:00:37.640 --> 00:00:41.860
we're gonna enter opinion land again for
some of that stuff.

14
00:00:41.860 --> 00:00:45.120
I'm a very curious person,
I play with everything.

15
00:00:45.120 --> 00:00:49.300
So I'm just basically
giving you my TLDR from

16
00:00:49.300 --> 00:00:53.450
having played with literally every
single animation library on the planet.

17
00:00:54.650 --> 00:00:57.610
Okay, so let's start with SVG Sprites.

18
00:00:57.610 --> 00:01:02.400
So there's this great pen, well,
I think it's a Smashing Magazine article

19
00:01:02.400 --> 00:01:06.950
first by Joe Harrison that shows
this thing with SVG sprites.

20
00:01:06.950 --> 00:01:12.020
So even though an SVG can
be just used as an SVG,

21
00:01:12.020 --> 00:01:17.660
you could create a sprite sheet out of
SVG and show different parts of it.

22
00:01:17.660 --> 00:01:21.620
Based on what fidelity you
want to show your users.

23
00:01:21.620 --> 00:01:25.420
So in this technique,
he's moving the viewbox, right?

24
00:01:25.420 --> 00:01:28.280
We said that the viewbox
is kind of like a window.

25
00:01:28.280 --> 00:01:31.100
That's basically what you're doing
with sprites to begin with when you're

26
00:01:31.100 --> 00:01:31.670
working with them.

27
00:01:31.670 --> 00:01:33.155
You're taking a background,

28
00:01:33.155 --> 00:01:38.040
a piece of a background of a bigger
PNG usually for a sprite sheet.

29
00:01:38.040 --> 00:01:42.360
You can also do a similar
thing with sprites.

30
00:01:42.360 --> 00:01:44.650
And because of that,
you can do things like walk cycles.

31
00:01:44.650 --> 00:01:47.420
So there's a couple of different
ways that you could do walk cycles.

32
00:01:47.420 --> 00:01:51.260
You could move each piece of the SVG and
make arms and legs, but

33
00:01:51.260 --> 00:01:52.440
that's a lot of mechanics.

34
00:01:52.440 --> 00:01:57.007
And actually there's a really great pen by
Diego that I can link up later where he

35
00:01:57.007 --> 00:02:01.860
does actually get all the mechanics of
all of the arms and legs pieces moving.

36
00:02:01.860 --> 00:02:06.620
But something that might be a little bit
easier, is to create what I did here,

37
00:02:06.620 --> 00:02:07.650
which is a sprite.

38
00:02:07.650 --> 00:02:11.520
And basically I'm drawing each,

39
00:02:11.520 --> 00:02:15.590
I draw him like walking, and
then I draw the next piece of him walking,

40
00:02:15.590 --> 00:02:19.140
and then I draw the next piece of him
walking until I have a full walk cycle.

41
00:02:19.140 --> 00:02:21.670
And then I'm cycling through that

42
00:02:21.670 --> 00:02:24.410
background image using
a thing called steps.

43
00:02:24.410 --> 00:02:28.040
So if you've ever used
steps in SVG Animation, or

44
00:02:28.040 --> 00:02:32.850
in CSS Animation, it's gonna take one
frame at a time and go through each one.

45
00:02:34.700 --> 00:02:36.610
So here is what that looks like.

46
00:02:36.610 --> 00:02:41.470
I'm kinda doing like a poor man's
animation here by changing the color

47
00:02:41.470 --> 00:02:46.560
per frame instead of doing it, having
the computer interpolate those values.

48
00:02:46.560 --> 00:02:49.890
I'm just going, okay, you're red, you're
a little bit orange, you're a little bit

49
00:02:49.890 --> 00:02:55.270
yellow and going down the hue spectrum,
and I just set up a board.

50
00:02:55.270 --> 00:02:59.680
And what I do is, in Illustrator,
I'll set up a really long board.

51
00:02:59.680 --> 00:03:02.700
I'll say objects split into grid.

52
00:03:02.700 --> 00:03:07.030
They have that thing and
then it'll make guides for me.

53
00:03:07.030 --> 00:03:12.140
So I can just create the drawing,
make a little box around the drawing,

54
00:03:12.140 --> 00:03:13.850
and copy-paste it into the next one.

55
00:03:13.850 --> 00:03:17.220
Move it around a little bit,
copy-paste it into the next one,

56
00:03:17.220 --> 00:03:19.600
move it around a little bit,
copy, and so on and so forth.

57
00:03:19.600 --> 00:03:23.160
So you don't have to start
again in everything.

58
00:03:23.160 --> 00:03:26.990
And that's also how you know
to keep it stable per drawing.

59
00:03:26.990 --> 00:03:31.580
You're just moving those paths
a little bit each time, right?

60
00:03:31.580 --> 00:03:34.780
You're just pulling those
little things around.

61
00:03:34.780 --> 00:03:37.200
And to make this effect for

62
00:03:37.200 --> 00:03:41.770
the background, I have a few different
layers of those SVG animations.

63
00:03:41.770 --> 00:03:46.620
So I have an SVG that's like
the I have a background, and

64
00:03:46.620 --> 00:03:49.960
then I have a SVG that's
like the mid-ground.

65
00:03:49.960 --> 00:03:54.360
And the next mid-ground, and then
the next mid-ground, and then the top.

66
00:03:54.360 --> 00:03:55.860
And what they're doing is,

67
00:03:55.860 --> 00:04:01.260
the things that are closest to me
are moving quicker across that canvas.

68
00:04:01.260 --> 00:04:06.440
And the things that are further away from
me are moving slower across the canvas.

69
00:04:06.440 --> 00:04:09.050
And I also have to check and
make sure that they,

70
00:04:09.050 --> 00:04:14.810
when each end of those backgrounds
lines up, so that it's a seamless loop.

71
00:04:14.810 --> 00:04:19.220
A building doesn't end and then there's
a grass thing or something like that.

72
00:04:19.220 --> 00:04:20.930
It has to match on each side.

73
00:04:22.800 --> 00:04:26.740
So what I've done is I've created
one area for all of them and

74
00:04:26.740 --> 00:04:31.610
extended it for
each one with an add extend.

75
00:04:31.610 --> 00:04:36.500
And then I have one,
I just have one keyframe, and that's 100%,

76
00:04:36.500 --> 00:04:39.560
the background position moves 200%.

77
00:04:39.560 --> 00:04:43.425
And I reused that for each one of these.

78
00:04:43.425 --> 00:04:47.584
So I have seven seconds,
like I said the foreground 7 seconds,

79
00:04:47.584 --> 00:04:49.595
15 seconds, 20 seconds.

80
00:04:49.595 --> 00:04:54.520
So the 20 seconds is gonna take a long
time but I'm reusing the same keyframes.

81
00:04:55.695 --> 00:04:59.110
Do anyone know why I would
do a negative delay?

82
00:05:02.598 --> 00:05:04.590
&gt;&gt; Speaker 2: Starts earlier.

83
00:05:04.590 --> 00:05:05.590
&gt;&gt; Sarah: It starts earlier.

84
00:05:05.590 --> 00:05:08.000
So, why would I do that instead
of starting it at zero?

85
00:05:10.840 --> 00:05:15.530
&gt;&gt; Speaker 2: So
that the animation start at different.

86
00:05:15.530 --> 00:05:17.690
&gt;&gt; Sarah: That's right,
that's exactly right.

87
00:05:17.690 --> 00:05:22.170
So remember how we talked about how the
backgrounds have to kind of line up and

88
00:05:22.170 --> 00:05:23.500
start the same way?

89
00:05:23.500 --> 00:05:29.400
Well, backgrounds in real life don't
all start at a perfect seam, right?

90
00:05:29.400 --> 00:05:31.710
That just kind of looks unnatural.

91
00:05:31.710 --> 00:05:35.970
Usually start looking at a screen or
a like street and

92
00:05:35.970 --> 00:05:38.380
the street is in the middle of the street.

93
00:05:38.380 --> 00:05:43.660
And you're in the middle of the trees or
you're in the middle of the background.

94
00:05:43.660 --> 00:05:48.270
So by kind of reversing, clocking back
the timeline by negative five seconds,

95
00:05:48.270 --> 00:05:49.310
it staggers.

96
00:05:49.310 --> 00:05:53.160
Especially because their timing
is different for each one.

97
00:05:53.160 --> 00:05:54.510
They're staggered.

98
00:05:54.510 --> 00:05:59.460
And it also gives this appearance
that you're walking into the middle

99
00:05:59.460 --> 00:06:00.580
of him walking.

100
00:06:00.580 --> 00:06:05.310
Not like he's standing on a street
corner and then he's walking.

101
00:06:05.310 --> 00:06:10.440
So sometimes in order to get this real
life effect you have to randomize things

102
00:06:10.440 --> 00:06:11.420
just a little bit.

103
00:06:11.420 --> 00:06:11.920
Great.

104
00:06:13.541 --> 00:06:15.889
&gt;&gt; Sarah: Okay,
here's another sprite technique and

105
00:06:15.889 --> 00:06:18.730
this one is like a really, really fun one.

106
00:06:18.730 --> 00:06:20.190
Because basically, what you're doing like,

107
00:06:20.190 --> 00:06:23.380
let's say I want take,
do like a modern day book of Kels.

108
00:06:23.380 --> 00:06:25.110
Do you guys know what book of Kels is?

109
00:06:25.110 --> 00:06:29.747
It's like in these old illuminated
manuscripts back in Ireland,

110
00:06:29.747 --> 00:06:33.130
they would take the first initial letter.

111
00:06:33.130 --> 00:06:37.470
And they would do these crazy,
beautiful, fancy drawings or whatever.

112
00:06:37.470 --> 00:06:41.870
So I thought, what would it be like if
we had an initial letter for a blog,

113
00:06:41.870 --> 00:06:42.730
or something like that?

114
00:06:43.846 --> 00:06:46.270
So you could imagine
that maybe on desktop,

115
00:06:46.270 --> 00:06:48.340
it had a lot of fidelity and stuff.

116
00:06:48.340 --> 00:06:51.140
But maybe on tablet,
it would be a little different.

117
00:06:51.140 --> 00:06:55.280
We pull some of the details off on
the building, so on and so forth.

118
00:06:55.280 --> 00:06:59.670
And then on mobile it would
be kind of simpler view.

119
00:06:59.670 --> 00:07:02.450
Sort of like what we saw
before from the other sprite.

120
00:07:02.450 --> 00:07:07.550
But if you think about the way that
when you saw that original sprite,

121
00:07:07.550 --> 00:07:09.510
there's a lot of repetition going on,
right?

122
00:07:09.510 --> 00:07:14.760
We're actually communicating
a lot of stuff between these.

123
00:07:14.760 --> 00:07:17.380
Like this one's not so
different from this one.

124
00:07:17.380 --> 00:07:19.930
That's a lot of stuff
that we're repeating.

125
00:07:19.930 --> 00:07:25.086
So, what would happen if I just kinda
conditionally showed some pieces?

126
00:07:25.086 --> 00:07:31.790
Well, I could make this one and
this one be basically the same and decide

127
00:07:31.790 --> 00:07:36.940
to show some pieces and remove some pieces
on that view, using the media query.

128
00:07:36.940 --> 00:07:40.740
I could also change the background
of this using a media query and

129
00:07:40.740 --> 00:07:44.300
the size of the SVG will
stay consistent either way.

130
00:07:44.300 --> 00:07:48.970
The mobile view is so different that we're
just gonna leave that as is, but basically

131
00:07:48.970 --> 00:07:54.780
what we end up with is an SVG sprite that
looks like this, it's about the same size.

132
00:07:54.780 --> 00:07:57.760
And we're gonna just make
the view box this, and

133
00:07:57.760 --> 00:08:03.070
then switch the view box at a certain
point in time with some JavaScript.

134
00:08:03.070 --> 00:08:05.630
So what we get is something like this.

135
00:08:05.630 --> 00:08:07.680
I'm gonna open this up in another window.

136
00:08:07.680 --> 00:08:09.530
Got to get out of full screen here.

137
00:08:12.070 --> 00:08:17.306
So we can go like this and it changes and
then it changes all the way down.

138
00:08:20.283 --> 00:08:23.987
&gt;&gt; Sarah: And
it's animated the whole way through and

139
00:08:23.987 --> 00:08:28.800
it nicely adjusts to whatever
view port I'm using it at.

140
00:08:30.050 --> 00:08:35.250
Now that whole SVG and
animation was 8 kilobytes gzipped.

141
00:08:35.250 --> 00:08:39.160
That's awesome, like think about
a PNG to illustrate an article.

142
00:08:39.160 --> 00:08:42.160
Usually when you're trying to
illustrate a blog post or something and

143
00:08:42.160 --> 00:08:47.760
make it interesting you're communicating
with like 180K or something like that.

144
00:08:47.760 --> 00:08:50.450
This is way, way, way smaller and

145
00:08:50.450 --> 00:08:55.310
we're actually doing kinda fun and
cool stuff with it.

146
00:08:55.310 --> 00:08:59.550
So the way that this is done is I'm
basically grabbing in Illustrator,

147
00:08:59.550 --> 00:09:03.990
if you have something that's the same
class or the same id again and again,

148
00:09:03.990 --> 00:09:09.000
it will call it star01,
star02, as it outputs.

149
00:09:09.000 --> 00:09:12.160
So I just quickly did a find and
replace of IDs to classes and

150
00:09:12.160 --> 00:09:17.030
grabbed all the classes that are star,
all the classes that are dot.

151
00:09:17.030 --> 00:09:21.570
And then I have it blinking, but again I
have them blinking at different speeds and

152
00:09:21.570 --> 00:09:23.750
a negative delay to offset them so

153
00:09:23.750 --> 00:09:28.390
that they're not starting
at the same point in time.

154
00:09:28.390 --> 00:09:30.950
No width and height for the SVG itself.

155
00:09:30.950 --> 00:09:33.390
Instead we're gonna define it in CSS.

156
00:09:33.390 --> 00:09:36.180
This is using a float,
I made this pen a while ago.

157
00:09:36.180 --> 00:09:40.790
You could use flexbox, you could use Grid,
you could use whatever you want.

158
00:09:40.790 --> 00:09:43.840
We're using percentage here,
we could do something else.

159
00:09:43.840 --> 00:09:46.030
So we're gonna define a smaller view box.

160
00:09:46.030 --> 00:09:52.695
So the view box was originally zero zero,
I think like 900 by 474.

161
00:09:52.695 --> 00:09:55.730
But I'm gonna crop it to here and say 490.

162
00:09:55.730 --> 00:10:01.460
And then I have some animation media
queries, because I'm actually changing it

163
00:10:01.460 --> 00:10:06.170
from those big mountains to those smaller
mountains on mobile, so I have to change.

164
00:10:06.170 --> 00:10:08.750
They both have that same class on them,
but

165
00:10:08.750 --> 00:10:11.830
I'm changing it up based
on which one we're doing.

166
00:10:13.090 --> 00:10:15.540
And then I have a view box
shift with JavaScript.

167
00:10:15.540 --> 00:10:16.650
You have to use JavaScript for

168
00:10:16.650 --> 00:10:21.150
this one because there's no way
to target a view box in CSS.

169
00:10:21.150 --> 00:10:25.370
I think that there was a proposal
probably by Jake Archibald

170
00:10:25.370 --> 00:10:30.230
to put it into the CSS spec, but I don't
think it got very far, which is fine.

171
00:10:30.230 --> 00:10:34.290
It's not that much code to just
change it between the two.

172
00:10:34.290 --> 00:10:38.320
So we're just grabbing it,
we're listening to a match media, and

173
00:10:38.320 --> 00:10:41.370
then we're changing it
from one to the other.

