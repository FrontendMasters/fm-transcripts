WEBVTT

1
00:00:01.660 --> 00:00:04.170
&gt;&gt; Sarah Drasner: SVGs for
animation support breakdown or

2
00:00:04.170 --> 00:00:05.710
how I learned to love the inline.

3
00:00:05.710 --> 00:00:10.440
I mentioned a couple of times that inline
is my favorite way of working with SVG but

4
00:00:10.440 --> 00:00:12.940
let's talk about that really quickly.

5
00:00:12.940 --> 00:00:15.880
For image source, object,
embed, background URL and

6
00:00:15.880 --> 00:00:20.280
iFrame you can only designate
animation if it's inside the SVG.

7
00:00:20.280 --> 00:00:24.987
Also, the problem with this is that
sometimes, if you execute scripts inside

8
00:00:24.987 --> 00:00:29.766
of an SVG, because you can actually
execute scripts and also do CSS animation,

9
00:00:29.766 --> 00:00:33.792
the browser is like, this is an image and
it's executing things.

10
00:00:33.792 --> 00:00:37.740
[LAUGH] What, shut it down, shut it down.

11
00:00:37.740 --> 00:00:41.480
So I would not actually
suggest you doing this,

12
00:00:41.480 --> 00:00:44.540
it can kind of cause some security errors.

13
00:00:44.540 --> 00:00:48.310
For inline, both SVG animation and
interaction are supported.

14
00:00:48.310 --> 00:00:51.500
So for the length of this class what
I'm gonna ask you to do is whenever

15
00:00:51.500 --> 00:00:56.120
you're working with SVG you actually
put it directly inline in the HTML.

16
00:00:57.750 --> 00:01:02.670
So let's talk about animating with CSS,
just like a really quick refresher.

17
00:01:02.670 --> 00:01:06.790
So this course kind of assumes that
you've worked with CSS animation before.

18
00:01:06.790 --> 00:01:10.910
We're gonna talk about a couple gotchas
before I send you on your way animating.

19
00:01:10.910 --> 00:01:16.180
So we have some keyframes, you're gonna
@keyframes animation-name-you-pick.

20
00:01:16.180 --> 00:01:20.330
Don't call your animations
animation-name-you-pick.

21
00:01:20.330 --> 00:01:23.560
We have at 0%, background is blue.

22
00:01:23.560 --> 00:01:26.395
The transform is translate x0.

23
00:01:26.395 --> 00:01:31.011
Then 50%, it turns purple, and
it moves over by 50 pixels.

24
00:01:31.011 --> 00:01:35.072
Then at 100%,
it's gonna move over 100 pixels.

25
00:01:35.072 --> 00:01:38.949
So if we apply this to a ball,
we're gonna say, animation-name-you-pick,

26
00:01:38.949 --> 00:01:41.799
it's It's gonna be two seconds long,
it's gonna wait two

27
00:01:41.799 --> 00:01:45.235
seconds before it starts animating,
it's gonna happen three times.

28
00:01:45.235 --> 00:01:49.015
It's gonna alternate, so it's gonna
go this way, this way, this way for

29
00:01:49.015 --> 00:01:50.555
each iteration.

30
00:01:50.555 --> 00:01:54.945
The easing structure is ease-in-out,
and forwards for

31
00:01:54.945 --> 00:01:59.729
both, make sure that the animation
doesn't snap back to its original state.

32
00:02:00.730 --> 00:02:05.170
Cool, so here's what that looks
like with the div, right?

33
00:02:05.170 --> 00:02:06.460
It's kind of what you would expect.

34
00:02:06.460 --> 00:02:09.001
That's what we talked about it doing, so

35
00:02:09.001 --> 00:02:12.352
that's not surprising that
it's doing that, cool.

