WEBVTT

1
00:00:00.220 --> 00:00:03.260
&gt;&gt; Sarah Drasner: Animating text and
relative color values.

2
00:00:03.260 --> 00:00:08.620
There's this thing called
Split Text that GreenSock offers.

3
00:00:09.710 --> 00:00:12.870
One cool thing is that it's not
even dependent on TweenMax.

4
00:00:12.870 --> 00:00:17.900
So you could theoretically use Split Text,
that plugin, without GreenSock.

5
00:00:17.900 --> 00:00:19.910
You could just use it with CSS.

6
00:00:19.910 --> 00:00:24.000
You could even use it with other
animation libraries if you wanted to.

7
00:00:24.000 --> 00:00:27.770
What it does is it splits
the text apart and adds.

8
00:00:27.770 --> 00:00:31.210
It kind of wraps like a span and
a div, the span or

9
00:00:31.210 --> 00:00:35.130
a div, depending on which one you want,
around each one.

10
00:00:35.130 --> 00:00:36.040
Now you might say to yourself,

11
00:00:36.040 --> 00:00:40.100
well, I could do that with like split join
and make that programmatically myself.

12
00:00:40.100 --> 00:00:45.330
But, one thing that it does well is
that it honors natural line breaks.

13
00:00:45.330 --> 00:00:49.840
And that's something that is harder to do
because if you do the split join thing by

14
00:00:49.840 --> 00:00:55.260
yourself what will happen is that all
characters the will kind of clomp together

15
00:00:55.260 --> 00:00:56.780
in one big group.

16
00:00:56.780 --> 00:01:00.090
So this and some of the kind of other

17
00:01:00.090 --> 00:01:04.870
libraries that do this out there
don't do a good job of this part.

18
00:01:04.870 --> 00:01:07.880
So that's the part that
actually is really cool.

19
00:01:07.880 --> 00:01:11.040
There's a option to create
auto incrementing classes,

20
00:01:11.040 --> 00:01:14.170
you can have it character 1,
character 2, character 3.

21
00:01:14.170 --> 00:01:17.960
I wouldn't suggest adding that unless
you actually need it, unless you need to

22
00:01:17.960 --> 00:01:21.550
target something in particular
because it really beefs up the dam.

23
00:01:21.550 --> 00:01:23.800
You're just adding tons of stuff.

24
00:01:23.800 --> 00:01:25.398
Into the DOM if you're not using it.

25
00:01:27.003 --> 00:01:28.610
&gt;&gt; Sarah Drasner: So here's how it looks.

26
00:01:28.610 --> 00:01:31.980
We're gonna say foo or
dancing tango monkey pants or

27
00:01:31.980 --> 00:01:33.920
whatever you wanna call it.

28
00:01:33.920 --> 00:01:36.350
And we're gonna make a new
split text instance.

29
00:01:36.350 --> 00:01:38.190
We go grab the thing.

30
00:01:38.190 --> 00:01:43.220
We say type words or type lines or
type cars for character.

31
00:01:43.220 --> 00:01:47.670
And then this is that optional
parameter to create classes.

32
00:01:47.670 --> 00:01:48.975
And whatever the class names is.

33
00:01:50.351 --> 00:01:53.620
&gt;&gt; Sarah Drasner: So you can do stuff
like this, which you should never do.

34
00:01:53.620 --> 00:01:59.990
Where you're animating a gradient and all
these characters, and lines, and words.

35
00:01:59.990 --> 00:02:04.032
I'm breaking them all apart and
using them all separately.

36
00:02:05.832 --> 00:02:07.110
&gt;&gt; Sarah Drasner: Don't do this.

37
00:02:07.110 --> 00:02:10.970
That's way too much stuff for the DOM,
especially animating gradients that way.

38
00:02:10.970 --> 00:02:14.870
Don't animate gradients that way,
that's not very performant.

39
00:02:14.870 --> 00:02:18.850
Here's a better way of animating
gradients, you can create a mask.

40
00:02:18.850 --> 00:02:21.780
You can create two different panels,
make a mask of one, and

41
00:02:21.780 --> 00:02:27.030
then move it with transforms, and that's
way more performant and will work better.

42
00:02:27.030 --> 00:02:29.550
Than the way that I did in that pen.

43
00:02:29.550 --> 00:02:34.110
That was just a fun weekend
exercise to throw things around.

44
00:02:34.110 --> 00:02:38.410
You can set all those transform
perspective, keep it 3D and

45
00:02:38.410 --> 00:02:39.210
all that stuff.

46
00:02:39.210 --> 00:02:40.740
You can do that to text.

47
00:02:40.740 --> 00:02:43.910
So you can totally set all
of that stuff to text.

48
00:02:43.910 --> 00:02:45.990
That's how I was throwing it.

49
00:02:45.990 --> 00:02:48.380
Into your face and
out of your face and stuff.

50
00:02:48.380 --> 00:02:53.280
I could have just, if I took that away,
that stuff would have broken apart but

51
00:02:53.280 --> 00:02:58.280
it wouldn't have gotten huge and
crazy and flipping all over the place.

52
00:02:59.780 --> 00:03:03.480
So first I define the types
of split text you need.

53
00:03:03.480 --> 00:03:05.720
Don't do all of these things.

54
00:03:05.720 --> 00:03:10.500
But you get words or characters and
then I'm gonna store them.

55
00:03:11.800 --> 00:03:15.860
I have this helper function I use all
the time, which I call "Totes Rando", and

56
00:03:15.860 --> 00:03:20.740
I just like to find a max and min of two
different values so I just say totesRando,

57
00:03:20.740 --> 00:03:22.850
start here, go here.

58
00:03:22.850 --> 00:03:27.170
I can always tell that someone is
using my resources when I see this

59
00:03:27.170 --> 00:03:28.720
function in their code.

60
00:03:28.720 --> 00:03:32.200
I can do a totesRando search on CodePen,

61
00:03:32.200 --> 00:03:36.110
and find this function,
it's a really nice helper function.

62
00:03:37.770 --> 00:03:43.160
And we can even randomize
that position parameter too.

63
00:03:43.160 --> 00:03:49.640
So I can pass in Math.random and
concatenate that with the time.

64
00:03:49.640 --> 00:03:52.580
Since that's a string,
can do all sorts of stuff with it, right?

65
00:03:52.580 --> 00:03:57.340
Like I can plot it, I can actually
increment it along with the for

66
00:03:57.340 --> 00:03:58.870
loop if I wanted to.

67
00:03:58.870 --> 00:04:00.360
So, there's all sorts of stuff.

68
00:04:00.360 --> 00:04:04.050
Since we're in JavaScript,
GreenSock's kind of beautifully dumb.

69
00:04:04.050 --> 00:04:07.820
It just allows you to pass in numbers and
do whatever to it.

70
00:04:07.820 --> 00:04:11.820
So it offers that kind of base thing and
then you can manipulate it.

71
00:04:13.550 --> 00:04:15.250
Words can also illustrate a story.

72
00:04:15.250 --> 00:04:21.720
So I made this pen to kind of show how you
would use words to illustrate a story.

73
00:04:23.190 --> 00:04:28.986
This is

74
00:04:28.986 --> 00:04:36.714
the thing

75
00:04:36.714 --> 00:04:45.408
I had to add

76
00:04:45.408 --> 00:04:53.136
the start

77
00:04:53.136 --> 00:04:57.005
to.

78
00:04:57.005 --> 00:05:07.005
&gt;&gt; [MUSIC]

79
00:05:27.731 --> 00:05:31.331
&gt;&gt; Sarah Drasner: So you don't have
to be as heavy-handed as that.

80
00:05:31.331 --> 00:05:34.630
[LAUGH] where it's like turn it around and
the word turns around.

81
00:05:34.630 --> 00:05:40.070
But basically I'm showing you that to make
a point that you can have text move along

82
00:05:40.070 --> 00:05:45.420
with something else to kinda complement
the motion that you're working with and

83
00:05:45.420 --> 00:05:48.670
animate the text along
with to tell a story.

84
00:05:48.670 --> 00:05:50.350
So that can be really nice.

85
00:05:50.350 --> 00:05:54.080
And if you remember that Shel Silvertein,
the one before, we had it kind of

86
00:05:54.080 --> 00:05:58.355
animating on to the screen with a kind
of a whimsy to kind of you know,

87
00:05:58.355 --> 00:06:03.300
emulate that playfulness that we're trying
to get into the illustration as well.

