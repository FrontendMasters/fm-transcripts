WEBVTT

1
00:00:03.011 --> 00:00:05.475
&gt;&gt; Sarah Drasner: So
let's talk about some tools.

2
00:00:05.475 --> 00:00:09.026
One thing that people ask me a lot,
so I cover just a little bit,

3
00:00:09.026 --> 00:00:13.381
is why we're talking about SVG animation
versus something like Canvas, and

4
00:00:13.381 --> 00:00:14.450
when to use each.

5
00:00:14.450 --> 00:00:16.600
Because sometimes that's confusing for
people.

6
00:00:16.600 --> 00:00:22.340
So Dom/Virtual Dom, basically SVG
animation, is great for UI/UX animation.

7
00:00:22.340 --> 00:00:24.773
You're not going into a different context,
right,

8
00:00:24.773 --> 00:00:26.837
all the stuff is already
on the page in there.

9
00:00:26.837 --> 00:00:31.411
It's already in your application, and
you're just putting a class on it, or

10
00:00:31.411 --> 00:00:35.724
targeting, it or grabbing it with refs or
whatever and moving it around.

11
00:00:35.724 --> 00:00:39.620
It's great for
SVG that's resolution independent.

12
00:00:39.620 --> 00:00:40.850
It's easier to debug.

13
00:00:40.850 --> 00:00:44.540
If something breaks down and
it's in y our DOM, you can go grab it.

14
00:00:44.540 --> 00:00:49.520
And even if it's, kill me,
[LAUGH] it's still there,

15
00:00:49.520 --> 00:00:51.860
you can kind of debug,
and see it, and feel it.

16
00:00:51.860 --> 00:00:57.050
Whereas if a Canvas has something that
goes wrong, it will break to nothing.

17
00:00:57.050 --> 00:01:00.330
And you're mostly then console logging and
stuff like that,

18
00:01:00.330 --> 00:01:04.400
which is fine too, but it's kind of
a different system of debugging.

19
00:01:05.690 --> 00:01:08.005
Cons, it tanks with a lot of objects.

20
00:01:08.005 --> 00:01:10.465
And people get really nervous about this,
they're like, no,

21
00:01:10.465 --> 00:01:14.276
a lot of objects,
I can't animate five things.

22
00:01:14.276 --> 00:01:17.239
[LAUGH] No,
you can animate hundreds of things,

23
00:01:17.239 --> 00:01:19.915
sometimes I animate thousands of things.

24
00:01:19.915 --> 00:01:24.870
But once you get past a few hundred,
that's when gonna you're

25
00:01:24.870 --> 00:01:30.765
really start to see and
feel things not going so well.

26
00:01:30.765 --> 00:01:35.900
There is a thing I keep trying to
push through with the Blink team

27
00:01:35.900 --> 00:01:40.360
to try to get them to support
hardware acceleration and SVG better.

28
00:01:40.360 --> 00:01:43.420
And I feel like they just keep
moving things around on me.

29
00:01:43.420 --> 00:01:45.566
I'm like, but wait, please,

30
00:01:45.566 --> 00:01:50.110
so I can send you guys there if you
wanna vote on support for that too.

31
00:01:50.110 --> 00:01:52.341
So it is capable of
being better supported,

32
00:01:52.341 --> 00:01:54.828
it's just that they don't
put resources to it.

33
00:01:54.828 --> 00:01:57.521
That's partially because
they have a lot going on,

34
00:01:57.521 --> 00:02:01.390
there's a lot of things to support out
there, so they have to prioritize.

35
00:02:02.832 --> 00:02:05.390
Because it tanks with a lot of objects,
you have to kind of

36
00:02:05.390 --> 00:02:10.380
care about how you animate, you can't just
kind of throw things all over the place.

37
00:02:10.380 --> 00:02:12.791
Canvas pros, Canvas doesn't quite, I mean,

38
00:02:12.791 --> 00:02:16.790
you still have to kinda care about how
you animate, but not quite the same way.

39
00:02:16.790 --> 00:02:18.263
It's really dense, pixels dense.

40
00:02:18.263 --> 00:02:23.522
If you've ever gone to Awwwards site,
you know which one I'm talking about?

41
00:02:23.522 --> 00:02:25.994
[LAUGH] Everybody is like, yeah, yeah.

42
00:02:25.994 --> 00:02:29.900
[LAUGH] And you fly around on
a broom through Hogwarts, or

43
00:02:29.900 --> 00:02:33.160
you look at these crazy, beautiful things.

44
00:02:33.160 --> 00:02:37.410
That's all Canvas,
it's WebGL, and Three.js, and

45
00:02:37.410 --> 00:02:40.040
it's in a Canvas kind of context.

46
00:02:40.040 --> 00:02:46.469
It's capable of so much beautiful stuff,
and you can, it's really performant,

47
00:02:46.469 --> 00:02:51.080
the kinda things you can kinda
spur up are kind of incredible.

48
00:02:51.080 --> 00:02:53.130
So it's great for really impressive 3D or

49
00:02:53.130 --> 00:02:56.710
immersive stuff, it's great for
a ton of objects.

50
00:02:56.710 --> 00:02:59.800
So if you're working with
a data visualization, and

51
00:02:59.800 --> 00:03:02.390
you've just got a few things going on, or

52
00:03:02.390 --> 00:03:06.190
maybe even just hundreds of things
going on, totally, SVG is awesome.

53
00:03:06.190 --> 00:03:09.230
But if you have thousands
of things going on,

54
00:03:09.230 --> 00:03:14.380
my friend Shirley who does another course
here, she does this D3 course here.

55
00:03:14.380 --> 00:03:19.464
She made this visualization of every
line in Hamilton, and it was beautiful.

56
00:03:19.464 --> 00:03:22.280
But while she was working on it,
we started becoming friends.

57
00:03:22.280 --> 00:03:25.820
And she's like, hey,
all of these things are kind of,

58
00:03:25.820 --> 00:03:29.480
I'm trying to move them all over the page
and the performance kinda tanking.

59
00:03:29.480 --> 00:03:33.272
And I was like,
let's move this over to Canvas from SVG.

60
00:03:33.272 --> 00:03:37.170
And then it did it beautifully and
was doing a good job.

61
00:03:37.170 --> 00:03:41.347
So sometimes you have to switch
things over if you're talking

62
00:03:41.347 --> 00:03:45.137
about movement of thousands and
thousands of objects.

63
00:03:45.137 --> 00:03:47.010
Cons, it's harder to make accessible.

64
00:03:47.010 --> 00:03:51.620
You don't have, unlike SVG that has
a navigable DOM, Canvas doesn't.

65
00:03:51.620 --> 00:03:54.370
Canvas is just that one element.

66
00:03:54.370 --> 00:03:58.120
So if you have text in there,
if you're telling a story in there,

67
00:03:58.120 --> 00:04:01.080
you're really kinda leaving
screen readers out in the dark.

68
00:04:01.080 --> 00:04:04.990
Which may matter or may not matter,
depending on the context.

69
00:04:04.990 --> 00:04:09.903
But people do get sued for not having
accessible sites, so keep that in mind.

70
00:04:09.903 --> 00:04:12.784
You shouldn't have contact forms and

71
00:04:12.784 --> 00:04:16.790
things like that inside
of a Canvas context.

72
00:04:16.790 --> 00:04:19.870
It's not resolution independent out of
the box, but if you click that link,

73
00:04:19.870 --> 00:04:24.420
there's a link to an egghead tutorial,
it's about minute, 30 seconds long.

74
00:04:24.420 --> 00:04:30.439
That shows how to make it good for
high pixel density screens.

75
00:04:32.010 --> 00:04:32.910
Like I mentioned before,

76
00:04:32.910 --> 00:04:36.000
it breaks to nothing, so
you don't even get the kill me now part.

77
00:04:37.050 --> 00:04:39.310
You just have nothing there, so

78
00:04:39.310 --> 00:04:43.630
you have to kind of set breakpoints and
do all the other kinda normal stuff,

79
00:04:43.630 --> 00:04:46.300
you don't get any visual
indicators of what's going on.

80
00:04:47.910 --> 00:04:50.650
So correct tools for the job,
here are my recommendations.

81
00:04:50.650 --> 00:04:54.142
Again, opinion land, this is opinion land.

82
00:04:54.142 --> 00:04:57.226
CSS, SCSS, SASS, LESS, what have you,

83
00:04:57.226 --> 00:05:02.000
are great for small sequences and
simple interactions.

84
00:05:02.000 --> 00:05:06.590
But once you start to chain
the interactions with more than

85
00:05:06.590 --> 00:05:11.140
three things going on, I really suggest
you switch to something like GreenSock.

86
00:05:11.140 --> 00:05:15.420
And part of the reason is, let's say
you have a bunch of things going on.

87
00:05:15.420 --> 00:05:19.950
You have a guy walking down the street,
and then he hits a pothole, and

88
00:05:19.950 --> 00:05:21.630
then something else flies up.

89
00:05:21.630 --> 00:05:26.710
And somebody comes along and
says, it's okay, but I don't like

90
00:05:26.710 --> 00:05:31.370
that first part, where this thing happens,
can you change the timing of that?

91
00:05:31.370 --> 00:05:32.010
You have to go and

92
00:05:32.010 --> 00:05:36.980
change all of the subsequent timing of
everything that happened to him and

93
00:05:36.980 --> 00:05:41.170
everything that happened around him,
anything that is affected by him.

94
00:05:41.170 --> 00:05:45.284
So once you get to these kind
of more sequenced things,

95
00:05:45.284 --> 00:05:47.970
JavaScript is much more powerful.

96
00:05:47.970 --> 00:05:51.400
And you'll see some of that when we
talk about timeline in a minute.

97
00:05:51.400 --> 00:05:54.340
So it's great for sequencing and
complex movement.

98
00:05:54.340 --> 00:05:57.360
It's really great for
cross-browser consistency.

99
00:05:57.360 --> 00:06:02.205
If you're not super excited about making
all of those weird hacks that you

100
00:06:02.205 --> 00:06:06.893
saw about the Safari heart pop, and
that's just like a heart popping,

101
00:06:06.893 --> 00:06:11.230
that's [LAUGH] one tiny thing,
that's a really good reason.

102
00:06:11.230 --> 00:06:15.490
There's all sorts of weird browser things
that you have to kinda compensate for

103
00:06:15.490 --> 00:06:20.010
when you're working with CSS,
that GreenSock just takes care of for you.

104
00:06:20.010 --> 00:06:26.202
They've been working on GreenSock and
TweenMax forever, so they've really

105
00:06:26.202 --> 00:06:32.510
fine-tuned things that even the spec has
a kinda strange way of interpreting.

106
00:06:34.380 --> 00:06:36.370
One last thing I'll say about this.

107
00:06:36.370 --> 00:06:39.890
CSS and SCSS, remember when we
talked about the cubic beziers?

108
00:06:39.890 --> 00:06:43.375
Let me jump out of here for just a second.

109
00:06:43.375 --> 00:06:48.318
So if I go to cubicbezier.com,
here are the kinda things that were, and

110
00:06:48.318 --> 00:06:52.706
this is made by a friend of mine,
Lea Verou, she's brilliant.

111
00:06:52.706 --> 00:06:56.700
So you can kinda play around, and
you can build your own bezier curve.

112
00:06:56.700 --> 00:07:00.660
So these are all easing curves that
you can make and you can try them.

113
00:07:00.660 --> 00:07:03.128
Should we have a race,
who's gonna win, wanna guess?

114
00:07:05.902 --> 00:07:08.740
&gt;&gt; Sarah Drasner: They're
always gonna tie!

115
00:07:08.740 --> 00:07:11.690
It's always gonna happen for
the same amount of time.

116
00:07:11.690 --> 00:07:15.011
It'll look like one of them's going
faster than the other one, but

117
00:07:15.011 --> 00:07:17.117
they're always gonna be the same amount.

118
00:07:17.117 --> 00:07:20.240
And then we have
GreenSock Ease Visualizer.

119
00:07:21.470 --> 00:07:24.350
So those cubic beziers,
they have two handles, right?

120
00:07:26.120 --> 00:07:29.690
Check this out, what?

121
00:07:31.270 --> 00:07:37.310
You can get a realistic bounce just by
giving it an ease, which is really cool.

122
00:07:37.310 --> 00:07:41.300
That means I'm not doing, like in CSS,
I'd have to go here, go here, go here,

123
00:07:41.300 --> 00:07:45.070
go here, go here, go here, go here,
over, and over, and over again.

124
00:07:45.070 --> 00:07:49.330
With GreenSock, I can basically
say that I want it to bounce.

125
00:07:49.330 --> 00:07:54.178
I can even adjust
the configuration of the thing and

126
00:07:54.178 --> 00:07:59.148
change the way that that back looks or
like elastic.

127
00:07:59.148 --> 00:08:06.554
I can make it like, make it really bouncy,
make it less bouncy, make it super bouncy!

128
00:08:06.554 --> 00:08:10.510
And they show you a bunch
of different ways.

129
00:08:10.510 --> 00:08:13.748
There's a clock, whoa, there's boxes.

130
00:08:13.748 --> 00:08:15.960
It's a race!

131
00:08:15.960 --> 00:08:18.421
No, they're all going to
end up at the same time.

132
00:08:18.421 --> 00:08:21.600
[LAUGH] So
you can kind of compare and contrast.

133
00:08:21.600 --> 00:08:25.830
They even have a custom one,
where you can kind of create your own.

134
00:08:25.830 --> 00:08:27.100
This one needs a plugin, though,

135
00:08:27.100 --> 00:08:30.240
you actually have to get a plugin
in order to work with this one.

136
00:08:31.890 --> 00:08:35.433
Cool,
&gt;&gt; Sarah Drasner: So

137
00:08:35.433 --> 00:08:39.940
that's pretty nice, that's pretty great.

138
00:08:39.940 --> 00:08:44.150
React Spring, React-Motion, there's
all sorts of Spring kind of libraries.

139
00:08:44.150 --> 00:08:45.210
Those are really great for

140
00:08:45.210 --> 00:08:47.572
single movements that you'd
like to look realistic.

141
00:08:47.572 --> 00:08:51.040
There are actually really
beautiful easing curves.

142
00:08:51.040 --> 00:08:55.700
But it's really for
sending one thing somewhere, not for

143
00:08:55.700 --> 00:08:57.470
a bunch of sequenced movements.

144
00:08:57.470 --> 00:09:02.590
So if you wanna do a realistic touch
base movement that's interruptible,

145
00:09:02.590 --> 00:09:05.810
like if you have chat heads you're
dragging around the screen,

146
00:09:05.810 --> 00:09:09.050
that has interruptible motion,
so that's really nice.

147
00:09:09.050 --> 00:09:13.090
But it won't do stuff like
this person walks over here,

148
00:09:13.090 --> 00:09:15.100
then this person goes over here.

149
00:09:15.100 --> 00:09:19.490
I have a whole lengthy reason for
why that's not suitable for that if you're

150
00:09:19.490 --> 00:09:24.540
interested in digging in some more of
that, but we'll keep going for now.

151
00:09:24.540 --> 00:09:26.140
People ask me about Snap.svg.

152
00:09:26.140 --> 00:09:31.490
Snap.svg isn't really an animation
library, it's jQuery for SVG.

153
00:09:31.490 --> 00:09:35.260
And in fact,
if you look at the examples on the site,

154
00:09:35.260 --> 00:09:40.010
there's beautiful animation examples,
they're really done with CSS animation.

155
00:09:40.010 --> 00:09:44.701
And if you ask Dmitri Baranovski
what to use for

156
00:09:44.701 --> 00:09:49.036
animation in SVG, he says use GreenSock.

157
00:09:49.036 --> 00:09:52.698
I have a text message from him
that's like, just use GreenSock.

158
00:09:52.698 --> 00:09:57.296
Anime.JS is a lot like GSAP,
and it's fully open source.

159
00:09:57.296 --> 00:10:00.960
GreenSock is not fully open source,
the base of it is fully open source.

160
00:10:00.960 --> 00:10:05.020
Although the part of
Anime.JS that's covered

161
00:10:05.020 --> 00:10:08.520
is the same thing that's in the open
source version of GreenSock.

162
00:10:08.520 --> 00:10:11.384
It's just that GreenSock has
a bunch of other plugins.

163
00:10:11.384 --> 00:10:14.903
Anime.JS and
GreenSock work the same under the hood,

164
00:10:14.903 --> 00:10:18.000
they both do request animation frame.

165
00:10:18.000 --> 00:10:23.600
So at that level, it's basically
which surface API fits you best.

166
00:10:23.600 --> 00:10:27.836
And if you need to use any of the plugins,
then obviously, GreenSock.

167
00:10:27.836 --> 00:10:30.760
Web Animations API looks great.

168
00:10:30.760 --> 00:10:33.630
I said we're still waiting on support,
but truthfully,

169
00:10:33.630 --> 00:10:36.520
the support has been deprioritized.

170
00:10:36.520 --> 00:10:41.338
So I wouldn't even say that it is worth
it to learn The Web Animations API

171
00:10:41.338 --> 00:10:46.590
until the support gets reprioritized
into something that they care about.

172
00:10:46.590 --> 00:10:50.030
Velocity is similar to GSAP,
but it has less bells and

173
00:10:50.030 --> 00:10:53.310
whistles, and
last I checked was not as performant.

174
00:10:53.310 --> 00:10:58.672
But run your own tests, for sure, check it
out yourself cuz it's been a long time.

175
00:10:58.672 --> 00:11:04.466
Mo.js was one of my favorites, and I have
a whole deck that is available to you,

176
00:11:04.466 --> 00:11:07.078
just full of crazy Mo.js samples.

177
00:11:07.078 --> 00:11:11.471
But he said that he's no longer going to
pull it out of beta and keep working on it

178
00:11:11.471 --> 00:11:16.020
because he thinks GreenSock is what
people should be using for animation.

179
00:11:16.020 --> 00:11:18.314
You're catching a pattern, right?

180
00:11:18.314 --> 00:11:21.184
[LAUGH] A lot of other people
who worked with SVG and

181
00:11:21.184 --> 00:11:24.430
SVG animation are like,
just use GreenSock.

182
00:11:24.430 --> 00:11:29.380
They've been around since the flash days,
and it was back in ActionScript, and

183
00:11:29.380 --> 00:11:31.470
then they eventually moved to JavaScript.

184
00:11:31.470 --> 00:11:33.410
And they've been building this tool for
ten years, so

185
00:11:33.410 --> 00:11:35.910
they just have a leg up on other people.

186
00:11:35.910 --> 00:11:38.140
They also do this full-time,
there's two of them, and

187
00:11:38.140 --> 00:11:40.160
they do this full-time for a living.

188
00:11:40.160 --> 00:11:43.882
So it's kind of got more support and
more care put into it for

189
00:11:43.882 --> 00:11:48.654
a greater amount of time than a lot of
other people's open source projects.

190
00:11:48.654 --> 00:11:53.940
D3.js was built for data vis, but
you can do a lot more with it.

191
00:11:53.940 --> 00:11:57.790
Those are kind of chained transitions,
so it's very like, and

192
00:11:57.790 --> 00:12:00.340
then do this, and then do this.

193
00:12:00.340 --> 00:12:03.838
So of course, you can hook into it using.

194
00:12:03.838 --> 00:12:08.528
If you're used to D3, you can use to
kind of plug in at different levels, and

195
00:12:08.528 --> 00:12:12.080
kind of connect it to things like
scrolls and things like that.

196
00:12:12.080 --> 00:12:14.910
So D3 can be a really nice
abstraction to use too.

