WEBVTT

1
00:00:00.000 --> 00:00:04.786
&gt;&gt; Sarah Drasner: So let's do an overview
of the SVG DOM so that when you look

2
00:00:04.786 --> 00:00:09.697
inside an SVG DOM you're not like,
what is going on here?

3
00:00:09.697 --> 00:00:12.306
Actually, once I start to break
down what's in the SVG DOM,

4
00:00:12.306 --> 00:00:15.292
you're gonna be like,
that's not that bad, that's pretty good.

5
00:00:15.292 --> 00:00:18.794
So cool,
let's look at some platonic shapes.

6
00:00:18.794 --> 00:00:23.122
So if we've got a square,
a circle, a star, and some lines,

7
00:00:23.122 --> 00:00:28.554
we've got this SVG beneath it, and
let's break this down just a little bit.

8
00:00:28.554 --> 00:00:32.550
So when we're looking at the SVG,
you can really imagine, and again,

9
00:00:32.550 --> 00:00:36.691
if you were in the course yesterday,
this is an analogy I used then, too.

10
00:00:36.691 --> 00:00:41.510
SVG is kind of like looking at a piece
of graph paper that's infinite in all

11
00:00:41.510 --> 00:00:42.453
directions.

12
00:00:42.453 --> 00:00:46.493
And you can place things anywhere
on that piece of graph paper,

13
00:00:46.493 --> 00:00:49.554
you're finding things on x and
y coordinates.

14
00:00:49.554 --> 00:00:51.973
It's a little like,
have you ever played Battleship,

15
00:00:51.973 --> 00:00:54.661
who's played Battleship when
they were a kid, most people?

16
00:00:54.661 --> 00:00:58.859
It's like, A2, and then,
I sunk your battleship,

17
00:00:58.859 --> 00:01:04.533
it's kinda the same idea,
you're plotting cx, cy, radius, circle.

18
00:01:04.533 --> 00:01:07.523
So you have this piece of graph paper, and

19
00:01:07.523 --> 00:01:10.778
you also have this thing
called the viewBox.

20
00:01:10.778 --> 00:01:13.950
And that viewBox is a little window
where you're looking at that piece of

21
00:01:13.950 --> 00:01:14.577
graph paper.

22
00:01:14.577 --> 00:01:19.423
So you could feasibly draw something
out here, and not even see it because

23
00:01:19.423 --> 00:01:23.816
you're looking into that piece of
graph paper using the viewBox.

24
00:01:23.816 --> 00:01:27.159
We're gonna animate
the viewBox later today and

25
00:01:27.159 --> 00:01:29.613
do some cool stuff with that, too.

26
00:01:29.613 --> 00:01:33.645
So let's take a look at these
shapes again, differently,

27
00:01:33.645 --> 00:01:37.044
let's imagine them on that
piece of graph paper.

28
00:01:37.044 --> 00:01:41.979
So if we have the SVG here,
there are a couple of redundant things,

29
00:01:41.979 --> 00:01:43.666
like this x and this y.

30
00:01:43.666 --> 00:01:48.625
Since they start at 0 0, those are the
defaults, we actually don't need them.

31
00:01:48.625 --> 00:01:53.579
The width and height, as you saw earlier,
it's fine to have on there.

32
00:01:53.579 --> 00:01:57.086
But if we took them off,
then the SVG would scale, right,

33
00:01:57.086 --> 00:01:58.956
it would go in all directions.

34
00:01:58.956 --> 00:02:00.470
So that piece of graph paper,

35
00:02:00.470 --> 00:02:03.565
those squares of the graph paper
can get bigger and smaller.

36
00:02:03.565 --> 00:02:07.375
But all of the things are still
plotted on those coordinates,

37
00:02:07.375 --> 00:02:10.242
no matter if it gets bigger or
smaller or what.

38
00:02:10.242 --> 00:02:14.006
So here we have the width and height,
you can keep that on the SVG, or

39
00:02:14.006 --> 00:02:17.131
you can remove it if you want
to expand to its container.

40
00:02:17.131 --> 00:02:21.314
And then we have a viewBox,
that viewBox has a few different values.

41
00:02:21.314 --> 00:02:24.276
And here's a pattern
that you're gonna notice.

42
00:02:24.276 --> 00:02:28.116
A lot of things in SVG,
and even just in the DOM,

43
00:02:28.116 --> 00:02:34.274
will start with this idea of x coordinate,
y coordinate, width, height.

44
00:02:34.274 --> 00:02:37.479
That's what a lot of
getBoundingClientRect,

45
00:02:37.479 --> 00:02:42.535
if you've ever tried to work with
something really particular in the DOM.

46
00:02:42.535 --> 00:02:47.966
That's even for non-SVG things,
getBBox will return things like x,

47
00:02:47.966 --> 00:02:52.868
y, width, height, viewBoxes will do x,
y, width, height.

48
00:02:52.868 --> 00:02:57.603
And so will rectangles inside an SVG DOM,
x, y, width, and height.

49
00:02:57.603 --> 00:03:01.816
So that's what these numbers represent, 0
and 0, it's just starting from the corner,

50
00:03:01.816 --> 00:03:03.251
that's the default, right?

51
00:03:03.251 --> 00:03:05.418
And then 450 and 100,

52
00:03:05.418 --> 00:03:11.295
it's basically the same thing as
saying width is 450, height is 100.

53
00:03:11.295 --> 00:03:16.480
All right, now you can kind of understand
the pattern that we'd make for

54
00:03:16.480 --> 00:03:20.560
a rectangle, so
the rectangle starts x at 10, y at 5.

55
00:03:20.560 --> 00:03:22.734
This piece of graph paper
is just an abstraction,

56
00:03:22.734 --> 00:03:24.765
it's not really plotted
to that graph paper.

57
00:03:24.765 --> 00:03:29.415
x at 10, y at 5, the fill is white,
the stroke is black,

58
00:03:29.415 --> 00:03:31.742
and width and height is 90.

59
00:03:31.742 --> 00:03:36.561
And so then we draw a full rectangle,
well, that's a square.

60
00:03:36.561 --> 00:03:40.243
But if I wanted to make this
a rectangle and make it longer,

61
00:03:40.243 --> 00:03:42.809
I would just change the width to 180.

62
00:03:42.809 --> 00:03:47.525
And then it becomes twice as long,
pretty simple, you got it?

63
00:03:47.525 --> 00:03:48.764
Cool, all right,

64
00:03:48.764 --> 00:03:53.417
circles are my favorite because
they're even just three attributes.

65
00:03:53.417 --> 00:03:56.829
How cool is that, just three
attributes and you can draw a circle.

66
00:03:56.829 --> 00:04:00.524
You're basically drawing the points
to the middle of the circle.

67
00:04:00.524 --> 00:04:02.757
So unlike the rectangle starting here,

68
00:04:02.757 --> 00:04:05.654
we're actually plotting
the middle of the circle.

69
00:04:05.654 --> 00:04:08.917
So we're gonna say cx,
cy, and a radius, and

70
00:04:08.917 --> 00:04:12.121
then we draw a circle,
which is really cool.

71
00:04:12.121 --> 00:04:15.881
Because if you're working with D3 or
something like that, you can change

72
00:04:15.881 --> 00:04:19.710
the size of the circle and not compensate
for how big or small it's getting.

73
00:04:19.710 --> 00:04:23.122
If you're making scatter
plot kind of things,

74
00:04:23.122 --> 00:04:26.033
you can keep manipulating that radius.

75
00:04:26.033 --> 00:04:30.036
And they're still gonna stay
consistently in those spots, right,

76
00:04:30.036 --> 00:04:31.492
so that's pretty cool.

77
00:04:31.492 --> 00:04:36.185
Polygons have this kind of
array of values thing, so

78
00:04:36.185 --> 00:04:39.928
we start with x, y, x, y, x, y, x, y.

79
00:04:39.928 --> 00:04:42.959
So we're going from here, to here,
to here, to here, to here.

80
00:04:42.959 --> 00:04:47.695
And it will always kind of assume that
you're wrapping around to the last thing.

81
00:04:47.695 --> 00:04:51.316
When it says polygon,
it's gonna say, okay,

82
00:04:51.316 --> 00:04:55.940
whatever this is is the penultimate or
second to last thing.

83
00:04:55.940 --> 00:04:59.886
And then we wrap around to the first and
we close it off and we make a shape.

84
00:04:59.886 --> 00:05:01.832
So it doesn't necessarily
have to be a star.

85
00:05:01.832 --> 00:05:06.203
If I changed one of these coordinates
to something else, it would move, and

86
00:05:06.203 --> 00:05:08.198
then the star would be like [SOUND].

87
00:05:08.198 --> 00:05:11.531
And that would be fine, but it's fairly
easy to make those kind of polygon units

88
00:05:11.531 --> 00:05:12.787
from just an array of values.

89
00:05:12.787 --> 00:05:18.215
We have two lines here, and
part of the reason why we have two lines

90
00:05:18.215 --> 00:05:25.139
is that I wanted to show you that even if
it's straight or a diagonal it's the same.

91
00:05:25.139 --> 00:05:31.245
It's the same amount of attributes,
we have x1 and y1, x2 and y2.

92
00:05:31.245 --> 00:05:36.755
So we're starting from x1 here,
we go to x2 here,

93
00:05:36.755 --> 00:05:41.032
and then y1, y2, and it draws a line.

94
00:05:41.032 --> 00:05:44.510
So it's pretty much the same
pattern again and again.

95
00:05:44.510 --> 00:05:48.380
Where we're finding x and y coordinates,
finding x and y coordinates, and

96
00:05:48.380 --> 00:05:49.890
we're drawing between them.

