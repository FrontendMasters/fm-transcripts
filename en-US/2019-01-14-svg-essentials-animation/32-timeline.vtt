WEBVTT

1
00:00:00.240 --> 00:00:01.470
&gt;&gt; Sarah Drasner: Let's
move on to Timeline.

2
00:00:02.990 --> 00:00:05.230
With Timeline, we can stack tweens.

3
00:00:05.230 --> 00:00:07.870
We can set them a little before and
after one another.

4
00:00:07.870 --> 00:00:10.000
We can change their placement in time.

5
00:00:10.000 --> 00:00:11.730
We can group them into scenes.

6
00:00:11.730 --> 00:00:13.560
We can add relative labels.

7
00:00:13.560 --> 00:00:15.680
We can animate the scenes.

8
00:00:15.680 --> 00:00:17.355
You can animate your animations.

9
00:00:17.355 --> 00:00:20.661
[SOUND] How cool is that?

10
00:00:20.661 --> 00:00:24.202
You could take your animation and
be like, I need you to go faster,

11
00:00:24.202 --> 00:00:25.510
I need you to do this.

12
00:00:25.510 --> 00:00:28.140
It's totally manipulatable,
that's not a word.

13
00:00:28.140 --> 00:00:32.820
[LAUGH] But you can take
something like an animation, and

14
00:00:32.820 --> 00:00:36.680
then you can play with it,
which we're gonna do in just a minute.

15
00:00:36.680 --> 00:00:39.560
You can make the whole thing faster,
move the placement of the whole scene, and

16
00:00:39.560 --> 00:00:40.820
nest them.

17
00:00:40.820 --> 00:00:42.670
So here's what that looks like.

18
00:00:42.670 --> 00:00:47.380
Instead of using something like Tween Max
two, Tween Max two, Tween Max two,

19
00:00:47.380 --> 00:00:53.500
we're saying var tl and this can also
be anything, doesn't have to be tl, it

20
00:00:53.500 --> 00:00:57.640
could be dancing tango monkey pants, but
that would be a lot to write every time.

21
00:00:57.640 --> 00:01:03.500
So it's kind of for consistency's sake,
pretty much everybody just writes tl.

22
00:01:03.500 --> 00:01:07.550
Then if you write tl, people know that
you're probably talking about Timeline.

23
00:01:07.550 --> 00:01:11.690
There's also Timeline Light and Timeline
Max, like Tween Light and Tween Max.

24
00:01:11.690 --> 00:01:14.080
Again, Tween Max gives you looping.

25
00:01:14.080 --> 00:01:17.750
So if you need to loop something,
you use Timeline Max.

26
00:01:17.750 --> 00:01:19.545
So, here's what's happening.

27
00:01:19.545 --> 00:01:24.715
TL.2, we take something that I assume
is orange, unless its poorly named.

28
00:01:24.715 --> 00:01:27.090
[LAUGH].
And for the first one,

29
00:01:27.090 --> 00:01:30.740
it moves something across
the screen 750 pixels, right?

30
00:01:30.740 --> 00:01:32.490
Orange moves across.

31
00:01:32.490 --> 00:01:37.071
Then for green, the next one
waits until this one's done, and

32
00:01:37.071 --> 00:01:40.710
then the green moves across,
sound about right?

33
00:01:40.710 --> 00:01:42.234
Yep.

34
00:01:42.234 --> 00:01:46.100
Then we've got blue, but
we have this strange thing here.

35
00:01:46.100 --> 00:01:47.810
This is called an incrementer.

36
00:01:47.810 --> 00:01:52.270
So basically what we’re going to say is,
whenever this is done,

37
00:01:52.270 --> 00:01:55.330
then wait a second, and then have it go.

38
00:01:55.330 --> 00:01:56.210
That’s kind of cool,

39
00:01:56.210 --> 00:02:00.890
because if i change this to two seconds,
it's still gonna wait a second in between.

40
00:02:00.890 --> 00:02:04.050
So I can keep changing these numbers.

41
00:02:04.050 --> 00:02:06.020
That's something that you can't do in CSS,
right?

42
00:02:06.020 --> 00:02:08.220
I don't have to change
the rest of my code.

43
00:02:08.220 --> 00:02:13.430
It will just follow it, and
still have the same delays between those,

44
00:02:13.430 --> 00:02:15.590
so this is plus one.

45
00:02:15.590 --> 00:02:19.101
Mostly, what you're gonna
do though is minus one, or

46
00:02:19.101 --> 00:02:23.380
minus 0.5, because when you're
working with animation in real life,

47
00:02:23.380 --> 00:02:26.220
if you look at people moving in real life.

48
00:02:26.220 --> 00:02:30.310
I'm gonna make some people mad at me.

49
00:02:30.310 --> 00:02:34.320
So I'm walking and I pick something up.

50
00:02:34.320 --> 00:02:38.940
What I don't do is walk, stop, and

51
00:02:38.940 --> 00:02:41.630
then pick something up,
then I would look like Mark Zuckerberg.

52
00:02:41.630 --> 00:02:46.520
Sorry that was rude, but
that would be kind of robotic, right?

53
00:02:46.520 --> 00:02:52.080
I would probably walk, and then before I'm
done walking, start picking up my glass.

54
00:02:52.080 --> 00:02:56.350
That's a little bit more natural,
and human, and stuff.

55
00:02:56.350 --> 00:03:02.330
And that's often why some animations look
a little stiff, is because they're just

56
00:03:02.330 --> 00:03:05.750
doing one thing, and then doing another
thing, and then doing another thing.

57
00:03:05.750 --> 00:03:07.970
Really, you want overlapping motion.

58
00:03:07.970 --> 00:03:11.610
I'm gonna walk, and
then sit in my chair in one movement.

59
00:03:11.610 --> 00:03:14.980
I'm not gonna walk, and

60
00:03:14.980 --> 00:03:17.875
then sit in my chair, you'd be like,
what is wrong with her.

61
00:03:17.875 --> 00:03:21.750
[LAUGH] You can also do
something like this,

62
00:03:21.750 --> 00:03:24.180
where you say this, go to two seconds in.

63
00:03:24.180 --> 00:03:25.910
This would go to literally two seconds in.

64
00:03:25.910 --> 00:03:28.830
So this has to be a string.

65
00:03:28.830 --> 00:03:30.830
This can be either a string or a number.

66
00:03:30.830 --> 00:03:32.700
I almost never use this.

67
00:03:32.700 --> 00:03:34.930
It is very, very not good.

68
00:03:34.930 --> 00:03:38.110
And the reason why is it's very brittle.

69
00:03:38.110 --> 00:03:41.040
The whole reason that we're using
this timeline is to have things

70
00:03:41.040 --> 00:03:43.030
flow seamlessly together.

71
00:03:43.030 --> 00:03:46.750
If I change this timing to two,
this thing breaks.

72
00:03:46.750 --> 00:03:52.300
And if I use that all over the place,
my animation is gonna break all the time.

73
00:03:52.300 --> 00:03:53.960
So I don't suggest using it.

74
00:03:53.960 --> 00:03:56.300
The only time I've ever used this, and

75
00:03:56.300 --> 00:04:00.100
it's come in really handy, is if I'm
matching something up with music.

76
00:04:00.100 --> 00:04:02.350
So if I need something to boom,

77
00:04:02.350 --> 00:04:07.270
absolutely always happen on a certain
beat, that can be really great.

78
00:04:07.270 --> 00:04:11.130
And it's like 13 seconds in,
everything goes boom!

79
00:04:11.130 --> 00:04:12.180
You know, that kind of thing.

80
00:04:13.530 --> 00:04:16.370
Then, we have this cool
thing called a label.

81
00:04:16.370 --> 00:04:18.090
I now use labels for everything.

82
00:04:18.090 --> 00:04:21.550
I don't actually even do it this way,
I just add labels.

83
00:04:21.550 --> 00:04:26.420
You can even see how old my pens are
versus how new, like if it's a newer pen,

84
00:04:26.420 --> 00:04:29.880
everything's done with labels, and
if it's an older pen, it's not.

85
00:04:29.880 --> 00:04:31.160
You don't have to work that way, but

86
00:04:31.160 --> 00:04:36.910
what I like about the labels is it helps
me organize things off of one given point.

87
00:04:36.910 --> 00:04:39.220
So, I'm hanging everything
off of a certain point.

88
00:04:39.220 --> 00:04:44.800
So, I add this label and then I say,
okay, something happens off of new label.

89
00:04:44.800 --> 00:04:48.480
Then something happens off
of new label plus one.

90
00:04:48.480 --> 00:04:52.530
Something happens off of new
label plus three or four.

91
00:04:52.530 --> 00:04:54.490
And I can add as many labels as I want.

92
00:04:54.490 --> 00:04:57.492
So I could say, okay, the first label
start, then the next label is like, boom.

93
00:04:57.492 --> 00:05:03.520
Then the next label is like,
walk across the street.

94
00:05:03.520 --> 00:05:07.100
Cuz maybe like, at walk across the street,
a bunch of things happen.

95
00:05:07.100 --> 00:05:11.630
The person starts moving,
a dog starts barking, a car stops.

96
00:05:11.630 --> 00:05:17.950
It helps organize specific
points in time on your timeline.

97
00:05:17.950 --> 00:05:20.660
So it can be really, really powerful.

98
00:05:20.660 --> 00:05:23.130
And I'm gonna show you a little
bit why it's powerful,

99
00:05:23.130 --> 00:05:25.300
when we move into the live coding.

100
00:05:26.700 --> 00:05:28.230
So here is a really simple timeline.

101
00:05:28.230 --> 00:05:30.440
We have var tl new timeline max,

102
00:05:30.440 --> 00:05:35.700
or const, or whatever and then you
say two, and then here's the element.

103
00:05:35.700 --> 00:05:38.040
Three seconds is the duration.

104
00:05:38.040 --> 00:05:39.310
Fill changes to white.

105
00:05:39.310 --> 00:05:40.760
Opacity is 0.3.

106
00:05:40.760 --> 00:05:45.244
I usually organize my code to
have the eases always come last.

107
00:05:45.244 --> 00:05:47.944
You don't necessarily have
to do it that way, but

108
00:05:47.944 --> 00:05:50.340
then I always know where to look for them.

109
00:05:50.340 --> 00:05:54.520
And then here's another one, so
this one goes, and then this one follows.

110
00:05:56.190 --> 00:06:00.048
Now here's this,
that kind of idea, but nested,

111
00:06:00.048 --> 00:06:02.667
and this is how I always will work.

112
00:06:02.667 --> 00:06:06.541
Because when I nest timelines,
I can create a master timeline and

113
00:06:06.541 --> 00:06:10.850
orchestrate many things, and
kind of organize my code a little better.

114
00:06:10.850 --> 00:06:16.630
So as things get longer and longer,
you don't wanna peel through this long,

115
00:06:16.630 --> 00:06:20.050
long thing and find something.

116
00:06:20.050 --> 00:06:23.720
You kind of take a bunch of movement,
it all works together.

117
00:06:23.720 --> 00:06:28.690
That's in a function, that's like scene
one, then scene two, then scene three, and

118
00:06:28.690 --> 00:06:30.160
you can kind of keep going.

119
00:06:30.160 --> 00:06:34.080
And then if I need to find
something like paint panda,

120
00:06:34.080 --> 00:06:37.520
that's in the paint panda section, and
I can go just directly to there, and

121
00:06:37.520 --> 00:06:41.230
I don't have to kind of surf
through my code and find stuff.

122
00:06:41.230 --> 00:06:45.500
So I'll set the properties
outside of the function.

123
00:06:45.500 --> 00:06:49.830
So these are things that are set
outside of that timeline, so

124
00:06:49.830 --> 00:06:52.240
that it happens to all the elements.

125
00:06:53.510 --> 00:06:55.390
Here's the first scene.

126
00:06:55.390 --> 00:06:57.460
Function sceneOne.

127
00:06:57.460 --> 00:06:59.100
Var tl then timeline.

128
00:06:59.100 --> 00:07:01.070
A bunch of stuff happens.

129
00:07:01.070 --> 00:07:04.070
But you have to return the tl at the end.

130
00:07:04.070 --> 00:07:07.760
I think that's probably the biggest
workshop mistake I see again and again.

131
00:07:07.760 --> 00:07:09.161
It is like, why isn't it working?

132
00:07:09.161 --> 00:07:12.330
It's because you didn't
return the tl at the end.

133
00:07:12.330 --> 00:07:14.420
Then you can create a master timeline, and

134
00:07:14.420 --> 00:07:19.940
you can add scene one, then add scene two,
add scene three, and so on and so forth.

135
00:07:19.940 --> 00:07:22.750
So if you're just moving
a couple things around,

136
00:07:22.750 --> 00:07:24.220
you don't need to do something like this.

137
00:07:24.220 --> 00:07:27.460
But as you make longer,
more complicated things,

138
00:07:27.460 --> 00:07:30.760
this kind of structure
comes in really handy.

139
00:07:32.070 --> 00:07:37.030
Here's another thing, I'm actually
adding a label as I add that scene.

140
00:07:37.030 --> 00:07:41.280
So I'm adding that scene,
and I say label on master,

141
00:07:41.280 --> 00:07:46.310
what that allows me to do is
seek to that point in time.

142
00:07:46.310 --> 00:07:50.250
So I have a memory of a gold fish,
like if I'm watching an animation, and

143
00:07:50.250 --> 00:07:54.860
it's really long, and I'm trying to
like change the last thing that happens.

144
00:07:54.860 --> 00:07:59.490
Let's say that that person is
kicking a ball, right at the end,

145
00:07:59.490 --> 00:08:04.010
if I watched them tumble down the street,
pick up some grass, and

146
00:08:04.010 --> 00:08:07.320
pet a dog, and then kick the ball,
I'm like, wait.

147
00:08:07.320 --> 00:08:09.060
What was I changing?

148
00:08:09.060 --> 00:08:13.990
I just wanted to focus on that one kicking
movement, but by the time I've watched

149
00:08:13.990 --> 00:08:20.070
that whole animation go down,
I forget what tiny thing I was adjusting.

150
00:08:20.070 --> 00:08:25.440
So I can find my way to just the point
in time where they're kicking the ball,

151
00:08:25.440 --> 00:08:28.070
and not have to watch all the rest of it.

152
00:08:28.070 --> 00:08:31.840
So they all of these kinda cool methods
that you can use, that speed up

153
00:08:31.840 --> 00:08:37.590
development and help you make these
longer, more complex systems, yeah.

154
00:08:37.590 --> 00:08:40.050
&gt;&gt; Speaker 2: Can we set
properties of multiple items or

155
00:08:40.050 --> 00:08:41.440
elements in the first line?

156
00:08:41.440 --> 00:08:42.513
&gt;&gt; Sarah Drasner: Totally can.

157
00:08:42.513 --> 00:08:45.440
This el is the same thing
as that query selector, so

158
00:08:45.440 --> 00:08:49.593
if you wanted to put in those quotation,
grab this Id, grab this class,

159
00:08:49.593 --> 00:08:53.294
grab these groups of things,
you could do that all in one place.

160
00:08:53.294 --> 00:08:54.197
Great question.

161
00:08:54.197 --> 00:08:55.680
Any other questions before we keep going?

162
00:08:58.040 --> 00:09:00.010
&gt;&gt; Sarah Drasner: Cool.

163
00:09:00.010 --> 00:09:04.810
So this pen kind of shows some of
the cool things about Timeline.

164
00:09:04.810 --> 00:09:06.660
I'm gonna restart it.

165
00:09:06.660 --> 00:09:10.160
So here's the animation, there's
a bloopy bit that happens in the middle,

166
00:09:10.160 --> 00:09:13.750
and then a few other things that happen,
and then the bloopy bit happens again.

167
00:09:13.750 --> 00:09:15.880
That's the technical term, bloopy bit.

168
00:09:15.880 --> 00:09:19.630
So the current position on GSAP timeline,
I actually wrap it in a function, and

169
00:09:19.630 --> 00:09:21.760
use it a couple of times.

170
00:09:21.760 --> 00:09:23.700
Reusing that animation.

171
00:09:23.700 --> 00:09:25.460
Then this part happens.

172
00:09:26.720 --> 00:09:29.090
And that goes to that
part in the timeline.

173
00:09:31.612 --> 00:09:32.730
&gt;&gt; Sarah Drasner: Then this part happens,

174
00:09:32.730 --> 00:09:35.183
and I probably don't need to narrate it,
you can see.

175
00:09:35.183 --> 00:09:42.869
[LAUGH]
&gt;&gt; Sarah Drasner: So,

176
00:09:42.869 --> 00:09:47.630
what would happen if I wanted to
switch the timing of these animations.

177
00:09:47.630 --> 00:09:50.017
I could literally just change
two lines of code, and

178
00:09:50.017 --> 00:09:51.598
it runs in a different direction.

179
00:09:54.365 --> 00:09:58.104
&gt;&gt; Sarah Drasner: Or if I wanna make
the whole thing faster, I make,

180
00:09:58.104 --> 00:10:01.410
in one line of code, change the timescale.

181
00:10:01.410 --> 00:10:05.070
And the whole thing happens
at almost twice the speed.

182
00:10:06.220 --> 00:10:09.850
So, if somebody comes up to you, you're
working on a project, and you're making

183
00:10:09.850 --> 00:10:14.340
this long, complex CSS animation and
they're like, but your PM is like.

184
00:10:14.340 --> 00:10:17.420
That's good, but
it just needs to be a tiny bit faster.

185
00:10:18.680 --> 00:10:20.520
Then you're like, God, and

186
00:10:20.520 --> 00:10:25.580
you have to spend the entire day adjusting
all the timing through your entire thing.

187
00:10:25.580 --> 00:10:29.360
And likewise, if you're working in
GreenSock, and your PM comes along and

188
00:10:29.360 --> 00:10:33.150
says, can you make this
whole animation faster?

189
00:10:33.150 --> 00:10:36.120
Then you go, yeah,
that's gonna take me a really long time.

190
00:10:36.120 --> 00:10:39.200
I'm gonna have to take the afternoon and
really work on this, and

191
00:10:39.200 --> 00:10:45.665
then you go out for a nice long lunch, and
you get a glass of wine, and take a bath.

192
00:10:45.665 --> 00:10:46.210
[LAUGH] Right?

193
00:10:46.210 --> 00:10:48.842
No, don't do that, but maybe.

194
00:10:51.050 --> 00:10:56.560
&gt;&gt; Sarah Drasner: All right, so another
thing, I mentioned that TweenMax.set.

195
00:10:56.560 --> 00:10:58.700
But sometimes you get
this momentary display.

196
00:10:58.700 --> 00:11:01.530
Like, let's say you take
a bunch of elements and

197
00:11:01.530 --> 00:11:06.540
you say, from off the screen,
or from opacity zero.

198
00:11:06.540 --> 00:11:11.990
Well, there's going to be this micro split
second before all the java script loads,

199
00:11:11.990 --> 00:11:15.000
where you see all those
elements on the page, and then

200
00:11:15.000 --> 00:11:19.650
there's a couple pens where I forgot to do
that in these demos, and you'll see them.

201
00:11:19.650 --> 00:11:23.260
You'll be like, there it was,
it just looks really messy.

202
00:11:23.260 --> 00:11:26.800
You see all the elements,
and then they disappear, and

203
00:11:26.800 --> 00:11:29.630
then you can start, the animation starts.

204
00:11:29.630 --> 00:11:35.320
The way to keep that from happening is
that you set visibility: hidden in CSS,

205
00:11:35.320 --> 00:11:36.480
for those elements.

206
00:11:36.480 --> 00:11:40.990
And then you set it back to
visibility: visible in JavaScript, so

207
00:11:40.990 --> 00:11:44.420
as soon as the JavaScript loads,
it sets it back to normal.

208
00:11:44.420 --> 00:11:48.820
But in the middle of that time, the CSS
will always load before the JavaScript

209
00:11:48.820 --> 00:11:51.420
does, if you're loading things correctly.

210
00:11:51.420 --> 00:11:53.990
So you kind of set it in CSS and
set it back.

211
00:11:56.150 --> 00:11:59.950
You can also do things like
percentage based transforms on SVG.

212
00:11:59.950 --> 00:12:06.424
No matter how big these are,
it's always 100%, that's awesome.

213
00:12:06.424 --> 00:12:10.708
[SOUND] And then,
you don't actually really need to do that,

214
00:12:10.708 --> 00:12:16.255
because you can have something that's
fully responsive in every direction.

215
00:12:16.255 --> 00:12:19.370
So I'm gonna let the animation play,
and then I can replay it.

216
00:12:19.370 --> 00:12:22.520
And I can randomly resize this SVG.

217
00:12:22.520 --> 00:12:27.620
But since we're in the middle of the SVG
dom, we're moving things not really.

218
00:12:27.620 --> 00:12:31.700
Even though it's saying it's done in
pixels, it's not really done in pixels.

219
00:12:31.700 --> 00:12:33.910
It's done in the SVG coordinate system.

220
00:12:33.910 --> 00:12:37.120
So you saw that piece of graph
paper shrinking and getting bigger?

221
00:12:37.120 --> 00:12:41.990
It's totally stable,
no matter how big the SVG is.

222
00:12:41.990 --> 00:12:44.447
So you don't really have to
worry about all that stuff.

