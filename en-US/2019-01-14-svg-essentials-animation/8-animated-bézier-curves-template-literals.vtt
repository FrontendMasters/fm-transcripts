WEBVTT

1
00:00:00.410 --> 00:00:03.400
&gt;&gt; Sarah Drasner: There's also
this animated Bezier with D3.

2
00:00:03.400 --> 00:00:07.900
So later on today I'm gonna talk about
the limitations of cubic Bezier.

3
00:00:07.900 --> 00:00:10.590
And one of these
limitations of cubic Bezier

4
00:00:10.590 --> 00:00:12.980
is that it just has two control points.

5
00:00:12.980 --> 00:00:16.670
We saw that we have this kind of
Q-like thing where we just have

6
00:00:16.670 --> 00:00:19.710
the one control point, and
this is how that's being made.

7
00:00:19.710 --> 00:00:23.230
This is the, see,
it's got two control points, but

8
00:00:23.230 --> 00:00:27.760
what if you have an infinite
amount of control points?

9
00:00:27.760 --> 00:00:30.940
You could do so much stuff,
and it would be rad.

10
00:00:32.130 --> 00:00:36.440
So basically you can play around with this
and kind of understand how these Beziers

11
00:00:36.440 --> 00:00:40.340
end up, how the computer
understands them to end up here.

12
00:00:40.340 --> 00:00:43.330
So basically my favorite
thing is combining

13
00:00:43.330 --> 00:00:45.800
template literals with SVG path points.

14
00:00:45.800 --> 00:00:49.510
How many people work with ES6 and
know what template literals are?

15
00:00:49.510 --> 00:00:51.060
Okay, so most people.

16
00:00:51.060 --> 00:00:55.360
Rather than doing string concatenation
where we're putting quotes around things

17
00:00:55.360 --> 00:00:58.450
and adding,
we're basically saying the variable and

18
00:00:58.450 --> 00:01:02.050
then we're gonna plus extra thing.

19
00:01:02.050 --> 00:01:05.220
And then add the variable again.

20
00:01:05.220 --> 00:01:08.280
With template literals we
can use back ticks and

21
00:01:08.280 --> 00:01:11.240
we're gonna have a dollar sign and
two curly braces.

22
00:01:11.240 --> 00:01:13.350
And then we put the variable
directly in there.

23
00:01:13.350 --> 00:01:17.310
So you can see already,
when you're working with path points and

24
00:01:17.310 --> 00:01:21.320
you're looking at these path points,
how valuable that might be.

25
00:01:21.320 --> 00:01:23.110
Let's say we're doing
something with that Q.

26
00:01:23.110 --> 00:01:28.060
What if we wanted to start it from a kind
of static place, end with a static place,

27
00:01:28.060 --> 00:01:31.690
and then bounce around some middle thing?

28
00:01:31.690 --> 00:01:35.140
You can kinda already see where
I'm going with that, right?

29
00:01:35.140 --> 00:01:37.690
It's really, really cool.

30
00:01:37.690 --> 00:01:41.822
So if we wanna make something like
a slinky we can start off with an M,

31
00:01:41.822 --> 00:01:46.838
with the x coordinate, y coordinate, and
an L, x coordinate with y coordinate.

32
00:01:48.398 --> 00:01:51.242
&gt;&gt; Sarah Drasner: And
then we can change that to using a Q, and

33
00:01:51.242 --> 00:01:53.930
basically change it in any direction.

34
00:01:53.930 --> 00:01:58.420
If I wanted to simplify it further I could
use a T, remember how it was reflected?

35
00:01:58.420 --> 00:02:02.930
But I didn't know if I was gonna
kinda maybe change one side of it and

36
00:02:02.930 --> 00:02:03.800
leave the other side.

37
00:02:03.800 --> 00:02:06.710
I wanted to leave it
a little bit more flexible.

38
00:02:06.710 --> 00:02:11.355
So there's all sorts of things that you
can do with creating generative effects

39
00:02:11.355 --> 00:02:13.932
with template literals and SVG path point.

40
00:02:13.932 --> 00:02:19.052
Okay, so we can combine those
slinky effects with a ball of yarn.

41
00:02:19.052 --> 00:02:23.580
And this was when yarn was released,
I made this pen to kind of celebrate.

42
00:02:23.580 --> 00:02:26.520
My friend Jamie worked on that.

43
00:02:26.520 --> 00:02:30.700
You can see how you could use that as
just one small effect in a bigger pen.

