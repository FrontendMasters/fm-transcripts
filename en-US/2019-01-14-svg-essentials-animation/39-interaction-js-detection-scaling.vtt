WEBVTT

1
00:00:00.080 --> 00:00:03.030
&gt;&gt; Sarah Drasner: So we can also
just add tiny bits of interaction.

2
00:00:03.030 --> 00:00:05.530
We talked a little bit about
how we don't think in booleans.

3
00:00:05.530 --> 00:00:08.220
Maybe we can help show
the difference between states, and

4
00:00:08.220 --> 00:00:10.680
it can be something small,
like the change of an icon.

5
00:00:12.480 --> 00:00:17.410
Maybe we just change the search button and
save some space in our UI.

6
00:00:17.410 --> 00:00:20.730
And you know how this is done,
this is just a circle and a line, and

7
00:00:20.730 --> 00:00:24.360
I'm moving those attributes
in order to create that.

8
00:00:24.360 --> 00:00:28.660
So I'm using this to set
the SVG DOM nodes, and

9
00:00:28.660 --> 00:00:32.940
it's also lining up with
that input in that place.

10
00:00:32.940 --> 00:00:36.430
So I put the focus into the input,
and I change the opacity.

11
00:00:38.430 --> 00:00:41.980
We can also use JS for
CSS animation detection.

12
00:00:41.980 --> 00:00:47.590
So if you do wanna use CSS, you can
figure out when an animation starts,

13
00:00:47.590 --> 00:00:53.240
when an iteration fires, and
it will keep logging this little guy.

14
00:00:53.240 --> 00:00:54.850
I don't know what this guy is.

15
00:00:54.850 --> 00:00:59.372
I thought it was an owl but the GreenSock
people thought it was a fish but,

16
00:00:59.372 --> 00:01:00.350
I don't know.

17
00:01:00.350 --> 00:01:03.186
I make these things late at night,
[LAUGH].

18
00:01:03.186 --> 00:01:04.951
And in animation has completed.

19
00:01:04.951 --> 00:01:08.887
So this is I'm just hooking into
native events here, animationstart,

20
00:01:08.887 --> 00:01:11.750
animationiteration, and animationend.

21
00:01:11.750 --> 00:01:17.780
And here's the EventListeners,
it's not super complicated to work with.

22
00:01:17.780 --> 00:01:22.441
Another thing you can do is if you're
working with a giant system across a bunch

23
00:01:22.441 --> 00:01:26.608
of different things, and
you want to have composable animations, so

24
00:01:26.608 --> 00:01:28.392
different composable bits.

25
00:01:28.392 --> 00:01:31.570
You can create an animation and
have similar timings and

26
00:01:31.570 --> 00:01:34.076
easing structure across the whole system.

27
00:01:34.076 --> 00:01:38.343
So that people aren't re-communicating
animation all the time.

28
00:01:38.343 --> 00:01:41.724
One thing is storing eases so
that everybody's using the same eases and

29
00:01:41.724 --> 00:01:43.536
people aren't inventing new eases.

30
00:01:43.536 --> 00:01:48.090
Remember we showed that one thing
had sign, sign, sign and a pop.

31
00:01:48.090 --> 00:01:50.270
If I built out a new animation for

32
00:01:50.270 --> 00:01:53.340
that site I would use sign,
sign, sign, and a pop.

33
00:01:53.340 --> 00:01:57.140
I would use the same kind
of easing structures.

34
00:01:57.140 --> 00:02:03.210
The other thing I'm doing here is I have
a few timing values like H1, H2, H3.

35
00:02:03.210 --> 00:02:06.305
So when you go to create text on a site,

36
00:02:06.305 --> 00:02:11.250
you're not rethinking about PE tags and
what that size is.

37
00:02:11.250 --> 00:02:13.002
You're not rethinking about H1s.

38
00:02:13.002 --> 00:02:15.786
They're always gonna be
the same across the whole site.

39
00:02:15.786 --> 00:02:20.420
You can think about animations
the same way and have T1, T2, T3, T4.

40
00:02:20.420 --> 00:02:23.217
And of course the T5
is like the body copy,

41
00:02:23.217 --> 00:02:27.970
everyone uses T5 out of the gate and
just adjusts up and down from there.

42
00:02:27.970 --> 00:02:30.250
So you keep all the animations consistent.

43
00:02:30.250 --> 00:02:34.960
And then people who need an animation
in your system who aren't good at

44
00:02:34.960 --> 00:02:39.200
animations are just plugging into some
beautiful defaults that you have set up.

45
00:02:39.200 --> 00:02:41.960
You're not creating new things every time.

