WEBVTT

1
00:00:00.000 --> 00:00:03.225
&gt;&gt; Sarah Drasner: Sometimes people
talk about positioning in CSS and

2
00:00:03.225 --> 00:00:06.603
how it's kind of hard to do and
it can be kind of a drag.

3
00:00:06.603 --> 00:00:10.640
If you don't like positioning in CSS,
especially if you're making an animation

4
00:00:10.640 --> 00:00:12.813
where things are kind
of all over the place.

5
00:00:12.813 --> 00:00:18.341
And you've got so much stuff going on, SVG
might be the coolest thing that you found.

6
00:00:18.341 --> 00:00:21.843
Sometimes people are like,
Sarah's really good at CSS and

7
00:00:21.843 --> 00:00:24.092
I'm like, [SOUND] I'm better at SVG.

8
00:00:24.092 --> 00:00:28.948
It just looks like I'm good at CSS because
everything's positioned all over the place

9
00:00:28.948 --> 00:00:33.284
and that would be really hard to do with
CSS, it's really simple to do in SVG.

10
00:00:33.284 --> 00:00:35.299
So if we take something like this,

11
00:00:35.299 --> 00:00:38.360
it's just a really simple
SVG with some stars in it.

12
00:00:38.360 --> 00:00:43.891
I can go over to the CSS first,
I can take the width and height out of it.

13
00:00:43.891 --> 00:00:47.529
And then it expands to fill all of
the space, as soon as I take the width and

14
00:00:47.529 --> 00:00:50.167
height out it expands
whatever container it's in.

15
00:00:50.167 --> 00:00:53.947
So now I can make whatever width and
height I want,

16
00:00:53.947 --> 00:00:58.357
I'm gonna say 100% of
the viewport width and height.

17
00:00:58.357 --> 00:01:02.866
And then it will scale in all directions
there, right, that's amazing.

18
00:01:02.866 --> 00:01:06.947
So all of the things inside of there, all
of the stars and all of their positioning,

19
00:01:06.947 --> 00:01:08.421
stayed totally consistent.

20
00:01:08.421 --> 00:01:12.952
No matter if it was stretched out for
the whole page, whether it's stretched out

21
00:01:12.952 --> 00:01:16.295
into just getting constrained
into that one little place.

22
00:01:16.295 --> 00:01:18.544
So if you need to put
text all over the place,,

23
00:01:18.544 --> 00:01:20.693
if you need to put images
all over the place.

24
00:01:20.693 --> 00:01:24.854
Even if you need to put bitmaps,
even if you wanna put JPEGs all

25
00:01:24.854 --> 00:01:28.551
over the place it can keep
things totally consistent.

26
00:01:28.551 --> 00:01:31.314
So if you wanna do something
like a text lockup so

27
00:01:31.314 --> 00:01:34.572
you can see this responsive
text lockup by Chris Coyer.

28
00:01:34.572 --> 00:01:37.916
So it goes back and forth and
you can see how that title,

29
00:01:37.916 --> 00:01:42.218
that would be hard to do in CSS and
make is totally responsive, right.

30
00:01:42.218 --> 00:01:46.841
But with the SVG you're making it,
you put it in there, that text is living,

31
00:01:46.841 --> 00:01:49.278
it's actually a text element, right.

32
00:01:49.278 --> 00:01:52.988
So people can actually read
that text element, and

33
00:01:52.988 --> 00:01:58.698
it's still available to screen readers,
and it contracts and moves, cool.

34
00:01:58.698 --> 00:02:02.178
We can use the stability of SVG for
page transitions.

35
00:02:02.178 --> 00:02:04.134
So this is something that I made in React.

36
00:02:04.134 --> 00:02:09.534
And as you move between the pages you can
see how the element just changes shape,

37
00:02:09.534 --> 00:02:11.710
and it changes transforms, and

38
00:02:11.710 --> 00:02:15.348
all of these little pieces
stay totally consistent.

39
00:02:15.348 --> 00:02:18.338
So all of the things that
you're seeing here, I mean,

40
00:02:18.338 --> 00:02:20.362
the text is actually text and stuff.

41
00:02:20.362 --> 00:02:24.470
But all of the other pieces stayed
totally consistent across pages and

42
00:02:24.470 --> 00:02:26.075
it's responsive as well.

