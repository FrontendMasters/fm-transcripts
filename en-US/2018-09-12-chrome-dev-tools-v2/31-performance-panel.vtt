WEBVTT

1
00:00:00.000 --> 00:00:02.665
&gt;&gt; Speaker 1: For this next exercise,
what we're gonna be looking at is,

2
00:00:02.665 --> 00:00:05.032
some page JANX,
some performance stuff, all that.

3
00:00:05.032 --> 00:00:06.321
But before we get into it,

4
00:00:06.321 --> 00:00:09.083
just kind of wanna give a run
down of how this tool works.

5
00:00:09.083 --> 00:00:13.004
So, this is just a little demo I made, so
basically I'm generating a bunch of stuff,

6
00:00:13.004 --> 00:00:14.700
and you can kinda scroll through it.

7
00:00:14.700 --> 00:00:17.972
And I kind of wanna walk through the
performance panel because it's a really

8
00:00:17.972 --> 00:00:18.952
scary looking panel.

9
00:00:18.952 --> 00:00:21.794
I think a lot of people get
overwhelmed with the flame charts and

10
00:00:21.794 --> 00:00:24.637
all these things.
&gt;&gt; Speaker 1: There's just a lot going

11
00:00:24.637 --> 00:00:25.259
on with it.

12
00:00:25.259 --> 00:00:28.629
So I'm gonna open up the DevTools here,
kinda make them a little bit bigger.

13
00:00:28.629 --> 00:00:32.336
I'm gonna hide this drawer with escape,
I'm gonna go to performance.

14
00:00:32.336 --> 00:00:35.647
And then so kinda like what we've
been seeing before with network,

15
00:00:35.647 --> 00:00:38.741
you can do a recording,
you can refresh and start a recording.

16
00:00:38.741 --> 00:00:42.903
These would be if you wanna measure load
performance versus when the laps already

17
00:00:42.903 --> 00:00:44.074
loaded performance.

18
00:00:44.074 --> 00:00:47.516
You can clear one,
you can load them and you can save them.

19
00:00:47.516 --> 00:00:50.445
This is really cool because if you wanna
get help on something [LAUGH] like from

20
00:00:50.445 --> 00:00:51.239
a DevTools expert.

21
00:00:51.239 --> 00:00:54.563
You're like my site's really janky and
I don't know why.

22
00:00:54.563 --> 00:00:57.045
And they're gonna ask for
one of these performance exports,

23
00:00:57.045 --> 00:00:58.580
that's what they wanna see, right?

24
00:00:58.580 --> 00:01:02.300
So you do your little performance thing,
you hit export it'll save a HAR file.

25
00:01:02.300 --> 00:01:05.357
HAR, email that to whoever is
generous enough to offer you help,

26
00:01:05.357 --> 00:01:07.537
which has happened to me
a lot of times before.

27
00:01:07.537 --> 00:01:11.364
And then they'll be able to analyze it as
though they were on the site, themselves.

28
00:01:11.364 --> 00:01:14.799
So cool, so let's start one, so what I'm
gonna do is I'm just gonna hit Record, and

29
00:01:14.799 --> 00:01:17.731
then I'm gonna scroll around up and
down, and then I'm gonna hit Stop.

30
00:01:17.731 --> 00:01:21.721
And remember, when we're doing CPU
performance, we want to keep it small.

31
00:01:21.721 --> 00:01:24.127
We don't want to be doing
six second of recording.

32
00:01:24.127 --> 00:01:26.722
We really want to keep it at a second,
two at the most.

33
00:01:26.722 --> 00:01:29.017
So here's where things get scary,
I'm gonna pop this out so

34
00:01:29.017 --> 00:01:30.237
we can just kinda see them like.

35
00:01:30.237 --> 00:01:31.820
I know there's a lot going on here.

36
00:01:31.820 --> 00:01:33.939
SO a few things,
let's start at the very bottom,

37
00:01:33.939 --> 00:01:36.574
at the very bottom we kinda have
this summary screen, right?

38
00:01:36.574 --> 00:01:40.036
And the summary is like, during that
time that you took the recording,

39
00:01:40.036 --> 00:01:42.480
here's the kinda stuff I was doing, right?

40
00:01:42.480 --> 00:01:45.925
I was idling, I was doing browsery stuff,
I was painting, I was rendering or

41
00:01:45.925 --> 00:01:47.412
executing a job script, right?

42
00:01:47.412 --> 00:01:49.281
So you can kind of get these colors and

43
00:01:49.281 --> 00:01:52.309
the colors stay true all
throughout the performance page.

44
00:01:52.309 --> 00:01:56.134
And so, you can see that the majority
of what we do as we scrolling around is

45
00:01:56.134 --> 00:01:57.259
rendering, right?

46
00:01:57.259 --> 00:02:01.010
That's this particular work flow, when
you look at your own app you'll see very

47
00:02:01.010 --> 00:02:03.008
different things based on what its doing.

48
00:02:03.008 --> 00:02:06.172
But this is pretty simple,
we can kinda see so let's hide it for now.

49
00:02:06.172 --> 00:02:08.552
We kinda know what the summary is.

50
00:02:08.552 --> 00:02:12.632
The next one from the bottom up,

51
00:02:12.632 --> 00:02:20.149
you'll see if I can grab that
&gt;&gt; Speaker 1: That's weird,

52
00:02:20.149 --> 00:02:22.652
there we go [LAUGH].

53
00:02:22.652 --> 00:02:24.713
The next one that we'll see
is this memory graph, right?

54
00:02:24.713 --> 00:02:28.057
And so what this memory is
gonna be doing is it's gonna be

55
00:02:28.057 --> 00:02:32.843
showing us out of all the things that
happened, how much memory was allocated?

56
00:02:32.843 --> 00:02:34.298
And then it breaks it down by color,

57
00:02:34.298 --> 00:02:36.881
it's like well how much of this
is JavaScript memory, right?

58
00:02:36.881 --> 00:02:41.141
So if you've got big array or something
like that, how much of it is documents?

59
00:02:41.141 --> 00:02:42.852
How much of it is elements like DOM nodes?

60
00:02:42.852 --> 00:02:44.449
And how much of it is event listeners?

61
00:02:44.449 --> 00:02:46.933
We're gonna get into memory
in the next section.

62
00:02:46.933 --> 00:02:49.693
So, again, just for making things
easier for now, we're gonna hide this.

63
00:02:49.693 --> 00:02:50.753
So we've got like two panels hidden.

64
00:02:50.753 --> 00:02:54.999
So now we've got something that's a little
bit more manageable to deal with.

65
00:02:54.999 --> 00:02:57.970
I can go here and
just turn off the memory view for now.

66
00:02:57.970 --> 00:03:00.574
So kind of what we got, I'm gonna
go ahead and kinda collapse these.

67
00:03:00.574 --> 00:03:03.377
So, again, we're just at kind of
this simple screens we've got.

68
00:03:03.377 --> 00:03:05.887
Basically, if you think about it,
we've got two bars running.

69
00:03:05.887 --> 00:03:09.268
So we've got the top one,
FPS CPU NET, that's one bar, and

70
00:03:09.268 --> 00:03:11.770
everything else that's another bar.

71
00:03:11.770 --> 00:03:15.679
Both of them have x axis which is time,
and the times will always match up, right?

72
00:03:15.679 --> 00:03:18.174
So 1500 milliseconds, 1500 milliseconds.

73
00:03:18.174 --> 00:03:25.290
So in the top view is sort of your
light view your mile high view.

74
00:03:25.290 --> 00:03:28.170
The green stuff is frames per second.

75
00:03:28.170 --> 00:03:31.260
The lower the green line is,
the better, right?

76
00:03:31.260 --> 00:03:34.186
If you ever sight that its
doing absolutely nothing,

77
00:03:34.186 --> 00:03:36.340
your going to see it at all the way zero.

78
00:03:36.340 --> 00:03:40.309
As it start using a lot like as the frames
per second gets higher and higher,

79
00:03:40.309 --> 00:03:42.902
you're gonna see it kind
of coming up to the top.

80
00:03:42.902 --> 00:03:46.044
And when you see a bad example,
that's dropping frames,

81
00:03:46.044 --> 00:03:49.008
you'll start seeing a red
bar across the top of those.

82
00:03:49.008 --> 00:03:52.486
So a red across the green is bad,
higher is more, but

83
00:03:52.486 --> 00:03:57.300
it's just doing more work,
lower is better for performance.

84
00:03:57.300 --> 00:04:00.023
The second thing we're gonna
see is what the CPU was doing.

85
00:04:00.023 --> 00:04:03.481
So again, like JavaScript is
single-threaded, so this is all of

86
00:04:03.481 --> 00:04:07.950
the rendering, all of the painting, all
of the JavaScript work that's being done.

87
00:04:07.950 --> 00:04:10.172
So again we can kinda see just
like we saw in the summary,

88
00:04:10.172 --> 00:04:12.860
we've got a little bit of JavaScript,
those yellow spikes.

89
00:04:12.860 --> 00:04:15.830
Mostly we've got rendering,
we've got very little bit of painting too.

90
00:04:15.830 --> 00:04:18.646
So we can kind of just get at, again,
starting to get this high-level view.

91
00:04:18.646 --> 00:04:23.540
And then, the second panel is
all these call graphs, right?

92
00:04:23.540 --> 00:04:24.819
And we can break them
down in different ways.

93
00:04:24.819 --> 00:04:28.618
If you remember when we did the mark and
measure, we added an additional one,

94
00:04:28.618 --> 00:04:30.910
that was user interactions
got added to that.

95
00:04:30.910 --> 00:04:33.895
It's not there right now cuz we
don't have any marks and measures.

96
00:04:33.895 --> 00:04:38.480
But the things we're gonna want to
check out are like the network tab.

97
00:04:38.480 --> 00:04:41.934
So this shows over time, it's kind of like
an inline view of what network files.

98
00:04:41.934 --> 00:04:43.867
So this is very similar
to the network panel.

99
00:04:43.867 --> 00:04:47.568
But we're really gonna want to check
out what's going on on the main thread.

100
00:04:47.568 --> 00:04:49.001
That's like almost
always what I have here.

101
00:04:49.001 --> 00:04:52.024
So we'll expand the main thread and
we'll see all this stuff.

102
00:04:52.024 --> 00:04:55.219
Again, just like we've been looking at,
tall not a problem,

103
00:04:55.219 --> 00:04:57.407
there is a lot of stuff
calling each other.

104
00:04:57.407 --> 00:05:00.763
Wide is what we start with look for, and
its not necessarily a bit of a problem.

105
00:05:00.763 --> 00:05:04.739
Again, when Chrome thinks that your doing
too much stuff and your dropping frames,

106
00:05:04.739 --> 00:05:07.598
they'll start marking these
with little red boxes on them.

107
00:05:07.598 --> 00:05:10.984
So red boxes are always the way you
can tell, I definitely have a problem,

108
00:05:10.984 --> 00:05:12.085
I'm dropping frames.

109
00:05:12.085 --> 00:05:15.952
But, if you just wanted to see like when
I scroll around, it feels really slow,

110
00:05:15.952 --> 00:05:16.829
why is it so slow?

111
00:05:16.829 --> 00:05:19.614
This is the screen that we're
gonna wanna start looking at.

112
00:05:19.614 --> 00:05:23.497
We'll go into the main thread, we'll
start seeing what the widest things are,

113
00:05:23.497 --> 00:05:26.078
and we'll start investigating
why they're so bad.

114
00:05:26.078 --> 00:05:27.846
Somebody asked which
part is the CPU usage?

115
00:05:27.846 --> 00:05:29.426
That's gonna be this main.

116
00:05:29.426 --> 00:05:31.672
So the main is gonna be
all of your CPU work.

117
00:05:31.672 --> 00:05:35.013
That's gonna be responsible for
the laying out, the rendering, and

118
00:05:35.013 --> 00:05:38.078
the JavaScript stuff, so
that will be color coded inside here.

119
00:05:38.078 --> 00:05:40.396
So while we're scrolling
around on my page,

120
00:05:40.396 --> 00:05:43.629
if we wanna see the very longest
thing looks to be this, right?

121
00:05:43.629 --> 00:05:44.462
These big layout blocks.

122
00:05:44.462 --> 00:05:47.784
So again, using this same I
can zoom in with my mouse.

123
00:05:47.784 --> 00:05:50.100
You can go side to side with your mouse.

124
00:05:50.100 --> 00:05:53.579
And if you want to go up and down within
the thing, you have to hold shift.

125
00:05:53.579 --> 00:05:58.048
One thing that's cool, another little tip,
is if you click on one of these like I

126
00:05:58.048 --> 00:06:00.969
just clicked on that,
then you can use W A S D to do it.

127
00:06:00.969 --> 00:06:03.664
Which is like a like a lot
nicer than using your mouse.

128
00:06:03.664 --> 00:06:06.846
So use w to zoom in,
S to zoom out and then A and

129
00:06:06.846 --> 00:06:12.269
D to move side to side which I find a lot
nicer, but again it's all up to you.

130
00:06:12.269 --> 00:06:14.759
So we've got this big layout things,
right?

131
00:06:14.759 --> 00:06:18.326
And the layout's a little bit deceptive
because the layout is browser work.

132
00:06:18.326 --> 00:06:21.595
What we really wanna know is what
triggered that layout, right?

133
00:06:21.595 --> 00:06:25.476
We don't want to, if you have to layout
stuff, you've got to layout stuff, right?

134
00:06:25.476 --> 00:06:28.390
The only thing we can do there is
give is less stuff moving around.

135
00:06:28.390 --> 00:06:31.756
So what we really wanna see is here
in this yellow before the big layout.

136
00:06:31.756 --> 00:06:35.776
Like what did we trigger in our yellow
JavaScript code before that purple layout

137
00:06:35.776 --> 00:06:36.377
happened?

138
00:06:36.377 --> 00:06:38.613
So we can kinda start drilling in here.

139
00:06:38.613 --> 00:06:40.450
We can see some things, like we can see,

140
00:06:40.450 --> 00:06:42.570
we've got some kind of timer firing,
right?

141
00:06:42.570 --> 00:06:43.850
We could look into that.

142
00:06:43.850 --> 00:06:46.301
It looks like it's a set time out,
somewhere in our code.

143
00:06:46.301 --> 00:06:50.480
We can see these like kinda big things
here, these DOM garbage collections.

144
00:06:50.480 --> 00:06:53.235
Like something is going on That's
using a lot of memory, but

145
00:06:53.235 --> 00:06:55.405
then the browser is able
to garbage collect it.

146
00:06:55.405 --> 00:06:58.323
We’re gonna get into memory a lot
deeper later, but it's just,

147
00:06:58.323 --> 00:07:00.410
something that we can note here.

148
00:07:00.410 --> 00:07:03.461
We just got more of these timers
the set timeouts are calling

149
00:07:03.461 --> 00:07:04.689
these like init thing.

150
00:07:04.689 --> 00:07:09.075
It looks to be like the slowest stuff,
I would guess that somewhere in here,

151
00:07:09.075 --> 00:07:12.651
like we have this timer firing,
it's firing this nit thing.

152
00:07:12.651 --> 00:07:15.950
And something in that init is
causing this layout to happen.

153
00:07:15.950 --> 00:07:17.870
It's like this huge recalculate style,
right?

154
00:07:17.870 --> 00:07:20.206
So we see all these things and
we see the recalculate style.

155
00:07:20.206 --> 00:07:21.647
So what I would do, again,

156
00:07:21.647 --> 00:07:25.004
finding the last wide one appears
to me to be this init, right?

157
00:07:25.004 --> 00:07:27.324
These are all pretty wide,
pretty wide, and then this one's tiny,

158
00:07:27.324 --> 00:07:28.093
this is append child.

159
00:07:28.093 --> 00:07:32.560
So I'm gonna go into the init and
now we'll want to go back to our summary.

160
00:07:32.560 --> 00:07:35.978
Cuz when you select a box in here,
it'll bring it up in the summary.

161
00:07:35.978 --> 00:07:39.530
And if you wanna find it,
then you can just click here and

162
00:07:39.530 --> 00:07:41.049
go to the sources page.

163
00:07:41.049 --> 00:07:42.971
How are people feeling about this so far?

164
00:07:42.971 --> 00:07:45.592
I know this is on
the heavy side of things.

165
00:07:45.592 --> 00:07:48.130
We can do Q&amp;A or anything like that.

166
00:07:48.130 --> 00:07:50.693
We'll get a chance to
kind of dive in together,

167
00:07:50.693 --> 00:07:53.710
but
&gt;&gt; Speaker 1: I know,

168
00:07:53.710 --> 00:07:55.598
there's like a lot going on [LAUGH].

169
00:07:55.598 --> 00:07:57.177
And I know it's getting late but,
okay, cool.

170
00:07:57.177 --> 00:07:58.919
So basically what I'm looking for

171
00:07:58.919 --> 00:08:02.956
is like, you ran the whole profile thing,
I see that it's like a ton of purple.

172
00:08:02.956 --> 00:08:05.235
I see these big recalculate styles, and

173
00:08:05.235 --> 00:08:08.326
I wanna know what is it
that's causing those, right?

174
00:08:08.326 --> 00:08:09.494
So I kinda go in here, and

175
00:08:09.494 --> 00:08:12.735
I find what we're executing in our
code before that gets triggered.

176
00:08:12.735 --> 00:08:16.028
So I'll click here and
it'll take me into the sources page.

177
00:08:16.028 --> 00:08:19.435
This really cool thing happens though,
when you run a performance audit,

178
00:08:19.435 --> 00:08:21.826
it keeps track of how long
every function call took.

179
00:08:21.826 --> 00:08:25.645
And it just puts them there for
you in the left-side bar just for free,

180
00:08:25.645 --> 00:08:26.700
it just does that.

181
00:08:26.700 --> 00:08:30.072
So what's really cool about that
is you can start seeing a color,

182
00:08:30.072 --> 00:08:33.401
coordinate them like what things
are taking a really long time?

183
00:08:33.401 --> 00:08:36.943
So we can pretty easily see
that like this init function.

184
00:08:36.943 --> 00:08:40.520
Which is the one that keeps calling
this recalculate style is doing so,

185
00:08:40.520 --> 00:08:42.916
because it keeps appending children,
right?

186
00:08:42.916 --> 00:08:45.529
Like that was what we
were seeing here too.

187
00:08:45.529 --> 00:08:49.777
Like a timer fires, it calls a function,
a function is a set time out,

188
00:08:49.777 --> 00:08:51.435
set time out calls it a net.

189
00:08:51.435 --> 00:08:54.010
A net calls unappend child.

190
00:08:54.010 --> 00:08:57.921
The append child generates this huge
amount of recalculate style, right?

191
00:08:57.921 --> 00:09:01.053
So if we go into the recalculate style,
this is the line that's causing it.

192
00:09:01.053 --> 00:09:04.477
So what we're doing here,
now we can start reading the code.

193
00:09:04.477 --> 00:09:07.236
Now that we know like we're way to
busy doing recalculate style and

194
00:09:07.236 --> 00:09:08.576
I know where it's coming from.

195
00:09:08.576 --> 00:09:12.754
We kinda look here and we see this kind of
example where basically when a nig gets

196
00:09:12.754 --> 00:09:15.620
called, it iterates over
this looped 200 times.

197
00:09:15.620 --> 00:09:19.357
And it keeps making these new boxes and
appending them to the DOM, right?

198
00:09:19.357 --> 00:09:21.637
So it gets called and
its 200 boxes, right?

199
00:09:21.637 --> 00:09:25.896
and so the problem that we have here is
that we have that the original in that is

200
00:09:25.896 --> 00:09:26.504
defined.

201
00:09:26.504 --> 00:09:29.772
We need 200 boxes, so
we need 200 boxes, so that's fine.

202
00:09:29.772 --> 00:09:34.010
But what we're getting into here is
that the set timeout calls init every

203
00:09:34.010 --> 00:09:34.852
single time.

204
00:09:34.852 --> 00:09:37.844
So as that set timeout is firing,
it just keeps calling init.

205
00:09:37.844 --> 00:09:41.315
So its basically like its
kinda what we're seeing here.

206
00:09:41.315 --> 00:09:43.361
Again, you would see the red dots and

207
00:09:43.361 --> 00:09:46.405
lines if you had a paging
problem which we don't here.

208
00:09:46.405 --> 00:09:49.431
But you can see it's like
really busy on work here.

209
00:09:49.431 --> 00:09:51.682
And what it's doing is it's
like doing these layouts.

210
00:09:51.682 --> 00:09:55.548
And it's doing these layouts because
of the slide on the source code.

211
00:09:55.548 --> 00:09:58.582
So you could really trigger down to like,
how busy it is, and

212
00:09:58.582 --> 00:09:59.960
what's making it so busy.

