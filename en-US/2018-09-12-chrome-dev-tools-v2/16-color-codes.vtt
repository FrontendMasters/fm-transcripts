WEBVTT

1
00:00:00.024 --> 00:00:01.880
&gt;&gt; Jon Kuperman: So,
if we head back over to the slides,

2
00:00:01.880 --> 00:00:03.770
there's a lot of different colors here.

3
00:00:03.770 --> 00:00:07.400
So, what I've done is I've broken
them out into their color codes and

4
00:00:07.400 --> 00:00:08.870
then what those things mean.

5
00:00:08.870 --> 00:00:11.870
So, the first one that we'll see is
queuing, it's not all that common.

6
00:00:12.950 --> 00:00:17.430
For anybody that's familiar with it
like HTTP 1 can only do a maximum,

7
00:00:17.430 --> 00:00:20.890
like browsers can only do six
requests at most at one time.

8
00:00:20.890 --> 00:00:23.175
And so if you have more than six
requests that need to go out,

9
00:00:23.175 --> 00:00:24.658
it just forms a simple queue for them.

10
00:00:24.658 --> 00:00:28.570
So, it dispatches those six requests, and
then every other one gets put in a queue,

11
00:00:28.570 --> 00:00:32.630
and as soon as one of those six finishes,
it queues up the next one, and it goes.

12
00:00:32.630 --> 00:00:35.572
So, you wouldn't see queueing
if you only have a few files,

13
00:00:35.572 --> 00:00:36.794
like I do on my examples.

14
00:00:36.794 --> 00:00:40.660
But you might see it, for example,
if you had like seven CSS requests sent.

15
00:00:40.660 --> 00:00:42.100
The first six would get fired,

16
00:00:42.100 --> 00:00:44.890
the seventh one would queue
until one of the six was done.

17
00:00:46.370 --> 00:00:49.110
And so, yeah, so
why its isn't all that common to see, but

18
00:00:49.110 --> 00:00:52.180
it is important if you
aren't bundling your stuff.

19
00:00:52.180 --> 00:00:56.477
So this is why everyone suggests that you
bundle your resources together into one

20
00:00:56.477 --> 00:01:00.347
JobDescriptor, one CSS file,
as specifically to avoid this queuing.

21
00:01:00.347 --> 00:01:03.838
Because, otherwise, if you have
an app that has like 30 CSS and

22
00:01:03.838 --> 00:01:08.040
100 JavaScript files, and you just
script source and link ref all of them.

23
00:01:08.040 --> 00:01:12.386
You're gonna spend a lot of time
queuing that you could be spent

24
00:01:12.386 --> 00:01:14.200
downloading this stuff.

25
00:01:14.200 --> 00:01:16.840
The next color that we'll see is grey,
stalled or blocking.

26
00:01:18.060 --> 00:01:23.910
So, this is like basically,
they have specific colors,

27
00:01:23.910 --> 00:01:26.270
then they have kind of
blankets over the top of them.

28
00:01:26.270 --> 00:01:28.500
So stalled or blocking is also waiting.

29
00:01:28.500 --> 00:01:30.380
So your request hasn't
even been sent out yet.

30
00:01:30.380 --> 00:01:31.240
It's hasn't hit the server.

31
00:01:31.240 --> 00:01:32.620
It hasn't left your computer yet.

32
00:01:33.650 --> 00:01:38.611
So, this is kind of the blanket over
queueing and any kind of proxy lookups,

33
00:01:38.611 --> 00:01:42.345
any kinda networking stuff
like that that has to happen.

34
00:01:42.345 --> 00:01:43.670
Which we'll move into the next one.

35
00:01:43.670 --> 00:01:46.230
So, the next one is proxy negotiation.

36
00:01:46.230 --> 00:01:48.530
So, if it's hitting
a proxy server to go out,

37
00:01:48.530 --> 00:01:52.740
it knows it hasn't hit the actual
server that it's requesting yet.

38
00:01:52.740 --> 00:01:54.280
You might see,
if you have a slow proxy server,

39
00:01:54.280 --> 00:01:58.540
you might spend time stuck in this
gray area where you're waiting.

40
00:01:58.540 --> 00:02:00.867
The request is done queueing,
you've sent it out, but

41
00:02:00.867 --> 00:02:02.560
it hasn't even reached the server yet.

42
00:02:02.560 --> 00:02:05.420
So, it's still sitting
in this proxy server.

43
00:02:05.420 --> 00:02:07.130
The next one is DNS Lookup.

44
00:02:07.130 --> 00:02:09.347
DNS lookup is usually really quick, right?

45
00:02:09.347 --> 00:02:15.189
It's when you have a domain, like,
okay, google.com/ads.js or whatever.

46
00:02:15.189 --> 00:02:17.883
When I send that request out,
it has to act first,

47
00:02:17.883 --> 00:02:22.610
do a DNS lookup to see what IP address is
behind that URL that I've just given it.

48
00:02:22.610 --> 00:02:24.932
The only thing to keep
in mind here is that,

49
00:02:24.932 --> 00:02:28.232
similar to a lot of different files is,
DNS lookups cached.

50
00:02:28.232 --> 00:02:31.956
So, if every single one of my requests is
coming to my server, like local host or

51
00:02:31.956 --> 00:02:34.736
whatever, it only does one DNS lookup for
the first file and

52
00:02:34.736 --> 00:02:37.421
then after that their all instant,
it knows where to go.

53
00:02:37.421 --> 00:02:40.536
But if you start serving files from
a bunch of different domains if you

54
00:02:40.536 --> 00:02:43.383
got some ad domains and
some analytics stuff and this and that,

55
00:02:43.383 --> 00:02:46.090
it's gonna have to do with DNS lookup for
each one of those.

56
00:02:46.090 --> 00:02:48.301
That being said,
they're still relatively fast.

57
00:02:48.301 --> 00:02:50.530
It's not like I would avoid
doing multiple domains.

58
00:02:50.530 --> 00:02:54.379
But just know that you'll see this cost
every time it has to hit a new domain.

59
00:02:56.030 --> 00:02:59.110
The next one is the initial
connection connecting.

60
00:02:59.110 --> 00:03:01.500
So, this is kind of getting
into network stuff, but

61
00:03:01.500 --> 00:03:03.690
it's like, I have my stylesheet,

62
00:03:03.690 --> 00:03:07.970
it does the DNS lookup to find the actual
IP address behind the URL I've given it.

63
00:03:07.970 --> 00:03:12.061
And before we can start moving data we
have to do that TCP handshake, right?

64
00:03:12.061 --> 00:03:16.190
So like, SIN ACC, it's making sure that
we have an established connection.

65
00:03:16.190 --> 00:03:17.760
This is also time negotiating,

66
00:03:17.760 --> 00:03:20.440
there's similar hand shake for
SSL to be connected.

67
00:03:20.440 --> 00:03:24.090
Again, really fast on most always but
it is a color that you'll see.

68
00:03:24.090 --> 00:03:27.352
And then subset of that
is thid dark orange one.

69
00:03:27.352 --> 00:03:30.720
Which is just the time spent
doing an SSL connection.

70
00:03:30.720 --> 00:03:33.780
All right, now we get into green
which we see really common.

71
00:03:33.780 --> 00:03:35.690
Green is the request has been sent.

72
00:03:35.690 --> 00:03:38.059
So, we've gotten the first byte.

73
00:03:38.059 --> 00:03:42.801
How long did it actually take
to send the network request?

74
00:03:42.801 --> 00:03:46.674
So, this one we'll see pretty often.

75
00:03:46.674 --> 00:03:49.679
And then the one that we'll see
the most of is this waiting, right?

76
00:03:49.679 --> 00:03:54.479
So it's, again, kinda walking through the
high-level networking thing, it's like,

77
00:03:54.479 --> 00:03:57.423
I have this URL,
we do a DNS lookup to get the IP address.

78
00:03:57.423 --> 00:04:01.910
Then we do the kinda TCP connection, and
the SSL, we get everything connected.

79
00:04:01.910 --> 00:04:04.454
And then you start the network request,
we're good.

80
00:04:04.454 --> 00:04:08.152
Now we're ready and I'm ready to receive
that CSS file or that Javascript.

81
00:04:08.152 --> 00:04:10.671
So now, this is the time,
how long did it take for

82
00:04:10.671 --> 00:04:12.648
that first byte to come over the wire.

83
00:04:12.648 --> 00:04:15.610
And so starting to kind of
glean information here.

84
00:04:15.610 --> 00:04:18.935
If we see big, long patterns of
the colors we've covered so far,

85
00:04:18.935 --> 00:04:22.753
there's probably some kind of networking
configuration issue going on.

86
00:04:22.753 --> 00:04:25.001
You can say,
why is the DNS lookup taking so long?

87
00:04:25.001 --> 00:04:27.714
Or the SSL handshake is
taking a really long time,

88
00:04:27.714 --> 00:04:29.857
kind of talk to the ops team about that.

89
00:04:29.857 --> 00:04:33.586
We start seeing this time to first byte,
this green taking a really long time.

90
00:04:33.586 --> 00:04:36.010
Now we're looking at a slow
application server, right?

91
00:04:36.010 --> 00:04:39.021
It's just one byte, so
it's a consistent size.

92
00:04:39.021 --> 00:04:42.140
So, why is it taking so long for
me to get this first byte?

93
00:04:42.140 --> 00:04:44.290
A good example here is if you're
just doing a lot of work, right?

94
00:04:44.290 --> 00:04:48.642
So, if I hit your page for the index dot
html before you send it down you have to

95
00:04:48.642 --> 00:04:52.127
do a database query, and
that datbase query is really slow.

96
00:04:52.127 --> 00:04:55.540
It's gonna take a really long time
between us accepting the connection and

97
00:04:55.540 --> 00:04:58.720
you fetching and
then sending me that first byte of data.

98
00:04:58.720 --> 00:05:00.860
So this one kind of goes
to the back end team.

99
00:05:00.860 --> 00:05:03.770
I'm going to be, hey, the first time
to byte on this request is really slow.

100
00:05:03.770 --> 00:05:05.730
Can you help me out.

101
00:05:05.730 --> 00:05:07.330
Then we see content download, downloading.

102
00:05:07.330 --> 00:05:09.475
This is just the actual time.

103
00:05:09.475 --> 00:05:12.499
There's not a ton to be done here.

104
00:05:12.499 --> 00:05:15.012
The bigger your script and
the slower your connection,

105
00:05:15.012 --> 00:05:16.996
the longer amount of time you're gona see.

106
00:05:16.996 --> 00:05:19.964
This is again though, were it's
really good to use some benchmarks.

107
00:05:19.964 --> 00:05:22.450
Cuz it might be really fast for
you doing local development or

108
00:05:22.450 --> 00:05:24.510
doing development on
a high-speed connection.

109
00:05:24.510 --> 00:05:28.425
But you do want to keep in mind how big
the script is even if it shows really

110
00:05:28.425 --> 00:05:30.270
small content download for you.

111
00:05:31.740 --> 00:05:34.860
Okay, cool.
So, kind of going through all that,

112
00:05:34.860 --> 00:05:37.910
no exercise here, just a little
bit of not even so much a Q and A,

113
00:05:37.910 --> 00:05:41.400
but I have some random examples that
I've pulled from miscellaneous sites.

114
00:05:41.400 --> 00:05:46.150
So, somebody's like this is really slow,
it's taking, you can see a the bottom,

115
00:05:46.150 --> 00:05:48.220
almost 2 seconds or a second and a half.

116
00:05:48.220 --> 00:05:49.900
Why is this thing so slow?

117
00:05:49.900 --> 00:05:52.510
So you run the Network tab,
you hover over it, you see this.

118
00:05:52.510 --> 00:05:53.510
What are we looking at here?

119
00:05:53.510 --> 00:05:54.630
Why did it take so long?

120
00:05:56.592 --> 00:05:58.459
&gt;&gt; Speaker 2: The content
download's pretty high, so

121
00:05:58.459 --> 00:06:00.710
you must be downloading
some pretty heavy files.

122
00:06:00.710 --> 00:06:06.160
&gt;&gt; Jon Kuperman: Big file, exactly,
hey, it didn't queue 0.4 milliseconds.

123
00:06:06.160 --> 00:06:07.450
Nothing got stalled out.

124
00:06:07.450 --> 00:06:08.800
The request was really fast.

125
00:06:08.800 --> 00:06:10.060
The time to first byte was really fast.

126
00:06:10.060 --> 00:06:11.230
The server's doing well.

127
00:06:11.230 --> 00:06:17.350
It just took a long time it's big right or
your connection's slow or both great.

128
00:06:17.350 --> 00:06:19.137
Okay, so then we see this one.

129
00:06:19.137 --> 00:06:21.398
Somebody's like this one's
really really slow too but

130
00:06:21.398 --> 00:06:23.490
it's a small file what's going on here?

131
00:06:23.490 --> 00:06:24.370
&gt;&gt; Speaker 2: Waiting.

132
00:06:24.370 --> 00:06:25.410
&gt;&gt; Jon Kuperman: Why is it waiting?

133
00:06:25.410 --> 00:06:27.272
What's it doing?
&gt;&gt; Speaker 3: [INAUDIBLE].

134
00:06:27.272 --> 00:06:29.300
&gt;&gt; Jon Kuperman: Yeah
what does that imply?

135
00:06:29.300 --> 00:06:33.540
So we're seeing it didn't queue, no stall
the, request came back really fast so

136
00:06:33.540 --> 00:06:34.864
we got connected.

137
00:06:34.864 --> 00:06:35.740
The file's small,

138
00:06:35.740 --> 00:06:39.220
the download was almost instant what
are we waiting what was the problem?

139
00:06:39.220 --> 00:06:41.180
&gt;&gt; Speaker 2: The back end,
slow application server.

140
00:06:41.180 --> 00:06:42.728
&gt;&gt; Jon Kuperman: The application
server exactly.

141
00:06:42.728 --> 00:06:47.053
The network request connected really
quickly, the file size is really small.

142
00:06:47.053 --> 00:06:49.772
There's something up with this
endpoint like this endpoint

143
00:06:49.772 --> 00:06:51.433
taking almost a second to complete.

144
00:06:51.433 --> 00:06:54.599
We gotta figure out why that is exactly.

145
00:06:54.599 --> 00:06:56.978
Cool, what about this one,
this ones a little weird,

146
00:06:56.978 --> 00:06:58.446
kinda got a lot of colors in here.

147
00:06:58.446 --> 00:07:03.100
What can we glean from this,
it's also, if you look at the bottom,

148
00:07:03.100 --> 00:07:08.747
it's pretty fast, so not to worry there,
but what kind of stuff is going on here?

149
00:07:09.975 --> 00:07:11.655
&gt;&gt; Speaker 4: DNS lookup.
&gt;&gt; Jon Kuperman: Yeah.

150
00:07:11.655 --> 00:07:13.879
&gt;&gt; Speaker 4: So,
it's probably a new Domain queries.

151
00:07:13.879 --> 00:07:15.360
&gt;&gt; Jon Kuperman: Absolutely, right?

152
00:07:15.360 --> 00:07:18.120
So it's doing a DNS lookup
which the other ones aren't.

153
00:07:18.120 --> 00:07:20.243
So it's probably the first
time we're using that domain,

154
00:07:20.243 --> 00:07:22.030
and everything's taking a little long,
right?

155
00:07:22.030 --> 00:07:23.128
Like the SSL handshake,

156
00:07:23.128 --> 00:07:26.640
just that whole connection is taking
a little bit more time than we're used to.

157
00:07:28.210 --> 00:07:29.385
Anything else going on here?

158
00:07:34.107 --> 00:07:37.170
&gt;&gt; Speaker 3: Since it's intial
connection it means there's no cache.

159
00:07:37.170 --> 00:07:38.590
&gt;&gt; Jon Kuperman: Yeah, yeah, exactly so

160
00:07:38.590 --> 00:07:42.090
if the file downloads pretty quick,
the time to first byte is nice and fast.

161
00:07:42.090 --> 00:07:44.930
Yeah it's just all these kind
of like somethings going again,

162
00:07:44.930 --> 00:07:46.870
this ones fast enough, right?

163
00:07:46.870 --> 00:07:49.815
But these colors indicate exactly,
there's something going on.

164
00:07:49.815 --> 00:07:53.325
The DNS lookup probably means the first
time hitting that URL, and there's just

165
00:07:53.325 --> 00:07:56.801
something kind of, all this setup time
of the SSL handshake and all that stuff.

166
00:07:56.801 --> 00:07:59.099
The only real way to avoid cost on this,
right,

167
00:07:59.099 --> 00:08:02.605
is to serve whatever asset that is
from the URLs that we've already hit,

168
00:08:02.605 --> 00:08:05.035
whatever URL we've already
hit on our document.

169
00:08:05.035 --> 00:08:06.597
All right, and
then what about this last one here?

170
00:08:06.597 --> 00:08:09.048
We see a big, white bar for Queueing.

171
00:08:09.048 --> 00:08:10.298
What's going on with this one?

172
00:08:12.128 --> 00:08:12.952
&gt;&gt; Speaker 2: Queueing?

173
00:08:12.952 --> 00:08:14.744
&gt;&gt; Jon Kuperman: Yeah, why is it queueing?

174
00:08:14.744 --> 00:08:19.040
&gt;&gt; Speaker 2: About your source,
the comments JavaScript or

175
00:08:19.040 --> 00:08:21.240
something that we have so many of them.

176
00:08:21.240 --> 00:08:22.500
&gt;&gt; Jon Kuperman: Exactly,
you've got too many.

177
00:08:22.500 --> 00:08:25.724
You can only do the six
synchronous connections at once,

178
00:08:25.724 --> 00:08:27.278
six HTTP requests at once.

179
00:08:27.278 --> 00:08:31.052
If it's queueing, it means it already
is busy, as busy as it can be.

180
00:08:31.052 --> 00:08:34.237
This file download super fast
it just wasn't able to start for

181
00:08:34.237 --> 00:08:37.067
a really long time,
too many files, perfect, cool.

