WEBVTT

1
00:00:00.000 --> 00:00:04.306
&gt;&gt; Jon Kuperman: For this one, just
trying to get the image to display a few

2
00:00:04.306 --> 00:00:09.987
different images based on size, so
go ahead and jump over in srcset.pug.

3
00:00:09.987 --> 00:00:13.120
So we'll see right now,
we just have this plain image source.

4
00:00:14.410 --> 00:00:16.700
So I might just move it to something like,
first,

5
00:00:16.700 --> 00:00:19.190
we'll need to change src to be srcset.

6
00:00:19.190 --> 00:00:22.920
And then we'll just start displaying
our different sizes that we want.

7
00:00:22.920 --> 00:00:25.679
So we can do maybe some squares,
just to make things a little easier.

8
00:00:25.679 --> 00:00:30.000
So we can do 400 by 400, and
we'll set that for 400 width.

9
00:00:30.000 --> 00:00:34.580
Then we'll do the same thing again,
but we'll do 600 by 600, and

10
00:00:34.580 --> 00:00:36.450
we'll set that to 600 width.

11
00:00:36.450 --> 00:00:43.072
And we'll do one more that's 1,000 by
1,000, we'll set that to 1,000 width.

12
00:00:43.072 --> 00:00:48.391
Cool, so we've got the source set now
with these three different sizes.

13
00:00:48.391 --> 00:00:52.042
So we'll hop back into the debugger,
I'm gonna go ahead and

14
00:00:52.042 --> 00:00:56.134
move this over to the side here,
and we'll just try a hard refresh.

15
00:00:56.134 --> 00:01:00.173
So we can see on the small screen here,
when you refresh the page,

16
00:01:00.173 --> 00:01:02.308
you get this 600 by 600 one.

17
00:01:02.308 --> 00:01:07.109
If we make it a little smaller and
refresh again, grab that there,

18
00:01:07.109 --> 00:01:11.240
we should see the 400
by 400 size down there.

19
00:01:11.240 --> 00:01:15.984
And then what's kind of interesting about
it is that it will refetch images going in

20
00:01:15.984 --> 00:01:17.903
one direction but not the other.

21
00:01:17.903 --> 00:01:20.602
So the demo that we can see for
that is, if we hit the page for

22
00:01:20.602 --> 00:01:24.120
the first time here, and
we get this 400 by 400 pixel image.

23
00:01:24.120 --> 00:01:26.920
And then what we try to do is just for
responsive sake,

24
00:01:26.920 --> 00:01:28.940
we start making the screen
a little bit bigger.

25
00:01:28.940 --> 00:01:32.296
Once it hits that, almost like
a media query or a break point,

26
00:01:32.296 --> 00:01:36.641
it'll pop in the new image, now you
can see the 600 by 600 image is there.

27
00:01:36.641 --> 00:01:39.026
Whereas, if you start going smaller again,

28
00:01:39.026 --> 00:01:42.372
it will never go back to the 400
by 400 without a refresh.

29
00:01:42.372 --> 00:01:46.480
And so the thinking here is that
network calls are really expensive.

30
00:01:46.480 --> 00:01:51.090
And so if you have a big image,
and it's already been loading and

31
00:01:51.090 --> 00:01:53.940
you've already rendered it, and
you start shrinking the screen, it's

32
00:01:53.940 --> 00:01:58.060
really not that much cost for Chrome to
shrink the image and repaint the screen.

33
00:01:58.060 --> 00:02:00.730
Whereas, if you have a really small image,
like that 400 by 400 one,

34
00:02:00.730 --> 00:02:04.700
you start expanding the screen, the
quality is gonna degrade significantly.

35
00:02:04.700 --> 00:02:07.630
So it's worth it to the browser to go out
and fetch a bigger image if you're getting

36
00:02:07.630 --> 00:02:09.180
bigger, and
there's a bigger one available.

37
00:02:09.180 --> 00:02:11.980
If you're getting smaller,
it'll just use whatever it has.

38
00:02:11.980 --> 00:02:14.620
So we can that if we expand all
the way out here, it'll go to 6, and

39
00:02:14.620 --> 00:02:18.550
then 1,000 and we get our full
sized 1,000 by 1,000 image here.

40
00:02:18.550 --> 00:02:20.825
Any questions on source set?

41
00:02:20.825 --> 00:02:21.599
Yeah.
&gt;&gt; Speaker 2: Yeah,

42
00:02:21.599 --> 00:02:24.380
wouldn't a good practice be just to
put the low res version as the source?

43
00:02:24.380 --> 00:02:25.553
&gt;&gt; Jon Kuperman: Yeah, that would be

44
00:02:25.553 --> 00:02:28.867
great, that would probably
be the most performant one.

45
00:02:28.867 --> 00:02:30.080
So if you have a source,

46
00:02:30.080 --> 00:02:33.500
it's only gonna fire on browsers
that don't have the source set.

47
00:02:33.500 --> 00:02:35.442
But it would probably be best
to put your smallest one there.

48
00:02:35.442 --> 00:02:38.632
So on these old browsers, it's probably
a good chance that they have worse network

49
00:02:38.632 --> 00:02:41.790
conditions and worse rendering engines
anyway, just put the small one in there.

50
00:02:41.790 --> 00:02:43.228
I think that's the best practice for sure.

