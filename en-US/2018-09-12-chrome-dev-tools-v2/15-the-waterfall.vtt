WEBVTT

1
00:00:03.043 --> 00:00:05.492
&gt;&gt; Speaker 1: So the next section
we're gonna do is networking.

2
00:00:05.492 --> 00:00:09.195
So if we kinda go back over to our app,
we can do it really on any page.

3
00:00:09.195 --> 00:00:10.888
I'll do it on this main page here.

4
00:00:10.888 --> 00:00:15.352
We open up the devtools, go to the Network
tab here, and I'm just gonna kinda make

5
00:00:15.352 --> 00:00:18.600
this bigger and just do a refresh
with the Network tab open.

6
00:00:18.600 --> 00:00:23.121
And you'll start seeing a lot of
stuff starting to come through.

7
00:00:23.121 --> 00:00:24.542
So there's a couple of things to look at.

8
00:00:24.542 --> 00:00:28.913
Kind of the meat of it is gonna be this
section here of the two sections, and

9
00:00:28.913 --> 00:00:30.972
these are the waterfall, right?

10
00:00:30.972 --> 00:00:34.441
So you can kind of see, you'll start
seeing really familiar shapes, right?

11
00:00:34.441 --> 00:00:38.300
So basically what this is is as your
website loads every single issued

12
00:00:38.300 --> 00:00:41.559
peer request that comes will
be shown here, who called for

13
00:00:41.559 --> 00:00:44.772
it, how long it took,
how big it was, all these things.

14
00:00:44.772 --> 00:00:48.912
So the x-axis over this middle
bar here is time, right?

15
00:00:48.912 --> 00:00:51.811
So it's at 10, 20,
30 milliseconds, things like that.

16
00:00:51.811 --> 00:00:54.109
And then each one of those
little bars is a single item.

17
00:00:54.109 --> 00:00:58.623
So if I were to hover over one of them
like this I can see that the first thing

18
00:00:58.623 --> 00:01:00.476
requested is this document.

19
00:01:00.476 --> 00:01:03.912
So, when I was talking about patterns
you'll start to see that are familiar,

20
00:01:03.912 --> 00:01:06.162
all websites work basically the same way,
right?

21
00:01:06.162 --> 00:01:09.755
So I hit your website, the first thing
I get back is an HTML file, right?

22
00:01:09.755 --> 00:01:11.540
A document.
It's always gonna be the first thing

23
00:01:11.540 --> 00:01:12.215
that comes back.

24
00:01:12.215 --> 00:01:14.372
So I get that document and
then I parse it.

25
00:01:14.372 --> 00:01:17.815
And I'll look inside that document or the
browser will look inside that document and

26
00:01:17.815 --> 00:01:19.672
start finding any calls
to other resources.

27
00:01:19.672 --> 00:01:23.272
So these could be images,
they could be a link tags with CSS in it,

28
00:01:23.272 --> 00:01:25.964
they could be script tags
with JavaScript in it.

29
00:01:25.964 --> 00:01:27.203
So let's start going through this process.

30
00:01:27.203 --> 00:01:28.613
So you'll always see this pattern, right?

31
00:01:28.613 --> 00:01:30.049
Which is like your document, and

32
00:01:30.049 --> 00:01:33.602
then as soon as your document comes down
it kicks off a bunch of other jobs, right?

33
00:01:33.602 --> 00:01:37.132
So document comes down,
gets parsed and then starts asking for

34
00:01:37.132 --> 00:01:41.803
all these other things, like all the
JavaScript files, all the css images, etc.

35
00:01:41.803 --> 00:01:46.491
So yeah, so you can see kind
of another view is down here.

36
00:01:46.491 --> 00:01:49.272
So this other view is this
top down waterfall view.

37
00:01:49.272 --> 00:01:52.187
So you can see the first thing
that came down was the document,

38
00:01:52.187 --> 00:01:55.200
and the second thing that
came down was the CSS file.

39
00:01:55.200 --> 00:01:56.965
And what these will kind of relate to,

40
00:01:56.965 --> 00:01:59.998
like if we were to go back into
the Elements tab and we were to look in

41
00:01:59.998 --> 00:02:03.272
the head you'll start seeing these
in the order they appear, right?

42
00:02:03.272 --> 00:02:07.061
So it's parsing the document, the first
thing it hits is this normalize.css,

43
00:02:07.061 --> 00:02:08.183
sends a request for it.

44
00:02:08.183 --> 00:02:10.543
Then style.css, sends a request for it.

45
00:02:10.543 --> 00:02:13.382
When we go into network we can see that
they came in that exact order, right?

46
00:02:13.382 --> 00:02:16.451
So it's like as it sees these requests, or

47
00:02:16.451 --> 00:02:20.473
as it sees these scripts it
sends out a request for them.

48
00:02:20.473 --> 00:02:24.419
There are exceptions which we're
gonna get into in a little bit,

49
00:02:24.419 --> 00:02:28.094
which is that the browser really
tries to be helpful for you.

50
00:02:28.094 --> 00:02:31.736
And so it often times, when it's doing
its initial run of the document,

51
00:02:31.736 --> 00:02:35.813
it'll do a little bit of magic trying to
prioritize what scripts to fetch first.

52
00:02:35.813 --> 00:02:41.673
So for like example it deprioritizes
images underneath let's say css, right?

53
00:02:41.673 --> 00:02:45.525
Cuz its like the CSS is needed to render
the page, it's gonna look really weird if

54
00:02:45.525 --> 00:02:48.143
the page renders and
then its CSS changes everything.

55
00:02:48.143 --> 00:02:52.197
So if for example you were to do
an antipattern, like put an image and then

56
00:02:52.197 --> 00:02:56.847
a CSS tag under it, the browser's gonna be
smart enough to pluck that CSS call up and

57
00:02:56.847 --> 00:02:58.392
give it a higher priority.

58
00:02:58.392 --> 00:03:00.482
So it'll do some of those things for
you, but

59
00:03:00.482 --> 00:03:04.231
for the most part what you're seeing here
is the order that you declare files in.

60
00:03:04.231 --> 00:03:08.111
So whatever CSS file you declare first
will be the first thing to show up.

61
00:03:08.111 --> 00:03:09.081
We can see a bunch of information.

62
00:03:09.081 --> 00:03:12.622
We can see its status, so
these are HTTP response codes.

63
00:03:12.622 --> 00:03:14.800
You can see the type over here.

64
00:03:14.800 --> 00:03:17.885
So the first one's a document,
we've got style sheets and scripts.

65
00:03:17.885 --> 00:03:20.219
We can see the initiator,
which is really cool.

66
00:03:20.219 --> 00:03:24.190
As you start getting, like if you have
scripts that call other scripts that call

67
00:03:24.190 --> 00:03:26.221
other scripts, it might be confusing.

68
00:03:26.221 --> 00:03:27.276
Like why am I fetching this?

69
00:03:27.276 --> 00:03:29.917
Like I have some JavaScript file,
what's fetching?

70
00:03:29.917 --> 00:03:32.040
And I don't see it in my index.html.

71
00:03:32.040 --> 00:03:32.999
So you can look in here and

72
00:03:32.999 --> 00:03:35.943
you can say that's getting fetched
by this other JavaScript, right?

73
00:03:35.943 --> 00:03:40.398
So if you have file a.js which
has a fetch call on it for

74
00:03:40.398 --> 00:03:45.454
b.js, then b is initiator as
a as opposed to being the HTML.

75
00:03:45.454 --> 00:03:47.832
There's also like a hello
cool trick you can do so

76
00:03:47.832 --> 00:03:50.964
you can hold the SHIFT key while
you're moving around here, and

77
00:03:50.964 --> 00:03:54.800
it'll show you in green when you're
hovering, what file called it, right?

78
00:03:54.800 --> 00:03:56.112
So like where did you come from?

79
00:03:56.112 --> 00:03:57.696
It shows you in green, and

80
00:03:57.696 --> 00:04:01.013
vice versa it'll show you in
red what files it called.

81
00:04:01.013 --> 00:04:05.754
So shift is kind of like this neat visual
representation of how these things do.

82
00:04:05.754 --> 00:04:07.168
You can see the size.

83
00:04:07.168 --> 00:04:08.640
Size is a little bit tricky.

84
00:04:08.640 --> 00:04:12.574
Let me make this a little bit,
so you'll see two things here.

85
00:04:12.574 --> 00:04:16.574
For a lot of them you'll see
the actual size of the file, and

86
00:04:16.574 --> 00:04:19.943
then you'll see it's compressed or
cache size.

87
00:04:19.943 --> 00:04:23.185
So when we get into things like image
compression or script compression or

88
00:04:23.185 --> 00:04:25.119
whatever, like using gzip on your server,

89
00:04:25.119 --> 00:04:27.757
you'll start seeing drastically
different sizes there.

90
00:04:27.757 --> 00:04:31.602
But we get into caching, we'll
actually see instead of a bottom size,

91
00:04:31.602 --> 00:04:33.404
it'll just say from this cache.

92
00:04:33.404 --> 00:04:35.123
It's like I didn't even
have to touch that thing.

93
00:04:35.123 --> 00:04:38.902
So it's not really the black size
that you want to pay attention to,

94
00:04:38.902 --> 00:04:40.642
as much as it's the gray size.

95
00:04:40.642 --> 00:04:44.215
Again with caveats though, the first time
a user hits your page they're gonna have

96
00:04:44.215 --> 00:04:47.091
to freshly download everything,
even if you have quick caching.

97
00:04:47.091 --> 00:04:49.833
So things to keep in mind.

98
00:04:49.833 --> 00:04:52.650
You can see the time that
it took to come down.

99
00:04:52.650 --> 00:04:56.713
And then kind of all that information
is summarized in this nice visual here.

100
00:04:56.713 --> 00:04:58.791
So, these are all these color coded.

101
00:04:58.791 --> 00:05:01.642
Again, the x axis is time.

102
00:05:01.642 --> 00:05:04.243
So the longer it is,
the longer it took to download.

103
00:05:04.243 --> 00:05:08.021
And the colors all represent different
things, what it spent its time doing.

104
00:05:08.021 --> 00:05:11.509
So this tool can become really powerful.

105
00:05:11.509 --> 00:05:14.890
It's especially helpful,
not in a blame game way, but for

106
00:05:14.890 --> 00:05:17.267
figuring out why your requests are slow.

107
00:05:17.267 --> 00:05:18.937
Is it too big?

108
00:05:18.937 --> 00:05:19.686
Am I asking for too many?

109
00:05:19.686 --> 00:05:22.022
Is it a server problem?

110
00:05:22.022 --> 00:05:24.614
Is it they're coming from
two different sources?

111
00:05:24.614 --> 00:05:28.078
All these things can be gleaned
just from the Network tab,

112
00:05:28.078 --> 00:05:30.988
which is a lot more
information than it's slow.

