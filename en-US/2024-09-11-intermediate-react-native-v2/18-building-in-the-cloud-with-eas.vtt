WEBVTT

1
00:00:00.100 --> 00:00:04.600
&gt;&gt; Kadi Kraman: So
this is not really like part of the course

2
00:00:04.600 --> 00:00:09.725
because this isn't like
a course about EAS, but

3
00:00:09.725 --> 00:00:15.230
I wanted to just show you
how that would work if.

4
00:00:15.230 --> 00:00:19.527
S, if you have difficulty setting
up your local environment,

5
00:00:19.527 --> 00:00:24.079
then you can build in the cloud,
and this is the workaround for it.

6
00:00:25.719 --> 00:00:29.809
So EAS is Expo Application Services.

7
00:00:29.809 --> 00:00:34.359
So it is Expo Application Services.

8
00:00:36.799 --> 00:00:41.028
And it is a cloud service,
like a CIT service specifically for

9
00:00:41.028 --> 00:00:43.069
building React Native apps.

10
00:00:45.069 --> 00:00:50.869
So let me show you how you would build it.

11
00:00:50.869 --> 00:00:59.479
So I have the EAS CLI installed
locally already, globally.

12
00:00:59.479 --> 00:01:04.408
So if I do, yeah, so
I have this installed.

13
00:01:04.408 --> 00:01:08.598
So I'm going to EAS in it a new project.

14
00:01:09.838 --> 00:01:13.098
So this will register it on my Expo
account, so I'm already logged in.

15
00:01:13.098 --> 00:01:16.413
And it's asking me if I want to create
a new project called plantly, and

16
00:01:16.413 --> 00:01:17.138
I'll say yes.

17
00:01:20.080 --> 00:01:23.910
And now we do eas build configure.

18
00:01:25.840 --> 00:01:29.450
So this is asking me what platforms
I want to build, so I'll just do all.

19
00:01:30.490 --> 00:01:34.340
And then this creates this
little eas JSON file here.

20
00:01:35.560 --> 00:01:40.519
And this basically sets up the three
main types of build that we might

21
00:01:40.519 --> 00:01:41.742
want to create.

22
00:01:42.952 --> 00:01:46.742
So we have the development build, and
this is the one that you would use for

23
00:01:46.742 --> 00:01:48.502
your local development.

24
00:01:48.502 --> 00:01:53.002
It has development client true,
so it enables the dev menu so

25
00:01:53.002 --> 00:01:57.602
you could load the JavaScript bundle for
your local machine.

26
00:01:59.184 --> 00:02:01.118
And distribution internal,

27
00:02:01.118 --> 00:02:06.544
this basically means that this build will
be directly installable on your device.

28
00:02:08.764 --> 00:02:11.664
The preview build is the same
as the development build.

29
00:02:11.664 --> 00:02:15.599
The only difference is that the
development client is instead the true,

30
00:02:15.599 --> 00:02:19.728
which basically means that you have one
JavaScript bundled into your app and

31
00:02:19.728 --> 00:02:24.449
then that's it, so it will basically
emulate what production will look like.

32
00:02:24.449 --> 00:02:25.867
So if you want to test your app,

33
00:02:25.867 --> 00:02:30.669
your production-looking app without the
dev client, that's the one you would use.

34
00:02:30.669 --> 00:02:34.210
And then production is
a completely different file type,

35
00:02:34.210 --> 00:02:39.414
it has different signing credentials,
it's not directly installable on a device,

36
00:02:39.414 --> 00:02:42.392
but it is for
delivery to the App and Play Stores.

37
00:02:47.222 --> 00:02:51.912
And I do have a section
on build sign in later.

38
00:02:51.912 --> 00:02:57.026
But I will say that for iOS builds,
all of the builds here require for

39
00:02:57.026 --> 00:03:00.078
you to have an Apple developer account,

40
00:03:00.078 --> 00:03:05.503
which is a subscription service
where it costs $99, I think a year.

41
00:03:05.503 --> 00:03:09.833
And this is another thing why being
able to build locally is useful.

42
00:03:09.833 --> 00:03:13.423
Because if you just build
locally your iOS app,

43
00:03:13.423 --> 00:03:18.281
you can run a simulator and
you don't need a developer account.

44
00:03:18.281 --> 00:03:23.969
But you can also do iOS

45
00:03:23.969 --> 00:03:28.711
simulator true,

46
00:03:28.711 --> 00:03:33.466
simulator true.

47
00:03:33.466 --> 00:03:37.810
And this will do a simulator build for
iOS.

48
00:03:37.810 --> 00:03:42.858
So now I do eas build,

49
00:03:42.858 --> 00:03:51.560
profile development platform iOS.

50
00:03:51.560 --> 00:03:56.784
And you can see it didn't prompt
me to log in or anything.

51
00:03:56.784 --> 00:04:00.192
So this is actually now
building in the cloud.

52
00:04:01.312 --> 00:04:05.962
And it's going to run through
all the various steps.

53
00:04:05.962 --> 00:04:10.958
And actually, I can do that, here's
one I did earlier, just to show you.

54
00:04:14.952 --> 00:04:16.372
&gt;&gt; Kadi Kraman: That
it does all the steps.

55
00:04:16.372 --> 00:04:21.258
And the important part is cuz you were
asking whether you would do pre-build if

56
00:04:21.258 --> 00:04:23.222
you're building on CI.

57
00:04:23.222 --> 00:04:26.092
So one of the steps actually is prebuilt.

58
00:04:26.092 --> 00:04:30.363
So this is obviously the service
is very much optimized for

59
00:04:30.363 --> 00:04:33.002
like React Native and Expo.

60
00:04:33.002 --> 00:04:35.262
And it very much supports CNG.

61
00:04:35.262 --> 00:04:38.392
So if your project is set up to
use prebuilt it runs prebuilt.

62
00:04:38.392 --> 00:04:43.854
And that's why it's also very important
to not have your native directories

63
00:04:43.854 --> 00:04:49.413
in gitignore, because if you don't,
it will use the existing directories.

64
00:04:49.413 --> 00:04:53.723
So that's why you can also build
existing React Native apps on here.

65
00:04:53.723 --> 00:04:55.933
So if it does have needed directories,
it will just use those.

66
00:04:58.244 --> 00:05:02.806
&gt;&gt; Kadi Kraman: And this, if you
look at how long this build took, so

67
00:05:02.806 --> 00:05:05.314
it took about four minutes.

68
00:05:13.344 --> 00:05:16.858
And I can actually just build for
Android as well.

69
00:05:28.150 --> 00:05:31.668
&gt;&gt; Kadi Kraman: So this is actually, so
we're gonna talk about build signing

70
00:05:31.668 --> 00:05:36.279
later, but the EAS CLI handles all
the credentials management for you.

71
00:05:36.279 --> 00:05:39.661
So for the Android build,
it needs to generate a Keystore,

72
00:05:39.661 --> 00:05:43.653
which is the security step for
installing it on a physical device, and

73
00:05:43.653 --> 00:05:46.629
it's asking me if I want
to generate a new Keystore,

74
00:05:46.629 --> 00:05:50.633
because it's the first time I'm
running it, so I'll say yes.

75
00:05:50.633 --> 00:05:54.829
But that's how you would
build the same thing on EAS.

76
00:05:54.829 --> 00:05:58.223
Actually, let me show you my,
here's how, here's what I did earlier.

77
00:05:58.223 --> 00:06:03.278
Once it's built, if it is a build
that is installable on a device,

78
00:06:03.278 --> 00:06:05.280
you can download the APK.

79
00:06:05.280 --> 00:06:08.603
So that's why I was thinking about doing
it cuz you were asking where the app

80
00:06:08.603 --> 00:06:09.430
bundle is.

81
00:06:09.430 --> 00:06:13.180
So you can download the IPA or
APK directly from here.

82
00:06:13.180 --> 00:06:15.104
You can install it via QR code,

83
00:06:15.104 --> 00:06:19.715
or you can send this page to someone
else to install via QR code.

84
00:06:19.715 --> 00:06:24.135
Or we also have this
tool called Expo Orbit.

85
00:06:24.135 --> 00:06:30.596
And it's a free tool, and
it lets you install an arbitrary APK and

86
00:06:30.596 --> 00:06:36.605
IPA to a simulator, emulator,
or a physical device.

87
00:06:36.605 --> 00:06:40.388
So I think,
do I have Orbit installed here cuz I do.

88
00:06:40.388 --> 00:06:45.366
&gt;&gt; Speaker 2: Yeah,
usually we will take those files and

89
00:06:45.366 --> 00:06:52.014
then load them into Perfecto for
the QA team to test them.

90
00:06:53.114 --> 00:06:54.549
So part of this build,

91
00:06:54.549 --> 00:06:59.247
we then push the APK IPA files to
the necessary directories for perfecto.

92
00:06:59.247 --> 00:07:01.695
&gt;&gt; Kadi Kraman: Yes, that makes sense?

93
00:07:01.695 --> 00:07:04.868
Yeah, so Expo Orbit, it looks like this.

94
00:07:04.868 --> 00:07:13.163
And you can, it lists all of
the simulators that I have on my mac.

95
00:07:13.163 --> 00:07:16.801
And actually the fun thing
is if I plug in my phone, so

96
00:07:16.801 --> 00:07:19.215
let's plug in the Android phone.

97
00:07:31.080 --> 00:07:32.692
&gt;&gt; Kadi Kraman: And reopen this.

98
00:07:32.692 --> 00:07:35.172
It actually shows off with
my Android phone as well.

99
00:07:35.172 --> 00:07:38.444
So you could select an APK
from a local file or

100
00:07:38.444 --> 00:07:41.973
select built from EAS, it's quite handy.

101
00:07:41.973 --> 00:07:46.622
So even if you're not using EAS, it's
actually quite a handy little tool for

102
00:07:46.622 --> 00:07:50.344
installing apps on devices,
especially physical devices,

103
00:07:50.344 --> 00:07:52.220
which is a little bit tedious.

