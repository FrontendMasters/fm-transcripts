WEBVTT

1
00:00:00.350 --> 00:00:02.571
&gt;&gt; Kadi Kraman: So next,
for both iOS and Android,

2
00:00:02.571 --> 00:00:05.930
there's actually quite
a few forms to fill out.

3
00:00:05.930 --> 00:00:09.112
You only do these ones, but
it is really tedious and

4
00:00:09.112 --> 00:00:13.040
there is a lot of information
that is very difficult to answer.

5
00:00:13.040 --> 00:00:16.092
So when you're planning to do a release,
like take a good week,

6
00:00:16.092 --> 00:00:18.764
especially if you have a client
that you build this for.

7
00:00:18.764 --> 00:00:23.044
Take a good week because a lot of it
is regulatory and kind of important for

8
00:00:23.044 --> 00:00:25.934
them to know what they
are agreeing to adhere by.

9
00:00:27.094 --> 00:00:31.604
So just to show you what it looks like.

10
00:00:31.604 --> 00:00:35.874
So the important part
here is the app privacy.

11
00:00:35.874 --> 00:00:39.403
So you need to have a privacy policy
URL which needs to be hosted something,

12
00:00:39.403 --> 00:00:41.654
hosted website,
you'll be hosted on the web.

13
00:00:42.704 --> 00:00:47.764
And then here we have a data collection.

14
00:00:47.764 --> 00:00:52.984
So if you do any analytics,
you will say yes, we do some data.

15
00:00:52.984 --> 00:00:59.392
And then there's all this information you
need to declare what you are collecting.

16
00:00:59.392 --> 00:01:02.217
So are you collecting the user's name?

17
00:01:02.217 --> 00:01:03.667
Are you collecting their fitness data?

18
00:01:03.667 --> 00:01:05.747
Are you collecting their
financial information?

19
00:01:05.747 --> 00:01:07.773
And then if you've seen on the app stores,

20
00:01:07.773 --> 00:01:11.077
you have this like a declaration
of what's being collected.

21
00:01:11.077 --> 00:01:13.144
This is where this information comes from.

22
00:01:13.144 --> 00:01:17.720
The developer has to fill it out.

23
00:01:17.720 --> 00:01:20.384
And on Android, this is similar.

24
00:01:20.384 --> 00:01:26.896
So the best place to find it,
I think is on the dashboard.

25
00:01:26.896 --> 00:01:31.794
That was it, so it will be
finished setting up your app and

26
00:01:31.794 --> 00:01:33.951
there is a list of tasks.

27
00:01:33.951 --> 00:01:38.261
So these are completely different
questions to iOS just to make it fun.

28
00:01:38.261 --> 00:01:43.753
Where you do need to set
up your privacy policy.

29
00:01:43.753 --> 00:01:46.153
But then you have things like this,

30
00:01:46.153 --> 00:01:52.727
whether you want a functionality in my app
is available without access restrictions.

31
00:01:52.727 --> 00:01:57.057
And you have whether it's a news app,
I think data safety.

32
00:01:57.057 --> 00:02:00.542
So this is similar to what
we just looked at on iOS.

33
00:02:00.542 --> 00:02:06.370
Where you need to again declare, let's say
that the app is collecting things, say

34
00:02:06.370 --> 00:02:12.792
Yes, and then you need to declare all the
information that your app is collecting.

35
00:02:12.792 --> 00:02:17.707
So this is quite a long form to jump
through so it will take some time.

36
00:02:17.707 --> 00:02:19.995
And you do change it periodically.

37
00:02:19.995 --> 00:02:23.130
So it's very difficult to
write any instructions for

38
00:02:23.130 --> 00:02:26.155
it because the options won't be the same.

39
00:02:26.155 --> 00:02:29.515
So next up you need to generate
some promotional assets.

40
00:02:30.615 --> 00:02:34.275
So actually put together this document.

41
00:02:34.275 --> 00:02:37.315
So you have this document for
app store assets.

42
00:02:37.315 --> 00:02:41.280
So these are the things that you
need to generate in order to submit.

43
00:02:41.280 --> 00:02:46.870
And the most important part, I think,
is the screenshots of your app.

44
00:02:46.870 --> 00:02:51.424
They're called screenshots, but they don't
technically have to be screenshots on

45
00:02:51.424 --> 00:02:53.710
that device, which is a little bit funny.

46
00:02:53.710 --> 00:02:57.708
So you can take a bit of
creative liberty to it.

47
00:02:57.708 --> 00:03:01.635
If you do a screenshot on a particular
device, then that's perfect,

48
00:03:01.635 --> 00:03:06.348
that is absolutely going to get through,
but you can be a bit more creative.

49
00:03:06.348 --> 00:03:08.378
So Option 1,
you can use actual screenshots.

50
00:03:08.378 --> 00:03:10.408
So for example, this is what this does.

51
00:03:11.818 --> 00:03:16.898
Or you can be a little bit more creative
when you do screenshots within a design.

52
00:03:16.898 --> 00:03:22.000
So this sometimes, so when I worked
on projects where we have designers,

53
00:03:22.000 --> 00:03:24.733
they will design the app screenshots.

54
00:03:24.733 --> 00:03:29.546
So they're not actual screenshots that
they've taken on their phone, they use

55
00:03:29.546 --> 00:03:34.693
their design and they put the iPhone bezel
around it and then add some messaging.

56
00:03:34.693 --> 00:03:38.858
So this is completely fine if it's
reflective of what your app is actually

57
00:03:38.858 --> 00:03:41.891
gonna look like,
then this will possibly be device.

58
00:03:41.891 --> 00:03:45.711
And Option 3 is you can
make it quite fancy.

59
00:03:45.711 --> 00:03:50.497
There is limits to how fancy you can make
it, but if this is still indicative to

60
00:03:50.497 --> 00:03:54.301
what your app actually looks like,
you can get away with it.

61
00:03:54.301 --> 00:03:56.296
So this was an example that I saw,

62
00:03:56.296 --> 00:04:01.824
which is like they've really gone to town
with some creative design liberties.

63
00:04:01.824 --> 00:04:09.104
So we have a Figma template again for
like the minimum asset requirements.

64
00:04:11.014 --> 00:04:15.088
So this has like for
Android and for the iPhone, so

65
00:04:15.088 --> 00:04:19.846
it has some placeholders of
what you would need to create.

66
00:04:19.846 --> 00:04:21.826
And I've also listed them here.

67
00:04:23.066 --> 00:04:24.086
So the bare minimum.

68
00:04:24.086 --> 00:04:28.319
So this is the bare minimum you need to
create in order to submit your app for

69
00:04:28.319 --> 00:04:29.806
approval.

70
00:04:29.806 --> 00:04:33.796
For Android, you need an app icon,
you need a feature graphic, and

71
00:04:33.796 --> 00:04:37.136
you need between four and ten screenshots.

72
00:04:37.136 --> 00:04:40.060
And there's the sizing requirement
is really strict as well.

73
00:04:40.060 --> 00:04:44.640
So, if you're like a pixel over for
the feature graphic, it won't work.

74
00:04:45.650 --> 00:04:50.220
For the screenshots,
it is the aspect ratio that is important.

75
00:04:50.220 --> 00:04:55.580
And then for the iPhone,
you need screenshots for

76
00:04:55.580 --> 00:04:58.263
iPhone without a notch.

77
00:04:58.263 --> 00:05:03.938
You need screenshots for iPhone with
the notch, so between 2 and 10 of each.

78
00:05:03.938 --> 00:05:08.593
And with the notch,
you can choose between these dimensions.

79
00:05:08.593 --> 00:05:12.536
You can do one of them.

80
00:05:12.536 --> 00:05:15.966
So you can do two screenshots
of one of these dimensions.

81
00:05:17.776 --> 00:05:22.213
And if your app also runs an iPad and
then by default, the CreateExpoApps2,

82
00:05:22.213 --> 00:05:25.776
you also need to supply additional
screenshots for the iPad.

83
00:05:25.776 --> 00:05:29.486
I actually think that might
be mandatory these days.

84
00:05:29.486 --> 00:05:30.780
Because I remember for

85
00:05:30.780 --> 00:05:35.286
the ReactConf, I created the app store
assets for iOS and for all the iPhones.

86
00:05:35.286 --> 00:05:36.936
So iPhone with a notch,
iPhone without a notch.

87
00:05:36.936 --> 00:05:38.732
And I was like, great, submit it.

88
00:05:38.732 --> 00:05:42.922
And then it errors because I
didn't have iPad screenshots.

89
00:05:42.922 --> 00:05:44.882
So I think you do need them these days.

90
00:05:44.882 --> 00:05:47.402
So next step is testing.

91
00:05:47.402 --> 00:05:52.230
So both stores include a testing option
but the way the testing works is pretty

92
00:05:52.230 --> 00:05:57.192
different between both of them and
very different from the web.

93
00:05:57.192 --> 00:05:59.616
So this is meant for
user acceptance testing.

94
00:05:59.616 --> 00:06:03.516
So you are testing on the bundle that
will be submitted to the actual users.

95
00:06:03.516 --> 00:06:05.835
So it's not like a test
version of your app and

96
00:06:05.835 --> 00:06:08.289
then you're submitting
a different version.

97
00:06:08.289 --> 00:06:10.906
It is, that is not what it is.

98
00:06:10.906 --> 00:06:15.206
You are submitting to
your actual app bundle.

99
00:06:17.136 --> 00:06:19.829
So let's see if our test.

100
00:06:19.829 --> 00:06:27.471
If our iOS app has finished uploading.

101
00:06:27.471 --> 00:06:31.920
I forgot to trigger it,
that's embarrassing.

102
00:06:31.920 --> 00:06:37.812
So when you upload an iOS app
to either from transporter or

103
00:06:37.812 --> 00:06:41.249
from EIS into App Store Connect,

104
00:06:41.249 --> 00:06:45.446
it actually ends up here in test flight.

105
00:06:45.446 --> 00:06:48.089
So let me show you a different app.

106
00:06:54.792 --> 00:06:55.397
&gt;&gt; Kadi Kraman: There we go.
So

107
00:06:55.397 --> 00:06:58.933
the apps will show up here
in the test Flight tab.

108
00:06:58.933 --> 00:07:04.843
And then by default they
will be in internal testing.

109
00:07:04.843 --> 00:07:09.470
So internal testers are only people that
have to have access to your developer

110
00:07:09.470 --> 00:07:13.527
accounts you need they need to be
users on your developer account and

111
00:07:13.527 --> 00:07:16.030
they will just immediately have access.

112
00:07:16.030 --> 00:07:17.509
They will be added by email and

113
00:07:17.509 --> 00:07:21.161
they'll get an email saying
that a new version is ready.

114
00:07:21.161 --> 00:07:24.113
If you want to show it
to external testers,

115
00:07:24.113 --> 00:07:26.661
you need to choose a build from here.

116
00:07:26.661 --> 00:07:29.576
So I don't have a build that was valid,
but if I did,

117
00:07:29.576 --> 00:07:32.201
then I could choose a build from here.

118
00:07:32.201 --> 00:07:37.071
And it actually has to submit it to
a mini review before it's available.

119
00:07:37.071 --> 00:07:41.336
But then once I have submitted it,
you can share it via a link so

120
00:07:41.336 --> 00:07:43.066
you can have public URL.

121
00:07:43.066 --> 00:07:45.592
Or you can add people via their email, so

122
00:07:45.592 --> 00:07:49.398
they'll get an email saying that
a new app version is ready.

123
00:07:53.393 --> 00:08:00.697
&gt;&gt; Kadi Kraman: For
Android on Google we have Testing Tracks.

124
00:08:00.697 --> 00:08:05.137
So we have internal testing,
we have closed testing, and open testing.

125
00:08:05.137 --> 00:08:10.077
So internal testing is where you
can invite people via with email.

126
00:08:10.077 --> 00:08:13.788
So it has to be the email that
the user sign into Google Play,

127
00:08:13.788 --> 00:08:15.207
like on their phones.

128
00:08:16.387 --> 00:08:19.574
I think it was up to 100 people.

129
00:08:19.574 --> 00:08:23.985
And then close testing goes through
like a mini review step, but

130
00:08:23.985 --> 00:08:26.116
you can have an email or stuff.

131
00:08:26.116 --> 00:08:30.124
I don't know if there is a limit, but
you can have a much larger email list.

132
00:08:30.124 --> 00:08:34.503
And finally, open testing is your
app will be open on the play store,

133
00:08:34.503 --> 00:08:38.668
it will be available for download but
it will be tagged as in beta.

134
00:08:38.668 --> 00:08:43.765
And then finally in production when you're
ready, you will submit to production.

135
00:08:43.765 --> 00:08:49.237
This is again a note if you're using
a personal account on Android on Google.

136
00:08:49.237 --> 00:08:54.775
You need a minimum of 20 testers who
have opted in to test your app for

137
00:08:54.775 --> 00:09:00.136
at least 14 days before you can
even apply to production access.

138
00:09:00.136 --> 00:09:03.008
So this was introduced late last year,

139
00:09:03.008 --> 00:09:07.896
I think, and it only affects
individual like personal accounts.

140
00:09:07.896 --> 00:09:11.106
So if you have a business account,
you don't have this restriction.

141
00:09:11.106 --> 00:09:14.734
So there's some jokes out there about
trying to find your 20 friends with

142
00:09:14.734 --> 00:09:16.416
Android devices to test your app.

143
00:09:17.766 --> 00:09:21.091
And finally you need to
submit your app for review.

144
00:09:21.091 --> 00:09:23.461
So, this is again crazy for
use to web developer.

145
00:09:23.461 --> 00:09:25.851
By the way,
you can just deploy your website.

146
00:09:25.851 --> 00:09:30.241
This is not the case for mobile apps,
they need to be reviewed.

147
00:09:30.241 --> 00:09:33.831
So, the review is both manual and
automated.

148
00:09:33.831 --> 00:09:37.863
There are automated checks for
your app bundle, so

149
00:09:37.863 --> 00:09:44.065
it automatically It detects APIs that
use native APIs, but it is also manual.

150
00:09:44.065 --> 00:09:48.525
So it tends to be more
strict on iOS than Android.

151
00:09:48.525 --> 00:09:53.085
So if your app, for example,
requires login to access,

152
00:09:53.085 --> 00:09:57.835
you need to provide login details for
the reviewer that they

153
00:09:57.835 --> 00:10:02.404
can use to log in and
test the logged in features your app.

154
00:10:02.404 --> 00:10:06.537
And your app may be rejected for
tons of different reasons on iOS,

155
00:10:06.537 --> 00:10:10.235
especially iOS reviews sent
to be more strict in Android.

156
00:10:10.235 --> 00:10:14.456
So for example, the first time
Ii submitted the ReactConf, so

157
00:10:14.456 --> 00:10:17.734
I had a feature there that
you use a quick action.

158
00:10:17.734 --> 00:10:20.879
Similar what we did,
to open a secret modal, and

159
00:10:20.879 --> 00:10:24.459
then you can change your app icon on iOS.

160
00:10:24.459 --> 00:10:27.127
And the reviewer could see from

161
00:10:27.127 --> 00:10:32.109
the native bundle that I had
code to change the app icon.

162
00:10:32.109 --> 00:10:34.229
So it's a native API that was included,
but

163
00:10:34.229 --> 00:10:37.199
they couldn't find this
functionality in the app.

164
00:10:37.199 --> 00:10:42.106
So actually the app was rejected because
they said the app bundle includes code to

165
00:10:42.106 --> 00:10:45.936
change your app icon, but
you can't do it in the app.

166
00:10:45.936 --> 00:10:50.124
So then I had to reply saying,
you actually use quick action, so

167
00:10:50.124 --> 00:10:51.736
press and hold.

168
00:10:51.736 --> 00:10:54.816
And after a couple of hours,
it went through.

169
00:10:54.816 --> 00:10:59.397
So there's tons of things that
can make your app not go through.

170
00:10:59.397 --> 00:11:00.907
It seems a little bit random.

171
00:11:00.907 --> 00:11:04.567
Sometimes you can reply to a reviewer
if it's a misunderstanding like that.

172
00:11:04.567 --> 00:11:08.691
And sometimes it is something that you
need to actually change in the code,

173
00:11:08.691 --> 00:11:10.957
rebuild, and resubmit.

174
00:11:10.957 --> 00:11:14.529
So especially the first time you're
submitting to the App Store,

175
00:11:14.529 --> 00:11:17.159
give yourself a couple of days or
a week ideally.

176
00:11:17.159 --> 00:11:20.661
Especially since each of these
iterations can take let's say half

177
00:11:20.661 --> 00:11:24.672
a day if you're lucky, but it can take
a couple of days if the queues are big.

