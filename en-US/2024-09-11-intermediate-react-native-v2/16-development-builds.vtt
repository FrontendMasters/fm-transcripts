WEBVTT

1
00:00:00.000 --> 00:00:03.920
&gt;&gt; Kadi Kraman: So, so
far we have been building in Expo Go.

2
00:00:03.920 --> 00:00:06.890
This is actually a pretty common workflow.

3
00:00:06.890 --> 00:00:08.294
So when you start your new app,

4
00:00:08.294 --> 00:00:11.360
you open it in Expo Go because
you can get started instantly.

5
00:00:11.360 --> 00:00:14.670
You might install some libraries and
then build some UI.

6
00:00:14.670 --> 00:00:18.017
And sooner or later, and
usually it's sooner,

7
00:00:18.017 --> 00:00:23.515
you might want to add something that
isn't possible to do with Expo Go.

8
00:00:23.515 --> 00:00:25.885
So recall Expo Go is a sandbox.

9
00:00:25.885 --> 00:00:29.375
So a React Native app
consists of two parts.

10
00:00:29.375 --> 00:00:31.014
So we have our JavaScript bundle.

11
00:00:31.014 --> 00:00:36.112
So this is the thing that we're
live reloading with npx-expo-start.

12
00:00:36.112 --> 00:00:38.760
And then we have our native app bundle.

13
00:00:38.760 --> 00:00:44.347
So this is the part that's actually
installable on your iOS or Android phone.

14
00:00:45.857 --> 00:00:50.367
So currently, our JavaScript bundle
is the MPEG expert start and

15
00:00:50.367 --> 00:00:53.077
the native app bundle has been Expo Go.

16
00:00:54.167 --> 00:00:57.109
But Expo Go is a pre-built app.

17
00:00:57.109 --> 00:01:00.729
We've downloaded it from the App Stores,
so

18
00:01:00.729 --> 00:01:05.597
it has a finite amount of
native libraries pre-installed.

19
00:01:05.597 --> 00:01:10.850
Admittedly, there's quite a lot that
you can do to get started with.

20
00:01:10.850 --> 00:01:15.384
In fact, a good reference is
if you go to the Expo docs and

21
00:01:15.384 --> 00:01:21.481
look at the Expo SDK, then most of these
libraries are included in Expo Go.

22
00:01:21.481 --> 00:01:23.849
So there's quite a lot you
can use to get started with.

23
00:01:23.849 --> 00:01:26.096
But there's also things
that you can't use.

24
00:01:26.096 --> 00:01:30.542
So, anything that isn't already
pre-bundled in Expo Go.

25
00:01:30.542 --> 00:01:35.317
Also, you can't use different
versions of libraries than what is

26
00:01:35.317 --> 00:01:36.943
available in Expo Go.

27
00:01:36.943 --> 00:01:40.339
You also can't use libraries
like Inner Purchase or

28
00:01:40.339 --> 00:01:44.741
Reactive VisionCamera or
analytics will be replicated firebase or

29
00:01:44.741 --> 00:01:48.695
quick actions because they
require native configuration.

30
00:01:50.005 --> 00:01:55.612
And another reason why migrating
off of Expert Go sooner

31
00:01:55.612 --> 00:02:00.620
rather than later might be
useful is that on iOS you

32
00:02:00.620 --> 00:02:05.878
can only use the latest
published Expo SDK version.

33
00:02:05.878 --> 00:02:12.231
So right now we are on Expo SDK 51.

34
00:02:12.231 --> 00:02:16.319
So Expo Go supports
exactly one SDK version.

35
00:02:16.319 --> 00:02:17.605
So it will be the latest.

36
00:02:17.605 --> 00:02:20.350
So once SDK 52 gets published,

37
00:02:20.350 --> 00:02:25.363
then we'll upload a new version
of Expo Go to the App Stores.

38
00:02:25.363 --> 00:02:30.336
And it will only load projects
that are using Expo SDK 52.

39
00:02:30.336 --> 00:02:33.556
So if you are using Expo Go for
development,

40
00:02:33.556 --> 00:02:38.255
that means that you would need to
immediately upgrade your app in

41
00:02:38.255 --> 00:02:41.575
order to continue
developing on the iPhone.

42
00:02:41.575 --> 00:02:47.983
I say on the iPhone because
we have this expert.dev/go,

43
00:02:47.983 --> 00:02:53.344
this little page that lets
you install Expo Go for

44
00:02:53.344 --> 00:02:56.110
all their SDK versions.

45
00:02:56.110 --> 00:03:01.339
The problem is this doesn't
work on physical iOS phones.

46
00:03:01.339 --> 00:03:03.021
And that is another Apple restriction.

47
00:03:03.021 --> 00:03:07.557
Apple doesn't allow you to install
arbitrary apps on your phone

48
00:03:07.557 --> 00:03:09.826
without going to the App Store.

49
00:03:09.826 --> 00:03:15.110
And you can't install all the versions
of apps from the App Store.

50
00:03:15.110 --> 00:03:18.568
So that's why if I go to
SDK 50 on iOS device,

51
00:03:18.568 --> 00:03:22.220
it actually tells you
that it's not available.

52
00:03:22.220 --> 00:03:27.157
So those are the two main
restrictions of using Expo Go.

53
00:03:27.157 --> 00:03:31.941
And why development builds are awesome.

54
00:03:31.941 --> 00:03:34.465
So what is a development build?

55
00:03:34.465 --> 00:03:38.837
Think of it as your own customizable
version of Expo Go with just

56
00:03:38.837 --> 00:03:44.384
native libraries installed that you
actually need for your project.

57
00:03:44.384 --> 00:03:48.692
So, we're going to continue building
the JavaScript bundle as before,

58
00:03:48.692 --> 00:03:53.276
but we're just swapping out the native app
bundle from Expo Go to the one that we

59
00:03:53.276 --> 00:03:54.400
build ourselves.

60
00:03:54.400 --> 00:03:58.371
I guess the important thing to
mention is that you can get

61
00:03:58.371 --> 00:04:03.118
around building this app locally
if you build in the cloud with EI.

62
00:04:03.118 --> 00:04:07.050
But it is really useful to just
know how to build it locally.

63
00:04:07.050 --> 00:04:12.102
It is possible, in case you want
to debug something locally or

64
00:04:12.102 --> 00:04:14.929
you don't have internet access.

65
00:04:14.929 --> 00:04:18.362
You want to just build on a simulator or
emulator or

66
00:04:18.362 --> 00:04:20.996
if you want to work on a native module.

