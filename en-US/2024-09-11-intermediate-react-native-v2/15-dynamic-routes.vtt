WEBVTT

1
00:00:00.200 --> 00:00:04.662
&gt;&gt; Kadi Kraman: Okay, so the last screen
that we are going to add is the UI for

2
00:00:04.662 --> 00:00:07.010
a plant's details page.

3
00:00:07.010 --> 00:00:08.840
So it will look like this.

4
00:00:08.840 --> 00:00:12.117
So it will be when we tap on a plant,

5
00:00:12.117 --> 00:00:16.525
it will open a new page
with the plant details,

6
00:00:16.525 --> 00:00:20.933
and it will have a button
to water your plant and

7
00:00:20.933 --> 00:00:25.138
I added a little button
to delete it as well.

8
00:00:26.648 --> 00:00:30.368
So for this,
we are going to use dynamic routes.

9
00:00:30.368 --> 00:00:32.818
So this is something that
we haven't done before.

10
00:00:32.818 --> 00:00:36.288
So our routing in our app
currently looks like this.

11
00:00:36.288 --> 00:00:39.068
So we have our index route.

12
00:00:39.068 --> 00:00:40.813
This is the home tab.

13
00:00:40.813 --> 00:00:42.863
Then we have our new route.

14
00:00:42.863 --> 00:00:45.173
So this is the modal for
creating a new plant.

15
00:00:46.213 --> 00:00:50.448
We have our profile page, so
this is the profile tab, and

16
00:00:50.448 --> 00:00:52.753
we have our onboarding modal.

17
00:00:54.213 --> 00:00:58.772
What we want to add is a new
route that looks like this, so

18
00:00:58.772 --> 00:01:03.331
we want a slash plants and
we want a dynamic plant id, and

19
00:01:03.331 --> 00:01:06.836
this will render the plant D details page.

20
00:01:10.364 --> 00:01:12.040
&gt;&gt; Kadi Kraman: So how do we do this?

21
00:01:13.970 --> 00:01:20.769
Currently, we have our tabs and our
homepage is rendered as an index fruit and

22
00:01:20.769 --> 00:01:25.161
we want to convert this
index fruit into a stack and

23
00:01:25.161 --> 00:01:31.333
in the intro course we did a similar
thing with the counter page where we

24
00:01:31.333 --> 00:01:37.019
added a history screen where
we converted it into a stack.

25
00:01:37.019 --> 00:01:43.405
So converting an index page into
a stack is a little bit different,

26
00:01:43.405 --> 00:01:48.093
because we can't create
a folder called index.

27
00:01:48.093 --> 00:01:49.273
That wouldn't work.

28
00:01:49.273 --> 00:01:51.833
So we have to use another grouping root.

29
00:01:54.183 --> 00:02:00.116
So in this tab folder, let's create
another folder and we call it Home.

30
00:02:02.346 --> 00:02:06.449
Now let's move our index file into home.

31
00:02:10.618 --> 00:02:14.556
&gt;&gt; Kadi Kraman: And
we'll add a little layout file here.

32
00:02:16.456 --> 00:02:21.371
So it will be _layout.tsx so

33
00:02:21.371 --> 00:02:25.105
this will be in home and

34
00:02:25.105 --> 00:02:30.808
export default function layout,

35
00:02:30.808 --> 00:02:35.330
and we'll render a stack,

36
00:02:35.330 --> 00:02:39.088
and a stack.screen.

37
00:02:39.088 --> 00:02:42.609
And Screen name is index.

38
00:02:45.439 --> 00:02:46.863
I forgot to return this.

39
00:02:57.312 --> 00:03:00.241
&gt;&gt; Kadi Kraman: Okay,
so now when I reload.

40
00:03:00.241 --> 00:03:05.051
I'm getting a warning saying that
there is no root named index.

41
00:03:05.051 --> 00:03:09.711
That is from the layout
file in our tabs folder.

42
00:03:11.241 --> 00:03:15.341
And that is because, indeed,
there is no screen called index.

43
00:03:15.341 --> 00:03:17.231
We are moved it into home.

44
00:03:17.231 --> 00:03:24.663
So we can rename this index into home, so
it points into our home grouping route.

45
00:03:24.663 --> 00:03:27.513
[COUGH] So now in this home tab,

46
00:03:27.513 --> 00:03:32.757
we are rendering a stack of
a single screen, and yeah,

47
00:03:32.757 --> 00:03:39.953
you can actually see it because we have
this duplicate header issue again.

48
00:03:41.424 --> 00:03:46.401
And again, this is quite common,
we want to hide one of the headers, and

49
00:03:46.401 --> 00:03:50.414
in this case, we actually want
to hide the parent header.

50
00:03:50.414 --> 00:03:55.661
And the reason being is that the details
page is going to be inside this,

51
00:03:55.661 --> 00:04:00.072
so where this index screen is,
this will be the header.

52
00:04:00.072 --> 00:04:05.032
That will be shared by all the screens
that are in this home stack.

53
00:04:05.032 --> 00:04:10.965
So if we were to hide this index header,
then we would always see the home header,

54
00:04:10.965 --> 00:04:14.042
even if we were in the plant details page.

55
00:04:15.312 --> 00:04:18.932
So fortunately,
there will be a few more steps to do that.

56
00:04:20.044 --> 00:04:28.354
But let's go to the layout file where
we have our header right and copy this.

57
00:04:30.284 --> 00:04:36.083
And then go to the layout file inside and

58
00:04:36.083 --> 00:04:40.550
go to options and add it here.

59
00:04:40.550 --> 00:04:42.760
So we'll need to update all the imports.

60
00:04:42.760 --> 00:04:47.888
So we need link pressable and design.

61
00:04:51.534 --> 00:04:55.710
&gt;&gt; Kadi Kraman: So this one,
it is referred to do named imports.

62
00:04:55.710 --> 00:04:57.470
It's better for bundling.

63
00:04:57.470 --> 00:04:59.769
So theme, there we go.

64
00:05:01.390 --> 00:05:02.850
Okay, so this is inside.

65
00:05:02.850 --> 00:05:06.978
Actually, we don't need a margin
that's this big anymore.

66
00:05:06.978 --> 00:05:11.950
So maybe change it to.

67
00:05:11.950 --> 00:05:13.050
Actually, do we need a margin?

68
00:05:13.050 --> 00:05:13.550
Let's try it.

69
00:05:23.855 --> 00:05:27.127
&gt;&gt; Kadi Kraman: Okay, so this actually
looks good without the margin as well.

70
00:05:28.927 --> 00:05:32.127
Okay, and
then let's give it a name as well.

71
00:05:34.787 --> 00:05:39.617
So let's do title of home.

72
00:05:41.359 --> 00:05:44.959
Okay, so we recreated our home header.

73
00:05:44.959 --> 00:05:49.989
Now we can hide it from
the tabs layout file.

74
00:05:49.989 --> 00:05:54.589
So, from here, home,

75
00:05:54.589 --> 00:06:00.343
we can do header shown false.

76
00:06:05.386 --> 00:06:10.464
&gt;&gt; Kadi Kraman: Okay, so one thing to draw
your attention to, recall when I said

77
00:06:10.464 --> 00:06:16.500
that the main entry point to your expert
router app is gonna be an index file.

78
00:06:16.500 --> 00:06:20.623
It's gonna be the route, level,
index file, there's slash route.

79
00:06:20.623 --> 00:06:23.143
And we don't have an index file here.

80
00:06:24.143 --> 00:06:27.213
We don't even have
an index file in our tabs.

81
00:06:27.213 --> 00:06:30.433
Our index file is inside here, home.

82
00:06:30.433 --> 00:06:35.433
So if I copy the file path,
copy relative path.

83
00:06:37.733 --> 00:06:41.409
So this is the relative
path of our index file.

84
00:06:41.409 --> 00:06:47.209
But recall that app, this is just our
route, it's not included in the href.

85
00:06:47.209 --> 00:06:50.519
All of the grouping routes aren't
included, they are just for grouping.

86
00:06:51.919 --> 00:06:54.859
And index is just the slash root.

87
00:06:54.859 --> 00:07:00.089
So this still translates to the slash
root and that is the main entry point.

88
00:07:00.089 --> 00:07:03.884
That's why it is still the main
entry point for our app.

89
00:07:11.110 --> 00:07:15.945
&gt;&gt; Kadi Kraman: And to do a dynamic route,
we can use angle braces.

90
00:07:15.945 --> 00:07:21.674
So what we wanted to do is, so we wanted
to have a plant slash [INAUDIBLE] so

91
00:07:21.674 --> 00:07:26.306
the only way to add this
segment is to add a folder.

92
00:07:26.306 --> 00:07:29.256
So let's add a folder in home.

93
00:07:29.256 --> 00:07:32.666
So this does won't have braces,
so this will be a plant.

94
00:07:33.916 --> 00:07:36.236
I think I just accidentally
created a file.

95
00:07:38.366 --> 00:07:40.861
So we want a new folder called plant.

96
00:07:43.142 --> 00:07:49.387
And let's create our dynamic root so

97
00:07:49.387 --> 00:07:54.252
this will be plant ID.TSX.

98
00:07:54.252 --> 00:07:57.242
And this one so let's export.

99
00:07:58.252 --> 00:08:04.615
Do I have a nice screen
with a default layout.

100
00:08:04.615 --> 00:08:05.795
I don't think I do.

101
00:08:05.795 --> 00:08:08.005
Okay, let's type it out.

102
00:08:08.005 --> 00:08:13.527
Export default Plant screen.

103
00:08:17.381 --> 00:08:22.551
&gt;&gt; Kadi Kraman: Export
default function Plant screen

104
00:08:22.551 --> 00:08:28.211
let's just return a view with some text.

105
00:08:30.131 --> 00:08:33.300
So import view and text from React Native.

106
00:08:38.192 --> 00:08:38.692
&gt;&gt; Kadi Kraman: Okay.

107
00:08:41.631 --> 00:08:43.658
I guess so for each of these plants,

108
00:08:43.658 --> 00:08:46.571
we have our components
folder with the plant card.

109
00:08:48.261 --> 00:08:52.691
So for the plant card,
we wanna link to the plant details page.

110
00:08:54.362 --> 00:09:02.538
&gt;&gt; Kadi Kraman: So here,
let's convert this view into a pressable.

111
00:09:06.520 --> 00:09:09.307
&gt;&gt; Kadi Kraman: And
let's also wrap it in a link.

112
00:09:10.427 --> 00:09:11.839
So link is from Xperuta.

113
00:09:15.839 --> 00:09:23.224
&gt;&gt; Kadi Kraman: And this href is going
to be plants slash the Plant ID.

114
00:09:24.664 --> 00:09:26.640
And we'll also need as child.

115
00:09:29.088 --> 00:09:37.004
&gt;&gt; Kadi Kraman: Okay, so
this should already, Plants ID.

116
00:09:37.004 --> 00:09:38.794
There we go.

117
00:09:38.794 --> 00:09:42.353
So this is already over
opening this plant screen.

118
00:09:42.353 --> 00:09:47.203
So the question is, how do we get
our plant id from the dynamic route?

119
00:09:48.933 --> 00:09:55.639
So if we go to our plants
screen we can use,

120
00:09:55.639 --> 00:10:00.301
we can get the params from.

121
00:10:00.301 --> 00:10:07.395
Use local search params, so
if I console.log what this renders.

122
00:10:16.257 --> 00:10:22.928
&gt;&gt; Kadi Kraman: It's gonna render four,
three, two, one.

123
00:10:22.928 --> 00:10:28.256
So this is how you get
the dynamic parameter from here.

124
00:10:28.256 --> 00:10:33.296
So notice that this parameter is called
the same as what I call this in the races.

125
00:10:33.296 --> 00:10:34.726
So I can call this whatever I'd like.

126
00:10:36.716 --> 00:10:40.410
And another thing that I
wanted to show you is,

127
00:10:40.410 --> 00:10:44.816
how to dynamically add,
change this header.

128
00:10:44.816 --> 00:10:49.654
So by default,
we would like this header to be undefined,

129
00:10:49.654 --> 00:10:54.766
so do an empty string rather
than this dynamic root.

130
00:10:54.766 --> 00:10:58.354
So in the home layout file,

131
00:10:58.354 --> 00:11:02.566
let's define a stack screen and

132
00:11:02.566 --> 00:11:07.249
name, so it is going to be PlantId.

133
00:11:07.249 --> 00:11:12.742
And let's do options, and let's do header

134
00:11:12.742 --> 00:11:17.492
it's called title actually title and

135
00:11:17.492 --> 00:11:20.914
let's do an empty string.

136
00:11:20.914 --> 00:11:26.684
So by default we don't render anything and

137
00:11:26.684 --> 00:11:31.653
then in this plant screen we could use

138
00:11:31.653 --> 00:11:36.709
a use effect
&gt;&gt; Kadi Kraman: So

139
00:11:36.709 --> 00:11:42.016
make sure you add an empty
array to the end to begin with.

140
00:11:43.016 --> 00:11:46.416
And we want to use navigation
from use navigation.

141
00:11:46.416 --> 00:11:53.681
So const navigation use navigation.

142
00:11:53.681 --> 00:11:57.886
And then we can do navigation set options.

143
00:11:57.886 --> 00:12:03.742
So this can set the screen
options of the current screen,

144
00:12:03.742 --> 00:12:08.143
so we can set the title
to be the plant name.

145
00:12:11.252 --> 00:12:14.962
&gt;&gt; Kadi Kraman: So now by default
the plant's going to be undefined,

146
00:12:14.962 --> 00:12:18.210
the plant name is going
to be an empty string.

147
00:12:18.210 --> 00:12:25.002
But actually, let me just,
to make sure that we are being dynamic,

148
00:12:25.002 --> 00:12:29.188
let's use the params, or is it plant ID?

149
00:12:31.350 --> 00:12:32.326
&gt;&gt; Kadi Kraman: There you go.

150
00:12:32.326 --> 00:12:37.476
So this is plant with ID four, three,
and we're incrementing numbers here.

151
00:12:37.476 --> 00:12:39.096
So we're getting this correctly.

152
00:12:41.436 --> 00:12:45.876
Okay, so I think that's all
the interesting things in this plant page.

153
00:12:45.876 --> 00:12:52.156
So now that we've looked through those,
let's actually copy this file.

154
00:12:52.156 --> 00:12:53.547
I think I did have it here somewhere.

155
00:12:56.041 --> 00:12:56.986
&gt;&gt; Kadi Kraman: There we go.

156
00:12:56.986 --> 00:13:01.075
So I made this copyable because again,
I don't really want to live code this.

157
00:13:02.455 --> 00:13:05.845
But I've pointed out all
the interesting things, I think.

158
00:13:05.845 --> 00:13:09.295
So you can just copy the entire
contents of the file.

159
00:13:10.305 --> 00:13:13.595
I've forgotten to install
my favorite library.

160
00:13:13.595 --> 00:13:17.232
So for
this UI where we're formatting the date,

161
00:13:17.232 --> 00:13:21.322
actually this NA is going to
be a formative timestamp.

162
00:13:23.242 --> 00:13:27.732
For formatting times you could
use state functions or moment.

163
00:13:27.732 --> 00:13:29.692
I think it's popular as well.

164
00:13:29.692 --> 00:13:31.892
I tend to use state functions.

165
00:13:31.892 --> 00:13:34.712
I think most projects will
have to deal with dimes.

166
00:13:34.712 --> 00:13:35.922
I use this.

167
00:13:35.922 --> 00:13:38.952
It's just a nice utility library
if we go to the documentation.

168
00:13:40.595 --> 00:13:43.085
What I usually use is the format.

169
00:13:44.865 --> 00:13:49.476
So this lets you format a date
however you want, and actually,

170
00:13:49.476 --> 00:13:54.705
another handy thing is you can do
a format distance at a strict or to now.

171
00:13:54.705 --> 00:13:57.595
So this will give you in words a distance.

172
00:13:57.595 --> 00:14:00.815
So it will say about ten minutes ago and
in a strict one,

173
00:14:00.815 --> 00:14:03.444
we'll say ten minutes ago.

174
00:14:03.444 --> 00:14:07.534
So there's lots of panda utilities there
because working with dates is a nightmare.

175
00:14:09.154 --> 00:14:11.440
So let's make sure we install this.

176
00:14:21.744 --> 00:14:23.633
&gt;&gt; Kadi Kraman: And npx expo start.

177
00:14:28.563 --> 00:14:30.711
&gt;&gt; Kadi Kraman: And restart, reload.

178
00:14:30.711 --> 00:14:36.233
So hopefully, there we go.

179
00:14:36.233 --> 00:14:40.583
So we have some plant details UI and

180
00:14:40.583 --> 00:14:45.239
I should be able to water this plant.

181
00:14:46.259 --> 00:14:50.998
So you can see that this is where our
timestamp comes in so we have a last water

182
00:14:50.998 --> 00:14:56.429
timestamp now, and let me just refresh to
make sure that this is persisted, lovely.

183
00:14:56.429 --> 00:15:01.537
So refreshed, but this is still
read from local PC storage and

184
00:15:01.537 --> 00:15:04.396
I should be able to also delete it.

185
00:15:04.396 --> 00:15:07.636
So I think I added a little
confirmation to delete it.

186
00:15:07.636 --> 00:15:10.649
And then it navigates back,
and it's disappeared.

