WEBVTT

1
00:00:00.000 --> 00:00:04.625
The last topic I wanted to cover
is what you actually need to do to

2
00:00:04.625 --> 00:00:07.171
deploy to the App and Play stores.

3
00:00:07.171 --> 00:00:08.709
So you've finished building your app.

4
00:00:08.709 --> 00:00:10.109
It's ready to be published.

5
00:00:10.109 --> 00:00:17.930
What are the actual steps you need to
take to go from here to your end users?

6
00:00:17.930 --> 00:00:21.812
The first thing you need is
to get a developer account.

7
00:00:21.812 --> 00:00:25.699
So both Apple and
Google need a developer account, and

8
00:00:25.699 --> 00:00:31.633
you have a choice between an individual
developer account and a business account.

9
00:00:31.633 --> 00:00:36.263
If you sign up for a business you need to
provide additional information to prove

10
00:00:36.263 --> 00:00:37.863
that you own the business.

11
00:00:37.863 --> 00:00:42.422
So it's tempting to then use
individual accounts, but

12
00:00:42.422 --> 00:00:47.466
something that you should be wary of is,
due to regulations,

13
00:00:47.466 --> 00:00:51.734
if you charge for your apps,
either for downloads or

14
00:00:51.734 --> 00:00:56.196
in app purchases,
then the address registered on your

15
00:00:56.196 --> 00:01:01.056
account will be made public on the App and
Play Store pages.

16
00:01:01.056 --> 00:01:06.477
And there's enforcement that you
basically have to use your legal address.

17
00:01:06.477 --> 00:01:08.061
So it's kind of a pain for

18
00:01:08.061 --> 00:01:11.614
individual developers if your
account is in your name.

19
00:01:11.614 --> 00:01:18.256
And so, for example, on Google, when you
sign up for a Google Developer account.

20
00:01:18.256 --> 00:01:23.868
So this is a one time fee of $25,
which is great to get lifetime access.

21
00:01:23.868 --> 00:01:27.232
But when you sign up as
an individual developer,

22
00:01:27.232 --> 00:01:31.594
you need to show your ID, so
your passport or driving license.

23
00:01:31.594 --> 00:01:34.014
And also you need to prove your address.

24
00:01:34.014 --> 00:01:37.768
So literally your rental agreement or
your mortgage.

25
00:01:37.768 --> 00:01:40.867
And it takes a couple of
days to come back, and

26
00:01:40.867 --> 00:01:43.159
this is the address that you use.

27
00:01:43.159 --> 00:01:45.091
So then if you have
a paid app on Google Pay,

28
00:01:45.091 --> 00:01:47.150
there's the address that will make public.

29
00:01:47.150 --> 00:01:49.057
So this is something to be wary of.

30
00:01:49.057 --> 00:01:53.390
So that's why if at all possible,
if you're going to charge for

31
00:01:53.390 --> 00:01:56.534
your apps,
you need to use a company account.

32
00:01:56.534 --> 00:02:02.514
So if you do any limited company,
then you can use a PO box, for example.

33
00:02:03.579 --> 00:02:07.486
&gt;&gt; Kadi Kraman: For iOS, you need to sign
up for an Apple Developer Program, so

34
00:02:07.486 --> 00:02:10.804
this is more expensive, and
it is a subscription, so

35
00:02:10.804 --> 00:02:13.049
it comes with an annual $99 fee.

36
00:02:13.049 --> 00:02:15.708
And the difference between Apple and
Google is, for Google,

37
00:02:15.708 --> 00:02:19.101
you only need the account when you're
actually ready to publish to the users.

38
00:02:19.101 --> 00:02:21.988
Whereas for Apple,
you need an account, as you've seen,

39
00:02:21.988 --> 00:02:25.063
just to generate the certificates
to run on a physical device.

40
00:02:25.063 --> 00:02:29.923
Next up, you need to create
the app that you want to deploy.

41
00:02:29.923 --> 00:02:34.630
And one thing to note here is that
the app that you deploy to users is

42
00:02:34.630 --> 00:02:36.868
actually a different format.

43
00:02:36.868 --> 00:02:38.695
So it's signed differently.

44
00:02:38.695 --> 00:02:40.835
But it's also a different,

45
00:02:40.835 --> 00:02:45.569
more optimized file than the one
that you use for development.

46
00:02:45.569 --> 00:02:51.749
So for EAS, I can actually do,
here's one I built earlier.

47
00:02:53.156 --> 00:03:00.171
&gt;&gt; Kadi Kraman: So I've done a Play Store
build, so this is an example that I did,

48
00:03:00.171 --> 00:03:05.403
so I've done an internal
distribution build for

49
00:03:05.403 --> 00:03:10.910
Android and
I've done a Android Play Store build.

50
00:03:10.910 --> 00:03:15.510
So this one, it lets me install it
directly, and actually if I download

51
00:03:15.510 --> 00:03:20.837
it,
&gt;&gt; Kadi Kraman: You

52
00:03:20.837 --> 00:03:27.949
will see that it is an APK file type,
whereas the Play Store build,

53
00:03:27.949 --> 00:03:32.775
So this is what we deliver
to the Play Stores,

54
00:03:32.775 --> 00:03:37.982
you see it doesn't actually
give me the option to

55
00:03:37.982 --> 00:03:43.443
download on the device,
to install it on a device.

56
00:03:43.443 --> 00:03:48.796
But then if I download it can,
it is an AAB format.

57
00:03:48.796 --> 00:03:51.979
So AAB stands for Android app bundle and

58
00:03:51.979 --> 00:03:57.009
it is something that you can't
directly install on a device.

59
00:03:57.009 --> 00:04:04.383
And basically, what happens is
that you upload this to Google and

60
00:04:04.383 --> 00:04:11.638
then Google generates APKs from it for
different device types.

61
00:04:11.638 --> 00:04:15.430
So one thing that you notice
that this APK is massive, and

62
00:04:15.430 --> 00:04:20.250
I think people who start building
Android apps, especially with Expo,

63
00:04:20.250 --> 00:04:25.009
they'll be, no, my Android app is 100 MB,
that is terrible.

64
00:04:25.009 --> 00:04:30.545
But this is not an accurate representation
of how large your app is going to

65
00:04:30.545 --> 00:04:35.811
be in your end users, because firstly,
the optimized format is AAB,

66
00:04:35.811 --> 00:04:40.031
and the actual,
downloaded size will be even smaller.

67
00:04:40.031 --> 00:04:45.418
I think I have a page for
this, where I did a test,

68
00:04:45.418 --> 00:04:48.710
so explore android app size.

69
00:04:48.710 --> 00:04:53.871
Yeah, so I did a test for
this, so this was in SDK 50,

70
00:04:53.871 --> 00:05:00.955
but the AAB was 27 megabytes, and
then when I uploaded it to Google Play.

71
00:05:00.955 --> 00:05:06.384
The estimated download size was
actually closer to 11, 12 megabytes.

72
00:05:06.384 --> 00:05:11.154
So you won't know how big your Android is
going to be until it's actually downloaded

73
00:05:11.154 --> 00:05:12.173
to the end users.

74
00:05:12.173 --> 00:05:16.928
So don't be terrified when you see
a very large APK during debug or

75
00:05:16.928 --> 00:05:18.581
during development.

76
00:05:23.598 --> 00:05:28.599
&gt;&gt; Kadi Kraman: And then it's the same for
iOS, so the internal distribution build

77
00:05:28.599 --> 00:05:34.929
will be installable on a device, but then
the iOS App Store build completely isn't.

78
00:05:34.929 --> 00:05:39.277
It is only for
submitting to the App Stores, and

79
00:05:39.277 --> 00:05:44.725
you actually see, okay,
let me see what the next part was.

80
00:05:48.250 --> 00:05:49.080
&gt;&gt; Kadi Kraman: Okay, and

81
00:05:49.080 --> 00:05:54.163
then the next part is uploading
the production app to the stores.

82
00:05:54.163 --> 00:05:58.297
Now, this seems trivial, but
for one of the platforms,

83
00:05:58.297 --> 00:06:01.066
it is actually harder than you think.

84
00:06:01.066 --> 00:06:08.051
So, let me show you what the Play and
App Stores look like.

85
00:06:08.051 --> 00:06:10.974
So I just wanted to show you
the UI of Google Play Console.

86
00:06:10.974 --> 00:06:15.989
So on Android,
if you're ready to release your app,

87
00:06:15.989 --> 00:06:22.128
you would go to Google Play Console and
you would create a new app.

88
00:06:22.128 --> 00:06:27.144
So in this case we will do, let's say,

89
00:06:27.144 --> 00:06:32.160
Plantly, and we'll say it's an app,

90
00:06:32.160 --> 00:06:36.884
it's free, yes, and we create it.

91
00:06:36.884 --> 00:06:43.157
This is the minimal that you have,
so now I've created my app.

92
00:06:43.157 --> 00:06:47.592
And then the first build that we do is, so

93
00:06:47.592 --> 00:06:53.072
many options here,
it will be internal testing,

94
00:06:53.072 --> 00:06:57.636
yes, you would create a new release, and

95
00:06:57.636 --> 00:07:03.516
then from here,
&gt;&gt; Kadi Kraman: Right,

96
00:07:03.516 --> 00:07:06.465
so this was the signing
key that we talked about.

97
00:07:06.465 --> 00:07:10.281
So this one actually asks you if you
want to manage your own signing key or

98
00:07:10.281 --> 00:07:11.628
use Google managed key.

99
00:07:11.628 --> 00:07:13.434
So Google managed always.

100
00:07:20.719 --> 00:07:25.773
&gt;&gt; Kadi Kraman: Okay, weirdly,
I've pressed this, but I think it's

101
00:07:25.773 --> 00:07:31.595
doing something in the background so
it's not progressing.

102
00:07:31.595 --> 00:07:32.806
There we go, it did work.

103
00:07:32.806 --> 00:07:36.506
Okay, so now,
the first build that you do on Android,

104
00:07:36.506 --> 00:07:39.330
you would upload your APK here manually.

105
00:07:39.330 --> 00:07:44.304
So you would build it locally or
in EAS, download it, and

106
00:07:44.304 --> 00:07:49.502
then from my Downloads,
you would upload your AAB to here.

107
00:07:49.502 --> 00:07:51.631
And then you would make it public for
internal testing.

108
00:07:51.631 --> 00:07:56.221
I won't go through the whole flow,
but this is how it would work.

109
00:07:56.221 --> 00:08:03.901
For the App Store, you can actually
use EAS Submit straight away.

110
00:08:03.901 --> 00:08:07.262
So there's two ways to
deploy to the App Store.

111
00:08:07.262 --> 00:08:09.671
Well, actually three ways.

112
00:08:09.671 --> 00:08:12.456
You can deploy via xcode.

113
00:08:12.456 --> 00:08:16.799
You can use,
if you go to the Mac App Store,

114
00:08:16.799 --> 00:08:22.249
there is an app called Transporter,
that's right.

115
00:08:22.249 --> 00:08:25.984
There's a whole separate app just for

116
00:08:25.984 --> 00:08:31.478
transporting your app to the App Store,
Transporter.

117
00:08:31.478 --> 00:08:36.554
There it is, so this app and
literally all it does is that you'll

118
00:08:36.554 --> 00:08:41.636
pull your app bundle on here,
and then it will publish against.

119
00:08:41.636 --> 00:08:45.744
It will upload it to Test Flight
on your Apple Developer account.

120
00:08:48.510 --> 00:08:51.955
&gt;&gt; Kadi Kraman: But you could do, eas, so

121
00:08:51.955 --> 00:08:57.759
if I go to my test app
that I did this morning,

122
00:09:01.219 --> 00:09:04.511
&gt;&gt; Kadi Kraman: plantly-test, so

123
00:09:04.511 --> 00:09:08.193
you can do eas submit.

124
00:09:10.457 --> 00:09:13.706
&gt;&gt; Kadi Kraman: And
this is a totally free service.

125
00:09:15.879 --> 00:09:17.493
&gt;&gt; Kadi Kraman: There you go.

126
00:09:17.493 --> 00:09:22.957
So I want to do iOS, and actually you
can either submit from a local build or

127
00:09:22.957 --> 00:09:26.041
from EAS, so if I select a build from EAS,

128
00:09:26.041 --> 00:09:29.942
this was actually a build
that I built this morning.

129
00:09:29.942 --> 00:09:35.284
So this was the one that we looked
at on EAS, so I'll do this.

130
00:09:35.284 --> 00:09:38.704
It's making me log in to
my Apple Developer account,

131
00:09:38.704 --> 00:09:41.525
checking that the bundle ID is registered.

132
00:09:41.525 --> 00:09:46.235
And you can see that this actually,

133
00:09:46.235 --> 00:09:53.300
it will create the app for
me on the App Store Connect.

134
00:09:53.300 --> 00:09:58.229
So if I go to Apps, I have some
example apps here, but there we go, so

135
00:09:58.229 --> 00:10:03.949
it's actually created this app for
me automatically the first time I submit.

136
00:10:03.949 --> 00:10:09.587
And the name of this app will be the same
name that you use in your App.json.

137
00:10:12.913 --> 00:10:15.356
&gt;&gt; Kadi Kraman: So
once you've done this for the first time,

138
00:10:15.356 --> 00:10:19.744
now you can use the Transporter app if you
want to, or you can just use EAS submit.

