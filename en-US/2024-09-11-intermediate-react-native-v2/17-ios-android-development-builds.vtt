WEBVTT

1
00:00:00.000 --> 00:00:02.827
&gt;&gt; Kadi Kraman: So to move from
Expo Go to development builds,

2
00:00:02.827 --> 00:00:06.380
we first need to install
the expo-dev-client package.

3
00:00:10.668 --> 00:00:14.118
&gt;&gt; Kadi Kraman: And actually what
this does is if I open my dev menu.

4
00:00:14.118 --> 00:00:18.970
So it's a package that brings this to

5
00:00:18.970 --> 00:00:23.515
your app build, so this dev menu.

6
00:00:23.515 --> 00:00:27.820
So this dev menu is part of Expo Go, but
if we want it in our development build,

7
00:00:27.820 --> 00:00:29.763
we need to install it as a library.

8
00:00:29.763 --> 00:00:30.605
So that's what we're doing.

9
00:00:35.234 --> 00:00:39.668
&gt;&gt; Kadi Kraman: So
let's do npx expo install expo-dev-client.

10
00:00:44.578 --> 00:00:48.696
&gt;&gt; Kadi Kraman: So now we need
to generate our native projects.

11
00:00:48.696 --> 00:00:54.797
So if we look at our app currently,
we only have JavaScript code.

12
00:00:54.797 --> 00:00:58.390
So everything we have is just
JavaScript and some assets.

13
00:00:58.390 --> 00:01:01.032
And if you've ever created
a React Native Project with

14
00:01:01.032 --> 00:01:04.478
the React Native Community CLI, so
you're used to seeing these iOS and

15
00:01:04.478 --> 00:01:05.408
Android folders.

16
00:01:05.408 --> 00:01:08.277
So that's what we're generating.

17
00:01:08.277 --> 00:01:12.604
The command to generate these
is npx expo prebuild, and

18
00:01:12.604 --> 00:01:17.307
you can use npx expo prebuild
to generate it for both of them.

19
00:01:17.307 --> 00:01:22.205
Or you can use --platform ios or
--platform android to generate it for

20
00:01:22.205 --> 00:01:23.627
a specific project.

21
00:01:23.627 --> 00:01:27.938
So let me do them separately, so

22
00:01:27.938 --> 00:01:33.699
let's do npx expo prebuild platform ios.

23
00:01:33.699 --> 00:01:37.549
And now because this is
the first time I'm doing it,

24
00:01:37.549 --> 00:01:42.026
it is asking me what I'd like
my iOS bundle identifier to be.

25
00:01:42.026 --> 00:01:44.944
So, a bundle identifier
is like your app ID.

26
00:01:44.944 --> 00:01:48.565
It needs to be globally unique, and

27
00:01:48.565 --> 00:01:53.282
the convention is to use
a reverse URL format.

28
00:01:53.282 --> 00:01:58.500
So, for example, if you owned example.com,

29
00:01:58.500 --> 00:02:05.291
then your bundle identifier
might be com.example.myapp.

30
00:02:05.291 --> 00:02:11.800
I'm just gonna keep the default,
which is com.expokadi.plantly,

31
00:02:11.800 --> 00:02:16.029
and now this has created my iOS directory,
and

32
00:02:16.029 --> 00:02:20.707
in case of iOS,
it's also installing CocoaPods.

33
00:02:24.042 --> 00:02:27.377
&gt;&gt; Kadi Kraman: And if you've ever
built a React Native CLI project,

34
00:02:27.377 --> 00:02:30.946
you're probably familiar
with this folder structure.

35
00:02:30.946 --> 00:02:37.541
So we have our Podfile, we have our Pods,
we have our xcode project.

36
00:02:37.541 --> 00:02:39.802
So we can actually open this in xcode.

37
00:02:39.802 --> 00:02:43.773
So we have AppDelegate etc.

38
00:02:49.422 --> 00:02:52.679
&gt;&gt; Kadi Kraman: I don't
usually use VS Code for

39
00:02:52.679 --> 00:02:57.193
entering commands, it's a bit cramped.

40
00:02:57.193 --> 00:02:59.681
All right, let's do the same for Android.

41
00:02:59.681 --> 00:03:04.618
So npx expo prebuild --platform android,
so if you're building for

42
00:03:04.618 --> 00:03:06.271
android, do this one.

43
00:03:06.271 --> 00:03:11.145
Similar to iOS, it's asking us what
we want our package name to be,

44
00:03:11.145 --> 00:03:16.289
it is a convention in React Native to
use the same package name for both.

45
00:03:16.289 --> 00:03:20.316
And this is creating my android directory,
so

46
00:03:20.316 --> 00:03:24.458
the android folder now
has the usual suspects.

47
00:03:24.458 --> 00:03:29.269
So again, if you've used React Native CLI,
then you would have seen this.

48
00:03:29.269 --> 00:03:32.572
There we go,
I've got my main activity here.

49
00:03:32.572 --> 00:03:38.325
So this is just a typical,
native Android and iOS project.

50
00:03:38.325 --> 00:03:44.719
I just wanted to show you that's these,
what we have added here,

51
00:03:44.719 --> 00:03:50.069
this package name gets
automatically added as a bundle

52
00:03:50.069 --> 00:03:55.204
identifier and
then the package in your app.json.

53
00:03:55.204 --> 00:03:58.124
So, what we've done here,

54
00:03:58.124 --> 00:04:03.852
this process is called
continuous native generation.

55
00:04:03.852 --> 00:04:07.596
And it is a term that Expo have coined and

56
00:04:07.596 --> 00:04:14.410
there is a documentation here that
explains what it is and what it does.

57
00:04:14.410 --> 00:04:20.711
But the idea is is that it generates
the native projects from a set of inputs.

58
00:04:20.711 --> 00:04:26.043
So think of your native projects
same as you do your Node modules.

59
00:04:26.043 --> 00:04:30.627
You're not gonna commit your Node modules,
you have a lock file, and

60
00:04:30.627 --> 00:04:34.512
then whenever you clone the project,
you run npm install or

61
00:04:34.512 --> 00:04:38.574
yarn install to install those
Node modules for that project.

62
00:04:38.574 --> 00:04:43.731
And with continuous native generation,
we actually want to do

63
00:04:43.731 --> 00:04:49.785
the same with our native projects, so
we should add them to our gitgnore.

64
00:04:49.785 --> 00:04:55.241
So iOS and Android.

65
00:04:58.974 --> 00:05:01.661
&gt;&gt; Kadi Kraman: So this is so
that you wouldn't commit them to Git.

66
00:05:01.661 --> 00:05:06.649
So the idea is that whoever is building
this, if you're building this on CI or

67
00:05:06.649 --> 00:05:08.800
you're building this locally,

68
00:05:08.800 --> 00:05:13.813
then you will generate native projects
with prebuild, and then away you go.

69
00:05:13.813 --> 00:05:18.551
The benefit of that is that if you need to
change anything in the native projects,

70
00:05:18.551 --> 00:05:22.961
you don't need to shift through any
of these native codes, native files.

71
00:05:22.961 --> 00:05:27.351
And also, if you've ever done
a React Native upgrade with

72
00:05:27.351 --> 00:05:29.960
the React Native Upgrade Helper.

73
00:05:29.960 --> 00:05:36.214
All of that pain goes away because we
simply bump the React Native version,

74
00:05:36.214 --> 00:05:41.592
and install the new version of Expo and
regenerate our project.

75
00:05:41.592 --> 00:05:44.802
So we don't have to manually
edit any of the native code.

76
00:05:44.802 --> 00:05:49.350
So now to build your native app,
at this point,

77
00:05:49.350 --> 00:05:53.910
you should have your
local environment set up.

78
00:05:53.910 --> 00:05:59.352
If you're having difficulties,
I find the React Native documentation for

79
00:05:59.352 --> 00:06:02.420
a local environment set up really useful.

80
00:06:02.420 --> 00:06:07.216
So there's always some nuance
somewhere that isn't working,

81
00:06:07.216 --> 00:06:10.429
but usually you get around it by googling.

82
00:06:10.429 --> 00:06:14.162
So you should have xcode.

83
00:06:14.162 --> 00:06:17.480
Let's build the iOS app first.

84
00:06:17.480 --> 00:06:19.280
You can check that you
can run a simulator.

85
00:06:19.280 --> 00:06:21.615
This is only available on Mac OS.

86
00:06:21.615 --> 00:06:25.308
So if you Cmd+space and do a simulator,

87
00:06:25.308 --> 00:06:29.552
then you should be able
to launch a simulator.

88
00:06:29.552 --> 00:06:33.052
So it's a nice way to check if
the simulators are working.

89
00:06:33.052 --> 00:06:37.195
And also on the side menu,
here you can choose

90
00:06:37.195 --> 00:06:42.224
different simulators that
you might have installed.

91
00:06:42.224 --> 00:06:45.812
So now to actually run
this on my simulator, so

92
00:06:45.812 --> 00:06:49.036
this is the building the native app part.

93
00:06:55.403 --> 00:06:56.306
&gt;&gt; Kadi Kraman: We can do,

94
00:07:00.701 --> 00:07:05.379
&gt;&gt; Kadi Kraman: I'm gonna do yarn ios.

95
00:07:05.379 --> 00:07:07.459
Rather, actually,
let me just use this command.

96
00:07:07.459 --> 00:07:12.099
So npx expo run ios.

97
00:07:12.099 --> 00:07:16.785
So this will now do the native build for
me and it will take a little while.

98
00:07:20.771 --> 00:07:27.172
&gt;&gt; Kadi Kraman: Can you do multiple
terminals here, you can, okay so

99
00:07:27.172 --> 00:07:33.572
at the same time because I
like to stress my computer,

100
00:07:33.572 --> 00:07:38.266
let's also do npx expo run android, so

101
00:07:38.266 --> 00:07:41.699
I'm building both of them.

102
00:07:41.699 --> 00:07:46.891
So Android should open on my
Android Emulator, which is here.

103
00:07:46.891 --> 00:07:49.920
So this is one that I've set up earlier.

104
00:07:49.920 --> 00:07:54.022
And actually,
let me show you on Android Studio.

105
00:07:54.022 --> 00:07:58.504
Hopefully you've done this step already
from the React Native documentation.

106
00:07:58.504 --> 00:08:00.436
But open in the studio,

107
00:08:00.436 --> 00:08:05.999
the way that we generate,
&gt;&gt; Kadi Kraman: Virtual Devices

108
00:08:05.999 --> 00:08:06.670
is on here.

109
00:08:06.670 --> 00:08:09.452
It's really hidden in this
little three dot menu.

110
00:08:09.452 --> 00:08:15.280
Then you do Virtual Device Manager, and
then here you can create a new device.

111
00:08:15.280 --> 00:08:18.975
There's a button for creating a device,
so you can choose a device,

112
00:08:18.975 --> 00:08:21.794
you can choose the API level,
and it will create it.

113
00:08:21.794 --> 00:08:24.024
And this is also the place
that you launch it.

114
00:08:24.024 --> 00:08:27.374
So a lot of the time the emulators
aren't launching properly.

115
00:08:27.374 --> 00:08:33.198
So like dynamically from
the process automatically.

116
00:08:33.198 --> 00:08:34.863
So all the time they do,
sometimes they don't.

117
00:08:34.863 --> 00:08:40.112
If they don't, you can go to the device
manager and just launch it from here.

118
00:08:40.112 --> 00:08:41.395
And the same for the simulator.

119
00:08:41.395 --> 00:08:47.131
So if the simulator isn't opening you can
open it manually with Cmd+space simulator.

120
00:08:54.691 --> 00:08:56.166
&gt;&gt; Kadi Kraman: And now we wait.

121
00:08:56.166 --> 00:09:00.734
Okay, looks like Android has won
even though I've started it later.

122
00:09:00.734 --> 00:09:04.659
So this is my Android app.

123
00:09:04.659 --> 00:09:07.754
There we go.
We've got iOS as well, and

124
00:09:07.754 --> 00:09:11.804
we've got iOS running on my simulator.

125
00:09:11.804 --> 00:09:13.956
So let's look at Android first.

126
00:09:22.919 --> 00:09:25.362
&gt;&gt; Kadi Kraman: Yeah, there we go.

127
00:09:25.362 --> 00:09:29.480
So this looks exactly
the same as our Expo Go app.

128
00:09:29.480 --> 00:09:35.273
The difference is, if we now go to the
home page and find where it's rendered.

129
00:09:37.805 --> 00:09:38.545
&gt;&gt; Kadi Kraman: Here you go.

130
00:09:38.545 --> 00:09:43.528
So instead of being in Expo go it
is has its Its own app icon and

131
00:09:43.528 --> 00:09:47.531
own app name, and
when I click that, it opens.

132
00:09:47.531 --> 00:09:54.159
So this is what I mean about we
created our own native app bundle.

133
00:09:54.159 --> 00:09:56.756
And then the same for iOS.

134
00:09:56.756 --> 00:10:02.459
So if I now background this, so previously
we were loading this in Expo Go.

135
00:10:02.459 --> 00:10:08.565
And now, we have our own separate
app icon and separate app name.

