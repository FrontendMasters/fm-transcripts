WEBVTT

1
00:00:00.000 --> 00:00:03.406
&gt;&gt; Kadi Kraman: That was it for
the main coding parts of this workshop.

2
00:00:03.406 --> 00:00:08.764
There's a couple of important topics that
I wanted to cover in addition to this.

3
00:00:08.764 --> 00:00:13.334
And the first one is,
let's talk about deep linking.

4
00:00:13.334 --> 00:00:17.779
I mentioned earlier that thanks to
Expo Router's file system based routing,

5
00:00:17.779 --> 00:00:19.745
we get deep linking out of the box.

6
00:00:19.745 --> 00:00:23.300
But what do I actually
mean when you say that?

7
00:00:23.300 --> 00:00:29.407
So, because we have these constraints
around how we define screens and

8
00:00:29.407 --> 00:00:36.243
layouts in our app folder, we can easily
distinguish each screen with an href.

9
00:00:36.243 --> 00:00:41.652
And because of that,
building deep linking out of the box

10
00:00:41.652 --> 00:00:46.722
is not only possible, but
achievable, and, well,

11
00:00:46.722 --> 00:00:52.371
I don't want to say trivial,
but Expo Router supports it.

12
00:00:52.371 --> 00:00:57.591
So this means that Expo Router can and
does support deep linking out of the box.

13
00:00:57.591 --> 00:00:59.268
So what is deep linking?

14
00:00:59.268 --> 00:01:02.228
As we've seen with our quick action,

15
00:01:02.228 --> 00:01:07.513
it means opening a specific page in
your app from outside of the app.

16
00:01:07.513 --> 00:01:12.457
Add apps register to listen
to a specific scheme.

17
00:01:12.457 --> 00:01:17.523
So a keyword, recall that at
the very beginning of the course,

18
00:01:17.523 --> 00:01:20.590
we set up the scheme in our app.json.

19
00:01:20.590 --> 00:01:22.750
So this is the scheme for our app, and

20
00:01:22.750 --> 00:01:25.559
this is the scheme that
our app is listening to.

21
00:01:28.257 --> 00:01:31.701
&gt;&gt; Kadi Kraman: This looks similar
to http and mailto and tel, and

22
00:01:31.701 --> 00:01:34.981
this is because it's
the same kind of thing, so

23
00:01:34.981 --> 00:01:39.823
it kind of files an intent for
the various apps to listen and hook into.

24
00:01:39.823 --> 00:01:44.206
So in our app,
plantly:// will open the homepage, but

25
00:01:44.206 --> 00:01:49.581
we can also specify which screen that
they be linked to based on the URL.

26
00:01:49.581 --> 00:01:51.355
So, we can actually use the href, and

27
00:01:51.355 --> 00:01:54.413
it is something that you get out
of the box because of Expo Router.

28
00:01:54.413 --> 00:01:58.718
If you're using things like
React Navigation, you can configure it,

29
00:01:58.718 --> 00:02:00.306
we have to do it manually.

30
00:02:00.306 --> 00:02:05.260
So, there is a nice utility
that you can use to test deep

31
00:02:05.260 --> 00:02:08.612
links on a simulator or an emulator.

32
00:02:08.612 --> 00:02:13.138
The reason I set up these plant IDs to be
numbers is that we know that this first

33
00:02:13.138 --> 00:02:15.214
one is 1 and this second one is 2.

34
00:02:15.214 --> 00:02:20.115
So, I don't have to log out
the IDs to link to them.

35
00:02:20.115 --> 00:02:23.049
So let's copy this.

36
00:02:32.356 --> 00:02:37.164
&gt;&gt; Kadi Kraman: So mpx-ui-scheme,
I'm going to open Plantly, actually,

37
00:02:37.164 --> 00:02:39.804
let me just open Plantly as an app.

38
00:02:39.804 --> 00:02:41.574
So this should open just the homepage.

39
00:02:45.480 --> 00:02:48.293
&gt;&gt; Kadi Kraman: Lovely,
and then if I do Plantly,

40
00:02:48.293 --> 00:02:53.632
now I can link to any of the routes
that I've configured in my app.

41
00:02:53.632 --> 00:02:57.178
So I can do plants/1.

42
00:02:59.240 --> 00:03:02.726
&gt;&gt; Kadi Kraman: And
then it opens the particular plant.

43
00:03:02.726 --> 00:03:05.246
So in my examples,
I've linked to plants, but

44
00:03:05.246 --> 00:03:09.033
you can actually link it to any of
the screens that we've defined here.

45
00:03:09.033 --> 00:03:12.654
So we've got our profile screen,
so I could,

46
00:03:14.661 --> 00:03:18.079
&gt;&gt; Kadi Kraman: Also do /profile.

47
00:03:21.222 --> 00:03:27.707
&gt;&gt; Kadi Kraman: It opens the profile
screen, and it should be the same for

48
00:03:27.707 --> 00:03:33.425
Android, so if I background this,
&gt;&gt; Kadi Kraman: Let's

49
00:03:33.425 --> 00:03:38.526
do Android, it opens the home screen.

50
00:03:41.080 --> 00:03:43.985
&gt;&gt; Kadi Kraman: And
then let's open the first plant.

51
00:03:48.718 --> 00:03:51.547
&gt;&gt; Kadi Kraman: Android.

52
00:03:55.052 --> 00:03:56.777
&gt;&gt; Kadi Kraman: Yes.
&gt;&gt; Audience 1: If we try to go to,

53
00:03:56.777 --> 00:04:01.858
I forget if it was the index,
does the logic, if the onboarding hasn't

54
00:04:01.858 --> 00:04:07.384
been complete, will it redirect to
the onboarding, or will it get through?

55
00:04:07.384 --> 00:04:08.646
&gt;&gt; Kadi Kraman: That is a great question.

56
00:04:08.646 --> 00:04:12.651
I think, right now, let's try it.

57
00:04:12.651 --> 00:04:16.921
So we're on iOS, and we're in onboarding.

58
00:04:20.525 --> 00:04:26.333
&gt;&gt; Kadi Kraman: So let's go to plant.

59
00:04:26.333 --> 00:04:29.287
So it does go to onboarding.

60
00:04:29.287 --> 00:04:31.228
So why does it do that?

61
00:04:31.228 --> 00:04:36.118
So the reason it's doing that
is that we are trying to

62
00:04:36.118 --> 00:04:40.245
render plants/1, which is this screen.

63
00:04:40.245 --> 00:04:43.021
So when you think about
how things are rendered,

64
00:04:43.021 --> 00:04:46.212
the best way to think about
it is actually go backwards.

65
00:04:46.212 --> 00:04:48.636
So this is the screen
that we are requesting.

66
00:04:48.636 --> 00:04:51.091
So, this is actually the last
thing that gets rendered.

67
00:04:51.091 --> 00:04:54.389
Before that, we get this layout file.

68
00:04:54.389 --> 00:04:57.881
Before that,
we get the layout file of the parent.

69
00:04:57.881 --> 00:05:00.212
And before that,
we get the layout file of the parent.

70
00:05:00.212 --> 00:05:01.796
So it actually renders in this order.

71
00:05:01.796 --> 00:05:06.377
So this layout file, this layout file,
this layout file, and then plant ID.

72
00:05:06.377 --> 00:05:10.495
And then our redirect is being
done in this layout file, so

73
00:05:10.495 --> 00:05:13.449
that's why we're getting redirected.

74
00:05:13.449 --> 00:05:15.397
That was a great question, though.

75
00:05:15.397 --> 00:05:17.311
&gt;&gt; Audience 1: All right,
that kind of leads me to another question.

76
00:05:17.311 --> 00:05:22.303
So what if you deep link into to
a screen that's part of a flow,

77
00:05:22.303 --> 00:05:24.703
and then there's a back, and

78
00:05:24.703 --> 00:05:29.805
then there's a forward in that
screen cuz it's part of a flow.

79
00:05:29.805 --> 00:05:32.179
And based on the logic you
went through with layouts,

80
00:05:32.179 --> 00:05:35.467
it's probably a good design to say have
a layout in case they hit the back.

81
00:05:35.467 --> 00:05:38.976
But they deep link into like
three out of five screens,

82
00:05:38.976 --> 00:05:43.497
they deep link to the third screen,
but then they hit the back button.

83
00:05:43.497 --> 00:05:48.544
&gt;&gt; Kadi Kraman: Right, okay, so this
is actually another great question, but

84
00:05:48.544 --> 00:05:54.350
let me show you, actually brings me to
a behavior that we will need to fix.

85
00:05:57.674 --> 00:06:01.498
&gt;&gt; Kadi Kraman: Which is if I
completely close the app, and

86
00:06:01.498 --> 00:06:06.821
then I'm gonna link to a plant screen,
so on here, right.

87
00:06:06.821 --> 00:06:11.367
So on home screen,
I've linked to a plant screen in home, so

88
00:06:11.367 --> 00:06:14.664
recall, we usually go,
we tap on a plant and

89
00:06:14.664 --> 00:06:20.130
then we navigate to the plant screen,
but there's no back button here.

90
00:06:20.130 --> 00:06:24.071
And the reason is that this
is rendered in a stack, and

91
00:06:24.071 --> 00:06:28.197
this is the first item in
a stack that we're rendering.

92
00:06:28.197 --> 00:06:34.557
And the way to get around it is that
we can use the initial route name.

93
00:06:34.557 --> 00:06:38.882
So, I think people find
the initial route name misleading.

94
00:06:38.882 --> 00:06:44.186
Because they assume that, I can just set
this screen to be the initial route name,

95
00:06:44.186 --> 00:06:46.523
and then that gets rendered instead.

96
00:06:46.523 --> 00:06:51.442
But that's not what happens, we get
the index screen gets rendered by default.

97
00:06:51.442 --> 00:06:54.698
So, the initial rendering,
this is the perfect use case for it.

98
00:06:54.698 --> 00:06:59.627
Let's go to the layout
file in app tabs home, so

99
00:06:59.627 --> 00:07:06.285
it's a layout file that has the plants and
it has the index file,

100
00:07:06.285 --> 00:07:12.230
yes, this is a correct one,
so here we'll do an export,

101
00:07:15.251 --> 00:07:20.497
&gt;&gt; Kadi Kraman: const unstable_settings.

102
00:07:20.497 --> 00:07:25.007
So the reason it's called unstable
settings is that it doesn't work with

103
00:07:25.007 --> 00:07:27.857
async routes at the moment,
which is in beta.

104
00:07:27.857 --> 00:07:35.157
But we are not using async route so
it is totally fine to use,

105
00:07:35.157 --> 00:07:39.985
and we can do initialRouteName index.

106
00:07:39.985 --> 00:07:43.429
I misspelt this, initial.

107
00:07:43.429 --> 00:07:48.556
[COUGH] So this is now saying that
in this stack, regardless of,

108
00:07:48.556 --> 00:07:52.737
so you should be starting with index,
hopefully.

109
00:07:52.737 --> 00:07:59.241
But if you are not rendering index, make
sure that index is rendered underneath.

110
00:07:59.241 --> 00:08:04.188
Now, if I close this, and I open it again.

111
00:08:07.010 --> 00:08:10.151
&gt;&gt; Kadi Kraman: We actually see
I do get this back button, and

112
00:08:10.151 --> 00:08:12.308
I can go back to the index page.

113
00:08:12.308 --> 00:08:16.831
&gt;&gt; Audience 2: Is there a way to know
that a user has deep linked into a page,

114
00:08:16.831 --> 00:08:19.274
like for analytic purposes, or

115
00:08:19.274 --> 00:08:24.086
if you wanted to track that this
page view came from a deep link?

116
00:08:24.086 --> 00:08:27.298
&gt;&gt; Kadi Kraman: Yes, I'm not sure I
know this off the top of my head,

117
00:08:27.298 --> 00:08:28.259
but I will try.

118
00:08:28.259 --> 00:08:30.438
I think it will probably be in linking.

119
00:08:30.438 --> 00:08:35.302
So linking.getInitial URL,

120
00:08:35.302 --> 00:08:38.110
let's try that.

121
00:08:38.110 --> 00:08:45.118
So console.log(linking.getInitialURL).

122
00:08:47.563 --> 00:08:52.691
&gt;&gt; Kadi Kraman: So where is, okay,
so this is where we are building.

123
00:08:52.691 --> 00:08:54.294
And open this.

124
00:09:00.350 --> 00:09:04.970
&gt;&gt; Kadi Kraman: Okay, well,
this is not a very useful function,

125
00:09:04.970 --> 00:09:07.391
it's not asynchronous.

126
00:09:07.391 --> 00:09:11.009
[LAUGH] I was expecting this to be,
it's a promise.

127
00:09:11.009 --> 00:09:16.688
Okay, I was trying to be lazy,
but the world isn't having it.

128
00:09:16.688 --> 00:09:18.836
Okay, useEffect.

129
00:09:22.619 --> 00:09:29.459
&gt;&gt; Kadi Kraman: getInitial,

130
00:09:32.599 --> 00:09:34.577
&gt;&gt; Kadi Kraman: And what do you want?

131
00:09:38.526 --> 00:09:43.485
&gt;&gt; Kadi Kraman: linking.getInitialURL,
so what do we got,

132
00:09:43.485 --> 00:09:49.979
we got sendIntent, openURL,
yeah I think that might be it.

133
00:09:56.991 --> 00:10:00.807
&gt;&gt; Kadi Kraman: Okay, right, okay, so
now that we've actually awaited it,

134
00:10:00.807 --> 00:10:01.600
we do get it.

135
00:10:01.600 --> 00:10:06.555
So linking.getInitialURL
will tell you what

136
00:10:06.555 --> 00:10:10.753
the user deep linked into the app with.

137
00:10:10.753 --> 00:10:11.635
So that's what you can use.

138
00:10:16.017 --> 00:10:17.271
&gt;&gt; Audience 2: If they didn't link,

139
00:10:17.271 --> 00:10:20.776
I'm assuming that the routing
history won't have anything.

140
00:10:20.776 --> 00:10:23.758
And it'll be an empty array or
it'll be for the go back,

141
00:10:23.758 --> 00:10:25.349
it'll nothing to go back to.

142
00:10:25.349 --> 00:10:29.586
At that point, would you be able to use
that hook to conditionally render like

143
00:10:29.586 --> 00:10:31.294
a different button in the top.

144
00:10:31.294 --> 00:10:34.857
If you didn't want to set what you did for
the home there?

145
00:10:34.857 --> 00:10:36.196
&gt;&gt; Kadi Kraman: I see what you mean.

146
00:10:36.196 --> 00:10:37.600
Yeah, yeah, you could.

147
00:10:37.600 --> 00:10:40.179
Yeah, so
you could use the same useEffect here.

148
00:10:40.179 --> 00:10:44.878
So we have our setOptions, so you can
programmatically set the screen options,

149
00:10:44.878 --> 00:10:47.172
which include all of the top bar stuff.

