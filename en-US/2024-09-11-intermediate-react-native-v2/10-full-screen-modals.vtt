WEBVTT

1
00:00:00.470 --> 00:00:05.110
&gt;&gt; Kadi Kraman: So next up we're
going to breeze through some UI work.

2
00:00:05.110 --> 00:00:08.357
So we need to actually build
this plant management UI.

3
00:00:08.357 --> 00:00:11.050
A lot of this is going to be
concepts that we already use.

4
00:00:11.050 --> 00:00:13.580
So I'm going to point out
the more interesting things.

5
00:00:13.580 --> 00:00:15.530
But we will be copy pasting some UI code.

6
00:00:16.730 --> 00:00:22.889
So first we will need a full
screen modal to add a new plant.

7
00:00:22.889 --> 00:00:27.143
So if you go to the end of this lesson,
you'll see what we are aiming for.

8
00:00:27.143 --> 00:00:27.877
So on iOS,

9
00:00:27.877 --> 00:00:33.623
we're going to render a full screen
modal over the top of our button tabs.

10
00:00:33.623 --> 00:00:37.253
And then on Android,
I've just kept the default animation.

11
00:00:37.253 --> 00:00:42.330
So it will slide in from the right, but
it will still be a full screen modal.

12
00:00:42.330 --> 00:00:46.772
You could change this animation to also
slide in from the bottom if you prefer,

13
00:00:46.772 --> 00:00:49.413
but I like to keep
the defaults when possible.

14
00:00:50.533 --> 00:00:55.073
So how do we render a full
screen modal over the top?

15
00:00:55.073 --> 00:00:59.153
So we want to open it with
an icon button from the homepage.

16
00:00:59.153 --> 00:01:03.593
So you might think that you would want
to render it inside your tabs, but

17
00:01:03.593 --> 00:01:06.775
if we render it inside our tabs,
it won't be able to

18
00:01:06.775 --> 00:01:12.250
render over the top of these bottom tabs,
even if you render it modally.

19
00:01:12.250 --> 00:01:16.202
So whenever you want to render
a modal over the top of content,

20
00:01:16.202 --> 00:01:20.169
then this modal needs to be
defined at the same level.

21
00:01:20.169 --> 00:01:24.259
Or above the content that
you want it to overlay.

22
00:01:24.259 --> 00:01:29.869
So in our case, we want it to be
at the very top or root level.

23
00:01:29.869 --> 00:01:33.156
So in our app folder,

24
00:01:33.156 --> 00:01:40.470
let's create a new file called new.tsx.

25
00:01:40.470 --> 00:01:43.930
And let's just copy this placeholder.

26
00:01:43.930 --> 00:01:46.676
So it's just gonna be a view
with some center align text.

27
00:01:55.145 --> 00:01:59.539
And let's add the screen into
our layout file as well.

28
00:01:59.539 --> 00:02:03.238
So again, the screen already exists
even though I haven't added anything.

29
00:02:03.238 --> 00:02:09.489
But I want to use the options to
set the presentation mode to modal.

30
00:02:09.489 --> 00:02:13.827
So let's do new, and

31
00:02:13.827 --> 00:02:20.821
we want to do presentation modal.

32
00:02:20.821 --> 00:02:26.565
And let's give it a title of New plant.

33
00:02:33.726 --> 00:02:39.594
Next, let's add a little vector icon
button at the home header on the right,

34
00:02:39.594 --> 00:02:42.858
like a little plus for
adding a new button.

35
00:02:46.898 --> 00:02:49.728
So we can choose a vector
record from here.

36
00:02:49.728 --> 00:02:54.128
So I think I used a plus from undesign.

37
00:02:56.198 --> 00:02:57.193
So copy this.

38
00:03:00.694 --> 00:03:04.699
So it's not gonna be in this root layout
file, I almost did the wrong thing.

39
00:03:04.699 --> 00:03:06.349
So we want to add this.

40
00:03:06.349 --> 00:03:09.099
So we've hidden this header, if you see.

41
00:03:09.099 --> 00:03:10.949
So we've got headerShown false.

42
00:03:10.949 --> 00:03:17.219
So we want this header button to
be in the layout file of our tabs.

43
00:03:17.219 --> 00:03:22.074
So if we go into this layout file,
and we have our index file,

44
00:03:22.074 --> 00:03:25.898
so it will be a header
button on this index file.

45
00:03:25.898 --> 00:03:26.897
So import it.

46
00:03:36.136 --> 00:03:38.775
And in index, we'll do a headerRight.

47
00:03:38.775 --> 00:03:43.499
HeaderRight, and this will be a function.

48
00:03:46.776 --> 00:03:49.069
And let's start by rendering this icon.

49
00:03:50.409 --> 00:03:53.349
Lovely, so this is rendering
to the right of the screen.

50
00:03:54.559 --> 00:04:01.267
I want this to be a pressable, so
let's wrap this in a Pressable.

51
00:04:01.267 --> 00:04:07.735
So this will be imported from.

52
00:04:07.735 --> 00:04:15.098
And let's use the Link
component from explore later,

53
00:04:15.098 --> 00:04:19.267
and the href is going to be new.

54
00:04:22.546 --> 00:04:26.984
Okay, so now if I click this,
it's not going to work and

55
00:04:26.984 --> 00:04:32.754
that's because we have a component
as a child of our X-ray router link.

56
00:04:32.754 --> 00:04:35.903
So whenever you run the text here, so

57
00:04:35.903 --> 00:04:40.078
if I just said New as a text,
then this will work.

58
00:04:40.078 --> 00:04:45.965
But because I'm rendering a component,
I need to use the asChild prop.

59
00:04:45.965 --> 00:04:48.367
If I do asChild, then this does open.

60
00:04:51.038 --> 00:04:54.689
So for this pressable,
let's add some margin.

61
00:04:54.689 --> 00:04:55.837
So let's do a quick style.

62
00:04:55.837 --> 00:04:58.199
Let's keep it an inline style.

63
00:04:58.199 --> 00:05:03.647
Let's just do a marginRight of,
marginRight, of 18.

64
00:05:08.950 --> 00:05:11.605
So it's not squished against the edge.

65
00:05:14.480 --> 00:05:17.699
And instead of black,
let's use our beautiful green color.

66
00:05:17.699 --> 00:05:24.965
So we'll do theme and colorGreen.

67
00:05:24.965 --> 00:05:29.807
And now the last thing, and actually
the reason that I've added this pressable

68
00:05:29.807 --> 00:05:34.211
here, is that, notice that when I
click on the icon, or tap on the icon,

69
00:05:34.211 --> 00:05:36.399
I need to click exactly on the icon.

70
00:05:36.399 --> 00:05:41.154
So even if I'm being a bit butter
fingered, and clicking Next to the icon,

71
00:05:41.154 --> 00:05:43.053
it's not actually opening.

72
00:05:43.053 --> 00:05:45.193
And this is not great UX.

73
00:05:45.193 --> 00:05:49.746
If you're doing icon buttons, you need to
make sure that your pressable area is big

74
00:05:49.746 --> 00:05:52.103
enough for users to comfortably catch it.

75
00:05:52.103 --> 00:05:57.921
So on pressable or any type of components,
you can use the hitSlap.

76
00:05:57.921 --> 00:06:02.878
And this basically adds additional
pressable area around your

77
00:06:02.878 --> 00:06:07.191
pressable component that
also triggers the onPress.

78
00:06:07.191 --> 00:06:14.181
So we'll do hitSlap 20, and now notice
that I can click next to the button.

79
00:06:14.181 --> 00:06:18.895
Don't have to be right on it
to also trigger this modal.

80
00:06:18.895 --> 00:06:21.301
Does that affect styling,
or spacing or anything.

81
00:06:21.301 --> 00:06:22.103
It doesn't affect styling.

