WEBVTT

1
00:00:00.000 --> 00:00:03.826
&gt;&gt; Kadi Kraman: All right, so now we have
our image, so we can pick an image from

2
00:00:03.826 --> 00:00:07.528
the file system and choose it and
it will get displayed here.

3
00:00:07.528 --> 00:00:11.010
We also want to save it
along with the plant data.

4
00:00:13.482 --> 00:00:17.964
&gt;&gt; Kadi Kraman: So in order to do that,
remember that this plant is in our cache,

5
00:00:17.964 --> 00:00:20.046
so it's in our device cache.

6
00:00:20.046 --> 00:00:24.733
So we can't just store the URI
to where it's located because it

7
00:00:24.733 --> 00:00:27.836
might not be located there in the future.

8
00:00:27.836 --> 00:00:34.524
So what we want to do is we want to make a
copy of that file into our device storage.

9
00:00:34.524 --> 00:00:38.164
So we know it will be there
until our app is deleted.

10
00:00:38.164 --> 00:00:43.511
So for this, we're going to use
a library called expo-file-system.

11
00:00:43.511 --> 00:00:46.171
So this allows you to basically,

12
00:00:46.171 --> 00:00:50.731
it's a utility that lets you
easily download files, but

13
00:00:50.731 --> 00:00:55.585
also move files and
read files from your device file system.

14
00:01:01.957 --> 00:01:06.914
&gt;&gt; Kadi Kraman: So let's,
&gt;&gt; Kadi Kraman: Npx expo install

15
00:01:06.914 --> 00:01:12.198
expo-file-system,
&gt;&gt; Kadi Kraman: And

16
00:01:12.198 --> 00:01:13.229
start the bundle again.

17
00:01:21.783 --> 00:01:26.685
&gt;&gt; Kadi Kraman: Okay, so
now we would like to pass our plant URI

18
00:01:26.685 --> 00:01:29.836
into our addPlant function.

19
00:01:32.760 --> 00:01:35.314
&gt;&gt; Kadi Kraman: So imageUri.

20
00:01:35.314 --> 00:01:41.133
So this actually annoys me a little bit,
this is a little bit of a caveat.

21
00:01:41.133 --> 00:01:45.979
But I tend to follow a rule
that if a function has more

22
00:01:45.979 --> 00:01:50.961
than two arguments,
I convert this into an object.

23
00:01:50.961 --> 00:01:55.447
Because otherwise, you need to remember
to pass these in the right order.

24
00:01:55.447 --> 00:02:01.163
So I would do, yeah, name,
I make this into an object.

25
00:02:01.163 --> 00:02:07.327
In this case, I'm not going to do it
because it's not important to the course,

26
00:02:07.327 --> 00:02:12.024
but just FYI, it annoys me and
I wouldn't do it in a real app.

27
00:02:12.024 --> 00:02:17.108
So in our plantsStore,
where we have addPlant,

28
00:02:17.108 --> 00:02:22.564
so we have a third argument,
which is the imageUri,

29
00:02:22.564 --> 00:02:25.664
which is an optional string.

30
00:02:30.893 --> 00:02:32.493
&gt;&gt; Kadi Kraman: And this is another thing,

31
00:02:32.493 --> 00:02:36.666
I'm not sure if I'm maybe misusing as
a stand, but I find it a little bit

32
00:02:36.666 --> 00:02:40.928
annoying that with TypeScript I
actually have to type this into places.

33
00:02:40.928 --> 00:02:43.371
But sail away.

34
00:02:43.371 --> 00:02:50.822
So we have the imageUri,
which is an optional string.

35
00:02:50.822 --> 00:02:56.692
Okay, so here,
where we are adding the plant.

36
00:02:56.692 --> 00:02:58.882
So the image you are actually,

37
00:02:58.882 --> 00:03:03.356
let me just console.log here what
the imageUri is going to be.

38
00:03:10.879 --> 00:03:17.429
&gt;&gt; Kadi Kraman: Okay, so
if I do this, and then let's do Test.

39
00:03:21.424 --> 00:03:23.721
&gt;&gt; Kadi Kraman: Good thing
I've got form validation.

40
00:03:23.721 --> 00:03:26.174
All right, so
this is what the URI looks like.

41
00:03:26.174 --> 00:03:29.197
So it is a file, it's a bigger path for

42
00:03:29.197 --> 00:03:32.798
me cuz I'm gonna simulate it and
it is a JPEG.

43
00:03:32.798 --> 00:03:38.489
But this file could be a PNG or
all sorts of other file formats.

44
00:03:38.489 --> 00:03:42.080
And I don't want to handle
what file format it is.

45
00:03:42.080 --> 00:03:47.300
So what I'm doing here is I am just
picking the last bit of the file path,

46
00:03:47.300 --> 00:03:52.099
which will be the file name,
including probably the extension.

47
00:03:52.099 --> 00:03:55.487
And I'm going to use this
in my copied file path, and

48
00:03:55.487 --> 00:03:58.112
then I don't care what the file type is.

49
00:03:58.112 --> 00:04:00.394
This is basically what I'm doing here.

50
00:04:00.394 --> 00:04:08.069
So we'll do const savedImageUri.

51
00:04:08.069 --> 00:04:14.861
So this will be the location where
we're going to save this file to.

52
00:04:14.861 --> 00:04:20.098
For this, we need to import

53
00:04:20.098 --> 00:04:24.653
star as FileSystem from

54
00:04:24.653 --> 00:04:29.217
expo-file-system.

55
00:04:37.189 --> 00:04:43.813
&gt;&gt; Kadi Kraman: And
we'll do FileSystem.documentDirectory.

56
00:04:46.895 --> 00:04:50.541
&gt;&gt; Kadi Kraman: Right, and
then what we're going to add here,

57
00:04:50.541 --> 00:04:55.480
I wanted to add a timestamp just
to make sure that this is unique.

58
00:04:55.480 --> 00:05:03.578
So let's do a new Date.getTime.

59
00:05:07.411 --> 00:05:08.821
&gt;&gt; Kadi Kraman: And then dash.

60
00:05:12.120 --> 00:05:15.879
&gt;&gt; Kadi Kraman: And this is where I'm
going to do our magic of getting the last

61
00:05:15.879 --> 00:05:17.213
bit of the imageUri.

62
00:05:17.213 --> 00:05:22.402
So I'll do imageUri and we'll do a split.

63
00:05:25.171 --> 00:05:30.489
&gt;&gt; Kadi Kraman: We'll
split it by the slash,

64
00:05:30.489 --> 00:05:37.038
and slice,
&gt;&gt; Kadi Kraman: -1 and

65
00:05:37.038 --> 00:05:41.248
take the only item there.

66
00:05:41.248 --> 00:05:45.649
So this should work,
I haven't tested this on every device, but

67
00:05:45.649 --> 00:05:48.782
that is the intent and
hopefully it does work.

68
00:05:48.782 --> 00:05:53.518
So now,
remember this imageUri is optional.

69
00:05:53.518 --> 00:05:56.674
So we'll do if there was an imageUri,

70
00:05:56.674 --> 00:06:01.716
then we're going to copy it to
the saved imageUri location.

71
00:06:01.716 --> 00:06:06.651
So we'll do await FileSystem copyAsync.

72
00:06:10.027 --> 00:06:15.094
&gt;&gt; Kadi Kraman: And
we will copy it from the imageUri,

73
00:06:18.747 --> 00:06:24.069
&gt;&gt; Kadi Kraman: And to the saved imageUri.

74
00:06:24.069 --> 00:06:30.063
Now, this is unhappy because it's not
an async function, so let's make it async.

75
00:06:30.063 --> 00:06:30.563
There we go.

76
00:06:33.473 --> 00:06:34.880
&gt;&gt; Kadi Kraman: And finally,

77
00:06:34.880 --> 00:06:40.279
we want to save this imageUri
as part of our plant data.

78
00:06:40.279 --> 00:06:46.057
So in plants, we're adding a new plant,

79
00:06:46.057 --> 00:06:49.033
we'll do imageUri.

80
00:06:49.033 --> 00:06:53.089
If there was an imageURI, so
this is an optional field.

81
00:06:53.089 --> 00:06:59.011
Then this will be the savedImageUri,
otherwise, let's default to undefined.

82
00:07:02.278 --> 00:07:07.318
&gt;&gt; Kadi Kraman: And lastly,
&gt;&gt; Kadi Kraman: Where

83
00:07:07.318 --> 00:07:12.197
we're rendering these, so
this will be on the homepage.

84
00:07:12.197 --> 00:07:15.789
So where we have our FlatList,
our PlantCard.

85
00:07:20.138 --> 00:07:22.237
&gt;&gt; Kadi Kraman: Yeah, so
this gets the whole plant, yeah.

86
00:07:22.237 --> 00:07:25.939
So if you go into the PlantCard,
so this has the PlantlyImage.

87
00:07:25.939 --> 00:07:33.508
And now, recall that this PlantType may
include the, need to update this as well.

88
00:07:33.508 --> 00:07:41.367
So PlantType, yeah.

89
00:07:41.367 --> 00:07:44.534
Yeah, the types on here aren't
working as well as expected.

90
00:07:44.534 --> 00:07:48.381
So apologies,
there is a missing field here.

91
00:07:48.381 --> 00:07:53.139
So in this array, so when we're adding
a plant, we have an imageUri, so

92
00:07:53.139 --> 00:07:55.798
we're adding a new field to our plants.

93
00:07:55.798 --> 00:07:58.573
At the top here, we have our PlantType.

94
00:07:58.573 --> 00:08:02.155
Let's do the imageUri,
which is an optional string.

95
00:08:06.154 --> 00:08:10.032
&gt;&gt; Kadi Kraman: And in our PlantCard,
now when we hover over it,

96
00:08:10.032 --> 00:08:15.435
this is an optional string and
we can pass it into our PlantlyImage.

97
00:08:15.435 --> 00:08:22.009
So imageUri = plant.imageUri.

98
00:08:22.009 --> 00:08:25.308
So this option, it was still default
to our little placeholder image.

99
00:08:28.404 --> 00:08:33.104
&gt;&gt; Kadi Kraman: So
now when I add any plant, running out of

100
00:08:33.104 --> 00:08:37.680
plant names, Sophie The Spider Plant.

101
00:08:41.640 --> 00:08:43.701
&gt;&gt; Kadi Kraman: And well,
actually, this is a yellow leaf,

102
00:08:43.701 --> 00:08:45.503
this is definitely not a spider plant.

103
00:08:45.503 --> 00:08:48.137
But let's save this.

104
00:08:48.137 --> 00:08:49.040
There we go.

105
00:08:49.040 --> 00:08:55.610
So now when I reload my app,
I'm expecting it to still exist here.

106
00:08:58.199 --> 00:09:00.633
&gt;&gt; Speaker 2: Notice that
addPlant was turned to a promise.

107
00:09:00.633 --> 00:09:03.147
Is that a Zustand thing or

108
00:09:03.147 --> 00:09:07.976
was that part of the image async for the-
&gt;&gt; Kadi Kraman: It looks

109
00:09:07.976 --> 00:09:12.467
like Zustand supports
asynchronous functions.

110
00:09:12.467 --> 00:09:18.657
&gt;&gt; Speaker 2: Okay, so you need

111
00:09:18.657 --> 00:09:24.950
to change it to-
&gt;&gt; Kadi Kraman: Yeah, I needed to change

112
00:09:24.950 --> 00:09:26.692
it to asynchronous, because the process of
copying the file over was asynchronous,

113
00:09:26.692 --> 00:09:27.192
so in order to await it.

114
00:09:27.192 --> 00:09:28.605
&gt;&gt; Speaker 2: Yeah, sure but I was curious
in that if you scroll up to the type all

115
00:09:28.605 --> 00:09:29.344
the way up to the addPlant.

116
00:09:29.344 --> 00:09:30.824
&gt;&gt; Kadi Kraman: I see.
&gt;&gt; Speaker 2: So you avoid as addPlant is

117
00:09:30.824 --> 00:09:31.762
the return value?

118
00:09:31.762 --> 00:09:35.232
&gt;&gt; Kadi Kraman: Okay, so technically,
this is a promise, good.

119
00:09:35.232 --> 00:09:39.200
&gt;&gt; Speaker 2: And I was curious if
that was because of the async or

120
00:09:39.200 --> 00:09:42.803
is that because of
the FileSystem saving it?

121
00:09:42.803 --> 00:09:45.855
I guess why it was a promise.

122
00:09:45.855 --> 00:09:51.606
Looks like it's just returning
an object in the function in the set.

123
00:09:53.367 --> 00:09:56.241
&gt;&gt; Speaker 2: It might be beyond the scope
of the course, so I was just curious.

124
00:09:56.241 --> 00:09:58.657
That was an easy answer to that.

125
00:09:58.657 --> 00:10:00.053
&gt;&gt; Kadi Kraman: Is this in the addPLant?

126
00:10:00.053 --> 00:10:01.316
&gt;&gt; Speaker 2: Yeah.

127
00:10:01.316 --> 00:10:03.547
&gt;&gt; Kadi Kraman: I see what you mean, okay.

128
00:10:03.547 --> 00:10:04.099
&gt;&gt; Speaker 2: You're awaiting it, but

129
00:10:04.099 --> 00:10:05.338
you're not returning it,
you're trying to set, yeah.

130
00:10:05.338 --> 00:10:07.954
&gt;&gt; Kadi Kraman: Okay, I see what you mean.

131
00:10:07.954 --> 00:10:09.699
I would say that it is a Zustand thing.

132
00:10:09.699 --> 00:10:13.328
So I haven't used Zustand a huge amount-
&gt;&gt; Speaker 2: Sure.

133
00:10:13.328 --> 00:10:16.568
&gt;&gt; Kadi Kraman: So I might be doing
something a little bit incorrectly.

134
00:10:16.568 --> 00:10:18.753
I wanted to just use the state
management library, and

135
00:10:18.753 --> 00:10:20.047
I don't mind which one you use.

136
00:10:20.047 --> 00:10:24.223
So I'm not claiming to
be an expert in Zustand.

137
00:10:24.223 --> 00:10:28.047
So some of this stuff that I'm
doing might not be totally correct.

138
00:10:28.047 --> 00:10:31.809
But I think you don't
actually need to return this,

139
00:10:31.809 --> 00:10:34.386
I think this is actually a mistake.

140
00:10:34.386 --> 00:10:35.610
&gt;&gt; Speaker 2: Cuz if you remove the types,

141
00:10:35.610 --> 00:10:37.862
it implicitly tells you
that addPlant is a promise.

142
00:10:37.862 --> 00:10:41.470
So you got it right, I just didn't know, I
was trying to figure out why, interesting.

143
00:10:41.470 --> 00:10:44.819
&gt;&gt; Kadi Kraman: Yeah,
actually adding this returns here.

144
00:10:44.819 --> 00:10:47.063
I don't think they do anything.

145
00:10:47.063 --> 00:10:50.341
Yeah, this returns void,
so it returns nothing.

146
00:10:50.341 --> 00:10:52.749
So by returning this,
I'm returning nothing.

147
00:10:52.749 --> 00:10:54.851
So actually, if I hover over it,
you can see the type.

148
00:10:54.851 --> 00:10:59.707
So it is a function that return void,
which is nothing.

149
00:10:59.707 --> 00:11:04.739
So this is totally redundant, actually,

150
00:11:04.739 --> 00:11:10.727
which was a good spot, but I'm going to-
&gt;&gt; Speaker 2: Yeah.

151
00:11:10.727 --> 00:11:13.314
&gt;&gt; Kadi Kraman: Yeah,
they don't make a difference.

152
00:11:13.314 --> 00:11:20.207
But this was correct, so it is technically
a promise from their usage side.

