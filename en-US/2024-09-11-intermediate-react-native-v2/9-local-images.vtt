WEBVTT

1
00:00:00.230 --> 00:00:04.370
&gt;&gt; Kadi Kraman: And the last thing for
our home page, let's add an image.

2
00:00:04.370 --> 00:00:07.900
So we're gonna use the built-in
image component for this.

3
00:00:07.900 --> 00:00:11.233
But just FYI for advanced usage,

4
00:00:11.233 --> 00:00:16.838
you may want to look into using
Expo image or fast image.

5
00:00:16.838 --> 00:00:19.910
So the built-in image might be
good enough for your use cases.

6
00:00:19.910 --> 00:00:23.511
But these two libraries
are just very common for

7
00:00:23.511 --> 00:00:29.186
production applications to use because
they offer additional caching and

8
00:00:29.186 --> 00:00:32.260
support additional image types, etc.

9
00:00:32.260 --> 00:00:35.401
But for us, the built-in image is fine.

10
00:00:35.401 --> 00:00:37.554
So I've added a link to
the image on GitHub.

11
00:00:37.554 --> 00:00:39.899
Hopefully this works, lovely.

12
00:00:39.899 --> 00:00:40.959
To be able to download it.

13
00:00:46.700 --> 00:00:48.477
&gt;&gt; Kadi Kraman: Go to my downloads folder.

14
00:00:51.489 --> 00:00:54.546
&gt;&gt; Kadi Kraman: Here's one I
made earlier through this.

15
00:00:57.578 --> 00:01:02.292
&gt;&gt; Kadi Kraman: Okay, so in your
download folders, you've been image and

16
00:01:02.292 --> 00:01:04.869
we can add this to our assets folder.

17
00:01:08.006 --> 00:01:09.316
&gt;&gt; Kadi Kraman: There we go.

18
00:01:09.316 --> 00:01:15.385
It's a little AI generated
icon royalty-free.

19
00:01:15.385 --> 00:01:19.204
Actually, let's create a component for
it, so we could reuse it.

20
00:01:19.204 --> 00:01:25.289
So in our components let's
create a new file and

21
00:01:25.289 --> 00:01:29.246
call it PlantlyImage.tsx and

22
00:01:29.246 --> 00:01:35.042
here let's export function PlantlyImage.

23
00:01:38.536 --> 00:01:40.874
&gt;&gt; Kadi Kraman: And let's return an image.

24
00:01:40.874 --> 00:01:43.981
So this will be an image
imported from React Native.

25
00:01:48.295 --> 00:01:52.624
&gt;&gt; Kadi Kraman: And on the web you would
use URI, you would use IMG and URI.

26
00:01:52.624 --> 00:01:55.625
So here we have a source.

27
00:01:55.625 --> 00:01:58.245
So we're going to use a local image.

28
00:01:58.245 --> 00:02:01.837
If we were to use a web image you
would pass it an object here and

29
00:02:01.837 --> 00:02:06.024
you would do URI and
then this would be like HTTP whatever.

30
00:02:06.024 --> 00:02:10.054
But we're going to use a local image,
so we need to require it.

31
00:02:10.054 --> 00:02:12.958
Inline requires are now supported,
so we can do require.

32
00:02:15.240 --> 00:02:17.454
&gt;&gt; Kadi Kraman: And
this will be the path to our image.

33
00:02:17.454 --> 00:02:23.205
So we can use our alias assets and

34
00:02:23.205 --> 00:02:26.197
plantly.png.

35
00:02:26.197 --> 00:02:30.583
So the require is needed because
when your app is getting bundled,

36
00:02:30.583 --> 00:02:35.223
then only the files that are required
will be included in your bundle.

37
00:02:39.143 --> 00:02:41.033
&gt;&gt; Kadi Kraman: And
let's give it a size as well.

38
00:02:41.033 --> 00:02:46.246
So I want to make the size relative
to the size of the user's screen.

39
00:02:46.246 --> 00:02:52.386
So for that I'm going to use a use window
dimensions hook from react native.

40
00:02:53.966 --> 00:02:56.563
So this returns an object with a width and
a height.

41
00:02:56.563 --> 00:02:57.836
So I'll do width.

42
00:02:59.046 --> 00:03:00.929
So we'll have use WindowDimensions.

43
00:03:00.929 --> 00:03:03.449
So this will be the width
of the user screen.

44
00:03:05.059 --> 00:03:08.946
So I'll do const, I'll make it
a square image, so image size.

45
00:03:11.467 --> 00:03:18.046
&gt;&gt; Kadi Kraman: And this will be,
well, I could do width divided by 1.5.

46
00:03:18.046 --> 00:03:19.878
There we go.

47
00:03:19.878 --> 00:03:23.808
So then pass this style.

48
00:03:23.808 --> 00:03:25.876
And we're just gonna do
an inline style here.

49
00:03:25.876 --> 00:03:29.621
So width will be image size, and

50
00:03:29.621 --> 00:03:33.664
height will be image size, okay?

51
00:03:33.664 --> 00:03:39.354
And then we use this PlantyImage
in our onboarding screen.

52
00:03:40.974 --> 00:03:47.215
So, lets find out onboarding screen,
&gt;&gt; Kadi Kraman: And

53
00:03:47.215 --> 00:03:52.984
just put it under the states bar, okay?

54
00:03:52.984 --> 00:03:59.903
So let me just open this on the web,
and it looks a bit big.

55
00:03:59.903 --> 00:04:05.482
So this is one thing that if you
are developing before mobile and

56
00:04:05.482 --> 00:04:08.517
web, this no longer works.

57
00:04:08.517 --> 00:04:11.907
So worth checking if you are.

58
00:04:11.907 --> 00:04:17.347
So I'm gonna add a maximum height here,
maximum width here as well.

59
00:04:17.347 --> 00:04:20.229
So I'm gonna do a Math.min.

60
00:04:21.235 --> 00:04:28.611
And say that it is relative to
the screen size up to let's say 400.

61
00:04:28.611 --> 00:04:32.930
So that way on mobile it would be
nice to rotate the screen size, and

62
00:04:32.930 --> 00:04:36.653
then on the web it will be
a sensible maximum size as well.

63
00:04:36.653 --> 00:04:40.182
So I think if you go to really
small screens, it will scale.

64
00:04:40.182 --> 00:04:42.566
Just nice, and just to complete this,

65
00:04:42.566 --> 00:04:46.483
let's add some greeting text to
our onboarding screen as well.

66
00:04:46.483 --> 00:04:52.116
So let's do just above our image.

67
00:04:52.116 --> 00:04:55.887
Let's do a text and call this Plantly.

68
00:05:02.253 --> 00:05:07.080
&gt;&gt; Kadi Kraman: And a little greeting,
so a tagline to say,

69
00:05:07.080 --> 00:05:11.525
keep your plants healthy and hydrated.

70
00:05:15.471 --> 00:05:20.572
&gt;&gt; Kadi Kraman: And before we want to
style these, so let's do a heading,

71
00:05:22.662 --> 00:05:26.355
&gt;&gt; Kadi Kraman: And a tagline, tagline.

72
00:05:28.966 --> 00:05:31.424
&gt;&gt; Kadi Kraman: So
the first text will be a heading.

73
00:05:34.777 --> 00:05:36.234
&gt;&gt; Kadi Kraman: And
the second will be a tagline.

74
00:05:45.725 --> 00:05:49.059
&gt;&gt; Kadi Kraman: And then for the heading,
we'll do a larger font size.

75
00:05:49.059 --> 00:05:52.002
So let's do font size 42.

76
00:05:52.002 --> 00:05:54.455
Make the color white.

77
00:05:57.886 --> 00:05:59.425
&gt;&gt; Kadi Kraman: Make the font bold.

78
00:05:59.425 --> 00:06:06.217
So, we'll do a fontweight bold,
a margin bottom 12,

79
00:06:06.217 --> 00:06:12.403
so they're not squished
next to each other.

80
00:06:12.403 --> 00:06:19.605
And for the tagline,
we'll do a font size of 24.

81
00:06:20.898 --> 00:06:22.873
Let's make it white as well, so

82
00:06:22.873 --> 00:06:29.517
color white,
&gt;&gt; Kadi Kraman: Here we go.

83
00:06:33.229 --> 00:06:38.289
&gt;&gt; Kadi Kraman: Okay, so
I misspelled tagline, tagline.

84
00:06:41.413 --> 00:06:42.324
&gt;&gt; Kadi Kraman: There we go.

85
00:06:42.324 --> 00:06:49.410
Okay, so because this text
goes into multiple lines,

86
00:06:49.410 --> 00:06:53.263
it isn't center aligned, so

87
00:06:53.263 --> 00:07:00.211
we can do textAlign center
to make it center aligned.

88
00:07:00.211 --> 00:07:07.443
And the next thing I wanna do is I want to
space these items on my screen, evenly.

89
00:07:07.443 --> 00:07:11.967
So in our container,
instead of justifyContent center,

90
00:07:11.967 --> 00:07:15.397
we'll do justifyContent space-evenly.

91
00:07:18.566 --> 00:07:22.310
&gt;&gt; Kadi Kraman: So this will add equal
amounts of space between each of

92
00:07:22.310 --> 00:07:23.397
the elements.

93
00:07:23.397 --> 00:07:28.329
But this doesn't actually look that good,
because I want this Plantly and

94
00:07:28.329 --> 00:07:31.247
the tagline to be grouped together.

95
00:07:31.247 --> 00:07:32.527
So how would you do it on a web?

96
00:07:32.527 --> 00:07:38.893
You would wrap it on a div and how you do
it in react native, you wrap it in a view.

97
00:07:38.893 --> 00:07:39.703
This is our div.

98
00:07:41.971 --> 00:07:44.630
&gt;&gt; Kadi Kraman: So
put these two texts in the view.

99
00:07:48.627 --> 00:07:53.544
&gt;&gt; Kadi Kraman: Okay, and now, I need
to center align this heading as well.

100
00:07:53.544 --> 00:07:59.239
So go to heading and
do a textAlign center.

101
00:08:03.004 --> 00:08:03.637
&gt;&gt; Kadi Kraman: There you go.

102
00:08:03.637 --> 00:08:06.692
And hopefully,
this matches our checkpoint, so

103
00:08:06.692 --> 00:08:09.466
we have a beautiful
little onboarding page.

