WEBVTT

1
00:00:00.460 --> 00:00:07.720
Once we have our list of repos,
they'll end up in this repos variable.

2
00:00:07.720 --> 00:00:09.640
And then we can turn that into markup.

3
00:00:09.640 --> 00:00:12.880
So I'm gonna just create
a variable called markup, and

4
00:00:12.880 --> 00:00:17.270
we will use our repos, and
I'm gonna map over each one.

5
00:00:18.730 --> 00:00:22.260
The formatting gets a little wonky
on this, but just bear with me.

6
00:00:22.260 --> 00:00:25.380
So I want each of these to be a list item.

7
00:00:27.650 --> 00:00:32.890
And I know that I'm kind of doing
some goofy stuff with writing

8
00:00:32.890 --> 00:00:36.500
markup inside of templates,
instead of creating HTML elements.

9
00:00:36.500 --> 00:00:41.590
I wanted this to be a quick example, so
we're kinda taking some shortcuts here.

10
00:00:42.870 --> 00:00:46.920
And inside of it,
we wanna link to each repo, so

11
00:00:46.920 --> 00:00:50.470
we will do a link to the HTML URL for
the repo.

12
00:00:52.320 --> 00:00:55.580
And then we're gonna
display the repo name.

13
00:00:58.310 --> 00:01:01.070
And then let's also show
the number of stars.

14
00:01:01.070 --> 00:01:05.126
So I'm gonna open up my emoji palette
which is command CTRL + Space.

15
00:01:07.100 --> 00:01:08.640
Let's grab a star.

16
00:01:08.640 --> 00:01:12.700
You can judge me for my most use and

17
00:01:12.700 --> 00:01:19.676
then I'm gonna get the star-gazer
underscore account.

18
00:01:19.676 --> 00:01:24.780
And that gives us like each repo now

19
00:01:24.780 --> 00:01:28.650
has been transformed into
one of these list items.

20
00:01:28.650 --> 00:01:31.900
And to make those into a single string,

21
00:01:31.900 --> 00:01:35.360
I'm just gonna join them
on an empty string.

22
00:01:35.360 --> 00:01:38.650
By default, if you run joining with
us commas, we don't want commas.

23
00:01:38.650 --> 00:01:40.600
So just using an empty string.

24
00:01:42.050 --> 00:01:48.900
And then finally, I can get an object or
we need to get an element that we can.

25
00:01:50.070 --> 00:01:51.240
Insert this into.

26
00:01:51.240 --> 00:01:55.990
Actually, before we write this part,
let's go ahead and create that element so

27
00:01:55.990 --> 00:01:57.590
that we've got somewhere to attach it.

28
00:01:57.590 --> 00:02:02.450
So in our main in HTML,
I'm going to create just another

29
00:02:02.450 --> 00:02:08.270
heading that said
Recently Updated Code Projects.

30
00:02:08.270 --> 00:02:13.350
And let's set this to be a Div and

31
00:02:13.350 --> 00:02:17.100
we'll give it an ID of content.

32
00:02:19.020 --> 00:02:26.330
And because we know we're gonna do some
script stuff, I'm going to just show this.

33
00:02:26.330 --> 00:02:31.150
If we were gonna be really responsible and
handle cases where JavaScript was

34
00:02:31.150 --> 00:02:34.690
disabled, we could wrap all of this and
no script and not a note.

35
00:02:34.690 --> 00:02:36.870
We're not going to do that here,
because again,

36
00:02:36.870 --> 00:02:40.810
we're just trying to show the concepts,
not build production apps.

37
00:02:40.810 --> 00:02:45.120
So once we've got this in here, if I run
this again, I'll just run npx serve.

38
00:02:49.230 --> 00:02:52.870
We'll see that we've got recently
updated code products or projects and

39
00:02:52.870 --> 00:02:54.100
it's showing loading.

40
00:02:54.100 --> 00:02:56.040
So, let's go make that actually work.

41
00:02:56.040 --> 00:03:00.180
So we're gonna need to get this ID and
insert that mark up or writing into it.

42
00:03:00.180 --> 00:03:08.760
So, start by saying const content
= document.getelementbyId and

43
00:03:08.760 --> 00:03:12.210
the idea that we want to get is content,
if I could spell it right.

44
00:03:13.960 --> 00:03:18.480
So now that we've got our content,
we can just set the markup inside of it.

45
00:03:18.480 --> 00:03:22.800
So I'm going to do content dot inner HTML.

46
00:03:22.800 --> 00:03:27.270
And I'm gonna set it to be a list.

47
00:03:27.270 --> 00:03:30.630
We'll put our markup inside and
then we'll close our list.

48
00:03:32.630 --> 00:03:36.250
All that on the screen,
so everybody can see it.

49
00:03:36.250 --> 00:03:40.930
So, to walk through this one more time,
top to bottom, what we're doing is we've

50
00:03:40.930 --> 00:03:46.300
defined the function called list repos,
it accepts a username and

51
00:03:46.300 --> 00:03:52.080
once we call this function, what'll
happen it will load the repositories

52
00:03:52.080 --> 00:03:56.930
from GitHub for a given username, and
store those in a variable called repos.

53
00:03:56.930 --> 00:04:00.740
It'll also handle the case where something
goes wrong where we get a rejected

54
00:04:00.740 --> 00:04:02.870
API request or anything like that.

55
00:04:02.870 --> 00:04:06.180
Once we have our repos,
we map over each one and

56
00:04:06.180 --> 00:04:11.070
convert it into a string of markup
just a list item for a bulleted list.

57
00:04:11.070 --> 00:04:14.420
And we store that value in markup.

58
00:04:14.420 --> 00:04:19.230
We join each of those,
created markup items into a single string.

59
00:04:19.230 --> 00:04:22.710
So now we've got one
long string of list items

60
00:04:22.710 --> 00:04:24.950
that is stored in this markup variable.

61
00:04:24.950 --> 00:04:28.490
Then we find the content div.

62
00:04:28.490 --> 00:04:30.400
It's got an idea of content on it.

63
00:04:30.400 --> 00:04:32.520
And put our markup inside of it.

64
00:04:32.520 --> 00:04:34.060
So we'll be showing a list.

65
00:04:34.060 --> 00:04:38.860
So what we haven't done yet is we
haven't actually called this function.

66
00:04:40.670 --> 00:04:45.000
And for illustrative purposes,
we're just gonna call it at the bottom.

67
00:04:45.000 --> 00:04:48.510
And I'm going to put in my GitHub
username feel free to put in yours or

68
00:04:48.510 --> 00:04:55.026
someone else's this is a public API,
so you can just query this.

69
00:04:55.026 --> 00:05:00.560
So, now, after we've defined it, and this
is something that is a preference of mine.

70
00:05:00.560 --> 00:05:03.920
But I always like to define
things before I use them, so

71
00:05:03.920 --> 00:05:07.760
that it tends to help me when I'm reading
a file to not see things that I have to

72
00:05:07.760 --> 00:05:10.200
like scroll at the bottom to figure
out where they were declared.

73
00:05:10.200 --> 00:05:13.160
So this is just my quirk, we could also
put this up at the top if we want it.

74
00:05:14.530 --> 00:05:18.720
So, now that I have called this,
we need to get it into our index.html.

75
00:05:18.720 --> 00:05:23.820
So back in our index, I'm going to
write before the closing body tag

76
00:05:23.820 --> 00:05:29.470
at a script tag, but
I wanna use it as a module so

77
00:05:29.470 --> 00:05:33.390
I'm just gonna signify
that it's the Essex code.

78
00:05:33.390 --> 00:05:37.655
And then,
I'm going to set the source to be

79
00:05:37.655 --> 00:05:43.730
main.js.

80
00:05:43.730 --> 00:05:47.140
And that should be that.

81
00:05:50.110 --> 00:05:51.000
&gt;&gt; Good catch everyone.

82
00:05:51.000 --> 00:05:51.500
Thank you.

83
00:05:53.040 --> 00:05:56.260
And now if I reload,
we get a list of repos.

84
00:05:56.260 --> 00:05:59.230
This is kind of at its core.

85
00:06:00.780 --> 00:06:03.530
The simplest iteration of a jam stack app.

86
00:06:03.530 --> 00:06:07.470
What we've done is we've taken
some markup some static assets,

87
00:06:07.470 --> 00:06:10.880
we have used JavaScript
to hit a third party API.

88
00:06:10.880 --> 00:06:12.720
And then we're getting
that onto the screen.

89
00:06:12.720 --> 00:06:14.490
So we've got some kind of interactivity.

90
00:06:14.490 --> 00:06:18.380
If we wanted to, we could add like an
input or something where you could put in

91
00:06:18.380 --> 00:06:22.710
someone else's username and
get a new list whenever you updated that.

92
00:06:22.710 --> 00:06:28.130
That would get into some, I think that
would just be a little too much for

93
00:06:28.130 --> 00:06:31.710
completely vanilla JavaScript without
making this a much longer workshop.

94
00:06:31.710 --> 00:06:36.360
So instead,
we're going to call this good, and

95
00:06:36.360 --> 00:06:40.810
then we'll move on to our next section,
which is going to be deploying the site,

96
00:06:40.810 --> 00:06:43.140
so let's get this thing
up on the Internet.

97
00:06:43.140 --> 00:06:48.700
So what I will do here is
get my terminal open again.

98
00:06:48.700 --> 00:06:49.920
And let's save our work.

99
00:06:52.270 --> 00:07:00.300
And I'm gonna do get, let's add
everything, let's check it, okay?

100
00:07:00.300 --> 00:07:03.380
So we've got our JavaScript file and
our HTML file.

101
00:07:03.380 --> 00:07:06.210
I'm gonna commit and say, feature

102
00:07:08.830 --> 00:07:13.750
basic and we add script.

