WEBVTT

1
00:00:00.140 --> 00:00:04.865
The next thing that I'm gonna do now that
I have my index page is I wanna start

2
00:00:04.865 --> 00:00:06.152
writing this form.

3
00:00:06.152 --> 00:00:10.584
So let's create a components folder,

4
00:00:10.584 --> 00:00:15.697
components, and we'll cal this form.js.

5
00:00:15.697 --> 00:00:20.303
And in it, I'm going to import
React from 'react'; and

6
00:00:20.303 --> 00:00:23.710
let's create a form component.

7
00:00:23.710 --> 00:00:29.520
So the first thing that we'll
do is we'll just return form.

8
00:00:29.520 --> 00:00:37.156
So we're gonna add this form and
it needs to have inputs and things.

9
00:00:37.156 --> 00:00:39.850
So we're gonna wanna style these and

10
00:00:39.850 --> 00:00:43.760
rather than writing out the whole form and
then going back and editing it for styles,

11
00:00:43.760 --> 00:00:49.272
I'm going to just create
an empty form.module.css.

12
00:00:49.272 --> 00:00:51.714
The .module signifies
that it is a CSS module.

13
00:00:51.714 --> 00:00:55.935
So that is required if you're gonna use
it the way that I'm about to use it.

14
00:00:55.935 --> 00:01:00.855
So by creating a forum.module.css,
I can now import it as styles.

15
00:01:05.528 --> 00:01:09.470
And what CSS modules does is it lets us
use any class names that are defined.

16
00:01:09.470 --> 00:01:14.980
So if I create a heading class,
I'll be able to call styles.heading.

17
00:01:14.980 --> 00:01:19.260
And what CSS modules does under
the hood is it creates a hash name so

18
00:01:19.260 --> 00:01:22.050
that we don't get scope collisions or
any of those things.

19
00:01:22.050 --> 00:01:25.480
And it allows us to have really
simple names like container, wrapper,

20
00:01:25.480 --> 00:01:26.980
heading, text,

21
00:01:26.980 --> 00:01:32.270
that would absolutely conflict on a larger
app if we weren't using CSS modules.

22
00:01:32.270 --> 00:01:36.100
So it just helps us cut down on
on boilerplate overhead stress,

23
00:01:36.100 --> 00:01:38.390
all those things.

24
00:01:38.390 --> 00:01:43.850
So in my form,
I want to use the styles and

25
00:01:43.850 --> 00:01:47.240
I'm gonna define my classes ahead of time
and then we'll go and write them in.

26
00:01:47.240 --> 00:01:49.823
So we're gonna use the styles.form for
this one.

27
00:01:49.823 --> 00:01:56.057
I wanna have a label and this one is
going to have a class name of label.

28
00:01:57.500 --> 00:02:00.066
And inside of it, we'll say name.

29
00:02:00.066 --> 00:02:06.636
And we'll do an input with
a class name of input.

30
00:02:06.636 --> 00:02:09.556
Turn on wrap before we do this.

31
00:02:09.556 --> 00:02:16.515
And then we'll have it's gonna have
a type of text and the name of name.

32
00:02:16.515 --> 00:02:20.606
And because we're putting the input inside
of the label, it should be accessible to

33
00:02:20.606 --> 00:02:24.420
screen readers where it will read the name
and associate that with this input.

34
00:02:25.950 --> 00:02:31.360
Next, I want to add one for email.

35
00:02:31.360 --> 00:02:33.832
So this is the email that
you'll be sending from.

36
00:02:33.832 --> 00:02:37.794
I'm gonna change this one
over to use email and

37
00:02:37.794 --> 00:02:41.054
let's make it a type of email as well.

38
00:02:41.054 --> 00:02:46.138
So that if you're typing on a phone
it'll change your keyboard layout and

39
00:02:46.138 --> 00:02:50.901
show the @ symbol and, and
make it a little more convenient to type.

40
00:02:50.901 --> 00:02:55.895
In addition to an email,
we need a subject line.

41
00:02:55.895 --> 00:03:00.509
That's a text field,
it's gonna be called subject.

42
00:03:00.509 --> 00:03:05.140
And finally, we need some body, body text.

43
00:03:05.140 --> 00:03:09.844
So the body of our email is
going to be a text area and

44
00:03:09.844 --> 00:03:14.998
that doesn't have a type cuz
a text area is a text area.

45
00:03:14.998 --> 00:03:18.818
React handles text areas
a little specially.

46
00:03:18.818 --> 00:03:22.790
And then the final thing,
is we need a way to submit this thing.

47
00:03:22.790 --> 00:03:27.880
So let's add a button,
give it a class name of styles.button.

48
00:03:27.880 --> 00:03:33.043
And then we can say send, all right.

49
00:03:33.043 --> 00:03:35.944
So we need to export this component so
that we can use it, so

50
00:03:35.944 --> 00:03:37.620
we'll export it as the default.

51
00:03:40.130 --> 00:03:43.490
And now we can go into our index.js and
use it.

52
00:03:43.490 --> 00:03:51.600
So I'm going to import
form from components form.

53
00:03:51.600 --> 00:03:55.608
And then down here I can
just drop that component in.

54
00:03:55.608 --> 00:04:02.318
And if you're not familiar with React,
this is kind of the underlying,

55
00:04:02.318 --> 00:04:07.163
I guess the underpinning
architectural ideology.

56
00:04:07.163 --> 00:04:10.864
Is that you package up things into
components, which make them easy to drop

57
00:04:10.864 --> 00:04:14.110
in elsewhere so that we don't have
to worry about the form logic.

58
00:04:14.110 --> 00:04:15.440
We just know that the form will work.

59
00:04:17.550 --> 00:04:20.330
So then we wanna add some
actual styles to this thing.

60
00:04:20.330 --> 00:04:23.180
So I'm gonna go through
kind of quickly on this.

61
00:04:23.180 --> 00:04:27.260
But my goal is to show that we
can get a lot of benefit out of

62
00:04:27.260 --> 00:04:28.820
learning a little bit of CSS.

63
00:04:28.820 --> 00:04:31.510
It'll save us from
ourselves in terms of extra

64
00:04:31.510 --> 00:04:33.840
JavaScript things that
we're gonna end up doing.

65
00:04:33.840 --> 00:04:36.200
So let's make this look kinda nice.

66
00:04:36.200 --> 00:04:39.500
We'll make it a light gray border,

67
00:04:39.500 --> 00:04:44.572
we'll give it a border radius so
it looks super sweet.

68
00:04:44.572 --> 00:04:47.860
And you may notice that I've
been using the rem unit.

69
00:04:47.860 --> 00:04:51.270
The reason that I like the rem
unit is that it's relative to

70
00:04:51.270 --> 00:04:53.300
whatever size we set on HTML.

71
00:04:53.300 --> 00:04:58.040
So if we change that,
I think we set the HTML to 18 pixels,

72
00:04:58.040 --> 00:05:02.040
if we change that to 20,
everything will proportionately adjust.

73
00:05:02.040 --> 00:05:05.310
And that's a really, really nice
feature when you start looking at

74
00:05:05.310 --> 00:05:08.940
well if the design system changes and
now everybody mandates 16 pixels.

75
00:05:08.940 --> 00:05:12.758
You don't wanna have to go through and
redo all of that math on what the margins

76
00:05:12.758 --> 00:05:15.490
and spacing and padding for
everything should be.

77
00:05:15.490 --> 00:05:17.500
You can just make it relative
to the font size and

78
00:05:17.500 --> 00:05:21.010
it'll look good at whatever pixel size.

79
00:05:22.950 --> 00:05:25.980
So then, we can do display block.

80
00:05:25.980 --> 00:05:30.295
Let's set up a little bit of margins,
I will do little bit on top,

81
00:05:30.295 --> 00:05:33.135
we'll center it, nothing on the bottom.

82
00:05:33.135 --> 00:05:38.645
Set a max-width for this form of 500px and

83
00:05:38.645 --> 00:05:44.157
then we'll give it
a padding of about 1rem.

84
00:05:44.157 --> 00:05:50.914
So then for the label and the input,
these are both gonna be display block.

85
00:05:50.914 --> 00:05:53.697
And that should immediately clean
this thing up a little bit.

86
00:05:53.697 --> 00:05:55.305
All right, we're looking better.

87
00:05:55.305 --> 00:05:59.183
It's starting to look formish.

88
00:05:59.183 --> 00:06:03.730
Then let's make our label look nice.

89
00:06:03.730 --> 00:06:08.450
So one trick that I like is to make
the labels a little bit smaller but

90
00:06:08.450 --> 00:06:10.610
then spread out the letter spacing.

91
00:06:12.530 --> 00:06:16.335
And I use relative to itself,
so an versus an rem.

92
00:06:16.335 --> 00:06:18.705
And then I make them uppercase.

93
00:06:22.450 --> 00:06:30.060
And just like I don't know, it looks
labelee to me, you can do what you will.

94
00:06:30.060 --> 00:06:34.808
Then for the input,
let's make these kind of match our thing.

95
00:06:34.808 --> 00:06:40.130
So I'm gonna say we'll do 1 pixel solid,

96
00:06:40.130 --> 00:06:45.750
set up a border radius on it, and that
border radius is gonna be a quarter rem.

97
00:06:45.750 --> 00:06:51.850
We'll set up the font size
to match the document.

98
00:06:51.850 --> 00:06:58.090
We'll have a margin at the bottom
of three quarters rem.

99
00:06:59.230 --> 00:07:01.875
And then we want a little bit of padding,
so

100
00:07:01.875 --> 00:07:05.046
that the text isn't smashed
against that border.

101
00:07:05.046 --> 00:07:07.435
And we'll make it as wide
as the form will allow.

102
00:07:08.535 --> 00:07:11.357
Hey, this is starting to look like a form,
right?

103
00:07:11.357 --> 00:07:16.342
And then the last that we wanna do is
let's add just a little bit of styling

104
00:07:16.342 --> 00:07:17.416
on our button.

105
00:07:17.416 --> 00:07:21.198
So for our button,
I'm going to give it a standout color.

106
00:07:21.198 --> 00:07:23.721
So we'll say it's gonna be dark blue.

107
00:07:23.721 --> 00:07:27.740
For the border,
we'll give it a 1 pixel solid, dark blue.

108
00:07:27.740 --> 00:07:30.100
I could also make that border transparent.

109
00:07:30.100 --> 00:07:31.560
I'm not sure that it matters.

110
00:07:31.560 --> 00:07:33.580
This is just what I ended up doing.

111
00:07:33.580 --> 00:07:38.310
We'll give it a border radius to
match the input, so a quarter rem.

112
00:07:38.310 --> 00:07:42.500
We'll give it a text color of white,
so that text stands out.

113
00:07:43.570 --> 00:07:48.170
And buttons, for whatever reason,
don't give you the clicky thing, so

114
00:07:48.170 --> 00:07:52.150
I'm gonna set the cursor to pointer for
when you hover over it.

115
00:07:53.440 --> 00:07:56.040
The industry term is clicky thing.

116
00:07:56.040 --> 00:08:00.155
Then, we'll make a display block so

117
00:08:00.155 --> 00:08:03.885
it won't wrap around anything.

118
00:08:03.885 --> 00:08:08.075
And we'll set the font size
to a little bit bigger.

119
00:08:08.075 --> 00:08:09.983
Okay, it's a form.

120
00:08:09.983 --> 00:08:13.680
It's very form looking.

121
00:08:13.680 --> 00:08:15.999
And our text in here, that looks okay.

122
00:08:15.999 --> 00:08:17.193
So, I'm happy.

123
00:08:17.193 --> 00:08:23.001
Let's make this into an actual React form.

124
00:08:23.001 --> 00:08:28.551
And the way that we're going to do
that is, let's save our work first.

125
00:08:33.423 --> 00:08:36.993
Well, I wanna do one thing,
cuz right now if I submit this,

126
00:08:39.815 --> 00:08:44.880
It's gonna break on me, and it reloads
the page, which I don't want it to do.

127
00:08:44.880 --> 00:08:48.510
So I'm gonna add one more thing,
which is a handleSubmit function.

128
00:08:49.760 --> 00:08:52.880
And that gets the submission event, and

129
00:08:52.880 --> 00:08:57.230
I'm just gonna prevent it, so
I don't want it to do anything.

130
00:08:57.230 --> 00:09:02.110
And then, now we have now opted
into that responsibility.

131
00:09:02.110 --> 00:09:04.410
So we have to handle it.

132
00:09:04.410 --> 00:09:06.540
So we need to actually send the message.

133
00:09:07.790 --> 00:09:12.088
And then I'm going to add this
to the form itself for onsubmit.

134
00:09:12.088 --> 00:09:16.264
This is a kind of a convenience thing that
allows us to say, hey, whenever this form

135
00:09:16.264 --> 00:09:19.860
gets submitted, do this thing and
so we're gonna call handleSubmit.

136
00:09:22.660 --> 00:09:25.590
So now when I click,
it doesn't do anything.

137
00:09:25.590 --> 00:09:28.374
So now we're responsible for
handling that.

