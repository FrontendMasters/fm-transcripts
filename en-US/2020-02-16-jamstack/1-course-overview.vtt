WEBVTT

1
00:00:00.140 --> 00:00:05.960
We're gonna do kind of a whirlwind
tour of what the JAMstack is,

2
00:00:05.960 --> 00:00:08.300
how we can use it to
build our own projects.

3
00:00:08.300 --> 00:00:15.750
And we'll start diving into some
of the more production use cases.

4
00:00:15.750 --> 00:00:18.124
Because the easy one is, hey,
let's build a marketing site, right?

5
00:00:18.124 --> 00:00:20.678
But you can use the JAMstack for
more than that.

6
00:00:20.678 --> 00:00:25.181
You can build full-featured apps,
you can build user dashboards,

7
00:00:25.181 --> 00:00:29.693
you can build database-powered
apps that persist between things.

8
00:00:29.693 --> 00:00:30.325
You can combine those
in any number of ways.

9
00:00:30.325 --> 00:00:35.010
We're gonna look at kind of simplified
cases of how do to those things.

10
00:00:35.010 --> 00:00:38.663
And then it'll be an exercise for
you to go out and

11
00:00:38.663 --> 00:00:43.780
combine them as you see fit
to meet your business needs.

12
00:00:43.780 --> 00:00:45.140
So the first thing that we're gonna do is,

13
00:00:45.140 --> 00:00:47.300
we're just gonna create
a really basic JAMstack site.

14
00:00:47.300 --> 00:00:50.840
We're gonna go for
the most reduced case possible.

15
00:00:52.400 --> 00:00:54.980
Then we're gonna deploy it,
we're gonna get one up on the Internet.

16
00:00:54.980 --> 00:00:59.520
This is actually one of my favorite
things to do, because it shows how

17
00:00:59.520 --> 00:01:04.280
fast we can be as developers when
we when we adopt a stack like this.

18
00:01:05.440 --> 00:01:07.750
We're going to learn how to
use serverless functions,

19
00:01:07.750 --> 00:01:10.912
you've potentially heard these called
lambdas, functions as a service.

20
00:01:10.912 --> 00:01:14.669
There are a lot of different ways that
these get described, but what they

21
00:01:14.669 --> 00:01:19.060
ultimately mean is, it is a function that
you can deploy on someone else's server.

22
00:01:19.060 --> 00:01:22.630
You never see the the actual
implementation of that server,

23
00:01:22.630 --> 00:01:26.030
you just manage your few
lines of JavaScript code.

24
00:01:26.030 --> 00:01:31.020
And you get what is effectively
a functioning server, but you only pay for

25
00:01:31.020 --> 00:01:36.070
execution time,
as opposed to having it up all the time.

26
00:01:36.070 --> 00:01:37.920
We're gonna protect content
with authentication.

27
00:01:37.920 --> 00:01:40.161
So we're gonna look at
what the options are, and

28
00:01:40.161 --> 00:01:41.975
then we're gonna actually write one.

29
00:01:41.975 --> 00:01:44.377
So that we can take some
content on a site, and

30
00:01:44.377 --> 00:01:47.740
make sure that it's only accessible
if you have a valid token.

31
00:01:48.900 --> 00:01:52.390
And then we'll handle reading and
writing persisted data.

32
00:01:52.390 --> 00:01:56.500
So I want to be able to go to a website,
make some changes, and

33
00:01:56.500 --> 00:01:59.250
then log in on my phone and
see those changes again.

34
00:01:59.250 --> 00:02:00.810
We won't do a login with this,

35
00:02:00.810 --> 00:02:02.940
but we'll show how to do
the database reads and writes.

36
00:02:04.420 --> 00:02:06.570
So let's go ahead and get started.

37
00:02:06.570 --> 00:02:11.360
This is the intro that you're gonna want,
or the repo that you'll wanna use.

38
00:02:12.670 --> 00:02:17.480
The way that it's set up is, it's going
to have each of the sections in a folder.

39
00:02:17.480 --> 00:02:19.840
I've put some of the files
in there already,

40
00:02:19.840 --> 00:02:21.819
like style sheets where we
don't wanna write style sheets.

41
00:02:23.960 --> 00:02:26.780
And just make sure you're
on that start branch.

42
00:02:26.780 --> 00:02:28.470
If at some point you get lost,

43
00:02:29.780 --> 00:02:34.690
there is a cheat sheet branch that
has all of the work we're gonna do.

44
00:02:34.690 --> 00:02:37.196
So you can always jump in there.

45
00:02:37.196 --> 00:02:41.340
And then we will, as we start doing
the work, I will create a new branch

46
00:02:41.340 --> 00:02:44.930
called femprogress, and
I will push changes as we get there.

47
00:02:44.930 --> 00:02:45.920
So that at any point,

48
00:02:45.920 --> 00:02:50.460
you can check out your changes and
just catch up to where we are.

