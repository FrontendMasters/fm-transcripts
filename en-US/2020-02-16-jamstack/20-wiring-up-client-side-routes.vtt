WEBVTT

1
00:00:00.020 --> 00:00:04.380
There's one problem here which you
may have noticed, which is that if we

2
00:00:04.380 --> 00:00:09.040
go to our home page, and we click
this link, it takes us to /dashboard.

3
00:00:09.040 --> 00:00:12.791
And we didn't set up a route for that.

4
00:00:12.791 --> 00:00:15.960
And I'm actually okay with that, I don't
think that we need a route at the end.

5
00:00:15.960 --> 00:00:18.940
But we do have to set up a redirect so
that we end up in the right place.

6
00:00:18.940 --> 00:00:21.970
So let's say that if you hit dashboard,
and

7
00:00:21.970 --> 00:00:25.760
we wanna be redirected immediately
to the login, that's what we want.

8
00:00:25.760 --> 00:00:29.230
So let's just set that up to exist.

9
00:00:29.230 --> 00:00:34.000
And to make that happen,
I'm gonna use the useEffect hook in React.

10
00:00:35.150 --> 00:00:38.540
It's basically a way for
us to say when this component changes.

11
00:00:38.540 --> 00:00:44.865
So when it mounts, we want to check
what's going on and then and modify it.

12
00:00:44.865 --> 00:00:49.377
So I'm gonna set up useEffect
that accepts a function and

13
00:00:49.377 --> 00:00:52.470
then an array of dependencies.

14
00:00:52.470 --> 00:00:58.070
And anything in this array that changes
will cause this effect to run again.

15
00:00:58.070 --> 00:01:01.030
So what we wanna do is get the location.

16
00:01:01.030 --> 00:01:03.370
And because this is a gatsby page,

17
00:01:03.370 --> 00:01:08.120
it gives us a helper of the location,
right in the props.

18
00:01:08.120 --> 00:01:11.251
It's just available for us, so
we don't have to worry about getting it.

19
00:01:11.251 --> 00:01:17.471
If we needed to, we could also use
the URL API from the browser to get that.

20
00:01:17.471 --> 00:01:19.010
But since we already have it,
we don't need it.

21
00:01:20.060 --> 00:01:24.950
So what I wanna do is I wanna
check if the location path name,

22
00:01:24.950 --> 00:01:28.990
if that matches,
just dashboard straight up.

23
00:01:28.990 --> 00:01:35.838
So it starts with dashboard, and
it ends with either of trailing slash or

24
00:01:35.838 --> 00:01:39.895
just with dashboard and nothing after it.

25
00:01:39.895 --> 00:01:42.235
And we use a dollar sign to
indicate that that's the end of it,

26
00:01:42.235 --> 00:01:44.090
there's nothing afterward.

27
00:01:44.090 --> 00:01:50.730
Then we know that that is
where the root dashboard.

28
00:01:50.730 --> 00:01:54.210
So if that's true,
we're going to navigate.

29
00:01:54.210 --> 00:01:57.220
And this navigate function
comes from gatsby.

30
00:01:57.220 --> 00:02:02.319
So I'm gonna import navigate from gatsby.

31
00:02:03.330 --> 00:02:07.416
And this is something that's
also built on Reach Router.

32
00:02:07.416 --> 00:02:09.774
It's to kind of provide
it as a convenience so

33
00:02:09.774 --> 00:02:11.580
that we can do custom navigation.

34
00:02:14.000 --> 00:02:18.410
And inside of this,
what's it complaining about?

35
00:02:18.410 --> 00:02:19.309
If location.

36
00:02:22.745 --> 00:02:24.460
There we go, that's what it didn't like.

37
00:02:24.460 --> 00:02:26.707
I forgot to close my regular expression.

38
00:02:26.707 --> 00:02:30.750
Then we're gonna navigate
to dashboard/login.

39
00:02:32.950 --> 00:02:34.850
And because we don't wanna
get into redirect loops,

40
00:02:34.850 --> 00:02:36.940
we're just gonna replace the history.

41
00:02:36.940 --> 00:02:41.210
And what that means is
when we get redirected,

42
00:02:41.210 --> 00:02:45.400
we want it to instead of sending us back
to /dashboard which would then immediately

43
00:02:45.400 --> 00:02:49.400
redirect us, we want it to just replace
that history item with the login.

44
00:02:49.400 --> 00:02:52.050
So that when we click forward,
if I hit back,

45
00:02:52.050 --> 00:02:53.780
it doesn't immediately
redirect me to where I was.

46
00:02:53.780 --> 00:02:56.540
It lets us get back to that homepage.

47
00:02:56.540 --> 00:03:00.240
So that's what we're looking for,
is that we can log in.

48
00:03:00.240 --> 00:03:06.002
And I believe this would be
a good spot to save our work.

49
00:03:06.002 --> 00:03:10.468
So what we're doing here, just to recap,
is we've now set up a fully

50
00:03:10.468 --> 00:03:14.850
functioning app, but
we haven't authenticated anything yet.

51
00:03:14.850 --> 00:03:18.201
We've got a dashboard,
the client side routing is working.

52
00:03:18.201 --> 00:03:24.280
This will work on the server on the client
side, and we can get between these pages.

53
00:03:24.280 --> 00:03:26.638
And if we just go to
the straight dashboard,

54
00:03:26.638 --> 00:03:28.435
it will take us to the login page.

