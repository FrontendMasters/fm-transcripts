WEBVTT

1
00:00:00.190 --> 00:00:03.500
I want to look into how we
would have data persist.

2
00:00:03.500 --> 00:00:08.905
So if I have an app, and I wanna be able
to have somebody create something and save

3
00:00:08.905 --> 00:00:14.490
it, and then have that saved data still be
there the next time they load up the app.

4
00:00:14.490 --> 00:00:16.017
Or if they move to another device,

5
00:00:16.017 --> 00:00:18.290
we wanna make sure that they
can get access to that.

6
00:00:18.290 --> 00:00:21.498
So for that to work,
we need to have access to a database.

7
00:00:21.498 --> 00:00:26.310
Traditionally, databases
have been kind of a pain.

8
00:00:26.310 --> 00:00:29.275
If you've ever managed your own MySQL or
Mongo or

9
00:00:29.275 --> 00:00:33.650
PostgreSQL or any of those instances,
it's something that you have to stand up.

10
00:00:33.650 --> 00:00:36.330
You have to know enough about it to
set it up and configure the tables.

11
00:00:36.330 --> 00:00:40.620
And then there's a whole bunch of boiler
plates to write the cred operations and

12
00:00:40.620 --> 00:00:45.480
then making sure that it's all kinda
sanitized and managed properly.

13
00:00:45.480 --> 00:00:47.600
That's all been getting
progressively easier over time.

14
00:00:48.820 --> 00:00:52.910
And now, we've actually gotten to
the point where it's effectively just like

15
00:00:54.110 --> 00:00:55.840
we did as front end developers.

16
00:00:55.840 --> 00:00:57.490
We don't really have to think about it.

17
00:00:57.490 --> 00:01:00.990
And so I'm super excited to show you
this because this is all pretty new.

18
00:01:00.990 --> 00:01:06.040
So I'm going to move
into the to-do folder,

19
00:01:06.040 --> 00:01:09.950
because what is a workshop if you
don't build a to-do app, right?

20
00:01:11.410 --> 00:01:13.371
So let's get into this to-do folder, and

21
00:01:13.371 --> 00:01:16.643
I'm gonna clear out some old stuff
here that I should have done before.

22
00:01:23.204 --> 00:01:30.330
Okay, so what we've got in this
folder is just a .n.example.

23
00:01:30.330 --> 00:01:33.760
And for this, we're gonna be
using a service called Fauna.

24
00:01:33.760 --> 00:01:36.860
Fauna is a very cool database.

25
00:01:36.860 --> 00:01:39.350
It does a lot of very
computer science-y things.

26
00:01:39.350 --> 00:01:44.219
They're gonna talk about stuff like
acid and transactions and stuff that

27
00:01:44.219 --> 00:01:49.254
honestly as a front-end developer,
you want to never have to think about.

28
00:01:49.254 --> 00:01:53.475
And that is one of the reasons why I like
it is that they offer these things but

29
00:01:53.475 --> 00:01:55.430
we don't have to care about them.

30
00:01:55.430 --> 00:01:59.970
The other thing that I think is exciting
is that its designed to be compatible with

31
00:01:59.970 --> 00:02:01.590
the server-less world.

32
00:02:01.590 --> 00:02:04.570
And it's designed to be
compatible with GraphQL.

33
00:02:04.570 --> 00:02:07.450
Who here has used GraphQL before?

34
00:02:07.450 --> 00:02:08.600
It's a couple hands, great.

35
00:02:08.600 --> 00:02:10.400
And if you haven't used GraphQL,
don't worry,

36
00:02:10.400 --> 00:02:13.270
we're not going to go super deep here.

37
00:02:13.270 --> 00:02:15.850
We're going to be kind
of skimming the surface.

38
00:02:15.850 --> 00:02:19.595
And I hope that it's enough to get you
really excited about it because I think

39
00:02:19.595 --> 00:02:20.760
GraphQL is just amazing.

40
00:02:20.760 --> 00:02:25.030
It's such a good technology for
front end development.

41
00:02:25.030 --> 00:02:28.820
So, what we're gonna do first is
we're going to actually just set up

42
00:02:28.820 --> 00:02:29.670
a fauna account.

43
00:02:31.820 --> 00:02:33.384
So let me jump in over here.

44
00:02:33.384 --> 00:02:36.870
And I'm gonna go to fauna.com.

45
00:02:36.870 --> 00:02:43.970
And so fauna is effectively
designed from the API up

46
00:02:43.970 --> 00:02:49.080
to be really easy to use with serverless
and that's why I think it's kind of nice.

47
00:02:49.080 --> 00:02:51.720
So I already have an account,
I'm gonna sign in with Telefi.

48
00:02:54.990 --> 00:02:59.293
And now that we get in,
I already created this database so

49
00:02:59.293 --> 00:03:02.630
that I wouldn't have to show API tokens.

50
00:03:02.630 --> 00:03:07.490
But what we would do here is,
we just create a new database and

51
00:03:07.490 --> 00:03:09.570
that'll get us set.

52
00:03:09.570 --> 00:03:11.820
So no special anything.

53
00:03:11.820 --> 00:03:13.930
We don't wanna pre-populate
with demo data.

54
00:03:13.930 --> 00:03:15.650
We're just creating a database.

55
00:03:15.650 --> 00:03:21.610
So inside of this,
I'm going to get my keys out.

56
00:03:21.610 --> 00:03:25.630
And so this is the key that I've created,
you would just create a new one here.

57
00:03:26.630 --> 00:03:29.660
When you create a new key,
you're gonna click this button,

58
00:03:29.660 --> 00:03:31.760
make sure you've selected
your current database.

59
00:03:31.760 --> 00:03:34.220
And then for the role,
we wanna choose a server key.

60
00:03:34.220 --> 00:03:37.900
You can add a name for it if you want.

61
00:03:37.900 --> 00:03:40.460
But that name is completely optional.

62
00:03:40.460 --> 00:03:42.950
And then once you've done that,
you can save it.

63
00:03:42.950 --> 00:03:47.791
And then once you have that key,
you're gonna open up the .env or

64
00:03:47.791 --> 00:03:50.168
you're gonna create a .env and

65
00:03:50.168 --> 00:03:55.205
just use this .env example as
the setting and just replace it here.

