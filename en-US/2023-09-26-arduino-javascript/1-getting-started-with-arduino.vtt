WEBVTT

1
00:00:00.110 --> 00:00:05.164
So let's kinda do, like I said,
the Hello World of an Arduino

2
00:00:05.164 --> 00:00:11.570
also known as does my piece of hardware
work is getting an LED to blink on it.

3
00:00:11.570 --> 00:00:16.298
So we'll do that for a second to kinda
make sure everything is up and running,

4
00:00:16.298 --> 00:00:20.110
and we'll do that the very first
in the actual Arduino tool.

5
00:00:20.110 --> 00:00:23.139
So, here we've got the Arduino IDE.

6
00:00:23.139 --> 00:00:27.546
If you ever use processing,
which is a tool for making art,

7
00:00:27.546 --> 00:00:32.325
based on Java, it should look
very familiar and similar to you.

8
00:00:32.325 --> 00:00:35.765
Like I said, it is C++, but
an abstraction on top of it.

9
00:00:35.765 --> 00:00:40.805
You do have kind of two main methods that
get called, which is setup and loop.

10
00:00:40.805 --> 00:00:42.903
Setup does what you think it does, and

11
00:00:42.903 --> 00:00:46.165
then loop begins to run once
the Arduino is loaded up.

12
00:00:46.165 --> 00:00:49.646
The other thing you can
do is you should see the,

13
00:00:49.646 --> 00:00:54.695
I will tell you only because I have
a stack of boards that it's usually

14
00:00:54.695 --> 00:00:59.240
more helpful to have it plugged
in before you start up the IDE.

15
00:00:59.240 --> 00:01:05.605
So if you do not see your Arduino Uno that
you plugged in after you opened the IDE,

16
00:01:05.605 --> 00:01:10.730
just do the way that you fix
everything with technology.

17
00:01:10.730 --> 00:01:13.480
Quit it, and open it back up, right?

18
00:01:13.480 --> 00:01:15.222
When in doubt,
let's just get this out of the way.

19
00:01:15.222 --> 00:01:18.520
Now, when in doubt, turn it off and
turn it back on, right?

20
00:01:18.520 --> 00:01:21.950
But in this case,
I would just quit the app and reopen it.

21
00:01:21.950 --> 00:01:24.254
It might be there, it might not.

22
00:01:24.254 --> 00:01:27.184
As you can see, I've also got
my Bluetooth incoming port and

23
00:01:27.184 --> 00:01:28.919
a guitar pedal that I used one time.

24
00:01:30.730 --> 00:01:33.870
So now I've switched
it to the Arduino Uno.

25
00:01:34.880 --> 00:01:39.159
And one of the other things that
I will kind of point out now,

26
00:01:39.159 --> 00:01:45.030
is that this menu kind of changes based
on what board you have plugged in.

27
00:01:45.030 --> 00:01:50.798
But you will see these examples where for
the starter kit,

28
00:01:50.798 --> 00:01:55.990
there are a bunch of
prewritten code already there.

29
00:01:55.990 --> 00:02:00.488
So if you wanna practice, if there is
something in the starter kit that you see,

30
00:02:00.488 --> 00:02:04.420
that you just want to wire up and
have the code written for you.

31
00:02:04.420 --> 00:02:06.360
That is an option.

32
00:02:06.360 --> 00:02:08.915
Those are all here, but
if you don't see it,

33
00:02:08.915 --> 00:02:13.234
it is because you do not have the Arduino
Uno selected in that drop-down.

34
00:02:13.234 --> 00:02:19.910
This list of examples will change based
on what board you have plugged in.

35
00:02:19.910 --> 00:02:22.764
And there's a whole bunch of other
different examples that you can kinda

36
00:02:22.764 --> 00:02:23.840
take a look at.

37
00:02:23.840 --> 00:02:27.808
For us right now,
we want to go into Basics and Blink.

38
00:02:30.843 --> 00:02:34.039
All this does, and
we can look at this code real quick and

39
00:02:34.039 --> 00:02:39.300
if the C++ hurts your feelings,
that's okay, it hurts my feelings, too.

40
00:02:39.300 --> 00:02:44.686
But we'll kinda switch over to JavaScript
in a little bit, but I think it makes

41
00:02:44.686 --> 00:02:49.840
sense to kinda look at the basics of how
everything is laid out in this case.

42
00:02:49.840 --> 00:02:57.809
So there is one LED that
is kind of like built in,

43
00:02:57.809 --> 00:03:02.008
it's a tiny little one.

44
00:03:02.008 --> 00:03:04.590
You will see it when it blinks,
how about that?

45
00:03:04.590 --> 00:03:09.047
If you don't see it immediately,
and that one is by definition,

46
00:03:09.047 --> 00:03:14.560
stored for you in a variable called
LED_BUILT_IN, which is good name.

47
00:03:14.560 --> 00:03:18.741
And that is also a euphemism for PIN 13,

48
00:03:18.741 --> 00:03:22.575
which you will also see on your board.

49
00:03:22.575 --> 00:03:25.385
And when I switch over to that camera will
kind of like take a tour of the board,

50
00:03:25.385 --> 00:03:28.300
I'll pick it up and move it around and
show you different pieces of it.

51
00:03:28.300 --> 00:03:31.384
But trust me right now
that the built in LED, and

52
00:03:31.384 --> 00:03:35.570
whatever we plug into PIN 13
are roughly the same thing.

53
00:03:35.570 --> 00:03:39.448
And that is the setup piece where we
just kind of like, okay, this is gonna

54
00:03:39.448 --> 00:03:43.940
be an output pin cuz sometimes you want
data coming into the Arduino board.

55
00:03:43.940 --> 00:03:45.263
Sometimes you're saying, no,

56
00:03:45.263 --> 00:03:48.583
I'm gonna tell something in the outside
world that things are happening, right?

57
00:03:48.583 --> 00:03:53.918
And so you just kinda specifying that out
in the very beginning and setting that up.

58
00:03:53.918 --> 00:03:59.725
And then we move into the loop which will
run as a comment very eloquently says

59
00:03:59.725 --> 00:04:05.640
over and over again for ever, or until
you turn it off or unplugged the board.

60
00:04:05.640 --> 00:04:10.579
Forever is yeah, a relative term to
which we do a digital write of high and

61
00:04:10.579 --> 00:04:15.340
then we wait a second, and
then we do a digital write of low.

62
00:04:15.340 --> 00:04:17.150
So turn it off, turn it on.

63
00:04:17.150 --> 00:04:20.110
Send it 5 volts, don't send it 5 volts.

64
00:04:20.110 --> 00:04:23.100
Send it 5 volts, don't send it 5 volts.

65
00:04:23.100 --> 00:04:24.950
And we run that forever.

66
00:04:24.950 --> 00:04:26.386
So in our Hello World here,

67
00:04:26.386 --> 00:04:30.327
let's go ahead and we're gonna hit
this button here to upload the sketch.

68
00:04:35.623 --> 00:04:37.357
Done uploading.

69
00:04:37.357 --> 00:04:40.022
So here we've got our Arduino.

70
00:04:40.022 --> 00:04:43.900
As you can see, I've got a little LED that
is blinking on and it's blinking off.

71
00:04:43.900 --> 00:04:46.700
It's blinking on, it's blinking off.

72
00:04:46.700 --> 00:04:50.044
The nice thing about anything
you use the Arduino IDE for

73
00:04:50.044 --> 00:04:53.710
is that actual code is loaded
onto the device itself.

74
00:04:53.710 --> 00:04:55.814
Now, depending on which device you use,

75
00:04:55.814 --> 00:04:58.410
I think the R3 has about
32 kilobytes of memory.

76
00:04:58.410 --> 00:05:01.222
There's not a lot of room
to do a lot of stuff,

77
00:05:01.222 --> 00:05:04.770
which is why it cannot
fit all of Node.js on it.

78
00:05:04.770 --> 00:05:09.150
There are projects that try to trim down
node until it's smallest possible format,

79
00:05:09.150 --> 00:05:12.293
but I think even those are a little
too big for an Arduino, but

80
00:05:12.293 --> 00:05:14.830
like I said it all applies either way.

81
00:05:14.830 --> 00:05:18.592
And so I've got this little
built-in LED that's going on,

82
00:05:18.592 --> 00:05:22.374
that's going off, and
if I unplug this and I plug it back in.

83
00:05:22.374 --> 00:05:25.510
If I just unplug it and like just
take this power adapter over here or

84
00:05:25.510 --> 00:05:29.095
a 9-volt battery and hook that up,
it will still blink on and off cuz that is

85
00:05:29.095 --> 00:05:32.310
the effectively the firmware that's
running on it at this moment.

86
00:05:34.130 --> 00:05:39.475
With that, if we look on our digital
pins they are all labeled, right?

87
00:05:39.475 --> 00:05:43.400
So in this case we've got 0,
all the way up to 13,

88
00:05:43.400 --> 00:05:48.413
those are the ones we mostly care
about today with a ground as well.

89
00:05:48.413 --> 00:05:52.013
There is a little squiggle
line next to some of those,

90
00:05:52.013 --> 00:05:54.336
that squiggle line is important.

91
00:05:54.336 --> 00:05:56.935
I'll explain what pulse width
modulation is later, and

92
00:05:56.935 --> 00:05:59.760
then we'll talk about why
the squiggles are important then.

93
00:05:59.760 --> 00:06:05.758
And then, if we flip it over,
we've got our analog ports, right?

94
00:06:05.758 --> 00:06:08.243
And these are just for
actual more traditional,

95
00:06:08.243 --> 00:06:10.700
how much voltage is coming back into this?

96
00:06:10.700 --> 00:06:14.556
As well we've also got a 5 volt,
and a 3.3 volt, and

97
00:06:14.556 --> 00:06:17.090
some more ground over here as well.

98
00:06:17.090 --> 00:06:22.344
And those are kinda the ones that we
are most concerned about today, right?

99
00:06:22.344 --> 00:06:27.853
And so we've got a blinking LED at this
point, and so we know, if you see that,

100
00:06:27.853 --> 00:06:32.463
means that everything is at least
hooked up and wired up correctly

