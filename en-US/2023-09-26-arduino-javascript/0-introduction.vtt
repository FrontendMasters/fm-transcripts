WEBVTT

1
00:00:00.000 --> 00:00:03.496
Hello friends, we're gonna talk
about JavaScript and robotics.

2
00:00:03.496 --> 00:00:06.735
Typically, in the earliest days we
wrote JavaScript in the browser, and

3
00:00:06.735 --> 00:00:09.045
then we were like,
what if we did this in the server?

4
00:00:09.045 --> 00:00:13.061
And then we were like, what if we then
also controlled hardware with it, right?

5
00:00:13.061 --> 00:00:15.897
And so we're gonna talk about kinda
the different layers of that and

6
00:00:15.897 --> 00:00:17.600
how to kinda work with all these things.

7
00:00:17.600 --> 00:00:21.924
And I will tell you right now,
one of the focuses of this

8
00:00:21.924 --> 00:00:26.624
workshop is not just how do I
do the standard Arduino stuff or

9
00:00:26.624 --> 00:00:30.495
whatever hardware stuff
just with JavaScript.

10
00:00:30.495 --> 00:00:35.024
I think one of the themes that we're
gonna kind of try to explore during this,

11
00:00:35.024 --> 00:00:37.897
is how do we take advantage
of all three of those?

12
00:00:37.897 --> 00:00:40.364
How do we take advantage of the fact that,
yes,

13
00:00:40.364 --> 00:00:43.834
could you just write regular old
Arduino sketches in JavaScript?

14
00:00:43.834 --> 00:00:44.626
You could.

15
00:00:44.626 --> 00:00:47.836
Could you write any old Node code?

16
00:00:47.836 --> 00:00:49.100
Of course you could, and browser code.

17
00:00:49.100 --> 00:00:53.411
But in so far that we have all
three of those at our disposal,

18
00:00:53.411 --> 00:00:58.672
what new avenues and things does that
open up for us, and what kind of ways

19
00:00:58.672 --> 00:01:03.698
can we explore and build on top of
the three of those things together?

20
00:01:03.698 --> 00:01:06.947
So it's not just necessarily
about how do I, and yes,

21
00:01:06.947 --> 00:01:11.272
we will start with the hello world of
Arduino, can we get an LED to blink?

22
00:01:11.272 --> 00:01:12.931
Yes, right.

23
00:01:12.931 --> 00:01:16.618
Okay, but what if we could also use
that same technology, I don't know,

24
00:01:16.618 --> 00:01:17.755
to start a web server?

25
00:01:17.755 --> 00:01:21.068
And what also if we could use the same
technology to add event listeners to

26
00:01:21.068 --> 00:01:22.005
buttons in the DOM?

27
00:01:22.005 --> 00:01:25.807
And then how does that all kind of play
together with some interesting browser

28
00:01:25.807 --> 00:01:27.511
APIs and stuff along those lines?

29
00:01:27.511 --> 00:01:31.536
So kinda like looking at the,
not just how do we program in Arduino,

30
00:01:31.536 --> 00:01:34.219
but what are the unique
things that we can do,

31
00:01:34.219 --> 00:01:38.263
given that we have all these various
technologies at our disposal?

32
00:01:38.263 --> 00:01:42.091
For this workshop,
we're gonna use this Arduino R3 board.

33
00:01:42.091 --> 00:01:47.452
We, out of the box, literally,
everything that you need,

34
00:01:47.452 --> 00:01:53.879
actually way more than you need,
is in this Arduino starter kit as well.

35
00:01:53.879 --> 00:01:57.797
You can buy one of these, but you can
also, we'll actually make a list of just

36
00:01:57.797 --> 00:02:00.592
the parts that we end up using
in this workshop as well.

37
00:02:00.592 --> 00:02:02.819
But if you get that kit,
everything you need is in there.

38
00:02:02.819 --> 00:02:05.498
So this is the Arduino R3, but

39
00:02:05.498 --> 00:02:10.971
I will tell you that a lot of
the other options work just as well.

40
00:02:10.971 --> 00:02:13.483
I've tried this on an Arduino Leonardo,

41
00:02:13.483 --> 00:02:16.578
which is kind of the even
cheaper version of an R3.

42
00:02:16.578 --> 00:02:22.175
I have tried this on the Arduino R4,
everything works great.

43
00:02:22.175 --> 00:02:26.215
Even I've got over here, it's got some
wires in it so I'm not gonna pick it up

44
00:02:26.215 --> 00:02:30.023
and lift it and show you, I've got
an off-brand Arduino board as well.

45
00:02:30.023 --> 00:02:33.346
So the the nice part about the Arduinos,

46
00:02:33.346 --> 00:02:38.050
is that it is like the lingua
franca of hardware, right?

47
00:02:38.050 --> 00:02:42.014
[LAUGH] One would argue the jQuery or
the React of hardware, right?

48
00:02:42.014 --> 00:02:45.313
And so it applies everywhere as well.

49
00:02:45.313 --> 00:02:50.682
The one caveat is that
the Arduino has a few advantages.

50
00:02:50.682 --> 00:02:52.705
One, it's ubiquitous.

51
00:02:52.705 --> 00:02:54.246
Two, it's cheap, right?

52
00:02:54.246 --> 00:02:59.677
And it's just a general, like,
Arduino R3 board will run you about $15.

53
00:02:59.677 --> 00:03:02.907
Some of the other brand
ones are even cheaper.

54
00:03:02.907 --> 00:03:08.801
And even the newer Arduino R4,
it's, I think, $22, right?

55
00:03:08.801 --> 00:03:12.886
There are even cheaper options out there,
there is an Arduino mini,

56
00:03:12.886 --> 00:03:14.512
most of these stuff works.

57
00:03:14.512 --> 00:03:19.466
The disadvantage is that the Arduino
itself cannot run node on it,

58
00:03:19.466 --> 00:03:23.364
does need to be plugged
into your computer, right?

59
00:03:23.364 --> 00:03:27.233
There are a bunch of options, and we'll
have a slide talking about this later,

60
00:03:27.233 --> 00:03:30.030
that there are a bunch of
options that also will run Node.

61
00:03:30.030 --> 00:03:35.722
So let's say we did this on this thing
called the Tehsil 2, this thing will run

62
00:03:35.722 --> 00:03:41.513
Node on it, it has an ethernet port, it
has two USB, like outs as well as one in.

63
00:03:41.513 --> 00:03:46.191
The disadvantage to this, is they
don't make it anymore, [LAUGH], right?

64
00:03:46.191 --> 00:03:51.411
There are options out there, you can
run a lot of this on a Raspberry Pi,

65
00:03:51.411 --> 00:03:57.069
the BeagleBone Black and some of the other
BeagleBone products can run Node.

66
00:03:57.069 --> 00:04:02.248
And the nice part is, having looked at
the previous version of this workshop,

67
00:04:02.248 --> 00:04:04.758
and kinda preparing for this new one,

68
00:04:04.758 --> 00:04:10.110
almost everything applies if you move to
one of those platforms as well, right?

69
00:04:10.110 --> 00:04:14.823
I had to rewrite very little of
the code other than updating like just

70
00:04:14.823 --> 00:04:19.549
generally VARs to constant and let
because it was no longer 2017.

71
00:04:19.549 --> 00:04:23.657
And I could do stuff like that, and
writing the odd async await occasionally,

72
00:04:23.657 --> 00:04:25.533
other than my own personal tastes.

73
00:04:25.533 --> 00:04:29.880
Everything we do today on the Arduinos can
apply to any of these other platforms, but

74
00:04:29.880 --> 00:04:33.143
like I said, the huge advantages
of the Arduino, it is cheap.

75
00:04:33.143 --> 00:04:36.525
It is like by definition,
the foundation for a lot of these things.

76
00:04:36.525 --> 00:04:40.201
So you know that you will always be
able to probably get your hands on one,

77
00:04:40.201 --> 00:04:40.816
very easy.

78
00:04:40.816 --> 00:04:42.547
But should you be like, hey,

79
00:04:42.547 --> 00:04:46.912
I want something that can actually host
the entire Node environment on it,

80
00:04:46.912 --> 00:04:51.850
there are some other options that come and
go, but the actual concepts, all apply.

81
00:04:51.850 --> 00:04:54.999
And the last time we didn't end up
unplugging from the laptop anyway.

82
00:04:54.999 --> 00:04:59.837
So we've got the Arduinos as
kind of the standard foundation.

83
00:04:59.837 --> 00:05:01.861
You can take in various
different directions,

84
00:05:01.861 --> 00:05:03.637
everything applies in every direction.

85
00:05:03.637 --> 00:05:07.794
Can confirm, tried it out myself,
can make promises.

86
00:05:07.794 --> 00:05:10.474
But let's talk about the Arduino R3.

87
00:05:10.474 --> 00:05:14.794
And again if you have an Arduino R4,
there's literally no difference at all,

88
00:05:14.794 --> 00:05:17.244
other than it happens to
be a little faster and

89
00:05:17.244 --> 00:05:20.422
have a little bit more memory and
stuff along those lines.

90
00:05:20.422 --> 00:05:25.643
But the actual layout and everything
along those lines is exactly the same.

91
00:05:25.643 --> 00:05:30.185
Even with the Leonardo, the only real
difference is it's a USB mini port

92
00:05:30.185 --> 00:05:32.723
instead of a full size USB port, right?

93
00:05:32.723 --> 00:05:35.101
And on the R4, it's USB-C.

94
00:05:35.101 --> 00:05:39.379
So that's gonna be the major
differentiator which is what dongle or

95
00:05:39.379 --> 00:05:40.587
adapter you need.

96
00:05:40.587 --> 00:05:44.076
But let's talk a little bit about
the layout of the board itself.

97
00:05:44.076 --> 00:05:46.983
In this example, you've got the USB port.

98
00:05:46.983 --> 00:05:49.343
I don't need to explain that too much.

99
00:05:49.343 --> 00:05:51.100
Along the top you have digital pins.

100
00:05:51.100 --> 00:05:54.393
Digital, 1s and 0s, ons and offs.

101
00:05:54.393 --> 00:05:57.249
You've got the microcontroller
that's doing all the hard work in

102
00:05:57.249 --> 00:05:58.067
the middle there.

103
00:05:58.067 --> 00:05:59.980
And then along the bottom
you have analog pens.

104
00:05:59.980 --> 00:06:04.864
These are for analog electric signals like
turning, they read the amount of voltage

105
00:06:04.864 --> 00:06:08.741
coming through the circuit and
allow you to program based on that.

106
00:06:08.741 --> 00:06:12.125
And then towards the bottom
you have just ground, 5 volt,

107
00:06:12.125 --> 00:06:16.262
3.5 volts, or 3.3 volts, rather,
and stuff along those lines.

108
00:06:16.262 --> 00:06:20.297
So very kinda simple set of
general purpose input and

109
00:06:20.297 --> 00:06:25.812
output that we'll be using to kinda
wire up most of our circuits today.

110
00:06:25.812 --> 00:06:31.018
Then let's talk about the kinda
layers of software in our lives.

111
00:06:31.018 --> 00:06:36.172
The basis here is,
this is a screenshot of the Arduino IDE,

112
00:06:36.172 --> 00:06:40.102
which if you do not have
you should download.

113
00:06:40.102 --> 00:06:44.186
Now we'll be using it in a little bit.

114
00:06:44.186 --> 00:06:50.300
Arduino IDE will basically find any
Arduino you can put into your computer and

115
00:06:50.300 --> 00:06:52.758
allow you to upload code to it.

116
00:06:52.758 --> 00:06:58.133
That said,
the Arduino environment itself is what

117
00:06:58.133 --> 00:07:03.263
we can generally call
a superset on top of C++.

118
00:07:03.263 --> 00:07:07.355
So for anything you do here,
you will be writing C++,

119
00:07:07.355 --> 00:07:12.682
which as just a life choice, I've chosen
not to do it more than I need to.

120
00:07:12.682 --> 00:07:17.585
So I'll be using it at the very
beginning to do like the hello world to

121
00:07:17.585 --> 00:07:19.834
just get a feel of the Arduino.

122
00:07:19.834 --> 00:07:24.170
And to load on some basic ways,
should be able to load JavaScript and

123
00:07:24.170 --> 00:07:25.856
stuff along those lines.

124
00:07:25.856 --> 00:07:27.909
And eventually, towards the end,

125
00:07:27.909 --> 00:07:32.495
we'll just kinda look at the fact that
these days, there are APIs in the browser

126
00:07:32.495 --> 00:07:35.994
that let you talk over serial
to various pieces of hardware.

127
00:07:35.994 --> 00:07:39.704
So we'll load on a little bit different
firmware at that point as well.

128
00:07:39.704 --> 00:07:44.839
But if you've got starter kit, there's
a book of projects in there as well,

129
00:07:44.839 --> 00:07:48.012
those are all using
the regular Arduino C++.

130
00:07:48.012 --> 00:07:50.301
I'm not going to read a book to you.

131
00:07:50.301 --> 00:07:54.178
We're gonna kinda focus on
the JavaScript part of this, but

132
00:07:54.178 --> 00:07:59.135
most things you'll see translate fairly
easily in both directions as well.

133
00:07:59.135 --> 00:08:02.536
But when it come down to, hey,
web servers, or use websockets, or

134
00:08:02.536 --> 00:08:06.718
something along those lines, or send HTTP
requests aboard, that is where we kinda

135
00:08:06.718 --> 00:08:10.564
get the full power of Node.js, and
we will be able to leverage that as well.

136
00:08:10.564 --> 00:08:14.198
So we live in the JavaScript
world on top of that.

137
00:08:14.198 --> 00:08:18.627
That said, so then how do you run
JavaScript on a board like this?

138
00:08:18.627 --> 00:08:23.631
There's a number of layers that
kinda get you all the way there.

139
00:08:23.631 --> 00:08:26.766
And so let's kinda start, I think,

140
00:08:26.766 --> 00:08:31.724
closest to the metal if you will,
which is this library,

141
00:08:31.724 --> 00:08:36.702
which has been around forever,
called Node Serial Port.

142
00:08:36.702 --> 00:08:41.475
And this basically is a library
that allows you to send serial

143
00:08:41.475 --> 00:08:43.355
messages to hardware.

144
00:08:43.355 --> 00:08:46.379
The most common in this
case being an Arduino.

145
00:08:46.379 --> 00:08:48.687
It is incredibly low level.

146
00:08:48.687 --> 00:08:53.531
It is like you're sending packets and
binary data back and forth.

147
00:08:53.531 --> 00:08:59.057
An option that you can use, but we'll
talk about why you might not want to,

148
00:08:59.057 --> 00:09:02.831
because you could write
your own abstractions, or

149
00:09:02.831 --> 00:09:07.944
the fact that the same team just
gave you progressively more layers.

150
00:09:07.944 --> 00:09:10.140
On top of that, we have Firmata.js.

151
00:09:10.140 --> 00:09:14.987
So Firmata is a set of firmware for
an Arduino that kinda have generalized

152
00:09:14.987 --> 00:09:18.494
ways that you can talk to
the board from not Arduino.

153
00:09:18.494 --> 00:09:23.061
So in this case, Firmata is a kind of,
from the raw serial messages to more

154
00:09:23.061 --> 00:09:28.533
JavaScript methods that can send stuff to
and from the board, we've got Firmata.js.

155
00:09:28.533 --> 00:09:32.529
And the most of the methods
on there are very

156
00:09:32.529 --> 00:09:37.195
similar to what you might see in Arduino,
right?

157
00:09:37.195 --> 00:09:41.760
And so it is very close to that
particular set of methods and

158
00:09:41.760 --> 00:09:43.820
stuff along those lines.

159
00:09:43.820 --> 00:09:48.655
And then built on top of
Firmata.js is Johnny-Five?

160
00:09:48.655 --> 00:09:51.511
I think a great,
I already used this analogy, but

161
00:09:51.511 --> 00:09:54.036
I'm just gonna reuse it cuz it's worth it.

162
00:09:54.036 --> 00:09:59.019
Johnny-Five is like,
if you think about just a regular DOM

163
00:09:59.019 --> 00:10:02.618
manipulation, like pre jQuery, right?

164
00:10:02.618 --> 00:10:06.403
And having to remember stuff about,
Internet Explorer needs this,

165
00:10:06.403 --> 00:10:10.445
eventually works like this in Internet Explorer,
but in Firefox they work like this.

166
00:10:10.445 --> 00:10:14.363
And all of those details,
Johnny-Five is the jQuery for all of that.

167
00:10:14.363 --> 00:10:19.723
Which is Johnny-Five when I talked about
all the code that we wrote works across

168
00:10:19.723 --> 00:10:24.603
a lot of different boards, including
ones that are no longer even made.

169
00:10:24.603 --> 00:10:27.562
Johnny-Five is the kind of
abstraction layer over that.

170
00:10:27.562 --> 00:10:30.694
So it gives you the ability to
write a lot of these things, and

171
00:10:30.694 --> 00:10:33.582
then like, okay,
I'm not gonna use an Arduino board,

172
00:10:33.582 --> 00:10:37.166
I'm gonna use an old Tehsil 2 that
I have around, you just swap out.

173
00:10:37.166 --> 00:10:40.575
Just say, hey, I'm gonna use the Tehsil 2,
and Johnny-Five is like, cool,

174
00:10:40.575 --> 00:10:43.856
I know what to do here, don't worry
about it, everything's gonna be okay.

175
00:10:43.856 --> 00:10:48.380
So it gives you a lot of just very
convenient easy ways to interact with

176
00:10:48.380 --> 00:10:52.672
your boards on top of the other
two libraries that we saw earlier.

177
00:10:52.672 --> 00:10:57.642
Like I said BeagleBones, Raspberry Pi's,
there's even various different

178
00:10:57.642 --> 00:11:02.551
you can actually hook an Arduino up to
these like various different shields.

179
00:11:02.551 --> 00:11:06.793
So a lot of this stuff will apply
to any other platforms that you

180
00:11:06.793 --> 00:11:08.107
may choose to use.

181
00:11:08.107 --> 00:11:10.433
We won't use this one today,
but I think it's really cool.

182
00:11:10.433 --> 00:11:15.074
My friend, Suz, made this library called
AVRGirl, which is just a library that you

183
00:11:15.074 --> 00:11:18.956
can take Arduino sketches and
load them onto devices with Node as well.

184
00:11:18.956 --> 00:11:19.706
At this point,

185
00:11:19.706 --> 00:11:23.633
we're just gonna hit the Upload button in
Arduino cuz it's very easy for us, and

186
00:11:23.633 --> 00:11:27.479
we're only gonna need to do this once or
twice, but it is a super cool library.

187
00:11:27.479 --> 00:11:31.062
It's also got experimental support for
what we'll see towards the end just as

188
00:11:31.062 --> 00:11:33.839
a little taste, which is just
looking at the web serial API.

189
00:11:33.839 --> 00:11:37.385
Like I said before, it lets you control
some of the stuff from the browser.

190
00:11:37.385 --> 00:11:41.444
But basically it allows you to
kind of just load sketches on and

191
00:11:41.444 --> 00:11:43.561
have all that at your disposal.

192
00:11:43.561 --> 00:11:46.031
And like I said, the web serial API,

193
00:11:46.031 --> 00:11:49.790
I wouldn't build production
apps on top of it, right?

194
00:11:49.790 --> 00:11:54.644
Cuz can I use support isn't great, but
I think it's still an experimental API for

195
00:11:54.644 --> 00:11:58.088
the most part, but
it does let you send serial messages and

196
00:11:58.088 --> 00:12:00.712
do a lot of this stuff without Node,
right?

197
00:12:00.712 --> 00:12:04.899
So more like JavaScript bots cuz
you can literally open up Chrome,

198
00:12:04.899 --> 00:12:08.728
connect to, in this case an Arduino,
but also other stuff.

199
00:12:08.728 --> 00:12:11.848
I have a guitar pedal that's
registered with my computer for

200
00:12:11.848 --> 00:12:15.762
serial messages over Bluetooth, and
it showed up on the list of things that I

201
00:12:15.762 --> 00:12:18.347
could theoretically talk
to from my web browser.

202
00:12:18.347 --> 00:12:23.378
And so being able to do all that from
the browser is also incredibly cool,

203
00:12:23.378 --> 00:12:28.589
as you can see, incredibly experimental,
but very cool at the same time.

