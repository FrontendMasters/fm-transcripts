WEBVTT

1
00:00:00.251 --> 00:00:07.301
Let's see if we can do the same
thing now from JavaScript.

2
00:00:07.301 --> 00:00:09.571
One thing that we need to do first is,

3
00:00:09.571 --> 00:00:13.324
we need to load on what's
called standard Firmata, right?

4
00:00:13.324 --> 00:00:16.462
You saw that,
the base level we have serial port,

5
00:00:16.462 --> 00:00:21.340
then there was Firmata.js, and
then there was Johnny-Five, right?

6
00:00:21.340 --> 00:00:23.585
Standard Firmata is basically,

7
00:00:23.585 --> 00:00:28.876
you're loading a sketch onto the Arduino
that tells it about the instructions

8
00:00:28.876 --> 00:00:34.023
that a standardized library called
Firmata talks to devices with, right?

9
00:00:34.023 --> 00:00:38.340
So we're gonna load that on, which will
stop my LED from blinking, do not panic,

10
00:00:38.340 --> 00:00:41.658
because we will be removing the code
that makes the LED blink and

11
00:00:41.658 --> 00:00:45.630
replacing it with the code that lets
us control the board from JavaScript.

12
00:00:45.630 --> 00:00:49.768
So we'll go back in here.

13
00:00:49.768 --> 00:00:53.715
And in here you can go to examples,
and then Firmata,

14
00:00:53.715 --> 00:00:56.890
and then you should see Standard Firmata.

15
00:00:56.890 --> 00:01:01.511
And I'm gonna just hover over here for
a second, so you can kind of follow along.

16
00:01:02.776 --> 00:01:05.066
And just clicking this will
actually open up the sketch,

17
00:01:05.066 --> 00:01:06.310
it will not load it on just yet.

18
00:01:06.310 --> 00:01:12.219
But you can find it in File,
Examples, Firmata, Standard Firmata.

19
00:01:13.943 --> 00:01:15.488
I'll open that sketch.

20
00:01:18.372 --> 00:01:20.641
You can read the comments,
read all about it.

21
00:01:20.641 --> 00:01:24.671
But for the most part, it's a whole bunch
of code that you don't need to read,

22
00:01:24.671 --> 00:01:27.420
but it loads on the ability for
a standard protocol for

23
00:01:27.420 --> 00:01:31.170
talking to it from a host computer,
which is exactly what we're doing.

24
00:01:34.880 --> 00:01:36.230
So we load that on as well.

25
00:01:36.230 --> 00:01:38.512
You can see my LED stops blinking.

26
00:01:38.512 --> 00:01:43.084
It's blinking as the loading, but in
the one second on, one second off sense.

27
00:01:46.869 --> 00:01:48.950
Awesome, that should now be uploading.

28
00:01:50.010 --> 00:01:55.591
So we have that repo that we saw earlier,
which is just basically everything we

29
00:01:55.591 --> 00:02:00.849
need along in here to follow along
with a whole bunch of examples.

30
00:02:00.849 --> 00:02:04.723
And we'll kinda pick and
choose which ones we want to use today,

31
00:02:04.723 --> 00:02:08.975
depending on how timing and
our spirits and interests guide us.

32
00:02:08.975 --> 00:02:11.551
But again, the hello world of anything is,

33
00:02:11.551 --> 00:02:15.536
can we get that LED to blink now
from JavaScript instead of Arduino?

34
00:02:15.536 --> 00:02:17.084
So I'm gonna open that up.

35
00:02:17.084 --> 00:02:19.079
So in source, blinking LED.

36
00:02:19.079 --> 00:02:22.620
We've got some code, or
we don't have some code.

37
00:02:22.620 --> 00:02:27.546
We have the beginnings of where we can
write some code forward is formed,

38
00:02:27.546 --> 00:02:31.582
it wouldn't hurt to do an npm
install right now as well cuz,

39
00:02:31.582 --> 00:02:34.840
yeah, you will need some
packages in a moment.

40
00:02:36.020 --> 00:02:38.014
And so what we can do in this case is,

41
00:02:38.014 --> 00:02:40.815
we can pull in the Johnny-Five library,
right?

42
00:02:40.815 --> 00:02:42.215
So in this case, we'll do import.

43
00:02:47.508 --> 00:02:49.760
Five from Johnny-five.

44
00:02:49.760 --> 00:02:54.818
And we can go ahead, and
we'll kind of instantiate a new board.

45
00:02:54.818 --> 00:02:58.420
And out of the box,
in the same way that the Arduino software,

46
00:02:58.420 --> 00:03:02.866
we kind of looked at the list of different
serial ports that were available.

47
00:03:02.866 --> 00:03:07.606
Johnny-Five will do the same, and
it will seek to find the correct board,

48
00:03:07.606 --> 00:03:12.498
which will almost always, unless you
have four Arduinos, or two, really,

49
00:03:12.498 --> 00:03:16.711
plugged in, which point you have
to be a little more specific, but

50
00:03:16.711 --> 00:03:20.760
in this case it will find
the board that is plugged in.

51
00:03:20.760 --> 00:03:21.919
So we don't need to worry.

52
00:03:21.919 --> 00:03:25.712
If you are gonna use the test will
tell you might be like, okay but

53
00:03:25.712 --> 00:03:30.420
like use the Tehsil to adapter here or use
the Raspberry Pi or whatever set but for

54
00:03:30.420 --> 00:03:33.881
an Arduino it is the standard
built in lingua franca here.

55
00:03:33.881 --> 00:03:38.785
And then we've got a ready event,
so has to go connect to the board,

56
00:03:38.785 --> 00:03:43.001
everything along those lines and
set everything else, so

57
00:03:43.001 --> 00:03:47.757
we say board on ready and
you can do a 500, you can do 1000.

58
00:03:47.757 --> 00:03:51.170
Let's do 1000 cuz it will feel very
similar to what we had before.

59
00:03:51.170 --> 00:03:58.682
So we'll go ahead and
we'll say we've got a new LED on pin 13.

60
00:03:58.682 --> 00:04:01.081
And we're gonna make that LED blink.

61
00:04:01.081 --> 00:04:05.321
So if you think about before we
had the Arduino code that would,

62
00:04:05.321 --> 00:04:09.161
we sent a high signal,
waited a second sent a low signal,

63
00:04:09.161 --> 00:04:14.460
we sent a high signal, we sent a low
signal, we waited in between each time.

64
00:04:14.460 --> 00:04:18.585
We could do something very similar but
like I said before,

65
00:04:18.585 --> 00:04:24.242
Johnny Five comes with a bunch of fun ways
to just make this easier for us as well.

66
00:04:24.242 --> 00:04:29.095
And to make it like very similar to
us as JavaScript developers to kind

67
00:04:29.095 --> 00:04:31.510
of like grok what's going on?

68
00:04:31.510 --> 00:04:33.768
So just explain one more
time before we run it.

69
00:04:33.768 --> 00:04:38.860
We are pulling in the 25
library from our npm install.

70
00:04:38.860 --> 00:04:43.016
We are instantiating
a new Johnny-Five board.

71
00:04:43.016 --> 00:04:47.052
And when that board is ready,
when it triggers its ready event,

72
00:04:47.052 --> 00:04:51.833
kinda like DOM content loaded, we say,
cool, I've got an LED on pin 13,

73
00:04:51.833 --> 00:04:56.692
which gives us an LED object, which has
a bunch of methods that we'll explore

74
00:04:56.692 --> 00:05:00.620
in a second, and we can go ahead and
tell it to blink.

75
00:05:00.620 --> 00:05:04.521
And this is roughly should have
the same effect as what we did earlier.

76
00:05:07.180 --> 00:05:09.823
And if you look at my terminal,

77
00:05:09.823 --> 00:05:14.409
it's initiated and
it drops me actually into a REPL.

78
00:05:14.409 --> 00:05:17.770
My LED is once again blinking
just as it did before.

79
00:05:19.020 --> 00:05:24.932
Because effectively this code
seeks to be the same, right?

80
00:05:24.932 --> 00:05:28.459
So now we have the ability to control
this board completely from JavaScript.

81
00:05:28.459 --> 00:05:31.453
Let's talk about some of the other
things that we can do kind of like while

82
00:05:31.453 --> 00:05:32.870
we're in here.

83
00:05:32.870 --> 00:05:38.300
One of the things that can sometimes be,
I don't know, helpful, fun,

84
00:05:38.300 --> 00:05:46.050
it's up to you is I can do, Well,
there's all the other ones we had before.

85
00:05:46.050 --> 00:05:50.020
This.repl, I'm gonna do board.repl.

86
00:05:50.020 --> 00:05:52.621
Inject, I'm gonna inject the LED.

87
00:05:52.621 --> 00:05:57.989
And what this does is we have that REPL
that started up when Johnny Five was

88
00:05:57.989 --> 00:06:03.093
connected to the board but like this
basically just puts it in scope so

89
00:06:03.093 --> 00:06:06.183
you can access the LED from there as well.

90
00:06:06.183 --> 00:06:10.705
So I'm going to exit out of it you
can hit CTRL+C twice or type .exit,

91
00:06:10.705 --> 00:06:13.370
whatever makes you happier.

92
00:06:13.370 --> 00:06:18.323
My muscle memory from working with web
servers all day every day is just slam

93
00:06:18.323 --> 00:06:21.635
on CTRL+C until everything
gets happier for me.

94
00:06:21.635 --> 00:06:23.651
You wanna type .exit?

95
00:06:23.651 --> 00:06:24.546
I love it.

96
00:06:24.546 --> 00:06:26.357
You're probably a better person than me.

97
00:06:36.315 --> 00:06:38.590
So now I've got the LED in here.

98
00:06:38.590 --> 00:06:43.144
And a lot of things, there are,
you see all the methods in this case, but

99
00:06:43.144 --> 00:06:47.793
some of the interesting ones here,
we can see this connected to pin 13.

100
00:06:47.793 --> 00:06:52.732
I'm trying to think if there's anything,
it's running from Mata, the ports, but

101
00:06:52.732 --> 00:06:56.302
you can theoretically say,
if it wasn't already blinking,

102
00:06:56.302 --> 00:06:59.961
you could start it blinking,
you could stop it from blinking.

103
00:06:59.961 --> 00:07:05.800
Let's say you could say the LED itself,
you can get basic control.

104
00:07:05.800 --> 00:07:09.119
I don't do a lot in here but
sometimes for especially for a button,

105
00:07:09.119 --> 00:07:12.435
it might be useful to like say
something along those lines as well,

106
00:07:12.435 --> 00:07:16.490
now our blinking code is going to like you
serve a lot of what we have here, right?

107
00:07:16.490 --> 00:07:20.504
Because it's effectively sending it
a digital right for on and off over and

108
00:07:20.504 --> 00:07:21.662
over and over again.

109
00:07:21.662 --> 00:07:25.206
But you theoretically,
if you were trying to figure stuff out,

110
00:07:25.206 --> 00:07:29.602
you can pass it into the REPL and see a
bunch of information about that particular

111
00:07:29.602 --> 00:07:32.574
LED's code and
the methods available for it as well.

112
00:07:32.574 --> 00:07:37.191
But also in a world that like JS Doc
exists, it is a lot of times useful

113
00:07:37.191 --> 00:07:41.880
to also just see that we have
a bunch of different options here.

114
00:07:41.880 --> 00:07:45.406
We're using blink, you can just literally
set the brightness, you can have it

115
00:07:45.406 --> 00:07:48.788
fade in over time, fade out, and these
are a bunch of options you can check.

116
00:07:48.788 --> 00:07:52.004
You can also have methods to see,
like, okay, is it on,

117
00:07:52.004 --> 00:07:55.420
what mode is it,
you can literally turn it on and off.

118
00:07:55.420 --> 00:07:56.217
Let's do that for a second.

119
00:07:56.217 --> 00:08:00.785
I'm going to take out this Blink code for
a moment and just inject it into the REPL.

120
00:08:00.785 --> 00:08:01.819
And again, I'm gonna kill it.

121
00:08:03.470 --> 00:08:06.175
I'm going to start it up again.

122
00:08:10.030 --> 00:08:17.010
And now we look over my board,
the LED is off, and the LED on.

123
00:08:17.010 --> 00:08:20.252
And now my LED is on.

124
00:08:20.252 --> 00:08:23.790
And then I can type LED off.

125
00:08:23.790 --> 00:08:25.425
And what do you think that's gonna do?

126
00:08:25.425 --> 00:08:26.900
It's gonna turn it off.

127
00:08:26.900 --> 00:08:31.916
And so now I have full control of
this board from Node.JS in this case.

