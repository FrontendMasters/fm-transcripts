WEBVTT

1
00:00:00.260 --> 00:00:05.029
What I'm gonna challenge you to
do is we would also love to send

2
00:00:05.029 --> 00:00:10.520
a post request to the server that
turns that LED on and off as well.

3
00:00:10.520 --> 00:00:14.814
And once we have that in place, then
we can go from browser all the Arduino,

4
00:00:14.814 --> 00:00:18.100
we can go from Arduino, or
we can go from node to browser.

5
00:00:18.100 --> 00:00:20.810
I think WebSockets will
get us all the way there.

6
00:00:20.810 --> 00:00:23.160
But we'll kinda take a look
at that full lifecycle.

7
00:00:23.160 --> 00:00:26.599
And from there, we can build on it with
a bunch of really cool options as well.

8
00:00:26.599 --> 00:00:27.890
Awesome, yes.

9
00:00:27.890 --> 00:00:28.817
&gt;&gt; I just have a quick question.

10
00:00:28.817 --> 00:00:31.720
&gt;&gt; Yes.
&gt;&gt; And maybe this is a bigger one now.

11
00:00:31.720 --> 00:00:37.970
I noticed in the Arduino IDE,
it tells you how much memory you're using.

12
00:00:37.970 --> 00:00:43.179
And now that we're starting to
bring in JavaScript libraries,

13
00:00:43.179 --> 00:00:45.885
is there a way to track that here?

14
00:00:45.885 --> 00:00:47.617
Or are we gonna run out of memory ever?

15
00:00:47.617 --> 00:00:52.046
&gt;&gt; You're not gonna run out of memory
because right now without, on the Arduino,

16
00:00:52.046 --> 00:00:54.400
the host computer is your laptop.

17
00:00:54.400 --> 00:00:59.280
So I mean, you're gonna run out of
memory but depending on the MacBook,

18
00:00:59.280 --> 00:01:03.150
somewhere between 16 and 120gb of memory.

19
00:01:03.150 --> 00:01:07.230
So we're not at this moment with this
board bound by the memory constraints.

20
00:01:07.230 --> 00:01:12.512
For something like a Raspberry Pi,
even these days on a modern Raspberry Pi,

21
00:01:12.512 --> 00:01:16.919
they're pretty impressive,
like $30 computers, right?

22
00:01:16.919 --> 00:01:19.142
And so it depends is the real answer.

23
00:01:19.142 --> 00:01:21.846
For the purposes of the Arduino, we are so

24
00:01:21.846 --> 00:01:25.350
limited that we are using a host computer,
right?

25
00:01:25.350 --> 00:01:30.587
So, no because it's very much yes [LAUGH],
right?

26
00:01:30.587 --> 00:01:34.595
We are so constricted that we're
now constricted basically.

27
00:01:34.595 --> 00:01:37.380
Yeah, for a lot of these cases
do need to be plugged in.

28
00:01:37.380 --> 00:01:40.242
There are some that you might even choose,

29
00:01:40.242 --> 00:01:44.810
could we read system information and
print it to an LCD screen?

30
00:01:44.810 --> 00:01:45.593
We could, right?

31
00:01:45.593 --> 00:01:49.827
But generally speaking, that would become
more constrained when you have one of

32
00:01:49.827 --> 00:01:52.263
the boards that host
a full node environment.

33
00:01:55.615 --> 00:02:03.605
All right, so the initial ask was that we
can get an LED blinking along with it.

34
00:02:03.605 --> 00:02:07.278
Now theoretically, we'll move to another
example in a second what we do with a post

35
00:02:07.278 --> 00:02:08.965
request and stuff along those lines.

36
00:02:08.965 --> 00:02:12.718
But just as a sanity check, let's do it
along, like when a get requests comes,

37
00:02:12.718 --> 00:02:16.760
let's toggle the light and
then we'll kind of build on it from there.

38
00:02:16.760 --> 00:02:20.340
So if we kinda go ahead.

39
00:02:20.340 --> 00:02:22.100
I took away the LED that I have.

40
00:02:22.100 --> 00:02:24.940
You might still have it, but
I'm just gonna make it again.

41
00:02:24.940 --> 00:02:28.230
And I believe mine's on 11 still.

42
00:02:28.230 --> 00:02:30.207
So I've got that LED.

43
00:02:30.207 --> 00:02:34.839
And I'm gonna start with
the simplest possible thing,

44
00:02:34.839 --> 00:02:39.380
which is to say led.toggle,
when we get a request in.

45
00:02:39.380 --> 00:02:40.350
Let's see how that goes for me.

46
00:02:41.350 --> 00:02:50.970
So then I will, All right, server's up.

47
00:02:50.970 --> 00:02:54.728
And so now, regardless of whether or
not the button is pressed,

48
00:02:54.728 --> 00:02:58.100
when I visit the site,
my LED should go on or off.

49
00:02:58.100 --> 00:03:01.612
So now I've got from
the outside world in there.

50
00:03:01.612 --> 00:03:04.764
And one of the optional things
to install was like ngrok so

51
00:03:04.764 --> 00:03:08.570
you could expose this computer to
the Internet if you wanted to.

52
00:03:08.570 --> 00:03:13.860
And now I could theoretically control
this LED from my mobile phone.

53
00:03:13.860 --> 00:03:16.020
I mean, anyone could by visiting or not.

54
00:03:16.020 --> 00:03:20.140
And we've got this idea of now from
the browser all the way to the board.

55
00:03:20.140 --> 00:03:21.970
We can turn that on and off.

56
00:03:21.970 --> 00:03:27.426
We can modify this a little bit with a
post request, but just so that no one has

57
00:03:27.426 --> 00:03:33.240
to remember the syntax for curl, I have
various different boiler plates set up.

58
00:03:33.240 --> 00:03:36.099
There is one called Web with LED,
I believe,

59
00:03:36.099 --> 00:03:38.890
Web to LED that we'll
check out in a second.

60
00:03:38.890 --> 00:03:43.733
I just wanna show you a totally optional

61
00:03:43.733 --> 00:03:48.880
optimization that you can do if you want.

62
00:03:48.880 --> 00:03:51.300
If you do not want to do this,
you do not have to.

63
00:03:51.300 --> 00:03:54.560
I will choose to do it, because that's
the way I want to live my life,

64
00:03:54.560 --> 00:03:55.530
you don't have to.

65
00:03:55.530 --> 00:04:00.571
Which is, for the most part, which I
thought we do need to wait for the board

66
00:04:00.571 --> 00:04:06.860
to be ready before we interact with
the board, which makes total sense, right?

67
00:04:06.860 --> 00:04:10.738
Which means that generally speaking,
other than instantiating the board and

68
00:04:10.738 --> 00:04:14.860
maybe some other stuff, almost everything
has to be inside this closure, right?

69
00:04:16.010 --> 00:04:20.640
I am somewhat lazy and
don't wanna live like that.

70
00:04:20.640 --> 00:04:23.550
So, an option, if you look over here,

71
00:04:23.550 --> 00:04:28.600
I have this little helper file in
Utilities called create-board.

72
00:04:30.150 --> 00:04:32.700
No, that is far too far away.

73
00:04:32.700 --> 00:04:35.830
There it is,
where I simply wrap this in a promise.

74
00:04:35.830 --> 00:04:39.053
Because I think in node,
what is it, 18 and later,

75
00:04:39.053 --> 00:04:41.500
you have top level async await, right?

76
00:04:42.650 --> 00:04:46.646
So by wrapping in a promise that
resolves when the board is ready,

77
00:04:46.646 --> 00:04:49.333
I can do this instead,
just at a top level and

78
00:04:49.333 --> 00:04:53.530
the rest of the code will
execute once the board is ready.

79
00:04:53.530 --> 00:04:58.141
You can use the board on ready if that's
simpler, it makes more sense to you.

80
00:04:58.141 --> 00:05:01.756
Especially cuz I have a very
increased font size right now,

81
00:05:01.756 --> 00:05:04.950
it allows me to kinda have
better real estate there.

82
00:05:04.950 --> 00:05:08.983
But yeah, I just made a quick abstraction
over that that I can create the board and

83
00:05:08.983 --> 00:05:13.585
then pause the execution until it's ready
and then do everything kinda top level.

84
00:05:13.585 --> 00:05:17.147
So I'll probably be using that from
this point forward, but like I said,

85
00:05:17.147 --> 00:05:18.697
you do not have to, and if I did,

86
00:05:18.697 --> 00:05:21.699
if I needed the board object itself,
that would work as well.

87
00:05:21.699 --> 00:05:24.836
It returns the board in this
case once it's ready and

88
00:05:24.836 --> 00:05:29.840
it waits for it, so I don't have to
set up that event listener every time.

89
00:05:29.840 --> 00:05:31.740
If that's a helpful abstraction for
you, great.

90
00:05:31.740 --> 00:05:36.620
If you don't wanna use it, that's totally
fine, too, but just kind of full context.

91
00:05:36.620 --> 00:05:40.459
And you're like, yeah, there might be
a bunch of other abstractions that you

92
00:05:40.459 --> 00:05:45.270
choose to make as well, but that is kinda
the only one that I went for at this time.

93
00:05:45.270 --> 00:05:48.016
So I'm gonna navigate,
I've got just, and again,

94
00:05:48.016 --> 00:05:52.440
you could write this stuff by hand,
to save the parts that are tedious for us.

95
00:05:52.440 --> 00:05:57.000
I've got this web-to-led, and we'll
just take a tour of the code real quick.

96
00:05:58.090 --> 00:06:02.940
The server is basically the same
that we had before, right?

97
00:06:02.940 --> 00:06:04.790
I can pull in that, Johnny-Five.

98
00:06:04.790 --> 00:06:08.715
The only difference is this one starts out
vite, to actually build some client-side

99
00:06:08.715 --> 00:06:11.820
assets too, so
it's not just the raw stuff on the page.

100
00:06:11.820 --> 00:06:18.535
But it's the same basic setup that we
had in the last example, and index.html,

101
00:06:18.535 --> 00:06:24.590
cuz nobody tuned in to this Nodesbots
course to live watch me write HTML.

102
00:06:26.000 --> 00:06:26.849
I mean, maybe you did.

103
00:06:26.849 --> 00:06:28.620
I don't wanna speak for you.

104
00:06:28.620 --> 00:06:31.680
So I can kinda navigate
into that one as well.

105
00:06:31.680 --> 00:06:35.858
And it'd be cool to actually show
just the flow with an Ajax page, for

106
00:06:35.858 --> 00:06:39.400
instance, right, of how would this work.

107
00:06:39.400 --> 00:06:42.164
And then, so
basically the next few examples are,

108
00:06:42.164 --> 00:06:45.311
let's look at how do we trigger
what we just saw with AJAX or

109
00:06:45.311 --> 00:06:48.676
net request or fetch request,
post request, what have you.

110
00:06:48.676 --> 00:06:52.499
And then we'll look at the WebSockets, and
then I think things really kinda kick into

111
00:06:52.499 --> 00:06:56.270
high gear, cuz now we've got real-time
two-way communication trigger in either

112
00:06:56.270 --> 00:06:59.180
direction, I think it's where
things start to get fun.

113
00:06:59.180 --> 00:07:02.210
So, with that, let's dig into it.

114
00:07:02.210 --> 00:07:06.772
So if I go, I'm gonna just navigate
out of that button-with-webserver and

115
00:07:06.772 --> 00:07:08.045
into web-to-led.

116
00:07:09.600 --> 00:07:17.469
Sweet, and I will, Nodeindex.js,
I'll just start that up real quick so

117
00:07:17.469 --> 00:07:20.421
you can see that now I've got
something running at localhost.

118
00:07:20.421 --> 00:07:22.850
The server's running on 3000.

119
00:07:22.850 --> 00:07:27.576
The clients assets are on 5173,
cuz that's the number that Vite shows.

120
00:07:27.576 --> 00:07:32.344
And so I have this button,
ideally, clicking this button,

121
00:07:32.344 --> 00:07:37.140
I would like to make turn on that
switch one way or the other.

122
00:07:37.140 --> 00:07:38.750
So we get this working pretty quickly.

123
00:07:38.750 --> 00:07:41.127
It's an extension of what we just saw, but

124
00:07:41.127 --> 00:07:43.910
it kinda helps close the loop
a little bit as well.

125
00:07:45.060 --> 00:07:48.110
So if we look at client.js,
there's nothing in there, so

126
00:07:48.110 --> 00:07:49.699
we kind of navigate as we want.

127
00:07:49.699 --> 00:07:53.290
I'm gonna do the server side first because
otherwise it's just gonna blow up.

128
00:07:53.290 --> 00:07:56.517
So I'll kinda take you
through some of the things.

129
00:07:56.517 --> 00:07:57.701
I have that create-boards.

130
00:07:57.701 --> 00:08:00.540
You can kinda see me
implement that this time.

131
00:08:00.540 --> 00:08:03.603
We'll put up the post request that ideally

132
00:08:03.603 --> 00:08:08.350
should toggle the light
switch in either direction.

133
00:08:08.350 --> 00:08:13.465
Great, so
I can say const board = createBoard

134
00:08:13.465 --> 00:08:18.330
with the repl, we'll turn that off again.

135
00:08:18.330 --> 00:08:22.905
I don't need the board on ready cuz,
we gotta await it, right?

136
00:08:25.149 --> 00:08:27.680
So wait for the board to be ready.

137
00:08:27.680 --> 00:08:33.900
And when that's done, we'll do, let's get
ourselves an LED, this one is still on 11.

138
00:08:33.900 --> 00:08:35.350
So we'll stick with that.

139
00:08:35.350 --> 00:08:39.340
And then I don't need the button just yet.

140
00:08:39.340 --> 00:08:40.830
We could do something fun there.

141
00:08:40.830 --> 00:08:43.840
But now we can set up a post
request instead, right?

142
00:08:43.840 --> 00:08:51.260
And we'll say post and
we'll say api/light, [INAUDIBLE] do that.

143
00:08:53.870 --> 00:08:57.430
And when that comes in,
very similar to what I had before.

144
00:08:57.430 --> 00:09:04.830
I'm just gonna do led.toggle, yeah, sure.

145
00:09:04.830 --> 00:09:09.972
We can set up that post request,
and then in client.js,

146
00:09:09.972 --> 00:09:14.162
we've got that light switch, so we'll say,

147
00:09:16.600 --> 00:09:19.957
lightSwitch, addEventListener for a click.

148
00:09:19.957 --> 00:09:24.734
And then I have all posters is, any y'all
ever tried to write a post, fetch is

149
00:09:24.734 --> 00:09:29.587
super easy for getting, you ever tried
to write a post request without Axios or

150
00:09:29.587 --> 00:09:33.511
something like that,
cuz you don't have too many libraries.

151
00:09:33.511 --> 00:09:36.618
So I did that exactly once and
I don't ever wanna write it again.

152
00:09:36.618 --> 00:09:41.087
So all posts does is it sends a post fetch
request without me having to write all of

153
00:09:41.087 --> 00:09:43.310
this cuz I'm very lazy again.

154
00:09:43.310 --> 00:09:47.799
Live coding and live wiring is hard
enough, I'm at least gonna give

155
00:09:47.799 --> 00:09:52.840
myself [LAUGH] a few niceties to make
my life just a little bit easier there.

156
00:09:52.840 --> 00:09:56.523
So that's what post is,
it's nothing special,

157
00:09:56.523 --> 00:10:01.620
it's simply regular old fetch,
either ready to accept JSON or not.

158
00:10:01.620 --> 00:10:04.087
So we'll do that post('/api/light').

159
00:10:07.806 --> 00:10:09.080
I'm trying to think.

160
00:10:09.080 --> 00:10:14.857
Let's make this async just so
we can see, we get better,

161
00:10:22.679 --> 00:10:24.950
So we'll kinda do that as well.

162
00:10:24.950 --> 00:10:27.150
And so now I've got that kind of
full connection we're talking about.

163
00:10:27.150 --> 00:10:28.160
I have a DOM element.

164
00:10:28.160 --> 00:10:29.122
I have an event listener,

165
00:10:29.122 --> 00:10:31.590
should verify that this works before
I get too confident about it.

166
00:10:31.590 --> 00:10:33.240
But let's talk about my intentions.

167
00:10:33.240 --> 00:10:36.180
And then we'll see if my execution
matches my intentions, right?

168
00:10:36.180 --> 00:10:38.562
So I've got a light switch.

169
00:10:38.562 --> 00:10:42.560
When it clicked, we're gonna send
that post request to api/ light,

170
00:10:42.560 --> 00:10:46.623
which should go back to the server and
toggle our LED on and off, right,

171
00:10:46.623 --> 00:10:48.950
and thus completing the circle as well.

172
00:10:48.950 --> 00:10:54.300
All right, so just sending a post request,
well console.log the response as well.

173
00:10:54.300 --> 00:10:57.570
So let's try that out,
I do need to restart the server.

174
00:10:57.570 --> 00:11:01.738
You could try to get fancy with
Nodemon and stuff along those lines,

175
00:11:01.738 --> 00:11:05.173
but between the client side server and
the node server,

176
00:11:05.173 --> 00:11:10.090
and the Arduino board and memory leaks,
I decided that wasn't worth it for me.

177
00:11:12.630 --> 00:11:15.300
Tailwind hates me for some reason right
now, but I'll fight with that later.

178
00:11:17.882 --> 00:11:22.430
It works, and
I'll open the console up as well.

179
00:11:27.960 --> 00:11:32.460
So my light is going on and off from
the web, through node, to my board.

180
00:11:33.780 --> 00:11:36.340
It's oddly satisfying.

181
00:11:36.340 --> 00:11:40.318
I've been doing this for a very long time,
and I don't get a lot of that warm and

182
00:11:40.318 --> 00:11:43.830
fuzzies of the very first time that
I made something change on a page.

183
00:11:43.830 --> 00:11:49.869
And for some reason, making this tiny
little three-cent light go on and

184
00:11:49.869 --> 00:11:55.150
off is mildly rewarding,
[LAUGH] in a deep and satisfying way.

185
00:11:55.150 --> 00:11:57.344
We haven't really had
to adjust our circuit.

186
00:11:57.344 --> 00:12:01.581
Now, again, we could theoretically
do other stuff with the button.

187
00:12:01.581 --> 00:12:05.739
One example that, I don't think
we will play with a little, but

188
00:12:05.739 --> 00:12:08.596
I left some fun little
extensions in there.

189
00:12:08.596 --> 00:12:12.155
There is one where you could theoretically
wire up three of these buttons and

190
00:12:12.155 --> 00:12:14.810
have rock-paper-scissor in there, right?

191
00:12:14.810 --> 00:12:18.065
So you hit a button and then there's
a little algorithm that randomly picks one

192
00:12:18.065 --> 00:12:19.406
and tells you if you won or lost.

193
00:12:19.406 --> 00:12:24.056
Listen, I pay attention during
all of my meetings at work, and

194
00:12:24.056 --> 00:12:29.323
there's no way that I spend any time
quietly playing rock paper scissor

195
00:12:29.323 --> 00:12:34.290
over on my other monitor while nodding,
that never happened.

196
00:12:34.290 --> 00:12:36.819
So, here's a bunch of little
kinda stuff in there.

