WEBVTT

1
00:00:00.000 --> 00:00:05.940
I would like to just open the floor for
any questions that anybody

2
00:00:05.940 --> 00:00:12.101
may have over what we've covered
over the last couple modules,.

3
00:00:12.101 --> 00:00:16.918
I realized that we are kind of coming
from we're taking some really high

4
00:00:16.918 --> 00:00:22.020
level stuff and trying to distill it
into kind of very simple terminology.

5
00:00:22.020 --> 00:00:26.862
And I wanna make sure that one that
is connected at the same time that

6
00:00:26.862 --> 00:00:31.195
I haven't skipped over something
that might be relevant.

7
00:00:31.195 --> 00:00:34.521
Or important for
any of our audience members or

8
00:00:34.521 --> 00:00:37.770
anybody who is watching
this live workshop.

9
00:00:39.300 --> 00:00:46.344
So I wanted to before I go any further,
just open the floor up for questions or

10
00:00:46.344 --> 00:00:52.080
comments about anything that
I've covered up to this point.

11
00:00:54.570 --> 00:00:59.390
I've seen that you didn't catching
the error in the service?

12
00:00:59.390 --> 00:01:03.030
Where do you think is the best
place to catch the error?

13
00:01:03.030 --> 00:01:09.320
You see when you in the effect catch
the air it's so the question is, or

14
00:01:09.320 --> 00:01:15.180
the observation that I did not
catch the air in the server.

15
00:01:15.180 --> 00:01:19.580
And the question is where is
the best place to do that?

16
00:01:20.840 --> 00:01:25.330
And so, that is a really good question.

17
00:01:25.330 --> 00:01:32.060
And the answer is,
it really depends on the context.

18
00:01:32.060 --> 00:01:36.343
So let me give you a couple things to

19
00:01:36.343 --> 00:01:40.930
consider as you kind of ponder this.

20
00:01:42.060 --> 00:01:44.770
I believe when possible,

21
00:01:44.770 --> 00:01:50.910
you want to capture the air
at the point of origin.

22
00:01:50.910 --> 00:01:57.230
So as soon as possible, and ideally,
you want to try to recover.

23
00:01:57.230 --> 00:02:01.861
At the point of origin, now, occasionally,

24
00:02:01.861 --> 00:02:06.610
it depends on the type of
the air that you're not

25
00:02:06.610 --> 00:02:12.350
able to recover or
it's actually the result of.

26
00:02:12.350 --> 00:02:15.981
Like a user error so for instance,
you're filling out an order form and

27
00:02:15.981 --> 00:02:18.550
somebody mistyped their credit card.

28
00:02:18.550 --> 00:02:22.970
Well, there's no way to
recover from bad information.

29
00:02:22.970 --> 00:02:25.236
And so that will cause an error.

30
00:02:25.236 --> 00:02:31.992
You're not able to recover from it as well
as you need to surface this back up to.

31
00:02:31.992 --> 00:02:36.556
Not where the air happened, but
really the point or the catalyst of that,

32
00:02:36.556 --> 00:02:39.450
which in this case is the user.

33
00:02:39.450 --> 00:02:43.390
And so
that's kind of the consideration there is.

34
00:02:43.390 --> 00:02:50.520
What is the nature of the air and
does it require human intervention?

35
00:02:52.270 --> 00:02:56.470
From that point,
then the user experience comes into play.

36
00:02:56.470 --> 00:03:00.458
And you have to ask yourself,
even though I'm able to recover it here,

37
00:03:00.458 --> 00:03:03.720
is it affecting the user experience and
do I need to fix it?

38
00:03:04.830 --> 00:03:08.355
So typically,
you don't turn into like this

39
00:03:08.355 --> 00:03:13.010
hybrid approach of You might
capture the air at the server.

40
00:03:13.010 --> 00:03:16.252
So let's say it's like it's an
authentication error that somebody tries

41
00:03:16.252 --> 00:03:18.760
to access and they're not able to do that.

42
00:03:18.760 --> 00:03:22.634
Well, you capture that at the point of
origin, which would be at the server.

43
00:03:22.634 --> 00:03:27.420
But then you need to as well handle
it in your front end application.

44
00:03:27.420 --> 00:03:32.504
So in the context of an Angular
application using NGR x,

45
00:03:32.504 --> 00:03:36.300
I would handle that in the effects layer.

46
00:03:37.490 --> 00:03:41.542
So effects are very, very good for
any kind of flow control,

47
00:03:41.542 --> 00:03:47.180
to where I think everything else
within mgrs is pretty straightforward.

48
00:03:47.180 --> 00:03:51.680
Where I think people really have
a tough time within GRS is around this

49
00:03:51.680 --> 00:03:56.160
asynchronous control flow,
because it's a synchronous.

50
00:03:56.160 --> 00:04:00.966
And but
that's where one I think your asynchronous

51
00:04:00.966 --> 00:04:04.999
control flow logic should go, as well as.

52
00:04:04.999 --> 00:04:10.042
Your business logic because effects
give you this really nice way to compose

53
00:04:10.042 --> 00:04:15.890
individual pieces of logic and then just
kind of string them together via events.

54
00:04:15.890 --> 00:04:20.400
So that was a very high level kind of
architectural dissertation on where do

55
00:04:20.400 --> 00:04:21.629
you handle errors.

56
00:04:21.629 --> 00:04:27.757
What kind of depends, and it depends on
what you need to do about it as well as.

57
00:04:27.757 --> 00:04:30.848
Handling an air and
surfacing an air are slightly different,

58
00:04:30.848 --> 00:04:33.590
cuz you may wanna handle an air
at the metal if you will.

59
00:04:33.590 --> 00:04:36.570
But you have to be really careful
what you surface to the user.

60
00:04:36.570 --> 00:04:39.970
You may not want to expose,
do it like it's a stack trace and

61
00:04:39.970 --> 00:04:42.020
just throw it out into the browser.

62
00:04:42.020 --> 00:04:46.980
That would be very bad depending on
where you are currently working or

63
00:04:46.980 --> 00:04:49.040
where that app is deployed?

64
00:04:49.040 --> 00:04:50.480
So hopefully that made sense

