WEBVTT

1
00:00:00.530 --> 00:00:04.380
Now we are going to put our
money where our mouth is, and

2
00:00:04.380 --> 00:00:08.756
we're going to build something
like this is super exciting.

3
00:00:08.756 --> 00:00:11.924
And so, real quick,

4
00:00:11.924 --> 00:00:17.029
I'm gonna just take a moment and,

5
00:00:17.029 --> 00:00:22.486
I'm going to just Google this just so

6
00:00:22.486 --> 00:00:26.199
everybody can see this.

7
00:00:26.199 --> 00:00:30.904
Sometimes I have a tendency to talk
about things in familiar terms or

8
00:00:30.904 --> 00:00:32.818
I assume prior knowledge.

9
00:00:32.818 --> 00:00:39.521
And, When we're dealing with Angular,
the Angular CLI generates,

10
00:00:39.521 --> 00:00:43.398
our Angular code, and it does a lot
of interesting helpful things.

11
00:00:43.398 --> 00:00:47.086
And or NX is essentially,

12
00:00:47.086 --> 00:00:52.786
it follows this concept of a model repo,

13
00:00:52.786 --> 00:01:00.010
and what it does is it sits
on top of the Angular CLI.

14
00:01:00.010 --> 00:01:04.803
And when it generates an Angular
projects specifically,

15
00:01:04.803 --> 00:01:09.395
it generates it in such a way and
a very specific way, and

16
00:01:09.395 --> 00:01:14.407
it augments the CLI,
with some additional functionality.

17
00:01:14.407 --> 00:01:22.027
Now, what is really compelling about NX,
is that not only can you run,

18
00:01:22.027 --> 00:01:26.980
an Angular application
from an nx workspace,

19
00:01:26.980 --> 00:01:30.923
but you can run a React application.

20
00:01:30.923 --> 00:01:35.516
And so by using this model repo and
pattern, is that you can have

21
00:01:35.516 --> 00:01:40.466
an angular and a React app sitting
side by side, next to each other.

22
00:01:40.466 --> 00:01:45.419
Now this is something that only for
on a dare a double dog dare did

23
00:01:45.419 --> 00:01:50.000
I actually do, but in practice,
what I do use quite a bit,

24
00:01:50.000 --> 00:01:54.791
is Angular and Node, and so
we'll see this in just a moment.

25
00:01:54.791 --> 00:01:57.778
But, really at the end of the day,

26
00:01:57.778 --> 00:02:02.722
it's just think of it as
an extension of the Angular CLI,

27
00:02:02.722 --> 00:02:09.841
that creates your code in such a way, that
it allows you to manage the complexity.

28
00:02:09.841 --> 00:02:14.652
And so I think because of that,
it's probably easier for

29
00:02:14.652 --> 00:02:18.271
me just to show you, what that looks like.

30
00:02:18.271 --> 00:02:23.772
And so I'm going to generate
an application completely from scratch,

31
00:02:23.772 --> 00:02:26.531
and, we're going to build it out.

32
00:02:26.531 --> 00:02:31.303
So I'm just going to go to my desktop,
and we'll do it from here and

33
00:02:31.303 --> 00:02:34.375
I'll start generate an application, and

34
00:02:34.375 --> 00:02:39.086
then at some point I'm gonna switch
back over to the repository.

35
00:02:39.086 --> 00:02:43.151
But for now just to show that
I have no cards up my sleeves,

36
00:02:43.151 --> 00:02:48.511
that there's no tricks, that I'm going
to do this from the command line.

37
00:02:48.511 --> 00:02:52.309
And so how you do this is,
from a command line, and

38
00:02:52.309 --> 00:02:58.288
this was a little interesting to me,
I already had the Angular CLI installed.

39
00:02:58.288 --> 00:03:02.005
But if you go npx, and
create nx workspace,

40
00:03:02.005 --> 00:03:08.048
now this is super handy because I'm
already getting the prompt space.

41
00:03:08.048 --> 00:03:11.584
Now I'm going to pin this
to a very specific version,

42
00:03:11.584 --> 00:03:14.412
so I found that when you
do like get latest or

43
00:03:14.412 --> 00:03:19.385
latest something changes, and
anybody watching this video, it breaks.

44
00:03:19.385 --> 00:03:23.523
And so I'm going to create a workspace and
what I'm gonna do,

45
00:03:23.523 --> 00:03:28.552
is I'm gonna call this, fem for
front end masters production-angular.

46
00:03:28.552 --> 00:03:33.948
And I'm going to run this by itself,
so I'm not gonna do anything, you can

47
00:03:33.948 --> 00:03:39.786
see that I have a number of other kind of
flags or parameters that I'm sending in.

48
00:03:39.786 --> 00:03:45.772
I'm just going to run this
very vanilla initially,

49
00:03:45.772 --> 00:03:50.260
and so what this does is, it goes out and

50
00:03:50.260 --> 00:03:55.839
it actually installs the nx tooling for
you, and

51
00:03:55.839 --> 00:04:01.842
it gives you a number of
really compelling options.

52
00:04:01.842 --> 00:04:06.804
So you can do an empty workspace boring,
react,

53
00:04:06.804 --> 00:04:11.161
angular, next, nest, web components,

54
00:04:11.161 --> 00:04:15.288
react-express, and angular-nest.

55
00:04:15.288 --> 00:04:19.517
So this is my preferred weapon of choice,
and so

56
00:04:19.517 --> 00:04:25.251
you can hit Enter, and
it's gonna ask you an Application name.

57
00:04:25.251 --> 00:04:30.880
So, I'll go dashboard, and
then it will say default style sheets,

58
00:04:30.880 --> 00:04:36.039
so I'm just going through and
I'm answering some questions.

59
00:04:36.039 --> 00:04:39.664
So I'm going to go with Ts lint,
do I wanna use nx cloud so

60
00:04:39.664 --> 00:04:45.004
this is an optimization that nx provides,
that kind of caches different things.

61
00:04:45.004 --> 00:04:49.993
And for production, I highly recommend it,

62
00:04:49.993 --> 00:04:56.173
I'm gonna go with no, and
we're going to let this run.

63
00:04:56.173 --> 00:05:00.161
Now what you can see here is that,

64
00:05:00.161 --> 00:05:05.870
this is being parsed out
into one long command.

65
00:05:05.870 --> 00:05:10.551
So I'm gonna just stop this here,
just rip the needle

66
00:05:10.551 --> 00:05:15.559
right off the record, and
we're going to do this again.

67
00:05:15.559 --> 00:05:18.804
So, I'm gonna delete this,

68
00:05:22.637 --> 00:05:27.785
And we're gonna do it with the flag, so

69
00:05:27.785 --> 00:05:35.432
I recommend that once you're
granted the powers of a CLI,

70
00:05:35.432 --> 00:05:40.283
maximize those as much as possible.

71
00:05:40.283 --> 00:05:48.619
So back to this, now, what we're gonna
do is we're gonna put the flags in.

72
00:05:48.619 --> 00:05:54.311
AppName=dashboard, and
so instead of stepping

73
00:05:54.311 --> 00:05:59.602
through the wizard or
making it interactive.

74
00:05:59.602 --> 00:06:02.943
I'm just going ahead and I am answering or

75
00:06:02.943 --> 00:06:08.001
setting these things myself, so
that I can run this command and

76
00:06:08.001 --> 00:06:12.503
I can walk away and I can come back,
and it is ready to go.

77
00:06:12.503 --> 00:06:17.268
So, linter we're gonna go with tslint,
--style,

78
00:06:20.139 --> 00:06:24.572
And --nx-cloud=false.

79
00:06:24.572 --> 00:06:29.898
All right, so all I've done is I've
taken all of the flags from the wizard,

80
00:06:29.898 --> 00:06:35.542
and I've put them on to a single, Command,

81
00:06:35.542 --> 00:06:39.831
and we're going to let this run.

82
00:06:39.831 --> 00:06:43.835
Now what I recommend is that
if you're watching this,

83
00:06:43.835 --> 00:06:47.411
please do type these commands and
follow along.

84
00:06:47.411 --> 00:06:52.547
And what we'll do is at some point
we'll start to kind of deviate, and

85
00:06:52.547 --> 00:06:57.596
we will do some kind of a coding
challenge, we'll see how that goes,

86
00:06:57.596 --> 00:07:03.538
but ultimately, don't be afraid to type
these commands in, and follow along.

87
00:07:06.585 --> 00:07:10.233
And this will take approximately,

88
00:07:10.233 --> 00:07:14.368
depending on how the Internet is going,

89
00:07:14.368 --> 00:07:19.961
sometimes it takes,
I don't know, two minutes but,

90
00:07:19.961 --> 00:07:24.719
this used to take me two
days to set this all up.

91
00:07:24.719 --> 00:07:29.707
And really what you would
do is at the very beginning

92
00:07:29.707 --> 00:07:34.231
of the Angular days,
that this did not exist,

93
00:07:34.231 --> 00:07:41.197
there was really no good way to get up and
running, with an Angular app.

94
00:07:41.197 --> 00:07:46.187
And so you would just go
find some starter project,

95
00:07:46.187 --> 00:07:49.436
Scott moss actually had one, and

96
00:07:49.436 --> 00:07:54.541
this is what you would use and,
fortunately for us,

97
00:07:54.541 --> 00:08:00.459
that it's progressed to the point
that now I have an entire,

98
00:08:00.459 --> 00:08:04.549
Angular Nest application, ready to go.

99
00:08:04.549 --> 00:08:09.719
And so
I'm gonna step into this folder, and

100
00:08:09.719 --> 00:08:16.298
I'm going to run this, so
I'm just gonna go npm start.

101
00:08:19.932 --> 00:08:24.778
You can see here it's running
the dashboard so, once this is good to go,

102
00:08:24.778 --> 00:08:28.364
we can hop on the browser and
see what this looks like.

103
00:08:34.872 --> 00:08:38.457
So let's go back here, so
it's gonna be at port 4200,

104
00:08:38.457 --> 00:08:40.979
it's just going to look a lot different.

105
00:08:40.979 --> 00:08:44.920
And so
the goal is to kind of move from here,

106
00:08:44.920 --> 00:08:50.074
into something a little bit
more cohesive and helpful.

107
00:08:50.074 --> 00:08:56.512
So let's move on, and I want to show you,
how to adjust the packets.json,

108
00:08:56.512 --> 00:09:01.141
so that if you're running
more than one application,

109
00:09:01.141 --> 00:09:06.392
that you can streamline your commands,
to make that easier.

110
00:09:06.392 --> 00:09:10.345
So I'm gonna go back to my command line,
and you can see here, it tried to connect,

111
00:09:10.345 --> 00:09:12.630
it didn't like it, we need to solve that.

112
00:09:12.630 --> 00:09:17.393
So, let me open up a new tab and,

113
00:09:17.393 --> 00:09:25.520
I'm going to add in a package called,
concurrently.

114
00:09:28.178 --> 00:09:33.194
And this particular package,
I typically do not pin because

115
00:09:33.194 --> 00:09:37.534
it just has not changed in like forever,
all right?

116
00:09:42.885 --> 00:09:46.022
We'll let this run I think we're good,
and,

117
00:09:46.022 --> 00:09:51.895
occasionally I have found that if you're
running, installing something on one tab,

118
00:09:51.895 --> 00:09:56.413
and you have the app running in the other,
like a kind of throws up.

119
00:09:56.413 --> 00:10:01.169
And so I'm gonna stop this because we're
gonna need to fix this anyway, so,

120
00:10:01.169 --> 00:10:02.716
let's go into our code.

121
00:10:02.716 --> 00:10:07.684
And so I'm gonna close this one down,
cuz we're actually gonna

122
00:10:07.684 --> 00:10:11.833
open up a new project, and
we'll just go cone, dot.

123
00:10:14.950 --> 00:10:21.681
And within this, Let's go ahead and
let's tweak this so

124
00:10:21.681 --> 00:10:27.699
we can run the Angular application,
in parallel with the nest application.

125
00:10:31.170 --> 00:10:36.177
So what we'll do here is,
we've installed concurrently,

126
00:10:36.177 --> 00:10:39.816
I'm going to create some custom commands.

127
00:10:41.538 --> 00:10:47.306
So one of them is going to
be called serve API and,

128
00:10:47.306 --> 00:10:51.543
I'm gonna do nx run, api:serve.

129
00:10:51.543 --> 00:10:56.253
Then what I'm gonna do is
I'm gonna go serve:web,

130
00:10:59.063 --> 00:11:03.526
And this is going to be ng -serve,

131
00:11:07.743 --> 00:11:10.957
What I like to do here is --open.

132
00:11:10.957 --> 00:11:14.475
That way, when it's ready to go,
it just opens up the browser tab, and

133
00:11:14.475 --> 00:11:15.954
I don't have to do anything.

134
00:11:15.954 --> 00:11:20.980
So this is just because I'm lazy,
and because I can, and

135
00:11:20.980 --> 00:11:26.767
then from here, we're gonna go
serve:all and one second here.

136
00:11:26.767 --> 00:11:31.707
I'm going to, Quit Rocket,

137
00:11:33.186 --> 00:11:36.426
It's super awesome when you need it,
but not when you don't.

138
00:11:36.426 --> 00:11:41.256
And then from here,
we're gonna go concurrently, and

139
00:11:41.256 --> 00:11:46.924
we're gonna go backspace because
we need to separate these out.

140
00:11:46.924 --> 00:11:50.220
It's a little funny,
especially with Windows,

141
00:11:52.939 --> 00:11:58.849
That you have to do this
in a very specific way,

142
00:11:58.849 --> 00:12:02.195
so, from here npm:run.

143
00:12:07.758 --> 00:12:11.829
I will also say that,
I'm not infallible so

144
00:12:11.829 --> 00:12:19.319
if somebody sees me doing something silly,
feel free to call me out, serve web.

145
00:12:23.242 --> 00:12:27.327
All right,
I have a good feeling about this.

146
00:12:27.327 --> 00:12:33.432
So now, lemme save this,
let's go back into our command line,

147
00:12:33.432 --> 00:12:37.064
and now let's go npm run serve:all.

148
00:12:46.103 --> 00:12:51.051
Wait for it, Here we go,

149
00:12:51.051 --> 00:12:55.322
and so
now what I've done from a single command,

150
00:12:55.322 --> 00:12:59.905
is I was able to streamline
having this run client and

151
00:12:59.905 --> 00:13:07.012
server in two separate tabs, and now we
are pulling in this message from the API.

152
00:13:07.012 --> 00:13:09.427
So if I go to local hosts,
I believe it's 3300,

153
00:13:12.543 --> 00:13:19.601
This might be 3300/api,
Well let's just see here.

154
00:13:19.601 --> 00:13:21.931
So if we go to network,

155
00:13:27.477 --> 00:13:30.841
I'm just gonna keep
guessing until I get it.

156
00:13:30.841 --> 00:13:37.183
I believe honestly it's API hello,
there we go, so behold the magic.

157
00:13:38.822 --> 00:13:44.509
All right, so now up to this point,
we have generated,

158
00:13:44.509 --> 00:13:48.264
an Angular, and nest application.

159
00:13:48.264 --> 00:13:53.152
So, what I wanna do now is I
wanna take just a moment and,

160
00:13:53.152 --> 00:13:59.914
I want to talk about the file structure
that exists within this application,

161
00:13:59.914 --> 00:14:05.760
just to lay the foundation of how
things are going to be organized.

