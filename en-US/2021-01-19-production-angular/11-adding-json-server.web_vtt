WEBVTT

1
00:00:00.178 --> 00:00:06.001
Let's start to look at how to
start to build this out and

2
00:00:06.001 --> 00:00:13.612
turn this into something that resembles
more a real life application.

3
00:00:13.612 --> 00:00:19.342
So, Let's

4
00:00:19.342 --> 00:00:23.363
go ahead and just kind of a bonus module,

5
00:00:23.363 --> 00:00:28.940
I'm going to show you how to
use JSON server real quick.

6
00:00:28.940 --> 00:00:33.890
And this is going to allow
us to remove the hard

7
00:00:33.890 --> 00:00:37.812
coded data within our components.

8
00:00:37.812 --> 00:00:40.062
So the first thing we're gonna do here.

9
00:00:40.062 --> 00:00:43.574
We're going back to the command line and

10
00:00:47.692 --> 00:00:52.984
In a new tab, although, Yeah,

11
00:00:52.984 --> 00:00:58.485
let me just close this down real quick and
we're just going to go.

12
00:01:01.190 --> 00:01:06.932
Yarn add Json-server,

13
00:01:08.137 --> 00:01:12.829
Save-dev So take just a second

14
00:01:17.076 --> 00:01:22.478
And why this is doing this,
I am going to, Make a directory.

15
00:01:22.478 --> 00:01:23.905
So make directory.

16
00:01:23.905 --> 00:01:25.357
We're gonna call it server.

17
00:01:25.357 --> 00:01:31.069
And I'm going to touch server.db.json.

18
00:01:31.069 --> 00:01:34.628
And so all I've done now is in the code.

19
00:01:37.375 --> 00:01:44.675
At the very very root, I've just created
the server folder with this db.json file.

20
00:01:44.675 --> 00:01:48.675
And then from here, let's go, Widgets.

21
00:01:51.305 --> 00:01:56.222
And so I'm just defining
a very basic json structure.

22
00:01:56.222 --> 00:02:02.079
This is actually an array and

23
00:02:02.079 --> 00:02:05.500
we'll go json is

24
00:02:14.548 --> 00:02:19.681
And so we know that it is remote,

25
00:02:19.681 --> 00:02:25.386
we'll go remote Mock Widget 01,

26
00:02:25.386 --> 00:02:33.386
and description is going
to be pending all right?

27
00:02:33.386 --> 00:02:36.556
And let's just copy this two more times.

28
00:02:39.393 --> 00:02:45.086
And if somebody is running a timer,
I think I've been invested into this task.

29
00:02:45.086 --> 00:02:50.245
For a matter of about, I don't know,
three to five minutes at this point.

30
00:02:53.477 --> 00:02:55.508
All right, there we go.

31
00:02:55.508 --> 00:02:58.922
Good, and I'm gonna save this.

32
00:02:58.922 --> 00:03:04.303
Then I'm just going to
update our package.json.

33
00:03:09.594 --> 00:03:15.119
And that Escape button
will be the death of me.

34
00:03:21.699 --> 00:03:23.417
We're going to add one more command.

35
00:03:23.417 --> 00:03:26.010
So I think it's interesting that.

36
00:03:27.450 --> 00:03:33.158
Mpm in and of itself is turned out to
be a pretty powerful build tool that I

37
00:03:33.158 --> 00:03:39.650
am certainly not shy about jumping in and
adding commands to kind of streamline.

38
00:03:39.650 --> 00:03:41.550
It makes things more descriptive.

39
00:03:41.550 --> 00:03:49.166
So writing a new command serve json,
and from here, it's just Jason server.

40
00:03:49.166 --> 00:03:52.649
And then we're just gonna
point it to db.json.

41
00:03:56.231 --> 00:03:59.916
Let's go back into our command line and,

42
00:04:01.210 --> 00:04:06.445
I'm going to, Npm run serve : all.

43
00:04:06.445 --> 00:04:12.553
But then in here,
I'm going to go npm run serve : json.

44
00:04:16.198 --> 00:04:21.300
There we go, json serve, words do matter.

45
00:04:21.300 --> 00:04:22.348
All right, let's try this again.

46
00:04:30.878 --> 00:04:37.219
So, what this allows
us to do is from here,

47
00:04:37.219 --> 00:04:46.457
local host, 3000 Helloworld And

48
00:04:55.966 --> 00:05:01.278
I think we may have some
port conflicts a problem

49
00:05:09.969 --> 00:05:15.744
I'm gonna spend too much time on this, but
Let me just double check and make sure.

50
00:05:23.571 --> 00:05:25.111
One second here.

51
00:05:25.111 --> 00:05:26.753
Let's do this.

52
00:05:26.753 --> 00:05:32.579
&gt;&gt; This is saying json server not server,
but I thought you already fixed that.

53
00:05:32.579 --> 00:05:35.261
&gt;&gt; Yeah, I got that.

54
00:05:35.261 --> 00:05:41.678
Okay, probably might have copied this
wrong, But I think I got it right.

55
00:05:41.678 --> 00:05:46.973
So it's one of these fluky things
that you live to regret about, but,

56
00:05:57.093 --> 00:05:59.447
Let's try this one more time.

57
00:06:03.202 --> 00:06:05.032
Yeah, I think I did hold on.

58
00:06:08.767 --> 00:06:10.346
Apparently these are different.

59
00:06:10.346 --> 00:06:13.457
[LAUGH] Awesome.

60
00:06:15.216 --> 00:06:16.720
Now wait for it.

61
00:06:24.554 --> 00:06:26.028
It totally make sense in HindSite.

62
00:06:27.972 --> 00:06:32.092
All right, let's try this one more time.

63
00:06:32.092 --> 00:06:35.468
There we go, boom!

64
00:06:35.468 --> 00:06:37.840
Celebrate good times, come on.

65
00:06:37.840 --> 00:06:43.466
All right, so now if I go here To

66
00:06:43.466 --> 00:06:49.501
see that it's pointing to the json file,
and we can consume this.

67
00:06:49.501 --> 00:06:52.973
And so if I even go here,

68
00:06:52.973 --> 00:06:57.330
1 or its widgets rather or two

69
00:07:00.222 --> 00:07:04.989
So this is the fastest way to get up and
running with a REST API.

