WEBVTT

1
00:00:00.080 --> 00:00:02.978
When you're building applications,

2
00:00:02.978 --> 00:00:08.243
when you're doing them at scale,
it's important to stop and notice,

3
00:00:08.243 --> 00:00:13.357
what are the patterns that I'm using
over and over, and over again.

4
00:00:13.357 --> 00:00:19.772
So, for instance,
let's go back to the command line,

5
00:00:19.772 --> 00:00:24.550
I'm free styling here, but I think it's

6
00:00:24.550 --> 00:00:29.210
really important to just call this out.

7
00:00:29.210 --> 00:00:32.120
If we go, I'm going to just
shut this down for a minute.

8
00:00:32.120 --> 00:00:35.540
And let's go and nx g.

9
00:00:35.540 --> 00:00:42.980
We're going to generate another service
and I'm going to call it items.

10
00:00:42.980 --> 00:00:44.780
And so
we're going to generate an item service.

11
00:00:46.030 --> 00:00:50.060
And I'm going to put it in
the coordinator project.

12
00:00:51.480 --> 00:00:54.268
We just make sure that everything
is going to come up right.

13
00:00:54.268 --> 00:00:59.416
Okay, so I'm going to go ahead and

14
00:00:59.416 --> 00:01:05.780
generate this, we now have a service.

15
00:01:05.780 --> 00:01:08.270
Now I'm going to hop back into my code.

16
00:01:08.270 --> 00:01:15.415
Let's open up DB dot JSON and

17
00:01:15.415 --> 00:01:19.881
I'm going to copy

18
00:01:19.881 --> 00:01:26.310
this And I'm going to paste it.

19
00:01:26.310 --> 00:01:30.250
And now what we have instead of
widgets we're going to go items.

20
00:01:30.250 --> 00:01:37.900
And so I realize that the data model
is very close that is by intention.

21
00:01:37.900 --> 00:01:40.906
Just for the sake of speed
I want to illustrate this.

22
00:01:40.906 --> 00:01:43.411
Like so.

23
00:01:43.411 --> 00:01:48.520
Then I'm going to go
to the API interfaces.

24
00:01:50.050 --> 00:01:55.470
And I'm just going to
introduce a new interface

25
00:01:55.470 --> 00:02:00.764
which is going to be
item extends base entity.

26
00:02:07.532 --> 00:02:10.316
So now we're starting to think about
this in terms of layers in kind of

27
00:02:10.316 --> 00:02:11.619
this horizontal development.

28
00:02:15.370 --> 00:02:19.084
If we go back to our server,

29
00:02:19.084 --> 00:02:23.447
I'm going to spin this back up.

30
00:02:29.602 --> 00:02:33.380
And let me just check my DB JSON,
there we go.

31
00:02:33.380 --> 00:02:34.950
Let's save this.

32
00:02:34.950 --> 00:02:35.720
Let's run this again.

33
00:02:36.720 --> 00:02:38.990
And notice now I have two endpoints.

34
00:02:38.990 --> 00:02:44.870
So if I go into My URL

35
00:02:44.870 --> 00:02:49.058
up here ,we have widgets and
we have items.

36
00:02:49.058 --> 00:02:53.515
And so now let's take this and

37
00:02:53.515 --> 00:02:58.150
let's open up item service and

38
00:02:58.150 --> 00:03:02.850
there's a fundamental flaw.

39
00:03:02.850 --> 00:03:07.822
Without a flaw but an optimization I
can make with this code that I think

40
00:03:07.822 --> 00:03:12.543
somebody could call out if they saw or
they watch what I'm doing and

41
00:03:12.543 --> 00:03:15.680
at some point,
feel free to to point it out.

42
00:03:17.190 --> 00:03:23.773
But I'm going to take and
I'm just going to copy this, And

43
00:03:23.773 --> 00:03:27.130
I'm going to go over to the item service
and I'm just going to paste this in.

44
00:03:28.820 --> 00:03:33.581
Now, you'll see here, the only thing that

45
00:03:33.581 --> 00:03:38.340
I need to change is really
to do just a Find and

46
00:03:38.340 --> 00:03:46.270
Replace on the model itself, so
I'm going do a case sensitive.

47
00:03:46.270 --> 00:03:50.506
And We'll go here

48
00:03:55.802 --> 00:03:58.449
And this is all leading to a point

49
00:04:22.581 --> 00:04:23.595
Fix our imports.

50
00:04:25.025 --> 00:04:26.495
We'll go HTTP client.

51
00:04:29.865 --> 00:04:34.230
It's going to find the item hopefully yes,
if not, not a problem.

52
00:04:34.230 --> 00:04:38.547
Sometimes you have to manually do this in,
here we go.

53
00:04:38.547 --> 00:04:45.637
Item Http Client items.

54
00:04:45.637 --> 00:04:50.479
Now, if you're paying attention,
there's a couple

55
00:04:50.479 --> 00:04:55.330
things that I want to call
out that we can improve upon.

56
00:04:56.850 --> 00:05:04.994
So if I put these side by side, And

57
00:05:04.994 --> 00:05:13.110
if I scroll down, we'll start to see
some things that are very similar.

58
00:05:13.110 --> 00:05:15.370
So one is this endpoint.

59
00:05:17.850 --> 00:05:20.650
So this is something this
would be a candidate to

60
00:05:20.650 --> 00:05:23.040
extract out into configuration.

61
00:05:23.040 --> 00:05:27.995
So as you start to prepare to actually
deploy to multiple environments,

62
00:05:27.995 --> 00:05:30.200
you would want to move this out.

63
00:05:30.200 --> 00:05:32.260
So this is a transition step.

64
00:05:32.260 --> 00:05:34.940
The other thing that.

65
00:05:34.940 --> 00:05:41.569
I want to point out, these two methods,
do exactly the same thing,

66
00:05:41.569 --> 00:05:49.640
and so this would be a candidate to
extract out, into a utility function.

67
00:05:49.640 --> 00:05:55.425
With that said,
Everything else about this,

68
00:05:55.425 --> 00:06:00.900
is essentially the same in terms
of the items and the widgets.

69
00:06:00.900 --> 00:06:03.580
You're not doing the same thing.

70
00:06:03.580 --> 00:06:07.190
But you're doing it the same.

71
00:06:07.190 --> 00:06:08.050
Now here's the question.

72
00:06:09.160 --> 00:06:11.820
Here's the thought exercise
that I will leave you with.

73
00:06:14.570 --> 00:06:20.420
If you know what this is going to be.

74
00:06:22.720 --> 00:06:29.104
Then how much time should
you spend thinking about

75
00:06:29.104 --> 00:06:34.886
what your next service
is going to look like?

76
00:06:39.087 --> 00:06:43.800
I would say, very, very little.

77
00:06:43.800 --> 00:06:47.869
Because I could sit here and
I could generate or

78
00:06:47.869 --> 00:06:54.870
introduce another data model into this
application and create a new end point.

79
00:06:55.910 --> 00:06:59.470
And this service is going
to look exactly the same.

80
00:07:00.790 --> 00:07:01.747
Why is that?

81
00:07:04.034 --> 00:07:09.520
Because this service is doing one thing.

82
00:07:11.110 --> 00:07:15.470
It is simply calling an endpoint,
grabbing the data and

83
00:07:15.470 --> 00:07:18.670
then doing something else with it.

84
00:07:18.670 --> 00:07:22.236
And so, this is a fundamental
problem that I've had or

85
00:07:22.236 --> 00:07:26.422
had with kind of historical legacy
AngularJS and Angular apps,

86
00:07:26.422 --> 00:07:30.997
is you have this idea of this stateful
service that's responsible for

87
00:07:30.997 --> 00:07:34.820
one managing state, and
communicating with the server.

88
00:07:37.410 --> 00:07:40.336
And so if I had business logic in here,

89
00:07:40.336 --> 00:07:46.210
the business logic would change from
items to widgets more than likely.

90
00:07:46.210 --> 00:07:51.197
I mean imagine if you had users and
orders, or users and

91
00:07:51.197 --> 00:07:58.830
I mean whatever it is that The business
logic around the entities change.

92
00:07:58.830 --> 00:08:03.370
But the mechanisms to fetch that
from a REST Endpoint doesn't change.

93
00:08:03.370 --> 00:08:10.120
Like I don't think rest has changed in
a really, really, really long time.

94
00:08:10.120 --> 00:08:15.213
And so now, what you want to
do is you want to start to

95
00:08:15.213 --> 00:08:22.450
abstract The things that change away
from the things that do not change.

96
00:08:23.460 --> 00:08:29.538
And so when you start thinking about
large scale apps that are stable,

97
00:08:29.538 --> 00:08:35.530
that you can build on, this is how
you do that is you reduce coupling.

98
00:08:37.130 --> 00:08:40.256
By not coupling things that don't change,

99
00:08:40.256 --> 00:08:45.494
like calling rest API's with things
that do change, ie business logic,

100
00:08:45.494 --> 00:08:51.160
and you separate these out so that you
can reuse the stuff that doesn't change.

101
00:08:52.800 --> 00:08:56.704
And so, this kind of started out as I
wanted to introduce how to get up and

102
00:08:56.704 --> 00:08:58.960
running with DB JSON very quick.

103
00:08:58.960 --> 00:09:04.108
But really what it's kind of transitioned
into is proper abstractions,

104
00:09:04.108 --> 00:09:08.790
and recognizing the patterns
that you do over and over.

105
00:09:08.790 --> 00:09:13.360
And I think an HTTP service
class is a major candidate for

106
00:09:13.360 --> 00:09:18.805
the fact that the only thing that
is changing in this entire thing,

107
00:09:18.805 --> 00:09:22.920
is the model which affects that endpoint.

108
00:09:22.920 --> 00:09:26.900
And then what I actually sent into
the methods, nothing else changes.

109
00:09:26.900 --> 00:09:31.979
And so, what I've done and what you can do
is actually great just a live template.

110
00:09:33.000 --> 00:09:37.725
To wear in your editor, you just have a
hotkey that generates the template out and

111
00:09:37.725 --> 00:09:41.200
then you just put your model and
boom, done gone.

112
00:09:41.200 --> 00:09:42.530
And you've done that.

113
00:09:42.530 --> 00:09:45.362
This this kinda work right here.

114
00:09:45.362 --> 00:09:50.866
Even with my commentary this should
not take you more than three minutes,

115
00:09:50.866 --> 00:09:55.854
three to five minutes to generate
this layer in your application.

