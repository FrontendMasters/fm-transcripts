WEBVTT

1
00:00:00.500 --> 00:00:06.784
Now, what we're going to do is,
we're going to go constructor,

2
00:00:06.784 --> 00:00:12.411
private, and
we're going to inject the widgetsService.

3
00:00:18.759 --> 00:00:26.257
Awesome, and from here,
let me just check something real quick.

4
00:00:38.870 --> 00:00:41.170
In, let me just verify that.

5
00:00:43.496 --> 00:00:44.591
Got my module.

6
00:01:01.066 --> 00:01:05.763
Now, because we're moving
the handling of the remote

7
00:01:05.763 --> 00:01:10.971
server calls into state,
I need to move, CoreDataModule or

8
00:01:10.971 --> 00:01:15.420
import that into state,
and make that available.

9
00:01:15.420 --> 00:01:18.624
So, from fem core-state,

10
00:01:18.624 --> 00:01:24.635
I don't know why I couldn't
figure that out before.

11
00:01:30.650 --> 00:01:31.487
There we go.

12
00:01:34.711 --> 00:01:36.581
&gt;&gt; CoreDataModule.

13
00:01:36.581 --> 00:01:38.174
&gt;&gt; Yeah.

14
00:01:41.292 --> 00:01:43.088
And I definitely don't wanna import.

15
00:01:43.088 --> 00:01:45.309
Just like a snake eating its tail.

16
00:01:53.322 --> 00:01:56.052
There we go, all right.

17
00:02:06.619 --> 00:02:07.480
Yes.

18
00:02:09.520 --> 00:02:12.100
When it works, it is good.

19
00:02:13.700 --> 00:02:14.582
Organize imports.

20
00:02:17.130 --> 00:02:18.939
Here we go.

21
00:02:18.939 --> 00:02:22.951
And now, let's go head and

22
00:02:22.951 --> 00:02:29.593
let's start with, let's do loadWidgets.

23
00:02:29.593 --> 00:02:34.060
So, we may not do all of this, but
let's do at least a little bit of it.

24
00:02:35.160 --> 00:02:38.728
So, widgetsService.all.

25
00:02:42.009 --> 00:02:45.530
Sometimes I like to break things down,
subscribe.

26
00:02:46.550 --> 00:02:50.240
And from here,
response is gonna be widgets.

27
00:02:52.460 --> 00:02:54.636
And I'm just going to take this and
I'm gonna go this

28
00:03:00.060 --> 00:03:03.672
allWidgets.next(widgets).

29
00:03:11.659 --> 00:03:16.150
Let me see why this did not like this.

30
00:03:18.099 --> 00:03:21.038
Possibly it's because of the syntax here.

31
00:03:21.038 --> 00:03:21.679
There we go.

32
00:03:21.679 --> 00:03:24.250
[SOUND] All right.

33
00:03:24.250 --> 00:03:29.298
So now, let's stop, just for a second,
and examine what we have done.

34
00:03:31.815 --> 00:03:37.183
When we call WidgetsFacade.LoadWidgets,

35
00:03:40.096 --> 00:03:42.588
If you imagine kind of this apex,

36
00:03:42.588 --> 00:03:48.380
LoadWidgets is going to go get the data
and it's going to unwrap that result.

37
00:03:48.380 --> 00:03:52.209
And it's going to drop it into

38
00:03:52.209 --> 00:03:57.730
this.allWidgets.observable string.

39
00:03:59.350 --> 00:04:04.029
So, we're fetching the data, and
then because we're subscribed,

40
00:04:04.029 --> 00:04:07.850
we're immediately notified
that new data has arrived.

41
00:04:07.850 --> 00:04:13.404
So now, if I go to the widgets component,

42
00:04:13.404 --> 00:04:22.670
what I'm going to do is Let's
get rid of the widgetsService.

43
00:04:22.670 --> 00:04:23.940
We're just going to move this away.

44
00:04:25.990 --> 00:04:31.620
And instead,
we're going to use the WidgetsFacade.

45
00:04:33.540 --> 00:04:38.329
And what I'm going to do, as well,
is from here, so you can see, as well,

46
00:04:38.329 --> 00:04:42.666
I'm calling this widgetsService,
and I'm taking that result and

47
00:04:42.666 --> 00:04:45.504
I'm assigning it in a single transaction.

48
00:04:45.504 --> 00:04:48.214
So, it's a command and a query together.

49
00:04:53.713 --> 00:05:00.348
This does not happen anymore.

50
00:05:00.348 --> 00:05:02.030
We separate the commands in the query.

51
00:05:02.030 --> 00:05:04.501
So loadWidgets.

52
00:05:04.501 --> 00:05:09.394
And then up here, what we can do is,

53
00:05:09.394 --> 00:05:17.729
we're gonna just say
this.widgetsFacade.allWidgets.

54
00:05:22.229 --> 00:05:24.037
And what I can do, since I'm here.

55
00:05:26.155 --> 00:05:28.797
Is I'm gonna wrap this in an observable.

56
00:05:33.485 --> 00:05:36.655
And I'm going to say

57
00:05:36.655 --> 00:05:45.617
this.widgetsFacade.selectedWidgets, all
right?

58
00:05:45.617 --> 00:05:51.310
And What I will do, as well,

59
00:05:51.310 --> 00:05:58.701
let's go ahead and selectWidget.

60
00:05:58.701 --> 00:06:01.932
It's gonna take a widget and

61
00:06:01.932 --> 00:06:07.058
this.selectedWidget.next(widget).

62
00:06:11.535 --> 00:06:14.719
All right, so, two pretty simple things.

63
00:06:14.719 --> 00:06:16.540
selectedWidget, it's
going into the facade.

64
00:06:16.540 --> 00:06:17.554
We're calling next, and

65
00:06:17.554 --> 00:06:20.990
then wherever we're subscribe
that's gonna be notified of it.

66
00:06:20.990 --> 00:06:22.970
From here,
we're calling all the widgets and

67
00:06:22.970 --> 00:06:25.410
we're returning it in
the observable string.

68
00:06:25.410 --> 00:06:26.880
And so now, we go back here.

69
00:06:28.530 --> 00:06:34.579
And we no longer are going

70
00:06:34.579 --> 00:06:43.228
to do assignment in the component.

71
00:06:49.372 --> 00:06:50.724
So rather selectWidget.

72
00:06:53.643 --> 00:06:57.063
I believe this was emptyWidget and

73
00:07:03.421 --> 00:07:12.705
I realized as I look at this,
I just go Widget.

74
00:07:19.135 --> 00:07:19.845
There we go.

75
00:07:22.717 --> 00:07:28.955
And I'm just gonna comment these out,
Right now.

76
00:07:46.382 --> 00:07:49.592
Now, Okay,

77
00:07:49.592 --> 00:07:54.869
I'm just pointing this out,
other than this up here,

78
00:07:54.869 --> 00:07:59.352
what assignment am I
doing in this component?

79
00:07:59.352 --> 00:08:00.027
Nothing.

80
00:08:01.806 --> 00:08:04.025
So, let me go into my HTML.

81
00:08:06.450 --> 00:08:11.219
And We'll make this asynchronous, as well.

82
00:08:11.219 --> 00:08:13.040
Let me save this.

83
00:08:13.040 --> 00:08:20.676
And with a little bit of luck This
will work, or it may blow up.

84
00:08:58.100 --> 00:09:01.626
No provider for reducer manager.

85
00:09:14.251 --> 00:09:15.876
One second here.

86
00:09:29.971 --> 00:09:37.121
This is what happens when
you get aggressive about.

87
00:09:41.285 --> 00:09:45.772
So what I'm gonna do,
is I'm actually going to see what

88
00:09:45.772 --> 00:09:49.600
happens if I just take this out,
and save this.

89
00:09:56.987 --> 00:09:57.779
All right.

90
00:10:02.380 --> 00:10:03.670
What do we notice about this?

91
00:10:04.940 --> 00:10:06.210
Nothing.

92
00:10:06.210 --> 00:10:07.690
It's exactly the same as we left it.

93
00:10:09.140 --> 00:10:13.737
The only thing that's changed is now, we,

94
00:10:13.737 --> 00:10:19.205
in our code we have removed
all of the implementation

95
00:10:19.205 --> 00:10:25.065
details around state management
out of the component.

96
00:10:25.065 --> 00:10:32.428
Which this allows us to
come in on the backside and

97
00:10:32.428 --> 00:10:36.567
implement NgRx in pieces.

98
00:10:36.567 --> 00:10:41.203
And so, this is, I believe,
a facade is service where the subject is,

99
00:10:41.203 --> 00:10:44.930
first of all,
it is a viable state management approach.

100
00:10:44.930 --> 00:10:49.899
But, when you implement it by the facade,

101
00:10:49.899 --> 00:10:55.420
then you can take that as far as you want.

102
00:10:55.420 --> 00:10:58.832
Now, what I would recommend,

103
00:10:58.832 --> 00:11:04.606
this is the one caveat that I would say,
be careful,

104
00:11:04.606 --> 00:11:09.594
is that the proponents,
there are people who

105
00:11:09.594 --> 00:11:15.260
are very aggressive about
service with a subject.

106
00:11:15.260 --> 00:11:21.123
And so, they will create
a service with a subject for

107
00:11:21.123 --> 00:11:27.400
every data model,
every entity in their application.

108
00:11:27.400 --> 00:11:31.903
The difference between that individual and
myself,

109
00:11:31.903 --> 00:11:36.113
is that I'm also a fan of
a service with a subject.

110
00:11:36.113 --> 00:11:40.163
The difference is, I'm a fan of
one service with a subject, and

111
00:11:40.163 --> 00:11:41.890
that's called the store.

112
00:11:42.990 --> 00:11:48.958
And so, at some point, if you're creating
a bunch of services that have subjects,

113
00:11:48.958 --> 00:11:51.154
that's what the store is for.

114
00:11:51.154 --> 00:11:54.048
You're, in a way to avoid complexity,

115
00:11:54.048 --> 00:11:59.170
you're actually just distributing
it back across your application.

116
00:11:59.170 --> 00:12:04.185
So, if you're using
a service with a subject and

117
00:12:04.185 --> 00:12:10.180
a facade, I believe for
a transition step, it is great.

118
00:12:10.180 --> 00:12:11.550
It's fantastic.

119
00:12:11.550 --> 00:12:16.303
In fact, if I was doing temporal state
that does not need to be stored in

120
00:12:16.303 --> 00:12:19.931
application state,
let's say a notification bus,

121
00:12:19.931 --> 00:12:23.090
I would use a service with a subject.

122
00:12:23.090 --> 00:12:27.754
But when it comes to managing state for
a complex application,

123
00:12:27.754 --> 00:12:33.650
then eventually you're going to want
to transition into something like NgRx,

124
00:12:33.650 --> 00:12:38.180
Akita, whatever it is,
there's a number of them.

125
00:12:38.180 --> 00:12:43.534
But having n number of services
with subject versus having one,

126
00:12:43.534 --> 00:12:47.910
eventually that becomes
a losing proposition.

127
00:12:47.910 --> 00:12:52.841
I wanna do a quick tour of NgRx.

128
00:12:52.841 --> 00:13:00.180
Then I want to do a quick tour of testing
in Angular, what that looks like.

129
00:13:00.180 --> 00:13:07.451
And then I want to also offer just
a little commentary on end-to-end testing,

130
00:13:07.451 --> 00:13:12.118
which, I think,
is the most underrated thing that

131
00:13:12.118 --> 00:13:17.566
developers can do to provide
value to their organization.

132
00:13:17.566 --> 00:13:19.540
I feel very, very strongly about it.

133
00:13:19.540 --> 00:13:21.280
And then from there, we'll do Q&amp;A.

134
00:13:21.280 --> 00:13:25.907
And then, in some way, shape, or
form, we will get to the build things

135
00:13:25.907 --> 00:13:31.080
that I wanted to show you in
the performance stuff, at some point.

136
00:13:31.080 --> 00:13:39.088
I'm going to,
Jump into one more branch here.

137
00:13:39.088 --> 00:13:43.822
And, we are going to

138
00:13:43.822 --> 00:13:48.562
walk through NgRx.

