WEBVTT

1
00:00:00.000 --> 00:00:05.584
So now, let's go back into here and

2
00:00:05.584 --> 00:00:10.797
what I wanted to show everybody is

3
00:00:10.797 --> 00:00:16.569
within our application we're going

4
00:00:16.569 --> 00:00:21.783
to open up appcomponent.htm and

5
00:00:21.783 --> 00:00:27.740
this is going to be just kind of down and

6
00:00:27.740 --> 00:00:31.690
dirty just initially.

7
00:00:31.690 --> 00:00:38.100
So just go hello client, and
we'll deal with this just in a second.

8
00:00:38.100 --> 00:00:39.880
And then I'm gonna get rid of this.

9
00:00:41.090 --> 00:00:45.079
Save this and then within here,

10
00:00:45.079 --> 00:00:49.804
what I wanna do is I want to import the,

11
00:00:49.804 --> 00:00:54.680
well I want to inject rather the widgets

12
00:00:54.680 --> 00:01:01.150
constructor or the widgets service rather.

13
00:01:01.150 --> 00:01:03.919
Widgets service,

14
00:01:15.620 --> 00:01:20.261
Okay and we may need to export this so

15
00:01:20.261 --> 00:01:25.985
the one thing that you
do have to do if you're

16
00:01:25.985 --> 00:01:31.555
using the alias,
you need to make sure that

17
00:01:31.555 --> 00:01:36.530
you export it in the barrel roll so in.

18
00:01:38.060 --> 00:01:42.370
So I'm doing this here so
occasionally as well if that doesn't work,

19
00:01:42.370 --> 00:01:44.940
sometimes I have to do a couple of things.

20
00:01:47.530 --> 00:01:49.600
One, restart the TS server.

21
00:01:49.600 --> 00:01:50.500
Sometimes that works.

22
00:01:51.560 --> 00:01:56.559
And if that doesn't work, then what I do
is I just have to do it by hand for once.

23
00:02:03.015 --> 00:02:03.913
Core data.

24
00:02:05.390 --> 00:02:12.087
And here we go, all right,so now what I've

25
00:02:12.087 --> 00:02:18.965
done is I've imported
the widget service and

26
00:02:18.965 --> 00:02:23.679
now I'm just going to oninit.

27
00:02:27.770 --> 00:02:31.255
So implements oninit.

28
00:02:43.750 --> 00:02:48.010
We're going to courses,

29
00:02:48.010 --> 00:02:53.246
this is gonna be an observable.

30
00:03:02.290 --> 00:03:05.796
And of course,
it doesn't know what this is, good time,

31
00:03:05.796 --> 00:03:08.239
so I'll just import this one more time.

32
00:03:18.284 --> 00:03:21.063
That's why I can just hear
everybody chatting or

33
00:03:21.063 --> 00:03:24.010
yelling we're not dealing with courses.

34
00:03:24.010 --> 00:03:28.039
There we go.

35
00:03:31.814 --> 00:03:34.681
Typically when I do this,
it's either items courses or

36
00:03:34.681 --> 00:03:36.270
something academic related.

37
00:03:36.270 --> 00:03:39.492
So, that is muscle memory at its finest.

38
00:03:42.305 --> 00:03:47.349
And so now within our egoninit,
we're gonna go

39
00:03:47.349 --> 00:03:53.033
this.widgets equals
this.widgetservice.all.

40
00:03:53.033 --> 00:03:57.517
Okay?

41
00:03:57.517 --> 00:04:01.736
And from here,let's go
into our template and

42
00:04:01.736 --> 00:04:07.060
I'm going to show you my
favorite debugging trick ever.

43
00:04:07.060 --> 00:04:10.890
If you've ever watched any of my content,
this is not a surprise.

44
00:04:12.990 --> 00:04:18.580
I'll pick something we'll
just go with py naught..

45
00:04:18.580 --> 00:04:23.649
And then we'll go here and
we'll go courses

46
00:04:23.649 --> 00:04:28.038
into the pipe, JSON or rather async.

47
00:04:33.671 --> 00:04:41.410
And then, and why do I keep saying,
all right, widgets, widgets widgets.

48
00:04:41.410 --> 00:04:42.860
Let's save this.

49
00:04:42.860 --> 00:04:47.157
And you notice here that it's looking for

50
00:04:47.157 --> 00:04:52.189
some provider only then
in a couple of things, so

51
00:04:52.189 --> 00:04:57.490
we're importing core data
into our application.

52
00:04:59.170 --> 00:05:05.190
So within nhc module,
we're gonna go here, core data module.

53
00:05:05.190 --> 00:05:06.760
Let's save this.

54
00:05:06.760 --> 00:05:07.497
Let's go back.

55
00:05:09.478 --> 00:05:14.430
And it's still looking for HTTP client.

56
00:05:14.430 --> 00:05:24.180
So we'll import that HTTP client module.

57
00:05:24.180 --> 00:05:30.066
Let's save this and
what I want to see Is that now,

58
00:05:30.066 --> 00:05:34.001
this is what's cool about this.

59
00:05:37.683 --> 00:05:43.408
If I look at what I've
done now this is a very

60
00:05:43.408 --> 00:05:48.490
intentionally condensed example.

61
00:05:48.490 --> 00:05:52.201
But now imagine this at scale,

62
00:05:52.201 --> 00:05:57.483
I have an application
that I'm saying I need

63
00:05:57.483 --> 00:06:02.334
to get widgets and
I need to add them in and

64
00:06:02.334 --> 00:06:08.440
make them available into my application.

65
00:06:08.440 --> 00:06:13.271
Historically, what you would have to do is
you would have to within your application,

66
00:06:13.271 --> 00:06:15.830
wire up that functionality.

67
00:06:15.830 --> 00:06:21.053
But within the client,
I'm able to pull that in and

68
00:06:21.053 --> 00:06:26.158
make that work without
having that functionality

69
00:06:26.158 --> 00:06:31.750
exist explicitly within that
application in so much,

70
00:06:31.750 --> 00:06:37.970
I can go to the dashboard and
let's go to the home component.

71
00:06:39.780 --> 00:06:43.927
And within this,
you'll see here, this dot,

72
00:06:43.927 --> 00:06:48.910
which is service I'm essentially
doing the same thing.

73
00:06:48.910 --> 00:06:52.400
And so if I go to localhost 4200 and

74
00:06:52.400 --> 00:06:57.070
I don't think it is
running I could be wrong.

75
00:06:57.070 --> 00:06:57.640
Nope.

76
00:06:57.640 --> 00:07:02.701
So let's go within this will open

77
00:07:02.701 --> 00:07:07.580
up one more window there we go and

78
00:07:07.580 --> 00:07:12.660
we'll go, NPM run, serve all.

79
00:07:14.710 --> 00:07:21.298
Hopefully we can do this without

80
00:07:21.298 --> 00:07:26.190
stepping on some toes.

81
00:07:26.190 --> 00:07:29.626
All right, let's see what's breaking here,
back into our code I should,

82
00:07:29.626 --> 00:07:30.496
we need to go here.

83
00:07:45.160 --> 00:07:50.660
All right, so we'll go into

84
00:07:53.649 --> 00:07:57.080
I believe it is the widgets component
that is giving us problems.

85
00:08:14.159 --> 00:08:19.326
So what I'm gonna do is I'm just
going to comment these out for now.

86
00:08:22.074 --> 00:08:25.450
We'll deal with these in a moment.

87
00:08:25.450 --> 00:08:26.990
So let's go up here.

88
00:08:26.990 --> 00:08:27.580
Save this.

89
00:08:29.300 --> 00:08:35.120
Let's go back here and see if everything
compiled well, all the way to the bottom.

90
00:08:36.190 --> 00:08:37.090
I believe we're good.

91
00:08:37.090 --> 00:08:38.880
Let's just check now.

92
00:08:38.880 --> 00:08:39.480
Refresh.

93
00:08:39.480 --> 00:08:40.510
Here we go.

94
00:08:41.850 --> 00:08:48.220
So what we have here is really important.

95
00:08:48.220 --> 00:08:56.640
We have a client application
that is consuming widgets.

96
00:08:58.520 --> 00:09:06.760
We also have a dashboard and
it is also consuming Widgets.

97
00:09:06.760 --> 00:09:11.369
So now we have two separate
applications that are consuming

98
00:09:11.369 --> 00:09:15.120
functionality from a shared live.

99
00:09:15.120 --> 00:09:18.816
The reason why this is possible and

100
00:09:18.816 --> 00:09:23.023
this goes back to the previous module,

101
00:09:23.023 --> 00:09:29.523
is that when you go to the widgets
service you'll notice that

102
00:09:29.523 --> 00:09:36.290
there is nothing specific about
either application in there.

103
00:09:36.290 --> 00:09:41.243
So going back to kind of this
fundamental premise is that extract

104
00:09:41.243 --> 00:09:46.012
your functionality in such a way
That you increase cohesion,

105
00:09:46.012 --> 00:09:49.956
so that things that
are functionally compatible,

106
00:09:49.956 --> 00:09:54.723
that they're in a single place,
and then things that are or so

107
00:09:54.723 --> 00:09:59.219
you're separating things into
these appropriate kind of

108
00:09:59.219 --> 00:10:04.207
containers that you can then pick
these pieces up and move them.

109
00:10:04.207 --> 00:10:09.337
And you're removing coupling from
the things that are unrelated,

110
00:10:09.337 --> 00:10:14.287
and so in other words,
your component layer doesn't need to know

111
00:10:14.287 --> 00:10:19.580
the implementation details of
where your data is coming from.

112
00:10:19.580 --> 00:10:22.616
All it needs to know is
that whatever you give me,

113
00:10:22.616 --> 00:10:26.370
I am going to render I don't
care where it came from.

114
00:10:26.370 --> 00:10:30.638
And if for some reason somebody
wants to save, create, update,

115
00:10:30.638 --> 00:10:33.460
delete, I don't care how you do it.

116
00:10:33.460 --> 00:10:36.718
All I care is that you know how to do it,
and

117
00:10:36.718 --> 00:10:42.980
you're able to then return the new
data upon a successful completion.

118
00:10:42.980 --> 00:10:49.570
And so on the surface this is I
think we can find 50 ways to say it.

119
00:10:49.570 --> 00:10:55.447
But it's a really fundamental first
principle concept that unfortunately,

120
00:10:55.447 --> 00:10:59.220
I see violated out in
the wild all the time.

121
00:10:59.220 --> 00:11:04.635
And that people like yeah I got it,
except then you look

122
00:11:04.635 --> 00:11:10.050
into the code and
then you have really the axis of evil or

123
00:11:10.050 --> 00:11:15.938
some coupling based on that you
have a service in a component

124
00:11:15.938 --> 00:11:20.649
that now you can never
move that service without

125
00:11:20.649 --> 00:11:26.000
informing that component
that is what has happened.

