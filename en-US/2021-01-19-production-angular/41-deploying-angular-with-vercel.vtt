WEBVTT

1
00:00:00.640 --> 00:00:06.202
So, when we talk about development or
deploying applications,

2
00:00:06.202 --> 00:00:12.680
there are what I would consider
three viable options for doing this.

3
00:00:12.680 --> 00:00:18.719
So the first viable option is
generating your static files and

4
00:00:18.719 --> 00:00:23.140
putting them somewhere and
serving them up.

5
00:00:23.140 --> 00:00:27.905
I would say one of the most
viable targets for that, and

6
00:00:27.905 --> 00:00:30.916
I use it fairly frequently is S3.

7
00:00:30.916 --> 00:00:35.650
Is that when you generate your
Angular application that you can take

8
00:00:35.650 --> 00:00:39.950
those files and
you can put them into S3 behind a CDN.

9
00:00:39.950 --> 00:00:42.980
And it's highly, highly performant.

10
00:00:42.980 --> 00:00:48.102
And so I would say for
deploying an Angular application,

11
00:00:48.102 --> 00:00:51.314
that one of the best ways to do that.

12
00:00:51.314 --> 00:00:54.059
And this is with any React,
or any of these,

13
00:00:54.059 --> 00:00:59.331
is that if you're just generating static
files that exist within your dist folder,

14
00:00:59.331 --> 00:01:02.100
you can pick those up
even put them into S3.

15
00:01:03.160 --> 00:01:07.690
And you can point a CDN to it, and
you are absolutely good to go.

16
00:01:07.690 --> 00:01:11.600
Because you're just rendering files,
you're just serving them up.

17
00:01:11.600 --> 00:01:16.456
Where you would need to
do something different is

18
00:01:16.456 --> 00:01:21.555
that if you're doing like
server side rendering.

19
00:01:21.555 --> 00:01:27.869
Which if SEO is a concern for
your application, and it's not often, but

20
00:01:27.869 --> 00:01:36.020
it is a thing that you can use server side
rendering to increase your performance.

21
00:01:36.020 --> 00:01:40.390
Now that is where I would put
like that into a Dockerfile.

22
00:01:40.390 --> 00:01:42.018
And then I would deploy that.

23
00:01:42.018 --> 00:01:46.408
And because you have to have a server
typically express that's rendering those

24
00:01:46.408 --> 00:01:48.930
things and then serving that up.

25
00:01:48.930 --> 00:01:55.170
But if you don't have that, or you're not
actually doing server side functionality,

26
00:01:55.170 --> 00:01:59.640
a very viable candidate is to
just put your Angular application

27
00:01:59.640 --> 00:02:04.790
in S3 behind a CDN Cloud in this case,
and you're good to go.

28
00:02:04.790 --> 00:02:08.229
Now, which leads to I think
on the other side is that,

29
00:02:08.229 --> 00:02:12.370
you put your Angular application
into Docker and you deploy it.

30
00:02:13.440 --> 00:02:18.580
Now there's kind of an intermediate step
that I think is really, really good.

31
00:02:18.580 --> 00:02:21.974
And you have these platforms like Heroku,

32
00:02:21.974 --> 00:02:25.932
Vercel which I think was now or
a site previously,

33
00:02:25.932 --> 00:02:31.530
that you very quickly can kind of
put those things up and deploy them.

34
00:02:31.530 --> 00:02:35.927
And so,
one of the sites that I use on a semi

35
00:02:35.927 --> 00:02:40.340
frequent basis it's actually for sale.

36
00:02:40.340 --> 00:02:46.880
So I always knew it as Zeit, but
I just want to quickly show this example.

37
00:02:46.880 --> 00:02:50.579
So what this allows you to do, and

38
00:02:50.579 --> 00:02:55.733
I have a pro trial now but
there's a free plan,

39
00:02:55.733 --> 00:03:02.090
is that you're able to plink
this to your GitHub repo.

40
00:03:02.090 --> 00:03:05.710
So essentially,
I just allowed it to grab the repo.

41
00:03:06.730 --> 00:03:09.930
And then from here, under the hood,

42
00:03:09.930 --> 00:03:15.620
is it set up a bunch of stuff and
essentially deployed this for me.

43
00:03:15.620 --> 00:03:20.660
And so I can go under the hood here,
and everything

44
00:03:20.660 --> 00:03:25.940
that we're seeing here is
the same exact things that

45
00:03:25.940 --> 00:03:32.480
we saw from our trusty command
line as we are running this.

46
00:03:32.480 --> 00:03:37.146
And so this is when we're running this and
we're building this that what

47
00:03:37.146 --> 00:03:42.830
we're seeing in our command line,
it's essentially doing in the Cloud.

48
00:03:42.830 --> 00:03:46.830
And so it's basically building this and
it is deploying it.

49
00:03:46.830 --> 00:03:51.752
So not only am I able to build
to a specific or build it and

50
00:03:51.752 --> 00:03:57.160
deploy, but
I can actually do it against branches.

51
00:03:57.160 --> 00:04:04.358
And so if I go back here, you can see
that is I push up these branches that

52
00:04:04.358 --> 00:04:09.976
it's going to generate a deployment for
that branch.

53
00:04:09.976 --> 00:04:13.710
Which I think is pretty cool.

54
00:04:13.710 --> 00:04:19.367
And from here, I can just click
on this Deployment link and

55
00:04:19.367 --> 00:04:26.140
from here go ahead and click on this and
you can see this application.

56
00:04:26.140 --> 00:04:31.167
Now the one piece that I
haven't hooked up that would

57
00:04:31.167 --> 00:04:36.088
not be hard to do is doing
the same thing for the API.

58
00:04:36.088 --> 00:04:42.650
But you'll notice here that I have
deployed this into a publicly

59
00:04:42.650 --> 00:04:48.010
accessible domain, and
this was incredibly easy.

60
00:04:48.010 --> 00:04:52.270
It took me less than, I would say five,
ten minutes, or less.

61
00:04:52.270 --> 00:04:56.782
And the only thing that I had to do is,

62
00:04:56.782 --> 00:05:00.566
let me see if I can pull this up,

63
00:05:00.566 --> 00:05:07.040
that within this project I had to,
here we go.

64
00:05:07.040 --> 00:05:12.001
So the one thing that I had to change to
get this to work is you notice it has

65
00:05:12.001 --> 00:05:17.460
a framework preset, which is awesome that
I had to set my output directory to,

66
00:05:17.460 --> 00:05:20.170
well, where's it being built to?

67
00:05:20.170 --> 00:05:22.070
So I just overrode that.

68
00:05:22.070 --> 00:05:30.590
And I was able to then point it
to dist/app/dashboard, done.

69
00:05:30.590 --> 00:05:35.377
And what I could do is even go

70
00:05:35.377 --> 00:05:39.756
into here and take this.

71
00:05:39.756 --> 00:05:41.690
And I could in theory and

72
00:05:41.690 --> 00:05:46.870
I don't know if I want to do
this immortalize this forever.

73
00:05:46.870 --> 00:05:51.786
But you could go in here,
override this, and do ng build--prod,

74
00:05:51.786 --> 00:05:54.300
and save that make it even better.

75
00:05:54.300 --> 00:05:55.730
So there's ways to configure that.

76
00:05:55.730 --> 00:05:58.000
So this is a real quick example.

77
00:05:58.000 --> 00:06:02.392
This is using Vercel which was designed
for a very, very long time but

78
00:06:02.392 --> 00:06:05.720
you have your constatic deployment option.

79
00:06:05.720 --> 00:06:08.813
Then you have your Docker option, which
we'll show in just a moment how to build

80
00:06:08.813 --> 00:06:11.150
that and
then kind of what we can do with that.

81
00:06:11.150 --> 00:06:16.400
And then in the middle of that,
we have platforms like Vercel, Heroku,

82
00:06:16.400 --> 00:06:21.566
even DigitalOcean that allows you to
very quickly what I would consider

83
00:06:21.566 --> 00:06:27.040
kind of these intermediate platforms,
to go ahead and deploy that.

84
00:06:27.040 --> 00:06:32.836
And so when I'm working with developers,
and we're working through concepts,

85
00:06:32.836 --> 00:06:36.617
that it's not enough to just
build an application and

86
00:06:36.617 --> 00:06:41.840
submit the repository for me that I
also want them to deploy it somewhere.

87
00:06:41.840 --> 00:06:46.070
And so I've used Zeit now for
sale for a long time for this.

88
00:06:46.070 --> 00:06:51.003
So it's really,
really handy when you're developing and

89
00:06:51.003 --> 00:06:55.740
sharing your work with even QA or
to a stakeholder that not

90
00:06:55.740 --> 00:07:00.492
only do you build the application or
you submit the code.

91
00:07:00.492 --> 00:07:04.700
But it's built, and
then it's done in such a way

92
00:07:04.700 --> 00:07:09.720
that when you want to
communicate that it is working.

93
00:07:09.720 --> 00:07:13.820
Then all I have to do is say,
hey, QA engineer or whatever,

94
00:07:13.820 --> 00:07:17.870
I've went ahead and
I've implemented this feature.

95
00:07:17.870 --> 00:07:22.990
Can you click on this app and
verify that it works?

96
00:07:22.990 --> 00:07:29.801
And so this is an example that I think
it's important using Vercel or use Heroku.

97
00:07:29.801 --> 00:07:32.894
But Vercel is a really
quite a good platform for

98
00:07:32.894 --> 00:07:35.940
just hooking it into your GitHub repo.

99
00:07:35.940 --> 00:07:40.483
And once you point it to that right
distribution directory is that you

100
00:07:40.483 --> 00:07:42.610
essentially get this for free.

