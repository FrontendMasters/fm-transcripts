WEBVTT

1
00:00:00.190 --> 00:00:02.050
I wanna create a table of contents.

2
00:00:02.050 --> 00:00:06.725
So I wanna be able to see
what else is in the docs.

3
00:00:06.725 --> 00:00:10.300
And to do that as kind
of a shortcut today,

4
00:00:10.300 --> 00:00:13.450
we will just create a component
that does that for us.

5
00:00:13.450 --> 00:00:19.630
So the way that that works is we're
going to get into our components,

6
00:00:19.630 --> 00:00:26.121
and let's just create something
called table-of-contents.js.

7
00:00:26.121 --> 00:00:30.140
And inside of that I'm going to,

8
00:00:30.140 --> 00:00:34.360
we'll just start out with some style so
that we don't have to do that in phases.

9
00:00:34.360 --> 00:00:36.020
So we'll set the fragment of jsx.

10
00:00:36.020 --> 00:00:40.000
we'll import jsx from the UI.

11
00:00:40.000 --> 00:00:42.595
And then we're also
going to import graphql.

12
00:00:44.000 --> 00:00:46.310
Link so
that we can link between the pages, and

13
00:00:46.310 --> 00:00:50.445
then a hook that Gatsby gives
us called useStaticQquery.

14
00:00:52.220 --> 00:00:57.360
Now because this is not a template,
we don't have access

15
00:00:57.360 --> 00:01:02.920
to the page queries or context or
variables or anything.

16
00:01:02.920 --> 00:01:05.750
So we're gonna use this useStaticQuery.

17
00:01:05.750 --> 00:01:10.020
So that we can get data out but

18
00:01:10.020 --> 00:01:12.790
it's important to note that we can only
do this if you don't need variables.

19
00:01:12.790 --> 00:01:15.635
You can't,
you have to hard code everything and

20
00:01:15.635 --> 00:01:20.660
useStaticQuery that's why it's static
you don't get dynamic content.

21
00:01:20.660 --> 00:01:25.255
So first let's set up our
component itself, TableofContents.

22
00:01:26.550 --> 00:01:30.470
If I can spell it,
that doesn't get any arguments.

23
00:01:32.520 --> 00:01:34.720
And we will export that as our default.

24
00:01:39.447 --> 00:01:42.530
Inside, we will,
as a first step, load our data.

25
00:01:42.530 --> 00:01:46.335
So let's get the data and that's gonna
be the result of useStaticQuery.

26
00:01:47.370 --> 00:01:52.040
And we use the graphqL tag to
signify that it is indeed a query.

27
00:01:53.180 --> 00:01:57.060
And I want to get all Doc's page nodes.

28
00:01:57.060 --> 00:02:00.730
And I want the ids so
that we can use it as a react key.

29
00:02:00.730 --> 00:02:04.500
I want the title so
that we can have some display text.

30
00:02:04.500 --> 00:02:07.340
And I want the path so that we know where
to send somebody if they click the link.

31
00:02:09.750 --> 00:02:14.350
Once we've got that data, it's going to
come in and be stored in this data prop.

32
00:02:14.350 --> 00:02:16.160
Gatsby will do this at
build time actually.

33
00:02:16.160 --> 00:02:17.860
So we don't need to await it or anything.

34
00:02:17.860 --> 00:02:22.670
It just, as far as the component is
concerned when it runs in the browser,

35
00:02:22.670 --> 00:02:23.779
that data will already exist.

36
00:02:25.570 --> 00:02:31.060
Then we can for convenience,
let's rename pages and

37
00:02:31.060 --> 00:02:40.300
we'll get data.allDocs.page.nodes,
then we can return a thing.

38
00:02:40.300 --> 00:02:43.600
So the thing that we want to return Is,
we'll

39
00:02:43.600 --> 00:02:48.440
give it a div in case we wanna style it or
add some borders or something around it.

40
00:02:48.440 --> 00:02:51.430
We're not gonna do that for now,
but we wanna leave that door open.

41
00:02:51.430 --> 00:02:53.960
Let's add a heading to it.

42
00:02:53.960 --> 00:02:56.230
So we'll say Explore the Docs.

43
00:02:56.230 --> 00:02:59.940
And then we'll just show these in a list.

44
00:02:59.940 --> 00:03:03.170
So let's map over our pages.

45
00:03:03.170 --> 00:03:06.780
And for each one, we're gonna
get out that id, path and title.

46
00:03:10.283 --> 00:03:15.740
And we can return,
an Li will set the key to the id.

47
00:03:17.710 --> 00:03:24.220
And then inside of that, we're gonna use a
link, and I want that to link to the path.

48
00:03:25.260 --> 00:03:27.550
And I wanna give it some styles.

49
00:03:27.550 --> 00:03:31.570
So the styles that I want are actually
gonna be when it's active.

50
00:03:31.570 --> 00:03:35.680
So what that means is when we're
reviewing the current page,

51
00:03:35.680 --> 00:03:40.070
I wanna show a slightly different style so
we know what page were on.

52
00:03:40.070 --> 00:03:41.073
So we'll do that in just a second.

53
00:03:41.073 --> 00:03:44.230
And then we wanna that
to link to the title.

54
00:03:44.230 --> 00:03:46.650
So this is what will be displayed.

55
00:03:46.650 --> 00:03:53.010
And then whenever this is the active class
Gatsby has this really handy helper that

56
00:03:53.010 --> 00:03:57.910
will let us just set whenever the current
link is the one that's being visited.

57
00:03:57.910 --> 00:03:58.536
It'll just set a class name for us.

58
00:03:58.536 --> 00:04:00.175
So I'm gonna set that to active.

59
00:04:01.625 --> 00:04:06.155
So now we're getting into some theme
UI stuff that's a little different.

60
00:04:06.155 --> 00:04:08.165
We're wanting conditional styles.

61
00:04:08.165 --> 00:04:11.925
We want this component to only
have a style when we're using

62
00:04:11.925 --> 00:04:14.115
a class on it when it
has that active class.

63
00:04:14.115 --> 00:04:19.770
So to do that, we can use a pretty
standard CSS and JS technique.

64
00:04:19.770 --> 00:04:24.160
Which is to use the ampersand which
references the current element.

65
00:04:24.160 --> 00:04:29.420
And then we modify it with the active
class by adding this .active here.

66
00:04:29.420 --> 00:04:32.440
Inside of that we can apply
whatever styles we want.

67
00:04:32.440 --> 00:04:36.480
So let's say we want our
font style to be italic.

68
00:04:36.480 --> 00:04:41.560
We'll say that we want the textDecoration
to be none because it's the current

69
00:04:41.560 --> 00:04:46.259
link we wanna deemphasize,it is a link but
not actually deactivated as a link.

70
00:04:46.259 --> 00:04:48.280
And then I wanna go one step further and

71
00:04:48.280 --> 00:04:51.500
I actually wanna tell people that this
is the page that they're viewing.

72
00:04:51.500 --> 00:04:54.820
So I'm gonna use the after
pseudo class and

73
00:04:54.820 --> 00:05:00.460
again we just added as a string,and
then add a sub Object here.

74
00:05:00.460 --> 00:05:02.080
And I'm gonna set the content.

75
00:05:02.080 --> 00:05:06.438
And this is worth noting the content in

76
00:05:06.438 --> 00:05:11.730
CSS and JS ends up looking like
it's double quoted because

77
00:05:11.730 --> 00:05:17.100
you have to code it once to make
it a property for JavaScript.

78
00:05:17.100 --> 00:05:19.320
And then you have to quote it for CSS,

79
00:05:19.320 --> 00:05:22.300
which means that we've got
single quotes for JavaScript.

80
00:05:22.300 --> 00:05:24.830
And then we've got double quotes for CSS.

81
00:05:24.830 --> 00:05:27.300
So I'm gonna set this as
the currently viewing.

82
00:05:29.240 --> 00:05:32.450
And so these ones are for JavaScript.

83
00:05:32.450 --> 00:05:34.600
These ones are for CSS.

84
00:05:34.600 --> 00:05:35.520
That's a gotcha.

85
00:05:35.520 --> 00:05:39.650
That definitely got me so
it's worth just kind of trying to

86
00:05:39.650 --> 00:05:42.720
pin that in your head for, when you
are trying to use this in the future.

87
00:05:44.670 --> 00:05:48.250
So now that we've got this,
we should be able to just use it.

88
00:05:48.250 --> 00:05:54.080
So let's go into our doc's page and
I'm just going to toss it in.

89
00:05:54.080 --> 00:05:55.170
Let's see how it goes.

90
00:05:55.170 --> 00:06:02.397
So let's import TableofContents
from table-of-contents and

91
00:06:02.397 --> 00:06:06.478
we can drop that right at the bottom.

92
00:06:09.869 --> 00:06:14.238
Go to start the site first,
yarn workspace theme-dev develop.

93
00:06:23.906 --> 00:06:27.320
Reload and there we go,
we're currently viewing.

94
00:06:27.320 --> 00:06:30.940
So, let's add an extra page to make sure
that it's working the way we expect.

95
00:06:30.940 --> 00:06:35.650
So, we'll go into theme-dev under doc's
and I'm gonna create a new file, and

96
00:06:35.650 --> 00:06:38.695
we'll call it another.mdx.

97
00:06:40.360 --> 00:06:44.190
So, we'll give it a title,
let's call it Another Page.

98
00:06:46.340 --> 00:06:47.745
And we'll say More docs.

99
00:06:51.324 --> 00:06:52.380
And there we go.

100
00:06:52.380 --> 00:06:56.020
So now we can click
around to our pages and

101
00:06:56.020 --> 00:07:01.060
see that we've got other pages in there
they are showing up the way we expect.

102
00:07:01.060 --> 00:07:03.750
The theme is hot reloading,
you know we created that file.

103
00:07:03.750 --> 00:07:04.930
We didn't have to stop and restart it.

104
00:07:04.930 --> 00:07:06.215
Just pick the right up.

105
00:07:06.215 --> 00:07:10.000
And our Table of Contents is
doing what we want it to do.

106
00:07:10.000 --> 00:07:13.973
So there is a good place to save our work.

107
00:07:13.973 --> 00:07:19.830
So let's get at all,
take a look at what we've done.

108
00:07:21.120 --> 00:07:24.280
Okay, so we updated the docs page to
use our table of contents wrote that

109
00:07:24.280 --> 00:07:28.470
table of contents component and
created a new Doc's page.

110
00:07:28.470 --> 00:07:29.350
So we'll commit that.

111
00:07:30.830 --> 00:07:35.300
Say, add table of contents.

112
00:07:38.254 --> 00:07:39.230
Push that up.

113
00:07:40.270 --> 00:07:43.570
&gt;&gt; So, where are you exporting
the page queries do you need that

114
00:07:43.570 --> 00:07:46.040
export the static queries as well?

115
00:07:46.040 --> 00:07:46.670
&gt;&gt; No.

116
00:07:46.670 --> 00:07:48.580
So the page queries are a special case,

117
00:07:48.580 --> 00:07:53.210
where we are signifying to Gatsby
that during the build process

118
00:07:53.210 --> 00:07:58.030
specifically during on create pages,
this template is gonna be used.

119
00:07:58.030 --> 00:08:00.450
And this query should be
treated as a page query.

120
00:08:01.650 --> 00:08:05.959
That gives it access to the context which
is the, like the variables and stuff.

121
00:08:07.240 --> 00:08:10.900
In a static query, a static query is

122
00:08:10.900 --> 00:08:16.060
just any use of useStaticQuery inside
of a component will be picked up.

123
00:08:16.060 --> 00:08:20.260
But again, the limitation here is that we
can't use variables there's no access to

124
00:08:20.260 --> 00:08:21.650
outside context.

125
00:08:21.650 --> 00:08:25.380
We can't even interpolate data,
I couldn't take a prop and

126
00:08:25.380 --> 00:08:27.310
then put that prop in here.

127
00:08:27.310 --> 00:08:31.340
So a static query needs to
be hardcoded at build time.

128
00:08:31.340 --> 00:08:36.230
And the reason for that is that the way
that Gatsby's handling the graphQL layer

129
00:08:36.230 --> 00:08:40.640
under the hood, that graphQL layer doesn't
continue to work once the site is built.

130
00:08:40.640 --> 00:08:42.890
It's only there during the build.

131
00:08:42.890 --> 00:08:46.390
And that means that all of these queries
are actually getting compiled away.

132
00:08:46.390 --> 00:08:51.950
And that's being done using abstract
syntax tree transformations.

133
00:08:51.950 --> 00:08:53.790
It's kind of how Babel works under,

134
00:08:53.790 --> 00:08:57.530
the hood it takes the code and
it breaks it into its component pieces and

135
00:08:57.530 --> 00:09:01.070
tokens and then it kind of understands
those as a programming language.

136
00:09:01.070 --> 00:09:08.170
And then the AST gets modified so
Gatsby will take the the component.

137
00:09:08.170 --> 00:09:10.330
Look for these useStaticQuery instances,

138
00:09:10.330 --> 00:09:13.850
break that down into an AST replace
it with the results of the query and

139
00:09:13.850 --> 00:09:16.470
then rewrite that component
with the data in place.

140
00:09:16.470 --> 00:09:19.645
So that's why there are restrictions
on it because when you get into

141
00:09:19.645 --> 00:09:21.230
AST transformations,

142
00:09:21.230 --> 00:09:25.120
trying to chase down a variable to where
it's declared is really challenging.

143
00:09:25.120 --> 00:09:28.085
That is something that the team is
working on but it is not in place, yet.

144
00:09:28.085 --> 00:09:33.940
&gt;&gt; He wants to know if we can export only
one page query from one page file or

145
00:09:33.940 --> 00:09:36.200
you can export multiple queries.

146
00:09:36.200 --> 00:09:38.840
You can only export one
query per page file.

147
00:09:38.840 --> 00:09:43.350
But that actually isn't a problem
because you can just add,

148
00:09:43.350 --> 00:09:47.164
like as many queries as you
want next to each other.

149
00:09:47.164 --> 00:09:53.707
And it would just be
data.Doc.Page.data.doc.allfile.

150
00:09:53.707 --> 00:09:55.480
So, you can only do one query but

151
00:09:55.480 --> 00:09:58.590
that query can have as many
subqueries in it as you want.

