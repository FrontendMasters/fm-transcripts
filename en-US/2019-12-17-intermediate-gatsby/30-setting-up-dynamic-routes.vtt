WEBVTT

1
00:00:00.120 --> 00:00:04.234
&gt;&gt; Jason Lengstorf: The lookup site, we're
gonna just step outside of yarn workspaces

2
00:00:04.234 --> 00:00:06.850
entirely and just not stress about them.

3
00:00:06.850 --> 00:00:10.620
So the way that this is gonna
work is we're going to start

4
00:00:10.620 --> 00:00:14.148
by just getting into the site and
getting it running.

5
00:00:14.148 --> 00:00:20.230
So let's get this site moving and
if we look inside.

6
00:00:20.230 --> 00:00:22.280
There's really very little in here.

7
00:00:22.280 --> 00:00:25.440
We've got some scripts added, but
we don't even have our dependencies yet.

8
00:00:25.440 --> 00:00:28.465
So let's, move into it.

9
00:00:28.465 --> 00:00:34.802
We're gonna get into look up and then I'm
going to yarn add gatsby react react-dom.

10
00:00:38.585 --> 00:00:42.290
&gt;&gt; Jason Lengstorf: Okay, so we've got
gatsby react and react-dom in there.

11
00:00:42.290 --> 00:00:46.860
And now what I wanna do is
I wanna set up two pages.

12
00:00:46.860 --> 00:00:51.526
I want an index page and that's gonna give
us our, just kinda like our splash page,

13
00:00:51.526 --> 00:00:53.472
it will link over to a search page.

14
00:00:53.472 --> 00:00:55.810
And the search page is where
the app is actually gonna live.

15
00:00:56.890 --> 00:00:59.530
So let's go ahead and get those started.

16
00:00:59.530 --> 00:01:06.607
So we'll start with a source folder,
pages folder and index.js.

17
00:01:06.607 --> 00:01:10.623
So I'm gonna import react from react and
for this particular site,

18
00:01:10.623 --> 00:01:13.590
we're not gonna worry
about making it look nice.

19
00:01:13.590 --> 00:01:16.480
We're gonna skip the UI,
we're gonna skip styling in general and

20
00:01:16.480 --> 00:01:20.780
just put together the functionality cuz we
spent a lot of time on styling today and

21
00:01:20.780 --> 00:01:22.470
I don't want to re-hash the same ground.

22
00:01:23.800 --> 00:01:27.810
So let's import react from react,

23
00:01:27.810 --> 00:01:32.930
we're going to import link from gatsby.

24
00:01:34.060 --> 00:01:37.570
And then we're gonna
set up our index page.

25
00:01:37.570 --> 00:01:42.578
And so our index page is going
to be nice and straightforward.

26
00:01:42.578 --> 00:01:46.445
We will setup a fragment so
that we don't have any extra junky markup.

27
00:01:46.445 --> 00:01:52.370
We'll say this is gonna be the Rick and
Morty character look up.

28
00:01:52.370 --> 00:01:57.500
I always feel like a little bit
of an impostor when I make this.

29
00:01:57.500 --> 00:01:58.957
Whenever I work with this Rick and

30
00:01:58.957 --> 00:02:02.193
Morty API because I've actually only
ever seen two episodes of the show.

31
00:02:02.193 --> 00:02:06.590
But I love this API because
it's perfect for demos and

32
00:02:06.590 --> 00:02:09.920
showing off how different things work.

33
00:02:12.290 --> 00:02:18.064
Okay, so we're gonna say

34
00:02:18.064 --> 00:02:24.364
let's look up your favorite

35
00:02:24.364 --> 00:02:29.876
characters from Rick and

36
00:02:29.876 --> 00:02:35.124
Morty using the Rick and

37
00:02:35.124 --> 00:02:40.899
Morty.API.com Rick and

38
00:02:40.899 --> 00:02:43.534
Morty API.

39
00:02:43.534 --> 00:02:48.816
Okay and then down here we're just
gonna link to the search page which

40
00:02:48.816 --> 00:02:53.660
we'll need to create, okay and
I think that looks like a page.

41
00:02:53.660 --> 00:02:54.498
So let's export it.

42
00:03:00.484 --> 00:03:01.375
&gt;&gt; Jason Lengstorf: Okay, and

43
00:03:01.375 --> 00:03:04.590
then we'll create-
&gt;&gt; Speaker 2: Just a heads up,

44
00:03:04.590 --> 00:03:06.700
you're missing a single quote on line two.

45
00:03:09.940 --> 00:03:11.840
&gt;&gt; Jason Lengstorf: Good catch.

46
00:03:11.840 --> 00:03:14.293
Thank you very much.

47
00:03:14.293 --> 00:03:16.660
There it goes now it's auto formatting.

48
00:03:16.660 --> 00:03:18.060
Cool, thank you.

49
00:03:18.060 --> 00:03:23.294
So we've got our index and
then in our search I'm actually just

50
00:03:23.294 --> 00:03:28.157
gonna take a lot of this and
drop it right in and we'll say.

51
00:03:28.157 --> 00:03:32.139
Search for Rick &amp; Morty characters and

52
00:03:32.139 --> 00:03:37.450
then we can say give it some
fun marketing copy trying

53
00:03:37.450 --> 00:03:42.530
to remember which,
Rick you're talking about?

54
00:03:44.490 --> 00:03:50.800
Try out this handy search interface, okay.

55
00:03:50.800 --> 00:03:55.447
So in here, we're gonna be able to set up

56
00:03:55.447 --> 00:04:00.370
an actual search interface but right now,

57
00:04:00.370 --> 00:04:06.111
we don't have one so
we need to add a search form and

58
00:04:06.111 --> 00:04:09.847
we need to add results, right?

59
00:04:09.847 --> 00:04:15.630
So here, let's make it so

60
00:04:15.630 --> 00:04:19.590
that look, we know that we want our
search results to live on the page.

61
00:04:19.590 --> 00:04:21.220
So let's go ahead and move this up.

62
00:04:21.220 --> 00:04:23.760
And I'm just going to use yarn develop.

63
00:04:23.760 --> 00:04:26.670
Because again, we're not using themes so
we don't need to use workspaces anymore.

64
00:04:26.670 --> 00:04:30.760
We can just jump right in and
use a new standard development.

65
00:04:30.760 --> 00:04:36.290
So here is our highly styled Rick &amp; Morty
API lookup, let me zoom in a little bit.

66
00:04:36.290 --> 00:04:40.720
And when I click over my search page,
we are able to see our search page.

67
00:04:40.720 --> 00:04:44.508
And so what we have to do yet,
is we have to add in our search form, and

68
00:04:44.508 --> 00:04:46.110
we have to results.

69
00:04:46.110 --> 00:04:50.752
But with the results, the way that we want
this to work is when somebody searches,

70
00:04:50.752 --> 00:04:54.745
we wanted to show up where they're
going to search, let's say Rick.

71
00:04:54.745 --> 00:04:59.433
And that should redirect to the search
page and show us results, and that way,

72
00:04:59.433 --> 00:05:02.416
if I take this, copy it,
and send it to somebody,

73
00:05:02.416 --> 00:05:04.920
they should be able to see those results.

74
00:05:04.920 --> 00:05:08.560
One of the major problems that you
run into a search is when you have

75
00:05:08.560 --> 00:05:12.940
a search field, I type into it It
shows me the results page, but

76
00:05:12.940 --> 00:05:14.780
the URL still just says search.

77
00:05:14.780 --> 00:05:17.200
So I have no way of sharing
those results with somebody.

78
00:05:17.200 --> 00:05:20.890
So if I'm looking for, like, if I'm on
an e-commerce site and I search for

79
00:05:20.890 --> 00:05:24.550
a product and I go,
this is what I want for my birthday, and

80
00:05:24.550 --> 00:05:28.049
I want to share this link, hey,
you can give me any one of these.

81
00:05:29.210 --> 00:05:30.140
I can't share that, right?

82
00:05:30.140 --> 00:05:32.720
So I can't get my birthday present,
and everybody's sad.

83
00:05:32.720 --> 00:05:36.660
So we wanna make our
search results linkable.

84
00:05:36.660 --> 00:05:41.540
And to do that, you will take advantage
of client-side routing in Gatsby.

85
00:05:42.700 --> 00:05:45.510
Which fortunately,
there's an API for that.

86
00:05:45.510 --> 00:05:53.330
So in our root,
we're going to create a Gatsby node.js.

87
00:05:53.330 --> 00:05:58.729
And in our Gatsby node,
we are going to look for

88
00:05:58.729 --> 00:06:01.507
the onCreatePage API.

89
00:06:01.507 --> 00:06:05.278
And so onCreatePage fires whenever
a new page gets created and

90
00:06:05.278 --> 00:06:07.820
it allows us to modify it if we need to.

91
00:06:07.820 --> 00:06:09.720
There are a bunch of
things that you can tweak.

92
00:06:09.720 --> 00:06:15.140
Specifically, what we're going to do
today is look for a specific path.

93
00:06:15.140 --> 00:06:17.020
And if we find it,

94
00:06:17.020 --> 00:06:21.780
we're going to set it as a dynamic
like a client side only route.

95
00:06:21.780 --> 00:06:23.540
So let's set up if,

96
00:06:23.540 --> 00:06:29.010
the page path matches and then we're
gonna use our regular expression.

97
00:06:29.010 --> 00:06:30.900
Everybody's favorite way to
get themselves in trouble.

98
00:06:32.030 --> 00:06:38.090
So if it starts with /search,
we know that we're on the search page.

99
00:06:38.090 --> 00:06:43.460
So if that comes back through,
we know that we are where we wanna be.

100
00:06:43.460 --> 00:06:48.550
So then,
we're gonna sat page.matchPath and

101
00:06:48.550 --> 00:06:51.770
we are just gonna set it
to search with the blog.

102
00:06:51.770 --> 00:06:55.995
So anything that gets past this particular

103
00:06:55.995 --> 00:07:02.030
URL/search will kinda get treated
as if it's all the same page.

104
00:07:02.030 --> 00:07:04.430
It will all get redirected to search.

105
00:07:06.320 --> 00:07:11.550
Then, we just call createPage
with the tweak page.

106
00:07:11.550 --> 00:07:15.530
So this just overrides the defaults
that were with the original createPage.

107
00:07:17.810 --> 00:07:20.840
So, this is only half of the story though
because we've told Gatsby to do it which

108
00:07:20.840 --> 00:07:27.230
means that Gatsby will respect it But
if we refresh the page, if we get linked

109
00:07:27.230 --> 00:07:32.230
from somewhere else, we would never get
to the gatsby for that to get rendered.

110
00:07:32.230 --> 00:07:37.530
So the next thing that we have to is
we have to set up a redirect and as

111
00:07:37.530 --> 00:07:43.320
a shortcut, nullify has a really handy CLI
that will let you do a bunch of things.

112
00:07:43.320 --> 00:07:46.170
But most specifically,
it'll let you manage redirects locally.

113
00:07:46.170 --> 00:07:48.450
So I'm gonna go ahead and set that up.

114
00:07:48.450 --> 00:07:54.890
So we can install it with
yarn global add netlify-cli.

115
00:07:54.890 --> 00:08:01.108
And then in my route,
I'm gonna create a file called.

116
00:08:01.108 --> 00:08:06.788
I'm gonna create a file
called netlified.tamo

117
00:08:06.788 --> 00:08:12.191
Tamo is like animals
more confusing sibling,

118
00:08:12.191 --> 00:08:18.990
and it's super fun to work with,
but this is how we use it.

119
00:08:20.040 --> 00:08:21.850
So [LAUGH] you set up redirects,

120
00:08:21.850 --> 00:08:26.170
it's a double array because I guess
that means that it's Like a key but

121
00:08:26.170 --> 00:08:31.590
there can be multiple instances
of that key, so, double array.

122
00:08:31.590 --> 00:08:38.520
And then we setup from and
it can go from any search.

123
00:08:38.520 --> 00:08:39.890
So any instance of search,

124
00:08:39.890 --> 00:08:45.260
it can be /search and
then any trailing amount of characters.

125
00:08:45.260 --> 00:08:49.470
And then we're gonna
redirect that to search.

126
00:08:49.470 --> 00:08:51.340
And we're going to send
a status code of 200,

127
00:08:51.340 --> 00:08:55.030
which makes it a rewrite
instead of a redirect.

128
00:08:55.030 --> 00:08:58.390
If it was a redirect,
it would pollute the history and

129
00:08:58.390 --> 00:09:01.030
there's all sorts of trouble
that we don't want to get into.

130
00:09:01.030 --> 00:09:03.630
So we're just gonna have netlify lie.

131
00:09:03.630 --> 00:09:08.350
And say that that redirect never
happened and you just got the page.

132
00:09:08.350 --> 00:09:13.380
So that means that we
should be able now to type

133
00:09:13.380 --> 00:09:17.850
anything after slash search and it should
bring us to that search results page.

134
00:09:17.850 --> 00:09:20.230
To test it, I'm gonna use
something called netlify dev.

135
00:09:20.230 --> 00:09:23.250
So now that we've
installed that netlify CLI,

136
00:09:23.250 --> 00:09:28.520
we have the ability to run netlify dev
which will detect our Gatsby config.

137
00:09:28.520 --> 00:09:32.310
And then it starts up on
port 8888 instead of 8000,

138
00:09:32.310 --> 00:09:36.630
which is the standard USB port, and
it will make our redirects work, okay.

139
00:09:36.630 --> 00:09:41.200
So the way that netlify dev works is it
auto detects Gatsby based on the presence

140
00:09:41.200 --> 00:09:42.210
of files.

141
00:09:42.210 --> 00:09:45.510
And so to trick it into
recognizing this as a Gatsby site,

142
00:09:45.510 --> 00:09:48.160
we're going to set up a Gatsby JS.config.

143
00:09:48.160 --> 00:09:53.140
And then we can run netlify dev,
and it will run gatsby develop.

144
00:09:53.140 --> 00:09:55.100
So the gatsby config doesn't
need to have anything in it,

145
00:09:55.100 --> 00:10:00.420
it just needs to exist for netlify dev
to recognize that it's a gatsby site.

146
00:10:00.420 --> 00:10:04.230
Now in any real site, you're gonna
have some kind of gatsby config.

147
00:10:04.230 --> 00:10:06.840
You'll have site metadata for the SEO.

148
00:10:06.840 --> 00:10:08.220
You'll have things like that.

149
00:10:08.220 --> 00:10:10.710
So that's not an unreasonable
thing to expect to exist.

150
00:10:12.410 --> 00:10:15.960
So now,
we can already see that our search,

151
00:10:17.070 --> 00:10:21.080
I can put anything in here, and it's still
gonna take us back to that search page.

152
00:10:21.080 --> 00:10:25.890
And if I come back and just go to straight
search, it still shows us the search page.

153
00:10:25.890 --> 00:10:33.190
So at this point, what we've got is a
functioning client side app that will take

154
00:10:33.190 --> 00:10:38.040
whatever we throw at that search page, and
always bring us to that search component.

155
00:10:38.040 --> 00:10:41.640
And that sets us up to actually
do the the lookup part.

156
00:10:41.640 --> 00:10:47.691
So let's save our work and

157
00:10:47.691 --> 00:10:55.951
then we'll add to that next piece.

