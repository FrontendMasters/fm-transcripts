WEBVTT

1
00:00:00.290 --> 00:00:02.088
&gt;&gt; Jason Lengstorf: Once
we've got our site set up,

2
00:00:02.088 --> 00:00:04.027
the first thing that we need to do.

3
00:00:04.027 --> 00:00:11.431
Is get our theme set up and running
with what's called a Pre-Bootstrap.

4
00:00:11.431 --> 00:00:15.169
So we wanna make sure that any
folders that we're gonna use, exist,

5
00:00:15.169 --> 00:00:17.370
because otherwise we'll get an error.

6
00:00:17.370 --> 00:00:19.368
So if we're setting up a theme,

7
00:00:19.368 --> 00:00:22.779
typically speaking that theme
is gonna look for Data.

8
00:00:22.779 --> 00:00:26.091
And for example, the way our Docs theme is
gonna work, is it's gonna be looking for

9
00:00:26.091 --> 00:00:27.191
a folder full of MDX files.

10
00:00:27.191 --> 00:00:30.769
So if you install this theme into
a site and you don't know that and

11
00:00:30.769 --> 00:00:33.060
you don't manually create that folder.

12
00:00:33.060 --> 00:00:38.946
By default we would get an error that
says, couldn't find directory, whatever.

13
00:00:38.946 --> 00:00:41.058
So we're just gonna go ahead and
check for that,

14
00:00:41.058 --> 00:00:43.230
make sure the directory
exists before we boot up.

15
00:00:43.230 --> 00:00:47.350
To avoid any of those confusing errors and
just save that work for

16
00:00:47.350 --> 00:00:49.190
the people using the theme.

17
00:00:49.190 --> 00:00:51.247
To do that we're going
to go into our theme and

18
00:00:51.247 --> 00:00:53.534
we're gonna create a file
called gatsby-node.

19
00:00:53.534 --> 00:00:57.684
This gives us access to the Gatsby
lifecycle methods during the build,

20
00:00:57.684 --> 00:01:00.048
we can do a whole bunch of fun stuff here.

21
00:01:00.048 --> 00:01:06.906
And what we need to do here is,
we're going to use a library or

22
00:01:06.906 --> 00:01:11.354
a node-hook called onPreBootstrap.

23
00:01:11.354 --> 00:01:13.800
And this lets us get into the Gatsby API.

24
00:01:15.100 --> 00:01:19.910
And inside of it,
we are going to use the Gatsby store,

25
00:01:19.910 --> 00:01:22.410
which is just some information
about the running program.

26
00:01:22.410 --> 00:01:23.920
And then we're gonna
use the theme options,

27
00:01:23.920 --> 00:01:28.760
which come in as the second
argument to most API hooks.

28
00:01:28.760 --> 00:01:36.708
Inside of this, we're gonna get
the program out of the store's State.

29
00:01:36.708 --> 00:01:39.492
Now this is kind of like
a deep Gatsby internal.

30
00:01:39.492 --> 00:01:41.990
It's basically saying,
go into Gatsby store and

31
00:01:41.990 --> 00:01:44.340
figure out where Gatsby believes it is.

32
00:01:44.340 --> 00:01:52.320
Which you could also get with the or
the current directory.

33
00:01:52.320 --> 00:01:54.495
But doing it this way just helps control,

34
00:01:54.495 --> 00:01:58.422
so that the Gatsby environment will be
consistent no matter where you are.

35
00:01:58.422 --> 00:02:01.771
Then we need to get some defaults, so

36
00:02:01.771 --> 00:02:06.540
we need to make sure that
the options are always set.

37
00:02:06.540 --> 00:02:09.942
So if this is empty, we don't want
that to come back as an empty object,

38
00:02:09.942 --> 00:02:11.316
because we'll get errors.

39
00:02:11.316 --> 00:02:15.103
So we need to get options with defaults.

40
00:02:15.103 --> 00:02:19.513
And then after we've got
the options with defaults,

41
00:02:19.513 --> 00:02:22.754
we need to figure out the content path.

42
00:02:22.754 --> 00:02:28.170
And then once we know that,
we need to check if directory

43
00:02:28.170 --> 00:02:33.380
doesn't exist
&gt;&gt; Jason Lengstorf: We need to create it.

44
00:02:33.380 --> 00:02:35.020
So the first thing we need to do,

45
00:02:35.020 --> 00:02:38.030
is write a little utility
function to get these defaults.

46
00:02:38.030 --> 00:02:42.428
So there's not really a hard-and-fast
rule on how to do this, but

47
00:02:42.428 --> 00:02:44.985
I'm just gonna create a utils folder.

48
00:02:44.985 --> 00:02:48.209
And inside of it,
I'm gonna create default-options.js,

49
00:02:48.209 --> 00:02:50.132
using my favorite little shortcut.

50
00:02:50.132 --> 00:02:53.312
Which is that if you just type out
a file path with a slash in it,

51
00:02:53.312 --> 00:02:55.159
it'll create that folder for you.

52
00:02:55.159 --> 00:03:00.558
And inside of this,
I'm going to export a function.

53
00:03:00.558 --> 00:03:03.565
And we're gonna set up our options here,
so

54
00:03:03.565 --> 00:03:06.827
our basePath is gonna
default to just the root.

55
00:03:06.827 --> 00:03:10.891
The path is what the URL will be,
so when we create pages,

56
00:03:10.891 --> 00:03:15.223
we're gonna create these at
the root of the site by default.

57
00:03:15.223 --> 00:03:18.390
And we'll allow people to override that
if they want it to live somewhere else.

58
00:03:19.590 --> 00:03:22.344
Then we're gonna set up the contentPath.

59
00:03:22.344 --> 00:03:25.055
So by default, we're gonna look for

60
00:03:25.055 --> 00:03:31.012
a folder at the root of the site called
docs, and the content would live in there.

61
00:03:31.012 --> 00:03:33.290
And again, we'll let people override that.

62
00:03:33.290 --> 00:03:36.943
And then because of a quirk
with the way that MDX works,

63
00:03:36.943 --> 00:03:40.924
we need to know whether or
not the site is already using MDX.

64
00:03:40.924 --> 00:03:43.970
Because we can only have one
instance of it running at a time.

65
00:03:43.970 --> 00:03:49.555
So I'm going to useExternalMDX and
by default

66
00:03:49.555 --> 00:03:54.300
we'll assume that the site is not using
MDX, and we will install it ourselves.

67
00:03:55.800 --> 00:04:00.050
And then, because we're just
feeding in an options object and

68
00:04:00.050 --> 00:04:03.390
setting the defaults in
this destructuring here.

69
00:04:03.390 --> 00:04:04.650
I can just return these straight up.

70
00:04:04.650 --> 00:04:08.968
So we'll do basePath, contentPath and

71
00:04:08.968 --> 00:04:15.198
useExternalMDX and
that's our withDefaults function.

72
00:04:15.198 --> 00:04:16.936
&gt;&gt; Speaker 2: Should
that be module singular?

73
00:04:19.374 --> 00:04:20.467
&gt;&gt; Jason Lengstorf: Sure should,

74
00:04:20.467 --> 00:04:24.571
good catch,
that would have been fun to debug [LAUGH].

75
00:04:24.571 --> 00:04:27.887
So yeah, module.exports,
not modules.exports.

76
00:04:33.320 --> 00:04:37.160
&gt;&gt; Jason Lengstorf: So with this created,
we can go into our File and

77
00:04:37.160 --> 00:04:39.374
we'll just include that.

78
00:04:39.374 --> 00:04:42.851
So withDefaults, we'll call it that,

79
00:04:42.851 --> 00:04:47.800
and we'll just require our
utils/default-options.

80
00:04:47.800 --> 00:04:52.750
And so I can replace this TODO
with just the pieces we need,

81
00:04:52.750 --> 00:04:55.260
so we're gonna use
the contentPath this time.

82
00:04:55.260 --> 00:04:59.780
And we'll say withDefaults(options).

83
00:04:59.780 --> 00:05:03.290
And so what we're doing is we're
taking the user supplied options,

84
00:05:03.290 --> 00:05:06.734
dropping it into withDefaults.

85
00:05:06.734 --> 00:05:10.303
And then just extracting the one
piece that we're gonna use.

86
00:05:10.303 --> 00:05:15.614
So then, once we have that,
we're going to figure out where we are,

87
00:05:15.614 --> 00:05:18.834
and then append the contentPath to that.

88
00:05:18.834 --> 00:05:22.505
So to figure out where we are,
we're going to use the path module.

89
00:05:22.505 --> 00:05:28.790
So will require('path') and
then we can set up our directory.

90
00:05:28.790 --> 00:05:34.615
And that is going to be path.join and
we'll use the program,

91
00:05:34.615 --> 00:05:40.450
so Gatsby's setup,
get the folder where Gatsby is running.

92
00:05:40.450 --> 00:05:44.750
And then we will append
the contentPath to that.

93
00:05:44.750 --> 00:05:48.930
So now we've created a directory that
is the location on the file system

94
00:05:48.930 --> 00:05:50.590
of where content should exist.

