WEBVTT

1
00:00:00.240 --> 00:00:03.500
&gt;&gt; Jason Lengstorf: Now
that we've got MDX loading,

2
00:00:03.500 --> 00:00:05.400
we are ready to actually start using it.

3
00:00:05.400 --> 00:00:08.060
So the first thing we wanna do

4
00:00:08.060 --> 00:00:12.070
is to make sure that the data types
we are using are predictable.

5
00:00:12.070 --> 00:00:18.668
Like we could go in and try to extend
mark down or do something like that.

6
00:00:18.668 --> 00:00:22.588
But honestly that gives us a bunch of
noise and what we really want is just to

7
00:00:22.588 --> 00:00:26.130
get the stuff that we need and
nothing else, without any nesting or

8
00:00:26.130 --> 00:00:30.468
needing to know what the terms are,
nothing's inside of a front matter column.

9
00:00:30.468 --> 00:00:34.190
I just wanna be able to get a page and
get the title and

10
00:00:34.190 --> 00:00:40.160
the body of it, and all that stuff and
just kind of be done.

11
00:00:40.160 --> 00:00:42.990
That makes it nice and predictable.

12
00:00:42.990 --> 00:00:45.820
The first thing we're gonna do is we're
gonna create a schema customization,

13
00:00:45.820 --> 00:00:51.770
which we're gonna do by hooking
into the schema customization.

14
00:00:51.770 --> 00:00:56.370
It's called create schema
customization API.

15
00:00:56.370 --> 00:01:00.469
And this one gives us some
actions that we can work with.

16
00:01:01.880 --> 00:01:09.260
So the only action that we actually
need here is the createTypes action.

17
00:01:09.260 --> 00:01:12.760
And what this means is that we can just
go into the GraphQL layer of Gatsby and

18
00:01:12.760 --> 00:01:14.360
tell it that something exists.

19
00:01:14.360 --> 00:01:18.960
This is really handy, because what it
means is I can say I want an abstract type

20
00:01:18.960 --> 00:01:23.410
that is of my definition,
that does only what I wanna do.

21
00:01:23.410 --> 00:01:24.980
It only has the data that I want in it.

22
00:01:24.980 --> 00:01:30.190
So I want my docs pages to
have a type called docs page.

23
00:01:30.190 --> 00:01:34.130
And in my docs page,
I wanna be able to query these.

24
00:01:34.130 --> 00:01:36.310
So I'm going to implement the node type,
and

25
00:01:36.310 --> 00:01:41.530
the node type is Gatsby's, like core type.

26
00:01:41.530 --> 00:01:45.760
Any data that exists will
become a node inside of Gatsby.

27
00:01:45.760 --> 00:01:49.190
By telling Gatsby that
the Docs Page is a node,

28
00:01:49.190 --> 00:01:51.180
that means that we get
a bunch of stuff for free.

29
00:01:51.180 --> 00:01:55.340
It’s gonna give us filtering and
querying on different field names and

30
00:01:55.340 --> 00:01:57.110
all sorts of good stuff.

31
00:01:57.110 --> 00:01:58.270
The other thing that we want is,

32
00:01:58.270 --> 00:02:01.490
we don’t want it to create any extra
fields that we don’t tell it to.

33
00:02:01.490 --> 00:02:03.750
I’m gonna tell it not to infer.

34
00:02:05.110 --> 00:02:10.030
Don't worry too much
about how all this stuff

35
00:02:10.030 --> 00:02:14.970
works under the hood like GraphQL is its
own rabbit hole and it can go pretty deep.

36
00:02:14.970 --> 00:02:18.940
Basically what we're telling Gatsby right
now is that we want this type to exist.

37
00:02:18.940 --> 00:02:22.130
We want to be able to query it like
every other Gatsby data type, and

38
00:02:22.130 --> 00:02:25.980
we don't want you to create any
fields unless we tell you they exist.

39
00:02:25.980 --> 00:02:30.480
So the first one we need is an ID, pretty
much every node is gonna need an ID.

40
00:02:32.430 --> 00:02:34.730
We use it for keys,
we use it for direct lookups.

41
00:02:34.730 --> 00:02:38.740
Then I want to create a title and
my title's gonna be a string.

42
00:02:38.740 --> 00:02:43.320
And so
the type in GraphQL is going to be ID or

43
00:02:43.320 --> 00:02:47.070
string, and then the exclamation
point marks it as being required.

44
00:02:47.070 --> 00:02:51.110
So we're saying that an ID is required,
a title is required.

45
00:02:51.110 --> 00:02:54.020
In this particular case,
everything is gonna be required.

46
00:02:54.020 --> 00:02:55.212
There are no optional values.

47
00:02:55.212 --> 00:02:58.480
I'm gonna set up the path
to be a string as well.

48
00:02:58.480 --> 00:03:01.030
And I want to know when
this page was updated,

49
00:03:01.030 --> 00:03:06.340
because a nice thing on docs is to know,
is this page like is it maintained or

50
00:03:06.340 --> 00:03:08.810
is this not been updated since 2015.

51
00:03:08.810 --> 00:03:12.600
So I'm gonna set this as date type and
it's required.

52
00:03:12.600 --> 00:03:14.350
And then Gatsby gives us some helpers for
this.

53
00:03:14.350 --> 00:03:18.916
So I'm gonna use the date
format helper here to signify

54
00:03:18.916 --> 00:03:24.077
the Gatsby that I wanna be able
to do things like format the date

55
00:03:24.077 --> 00:03:29.160
based on relative time or
using a date string of my choosing.

56
00:03:30.500 --> 00:03:34.770
And then finally, we want the body of the
page and that's also gonna be a string.

57
00:03:36.120 --> 00:03:41.820
So upon creating this, what this means
is that I can go and start up my site.

58
00:03:41.820 --> 00:03:45.560
And we'll do yarn workspace
theme-dev develop.

59
00:03:47.220 --> 00:03:50.517
And once this gets up and running,

60
00:03:50.517 --> 00:03:55.079
I can go back to my page,
&gt;&gt; Jason Lengstorf: And

61
00:03:55.079 --> 00:03:58.770
refresh, and now I have a query for
old docs page.

62
00:03:58.770 --> 00:04:04.060
And if I look in to the nodes,
I can see that we've got the ID.

63
00:04:04.060 --> 00:04:08.200
We've got the title,
path updated, and we can see

64
00:04:08.200 --> 00:04:12.730
the helpers here on how to format a date
that showed up and we get the body.

65
00:04:12.730 --> 00:04:17.390
And so if I run this,
it doesn't error out.

66
00:04:17.390 --> 00:04:19.400
Now we haven't given it any data.

67
00:04:19.400 --> 00:04:22.660
But Gatsby now knows that,
that type should exist.

68
00:04:22.660 --> 00:04:24.080
And so it's just giving us an empty set.

69
00:04:24.080 --> 00:04:27.860
This is really powerful because what it
means is in our themes, we can define

70
00:04:27.860 --> 00:04:32.100
an empty state like, you don't have
any docs here, go create them here.

71
00:04:32.100 --> 00:04:37.110
Rather than having to catch an error
when Gatsby says like, no docs found,

72
00:04:37.110 --> 00:04:38.640
type is not defined.

73
00:04:38.640 --> 00:04:43.850
So this is a really nice kind of layer
of polish you can add to anything you're

74
00:04:43.850 --> 00:04:46.750
building and Gatsby, and this does not
necessarily need to be for custom types.

75
00:04:46.750 --> 00:04:50.230
You can do this for the front matter on
your your mark down files or something.

