WEBVTT

1
00:00:00.240 --> 00:00:03.170
&gt;&gt; Jason Lengstorf: We're gonna use
Cloudinary for handling assets on our site

2
00:00:03.170 --> 00:00:09.630
and the reason for that is that
the typical path if you watch the other

3
00:00:09.630 --> 00:00:13.810
Gatsby workshop that I did on Frontend
Masters, we used a plugin called Sharp.

4
00:00:13.810 --> 00:00:18.250
And Sharp will handle everything locally,
it generates all the different assets as

5
00:00:18.250 --> 00:00:23.330
part of the build pipeline and
stores them in your local file system and

6
00:00:23.330 --> 00:00:25.950
there are a couple reasons that
we're not gonna do that this time.

7
00:00:25.950 --> 00:00:29.410
The first one is that Sharp
is really powerful, but

8
00:00:29.410 --> 00:00:34.010
it's also kind of finicky and
if your node version changes or

9
00:00:34.010 --> 00:00:38.100
if your yarn.lock, it's a little bit
out of sync between machines then sharp

10
00:00:38.100 --> 00:00:42.210
will fail with really cryptic errors and
it can be kind of hard to debug.

11
00:00:42.210 --> 00:00:45.010
Especially if you're on a team where lots
of people are gonna be touching it and

12
00:00:45.010 --> 00:00:49.340
they're not necessarily using
exactly the same machine setup.

13
00:00:49.340 --> 00:00:52.940
So we wanna avoid that hassle,
we wanna avoid that confusion.

14
00:00:52.940 --> 00:00:57.450
Another issue that will run into
is that Nullify just introduced

15
00:00:57.450 --> 00:01:02.400
restrictions on the amount of time that
you get for free for build minutes.

16
00:01:02.400 --> 00:01:05.570
So every time that you run a build
on that Nullify, it's going to take

17
00:01:05.570 --> 00:01:10.560
a set amount of time and they track those
bills minutes against your monthly total.

18
00:01:10.560 --> 00:01:14.230
If you exceed that monthly total then you
know they don't take your site down or

19
00:01:14.230 --> 00:01:16.610
anything but you do have to start
paying for building minutes.

20
00:01:16.610 --> 00:01:21.640
And what that means for us is that
anything that we can take out of

21
00:01:21.640 --> 00:01:26.730
that build pipeline without degrading
our sites gives us an advantage

22
00:01:26.730 --> 00:01:32.150
to keep stuff that we're building free,
right?

23
00:01:32.150 --> 00:01:35.800
And for personal projects we don't wanna
have to be shelling out a bunch of cash

24
00:01:35.800 --> 00:01:41.780
for that so Cloudinary has an extremely
generous free tier and when

25
00:01:41.780 --> 00:01:45.310
we use Cloudinary as our asset management
pipeline, we get to do two things.

26
00:01:45.310 --> 00:01:49.050
First, we dropped Sharp out
of the processing pipeline,

27
00:01:49.050 --> 00:01:52.460
which means that we eliminate some cryptic
errors and potential confusion for us and

28
00:01:52.460 --> 00:01:57.940
our team and we eliminate extra
work done during the build process.

29
00:01:57.940 --> 00:02:01.060
Which will speed up our builds and cut
down on the number of build minutes that

30
00:02:01.060 --> 00:02:04.010
we're using through something
like Nullify, which will help us

31
00:02:04.010 --> 00:02:08.170
stay in our free tier and keep things
affordable for us on our projects.

32
00:02:08.170 --> 00:02:09.820
Let's add support for images so,

33
00:02:09.820 --> 00:02:14.230
one of the best things about this drink
is this gorgeous red color, right?

34
00:02:14.230 --> 00:02:18.860
And it comes with an orange peel and It's
a very aesthetically pleasing drink so

35
00:02:18.860 --> 00:02:21.630
we really aren't getting the full effect
on this website when we're just looking at

36
00:02:21.630 --> 00:02:23.880
text, we wanna be able
to look at these images.

37
00:02:23.880 --> 00:02:31.280
So let's get these going and the images
that we have are here, we can see

38
00:02:32.680 --> 00:02:38.480
got these nice looking images and
so let's get these into the site.

39
00:02:38.480 --> 00:02:44.520
To do that, because we don't want to
really elongate the length of our build,

40
00:02:44.520 --> 00:02:47.690
we're gonna use Cloudinary to
handle asset management for us.

41
00:02:47.690 --> 00:02:54.030
So there is a transformer plugin for
Cloudinary that we're going to use and

42
00:02:54.030 --> 00:02:59.553
we will use that by
installing the let's say

43
00:02:59.553 --> 00:03:04.680
yarn workspace.negronis add,

44
00:03:04.680 --> 00:03:10.129
we're gonna add
gatsby-transformer-cloudinary.

45
00:03:10.129 --> 00:03:18.570
And in order to get to the images, we need
to use gatsby-source-filesystem and then,

46
00:03:18.570 --> 00:03:23.190
because we wanna be able to display those
images, we're gonna import Gatsby image

47
00:03:23.190 --> 00:03:28.880
which is a helper component for
a reactor tat will do a lot of

48
00:03:28.880 --> 00:03:34.270
lazy loading and it waits until the image
is in the view port to start loading and

49
00:03:34.270 --> 00:03:39.380
all those nice things to make sure
that we get a very fast performance

50
00:03:39.380 --> 00:03:44.794
with our images without us having
to do a bunch of manual work.

51
00:03:44.794 --> 00:03:47.350
So we'll get those installed and
while we're waiting for

52
00:03:47.350 --> 00:03:52.937
those to install we can jump
into our Gatsby config and

53
00:03:52.937 --> 00:03:58.068
I will configure this, we're going to

54
00:03:58.068 --> 00:04:06.480
first install gatsby-source-filesystem and

55
00:04:06.480 --> 00:04:11.140
for the options,
we're gonna get given a name images.

56
00:04:11.140 --> 00:04:14.110
Again, because this is the site and
not the theme, we can be a little more

57
00:04:16.820 --> 00:04:20.600
like it's our site, we don't have to worry
about incompatibility downstream and

58
00:04:20.600 --> 00:04:25.560
then, the path that we wanna
use is source images and

59
00:04:25.560 --> 00:04:28.248
thatâ€™ll give us these images here.

60
00:04:28.248 --> 00:04:35.680
So the next thing that we wanna do is,
we want to use the transformer for

61
00:04:35.680 --> 00:04:39.700
cloudinary and for the options,

62
00:04:39.700 --> 00:04:44.858
itâ€™s going to need out cloudname,
our API key,

63
00:04:44.858 --> 00:04:50.780
an API secret and
where we wanna store things.

64
00:04:50.780 --> 00:04:54.050
So we just choose an upload folder and

65
00:04:54.050 --> 00:04:58.540
I'll just set this to like
frontendmasters workshop.

66
00:04:58.540 --> 00:05:02.370
To get the rest of these, we need to go to
Cloudinary so I'm just gonna jump over to

67
00:05:02.370 --> 00:05:06.790
the cloudinary.com site and
I'm going to log in.

68
00:05:06.790 --> 00:05:09.870
Cloudinary has a really
generous free tier so

69
00:05:09.870 --> 00:05:14.360
it's a really good tool for kinda getting
started with image asset management,

70
00:05:14.360 --> 00:05:17.309
you're gonna be able to go quite
a ways before you hit their caps.

71
00:05:18.930 --> 00:05:21.478
Once you are in your dashboard,
once you're signed up, you'll be at

72
00:05:21.478 --> 00:05:26.150
cloudinary.com/console, I'm gonna go up to
this, the settings cog at the top right.

73
00:05:27.750 --> 00:05:33.850
And then I'm going to go to the Security
tab and scroll all the way to the bottom

74
00:05:33.850 --> 00:05:38.680
and there's a link under Access
keys to generate a new pair.

75
00:05:38.680 --> 00:05:43.930
I've created a couple of these already in
order to avoid showing API tokens that I

76
00:05:43.930 --> 00:05:48.030
would then have to go and validate, I have
a disabled key that I can show instead.

77
00:05:48.030 --> 00:05:54.000
So the API key that we're gonna pull is
this one here and then you get to play

78
00:05:54.000 --> 00:06:00.240
this fun game with Cloudinary API where
you click on this and it becomes visible.

79
00:06:00.240 --> 00:06:06.670
Now this is a disable key so this won't
work but to select it you have to

80
00:06:06.670 --> 00:06:11.860
move off and then kind of drag
over here and then copy it and

81
00:06:11.860 --> 00:06:16.580
then when you go into your actual
files it's gonna have a bunch of

82
00:06:16.580 --> 00:06:21.640
junk on it so just make sure that
you actually only select that text.

83
00:06:21.640 --> 00:06:26.140
That's a very fun UI quirk where because
if you try to actually select it it

84
00:06:26.140 --> 00:06:27.308
will go invisible again.

85
00:06:27.308 --> 00:06:28.423
[LAUGH].

86
00:06:28.423 --> 00:06:31.860
So it's not very fun but anyways,

87
00:06:31.860 --> 00:06:36.200
so you're then going to put
it into a .end.development so

88
00:06:36.200 --> 00:06:39.680
I've got a live API key in there so I'm
not gonna show that but I will show this

89
00:06:39.680 --> 00:06:44.930
example file which is exactly the same
except I've replaced these here.

90
00:06:44.930 --> 00:06:50.790
So the cloud name is gonna match
your cloundinary.com Cloudbucket,

91
00:06:50.790 --> 00:06:58.370
which you can find up here so mine is
jlengstorf so I put in jlengstorf here.

92
00:06:58.370 --> 00:07:02.430
Then for the API key,
that's the one that's always visible and

93
00:07:02.430 --> 00:07:07.650
then the API secret is this one here so
those are the values that you have to set.

94
00:07:07.650 --> 00:07:12.150
Once you've set those values we then need
to pull those in to Gatsby's environment,

95
00:07:13.280 --> 00:07:18.100
Gadsby ships with dotenv already
installed so we can just use it.

96
00:07:18.100 --> 00:07:23.322
So I'm gonna go into the Gatsby config and
up at the top,

97
00:07:23.322 --> 00:07:29.436
I'm going to require dotenv and
then we call the config method and

98
00:07:29.436 --> 00:07:33.661
to follow Gatsby's pattern we're gonna use

99
00:07:33.661 --> 00:07:40.030
dotenv.development instead of
like just a plain .env file.

100
00:07:40.030 --> 00:07:49.270
And to make sure the .env pick set up,
we do .env.process.env.NODE_ENV,

101
00:07:49.270 --> 00:07:53.030
in that way what will happen is
when we're in development mode,

102
00:07:53.030 --> 00:07:56.180
it will pick up this
.env.development file.

103
00:07:57.270 --> 00:08:02.610
And when you're in production mode,
you will have to add the same keys

104
00:08:02.610 --> 00:08:06.690
that are in this .Example, you'll just add
this to whatever your deploy pipeline is.

105
00:08:06.690 --> 00:08:10.130
So if you're using Nullify, you'll only
did declare environment variables to add

106
00:08:10.130 --> 00:08:14.520
them there Travis Jenkins,
whatever you're using, you would just

107
00:08:14.520 --> 00:08:17.080
set those environment variables up so
they're available during the build.

108
00:08:19.760 --> 00:08:26.390
Once we have these,
we can use them, let's see.

109
00:08:26.390 --> 00:08:34.069
Cloud name so Then we can get the API key.

110
00:08:34.069 --> 00:08:37.382
Process.env API_Key.

111
00:08:37.382 --> 00:08:41.897
And then one more for API_SECRET.

112
00:08:41.897 --> 00:08:42.800
Okay.

113
00:08:42.800 --> 00:08:51.840
Which those configured we are able
to actually get files uploaded.

114
00:08:51.840 --> 00:08:56.697
To Cloudinary and we'll be able
to see the result of that in our

115
00:08:56.697 --> 00:09:01.640
GraphQL there.

116
00:09:01.640 --> 00:09:07.524
So let's start this up,
yarn workspace negronis develop.

117
00:09:21.136 --> 00:09:24.317
&gt;&gt; Jason Lengstorf: Okay, and so the way
that that transformer works is that during

118
00:09:24.317 --> 00:09:28.320
the build it will just upload images
from the file system to Cloudinary.

119
00:09:28.320 --> 00:09:32.370
And then it gets back in asset name,
and then based on that asset name,

120
00:09:32.370 --> 00:09:36.820
Cloudinary URLs are, you configure
everything in the URL itself so

121
00:09:36.820 --> 00:09:40.530
we're able to say give it to me with 200,
with 400, with 600,

122
00:09:40.530 --> 00:09:45.700
and that allows us to set up
responsive images with sore sets.

123
00:09:48.080 --> 00:09:49.900
It's probably just easier if
I just show you how it works.

124
00:09:49.900 --> 00:09:55.510
So let's look at the GraphiQL layer and
we can clear this out,

125
00:09:55.510 --> 00:10:00.460
and so we can see now that
we've got all CloudinaryAsset.

126
00:10:00.460 --> 00:10:04.630
And if I go into the nodes, we can see
that we've got fixed and fluid, fixed

127
00:10:04.630 --> 00:10:10.540
width is a Gatsby image Convention for
setting images that never change in width.

128
00:10:10.540 --> 00:10:12.880
So if you have an avatar, for example,

129
00:10:12.880 --> 00:10:17.270
that's always going to be 40 pixels wide,
you would use fixed at 40 pixels wide and

130
00:10:17.270 --> 00:10:21.070
that way the image comes out,
optimized for that width.

131
00:10:21.070 --> 00:10:25.130
If you use fluid, fluid is for images that
will scale depending on the viewport.

132
00:10:25.130 --> 00:10:29.250
So if you're doing like a banner image,
you wanna use fluid because as

133
00:10:29.250 --> 00:10:33.400
the viewport gets wider or narrower,
you only wanna be showing an image that's

134
00:10:33.400 --> 00:10:35.740
big enough for
the current size of the viewport.

135
00:10:35.740 --> 00:10:39.680
You don't wanna have like a 1,600
pixel image squish down to

136
00:10:39.680 --> 00:10:43.720
a 300 pixel viewport on a feature phone,
it's a lot of wasted bandwidth.

137
00:10:44.850 --> 00:10:48.290
So, if we get into these nodes,
let's get into fluid and

138
00:10:48.290 --> 00:10:50.000
let's just take a look at the source.

139
00:10:51.480 --> 00:10:57.590
So, from the image that we uploaded, we
can see here that we've got a whole array

140
00:10:57.590 --> 00:11:03.740
of image asset pass back and
they come in at 200 pixels wide,

141
00:11:03.740 --> 00:11:10.040
461, 646, and 650 because we've
set 650 as our max width.

142
00:11:12.160 --> 00:11:16.180
So, let's just take a look at
what one of these, it looks like.

143
00:11:18.800 --> 00:11:22.200
&gt;&gt; Jason Lengstorf: And this is kind of
where Cloundinary is really fascinating

144
00:11:22.200 --> 00:11:25.670
because you can just control
all of these different things.

145
00:11:25.670 --> 00:11:30.236
So if I set this to 800,
the image will come back much bigger,

146
00:11:30.236 --> 00:11:33.365
if I set it to Like
a different aspect ratio so

147
00:11:33.365 --> 00:11:37.195
let's say I want it to be
an aspect ratio of 16 by 9.

148
00:11:40.863 --> 00:11:44.221
&gt;&gt; Jason Lengstorf: I put that in
the wrong place, let's move it over here,

149
00:11:44.221 --> 00:11:45.870
aspect ratio of 16 by 9.

150
00:11:45.870 --> 00:11:50.230
So we can just add any of these
transformations that we want, and

151
00:11:50.230 --> 00:11:54.100
it will kinda clean that stuff up for
us so

152
00:11:55.490 --> 00:11:59.660
we're able to go through and kinda add
the transformations as we see fit.

153
00:11:59.660 --> 00:12:01.640
And Cloudinary handles that for
us on the fly,

154
00:12:01.640 --> 00:12:06.960
we don't have to manage the, different
asset generation, it just does it for us.

155
00:12:06.960 --> 00:12:10.200
And this has a ton of really
advanced features that I'm not gonna

156
00:12:10.200 --> 00:12:13.550
get into today, I'd encourage you
to go explore the Cloudinary dots.

157
00:12:13.550 --> 00:12:17.900
You can do things like watermark your
images, you can mess with the colors,

158
00:12:17.900 --> 00:12:23.230
you can do SVG tracing, you can find
faces, you can blur out faces actually

159
00:12:23.230 --> 00:12:27.160
really, really powerful stuff,
it's a very cool API.

160
00:12:27.160 --> 00:12:28.260
But once we have this,

161
00:12:28.260 --> 00:12:33.090
once we're able to actually get this,
then we can start using it in our site

