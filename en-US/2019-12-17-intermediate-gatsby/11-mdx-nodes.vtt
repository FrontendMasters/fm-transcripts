WEBVTT

1
00:00:00.170 --> 00:00:03.195
&gt;&gt; Jason Lengstorf: Now we wanna
actually create these nodes.

2
00:00:03.195 --> 00:00:07.777
And to do that we're going to listen for
any MDX node that gets created, and

3
00:00:07.777 --> 00:00:11.260
then we'll create a docs
page node out of it.

4
00:00:11.260 --> 00:00:15.778
So to do that,
we're going to add another API hook, and

5
00:00:15.778 --> 00:00:18.578
this one is called onCreateNode.

6
00:00:18.578 --> 00:00:19.861
And this one gives us a bunch of data.

7
00:00:19.861 --> 00:00:22.690
So the first thing that's gonna give
us is the node that was created.

8
00:00:23.700 --> 00:00:24.790
It'll give us an object for

9
00:00:24.790 --> 00:00:29.400
the actions that we can do that will
help us kinda process this node.

10
00:00:29.400 --> 00:00:32.840
It will give us the ability to
load the content of a given node.

11
00:00:32.840 --> 00:00:37.010
So if we wanna get it to parent or
if it had children, we could get those and

12
00:00:37.010 --> 00:00:38.880
it'll give us a helper
to create a node ID.

13
00:00:40.010 --> 00:00:41.530
And finally, it'll give us options.

14
00:00:42.660 --> 00:00:45.560
So inside of this,

15
00:00:45.560 --> 00:00:50.150
we are going to start by getting
out just the options that we need.

16
00:00:50.150 --> 00:00:55.000
So we wanna use the base path in here,
because we're going to set the path for

17
00:00:55.000 --> 00:01:01.230
the docs page to be, it's going to
include that base path if necessary,

18
00:01:01.230 --> 00:01:05.420
cuz this is how it will actually build
the pages later, using this path.

19
00:01:05.420 --> 00:01:09.520
So we're gonna pull the base path out and
we'll use the defaults.

20
00:01:12.140 --> 00:01:15.920
Okay, and
then we're gonna load the parent node.

21
00:01:15.920 --> 00:01:23.880
So when we get an MDX node, that MDX
node is generated off of a file node.

22
00:01:23.880 --> 00:01:28.990
So the way that Gatsby works is the Gatsby
source file system creates file nodes.

23
00:01:28.990 --> 00:01:31.680
And then Gatsby plugin MDX is
actually a transformer plugin.

24
00:01:31.680 --> 00:01:34.690
So what it's doing is it's looking for
any file nodes.

25
00:01:34.690 --> 00:01:37.780
And then it checks the type
actually using this onCreateNode

26
00:01:37.780 --> 00:01:39.780
API that we're looking at right now.

27
00:01:39.780 --> 00:01:43.978
And if it finds compatible types, which
in this case would be files with a mdx

28
00:01:43.978 --> 00:01:50.630
extension, it will then create a child
node for the file called child MDX.

29
00:01:50.630 --> 00:01:55.226
And that is what we are receiving
here is the child MDX.

30
00:01:55.226 --> 00:01:58.330
So, we wanna load that file so
that we can check that name.

31
00:01:58.330 --> 00:02:02.070
Remember, we set the name for
the files to Gatsby themed docs.

32
00:02:02.070 --> 00:02:05.660
And that's because we only
want to create docs pages for

33
00:02:05.660 --> 00:02:08.350
docs that are loaded by this theme.

34
00:02:08.350 --> 00:02:13.500
We don't want to turn blogs or
anything else into docs pages.

35
00:02:13.500 --> 00:02:19.180
So we're going to get the node,
which is the node.parent.

36
00:02:19.180 --> 00:02:22.580
And then we wanna make sure that we

37
00:02:22.580 --> 00:02:26.580
only work on MDX files that
were loaded by this thing.

38
00:02:29.900 --> 00:02:32.940
And to do that we set up an if statement.

39
00:02:32.940 --> 00:02:40.510
And the first thing we're gonna check is
that the actual type of this node is MDX.

40
00:02:40.510 --> 00:02:45.770
And in Gatsby, the internal is just
kind of metadata about a given node,

41
00:02:45.770 --> 00:02:49.030
and the node.internal.type
is going to reflect

42
00:02:49.030 --> 00:02:52.070
whatever the plugin told
it the data type was.

43
00:02:52.070 --> 00:02:54.700
So if it's a file,
the internal type would be file.

44
00:02:54.700 --> 00:02:59.710
If it's Mdx, Mdx uses this capital
M lowercase dx as its file type.

45
00:02:59.710 --> 00:03:03.230
We're gonna be using docs
page as our file type.

46
00:03:03.230 --> 00:03:06.520
So we can just check and say, hey,
I only wanna work on Mdx files or

47
00:03:06.520 --> 00:03:09.420
Mdx nodes, so
if we don't have any bail out.

48
00:03:09.420 --> 00:03:14.980
And then the other thing that I wanna
check is if the parent source instance

49
00:03:14.980 --> 00:03:23.660
name is not actually Gatsby theme docs.

50
00:03:23.660 --> 00:03:26.680
And again, I should have made this not.

51
00:03:26.680 --> 00:03:29.180
So what we're doing is we're
doing an early return.

52
00:03:29.180 --> 00:03:34.810
So what weâ€™re saying is,
if the node type is not Mdx, or

53
00:03:34.810 --> 00:03:39.680
the source instance name of
the file gatsby-theme-docs.

54
00:03:39.680 --> 00:03:44.076
That source instance name comes from here.

55
00:03:44.076 --> 00:03:47.262
So whatever we set as the name
in Gatsby source file system,

56
00:03:47.262 --> 00:03:50.790
that will become the source
instance name on the file node.

57
00:03:50.790 --> 00:03:56.120
So when we load that parent, the parent
is a file node, and we can check

58
00:03:56.120 --> 00:03:59.830
to make sure that it was loaded by
our theme, and not some other file.

59
00:03:59.830 --> 00:04:02.150
So if those things aren't true,
we're gonna bail out.

60
00:04:02.150 --> 00:04:03.940
But once we get to here,

61
00:04:03.940 --> 00:04:08.770
we know that our node is an Mdx
node that was loaded by our theme.

62
00:04:08.770 --> 00:04:11.090
So that means we can
start to customize it.

63
00:04:11.090 --> 00:04:15.740
So the first thing I'm going to do is I
wanna make sure that if we have an index

64
00:04:15.740 --> 00:04:20.820
file, we wanna treat
an index index dot MDX,

65
00:04:20.820 --> 00:04:23.440
the same way that we
would an index dot HTML.

66
00:04:24.520 --> 00:04:29.100
And what that means is we
want it to load up at docs

67
00:04:29.100 --> 00:04:35.850
Instead of docs index,
which would be the default behavior.

68
00:04:37.180 --> 00:04:40.080
So we're gonna set up a page name.

69
00:04:40.080 --> 00:04:45.402
And the page name that
we'll use is if the parent

70
00:04:45.402 --> 00:04:51.004
name is not index,
we will use the parent.name.

71
00:04:51.004 --> 00:04:54.069
And if it is index we'll leave it blank.

72
00:04:54.069 --> 00:04:59.211
In that way it would just be
the content or the base path.

73
00:04:59.211 --> 00:05:04.860
So if we go /docs and
have an index .Mdx there will be /docs and

74
00:05:04.860 --> 00:05:06.785
that will be the URL.

75
00:05:06.785 --> 00:05:11.310
And if we have an about.Mdx
it will be /docs and /about.

76
00:05:11.310 --> 00:05:14.770
Because the parent.name is the file
name without an extension.

77
00:05:15.980 --> 00:05:20.840
So we have our page name and
from there I'm gonna go ahead and

78
00:05:20.840 --> 00:05:26.790
use the create node action and that
accepts an objects which is our new node.

79
00:05:26.790 --> 00:05:28.920
So the first thing I wanna
do is create a node ID.

80
00:05:30.250 --> 00:05:34.636
And the node ID can be arbitrary,
it just needs to be unique.

81
00:05:34.636 --> 00:05:39.000
So what I typically do is I take
the type that we're going to use, and

82
00:05:39.000 --> 00:05:43.460
then I take the existing nodes ID,
and pass that into create node ID.

83
00:05:43.460 --> 00:05:45.390
And that'll create a unique hash.

84
00:05:45.390 --> 00:05:47.280
So the the idea is already unique, but

85
00:05:47.280 --> 00:05:51.800
then by adding our type to it,
we get a new but also unique hash.

86
00:05:54.030 --> 00:05:56.740
Once I've got the ID,
I can add in the title.

87
00:05:56.740 --> 00:06:00.770
And so the title is gonna
come out of the front matter.

88
00:06:02.980 --> 00:06:06.820
But if that's not set,
we can just fall back to the file name.

89
00:06:09.700 --> 00:06:12.630
We're gonna check the updated time and
fortunately,

90
00:06:12.630 --> 00:06:16.810
Gatsby's file system will just give us
that, so we'll do parent modified time.

91
00:06:16.810 --> 00:06:21.870
And that's the last time that that file
was modified, so that's nice and handy.

92
00:06:21.870 --> 00:06:26.580
Then, I wanna get the path and
I'm gonna use the path module.

93
00:06:27.840 --> 00:06:30.270
Make sure I've got that included up here,
I do.

94
00:06:30.270 --> 00:06:35.030
So I'm gonna use path.join and I always
wanna start with a leading slash so

95
00:06:35.030 --> 00:06:36.630
we'll include that in there.

96
00:06:36.630 --> 00:06:38.610
Then I'm gonna use the basepath.

97
00:06:38.610 --> 00:06:44.715
And then I'm gonna use the relative
directory of the parent.

98
00:06:44.715 --> 00:06:48.972
And what that means is like in our docs,

99
00:06:48.972 --> 00:06:53.390
we could set up /docs/react/hooks.

100
00:06:53.390 --> 00:06:56.230
State management or something, and

101
00:06:56.230 --> 00:07:01.430
the URL will reflect the directory
structure inside of our content path.

102
00:07:01.430 --> 00:07:05.150
So that makes it a little more logical for
people who are managing content.

103
00:07:05.150 --> 00:07:08.070
Whatever the folder structure
looks like in the content

104
00:07:08.070 --> 00:07:13.210
will be what gets reflected on the URL and
in the hierarchy of the site.

105
00:07:13.210 --> 00:07:15.640
And once you've got that
relative directory in there,

106
00:07:15.640 --> 00:07:18.200
we will include the page name, whoops.

107
00:07:18.200 --> 00:07:21.510
Skip to the beginning of the folder,
page name.

108
00:07:21.510 --> 00:07:25.340
So this now is our only collapse out.

109
00:07:25.340 --> 00:07:26.750
So we can see the whole thing.

110
00:07:26.750 --> 00:07:31.450
So our path then is going to be
starting at the leading slash.

111
00:07:31.450 --> 00:07:33.820
If we have a base path like /docs,

112
00:07:33.820 --> 00:07:36.420
then the relative directory
to match the file hierarchy.

113
00:07:36.420 --> 00:07:42.550
And then the page name which will either
be the filename or empty if its index.

114
00:07:42.550 --> 00:07:44.250
So, does this make sense?

115
00:07:44.250 --> 00:07:46.530
Does anybody have questions about
how this works before we move on?

116
00:07:48.110 --> 00:07:50.970
&gt;&gt; Speaker 2: So I guess just to clarify,
the purpose of what we're doing

117
00:07:50.970 --> 00:07:56.140
here is creating knows that
we can query and GraphQL.

118
00:07:56.140 --> 00:07:56.840
&gt;&gt; Jason Lengstorf: Exactly.

119
00:07:56.840 --> 00:07:57.410
&gt;&gt; Speaker 2: Okay.

120
00:07:57.410 --> 00:07:58.270
&gt;&gt; Jason Lengstorf: Yeah, so

121
00:07:58.270 --> 00:08:03.980
what we're doing is we're basically
saying we define this docs page up here.

122
00:08:03.980 --> 00:08:06.330
Id titled path updated.

123
00:08:06.330 --> 00:08:11.700
And in onCreateNode, id title path
updated, we're creating all these files.

