WEBVTT

1
00:00:00.000 --> 00:00:03.550
&gt;&gt; Jason Lengstorf: We wanna get
the ability to share code snippets,

2
00:00:03.550 --> 00:00:04.860
because it's docs theme, right?

3
00:00:04.860 --> 00:00:10.060
And so a very common use case for
docs name is gonna be to share code.

4
00:00:10.060 --> 00:00:14.780
So, the next thing we're gonna do
is set up a syntax highlighting.

5
00:00:14.780 --> 00:00:18.660
And to do that, we're going to
install a couple little helpers.

6
00:00:18.660 --> 00:00:25.690
So let's do yarn workspace,
gatsby-theme-docks and

7
00:00:25.690 --> 00:00:30.093
we're going to add
the prism-react-renderer.

8
00:00:30.093 --> 00:00:34.830
And then we're going to use mdx-utils,
which will help us handle some busy

9
00:00:34.830 --> 00:00:37.952
work of making the react
renderer work properly.

10
00:00:44.738 --> 00:00:48.676
&gt;&gt; Jason Lengstorf: Once those
are installed, we can go in to our docs

11
00:00:48.676 --> 00:00:54.840
package, and we'll create a new file
in components, that is called code.

12
00:00:56.220 --> 00:00:58.850
And we're gonna use this as
our kind of code highlighting,

13
00:00:58.850 --> 00:01:00.830
syntax highlighting element.

14
00:01:00.830 --> 00:01:07.280
So, let's set it up to use theme-ui,

15
00:01:07.280 --> 00:01:11.560
so import jsx from theme-ui, and

16
00:01:11.560 --> 00:01:19.040
then we're going to import
preToCodeBlock From mdx-utils.

17
00:01:19.040 --> 00:01:24.400
And this will allow us to get some
props out of the pre element and

18
00:01:24.400 --> 00:01:26.080
switch some things up under the hood, so

19
00:01:26.080 --> 00:01:31.750
that it's compatible with
the prism react renderer.

20
00:01:31.750 --> 00:01:37.308
Then we're going to import the highlight
component and some default props.

21
00:01:39.101 --> 00:01:42.016
&gt;&gt; Jason Lengstorf: From
prism-react-renderer.

22
00:01:43.764 --> 00:01:44.760
&gt;&gt; Jason Lengstorf: And finally,

23
00:01:44.760 --> 00:01:49.577
I'm gonna import a theme from
prism-react-renderer/themes and

24
00:01:49.577 --> 00:01:54.570
the one that I want is nightOwl
which is Sarah Drasner's theme.

25
00:01:54.570 --> 00:01:57.410
It's also the one that we're
using in the editor today.

26
00:01:57.410 --> 00:01:58.490
It's my favorite.

27
00:01:59.950 --> 00:02:05.000
So now that we've got this we have
the ability to start showing the stuff, so

28
00:02:05.000 --> 00:02:06.420
let's create a component called code.

29
00:02:07.980 --> 00:02:12.690
And that's gonna receive some props and

30
00:02:12.690 --> 00:02:16.570
inside we can do,
our code props are going to,

31
00:02:18.100 --> 00:02:22.640
this is where we use that
preToCodeBlock on our props.

32
00:02:22.640 --> 00:02:26.310
And so what this is doing is it's giving
us like what language is the the pre

33
00:02:26.310 --> 00:02:27.080
block using.

34
00:02:28.490 --> 00:02:33.390
Do we have the the code string separated
from the rest of the the markup

35
00:02:33.390 --> 00:02:34.740
of the pre block.

36
00:02:34.740 --> 00:02:37.410
And that just makes our
lives a little bit easier.

37
00:02:37.410 --> 00:02:41.500
So the first thing we're gonna do
is if we didn't get any code props,

38
00:02:41.500 --> 00:02:45.000
then it's not a highlightable code block.

39
00:02:45.000 --> 00:02:48.890
Because there is a chance that somebody's
just using it to show block text, or

40
00:02:48.890 --> 00:02:52.050
that it's a quote, and
not necessarily code.

41
00:02:52.050 --> 00:02:55.680
And if that's the case,
we're just gonna return a pre tag.

42
00:02:55.680 --> 00:02:58.290
And send in the original props.

43
00:02:58.290 --> 00:02:59.470
So that's our bailout.

44
00:02:59.470 --> 00:03:03.030
If we don't get any code props back,
we just send back at default pre tech.

45
00:03:05.530 --> 00:03:08.160
If we do have code props,
we're gonna pull some of those out.

46
00:03:08.160 --> 00:03:11.480
So we want the code string and
the language specifically.

47
00:03:12.680 --> 00:03:14.390
And we get those out of the code props.

48
00:03:15.980 --> 00:03:18.270
Then, we are gonna return some stuff.

49
00:03:18.270 --> 00:03:23.450
And now, this is a little bit
of an early looking component.

50
00:03:23.450 --> 00:03:27.730
So just fair warning,
this is gonna get a little hairy, but

51
00:03:27.730 --> 00:03:29.420
it's very cool when it works.

52
00:03:29.420 --> 00:03:31.070
So we start out by using this highlight.

53
00:03:32.200 --> 00:03:36.800
And inside of it we are going
to spread out the default props.

54
00:03:36.800 --> 00:03:41.450
So that if all else fails,
it will have some defaults and

55
00:03:41.450 --> 00:03:43.900
at least not look completely broken.

56
00:03:43.900 --> 00:03:47.510
Then we're gonna set
the code to the codestring.

57
00:03:48.880 --> 00:03:53.320
We're gonna set the language
to the language.

58
00:03:54.790 --> 00:03:57.410
And we'll set the theme to the theme.

59
00:04:00.620 --> 00:04:06.250
This one uses the render props pattern,
which means that we get a function back.

60
00:04:06.250 --> 00:04:08.830
And inside of that
function we can do things.

61
00:04:08.830 --> 00:04:15.281
The, the props that will get in
this render prop, is the classname,

62
00:04:15.281 --> 00:04:20.360
style, tokens,
getLineProps which is a helper function,

63
00:04:20.360 --> 00:04:23.630
and getTokenProps with
is also helper function.

64
00:04:23.630 --> 00:04:27.150
And we are just getting started.

65
00:04:27.150 --> 00:04:29.800
So then we are gonna put out a pre.

66
00:04:31.090 --> 00:04:36.460
And this one has a class
name of className.

67
00:04:38.040 --> 00:04:46.930
And then it's going to use
a style of style,singular and

68
00:04:46.930 --> 00:04:53.800
then we want to add a little bit of helper
to make sure that it looks similar to it.

69
00:04:53.800 --> 00:04:55.716
We just want it to look nice in our theme.

70
00:04:55.716 --> 00:04:59.304
And so we're gonna have
a little bit of patting and

71
00:04:59.304 --> 00:05:04.090
then if the code block is long,
we want to scroll, not over flow and

72
00:05:04.090 --> 00:05:07.950
finally I'm gonna put a hook
in here using a variant.

73
00:05:07.950 --> 00:05:11.730
Now we haven't looked at variants yet.

74
00:05:13.000 --> 00:05:17.190
We'll get into those in a little more
detail a little bit later on but

75
00:05:17.190 --> 00:05:21.740
what these are is effectively a named
way for someone to override styles in

76
00:05:21.740 --> 00:05:26.710
the theme-ui config which we're adding
this as kind of a convenience thing.

77
00:05:26.710 --> 00:05:31.340
If somebody uses this theme and wants
to override the prism highlight styles.

78
00:05:31.340 --> 00:05:35.400
They can do it by declaring a prism
highlight prop in their theme UI config,

79
00:05:35.400 --> 00:05:37.970
instead of having to
inject this component and

80
00:05:37.970 --> 00:05:41.630
deal with all of this kind of
clutter that we're creating here.

81
00:05:42.810 --> 00:05:49.239
So, once we're inside our pre,
then we're going to map over our tokens.

82
00:05:50.240 --> 00:05:58.480
And the first one is going to give us
the line and then it's index, right?

83
00:05:58.480 --> 00:06:04.180
And inside of this we're going to
spread out the results of getline props

84
00:06:04.180 --> 00:06:09.900
because we need to get those and
it's an object.

85
00:06:09.900 --> 00:06:13.360
So we pass in line, and
then the key is gonna be the index and

86
00:06:13.360 --> 00:06:17.220
that just gives us a unique key for it.

87
00:06:17.220 --> 00:06:20.410
Then, inside of that, we're going to

88
00:06:23.440 --> 00:06:29.280
map over the line itself and
that's going to give us a token and a key.

89
00:06:31.000 --> 00:06:34.070
And finally we get a span.

90
00:06:34.070 --> 00:06:37.220
And this span is going
to get the tokenProps.

91
00:06:39.200 --> 00:06:42.860
And the values there are the token and
the key.

92
00:06:44.610 --> 00:06:46.840
Okay, has anybody's brain
melted out of their ears yet?

93
00:06:48.190 --> 00:06:53.060
This is a, like big hairy component.

94
00:06:53.060 --> 00:06:54.220
So, we're doing several things.

95
00:06:55.480 --> 00:06:59.410
We start by just wrapping it in
the general highlight component,

96
00:06:59.410 --> 00:07:01.980
that's a prism react
renderers kind of hey,

97
00:07:01.980 --> 00:07:06.340
let's set all the defaults that we
need for the highlighter to work.

98
00:07:06.340 --> 00:07:11.720
Then, We get all these defaults
in here and create a pre tag.

99
00:07:11.720 --> 00:07:16.290
And then the way that a highlighter
works is it breaks the string apart.

100
00:07:16.290 --> 00:07:19.980
So it's not just, your code block,

101
00:07:19.980 --> 00:07:22.240
and then you get a bunch
of string with code in it.

102
00:07:22.240 --> 00:07:24.760
It takes that code and
it breaks it up into all these tokens.

103
00:07:24.760 --> 00:07:28.790
So there's keywords, there's lines,
there's all sorts of stuff like that.

104
00:07:28.790 --> 00:07:32.530
We start by taking the tokens and
breaking them into lines.

105
00:07:32.530 --> 00:07:34.000
Each line is its own div.

106
00:07:34.000 --> 00:07:37.340
That gives us the ability to do
things like number the lines, or

107
00:07:37.340 --> 00:07:42.350
do zebra striping to make it easier
to track, or highlighting lines.

108
00:07:42.350 --> 00:07:45.300
Then, inside of the line,
we have to get the token.

109
00:07:45.300 --> 00:07:47.960
If we look at the way that
highlighting is working here,

110
00:07:47.960 --> 00:07:50.590
we can see that the bracket is one color.

111
00:07:50.590 --> 00:07:55.370
The variable is another color,
the function is yet another color.

112
00:07:55.370 --> 00:07:59.760
So each of these things is actually
broken up into a token that we are then

113
00:07:59.760 --> 00:08:04.430
wrapping in a span,
which allows prism to highlight it.

114
00:08:04.430 --> 00:08:09.270
So to make this work
there are two more steps.

115
00:08:09.270 --> 00:08:15.160
The first thing is we're going to
in the Gatsby plug in theme UI,

116
00:08:16.250 --> 00:08:20.340
we can specify what
components get used for

117
00:08:20.340 --> 00:08:24.690
a given MDX HTML value.

118
00:08:24.690 --> 00:08:27.690
So we can over ride what
it gets as a pre tag which

119
00:08:27.690 --> 00:08:32.300
we would create by using fence blocks or
just writing an HTML pre tag.

120
00:08:32.300 --> 00:08:36.400
We can tell it whenever you get one of
these use something else in its place.

121
00:08:36.400 --> 00:08:43.165
So we do that by creating
a components.js components.

122
00:08:43.165 --> 00:08:47.080
Make sure it's yes it is
plural components.js.

123
00:08:47.080 --> 00:08:50.080
And we're doing that inside of
the Gatsby plugin theme UI.

124
00:08:50.080 --> 00:08:51.200
So source.

125
00:08:51.200 --> 00:08:53.140
Gatsby plugin theme UI components.

126
00:08:54.200 --> 00:08:59.440
And then inside of that,
we can import our code

127
00:09:01.380 --> 00:09:03.980
component from components code.

128
00:09:05.650 --> 00:09:10.350
And then we just export an object, and

129
00:09:10.350 --> 00:09:15.380
we tell MDX that anytime it encounters
a pre tag to use that code component.

130
00:09:17.670 --> 00:09:21.670
So, with that being done,
now we can take some code.

131
00:09:21.670 --> 00:09:28.578
So let me just copy this out, and we can
go into one of our pages and I'm going to.

132
00:09:28.578 --> 00:09:32.970
Add some code,

133
00:09:32.970 --> 00:09:36.780
put it inside of a fenced block
with the js language tag.

134
00:09:38.190 --> 00:09:40.033
And upon saving this and

135
00:09:40.033 --> 00:09:46.793
starting the server,
&gt;&gt; Jason Lengstorf: We should

136
00:09:46.793 --> 00:09:55.634
be able to see some highlighted code
&gt;&gt; Jason Lengstorf: Did I

137
00:09:55.634 --> 00:09:56.990
forget to export the code?

138
00:09:58.090 --> 00:10:02.330
I did, so
we're going to export default code

139
00:10:02.330 --> 00:10:05.820
from the code component and
that should solve our problem.

140
00:10:05.820 --> 00:10:06.720
There we go.

141
00:10:06.720 --> 00:10:09.950
So now we're getting any
code that we drop in

142
00:10:09.950 --> 00:10:13.090
gets langauge specific
highlighting attached to it.

143
00:10:13.090 --> 00:10:19.330
And if we add something else, like if I
go into this index.js, wherever it was.

144
00:10:20.800 --> 00:10:28.055
And I add, let's say some,
&gt;&gt; Jason Lengstorf: It's

145
00:10:28.055 --> 00:10:33.030
not gonna try to highlight that,
so it'll just leave it alone.

146
00:10:33.030 --> 00:10:36.761
Okay so now we can save our work.

147
00:10:46.535 --> 00:10:50.629
&gt;&gt; Jason Lengstorf: So we added some
new packages, created that code,

148
00:10:50.629 --> 00:10:55.774
component added that code component
as a override for the pre tag

149
00:10:55.774 --> 00:11:01.890
in gatsby-plugin-theme UI added some
fence code blocks to our index mdx.

