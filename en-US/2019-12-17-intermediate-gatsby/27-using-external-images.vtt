WEBVTT

1
00:00:00.060 --> 00:00:02.690
&gt;&gt; Jason Lengstorf: Now that we have
access to the cloudinary assets,

2
00:00:02.690 --> 00:00:07.310
let's jump into the pages.

3
00:00:07.310 --> 00:00:10.560
And I wanna pull up an image on this page.

4
00:00:10.560 --> 00:00:18.890
So I'm going to get GraphQL out of gatsby.

5
00:00:18.890 --> 00:00:22.944
And then I also wanna get

6
00:00:22.944 --> 00:00:27.819
image from gatsby-image.

7
00:00:27.819 --> 00:00:32.800
And because this is a page component,
I'm just going to use a page query.

8
00:00:32.800 --> 00:00:37.990
So I can export a constant,
I'll call it query, use graphql.

9
00:00:37.990 --> 00:00:39.810
We could also do this with a static query.

10
00:00:39.810 --> 00:00:42.892
It's kind of a preference thing at this
point because we know what the image is

11
00:00:42.892 --> 00:00:44.030
gonna be.

12
00:00:44.030 --> 00:00:49.530
And I'm gonna set up a query, and
I'm gonna alias file to image.

13
00:00:50.650 --> 00:00:54.775
So what I'm doing is I'm gonna start
with maybe I'll start over here so

14
00:00:54.775 --> 00:00:56.511
it's a little easier to see.

15
00:00:56.511 --> 00:01:01.460
I'm gonna set up a file query and
the file that I wanna use,

16
00:01:01.460 --> 00:01:03.590
I want to match the name.

17
00:01:04.660 --> 00:01:08.830
And I want the name to
equal the grounding.

18
00:01:08.830 --> 00:01:15.080
And then inside of this, I want to
get the childCloudinaryAsset, fluid.

19
00:01:15.080 --> 00:01:19.635
And then there's a a kind of
convenience pattern that we're

20
00:01:19.635 --> 00:01:21.050
gonna use that I'll show you in a second.

21
00:01:22.390 --> 00:01:25.860
But this is a little unwieldy, and
it's not super clear what I'm getting.

22
00:01:25.860 --> 00:01:27.170
So I'm gonna alias these.

23
00:01:28.340 --> 00:01:32.300
Change the name of this one to image,
and this one to Cloudinary.

24
00:01:32.300 --> 00:01:35.680
And you'll see here it's
file childCloudinaryAsset.

25
00:01:35.680 --> 00:01:38.920
When I've aliased them,
it's the same data.

26
00:01:38.920 --> 00:01:41.470
But now the object comes
back with a little more.

27
00:01:41.470 --> 00:01:43.740
It's a little more descriptive
about how we're using it.

28
00:01:43.740 --> 00:01:45.560
So it's a little easier to reason about.

29
00:01:46.750 --> 00:01:48.120
So I'm gonna do image.

30
00:01:48.120 --> 00:01:49.814
Actually, I can just copy this out.

31
00:01:53.726 --> 00:01:55.020
&gt;&gt; Jason Lengstorf: Don't need a name.

32
00:01:55.020 --> 00:01:56.480
So I'm gonna get rid of that.

33
00:01:56.480 --> 00:01:59.510
And then it doesn't work in graphical.

34
00:01:59.510 --> 00:02:04.550
But when you're working in Gatsby, some
of the transformer plugins will export

35
00:02:04.550 --> 00:02:07.830
what's called a GraphQL fragment,
which is kind of a convenience way.

36
00:02:07.830 --> 00:02:11.130
To wrap up all of the image file or

37
00:02:11.130 --> 00:02:17.252
the image fields that you need
into a simplified fragment.

38
00:02:17.252 --> 00:02:22.080
So, the way that this works is we
can type in cloudinaryassetfluid and

39
00:02:22.080 --> 00:02:24.280
it will just expand into all the fields.

40
00:02:24.280 --> 00:02:29.490
So instead of having to go in here and
say, I want the aspect ratio,

41
00:02:29.490 --> 00:02:33.770
the base 64, the sizes, the source, and
the source set, I can instead just use

42
00:02:34.930 --> 00:02:37.990
that fragment and it'll expand
to all of those fields for us.

43
00:02:37.990 --> 00:02:40.610
It's just for convenience,
not necessarily required.

44
00:02:40.610 --> 00:02:41.960
We could do it the long way if we wanted.

45
00:02:43.770 --> 00:02:47.230
So once we've written that query,
it's gonna get injected as a data prop.

46
00:02:48.350 --> 00:02:53.780
And then I am going to add an image field,

47
00:02:53.780 --> 00:02:58.880
so this is the Gatsby image component and
we're just gonna stick the fluid

48
00:02:58.880 --> 00:03:04.930
that we got into it, so
data image cloudinary fluid and

49
00:03:04.930 --> 00:03:09.660
as an alt tag for people using
screen readers, we're gonna say

50
00:03:09.660 --> 00:03:14.810
it's a Negroni, I always put
a period at the end of my alt tags.

51
00:03:14.810 --> 00:03:18.920
I read once from somebody who's using
a screen reader that that adds a pause,

52
00:03:18.920 --> 00:03:21.610
instead of just like
slamming into the next word.

53
00:03:21.610 --> 00:03:25.890
I have never verified this myself,
but I've just always done it.

54
00:03:25.890 --> 00:03:28.860
If somebody who uses the screen
reader wants to correct me,

55
00:03:28.860 --> 00:03:35.160
please find me on Twitter and let me know
of that's not the right way to do things.

56
00:03:35.160 --> 00:03:39.440
So with this, I don't think we need
to restart, I think it'll just work.

57
00:03:39.440 --> 00:03:42.735
So I'm gonna save it, we've got our query,

58
00:03:42.735 --> 00:03:48.112
our query is coming in his data,
we're using it in our Gatsby image prop,

59
00:03:48.112 --> 00:03:51.690
and if I look at the homepage,
there we go great.

60
00:03:51.690 --> 00:03:52.870
But this is too big.

61
00:03:52.870 --> 00:03:56.570
Like I don't want this
to bury my whole screen.

62
00:03:56.570 --> 00:03:59.233
So instead I'm gonna add
some transformations.

63
00:03:59.233 --> 00:04:01.830
I wanna make the aspect
ratio a little more narrow.

64
00:04:01.830 --> 00:04:06.900
So to do that,
I can just jump in to this fluid tag and

65
00:04:06.900 --> 00:04:12.080
I can say, add some transformations, and

66
00:04:12.080 --> 00:04:17.610
the transformations that I want is I want
an aspect ratio of let's say 18 by 9.

67
00:04:17.610 --> 00:04:22.349
So kind of narrow, but
I think that's good.

68
00:04:22.349 --> 00:04:25.699
We want the crop to be
fill instead of squashing.

69
00:04:25.699 --> 00:04:29.959
And then because this, actually let me
show you how this looks before I do it.

70
00:04:33.186 --> 00:04:38.190
&gt;&gt; Jason Lengstorf: So, this is
the default crop, it just kind of, right?

71
00:04:38.190 --> 00:04:41.188
But Cloudinary will do this thing where
it'll focus on the subject of an image,

72
00:04:41.188 --> 00:04:42.410
which is kind of nice.

73
00:04:42.410 --> 00:04:45.850
So, check this out, if I run g.

74
00:04:46.930 --> 00:04:52.839
Where is it, g auto and
I tell it to focus on the subject.

75
00:04:52.839 --> 00:04:56.720
G is short for gravity which is
like where the image is focused.

76
00:04:56.720 --> 00:05:01.810
So I have got g auto and I'm focusing on
the subject and then I can come back here.

77
00:05:02.930 --> 00:05:06.000
And it doesn't change much but
it just nudges it a little bit.

78
00:05:06.000 --> 00:05:08.550
It's way more obvious if
you've got pictures of people

79
00:05:08.550 --> 00:05:11.290
because it will pull
their faces into focus.

80
00:05:12.770 --> 00:05:17.120
Again really cool API we're not really
doing too much with it today but it's

81
00:05:17.120 --> 00:05:21.359
a nice way to shortcut a lot of hassle
in your art direction on your photos.

82
00:05:23.170 --> 00:05:26.330
So now that we've got this,
I want to do this one more time.

83
00:05:26.330 --> 00:05:29.480
And I want to pull it into the the history
page and let's use a different one.

84
00:05:29.480 --> 00:05:31.540
So I'm gonna grab this.

85
00:05:31.540 --> 00:05:36.439
Let's get graphql out of gatsby and

86
00:05:36.439 --> 00:05:42.320
then let's get image out of getsby image.

87
00:05:43.840 --> 00:05:47.270
So this one,
I wanna use this Negroni-naff, so

88
00:05:47.270 --> 00:05:49.460
I'm just gonna grab that one.

89
00:05:49.460 --> 00:05:52.080
And this one,
I don't need any transformation, so

90
00:05:52.080 --> 00:05:52.910
I'm just gonna get rid of them.

91
00:05:55.610 --> 00:05:58.959
And then down here, we've got our data and

92
00:05:58.959 --> 00:06:03.903
I can just go right over the index
We can copy that straight out.

93
00:06:08.292 --> 00:06:13.460
&gt;&gt; Jason Lengstorf: So now when I click
through the history, we've got an image.

94
00:06:13.460 --> 00:06:17.098
So this is a, well I was zoomed way in,
that's why it was so big.

95
00:06:17.098 --> 00:06:22.464
[LAUGH] So now we've got a kind of
a a simple site with good looking

96
00:06:22.464 --> 00:06:28.050
assets that aren't taking up
a ton of space on the computer.

97
00:06:28.050 --> 00:06:32.950
And we can see if we look at
the elements at the the source

98
00:06:32.950 --> 00:06:35.690
that what Gatsby image is generating.

99
00:06:35.690 --> 00:06:38.920
So this is the full rapper and
inside of it,

100
00:06:38.920 --> 00:06:42.960
we get a placeholder that occupies
the aspect ratio size of the image

101
00:06:42.960 --> 00:06:46.080
to keep the content from
jumping before the image loads.

102
00:06:46.080 --> 00:06:47.960
So that's a really nice thing to have.

103
00:06:47.960 --> 00:06:57.190
Then it has a base 64 encoded,
small version of the image.

104
00:06:57.190 --> 00:07:01.620
So that we can do this fade in.

105
00:07:01.620 --> 00:07:04.330
And this is a technique that
was popularized by medium.

106
00:07:04.330 --> 00:07:06.220
It's called the blur up technique.

107
00:07:06.220 --> 00:07:10.670
And what it means is you take a version of
the image that's like 30 pixels wide, and

108
00:07:10.670 --> 00:07:14.700
then you just blow it up and the browser
to be helpful because it knows that a 30

109
00:07:14.700 --> 00:07:17.910
pixel wide shown in 650 pixels
is gonna look like garbage.

110
00:07:17.910 --> 00:07:18.500
Adds a blur.

111
00:07:19.550 --> 00:07:20.940
So we don't have to do anything special.

112
00:07:20.940 --> 00:07:21.670
We just say like hey,

113
00:07:21.670 --> 00:07:24.230
show this tiny image really big in
the browsers like that's a bad idea.

114
00:07:24.230 --> 00:07:25.180
You shouldn't do that.

115
00:07:25.180 --> 00:07:25.680
Let me help.

116
00:07:26.860 --> 00:07:29.500
Then, once it's in the viewport,
which in this case,

117
00:07:29.500 --> 00:07:32.130
it's always in the viewport
cuz it loads at the top.

118
00:07:32.130 --> 00:07:35.190
Gatsby will load the full size
image in a non blocking way so

119
00:07:35.190 --> 00:07:38.070
the page will render and
then it goes to get images.

120
00:07:38.070 --> 00:07:40.780
When the full size images loaded,
it fades in.

121
00:07:40.780 --> 00:07:42.260
So if you're on a slower connection,

122
00:07:42.260 --> 00:07:47.680
you'll see that this drastically increases
the speed of loading the page and

123
00:07:47.680 --> 00:07:51.490
doesn't take away from the quality or
the beauty of the images.

124
00:07:53.000 --> 00:07:57.030
So, with that,
I think we can save our work, and

125
00:07:57.030 --> 00:07:58.630
then we'll move on to the next thing.

