WEBVTT

1
00:00:00.090 --> 00:00:03.320
&gt;&gt; Jason Lengstorf: We told
Gatsby to expect a body,

2
00:00:03.320 --> 00:00:05.870
but we haven't done that yet.

3
00:00:05.870 --> 00:00:10.397
And the reason for
that is that not all of the node types

4
00:00:10.397 --> 00:00:14.735
fully resolved by the time
we get to on create node.

5
00:00:14.735 --> 00:00:16.478
And so that creates a challenge.

6
00:00:16.478 --> 00:00:18.549
If I wanna get the MDX body,

7
00:00:18.549 --> 00:00:24.236
which is that kind of processed code that
we can use on a site to display MDX.

8
00:00:24.236 --> 00:00:26.531
I can't just call it here, it's not set.

9
00:00:26.531 --> 00:00:30.690
So that means that I have to
create a custom resolver.

10
00:00:30.690 --> 00:00:33.393
And so this is where we're kind
of getting into the fun part,

11
00:00:33.393 --> 00:00:35.414
the really nitty gritty
of how Gatsby works.

12
00:00:35.414 --> 00:00:38.777
So we're gonna go ahead and
create the custom resolver.

13
00:00:38.777 --> 00:00:42.835
And we do that using
the createresolver API hook,

14
00:00:42.835 --> 00:00:48.180
which gives us, sorry,
it's plural createresolvers.

15
00:00:48.180 --> 00:00:52.470
And that gives us a function
called createresolvers.

16
00:00:53.720 --> 00:00:57.142
And we call that.

17
00:00:57.142 --> 00:00:59.094
And if you've ever used GraphQL before,

18
00:00:59.094 --> 00:01:02.120
the way that resolvers work is
they reflect the data structure.

19
00:01:02.120 --> 00:01:08.100
So if you have a type of docs page,
you can

20
00:01:08.100 --> 00:01:13.857
define resolvers by creating an object
that has docs page as the object key, and

21
00:01:13.857 --> 00:01:18.550
then a field name as a sub-object.

22
00:01:18.550 --> 00:01:22.040
By default, what it'll do is
it'll look for the node, so

23
00:01:22.040 --> 00:01:24.350
this docs page node that we're creating.

24
00:01:24.350 --> 00:01:29.750
And it will say on that node, give me
the property that matches the field name.

25
00:01:29.750 --> 00:01:32.750
So for title, it'll look for node.title.

26
00:01:32.750 --> 00:01:37.420
And in these cases, for the ID title
updated in path, that's what we want.

27
00:01:37.420 --> 00:01:38.540
We want the default behavior.

28
00:01:38.540 --> 00:01:39.700
So we don't need to modify that.

29
00:01:39.700 --> 00:01:41.510
Resolvers will work as expected.

30
00:01:41.510 --> 00:01:44.960
But for body,
we don't have a body on here.

31
00:01:44.960 --> 00:01:47.540
So we need to change that.

32
00:01:47.540 --> 00:01:52.040
And that means that we need
to do a couple things.

33
00:01:52.040 --> 00:01:55.520
So first, we need to set up a couple
things that I just realized I forgot when

34
00:01:55.520 --> 00:01:58.000
I got excited about setting this thing up.

35
00:01:58.000 --> 00:02:02.780
So in a createNode call, every Gatsby
node needs to have this internal field.

36
00:02:02.780 --> 00:02:04.270
Remember, we talked
about that a minute ago.

37
00:02:04.270 --> 00:02:07.840
It includes the type name and
those sorts of things.

38
00:02:07.840 --> 00:02:13.162
So we're gonna set up the type and
we'll just use DocsPage.

39
00:02:13.162 --> 00:02:18.280
Again, this can be whatever we want,
we just wanna make sure that it's unique.

40
00:02:19.360 --> 00:02:24.544
You could do something clever in here
to have a guaranteed unique type name.

41
00:02:24.544 --> 00:02:27.766
But unless you're doing a really
really complex Gatsby site,

42
00:02:27.766 --> 00:02:29.352
this is pretty easy to manage.

43
00:02:29.352 --> 00:02:33.259
And the next thing that we need is we
always wanna give it a content digest.

44
00:02:33.259 --> 00:02:37.748
Because Gatsby uses the content digest,
which is like a hash of the node content

45
00:02:37.748 --> 00:02:41.910
to decide whether or not it should throw
away that node and build a new one.

46
00:02:41.910 --> 00:02:44.300
That's a way to do less
work during the build.

47
00:02:44.300 --> 00:02:46.020
So, in this case,

48
00:02:46.020 --> 00:02:49.140
we don't really need to create one
because we're just using an MDX node.

49
00:02:49.140 --> 00:02:53.120
So we'll just use that
node's content digest, so

50
00:02:53.120 --> 00:02:56.110
we don't have to do any extra work.

51
00:02:56.110 --> 00:02:58.695
Because if our MDX node changes,
our docs page will change.

52
00:02:58.695 --> 00:03:01.690
That's a fairly safe assumption.

53
00:03:01.690 --> 00:03:07.730
Now that we've got these, these internal
and type, we can actually use them.

54
00:03:07.730 --> 00:03:14.100
So in our createResolvers we're
going to get into our DocsPage type,

55
00:03:14.100 --> 00:03:16.940
and then we're gonna
set up a body resolver.

56
00:03:16.940 --> 00:03:22.290
So, a body type declaration in
a resolver like this has two properties.

57
00:03:22.290 --> 00:03:27.331
The first one is a type, and so that's
gonna match our declaration up here.

58
00:03:27.331 --> 00:03:30.294
Let me collapse these down so
it's easier to move between.

59
00:03:30.294 --> 00:03:33.610
We've got our body,
which is a string and it's required.

60
00:03:33.610 --> 00:03:37.060
So in here, we're gonna say it's
a string and it's required.

61
00:03:37.060 --> 00:03:39.590
And then we have
a property called resolve.

62
00:03:40.730 --> 00:03:42.350
And that is a function.

63
00:03:42.350 --> 00:03:44.060
So that gets four arguments.

64
00:03:44.060 --> 00:03:46.650
This is a pretty standard GraphQL pattern.

65
00:03:46.650 --> 00:03:51.010
The first argument is the actual data,
so the node itself.

66
00:03:51.010 --> 00:03:53.620
Then you get any arguments
passed to that node.

67
00:03:53.620 --> 00:03:58.315
So if you had a filter or
when we're using the date format if we

68
00:03:58.315 --> 00:04:02.150
wanna set how to format things,
that would come in this args argument.

69
00:04:03.180 --> 00:04:08.240
Then we get context, which is information
about the request or the node.

70
00:04:08.240 --> 00:04:11.100
And finally, we get info,
which is kind of general

71
00:04:11.100 --> 00:04:16.250
information about the GraphQL Schema and
all the things that we might be doing.

72
00:04:16.250 --> 00:04:18.630
And because we are diving
into the internals of Gatsby,

73
00:04:18.630 --> 00:04:20.190
we are gonna use all four of those.

74
00:04:20.190 --> 00:04:24.240
Typically, you'll find a lot of
times you'll just use the source.

75
00:04:24.240 --> 00:04:29.050
But when you get into these kind of fun
things, it will get a little wonky.

76
00:04:29.050 --> 00:04:34.960
So the first thing we wanna do is we
wanna load the resolver for the MDX

77
00:04:37.100 --> 00:04:42.650
type, and
specifically we want the body field.

78
00:04:44.620 --> 00:04:48.610
So we do that by creating
a new constant and

79
00:04:48.610 --> 00:04:55.540
we'll just do info.schema.getType ('mdx').

80
00:04:55.540 --> 00:04:59.174
And then below that we're going
to get all the mdxFields.

81
00:04:59.174 --> 00:05:02.362
And that's going to be type getFields.

82
00:05:04.438 --> 00:05:08.656
&gt;&gt; Jason Lengstorf: So what we've done
right now is we've said in the Gatsby

83
00:05:08.656 --> 00:05:15.890
schema, the whole schema, we want to load
the whole schema definition for MDX nodes.

84
00:05:15.890 --> 00:05:17.520
That gives us our type.

85
00:05:17.520 --> 00:05:23.020
So then we're gonna load all of the fields
for MDX and that gives us the field.

86
00:05:23.020 --> 00:05:26.780
So among other things,
it will give us that body field.

87
00:05:26.780 --> 00:05:30.690
And then I wanna get the resolver for it.

88
00:05:30.690 --> 00:05:38.300
And I do that by getting
mdxFields.body.resolve.

89
00:05:38.300 --> 00:05:42.140
And this resolve is defined
the same way as this one is.

90
00:05:42.140 --> 00:05:44.070
So what we're basically saying is,

91
00:05:44.070 --> 00:05:49.540
I want to be able to resolve
the request to the docs page body type,

92
00:05:49.540 --> 00:05:55.430
exactly the same way as we resolve
MDX node request to the body type.

93
00:05:55.430 --> 00:05:56.295
Does that make sense?

94
00:05:56.295 --> 00:06:02.091
So what we've done in doing this is
we've made a pass through resolver.

95
00:06:02.091 --> 00:06:06.863
And that means that our docs page
is going to handle requests for

96
00:06:06.863 --> 00:06:10.028
MDX data exactly the same way as MDX does.

97
00:06:10.028 --> 00:06:13.218
And we're not reinventing the wheel,
we're not re-implementing MDX.

98
00:06:13.218 --> 00:06:16.100
We're just using the work
that MDX is already doing.

99
00:06:17.360 --> 00:06:23.370
So once we've got this resolver,
we can I get the mdxNode,

100
00:06:23.370 --> 00:06:25.520
which will do by going into the context.

101
00:06:27.010 --> 00:06:31.810
And we'll go into the nodeModel and
get the node by its ID.

102
00:06:33.190 --> 00:06:37.140
And the ID is the parent node
because remember our docs page,

103
00:06:37.140 --> 00:06:39.690
set a, or did I said a parent?

104
00:06:39.690 --> 00:06:40.210
I hope I did.

105
00:06:41.580 --> 00:06:42.380
I have the parent.

106
00:06:43.610 --> 00:06:44.370
But I didn't set it.

107
00:06:44.370 --> 00:06:46.060
So let's set that as well.

108
00:06:46.060 --> 00:06:50.997
So we will set the,
&gt;&gt; Jason Lengstorf: Node id of

109
00:06:50.997 --> 00:06:54.586
our MDX node as the parent
of our DocsPage node so

110
00:06:54.586 --> 00:06:59.410
that we're able to reference
that in this resolver.

111
00:06:59.410 --> 00:07:05.690
So having this source node.parent means
that we can pull out the MDX node itself.

112
00:07:06.920 --> 00:07:13.038
Once we've loaded this MDX node,
we can now just resolve it.

113
00:07:13.038 --> 00:07:19.100
So we're gonna run this resolver function
that we pulled out of the MDX body field.

114
00:07:19.100 --> 00:07:23.032
And our arguments are the mdxNode
that we wanna get data from,

115
00:07:23.032 --> 00:07:27.113
the args that were passed in in
case we wanted to do pass through,

116
00:07:27.113 --> 00:07:30.384
the context of the request
in case that's needed.

117
00:07:30.384 --> 00:07:35.706
And then we just wanna tell the meta
that we're using the body field.

118
00:07:37.690 --> 00:07:40.679
&gt;&gt; Jason Lengstorf: So
now that we've done that,

119
00:07:40.679 --> 00:07:44.505
what we should be able to do is query for

120
00:07:44.505 --> 00:07:50.137
our docs page type and
load MDX data into the body field.

121
00:07:50.137 --> 00:07:54.920
And then get all the other data, from
the front matter, from the file system,

122
00:07:54.920 --> 00:07:59.801
all in one place in one kind of simple
node API so that we're not doing anything.

123
00:07:59.801 --> 00:08:02.905
We don't wanna have to do all these
workarounds in our business logic.

124
00:08:02.905 --> 00:08:05.584
We wanna set this up once and
then have simple queries for

125
00:08:05.584 --> 00:08:07.190
the frontend developers to use.

126
00:08:08.310 --> 00:08:13.900
So if I stop and restart, and now in
order to do this, because we just changed

127
00:08:13.900 --> 00:08:19.060
the way that nodes work, we're going to
want to get Gatsby to pull a fresh start.

128
00:08:19.060 --> 00:08:22.270
So to do that,
we're gonna run gatsby clean.

129
00:08:22.270 --> 00:08:24.634
But the way that you run gatsby clean and

130
00:08:24.634 --> 00:08:29.085
yarn workspaces is we're actually
gonna do yarn workspace theme-dev.

131
00:08:29.085 --> 00:08:32.300
And then I can just execute an arbitrary
command within the context of that.

132
00:08:32.300 --> 00:08:34.451
So I wanna run gatsby clean.

133
00:08:34.451 --> 00:08:39.863
And it's going to remove the public and
cache directory so

134
00:08:39.863 --> 00:08:44.293
that we're basically
starting from scratch.

135
00:08:44.293 --> 00:08:51.063
So then I can run yarn
workspace theme-dev develop.

136
00:08:51.063 --> 00:08:53.302
And assuming all went well,

137
00:08:53.302 --> 00:08:59.003
what will happen is this is gonna boot
up with our GraphQL layer in place.

138
00:08:59.003 --> 00:09:03.974
And we will be able to actually query for
our homepage.

139
00:09:03.974 --> 00:09:06.210
So now we've got our docs pages.

140
00:09:06.210 --> 00:09:10.390
And those are pulling out the data
that we told it to, right?

141
00:09:10.390 --> 00:09:14.700
So now we've got custom data
coming in to our GraphQL layer

142
00:09:14.700 --> 00:09:17.200
using a variety of
different nodes as data.

143
00:09:17.200 --> 00:09:18.810
So we're using the file system.

144
00:09:18.810 --> 00:09:21.704
We're using custom data that
we're creating for the path.

145
00:09:21.704 --> 00:09:24.800
And we're using the MDX data for
the body field.

146
00:09:24.800 --> 00:09:28.180
This is all kind of transparent, or

147
00:09:28.180 --> 00:09:30.950
this is all kind of hidden from
anybody who has to implement this.

148
00:09:30.950 --> 00:09:33.194
They just know I want docs data,
and they get it.

149
00:09:33.194 --> 00:09:35.391
So they don't even have to
care that this comes from MDX.

150
00:09:35.391 --> 00:09:39.628
They just need to have data to use.

151
00:09:39.628 --> 00:09:43.998
And to look a little bit at kind of
how this a lot of things get done for

152
00:09:43.998 --> 00:09:47.250
us, let's just set from now to true.

153
00:09:47.250 --> 00:09:50.140
And this is a built in
helper to do relative time.

154
00:09:50.140 --> 00:09:53.170
So right now we can see it
gave us this time stamp.

155
00:09:53.170 --> 00:09:54.890
It's a little small.

156
00:09:54.890 --> 00:09:56.310
So let's make that a little bigger.

157
00:09:56.310 --> 00:09:59.520
And if I change it to from
now equals true and hit play.

158
00:09:59.520 --> 00:10:00.830
Now it gives us a relative change.

159
00:10:00.830 --> 00:10:04.060
So 41 minutes ago was the last time
that this document was changed.

160
00:10:04.060 --> 00:10:08.130
So we can just use that in plain English
when we display this on the site.

161
00:10:08.130 --> 00:10:09.440
We only change the Gatsby node.

162
00:10:09.440 --> 00:10:12.300
So let's add that.

163
00:10:12.300 --> 00:10:20.450
And then we'll commit (theme-dev):
add schema customization.

164
00:10:22.910 --> 00:10:23.700
And let me push that.

165
00:10:24.770 --> 00:10:29.550
And so this is all being pushed to
the fen-progress branch on the repo if

166
00:10:29.550 --> 00:10:33.546
you want to kind of reset to
where we are at any given moment.

