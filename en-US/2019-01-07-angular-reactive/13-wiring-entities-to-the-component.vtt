WEBVTT

1
00:00:00.600 --> 00:00:07.380
&gt;&gt; Lukas Ruebbelke: Because we are now
using EntityState instead of this initial

2
00:00:07.380 --> 00:00:11.660
state that we created, we're going to just
seed it a little bit differently for now.

3
00:00:11.660 --> 00:00:18.127
So I am exporting initialProjects and
then if we go into the barrel roll,

4
00:00:18.127 --> 00:00:24.204
I am going to
&gt;&gt; Lukas Ruebbelke: Just

5
00:00:24.204 --> 00:00:25.546
add this to this, so.

6
00:00:27.578 --> 00:00:29.227
&gt;&gt; Lukas Ruebbelke: We'll see where
this comes in in just a moment.

7
00:00:33.646 --> 00:00:37.471
&gt;&gt; Lukas Ruebbelke: Let's go
into our Projects component and

8
00:00:37.471 --> 00:00:41.410
now you notice getProjects was on hiatus.

9
00:00:41.410 --> 00:00:45.880
Well, now what we're going to do,

10
00:00:45.880 --> 00:00:53.186
is we're going to go this
store dispatch(newLoadProj)

11
00:00:59.168 --> 00:01:00.055
&gt;&gt; Lukas Ruebbelke: You know what,

12
00:01:00.055 --> 00:01:02.582
I may have gotten
slightly ahead of myself,

13
00:01:02.582 --> 00:01:06.083
let's go to our actions real quick and
make sure I have that.

14
00:01:06.083 --> 00:01:12.614
All right, so easy enough,

15
00:01:12.614 --> 00:01:16.429
LoadProjects =

16
00:01:30.876 --> 00:01:36.246
&gt;&gt; Lukas Ruebbelke: Little data, there we

17
00:01:36.246 --> 00:01:43.444
go
&gt;&gt; Lukas Ruebbelke: We'll just add this,

18
00:01:43.444 --> 00:01:49.376
let's go here, export class LoadProjects

19
00:01:49.376 --> 00:01:54.037
implement Action readonly type =

20
00:02:00.582 --> 00:02:01.437
&gt;&gt; Lukas Ruebbelke: Projects.

21
00:02:05.363 --> 00:02:10.406
&gt;&gt; Lukas Ruebbelke: So what's interesting
about this, is that this action, well,

22
00:02:10.406 --> 00:02:16.747
initially, you'll see here that we're
not going to send a payload eventually.

23
00:02:16.747 --> 00:02:19.801
But for now we are going
to say load this projects.

24
00:02:25.226 --> 00:02:30.166
&gt;&gt; Lukas Ruebbelke: Payload: and,
in this case it's going to be

25
00:02:30.166 --> 00:02:35.106
an array of projects,
okay, and then if we go

26
00:02:35.106 --> 00:02:40.351
into our reducer,
&gt;&gt; Lukas Ruebbelke: Let's actually

27
00:02:40.351 --> 00:02:45.295
just create a case for this,
this is actually kind of convenient that

28
00:02:45.295 --> 00:02:48.118
we can see this all together, Projects

29
00:02:51.155 --> 00:02:55.682
&gt;&gt; Lukas Ruebbelke:
ActionTypes.LoadProjects.

30
00:02:59.233 --> 00:03:04.894
&gt;&gt; Lukas Ruebbelke: Return adapter.add

31
00:03:08.844 --> 00:03:09.845
&gt;&gt; Lukas Ruebbelke: Many

32
00:03:13.313 --> 00:03:14.866
&gt;&gt; Lukas Ruebbelke: state.

33
00:03:18.954 --> 00:03:19.830
&gt;&gt; Lukas Ruebbelke: There we go,

34
00:03:19.830 --> 00:03:26.181
let me just make sure that
&gt;&gt; Lukas Ruebbelke: ActionTypes

35
00:03:32.762 --> 00:03:33.663
&gt;&gt; Lukas Ruebbelke: All right, so

36
00:03:33.663 --> 00:03:38.693
I just added the low projects action, I
added it to the reducer, and then if we go

37
00:03:38.693 --> 00:03:48.247
here,
&gt;&gt; Lukas Ruebbelke: This,

38
00:03:48.247 --> 00:03:52.346
one other thing I've forgotten,

39
00:03:52.346 --> 00:03:57.007
I apologize, I need to LoadProjects,

40
00:03:57.007 --> 00:04:02.680
very good,
now we go back to the barrel roll.

41
00:04:02.680 --> 00:04:08.720
So I think that if anybody,
and I believe this is for

42
00:04:08.720 --> 00:04:14.199
across the board,
that when you're starting

43
00:04:14.199 --> 00:04:18.987
to assemble things together, like so.

44
00:04:18.987 --> 00:04:23.666
It's easy to,
there's nothing wrong with your code, but

45
00:04:23.666 --> 00:04:29.296
the way that you wire it up could be
a bit odd, or you can miss something.

46
00:04:32.041 --> 00:04:35.899
&gt;&gt; Lukas Ruebbelke: Just break this
down so we can see that it's there,

47
00:04:35.899 --> 00:04:38.110
now we go to getprojects.

48
00:04:38.110 --> 00:04:44.884
LoadProjects and
we're going to pass in initialProjects.

49
00:04:52.671 --> 00:04:54.276
&gt;&gt; Lukas Ruebbelke: So when we save this,

50
00:04:54.276 --> 00:04:58.210
I expect that nothing is
going to happen here, why?

51
00:04:59.520 --> 00:05:05.614
Well, thank you for asking,
&gt;&gt; Lukas Ruebbelke: If

52
00:05:05.614 --> 00:05:10.980
we look in the
&gt;&gt; Lukas Ruebbelke: Template here.

53
00:05:12.550 --> 00:05:15.275
&gt;&gt; Lukas Ruebbelke: Pre{{projects,

54
00:05:19.592 --> 00:05:22.454
&gt;&gt; Lukas Ruebbelke: async and json.

55
00:05:28.064 --> 00:05:32.034
&gt;&gt; Lukas Ruebbelke: As you notice,
init, init, so there's another thing,

56
00:05:32.034 --> 00:05:38.706
you expect something to happen, I expected
it to load, but nothing's happening.

57
00:05:38.706 --> 00:05:41.186
&gt;&gt; Lukas Ruebbelke: Like
did my Action get fired?

58
00:05:41.186 --> 00:05:44.294
Well, I don't see it here,
so let's go and see,

59
00:05:44.294 --> 00:05:48.149
like I'm definitely firing right here,
it's firing here.

60
00:05:51.067 --> 00:05:55.458
&gt;&gt; Lukas Ruebbelke: So let's see what
the problem may be, let's just, so

61
00:05:55.458 --> 00:05:57.372
this is another thing.

62
00:05:57.372 --> 00:06:01.926
With Redux Dev Tools is you
can start to see your control

63
00:06:01.926 --> 00:06:05.892
flow as it's going
through your application.

64
00:06:05.892 --> 00:06:10.145
So we wait for this to build,
let me just double check,

65
00:06:10.145 --> 00:06:16.140
Projects does not exist on ProjectState,
well, look at that.

66
00:06:16.140 --> 00:06:23.338
So we're not even gonna get that
far because in our selector here.

67
00:06:27.395 --> 00:06:28.062
&gt;&gt; Lukas Ruebbelke: Let's do.

68
00:06:32.676 --> 00:06:33.642
&gt;&gt; Lukas Ruebbelke: I'm
gonna take this off, so

69
00:06:33.642 --> 00:06:36.360
I'm trying to map out something that
doesn't exist, let's save this again.

70
00:06:37.720 --> 00:06:43.870
And I just really want to see
if I can get this to dump.

71
00:06:43.870 --> 00:06:50.247
Yeah, well notice the entire shape of
this structure, its IDs and its entities.

72
00:06:50.247 --> 00:06:54.590
And we're no longer dealing directly
with the project's collection.

73
00:06:54.590 --> 00:06:59.270
And so what we need to do here, and
this is going to be not super pretty,

74
00:07:00.640 --> 00:07:07.170
but this is going to set the stage for
selectives.

75
00:07:07.170 --> 00:07:10.670
So for now we're saying,
okay, we've got projects,

76
00:07:10.670 --> 00:07:14.868
we want to pull off of this data.

77
00:07:14.868 --> 00:07:18.669
Let's go data.Entities,
and then from there,

78
00:07:18.669 --> 00:07:23.565
I'm going to do this not from memory,
I have this written down.

79
00:07:25.879 --> 00:07:32.579
&gt;&gt; Lukas Ruebbelke: Keys(data).map,

80
00:07:32.579 --> 00:07:35.754
little k.

81
00:07:44.897 --> 00:07:47.696
&gt;&gt; Lukas Ruebbelke: All right,
so we're looping over,

82
00:07:47.696 --> 00:07:51.863
we're grabbing the keys that
were looping over that.

83
00:07:51.863 --> 00:07:56.877
And we're just matching up the key
with the value, all right,

84
00:07:56.877 --> 00:08:01.710
let's save this,
now let's see what we're dealing with.

85
00:08:04.340 --> 00:08:08.918
We're back to our collection,
so now we have a very

86
00:08:08.918 --> 00:08:13.714
efficient way to look up data and
connect our models.

87
00:08:13.714 --> 00:08:18.553
But it does create some additional
steps here to get us back

88
00:08:18.553 --> 00:08:24.390
into a state where we can just
dump it right into our template.

89
00:08:24.390 --> 00:08:27.860
Which we will solve with selectors and
lunch.

