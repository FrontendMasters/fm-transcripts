WEBVTT

1
00:00:00.050 --> 00:00:06.140
&gt;&gt; Lukas Ruebbelke: Now,
if we go into our reducer, what we can do

2
00:00:06.140 --> 00:00:11.520
is we can now take this here and we can

3
00:00:13.530 --> 00:00:20.840
update this to ProjectsAction,
&gt;&gt; Lukas Ruebbelke: Types.

4
00:00:27.143 --> 00:00:30.742
&gt;&gt; Lukas Ruebbelke: Select project,
and if we go here,

5
00:00:37.360 --> 00:00:38.261
&gt;&gt; Lukas Ruebbelke: Is this add project,

6
00:00:38.261 --> 00:00:41.473
did I,
&gt;&gt; Lukas Ruebbelke: So here I called it

7
00:00:41.473 --> 00:00:45.150
AddProject, I might go back and refactor
that to be create so it's consistent.

8
00:00:46.530 --> 00:00:55.326
&gt;&gt; Lukas Ruebbelke: UpdateProject,
&gt;&gt; Lukas Ruebbelke: DeleteProject.

9
00:00:58.656 --> 00:01:01.649
&gt;&gt; Lukas Ruebbelke: What's
this thing angry about?

10
00:01:22.529 --> 00:01:24.140
&gt;&gt; Lukas Ruebbelke: Double check
make sure I got everything.

11
00:01:26.910 --> 00:01:29.908
&gt;&gt; Lukas Ruebbelke: ProjectSelected,
I would do that about three times and

12
00:01:29.908 --> 00:01:33.056
I'd be like okay, enough, and
I would just refactor it.

13
00:01:33.056 --> 00:01:37.140
But since we are on a highway

14
00:01:38.480 --> 00:01:42.120
going 100 miles an hour,
I will just leave it as it is.

15
00:01:42.120 --> 00:01:48.045
All right, so now,
in our projects component,

16
00:01:48.045 --> 00:01:52.237
instead of doing this right here,

17
00:01:52.237 --> 00:01:56.574
where we're creating something,

18
00:01:56.574 --> 00:02:00.201
let's go new, AddProject.

19
00:02:06.928 --> 00:02:11.520
&gt;&gt; Lukas Ruebbelke: And we're going to
pass in the project is the payload.

20
00:02:12.660 --> 00:02:18.360
Again, super safe,
we'll go update, project,

21
00:02:18.360 --> 00:02:25.532
let me make sure I get the import correct,
&gt;&gt; Lukas Ruebbelke: Project and

22
00:02:25.532 --> 00:02:27.790
we'll go here.

23
00:02:32.395 --> 00:02:36.738
&gt;&gt; Lukas Ruebbelke: So what's super
cool about this is that now the code is

24
00:02:36.738 --> 00:02:41.960
starting to almost read kind of
almost like a natural language.

25
00:02:41.960 --> 00:02:44.440
And so I believe that code
should be self documenting.

26
00:02:44.440 --> 00:02:47.610
And so when you look at this it's like,
okay, I know exactly what's happening,

27
00:02:47.610 --> 00:02:50.951
and AddProject,
UpdateProject, DeleteProject.

28
00:02:52.360 --> 00:02:57.980
So save this, and
let's verify that everything is loading.

29
00:02:59.960 --> 00:03:07.036
Now look over here projects,
update data, add data.

30
00:03:07.036 --> 00:03:11.700
So, this just got empty, and
that's super great, delete data.

31
00:03:11.700 --> 00:03:12.779
So, as it's coming through,

32
00:03:12.779 --> 00:03:14.902
it's a lot easier to understand
kind of what's happening.

33
00:03:22.530 --> 00:03:25.730
&gt;&gt; Lukas Ruebbelke: Here we go,
we'll just see this happen one more time.

34
00:03:25.730 --> 00:03:30.490
Update data and so what we've just simply
done in this particular module is we've

35
00:03:30.490 --> 00:03:36.300
went through and we have removed
these generic object script objects,

36
00:03:36.300 --> 00:03:38.430
and we've made them strongly typed.

37
00:03:38.430 --> 00:03:43.737
So now that there's some extra citation
about what this is going to do and

38
00:03:43.737 --> 00:03:48.360
how it's going to flow
through the application.

39
00:03:48.360 --> 00:03:53.640
And where it becomes really critical is in
your reducer, when you're listening for

40
00:03:53.640 --> 00:03:59.650
an action type,
then it's easy to keep it's type safe.

41
00:04:01.920 --> 00:04:04.390
&gt;&gt; Lukas Ruebbelke: Any
questions on what I've done?

42
00:04:04.390 --> 00:04:09.035
Taking generic objects
turning them into strongly

43
00:04:09.035 --> 00:04:14.890
typed safe action objects that we can

44
00:04:14.890 --> 00:04:20.210
then pass around our application, and then
not have to worry about them colliding.

45
00:04:20.210 --> 00:04:25.770
I've seen that it's not possible, but
it's much more unlikely versus generic

46
00:04:25.770 --> 00:04:32.450
strings and generic objects, yes?

47
00:04:32.450 --> 00:04:36.200
&gt;&gt; Speaker 2: Why do you put
projects in brackets and actions?

48
00:04:37.870 --> 00:04:43.700
&gt;&gt; Lukas Ruebbelke: So when it comes here,
I'm not going to put anything in there.

49
00:04:43.700 --> 00:04:44.700
I mean it could be even,

50
00:04:55.003 --> 00:04:56.064
&gt;&gt; Lukas Ruebbelke: It's mainly so

51
00:04:56.064 --> 00:04:59.651
that I have kind of semantically,
that I know okay,

52
00:04:59.651 --> 00:05:02.870
this is the entity that I'm working on.

53
00:05:02.870 --> 00:05:05.390
And this is what happened is
that I've just selected it, or

54
00:05:05.390 --> 00:05:08.210
I'm adding data to this,
or I'm updating data.

55
00:05:09.240 --> 00:05:11.316
Does that makes sense?

56
00:05:11.316 --> 00:05:12.261
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Lukas Ruebbelke: So you could put

57
00:05:12.261 --> 00:05:15.341
anything in here, but I recommend creating
something that's self descriptive so

58
00:05:15.341 --> 00:05:17.770
that it is flying through here if
you're trying to track it down.

59
00:05:17.770 --> 00:05:20.690
You can look in and know exactly what,
when you click on this,

60
00:05:20.690 --> 00:05:24.020
you know like what happened and
what you're gonna see in the payload.

