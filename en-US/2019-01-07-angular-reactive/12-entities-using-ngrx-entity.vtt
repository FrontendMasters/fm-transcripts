WEBVTT

1
00:00:00.150 --> 00:00:03.380
&gt;&gt; Lukas Ruebbelke: One of the deals or
one of issues that we deal with, when we

2
00:00:03.380 --> 00:00:08.400
start to deal with large collections,
or we start to do data manipulation or

3
00:00:08.400 --> 00:00:14.010
we need to more importantly get data out
of that collection, is having an efficient

4
00:00:14.010 --> 00:00:19.510
way to traverse that collection and
find out what you're looking for.

5
00:00:19.510 --> 00:00:26.060
So a very common pattern for
that is to convert a collection.

6
00:00:26.060 --> 00:00:30.110
So when I say collection, I'm talking
about an array, into a key-value store.

7
00:00:31.240 --> 00:00:35.920
And so what you'll do is you'll
take an ID of the object, and

8
00:00:35.920 --> 00:00:39.320
that'll be the key or
a property on the object.

9
00:00:39.320 --> 00:00:42.610
And then you store for
the value the object itself.

10
00:00:42.610 --> 00:00:46.730
And so what this does is when you
need to go find a specific entity or

11
00:00:46.730 --> 00:00:51.130
specific item in a collection,
you no longer have to iterate over it,

12
00:00:51.130 --> 00:00:54.010
you can just say, here's my key,
and it can go straight to it.

13
00:00:54.010 --> 00:00:55.180
And so it's automatic lookup.

14
00:00:56.290 --> 00:01:03.780
It's also because our entities
are normalized that if there

15
00:01:03.780 --> 00:01:09.870
is a referential relationship between
these entities, that you connect them

16
00:01:09.870 --> 00:01:14.700
via an ID, so that you only have
that object stored in one place.

17
00:01:15.810 --> 00:01:20.550
And if you need to look it up, then you
have that ID that you can then look it up.

18
00:01:20.550 --> 00:01:25.500
So just think of basically classic
database design where I have a key, or

19
00:01:25.500 --> 00:01:27.860
I have this thing, and it has a foreign
key, which then is over here and

20
00:01:27.860 --> 00:01:28.790
then you go look that up.

21
00:01:29.920 --> 00:01:36.410
So, right now we're dealing with just
a regular collection of projects.

22
00:01:36.410 --> 00:01:40.740
But what we want to do,
is we want to convert that into

23
00:01:40.740 --> 00:01:46.640
a key-value store and then work
with our projects in that manner.

24
00:01:47.890 --> 00:01:51.349
So you could do this by hand, and I have
done this, where if something comes in,

25
00:01:51.349 --> 00:01:54.930
you split it out, and now you have this
key-value store that you're doing this.

26
00:01:57.249 --> 00:02:00.057
&gt;&gt; Lukas Ruebbelke: I would say not
too long ago that the NgRx team,

27
00:02:00.057 --> 00:02:04.450
they were doing the same thing but
they basically abstracted that out and

28
00:02:04.450 --> 00:02:05.910
created NgRx entity.

29
00:02:05.910 --> 00:02:11.270
So, this is a library that's designed
to help you work with collections.

30
00:02:11.270 --> 00:02:15.282
And so, quickly and efficiently look
things up, manipulate the collections as

31
00:02:15.282 --> 00:02:18.774
well as it produces some selectors for
you to pull certain things off.

32
00:02:18.774 --> 00:02:23.200
So, they've just taken a lot of really
common things and streamlined it.

33
00:02:23.200 --> 00:02:28.710
So, we are going to, in this module,

34
00:02:28.710 --> 00:02:32.350
introduce NgRx entity.

35
00:02:32.350 --> 00:02:37.800
And in order for this to work,
what is going to happen,

36
00:02:38.990 --> 00:02:45.940
is we're going to have to
redefine the shape of our state.

37
00:02:45.940 --> 00:02:49.810
Because we're now going to kind of defer
to entity and say, all right, you control

38
00:02:49.810 --> 00:02:53.600
the shape, and then we're going to
give you the additional properties, so

39
00:02:53.600 --> 00:02:55.890
what we're doing here is going to change.

40
00:02:55.890 --> 00:03:00.650
So I'm going to leave them together, so
I'll leave the initial project state up

41
00:03:00.650 --> 00:03:06.950
then I'll do kind of the comparable
version with ngrx entity.

42
00:03:06.950 --> 00:03:10.070
And then you can see them
kind of side by side.

43
00:03:10.070 --> 00:03:14.565
So now what we're going to do is export

44
00:03:14.565 --> 00:03:19.510
interface ProjectsState and

45
00:03:19.510 --> 00:03:25.980
this extends EntityState,
which then takes a Project.

46
00:03:25.980 --> 00:03:31.480
So it's saying, what is kind of the base
entity that I'm working with, or the type.

47
00:03:35.353 --> 00:03:36.514
&gt;&gt; Lukas Ruebbelke: And
if we click in here,

48
00:03:36.514 --> 00:03:41.137
I think this has,
&gt;&gt; Lukas Ruebbelke: Ids and entities, so

49
00:03:41.137 --> 00:03:43.780
this is a very simple correction here.

50
00:03:43.780 --> 00:03:50.950
And then on top of that, then we
will provide our custom properties.

51
00:03:50.950 --> 00:03:54.070
So in this case,
this is outside of ids and entities and so

52
00:03:54.070 --> 00:03:57.590
we do wanna keep track of these
selectedProjectId, all right?

53
00:03:58.680 --> 00:04:03.660
And so now, obviously,
initialState is not entirely correct, but

54
00:04:03.660 --> 00:04:08.020
before we define initialState,
we need to define an entity adapter.

55
00:04:09.460 --> 00:04:13.960
And so I'm going to introduce
one additional step in here.

56
00:04:18.400 --> 00:04:20.900
&gt;&gt; Lukas Ruebbelke: And
then from here, we're going to export,

57
00:04:24.711 --> 00:04:26.517
&gt;&gt; Lukas Ruebbelke: Adapter, and so

58
00:04:26.517 --> 00:04:33.490
this is an EntityAdapter which takes,
again, a Project type.

59
00:04:35.270 --> 00:04:38.420
And we're just going to call
it createEntityAdapter.

60
00:04:42.788 --> 00:04:44.694
&gt;&gt; Lukas Ruebbelke: Project.

61
00:04:49.062 --> 00:04:51.870
&gt;&gt; Lukas Ruebbelke: And
then it's just a method here.

62
00:04:54.880 --> 00:04:57.970
&gt;&gt; Lukas Ruebbelke: Let me make
sure that imported correctly.

63
00:04:57.970 --> 00:05:02.700
Yep, okay, so
we've now created the adapter.

64
00:05:04.750 --> 00:05:11.070
And now that the adapter is in place,
we can use this to define initial state.

65
00:05:11.070 --> 00:05:15.100
So we're going to go
export const initialState.

66
00:05:15.100 --> 00:05:19.420
It's still going to be ProjectState.

67
00:05:19.420 --> 00:05:26.207
The difference is that we're going
to say adapter.getInitialState and

68
00:05:26.207 --> 00:05:30.367
then we're going to pass
in an object with our

69
00:05:30.367 --> 00:05:34.535
additional initial state
that we wanna use.

70
00:05:36.630 --> 00:05:40.610
&gt;&gt; Lukas Ruebbelke: Which
is going to be null, okay?

71
00:05:41.780 --> 00:05:48.127
But now that we've done this,
&gt;&gt; Lukas Ruebbelke: We can go here, so

72
00:05:48.127 --> 00:05:53.250
this will actually stay the same but
if we go into addProject,

73
00:05:56.930 --> 00:05:59.224
&gt;&gt; Lukas Ruebbelke: updateProject, and

74
00:05:59.224 --> 00:06:07.260
deleteProject, we can replace these
with calls directly to our adapter.

75
00:06:07.260 --> 00:06:11.157
So, adapter addOne.

76
00:06:14.560 --> 00:06:20.160
&gt;&gt; Lukas Ruebbelke: action.payload, state.

77
00:06:20.160 --> 00:06:25.446
So, it's essentially doing what I was
doing in the helper method but with

78
00:06:25.446 --> 00:06:30.920
the ID and entity, so with a new shape,
but it's taking care of that for us.

79
00:06:30.920 --> 00:06:36.646
Then if we go here,
return adapter.updateOne,

80
00:06:38.338 --> 00:06:41.824
&gt;&gt; Lukas Ruebbelke: State, and if you can

81
00:06:41.824 --> 00:06:47.840
imagine what's gonna happen next?

82
00:06:50.501 --> 00:06:56.280
&gt;&gt; Lukas Ruebbelke: Adapter,
&gt;&gt; Lukas Ruebbelke: Is it removeOne?

83
00:06:56.280 --> 00:06:58.350
Yeah, removeOne.

84
00:07:06.050 --> 00:07:07.350
&gt;&gt; Lukas Ruebbelke: Yes.

85
00:07:07.350 --> 00:07:11.680
&gt;&gt; Speaker 2: So I'm assuming that the
immutability of the objects are handled

86
00:07:11.680 --> 00:07:12.288
by the adapter?

87
00:07:12.288 --> 00:07:17.227
&gt;&gt; Lukas Ruebbelke: Yes, that's correct.

88
00:07:17.227 --> 00:07:23.560
Yes, that would totally ruin our street
cred if you pop this up and like, what?

89
00:07:23.560 --> 00:07:31.210
Array.push, my goodness,
they're far too good for that.

90
00:07:31.210 --> 00:07:36.219
So, one thing I need to do here,
I have in my notes is

91
00:07:36.219 --> 00:07:41.595
because,
&gt;&gt; Lukas Ruebbelke: We

92
00:07:41.595 --> 00:07:46.981
have changed the shape of this,
we're going to say take and

93
00:07:46.981 --> 00:07:50.870
give us a new object, just take the state.

94
00:07:50.870 --> 00:07:55.894
And we're just going to say I want

95
00:07:55.894 --> 00:08:03.079
to update this one id
here to action.payload.

