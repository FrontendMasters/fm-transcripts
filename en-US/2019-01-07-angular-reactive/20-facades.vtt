WEBVTT

1
00:00:00.025 --> 00:00:02.656
&gt;&gt; Lukas Ruebbelke: I'm
talking about facade pattern.

2
00:00:02.656 --> 00:00:03.502
So what do you know about it?

3
00:00:03.502 --> 00:00:06.663
Well, that it kind of
helps clean things up.

4
00:00:06.663 --> 00:00:12.125
More importantly is the facade pattern,

5
00:00:12.125 --> 00:00:17.593
if we go into the project component here.

6
00:00:17.593 --> 00:00:22.379
This component knows
quite a bit about ngrx.

7
00:00:22.379 --> 00:00:27.380
Which is okay,
it definitely doesn't offend me.

8
00:00:27.380 --> 00:00:33.126
But still the implementation
details of what's

9
00:00:33.126 --> 00:00:38.317
happening is right there in the component.

10
00:00:38.317 --> 00:00:43.357
And so, what a facade pattern does
is it just takes those details,

11
00:00:43.357 --> 00:00:48.217
and especially if you're dealing
with more than one reducer and

12
00:00:48.217 --> 00:00:53.362
piece of state and creates a facade
where all of that sits behind it.

13
00:00:53.362 --> 00:01:00.082
And so now, your component instead of
directly communicating to ngrx is that,

14
00:01:00.082 --> 00:01:05.114
it communicates to the facade,
which then delegates out.

15
00:01:05.114 --> 00:01:12.049
And one of the unfortunate side
effects of not using a facade is,

16
00:01:12.049 --> 00:01:17.196
you can see that I'm
having to pull pieces out.

17
00:01:17.196 --> 00:01:22.103
As I'm like, okay, well, we have these
actions and these different things and

18
00:01:22.103 --> 00:01:25.870
expose them so that I can consume
them across my application.

19
00:01:25.870 --> 00:01:31.504
Whereas with the facade this
allows us to keep those details

20
00:01:31.504 --> 00:01:36.583
hidden away, and
we're not having to do this perse.

21
00:01:36.583 --> 00:01:41.195
But we're able to export
a single facade and

22
00:01:41.195 --> 00:01:44.692
it will take care of that for you.

23
00:01:44.692 --> 00:01:48.033
And so let's build this out and
see what this looks like.

24
00:01:48.033 --> 00:01:53.243
So this is a very simple concept
in the sense that we're going

25
00:01:53.243 --> 00:01:58.964
to just basically create a service
that's going to expose certain

26
00:01:58.964 --> 00:02:04.598
properties that we can then consume and
certain methods as well.

27
00:02:04.598 --> 00:02:11.818
So I've created just a snippet
here to kind of get us started.

28
00:02:11.818 --> 00:02:15.759
This is pretty small but nonetheless.

29
00:02:15.759 --> 00:02:21.776
Then we'll go into projects facade and
I'm going to paste this in.

30
00:02:21.776 --> 00:02:27.434
And so what we'll do is we'll separate
this refactor out into two parts.

31
00:02:27.434 --> 00:02:30.363
So you have commands and you have queries.

32
00:02:30.363 --> 00:02:32.911
So we'll do the queries first and
then we'll do the demands.

33
00:02:32.911 --> 00:02:39.546
So in the facade we're going to take,

34
00:02:46.631 --> 00:02:47.989
&gt;&gt; Lukas Ruebbelke: These right here.

35
00:02:47.989 --> 00:02:51.535
And so, essentially,
we're just lifting this,

36
00:02:51.535 --> 00:02:54.675
shifting it and
dropping it into our facade.

37
00:02:54.675 --> 00:03:00.523
So here,
&gt;&gt; Lukas Ruebbelke: We're going to,

38
00:03:00.523 --> 00:03:07.565
as well,
&gt;&gt; Lukas Ruebbelke: Just copy these and

39
00:03:07.565 --> 00:03:12.096
so we're very closely going to mirror

40
00:03:12.096 --> 00:03:16.492
what we're doing in our component.

41
00:03:16.492 --> 00:03:17.975
So let's create our constructor.

42
00:03:20.375 --> 00:03:23.788
&gt;&gt; Lukas Ruebbelke: And
then within our constructor.

43
00:03:23.788 --> 00:03:29.900
So just kinda picking this up and
moving this over.

44
00:03:34.077 --> 00:03:36.922
&gt;&gt; Lukas Ruebbelke: And I'll actually
leave customers alone for now,

45
00:03:36.922 --> 00:03:38.320
that's not important.

46
00:03:38.320 --> 00:03:47.658
So constructor,
&gt;&gt; Lukas Ruebbelke: And we'll go here.

47
00:03:58.574 --> 00:04:03.510
&gt;&gt; Lukas Ruebbelke: We'll just make
sure that our imports are correct.

48
00:04:03.510 --> 00:04:04.551
There we go.

49
00:04:10.142 --> 00:04:14.102
&gt;&gt; Lukas Ruebbelke: And we check,
make sure nothing is totally crazy.

50
00:04:14.102 --> 00:04:16.672
I think we're good.

51
00:04:16.672 --> 00:04:21.719
And so now what we can do is instead of

52
00:04:21.719 --> 00:04:27.612
in our project component reaching out and

53
00:04:27.612 --> 00:04:30.488
getting the store.

54
00:04:30.488 --> 00:04:36.030
Instead we can just import the facade and

55
00:04:36.030 --> 00:04:41.572
this is going to be the ProjectsFacade.

56
00:04:41.572 --> 00:04:46.575
Let me make sure that imported correctly,
of course not.

57
00:04:48.863 --> 00:04:49.842
&gt;&gt; Lukas Ruebbelke: There we go.

58
00:04:54.578 --> 00:04:58.256
&gt;&gt; Lukas Ruebbelke: I'm pretty certain
that we're exporting this correctly.

59
00:05:05.590 --> 00:05:09.367
&gt;&gt; Lukas Ruebbelke: ProjectsFacde from

60
00:05:09.367 --> 00:05:17.369
lib/state/projects/projectFacde.

61
00:05:24.306 --> 00:05:25.168
&gt;&gt; Lukas Ruebbelke: There we go.

62
00:05:31.110 --> 00:05:34.725
&gt;&gt; Lukas Ruebbelke: Back
into our component

63
00:05:34.725 --> 00:05:39.446
and,
&gt;&gt; Lukas Ruebbelke: Now

64
00:05:39.446 --> 00:05:43.950
instead of pulling this from the store,
we're going to, and

65
00:05:43.950 --> 00:05:48.021
also you can see here it's
like doing store.select and

66
00:05:48.021 --> 00:05:51.242
then it's actually calling in a selector.

67
00:05:51.242 --> 00:05:57.296
Now what we can do is
just go facade.projects.

68
00:06:02.139 --> 00:06:06.859
&gt;&gt; Lukas Ruebbelke: And
facade.currentProjects.

69
00:06:06.859 --> 00:06:10.391
And so the query piece of
this has been tucked away.

70
00:06:13.838 --> 00:06:16.870
&gt;&gt; Lukas Ruebbelke: Let's save this,
make sure that this is building

71
00:06:24.989 --> 00:06:25.959
&gt;&gt; Lukas Ruebbelke: I think I took

72
00:06:25.959 --> 00:06:27.814
the store off too early.

73
00:06:42.062 --> 00:06:43.095
&gt;&gt; Lukas Ruebbelke: I'm gonna save this.

74
00:06:52.402 --> 00:06:53.154
&gt;&gt; Lukas Ruebbelke: Refresh,

75
00:06:53.154 --> 00:06:57.172
make sure that thing that's
coming through correctly.

76
00:07:06.194 --> 00:07:09.626
&gt;&gt; Lukas Ruebbelke: Project's data,
very good.

77
00:07:09.626 --> 00:07:14.877
Let's go back here and double check.

78
00:07:18.082 --> 00:07:19.210
&gt;&gt; Lukas Ruebbelke:
Facade.currentProjects.

79
00:07:33.471 --> 00:07:34.831
&gt;&gt; Lukas Ruebbelke: Leave this for
just a moment.

80
00:07:34.831 --> 00:07:37.638
Let's go ahead and do the command portion.

81
00:07:37.638 --> 00:07:42.650
So wherever you see any
kind of a dispatch,

82
00:07:42.650 --> 00:07:49.624
we're going to create a method
around that to handle that.

83
00:07:49.624 --> 00:07:52.864
So in the component,

84
00:07:52.864 --> 00:07:58.446
if we look here we have the projects.

85
00:07:58.446 --> 00:07:59.567
So we'll just move this over.

86
00:08:05.971 --> 00:08:07.654
&gt;&gt; Lukas Ruebbelke: And
so this is going to be,

87
00:08:11.756 --> 00:08:13.334
&gt;&gt; Lukas Ruebbelke: Just a lot of,

88
00:08:13.334 --> 00:08:16.234
we'll just pick this up.

89
00:08:16.234 --> 00:08:19.947
Move this over here,
&gt;&gt; Lukas Ruebbelke: And

90
00:08:19.947 --> 00:08:24.851
once we get this completed,
&gt;&gt; Lukas Ruebbelke: I'll

91
00:08:24.851 --> 00:08:29.629
talk about a very specific use case
where this has come in incredibly handy.

92
00:08:59.795 --> 00:09:01.888
&gt;&gt; Lukas Ruebbelke: Take project,
take in project,

93
00:09:09.619 --> 00:09:10.621
&gt;&gt; Lukas Ruebbelke: Or rather, create.

94
00:09:20.533 --> 00:09:22.118
&gt;&gt; Lukas Ruebbelke: We'll pick
this one up, and move this over.

95
00:09:29.904 --> 00:09:31.198
&gt;&gt; Lukas Ruebbelke: I think this is,
right here.

96
00:09:31.198 --> 00:09:32.317
All right, so

97
00:09:32.317 --> 00:09:35.402
then we can go back into our component,

98
00:09:38.436 --> 00:09:43.610
&gt;&gt; Lukas Ruebbelke:
this.facade.getProjects.

99
00:09:45.993 --> 00:09:47.000
&gt;&gt; Lukas Ruebbelke: There we go.

100
00:09:56.069 --> 00:09:58.457
&gt;&gt; Lukas Ruebbelke: And
we'll do SelectProject.

101
00:10:07.921 --> 00:10:09.426
&gt;&gt; Lukas Ruebbelke: Then
back into our component.

102
00:10:19.279 --> 00:10:20.694
&gt;&gt; Lukas Ruebbelke: Rather, project.id.

103
00:10:22.975 --> 00:10:28.462
&gt;&gt; Lukas Ruebbelke: And then from here,
same thing facade.selectProject(null).

104
00:10:36.868 --> 00:10:41.060
&gt;&gt; Lukas Ruebbelke: And
then we can remove the store.

105
00:10:41.060 --> 00:10:47.137
And so if we look at this, we're starting
to see a lot of these imports collapse.

106
00:10:51.054 --> 00:10:55.067
&gt;&gt; Lukas Ruebbelke: And so
whereas we had a whole stack of ngrx

107
00:10:55.067 --> 00:10:59.520
stuff,
&gt;&gt; Lukas Ruebbelke: That all of that is

108
00:10:59.520 --> 00:11:03.043
now tucked under the ProjectFacade.

109
00:11:03.043 --> 00:11:07.266
And if we go through,
we just know that these things

110
00:11:07.266 --> 00:11:12.550
are happening inside of the facade,
but we don't know what.

111
00:11:12.550 --> 00:11:16.871
And so we're just even creating just
another layer of abstraction here so

112
00:11:16.871 --> 00:11:21.412
that the underlying implementation is
no longer a concern of the component.

113
00:11:21.412 --> 00:11:28.092
So again, moving to very,
very thin components.

114
00:11:28.092 --> 00:11:30.715
This is, in my opinion, even for

115
00:11:30.715 --> 00:11:34.850
a container component,
about as thin as it can get.

