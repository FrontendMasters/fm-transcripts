WEBVTT

1
00:00:00.012 --> 00:00:05.199
&gt;&gt; Lucas Ruebbelke: Okay, so now with that
on the table, we've laid that foundation,

2
00:00:05.199 --> 00:00:08.250
let's go and let's build this stuff.

3
00:00:08.250 --> 00:00:11.950
So the first thing we're gonna
do is we're going to integrate

4
00:00:11.950 --> 00:00:15.620
a new feature into NGRX.

5
00:00:15.620 --> 00:00:21.620
And so I've already done a little bit of
this by having the customers in place.

6
00:00:21.620 --> 00:00:25.470
But we are going to add in projects.

7
00:00:25.470 --> 00:00:33.920
So the first thing that you do when
you are breaking ground on this is

8
00:00:33.920 --> 00:00:39.600
I define the shape of my state.

9
00:00:40.810 --> 00:00:45.920
And so this is going to be,
export interface,

10
00:00:45.920 --> 00:00:49.991
and we'll call this ProjectState.

11
00:00:53.040 --> 00:00:54.845
&gt;&gt; Lucas Ruebbelke: And so
now, we can stop and think,

12
00:00:54.845 --> 00:00:56.602
what do we want this to look like?

13
00:01:00.802 --> 00:01:03.271
&gt;&gt; Lucas Ruebbelke: We'll
start out with projects, so

14
00:01:03.271 --> 00:01:08.209
obviously if we're going to work with
project state we probably want to

15
00:01:08.209 --> 00:01:12.096
have a collection of project,
so we'll go, project.

16
00:01:12.096 --> 00:01:16.024
Just import this in and
let's go with as well,

17
00:01:16.024 --> 00:01:20.840
let's keep track of when
you select a project.

18
00:01:20.840 --> 00:01:25.470
Now what we're gonna do is we're not
going to keep track of the entire

19
00:01:25.470 --> 00:01:30.980
project object itself because
if I were to store the project.

20
00:01:30.980 --> 00:01:36.190
Like you selected a project and I were
to store that in selected project, now,

21
00:01:36.190 --> 00:01:38.690
I basically like state is
in two different places.

22
00:01:38.690 --> 00:01:43.650
And so what you really want to do is
just store a reference to this, and

23
00:01:43.650 --> 00:01:47.760
so this is gonna be string,
or this will be null.

24
00:01:49.650 --> 00:01:57.080
So this is what the state for our
projects feature is going to look like.

25
00:01:57.080 --> 00:02:05.310
And then from here, the next thing that I
like to do is define the initial state.

26
00:02:07.280 --> 00:02:11.390
Now, if we define the shape of our state,

27
00:02:13.280 --> 00:02:16.778
you can imagine that our initial
state is going to adhere to that.

28
00:02:16.778 --> 00:02:21.828
So export const Initialstate, and

29
00:02:21.828 --> 00:02:27.220
this is going to be of ProjectsState.

30
00:02:29.760 --> 00:02:34.100
And so now we need to satisfy this.

31
00:02:34.100 --> 00:02:38.984
So projects,
add this initial projects up here, and

32
00:02:38.984 --> 00:02:42.356
so I just went ahead and seeded this.

33
00:02:42.356 --> 00:02:44.643
So start with this hard-coded data and

34
00:02:44.643 --> 00:02:48.465
then we'll hook this back up
a little bit later through effects.

35
00:02:48.465 --> 00:02:55.824
And we'll go,
&gt;&gt; Lucas Ruebbelke: initialProjects.

36
00:02:55.824 --> 00:03:00.769
And then from here let's go

37
00:03:00.769 --> 00:03:05.929
with selected ProjecstId,

38
00:03:05.929 --> 00:03:10.444
[INAUDIBLE] ProjectId and

39
00:03:10.444 --> 00:03:17.755
this is just gonna be null, there we go.

40
00:03:17.755 --> 00:03:24.490
So this is an interface and this is an
object that implements that initial state.

41
00:03:24.490 --> 00:03:28.750
Obviously, you can see that
they're pretty much in lock step.

42
00:03:30.900 --> 00:03:36.846
So the next thing that we're
going to do is build a very,

43
00:03:36.846 --> 00:03:42.170
let me do this,
build the most simplest reducer.

44
00:03:46.330 --> 00:03:53.518
&gt;&gt; Lucas Ruebbelke: Now a reducer is just
a function that takes two parameters,

45
00:03:53.518 --> 00:03:58.566
so we'll call this project reducer and,

46
00:04:01.789 --> 00:04:03.661
&gt;&gt; Lucas Ruebbelke: It takes state,

47
00:04:03.661 --> 00:04:08.074
so you're always giving it state, and

48
00:04:08.074 --> 00:04:15.576
we're going to set this to initialState,
and it takes an action.

49
00:04:20.104 --> 00:04:23.666
&gt;&gt; Lucas Ruebbelke: So
when you call a reducer, you're saying,

50
00:04:23.666 --> 00:04:28.356
here's our application state and
here's an action object

51
00:04:28.356 --> 00:04:33.300
that defines what just happened,
so the type of action.

52
00:04:33.300 --> 00:04:35.770
And then usually it will have a payload,

53
00:04:35.770 --> 00:04:39.290
saying, this needs to happen or
this is what happened.

54
00:04:39.290 --> 00:04:43.240
So for instance, I want to create
a project so it's of type CreateProject.

55
00:04:43.240 --> 00:04:46.370
And then the payload would
obviously be a new project.

56
00:04:47.570 --> 00:04:53.054
And so from here, let me just break
this onto another line here so

57
00:04:53.054 --> 00:04:59.113
it's a little bit easier to read
&gt;&gt; Lucas Ruebbelke: It

58
00:04:59.113 --> 00:05:05.855
always takes state and
it will always return state.

59
00:05:05.855 --> 00:05:10.719
So I know it's saying, but
you're not doing that, no, but wait, and

60
00:05:10.719 --> 00:05:15.109
so we'll have a switch,
&gt;&gt; Lucas Ruebbelke: Case here and

61
00:05:15.109 --> 00:05:15.659
we'll go action type.

62
00:05:16.860 --> 00:05:19.080
And then we're just going to set default.

63
00:05:20.160 --> 00:05:25.130
And so if there's not a match on
the action type, it's just going to say,

64
00:05:25.130 --> 00:05:29.068
I personally cannot do anything with this,
I'm not going to pass this along,

65
00:05:29.068 --> 00:05:33.320
return state, okay?

66
00:05:33.320 --> 00:05:37.890
So just to summarize,

67
00:05:37.890 --> 00:05:43.780
we define the shape of our state, so this
is what we want our table to look like.

68
00:05:43.780 --> 00:05:46.560
Here is the seed data, and

69
00:05:46.560 --> 00:05:52.680
then this is how we're going to
control access to the store.

70
00:05:52.680 --> 00:05:56.920
In this case, state comes in and
we're just sending it back out.

71
00:05:56.920 --> 00:06:00.920
So right now, we're just using this to
essentially initialize that basic state.

