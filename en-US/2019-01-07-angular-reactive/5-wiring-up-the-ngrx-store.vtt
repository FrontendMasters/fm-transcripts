WEBVTT

1
00:00:00.270 --> 00:00:05.670
&gt;&gt; Lukas Ruebbelke: So in the barrel
rule for this lib, I'm going to

2
00:00:05.670 --> 00:00:09.830
be in here a couple of times because
we're building this in pieces that

3
00:00:09.830 --> 00:00:14.540
I'm going to be having to export pieces
and then consume it into our application.

4
00:00:14.540 --> 00:00:17.940
When we get to facades,
we're gonna bypass all of that.

5
00:00:17.940 --> 00:00:20.550
But for now I'm having to just so

6
00:00:20.550 --> 00:00:24.608
you understand why I'm hopping into
the index.tx kind of barrel role for

7
00:00:24.608 --> 00:00:31.430
this lib is because I am exposing
specific pieces as I create them.

8
00:00:31.430 --> 00:00:39.283
So, in this case, we are going
to export projects state from,

9
00:00:41.587 --> 00:00:47.970
&gt;&gt; Lukas Ruebbelke: Lib/state/projects.

10
00:00:53.661 --> 00:00:57.117
&gt;&gt; Lukas Ruebbelke: Where'd
my Intellisense go?

11
00:00:57.117 --> 00:01:00.092
Not helpful, there we go.

12
00:01:02.828 --> 00:01:06.878
&gt;&gt; Lukas Ruebbelke: Okay, so
now this is available for, essentially, or

13
00:01:06.878 --> 00:01:12.700
basically I'm exposing it to any other
module, or project that I want to use.

14
00:01:12.700 --> 00:01:18.093
So,
&gt;&gt; Lukas Ruebbelke: We'll

15
00:01:18.093 --> 00:01:18.947
go project state.

16
00:01:18.947 --> 00:01:23.241
One other thing that I
will point out is that,

17
00:01:23.241 --> 00:01:27.535
if we were doing this
from complete scratch,

18
00:01:27.535 --> 00:01:31.942
that we would need to come into here and
build,

19
00:01:31.942 --> 00:01:36.470
well, actually build
these three pieces out.

20
00:01:36.470 --> 00:01:40.635
So, I'll just comment these out and
talk about them real quick.

21
00:01:40.635 --> 00:01:44.930
So Store module for route.

22
00:01:44.930 --> 00:01:48.040
We're simply saying take the reducers,

23
00:01:48.040 --> 00:01:51.320
all the combined reducers and
make it available.

24
00:01:52.800 --> 00:01:56.049
And so there's some things,
some initialization things, and

25
00:01:56.049 --> 00:02:00.030
kind of some connections that happen as
well as the observables are whiled up.

26
00:02:03.200 --> 00:02:05.590
What we have here is StoreDevtoolsModule.

27
00:02:05.590 --> 00:02:09.170
And so what this does is this actually
hooks into the Redux DevTools

28
00:02:09.170 --> 00:02:11.230
in Chrome which is amazing.

29
00:02:11.230 --> 00:02:12.520
It's almost we actually get this up and

30
00:02:12.520 --> 00:02:17.740
running, or you'll see how that state
will flow through from the browser.

31
00:02:17.740 --> 00:02:21.522
But as well, if something goes wrong,
it's really handy to be be like,

32
00:02:21.522 --> 00:02:22.640
what's happening?

33
00:02:22.640 --> 00:02:25.540
You can actually step
through the Devtools.

34
00:02:25.540 --> 00:02:33.110
So I would say as awesome as I think Redux
is, I think the Redux Devtools is just

35
00:02:33.110 --> 00:02:38.250
one of the greatest magic tricks ever for
being able to step through and

36
00:02:38.250 --> 00:02:42.770
I know exactly what is happening to
my application at any given time.

37
00:02:42.770 --> 00:02:46.620
And then when we have here I
could have saved this to later.

38
00:02:46.620 --> 00:02:50.290
Well, no, I actually I need this is
we just have the effects module.

39
00:02:50.290 --> 00:02:56.915
So as you create effects,
then you need to add them in here, okay.

40
00:02:56.915 --> 00:03:02.154
So, with that said,
let's hop into our component.

41
00:03:07.122 --> 00:03:11.175
&gt;&gt; Lukas Ruebbelke: Inside of our projects
component we are going to start to wire

42
00:03:11.175 --> 00:03:11.818
this up.

43
00:03:11.818 --> 00:03:15.507
So let's go.

44
00:03:19.946 --> 00:03:22.836
&gt;&gt; Lukas Ruebbelke: I'll just
put this in as a parameter, so

45
00:03:22.836 --> 00:03:28.547
we'll go,
&gt;&gt; Lukas Ruebbelke: Private store.

46
00:03:34.721 --> 00:03:42.568
&gt;&gt; Lukas Ruebbelke: Store,
let me just check my import here, perfect.

47
00:03:42.568 --> 00:03:46.147
And so
we're going to import the store and so

48
00:03:46.147 --> 00:03:49.823
this is why in index.ts
in that barrel role,

49
00:03:49.823 --> 00:03:54.822
I had to export this so that,
&gt;&gt; Lukas Ruebbelke: I

50
00:03:54.822 --> 00:03:59.212
could say that this is a store
that has ProjectState.

51
00:03:59.212 --> 00:04:02.247
All right, so now within our constructor,

52
00:04:02.247 --> 00:04:07.609
we can do this here
&gt;&gt; Lukas Ruebbelke: If we have,

53
00:04:12.359 --> 00:04:14.017
&gt;&gt; Lukas Ruebbelke: In our reducers,

54
00:04:14.017 --> 00:04:18.223
we've added in this initial project state.

55
00:04:18.223 --> 00:04:22.939
The next step that we want to do is,
we want to pull this off.

56
00:04:22.939 --> 00:04:25.255
So in our project's component,

57
00:04:25.255 --> 00:04:32.545
what we can do is,
&gt;&gt; Lukas Ruebbelke: All right,

58
00:04:32.545 --> 00:04:34.410
that's already there.

59
00:04:34.410 --> 00:04:38.461
So we're gonna set projects$,
it's going to be

60
00:04:38.461 --> 00:04:43.290
observable with projects in it and
then I will send it here.

61
00:04:43.290 --> 00:04:46.390
And then I will turn it
off in the other place.

62
00:04:46.390 --> 00:04:52.894
So we're actually getting it
from the service although this

63
00:04:52.894 --> 00:04:59.460
project = store and

64
00:04:59.460 --> 00:05:04.060
so this returns an observable string
which then we put into a pipe operator.

65
00:05:05.700 --> 00:05:08.360
And from here, we're going to select,

66
00:05:12.180 --> 00:05:15.770
now what feature are we working with,
projects?

67
00:05:15.770 --> 00:05:23.150
And so we're going to say give us the
entire project state, and you know what?

68
00:05:23.150 --> 00:05:25.950
I'm going to leave this like this for

69
00:05:25.950 --> 00:05:29.980
right now so that I can actually walk
through what's happening and you can see.

70
00:05:29.980 --> 00:05:34.090
So I'll go through and

71
00:05:34.090 --> 00:05:39.550
let's go to getProjects and
I'm just going to comment this out.

72
00:05:39.550 --> 00:05:42.180
So we're no longer going to call

73
00:05:42.180 --> 00:05:45.000
the project service which is then
going to make that HTTP call.

74
00:05:45.000 --> 00:05:51.290
It's now going to be
coming in via the store.

75
00:05:51.290 --> 00:05:56.055
But let me hop in and
update the projects component here,

76
00:05:56.055 --> 00:06:03.398
we're just going to comment this list out
&gt;&gt; Lukas Ruebbelke: And

77
00:06:03.398 --> 00:06:08.621
instead preproject.

78
00:06:08.621 --> 00:06:13.815
Now one thing we need to do, or
rather, because this is async,

79
00:06:13.815 --> 00:06:18.725
so it's an observable,
we'll go async | json, like so.

80
00:06:21.115 --> 00:06:22.603
&gt;&gt; Lukas Ruebbelke: And we'll save this.

81
00:06:22.603 --> 00:06:27.167
And so I'm just wanting to dump
what's coming off of the store.

82
00:06:27.167 --> 00:06:33.318
So in the core data module we
need to import our state module.

83
00:06:37.647 --> 00:06:38.613
&gt;&gt; Lukas Ruebbelke: Let's save this.

84
00:06:44.142 --> 00:06:48.384
&gt;&gt; Lukas Ruebbelke: You'll notice
that the object that we got back is

85
00:06:48.384 --> 00:06:52.630
the entire application state for
the projects.

86
00:06:52.630 --> 00:06:56.500
So we have projects, selected project ID,
as you would expect.

87
00:06:58.240 --> 00:07:04.250
In fact, I'll pull up the dev tools
here so I have the Redux Chrome

88
00:07:04.250 --> 00:07:10.130
dev tools and if you look here.

89
00:07:10.130 --> 00:07:17.310
Let's just refresh this, initializing
the store, initializing effects.

90
00:07:17.310 --> 00:07:21.970
More importantly, if we go over to State,
let me just bump this up.

91
00:07:23.660 --> 00:07:25.560
This is where it's gonna
get kind of weird.

92
00:07:27.200 --> 00:07:30.210
There we have customers and
we have projects.

93
00:07:31.380 --> 00:07:36.080
In projects, if we look through this
pinhole here we have our projects and

94
00:07:36.080 --> 00:07:36.830
our project ID.

95
00:07:36.830 --> 00:07:42.900
So we're able to in from our browser
kind of trace this out and see it.

96
00:07:44.200 --> 00:07:47.600
If I put this back down,
there you see it a little better.

97
00:07:47.600 --> 00:07:52.680
So this is our entire state tree
customers, projects like so.

98
00:07:54.090 --> 00:07:56.150
Now if we go over to our code,

99
00:07:57.320 --> 00:08:03.050
what we need to do is inside
of our projects component,

100
00:08:03.050 --> 00:08:06.880
we're going to go ahead and
let's just pull off the project itself.

101
00:08:06.880 --> 00:08:12.317
So we'll go Map, and we'll take projects,

102
00:08:12.317 --> 00:08:19.185
or rather we'll go when I'm
working with observables,

103
00:08:19.185 --> 00:08:24.191
I like to make my
parameters kind of be self

104
00:08:24.191 --> 00:08:31.350
documenting of what's
actually going to the string.

105
00:08:31.350 --> 00:08:37.490
So I know that if I select projects,
I'm getting projectsState.

106
00:08:37.490 --> 00:08:41.569
And then from here, we can just return

107
00:08:41.569 --> 00:08:50.087
projectsState.projects
&gt;&gt; Lukas Ruebbelke: And

108
00:08:50.087 --> 00:08:55.553
I could probably even strong type this.

109
00:08:59.774 --> 00:09:00.442
&gt;&gt; Lukas Ruebbelke: Do I
need to import this?

110
00:09:00.442 --> 00:09:01.318
Probably.

111
00:09:06.508 --> 00:09:11.132
&gt;&gt; Lukas Ruebbelke: There we go,
so let's see it in the browser.

112
00:09:11.132 --> 00:09:18.043
Now we have just projects and from
here I can go into projects component.

113
00:09:18.043 --> 00:09:21.350
I can uncomment this and delete this.

114
00:09:30.147 --> 00:09:34.410
&gt;&gt; Lukas Ruebbelke: So
now we're pulling it off of the store.

115
00:09:34.410 --> 00:09:37.890
So now we're moving this from hey, lets
go get this from some remote service and

116
00:09:37.890 --> 00:09:40.260
lets feed it in and lets hold state.

117
00:09:40.260 --> 00:09:43.290
Is that we've moved it out of
the component into the store and

118
00:09:43.290 --> 00:09:45.580
we're just selecting it and
bringing it in.

119
00:09:47.420 --> 00:09:53.290
So in the projects component, just to
summarize is that we've injected the store

120
00:09:54.360 --> 00:10:02.780
and than within from the store we're
saying I want to select project state.

121
00:10:02.780 --> 00:10:07.660
And than off of project state I want
to pull just the projects from that and

122
00:10:07.660 --> 00:10:13.060
than it's feeding this into
this project's observable,

123
00:10:13.060 --> 00:10:18.330
so that any time this updates projects
in the store it's going to feed in and

124
00:10:18.330 --> 00:10:20.158
then update the underlying components.

125
00:10:20.158 --> 00:10:25.640
And so this is from kind of

126
00:10:26.940 --> 00:10:31.660
ground zero how you would integrate or
add a new feature into

127
00:10:32.940 --> 00:10:37.940
your application using ngrx
from creating the reducer to

128
00:10:37.940 --> 00:10:42.750
adding it to the top reducer and
defining the state for

129
00:10:42.750 --> 00:10:47.040
that feature and then adding it and
updating your application state.

130
00:10:47.040 --> 00:10:53.060
So, what's interesting about Redux is
it's an incredibly simple pattern.

131
00:10:53.060 --> 00:10:55.220
That anyone of us could sit down and

132
00:10:55.220 --> 00:10:58.240
write in implementation of it,
in about 10 minutes.

133
00:10:59.390 --> 00:11:05.374
And so obviously with Redux capital R and
ngrx there's some additional things,

134
00:11:05.374 --> 00:11:11.280
but you could write a basic implementation
of Redux in ten minutes or less.

135
00:11:11.280 --> 00:11:13.080
I mean it's very, very simple.

136
00:11:13.080 --> 00:11:17.670
And so this is, when I think of the genius
that is Dan Abramov is that he basically

137
00:11:17.670 --> 00:11:22.510
took kind of two design patterns,
put them together, and created

138
00:11:22.510 --> 00:11:27.170
something that has completely inverted how
I think about application development.

139
00:11:27.170 --> 00:11:32.240
And he's done it in maybe less
than 100 lines of code or

140
00:11:32.240 --> 00:11:35.550
whatever, it's very very small,
which is incredibly interesting.

