WEBVTT

1
00:00:00.000 --> 00:00:02.228
So now that we got our DV in order,

2
00:00:02.228 --> 00:00:07.572
what we wanna do now start working on the
routes that we wanna create for the app.

3
00:00:07.572 --> 00:00:13.079
So for this app it's really not that
many routes we only have about four,

4
00:00:13.079 --> 00:00:17.864
but like I said you can extend this
app to be whatever you want and

5
00:00:17.864 --> 00:00:22.131
go crazy with it,
it's fine what you want to do with it.

6
00:00:22.131 --> 00:00:24.464
But these four routes
are definitely gonna challenge us,

7
00:00:24.464 --> 00:00:27.234
they all do some different things
that have different constraints.

8
00:00:27.234 --> 00:00:31.672
So for us we're gonna need this slash
register route which is sign up or

9
00:00:31.672 --> 00:00:36.279
any sign in which is exactly what it
sounds like it's where we go sign in.

10
00:00:36.279 --> 00:00:41.003
We need the slash home route that's gonna
be like when I showed you the project,

11
00:00:41.003 --> 00:00:44.175
the dashboard, that's the home for
the dashboard,

12
00:00:44.175 --> 00:00:47.224
and then we're gonna need
slash project slash ID.

13
00:00:47.224 --> 00:00:51.303
So if I click on a project I
should be able to go there and

14
00:00:51.303 --> 00:00:54.309
see all the tasks for that one project.

15
00:00:54.309 --> 00:00:58.030
And that's what we're gonna
cover in this course.

16
00:00:58.030 --> 00:00:58.792
Now we have an issue though.

17
00:00:58.792 --> 00:01:05.990
We have four routes and they have two
completely different layouts, right?

18
00:01:05.990 --> 00:01:07.726
If we go back and
look at the app, let me show you.

19
00:01:07.726 --> 00:01:10.752
So if we look at this
layout right here for

20
00:01:10.752 --> 00:01:15.126
instance like the auth form,
this register one, right?

21
00:01:15.126 --> 00:01:17.399
We have this layout here.

22
00:01:17.399 --> 00:01:23.046
But if we go to home, we have this layout.

23
00:01:23.046 --> 00:01:27.477
So I mean there are some simulators as far
as this little glass thing and whatnot.

24
00:01:27.477 --> 00:01:32.939
But the layout as far as this navigation
bar and stuff, it's completely different.

25
00:01:32.939 --> 00:01:39.129
So the slash home and the one first last
project here, they have the same but

26
00:01:39.129 --> 00:01:45.232
the ones for the register and sign in
have a completely different layout.

27
00:01:45.232 --> 00:01:49.080
And if you remember how next
JS app directory works,

28
00:01:49.080 --> 00:01:51.450
we can put a layout on the route.

29
00:01:51.450 --> 00:01:53.495
So if we go into the app
we can put a layout here,

30
00:01:53.495 --> 00:01:56.398
in fact there probably already is
one cuz we scaffolded this out.

31
00:01:56.398 --> 00:02:00.600
So if we put something in here, it's
gonna be on all four of those routes and

32
00:02:00.600 --> 00:02:01.813
we don't want that.

33
00:02:01.813 --> 00:02:05.658
So we have to figure out how do we
maybe opt in to certain layouts or

34
00:02:05.658 --> 00:02:07.382
opt out of certain layouts.

35
00:02:07.382 --> 00:02:09.396
How do we how do we figure that out?

36
00:02:09.396 --> 00:02:11.614
Well, this is where
route grouping comes in.

37
00:02:11.614 --> 00:02:16.774
So in intro, the next JSP 2, I talked
a little bit about route grouping.

38
00:02:16.774 --> 00:02:19.466
This is where it actually
is super beneficial.

39
00:02:19.466 --> 00:02:26.694
So what we're gonna do is we're going to
basically group those routes as pairs so

40
00:02:26.694 --> 00:02:33.086
they can share their own layout and
not be affected by the other routes.

41
00:02:33.086 --> 00:02:37.504
And it not at segments to our URL, right?

42
00:02:37.504 --> 00:02:39.175
We want our URLs to look like this.

43
00:02:39.175 --> 00:02:40.310
We want them to be clean.

44
00:02:40.310 --> 00:02:43.799
Because we could solve
this just by saying, well,

45
00:02:43.799 --> 00:02:47.686
how about we put sign in and
register underneath slash off?

46
00:02:47.686 --> 00:02:51.289
And how about we put home and
project underneath slash dashboard?

47
00:02:51.289 --> 00:02:53.981
Okay, that might solve the problem but

48
00:02:53.981 --> 00:02:58.966
I don't wanna pollute our URL just
because we can't separate layouts.

49
00:02:58.966 --> 00:03:01.411
I want the URL to be like this.

50
00:03:01.411 --> 00:03:03.721
But the complete different layout so
we've got the group the routes.

51
00:03:03.721 --> 00:03:08.044
So what that means is we're gonna create
a folder for auth with parentheses because

52
00:03:08.044 --> 00:03:11.934
when we tell next yes put parentheses
around a folder we're saying, hey,

53
00:03:11.934 --> 00:03:16.316
do not add this segment to the route, I'm
only grouping everything underneath it so

54
00:03:16.316 --> 00:03:18.813
they can share something
common like a layout.

55
00:03:18.813 --> 00:03:23.244
So we're gonna put the register and
the sign in inside the auth group, and

56
00:03:23.244 --> 00:03:24.972
they have their own layout.

57
00:03:24.972 --> 00:03:30.829
And then we're gonna put the home in
the project inside the dashboard group,

58
00:03:30.829 --> 00:03:33.273
and they have their own layout.

59
00:03:35.289 --> 00:03:37.108
Does that make sense?

60
00:03:37.108 --> 00:03:41.110
So this is the use case where you can
have more than one route layout and

61
00:03:41.110 --> 00:03:42.086
app directory.

62
00:03:42.086 --> 00:03:44.209
But you have to have at least one.

63
00:03:44.209 --> 00:03:45.139
So let's do that.

64
00:03:45.139 --> 00:03:50.647
So I'm actually just gonna get
rid of pretty much all of this.

65
00:03:50.647 --> 00:03:54.181
I'll keep the head, the head one,
but everything else is gonna go.

66
00:03:59.826 --> 00:04:04.111
Okay, so inside of here, typically we
would put a layout on the route, but

67
00:04:04.111 --> 00:04:07.795
we're not cuz we're gonna have
two routes in their own groups.

68
00:04:07.795 --> 00:04:12.089
So I'm gonna make one
group here called auth.

69
00:04:12.089 --> 00:04:14.792
It should be a folder, not a file.

70
00:04:17.461 --> 00:04:18.803
With parentheses around it.

71
00:04:18.803 --> 00:04:25.970
So we got auth and we're gonna make
another folder called dashboard.

72
00:04:25.970 --> 00:04:30.126
So this is new to next JS 13.

73
00:04:30.126 --> 00:04:34.531
And then inside of auth,
we're gonna make a layout.

74
00:04:34.531 --> 00:04:36.590
That's where the layout goes for the auth.

75
00:04:36.590 --> 00:04:41.425
It's gonna be its own root layout there.

76
00:04:43.799 --> 00:04:46.698
And same thing goes for dashboard.

77
00:04:46.698 --> 00:04:50.615
It's also gonna have a layout.

78
00:04:53.246 --> 00:04:58.566
And then for auth it's gonna have
another folder for register.

79
00:04:59.983 --> 00:05:03.755
And another sibling folder to
that it's gonna be sign in.

80
00:05:10.879 --> 00:05:12.781
And because we're an app directory,

81
00:05:12.781 --> 00:05:15.285
you have to have a page if
you actually want a page.

82
00:05:15.285 --> 00:05:18.374
Unlike the pages directory where you
just give it whatever name you want and

83
00:05:18.374 --> 00:05:19.560
it'll make a route for you.

84
00:05:19.560 --> 00:05:22.761
We explicitly have to use the name page.

85
00:05:22.761 --> 00:05:27.334
So I go into the folder that
I want to put a page there.

86
00:05:27.334 --> 00:05:31.243
So I put a page and register or
put a page and sign in.

87
00:05:35.554 --> 00:05:39.624
And then in the dashboard,
I'm gonna make a new folder for home,

88
00:05:39.624 --> 00:05:45.821
I'm gonna put a page in
there Also in dashboard,

89
00:05:45.821 --> 00:05:49.605
I'm gonna make a new
folder called project.

90
00:05:49.605 --> 00:05:52.498
And instead of putting a page in project,

91
00:05:52.498 --> 00:05:57.456
cuz I don't want you to be able to go
to slash project and see something,

92
00:05:57.456 --> 00:06:02.414
I want you to go to project slash
projectid, I'm gonna make a new folder

93
00:06:02.414 --> 00:06:07.233
in here with the square brackets of
id cuz it's a dynamic parameter.

94
00:06:07.233 --> 00:06:10.689
And then inside of that
folder I'm gonna put a page.

95
00:06:16.581 --> 00:06:18.317
So I have them all open here.

96
00:06:18.317 --> 00:06:24.324
So all the register with a page,
all the sign in with a page,

97
00:06:24.324 --> 00:06:29.973
and then dashboard home with a page,
dashboard project

98
00:06:29.973 --> 00:06:35.397
id with a page, and
then layouts in both a dashboard.

99
00:06:38.554 --> 00:06:41.002
Any questions on why we
organize it that way?

100
00:06:41.002 --> 00:06:42.338
&gt;&gt; I may have missed it.

101
00:06:42.338 --> 00:06:46.366
But is there a reason for
the prints around auth and dashboard?

102
00:06:46.366 --> 00:06:47.707
&gt;&gt; Great question.

103
00:06:47.707 --> 00:06:53.302
The question was, is there a reason for
the parentheses around dashboard and auth?

104
00:06:53.302 --> 00:06:54.627
Yes, there is.
Next JS 13,

105
00:06:54.627 --> 00:06:59.461
when it sees these parentheses is gonna
do something called route grouping.

106
00:06:59.461 --> 00:07:03.217
What this means is it's
gonna allow us to group for

107
00:07:03.217 --> 00:07:07.779
instance the slash register and
the slash sign in together so

108
00:07:07.779 --> 00:07:13.065
they share this common layout, but
it's not gonna add off to the URL.

109
00:07:13.065 --> 00:07:16.002
It's not gonna add it as a segment.

110
00:07:16.002 --> 00:07:20.768
So if there were no provisions around
this, in order to see the register page

111
00:07:20.768 --> 00:07:25.470
it would be your website slash off slash
register and then you would see it.

112
00:07:25.470 --> 00:07:29.430
With these purlins it would just
be your website slash register,

113
00:07:29.430 --> 00:07:30.948
it will ignore the auth.

114
00:07:30.948 --> 00:07:36.095
So it's just a way for you to get the same
benefit of routes being grouped together

115
00:07:36.095 --> 00:07:45.498
without actually adding segments to
the URL Cool, any other questions?

116
00:07:51.648 --> 00:07:56.888
&gt;&gt; Folder or
files with dynamic parameters?

117
00:07:56.888 --> 00:07:59.933
&gt;&gt; Folders have dynamic parameters.

118
00:07:59.933 --> 00:08:03.935
You can't put dynamic parameters.

119
00:08:03.935 --> 00:08:09.671
You can't make a file that's a page
that's not called page anymore.

120
00:08:09.671 --> 00:08:14.263
So you used to be able to use dynamic
parameters because you can make

121
00:08:14.263 --> 00:08:18.363
a file whatever you want it in
previous versions the next but

122
00:08:18.363 --> 00:08:22.308
in this version the next off
pages have to be called page.

123
00:08:22.308 --> 00:08:28.302
So anything that's not page or a special
thing like layout is probably a folder.

124
00:08:29.717 --> 00:08:34.292
It just looks weird in VS code cuz
it the ID folder's the only folder

125
00:08:34.292 --> 00:08:35.608
inside a project.

126
00:08:35.608 --> 00:08:37.242
So it just put them on
the same line like that.

127
00:08:37.242 --> 00:08:38.324
But that's a folder.

128
00:08:38.324 --> 00:08:40.195
This is a folder in a folder.

129
00:08:40.195 --> 00:08:45.042
&gt;&gt; How does it know which route is
the index route now after deleting

130
00:08:45.042 --> 00:08:46.314
the page.tsx?

131
00:08:46.314 --> 00:08:50.289
&gt;&gt; I was wondering if someone's gonna ask
that cuz it's gonna go to the page and

132
00:08:50.289 --> 00:08:52.787
like what you think is
gonna happen if I go here?

133
00:08:52.787 --> 00:08:55.868
So to answer that question,
we don't have an index route.

134
00:08:55.868 --> 00:08:56.766
There isn't one.

135
00:08:56.766 --> 00:09:00.090
And that's intentional because
this app is meant to be an app

136
00:09:00.090 --> 00:09:03.363
behind a marketing website
which would be the index route.

137
00:09:03.363 --> 00:09:06.508
This is assuming you got past that and
here's the app.

138
00:09:06.508 --> 00:09:09.771
If you wanna go make a marketing
website for you index route and

139
00:09:09.771 --> 00:09:10.854
add it here, do it.

140
00:09:10.854 --> 00:09:12.802
But this is an app behind that.

141
00:09:12.802 --> 00:09:15.907
So I didn't do it, but
I forgot I didn't do it.

142
00:09:15.907 --> 00:09:19.649
[LAUGH] So I was like,
wait, this thing's broke.

143
00:09:19.649 --> 00:09:21.008
But no, that's intentional.

144
00:09:21.008 --> 00:09:23.316
So there is no index route here and
that's totally fine.

145
00:09:23.316 --> 00:09:26.971
But that's up to you how
you wanna handle that.

146
00:09:26.971 --> 00:09:31.572
I think the way I would handle it though
if I were to do it is I would probably

147
00:09:31.572 --> 00:09:35.446
make another, You know what?

148
00:09:35.446 --> 00:09:39.721
Yeah, I think-
&gt;&gt; You're saying you make Index dot tsx.

149
00:09:39.721 --> 00:09:42.814
&gt;&gt; So
you can't do that anymore unfortunately.

150
00:09:42.814 --> 00:09:46.868
You can't make an index dot tsx anymore
in the app directory it has to be

151
00:09:46.868 --> 00:09:47.705
called page.

152
00:09:47.705 --> 00:09:50.400
So I mean the short answer
is you just put page here,

153
00:09:50.400 --> 00:09:52.227
you just say page dot tsx, right.

154
00:09:52.227 --> 00:09:54.076
Boom, there it is.

155
00:09:54.076 --> 00:09:55.291
Well let me spell it right.

156
00:09:56.910 --> 00:09:58.084
That's the short answer.

157
00:09:58.084 --> 00:10:03.371
The problem is,
The way that the route segments are right

158
00:10:03.371 --> 00:10:06.529
now you might have to start mounting them
at different paths cuz what is this?

159
00:10:06.529 --> 00:10:09.179
Is this the index page to your app?

160
00:10:09.179 --> 00:10:11.221
Is this the index page
to a marketing site?

161
00:10:11.221 --> 00:10:13.228
And then where are those
other pages gonna go?

162
00:10:13.228 --> 00:10:17.812
So it's more about organizing them and not
so much about whether or not you have it.

163
00:10:17.812 --> 00:10:21.041
So it's just a thought exercise on
how you wanna organize them and

164
00:10:21.041 --> 00:10:22.873
what that URL structure looks like.

165
00:10:22.873 --> 00:10:26.236
So probably wanna sit down ahead of
time and like map out your URLs and

166
00:10:26.236 --> 00:10:27.417
how you want them to be.

167
00:10:27.417 --> 00:10:29.797
But yeah, if you just wanna index route,

168
00:10:29.797 --> 00:10:33.550
you just put a page tx at the root
of the app, and you'll get that.

169
00:10:33.550 --> 00:10:38.531
But you'll also have to now add
a index route layout which we were

170
00:10:38.531 --> 00:10:42.971
trying to avoid cuz we don't
want these to share layout.

171
00:10:42.971 --> 00:10:46.849
So that's another reason why I don't have
an index route cuz I don't want them

172
00:10:46.849 --> 00:10:49.551
sharing a layout I want them
to have their own layout and

173
00:10:49.551 --> 00:10:51.804
only way to do that is
to have route grouping.

174
00:10:53.372 --> 00:10:57.399
&gt;&gt; So if we just have the page at that,
the base of the app directory,

175
00:10:57.399 --> 00:10:58.953
we need to have a layout?

176
00:10:58.953 --> 00:11:00.143
&gt;&gt; I believe so.

177
00:11:00.143 --> 00:11:01.650
We can test that theory.

178
00:11:01.650 --> 00:11:02.658
Let's see.

179
00:11:02.658 --> 00:11:07.936
So if I say page, export,
default, function, page.

180
00:11:16.463 --> 00:11:17.218
Why does it do that?

181
00:11:17.218 --> 00:11:19.479
My autocomplete is so strong.

182
00:11:19.479 --> 00:11:21.368
It's like you want that icon?

183
00:11:21.368 --> 00:11:25.950
&gt;&gt; [LAUGH]
&gt;&gt; No I don't, I just wanna do div.

184
00:11:25.950 --> 00:11:30.479
just give me a div.

185
00:11:30.479 --> 00:11:32.650
My God, Jesus.

186
00:11:32.650 --> 00:11:35.799
Okay, so let's see.

187
00:11:40.153 --> 00:11:45.380
Yeah, you can see right there it literally
breaks doesn't have a root layout you have

188
00:11:45.380 --> 00:11:50.185
to cuz it needs to be rendered into an
HTML document and you didn't give it one.

189
00:11:52.551 --> 00:11:55.211
So that's why I don't have that there.

190
00:11:59.074 --> 00:12:02.508
Okay, any other questions?

191
00:12:02.508 --> 00:12:06.208
&gt;&gt; If we were to have that there,
is there a way to have that layout

192
00:12:06.208 --> 00:12:09.995
satisfied without the layout
affecting the sub directories?

193
00:12:09.995 --> 00:12:14.599
So I saw in the RFC that they are working
on the ability to where you can do

194
00:12:14.599 --> 00:12:16.094
something like this.

195
00:12:16.094 --> 00:12:19.201
How does it work?

196
00:12:21.555 --> 00:12:23.422
You can export something.

197
00:12:23.422 --> 00:12:24.473
My keyboard works, there we go.

198
00:12:24.473 --> 00:12:28.616
I don't know what it is exactly
cuz I haven't seen the API for it.

199
00:12:28.616 --> 00:12:32.546
But they're working on the ability for
you to export some type of hints here.

200
00:12:32.546 --> 00:12:35.478
It'll have some special name or
something, and

201
00:12:35.478 --> 00:12:40.284
you can tell next.js I wanna opt out of
this layout, or I wanna use this layout.

202
00:12:40.284 --> 00:12:44.482
I think they're trying to figure that out,

203
00:12:44.482 --> 00:12:48.116
but right now no, there isn't a way.

204
00:12:48.116 --> 00:12:50.348
But they're aware of it and
they're trying to figure it out.

205
00:12:50.348 --> 00:12:52.518
So the way that I get around it is this.

206
00:12:52.518 --> 00:12:57.129
Yes.

207
00:12:57.129 --> 00:13:04.426
&gt;&gt; I can see middleware redirecting to
the slash sign in when the route is slash.

208
00:13:04.426 --> 00:13:05.605
Am I right?

209
00:13:05.605 --> 00:13:10.224
&gt;&gt; You can 100% use middleware to
redirect to anywhere based off of that,

210
00:13:10.224 --> 00:13:13.461
you can also just do or
a hard coded redirect as well.

211
00:13:13.461 --> 00:13:16.883
You don't even need middleware to
calculate it if you don't want to,

212
00:13:16.883 --> 00:13:19.500
you can as hard code that if
that's what you wanna do.

213
00:13:19.500 --> 00:13:23.055
If you want this app to have an index,
you can have it go there, but

214
00:13:23.055 --> 00:13:25.913
you're still just gonna
run into the same problem.

215
00:13:25.913 --> 00:13:29.737
Soon as that index tries to load
up it might throw an error.

216
00:13:29.737 --> 00:13:34.739
But if you did it on middleware which was
at the edge it would avoid that entirely.

217
00:13:34.739 --> 00:13:35.903
So it really just depends on
where you did the redirect.

218
00:13:35.903 --> 00:13:38.236
On the edge yeah that would
have that would avoid it.

219
00:13:38.236 --> 00:13:39.617
So you could do it there
if that's what you prefer.

