WEBVTT

1
00:00:00.000 --> 00:00:05.023
So being a full stack app I think the
biggest thing that we have to think about

2
00:00:05.023 --> 00:00:10.712
is a database and where we're gonna save
our data, where we're gonna put the data.

3
00:00:10.712 --> 00:00:14.335
So we're going to actually use a real
database here so if you don't have any

4
00:00:14.335 --> 00:00:17.859
experience with databases or
anything like that that's totally fine.

5
00:00:17.859 --> 00:00:20.642
We're gonna walk through
how to set this stuff up.

6
00:00:20.642 --> 00:00:22.795
And it's gonna be abstracted
away pretty well for

7
00:00:22.795 --> 00:00:25.109
us here with the origin that
we're going to be using.

8
00:00:25.109 --> 00:00:28.337
So you don't need to be a database
expert to get the best of this.

9
00:00:28.337 --> 00:00:30.983
So it's all good.

10
00:00:30.983 --> 00:00:34.930
So to set up the database,
we're going to use Postgres.

11
00:00:34.930 --> 00:00:39.325
The reason it's in Postgres because I
think it's just the most widely accepted

12
00:00:39.325 --> 00:00:41.040
standard database out there.

13
00:00:41.040 --> 00:00:45.203
I've been using it for a while now,
I usually use Mongo a lot, but

14
00:00:45.203 --> 00:00:49.696
I'm lately just using Postgres
because it's, why not switch it up.

15
00:00:49.696 --> 00:00:52.668
I feel like I was just kind of
capped out on Mongo at this point.

16
00:00:52.668 --> 00:00:54.700
But yeah, Postgres is really cool.

17
00:00:54.700 --> 00:00:58.249
But yeah, we need a Postgres database
to be able to work on this app.

18
00:00:58.249 --> 00:01:00.137
There's two ways I recommend doing this.

19
00:01:00.137 --> 00:01:02.677
One, if you already have Postgres,
Postgres on your computer,

20
00:01:02.677 --> 00:01:03.610
just start the server.

21
00:01:03.610 --> 00:01:04.399
You should be good.

22
00:01:04.399 --> 00:01:07.944
If you don't have Postgres on your
computer, you can download it on computer

23
00:01:07.944 --> 00:01:10.574
if you want to just by going
to the post Postgres website.

24
00:01:10.574 --> 00:01:13.478
The other way is you can just get
a hosted one and use it locally.

25
00:01:13.478 --> 00:01:15.103
So now that Heroku is gone,

26
00:01:15.103 --> 00:01:19.354
and you can't get a free hosted
Heroku free hosted Postgres database.

27
00:01:19.354 --> 00:01:22.103
I found that you can
actually get one on railway.

28
00:01:22.103 --> 00:01:27.101
So, if you go to railway dot app,
and you make a new project,

29
00:01:27.101 --> 00:01:32.295
sign in, whatever, click on new project,
and if you type in,

30
00:01:32.295 --> 00:01:36.411
what can we help with if
you just type in Postgres,

31
00:01:36.411 --> 00:01:39.743
you can see over here it says provision,

32
00:01:39.743 --> 00:01:44.913
provision PostgreSQL And click that.

33
00:01:50.112 --> 00:01:52.452
And it's gonna spin up
a Postgres database.

34
00:01:52.452 --> 00:01:55.620
It's going to do the best that it can and

35
00:01:55.620 --> 00:02:01.575
once it's done you can click on
settings or, I'm sorry, not settings.

36
00:02:06.259 --> 00:02:11.499
You can click on the actual database and
then you can click on connect and

37
00:02:11.499 --> 00:02:15.180
then here where it says
Postgres connection URL.

38
00:02:15.180 --> 00:02:16.426
You can just copy that.

39
00:02:16.426 --> 00:02:17.875
That's the URL that you want.

40
00:02:28.521 --> 00:02:33.619
So let's have that URL ready
if you're using railway.

41
00:02:33.619 --> 00:02:35.661
But if you already have postures on
your computer, you can use that.

42
00:02:35.661 --> 00:02:37.838
I'm using the one on my computer
because I never turn it off.

43
00:02:37.838 --> 00:02:40.416
It's always.

44
00:02:40.416 --> 00:02:43.301
But either is fine.

45
00:02:43.301 --> 00:02:44.918
Any questions on that?

46
00:02:48.847 --> 00:02:50.928
I think it's like free up till point.

47
00:02:50.928 --> 00:02:53.757
You get, like, some hours.

48
00:02:53.757 --> 00:02:55.917
It'll be more than what you need for
this course, but

49
00:02:55.917 --> 00:02:57.509
it's not going to last there forever.

50
00:02:57.509 --> 00:03:01.173
Like, maybe that was Heroku's downfall,
is that they just they were too generous.

51
00:03:01.173 --> 00:03:06.869
So, we're always like we're gonna
cut you off if you don't use it.

52
00:03:06.869 --> 00:03:08.815
Okay?

53
00:03:08.815 --> 00:03:14.054
So we want to do is once you have that
URL, we need to add that to our env file.

54
00:03:14.054 --> 00:03:17.368
So what we can do is if
you go to your repo,

55
00:03:17.368 --> 00:03:22.239
you need to add a file called dot
env on the route like this and

56
00:03:22.239 --> 00:03:28.186
inside of here you need to add
an environment variable call it database,

57
00:03:28.186 --> 00:03:36.549
underscore URL like that And
you need to set it to your database.

58
00:03:36.549 --> 00:03:41.002
So if you have the was it railway,
where is it at,

59
00:03:41.002 --> 00:03:45.458
if you had the railway one
you can copy railway and

60
00:03:45.458 --> 00:03:51.453
it will look at something like this or
you can paste that in there.

61
00:03:51.453 --> 00:03:59.203
And yeah, you can just you get to
save that and that should be fine.

62
00:03:59.203 --> 00:04:03.897
You can add I think you can add
something like schema public here.

63
00:04:03.897 --> 00:04:07.583
I think that does something with
the ORM that we're gonna use that makes

64
00:04:07.583 --> 00:04:10.232
it does introspection,
but it's not necessary.

65
00:04:10.232 --> 00:04:12.029
What I'm just gonna put it there,
I always have it there.

66
00:04:17.830 --> 00:04:18.343
Okay, and

67
00:04:18.343 --> 00:04:22.120
I think you can change this name here for
a different database name if you want.

68
00:04:22.120 --> 00:04:22.850
Yes.

69
00:04:22.850 --> 00:04:25.780
&gt;&gt; Thoughts on render versus railway?

70
00:04:25.780 --> 00:04:28.572
&gt;&gt; I have yet
to deploy anything on railway, so

71
00:04:28.572 --> 00:04:32.800
I can't speak to it other than
just using their databases.

72
00:04:32.800 --> 00:04:39.457
But I can talk about render and,
render feels like Heroku [LAUGH].

73
00:04:39.457 --> 00:04:44.094
It feels just like Heroku, you could take
that as good or bad if you'd liked Heroku.

74
00:04:44.094 --> 00:04:49.724
I liked Heroku, I thought was pretty cool
but railway seems like a lot of potential.

75
00:04:49.724 --> 00:04:53.249
I like their develop, I like their
dev experience from at least the docs

76
00:04:53.249 --> 00:04:56.833
that I've read and the videos that
I've watched but I haven't used it so

77
00:04:56.833 --> 00:04:58.981
I can't really give any opinions on it so.

78
00:04:58.981 --> 00:05:04.055
I don't know if someone has used I'd

79
00:05:04.055 --> 00:05:11.257
love to hear your thoughts,
but it looks cool okay,

80
00:05:11.257 --> 00:05:16.493
good to go there all right Next thing we

81
00:05:16.493 --> 00:05:22.400
want to do is we want
to initialize our ORM.

82
00:05:22.400 --> 00:05:25.025
Which is basically if you
don't know what ORM is,

83
00:05:25.025 --> 00:05:28.290
you can think of is like,
it's like an SDK for your database.

84
00:05:28.290 --> 00:05:29.486
That's, basically the answer.

85
00:05:29.486 --> 00:05:30.559
They should just call it that.

86
00:05:30.559 --> 00:05:31.957
I don't know why it's called ORM anymore.

87
00:05:31.957 --> 00:05:34.027
It should just be like, database SDK.

88
00:05:34.027 --> 00:05:35.974
That's literally what it is.

89
00:05:35.974 --> 00:05:37.970
We're using one called Prisma.

90
00:05:37.970 --> 00:05:40.860
Prisma is like kind of the standard
at this point when it comes to

91
00:05:40.860 --> 00:05:43.381
interacting with databases,
at least in my opinion.

92
00:05:43.381 --> 00:05:44.954
It's database agnostic.

93
00:05:44.954 --> 00:05:46.486
It works on every database.

94
00:05:46.486 --> 00:05:50.581
It has its own schema,
syntax that's really easy to use.

95
00:05:50.581 --> 00:05:51.778
It's pretty cool.

96
00:05:51.778 --> 00:05:59.225
So to do that, you can go on your terminal
and you can just type in NPX PRIs.

97
00:05:59.225 --> 00:06:00.569
I'm in.

98
00:06:03.356 --> 00:06:07.392
And you can see right now Prisma is like,
we tried to add a database URL but

99
00:06:07.392 --> 00:06:08.524
it already existed.

100
00:06:08.524 --> 00:06:13.123
Actually, if you wanna see how that works,
I can, well, you could delete the env file

101
00:06:13.123 --> 00:06:17.478
if you wanna see what it generates, but
you already added it so you don't need to.

102
00:06:17.478 --> 00:06:19.638
But it's basically the same,

103
00:06:19.638 --> 00:06:23.553
you got to set the database URL and
all this other stuff.

104
00:06:23.553 --> 00:06:28.929
And if you go and look, you'll see that
it added a Prisma folder to your repo.

105
00:06:28.929 --> 00:06:33.736
To open up Prisma folder,
you'll see there's a schema in there.

106
00:06:33.736 --> 00:06:34.964
And that scheme has these two things.

107
00:06:34.964 --> 00:06:40.194
It's got this generated client and
it's got this data source generated

108
00:06:40.194 --> 00:06:45.178
client is saying, so Prisma's SDK for
your database is generated.

109
00:06:45.178 --> 00:06:48.645
So the SDK that you have is different
than the one that I'll have.

110
00:06:48.645 --> 00:06:52.466
It gets generated on a command
because it's type safe.

111
00:06:52.466 --> 00:06:56.424
It's the types are generated based off
the schema that you write in here.

112
00:06:56.424 --> 00:06:59.936
So this is just saying, here is
the client file that I want you to use to

113
00:06:59.936 --> 00:07:02.498
generate my schema,
which is one that they made.

114
00:07:02.498 --> 00:07:03.431
So this is suggesting,

115
00:07:03.431 --> 00:07:06.051
just saying that you could probably
make your own if you want it to.

116
00:07:06.051 --> 00:07:08.348
I don't know why you would but
you probably could.

117
00:07:08.348 --> 00:07:12.589
And then data source db is just saying
what database we want, defaults to

118
00:07:12.589 --> 00:07:16.774
Postgres, and then what environment
variable or URL does it point to.

119
00:07:16.774 --> 00:07:18.298
And there we go, we got that.

