WEBVTT

1
00:00:00.000 --> 00:00:02.938
So we're gonna create
a greeting skeleton or

2
00:00:02.938 --> 00:00:05.730
I think someone had a better word for
this.

3
00:00:05.730 --> 00:00:06.344
What was the word?

4
00:00:06.344 --> 00:00:07.752
&gt;&gt; Shimmer.

5
00:00:07.752 --> 00:00:08.614
&gt;&gt; Shimmer, there it is.

6
00:00:08.614 --> 00:00:11.222
Yeah, the greeting shimmer.

7
00:00:11.222 --> 00:00:12.340
This was not gonna shimmer though.

8
00:00:12.340 --> 00:00:13.884
It's not gonna have that.

9
00:00:13.884 --> 00:00:17.762
The shimmer,
[LAUGH] it's not gonna have the shimmer.

10
00:00:17.762 --> 00:00:20.901
But I think it will,
I think this one does have the shimmer.

11
00:00:20.901 --> 00:00:21.921
We'll find out.

12
00:00:21.921 --> 00:00:24.607
I can't remember if I did this summer or
not.

13
00:00:24.607 --> 00:00:26.540
I think I might have.

14
00:00:26.540 --> 00:00:30.242
Yeah I do, animate pulse,
it's definitely gonna shimmer.

15
00:00:30.242 --> 00:00:34.566
Okay, so let's create a GreetingSkeleton,
tsx in our components folder,

16
00:00:39.333 --> 00:00:42.356
And there's no logic
here this is all styling.

17
00:00:42.356 --> 00:00:47.197
It's basically just HTML but I'll walk
through it if you wanna see how shimmer

18
00:00:47.197 --> 00:00:49.997
works or tell when it's quite interesting.

19
00:00:49.997 --> 00:00:51.581
But nothing special here.

20
00:00:53.801 --> 00:01:01.068
Basically, what we're doing here is we're
just creating empty DIVS with spacings and

21
00:01:01.068 --> 00:01:07.859
backgrounds that look like the shape of
the element that it's trying to imitate.

22
00:01:13.605 --> 00:01:15.294
That's it,
it's not really doing anything else.

23
00:01:17.984 --> 00:01:19.577
So we have our greeting skeleton.

24
00:01:23.684 --> 00:01:28.699
We exported it and
now what we wanna do is we wanna bring

25
00:01:28.699 --> 00:01:34.170
that into our page and
pass that as a fallback to suspense.

26
00:01:34.170 --> 00:01:38.918
Which is wrapped around the greetings
component that we already brought in.

27
00:01:41.020 --> 00:01:44.620
So let's do that.
Let's go back to our dashboard homepage.

28
00:01:44.620 --> 00:01:48.235
We're gonna wrap the greeting
in the suspense component.

29
00:01:51.079 --> 00:01:53.956
We're gonna give it a fallback
of greeting skeleton.

30
00:01:58.142 --> 00:01:58.642
Like that.

31
00:02:02.828 --> 00:02:06.304
Okay, so then if we go back here and
refresh,

32
00:02:06.304 --> 00:02:11.430
we get that skeleton instead,
while it's loading and then boom.

33
00:02:11.430 --> 00:02:14.879
Then we get our actual component

34
00:02:17.191 --> 00:02:20.801
I'm gonna try to make that component for

35
00:02:20.801 --> 00:02:26.864
width because it is actually bothered me,
it should be full width.

36
00:02:26.864 --> 00:02:29.978
I was because its parent isn't.

37
00:02:29.978 --> 00:02:32.135
That's interesting.

38
00:02:32.135 --> 00:02:33.702
It's just CSS stuff.

39
00:02:42.324 --> 00:02:43.272
Yeah, okay.

40
00:02:43.272 --> 00:02:44.676
Yeah I figured, where's this?

41
00:02:44.676 --> 00:02:50.873
This thing is, This one,.

42
00:02:50.873 --> 00:02:56.811
This one 101, that's a 100%.

43
00:02:56.811 --> 00:03:02.293
&gt;&gt; [INAUDIBLE]
&gt;&gt; Yeah, that's all I was about to add but

44
00:03:02.293 --> 00:03:04.980
I know why one of one wouldn't
have done the same thing.

45
00:03:04.980 --> 00:03:09.969
Yeah, there it is much better.

46
00:03:09.969 --> 00:03:11.980
Cool, okay.

47
00:03:11.980 --> 00:03:15.331
Any questions on that?

48
00:03:18.949 --> 00:03:23.519
I mean, you could have gotten
a similar result to this

49
00:03:23.519 --> 00:03:28.000
without server components and
client components.

50
00:03:28.000 --> 00:03:34.205
But the thing to remember is what's
actually happening in the background.

51
00:03:34.205 --> 00:03:39.357
There is no JavaScript here in the client
needed for this component because it

52
00:03:39.357 --> 00:03:44.366
happened on the server and it was
streamed in cuz it's a server component.

53
00:03:44.366 --> 00:03:47.880
The data happened on the server,
the data fetching happened.

54
00:03:47.880 --> 00:03:49.815
So that's one thing to remember.

55
00:03:49.815 --> 00:03:56.012
And then two, we don't have to set up the
conditional logic on, is there a loading?

56
00:03:56.012 --> 00:03:59.815
So you basically have to make a hook
to see if it's loading or not.

57
00:03:59.815 --> 00:04:01.676
And then at that point
you're on the client.

58
00:04:01.676 --> 00:04:05.724
So we got all of that logic for
free on when to toggle or

59
00:04:05.724 --> 00:04:11.900
loading animation component and not
without sitting JavaScript to the climb.

60
00:04:11.900 --> 00:04:14.601
Which is kinda crazy.

61
00:04:14.601 --> 00:04:17.487
Other than the JavaScript that Next.js and
React already has,

62
00:04:17.487 --> 00:04:20.540
because Suspense is part of React,
so that's already cacheable.

63
00:04:20.540 --> 00:04:22.402
It's predictable, so
it's cacheable, it never changes.

64
00:04:22.402 --> 00:04:25.678
Next.js, whatever they add to
it is cacheable and predictable,

65
00:04:25.678 --> 00:04:26.622
it never changes.

66
00:04:26.622 --> 00:04:30.110
Your code is the only thing that changes,
so that's why it's hard to cache.

67
00:04:30.110 --> 00:04:31.665
But all this happened on the server.

68
00:04:31.665 --> 00:04:35.586
Pretty cool.

69
00:04:35.586 --> 00:04:36.799
&gt;&gt; Just a take note.

