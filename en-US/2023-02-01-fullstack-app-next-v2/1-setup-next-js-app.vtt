WEBVTT

1
00:00:00.350 --> 00:00:04.814
So first thing is let's install
Next.js and let's get started.

2
00:00:04.814 --> 00:00:07.206
So like I said, this is from scratch,
there's no repo.

3
00:00:07.206 --> 00:00:09.771
We're just gonna do this
right from nothing.

4
00:00:09.771 --> 00:00:12.501
So I'm just gonna go in here and

5
00:00:12.501 --> 00:00:17.436
I'm gonna make a new folder and
I'm gonna do just that.

6
00:00:17.436 --> 00:00:20.424
So, oop, this thing just decided
to go over here, there we go.

7
00:00:20.424 --> 00:00:24.645
And the best way to do
this is just to say npx,

8
00:00:24.645 --> 00:00:29.794
make this a little bigger,
npx create-next-app.

9
00:00:29.794 --> 00:00:33.190
And actually I have the copy and
paste here, just create-next-app@latest.

10
00:00:34.450 --> 00:00:39.870
And you want to pass this
--experimental-app flag.

11
00:00:39.870 --> 00:00:46.033
This is so we can use the app
directory that Next.js 13 has in beta.

12
00:00:46.033 --> 00:00:49.515
And that enables us to get some of
the new features like server components,

13
00:00:49.515 --> 00:00:51.007
client components, caching,

14
00:00:51.007 --> 00:00:55.780
all the really cool stuff that's covered
in the V1 intro of the Next.js course.

15
00:00:55.780 --> 00:00:57.404
So be sure to do that.

16
00:00:57.404 --> 00:00:58.721
Hit Enter.

17
00:00:58.721 --> 00:01:00.070
Call it whatever you want.

18
00:01:00.070 --> 00:01:03.170
I'm gonna call it project app.

19
00:01:03.170 --> 00:01:04.480
I'm using TypeScripts.

20
00:01:04.480 --> 00:01:07.055
You don't have to use TypeScripts
if you don't want to.

21
00:01:07.055 --> 00:01:11.165
I do recommend using ESLints and
let it do its job.

22
00:01:15.243 --> 00:01:20.158
So while that's installing, we can just
kinda go through these dependencies here

23
00:01:20.158 --> 00:01:23.830
that are unrelated to Next.js
that we also have to install.

24
00:01:23.830 --> 00:01:26.750
This is a full stack app,
we're gonna need some more dependencies.

25
00:01:26.750 --> 00:01:27.650
So here they are.

26
00:01:27.650 --> 00:01:31.677
If you look at the notes here, I put them
here in the JSON file because I think it's

27
00:01:31.677 --> 00:01:35.470
just simple just to put this in your
package JSON and hit npm-install than it

28
00:01:35.470 --> 00:01:39.230
is to type it all out in the terminal
in the npm-install with all the names.

29
00:01:40.700 --> 00:01:44.310
So what you can do is,
you can see that this is done installing.

30
00:01:44.310 --> 00:01:48.774
We're going to open it up in VS Code,
Here.

31
00:01:48.774 --> 00:01:52.361
Oops, I guess I saw cd into it.

32
00:01:54.113 --> 00:01:55.992
Here we go.

33
00:01:55.992 --> 00:01:57.910
And go to our package.json.

34
00:01:58.960 --> 00:02:01.890
Here in our dependencies,
here's everything that was installed.

35
00:02:04.040 --> 00:02:08.437
And what I'm gonna do now is
I'm just going to take all

36
00:02:08.437 --> 00:02:13.339
these other dependencies that
are unrelated to Next.js.

37
00:02:17.850 --> 00:02:21.902
And I'm just going to put them in our
dependencies, and I'll probably have some

38
00:02:21.902 --> 00:02:26.206
duplicates, and if you have duplicates,
you can delete them, it's totally fine.

39
00:02:26.206 --> 00:02:27.596
And I'm gonna save that.

40
00:02:27.596 --> 00:02:28.511
All right, so

41
00:02:28.511 --> 00:02:34.680
we need to install some other dependencies
as well in addition to the Next.js stuff.

42
00:02:34.680 --> 00:02:38.702
So if you copy the dependencies
that I have in the notes,

43
00:02:38.702 --> 00:02:43.080
you can just add them to your
dependencies object, like so.

44
00:02:43.080 --> 00:02:44.237
I don't have extra object here.

45
00:02:44.237 --> 00:02:48.177
Yeah, so you can just add them here,
and then all you have to do is just do

46
00:02:48.177 --> 00:02:51.730
an npm-install like that and
it'll install them.

47
00:02:51.730 --> 00:02:55.713
So I think this is way quicker if you
already have it versus just typing them

48
00:02:55.713 --> 00:03:02.290
all in a CLI like that So I got those.

49
00:03:02.290 --> 00:03:05.465
And I believe we have some dev
dependencies we need to install.

50
00:03:05.465 --> 00:03:09.249
So we got some dev dependencies,
we'll copy those,

51
00:03:11.233 --> 00:03:15.388
And we'll go back to the code here.

52
00:03:15.388 --> 00:03:20.197
And you're gonna say devDependencies and
paste those in.

53
00:03:24.999 --> 00:03:29.011
And we're gonna go through all of these,
why we need them, what they do, but for

54
00:03:29.011 --> 00:03:30.962
now, we're just getting installed.

55
00:03:30.962 --> 00:03:32.562
You just run np- install again.

56
00:03:35.355 --> 00:03:36.397
Yes?

57
00:03:36.397 --> 00:03:41.911
&gt;&gt; Do you know why the create-next-app
doesn't put TypeScript and

58
00:03:41.911 --> 00:03:45.365
ESLint and whatnot in dev dependencies?

59
00:03:45.365 --> 00:03:45.942
&gt;&gt; That's a good question.

60
00:03:45.942 --> 00:03:51.733
So I think the whole dev
dependencies versus dependencies

61
00:03:51.733 --> 00:03:56.112
subject is not as
important as it used to be.

62
00:03:56.112 --> 00:03:59.974
I think it was really important
back when Node was on Heroku and

63
00:03:59.974 --> 00:04:03.626
they had all these build packs and
all this stuff, right?

64
00:04:03.626 --> 00:04:07.126
And there was a difference between
installing your dev dependencies and

65
00:04:07.126 --> 00:04:08.510
not your dev dependencies.

66
00:04:08.510 --> 00:04:12.495
But I think now the way that platforms
deploy your applications, like a platform

67
00:04:12.495 --> 00:04:16.909
like Vercel or Netlify, they're just gonna
install everything, because you have to.

68
00:04:16.909 --> 00:04:20.622
There's so much building that needs to
go on, so they're just so used to that.

69
00:04:20.622 --> 00:04:25.309
So I think for the most part, unless
you're making a library that's gonna be

70
00:04:25.309 --> 00:04:29.939
on npm, it doesn't really matter if
it's in-depth dependencies or not.

71
00:04:29.939 --> 00:04:33.756
Because it's probably gonna get installed
on every environment that it's on,

72
00:04:33.756 --> 00:04:37.639
whether it's on your teammate's computer
or if it's been deployed somewhere.

73
00:04:37.639 --> 00:04:42.550
So it could be that, it could be that
Next.js is where application framework, so

74
00:04:42.550 --> 00:04:46.250
everything is a dependency and
nothing's a dev dependency,

75
00:04:46.250 --> 00:04:49.685
versus a library where you
might have dev dependencies.

76
00:04:52.872 --> 00:04:54.497
Good question.

77
00:04:57.120 --> 00:05:01.029
Okay, and then just to walk through,
just to get you back up to speed and

78
00:05:01.029 --> 00:05:04.350
familiar with Next.js,
we have the scripts here.

79
00:05:04.350 --> 00:05:06.870
The def script is what we run
to start our server locally.

80
00:05:08.170 --> 00:05:12.230
The build script is what a platform
would run when they deploy it and start,

81
00:05:12.230 --> 00:05:14.177
it's what happens in production.

82
00:05:14.177 --> 00:05:16.860
And lint does exactly what it sounds like,
it lints.

83
00:05:16.860 --> 00:05:20.956
Well, most of you is using the dev here
until we get to deployment much later on

84
00:05:20.956 --> 00:05:22.476
where we're gonna deploy.

85
00:05:22.476 --> 00:05:23.780
But for now,
we're just gonna be doing Next.dev.

86
00:05:25.620 --> 00:05:30.258
And just a quick tour around Next.js here,
so we have this new app directory,

87
00:05:30.258 --> 00:05:34.475
which is now the pages directory or
what the pages directory used to be,

88
00:05:34.475 --> 00:05:36.180
as far as like making pages.

89
00:05:37.480 --> 00:05:41.855
We also still have the pages directory
here, but it's only used for

90
00:05:41.855 --> 00:05:45.789
API routes now, no longer used for
actual pages on the site.

91
00:05:45.789 --> 00:05:48.347
And then everything else
is pretty much the same.

92
00:05:48.347 --> 00:05:51.496
Only thing you might find
different here in the next config.

93
00:05:51.496 --> 00:05:54.197
You'll see experimentalapp.true.

94
00:05:54.197 --> 00:05:57.200
That's gonna be past that flag,
so it added it for us.

95
00:05:57.200 --> 00:06:02.737
This is so we can actually use the app
directory inside of Next.js V13.

96
00:06:02.737 --> 00:06:04.904
Wthout this, we won't be able to use it.

97
00:06:06.361 --> 00:06:08.111
Cool, any questions on this?

98
00:06:10.987 --> 00:06:15.992
No, and if you want just to check
your sanity, you can just run

99
00:06:15.992 --> 00:06:20.981
npm run dev, Which I have so
many things running.

100
00:06:20.981 --> 00:06:23.573
I need to stop some things.

101
00:06:25.397 --> 00:06:26.233
And you can go here.

102
00:06:26.233 --> 00:06:30.415
You should see this if you
installed everything right, so.

103
00:06:30.415 --> 00:06:37.325
But don't worry, we're going to get rid
of this, even though it looks nice.

104
00:06:37.325 --> 00:06:40.901
Okay, let's keep it moving.

105
00:06:40.901 --> 00:06:44.674
So let's talk about all
the folders that we're gonna make.

106
00:06:44.674 --> 00:06:49.439
And again, yes,
some of this is gonna be convention,

107
00:06:49.439 --> 00:06:53.686
but the other part is gonna
be just my thoughts and

108
00:06:53.686 --> 00:06:58.781
my opinions on how I'll like
to organize my application.

109
00:06:58.781 --> 00:07:01.150
So there's really no right or wrong here.

110
00:07:01.150 --> 00:07:02.813
It's just kinda how I like to do things.

111
00:07:04.694 --> 00:07:08.947
So the first thing is,
we talked about the app directory, right?

112
00:07:08.947 --> 00:07:13.713
And this is where all pages go, pretty
much everything related to pages and

113
00:07:13.713 --> 00:07:16.664
layouts and loading states and
error states,

114
00:07:16.664 --> 00:07:19.250
everything the app directory enables.

115
00:07:20.610 --> 00:07:24.180
But then we also have the assets folder.

116
00:07:24.180 --> 00:07:29.092
So if we go here, there isn't one, because
Next.js doesn't have a convention for

117
00:07:29.092 --> 00:07:30.697
something called assets.

118
00:07:30.697 --> 00:07:34.508
That is something that I like to have,
so I'm gonna make a new folder here and

119
00:07:34.508 --> 00:07:35.891
I'm gonna call it assets.

120
00:07:35.891 --> 00:07:38.203
And my icons,
I get this really cool icon here.

121
00:07:41.156 --> 00:07:46.442
Actually, I think the zoom level is not
right, I'm gonna change the zoom level.

122
00:07:46.442 --> 00:07:47.123
There we go.

123
00:07:51.270 --> 00:07:55.542
So assets is basically where I'm just
gonna put images, things like that,

124
00:07:55.542 --> 00:07:56.888
you can put them there.

125
00:08:00.338 --> 00:08:04.713
Components, this is also not
a conventional folder that Next.js cares

126
00:08:04.713 --> 00:08:05.222
about.

127
00:08:05.222 --> 00:08:09.864
It's just where I put
my non-page components.

128
00:08:09.864 --> 00:08:10.800
Let's call it components.

129
00:08:10.800 --> 00:08:15.256
Some people will have a components folder
where they have more complicated bigger

130
00:08:15.256 --> 00:08:19.970
components, not yet pages, but then they
have a UI folder where it's these buttons,

131
00:08:19.970 --> 00:08:24.186
inputs, these little bitty components
that you'll find in component lib.

132
00:08:24.186 --> 00:08:26.800
This just too noisy for me, I'm gonna
put everything in a components folder.

133
00:08:26.800 --> 00:08:29.000
So that's kinda my vibe.

134
00:08:29.000 --> 00:08:33.220
It's not right, it's not wrong, it's just,
I don't like organizing all that stuff.

135
00:08:33.220 --> 00:08:36.390
But I can see if you were a huge team or
a huge code base, you would do that.

136
00:08:38.150 --> 00:08:39.570
Another folder I like to use is lib.

137
00:08:40.630 --> 00:08:48.006
Lib is just basically all my non-JSX,
all my non-React code that I wanna use.

138
00:08:48.006 --> 00:08:52.745
So these are utility functions
like hashing passwords for

139
00:08:52.745 --> 00:08:57.096
the database,
signing JSON web tokens, API file for

140
00:08:57.096 --> 00:09:01.520
us to talk to our API and
just abstracts that away.

141
00:09:01.520 --> 00:09:05.580
So everything that's non related to
JSX and React goes in the lib folder.

142
00:09:05.580 --> 00:09:07.130
It's like our own personal module folder.

143
00:09:10.190 --> 00:09:11.306
We still have pages.

144
00:09:11.306 --> 00:09:14.769
Again, pages is mostly just
gonna be used for API.

145
00:09:14.769 --> 00:09:17.585
It's not really gonna be used for
anything else, but it's here.

146
00:09:17.585 --> 00:09:21.039
We will be making API routes in this
course, so we will be using it.

147
00:09:21.039 --> 00:09:22.687
It id a full stack course, so

148
00:09:22.687 --> 00:09:27.658
you can't really go far without making API
at least when it comes to mutating things.

149
00:09:27.658 --> 00:09:31.953
You can go for now just from
getting stuff, but mutating,, no.

150
00:09:31.953 --> 00:09:36.045
And then the last one I
like to have is styles.

151
00:09:36.045 --> 00:09:38.675
So styles is exactly what it sounds like.

152
00:09:38.675 --> 00:09:41.639
It's where I put most of my styles.

153
00:09:41.639 --> 00:09:42.354
In this course,

154
00:09:42.354 --> 00:09:45.480
we don't really have a lot of styles
cuz we're gonna be using Tailwind.

155
00:09:45.480 --> 00:09:50.327
Because if we made our own custom styles,
I mean 90% of the course will

156
00:09:50.327 --> 00:09:54.069
just be us writing CSS, and
no, I don't wanna do that.

157
00:09:54.069 --> 00:09:58.065
Even though Tailwind has a lot of classes,
so it still feels like you're writing

158
00:09:58.065 --> 00:10:01.561
a lot, at least in my opinion, but
I'm not a Tailwind hater anymore.

159
00:10:01.561 --> 00:10:04.644
I've come to terms with it that it's good,
so let's do a lot of classes.

160
00:10:04.644 --> 00:10:09.058
This isn't right or wrong, this is
just how I like to organize my app.

161
00:10:09.058 --> 00:10:10.420
I pretty much do it for every single app.

