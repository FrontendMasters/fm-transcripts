WEBVTT

1
00:00:00.993 --> 00:00:05.484
What's really helpful is when you're
building out application that

2
00:00:05.484 --> 00:00:08.386
has like a UI is to have
real data to work with.

3
00:00:08.386 --> 00:00:12.631
Because how are you going to build
out those actual components,

4
00:00:12.631 --> 00:00:15.547
you have to mock that
data out at some point.

5
00:00:15.547 --> 00:00:17.266
And there's a few ways you
can mock the data out.

6
00:00:17.266 --> 00:00:20.592
You can hard code the data right
into the components with text or

7
00:00:20.592 --> 00:00:21.859
whatever you wanna do.

8
00:00:21.859 --> 00:00:25.045
That's cool, but when you get the real
data in there, you're gonna be changing so

9
00:00:25.045 --> 00:00:25.555
many files.

10
00:00:25.555 --> 00:00:27.785
So I typically don't
like to mock that low.

11
00:00:27.785 --> 00:00:29.667
Another step up from that would be,

12
00:00:29.667 --> 00:00:33.577
I'm gonna create this data file that's
just got hard-coded JSON in it.

13
00:00:33.577 --> 00:00:36.723
And I'll just pull that in wherever
I want, and that'll be my mocks.

14
00:00:36.723 --> 00:00:39.559
And I think that's actually
a good approach as well.

15
00:00:39.559 --> 00:00:42.951
Because when it's time to replace
it with actual database stuff,

16
00:00:42.951 --> 00:00:46.298
it's just get rid of this file,
replace it with a database call.

17
00:00:46.298 --> 00:00:50.152
But I'm gonna go a step further up and
say, we should just mock the database.

18
00:00:50.152 --> 00:00:54.914
So we should just put some seed data in
the database, just give it some fake data.

19
00:00:54.914 --> 00:00:59.020
That way we can write our code assuming
that everything is already hooked up, so

20
00:00:59.020 --> 00:01:03.185
we don't have to go back to our code later
on when the back end engineer is done with

21
00:01:03.185 --> 00:01:07.318
the routes, and now I got to replace this
fake data that I had and use real stuff.

22
00:01:07.318 --> 00:01:11.641
Well, if we do it this way, if we see the
database, our code won't have to change

23
00:01:11.641 --> 00:01:15.348
even though we switch over to production,
it will be the same thing.

24
00:01:15.348 --> 00:01:16.244
So that's what we're gonna do.

25
00:01:16.244 --> 00:01:17.531
We're gonna see the database.

26
00:01:17.531 --> 00:01:22.453
And seeing the database just means
we're going to put fake data in

27
00:01:22.453 --> 00:01:25.058
the database programmatically.

28
00:01:25.058 --> 00:01:26.795
That's literally what we're gonna do.

29
00:01:26.795 --> 00:01:29.142
So let's do it.

30
00:01:29.142 --> 00:01:34.519
First thing we need to do is create
a seed.ts, we can put it anywhere,

31
00:01:34.519 --> 00:01:38.269
I'm going to put it inside
of our prisma folder.

32
00:01:45.029 --> 00:01:47.940
Like that.
[INAUDIBLE] put wherever you want, but

33
00:01:47.940 --> 00:01:50.559
I'm gonna keep everything together.

34
00:01:50.559 --> 00:01:53.709
So put inside the prisma folder.

35
00:01:53.709 --> 00:01:56.484
And just like everything else,
I have all the code here.

36
00:01:56.484 --> 00:01:59.277
So we're gonna look at it, but
just to walk you through what it is.

37
00:01:59.277 --> 00:02:04.428
I don't know why this isn't syntax
highlighting like the other stuff is,

38
00:02:04.428 --> 00:02:07.942
but this one's just a lot
of inserting big data, so

39
00:02:07.942 --> 00:02:11.154
we'll put it in here and
we'll talk about it.

40
00:02:11.154 --> 00:02:12.099
It's not so important.

41
00:02:12.099 --> 00:02:18.738
So here we have a few things happening.

42
00:02:18.738 --> 00:02:19.670
So let's just walk through it.

43
00:02:19.670 --> 00:02:23.887
So the first one is,
we have this main function here,

44
00:02:23.887 --> 00:02:28.763
which basically is just a function
that gets called when we run

45
00:02:28.763 --> 00:02:33.544
the seed script over and
Prisma is gonna run the seed script,

46
00:02:33.544 --> 00:02:38.173
and all we're gonna do is use
our client to observe a user.

47
00:02:38.173 --> 00:02:41.807
If you don't know upsert is
basically mean find or create.

48
00:02:41.807 --> 00:02:44.672
If it doesn't exist,
create this thing, that's upsert is.

49
00:02:44.672 --> 00:02:49.476
So we're just gonna insert
a fake user that has this email,

50
00:02:49.476 --> 00:02:54.278
has this first name this last name,
has this password, and

51
00:02:54.278 --> 00:02:57.372
does all this, it creates a project.

52
00:02:57.372 --> 00:03:01.595
That project has some fake project names,
and then we're gonna create some tasks

53
00:03:01.595 --> 00:03:04.915
based off those projects, and
we're gonna try to insert them.

54
00:03:04.915 --> 00:03:06.767
If you try to run this right now,
it'll break.

55
00:03:06.767 --> 00:03:08.136
It's a lot of stuff we don't have.

56
00:03:08.136 --> 00:03:10.540
So, you can't run this yet.

57
00:03:10.540 --> 00:03:12.161
But that's basically what
the seed script is doing.

58
00:03:12.161 --> 00:03:17.672
So we gotta fix a few things to get the
seed script to run and then we can do it.

59
00:03:17.672 --> 00:03:22.461
So the first thing is you might
have noticed that there's

60
00:03:22.461 --> 00:03:26.670
like these @/lib/db,
all this stuff up here.

61
00:03:26.670 --> 00:03:31.367
There's this really cool thing you
can do in type script if you're using

62
00:03:31.367 --> 00:03:32.296
type script.

63
00:03:32.296 --> 00:03:38.431
If you to the tsconfig,
you can go down to the compiler options.

64
00:03:38.431 --> 00:03:41.061
And you could do something called aliases.

65
00:03:45.634 --> 00:03:48.094
I'm sorry, it's called paths.

66
00:03:48.094 --> 00:03:49.221
There we go.

67
00:03:49.221 --> 00:03:52.544
So you can have something
called paths in here.

68
00:03:52.544 --> 00:03:57.006
And paths are basically
aliases to other paths.

69
00:03:57.006 --> 00:04:02.761
So I can say I wouldn't make a path for

70
00:04:02.761 --> 00:04:05.925
@/lib like that.

71
00:04:05.925 --> 00:04:13.413
And I can point it to
everything inside of lib,

72
00:04:13.413 --> 00:04:19.367
so I can say this it'll be like that.

73
00:04:19.367 --> 00:04:23.392
Why is it so freaking out?

74
00:04:23.392 --> 00:04:28.745
Just one star, sorry.

75
00:04:28.745 --> 00:04:32.581
Do you want one star, two stars,
how many stars do you want?

76
00:04:32.581 --> 00:04:34.497
You notice there's is one star.

77
00:04:34.497 --> 00:04:37.379
&gt;&gt; I would just say one star and my notes.

78
00:04:37.379 --> 00:04:39.596
Well, it's freaking out
on me on one star so.

79
00:04:39.596 --> 00:04:42.898
No, that one's not said to you forget to.

80
00:04:42.898 --> 00:04:44.851
I gotta do that.

81
00:04:44.851 --> 00:04:48.610
No, why is this thing freaking out?

82
00:04:48.610 --> 00:04:50.267
&gt;&gt; I think it just has to catch up.

83
00:04:50.267 --> 00:04:52.287
&gt;&gt; I think I'm moving too fast.

84
00:04:52.287 --> 00:04:53.303
Yeah, I'm moving too fast.

85
00:04:53.303 --> 00:04:54.591
I'm like, why is this thing freaking out?

86
00:04:54.591 --> 00:04:55.147
Okay.

87
00:04:55.147 --> 00:04:55.762
There we go.

88
00:04:55.762 --> 00:04:59.967
So lib, and what I like to do is,
I like to set and a path for

89
00:04:59.967 --> 00:05:05.879
pretty much every single thing that's
on the route that's gonna be imported.

90
00:05:05.879 --> 00:05:08.772
So I can make a path for components.

91
00:05:08.772 --> 00:05:13.569
I can make a path for what's another one?

92
00:05:13.569 --> 00:05:16.431
Styles, assets.

93
00:05:16.431 --> 00:05:17.840
Probably wouldn't make up for

94
00:05:17.840 --> 00:05:21.157
app cuz you're never gonna import
anything in the app folder anywhere.

95
00:05:21.157 --> 00:05:23.750
Those things never get imported.

96
00:05:23.750 --> 00:05:25.403
You just don't do that.

97
00:05:25.403 --> 00:05:27.149
So yeah, we'll be doing that a lot here.

98
00:05:27.149 --> 00:05:28.722
So I'm just gonna go ahead and
make some for the rest.

99
00:05:28.722 --> 00:05:30.959
I'll say this will be for components,
and this will be opponents.

100
00:05:38.014 --> 00:05:39.244
We do one for assets,

101
00:06:01.190 --> 00:06:04.497
There we go.

102
00:06:04.497 --> 00:06:06.525
And then to go back to seed,

103
00:06:06.525 --> 00:06:11.122
no I had this thing must be like
slow catching up or something.

104
00:06:13.548 --> 00:06:14.838
But it's not liking it.

105
00:06:17.023 --> 00:06:17.936
That's all right.

106
00:06:17.936 --> 00:06:19.696
We can do it the hard way.

107
00:06:19.696 --> 00:06:20.751
Just type the path out.

108
00:06:20.751 --> 00:06:24.725
So, we'll just go straight into lib and
just grab it.

109
00:06:24.725 --> 00:06:26.859
I don't know why the things messing up.

110
00:06:26.859 --> 00:06:33.885
So we got our db here And
then the other thing we need to do is

111
00:06:33.885 --> 00:06:37.453
the hash password we haven't gotten there
yet so we're not gonna do hash password.

112
00:06:37.453 --> 00:06:40.418
So right now we're going
to break the rules and

113
00:06:40.418 --> 00:06:43.318
just do a plain text password for
a seed user.

114
00:06:43.318 --> 00:06:49.086
So right now we're getting this error
on Prisma I've lost my train of

115
00:06:49.086 --> 00:06:55.961
thought there, so you can see that as type
checks if I go into Prisma say db.user.

116
00:06:55.961 --> 00:06:59.439
First of all it knows
that we have a user dot,

117
00:06:59.439 --> 00:07:02.542
I could do something like create here.

118
00:07:02.542 --> 00:07:06.047
And then I can call create, and
I can say create an aggregate data,

119
00:07:06.047 --> 00:07:10.177
and then right now it's gonna require me
to pass in everything that a user needs

120
00:07:10.177 --> 00:07:11.007
to be created.

121
00:07:11.007 --> 00:07:15.749
So you can see right here,
our user needs an email,

122
00:07:15.749 --> 00:07:20.049
first name, a last name,
I think a password,

123
00:07:20.049 --> 00:07:25.366
maybe even something else
cuz it's still freaking out.

124
00:07:25.366 --> 00:07:28.462
So it just knows all
the stuff that you need.

125
00:07:28.462 --> 00:07:34.149
So, right now I believe what it's saying
is for the email is that [INAUDIBLE].

126
00:07:40.339 --> 00:07:46.841
It thinks email doesn't exist on where,
so let's go look at our schema.

127
00:07:46.841 --> 00:07:48.781
It's right there.

128
00:07:48.781 --> 00:07:50.555
Let's do that.

129
00:07:50.555 --> 00:07:57.847
And then we'll have to just
run the Generator again.

130
00:07:57.847 --> 00:07:58.954
No, there it is.

131
00:07:58.954 --> 00:08:02.198
I guess I wanted it to be unique,
good catch.

132
00:08:02.198 --> 00:08:05.239
I thought that was only for find unique,

133
00:08:05.239 --> 00:08:09.361
I guess maybe upsert is restricted for
unique as well.

134
00:08:10.624 --> 00:08:14.213
So, there you go,
I'm learning stuff everyday.

135
00:08:14.213 --> 00:08:20.321
Upsert is what's called a, what is
the word that I was looking for it?

136
00:08:20.321 --> 00:08:23.286
It's when you right?

137
00:08:23.286 --> 00:08:27.416
So if you want to create code where it
does the same thing every single time no

138
00:08:27.416 --> 00:08:31.251
matter how many times you call it, it's
something you would use in the case of

139
00:08:31.251 --> 00:08:35.204
a transaction so you don't have to write
a bunch of every statements to roll back

140
00:08:35.204 --> 00:08:38.162
things you can just do up cert so
it's very useful for that.

141
00:08:38.162 --> 00:08:41.751
I usually use it a lot in places
where I'm talking with Stripe.

142
00:08:41.751 --> 00:08:45.913
So if someone signs up and then make them
an account on stripe and you do all this,

143
00:08:45.913 --> 00:08:49.579
but in the process, something broke,
you gotta undo all this stuff,

144
00:08:49.579 --> 00:08:50.654
you can use upsert.

145
00:08:50.654 --> 00:08:55.548
So you don't have to go back and
roll everything back.

146
00:08:55.548 --> 00:08:57.090
All right, so we got that.

147
00:08:57.090 --> 00:08:59.504
Now, the other thing we need to do.

148
00:08:59.504 --> 00:09:02.312
&gt;&gt; So upsert isn't like all or nothing?

149
00:09:02.312 --> 00:09:07.427
Upsert, it's basically

150
00:09:07.427 --> 00:09:11.615
saying, find this.

151
00:09:11.615 --> 00:09:19.183
If you do apply these updates,
if you don't find it, make it with this.

152
00:09:19.183 --> 00:09:21.266
&gt;&gt; So, update or create?

153
00:09:21.266 --> 00:09:22.417
&gt;&gt; Yeah.

154
00:09:25.486 --> 00:09:27.463
Okay?

155
00:09:27.463 --> 00:09:32.479
The other thing we need to do is we
need to tell prisma about the seed

156
00:09:32.479 --> 00:09:38.244
because it's gonna do some pretty cool
stuff for us when we do migrations.

157
00:09:38.244 --> 00:09:42.710
But before we do that, the seed
script is not gonna run in the same

158
00:09:42.710 --> 00:09:46.765
TypeScript environment that
our project is gonna run in,

159
00:09:46.765 --> 00:09:50.513
because the project has
a different configuration.

160
00:09:50.513 --> 00:09:56.604
So we're gonna make another tsconfig file
specifically for the seed script, which

161
00:09:56.604 --> 00:10:02.452
is exactly the same tsconfig file that
we already have, with one thing changed.

162
00:10:02.452 --> 00:10:04.502
And that's gonna be the compiler option.

163
00:10:04.502 --> 00:10:08.342
For the seed script to run,
we have to have compiler or I'm sorry,

164
00:10:08.342 --> 00:10:10.477
the module option to module esnext.

165
00:10:10.477 --> 00:10:13.039
But it's got to be common JS.

166
00:10:13.039 --> 00:10:14.684
But next JS needs it to be esnext.

167
00:10:14.684 --> 00:10:15.986
We're just gonna make another one.

168
00:10:15.986 --> 00:10:17.339
And just point it to that.

169
00:10:17.339 --> 00:10:21.969
So I'm just gonna copy everything that's
in here, make a new file on the routes.

170
00:10:21.969 --> 00:10:25.500
We're gonna call it,
what did I call it in here?

171
00:10:25.500 --> 00:10:29.062
I think I called it a tsconfig-seed.json.

172
00:10:29.062 --> 00:10:30.148
So I'll just do that.

173
00:10:36.159 --> 00:10:39.704
Paste that, literally the same thing.

174
00:10:39.704 --> 00:10:43.336
Only differences you can see right
here is the module says Common_JS

175
00:10:55.364 --> 00:10:56.629
All right, so we got that.

176
00:11:01.301 --> 00:11:04.787
And the last thing is just
to tell Prisma about it.

177
00:11:04.787 --> 00:11:06.414
So this is really simple.

178
00:11:06.414 --> 00:11:09.780
All we have to do is go to
the package-json anywhere on here,

179
00:11:09.780 --> 00:11:10.573
on the route.

180
00:11:10.573 --> 00:11:11.866
Don't put it in the scripts.

181
00:11:11.866 --> 00:11:13.633
Don't put it in dependencies.

182
00:11:13.633 --> 00:11:15.418
It's on the route of the package-json so

183
00:11:15.418 --> 00:11:17.561
I'm just going to put it
underneath the scripts.

184
00:11:17.561 --> 00:11:21.108
We just have to say add
this new key called prisma.

185
00:11:21.108 --> 00:11:26.573
It has a property called seed,
[INAUDIBLE] something called ts-node.

186
00:11:26.573 --> 00:11:31.181
So ts-node is literally the same thing
as the node runtime that allows you to

187
00:11:31.181 --> 00:11:34.061
evaluate node right in your shell,
your bash,

188
00:11:34.061 --> 00:11:36.515
ts-node is that what just TypeScript.

189
00:11:36.515 --> 00:11:41.723
So we're just gonna run
the TypeScript file right now without

190
00:11:41.723 --> 00:11:48.646
having to compile that dash p points to
this configuration file that we just made.

191
00:11:48.646 --> 00:11:52.825
This dash our tsconfig paths register.

192
00:11:52.825 --> 00:11:56.389
We installed this earlier as a dev
dependency here, tsconfig paths.

193
00:11:56.389 --> 00:12:00.636
This just makes sure that the paths that
we just made that I was just stuck on

194
00:12:00.636 --> 00:12:05.297
are going to be respected by ts-note,
we don't do that ts-node won't respect

195
00:12:05.297 --> 00:12:09.498
those paths and all of our imports
are breaking our seed script will run.

196
00:12:11.704 --> 00:12:15.534
And then transpileOnly means I don't
care if I have TypeScript errors,

197
00:12:15.534 --> 00:12:17.369
leave me alone, just do your job.

198
00:12:17.369 --> 00:12:19.612
That's what transpileOnly means.

199
00:12:19.612 --> 00:12:27.196
And then finally, this file, okay?

200
00:12:27.196 --> 00:12:31.973
So once you do that,
we can actually see the database.

201
00:12:31.973 --> 00:12:33.963
So to do that,
we can just run a migration.

202
00:12:33.963 --> 00:12:38.993
So if you go here you can run npx prisma

203
00:12:38.993 --> 00:12:44.031
migrates dev [INAUDIBLE] migration.

204
00:12:44.031 --> 00:12:45.339
It's gonna try to run on migration.

205
00:12:50.759 --> 00:12:55.338
Again if you are using a database like I'm
using right now, it's gonna take a minute.

206
00:12:55.338 --> 00:12:59.198
If you're using a local database
it'll run pretty quick, so

207
00:12:59.198 --> 00:13:01.062
he's got to give it a second.

208
00:13:01.062 --> 00:13:04.147
And you can see right now, it's saying,
you added this unique thing.

209
00:13:04.147 --> 00:13:05.532
Are you sure we run this migration?

210
00:13:05.532 --> 00:13:08.042
Yes, I do.

211
00:13:08.042 --> 00:13:13.070
Email, sure.

212
00:13:13.070 --> 00:13:15.682
It's applying the migration.

213
00:13:15.682 --> 00:13:16.818
There we go.

214
00:13:16.818 --> 00:13:20.902
So, we did the migration for
those changes.

215
00:13:20.902 --> 00:13:25.919
And then for the seed, we can just do

216
00:13:25.919 --> 00:13:31.448
npx prisma and I believe it's db seed.

217
00:13:37.366 --> 00:13:38.067
Okay.

218
00:13:38.067 --> 00:13:40.407
Looks like I had an error.

219
00:13:40.407 --> 00:13:41.779
What did I get an error on?

220
00:13:47.675 --> 00:13:48.961
Create mini.

221
00:13:52.266 --> 00:13:56.214
It's saying that something with my
description on my task is not right, so

222
00:13:56.214 --> 00:13:56.912
let's see.

223
00:13:56.912 --> 00:14:01.760
If I go to my task,
I never add a description on my task, so

224
00:14:01.760 --> 00:14:06.406
I'm gonna add a description
on my task module like so,

225
00:14:06.406 --> 00:14:10.550
give it a string,
make it optional, save that.

226
00:14:10.550 --> 00:14:15.389
I now have to run a migration again
npx prisma migrate dev, okay?

227
00:14:15.389 --> 00:14:19.315
I'm gonna to call this task description,
something like that.

228
00:14:23.174 --> 00:14:24.403
Let that run.

229
00:14:26.282 --> 00:14:28.150
Cool.
I'm gonna try to see this again.

230
00:14:32.479 --> 00:14:33.000
There we go.

231
00:14:33.000 --> 00:14:35.714
So, I logged the output of this,
and this is what I got.

232
00:14:35.714 --> 00:14:39.970
I got, this user with a couple

233
00:14:39.970 --> 00:14:44.578
projects and about 50 tasks.

234
00:14:44.578 --> 00:14:46.682
So now we have some seed data.

235
00:14:46.682 --> 00:14:51.696
So one thing I wanted to show was,
earlier we seeded the database with

236
00:14:51.696 --> 00:14:57.243
a bunch of content, but we never actually
looked at it to see if it was there.

237
00:14:57.243 --> 00:14:59.990
So I'm gonna show you how to look at that,
I thought that that was very important and

238
00:14:59.990 --> 00:15:01.103
weird that we didn't look at it.

239
00:15:01.103 --> 00:15:03.960
So, I'm gonna show you that.

240
00:15:03.960 --> 00:15:08.409
So if you go in your terminal and

241
00:15:08.409 --> 00:15:12.858
you type in npx prisma studio,

242
00:15:12.858 --> 00:15:16.119
you get this app here.

243
00:15:16.119 --> 00:15:20.658
And if you see the correctly
you'll see something like this,

244
00:15:20.658 --> 00:15:25.467
projects 5, tasks 50, 1 user,
this is what you should see.

245
00:15:25.467 --> 00:15:30.483
If you click on it for instance the user
you can see that it's a user with an email

246
00:15:30.483 --> 00:15:35.271
and a first name called user and a last
name called person, and password and

247
00:15:35.271 --> 00:15:40.515
all that stuff here's the projects here's
the tasks and click on a project here.

248
00:15:42.664 --> 00:15:43.714
Open up a new tab.

249
00:15:47.327 --> 00:15:53.546
And then I can click on the tasks in
the projects to each open up any tab.

250
00:15:57.584 --> 00:16:00.059
So this is how you can view
your database using prisma.

251
00:16:00.059 --> 00:16:03.463
I was using NPX Prisma Studio and
you get to check it out.

252
00:16:03.463 --> 00:16:05.441
So this is your best friend.

253
00:16:05.441 --> 00:16:11.131
Cuz we're using Postgres, you can also
use PG admin or whatever that tool is.

254
00:16:11.131 --> 00:16:13.111
That is really good, but looks really bad.

255
00:16:13.111 --> 00:16:16.526
That one, like it is really good.

256
00:16:16.526 --> 00:16:17.606
I can't even lie.

257
00:16:17.606 --> 00:16:20.494
It's so good, but I hate looking at it.

258
00:16:20.494 --> 00:16:21.807
So it works though.

259
00:16:21.807 --> 00:16:24.361
But I mostly just use Prisma for
looking at my database stuff.

