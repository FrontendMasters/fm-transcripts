WEBVTT

1
00:00:00.114 --> 00:00:03.138
So now we're going to do
the auth form component,

2
00:00:03.138 --> 00:00:08.040
which is going to be the form that sits on
our auth pages like register and sign in.

3
00:00:08.040 --> 00:00:12.528
But it's gonna be a flexible component
because if you think about the auth form,

4
00:00:12.528 --> 00:00:16.170
whether you sign in or sign up,
it's pretty much the same thing.

5
00:00:16.170 --> 00:00:18.441
We definitely have to email a password for
both.

6
00:00:18.441 --> 00:00:20.757
And for our case register.

7
00:00:20.757 --> 00:00:28.174
If we go look at the schema A user
must have a first name and last name.

8
00:00:28.174 --> 00:00:28.995
It's required.

9
00:00:28.995 --> 00:00:30.803
There's no question mark here.

10
00:00:30.803 --> 00:00:32.159
So we were probably asked for
that on sign up.

11
00:00:32.159 --> 00:00:32.994
So register.

12
00:00:32.994 --> 00:00:35.675
So the only difference
between register and

13
00:00:35.675 --> 00:00:39.378
sign in is that register has
a first name and last name field.

14
00:00:39.378 --> 00:00:41.659
Other than that they're all the same.

15
00:00:41.659 --> 00:00:45.032
And whatever button you click on is
different, so we can kind of just make one

16
00:00:45.032 --> 00:00:48.619
component to handle all of that use case
versus making two separate components,

17
00:00:48.619 --> 00:00:49.321
in my opinion.

18
00:00:49.321 --> 00:00:50.120
So that's what we're gonna do.

19
00:00:50.120 --> 00:00:52.786
All form is just gonna
handle all of that and

20
00:00:52.786 --> 00:00:57.469
depending on what property you pass it,
it'll know how to toggle itself.

21
00:00:57.469 --> 00:00:59.795
Does that make sense?

22
00:00:59.795 --> 00:01:01.664
Cool.

23
00:01:01.664 --> 00:01:02.435
Let's do it.

24
00:01:02.435 --> 00:01:03.998
Okay.

25
00:01:03.998 --> 00:01:09.023
Just like I said, it's going to be
a client component because it's a form and

26
00:01:09.023 --> 00:01:10.492
I would really love for

27
00:01:10.492 --> 00:01:15.776
someone to show me a form that's a server
component because that would be crazy.

28
00:01:15.776 --> 00:01:17.089
I would like to see that.

29
00:01:17.089 --> 00:01:20.634
So our form tsx.

30
00:01:20.634 --> 00:01:22.493
Got a lot of things to import up here, but

31
00:01:22.493 --> 00:01:24.645
the first most important
thing is use client.

32
00:01:24.645 --> 00:01:28.249
Do not forget that.

33
00:01:28.249 --> 00:01:31.747
Then we gonna import our input.

34
00:01:35.538 --> 00:01:38.838
We're gonna import our button.

35
00:01:38.838 --> 00:01:40.498
We're gonna import our card.

36
00:01:42.716 --> 00:01:44.069
What else do we have?

37
00:01:44.069 --> 00:01:47.834
We got our link, we got used router,
we got everything in here, okay.

38
00:01:47.834 --> 00:01:53.366
So we're gonna import,
use router from navigation.

39
00:01:53.366 --> 00:01:58.265
There's, a Next router on
Next.js 12 that has use router.

40
00:01:58.265 --> 00:01:59.574
Do not import that one.

41
00:01:59.574 --> 00:02:04.668
You wanna import use router from
Next navigation, which is new.

42
00:02:04.668 --> 00:02:06.433
I made that mistake before.

43
00:02:06.433 --> 00:02:09.582
Do not import,
use router from Next router.

44
00:02:09.582 --> 00:02:15.671
That's pretty much being deprecated
in favor of Next navigation.

45
00:02:15.671 --> 00:02:17.684
Okay, got that?

46
00:02:17.684 --> 00:02:22.567
We're going to import those register and

47
00:02:22.567 --> 00:02:27.597
sign-in utility functions we just made.

48
00:02:27.597 --> 00:02:31.810
It seems like alphabetizing
like it's sorting my imports.

49
00:02:31.810 --> 00:02:32.720
What is this plugin?

50
00:02:32.720 --> 00:02:33.616
I've never seen this before.

51
00:02:33.616 --> 00:02:36.458
It's just like, decided to work today.

52
00:02:36.458 --> 00:02:39.348
It's like I'm gonna work today.

53
00:02:39.348 --> 00:02:40.667
We're gonna use callback.

54
00:02:43.188 --> 00:02:45.727
And we're also gonna use state.

55
00:02:45.727 --> 00:02:46.399
Remember that?

56
00:02:50.814 --> 00:02:52.824
And I think that's pretty much
all we're gonna use here.

57
00:02:52.824 --> 00:02:56.617
So first thing we're gonna do is because
this thing can toggle between two

58
00:02:56.617 --> 00:02:59.922
different modes, register mode,
or sign-in mode, I'm just

59
00:02:59.922 --> 00:03:04.103
gonna make an object to represent all
the different things between those modes.

60
00:03:04.103 --> 00:03:07.932
So I can just toggle the objects
depending on the mode that you pass.

61
00:03:07.932 --> 00:03:11.618
So basically, I'm going to think
about all the things that are dynamic

62
00:03:11.618 --> 00:03:14.577
in this form that change
depending on what mode you have.

63
00:03:14.577 --> 00:03:16.045
And I'm going to put them in here.

64
00:03:16.045 --> 00:03:20.132
So all the things that are dynamic
depending on whether it's in register

65
00:03:20.132 --> 00:03:24.554
mode, or sign in mode is going to be
the URL that you click on, because there's

66
00:03:24.554 --> 00:03:28.775
going to be like a little thing at the
bottom says I already have an account or

67
00:03:28.775 --> 00:03:30.256
I don't have an account.

68
00:03:30.256 --> 00:03:32.730
And I need that to be a different
link whenever you click on it.

69
00:03:32.730 --> 00:03:34.454
So that's the link URL.

70
00:03:34.454 --> 00:03:39.315
The text for that question is gonna be
different depending on what mode it's in,

71
00:03:39.315 --> 00:03:40.101
The header so

72
00:03:40.101 --> 00:03:44.620
the title of the form is gonna be
different depending on what mode it's in.

73
00:03:44.620 --> 00:03:47.356
The sub header, the text underneath it,
is gonna be different.

74
00:03:47.356 --> 00:03:49.870
And then the button text when you
submit the form is gonna be different.

75
00:03:49.870 --> 00:03:52.443
So these are all the different
things depending on the mode.

76
00:03:52.443 --> 00:03:56.747
So I assigned it for what looked like and
what it, what it should look like for

77
00:03:56.747 --> 00:04:00.942
the register content and what it should
look like for the sign in content.

78
00:04:00.942 --> 00:04:02.884
So that's what we're gonna do.

79
00:04:02.884 --> 00:04:07.575
So I'm gonna say const register content,

80
00:04:07.575 --> 00:04:12.535
and it's just gonna have
like this link URL.

81
00:04:12.535 --> 00:04:16.073
And that's going to go to sign in
if you already have an account.

82
00:04:16.073 --> 00:04:18.752
If you're on register,
it's going to say already have an account.

83
00:04:18.752 --> 00:04:24.571
And the link text is basically that.

84
00:04:24.571 --> 00:04:27.401
Already have an account.

85
00:04:27.401 --> 00:04:29.401
All right.

86
00:04:29.401 --> 00:04:31.041
Header, sub header, and button text.

87
00:04:31.041 --> 00:04:32.394
So header,
you can have it say whatever you want.

88
00:04:32.394 --> 00:04:35.694
I think I have created a new account.

89
00:04:39.993 --> 00:04:42.981
And then sub header.

90
00:04:42.981 --> 00:04:46.450
Don't get cheesy here,
okay I got cheesy here.

91
00:04:46.450 --> 00:04:49.837
Just a few things to get started.

92
00:04:49.837 --> 00:04:52.551
Give me your credit card number.

93
00:04:52.551 --> 00:04:58.213
Button text and
that's just going to say register.

94
00:04:58.213 --> 00:05:02.178
Cool, and then we'll do the same thing for
if it's in sign in mode.

95
00:05:08.122 --> 00:05:10.212
When you click on this one,
on the link at the bottom,

96
00:05:10.212 --> 00:05:11.938
it's actually gonna take you to register.

97
00:05:11.938 --> 00:05:15.665
And it's gonna say,
instead of saying already have an account,

98
00:05:15.665 --> 00:05:17.578
it's gonna be what do I put here?

99
00:05:17.578 --> 00:05:18.781
Don't have an account?

100
00:05:18.781 --> 00:05:19.451
There you go.

101
00:05:23.040 --> 00:05:26.724
At the top,
instead of saying create a new account,

102
00:05:26.724 --> 00:05:29.750
it might say something like welcome back.

103
00:05:29.750 --> 00:05:33.568
And that should be a lowercase
a that's bothering me.

104
00:05:33.568 --> 00:05:38.527
And then subheader, I just have your
credentials, getting your account.

105
00:05:38.527 --> 00:05:39.892
Nothing crazy here.

106
00:05:39.892 --> 00:05:42.992
And on this, they'll just say sign in.

107
00:05:42.992 --> 00:05:43.833
Cool.

108
00:05:49.678 --> 00:05:51.815
Then it's going to create
some initial state.

109
00:05:51.815 --> 00:05:53.519
I'm creating it in an object out here.

110
00:05:53.519 --> 00:05:55.505
So if I have to reset the entire form,

111
00:05:55.505 --> 00:05:58.980
I can say reset to this object
versus resetting these property.

112
00:05:58.980 --> 00:06:03.725
So always create an initial
state outside so the email.

113
00:06:03.725 --> 00:06:07.996
It's gonna be a password,
it's gonna be a first name.

114
00:06:07.996 --> 00:06:12.530
Sometimes if it's register mode,
and then last name sometimes.

115
00:06:15.220 --> 00:06:16.664
There we go, that's the initial state.

116
00:06:16.664 --> 00:06:22.365
Now we can make our components,
so auth form, Boom.

117
00:06:24.582 --> 00:06:30.391
And it's gonna take a mode,
that's gonna be like sign in or

118
00:06:30.391 --> 00:06:37.492
register, and you can see I typed it
here if you wanna do some type stuff.

119
00:06:37.492 --> 00:06:41.693
First thing is I'm gonna make my states.

120
00:06:41.693 --> 00:06:43.565
I was gonna say form states,

121
00:06:43.565 --> 00:06:47.155
you can call it whatever you
want it should be an array.

122
00:06:47.155 --> 00:06:52.486
It's been so long since I used state,
I forgot what it feels like.

123
00:06:52.486 --> 00:06:57.358
Set form state equals use

124
00:06:57.358 --> 00:07:02.928
state initial value there.

125
00:07:08.417 --> 00:07:12.407
And then what I want to do is,
if you want to keep track of errors and

126
00:07:12.407 --> 00:07:15.031
do things with the errors, we can do that.

127
00:07:15.031 --> 00:07:18.231
I don't know if I'm actually doing
anything with the error, actually.

128
00:07:18.231 --> 00:07:22.608
I think I was going to, then I was like,
it's just client-side error handling,

129
00:07:22.608 --> 00:07:26.797
it's nothing really crazy, so probably
not going to do anything with it, but

130
00:07:26.797 --> 00:07:27.576
it was there.

131
00:07:27.576 --> 00:07:35.146
Const router equals use router just
like the other one from Next router.

132
00:07:35.146 --> 00:07:40.046
&gt;&gt; Looks like you didn't include
the spread operator before initial

133
00:07:40.046 --> 00:07:43.117
in the state and use thing all right here.

134
00:07:43.117 --> 00:07:44.911
&gt;&gt; Yeah.

135
00:07:44.911 --> 00:07:51.092
Like this oops I like that.

136
00:07:51.092 --> 00:07:53.224
You said I should include the spread.

137
00:07:53.224 --> 00:07:55.080
&gt;&gt; Yeah, I thought you did.

138
00:07:55.080 --> 00:07:55.980
&gt;&gt; Did I?

139
00:07:55.980 --> 00:07:57.928
And the code example.

140
00:07:57.928 --> 00:07:59.943
Yeah, I think I was just being safe there.

141
00:07:59.943 --> 00:08:03.899
I just didn't want to think about objects,
especially with React.

142
00:08:03.899 --> 00:08:05.696
Because objects are passed by reference.

143
00:08:05.696 --> 00:08:09.437
I just didn't know if React was like,
I'm just gonna take this reference and

144
00:08:09.437 --> 00:08:12.155
run with it and do something,
and we have side effects.

145
00:08:12.155 --> 00:08:15.875
So I was like, to avoid that,
I'm just gonna make a brand new object and

146
00:08:15.875 --> 00:08:20.097
spread over it and give it a copy so it
doesn't interfere with this original one.

147
00:08:20.097 --> 00:08:24.857
So it was just me being safe, but I think
React is smart enough not to go ahead and

148
00:08:24.857 --> 00:08:27.974
mutate whatever I pass here for
some initial data.

149
00:08:27.974 --> 00:08:30.387
I felt more confident today,
than before when I wrote it.

150
00:08:30.387 --> 00:08:31.075
So.

151
00:08:33.419 --> 00:08:34.824
Sometimes you just gotta be safe.

152
00:08:34.824 --> 00:08:38.330
You just wanna avoid object
mutations as much as you can react,

153
00:08:38.330 --> 00:08:40.130
especially on the client side.

154
00:08:40.130 --> 00:08:44.002
It's just, I mean, ask Angular one.

155
00:08:44.002 --> 00:08:44.953
That's what happened.

156
00:08:44.953 --> 00:08:48.238
[LAUGH] that's, [LAUGH] that's
basically what you're leading to.

157
00:08:48.238 --> 00:08:51.248
So okay, so we got that.

158
00:08:51.248 --> 00:08:57.761
We got our router,
we're going to say const handle submit.

159
00:08:57.761 --> 00:08:59.187
There we go.

160
00:08:59.187 --> 00:09:00.208
What are events?

161
00:09:04.378 --> 00:09:12.703
E dot prevent defaults, prevent this
form from reloading our page, default.

162
00:09:12.703 --> 00:09:15.725
That's what it should be called.

163
00:09:15.725 --> 00:09:16.769
And then from there,

164
00:09:16.769 --> 00:09:19.850
all we're really gonna do is this
is gonna be a async function.

165
00:09:19.850 --> 00:09:23.256
I have it wrapped in the used callback
here cause I'm just over optimizing on

166
00:09:23.256 --> 00:09:23.796
reinders.

167
00:09:23.796 --> 00:09:26.075
And I mean, you could do that,
you don't really have to do that.

168
00:09:26.075 --> 00:09:30.590
But all the used callback is doing is
making sure that unless one of these

169
00:09:30.590 --> 00:09:34.881
things change, just use the same
function across remainders, but

170
00:09:34.881 --> 00:09:37.527
that's just such an over optimization.

171
00:09:37.527 --> 00:09:39.004
It doesn't really matter.

172
00:09:39.004 --> 00:09:43.463
What does matter is though that
this is an async function and

173
00:09:43.463 --> 00:09:47.654
depending on the mode,
we're either gonna register or

174
00:09:47.654 --> 00:09:52.751
we're going to sign in, and
then we're gonna route you to /home.

175
00:09:52.751 --> 00:09:53.626
And that's really it.

176
00:09:53.626 --> 00:09:54.428
So let's do that.

177
00:09:54.428 --> 00:09:59.727
So we're gonna say,
If mode equals register,

178
00:09:59.727 --> 00:10:05.688
then we're going to await
register with form state,

179
00:10:05.688 --> 00:10:10.865
if it's not registered
must be the other one.

180
00:10:10.865 --> 00:10:14.612
So we're going to await
sign in form states.

181
00:10:21.770 --> 00:10:25.916
And, we can try catch all of this,
if we're gonna handle errors, and

182
00:10:25.916 --> 00:10:27.198
do things like that.

183
00:10:27.198 --> 00:10:32.117
But, we're not really handling errors,
I mean, it's just setting an error and

184
00:10:32.117 --> 00:10:34.684
we're not really doing anything with it,

185
00:10:34.684 --> 00:10:39.266
because error handling on the front end,
I think it's unique to whatever.

186
00:10:39.266 --> 00:10:43.329
You're like, you might show a toast, you
might show a message underneath an input,

187
00:10:43.329 --> 00:10:46.998
you might show a modal, you might show
an alert, there's an infinite amount

188
00:10:46.998 --> 00:10:50.857
of possibilities and there's nothing
new that Next.js is contributing to it.

189
00:10:50.857 --> 00:10:52.791
So I didn't feel like it was
worth even going there, but

190
00:10:52.791 --> 00:10:54.778
you could do whatever you want
with that error handling.

191
00:10:54.778 --> 00:10:58.538
I think it's more powerful to
explore errors on the server and

192
00:10:58.538 --> 00:11:00.570
server components and how that.

193
00:11:00.570 --> 00:11:05.125
So we have that and
then after all of that,

194
00:11:05.125 --> 00:11:11.778
finally we just want to set form
states to initial like that.

195
00:11:15.803 --> 00:11:16.835
Cool, so we got that.

196
00:11:18.850 --> 00:11:21.632
And then see all this JSX.

197
00:11:21.632 --> 00:11:22.317
Down here.

198
00:11:22.317 --> 00:11:24.187
Yeah, we got to write all that.

199
00:11:24.187 --> 00:11:26.118
But first we need to
get the content object.

200
00:11:26.118 --> 00:11:27.053
So which one is it?

201
00:11:27.053 --> 00:11:29.242
Is it this one or is it this one?

202
00:11:29.242 --> 00:11:30.539
Well, that depends on the mode.

203
00:11:30.539 --> 00:11:36.814
So we'll say content equals
mode equals register.

204
00:11:36.814 --> 00:11:38.462
Cool is the register content else.

205
00:11:38.462 --> 00:11:41.549
It's the other one.

206
00:11:41.549 --> 00:11:42.965
There we go.

207
00:11:42.965 --> 00:11:47.288
And then finally for the JSX,
which is a lot, it's mostly styling.

208
00:11:47.288 --> 00:11:50.438
There's some logic here, but there's
really nothing new in here that you

209
00:11:50.438 --> 00:11:52.938
don't already know if you've
ever used React with a form,

210
00:11:52.938 --> 00:11:55.656
I'm not doing anything different,
but we can walk through it.

211
00:11:55.656 --> 00:12:01.208
So I'll paste it in there though.

212
00:12:01.208 --> 00:12:06.213
Really the only important
stuff in here that's not new,

213
00:12:06.213 --> 00:12:09.139
or that is new is really nothing.

214
00:12:09.139 --> 00:12:14.020
We're just all we're really doing here
is we're using our input components.

215
00:12:14.020 --> 00:12:17.144
We're controlling them with the value.

216
00:12:17.144 --> 00:12:22.224
We're using it on change that
value that we're controlling.

217
00:12:22.224 --> 00:12:26.329
One thing that might be different here is
I think that most people when they make

218
00:12:26.329 --> 00:12:29.688
a form with multiple fields
they'll have multiple use states,

219
00:12:29.688 --> 00:12:33.868
they'll have one use state for each field
and that's fine, you could do that.

220
00:12:33.868 --> 00:12:36.418
I have one use day for the whole form.

221
00:12:36.418 --> 00:12:42.819
But the downside of that is whenever I
go to set the form because the state

222
00:12:42.819 --> 00:12:49.863
is immutable whatever I pass to set form
state will override the entire state so

223
00:12:49.863 --> 00:12:54.771
I have to be careful to pass
the previous state first and

224
00:12:54.771 --> 00:12:57.679
then make my change here after.

225
00:12:57.679 --> 00:13:02.725
But if you are ever going to change state
that is based off of a previous state,

226
00:13:02.725 --> 00:13:06.624
you must pass a callback to get
access to the current state.

227
00:13:06.624 --> 00:13:10.004
If you don't pass that callback,
and instead you reach for

228
00:13:10.004 --> 00:13:14.542
the current status form state you're not
guaranteed to get the current state.

229
00:13:14.542 --> 00:13:16.175
You might be lagging behind.

230
00:13:16.175 --> 00:13:18.247
You might be lagging behind
the rendering of React.

231
00:13:18.247 --> 00:13:19.491
It's not guaranteed.

232
00:13:19.491 --> 00:13:21.321
There's a good chance you will get it.

233
00:13:21.321 --> 00:13:24.199
But in a high performance scenario,
like, I don't know,

234
00:13:24.199 --> 00:13:28.232
a Google Doc editor with multiple people
typing, you might actually be behind a few

235
00:13:28.232 --> 00:13:31.820
renders if you just access form state
to create a new state based off of it.

236
00:13:31.820 --> 00:13:36.592
So its always important to do this
callback because setting a state is

237
00:13:36.592 --> 00:13:38.331
asynchronous in React.

238
00:13:38.331 --> 00:13:40.637
This guarantees that you
get it after it's finished.

239
00:13:43.685 --> 00:13:46.709
Everything else is anything
you've ever known and

240
00:13:46.709 --> 00:13:48.966
react when it comes to setting a fire.

241
00:13:48.966 --> 00:13:51.870
So nothing crazy there.

242
00:13:51.870 --> 00:13:54.252
The last thing is just to route you home.

243
00:13:54.252 --> 00:14:00.501
So we can say router.push or
replace might even be better here.

244
00:14:00.501 --> 00:14:02.984
Push is adding a new route to the stack.

245
00:14:02.984 --> 00:14:04.971
So if they hit back, they can go back.

246
00:14:04.971 --> 00:14:07.797
Replace is sort of adding
a new one to the stack,

247
00:14:07.797 --> 00:14:11.967
replace the current route that I'm at
with the one that I want to go to so

248
00:14:11.967 --> 00:14:15.308
they hit back they can't,
because it was never there.

249
00:14:15.308 --> 00:14:19.941
So this is like basically preventing
someone from hitting back to go back to

250
00:14:19.941 --> 00:14:25.100
the sign up form after they already signed
in, basically that's all it's doing.

251
00:14:25.100 --> 00:14:30.753
It's just basically you can't
hit back to go back here.

252
00:14:30.753 --> 00:14:40.127
Okay, and
then we're going to export this Okay cool.

253
00:14:40.127 --> 00:14:41.462
Any questions on the auth form?

254
00:14:45.010 --> 00:14:46.035
Yes.

255
00:14:46.035 --> 00:14:51.735
&gt;&gt; Just a quick fix initialized
on line 26 is spelled wrong.

256
00:14:51.735 --> 00:14:56.933
Still function correctly since
you used it correctly on line 29,

257
00:14:56.933 --> 00:14:59.584
but just keep an eye after the end.

258
00:14:59.584 --> 00:15:00.756
&gt;&gt; Which one?

259
00:15:00.756 --> 00:15:02.688
&gt;&gt; Both of them are spelled wrong.

260
00:15:02.688 --> 00:15:04.928
&gt;&gt; They're just both
&gt;&gt; Yeah, dang.

261
00:15:04.928 --> 00:15:06.521
&gt;&gt; [LAUGH] some words.

262
00:15:06.521 --> 00:15:11.380
&gt;&gt; I still didn't see
it looking right at it.

263
00:15:11.380 --> 00:15:13.596
There we go.

264
00:15:13.596 --> 00:15:18.455
You'd think I would know
that the company I work for

265
00:15:18.455 --> 00:15:23.766
is literally initialized [LAUGH] so
every time I type that

266
00:15:23.766 --> 00:15:29.311
out I'm like yeah,
it's about those many Is in one word.

267
00:15:29.311 --> 00:15:33.995
I'm like, looks suspicious.

268
00:15:33.995 --> 00:15:35.215
I don't know.

269
00:15:35.215 --> 00:15:41.106
So any questions?

270
00:15:41.106 --> 00:15:43.558
&gt;&gt; I'll add that if
you're using objects and

271
00:15:43.558 --> 00:15:47.916
state like that a lot I noticed in the
official React docs that they recommend

272
00:15:47.916 --> 00:15:51.277
using a package called immer
that handles that for you.

273
00:15:51.277 --> 00:15:52.695
Immer is so beautiful.

274
00:15:52.695 --> 00:15:53.472
Yeah I love immer.

275
00:15:53.472 --> 00:15:57.844
Immer basically turns immutability
operations into this dot

276
00:15:57.844 --> 00:16:00.965
root scope that's basically what it does.

277
00:16:00.965 --> 00:16:05.778
It's so
good it basically instead of doing like

278
00:16:05.778 --> 00:16:09.880
what I did with this it'll just be like.

279
00:16:09.880 --> 00:16:14.542
I can now just do something like, sdot,

280
00:16:14.542 --> 00:16:20.945
I can just say formState.FirstName
equals whatever I want.

281
00:16:20.945 --> 00:16:23.684
And it will take that and do this for me.

282
00:16:23.684 --> 00:16:24.950
Yeah.

283
00:16:24.950 --> 00:16:25.558
Which is really cool.

284
00:16:25.558 --> 00:16:26.406
Yeah, I love immer.

285
00:16:26.406 --> 00:16:28.761
I actually use it all the time.

286
00:16:28.761 --> 00:16:29.670
I couldhave used it here.

287
00:16:29.670 --> 00:16:32.798
It's not too complicated here but
when you start getting to arrays and

288
00:16:32.798 --> 00:16:36.349
you're like, I gotta find and find this
thing in the array and update it and

289
00:16:36.349 --> 00:16:38.597
replace it like okay,
I'm using immer for this.

290
00:16:38.597 --> 00:16:39.340
This is stupid.

291
00:16:39.340 --> 00:16:40.936
This is ridiculous.

292
00:16:40.936 --> 00:16:42.004
But yeah, I do love immer.

293
00:16:42.004 --> 00:16:44.207
That they should just bake that in,
honestly.

