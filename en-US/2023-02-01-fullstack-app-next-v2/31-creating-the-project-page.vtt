WEBVTT

1
00:00:00.180 --> 00:00:02.678
So what we're gonna do next is,
get this project page working.

2
00:00:02.678 --> 00:00:04.163
So when you click on the project,

3
00:00:04.163 --> 00:00:06.983
it actually goes to the project
page where you can see the task.

4
00:00:06.983 --> 00:00:10.925
So, let's do this right now it'll
just four, or four or five or

5
00:00:10.925 --> 00:00:13.127
whatever that is, it'll do that.

6
00:00:13.127 --> 00:00:15.691
So let's fix that.

7
00:00:21.429 --> 00:00:22.758
So for the project page and

8
00:00:22.758 --> 00:00:25.847
this is why I was saying we had
to make the task card flexible.

9
00:00:25.847 --> 00:00:28.522
Because the project page
is gonna be responsible for

10
00:00:28.522 --> 00:00:31.152
getting its own project
based off the ID of the URL.

11
00:00:31.152 --> 00:00:35.515
And if we're already getting a project, we
might as well just put include task true.

12
00:00:35.515 --> 00:00:39.968
So, if we're gonna reuse the task card,
the project is already getting its

13
00:00:39.968 --> 00:00:43.461
own task, why do we need the task
card to get the task again?

14
00:00:43.461 --> 00:00:46.023
It's not even getting all those,
it's only getting the first five.

15
00:00:46.023 --> 00:00:49.493
So that's why I extended the task
card to take in task as a prop so

16
00:00:49.493 --> 00:00:53.763
it can either give it a list of tasks or
it'll go get the first five by default.

17
00:00:53.763 --> 00:00:55.810
So that's why we did that?

18
00:00:55.810 --> 00:01:00.436
So let's go make this so
we'll go into, quit,

19
00:01:00.436 --> 00:01:04.745
we'll go to dashboard,
the project ID page.

20
00:01:08.074 --> 00:01:11.377
And we'll just make our stuff in here.

21
00:01:11.377 --> 00:01:14.982
So export, default, async.

22
00:01:18.760 --> 00:01:23.664
Function, this will be

23
00:01:23.664 --> 00:01:27.590
the project page.

24
00:01:27.590 --> 00:01:29.313
There we go, we need to get data.

25
00:01:37.929 --> 00:01:42.906
That's gonna be async, gotta see if
this the user first like always, so

26
00:01:42.906 --> 00:01:45.938
we're gonna await, Get user from cookie.

27
00:01:45.938 --> 00:01:46.944
Well cookies.

28
00:01:52.085 --> 00:01:54.418
This is gonna take an ID.

29
00:01:54.418 --> 00:01:56.579
It's gonna be a project ID.

30
00:01:56.579 --> 00:02:01.762
Then we can say const project = await.

31
00:02:01.762 --> 00:02:08.417
db.project.findunique or

32
00:02:08.417 --> 00:02:12.411
is it fine first?

33
00:02:12.411 --> 00:02:15.241
Yeah, it's findfirst,
it's not a unique index.

34
00:02:15.241 --> 00:02:16.510
Find the first one.

35
00:02:16.510 --> 00:02:22.444
Where the ID is gonna be ID and

36
00:02:22.444 --> 00:02:26.648
the owner is gonna be

37
00:02:26.648 --> 00:02:31.356
user.id or owner id.

38
00:02:31.356 --> 00:02:33.244
Sorry, it's user id.

39
00:02:37.331 --> 00:02:40.696
And then we just wanna
include all of our tasks.

40
00:02:46.802 --> 00:02:48.679
From there,
we're gonna just return the projects.

41
00:02:48.679 --> 00:02:52.524
You can destructure if you want to,
you can do whatever, it's not wrong or

42
00:02:52.524 --> 00:02:53.266
right there.

43
00:02:53.266 --> 00:02:54.401
Cool we got that.

44
00:02:56.712 --> 00:03:01.105
Now because this page is a dynamic
page as in its parent folder

45
00:03:01.105 --> 00:03:05.856
has brackets around it,
that's what makes this a dynamic page.

46
00:03:05.856 --> 00:03:08.864
We'll automatically get past params.

47
00:03:11.480 --> 00:03:16.572
Every page that's a page inside of
a folder like this is gonna get params

48
00:03:19.796 --> 00:03:25.562
So we can say const project = awaits.

49
00:03:25.562 --> 00:03:28.212
Get data and we can pass an ID,

50
00:03:28.212 --> 00:03:33.097
which will be params dot
whatever your folder name is.

51
00:03:33.097 --> 00:03:34.171
In our case, it's id.

52
00:03:44.698 --> 00:03:48.101
And then from there,
it's really just some basic JSX.

53
00:03:58.889 --> 00:04:03.018
It's gonna bring in my task card.

54
00:04:03.018 --> 00:04:03.729
There we go.

55
00:04:13.339 --> 00:04:14.441
Task card.

56
00:04:14.441 --> 00:04:17.986
Yeah, okay.

57
00:04:17.986 --> 00:04:21.816
Yeah, so
you're gonna get a tight script type here.

58
00:04:21.816 --> 00:04:26.801
Because it doesn't know how to handle
components that return promises yet,

59
00:04:26.801 --> 00:04:28.265
there's a fix for it.

60
00:04:28.265 --> 00:04:34.699
There's a comment you can put in here for
TypeScript to ignore this, but, it's fine.

61
00:04:34.699 --> 00:04:37.160
And these are just tripping
because project might be null and

62
00:04:37.160 --> 00:04:38.085
we're not handling.

63
00:04:38.085 --> 00:04:41.647
Were not just handling everything,
we're just fine.

64
00:04:41.647 --> 00:04:43.615
Okay, any questions on this?

65
00:04:43.615 --> 00:04:48.138
Let's try it out, so if we go here,
click a little refresh,

66
00:04:48.138 --> 00:04:53.552
see our 60 frames per second spinner,
click on one of these projects,

67
00:04:53.552 --> 00:04:56.608
boom, got a project with all the tasks.

68
00:05:03.226 --> 00:05:05.545
You can see there's a delay there though,
right?

69
00:05:05.545 --> 00:05:09.326
It's not going there instantly.

70
00:05:09.326 --> 00:05:15.105
And these, they're getting cached now but
at first they're not gonna be cached ahead

71
00:05:15.105 --> 00:05:20.506
of time cuz we didn't do get static param
which you probably couldn't for this.

72
00:05:20.506 --> 00:05:26.889
So this is where you would probably
show another loading thing or

73
00:05:26.889 --> 00:05:31.745
on the page level or
just transition to the page.

74
00:05:31.745 --> 00:05:36.627
You might have some UI up here
that isn't part of the task card

75
00:05:36.627 --> 00:05:40.839
like this part right here maybe,
some other UI, and

76
00:05:40.839 --> 00:05:46.030
then put a suspense around the task
card or something like that.

77
00:05:46.030 --> 00:05:49.536
Or take the data, the project
fetching part from the page and

78
00:05:49.536 --> 00:05:53.067
move that down to a component and
put a suspense around that.

79
00:05:53.067 --> 00:05:58.338
Now with the page can actually load in
immediately, show the non-dynamic stuff,

80
00:05:58.338 --> 00:06:03.080
like the title, whatever, maybe even
a counter or something of task, and

81
00:06:03.080 --> 00:06:07.094
then suspense and the new component
that you made for the task.

82
00:06:07.094 --> 00:06:09.715
That's probably how you would do it or
you would just do this.

83
00:06:09.715 --> 00:06:12.764
You would just put a spinner right here.

84
00:06:12.764 --> 00:06:13.719
It's one of the two.

85
00:06:16.704 --> 00:06:21.346
But as is the way we have to do is
we have to put a spinner here cuz

86
00:06:21.346 --> 00:06:26.281
the page is being blocked,
cuz that's what's getting the data

