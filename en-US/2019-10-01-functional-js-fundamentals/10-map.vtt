WEBVTT

1
00:00:00.000 --> 00:00:02.170
&gt;&gt; Will Sentance: Final thing to adjust
to kind of give you a little bit of

2
00:00:02.170 --> 00:00:04.310
the reality version of this

3
00:00:04.310 --> 00:00:08.380
is folk don't tend to call this
function CopyArrayandManipulates.

4
00:00:08.380 --> 00:00:11.170
They call it a name that
I think you get used to.

5
00:00:11.170 --> 00:00:12.690
But it's a bit on intuitive.

6
00:00:12.690 --> 00:00:14.020
It's a three letter word.

7
00:00:14.020 --> 00:00:15.660
And it's map.

8
00:00:15.660 --> 00:00:19.510
They call the function that I
call CopyArrayandManipulates Map,

9
00:00:19.510 --> 00:00:24.780
is one of the most important
higher order functions out there.

10
00:00:24.780 --> 00:00:25.450
There it is.

11
00:00:25.450 --> 00:00:32.910
So we don't call it
CopyArrayandManipulates we call it, Map.

12
00:00:32.910 --> 00:00:36.250
No CopyArrayandManipulates we call it,
Map.

13
00:00:37.470 --> 00:00:44.180
And therefore, you thought to talk
about mapping data from one state,

14
00:00:44.180 --> 00:00:49.410
which was 1 2 3, mapping it via some
transformation into a brand new

15
00:00:49.410 --> 00:00:53.970
collection of that data where each element
has been transformed in some way and

16
00:00:53.970 --> 00:00:57.014
that is known as the notion of mapping.

17
00:00:57.014 --> 00:01:01.530
Mapping is sort of mathematical notion
of mapping and changing data into a new

18
00:01:03.060 --> 00:01:05.670
construct where it's being
transformed in some way.

19
00:01:05.670 --> 00:01:10.220
You could record it maybe transform
element by element, you could record it.

20
00:01:11.260 --> 00:01:13.610
I don't know math is what they call it.

21
00:01:13.610 --> 00:01:14.740
I don't get why but whatever.

22
00:01:14.740 --> 00:01:17.770
All right,
let's talk in a slightly different way.

23
00:01:17.770 --> 00:01:21.720
This is our big exactly as JavaScript
runs it way of diagramming.

24
00:01:21.720 --> 00:01:25.200
This diagram in a way, by the way,
I lost my voice two days ago.

25
00:01:26.500 --> 00:01:28.790
But, let's diagram it in a way.

26
00:01:30.710 --> 00:01:35.130
This really gets to just the high
level view of what it's doing.

27
00:01:35.130 --> 00:01:37.755
What is actually doing, what is our map?

28
00:01:37.755 --> 00:01:44.574
CopyArrayandManipulates really doing,
well takes in 123.

29
00:01:44.574 --> 00:01:49.080
Okay, first thing it does.

30
00:01:49.080 --> 00:01:51.772
What does the first thing that map does,
Charles?

31
00:01:51.772 --> 00:01:54.641
The first thing that map had
CopyArrayandManipulates,

32
00:01:54.641 --> 00:01:58.416
how do we have an array to copy and do
all sorts of first thing we did, Charles

33
00:02:01.562 --> 00:02:04.586
&gt;&gt; Charles: Context.

34
00:02:04.586 --> 00:02:05.240
&gt;&gt; Will Sentance: True.

35
00:02:05.240 --> 00:02:09.260
Okay, inside a teaching context,
what was the first thing we did, Sam.

36
00:02:09.260 --> 00:02:10.094
&gt;&gt; Charles: The parameter.

37
00:02:10.094 --> 00:02:11.517
&gt;&gt; Will Sentance: Agree.

38
00:02:11.517 --> 00:02:13.752
&gt;&gt; Charles: Right, you're right.

39
00:02:13.752 --> 00:02:14.300
&gt;&gt; Will Sentance: Exactly.

40
00:02:14.300 --> 00:02:17.530
That's the cool thing that Matt
does is it makes it a new array.

41
00:02:18.800 --> 00:02:24.630
Then it takes the first
element multiplies it by two.

42
00:02:26.410 --> 00:02:28.360
Well, this case multiplies it
by two as we're doing this.

43
00:02:29.610 --> 00:02:33.440
Give us 2 push it to the array.

44
00:02:33.440 --> 00:02:34.360
Okay?

45
00:02:34.360 --> 00:02:40.640
Push it to the array and it takes it the 2
multiplies it by 2 to get what, Jasmine?

46
00:02:40.640 --> 00:02:41.245
&gt;&gt; Jasmine: 4.
&gt;&gt; Will Sentance: 4,

47
00:02:41.245 --> 00:02:43.330
place to the right there it is.

48
00:02:43.330 --> 00:02:47.320
And then again, 6 it is.

49
00:02:47.320 --> 00:02:52.305
We were applying
the functionality multiply by 2,

50
00:02:52.305 --> 00:02:58.890
two each element, and then pushing
the element of the array, okay.

51
00:02:58.890 --> 00:03:00.204
I mean nothing profound.

52
00:03:00.204 --> 00:03:04.020
I wanna show you here though just
a simplified version of diagramming.

53
00:03:04.020 --> 00:03:08.860
Exactly what we just did
was get a high level sense.

54
00:03:08.860 --> 00:03:12.660
The reason is because we're
gonna wanna see on a high level

55
00:03:12.660 --> 00:03:15.082
exactly what does this look like?

56
00:03:15.082 --> 00:03:19.080
Because I am gonna tell you,
we made quite a few assumptions there and

57
00:03:19.080 --> 00:03:20.490
I hinted one of them already.

58
00:03:20.490 --> 00:03:23.810
We assumed that we're gonna be
taking the first element and

59
00:03:23.810 --> 00:03:25.560
combining it with an array.

