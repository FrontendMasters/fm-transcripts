WEBVTT

1
00:00:00.000 --> 00:00:01.420
&gt;&gt; Scott Moss: All right,
so what I'm gonna do is,

2
00:00:01.420 --> 00:00:07.100
I'm just gonna go over kind of how I
build a GraphQL API in the tools and

3
00:00:07.100 --> 00:00:09.360
packages that I use cuz there's so
many of them.

4
00:00:09.360 --> 00:00:11.540
We're just gonna get something going and

5
00:00:11.540 --> 00:00:13.440
we're just gonna just
try to query something.

6
00:00:13.440 --> 00:00:17.350
And we're just gonna go through all the
pieces, and how they go together just so

7
00:00:17.350 --> 00:00:20.630
we can get something that we can query and
execute.

8
00:00:20.630 --> 00:00:26.460
Okay, so the first thing is
as far as the technologies,

9
00:00:26.460 --> 00:00:31.030
or the packages that I use to
create my GraphQL APIs today.

10
00:00:31.030 --> 00:00:33.349
I'm using this package
called GraphQL Yoga.

11
00:00:33.349 --> 00:00:34.020
Anybody ever heard of that?

12
00:00:35.030 --> 00:00:35.720
It's pretty legit.

13
00:00:35.720 --> 00:00:40.160
So it's made by the, I guess they're
Prisma now, but they used to be GraphCool.

14
00:00:40.160 --> 00:00:46.120
It's made by them and it's basically
an abstraction around Apollo,

15
00:00:46.120 --> 00:00:48.000
GraphQL, Express GraphQL.

16
00:00:48.000 --> 00:00:51.160
It's like an abstraction around that and
they kind of did a good job of just,

17
00:00:51.160 --> 00:00:53.430
here's everything you need
to make a GraphQL server.

18
00:00:53.430 --> 00:00:56.650
So this is new, this wasn't a thing
last time I taught GraphQL.

19
00:00:56.650 --> 00:00:59.790
So this stuff is changing all the time,
but this is what I use in production.

20
00:01:01.010 --> 00:01:05.329
But just to get going, basically there's
gonna be two parts to a GraphQL server,

21
00:01:05.329 --> 00:01:08.000
if you've never used GraphQL.

22
00:01:08.000 --> 00:01:13.100
You have your schema definition language,
and then you have what's called resolvers.

23
00:01:14.510 --> 00:01:17.830
Anybody want to tell
me what resolvers are?

24
00:01:17.830 --> 00:01:18.511
I'll pick on somebody.

25
00:01:22.295 --> 00:01:24.310
&gt;&gt; Scott Moss: Resolvers,
what are resolvers?

26
00:01:24.310 --> 00:01:27.500
&gt;&gt; Speaker 2: They take the query and
actually do the DB queries and

27
00:01:27.500 --> 00:01:29.240
give you the result that
you're looking for.

28
00:01:29.240 --> 00:01:31.960
&gt;&gt; Scott Moss: Right,
they resolve the data.

29
00:01:31.960 --> 00:01:33.554
Exactly right,
that's why they're called resolvers.

30
00:01:33.554 --> 00:01:37.590
All right, the first thing though is
we need to create some definitions,

31
00:01:37.590 --> 00:01:40.400
we actually need to create a schema for
GraphQL.

32
00:01:40.400 --> 00:01:46.120
GraphQL is a type-based,
thin layer over an API.

33
00:01:46.120 --> 00:01:51.390
So if you could think about it like this,
it's basically Typescript for your API.

34
00:01:51.390 --> 00:01:55.070
It itself is not your API,
the definition language is not, but

35
00:01:55.070 --> 00:01:57.490
it describes how your API will look.

36
00:01:57.490 --> 00:02:01.910
What the data looks like, what the type
of data it is, and how you can access it.

37
00:02:01.910 --> 00:02:03.240
It's a description of that.

38
00:02:03.240 --> 00:02:07.210
And then it's up to you to resolve
that data in whatever means necessary.

39
00:02:07.210 --> 00:02:09.790
So in order to do that we actually
have to write that schema,

40
00:02:09.790 --> 00:02:13.860
those types, those shapes, and then we
have to stick to it and resolve it.

41
00:02:13.860 --> 00:02:15.590
So that's the first thing
we're gonna do today.

42
00:02:15.590 --> 00:02:20.060
So the biggest part is when you
actually write your GraphQL schema

43
00:02:20.060 --> 00:02:21.470
there's a couple ways you can do it.

44
00:02:21.470 --> 00:02:23.730
I like to use a GraphQL file.

45
00:02:23.730 --> 00:02:29.970
You can use .graphql or .gql, and that's
kind of like how I like to write mine.

46
00:02:29.970 --> 00:02:31.900
If you go online and
you look at resources,

47
00:02:31.900 --> 00:02:36.930
you'll see people writing
their schemas in JavaScript.

48
00:02:36.930 --> 00:02:40.193
You'll see them using
a package from GraphQL.

49
00:02:40.193 --> 00:02:43.900
I don't think a lot of
people do that anymore.

50
00:02:43.900 --> 00:02:47.670
Unless you're doing really advanced stuff,
if you're doing like code generation and

51
00:02:47.670 --> 00:02:49.530
meta programming, yeah, for sure.

52
00:02:49.530 --> 00:02:53.270
But most people use raphQGL files
cuz it's a lot more expressive

53
00:02:53.270 --> 00:02:55.670
to use than a schema definition language,
and

54
00:02:55.670 --> 00:02:58.930
a GraphQL file and
justimport it as a string on the back end.

55
00:02:58.930 --> 00:03:00.540
So that's what we're gonna do.

56
00:03:00.540 --> 00:03:01.590
But again if you go look,

57
00:03:01.590 --> 00:03:04.790
you might see people creating
their schemas using JavaScript.

58
00:03:04.790 --> 00:03:06.350
I think that's a lot more complicated.

59
00:03:06.350 --> 00:03:08.950
And that's kind of how it was
when GraphQL first started.

60
00:03:08.950 --> 00:03:10.860
In today's world not so much.

61
00:03:10.860 --> 00:03:14.290
So I recommend not doing that unless
you're doing like crazy stuff,

62
00:03:14.290 --> 00:03:15.700
which we do.

63
00:03:15.700 --> 00:03:18.410
And we do use the JavaScript
on sometimes for crazy stuff.

