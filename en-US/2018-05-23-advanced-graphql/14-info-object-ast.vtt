WEBVTT

1
00:00:00.008 --> 00:00:01.720
&gt;&gt; Scott Moss: And
then here's the fun one, it's info.

2
00:00:01.720 --> 00:00:07.748
So let's just look at this one,
because it's easier just to look at,

3
00:00:07.748 --> 00:00:13.571
and then to see yourself that it is
to like talk about, so let's just

4
00:00:13.571 --> 00:00:20.277
do that.
&gt;&gt; Scott Moss: Let's

5
00:00:20.277 --> 00:00:22.626
make another one here.

6
00:00:22.626 --> 00:00:26.672
Yeah, now where did I do that?
&gt;&gt; Scott Moss: I did it in on the ID,

7
00:00:26.672 --> 00:00:27.840
okay, ID's not so bad.

8
00:00:27.840 --> 00:00:29.770
It should be pretty simple,
then, let's see.

9
00:00:31.240 --> 00:00:36.040
All right, and wow,
ID's actually really big, okay.

10
00:00:36.040 --> 00:00:40.889
So this right here is the raw GraphQL AST,
right, so

11
00:00:40.889 --> 00:00:45.750
GraphQL is basically a language,
it is a language.

12
00:00:45.750 --> 00:00:48.570
So it has an AST, and
that's how they do validations.

13
00:00:48.570 --> 00:00:51.210
You can actually hook into the AST and
do some really advanced things,

14
00:00:51.210 --> 00:00:55.270
like write your own custom validations or
your own scholar types.

15
00:00:55.270 --> 00:00:57.060
You can do all types of crazy stuff.

16
00:00:57.060 --> 00:00:59.780
But this is the raw AST.

17
00:00:59.780 --> 00:01:05.070
And the reason this can be useful,
the only time I found this useful

18
00:01:05.070 --> 00:01:09.200
is when I wanna do something
called like field projection.

19
00:01:09.200 --> 00:01:15.500
Basically, when I want to only query the
database for the specific fields that were

20
00:01:15.500 --> 00:01:19.500
asked for in the query, I would use this
to optimize my database queries, right?

21
00:01:19.500 --> 00:01:24.256
But that would only work if you have
like fields that were exactly same

22
00:01:24.256 --> 00:01:25.907
as your GraphQL types.

23
00:01:25.907 --> 00:01:30.930
Like for here, I have a name, a
description, ID, I have all these fields.

24
00:01:30.930 --> 00:01:34.929
So if my database model looked very
similar this, and someone wrote a query

25
00:01:34.929 --> 00:01:38.735
with those field I could take the fields
from the query that they wrote,

26
00:01:38.735 --> 00:01:42.670
and pass them directly to my database,
and say, only grab these fields,

27
00:01:42.670 --> 00:01:45.460
which will optimize my database queries.

28
00:01:45.460 --> 00:01:47.180
That's a very useful
example that I've seen.

29
00:01:47.180 --> 00:01:52.490
But again, your database schema needs to
match very closely to your GraphQL schema.

30
00:01:52.490 --> 00:01:55.380
And I would argue that if
they do match up that close,

31
00:01:55.380 --> 00:01:57.930
you're probably not using
GraphQL to its full potential.

32
00:01:57.930 --> 00:02:00.990
Because you could be doing a lot of
virtual things with those schemas that

33
00:02:00.990 --> 00:02:03.520
you aren't doing, because you
made them look exactly the same.

34
00:02:03.520 --> 00:02:06.930
You're basically using GraphQL as
like a day to day schema, and not so

35
00:02:06.930 --> 00:02:10.680
much as an API schema at that point and
this is like, what's the point of that?

36
00:02:10.680 --> 00:02:11.820
So there's some trade offs.

37
00:02:11.820 --> 00:02:13.740
And I'm sure there's some
more advanced use cases, but

38
00:02:13.740 --> 00:02:18.590
in the while, that is the only time
I've ever seen anyone use info is that.

39
00:02:18.590 --> 00:02:20.150
I've never seen it used anywhere else.

40
00:02:20.150 --> 00:02:24.700
I can think of some other examples
you might use it for, for caching,

41
00:02:25.720 --> 00:02:30.570
invalidating caching, different things
like that, changing different things on

42
00:02:30.570 --> 00:02:35.460
the query, but most of the time,
it's just for that, and for tooling.

43
00:02:35.460 --> 00:02:40.000
If you use Apollo Engine, they use
the info to figure out tracing and

44
00:02:40.000 --> 00:02:40.630
things like that.

45
00:02:40.630 --> 00:02:45.180
But it's mostly for tooling and for
projection on the database queries.

46
00:02:45.180 --> 00:02:46.925
So you will almost never use this.

47
00:02:46.925 --> 00:02:48.661
Basically, that's what I'm trying to say.
&gt;&gt; Speaker 2: [INAUDIBLE] used to

48
00:02:48.661 --> 00:02:51.659
determine complexity to, obviously,

49
00:02:51.659 --> 00:02:54.620
disallow overly complex queries?
&gt;&gt; Scott Moss: Yeah,

50
00:02:54.620 --> 00:02:56.110
now that's really advanced.

51
00:02:56.110 --> 00:02:57.520
And yeah,
we were gonna talk about some of that.

52
00:02:57.520 --> 00:02:59.050
Sounds like you've been
doing some research.

53
00:02:59.050 --> 00:03:06.280
But what he was saying is you can use
it to disallow over advanced queries.

54
00:03:06.280 --> 00:03:09.810
You'll find out soon that,
these queries are gonna get recursive, and

55
00:03:09.810 --> 00:03:13.100
people can just DDOS your
entire system with one query.

56
00:03:13.100 --> 00:03:14.250
So, how do you prevent that?

57
00:03:14.250 --> 00:03:15.650
You would look at this.

58
00:03:15.650 --> 00:03:16.870
Like, I'm gonna look at this AST.

59
00:03:16.870 --> 00:03:18.810
I'm gonna see how deep it goes.

60
00:03:18.810 --> 00:03:22.630
I'm only gonna allow you to go four
levels deep, then I'm going to stop you.

61
00:03:22.630 --> 00:03:27.469
Some people do that, or what they'll do
is they'll give points to certain types,

62
00:03:27.469 --> 00:03:32.100
or this person type is worth four points,
and this task type is worth two points.

63
00:03:32.100 --> 00:03:35.690
And a query can only have 20 points
before it craps out, things like that.

64
00:03:35.690 --> 00:03:38.820
There's so many different things you
can do to prevent things that like.

65
00:03:38.820 --> 00:03:41.390
And this is where you would do it,
is in AST.

66
00:03:41.390 --> 00:03:43.250
So it's specifically for tooling and

67
00:03:43.250 --> 00:03:47.450
advanced cases in database
protection stuff.

68
00:03:47.450 --> 00:03:50.370
But yeah, you will almost never use this.

69
00:03:50.370 --> 00:03:52.630
And if you are,
then like you're on the edge.

70
00:03:52.630 --> 00:03:56.210
You've jumped off the edge
with no parachute.

