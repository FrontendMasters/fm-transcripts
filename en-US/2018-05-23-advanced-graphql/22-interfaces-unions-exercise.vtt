WEBVTT

1
00:00:00.130 --> 00:00:04.705
&gt;&gt; Scott Moss: Well, let's hop into
our exercise which is going to be,

2
00:00:08.227 --> 00:00:10.981
&gt;&gt; Scott Moss: What's this?, lesson 3,

3
00:00:10.981 --> 00:00:14.789
yeah, so let's check out lesson-3.

4
00:00:14.789 --> 00:00:21.290
And in this lesson,
you're gonna be making unions

5
00:00:21.290 --> 00:00:27.340
and interfaces and
you're gonna have to resolve them.

6
00:00:27.340 --> 00:00:32.490
So first things first,
if you look in the task resolvers file,

7
00:00:33.840 --> 00:00:36.280
there's a resolve type
with a comment in it.

8
00:00:36.280 --> 00:00:40.340
That's asking you to resolve this task and
that's because if you look in a task

9
00:00:40.340 --> 00:00:44.480
GraphQL file,
there is a type here called Task.

10
00:00:45.640 --> 00:00:51.170
But there are instructions above and that
says there are two types of tasks indeed,

11
00:00:51.170 --> 00:00:53.330
cuz there is a type property on them.

12
00:00:53.330 --> 00:00:59.020
One is called DevTask,
the other one is called DesignTask.

13
00:00:59.020 --> 00:01:03.305
You need to separate this test
type into an interface and

14
00:01:03.305 --> 00:01:07.070
then have the dev task and
the design task implement that interface.

15
00:01:09.190 --> 00:01:15.080
And here are the specific fields for each
other tasks or each other type really.

16
00:01:15.080 --> 00:01:17.964
So for
a dev task type it has a Repo field For

17
00:01:17.964 --> 00:01:21.427
a design task type that
has an assetUrl field, but

18
00:01:21.427 --> 00:01:26.557
they both implement all of these
similar fields from the task interface.

19
00:01:26.557 --> 00:01:29.810
So you need to convert this task
type into a task interface,

20
00:01:29.810 --> 00:01:33.132
create two new types that
implement these similar fields but

21
00:01:33.132 --> 00:01:36.360
also implement their
own individual fields.

22
00:01:36.360 --> 00:01:38.660
One is called devTask,
the other one is called designTask and

23
00:01:39.820 --> 00:01:43.976
then back into the task resolvers,
you need to resolve that type.

24
00:01:43.976 --> 00:01:48.520
And you could tell GraphQL what type it
is, by using this resolveType function.

25
00:01:49.790 --> 00:01:54.520
Hint, there's a type property on the task,
so look at that and if you wanna know what

26
00:01:54.520 --> 00:01:58.360
those types are, it's pointing
to an enum that says task type.

27
00:01:58.360 --> 00:02:01.109
Look at that, one says design and
one says dev, so

28
00:02:01.109 --> 00:02:03.542
let's take a look at that, so that's one.

29
00:02:03.542 --> 00:02:07.687
The other thing you'll need to do is,
there is now a search folder,

30
00:02:07.687 --> 00:02:11.180
if you're looking at search
folder in the graphQL file,

31
00:02:11.180 --> 00:02:13.890
it's asking you to do something in here.

32
00:02:13.890 --> 00:02:18.303
It's saying you must create a union or
interface here, think about it.

33
00:02:20.552 --> 00:02:26.010
&gt;&gt; Scott Moss: Think about it,
make sure to name it search result.

34
00:02:27.780 --> 00:02:32.520
Because I have a query down here called
search that's expecting to return

35
00:02:32.520 --> 00:02:37.043
an array of the union or interface
that you create call search result.

36
00:02:38.691 --> 00:02:41.188
&gt;&gt; Scott Moss: And if you're in that
same folder, the search folder,

37
00:02:41.188 --> 00:02:42.740
there's also a search resolver.

38
00:02:43.810 --> 00:02:46.995
You can see, it's asking you to
resolve the type of that interface or

39
00:02:46.995 --> 00:02:48.840
union that you created.

40
00:02:48.840 --> 00:02:53.360
So you should look at that and
know what to return.

41
00:02:53.360 --> 00:02:59.795
So a SearchResult should be able to return
&gt;&gt; Scott Moss: A project,

42
00:02:59.795 --> 00:03:05.616
a task, it can return either one of those,
Sso you need to determine,

43
00:03:05.616 --> 00:03:09.890
on what field do you wanna
look at to return that?

44
00:03:09.890 --> 00:03:13.280
And also remember,
a task is now two different types now,

45
00:03:13.280 --> 00:03:15.540
cuz you're writing interface for that.

46
00:03:15.540 --> 00:03:20.020
So really, a search result is returning
a project, a dev task and a design task.

47
00:03:20.020 --> 00:03:24.201
It’s actually the exact same example
that I just showed you with the people,

48
00:03:24.201 --> 00:03:25.307
the cat and the dog.

49
00:03:25.307 --> 00:03:28.711
Where the cat and the dog were
both animals on an interface and

50
00:03:28.711 --> 00:03:32.200
the person was separate type,
it’s the exact same example.

51
00:03:32.200 --> 00:03:33.888
So that’s what you’ll be doing here.

52
00:03:37.341 --> 00:03:39.410
&gt;&gt; Scott Moss: Any questions on that?

53
00:03:39.410 --> 00:03:41.480
So again,
you're gonna be writing the unions or

54
00:03:41.480 --> 00:03:46.400
interfaces in the GraphQL files and
then the appropriate resolver files,

55
00:03:46.400 --> 00:03:49.090
you'll be writing the function
to resolve those types.

56
00:03:49.090 --> 00:03:52.980
Everything else is pretty much wired up,
shouldn't have to touch anything else.

