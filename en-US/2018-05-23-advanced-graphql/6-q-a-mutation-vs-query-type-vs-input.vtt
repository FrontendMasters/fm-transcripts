WEBVTT

1
00:00:00.090 --> 00:00:02.350
&gt;&gt; Scott Moss: Is there anything stopping
you from performing create, update,

2
00:00:02.350 --> 00:00:05.620
delete operations from
within a query resolver?

3
00:00:05.620 --> 00:00:08.370
There's nothing stopping you
from doing that, and in fact,

4
00:00:08.370 --> 00:00:13.310
sometimes when you do queries
they have side effects

5
00:00:13.310 --> 00:00:17.740
that might force you to do create,
update, and deletes,

6
00:00:17.740 --> 00:00:23.180
but as far as the expectation
of what a query does,

7
00:00:23.180 --> 00:00:26.220
it's not expected that
it's gonna do a mutation.

8
00:00:26.220 --> 00:00:28.920
So I would think of mutations inside
of a query as more of side effects and

9
00:00:28.920 --> 00:00:29.687
not a direct thing.

10
00:00:35.516 --> 00:00:36.352
&gt;&gt; Scott Moss: Let's see,

11
00:00:36.352 --> 00:00:41.330
can we use user-defined types in
the input instead of using the string?

12
00:00:41.330 --> 00:00:43.730
Yep, that's what input types are for,
however,

13
00:00:43.730 --> 00:00:49.760
you cannot use a type inside of a input.

14
00:00:49.760 --> 00:00:52.290
So, if I were to have a type called

15
00:00:55.560 --> 00:01:00.775
Args, and it was a type of Args,
let's just say string, and

16
00:01:00.775 --> 00:01:07.320
then I had a query,
&gt;&gt; Scott Moss: That was like getArgs or

17
00:01:07.320 --> 00:01:12.102
getThings, and
I wanted to use the Args as the input,

18
00:01:12.102 --> 00:01:17.920
I couldn't do this,
because Args is a type and not an input.

19
00:01:17.920 --> 00:01:23.320
The only thing I would have
to change is that to input.

20
00:01:25.635 --> 00:01:29.600
&gt;&gt; Scott Moss: It gets a little more
complicated when you have nested types.

21
00:01:29.600 --> 00:01:35.521
So if I had another type here
called Person with a name: String,

22
00:01:35.521 --> 00:01:40.236
and instead of putting name
here if I wanted to say

23
00:01:40.236 --> 00:01:45.280
you've got to pass a person,
I also could not do that,

24
00:01:45.280 --> 00:01:52.600
because although Args is an input,
person is not an input, it's a type.

25
00:01:52.600 --> 00:01:54.560
So that would have to be an input as well.

26
00:01:54.560 --> 00:01:59.800
So basically to use an input,
to use a type

27
00:01:59.800 --> 00:02:05.010
as in input in [INAUDIBLE] everything has
to resolve to an input no matter how deep.

28
00:02:05.010 --> 00:02:10.540
Every single property either has
to be an input or a scholar type,

29
00:02:10.540 --> 00:02:16.142
and a scholar type are just String,
Int, Float,

30
00:02:16.142 --> 00:02:21.550
Boolean, ID, yeah.

31
00:02:21.550 --> 00:02:25.668
So it either has to be one of these,
or a input type.

32
00:02:25.668 --> 00:02:28.915
You can't put a type, in an input,

33
00:02:28.915 --> 00:02:33.803
even if it's the exact same
shape as another object.

34
00:02:33.803 --> 00:02:36.890
It has to have the word
input in front of it.

35
00:02:36.890 --> 00:02:38.300
So, that kind of gets repetitive.

36
00:02:38.300 --> 00:02:40.230
Hopefully they'll work on
something that fixes that.

37
00:02:41.230 --> 00:02:43.690
But yeah,
that took me a while to figure out.

38
00:02:43.690 --> 00:02:44.190
Kinda hurt.

