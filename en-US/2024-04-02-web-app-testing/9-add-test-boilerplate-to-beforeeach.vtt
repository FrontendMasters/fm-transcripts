WEBVTT

1
00:00:00.550 --> 00:00:03.960
Now, the thing to kind of notice at
this point is we now have repetition.

2
00:00:03.960 --> 00:00:07.920
And so it would be nice to kinda
simplify this particular thing.

3
00:00:07.920 --> 00:00:11.182
So what would be nice
if we took these mocks,

4
00:00:11.182 --> 00:00:15.720
all of these three things, and
pulled them out to a setup.

5
00:00:15.720 --> 00:00:17.030
So I'm gonna do just that.

6
00:00:17.030 --> 00:00:18.330
So now let's pull it out.

7
00:00:18.330 --> 00:00:21.694
So let's grab this code right here.

8
00:00:21.694 --> 00:00:26.026
And let's go to the correct
level described.

9
00:00:26.026 --> 00:00:29.938
So this is gonna be probably useful for
all of the API, for the Github IP and

10
00:00:29.938 --> 00:00:31.656
not just for Git repositories.

11
00:00:31.656 --> 00:00:32.686
Let's put it on top level.

12
00:00:33.936 --> 00:00:37.639
And now we can't just leave it in here
because this code doesn't execute over and

13
00:00:37.639 --> 00:00:38.246
over again.

14
00:00:38.246 --> 00:00:41.868
Instead we have something
called beforeEach.

15
00:00:47.233 --> 00:00:50.460
So we're gonna split this,

16
00:00:50.460 --> 00:00:55.166
we will leave the type information here,

17
00:00:55.166 --> 00:01:00.147
and of course it's not
gonna have to be let.

18
00:01:06.437 --> 00:01:12.658
So we can set up our mocks

19
00:01:12.658 --> 00:01:18.578
in here and assign it.

20
00:01:18.578 --> 00:01:21.187
We probably wanna have a type, so

21
00:01:21.187 --> 00:01:26.975
it's gonna be mock of parameters of fetch,
and that's a correct guess.

22
00:01:26.975 --> 00:01:28.622
You have to import the mock.

23
00:01:31.702 --> 00:01:34.162
This one is gonna be a mock
of number of promise.

24
00:01:34.162 --> 00:01:35.772
Wow, autopilot is amazing.

25
00:01:37.082 --> 00:01:39.082
And wow, okay.

26
00:01:39.082 --> 00:01:42.765
&gt;&gt; Last time you said that
the params were completely wrong.

27
00:01:42.765 --> 00:01:43.961
&gt;&gt; [LAUGH]
&gt;&gt; Yeah,

28
00:01:43.961 --> 00:01:45.868
sometimes it just does bad things.

29
00:01:45.868 --> 00:01:48.270
&gt;&gt; It looked correct,
but it was not correct.

30
00:01:48.270 --> 00:01:51.550
&gt;&gt; Yeah, but like this one,
it got it right.

31
00:01:51.550 --> 00:01:53.293
So now that we have this,

32
00:01:53.293 --> 00:01:57.620
what you can see is that we can
now simplify our tests, right?

33
00:01:57.620 --> 00:02:00.312
Because our setup is done for us.

34
00:02:00.312 --> 00:02:05.339
And so we can go back and we can delete
this piece of code as well, right?

35
00:02:05.339 --> 00:02:08.532
And so
now we should still have tests that run.

36
00:02:08.532 --> 00:02:10.487
Let's see,
it looks like we broke something.

37
00:02:10.487 --> 00:02:14.502
Look where it imported it from,
from wrong location.

38
00:02:17.072 --> 00:02:19.173
Okay, sanity has returned, okay.

39
00:02:19.173 --> 00:02:24.299
[COUGH] So we have all the tests working.

40
00:02:24.299 --> 00:02:29.725
Okay, so the thing I wanted to kinda
show off over here is how to do

41
00:02:29.725 --> 00:02:35.052
unit testing isolation,
how you have the marks on both sides,

42
00:02:35.052 --> 00:02:40.795
how you can use a test runner,
like B test, to do your testing.

43
00:02:40.795 --> 00:02:45.281
And more importantly, notice how we just
got into this flow of I'm just coding and

44
00:02:45.281 --> 00:02:48.785
the tests are running always
on the background, right?

45
00:02:48.785 --> 00:02:53.494
When I usually do this, I take this window
and I put it on the right-hand side when I

46
00:02:53.494 --> 00:02:56.991
have a bigger monitor so
that I can just see the test running.

47
00:02:56.991 --> 00:03:01.109
We're having a pretty small monitor coz
we wanted to stream it out on a UI.

48
00:03:01.109 --> 00:03:04.737
So it's kind of squished over here,
but in the real world,

49
00:03:04.737 --> 00:03:09.382
you would have it on a side running and
you just go and code and add features and

50
00:03:09.382 --> 00:03:11.284
go produce whatever you want.

51
00:03:11.284 --> 00:03:13.825
You can debug this,
put a debugger into it, and so on.

