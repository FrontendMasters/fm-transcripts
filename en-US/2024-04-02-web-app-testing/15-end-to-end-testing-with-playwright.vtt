WEBVTT

1
00:00:00.876 --> 00:00:03.635
So, when you're doing end-to-end testing,

2
00:00:03.635 --> 00:00:06.405
you want to be basically
pretending to be a user.

3
00:00:06.405 --> 00:00:10.538
And that's why it's called end-to-end,
because you wanna test everything.

4
00:00:10.538 --> 00:00:14.095
And notice how it would be difficult
to create an end-to-end test

5
00:00:14.095 --> 00:00:18.555
that actually asserts that your clustering
algorithm actually works correctly.

6
00:00:18.555 --> 00:00:22.069
It would be a hard thing to do.

7
00:00:22.069 --> 00:00:23.518
It's possible, but it would be hard.

8
00:00:23.518 --> 00:00:28.708
Also, it would be slow, because these
end-to-end tests actually require that

9
00:00:28.708 --> 00:00:33.532
you perform navigation to a particular
page and you see the correct result.

10
00:00:33.532 --> 00:00:37.727
So, typically we use some tools for
it, and Playwright, I think,

11
00:00:37.727 --> 00:00:40.682
is one of them that's
most popular these days.

12
00:00:40.682 --> 00:00:43.630
And I think it's one of
the best in terms of,

13
00:00:43.630 --> 00:00:48.349
all these tools kind of learn from
the mistakes of the previous tools.

14
00:00:48.349 --> 00:00:54.026
This is the latest one, and it tries to
provide the highest level of experience.

15
00:00:54.026 --> 00:00:57.429
Playwright right now is kind of popular,
it is from Microsoft.

16
00:00:57.429 --> 00:00:59.536
It's pretty cool, anyways.

17
00:00:59.536 --> 00:01:03.371
&gt;&gt; We do have a full course on Cypress,
and

18
00:01:03.371 --> 00:01:05.385
then we also-
&gt;&gt; [LAUGH]

19
00:01:05.385 --> 00:01:07.593
&gt;&gt; In the Enterprise UI Dev, Testing and

20
00:01:07.593 --> 00:01:09.870
Code Quality, which is a full course,

21
00:01:09.870 --> 00:01:14.564
we have a section on Playwright there,
and Steve teaches both of those courses.

22
00:01:14.564 --> 00:01:21.050
I'm pretty sure in the Enterprise
Playwright, he discusses the differences.

23
00:01:21.050 --> 00:01:22.415
&gt;&gt; [LAUGH] Perfect.

24
00:01:22.415 --> 00:01:23.074
&gt;&gt; So, there you go.

25
00:01:23.074 --> 00:01:25.804
&gt;&gt; [LAUGH]
&gt;&gt; Perfect, so now with Playwright,

26
00:01:25.804 --> 00:01:29.582
we really wanna make a test for
this particular component.

27
00:01:29.582 --> 00:01:33.192
Let me just go over the component here.

28
00:01:33.192 --> 00:01:34.090
Why isn't, okay, here we go.

29
00:01:37.717 --> 00:01:40.947
Sorry that's, right.

30
00:01:40.947 --> 00:01:42.975
So, okay, we have a component.

31
00:01:45.262 --> 00:01:48.775
This component represents
this page right here, right?

32
00:01:48.775 --> 00:01:51.073
So what we have on it is we have a page,

33
00:01:51.073 --> 00:01:54.648
we have a form where you can
change your values over here.

34
00:01:54.648 --> 00:02:01.487
I believe if I run this, If I, for

35
00:02:01.487 --> 00:02:07.036
example, pick a wrong value and I hit,
let's see, it validates, right?

36
00:02:07.036 --> 00:02:08.971
It shows me errors.

37
00:02:08.971 --> 00:02:12.322
So I can only do specific range.

38
00:02:12.322 --> 00:02:17.366
I believe the same thing happens
on a distance if I do, etc.

39
00:02:17.366 --> 00:02:20.564
So there's validation that is
happening in the page as well.

40
00:02:20.564 --> 00:02:24.360
So presumably, we would like
to check all of those things.

41
00:02:24.360 --> 00:02:26.577
All right, so let's do an end-to-end test.

42
00:02:26.577 --> 00:02:29.348
And we're talking about Playwright.

43
00:02:29.348 --> 00:02:31.465
So let's install Playwright.

44
00:02:31.465 --> 00:02:37.693
You go here,
run the command in a command line.

45
00:02:37.693 --> 00:02:41.836
And that should initialize,
test sounds good.

46
00:02:41.836 --> 00:02:46.474
Okay, so, Playwright is gonna set up
a runner for us, Playwright test, so

47
00:02:46.474 --> 00:02:50.247
then we can just do test e2e and
essentially run Praywright.

48
00:02:50.247 --> 00:02:53.419
So how do we create tests for Playwright?

49
00:02:53.419 --> 00:02:56.284
So, remember that Playwright
pretends to be user, essentially.

50
00:02:56.284 --> 00:03:01.011
We are bringing up
a real browser that does

51
00:03:01.011 --> 00:03:06.019
real work to perform all these operations.

52
00:03:06.019 --> 00:03:09.133
So the first thing we have to do is we
have to make sure that our server is

53
00:03:09.133 --> 00:03:09.635
running.

54
00:03:09.635 --> 00:03:12.095
So let's start our server.

55
00:03:12.095 --> 00:03:15.736
And then,
Playwright created a test folder, and

56
00:03:15.736 --> 00:03:19.562
in the test folder it created
an example test for us.

57
00:03:19.562 --> 00:03:24.164
So you can see that has titled tests,
you navigate to a particular page,

58
00:03:24.164 --> 00:03:29.314
there's lots of awaits in Playwright,
because everything's asynchronous.

59
00:03:29.314 --> 00:03:34.484
And then you can expect that a title
contains a particular word inside of it.

60
00:03:34.484 --> 00:03:38.047
So we're gonna do something similar for

61
00:03:38.047 --> 00:03:42.772
our page,
Let's just copy their input statements.

62
00:03:42.772 --> 00:03:44.797
And let's make a new test here.

63
00:03:44.797 --> 00:03:48.847
So cluster.spec.ts, and

64
00:03:48.847 --> 00:03:52.563
in here we would say test.

65
00:03:55.118 --> 00:03:57.380
So let's say we wanna test our title,
right?

66
00:03:57.380 --> 00:04:02.399
So we navigate to a page.

67
00:04:02.399 --> 00:04:09.250
And we say, Page.

68
00:04:13.897 --> 00:04:20.867
Go to Yes, here we go.

69
00:04:20.867 --> 00:04:26.380
And let me do URL, go to Well,

70
00:04:26.380 --> 00:04:29.660
we're not gonna go here,
we're going to go to this page right here.

71
00:04:34.941 --> 00:04:38.975
So we have to await this,
and then we say expect.

72
00:04:38.975 --> 00:04:41.573
They all await as well expect.

73
00:04:41.573 --> 00:04:50.892
That page Title is title.

74
00:04:54.832 --> 00:04:55.850
To contain,

75
00:04:55.850 --> 00:05:01.775
what is to say this is called Chicago
traffic accidents clustering, okay.

76
00:05:01.775 --> 00:05:11.438
To, to, To, they have title, no.

77
00:05:11.438 --> 00:05:17.751
To, To have a higher level of think, okay,

78
00:05:23.212 --> 00:05:27.392
All right, so
let's see if we can run this.

79
00:05:27.392 --> 00:05:33.294
So to run it, we do our test.e2e.

80
00:05:33.294 --> 00:05:33.970
Oops.

81
00:05:40.652 --> 00:05:42.692
And we have failed our test.

82
00:05:42.692 --> 00:05:45.643
Now, you probably want
to actually debug it.

83
00:05:45.643 --> 00:05:48.506
So there's a special way to
run it into the debug mode.

84
00:05:48.506 --> 00:05:50.663
Let me show you how that works.

85
00:05:50.663 --> 00:05:52.927
Yes, this is the report.

86
00:05:52.927 --> 00:05:53.943
So let's do that.

87
00:06:02.861 --> 00:06:06.276
So, when you're in a debugger, you
essentially kind of get a debugger window,

88
00:06:06.276 --> 00:06:07.291
and here's your test.

89
00:06:07.291 --> 00:06:12.296
So in our case,
we had our s title cluster test,

90
00:06:12.296 --> 00:06:16.548
and I can go and run it and
I can see what's

91
00:06:16.548 --> 00:06:21.202
actually happening inside of Playwright.

92
00:06:21.202 --> 00:06:25.735
I can see that it's failing because
expected string is clustering, but

93
00:06:25.735 --> 00:06:27.900
the actual string is much longer.

94
00:06:27.900 --> 00:06:30.521
So if I go and I change this in our test,

95
00:06:34.520 --> 00:06:36.796
Then we should be able to rerun
the test and it should pass.

96
00:06:40.120 --> 00:06:44.229
And so, you can see that what Playwright
has done is they have done a much better

97
00:06:44.229 --> 00:06:46.291
job of kinda integrating everything.

98
00:06:46.291 --> 00:06:49.841
So you kinda have an IDE around
your browser and you can go and

99
00:06:49.841 --> 00:06:52.049
poke at it and see what is happening.

