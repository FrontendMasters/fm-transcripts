WEBVTT

1
00:00:00.300 --> 00:00:03.461
I want you to go to that URL, okay?

2
00:00:03.461 --> 00:00:09.240
Open that URL in your browser
storage-quota.glitch.me.

3
00:00:10.940 --> 00:00:13.016
You have a QR code there
on the screen as well,

4
00:00:13.016 --> 00:00:14.720
in case you wanna take it from there.

5
00:00:14.720 --> 00:00:16.290
Any browser will work.

6
00:00:16.290 --> 00:00:20.762
I'm going to use Chrome,
because it has the best debugging tools.

7
00:00:20.762 --> 00:00:25.802
So this is the website,
it's an open source website,

8
00:00:25.802 --> 00:00:30.853
you have the GitHub repo in
case you wanna look at that.

9
00:00:30.853 --> 00:00:33.260
By the way, this website was
created by the Chrome team.

10
00:00:33.260 --> 00:00:39.219
And it's a way that we have to actually
play with all these storages and

11
00:00:39.219 --> 00:00:41.849
see how they look like, okay?

12
00:00:41.849 --> 00:00:48.230
For example, here you can see my quota,
that looks like a lot, right?

13
00:00:48.230 --> 00:00:54.156
I will explain why is that in a minute,
that this website has used 5 megabytes,

14
00:00:54.156 --> 00:00:58.231
or maybe bytes,
here it says megabytes, but anyway.

15
00:00:58.231 --> 00:01:03.389
And here I can try,
I can store 1 megabytes on IndexedDB,

16
00:01:03.389 --> 00:01:07.193
so I can see how it's moving there, okay?

17
00:01:07.193 --> 00:01:12.183
By the way, you can hit Fill,
and that's adding

18
00:01:12.183 --> 00:01:17.620
1 megabyte per second,
or even half a second.

19
00:01:17.620 --> 00:01:23.010
The quota is for the whole origin,
not just for one API.

20
00:01:23.010 --> 00:01:25.850
So let's say that it
depends on the browser.

21
00:01:25.850 --> 00:01:29.301
I'm in Chrome right now, and in Chrome,

22
00:01:29.301 --> 00:01:34.339
it's actually a percentage of
your hard disk space, okay?

23
00:01:34.339 --> 00:01:36.370
We will see that in action in a minute.

24
00:01:36.370 --> 00:01:40.830
So if you hit Fill,
you will start filling your hard drive.

25
00:01:40.830 --> 00:01:46.668
And if you open DevTools, I'm going
to probably dock this to the right,

26
00:01:46.668 --> 00:01:52.334
there is a whole section for
storage in DevTools within Application.

27
00:01:52.334 --> 00:01:57.820
So if you go to Application,
there is a whole section for

28
00:01:57.820 --> 00:02:01.224
storage, okay, so the storage.

29
00:02:01.224 --> 00:02:06.624
And by the way, I'm not sure why
there is first a summary for

30
00:02:06.624 --> 00:02:10.540
the storage at the application level.

31
00:02:10.540 --> 00:02:12.780
So I'm not sure why it's
not in the storage.

32
00:02:12.780 --> 00:02:15.520
So it's Application &gt; Storage, okay?

33
00:02:15.520 --> 00:02:20.784
So if you go there, you will see
the current quota and how much is actually

34
00:02:20.784 --> 00:02:25.462
being used by IndexedDB,
Cache storage, or Service Workers.

35
00:02:25.462 --> 00:02:30.670
That should match the data that
the qeb app is giving us, okay?

36
00:02:30.670 --> 00:02:34.685
From here,
you can clear all the data at once.

37
00:02:34.685 --> 00:02:36.684
So these are developer tools,okay?

38
00:02:36.684 --> 00:02:41.590
So this is a storage summary
that we have in Chrome.

39
00:02:41.590 --> 00:02:44.630
And also we have a section per a storage.

40
00:02:44.630 --> 00:02:49.620
So here I have local storage,
so I can see the keys and

41
00:02:49.620 --> 00:02:54.281
values, indexedDB, so
I can see my databases.

42
00:02:54.281 --> 00:02:57.823
And the data store,
this is a actually random data, so

43
00:02:57.823 --> 00:03:02.890
this website is storing random
data just to fill my disk, okay?

44
00:03:02.890 --> 00:03:06.200
Web SQL, I mean, still here.

45
00:03:06.200 --> 00:03:11.800
Cookies or, well, tokens, this has nothing
to do with the storage data anyway, okay?

46
00:03:11.800 --> 00:03:16.951
It's something that is a store-client
side, but it's not a storage API, okay?

47
00:03:16.951 --> 00:03:23.417
So if you're using Firefox,
you have something similar.

48
00:03:23.417 --> 00:03:26.320
So if I open Firefox, let me copy the URL.

49
00:03:28.160 --> 00:03:30.972
So if I open DevTools,

50
00:03:30.972 --> 00:03:35.862
okay, there is also a tab for Storage.

51
00:03:35.862 --> 00:03:40.932
So I mean the Storage tab, okay,
where you can see IndexedDB,

52
00:03:40.932 --> 00:03:45.045
where I can see my databases,
this is a database and

53
00:03:45.045 --> 00:03:49.158
this is a data store, and
then the data, cookies,

54
00:03:49.158 --> 00:03:55.596
cache storage, With the data,
local storage and so on.

55
00:03:55.596 --> 00:03:58.194
We are going to use this with our project,

56
00:03:58.194 --> 00:04:02.809
so we're going to see in action how
the data we are storing appears there.

57
00:04:02.809 --> 00:04:10.400
And Safari has also tools for
this, but not for cache storage.

58
00:04:11.660 --> 00:04:16.639
So they also have a Storage
tab where you can see cookies,

59
00:04:16.639 --> 00:04:21.600
IndexedDB, local storage, and that's all.

60
00:04:21.600 --> 00:04:24.381
From here, you can see Application Cache,

61
00:04:24.381 --> 00:04:27.926
that's the one that we don't use,
it's deprecated.

62
00:04:27.926 --> 00:04:32.040
Databases, that's WebSQL, Local Storage,
Session storage, IndexedDB.

63
00:04:33.550 --> 00:04:38.972
But we don't have a tool for
cache storage, that's the new cache

64
00:04:38.972 --> 00:04:44.730
storage API, the Webkit Inspector
does not include that.

65
00:04:44.730 --> 00:04:47.134
So if you want to debug that in Safari,

66
00:04:47.134 --> 00:04:51.585
the only thing that we have is
an extension available in the App Store.

67
00:04:52.775 --> 00:04:57.337
So there is a free extension that will
let you see the Service Worker and

68
00:04:57.337 --> 00:05:02.535
the cache storage as an extension,
as a plugin for Safari, okay, make sense?

69
00:05:02.535 --> 00:05:08.032
So we are going to make use of these
debugging tools a lot to see if the data

70
00:05:08.032 --> 00:05:13.179
is there, how it looks like,
if it works, and we can see the data.

71
00:05:13.179 --> 00:05:16.847
Something important, as we have just seen,

72
00:05:16.847 --> 00:05:21.980
all the data that we are storing
is public to the user, okay?

73
00:05:21.980 --> 00:05:25.871
So we need to have that in mind.

74
00:05:25.871 --> 00:05:29.889
At any time, the user can go,
not just the user,

75
00:05:29.889 --> 00:05:34.299
the native apps in desktop
devices at least, I mean,

76
00:05:34.299 --> 00:05:37.631
a virus something like that,

77
00:05:37.631 --> 00:05:42.433
can actually read the data
that the websites are storing,

78
00:05:42.433 --> 00:05:47.749
because the browser has that data
somewhere in your hard drive.

79
00:05:47.749 --> 00:05:53.477
But it's public to the user,
anyone can see and change the data.

80
00:05:53.477 --> 00:05:59.237
Because with just the console, so
I can go to any website, for example,

81
00:05:59.237 --> 00:06:04.241
here, my local storage is empty,
but I can go to the console and

82
00:06:04.241 --> 00:06:11.780
try to store something in local storage,
like "learning" "Frontend Masters".

83
00:06:11.780 --> 00:06:14.948
So key value, and
I will take, say, setItem, so

84
00:06:14.948 --> 00:06:20.200
I'm going to set the item learning
with the value Frontend Masters.

85
00:06:20.200 --> 00:06:23.779
So now if I'm going to storages,

86
00:06:25.575 --> 00:06:29.970
Now I have local storage I can refresh it,
let me [INAUDIBLE].

87
00:06:29.970 --> 00:06:33.528
And here I have learning Frontend Masters.

88
00:06:33.528 --> 00:06:39.452
And I can change also from here, I don't
even need to write JavaScript, okay?

89
00:06:39.452 --> 00:06:43.300
And from here,
I can clear the storage as well.

90
00:06:43.300 --> 00:06:48.200
So any user from any browser
can open DevTools and do this,

91
00:06:48.200 --> 00:06:50.604
can see and change the data.

92
00:06:50.604 --> 00:06:55.943
And changing the data means that
they can also break your data,

93
00:06:55.943 --> 00:06:59.881
because they can delete
some part of the data.

94
00:06:59.881 --> 00:07:03.200
If you have a JSON,
they can make the JSON invalid.

95
00:07:04.360 --> 00:07:09.239
So there are many situations that
might trigger conditions in your

96
00:07:09.239 --> 00:07:12.906
app that you need to consider and
treat properly.

