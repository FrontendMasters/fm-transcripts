WEBVTT

1
00:00:00.240 --> 00:00:07.709
If you go to our projects website that's
furman.github.io/browser storage,

2
00:00:07.709 --> 00:00:12.092
we're going to start
working with our project.

3
00:00:12.092 --> 00:00:15.224
So here in the second chapter,

4
00:00:15.224 --> 00:00:21.120
you have a link to another
repo that you can clone.

5
00:00:21.120 --> 00:00:22.670
That's our progressive web app.

6
00:00:22.670 --> 00:00:27.090
It's a progressive web app
known as Coffee Masters, okay?

7
00:00:27.090 --> 00:00:29.780
So we like coffee so it's a PWA.

8
00:00:29.780 --> 00:00:31.359
Let's say that we have a coffee shop.

9
00:00:32.530 --> 00:00:36.650
It's like the menu app where
we can order from there, okay?

10
00:00:36.650 --> 00:00:39.030
It's kind of a test app.

11
00:00:39.030 --> 00:00:43.537
It's vanilla js, so no react,
no bu, no neck js, no nothing,

12
00:00:43.537 --> 00:00:45.410
just plain vanilla js.

13
00:00:45.410 --> 00:00:52.520
So and we are going to use the four
APIs that we have seen here, okay?

14
00:00:52.520 --> 00:00:58.620
So it's github.com/fergman,
my last name, /coffee-masters-pwa, okay?

15
00:01:00.110 --> 00:01:05.021
So if you just go and clone this
project and open that in VS Code or

16
00:01:05.021 --> 00:01:06.850
your IDE, okay?

17
00:01:06.850 --> 00:01:09.721
We're going to see it in action first and

18
00:01:09.721 --> 00:01:14.250
then we will start adding
persistent storage to this app.

19
00:01:14.250 --> 00:01:16.930
That will be our first lab for today.

20
00:01:18.780 --> 00:01:26.113
So if I'm going back to BS code,
This is the code.

21
00:01:26.113 --> 00:01:32.100
You have an HTML, we don't need to
take too much time analyzing this.

22
00:01:32.100 --> 00:01:35.370
But we have an scripts section.

23
00:01:35.370 --> 00:01:39.870
There is an app js
initial like entry point.

24
00:01:39.870 --> 00:01:45.070
And this app js it's importing
using ACMA script modules.

25
00:01:45.070 --> 00:01:47.823
So this is using really modern JavaScript.

26
00:01:47.823 --> 00:01:50.097
I'm importing the other modules.

27
00:01:50.097 --> 00:01:52.210
I have a routing system.

28
00:01:52.210 --> 00:01:56.273
I have a router here that is using
just plain browser APIs to work with

29
00:01:56.273 --> 00:02:00.836
the history, with push tape, something
like react router or view router or

30
00:02:00.836 --> 00:02:03.820
angular router, but done from a scratch.

31
00:02:03.820 --> 00:02:06.277
But it actually is pretty simple, okay?

32
00:02:06.277 --> 00:02:11.108
It's because the important part here will
be to talk about the storage not about

33
00:02:11.108 --> 00:02:12.200
how to make a PWA.

34
00:02:13.520 --> 00:02:18.939
So to run this app and because this
app is a single page application,

35
00:02:18.939 --> 00:02:25.900
we should run it, okay, with a server that
supports single patient's application.

36
00:02:25.900 --> 00:02:31.445
So every route goes to the same
index html, that's kind of the idea.

37
00:02:31.445 --> 00:02:35.564
So in distractions in the website,

38
00:02:35.564 --> 00:02:43.552
you have here a quick server command
that you can run, mpx serve -s.

39
00:02:43.552 --> 00:02:49.380
The -s will actually make it single
page application compatible.

40
00:02:49.380 --> 00:02:54.916
So if I open a terminal here and
run mpx serve -s,

41
00:02:54.916 --> 00:03:02.083
will open a small server on
localhost 3000, for example.

42
00:03:02.083 --> 00:03:09.171
And I can bring, for example,
an iOS simulator here so

43
00:03:09.171 --> 00:03:14.180
we can see how this app looks like.

44
00:03:14.180 --> 00:03:16.004
That's Coffee Masters, okay?

45
00:03:16.004 --> 00:03:19.890
So I have the menu here
as some kind of my home.

46
00:03:19.890 --> 00:03:22.289
So if I want the black tea, I can get in.

47
00:03:22.289 --> 00:03:26.440
I can see the details, and
I can add this to my cart, okay?

48
00:03:26.440 --> 00:03:31.450
And I can go back to the menu and
now add a croissant, okay?

49
00:03:31.450 --> 00:03:35.210
And then, I have the menu, the cart.

50
00:03:35.210 --> 00:03:40.200
On the cart, I can delete something
from the cart, and I can place an order.

51
00:03:40.200 --> 00:03:46.090
That just gives you a random order number
telling you that your order will be ready.

52
00:03:46.090 --> 00:03:50.445
You close, it empties the cart,
that's all.

53
00:03:50.445 --> 00:03:55.740
And by the way, this is a PWA, so I can
install it in my homescreen on iPhone.

54
00:03:57.090 --> 00:04:02.820
I have no one icon and
now I have a full screen app on iPhone.

55
00:04:02.820 --> 00:04:07.874
But this apps is not using any storage so
if we don't have connection,

56
00:04:07.874 --> 00:04:12.870
if the connection is slow,
okay, nothing's gonna work.

57
00:04:12.870 --> 00:04:15.320
I'm not using any kind of storage.

58
00:04:15.320 --> 00:04:20.696
So our goal will be during the rest of
the workshop to actually use web storage

59
00:04:20.696 --> 00:04:25.652
IndexDB, crashes storage and
the file system API to provide some kind

60
00:04:25.652 --> 00:04:30.707
of to improve the user experience to
provide offline support and so on.

