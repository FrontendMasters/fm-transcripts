WEBVTT

1
00:00:00.030 --> 00:00:02.480
&gt;&gt; Nina Zakharenko: You saw me use pip

2
00:00:02.480 --> 00:00:05.610
to install requests in
introduction to Python.

3
00:00:05.610 --> 00:00:10.612
That all happened very fast, and
I didn't really talk about where

4
00:00:10.612 --> 00:00:16.347
I might go to find out more information
about the request package that I use.

5
00:00:16.347 --> 00:00:18.125
So PyPI,

6
00:00:27.614 --> 00:00:30.609
&gt;&gt; Nina Zakharenko: PyPI
lives at pypi.org.

7
00:00:36.283 --> 00:00:38.065
&gt;&gt; Nina Zakharenko: And
you can find, install,

8
00:00:38.065 --> 00:00:41.800
publish Python packages with
this Python Package Index.

9
00:00:41.800 --> 00:00:46.060
So here I could search for
requests, and as

10
00:00:47.390 --> 00:00:51.676
of right now,
there are 172,000 stored in PyPI.

11
00:00:54.350 --> 00:01:01.030
So I can search for requests,
and we'll see a few things here.

12
00:01:01.030 --> 00:01:04.021
Now, it looks like request
three is a name squat.

13
00:01:04.021 --> 00:01:06.430
&gt;&gt; Student: It's not up yet,
that's why they put that there.

14
00:01:06.430 --> 00:01:09.840
&gt;&gt; Nina Zakharenko: Yeah, so this isn't
quite the package that we're looking for.

15
00:01:11.940 --> 00:01:14.680
Let's look at this one, and
this is a version number.

16
00:01:15.750 --> 00:01:18.860
And here we go,
it says it gives us a project description.

17
00:01:18.860 --> 00:01:23.570
So it's the Non-GMO HTTP Library for

18
00:01:23.570 --> 00:01:28.270
easier HTTP consumption, and

19
00:01:28.270 --> 00:01:31.340
we can look at the release history,
we can download the files.

20
00:01:31.340 --> 00:01:36.188
The project will usually have
a link to the home page.

21
00:01:39.369 --> 00:01:43.169
&gt;&gt; Nina Zakharenko: We can click here
to view the statistics for this.

22
00:01:45.590 --> 00:01:50.874
And,
&gt;&gt; Nina Zakharenko: Looks like this

23
00:01:50.874 --> 00:01:56.570
is a specific version, but these should
just post statistics right here.

24
00:01:56.570 --> 00:01:59.840
We'll see who the maintainers
are kind of on the left-hand side,

25
00:01:59.840 --> 00:02:02.610
what the license is,
the development status,

26
00:02:02.610 --> 00:02:08.670
if it's just a beta version,
and which versions it supports.

27
00:02:08.670 --> 00:02:12.140
And this is a really,
really great tool, a great resource.

28
00:02:12.140 --> 00:02:17.130
You can search for
all sorts of external packages here.

29
00:02:17.130 --> 00:02:22.050
And to install this library, we'll give
you setup instructions right here.

30
00:02:23.740 --> 00:02:28.530
So the new,
you'll see pip being used here,

31
00:02:28.530 --> 00:02:33.650
but the new recommended way
of installing packages, and

32
00:02:33.650 --> 00:02:35.850
I'm gonna exit out of my repl.

33
00:02:35.850 --> 00:02:37.830
So I would say, don't do this.

34
00:02:40.300 --> 00:02:46.830
Because as we talked about, as you install
more versions of Python on your system,

35
00:02:46.830 --> 00:02:50.810
you'll usually have a Python 2 and
a Python 3.

36
00:02:50.810 --> 00:02:53.810
You end up with multiple versions of pip.

37
00:02:53.810 --> 00:02:57.900
And if you don't use the right one,
or depending on your system setup,

38
00:02:57.900 --> 00:03:03.660
you could install your external libraries
to the wrong place using the wrong path.

39
00:03:03.660 --> 00:03:08.158
So the safest way of doing this is
to be in your virtual environment.

40
00:03:08.158 --> 00:03:11.870
And then you just, you know exactly
where python points, right.

41
00:03:11.870 --> 00:03:15.646
I say python-version here.

42
00:03:15.646 --> 00:03:20.800
I know that it's my python 372 from my
environment because it's activated.

43
00:03:20.800 --> 00:03:25.620
So the better way of doing this is to
say python -m, which means Python,

44
00:03:25.620 --> 00:03:31.120
run this as a module, and
give the name of the module as pip.

45
00:03:31.120 --> 00:03:33.620
And then you can say install requests.

46
00:03:33.620 --> 00:03:35.900
This way you're guaranteed
to have the right path.

47
00:03:38.590 --> 00:03:42.080
And when you're first starting out,
or actually,

48
00:03:42.080 --> 00:03:45.480
just in general,
it's important to know your packages.

49
00:03:45.480 --> 00:03:48.430
So there are a lot of packages on PyPI.

50
00:03:48.430 --> 00:03:50.290
Sometimes they're not up to date.

51
00:03:51.820 --> 00:03:57.430
A good way of checking, we'll see here,
we can look at the product homepage.

52
00:04:00.100 --> 00:04:03.090
By the way,
that pip install is right here.

53
00:04:05.670 --> 00:04:09.350
Actually, let's look at the base requests,
that's the one that we've been using,

54
00:04:09.350 --> 00:04:11.220
this is the base version.

55
00:04:13.450 --> 00:04:19.000
And you'll see when it was last released,
so if the package was last released

56
00:04:19.000 --> 00:04:24.010
in 2016, chances are that this
is probably not very popular.

57
00:04:26.730 --> 00:04:29.930
Let me see the statistics for
this library.

58
00:04:31.230 --> 00:04:31.730
Here we go.

59
00:04:33.820 --> 00:04:35.700
So if you click on this,

60
00:04:35.700 --> 00:04:41.400
the libraries.io link, you should
see some helpful information here.

61
00:04:42.820 --> 00:04:45.630
And it will show you how
many dependencies it has.

62
00:04:45.630 --> 00:04:49.075
It will show you how many
dependent packages there are in

63
00:04:49.075 --> 00:04:50.622
dependent repository.

64
00:04:50.622 --> 00:04:55.260
So 124,000 projects on
GitHub use this library.

65
00:04:55.260 --> 00:04:58.522
It's one of the most popular in Python,
if not the most.

66
00:04:58.522 --> 00:05:01.280
37,500 stars, etc.

67
00:05:01.280 --> 00:05:05.455
So this is a good place to go
to see if your package is legit.

68
00:05:05.455 --> 00:05:07.790
You should also click
through to the GitHub.

69
00:05:07.790 --> 00:05:10.710
Check out the code if you want to.

70
00:05:10.710 --> 00:05:16.380
So it's good practice to copy and
paste this exact command.

71
00:05:16.380 --> 00:05:19.260
There is a button right here
that will help you do that.

72
00:05:19.260 --> 00:05:25.910
If you make a typo and
don't type in the correct package name,

73
00:05:25.910 --> 00:05:29.700
there have been known to
be typo squatters, right.

74
00:05:29.700 --> 00:05:33.080
So packages with security vulnerabilities

75
00:05:33.080 --> 00:05:37.070
that take advantage of people
mistyping these package names, and

76
00:05:37.070 --> 00:05:40.400
then they'll go and install
a malicious version of the library.

77
00:05:40.400 --> 00:05:43.520
So there's some security
considerations here.

