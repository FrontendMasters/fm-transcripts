WEBVTT

1
00:00:00.130 --> 00:00:01.032
&gt;&gt; Nina Zakharenko: On the course website,

2
00:00:01.032 --> 00:00:05.830
you will find,
&gt;&gt; Nina Zakharenko: A handy

3
00:00:05.830 --> 00:00:10.352
list of test case assertions
here at the bottom, so equals,

4
00:00:10.352 --> 00:00:14.090
not equals, asserting true,
asserting false.

5
00:00:15.400 --> 00:00:19.390
Using the standard library unit tests,
it's fine for most projects,

6
00:00:19.390 --> 00:00:21.850
even of a reasonable size.

7
00:00:21.850 --> 00:00:26.299
But as your program go, as your code
organization becomes more complex,

8
00:00:26.299 --> 00:00:30.679
you might want to consider a more
advance alternate testing framework or

9
00:00:30.679 --> 00:00:31.555
test runner.

10
00:00:31.555 --> 00:00:34.357
There is a third party tool called nose,
and

11
00:00:34.357 --> 00:00:39.430
a third party testing frame work
called pytest that are very popular.

12
00:00:39.430 --> 00:00:41.770
Those modules are compatible
with unit tests, but

13
00:00:41.770 --> 00:00:44.650
they do things slightly differently.

14
00:00:44.650 --> 00:00:49.246
And once you feel like your unit
tests are getting out of control,

15
00:00:49.246 --> 00:00:54.106
that's a good stopping point to do
a little bit of experimentation.

