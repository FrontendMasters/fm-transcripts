WEBVTT

1
00:00:00.731 --> 00:00:03.942
[MUSIC]

2
00:00:03.942 --> 00:00:07.323
&gt;&gt; Jon Kuperman: Two other things which
are really cool that I wanted to talk

3
00:00:07.323 --> 00:00:10.710
about are conditional breakpoints and
XHR breakpoints.

4
00:00:10.710 --> 00:00:14.070
So these are really neat for
separate tasks.

5
00:00:14.070 --> 00:00:16.730
The conditional breakpoints
are really cool.

6
00:00:17.820 --> 00:00:22.900
So here's a good example, a lot of times
your company will have some library,

7
00:00:22.900 --> 00:00:27.350
a generic library that it uses like
Ajax like maybe use JQuery for

8
00:00:27.350 --> 00:00:32.790
Ajax right and you're loading
your page and one of the Ajax

9
00:00:32.790 --> 00:00:36.880
calls is failing or not it's like
the fourth one or something like that.

10
00:00:36.880 --> 00:00:39.300
So it's like if you console log in

11
00:00:39.300 --> 00:00:44.350
Ajax you gonna get one all the success
ones are if you put a debugger in.

12
00:00:44.350 --> 00:00:48.220
You're going to get one every time but you
really don't want it every single time you

13
00:00:48.220 --> 00:00:52.320
really only want to debug when a certain
condition is met like it fails or or

14
00:00:52.320 --> 00:00:57.040
maybe you only want to log if the Ajax
is going to a certain endpoint like at

15
00:00:57.040 --> 00:01:00.620
Twitter, the timeline and what are the
people and you know something like that.

16
00:01:00.620 --> 00:01:02.440
So you have these two options
which are really cool and

17
00:01:02.440 --> 00:01:04.370
you get on a little bit differently.

18
00:01:04.370 --> 00:01:06.070
The first one is conditional.

19
00:01:06.070 --> 00:01:09.390
So we can let say like I
wanna stop on Ajax errors,

20
00:01:09.390 --> 00:01:13.650
but only if and
then I can add a conditional break point.

21
00:01:13.650 --> 00:01:16.890
And this allows you to enter
any boolean statement.

22
00:01:16.890 --> 00:01:18.685
So you could be only if, what?

23
00:01:18.685 --> 00:01:23.210
You know let me scroll over, one is
equal to one or something like that.

24
00:01:23.210 --> 00:01:28.650
But more importantly, you could do like
I only want this if like data.response

25
00:01:28.650 --> 00:01:33.280
code I don't know if that's a thing is
equal to 403 or something like that and

26
00:01:33.280 --> 00:01:37.430
now you have a break point that won't stop
on up all the errors it will only stop on

27
00:01:37.430 --> 00:01:39.820
the specific type of errors
that you're looking for.

28
00:01:39.820 --> 00:01:41.540
So that can be really cool.

29
00:01:41.540 --> 00:01:45.100
This is like the equivalent of like
a if else console log if you've

30
00:01:45.100 --> 00:01:45.839
ever done one of those.

31
00:01:47.560 --> 00:01:51.720
&gt;&gt; Speaker 2: Yeah from
online Kedar is asking do

32
00:01:51.720 --> 00:01:54.870
a conditional breakpoints
make debugging really slow?

33
00:01:56.090 --> 00:01:57.010
&gt;&gt; Jon Kuperman: Not necessarily,

34
00:01:57.010 --> 00:02:00.800
it actually makes it faster if
you in a certain context, right?

35
00:02:00.800 --> 00:02:05.130
Because like let's say I've kind of gotten
down a rabbit hole of the Ajax thing but

36
00:02:05.130 --> 00:02:08.360
like okay let's say we want
to break on a success but

37
00:02:08.360 --> 00:02:12.750
only on the success that has more than
ten items or something like that right.

38
00:02:12.750 --> 00:02:16.220
Like this hypothetical example,
if you were debugging without conditional

39
00:02:16.220 --> 00:02:19.210
breakpoints, you would put
it in the success callback.

40
00:02:19.210 --> 00:02:21.430
And you hit play and
it would be that's not the one I want and

41
00:02:21.430 --> 00:02:22.760
you hit me a step over.

42
00:02:22.760 --> 00:02:26.320
No, but if you have the conditional
set up, you're breaking less.

43
00:02:26.320 --> 00:02:28.250
You're only breaking when
IT actually needs to.

44
00:02:28.250 --> 00:02:32.410
And then in a really similar vein.

45
00:02:32.410 --> 00:02:33.920
I'm going to take this one away.

46
00:02:33.920 --> 00:02:36.890
If you scroll down here,
you'll see your dom break points but

47
00:02:36.890 --> 00:02:40.380
you also have event listener and
XHR breakpoints.

48
00:02:40.380 --> 00:02:42.240
So these are kind of cool.

49
00:02:42.240 --> 00:02:45.680
Basically you can, this is one I
still have from working at Twitter.

50
00:02:46.770 --> 00:02:50.050
I only want you to break on
a Ajax request that contains it

51
00:02:50.050 --> 00:02:53.360
in the string that contains
the word timeline.

52
00:02:53.360 --> 00:02:57.420
Because like Twitter we're like Ajaxing
in, people to follow and tweets and all.

53
00:02:57.420 --> 00:02:58.700
I don't want any of that stuff.

54
00:02:58.700 --> 00:03:01.270
I don't know where the code is but
break for

55
00:03:01.270 --> 00:03:03.780
me when you hit the timeline end point or
something like that.

56
00:03:03.780 --> 00:03:06.320
So there's another one
that's really helpful.

57
00:03:06.320 --> 00:03:11.380
So you can do basically this
is the criteria I gives you

58
00:03:11.380 --> 00:03:17.240
when the URL contains one and you can put
anything you want like Json/ whatever.

59
00:03:17.240 --> 00:03:19.980
So you can put any of your own
endpoints in and again like hopefully

60
00:03:19.980 --> 00:03:23.180
save you some time cuz you're only
stopping on the exact ones that you need.

61
00:03:24.540 --> 00:03:28.960
I use those less often but again like
a lot of the stuff I primarily use for

62
00:03:28.960 --> 00:03:31.640
getting to know an app like for
getting acquainted with a new application.

63
00:03:33.000 --> 00:03:37.140
&gt;&gt; Speaker 2: Another a related question
if you put a debugger statement in your

64
00:03:37.140 --> 00:03:41.180
code within an if statement, is this
essentially conditional break point?

65
00:03:41.180 --> 00:03:45.200
&gt;&gt; Jon Kuperman: Yep definitely,
it's like the equivalent of I have

66
00:03:46.350 --> 00:03:48.800
before done if else with
console logs in them.

67
00:03:48.800 --> 00:03:52.010
This is like the debugger way of doing
is conditional on breakpoints, but

68
00:03:52.010 --> 00:03:53.060
yep definitely the same thing.

