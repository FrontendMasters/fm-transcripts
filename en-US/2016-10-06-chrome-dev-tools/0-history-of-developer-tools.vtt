WEBVTT

1
00:00:00.360 --> 00:00:10.360
[MUSIC]

2
00:00:38.945 --> 00:00:40.701
&gt;&gt; Jon Kuperman: I guess
just a little bit about me,

3
00:00:40.701 --> 00:00:45.760
I'm jkup on most of the online things like
Twitter and GitHub and all that stuff.

4
00:00:45.760 --> 00:00:49.060
There's my email address I love talking
about this stuff so feel free if you have

5
00:00:49.060 --> 00:00:53.020
questions after the course or whatever
to ping me on any of those services.

6
00:00:53.020 --> 00:00:56.056
For the last two years of
it was working at Twitter.

7
00:00:56.056 --> 00:01:00.990
Working on twitter.com I got to do a bunch
of really fun web performance stuff there.

8
00:01:02.700 --> 00:01:05.980
And now I'm kind of on my
own doing freelance stuff,

9
00:01:05.980 --> 00:01:07.430
teaching all that kind of fun stuff.

10
00:01:08.510 --> 00:01:10.350
I did just like Mark mentioned.

11
00:01:10.350 --> 00:01:13.220
I wanted to give like a caveat
before we get started with

12
00:01:13.220 --> 00:01:14.880
the class which is that they really.

13
00:01:14.880 --> 00:01:17.000
Really do move very quickly
on chromed up tools, and

14
00:01:17.000 --> 00:01:20.620
things have a tendency to move around.

15
00:01:20.620 --> 00:01:22.140
And Google IO is just last week, so

16
00:01:22.140 --> 00:01:26.330
there's a ton of brand new stuff that
just got launched about a week ago.

17
00:01:26.330 --> 00:01:30.850
So this is, I guess, mostly for
people that are watching the video later.

18
00:01:30.850 --> 00:01:34.710
It would be that stuff might not
be exactly where we find it today.

19
00:01:34.710 --> 00:01:37.380
But for the most part they have
pretty consistent design patterns.

20
00:01:37.380 --> 00:01:41.940
So you should be able to find a button
that's at least labelled the same as it

21
00:01:41.940 --> 00:01:46.030
is today, it just might be under
a different tab or something like that.

22
00:01:46.030 --> 00:01:50.310
Cool, so yeah I guess just a little
bit of history on things for

23
00:01:50.310 --> 00:01:53.340
those that were developing before
DevTools will remember this.

24
00:01:53.340 --> 00:01:57.066
But back in the day we didn't have
any kind of developer tools and

25
00:01:57.066 --> 00:01:59.420
really we had two tools at our disposal.

26
00:01:59.420 --> 00:02:06.770
One of the them was the page source
which is not super helpful to anybody.

27
00:02:06.770 --> 00:02:09.920
But it's kind of cool you can see the
markup that actually gets sent down and

28
00:02:09.920 --> 00:02:11.022
we still have that today.

29
00:02:11.022 --> 00:02:15.950
And then the other for those that remember
developing like this are alert boxes.

30
00:02:18.010 --> 00:02:20.340
And they have two big flaws for

31
00:02:20.340 --> 00:02:25.570
debugging programs by putting an alert in
there, one they're horrendously annoying.

32
00:02:25.570 --> 00:02:28.860
They take complete control of the browser
experience you can even change tabs until

33
00:02:28.860 --> 00:02:30.110
you hit OK on it.

34
00:02:30.110 --> 00:02:32.380
And two as you can see on the slide

35
00:02:33.390 --> 00:02:36.290
they don't have any ability to
display complex objects right.

36
00:02:36.290 --> 00:02:40.140
So if you were trying to alert something
and it was let's say a function or

37
00:02:40.140 --> 00:02:42.420
an object it would just show
you something like this.

38
00:02:42.420 --> 00:02:46.700
And then, I remember back in the day
you would put like a for loop and

39
00:02:46.700 --> 00:02:50.830
you'd like iterate on the keys for an
object and try to alert those and anyway.

40
00:02:50.830 --> 00:02:57.210
So that's kind of where we came from and
then, years ago, this hit the scene.

41
00:02:57.210 --> 00:02:59.510
This is a hexie's Live DOM Viewer.

42
00:03:01.250 --> 00:03:04.830
And so basically what this allows
you to do, I've have got a little I

43
00:03:06.100 --> 00:03:09.260
got it actually still open here let
me make that a little bit bigger.

44
00:03:09.260 --> 00:03:12.510
Is it allows you to type in HTML.

45
00:03:12.510 --> 00:03:16.810
And then it parses all that HTML and shows
you this is kind of the first time you

46
00:03:16.810 --> 00:03:23.220
were able to get a visual understanding
of what DOM is, what DOM meant.

47
00:03:23.220 --> 00:03:27.530
Because you can only see markup and
then the document object model is how

48
00:03:27.530 --> 00:03:30.410
the browser interprets that markup and
starts making all these objects.

49
00:03:30.410 --> 00:03:34.560
So this is kind of your first
time where you could start

50
00:03:34.560 --> 00:03:36.580
putting in tags or whatever.

51
00:03:36.580 --> 00:03:39.410
And then you can see them
kind of coming in down here.

52
00:03:39.410 --> 00:03:44.310
And you can even see things like,
if you don't set a header or a body.

53
00:03:44.310 --> 00:03:47.900
Browsers will interpret and place one in
there for you, those tags are necessary.

54
00:03:47.900 --> 00:03:52.650
And then you can do things like, you can
make like an H1, that says hello world.

55
00:03:52.650 --> 00:03:56.140
And you can start seeing like
this real thing like that H1 and

56
00:03:56.140 --> 00:03:59.220
it has this text attribute which
is hello world things like that.

57
00:03:59.220 --> 00:04:01.640
So this is like our like first step

58
00:04:01.640 --> 00:04:06.470
into having a better debugging
infrastructure ecosystem for JavaScript.

59
00:04:07.650 --> 00:04:12.870
And shortly after that, this DOM Viewer
was integrated and Firebug came out.

60
00:04:12.870 --> 00:04:16.250
There's actually the history's
like a little bit murky cuz as is

61
00:04:16.250 --> 00:04:18.670
usual there's like a lot of
people having the same idea,

62
00:04:18.670 --> 00:04:20.195
working on the same
thing at the same time.

63
00:04:20.195 --> 00:04:23.155
But I think Firebug was the first
one to really catch on.

64
00:04:23.155 --> 00:04:26.715
And it was a Firefox add on for
those that didn't use it.

65
00:04:26.715 --> 00:04:29.585
And it's actually pretty
similar you can kind of see

66
00:04:29.585 --> 00:04:32.005
these are like six pictures
really squished in together.

67
00:04:32.005 --> 00:04:36.152
But not much has really changed
since Firebug first hit the scene.

68
00:04:36.152 --> 00:04:40.420
The tools have gotten a lot more complex
but as far as like the general layout and

69
00:04:40.420 --> 00:04:43.670
understanding that you have
these multiple panels.

70
00:04:43.670 --> 00:04:47.970
And the tasks that they accomplished
have stayed pretty much the same.

71
00:04:47.970 --> 00:04:51.310
It's also worth pointing out that
this class is gonna really focus on

72
00:04:51.310 --> 00:04:53.230
Chrome's Developer Tools
as is in the title.

73
00:04:53.230 --> 00:04:57.760
But there's basically the split now where

74
00:04:58.890 --> 00:05:03.540
Mozilla has Firebug still supported
as an add on that you can get.

75
00:05:03.540 --> 00:05:07.570
It also has it's ground up custom

76
00:05:07.570 --> 00:05:09.960
developer tools which
are really really cool.

77
00:05:09.960 --> 00:05:11.210
We're not gonna touch on them today.

78
00:05:11.210 --> 00:05:15.750
They have almost all the functionality
that Chrome developer tools has.

79
00:05:15.750 --> 00:05:17.668
They're missing a few things and
they have a few things.

80
00:05:17.668 --> 00:05:22.551
Like they've got some really cool support
on like SVG Animations things like that.

81
00:05:22.551 --> 00:05:27.110
And then they're missing some things that
are like more in the like debugging and

82
00:05:27.110 --> 00:05:27.990
editing mode.

83
00:05:27.990 --> 00:05:30.078
So we're gonna concentrate on Chrome but

84
00:05:30.078 --> 00:05:32.593
I highly recommend checking
out Firefox as well.

85
00:05:32.593 --> 00:05:38.228
So there's the Firefox dev tools, there's
Firebug, there's the Web Kit DevTools.

86
00:05:38.228 --> 00:05:41.535
That would be like your Safari,
Brave browser all those things and

87
00:05:41.535 --> 00:05:45.910
then there's the Chrome DevTools that
we're gonna be taking a look at today.

88
00:05:45.910 --> 00:05:49.060
And again they're almost all the same
they should be pretty easy to navigate

89
00:05:49.060 --> 00:05:51.240
because they have the same
kind of general layout.

90
00:05:52.880 --> 00:05:56.680
I just find Chrome to be the most complex
and have the most cool stuff going on.

91
00:05:56.680 --> 00:05:59.860
So it's also worth noting that getting

92
00:05:59.860 --> 00:06:03.800
experience with the developer tools
can help you outside of Chrome.

93
00:06:03.800 --> 00:06:05.280
And this is becoming more and more true.

94
00:06:06.350 --> 00:06:10.000
So for the longest time for
anybody that does nodejs development.

95
00:06:10.000 --> 00:06:12.919
There's this cool project
called node inspector.

96
00:06:12.919 --> 00:06:17.910
And basically you nodejs comes
with a debugger built in.

97
00:06:17.910 --> 00:06:21.434
And what this allows you to do is
basically open up your node app in

98
00:06:21.434 --> 00:06:23.342
a version of the chrome DevTools.

99
00:06:23.342 --> 00:06:26.544
Which is kind of cool so if you get used
to that UI clicking around editing things

100
00:06:26.544 --> 00:06:28.010
like that you can do that with node.

101
00:06:29.290 --> 00:06:32.520
Speaking of things have changed this week,
which are really exciting.

102
00:06:32.520 --> 00:06:36.520
There's actually this
polar quest to node core

103
00:06:36.520 --> 00:06:41.020
which would allow this like dash dash
inspect flag or inspector I think.

104
00:06:42.380 --> 00:06:43.830
And you don't need anything else.

105
00:06:43.830 --> 00:06:45.030
So you'd actually,

106
00:06:45.030 --> 00:06:48.120
this is in a branch right now it
hasn't emerged into a major version.

107
00:06:48.120 --> 00:06:51.470
But very soon you'll be able
to actually run a node app and

108
00:06:51.470 --> 00:06:55.310
then type you know dash
dash inspector your app.

109
00:06:55.310 --> 00:06:56.647
And it'll just go ahead and

110
00:06:56.647 --> 00:07:00.440
automatically open in a version of
Chromium with the blank developer tools.

111
00:07:00.440 --> 00:07:04.000
So I think these are like really
worth getting to know both,

112
00:07:04.000 --> 00:07:06.610
because obviously web
performance is important.

113
00:07:06.610 --> 00:07:11.710
But also these tools are becoming more and
more widespread as Google

114
00:07:11.710 --> 00:07:14.480
is donating time to help integrate
them with other environments.

115
00:07:15.670 --> 00:07:18.380
And the last thing I
wanted to mention on this

116
00:07:18.380 --> 00:07:22.010
history ecosystem side is that
they have a really great API.

117
00:07:22.010 --> 00:07:26.100
So a lot of frameworks build their
own panel of developer tools.

118
00:07:26.100 --> 00:07:27.010
So some of the big ones,

119
00:07:27.010 --> 00:07:30.220
if you do any ReactJS Development
they have their own DevTools.

120
00:07:30.220 --> 00:07:34.360
Same with Ember, same with Angular and
then there's also cool things like.

121
00:07:34.360 --> 00:07:39.688
There is an accessibility Chrome
extension which adds another panel there.

122
00:07:39.688 --> 00:07:40.750
So the APIs really cool and

123
00:07:40.750 --> 00:07:43.890
there's a bunch of additional stuff we're
not going to really cover in depth today

124
00:07:43.890 --> 00:07:46.570
but just wanted to point out that
if you're working on a project.

125
00:07:46.570 --> 00:07:49.890
You should probably check to see
if there's a DevTool extension for

126
00:07:49.890 --> 00:07:52.190
whatever stack you're working with
because they're very well might be.

