WEBVTT

1
00:00:00.081 --> 00:00:04.093
[MUSIC]

2
00:00:04.093 --> 00:00:07.531
&gt;&gt; Jon Kuperman: Moving into the sources
tab now so I'm gonna go ahead I'm going to

3
00:00:07.531 --> 00:00:10.550
drag them next to each other so
we've got them over here.

4
00:00:10.550 --> 00:00:13.220
Like I said we're gonna worry about
this right panel in the next section,

5
00:00:13.220 --> 00:00:14.180
debugging.

6
00:00:14.180 --> 00:00:16.440
For now,
we're just gonna kind of shrink that and

7
00:00:16.440 --> 00:00:18.390
look at the two things going on here.

8
00:00:18.390 --> 00:00:22.560
So this is like this top down, it'll
show you a couple of different things.

9
00:00:22.560 --> 00:00:26.110
One, it'll show you every host name
that it's receiving files from.

10
00:00:27.340 --> 00:00:30.620
So this is really helpful like,
I don't have much going on here,

11
00:00:30.620 --> 00:00:34.320
but for example I happen to know I've
got this profiling page over here.

12
00:00:35.460 --> 00:00:38.040
So this receives stuff from local host and

13
00:00:38.040 --> 00:00:41.830
it's also getting stuff from all these
wonky other hosts which are like

14
00:00:41.830 --> 00:00:45.760
YouTube embeds, CDNs that have fonts and
things like that.

15
00:00:45.760 --> 00:00:49.590
So you can see every single host that's
delivering assets to you basically.

16
00:00:49.590 --> 00:00:54.060
I'm gonna go back to my main page here and
then from there you can kind of

17
00:00:54.060 --> 00:00:56.910
click through and
see what actual files are coming down so

18
00:00:56.910 --> 00:01:00.180
two CSS files are coming down
here I've got bootstrap.css.

19
00:01:00.180 --> 00:01:04.590
I've got my own style sheet, you can
see what fonts are being sent down.

20
00:01:04.590 --> 00:01:07.300
You can see JavaScript and
you can see the document.

21
00:01:08.320 --> 00:01:09.290
So this is a pretty cool.

22
00:01:10.610 --> 00:01:14.910
Keep in mind you can always
pretty print things so for

23
00:01:14.910 --> 00:01:18.770
web performance it's good to minify and
bundle all of your assets together but

24
00:01:18.770 --> 00:01:21.960
when you actually take a look at them,you
can click pretty print over here and

25
00:01:21.960 --> 00:01:23.490
it'll expand them out pretty nicely.

26
00:01:24.920 --> 00:01:28.930
So yes, so basically again from in here
you're kind of dropped into this editing

27
00:01:28.930 --> 00:01:33.100
mode where you can you know do things
that you want like you could go ahead and

28
00:01:33.100 --> 00:01:38.190
like add some more style rules or
whatever and it's like very,

29
00:01:38.190 --> 00:01:43.170
very similar with you know changes
that you make like background, blue,

30
00:01:43.170 --> 00:01:46.480
or whatever will immediately
show up in the background here.

31
00:01:47.500 --> 00:01:52.250
So this is just another way of kind of
real time editing the site they are on.

32
00:01:52.250 --> 00:01:57.760
But where it gets really interesting is
this concept of work spaces so work spaces

33
00:01:57.760 --> 00:02:02.930
are what allow you to persist your changes
that you're making in developer tools

34
00:02:02.930 --> 00:02:07.860
to disk so you can actually start using
it as your you know your primary editor.

35
00:02:07.860 --> 00:02:11.300
So basically how we start here,
I did want to give like a little bit of

36
00:02:11.300 --> 00:02:15.980
a Warning here that work spaces
are they're not necessarily glitchy but

37
00:02:15.980 --> 00:02:17.670
they're a little bit particular and so

38
00:02:17.670 --> 00:02:22.010
we're going to cover some of the edge
cases but sometimes they're like sometimes

39
00:02:22.010 --> 00:02:26.350
it's smart enough to guess file mapping
sometimes it's not things like that and

40
00:02:26.350 --> 00:02:29.250
there are some certain rules so
we will cover all that stuff.

41
00:02:29.250 --> 00:02:31.126
So let me go ahead and shrink this so

42
00:02:31.126 --> 00:02:33.740
we just have you know
the tree collapsed them.

43
00:02:33.740 --> 00:02:39.900
And then when I go ahead and open my
finder and I'm gonna go to the folder

44
00:02:39.900 --> 00:02:44.180
of mastering Chrome Dev tools and
I'm just gonna take that folder and

45
00:02:44.180 --> 00:02:48.530
I'm just gonna drag and
drop it into the sources panel.

46
00:02:48.530 --> 00:02:52.430
And it needs is one of the things that
chrome needs access to your file system so

47
00:02:52.430 --> 00:02:54.090
be sure to click allow.

48
00:02:54.090 --> 00:02:57.786
&gt;&gt; Speaker 2: Can I ask a quick question
that came up a little while ago?

49
00:02:57.786 --> 00:03:01.189
For those who are using
the node cast.io version

50
00:03:01.189 --> 00:03:03.850
can you talk about
&gt;&gt; Jon Kuperman: This is the one you won't

51
00:03:03.850 --> 00:03:05.280
be able to do on that yeah.

52
00:03:05.280 --> 00:03:10.610
So workspaces only is good for
editing files on your local file system.

53
00:03:10.610 --> 00:03:13.970
So this is the one thing you won't be
able to do but you can try it with

54
00:03:13.970 --> 00:03:17.750
any project at home like you can make and
index.html in a style.css and

55
00:03:17.750 --> 00:03:22.290
you can drag that folder
into a work space and

56
00:03:22.290 --> 00:03:27.000
get the same effect but that's this is the
one part that they won't be able to do.

57
00:03:27.000 --> 00:03:29.110
Cool, so
now we've got two different things right.

58
00:03:29.110 --> 00:03:31.360
We've got our our local host which
is sending down all the stuff and

59
00:03:31.360 --> 00:03:33.960
we've also got this
folder over here which is

60
00:03:33.960 --> 00:03:36.860
if you look in the public folder
setting down the same stuff.

61
00:03:36.860 --> 00:03:40.370
So now what we wanna do, now we've got
kind of both of these in our editor

62
00:03:40.370 --> 00:03:44.550
we want to map them to each other so
we got to tell Chrome like hey when I edit

63
00:03:44.550 --> 00:03:49.020
you know the style.css I need you to
update you know my local style.css.

64
00:03:49.020 --> 00:03:55.630
So for example let's go ahead and
open style.css and

65
00:03:55.630 --> 00:04:00.080
here's where it is finicky, so like
okay so this time it was smart enough.

66
00:04:00.080 --> 00:04:03.370
And it's like hey would you like
me to map this network resource

67
00:04:03.370 --> 00:04:04.490
to your local resource?

68
00:04:05.740 --> 00:04:07.190
So I can click on more and

69
00:04:07.190 --> 00:04:10.170
I can't yet totally establish
that mapping that's great.

70
00:04:10.170 --> 00:04:13.790
And so you can map kind of
any file to any other file.

71
00:04:13.790 --> 00:04:17.050
Sometimes it doesn't pop up that way and
you'll just wanna go

72
00:04:17.050 --> 00:04:22.080
on to the not network one,
I'm sorry to the network one and

73
00:04:22.080 --> 00:04:26.450
you want to right click on any
file like you can go like here and

74
00:04:26.450 --> 00:04:29.550
now it says remove network mapping
if it wasn't mapped it would say

75
00:04:29.550 --> 00:04:33.600
add network mapping so you would like go
to your style that CSS right click on it.

76
00:04:33.600 --> 00:04:37.580
Add network mapping and
then add it to your style that CSS or

77
00:04:37.580 --> 00:04:40.100
mapping you know a network
resource to a local resource.

78
00:04:41.400 --> 00:04:44.150
So now what we can do that
we have those map together

79
00:04:44.150 --> 00:04:47.380
is we can actually let me go ahead and
open my text editor here.

80
00:04:48.420 --> 00:04:51.950
&gt;&gt; Speaker 2: Before we get further
into this, one question from

81
00:04:53.130 --> 00:04:56.810
Marcos is how all this is
going to work with transpires.

82
00:04:56.810 --> 00:04:57.490
&gt;&gt; Jon Kuperman: Yes that's great.

83
00:04:57.490 --> 00:04:59.370
Okay that's a great question.

84
00:04:59.370 --> 00:05:02.430
So this is like a little bit of
the finicking this because of this.

85
00:05:02.430 --> 00:05:07.790
So a couple of things,
all of this workspace stuff

86
00:05:07.790 --> 00:05:12.430
persisting changes to disk works only
with JavaScript and CSS not the document

87
00:05:12.430 --> 00:05:16.640
because the document usually doesn't
have like this one the one mapping.

88
00:05:16.640 --> 00:05:21.040
Transpilars add a lot of
complication to it so

89
00:05:21.040 --> 00:05:26.860
in its simplest form Chrome is adding
support for SAS pre-processing.

90
00:05:26.860 --> 00:05:29.420
So if you're using SAS since

91
00:05:29.420 --> 00:05:33.330
it's just like this one engine you
will be able to edit your CSS.

92
00:05:33.330 --> 00:05:36.820
And this is not released yet it is
an experiment which we will look at and

93
00:05:36.820 --> 00:05:40.000
it will save back to the SAS file.

94
00:05:40.000 --> 00:05:42.420
That being said if you're
using transpires for

95
00:05:42.420 --> 00:05:45.080
like a bundler that's a different story.

96
00:05:45.080 --> 00:05:49.660
So if you have a your like style.css and
style2.css and

97
00:05:49.660 --> 00:05:53.990
you're bundling those together and
sending build.css down to the client you.

98
00:05:53.990 --> 00:05:55.430
Won't be able to map that, so

99
00:05:55.430 --> 00:05:58.810
what you should do with your hopefully
doing anyway though is your development

100
00:05:58.810 --> 00:06:03.610
version should be serving all of those
files individually right not bundling.

101
00:06:03.610 --> 00:06:06.520
Your bundling should only happen for
your production version.

102
00:06:06.520 --> 00:06:08.640
So that's like two pieces of it and

103
00:06:08.640 --> 00:06:11.690
then the third piece of you're doing like
Java Script transpiring with Babel or

104
00:06:11.690 --> 00:06:14.456
something like that there
is no support for that.

105
00:06:14.456 --> 00:06:15.850
So work spaces will not work for

106
00:06:15.850 --> 00:06:19.350
that it does seem like something
Chrome is actively pursuing.

107
00:06:19.350 --> 00:06:21.770
I've heard rumors that they
gonna add mustache support.

108
00:06:21.770 --> 00:06:25.620
So you can be able to get it documents and
it'll find the mustache.

109
00:06:25.620 --> 00:06:27.820
I don't know if that's coming.

110
00:06:27.820 --> 00:06:30.610
So this is such a cool feature,

111
00:06:30.610 --> 00:06:34.350
a few years ago when you were
serving down your raw assets.

112
00:06:34.350 --> 00:06:36.720
I still use it a lot when
I can get away with it.

113
00:06:37.870 --> 00:06:38.680
But for sure,

114
00:06:38.680 --> 00:06:42.060
if you have a complicated build process,
it's not gonna be super useful.

115
00:06:42.060 --> 00:06:46.900
Although, a lot of places that I've
worked are still able to send down

116
00:06:46.900 --> 00:06:51.450
style sheets or still able to send down on
process JavaScript that you can edit but

117
00:06:51.450 --> 00:06:52.530
it's a really good question.

118
00:06:52.530 --> 00:06:58.560
Okay cool, so we've got it added now so
we've got style that CSS mapped and

119
00:06:58.560 --> 00:07:02.300
then I just open up in a text
editor the style that CSS just so

120
00:07:02.300 --> 00:07:04.080
we can kind of take a look
at how this is working.

121
00:07:05.260 --> 00:07:09.740
So it's pretty cool is if I go in now and
I add like you know background.

122
00:07:09.740 --> 00:07:12.900
Blue, I keep doing that I know
it's like horrible visually,

123
00:07:12.900 --> 00:07:16.210
just the only color I'm thinking of and
I hit command S, you can see like

124
00:07:16.210 --> 00:07:19.230
just like a text editor there's
an asterisk here, I mean it's not saved.

125
00:07:19.230 --> 00:07:22.650
So I hit command S to save it and
I pop back here and immediately,

126
00:07:22.650 --> 00:07:27.320
it's persisted to disk and what's even
cooler than that is you can go back into

127
00:07:27.320 --> 00:07:32.550
your elements panel and now, any of these
little changes that you start making like

128
00:07:32.550 --> 00:07:37.850
background pink, that's much better,
immediately saving to disk here.

129
00:07:37.850 --> 00:07:41.450
So now you can throw away the editor
if you're lucky enough to be in this

130
00:07:41.450 --> 00:07:46.490
situation, you can do all your, so like
the biggest thing win for me is I can't

131
00:07:46.490 --> 00:07:50.550
tell you how many times I've like been in
Dev tools and tweaking all my styles and

132
00:07:50.550 --> 00:07:54.730
I get everything looking perfect and
then I'm like I've been making changes for

133
00:07:54.730 --> 00:07:58.610
three hours I have no idea what all
I've changed and then I refresh and

134
00:07:58.610 --> 00:08:00.460
it's back to bad and I try to start again.

135
00:08:00.460 --> 00:08:03.930
So like this way you can really start
tweaking all of these different things and

136
00:08:03.930 --> 00:08:08.810
they all save immediately to disk and
that is true also with the JavaScript.

137
00:08:08.810 --> 00:08:12.720
So if you open up a JavaScript file in the
sources made some changes to command us it

138
00:08:12.720 --> 00:08:14.150
will also save immediately to disk.

139
00:08:14.150 --> 00:08:18.700
So if this fits your use case
really really really awesome.

140
00:08:18.700 --> 00:08:20.850
You can also do things
in the sources tab like.

141
00:08:20.850 --> 00:08:23.230
You can create new files

142
00:08:23.230 --> 00:08:26.270
basically just have everything
that you expect out of an editor.

143
00:08:26.270 --> 00:08:30.210
So you can create new files you can rename
stuff you can you know map them together,

144
00:08:30.210 --> 00:08:33.490
edit them all, that kind of stuff so
I had about six months ago

145
00:08:33.490 --> 00:08:37.970
I did an experiment where I had only
front end tickets and I did nothing but

146
00:08:37.970 --> 00:08:42.330
Chrome Dev tools for like a week as
my entire editor for everything.

147
00:08:42.330 --> 00:08:45.940
And there were some things I
really missed but it's cool.

148
00:08:47.050 --> 00:08:48.910
&gt;&gt; Speaker 3: Is there an undue?

149
00:08:48.910 --> 00:08:52.247
&gt;&gt; Jon Kuperman: Yeah, so
if you still have access to Command Z or

150
00:08:52.247 --> 00:08:57.820
Ctrl+Z But as far as like as you start
making a bunch of different changes,

151
00:08:57.820 --> 00:09:00.810
hopefully version control
can be your savior there.

152
00:09:00.810 --> 00:09:04.450
They're really good because especially
like you're making changes in the elements

153
00:09:04.450 --> 00:09:06.330
tab is like so fast and easy right.

154
00:09:06.330 --> 00:09:07.780
You like adding all these things or
whatever.

155
00:09:07.780 --> 00:09:10.380
So hopefully version control
is kind of the answer but

156
00:09:10.380 --> 00:09:13.740
you do in sources you have undo and
redo just like a text editor.

157
00:09:14.840 --> 00:09:18.640
&gt;&gt; Speaker 4: What happened to local host
because when we got the style sheets

158
00:09:18.640 --> 00:09:19.480
know it's early.

159
00:09:19.480 --> 00:09:21.468
I know all the files and local host.

160
00:09:21.468 --> 00:09:25.710
&gt;&gt; Jon Kuperman: I think it's only because
for every file in local host I was able to

161
00:09:25.710 --> 00:09:29.205
find a mapping that it It's,
that it's gotten rid of local host.

162
00:09:29.205 --> 00:09:30.665
Because normally,
&gt;&gt; Speaker 4: It

163
00:09:30.665 --> 00:09:32.135
says under one relationship.

164
00:09:32.135 --> 00:09:36.325
&gt;&gt; Jon Kuperman: Yeah and more robust
apps, I usually still see local host

165
00:09:36.325 --> 00:09:39.295
which will have some unmapped
files in them or whatever, yeah.

166
00:09:41.545 --> 00:09:44.755
&gt;&gt; Speaker 4: And then if you compile
it like you're SAS using grunt or

167
00:09:44.755 --> 00:09:48.170
something like that would
it be smart enough to know

168
00:09:49.380 --> 00:09:51.060
that the changes have
occurred when you save them?

169
00:09:52.590 --> 00:09:55.070
&gt;&gt; Jon Kuperman: Yeah, so grant so
if you're using a build tool like that,

170
00:09:55.070 --> 00:09:59.770
it will because the save all update the
file system and that it's like I notify or

171
00:09:59.770 --> 00:10:01.720
whatever will notify grant.

172
00:10:01.720 --> 00:10:06.510
I don't know, like everybody's build
is different levels of complicated.

173
00:10:06.510 --> 00:10:09.580
I know that the SAS support
is very beta right now, and

174
00:10:09.580 --> 00:10:12.050
I'm not sure how complex it can handle.

175
00:10:12.050 --> 00:10:13.190
You know what I mean,

176
00:10:13.190 --> 00:10:17.560
so as far as it will send the signal to
your file system that something's update,

177
00:10:17.560 --> 00:10:21.770
so we're doing a gulp watch or grant
watch, that, you're going to go there.

178
00:10:21.770 --> 00:10:26.653
I'm not saying that it's gonna be a great
experience with SAS right now cuz it's so

179
00:10:26.653 --> 00:10:28.276
early with all the stages.

180
00:10:31.166 --> 00:10:34.715
&gt;&gt; Jon Kuperman: Cool, so there's Camelot
you can play around with there again like

181
00:10:34.715 --> 00:10:38.574
if it happens to work with your workflow
it's like such a great experience

182
00:10:38.574 --> 00:10:42.308
especially as we get to the next part
of debugging being able to debug and

183
00:10:42.308 --> 00:10:44.426
then edit immediately is really nice but

184
00:10:44.426 --> 00:10:48.260
there's definitely as build processes
get more and more complicated.

185
00:10:48.260 --> 00:10:51.720
This is less and less viable but
I do you think it's pretty awesome.

