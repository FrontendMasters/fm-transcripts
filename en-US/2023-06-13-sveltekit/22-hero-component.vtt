WEBVTT

1
00:00:00.340 --> 00:00:07.240
So back in our page.svelte file,
we're gonna add a hero component.

2
00:00:07.240 --> 00:00:08.280
Let's create that component.

3
00:00:09.480 --> 00:00:11.776
Just do it right here
where it's being used.

4
00:00:16.332 --> 00:00:20.186
And hero is gonna take a movie prop.

5
00:00:23.296 --> 00:00:26.554
At the lang equals ts, and

6
00:00:26.554 --> 00:00:32.192
the prop is gonna be
of type MovieDetails.

7
00:00:32.192 --> 00:00:34.570
Just let VS code auto import that for us.

8
00:00:34.570 --> 00:00:38.663
Okay, so the first thing we're
gonna do is create an a link for

9
00:00:38.663 --> 00:00:40.569
the movie with an A element.

10
00:00:44.697 --> 00:00:46.607
I'm going to pass in the movie.id.

11
00:00:50.451 --> 00:00:55.847
Then inside there, we're going to add
the backdrop image for the movie.

12
00:01:11.318 --> 00:01:15.123
Now the source of the images
when we're dealing with

13
00:01:15.123 --> 00:01:19.632
the movie database needs to come
from their own image server.

14
00:01:19.632 --> 00:01:26.974
And so we're gonna put that information
in our API helper module as well.

15
00:01:26.974 --> 00:01:30.930
And we're gonna add a helper for
generating those URLs.

16
00:01:30.930 --> 00:01:36.237
So, first, we'll create export const

17
00:01:36.237 --> 00:01:41.386
media base equals, and the base URL for

18
00:01:41.386 --> 00:01:48.580
these images is https//image.tmdb.org/t/p.

19
00:01:51.600 --> 00:01:58.769
Then we can construct the URLs
themselves by taking in a file path,

20
00:01:58.769 --> 00:02:03.121
which is gonna be a string, and a width,

21
00:02:03.121 --> 00:02:09.522
which is gonna be a number and
returning media_base/w and

22
00:02:09.522 --> 00:02:15.683
then we'll take that width and
we'll add the file path.

23
00:02:18.250 --> 00:02:22.051
Right and we can now use
that helper inside our page.

24
00:02:25.955 --> 00:02:29.193
All right, just import that like so.

25
00:02:29.193 --> 00:02:32.574
We need to get a reference
to the backdrop image.

26
00:02:35.248 --> 00:02:38.246
So first, we'll get all of
the images that belong to the movie.

27
00:02:44.951 --> 00:02:48.757
And that has backdrops, logos, and
a poster image it's the backdrops and

28
00:02:48.757 --> 00:02:50.517
the logo that we want for our hero.

29
00:02:56.085 --> 00:03:00.883
We have a whole bunch of
backdrops that we can pick from.

30
00:03:00.883 --> 00:03:02.960
They have different properties.

31
00:03:02.960 --> 00:03:08.940
Ideally, we wanna get the backdrop
that doesn't have any language on it.

32
00:03:08.940 --> 00:03:12.125
And if you pour over the movie
database documentation,

33
00:03:12.125 --> 00:03:16.121
you will eventually figure out that
the way to do that is to find an image

34
00:03:16.121 --> 00:03:19.710
that doesn't have a language
associated with it.

35
00:03:19.710 --> 00:03:25.938
So the way we do that
is by finding an image

36
00:03:25.938 --> 00:03:33.281
where image.iso_639_1 is undefined.

37
00:03:33.281 --> 00:03:36.059
And if that doesn't exist,
then we'll just grab the first one.

38
00:03:42.270 --> 00:03:43.050
At this point,

39
00:03:43.050 --> 00:03:46.590
it would probably be good to say that
this code is available on GitHub.

40
00:03:46.590 --> 00:03:49.204
So if you're falling behind on the typing,

41
00:03:49.204 --> 00:03:53.100
then you can clone the repo from
GitHub and follow along that way.

42
00:03:54.440 --> 00:03:55.900
Okay, so now we have a backdrop object.

43
00:03:55.900 --> 00:03:58.641
We'll get the backdrop file path.

44
00:04:01.050 --> 00:04:03.171
Pass in a width of 1280.

45
00:04:06.226 --> 00:04:14.179
And hopefully, we'll be able to see that
inside our page once we've added some CSS.

46
00:04:24.246 --> 00:04:27.076
First, of course, we need to add
the hero component to the page.

47
00:04:50.841 --> 00:04:53.960
All right, so
we can now see the Shazam backdrop.

48
00:04:53.960 --> 00:04:56.616
It's a little large, so
we're gonna need to shrink that down.

49
00:04:58.433 --> 00:05:01.658
Add some CSS in the hero component.

50
00:05:05.599 --> 00:05:08.380
Give it a class of backdrop so
that we can target it.

51
00:05:27.225 --> 00:05:31.076
And lastly, we're gonna set
an aspect ratio on this image so

52
00:05:31.076 --> 00:05:35.080
that we don't have layout
shift when this page loads.

53
00:05:35.080 --> 00:05:37.204
If we don't have the aspect
ratio specified,

54
00:05:37.204 --> 00:05:39.491
then initially the image
will take zero height and

55
00:05:39.491 --> 00:05:42.330
all of the content below it will
pop down once the image loads.

56
00:05:42.330 --> 00:05:45.633
And that's not something that we want.

57
00:05:45.633 --> 00:05:50.221
So we're gonna add an inline
style of aspect-ratio, and

58
00:05:50.221 --> 00:05:55.663
that information is helpfully on
the object that we got from the API.

59
00:06:04.936 --> 00:06:08.930
Just gonna copy all of this and
add another image for the logo.

60
00:06:10.190 --> 00:06:15.665
We'll copy that line, backdrop equals sorry
logo equals images logos find and again,

61
00:06:15.665 --> 00:06:20.915
we're gonna use the language, but this
time, we're gonna try and find an English

62
00:06:20.915 --> 00:06:26.600
language one because right now, we're
only concerned with the English language.

63
00:06:26.600 --> 00:06:30.191
Ultimately, we'd like to add some
internationalization to this as well,

64
00:06:30.191 --> 00:06:32.448
but for now,
we're gonna default to English.

65
00:06:48.090 --> 00:06:49.767
All right, it's rendering that down there.

66
00:06:49.767 --> 00:06:53.245
We wanna put it inside the anchor
element on top of the backdrop.

67
00:06:56.925 --> 00:07:00.790
So we're gonna use position absolute,

68
00:07:00.790 --> 00:07:05.790
put it all the way to the left,
all the way to the top,

69
00:07:05.790 --> 00:07:11.830
give it a height of 100% and
a width of let's say, 30%.

70
00:07:19.642 --> 00:07:24.650
And an object fit of contain.

71
00:07:24.650 --> 00:07:26.007
Before this will layout correctly,

72
00:07:26.007 --> 00:07:28.070
we need to add some styles to
the anchor element as well.

73
00:07:29.680 --> 00:07:33.645
Just gonna give that a display of flex.

74
00:07:33.645 --> 00:07:36.550
Right, and
now the image is appearing correctly.

75
00:07:36.550 --> 00:07:37.911
Move that over a little bit so

76
00:07:37.911 --> 00:07:41.000
that it's not butting up
against the edge of the wall.

77
00:07:41.000 --> 00:07:43.452
And we're gonna have
a drop shadow as well,

78
00:07:43.452 --> 00:07:46.318
just in case the text
clashes with the background.

79
00:07:53.973 --> 00:07:58.861
Something like that will make the text
stand out against whatever background

80
00:07:58.861 --> 00:08:00.145
it finds itself on.

81
00:08:06.881 --> 00:08:09.945
Okay, so
our page is starting to take shape.

82
00:08:09.945 --> 00:08:12.094
We wanna add a class to this h1 so

83
00:08:12.094 --> 00:08:17.255
that it's not butting up right
against the edge of the page there.

84
00:08:17.255 --> 00:08:21.426
And you'll recall that in
our global stylesheet,

85
00:08:21.426 --> 00:08:24.675
we have this column CSS property.

86
00:08:24.675 --> 00:08:28.197
I'm gonna add a class down here
that we can use anytime we have

87
00:08:28.197 --> 00:08:32.500
something that we want to have that with,
I'm just gonna call it column.

88
00:08:36.269 --> 00:08:40.434
It's gonna have a width of column, and

89
00:08:40.434 --> 00:08:47.767
then it's gonna have a margin left
of auto and a margin right of auto.

90
00:08:47.767 --> 00:08:51.433
And we're gonna use this
side property as padding so

91
00:08:51.433 --> 00:08:55.028
that it gets moved away from
the side of the screen.

92
00:09:00.050 --> 00:09:03.562
Now that we've got that class,
we can add it to the h1.

93
00:09:07.048 --> 00:09:11.920
Right, and we'll see that the h1
there is now neatly lined up with

94
00:09:11.920 --> 00:09:14.279
the logo in the navigation bar.

