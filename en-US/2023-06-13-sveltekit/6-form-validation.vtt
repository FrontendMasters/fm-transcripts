WEBVTT

1
00:00:00.000 --> 00:00:05.152
Okay, let's grab the Svelteflix
logo from the published site.

2
00:00:05.152 --> 00:00:07.669
We'll just open Dev Tools,
select that element,

3
00:00:09.947 --> 00:00:13.760
Find that image and
just open it in a new tab.

4
00:00:20.198 --> 00:00:23.194
And I'm gonna save that into my workspace.

5
00:00:30.503 --> 00:00:36.429
I'm gonna create it in a lib directory
to keep it out of my roots folder.

6
00:00:36.429 --> 00:00:41.016
I'm gonna create a new folder called
images, I'm just gonna drop it in there,

7
00:00:41.016 --> 00:00:42.320
with the name of logo.

8
00:00:44.557 --> 00:00:49.458
Right, and you can now see that in
our project, source/lib/images/logo.

9
00:00:49.458 --> 00:00:53.604
And I'm gonna reference this
inside my layout.svelte,

10
00:00:55.642 --> 00:01:01.216
By importing it as if it were a module,

11
00:01:01.216 --> 00:01:08.199
import logo from $lib/images/logo.svg.

12
00:01:08.199 --> 00:01:12.934
And this is gonna tell Vite to
grab a reference to that SVG file.

13
00:01:12.934 --> 00:01:16.319
And treat it as an asset that will
get a unique hash name added to it so

14
00:01:16.319 --> 00:01:18.023
that it can be cached immutably.

15
00:01:19.709 --> 00:01:24.957
So inside that link,
we'll create an image with

16
00:01:24.957 --> 00:01:31.742
an alt attribute of SvelteFlix and
a source of that logo value.

17
00:01:37.218 --> 00:01:38.856
Right now we can't see it, and

18
00:01:38.856 --> 00:01:42.523
I suspect that's because we haven't
added a height to the element.

19
00:01:42.523 --> 00:01:46.909
Okay, so
it looks like we need to add an explicit

20
00:01:46.909 --> 00:01:51.523
height on that image element,
so let's do that.

21
00:01:55.710 --> 00:02:00.654
And we'll just polish this off
a little bit by adding some

22
00:02:00.654 --> 00:02:04.479
more of a gap between
the links on the right.

23
00:02:09.500 --> 00:02:14.965
Okay, so we have the beginnings
of a user interface.

24
00:02:14.965 --> 00:02:19.780
We're gonna add a main element for
each individual page,

25
00:02:19.780 --> 00:02:21.949
just drop a slot in there.

26
00:02:21.949 --> 00:02:25.385
And then at the bottom,
we'll add a footer,

27
00:02:28.858 --> 00:02:33.140
Which is gonna contain this
text to data provided by,

28
00:02:37.606 --> 00:02:39.658
And we'll have a link
to the movie database.

29
00:02:41.924 --> 00:02:45.876
So this is where all of this
information is coming from,

30
00:02:45.876 --> 00:02:51.087
TMDB is an API that you can use in your
own applications to build any app that

31
00:02:51.087 --> 00:02:56.749
involves data about movies, and also TV
shows, and the people who are in them.

32
00:02:56.749 --> 00:03:00.557
It has an API with some
developer documentation,

33
00:03:00.557 --> 00:03:03.828
which, hopefully, I can find down here.

34
00:03:07.825 --> 00:03:11.647
So we'll be referring to this
page as we build the application.

35
00:03:14.092 --> 00:03:17.475
Yes, I have a question from the crowd.

36
00:03:17.475 --> 00:03:21.226
&gt;&gt; Is there a good way to refer to
things like a logo or site CSS so

37
00:03:21.226 --> 00:03:24.303
that if the file name changes for
cache busting,

38
00:03:24.303 --> 00:03:28.526
some external site can still refer
to the URL without it changing?

39
00:03:28.526 --> 00:03:32.765
&gt;&gt; So if you wanted the logo to be at
a persistent URL so that it could be

40
00:03:32.765 --> 00:03:37.160
used externally, then instead of
having it in your source folder,

41
00:03:37.160 --> 00:03:40.340
what you could do is put
it in your static folder.

42
00:03:40.340 --> 00:03:44.376
So let's take this images directory,
and put that there, and

43
00:03:44.376 --> 00:03:46.671
then just comment out that import.

44
00:03:46.671 --> 00:03:51.012
And instead of using this logo value,

45
00:03:51.012 --> 00:03:58.074
we'll just hard code static,
sorry, images/logo.svg.

46
00:03:58.074 --> 00:04:02.871
And that will look the same,
the only difference is

47
00:04:02.871 --> 00:04:07.111
that that file will not
be cached immutably,

48
00:04:07.111 --> 00:04:11.031
it will always be accessible at that URL.

49
00:04:16.525 --> 00:04:20.784
And so, that's something that we do
typically with things like favicons.

50
00:04:20.784 --> 00:04:24.827
But any image that you want
to be cached immutably,

51
00:04:24.827 --> 00:04:29.256
you should have that in your
source directory instead.

52
00:04:33.512 --> 00:04:37.712
So we're gonna add a link to movie
database cuz they've been kind enough to

53
00:04:37.712 --> 00:04:39.321
provide this information.

54
00:04:39.321 --> 00:04:44.103
So grab that, drop that in there.

55
00:04:44.103 --> 00:04:48.594
And then once again, we're just gonna

56
00:04:48.594 --> 00:04:53.084
grab this SVG from the published site,

57
00:04:53.084 --> 00:04:57.046
save it into our app as tmdb.svg.

58
00:04:59.294 --> 00:05:01.603
I'm gonna put that logo back where it was.

59
00:05:05.656 --> 00:05:10.131
And we'll duplicate this line, And

60
00:05:10.131 --> 00:05:14.695
a reference to that other SVG, and
we'll drop that inside that link.

61
00:05:30.569 --> 00:05:34.437
Add one last little bit of CSS, and then
we can start building the page itself.

