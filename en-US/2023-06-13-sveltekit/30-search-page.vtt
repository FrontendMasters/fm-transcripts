WEBVTT

1
00:00:00.000 --> 00:00:02.390
Okay, let's talk about error handling.

2
00:00:02.390 --> 00:00:06.479
There are two types of errors in
SvelteKit there are expected errors and

3
00:00:06.479 --> 00:00:08.260
there are unexpected errors.

4
00:00:08.260 --> 00:00:13.255
unexpected error is one that was created
with the error helper imported from

5
00:00:13.255 --> 00:00:18.497
sveltejs/kit and we can see that here
in the expected page.server.js file.

6
00:00:18.497 --> 00:00:21.722
We're importing the error
helper from SvelteKit and

7
00:00:21.722 --> 00:00:26.031
then we're throwing an error,
420 status code Enhance your calm.

8
00:00:26.031 --> 00:00:31.389
And if we navigate to that page,
you'll see that message being displayed.

9
00:00:31.389 --> 00:00:36.153
But any other error, any error that
was not created with that helper,

10
00:00:36.153 --> 00:00:38.027
is treated as unexpected.

11
00:00:38.027 --> 00:00:41.126
So over here,
we're throwing a new error, Kaboom!

12
00:00:41.126 --> 00:00:45.629
If we navigate to this page,
we see the message Internal Error.

13
00:00:47.400 --> 00:00:49.887
So the distinction is that when
you throw an expected error,

14
00:00:49.887 --> 00:00:52.540
you are telling SvelteKit,
I know what I'm doing here.

15
00:00:52.540 --> 00:00:56.910
This error is intentional, it's not
something that we need to worry about.

16
00:00:56.910 --> 00:01:00.662
An unexpected error is assumed
to be a bug in your app.

17
00:01:00.662 --> 00:01:03.300
And so when an unexpected error is thrown,

18
00:01:03.300 --> 00:01:06.906
its message and
stack trace will be logged to the console.

19
00:01:06.906 --> 00:01:09.162
If we open up the terminal here,

20
00:01:09.162 --> 00:01:14.526
should see down there our kaboom
message along with a stack trace.

21
00:01:14.526 --> 00:01:17.981
Now later on we'll learn how
to add custom error handling.

22
00:01:17.981 --> 00:01:22.145
But for now, I want you to notice that
when we go to the expected error,

23
00:01:22.145 --> 00:01:27.080
the message is shown to the user,
and the unexpected error, it is not.

24
00:01:27.080 --> 00:01:31.037
Right, that's because error messages can
contain sensitive data which can be useful

25
00:01:31.037 --> 00:01:33.870
to someone who is trying
to attack your website.

26
00:01:33.870 --> 00:01:36.835
In the best case, the error message
is probably gonna be cryptic and

27
00:01:36.835 --> 00:01:40.270
not very helpful to your users because
they're designed for developers, and

28
00:01:40.270 --> 00:01:41.290
not for users.

29
00:01:41.290 --> 00:01:44.497
So, SvelteKit just essentially
redact that message and

30
00:01:44.497 --> 00:01:46.648
displays Internal Error to the user.

31
00:01:48.740 --> 00:01:53.211
And when something goes wrong
inside a load function,

32
00:01:53.211 --> 00:01:57.397
SvelteKit will render
the error pages that we see.

33
00:01:57.397 --> 00:02:01.674
But the default error
page is a little bland.

34
00:02:01.674 --> 00:02:05.041
If you wanna customize it, we can do so
by creating a +error.svelte component.

35
00:02:05.041 --> 00:02:09.028
We'll create that at the root

36
00:02:09.028 --> 00:02:13.815
of our source/routes directory.

37
00:02:15.858 --> 00:02:21.578
And inside here I'm gonna
import the page store so

38
00:02:21.578 --> 00:02:23.630
that we can get details about the error.

39
00:02:26.170 --> 00:02:32.814
And I'm gonna import some
emojis from the emojis.js file.

40
00:02:36.720 --> 00:02:39.849
All right, this contains some emojis
corresponding to status codes.

41
00:02:44.500 --> 00:02:52.185
And then on this page,
We'll add the status,

42
00:02:52.185 --> 00:02:59.072
which on the expected page is 420,
followed by the error message.

43
00:02:59.072 --> 00:03:06.555
And then to customize it, we'll add
a span, make it nice and big, 10ems.

44
00:03:14.850 --> 00:03:18.841
And we'll render the emoji that
corresponds to the current status code.

45
00:03:19.864 --> 00:03:24.044
All right, so
now if we visit the page with

46
00:03:24.044 --> 00:03:29.060
the expected error,
we see the melting face, and

47
00:03:29.060 --> 00:03:35.647
if we go to the unexpected error page,
we'll see a kaboom emoji.

48
00:03:35.647 --> 00:03:39.767
Now you'll notice that
the error.svelte component is

49
00:03:39.767 --> 00:03:43.361
being rendered inside the layout.svelte,
and

50
00:03:43.361 --> 00:03:48.191
we can create more granular error
boundaries than the route one.

51
00:03:48.191 --> 00:03:52.455
Inside expected page let's
create a new error.svelte, and

52
00:03:52.455 --> 00:03:56.310
inside that file,
we'll say this error was expected.

53
00:03:56.310 --> 00:04:03.112
And now if we navigate to that page,
instead of showing the root error page,

54
00:04:03.112 --> 00:04:08.236
It's going to show a more
specific error page.

55
00:04:08.236 --> 00:04:13.199
And you can have as many of these
error boundaries as you like at

56
00:04:13.199 --> 00:04:15.500
whatever depth of your app.

57
00:04:20.614 --> 00:04:22.480
Now, sometimes things
might go really wrong.

58
00:04:22.480 --> 00:04:23.260
For example,

59
00:04:23.260 --> 00:04:27.550
you might have an error that occurs while
trying to load the route layout data.

60
00:04:27.550 --> 00:04:32.086
And in that case, there's basically
nothing that SvelteKit can render, so

61
00:04:32.086 --> 00:04:34.892
it has to fall back to
a fully static error page.

62
00:04:34.892 --> 00:04:41.984
We can force this to happen by
opening a new file layout.serve.rjs.

63
00:04:45.290 --> 00:04:50.058
And inside the, we'll add a load function,

64
00:04:50.058 --> 00:04:55.980
I'm just gonna deliberately
throw an error like this.

65
00:04:55.980 --> 00:05:00.896
And so what we're looking at now is
the fallback error page that comes

66
00:05:00.896 --> 00:05:02.946
by default with SvelteKit.

67
00:05:02.946 --> 00:05:06.360
And we can customize this by adding a new

68
00:05:06.360 --> 00:05:11.647
source/error.html file
alongside source/app.html.

69
00:05:11.647 --> 00:05:15.012
Click the New File button, error.html.

70
00:05:17.890 --> 00:05:18.912
And in here, we can put whatever we want.

71
00:05:26.280 --> 00:05:31.507
We can use the SvelteKit
status placeholder and

72
00:05:31.507 --> 00:05:35.825
add another one for the error message.

73
00:05:50.450 --> 00:05:54.645
And we also use the throw mechanism
to redirect from one page to another.

74
00:05:54.645 --> 00:06:02.568
So inside this file,
route/a/+page.server.js,

75
00:06:02.568 --> 00:06:07.849
gonna add a load function that imports

76
00:06:07.849 --> 00:06:13.461
the redirects helper from SvelteKit and

77
00:06:13.461 --> 00:06:18.920
uses it to redirect the user from a to b.

78
00:06:22.630 --> 00:06:28.550
And now if we try and navigate to a,
it'll just take us straight to b instead.

79
00:06:28.550 --> 00:06:32.712
So you can throw redirect
inside load functions and

80
00:06:32.712 --> 00:06:37.376
inside form actions, API routes,
and the handle hook.

81
00:06:37.376 --> 00:06:40.314
All of those we'll discuss later.

82
00:06:40.314 --> 00:06:43.309
The most common status
codes that you'll use here.

83
00:06:43.309 --> 00:06:46.454
It'll be 303, which means see other.

84
00:06:46.454 --> 00:06:50.650
You'll use that following a successful
form submission sometimes.

85
00:06:50.650 --> 00:06:55.603
307 is a temporary redirect, and
308 is a permanent redirect.

86
00:06:55.603 --> 00:06:59.800
In this case, we're using
a temporary redirect from a to b.

87
00:06:59.800 --> 00:07:02.649
&gt;&gt; Some web hosts expect
like a 404.html file.

88
00:07:04.079 --> 00:07:09.061
&gt;&gt; Yes, so that would apply if
you're baking out your site

89
00:07:09.061 --> 00:07:12.420
as a set of static HTML pages.

90
00:07:12.420 --> 00:07:17.624
Some web servers do indeed let you specify
404.html which will basically be for

91
00:07:17.624 --> 00:07:21.129
everything that doesn't have
a file already created.

92
00:07:21.129 --> 00:07:25.745
If you're using one of those web
servers then you're probably gonna use

93
00:07:25.745 --> 00:07:30.300
something called adapter-static
which we'll bring up the docs for.

94
00:07:33.640 --> 00:07:36.210
So we have a page here on
static site generation.

95
00:07:36.210 --> 00:07:40.898
When you're using adapter-static, you can
create what's called a fallback page, and

96
00:07:40.898 --> 00:07:44.537
that will allow you to specify
a 404.html which will be invoked for

97
00:07:44.537 --> 00:07:46.345
everything that doesn't match.

