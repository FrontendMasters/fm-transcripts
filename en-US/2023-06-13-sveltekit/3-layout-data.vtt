WEBVTT

1
00:00:00.000 --> 00:00:04.956
Okay, so just as layout.svelte files
create UI for every child route,

2
00:00:04.956 --> 00:00:08.872
layout.server.js files load data for
every child route.

3
00:00:08.872 --> 00:00:13.282
So I suppose we'd like to add a more
posts sidebar to our blog post page.

4
00:00:13.282 --> 00:00:18.600
We could return summaries from
the load function here that powers

5
00:00:18.600 --> 00:00:24.885
the blog page in the same way that we're
returning it from the page.server.js

6
00:00:24.885 --> 00:00:29.636
that powers the index page,
but that will be repetitive.

7
00:00:29.636 --> 00:00:35.331
Instead, what we're gonna do is
rename this file to layout.server.js.

8
00:00:42.294 --> 00:00:44.882
And you'll notice that this
page continues to work.

9
00:00:44.882 --> 00:00:49.820
It's still able to access the summaries
data that's being returned

10
00:00:49.820 --> 00:00:52.126
from the layout load function.

11
00:00:54.100 --> 00:00:58.648
And so
now if you go to the individual post page,

12
00:00:58.648 --> 00:01:03.426
we have a layout already
scaffolded out here, and

13
00:01:03.426 --> 00:01:09.481
we can add a sidebar inside here,
just below the main element.

14
00:01:13.162 --> 00:01:19.600
Give it a title of More posts,
then we'll create an unordered list,

15
00:01:19.600 --> 00:01:25.938
and then we're gonna iterate over
data.summaries as slug, title

16
00:01:36.226 --> 00:01:38.776
I'm just gonna copy the code on
the left into this component

17
00:01:43.094 --> 00:01:47.949
And you can see that we're now able to
render the summaries in the sidebar on

18
00:01:47.949 --> 00:01:50.967
the blog page,
as well as the blog index page.

19
00:01:50.967 --> 00:01:55.575
And what's neat about this is that as we
navigate between these posts we're not

20
00:01:55.575 --> 00:01:59.031
having to go back to the server and
reload those summaries.

21
00:01:59.031 --> 00:02:03.501
Because SvelteKit is aware that even
though the post page has changed

22
00:02:03.501 --> 00:02:08.372
the layout has not changed and so
we don't need to go and refetch that data.

23
00:02:08.372 --> 00:02:11.006
If you do need to control when
that data is invalidated,

24
00:02:11.006 --> 00:02:14.326
there are techniques to do that and
we'll learn about those later on.

