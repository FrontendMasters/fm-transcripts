WEBVTT

1
00:00:00.504 --> 00:00:04.269
So SvelteKit uses a thing called
filesystem-based routing.

2
00:00:04.269 --> 00:00:07.005
What that means is that
the roots of your app,

3
00:00:07.005 --> 00:00:11.541
which is to say what the app should do
when the user visits a particular URL,

4
00:00:11.541 --> 00:00:14.565
are defined by the directories
in your code base.

5
00:00:14.565 --> 00:00:20.531
Every +page.svelte file inside
src/routes creates a page in your app.

6
00:00:20.531 --> 00:00:25.616
In this app, we currently have one page,
which is src/routes/+page.svelte,

7
00:00:25.616 --> 00:00:30.358
which you can see on the right here,
which maps to the root of the application.

8
00:00:30.358 --> 00:00:34.486
If we navigate to the about page,
you'll see that we see a 404

9
00:00:34.486 --> 00:00:38.547
Not Found error because we
haven't defined that rootlet yet.

10
00:00:38.547 --> 00:00:40.890
And we can fix that by
adding a second page.

11
00:00:40.890 --> 00:00:46.876
In the file tree over here,
just click the New File icon and

12
00:00:46.876 --> 00:00:50.430
create about/+page.svelte.

13
00:00:52.497 --> 00:00:56.862
We can add some content to that page,
we'll copy over the homepage,

14
00:00:56.862 --> 00:00:58.078
put that in there.

15
00:00:58.078 --> 00:01:00.667
And then just change that select and

16
00:01:00.667 --> 00:01:06.284
Cmd+D to select both instances of the word
home and replace that with about.

17
00:01:06.284 --> 00:01:09.293
So you can now see that we can
navigate between home and about

18
00:01:11.989 --> 00:01:16.155
Unlike a traditional multi-page app,
when we navigate between these two routes,

19
00:01:16.155 --> 00:01:19.101
the content is being updated
within the current document.

20
00:01:19.101 --> 00:01:20.695
We're not reloading the document and

21
00:01:20.695 --> 00:01:23.144
going all the way back to
the server to get the new content.

22
00:01:23.144 --> 00:01:24.655
So this gives us the best of both worlds.

23
00:01:24.655 --> 00:01:28.256
We get the fast server-ended startup,
followed by instant navigation.

24
00:01:28.256 --> 00:01:33.170
Although this behavior can be configured
if you do need something different.

25
00:01:36.834 --> 00:01:40.633
You'll notice, of course, that there was a
bit of duplication in that last exercise.

26
00:01:40.633 --> 00:01:44.471
We had the nav bar repeated in both
the home page and the about page.

27
00:01:44.471 --> 00:01:47.915
This is a very common thing when you're
building websites, you will have some part

28
00:01:47.915 --> 00:01:50.875
of your user interface that should
be persistent throughout your app.

29
00:01:50.875 --> 00:01:53.072
And for
that we use something called layouts.

30
00:01:53.072 --> 00:01:56.743
Instead of repeating that content
in our page.svelte files,

31
00:01:56.743 --> 00:02:00.427
we're gonna create a layout.svelte,
which contains that.

32
00:02:00.427 --> 00:02:02.464
So let's create our layout file.

33
00:02:02.464 --> 00:02:07.620
Again hit the New File icon,
add +layout.svelte.

34
00:02:09.557 --> 00:02:16.936
And we're gonna move the navigation
content out of page and into layout.

35
00:02:16.936 --> 00:02:20.993
You'll notice that it's not actually
showing any page content now, and

36
00:02:20.993 --> 00:02:25.117
that's because we need to tell SvelteKit
where that content should go, so

37
00:02:25.117 --> 00:02:30.943
below here we're going to
add a slot element So far so

38
00:02:30.943 --> 00:02:35.209
good, although if we now go to about
we'll see that navigation is doubled up.

39
00:02:35.209 --> 00:02:38.051
So we need to fix that
by getting rid of it.

40
00:02:41.688 --> 00:02:44.918
So layout.svelte applies
to every child page,

41
00:02:44.918 --> 00:02:50.679
that means siblingpage.svelte files and
every page.svelte in child directories.

42
00:02:50.679 --> 00:02:53.249
And you can have as many layout
files as you need that can be nested

43
00:02:53.249 --> 00:02:54.159
throughout your app.

44
00:02:54.159 --> 00:02:57.479
So if you have some sections of your app
that should have a particular layout,

45
00:02:57.479 --> 00:03:00.204
you can add a layout.svelte that
applies just to those pages.

