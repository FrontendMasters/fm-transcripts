[00:00:00]
>> All right, I'm gonna remove that logging, we no longer need it. we've verified that we are in fact getting cache hits. So we're just going to delete that and delete that. Okay, let's add a search page that we can search for movies that are interested in. You know the score by now, we create a new directory inside here, call it search.

[00:00:28]
And inside there we'll create a page.ts and a page.svelte. And we'll add a load function in our page.ts file And we're gonna be using the URL object because we're gonna to need to grab the query parameter. And if the query parameter isn't specified, then we'll just assume that someone has come direct to the search page and they haven't yet performed a search.

[00:01:22]
So we're gonna return an empty array of movies. I'm also gonna pass the empty string back to them. But if they have specified a query, then we're gonna make an API request, cons data = await. And we need to import our API helper. Import * as api from lib/api.

[00:02:01]
We've got to pass in our fetch so let's grab that. And the endpoint this time is search/movie. And we're gonna pass that query direct to the API. And this is gonna give us back another movie list. You can see that it's also imported that from type declarations. So we'll return the query so that we can render that in the search input.

[00:02:37]
And the movies are the results array from the data object. Inside our search page, We're gonna add a div class = column. And at the very top, we'll just have a big title that says Search. So let's go over to our in-progress search page. And also the if there was a query that was made, we need to create our script tag so that we can access the data that was passed in.

[00:03:27]
Remember lang = ts, export let data, I dn't know what's going on with my typing skills right now. Data query was provided. Then we're gonna use that results page component that we've been using so far. Pass it the movies. And we're gonna give it a next attribute of null for now.

[00:04:06]
And obviously, because we don't have a query at this point, we don't have anything to render. In theory, if I add a query like Avatar now, it is in fact performing a search and rendering that, but we wanna have some user interface that allows us to edit the query.

[00:04:24]
So let's create a form element. Unlike the other forms that we've been using in this workshop, we're not using method = post this time because this is just gonna reload the current page. It's not mutating any data or anything like that, it's just making a request at the API.

[00:04:41]
So we'll omit the method and we'll omit the action, but we'll add an input, give it a name, query, because that's going to correspond to the query parameter. We'll initialize it with any query that was previously added like this. I'm gonna disable autocomplete and I'm gonna disable the spellcheck.

[00:05:10]
Otherwise, it's gonna complain about the spellings of movies And hopefully, find now search for star wars, it's gonna go away, it's gonna perform an API request, and it's gonna update the page in place without reloading the page. So unlike a form method = post, form method = get is gonna default to doing everything client-side.

[00:05:38]
We're not gonna reload the page to get those new results. Let's make this input look a little bit nicer. First thing we wanna do is inherit the same font family that we're using elsewhere. I'm gonna make the input a little larger. Say 2em, give it some padding, and make it filled with the screen.

[00:06:05]
Am gonna give it a nice translucent background. It's a very subtle, white color. I'm gonna remove the border cuz the default browser styling for these elements is ugly as sin. Got a subtle border-radius. And we are gonna need to give it a color as well. So make that white.

[00:06:35]
I don't really like this bright blue outline. Let's use the nice accent color that we're using for the elements in our nav, we can do that with a focus visible selector. Outline 2px solid and use var accent like so. And we can now search for all of the John Wick movies or whatever else we're interested in.

