WEBVTT

1
00:00:00.179 --> 00:00:03.376
All right, so
we've got our hero component on the page,

2
00:00:03.376 --> 00:00:06.641
and now we wanna get some
information about the movie, and

3
00:00:06.641 --> 00:00:09.655
we wanna show that trailer
if one exists for the page.

4
00:00:23.740 --> 00:00:30.964
First thing we'll do is create a new
column, And we'll make it a grid.

5
00:00:37.946 --> 00:00:45.523
And if we have a trailer, we're gonna put
the YouTube embed in the left-hand spot.

6
00:00:48.681 --> 00:00:52.717
Right, so there's our iframe, we just need
to add all the attributes that is gonna

7
00:00:52.717 --> 00:00:54.169
turn it into a YouTube embed.

8
00:00:56.387 --> 00:01:03.107
The source the iframe is
gonna be the YouTube URL,

9
00:01:03.107 --> 00:01:06.469
youtube.com/embed.

10
00:01:09.348 --> 00:01:13.805
And then the trailer
object has a key property,

11
00:01:13.805 --> 00:01:17.823
which will uniquely identify that video.

12
00:01:17.823 --> 00:01:22.097
And you can see that it is now showing
the Super Mario video in there, but

13
00:01:22.097 --> 00:01:25.748
we need to add a few more things
before it's gonna look nice.

14
00:01:25.748 --> 00:01:27.515
We need to add a title so

15
00:01:27.515 --> 00:01:32.545
that people using assistive
technologies now is in the iframe.

16
00:01:32.545 --> 00:01:34.477
We're gonna get rid of
that ugly frameborder.

17
00:01:37.361 --> 00:01:41.778
The YouTube documentation says that,
in order for this to work,

18
00:01:41.778 --> 00:01:45.951
we need to get rid of, or
we need to allow various properties,

19
00:01:45.951 --> 00:01:48.466
we need to allow the accelerometer.

20
00:01:48.466 --> 00:01:52.727
I'm not sure why we need this stuff, and
I haven't tested to see if it actually is

21
00:01:52.727 --> 00:01:56.189
necessary, but I'm just gonna
copy the documentation for now.

22
00:02:02.493 --> 00:02:05.703
And don't worry if you're not
keeping up with this part,

23
00:02:05.703 --> 00:02:09.711
the code is available on GitHub, and
so you can copy and paste as needed.

24
00:02:16.490 --> 00:02:20.006
And finally, we'll allowfullscreen so

25
00:02:20.006 --> 00:02:24.731
that the full screen button
in the iframe works, okay?

26
00:02:29.665 --> 00:02:34.688
On the right-hand side, we're gonna
have a list of data about the movie,

27
00:02:34.688 --> 00:02:39.971
things like the release date, the box
office revenue, the genre, and so on.

28
00:02:39.971 --> 00:02:46.385
A good element to use for this is the dl
element, which stands for data list.

29
00:02:46.385 --> 00:02:50.793
I'm gonna give it some children,

30
00:02:50.793 --> 00:02:54.593
which are dt and dd elements,

31
00:02:54.593 --> 00:02:59.923
that's data type and data data, maybe.

32
00:02:59.923 --> 00:03:03.904
I'm not sure, we would have to ask NDN.

33
00:03:03.904 --> 00:03:10.681
Each of these is a key value pair, where
the dt is the key and the dd is the pair.

34
00:03:10.681 --> 00:03:11.974
I'm not sure who named these things.

35
00:03:14.206 --> 00:03:21.345
Data.movie.release_date is one of the
properties available, so we'll use that.

36
00:03:21.345 --> 00:03:23.807
And you can see that
it's now showing that.

37
00:03:23.807 --> 00:03:26.090
But it's showing it in the wrong place,

38
00:03:26.090 --> 00:03:29.326
we want this to be to
the right-hand side of the trailer.

39
00:03:29.326 --> 00:03:30.991
So let's start adding some styles.

40
00:03:37.288 --> 00:03:40.492
That grid should obviously
have a display value of grid.

41
00:03:42.580 --> 00:03:47.333
And it's gonna have a max-width, Of

42
00:03:47.333 --> 00:03:52.989
the column width because we
already have the column class.

43
00:03:52.989 --> 00:03:58.005
Give it some vertical
padding by applying a margin,

44
00:03:58.005 --> 00:04:02.679
and we'll put some spacing
between the elements

45
00:04:02.679 --> 00:04:06.221
inside the grid as well by using gap.

46
00:04:06.221 --> 00:04:10.391
That iframe there is gonna
have an aspect ratio of 16/9,

47
00:04:10.391 --> 00:04:14.317
that's the standard aspect ratio for
these things, and

48
00:04:14.317 --> 00:04:18.764
it's gonna have a width of 100%,
so it fills its grid area.

49
00:04:25.194 --> 00:04:30.483
On large-enough screens, we want
this to be a side-by-side situation.

50
00:04:30.483 --> 00:04:33.687
So we'll add a media query,

51
00:04:41.074 --> 00:04:47.690
To add some columns to our grid
using grid-template-columns.

52
00:04:47.690 --> 00:04:53.606
1fr just means one fraction,
one fraction and they'll be equally sized.

53
00:04:53.606 --> 00:04:55.987
If we save that now, hopefully,

54
00:04:55.987 --> 00:05:01.522
we're gonna see that the iframe is on
the left and all the data is on the right.

55
00:05:09.328 --> 00:05:14.571
We'll make the dl and
element a grid as well.

56
00:05:19.579 --> 00:05:25.371
And we want the left-hand column of this
grid to just be the maximum of whatever

57
00:05:25.371 --> 00:05:31.099
the content in that column is, and
we can do that with the max-content rule.

58
00:05:33.308 --> 00:05:36.270
And we'll give this a gap as well so
that the dt and

59
00:05:36.270 --> 00:05:39.176
the dd don't butt right
up against each other.

60
00:05:46.833 --> 00:05:52.003
And we'll add some styles to
the dt text-transform uppercase,

61
00:05:52.003 --> 00:05:55.485
we'll bump the font
size down a little bit.

62
00:05:55.485 --> 00:06:02.402
Do let's say 0.8 rams, and we'll drop
the color back a tiny bit as well.

63
00:06:06.366 --> 00:06:10.423
The dd currently has that
outrageous margin to the left, so

64
00:06:10.423 --> 00:06:12.460
we're gonna get rid of that.

65
00:06:12.460 --> 00:06:17.648
That looks a little bit nicer,
I'm just gonna slightly offset the dt

66
00:06:17.648 --> 00:06:23.631
element there, So
that things are essentially aligned.

67
00:06:23.631 --> 00:06:30.352
We can add some more data now,
we're gonna add the movie's runtime.

68
00:06:36.031 --> 00:06:40.386
I'm at the age where the runtime is the
first thing I look at when I'm evaluating

69
00:06:40.386 --> 00:06:42.016
whether to commit to a movie.

70
00:06:44.735 --> 00:06:48.476
And the runtime is gonna
be expressed in minutes.

71
00:06:48.476 --> 00:06:52.754
See if Mario Brothers is a nice and
short 92 minutes.

72
00:06:52.754 --> 00:06:54.695
We're gonna specify
minutes in the text there.

73
00:07:03.918 --> 00:07:08.919
It's expanding to fill
the vertical height available,

74
00:07:08.919 --> 00:07:14.438
so we're just gonna tell it to not
do that by targeting the dl and

75
00:07:14.438 --> 00:07:19.246
giving a height of 0,
we'll add the rest of the data.

76
00:07:19.246 --> 00:07:21.896
We're gonna add the movie's budget.

77
00:07:37.654 --> 00:07:42.561
And it expresses that as
the actual number of dollars,

78
00:07:42.561 --> 00:07:45.664
which is kinda difficult to read.

79
00:07:45.664 --> 00:07:50.814
So I'm gonna divide that by a million and
round it.

80
00:07:55.082 --> 00:07:59.829
And it's in US dollars, so
stick a dollar sign in front of it and

81
00:07:59.829 --> 00:08:01.900
an M at the end for million.

82
00:08:01.900 --> 00:08:06.034
A $100 million for
a Super Mario Brothers movie, remarkable.

83
00:08:06.034 --> 00:08:10.944
And then we'll find out how much revenue
it made, I'm just gonna copy that.

84
00:08:15.510 --> 00:08:17.961
&gt;&gt; I remember when video games were niche.

85
00:08:17.961 --> 00:08:23.929
&gt;&gt; [LAUGH] Yeah, My God,

86
00:08:23.929 --> 00:08:30.927
the Super Mario Brothers movie made
$420 million, that is massive.

87
00:08:30.927 --> 00:08:36.889
All right, and the final piece of data
that we're gonna add is the genre.

88
00:08:42.191 --> 00:08:46.456
Every time I see that word,
I think of the viral Alex Trebek video,

89
00:08:46.456 --> 00:08:50.732
the supercut of him saying genre
in various different [LAUGH] ways.

90
00:08:50.732 --> 00:08:54.353
Look it up if you haven't seen it,
it's well worth the watch.

91
00:08:54.353 --> 00:08:59.115
So genres is an array of objects
with an ID property, which is just

92
00:08:59.115 --> 00:09:04.762
an arbitrary number that corresponds
to this API, and also a name property.

93
00:09:04.762 --> 00:09:10.519
So we can just list out the genres
that apply to this movie.

94
00:09:10.519 --> 00:09:18.869
data.movie.genres.map g g.name,

95
00:09:18.869 --> 00:09:23.289
I'm gonna join those

96
00:09:23.289 --> 00:09:28.451
with a comma separator.

97
00:09:28.451 --> 00:09:32.914
Okay, you see that the Mario Bros
movie is an animation

98
00:09:32.914 --> 00:09:36.318
adventure family fantasy comedy movie.

99
00:09:36.318 --> 00:09:39.177
Okay, so
we're almost done with our movie page,

100
00:09:39.177 --> 00:09:42.800
the last thing that we want to
add is a list of recommendations.

101
00:09:42.800 --> 00:09:46.724
So we have this on the, here's one I made,
earlier version of this app.

102
00:09:46.724 --> 00:09:50.324
You might also like all of these movies.

103
00:09:50.324 --> 00:09:53.414
If you like one movie, then the movie
database has some recommendations for

104
00:09:53.414 --> 00:09:54.825
other movies that you might like.

105
00:09:54.825 --> 00:09:57.775
And because in our page load function

106
00:09:57.775 --> 00:10:02.066
we asked to append
recommendations to the response.

107
00:10:02.066 --> 00:10:06.688
We actually have a list of movie
recommendations that we can just add

108
00:10:06.688 --> 00:10:10.268
them with the carousel
component to the movie page.

109
00:10:10.268 --> 00:10:11.268
So let's do that now.

110
00:10:14.525 --> 00:10:19.500
In our page.svelte,
we'll add the Carousel component.

111
00:10:25.350 --> 00:10:27.621
The movies =

112
00:10:27.621 --> 00:10:35.675
data.movie.recommendations.results.

113
00:10:38.703 --> 00:10:42.206
And that Carousel component,

114
00:10:42.206 --> 00:10:47.332
it needs to receive a view object and
an href.

115
00:10:47.332 --> 00:10:55.802
We're gonna make these two things optional
because we don't have a view for this.

116
00:10:55.802 --> 00:11:01.703
And we don't have an href either because
they don't have a full results page for

117
00:11:01.703 --> 00:11:03.477
the recommendations.

118
00:11:03.477 --> 00:11:08.106
So that is already inside an if block, so
we don't need to change anything there.

119
00:11:08.106 --> 00:11:15.248
And this view object, you remember
it has a title and an endpoint.

120
00:11:15.248 --> 00:11:20.512
The only thing that we care about inside
the Carousel component is the title.

121
00:11:20.512 --> 00:11:25.851
So I'm gonna cheat a little bit and
do view =, and I'm just gonna pass

122
00:11:25.851 --> 00:11:32.750
in an object that says,
You might also like.

123
00:11:32.750 --> 00:11:37.098
And then just to keep tight scripts happy,
I'll give it an empty endpoint.

124
00:11:47.357 --> 00:11:51.384
Right, it looks like I managed to
introduce a syntax error here.

125
00:11:51.384 --> 00:11:54.891
And v is very helpfully telling
me in the browser instead of

126
00:11:54.891 --> 00:11:57.763
burying the message
somewhere in my terminal.

127
00:12:04.086 --> 00:12:07.482
Okay, VS Code has made a right hole to
this, so let me just clean this up,

128
00:12:07.482 --> 00:12:08.558
get rid of that quote.

129
00:12:14.212 --> 00:12:16.319
And then we need to pass in the movies,
of course.

130
00:12:22.227 --> 00:12:23.804
All right, let's see if that worked.

131
00:12:26.762 --> 00:12:30.667
Turns out we don't have any
recommendations for Super Mario Bros.

132
00:12:30.667 --> 00:12:34.153
So let's put this inside an if block.

133
00:12:34.153 --> 00:12:40.111
If
data.movie.recommendations.results.length

134
00:12:40.111 --> 00:12:47.593
is greater than 0, or
render that component, otherwise we won't.

135
00:12:50.163 --> 00:12:54.868
All right, if we go back to our page and
look at say, Quantumania,

136
00:12:54.868 --> 00:12:58.152
then it's gonna say that
you might also like.

137
00:12:58.152 --> 00:13:01.501
And I would expect to see a bunch of
other Marvel films in here, although it's

138
00:13:01.501 --> 00:13:04.815
actually giving us a commendably broad
array of viewing recommendations.

