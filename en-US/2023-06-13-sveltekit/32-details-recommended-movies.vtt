WEBVTT

1
00:00:00.070 --> 00:00:05.158
So a spell flicks app is looking in
reasonably good shape we're just gonna

2
00:00:05.158 --> 00:00:10.736
add one final page before we call it a day
and that is the individual movie page that

3
00:00:10.736 --> 00:00:16.508
we've been linking to all over the place
but haven't yet visited or implemented.

4
00:00:16.508 --> 00:00:21.087
So, open source/roots for
the last time and

5
00:00:21.087 --> 00:00:24.470
create a new root inside movies.

6
00:00:24.470 --> 00:00:27.555
I'm gonna call it in square parameters,
[id],

7
00:00:27.555 --> 00:00:30.290
that's gonna uniquely identify the movie.

8
00:00:31.450 --> 00:00:36.241
You'll notice that it's okay to have these
two roots with dynamic parameters in

9
00:00:36.241 --> 00:00:39.904
the same directory,
because one of them has this matcher, so

10
00:00:39.904 --> 00:00:43.650
the router knows that these two
things are not gonna conflict.

11
00:00:43.650 --> 00:00:47.135
It's gonna try,
if we go to /movers/trending,

12
00:00:47.135 --> 00:00:50.619
it's gonna try the view =
list parameter first and

13
00:00:50.619 --> 00:00:55.007
if that doesn't match,
then it's gonna try the id parameter.

14
00:00:55.007 --> 00:00:58.646
It's one of the benefits of having
a really sophisticated routing system.

15
00:01:01.942 --> 00:01:06.785
So, once more, we're gonna create

16
00:01:06.785 --> 00:01:12.104
a page.ts not js, and a page.svelte.

17
00:01:12.104 --> 00:01:16.729
Inside our page.ts we're gonna add,

18
00:01:16.729 --> 00:01:20.102
an async loading function.

19
00:01:20.102 --> 00:01:24.639
We're gonna get the params object and

20
00:01:24.639 --> 00:01:30.168
we're gonna get fetch and
we're gonna make,

21
00:01:30.168 --> 00:01:33.710
you guessed it, an API call,

22
00:01:33.710 --> 00:01:38.553
const movie =, import our API helper.

23
00:01:43.542 --> 00:01:48.522
Api.get, passing our fetch,

24
00:01:48.522 --> 00:01:53.875
the endpoint is gonna be /movie.

25
00:01:56.262 --> 00:01:59.396
/params.id.

26
00:02:03.612 --> 00:02:08.280
And we're gonna use that append to
response trick that we used before to get

27
00:02:08.280 --> 00:02:10.365
multiple request data in one go.

28
00:02:14.995 --> 00:02:18.606
We're gonna get images,

29
00:02:18.606 --> 00:02:22.882
videos and recommendations.

30
00:02:22.882 --> 00:02:28.008
And just so that we can get the most
value out of our client side caching,

31
00:02:28.008 --> 00:02:33.749
I'm gonna to duplicate this append to
response property on the homepage here.

32
00:02:33.749 --> 00:02:37.077
This way, if someone clicks from
the hero image on the homepage,

33
00:02:37.077 --> 00:02:40.664
then they're gonna get a cache error,
which is gonna be really nice.

34
00:02:44.147 --> 00:02:48.141
This is a MovieDetails object, so
we'll add the as MovieDetails.

35
00:02:50.972 --> 00:02:56.251
And on this page we look at the one
that's deployed online already,

36
00:02:56.251 --> 00:03:01.713
I had Javascript disabled this whole time,
okay, reload that page so

37
00:03:01.713 --> 00:03:06.712
on this page we have some information
about the movie we also have

38
00:03:06.712 --> 00:03:10.540
a trailer which is being
shown on the left there.

39
00:03:11.800 --> 00:03:14.672
And we wanna have that on the movie page,
that we're about to build.

40
00:03:14.672 --> 00:03:21.052
In order to do that,
we wanna get the trailer

41
00:03:21.052 --> 00:03:26.751
object from the movie videos results.

42
00:03:36.081 --> 00:03:41.650
And specifically, we want to have
a video that is of type trailer and

43
00:03:41.650 --> 00:03:46.258
is hosted at YouTube because
we know how to embed those.

44
00:03:46.258 --> 00:03:53.403
So we'll return, Video.official.

45
00:03:53.403 --> 00:03:59.425
So it came from from the actual studio,

46
00:03:59.425 --> 00:04:04.354
video.site === YouTube and

47
00:04:04.354 --> 00:04:09.830
the video.type is either a Trailer

48
00:04:09.830 --> 00:04:16.138
or A teaser.

49
00:04:24.255 --> 00:04:30.897
And then we're just gonna return all
of that to our page load function.

50
00:04:33.407 --> 00:04:37.824
From our page load function into our page.

51
00:04:37.824 --> 00:04:42.846
So we'll add a script tag, lang = ts

52
00:04:42.846 --> 00:04:49.164
export let data and
it has the movie details and

53
00:04:49.164 --> 00:04:53.059
the trailer on that object.

54
00:05:01.410 --> 00:05:04.610
And the first thing we're gonna
do is add another hero component,

55
00:05:12.096 --> 00:05:14.118
Which is gonna take a movie object.

56
00:05:30.702 --> 00:05:34.597
We'll create a div with
a class of hero and

57
00:05:34.597 --> 00:05:41.508
we'll create a div class equals backdrop
for the backdrop image to go in.

58
00:05:43.981 --> 00:05:48.357
And then below that,
we'll have some info about the movie.

59
00:05:51.851 --> 00:05:56.841
We're gonna have the movie
title first if all,

60
00:05:56.841 --> 00:06:01.592
and then we're gonna
have a movie overview.

61
00:06:08.658 --> 00:06:13.484
And let's add that component to our page,

62
00:06:13.484 --> 00:06:16.576
passing the movie object.

63
00:06:21.666 --> 00:06:24.327
And take a look and see if it's appearing.

64
00:06:26.780 --> 00:06:31.537
It's giving us a not found error,
and I think I know why,

65
00:06:31.537 --> 00:06:37.198
it's because this URL here is
saying /movie instead of /movies.

66
00:06:37.198 --> 00:06:41.695
So we need to figure out where
that's coming from and fix it.

67
00:06:44.221 --> 00:06:50.459
See this link here has /movie,
let's fix that.

68
00:06:50.459 --> 00:06:52.424
Got another one here, we'll fix that too.

69
00:06:55.948 --> 00:07:01.241
Try that once more and it's giving us

70
00:07:01.241 --> 00:07:06.364
some information about the movie,

71
00:07:06.364 --> 00:07:09.786
65 with Adam Driver.

72
00:07:17.286 --> 00:07:22.635
As before,
we can use the media helper to create

73
00:07:22.635 --> 00:07:27.735
this image,
give it an alt attribute first.

74
00:07:30.503 --> 00:07:35.509
That's gonna be the movie title,
and the source is media,

75
00:07:35.509 --> 00:07:40.017
we're gonna pass in the movie backdrop,
actually,

76
00:07:40.017 --> 00:07:45.041
we're gonna need to figure out
what backdrop to use first.

77
00:07:45.041 --> 00:07:52.441
So, like before,
we're gonna grab movie.images.backdrops,

78
00:07:52.441 --> 00:07:58.541
find the first backdrop that
doesn't have a language so

79
00:07:58.541 --> 00:08:07.650
that we don't have any text,
Using this iso_ 639_1 property.

80
00:08:07.650 --> 00:08:10.151
And if we can't find one of those,

81
00:08:10.151 --> 00:08:15.174
then we'll just fall back to whatever
the first item in the array is.

82
00:08:18.457 --> 00:08:23.709
All right,
now that we've got that reference,

83
00:08:23.709 --> 00:08:27.946
we can do backdrop file and score pass.

84
00:08:27.946 --> 00:08:30.978
And we're gonna give it a width of 1280.

85
00:08:36.565 --> 00:08:41.617
And you'll see it's rendering it,
it's rendering it a little bit too large.

86
00:08:41.617 --> 00:08:44.821
So, we'll add some styles.

87
00:08:56.456 --> 00:09:00.334
This hero element,
we're gonna give this a display of grid so

88
00:09:00.334 --> 00:09:03.407
that we can have a mobile view and
a desktop view.

89
00:09:23.250 --> 00:09:25.037
Once we get above a certain width,

90
00:09:25.037 --> 00:09:27.696
we're gonna need to stop
that image from growing.

91
00:09:27.696 --> 00:09:30.362
So we'll add a media query.

92
00:09:58.420 --> 00:10:03.053
So we're gonna divide this into a grid
that is stacked vertically on mobile and

93
00:10:03.053 --> 00:10:05.099
horizontally on larger screens.

94
00:10:10.357 --> 00:10:15.662
And this backdrop element we're gonna
put that in the right hand column.

95
00:10:19.347 --> 00:10:24.353
At the moment because it's first
in the DOM it will be in the left

96
00:10:24.353 --> 00:10:30.114
hand column which if you look at
the original is not the way that it works,

97
00:10:30.114 --> 00:10:33.440
over here it's positioned on the right.

98
00:10:34.610 --> 00:10:40.676
So we're gonna do the same thing by
controlling the rendering order distinct

99
00:10:40.676 --> 00:10:46.848
from the DOM order, display grid makes
it really easy to do this sort of thing.

100
00:10:46.848 --> 00:10:50.979
We can just add a grid-column attribute

101
00:10:50.979 --> 00:10:55.604
which positions it on the right-hand side.

102
00:10:59.677 --> 00:11:07.910
We need to put some maximum
width on these images.

103
00:11:14.604 --> 00:11:19.586
Okay, and we can now see that it's
behaving the way that we want it to,

104
00:11:19.586 --> 00:11:24.331
it's not spilling out into the rest
of the page beyond the window.

105
00:11:27.874 --> 00:11:30.040
Do you have a question?

106
00:11:30.040 --> 00:11:33.415
&gt;&gt; If two match functions
have some similarities,

107
00:11:33.415 --> 00:11:37.376
which one would take priority
in matching route params?

108
00:11:40.641 --> 00:11:44.438
&gt;&gt; That's a really good question,
I'm actually not sure what happens in

109
00:11:44.438 --> 00:11:48.947
the situation where you have two dynamic
parameters with matches in the same route.

110
00:11:48.947 --> 00:11:52.573
I think it would probably be alphabetical,

111
00:11:52.573 --> 00:11:56.008
but I would have to go away and
check that.

112
00:11:56.008 --> 00:11:59.279
I would guess alphabetical,
that's a great question.

113
00:11:59.279 --> 00:12:02.756
All right, let's add some styles for
the info block here.

114
00:12:06.717 --> 00:12:10.440
I'm gonna move the window over so that
we can see the page as we're editing it.

115
00:12:15.971 --> 00:12:17.716
We'll begin by giving it some padding.

116
00:12:22.131 --> 00:12:23.753
Looks a little bit nicer already

117
00:12:29.536 --> 00:12:36.502
We'll make a display flex element
with the flex-direction of column.

118
00:12:43.385 --> 00:12:47.542
And we're gonna give it a negative margin
top, this is gonna move the element over

119
00:12:47.542 --> 00:12:52.596
the image, Which is gonna
create a nice visual effect.

120
00:13:03.851 --> 00:13:10.092
And we're gonna get rid of the margin
on the elements inside the info block.

121
00:13:12.572 --> 00:13:16.660
And instead we're gonna have a gap in
the flex element that looks like this.

122
00:13:18.520 --> 00:13:23.158
That happens to work out really nicely
on this poster because it's dark around

123
00:13:23.158 --> 00:13:26.690
the edges and
the title of the movie is quite short.

124
00:13:26.690 --> 00:13:32.726
But on some other posters like
let's take Super Mario Brothers,

125
00:13:32.726 --> 00:13:37.772
this is like super hard to read,
so we gonna add a little

126
00:13:37.772 --> 00:13:44.815
black gradient at the bottom of the movie
poster so that we can see that text.

127
00:13:44.815 --> 00:13:47.342
The way that we gonna do that
is with a pseudo element.

128
00:13:50.200 --> 00:13:53.664
Need to give it some content but
this can just be the empty string.

129
00:13:56.389 --> 00:13:59.423
I'm gonna fill the width and

130
00:13:59.423 --> 00:14:04.742
then give that a height of,
let's say, 8 rems.

131
00:14:04.742 --> 00:14:06.720
And we'll just do a black background for
now,

132
00:14:06.720 --> 00:14:08.870
check that we're doing things correctly.

133
00:14:08.870 --> 00:14:11.956
We need to put that over to the left and

134
00:14:11.956 --> 00:14:16.847
position it based on the bottom
of the container element.

135
00:14:16.847 --> 00:14:19.373
Okay, so
we can now obviously read the textbook,

136
00:14:19.373 --> 00:14:22.070
we're also obscuring
a bunch of the poster.

137
00:14:22.070 --> 00:14:26.669
So instead of having a black background,
we're going to have a linear gradient

138
00:14:26.669 --> 00:14:30.140
that's going to go to
the top of the element.

139
00:14:30.140 --> 00:14:33.731
It's going to start
black at the bottom and

140
00:14:33.731 --> 00:14:37.332
it's going to end transparent at the top.

141
00:14:37.332 --> 00:14:42.473
All right, and now we have this nice
fade so that we can see the poster but

142
00:14:42.473 --> 00:14:45.743
we can also read
the information on top of it.

143
00:14:48.917 --> 00:14:53.263
When we get bigger, we want to have the
information on the left hand side instead.

144
00:14:53.263 --> 00:14:57.814
So we're going to add some more
styles inside our media query.

145
00:15:02.204 --> 00:15:03.801
Create a new Info selector.

146
00:15:11.420 --> 00:15:12.837
Gonna position it absolutely.

147
00:15:16.077 --> 00:15:19.645
And we're gonna give it a width of 40ems,

148
00:15:19.645 --> 00:15:25.540
which should be about right,
it'll make it fill the available height.

149
00:15:27.610 --> 00:15:31.882
And just like the backdrop is being moved
to the right hand side with this grid

150
00:15:31.882 --> 00:15:35.153
column rule, we're gonna do
the same thing in reverse for

151
00:15:35.153 --> 00:15:37.590
the info to move it onto
the left hand side.

152
00:15:40.884 --> 00:15:45.698
And we're gonna get rid of that negative
margin that we were using before.

153
00:15:50.792 --> 00:15:53.342
I wanna justify the content.

154
00:15:55.605 --> 00:15:56.904
In the center.

155
00:15:56.904 --> 00:16:01.151
So now when we look at this,
we can see that the headline and

156
00:16:01.151 --> 00:16:06.180
the outline are going where we want
them to, but again, it's kind of

157
00:16:06.180 --> 00:16:11.493
hard to read this text because we need
to add one of those nice gradients.

158
00:16:11.493 --> 00:16:14.699
We can see that the gradient is still
being applied at the bottom of the poster

159
00:16:14.699 --> 00:16:15.760
where we don't want it.

160
00:16:15.760 --> 00:16:20.818
So we're gonna get rid of that and replace
it with a horizontal gradient instead.

161
00:16:20.818 --> 00:16:24.714
So that backdrop after pseudo element,

162
00:16:24.714 --> 00:16:29.641
we'll give it a,
let`s see.I'm gonna just drop

163
00:16:29.641 --> 00:16:34.238
that breakpoint down a bit so
that we can see it.

164
00:16:45.763 --> 00:16:49.639
Give it a width that isn't 100%,
we'll use 15 rems,

165
00:16:49.639 --> 00:16:52.306
gonna make it fill the available height.

166
00:16:57.763 --> 00:17:01.160
Move all the way to the left,
and the bottom.

167
00:17:04.340 --> 00:17:10.390
And this time the background is gonna be
a linear gradient that goes to the right.

168
00:17:10.390 --> 00:17:13.986
Again, from black to transparent.

169
00:17:20.321 --> 00:17:25.051
Still a little bit hard to read, so I'm
just gonna shove a drop shadow on there.

170
00:17:28.924 --> 00:17:33.556
Drop-shadow is sort of a get out of jail
free card when you're trying to build

171
00:17:33.556 --> 00:17:35.565
these sorts of user interfaces,

172
00:17:42.502 --> 00:17:47.355
And you can have as many of these in
sequence as you like if you need to

173
00:17:47.355 --> 00:17:49.096
up the power like that.

174
00:17:49.096 --> 00:17:54.084
Okay, so we can see the poster,
but we can also read the text.

