WEBVTT

1
00:00:00.000 --> 00:00:05.193
So our Svelte Flicks app is
looking in reasonably good shape.

2
00:00:05.193 --> 00:00:09.028
We're just gonna add one final page
before we call it a day, and that is

3
00:00:09.028 --> 00:00:13.324
the individual movie page that we've
been linking to all over over the place.

4
00:00:13.324 --> 00:00:16.393
But haven't yet visited or implemented.

5
00:00:16.393 --> 00:00:20.956
So, open source slash roots for
the last time and

6
00:00:20.956 --> 00:00:24.082
create a new root inside movies.

7
00:00:24.082 --> 00:00:31.261
I'm gonna call it in square parameters id,
that's gonna uniquely identify the movie.

8
00:00:31.261 --> 00:00:36.174
And you'll notice that it's okay to have
these two roots with dynamic parameters

9
00:00:36.174 --> 00:00:39.887
in the same directory,
because one of them has this matcher.

10
00:00:39.887 --> 00:00:43.755
So the router knows that these two
things are not going to conflict

11
00:00:43.755 --> 00:00:44.958
it's going to try.

12
00:00:44.958 --> 00:00:50.895
If we go to /movies/trending is going to
try the view equals less parameter first.

13
00:00:50.895 --> 00:00:55.039
And if that doesn't match,
then it's gonna try the ID parameter.

14
00:00:55.039 --> 00:00:58.952
Is one of the benefits of having
a really sophisticated routing system.

15
00:01:01.966 --> 00:01:06.758
So once more, we're gonna create

16
00:01:06.758 --> 00:01:12.055
a page.ts not js and a page.svelte.

17
00:01:12.055 --> 00:01:14.730
Inside our page.ts,

18
00:01:14.730 --> 00:01:20.089
we're gonna add an async loading function.

19
00:01:20.089 --> 00:01:25.770
We're gonna get the params object and
we're gonna get fetch.

20
00:01:25.770 --> 00:01:30.656
And we're gonna make,
you guessed it an API call.

21
00:01:30.656 --> 00:01:38.913
Const movie equals input array api helper.

22
00:01:43.531 --> 00:01:48.076
Api.get, pass in our fetch.

23
00:01:48.076 --> 00:01:53.849
The end point is gonna be, /movie

24
00:01:56.612 --> 00:01:59.061
/params.id.

25
00:02:03.595 --> 00:02:08.068
And we're gonna use that append to
response trick that we used before to get

26
00:02:08.068 --> 00:02:10.057
multiple request data in Mongo.

27
00:02:15.008 --> 00:02:18.619
We're gonna get images,

28
00:02:18.619 --> 00:02:22.894
videos and recommendations.

29
00:02:22.894 --> 00:02:27.574
And just so that we can get the most
value out of our client-side caching,

30
00:02:27.574 --> 00:02:32.500
I'm gonna duplicate this Append to
Response property on the homepage here.

31
00:02:33.820 --> 00:02:38.166
This way if someone clicks from
the hero image on the homepage,

32
00:02:38.166 --> 00:02:42.602
then they're gonna get a cashout
which is gonna be really nice.

33
00:02:44.032 --> 00:02:48.225
This is a movie details object,
so we'll add the as MovieDetails.

34
00:02:50.886 --> 00:02:55.551
And on this page If we look at the one
that's deployed online already,

35
00:02:55.551 --> 00:02:58.409
I had JavaScript disable this whole time.

36
00:02:58.409 --> 00:03:01.809
Okay, Reload that page.

37
00:03:01.809 --> 00:03:05.040
So, on this page we have some
information about the movie.

38
00:03:05.040 --> 00:03:10.540
We also have a trailer which is
being shown on the left there.

39
00:03:11.800 --> 00:03:14.760
We wanna have that on the movie
page that we're about to build.

40
00:03:14.760 --> 00:03:21.261
In order to do that,
we wanna get the trailer

41
00:03:21.261 --> 00:03:27.072
object from the movie videos results.

42
00:03:36.131 --> 00:03:41.616
And specifically, we want to have
a video that is of type trailer and

43
00:03:41.616 --> 00:03:46.152
is hosted at YouTube because
we know how to embed those.

44
00:03:46.152 --> 00:03:54.522
So we'll return, Video.official.

45
00:03:54.522 --> 00:03:59.678
So it came from from the actual studio,

46
00:03:59.678 --> 00:04:03.125
video.site = YouTube.

47
00:04:03.125 --> 00:04:08.303
And the video.type is either

48
00:04:08.303 --> 00:04:15.350
a trailer or A teaser.

49
00:04:24.124 --> 00:04:30.674
And then, we're just gonna return all
of that to our page load function.

50
00:04:33.306 --> 00:04:37.705
From our page let function into our page.

51
00:04:37.705 --> 00:04:39.570
So we will add a script tag.

52
00:04:39.570 --> 00:04:44.484
Lang = ts export let data, and

53
00:04:44.484 --> 00:04:53.182
it has the movie details in
the trailer on that object.

54
00:05:01.686 --> 00:05:04.750
The first thing we're gonna do
is add another hero component,

55
00:05:11.986 --> 00:05:13.850
Which is gonna take a movie object.

56
00:05:29.871 --> 00:05:35.046
We'll create a div with a class of hero.

57
00:05:35.046 --> 00:05:40.675
And we'll create a div class = backdrop
for the for the backdrop image to go in.

58
00:05:43.832 --> 00:05:47.843
And then below that, we'll have some
info about the about the movie.

59
00:05:51.594 --> 00:05:56.286
Right?
We're gonna have the movie title first of

60
00:05:56.286 --> 00:05:56.935
all.

61
00:05:56.935 --> 00:06:01.914
Then we're gonna have a movie overview.

62
00:06:08.778 --> 00:06:13.737
And let's add that component to our page,

63
00:06:13.737 --> 00:06:16.776
pass in the movie object.

64
00:06:21.600 --> 00:06:26.844
And take a look and see if it's appearing.

65
00:06:26.844 --> 00:06:29.050
It's giving us a not found error.

66
00:06:29.050 --> 00:06:33.654
And I think I know why,
it's because this URL here is

67
00:06:33.654 --> 00:06:37.224
saying /movie, instead of /movies.

68
00:06:37.224 --> 00:06:41.778
So we need to figure out where
that's coming from and fix it.

69
00:06:44.099 --> 00:06:50.408
See this link here has /movie,
just fix that.

70
00:06:50.408 --> 00:06:51.690
We got another one here.

71
00:06:51.690 --> 00:06:52.662
We'll fix that too.

72
00:06:56.012 --> 00:06:58.480
And try that once more.

73
00:06:58.480 --> 00:07:05.015
And it's giving us some information about

74
00:07:05.015 --> 00:07:10.103
the movie 65 with Adam Driver.

75
00:07:17.309 --> 00:07:22.981
As before, we can use the media
helper to create this image.

76
00:07:25.127 --> 00:07:27.404
Give it an alt attribute first.

77
00:07:30.549 --> 00:07:33.627
That's gonna be the movie title.

78
00:07:33.627 --> 00:07:36.717
And the source is media.

79
00:07:36.717 --> 00:07:42.117
I'm gonna pass in the movie backdrop.

80
00:07:42.117 --> 00:07:45.043
Actually, we're gonna need to figure
out what backdrop to use first.

81
00:07:45.043 --> 00:07:50.746
So like before, we're gonna grab

82
00:07:50.746 --> 00:07:55.865
movie.images.backdrops.

83
00:07:55.865 --> 00:07:59.857
Find the first backdrop that
doesn't have a language, so

84
00:07:59.857 --> 00:08:01.899
that we don't have any text.

85
00:08:05.794 --> 00:08:10.456
Using this ISO 6391 property and
if we can't find one of those

86
00:08:10.456 --> 00:08:15.390
then we'll just fall back to whatever
the first item in the array is.

87
00:08:18.356 --> 00:08:24.061
All right,
now that we've got that reference,

88
00:08:24.061 --> 00:08:27.827
we can do backdrop file_path.

89
00:08:27.827 --> 00:08:30.438
And we're gonna give it a width of 1280,

90
00:08:36.583 --> 00:08:39.187
And you'll see it's rendering it,

91
00:08:39.187 --> 00:08:44.825
although it's rendering it a little bit
too large, so we'll add some styles.

92
00:08:56.400 --> 00:09:00.483
This hero element,
we're gonna give this a display of grid so

93
00:09:00.483 --> 00:09:03.713
that we can have a mobile view and
a desktop view.

94
00:09:23.374 --> 00:09:28.328
Once we get above a certain

95
00:09:28.328 --> 00:09:34.183
width we're gonna need to stop

96
00:09:34.183 --> 00:09:39.588
that image from growing, so

97
00:09:39.588 --> 00:09:44.555
we'll add a media query.

98
00:09:58.289 --> 00:10:03.273
So we're gonna divide this into a grid
that is stacked vertically on mobile and

99
00:10:03.273 --> 00:10:05.471
horizontally on larger screens.

100
00:10:10.324 --> 00:10:15.877
And this backdrop element, we're gonna
put that in the right hand column.

101
00:10:19.363 --> 00:10:23.121
At the moment because it's first in the
Dom, it will be in the left hand column.

102
00:10:23.121 --> 00:10:28.330
Which, if you look at the original
is not the way that it works.

103
00:10:31.383 --> 00:10:34.527
Over here it's positioned on the right.

104
00:10:34.527 --> 00:10:38.952
So you can do the same
thing by controlling

105
00:10:38.952 --> 00:10:44.269
the rendering order distinct
from the DOM order.

106
00:10:44.269 --> 00:10:46.807
Display grid makes it really
easy to do this sort of thing.

107
00:10:46.807 --> 00:10:53.331
We can just add a grid column attribute,
which positions it on the right hand side.

108
00:10:59.453 --> 00:11:08.133
We need to put some maximum
widths on these images.

109
00:11:14.449 --> 00:11:18.351
Okay, and we can now see that it's
behaving the way that we want it to.

110
00:11:18.351 --> 00:11:24.622
It's not spilling out into the rest
of the page beyond the window.

111
00:11:28.123 --> 00:11:29.943
You have a question?

112
00:11:29.943 --> 00:11:33.551
&gt;&gt; If two match functions
have some similarities,

113
00:11:33.551 --> 00:11:37.602
which one would take priority
matching route params?

114
00:11:40.616 --> 00:11:41.848
&gt;&gt; That's a really good question.

115
00:11:41.848 --> 00:11:46.605
I'm actually not sure what happened in
the situation where you have two dynamic

116
00:11:46.605 --> 00:11:49.235
parameters with matches in the same route.

117
00:11:49.235 --> 00:11:53.008
I think it would probably be alphabetical.

118
00:11:53.008 --> 00:11:56.040
But I would have to go and check that.

119
00:11:56.040 --> 00:11:57.626
I would guess alphabetical.

120
00:11:57.626 --> 00:11:59.221
That's a great question.

121
00:11:59.221 --> 00:12:02.370
All right, let's add some styles for
the info block here.

122
00:12:06.530 --> 00:12:10.056
I'm gonna move that window over so that
we can see the page as we're editing it.

123
00:12:15.863 --> 00:12:17.700
We'll begin by giving it some padding.

124
00:12:21.997 --> 00:12:23.445
Looks a little bit nice already.

125
00:12:29.468 --> 00:12:34.351
We'll make it a display flex element

126
00:12:34.351 --> 00:12:39.082
with the flex direction of column.

127
00:12:43.280 --> 00:12:45.285
And we're gonna give it
a negative margin top.

128
00:12:45.285 --> 00:12:48.477
This is gonna move the element over

129
00:12:48.477 --> 00:12:53.221
the image which is gonna
create a nice visual effect

130
00:13:03.691 --> 00:13:09.912
And we're gonna get rid of the margin
on the elements inside the info block.

131
00:13:12.569 --> 00:13:18.340
And instead we're gonna have a gap in
the flex element, it looks like this.

132
00:13:18.340 --> 00:13:22.842
That happens to work out really nicely
on this poster because it's dark

133
00:13:22.842 --> 00:13:26.533
around the edges and
the title of the movie is quite short.

134
00:13:26.533 --> 00:13:31.876
But on some other posters like
let's take Super Mario Brothers.

135
00:13:31.876 --> 00:13:33.906
This is like super hard to read.

136
00:13:33.906 --> 00:13:39.890
So, we're gonna add a little
black gradient at the bottom

137
00:13:39.890 --> 00:13:44.786
of the movie poster so
that we can see that text.

138
00:13:44.786 --> 00:13:47.226
The way that we're gonna do
that is with a pseudo element.

139
00:13:49.947 --> 00:13:56.249
We need to give it some content but
this can just be the empty string.

140
00:13:56.249 --> 00:14:02.499
I'm gonna fill the width and then give
that a height of, let's say, 8 rems.

141
00:14:04.481 --> 00:14:06.705
And we'll just do a black background for
now,

142
00:14:06.705 --> 00:14:08.823
check that we're doing things correctly.

143
00:14:08.823 --> 00:14:11.878
We need to put that over to the left and

144
00:14:11.878 --> 00:14:16.719
position it based on the bottom
of the container element.

145
00:14:16.719 --> 00:14:19.311
Okay, so
we can now obviously read the textbook,

146
00:14:19.311 --> 00:14:22.070
we're also obscuring
a bunch of the poster.

147
00:14:22.070 --> 00:14:24.566
So instead of having a black background,

148
00:14:24.566 --> 00:14:30.140
we're gonna have a linear gradient that's
gonna go to the top of the element.

149
00:14:30.140 --> 00:14:35.331
It's gonna start black at the bottom and
it's gonna end transparent at the top.

150
00:14:37.218 --> 00:14:41.934
And now we have this nice fade so
that we can see the poster,

151
00:14:41.934 --> 00:14:45.899
but we can also read
the information on top of it.

152
00:14:49.144 --> 00:14:53.234
When we get bigger, we want to have the
information on the left hand side instead.

153
00:14:53.234 --> 00:14:57.556
So we're gonna add some more
styles inside our media query.

154
00:15:02.096 --> 00:15:03.827
Create a new Info Selector.

155
00:15:11.244 --> 00:15:14.259
I'm gonna position it absolutely.

156
00:15:15.668 --> 00:15:22.678
And we're gonna give it a width of 40 ems,
which should be about right.

157
00:15:22.678 --> 00:15:25.540
Gonna make it fill the available height.

158
00:15:27.610 --> 00:15:32.488
And just like the backdrop has been
moved to the right hand side with this

159
00:15:32.488 --> 00:15:36.797
grid column rule, we're gonna
do the same thing in reverse for

160
00:15:36.797 --> 00:15:39.749
the info to move it onto
the left hand side.

161
00:15:40.882 --> 00:15:45.916
And we're gonna get rid of that negative
margin that we were using before.

162
00:15:50.713 --> 00:15:56.768
I wanna justify the content In the sensor.

163
00:15:56.768 --> 00:15:59.788
So now when we look at this we
can see that the headline and

164
00:15:59.788 --> 00:16:02.181
the outline are going
where we want them to.

165
00:16:02.181 --> 00:16:07.077
But again it's kind of hard to read
this text because we need to add

166
00:16:07.077 --> 00:16:09.315
one of those nice gradients.

167
00:16:09.315 --> 00:16:14.063
We can see the gradient is still being
applied at the bottom of the poster

168
00:16:14.063 --> 00:16:15.739
where we don't want it.

169
00:16:15.739 --> 00:16:20.572
So we're gonna get rid of that and replace
it with a horizontal gradient instead.

170
00:16:20.572 --> 00:16:26.764
So that backdrop after pseudo animun,
we'll give it a,

171
00:16:26.764 --> 00:16:34.126
I'm gonna just drop that breakpoint
down a bit so that we can see it.

172
00:16:45.637 --> 00:16:50.946
Give it a width that isn't 100%,
we'll use 15 rems.

173
00:16:50.946 --> 00:16:52.568
Gonna make it fill the available height.

174
00:16:57.650 --> 00:17:00.738
Move it all the way to the left and
the bottom.

175
00:17:04.281 --> 00:17:10.194
And this time the background is gonna be
a linear gradient that goes to the right.

176
00:17:10.194 --> 00:17:13.931
Again, from black to transparent.

177
00:17:20.209 --> 00:17:25.366
Still a little bit hard to read, so I'm
just gonna shove a drop shadow on there.

178
00:17:28.893 --> 00:17:32.925
Drop shadow is sort of a get out of jail
free card when you're trying to build

179
00:17:32.925 --> 00:17:34.722
these sorts of user interfaces.

180
00:17:42.918 --> 00:17:47.649
And you can have as many of these in
sequence as you like if you need to up

181
00:17:47.649 --> 00:17:49.619
the power like that, okay?

182
00:17:49.619 --> 00:17:53.689
So we can see the poster, but
we can also read the text.

