WEBVTT

1
00:00:00.300 --> 00:00:03.411
Okay, so our carousel is beginning to take
shape, but now we wanna add the other two.

2
00:00:03.411 --> 00:00:06.975
We wanna add one for now playing and
we wanna add one for upcoming.

3
00:00:06.975 --> 00:00:11.217
So back in our data loading function,

4
00:00:11.217 --> 00:00:16.928
our page.ts,
we're gonna duplicate this line,

5
00:00:19.356 --> 00:00:22.421
Then we're gonna add now playing.

6
00:00:29.424 --> 00:00:36.827
And the endpoint for
this data is movie/now_playing.

7
00:00:36.827 --> 00:00:39.814
It's gonna give us the same type
of data back in movie list.

8
00:00:39.814 --> 00:00:48.523
And then we'll do an upcoming as well
using the movie/upcoming endpoint.

9
00:00:48.523 --> 00:00:52.997
And we can pass those into our
component in the same way.

10
00:00:57.163 --> 00:01:02.566
All right, so in our page.spell component,
we can duplicate these carousels.

11
00:01:02.566 --> 00:01:11.319
We can add one for now_playing,
And we can add one for upcoming.

12
00:01:17.450 --> 00:01:20.444
Some of the moves are duplicated between
these lists, that's totally fine.

13
00:01:20.444 --> 00:01:23.213
These are the three separate
views that we wanted to see.

14
00:01:23.213 --> 00:01:25.473
Now if you're paying
really close attention,

15
00:01:25.473 --> 00:01:29.211
you'll notice that there is actually
a problem in our data loading function.

16
00:01:29.211 --> 00:01:32.771
And that is that all of
these calls are waterfalled.

17
00:01:32.771 --> 00:01:36.401
What I mean by that is we're going away
and we're getting the trending data and

18
00:01:36.401 --> 00:01:40.417
then we're getting the now playing data,
and then we're getting the upcoming data.

19
00:01:40.417 --> 00:01:43.886
And then finally, we're getting
the information about the featured movie.

20
00:01:43.886 --> 00:01:44.588
And that's no good.

21
00:01:44.588 --> 00:01:49.194
We can make that much more efficient
by issuing these top three requests in

22
00:01:49.194 --> 00:01:49.945
parallel.

23
00:01:49.945 --> 00:01:52.608
So we're gonna rewrite
this code a little bit.

24
00:01:52.608 --> 00:01:58.808
We're gonna do const trending,
now_playing, and

25
00:01:58.808 --> 00:02:04.330
upcoming all together = await promise.all.

26
00:02:06.267 --> 00:02:08.886
And then we're just gonna grab
all of these API calls and

27
00:02:08.886 --> 00:02:10.231
put them inside that array.

28
00:02:14.067 --> 00:02:21.332
I'm gonna get rid of the assignments and
we'll turn the semicolons into commas.

29
00:02:24.216 --> 00:02:27.279
We're now gonna issue those
API calls simultaneously,

30
00:02:27.279 --> 00:02:29.652
which is gonna result
in a faster page load.

31
00:02:29.652 --> 00:02:34.865
This one is inevitably waterfall,
because we don't know which

32
00:02:34.865 --> 00:02:40.570
movie to get all of the details for
until we know what's trending today

33
00:02:50.100 --> 00:02:54.588
Obviously at the moment,
we just have a grid of images here,

34
00:02:54.588 --> 00:02:57.232
we don't know which list is which.

35
00:02:57.232 --> 00:03:02.133
So we're gonna define a new module that
describes the different views that

36
00:03:02.133 --> 00:03:04.248
we can use in this application.

37
00:03:04.248 --> 00:03:09.679
And source/lib will add a new module,
views.ts.

38
00:03:13.018 --> 00:03:18.103
And inside here,
gonna declare a new interface, view.

39
00:03:18.103 --> 00:03:18.978
We'll export that.

40
00:03:22.446 --> 00:03:27.684
The title is gonna be a string, and
the endpoint is also gonna be a string.

41
00:03:30.171 --> 00:03:34.724
And we'll use that endpoint
later on when we have

42
00:03:34.724 --> 00:03:38.620
dedicated pages for each of these views.

43
00:03:40.103 --> 00:03:47.191
And we're gonna create
an object of views like this.

44
00:03:47.191 --> 00:03:53.413
We've got a trending view,
which has a title of Trending,

45
00:03:53.413 --> 00:03:59.401
and an endpoint, as we saw,
is trending/movie/day.

46
00:04:01.076 --> 00:04:06.280
We'll create our now_playing view,

47
00:04:06.280 --> 00:04:10.221
with a title of Now playing and

48
00:04:10.221 --> 00:04:15.432
an endpoint of movie/now_playing.

49
00:04:15.432 --> 00:04:17.785
And finally, we've got upcoming view.

50
00:04:31.548 --> 00:04:35.881
Now inside our page.svelte,
we can reference these views and

51
00:04:35.881 --> 00:04:39.077
pass the view information
into the carousel.

52
00:04:39.077 --> 00:04:41.997
And then we can render a header and

53
00:04:41.997 --> 00:04:47.838
we can also use that information to
create links to the trending and

54
00:04:47.838 --> 00:04:51.503
now_playing and upcoming movie pages.

55
00:04:51.503 --> 00:04:54.615
So in our carousel component,

56
00:04:54.615 --> 00:05:00.101
we're gonna export a new value,
which is view.

57
00:05:00.101 --> 00:05:06.164
I'm just gonna import that from lib.views.

58
00:05:06.164 --> 00:05:10.627
And in the carousel,
we're now going to add a header,

59
00:05:13.277 --> 00:05:18.193
Which is gonna have that column class so
that it's constrained to the width.

60
00:05:19.493 --> 00:05:24.214
And the title of the h2,
or the text of the h2,

61
00:05:24.214 --> 00:05:27.177
is gonna be the view.title.

62
00:05:32.068 --> 00:05:36.377
And we're also gonna invite users
of this component to pass in,

63
00:05:40.191 --> 00:05:42.764
An href so
that you can see the entire list.

64
00:05:56.196 --> 00:06:00.466
And the reason that we're doing that,
if you look at the original, is so

65
00:06:00.466 --> 00:06:04.736
that when you have a trending carousel,
you can click the see all link and

66
00:06:04.736 --> 00:06:07.958
it will take you to a page of
all of the trending movies.

67
00:06:12.904 --> 00:06:17.266
All right, we've broken the page because
we're not passing in the view and

68
00:06:17.266 --> 00:06:19.667
the href, so let's fix that in our page.

69
00:06:25.517 --> 00:06:29.624
You see we're now getting a red squiggly
on these carousel components because we're

70
00:06:29.624 --> 00:06:31.631
not passing in the props that it expects.

71
00:06:31.631 --> 00:06:36.415
View=, and
then we need to import the views data

72
00:06:36.415 --> 00:06:39.924
from the file that we just created.

73
00:07:01.237 --> 00:07:06.080
Do the same thing for
now_playing and upcoming.

74
00:07:29.532 --> 00:07:35.872
We can now see those headers along
with those links on our homepage.

75
00:07:35.872 --> 00:07:39.857
Because if we click those links,
nothing is gonna happen yet

76
00:07:39.857 --> 00:07:42.599
because we haven't created that route.

77
00:07:42.599 --> 00:07:43.530
So let's do that now.

