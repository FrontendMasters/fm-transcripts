WEBVTT

1
00:00:00.400 --> 00:00:02.017
Okay, let's talk about error handling.

2
00:00:02.017 --> 00:00:04.252
There are two types of
errors in SvelteKit.

3
00:00:04.252 --> 00:00:07.752
There are expected errors and
there are unexpected errors.

4
00:00:07.752 --> 00:00:12.942
An expected error is one that was created
with the error helper imported from

5
00:00:12.942 --> 00:00:18.227
Sveltejs/kit, and we can see that here
in the expected page server js file.

6
00:00:18.227 --> 00:00:21.452
We're importing the error
helper from SvelteKit,

7
00:00:21.452 --> 00:00:26.149
and then we're throwing an error
a 420 status code, enhance your calm.

8
00:00:26.149 --> 00:00:31.232
And if we navigate to that page,
you'll see that message being displayed.

9
00:00:31.232 --> 00:00:37.175
But any other error that was not created
with that helper is treated as unexpected.

10
00:00:37.175 --> 00:00:41.610
So over here,
we're throwing a new error, kaboom.

11
00:00:41.610 --> 00:00:47.158
If we navigate to this page,
you see the message, internal error.

12
00:00:47.158 --> 00:00:49.747
So the distinction is that when
you throw an expected error,

13
00:00:49.747 --> 00:00:52.540
you're telling SvelteKit,
I know what I'm doing here.

14
00:00:52.540 --> 00:00:56.616
This error is intentional, it's not
something that we need to worry about.

15
00:00:56.616 --> 00:01:01.130
An unexpected error is assumed
to be be a bug in your app.

16
00:01:01.130 --> 00:01:03.321
So when an unexpected error is thrown,
its message and

17
00:01:03.321 --> 00:01:05.043
stack trace will be logged to the console.

18
00:01:05.043 --> 00:01:06.759
If we open up the terminal here,

19
00:01:06.759 --> 00:01:10.524
you should see down there our kaboom
message along with a stack trace.

20
00:01:14.374 --> 00:01:18.450
Now, later on, we'll learn how
to add custom error handling.

21
00:01:18.450 --> 00:01:22.673
But for now, I want you to notice that
when we go to the expected error,

22
00:01:22.673 --> 00:01:26.693
the message is shown to the user and
the unexpected error it is not.

23
00:01:26.693 --> 00:01:29.976
Right, that's because error messages
can contain sensitive data,

24
00:01:29.976 --> 00:01:33.870
which could be useful to someone who
is trying to attack your website.

25
00:01:33.870 --> 00:01:36.972
In the best case, the error message
is probably gonna be cryptic and not

26
00:01:36.972 --> 00:01:40.813
very helpful to your users because they're
designed for developers and not for users.

27
00:01:40.813 --> 00:01:44.378
So it's felt good just essentially
redact that message and

28
00:01:44.378 --> 00:01:46.670
displays internal error to the user.

29
00:01:52.631 --> 00:01:56.174
When something goes wrong inside
a load function SvelteKit will render

30
00:01:56.174 --> 00:01:57.630
the error pages that we see.

31
00:01:57.630 --> 00:02:00.908
See, the default error
page is a little bland.

32
00:02:00.908 --> 00:02:04.879
If you want to customize it we can do so

33
00:02:04.879 --> 00:02:10.007
by creating a plus
error.svelte component and

34
00:02:10.007 --> 00:02:16.043
create that the root of our
source/routes directory.

35
00:02:20.018 --> 00:02:23.630
I'm gonna import the pagestore so
that we can get details about the error.

36
00:02:26.170 --> 00:02:31.848
And I'm gonna import some emojis

37
00:02:31.848 --> 00:02:36.520
from the emojis.js file.

38
00:02:36.520 --> 00:02:39.488
This contains some emojis
corresponding to status codes.

39
00:02:45.900 --> 00:02:49.667
On this page, we'll add the status,

40
00:02:49.667 --> 00:02:56.624
which on the expected page is 420,
followed by the error message.

41
00:03:00.919 --> 00:03:05.838
Then to customize it, we'll add
a span make it nice and big tannins.

42
00:03:14.600 --> 00:03:17.420
And we'll render the emoji that
corresponds to the current status code.

43
00:03:18.695 --> 00:03:24.169
All right, so now if we visit
the page with the expected error,

44
00:03:24.169 --> 00:03:26.348
we see the melting face.

45
00:03:26.348 --> 00:03:31.955
And if we go to the unexpected error page,
we'll see a kaboom emoji.

46
00:03:36.080 --> 00:03:39.894
Now you'll notice that the error.svelte
component is being rendered inside

47
00:03:39.894 --> 00:03:40.999
the layout.svelte.

48
00:03:40.999 --> 00:03:46.468
And we can create more granular
error boundaries than the root

49
00:03:46.468 --> 00:03:52.836
one inside expected page let's
create a new error.svelte.

50
00:03:52.836 --> 00:03:58.160
And inside that file,
we'll say this error was expected.

51
00:03:59.930 --> 00:04:03.794
And now if we navigate to that page,
instead of showing the root error page.

52
00:04:03.794 --> 00:04:08.160
It's going to show a more
specific error page.

53
00:04:08.160 --> 00:04:12.982
And you can have as many of these
error boundaries as you like

54
00:04:12.982 --> 00:04:15.500
at whatever depth of your app.

55
00:04:20.653 --> 00:04:22.480
Now, sometimes things
might go really wrong.

56
00:04:22.480 --> 00:04:23.202
For example,

57
00:04:23.202 --> 00:04:27.125
you might have an error that occurs while
trying to load the root layout data.

58
00:04:27.125 --> 00:04:30.912
And in that case, there's basically
nothing that SvelteKit can render, so

59
00:04:30.912 --> 00:04:33.250
it has to fall back to
a fully static error page.

60
00:04:34.900 --> 00:04:40.898
We can force this to happen
by opening up a new file,

61
00:04:40.898 --> 00:04:43.695
layout.server.js.

62
00:04:45.550 --> 00:04:48.288
And inside the we'll add a load function.

63
00:04:48.288 --> 00:04:53.719
I'm just gonna deliberately
throw an error like this,

64
00:04:53.719 --> 00:05:00.210
and so what we're looking at
now is the fullback error page.

65
00:05:00.210 --> 00:05:05.797
That comes by default with SvelteKit and
we can customize this by adding

66
00:05:05.797 --> 00:05:11.585
a new source/error.error.html
file alongside source/app.html.

67
00:05:11.585 --> 00:05:15.291
Click the New File button error.html.

68
00:05:17.310 --> 00:05:18.779
And then here we can put whatever we want.

69
00:05:26.280 --> 00:05:31.262
We can use the SvelteKit
status placeholder,

70
00:05:31.262 --> 00:05:35.868
and add another one for the error message.

71
00:05:50.450 --> 00:05:54.641
And we also use the throw mechanism
to redirect from one page to another.

72
00:05:54.641 --> 00:06:00.248
So inside this file
source/route/a/page.server.js,

73
00:06:00.248 --> 00:06:03.380
we're gonna add a load function.

74
00:06:04.810 --> 00:06:08.595
It imports the redirects
helper from SvelteKit.

75
00:06:11.750 --> 00:06:13.396
And uses it to redirect the user.

76
00:06:18.090 --> 00:06:18.686
From a to b.

77
00:06:24.300 --> 00:06:31.510
Now if we try navigate to a,
it'll just take us straight to b instead.

78
00:06:31.510 --> 00:06:35.850
So you can throw redirect inside load
functions and inside form actions,

79
00:06:35.850 --> 00:06:40.560
API routes and the handle hook,
all of those we'll discuss later.

80
00:06:40.560 --> 00:06:43.442
The most common status
codes that you'll use here.

81
00:06:43.442 --> 00:06:46.584
It'll be 303 which means see other use

82
00:06:46.584 --> 00:06:50.180
that following a successful
form submission.

83
00:06:50.180 --> 00:06:55.704
Sometimes 307 is a temporary redirect,
and 308 is a permanent redirect.

84
00:06:55.704 --> 00:06:58.220
In this case we're using
a temporary redirect from a to b.

85
00:06:58.220 --> 00:07:01.561
&gt;&gt; Some web hosts expect
like 404.html file?

86
00:07:01.561 --> 00:07:09.184
So that would apply if you're baking out
your site as a set of static HTML pages.

87
00:07:09.184 --> 00:07:17.393
Some web servers doing, let you specify
404 the HTML which will basically be for

88
00:07:17.393 --> 00:07:22.917
everything that doesn't have
a file already created.

89
00:07:22.917 --> 00:07:27.237
If you're using one of those web servers,
then you're probably gonna use something

90
00:07:27.237 --> 00:07:30.300
called adapter static,
which we'll bring up the docs for.

91
00:07:32.978 --> 00:07:36.210
So we have a page here on
static site generation.

92
00:07:36.210 --> 00:07:40.757
When you're using adapter static, you can
create what's called a fullback page, and

93
00:07:40.757 --> 00:07:44.505
that will allow you to specify a 404.html,
which will be invoked for

94
00:07:44.505 --> 00:07:46.303
everything that doesn't match.

