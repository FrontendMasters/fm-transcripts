WEBVTT

1
00:00:00.165 --> 00:00:03.405
All right, so we've got our
hero component on the page and

2
00:00:03.405 --> 00:00:06.260
now we wanna get some
information about the movie.

3
00:00:06.260 --> 00:00:09.755
And we wanna show that trailer
if one exists for the page.

4
00:00:23.846 --> 00:00:31.187
First thing we'll do is create a new
column and we'll make it a grid.

5
00:00:37.725 --> 00:00:42.916
And if we have a trailer we're gonna put

6
00:00:42.916 --> 00:00:48.592
the YouTube embed in the left-hand spot.

7
00:00:48.592 --> 00:00:51.903
All right, so there's our iframe,
we just need to

8
00:00:51.903 --> 00:00:56.146
add all the attributes that is
gonna turn it into a YouTube embed.

9
00:00:56.146 --> 00:01:00.677
The source of the iframe is gonna be

10
00:01:00.677 --> 00:01:06.309
the YouTube URL, youtube.com/embed.

11
00:01:09.184 --> 00:01:14.073
And then the trailer object
has a key property which

12
00:01:14.073 --> 00:01:17.607
will uniquely identify that video.

13
00:01:17.607 --> 00:01:21.994
And you can see that it is now showing
the Super Mario video in there, but

14
00:01:21.994 --> 00:01:25.743
we need to add a few more things
before it's gonna look nice.

15
00:01:25.743 --> 00:01:30.542
We need to add a title so that people
using assistive technologies know what's

16
00:01:30.542 --> 00:01:34.408
in the iframe, we're gonna get
rid of that ugly frame border,

17
00:01:38.296 --> 00:01:43.353
The YouTube documentation says that in
order for this to work, we need to get rid

18
00:01:43.353 --> 00:01:48.424
of or we need to allow various properties,
we need to allow the accelerometer.

19
00:01:48.424 --> 00:01:51.651
I'm not sure why we need this stuff.

20
00:01:51.651 --> 00:01:54.208
And I haven't tested to see if
it actually is necessary, but

21
00:01:54.208 --> 00:01:56.281
I'm just gonna copy the documentation for
now.

22
00:02:02.560 --> 00:02:05.807
And don't worry if you're not
keeping up with this part,

23
00:02:05.807 --> 00:02:09.732
the code is available on GitHub and
so you can copy and paste as needed.

24
00:02:16.293 --> 00:02:19.547
And finally we'll allow full screen.

25
00:02:19.547 --> 00:02:24.787
So that the full screen button
in the iframe works, okay?

26
00:02:29.725 --> 00:02:34.465
On the right hand side, we are gonna
have a list of data about the movie,

27
00:02:34.465 --> 00:02:39.688
things like the release date, the box
office revenue, the genre, and so on.

28
00:02:39.688 --> 00:02:45.988
A good element to use for
this is the dl element which stands for

29
00:02:45.988 --> 00:02:52.047
data list, I'm gonna give it
some children which are dt and

30
00:02:52.047 --> 00:02:57.501
dd elements, that's data type and
data data maybe,

31
00:02:57.501 --> 00:03:01.285
I'm not sure, we would have to ask.

32
00:03:01.285 --> 00:03:05.615
And then each of these is a key value pair

33
00:03:05.615 --> 00:03:10.482
where the dt is the key and
the dd is the pair.

34
00:03:10.482 --> 00:03:13.846
I'm not sure who named these things.

35
00:03:13.846 --> 00:03:21.251
Data movie, release date is one of the
properties available, so we'll use that.

36
00:03:21.251 --> 00:03:26.037
And you can see that it's now showing that
but it's showing it in the wrong place.

37
00:03:26.037 --> 00:03:29.140
We want this to be to the right
hand side of the trailer.

38
00:03:29.140 --> 00:03:30.999
So let's start adding some styles.

39
00:03:37.127 --> 00:03:42.346
That grid should obviously
have a display value of grid.

40
00:03:42.346 --> 00:03:48.532
And it's gonna have a max
width of the column width,

41
00:03:48.532 --> 00:03:53.604
because we already have the column class.

42
00:03:53.604 --> 00:03:59.926
Give it some vertical padding by
applying a margin and we'll put some

43
00:03:59.926 --> 00:04:06.038
spacing between the elements inside
the grid as well by using gap.

44
00:04:06.038 --> 00:04:10.621
That iframe there is gonna have
an aspect ratio of 16 over 9,

45
00:04:10.621 --> 00:04:14.770
that's the standard aspect ratio for
these things, and

46
00:04:14.770 --> 00:04:19.276
it's gonna have a width of 100% so
it fills its grid area.

47
00:04:25.083 --> 00:04:30.423
On large enough screens, we want
this to be a side-by-side situation.

48
00:04:30.423 --> 00:04:33.564
So we'll add a media query.

49
00:04:41.045 --> 00:04:47.518
Add some columns to our grid
using grid template columns.

50
00:04:47.518 --> 00:04:53.717
One fr, one fr just means one fraction one
fraction and there'll be equally sized.

51
00:04:53.717 --> 00:04:59.261
We save that now hopefully, we're gonna
see that the iframe is on the left and

52
00:04:59.261 --> 00:05:01.496
all of the data is on the right.

53
00:05:09.241 --> 00:05:14.593
We'll make the dl element a grid as well.

54
00:05:19.486 --> 00:05:24.694
And we want the left hand column at
this grid to just be the maximum of

55
00:05:24.694 --> 00:05:31.125
whatever the content in that column is and
we can do that with the max content rule.

56
00:05:33.264 --> 00:05:36.162
And we'll give this a gap as well so
that the dt and

57
00:05:36.162 --> 00:05:39.003
the dd don't butt right
up against each other.

58
00:05:46.715 --> 00:05:49.736
And we'll add some styles to the dt,

59
00:05:49.736 --> 00:05:55.299
text transform uppercase will bump
the font size down a little bit.

60
00:05:55.299 --> 00:06:02.329
Do let's say 0.8rems, and we'll drop
the color back a tiny bit as well.

61
00:06:06.223 --> 00:06:10.356
The dd currently has that
outrageous margin to the left, so

62
00:06:10.356 --> 00:06:12.430
we're gonna get rid of that.

63
00:06:12.430 --> 00:06:13.771
That looks a little bit nicer.

64
00:06:13.771 --> 00:06:18.836
I'm just gonna slightly
offset the dt element there.

65
00:06:21.216 --> 00:06:23.706
So that things are centrally aligned.

66
00:06:23.706 --> 00:06:30.396
We can add some more data now,
we're gonna add the movie's runtime.

67
00:06:36.180 --> 00:06:39.323
I'm at the age where the runtime
is the first thing I look at when

68
00:06:39.323 --> 00:06:41.652
I'm evaluating whether
to commit to a movie.

69
00:06:44.617 --> 00:06:48.273
And the runtime is gonna
be expressed in minutes.

70
00:06:48.273 --> 00:06:52.077
See if Mario Brothers is a nice and
short 92 minutes.

71
00:06:52.077 --> 00:06:54.701
We're gonna specify
minutes in the text there.

72
00:07:03.994 --> 00:07:09.184
It's expanding to fill
the vertical height available, so

73
00:07:09.184 --> 00:07:14.474
we're just gonna tell it to not
do that by targeting the dl and

74
00:07:14.474 --> 00:07:19.271
giving a height of 0,
we'll add the rest of the data.

75
00:07:19.271 --> 00:07:22.046
We're gonna add the movers budget.

76
00:07:37.517 --> 00:07:42.450
And then expresses that as
the actual number of dollars,

77
00:07:42.450 --> 00:07:45.441
which is kinda difficult to read.

78
00:07:45.441 --> 00:07:50.798
So I'm gonna divide that by a million and
round it.

79
00:07:55.006 --> 00:07:59.151
And it's in US dollars, so
I'll stick a dollar site in front of it.

80
00:07:59.151 --> 00:08:02.741
And an M at the end for
million, $100 million for

81
00:08:02.741 --> 00:08:05.848
a Super Mario Brothers movie, remarkable.

82
00:08:05.848 --> 00:08:11.083
And then we'll find out how much
revenue it made, just gonna copy that.

83
00:08:15.305 --> 00:08:18.838
&gt;&gt; I remember when video games were niche.

84
00:08:18.838 --> 00:08:20.017
&gt;&gt; Yeah.

85
00:08:22.843 --> 00:08:27.911
My god, the Super Mario Brothers
movie made $420 million.

86
00:08:27.911 --> 00:08:30.776
That is massive.

87
00:08:30.776 --> 00:08:36.904
All right, and the final piece of data
that we're gonna add is the genre.

88
00:08:42.010 --> 00:08:46.384
Every time I see that word I think
of the viral Alex Trebek video,

89
00:08:46.384 --> 00:08:50.515
the supercut of him saying genre
in various different ways.

90
00:08:50.515 --> 00:08:54.104
Look it up if you haven't seen it,
it's well worth the watch.

91
00:08:54.104 --> 00:08:58.929
So, genres is an array of objects
with an ID property which is just

92
00:08:58.929 --> 00:09:04.487
an arbitrary number that corresponds
to this API and also a name property.

93
00:09:04.487 --> 00:09:10.416
So we can just list out the genres
that apply to this movie.

94
00:09:10.416 --> 00:09:18.990
Data.movie.genres.map, g g.name,

95
00:09:18.990 --> 00:09:23.276
I'm gonna join those

96
00:09:23.276 --> 00:09:28.284
with a comma separator.

97
00:09:28.284 --> 00:09:32.914
Okay, you see that the Mario Brothers
movie is an animation

98
00:09:32.914 --> 00:09:36.166
adventure family fantasy comedy movie.

99
00:09:36.166 --> 00:09:38.130
Okay, so
we're almost done with our movie page.

100
00:09:38.130 --> 00:09:42.693
The last thing that we want to
add is a list of recommendations.

101
00:09:42.693 --> 00:09:47.429
So we have this on the, here's one
I made earlier version of this app,

102
00:09:47.429 --> 00:09:50.173
you might also like all of these movies.

103
00:09:50.173 --> 00:09:53.356
If you like one movie then the movie
database has some recommendations for

104
00:09:53.356 --> 00:09:54.852
other movies that you might like.

105
00:09:54.852 --> 00:10:00.304
And because in our page load function,
we asked to append recommendations

106
00:10:00.304 --> 00:10:05.151
to the response, we actually have
a list of movie recommendations

107
00:10:05.151 --> 00:10:10.015
that we can just add with the carousel
component to the movie page.

108
00:10:10.015 --> 00:10:11.340
So let's do that now.

109
00:10:14.354 --> 00:10:19.551
In our page.svelte we'll
add the carousel component.

110
00:10:25.474 --> 00:10:28.401
The movies=

111
00:10:28.401 --> 00:10:38.785
data.movie.recommendations.results.

112
00:10:38.785 --> 00:10:47.169
And that carousel component needs
to receive a view object and an HF.

113
00:10:47.169 --> 00:10:51.026
We're gonna make these
two things optional.

114
00:10:52.947 --> 00:10:59.694
Because we don't have a view for
this, and we don't have an HF either.

115
00:10:59.694 --> 00:11:03.186
Because we don't have a full results
page for the recommendations.

116
00:11:03.186 --> 00:11:08.266
So that is already inside an if block, so
we don't need to change anything there.

117
00:11:08.266 --> 00:11:15.185
This view object, you remember
it has a title and an endpoint.

118
00:11:15.185 --> 00:11:20.328
The only thing that we care about inside
the carousel component is the title.

119
00:11:20.328 --> 00:11:24.996
So I'm gonna cheat a little bit and
do view equals and

120
00:11:24.996 --> 00:11:30.829
then I'm just gonna pass in object
that says you might also like,

121
00:11:30.829 --> 00:11:36.901
and then just to keep TypeScript happy,
give it an empty endpoint.

122
00:11:47.211 --> 00:11:51.533
Right, looks like I managed to
introduce syntax error here.

123
00:11:51.533 --> 00:11:56.038
And V is very helpfully telling me in
the browser instead of burying the message

124
00:11:56.038 --> 00:11:57.622
somewhere in my terminal.

125
00:12:03.839 --> 00:12:05.685
Okay, VS code does matter
right holies of this.

126
00:12:05.685 --> 00:12:08.449
So let me just clean this up,
get rid of that quote.

127
00:12:13.991 --> 00:12:16.698
And then we need to pass
in the movies of course.

128
00:12:22.021 --> 00:12:26.600
All right, let's see if that works.

129
00:12:26.600 --> 00:12:30.553
Turns out we don't have any
recommendations for Super Mario Brothers.

130
00:12:30.553 --> 00:12:35.283
So let's put this inside an if block, if

131
00:12:35.283 --> 00:12:43.917
data.movie.recommendations.results.length
is greater than 0,

132
00:12:43.917 --> 00:12:50.056
we'll render that component
otherwise we won't.

133
00:12:50.056 --> 00:12:53.780
All right, if we go back to our page and
look at say, quantomania,

134
00:12:53.780 --> 00:12:56.573
then it's gonna say that
you might also like, and

135
00:12:56.573 --> 00:13:00.698
I would expect to see a bunch of other
Marvel films in here, although it's

136
00:13:00.698 --> 00:13:04.987
actually giving us a commendably broad
array of viewing recommendations.

