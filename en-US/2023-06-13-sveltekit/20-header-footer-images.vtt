WEBVTT

1
00:00:00.080 --> 00:00:05.290
Okay, let's grab the Svelteflix
logo from the publish site.

2
00:00:05.290 --> 00:00:10.245
We'll just open Dev Tools,
select that element, Find

3
00:00:10.245 --> 00:00:13.624
that image and just open it in a new tab.

4
00:00:20.143 --> 00:00:23.555
And I'm gonna save that into my workspace.

5
00:00:30.395 --> 00:00:36.356
I'm gonna create it in a lib directory
to keep it out of my routes folder.

6
00:00:36.356 --> 00:00:38.740
I'm gonna create a new
folder called images.

7
00:00:38.740 --> 00:00:42.524
I'm just gonna drop it in
there with the name of logo.

8
00:00:44.373 --> 00:00:50.483
Right, and you can now see that in
our project source/lib/images/logo.

9
00:00:50.483 --> 00:00:52.966
And I'm gonna reference this
inside my layout.svelte,

10
00:00:55.594 --> 00:01:00.747
By importing it as if it were a module.

11
00:01:00.747 --> 00:01:04.176
Import logo from $lib/images/logo.svg.

12
00:01:04.176 --> 00:01:09.525
And this is gonna tell Vite to grab
a reference to that SVG file and

13
00:01:09.525 --> 00:01:14.776
treat it as an asset that will get
a unique hash name added to it,

14
00:01:14.776 --> 00:01:17.770
so that it can be cached immutably.

15
00:01:19.800 --> 00:01:24.966
So inside that link,
we'll create an image with

16
00:01:24.966 --> 00:01:31.649
an alt attribute of SvelteFlix and
a source of that logo value.

17
00:01:37.144 --> 00:01:38.566
Right now, we can't see it and

18
00:01:38.566 --> 00:01:42.650
I suspect that's because we haven't
added a height to the element.

19
00:01:42.650 --> 00:01:46.203
Okay, so it looks like we need to add an
explicit height on that image element, so

20
00:01:46.203 --> 00:01:46.953
let's do that.

21
00:01:55.724 --> 00:01:58.232
Right, and we'll just polish this off

22
00:01:58.232 --> 00:02:02.564
a little bit by adding some more of
a gap between the links on the right

23
00:02:09.424 --> 00:02:14.950
Okay, so we have the beginnings
of a user interface.

24
00:02:14.950 --> 00:02:19.765
We're gonna add a main element for
each individual page,

25
00:02:19.765 --> 00:02:21.933
just drop a slot in there.

26
00:02:21.933 --> 00:02:24.975
And then at the bottom,
we'll add a footer,

27
00:02:28.821 --> 00:02:32.815
Which is gonna contain this
text "Data provided by".

28
00:02:37.505 --> 00:02:39.822
And then we'll have a link
to the movie database.

29
00:02:41.957 --> 00:02:45.510
So this is where all of this
information is coming from.

30
00:02:45.510 --> 00:02:50.879
TMDB is an API that you can use in your
own applications to build any app that

31
00:02:50.879 --> 00:02:56.523
involves data about movies and also TV
shows, and the people who are in them.

32
00:02:56.523 --> 00:02:59.303
It has an API with some
developer documentation,

33
00:02:59.303 --> 00:03:01.430
which hopefully I can find down here.

34
00:03:07.825 --> 00:03:11.416
So we'll be referring to this
page as we build the application.

35
00:03:13.974 --> 00:03:16.050
Yes, I have a question from the crowd.

36
00:03:17.610 --> 00:03:21.406
&gt;&gt; Is there a good way to refer to
things like the logo or site CSS so

37
00:03:21.406 --> 00:03:24.399
that if the file name changes for
cache busting,

38
00:03:24.399 --> 00:03:28.490
some external site can still refer
to the URL without it changing?

39
00:03:28.490 --> 00:03:32.863
&gt;&gt; So if you wanted the logo to be at
a persistent URL, so that it could be used

40
00:03:32.863 --> 00:03:36.667
externally, then instead of
having it in your source folder,

41
00:03:36.667 --> 00:03:40.390
what you could do is put
it in your static folder.

42
00:03:40.390 --> 00:03:43.998
So let's take this images directory and
put that there,

43
00:03:43.998 --> 00:03:46.870
and then just comment out that import.

44
00:03:46.870 --> 00:03:51.303
And instead of using this logo value,

45
00:03:51.303 --> 00:03:58.516
we'll just hard code static,
sorry, images/logo.svg.

46
00:03:58.516 --> 00:04:03.797
And that will look the same,
the only difference is that that

47
00:04:03.797 --> 00:04:10.544
file will not be cached immutably,
it will always be accessible at that URL.

48
00:04:16.788 --> 00:04:20.710
And so that's something that we do
typically with things like favicons.

49
00:04:20.710 --> 00:04:23.352
But any image that you want
to be cached immutably,

50
00:04:23.352 --> 00:04:26.249
you should have that in your
source directory instead.

51
00:04:33.325 --> 00:04:36.344
So we're gonna add a link
to the movie database,

52
00:04:36.344 --> 00:04:40.038
since they've been kind enough
to provide this information.

53
00:04:40.038 --> 00:04:44.079
Just grab that, drop that in there.

54
00:04:44.079 --> 00:04:51.963
And then, once again, we're just gonna
grab this SVG from the publish site,

55
00:04:51.963 --> 00:04:56.653
save it into our app, As tmdb.svg.

56
00:04:59.147 --> 00:05:01.079
Gonna put that logo back where it was.

57
00:05:05.663 --> 00:05:07.164
And we'll duplicate this line.

58
00:05:09.796 --> 00:05:15.284
We'll grab a reference to that other SVG,

59
00:05:15.284 --> 00:05:20.321
and we'll drop that inside that link.

60
00:05:31.079 --> 00:05:34.091
One last little bit of CSS and then we
can start building the page itself.

