WEBVTT

1
00:00:00.000 --> 00:00:03.653
Okay, so
just as layout.svelte files create UI for

2
00:00:03.653 --> 00:00:08.806
every child route layout server js
files load data for every child route.

3
00:00:08.806 --> 00:00:13.401
So suppose we'd like to add a more
posts sidebar to our blog posts page.

4
00:00:13.401 --> 00:00:20.251
We could return summaries from the load
function here that powers the blog page.

5
00:00:20.251 --> 00:00:25.448
In the same way that we're returning
it from the page.server.js

6
00:00:25.448 --> 00:00:30.106
that powers the index page,
but that would be repetitive.

7
00:00:30.106 --> 00:00:37.659
Instead, what we're gonna do is
rename this file to layout.server.js.

8
00:00:42.255 --> 00:00:45.296
And you'll notice that this
page continues to work.

9
00:00:45.296 --> 00:00:50.150
It's still able to access
the summaries state that's being

10
00:00:50.150 --> 00:00:53.490
returned from the layout load function.

11
00:00:54.886 --> 00:00:58.661
And so now if you go to
the individual posts page,

12
00:00:58.661 --> 00:01:02.080
we have a layout already
scaffold out here.

13
00:01:02.080 --> 00:01:05.312
We can add a sidebar inside here.

14
00:01:07.562 --> 00:01:09.122
Just below the main element.

15
00:01:12.974 --> 00:01:19.483
Give it a title of More posts,
then we'll create an unordered list,

16
00:01:19.483 --> 00:01:25.895
and then we're going to iterate
over data.summaries as slug title

17
00:01:36.027 --> 00:01:40.657
I'm just gonna copy the code on
the left into this component.

18
00:01:43.055 --> 00:01:47.888
And you can see that we're now able to
render the summaries in the sidebar on

19
00:01:47.888 --> 00:01:50.894
the blog page,
as well as the blog index page.

20
00:01:50.894 --> 00:01:55.116
And what's neat about this is that,
as we navigate between these posts,

21
00:01:55.116 --> 00:01:59.147
we're not having to go back to
the server and reload those summaries.

22
00:01:59.147 --> 00:02:02.587
Because SvelteKit is aware that even
though the post page has changed,

23
00:02:02.587 --> 00:02:06.449
the layout has not changed, and so we
don't need to go and re-fetch that data.

24
00:02:08.368 --> 00:02:13.331
If you do need to control when
that data is invalidated there

25
00:02:13.331 --> 00:02:18.708
are techniques to do that and
we'll learn about those later on.

