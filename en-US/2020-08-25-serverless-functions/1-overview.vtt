WEBVTT

1
00:00:00.000 --> 00:00:04.002
We already talked about what serverless
means, it's kind of a confusing topic

2
00:00:04.002 --> 00:00:07.107
because the name doesn't mean
what it sounds like it means and

3
00:00:07.107 --> 00:00:09.091
that mental model is a little strange.

4
00:00:09.091 --> 00:00:12.845
I do think it will become much more
clear as we start to dig into these.

5
00:00:12.845 --> 00:00:16.304
So if you're if you're feeling
like you got it, stick with me,

6
00:00:16.304 --> 00:00:19.455
when we start writing code,
it's gonna click I promise.

7
00:00:19.455 --> 00:00:23.500
So then what we're gonna do
throughout this workshop and

8
00:00:23.500 --> 00:00:28.652
this is gonna be, I would say like
a reasonably fast workshop, I think.

9
00:00:28.652 --> 00:00:31.533
Because we're gonna be able to cover so
much, and

10
00:00:31.533 --> 00:00:33.808
we get to skip all of this boilerplate.

11
00:00:33.808 --> 00:00:37.207
But we're gonna figure out how we can load
some data through serverless functions.

12
00:00:37.207 --> 00:00:39.602
We're gonna start with
some hard coded data, and

13
00:00:39.602 --> 00:00:42.126
we're going to move on to
more dynamic data as we go.

14
00:00:42.126 --> 00:00:47.511
We're going to learn how to protect
secret credentials, one of the hardest

15
00:00:47.511 --> 00:00:53.066
things about writing single page apps is
that if I need to send a protected key,

16
00:00:53.066 --> 00:00:57.634
an API token or an access key or
something that can't be shared.

17
00:00:57.634 --> 00:01:00.907
I can't do that in a front end
application because somebody could just

18
00:01:00.907 --> 00:01:03.681
scrape the code and find it and
then go pretend they're me,

19
00:01:03.681 --> 00:01:05.472
and wreak havoc, that's a problem.

20
00:01:05.472 --> 00:01:08.725
So we're gonna show you how we can
fix that using serverless functions.

21
00:01:08.725 --> 00:01:12.029
We're gonna learn how to send
data in to serverless functions,

22
00:01:12.029 --> 00:01:14.490
we're going to figure out
how we can save data.

23
00:01:14.490 --> 00:01:16.847
So we're going to stand
up a database today and

24
00:01:16.847 --> 00:01:19.153
use serverless functions to read and
write.

25
00:01:19.153 --> 00:01:23.588
And then we're going to stand
up an identity service, and

26
00:01:23.588 --> 00:01:28.294
we're going to show how to limit
access to who can perform what

27
00:01:28.294 --> 00:01:31.387
role based on their current user token.

28
00:01:31.387 --> 00:01:35.244
And we'll do that again with serverless
functions, so there's a lot of stuff we

29
00:01:35.244 --> 00:01:38.378
can do, there's a whole lot of power for
what we're capable of.

30
00:01:38.378 --> 00:01:41.741
And we're gonna be able to move through
all of this without having to learn

31
00:01:41.741 --> 00:01:43.377
a whole lot about how servers work.

32
00:01:43.377 --> 00:01:45.113
And I think that's really exciting and

33
00:01:45.113 --> 00:01:47.594
that's why I think this is
such a powerful technology.

34
00:01:47.594 --> 00:01:50.957
We get to use the JavaScript
that we already know,

35
00:01:50.957 --> 00:01:55.925
to do extremely powerful things with
just a few additional things stacked

36
00:01:55.925 --> 00:02:00.351
on top of our existing knowledge and
I really, really like that.

37
00:02:00.351 --> 00:02:02.587
So, the first thing that we're gonna do,

38
00:02:02.587 --> 00:02:05.516
we're gonna need two things
before we can get started.

39
00:02:05.516 --> 00:02:10.470
We're going to be developing locally using
the Netlify CLI, netlify functions give

40
00:02:10.470 --> 00:02:15.094
us the least amount of setup that I've
seen for running serverless functions.

41
00:02:15.094 --> 00:02:20.136
We'll need two lines of config, and
so we're gonna start with that,

42
00:02:20.136 --> 00:02:23.480
so make sure that you
install the Netlify CLI.

43
00:02:23.480 --> 00:02:27.844
If you have the Netlify CLI, make sure
that you just run this again at latest so

44
00:02:27.844 --> 00:02:29.735
you've got the latest version.

45
00:02:29.735 --> 00:02:32.955
And then we're also going
to clone this starter repo,

46
00:02:32.955 --> 00:02:35.200
we're going to use the start branch.

47
00:02:35.200 --> 00:02:40.596
So go ahead and take a minute,
get the CLI installed and

48
00:02:40.596 --> 00:02:45.066
the the repo running at
the the start branch.

49
00:02:45.066 --> 00:02:48.296
So what we're looking at in here is,

50
00:02:48.296 --> 00:02:52.898
you're gonna see a data folder and
a source folder.

51
00:02:52.898 --> 00:02:57.027
So we're not gonna talk about really
any of the front end technology today,

52
00:02:57.027 --> 00:03:00.899
we're gonna write a little bit of
front end JavaScript to interact with

53
00:03:00.899 --> 00:03:02.468
the serverless functions.

54
00:03:02.468 --> 00:03:08.718
But I've pre-written the baseline,
all the styles are there,

55
00:03:08.718 --> 00:03:13.045
the site's outer wrapper is already there.

56
00:03:13.045 --> 00:03:17.432
So let's just verify that this is working,
we can run netlify,

57
00:03:17.432 --> 00:03:20.372
actually, I like the shortcut, ntl dev.

58
00:03:20.372 --> 00:03:24.419
And that is gonna start up
a local server for us, and

59
00:03:24.419 --> 00:03:27.635
it's gonna run at localhost 8888.

60
00:03:27.635 --> 00:03:31.057
So we can copy that over to a browser, and

61
00:03:31.057 --> 00:03:36.000
we'll see here that right now
it just shows us a headline.

62
00:03:36.000 --> 00:03:38.209
I'm gonna zoom in just a little bit,

63
00:03:38.209 --> 00:03:42.571
so this is what you should be seeing
that we aren't loading any data yet.

64
00:03:42.571 --> 00:03:47.379
We haven't actually pulled anything in,
we're only looking at the hard coded data.

65
00:03:47.379 --> 00:03:52.769
And if we pull this over to the side,
what we can see in our code here

66
00:03:52.769 --> 00:03:58.064
is that we've got this index.html,
and there's the styles.

67
00:03:58.064 --> 00:04:01.946
I'm gonna collapse those,
all we have is the h1, so

68
00:04:01.946 --> 00:04:04.720
this demo is it's running Eleventy.

69
00:04:04.720 --> 00:04:09.126
Eleventy is very cool if you just want
to write HTML, CSS and JavaScript,

70
00:04:09.126 --> 00:04:12.697
if you don't want to use a framework or
anything like that.

71
00:04:12.697 --> 00:04:15.416
We are not talking about that today,
if you're interested,

72
00:04:15.416 --> 00:04:18.621
I do have some articles, there's a lot
of really great resources on it.

73
00:04:18.621 --> 00:04:23.751
But in general, the reason I used it
is because we can just write some

74
00:04:23.751 --> 00:04:28.883
HTML in here and not have to worry
about using JSX or view templates.

75
00:04:28.883 --> 00:04:31.907
Or something like spelt where
there's some specific syntax,

76
00:04:31.907 --> 00:04:34.140
we're gonna be able to
just write plain HTML.

77
00:04:34.140 --> 00:04:38.847
So all the HTML and JavaScript we're
using today is browser standard.

78
00:04:38.847 --> 00:04:41.503
It should work in all modern browsers,

79
00:04:41.503 --> 00:04:45.213
there's no build step to
transpile this to be usable.

80
00:04:45.213 --> 00:04:48.426
It's all gonna be something that you
can copy paste into your browser and

81
00:04:48.426 --> 00:04:51.491
it will work, make sure that you've
installed everything as well.

82
00:04:51.491 --> 00:04:54.875
So the only dependencies that we have,
we have node-fetch,

83
00:04:54.875 --> 00:04:58.728
which I'll explain why we're using
that in a bit, we have eleventy.

84
00:04:58.728 --> 00:05:05.432
So yeah, make sure that we run npm install
to get all of those set up and running.

85
00:05:05.432 --> 00:05:11.661
And that will give us our running site
once that's done and run netlify dev.

86
00:05:13.810 --> 00:05:18.539
And the reason that we're using netlify
dev instead of using the standard

87
00:05:18.539 --> 00:05:23.201
like eleventy command, which we could
just run npm dev to run eleventy.

88
00:05:23.201 --> 00:05:26.081
Is that because we're working
with serverless functions,

89
00:05:26.081 --> 00:05:28.854
serverless functions don't
run as part of the front end.

90
00:05:28.854 --> 00:05:33.661
Serverless functions are actually
an entirely separate app, and there,

91
00:05:33.661 --> 00:05:38.251
depending on what service you're using,
local testing can be a pain.

92
00:05:38.251 --> 00:05:41.799
The reason that we're using netlify dev
and the reason that we're using netlify

93
00:05:41.799 --> 00:05:44.269
functions, is that there is
a really nice local story.

94
00:05:44.269 --> 00:05:47.054
Which is what we just did netlify dev,

95
00:05:47.054 --> 00:05:51.156
that's all we have to do to
locally test our functions.

