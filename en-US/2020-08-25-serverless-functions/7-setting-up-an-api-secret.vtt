WEBVTT

1
00:00:00.000 --> 00:00:03.219
I wanna make a call to
a third party API and

2
00:00:03.219 --> 00:00:06.448
I wanna do that using a secure API token.

3
00:00:06.448 --> 00:00:09.106
So there are a lot of
ways that we can do this.

4
00:00:09.106 --> 00:00:12.928
The way that I'm going to do it is
we're gonna use something called

5
00:00:12.928 --> 00:00:14.440
the Open Movie Database.

6
00:00:14.440 --> 00:00:19.102
It's very similar to IMDb,
except it gives us access to an API.

7
00:00:19.102 --> 00:00:24.544
And so that is in here,
I think I have it opened somewhere.

8
00:00:24.544 --> 00:00:25.470
Did I not open that one?

9
00:00:25.470 --> 00:00:29.877
Here it is, OMDb API.

10
00:00:29.877 --> 00:00:33.553
So go to omdbapi.com and

11
00:00:33.553 --> 00:00:37.931
then register for an API key.

12
00:00:37.931 --> 00:00:42.113
And you can get in there for free,
just put in your your email.

13
00:00:42.113 --> 00:00:47.910
I think it filters for disposable emails,
so just use a user actual email.

14
00:00:47.910 --> 00:00:54.672
It's gonna email you the API key,
And I've already got one.

15
00:00:54.672 --> 00:00:58.452
So I'm not gonna, or actually, I think
I might need to cuz I don't think I,

16
00:01:00.541 --> 00:01:03.014
Let's do it.

17
00:01:03.014 --> 00:01:11.325
I think I have mine on the other, Email.

18
00:01:11.325 --> 00:01:14.402
A key has already been assigned
to that email address.

19
00:01:14.402 --> 00:01:17.832
Okay, let's open my email and
find that key.

20
00:01:22.244 --> 00:01:25.174
Okay, so I've got that key.

21
00:01:25.174 --> 00:01:29.459
And so you are gonna need this key to
do the next piece cuz I'm not gonna be

22
00:01:29.459 --> 00:01:30.394
sharing mine.

23
00:01:30.394 --> 00:01:32.726
So make sure that you get that pulled up.

24
00:01:37.192 --> 00:01:42.503
And then once you've got it, we can
manage this a couple different ways.

25
00:01:42.503 --> 00:01:48.619
The way that I like to do
it is with a .env file.

26
00:01:48.619 --> 00:01:54.077
So we can do .env or we can actually
use netlify's environment variables.

27
00:01:54.077 --> 00:01:55.434
We'll end up using both and

28
00:01:55.434 --> 00:01:59.269
I'll show you some cool stuff about
the the netlify environment variables.

29
00:01:59.269 --> 00:02:03.193
But for getting started quickly,
we can just do .env and let me see,

30
00:02:03.193 --> 00:02:06.994
I think I have an extension installed
that's gonna let me do this.

31
00:02:06.994 --> 00:02:11.739
OMDB_API_KEY =, okay, so
that's not masked yet.

32
00:02:11.739 --> 00:02:13.842
So I'm actually gonna
pull this off screen.

33
00:02:15.552 --> 00:02:19.197
Now, I'm gonna pull
the whole thing off screen.

34
00:02:19.197 --> 00:02:22.517
All right, so I have saved that and
let me install,

35
00:02:22.517 --> 00:02:26.313
actually I wanna be able to
show you what's going on here.

36
00:02:26.313 --> 00:02:30.016
So now, I have just installed
an extension called Cloak.

37
00:02:30.016 --> 00:02:37.398
And so we can see here my API key is set,
but it's hidden, which is very nice.

38
00:02:37.398 --> 00:02:42.240
So now, I can show my .env
without sharing API keys.

39
00:02:42.240 --> 00:02:48.664
And what I just demonstrated inadvertently
is why it's important to be able to

40
00:02:48.664 --> 00:02:55.205
keep these things secret because I can't
just put this in the client side code.

41
00:02:55.205 --> 00:03:00.786
If I put it into client side code, so
let's say I go into my, where's it,

42
00:03:00.786 --> 00:03:06.097
here, and I wanted to write something
secret and I go into the index and

43
00:03:06.097 --> 00:03:11.996
I try to add some code here
that's like my, Super secret.

44
00:03:16.212 --> 00:03:17.139
Right?

45
00:03:17.139 --> 00:03:21.189
Now, I put this in my code and
I go out here and I look and

46
00:03:21.189 --> 00:03:26.409
any mischievous third party now,
let me actually start the server,

47
00:03:26.409 --> 00:03:34.735
so it's running, Can go in here,
inspect elements.

48
00:03:34.735 --> 00:03:37.912
They're gonna come down, they're gonna
look, they're gonna notice, hey,

49
00:03:37.912 --> 00:03:40.492
there's some script stuff happening,
I'm gonna look at this.

50
00:03:40.492 --> 00:03:44.734
And they're gonna end up getting in
here and they're gonna poke around and

51
00:03:44.734 --> 00:03:49.733
they're eventually gonna find, no,
here's my super secret, and it's exposed.

52
00:03:49.733 --> 00:03:53.517
Now, they've got it, they can go
impersonate me, they can go do mischief

53
00:03:53.517 --> 00:03:57.078
in my name, and the only people doing
mischief in my name should be me.

54
00:03:57.078 --> 00:04:02.070
So we can't do this, we can't put secret
keys in the client side code, and

55
00:04:02.070 --> 00:04:05.491
that means that we need to
do something different.

56
00:04:05.491 --> 00:04:11.174
And fortunately, serverless
functions do not expose their code.

57
00:04:11.174 --> 00:04:13.518
If I go look at the the browser here,

58
00:04:13.518 --> 00:04:18.221
we can see that up here somewhere
we've gotta call the movies, right?

59
00:04:18.221 --> 00:04:21.590
Now, I can poke around,
I can see the headers.

60
00:04:21.590 --> 00:04:23.786
All right, I can see here's some headers.

61
00:04:23.786 --> 00:04:28.562
All right, I can see we got a response,
we got request headers,

62
00:04:28.562 --> 00:04:33.177
and then I just get back the data,
but I can't find anything.

63
00:04:33.177 --> 00:04:39.387
If I go directly to this as well, let me,
can I just open this in another browser?

64
00:04:39.387 --> 00:04:41.940
Let's go over here.

65
00:04:41.940 --> 00:04:43.690
All right, and I'm gonna inspect.

66
00:04:43.690 --> 00:04:49.953
There's no data here, I can't see
the source of a serverless function.

67
00:04:49.953 --> 00:04:51.029
This is protected.

68
00:04:51.029 --> 00:04:56.025
So the actual code that runs in the
serverless function is not accessible in

69
00:04:56.025 --> 00:05:00.943
the browser, which means that I can
use secret keys in it without exposing

70
00:05:00.943 --> 00:05:03.667
them to people who are snooping around.

71
00:05:03.667 --> 00:05:08.897
And that means that I can
successfully protect my mischief.

72
00:05:08.897 --> 00:05:12.191
Again, I'm the only one who
can do mischief in my name.

73
00:05:12.191 --> 00:05:17.382
So let's use this API key that we just

74
00:05:17.382 --> 00:05:21.903
created to update our movies and

75
00:05:21.903 --> 00:05:25.761
we'll add in some scores.

76
00:05:25.761 --> 00:05:30.100
I wanna show like the Rotten Tomato score,
Metacritic, things like that.

77
00:05:30.100 --> 00:05:35.949
To do that, I'm going to head over
to my movies serverless function and

78
00:05:35.949 --> 00:05:38.779
we're gonna add some stuff to it.

79
00:05:38.779 --> 00:05:41.774
So we're still loading
the movies from JSON, but

80
00:05:41.774 --> 00:05:44.423
now we're gonna add a couple extra pieces.

81
00:05:44.423 --> 00:05:50.300
I need to construct a URL, so
I'm gonna use the built in require URL.

82
00:05:50.300 --> 00:05:54.956
This is a node, like a node built
in that lets us use the URL API.

83
00:05:54.956 --> 00:05:58.611
So I'm gonna use that to
construct the query string and

84
00:05:58.611 --> 00:06:03.871
to build out an API URL instead of trying
to do string concatenation and stuff.

85
00:06:03.871 --> 00:06:08.299
And then I wanna use fetch and
I wanna use the regular fetch API and

86
00:06:08.299 --> 00:06:12.486
that's why we needed to include
node fetch as a dependency.

87
00:06:12.486 --> 00:06:18.006
So as you can see here,
we have one dependency of node fetch.

88
00:06:18.006 --> 00:06:22.195
Node fetch is a very lightweight module.

89
00:06:22.195 --> 00:06:29.213
If I look at node fetch itself
in my node modules, where is it?

90
00:06:29.213 --> 00:06:30.630
It is here.

91
00:06:30.630 --> 00:06:34.614
We can see that node fetch
itself has no dependencies.

92
00:06:36.642 --> 00:06:40.631
So it's a tiny little polyfill that
lets us use the fetch API in node.

93
00:06:40.631 --> 00:06:44.734
It's very nice, it doesn't add
a lot of overhead to our apps, and

94
00:06:44.734 --> 00:06:49.573
it creates a lot of consistency where the
same code that I write on the browser is

95
00:06:49.573 --> 00:06:53.269
the same code that I'll write
in node to do the same things.

