WEBVTT

1
00:00:00.000 --> 00:00:01.542
The token has a few things.

2
00:00:01.542 --> 00:00:04.780
There's an access token,
there's an expiration date, and

3
00:00:04.780 --> 00:00:06.221
there's a refresh token.

4
00:00:06.221 --> 00:00:09.463
And these are what we actually
use to decide whether or

5
00:00:09.463 --> 00:00:11.921
not somebody is able to log into our app.

6
00:00:11.921 --> 00:00:16.746
So if I take this access token,
this is what's called

7
00:00:16.746 --> 00:00:21.785
the JSON Web Token or a JWT and
if we head over to jwt.io,

8
00:00:21.785 --> 00:00:28.133
this is a really cool thing provided
by Auth0 that lets us debug a JWT.

9
00:00:28.133 --> 00:00:32.624
So I can just copy paste it in here and
it shows us here's

10
00:00:32.624 --> 00:00:37.325
the header which is like what
kind of JSON Web Token it is.

11
00:00:37.325 --> 00:00:43.343
This is the body of the token
which is what's actually in it and

12
00:00:43.343 --> 00:00:46.139
then this is the signature.

13
00:00:46.139 --> 00:00:49.788
And so in order to validate this,
we need to have a secret,

14
00:00:49.788 --> 00:00:52.775
a kind of like a passphrase for
JSON Web Tokens.

15
00:00:52.775 --> 00:00:57.845
And that's what the apps that use
this identity share to say that like,

16
00:00:57.845 --> 00:01:01.055
yes, this is in fact
a valid JSON Web Token and

17
00:01:01.055 --> 00:01:05.050
not somebody just spoofing it and
sending it over to me.

18
00:01:05.050 --> 00:01:09.362
We aren't going to worry about that
here because Netlify Identity is

19
00:01:09.362 --> 00:01:12.272
going to handle all of that validation for
us.

20
00:01:12.272 --> 00:01:15.063
But if you want to dig deeper into that,

21
00:01:15.063 --> 00:01:20.910
there are really good resources on the
Auth0 website on octaves documentation.

22
00:01:20.910 --> 00:01:25.869
You can dig into the OAuth Doc's jwt.io
is going to take you through a bunch

23
00:01:25.869 --> 00:01:27.769
of information about that.

24
00:01:27.769 --> 00:01:32.452
But what we can see here if we
look at the payload of this JWT,

25
00:01:32.452 --> 00:01:35.370
is that we have our expiration date.

26
00:01:35.370 --> 00:01:37.011
We have our subscriber ID.

27
00:01:37.011 --> 00:01:37.941
So this is our Netlify user ID.

28
00:01:37.941 --> 00:01:43.750
We have our email address, and then we
have app metadata and user metadata.

29
00:01:43.750 --> 00:01:48.513
And so this is what tells us that
we have an actual user like we know

30
00:01:48.513 --> 00:01:50.290
that we've got a user.

31
00:01:50.290 --> 00:01:56.870
The user's token is valid for this long
and this is what we know about this user.

32
00:01:56.870 --> 00:02:01.795
So what we want to do is we ultimately
want to include a role on this which will

33
00:02:01.795 --> 00:02:06.485
go into app metadata because remember
the only way that we can affect app

34
00:02:06.485 --> 00:02:10.572
metadata is through the app,
the users can't control that.

35
00:02:10.572 --> 00:02:13.288
And that's important because we
don't want someone to say, hey,

36
00:02:13.288 --> 00:02:14.629
I'm an admin when they're not.

37
00:02:14.629 --> 00:02:19.116
They can't update this data
cuz they could say like,

38
00:02:19.116 --> 00:02:22.215
I'm Frank when I am actually Jason.

39
00:02:22.215 --> 00:02:25.299
And that's not a huge risk to us,
that just changes what the UI says,

40
00:02:25.299 --> 00:02:26.748
it'll greet the wrong person.

41
00:02:26.748 --> 00:02:30.634
But if I could go in and change this and
give myself admin permissions and stuff,

42
00:02:30.634 --> 00:02:31.855
that would be a problem.

43
00:02:31.855 --> 00:02:35.390
So we need to make sure that
that is not possible and

44
00:02:35.390 --> 00:02:38.429
that's what app metadata allows us to do.

45
00:02:38.429 --> 00:02:43.525
So now that we've got this user,
we are looking at our login page,

46
00:02:43.525 --> 00:02:46.080
and we have the option to log out.

47
00:02:46.080 --> 00:02:50.060
So if I log out, it pops open
the thing and I have to log out.

48
00:02:50.060 --> 00:02:52.691
I don't love that experience, so
I actually want to change it.

49
00:02:52.691 --> 00:03:00.103
So what I want is when I log in,
I want to get logged in.

50
00:03:00.103 --> 00:03:02.149
And then I want this to bounce
me over to the admin page so

51
00:03:02.149 --> 00:03:04.033
that I can just immediately
start adding movies.

52
00:03:04.033 --> 00:03:09.898
And we'll just add a logout button to that
admin page that will instantly log me out

53
00:03:09.898 --> 00:03:15.854
instead of this experience where I have to
pop open the the widget and then close it.

54
00:03:15.854 --> 00:03:18.649
So let's build that part first.

55
00:03:18.649 --> 00:03:23.788
Let's go into our code and
we're gonna add some

56
00:03:23.788 --> 00:03:28.797
some script here, so
add a new script tag, and

57
00:03:28.797 --> 00:03:34.470
we're going to add a function
called handle login.

58
00:03:34.470 --> 00:03:39.654
And that's going to get a user object,
and what we want to do is we

59
00:03:39.654 --> 00:03:46.188
want to check if there's not a current
user or if that user doesn't have a token.

60
00:03:46.188 --> 00:03:46.926
Then we want to return because that
means that we should be on this

61
00:03:46.926 --> 00:03:47.454
page if there is no
currently logged in user.

62
00:03:47.454 --> 00:03:55.853
We are where we're supposed
to be on the login page.

63
00:03:55.853 --> 00:04:02.618
However, if we do have an active
user if somebody is logged in,

64
00:04:02.618 --> 00:04:07.611
if we get here,
it means someone is logged in.

65
00:04:07.611 --> 00:04:09.805
So then we want to send them
to the admin page instead.

66
00:04:09.805 --> 00:04:17.634
So let's change
the window.location.pathname to be admin.

67
00:04:17.634 --> 00:04:19.155
Then we're going to get
two events that happen.

68
00:04:19.155 --> 00:04:24.165
So what happens when you import
Netlify identity widget is you get

69
00:04:24.165 --> 00:04:29.176
an object attached to the window
called Netlify identity and so we

70
00:04:29.176 --> 00:04:35.113
can get this with window.netlifyIdentity
and then I want to add a listener.

71
00:04:35.113 --> 00:04:40.579
So on the init event,
I want to check if someone's

72
00:04:40.579 --> 00:04:45.003
logged in, and also on the login event so

73
00:04:45.003 --> 00:04:49.445
when I actually run the login function.

74
00:04:49.445 --> 00:04:54.298
So this one fires when the page
loads when we initially navigate to

75
00:04:54.298 --> 00:04:59.162
the /login page, we wanna check
if somebody already logged in.

76
00:04:59.162 --> 00:05:03.758
So if I have this bookmarked and I close
my browser and then I renavigate to this

77
00:05:03.758 --> 00:05:08.804
later and I'm still an active user, I just
want to get redirected to the admin page.

78
00:05:08.804 --> 00:05:11.890
I don't wanna have to go
through a login flow.

79
00:05:11.890 --> 00:05:15.552
And then when I do go through the login
flow, that's when login fires and

80
00:05:15.552 --> 00:05:18.631
we want to get redirected once
we're done to the admin page.

81
00:05:18.631 --> 00:05:22.517
So we can see how this works by going
back out here, and it already happened.

82
00:05:22.517 --> 00:05:25.370
You can see that when the page refreshed,
it bumped us.

83
00:05:25.370 --> 00:05:29.047
So let's go to /login and I am logged in.

84
00:05:29.047 --> 00:05:30.660
Cool, took me to admin.

85
00:05:30.660 --> 00:05:32.208
It's behaving as intended.

86
00:05:32.208 --> 00:05:38.561
So the next thing that we want to do is
let's head over to our admin page and

87
00:05:38.561 --> 00:05:43.351
let's get this thing set up
to send us to login if we're

88
00:05:43.351 --> 00:05:47.537
not logged in and
give us the ability to log out.

89
00:05:47.537 --> 00:05:49.536
So here's my admin page.

90
00:05:49.536 --> 00:05:55.140
I'm going to close that sidebar so
we can see what's going on.

91
00:05:55.140 --> 00:06:01.065
And I'm just going to drop
a logout right above the h1.

92
00:06:01.065 --> 00:06:05.778
I'm not going to worry too
much about how this looks,

93
00:06:05.778 --> 00:06:08.620
I just want the ability to do it.

94
00:06:08.620 --> 00:06:12.459
So I just added a little bit of style
to this that's already defined so

95
00:06:12.459 --> 00:06:16.045
that it kind of sits at the top and
isn't like off to the far left.

96
00:06:16.045 --> 00:06:19.619
So if we save that and
we go look at our admin page,

97
00:06:19.619 --> 00:06:24.080
now we've got a logout button,
that needs to let us log out.

98
00:06:24.080 --> 00:06:27.258
So we'll do that by let's see,

99
00:06:27.258 --> 00:06:32.811
we've already included
the Netlify identity widget.

100
00:06:32.811 --> 00:06:37.409
So the next thing that
we wanna do is let's add

101
00:06:37.409 --> 00:06:41.161
a function handleIdentityEvent and

102
00:06:41.161 --> 00:06:45.889
that's going to get the user object,
right?

103
00:06:45.889 --> 00:06:49.940
And inside of this,
we want to check if there is a user, and

104
00:06:49.940 --> 00:06:53.436
that user has a token,
then we want to do nothing.

105
00:06:53.436 --> 00:06:59.920
So this is the opposite of the last time
that we wrote this because in this case if

106
00:06:59.920 --> 00:07:05.913
you're on the admin page, if you
are an active user if you are logged in,

107
00:07:05.913 --> 00:07:10.756
we wanna keep you here so
we can skip the rest of this logic.

108
00:07:10.756 --> 00:07:15.819
However, if you're not,
we're going to bounce you out

109
00:07:15.819 --> 00:07:20.892
window.location.pathname to
the login page, okay?

110
00:07:20.892 --> 00:07:25.529
So we've got that now we
just need to fire it.

111
00:07:25.529 --> 00:07:32.509
So we're going to do that same
thing window.netlifyIdentity.on and

112
00:07:32.509 --> 00:07:34.960
we'll run this on in it.

113
00:07:37.895 --> 00:07:42.842
HandleIdentityEvent and
we'll run it on the logout event.

114
00:07:46.241 --> 00:07:53.055
Okay, so what we're doing now is we
are saying that if you are not logged in,

115
00:07:53.055 --> 00:07:57.328
we want you to get redirected
to the login page.

116
00:07:57.328 --> 00:07:58.370
So we can check this.

117
00:07:58.370 --> 00:08:02.852
Let's go to, now let's hook up
the login because otherwise we're

118
00:08:02.852 --> 00:08:05.455
gonna have to do some some hacky stuff.

119
00:08:05.455 --> 00:08:10.205
So let's hook up this logout button and
what we're going to do to hook it up is

120
00:08:10.205 --> 00:08:13.919
we're just going to grab that
document.query selector,

121
00:08:13.919 --> 00:08:18.375
we will grab the logout button which
had a class of logout, remember and

122
00:08:18.375 --> 00:08:21.669
we're going to add an event listener for
the click.

123
00:08:21.669 --> 00:08:25.459
When you click it,
we're going to take that event and

124
00:08:25.459 --> 00:08:31.206
we will event.preventDefault, because
this link needs to perform an action.

125
00:08:31.206 --> 00:08:36.199
Come to think of it this probably
should have been a button

126
00:08:36.199 --> 00:08:38.496
because it's not a link.

127
00:08:38.496 --> 00:08:40.341
It's a button.

128
00:08:40.341 --> 00:08:43.002
But we're gonna rather than
refactoring this on the fly,

129
00:08:43.002 --> 00:08:45.727
we're gonna stick with the way
that I wrote this function.

130
00:08:45.727 --> 00:08:49.945
Functionally, these would be the same,
the button would just be,

131
00:08:49.945 --> 00:08:53.349
instead of being an anchor link,
it would be a button.

132
00:08:53.349 --> 00:08:55.474
But I don't want to
restyle things right now.

133
00:08:55.474 --> 00:08:57.759
So let's just roll.

134
00:08:57.759 --> 00:09:02.144
So what we gonna do is we gonna listen for
a click on this logout and

135
00:09:02.144 --> 00:09:07.276
we are going to then going to fire
the logout function of nullify identity.

136
00:09:07.276 --> 00:09:11.611
And now when I come out here,
I should be able to click this and

137
00:09:11.611 --> 00:09:15.183
what should happen assuming
that I didn't type or

138
00:09:15.183 --> 00:09:20.284
anything is when I click this link,
it is going to log me out, which will

139
00:09:20.284 --> 00:09:26.437
trigger the handle identity event function
which will redirect us to the login page.

140
00:09:26.437 --> 00:09:28.993
So let's give it a shot.

141
00:09:28.993 --> 00:09:31.726
There we go, we're at login, okay.

142
00:09:31.726 --> 00:09:37.284
And now if I try to go back to admin,
it redirects me to login, right?

143
00:09:37.284 --> 00:09:42.164
And so you can see here, this does give
us a brief moment of the admin page and

144
00:09:42.164 --> 00:09:45.033
there is an issue where
if we were to do this,

145
00:09:45.033 --> 00:09:48.775
you could disable JavaScript and
get to that admin page.

146
00:09:48.775 --> 00:09:53.566
It wouldn't help you in the case of this
app because you need JavaScript to submit

147
00:09:53.566 --> 00:09:54.207
the form.

148
00:09:54.207 --> 00:09:57.181
So it saves us in that regard.

149
00:09:57.181 --> 00:10:01.412
But in a more production app,
you would probably want to add something

150
00:10:01.412 --> 00:10:06.360
like role based access control, which is
where you're checking for the cookie or

151
00:10:06.360 --> 00:10:09.388
you could do redirects
based on who's logged in.

152
00:10:09.388 --> 00:10:13.257
There are a lot of ways to handle
this again, this isn't a strictly

153
00:10:13.257 --> 00:10:17.970
like authentication workshop so we're
kind of sticking to the high level here.

154
00:10:17.970 --> 00:10:20.806
But the general rules apply.

155
00:10:20.806 --> 00:10:24.615
And really what we care about is sending
in this authentication token to our

156
00:10:24.615 --> 00:10:27.408
serverless function which
is what we'll get to next.

157
00:10:27.408 --> 00:10:32.380
So now that I'm able to
log in [SOUND] I get

158
00:10:32.380 --> 00:10:36.450
redirected to our admin page and

159
00:10:36.450 --> 00:10:41.134
now I would be able to submit a movie.

