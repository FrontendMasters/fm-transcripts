WEBVTT

1
00:00:00.000 --> 00:00:04.661
The next thing that we wanna do is I
actually wanna use a server less function,

2
00:00:04.661 --> 00:00:05.172
right?

3
00:00:05.172 --> 00:00:08.038
I wanna show how these solve a problem.

4
00:00:08.038 --> 00:00:12.909
And the way I'm gonna do that is
let's start by loading some data.

5
00:00:12.909 --> 00:00:19.070
So actually, let me commit my
progress here, so that we can,

6
00:00:19.070 --> 00:00:25.716
let me check out a branch called
progress and I will commit at each.

7
00:00:25.716 --> 00:00:27.988
I don't have my aliases
set up on this laptop.

8
00:00:27.988 --> 00:00:29.865
I need to do that.

9
00:00:29.865 --> 00:00:35.615
So let's add all these, I'm gonna
git add everything, [SOUND] jeez.

10
00:00:35.615 --> 00:00:41.637
Git status and good, we're good.

11
00:00:48.880 --> 00:00:50.827
All right, and then I'm gonna push and

12
00:00:50.827 --> 00:00:56.234
set the origin to,
What did I call this, progress?

13
00:00:59.776 --> 00:01:03.673
Okay, so if at any point
today you find yourself lost,

14
00:01:03.673 --> 00:01:08.275
you can check out the progress to
reset to where we are right now.

15
00:01:08.275 --> 00:01:11.078
So yeah, that's what we will do.

16
00:01:11.078 --> 00:01:15.764
If you need to just catch up or
if wanna skip an exercise,

17
00:01:15.764 --> 00:01:17.758
you can just catch up and

18
00:01:17.758 --> 00:01:23.575
get to where we are by checking out
the latest on the progress branch.

19
00:01:23.575 --> 00:01:25.776
So next, let's load some data.

20
00:01:25.776 --> 00:01:29.389
So I want to load some movies.

21
00:01:29.389 --> 00:01:34.329
Now, I created some movies for this and
we've got, I'm gonna close this one up, so

22
00:01:34.329 --> 00:01:36.009
we can see what's going on.

23
00:01:36.009 --> 00:01:41.433
I have four movies here,
I made some spoofs of a fun movie.

24
00:01:41.433 --> 00:01:45.527
So Batman v Booperman,
we've got Starship Boopers,

25
00:01:45.527 --> 00:01:49.977
the movie Booper,
that Joseph Gordon Levitt classic, and

26
00:01:49.977 --> 00:01:54.525
In The Boop, and we are going
to display these on the screen.

27
00:01:54.525 --> 00:01:56.732
So let's do that.

28
00:01:56.732 --> 00:02:01.109
I'm gonna create a new function,
I'm gonna call it movies.js.

29
00:02:01.109 --> 00:02:05.573
And in this,
I'm gonna start by just loading my movies.

30
00:02:05.573 --> 00:02:08.743
And again, we're using CommonJS here,

31
00:02:12.429 --> 00:02:17.562
The node style loading of
require instead of import.

32
00:02:17.562 --> 00:02:20.414
Then I'm gonna export a handler.

33
00:02:20.414 --> 00:02:27.146
And again, that's an async function and
that needs to return a status code and

34
00:02:27.146 --> 00:02:31.639
we want that status code to be 200 and
then a body.

35
00:02:31.639 --> 00:02:38.555
And so the body, this movie's file,
this is a JSON object, right?

36
00:02:38.555 --> 00:02:44.927
So we can't just put it in like this,
it won't quite do what we want.

37
00:02:44.927 --> 00:02:46.785
It's gonna get weird.

38
00:02:46.785 --> 00:02:52.723
So instead, what we're gonna do is
we're going to use JSON.stringify and

39
00:02:52.723 --> 00:02:56.158
JSON.stringify just takes that object and

40
00:02:56.158 --> 00:02:59.618
it turns it into a string
that can be parsed.

41
00:02:59.618 --> 00:03:03.254
And the nice thing about
that is that it's kind

42
00:03:03.254 --> 00:03:08.198
of we're serializing the data
to be movable between places and

43
00:03:08.198 --> 00:03:12.784
that's gonna be really common
in serverless functions.

44
00:03:12.784 --> 00:03:17.620
This is when we're sending data around,
you're probably gonna be stringingfying

45
00:03:17.620 --> 00:03:20.355
and parsing things to read and
write that data.

46
00:03:20.355 --> 00:03:24.615
And we can take a look at what
that actually looks like.

47
00:03:24.615 --> 00:03:30.124
So if I, let's see, actually, let's try
it without and I'll show you what breaks.

48
00:03:30.124 --> 00:03:32.730
So I'm gonna save this,
I'm gonna start the server again.

49
00:03:32.730 --> 00:03:36.595
Not what I meant.

50
00:03:36.595 --> 00:03:38.732
Netlify dev, okay.

51
00:03:38.732 --> 00:03:43.803
So now,
I can go back out to my browser here and

52
00:03:43.803 --> 00:03:49.286
open up my localhost and
I'm gonna go to movies.

53
00:03:49.286 --> 00:03:53.940
Okay, so see here,
it says incorrect function response body.

54
00:03:53.940 --> 00:03:58.281
That's because we tried to send what
it interpreted as a JavaScript object,

55
00:03:58.281 --> 00:04:02.508
which isn't text, it's not something
that it can actually send across.

56
00:04:02.508 --> 00:04:07.375
And so we get this data and
it just doesn't like that,

57
00:04:07.375 --> 00:04:09.870
it must have a string body.

58
00:04:09.870 --> 00:04:16.205
So by stringifying, JSON.stringify,
we solve that problem.

59
00:04:16.205 --> 00:04:20.601
So now, if I go back out and
I refresh, there's our data.

60
00:04:20.601 --> 00:04:23.408
Okay, excellent.

61
00:04:23.408 --> 00:04:24.854
Everybody, take a second,
get that running.

62
00:04:24.854 --> 00:04:28.742
The next thing we're gonna do
is we're gonna update our web

63
00:04:28.742 --> 00:04:33.114
app to call this serverless function and
actually load that data.

