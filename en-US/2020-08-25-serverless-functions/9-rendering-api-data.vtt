WEBVTT

1
00:00:00.000 --> 00:00:04.929
Next what we're gonna do is we need to be
able to add the scores to the page and

2
00:00:04.929 --> 00:00:06.357
keep things simple.

3
00:00:06.357 --> 00:00:09.859
I'm gonna move this out in to
a whole separate function, so

4
00:00:09.859 --> 00:00:12.590
let's add a new function
called add scores and

5
00:00:12.590 --> 00:00:17.491
this is gonna accept our new movie element
and it's also gonna accept the scores and

6
00:00:17.491 --> 00:00:21.090
we'll just call it from inside
this initialized function.

7
00:00:21.090 --> 00:00:25.447
So what I'm going to do is,
is loop through the scores.

8
00:00:25.447 --> 00:00:30.316
So for each score that we get back
from our serverless function,

9
00:00:30.316 --> 00:00:33.844
we're going to build a little element for
it.

10
00:00:33.844 --> 00:00:40.380
So I'm going to create an item and
we will document.create element.

11
00:00:40.380 --> 00:00:43.373
We're going to use a list item.

12
00:00:43.373 --> 00:00:46.379
And then we're going to have a label.

13
00:00:46.379 --> 00:00:54.565
And the label will be a another
document.create element of span.

14
00:00:54.565 --> 00:01:00.249
All right, so
the label I'm going to give it a class.

15
00:01:00.249 --> 00:01:04.597
So just for styling and we're gonna call
it source so it's the source of the score.

16
00:01:04.597 --> 00:01:10.094
That's where the rating information or
the the score information is coming from.

17
00:01:10.094 --> 00:01:17.440
I also, because Internet Movie Database
is very long, I'm gonna shorten it.

18
00:01:18.750 --> 00:01:20.704
For the layout.

19
00:01:23.673 --> 00:01:31.132
And we'll do that by
saying the label.enter

20
00:01:31.132 --> 00:01:37.018
text is going to be if score.Source

21
00:01:37.018 --> 00:01:41.933
is Internet Movie Database.

22
00:01:41.933 --> 00:01:45.250
I'm going to shorten that to IMDb.

23
00:01:45.250 --> 00:01:47.438
Otherwise we're going to use score.Source.

24
00:01:47.438 --> 00:01:52.818
Okay, let me collapse this over here so

25
00:01:52.818 --> 00:01:57.556
that you can see what's going on.

26
00:01:57.556 --> 00:02:05.512
And then once we've got
that I want to attach it so

27
00:02:05.512 --> 00:02:13.090
we're going to item.append, child label.

28
00:02:13.090 --> 00:02:16.502
Okay, so what we've just done
is we created a label and

29
00:02:16.502 --> 00:02:18.663
then we whoops where did I just go.

30
00:02:18.663 --> 00:02:22.009
And then we stuck that
inside of this list item.

31
00:02:22.009 --> 00:02:25.155
So that's thing one,
we've labelled our score.

32
00:02:25.155 --> 00:02:29.589
So the next thing that we want
to do is we wanna get the value.

33
00:02:29.589 --> 00:02:34.431
And we'll do that with
a document.create element of span.

34
00:02:34.431 --> 00:02:40.235
And then we're gonna set the value
intertext to be let's I think there,

35
00:02:40.235 --> 00:02:42.242
sorry, score.value.

36
00:02:42.242 --> 00:02:43.948
All right.

37
00:02:43.948 --> 00:02:50.244
And inside this score.value,
that's all we need.

38
00:02:50.244 --> 00:02:53.947
So we're gonna item.append child value.

39
00:02:53.947 --> 00:02:54.596
All right?

40
00:02:54.596 --> 00:02:57.924
So now what we've done is
we've taken the score,

41
00:02:57.924 --> 00:03:02.680
we've created a list item, we've
created a span to hold the source and

42
00:03:02.680 --> 00:03:07.612
a span to hold the value and then we've
attached both of those to our item.

43
00:03:07.612 --> 00:03:12.861
So once we have that,
then we are going to get the score

44
00:03:12.861 --> 00:03:17.295
element which if you
remember we created this

45
00:03:17.295 --> 00:03:22.093
scores list unordered
list inside of our movie.

46
00:03:22.093 --> 00:03:27.347
We've been handed this div, the element
that we're going to pass in is that div.

47
00:03:27.347 --> 00:03:30.712
So we're just going to
look inside of it for

48
00:03:30.712 --> 00:03:35.860
the element.query selector, and
we're going to grab scores.

49
00:03:35.860 --> 00:03:44.356
And then once we have that we can
set scoreelement.appendChild,

50
00:03:44.356 --> 00:03:48.914
and we're going to put in the item.

51
00:03:48.914 --> 00:03:53.792
So, a little bit of kind of like
moving back and forth here,

52
00:03:53.792 --> 00:03:58.002
but just to recap we start
with our movies element.

53
00:03:58.002 --> 00:03:59.585
And then we loop through the scores.

54
00:03:59.585 --> 00:04:02.881
For each score we create a list item.

55
00:04:02.881 --> 00:04:07.506
And inside the list item, we create
a span to hold the label so IMDb or

56
00:04:07.506 --> 00:04:12.943
Rotten Tomatoes, and then we create a span
to hold the values so the score 94%

57
00:04:12.943 --> 00:04:18.158
seven out of 10, we attach these
the source and the value to the list item.

58
00:04:18.158 --> 00:04:23.158
And then we attach the list
item to the scores unordered

59
00:04:23.158 --> 00:04:26.318
list inside of our movie element.

60
00:04:26.318 --> 00:04:29.662
So the next thing that we need to do
to get this running is we just have to

61
00:04:29.662 --> 00:04:32.329
actually call this so
right above our container here.

62
00:04:32.329 --> 00:04:37.194
I'm going to run add scores which
is the function we just wrote.

63
00:04:37.194 --> 00:04:42.059
I'm going to parse in our element,
and I'm going to pass in movie.scores.

64
00:04:42.059 --> 00:04:45.771
Okay, now assuming I didn't typo anything.

65
00:04:45.771 --> 00:04:47.512
When I restart the server,

66
00:04:47.512 --> 00:04:51.990
what we should see is that now we get
scores attached from the OMDbAPI.

67
00:04:51.990 --> 00:04:55.367
Those should be attached
to our movie listing.

68
00:05:03.190 --> 00:05:04.818
There we go.

69
00:05:04.818 --> 00:05:09.295
So now we can see Batman v Booperman,
not super popular.

70
00:05:09.295 --> 00:05:12.235
Booper, people really like Booper.

71
00:05:12.235 --> 00:05:17.355
So we've got a functioning
kind of composite data, right?

72
00:05:17.355 --> 00:05:20.338
We have our hard coded
data from our JSON file,

73
00:05:20.338 --> 00:05:22.949
we've got third party data from an API.

74
00:05:22.949 --> 00:05:25.986
We've been able to stitch that
together in a serverless function.

75
00:05:25.986 --> 00:05:30.108
And now,
we're using it to display our UI, and

76
00:05:30.108 --> 00:05:35.271
all of that is being done without
having to manage a server.

77
00:05:35.271 --> 00:05:36.278
It just works.

78
00:05:36.278 --> 00:05:38.384
It's really, really pleasant.

79
00:05:38.384 --> 00:05:44.196
So this is, just like, feel like
we're starting to show why this is so

80
00:05:44.196 --> 00:05:46.758
exciting, why this gives us so

81
00:05:46.758 --> 00:05:52.294
many additional powers as developers
to get things done quickly.

