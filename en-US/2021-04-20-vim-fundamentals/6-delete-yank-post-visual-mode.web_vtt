WEBVTT

1
00:00:00.140 --> 00:00:03.239
Now, I'm gonna curl thins down,
it's the exact same thing again,

2
00:00:03.239 --> 00:00:07.300
mystery script from the internet, save it
onto your computer, lets edit it, right?

3
00:00:07.300 --> 00:00:11.599
Fantastic, all right, it's of the exact
same style as the previous one, except for

4
00:00:11.599 --> 00:00:13.890
now we're gonna learn some more commands.

5
00:00:13.890 --> 00:00:18.200
I know your brian's probably feeling okay,
how many of these do we need to learn?

6
00:00:18.200 --> 00:00:21.570
Don't worry, there's just a couple
hundred we'll get through it in a jiff!

7
00:00:21.570 --> 00:00:26.320
All right, anyway, so let's press j
to go all the way down to the bottom.

8
00:00:26.320 --> 00:00:27.950
All the way down to the delete, I mean.

9
00:00:27.950 --> 00:00:29.409
Right here, so we're at our first one.

10
00:00:29.409 --> 00:00:34.610
I'm gonna center it again by using zz,
and to delete a line, just press dd.

11
00:00:35.940 --> 00:00:36.640
Awesome, right?

12
00:00:36.640 --> 00:00:37.500
So, let's do that again.

13
00:00:37.500 --> 00:00:39.840
dd, dd, dd.

14
00:00:39.840 --> 00:00:42.480
Now I actually don't even use
dd To tell you the truth.

15
00:00:42.480 --> 00:00:44.600
I use something a little
different to delete lines.

16
00:00:44.600 --> 00:00:47.850
So press u to undo your last action.

17
00:00:47.850 --> 00:00:50.490
Yeah u for undo,
hopefully this is fairly pneumonic.

18
00:00:50.490 --> 00:00:52.070
It feels pretty easy.

19
00:00:52.070 --> 00:00:56.342
So let's go right back to that,
so what I actually like to do,

20
00:00:56.342 --> 00:00:58.570
is I like to do, shift vd, why?

21
00:00:58.570 --> 00:01:00.230
Cuz I can do it super fast.

22
00:01:00.230 --> 00:01:02.230
I don't know, I just love it,
it feels fantastic.

23
00:01:03.360 --> 00:01:06.460
I like doing that but
you just choose what you want to do, and

24
00:01:06.460 --> 00:01:08.830
what really works with you.

25
00:01:08.830 --> 00:01:11.610
Right, so now we're gonna talk
about yanking, all right?

26
00:01:11.610 --> 00:01:15.519
Yanking is also a term that probably makes
no sense, and if you're from Australia,

27
00:01:15.519 --> 00:01:17.820
I think that's what you call Americans.

28
00:01:17.820 --> 00:01:21.282
I've heard rumors that were
called the yank somewhere,

29
00:01:21.282 --> 00:01:24.382
but either way, or
maybe that's somebody else but

30
00:01:24.382 --> 00:01:28.380
either way yanking simply means
to copy it to a location.

31
00:01:28.380 --> 00:01:30.606
Now a yank is not like copying and

32
00:01:30.606 --> 00:01:36.146
pasting meaning it will not go to your
system clipboard unless if you tell it to.

33
00:01:36.146 --> 00:01:38.534
So I'm gonna go like this yy.

34
00:01:38.534 --> 00:01:42.212
Now notice something,
when I press that first y,

35
00:01:42.212 --> 00:01:47.970
down here in the corner, you can
actually see the motion being started.

36
00:01:47.970 --> 00:01:49.290
So if I were to type something else,

37
00:01:49.290 --> 00:01:52.170
it would actually keep that string
of characters getting longer.

38
00:01:52.170 --> 00:01:55.136
So when I press it again,
I've officially yanked.

39
00:01:55.136 --> 00:01:56.980
Now we're gonna paste it.

40
00:01:56.980 --> 00:02:00.606
So said yanking and
paste below yy, and then p.

41
00:02:00.606 --> 00:02:04.576
p means paste, paste from this
area that we've saved it to.

42
00:02:04.576 --> 00:02:08.241
So when I press p,
notice that it pastes it but

43
00:02:08.241 --> 00:02:13.470
one line down below and
my cursor has moved down below.

44
00:02:13.470 --> 00:02:16.081
So let's do it again to the next one,
press j to go down, and

45
00:02:16.081 --> 00:02:17.090
let's yank it again.

46
00:02:17.090 --> 00:02:19.980
But this time, let's yank it and
press Shift p.

47
00:02:19.980 --> 00:02:24.880
I'm going to play us yy and
then shift p, look at what happened.

48
00:02:24.880 --> 00:02:28.602
I know this doesn't feel that
revolutionary, but trust me, the more you

49
00:02:28.602 --> 00:02:33.410
use vim, the more you're gonna appreciate
the difference between p and capital P.

50
00:02:33.410 --> 00:02:38.320
I pasted it, but the line that I was on,
got shifted downwards.

51
00:02:38.320 --> 00:02:42.260
And what I copied was put
on that line instead.

52
00:02:42.260 --> 00:02:45.817
This is actually incredible I know,
[LAUGH] It doesn't feel incredible, but

53
00:02:45.817 --> 00:02:47.410
I'm just telling you.

54
00:02:47.410 --> 00:02:49.282
This is incredible I know Aah!

55
00:02:49.282 --> 00:02:52.350
Anyway, so just experience it, enjoy it.

56
00:02:52.350 --> 00:02:55.270
Alright, so let's go down to
the next part, visual mode.

57
00:02:55.270 --> 00:02:58.788
I've mentioned it a few times this
is shift and moving around and

58
00:02:58.788 --> 00:03:00.691
being able to highlight, right?

59
00:03:00.691 --> 00:03:04.230
So I'm gonna zz again to put it here.

60
00:03:04.230 --> 00:03:08.849
This line simply just says press v,
so move somewhere into the line and

61
00:03:08.849 --> 00:03:09.800
just press v.

62
00:03:09.800 --> 00:03:12.001
At this point, once you've done that,

63
00:03:12.001 --> 00:03:15.060
you'll notice right away that
down low it says visual.

64
00:03:16.150 --> 00:03:19.850
This means that you're in visual mode.

65
00:03:19.850 --> 00:03:23.360
Now let's press w, Let's press j.

66
00:03:23.360 --> 00:03:24.804
Notice something about it,

67
00:03:24.804 --> 00:03:28.210
it highlights from where you
started to where your cursor is.

68
00:03:28.210 --> 00:03:31.710
So as I move around,
it just keeps highlighting.

69
00:03:31.710 --> 00:03:32.970
Interesting, right?

70
00:03:32.970 --> 00:03:34.690
Alright, so you can press Esc to stop.

71
00:03:36.520 --> 00:03:40.364
Or you can press Ctrl+c or control open
bracket, you can press any of those and

72
00:03:40.364 --> 00:03:42.870
it will take you out of visual mode.

73
00:03:42.870 --> 00:03:44.870
Awesome, so now let's do the next one.

74
00:03:44.870 --> 00:03:49.090
The next one down here says,
let's use visual line mode.

75
00:03:49.090 --> 00:03:52.370
And so visual line mode is slightly
different than visual mode.

76
00:03:52.370 --> 00:03:55.820
Visual line mode allows you to
highlight a whole line at once.

77
00:03:55.820 --> 00:03:59.559
So when I press shift+v,
it will highlight everything by the way,

78
00:03:59.559 --> 00:04:02.260
I'm still using just
simply j to move downward.

79
00:04:02.260 --> 00:04:05.430
So everyone you should be
using j to move downwards.

80
00:04:05.430 --> 00:04:10.500
Notice that when I use j now,
it just highlights the whole line, right?

81
00:04:10.500 --> 00:04:12.370
So now let's combine some things.

82
00:04:12.370 --> 00:04:14.720
Okay, so
now we're gonna get a little bit rowdy.

83
00:04:14.720 --> 00:04:16.550
I hope everyone's feeling ready here.

84
00:04:16.550 --> 00:04:21.820
So let's go down, all right, press zz,
re put ourselves into the middle.

85
00:04:21.820 --> 00:04:25.708
And now let's highlight this line
with shift+v and then press y.

86
00:04:25.708 --> 00:04:30.540
All right, here we go shift+v,
the line is highlighted.

87
00:04:30.540 --> 00:04:34.130
Now I'm gonna press y,
it stopped being highlighted.

88
00:04:34.130 --> 00:04:36.390
Why, what happened?

89
00:04:36.390 --> 00:04:38.302
&gt;&gt; Just this copy, so
that we can then paste.

90
00:04:38.302 --> 00:04:40.080
&gt;&gt; That's right.

91
00:04:40.080 --> 00:04:44.110
You yanked it, so your visual region.

92
00:04:44.110 --> 00:04:45.837
So now let's press p.

93
00:04:45.837 --> 00:04:47.680
Look what happened.

94
00:04:47.680 --> 00:04:52.577
We just yanked that line using capital
V than why we're now combining two

95
00:04:52.577 --> 00:04:54.350
things into one.

96
00:04:54.350 --> 00:04:56.950
This is where you should start seeing,
okay?

97
00:04:56.950 --> 00:05:00.607
There's an expressive nature
to these motions and commands,

98
00:05:00.607 --> 00:05:03.920
that actually you can kind
of combo them together.

99
00:05:03.920 --> 00:05:08.460
It's kind of Mortal Kombat,
just without fighting video games or Gore.

100
00:05:08.460 --> 00:05:10.940
So its effectively the exact same thing.

101
00:05:10.940 --> 00:05:15.740
So let's go down low, let's move
somewhere in the middle of this.

102
00:05:15.740 --> 00:05:19.419
Let's press v,
move forward again with w, and press y.

103
00:05:19.419 --> 00:05:23.196
Now you don't have to select
the exact same region I did, but

104
00:05:23.196 --> 00:05:24.760
just select something.

105
00:05:24.760 --> 00:05:27.338
All right, so I'm gonna like this, y.

106
00:05:27.338 --> 00:05:31.960
So if I press paste now,
what do you think's gonna happen?

107
00:05:31.960 --> 00:05:34.871
Do you think it's gonna
move my content down, and

108
00:05:34.871 --> 00:05:37.660
then put in a new line with that content?

109
00:05:37.660 --> 00:05:39.440
Well, I'd say you're right,
except for you're wrong.

110
00:05:39.440 --> 00:05:42.930
So because I didn't select a full line,

111
00:05:42.930 --> 00:05:48.340
it knows that I'm only selecting
a small non line region.

112
00:05:48.340 --> 00:05:52.914
And so using visual mode causes both
something that's incredible and

113
00:05:52.914 --> 00:05:55.240
really annoying sometimes.

114
00:05:55.240 --> 00:05:57.930
So you kinda have to know how
to use it and what happens.

115
00:05:57.930 --> 00:06:00.480
So there's a little bit of state
you'll have to keep in your head.

116
00:06:00.480 --> 00:06:03.926
But for the most part that happens,
you can press u to undo it, awesome.

117
00:06:03.926 --> 00:06:08.192
All right, so let's do the exact
same thing, let's do with d,

118
00:06:08.192 --> 00:06:13.370
I kinda showed this earlier, you can
shift+v and do d, and it will take it.

119
00:06:13.370 --> 00:06:15.300
Now watch what happens
when I press y though.

120
00:06:16.410 --> 00:06:19.930
It actually just pasted what I deleted.

121
00:06:19.930 --> 00:06:24.510
So in vim when you delete, you also yank.

122
00:06:24.510 --> 00:06:27.260
Now this can be very, very exciting.

123
00:06:27.260 --> 00:06:30.650
Okay, I don't know about you, but
this is where the magic starts happening.

124
00:06:30.650 --> 00:06:31.770
Okay, we're almost there.

125
00:06:31.770 --> 00:06:32.740
We're getting there.

126
00:06:32.740 --> 00:06:34.415
And so that means as you delete,

127
00:06:34.415 --> 00:06:37.641
you can move code instead of having
to be like okay the cop you,

128
00:06:37.641 --> 00:06:41.160
I need to now delete you,
I now need to move you somewhere else.

129
00:06:41.160 --> 00:06:44.090
Now I need to paste you,
instead you just go delete, paste.

130
00:06:44.090 --> 00:06:46.710
So let's do the same thing but
let's press d.

131
00:06:46.710 --> 00:06:51.010
Notice when I use visual mode,
not visual line mode, but visual mode.

132
00:06:51.010 --> 00:06:54.430
I delete that contents within the line.

133
00:06:54.430 --> 00:06:57.696
And then I press p and
p will read paste it back in,

134
00:06:57.696 --> 00:07:00.570
but it pasted back in one thing over.

135
00:07:00.570 --> 00:07:04.670
And this is because of how the cursor
position works and what happened.

136
00:07:04.670 --> 00:07:07.343
So if I were to undo that and
press with capital P,

137
00:07:07.343 --> 00:07:10.990
notice that the line is exactly
back to the way it was.

138
00:07:10.990 --> 00:07:14.537
It actually paste into the correct
position, we deleted it,

139
00:07:14.537 --> 00:07:15.930
we put it back in.

140
00:07:15.930 --> 00:07:20.190
Now, I don't often use visual mode,
visual line mode I use from time to time.

141
00:07:20.190 --> 00:07:23.400
Visual mode is fairly often.

142
00:07:23.400 --> 00:07:25.940
There's only a couple reasons why use it.

143
00:07:25.940 --> 00:07:31.174
All right, so let's talk about the
relationship between yanking and deleting.

144
00:07:31.174 --> 00:07:36.334
So, you at some point in the future
can type in help read but for

145
00:07:36.334 --> 00:07:41.308
now, just as I had been holding ireg for
command register.

146
00:07:41.308 --> 00:07:43.760
when you do that, look at what we see.

147
00:07:43.760 --> 00:07:48.370
You see a lot of things right?

148
00:07:48.370 --> 00:07:53.270
But remember something that at one point,
we did do a lot of deleting right?

149
00:07:53.270 --> 00:07:56.740
We did some deleting of the lines.

150
00:07:56.740 --> 00:08:00.990
I also deleted some other stuff,
I did a vd on that whole highlighted line.

151
00:08:00.990 --> 00:08:06.040
Notice that we have our delete history,
in here for us automatically.

152
00:08:07.300 --> 00:08:12.370
And also notice that the last thing that
I yanked or deleted is always at the top.

153
00:08:12.370 --> 00:08:15.727
So we're gonna get into registers later,
but for now,

154
00:08:15.727 --> 00:08:17.890
I want you to know they exist.

155
00:08:17.890 --> 00:08:22.940
And they automatically keep track of the
things you delete and the things you yank.

156
00:08:22.940 --> 00:08:25.118
Now if I were to,
let's do a little exercise and

157
00:08:25.118 --> 00:08:26.650
kinda see how they change stuff.

158
00:08:26.650 --> 00:08:30.536
So try to keep what you did in your head
or look at my screen and try to keep that

159
00:08:30.536 --> 00:08:34.579
in you head what I've done, and
let's do a couple little exercises, okay?

160
00:08:34.579 --> 00:08:38.969
So press escape, to leave that command,
and let's go down here and

161
00:08:38.969 --> 00:08:41.140
let's yank this line.

162
00:08:41.140 --> 00:08:43.960
So we'll do a yy.

163
00:08:45.640 --> 00:08:50.520
Now, let's relook at the registers :reg.

164
00:08:50.520 --> 00:08:52.480
Notice that only two lines have changed.

165
00:08:54.410 --> 00:08:57.837
The one that starts with a double quotes,
which is up here at the top, so

166
00:08:57.837 --> 00:09:01.770
double quotes double quotes and
the other one double quotes, zero.

167
00:09:01.770 --> 00:09:03.600
Those are the only two that changed.

168
00:09:03.600 --> 00:09:04.410
So let's try something.

169
00:09:04.410 --> 00:09:06.140
Let's do a little bit of playing around.

170
00:09:06.140 --> 00:09:07.790
Let's close this down.

171
00:09:07.790 --> 00:09:11.190
And let's paste this line.

172
00:09:11.190 --> 00:09:14.712
Let's work all the way over to the line,
press I, and

173
00:09:14.712 --> 00:09:18.880
let's just type in something,
just doesn't really matter.

174
00:09:18.880 --> 00:09:21.890
Just type in whatever,
press Esc, Ctrl+C or

175
00:09:21.890 --> 00:09:26.520
Ctrl open bracket to leave it,
and then let's re yy it.

176
00:09:26.520 --> 00:09:31.310
Now, we know that registers
keep track of history, right?

177
00:09:31.310 --> 00:09:32.810
So let's relook at the registers.

178
00:09:32.810 --> 00:09:33.750
Let's see what happened.

179
00:09:35.350 --> 00:09:38.698
Okay, so it changed, but probably not in
the way you were expecting, you're well,

180
00:09:38.698 --> 00:09:41.270
hey, it should have been
keeping track of history.

181
00:09:41.270 --> 00:09:43.540
Why didn't it?

182
00:09:43.540 --> 00:09:47.850
So instead of telling you the answer,
let's explore just a little bit more.

183
00:09:47.850 --> 00:09:53.170
So let's leave this you can use Ctrl+C,
you can use Esc, you can use whatever.

184
00:09:53.170 --> 00:09:55.810
So let's delete this line instead.

185
00:09:55.810 --> 00:09:57.409
Now let's look at the registers.

186
00:09:58.610 --> 00:10:02.400
So I'm gonna press colon, and then you can
just press up to get your last command.

187
00:10:02.400 --> 00:10:06.660
Or you can type in reg to get it also
has a little bit of like fuzzing on it.

188
00:10:06.660 --> 00:10:08.886
So if you just type an r and
then press up,

189
00:10:08.886 --> 00:10:13.290
it can also give you other commands that
you've typed, with the same meaning.

190
00:10:13.290 --> 00:10:15.010
So I'm just gonna do :reg.

191
00:10:16.450 --> 00:10:17.367
Now let's look at it.
Okay, so

192
00:10:17.367 --> 00:10:21.070
we do see that line I just deleted,
but now we see it three times.

193
00:10:21.070 --> 00:10:23.910
And all the other content
got shifted down.

194
00:10:23.910 --> 00:10:26.413
In other words,
yanks will be preserved for

195
00:10:26.413 --> 00:10:28.783
only one register your zeroth register,

196
00:10:28.783 --> 00:10:33.400
whereas deletes will be kept in order in
history all the way down to the ninth one.

197
00:10:33.400 --> 00:10:38.345
We were able to kinda deduce what happened
as opposed to reading the manual,

198
00:10:38.345 --> 00:10:40.600
and I love not reading the manual.

199
00:10:40.600 --> 00:10:41.890
So this is fantastic.

200
00:10:41.890 --> 00:10:43.600
We don't even have to
learn anything by reading.

201
00:10:43.600 --> 00:10:45.560
We just kinda discovered how it works.

202
00:10:45.560 --> 00:10:46.700
This is awesome.

203
00:10:46.700 --> 00:10:49.550
Right?
So how often do I use this stuff?

204
00:10:49.550 --> 00:10:52.666
Virtually never, and
I can show why later, but for

205
00:10:52.666 --> 00:10:57.680
now I don't use the kinda those implicit
movements of the registers ever.

206
00:10:57.680 --> 00:11:02.274
And one fun little fact, when you press p,
what you're actually doing is copying

207
00:11:02.274 --> 00:11:06.471
the contents from the double quotes
register or your implicit register and

208
00:11:06.471 --> 00:11:08.410
putting it into your programme.

209
00:11:08.410 --> 00:11:10.810
So that's kind of what is happening.

210
00:11:10.810 --> 00:11:13.500
All right, so let's leave that, awesome.

211
00:11:13.500 --> 00:11:16.677
Now we're gonna quit,
classic conundrum you press :q, and

212
00:11:16.677 --> 00:11:19.340
it says, my goodness, you can't do that.

213
00:11:19.340 --> 00:11:20.138
So this time,

214
00:11:20.138 --> 00:11:25.270
I'm gonna write quit it because it just
feels right to do that at least once.

215
00:11:25.270 --> 00:11:28.550
All right, so I know this has been for
those that are familiar with him.

216
00:11:28.550 --> 00:11:30.281
This might be a little bit dry, but

217
00:11:30.281 --> 00:11:33.160
you might have just learned
something about registers.

218
00:11:33.160 --> 00:11:37.616
So I'm gonna keep on doing this style of
learning, where I'm gonna keep on calling

219
00:11:37.616 --> 00:11:41.120
into a more complex feature,
and try to bring it in slowly.

220
00:11:41.120 --> 00:11:42.930
So that way, you know it exists.

221
00:11:42.930 --> 00:11:47.171
You may not know what a register is still,
you may have no idea why it's happening,

222
00:11:47.171 --> 00:11:49.210
but you at least know two things.

223
00:11:49.210 --> 00:11:52.282
You can yank and paste,
it you can delete and paste it, and

224
00:11:52.282 --> 00:11:54.900
there is a list of your history somewhere.

225
00:11:54.900 --> 00:11:57.810
You may not know remember
the command perfectly fine.

226
00:11:57.810 --> 00:12:00.030
So let's go to insert.

227
00:12:00.030 --> 00:12:03.000
Now you're probably thinking insert,
it's just I right?

228
00:12:05.292 --> 00:12:08.650
No, there's a lot of ways
to go into insert mode.

229
00:12:08.650 --> 00:12:10.150
And it's quite fantastic.

230
00:12:10.150 --> 00:12:12.519
In fact, this is actually one
of my favorite things about vim,

231
00:12:12.519 --> 00:12:14.700
is how many different ways
you can go into insert mode.

232
00:12:14.700 --> 00:12:17.803
I know, this just a sounding ridic,
as I say it out loud,

233
00:12:17.803 --> 00:12:20.140
I'm I really saying this out loud?

234
00:12:20.140 --> 00:12:21.750
Yes, I am.

235
00:12:21.750 --> 00:12:22.800
I am saying this out loud.

236
00:12:22.800 --> 00:12:26.260
Either way, anyone, any questions, or
is this pretty straight forward still?

237
00:12:26.260 --> 00:12:29.850
&gt;&gt; We were grabbing snippets with
visual not visual line mode.

238
00:12:29.850 --> 00:12:32.774
&gt;&gt; Yeah.
&gt;&gt; And do you know any cool shortcuts to

239
00:12:32.774 --> 00:12:37.950
drop that onto the next line without,
new line, Esc+paste?

240
00:12:37.950 --> 00:12:40.856
&gt;&gt; No.
As of right now I don't, but,

241
00:12:40.856 --> 00:12:43.130
we can make one.

242
00:12:43.130 --> 00:12:47.010
How about this one, when I start
doing remaps, let's do it together.

243
00:12:47.010 --> 00:12:47.510
Sounds good?

244
00:12:48.520 --> 00:12:49.730
Awesome, we'll make something
that makes it work.

245
00:12:49.730 --> 00:12:53.469
Cuz yes, that's actually a really
great point is, I don't like that,

246
00:12:53.469 --> 00:12:56.440
how can I change Vim to operate
the way I want it to be?

247
00:12:56.440 --> 00:12:59.240
I've said this from the beginning,
I'll keep saying it.

248
00:12:59.240 --> 00:13:00.731
Vim is your editor, your way.

249
00:13:00.731 --> 00:13:06.060
It has some defaults, but
there's very few and the default is ugly.

250
00:13:06.060 --> 00:13:07.840
Let's make it pretty for us.

251
00:13:07.840 --> 00:13:11.232
Effectively, I was asked,
if I highlight with v not capital V.

252
00:13:11.232 --> 00:13:16.106
So just going into visual mode, not
visual line mode, and I yank a portion,

253
00:13:16.106 --> 00:13:17.945
is there a way we can make it?

254
00:13:17.945 --> 00:13:21.500
So when I press p,
it doesn't paste in that line, but

255
00:13:21.500 --> 00:13:25.134
instead creates a new line and
then paste the content.

256
00:13:25.134 --> 00:13:27.470
The answer is both yes and no.

257
00:13:27.470 --> 00:13:30.170
We can make them do things we want.

258
00:13:30.170 --> 00:13:33.790
But the default behavior
does not allow for that.

259
00:13:33.790 --> 00:13:34.780
And so we'll get there.

260
00:13:34.780 --> 00:13:35.810
We'll do that here soon.

261
00:13:35.810 --> 00:13:39.290
He is responsible for trying to
remind me to remember to do that.

262
00:13:39.290 --> 00:13:42.320
We'll see if we can work together and
make this happen.

263
00:13:42.320 --> 00:13:43.760
You also sound a little bit more advanced.

264
00:13:43.760 --> 00:13:46.380
So, hopefully this intro
stuff isn't too boring.

265
00:13:46.380 --> 00:13:48.520
Alright, so
let's move on to the next part.

266
00:13:48.520 --> 00:13:49.030
Here we go.

