WEBVTT

1
00:00:00.130 --> 00:00:04.618
So I feel like we're making them pretty
good at this point, yes, FZF is pretty

2
00:00:04.618 --> 00:00:09.242
awesome, because it works in both in the
Neovim, so I use telescope like I said,

3
00:00:09.242 --> 00:00:13.480
that's a Neovim only one, but
FZF is pretty darn awesome.

4
00:00:13.480 --> 00:00:18.124
Quickfix is something that I never
really tried to learn about, honestly,

5
00:00:18.124 --> 00:00:22.114
I'd use like, say ripgrep,if
you're familiar with ripgrep,

6
00:00:22.114 --> 00:00:26.683
it is an incredible utility to be able
to search like a bajillion files, and

7
00:00:26.683 --> 00:00:29.030
just what feels like instantaneous.

8
00:00:29.030 --> 00:00:34.284
It's fantastic, it's written rust by
the way, so you can tell people it's rust,

9
00:00:34.284 --> 00:00:39.094
really easy to brag on people in plus,
you get to have the three circles like so

10
00:00:39.094 --> 00:00:42.128
if you're using vim with
ripgrep on Arch Linux,

11
00:00:42.128 --> 00:00:45.970
you are the actual coolest
person that has ever existed.

12
00:00:45.970 --> 00:00:50.928
So just remember that it's available,
you can use it, so ripgrep is awesome,

13
00:00:50.928 --> 00:00:54.184
but here's the problem,
when i was using rip grep,

14
00:00:54.184 --> 00:00:59.550
I didn't realize that FZF would pipe
ripgrep's results into a quickfix list.

15
00:00:59.550 --> 00:01:02.320
So I'ld always search it, and
then i'd close the quickfix list,

16
00:01:02.320 --> 00:01:03.755
and then I couldn't go back to it,

17
00:01:03.755 --> 00:01:06.390
I didn't understand what it was,
I never really read into it.

18
00:01:06.390 --> 00:01:09.891
And it's kind like the cycle that I have
for three months as I can, this feels

19
00:01:09.891 --> 00:01:13.790
funny, like it never really clicked in
my head like, why is this happening?

20
00:01:13.790 --> 00:01:15.950
What is this list that keeps popping up?

21
00:01:15.950 --> 00:01:20.106
And when I close it, it goes away,
this just doesn't feel right,

22
00:01:20.106 --> 00:01:23.744
and so let me show you,
if you have ripgrep installed, and

23
00:01:23.744 --> 00:01:27.704
you have FZF, you can also use Rg,
so this is ripgrep, right?

24
00:01:27.704 --> 00:01:29.825
So I can search up the word SOCK, right?

25
00:01:29.825 --> 00:01:33.352
And it will actually show you,
now we have a ripgrep result,

26
00:01:33.352 --> 00:01:37.983
piped into an FZF result, so now I can
start doing things, I can start typing and

27
00:01:37.983 --> 00:01:40.530
get a single solution out, awesome.

28
00:01:40.530 --> 00:01:43.080
But if I press Enter, it's gone, right?

29
00:01:43.080 --> 00:01:47.939
So I want to say, send all four results,
to a quicktfix list, one thing you can do

30
00:01:47.939 --> 00:01:52.600
with say FZF, is you can press tab,
notice that I get that little extra item.

31
00:01:52.600 --> 00:01:55.692
I can go tab, prev tab, prev, and
I can go through and do them all,

32
00:01:55.692 --> 00:01:57.792
you can actually select them all at once,
but

33
00:01:57.792 --> 00:02:01.850
I forgot I don't use this utility anymore,
but I forgot what it is.

34
00:02:01.850 --> 00:02:05.421
And if I hit Enter, I now have what
is referred to as a quickfix list,

35
00:02:05.421 --> 00:02:08.870
you can tell it's a quickfix list,
by this light text down here,

36
00:02:08.870 --> 00:02:11.110
that says the word quickfix.

37
00:02:11.110 --> 00:02:15.399
We'll go over more of this soon,
it's available in FZF, but

38
00:02:15.399 --> 00:02:18.930
let's do it without FZF, sounds good?

39
00:02:18.930 --> 00:02:22.080
So let's use grep instead, so
vim does come with grep, it's gonna use

40
00:02:22.080 --> 00:02:25.720
grep underneath the hood, and we're gonna
find it, so let's go into a command.

41
00:02:25.720 --> 00:02:29.496
So this will work on any system by the
way, so if you remote into a system, and

42
00:02:29.496 --> 00:02:34.350
it doesn't have any plugins installed,
this just works, we're gonna type in grep.

43
00:02:34.350 --> 00:02:35.486
Then what do we want to find?

44
00:02:35.486 --> 00:02:37.598
Let's do the same thing SOCKET, right?

45
00:02:37.598 --> 00:02:42.613
We're inside of the vim nap playground,
and we wanna search every single file,

46
00:02:42.613 --> 00:02:45.725
and everything that starts with say .c,
right?

47
00:02:45.725 --> 00:02:49.321
So every single folder all that,
it's gonna return to us three results,

48
00:02:49.321 --> 00:02:52.106
awesome, when I hit Enter,
it navigates us to a result,

49
00:02:52.106 --> 00:02:55.412
if you didn't wanna navigate to
that result, you could use bang and

50
00:02:55.412 --> 00:02:58.800
it would silence it, but
right now we've now navigated to a result.

51
00:02:59.980 --> 00:03:01.090
What do we do here?

52
00:03:01.090 --> 00:03:03.660
How do we get those other three results?

53
00:03:03.660 --> 00:03:08.217
I don't know, well, they're in
a quickfix list, you can do copen, so

54
00:03:08.217 --> 00:03:11.729
if you type the command copen,
I keep playing this way,

55
00:03:11.729 --> 00:03:16.510
if you type the command copen, and
press Enter, it will open it back up, and

56
00:03:16.510 --> 00:03:22.720
it'll even highlight what command or what
quickfix item you're currently looking at.

57
00:03:22.720 --> 00:03:28.690
So if I type in cnext, by the way c is for
quick, I know, mnemonics, right?

58
00:03:28.690 --> 00:03:32.823
Cnext it will move to the next one,
notice that my highlighted line has moved

59
00:03:32.823 --> 00:03:37.019
forward, and I've changed files, if I
do it again it will go to the next one,

60
00:03:37.019 --> 00:03:41.310
if I do it again it's gonna say hey,
there's no more items in here.

61
00:03:41.310 --> 00:03:44.550
I bet you can guess what goes backwards,
see prev, right?

62
00:03:44.550 --> 00:03:49.471
Awesome, we can walk back and forth on
this quickfix list, and the best part,

63
00:03:49.471 --> 00:03:54.319
is I can close that quick fix window, and
I can walk through it and you can see,

64
00:03:54.319 --> 00:03:56.107
3 of 3, 2 of 3, 1 of 3,

65
00:03:56.107 --> 00:04:00.620
you can actually watch yourself
walk through this quick fix list.

66
00:04:00.620 --> 00:04:05.053
This is awesome, but do you want to have
to press all these buttons to be able to

67
00:04:05.053 --> 00:04:07.810
open up a navigated quickfix window?

68
00:04:07.810 --> 00:04:10.150
No, you don't, so what do we do?

69
00:04:10.150 --> 00:04:14.222
If I say remap it one more time, I swear,
so let's remap it one more time,

70
00:04:14.222 --> 00:04:17.772
let's open up our vimrc,
now notice we're going a lot faster,

71
00:04:17.772 --> 00:04:21.500
I'm assuming everyone's starting
to have a lot more knowledge.

72
00:04:21.500 --> 00:04:26.311
I'm not explaining as much as I was, so
if you're having trouble following along,

73
00:04:26.311 --> 00:04:30.038
you might be missing some context
from earlier, I'm sorry, but

74
00:04:30.038 --> 00:04:33.724
we're gonna try pick up the pace so
we can cover a lot of content.

75
00:04:33.724 --> 00:04:36.697
Right, so I'm gonna go all
the way down to the bottom,

76
00:04:36.697 --> 00:04:39.994
you could have pressed j to get
all the way down to the bottom,

77
00:04:39.994 --> 00:04:43.460
I'm gonna highlight this,
and let's use Ctrl j.

78
00:04:43.460 --> 00:04:46.931
I want Ctrl j + k, to be able to
go back and forth on cnext cprev,

79
00:04:46.931 --> 00:04:51.516
you can choose what you want, whatever
works for you remember, this is about you,

80
00:04:51.516 --> 00:04:53.438
what works for you think about it.

81
00:04:53.438 --> 00:04:57.929
Maybe you wanna use space cn for
quickfixed next, right?

82
00:04:57.929 --> 00:05:01.201
That actually kind of is numerically
equivalent to Colin cnext,

83
00:05:01.201 --> 00:05:05.243
you can choose what you want, I'm just
gonna choose Ctrl j + k, because for me,

84
00:05:05.243 --> 00:05:09.601
it's on these two fingers, and it's right
next to Ctrl, so I literally just do this.

85
00:05:09.601 --> 00:05:13.477
It's very convenient for me,
cuz I use Dvorak, by the way,

86
00:05:13.477 --> 00:05:18.417
used Dvorak remember, it's not on this
list, but it should be, all right,

87
00:05:18.417 --> 00:05:20.628
so I'm going to do cnext, right?

88
00:05:20.628 --> 00:05:25.252
This might be backwards, I can't remember,
and then let's use sk for this,

89
00:05:25.252 --> 00:05:29.610
let's do prev, there we go, so
now I can navigate back and forth of that.

90
00:05:29.610 --> 00:05:33.406
So I'm gonna close this,
I'm gonna reopen up then here,

91
00:05:33.406 --> 00:05:37.821
we are gonna do the same grep search,
I'm gonna type in gr press Up,

92
00:05:37.821 --> 00:05:41.600
it will autofill my last
command that looks like it.

93
00:05:41.600 --> 00:05:45.110
When I press Enter, get that information,
it's gonna navigate me to the first one,

94
00:05:45.110 --> 00:05:48.310
so I should be able to press, okay good,
okay got them perfectly backwards.

95
00:05:48.310 --> 00:05:51.997
K goes, the way I didn't want it to go,
so I can go j, j to go forward, k,

96
00:05:51.997 --> 00:05:55.650
k to go backwards, and
just walk forwards and back through them.

97
00:05:55.650 --> 00:05:59.707
So if you're doing a large set of actions
or looking at a large set of changes,

98
00:05:59.707 --> 00:06:01.393
this is a really awesome thing,

99
00:06:01.393 --> 00:06:04.719
to start getting used to cuz you
can do quite a bit of stuff here.

100
00:06:04.719 --> 00:06:09.327
And on top of that, it can get way
more powerful even though we're not

101
00:06:09.327 --> 00:06:12.585
going to do it,
there's something called cdo,

102
00:06:12.585 --> 00:06:18.050
cdo allows you to execute a command,
across all of your quickfix list.

103
00:06:18.050 --> 00:06:22.947
So you could theoretically do a Find and
Replace, you could do a macro, you could

104
00:06:22.947 --> 00:06:28.059
delete a line, you could do whatever you
want, across the set of quickfix lists, or

105
00:06:28.059 --> 00:06:33.119
a set of quickfix results, and then have
them all saved by executing say write all.

106
00:06:33.119 --> 00:06:38.036
And now you'd write all your changes, and
so this is like, this kind of the way that

107
00:06:38.036 --> 00:06:41.689
vim does, kind of larger project wide,
Find and Replaces and

108
00:06:41.689 --> 00:06:46.279
things like that, as you can pipe things
to these lists, and work with them.

109
00:06:46.279 --> 00:06:50.258
You can do macros, regex search and
replaces, it's very awesome,

110
00:06:50.258 --> 00:06:53.616
I am a huge fan of quickfix list,
and the best part is that,

111
00:06:53.616 --> 00:06:56.907
I didn't really use them that
much until just recently,

112
00:06:56.907 --> 00:07:01.590
and now I'm just trying to find a way
to pipe everything to a quickfix list.

113
00:07:01.590 --> 00:07:04.620
They are incredible,
absolutely incredible.

