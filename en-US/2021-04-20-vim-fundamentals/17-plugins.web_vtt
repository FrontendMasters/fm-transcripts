WEBVTT

1
00:00:00.000 --> 00:00:01.939
All right, let's move on.

2
00:00:01.939 --> 00:00:04.032
Let's install some plugins, okay?

3
00:00:04.032 --> 00:00:06.647
So let's start making it better.

4
00:00:06.647 --> 00:00:09.810
So you have to have a plug in manager,
right?

5
00:00:09.810 --> 00:00:12.905
That's how VS code really works
underneath the hood is that,

6
00:00:12.905 --> 00:00:15.999
likely a lot of the plugins
you're installing are just GitHub

7
00:00:15.999 --> 00:00:18.830
projects in which
are shaped a certain way.

8
00:00:18.830 --> 00:00:23.278
Such that VS Code knows how to download
them, put them in a special spot, and

9
00:00:23.278 --> 00:00:28.004
then run some sort of source on it that
will make run really quickly and smoothly,

10
00:00:28.004 --> 00:00:28.510
right?

11
00:00:28.510 --> 00:00:31.590
So that's kind of how plugins work.

12
00:00:31.590 --> 00:00:35.900
That's same thing here with Vim,
it's just the best way to do that.

13
00:00:35.900 --> 00:00:40.940
And the nice part is that,
the demo that we've been kind of lightly

14
00:00:40.940 --> 00:00:45.364
writing is also the same code
that is used to make plugins.

15
00:00:45.364 --> 00:00:47.486
If you're using Neovim you can use Lua,

16
00:00:47.486 --> 00:00:50.743
which Lua is that sweet Brazilian
language which means moon.

17
00:00:50.743 --> 00:00:54.177
But it has one based indexing that
kind of hurts a little bit, and

18
00:00:54.177 --> 00:00:56.770
it does have a type
script to Lua converter.

19
00:00:56.770 --> 00:01:01.100
So you can have types and still have
a sweet native plugin for Neovim.

20
00:01:01.100 --> 00:01:03.378
I haven't played with it yet,
I'm gonna be playing with it here shortly,

21
00:01:03.378 --> 00:01:04.110
very excited about it.

22
00:01:04.110 --> 00:01:05.869
I want to see how it goes.

23
00:01:05.869 --> 00:01:12.139
So, before we can do anything,
we have to get the plugin manager, right?

24
00:01:12.139 --> 00:01:13.891
So let's follow this link right here,

25
00:01:13.891 --> 00:01:16.770
that says plug if you don't have
that link right in front of you.

26
00:01:16.770 --> 00:01:21.644
Go to your, that's so bright sorry
everybody, go to your search bar

27
00:01:21.644 --> 00:01:26.500
just type in Vim plug and
there you go top one it's by June gunn.

28
00:01:26.500 --> 00:01:29.329
Very cool name I might be
saying his name wrong but

29
00:01:29.329 --> 00:01:32.780
I just love the idea of condom June gunn,
and there you go.

30
00:01:32.780 --> 00:01:35.350
So you're gonna go through here you can
see all the different installing here.

31
00:01:35.350 --> 00:01:37.310
Let me make it a lot bigger so
we can see it,

32
00:01:37.310 --> 00:01:40.870
it'll be a nice plugin manager that
can download all sorts of plugins.

33
00:01:40.870 --> 00:01:46.590
The best part about plugins is that you
will just end up using GitHub for it.

34
00:01:46.590 --> 00:01:51.840
You'll just simply put the two words in
GitHub my name plus whatever plugin or

35
00:01:51.840 --> 00:01:52.580
whoever.

36
00:01:52.580 --> 00:01:55.701
So this one's June gunn Vin plugin,
if this was something to install,

37
00:01:55.701 --> 00:01:58.680
we will just simply use that and
put that in there, it's very nice.

38
00:01:58.680 --> 00:02:01.869
So let's start first with the process
of getting the plug in manager.

39
00:02:01.869 --> 00:02:05.731
We have to first download plug.vim,
now it has a bunch of options for

40
00:02:05.731 --> 00:02:08.003
you to follow you can follow any of them.

41
00:02:08.003 --> 00:02:10.499
And if you're in Neovim you
can still use the Vim1 here,

42
00:02:10.499 --> 00:02:12.382
I'm gonna use the Vim 1 myself right now.

43
00:02:12.382 --> 00:02:15.147
I'm gonna take this random script and
I'm gonna go save it and

44
00:02:15.147 --> 00:02:16.538
Vim is gonna execute it for me.

45
00:02:16.538 --> 00:02:20.952
Fantastic, that's like the fifth time I
made the joke, it's not gonna get onto me,

46
00:02:20.952 --> 00:02:25.181
anyway I'm gonna take it, I'm gonna copy
and paste it, I'm gonna press Enter,

47
00:02:25.181 --> 00:02:27.730
it's gonna go, it's gonna download it.

48
00:02:27.730 --> 00:02:32.409
And now the next time I start Vim
because it's in a special spot,

49
00:02:32.409 --> 00:02:37.930
it's going to source it and
have it ready for us to be able to run.

50
00:02:37.930 --> 00:02:42.719
We'll kind of go over what the special
spot means, but until then,

51
00:02:42.719 --> 00:02:44.680
just keep that in mind.

52
00:02:44.680 --> 00:02:46.810
There's a certain set of
spots you can have and

53
00:02:46.810 --> 00:02:50.700
a certain shape of your directories, it'll
start auto sourcing all of your stuff.

54
00:02:51.970 --> 00:02:56.970
All right, so we have that downloaded,
let's find a plugin to install.

55
00:02:56.970 --> 00:02:59.416
So we'll go down a little
bit further first, and

56
00:02:59.416 --> 00:03:03.010
we're gonna make sure we have this
ready for us to cut and paste, okay?

57
00:03:03.010 --> 00:03:05.697
We can actually do this right now in fact,
so let's go here and

58
00:03:05.697 --> 00:03:07.710
we have to do this first line.

59
00:03:07.710 --> 00:03:10.940
And so this first line will be dependent
on where you install the script.

60
00:03:10.940 --> 00:03:14.823
I did mine, right,
I'm gonna use the dot vim plugin folder,

61
00:03:14.823 --> 00:03:19.120
I'm gonna copy that,
I'm gonna go back over to my terminal.

62
00:03:19.120 --> 00:03:23.792
I'm gonna edit my vim RC, I prefer to
put it right after the sets is generally

63
00:03:23.792 --> 00:03:27.720
where I have everything,
I'm gonna paste it in.

64
00:03:27.720 --> 00:03:32.938
And then I'm gonna do the end part,
which means I will go over to N or begin

65
00:03:32.938 --> 00:03:38.090
typing end and then delete everything
inside of there, so there we go.

66
00:03:38.090 --> 00:03:42.693
We have plug begin where it will save all
the plugins at, and plug end to say okay,

67
00:03:42.693 --> 00:03:44.317
the plugin manager is done,

68
00:03:44.317 --> 00:03:47.650
go do the thing you're supposed to go do,
and there we go.

69
00:03:47.650 --> 00:03:50.260
So now we're ready for plugins.

70
00:03:50.260 --> 00:03:53.079
Hopefully everyone was able to get
the June gunn plugin for vim plug,

71
00:03:53.079 --> 00:03:54.980
I showed you how to do it.

72
00:03:54.980 --> 00:03:56.570
Awesome, I'm gonna
assume everyone's ready.

73
00:03:56.570 --> 00:04:02.030
So this is the part with Windows where I
wasn't sure how smooth it was gonna go,

74
00:04:02.030 --> 00:04:06.850
cuz I know that Windows is not Ubuntu,
and I don't Know how it works.

75
00:04:06.850 --> 00:04:10.204
I know that the slashes are different,
at that point you've confused me,

76
00:04:10.204 --> 00:04:12.940
I don't really know what's happening.

77
00:04:12.940 --> 00:04:17.470
So let's find a plugin, I wanna fuzzy find
out that's gonna work for everybody here.

78
00:04:17.470 --> 00:04:22.050
So let's use fzf, if you haven't
heard of fzf, also so bright sorry.

79
00:04:22.050 --> 00:04:26.790
It is a fuzzy finder plugin, so
I'm gonna type in fzf vim_plugin,

80
00:04:26.790 --> 00:04:29.826
I'm gonna hit Enter, and look at that.

81
00:04:29.826 --> 00:04:32.560
My goodness,
my cursors already ready to click it, and

82
00:04:32.560 --> 00:04:34.790
it's June gunn again, my goodness.

83
00:04:34.790 --> 00:04:37.050
It's like this person
makes a bunch of plugins.

84
00:04:37.050 --> 00:04:40.609
So I'm gonna click this,
we're gonna go to the GitHub page.

85
00:04:40.609 --> 00:04:43.842
I'm gonna scroll down, I'm gonna check
the installation instructions just in

86
00:04:43.842 --> 00:04:45.420
case it's something I don't expect.

87
00:04:45.420 --> 00:04:48.005
Okay, look at that, it's actually
is something I didn't expect.

88
00:04:48.005 --> 00:04:53.284
It requires two plugins,
junegunn/fzf and junegunn/fzf.vim.

89
00:04:53.284 --> 00:04:57.590
So obviously, fzf/vim must be
the simple wrapper around fzf.

90
00:04:57.590 --> 00:05:00.425
If you don't know what fzf is,
it's pretty fantastic,

91
00:05:00.425 --> 00:05:03.922
it allows you to pipe any list into it,
and then do a fuzzy find over it.

92
00:05:03.922 --> 00:05:06.621
It's pretty darn fast, it's pretty nice.

93
00:05:06.621 --> 00:05:10.030
So what I'm gonna do is,
I'm gonna highlight these two items.

94
00:05:10.030 --> 00:05:12.425
I'm going to copy it and
jump back in here,

95
00:05:12.425 --> 00:05:16.100
I'm gonna use that Shift+O to go
right into where I want it to be.

96
00:05:16.100 --> 00:05:19.610
I'm gonna use Ctrl+Shift+V,
cuz I'm pasting in a terminal.

97
00:05:19.610 --> 00:05:25.090
Paste those two in I'm going to save it,
and then I'm gonna use space Enter.

98
00:05:25.090 --> 00:05:28.665
I've now sourced my vim RC,
so at this point,

99
00:05:28.665 --> 00:05:33.170
we're already to do something with it,
but what do we do?

100
00:05:35.384 --> 00:05:38.330
You can't do anything yet, cuz you
actually haven't got the plugins yet.

101
00:05:38.330 --> 00:05:42.035
So what I'm gonna do is, I'm gonna go
down here and I'm gonna type in PL, and

102
00:05:42.035 --> 00:05:43.349
I'm going to hit Ctrl+D.

103
00:05:43.349 --> 00:05:46.833
Now notice we have a set of new
commands in here, we have Plug,

104
00:05:46.833 --> 00:05:49.119
PlugClean, PlugDiff, PlugInstall.

105
00:05:49.119 --> 00:05:52.524
PlugInstall sounds about right,
let's give it a shot.

106
00:05:52.524 --> 00:05:55.254
I'm gonna type in PlugInstall,
hit tab to auto

107
00:05:55.254 --> 00:06:00.045
complete the rest of the characters hit
Enter, and there it is, fzf and fzf.vim.

108
00:06:00.045 --> 00:06:04.631
If I were to take these two URLs right
here, or these two words right here

109
00:06:04.631 --> 00:06:08.770
effectively and paste into GitHub,
these would each be repos.

110
00:06:08.770 --> 00:06:12.189
They're just repos set up in
a specific way to work with Vim.

111
00:06:12.189 --> 00:06:15.766
Fantastic, we now have it, we are ready.

112
00:06:15.766 --> 00:06:19.861
So we can use Ctrl+Wl to jump
over to go into that one or

113
00:06:19.861 --> 00:06:25.000
we could have stayed in this and
use :q and quit that window.

114
00:06:25.000 --> 00:06:28.050
Now we have this we're ready to go,
this is fantastic, so

115
00:06:28.050 --> 00:06:31.260
we should be able to
do some fuzzy finding.

116
00:06:31.260 --> 00:06:32.130
But what do we do?

117
00:06:32.130 --> 00:06:36.710
Well, as they always say to
me read the friendly manual.

118
00:06:36.710 --> 00:06:40.410
So we're gonna go over to the friendly
manual and notice right here, awesome.

119
00:06:40.410 --> 00:06:43.610
So if I do colon files,
it will return all the files.

120
00:06:43.610 --> 00:06:47.962
If I do Gfiles, it will return all the Git
files, it has a bunch of different other

121
00:06:47.962 --> 00:06:52.090
options which we can go over,
but right now let's try g files.

122
00:06:52.090 --> 00:06:57.030
So if you're inside a project that
has source control, it should work.

123
00:06:57.030 --> 00:07:02.470
Now remember, when I opened vim,
I opened vim from the vim nav playground,

124
00:07:02.470 --> 00:07:05.060
but I directed it somewhere else.

125
00:07:05.060 --> 00:07:06.860
So that means when I do Gfiles,

126
00:07:06.860 --> 00:07:11.680
it'll actually use my vim nav playground
because that is where it was opened up.

127
00:07:11.680 --> 00:07:14.820
That is the folder that
it was as my project.

128
00:07:14.820 --> 00:07:17.350
So, now I can fuzzy find and
find something.

129
00:07:17.350 --> 00:07:21.481
So if I wanted to open up twitch, I can
see there's twitch.c twitch.h let's do

130
00:07:21.481 --> 00:07:25.460
twitch.c, my goodness,
we're right back to where we started.

131
00:07:25.460 --> 00:07:29.720
Look at how beautiful that is,
we are now fuzzy finding.

132
00:07:29.720 --> 00:07:35.220
This is like 10 times better but
hey, like my Ctrl+P doesn't work.

133
00:07:35.220 --> 00:07:36.835
Why doesn't it work?

134
00:07:36.835 --> 00:07:40.607
Come on, you're paying attention,
you know better than that,

135
00:07:40.607 --> 00:07:42.330
you've got to set up a remap.

136
00:07:42.330 --> 00:07:45.039
So let's go in here,
let's open up our config,

137
00:07:45.039 --> 00:07:49.280
let's go down to the bottom, let's
highlight, which one do we want to do?

138
00:07:49.280 --> 00:07:50.410
Let's highlight this one, why not?

139
00:07:50.410 --> 00:07:52.814
It's confusing,
you can delete the rest of the line,

140
00:07:52.814 --> 00:07:55.750
I'm gonna show you a super cool shortcut,
are you ready for this?

141
00:07:57.460 --> 00:08:01.409
Shift+D, look at that it deletes
everything from your cursor all the way to

142
00:08:01.409 --> 00:08:03.040
the end of that line.

143
00:08:03.040 --> 00:08:06.370
It's fantastic,
D is one of my favorite disc.

144
00:08:06.370 --> 00:08:12.624
So then I'm going to hit Shift+A,
it's gonna go right into place and

145
00:08:12.624 --> 00:08:18.990
I'm gonna go Ctrl+P, remember you
do the (C) your C look like this.

146
00:08:20.230 --> 00:08:23.609
And then of course p for
Ctrl+P there we go, and

147
00:08:23.609 --> 00:08:26.490
then do a space I'm gonna go Gfiles.

148
00:08:26.490 --> 00:08:32.380
And don't forget this one trick that makes
doctors very angry CR, carriage return.

149
00:08:32.380 --> 00:08:35.839
You can't forget that because if
you don't do that what happens,

150
00:08:35.839 --> 00:08:39.260
it just typed the command but
does not press enter for you.

151
00:08:39.260 --> 00:08:43.420
So there we go, Ctrl+P,
will now execute get files.

152
00:08:43.420 --> 00:08:47.180
That's awesome, but if you're not in
a Git repo, this command won't work.

153
00:08:47.180 --> 00:08:51.280
So you may wanna have a backup command
that will work in this situation.

154
00:08:51.280 --> 00:08:54.630
And so what I actually have as a backup
command, is I'll jump into here and

155
00:08:54.630 --> 00:08:58.020
I'll have project files and
I'll just have something like this.

156
00:08:58.020 --> 00:09:01.888
So that way I have both Git files and
project files, so just in case I'm

157
00:09:01.888 --> 00:09:06.170
not in a repo, I can still fuzzy search
over the folder, make sense, right?

158
00:09:06.170 --> 00:09:10.280
I think that that is a fairly good
practice to do, so there we go.

159
00:09:10.280 --> 00:09:13.930
So now, I just got to source it,
what do we do to source it?

160
00:09:13.930 --> 00:09:18.040
No, no, no, don't you say source
percent sign space Enter, right?

161
00:09:18.040 --> 00:09:19.778
Awesome, we've now just sourced it,

162
00:09:19.778 --> 00:09:23.320
we're using our shortcuts vim is our way
we're doing things the way we like it.

163
00:09:23.320 --> 00:09:26.870
Maybe your shortcuts different than mine,
perfectly fine, awesome.

164
00:09:26.870 --> 00:09:30.050
And now when I press Ctrl+ P, beautiful.

165
00:09:30.050 --> 00:09:34.024
If I had a bunch of files that weren't
source controlled, I could do space PF.

166
00:09:34.024 --> 00:09:38.509
Yes look at that I am fuzzy finding
like a madman at this point.

167
00:09:38.509 --> 00:09:43.419
I can kkk, I can also do, there we go, you
can type in any letters you want bbbbb,

168
00:09:43.419 --> 00:09:47.176
it just works Ctrl+P will go
backwards in the list control and

169
00:09:47.176 --> 00:09:48.930
we'll go forth in the list.

170
00:09:48.930 --> 00:09:54.453
Remember I told you Ctrl+P as an important
habit to get into cuz by default,

171
00:09:54.453 --> 00:09:56.670
it works in every list.

172
00:09:56.670 --> 00:09:59.784
It's just beautiful, it doesn't work in
quick fix list if I remember correctly,

173
00:09:59.784 --> 00:10:02.250
but we're gonna pretend like it does.

174
00:10:02.250 --> 00:10:06.119
All right, so you can use Ctrl+C
to just close it down escape,

175
00:10:06.119 --> 00:10:09.039
you got it, it just works,
this is beautiful.

176
00:10:09.039 --> 00:10:15.225
Hopefully everyone was able to get the vim
plugin to be installed, it's not too hard.

177
00:10:15.225 --> 00:10:17.608
One you need a plugin
manager I choose vim plug,

178
00:10:17.608 --> 00:10:21.491
there are other plugin managers vim
even has its own default plugin manager.

179
00:10:21.491 --> 00:10:24.414
I just simply use vim plug
cuz it's the easiest for

180
00:10:24.414 --> 00:10:28.810
me to either find the plugins you want,
they're almost always on GitHub.

181
00:10:28.810 --> 00:10:33.559
You provide the GitHub address minus
github.com, it just automatically

182
00:10:33.559 --> 00:10:37.642
downloads them for you,
it sources them when you call plug end.

183
00:10:37.642 --> 00:10:41.163
This is a special function, all special
functions with the hashtag human

184
00:10:41.163 --> 00:10:44.120
are special functions
are called autoload functions.

185
00:10:44.120 --> 00:10:47.450
You don't even have to worry about what
they mean or why they are like that.

186
00:10:47.450 --> 00:10:50.560
But you just know that these are two
special functions you have to call.

187
00:10:50.560 --> 00:10:54.830
I wanna begin, I wanna end, and
that's what it's gonna do, so awesome.

