WEBVTT

1
00:00:00.001 --> 00:00:03.354
So right now we have our
router actually working.

2
00:00:03.354 --> 00:00:06.502
So we can get into new pages,
we can go back,

3
00:00:06.502 --> 00:00:11.544
we can go to even a page that doesn't
exist yet, but we have a problem.

4
00:00:11.544 --> 00:00:16.654
For example, if I'm watching a movie,
and if I refresh,

5
00:00:16.654 --> 00:00:23.346
I'm getting a 404, which is a problem for
us while we are coding our app.

6
00:00:23.346 --> 00:00:27.731
Because it means that we need to
go all the time to the home page.

7
00:00:27.731 --> 00:00:32.195
But it's also a problem for users,
because maybe the user is reloading,

8
00:00:32.195 --> 00:00:34.219
maybe the user is not reloading.

9
00:00:34.219 --> 00:00:39.082
But, for example, on mobile devices,
when you get out of the browser,

10
00:00:39.082 --> 00:00:43.627
you come back later, sometimes
the browser got out of the memory and

11
00:00:43.627 --> 00:00:46.042
it's going to reload the content.

12
00:00:46.042 --> 00:00:48.630
And then the user will see a 404, and

13
00:00:48.630 --> 00:00:52.173
the same happens if the user
is bookmarking that URL.

14
00:00:52.173 --> 00:00:57.435
So even if I'm seeing something, the
Interstellar, and I wanna bookmark this,

15
00:00:57.435 --> 00:01:02.486
I can bookmark this, but then when I
use the bookmark, it will give me 404.

16
00:01:02.486 --> 00:01:06.153
So it's wrong, okay, so something's wrong.

17
00:01:06.153 --> 00:01:10.984
By the way, why I'm getting 404?

18
00:01:10.984 --> 00:01:11.917
Question for you.

19
00:01:11.917 --> 00:01:12.933
&gt;&gt; Student 1: It's not a server route?

20
00:01:12.933 --> 00:01:13.632
&gt;&gt; Maximiliano Firtman: Because?

21
00:01:13.632 --> 00:01:15.464
&gt;&gt; Student 1: It's not a server route.

22
00:01:15.464 --> 00:01:17.214
&gt;&gt; Maximiliano Firtman: Because
it's not a server route.

23
00:01:17.214 --> 00:01:22.726
So when we refresh, also, if I copy and
paste this URL in a new tab,

24
00:01:22.726 --> 00:01:26.773
this is creating a new
navigation to the server.

25
00:01:26.773 --> 00:01:31.317
And the server doesn't
react to those URLs.

26
00:01:31.317 --> 00:01:38.741
So let's solve that, because we
cannot publish an app in this state.

27
00:01:38.741 --> 00:01:44.331
So now we are going back to the backend.

28
00:01:44.331 --> 00:01:49.842
And I will go to main.go,
remember, in main.go,

29
00:01:49.842 --> 00:01:53.990
we have all our handlers for every URL.

30
00:01:53.990 --> 00:01:59.480
So something that we are going to do is,
before the FileServer handler,

31
00:01:59.480 --> 00:02:04.250
before the FileServer handler,
because if you do that after,

32
00:02:04.250 --> 00:02:10.010
it's not gonna work, the file server
handler should be the last fallback,

33
00:02:10.010 --> 00:02:13.177
we're going to say something like this.

34
00:02:13.177 --> 00:02:19.709
I'm going to refactor this while I'm
typing, so I'm going to say HandleFunct,

35
00:02:19.709 --> 00:02:24.632
for example, /movies,
I wanna do something when the user,

36
00:02:24.632 --> 00:02:29.574
from the server, or to the server,
is requesting /movies.

37
00:02:29.574 --> 00:02:32.069
So I need to create a handler.

38
00:02:32.069 --> 00:02:38.286
The thing is that, that handler
will also be needed for other URLs.

39
00:02:38.286 --> 00:02:44.316
For example, maybe to movies/
something else, or maybe account.

40
00:02:44.316 --> 00:02:47.325
We don't have that yet, but maybe in
the future, we'll have an account section.

41
00:02:47.325 --> 00:02:51.981
So all the routes that we
are creating client-side,

42
00:02:51.981 --> 00:02:55.398
should be defined here server-side.

43
00:02:55.398 --> 00:02:58.176
I'm gonna use the same handler, so

44
00:02:58.176 --> 00:03:02.632
I'm going to create the handler
that I can reuse, okay?

45
00:03:02.632 --> 00:03:08.831
This handler will be, actually,
we can call this catchAllHandler,

46
00:03:08.831 --> 00:03:15.358
or catchAllClientRoutesHandler,
however you wanna call this, okay?

47
00:03:15.358 --> 00:03:21.512
It's gonna be a function that
follows the Handler pattern.

48
00:03:21.512 --> 00:03:27.471
So we receive w as http.ResponseWriter,
and then we'll receive r,

49
00:03:27.471 --> 00:03:33.332
that is typically a request by,
in this case, a pointer to Request.

50
00:03:33.332 --> 00:03:35.708
And the next question is
what to do with this.

51
00:03:35.708 --> 00:03:38.783
First, I will copy this, and

52
00:03:38.783 --> 00:03:43.708
I will paste this on these three places,
okay?

53
00:03:43.708 --> 00:03:45.410
But what do you think,

54
00:03:45.410 --> 00:03:50.349
what should I do if the user is
requesting that URL server-side?

55
00:03:50.349 --> 00:03:54.270
We're not doing server-side rendering,
okay, so

56
00:03:54.270 --> 00:03:56.978
we are not rendering the movie here.

57
00:03:56.978 --> 00:03:59.431
But where are the options?

58
00:03:59.431 --> 00:04:00.819
What do you think?

59
00:04:00.819 --> 00:04:07.602
So if the user is requesting /movies,
what should the server do?

60
00:04:07.602 --> 00:04:09.334
There are two options.

61
00:04:09.334 --> 00:04:14.014
Option 1, make an HTTP redirect,
that's 301 or

62
00:04:14.014 --> 00:04:18.389
302, it depends on which
one do you wanna use.

63
00:04:18.389 --> 00:04:23.812
Option 2, deliver the index.html,

64
00:04:23.812 --> 00:04:27.271
so let's analyze both.

65
00:04:27.271 --> 00:04:32.031
The first one is probably the one
that we are initially more

66
00:04:32.031 --> 00:04:37.004
pushed to actually implement,
but it's not the right one.

67
00:04:37.004 --> 00:04:44.393
So if I make a redirect, what will happen
is that the user will go to /movies,

68
00:04:44.393 --> 00:04:50.211
and then the server will redirect me to /,
to the home page.

69
00:04:50.211 --> 00:04:52.643
At least I won't get the 404, but

70
00:04:52.643 --> 00:04:56.264
I won't get the movies page,
I will get the home page.

71
00:04:56.264 --> 00:05:02.404
Maybe it's better than 404, but
it's still not the right solution, okay?

72
00:05:02.404 --> 00:05:06.256
So the right solution is
to deliver the index.html,

73
00:05:06.256 --> 00:05:11.317
on some server-side platforms,
not Go, it's called forwarding.

74
00:05:11.317 --> 00:05:15.536
So it's not a redirect, it's a forward,
it's kind of a solution from a server.

75
00:05:15.536 --> 00:05:19.201
We are not sending any instructions
to the client, actually,

76
00:05:19.201 --> 00:05:21.983
we are going to serve one
particular file here.

77
00:05:21.983 --> 00:05:28.070
We're going to actually say that I
wanna serve one file to that writer,

78
00:05:28.070 --> 00:05:32.333
to that response writer,
with that request, and

79
00:05:32.333 --> 00:05:36.306
we're going to serve public/index.html.

80
00:05:36.306 --> 00:05:41.592
So not matter which URL we
are getting in the server of this,

81
00:05:41.592 --> 00:05:44.254
at least those three groups.

82
00:05:44.254 --> 00:05:48.240
And by the way, server-side,
this is actually a prefix.

83
00:05:48.240 --> 00:05:53.142
So everything that's starting with movies,

84
00:05:53.142 --> 00:05:58.296
will actually go to this
ClientRoutesHandler,

85
00:05:58.296 --> 00:06:02.955
it's going to answer with the HTML, okay?

86
00:06:02.955 --> 00:06:04.698
Let's see this in action and

87
00:06:04.698 --> 00:06:07.899
see that there are more things
that we need to do now.

88
00:06:07.899 --> 00:06:12.984
So if I refresh now on /movies,
so let's say /movies/14,

89
00:06:12.984 --> 00:06:19.029
okay, there was Men in Black, I think,
so if I do this, I'm getting this.

90
00:06:19.029 --> 00:06:25.758
So I'm getting something, not the 404,
I'm getting the index.html,

91
00:06:25.758 --> 00:06:29.809
but it's not working,
does anyone know why?

92
00:06:29.809 --> 00:06:34.318
Also, if I look at the console,
I may see some errors, and

93
00:06:34.318 --> 00:06:40.038
also on the Network tab, if I reload,
I will probably see a lot of errors.

94
00:06:40.038 --> 00:06:44.004
Now, actually not an error, but

95
00:06:44.004 --> 00:06:49.104
the styles.css file is giving me an HTML,

96
00:06:49.104 --> 00:06:52.654
app.js is giving me an HTML.

97
00:06:52.654 --> 00:06:57.169
So something's kind of wrong, right?

98
00:06:57.169 --> 00:07:01.505
Also, if I'm going to the root, the root
is working, okay, so the root is working.

99
00:07:01.505 --> 00:07:04.259
The problem is this URL.

100
00:07:04.259 --> 00:07:07.193
Does anyone know what's going on?

101
00:07:07.193 --> 00:07:10.586
Why is that styles.css
is giving me an HTML?

102
00:07:10.586 --> 00:07:12.047
Let me give you a hint.

103
00:07:12.047 --> 00:07:17.007
If I open this in a new tab,
this is just the CSS,

104
00:07:17.007 --> 00:07:21.357
there is a hint there of what's going on.

105
00:07:21.357 --> 00:07:28.163
The URL, styles.css is trying
to grip that from movies.

106
00:07:28.163 --> 00:07:31.015
&gt;&gt; Student 2: The server
is returning the HTML for

107
00:07:31.015 --> 00:07:33.737
any URL that's-
&gt;&gt; Maximiliano Firtman: Any URL starting

108
00:07:33.737 --> 00:07:38.989
with movies, including the CSS,
which leads to another problem,

109
00:07:38.989 --> 00:07:41.675
style.css is not inside movies.

110
00:07:41.675 --> 00:07:46.042
So when we are doing single
page application and

111
00:07:46.042 --> 00:07:49.754
we are doing this trick of redirecting or

112
00:07:49.754 --> 00:07:54.995
forwarding everything from
the server to index.html,

113
00:07:54.995 --> 00:08:02.548
we need to go to index.html and change
every reference to an absolute reference.

114
00:08:02.548 --> 00:08:08.855
So /styles.css, /app.webmanifest,
/images/icon, /app.js,

115
00:08:08.855 --> 00:08:14.971
maybe the logo as well, and I think
that's the last resource that I have.

116
00:08:14.971 --> 00:08:20.002
Also, we should change the base,
and I'll show you if you

117
00:08:20.002 --> 00:08:25.048
have used that base,
&gt;&gt; Maximiliano Firtman: HTML element,

118
00:08:25.048 --> 00:08:28.192
it's been with us since the 90s.

119
00:08:28.192 --> 00:08:31.782
That base will actually define
the base for every link that you have.

120
00:08:31.782 --> 00:08:38.653
When you have a link that is relative, is
not the case here because it start with /,

121
00:08:38.653 --> 00:08:44.458
but if it's doesn't start with /,
it will use that base as a prefix.

122
00:08:44.458 --> 00:08:46.027
Okay, that's makes sense?

123
00:08:46.027 --> 00:08:52.329
So now when I'm going back here and
I'm checking movies/14,

124
00:08:52.329 --> 00:08:56.463
if I refresh, I'm getting the right URL.

125
00:08:56.463 --> 00:08:58.799
So I refresh, I'm getting the right URL.

126
00:08:58.799 --> 00:09:04.654
Now we can even change the URL
with any other number, it works.

127
00:09:04.654 --> 00:09:06.444
So what's going on here?

128
00:09:06.444 --> 00:09:12.519
So we go to that URL to the server, the
server doesn't know it's Kung Fu Panda,

129
00:09:12.519 --> 00:09:18.884
but the server says, it's start with
movies, let's send the index.html.

130
00:09:18.884 --> 00:09:24.095
When the index.html starts, we start the
app, the app is initializing the router.

131
00:09:24.095 --> 00:09:28.226
And the router verifies that you already,
says, you don't want a home,

132
00:09:28.226 --> 00:09:30.367
you don't want that particular movie.

133
00:09:30.367 --> 00:09:34.408
So it goes and
renders the right component.

134
00:09:34.408 --> 00:09:35.680
Does it make sense?

135
00:09:35.680 --> 00:09:40.660
And now if I go and click on movies,
so this is the real URL, so

136
00:09:40.660 --> 00:09:45.660
the current navigation has a real URL,
this is the real URL.

137
00:09:45.660 --> 00:09:50.522
But now if I go to movies, it's /,

138
00:09:50.522 --> 00:09:54.412
so we can still fake the URL,

139
00:09:54.412 --> 00:09:59.776
even if we are not starting from the /.

