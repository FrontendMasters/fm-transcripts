WEBVTT

1
00:00:00.000 --> 00:00:01.995
&gt;&gt; Maximiliano Firtman: So
welcome to Vanilla JS and

2
00:00:01.995 --> 00:00:04.175
go building a Fullstack App.

3
00:00:04.175 --> 00:00:07.163
So my name is Maximiliano I can go by Max.

4
00:00:07.163 --> 00:00:12.065
I'm third on most social networks
my website is firt.dev let me

5
00:00:12.065 --> 00:00:14.617
go really quickly about myself.

6
00:00:14.617 --> 00:00:19.946
So I'm from Argentina I live in Buenos
Aires, and I'm a mobile web developer.

7
00:00:19.946 --> 00:00:23.481
So I have been doing web
development since 1996, so

8
00:00:23.481 --> 00:00:27.706
that's long time ago,
almost 30 years doing web development.

9
00:00:27.706 --> 00:00:32.936
In that case, it was just Vanilla,
Vanilla web, Vanilla JavaScript.

10
00:00:32.936 --> 00:00:35.327
We didn't use that term at the time.

11
00:00:35.327 --> 00:00:37.677
Then, of course,
I started doing JavaScript.

12
00:00:37.677 --> 00:00:44.100
I've done more than 160 web apps that
we're publishing along these 30 years,

13
00:00:44.100 --> 00:00:49.980
and I'm an author of many books and
many courses on different technologies,

14
00:00:49.980 --> 00:00:54.058
mostly around web,
mobile web and web performance.

15
00:00:54.058 --> 00:00:59.083
So those are my usual topics
when it comes to courses.

16
00:00:59.083 --> 00:01:05.637
Also, I work with Google in writing
LearnPWA on Progressive Web App.

17
00:01:05.637 --> 00:01:08.891
It's a free course or
free eBook activation.

18
00:01:08.891 --> 00:01:12.090
Kind of an interactive eBook
on progressive web apps.

19
00:01:12.090 --> 00:01:17.211
And on Frontend Masters,
I have several courses on frontend,

20
00:01:17.211 --> 00:01:20.118
mobile apps on native mobile apps.

21
00:01:20.118 --> 00:01:23.619
And some back end courses,
including PHP and Go.

22
00:01:23.619 --> 00:01:28.680
For this workshop, it's a good idea for
you to first go and

23
00:01:28.680 --> 00:01:33.445
have some experience with go and
Vanilla JavaScript.

24
00:01:33.445 --> 00:01:36.899
And I have two other
courses on those topics.

25
00:01:36.899 --> 00:01:41.192
We have Vanilla JavaScript you
might not need a framework, and

26
00:01:41.192 --> 00:01:45.323
basics of Go also,
in case you don't have that experience,

27
00:01:45.323 --> 00:01:48.725
you can start with that
before doing this course.

28
00:01:48.725 --> 00:01:52.731
So what about the contents
of this workshop?

29
00:01:52.731 --> 00:01:57.234
We are going to build a full stack
application, mostly from scratch.

30
00:01:57.234 --> 00:02:03.138
Okay, so we will see all the stages,
all the steps to actually get an up and

31
00:02:03.138 --> 00:02:06.100
running app at the end of the course.

32
00:02:06.100 --> 00:02:10.297
And we're going to start
introducing the project, so

33
00:02:10.297 --> 00:02:13.408
what we're going to be building today.

34
00:02:13.408 --> 00:02:17.384
We're going to set up, first,
the basics of the backend with Go so

35
00:02:17.384 --> 00:02:19.518
we're going to set up the project.

36
00:02:19.518 --> 00:02:24.916
We're going to create a server to
serve first the static files and

37
00:02:24.916 --> 00:02:28.366
also to serve an API that will be RESTful.

38
00:02:28.366 --> 00:02:31.279
Then we will create the database.

39
00:02:31.279 --> 00:02:34.258
So we will talk about the database schema,

40
00:02:34.258 --> 00:02:39.080
the data that we will be using, and
we will be building a RESTful API.

41
00:02:39.080 --> 00:02:44.214
So then a client can consume
the data that's the idea.

42
00:02:44.214 --> 00:02:47.213
After that,
we will start working with the frontend.

43
00:02:47.213 --> 00:02:51.371
And in the frontend, we're going
to be using Vanilla JavaScript.

44
00:02:51.371 --> 00:02:56.110
So we are not going to use any library or
any framework, just plain JavaScript with,

45
00:02:56.110 --> 00:02:59.872
of course, HTML, CSS, and
all the rest of the web technologies.

46
00:02:59.872 --> 00:03:06.662
And we will be using web components
as a way to design our front end.

47
00:03:06.662 --> 00:03:11.028
So we will create a couple
of web components, and

48
00:03:11.028 --> 00:03:16.036
some of those components
will have dynamic rendering,

49
00:03:16.036 --> 00:03:22.553
so they will consume data from the API,
and it will like populate the UI.

50
00:03:22.553 --> 00:03:27.151
After that, we will start working
with search, filter and sort.

51
00:03:27.151 --> 00:03:31.882
So we will see what's the best practice
to actually make that work when

52
00:03:31.882 --> 00:03:33.252
we have a database.

53
00:03:33.252 --> 00:03:35.412
We're going to do
client-side routing as well.

54
00:03:35.412 --> 00:03:41.515
So our app will have several pages,
different pages or views or sections.

55
00:03:41.515 --> 00:03:46.129
So we will use just plain
JavaScript to create the client

56
00:03:46.129 --> 00:03:50.657
side routing system so
we can navigate between pages.

57
00:03:50.657 --> 00:03:55.428
State Management, so we will see
how to store data client side and

58
00:03:55.428 --> 00:04:01.347
keep that synced with the server and for
that, we will focus on authentication.

59
00:04:01.347 --> 00:04:06.549
So we will have a way to register users,
log in the users, and

60
00:04:06.549 --> 00:04:11.752
keep the session active using
one of the latest technologies

61
00:04:11.752 --> 00:04:18.297
available in terms of design patterns
that will let the user keep logged in.

62
00:04:18.297 --> 00:04:22.415
And then we will add favorites and
watch list, and this is what is that?

63
00:04:22.415 --> 00:04:26.300
Well, actually, we are going to
be creating a movies application.

64
00:04:26.300 --> 00:04:32.304
So we will have a list of movies,
actually a huge database of movies,

65
00:04:32.304 --> 00:04:36.547
and we will be able to keep
our favorite movies and

66
00:04:36.547 --> 00:04:40.916
a watch list in this system
in this web app, okay?

67
00:04:40.916 --> 00:04:43.210
So that's kind of the idea.

68
00:04:43.210 --> 00:04:49.553
So prerequisites for this course,
basic JavaScript, basic HTML and CSS.

69
00:04:49.553 --> 00:04:54.977
So the CSS part is the one that we
won't be spending too much time with.

70
00:04:54.977 --> 00:04:58.324
It's actually maybe the only part
that is already pre-written.

71
00:04:58.324 --> 00:05:04.127
So we can just focus on the development
side and on the design side.

72
00:05:04.127 --> 00:05:07.468
Have some familiarity with JavaScript and
DOM API.

73
00:05:07.468 --> 00:05:10.028
So that's what we know
as Vanilla JavaScript.

74
00:05:10.028 --> 00:05:14.869
So if you have ever played with
Git Element by ID or query selector.

75
00:05:14.869 --> 00:05:17.051
Okay, you're good to go.

76
00:05:17.051 --> 00:05:22.530
Basic goal backend development, so just
having a basic idea of go or go Lang and

77
00:05:22.530 --> 00:05:28.008
how to create the basic server, we're
going to do it from scratch anyway, but

78
00:05:28.008 --> 00:05:33.507
it's important for you to have familiarity
with the language and the syntax.

79
00:05:33.507 --> 00:05:39.261
Some SQL and database concept, because
we will be using a SQL based storage.

80
00:05:39.261 --> 00:05:43.902
Actually a Postgres database so if you
have experience just with SQL queries,

81
00:05:43.902 --> 00:05:48.847
understanding primary keys, foreign keys,
all those ideas, that will be good.

82
00:05:48.847 --> 00:05:53.709
And from a software perspective, the only
thing that you need is actually go.

83
00:05:53.709 --> 00:06:00.096
I'm going to be using 1.24, but if you
have 1.20, or even if you have 1.10,

84
00:06:00.096 --> 00:06:04.949
it's probably going to work anyway,
because we are not going to use

85
00:06:04.949 --> 00:06:10.339
the latest versions of the language of
any of the new parts of the language.

86
00:06:10.339 --> 00:06:12.070
And of course, you need a code editor.

87
00:06:12.070 --> 00:06:17.020
I'm going to use Visual Studio code, but
you are free to use any code editor and

88
00:06:17.020 --> 00:06:21.070
just a browser, because this is a web app,
that's all we don't

89
00:06:21.070 --> 00:06:25.424
need a web server because we are going
to code the web server using Go.

90
00:06:25.424 --> 00:06:27.695
This is just one technique
it's not the only technique.

91
00:06:27.695 --> 00:06:32.593
Later we will discuss all the options
that we have when we are building

92
00:06:32.593 --> 00:06:35.886
our full stack application,
but in our case,

93
00:06:35.886 --> 00:06:39.698
we are just going to be
writing everything with code.

94
00:06:39.698 --> 00:06:43.360
So there is a workshop site
it's on GitHub, github.com,

95
00:06:43.360 --> 00:06:46.744
forward/Fernand that's my username and
last name.

96
00:06:46.744 --> 00:06:50.880
Actually, /go-vanillajs, so

97
00:06:50.880 --> 00:06:56.154
there you will find just
kind of a folder that

98
00:06:56.154 --> 00:07:01.725
will be used as a placeholder for
our project.

99
00:07:01.725 --> 00:07:04.400
You have a copy of the slides there also,

100
00:07:04.400 --> 00:07:08.582
there will be the final project
will actually be there as well.

101
00:07:08.582 --> 00:07:13.338
And also we have the dataset because
we are not going to be like typing

102
00:07:13.338 --> 00:07:14.928
movies from scratch.

103
00:07:14.928 --> 00:07:18.410
So I already have a set of movies
that we will use to populate

104
00:07:18.410 --> 00:07:20.046
manipulate the database so

105
00:07:20.046 --> 00:07:24.117
you have all the installation scripts
there that we will see later.

106
00:07:24.117 --> 00:07:27.540
So you can clone that repository.

107
00:07:27.540 --> 00:07:30.387
You can get it,
you can download it manually,

108
00:07:30.387 --> 00:07:32.507
however you wanna work with that.

109
00:07:32.507 --> 00:07:33.809
That will be good enough.

110
00:07:33.809 --> 00:07:40.378
Also, there is a readme file there in
Markdown, the README has a instructions.

111
00:07:40.378 --> 00:07:44.341
So step-by-step instructions of
everything that I will be doing,

112
00:07:44.341 --> 00:07:46.473
it's gonna be pretty much the same.

113
00:07:46.473 --> 00:07:50.502
So I'm going to be live coding
maybe 90% of the project.

114
00:07:50.502 --> 00:07:55.671
But you have here some snippets also
to copy and paste, or in case you

115
00:07:55.671 --> 00:08:01.213
are lost at some points you have you
all these steps by letter and number.

116
00:08:01.213 --> 00:08:07.024
I will be saying, okay,
we are now doing A2, A3, A4, B1, B2, B3.

117
00:08:07.024 --> 00:08:09.118
So this is the app that
we will be building.

118
00:08:09.118 --> 00:08:12.675
This is the final version,
at least for the first steps.

119
00:08:12.675 --> 00:08:17.600
So we have a list of movies we can
get into a movie with details.

120
00:08:17.600 --> 00:08:21.249
We can see the details,
we can see the cast.

121
00:08:21.249 --> 00:08:24.189
We can search for a movie,
like Superman movies,

122
00:08:24.189 --> 00:08:26.928
okay, you can see
everything is pretty fast.

123
00:08:26.928 --> 00:08:30.275
That's because it's Go plus
Vanilla JavaScript, okay?

124
00:08:30.275 --> 00:08:33.433
And we can create, we can log in,
we can register, and

125
00:08:33.433 --> 00:08:37.368
that's kind of the app that we will
be building during this course.

