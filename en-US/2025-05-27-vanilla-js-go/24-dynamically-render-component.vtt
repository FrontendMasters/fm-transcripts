WEBVTT

1
00:00:00.000 --> 00:00:01.920
&gt;&gt; Maximiliano Firtman: We need
to do something else also.

2
00:00:01.920 --> 00:00:05.369
It's not just taking the template.

3
00:00:05.369 --> 00:00:09.041
We need to dynamically render the content.

4
00:00:09.041 --> 00:00:11.422
So I need to go to my API.

5
00:00:11.422 --> 00:00:16.855
I need to get the movies, top movies and

6
00:00:16.855 --> 00:00:21.805
random movies, and fill the gaps.

7
00:00:21.805 --> 00:00:24.934
Which gaps, the URLs.

8
00:00:24.934 --> 00:00:28.899
I have one gap here,
another gap here, okay?

9
00:00:28.899 --> 00:00:31.032
so that's the next step.

10
00:00:31.032 --> 00:00:35.798
So now, within connected callback,
I can create a function.

11
00:00:35.798 --> 00:00:37.191
I can call this render.

12
00:00:37.191 --> 00:00:39.879
You don't need to call it render,
so it's not really It.

13
00:00:39.879 --> 00:00:42.134
It's not a method coming
from the superclass.

14
00:00:42.134 --> 00:00:44.526
It's not connected callback.

15
00:00:44.526 --> 00:00:49.639
It is a method that we need to override,
but not render, okay?

16
00:00:49.639 --> 00:00:52.811
But then we can call this.

17
00:00:52.811 --> 00:00:54.011
render.

18
00:00:54.011 --> 00:00:59.202
So after we put the template, I can go and

19
00:00:59.202 --> 00:01:05.328
try to get everything that
we have from the API.

20
00:01:05.328 --> 00:01:09.451
So, for example,
I can get the top movies from where?

21
00:01:09.451 --> 00:01:14.582
From the API, so I will await for API.

22
00:01:16.307 --> 00:01:21.254
&gt;&gt; Maximiliano Firtman: An API it's
something that it's on a another module.

23
00:01:21.254 --> 00:01:24.898
So when I press return,
it's adding me an import.

24
00:01:24.898 --> 00:01:28.375
And you know what's the next
step after that import.

25
00:01:28.375 --> 00:01:30.131
What's the next step?

26
00:01:32.014 --> 00:01:33.952
&gt;&gt; Maximiliano Firtman: Come on, come on.

27
00:01:33.952 --> 00:01:35.884
&gt;&gt; Speaker 2: Dot js.
&gt;&gt; Maximiliano Firtman: Dot js.

28
00:01:35.884 --> 00:01:38.319
Remember, it's not going to work.

29
00:01:38.319 --> 00:01:40.199
I need to add dot js manually.

30
00:01:40.199 --> 00:01:46.323
And also because I need to await,
I need to add async to my render.

31
00:01:46.323 --> 00:01:47.968
Okay, remember async await.

32
00:01:47.968 --> 00:01:49.862
So now I have top movies.

33
00:01:49.862 --> 00:01:51.275
So what's the next step?

34
00:01:51.275 --> 00:01:54.289
Well, I need to render then, okay?

35
00:01:54.289 --> 00:01:58.682
But before doing the rendering, so
I need to take the top movies and

36
00:01:58.682 --> 00:02:02.146
do a for each, for example and
do something with it.

37
00:02:02.146 --> 00:02:07.075
I know that after TopMovies,
I need to do the same thing,

38
00:02:07.075 --> 00:02:10.782
exactly the same thing for RandomMovies.

39
00:02:10.782 --> 00:02:14.713
Remember that we have two sections and
two APIs.

40
00:02:14.713 --> 00:02:18.347
So instead of doing manually and
copying and pasting,

41
00:02:18.347 --> 00:02:22.070
I'm going to do something
that you may like or dislike.

42
00:02:22.070 --> 00:02:25.249
To be honest,
I will create another function inside.

43
00:02:25.249 --> 00:02:30.232
In JavaScript, it's not really common, but
you can create functions inside functions.

44
00:02:30.232 --> 00:02:32.519
It's local function, okay?

45
00:02:32.519 --> 00:02:39.935
So it's perfectly valid, so
I can call this render movies in list.

46
00:02:39.935 --> 00:02:47.121
I receive the movies and the list to
the UL, and I will do this for every list.

47
00:02:47.121 --> 00:02:53.907
So then I can call render movies
in list with the top movies,

48
00:02:53.907 --> 00:02:58.544
and the UL is document get element by ID.

49
00:02:58.544 --> 00:03:00.658
I think it was top 10.

50
00:03:00.658 --> 00:03:07.051
And then I can call it with RandomMovies.

51
00:03:07.051 --> 00:03:08.464
Get RandomMovies.

52
00:03:13.265 --> 00:03:15.994
&gt;&gt; Maximiliano Firtman: RandomMovies and
RandomMovies.

53
00:03:15.994 --> 00:03:17.273
Does it make sense?

54
00:03:17.273 --> 00:03:20.048
So this is perfectly valid.

55
00:03:20.048 --> 00:03:25.383
And now here, the idea is that I
will first need to take the list and

56
00:03:25.383 --> 00:03:29.960
I will clear the list,
in case it has something inside.

57
00:03:29.960 --> 00:03:35.102
So I will clear the contents, and
I will do a footage over the movie.

58
00:03:35.102 --> 00:03:41.297
So I will loop through with the for each
function or I can use a standard for each.

59
00:03:41.297 --> 00:03:42.064
It's up to you.

60
00:03:42.064 --> 00:03:43.945
This is functional programming.

61
00:03:43.945 --> 00:03:47.755
It's up to you which one
do you prefer to use.

62
00:03:47.755 --> 00:03:52.381
And for every movie I'm
going to do something, okay?

63
00:03:52.381 --> 00:03:54.413
So what is a list?

64
00:03:54.413 --> 00:03:55.226
It's a UL.

65
00:03:55.226 --> 00:04:00.154
So UL needs list items, LIs, inside.

66
00:04:00.154 --> 00:04:01.625
So I'm going to create LIs.

67
00:04:01.625 --> 00:04:02.468
How?

68
00:04:02.468 --> 00:04:07.600
Like this document.createElement li.

69
00:04:07.600 --> 00:04:10.986
This is pure dom management
vanilla JavaScript.

70
00:04:10.986 --> 00:04:18.615
And what I can do is I can
append a child with something.

71
00:04:18.615 --> 00:04:20.245
Or in fact, let me do this first.

72
00:04:20.245 --> 00:04:23.617
Just for testing I will say,
inside the li,

73
00:04:23.617 --> 00:04:27.274
I can change the inner HTML or
the text content.

74
00:04:27.274 --> 00:04:30.707
This is for debugging purposes only.

75
00:04:30.707 --> 00:04:33.478
&gt;&gt; Maximiliano Firtman: Movie.title, okay?

76
00:04:33.478 --> 00:04:35.363
It's not my final code.

77
00:04:35.363 --> 00:04:37.833
And then I need to take the list.

78
00:04:37.833 --> 00:04:43.634
I'm going to append that li to the list.

79
00:04:43.634 --> 00:04:46.140
Does it make sense?

80
00:04:46.140 --> 00:04:51.243
So now let's see what
happens if I refresh.

81
00:04:51.243 --> 00:04:54.245
Actually, we have some errors.

82
00:04:57.241 --> 00:05:00.938
&gt;&gt; Maximiliano Firtman: Well, it seems
like we have an API issue here first.

83
00:05:00.938 --> 00:05:02.887
So we can try to solve the problem first.

84
00:05:02.887 --> 00:05:05.259
So there is a missing forward slash.

85
00:05:05.259 --> 00:05:09.483
So if I go to API.js I should add

86
00:05:09.483 --> 00:05:14.195
the forward slash to the base URL or

87
00:05:14.195 --> 00:05:18.756
add them to each get a, up to you.

88
00:05:20.606 --> 00:05:23.569
&gt;&gt; Maximiliano Firtman: And
if I refresh now, yeah,

89
00:05:23.569 --> 00:05:28.271
it looks terrible, but something is there.

90
00:05:28.271 --> 00:05:32.260
Something that I'm seeing is that
I'm also removing the titles.

91
00:05:34.730 --> 00:05:40.264
&gt;&gt; Maximiliano Firtman: That is because
in my web component, in the HomePage Web

92
00:05:40.264 --> 00:05:45.347
component, I should say
that from the top-10.

93
00:05:45.347 --> 00:05:49.760
In fact, let's replace
getElementById with querySelector,

94
00:05:49.760 --> 00:05:53.610
and I will use the ID top 10,
the ul that I have inside.

95
00:05:53.610 --> 00:05:54.684
Does it make sense?

96
00:05:56.107 --> 00:05:58.790
&gt;&gt; Maximiliano Firtman: So
I will take the ID random UL.

97
00:05:58.790 --> 00:06:02.602
Because, if not,
it's also replacing the h2.

98
00:06:02.602 --> 00:06:08.602
In the HTML the section top 10
has the title and the list.

99
00:06:08.602 --> 00:06:14.242
If I'm taking top 10,
it's replacing everything I have here,

100
00:06:14.242 --> 00:06:16.465
including the UL, okay?

101
00:06:16.465 --> 00:06:17.070
Does it make sense?

102
00:06:17.070 --> 00:06:18.878
So now, if I refresh.

103
00:06:18.878 --> 00:06:22.540
Yeah, is it still not good, but better.

104
00:06:22.540 --> 00:06:26.419
&gt;&gt; Speaker 3: Do we put the template
outside in that system, there we go.

105
00:06:26.419 --> 00:06:27.513
&gt;&gt; Maximiliano Firtman: That's
a good question.

106
00:06:27.513 --> 00:06:30.604
So can we put the template
outside of the HTML?

107
00:06:30.604 --> 00:06:32.721
Sure, how to do that?

108
00:06:32.721 --> 00:06:33.990
You create a template.

109
00:06:33.990 --> 00:06:36.444
We can create the templates folders and
put it there.

110
00:06:36.444 --> 00:06:40.712
And then in the web component
typically you do that in

111
00:06:40.712 --> 00:06:43.918
the constructor of the web component.

112
00:06:43.918 --> 00:06:49.264
You are going to actually make a fetch for

113
00:06:49.264 --> 00:06:54.145
that templates, Home Page, HTML.

114
00:06:54.145 --> 00:06:55.825
It's a manual thing.

115
00:06:55.825 --> 00:06:56.849
That's how you do that.

116
00:06:56.849 --> 00:07:03.588
There is no declarative way to say that,
like template href or template source.

117
00:07:03.588 --> 00:07:05.255
No, you need to do it manually.

118
00:07:05.255 --> 00:07:09.223
So you grab the HTML manually using fetch,
and

119
00:07:09.223 --> 00:07:13.511
then you inject that into your component,
okay?

120
00:07:13.511 --> 00:07:15.323
Does that make sense?

121
00:07:15.323 --> 00:07:19.762
That's the process structure you do that

