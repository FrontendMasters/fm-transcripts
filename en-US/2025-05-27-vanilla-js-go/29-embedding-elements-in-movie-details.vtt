WEBVTT

1
00:00:00.001 --> 00:00:06.623
If I now come here and
reload, I do have two things,

2
00:00:06.623 --> 00:00:11.717
okay, so I have two pages, actually.

3
00:00:11.717 --> 00:00:16.367
One is the home page and
the other one is the details,

4
00:00:16.367 --> 00:00:21.030
still partially also I may
have an error somewhere.

5
00:00:21.030 --> 00:00:25.783
Yep, because I'm not seeing something, so

6
00:00:25.783 --> 00:00:31.298
it says I'm not getting the movie,
so it says null.

7
00:00:31.298 --> 00:00:33.848
So I need to solve that issue.

8
00:00:33.848 --> 00:00:37.560
And by the way, in the meantime,
I can also comment.

9
00:00:37.560 --> 00:00:40.401
I mean, in the meantime,
it's going to be just a few minutes.

10
00:00:40.401 --> 00:00:41.953
And I will comment the home page.

11
00:00:41.953 --> 00:00:47.633
I'm not going to check the home page,just
to see how my details looks like, okay?

12
00:00:47.633 --> 00:00:52.498
So let's try to analyze why, in this case,

13
00:00:52.498 --> 00:00:56.584
let's get into movie details page.

14
00:01:02.654 --> 00:01:06.226
I'm setting the ID
because I changed movie,

15
00:01:06.226 --> 00:01:09.422
we have idea movie, I change this to ID.

16
00:01:09.422 --> 00:01:12.325
So that's why I wasn't getting the movie,
okay?

17
00:01:12.325 --> 00:01:17.254
So if I refresh, I'm getting the title and
the tagline, and

18
00:01:17.254 --> 00:01:21.905
I just need to fill the rest,
which I will do that, okay?

19
00:01:21.905 --> 00:01:23.848
This is how it looks like at this point.

20
00:01:23.848 --> 00:01:25.983
And you can see it says YouTube loading.

21
00:01:25.983 --> 00:01:28.457
What is that?

22
00:01:28.457 --> 00:01:33.091
Well, if I inspect this, it's a YouTube
embed element that is not recognized by

23
00:01:33.091 --> 00:01:36.651
the browser, but
it's actually rendering the text inside.

24
00:01:36.651 --> 00:01:40.420
So that's the fallback
text that we have here.

25
00:01:40.420 --> 00:01:43.529
Well, now I need to fill the rest.

26
00:01:43.529 --> 00:01:47.940
For example,
lemme do the image part that we'll

27
00:01:47.940 --> 00:01:51.821
just take from the movie, the poster URL.

28
00:01:51.821 --> 00:01:55.252
We have something similar for the trailer.

29
00:01:55.252 --> 00:02:01.069
The trailer is actually the YouTube,
but because it's not working,

30
00:02:01.069 --> 00:02:06.206
let's work with maybe the overview,
overview of the movie.

31
00:02:06.206 --> 00:02:08.149
This movie overview.

32
00:02:08.149 --> 00:02:14.686
And just because even someone asks
about using innerHTML instead of or

33
00:02:14.686 --> 00:02:21.131
a template string, for example,
we do have a section for metadata.

34
00:02:21.131 --> 00:02:23.642
It's called metadata.

35
00:02:23.642 --> 00:02:29.406
I could create another component for
the metadata,

36
00:02:29.406 --> 00:02:34.516
but also I can write it here,
as we did before.

37
00:02:34.516 --> 00:02:42.456
In this case, I'm not sure if
you have ever played with DLs,

38
00:02:42.456 --> 00:02:47.917
does anyone know what DL is in HTML, a DL?

39
00:02:47.917 --> 00:02:48.825
Data list.

40
00:02:48.825 --> 00:02:49.564
Sorry.

41
00:02:49.564 --> 00:02:50.400
Data list.

42
00:02:50.400 --> 00:02:52.656
It's actually definition list.

43
00:02:52.656 --> 00:02:55.629
There is another, another one for

44
00:02:55.629 --> 00:03:00.149
data list that is actually
an attribute for inputs.

45
00:03:00.149 --> 00:03:06.981
It's a definition list that
actually works with DTs and DDs.

46
00:03:06.981 --> 00:03:11.053
Term and definition, it's like
a dictionary, key value, key value,

47
00:03:11.053 --> 00:03:13.879
key value, key value,
that's the idea, okay?

48
00:03:13.879 --> 00:03:17.412
So I'm using that one for metadata
because metadata is key value, key value,

49
00:03:17.412 --> 00:03:17.956
key value.

50
00:03:17.956 --> 00:03:21.987
Like the release year, that year,
that information, that year.

51
00:03:21.987 --> 00:03:25.486
The score, the popularity,
so it's a definition list.

52
00:03:25.486 --> 00:03:30.173
So I'm going to just inside the template
string, so this is a back tick.

53
00:03:30.173 --> 00:03:33.692
I will just say, okay, DT and DD.

54
00:03:33.692 --> 00:03:36.812
So we have release year or release date.

55
00:03:41.140 --> 00:03:46.169
And for DD, we will use this

56
00:03:46.169 --> 00:03:52.741
movie.release_year] &lt;dd&gt;.

57
00:03:52.741 --> 00:03:57.408
And then I will have

58
00:03:57.408 --> 00:04:03.830
the score on popularity.

59
00:04:03.830 --> 00:04:09.896
These are two numbers coming from,
also the score is on 10,

60
00:04:09.896 --> 00:04:14.679
so we can say something like this,
or 2 of 10,

61
00:04:14.679 --> 00:04:19.012
3 of 10, 8 of 10, to set the maximum.

62
00:04:19.012 --> 00:04:23.403
So here I'm mixing using the DOM APIs,
on some parts,

63
00:04:23.403 --> 00:04:28.376
and using just inner HTML and
a template string on other side.

64
00:04:28.376 --> 00:04:33.431
So, if I say how it looks like,
okay, okay, I see the poster.

65
00:04:33.431 --> 00:04:35.550
I'm seeing the data here.

66
00:04:35.550 --> 00:04:37.054
So, that's the metadata.

67
00:04:37.054 --> 00:04:42.507
That's our DL, of course,
with CSS, this is design,

68
00:04:42.507 --> 00:04:47.857
but just font size and
colors, nothing really fancy.

69
00:04:47.857 --> 00:04:51.822
So we still need to solve
the YouTube part, and maybe,

70
00:04:51.822 --> 00:04:54.073
I'm not seeing the overview.

71
00:04:54.073 --> 00:04:56.002
So maybe I have a bug there.

72
00:04:56.002 --> 00:05:00.674
Anyway, I'm seeing an arrow there,
that arrow has to do with,

73
00:05:00.674 --> 00:05:04.654
it's from the, origin,
because it's local host and

74
00:05:04.654 --> 00:05:09.066
the server that we're loading
the images complaining, but

75
00:05:09.066 --> 00:05:13.071
it works anyway, so
it's not really a problem for us.

76
00:05:13.071 --> 00:05:17.943
No, the overview is not maybe
we don't have an overview

77
00:05:17.943 --> 00:05:20.956
on this movie, maybe we'll see.

78
00:05:20.956 --> 00:05:27.210
I think it's overview, or maybe I
didn't add The overview is a P tag,

79
00:05:27.210 --> 00:05:33.570
It's a P tag, yeah, but anyway,
it should work anyway, not source.

80
00:05:33.570 --> 00:05:35.022
No, the problem it's this one.

81
00:05:35.022 --> 00:05:36.623
It's text content, not source.

82
00:05:36.623 --> 00:05:40.731
Don't copy and paste,
because that happens, okay?

83
00:05:40.731 --> 00:05:45.436
By the way,
did you see I didn't get an error, and

84
00:05:45.436 --> 00:05:49.817
that's something that we mentioned before.

85
00:05:49.817 --> 00:05:54.483
So I was changing a property
on a paragraph that does not

86
00:05:54.483 --> 00:05:58.651
exist because paragraphs
don't have a source.

87
00:05:58.651 --> 00:06:01.477
The browser says, okay, let's add it.

88
00:06:01.477 --> 00:06:06.479
So that's why you can create your custom
properties as well, but you are breaking

89
00:06:06.479 --> 00:06:11.119
the rules, and you are making this
possibly incompatible with the future,

90
00:06:11.119 --> 00:06:16.224
because maybe in the future, they will
add a source on paragraph wherever, okay?

91
00:06:16.224 --> 00:06:19.285
So that's why we need to add data.

92
00:06:19.285 --> 00:06:21.569
Okay, make sense?

93
00:06:21.569 --> 00:06:26.007
So now we have the text, and
then we need to loop through the cast and

94
00:06:26.007 --> 00:06:29.830
loop through the keywords,
and loop through the genre.

95
00:06:29.830 --> 00:06:32.625
Actually, this is just programming,

96
00:06:32.625 --> 00:06:37.461
I don't think it worth the time to
spend 15 minutes on doing that.

97
00:06:37.461 --> 00:06:38.733
I have it here.

98
00:06:38.733 --> 00:06:44.362
Okay, it's just genres and
cast, I will copy this.

99
00:06:44.362 --> 00:06:49.250
It's not a big deal,
it's just the same over and over,

100
00:06:49.250 --> 00:06:52.694
just to render the rest of the content.

101
00:06:52.694 --> 00:06:54.653
So now we can take a look at that.

102
00:06:54.653 --> 00:06:59.513
We have a URL for genre, and
then we are looping through

103
00:06:59.513 --> 00:07:03.221
all the genres and creating an URL for it.

104
00:07:03.221 --> 00:07:07.087
And something similar for the casting,

105
00:07:07.087 --> 00:07:13.350
which actually is creating images
within your HTML, very fine.

106
00:07:13.350 --> 00:07:18.879
Do you all know what this operator
stands for, double question mark?

107
00:07:18.879 --> 00:07:20.046
Ternary operator.

108
00:07:20.046 --> 00:07:25.608
It's not a ternary actually,
when you have two question mark,

109
00:07:25.608 --> 00:07:30.350
it's a binary operator because
it has only two parts.

110
00:07:30.350 --> 00:07:34.138
The ternary operator is when you have
only one, and then you have the column.

111
00:07:34.138 --> 00:07:36.294
Null coalescing.

112
00:07:36.294 --> 00:07:37.817
Null coalescing operator.

113
00:07:37.817 --> 00:07:39.434
And what does that mean?

114
00:07:39.434 --> 00:07:43.310
It's actually verifying
the condition that we have before.

115
00:07:43.310 --> 00:07:48.462
If it's true,
it's going to return the second value,

116
00:07:48.462 --> 00:07:52.421
and if it's not, it will just do nothing.

117
00:07:52.421 --> 00:07:58.987
Okay, so it's like having
a ternary operator with similar

118
00:07:58.987 --> 00:08:03.989
to an undefined as the last argument,
okay?

119
00:08:03.989 --> 00:08:09.339
So if I don't have an image URL,
it will just use a generic actor JPEG file

120
00:08:09.339 --> 00:08:15.328
that we have there, and if not, it's going
to take the image from the database.

121
00:08:15.328 --> 00:08:22.372
So if I refresh, okay, now we can see
the cast, and here we have the genre.

122
00:08:22.372 --> 00:08:24.163
Lemme increase the font size a little bit.

123
00:08:24.163 --> 00:08:29.039
Okay, so that's the movie details, and

124
00:08:29.039 --> 00:08:33.911
of course, we can change from here, no,

125
00:08:33.911 --> 00:08:38.531
actually from movie details, the ID.

126
00:08:38.531 --> 00:08:43.835
Yeah, we are actually faking the ID,
I'm not sure if we have a 140.

127
00:08:43.835 --> 00:08:47.442
Maybe we do, yeah, Mr.
Peabody and Sherman.

128
00:08:47.442 --> 00:08:50.590
So we changed ID and
we can see it's loading the data.

129
00:08:50.590 --> 00:08:52.410
So that part is kind of working.

130
00:08:52.410 --> 00:08:56.673
Of course, we don't have anything
happening on those buttons.

131
00:08:56.673 --> 00:09:03.849
We will get there at some points later,
And we need to solve the YouTube part.

132
00:09:03.849 --> 00:09:05.737
Do you have any question?

133
00:09:05.737 --> 00:09:10.604
I guess, what happens in other
frameworks when an custom element

134
00:09:10.604 --> 00:09:13.000
has more elements inside of it.

135
00:09:13.000 --> 00:09:16.431
Well, how would you treat
those in this case?

136
00:09:16.431 --> 00:09:21.098
If you wanted to embed like in here,
you're gonna use one element inside

137
00:09:21.098 --> 00:09:26.301
another, a custom element that has another
element, do you still need to grab it

138
00:09:26.301 --> 00:09:31.834
from the definition of the element, grab
the inner HTML, and then parse it through?

139
00:09:31.834 --> 00:09:37.756
Well, the answer is simpler, because it
doesn't matter if it's a custom element or

140
00:09:37.756 --> 00:09:41.968
a browser element or
a native element, it's just the same.

141
00:09:41.968 --> 00:09:45.979
So if you have an element, so
in this case, let's say I have a I have

142
00:09:45.979 --> 00:09:50.423
an element, a custom element,
movie details page that inside is loading

143
00:09:50.423 --> 00:09:54.534
a template, and that template has
a YouTube embed custom element.

144
00:09:54.534 --> 00:09:57.986
And do I need to do anything special
because it's a custom element?

145
00:09:57.986 --> 00:10:02.063
No, I need to create a custom element
that we didn't do that yet, okay, but

146
00:10:02.063 --> 00:10:03.800
there is no special treatment.

147
00:10:03.800 --> 00:10:06.553
It's just the same,
you can use it within your HTML, or

148
00:10:06.553 --> 00:10:09.081
you can shape it with JavaScript and
AppendChild.

149
00:10:09.081 --> 00:10:10.980
So it's up to you, both will work.

150
00:10:10.980 --> 00:10:12.380
Does it make sense?

151
00:10:12.380 --> 00:10:17.166
So also, our home page,
let's go back to our home page.

152
00:10:17.166 --> 00:10:22.028
Our home page was also creating a movie
item component that was another component.

153
00:10:22.028 --> 00:10:27.914
So we already had that situation,
where we have, in this case,

154
00:10:27.914 --> 00:10:33.801
we are using JavaScript to create
that child custom component.

155
00:10:33.801 --> 00:10:38.743
In movie details, we are actually using
HTML because that child component,

156
00:10:38.743 --> 00:10:44.002
even if it's not working yet, it's
actually in the HTML, it's YouTube embed.

157
00:10:44.002 --> 00:10:48.313
So both will work, so they work
exactly the same as native elements.

158
00:10:48.313 --> 00:10:54.719
You can use JavaScript or
you can use HTML.

