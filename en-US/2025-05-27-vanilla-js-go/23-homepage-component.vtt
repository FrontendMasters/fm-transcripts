WEBVTT

1
00:00:00.000 --> 00:00:02.318
&gt;&gt; Maximiliano Firtman: So
now we have the template,

2
00:00:02.318 --> 00:00:06.858
the next step is to actually
write the JavaScript part,

3
00:00:06.858 --> 00:00:11.786
because every web component is
first a JavaScript class, so

4
00:00:11.786 --> 00:00:17.604
I need to create within public always
I'm going to create a new folder.

5
00:00:17.604 --> 00:00:22.832
Let's call it components, where we're
going to write all our components.

6
00:00:22.832 --> 00:00:27.091
So we're going to start creating
the home page component,

7
00:00:27.091 --> 00:00:30.328
homepage js and
components are classics, so

8
00:00:30.328 --> 00:00:34.841
I'm going to create a class and
I'm going to export the class so

9
00:00:34.841 --> 00:00:39.554
anyone can use it from the outside,
so we can call this homepage.

10
00:00:39.554 --> 00:00:45.232
And the important part here
is that we are going to

11
00:00:45.232 --> 00:00:50.496
extend from HTML element
that is what makes it

12
00:00:50.496 --> 00:00:56.174
an HTML element but
how does the browser know that

13
00:00:56.174 --> 00:01:01.318
I want this element to
respond to homepage?

14
00:01:01.318 --> 00:01:04.063
It It won't get it automatically so
to that,

15
00:01:04.063 --> 00:01:08.197
we need to call the custom elements
API after we set after or before.

16
00:01:08.197 --> 00:01:15.624
It doesn't matter the class, and
we're going to define a new element,

17
00:01:15.624 --> 00:01:20.145
home page, and
the class will be home page.

18
00:01:20.145 --> 00:01:24.751
Have in mind every time you
define a new custom element,

19
00:01:24.751 --> 00:01:28.780
it's mandatory to have a hyphen,
at least one.

20
00:01:28.780 --> 00:01:31.491
It's mandatory from the HTML spec so

21
00:01:31.491 --> 00:01:37.184
if you're going to create a custom
element, it shouldn't be just one word.

22
00:01:37.184 --> 00:01:41.156
You need at least two, so
you can use a prefix from your app,

23
00:01:41.156 --> 00:01:46.345
like up dash something, or, for
example, in this case, home page, okay.

24
00:01:46.345 --> 00:01:49.279
And now the next step is, okay,

25
00:01:49.279 --> 00:01:54.604
I need to do something when
I'm actually rendering this so

26
00:01:54.604 --> 00:01:59.831
I wanna get the template and
do something with it, okay.

27
00:01:59.831 --> 00:02:03.764
So for that but there are two
places where I can put some code,

28
00:02:03.764 --> 00:02:08.333
one is the constructor, and
the other one is the connected callback.

29
00:02:08.333 --> 00:02:13.155
Connected callback is a method
that we can override from

30
00:02:13.155 --> 00:02:16.952
the superclass be careful with the second,

31
00:02:16.952 --> 00:02:23.226
capital C the connected callback when
that element is actually in a DOM.

32
00:02:23.226 --> 00:02:28.979
It's actually pushed into the DOM,
it will execute that function,

33
00:02:28.979 --> 00:02:34.648
it's like an event, okay,
like a mounted event over our element.

34
00:02:34.648 --> 00:02:39.349
So and here I can just try to get
the template from the DOM, so

35
00:02:39.349 --> 00:02:41.803
I will say, get element by ID.

36
00:02:43.612 --> 00:02:48.389
&gt;&gt; Maximiliano Firtman: And I will get
the template home, I think that's how

37
00:02:48.389 --> 00:02:53.275
I call it, let me check,
yep, template_home, and

38
00:02:53.275 --> 00:02:58.067
now I am the element, okay,
so I am and DOM element.

39
00:02:58.067 --> 00:03:04.863
So this is my DOM, I'm an element, okay,
so I'm going to do it wrong first,

40
00:03:04.863 --> 00:03:08.838
so I can append child
to myself the template,

41
00:03:08.838 --> 00:03:12.731
this is not gonna work, by the way, right?

42
00:03:12.731 --> 00:03:18.234
It's wrong, but let me explain why but
first, this is kind of the idea,

43
00:03:18.234 --> 00:03:23.285
okay, so we grab the template and
then we use it in ourself, okay,

44
00:03:23.285 --> 00:03:29.811
the problem is that templates cannot be
used directly, because they are templates.

45
00:03:29.811 --> 00:03:33.741
They are like classes versus objects,
so they are not the instance,

46
00:03:33.741 --> 00:03:34.906
they are the class.

47
00:03:34.906 --> 00:03:40.475
They are the model to create
the instances, so what we need

48
00:03:40.475 --> 00:03:47.410
to do with that template is that we
need to call widget take its content and

49
00:03:47.410 --> 00:03:52.653
call clone node,template,content
dot clone node.

50
00:03:52.653 --> 00:03:57.495
And we need to specify if db is true,
actually,

51
00:03:57.495 --> 00:04:04.032
if inside that template there
are other web components if we want

52
00:04:04.032 --> 00:04:09.863
also to do the whole deep
creation of components, okay.

53
00:04:09.863 --> 00:04:12.978
For now, we can say true, and

54
00:04:12.978 --> 00:04:18.958
this is actually the content
that I can push into myself,

55
00:04:18.958 --> 00:04:23.209
not the template, okay, does it make.

56
00:04:24.247 --> 00:04:26.840
&gt;&gt; Maximiliano Firtman: We need
to do this on every component so

57
00:04:26.840 --> 00:04:28.628
if you want this is our op.

58
00:04:28.628 --> 00:04:32.004
So we can create a base class and
then call it and

59
00:04:32.004 --> 00:04:38.078
then create sub-classes inheriting from
that base class, because it's our op.

60
00:04:38.078 --> 00:04:42.847
This is JavaScript, not go we can doop,
we had inheritance It, and

61
00:04:42.847 --> 00:04:45.201
all that stuff, all that stuff.

62
00:04:45.201 --> 00:04:50.227
If I do that now and I refresh,
I'm still not seeing that,

63
00:04:50.227 --> 00:04:57.529
and it's expectable, you say maybe you
were not expecting that you see something.

64
00:04:57.529 --> 00:05:01.203
Because let's review what we have,

65
00:05:01.203 --> 00:05:06.772
we have an index html,
the index html has the home page,

66
00:05:06.772 --> 00:05:11.513
and we have already
registered that when we have

67
00:05:11.513 --> 00:05:16.269
that element we want it
to render this element.

68
00:05:16.269 --> 00:05:21.706
And this element will take the template
and push a clone of that template,

69
00:05:21.706 --> 00:05:26.188
an instance of that template into here,
so in the homepage.

70
00:05:26.188 --> 00:05:30.758
So actually, we should see something like
this, this part should be now a clone,

71
00:05:30.758 --> 00:05:34.947
should be inside homepage, but
it's not working, does anyone know why?

72
00:05:34.947 --> 00:05:37.647
You have an imported homepage anywhere.

73
00:05:37.647 --> 00:05:42.326
Exactly, the browser has
never imported homepage, so

74
00:05:42.326 --> 00:05:45.718
it has never executed this line, okay?

75
00:05:45.718 --> 00:05:50.306
So, this is important you have to
import somewhere somewhere in the in

76
00:05:50.306 --> 00:05:55.202
the dependency tree so for example i can
go to my app i'm i even i'm not using

77
00:05:55.202 --> 00:05:59.909
it from javascript right now just for
html but i need to import that now.

78
00:05:59.909 --> 00:06:07.941
So I will use this kind of import
I will say component homepage JS,

79
00:06:07.941 --> 00:06:14.074
if I do that at least
the browser will now recognize

80
00:06:14.074 --> 00:06:20.514
that components homepage
JS has something inside.

81
00:06:20.514 --> 00:06:27.156
Okay, another way instead of doing this,
and instead of creating the HTML,

82
00:06:27.156 --> 00:06:32.896
like this if I can go to app JS I mean,
you can do it however you want.

83
00:06:32.896 --> 00:06:38.162
I can go to app JS and I can say something
like, window, not document, window,

84
00:06:38.162 --> 00:06:43.047
add even listener, DOM, content loaded
do you all know what that means?

85
00:06:43.047 --> 00:06:44.975
&gt;&gt; Speaker 3: When it reads a page.

86
00:06:44.975 --> 00:06:48.859
&gt;&gt; Maximiliano Firtman: It will be
executed when the page was parsed and

87
00:06:48.859 --> 00:06:50.361
the DOM is ready.

88
00:06:50.361 --> 00:06:55.804
So here, I can go and
grab by query selector

89
00:06:55.804 --> 00:07:00.946
my main element and I can append a child,

90
00:07:00.946 --> 00:07:05.786
and I can say that I wanna create here,

91
00:07:05.786 --> 00:07:10.339
when I add here a new what home page.

92
00:07:10.339 --> 00:07:15.321
Now it's gonna import that
home page the classic

93
00:07:15.321 --> 00:07:20.182
way because now I'm doing
it from JavaScript,

94
00:07:20.182 --> 00:07:22.989
okay, does it make sense?

95
00:07:22.989 --> 00:07:27.399
That's another way to do the same thing,
but from JavaScript, so

96
00:07:27.399 --> 00:07:30.880
when the page loads,
I'm creating a new home page.

97
00:07:30.880 --> 00:07:34.965
And I'm appending that inside the main so

98
00:07:34.965 --> 00:07:40.097
if I wanna see if this is working,
I go here refresh,

99
00:07:40.097 --> 00:07:44.881
and I can see that is
rendering the template that I

100
00:07:44.881 --> 00:07:49.455
have just cloned and
pushed into this, okay?

101
00:07:49.455 --> 00:07:53.844
So that's roughly how
a web component works.

