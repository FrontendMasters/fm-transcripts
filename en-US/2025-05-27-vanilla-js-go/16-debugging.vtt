WEBVTT

1
00:00:00.000 --> 00:00:00.967
Will it work?

2
00:00:00.967 --> 00:00:02.224
Well, we'll see.

3
00:00:02.224 --> 00:00:07.128
If I open the terminal,
at least it says serving the files,

4
00:00:07.128 --> 00:00:10.966
which means there was
no compilation errors.

5
00:00:10.966 --> 00:00:15.222
Remember, if we do have
a compilation error, no,

6
00:00:15.222 --> 00:00:20.944
I have this if I save what will happen
is that I will see the error here, why?

7
00:00:20.944 --> 00:00:26.202
Because this is air, air is taking
the change and it's not gonna compile.

8
00:00:26.202 --> 00:00:30.781
So if it's working a save,
you will see building, running,

9
00:00:30.781 --> 00:00:33.874
serving device, so the server is there.

10
00:00:33.874 --> 00:00:38.287
So I'm going to the browser and

11
00:00:38.287 --> 00:00:42.199
trying our API movie stop.

12
00:00:42.199 --> 00:00:46.414
And I'm getting 404 and
you say, why I'm getting 404?

13
00:00:46.414 --> 00:00:49.467
This is something that we
have discussed before.

14
00:00:49.467 --> 00:00:52.761
The browser out of the trailing slash, and

15
00:00:52.761 --> 00:00:56.156
that was cached because
I used that before.

16
00:00:56.156 --> 00:00:58.235
That was caching my browser.

17
00:00:58.235 --> 00:01:00.943
We say, okay, let's remove that,
but if I remove it,

18
00:01:00.943 --> 00:01:03.726
it appears again because that
was cached by the browser.

19
00:01:03.726 --> 00:01:07.851
I need to clear the cache on my
browser to stop doing that, okay?

20
00:01:07.851 --> 00:01:13.958
So this is typically a problem when
you have those slashes of course.

21
00:01:13.958 --> 00:01:15.689
You can also change the URL.

22
00:01:15.689 --> 00:01:17.081
So here, try this, okay?

23
00:01:17.081 --> 00:01:21.203
Just to see if it's working
before clearing the cache.

24
00:01:21.203 --> 00:01:26.395
And if I refresh,
I'm getting an internal error and a null.

25
00:01:26.395 --> 00:01:28.148
So what to do?

26
00:01:28.148 --> 00:01:32.095
Well, first, if you look at the terminal,
I have nothing.

27
00:01:32.095 --> 00:01:37.758
So now I need to debug and
see where do I have a problem.

28
00:01:37.758 --> 00:01:44.556
So, who is sending that internal error?

29
00:01:44.556 --> 00:01:46.041
Let's try to debug.

30
00:01:46.041 --> 00:01:46.925
The handler.

31
00:01:46.925 --> 00:01:47.896
The handler.

32
00:01:47.896 --> 00:01:55.312
So, we go to the handler, and
it should be here, right?

33
00:01:55.312 --> 00:01:57.725
So this one is sending an internal error.

34
00:01:57.725 --> 00:02:01.838
Let's say Internal Error Getting Movies.

35
00:02:01.838 --> 00:02:06.680
If I save this, restart, you can see
the message is coming from there.

36
00:02:06.680 --> 00:02:12.571
So the handler is calling storage.

37
00:02:12.571 --> 00:02:16.371
So, somehow,
we need to go now to the storage.

38
00:02:16.371 --> 00:02:24.328
So we go to movie repository
to get top movies.

39
00:02:24.328 --> 00:02:29.577
Actually get top movies is just the query,
and it's calling get movies

40
00:02:29.577 --> 00:02:34.404
that is the one that is making the query,
the final query, okay?

41
00:02:34.404 --> 00:02:41.451
So this is the one that is trying to
make the query, and failing somehow.

42
00:02:41.451 --> 00:02:43.883
So we know that the problem is here, okay?

43
00:02:43.883 --> 00:02:45.219
Somewhere, well,

44
00:02:45.219 --> 00:02:50.256
actually the problem is that the query
right now has only one argument $1.

45
00:02:50.256 --> 00:02:54.893
But when we were playing answering
a question I added the second argument,

46
00:02:54.893 --> 00:02:59.824
remember this is the query and after the
query we have n possible arguments, and

47
00:02:59.824 --> 00:03:04.342
they should match the same amount of
arguments that you set in the query.

48
00:03:04.342 --> 00:03:08.716
So actually, if I remove that 10 and

49
00:03:08.716 --> 00:03:14.322
I go back here and refresh,
cross your fingers,

50
00:03:14.322 --> 00:03:18.576
I do have the list of 20 top movies.

51
00:03:18.576 --> 00:03:21.931
And what about random?

52
00:03:21.931 --> 00:03:25.282
If I try random, do I have the handler?

53
00:03:25.282 --> 00:03:26.753
Well, let's see first.

54
00:03:26.753 --> 00:03:28.476
So let's go, let's see.

55
00:03:28.476 --> 00:03:32.433
I have main.go, main.go have random.

56
00:03:32.433 --> 00:03:39.245
Well, let's keep the same standard for
the URLs with the training slash.

57
00:03:39.245 --> 00:03:44.363
So API movies random is set in
a handler at GetRandomMovies.

58
00:03:44.363 --> 00:03:51.311
GetRandomMovies is from here,
that is still the old one, okay?

59
00:03:51.311 --> 00:03:52.364
Dummy data.

60
00:03:52.364 --> 00:03:55.082
So I should remove this, and

61
00:03:55.082 --> 00:04:00.188
I should do something similar
from the previous one.

62
00:04:00.188 --> 00:04:04.256
So I will copy and paste,
don't do that at home, and

63
00:04:04.256 --> 00:04:07.843
then I will get the random movies now.

64
00:04:07.843 --> 00:04:12.506
And this is GetRandomMovies,
I think, okay,

65
00:04:12.506 --> 00:04:16.127
and this is Get Random Movies Error.

66
00:04:16.127 --> 00:04:20.734
So if everything works,
if I go now to random,

67
00:04:20.734 --> 00:04:24.883
I'm getting fear awake as the first one.

68
00:04:24.883 --> 00:04:30.519
If I refresh, now I'm getting Red Cliff,
and every time,

69
00:04:30.519 --> 00:04:37.186
I'm getting a new list of 20 movies
that are coming from the server.

70
00:04:37.186 --> 00:04:41.272
So, let's review where we are now.

71
00:04:41.272 --> 00:04:43.461
So we are the client now.

72
00:04:43.461 --> 00:04:49.747
So we have from HTTP, we are sending
a request to forward slash API,

73
00:04:49.747 --> 00:04:54.948
forward slash movies,
forward slash random, or top.

74
00:04:54.948 --> 00:04:59.202
The backend in Go is actually
creating everything here, so

75
00:04:59.202 --> 00:05:01.082
it's picking a handler.

76
00:05:01.082 --> 00:05:04.131
Is not the handler for the file system.

77
00:05:04.131 --> 00:05:08.837
It's actually a handler that is managing,
in this case,

78
00:05:08.837 --> 00:05:13.167
random or top movies,
receives a model repository.

79
00:05:13.167 --> 00:05:17.899
The model repository goes and
creates a query.

80
00:05:17.899 --> 00:05:22.291
So SQL came back as rows.

81
00:05:22.291 --> 00:05:29.565
The model repository converts that
into a slice of our model of movies.

82
00:05:29.565 --> 00:05:31.647
So an array of movies.

83
00:05:31.647 --> 00:05:35.392
So it's sending the array of
movies back to the handler.

84
00:05:35.392 --> 00:05:41.633
And the handler is finally converting
that array of movies into JSON and

85
00:05:41.633 --> 00:05:47.676
sending that back through HTTP to,
in this case the browser, okay?

86
00:05:47.676 --> 00:05:51.541
So we have the backend part working,
of course,

87
00:05:51.541 --> 00:05:55.032
there are still some missing services, but

88
00:05:55.032 --> 00:05:59.391
we have at least two services
that are working, okay?

89
00:05:59.391 --> 00:06:01.302
In the backend, side.

