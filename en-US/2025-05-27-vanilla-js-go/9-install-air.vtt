WEBVTT

1
00:00:00.152 --> 00:00:03.241
If I save this, okay,
I don't have any errors.

2
00:00:03.241 --> 00:00:07.386
I have a couple of warnings that we can
solve later, but I don't have any errors.

3
00:00:07.386 --> 00:00:10.457
So if I go to the browser and refresh,

4
00:00:10.457 --> 00:00:15.128
I'm still seeing 404, why,
does anyone know why?

5
00:00:15.128 --> 00:00:22.557
So it's /API, /movies, /Top.

6
00:00:22.557 --> 00:00:26.685
And if I go to my main.go,
it's exactly that URL,

7
00:00:26.685 --> 00:00:32.937
that path that I'm handling, but
it's not working, does anyone know why?

8
00:00:34.344 --> 00:00:35.426
&gt;&gt; Student: Restarted it?

9
00:00:35.426 --> 00:00:38.024
&gt;&gt; Maximiliano Firtman: I
need to restart the server.

10
00:00:38.024 --> 00:00:42.738
So now is the time that we realize
that keeping the server open and

11
00:00:42.738 --> 00:00:47.367
running manually is not really helpful,
because we will start

12
00:00:47.367 --> 00:00:52.459
complaining every time that we try
to refresh and it's not working.

13
00:00:52.459 --> 00:00:56.400
And that's because we didn't
actually restart the server.

14
00:00:56.400 --> 00:01:00.250
So I can do it manually,
but maybe it's time now to

15
00:01:00.250 --> 00:01:04.850
install one of the tools that
will help us with this, okay?

16
00:01:04.850 --> 00:01:07.673
So if you go to README,

17
00:01:07.673 --> 00:01:13.324
you have the link to go
directly to that part.

18
00:01:15.343 --> 00:01:18.766
&gt;&gt; Maximiliano Firtman: It's a five,
I think, yep, a five.

19
00:01:18.766 --> 00:01:24.082
We have the link to github to air and
it says,

20
00:01:24.082 --> 00:01:30.859
Live reload for Go apps,
that's exactly what we need.

21
00:01:30.859 --> 00:01:34.245
So this is a tool that
you need to install.

22
00:01:34.245 --> 00:01:37.909
It's a command line tool that you need
to install in your operating system.

23
00:01:37.909 --> 00:01:42.001
So it's not actually
a dependency of my project.

24
00:01:42.001 --> 00:01:46.902
It's a tool that we need to add
to the command line interface.

25
00:01:46.902 --> 00:01:52.071
In modern Go, there are many ways
that you can install this, but

26
00:01:52.071 --> 00:01:58.892
in modern Go, you can directly from go
1.23, so you need that version at least.

27
00:01:58.892 --> 00:02:02.966
You can use go Install,
directly from the common line.

28
00:02:02.966 --> 00:02:06.877
If you have a previous version of Go, you
need to find another way to install these

29
00:02:06.877 --> 00:02:09.121
tools that depends on
your operating system,

30
00:02:09.121 --> 00:02:11.209
so you can follow the instructions there.

31
00:02:11.209 --> 00:02:16.205
But if you are, I'm in 1.24, so
of course it's greater than 1.23.

32
00:02:16.205 --> 00:02:19.776
So I can go here, open my terminal Ctrl C,

33
00:02:19.776 --> 00:02:24.478
[INAUDIBLE] stop the server and
I can install this tool.

34
00:02:24.478 --> 00:02:29.762
If it works, it will download the tool,
and it will put the tool

35
00:02:29.762 --> 00:02:34.671
in a binaries folder inside go
that should be in your path.

36
00:02:34.671 --> 00:02:41.360
If everything works, you can now
type air and something will happen.

37
00:02:41.360 --> 00:02:49.361
You will see the AIR tool that is
saying by default, it's watching.

38
00:02:49.361 --> 00:02:54.017
Also, it's watching assets, hundreds,
so it's watching all my folders.

39
00:02:54.017 --> 00:02:55.193
So what's the deal?

40
00:02:55.193 --> 00:03:00.450
If I make any change in
any of my Go files, for

41
00:03:00.450 --> 00:03:05.282
example here, and now I changed this and

42
00:03:05.282 --> 00:03:08.282
another forward slash.

43
00:03:08.282 --> 00:03:13.869
If I save, you can see it recognized
that main.go has changed and

44
00:03:13.869 --> 00:03:16.924
it's building and running again.

45
00:03:16.924 --> 00:03:21.313
So automatically now I can go
to the browser, refresh and

46
00:03:21.313 --> 00:03:24.158
I will get the final version, okay?

47
00:03:24.158 --> 00:03:25.456
Does it make any sense?

48
00:03:25.456 --> 00:03:30.571
So now we won't run our
project using GoRun.

49
00:03:30.571 --> 00:03:34.109
We will run our project using air.

50
00:03:34.109 --> 00:03:40.300
Do you have any question on air, on using
air as your tool to run your server?

51
00:03:40.300 --> 00:03:45.959
We're still not done with air, why?

52
00:03:45.959 --> 00:03:50.627
Remember we have an HTML here,
so if I go and

53
00:03:50.627 --> 00:03:57.864
open localhost 8080,
&gt;&gt; Maximiliano Firtman: It says,

54
00:03:57.864 --> 00:03:59.033
Hello from Go.

55
00:03:59.033 --> 00:04:04.844
So now, If I'm going to that HTML,
remember it's in public,

56
00:04:04.844 --> 00:04:10.341
index.html, and I change this,
Hello from Go using Air.

57
00:04:10.341 --> 00:04:14.998
If I save the file,
the problem is that it recognizes that

58
00:04:14.998 --> 00:04:19.859
index.html has changed, and
it's also recompiling Go.

59
00:04:19.859 --> 00:04:24.545
And it doesn't make any sense.

60
00:04:24.545 --> 00:04:29.662
It is not the big problem, but
now every time we make a change in HTML,

61
00:04:29.662 --> 00:04:32.837
CSS, or JavaScript, so in the frontend,

62
00:04:32.837 --> 00:04:37.357
it's also recompiling the backend
which is not what I need.

63
00:04:37.357 --> 00:04:39.889
Because I'm not changing the backend,
okay, does that make sense?

64
00:04:39.889 --> 00:04:42.910
So we need to do something else, and

65
00:04:42.910 --> 00:04:46.855
we need to set up air to
just look into go files.

66
00:04:46.855 --> 00:04:50.263
Those are the only files
that I care about, okay?

67
00:04:50.263 --> 00:04:51.665
Does it make sense?

68
00:04:51.665 --> 00:04:58.113
So, to solve that problem, in the README
file, you already have the solution.

69
00:04:58.113 --> 00:05:02.582
We need to create a file .air, .toml, so

70
00:05:02.582 --> 00:05:07.935
I need to create a new file
in the root of my project.

71
00:05:07.935 --> 00:05:12.952
So in the root I will create a file,

72
00:05:12.952 --> 00:05:16.066
.air, .toml, and

73
00:05:16.066 --> 00:05:21.948
you already have here the configuration

74
00:05:21.948 --> 00:05:26.622
file that we can copy and paste.

75
00:05:26.622 --> 00:05:34.087
And if you look at it, what it says is
that it will include the extension go.

76
00:05:34.087 --> 00:05:38.911
So it's only watching go files, and
also I can exclude directories,

77
00:05:38.911 --> 00:05:41.788
and if you want, you can say public here.

78
00:05:41.788 --> 00:05:45.259
So you can add all the files that
you actually don't care about.

79
00:05:45.259 --> 00:05:48.947
So you know that I don't
have their go files, so

80
00:05:48.947 --> 00:05:53.297
even if I have a go file there,
I don't wanna look at it.

81
00:05:53.297 --> 00:05:56.659
So now, if you restart air.

82
00:05:56.659 --> 00:05:59.727
So if I restart air,

83
00:05:59.727 --> 00:06:05.510
now it's watching only for go files.

84
00:06:05.510 --> 00:06:09.721
Okay, because I do have
that file in the root.

85
00:06:12.487 --> 00:06:16.052
&gt;&gt; Maximiliano Firtman: Again, in this
case, we are having better performance,

86
00:06:16.052 --> 00:06:20.854
because if not, you change the HTML and
we will start working with the frontend

87
00:06:20.854 --> 00:06:24.080
in probably a couple of minutes,
or maybe one hour.

88
00:06:24.080 --> 00:06:28.994
And when we do that,
every time we make a change in JavaScript,

89
00:06:28.994 --> 00:06:34.555
I don't want the server to restart,
and if I do that, I will need to wait

90
00:06:34.555 --> 00:06:40.530
like two three seconds before reloading
the client, which makes no sense.

91
00:06:40.530 --> 00:06:43.299
Okay, make sense?

92
00:06:43.299 --> 00:06:47.716
So now we have air installed,

93
00:06:47.716 --> 00:06:53.025
we can try and see if we have our API.

94
00:06:53.025 --> 00:06:59.292
So if I go to local host
8080 api/movie/Top,

95
00:06:59.292 --> 00:07:04.112
I can see my dummy data, dummy movies.

