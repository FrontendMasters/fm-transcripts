WEBVTT

1
00:00:00.305 --> 00:00:04.729
&gt;&gt; Maximiliano Firtman: The next steps is
that I need to connect the filters, and

2
00:00:04.729 --> 00:00:07.753
when I'm searching, let me go back.

3
00:00:07.753 --> 00:00:09.868
Okay, I can go back.

4
00:00:09.868 --> 00:00:12.866
The interesting part is, if you go back,
it works, even it works for

5
00:00:12.866 --> 00:00:13.809
the search results.

6
00:00:13.809 --> 00:00:15.936
So everything is working as expected.

7
00:00:15.936 --> 00:00:19.077
So if I go back, I can change by a score.

8
00:00:19.077 --> 00:00:23.434
I'm not sure which one do you think
which one is going to be more popular or

9
00:00:23.434 --> 00:00:26.444
better of the three,
I know, okay, we'll see.

10
00:00:26.444 --> 00:00:31.332
So if I want to change the order or
change the genre, I need to do something.

11
00:00:31.332 --> 00:00:34.326
By the way, the genre is dynamic, so

12
00:00:34.326 --> 00:00:38.969
I need to actually call an API
to fill that select, okay?

13
00:00:38.969 --> 00:00:44.828
So we need to do that part, and
I will do that probably manually

14
00:00:44.828 --> 00:00:49.910
to explain some things that
maybe they are new to you.

15
00:00:49.910 --> 00:00:54.157
So I will go to, in this case, MoviesPage.

16
00:00:54.157 --> 00:00:59.098
And at some point,
in our connectedCallback,

17
00:00:59.098 --> 00:01:06.148
I should call a function that I
move to create, loadGenres, okay?

18
00:01:06.148 --> 00:01:09.432
And because I will need to go to
the network, I will make it async.

19
00:01:09.432 --> 00:01:14.609
Because I know then I will probably
need to go to the network.

20
00:01:14.609 --> 00:01:19.556
And I will first call the API, so

21
00:01:19.556 --> 00:01:23.410
await API.getGenres.

22
00:01:23.410 --> 00:01:27.075
If I don't have it, I need to create it.

23
00:01:27.075 --> 00:01:33.641
I think I don't have it, so
let's check if I'm getting into the API.

24
00:01:33.641 --> 00:01:39.359
Yep, I don't have it, so
I will just clone any of this,

25
00:01:39.359 --> 00:01:45.337
getGenres, and it was just genres,
as far as I remember.

26
00:01:45.337 --> 00:01:54.112
Let's try this, so
if I open localhost:8080/api/genres,

27
00:01:54.112 --> 00:01:57.599
I'm getting them, okay?

28
00:01:57.599 --> 00:02:00.924
So this is the URL that I want to execute.

29
00:02:00.924 --> 00:02:03.896
Remember, that's go to the backend,
the backend goes to handler,

30
00:02:03.896 --> 00:02:05.600
the handler goes to a data repository.

31
00:02:05.600 --> 00:02:08.779
Data repository go to a database,
makes a SQL query, and

32
00:02:08.779 --> 00:02:12.304
all the information is traveling
back to our JavaScript code.

33
00:02:12.304 --> 00:02:19.084
So back here, then I have the API,
yeah, it's fine.

34
00:02:19.084 --> 00:02:24.758
So let's go back here, and now that
we have them, I will get the select.

35
00:02:24.758 --> 00:02:27.873
The select is just the selector in HTML.

36
00:02:27.873 --> 00:02:32.777
So from my own HTML, I will just find

37
00:02:32.777 --> 00:02:38.347
the select with the ID filter, like so.

38
00:02:38.347 --> 00:02:41.788
And I wanna start, this is kind of weird,
but this is how it works.

39
00:02:41.788 --> 00:02:47.148
I'm going to create one first option
that will mimic what we have right now,

40
00:02:47.148 --> 00:02:49.421
like it says, filter by genre.

41
00:02:49.421 --> 00:02:55.923
Because by default,
there is no way to select a title.

42
00:02:55.923 --> 00:02:58.523
So you need to create one
option with that, okay?

43
00:02:58.523 --> 00:03:02.393
And then we're going to
loop through all of this.

44
00:03:06.344 --> 00:03:09.634
&gt;&gt; Maximiliano Firtman: And for each,
we're going to create an option,

45
00:03:09.634 --> 00:03:11.084
it's an option tag.

46
00:03:11.084 --> 00:03:17.121
So we're going to create an element
of type option, that's a tag name.

47
00:03:17.121 --> 00:03:21.894
We're going to set its value,
its value is important, I can use the ID.

48
00:03:21.894 --> 00:03:23.904
Because that's the argument,

49
00:03:23.904 --> 00:03:27.631
the value that we will send to
the server to filter by genre.

50
00:03:27.631 --> 00:03:33.891
And then the textContent
is gonna be the name.

51
00:03:35.355 --> 00:03:39.585
&gt;&gt; Maximiliano Firtman: No,
.name, like that, and

52
00:03:39.585 --> 00:03:44.501
I'm going to append that to this.

53
00:03:44.501 --> 00:03:47.713
So if this is working, if I reload,

54
00:03:47.713 --> 00:03:52.436
now I should see here genres,
I'm not seeing them.

55
00:03:52.436 --> 00:03:58.332
So let's look at the console, and
it says loadGenres is not defined.

56
00:03:58.332 --> 00:04:01.076
That's because,
without even looking at that,

57
00:04:01.076 --> 00:04:04.815
I think that the problem is,
it varies the order in which I did this.

58
00:04:04.815 --> 00:04:07.876
I first called the function,
and then created the function.

59
00:04:07.876 --> 00:04:11.750
Because I did that,
I forget that this is JavaScript, and

60
00:04:11.750 --> 00:04:15.953
when you have a class, and
we are in a class, I need to add this.

61
00:04:15.953 --> 00:04:20.438
If I code this in the reverse order,
I create the function, and then call it,

62
00:04:20.438 --> 00:04:23.342
Visual Studio Code will added this for
me, okay?

63
00:04:23.342 --> 00:04:28.232
But when I'm teaching, I'm changing
the natural order of things, and

64
00:04:28.232 --> 00:04:30.647
some things like this will happen.

65
00:04:30.647 --> 00:04:37.375
So now I can see all the genres
appearing there, so that works.

66
00:04:37.375 --> 00:04:40.283
Then, of course,
nothing happens when I click here, or

67
00:04:40.283 --> 00:04:43.873
it's trying to do something, but
it's not yet implemented, okay?

68
00:04:43.873 --> 00:04:46.636
And the same happens when you change sort.

69
00:04:46.636 --> 00:04:52.571
You can see it's actually calling two
functions, searchFilterChange and

70
00:04:52.571 --> 00:04:57.589
searchOrderChange, on app,
that they're not there, okay?

71
00:04:57.589 --> 00:05:02.039
That they will just change
the URL with other arguments.

72
00:05:02.039 --> 00:05:06.306
In that case, it will make another request
to the server with the right arguments.

73
00:05:06.306 --> 00:05:11.104
And we go to the web service,
the data, database,

74
00:05:11.104 --> 00:05:15.351
and the list of movies will flow back,
okay?

75
00:05:15.351 --> 00:05:17.964
So in that case, on the READMEon F3,

76
00:05:17.964 --> 00:05:22.717
we already have those two functions,
they're not so complicated.

77
00:05:22.717 --> 00:05:28.239
But let's just copy and
paste them within app.js.

78
00:05:28.239 --> 00:05:35.179
So these are other new functions for
app.js, like this.

79
00:05:35.179 --> 00:05:39.154
So search order change will
actually get the parameters,

80
00:05:39.154 --> 00:05:42.731
the other two parameters,
the genre and the query.

81
00:05:42.731 --> 00:05:47.755
And it will create the new URL,
and filter is getting the order.

82
00:05:47.755 --> 00:05:51.342
So in case you are filtering and
ordering at the same time, okay?

83
00:05:51.342 --> 00:05:56.584
It's doing this, and
sending the rest of the arguments, okay?

84
00:05:56.584 --> 00:06:02.292
So, those arguments are going
to the same /movies route,

85
00:06:02.292 --> 00:06:07.900
so it will actually make a new
navigation to the same page.

86
00:06:07.900 --> 00:06:11.581
Even if it's the same page,
it will be a new instance of the page.

87
00:06:11.581 --> 00:06:16.488
And this page,
if you look at the code, MoviesPage,

88
00:06:16.488 --> 00:06:22.721
it's actually right now reading
those parameters as well, okay?

89
00:06:22.721 --> 00:06:27.721
So if I refresh now, here,
now I'm getting an error,

90
00:06:27.721 --> 00:06:32.418
line 39,
probably have a coma thing in app.js.

91
00:06:32.418 --> 00:06:36.729
So, app.js, yeah, it's red, so,

92
00:06:36.729 --> 00:06:41.435
yeah, probably when maybe I'm missing,

93
00:06:41.435 --> 00:06:45.895
maybe I didn't select the whole thing.

94
00:06:45.895 --> 00:06:49.065
So I'm missing a code block and a comma.

95
00:06:49.065 --> 00:06:52.530
By the way, in JavaScript, remember,
you can have trailing commas,

96
00:06:52.530 --> 00:06:53.410
the same as in Go.

97
00:06:53.410 --> 00:06:55.008
So you can always have trailing commas.

98
00:06:55.008 --> 00:06:57.438
It's a good idea when you
are reordering things.

99
00:06:57.438 --> 00:07:01.990
Because then you don't need to
remember if you have the coma or not.

100
00:07:01.990 --> 00:07:06.115
Okay, so we are back,
Back to the Future, Filter by Genre.

101
00:07:06.115 --> 00:07:11.496
Well, actually, if you say fantasy, yeah,
there are no fantasy on Back to the movie,

102
00:07:11.496 --> 00:07:15.233
I guess they probably science fiction,
not fantasy, yep.

103
00:07:15.233 --> 00:07:21.536
And also, now they are searched by
popularity, let's say by a score.

104
00:07:21.536 --> 00:07:25.203
It's well, the same,
let's see if it's working, Release Date,

105
00:07:25.203 --> 00:07:26.985
well, it's probably the same.

106
00:07:26.985 --> 00:07:29.671
No, because I'm using the reverse order.

107
00:07:29.671 --> 00:07:32.954
So Back to the Future III is
the first one, okay, and by name?

108
00:07:32.954 --> 00:07:35.370
Well, they have mostly the same name.

109
00:07:35.370 --> 00:07:42.179
But if you search Batman movies, okay, now
we can change the order, it seems working.

110
00:07:42.179 --> 00:07:50.265
And if I filter by comedy, I only have
the Batman from the 60s, so it's working.

111
00:07:50.265 --> 00:07:53.715
So the design pattern for
ordering and filtering, and

112
00:07:53.715 --> 00:07:57.923
also for
even if you're not doing in this course.

113
00:07:57.923 --> 00:08:02.430
But you can add later, it's just
adding more arguments to the URL, and

114
00:08:02.430 --> 00:08:04.185
it works with the Back button.

115
00:08:04.185 --> 00:08:09.412
So I can go back, and you can see I'm
going back with my whole navigation.

116
00:08:09.412 --> 00:08:15.819
Maybe you can decide if changing the order
should create a new history or not.

117
00:08:15.819 --> 00:08:19.592
Remember, we have a quick
way to disable that.

118
00:08:19.592 --> 00:08:23.570
Some people think that if you change the
order, maybe it should be the same page,

119
00:08:23.570 --> 00:08:25.980
so you shouldn't go back
to the previous order.

120
00:08:25.980 --> 00:08:27.190
But it's up to you.

121
00:08:27.190 --> 00:08:32.220
If you wanna change how that works,
you just change when you call router go,

122
00:08:32.220 --> 00:08:37.897
we add the second argument false, and it's
not going to add it to the history, okay?

123
00:08:37.897 --> 00:08:40.445
Does it make sense?

124
00:08:40.445 --> 00:08:46.252
Do you have any question on searching,
filtering?

125
00:08:46.252 --> 00:08:48.915
&gt;&gt; Speaker 2: So
when it does the initial page load,

126
00:08:48.915 --> 00:08:51.672
does it sort by popularity by default?

127
00:08:51.672 --> 00:08:53.508
&gt;&gt; Maximiliano Firtman: Yeah,
and where is that?

128
00:08:53.508 --> 00:08:58.226
Well, actually, how default works,
because it is interesting.

129
00:08:58.226 --> 00:09:03.203
If I reload this, you can see that
Science Fiction is pre-selected, and

130
00:09:03.203 --> 00:09:05.059
also Sort by Release Date.

131
00:09:05.059 --> 00:09:08.284
It actually happens that it
matches the order I have here and

132
00:09:08.284 --> 00:09:12.683
the genre I have here, I guess, that's
the idea, okay, for science fiction.

133
00:09:12.683 --> 00:09:14.876
So how is that working?

134
00:09:14.876 --> 00:09:17.099
How is that pre-selected?

135
00:09:17.099 --> 00:09:23.441
So if you actually inspect this,
when you inspect the options,

136
00:09:23.441 --> 00:09:27.559
okay, you don't see anything special.

137
00:09:27.559 --> 00:09:32.403
So how is that science fiction
pre-selected if nothing appears there

138
00:09:32.403 --> 00:09:33.476
as different?

139
00:09:33.476 --> 00:09:38.748
Okay, well, this is because we
are setting the value of the select.

140
00:09:38.748 --> 00:09:40.880
That's why the value is important.

141
00:09:40.880 --> 00:09:45.197
The value of the options will
match the value of the select.

142
00:09:45.197 --> 00:09:50.471
So when we see MoviesPage,
I think here, I'm saying,

143
00:09:50.471 --> 00:09:55.520
if I do have an order selected,
I'm setting the value

144
00:09:55.520 --> 00:10:01.490
of the select order with that order,
and the same with filter.

145
00:10:01.490 --> 00:10:07.986
So in that case, because we do
have genre=18 from JavaScript,

146
00:10:07.986 --> 00:10:13.096
we're actually changing
the filter value to 18.

147
00:10:13.096 --> 00:10:16.609
So that's why it's actually
selecting science fiction.

148
00:10:16.609 --> 00:10:20.995
But if I go and
say document.querySelector,

149
00:10:20.995 --> 00:10:25.156
we change the filter, that's the select,

150
00:10:25.156 --> 00:10:28.878
and we change the value to another one.

151
00:10:28.878 --> 00:10:34.819
I don't remember which IDs do we have,
like 4.

152
00:10:34.819 --> 00:10:36.813
It's actually changing it from there,
right?

153
00:10:36.813 --> 00:10:37.735
Can you see that?

154
00:10:37.735 --> 00:10:42.895
It's not reloading the page,
because I didn't change it from the UI,

155
00:10:42.895 --> 00:10:46.081
so it's not triggering the change, okay?

156
00:10:46.081 --> 00:10:51.174
So changing the value from JavaScript
is not triggering onChange in the UI.

157
00:10:51.174 --> 00:10:56.443
So it's not triggering the reload,
as if I'm doing

158
00:10:56.443 --> 00:11:01.370
like this,
that is actually reloading, okay?

159
00:11:01.370 --> 00:11:02.493
Does it make sense?

160
00:11:02.493 --> 00:11:07.339
So now we have a lot here,
we have the router working,

161
00:11:07.339 --> 00:11:12.849
we can get into the details of a movie,
we can search movies.

162
00:11:12.849 --> 00:11:18.480
Even with any letters, pla,
something appears with pla, okay?

163
00:11:18.480 --> 00:11:23.356
We can filter all
the fantasy movies with pla,

164
00:11:23.356 --> 00:11:26.731
we can change the order, okay,

165
00:11:26.731 --> 00:11:31.245
so that's actually working pretty well.

