WEBVTT

1
00:00:00.000 --> 00:00:02.530
&gt;&gt; Shirley Wu: And
of course the D3 API, so

2
00:00:02.530 --> 00:00:07.182
yesterday I went through
this API a little bit also.

3
00:00:07.182 --> 00:00:11.716
But I want to talk more
specifically about some of these

4
00:00:11.716 --> 00:00:15.068
sections that are relevant to us today,

5
00:00:15.068 --> 00:00:20.294
in terms of calculating layouts and
translating that design,

6
00:00:20.294 --> 00:00:25.734
those data, into X, Y positions,
into SVG path streams, etc.

7
00:00:25.734 --> 00:00:30.621
And so I think of the first two columns
that I call data preparation and

8
00:00:30.621 --> 00:00:32.670
layout calculation.

9
00:00:32.670 --> 00:00:36.770
I think of that as all of
the modules that help me

10
00:00:36.770 --> 00:00:40.849
translate raw data into what SVG
needs to draw onto the screen.

11
00:00:43.670 --> 00:00:48.690
And whatever the output of those
layout calculations, those are what

12
00:00:48.690 --> 00:00:54.640
I am plugging into that third category
of I call it DOM manipulation.

13
00:00:54.640 --> 00:01:00.536
And that's the section of D3 that
helps you with data selection,

14
00:01:00.536 --> 00:01:07.697
data binding and exit, kinda what people
think about when they think about D3.

15
00:01:07.697 --> 00:01:11.171
So taking the output of this section and

16
00:01:11.171 --> 00:01:17.091
I'll put it into the third column
to help me draw the SVG elements.

17
00:01:17.091 --> 00:01:21.474
So I want to concentrate on those
first two columns because these

18
00:01:21.474 --> 00:01:26.276
are the columns that will help us
translate that design into the code.

19
00:01:26.276 --> 00:01:32.139
And sometimes when we have a design,
all we need are actually the scales

20
00:01:32.139 --> 00:01:37.139
down there to help us get from
our raw data into screenspace.

21
00:01:37.139 --> 00:01:40.296
Sometimes maybe with the bars and
the rectangles we had.

22
00:01:40.296 --> 00:01:44.203
Sometimes all we need is to go from
each of those data to roots and

23
00:01:44.203 --> 00:01:49.480
whatever the channel it happens to be,
X, Y positions, colors, sizes, etc.

24
00:01:49.480 --> 00:01:52.030
Sometimes all we need are scales.

25
00:01:52.030 --> 00:01:59.020
But other times we might
want to put the data

26
00:01:59.020 --> 00:02:04.550
into these layouts and
you might need calculations,

27
00:02:04.550 --> 00:02:08.520
specifically calculations
that D3 already shifts with.

28
00:02:09.610 --> 00:02:16.010
And so these layout calculations
will output x/y positions for us.

29
00:02:16.010 --> 00:02:22.000
So some of these are like,
D3 will help you with histograms

30
00:02:25.030 --> 00:02:30.652
helping you calculate, kind of the height
of each of those bars or the X,

31
00:02:30.652 --> 00:02:36.610
Y positions,
sorry the X positions of each of the bins.

32
00:02:36.610 --> 00:02:42.160
It will help you calculate the X,
Y position of a network diagrams and

33
00:02:42.160 --> 00:02:48.210
they use this thing called
I think it's like force

34
00:02:49.980 --> 00:02:53.560
layout algorithm and it helps you.

35
00:02:53.560 --> 00:02:58.960
If you give it an array of nodes,
an array of links, it will go and

36
00:02:58.960 --> 00:03:04.160
calculate X, Y positions for
each of the nodes laid out in such

37
00:03:04.160 --> 00:03:10.460
a way that usually you'll specify for
them not to overlap with each other,

38
00:03:10.460 --> 00:03:16.162
or keep certain distances away
from each other if they're linked.

39
00:03:16.162 --> 00:03:20.370
Or repel themselves apart
if they're not linked, etc.

40
00:03:20.370 --> 00:03:26.079
And so D3 force is one of my favorite
modules just because it shifts with so

41
00:03:26.079 --> 00:03:29.500
much functionality that's so versatile.

42
00:03:29.500 --> 00:03:33.486
Sometimes I won't even use them for
node and

43
00:03:33.486 --> 00:03:37.373
link diagrams, these network diagrams.

44
00:03:37.373 --> 00:03:41.382
One of the examples of how you can
use force is these bee swarm plots.

45
00:03:41.382 --> 00:03:46.011
If you want to be grouping individual
elements, these individual marks,

46
00:03:46.011 --> 00:03:47.189
these are points.

47
00:03:47.189 --> 00:03:52.304
Individual marks into kind of I guess-
&gt;&gt; Speaker 2: Those

48
00:03:52.304 --> 00:03:56.617
would be groupings of the graph nodes,
right?

49
00:03:56.617 --> 00:04:00.361
On the bottom [INAUDIBLE]?
&gt;&gt; Shirley Wu: In the sense that it just

50
00:04:00.361 --> 00:04:03.649
graft across whatever this X axis is,

51
00:04:03.649 --> 00:04:08.624
I think they look like
something that's quantitative.

52
00:04:08.624 --> 00:04:14.169
So some sort of a quantitative data
attribute and then you can give it

53
00:04:14.169 --> 00:04:19.909
an exposition and you can just tell
it don't overlap with each other,

54
00:04:19.909 --> 00:04:24.990
but it will kinda group around
that quantitative attribute.

55
00:04:24.990 --> 00:04:32.140
And so D3 force has really great function,
or a lot of really great functionalities.

56
00:04:32.140 --> 00:04:37.540
So that's one of the ones that I recommend
skimming through the documentation.

57
00:04:39.540 --> 00:04:44.230
And, of course, the hierarchy
section of the layout calculation,

58
00:04:44.230 --> 00:04:46.270
are really great also.

59
00:04:46.270 --> 00:04:52.760
They'll help you draw trees, or they'll
help you calculate X, Y positions for

60
00:04:52.760 --> 00:04:57.829
each of the notes in the trees,
it will help you with tree maps.

61
00:04:57.829 --> 00:05:00.187
Partitions and circle packs.

62
00:05:00.187 --> 00:05:08.485
So those are some of the possibilities.

63
00:05:08.485 --> 00:05:12.452
And then there are some layout
calculations that will help generate path

64
00:05:12.452 --> 00:05:13.502
commands for you.

65
00:05:13.502 --> 00:05:17.894
And so these are strings, so for example,

66
00:05:17.894 --> 00:05:25.469
chord will generate the path command
string to draw each of these chords.

67
00:05:25.469 --> 00:05:30.860
And so that's probably an arc
command with a curve command and

68
00:05:30.860 --> 00:05:33.666
another arc and another curve.

69
00:05:33.666 --> 00:05:40.470
And so you don't have to kinda figure
out how to write these curves.

70
00:05:40.470 --> 00:05:45.480
You can just give it your data, I think
you can just give it your source target

71
00:05:45.480 --> 00:05:52.810
and start angle, end angle I think and
then it will generate

72
00:05:52.810 --> 00:05:58.210
the string you need to draw this path
in SVG, so that's really convenient.

73
00:05:58.210 --> 00:06:02.755
Of course it also has geo capabilities so

74
00:06:02.755 --> 00:06:08.237
if you have like geo JSON or
TopoJSON that has kind

75
00:06:08.237 --> 00:06:15.198
of the geometry of each of these,
I think these are counties.

76
00:06:15.198 --> 00:06:20.077
And so D3 would convert from,
usually it's an array, I think.

77
00:06:20.077 --> 00:06:24.784
I don't do geo as often, but
I think it's an array of latitude and

78
00:06:24.784 --> 00:06:30.090
longitude points that make up kind of
the shape of each of these counties,

79
00:06:30.090 --> 00:06:32.845
or each of these countries or states.

80
00:06:32.845 --> 00:06:37.932
And then D3 will help you
map from that latitude and

81
00:06:37.932 --> 00:06:42.436
longitude to an X,
Y position on the screen.

82
00:06:42.436 --> 00:06:46.967
And then shapes helps you draw like
archs so archs are a lot of times,

83
00:06:46.967 --> 00:06:51.100
you'll see them be used for
like pie charts and donut charts,

84
00:06:51.100 --> 00:06:56.290
lines will help you draw line charts and
areas will help you draw area charts.

85
00:06:57.480 --> 00:07:02.728
So a lot, a lot of options,
a lot of ways that D3

86
00:07:02.728 --> 00:07:09.962
will help you calculate layouts,
and help you calculate paths.

87
00:07:09.962 --> 00:07:14.255
And I just want to go
through maybe one of them.

88
00:07:14.255 --> 00:07:19.421
And I think a D3 port is really intresting
just to show you how to look into

89
00:07:19.421 --> 00:07:24.841
the documentation and figure out what is
needed as the input to give to D3 and

90
00:07:24.841 --> 00:07:27.195
what is needed as output.

91
00:07:27.195 --> 00:07:32.428
So for example, for chord and
the chord is kind of,

92
00:07:32.428 --> 00:07:37.801
this one that we saw, so
to draw one of these chords.

93
00:07:37.801 --> 00:07:41.404
So if we want to get the path string,

94
00:07:41.404 --> 00:07:46.090
we want to use d3.ribbon,
and in that case,

95
00:07:46.090 --> 00:07:51.856
it expects an object that has
within it a nested source and

96
00:07:51.856 --> 00:07:58.990
target and then you give it a start angle,
end angle, and radius.

97
00:07:58.990 --> 00:08:04.860
And then you pass that into
the D3 Ribbon function and

98
00:08:04.860 --> 00:08:10.209
it will give you back
the string that you will then

99
00:08:10.209 --> 00:08:15.958
plug into your SVG path that
will help you draw that.

100
00:08:15.958 --> 00:08:23.673
And then there are some functions in
D3 that will help prepare your data for

101
00:08:23.673 --> 00:08:28.092
the layout calculations to draw into SVG.

102
00:08:28.092 --> 00:08:33.930
[LAUGH] So some of these are,
this chord, D3 chord.

103
00:08:33.930 --> 00:08:37.160
This, let me show you right now,
we'll prepare you.

104
00:08:37.160 --> 00:08:40.660
So sometimes maybe you don't
want to manually calculate

105
00:08:40.660 --> 00:08:42.940
this data structure yourself.

106
00:08:42.940 --> 00:08:47.826
There's a helper function,
that's D3 chord that's just

107
00:08:47.826 --> 00:08:52.515
if you give it an array of arrays,
it will give you back that

108
00:08:52.515 --> 00:08:57.326
exact data structure you need
to calculate those ribbons.

109
00:08:57.326 --> 00:09:01.287
And so
if you just give it that array of arrays,

110
00:09:01.287 --> 00:09:08.004
it will give you back the source target
with the star angle and angle and value.

111
00:09:08.004 --> 00:09:12.015
So that's extremely helpful so
you don't even have to do that part of

112
00:09:12.015 --> 00:09:15.970
the data calculation yourself,
you just need to give it your data.

113
00:09:17.750 --> 00:09:22.330
And so
the similar things happen with D3, so

114
00:09:22.330 --> 00:09:29.910
nests help you prepare your data for
D3 hierarchy, layouts that have hierarchy.

115
00:09:29.910 --> 00:09:35.101
And of course,
hierarchy also helps with that and

116
00:09:35.101 --> 00:09:38.437
there's also pies that help and

117
00:09:38.437 --> 00:09:43.625
get your data ready to plug
into arcs that will then

118
00:09:43.625 --> 00:09:48.585
generate a path string
to draw onto the screen.

119
00:09:48.585 --> 00:09:53.048
But the reason why I wanted to share
all of this with you and go into so

120
00:09:53.048 --> 00:09:57.910
much detail is, first of all, I think
is really great to kind of just know

121
00:09:57.910 --> 00:10:01.208
all of the different
layouts that D3 offer you.

122
00:10:01.208 --> 00:10:06.057
So that you can use them if you
want to make a core diagram,

123
00:10:06.057 --> 00:10:11.513
if you want to make a tree,
if you want to make a network diagram.

124
00:10:11.513 --> 00:10:17.174
But the most important reason why I
want to share these with you is so

125
00:10:17.174 --> 00:10:22.126
that you know how to use them
in an unconventional way, and

126
00:10:22.126 --> 00:10:26.747
by that I mean there is
the examples that D3 gives us.

127
00:10:26.747 --> 00:10:31.420
And so kind of like the prescribed
examples of how they recommend that

128
00:10:31.420 --> 00:10:32.860
this function is used.

129
00:10:32.860 --> 00:10:38.800
But then, if you can think about how,
given this input, I get this output,

130
00:10:38.800 --> 00:10:44.860
so how can I manipulate that to help
me calculate the layout that I want?

131
00:10:44.860 --> 00:10:48.530
And so I'll go back to
the forest diagram example.

132
00:10:48.530 --> 00:10:50.898
So the reason why I think this is so

133
00:10:50.898 --> 00:10:56.495
flexible is because I'll often use it
in ways that aren't in their examples.

134
00:10:56.495 --> 00:11:00.541
And I'll use it sometimes
to just calculate and

135
00:11:00.541 --> 00:11:03.583
make sure my notes don't overlap.

136
00:11:03.583 --> 00:11:08.379
And sometimes I'll use it as just a way to
have nodes bounce around on the screen.

137
00:11:08.379 --> 00:11:13.074
There was one time I did this for
[NOISE] this

138
00:11:13.074 --> 00:11:19.514
visualization where I took
all of the lines in Hamilton,

139
00:11:19.514 --> 00:11:24.747
the musical Hamilton and
this adds absolutely

140
00:11:24.747 --> 00:11:29.711
no value to the data visualization itself,

141
00:11:29.711 --> 00:11:34.698
the fact that it bounces
around the screen.

142
00:11:34.698 --> 00:11:38.018
But it gets that reaction.

143
00:11:38.018 --> 00:11:40.318
People see and then they're like,
this is really fun.

144
00:11:40.318 --> 00:11:44.982
And my goal for
it was to get people to keep scrolling

145
00:11:44.982 --> 00:11:49.113
down the screen and
motivate them to do that.

146
00:11:49.113 --> 00:11:52.724
And this is all done with
the force layout, and

147
00:11:52.724 --> 00:11:58.940
I just let it run a simulation where they
bounce off of each other every time.

148
00:11:58.940 --> 00:12:06.234
And every time the reader scrolls,
I let them rerun the simulation.

149
00:12:06.234 --> 00:12:11.895
But that's not one of the ways that D3
encourages you to use the force layout.

150
00:12:11.895 --> 00:12:17.542
I read through the documentation, and
I was like, I can use it in this way.

151
00:12:17.542 --> 00:12:22.562
And, again,
this is also the force layout where

152
00:12:22.562 --> 00:12:28.807
I grouped each of those lines by
the song that it was from, and

153
00:12:28.807 --> 00:12:34.090
so for each song,
I calculate it an X, Y position.

154
00:12:34.090 --> 00:12:40.564
And then I told D3 force that I want all
of these news to go towards the group,

155
00:12:40.564 --> 00:12:46.850
the song that they belong too the X,
Y position that they belong to.

156
00:12:46.850 --> 00:12:50.950
But I don't want them to
overlap each other at all.

157
00:12:50.950 --> 00:12:54.840
So give them like a two pixel buffer
in between or something like that.

158
00:12:54.840 --> 00:12:59.510
So go towards this X, Y position but
make sure don't overlap.

159
00:12:59.510 --> 00:13:03.485
And this is how I was
able to get a really nice

160
00:13:03.485 --> 00:13:07.808
layout of all the nodes
grouped by their song.

161
00:13:07.808 --> 00:13:14.695
And this is like a variant of kind of the
beast worm plot that I showed you earlier.

162
00:13:14.695 --> 00:13:19.124
I mean it's not one of
the examples that's shown but

163
00:13:19.124 --> 00:13:23.260
it's not a far leap from
those examples either.

164
00:13:24.330 --> 00:13:30.460
But I just want to show you these
examples to encourage you to kinda,

165
00:13:30.460 --> 00:13:35.760
I guess the cheesy way to say it is
think outside the box [LAUGH] with

166
00:13:35.760 --> 00:13:42.260
these layouts, kind of think about
the possibilities there are.

167
00:13:42.260 --> 00:13:46.629
Another example I want to show you is, so

168
00:13:46.629 --> 00:13:51.641
Nadieh did this thing,
I think [SOUND] she ended

169
00:13:51.641 --> 00:13:57.826
up calling this layout I think Loom,
I can't remember.

170
00:13:57.826 --> 00:14:01.019
But you might recognize this layout

171
00:14:01.019 --> 00:14:06.170
as very similar to the quart
diagram we saw earlier.

172
00:14:06.170 --> 00:14:11.176
But what she wanted wasn't
just the quart diagram.

173
00:14:11.176 --> 00:14:14.176
Where a quart diagram has a source and
a destination.

174
00:14:14.176 --> 00:14:15.650
What she wanted.

175
00:14:15.650 --> 00:14:17.580
And this particular visualization,

176
00:14:17.580 --> 00:14:21.440
this is a visualization of
Lord of the Rings, the movies.

177
00:14:21.440 --> 00:14:26.430
And it's the characters and I think it's

178
00:14:27.820 --> 00:14:32.380
all of the places in Middle-Earth
that they had lines.

179
00:14:32.380 --> 00:14:40.190
And so what she wanted was like she wanted
all of the characters to be in the middle.

180
00:14:40.190 --> 00:14:44.440
And she wanted the places
to surround them.

181
00:14:44.440 --> 00:14:47.170
The places that had lines,
she wanted to surround them.

182
00:14:47.170 --> 00:14:54.730
And so she was like, this thing I sketched
out, it reminds me of a D3 chord diagram.

183
00:14:56.820 --> 00:15:02.730
So let me see if I can
mess around with the code

184
00:15:02.730 --> 00:15:06.080
so that it helps generate
the layout I want.

185
00:15:06.080 --> 00:15:10.972
So she ended up messing around with I
think the chord ribbon function I showed

186
00:15:10.972 --> 00:15:11.899
you earlier.

187
00:15:11.899 --> 00:15:16.776
And she messed around with it,
messed around with the path strings,

188
00:15:16.776 --> 00:15:20.318
the curve commands,
until she got to this point.

189
00:15:20.318 --> 00:15:26.875
So what I would encourage is
like when you sketch your ideas,

190
00:15:26.875 --> 00:15:33.946
I knew that I said to look at
different parts of the D3 examples and

191
00:15:33.946 --> 00:15:38.850
D3 gallery to get your inspiration.

192
00:15:38.850 --> 00:15:43.470
But oftentimes I would encourage you to,

193
00:15:43.470 --> 00:15:48.540
once you've seen enough visualizations,
once you kinda just

194
00:15:48.540 --> 00:15:52.975
let yourself on the daily kind
of just be on the lookout for

195
00:15:52.975 --> 00:15:57.331
new visualizations that are put out
there and let yourself follow those and

196
00:15:57.331 --> 00:16:01.295
kind of think about, this visualization
did this part really well, or

197
00:16:01.295 --> 00:16:03.845
this visualization didn't do this so well.

198
00:16:03.845 --> 00:16:07.475
After you get a good sense of the kinds
of visualizations that other people

199
00:16:07.475 --> 00:16:14.100
are producing, when you start sketching,
don't look at any other places.

200
00:16:14.100 --> 00:16:15.650
Don't look at the D3 gallery.

201
00:16:15.650 --> 00:16:19.800
Just like sketch out whatever
idea is in your mind

202
00:16:20.880 --> 00:16:23.760
that you think will best
showcase this data.

203
00:16:23.760 --> 00:16:28.490
This one, like she didn't go
through looking at the D3 gallery

204
00:16:28.490 --> 00:16:33.180
being like, I think a quart diagram
would be great to show this movie.

205
00:16:33.180 --> 00:16:38.110
She's like, I really wanna show
where people are in Middle Earth

206
00:16:38.110 --> 00:16:42.980
when they have their lines and so
maybe these other shapes I can have.

207
00:16:42.980 --> 00:16:47.872
And maybe these are some
other ideas I have.

208
00:16:47.872 --> 00:16:52.797
And then once you sketch that out,
she was like,

209
00:16:52.797 --> 00:16:57.725
that looks like a quote diagram,
and she actually has

210
00:16:57.725 --> 00:17:02.871
a write up of how she started
adjusting the algorithm for

211
00:17:02.871 --> 00:17:07.610
D3 ruben to come to the shape
that she finally got.

212
00:17:10.220 --> 00:17:15.635
So I highly, highly encourage you to,
when you're doing the design,

213
00:17:15.635 --> 00:17:20.598
just design it based on what you
think will reflect the data best or

214
00:17:20.598 --> 00:17:25.131
the message that you want to
communicate through the best.

215
00:17:25.131 --> 00:17:30.317
And then go back into D3 or
go back into any other layout libraries

216
00:17:30.317 --> 00:17:35.408
that you might know and see if you
can adjust it to fit your needs or

217
00:17:35.408 --> 00:17:39.084
or even if you have to
rewrite it from scratch or

218
00:17:39.084 --> 00:17:43.517
like write some sort of layout
algorithm from scratch,

219
00:17:43.517 --> 00:17:48.003
maybe that's what you need to do,
yeah, creativity.

220
00:17:48.003 --> 00:17:52.847
And then, finally, I want to share with
you some of the data visualizations

221
00:17:52.847 --> 00:17:55.885
specific interactions
that I'm a huge fan of.

222
00:17:55.885 --> 00:17:59.480
These are parts of the D3 library.

223
00:17:59.480 --> 00:18:03.500
I will come back to them very often
to do specific data visualizations,

224
00:18:03.500 --> 00:18:04.979
specific interactions.

225
00:18:04.979 --> 00:18:09.100
Like being able to brush through filter,
being able to drag things

226
00:18:09.100 --> 00:18:13.620
around using Quang Tri,
to find the nearest point quickly.

227
00:18:13.620 --> 00:18:18.540
Given an X, Y coordinate, using Voronoi to
be able to do hover interaction on really

228
00:18:18.540 --> 00:18:23.600
small little points, or
being able to zoom a pan, a map.

229
00:18:23.600 --> 00:18:29.070
There's a lot of choices here also
that once you've kinda figured out

230
00:18:29.070 --> 00:18:34.698
your layout and you've kinda drawn
your things, to add that extra

231
00:18:34.698 --> 00:18:40.730
layer that these are things that
I come back to quite often.

