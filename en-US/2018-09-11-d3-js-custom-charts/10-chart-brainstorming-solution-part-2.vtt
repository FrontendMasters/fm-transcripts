WEBVTT

1
00:00:00.020 --> 00:00:04.330
&gt;&gt; Speaker 1: Let's kind of
figure out how to translate this

2
00:00:04.330 --> 00:00:08.620
into basically Vega-Lite language.

3
00:00:08.620 --> 00:00:14.010
So each of the marks, so these are bars.

4
00:00:16.110 --> 00:00:21.810
So we would tell Vega-Lite that the mark
is bars and then in terms of encoding,

5
00:00:26.060 --> 00:00:31.510
because we want it to be on the x axis,
we want it to be.

6
00:00:31.510 --> 00:00:33.222
Do you want it to be IMDB rating.

7
00:00:33.222 --> 00:00:38.657
Do you have any preference of mediscore,
metacrique, rotten tomato.

8
00:00:38.657 --> 00:00:46.088
Should we do IMDB rating, well,
let's do metascore, cuz it's out of 100.

9
00:00:46.088 --> 00:00:48.150
And maybe it would give us
a little bit more granularity.

10
00:00:48.150 --> 00:00:51.739
But I think when we're
actually doing this,

11
00:00:51.739 --> 00:00:54.855
we would kind of think through about and

12
00:00:54.855 --> 00:01:00.915
do research about like what each of
these scores taken into consideration.

13
00:01:00.915 --> 00:01:05.860
And then, IMDB rating is probably
all like general audience.

14
00:01:05.860 --> 00:01:07.210
I think metascore,

15
00:01:07.210 --> 00:01:10.780
I'm sorry, I think rotten tomatoes
takes into account critics.

16
00:01:10.780 --> 00:01:12.310
I'm not quite sure what the difference is.

17
00:01:12.310 --> 00:01:15.770
But when we're actually doing
the synthesis actually a project for us,

18
00:01:15.770 --> 00:01:20.690
we would take that into consideration to
make a decision about which one to use.

19
00:01:20.690 --> 00:01:23.670
But right now,
let's just go with metascore.

20
00:01:25.245 --> 00:01:28.400
Cuz it's probably the easiest to clean.

21
00:01:28.400 --> 00:01:33.810
So on one end is the middle score and
so for this one,

22
00:01:33.810 --> 00:01:40.300
we wanted to be, in the Y axis we
wanted to be the total number of wins.

23
00:01:40.300 --> 00:01:42.690
And so let's think about that.

24
00:01:44.040 --> 00:01:49.505
That means that this is a,
it has to be bin, right?

25
00:01:49.505 --> 00:01:56.267
And,
&gt;&gt; Speaker 1: Then the y,

26
00:01:56.267 --> 00:01:59.220
so the x-axis is a bin.

27
00:01:59.220 --> 00:02:04.639
And let's, I'm going to look up on how

28
00:02:04.639 --> 00:02:10.070
to do a histogram, with Vega-Light.

29
00:02:13.340 --> 00:02:17.375
Let's do that.

30
00:02:17.375 --> 00:02:22.564
So there are some,
look at that IMDB rating

31
00:02:22.564 --> 00:02:27.084
they've used this dataset too [LAUGH].

32
00:02:27.084 --> 00:02:32.202
Okay, so
what we have to do when we want a bin

33
00:02:32.202 --> 00:02:38.050
is apparently all we have
to do is say bin is true.

34
00:02:38.050 --> 00:02:43.361
We have to say the type and metascore

35
00:02:43.361 --> 00:02:50.088
type is quantitative
which is what we figured

36
00:02:50.088 --> 00:02:56.767
out before.
&gt;&gt; Speaker 1: And

37
00:02:56.767 --> 00:03:02.292
we figured out that the field
we want is metascore.

38
00:03:02.292 --> 00:03:08.083
And then in terms of the y,
we're aggregating,

39
00:03:08.083 --> 00:03:12.746
so we're aggregating the movies, but

40
00:03:12.746 --> 00:03:18.819
I think we're going to be
aggregating by a field and

41
00:03:18.819 --> 00:03:23.359
that field will be the number of wins.

42
00:03:23.359 --> 00:03:26.970
And we have to calculate
the number of wins.

43
00:03:26.970 --> 00:03:33.290
So I think what we need to
do is aggregate by count.

44
00:03:35.780 --> 00:03:42.208
And we need to,
&gt;&gt; Speaker 1: By the type,

45
00:03:42.208 --> 00:03:47.780
again, the number of wins
we agreed was quantitative.

46
00:03:47.780 --> 00:03:56.130
And we need to be able to aggregate
by count for only the field of wins.

47
00:03:56.130 --> 00:04:01.781
So let's give this a try.

48
00:04:01.781 --> 00:04:06.604
Actually, is this going to work out?
&gt;&gt; Speaker 2: You need to pull wins

49
00:04:06.604 --> 00:04:10.002
from for drive
&gt;&gt; Speaker 1: Well, that, but

50
00:04:10.002 --> 00:04:15.590
also when you have something that's bind,
it's going to be the number of movies.

51
00:04:15.590 --> 00:04:18.420
It's not going to be the number of wins.

52
00:04:20.910 --> 00:04:23.570
So it might have to be that we,

53
00:04:23.570 --> 00:04:26.190
I think this is one of
the things you suggested, right?

54
00:04:26.190 --> 00:04:29.280
Coloring by the number of wins or
something.

55
00:04:29.280 --> 00:04:31.690
And so, it might have to be like

56
00:04:34.440 --> 00:04:40.160
a quantitative, like one of those

57
00:04:40.160 --> 00:04:46.210
sequential scales that go from lighter
to darker depending on how many wins.

58
00:04:47.400 --> 00:04:52.510
But now I'm actually wondering
should this be a scatter plot?

59
00:04:52.510 --> 00:04:53.830
&gt;&gt; Speaker 2: It seems like we could,

60
00:04:53.830 --> 00:04:56.490
this is going to represent
the number of wins just fine, but

61
00:04:56.490 --> 00:05:02.190
if we want to represent the wins by
category We'll have to add the array.

62
00:05:02.190 --> 00:05:07.620
It seems to me like this will work for our
original task of producing a histogram,

63
00:05:07.620 --> 00:05:09.300
because winds will be our y axis, so

64
00:05:09.300 --> 00:05:11.020
we'll get the total.
&gt;&gt; Speaker 1: Well,

65
00:05:11.020 --> 00:05:15.350
so the wings, remember, with a histogram.

66
00:05:15.350 --> 00:05:21.470
The range is going to be the number
of records that are in that bin.

67
00:05:21.470 --> 00:05:25.940
So if we want to have the y
axis be the number of wins,

68
00:05:25.940 --> 00:05:27.370
that's not going to be the same.

69
00:05:27.370 --> 00:05:29.500
That won't be a histogram anymore.

70
00:05:30.970 --> 00:05:35.248
So we can only do what we

71
00:05:35.248 --> 00:05:39.753
want to do probably with

72
00:05:39.753 --> 00:05:44.936
a scatter plot because both

73
00:05:44.936 --> 00:05:50.135
of them are quantitative.

74
00:05:53.823 --> 00:05:57.497
&gt;&gt; Speaker 1: Let's give
this a try anyways, and

75
00:05:57.497 --> 00:06:03.350
let's see if we can map
the number of wins to colors.

76
00:06:03.350 --> 00:06:09.861
Let's try and do that.
&gt;&gt; Speaker 1: Yes,

77
00:06:09.861 --> 00:06:14.858
so let's try and do bin still and

78
00:06:14.858 --> 00:06:18.940
then aggregate is count.

79
00:06:20.850 --> 00:06:26.600
But let's try and
see if we can do a color.

80
00:06:29.330 --> 00:06:31.860
So we can do color.

81
00:06:31.860 --> 00:06:36.215
If you look at documentation,

82
00:06:36.215 --> 00:06:41.907
I think you can do, one of the things that

83
00:06:41.907 --> 00:06:48.800
you can do is
&gt;&gt; Speaker 1: set

84
00:06:48.800 --> 00:06:54.554
color as
&gt;&gt; Speaker 1: So

85
00:06:54.554 --> 00:06:58.923
for stack bar charts,
you can take a look and they'll use color.

86
00:06:58.923 --> 00:07:03.806
And you can say, the field,

87
00:07:07.407 --> 00:07:10.520
&gt;&gt; Speaker 1: Would be the number of wins.

88
00:07:10.520 --> 00:07:17.180
And the type would be quantitative,
and let's see how they draw that and

89
00:07:17.180 --> 00:07:22.720
let's see if that would be a good
chart to explore our question.

90
00:07:22.720 --> 00:07:27.270
I think if not,
then what we would want to do in a real

91
00:07:27.270 --> 00:07:32.530
situation is try out a few other charts
that might reflect this data better,

92
00:07:32.530 --> 00:07:37.310
but I think if not let's move
onto a few of the other charts.

93
00:07:37.310 --> 00:07:43.376
So let's do this together
&gt;&gt; Speaker 1: so

94
00:07:43.376 --> 00:07:48.270
if you go into observables
the way that we would.

95
00:07:48.270 --> 00:07:52.378
So the first thing we wanna do,

96
00:07:52.378 --> 00:07:59.658
this question was exploring
if there is any relation.

97
00:07:59.658 --> 00:08:06.834
The question is any relation
between number of wins and

98
00:08:06.834 --> 00:08:12.091
popularity.
&gt;&gt; Speaker 1: Between

99
00:08:12.091 --> 00:08:15.670
number of wins and popularity.

100
00:08:15.670 --> 00:08:22.460
So the very thing we're going
to have to do is get the data

101
00:08:24.170 --> 00:08:30.170
and for each of the data we want to
just pull out the number of wins.

102
00:08:33.560 --> 00:08:40.241
And then, we want the metascore.

103
00:08:40.241 --> 00:08:47.269
So let's do that together.
&gt;&gt; Speaker 1: And

104
00:08:47.269 --> 00:08:53.931
I'm going to call it data,
let's say winsMetascores.

105
00:08:53.931 --> 00:08:57.603
You can call it anything else you want.

106
00:08:57.603 --> 00:09:01.201
And for this exercise,
I'm going to use LoDash,

107
00:09:01.201 --> 00:09:06.268
just because I'm the most comfortable
processing data with LoDash.

108
00:09:06.268 --> 00:09:10.820
But you can use anything you want, Vanilla
JobScript any other utility library.

109
00:09:10.820 --> 00:09:15.700
And for this one I think all
we have to do is map the data

110
00:09:18.120 --> 00:09:21.100
and then get the number of wins.

111
00:09:21.100 --> 00:09:26.579
So that should be some regex,

112
00:09:26.579 --> 00:09:32.370
I think, so we just want to match

113
00:09:33.600 --> 00:09:38.723
wins is equal to and
I'm going to need your help with regex,

114
00:09:38.723 --> 00:09:42.826
d.Awards, is it awards?

115
00:09:42.826 --> 00:09:47.700
Yeah, okay, so d.Awards, and

116
00:09:47.700 --> 00:09:53.690
then I'm going to copy over
one of these as an example.

117
00:09:55.030 --> 00:09:58.611
So the string looks like this,

118
00:09:58.611 --> 00:10:03.723
d.Awards.match and the regex should be.

119
00:10:05.786 --> 00:10:09.030
&gt;&gt; Speaker 1: Let's see, I want to grab.

120
00:10:09.030 --> 00:10:11.590
And so that should be in the group.

121
00:10:11.590 --> 00:10:13.350
So that should be in parens.

122
00:10:13.350 --> 00:10:17.990
And I want to grab whatever digits, right?

123
00:10:19.880 --> 00:10:28.115
And then wins, after.
&gt;&gt; Speaker 1: That should,

124
00:10:28.115 --> 00:10:30.530
do you think that would work?

125
00:10:30.530 --> 00:10:32.420
That should work maybe, right?

126
00:10:32.420 --> 00:10:37.618
And then let's see, and I don't need that
to be case sensitive and I don't need

127
00:10:37.618 --> 00:10:42.780
that to match globally because there's
only one place that I want it to match.

128
00:10:42.780 --> 00:10:49.981
So actually let me make it digits
that I want to grab and then win.

129
00:10:49.981 --> 00:10:54.063
So let's see if that works at all.

130
00:10:54.063 --> 00:10:59.280
And I am going to inspect element,
so that I can see

131
00:10:59.280 --> 00:11:07.910
what is console logged.
&gt;&gt; Speaker 1: Let's see if this works.

132
00:11:07.910 --> 00:11:12.730
Ooh, cool, that did work, look at that!

133
00:11:12.730 --> 00:11:20.430
So then I want, I'm going to say
let wins of equal to either,

134
00:11:21.660 --> 00:11:26.560
well equal to, so

135
00:11:26.560 --> 00:11:31.750
the one that I actually
want is the index one.

136
00:11:31.750 --> 00:11:33.990
So that should then get me.

137
00:11:33.990 --> 00:11:39.520
Wow, look at some of these that 173, 93?

138
00:11:39.520 --> 00:11:43.217
So actually, can I make a suggestion?

139
00:11:43.217 --> 00:11:45.487
A change to this chart.

140
00:11:45.487 --> 00:11:50.915
So I think as soon as you say
something that's relation,

141
00:11:50.915 --> 00:11:54.430
that probably means a scatterplot.

142
00:11:54.430 --> 00:11:59.637
So let's try and
turn this into a scatterplot instead.

143
00:11:59.637 --> 00:12:07.300
And so, let's say, let's also make
sure that the wins is a integer.

144
00:12:07.300 --> 00:12:10.980
Actually, hold on.

145
00:12:10.980 --> 00:12:15.590
So let's say wins,
make sure that wins is a number.

146
00:12:15.590 --> 00:12:20.080
And then the score,
the metascore should be pretty easy.

147
00:12:20.080 --> 00:12:23.020
Hopefully, it should just be d.

148
00:12:23.020 --> 00:12:27.490
Turn that into an integer also and then.

149
00:12:27.490 --> 00:12:32.650
Did I spell that correctly,
d.Metascore with a capital M.

150
00:12:33.960 --> 00:12:36.993
And let's see what that gives.

151
00:12:36.993 --> 00:12:41.822
Cannot read property one of node,
so that's good.

152
00:12:41.822 --> 00:12:44.854
Okay, so
sometimes there's no matches it seems.

153
00:12:44.854 --> 00:12:49.200
So what I'm gonna do is
say wins is equal to,

154
00:12:49.200 --> 00:12:53.781
either they match something,
and if they do,

155
00:12:53.781 --> 00:12:59.418
let me get the number and
if not, if there's no matches,

156
00:12:59.418 --> 00:13:06.760
then let's just make that 0.
&gt;&gt; Speaker 1: And there we go.

157
00:13:06.760 --> 00:13:10.883
Wow, one of them has 111!

158
00:13:10.883 --> 00:13:14.132
Just because I'm curious let's also,

159
00:13:14.132 --> 00:13:18.826
we're not gonna use title,
but let's just also grab it.

160
00:13:18.826 --> 00:13:20.670
111, well Titanic, apparently.

161
00:13:20.670 --> 00:13:25.745
So [LAUGH] and this is fun and
I hope is fun for

162
00:13:25.745 --> 00:13:32.572
you too and look at that 111 wins and
75 metascore.

163
00:13:32.572 --> 00:13:37.403
That's really interesting, okay, so

164
00:13:37.403 --> 00:13:43.367
how is this so far,
this part is this makes sense,

165
00:13:43.367 --> 00:13:46.220
right, the data part?

166
00:13:46.220 --> 00:13:50.970
Okay, so now let's figure out
the scatterplot together,

167
00:13:50.970 --> 00:13:55.724
and actually, I think
a scatterplot should be quite easy.

168
00:13:55.724 --> 00:14:00.426
There we go.
&gt;&gt; Speaker 1: Let me pin this,

169
00:14:00.426 --> 00:14:02.334
so that you can see that code.

170
00:14:02.334 --> 00:14:06.407
And then what I'm gonna do is,
so to use Vega-Light and

171
00:14:06.407 --> 00:14:10.630
observables, they have
pretty good integration.

172
00:14:10.630 --> 00:14:15.700
All you have to do is say vegalite and

173
00:14:15.700 --> 00:14:19.460
then you pass in, I believe an object.

174
00:14:19.460 --> 00:14:24.515
The very first thing you need
to do is tell it a data source.

175
00:14:24.515 --> 00:14:31.328
So you say, in the object,
you say data and you say, in this case,

176
00:14:31.328 --> 00:14:37.796
we're passing in the JSON values
themselves, so say values.

177
00:14:37.796 --> 00:14:41.202
And then we called that
data wins metascores.

178
00:14:41.202 --> 00:14:49.169
And then, if we were to do a scatterplot,
it's going to be.

179
00:14:51.030 --> 00:14:53.890
Oops, sorry.

180
00:14:53.890 --> 00:14:58.922
It's going to be a bunch of points, right?
&gt;&gt; Speaker 1: And then,

181
00:14:58.922 --> 00:15:06.343
in terms of the encoding
&gt;&gt; Speaker 1: The x axis,

182
00:15:06.343 --> 00:15:11.420
we said earlier,
was going to be the metascore.

183
00:15:11.420 --> 00:15:16.070
So let's say x axis, and

184
00:15:17.920 --> 00:15:22.580
remember we just need type,
and that is quantitative.

185
00:15:23.650 --> 00:15:27.430
And we nee the field and
we decided that was the score.

186
00:15:29.240 --> 00:15:33.110
And then the y axis we said
the type is also quantitative.

187
00:15:34.530 --> 00:15:41.865
And the field is the number of wins.
&gt;&gt; Speaker 1: Wow,

188
00:15:41.865 --> 00:15:49.165
that's cool.
&gt;&gt; Speaker 1: There's

189
00:15:49.165 --> 00:15:52.647
something that has 200 plus wins.

190
00:15:52.647 --> 00:16:00.306
So one of the things that I haven't quite
figured out how to do with Vega-Light yet

191
00:16:00.306 --> 00:16:06.644
is have a hover interaction where
you can see that individual node.

192
00:16:06.644 --> 00:16:11.038
So like I'm really curious
about who has 200+ wins.

193
00:16:11.038 --> 00:16:13.230
And then almost 100% score.

194
00:16:15.150 --> 00:16:17.400
But I haven't quite figured out how to do.

195
00:16:17.400 --> 00:16:19.680
I'm sure it's somewhere
in the documentation.

196
00:16:19.680 --> 00:16:22.550
I haven't quite figured it
out how to look into it yet.

197
00:16:22.550 --> 00:16:25.672
But like this, what you think about this?

198
00:16:25.672 --> 00:16:29.061
Is this interesting?

199
00:16:29.061 --> 00:16:34.656
Yeah, I think there seems to be
generally an upward trend and

200
00:16:34.656 --> 00:16:39.703
it makes sense,
because the ones that don't like look

201
00:16:39.703 --> 00:16:44.311
some of them are blockbusters
that have no wins and

202
00:16:44.311 --> 00:16:47.729
only 20 something percent score.

203
00:16:48.800 --> 00:16:51.860
And a lot of them are down here.

204
00:16:51.860 --> 00:16:56.732
A lot of the ones, I think,
that are 80 or less are,

205
00:16:56.732 --> 00:17:00.770
in the, it looks like, kind of like 20.

206
00:17:00.770 --> 00:17:02.030
And that's still a lot.

207
00:17:02.030 --> 00:17:03.250
That still feels like a lot.

208
00:17:03.250 --> 00:17:08.270
But as soon as it hits 80s, look at.

209
00:17:08.270 --> 00:17:11.710
There is a positive correlation,
so that's good to know.

210
00:17:11.710 --> 00:17:16.700
And look at how many wins
they're scoring over here.

211
00:17:16.700 --> 00:17:24.100
I wonder if our view would be
a little bit different this way.

212
00:17:24.100 --> 00:17:28.670
Yeah, if you want to look at
it a little bit differently,

213
00:17:28.670 --> 00:17:32.625
look at how easy it was and
Vega-Lite to like make that switch.

214
00:17:32.625 --> 00:17:35.610
Whereas like,
maybe if you were building this out.

215
00:17:37.030 --> 00:17:42.540
Well, so to actually give context about
why we're doing it in Vega-Lite actually

216
00:17:42.540 --> 00:17:47.800
before these few months when I started
researching for this workshop and

217
00:17:47.800 --> 00:17:51.210
then I started thinking about how
I want to teach data exploration.

218
00:17:51.210 --> 00:17:54.960
The way that I actually do data
exploration used to be build something

219
00:17:54.960 --> 00:17:56.790
from d3 from scratch.

220
00:17:56.790 --> 00:18:03.100
I'll do exactly what you just did, where
you draw some, I would sketch some ideas.

221
00:18:03.100 --> 00:18:05.290
I'll think about a question and
I'll sketch some ideas,

222
00:18:05.290 --> 00:18:08.520
but I'll build something
from debrief from scratch.

223
00:18:08.520 --> 00:18:10.839
And you can imagine that was
really really inefficient, and

224
00:18:10.839 --> 00:18:12.075
it would take me like half a day.

225
00:18:12.075 --> 00:18:15.500
And then after half a day I might
have something interesting, but

226
00:18:15.500 --> 00:18:19.061
oftentimes I would have something
that's not quite interesting.

227
00:18:19.061 --> 00:18:22.213
And then, I would have this
iterative process where I learn

228
00:18:22.213 --> 00:18:25.377
about the data more and
more as I kind of iterate through it.

229
00:18:25.377 --> 00:18:27.792
But it still took a week or two for

230
00:18:27.792 --> 00:18:31.383
me to kind of find something
that I want to grab.

231
00:18:31.383 --> 00:18:34.477
But as I was researching for
this workshop and

232
00:18:34.477 --> 00:18:39.698
I started teaching myself Vega-Lite,
so that I can teach you Vega-Lite.

233
00:18:39.698 --> 00:18:43.395
I'm really loving how quickly
I can just sketch an idea and

234
00:18:43.395 --> 00:18:47.242
put it on to the screen,
get the data in there, see the data,

235
00:18:47.242 --> 00:18:52.146
see the shape of the data, be able to
switch these encodings really quickly,

236
00:18:52.146 --> 00:18:55.140
switch between charts really quickly.

237
00:18:55.140 --> 00:19:00.040
And it's actually really brought down
my data exploration down from a week or

238
00:19:00.040 --> 00:19:02.090
two to a day or two.

239
00:19:02.090 --> 00:19:04.480
And so I'm really happy I did this.

240
00:19:04.480 --> 00:19:09.290
And I hope,
even if Vega-Lite isn't where you go, and

241
00:19:09.290 --> 00:19:12.590
I suggest Vega-Lite only
because it works so well.

242
00:19:14.230 --> 00:19:17.090
I think it really makes sense for

243
00:19:17.090 --> 00:19:20.140
web developers because it's
pretty much in the JSON format.

244
00:19:21.510 --> 00:19:27.440
But even if Vega-Lite is not for you,
there's R, there's Python, there's

245
00:19:27.440 --> 00:19:32.444
a lot of different options where you can
do these kinds of data explorations.

