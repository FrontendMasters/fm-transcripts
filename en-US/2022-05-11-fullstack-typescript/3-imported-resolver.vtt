WEBVTT

1
00:00:00.190 --> 00:00:04.825
So the next thing we gonna do is
we want to break that resolver and

2
00:00:04.825 --> 00:00:09.548
those that type deaths variable
that holds our Graph QL schema,

3
00:00:09.548 --> 00:00:13.440
we wanna get those out of
this Apollo server file.

4
00:00:13.440 --> 00:00:16.196
I wanna this Apollo server
that ts file to be boring,

5
00:00:16.196 --> 00:00:18.990
the kind of thing we
hardly ever have to touch.

6
00:00:18.990 --> 00:00:23.288
That's really about wiring
up the express middle wire.

7
00:00:23.288 --> 00:00:28.049
There's a schema that will end up,
altering significantly over time,

8
00:00:28.049 --> 00:00:32.000
it'll be a pretty big file
by the end of the day.

9
00:00:32.000 --> 00:00:33.470
We want that in its own place.

10
00:00:33.470 --> 00:00:36.693
And then this resolver
thing is gonna get very,

11
00:00:36.693 --> 00:00:41.379
very big if we keep it as a single
file similar to, in the Redux world.

12
00:00:41.379 --> 00:00:45.370
If you have all of your reducers and all
of your actions in one place that becomes

13
00:00:45.370 --> 00:00:48.240
like a 2000 monstrosity very quickly.

14
00:00:48.240 --> 00:00:52.224
So that's where we're headed next,
getting the schema out,

15
00:00:52.224 --> 00:00:57.260
getting the resolvers out and breaking
our resolver down into sub objects.

16
00:00:57.260 --> 00:01:01.504
So the first thing we need to do
in order to get our schema and

17
00:01:01.504 --> 00:01:05.924
resolver out or we're gonna
deal with the schema first, but

18
00:01:05.924 --> 00:01:11.576
we need to take the stuff that's in
that GQL tagged template string, right?

19
00:01:11.576 --> 00:01:16.340
And we're gonna move it into a .graphql
file at the root of our project.

20
00:01:16.340 --> 00:01:17.110
Why?

21
00:01:17.110 --> 00:01:20.893
Well, if we're gonna make this
the single source of truth for

22
00:01:20.893 --> 00:01:23.512
any types that are going over the network,

23
00:01:23.512 --> 00:01:28.413
it doesn't really just belong to server,
it belongs to the project as a whole.

24
00:01:28.413 --> 00:01:33.124
And there's a lot of tooling that
works really well on these dot,

25
00:01:33.124 --> 00:01:38.264
schema files and not everything can
sort of strip these special strings

26
00:01:38.264 --> 00:01:43.679
out of a TypeScript code base, so
this enables a wider variety of tooling.

27
00:01:43.679 --> 00:01:48.080
So let's go ahead and make that move.

28
00:01:48.080 --> 00:01:51.910
You can follow the instructions here or
you can kind of follow me as I do this.

29
00:01:51.910 --> 00:01:55.348
But we're gonna go to
our Apollo server TS.

30
00:01:55.348 --> 00:02:01.332
We're gonna grab everything
that's in this string here,

31
00:02:01.332 --> 00:02:03.971
the whole thing, cut it.

32
00:02:03.971 --> 00:02:05.210
I can get rid of this.

33
00:02:06.350 --> 00:02:11.987
And then in the root of the project,
I'm going to create a schema,

34
00:02:11.987 --> 00:02:16.115
that Graph QL and
gives you a few of VS code icons,

35
00:02:16.115 --> 00:02:20.062
you'll see it light up
as a special file type.

36
00:02:20.062 --> 00:02:21.300
That's how you know you did it right.

37
00:02:22.590 --> 00:02:27.394
And I'm just gonna paste that there,
and give it a quick little format.

38
00:02:27.394 --> 00:02:29.964
And there we go.

39
00:02:29.964 --> 00:02:30.978
So that's what we got.

40
00:02:30.978 --> 00:02:33.020
That's part one.

41
00:02:33.020 --> 00:02:35.358
And we've broken our Apollo server now,
right?

42
00:02:35.358 --> 00:02:40.183
We had this typedefs thing,
you can see the file tab is red and

43
00:02:40.183 --> 00:02:44.165
it's unhappy,
this thing's not here anymore.

44
00:02:44.165 --> 00:02:48.847
So the next thing we'll need to
do is import that file into this

45
00:02:48.847 --> 00:02:53.905
TypeScript module so that we kind
of get back to our working state.

46
00:02:53.905 --> 00:02:57.512
And to do that,
we're gonna have to use some packages

47
00:02:57.512 --> 00:03:01.850
called GraphQL tools that will
allow us to perform this import.

48
00:03:03.110 --> 00:03:09.219
So we're gonna add these imports
to that Apollo server TS module.

49
00:03:09.219 --> 00:03:15.245
And these three have to do with
the importing and then this last one,

50
00:03:15.245 --> 00:03:22.659
this is just a constant with the path to
that schema.GraphQL file we just created.

51
00:03:22.659 --> 00:03:24.819
That's defined within the project.

52
00:03:24.819 --> 00:03:27.345
So let's add these imports up top.

53
00:03:27.345 --> 00:03:31.909
You can also clean up this unused import
here, we're not gonna end up using this,

54
00:03:31.909 --> 00:03:37.780
I mean, if you care to do so Great,

55
00:03:37.780 --> 00:03:40.631
and now in our top level module scope,

56
00:03:40.631 --> 00:03:44.833
we're going to create this
loadSchema thing, right?

57
00:03:44.833 --> 00:03:47.244
So this is gonna load the schema and

58
00:03:47.244 --> 00:03:52.494
transform it into the right data
structure and uses a GraphQLFileLoader.

59
00:03:52.494 --> 00:03:56.501
So there are different ways you
could store this information,

60
00:03:56.501 --> 00:04:01.047
there JSON formats for GraphQL schemas,
but we have a dot schema file.

61
00:04:01.047 --> 00:04:06.528
That's that's what this GraphQL
file loader is designed to parse.

62
00:04:06.528 --> 00:04:11.072
So let's put this in top level module
scope right below the imports.

63
00:04:15.946 --> 00:04:19.090
And you can see we used a lot
of those imports just now.

64
00:04:20.460 --> 00:04:22.412
And finally,
we're gonna use this and this,

65
00:04:22.412 --> 00:04:24.324
we're gonna kind of
smoosh it all together.

66
00:04:27.786 --> 00:04:32.873
So instead of passing
typeDefs to Apollo server,

67
00:04:32.873 --> 00:04:37.718
we're gonna kind of
assemble our resolvers and

68
00:04:37.718 --> 00:04:44.031
our schema together and
use that to create our Apollo server.

69
00:04:52.423 --> 00:04:55.856
Delete all the plus signs,
delete typeDefs.

70
00:04:58.929 --> 00:05:02.422
Make sure you bring
resolvers into this object.

71
00:05:02.422 --> 00:05:09.560
This is a little, pull a copy pasted the
diff incorrectly as I was cleaning it up.

72
00:05:09.560 --> 00:05:14.263
So add resolvers to schema,
you should have both resolvers and

73
00:05:14.263 --> 00:05:16.045
schema passed into it.

74
00:05:16.045 --> 00:05:21.612
And if we hit Save, and
if we go back to our API tools here.

75
00:05:21.612 --> 00:05:25.569
I'm gonna reload it just to
make sure everything's, fresh.

76
00:05:28.085 --> 00:05:30.880
And we run that same query again,
everything should work.

77
00:05:30.880 --> 00:05:35.172
So now we're at a state where we have
this nice schema held up at the top

78
00:05:35.172 --> 00:05:37.911
of our project and
we're importing it in and

79
00:05:37.911 --> 00:05:40.961
things are working exactly
as they were before.

80
00:05:46.438 --> 00:05:52.600
Next, we're gonna do something
similar with our resolvers.

81
00:05:52.600 --> 00:05:57.039
So we're both going to get it out
of the Apollo server TS file, and

82
00:05:57.039 --> 00:05:59.968
we're gonna break it up into sub objects.

83
00:05:59.968 --> 00:06:05.296
For now, there's only gonna be
one sub object, but in the end,

84
00:06:05.296 --> 00:06:10.131
we want kind of a central place where,
well, let's say,

85
00:06:10.131 --> 00:06:14.987
in the end we want each top
level collection of resolvers.

86
00:06:14.987 --> 00:06:19.643
And when we talk about a resolver
that's one of these functions here.

87
00:06:19.643 --> 00:06:24.250
We want each family of them to
be in its own TypeScript module.

88
00:06:24.250 --> 00:06:28.287
And then we want one file where
everything's sort of brought together in

89
00:06:28.287 --> 00:06:32.388
alignment with the way the schema is
defined and that's gonna be just sort

90
00:06:32.388 --> 00:06:36.711
of the final wire up step where there's
not much interesting going on there.

91
00:06:36.711 --> 00:06:40.203
It's almost like importing stuff,
assembling it into the object and

92
00:06:40.203 --> 00:06:42.020
reexporting it.

93
00:06:42.020 --> 00:06:45.643
So let's go ahead and
get started with that.

94
00:06:45.643 --> 00:06:48.774
In the source folder of
the server sub project,

95
00:06:48.774 --> 00:06:52.068
let's create a new module
called resolves.ts.

96
00:06:58.107 --> 00:07:01.911
And we're gonna begin by
going into Apollo server,

97
00:07:01.911 --> 00:07:06.505
grabbing this whole resolver thing,
getting it out of there.

98
00:07:09.437 --> 00:07:13.953
Pasting it into this resolver's ts,
and then make it the default export.

99
00:07:20.040 --> 00:07:21.388
And then in Apollo Server,

100
00:07:31.480 --> 00:07:33.361
That's okay, we'll do it the hard way.

101
00:07:38.638 --> 00:07:40.964
Import resolvers from resolvers.

102
00:07:40.964 --> 00:07:45.756
And now, again, I love coming back up for
air very shortly after each of these

103
00:07:45.756 --> 00:07:49.148
steps, that way we make sure
we don't break things and

104
00:07:49.148 --> 00:07:51.755
then write a whole lot
of code on top of it.

105
00:07:51.755 --> 00:07:58.360
Go back to our dev tools here, make that
API call, and it works, still works.

106
00:07:58.360 --> 00:08:00.450
So we've done this quick little refactor.

107
00:08:00.450 --> 00:08:03.410
Now, I wanna break this
out into its own thing.

108
00:08:03.410 --> 00:08:07.170
So we can close ApolloServer Ts,
this file just got boring.

109
00:08:07.170 --> 00:08:11.090
There's not much that's gonna evolve here.

110
00:08:11.090 --> 00:08:15.722
The exception being, we might mess with
this a little bit as we need to put more

111
00:08:15.722 --> 00:08:20.873
things onto that little, that context
object, little caches for certain records.

112
00:08:20.873 --> 00:08:23.292
But the rest of it we're not gonna
touch for the rest of the day,

113
00:08:23.292 --> 00:08:24.170
the rest of the class.

114
00:08:25.790 --> 00:08:29.900
So let's make ourselves a folder
to contain all of our resolvers.

115
00:08:29.900 --> 00:08:35.103
And we'll make one called a module
within that folder called query.

116
00:08:35.103 --> 00:08:38.658
And I kind of like to name
these with capital letters so

117
00:08:38.658 --> 00:08:41.739
that they kind of match
with this convention,

118
00:08:41.739 --> 00:08:47.033
that you see in both the GraphQL schema
and the way the resolvers are organized.

119
00:08:47.033 --> 00:08:51.491
So I'll grab this whole thing and
I wanna to make this.

120
00:09:01.986 --> 00:09:04.772
I wanna make it a variable and
then make it the default export.

121
00:09:11.757 --> 00:09:17.701
And then here we'll use our nice
little enhanced object literal magic.

122
00:09:23.632 --> 00:09:26.280
And we can kind of just have an import.

123
00:09:26.280 --> 00:09:29.366
If we make it this nice capital Q query,

124
00:09:29.366 --> 00:09:35.460
we can very easily just sort of wire it up
cuz that is both the key and the value.

125
00:09:36.650 --> 00:09:38.752
We only have to make it
this one that'll work and

126
00:09:38.752 --> 00:09:40.602
it'll end up looking very nice and neat.

127
00:09:44.855 --> 00:09:48.280
If you like, you could give it
a different name if you want.

128
00:09:48.280 --> 00:09:53.390
And one more time, let's make sure we
still everything's working, great.

129
00:09:53.390 --> 00:09:56.723
So nice to have that thing running and
to not have to stop and

130
00:09:56.723 --> 00:09:58.436
restart our server, right?

131
00:09:58.436 --> 00:09:59.890
So great.

132
00:09:59.890 --> 00:10:01.150
What have we just completed?

133
00:10:01.150 --> 00:10:04.924
Well, our schema is in a separate file.

134
00:10:04.924 --> 00:10:08.891
And our resolvers are now
organized very nicely.

135
00:10:08.891 --> 00:10:14.198
And this is gonna get quite big,
our resolver area, that's where the bulk

136
00:10:14.198 --> 00:10:19.770
of our interesting stuff in this app is
gonna happen, at least on server side.

