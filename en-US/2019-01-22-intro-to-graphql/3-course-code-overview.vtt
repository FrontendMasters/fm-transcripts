WEBVTT

1
00:00:00.370 --> 00:00:03.490
&gt;&gt; Scott Moss: Open up the repo,
we're gonna check out to lesson one.

2
00:00:03.490 --> 00:00:04.459
And first things first,

3
00:00:04.459 --> 00:00:07.350
I'm also gonna give a walk-through
with what's in this repo.

4
00:00:07.350 --> 00:00:10.685
So there's a lot of stuff in here that
you don't have to concern yourself

5
00:00:10.685 --> 00:00:12.940
with,that's already done for
you, that's out the way.

6
00:00:12.940 --> 00:00:16.060
So we can just focus on
just the GraphQL parts.

7
00:00:16.060 --> 00:00:18.760
But I want to give you an overview of
what's there so you have some context, so

8
00:00:18.760 --> 00:00:20.660
you're not just like,
what is all this stuff?

9
00:00:21.840 --> 00:00:24.350
Okay, so the first thing is let's
check out the package style JSON, and

10
00:00:24.350 --> 00:00:26.800
we will look at some of these scripts.

11
00:00:26.800 --> 00:00:28.920
So we have a test script,

12
00:00:28.920 --> 00:00:34.620
this test script is gonna run all
the tests inside of this repo.

13
00:00:34.620 --> 00:00:36.700
You almost will never
have to run this one,

14
00:00:36.700 --> 00:00:39.300
because we'll be running
tests on a per branch basis.

15
00:00:41.370 --> 00:00:44.130
So like I said, these different test
scripts down here, like test schema,

16
00:00:44.130 --> 00:00:45.640
test resolver, test interfaces.

17
00:00:45.640 --> 00:00:49.100
These are gonna be where you're
gonna be running tests for

18
00:00:49.100 --> 00:00:50.720
the current lesson that you'll be on.

19
00:00:50.720 --> 00:00:53.840
So these are the descriptions
that we'll be using the most, and

20
00:00:53.840 --> 00:00:56.580
in the README it'll tell you
which test script to run.

21
00:00:56.580 --> 00:01:00.150
And when you need to run it,
on what branch, we have this dev command.

22
00:01:00.150 --> 00:01:02.330
This is what you'll be using
to actually start the server.

23
00:01:02.330 --> 00:01:06.410
This command uses something called
nodemon, which basically is like Node,

24
00:01:06.410 --> 00:01:10.300
except for it watches the files
that I tell it to watch.

25
00:01:10.300 --> 00:01:11.838
And when you save that file,

26
00:01:11.838 --> 00:01:14.960
any changes that were made,
it'll just restart the server for you.

27
00:01:14.960 --> 00:01:16.690
So that's why we have a dev command here,

28
00:01:16.690 --> 00:01:18.990
so it'll rebuild it every
time we save a file.

29
00:01:18.990 --> 00:01:22.560
So we don't have to stop it and restart
it, which is annoying during development.

30
00:01:22.560 --> 00:01:26.710
And then you have the restart command
which is part of this dev command.

31
00:01:26.710 --> 00:01:29.960
And then the start command,
this is what you would use in production.

32
00:01:29.960 --> 00:01:32.520
You don't want to use that restarting,
developer, server in production,

33
00:01:32.520 --> 00:01:34.330
you just want to start it normally.

34
00:01:34.330 --> 00:01:36.839
So that's the start command, so
if you deploy, this is what you would use.

35
00:01:38.250 --> 00:01:40.890
I got some other ESLint stuff in here,

36
00:01:40.890 --> 00:01:43.220
Babel, we're using Babel
to transpile everything.

37
00:01:43.220 --> 00:01:47.550
It's using Babel 7, so
we got support for like imports and

38
00:01:47.550 --> 00:01:49.430
exports, ES6, stuff like that.

39
00:01:49.430 --> 00:01:51.940
That's how we get that,
because we're using Babel.

40
00:01:51.940 --> 00:01:56.830
ESLint setup and Prettier, so you can
have the linting in the code formatting,

41
00:01:56.830 --> 00:01:59.324
so you don't have ugly code,
I hate ugly code.

42
00:01:59.324 --> 00:02:03.018
And then JSON Jess configuration
to get Jess working.

43
00:02:03.018 --> 00:02:08.530
Did a whole much of other GraphQL
dependencies that we'll be using.

44
00:02:08.530 --> 00:02:12.790
So the next thing is, let's see,
like I said we got the ESLint set up here,

45
00:02:12.790 --> 00:02:13.990
you can check out the rules.

46
00:02:13.990 --> 00:02:16.280
Feel free to change them
if you don't like them,

47
00:02:16.280 --> 00:02:19.570
these are just some of some of the rules
that I use and some recommended ones.

48
00:02:19.570 --> 00:02:24.522
The Babel configuration is pretty minimal,
uses the current version of Node.

49
00:02:24.522 --> 00:02:28.040
And we just added some class properties
which we won't even be using.

50
00:02:28.040 --> 00:02:31.950
And then object I like to to
object spread, it's pretty legit.

51
00:02:33.430 --> 00:02:37.060
And from there the only thing I want to
take a look at is the actual src folder,

52
00:02:37.060 --> 00:02:39.310
so this is where all the work
is gonna be happening.

53
00:02:39.310 --> 00:02:42.000
So if you hop into the src folder,
a couple of things we got here,

54
00:02:42.000 --> 00:02:43.010
we got this config folder.

55
00:02:43.010 --> 00:02:47.840
And basically what this config folder
does is, I've built a lot of APIs,

56
00:02:47.840 --> 00:02:48.900
and what I've found out is that.

57
00:02:48.900 --> 00:02:54.930
When you put all the configuration, I'm
talking about secrets, database strings.

58
00:02:56.900 --> 00:03:00.610
Variables that you use to toggle things on
and off like logging, anything like that,

59
00:03:00.610 --> 00:03:01.390
environment variables.

60
00:03:01.390 --> 00:03:02.760
If you put them all in one place,

61
00:03:02.760 --> 00:03:06.180
it's a lot easier to progress
through your application.

62
00:03:06.180 --> 00:03:09.120
That way, you only have to change
the configuration in one place.

63
00:03:09.120 --> 00:03:12.350
If you put them all over your app, you
gotta go in many places and change them.

64
00:03:12.350 --> 00:03:16.387
So I like to have this config folder
basically, which has like a base config.

65
00:03:16.387 --> 00:03:19.559
And then depending on what
environment variable you're in,

66
00:03:19.559 --> 00:03:22.311
it'll load up the appropriate
configuration file.

67
00:03:22.311 --> 00:03:24.150
And then merge them together.

68
00:03:24.150 --> 00:03:27.980
So we have a base config here,
if the Node environment was developmental,

69
00:03:27.980 --> 00:03:30.360
it'll load up this dev.js and
merge the configs here.

70
00:03:30.360 --> 00:03:33.330
And then now you'll have a development
file, or if it was testing,

71
00:03:33.330 --> 00:03:34.370
it'll load up this testing one.

72
00:03:34.370 --> 00:03:36.330
If it was production,
it'll load up a production one,

73
00:03:36.330 --> 00:03:39.140
this allows you to switch configurations
based on the Node environment.

74
00:03:39.140 --> 00:03:43.790
So that's given to you for free, the other
thing is, we have this Types folder.

75
00:03:43.790 --> 00:03:44.865
And we'll talk about that in a minute,

76
00:03:44.865 --> 00:03:46.940
because that's where you're
gonna be working the most.

77
00:03:46.940 --> 00:03:50.790
This Utility folder has a few things
in it, One is gonna be the Schema file.

78
00:03:51.820 --> 00:03:54.570
This Schema file, you're gonna
see it in a minute, basically,

79
00:03:54.570 --> 00:03:55.980
there's only one function in here.

80
00:03:55.980 --> 00:03:59.800
And what does function does, is it's
just gonna load up GraphQL files for us.

81
00:03:59.800 --> 00:04:02.760
You don't know what that looks like yet,
but you don't have to worry about this.

82
00:04:02.760 --> 00:04:06.860
This is just reading the file system and
loading up GraphQL files for us, so

83
00:04:06.860 --> 00:04:09.400
you don't have to, so
we can get to the fun stuff.

84
00:04:09.400 --> 00:04:11.250
And then there's this odd function here,

85
00:04:11.250 --> 00:04:13.720
that also you don't have
to concern yourself with.

86
00:04:13.720 --> 00:04:18.243
This is basically just some helper
methods to help us authenticate with our

87
00:04:18.243 --> 00:04:21.780
GraphQL API, and
you would do the authentication later.

88
00:04:21.780 --> 00:04:26.000
Then we have this DB file, this just
handles the connection to our database.

89
00:04:26.000 --> 00:04:27.870
Again, you don't have to
concern yourself with this,

90
00:04:27.870 --> 00:04:30.390
just use the Mongoose to
connect to our database.

91
00:04:30.390 --> 00:04:35.720
Nothing flashy here, and
then we have this server file,

92
00:04:35.720 --> 00:04:38.120
this is where we're actually
creating a GraphQL server.

93
00:04:38.120 --> 00:04:39.390
We will be doing a lot of work in here,

94
00:04:39.390 --> 00:04:42.370
in our lesson one there is
really no a lot going on here.

95
00:04:42.370 --> 00:04:45.379
You might even see some linting
errors that I have in my file.

96
00:04:45.379 --> 00:04:48.093
This is where we'll be actually
starting or creating our server and

97
00:04:48.093 --> 00:04:49.620
get things going.

98
00:04:49.620 --> 00:04:55.830
And then an index file's started, so
that's just like a little tour of our app.

99
00:04:55.830 --> 00:04:59.850
And as far as like the context of the API,
what we're gonna be making is.

100
00:04:59.850 --> 00:05:04.140
We're gonna be making a public API for
like an e-commerce app, so

101
00:05:04.140 --> 00:05:08.680
think of like a Shopify API that
other apps can integrate with.

102
00:05:08.680 --> 00:05:11.360
So it's not like the API for
our client, it's an API for

103
00:05:11.360 --> 00:05:13.090
other developers to integrate with.

104
00:05:13.090 --> 00:05:15.670
So it's like a public API for
our e-commerce app, so

105
00:05:15.670 --> 00:05:17.660
that's the context of the API
we're gonna be building.

106
00:05:18.690 --> 00:05:21.836
So knowing that, if you hop into Types,
you'll see three different types here.

107
00:05:21.836 --> 00:05:25.250
You'll see like a coupon type,
a product type and a user type.

108
00:05:25.250 --> 00:05:25.840
The coupon and

109
00:05:25.840 --> 00:05:29.510
the user type are pretty much filled out,
you won't have to work on either of those.

110
00:05:29.510 --> 00:05:32.130
Most of the work you're gonna be doing
is gonna be here in the product type.

111
00:05:32.130 --> 00:05:36.200
There's a few things in here, like
a graph QL file, a model, and a resolver.

112
00:05:36.200 --> 00:05:37.240
You'll be doing work in here, and

113
00:05:37.240 --> 00:05:39.660
most of the tests that you'll be trying
to get to pass, will be in here.

114
00:05:39.660 --> 00:05:42.450
So we'll be doing this work,
the other types, like coupon and user,

115
00:05:42.450 --> 00:05:44.070
are just here for you for reference.

116
00:05:44.070 --> 00:05:47.020
So look at those as references to
try to understand what's going on to

117
00:05:47.020 --> 00:05:48.280
help you if you're stuck.

118
00:05:48.280 --> 00:05:52.130
But we'll be doing most of our work in the
product type, last thing is the README,

119
00:05:52.130 --> 00:05:53.840
the most important part, I forgot.

120
00:05:53.840 --> 00:05:56.326
So yeah,
all the resources that I'm talking about,

121
00:05:56.326 --> 00:05:57.830
are gonna be here in the README.

122
00:05:57.830 --> 00:06:00.300
And any instructions for
the lessons will be in here, so

123
00:06:00.300 --> 00:06:03.150
basically, there's gonna be
lessons with numbers on them.

124
00:06:03.150 --> 00:06:04.120
I'm gonna give a talk,

125
00:06:04.120 --> 00:06:07.960
do some live demonstration and
then you'll have an accompanying lesson.

126
00:06:07.960 --> 00:06:11.011
That you can check out, too, and
start working on the exercises, and

127
00:06:11.011 --> 00:06:13.769
then when we come back,
I'll give my solution of that lesson.

128
00:06:13.769 --> 00:06:16.950
And you can follow along, but you can
also just check out this solution branch.

129
00:06:16.950 --> 00:06:20.950
Which will have the very same or very
similar solution that I just live coded.

130
00:06:20.950 --> 00:06:25.110
It'll have all the objectives that you
need to do for that lesson checked out.

131
00:06:25.110 --> 00:06:28.230
Also the test command for
each lesson will be listed as well,

132
00:06:28.230 --> 00:06:31.350
so only use that test command for
that lesson.

133
00:06:31.350 --> 00:06:34.430
If you use any other test
command other than the one for

134
00:06:34.430 --> 00:06:37.840
that lesson,
you might not get the right test to run.

135
00:06:37.840 --> 00:06:40.480
And you might get some that don't work and
some that do work.

136
00:06:40.480 --> 00:06:41.740
So use that test command for

137
00:06:41.740 --> 00:06:43.780
that lesson just to make sure that
you're doing the right stuff.

