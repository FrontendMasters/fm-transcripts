WEBVTT

1
00:00:00.198 --> 00:00:03.868
[MUSIC]

2
00:00:03.868 --> 00:00:07.469
&gt;&gt; Bianca Gandolfo: So that second line
box square bracket size equals nine.

3
00:00:07.469 --> 00:00:08.770
&gt;&gt; Speaker 2: Mm-hm.
&gt;&gt; Bianca Gandolfo: There's no way to get

4
00:00:08.770 --> 00:00:15.174
that value out by using
indexing with integers.

5
00:00:15.174 --> 00:00:16.120
&gt;&gt; Speaker 2: True.

6
00:00:16.120 --> 00:00:20.890
True, because the only way you can get
the value nine out Is by looking it

7
00:00:20.890 --> 00:00:25.620
up by the property name, which is size,
which is not number, right?

8
00:00:26.630 --> 00:00:27.710
So.
&gt;&gt; Bianca Gandolfo: So arrays can be

9
00:00:27.710 --> 00:00:31.310
accessed by index number
as well as property names?

10
00:00:31.310 --> 00:00:31.810
Yep.

11
00:00:33.180 --> 00:00:41.720
So here I am using dot notation,
box dot size, box bracket size, right?

12
00:00:41.720 --> 00:00:42.690
If you look at box.

13
00:00:42.690 --> 00:00:45.010
And then we have our numerical
indices as well right?

14
00:00:45.010 --> 00:00:46.960
We have meow and we also have woo hoo.

15
00:00:46.960 --> 00:00:51.308
&gt;&gt; Speaker 2: Isn't it better
to say arrays can have can have

16
00:00:51.308 --> 00:00:57.101
properties and

17
00:00:57.101 --> 00:01:00.220
indices?

18
00:01:00.220 --> 00:01:01.054
&gt;&gt; Bianca Gandolfo: I'm not sure.

19
00:01:01.054 --> 00:01:04.500
&gt;&gt; Speaker 2: Is box an object that
has an array as a property, or

20
00:01:04.500 --> 00:01:08.130
is it an array that has
a object array sized.

21
00:01:09.790 --> 00:01:12.050
&gt;&gt; Bianca Gandolfo: Box is an object.

22
00:01:13.910 --> 00:01:16.990
It's an array, but
an array is also an object.

23
00:01:16.990 --> 00:01:19.400
So it's both an array and an object.

24
00:01:19.400 --> 00:01:24.650
And the thing that's special about
arrays is not really numerical indexes,

25
00:01:24.650 --> 00:01:27.850
it's really the properties and
the methods that come with it.

26
00:01:27.850 --> 00:01:33.150
So that dot length property is
something that makes arrays different.

27
00:01:33.150 --> 00:01:36.610
And based on the dot length property
you can calculate a lot of things.

28
00:01:36.610 --> 00:01:42.260
So if you have an object that's
keeping track of the length, and

29
00:01:42.260 --> 00:01:48.050
then you have the array methods
that are working off of the length.

30
00:01:48.050 --> 00:01:49.730
Then you have an array.

31
00:01:49.730 --> 00:01:54.001
So you can create your own array just by
having that magical length property that's

32
00:01:54.001 --> 00:01:55.538
keeping track of the length.

33
00:01:57.738 --> 00:02:00.513
And so, how the length property works,

34
00:02:00.513 --> 00:02:05.002
it's only going to keep track of
the highest numerical indices,

35
00:02:05.002 --> 00:02:09.260
so it's going to ignore size,
it's going to ignore itself.

36
00:02:09.260 --> 00:02:13.510
Length itself is a property, right,
see we have this dot notation, box.length?

37
00:02:13.510 --> 00:02:16.480
You know it's not counting that,

38
00:02:16.480 --> 00:02:21.500
it's not counting box.push,
pop, things like that.

39
00:02:22.760 --> 00:02:26.547
So it's only going to be keeping
track of those numerical indices,

40
00:02:26.547 --> 00:02:30.798
and based on the length and the numerical
indecencies, those methods can do

41
00:02:30.798 --> 00:02:34.869
cool things with the data that we have
stored in this array slash object.

42
00:02:37.308 --> 00:02:42.020
&gt;&gt; Speaker 3: So if box is object,
then length would be three.

43
00:02:43.260 --> 00:02:44.240
is that right?

44
00:02:44.240 --> 00:02:46.050
&gt;&gt; Bianca Gandolfo: Well,
objects don't have a length property.

45
00:02:47.250 --> 00:02:47.750
&gt;&gt; Speaker 3: Yeah.

46
00:02:51.490 --> 00:02:53.930
&gt;&gt; Speaker 2: So
because arrays are objects,

47
00:02:53.930 --> 00:02:58.870
let's say you have an empty array you're
assigning meow to the first index?

48
00:02:58.870 --> 00:03:02.450
Behind the scenes does it add
a property called zero and

49
00:03:02.450 --> 00:03:07.180
then a value called meow or
whatever you're saying it is.

50
00:03:07.180 --> 00:03:08.430
&gt;&gt; Bianca Gandolfo: Yeah,
that's a perfect way to think of it.

51
00:03:08.430 --> 00:03:10.700
And that's kind of why
I draw it like this.

52
00:03:10.700 --> 00:03:11.940
You can kind of see.

53
00:03:11.940 --> 00:03:15.000
This is kind of how I think about it,
Is that it's just an object and

54
00:03:15.000 --> 00:03:16.660
it has these properties on it.

55
00:03:16.660 --> 00:03:18.480
And then it has the length property and

56
00:03:18.480 --> 00:03:23.580
a bunch of methods that give us
some powerful functionality.

57
00:03:23.580 --> 00:03:25.470
Like we can sort things,
we can reverse it.

58
00:03:25.470 --> 00:03:31.758
Slice, all those things that
you can't do with an object.

59
00:03:33.938 --> 00:03:34.438
Yeah.

60
00:03:35.580 --> 00:03:40.890
&gt;&gt; Speaker 2: So when you're console
logging you're actually logging an object.

61
00:03:40.890 --> 00:03:42.740
So that's why it shows the size.

62
00:03:42.740 --> 00:03:45.220
&gt;&gt; Bianca Gandolfo: That's why we can
use this for, this other for loop.

63
00:03:46.550 --> 00:03:54.920
Remember this, the for and loop will
work with box even if it's an array.

64
00:03:54.920 --> 00:03:57.428
And that's because, cuz it's an object.

65
00:04:00.409 --> 00:04:03.870
&gt;&gt; Speaker 2: In that case
you do pick up [INAUDIBLE].

66
00:04:03.870 --> 00:04:05.130
&gt;&gt; Bianca Gandolfo: Yes
in that case you do

67
00:04:05.130 --> 00:04:08.190
because you just gonna be looping
through all of the property names.

68
00:04:08.190 --> 00:04:13.838
That includes numerical properties as
well as named string properties yeah.

69
00:04:18.339 --> 00:04:19.079
Oops.

70
00:04:20.498 --> 00:04:21.918
Cool.
You had a question?

71
00:04:21.918 --> 00:04:24.879
&gt;&gt; Speaker 4: There was
a question on why you would want

72
00:04:24.879 --> 00:04:27.151
to add a property to the array.

73
00:04:29.190 --> 00:04:30.498
&gt;&gt; Bianca Gandolfo: For different reasons.

74
00:04:30.498 --> 00:04:32.078
This will.

75
00:04:34.878 --> 00:04:39.860
It depends, you can add methods to it,
to the prototype and things.

76
00:04:41.260 --> 00:04:45.213
That will add,
you can extend functionality that way.

77
00:04:45.213 --> 00:04:46.911
You can.

78
00:04:49.350 --> 00:04:50.910
I don't know.

79
00:04:50.910 --> 00:04:52.140
Mm hm?

80
00:04:52.140 --> 00:04:54.310
&gt;&gt; Speaker 4: And
then I guess following up from that,

81
00:04:54.310 --> 00:04:58.460
another question I saw is if I have
an object with an attribute called length

82
00:04:58.460 --> 00:05:03.070
push pop et cetera, it will be an array?

83
00:05:04.270 --> 00:05:07.492
&gt;&gt; Bianca Gandolfo: Yeah.
So if the length property is keeping track

84
00:05:07.492 --> 00:05:12.378
of the numerical indices, every time
you add something to it, then yes.

85
00:05:17.338 --> 00:05:22.597
&gt;&gt; Speaker 4: Do we use object notation
and you add those properties to it,

86
00:05:22.597 --> 00:05:25.730
it's not going to make it an array.

87
00:05:25.730 --> 00:05:28.060
&gt;&gt; Bianca Gandolfo: But,
you can mimic array functionality.

88
00:05:28.060 --> 00:05:30.210
&gt;&gt; Speaker 4: But
you have to build that all

89
00:05:30.210 --> 00:05:30.770
into your-
&gt;&gt; Speaker 2: Well,

90
00:05:30.770 --> 00:05:31.680
that's what he was saying.

91
00:05:31.680 --> 00:05:35.170
If you do build it out,
they're both objects, right.

92
00:05:35.170 --> 00:05:36.450
One is native, one is not.

93
00:05:36.450 --> 00:05:39.980
&gt;&gt; Bianca Gandolfo: The only hard part
would be keeping track of the numerical.

94
00:05:39.980 --> 00:05:45.116
So you'd have to have some way to know
whenever you're adding a property to

95
00:05:45.116 --> 00:05:50.730
the object so
that you could adjust the length property.

96
00:05:50.730 --> 00:05:54.260
So you'd have to user a getter or
setter or something.

97
00:05:54.260 --> 00:05:56.190
&gt;&gt; Speaker 4: Adding the length
property to that doesn't make an array.

98
00:05:56.190 --> 00:05:59.990
You're not gonna pick up
automatically the pop push slice.

99
00:05:59.990 --> 00:06:01.790
&gt;&gt; Speaker 2: We have to act
he has to build all that up.

100
00:06:01.790 --> 00:06:03.270
&gt;&gt; Speaker 4: He has to build all that up.

101
00:06:03.270 --> 00:06:04.860
To make a fall that functionality.

102
00:06:04.860 --> 00:06:05.560
&gt;&gt; Bianca Gandolfo: Yeah.
Right.

103
00:06:05.560 --> 00:06:06.920
It's little more complicated, but.

104
00:06:06.920 --> 00:06:09.134
Yeah.
Cool.

105
00:06:09.134 --> 00:06:11.742
Sweet.

106
00:06:11.742 --> 00:06:17.888
All right, what about this?

107
00:06:23.168 --> 00:06:24.108
What's this gonna log?

108
00:06:30.069 --> 00:06:31.050
Is this even gonna work?

109
00:06:31.050 --> 00:06:32.510
&gt;&gt; Speaker 2: No.

110
00:06:32.510 --> 00:06:33.770
&gt;&gt; Bianca Gandolfo: Why?

111
00:06:34.950 --> 00:06:37.009
&gt;&gt; Speaker 2: Cuz the length is in quotes.

112
00:06:38.110 --> 00:06:39.520
Was looking for that.

113
00:06:39.520 --> 00:06:40.930
&gt;&gt; Bianca Gandolfo: Because
length is in quotes?

114
00:06:43.570 --> 00:06:44.340
What is length?

115
00:06:44.340 --> 00:06:49.982
So length in quotes, again remember
it's the same as dot notation, right?

116
00:06:49.982 --> 00:06:52.290
True?

117
00:06:52.290 --> 00:06:55.000
Length in quotes the same as dot notation,
thumbs on that?

118
00:06:55.000 --> 00:06:56.450
Cool.

119
00:06:56.450 --> 00:06:57.469
So the length is 4.

120
00:06:59.600 --> 00:07:03.370
Right, and that goes,
again to how length is working.

121
00:07:03.370 --> 00:07:07.280
So length is keeping
track of the last index.

122
00:07:08.460 --> 00:07:15.785
It's not keeping track of the number
of actual values in the array.

123
00:07:15.785 --> 00:07:18.414
Mm hm?

124
00:07:19.960 --> 00:07:23.070
&gt;&gt; Speaker 2: They wanted me to ask you
that in theory you could get away with

125
00:07:23.070 --> 00:07:27.120
never using dot notation and
only using bracket notation.

126
00:07:27.120 --> 00:07:29.560
&gt;&gt; Bianca Gandolfo: True,
you could only use bracket notation.

127
00:07:30.640 --> 00:07:31.860
It's just more to type.

128
00:07:36.480 --> 00:07:37.960
Cool, what about this?

129
00:07:42.139 --> 00:07:43.860
What if I change this?

130
00:07:48.400 --> 00:07:49.060
&gt;&gt; Speaker 2: Two.

131
00:07:49.060 --> 00:07:52.990
&gt;&gt; Bianca Gandolfo: Undefined because
length does not have quotes around it.

132
00:07:52.990 --> 00:07:53.950
&gt;&gt; Speaker 2: That's tricky.

133
00:07:53.950 --> 00:07:55.040
That's not fair.

134
00:07:55.040 --> 00:07:56.230
&gt;&gt; Bianca Gandolfo: I know.
You guys

135
00:07:56.230 --> 00:07:58.040
should just know that I'm
tricking you the whole time.

136
00:07:59.120 --> 00:07:59.990
And look out for that.

137
00:07:59.990 --> 00:08:01.360
And think about those rules.

138
00:08:01.360 --> 00:08:04.560
And as you're coding you should be
actively thinking about the rules.

139
00:08:04.560 --> 00:08:10.120
Is this, series of characters,
is this a string,

140
00:08:10.120 --> 00:08:14.250
is this a variable, is it
an expression that needs to evaluated.

141
00:08:14.250 --> 00:08:17.460
You should always be thinking that and
keeping track of what it is.

142
00:08:17.460 --> 00:08:20.240
And then, if it is a variable, you should
also be keeping track of what that

143
00:08:20.240 --> 00:08:24.790
variable can represent in
different scenarios all the time.

144
00:08:25.880 --> 00:08:27.020
Can't just take it for granted.

145
00:08:27.020 --> 00:08:29.680
&gt;&gt; Speaker 2: Yeah,
can you go back one slide again?

146
00:08:29.680 --> 00:08:30.491
&gt;&gt; Bianca Gandolfo: Sure.

147
00:08:34.891 --> 00:08:37.060
&gt;&gt; Speaker 2: What did you say at
the very tail end of this explanation?

148
00:08:37.060 --> 00:08:41.080
Is that all it looks at the last-
&gt;&gt; Bianca Gandolfo: Yeah it looks at

149
00:08:41.080 --> 00:08:47.700
the last, the highest,
numeric index and it adds one.

150
00:08:47.700 --> 00:08:52.370
Because a length is always plus one.

151
00:08:52.370 --> 00:08:53.500
&gt;&gt; Speaker 2: Because it's zero based.

152
00:08:53.500 --> 00:08:55.155
&gt;&gt; Bianca Gandolfo: Because
it's zero based, absolutely.

153
00:08:55.155 --> 00:08:56.235
Mm hm.

154
00:08:56.235 --> 00:08:57.656
&gt;&gt; Speaker 2: That's weird.

155
00:08:57.656 --> 00:08:59.737
&gt;&gt; Bianca Gandolfo: That's programming.

156
00:08:59.737 --> 00:09:03.239
[LAUGH]
&gt;&gt; Speaker 2: [COUGH]

157
00:09:03.239 --> 00:09:04.020
&gt;&gt; Bianca Gandolfo: Yeah.

158
00:09:04.020 --> 00:09:07.305
Yeah, I tell some of my students
you're my number zero student.

159
00:09:07.305 --> 00:09:11.770
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Bianca Gandolfo: Let's see.

160
00:09:11.770 --> 00:09:12.820
So we did that one.

161
00:09:12.820 --> 00:09:15.320
And then, here.

162
00:09:15.320 --> 00:09:23.961
So what if we- What if we wanted
to look at the last index.

163
00:09:27.440 --> 00:09:29.680
Of our array?

164
00:09:29.680 --> 00:09:31.230
&gt;&gt; Speaker 4: Minus 1.
&gt;&gt; Speaker 2: Minus 1.

165
00:09:31.230 --> 00:09:32.309
&gt;&gt; Bianca Gandolfo: Like this?

166
00:09:36.130 --> 00:09:36.930
&gt;&gt; Speaker 2: Just the length?

167
00:09:36.930 --> 00:09:39.910
Just minus 1.

168
00:09:39.910 --> 00:09:41.600
&gt;&gt; Bianca Gandolfo: Actually
that only works with slice.

169
00:09:41.600 --> 00:09:42.604
You're thinking of slice.

170
00:09:42.604 --> 00:09:44.440
So.
&gt;&gt; Speaker 4: Box.length?

171
00:09:44.440 --> 00:09:47.562
&gt;&gt; Bianca Gandolfo: Box.length minus 1,
totally.

172
00:09:47.562 --> 00:09:52.060
So box.length, right,
is gonna be four, and

173
00:09:52.060 --> 00:09:56.580
then our last index is three as we can
see here, so we need to subtract one.

174
00:09:56.580 --> 00:10:00.330
And then back to the thing about the
bracket notation being able to evaluate

175
00:10:00.330 --> 00:10:04.260
expressions, this is a perfect
example of when you'd wanna do that.

176
00:10:04.260 --> 00:10:07.930
So here we're doing a property look up and
we're doing math.

177
00:10:07.930 --> 00:10:11.030
So all those things are happening and
those are things that you cannot do in

178
00:10:11.030 --> 00:10:14.220
dot notation, and it just looks
weird right like look at this.

179
00:10:15.430 --> 00:10:17.020
Right, that just doesn't look right.

