WEBVTT

1
00:00:00.000 --> 00:00:03.881
[MUSIC]

2
00:00:03.881 --> 00:00:07.070
&gt;&gt; Bianca Gandolfo: So
let's just go through these quickly.

3
00:00:07.070 --> 00:00:11.370
So here we are creating
just an empty array, and

4
00:00:11.370 --> 00:00:13.220
we're assigning it to
the variable friends.

5
00:00:14.350 --> 00:00:19.275
Friends here we're pushing
from our animals collection.

6
00:00:19.275 --> 00:00:22.657
The first, the very first value,

7
00:00:22.657 --> 00:00:28.080
which is an object that
has a property username.

8
00:00:28.080 --> 00:00:31.110
So we're adding the username property.

9
00:00:31.110 --> 00:00:37.057
In this case, we can see that it's
Mittens from the previous exercise,

10
00:00:37.057 --> 00:00:43.605
as well as the second, or the first index,
really, value which is DaffyDuck.

11
00:00:43.605 --> 00:00:47.950
And notice that for
this syntax, for the .push,

12
00:00:47.950 --> 00:00:51.984
you can actually pass in
more than one value and

13
00:00:51.984 --> 00:00:55.305
it will just add both of them in order.

14
00:01:01.265 --> 00:01:02.065
&gt;&gt; Bianca Gandolfo: Cool.

15
00:01:02.065 --> 00:01:04.349
And so here's our relationships objects.

16
00:01:05.410 --> 00:01:11.160
So we are in our relationships object, we
can have different types of relationships.

17
00:01:11.160 --> 00:01:16.840
So one of those might be our friends
relationship, and our friends again,

18
00:01:16.840 --> 00:01:21.510
is just our object with Mittens and
DaffyDuck, and now our relationship object

19
00:01:21.510 --> 00:01:27.590
has a property called friends with the
value of an array that looks like this.

20
00:01:29.360 --> 00:01:33.640
And we can inspect that, or actually
we can't, cuz I don't have previous.

21
00:01:35.760 --> 00:01:39.131
So when you've consoled
out log relationships,

22
00:01:39.131 --> 00:01:43.945
it's gonna look like this object,
and if you wanted to count the keys,

23
00:01:43.945 --> 00:01:47.170
you could use this handy
object.keys method.

24
00:01:47.170 --> 00:01:51.105
It will return an array of
all the properties, and

25
00:01:51.105 --> 00:01:53.830
then you could take the .length.

26
00:01:53.830 --> 00:01:59.966
And so we see here that our object,
a relationship object has one key,

27
00:01:59.966 --> 00:02:04.230
friends, and
therefore our length is then one.

28
00:02:05.790 --> 00:02:09.100
So, we have our friends and
then we also have our matches.

29
00:02:11.680 --> 00:02:13.620
So our matches is an empty array.

30
00:02:14.630 --> 00:02:19.800
And here we are putting our matches array,

31
00:02:19.800 --> 00:02:25.250
empty array, onto our relationship object
add a property name called matches.

32
00:02:25.250 --> 00:02:32.910
And this is again with our nested,
we keep adding, adding on our commands.

33
00:02:32.910 --> 00:02:36.530
So the first command would be here's our

34
00:02:38.650 --> 00:02:44.720
access our relationships object, the
second one would be access that matches

35
00:02:44.720 --> 00:02:50.280
property, and then the third one would
be to push this value pig onto that.

36
00:02:52.160 --> 00:02:54.650
Then we can console.log(relationships) and

37
00:02:54.650 --> 00:02:58.910
we can see now that we have a few
things in our relationship object.

38
00:02:58.910 --> 00:03:00.841
Let's wrap it.

39
00:03:00.841 --> 00:03:05.803
So we have our friends,
which is in array with two names and

40
00:03:05.803 --> 00:03:10.881
then we have our matches,
which is an array of one with pig.

41
00:03:10.881 --> 00:03:15.432
And then if you wanted to loop
through your animals or your farm,

42
00:03:15.432 --> 00:03:20.577
you would just do your regular loop and
animals[i].relationships,

43
00:03:20.577 --> 00:03:23.698
your gonna add that
relationship object and

44
00:03:23.698 --> 00:03:28.950
you can console.log your animals and
inspect the relationship object.

45
00:03:28.950 --> 00:03:32.930
Keep in mind though that this is gonna
always be the same relationship object,

46
00:03:32.930 --> 00:03:36.300
so all of your animals in your farm are
actually gonna have the same friends and

47
00:03:36.300 --> 00:03:37.580
the same relationships.

48
00:03:37.580 --> 00:03:40.747
And that's an interesting thing to
inspect and change things around, and

49
00:03:40.747 --> 00:03:42.161
see how it changes in all of them.

50
00:03:42.161 --> 00:03:46.862
And again, that's only true for
things like array objects and functions.

51
00:03:46.862 --> 00:03:50.213
For strings, numbers, Booleans,

52
00:03:50.213 --> 00:03:55.302
all those primitive values
that is not going to be true.

53
00:03:55.302 --> 00:04:00.802
Awesome, so
any questions about what I just went over?

54
00:04:06.082 --> 00:04:06.660
&gt;&gt; Bianca Gandolfo: No?

55
00:04:06.660 --> 00:04:08.110
Okay.

56
00:04:08.110 --> 00:04:10.370
Awesome, so
that kinda wraps it up for today.

57
00:04:10.370 --> 00:04:14.510
If you want the solutions,
there's a link in the slides.

58
00:04:14.510 --> 00:04:19.924
Submit your email, there's an option to
opt in for notifications about upcoming

59
00:04:19.924 --> 00:04:24.951
classes taught by me or some of my
colleagues at Hack Reactor if you'd like.

60
00:04:24.951 --> 00:04:28.756
Either way you could have the solutions,
and also there's a link for

61
00:04:28.756 --> 00:04:31.591
live classes that we have
monthly at Hack Reactor.

62
00:04:31.591 --> 00:04:35.743
We are going to do this class actually
on Sunday, so if you know anyone in

63
00:04:35.743 --> 00:04:40.329
the San Francisco area that's interested,
there's a few spots left there.

64
00:04:41.420 --> 00:04:43.980
And yeah, and you could just
check the Meetup up for that.

65
00:04:43.980 --> 00:04:45.831
Awesome.
Thank you guys so much for being here.

66
00:04:45.831 --> 00:04:49.799
I really appreciated your time and
attention, and I hope that you got a lot

67
00:04:49.799 --> 00:04:53.770
out of this class and that you can
continue growing with your JavaScript.

