WEBVTT

1
00:00:00.000 --> 00:00:03.553
[MUSIC]

2
00:00:03.553 --> 00:00:05.300
&gt;&gt; Bianca Gandolfo: So,
now we're gonna talk about Iteration.

3
00:00:05.300 --> 00:00:08.450
We talked about adding things and
taking things out,

4
00:00:08.450 --> 00:00:13.000
what about if we wanna just like,
loop through the entire object and

5
00:00:13.000 --> 00:00:16.415
get out those values and
take a look at that property, so.

6
00:00:16.415 --> 00:00:17.600
Mm-hm?

7
00:00:17.600 --> 00:00:18.450
&gt;&gt; Speaker 2: A question came up.

8
00:00:18.450 --> 00:00:20.140
&gt;&gt; Bianca Gandolfo: Sure.
&gt;&gt; Speaker 2: In the chat room.

9
00:00:20.140 --> 00:00:22.850
If size is a string but
you assign it a value that's a number,

10
00:00:22.850 --> 00:00:23.980
does it become an integer?

11
00:00:25.600 --> 00:00:27.060
&gt;&gt; Bianca Gandolfo: Wait one more time?

12
00:00:27.060 --> 00:00:30.855
&gt;&gt; Speaker 2: If size is a string but then
you assign it a value that's a number,

13
00:00:30.855 --> 00:00:32.728
does it then become an integer?

14
00:00:32.728 --> 00:00:34.930
Or.

15
00:00:34.930 --> 00:00:38.560
&gt;&gt; Bianca Gandolfo: Right, so
are we talking about here?

16
00:00:38.560 --> 00:00:40.170
&gt;&gt; Speaker 2: Right
&gt;&gt; Bianca Gandolfo: This,

17
00:00:40.170 --> 00:00:41.830
this is a number.

18
00:00:41.830 --> 00:00:43.598
&gt;&gt; Speaker 2: Right, but
if it's that word that's a string there,

19
00:00:43.598 --> 00:00:45.841
I think they're asking that if you
were to assign it a number does it-

20
00:00:45.841 --> 00:00:47.537
&gt;&gt; Bianca Gandolfo: Like this?

21
00:00:47.537 --> 00:00:48.060
&gt;&gt; Speaker 2: Right.

22
00:00:49.100 --> 00:00:52.340
&gt;&gt; Bianca Gandolfo: No, then it would just
be a string that happens to have a number,

23
00:00:52.340 --> 00:00:55.040
a character that's a number inside.

24
00:00:55.040 --> 00:00:59.050
&gt;&gt; Speaker 3: I think the question he's
asking is, if you set it as a string and

25
00:00:59.050 --> 00:01:04.620
then later you set that same property
to an integer, it will change its type.

26
00:01:05.720 --> 00:01:06.476
&gt;&gt; Bianca Gandolfo: Yeah.
Yeah, it will change.

27
00:01:06.476 --> 00:01:07.308
&gt;&gt; Speaker 3: I think
that's what he's asking.

28
00:01:07.308 --> 00:01:10.640
&gt;&gt; Bianca Gandolfo: Yeah,
so if we said box.size.

29
00:01:10.640 --> 00:01:17.070
So we set it here as 9 and
then we said box.size equals 9.

30
00:01:19.430 --> 00:01:21.427
Or whatever, you know, whatever.

31
00:01:21.427 --> 00:01:26.237
Then, and we said, like, type of,

32
00:01:26.237 --> 00:01:29.808
type, type of box.size,

33
00:01:29.808 --> 00:01:34.640
that would return, return string.

34
00:01:34.640 --> 00:01:38.380
Did I answer the question?

35
00:01:38.380 --> 00:01:38.880
&gt;&gt; Speaker 2: Yep.

36
00:01:42.576 --> 00:01:43.690
&gt;&gt; Bianca Gandolfo: Okay.

37
00:01:43.690 --> 00:01:45.300
So back to looping.

38
00:01:45.300 --> 00:01:49.910
So, we wanna loop through our object and
look at what's inside.

39
00:01:50.970 --> 00:01:58.160
And so, we have a handy,
what should I call this?

40
00:01:58.160 --> 00:02:04.490
We, I mean we have a loop for a four n
loop and this loop is special for objects.

41
00:02:04.490 --> 00:02:08.202
Which is great because everything in
JavaScripts an object, so it works for

42
00:02:08.202 --> 00:02:10.080
almost anything.

43
00:02:10.080 --> 00:02:15.330
So here, we have a loop that
is looping through our box.

44
00:02:15.330 --> 00:02:19.870
Some key words here for our loop, for
this particular loop, there are tons of

45
00:02:19.870 --> 00:02:24.100
different loops and there's like six
different loops or so, in JavaScript.

46
00:02:24.100 --> 00:02:27.160
This one in particular,
there's two key words to keep in mind.

47
00:02:27.160 --> 00:02:31.710
We have for and then we have in and
that's why I call it the for in loop.

48
00:02:31.710 --> 00:02:37.080
Then we also have this var key,
which is a variable that we just create.

49
00:02:37.080 --> 00:02:38.420
And this key,

50
00:02:38.420 --> 00:02:43.880
this variable is going to hold
the value of the property name always.

51
00:02:43.880 --> 00:02:47.320
That's just the way that this loop works.

52
00:02:47.320 --> 00:02:51.350
And then, the other important thing to
keep in mind is where we have box and

53
00:02:51.350 --> 00:02:54.910
that's going to reference our
object we're looping through.

54
00:02:54.910 --> 00:03:00.170
Right, so we have our box up here, and
we're leaping through here in this box.

55
00:03:01.806 --> 00:03:07.550
And so,
knowing what we know about this loop,

56
00:03:07.550 --> 00:03:11.090
what do we think this console.log
is gonna return for us?

57
00:03:11.090 --> 00:03:13.980
&gt;&gt; Speaker 2: It's real, zero.

58
00:03:15.060 --> 00:03:17.750
Funny characters.

59
00:03:17.750 --> 00:03:20.370
&gt;&gt; Bianca Gandolfo: 0,
you mean you can't pronounce this?

60
00:03:20.370 --> 00:03:23.449
I think it's pronounced [SOUND].

61
00:03:23.449 --> 00:03:24.726
I think, that's how you say it.

62
00:03:24.726 --> 00:03:28.523
&gt;&gt; Speaker 2: [SOUND]
&gt;&gt; Bianca Gandolfo: [SOUND], yeah.

63
00:03:28.523 --> 00:03:33.380
Cool, so it's going to log
our property names, cool?

64
00:03:34.680 --> 00:03:39.496
So what if we wanted to-
&gt;&gt; Speaker 3: Not necessarily in

65
00:03:39.496 --> 00:03:40.161
that order.

66
00:03:40.161 --> 00:03:40.661
&gt;&gt; Bianca Gandolfo: Yeah,
not necessarily in that order.

67
00:03:42.210 --> 00:03:47.316
There's no guaranteed order in
the objects, so it will come out, however.

68
00:03:47.316 --> 00:03:50.698
&gt;&gt; Speaker 2: [INAUDIBLE] I'm sorry,
it was a little confusing there is, so

69
00:03:50.698 --> 00:03:54.419
is key a kind of reserve word, or
could you have called it anything?

70
00:03:55.520 --> 00:03:57.500
&gt;&gt; Bianca Gandolfo: Nope.
We could call it, we call it anything,

71
00:03:57.500 --> 00:03:58.380
it's just a variable.

72
00:03:58.380 --> 00:04:01.480
&gt;&gt; Speaker 2: Right, okay, so
it's not like, as long as it's consistent.

73
00:04:01.480 --> 00:04:02.850
&gt;&gt; Bianca Gandolfo: Yeah, and so.

74
00:04:02.850 --> 00:04:06.590
Yeah, and so
we tend to see key or prop, but

75
00:04:06.590 --> 00:04:09.930
that's just a convention it
doesn't actually mean anything.

76
00:04:11.460 --> 00:04:13.949
I usually just call it cow, my code.

77
00:04:13.949 --> 00:04:15.752
Just kidding, they don't.

78
00:04:15.752 --> 00:04:17.153
&gt;&gt; Speaker 2: Would it still be valid,

79
00:04:17.153 --> 00:04:21.850
if you did the variable declaration
outside of the four expression?

80
00:04:21.850 --> 00:04:23.640
Okay, and just passing the variable in.

81
00:04:23.640 --> 00:04:25.558
&gt;&gt; Bianca Gandolfo: Mm-hm.

82
00:04:25.558 --> 00:04:26.740
Cool.

83
00:04:26.740 --> 00:04:29.610
&gt;&gt; Speaker 3: Why is that on the key and
not on the value?

84
00:04:29.610 --> 00:04:33.330
So how does it know that cow
is referring to the key?

85
00:04:34.380 --> 00:04:35.490
&gt;&gt; Bianca Gandolfo: Cuz
that's just how the loop is.

86
00:04:35.490 --> 00:04:36.419
So that variable,

87
00:04:36.419 --> 00:04:39.566
whatever variable you put here
before the in is gonna be the key.

88
00:04:39.566 --> 00:04:40.814
&gt;&gt; Speaker 3: Okay.

89
00:04:40.814 --> 00:04:44.135
The key and so,
you thought it rather, whatever for

90
00:04:44.135 --> 00:04:48.830
the value if you wanna do loop out,
cardboard now and testing?

91
00:04:48.830 --> 00:04:50.920
&gt;&gt; Bianca Gandolfo: Totally, and
that will be my next question.

92
00:04:52.060 --> 00:04:54.900
Let's see, who here is really shy?

93
00:04:54.900 --> 00:04:56.610
I'm gonna pick on you.

94
00:04:56.610 --> 00:04:59.490
What about,
you look particularly shy this morning.

95
00:05:00.510 --> 00:05:02.720
If we wanted to print out the value.

96
00:05:02.720 --> 00:05:07.610
So, just like Rich in the front row said.

97
00:05:08.660 --> 00:05:10.950
If we wanted to print out the value,
how would we do that?

98
00:05:10.950 --> 00:05:15.450
So if we wanted to do cardboard,
meow, testing one, two, three.

99
00:05:15.450 --> 00:05:16.090
How we do that?

100
00:05:18.240 --> 00:05:19.170
&gt;&gt; Speaker 4: You're asking me, right?

101
00:05:19.170 --> 00:05:19.847
&gt;&gt; Bianca Gandolfo: Yeah, I'm asking you.

102
00:05:19.847 --> 00:05:22.926
&gt;&gt; Speaker 4: Yeah, I don't know, I was
literally just playing around with that,

103
00:05:22.926 --> 00:05:25.287
trying to get that exact same
thing here in my editor.

104
00:05:25.287 --> 00:05:26.237
&gt;&gt; Bianca Gandolfo: All right.

105
00:05:26.237 --> 00:05:26.892
&gt;&gt; Speaker 4: I don't know.

106
00:05:26.892 --> 00:05:29.140
&gt;&gt; Bianca Gandolfo: Cool, that's fair.

107
00:05:29.140 --> 00:05:30.744
What about.

108
00:05:30.744 --> 00:05:34.535
What about you, over there.

109
00:05:34.535 --> 00:05:37.997
&gt;&gt; Speaker 5: [INAUDIBLE]
&gt;&gt; Bianca Gandolfo: Cool.

110
00:05:37.997 --> 00:05:44.061
So box, bracket, cow.

111
00:05:44.061 --> 00:05:46.190
Will that work?

112
00:05:46.190 --> 00:05:48.860
&gt;&gt; Speaker 2: Yep.

113
00:05:48.860 --> 00:05:49.540
&gt;&gt; Bianca Gandolfo: What about this?

114
00:05:53.670 --> 00:05:55.430
What about purple shirt, front row.

115
00:05:55.430 --> 00:05:56.036
Is that gonna work?

116
00:05:56.036 --> 00:05:57.318
&gt;&gt; Speaker 6: Yes.

117
00:05:57.318 --> 00:05:59.025
&gt;&gt; Bianca Gandolfo: Why?

118
00:05:59.025 --> 00:06:02.606
&gt;&gt; Speaker 6: If this
bracket is the same as

119
00:06:03.680 --> 00:06:06.359
&gt;&gt; Bianca Gandolfo: It's close except for

120
00:06:06.359 --> 00:06:07.205
when?

121
00:06:07.205 --> 00:06:07.834
&gt;&gt; Speaker 2: When it's not.

122
00:06:07.834 --> 00:06:10.226
[LAUGH]
&gt;&gt; Bianca Gandolfo: Yeah, what it's not.

123
00:06:10.226 --> 00:06:11.709
&gt;&gt; [LAUGH]
&gt;&gt; Speaker 6: When it's not.

124
00:06:11.709 --> 00:06:13.980
&gt;&gt; [LAUGH]
&gt;&gt; Bianca Gandolfo: Yeah, except for

125
00:06:13.980 --> 00:06:16.570
when it's a variable or
a special character or a number.

126
00:06:17.900 --> 00:06:21.320
So in this case, actually,
cow is a variable.

127
00:06:21.320 --> 00:06:24.350
We can see that here,
actually, when we see var cow.

128
00:06:25.370 --> 00:06:27.430
We see that, that's a variable.

129
00:06:27.430 --> 00:06:33.410
So, in this case actually, we can only
use bracket notation for it to work.

130
00:06:35.890 --> 00:06:37.029
Thumbs on, thumbs on that?

131
00:06:38.510 --> 00:06:44.940
Everyone, everyone's gonna have their
thumbs, thumbs in the chat room.

132
00:06:44.940 --> 00:06:47.950
So, a b, lower case b is thumb up.

133
00:06:47.950 --> 00:06:49.490
And a p is thumb down.

134
00:06:52.060 --> 00:06:53.867
I know, chat room doesn't like-
&gt;&gt; Speaker 2: We have

135
00:06:53.867 --> 00:06:55.650
a question in the chat room.

136
00:06:55.650 --> 00:06:56.560
&gt;&gt; Bianca Gandolfo: Sure.

137
00:06:56.560 --> 00:06:58.680
&gt;&gt; Speaker 2: And this for
loop, he was just asking if

138
00:06:59.910 --> 00:07:04.708
you should be checking box that has
own property, before locking in?

139
00:07:04.708 --> 00:07:06.873
&gt;&gt; Bianca Gandolfo: Yeah.

140
00:07:06.873 --> 00:07:07.821
Yeah.

141
00:07:07.821 --> 00:07:10.765
And that's why when we get
to our functional program,

142
00:07:10.765 --> 00:07:14.797
we're going to talk about looping
using underscore and why it's better,

143
00:07:14.797 --> 00:07:18.070
because you don't have to do a check,
like that.

144
00:07:18.070 --> 00:07:18.988
But yeah, that's a good point.

145
00:07:18.988 --> 00:07:21.481
Cool.

146
00:07:21.481 --> 00:07:22.036
&gt;&gt; Speaker 7: Bianca?

147
00:07:22.036 --> 00:07:22.942
&gt;&gt; Bianca Gandolfo: Mm-hm.

148
00:07:22.942 --> 00:07:25.926
&gt;&gt; Speaker 7: In that second assignment,
box bracket 0,

149
00:07:25.926 --> 00:07:28.990
I'm still struggling with that.

150
00:07:28.990 --> 00:07:31.850
What is that actually doing, again?

151
00:07:31.850 --> 00:07:32.500
&gt;&gt; Bianca Gandolfo: This one here?

152
00:07:34.210 --> 00:07:34.800
&gt;&gt; Speaker 7: Yeah.

153
00:07:34.800 --> 00:07:41.630
&gt;&gt; Bianca Gandolfo: Yeah, so what that's
doing is It is creating a property zero.

154
00:07:41.630 --> 00:07:42.940
And so, you're passing it in there.

155
00:07:42.940 --> 00:07:46.460
Zero is a number, so
you don't need to put quotes around it.

156
00:07:46.460 --> 00:07:50.470
But underneath,
it's gonna be running two strings.

157
00:07:50.470 --> 00:07:55.760
So you can kind of imagine it,
to say like this.

158
00:07:55.760 --> 00:07:59.090
&gt;&gt; Speaker 7: So
it's not looking at A 0 with index and

159
00:07:59.090 --> 00:08:01.460
returning that material property.

160
00:08:03.470 --> 00:08:06.050
That's what I'm struggling with.

161
00:08:06.050 --> 00:08:08.855
&gt;&gt; Bianca Gandolfo: Sort of like,
you're thinking of an array.

162
00:08:08.855 --> 00:08:09.727
&gt;&gt; Speaker 7: Mm-hm, yeah.

163
00:08:09.727 --> 00:08:12.500
&gt;&gt; Bianca Gandolfo: Yeah,
no, no, this is different.

164
00:08:12.500 --> 00:08:19.190
And then also with an array, we'll talk
about that after the first exercise.

165
00:08:19.190 --> 00:08:21.290
That these things still work for
a raise and

166
00:08:21.290 --> 00:08:25.390
that the zeroith property in an array
is actually just a property name,

167
00:08:25.390 --> 00:08:29.460
it actually isn't paying attention to
the fact that it's the first one or not,

168
00:08:29.460 --> 00:08:34.920
it's actually like, zero colon value.

169
00:08:34.920 --> 00:08:35.650
In this case, meow.

170
00:08:35.650 --> 00:08:39.710
But yeah,
it has nothing to do with the order.

171
00:08:41.800 --> 00:08:43.880
&gt;&gt; Speaker 2: They're just asking,
if you could explain again,

172
00:08:43.880 --> 00:08:45.438
why dot notation wouldn't work?

173
00:08:45.438 --> 00:08:48.400
For that console.log.

174
00:08:48.400 --> 00:08:49.180
&gt;&gt; Bianca Gandolfo: Sure.
Yeah, so

175
00:08:49.180 --> 00:08:52.860
dot notation wouldn't work,
because key is a variable name.

176
00:08:53.980 --> 00:08:58.140
And since it's a variable,
we have to always use bracket notation.

177
00:08:58.140 --> 00:09:02.390
Because we want our interpreter
to look up that variable,

178
00:09:02.390 --> 00:09:05.730
instead of just using it as a string.

179
00:09:05.730 --> 00:09:10.010
So if I did put quotes around it,
what would happen is we're looking for

180
00:09:10.010 --> 00:09:15.820
a property now called key
on box not on variable.

181
00:09:15.820 --> 00:09:18.110
So the variable key in this case,

182
00:09:18.110 --> 00:09:22.139
in this loop is going to hold
different property names.

183
00:09:23.280 --> 00:09:27.090
For all the property names and
the object each time.

184
00:09:27.090 --> 00:09:34.140
So this object has three properties,
so it's gonna loop three times.

185
00:09:34.140 --> 00:09:39.060
And every time, key is gonna hold
the value of the property name.

186
00:09:39.060 --> 00:09:41.740
So the first time, it might hold material.

187
00:09:41.740 --> 00:09:46.240
The second time it might hold zero, but
it's gonna be stringfied zero, actually.

188
00:09:46.240 --> 00:09:49.460
And then a third time,
it's gonna hold srilona.

189
00:09:51.090 --> 00:09:55.470
That's how you pronounce this third one,
I think.

190
00:09:55.470 --> 00:09:56.730
My accent's kinda off, but.

191
00:09:58.010 --> 00:09:59.830
&gt;&gt; Speaker 2: Do you leave
the bar on the four loop?

192
00:09:59.830 --> 00:10:03.240
So starting out [INAUDIBLE]
&gt;&gt; Bianca Gandolfo: You should always use

193
00:10:03.240 --> 00:10:07.152
far, because it keeps it from
being a [INAUDIBLE] variable.

194
00:10:07.152 --> 00:10:08.940
&gt;&gt; [INAUDIBLE]
&gt;&gt; Bianca Gandolfo: But,

195
00:10:08.940 --> 00:10:13.270
it wouldn't break it if you didn't do it,
but it might interfere with other.

196
00:10:13.270 --> 00:10:17.063
If you have a bunch of for
in loops and they all have key, and

197
00:10:17.063 --> 00:10:20.559
they're all global,
it could do some weird things.

198
00:10:20.559 --> 00:10:22.787
Potentially.

199
00:10:22.787 --> 00:10:27.440
Yeah, cool.

200
00:10:27.440 --> 00:10:28.050
Sure.

201
00:10:28.050 --> 00:10:31.600
&gt;&gt; Speaker 8: I actually get three
undefined's when I run that.

202
00:10:31.600 --> 00:10:32.100
&gt;&gt; Bianca Gandolfo: Really?

203
00:10:33.450 --> 00:10:35.295
With the quotes around it?

204
00:10:35.295 --> 00:10:35.860
&gt;&gt; Speaker 8: Yes.

205
00:10:35.860 --> 00:10:41.939
&gt;&gt; Bianca Gandolfo: Yeah,
cuz we don't have a property key,

206
00:10:41.939 --> 00:10:44.685
at
&gt;&gt; Speaker 8: [COUGH] In the box.

207
00:10:44.685 --> 00:10:46.020
&gt;&gt; Bianca Gandolfo: In the box.

208
00:10:46.020 --> 00:10:48.840
So the quotes around it is an example
of how you shouldn't do it.

209
00:10:48.840 --> 00:10:49.620
&gt;&gt; Speaker 8: All right [LAUGH]
&gt;&gt; Bianca Gandolfo: So

210
00:10:49.620 --> 00:10:52.450
without the quotes is an example
of how you should do it.

211
00:10:52.450 --> 00:10:53.150
&gt;&gt; Speaker 8: Great.

212
00:10:53.150 --> 00:10:54.200
&gt;&gt; Bianca Gandolfo: Yeah.

213
00:10:54.200 --> 00:10:56.410
Why do you think that there's
three undefined's though?

214
00:10:58.280 --> 00:11:00.260
&gt;&gt; Speaker 8: Cuz it's going through each
&gt;&gt; Bianca Gandolfo: Mm-hm.

215
00:11:00.260 --> 00:11:01.329
&gt;&gt; Speaker 8: Property-
&gt;&gt; Bianca Gandolfo: Totally.

216
00:11:01.329 --> 00:11:02.740
&gt;&gt; Speaker 8: Of each one of them.

217
00:11:02.740 --> 00:11:05.740
&gt;&gt; Bianca Gandolfo: Even though we're not
doing anything with those properties,

218
00:11:05.740 --> 00:11:07.140
it's still gonna loop three times.

219
00:11:07.140 --> 00:11:10.800
Even though you're looking up that quotes.

220
00:11:10.800 --> 00:11:13.280
&gt;&gt; Speaker 8: Because if while doesn't
know if there is one called key, so

221
00:11:13.280 --> 00:11:16.920
it's gotta go through it to look for it.

222
00:11:16.920 --> 00:11:20.090
&gt;&gt; Bianca Gandolfo: Hm, it's just gonna
loop No matter what it's gonna loop three

223
00:11:20.090 --> 00:11:22.570
times, cuz that's just
the mechanics of a loop.

224
00:11:22.570 --> 00:11:27.920
It's gonna loop through all of
the properties on the object.

225
00:11:30.210 --> 00:11:30.830
Cool.

226
00:11:30.830 --> 00:11:33.350
&gt;&gt; Speaker 3: So you're iterating all the
properties, but you're always looking for

227
00:11:33.350 --> 00:11:34.530
the same thing.

228
00:11:34.530 --> 00:11:35.650
&gt;&gt; Bianca Gandolfo: Right.
&gt;&gt; Speaker 3: But if I was looking for

229
00:11:35.650 --> 00:11:36.680
key-
&gt;&gt; Speaker 10: But if we're looking for

230
00:11:36.680 --> 00:11:40.310
key in quotes How does that loop

231
00:11:40.310 --> 00:11:42.820
know that there isn't
&gt;&gt; Bianca Gandolfo: The loop doesn't

232
00:11:42.820 --> 00:11:43.440
know anything.

233
00:11:43.440 --> 00:11:44.315
&gt;&gt; Speaker 10: Right.
So it goes and

234
00:11:44.315 --> 00:11:48.009
it goes to the first property and
it checks to see if that one is quote key.

235
00:11:48.009 --> 00:11:49.840
It says, undefined.

236
00:11:49.840 --> 00:11:52.920
So it has to, it has to iterate
until it finds something.

237
00:11:52.920 --> 00:11:54.250
&gt;&gt; Speaker 3: Right, but
you're not comparing for

238
00:11:54.250 --> 00:11:56.090
key, you're just iterating
all the properties.

239
00:11:56.090 --> 00:11:58.462
And do something with
whatever that property is.

240
00:11:58.462 --> 00:12:01.568
&gt;&gt; Bianca Gandolfo: Whatever
you're doing in this block,

241
00:12:01.568 --> 00:12:04.260
the loop doesn't know about.

242
00:12:04.260 --> 00:12:07.627
&gt;&gt; Speaker 3: But if she called it
quote key or quote hello world,

243
00:12:07.627 --> 00:12:09.596
it wouldn't have mattered.

244
00:12:09.596 --> 00:12:10.343
&gt;&gt; Bianca Gandolfo: Yeah.

245
00:12:10.343 --> 00:12:11.547
Cool.

246
00:12:11.547 --> 00:12:14.809
Any more questions?

247
00:12:16.050 --> 00:12:18.990
Check.
&gt;&gt; Speaker 2: [COUGH] I think that

248
00:12:18.990 --> 00:12:22.860
another question,
are you also using bracket notation

249
00:12:22.860 --> 00:12:26.660
because one of the properties is a number,
or is it just because of the variable.

250
00:12:28.830 --> 00:12:29.830
&gt;&gt; Bianca Gandolfo: Just
because of the variable.

251
00:12:31.520 --> 00:12:33.770
Because again, just one last thing.

252
00:12:33.770 --> 00:12:37.070
If we put quotes around it or

253
00:12:37.070 --> 00:12:41.820
we use .key,
it's only gonna be looking for

254
00:12:41.820 --> 00:12:47.230
a property called key on the object,
which we don't have, right?

255
00:12:47.230 --> 00:12:50.930
And that's why we need
to have the brackets.

