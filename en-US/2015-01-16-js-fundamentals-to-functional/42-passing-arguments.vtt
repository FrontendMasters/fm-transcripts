WEBVTT

1
00:00:00.000 --> 00:00:04.088
[MUSIC]

2
00:00:04.088 --> 00:00:08.093
&gt;&gt; Bianca Gandolfo: So we passed
in callbacks, we called them, but

3
00:00:08.093 --> 00:00:13.694
what if we want to add an argument?
&gt;&gt; Bianca Gandolfo: And

4
00:00:13.694 --> 00:00:18.209
so here's an example of us passing
arguments to our function, so

5
00:00:18.209 --> 00:00:24.050
we have a couple math functions here one
is called increment, one is called square.

6
00:00:24.050 --> 00:00:26.000
So increment just adds one.

7
00:00:26.000 --> 00:00:30.970
Square is going to multiply itself,
it's going to multiply a number by itself.

8
00:00:30.970 --> 00:00:34.260
And here's our function
called doMathSoIDontHaveTo.

9
00:00:34.260 --> 00:00:38.350
And what it does is it takes a number and
then it takes a function.

10
00:00:38.350 --> 00:00:43.240
And what it does is it applies,
it calls that function with that number.

11
00:00:45.000 --> 00:00:49.650
And so we implement this by just
passing it, 5 so that's in.

12
00:00:49.650 --> 00:00:53.010
And then square,
which is the function up here.

13
00:00:54.760 --> 00:00:57.044
We enter into the function body and

14
00:00:57.044 --> 00:01:02.730
it's just gonna return.
&gt;&gt; Bianca Gandolfo: It's

15
00:01:02.730 --> 00:01:05.772
gonna return square with five,

16
00:01:05.772 --> 00:01:11.061
which is what?
&gt;&gt; Bianca Gandolfo: What is this?

17
00:01:11.061 --> 00:01:12.021
This is a math test.

18
00:01:12.021 --> 00:01:15.229
25.
&gt;&gt; Bianca Gandolfo: And

19
00:01:15.229 --> 00:01:18.621
what about this one?
&gt;&gt; Speaker 2: Five.

20
00:01:18.621 --> 00:01:19.981
&gt;&gt; Bianca Gandolfo: Five.

21
00:01:19.981 --> 00:01:21.672
This is just an example of,

22
00:01:21.672 --> 00:01:25.727
we just call a function as if it's
just stored in a variable name.

23
00:01:25.727 --> 00:01:27.048
There's no difference here.

24
00:01:36.307 --> 00:01:39.000
&gt;&gt; Bianca Gandolfo: So
how would we pass an argument here?

25
00:01:39.000 --> 00:01:40.550
To either isTrue or isFalse.

26
00:01:41.670 --> 00:01:44.967
What would we have to
change to pass argument?

27
00:01:54.447 --> 00:01:54.967
&gt;&gt; Bianca Gandolfo: Sean?

28
00:01:54.967 --> 00:01:56.707
&gt;&gt; Sean: Put it in the function.

29
00:01:56.707 --> 00:02:01.510
[INAUDIBLE]
&gt;&gt; Bianca Gandolfo: Mm-hm, so

30
00:02:01.510 --> 00:02:03.200
the first thing we'd have to do like this,
right?

31
00:02:04.540 --> 00:02:07.760
Assuming that we're getting our argument
is being passed in from the parent

32
00:02:07.760 --> 00:02:09.050
function, we'd have to put it here.

33
00:02:10.280 --> 00:02:12.410
And then yeah,
we just pass it just like this.

34
00:02:14.570 --> 00:02:21.770
Or we can just say even like this,
we can say var arg = 0 or something.

35
00:02:21.770 --> 00:02:24.490
And then we can just have
our arg inside the function.

36
00:02:26.650 --> 00:02:29.790
Or we could do it like that, either way.

37
00:02:29.790 --> 00:02:37.774
And then how would we call this function?
&gt;&gt; Speaker 4: Pull ifElse,

38
00:02:37.774 --> 00:02:40.828
and then condition, true or false and

39
00:02:40.828 --> 00:02:43.160
then your arguments gone.
&gt;&gt; Bianca Gandolfo: Mm-hm.

40
00:02:43.160 --> 00:02:47.400
And this would be a function,
this would be a function, and

41
00:02:47.400 --> 00:02:52.270
then, pass a number or whatever.

42
00:02:54.080 --> 00:03:01.778
Maybe a string.
&gt;&gt; Bianca Gandolfo: Cool.

43
00:03:01.778 --> 00:03:04.297
&gt;&gt; Speaker 5: Now, sorry.

44
00:03:04.297 --> 00:03:06.958
Cuz when we first did some of,

45
00:03:06.958 --> 00:03:12.384
when you did the A + B + C yesterday and
it was a return A + B cuz

46
00:03:12.384 --> 00:03:17.240
it didn't care if you had three arguments.
&gt;&gt; Bianca Gandolfo: Mm-hm.

47
00:03:17.240 --> 00:03:19.688
&gt;&gt; Speaker 5: Even if you don't specify it

48
00:03:19.688 --> 00:03:23.058
there in the function definition arg.

49
00:03:23.058 --> 00:03:27.605
It's just, so if you don't have that arg
up top there in the function definition.

50
00:03:27.605 --> 00:03:28.712
&gt;&gt; Bianca Gandolfo: Mm-hm.

51
00:03:28.712 --> 00:03:29.835
&gt;&gt; Speaker 5: But you ran ifElse,

52
00:03:29.835 --> 00:03:34.532
and you had that asdf at the end,
it's just not gonna do anything with that,

53
00:03:34.532 --> 00:03:37.120
like the C.
&gt;&gt; Bianca Gandolfo: Mm-hm, exactly.

54
00:03:38.290 --> 00:03:41.890
Exactly.
&gt;&gt; Speaker 6: Can you explain why we have

55
00:03:41.890 --> 00:03:44.310
to define the arg variable?

56
00:03:44.310 --> 00:03:49.420
Why couldn't we just when we actually
called the isTrue function just pass in

57
00:03:49.420 --> 00:03:53.560
the parameter at the time of calling it?
&gt;&gt; Bianca Gandolfo: Mm,

58
00:03:53.560 --> 00:03:55.900
because like here you mean?

59
00:03:55.900 --> 00:03:57.197
So if we had this function here.

60
00:04:03.298 --> 00:04:03.838
&gt;&gt; Bianca Gandolfo: [CROSSTALK]
Like where?

61
00:04:03.838 --> 00:04:05.762
Like here?
&gt;&gt; Speaker 6: Right there, and

62
00:04:05.762 --> 00:04:08.454
then when you put the asdf in the exact,

63
00:04:08.454 --> 00:04:12.410
in the front of the function indication.
&gt;&gt; Bianca Gandolfo: Okay cuz this here,

64
00:04:12.410 --> 00:04:14.500
this is just the function definition.

65
00:04:14.500 --> 00:04:19.250
We're not invoking the function here, so
the only way that we can give a parameter

66
00:04:19.250 --> 00:04:23.440
of value or cross an argument, is when
you're actually calling the function and

67
00:04:23.440 --> 00:04:26.480
so, we're actually calling
the function at this line.

68
00:04:26.480 --> 00:04:29.820
We're not calling the function here,
we're just passing the definition.

69
00:04:32.560 --> 00:04:33.980
So, if we were to call the function,

70
00:04:33.980 --> 00:04:37.720
you have to have the two parentheses.
&gt;&gt; Speaker 6: So

71
00:04:37.720 --> 00:04:42.062
how does the Like if you had
a quick event in jQuery,

72
00:04:42.062 --> 00:04:46.778
just thinking, can you pass the event
variable in the call back function?

73
00:04:46.778 --> 00:04:49.913
What does that look like?
&gt;&gt; Bianca Gandolfo: That's being so

74
00:04:49.913 --> 00:04:54.701
when whenever that element
is clicked jQuery is

75
00:04:54.701 --> 00:04:58.892
calling your call back function with that

76
00:04:58.892 --> 00:05:03.759
event object.
&gt;&gt; Bianca Gandolfo: So

77
00:05:03.759 --> 00:05:07.440
I have an example on the very top.

78
00:05:08.600 --> 00:05:13.450
So here, or sometimes you call it e.

79
00:05:13.450 --> 00:05:19.388
And then you've probably
seen it as e.preventDefault,

80
00:05:19.388 --> 00:05:22.788
right, or something like that.

81
00:05:22.788 --> 00:05:27.860
Here you're only defining
e as a parameter.

82
00:05:27.860 --> 00:05:30.530
So you're just saying,
I'm just gonna call this e, but

83
00:05:30.530 --> 00:05:35.340
you can call it you know this,
ASDF and do it that way,

84
00:05:35.340 --> 00:05:39.820
so whenever, say we have a click
even on just the body here.

85
00:05:39.820 --> 00:05:43.770
We click on it and
at that moment that function is called.

86
00:05:43.770 --> 00:05:48.290
So this function here is called
at the moment of clicking and

87
00:05:48.290 --> 00:05:50.990
that's why we get data for the e.

88
00:05:50.990 --> 00:05:56.790
So the e object or the event object
has data on where you actually

89
00:05:56.790 --> 00:05:59.965
clicked so
it's being passed at the time of clicking.

90
00:05:59.965 --> 00:06:04.260
Mm-hm.
&gt;&gt; Speaker 5: The question is, how does

91
00:06:04.260 --> 00:06:08.850
r get passed to isTrue and isFalse if
the parameter's only set on ifElse?

92
00:06:08.850 --> 00:06:11.660
&gt;&gt; Bianca Gandolfo: Let's see.

93
00:06:12.850 --> 00:06:14.668
One more time.
&gt;&gt; Speaker 5: So

94
00:06:14.668 --> 00:06:18.476
how does that r get passed to isTrue and

95
00:06:18.476 --> 00:06:22.527
isFalse if it's only set on the ifElse?

96
00:06:27.147 --> 00:06:30.537
&gt;&gt; Speaker 7: The function definition
would have to take a parameter, and

97
00:06:30.537 --> 00:06:33.548
then use that parameter in its definition.
&gt;&gt; Bianca Gandolfo: Mm-hm.

98
00:06:33.548 --> 00:06:36.142
&gt;&gt; Speaker 7: Or you'd have to use the

99
00:06:36.142 --> 00:06:43.160
argument's semi-array to get access to it.
&gt;&gt; Bianca Gandolfo: So,

100
00:06:43.160 --> 00:06:47.350
yeah, maybe this will answer the question.

101
00:06:50.540 --> 00:06:54.570
So, those are just example functions, but
this function then is a function that

102
00:06:54.570 --> 00:06:59.760
takes that argument and then passes it

103
00:07:02.280 --> 00:07:06.900
to the function and
we're just gonna console.log here, x.

104
00:07:06.900 --> 00:07:08.840
So x is a parameter.

105
00:07:08.840 --> 00:07:12.980
So this is where a parameter and
arguments got a little bit tricky.

106
00:07:12.980 --> 00:07:20.353
So arg at this point is a parameter,
x here is a parameter.

107
00:07:22.150 --> 00:07:25.500
asdf is a value that is an argument.

108
00:07:26.900 --> 00:07:28.220
All of these things are arguments in here.

109
00:07:28.220 --> 00:07:31.410
So true is an argument, this function
definition is an argument, and

110
00:07:32.850 --> 00:07:38.170
when we pass asdf,
arg now contains that value.

111
00:07:39.770 --> 00:07:45.170
arg here, is now you can imagine,
it's ASDF and

112
00:07:45.170 --> 00:07:50.176
that's an argument and now isTrue, this x,

113
00:07:50.176 --> 00:07:54.917
here in isTrue,
is then going to be ASDF and

114
00:07:54.917 --> 00:08:00.348
that's how you follow it
through the function.

115
00:08:07.827 --> 00:08:09.443
&gt;&gt; Speaker 5: Follow up question to that I

116
00:08:09.443 --> 00:08:13.730
think is, do you have to set that
parameter in the function definition of

117
00:08:13.730 --> 00:08:18.620
isTrue and isFalse?
&gt;&gt; Bianca Gandolfo: No, you don't.

118
00:08:18.620 --> 00:08:23.546
So the other option is if
you have no perimeters, or

119
00:08:23.546 --> 00:08:28.250
you don't know how many perimeters
you can use, the argument's keyword,

120
00:08:30.770 --> 00:08:35.790
which is gonna print out
an array of the arguments.

121
00:08:39.540 --> 00:08:41.450
So, if we only pause one argument and

122
00:08:41.450 --> 00:08:45.130
say ASTF it will have
ASTF In an array like object.

123
00:08:45.130 --> 00:08:48.620
So we covered this yesterday
in the function section,

124
00:08:48.620 --> 00:08:51.270
if you wanna review
the argument's key word.

125
00:08:51.270 --> 00:08:52.447
It's pretty interesting.

126
00:09:03.476 --> 00:09:03.976
&gt;&gt; Bianca Gandolfo: Cool.

