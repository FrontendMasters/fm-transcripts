WEBVTT

1
00:00:00.000 --> 00:00:03.539
[MUSIC]

2
00:00:03.539 --> 00:00:05.420
&gt;&gt; Bianca Gandolfo: I'm just
gonna jump right into looping.

3
00:00:06.430 --> 00:00:08.710
And well,
I'm sorry that's a misnamed slide.

4
00:00:08.710 --> 00:00:10.820
We're gonna talk a little
about constructors and

5
00:00:10.820 --> 00:00:14.910
we're gonna be using loops and we're
gonna build on this more tomorrow when

6
00:00:14.910 --> 00:00:16.400
we get into the functional programming.

7
00:00:16.400 --> 00:00:20.262
So we're gonna do some things here
just the manual way, which tomorrow,

8
00:00:20.262 --> 00:00:24.523
we'll sort of apply some functional
approaches using the underscore library.

9
00:00:24.523 --> 00:00:28.642
But the first thing I want to talk
about is the idea of a function as

10
00:00:28.642 --> 00:00:30.490
a constructor.

11
00:00:30.490 --> 00:00:34.360
And as we see, we have this function
called AnimalMaker on the screen.

12
00:00:34.360 --> 00:00:38.030
We have the capital A to let other
programmers know that this is

13
00:00:38.030 --> 00:00:39.240
a constructor.

14
00:00:39.240 --> 00:00:44.800
And what a constructor is, at its core,
is a function that returns an object.

15
00:00:44.800 --> 00:00:45.392
That's it.

16
00:00:45.392 --> 00:00:49.130
So we see here we have our AnimalMaker,
it's just returning a function.

17
00:00:49.130 --> 00:00:51.080
I'm sorry, it's returning an object.

18
00:00:51.080 --> 00:00:55.372
And what does this object,
what properties does this object contain?

19
00:01:00.002 --> 00:01:00.947
&gt;&gt; Speaker 2: Speak?

20
00:01:00.947 --> 00:01:01.550
&gt;&gt; Bianca Gandolfo: Speak, yeah.

21
00:01:01.550 --> 00:01:08.260
So speak, and it's a function that just
console logs the name of the animal.

22
00:01:09.930 --> 00:01:11.070
True?

23
00:01:11.070 --> 00:01:17.118
So, then if we wanted to
create an animal object,

24
00:01:17.118 --> 00:01:23.215
so var my animal, oops.
&gt;&gt; Bianca Gandolfo: Equals.

25
00:01:25.263 --> 00:01:25.770
&gt;&gt; Bianca Gandolfo: Just a second.

26
00:01:27.110 --> 00:01:28.090
To put our function in there.

27
00:01:28.090 --> 00:01:34.899
So var myAnimal = AnimalMaker.

28
00:01:34.899 --> 00:01:40.251
And then we could pass in a name.
&gt;&gt; Bianca Gandolfo: Who

29
00:01:40.251 --> 00:01:41.427
has a pet that they love?

30
00:01:45.992 --> 00:01:46.810
&gt;&gt; Bianca Gandolfo: What's it name?

31
00:01:46.810 --> 00:01:48.760
&gt;&gt; Speaker 3: Cheetah.
&gt;&gt; Bianca Gandolfo: Cheetah?

32
00:01:48.760 --> 00:01:50.567
Cheetah or Cheeto?
&gt;&gt; Speaker 3: Cheetah.

33
00:01:50.567 --> 00:01:51.156
&gt;&gt; Bianca Gandolfo: Cheetah, okay, like

34
00:01:51.156 --> 00:01:53.296
that.
&gt;&gt; Speaker 3: She looks like a Cheetah?

35
00:01:53.296 --> 00:01:54.171
&gt;&gt; Bianca Gandolfo: Cool.

36
00:01:54.171 --> 00:01:55.074
It's a kitty.

37
00:01:55.074 --> 00:01:56.026
Is that how you spell cheetah?

38
00:01:56.026 --> 00:01:58.444
Yeah, okay.

39
00:01:58.444 --> 00:02:04.462
So now, we just used our constructor
function to create our animal object.

40
00:02:04.462 --> 00:02:06.126
And here we are.

41
00:02:06.126 --> 00:02:14.213
And then,
if we then wanted our animal to speak,

42
00:02:14.213 --> 00:02:19.160
how do we go about doing that?

43
00:02:19.160 --> 00:02:23.256
Yeah we could use a dot, and then what?

44
00:02:23.256 --> 00:02:25.475
Yep, good job.

45
00:02:25.475 --> 00:02:27.160
.speak like that.

46
00:02:27.160 --> 00:02:33.230
And what's this gonna return?
&gt;&gt; Speaker 4: A function.

47
00:02:34.850 --> 00:02:37.778
No, there is a return isn't there?
&gt;&gt; Bianca Gandolfo: What's gonna

48
00:02:37.778 --> 00:02:43.266
happen?
&gt;&gt; Speaker 5: Don't

49
00:02:43.266 --> 00:02:45.750
we have to put the parentheses in there?
&gt;&gt; Bianca Gandolfo: Yeah, absolutely.

50
00:02:45.750 --> 00:02:49.770
So if we don't put the parentheses,
we just get a function, and

51
00:02:49.770 --> 00:02:51.480
that's not really what we expected, right?

52
00:02:51.480 --> 00:02:54.722
We actually,
we wanted to do what we expect it to do,

53
00:02:54.722 --> 00:02:58.576
which is to console.log("my name is ",
name), speak.

54
00:02:58.576 --> 00:03:01.685
And so it says, my name is Cheetah.

55
00:03:01.685 --> 00:03:04.740
Cool?

56
00:03:04.740 --> 00:03:06.776
So that's the essence of
a constructor function.

57
00:03:06.776 --> 00:03:12.484
And so we're taking some information and
we're turning it into an object that

58
00:03:12.484 --> 00:03:17.597
we then had, then we have a model of
our data that we can use in some way.

59
00:03:17.597 --> 00:03:20.582
And notice the rules again,
they don't change,

60
00:03:20.582 --> 00:03:23.504
the ways that we access
our methods are the same.

61
00:03:23.504 --> 00:03:28.840
We can use dot notation,
we can also use our bracket notation,

62
00:03:28.840 --> 00:03:32.572
like this guys.
&gt;&gt; Bianca Gandolfo: Like this.

63
00:03:32.572 --> 00:03:33.539
What am I missing?
&gt;&gt; Speaker 6: Quotes.

64
00:03:33.539 --> 00:03:34.445
&gt;&gt; Bianca Gandolfo: Quotes,

65
00:03:34.445 --> 00:03:38.440
exactly.
&gt;&gt; Bianca Gandolfo: There we are.

66
00:03:40.710 --> 00:03:45.150
So and then I was talking with
a student the other day about.

67
00:03:45.150 --> 00:03:45.970
&gt;&gt; Speaker 7: So and Britt, I'm sorry,

68
00:03:45.970 --> 00:03:46.810
in back of notation you

69
00:03:46.810 --> 00:03:48.300
had the invocation also?

70
00:03:48.300 --> 00:03:49.130
&gt;&gt; Bianca Gandolfo: Yeah.
&gt;&gt; Speaker 7: Okay.

71
00:03:49.130 --> 00:03:49.700
&gt;&gt; Bianca Gandolfo: Absolutely,

72
00:03:49.700 --> 00:03:50.208
yep.
&gt;&gt; Speaker 7: Okay.

73
00:03:50.208 --> 00:03:52.327
&gt;&gt; Bianca Gandolfo: That's important.

74
00:03:56.029 --> 00:03:59.186
&gt;&gt; Bianca Gandolfo: So

75
00:04:06.899 --> 00:04:08.351
&gt;&gt; Bianca Gandolfo: So I was talking with

76
00:04:08.351 --> 00:04:13.733
someone the other day about when you
inspect the inside of a function here,

77
00:04:13.733 --> 00:04:17.690
it's not saying Cheetah, it's saying name.

78
00:04:17.690 --> 00:04:22.452
We got into a discussion about why
doesn't it just say Cheetah if it's

79
00:04:22.452 --> 00:04:23.752
gonna be Cheetah?

80
00:04:23.752 --> 00:04:24.936
And the answer is,

81
00:04:24.936 --> 00:04:30.119
is that before you call a function your
parameters don't have a value, remember?

82
00:04:30.119 --> 00:04:34.293
And so even though we know
that it's gonna be Cheetah,

83
00:04:34.293 --> 00:04:40.480
that variable gets its value
dynamically when you call the function.

84
00:04:40.480 --> 00:04:44.180
And so that's something to note when
you're going through your code.

