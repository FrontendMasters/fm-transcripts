WEBVTT

1
00:00:00.000 --> 00:00:03.793
[MUSIC]

2
00:00:03.793 --> 00:00:06.000
We're done with the hooks I wanna go over.

3
00:00:06.000 --> 00:00:11.030
There are more but these are the most
common ones, the ones we looked at.

4
00:00:11.030 --> 00:00:14.750
So now we're talking about
transitioning from within a wrap.

5
00:00:14.750 --> 00:00:19.780
So this would be for example if,
you go to a particular

6
00:00:19.780 --> 00:00:24.169
URL like if you go to org/facebook/react,
and

7
00:00:24.169 --> 00:00:30.165
I want to basically redirect
to org/facebook/react/repost.

8
00:00:30.165 --> 00:00:35.209
I want that to take you to
the list of reposts by default.

9
00:00:35.209 --> 00:00:40.022
You can use something called
transitionTo or replaceWith.

10
00:00:40.022 --> 00:00:44.409
And the signatures are very similar,
the arguments are the same.

11
00:00:44.409 --> 00:00:47.541
And you can use them in
a couple different ways,

12
00:00:47.541 --> 00:00:53.120
depending on whether you have dynamic
segments that you need to populate.

13
00:00:53.120 --> 00:00:57.350
So you pass in the route name, you pass in
the models that are necessary in order to

14
00:00:57.350 --> 00:01:01.700
populate that dynamic segment
to actually be models or

15
00:01:01.700 --> 00:01:05.500
IDs which will just directly
be placed into the URL.

16
00:01:05.500 --> 00:01:09.290
And then there's this options object
if you wanted to use query params,

17
00:01:09.290 --> 00:01:09.878
things like that.

18
00:01:09.878 --> 00:01:13.160
So you can even transition
to the current route, but

19
00:01:13.160 --> 00:01:17.690
add a query param and
this will be a way of accomplishing that.

20
00:01:19.340 --> 00:01:20.560
Does this make sense to everybody?

21
00:01:22.460 --> 00:01:26.210
Why replace with, not transition tos?
&gt;&gt; Great question, and

22
00:01:26.210 --> 00:01:27.975
I forgot to explain that, I'm sorry.

23
00:01:27.975 --> 00:01:31.895
transitionTo will add
to the history stack,

24
00:01:31.895 --> 00:01:36.540
replaceWith will replace the top
most frame in the history stack.

25
00:01:36.540 --> 00:01:40.902
So if you find that you're hitting
the back button and something weird is

26
00:01:40.902 --> 00:01:45.839
happening, you should consider whether
replaceWith or transitionTo is the more

27
00:01:45.839 --> 00:01:51.650
appropriate thing to do.
&gt;&gt; They're asking,

28
00:01:51.650 --> 00:01:55.466
if controllers are going away,
why do we need to do the really important

29
00:01:55.466 --> 00:01:58.010
stuff to set them up?
&gt;&gt; There's

30
00:01:58.010 --> 00:02:01.590
a high degree of overlap
between what controllers do and

31
00:02:01.590 --> 00:02:05.390
what components do,
which we will talk about later.

32
00:02:05.390 --> 00:02:10.550
And once the work is done,
which is a soon upcoming feature,

33
00:02:10.550 --> 00:02:16.510
for what's called routable components,
you will have a component,

34
00:02:16.510 --> 00:02:20.280
it'll be setup, I don't know what the
actual signature of the method's gonna be,

35
00:02:20.280 --> 00:02:24.290
but think of it as setup component
instead of setup controller.

36
00:02:24.290 --> 00:02:29.380
And the thing that you
will put in those hooks,

37
00:02:29.380 --> 00:02:34.640
the purpose of that setup hook,
will likely remain the same.

38
00:02:34.640 --> 00:02:39.260
It's just an object that is not
a singleton, that doesn't stick around for

39
00:02:39.260 --> 00:02:43.280
the lifetime of the app, unless
introduce the potential for leaking.

40
00:02:45.200 --> 00:02:48.210
It won't be a controller anymore,
it will be a component which when you

41
00:02:48.210 --> 00:02:53.460
navigate away from that route
it's torn down, it's destroyed,

42
00:02:53.460 --> 00:02:57.290
and if you come back you have a brand
new clean instance to work with.

