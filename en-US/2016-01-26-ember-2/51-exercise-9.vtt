WEBVTT

1
00:00:00.000 --> 00:00:03.946
[MUSIC]

2
00:00:03.946 --> 00:00:07.797
&gt;&gt; Mike North: I want to build
a helper that does the following, so

3
00:00:07.797 --> 00:00:13.892
we've got in our GitHub repost Component,
GitHub repo Component I should say,

4
00:00:13.892 --> 00:00:19.420
we have account for the number of
watchers and the number of forks.

5
00:00:19.420 --> 00:00:22.270
And some of these are big numbers.

6
00:00:22.270 --> 00:00:25.990
And I wanna express those,

7
00:00:25.990 --> 00:00:31.167
if the number is greater than 1000

8
00:00:31.167 --> 00:00:36.020
as 2.6k instead of 2592, so

9
00:00:36.020 --> 00:00:39.560
just round reasonably.

10
00:00:39.560 --> 00:00:44.850
But the point of the exercise
is to use a helper here

11
00:00:44.850 --> 00:00:50.160
to sort of format this number nicely and
then we can use it throughout our app

12
00:00:50.160 --> 00:00:55.620
to kind of have a very consistent
way of representing a large number.

13
00:00:55.620 --> 00:00:59.600
And it's common to do this with dates and
with currencies.

14
00:00:59.600 --> 00:01:01.660
This is great, great way to use a helper.

15
00:01:02.730 --> 00:01:09.200
And because we have testing under our belt
now, I'd like some unit test coverage.

16
00:01:09.200 --> 00:01:15.060
And this is very easy to test
with a unit test because,

17
00:01:15.060 --> 00:01:17.775
unlike a computed property where
we have to create an object and

18
00:01:17.775 --> 00:01:24.070
to have to place that property on
an object, here, if we look at my example,

19
00:01:24.070 --> 00:01:28.670
all you need to do is pass in an array
of parameters representing in order

20
00:01:30.200 --> 00:01:35.550
the unnamed arguments, so
you would pass in one and then framework.

21
00:01:35.550 --> 00:01:38.680
And then you should get a string
returned from that function.

22
00:01:40.930 --> 00:01:43.220
That is what you expect.

23
00:01:43.220 --> 00:01:44.850
So this can be tested without

24
00:01:46.130 --> 00:01:48.730
adding it to an object you should
just be able to test it right away

