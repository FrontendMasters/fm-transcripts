WEBVTT

1
00:00:00.000 --> 00:00:03.726
[MUSIC]

2
00:00:03.726 --> 00:00:06.980
&gt;&gt; Mike North: I want us to
jump into our example app here.

3
00:00:06.980 --> 00:00:11.520
And this is great,
we're coding early in the day here.

4
00:00:11.520 --> 00:00:16.180
We're gonna add some loading and
error functionality to our app.

5
00:00:18.140 --> 00:00:21.620
And we'll aim to do this quickly.

6
00:00:21.620 --> 00:00:25.240
Because this is sort of one of these
concepts that it's good to know,

7
00:00:25.240 --> 00:00:30.020
but people don't typically dive
into deep complexity here.

8
00:00:30.020 --> 00:00:34.643
So I think that we'll probably just
take 10 or 15 minutes this time.

9
00:00:36.548 --> 00:00:40.110
&gt;&gt; Mike North: The idea is I've
got two different, two URLs.

10
00:00:40.110 --> 00:00:45.640
As you go from the orgs list into
a particular org, I want to use a spinner.

11
00:00:45.640 --> 00:00:50.530
And SpinKit is a great place to look for
pure CSS spinners.

12
00:00:50.530 --> 00:00:56.594
You can just drop some
style into styles/app.css,

13
00:00:56.594 --> 00:01:00.040
which is where all of
our styles go right now.

14
00:01:00.040 --> 00:01:07.040
And put a little HTML, and
your loading .hbs, and this will work.

15
00:01:08.200 --> 00:01:12.100
I also want us to flesh
out a little example of

16
00:01:12.100 --> 00:01:15.470
catching a particular
error in an error action.

17
00:01:15.470 --> 00:01:19.720
In this case it will be
when we ask GitHub for

18
00:01:19.720 --> 00:01:23.280
information on an org that
it doesn't know about.

19
00:01:23.280 --> 00:01:23.920
It will return a 404.

20
00:01:23.920 --> 00:01:31.790
I want us to handle that specific
case by saying this org is not found,

21
00:01:31.790 --> 00:01:36.870
rather than having everything sort of
fall into the general error category.

22
00:01:38.660 --> 00:01:42.760
And if you want to go further,

23
00:01:44.210 --> 00:01:49.320
try using the debugger
handlebars helper in error.hbs.

24
00:01:49.320 --> 00:01:51.130
And you can see that you actually have

25
00:01:52.370 --> 00:01:57.470
the jQuery XHR object that has the status
code and the response from the API.

26
00:01:57.470 --> 00:02:00.070
That's available in
the context of that template.

27
00:02:00.070 --> 00:02:05.080
And so you could actually write out
the status code and the status message, so

28
00:02:05.080 --> 00:02:10.230
that the user understands access denied
is different than general server error.

29
00:02:10.230 --> 00:02:13.600
And probably,
that would be troubleshot a different way.

30
00:02:14.800 --> 00:02:19.640
So let's jump into this for,
let's say 15 minutes, and

31
00:02:19.640 --> 00:02:23.180
then the next topic we'll
move on to is components.

32
00:02:23.180 --> 00:02:25.840
And in terms of where you should start,

33
00:02:25.840 --> 00:02:29.547
the code that you should start with for
this exercise,

34
00:02:29.547 --> 00:02:34.720
it will be master of the code that is in
the front end master's org on Github.

35
00:02:34.720 --> 00:02:38.373
All right, thanks guys.

36
00:02:38.373 --> 00:02:39.832
Any questions?

37
00:02:39.832 --> 00:02:43.054
&gt;&gt; Speaker 2: [SOUND] Question
about the loading template.

38
00:02:43.054 --> 00:02:44.334
&gt;&gt; Mike North: Yes.

39
00:02:44.334 --> 00:02:47.377
&gt;&gt; Speaker 2: It seems to affect
all of its sibling templates.

40
00:02:47.377 --> 00:02:49.510
&gt;&gt; Mike North: In what way?

41
00:02:49.510 --> 00:02:52.160
&gt;&gt; Speaker 2: So
I drop it into the org folder and

42
00:02:52.160 --> 00:02:56.580
get it on loading repos and
loading erepo as well.

43
00:02:56.580 --> 00:03:00.640
&gt;&gt; Mike North: Yes, so
remember that when you drop that

44
00:03:00.640 --> 00:03:05.520
template in a particular place,
the parent of the route

45
00:03:06.900 --> 00:03:10.670
that that corresponds to we're
not defining a loading route.

46
00:03:10.670 --> 00:03:12.090
That comes for free.

47
00:03:12.090 --> 00:03:14.660
You can see that it exists
in the Ember inspector.

48
00:03:14.660 --> 00:03:18.320
But whenever you're pivoting
on that particular parent,

49
00:03:18.320 --> 00:03:21.210
that loading state is gonna
be what is made active.

50
00:03:21.210 --> 00:03:25.790
And you can get deeper and
customize it so that, for example,

51
00:03:25.790 --> 00:03:32.062
you only enter the loading substate if the
wait has been beyond a certain tolerance.

52
00:03:32.062 --> 00:03:34.686
&gt;&gt; Speaker 2: And
then it's like loading the action hook.

53
00:03:34.686 --> 00:03:36.607
&gt;&gt; Mike North: Yes.

54
00:03:36.607 --> 00:03:37.257
&gt;&gt; Speaker 2: Okay.

55
00:03:37.257 --> 00:03:41.703
&gt;&gt; Mike North: You do that in the loading
action by bubbling it up only in

56
00:03:41.703 --> 00:03:46.730
the event that you're still
loading beyond a certain extent.

57
00:03:47.860 --> 00:03:51.150
It is not simple enough that I
want to try to tackle it in this,

58
00:03:51.150 --> 00:03:54.160
but that's generally-
&gt;&gt; Speaker 2: If I wanted that loading

59
00:03:54.160 --> 00:03:57.980
state to only target rebo's and
not the repo route which you are,

60
00:03:57.980 --> 00:04:01.410
essentially, can I do
that in the loading hook?

61
00:04:01.410 --> 00:04:09.756
I'd say, if your intended
destination was repose [INAUDIBLE].

62
00:04:09.756 --> 00:04:11.860
&gt;&gt; Mike North: So-
&gt;&gt; Speaker 2: It doesn't work.

63
00:04:11.860 --> 00:04:14.970
&gt;&gt; Mike North: It's a little bit more
complicated than that the way we have our

64
00:04:14.970 --> 00:04:15.890
routes set up currently.

65
00:04:17.250 --> 00:04:20.129
So I don't wanna claim
that it's as simple as

66
00:04:21.370 --> 00:04:23.570
waiting a couple of seconds
in returning through that.

67
00:04:23.570 --> 00:04:27.360
The reason is that, that action is
gonna fire immediately when you start

68
00:04:27.360 --> 00:04:29.290
transitioning, when we
know we're going to load.

69
00:04:29.290 --> 00:04:35.060
And that's basically, as soon as your
model hook returns an unresolved promise,

70
00:04:35.060 --> 00:04:37.280
we know that we're gonna start loading.

71
00:04:37.280 --> 00:04:42.070
And so, you know,
if you want it to wait 200 milliseconds

72
00:04:42.070 --> 00:04:45.730
before you actually transition into
the state you can't simply just

73
00:04:47.460 --> 00:04:51.000
you know handle that
template in the action.

74
00:04:51.000 --> 00:04:54.120
&gt;&gt; Speaker 2: So I initially assumed if
I didn't want to see this on repo I make

75
00:04:54.120 --> 00:04:56.950
a repos folder that currently
doesn't exist and put my own

76
00:04:56.950 --> 00:05:01.720
template inside that and that will cause
it to only if I use that loading template,

77
00:05:01.720 --> 00:05:06.290
when it transitions from org to-
&gt;&gt; Mike North: It totally

78
00:05:06.290 --> 00:05:10.040
depends on which route
you are pivoting on.

79
00:05:10.040 --> 00:05:14.860
And so potentially if I am
drilling into that folder

80
00:05:14.860 --> 00:05:19.490
from somewhere higher up in my hierarchy,
what I'm pivoting on could potentially

81
00:05:20.510 --> 00:05:24.410
be some of the living
state if that makes sense.

82
00:05:25.810 --> 00:05:27.180
All right other questions?

83
00:05:27.180 --> 00:05:32.871
&gt;&gt; Speaker 3: There is a question on what
is the difference between org_loading and

84
00:05:32.871 --> 00:05:34.227
org.loading.

85
00:05:34.227 --> 00:05:35.315
&gt;&gt; Mike North: Good question.

86
00:05:35.315 --> 00:05:41.172
&gt;&gt; Speaker 3: And
like where org.loading is under the org

87
00:05:41.172 --> 00:05:45.450
&gt;&gt; Mike North: So org_loading

88
00:05:45.450 --> 00:05:48.810
is probably what their
seeing in the Ember specter.

89
00:05:50.560 --> 00:05:54.468
We'll have to try it out and
see how it works.

90
00:05:54.468 --> 00:05:58.040
I know org.loading will work for
this example and

91
00:05:58.040 --> 00:06:02.320
it fits with the conventions that
we've been using for our other routes.

92
00:06:02.320 --> 00:06:03.960
So I would go in that direction.

93
00:06:07.200 --> 00:06:09.710
&gt;&gt; Speaker 3: Yeah, he's saying it
shows up in the Ember inspector.

94
00:06:09.710 --> 00:06:10.570
&gt;&gt; Mike North: Yes, it does.

95
00:06:13.370 --> 00:06:17.470
&gt;&gt; Speaker 2: You can customize
that before uploading your own.

96
00:06:17.470 --> 00:06:18.300
&gt;&gt; Mike North: You could if you wanted to.

97
00:06:20.370 --> 00:06:21.780
&gt;&gt; Speaker 2: And org.loading controller.

98
00:06:21.780 --> 00:06:22.950
Dirty word.

99
00:06:22.950 --> 00:06:25.660
&gt;&gt; Mike North: There is
a controller there but

100
00:06:26.710 --> 00:06:32.140
again that's going beyond I just want
to cover sort of simple use of this and

101
00:06:32.140 --> 00:06:34.590
then we can move on to components
which are more interesting.

