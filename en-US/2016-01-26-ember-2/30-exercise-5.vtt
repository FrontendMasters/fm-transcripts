WEBVTT

1
00:00:00.000 --> 00:00:03.726
[MUSIC]

2
00:00:03.726 --> 00:00:06.980
&gt;&gt; Mike North: I want us to
jump into our example app here.

3
00:00:06.980 --> 00:00:11.520
And this is great,
we're coding early in the day here.

4
00:00:11.520 --> 00:00:16.180
We're gonna add some loading and
error functionality to our app.

5
00:00:18.140 --> 00:00:21.620
And we'll aim to do this quickly.

6
00:00:21.620 --> 00:00:25.240
Because this is sort of one of these
concepts that it's good to know,

7
00:00:25.240 --> 00:00:30.020
but people don't typically dive
into deep complexity here.

8
00:00:30.020 --> 00:00:33.047
So I think that we'll
probably just take 10 or

9
00:00:33.047 --> 00:00:38.042
15 minutes this time.
&gt;&gt; Mike North: The idea is I've got two

10
00:00:38.042 --> 00:00:40.110
different, two URLs.

11
00:00:40.110 --> 00:00:45.640
As you go from the orgs list into
a particular org, I want to use a spinner.

12
00:00:45.640 --> 00:00:50.530
And SpinKit is a great place to look for
pure CSS spinners.

13
00:00:50.530 --> 00:00:56.594
You can just drop some
style into styles/app.css,

14
00:00:56.594 --> 00:01:00.040
which is where all of
our styles go right now.

15
00:01:00.040 --> 00:01:07.040
And put a little HTML, and
your loading .hbs, and this will work.

16
00:01:08.200 --> 00:01:12.100
I also want us to flesh
out a little example of

17
00:01:12.100 --> 00:01:15.470
catching a particular
error in an error action.

18
00:01:15.470 --> 00:01:19.720
In this case it will be
when we ask GitHub for

19
00:01:19.720 --> 00:01:23.280
information on an org that
it doesn't know about.

20
00:01:23.280 --> 00:01:23.920
It will return a 404.

21
00:01:23.920 --> 00:01:31.790
I want us to handle that specific
case by saying this org is not found,

22
00:01:31.790 --> 00:01:36.870
rather than having everything sort of
fall into the general error category.

23
00:01:38.660 --> 00:01:42.760
And if you want to go further,

24
00:01:44.210 --> 00:01:49.320
try using the debugger
handlebars helper in error.hbs.

25
00:01:49.320 --> 00:01:51.130
And you can see that you actually have

26
00:01:52.370 --> 00:01:57.470
the jQuery XHR object that has the status
code and the response from the API.

27
00:01:57.470 --> 00:02:00.070
That's available in
the context of that template.

28
00:02:00.070 --> 00:02:05.080
And so you could actually write out
the status code and the status message, so

29
00:02:05.080 --> 00:02:10.230
that the user understands access denied
is different than general server error.

30
00:02:10.230 --> 00:02:13.600
And probably,
that would be troubleshot a different way.

31
00:02:14.800 --> 00:02:19.640
So let's jump into this for,
let's say 15 minutes, and

32
00:02:19.640 --> 00:02:23.180
then the next topic we'll
move on to is components.

33
00:02:23.180 --> 00:02:25.840
And in terms of where you should start,

34
00:02:25.840 --> 00:02:29.547
the code that you should start with for
this exercise,

35
00:02:29.547 --> 00:02:34.720
it will be master of the code that is in
the front end master's org on Github.

36
00:02:34.720 --> 00:02:38.373
All right, thanks guys.

37
00:02:38.373 --> 00:02:41.356
Any questions?
&gt;&gt; Speaker 2: [SOUND] Question about

38
00:02:41.356 --> 00:02:44.334
the loading template.
&gt;&gt; Mike North: Yes.

39
00:02:44.334 --> 00:02:44.852
&gt;&gt; Speaker 2: It seems

40
00:02:44.852 --> 00:02:49.510
to affect all of its sibling templates.
&gt;&gt; Mike North: In what way?

41
00:02:49.510 --> 00:02:50.560
&gt;&gt; Speaker 2: So I drop it into

42
00:02:50.560 --> 00:02:55.040
the org folder and
get it on loading repos and

43
00:02:55.040 --> 00:03:00.040
loading erepo as well.
&gt;&gt; Mike North: Yes, so remember that when

44
00:03:00.040 --> 00:03:05.520
you drop that template in a particular
place, the parent of the route

45
00:03:06.900 --> 00:03:10.670
that that corresponds to we're
not defining a loading route.

46
00:03:10.670 --> 00:03:12.090
That comes for free.

47
00:03:12.090 --> 00:03:14.660
You can see that it exists
in the Ember inspector.

48
00:03:14.660 --> 00:03:18.320
But whenever you're pivoting
on that particular parent,

49
00:03:18.320 --> 00:03:21.210
that loading state is gonna
be what is made active.

50
00:03:21.210 --> 00:03:25.790
And you can get deeper and
customize it so that, for example,

51
00:03:25.790 --> 00:03:30.370
you only enter the loading substate
if the wait has been beyond

52
00:03:30.370 --> 00:03:32.269
a certain tolerance.
&gt;&gt; Speaker 2: And

53
00:03:32.269 --> 00:03:36.607
then it's like loading the action hook.
&gt;&gt; Mike North: Yes.

54
00:03:36.607 --> 00:03:37.257
&gt;&gt; Speaker 2: Okay.

55
00:03:37.257 --> 00:03:39.244
&gt;&gt; Mike North: You do that in the loading

56
00:03:39.244 --> 00:03:43.501
action by bubbling it up only
in the event that you're

57
00:03:43.501 --> 00:03:46.730
still loading beyond a certain extent.

58
00:03:47.860 --> 00:03:51.150
It is not simple enough that I
want to try to tackle it in this,

59
00:03:51.150 --> 00:03:54.160
but that's generally-
&gt;&gt; Speaker 2: If I wanted that loading

60
00:03:54.160 --> 00:03:57.980
state to only target rebo's and
not the repo route which you are,

61
00:03:57.980 --> 00:04:01.410
essentially, can I do
that in the loading hook?

62
00:04:01.410 --> 00:04:09.756
I'd say, if your intended
destination was repose [INAUDIBLE].

63
00:04:09.756 --> 00:04:11.860
&gt;&gt; Mike North: So-
&gt;&gt; Speaker 2: It doesn't work.

64
00:04:11.860 --> 00:04:13.230
&gt;&gt; Mike North: It's a little bit more

65
00:04:13.230 --> 00:04:15.890
complicated than that the way we
have our routes set up currently.

66
00:04:17.250 --> 00:04:20.129
So I don't wanna claim
that it's as simple as

67
00:04:21.370 --> 00:04:23.570
waiting a couple of seconds
in returning through that.

68
00:04:23.570 --> 00:04:27.360
The reason is that, that action is
gonna fire immediately when you start

69
00:04:27.360 --> 00:04:29.290
transitioning, when we
know we're going to load.

70
00:04:29.290 --> 00:04:35.060
And that's basically, as soon as your
model hook returns an unresolved promise,

71
00:04:35.060 --> 00:04:37.280
we know that we're gonna start loading.

72
00:04:37.280 --> 00:04:42.350
And so, you know, if you want it
to wait 200 milliseconds before

73
00:04:42.350 --> 00:04:47.580
you actually transition into
the state you can't simply just you

74
00:04:47.580 --> 00:04:51.150
know handle that template in the action.
&gt;&gt; Speaker 2: So

75
00:04:51.150 --> 00:04:55.100
I initially assumed if I didn't want to
see this on repo I make a repos folder

76
00:04:55.100 --> 00:04:58.060
that currently doesn't exist and
put my own template inside that and

77
00:04:58.060 --> 00:05:01.720
that will cause it to only if
I use that loading template,

78
00:05:01.720 --> 00:05:06.290
when it transitions from org to-
&gt;&gt; Mike North: It totally

79
00:05:06.290 --> 00:05:10.040
depends on which route
you are pivoting on.

80
00:05:10.040 --> 00:05:14.860
And so potentially if I am
drilling into that folder

81
00:05:14.860 --> 00:05:19.490
from somewhere higher up in my hierarchy,
what I'm pivoting on could potentially

82
00:05:20.510 --> 00:05:24.410
be some of the living
state if that makes sense.

83
00:05:25.810 --> 00:05:29.302
All right other questions?
&gt;&gt; Speaker 3: There is a question on what

84
00:05:29.302 --> 00:05:34.227
is the difference between org_loading and
org.loading.

85
00:05:34.227 --> 00:05:35.315
&gt;&gt; Mike North: Good question.

86
00:05:35.315 --> 00:05:38.716
&gt;&gt; Speaker 3: And like where org.loading

87
00:05:38.716 --> 00:05:41.791
is under the org
&gt;&gt; Mike North: So

88
00:05:41.791 --> 00:05:48.810
org_loading is probably what their
seeing in the Ember specter.

89
00:05:50.560 --> 00:05:54.468
We'll have to try it out and
see how it works.

90
00:05:54.468 --> 00:05:58.040
I know org.loading will work for
this example and

91
00:05:58.040 --> 00:06:02.320
it fits with the conventions that
we've been using for our other routes.

92
00:06:02.320 --> 00:06:07.560
So I would go in that direction.
&gt;&gt; Speaker 3: Yeah, he's

93
00:06:07.560 --> 00:06:10.090
saying it shows up in the Ember inspector.
&gt;&gt; Mike North: Yes,

94
00:06:10.090 --> 00:06:13.720
it does.
&gt;&gt; Speaker 2: You can

95
00:06:13.720 --> 00:06:18.300
customize that before uploading your own.
&gt;&gt; Mike North: You could if you wanted to.

96
00:06:20.370 --> 00:06:21.780
&gt;&gt; Speaker 2: And org.loading controller.

97
00:06:21.780 --> 00:06:25.440
Dirty word.
&gt;&gt; Mike North: There is a controller there

98
00:06:25.440 --> 00:06:30.580
but again that's going beyond I just
want to cover sort of simple use of this

99
00:06:32.030 --> 00:06:34.590
and then we can move on to components
which are more interesting.

