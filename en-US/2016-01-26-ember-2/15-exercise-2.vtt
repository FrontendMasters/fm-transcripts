WEBVTT

1
00:00:00.000 --> 00:00:03.822
[MUSIC]

2
00:00:03.822 --> 00:00:07.756
&gt;&gt; Mike: So, what we're gonna do is we're
gonna take some of the hard coded data

3
00:00:07.756 --> 00:00:11.902
that's currently in our templates,
that's currently in our HBS files.

4
00:00:11.902 --> 00:00:14.324
And it's still gonna be hard coded,

5
00:00:14.324 --> 00:00:18.105
but I wanna move it out of
the templates into the routes.

6
00:00:18.105 --> 00:00:22.943
So we're gonna end up using the model
hook and returning something for

7
00:00:22.943 --> 00:00:28.109
it from it, so that we can then make
our template a little bit more generic,

8
00:00:28.109 --> 00:00:31.147
based on whatever the route's returning.

9
00:00:31.147 --> 00:00:35.538
And then an exercise after that will
be no longer hard coding this data,

10
00:00:35.538 --> 00:00:37.710
let's get it from an API.

11
00:00:37.710 --> 00:00:39.060
But that's sort of where we're going.

12
00:00:41.210 --> 00:00:45.860
So this is gonna come in two pieces here.

13
00:00:45.860 --> 00:00:51.340
The first is I have some URLs
that I would like to pass around,

14
00:00:51.340 --> 00:00:53.580
I'm acting as the product owner here.

15
00:00:53.580 --> 00:00:57.720
I have some URLs in this app
that I think are reasonable URLs

16
00:00:57.720 --> 00:00:59.690
to expect people to type in.

17
00:00:59.690 --> 00:01:04.780
But currently, they don't really
work with what we have, right?

18
00:01:04.780 --> 00:01:07.995
So if I just go to org/emberjs,

19
00:01:07.995 --> 00:01:12.411
I wanna redirect to org/emberjs/repos.

20
00:01:12.411 --> 00:01:16.218
So I can distribute this link, and
if at some point in the future,

21
00:01:16.218 --> 00:01:20.870
we want the default page for this org
to be something different, that's fine.

22
00:01:22.120 --> 00:01:24.360
And I wanna do the same thing for
the repo.

23
00:01:24.360 --> 00:01:29.291
By default, if you just go
directly to orgname/reponame,

24
00:01:29.291 --> 00:01:32.670
I wanna end up on the list of issues.

25
00:01:32.670 --> 00:01:35.280
And this will mean that
the URL actually changes,

26
00:01:36.500 --> 00:01:37.620
because we're gonna do a redirect.

27
00:01:40.620 --> 00:01:45.670
The second part of the exercise is taking
this hard coded data out of the templates

28
00:01:45.670 --> 00:01:49.170
and using the model hook instead.

29
00:01:49.170 --> 00:01:53.850
So, here is an example array
if you wanna use this, but

30
00:01:53.850 --> 00:01:59.028
I actually want a return object here,
an array of objects, the ids of which

31
00:01:59.028 --> 00:02:04.310
are gonna be the names of,
these are valid GitHub org names.

32
00:02:06.330 --> 00:02:09.295
And I want us to change our template,

33
00:02:09.295 --> 00:02:13.409
so that instead of explicitly
writing out each lI,

34
00:02:13.409 --> 00:02:19.161
I wanna use this each handlebars
helper that we learned about earlier.

35
00:02:19.161 --> 00:02:20.646
And I will put the slide up, so

36
00:02:20.646 --> 00:02:23.518
that we can refresh our memory
as to what that looks like.

37
00:02:23.518 --> 00:02:29.020
But so we're gonna have an unordered list,
and then inside that,

38
00:02:29.020 --> 00:02:33.061
an each, and
then in the body of the each, an li.

39
00:02:33.061 --> 00:02:36.081
So essentially, we're getting some
more complex control flow here.

40
00:02:36.081 --> 00:02:37.421
We're getting a for loop.

41
00:02:41.901 --> 00:02:46.670
&gt;&gt; Mike: And I also want us to
update our links to use these

42
00:02:46.670 --> 00:02:50.430
new routes that will redirect.

43
00:02:50.430 --> 00:02:56.410
Right, so the list of orgs right now,
as things stand, they will take

44
00:02:56.410 --> 00:03:01.720
me to explicitly the repo list.

45
00:03:01.720 --> 00:03:04.872
So, let me go back to the app here just
to describe what I'm talking about.

46
00:03:20.955 --> 00:03:26.738
&gt;&gt; Mike: So if we look at this list of
orgs, when I'm iterating over the list,

47
00:03:26.738 --> 00:03:31.950
I'm explicitly saying,
take me to the repo list of each org.

48
00:03:33.020 --> 00:03:35.500
I want these URLs to change.

49
00:03:35.500 --> 00:03:41.595
I want it so that when I copy this
link address and paste it up here.

50
00:03:41.595 --> 00:03:43.975
Oops, is my clipboard working?

51
00:03:56.308 --> 00:03:57.888
&gt;&gt; Mike: Something is
strange on the keyboard here.

52
00:04:08.128 --> 00:04:11.120
&gt;&gt; Mike: Well, maybe you guys can,
looks like I have a little

53
00:04:11.120 --> 00:04:15.270
technical difficulty here, but
essentially, I want the list of orgs.

54
00:04:15.270 --> 00:04:18.247
Like here,
this should just take me to org/jQuery.

55
00:04:18.247 --> 00:04:19.925
That should be the URL here.

56
00:04:19.925 --> 00:04:24.234
But when I click it, I wanna actually
go through these redirects that we're

57
00:04:24.234 --> 00:04:25.928
building up in exercise 2a.

58
00:04:32.426 --> 00:04:34.480
&gt;&gt; Mike: So that makes sense to everyone?

59
00:04:34.480 --> 00:04:36.910
I'll sort out whatever is going on
with my keyboard here in a moment.

60
00:04:38.200 --> 00:04:42.706
And then finally, here's a little
refresher on how each works.

61
00:04:42.706 --> 00:04:47.581
You're gonna end up doing
something very similar to this,

62
00:04:47.581 --> 00:04:52.653
except you'll probably be
iterating over content, instead

63
00:04:52.653 --> 00:04:59.196
of myList cuz remember content is whatever
the model hook in the route returns.

64
00:04:59.196 --> 00:05:02.016
Does anyone have any questions about this?

65
00:05:05.032 --> 00:05:10.408
&gt;&gt; Mike: And just a reminder, we're gonna
need to create two brand new routes here,

66
00:05:10.408 --> 00:05:13.020
cuz currently, they don't exist.

67
00:05:13.020 --> 00:05:14.640
The routes I'm asking for

68
00:05:14.640 --> 00:05:19.590
in part a of this exercise,
they're not even in the project yet.

69
00:05:19.590 --> 00:05:22.170
So you'll need to create them first.

70
00:05:22.170 --> 00:05:28.790
And then potentially use the before model
hook to send us off to where we wanna go.

71
00:05:28.790 --> 00:05:30.720
&gt;&gt; Speaker 2: What does the pipe
indicate in the for each?

72
00:05:32.530 --> 00:05:38.090
&gt;&gt; Mike: I'm gonna punt on that,
but treat it as sort of a local

73
00:05:38.090 --> 00:05:43.525
variable that is only
available in your each loop,

74
00:05:43.525 --> 00:05:50.440
representing the object that you're
currently on in the iteration process.

75
00:05:50.440 --> 00:05:56.200
So if you have an array of like a,
b, c, that will be the variable,

76
00:05:56.200 --> 00:06:00.830
that thing in the pipes will be a,
and then the second time around b, and

77
00:06:00.830 --> 00:06:05.140
then the third time around c.

78
00:06:05.140 --> 00:06:09.360
&gt;&gt; Speaker 2: Do we start from
exercise 2 for that branch?

79
00:06:10.930 --> 00:06:15.500
&gt;&gt; Mike: So
exercise 2 contains the solution for this.

80
00:06:15.500 --> 00:06:20.440
So I would start from what you have or
reset hard to exercise 1.

81
00:06:20.440 --> 00:06:23.006
&gt;&gt; Speaker 2: Or should I send
him that new one that you pushed?

82
00:06:23.006 --> 00:06:24.120
&gt;&gt; Mike: Yeah,
you could start from there too,

83
00:06:24.120 --> 00:06:25.790
and then we'll be all on the same page.

84
00:06:25.790 --> 00:06:26.621
&gt;&gt; Speaker 2: I'll paste
that one in there.

85
00:06:29.541 --> 00:06:31.406
&gt;&gt; Speaker 2: And then one more question,

86
00:06:31.406 --> 00:06:36.069
does it make sense to just use setup
controller to set up all your state,

87
00:06:36.069 --> 00:06:39.890
like this .controller.set and
not use the model class?

88
00:06:41.220 --> 00:06:46.050
&gt;&gt; Mike: I mean, you could put something
together that would work, but remember,

89
00:06:46.050 --> 00:06:48.960
set up controller is not promise aware.

90
00:06:48.960 --> 00:06:53.610
And what you're doing there is you're
deviating from the conventions for

91
00:06:53.610 --> 00:06:55.330
no good reason, right?

92
00:06:56.940 --> 00:07:02.090
So the route, the base class
ember.route is already setting

93
00:07:02.090 --> 00:07:08.610
this property content on
the controller for you.

94
00:07:08.610 --> 00:07:12.730
So I don't know exactly why
you would want to do that.

95
00:07:12.730 --> 00:07:18.426
The only case would be potentially,
&gt;&gt; Mike: If

96
00:07:18.426 --> 00:07:24.729
you returned an RSVP hash from model,
and then instead of controller,

97
00:07:24.729 --> 00:07:28.836
you needed to kind of
like move things around.

98
00:07:28.836 --> 00:07:31.200
Say that you were trying
to modify something, and

99
00:07:31.200 --> 00:07:34.010
you didn't wanna change
the templates too much.

100
00:07:34.010 --> 00:07:38.250
You could kind of like rename things and
separate things a little bit.

101
00:07:38.250 --> 00:07:41.940
But remember,
the async work should be done in

102
00:07:41.940 --> 00:07:46.320
an async aware part of
the route lifecycle.

