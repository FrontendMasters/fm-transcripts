WEBVTT

1
00:00:00.000 --> 00:00:03.619
[MUSIC]

2
00:00:03.619 --> 00:00:07.734
&gt;&gt; Michael: So the first thing
we need to do is when we look at

3
00:00:07.734 --> 00:00:12.810
the instructions here,
let me bring this up real quick.

4
00:00:12.810 --> 00:00:16.108
So when we consider
transitioning from orgs to

5
00:00:16.108 --> 00:00:22.330
org/emberjs which is the name
of that route is called org,

6
00:00:22.330 --> 00:00:27.110
we have to consider what are we pivoting
on in this hierarchy of routes?

7
00:00:27.110 --> 00:00:31.430
And in this case,
it is going to be the application route.

8
00:00:31.430 --> 00:00:35.970
And so the place we're going
to put our loading.hbs file

9
00:00:35.970 --> 00:00:38.120
is right in the templates folder.

10
00:00:39.710 --> 00:00:42.795
So I'm gonna start by doing that.

11
00:00:42.795 --> 00:00:49.759
So it's this and I'm just gonna create
a new file called loading.hbs and

12
00:00:49.759 --> 00:00:55.500
we'll start with loading...and
we'll transition in.

13
00:00:57.898 --> 00:01:03.807
&gt;&gt; Michael: I'm actually gonna add
a little weight on the route just so

14
00:01:03.807 --> 00:01:07.673
that we can see what's going on here.

15
00:01:38.540 --> 00:01:43.750
&gt;&gt; Michael: All right, so
I've added two seconds of extra

16
00:01:43.750 --> 00:01:50.439
weight to this API request and
we can see that as we drill in.

17
00:01:50.439 --> 00:01:52.020
Let's refresh here.

18
00:01:52.020 --> 00:01:53.860
So we get this loading state here.

19
00:01:55.020 --> 00:01:56.248
Make sure that still works.

20
00:02:02.071 --> 00:02:03.322
&gt;&gt; Michael: Something's
still odd [LAUGH] here.

21
00:02:11.109 --> 00:02:13.480
&gt;&gt; Michael: It is,
maybe I didn't save here let's see.

22
00:02:16.470 --> 00:02:18.220
Back to the list of orgs.

23
00:02:21.260 --> 00:02:24.790
I think I know what's happening here,
I think that the actual

24
00:02:24.790 --> 00:02:28.790
weight we're looking for, so
I may have gotten the pivot wrong here.

25
00:02:28.790 --> 00:02:31.640
Let me move this and
see if it makes a difference.

26
00:02:34.180 --> 00:02:35.761
Move it into the org folder.

27
00:02:47.357 --> 00:02:50.140
&gt;&gt; Michael: Man, this example just
does not want to work with me.

28
00:02:51.792 --> 00:02:56.532
I'm gonna actually move on to
the error substate here because that's

29
00:02:56.532 --> 00:02:58.710
a little bit more interesting.

30
00:02:58.710 --> 00:03:03.582
So the way to test this is to add
something to your URL because

31
00:03:03.582 --> 00:03:08.260
we're building our API request URL,
we're deriving it

32
00:03:08.260 --> 00:03:13.148
from the params that are passed
through dynamic segments.

33
00:03:13.148 --> 00:03:15.720
So I'm gonna add something
to make this invalid.

34
00:03:17.400 --> 00:03:20.840
There's my loading state there of course,
[LAUGH] and

35
00:03:20.840 --> 00:03:25.870
you can see that GitHub is
giving me a 404, right, and

36
00:03:25.870 --> 00:03:31.250
what's happening is we're
throwing an error under the hood.

37
00:03:31.250 --> 00:03:36.300
This is bubbling all the way up to
the application level error substate.

38
00:03:37.460 --> 00:03:40.920
We have no template there for
that error substate.

39
00:03:40.920 --> 00:03:46.152
And so we're going to kind of just throw
our hands up and make the screen blank.

40
00:03:47.610 --> 00:03:49.401
We can improve that first.

41
00:03:58.146 --> 00:04:03.168
&gt;&gt; Michael: And I'm gonna take off

42
00:04:03.168 --> 00:04:08.208
my network link here.

43
00:04:08.208 --> 00:04:11.390
All right, so

44
00:04:11.390 --> 00:04:17.290
now we're in the error substate and
we can put a debugger here

45
00:04:17.290 --> 00:04:22.400
to explore what's available to us,
and the way you

46
00:04:22.400 --> 00:04:27.483
look at what's available in terms of data
in your template is you look at context.

47
00:04:27.483 --> 00:04:32.276
[SOUND] And if you look at the code
like where the break point is you can

48
00:04:32.276 --> 00:04:35.537
see that that's sort of what's pulled out.

49
00:04:35.537 --> 00:04:41.160
That's one of the things passed to
handle bars as you're rendering.

50
00:04:42.780 --> 00:04:45.900
You have this context available here,
right, so

51
00:04:45.900 --> 00:04:48.269
it's sort of the scope
available to this template.

52
00:04:49.480 --> 00:04:54.110
And in this case,
we have this thing called Model and

53
00:04:54.110 --> 00:04:58.630
we can get a status, status text.

54
00:04:58.630 --> 00:05:02.868
So I'm gonna actually render that here.

55
00:05:02.868 --> 00:05:03.945
&gt;&gt; Speaker 2: Where is that template?

56
00:05:03.945 --> 00:05:05.377
Is that your application level?

57
00:05:05.377 --> 00:05:14.276
&gt;&gt; Michael: Application level error.HBS
&gt;&gt; Michael: All right,

58
00:05:14.276 --> 00:05:17.710
so we've got error not found.

59
00:05:17.710 --> 00:05:20.070
We wanna handle this specifically though.

60
00:05:20.070 --> 00:05:24.140
We wanna handle this particular
error in a particular way.

61
00:05:24.140 --> 00:05:29.091
So I'm gonna go back
to this route here and

62
00:05:29.091 --> 00:05:33.767
I'm gonna add an action called error.

63
00:05:38.766 --> 00:05:40.380
&gt;&gt; Michael: And
I'll just put a debugger there for now.

64
00:05:41.460 --> 00:05:45.540
So we can make sure it's hit and
see what's going on.

65
00:05:45.540 --> 00:05:46.450
Fantastic.

66
00:05:46.450 --> 00:05:49.510
And if we examine this argument,

67
00:05:51.150 --> 00:05:56.340
we can see that there is a status,
and it's 404.

68
00:05:56.340 --> 00:06:02.912
So in this case,
&gt;&gt; Michael: I

69
00:06:02.912 --> 00:06:07.645
want to intermediateTransitionTo, and

70
00:06:07.645 --> 00:06:12.249
I'm just gonna call it org.notfound.

71
00:06:12.249 --> 00:06:19.055
It's a route that does not yet exist but
that's cool, I'll create it later.

72
00:06:19.055 --> 00:06:22.678
And then otherwise I'm gonna return
true which is, which means what?

73
00:06:22.678 --> 00:06:24.839
Bubble up.

74
00:06:28.320 --> 00:06:32.886
&gt;&gt; Michael: So I'm gonna kick
that to Ember CLI, ember g route

75
00:06:32.886 --> 00:06:38.166
org/notfound
&gt;&gt; Michael: And

76
00:06:38.166 --> 00:06:40.119
now this route should exist.

77
00:06:43.166 --> 00:06:46.990
&gt;&gt; Michael: So you can see,
we're seeing something different here.

78
00:06:48.130 --> 00:06:54.250
We're actually seeing this back to
the list of orgs part of the template.

79
00:06:54.250 --> 00:06:57.810
&gt;&gt; Speaker 2: So what is the intermediate
transition 2 versus transition 202?

80
00:06:57.810 --> 00:07:02.650
&gt;&gt; Michael: So, intermediate
transition 2 is designed to take you to

81
00:07:02.650 --> 00:07:05.432
a state that is not mapped to URL.

82
00:07:05.432 --> 00:07:10.349
You can see that my URL here is
actually still, it's still the bad URL.

83
00:07:10.349 --> 00:07:13.080
&gt;&gt; Speaker 2: Got it.

84
00:07:13.080 --> 00:07:13.670
&gt;&gt; Michael: And-
&gt;&gt; Speaker 2: Is that so

85
00:07:13.670 --> 00:07:16.310
that it doesn't replace where the route so

86
00:07:16.310 --> 00:07:19.890
that you can go back to
it later if you need to?

87
00:07:19.890 --> 00:07:25.240
&gt;&gt; Michael: In this case I'd wanna
know exactly what happened, right?

88
00:07:25.240 --> 00:07:29.806
So in this case,
&gt;&gt; Michael: Imagine that we took you to

89
00:07:29.806 --> 00:07:31.580
a different URL, right?

90
00:07:31.580 --> 00:07:34.920
We went to slash org slash not found and

91
00:07:34.920 --> 00:07:38.880
then you hit the back button,
what's going to happen?

92
00:07:38.880 --> 00:07:41.010
&gt;&gt; Speaker 2: You go back to the not
found thing and move it back up.

93
00:07:41.010 --> 00:07:42.234
&gt;&gt; Michael: Yes.
So you're gonna go and

94
00:07:42.234 --> 00:07:44.427
try to load it again and
then kick out to not found.

95
00:07:44.427 --> 00:07:48.320
And then hit the back button and
you'll be sort of caught in a loop.

96
00:07:48.320 --> 00:07:52.276
Here, I would just need to
really change something and

97
00:07:52.276 --> 00:07:54.603
then I'll be in a better state.

98
00:07:54.603 --> 00:07:58.297
I don't know why my loading substate
is totally cooperating now, but.

99
00:07:58.297 --> 00:08:02.329
&gt;&gt; Speaker 2: Someone said they got
it working with org-loading.hbs.

100
00:08:03.779 --> 00:08:04.729
&gt;&gt; Michael: Let's try that.

101
00:08:14.722 --> 00:08:18.616
&gt;&gt; Michael: So
we'll rename this to org-loading.

102
00:08:24.722 --> 00:08:28.930
&gt;&gt; Michael: Fantastic, I can see that
it's working even though it's super fast.

103
00:08:28.930 --> 00:08:32.143
&gt;&gt; Speaker 2: Why are you
changing the name?

104
00:08:32.143 --> 00:08:37.552
&gt;&gt; Michael: It's apparently
a new convention in 2.2.

105
00:08:37.552 --> 00:08:40.483
[LAUGH]
&gt;&gt; Speaker 2: I got it working on-

106
00:08:40.483 --> 00:08:42.015
&gt;&gt; Speaker 3: That's good though because

107
00:08:42.015 --> 00:08:46.157
you know what the problem is when you look
at all the filenames across the top of

108
00:08:46.157 --> 00:08:49.425
your editor, you don't know
where you are most of the time.

109
00:08:49.425 --> 00:08:51.420
&gt;&gt; Speaker 2: Unless
your editor tells you.

110
00:08:51.420 --> 00:08:51.978
&gt;&gt; Michael: Sure.

111
00:08:51.978 --> 00:08:53.170
&gt;&gt; Speaker 2: Right.

112
00:08:54.820 --> 00:08:58.360
&gt;&gt; Michael: I'm gonna
keep plugging away here.

113
00:08:58.360 --> 00:09:04.946
So, I want to customize this
not found template in org.

114
00:09:08.742 --> 00:09:09.242
&gt;&gt; Michael: Let's see.

115
00:09:14.990 --> 00:09:16.653
Here it is.

116
00:09:16.653 --> 00:09:18.907
Org not found.

117
00:09:28.441 --> 00:09:33.394
&gt;&gt; Michael: Okay, so what we've
done here is we've transitioned to

118
00:09:33.394 --> 00:09:37.356
a specific state for the notfound case.

119
00:09:37.356 --> 00:09:41.620
Now I'm gonna prove that this works by

120
00:09:41.620 --> 00:09:44.840
messing up that little token
we started using yesterday.

121
00:09:46.060 --> 00:09:48.960
I'm gonna actually delete one
character off of it which will throw

122
00:09:48.960 --> 00:09:50.010
an authentication error.

123
00:09:50.010 --> 00:09:51.096
It's a different kind of error.

124
00:09:51.096 --> 00:09:55.670
And that should bubble
us up to unauthorized.

125
00:09:55.670 --> 00:09:59.715
So here we're showing that we
can catch the not found error,

126
00:09:59.715 --> 00:10:03.363
sorta within the context of
looking up an org, right,

127
00:10:03.363 --> 00:10:07.882
that is the kind of error that's
very useful to surface to the user,

128
00:10:07.882 --> 00:10:11.406
because they can just fix their URL,
or something.

129
00:10:11.406 --> 00:10:14.428
Maybe the GitHub org has been renamed.

130
00:10:14.428 --> 00:10:15.355
Could be.

131
00:10:15.355 --> 00:10:17.240
And then this kind of error,

132
00:10:17.240 --> 00:10:21.180
you kind of have to catch it
with some over-arching thing.

133
00:10:24.030 --> 00:10:31.640
&gt;&gt; Michael: And in terms of spinkit,
I'll just show you how typically do this.

134
00:10:31.640 --> 00:10:37.302
You could bring in via bower,
but this is so

135
00:10:37.302 --> 00:10:42.177
small that I just would drop it here,

136
00:10:42.177 --> 00:10:48.309
drop in the css,
drop this into your loading,

137
00:10:48.309 --> 00:10:53.048
and can throttle my network again.

138
00:10:58.511 --> 00:11:01.635
&gt;&gt; Michael: And you see we get
a little fancy loading thing.

139
00:11:01.635 --> 00:11:06.736
&gt;&gt; [INAUDIBLE]
&gt;&gt; Michael: Yeah,

140
00:11:06.736 --> 00:11:07.682
there is an add on for that.

141
00:11:10.440 --> 00:11:15.299
&gt;&gt; Michael: So, this is my, let me
make sure I cover all the bases here,

142
00:11:15.299 --> 00:11:19.130
yep, so this is the completed Exercise #5.

143
00:11:19.130 --> 00:11:23.390
I will commit this push it up, questions?

144
00:11:23.390 --> 00:11:24.050
&gt;&gt; Speaker 4: Question, hey,

145
00:11:24.050 --> 00:11:27.120
man where would you put the AR.HPS
that handles a wrong URL?

146
00:11:29.120 --> 00:11:30.720
&gt;&gt; Michael: What kind of wrong URL?

147
00:11:30.720 --> 00:11:34.110
&gt;&gt; Speaker 4: So
the example is like org/badname.

148
00:11:36.000 --> 00:11:38.770
&gt;&gt; Michael: So I think we already
have something that will handle that.

149
00:11:38.770 --> 00:11:40.550
I think we've already done that.

150
00:11:40.550 --> 00:11:41.970
So if we do something like this.

151
00:11:43.690 --> 00:11:47.030
&gt;&gt; Speaker 4: He said this one
only works for org/badname.

152
00:11:49.240 --> 00:11:52.030
So maybe he's talking about
more of like a global one?

153
00:11:52.030 --> 00:11:57.030
&gt;&gt; Michael: Yeah, so we have some
global one that we added as part

154
00:11:57.030 --> 00:12:01.930
of when we were talking about
different kinds of segments,

155
00:12:01.930 --> 00:12:04.520
like dynamic segments
versus star segments.

156
00:12:04.520 --> 00:12:09.610
If we look at our router,
we've got this notfound catch-all here.

157
00:12:09.610 --> 00:12:11.870
So in this case we're handling

158
00:12:13.920 --> 00:12:17.390
all routes that don't match something
specific in a particular way.

159
00:12:18.800 --> 00:12:23.418
This is different than getting a 404
from an API because we're talking about

160
00:12:23.418 --> 00:12:29.380
client-side routes versus I have looked up
an entity and I cannot find this thing.

161
00:12:29.380 --> 00:12:33.380
So I think we actually
handle both of those cases.

162
00:12:33.380 --> 00:12:36.330
The only thing that is making
this a little confusing

163
00:12:36.330 --> 00:12:41.100
is, no, this should actually work.

164
00:12:41.100 --> 00:12:43.680
Is there a specific URL
that he was talking about?

165
00:12:44.840 --> 00:12:47.449
&gt;&gt; Speaker 3: If you
look at chat [INAUDIBLE].

166
00:12:50.489 --> 00:12:52.800
&gt;&gt; Michael: Only works for org/badname.

167
00:12:54.540 --> 00:13:00.330
So it'll actually work for
any descendent of that route as well but

168
00:13:00.330 --> 00:13:06.820
remember that the error handling we put
in place is for pivots on that route.

169
00:13:08.300 --> 00:13:11.040
Right, that's where our specific
error handling happens.

170
00:13:12.200 --> 00:13:17.162
If we're pivoting on something else,
the action is not going

171
00:13:17.162 --> 00:13:21.530
to fire on that particular route and it'll
just bubble up straight to application.

172
00:13:21.530 --> 00:13:23.760
&gt;&gt; Speaker 2: But,
children is bubble up and get caught.

173
00:13:23.760 --> 00:13:26.904
So, the 404 on the repo
gets caught by the.

174
00:13:27.940 --> 00:13:31.590
&gt;&gt; Michael: Yes, totally, but
if we were dealing with the orgs list,

175
00:13:31.590 --> 00:13:36.900
which has nothing,
the route org is not active in that case.

176
00:13:36.900 --> 00:13:40.120
We have no specific handling for
a 404 there.

177
00:13:40.120 --> 00:13:44.380
And so, this is something
that you might want to extend

178
00:13:44.380 --> 00:13:47.450
Ember.route to make your own

179
00:13:47.450 --> 00:13:51.590
base class if this is something you wanna
handle consistently in a generic way.

180
00:13:54.080 --> 00:13:57.890
But in this case, we are limited
to only the specific case, but

181
00:13:57.890 --> 00:14:02.875
that was kind of the idea giving you
guys guidance as to how you can catch

182
00:14:02.875 --> 00:14:09.170
something particular because the general
stuff is easy to just do an application.

