WEBVTT

1
00:00:00.000 --> 00:00:04.077
[MUSIC]

2
00:00:04.077 --> 00:00:06.960
&gt;&gt; Mike North: Just to restate
the problem we're solving here.

3
00:00:06.960 --> 00:00:10.854
Right now, if we look at orgs.hbs and

4
00:00:10.854 --> 00:00:17.330
similarly repos.hbs,
we've got some complexity here.

5
00:00:17.330 --> 00:00:23.320
And I've just asked for some

6
00:00:23.320 --> 00:00:29.240
increased stuff in the repos list
where we're seeing star count or,

7
00:00:29.240 --> 00:00:31.430
sorry, watcher count and fork count.

8
00:00:31.430 --> 00:00:36.700
You can see how in a large project
this would get unmanageable,

9
00:00:36.700 --> 00:00:41.590
where we don't have this tool yet
to encapsulate complexity.

10
00:00:41.590 --> 00:00:44.760
Components are the go-to thing for
that in Ember.

11
00:00:44.760 --> 00:00:47.430
So what we're gonna do is
make a component for each

12
00:00:49.300 --> 00:00:53.810
org in the orgs list and a component for
each repo in the repos list.

13
00:00:53.810 --> 00:00:56.749
So as usual, starting with Ember CLI and

14
00:00:56.749 --> 00:01:03.405
generate some code.
&gt;&gt; Mike North: We're gonna

15
00:01:03.405 --> 00:01:10.390
generate a github-org and a github-repo.
&gt;&gt; Mike North: And

16
00:01:10.390 --> 00:01:13.210
then get back to the code.

17
00:01:13.210 --> 00:01:17.835
And I'm just gonna right
away switch this over.

18
00:01:17.835 --> 00:01:22.021
And just to illustrate
how this contract works,

19
00:01:22.021 --> 00:01:25.288
on the right side of this assignment,

20
00:01:25.288 --> 00:01:31.880
that's sort of the outside world's
understanding of this data.

21
00:01:31.880 --> 00:01:36.070
And then on the left side of this
assignment is the component's

22
00:01:36.070 --> 00:01:39.660
internal property name that
we want to connect to,

23
00:01:39.660 --> 00:01:43.210
to establish a contract between
the inside world and the outside world.

24
00:01:45.080 --> 00:01:49.410
And I'm also going to prepare for
handling an action.

25
00:01:50.600 --> 00:01:56.205
So I'm gonna say on
favorite clicked equals

26
00:01:56.205 --> 00:02:00.870
favoriteClicked.

27
00:02:00.870 --> 00:02:02.360
Make sure I don't have a spelling error.

28
00:02:05.090 --> 00:02:08.000
Worth reminding people that
the right side of this,

29
00:02:08.000 --> 00:02:11.330
when you're talking about an action,
make sure it's a string.

30
00:02:11.330 --> 00:02:12.758
It's the name of the action,

31
00:02:12.758 --> 00:02:17.529
right, as opposed to binding
data which is not a string.

32
00:02:19.450 --> 00:02:23.880
And I'm just going to copy
this to my clipboard.

33
00:02:23.880 --> 00:02:26.127
Get rid of this, hit Save, and

34
00:02:26.127 --> 00:02:30.311
my list is gone.
&gt;&gt; Mike North: And we're done.

35
00:02:30.311 --> 00:02:32.476
No [LAUGH].

36
00:02:32.476 --> 00:02:38.980
So I'm just gonna directly paste in
what used to be in the each loop.

37
00:02:38.980 --> 00:02:44.238
And because I've kept
the naming of org as org,

38
00:02:44.238 --> 00:02:46.760
things are already
looking pretty good here.

39
00:02:48.250 --> 00:02:50.270
I have lost my bullet points.

40
00:02:50.270 --> 00:02:53.805
And if I take a look what's going on,

41
00:02:53.805 --> 00:02:59.420
it is because each instance
of this component is a DIV.

42
00:02:59.420 --> 00:03:01.670
It's no longer an LI, right?

43
00:03:02.890 --> 00:03:07.060
And of course it is not styled
like an LI would be styled.

44
00:03:07.060 --> 00:03:08.220
So we can fix that.

45
00:03:09.660 --> 00:03:14.750
By default, components are DIVs,
but we can customize that

46
00:03:14.750 --> 00:03:21.055
with this tagName property.

47
00:03:21.055 --> 00:03:26.400
And inspect element again just to,
it's pretty obvious at this point,

48
00:03:26.400 --> 00:03:28.450
but now it's an LI.

49
00:03:28.450 --> 00:03:34.343
So you can use pretty much
whatever element that you want.

50
00:03:34.343 --> 00:03:38.898
I'm also going to add an action here.

51
00:03:48.614 --> 00:03:51.592
&gt;&gt; Mike North: And just making sure I

52
00:03:51.592 --> 00:03:55.460
keep my contract, oops.

53
00:03:55.460 --> 00:04:00.893
So going back to org.hbs,
this is what I want to send through

54
00:04:00.893 --> 00:04:05.910
sort of the encapsulation
boundary of the component.

55
00:04:05.910 --> 00:04:08.950
I wanna send an action
with that name through, so

56
00:04:08.950 --> 00:04:11.520
that ultimately favoriteClicked
is what we're trying to call.

57
00:04:12.760 --> 00:04:15.540
And it actually should
connect up nicely with

58
00:04:15.540 --> 00:04:18.050
the existing favoriteClicked
action I have.

59
00:04:18.050 --> 00:04:20.470
As long as I pass the org along,
it should work.

60
00:04:21.634 --> 00:04:26.290
So I'm actually gonna

61
00:04:26.290 --> 00:04:31.770
change this to illustrate, to make sure we
don't get confused as to what's going on.

62
00:04:31.770 --> 00:04:34.990
So, I'm gonna call this
favoriteWasClicked.

63
00:04:39.670 --> 00:04:41.602
&gt;&gt; Mike North: So favoriteWasClicked is

64
00:04:41.602 --> 00:04:46.350
a concept that is only important
internally to this component.

65
00:04:47.370 --> 00:04:50.650
And I don't need to actually pass
the org along here, cuz remember,

66
00:04:50.650 --> 00:04:54.930
this component exists in
the context of an individual org.

67
00:04:54.930 --> 00:04:57.090
It's a property on the component itself.

68
00:04:57.090 --> 00:05:02.190
So no longer am I in this each loop
when I'm defining this action.

69
00:05:02.190 --> 00:05:05.200
I'm inside something that is already
sorta scoped to a component.

70
00:05:06.420 --> 00:05:07.440
Sorry, scoped to an org.

71
00:05:10.400 --> 00:05:16.027
So here I'm going to sendAction,

72
00:05:16.027 --> 00:05:22.108
on-fave-clicked, and
I'm gonna pass the org along.

73
00:05:22.108 --> 00:05:28.420
Remember, this.get.
&gt;&gt; Mike North: And

74
00:05:28.420 --> 00:05:34.339
let's see what happens.
&gt;&gt; Mike North: Fantastic,

75
00:05:34.339 --> 00:05:39.340
I can see in my console it's printing
out what I expect it to print out.

76
00:05:39.340 --> 00:05:42.320
So we're done with
the github-org component.

77
00:05:43.320 --> 00:05:48.686
So I'll close that.
&gt;&gt; Mike North: Similar task here,

78
00:05:48.686 --> 00:05:52.040
I'm just gonna grab this link.

79
00:05:52.040 --> 00:05:54.360
And remember that the component,

80
00:05:54.360 --> 00:05:59.610
it is associated with a DOM element in and
of itself.

81
00:05:59.610 --> 00:06:02.867
In this case, that's the LI, so
I'm going to get rid of the LI

82
00:06:02.867 --> 00:06:08.465
entirely.
&gt;&gt; Mike North: So

83
00:06:08.465 --> 00:06:14.670
we'll go to github-repo and
we'll put our link there,

84
00:06:14.670 --> 00:06:19.465
and,
&gt;&gt; Mike North: Again

85
00:06:19.465 --> 00:06:24.739
illustrating inside world
versus outside world,

86
00:06:24.739 --> 00:06:31.249
this r is a local variable that
exists within the scope of each.

87
00:06:31.249 --> 00:06:33.160
It changes per iteration.

88
00:06:33.160 --> 00:06:38.370
So we're connecting that to
the component's internal concept of repo,

89
00:06:38.370 --> 00:06:41.260
so it's available in
the component's template.

90
00:06:41.260 --> 00:06:49.140
And you Save, and let's drill in.
&gt;&gt; Mike North: And so we have repos here.

91
00:06:49.140 --> 00:06:55.373
Again, lost our bullets.
&gt;&gt; Mike North: So tagName is the fix for

92
00:06:55.373 --> 00:07:00.443
that.
&gt;&gt; Mike North: Fantastic,

93
00:07:00.443 --> 00:07:07.150
and I also asked for star counts, or
sorry, fork count and watcher count.

94
00:07:07.150 --> 00:07:10.040
And those are available on
the repo object itself.

95
00:07:11.060 --> 00:07:14.710
I'm going to probe around,

96
00:07:14.710 --> 00:07:18.170
cuz I don't really remember what
the names of the properties are for that.

97
00:07:18.170 --> 00:07:26.450
So I'm gonna do a,
use my handy Handlebars debugger helper.

98
00:07:26.450 --> 00:07:31.881
And as instructed here,
I wanna use context to debug this

99
00:07:31.881 --> 00:07:38.800
template.
&gt;&gt; Mike North: context.repo,

100
00:07:38.800 --> 00:07:42.430
and now we can sort of
see into this object.

101
00:07:42.430 --> 00:07:47.180
And I think it's forks,
forks_count, that looks promising.

102
00:07:47.180 --> 00:07:48.240
So I'll leave that here.

103
00:07:50.290 --> 00:07:54.719
And watchers_count, also promising.

104
00:08:11.167 --> 00:08:12.207
&gt;&gt; Mike North: Good guy,

105
00:08:12.207 --> 00:08:15.905
paren matcher is screwing me up here,

106
00:08:15.905 --> 00:08:20.913
and,
&gt;&gt; Mike North: Just to make

107
00:08:20.913 --> 00:08:27.049
it look sort of pretty.
&gt;&gt; Mike North: We'll

108
00:08:27.049 --> 00:08:29.771
get rid of our debugger,
and then we're good to go.

109
00:08:42.988 --> 00:08:44.234
&gt;&gt; Mike North: Awesome, so

110
00:08:44.234 --> 00:08:47.330
now we have Forks and Watchers.

111
00:08:47.330 --> 00:08:50.750
So we could make this even more rich.

112
00:08:50.750 --> 00:08:57.420
We could have the little GitHub
star buttons or whatever,

113
00:08:57.420 --> 00:09:02.560
and really enrich this component
significantly, without the app,

114
00:09:02.560 --> 00:09:06.260
the consuming code,
really having to change at all.

115
00:09:07.460 --> 00:09:09.640
So this is just sort of the concept of,

116
00:09:09.640 --> 00:09:13.460
how do we represent
a github-org in the list?

117
00:09:13.460 --> 00:09:18.395
That's now an isolated problem, as long
as we can keep the contract the same.

118
00:09:18.395 --> 00:09:19.610
And in this case, it's likely.

119
00:09:19.610 --> 00:09:21.440
We're passing in the repo.

120
00:09:21.440 --> 00:09:26.463
As long as it's an LI,
we should be able to extend this pretty

121
00:09:26.463 --> 00:09:32.590
significantly without having to
worry about repos.hbs getting messy.

122
00:09:32.590 --> 00:09:36.889
So let me make sure I have
gone through all of the steps

123
00:09:36.889 --> 00:09:41.512
here.
&gt;&gt; Mike North: So

124
00:09:41.512 --> 00:09:45.536
the favorite behavior,
we verified that that works.

125
00:09:45.536 --> 00:09:48.750
And we have the fork count and
watcher count.

126
00:09:48.750 --> 00:09:51.759
So, this is my solution to number 6.

