WEBVTT

1
00:00:00.000 --> 00:00:03.778
[MUSIC]

2
00:00:03.778 --> 00:00:09.411
&gt;&gt; Mike North: The way you generate
an acceptance test is ember g acceptance

3
00:00:09.411 --> 00:00:14.713
test and then you will pass in
as the name of the acceptance

4
00:00:14.713 --> 00:00:19.573
test will be usually like
the URL you're visiting or

5
00:00:19.573 --> 00:00:24.654
the route you're visiting so
we're just gonna call it

6
00:00:24.654 --> 00:00:33.003
index.
&gt;&gt; Mike North: And

7
00:00:33.003 --> 00:00:39.078
this is the default setup here I'm gonna
change this to acceptance index, so

8
00:00:39.078 --> 00:00:45.339
we can see that what is happening is first
we are visiting this thing called index

9
00:00:45.339 --> 00:00:51.610
and then we are just verifying that the
current URL is what it's supposed to be.

10
00:00:51.610 --> 00:00:55.100
We can put a debugger inside and
then remember that you want it to be in

11
00:00:55.100 --> 00:01:01.020
the promise chain and
sure the URL says index but what's

12
00:01:01.020 --> 00:01:05.390
happened in fact is we've intermediate
transitioned to the error sub state.

13
00:01:05.390 --> 00:01:07.490
And so we're seeing oops on the page and

14
00:01:07.490 --> 00:01:11.350
that is because we're in
fact in the not found route.

15
00:01:15.410 --> 00:01:20.590
So we're going to visit
this page instead and

16
00:01:20.590 --> 00:01:24.240
verify that ultimately we end up on.

17
00:01:24.240 --> 00:01:28.780
Remember yesterday we set up
a redirect to take care of that.

18
00:01:28.780 --> 00:01:29.620
And this will pass.

19
00:01:29.620 --> 00:01:32.686
And just to prove to you guys
that the real app is running.

20
00:01:41.283 --> 00:01:42.120
&gt;&gt; Mike North: There it is.

21
00:01:43.140 --> 00:01:44.650
Right.
So, this is the whole app.

22
00:01:44.650 --> 00:01:46.970
We're not testing in isolation anymore.

23
00:01:46.970 --> 00:01:52.050
So, I have a little, I have a second
screen here with the instructions here.

24
00:01:52.050 --> 00:01:55.910
So, step one for
the acceptance test was to visit the page.

25
00:01:55.910 --> 00:01:58.340
We're gonna verify that
the current route name is correct.

26
00:02:00.080 --> 00:02:06.240
Just I've added a little mix
to give you guys some variety.

27
00:02:09.980 --> 00:02:14.835
And at orgs route and then the next step

28
00:02:14.835 --> 00:02:19.704
is to click on the Ember JS GitHub org.

29
00:02:43.247 --> 00:02:45.978
&gt;&gt; Mike North: And if we look at where we

30
00:02:45.978 --> 00:02:50.370
ended up we're in the Ember.

31
00:02:50.370 --> 00:02:54.540
And we're going to, from that point on,
verify that the current url is

32
00:02:54.540 --> 00:03:02.157
correct.
&gt;&gt; Mike North: And

33
00:03:02.157 --> 00:03:05.876
it should be org/emberjs/repos.

34
00:03:05.876 --> 00:03:08.760
It's again testing our redirect, right,

35
00:03:08.760 --> 00:03:12.408
testing that we've actually
forwarded through and made it there.

36
00:03:12.408 --> 00:03:18.207
Whoop, leading /
&gt;&gt; Speaker 2: CurrentUrl was return

37
00:03:18.207 --> 00:03:24.740
of relative.
&gt;&gt; Speaker 2: Obviously CurrentUrl

38
00:03:24.740 --> 00:03:29.170
is returning to relative path,
not the full So

39
00:03:29.170 --> 00:03:34.364
it will be the path component of the url,
it will emit the hostname and

40
00:03:34.364 --> 00:03:40.020
the and at repos page.
&gt;&gt; Mike North: The next

41
00:03:40.020 --> 00:03:44.660
step is to click on the link for
the ember data repo.

42
00:03:45.740 --> 00:03:48.978
Use our same selector here more or less.

43
00:04:05.385 --> 00:04:06.938
&gt;&gt; Mike North: So it's saying org not

44
00:04:06.938 --> 00:04:12.709
found.
&gt;&gt; Mike North: So

45
00:04:12.709 --> 00:04:15.635
I'm gonna actually debug this here.

46
00:04:17.955 --> 00:04:20.446
Make sure that my selector's doing
what I think it should be doing

47
00:04:26.610 --> 00:04:27.847
&gt;&gt; Mike North: Come on.

48
00:04:34.063 --> 00:04:36.127
&gt;&gt; Mike North: So that is the ember data

49
00:04:36.127 --> 00:04:46.053
link.
&gt;&gt; Mike North: I

50
00:04:46.053 --> 00:04:47.890
know what the problem is here.

51
00:04:47.890 --> 00:04:50.410
It was a bug that was already in the code.

52
00:04:50.410 --> 00:04:52.320
So if we look at what's happening.

53
00:04:52.320 --> 00:05:00.700
If we look at the console we're using
an incorrect attribute to form this URL.

54
00:05:00.700 --> 00:05:03.830
We're using the name of
the repo instead of the login.

55
00:05:03.830 --> 00:05:07.855
So we've caught a bug here and

56
00:05:07.855 --> 00:05:15.583
we just need to go there's
the org ID sorry it's in repo.

57
00:05:20.204 --> 00:05:21.964
&gt;&gt; Mike North: Org log in.

58
00:05:27.639 --> 00:05:28.897
&gt;&gt; Mike North: And now all the tests pass,

59
00:05:28.897 --> 00:05:32.140
because we know that that's what
the green bar at the top means there.

60
00:05:34.450 --> 00:05:38.630
So at that point we should be,
just verify the current URL

61
00:05:53.991 --> 00:05:56.575
&gt;&gt; Mike North: And we're gonna make sure

62
00:05:56.575 --> 00:06:01.278
that there are some thing
is in the issues list.

63
00:06:15.443 --> 00:06:16.712
&gt;&gt; Mike North: This is not gonna work.

64
00:06:42.645 --> 00:06:44.501
&gt;&gt; Mike North: Issues LI

65
00:06:49.930 --> 00:06:53.757
&gt;&gt; Mike North: And I think just make sure

66
00:06:53.757 --> 00:06:57.589
there is something there

67
00:07:09.642 --> 00:07:14.190
&gt;&gt; Mike North: And you can see that we're
accumulating a nice little workflow here.

68
00:07:14.190 --> 00:07:20.270
And the last step is gonna be to
click on the collaborator's or

69
00:07:20.270 --> 00:07:23.800
contributor's link.
&gt;&gt; Speaker 2: If there's other issues it's

70
00:07:23.800 --> 00:07:28.890
gonna break out test up.
&gt;&gt; Mike North: [LAUGH] Well, it will but

71
00:07:28.890 --> 00:07:35.433
I'm gonna drop something in that will
have us testing sample data instead of.

72
00:07:35.433 --> 00:07:43.557
[INAUDIBLE] the appropriate test.
&gt;&gt; Mike North: Contributors

73
00:07:48.107 --> 00:07:49.295
&gt;&gt; Mike North: Okay [NOISE],

74
00:07:49.295 --> 00:07:51.457
something's up here.

75
00:07:51.457 --> 00:07:52.980
Some contributors.

76
00:08:02.830 --> 00:08:04.680
See if there actually
are items in that list.

77
00:08:08.410 --> 00:08:15.168
There are.
&gt;&gt; Mike North: I

78
00:08:15.168 --> 00:08:20.330
think I called it.
&gt;&gt; Mike North: Yup, my bad.

79
00:08:31.455 --> 00:08:32.750
&gt;&gt; Mike North: All right, end on green.

80
00:08:32.750 --> 00:08:35.320
So that's our full acceptance test here.

81
00:08:35.320 --> 00:08:39.760
Sorry that was a little bit of a slog but
the point is that

82
00:08:40.880 --> 00:08:45.820
in only 25 lines of code here we
are able to kind of drill pretty

83
00:08:45.820 --> 00:08:50.340
deeply into our whole route hierarchy and
we are doing a bunch of pivots.

84
00:08:50.340 --> 00:08:57.215
There's a lot of surface level coverage
regaining in writing a test like this,

85
00:08:57.215 --> 00:09:03.090
and it's pretty readable considering
that the alternative would be

86
00:09:04.160 --> 00:09:10.630
either the famous Node.js pyramid of doom
call backs and call backs and call backs.

87
00:09:10.630 --> 00:09:12.720
Or a whole lot of promise chaining.

88
00:09:12.720 --> 00:09:17.160
The effort here is to let you write
a test that really has a lot of

89
00:09:17.160 --> 00:09:22.210
asynchrony baked into it
as if it were synchronous.

90
00:09:22.210 --> 00:09:26.590
And I'm quite excited about
when we have support for

91
00:09:26.590 --> 00:09:31.210
Async 08 and things like JS Hint and
all the tooling.

92
00:09:31.210 --> 00:09:34.810
So that we can, even to a higher degree,

93
00:09:37.120 --> 00:09:42.301
have this look like code and
even mix it with code

94
00:09:42.301 --> 00:09:47.760
at that language level
instead of having to rely on.

95
00:09:47.760 --> 00:09:51.370
So, last thing, drop in pretender.

96
00:09:51.370 --> 00:09:54.060
It's a really quick since
I kinda did it in advance.

97
00:09:54.060 --> 00:09:59.535
[SOUND] So just to query this
Json function at the top, so

98
00:09:59.535 --> 00:10:05.132
we can make use of it.
&gt;&gt; Mike North: Make

99
00:10:05.132 --> 00:10:08.613
the server available so
that we can shut it down on the end.

100
00:10:16.721 --> 00:10:18.075
&gt;&gt; Mike North: And fix my indent and

101
00:10:18.075 --> 00:10:19.350
then we're good.

102
00:10:27.605 --> 00:10:28.665
And server dot shut down,

103
00:10:28.665 --> 00:10:33.055
all that's doing is giving you back
the real XML HTTP request object.

104
00:10:34.075 --> 00:10:37.205
And, dear, tests are failing.

105
00:10:37.205 --> 00:10:38.285
Some issues.

106
00:10:38.285 --> 00:10:38.785
So.

107
00:10:43.590 --> 00:10:44.440
At and then.

108
00:10:47.560 --> 00:10:51.370
So a good thing to do if there are errors
that don't pop up in the console,

109
00:10:51.370 --> 00:10:55.490
is you can disable tricache.
&gt;&gt; Speaker 3: You said greater than two,

110
00:10:55.490 --> 00:10:59.280
you have two of each?
&gt;&gt; Mike North: Thank you.

111
00:10:59.280 --> 00:11:01.632
Good catch.
&gt;&gt; Speaker 4: Gotta beat more issues.

112
00:11:05.728 --> 00:11:07.860
&gt;&gt; Mike North: Fantastic, all right.

113
00:11:07.860 --> 00:11:11.870
So we're passing now and
if we look at the Network tab,

114
00:11:13.810 --> 00:11:18.200
no real API requests or send out.

115
00:11:18.200 --> 00:11:24.350
This is strictly on the UI side and

116
00:11:24.350 --> 00:11:28.220
so this is how you'd want to set things
up if you're running on Travesia and

117
00:11:28.220 --> 00:11:30.840
don't want a bunch of random
traffic coming into your API.

