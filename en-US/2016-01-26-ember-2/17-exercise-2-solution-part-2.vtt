WEBVTT

1
00:00:00.043 --> 00:00:04.379
[MUSIC]

2
00:00:04.379 --> 00:00:10.662
&gt;&gt; Speaker 1: So you may notice that if I
do a hard refresh here I'm sorry that's,

3
00:00:10.662 --> 00:00:14.800
I'm not illustrating the correct thing.

4
00:00:14.800 --> 00:00:18.840
So I'm entering the application
on a route with a redirect.

5
00:00:21.310 --> 00:00:23.080
I still end up with this
back button problem.

6
00:00:25.120 --> 00:00:29.350
There is an add-on that you can use which
makes redirecting a little bit easier that

7
00:00:29.350 --> 00:00:31.420
has similar logic here and

8
00:00:31.420 --> 00:00:34.460
instead of transition to you'll
just use like redirect to.

9
00:00:35.740 --> 00:00:41.030
In a future version of Ember this
will work cleanly and out of the box.

10
00:00:41.030 --> 00:00:44.700
But I just wanted to teach you guys
the concept here of transitioning and

11
00:00:44.700 --> 00:00:46.260
redirecting, and

12
00:00:46.260 --> 00:00:51.360
I will send a link out to that add on
where all the little kinks are addressed.

13
00:00:52.580 --> 00:00:57.038
&gt;&gt; Speaker 2: So that add on, will that
like address doing actual 301 redirects?

14
00:00:59.066 --> 00:01:03.520
&gt;&gt; Speaker 1: So that's a status code
that an API would have to provide.

15
00:01:03.520 --> 00:01:07.970
Remember that we're not actually
responding to a request.

16
00:01:07.970 --> 00:01:13.010
At its core we're responding
to a hashchange event or

17
00:01:13.010 --> 00:01:17.772
something similar if you have
html five history support.

18
00:01:17.772 --> 00:01:23.290
But it will be the equivalent
in that it's forwarding you and

19
00:01:23.290 --> 00:01:27.190
sending information back to the consumer
that you should always go here.

20
00:01:27.190 --> 00:01:29.763
&gt;&gt; Speaker 2: Right can I see
your router file real quick?

21
00:01:29.763 --> 00:01:31.810
My brain broke like 15 minutes ago.

22
00:01:31.810 --> 00:01:33.060
&gt;&gt; Speaker 1: No problem.

23
00:01:33.060 --> 00:01:37.110
&gt;&gt; Speaker 2: And I'm completely lost.

24
00:01:37.110 --> 00:01:37.612
&gt;&gt; Speaker 1: It's a file.

25
00:01:37.612 --> 00:01:47.011
[TYPING CLICKS] Okay,

26
00:01:47.011 --> 00:01:51.709
see how I kind

27
00:01:51.709 --> 00:01:56.835
of have things

28
00:01:56.835 --> 00:02:01.540
separated?

29
00:02:01.540 --> 00:02:02.970
&gt;&gt; Speaker 2: No, that's.

30
00:02:02.970 --> 00:02:05.630
Strange is exactly what I had before I
added those two routes I didn't need.

31
00:02:05.630 --> 00:02:09.070
That complete put me in a tail spin so.

32
00:02:09.070 --> 00:02:14.970
&gt;&gt; Speaker 1: So, do you noticed
that I generated some routes,

33
00:02:14.970 --> 00:02:20.170
but the only that to get deaf in my
side bar here is showing its comments.

34
00:02:20.170 --> 00:02:24.850
The reason is, you don't need to modify
the router when you add an index.

35
00:02:24.850 --> 00:02:26.740
Because it's already implied.

36
00:02:26.740 --> 00:02:33.310
So all the code generation does is, it's

37
00:02:33.310 --> 00:02:38.340
still reporting that it added a route,
but it's a no op, in the case of index.

38
00:02:38.340 --> 00:02:41.110
You don't see the word index here, at all.

39
00:02:41.110 --> 00:02:42.990
It doesn't need to do it, so
it doesn't add the clutter.

40
00:02:44.120 --> 00:02:44.770
Yes.

41
00:02:44.770 --> 00:02:46.030
&gt;&gt; Speaker 3: Just a couple questions.

42
00:02:46.030 --> 00:02:50.750
The triple dots in front of argument,
could you just explain that quick?

43
00:02:50.750 --> 00:02:54.664
&gt;&gt; Speaker 1: You should go,
that is a spread operator, and

44
00:02:54.664 --> 00:02:58.500
go watch the Frontend masters ES6 course.

45
00:02:58.500 --> 00:03:03.950
That is not an ember feature,
that is the current draft of JavaScript.

46
00:03:03.950 --> 00:03:06.895
Yes, I can say that now.

47
00:03:06.895 --> 00:03:10.975
&gt;&gt; Speaker 3: [LAUGH] And then can you
go over using model versus content and

48
00:03:10.975 --> 00:03:15.270
then he says, I thought using
content was discouraged for info and

49
00:03:15.270 --> 00:03:18.950
guides and in controller source,
has that changed?

50
00:03:18.950 --> 00:03:21.630
&gt;&gt; Speaker 1: You can
currently use either.

51
00:03:21.630 --> 00:03:25.320
Content is not deprecated yet
to the best of my knowledge,

52
00:03:25.320 --> 00:03:27.666
I would be getting deprecation
warnings otherwise.

53
00:03:27.666 --> 00:03:34.400
They're equivalent, and I would just
look at whatever the guides say for now.

54
00:03:34.400 --> 00:03:39.380
I can go through and change things,
but I wouldn't say it's so

55
00:03:39.380 --> 00:03:44.590
strongly discouraged that the framework
is throwing warnings at me, which is like

56
00:03:44.590 --> 00:03:50.580
when you have to be concerned that
somethings about to get ripped out.

57
00:03:50.580 --> 00:03:53.780
The core team is very very serious about

58
00:03:53.780 --> 00:03:57.110
giving ample warning whenever
API's are going to break.

59
00:03:57.110 --> 00:04:04.820
In fact, because we're on 2.2 right
now and content is working and

60
00:04:04.820 --> 00:04:10.650
throwing no deprecations It will be
available throughout the two x series and

61
00:04:10.650 --> 00:04:15.660
you would only need to worry at 3.0 that
they would go and remove this thing.

62
00:04:17.810 --> 00:04:21.930
I think the change from content
to model had to do with

63
00:04:21.930 --> 00:04:26.990
a deprecation that was
removed in ember 2.0.

64
00:04:26.990 --> 00:04:29.880
A different way of using controllers.

65
00:04:29.880 --> 00:04:33.630
And the idea was to sort
of shift away from that,

66
00:04:33.630 --> 00:04:38.560
even shifting like some of the default
conventions to help people with migration.

67
00:04:40.650 --> 00:04:44.750
And I'm actually not going to go deep into
that, because in terms of writing an app

68
00:04:44.750 --> 00:04:48.420
today, with this version of Ember,
you don't really need to know that.

69
00:04:49.440 --> 00:04:51.710
As far as I know, model and
content are both fine.

70
00:04:51.710 --> 00:04:54.840
I use content nearly a hundred
percent of the time because it's

71
00:04:54.840 --> 00:04:55.800
muscle memory at this point.

72
00:04:58.090 --> 00:04:59.575
Any other questions?

73
00:05:01.428 --> 00:05:02.755
&gt;&gt; Speaker 1: All right.
I'm gonna make sure,

74
00:05:02.755 --> 00:05:05.103
I think there's still
another stop to this [NOISE].

75
00:05:05.103 --> 00:05:08.210
I have to actually return a list of stuff.

76
00:05:08.210 --> 00:05:08.810
From my route.

77
00:05:09.930 --> 00:05:13.200
So I'm gonna go to orgs routes orgs.

78
00:05:15.960 --> 00:05:17.370
&gt;&gt; Speaker 1: And implement model.

79
00:05:20.541 --> 00:05:22.236
&gt;&gt; Speaker 1: And return an array.

80
00:05:25.287 --> 00:05:28.260
&gt;&gt; Speaker 1: And
then I can go to orgs.hbs.

81
00:05:28.260 --> 00:05:33.860
And instead of being so explicit about
each and every list item I can wrap this

82
00:05:37.650 --> 00:05:41.340
in an each and loop over my array.

83
00:05:45.270 --> 00:05:47.727
So I'm gonna get, people there.

84
00:05:49.948 --> 00:05:51.445
&gt;&gt; Speaker 1: As.

85
00:05:51.445 --> 00:05:52.410
All right, so

86
00:05:52.410 --> 00:05:56.620
now if we go back to the list, we're
going to get JQuery a bunch of times.

87
00:05:56.620 --> 00:06:01.618
And we simply need to do org.id,

88
00:06:01.618 --> 00:06:05.730
org.id, and there we go.

89
00:06:07.500 --> 00:06:10.860
So now,
this is a much more generic template here.

90
00:06:10.860 --> 00:06:15.680
This is, this is much more closer to what
you would see if you were using real data,

91
00:06:15.680 --> 00:06:17.530
but we will use when we use real data,

92
00:06:18.660 --> 00:06:22.550
because there is nothing in here
about any particular record.

93
00:06:22.550 --> 00:06:24.340
It's just all the datas
coming from the route.

