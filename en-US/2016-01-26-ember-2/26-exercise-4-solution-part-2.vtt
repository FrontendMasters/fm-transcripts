WEBVTT

1
00:00:00.000 --> 00:00:03.821
[MUSIC]

2
00:00:03.821 --> 00:00:06.221
&gt;&gt; Mike North: Now we've
got three errors here.

3
00:00:06.221 --> 00:00:09.361
Things are getting a little
nutty in my console and

4
00:00:09.361 --> 00:00:13.190
they all have to do with
content security policy.

5
00:00:13.190 --> 00:00:19.170
So this content security policy is a way
of informing the browser what, given

6
00:00:19.170 --> 00:00:24.260
a resource that has been served up, what
should the browser be able to connect to?

7
00:00:25.940 --> 00:00:31.540
And so we've just started
talking to a new resource that

8
00:00:31.540 --> 00:00:35.510
by default we're not
supposed to be talking to.

9
00:00:35.510 --> 00:00:40.870
So we just need to add Github's API
as developing to talk to.

10
00:00:40.870 --> 00:00:45.538
The place where you set that up

11
00:00:45.538 --> 00:00:50.394
is in the config environment,

12
00:00:50.394 --> 00:00:53.957
and security policy.

13
00:00:59.830 --> 00:01:02.379
&gt;&gt; Mike North: And then in this case
we just need to connect source.

14
00:01:05.142 --> 00:01:08.790
&gt;&gt; Mike North: And we should just be
able to add this and then we're done.

15
00:01:17.372 --> 00:01:20.252
&gt;&gt; Mike North: Additionally we have
to stop and and start it again.

16
00:01:30.051 --> 00:01:32.771
&gt;&gt; Mike North: Okay, so

17
00:01:32.771 --> 00:01:37.798
[NOISE]
&gt;&gt; Mike North: Looks

18
00:01:37.798 --> 00:01:42.460
like the avatars are still
giving us trouble here.

19
00:01:42.460 --> 00:01:46.820
I will post a link how to
customize this further,

20
00:01:46.820 --> 00:01:51.840
but the basic idea is for different types
of communication, if you allow this,

21
00:01:51.840 --> 00:01:54.490
these domains and
these resources for style and

22
00:01:54.490 --> 00:01:59.420
these four connecting to via ajax,
these for images and so on.

23
00:02:01.460 --> 00:02:05.375
So I'm gonna keep going here and

24
00:02:05.375 --> 00:02:13.351
just apply very similar changes
to the issues and contributors.

25
00:02:13.351 --> 00:02:18.221
So I'm gonna go to routes &gt; repo &gt;

26
00:02:22.445 --> 00:02:24.339
&gt;&gt; Mike North: contributors.

27
00:02:24.339 --> 00:02:30.276
And basically want this same thing.

28
00:02:36.708 --> 00:02:40.290
&gt;&gt; Mike North: Except we also
have to get the repo itself.

29
00:02:41.700 --> 00:02:42.826
Same modelFor technique.

30
00:02:50.554 --> 00:02:52.822
&gt;&gt; Mike North: And we'll set a debugger,
make sure everything works.

31
00:03:03.335 --> 00:03:05.863
&gt;&gt; Mike North: 'name' on undefined,
my mistake.

32
00:03:09.511 --> 00:03:12.940
&gt;&gt; Mike North: And
I believe we'll need to go here as well.

33
00:03:12.940 --> 00:03:18.730
So I'm basically just filling in with the
appropriate API request all the way down.

34
00:03:18.730 --> 00:03:24.480
What we're gonna end up doing here is
asking for more data than we really need.

35
00:03:24.480 --> 00:03:30.090
And the reason is there's no understanding
that we just came from the list of

36
00:03:30.090 --> 00:03:36.240
repos and therefore don't need to ask for
this object that we already knew about.

37
00:03:36.240 --> 00:03:38.530
This is where Amber Data starts
to become very valuable.

38
00:03:40.460 --> 00:03:42.290
All right, so repos &gt; org &gt; id.

39
00:03:47.069 --> 00:03:51.606
&gt;&gt; Mike North: So let org = modelFor.

40
00:03:57.940 --> 00:04:03.025
&gt;&gt; Mike North: Here we'll do
&gt;&gt; Mike North: org

41
00:04:03.025 --> 00:04:06.260
id and then,

42
00:04:11.881 --> 00:04:15.536
&gt;&gt; Speaker 2: [INAUDIBLE]
&gt;&gt; Mike North: Thank you.

43
00:04:21.349 --> 00:04:25.400
&gt;&gt; Mike North: And it is undefined.

44
00:04:26.970 --> 00:04:30.943
Because the dynamic segment
is actually repo id.

45
00:04:30.943 --> 00:04:35.530
All right, there we go.

46
00:04:35.530 --> 00:04:38.818
And I can see that we've got the repo
if I look at the network tab here,

47
00:04:38.818 --> 00:04:41.278
but I don't wanna take up
more time than we have to.

48
00:04:55.775 --> 00:04:57.631
&gt;&gt; Mike North: All right,
so now I've got that,

49
00:04:57.631 --> 00:05:00.842
which means that the list of
contributors should work now.

50
00:05:08.042 --> 00:05:09.503
&gt;&gt; Mike North: Fantastic.

51
00:05:09.503 --> 00:05:13.791
Looking for that URL up here.

52
00:05:38.836 --> 00:05:40.671
&gt;&gt; Mike North: And
I'm just going to keep stepping through.

53
00:05:56.101 --> 00:05:57.690
&gt;&gt; Mike North: Something is odd here.

54
00:06:01.330 --> 00:06:04.398
&gt;&gt; Speaker 3: What did you use for
the repo ID in the repo.js file?

55
00:06:04.398 --> 00:06:11.242
&gt;&gt; Mike North: I'm just looking for
the repo id and the repo.js.

56
00:06:11.242 --> 00:06:14.026
&gt;&gt; Speaker 3: [INAUDIBLE] repo, correct?

57
00:06:14.026 --> 00:06:18.516
&gt;&gt; Mike North: So
the repo should already be resolved.

58
00:06:18.516 --> 00:06:25.269
So there's my org id, there's my repo id,
that looks right to me.

59
00:06:25.269 --> 00:06:27.156
Maybe it's a.

60
00:06:29.642 --> 00:06:33.329
&gt;&gt; Speaker 3: [LAUGH]
&gt;&gt; Mike North: [LAUGH] Trolled again.

61
00:06:38.022 --> 00:06:38.950
&gt;&gt; Mike North: Awesome.

62
00:06:38.950 --> 00:06:41.940
And now raw contributors.

63
00:06:41.940 --> 00:06:42.499
Awesome.
And

64
00:06:42.499 --> 00:06:45.999
we just need to do the same mapping here.

65
00:06:45.999 --> 00:06:47.820
I'm gonna just copy it.

66
00:06:47.820 --> 00:06:51.216
This would be a great thing
to sort of externalize and

67
00:06:51.216 --> 00:06:55.784
make it a function that we could just
massage everything the same way.

68
00:07:09.679 --> 00:07:14.107
&gt;&gt; Mike North: And [NOISE] got rid

69
00:07:14.107 --> 00:07:18.850
of the debug, and

70
00:07:18.850 --> 00:07:24.604
rawContributor.

71
00:07:24.604 --> 00:07:25.292
&gt;&gt; Speaker 4: No.

72
00:07:25.292 --> 00:07:26.540
&gt;&gt; Speaker 5: It should be fine.

73
00:07:26.540 --> 00:07:34.300
And that there's various equal
to one of the individuals.

74
00:07:34.300 --> 00:07:36.440
&gt;&gt; Mike North: All right.
Now, I'm pretty convinced it works.

75
00:08:00.340 --> 00:08:01.560
&gt;&gt; Mike North: There we go.

76
00:08:01.560 --> 00:08:03.810
So now we have the list of contributors.

77
00:08:03.810 --> 00:08:06.100
We've gone really deep into this now.

78
00:08:06.100 --> 00:08:10.480
We've got a lot of data coming in at
different levels and what's important to

79
00:08:10.480 --> 00:08:15.970
note is that you can drill in and
drill in and drill in,

80
00:08:15.970 --> 00:08:22.100
and as you go through the routes deeper
and deeper, you often need to refer to

81
00:08:22.100 --> 00:08:28.250
parent route models in order to
do what you need to get done.

82
00:08:28.250 --> 00:08:33.650
In one case, in the case of the org,

83
00:08:35.200 --> 00:08:41.490
we had to actually make available,
sorry, it was the repos list I think.

84
00:08:41.490 --> 00:08:45.217
We had to make something available in
the template via setup controller.

85
00:08:45.217 --> 00:08:49.498
And so this is the kind of stuff that
you have to do in order to resolve

86
00:08:49.498 --> 00:08:54.313
the differences in the hierarchies
between the route structure you want,

87
00:08:54.313 --> 00:08:57.066
what you want to show
up in your templates,

88
00:08:57.066 --> 00:09:02.051
and what data is necessary in order to
fetch other data, if that makes sense.

89
00:09:02.051 --> 00:09:05.931
So, I think I should be
able to just copy this and

90
00:09:05.931 --> 00:09:10.690
make it just work for issues and
then we're all home free.

91
00:09:13.720 --> 00:09:19.165
I'll copy this one and

92
00:09:19.165 --> 00:09:24.902
replace with issues and

93
00:09:35.931 --> 00:09:38.342
&gt;&gt; Mike North: &lt;ul&gt;.

94
00:09:38.342 --> 00:09:42.071
So just iterating over again &lt;/ul&gt;

95
00:09:54.380 --> 00:09:56.410
&gt;&gt; Mike North: And
here we've got a couple issues.

96
00:09:56.410 --> 00:09:57.880
This is a smaller repository.

97
00:09:57.880 --> 00:10:01.330
We can go back to something
little more interesting

98
00:10:01.330 --> 00:10:04.660
like Ember seal by itself many issues.

99
00:10:06.280 --> 00:10:09.430
Many people working on them and
then here are the contributors.

100
00:10:09.430 --> 00:10:13.760
So now we've gotten rid of all
the hard coding, hard coded data.

101
00:10:13.760 --> 00:10:15.720
We're getting repo information.

102
00:10:15.720 --> 00:10:20.250
The list of repos, the list of issues, the
list of collaborators, all from the API.

103
00:10:20.250 --> 00:10:24.600
And when it comes down to it,
it seems like a lot of work but

104
00:10:24.600 --> 00:10:30.670
it falls into three categories,
using get $.get using jQuery

105
00:10:30.670 --> 00:10:35.394
to just return a promise, you don't need
ember data, although it's quite useful.

106
00:10:35.394 --> 00:10:38.710
Using modelFor instead
of controller to get

107
00:10:38.710 --> 00:10:40.599
the right data onto the right template.

108
00:10:41.870 --> 00:10:46.940
And then finally doing
a little JSON massaging to get

109
00:10:46.940 --> 00:10:50.220
things into a state where
link two is happy with them.

110
00:10:50.220 --> 00:10:55.300
Make sure you get that id matching
what the URL thinks the id should be.

