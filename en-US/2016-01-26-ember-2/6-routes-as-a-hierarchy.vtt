WEBVTT

1
00:00:00.000 --> 00:00:03.777
[MUSIC]

2
00:00:03.777 --> 00:00:09.691
&gt;&gt; Mike North: So, next,
this is what the Ember Router looks like.

3
00:00:09.691 --> 00:00:15.046
Much cleaner, and
essentially here you're going to

4
00:00:15.046 --> 00:00:20.879
have these URL's that are shown
to the right in comments.

5
00:00:22.420 --> 00:00:25.910
That is what Ember will
actually understand.

6
00:00:25.910 --> 00:00:27.870
These are example URL's
that match each route.

7
00:00:29.340 --> 00:00:33.980
So, we can go to slash,
which I'm calling an implied index.

8
00:00:33.980 --> 00:00:36.595
The way to think about
that is if you go to

9
00:00:36.595 --> 00:00:40.810
frontendmasters.com/ what is
the file that comes back?

10
00:01:04.210 --> 00:01:07.080
And then some more stuff below that

11
00:01:07.080 --> 00:01:09.460
you can start to see how I'm
establishing a hierarchy here.

12
00:01:11.590 --> 00:01:14.287
What I want you guys to notice, and

13
00:01:14.287 --> 00:01:18.845
this is another convention
over configuration feature,

14
00:01:18.845 --> 00:01:25.646
I don't have to explicitly define the path
for anything except the route called post.

15
00:01:25.646 --> 00:01:30.855
And the reason is, the implication
of not defining it is that you

16
00:01:30.855 --> 00:01:35.789
should just fall back onto
whatever the name of the route is.

17
00:01:35.789 --> 00:01:40.161
So posts, it understands that
slash post is what I want,

18
00:01:40.161 --> 00:01:44.548
I've not superseded the default
configuration there.

19
00:01:44.548 --> 00:01:48.692
So keeping this in mind,
I want you guys to think of,

20
00:01:48.692 --> 00:01:54.271
I want to illustrate what's actually
happening under the hood here.

21
00:01:54.271 --> 00:01:57.183
So, hierarchical routing means that

22
00:01:57.183 --> 00:02:01.824
there are multiple routes active
forming a particular URL.

23
00:02:01.824 --> 00:02:03.174
And often times,

24
00:02:03.174 --> 00:02:08.854
each route that's active will correspond
to some piece of the URL itself.

25
00:02:11.416 --> 00:02:15.005
&gt;&gt; Mike North: I also want you guys to
notice that I've got this application node

26
00:02:15.005 --> 00:02:16.870
here at the root.

27
00:02:16.870 --> 00:02:20.510
That's sort of the overarching route

28
00:02:20.510 --> 00:02:25.350
that is always active as soon as
the user enters your application, and

29
00:02:25.350 --> 00:02:29.420
it never really goes inactive
until the user closes their tab.

30
00:02:30.430 --> 00:02:34.630
But it is not, regardless of URL,

31
00:02:34.630 --> 00:02:37.680
application is still sort
of the outer wrapper.

32
00:02:39.130 --> 00:02:43.690
And when we start seeing parallels
between a template that's rendered, and

33
00:02:43.690 --> 00:02:48.240
a route that's active, application is
sort of the wrapper for your whole app.

34
00:02:48.240 --> 00:02:51.400
If you have a nav bar that is always
present on the screen at all times,

35
00:02:51.400 --> 00:02:54.940
you would put that in
the application template.

36
00:02:54.940 --> 00:02:59.780
Because that's sort of no matter what,
that is the outer most wrapper.

37
00:02:59.780 --> 00:03:03.450
And you can see on the top right
there what I'm illustrating here is

38
00:03:03.450 --> 00:03:07.170
what will appear on the screen,
which templates will be rendered,

39
00:03:07.170 --> 00:03:11.790
and you can see here if I'm going to /,
right?

40
00:03:11.790 --> 00:03:16.570
Application is active because
application is always active.

41
00:03:16.570 --> 00:03:21.890
Index is active under application
because that's sort of like index.html.

42
00:03:21.890 --> 00:03:23.830
That is the default.

43
00:03:25.240 --> 00:03:31.890
Now if I go to /posts/, what ends up
happening is we pivot on application.

44
00:03:33.180 --> 00:03:36.950
And you can see that
what's rendered changes.

45
00:03:36.950 --> 00:03:40.190
So instead of looking at index,
which is the root file there,

46
00:03:40.190 --> 00:03:44.310
we're looking at posts and
then the index within posts.

47
00:03:44.310 --> 00:03:48.940
So, and I've added a slash to the URL
here, which is optional but that's

48
00:03:50.190 --> 00:03:54.430
so we understand like, index.hbs,

49
00:03:54.430 --> 00:03:58.030
the handlebars follow index,
is analogous to index.html.

50
00:03:58.030 --> 00:04:02.210
So if we pivot again and

51
00:04:02.210 --> 00:04:06.030
go to post /index.

52
00:04:06.030 --> 00:04:10.510
Remember that when we define post, we had
this route with the dynamic segment in it,

53
00:04:10.510 --> 00:04:14.210
it was post slash colon ID.

54
00:04:14.210 --> 00:04:18.910
And so, here we're actually have
the context of an individual record

55
00:04:18.910 --> 00:04:22.330
potentially this is one blog post.

56
00:04:22.330 --> 00:04:26.570
And then if we decide we want to look
at the comments on this post, you

57
00:04:28.270 --> 00:04:33.220
can see that the blue, I'm alternating
back and forth to show the difference

58
00:04:33.220 --> 00:04:38.390
between these two states here, but you can
see the blue post template remains active.

59
00:04:38.390 --> 00:04:39.240
Oops.

60
00:04:39.240 --> 00:04:48.825
And the key understanding there,

61
00:04:48.825 --> 00:04:53.121
the key thing to

62
00:04:53.121 --> 00:04:58.410
understand is that

63
00:04:58.410 --> 00:05:05.030
it will not reload it.

64
00:05:05.030 --> 00:05:12.250
It will not have to do anything, because
all that's changing are its children.

65
00:05:12.250 --> 00:05:18.740
And the magic behind this in a template is
this handlebars helper called outlet, and

66
00:05:18.740 --> 00:05:23.910
when you put outlet in a template that's
essentially saying child views go here.

67
00:05:23.910 --> 00:05:27.660
So if you have a table like a master
detail view where you select a record and

68
00:05:27.660 --> 00:05:33.240
you see some details, you would want to
place like the details view somewhere.

69
00:05:33.240 --> 00:05:37.187
So that as you click around, as the URL
changing as a result of your clicking,

70
00:05:37.187 --> 00:05:40.059
you know you have control
over where that surrendered.

71
00:05:43.239 --> 00:05:47.087
&gt;&gt; Mike North: So, now we kind of
understand that there is the state machine

72
00:05:47.087 --> 00:05:52.520
here, it's strongly connected to URLs,
and there's parody between the hierarchy

73
00:05:52.520 --> 00:05:58.330
of routes and the hierarchy of templates,
each of which corresponds to a route.

74
00:05:58.330 --> 00:06:01.730
So, actually I should say
that the other way around.

75
00:06:01.730 --> 00:06:05.820
Each route has a template associated with
it, you can have many more templates,

76
00:06:05.820 --> 00:06:09.060
but each route has a template
associated with it.

77
00:06:11.400 --> 00:06:15.620
The last thing we need to know
before we jump into coding is how do

78
00:06:15.620 --> 00:06:20.710
you create links in templates that will,
when clicked,

79
00:06:20.710 --> 00:06:23.400
trigger transitions between these routes.

80
00:06:23.400 --> 00:06:26.390
And you do that with this
ember helper called link 2.

81
00:06:26.390 --> 00:06:32.200
The reason that we have to do things
this way is because if we used an a tag,

82
00:06:32.200 --> 00:06:39.060
an anchor tag,
the browser will be what is handling that.

83
00:06:39.060 --> 00:06:39.610
Right.

84
00:06:39.610 --> 00:06:42.980
The browser will handle that, and you do
not want a pageload to actually happen and

85
00:06:42.980 --> 00:06:44.730
to reinterpret your JavaScript.

86
00:06:44.730 --> 00:06:47.970
Even if it's cached,
it still takes some time.

87
00:06:47.970 --> 00:06:51.370
So, this is sort of an Ember
specific concept for

88
00:06:51.370 --> 00:06:55.530
an internal link to another
page within your app.

89
00:06:55.530 --> 00:07:01.560
And you can see with these two examples,
the top one is going to a static route,

90
00:07:01.560 --> 00:07:05.210
right, it's going to just index,
going back home.

91
00:07:05.210 --> 00:07:08.120
That would take you to /, right.

92
00:07:08.120 --> 00:07:15.846
And this second example is going
to the post.comments route.

93
00:07:15.846 --> 00:07:19.820
And that is this here,
right, post.comments,

94
00:07:19.820 --> 00:07:23.250
that's the way that you describe
this particular state here.

95
00:07:25.590 --> 00:07:29.500
And we're passing some data to
populate this dynamic segment.

96
00:07:29.500 --> 00:07:37.890
So this would be, basically,
let me see the comments on post 31.

97
00:07:37.890 --> 00:07:40.950
&gt;&gt; Speaker 2: Before you had
a couple of slides back,

98
00:07:40.950 --> 00:07:45.930
you had comments kind of
wrapping around posts.

99
00:07:45.930 --> 00:07:50.450
And that led me to think that I would see
a route called application comments posts,

100
00:07:51.580 --> 00:07:55.000
but that's not what I saw.

101
00:07:55.000 --> 00:07:55.580
&gt;&gt; Mike North: Good question.

102
00:07:55.580 --> 00:07:56.580
So, I'm going to take you back.

103
00:07:56.580 --> 00:07:58.810
You probably want to see this slide here,
right?

104
00:08:01.270 --> 00:08:05.120
&gt;&gt; Mike North: So, you can't
really transition to application.

105
00:08:06.220 --> 00:08:10.750
You can't even really,
what's the right way to say this,

106
00:08:12.330 --> 00:08:16.940
the application route itself does
not correspond to a particular URL.

107
00:08:16.940 --> 00:08:19.140
It is present for all URL's.

108
00:08:19.140 --> 00:08:24.060
So, you don't really refer
to it when building links.

109
00:08:24.060 --> 00:08:30.110
When I say posts dot comments,
the reason I say this is because

110
00:08:31.530 --> 00:08:36.270
if we look at what I've define here.

111
00:08:36.270 --> 00:08:44.010
It is just parent dot child, and
when I say child, I mean that author and

112
00:08:44.010 --> 00:08:49.660
comments are defined within this
function that I passed to post.

113
00:08:53.090 --> 00:08:54.440
Does that help add some clarity here?

114
00:08:55.460 --> 00:08:56.540
&gt;&gt; Speaker 2: I think you will later.

115
00:08:56.540 --> 00:09:00.710
&gt;&gt; Mike North: So I want to actually go
through some examples and code a little

116
00:09:00.710 --> 00:09:04.680
bit for you guys before we get started,
just to make sure we hammer this home.

117
00:09:07.200 --> 00:09:08.100
&gt;&gt; Speaker 3: Couple questions.

118
00:09:09.230 --> 00:09:14.330
They're asking about when you're defining
this .route host and in the path.

119
00:09:14.330 --> 00:09:18.410
They said that sometimes they
see it with a leaning slash, and

120
00:09:18.410 --> 00:09:19.930
not a leaning slash, does it matter?

121
00:09:21.200 --> 00:09:23.830
&gt;&gt; Mike North: So we're talking about
the link two helper here I guess?

122
00:09:23.830 --> 00:09:24.810
&gt;&gt; Speaker 3: No,
the last slide that you were on.

123
00:09:24.810 --> 00:09:25.310
&gt;&gt; Mike North: I see. So, I'm not sure,
I don't believe it matters.

124
00:09:25.310 --> 00:09:29.090
&gt;&gt; Speaker 3: Okay.
&gt;&gt; Mike North: I would avoid the leading

125
00:09:29.090 --> 00:09:35.916
slash just because I
don't see that around.

126
00:09:35.916 --> 00:09:41.370
And staying aligned with the common

127
00:09:41.370 --> 00:09:46.095
use will help you steer clear of

128
00:09:46.095 --> 00:09:51.300
annoying little edge cases.

129
00:09:51.300 --> 00:09:54.950
&gt;&gt; Speaker 3: And the the second question
is on the plural versus singular on

130
00:09:54.950 --> 00:10:01.420
the posts, what's the standard that
the ember community is following?

131
00:10:01.420 --> 00:10:04.380
&gt;&gt; Mike North: Right, so
it would be the way I define it here,

132
00:10:04.380 --> 00:10:09.040
and you'll see that there are more
important things to pay attention to.

133
00:10:10.750 --> 00:10:14.320
Mostly, how do you want to
structure your templates?

134
00:10:14.320 --> 00:10:17.540
You see that because there's
parity between the routes, and

135
00:10:17.540 --> 00:10:21.770
thus sort of the URLs, and
what's showing up on the screen,

136
00:10:23.350 --> 00:10:26.950
you kind of have to understand you know,
what should stay on the screen,

137
00:10:26.950 --> 00:10:30.110
what's common between these
two URLs verses what changes.

138
00:10:31.810 --> 00:10:33.430
When I'm designing my routes,

139
00:10:33.430 --> 00:10:38.230
when I'm figuring out what should
be a child of what, that is

140
00:10:38.230 --> 00:10:43.940
a stronger influence on how I set things
up rather than singular verses plural.

141
00:10:43.940 --> 00:10:45.202
That being said,
what I have here is, I believe,

142
00:10:45.202 --> 00:10:47.206
the advised idiom where you have separate
routes for handling a list of posts.

143
00:10:47.206 --> 00:10:47.706
And then as a sibling, handling a single
post, and then as a child of that,

144
00:10:47.706 --> 00:10:48.206
everything that relates to that single
post. And hopefully, you'll see how that

145
00:10:48.206 --> 00:10:48.706
kind of falls through and
becomes nice as we jump in.

