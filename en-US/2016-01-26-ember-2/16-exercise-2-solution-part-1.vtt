WEBVTT

1
00:00:00.000 --> 00:00:03.889
[MUSIC]

2
00:00:03.889 --> 00:00:04.450
&gt;&gt; Mike North: Okay, so

3
00:00:04.450 --> 00:00:09.760
the first thing that I want to do is
make sure that I create some new routes.

4
00:00:09.760 --> 00:00:14.640
And it's important, usually when
you're doing a redirect to try to like

5
00:00:16.110 --> 00:00:21.700
take someone from one URL to
always redirect to another.

6
00:00:21.700 --> 00:00:26.320
It's likely that you want to do that on
a leaf level route, not on a parent route.

7
00:00:26.320 --> 00:00:31.070
And the reason is that a leaf
level route is very specific, and

8
00:00:31.070 --> 00:00:34.310
you can make sure that you're only
redirecting in the case where

9
00:00:34.310 --> 00:00:39.350
a very particular specific URL or
path is reached.

10
00:00:39.350 --> 00:00:40.710
Taking them to another path.

11
00:00:42.170 --> 00:00:46.120
So, to get started here, and
I'm just gonna look at my

12
00:00:46.120 --> 00:00:50.260
instructions here to make sure
I'm following my own stuff here.

13
00:00:50.260 --> 00:00:54.360
I'm gonna need potentially
three new routes here.

14
00:00:54.360 --> 00:00:57.370
I'm gonna need an index at the root,
which already exists but

15
00:00:57.370 --> 00:01:01.460
there's no,
it only exists in an implied form.

16
00:01:01.460 --> 00:01:06.180
There's no file in my project until I need
to actually have Ember CLI create a file

17
00:01:06.180 --> 00:01:09.130
for me so I may customize it.

18
00:01:09.130 --> 00:01:12.225
I need an index at this level, right.

19
00:01:12.225 --> 00:01:19.958
So it will be org.index.

20
00:01:19.958 --> 00:01:25.618
And then this last one
will be org.repo.index.

21
00:01:25.618 --> 00:01:28.760
Those will be the names of my routes.

22
00:01:28.760 --> 00:01:34.020
So going here,
I'm gonna go ember g index for my route.

23
00:01:37.890 --> 00:01:40.970
Durr, ember g route index [LAUGH].

24
00:01:40.970 --> 00:01:47.430
And then I'm gonna make another one,
ember g route org index,

25
00:01:47.430 --> 00:01:52.640
using a slash when you're on the command
line, a dot to delimit the path

26
00:01:52.640 --> 00:01:59.840
when you're in the app itself,
and org repo index.

27
00:01:59.840 --> 00:02:04.110
And so,
these are leaf level routes only for

28
00:02:04.110 --> 00:02:09.750
the specific URLs where I want to do the
redirects will these routes be loaded and

29
00:02:09.750 --> 00:02:11.270
thus it's the perfect
place to put the code.

30
00:02:11.270 --> 00:02:14.350
And so going to the code here.

31
00:02:14.350 --> 00:02:18.810
So, basically I want to go to slash,
in here it's showing nothing.

32
00:02:18.810 --> 00:02:24.210
It's a valid route, it is there,

33
00:02:24.210 --> 00:02:28.540
but it's showing an empty template with an
outlet and there are no child views, and

34
00:02:28.540 --> 00:02:31.790
so there's nothing in the outlet,
that's just blank.

35
00:02:31.790 --> 00:02:33.239
So I'm going to go to this route.

36
00:02:35.970 --> 00:02:38.810
Get rid of this for now.

37
00:02:40.940 --> 00:02:45.280
Before model, doing it in sixth style.

38
00:02:47.000 --> 00:02:51.752
I like to call super at the beginning of
these because we deal with a couple large

39
00:02:51.752 --> 00:02:56.721
apps, and you start refactoring and trying
to have a base class that you insert all

40
00:02:56.721 --> 00:03:00.681
over the place, and you only have
to do that one or two times before

41
00:03:00.681 --> 00:03:05.315
you start instinctively putting super
in everywhere, even for the NOOPs.

42
00:03:11.136 --> 00:03:13.739
&gt;&gt; Mike North: So,
I'm going to start with transition two.

43
00:03:17.942 --> 00:03:23.520
&gt;&gt; Mike North: And
I'm going to go to orgs, save.

44
00:03:24.970 --> 00:03:25.990
Fantastic!

45
00:03:25.990 --> 00:03:27.400
We're at orgs.

46
00:03:27.400 --> 00:03:28.360
I want to show you guys something.

47
00:03:30.890 --> 00:03:32.330
So, I'll start with an empty browser.

48
00:03:34.230 --> 00:03:37.310
I'm deliberately cleaning
the history stack here for you guys.

49
00:03:38.590 --> 00:03:43.580
I'm gonna go to index,
right, that's just slash.

50
00:03:44.930 --> 00:03:46.270
I end up at the right place.

51
00:03:46.270 --> 00:03:51.770
Fantastic, but
my back button is all screwed up.

52
00:03:51.770 --> 00:03:55.050
And you see that it maybe
hard to capture on the video.

53
00:03:55.050 --> 00:03:58.920
But the URL is actually flickering
because what's happening is

54
00:03:58.920 --> 00:04:00.670
I've two states in my history stack.

55
00:04:02.560 --> 00:04:06.000
I've got this here.

56
00:04:06.000 --> 00:04:10.170
This is slash and
my current location is orgs.

57
00:04:10.170 --> 00:04:13.620
And so I've got this page that I keep
going back to and it kicks me forward, and

58
00:04:13.620 --> 00:04:17.100
I keep going back to it and
it kicks me forward, so I'm stuck.

59
00:04:17.100 --> 00:04:18.280
I've kind of broken history.

60
00:04:19.300 --> 00:04:22.522
So for those who are wondering why
we might want to use replace with.

61
00:04:25.032 --> 00:04:26.099
&gt;&gt; Mike North: This is the case.

62
00:04:30.002 --> 00:04:34.052
&gt;&gt; Mike North: To convince you that this
actually does what I'm claiming it does,

63
00:04:34.052 --> 00:04:34.940
fantastic.

64
00:04:34.940 --> 00:04:39.330
And now if we look at our history stack,
a-ha, Google's on top.

65
00:04:39.330 --> 00:04:40.990
Back button works.

66
00:04:40.990 --> 00:04:42.230
And in fact the forward button,

67
00:04:43.580 --> 00:04:46.800
I will never even go through
that initial URL again.

68
00:04:46.800 --> 00:04:49.100
We've replaced that history state.

69
00:04:49.100 --> 00:04:56.030
So the user will not enter it
through that redirected route again.

70
00:04:56.030 --> 00:04:57.820
Awesome, so we've got that.

71
00:05:00.710 --> 00:05:06.170
Now we go to,
we wanted to be able to go to jquery.

72
00:05:07.220 --> 00:05:09.780
Well while we're here I'm just going to
change the template the way we decided we

73
00:05:09.780 --> 00:05:10.960
should change it.

74
00:05:10.960 --> 00:05:17.470
Orgs and now I want to go to
instead of org repos, just to org.

75
00:05:20.020 --> 00:05:24.570
And so the urls are now just /org,
/emberjs.

76
00:05:24.570 --> 00:05:27.180
Fantastic, I click on them, I get nothing.

77
00:05:27.180 --> 00:05:28.250
Why?

78
00:05:28.250 --> 00:05:32.694
Because we're now on org.index.

79
00:05:32.694 --> 00:05:39.040
And if we look at the template for
org.index.

80
00:05:41.472 --> 00:05:44.608
&gt;&gt; Mike North: org index, it's empty.

81
00:05:44.608 --> 00:05:46.811
We can put something in it, Wilson.

82
00:05:46.811 --> 00:05:48.820
&gt;&gt; Speaker 2: Isn't that
just your base index.

83
00:05:51.090 --> 00:05:52.547
&gt;&gt; Mike North: You're right, thank you.

84
00:05:52.547 --> 00:05:55.032
Need better indenting [LAUGH].

85
00:05:56.931 --> 00:05:59.400
&gt;&gt; Mike North: So I can put something
here, and I'll see it rendered.

86
00:05:59.400 --> 00:06:02.360
So that is in fact the leaf
level route that we're on.

87
00:06:02.360 --> 00:06:06.090
But, I'm not really interested
in fleshing this template out.

88
00:06:06.090 --> 00:06:11.568
In fact, I want to go to org index and
put a similar redirect in here.

89
00:06:24.475 --> 00:06:26.448
&gt;&gt; Mike North: I will explain
why I'm transitioning to.

90
00:06:32.639 --> 00:06:37.553
&gt;&gt; Mike North: Does anyone have a question
other than the transition to about what

91
00:06:37.553 --> 00:06:38.790
I just did here?

92
00:06:41.910 --> 00:06:46.773
So, it's odd that this has
a dynamic segment, like org,

93
00:06:46.773 --> 00:06:51.160
like which org, transition to which org.

94
00:06:51.160 --> 00:06:55.060
When we were dealing with link two,
I had to supply a model

95
00:06:55.060 --> 00:06:58.870
whenever I was transitioning to
a route with a dynamic segment.

96
00:06:58.870 --> 00:07:04.210
Here it's important to understand that
you already exist in a certain state,

97
00:07:04.210 --> 00:07:08.370
and we're already on a route in
the context of a particular org.

98
00:07:08.370 --> 00:07:13.275
And so by default because the dynamic
segments you need to fill

99
00:07:13.275 --> 00:07:18.770
in the route I want to send you to are
the same as the route I'm currently on,

100
00:07:18.770 --> 00:07:22.420
you actually are just basically
switching the destination.

101
00:07:22.420 --> 00:07:27.790
You don't need to respecify that no, it's
in fact the org that I'm on right now,

102
00:07:27.790 --> 00:07:30.570
and I wanna stay on that org and
go to this child route.

103
00:07:32.080 --> 00:07:35.600
So now, just to prove that this works,
if I just go

104
00:07:35.600 --> 00:07:40.350
to org/emberjs,
I'll be kicked out to repos.

105
00:07:40.350 --> 00:07:44.530
And if I hit the back button, interesting.

106
00:07:44.530 --> 00:07:46.190
Yeah, so here we go.

107
00:07:46.190 --> 00:07:52.610
Org, jQuery repose back button sends
me to my favorite orgs, right?

108
00:07:52.610 --> 00:07:55.830
So we can go forward, we can go back,
we can go forward, we can go back.

109
00:07:55.830 --> 00:07:58.200
This is history state looks good.

110
00:07:58.200 --> 00:08:00.480
There is a little issue here,

111
00:08:00.480 --> 00:08:04.710
I'm gonna dive into it at the end,
once we have the full solution here.

112
00:08:05.710 --> 00:08:08.910
All right so
switching back to the slides we want

113
00:08:08.910 --> 00:08:13.530
when you're on the sort of root of
a repo I wanna see the list of issues.

114
00:08:13.530 --> 00:08:15.635
So we're gonna go to repo, index,

115
00:08:15.635 --> 00:08:19.723
basically apply the same exact
pattern with a different route name.

116
00:08:27.657 --> 00:08:34.400
&gt;&gt; Mike North: So now, when we go into
jQuery, now we're on the issues page.

117
00:08:34.400 --> 00:08:36.960
So now we kind of can drill through, and

118
00:08:36.960 --> 00:08:40.900
we end up at a nice default location,
which we can change later, right?

119
00:08:40.900 --> 00:08:46.180
We can print out a business card, some
URL and we have some control over it now

120
00:08:46.180 --> 00:08:50.290
cuz incoming traffic we can redirect one
place for now but another place for later.

121
00:08:50.290 --> 00:08:51.840
There are some good use cases for this.

122
00:08:51.840 --> 00:08:56.920
Or if we change our URL structure and
people have been bookmarking things,

123
00:08:56.920 --> 00:09:00.500
you don't wanna just have links
that are out in the world dying.

124
00:09:01.890 --> 00:09:07.340
So this is a common pattern if you
want to change sort of your URL schema

125
00:09:07.340 --> 00:09:08.300
to redirect traffic.

