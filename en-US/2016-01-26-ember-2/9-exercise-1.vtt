WEBVTT

1
00:00:00.000 --> 00:00:04.326
[MUSIC]

2
00:00:04.326 --> 00:00:07.280
&gt;&gt; Mike North: We're gonna build
a little browser for the GitHub API.

3
00:00:07.280 --> 00:00:12.520
We're gonna start with just placeholder
stuff on pages and have some

4
00:00:12.520 --> 00:00:15.550
links that take us between some pages,
that we know will have data on later.

5
00:00:16.820 --> 00:00:20.743
If you want to refer to it later,
this is the set of steps I took to

6
00:00:20.743 --> 00:00:25.820
get to the repo that you checked out for
that repo that I have right now.

7
00:00:27.940 --> 00:00:31.810
And this is the set of URLs
that we care about and

8
00:00:31.810 --> 00:00:37.910
I'm going to ask that you guys
sort of focus from the top down.

9
00:00:37.910 --> 00:00:41.710
And we'll just see how far we
can get in 20 minutes or so.

10
00:00:43.120 --> 00:00:47.130
This is basically the same concept
applied a couple different times,

11
00:00:47.130 --> 00:00:51.750
just to make sure you guys get how we
can have a hierarchy all the way down.

12
00:00:51.750 --> 00:00:58.180
We can have a route that has 8,
10, 15 child routes to you.

13
00:00:58.180 --> 00:00:58.996
Not that that's a good idea.

14
00:00:58.996 --> 00:01:07.194
But it is a pattern that applies
as deep as you need to go.

15
00:01:07.194 --> 00:01:11.383
So these are the routes that we need
to create and I'll re-post the link but

16
00:01:11.383 --> 00:01:15.590
I made my slides available for download
in case you guys need to refer to it.

17
00:01:15.590 --> 00:01:18.131
It's in the chat but
probably way up at this point.

18
00:01:18.131 --> 00:01:23.502
These are the pages that
I want us to focus on.

19
00:01:23.502 --> 00:01:25.255
Mainly the top two and

20
00:01:25.255 --> 00:01:30.142
when I solve the problem I will
go through all four of these.

21
00:01:30.142 --> 00:01:36.396
But, we want just a hard coded list and
by this I mean a UL with four LIs,

22
00:01:36.396 --> 00:01:41.502
each of which will probably
have a link to in it, of orgs.

23
00:01:41.502 --> 00:01:46.005
And then when you drill into a GitHub org,

24
00:01:46.005 --> 00:01:51.546
I want to see a list of
repositories under that org.

25
00:01:51.546 --> 00:01:53.823
And that will, again,
be a hard coded list.

26
00:01:53.823 --> 00:01:59.582
We'll get into interating with that each
helper we talked about in the next step.

27
00:01:59.582 --> 00:02:01.102
In the next exercise.

28
00:02:03.343 --> 00:02:08.360
&gt;&gt; Mike North: So general guidelines,
hardcode everything for now.

29
00:02:09.600 --> 00:02:13.970
If no matter which repo you click on,
the header says Netflix or Facebook or

30
00:02:13.970 --> 00:02:16.110
whatever, totally fine.

31
00:02:16.110 --> 00:02:21.134
The main take away we're looking for
here is having URLs and

32
00:02:21.134 --> 00:02:28.541
being able to transition between URLs and
navigate through a completely static app.

33
00:02:28.541 --> 00:02:31.541
&gt;&gt; Mike North: Does this
makes sense to everybody?

34
00:02:31.541 --> 00:02:36.136
I expect this will be a little bit
of a rough start because sort of

35
00:02:36.136 --> 00:02:38.662
throwing you in the deep end here.

36
00:02:38.662 --> 00:02:43.365
But what I want is, these examples
will all build on each other.

37
00:02:43.365 --> 00:02:47.976
So we are not making trivial little
like hello world things that

38
00:02:47.976 --> 00:02:53.641
are completely unlike what you would be
doing if you were building a real app.

39
00:02:53.641 --> 00:02:54.141
I'm trying to keep this as aligned with
what you'd actually be doing as possible.

