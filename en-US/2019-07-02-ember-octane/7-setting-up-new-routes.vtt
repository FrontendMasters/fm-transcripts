WEBVTT

1
00:00:00.160 --> 00:00:04.870
&gt;&gt; Mike: The next thing we're going
to do is add some URL specific

2
00:00:04.870 --> 00:00:06.310
content to our app.

3
00:00:06.310 --> 00:00:11.910
So currently, if we were to go
to the root of our application,

4
00:00:11.910 --> 00:00:15.610
gonna delete the tests, part of the URL.

5
00:00:15.610 --> 00:00:21.991
And I were to add something like ABC,
we'll get an error, and that is.

6
00:00:26.394 --> 00:00:29.330
&gt;&gt; Mike: It's an unrecognized URL error,
there you go.

7
00:00:29.330 --> 00:00:32.830
Whoops, sorry, unrecognized URL error.

8
00:00:32.830 --> 00:00:36.930
So this is indicating that sort of,
we've only provided content for

9
00:00:36.930 --> 00:00:39.310
the very root of our application.

10
00:00:39.310 --> 00:00:44.560
And the framework does not know
how to respond to slash ABC.

11
00:00:44.560 --> 00:00:49.520
In fact, all of the stuff we've been
doing so far has been an application HPS.

12
00:00:49.520 --> 00:00:53.320
And that is shown on the screen
no matter which URL we visit.

13
00:00:53.320 --> 00:00:57.930
This would be already put
a Google Analytics snippet or nav bar.

14
00:00:57.930 --> 00:01:02.030
Something that's always present and
always part of the user experience.

15
00:01:02.030 --> 00:01:05.010
So we're gonna have to do
a little bit of refactoring.

16
00:01:05.010 --> 00:01:10.350
And when we think about URLs specific
content, you should think routing.

17
00:01:11.370 --> 00:01:16.230
So Ember's routing layer
is what takes a URL and

18
00:01:16.230 --> 00:01:18.380
figures out what should be on the screen.

19
00:01:18.380 --> 00:01:22.940
And what data needs to be fetched in order
to render the appropriate templates.

20
00:01:22.940 --> 00:01:26.710
Anything URL related is
likely to involve routing,

21
00:01:26.710 --> 00:01:31.360
and we're gonna get started
by building two routes.

22
00:01:31.360 --> 00:01:38.620
We'll do so
by running ember generate route teams.

23
00:01:38.620 --> 00:01:43.520
And this is where our chat UI is gonna be.

24
00:01:43.520 --> 00:01:49.386
And in addition to that,
we're going to build a route for

25
00:01:49.386 --> 00:01:57.099
a login screen where we can have a very
rudimentary authentication set up.

26
00:01:57.099 --> 00:02:02.220
And where we can pick which user we wanna
log in with, and who we want to chat as.

27
00:02:03.530 --> 00:02:06.130
So ember generate route login.

28
00:02:06.130 --> 00:02:12.237
And I'm going to just look
at the VS code git UI so

29
00:02:12.237 --> 00:02:16.990
we can see which files have changed.

30
00:02:16.990 --> 00:02:21.120
And which have been added as result
of running those two commands.

31
00:02:21.120 --> 00:02:24.770
So starting at the top we have router.

32
00:02:26.130 --> 00:02:28.640
And let me get this out
of the way temporarily.

33
00:02:31.590 --> 00:02:37.430
So we have router, and we can see that
this used to be an empty function.

34
00:02:37.430 --> 00:02:41.630
And now we have two routes that
have been installed in the router.

35
00:02:41.630 --> 00:02:49.180
And what this does is the router is what
receives, changes to the URL, right?

36
00:02:49.180 --> 00:02:52.979
It listens for change events and
it's told that the URL has changed, or

37
00:02:52.979 --> 00:02:55.907
the user is entering the app
through a particular URL.

38
00:02:55.907 --> 00:03:01.209
And it sends control off to a set of
routes, which are responsible for

39
00:03:01.209 --> 00:03:05.780
bringing the application
into the correct state.

40
00:03:05.780 --> 00:03:11.690
So like, for the login screen, we might
have to go and fetch a list of users or

41
00:03:11.690 --> 00:03:17.380
something in order to facilitate
whatever it means to log into this app.

42
00:03:17.380 --> 00:03:19.330
For the teams route,

43
00:03:19.330 --> 00:03:24.390
we might need to go and get a list of
which slack teams you are a part of.

44
00:03:25.500 --> 00:03:29.270
But each respective route
would have a single job,

45
00:03:29.270 --> 00:03:34.530
and it would be to get everything ready
for those two independent things.

46
00:03:34.530 --> 00:03:36.180
So that's what the router's all about.

47
00:03:37.790 --> 00:03:40.980
We also have created routes.

48
00:03:40.980 --> 00:03:44.460
So these are native classes, right?

49
00:03:44.460 --> 00:03:47.810
They extend from Ember's
route based class.

50
00:03:47.810 --> 00:03:51.474
So we've got one for
login and for one for teams.

51
00:03:51.474 --> 00:03:56.960
So these are both in the apps/routes
folder, and they do nothing right now.

52
00:03:57.990 --> 00:04:01.020
We're not gonna worry about them
until a couple steps later.

53
00:04:01.020 --> 00:04:06.150
Along with the routes we've
got a template for each.

54
00:04:06.150 --> 00:04:09.368
And all they have in there
is this thing called outlet.

55
00:04:09.368 --> 00:04:11.166
And we'll deal with outlet later.

56
00:04:11.166 --> 00:04:17.830
For now I'll say that when you have nested
content, like routes inside routes.

57
00:04:17.830 --> 00:04:23.400
If we had teams/teamname/channelname,

58
00:04:23.400 --> 00:04:27.940
something like that, where we're sort
of rendering things in a nested way.

59
00:04:27.940 --> 00:04:31.540
Outlet would be where child
content would show up.

60
00:04:31.540 --> 00:04:32.460
We'll deal with that later.

61
00:04:32.460 --> 00:04:34.180
But that's what that means.

62
00:04:34.180 --> 00:04:39.580
So now we have these new
top level templates, right?

63
00:04:39.580 --> 00:04:41.970
They don't belong to
a particular component.

64
00:04:41.970 --> 00:04:45.430
They're just sort of like the starting
point for respective route.

65
00:04:45.430 --> 00:04:47.950
And we can start to think about
what content belongs there.

66
00:04:50.080 --> 00:04:52.790
Finally, we have unit tests, and

67
00:04:52.790 --> 00:04:57.160
these are created as a result
of the routes being created.

68
00:04:58.570 --> 00:05:02.660
Honestly, I don't find route unit
tests to be particularly useful.

69
00:05:02.660 --> 00:05:05.650
Unit tests are about testing
things in isolation.

70
00:05:05.650 --> 00:05:07.300
Routes aren't very isolated.

71
00:05:07.300 --> 00:05:10.750
So I don't usually end up messing
with these files too much and

72
00:05:10.750 --> 00:05:12.450
we won't touch them today.

73
00:05:12.450 --> 00:05:16.190
So that's what we did by
running those two commands.

74
00:05:16.190 --> 00:05:18.631
If we bring our browser
back into the picture.

75
00:05:23.403 --> 00:05:29.334
&gt;&gt; Mike: And now go to our console,
get rid of this sidebar here.

76
00:05:32.237 --> 00:05:34.000
&gt;&gt; Mike: And clear everything out.

77
00:05:34.000 --> 00:05:36.420
So now if I go to the root
of the application,

78
00:05:36.420 --> 00:05:39.950
I'll see what we've always been seeing and
no errors.

79
00:05:39.950 --> 00:05:44.930
If I go to /login, no errors.

80
00:05:44.930 --> 00:05:50.150
If I just type some random gibberish up
here, I get my unrecognized URL error.

81
00:05:50.150 --> 00:05:54.867
So we see an indication that now
the framework's ready to handle those

82
00:05:54.867 --> 00:05:56.880
UTLs in a particular way.

83
00:05:56.880 --> 00:06:01.876
So, what I'm gonna do next
is go to my application HBS.

84
00:06:08.011 --> 00:06:13.120
&gt;&gt; Mike: I'm gonna grab all of this
content, and I only want the chat UI

85
00:06:13.120 --> 00:06:19.131
to show up when we go to /teams, or
something that begins with /teams.

86
00:06:19.131 --> 00:06:23.266
So I'm gonna cut that out,
I wanna replace it with outlet,

87
00:06:23.266 --> 00:06:26.007
so that child's content is rendered.

88
00:06:29.501 --> 00:06:34.011
&gt;&gt; Mike: We'll go to teams HBS,
that's app/templates/teamshbs, and

89
00:06:34.011 --> 00:06:35.546
I'll paste it there.

90
00:06:38.126 --> 00:06:45.242
&gt;&gt; Mike: If I go to the root of our app,
we see nothing, and we should see nothing.

91
00:06:45.242 --> 00:06:50.109
If I go to /teams, I see my chat UI.

92
00:06:50.109 --> 00:06:55.837
And what this means is, now this thing
that's on the screen will only show up for

93
00:06:55.837 --> 00:06:59.910
certain URLs for our app, certain paths.

94
00:06:59.910 --> 00:07:04.270
So to get the content for
the login screen, we're going to go to

95
00:07:04.270 --> 00:07:09.400
the starter files and find login.html.

96
00:07:09.400 --> 00:07:16.140
You should see something that's got like
a sign-in button, a list of users, etc.

97
00:07:16.140 --> 00:07:19.370
We're gonna just grab this, copy it, and

98
00:07:19.370 --> 00:07:25.870
go to app templates login hbs, and
we're gonna paste that content in there.

99
00:07:25.870 --> 00:07:31.210
So now we should be able to go to,
obviously we go to /teams and we see this.

100
00:07:31.210 --> 00:07:36.342
We should go to /login, and
we should see something like this, right?

101
00:07:36.342 --> 00:07:39.493
A drop down where you can pick a user and
then sign in.

