WEBVTT

1
00:00:00.230 --> 00:00:04.472
&gt;&gt; Mike North: Let's try to drive
some data from our templates.

2
00:00:04.472 --> 00:00:08.908
Sorry, drive some data from our
routes into our templates and

3
00:00:08.908 --> 00:00:11.570
then we can call this step complete.

4
00:00:11.570 --> 00:00:13.460
There is a lot of data in this project and

5
00:00:13.460 --> 00:00:18.220
it's in the db.json file,
it's a top level file of the project.

6
00:00:21.620 --> 00:00:22.771
Who prints anything anymore?

7
00:00:24.213 --> 00:00:28.648
&gt;&gt; Mike North: Okay, so you can see this
is a very, a nice flat organization of

8
00:00:28.648 --> 00:00:33.104
JSON where we've got messages,
channels, users and teams.

9
00:00:33.104 --> 00:00:35.952
What I want you to do is just
grab a couple of these teams.

10
00:00:35.952 --> 00:00:39.380
I don't really care how many.

11
00:00:39.380 --> 00:00:44.420
Copy them to your clipboard and
then go to your team's route.

12
00:00:46.640 --> 00:00:48.238
And we're just gonna
toss these into an array.

13
00:00:48.238 --> 00:00:55.159
All teams,
&gt;&gt; Mike North: There we go.

14
00:00:55.159 --> 00:00:58.534
So we've got three of them in there,
and we can close it up,

15
00:00:58.534 --> 00:01:01.720
cuz I don't really care what's
in there at the moment.

16
00:01:02.920 --> 00:01:06.131
Now the time has come for
us to use our model hook.

17
00:01:06.131 --> 00:01:09.672
And this is how we could typically go and

18
00:01:09.672 --> 00:01:15.940
fetch some data like use either ajax or
fetch or something else.

19
00:01:15.940 --> 00:01:18.634
And retrieve that data and

20
00:01:18.634 --> 00:01:23.903
then make it available in
this route's template.

21
00:01:23.903 --> 00:01:30.200
Anything your model hook returns will be
available in your template for easy use.

22
00:01:30.200 --> 00:01:35.080
Just call this.model in the template and
you'll get whatever this returns.

23
00:01:35.080 --> 00:01:38.820
And if this returns a promise, you'll
get whatever that promise resolves to.

24
00:01:38.820 --> 00:01:40.700
So it's another a sync function.

25
00:01:44.603 --> 00:01:50.652
&gt;&gt; Mike North: And for
now we're just gonna return all teams.

26
00:01:50.652 --> 00:01:51.700
And we can save.

27
00:01:53.190 --> 00:01:57.112
Let's go and consume this data, teams.hbs.

28
00:01:57.112 --> 00:02:01.868
So the team selector,
that's what contains all of these

29
00:02:01.868 --> 00:02:06.140
little buttons to switch
from one team to another.

30
00:02:06.140 --> 00:02:09.970
We're gonna have to pass this
data into the team selector.

31
00:02:09.970 --> 00:02:12.860
We know how to do this, args, right?

32
00:02:12.860 --> 00:02:18.576
So we'll just say, oops,
teams = this.model.

33
00:02:20.210 --> 00:02:25.411
&gt;&gt; Mike North: By the way, if we wanted to
debug this just to make sure everything's

34
00:02:25.411 --> 00:02:30.290
copacetic at this point,
you could also do log, this.model.

35
00:02:30.290 --> 00:02:32.200
And it effectively is a console log.

36
00:02:32.200 --> 00:02:33.980
There it is down here.

37
00:02:33.980 --> 00:02:38.520
Right, there's that the array that
we're returning this console log, and

38
00:02:38.520 --> 00:02:43.760
then there's also a debugger here,
just like in JavaScript.

39
00:02:43.760 --> 00:02:48.830
And here we would do, following these
instructions we could do like context.

40
00:02:51.130 --> 00:02:53.580
Hey, there's model, and there's our array.

41
00:02:53.580 --> 00:02:55.070
So we can stop at this break point.

42
00:02:55.070 --> 00:02:59.672
And if things are not looking right and
you're tracking things down,

43
00:02:59.672 --> 00:03:04.664
this is a nice way to sorta search for
the problem and bisect problem areas and

44
00:03:04.664 --> 00:03:09.180
figure out whether things have
made it into templates or not.

45
00:03:09.180 --> 00:03:12.430
Everything looks good based
on those two little probes.

46
00:03:12.430 --> 00:03:16.290
So let's turn our attention
to the team selector.

47
00:03:16.290 --> 00:03:19.662
Using my handy dandy fiesco extension,

48
00:03:19.662 --> 00:03:25.130
I can just click on this and
it will take me to TeamSelector.hbs.

49
00:03:25.130 --> 00:03:30.244
And what I wanna do is,
these two look like the two buttons here,

50
00:03:30.244 --> 00:03:36.520
and this, the add-team-button,
that's probably this little plus sign.

51
00:03:36.520 --> 00:03:40.262
We'll leave that alone and
I wanna remove the hard-coded teams.

52
00:03:40.262 --> 00:03:45.109
And I wanna replace them with something
that's based on the data that's been

53
00:03:45.109 --> 00:03:46.760
passed to this template.

54
00:03:47.830 --> 00:03:51.090
So I'll get rid of the Microsoft
one cuz we only need one

55
00:03:51.090 --> 00:03:52.570
in order to build a loop around it.

56
00:03:52.570 --> 00:03:57.360
And this is where we're going
to encounter the each helper.

57
00:03:57.360 --> 00:03:59.939
So this is like a for
loop in your handle bars.

58
00:04:00.940 --> 00:04:05.570
So we can say, each teams as team.

59
00:04:06.750 --> 00:04:11.190
And the way I think about this,
it's almost like array.forEach.

60
00:04:11.190 --> 00:04:17.150
Where this is a callback that is passed
to your forEach function, right?

61
00:04:17.150 --> 00:04:21.668
You pass a function to forEach, that's
given an argument and it's invoked for

62
00:04:21.668 --> 00:04:23.430
every item in the collection.

63
00:04:23.430 --> 00:04:30.047
The reason I think about that is,
&gt;&gt; Mike North: That team,

64
00:04:30.047 --> 00:04:33.570
is only valid in this scope.

65
00:04:33.570 --> 00:04:38.376
I think of it as a call back
because there is in fact a closure

66
00:04:38.376 --> 00:04:40.840
that is at work here, right?

67
00:04:40.840 --> 00:04:45.586
So this is the third type
of reference to a variable

68
00:04:45.586 --> 00:04:49.040
that you will find in templates.

69
00:04:49.040 --> 00:04:53.590
The first at that means it's
an arg something that's passed in.

70
00:04:54.630 --> 00:04:57.570
The second was this dot something.

71
00:04:57.570 --> 00:05:01.560
That's how we know it lives
on the component, right?

72
00:05:01.560 --> 00:05:06.330
And then there's third one where
we just have team, that we know

73
00:05:06.330 --> 00:05:11.230
is happening because you're inside
something that's provided a limited and

74
00:05:11.230 --> 00:05:14.850
local scope,
where that is a valid thing to use.

75
00:05:14.850 --> 00:05:19.960
But there are three different ways,
three different things and

76
00:05:19.960 --> 00:05:22.360
now they finally have
three different syntaxes.

77
00:05:22.360 --> 00:05:25.000
So we can disambiguate between them.

78
00:05:25.000 --> 00:05:29.360
So let's see what a team looks like,
thankfully, I actually lost it.

79
00:05:29.360 --> 00:05:31.560
We can get it back, though.

80
00:05:31.560 --> 00:05:36.370
Log teams,
I wanna see what a team looks like.

81
00:05:36.370 --> 00:05:42.230
So it has an ID, an icon URL,
a name, and an order.

82
00:05:42.230 --> 00:05:44.860
I'm not gonna read too
much about order here.

83
00:05:44.860 --> 00:05:48.790
ID seems important,
this looks like a team ID.

84
00:05:48.790 --> 00:05:52.420
I should probably put the ID there.

85
00:05:52.420 --> 00:05:57.922
Something like that,
the link we've gotta obviously

86
00:05:57.922 --> 00:06:03.430
replace that for
reasons we talked about previously.

87
00:06:03.430 --> 00:06:10.700
So we're gonna link to the teams.team.

88
00:06:10.700 --> 00:06:14.164
So it's like the teams.hbs for
LinkedIn in and

89
00:06:14.164 --> 00:06:17.200
we're gonna say the model is the team ID.

90
00:06:22.230 --> 00:06:27.710
&gt;&gt; Mike North: Model is what's used
to fill in the blank in that URL.

91
00:06:27.710 --> 00:06:32.570
So if we go back to a router,
we have this team ID here.

92
00:06:32.570 --> 00:06:36.230
So when you say I'm providing you a model,
it's the ID of the team.

93
00:06:36.230 --> 00:06:38.870
You're filling in that team ID blank.

94
00:06:38.870 --> 00:06:42.447
Without that, this URL cannot be built.

95
00:06:46.229 --> 00:06:50.060
&gt;&gt; Mike North: Finally,
we've got an image here.

96
00:06:50.060 --> 00:06:55.560
And we can replace that with team,
icon URL and

97
00:06:55.560 --> 00:07:01.310
alt text,
&gt;&gt; Mike North: Team name.

98
00:07:01.310 --> 00:07:05.018
Nothing else here looks team specific,

99
00:07:05.018 --> 00:07:09.280
just a bunch of styling,
let’s give it a try.

100
00:07:09.280 --> 00:07:13.961
Hey, there we go so we see a new team
pop up that was definitely not in

101
00:07:13.961 --> 00:07:16.730
the hard coded HTML that we were given.

102
00:07:16.730 --> 00:07:18.730
So we’re looping over this array.

103
00:07:18.730 --> 00:07:22.630
For each item in the array,
we’re creating a little bit of template.

104
00:07:22.630 --> 00:07:27.310
We’re using link 2 and passing it
the route we wish to send the user to,

105
00:07:27.310 --> 00:07:31.060
we're passing in a model so
that we can fill in the blank.

106
00:07:31.060 --> 00:07:32.860
Here's your team ID.

107
00:07:32.860 --> 00:07:38.372
And clicking on each of these, we won't
necessarily see changes in the UI,

108
00:07:38.372 --> 00:07:43.730
but in the URL at least the Li should
change to Ms and the Avengers and back.

109
00:07:46.340 --> 00:07:48.540
&gt;&gt; Mike North: We're not done yet.

110
00:07:48.540 --> 00:07:53.998
I mean, obviously there are improvements
we need to make in next steps,

111
00:07:53.998 --> 00:07:56.960
but the links are operating properly.

112
00:07:56.960 --> 00:08:03.820
And we have successfully passed some data
down from the routes to the templates.

113
00:08:03.820 --> 00:08:08.580
&gt;&gt; Speaker 2: What's the syntax for
routes with multiple models in them?

114
00:08:08.580 --> 00:08:09.415
&gt;&gt; Mike North: Models.

115
00:08:09.415 --> 00:08:13.737
&gt;&gt; [INAUDIBLE]
&gt;&gt; Mike North: Something like that,

116
00:08:13.737 --> 00:08:16.060
&gt;&gt; Mike North: Make sense?

117
00:08:16.060 --> 00:08:19.480
&gt;&gt; Speaker 3: So if you did models,
would you give it an array, or?

118
00:08:19.480 --> 00:08:25.200
&gt;&gt; Mike North: Yeah, this might even work.

119
00:08:25.200 --> 00:08:32.721
And it does,
&gt;&gt; Mike North: Team.ID, hm, interesting.

120
00:08:32.721 --> 00:08:37.700
Sorry, let me just check our sample data.

121
00:08:37.700 --> 00:08:41.252
Cuz I see it used to be LI,
but now it's LlnkedIn.

122
00:08:41.252 --> 00:08:44.370
&gt;&gt; [INAUDIBLE]
&gt;&gt; Mike North: Good, so that checks out.

123
00:08:44.370 --> 00:08:50.980
There you go, array helper and
then the ordered elements of the array.

