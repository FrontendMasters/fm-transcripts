WEBVTT

1
00:00:00.090 --> 00:00:05.280
&gt;&gt; Mike North: So the next thing I wanna
do is deal with the idea of a link.

2
00:00:05.280 --> 00:00:10.063
So who can tell me what happens if
I create just an A tag the way you

3
00:00:10.063 --> 00:00:12.784
would create a link in static HTML?

4
00:00:12.784 --> 00:00:16.673
If I were to create that and
click on that, what am I telling a browser

5
00:00:16.673 --> 00:00:21.619
to do,
&gt;&gt; Mike North: In static HTML land?

6
00:00:24.560 --> 00:00:25.450
&gt;&gt; Speaker 2: Navigate.

7
00:00:25.450 --> 00:00:28.340
&gt;&gt; Mike North: Navigate,
that's a full page load,

8
00:00:28.340 --> 00:00:31.620
a full document request that
you make to another page.

9
00:00:33.730 --> 00:00:35.980
And that's not what we
want in a single page app.

10
00:00:35.980 --> 00:00:37.800
We want a native-like experience.

11
00:00:37.800 --> 00:00:42.060
The whole point of a single page app
is you load once at the beginning and

12
00:00:42.060 --> 00:00:47.060
then we create the illusion of page
loads by tearing down some HTML and

13
00:00:47.060 --> 00:00:48.650
replacing it with some other stuff.

14
00:00:48.650 --> 00:00:51.710
And we get this nice opportunity
to have a loading spinner or

15
00:00:51.710 --> 00:00:55.110
something like that while we wait
to go from point A to point B.

16
00:00:55.110 --> 00:01:01.060
So we can't just have a regular
link like we would have if we were

17
00:01:01.060 --> 00:01:05.770
using HTML with no Java Script,
multiple very static pages.

18
00:01:06.840 --> 00:01:12.430
So Amber gives us a tool for this and
what we're gonna do as an example for

19
00:01:12.430 --> 00:01:17.726
a link is hook up this
logout button that's in,

20
00:01:17.726 --> 00:01:22.890
if you go to slash teams and look at
the bottom of the sidebar in the chat UI,

21
00:01:22.890 --> 00:01:26.980
here is this log out button and
currently clicking it does nothing.

22
00:01:26.980 --> 00:01:32.130
But it's pretty reasonable to
assume that if you log out

23
00:01:32.130 --> 00:01:35.870
maybe one should find themselves
at the log in screen, right?

24
00:01:35.870 --> 00:01:40.360
They're not authenticated anymore, they
sorta have been exited out of the app.

25
00:01:41.470 --> 00:01:45.940
So,
&gt;&gt; Mike North: Let's make this change.

26
00:01:45.940 --> 00:01:52.518
We're going to go to
app/templates/components,

27
00:01:52.518 --> 00:01:55.600
and the team-sidebar.

28
00:01:55.600 --> 00:01:58.800
That's where this button exists, and we're
gonna see if we can find it at the bottom.

29
00:02:00.550 --> 00:02:05.170
There it is, Logout, and it's a button so
we're gonna change this.

30
00:02:05.170 --> 00:02:10.127
We don't wanna alter the the resultant
HTML, but we're gonna change this so

31
00:02:10.127 --> 00:02:13.730
that it uses Ember's routing mechanism.

32
00:02:13.730 --> 00:02:18.179
And we'll do this by changing the button
to a component that comes with Ember

33
00:02:18.179 --> 00:02:18.815
for free.

34
00:02:21.341 --> 00:02:26.539
&gt;&gt; Mike North: And it's called link two,
and if we were to save this,

35
00:02:26.539 --> 00:02:31.173
we've got problems and
the error is telling us we

36
00:02:31.173 --> 00:02:35.900
must provide at least
one of the following.

37
00:02:35.900 --> 00:02:39.820
Route model or models or a query.

38
00:02:39.820 --> 00:02:42.930
So this is telling us that, okay,
you've attempted to create a link, but

39
00:02:42.930 --> 00:02:46.900
you haven't told me what the destination
is, it needs more information.

40
00:02:46.900 --> 00:02:49.350
So we'll give it that information.

41
00:02:49.350 --> 00:02:52.730
What's the name of the page
with the sign in screen,

42
00:02:52.730 --> 00:02:54.130
with the route that we just created?

43
00:02:55.290 --> 00:02:56.470
&gt;&gt; Speaker 3: Log in.
&gt;&gt; Mike North: Log in, great.

44
00:02:57.860 --> 00:03:00.700
Login so that's where we're going.

45
00:03:00.700 --> 00:03:07.120
And we can leave this class string as is,
we don't have to touch it.

46
00:03:07.120 --> 00:03:10.480
This is one of the great things
about glymour components.

47
00:03:10.480 --> 00:03:16.560
This is very clearly something that
we're passing to the component for use.

48
00:03:16.560 --> 00:03:21.080
It's data that's gonna be used somewhere,
HTML attributes like this.

49
00:03:21.080 --> 00:03:25.190
They can sorta be passed
through very naturally.

50
00:03:25.190 --> 00:03:28.950
So you can treat it like you
would treat a div or spam.

51
00:03:30.240 --> 00:03:34.398
So we've got route login and
if we save that, no more error message.

52
00:03:34.398 --> 00:03:39.512
But if I inspect this thing I can
see that in this nice tool tip here

53
00:03:39.512 --> 00:03:45.226
it's kinda hard to see but there's
an a tag it's not a button anymore.

54
00:03:45.226 --> 00:03:50.605
Well, we can customize this a little
bit by just saying tagname button and

55
00:03:50.605 --> 00:03:56.094
now we don't get the underlining behavior
and if we hover over that thing.

56
00:03:56.094 --> 00:04:01.415
Now we can see that it is in
fact a button, so that's great.

57
00:04:06.347 --> 00:04:09.495
&gt;&gt; Mike North: And let's just
make sure our tests are passing.

58
00:04:11.977 --> 00:04:16.121
&gt;&gt; Mike North: They are, so
this is the end of Step5,

59
00:04:16.121 --> 00:04:20.649
we have added routing to our application.

