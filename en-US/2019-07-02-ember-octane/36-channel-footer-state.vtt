WEBVTT

1
00:00:00.070 --> 00:00:03.740
&gt;&gt; Mike North: Let's look at the Channel
Footer component and see what we need to

2
00:00:03.740 --> 00:00:07.770
do in order to take advantage of
this action that we've just created.

3
00:00:07.770 --> 00:00:12.265
So we know createMessage is
there waiting for us, and

4
00:00:12.265 --> 00:00:18.040
channel-footer is still
a template-only component.

5
00:00:18.040 --> 00:00:21.930
What we can do is we can
add an action in there.

6
00:00:21.930 --> 00:00:26.390
Even though it's a presentation component
we can add an action that just serves to

7
00:00:26.390 --> 00:00:33.380
sort of take us from receiving a DOM event
to working with the value in that input.

8
00:00:33.380 --> 00:00:37.440
In my mind this does not
change this from being

9
00:00:37.440 --> 00:00:42.500
a presentation component to a smart
component, or a container component.

10
00:00:42.500 --> 00:00:43.900
So let's go ahead and do that.

11
00:00:43.900 --> 00:00:48.638
We're gonna run, being very careful not to
overwrite our template, ember g component,

12
00:00:52.026 --> 00:00:54.371
&gt;&gt; Mike North: channel-footer.

13
00:01:00.369 --> 00:01:01.400
&gt;&gt; Mike North: I'm not overriding it.

14
00:01:03.840 --> 00:01:09.790
All right, so now let's look at
our channel footer HBS file.

15
00:01:09.790 --> 00:01:15.609
And we wanna look for this,
there's our send button,

16
00:01:15.609 --> 00:01:20.924
there's our input field
that's this down here,

17
00:01:20.924 --> 00:01:24.227
and ultimately we have a form.

18
00:01:24.227 --> 00:01:29.985
So it seems like we're back into the form
on submit territory, familiar ground.

19
00:01:29.985 --> 00:01:35.617
On 'submit' this handleSubmit,

20
00:01:35.617 --> 00:01:39.190
something like that.

21
00:01:39.190 --> 00:01:44.280
Additionally, I want to be able to
keep track of the current value

22
00:01:44.280 --> 00:01:49.370
in that input so that we can know whether
to disable the button or enable it.

23
00:01:49.370 --> 00:01:53.710
And remember our initial approach
with the login form where we were

24
00:01:53.710 --> 00:01:57.490
on the Submit action, that was
the first time we were ever looking for

25
00:01:57.490 --> 00:01:59.640
what's the currently selected user?

26
00:01:59.640 --> 00:02:04.940
That didn't give us a nice way of
having disabled versus enabled state.

27
00:02:04.940 --> 00:02:12.020
We need some component state that kind of
keeps up to date with what's going on.

28
00:02:12.020 --> 00:02:16.915
It should be up here on the input, this

29
00:02:16.915 --> 00:02:23.050
updateMessageBody.

30
00:02:23.050 --> 00:02:26.141
And I expect all sorts of errors
to be thrown because we have not

31
00:02:26.141 --> 00:02:27.691
created these functions yet.

32
00:02:30.030 --> 00:02:37.052
&gt;&gt; Mike North: All right, and we can give
it a body as well, value = this body.

33
00:02:40.074 --> 00:02:45.230
&gt;&gt; Mike North: So what we'll need to do
now is fill in, in the JavaScript module,

34
00:02:45.230 --> 00:02:49.850
this very limited capability
that we're adding, right?

35
00:02:49.850 --> 00:02:55.778
This is only very local stuff-
&gt;&gt; Speaker 2: There's a typo, value.

36
00:02:55.778 --> 00:02:57.223
&gt;&gt; Mike North: Value, thank you.

37
00:02:58.650 --> 00:03:04.437
&gt;&gt; Mike North: Good catch, so we'll go
to the channel footer JS module and

38
00:03:04.437 --> 00:03:10.476
we're gonna give ourselves
a body that's gonna be tracked.

39
00:03:16.652 --> 00:03:18.280
&gt;&gt; Mike North: We'll
initialize it to an empty

40
00:03:18.280 --> 00:03:21.063
string,
&gt;&gt; Mike North: And

41
00:03:21.063 --> 00:03:24.981
we're gonna give ourselves
an action called updateMessageBody,

42
00:03:28.121 --> 00:03:30.525
&gt;&gt; Mike North: And this is gonna receive

43
00:03:30.525 --> 00:03:35.103
an event, and
we're going to say this.body =

44
00:03:35.103 --> 00:03:42.730
evt.target.value
&gt;&gt; Mike North: And

45
00:03:42.730 --> 00:03:46.442
we can give ourselves a disabled getter.

46
00:03:49.309 --> 00:03:54.724
&gt;&gt; Mike North: So we'll say that this
form should be disabled if what?

47
00:03:57.295 --> 00:03:58.370
&gt;&gt; Speaker 3: Body is empty string.

48
00:03:58.370 --> 00:04:00.410
&gt;&gt; Mike North: Body is an empty string,
perfect.

49
00:04:00.410 --> 00:04:05.170
So this body is an empty string.

50
00:04:05.170 --> 00:04:07.278
In fact,
I'll say if it's any faulty value.

51
00:04:09.618 --> 00:04:12.025
&gt;&gt; Mike North: So there you go,
we have is disabled.

52
00:04:12.025 --> 00:04:14.395
This is enough that we can kind
of test things out on this end,

53
00:04:14.395 --> 00:04:18.035
where we can replace this
always disabled thing and

54
00:04:18.035 --> 00:04:23.455
the always gray colored with something
that is conditionally applied.

55
00:04:23.455 --> 00:04:30.070
So disabled is this is disabled, and that
will take care of the disabled attribute.

56
00:04:31.110 --> 00:04:36.680
And that kind of looks
the background coloration.

57
00:04:37.940 --> 00:04:44.501
So let's replace that with if
this.isDisabled you are grey,

58
00:04:44.501 --> 00:04:51.297
otherwise,
&gt;&gt; Mike North: Something like that.

59
00:04:51.297 --> 00:04:53.082
All right, let's try typing in this thing.

60
00:04:55.168 --> 00:04:57.938
&gt;&gt; [SOUND]
&gt;&gt; Speaker 4: You need to try it

61
00:04:57.938 --> 00:04:59.090
in the body.

62
00:04:59.090 --> 00:05:00.520
&gt;&gt; Mike North: I need a?

63
00:05:00.520 --> 00:05:04.674
&gt;&gt; Speaker 4: I don't think you have
the attract over your body variable?

64
00:05:04.674 --> 00:05:06.416
&gt;&gt; Mike North: Yes, good point.

65
00:05:09.460 --> 00:05:12.780
&gt;&gt; Mike North: Good catch, there we go.

66
00:05:12.780 --> 00:05:18.340
All right, the turn teal is still
kind of grayed out, or opacity.

67
00:05:18.340 --> 00:05:21.844
Let's only dim it to 50% if it's disabled.

68
00:05:24.109 --> 00:05:25.390
&gt;&gt; Mike North: There we go.

69
00:05:25.390 --> 00:05:30.670
So this to me looks like our very
limited state is starting to work, and

70
00:05:30.670 --> 00:05:37.310
if we look at our JS module that is very,
very, very simple.

71
00:05:37.310 --> 00:05:41.710
This is definitely
a presentation-focused component.

72
00:05:41.710 --> 00:05:46.210
And don't be like this is a gray area,
right?

73
00:05:46.210 --> 00:05:49.220
This is very heavy on
the presentation side, but

74
00:05:49.220 --> 00:05:53.760
you don't need to demand that everything
be a totally stateless component.

75
00:05:53.760 --> 00:05:57.613
Even if you can get things to
where you're either 90% or

76
00:05:57.613 --> 00:06:02.680
greater in one direction or another, like
90% or more towards the presentation side,

77
00:06:02.680 --> 00:06:05.330
you already got a lot of the benefits
from this kind of architecture.

78
00:06:07.480 --> 00:06:10.590
&gt;&gt; Speaker 5: Using those curly
braces inside the string,

79
00:06:10.590 --> 00:06:12.630
is that a new Octane feature?

80
00:06:12.630 --> 00:06:16.300
I remember having to use Concat and
some other things,

81
00:06:16.300 --> 00:06:19.450
you're able to put that there,
is that because it's angle bracketed?

82
00:06:19.450 --> 00:06:22.790
&gt;&gt; Mike North: Nope, okay,

83
00:06:22.790 --> 00:06:26.550
here's why it looks a little different
than what you're used to seeing.

84
00:06:26.550 --> 00:06:32.750
It has to do with the fact that we're
not in a handlebars expression already.

85
00:06:32.750 --> 00:06:34.190
&gt;&gt; Speaker 5: Okay.

86
00:06:34.190 --> 00:06:36.540
&gt;&gt; Mike North: Right,
cuz we're just in class equals.

87
00:06:36.540 --> 00:06:39.580
Now, this is not a component either way,
it's just a button.

88
00:06:40.830 --> 00:06:44.580
I will say though, the fact that you've
seen me do it a couple of times, that is

89
00:06:44.580 --> 00:06:50.890
a result of the fact that angle bracket
component syntax where we're doing,

90
00:06:50.890 --> 00:06:55.150
just in case people don't have a reference
of what old stuff looked like before.

91
00:06:55.150 --> 00:06:59.620
But when we invoke,
when we create components like this

92
00:06:59.620 --> 00:07:03.740
we're not already in a handlebars
expression with the double curlies.

93
00:07:03.740 --> 00:07:09.070
The old way of invoking components and
placing them there, that was handlebars.

94
00:07:09.070 --> 00:07:14.130
So now this opens the door for some more
flexible use, where you don't have to

95
00:07:14.130 --> 00:07:19.990
make everything an expression,
you can just drop handlebars in a class.

96
00:07:19.990 --> 00:07:22.043
Yep, good observation for sure.

