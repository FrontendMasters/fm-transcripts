WEBVTT

1
00:00:00.050 --> 00:00:03.030
&gt;&gt; Mike North: Let's propagate
this a little bit more and

2
00:00:03.030 --> 00:00:04.900
then we can call this step complete.

3
00:00:04.900 --> 00:00:11.565
So, I'm gonna go to our teams route and
I wanna export this array.

4
00:00:16.769 --> 00:00:19.769
&gt;&gt; Mike North: And
that'll let me in the team route.

5
00:00:22.739 --> 00:00:27.405
&gt;&gt; Mike North: And the model hook say,
&gt;&gt; Mike North: Do something with

6
00:00:27.405 --> 00:00:28.250
this array.

7
00:00:28.250 --> 00:00:31.010
That place holder in the URL, the team ID,

8
00:00:31.010 --> 00:00:34.242
we receive that as an argument
in this model hook.

9
00:00:36.114 --> 00:00:40.611
&gt;&gt; Mike North: So this string here,
that corresponds to in router.js,

10
00:00:40.611 --> 00:00:44.465
this string right here,
whatever you call this,

11
00:00:44.465 --> 00:00:50.615
you're gonna receive an object with key
value pairs of any dynamic segments and

12
00:00:50.615 --> 00:00:56.335
there are corresponding things that
filled those segments from the URL.

13
00:00:56.335 --> 00:01:00.174
So if we put a debugger in here,

14
00:01:00.174 --> 00:01:06.314
we should see teamId is,
&gt;&gt; Mike North: LinkedIn,

15
00:01:06.314 --> 00:01:09.760
it's coming from the URL, right?

16
00:01:09.760 --> 00:01:17.006
So now we can do ALL TEAMS, find team.

17
00:01:20.475 --> 00:01:25.329
&gt;&gt; Mike North: And I think if I recall,
we'll have to use double equals here,

18
00:01:25.329 --> 00:01:30.917
because the URL is always gonna give
you a string because it can't decide

19
00:01:30.917 --> 00:01:37.893
what's a number and what string, it's just
text, whereas our sample data has numbers.

20
00:01:39.016 --> 00:01:43.339
&gt;&gt; Mike North: And
now we should have a team model.

21
00:01:45.783 --> 00:01:51.820
&gt;&gt; Mike North: So
in team.hbs you do team=this.model.

22
00:01:51.820 --> 00:01:56.457
And now go into our sidebar,
&gt;&gt; Mike North: And

23
00:01:56.457 --> 00:01:58.662
let's just use the team's name.

24
00:02:02.272 --> 00:02:07.983
&gt;&gt; Mike North: All right let's try it out,
LinkedIn, Microsoft, Avengers.

25
00:02:07.983 --> 00:02:10.550
Kinda looks like we're changing
our side bar now, right?

26
00:02:10.550 --> 00:02:14.830
That data is changing as
we click from team to team,

27
00:02:14.830 --> 00:02:17.940
it's all URL driven state, right.

28
00:02:17.940 --> 00:02:22.418
We refresh on Avengers, the URL's the
same, it's all kinda trickling through and

29
00:02:22.418 --> 00:02:24.762
that app is brought
into the correct state.

30
00:02:26.493 --> 00:02:28.593
&gt;&gt; Mike North: Let's check
our test set real quick.

31
00:02:30.806 --> 00:02:33.801
&gt;&gt; Mike North: All right, let's see,

32
00:02:33.801 --> 00:02:39.085
element not found, when trying to log out.

33
00:02:39.085 --> 00:02:40.964
I know the problem here.

34
00:02:40.964 --> 00:02:44.178
And if we just repeated
the steps of this test.

35
00:02:46.216 --> 00:02:49.086
&gt;&gt; Mike North: If we repeated
the steps of this test manually,

36
00:02:49.086 --> 00:02:53.054
we'd very quickly notice that slash teams,
what is on that now?

37
00:03:00.110 --> 00:03:04.095
&gt;&gt; Mike North: It's this, so go to this
page and click the log out button,

38
00:03:04.095 --> 00:03:05.626
I don't see it there.

39
00:03:05.626 --> 00:03:09.073
So we're gonna have to go
to a particular team page.

40
00:03:09.073 --> 00:03:11.045
We can just hard code it for now.

41
00:03:12.983 --> 00:03:17.906
&gt;&gt; Mike North: And we'll have to assert
that we arrived there, or better yet

42
00:03:17.906 --> 00:03:22.700
we can assert that current
URL starts with slash teams.

43
00:03:22.700 --> 00:03:25.750
So that in the future when we're
starting to use real data,

44
00:03:25.750 --> 00:03:29.310
we don't want this to hang around for
long.

45
00:03:29.310 --> 00:03:35.050
That's a pretty explicit thing to be
in our data, or our test, rather.

46
00:03:36.680 --> 00:03:38.060
Let's check the test again.

47
00:03:38.060 --> 00:03:39.848
All right, a different one failing now.

48
00:03:39.848 --> 00:03:40.965
The team side bar.

49
00:03:45.790 --> 00:03:50.951
&gt;&gt; Mike North: So, what we can do here is
delete the usage that doesn't match up

50
00:03:50.951 --> 00:03:57.180
with the way we use this component and
apply our little sneaky magic.

51
00:03:57.180 --> 00:04:02.478
Replace,
&gt;&gt; Mike North: Any white space

52
00:04:02.478 --> 00:04:07.437
followed by any new line,
followed by any white space.

53
00:04:12.441 --> 00:04:15.880
&gt;&gt; Mike North: And then split by slash n.

54
00:04:20.223 --> 00:04:22.159
&gt;&gt; Mike North: Gotta do deep
equal because it's an array,

55
00:04:22.159 --> 00:04:23.527
let's see how this turns out.

56
00:04:25.359 --> 00:04:28.973
&gt;&gt; Mike North: Looks pretty reasonable for
what the sidebar should contain.

57
00:04:31.747 --> 00:04:36.795
&gt;&gt; Mike North: And we can put that here,
and we're good to go.

58
00:04:39.644 --> 00:04:44.979
&gt;&gt; Mike North: So, we have added just now,
data coming from the routing

59
00:04:44.979 --> 00:04:51.450
layer being available in each
route's template via this dot model.

60
00:04:51.450 --> 00:04:56.590
This is the way an app,
a normal ember app will typically work.

61
00:04:56.590 --> 00:05:02.260
And next what we're gonna do is replace
that hard coded array of teams,

62
00:05:02.260 --> 00:05:08.100
with real network calls to an API that's
been kind of running behind the scenes,

63
00:05:08.100 --> 00:05:09.490
ready for us to use this whole time.

