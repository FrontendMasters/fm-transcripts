WEBVTT

1
00:00:00.000 --> 00:00:02.880
The question was regarding whether or

2
00:00:02.880 --> 00:00:08.015
not we are grabbing the item from
local storage or not and we are not.

3
00:00:08.015 --> 00:00:10.616
We're just sending it at the moment,

4
00:00:10.616 --> 00:00:13.961
you can easily grab the item
from local storage.

5
00:00:13.961 --> 00:00:17.008
And you could do that in your plugin.

6
00:00:17.008 --> 00:00:21.848
It's not very useful in your plugin
because we're not really doing anything

7
00:00:21.848 --> 00:00:22.450
with it.

8
00:00:22.450 --> 00:00:26.937
The idea of a persistent state is to

9
00:00:26.937 --> 00:00:31.892
essentially grab information back so

10
00:00:31.892 --> 00:00:36.070
we can in the component itself,

11
00:00:36.070 --> 00:00:40.247
let's say in actions we can do,

12
00:00:40.247 --> 00:00:44.301
let's say yet initial state.

13
00:00:46.523 --> 00:00:52.301
And then you could do a local storage,
get item and

14
00:00:52.301 --> 00:00:58.778
then I think it was last service or
something like that.

15
00:00:58.778 --> 00:01:03.823
So you could grab it and
then you could do whatever you want with

16
00:01:03.823 --> 00:01:09.175
it's essentially a date object or
whatever you wanna do with it.

17
00:01:09.175 --> 00:01:17.604
And then you can set it to the mutation
which is update service date.

18
00:01:17.604 --> 00:01:20.653
So you could just do like this dot.

19
00:01:20.653 --> 00:01:23.578
I mean dispatch, commit,

20
00:01:23.578 --> 00:01:28.792
not dispatch commit,
updateServiceDate, and

21
00:01:28.792 --> 00:01:33.636
then you would pass in
like the payload time.

22
00:01:35.894 --> 00:01:40.515
Yeah, so we didn't do that in the code,
we didn't fetch from local storage

23
00:01:40.515 --> 00:01:44.870
we're just setting local storage,
but yeah, you can easily do that.

24
00:01:44.870 --> 00:01:49.814
&gt;&gt; What is the timeline for
before and after is it as if before

25
00:01:49.814 --> 00:01:54.861
method content is pasted at
the start of the action body and

26
00:01:54.861 --> 00:01:57.848
after content is based at the end or

27
00:01:57.848 --> 00:02:02.500
is it follow like in follow
the action like a promise.

28
00:02:02.500 --> 00:02:05.908
&gt;&gt; Doesn't follow
the action like a promise.

29
00:02:05.908 --> 00:02:08.663
I believe it follows
the action like a promise.

30
00:02:08.663 --> 00:02:13.365
So it's like the before which is
right before it gets dispatched.

31
00:02:13.365 --> 00:02:18.692
And then the after is when whatever
happens within the actions

32
00:02:18.692 --> 00:02:23.923
finishes right before it calls
commit to the next mutation.

33
00:02:23.923 --> 00:02:25.721
So that's the after.

34
00:02:25.721 --> 00:02:33.368
So once it does everything that's sort
of the timeline between before and after

