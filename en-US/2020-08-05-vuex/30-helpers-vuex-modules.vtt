WEBVTT

1
00:00:00.000 --> 00:00:04.924
The other thing that I wanted to
talk about since we didn't really

2
00:00:04.924 --> 00:00:08.324
touch this was how exactly
to use map state and

3
00:00:08.324 --> 00:00:12.103
the specific Vuex helper
map state with a module.

4
00:00:12.103 --> 00:00:15.972
And so with that,
what you're doing is you're essentially,

5
00:00:15.972 --> 00:00:18.018
you get the global state object.

6
00:00:18.018 --> 00:00:23.541
So this is new because previously
we had map state as an array.

7
00:00:23.541 --> 00:00:28.446
And now we have map state as sort of this,
this object that takes in an object,

8
00:00:28.446 --> 00:00:31.846
we call it,
whatever we want that state to be called.

9
00:00:31.846 --> 00:00:34.770
In this case,
we want it to be called stock.

10
00:00:34.770 --> 00:00:37.176
And then we're grabbing
the state object and

11
00:00:37.176 --> 00:00:40.221
then we're grabbing specifically
what we need from it.

12
00:00:40.221 --> 00:00:42.831
So if you look at the helper up here,

13
00:00:42.831 --> 00:00:46.230
you'll see that map state
takes in an object.

14
00:00:46.230 --> 00:00:52.263
You can name it whatever you want a and b,
and this is available as on the context.

15
00:00:52.263 --> 00:00:57.560
So this .a is a state and this .b is
also a state within that component.

16
00:00:57.560 --> 00:01:01.439
And what you're doing is you're
grabbing the state object,

17
00:01:01.439 --> 00:01:04.499
you are accessing
the specific module you need,

18
00:01:04.499 --> 00:01:08.762
and then you're accessing the name
of whatever you need from that.

19
00:01:08.762 --> 00:01:16.166
So states.machine or inventory.whatever
the name or the thing is.

20
00:01:16.166 --> 00:01:22.794
And so that's how you use Vuex helpers
with state in a modularized fashion.

21
00:01:22.794 --> 00:01:30.288
And, That allows you to,
it's really nice because you

22
00:01:30.288 --> 00:01:35.560
get to modularize your code rather
than have it sort of live separately.

23
00:01:35.560 --> 00:01:40.500
The other piece too using
Vuex helpers within a module

24
00:01:40.500 --> 00:01:43.463
fashion cuz we looked at using,

25
00:01:43.463 --> 00:01:48.313
accessing the globalized
store with Vuex helpers.

26
00:01:48.313 --> 00:01:53.492
But now we want to grab
specific modularized actions.

27
00:01:53.492 --> 00:01:54.680
So how do we do that?

28
00:01:54.680 --> 00:01:58.945
It's slightly different from how you
would do map state cuz map state takes in

29
00:01:58.945 --> 00:02:02.040
an object in this case map
actions will take in an array.

30
00:02:02.040 --> 00:02:07.496
And what you'll do here is
you will specifically access

31
00:02:07.496 --> 00:02:12.381
it by doing the module name
slash the action name.

32
00:02:12.381 --> 00:02:17.098
And of course, again from the previous
exercise I showed you map actions

33
00:02:17.098 --> 00:02:20.589
also takes in an object you
can also create an object.

34
00:02:20.589 --> 00:02:25.534
Passing in an object will allow
you to change the name of certain

35
00:02:25.534 --> 00:02:29.748
things which can be really
useful in many instances.

36
00:02:29.748 --> 00:02:34.975
So here we have just to show you a one to
one, we have our store with the various

37
00:02:34.975 --> 00:02:39.648
actions and then here it is what it
looks like in a component itself.

38
00:02:39.648 --> 00:02:45.094
The thing that's really nice about Vuex,
is it also gives you a lot of helpers.

39
00:02:45.094 --> 00:02:47.743
So not only does it give
you the Vuex helpers,

40
00:02:47.743 --> 00:02:50.614
it gives you this concept
of namespace helpers.

41
00:02:50.614 --> 00:02:55.513
So you might notice that when you access
let's go to state because that's a fairly

42
00:02:55.513 --> 00:02:57.220
straightforward example.

43
00:02:57.220 --> 00:03:01.860
If we look at state every time you
want to access state in that module,

44
00:03:01.860 --> 00:03:07.540
let's say you're always accessing machine
or you're always accessing inventory

45
00:03:07.540 --> 00:03:13.306
in a specific component, you have to do
state.module name.whatever the state is.

46
00:03:13.306 --> 00:03:15.909
So state.machine.machineNames.

47
00:03:15.909 --> 00:03:18.062
State.machine.lastService.

48
00:03:18.062 --> 00:03:22.892
And the more state pieces you're accessing
from the store, the more complex that

49
00:03:22.892 --> 00:03:27.305
becomes because it's a lot of extra
code to always write state.machine.

50
00:03:27.305 --> 00:03:30.639
It's sort of similar to writing
this.dollarstore all the time.

51
00:03:30.639 --> 00:03:31.756
We don't want to do that.

52
00:03:31.756 --> 00:03:37.018
So we can actually make it much simpler,
by using this helper that Vuex gives us.

53
00:03:37.018 --> 00:03:40.020
The helpers called create
namespace helpers.

54
00:03:40.020 --> 00:03:45.080
And create namespace helpers allows
you to pass in the module name,

55
00:03:45.080 --> 00:03:51.118
and then you automatically can use object
destructuring to grab the map state and

56
00:03:51.118 --> 00:03:57.458
map actions with the understanding that
you want a specifically namespace module.

57
00:03:57.458 --> 00:04:02.358
So for example, here I am only
accessing inventory, let's say,

58
00:04:02.358 --> 00:04:06.572
and I don't really care about machine or
anything else.

59
00:04:06.572 --> 00:04:12.703
So I can do create namespace helpers
pass in inventory as a string to it.

60
00:04:12.703 --> 00:04:14.485
So it's the name of that module.

61
00:04:14.485 --> 00:04:17.537
And then I can grab map state and
map actions appropriately.

62
00:04:17.537 --> 00:04:22.403
And now, with this, I can actually
do state.stock or state.supply,

63
00:04:22.403 --> 00:04:27.612
which I forget which we called it,
without having to do the dot module check.

64
00:04:27.612 --> 00:04:29.706
So I don't have to do state.inventory..

65
00:04:29.706 --> 00:04:33.027
I can just directly do
state.to grab the object.

66
00:04:33.027 --> 00:04:38.911
And similarly for actions, I don't have to
do the inventory/ fetch from inventory,

67
00:04:38.911 --> 00:04:41.340
I can just do fetch from inventory.

68
00:04:41.340 --> 00:04:46.236
And so this is a nice way of doing things
without you having to repeat yourself

69
00:04:46.236 --> 00:04:47.626
over and over again.

