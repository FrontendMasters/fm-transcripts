WEBVTT

1
00:00:00.000 --> 00:00:05.749
So I'll show you an example of
what it looks like in Vue first.

2
00:00:05.749 --> 00:00:08.357
So let's assume you have a Vue instance.

3
00:00:08.357 --> 00:00:14.425
So this is a Vue instance not using
single file components, just for clarity.

4
00:00:14.425 --> 00:00:18.048
So here is a Vue instance,
we have this concept of data.

5
00:00:18.048 --> 00:00:20.396
So data has a supply of 40.

6
00:00:20.396 --> 00:00:24.271
So that's whatever item count that is.

7
00:00:24.271 --> 00:00:27.662
And then you have a count like
a dispense and a restock,

8
00:00:27.662 --> 00:00:30.555
which is sort of an increment and
a decrement.

9
00:00:30.555 --> 00:00:35.093
In this case, the increment is not
incrementing by 1, it's just incrementing

10
00:00:35.093 --> 00:00:39.713
to 40, which is the full number, and
then dispense is just decrementing by 1.

11
00:00:39.713 --> 00:00:41.881
So that's the methods associator.

12
00:00:41.881 --> 00:00:46.307
So in Vue without Vuex,
you have states in data, and

13
00:00:46.307 --> 00:00:52.456
then you have methods which is where
you interact with your data object.

14
00:00:52.456 --> 00:00:55.755
And then Vue sort of reactively changes,
so

15
00:00:55.755 --> 00:00:59.689
the component changes what
it shows pretty simply.

16
00:00:59.689 --> 00:01:03.847
So what we're gonna do is we're gonna
take this and move it into Vuex,

17
00:01:03.847 --> 00:01:06.817
because it's fine in
this particular instance.

18
00:01:06.817 --> 00:01:10.700
But if we wanted to use similar
methods and similar states,

19
00:01:10.700 --> 00:01:14.444
you don't wanna have to copy and
paste across your apps.

20
00:01:14.444 --> 00:01:17.171
So let's add Vuex.

21
00:01:17.171 --> 00:01:20.740
So the example I showed you
is using a Vue instance.

22
00:01:20.740 --> 00:01:23.298
So I just wanted to give
you a quick example.

23
00:01:23.298 --> 00:01:27.990
A lot of the example in the first
two parts of this course will be

24
00:01:27.990 --> 00:01:29.260
using CodePen.

25
00:01:29.260 --> 00:01:33.738
So just so you know where exactly
the Vuex is being added, this is CodePen.

26
00:01:33.738 --> 00:01:37.483
And within CodePen,
if you go into the JavaScript settings,

27
00:01:37.483 --> 00:01:40.733
you'll see sort of a way
of adding external scripts.

28
00:01:40.733 --> 00:01:44.098
And so I'm adding Vuex from there,
just for clarity so

29
00:01:44.098 --> 00:01:48.132
you know where exactly the Vuex
is added and how it's being used.

30
00:01:48.132 --> 00:01:53.720
So, in order to use Vuex, you need
to instantiate an instance of Vuex.

31
00:01:53.720 --> 00:01:57.658
And to do that,
you can create a constant called store.

32
00:01:57.658 --> 00:02:00.976
And then you instantiate
it with new Vuex.store.

33
00:02:00.976 --> 00:02:03.350
So this is default Vuex code.

34
00:02:03.350 --> 00:02:05.592
There's nothing too fancy about it.

35
00:02:05.592 --> 00:02:08.980
In this particular case, I'm just
instantiating state actions, getters,

36
00:02:08.980 --> 00:02:12.286
mutations, and there's nothing in it yet
cuz we haven't added anything.

37
00:02:12.286 --> 00:02:16.622
But this is sort of the beginning
state of how you use Vuex.

38
00:02:16.622 --> 00:02:18.017
And then from there,

39
00:02:18.017 --> 00:02:23.067
Vue doesn't actually know that Vuex
exists because it's sort of separate.

40
00:02:23.067 --> 00:02:26.462
So we need to add Vuex
to our Vue instance.

41
00:02:26.462 --> 00:02:29.727
And to do that,
we can just add the store in.

42
00:02:29.727 --> 00:02:33.528
So we'll see the con
store from line 1 to 6.

43
00:02:33.528 --> 00:02:35.992
And then below in our Vue instance,

44
00:02:35.992 --> 00:02:39.944
we're just passing the store
in to our instance itself.

45
00:02:39.944 --> 00:02:44.110
And so that with this now Vue
has a concept of the store.

46
00:02:44.110 --> 00:02:48.345
Obviously, there's nothing in
the store yet, so let's change that.

47
00:02:48.345 --> 00:02:53.140
So what we'll do is we need to change the
data properties as well as the methods so

48
00:02:53.140 --> 00:02:55.155
that it's using the Vuex store.

49
00:02:55.155 --> 00:02:58.623
And to do this, what we can do
is we'll start with the state or

50
00:02:58.623 --> 00:03:02.718
the data attribute first because
that seems fairly straightforward.

51
00:03:02.718 --> 00:03:11.435
So what we'll do is we'll add the supply
as a item in the state's store.

52
00:03:11.435 --> 00:03:14.225
So here in line 3, you have supply of 40.

53
00:03:14.225 --> 00:03:16.817
So that's very similar
to what we had in data.

54
00:03:16.817 --> 00:03:20.524
We obviously have to remove it from
data cuz we're no longer using it.

55
00:03:20.524 --> 00:03:24.853
And then one thing to note is that
Vuex is a store that changes so

56
00:03:24.853 --> 00:03:27.114
state is constantly changing.

57
00:03:27.114 --> 00:03:31.964
And in Vue, the way you tell a component
that state is changing is through computed

58
00:03:31.964 --> 00:03:36.689
properties because computer properties
listens for any changes and updates.

59
00:03:36.689 --> 00:03:41.641
It's sort of cached if nothing changes,
and then it updates as updates happen.

60
00:03:41.641 --> 00:03:47.369
So for us to know and be notified of
anything that happens in the state store,

61
00:03:47.369 --> 00:03:49.885
we'll add a computer property.

62
00:03:49.885 --> 00:03:54.835
And in this case, we call it supply which
is the same as the state of the state

63
00:03:54.835 --> 00:03:58.058
property, but
you don't necessarily have to,

64
00:03:58.058 --> 00:04:02.551
it doesn't have to be a one to one,
you can use it whatever you want.

65
00:04:02.551 --> 00:04:07.747
But the thing you do have to remember is
line 15 how exactly you're accessing it.

66
00:04:07.747 --> 00:04:09.789
So this.$store, this is new.

67
00:04:09.789 --> 00:04:11.570
We haven't talked about this yet.

68
00:04:11.570 --> 00:04:16.634
But this.$store is how you
access the store, essentially.

69
00:04:16.634 --> 00:04:19.864
So whenever Vue gets
the instance of the store,

70
00:04:19.864 --> 00:04:23.841
this.$store is how it accesses
that particular store.

71
00:04:23.841 --> 00:04:29.527
So you would do this.$store.state, will
give you the entire state as an object.

72
00:04:29.527 --> 00:04:33.912
And then you can sort of pick and choose
whichever item you want from that object.

73
00:04:33.912 --> 00:04:36.410
And right now we only have one item,
we have supply.

74
00:04:36.410 --> 00:04:39.855
And so we're gonna do
this.$store.state.supply because

75
00:04:39.855 --> 00:04:42.262
we're specifically grabbing the supply.

76
00:04:42.262 --> 00:04:45.193
And so with this, we have a computer
property that we can now use.

77
00:04:45.193 --> 00:04:50.307
And so anytime supply in the Vuex changes,
we can update accordingly.

78
00:04:50.307 --> 00:04:50.929
Of course,

79
00:04:50.929 --> 00:04:55.297
nothing's gonna change because we have no
way of updating that particular thing.

80
00:04:55.297 --> 00:04:57.939
So let's move on to the second part,

81
00:04:57.939 --> 00:05:02.640
which is actually moving every
part of the methods into actions.

82
00:05:02.640 --> 00:05:08.577
So, again, we're gonna be using
actions and mutations for now.

83
00:05:08.577 --> 00:05:11.178
They are fairly similar except for

84
00:05:11.178 --> 00:05:15.041
the fact that an action
sort of commits a mutation.

85
00:05:15.041 --> 00:05:18.134
And I'm gonna use that word commit,
because in Vue,

86
00:05:18.134 --> 00:05:19.936
that's sort of how we call it.

87
00:05:19.936 --> 00:05:23.968
It's commit and even in the language
in the syntax, it says commit.

88
00:05:23.968 --> 00:05:26.470
So let's look at how that looks like.

89
00:05:26.470 --> 00:05:31.832
So we have the method, the Vue instance on
the bottom, we have the method dispense.

90
00:05:31.832 --> 00:05:35.548
And right now dispense is sort
of doing just like a decrement,

91
00:05:35.548 --> 00:05:37.129
a very simple decrement.

92
00:05:37.129 --> 00:05:39.466
But we want it to use the store itself.

93
00:05:39.466 --> 00:05:44.227
And so to do this,
very similar to how we're accessing

94
00:05:44.227 --> 00:05:49.203
state in Vuex this.$store is
how you access the store.

95
00:05:49.203 --> 00:05:51.888
In this instance we're not
accessing the store anymore,

96
00:05:51.888 --> 00:05:53.651
we're accessing specific actions.

97
00:05:53.651 --> 00:05:59.927
And so, in Vuex when you want
the components to do something like to

98
00:05:59.927 --> 00:06:04.988
change an action in the store,
we call it a dispatch.

99
00:06:04.988 --> 00:06:08.631
So it dispatches actions and
then the store decides what to do.

100
00:06:08.631 --> 00:06:13.819
So in this case we are dispatching
a dispense action.

101
00:06:13.819 --> 00:06:17.698
And then if we move up to the top and
we look at actions,

102
00:06:17.698 --> 00:06:21.597
we have to call a method or
an action called dispense.

103
00:06:21.597 --> 00:06:25.251
And the name on line 6 needs
to match the name on 29,

104
00:06:25.251 --> 00:06:31.362
because specifically if you're dispatching
to an action, that action needs to exist.

105
00:06:31.362 --> 00:06:34.311
And so in this case,
we're dispatching dispense.

106
00:06:34.311 --> 00:06:36.455
So we have an action called dispense.

107
00:06:36.455 --> 00:06:40.028
And then this is sort of the kicker,
because as I mentioned,

108
00:06:40.028 --> 00:06:41.718
actions commit mutations.

109
00:06:41.718 --> 00:06:44.763
So we'll look at how exactly
we connect those two pieces.

110
00:06:44.763 --> 00:06:47.940
So for now,
we'll create a mutation called dispense.

111
00:06:47.940 --> 00:06:53.125
And so we'll have line 12 and line 6,
they're both called dispense.

112
00:06:53.125 --> 00:06:53.917
They're sort of similar.

113
00:06:53.917 --> 00:06:57.446
So I don't think the naming
is really changed.

114
00:06:57.446 --> 00:07:01.533
But the way in which you communicate
between them is through this thing

115
00:07:01.533 --> 00:07:02.579
called context.

116
00:07:02.579 --> 00:07:07.773
So, the action takes in a argument
called context and this is default.

117
00:07:07.773 --> 00:07:10.130
This is not something you
have to do explicitly.

118
00:07:10.130 --> 00:07:13.188
Is just Vuex has a concept of context.

119
00:07:13.188 --> 00:07:19.204
And so within context you have
various pieces of methods.

120
00:07:19.204 --> 00:07:21.058
We're gonna look at commits specifically.

121
00:07:21.058 --> 00:07:24.216
And so we're gonna take context.commit.

122
00:07:24.216 --> 00:07:28.651
So context.commit is just
calling any mutation.

123
00:07:28.651 --> 00:07:32.009
And so you will pass in the name
of the mutation specifically.

124
00:07:32.009 --> 00:07:36.861
So context.commit, the name of the
mutation which is the same as the action,

125
00:07:36.861 --> 00:07:40.329
so dispense, and
then that will call dispense itself.

126
00:07:40.329 --> 00:07:45.731
And similar to how the actions sort
of have a default's parameter,

127
00:07:45.731 --> 00:07:50.487
mutations also have a default and
in this case it's state.

128
00:07:50.487 --> 00:07:53.569
So state is the default
because it's mutating state.

129
00:07:53.569 --> 00:07:54.606
So it needs that.

130
00:07:54.606 --> 00:07:58.760
And then you would just do state.supply
minus minus, which is a decrement.

131
00:07:58.760 --> 00:08:01.906
And so that's how you would
connect the two together.

132
00:08:01.906 --> 00:08:05.939
We create an action, we create a mutation,
we connected the action and the mutation,

133
00:08:05.939 --> 00:08:08.326
and then we connected
the component to the action.

134
00:08:08.326 --> 00:08:12.504
So component dispatches action,
action commits mutations,

135
00:08:12.504 --> 00:08:16.855
state changes and then the component
is updated appropriately.

136
00:08:16.855 --> 00:08:19.342
And so this is sort of how Vuex works.

137
00:08:19.342 --> 00:08:23.188
Very similar to the diagram I showed you,
there's this flow of events that happen.

138
00:08:23.188 --> 00:08:25.502
So the component itself
doesn't do anything.

139
00:08:25.502 --> 00:08:29.060
The component just notifies
the store to change the state and

140
00:08:29.060 --> 00:08:31.722
the state handles it or
the store handles it.

