WEBVTT

1
00:00:00.000 --> 00:00:02.450
[MUSIC]
&gt;&gt; Joe Nelson: I think we should

2
00:00:02.450 --> 00:00:05.320
probably start.

3
00:00:05.320 --> 00:00:08.850
There's all kinds of things we could do,
like doing the API calls and stuff.

4
00:00:08.850 --> 00:00:11.710
But it might be easiest
to start by making it so

5
00:00:11.710 --> 00:00:14.450
when I type it into this box,
we can just log it.

6
00:00:14.450 --> 00:00:15.970
[LAUGH] And we can see it on the console.

7
00:00:15.970 --> 00:00:17.080
See that something's happening.

8
00:00:18.160 --> 00:00:22.760
So, what's cool about this pairing
bit is that I don't always have all

9
00:00:24.130 --> 00:00:27.330
these things at the tip of my tongue, like
exactly what these events stream is called

10
00:00:27.330 --> 00:00:29.310
bacon dot from event stream or something.

11
00:00:29.310 --> 00:00:32.510
So, I'll be discussing it and you and
Brian are gonna be like, yeah,

12
00:00:32.510 --> 00:00:35.750
try this and so
we're going to learn the thought process.

13
00:00:35.750 --> 00:00:40.310
So I'm trying to think, we could
start with pure and impure things.

14
00:00:40.310 --> 00:00:45.630
A pure thing would be just attaching
an event stream to something, you're

15
00:00:45.630 --> 00:00:49.400
not really running it yet it's just there
if you ever wanted it, so it's still pure.

16
00:00:49.400 --> 00:00:53.243
So say like val maybe.
&gt;&gt; Student 1: We gonna get a hold of that

17
00:00:53.243 --> 00:00:56.030
text field though, and that's gonna be-
&gt;&gt; Joe Nelson: [INAUDIBLE]

18
00:00:56.030 --> 00:00:56.603
&gt;&gt; Student 1: Yeah.

19
00:00:56.603 --> 00:00:59.858
We should first grab the search I think.
&gt;&gt; Joe Nelson: Okay.

20
00:00:59.858 --> 00:01:02.141
So we can say get DOM or something.

21
00:01:02.141 --> 00:01:07.069
And what I like to do for my own
sanity in a language of strong typing,

22
00:01:07.069 --> 00:01:10.108
it will dot your eyes and cross your tees.

23
00:01:10.108 --> 00:01:12.280
You're just trying to do
something that makes no sense.

24
00:01:12.280 --> 00:01:16.060
But I had comments for myself in
JavaScript cuz I was really confused.

25
00:01:16.060 --> 00:01:18.310
So I'll say getDom, what does it do?

26
00:01:18.310 --> 00:01:20.520
It's gonna take a selector,
I guess it's just a string,

27
00:01:20.520 --> 00:01:24.538
and it's gonna to go to
an IO of a DOM like element.

28
00:01:24.538 --> 00:01:27.431
And this is all just
kind of like pseudo code.

29
00:01:27.431 --> 00:01:28.761
&gt;&gt; Student 1: Really helpful

30
00:01:28.761 --> 00:01:31.750
documentation, thoiugh.
&gt;&gt; Joe Nelson: Yeah.

31
00:01:31.750 --> 00:01:35.340
So here's a function.
&gt;&gt; Joe Nelson: Actually I

32
00:01:35.340 --> 00:01:35.950
wonder if we need that?

33
00:01:35.950 --> 00:01:40.580
If we could just take,
cuz I've included jQuery, so

34
00:01:40.580 --> 00:01:43.050
I can be like to IO on the jQuery things.

35
00:01:43.050 --> 00:01:45.415
I can be dollar dot to IO.
&gt;&gt; Student 1: Nice.

36
00:01:45.415 --> 00:01:47.725
[LAUGH]
&gt;&gt; Joe Nelson: That's an IO.

37
00:01:47.725 --> 00:01:49.370
&gt;&gt; Student 1: [LAUGH] Done.

38
00:01:49.370 --> 00:01:51.169
&gt;&gt; Joe Nelson: Done, done and done.

39
00:01:52.950 --> 00:01:55.110
Cool, now we can get things IOs.

40
00:01:55.110 --> 00:01:58.430
So we want another thing it's
going to attach an event stream.

41
00:01:58.430 --> 00:02:02.020
So there's gonna be different
kinds of streams we can get.

42
00:02:02.020 --> 00:02:03.730
We could maybe call it a click stream.

43
00:02:03.730 --> 00:02:07.780
And you give the click stream, what it is
that you're going to get the clicks from.

44
00:02:07.780 --> 00:02:09.410
So it's going to be kind of similar.

45
00:02:09.410 --> 00:02:13.440
We wanna get like the search text.

46
00:02:13.440 --> 00:02:17.552
I think right now.
&gt;&gt; Student 1: Are we gonna start the-

47
00:02:17.552 --> 00:02:18.240
&gt;&gt; Joe Nelson: I'm thinking I just

48
00:02:18.240 --> 00:02:21.350
the events like something happened
some DOM thing, I said click but

49
00:02:21.350 --> 00:02:24.280
I meant typing in the press.
&gt;&gt; Student 1: I see.

50
00:02:24.280 --> 00:02:24.870
&gt;&gt; Joe Nelson: The press.

51
00:02:24.870 --> 00:02:26.327
Yeah.

52
00:02:26.327 --> 00:02:27.712
That's what four hours of
asleep will do to you.

53
00:02:27.712 --> 00:02:29.545
So let's get a key press.

54
00:02:29.545 --> 00:02:36.952
Var key press stream.

55
00:02:36.952 --> 00:02:41.511
Cool and that's also,
let's put our docs first,

56
00:02:41.511 --> 00:02:46.050
I like to think of it that way.
&gt;&gt; Student 3: What is this documentation

57
00:02:46.050 --> 00:02:47.829
thing you keep talking about?
&gt;&gt; Multiple: [LAUGH]

58
00:02:47.829 --> 00:02:48.983
&gt;&gt; Student 2: It was hard to write,

59
00:02:48.983 --> 00:02:50.403
it should be hard to read.

60
00:02:50.403 --> 00:02:56.030
[LAUGH]
&gt;&gt; Joe Nelson: Okay, so key press stream.

61
00:02:56.030 --> 00:02:58.250
That's gonna take, once again,

62
00:02:58.250 --> 00:03:02.910
just a string of selector and
it's gonna go to an event stream.

63
00:03:02.910 --> 00:03:04.866
I guess I'll call it DomEvent.

64
00:03:04.866 --> 00:03:07.570
Like I said, that's kind of imaginary,
but it's enough to suggest to me.

65
00:03:08.690 --> 00:03:09.920
Wait actually.

66
00:03:09.920 --> 00:03:12.210
It's probably gonna be an IO.

67
00:03:12.210 --> 00:03:13.290
Now let's do it this way.

68
00:03:13.290 --> 00:03:17.340
This doesn't take a stream,
it takes an already gotten IO thing,

69
00:03:17.340 --> 00:03:19.870
because if I was like,
find the DOM thing here.

70
00:03:19.870 --> 00:03:21.740
I'd have to be inside IO too and

71
00:03:21.740 --> 00:03:24.390
I don't like to be inside all
those things I can help it.

72
00:03:24.390 --> 00:03:27.620
So this will be a DOM, piece of DOM.

73
00:03:27.620 --> 00:03:36.200
Okay DOM, or element maybe.
&gt;&gt; Joe Nelson: Okay

74
00:03:36.200 --> 00:03:41.000
now, wait, the way Bacon's event stream
works, the order of its arguments,

75
00:03:41.000 --> 00:03:44.920
like the order of everything in this
world, are kind of awkward for carrying.

76
00:03:44.920 --> 00:03:46.710
So we can make our own wrapper for it.

77
00:03:46.710 --> 00:03:49.785
I could call it listen.

78
00:03:49.785 --> 00:03:53.798
And what would be a good way?

79
00:03:53.798 --> 00:03:56.945
We know the type, so the thing that
we always think we're trying to,

80
00:03:56.945 --> 00:04:00.473
when we wanna make the order for querying
we want the things that we know to come

81
00:04:00.473 --> 00:04:03.320
first in the things that
we don't know to come next.

82
00:04:03.320 --> 00:04:04.810
So, I say what do I know?

83
00:04:04.810 --> 00:04:06.640
I know that the event type that I want.

84
00:04:08.110 --> 00:04:12.130
What I don't know is the the DOM, the
element that we're going to apply it to.

85
00:04:16.550 --> 00:04:19.481
Okay, so, that will be probably,
let's see,

86
00:04:19.481 --> 00:04:23.337
bacon dot event stream from or something.
&gt;&gt; Student 1: Bacon dot from event

87
00:04:23.337 --> 00:04:29.010
target.
&gt;&gt; Joe Nelson: And

88
00:04:29.010 --> 00:04:31.260
it's gonna be the elements and the type.

89
00:04:31.260 --> 00:04:37.107
Now I gotta return it.
&gt;&gt; Joe Nelson: Probably semi-colon,

90
00:04:37.107 --> 00:04:39.043
okay.
&gt;&gt; Student 1: There's a useful utility

91
00:04:39.043 --> 00:04:41.420
called flip that works.
&gt;&gt; Joe Nelson: Do we have it?

92
00:04:41.420 --> 00:04:42.660
&gt;&gt; Student 1: For this exact thing.

93
00:04:42.660 --> 00:04:43.310
&gt;&gt; Joe Nelson: Do we have it?

94
00:04:43.310 --> 00:04:44.355
&gt;&gt; Student 1: No, we wanna wrap this

95
00:04:44.355 --> 00:04:46.128
in query as well?
&gt;&gt; Joe Nelson: Is flip query?

96
00:04:46.128 --> 00:04:50.945
So I could do flip of-
&gt;&gt; Student 1: I don't think flip query's

97
00:04:50.945 --> 00:04:52.600
the function, no.

98
00:04:52.600 --> 00:04:54.450
So you probably wanna just leave it and
query it.

99
00:04:54.450 --> 00:04:55.160
&gt;&gt; Joe Nelson: I could query flip.

100
00:04:55.160 --> 00:04:56.304
&gt;&gt; Student 1: I don't think we should be

101
00:04:56.304 --> 00:04:57.800
messing with flip right now.

102
00:04:57.800 --> 00:05:01.498
I just think it's a cool thing to know.
&gt;&gt; Joe Nelson: Okay.

103
00:05:01.498 --> 00:05:04.750
So now we can listen to things.

104
00:05:04.750 --> 00:05:07.630
Now our key press stream, this isn't bad.
&gt;&gt; Student 2: Didn't

105
00:05:07.630 --> 00:05:09.517
you say you wanted to do flip?
&gt;&gt; Student 1: Yeah,

106
00:05:09.517 --> 00:05:11.000
you just got flip up there.
&gt;&gt; [INAUDIBLE]

107
00:05:11.000 --> 00:05:11.950
&gt;&gt; Student 1: I think we should query it,

108
00:05:14.620 --> 00:05:18.890
though.
&gt;&gt; Joe Nelson: You're totally right.

109
00:05:18.890 --> 00:05:20.450
I'm so used to things being auto queried,

110
00:05:20.450 --> 00:05:25.240
it's just like, hey.
&gt;&gt; Student 1: Usually the rule of

111
00:05:25.240 --> 00:05:28.629
thumb for me is,
if I ever have more than one argument,

112
00:05:28.629 --> 00:05:31.830
I just query it, why not?
&gt;&gt; Joe Nelson: This guy actually probably

113
00:05:31.830 --> 00:05:35.020
doesn't even, you don't have to
bind the glue variables here.

114
00:05:35.020 --> 00:05:38.740
It's probably just a lesson
of click at this point.

115
00:05:38.740 --> 00:05:42.185
&gt;&gt; [INAUDIBLE]

116
00:05:42.185 --> 00:05:42.947
&gt;&gt; Joe Nelson: Yeah, why am I

117
00:05:42.947 --> 00:05:45.114
thinking about the clicks in the licks?

118
00:05:45.114 --> 00:05:47.082
We need to think of the key,
which is the best?

119
00:05:47.082 --> 00:05:51.089
Key down will be weird things like
controls and shifts so probably a key up.

120
00:05:51.089 --> 00:05:55.587
And our key press,
I don't know, let's try key up.

121
00:05:55.587 --> 00:05:58.660
Okay cool, now you've got a stream.

122
00:05:58.660 --> 00:06:01.940
So in our impure stuff,
let's do something.

123
00:06:01.940 --> 00:06:07.390
Let's see we wanna find the element and

124
00:06:07.390 --> 00:06:11.214
kind of compose it in here and make it
log, I wish we had a handy log, cool.

125
00:06:12.680 --> 00:06:17.831
The commit I started with has all this
good stuff, compose map log for, okay,

126
00:06:17.831 --> 00:06:23.593
so let's think through it.
&gt;&gt; Student 1: Said HTML's not 2IOed but

127
00:06:23.593 --> 00:06:26.664
that's fine.
&gt;&gt; Joe Nelson: Okay, so

128
00:06:26.664 --> 00:06:29.085
it's gonna be a compose.

129
00:06:29.085 --> 00:06:30.625
The final thing will be a log, but

130
00:06:30.625 --> 00:06:33.770
it'll probably like a map of log
if we're gonna be inside of stuff.

131
00:06:36.740 --> 00:06:41.258
And we're gonna be doing, right,
we're gonna get the, wait a second.

132
00:06:41.258 --> 00:06:45.939
Is map gonna work with event
stream just like anything will?

133
00:06:45.939 --> 00:06:48.867
I don't have to be on event or
anything it's just map.

134
00:06:48.867 --> 00:06:52.379
Like, any functor?
&gt;&gt; Student 1: You wanna run IO because-

135
00:06:52.379 --> 00:06:55.454
Well let's go ahead and get the DOM and

136
00:06:55.454 --> 00:07:00.862
then figure out what we're dealing with.
&gt;&gt; Joe Nelson: Okay.

137
00:07:05.248 --> 00:07:09.120
&gt;&gt; Student 1: Cuz that'll be an IO.

138
00:07:09.120 --> 00:07:13.010
And then, yeah if you log that,
it'll just be the search.

139
00:07:13.010 --> 00:07:16.865
If you map log that'll
be an IO of whatever log

140
00:07:16.865 --> 00:07:19.476
return.
&gt;&gt; Joe Nelson: I wanted to get a key press

141
00:07:19.476 --> 00:07:20.260
stream.
&gt;&gt; Student 1: Okay.

142
00:07:22.240 --> 00:07:23.710
&gt;&gt; Joe Nelson: Of that stuff.

143
00:07:23.710 --> 00:07:28.486
So we find it, we get the stream, and now
what I'm wondering is if the map is gonna

144
00:07:28.486 --> 00:07:32.633
get recalled on the events in the stream,
because it's a functor like

145
00:07:32.633 --> 00:07:35.450
any other functor.
&gt;&gt; Student 1: Well I think first things

146
00:07:35.450 --> 00:07:38.959
first, is we need to map key
press stream over get DOM.

147
00:07:38.959 --> 00:07:41.070
Cuz get DOM's an IO.
&gt;&gt; Joe Nelson: Yeah, yeah you're right.

148
00:07:41.070 --> 00:07:44.190
Gotta get inside.
&gt;&gt; Student 1: And now we have an IO of

149
00:07:44.190 --> 00:07:48.419
an event stream DOM event.
&gt;&gt; Joe Nelson: No.

150
00:07:48.419 --> 00:07:49.730
&gt;&gt; Student 1: [INAUDIBLE] So

151
00:07:49.730 --> 00:07:52.356
now we have to map map log.

152
00:07:52.356 --> 00:07:53.539
Actually I'm sorry.

153
00:07:53.539 --> 00:07:56.621
We don't have to map, yeah yeah.

154
00:07:56.621 --> 00:07:59.253
Map map log.
&gt;&gt; Joe Nelson: I don't remember if we

155
00:07:59.253 --> 00:08:01.419
were able to move that in our final thing,
or

156
00:08:01.419 --> 00:08:04.610
if we had the nasty map maps hanging out.
&gt;&gt; Student 1: Well at this point we were

157
00:08:04.610 --> 00:08:08.250
impure, and so
the composed is kind of silly.

158
00:08:08.250 --> 00:08:12.860
Cuz we have our data at this point.

159
00:08:12.860 --> 00:08:15.180
We have our search, right?

160
00:08:15.180 --> 00:08:17.380
So, why are we going through all
the trouble of trying to point free,

161
00:08:17.380 --> 00:08:19.040
when we have our points.

162
00:08:19.040 --> 00:08:20.542
So, I think we just run stuff.

163
00:08:20.542 --> 00:08:23.480
So, I would just get DOM dot map,
key press stream.

164
00:08:30.723 --> 00:08:31.977
&gt;&gt; Joe Nelson: Dot map

165
00:08:33.426 --> 00:08:34.468
&gt;&gt; Student 1: Okay, so-

166
00:08:34.468 --> 00:08:35.680
&gt;&gt; Joe Nelson: That strain.

167
00:08:35.680 --> 00:08:38.899
Another one.
&gt;&gt; Student 1: Then we'll run IO.

168
00:08:38.899 --> 00:08:44.029
So that give us,
that'll actually get the search thing and

169
00:08:44.029 --> 00:08:46.870
then give us a key press stream.

170
00:08:46.870 --> 00:08:49.640
So, after runIO, just do .onValue.
&gt;&gt; Joe Nelson: That's

171
00:08:49.640 --> 00:08:50.530
what I was wondering.

172
00:08:50.530 --> 00:08:53.319
Whether I could have done theoretically,

173
00:08:53.319 --> 00:08:56.108
have done map here or
will only on value work

174
00:08:56.108 --> 00:08:59.878
because the way the library's written?
&gt;&gt; Student 1: No map will just keep

175
00:08:59.878 --> 00:09:02.580
returning pure streams
until you call on value.

176
00:09:02.580 --> 00:09:07.052
Nothing will ever happen until

177
00:09:07.052 --> 00:09:11.424
[INAUDIBLE].
&gt;&gt; Joe Nelson: Let's see what [INAUDIBLE]

178
00:09:11.424 --> 00:09:11.958
&gt;&gt; Student 1: You know what?

179
00:09:11.958 --> 00:09:13.430
We gotta do that extend function here.

180
00:09:13.430 --> 00:09:15.734
Remember we hit that
last time we tried this?

181
00:09:15.734 --> 00:09:19.393
We built this before, you guys, secretly.
&gt;&gt; Joe Nelson: Yeah we can jump to

182
00:09:19.393 --> 00:09:22.440
the [INAUDIBLE] It's all gonna be fine.
&gt;&gt; Student 1: [CROSSTALK] But

183
00:09:22.440 --> 00:09:26.420
at the very [INAUDIBLE] extend the,
IO extend function,

184
00:09:26.420 --> 00:09:28.650
bring an IO extender.
&gt;&gt; Joe Nelson: Yeah, yeah.

185
00:09:28.650 --> 00:09:29.660
Yeah, yeah, yeah.
We want IO,

186
00:09:29.660 --> 00:09:31.804
we're gonna have to ask for it.
&gt;&gt; Student 1: Yeah.

187
00:09:31.804 --> 00:09:36.380
We extend functions to call to IO at
the end, because it's a pain in the butt

188
00:09:36.380 --> 00:09:39.070
with arguments otherwise.
&gt;&gt; Joe Nelson: Not fun.

189
00:09:39.070 --> 00:09:40.960
Now at least [INAUDIBLE] fun,
just punching.

190
00:09:40.960 --> 00:09:43.860
Okay.
&gt;&gt; Student 1: That should do it.

191
00:09:43.860 --> 00:09:44.390
&gt;&gt; Joe Nelson: Nice, okay,

192
00:09:44.390 --> 00:09:45.629
now let's go to the console.

193
00:09:51.540 --> 00:09:53.710
So, now you get events coming through.

194
00:09:53.710 --> 00:09:58.660
So, I like to think of it as, you get a
stream of one kind, you could intercept it

195
00:09:58.660 --> 00:10:01.610
before anything happened, just purely,
before anything has happened.

196
00:10:01.610 --> 00:10:04.320
And make a derivative
stream of another kind.

197
00:10:04.320 --> 00:10:06.600
So it's like, cool, we got this.

198
00:10:06.600 --> 00:10:09.610
What if our stream was now the actual

199
00:10:09.610 --> 00:10:11.800
key that was pressed by
grabbing that out of there.

200
00:10:12.810 --> 00:10:14.490
So lets see, how do we find that?

201
00:10:14.490 --> 00:10:18.690
I select the event.something or other?
&gt;&gt; Student 1: KeyCode.

202
00:10:18.690 --> 00:10:20.482
&gt;&gt; Joe Nelson: Is it event.keyCode?

203
00:10:20.482 --> 00:10:21.950
&gt;&gt; Student 1: It's right there.

204
00:10:21.950 --> 00:10:22.580
&gt;&gt; Joe Nelson: Or just keyCode?

205
00:10:22.580 --> 00:10:26.035
No, I want the actual deal if possible.
&gt;&gt; Student 1: I

206
00:10:26.035 --> 00:10:29.870
think we should get the target value,
because we want the whole search

207
00:10:29.870 --> 00:10:32.592
value of the search box.
&gt;&gt; Joe Nelson: [CROSSTALK]

208
00:10:32.592 --> 00:10:35.705
Yeah, that's true.
&gt;&gt; Student 1: Do stream of whatever's in

209
00:10:35.705 --> 00:10:37.207
the search at the time event happened.

210
00:10:37.207 --> 00:10:42.237
So [INAUDIBLE] targeted.
&gt;&gt; Joe Nelson: There's a lot and

211
00:10:42.237 --> 00:10:44.770
then okay [CROSSTALK] Nice.

212
00:10:44.770 --> 00:10:45.950
So we can get that.

