WEBVTT

1
00:00:00.000 --> 00:00:04.541
[MUSIC]

2
00:00:04.541 --> 00:00:09.060
&gt;&gt; Joe Nelson: When the stuff is
really pure, often loops are reduce,

3
00:00:09.060 --> 00:00:10.510
filter, or map.

4
00:00:11.890 --> 00:00:14.790
If things aren't pure,
you have to worry about what it's doing.

5
00:00:14.790 --> 00:00:16.820
You can't just always use it so happily.

6
00:00:18.710 --> 00:00:21.850
In fact, there's another list thing, each.

7
00:00:21.850 --> 00:00:24.384
But that's kind of the impure one
that shouldn't be in the triangle.

8
00:00:24.384 --> 00:00:30.180
Do something stateful to each thing that
you see, rather than map which is like,

9
00:00:30.180 --> 00:00:33.230
change it, pass it through
change it like you know purely.

10
00:00:33.230 --> 00:00:34.660
So when you work with pure functions,

11
00:00:34.660 --> 00:00:38.340
these are the probably most of
the loop things that you're gonna see.

12
00:00:38.340 --> 00:00:42.156
And, in fact, we like to say if
you write loops, you get an F.

13
00:00:42.156 --> 00:00:43.712
Because, no loops.

14
00:00:46.172 --> 00:00:49.466
&gt;&gt; Joe Nelson: Okay, so
kind of reviewing the separations.

15
00:00:49.466 --> 00:00:56.660
In general, phase one was to prepare you
to see that it's kind of like the basics.

16
00:00:56.660 --> 00:00:59.770
The type of stuff that's gonna to feed
into what Brian shows you to write

17
00:00:59.770 --> 00:01:01.090
really cool stuff.

18
00:01:01.090 --> 00:01:05.720
So, the basics are keep the function
arguments explicit, separate input

19
00:01:05.720 --> 00:01:08.400
from environment so you know exactly
what's going into the function.

20
00:01:09.810 --> 00:01:12.120
Also, the inputs can
be provided over time.

21
00:01:12.120 --> 00:01:14.623
So, separate a function from its.

22
00:01:14.623 --> 00:01:19.159
Make it be whatever it needs to be so that
we could just throw stuff together and

23
00:01:19.159 --> 00:01:20.870
compos or split it like you saw.

24
00:01:23.590 --> 00:01:25.780
Don't be modifying outside things.

25
00:01:25.780 --> 00:01:28.556
Or when you do, keep it very localized, so

26
00:01:28.556 --> 00:01:31.490
there's one place that
does it in the teasers.

27
00:01:31.490 --> 00:01:34.840
The teaser function was like both trying
to figure out how to shorten something and

28
00:01:34.840 --> 00:01:35.510
updating the DOM.

29
00:01:35.510 --> 00:01:39.100
It's better to have something it's like,
yeah, all I do is update the DOM.

30
00:01:39.100 --> 00:01:43.540
And I'm composed, in fact, and a way to
think about it is you do your pure stuff,

31
00:01:43.540 --> 00:01:46.430
and it's sandwiched in
between the impure stuff.

32
00:01:46.430 --> 00:01:51.130
So your pure stuff in
the teasers was calculating,

33
00:01:51.130 --> 00:01:53.150
okay, I've got a string of words.

34
00:01:53.150 --> 00:01:54.360
What's a way to shorten it so

35
00:01:54.360 --> 00:01:58.700
it's an appealing thing someone wants to
click into and it's not overwhelming?

36
00:01:58.700 --> 00:02:02.000
And it's sandwiched between
reading the things in the DOM,

37
00:02:02.000 --> 00:02:05.160
like seeing that they're there or
finding them, and putting them in, and

38
00:02:05.160 --> 00:02:07.980
on the other side updating
the things in the DOM.

39
00:02:07.980 --> 00:02:11.040
,if most of your program
is composing pure, pure,

40
00:02:11.040 --> 00:02:14.700
pure, and
only at the end do you ever sandwich it,

41
00:02:14.700 --> 00:02:19.310
then the things that appear are free to
combine a lot more easily and compose.

42
00:02:19.310 --> 00:02:24.116
So, between the buns of the sandwich, you
could rearrange all the layers nicely and

43
00:02:24.116 --> 00:02:24.697
freely.

44
00:02:24.697 --> 00:02:29.130
You could throw a log statement in
between in your compose chain and

45
00:02:29.130 --> 00:02:30.530
see how things are changing.

46
00:02:30.530 --> 00:02:32.935
Even though it's impure,
it just has a the debugging technique.

47
00:02:38.505 --> 00:02:40.629
&gt;&gt; Joe Nelson: Minus one,
so that makes me feel sad-

48
00:02:40.629 --> 00:02:43.668
&gt;&gt; Off Camera 1: No, that was for

49
00:02:43.668 --> 00:02:48.068
[CROSSTALK] [LAUGH]
&gt;&gt; Joe Nelson: Okay, and then try to

50
00:02:48.068 --> 00:02:52.590
compose without using glue variables
like we saw with the error thing.

51
00:02:54.110 --> 00:02:57.990
And if you do those things, you've omitted
a lot of needless words, and your code is

52
00:02:57.990 --> 00:03:04.640
ready to enter from the silence to the
voyage that Brian's gonna to take you on.

53
00:03:07.970 --> 00:03:09.818
So I wonder if there's
anything else we wanna cover?

54
00:03:09.818 --> 00:03:11.877
It's 11:45.

55
00:03:11.877 --> 00:03:15.310
&gt;&gt; Off Camera 1: Yeah, do you wanna
write some more compositions, or

56
00:03:15.310 --> 00:03:17.050
just take questions?

57
00:03:17.050 --> 00:03:20.730
Or, cuz people need to know this
before we go into the second part, or

58
00:03:20.730 --> 00:03:22.596
you guys are going to be like we hate you.

59
00:03:22.596 --> 00:03:26.686
[LAUGH]
&gt;&gt; Joe Nelson: Yeah, yeah.

60
00:03:26.686 --> 00:03:29.540
&gt;&gt; Off Camera 2: I did have
a question on the challenge, too.

61
00:03:29.540 --> 00:03:33.240
I actually wrote it originally
without the compose.

62
00:03:33.240 --> 00:03:37.150
I just did a return contains, and

63
00:03:37.150 --> 00:03:41.110
then I passed in,
as a second argument, was the names.

64
00:03:42.120 --> 00:03:45.770
So, in other words,
I didn't do the compose.

65
00:03:45.770 --> 00:03:47.589
So, what's good or bad?

66
00:03:47.589 --> 00:03:49.460
I mean-
&gt;&gt; Joe Nelson: It's probably better.

67
00:03:49.460 --> 00:03:51.600
You probably did a better imitation there.

68
00:03:51.600 --> 00:03:53.740
&gt;&gt; Off Camera 1: Yeah, I think it's
a good example to be like, well,

69
00:03:53.740 --> 00:03:58.890
compose works here, but if you have
to put arguments in weird spaces,

70
00:03:58.890 --> 00:04:02.036
just write a function and
just use the normal stuff.

71
00:04:02.036 --> 00:04:03.037
But, I mean, if we were,

72
00:04:03.037 --> 00:04:07.550
yeah, I think we should write an extra
couple composes to show that, I mean,

73
00:04:07.550 --> 00:04:11.108
one of the benefits of compose is
you don't have to name anything.

74
00:04:11.108 --> 00:04:17.270
So, there's no ties to this
specific implementation.

75
00:04:17.270 --> 00:04:19.620
We're just saying glue this
function with this function.

76
00:04:19.620 --> 00:04:23.970
And you're kind of, without thinking about
it, being like writing this generic code

77
00:04:23.970 --> 00:04:26.800
that's building up a little
functions into bigger functions.

78
00:04:26.800 --> 00:04:30.450
If you, the second you start to write
function, and you start doing things in

79
00:04:30.450 --> 00:04:35.440
there, you're writing, you're telling
JavaScript how to evaluate, do this first,

80
00:04:35.440 --> 00:04:38.540
then do this, then do this, and
it can't be changed [INAUDIBLE].

81
00:04:38.540 --> 00:04:42.533
You also end up writing,
making all these references to names and

82
00:04:42.533 --> 00:04:44.000
having to name things.

83
00:04:44.000 --> 00:04:46.740
And you might be doing things
that aren't other functions

84
00:04:46.740 --> 00:04:48.310
that you're building
up new functions from.

85
00:04:48.310 --> 00:04:52.310
You might just add one out of nowhere
instead of using our add function.

86
00:04:52.310 --> 00:04:57.040
So, what it's doing is kind of forcing
a higher level declarative discipline.

87
00:04:57.040 --> 00:05:00.580
And if you can't get it,
you might write readable code.

88
00:05:00.580 --> 00:05:02.100
[LAUGH] Don't worry about it.

89
00:05:03.360 --> 00:05:05.500
&gt;&gt; Off Camera 2: Well,
do you worry about performance, then?

90
00:05:05.500 --> 00:05:09.360
Are you getting too many functions,
and does that,

91
00:05:09.360 --> 00:05:14.770
as opposed to sometimes just doing it
in a straightforward, JavaScript way?

92
00:05:14.770 --> 00:05:17.790
&gt;&gt; Joe Nelson: It's funny to think about,
to really think about performance and

93
00:05:17.790 --> 00:05:20.960
what affects it in a web application.

94
00:05:20.960 --> 00:05:22.685
It's so, probably not.

95
00:05:22.685 --> 00:05:25.400
[INAUDIBLE] on your JavaScript.

96
00:05:25.400 --> 00:05:26.675
Because huge network calls,

97
00:05:26.675 --> 00:05:29.710
it'll like an eternity compared
to calling an extra function.

98
00:05:29.710 --> 00:05:32.440
Or like choices about caching went wrong.

99
00:05:32.440 --> 00:05:33.630
Or waiting for the server.

100
00:05:33.630 --> 00:05:37.130
It's just,
I think it's good to think about it.

101
00:05:37.130 --> 00:05:40.060
I would, for
a minor increase in efficiency,

102
00:05:40.060 --> 00:05:43.232
I would not wanna make a major
increase in the complexity of my code.

103
00:05:44.550 --> 00:05:49.542
Assuming that I found a nice way
to compose [INAUDIBLE] clean and

104
00:05:49.542 --> 00:05:51.469
better example, too.

105
00:05:51.469 --> 00:05:53.481
&gt;&gt; Off Camera 1: Yeah, what if we-
&gt;&gt; Joe Nelson: Should we make some

106
00:05:53.481 --> 00:05:54.012
more compositions?

107
00:05:54.012 --> 00:05:57.675
&gt;&gt; Off Camera 1: Yeah,
if we go mess with those authors some.

108
00:05:57.675 --> 00:06:00.880
&gt;&gt; Joe Nelson: Yeah, let's see.

109
00:06:03.546 --> 00:06:04.972
&gt;&gt; Joe Nelson: Okay,
what could we do with this thing?

110
00:06:04.972 --> 00:06:09.883
If it's a,
&gt;&gt; Joe Nelson: Aside

111
00:06:09.883 --> 00:06:11.481
from just plucking things out.

112
00:06:11.481 --> 00:06:16.094
&gt;&gt; Off Camera 1: Yeah,
look into Scott and Michael for some cool-

113
00:06:16.094 --> 00:06:18.305
&gt;&gt; [INAUDIBLE]

114
00:06:18.305 --> 00:06:20.339
&gt;&gt; Off Camera 1: Functions to play with.

115
00:06:20.339 --> 00:06:23.610
Maybe you could say, take one, right?

116
00:06:23.610 --> 00:06:26.423
To take one of the articles,
and you cold compose that.

117
00:06:26.423 --> 00:06:28.110
Take one article and then get started.

118
00:06:30.366 --> 00:06:32.290
&gt;&gt; Joe Nelson: I see.
Take one article.

119
00:06:32.290 --> 00:06:33.850
So, get the first title?

120
00:06:33.850 --> 00:06:37.010
&gt;&gt; Off Camera 1: Yeah, and
composition working together.

121
00:06:37.010 --> 00:06:39.726
&gt;&gt; Joe Nelson: Take, cool.

122
00:06:39.726 --> 00:06:41.749
Sure.

123
00:06:41.749 --> 00:06:42.970
I don't have to do a var.

124
00:06:42.970 --> 00:06:45.377
I can just do it, compose.

125
00:06:47.303 --> 00:06:48.730
&gt;&gt; Joe Nelson: Actually,
I'll do the other way around.

126
00:06:48.730 --> 00:06:53.971
So, we wanna get the
&gt;&gt; Joe Nelson: The title.

127
00:06:58.182 --> 00:07:01.296
&gt;&gt; Joe Nelson: So this whole function is
gonna get the first title of the thing.

128
00:07:01.296 --> 00:07:02.595
&gt;&gt; Off Camera 1: I think so.

129
00:07:02.595 --> 00:07:03.995
&gt;&gt; Joe Nelson: I think so, yeah.

130
00:07:03.995 --> 00:07:04.940
&gt;&gt; Off Camera 1: [LAUGH]
&gt;&gt; Joe Nelson: Absolutely will,

131
00:07:04.940 --> 00:07:06.140
except it's undefined.

132
00:07:07.740 --> 00:07:09.410
&gt;&gt; Off Camera 1: I mean,
maybe they can tell us-

133
00:07:09.410 --> 00:07:09.943
&gt;&gt; Joe Nelson: Maybe I did take

134
00:07:09.943 --> 00:07:10.602
wrong [INAUDIBLE].

135
00:07:10.602 --> 00:07:13.509
&gt;&gt; Off Camera 1: Wait,
yeah, check [INAUDIBLE].

136
00:07:24.344 --> 00:07:26.077
&gt;&gt; Joe Nelson: All good.

137
00:07:26.077 --> 00:07:28.801
&gt;&gt; Off Camera 1: _get, .get?

138
00:07:35.510 --> 00:07:39.526
&gt;&gt; Joe Nelson: What is the,
I should actually go to the articles.

139
00:07:39.526 --> 00:07:46.438
&gt;&gt; Off Camera 1: Yeah.
[LAUGH] I think it's the first one.

140
00:07:46.438 --> 00:07:48.384
&gt;&gt; Joe Nelson: But
it's actually still an array.

141
00:07:49.816 --> 00:07:50.891
&gt;&gt; Off Camera 1: I see.

142
00:07:50.891 --> 00:07:52.138
So we get the head?

143
00:07:52.138 --> 00:07:54.837
Dropped out in the-
&gt;&gt; Joe Nelson: If you

144
00:07:54.837 --> 00:07:57.170
don't understand I could just do it
&gt;&gt; Off Camera 2: Was it like it's first

145
00:07:57.170 --> 00:07:58.290
instead of a take?

146
00:07:58.290 --> 00:07:59.385
&gt;&gt; Off Camera 1: Yeah, yeah, that's true.

147
00:07:59.385 --> 00:08:00.830
&gt;&gt; Multiple: [LAUGH]
&gt;&gt; Off Camera 1: Why will I take that?

148
00:08:00.830 --> 00:08:02.650
That is a same function.

149
00:08:02.650 --> 00:08:04.950
&gt;&gt; Joe Nelson: So that's the same?

150
00:08:06.320 --> 00:08:07.950
&gt;&gt; Multiple: Yeah.
&gt;&gt; Joe Nelson: That still seems to be like

151
00:08:07.950 --> 00:08:09.700
it's an array with one thing in it.

152
00:08:09.700 --> 00:08:10.890
&gt;&gt; Off Camera 1: No, it's an object.

153
00:08:10.890 --> 00:08:11.457
&gt;&gt; Joe Nelson: Is it?

154
00:08:11.457 --> 00:08:12.050
Object?
Okay.

155
00:08:12.050 --> 00:08:13.880
&gt;&gt; Off Camera 1: Yeah,
let's do that ahead or-

156
00:08:13.880 --> 00:08:14.710
&gt;&gt; Joe Nelson: Sure.

157
00:08:20.927 --> 00:08:22.007
&gt;&gt; Joe Nelson: Cool, okay.

158
00:08:22.007 --> 00:08:24.208
&gt;&gt; Multiple: [LAUGH]
&gt;&gt; Joe Nelson: I mean, this alternative,

159
00:08:24.208 --> 00:08:28.240
I don't know if this is such
a cuz it'd be articles[0] dash-

160
00:08:28.240 --> 00:08:29.792
&gt;&gt; Off Camera 1: Well, so the, but

161
00:08:29.792 --> 00:08:34.739
the top one is, something else
to consider is the top one is,

162
00:08:34.739 --> 00:08:39.589
if you're going through functions,
we can start to, it,

163
00:08:39.589 --> 00:08:42.403
I'm gonna talk about in part two.

164
00:08:42.403 --> 00:08:47.900
We can to compose contexts
like what if there was none?

165
00:08:47.900 --> 00:08:49.870
So, if you try to get the head, and

166
00:08:49.870 --> 00:08:53.580
there's nothing there, if we're doing,
if we're composing functions,

167
00:08:53.580 --> 00:08:58.310
we're able to compose behaviors
like null checks and stuff.

168
00:08:58.310 --> 00:08:59.770
So that'll-
&gt;&gt; Joe Nelson: That's true.

169
00:08:59.770 --> 00:09:00.660
&gt;&gt; Off Camera 1: Get pretty wild.

170
00:09:00.660 --> 00:09:04.580
If you do this bottom one, you're locked
into the, you're stuck, you're done.

171
00:09:04.580 --> 00:09:06.660
You have to wrap that in an if not null.

172
00:09:06.660 --> 00:09:08.590
If article is first, get a title.

173
00:09:08.590 --> 00:09:09.180
&gt;&gt; Joe Nelson: Yeah, good point.

174
00:09:09.180 --> 00:09:11.251
I can't say how many time I've [CROSSTALK]
&gt;&gt; Multiple: [LAUGH]

175
00:09:11.251 --> 00:09:12.003
&gt;&gt; Joe Nelson: Something's null.

176
00:09:12.003 --> 00:09:14.416
It's not in the thing and
if you stick something in between,

177
00:09:14.416 --> 00:09:16.550
you'll be in a different
context which will show you.

178
00:09:16.550 --> 00:09:17.740
&gt;&gt; Off Camera 1: So,
we're starting to do that, but

179
00:09:17.740 --> 00:09:21.080
one of the benefits right here is
you're completely declarative.

180
00:09:21.080 --> 00:09:22.260
You don't say how anything happens.

181
00:09:22.260 --> 00:09:24.290
I guess the bottom one is
kinda declarative, too.

182
00:09:24.290 --> 00:09:25.210
&gt;&gt; Joe Nelson: But I think it's important,

183
00:09:25.210 --> 00:09:26.470
I think the biggest
thing is what you said.

184
00:09:26.470 --> 00:09:31.610
This composes, and it composes in a way
that pure code can be lifted into

185
00:09:31.610 --> 00:09:33.480
a container,
like you're gonna explain with.

186
00:09:33.480 --> 00:09:36.610
A container can do null checks, so
you're kind of doesn't have to care.

187
00:09:36.610 --> 00:09:41.000
It's just like I'm pretending everything's
perfect, but I'm in this container that

188
00:09:41.000 --> 00:09:45.020
insulates me from nulls and stuff that
can happen and does other things.

189
00:09:45.020 --> 00:09:46.230
&gt;&gt; Off Camera 1: It's gonna be exciting.

190
00:09:46.230 --> 00:09:47.087
&gt;&gt; Joe Nelson: Yeah.
&gt;&gt; Multiple: [LAUGH]

191
00:09:48.719 --> 00:09:49.219
&gt;&gt; Joe Nelson: Yeah.

192
00:09:49.219 --> 00:09:50.393
&gt;&gt; Off Camera 3: There's a couple

193
00:09:50.393 --> 00:09:52.785
questions from chat.
One was whether

194
00:09:52.785 --> 00:09:57.585
currying is implemented in underscore or
a low dash, or if they need to use Ramba.

195
00:09:57.585 --> 00:09:58.467
&gt;&gt; Joe Nelson: I think curry is in both

196
00:09:58.467 --> 00:10:00.220
of them, that would be my gut instinct.
&gt;&gt; Off Camera 1: Yeah,

197
00:10:00.220 --> 00:10:01.852
I think it's in both.
&gt;&gt; Joe Nelson: It's a pretty

198
00:10:01.852 --> 00:10:04.607
standard thing.
But the thing is,

199
00:10:04.607 --> 00:10:08.775
say that you choose to use underscore.
It gives you curry, but

200
00:10:08.775 --> 00:10:11.754
the other functions it gives you
don't have there arguments and

201
00:10:11.754 --> 00:10:15.660
a convenient order for you to be
&gt;&gt; Off Camera 1: Right.

202
00:10:15.660 --> 00:10:16.700
&gt;&gt; Joe Nelson: So, but you get the curry.

