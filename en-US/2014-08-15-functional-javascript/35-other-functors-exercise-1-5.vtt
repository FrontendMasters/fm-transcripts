WEBVTT

1
00:00:00.000 --> 00:00:04.633
[MUSIC]

2
00:00:04.633 --> 00:00:06.990
&gt;&gt; Brian Lonsdorf: This is
just like everything else.

3
00:00:06.990 --> 00:00:08.880
It's starting to get boring at this point.

4
00:00:08.880 --> 00:00:12.980
But I needed you guys to see all
the cool stuff you can do with futures.

5
00:00:12.980 --> 00:00:16.776
So we're just gonna get the posts and
map the title.

6
00:00:16.776 --> 00:00:18.431
Good title.

7
00:00:18.431 --> 00:00:23.260
I run that, works, so
what's going to happen.

8
00:00:23.260 --> 00:00:25.580
If I show us a little log here.

9
00:00:27.750 --> 00:00:29.572
Keep defining this.

10
00:00:34.964 --> 00:00:36.830
&gt;&gt; Speaker 2: Where does
it get close to find.

11
00:00:36.830 --> 00:00:37.899
&gt;&gt; Brian Lonsdorf: Down at
the bottom of the page.

12
00:00:40.890 --> 00:00:43.938
So again, I can actually,
let me just do log here.

13
00:00:43.938 --> 00:00:45.650
It's like a map log over that.

14
00:00:46.810 --> 00:00:50.080
And see how it's logging this object?

15
00:00:50.080 --> 00:00:51.290
It doesn't log it off the bat.

16
00:00:51.290 --> 00:00:54.930
So start one, start two, and
then eventually logs it.

17
00:00:54.930 --> 00:00:57.255
So it gets past this and
then comes back and does it.

18
00:00:57.255 --> 00:00:59.990
Cuz it's waiting for
when this is ready to log that.

19
00:00:59.990 --> 00:01:03.890
It just says delay this for
when you're here.

20
00:01:03.890 --> 00:01:06.940
And I get the post and
it will show up there.

21
00:01:06.940 --> 00:01:11.580
So this is incredibly useful for
API calls and

22
00:01:11.580 --> 00:01:15.240
such, to where you're
actually getting things and

23
00:01:15.240 --> 00:01:19.020
then mapping over them without having
to do all this callback stuff.

24
00:01:20.280 --> 00:01:21.880
And so I'll get the title here.

25
00:01:21.880 --> 00:01:23.540
Get back to normal.

26
00:01:23.540 --> 00:01:25.290
So we get the title from the post.

27
00:01:25.290 --> 00:01:25.910
Everything is good.

28
00:01:27.180 --> 00:01:31.236
Exercise two, same old same old,
just going to,

29
00:01:31.236 --> 00:01:35.030
it says use one to extend the computation.

30
00:01:35.030 --> 00:01:37.061
That's a good point that I wanted to show.

31
00:01:37.061 --> 00:01:38.770
So I'll map render over that.

32
00:01:38.770 --> 00:01:44.640
I'm just doing this pattern over and
over again, basically.

33
00:01:44.640 --> 00:01:48.840
But the idea is that this
thing gets the post's title.

34
00:01:49.950 --> 00:01:56.490
And it doesn't do anything but return me a
future that I can eventually fork, right?

35
00:01:57.630 --> 00:01:59.940
So, if I want to just extend it, I can.

36
00:02:01.160 --> 00:02:05.180
So, if you have a widget on a page and

37
00:02:05.180 --> 00:02:08.300
that page is gonna go make an API,
call JSONP, whatever.

38
00:02:08.300 --> 00:02:12.580
And then come back with stuff, and
then we do some IO and whatever.

39
00:02:12.580 --> 00:02:15.100
If your widget returns me and
IO of a future.

40
00:02:15.100 --> 00:02:16.440
I could take your widget an extend it and

41
00:02:16.440 --> 00:02:19.250
build upon it without ever running or
forking it.

42
00:02:19.250 --> 00:02:22.085
That would be awesome if more
people knew how to do that,

43
00:02:22.085 --> 00:02:25.730
cuz I would be able to make bigger
better widgets out of your widgets.

44
00:02:25.730 --> 00:02:27.160
But people don't do that.

45
00:02:27.160 --> 00:02:30.170
They're just gonna run,
and blow up your page.

46
00:02:30.170 --> 00:02:34.770
So the idea is you're making these lazy
computations that can be extended, and so

47
00:02:34.770 --> 00:02:39.339
we're extending our exercise
one to put that title in a div.

48
00:02:40.740 --> 00:02:47.290
We did both of these, and then finally
the third one, these are interesting,

49
00:02:47.290 --> 00:02:51.110
just to see over in our output here,
I have to click it to run it.

50
00:02:52.400 --> 00:02:57.310
So let's go here it says, click
the output and then click the div to run

51
00:02:57.310 --> 00:03:02.510
the test and all we're saying is, we
wanna return a stream of the inner HTML.

52
00:03:02.510 --> 00:03:07.130
So it got these clicks, and I want to
return a stream to the inner HTML.

53
00:03:07.130 --> 00:03:10.230
Well I got the e.target.innerHTML.

54
00:03:10.230 --> 00:03:11.240
What do I gotta do?

55
00:03:11.240 --> 00:03:16.090
Why don't I just get the e, or the target.

56
00:03:17.460 --> 00:03:22.740
And we'll the call, whoops,
this is all backwards.

57
00:03:22.740 --> 00:03:24.160
Get the target.

58
00:03:24.160 --> 00:03:28.690
And then, I don't think I have
a nice enter HTML function, do I?

59
00:03:28.690 --> 00:03:32.135
So, we'll probably just have to,
what I'll do here instead,

60
00:03:32.135 --> 00:03:36.342
cuz I don't have a nice little function,
is to say clicks.map, and

61
00:03:36.342 --> 00:03:39.560
I'll have our click or event.

62
00:03:40.820 --> 00:03:43.820
And I'm just going to grab
the target on inner HTML.

63
00:03:43.820 --> 00:03:48.730
Great, don't forget to return.

64
00:03:48.730 --> 00:03:55.430
And now I have the inner HTML stream.

65
00:03:55.430 --> 00:03:57.590
So, whenever I do that, boom.

66
00:03:57.590 --> 00:03:59.470
Let me run it.

67
00:03:59.470 --> 00:04:03.850
It still works great.

68
00:04:03.850 --> 00:04:10.060
And the last thing is exercise four.

69
00:04:10.060 --> 00:04:11.200
Exercise five is bonus.

70
00:04:11.200 --> 00:04:13.740
You guys can play with that later.

71
00:04:13.740 --> 00:04:15.190
No, I have to do exercise five.

72
00:04:15.190 --> 00:04:17.040
Let's skip four and do five.

73
00:04:17.040 --> 00:04:20.365
Okay, [LAUGH] this video
is just gonna be me

74
00:04:20.365 --> 00:04:23.880
mumbling to myself while
I do this example.

75
00:04:25.400 --> 00:04:28.490
We can do four,
it's just we're running low on time and

76
00:04:28.490 --> 00:04:30.880
it's the same as this one above,
basically.

77
00:04:33.270 --> 00:04:36.629
So, five is a crazy one, you guys.

78
00:04:39.620 --> 00:04:40.640
Let's look at this.

79
00:04:40.640 --> 00:04:43.585
So the example is to say,
get me, use safeGet,

80
00:04:43.585 --> 00:04:46.900
we've seen safeGet in other examples.

81
00:04:46.900 --> 00:04:48.080
It says,

82
00:04:48.080 --> 00:04:54.020
we're gonna safely get the address
which returns of some maybe address.

83
00:04:54.020 --> 00:04:57.060
And then we wanna safely get the street,
so

84
00:04:57.060 --> 00:05:00.170
I have to get the address then the street.

85
00:05:00.170 --> 00:05:00.820
And then it's name.

86
00:05:00.820 --> 00:05:02.310
I actually have to get the street name.

87
00:05:02.310 --> 00:05:03.310
That's gonna be intense.

88
00:05:03.310 --> 00:05:04.780
Okay, why not.

89
00:05:04.780 --> 00:05:09.101
All right, so I'll safeget the address.

90
00:05:09.101 --> 00:05:10.990
That's great.

91
00:05:10.990 --> 00:05:13.789
What do I have here right now,
after I safely got the address?

92
00:05:15.480 --> 00:05:18.060
I have a maybe of this objects.

93
00:05:19.130 --> 00:05:20.792
Okay, are you guys seeing that?

94
00:05:20.792 --> 00:05:23.930
Once I safe get the address,
I get a maybe of the address.

95
00:05:23.930 --> 00:05:24.440
No big deal.

96
00:05:24.440 --> 00:05:27.345
We've seen that million times.

97
00:05:27.345 --> 00:05:30.522
But when I safe get, or
I have to map over that, right?

98
00:05:30.522 --> 00:05:32.672
I have to map over maybe.

99
00:05:32.672 --> 00:05:38.720
And if I safe get the street,
what do I have here?

100
00:05:38.720 --> 00:05:40.040
Let's actually look at this.

101
00:05:40.040 --> 00:05:40.920
Let's go play with this.

102
00:05:42.620 --> 00:05:50.140
It expected a maybe, maybe Walnut Street,
and I've got a maybe, maybe object.

103
00:05:50.140 --> 00:05:54.962
I've got a maybe and a maybe because
the safe get gave me a maybe, and

104
00:05:54.962 --> 00:05:59.130
then I mapped over that maybe,
which return me another maybe.

105
00:05:59.130 --> 00:06:01.864
So I have a maybe and
a maybe, it's ridiculous.

106
00:06:01.864 --> 00:06:04.576
&gt;&gt; Speaker 3: You have a maybe imposed?

107
00:06:04.576 --> 00:06:06.995
&gt;&gt; Brian Lonsdorf: What was that?
&gt;&gt; Speaker 3: Or a map imposed?

108
00:06:06.995 --> 00:06:10.300
&gt;&gt; Brian Lonsdorf: Well,
you can't really squash these guys yet.

109
00:06:10.300 --> 00:06:14.690
We don't have any tools to make
it one maybe, like flatten it.

110
00:06:14.690 --> 00:06:19.430
So what I wanna do is,
I've got my safe get street.

111
00:06:19.430 --> 00:06:24.711
And now I could do my map walnut,

112
00:06:24.711 --> 00:06:29.810
or yeah, safe get, our name.

113
00:06:29.810 --> 00:06:30.690
There we go.

114
00:06:30.690 --> 00:06:33.374
We've got this going, wait no,
that's a maybe and a maybe so

115
00:06:33.374 --> 00:06:35.420
I have to map map that, that's fine.

116
00:06:35.420 --> 00:06:36.840
We're getting there.

117
00:06:36.840 --> 00:06:37.850
We run it.

118
00:06:37.850 --> 00:06:40.958
I actually think I wrote the test wrong,
you guys.

119
00:06:40.958 --> 00:06:41.630
Sorry about that.

120
00:06:41.630 --> 00:06:44.230
It's got three maybe to
get the right answer.

121
00:06:44.230 --> 00:06:45.585
So three maybe, maybe, maybe.

122
00:06:45.585 --> 00:06:48.020
I'll fix that one.

123
00:06:48.020 --> 00:06:49.638
It was bound to happen, I'm not perfect.

124
00:06:49.638 --> 00:06:57.130
[LAUGH]
All right.

125
00:06:57.130 --> 00:06:58.100
How do you solve that?

126
00:06:58.100 --> 00:06:59.200
What is going on here?

127
00:06:59.200 --> 00:07:00.830
We've got maybe, maybe, maybe.

128
00:07:00.830 --> 00:07:05.382
We've got this pattern of map,
then map map,

129
00:07:05.382 --> 00:07:09.520
then this is super weird and gross.

130
00:07:09.520 --> 00:07:12.970
What's happening is we're,
we've got three null checks going on.

131
00:07:12.970 --> 00:07:17.680
I don't know why this isn't equal,
also a test problem.

132
00:07:17.680 --> 00:07:20.320
But we have three null checks going on.

133
00:07:20.320 --> 00:07:21.910
We can see that blatantly.

134
00:07:23.120 --> 00:07:26.070
If there are three possible
things that could be you null,

135
00:07:26.070 --> 00:07:29.580
I'm getting three possible
maybe's nested inside each other.

136
00:07:29.580 --> 00:07:31.780
This is a sequence, this is nesting.

137
00:07:31.780 --> 00:07:35.090
I said if not null do this, if not
null do that, if not null do that, and

138
00:07:35.090 --> 00:07:39.430
keep nesting this giant gross nested and
null check, that's what that is.

139
00:07:43.780 --> 00:07:44.670
That is a monad.

