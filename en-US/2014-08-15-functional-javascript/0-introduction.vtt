WEBVTT

1
00:00:00.000 --> 00:00:10.000
[MUSIC]

2
00:00:39.254 --> 00:00:40.829
&gt;&gt; Joe Nelson: All right,
welcome for real.

3
00:00:40.829 --> 00:00:41.761
&gt;&gt; [LAUGH]
&gt;&gt; Joe Nelson: So

4
00:00:41.761 --> 00:00:45.000
all these people here is
full of nice people online.

5
00:00:45.000 --> 00:00:48.650
I think it's really cool cuz what
we're coming here to show you

6
00:00:48.650 --> 00:00:52.910
is a really fun technique of programming
in general not just in JavaScript and

7
00:00:52.910 --> 00:00:55.840
only lately has it come
to the JavaScript world.

8
00:00:55.840 --> 00:00:59.650
But through the exercises we're gonna do
today and doing it in JavaScript is gonna

9
00:00:59.650 --> 00:01:03.640
prepare you to do it in all kinds
of languages like Haskel and

10
00:01:03.640 --> 00:01:06.610
Scala and Closure and
all that kind of thing.

11
00:01:06.610 --> 00:01:10.470
And in fact, the title was hard
core functional programming, so

12
00:01:10.470 --> 00:01:12.520
of course we took our
stuff from House School.

13
00:01:12.520 --> 00:01:14.370
The most hard core of all this stuff and

14
00:01:14.370 --> 00:01:16.650
we're going to use a style
like that in our thing.

15
00:01:16.650 --> 00:01:21.550
So, in general I think if I were to
like distill into like one message

16
00:01:21.550 --> 00:01:26.180
about the theme of everything we're doing
is the soul of functional programming, and

17
00:01:26.180 --> 00:01:29.720
maybe programming in general,
is separating the concerns of what you're

18
00:01:29.720 --> 00:01:34.510
doing and recognizing when those
separations are happening.

19
00:01:34.510 --> 00:01:37.920
We're used to just kind of
being real programmers and

20
00:01:37.920 --> 00:01:42.030
just doing everything at once like
you've got tests you're doing,

21
00:01:42.030 --> 00:01:44.310
and things you're writing and
things are changing.

22
00:01:44.310 --> 00:01:48.660
And I think we need to separate what we're
doing or if we separate what we're doing

23
00:01:48.660 --> 00:01:51.620
it becomes a lot easier to recognize
patterns that happen again and again.

24
00:01:51.620 --> 00:01:53.020
So you don't have to write them again and
again.

25
00:01:53.020 --> 00:01:55.390
The way that your
libraries can be built and

26
00:01:55.390 --> 00:01:58.690
the way they can compose
gets a lot stronger.

27
00:01:58.690 --> 00:02:00.650
So I'm not gonna be
yapping the whole time.

28
00:02:00.650 --> 00:02:01.780
It's just how it's gonna start and

29
00:02:01.780 --> 00:02:04.870
it's gonna be like it's an exercise we
are getting into and it's gonna be fun.

30
00:02:04.870 --> 00:02:08.420
So this is kind of the general
structure of the course.

31
00:02:08.420 --> 00:02:10.230
I'm gonna be teaching the silence.

32
00:02:10.230 --> 00:02:14.140
So this is the first bit and
with the tools in the silence the silence

33
00:02:14.140 --> 00:02:17.470
is going to deal with the way we
recognize and separate things.

34
00:02:17.470 --> 00:02:21.740
You're gonna be writing code that's so
pure and so good.

35
00:02:21.740 --> 00:02:24.220
Brian is gonna take you on The Voyage,

36
00:02:24.220 --> 00:02:27.140
which is where we take the code
that you wrote in this new style.

37
00:02:27.140 --> 00:02:31.440
And you could take code that doesn't know
things about the disk or the network or

38
00:02:31.440 --> 00:02:34.720
whatever, and
just transport it in these little vessels

39
00:02:34.720 --> 00:02:36.939
to do whole new things
in a whole new land.

40
00:02:38.270 --> 00:02:39.900
And finally the demo.

41
00:02:39.900 --> 00:02:42.945
We're going to live code and
just stumble over ourselves and

42
00:02:42.945 --> 00:02:45.998
it's gonna be a lot of fun and
make a real app using the stuff.

43
00:02:45.998 --> 00:02:50.067
So, let's begin at the beginning.

44
00:02:50.067 --> 00:02:54.047
In the beginning it was primordial
soup that's the way I think of it,

45
00:02:54.047 --> 00:02:55.440
just anything goes.

46
00:02:55.440 --> 00:02:58.180
If you look at this stuff,
it's like printing and testing and

47
00:02:58.180 --> 00:03:01.010
go to and like yeah we get to do
a thing because we're so good and

48
00:03:01.010 --> 00:03:03.900
we're so real and we're just
proud of all the stuff we can do.

49
00:03:03.900 --> 00:03:08.700
So, I mean surprisingly when people
were arguing you know this go to thing,

50
00:03:08.700 --> 00:03:12.340
it seems kind of wild west,
it seems like can be confusing.

51
00:03:12.340 --> 00:03:15.040
Like people like Dykes were saying
that everyone's like now we can

52
00:03:15.040 --> 00:03:16.460
handle it you know.

53
00:03:16.460 --> 00:03:19.690
So you end up with a lot of names and

54
00:03:19.690 --> 00:03:22.400
changing like you know you're
changing variables of things.

55
00:03:22.400 --> 00:03:25.070
You trying to track down to
direct things in the right order.

56
00:03:25.070 --> 00:03:25.830
When did this happen?

57
00:03:25.830 --> 00:03:29.790
And so like I said the slide advances.

58
00:03:29.790 --> 00:03:32.530
Some people were like go to
is kind of a bad idea and

59
00:03:32.530 --> 00:03:36.220
in general we should be more
disciplined in the code that we write.

60
00:03:36.220 --> 00:03:40.206
So exercising restraint can feel weird.

61
00:03:40.206 --> 00:03:43.508
So there's gonna be things that we show
you examples that you might be like,

62
00:03:43.508 --> 00:03:45.320
man this is kind of weird,

63
00:03:45.320 --> 00:03:48.610
like couldn't I just do this in like
a line or whatever in some other way.

64
00:03:48.610 --> 00:03:51.020
And when Brian takes you on the journey,
then you could be like,

65
00:03:51.020 --> 00:03:53.420
look how nicely this fits
in with my sailing ship.

66
00:03:53.420 --> 00:03:55.590
And once I'd like written it this way so
I can go on the journey.

67
00:03:57.190 --> 00:04:01.420
So there's like,
I was saying go to is kind of weird.

68
00:04:01.420 --> 00:04:04.612
And nowadays we might look back to be
like yeah, those were the Dark Ages, man.

69
00:04:04.612 --> 00:04:07.834
Like think of the stuff they were doing
back then, go, I wouldn't do a go to.

70
00:04:07.834 --> 00:04:12.335
We know so much more but I feel in a way
like we're still in the go to age we just

71
00:04:12.335 --> 00:04:14.850
have different things that bug us.

72
00:04:14.850 --> 00:04:17.160
And when you're in the day to day.

73
00:04:17.160 --> 00:04:20.120
It's hard to like notice that yeah this
is like something that can change,

74
00:04:20.120 --> 00:04:22.300
this is something we
don't have to live with.

75
00:04:22.300 --> 00:04:26.130
And I think the way it manifests itself
to me at least like these are some

76
00:04:26.130 --> 00:04:28.260
things some symptoms I feel I'm coding and

77
00:04:28.260 --> 00:04:31.460
it's like this is telling me yeah I
should be separating what's going on.

78
00:04:31.460 --> 00:04:34.740
So like custom names
everywhere like having

79
00:04:34.740 --> 00:04:36.430
loops with weird names
which will get into.

80
00:04:38.320 --> 00:04:41.540
Doing loops again and again, I mean
probably this is like the pre recs of

81
00:04:41.540 --> 00:04:45.010
the course we're knowing something about
map and reduce and filter and things.

82
00:04:45.010 --> 00:04:47.970
And if you know about those you're like
yeah a lot of the loops I see are really

83
00:04:47.970 --> 00:04:48.990
just one of those.

84
00:04:48.990 --> 00:04:52.450
But I just happen to put an index
called I and I'm looping over stuff and

85
00:04:52.450 --> 00:04:54.000
it's kind of irrelevant.

86
00:04:54.000 --> 00:04:58.030
So looping patterns glue code
which is like which we'll see.

87
00:04:58.030 --> 00:05:01.740
We're putting functions together and
we like needing to come up with more names

88
00:05:01.740 --> 00:05:05.410
for the arguments of things like it just
the way things glued together is very.

89
00:05:05.410 --> 00:05:09.404
Even down to like in my opinion some MBC
stuff where you have to make controllers

90
00:05:09.404 --> 00:05:13.154
that duplicate the names of things in
your database is just a lot of glue and

91
00:05:13.154 --> 00:05:14.320
a lot of duplication.

92
00:05:14.320 --> 00:05:18.522
And finally side effects which are similar
to go to I guess we have to remember

93
00:05:18.522 --> 00:05:21.030
what's going on and
keep track of our stuff.

94
00:05:22.180 --> 00:05:26.722
So talking about the names,
this is just a word cloud I generated from

95
00:05:26.722 --> 00:05:31.265
some random Ruby library liaison
object oriented lots of files, and

96
00:05:31.265 --> 00:05:33.247
these are just names from it.

97
00:05:33.247 --> 00:05:37.156
And what I've noticed is that the names
that appear a lot happen because

98
00:05:37.156 --> 00:05:41.400
they're like do block which is like
a ruby loop you know like each do.

99
00:05:41.400 --> 00:05:45.590
Apparently it's going through like
lines of files and repositories and

100
00:05:45.590 --> 00:05:48.520
stuff is modified because
there's a lot of stuff changing.

101
00:05:48.520 --> 00:05:51.940
So like when I see these words
themselves are suggesting to me like

102
00:05:51.940 --> 00:05:53.320
yeah this could be improved.

