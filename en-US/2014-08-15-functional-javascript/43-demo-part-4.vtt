WEBVTT

1
00:00:04.960 --> 00:00:05.935
&gt;&gt; Joe Nelson: So, we could do,

2
00:00:05.935 --> 00:00:10.430
the only thing they give in when we call
these results or something, or just JSON.

3
00:00:12.710 --> 00:00:15.200
We can get the entries, but
they call entries out of it.

4
00:00:15.200 --> 00:00:17.540
Let's just say get the entries.

5
00:00:18.900 --> 00:00:22.268
We really want that the URLs of
each video, as we were going along.

6
00:00:22.268 --> 00:00:27.133
So feed,

7
00:00:27.133 --> 00:00:31.400
entry.

8
00:00:31.400 --> 00:00:36.326
And for each of these,
you're gonna pull out ID,

9
00:00:36.326 --> 00:00:40.068
t.
&gt;&gt; Joe Nelson: Okay,

10
00:00:40.068 --> 00:00:43.231
well let's do it.
&gt;&gt; Speaker 2: One other thing,

11
00:00:43.231 --> 00:00:45.928
somebody said this makes him want to
learn Haskell and I'm like, yeah.

12
00:00:45.928 --> 00:00:47.523
Everybody was yeah.
&gt;&gt; Joe Nelson: Yay.

13
00:00:47.523 --> 00:00:48.808
&gt;&gt; Speaker 2: But you can't just go to

14
00:00:48.808 --> 00:00:52.671
work tomorrow and be like,
let's use Haskell for our next project.

15
00:00:52.671 --> 00:00:56.161
They'll be like, okay, well, we might
as well just go bankrupt right now,

16
00:00:56.161 --> 00:00:59.620
because how many barriers is there
to learning Haskell is there?

17
00:00:59.620 --> 00:01:03.570
But this is cool because you can mix this
with your normal day to day stuff, and

18
00:01:03.570 --> 00:01:05.220
get really good and learn it.

19
00:01:05.220 --> 00:01:07.733
When we go to Haskell this is,
we're writing basically Haskell

20
00:01:07.733 --> 00:01:09.757
code right there.
&gt;&gt; Joe Nelson: This is verbose Haskell.

21
00:01:09.757 --> 00:01:10.982
&gt;&gt; Speaker 2: Yeah, verbose Haskell.

22
00:01:10.982 --> 00:01:13.155
[LAUGH]
&gt;&gt; Joe Nelson: So I can't do dot.

23
00:01:13.155 --> 00:01:16.800
I have to say chain.the, it's long.
&gt;&gt; Speaker 2: All the same types, all

24
00:01:16.800 --> 00:01:20.300
the same laws, all the same constructs.
&gt;&gt; Joe Nelson: There's no dupe logs to

25
00:01:20.300 --> 00:01:22.050
just go down the monads real easily.
&gt;&gt; Speaker 2: Yeah.

26
00:01:22.050 --> 00:01:22.910
&gt;&gt; Joe Nelson: Haskell's like the spirit

27
00:01:22.910 --> 00:01:30.200
of this, but written in this much space.
&gt;&gt; Joe Nelson: Okay.

28
00:01:30.200 --> 00:01:33.410
Get off my high horse and write some code.

29
00:01:33.410 --> 00:01:37.850
I'm gonna do something that maps over.

30
00:01:39.520 --> 00:01:42.160
I guess we got to get the entries and
plug some stuff out.

31
00:01:42.160 --> 00:01:46.002
What do you want to call this thing?

32
00:01:46.002 --> 00:01:51.419
VideoURLs, and it takes the,
or it just takes JSON.

33
00:01:53.210 --> 00:01:58.700
Then it goes to a bunch of URLs.

34
00:02:00.190 --> 00:02:02.357
We'll see if this is more than
we can chew with this one.

35
00:02:08.559 --> 00:02:10.260
&gt;&gt; Joe Nelson: Okay, so

36
00:02:10.260 --> 00:02:14.520
we want to get compose.

37
00:02:16.120 --> 00:02:19.980
Get in reverse order T.

38
00:02:21.450 --> 00:02:26.380
Over this one of them left a map again,
because entry's an array, and

39
00:02:26.380 --> 00:02:29.012
an array is just a as we know.

40
00:02:29.012 --> 00:02:32.830
I'm going to write it in reverse, because
I'm thinking I'll just be using pipe.

41
00:02:32.830 --> 00:02:37.010
So in reverse,
you have to get your good feed.

42
00:02:37.010 --> 00:02:41.770
And when we have feed,
we're gonna get entries.

43
00:02:43.030 --> 00:02:46.730
I think our entry here.
&gt;&gt; Speaker 2: Underscore.get.

44
00:02:46.730 --> 00:02:48.440
&gt;&gt; Joe Nelson: Thanks.

45
00:02:48.440 --> 00:02:49.720
&gt;&gt; Speaker 2: You're at manual JSON.

46
00:02:49.720 --> 00:02:51.540
&gt;&gt; Joe Nelson: This is just great.

47
00:02:51.540 --> 00:02:53.380
&gt;&gt; Speaker 3: Hey, hey, I'm warning.

48
00:02:54.715 --> 00:02:58.833
&gt;&gt; Joe Nelson: [SOUND].

49
00:02:58.833 --> 00:03:03.088
[SOUND] Okay.

50
00:03:03.088 --> 00:03:09.410
We got that, and we're going to map
over this because it's an array.

51
00:03:09.410 --> 00:03:12.430
And it's gonna be another compose.

52
00:03:12.430 --> 00:03:13.833
It's kind of nasty.
&gt;&gt; Speaker 2: Yeah,

53
00:03:13.833 --> 00:03:18.688
it'll pull it out anyway, just to do it.
&gt;&gt; Joe Nelson: Yeah, okay-

54
00:03:18.688 --> 00:03:20.318
&gt;&gt; Speaker 2: Just write a function

55
00:03:20.318 --> 00:03:24.040
there and
just be like what are we having get the?

56
00:03:24.040 --> 00:03:25.070
&gt;&gt; Joe Nelson: It's gonna be

57
00:03:25.070 --> 00:03:25.690
called getURL?

58
00:03:25.690 --> 00:03:27.760
Get entry URL?
&gt;&gt; Speaker 2: I think we did this,

59
00:03:27.760 --> 00:03:31.500
before we did entryToLi right there.

60
00:03:31.500 --> 00:03:34.848
We could do URLs here and
then In turn URLs.

61
00:03:34.848 --> 00:03:36.400
Yeah, let's do that way.

62
00:03:36.400 --> 00:03:40.410
No because before we hit that problem,
the entry had all this data on it.

63
00:03:40.410 --> 00:03:43.060
And we just wanted to use a normal
function right there and get it all out.

64
00:03:43.060 --> 00:03:44.230
We don't want to like lose stuff.

65
00:03:45.248 --> 00:03:46.963
No we can do that with the URL.
&gt;&gt; Joe Nelson: I just want the URL,

66
00:03:46.963 --> 00:03:48.638
ultimately.
&gt;&gt; Speaker 2: But

67
00:03:48.638 --> 00:03:51.672
you want the title in the LI.
&gt;&gt; Joe Nelson: You're right

68
00:03:51.672 --> 00:03:53.790
about the title too.
&gt;&gt; Speaker 2: That's great.

69
00:03:53.790 --> 00:03:55.010
I appreciate it.

70
00:03:55.010 --> 00:03:59.120
Little secret knowledge, we've built
this before as a test to make sure we

71
00:03:59.120 --> 00:04:01.120
weren't gonna be embarrassed.
&gt;&gt; Joe Nelson: And

72
00:04:01.120 --> 00:04:03.141
we're still embarrassed.
&gt;&gt; Speaker 2: [LAUGH] It's still

73
00:04:03.141 --> 00:04:04.260
embarrassing.

74
00:04:04.260 --> 00:04:05.480
Stupid YouTube baby.

75
00:04:05.480 --> 00:04:06.810
What kinda response is that?

76
00:04:06.810 --> 00:04:09.230
This is the most ridiculous
response I've ever seen.

77
00:04:09.230 --> 00:04:16.360
I wanna know who's responsible for $t.
&gt;&gt; Joe Nelson: Okay.

78
00:04:16.360 --> 00:04:17.050
All right.

79
00:04:17.050 --> 00:04:22.010
So, we'll get it eventually,
but this will be curated,

80
00:04:22.010 --> 00:04:26.928
just those things in it, the URL and the.
&gt;&gt; Speaker 2: What we did last time was we

81
00:04:26.928 --> 00:04:28.480
just turned it directly in a ratio,

82
00:04:28.480 --> 00:04:33.230
because it was really convenient
to make a dom element with

83
00:04:33.230 --> 00:04:37.380
the title as the HTML, I mean.
&gt;&gt; Joe Nelson: So

84
00:04:37.380 --> 00:04:41.710
rather than take this thing, sanitize it
so that it only has what we want, and

85
00:04:41.710 --> 00:04:45.490
then take that sanitized thing to make
our HTML, we could just go straight

86
00:04:45.490 --> 00:04:50.310
from the whole thing to HTML format,
the stuff that we need.

87
00:04:50.310 --> 00:04:51.160
Okay.
&gt;&gt; Speaker 2: Probably

88
00:04:51.160 --> 00:04:53.370
after we get these results,
which is probably the last step

89
00:04:53.370 --> 00:04:56.460
before we should probably
start wrapping it up, I think.

90
00:04:56.460 --> 00:04:57.600
Unless we want to go for the player, but

91
00:04:57.600 --> 00:04:59.070
it's already five.
&gt;&gt; Joe Nelson: Okay.

92
00:04:59.070 --> 00:05:00.980
&gt;&gt; Speaker 2: We could probably do it.

93
00:05:00.980 --> 00:05:03.430
&gt;&gt; Joe Nelson: Or what we could do is

94
00:05:03.430 --> 00:05:04.820
finish this last thought.

95
00:05:04.820 --> 00:05:08.610
Jump to the last commit, start examining
things along the way and see it in action,

96
00:05:08.610 --> 00:05:12.080
cuz you gotta see it happening.
&gt;&gt; Students: [CROSSTALK] [LAUGH]

97
00:05:12.080 --> 00:05:12.580
&gt;&gt; Speaker 2: Yes,

98
00:05:12.580 --> 00:05:17.230
you've been building it up all this time.
&gt;&gt; Joe Nelson: Yeah, okay, so

99
00:05:17.230 --> 00:05:19.250
we want to do entryToLi, right?
&gt;&gt; Speaker 2: Yeah.

100
00:05:19.250 --> 00:05:24.691
Somebody is very unsatisfied [INAUDIBLE].
&gt;&gt; Joe Nelson: Uh-oh.

101
00:05:24.691 --> 00:05:28.218
&gt;&gt; Speaker 2: It's because I didn't get to

102
00:05:28.218 --> 00:05:32.371
[INAUDIBLE] I think.
&gt;&gt; [INAUDIBLE]

103
00:05:32.371 --> 00:05:33.345
&gt;&gt; Speaker 5: I never.

104
00:05:35.057 --> 00:05:35.655
&gt;&gt; Speaker 5: But we'll talk

105
00:05:35.655 --> 00:05:36.216
about later.

106
00:05:36.216 --> 00:05:37.939
&gt;&gt; Speaker 2: [LAUGH]
&gt;&gt; Joe Nelson: Okay.

107
00:05:40.335 --> 00:05:41.181
&gt;&gt; Joe Nelson: Great, for

108
00:05:41.181 --> 00:05:44.310
I think function will have an entry.

109
00:05:44.310 --> 00:05:50.064
And an entry will be one of
these things which are cool,

110
00:05:50.064 --> 00:05:56.708
which will have an idea, great,
great, great, and a title.

111
00:05:56.708 --> 00:06:01.911
So let's make, sorry,
what do you thinking?

112
00:06:01.911 --> 00:06:03.700
I probably have to write
an actual function.

113
00:06:03.700 --> 00:06:04.730
&gt;&gt; Speaker 2: Yeah, just write a function

114
00:06:04.730 --> 00:06:06.820
that just makes the jQuery element.

115
00:06:06.820 --> 00:06:10.400
We did this before, and it was like,
this is too much trouble.

116
00:06:10.400 --> 00:06:13.320
It took the entry-
&gt;&gt; Joe Nelson: I feel like I don't have

117
00:06:13.320 --> 00:06:13.850
free will.

118
00:06:13.850 --> 00:06:15.995
When I do a problem twice,
I do it the same way.

119
00:06:15.995 --> 00:06:16.700
&gt;&gt; Speaker 2: [LAUGH]

120
00:06:16.700 --> 00:06:17.710
&gt;&gt; Joe Nelson: The same hesitation.

121
00:06:17.710 --> 00:06:18.240
&gt;&gt; Speaker 2: I don't know.

122
00:06:18.240 --> 00:06:18.970
It's a little different.

123
00:06:20.010 --> 00:06:24.210
But we wanna do the LI with the,

124
00:06:24.210 --> 00:06:29.460
we used the JQuery constructor, cuz we
had problems, the data [INAUDIBLE] thing?

125
00:06:29.460 --> 00:06:31.120
I see, you're just gonna do, okay.
&gt;&gt; Joe Nelson: Yeah,

126
00:06:31.120 --> 00:06:31.870
you know what I'm gonna do?

127
00:06:31.870 --> 00:06:33.180
That's a much better idea.

128
00:06:33.180 --> 00:06:36.613
That's a very much better idea.

129
00:06:36.613 --> 00:06:38.452
We're gonna make-
&gt;&gt; Speaker 2: [CROSSTALK]

130
00:06:38.452 --> 00:06:40.984
&gt;&gt; Joe Nelson: HTML.

131
00:06:40.984 --> 00:06:42.810
Wait a second, so you make this right?

132
00:06:42.810 --> 00:06:44.610
And then we add stuff to it?
&gt;&gt; Speaker 2: Or

133
00:06:44.610 --> 00:06:46.190
you could just give it an object
&gt;&gt; [INAUDIBLE]

134
00:06:46.190 --> 00:06:49.430
&gt;&gt; Joe Nelson: Nice, that's so nice.

135
00:06:49.430 --> 00:06:54.007
&gt;&gt; Speaker 2: You do text and

136
00:06:54.007 --> 00:07:00.572
data.
&gt;&gt; Joe Nelson: elt.id.ot?

137
00:07:00.572 --> 00:07:01.319
&gt;&gt; Speaker 2: Yeah.

138
00:07:01.319 --> 00:07:01.916
&gt;&gt; Joe Nelson: Yes.

139
00:07:01.916 --> 00:07:04.458
Okay.

140
00:07:04.458 --> 00:07:09.140
And also, and text goes to alt.title.T.

141
00:07:09.140 --> 00:07:12.965
Well, so much for

142
00:07:12.965 --> 00:07:18.070
our composable stuff.

143
00:07:18.070 --> 00:07:19.740
Okay.
Maybe we should, all right.

144
00:07:19.740 --> 00:07:26.409
So now it's right here,
our video, the Lis.

145
00:07:28.200 --> 00:07:34.202
Wait.
&gt;&gt; Joe Nelson: What

146
00:07:34.202 --> 00:07:36.840
was this before the URLs?

147
00:07:36.840 --> 00:07:38.150
So we have,
what's coming through right now?

148
00:07:38.150 --> 00:07:45.010
It's a stream of results
of actual API result.

149
00:07:45.010 --> 00:07:49.530
We want to find the right
spot enough through it, and

150
00:07:49.530 --> 00:07:53.995
then make HTML after that.
&gt;&gt; Speaker 2: They're worried about us

151
00:07:53.995 --> 00:07:55.850
making an Li here.

152
00:07:55.850 --> 00:07:57.348
Yeah.
It's just easier, we don't have,

153
00:07:57.348 --> 00:08:00.250
we're not dealing with handlebars,
we're not going to bring handlebars.

154
00:08:00.250 --> 00:08:05.130
For one Li, this whole project,
or a data bindings or something.

155
00:08:05.130 --> 00:08:06.280
&gt;&gt; Joe Nelson: Yeah, another question.

156
00:08:06.280 --> 00:08:08.175
I was bringing it up before,
is this in pure?

157
00:08:08.175 --> 00:08:09.780
Making this thing?

158
00:08:09.780 --> 00:08:11.680
But in a way,
it's just kind of hanging out in memory,

159
00:08:11.680 --> 00:08:13.170
the way it knew whatever
object it would be.

160
00:08:13.170 --> 00:08:14.440
It's not attached to anything.

161
00:08:14.440 --> 00:08:16.100
It doesn't change anything.

162
00:08:16.100 --> 00:08:17.810
It's just hanging out
waiting to be applied.

163
00:08:17.810 --> 00:08:18.720
&gt;&gt; Speaker 2: Yeah, it's still cool.

164
00:08:18.720 --> 00:08:20.360
&gt;&gt; Joe Nelson: And it's not HTML anymore.

165
00:08:21.610 --> 00:08:22.700
&gt;&gt; Speaker 2: I think you need strings

166
00:08:22.700 --> 00:08:24.060
around that first property.

167
00:08:25.170 --> 00:08:26.810
Type data id.
&gt;&gt; Joe Nelson: Because of dash.

168
00:08:26.810 --> 00:08:31.339
All right, I wanna get to

169
00:08:31.339 --> 00:08:35.880
another visible thing.

170
00:08:43.570 --> 00:08:48.560
Brain is freezing.
&gt;&gt; Speaker 2: Why not

171
00:08:48.560 --> 00:08:52.360
just log the Lis instead of
logging the Lis that come out?

172
00:08:52.360 --> 00:08:56.010
Why don't we just call
some HTML with them, and

173
00:08:56.010 --> 00:08:59.811
we'll just to get a list of the YouTube?
&gt;&gt; Joe Nelson: Down

174
00:08:59.811 --> 00:09:06.104
here?
&gt;&gt; Speaker 2: The student

175
00:09:06.104 --> 00:09:11.498
log is the errors, so the other,
the right side of where it's going to be

176
00:09:11.498 --> 00:09:17.070
a success function, which is just
basically set HTML with our results to.

177
00:09:17.070 --> 00:09:20.326
I think the HTML is [CROSSTALK] lower.

178
00:09:20.326 --> 00:09:23.381
It's capital H.
&gt;&gt; Joe Nelson: Can I have to run IO

179
00:09:23.381 --> 00:09:25.110
here?
&gt;&gt; Speaker 2: No,

180
00:09:25.110 --> 00:09:27.380
we didn't put that in IO.

181
00:09:27.380 --> 00:09:33.110
Mainly because it's the end of the line,
there's no need to be pure at this point.

182
00:09:33.110 --> 00:09:35.670
So, I mean,
you're going through all these types.

183
00:09:35.670 --> 00:09:40.050
Everything above our whole op is pure,
and then we finally get our future back.

184
00:09:40.050 --> 00:09:42.040
Why would we put in an IO and
just take it right back out?

185
00:09:42.040 --> 00:09:44.620
That's silly, so we want to put it in IO.

186
00:09:44.620 --> 00:09:45.230
We certainly can.

187
00:09:45.230 --> 00:09:49.000
And then the next person can take up and
extend it, but we don't plan on doing that

188
00:09:49.000 --> 00:09:52.010
at this point which are in here.
&gt;&gt; Joe Nelson: Okay.

189
00:09:52.010 --> 00:09:57.137
So, set in H, okay, so
we need a new stream at this point,

190
00:09:57.137 --> 00:10:01.210
a stream of allies stay here.
&gt;&gt; Speaker 2: Getting the JSON from

191
00:10:01.210 --> 00:10:01.820
a search stream.

192
00:10:03.050 --> 00:10:04.150
And then.

193
00:10:04.150 --> 00:10:09.317
So we want to map over the search streams

194
00:10:09.317 --> 00:10:13.960
[INAUDIBLE]
&gt;&gt; Joe Nelson: Compose will be composing.

195
00:10:13.960 --> 00:10:15.054
&gt;&gt; Speaker 2: You guys are champs.

196
00:10:15.054 --> 00:10:17.140
Thanks for [INAUDIBLE] [LAUGH]
&gt;&gt; Joe Nelson: [INAUDIBLE] indeed.

197
00:10:17.140 --> 00:10:17.640
Hardcore.

198
00:10:19.230 --> 00:10:22.705
Okay.
&gt;&gt; Speaker 2: So

199
00:10:22.705 --> 00:10:23.670
entry.li.
&gt;&gt; Joe Nelson: Yeah.

200
00:10:23.670 --> 00:10:26.801
&gt;&gt; Speaker 2: And you're going to map over

201
00:10:26.801 --> 00:10:29.280
the search stream, or

202
00:10:29.280 --> 00:10:33.252
compose it with the search stream.
&gt;&gt; Joe Nelson: Yup.

203
00:10:33.252 --> 00:10:35.425
&gt;&gt; Speaker 2: Switch our search stream to

204
00:10:35.425 --> 00:10:39.290
our LI stream, we'll go and
see what happens.

205
00:10:39.290 --> 00:10:39.830
&gt;&gt; Joe Nelson: I have high

206
00:10:39.830 --> 00:10:40.806
hopes.
&gt;&gt; Speaker 2: Yeah

207
00:10:40.806 --> 00:10:41.900
[LAUGH].
&gt;&gt; Joe Nelson: Wait.

208
00:10:41.900 --> 00:10:48.581
My god, really?
&gt;&gt; Speaker 2: What is it not?

209
00:10:48.581 --> 00:10:51.670
[INAUDIBLE] What is our element there?
&gt;&gt; [INAUDIBLE]

210
00:10:51.670 --> 00:10:52.860
&gt;&gt; Speaker 6: Text doesn't need to be in

211
00:10:52.860 --> 00:10:54.060
quotes?
&gt;&gt; Joe Nelson: No,

212
00:10:54.060 --> 00:10:57.650
it's saying just like I
can't call $t undefined, so

213
00:10:57.650 --> 00:11:01.350
this ID, alt ID must be undefined.
&gt;&gt; Speaker 2: What's, what are we calling?

214
00:11:02.870 --> 00:11:07.800
Yes, it was this one,
this is a funny situation.

215
00:11:07.800 --> 00:11:11.690
So, what's happening in search is
returning a center of the future that

216
00:11:11.690 --> 00:11:13.930
we're mapping over, search stream.

217
00:11:13.930 --> 00:11:18.820
I'm sorry, it's returning as
it is an event stream, and

218
00:11:18.820 --> 00:11:21.510
then it's going to return us a future.

219
00:11:21.510 --> 00:11:23.920
And that future returns us an array.

220
00:11:23.920 --> 00:11:25.270
That's three functors deep.

221
00:11:25.270 --> 00:11:26.330
So we do map, map, map.

222
00:11:26.330 --> 00:11:28.660
Let's see what happens.
&gt;&gt; Joe Nelson: There's even more actually,

223
00:11:28.660 --> 00:11:33.070
because it's returning us the thing
that has feed, entry, whatever.

224
00:11:33.070 --> 00:11:35.170
We haven't even pulled that out.
&gt;&gt; Speaker 2: We haven't, yeah.

225
00:11:35.170 --> 00:11:36.906
&gt;&gt; Joe Nelson: It's deep in there.

226
00:11:36.906 --> 00:11:39.420
&gt;&gt; Speaker 2: So, once you do map,

227
00:11:39.420 --> 00:11:43.760
let's do result to LI, and
then we'll do that entryToLi, or

228
00:11:43.760 --> 00:11:48.000
resultToHTML.
&gt;&gt; Joe Nelson: Wait, result to-

229
00:11:48.000 --> 00:11:49.740
&gt;&gt; Speaker 2: Switch the entryToLi, and

230
00:11:49.740 --> 00:11:54.050
just make it resultToHTML.
&gt;&gt; Joe Nelson: Entry, okay.

231
00:11:54.050 --> 00:11:56.340
So make this resultToHTML.

232
00:11:56.340 --> 00:11:59.650
We don't have a resultToHTML, do we?
&gt;&gt; Speaker 2: Yeah, we'll just make that.

233
00:11:59.650 --> 00:12:02.600
We're just gonna basically be,
okay, we have a future here.

234
00:12:02.600 --> 00:12:06.770
We're gonna map over the future and-
&gt;&gt; Joe Nelson: What I feel like

235
00:12:06.770 --> 00:12:08.900
doing is at this point going to this-
&gt;&gt; Speaker 2: Yeah.

236
00:12:08.900 --> 00:12:10.260
&gt;&gt; Joe Nelson: And just showing the difs

237
00:12:10.260 --> 00:12:12.020
and commenting briefly on what

238
00:12:12.020 --> 00:12:13.040
happened in each dif.
&gt;&gt; Speaker 2: Yeah.

239
00:12:13.040 --> 00:12:14.350
&gt;&gt; Joe Nelson: Because you can see the

240
00:12:14.350 --> 00:12:18.130
flavor, and the rest is just us debugging.
&gt;&gt; Speaker 2: [LAUGH] Yeah, that's right,

241
00:12:18.130 --> 00:12:18.920
[INAUDIBLE].

242
00:12:18.920 --> 00:12:20.371
Get there.
&gt;&gt; Joe Nelson: I like that, so

243
00:12:20.371 --> 00:12:22.485
I'll do that.
&gt;&gt; Speaker 2: We get to see the pain of us

244
00:12:22.485 --> 00:12:26.844
trying to open up types, that's the same
pain that's trying to compose callbacks

245
00:12:26.844 --> 00:12:27.732
and callbacks.

246
00:12:27.732 --> 00:12:28.486
&gt;&gt; Joe Nelson: Yeah.
&gt;&gt; Speaker 2: Not really.

247
00:12:28.486 --> 00:12:29.256
&gt;&gt; Joe Nelson: I'm having to debug,

248
00:12:29.256 --> 00:12:31.607
nothing's, normally gets tied
to something, say that's wrong,

249
00:12:31.607 --> 00:12:33.440
you can't even do that,
don't even try running it.

250
00:12:33.440 --> 00:12:38.136
But at this point.
&gt;&gt; Speaker 2: So, systems are going to

251
00:12:38.136 --> 00:12:44.680
stash.
&gt;&gt; Joe Nelson: Okay,

252
00:12:44.680 --> 00:12:48.020
so front blank slate to
create search in that stream.

253
00:12:48.020 --> 00:12:49.960
I'll log in, that's kind of one
of the first things we did.

254
00:12:54.000 --> 00:12:56.300
Okay, we had to get IO
stuff like we did before.

255
00:12:57.600 --> 00:12:59.350
We made our listen like we did before.

256
00:13:00.520 --> 00:13:01.440
Yeah. Okay. This is easy.

257
00:13:01.440 --> 00:13:02.990
We already did this stuff.

258
00:13:02.990 --> 00:13:06.090
That's in a different file,
was a cool one.

259
00:13:08.240 --> 00:13:12.910
Transform event stream of
keyups to that of values,

260
00:13:12.910 --> 00:13:16.758
we did that too.
&gt;&gt; Speaker 2: Can you just zoom to

261
00:13:16.758 --> 00:13:19.922
the end and watch around and
look at it for

262
00:13:19.922 --> 00:13:21.425
a second?
&gt;&gt; Joe Nelson: Fine,

263
00:13:21.425 --> 00:13:22.161
fine.
&gt;&gt; Students: [LAUGH]

264
00:13:22.161 --> 00:13:23.600
&gt;&gt; Joe Nelson: I'm fine and stuff.

265
00:13:23.600 --> 00:13:25.427
&gt;&gt; Speaker 5: Yeah, we probably

266
00:13:25.427 --> 00:13:28.970
should walk through the final bold.

267
00:13:30.050 --> 00:13:31.040
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Joe Nelson: Things work.

268
00:13:31.040 --> 00:13:38.609
Yeah.
&gt;&gt; Joe Nelson: File animal.

269
00:13:38.609 --> 00:13:41.893
&gt;&gt; Speaker 2: Did we ever commit the last

270
00:13:41.893 --> 00:13:46.406
change we made?
&gt;&gt; Joe Nelson: I thought so.

271
00:13:46.406 --> 00:13:49.132
No.
&gt;&gt; Speaker 2: [LAUGH] That's why.

272
00:13:49.132 --> 00:13:51.475
&gt;&gt; Joe Nelson: Render video search

273
00:13:51.475 --> 00:13:54.362
results.
&gt;&gt; Speaker 5: A lot of zeros

274
00:13:54.362 --> 00:13:56.390
there.
&gt;&gt; Joe Nelson: [INAUDIBLE] This

275
00:13:56.390 --> 00:13:57.150
should be it.

276
00:13:57.150 --> 00:13:58.158
Let's debug it, and

277
00:13:58.158 --> 00:14:00.630
this will be our last bit.
&gt;&gt; Speaker 2: Okay.

278
00:14:00.630 --> 00:14:01.640
&gt;&gt; Joe Nelson: Actually there's,

279
00:14:01.640 --> 00:14:04.030
I want to see what kind of
we thought hadn't changed.

280
00:14:06.090 --> 00:14:08.270
So we got to get data, and a last.

281
00:14:09.820 --> 00:14:10.350
A lot.

282
00:14:11.620 --> 00:14:16.194
Okay, let's open it up.
&gt;&gt; Speaker 2: It's gonna look different,

283
00:14:16.194 --> 00:14:19.043
because every time it's-
&gt;&gt; Joe Nelson: Slightly different

284
00:14:19.043 --> 00:14:19.748
words.
&gt;&gt; Speaker 2: Yeah [LAUGH].

285
00:14:19.748 --> 00:14:20.877
&gt;&gt; Joe Nelson: Okay.

286
00:14:20.877 --> 00:14:25.720
Okay.
&gt;&gt; [INAUDIBLE]

287
00:14:25.720 --> 00:14:26.720
&gt;&gt; Speaker 2: Yeah, it is.

288
00:14:26.720 --> 00:14:28.090
All right.

289
00:14:28.090 --> 00:14:32.347
The only thing we did extra pretty
much was that we changed fork to our,

290
00:14:32.347 --> 00:14:35.307
we just gave it its success
callback down there,

291
00:14:35.307 --> 00:14:39.082
which probably would be better and
take it to at the callback.

292
00:14:39.082 --> 00:14:43.520
There's a lot baked into the helper.
&gt;&gt; Joe Nelson: I want to try it on Canary.

293
00:14:43.520 --> 00:14:46.365
I remember one time that-
&gt;&gt; Speaker 2: Yeah, that's right.

294
00:14:46.365 --> 00:14:49.501
It was the new one, it was all-
&gt;&gt; Joe Nelson: There was a security thing

295
00:14:49.501 --> 00:14:52.490
Chrome was trying to do to be helpful,
and it wasn't.

296
00:14:53.830 --> 00:14:59.369
Or I guess it is helpful, but not to us.
&gt;&gt; Joe Nelson: Yeah.

297
00:15:09.861 --> 00:15:10.387
&gt;&gt; Joe Nelson: Please play

298
00:15:10.387 --> 00:15:11.231
the animal video.

299
00:15:11.231 --> 00:15:14.050
Please work.

300
00:15:14.050 --> 00:15:14.755
Man.
&gt;&gt; [INAUDIBLE]

301
00:15:14.755 --> 00:15:15.315
&gt;&gt; Joe Nelson: It's right here.

302
00:15:15.315 --> 00:15:17.025
It's just too small, it wrapped.

303
00:15:17.025 --> 00:15:17.546
&gt;&gt; Speaker 2: Yeah.

304
00:15:17.546 --> 00:15:18.153
[LAUGH]

305
00:15:18.153 --> 00:15:19.979
&gt;&gt; Joe Nelson: And the final payoff.

306
00:15:19.979 --> 00:15:21.395
&gt;&gt; Students: [LAUGH]

307
00:15:21.395 --> 00:15:22.766
&gt;&gt; Joe Nelson: This is what functional

308
00:15:22.766 --> 00:15:24.280
programming does to you.

309
00:15:24.280 --> 00:15:25.047
&gt;&gt; Students: [LAUGH]
&gt;&gt; Joe Nelson: Yeah,

310
00:15:25.047 --> 00:15:26.000
okay.
&gt;&gt; Speaker 2: Man.

