WEBVTT

1
00:00:00.000 --> 00:00:04.579
[MUSIC]

2
00:00:04.579 --> 00:00:05.720
&gt;&gt; Joe Nelson: Now we get to use it.

3
00:00:05.720 --> 00:00:07.660
I think this is the first real exercise.

4
00:00:07.660 --> 00:00:12.620
jsbin, romun, which

5
00:00:12.620 --> 00:00:16.263
I conveniently-
&gt;&gt; Speaker 2: Something that I should

6
00:00:16.263 --> 00:00:21.824
mention is Lo-Dash gives you a curry
that I've been using day to day.

7
00:00:21.824 --> 00:00:26.952
I don't how they do it, but if you just
require Lo-Dash, you can do _.curry

8
00:00:26.952 --> 00:00:31.984
any function.
&gt;&gt; Speaker 2: Just

9
00:00:31.984 --> 00:00:34.500
if you're worried about
the actual implementation.

10
00:00:34.500 --> 00:00:37.800
There is others out there, and
they're baked into your popular libraries.

11
00:00:38.990 --> 00:00:39.530
So does Ramda.

12
00:00:39.530 --> 00:00:41.053
Ramda has one, right?
&gt;&gt; Joe Nelson: Yeah,

13
00:00:41.053 --> 00:00:43.693
you don't have to go into the wilderness
and take some sticks, and

14
00:00:43.693 --> 00:00:45.167
tie them together, and make curry.

15
00:00:45.167 --> 00:00:46.474
It's there for you- [LAUGH].

16
00:00:46.474 --> 00:00:49.250
in libraries like this,
which I will wholeheartedly endorse.

17
00:00:49.250 --> 00:00:50.380
I really enjoy it.

18
00:00:50.380 --> 00:00:54.550
We're looking for different libraries to
use that seem to do the stuff that like

19
00:00:54.550 --> 00:00:57.800
underscore, and Lo-Dash, and
stuff wants to do, but does it right.

20
00:00:57.800 --> 00:00:59.590
And this ramda.js is the thing, man.

21
00:00:59.590 --> 00:01:01.184
It's really tested.

22
00:01:01.184 --> 00:01:03.754
It's meticulously documented.

23
00:01:03.754 --> 00:01:05.950
I love to see libraries
that work like this.

24
00:01:05.950 --> 00:01:07.222
There'll be a link to the GitHub.

25
00:01:07.222 --> 00:01:08.750
It's up here, too, at the end.

26
00:01:10.250 --> 00:01:15.380
This next exercise,
I'm trying to see if it includes anything.

27
00:01:15.380 --> 00:01:18.775
Yeah, it includes a bunch of stuff.

28
00:01:18.775 --> 00:01:20.910
Why is Lo-Dash in there?
&gt;&gt; Speaker 2: I don't know.

29
00:01:20.910 --> 00:01:21.676
&gt;&gt; Joe Nelson: Just as I was bad-mouthing

30
00:01:21.676 --> 00:01:23.763
it, it's in there.
&gt;&gt; [INAUDIBLE]

31
00:01:23.763 --> 00:01:26.715
&gt;&gt; Joe Nelson: Well, it'll still work.

32
00:01:26.715 --> 00:01:27.790
Our currying example.

33
00:01:27.790 --> 00:01:28.610
Same format.

34
00:01:28.610 --> 00:01:30.654
At the bottom, we have background code.

35
00:01:30.654 --> 00:01:34.247
I think if I run this one.

36
00:01:34.247 --> 00:01:37.286
There's some things that are logged out
just because it's part of the narrative.

37
00:01:37.286 --> 00:01:40.540
Like around the comments, there's
some logging, and this is the result.

38
00:01:40.540 --> 00:01:42.960
But then we have
the functions are failing.

39
00:01:42.960 --> 00:01:49.087
So the goal of this is to read through and
fix the test so that they work.

40
00:01:49.087 --> 00:01:54.327
Ask questions as you go.
&gt;&gt; Speaker 2: I

41
00:01:54.327 --> 00:01:58.200
should say that _.identity
is just a stub function.

42
00:02:00.110 --> 00:02:03.629
It's just better than writing undefined.

43
00:02:03.629 --> 00:02:04.607
If you see that.

44
00:02:13.820 --> 00:02:16.098
&gt;&gt; Joe Nelson: Yeah,
we put identity to mean the wrong thing.

45
00:02:16.098 --> 00:02:17.196
Replace this.

