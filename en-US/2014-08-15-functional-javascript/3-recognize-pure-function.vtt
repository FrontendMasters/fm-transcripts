WEBVTT

1
00:00:00.000 --> 00:00:04.408
[MUSIC]

2
00:00:04.408 --> 00:00:08.479
&gt;&gt; Joe Nelson: And the next bit is
recognizing these types of functions

3
00:00:08.479 --> 00:00:13.337
that are really useful,
like the days in month as a pure function.

4
00:00:13.337 --> 00:00:17.716
A function that doesn't change anything
outside of itself and reacts the same way

5
00:00:17.716 --> 00:00:21.570
to the same inputs, they're called pure,
and what does it make them?

6
00:00:21.570 --> 00:00:23.060
Well, we've just been
beating it into the ground.

7
00:00:23.060 --> 00:00:26.650
It makes them more testable,
as Brian mentioned, it makes them more

8
00:00:26.650 --> 00:00:30.180
portable in the case that they don't
actually depend on some browser thing.

9
00:00:30.180 --> 00:00:32.410
You could use them on
the client in the server.

10
00:00:32.410 --> 00:00:37.001
It makes them memorizable, and
memorization is a technique that once you

11
00:00:37.001 --> 00:00:41.737
run a function one time with a certain
input, a little thing watches over and

12
00:00:41.737 --> 00:00:43.899
says okay, I'll remember that.

13
00:00:43.899 --> 00:00:46.005
Next time someone tries to call
this function without input,

14
00:00:46.005 --> 00:00:48.790
I won't even ask the function,
I'll just give it the input.

15
00:00:48.790 --> 00:00:52.780
And like in Haskell and in other places,
and I guess, theoretically, in JavaScript

16
00:00:52.780 --> 00:00:56.570
too, you could memorize these things
without having to think about it.

17
00:00:56.570 --> 00:01:00.560
So in the cases where you wanna make
that space versus time tradeoff

18
00:01:00.560 --> 00:01:05.352
in your programs, you don't have to
change, your function's already pure.

19
00:01:05.352 --> 00:01:10.286
And finally parallelizable,
the tongue twister word,

20
00:01:10.286 --> 00:01:14.912
so [LAUGH] because the things
don't change anything,

21
00:01:14.912 --> 00:01:20.360
it doesn't matter which ones
you're running at what time.

22
00:01:20.360 --> 00:01:23.090
If you have different processors,
you can run as many as you want.

23
00:01:23.090 --> 00:01:24.800
They're not gonna step
on each other's toes.

24
00:01:26.420 --> 00:01:30.980
So do we really understand
what purity means?

25
00:01:30.980 --> 00:01:35.094
Let's play pure or impure.

26
00:01:35.094 --> 00:01:38.096
I guess we have an advantage here with
the people that are present because we can

27
00:01:38.096 --> 00:01:39.140
shout it out.

28
00:01:39.140 --> 00:01:43.020
So here's a function, getQueryVariable.

29
00:01:43.020 --> 00:01:48.740
You give it a variable, and
the idea is, if I was in a page like

30
00:01:49.850 --> 00:01:54.400
items question page equals three, and

31
00:01:54.400 --> 00:01:58.340
I say give me the page, like the query
string parameter, it should give me three.

32
00:01:58.340 --> 00:01:59.960
So I give it the variable.

33
00:01:59.960 --> 00:02:04.560
It checks and it gives me, pulls it
out of the url and gives it to me.

34
00:02:05.700 --> 00:02:06.590
What's your guess?

35
00:02:06.590 --> 00:02:08.820
Pure's good, by the way, so
I'll put thumbs up for pure.

36
00:02:09.910 --> 00:02:15.030
Kill him for impure.
&gt;&gt; Joe Nelson: You're feeling thumbs down?

37
00:02:16.130 --> 00:02:17.914
Why do you feel thumbs
down about this one?

38
00:02:17.914 --> 00:02:19.063
&gt;&gt; Speaker 2: I don't wanna be the one to

39
00:02:19.063 --> 00:02:19.695
answer that.

40
00:02:19.695 --> 00:02:22.897
[LAUGH] Does anybody else want to-
&gt;&gt; Speaker 3: Windows location.

41
00:02:22.897 --> 00:02:24.148
&gt;&gt; Speaker 4: Windows locations then?

42
00:02:24.148 --> 00:02:25.215
&gt;&gt; Joe Nelson: Yep, it's looking,

43
00:02:25.215 --> 00:02:27.500
it's looking at things
it shouldn't look at.

44
00:02:27.500 --> 00:02:29.280
You're not pure.

45
00:02:29.280 --> 00:02:33.930
Next, okay, here's one, random numbers.

46
00:02:33.930 --> 00:02:35.620
This thing generates random numbers.

47
00:02:36.690 --> 00:02:38.690
Who knows what comes out of that?

48
00:02:38.690 --> 00:02:43.591
We give random numbers, like these
seed values, to kick it off, and

49
00:02:43.591 --> 00:02:47.915
it gives you a random number,
kind of complicated in there.

50
00:02:47.915 --> 00:02:48.940
What do you think about this one?

51
00:02:50.260 --> 00:02:52.605
You're happy about it.

52
00:02:52.605 --> 00:02:54.290
So you're not happy about it?

53
00:02:56.320 --> 00:02:57.400
A lot of happiness.

54
00:02:57.400 --> 00:02:59.014
It's making us all joyful.

55
00:03:01.355 --> 00:03:04.965
It's pure, because although
it's doing complicated things,

56
00:03:04.965 --> 00:03:07.620
it's doing them in a well defined way.

57
00:03:07.620 --> 00:03:11.290
It's just like some number crunching,
and you give it the two numbers.

58
00:03:11.290 --> 00:03:15.110
And it's kind of crazy as a side note
that this thing actually generates fairly

59
00:03:15.110 --> 00:03:17.766
statistically spread out numbers
based on what you put into it.

60
00:03:17.766 --> 00:03:19.930
I was playing,
nudging them by one or two, and

61
00:03:19.930 --> 00:03:22.926
I was getting drastically different
numbers, it's a bizarre algorithm.

62
00:03:22.926 --> 00:03:28.399
So pure or impure,
the final round, chattyAdd.

63
00:03:28.399 --> 00:03:32.390
It adds numbers, but you kind of wanted
to know what's going on because you're

64
00:03:32.390 --> 00:03:34.310
balancing a checkbook or something.

65
00:03:34.310 --> 00:03:39.574
So it's telling you what just happened,
so you know what's going on.

66
00:03:39.574 --> 00:03:42.866
Feels good?

67
00:03:42.866 --> 00:03:44.200
You gotta feel like Caesar here.

68
00:03:44.200 --> 00:03:48.043
I wanna see more thumbs,
should this thing live or should it die?

69
00:03:49.583 --> 00:03:51.894
Live.

70
00:03:51.894 --> 00:03:55.958
If I set a really pure function,
one that we can really count on,

71
00:03:55.958 --> 00:03:59.510
it could be parallelizable,
I got it that time.

72
00:03:59.510 --> 00:04:01.650
And it doesn't matter
when they're happening,

73
00:04:01.650 --> 00:04:04.710
the result will look the same
from the outside world.

74
00:04:04.710 --> 00:04:07.880
And if this thing's logging and
if you ran it in parallel,

75
00:04:07.880 --> 00:04:10.350
you wouldn't know which order
the logs might come in.

76
00:04:10.350 --> 00:04:12.900
So, it's not pure,
it's changing something.

77
00:04:12.900 --> 00:04:15.940
The log, it's something, it's out there.

78
00:04:15.940 --> 00:04:17.050
It's outside of the function, and

79
00:04:17.050 --> 00:04:20.257
it just went out there and did it.
&gt;&gt; Speaker 2: People in chat

80
00:04:20.257 --> 00:04:21.099
are kicking butt.

81
00:04:21.099 --> 00:04:23.038
They're all like, I know, impure, done.

82
00:04:23.038 --> 00:04:25.651
[LAUGH]
&gt;&gt; Joe Nelson: We got the pros.

83
00:04:25.651 --> 00:04:26.765
&gt;&gt; Speaker 2: Yeah [LAUGH].

84
00:04:26.765 --> 00:04:27.277
&gt;&gt; Speaker 5: Although

85
00:04:27.277 --> 00:04:30.110
wouldn't it matter what
console actually does?

86
00:04:30.110 --> 00:04:33.763
You're assuming you know that
console is a impure function.

87
00:04:33.763 --> 00:04:35.110
&gt;&gt; Joe Nelson: That's a good point.

88
00:04:35.110 --> 00:04:37.212
It's like dependency injection, yeah.
&gt;&gt; Speaker 5: Yeah.

89
00:04:37.212 --> 00:04:38.977
&gt;&gt; Joe Nelson: Maybe the takeaway would

90
00:04:38.977 --> 00:04:43.554
be that, if you compose pure functions,
it stays pure.

91
00:04:43.554 --> 00:04:46.480
But if one function
ever relies on another,

92
00:04:46.480 --> 00:04:49.530
it'll become impure as
its argument was impure.

93
00:04:49.530 --> 00:04:52.310
So purity begets purity.
&gt;&gt; [LAUGH]

94
00:04:52.310 --> 00:04:53.430
&gt;&gt; Speaker 5: So would this function

95
00:04:53.430 --> 00:04:57.380
actually be pure, what you're arguing
is it's the input that makes it

96
00:04:57.380 --> 00:04:58.343
impure.
&gt;&gt; Joe Nelson: Yeah, you're right.

97
00:04:58.343 --> 00:04:59.434
&gt;&gt; Speaker 5: Cuz you're assuming

98
00:04:59.434 --> 00:05:00.763
console is impure.
&gt;&gt; Joe Nelson: You're

99
00:05:00.763 --> 00:05:02.240
right.
&gt;&gt; Speaker 5: Okay.

100
00:05:02.240 --> 00:05:03.401
&gt;&gt; Joe Nelson: I guess I assumed it was in

101
00:05:03.401 --> 00:05:07.010
a browser, and it passed in the console,
but it doesn't have to be the case.

102
00:05:08.820 --> 00:05:12.615
It could be something that just throws it
away, it would be very impure, very pure.

103
00:05:12.615 --> 00:05:15.395
It gets your computer hot or whatever.
&gt;&gt; Speaker 5: Yeah, it warms it up.

104
00:05:15.395 --> 00:05:18.730
Well, I don't necessarily
know what console

105
00:05:18.730 --> 00:05:21.295
log does.
&gt;&gt; Joe Nelson: Yeah, exactly, it could be

106
00:05:21.295 --> 00:05:24.240
something innocent as a flower.
&gt;&gt; [LAUGH]

107
00:05:24.240 --> 00:05:26.480
&gt;&gt; Joe Nelson: So you just played our game

