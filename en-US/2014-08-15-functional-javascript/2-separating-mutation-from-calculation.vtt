WEBVTT

1
00:00:00.000 --> 00:00:04.598
[MUSIC]

2
00:00:04.598 --> 00:00:08.670
&gt;&gt; Joe Nelson: So the next one is
separating mutation from calculation or

3
00:00:08.670 --> 00:00:12.494
at least isolating the places
that mutation happens,

4
00:00:12.494 --> 00:00:16.180
because those are the tricky
parts to reason about.

5
00:00:16.180 --> 00:00:18.670
Because the order that
you do things matters.

6
00:00:18.670 --> 00:00:22.800
So if you can make most your code kind
of pure, and then at the very end or

7
00:00:22.800 --> 00:00:25.780
wherever plug in the parts that change,
it's gonna help out.

8
00:00:25.780 --> 00:00:33.170
So for instance in this case, the scenario
here is kind of a simplification.

9
00:00:33.170 --> 00:00:38.566
So imagine you have a blog online and you
have, oops, I made it advance the slide.

10
00:00:38.566 --> 00:00:42.966
Imagine you have a blog and
you have the articles in your blog.

11
00:00:42.966 --> 00:00:45.240
And there is a front page and
there's read more for each one and

12
00:00:45.240 --> 00:00:47.526
there's kind of a teaser
where it shortens it.

13
00:00:47.526 --> 00:00:50.270
So we're gonna make a function where
you give it a div or something and

14
00:00:50.270 --> 00:00:51.980
it just shortens it down.

15
00:00:51.980 --> 00:00:56.574
Now in a real teaser you'd wanna break
at the, not cut a word in half, or

16
00:00:56.574 --> 00:00:59.800
hopefully even not cut a sentence in half.

17
00:00:59.800 --> 00:01:03.890
But for the purpose of this
simplification, our teaser function,

18
00:01:03.890 --> 00:01:07.040
you just give how many characters and
an element on the page.

19
00:01:07.040 --> 00:01:12.644
So we have teaser cut it down to 25
letters or whatever and do it to this div.

20
00:01:13.830 --> 00:01:16.920
And we so
have these kind of imaginary functions.

21
00:01:16.920 --> 00:01:18.795
And some of them are not
actually imaginary.

22
00:01:18.795 --> 00:01:22.040
We'll get them in our libraries
we're gonna be using.

23
00:01:22.040 --> 00:01:23.850
But in this one we have, so

24
00:01:23.850 --> 00:01:27.410
how would this teaser work, the one
that just goes out and changes things?

25
00:01:27.410 --> 00:01:32.990
It says set the text of a certain element
where you're slicing the string down.

26
00:01:32.990 --> 00:01:36.400
So you get the text of the elements,
actually I can point with my pointer.

27
00:01:38.910 --> 00:01:40.859
So this guy says grab
the text out of the element.

28
00:01:42.210 --> 00:01:45.190
And then slice it down to size,
from zero to the thing, and

29
00:01:45.190 --> 00:01:49.410
then take that and set the text of
the element with the sliced down version.

30
00:01:49.410 --> 00:01:50.560
I mean that's pretty simple, right?

31
00:01:50.560 --> 00:01:51.730
How are we even going to fix that up?

32
00:01:51.730 --> 00:01:53.922
It seems like that's about all you can do.

33
00:01:53.922 --> 00:01:57.000
But if we go down we see where's
the mutation happening here?

34
00:01:57.000 --> 00:02:02.588
If I were to say over all the paragraphs
on the page, make them a teaser.

35
00:02:02.588 --> 00:02:07.516
So I'm saying map this teasering of
50 to those things, and the way we're

36
00:02:07.516 --> 00:02:12.447
able to do that 50 is actually a little
complicated, but we'll get to it.

37
00:02:12.447 --> 00:02:14.980
If we're teasering all the elements,
where does mutation happen?

38
00:02:14.980 --> 00:02:17.970
It happens at the teaser itself.

39
00:02:17.970 --> 00:02:21.165
So teaser, our teaser's simple.

40
00:02:21.165 --> 00:02:23.350
It just chops by a certain
number of characters.

41
00:02:23.350 --> 00:02:26.430
If you had a real teaser that
you wanted to test, great,

42
00:02:26.430 --> 00:02:28.110
how are we gonna test this thing?

43
00:02:28.110 --> 00:02:30.641
We actually have to have
DOM elements again.

44
00:02:30.641 --> 00:02:33.568
We have to mock those DOM
elements out in our test,

45
00:02:33.568 --> 00:02:36.717
the same way we had pretend to be time and
change time.

46
00:02:36.717 --> 00:02:40.803
In order to test that this teaser
thing is chopping something down,

47
00:02:40.803 --> 00:02:45.620
in our test we have to recreate a fake DOM
like you would, and apply it and check.

48
00:02:46.710 --> 00:02:53.100
So instead we could make
the mutation much smaller, and

49
00:02:53.100 --> 00:02:55.590
the specific functions we have
here like compose the stuff,

50
00:02:55.590 --> 00:02:59.550
you're gonna be introduced to those, but
the point is I can just walk through.

51
00:02:59.550 --> 00:03:01.886
This, so here the teaser's a lot shorter.

52
00:03:01.886 --> 00:03:10.330
It's just slice itself and it could be
more complicated but here it's just slice.

53
00:03:10.330 --> 00:03:14.831
And so the code that used to say take
teaser, map it all over the over the p's,

54
00:03:14.831 --> 00:03:16.293
says map this new thing.

55
00:03:16.293 --> 00:03:21.403
It's a function which says take the text,
teaser it,

56
00:03:21.403 --> 00:03:25.970
and then set it, and
do it on all the paragraphs.

57
00:03:27.020 --> 00:03:31.370
And if the specific
functions we're using seem

58
00:03:31.370 --> 00:03:33.700
out of the blue you'll
be seeing them more.

59
00:03:33.700 --> 00:03:36.844
The point is the mutation on
one is happening on teaser and

60
00:03:36.844 --> 00:03:40.001
the mutation of the other's
happening only on setText.

61
00:03:40.001 --> 00:03:42.304
Teaser doesn't go out and change the DOM.

62
00:03:42.304 --> 00:03:44.060
You're just given strings.

63
00:03:44.060 --> 00:03:47.460
So, first things we
recognize are separating

64
00:03:47.460 --> 00:03:50.860
inputs from just random other things,
like arguments from environment, and

65
00:03:50.860 --> 00:03:53.390
here separating mutation from calculation.

66
00:03:53.390 --> 00:03:55.660
There are functions that all
they do is calculate, and

67
00:03:55.660 --> 00:03:58.270
there are functions that change
things about the environment.

68
00:03:59.270 --> 00:04:02.290
If you have some functional programming
experience, this is probably a little slow

69
00:04:02.290 --> 00:04:05.660
for you, but that's just something I
wanted to mention about separation.

