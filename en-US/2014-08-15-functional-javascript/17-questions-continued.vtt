WEBVTT

1
00:00:00.000 --> 00:00:06.270
[MUSIC]
&gt;&gt; Off Camera 1: There's another question

2
00:00:06.270 --> 00:00:14.060
on what the best way to go about
debugging these jsbin examples is.

3
00:00:14.060 --> 00:00:17.020
Whether there's an easy way to
step through them or something.

4
00:00:17.020 --> 00:00:19.200
&gt;&gt; Joe Nelson: Jsbin has
been a little bit confusing,

5
00:00:19.200 --> 00:00:22.210
both in the order of the listings And
evaluates them.

6
00:00:22.210 --> 00:00:24.850
So, if I drop a debugger
in these things I can try.

7
00:00:24.850 --> 00:00:27.211
I can use JavaSvript debugger, I suppose.

8
00:00:27.211 --> 00:00:28.627
&gt;&gt; Off Camera 2: You know what
you should do though real quick?

9
00:00:28.627 --> 00:00:30.632
Is show them the log.

10
00:00:30.632 --> 00:00:32.575
You just drop that in
the middle of compose.

11
00:00:32.575 --> 00:00:34.588
&gt;&gt; Joe Nelson: Sure, I need to define it.

12
00:00:34.588 --> 00:00:37.369
Some of the built in browser
objects can't be composed for

13
00:00:37.369 --> 00:00:41.354
some reason you try and treat them as real
objects ,they say illegal in locations.

14
00:00:41.354 --> 00:00:47.690
So we have to make a wrapper for
log equals function X.

15
00:00:48.710 --> 00:00:50.760
We say console dialogue X.

16
00:00:50.760 --> 00:00:51.810
And we say return X.

17
00:00:51.810 --> 00:00:55.380
That way it can be composed to
be put in a composition chain.

18
00:00:55.380 --> 00:01:02.270
The last thing it does is return whatever
was given to it so we can say in here.

19
00:01:02.270 --> 00:01:04.450
It's kind of cool is
putting up a composition.

20
00:01:04.450 --> 00:01:07.760
&gt;&gt; Off Camera 1: I think you
might need to run it again.

21
00:01:07.760 --> 00:01:11.250
&gt;&gt; Joe Nelson: Okay,
in that case I better copy this.

22
00:01:16.402 --> 00:01:20.520
&gt;&gt; Joe Nelson: It worked,
okay so there's that guy, no.

23
00:01:26.045 --> 00:01:26.881
&gt;&gt; Joe Nelson: Get title.

24
00:01:29.709 --> 00:01:30.950
&gt;&gt; Joe Nelson: We put a log
in there in between and head

25
00:01:30.950 --> 00:01:33.487
&gt;&gt; Off Camera 1: And a dot on head.

26
00:01:33.487 --> 00:01:39.690
I sort out that head problem for
the header.

27
00:01:41.160 --> 00:01:42.120
&gt;&gt; Joe Nelson: Yeah.

28
00:01:42.120 --> 00:01:45.520
So now,
it printed out everything sucks, and

29
00:01:45.520 --> 00:01:51.180
it also printed out the object,
cuz it logged it on its way through.

30
00:01:51.180 --> 00:01:56.040
&gt;&gt; Off Camera 1: One thing I use with
compose a lot, is if you define that as

31
00:01:56.040 --> 00:02:01.950
first title and don't call it right away.

32
00:02:01.950 --> 00:02:07.580
You can compose that with something else,
right?

33
00:02:09.510 --> 00:02:10.260
&gt;&gt; Joe Nelson: Help isn't working.

34
00:02:10.260 --> 00:02:13.830
So, you're saying call this first title?

35
00:02:13.830 --> 00:02:14.330
&gt;&gt; Off Camera 1: Yeah.

36
00:02:19.770 --> 00:02:21.730
&gt;&gt; Joe Nelson: With the log and the head.

37
00:02:25.510 --> 00:02:30.020
&gt;&gt; Off Camera 1: So, now we've got
our first title, and so, let's say,

38
00:02:30.020 --> 00:02:34.650
first title, and
then is there there are a [INAUDIBLE]?

39
00:02:34.650 --> 00:02:38.013
Its a good stream function.

40
00:02:38.013 --> 00:02:40.540
[LAUGH]
&gt;&gt; Joe Nelson: LIke uppercase?

41
00:02:40.540 --> 00:02:42.220
&gt;&gt; Off Camera 1: Yeah, or something.

42
00:02:44.250 --> 00:02:44.760
&gt;&gt; Joe Nelson: It's just.

43
00:02:45.840 --> 00:02:47.530
&gt;&gt; Off Camera 1: Or how about,
I wonder if head will work?

44
00:02:48.980 --> 00:02:52.722
&gt;&gt; Joe Nelson: Probably because the head
of the string is possibly like the list.

45
00:02:52.722 --> 00:02:53.990
[LAUGH].

46
00:02:53.990 --> 00:02:56.529
It's first letter.

47
00:02:56.529 --> 00:02:57.093
Okay.

48
00:02:57.093 --> 00:02:57.657
&gt;&gt; Off Camera 1: Yeah.

49
00:02:57.657 --> 00:03:00.550
First letter of the first title.

50
00:03:00.550 --> 00:03:02.589
&gt;&gt; Joe Nelson: This one
is called ahead again.

51
00:03:09.841 --> 00:03:11.268
&gt;&gt; Off Camera 2: An so
[INAUDIBLE] underscore.

52
00:03:11.268 --> 00:03:11.913
&gt;&gt; Joe Nelson: Yeah, thanks.

53
00:03:11.913 --> 00:03:17.600
&gt;&gt; Off Camera 1: So you see there though
it's defined that as first letter, right?

54
00:03:17.600 --> 00:03:19.700
So the first title and
had his first letter.

55
00:03:23.918 --> 00:03:26.928
That's good.

56
00:03:26.928 --> 00:03:28.623
&gt;&gt; Joe Nelson: Oops.

57
00:03:28.623 --> 00:03:32.620
No, it doesn't and
then up fails to work out, it evaluates.

58
00:03:39.170 --> 00:03:42.285
&gt;&gt; Off Camera 1: This is a bad example
what I'm trying to get at is you're

59
00:03:42.285 --> 00:03:46.120
building a grammar of
functions that you're naming.

60
00:03:46.120 --> 00:03:53.286
So I can compose first title and
maybe HTML out of that, make the headers.

61
00:03:53.286 --> 00:03:56.510
So I'm gonna grab the first title and
then I'm gonna compose that header and

62
00:03:56.510 --> 00:03:57.445
make that drop page.

63
00:03:57.445 --> 00:04:02.088
So it's drop page,
is just the composition of first title and

64
00:04:02.088 --> 00:04:04.700
make header or whatever make H1.

65
00:04:04.700 --> 00:04:06.590
And the whole point of that is,

66
00:04:06.590 --> 00:04:12.692
you end up with this English that
you're reading as your program.

67
00:04:12.692 --> 00:04:15.590
So, if you did it on the left
side it would be a lot clearer,

68
00:04:15.590 --> 00:04:19.070
you'd be able to make your
grammar in a couple functions and

69
00:04:19.070 --> 00:04:22.600
then use your grammar when
you actually run your app.

70
00:04:22.600 --> 00:04:25.600
It's like you're programming with DSLs,
without knowing it.

71
00:04:25.600 --> 00:04:27.020
Do your have questions about that?

72
00:04:27.020 --> 00:04:28.710
I think it's awesome.

73
00:04:28.710 --> 00:04:29.730
&gt;&gt; Joe Nelson: I think the biggest thing.

74
00:04:29.730 --> 00:04:33.273
You also have gram dots and
looking at the arrays and stuff.

75
00:04:33.273 --> 00:04:37.684
But the real thing comes with taking
these functions and putting them all,

76
00:04:37.684 --> 00:04:40.497
the five or
six types of containers [INAUDIBLE].

77
00:04:40.497 --> 00:04:42.856
Which will become really cool and clear.

78
00:04:42.856 --> 00:04:47.628
&gt;&gt; Off Camera 1: But, if you see if you
see any my controllers in a standard app,

79
00:04:47.628 --> 00:04:49.166
I'll bring one up.

80
00:04:49.166 --> 00:04:51.558
It's just this function, that function
they're all just specifically named.

81
00:04:51.558 --> 00:04:56.121
This is going to do this,
this going to do that, it's gonna do that.

82
00:04:56.121 --> 00:04:57.721
And then at the bottom,

83
00:04:57.721 --> 00:05:02.820
you've just got the composition of
maybe get from DB and put on page.

84
00:05:02.820 --> 00:05:04.350
And ask the user what they want.

85
00:05:04.350 --> 00:05:05.570
And it's like, I see it.

86
00:05:05.570 --> 00:05:07.750
It just reads right to left.

87
00:05:07.750 --> 00:05:11.297
I don't know much either but.

88
00:05:11.297 --> 00:05:16.050
[LAUGH]
I feel like it pushes you into

89
00:05:16.050 --> 00:05:20.350
this really high level style where
you just writing what should happen.

90
00:05:20.350 --> 00:05:24.030
And it keeps you on the same level
of abstraction pretty easily.

91
00:05:24.030 --> 00:05:27.530
Cuz, you want your sentence to
be like do this, then that.

92
00:05:27.530 --> 00:05:29.980
Okay, those are the three
things that make my page.

93
00:05:29.980 --> 00:05:31.850
And then above it and
we'll see in the demo.

94
00:05:31.850 --> 00:05:33.090
We'll see that pretty clearly.

95
00:05:33.090 --> 00:05:36.670
&gt;&gt; Joe Nelson: Someone once told me
that at Pivotal Labs they use test

96
00:05:36.670 --> 00:05:39.790
driven development not just because
they're worried about the correctness.

97
00:05:39.790 --> 00:05:44.440
But because it amplifies the pain you
feel by doing certain things wrong.

98
00:05:44.440 --> 00:05:45.346
If you're doing unit test.

99
00:05:45.346 --> 00:05:49.980
So doing the style may amplify a way
that would be less beneficial.

100
00:05:49.980 --> 00:05:51.300
Amplify the pain of doing it that way.

101
00:05:51.300 --> 00:06:00.820
&gt;&gt; Off Camera 1: That's a good design
technique for API design technique.

102
00:06:00.820 --> 00:06:01.320
You can do TDD.
&gt;&gt; Joe Nelson: Yeah, right.

