WEBVTT

1
00:00:00.000 --> 00:00:04.597
[MUSIC]

2
00:00:04.597 --> 00:00:08.789
&gt;&gt; Joe Nelson: Okay everybody,
Internet, people here.

3
00:00:08.789 --> 00:00:10.190
We heard all about the laws.

4
00:00:10.190 --> 00:00:12.220
We heard all about the categories.

5
00:00:13.590 --> 00:00:15.650
It's gonna be a different style now.

6
00:00:15.650 --> 00:00:17.400
We're doing the demo.

7
00:00:17.400 --> 00:00:19.960
First thing, just a couple of slides,
and we'll get into it.

8
00:00:19.960 --> 00:00:22.008
First thing, congratulations.

9
00:00:22.008 --> 00:00:24.045
In a way, you're pioneers,

10
00:00:24.045 --> 00:00:29.098
because although these techniques
are well-known in other languages,

11
00:00:29.098 --> 00:00:33.836
especially Haskell, bringing them
into JavaScript is a new thing.

12
00:00:33.836 --> 00:00:36.950
And that's why you saw all
the imports in the JSBins and things,

13
00:00:36.950 --> 00:00:40.407
because we're cobbling together at
the ecosystem of what we need, and

14
00:00:40.407 --> 00:00:42.240
things were only getting better.

15
00:00:42.240 --> 00:00:44.740
So if we use this stuff for

16
00:00:44.740 --> 00:00:48.510
real, our input is gonna go to
make those libraries better.

17
00:00:48.510 --> 00:00:51.410
Use these things, send them for
requests, send them issues,

18
00:00:51.410 --> 00:00:56.379
because only like shaking the rocks that
you polish, and it's got to be good.

19
00:00:56.379 --> 00:01:00.820
And so what we're using in particular,
I just wanted to mention so that if you do

20
00:01:00.820 --> 00:01:04.910
like boiling it down, so if you wanna try
your own stuff, you can pull these in.

21
00:01:06.030 --> 00:01:07.600
Of course, ramda.

22
00:01:07.600 --> 00:01:09.776
baconjs is doing the stream stuff.

23
00:01:09.776 --> 00:01:13.800
It's gonna handle making the streams
when you click and type in stuff.

24
00:01:14.840 --> 00:01:17.270
fantasyland is a spec.

25
00:01:17.270 --> 00:01:20.850
It just says that, yeah,
when you're making functors, etc., etc.

26
00:01:20.850 --> 00:01:25.458
You could use certain nicknames and stuff,
but you should be using these names so

27
00:01:25.458 --> 00:01:26.556
that it all works.

28
00:01:26.556 --> 00:01:30.364
In particular, we're pulling
the IO functor out of fantasy IO,

29
00:01:30.364 --> 00:01:32.172
there's an implementation.

30
00:01:32.172 --> 00:01:36.922
Our own Dr Boolean here made it something
that wraps up some of the fantasyland

31
00:01:36.922 --> 00:01:40.591
stuff so it's easy to do
pointfree-like composition on.

32
00:01:40.591 --> 00:01:43.713
And we're using some stuff from folktale,
a lot of these things.

33
00:01:43.713 --> 00:01:48.204
If you look at folktale versus ramda
versus whatever like this large

34
00:01:48.204 --> 00:01:52.007
overlapping, they're all
trying to do the same thing.

35
00:01:52.007 --> 00:01:56.561
But I think that in my opinion, at least
from what I've seen, ramda is the best for

36
00:01:56.561 --> 00:02:00.521
most of it, and the others are good for
throwing in some stuff around and

37
00:02:00.521 --> 00:02:04.097
doesn't really have yet,
like some of these funky type stuff.

38
00:02:04.097 --> 00:02:08.262
&gt;&gt; Speaker 2: You might even say
the bottom three are about the part two of

39
00:02:08.262 --> 00:02:09.544
class in the top.

40
00:02:09.544 --> 00:02:10.178
&gt;&gt; Joe Nelson: Yeah.

41
00:02:10.178 --> 00:02:12.163
&gt;&gt; Speaker 2: You've got
the function level and

42
00:02:12.163 --> 00:02:15.253
then you've got the functor
object level and stuff.

43
00:02:15.253 --> 00:02:16.388
&gt;&gt; Joe Nelson: Yeah, that makes sense.

44
00:02:16.388 --> 00:02:19.176
I guess it's part two
thing aligned that way.

45
00:02:19.176 --> 00:02:21.584
Another thing, which I didn't put,
this is the last slide.

46
00:02:21.584 --> 00:02:27.338
But we're gonna go through an example
that I've put on my GitHub,

47
00:02:27.338 --> 00:02:30.331
which is at begriffs/immutube.

48
00:02:30.331 --> 00:02:35.087
So github.com/begriffs/immutube.

49
00:02:35.087 --> 00:02:39.969
So the great thing about this is that
I've already run through it, and

50
00:02:39.969 --> 00:02:42.057
I have commits at each point.

51
00:02:42.057 --> 00:02:44.601
[CROSSTALK]
&gt;&gt; Speaker 3: Can you go back to that?

52
00:02:44.601 --> 00:02:53.088
[CROSSTALK]

53
00:02:53.088 --> 00:02:56.209
&gt;&gt; Joe Nelson: This chat.

54
00:02:56.209 --> 00:02:59.382
Okay, so let's do it.

55
00:02:59.382 --> 00:03:03.758
When you look at immutube, actually,
master is some earlier stuff, and

56
00:03:03.758 --> 00:03:05.956
the branch that I'm on is live code.

57
00:03:05.956 --> 00:03:10.345
And I'm eventually gonna merge it into
master when we think it's all cool.

58
00:03:10.345 --> 00:03:15.110
So what I think I should probably do in
live code is I'll have one tab open with

59
00:03:15.110 --> 00:03:16.610
some of these commits.

60
00:03:16.610 --> 00:03:18.690
If we have to get rid of them,
if we get stumped,

61
00:03:18.690 --> 00:03:21.590
we could just be like yep,
next one, we'll be fine.

62
00:03:21.590 --> 00:03:23.469
So I'll leave that open as a tab.

63
00:03:26.509 --> 00:03:28.174
&gt;&gt; Joe Nelson: And
I'll check out blank slate.

64
00:03:36.051 --> 00:03:38.330
&gt;&gt; Joe Nelson: Okay, we're at the blank
slate, and we'll just work from here.

65
00:03:39.470 --> 00:03:41.427
Let's see if I have some vims and
crap going.

66
00:03:41.427 --> 00:03:47.542
I should probably close some of that,
okay.

67
00:03:47.542 --> 00:03:48.420
So there's some stuff.

68
00:03:48.420 --> 00:03:52.168
There's actually some crud in here you
don't have to look at from previous

69
00:03:52.168 --> 00:03:53.270
experiments.

70
00:03:53.270 --> 00:03:55.290
This was originally gonna be
a very different app, and

71
00:03:55.290 --> 00:03:57.870
we decided on something
a little more self-contained.

72
00:03:57.870 --> 00:04:02.547
So index is gonna load some stuff
cool where the real action happens.

73
00:04:02.547 --> 00:04:04.919
Well, this also isn't made.

74
00:04:04.919 --> 00:04:09.310
No, this isn't the main loads of stuff
we need like with power and crap.

75
00:04:09.310 --> 00:04:12.350
So we pull all the libraries together and
eventually runs our app,

76
00:04:12.350 --> 00:04:15.330
and our app is just inside our app JS.

77
00:04:15.330 --> 00:04:16.979
So this is where the good stuff happens.

78
00:04:18.190 --> 00:04:21.165
I'll start up the thing and show you
what the interface looks like, and

79
00:04:21.165 --> 00:04:23.050
we'll discuss what we
want this thing to do.

80
00:04:24.320 --> 00:04:26.450
So go back to my terminal.

81
00:04:26.450 --> 00:04:27.120
Let's see.

82
00:04:30.860 --> 00:04:31.560
It's already running.

83
00:04:34.610 --> 00:04:36.385
There's a lot of tabs going on, okay.

84
00:04:44.219 --> 00:04:46.980
&gt;&gt; Joe Nelson: Okay,
just to make sure we're all reset.

85
00:04:46.980 --> 00:04:51.490
So I go to a localhost:8000,

86
00:04:51.490 --> 00:04:54.880
and there's a lonely input box.

87
00:04:54.880 --> 00:04:56.330
And I type into it and nothing happens.

88
00:04:58.340 --> 00:05:01.250
Yeah, we need the sad trombone.

89
00:05:01.250 --> 00:05:01.770
Here we have it.

90
00:05:01.770 --> 00:05:03.465
Let's look at what
the page is made out of,

91
00:05:03.465 --> 00:05:05.430
cuz this is the stuff we're
gonna be attaching to.

92
00:05:06.530 --> 00:05:08.890
We have our input, it's called search.

93
00:05:08.890 --> 00:05:10.966
We have a UL with nothing in it,
results, and

94
00:05:10.966 --> 00:05:14.096
then another spot that's just
hanging out waiting called player.

95
00:05:14.096 --> 00:05:18.048
So the end goal of this example
is you type in the box.

96
00:05:18.048 --> 00:05:19.587
And as you're live typing,

97
00:05:19.587 --> 00:05:23.970
it's bringing up YouTube search results
of videos that match your stuff.

98
00:05:23.970 --> 00:05:27.020
And when you click one of the results, it
brings up a YouTube player on the right.

99
00:05:28.416 --> 00:05:30.960
&gt;&gt; Speaker 4: Daniel B is asking if
there's a server side to the downloader,

100
00:05:30.960 --> 00:05:32.580
or if it's all just front end stuff.

101
00:05:32.580 --> 00:05:33.600
&gt;&gt; Joe Nelson: It's all just front end.

102
00:05:33.600 --> 00:05:37.223
The reason I started a server was just so
that when I made crossed,

103
00:05:37.223 --> 00:05:42.230
I made a requests, I wasn't at file
calling colon versus HTTP caller colon,

104
00:05:42.230 --> 00:05:44.570
Chrome freaks out
security wise about that.

105
00:05:44.570 --> 00:05:49.270
So I'm just running
index HTML through like.

106
00:05:49.270 --> 00:05:53.171
&gt;&gt; Speaker 4: PHP to, it doesn't matter
what server is running, it's just.

107
00:05:53.171 --> 00:05:54.616
&gt;&gt; Joe Nelson: Yeah.
Just something that serves it.

108
00:05:54.616 --> 00:05:59.170
And the readme of the project it says,
how to clone it down,

109
00:05:59.170 --> 00:06:01.880
how to install the dependencies, and
how to run this little server, so

110
00:06:01.880 --> 00:06:03.480
you can be up and running the same way.

