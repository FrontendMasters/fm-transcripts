WEBVTT

1
00:00:00.000 --> 00:00:04.465
[MUSIC]

2
00:00:04.465 --> 00:00:07.784
&gt;&gt; Joe Nelson: The first bit of
the silence is to omit needless names and

3
00:00:07.784 --> 00:00:12.444
the way we're going to do that is, like
I said, is through the separations and

4
00:00:12.444 --> 00:00:13.450
recognitions.

5
00:00:15.940 --> 00:00:20.120
So this is maybe a little small, I can
zoom in at time, so we can see it but

6
00:00:20.120 --> 00:00:22.750
this is an example of
the first type of separation.

7
00:00:22.750 --> 00:00:24.260
You'll be seeing these a lot.

8
00:00:24.260 --> 00:00:29.120
So the first separation we can do is to
think to ourselves we have functions and

9
00:00:29.120 --> 00:00:31.940
we would like to separate the things
the function is acting on.

10
00:00:31.940 --> 00:00:34.930
Its inputs from just random
things in the environment,

11
00:00:34.930 --> 00:00:38.055
like if your function wants to,
you can go ask for things.

12
00:00:38.055 --> 00:00:41.783
It can just go out there and
from the signature, from the arguments,

13
00:00:41.783 --> 00:00:43.980
it's not really apparent what it uses.

14
00:00:43.980 --> 00:00:49.310
It would be really cool if as we'll see
what it uses is it because it is explicit.

15
00:00:49.310 --> 00:00:54.300
So here we have two functions,
the one on the left is days, this month.

16
00:00:54.300 --> 00:00:58.210
So it does some day calculations, it
just tells you how many days in a month.

17
00:00:58.210 --> 00:00:59.480
But it has a secret input,

18
00:00:59.480 --> 00:01:03.470
which is time itself, which is kind
of weird way to think about it.

19
00:01:03.470 --> 00:01:06.630
Like if you varies like Ruby libraries
they have a thing called timecops.

20
00:01:06.630 --> 00:01:10.300
So if you wanna write a test to make that
test reproducible on a function that

21
00:01:10.300 --> 00:01:10.920
works with time.

22
00:01:10.920 --> 00:01:15.100
You have to like fake out the system
timer, just kidding, it's a year ago.

23
00:01:15.100 --> 00:01:17.550
I run my code, I hope it works.

24
00:01:17.550 --> 00:01:18.160
Instead of making it really explicit,

25
00:01:18.160 --> 00:01:19.180
like this one on the right always
works the same days in the month.

26
00:01:23.560 --> 00:01:27.290
Because you just give it
the year in the month.

27
00:01:27.290 --> 00:01:30.706
So this is our first going to be
our first coding experience, so

28
00:01:30.706 --> 00:01:32.452
you don't have to listen to me.

29
00:01:32.452 --> 00:01:37.570
We can go to jsbin/yoyip and
when you first go there

30
00:01:37.570 --> 00:01:43.190
don't worry it's going
to be totally blank.

31
00:01:43.190 --> 00:01:45.400
But it's all right that's
just the way it works.

32
00:01:45.400 --> 00:01:49.370
So I'm going to make this the smaller,
like close my mail and stuff.

33
00:01:49.370 --> 00:01:55.490
So here's how it looks blank scary but

34
00:01:55.490 --> 00:01:59.980
if you hover over the upper right,
it says Edit, see Edit in JS Bin.

35
00:01:59.980 --> 00:02:03.086
Now JS Bin has a lot of
things we can look at but for

36
00:02:03.086 --> 00:02:08.219
the purposes of what we're doing, we
should just be seeing the JavaScript and

37
00:02:08.219 --> 00:02:15.486
the Console.
&gt;&gt; Joe Nelson: It's kind

38
00:02:15.486 --> 00:02:18.690
of wrapping a little bit, I'll zoom in
a little later after I read the comments.

39
00:02:18.690 --> 00:02:23.530
So there's some tests in this file and
when you press the Run button,

40
00:02:23.530 --> 00:02:26.730
it's actually going to say
the tests are passing.

41
00:02:26.730 --> 00:02:30.730
But that's just because this test is
going to ask you to uncomment a line and

42
00:02:30.730 --> 00:02:34.630
when uncomment it as you'll see,
it's going to break.

43
00:02:34.630 --> 00:02:36.730
So just the gist of it and
then I'll let you read it.

44
00:02:37.910 --> 00:02:40.660
Is that we want to try
showing how a function,

45
00:02:40.660 --> 00:02:46.170
which very clearly separates its
inputs and acts, like reliably,

46
00:02:46.170 --> 00:02:51.150
on those inputs is really easy to
test compared to one that doesn't.

47
00:02:51.150 --> 00:02:56.700
So we have it in the file right now is
a way to test that days this month thing,

48
00:02:56.700 --> 00:02:59.540
so this code as normally as it is.

49
00:02:59.540 --> 00:03:02.089
I think the point of this
exercise is just to look at how

50
00:03:02.089 --> 00:03:05.960
we're testing the complicated one,
they're like we don't have to that.

51
00:03:05.960 --> 00:03:10.560
So it'll be your job to write the test for
the nice one,

52
00:03:12.090 --> 00:03:16.460
which is days in month at the bottom
of the file, so here's the structure.

53
00:03:16.460 --> 00:03:18.794
The top kind of gives you
an overview of what's going

54
00:03:18.794 --> 00:03:21.720
on.
&gt;&gt; Joe Nelson: And

55
00:03:21.720 --> 00:03:24.935
then there's something you have to do,
and then there's background code and

56
00:03:24.935 --> 00:03:26.550
you can look at it if you like as needed.

57
00:03:26.550 --> 00:03:32.700
Some of it's just boilerplate that's going
to make the stuff run, so give it a try.

58
00:03:32.700 --> 00:03:34.300
Try and read through the file and

59
00:03:34.300 --> 00:03:40.706
just shout out any questions.
&gt;&gt; Speaker 2: Adam

60
00:03:40.706 --> 00:03:45.232
is asking what you do with the code.
&gt;&gt; Speaker 3: There's a line down

61
00:03:45.232 --> 00:03:47.419
the console right in the middle.

62
00:03:47.419 --> 00:03:50.672
Yeah, right in the middle
it says insert equal and

63
00:03:50.672 --> 00:03:53.619
it's pointing it out it's alt.testpass.

64
00:03:53.619 --> 00:03:57.276
Just to play around with that thing.
&gt;&gt; Speaker 2: It's really just

65
00:03:57.276 --> 00:03:59.893
to get a feel for JS then and
play around with it.

66
00:03:59.893 --> 00:04:00.810
&gt;&gt; Joe Nelson: Yeah, that's mostly,

67
00:04:00.810 --> 00:04:02.120
we're gonna be using this thing again.

68
00:04:02.120 --> 00:04:03.664
Some of the new exercises or

69
00:04:03.664 --> 00:04:07.102
the later exercises will be more
involved with test or fail.

70
00:04:07.102 --> 00:04:12.437
But this one is this line here,
assert equal days in month equals,

71
00:04:12.437 --> 00:04:16.898
we take this out.
&gt;&gt; Joe Nelson: And

72
00:04:16.898 --> 00:04:21.026
the point is just to fill these
values in so that it passes.

73
00:04:21.026 --> 00:04:26.092
I mean ultimately it's just to say
the way we would test daysInMonth is as

74
00:04:26.092 --> 00:04:31.009
easy as saying assert that a certain
month and year is a certain value.

75
00:04:32.170 --> 00:04:34.558
We don't have to, like,
mock things the way we did above.

76
00:04:34.558 --> 00:04:36.649
&gt;&gt; Speaker 2: So,

77
00:04:36.649 --> 00:04:41.410
if I assert 2014 March 31.

78
00:04:41.410 --> 00:04:45.550
Says, UNCOD expected 30.95 then
a whole bunch of numbers to equal 31,

79
00:04:45.550 --> 00:04:48.890
that's not rounding?
&gt;&gt; Joe Nelson: So my own limitations,

80
00:04:48.890 --> 00:04:50.770
there will be extra credit to fix that.

81
00:04:50.770 --> 00:04:52.371
But we could just pick a different month I

82
00:04:52.371 --> 00:04:59.102
guess.
&gt;&gt; Speaker 4: Which

83
00:04:59.102 --> 00:05:01.120
assertion library is this?

84
00:05:02.367 --> 00:05:05.355
Just curious.
&gt;&gt; Speaker 2: Yeah, we're just really,

85
00:05:05.355 --> 00:05:07.166
stupid, simple.

86
00:05:07.166 --> 00:05:10.101
[CROSSTALK] It's my one function library.

87
00:05:10.101 --> 00:05:11.756
[LAUGH]
&gt;&gt; Speaker 3: There we go.

88
00:05:11.756 --> 00:05:12.338
&gt;&gt; Joe Nelson: It's called one search.

89
00:05:12.338 --> 00:05:14.598
&gt;&gt; Speaker 4: I'm good.

90
00:05:14.598 --> 00:05:15.730
&gt;&gt; Joe Nelson: Yeah.

91
00:05:15.730 --> 00:05:16.420
&gt;&gt; Speaker 4: So it's all it's all

92
00:05:16.420 --> 00:05:18.700
everything that we're
running is in this box.

93
00:05:18.700 --> 00:05:19.820
&gt;&gt; Joe Nelson: Pretty much except for

94
00:05:19.820 --> 00:05:20.460
the stuff.

95
00:05:20.460 --> 00:05:24.225
Wait maybe maybe this one but another
ones who are going to put some libraries.

96
00:05:24.225 --> 00:05:27.461
&gt;&gt; Speaker 2: Requires that you'll see

97
00:05:27.461 --> 00:05:30.768
a couple little.
&gt;&gt; Joe Nelson: Ok this one's

98
00:05:30.768 --> 00:05:32.630
pretty basic.
&gt;&gt; Speaker 4: So

99
00:05:33.700 --> 00:05:36.090
there's nothing hidden other
than what we see here.

100
00:05:36.090 --> 00:05:39.720
There's an HTML, the JavaScript.
&gt;&gt; Joe Nelson: Yeah,

101
00:05:39.720 --> 00:05:43.670
later ones will include other libraries
using if you open the HTML you'll see I'm

102
00:05:43.670 --> 00:05:48.720
just pulling in the screen
kind of just how is everybody

103
00:05:48.720 --> 00:05:53.158
feeling in the room about this one.
&gt;&gt; Speaker 3: Do you guys

104
00:05:53.158 --> 00:05:58.132
understand Js has been enough to like play
around with it on is there something we

105
00:05:58.132 --> 00:06:02.507
get from anybody?
&gt;&gt; Joe Nelson: I guess if you tell

106
00:06:02.507 --> 00:06:05.707
the point were you run it and you're
getting some kind of air because you're

107
00:06:05.707 --> 00:06:09.065
feeling something at least it's like yeah
I kind of feel a lot of feel stuff and

108
00:06:09.065 --> 00:06:14.360
[INAUDIBLE]
Okay.

109
00:06:16.576 --> 00:06:21.202
&gt;&gt; Joe Nelson: Okay.

110
00:06:21.202 --> 00:06:25.710
[INAUDIBLE]
Okay, so

111
00:06:25.710 --> 00:06:27.110
that's the first kind of separation.

112
00:06:27.110 --> 00:06:30.280
There's gonna be a lot more.
&gt;&gt; Speaker 2: Did you want to walk

113
00:06:30.280 --> 00:06:31.770
through the solution?
&gt;&gt; Joe Nelson: Yeah.

114
00:06:31.770 --> 00:06:36.360
That's a good idea.
&gt;&gt; [BLANK AUDIO].

115
00:06:36.360 --> 00:06:37.754
&gt;&gt; Joe Nelson: So my solution, for

116
00:06:37.754 --> 00:06:41.936
the way I was thinking of it,
was in order to test this thing,

117
00:06:41.936 --> 00:06:44.490
we have to fill in some kind of value.

118
00:06:44.490 --> 00:06:47.210
So 2014, Let's not use the one that
made it round inappropriately.

119
00:06:47.210 --> 00:06:48.010
&gt;&gt; Speaker 2: [LAUGH] One instead of

120
00:06:48.010 --> 00:06:50.830
three.
&gt;&gt; Joe Nelson: If you like

121
00:06:50.830 --> 00:06:55.300
one like thirty days had September,
so it's 31 to be much easier for

122
00:06:55.300 --> 00:07:00.370
the patient to take that stuff.
&gt;&gt; Speaker 2: in a mile an hour with

123
00:07:00.370 --> 00:07:04.070
a line calling from A to B.
&gt;&gt; Joe Nelson: So,

124
00:07:06.860 --> 00:07:12.720
it's fast it's just make sure
the tests are 29 take of.

125
00:07:12.720 --> 00:07:17.070
So to test things that make that
behavior predictably arguments

126
00:07:17.070 --> 00:07:19.030
you just pass arguments of your choice.

127
00:07:19.030 --> 00:07:21.250
To test things that have secret inputs,

128
00:07:21.250 --> 00:07:23.670
you have to mark out
the secret inputs in some way.

129
00:07:23.670 --> 00:07:26.500
So you can like know what's
happening inside function to

130
00:07:26.500 --> 00:07:31.050
a greater degree.
&gt;&gt; Speaker 2: It's also worth it to

131
00:07:31.050 --> 00:07:34.970
mention that this one's probably way more
likely to work both on the server and

132
00:07:34.970 --> 00:07:37.750
the client and
other JavaScript environments.

133
00:07:37.750 --> 00:07:42.230
Rather than one rooted in specific
secret input environment.

134
00:07:42.230 --> 00:07:43.990
&gt;&gt; Joe Nelson: Yeah absolutely.

135
00:07:43.990 --> 00:07:46.486
&gt;&gt; Speaker 2: There's a request for

136
00:07:46.486 --> 00:07:52.011
you to speak up a little bit
from you know [INAUDIBLE]

137
00:07:52.011 --> 00:07:55.370
&gt;&gt; Joe Nelson: Yeah as Brian was saying.

138
00:07:55.370 --> 00:07:59.950
If you make your inputs more explicit
not only is it easier to test.

139
00:07:59.950 --> 00:08:03.790
But as the next few slides will show you
there are other benefits such as it's more

140
00:08:03.790 --> 00:08:06.040
likely to run in other places.

141
00:08:06.040 --> 00:08:08.730
So you can share your code
easier between the server and

142
00:08:08.730 --> 00:08:11.930
the client To the extent
that you can even if

143
00:08:11.930 --> 00:08:15.150
you're trying to use like a location
in the window or you just got a lock.

144
00:08:15.150 --> 00:08:16.270
You just don't have it but for

145
00:08:16.270 --> 00:08:19.370
other things it's better like time,
this would work anyway.

