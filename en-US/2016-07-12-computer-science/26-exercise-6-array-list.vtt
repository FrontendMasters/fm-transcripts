WEBVTT

1
00:00:00.000 --> 00:00:03.484
[MUSIC]

2
00:00:03.484 --> 00:00:07.003
&gt;&gt; Brian Holt: What we're gonna do now is
I'm gonna work the very first part of this

3
00:00:07.003 --> 00:00:09.510
with you, so you can kind of get started.

4
00:00:09.510 --> 00:00:14.510
But I want you to actually implement
this collapsing part of it.

5
00:00:14.510 --> 00:00:17.270
That's the part I'm most interested in
having you, because I want you to feel

6
00:00:17.270 --> 00:00:22.018
the pain of collapsing an array.
&gt;&gt; Brian Holt: It is painful.

7
00:00:22.018 --> 00:00:25.482
[LAUGH]
&gt;&gt; Speaker 2: That's what we all wanna

8
00:00:25.482 --> 00:00:27.771
hear right now.
&gt;&gt; Brian Holt: You know it, hey,

9
00:00:27.771 --> 00:00:31.348
you're the one who decided
to come to my class,

10
00:00:31.348 --> 00:00:33.883
so.
&gt;&gt; Brian Holt: Okay, so

11
00:00:33.883 --> 00:00:39.270
I kind of gave here a description
of what I want you do.

12
00:00:39.270 --> 00:00:43.050
I want you to have a length, I want you
to have push, I want you to have pop, and

13
00:00:43.050 --> 00:00:44.480
I want you to have get and delete.

14
00:00:46.320 --> 00:00:49.861
And then probably internally, you're gonna
use some sort of collapse to method.

15
00:00:49.861 --> 00:00:52.960
But I'll leave it up to you
to call it whatever you want.

16
00:00:54.290 --> 00:00:56.950
So we're gonna use ES6 classes.

17
00:00:56.950 --> 00:01:00.010
Some of you might find those kinda gross,
a lot people do.

18
00:01:00.010 --> 00:01:01.954
But they lend themselves
well to this problem, so

19
00:01:01.954 --> 00:01:03.495
we're just gonna go ahead and do that.

20
00:01:03.495 --> 00:01:08.810
This is ES6, and
you're just creating a new class, right?

21
00:01:08.810 --> 00:01:12.850
Nothing too,
&gt;&gt; Brian Holt: Interesting there.

22
00:01:12.850 --> 00:01:14.305
We're gonna have a constructor.

23
00:01:14.305 --> 00:01:18.330
And I gotta remember all
the methods that I put on this.

24
00:01:26.633 --> 00:01:27.247
&gt;&gt; Brian Holt: Okay, and

25
00:01:27.247 --> 00:01:32.173
I'll do the constructor for you since this
will help you what you're supposed to do.

26
00:01:32.173 --> 00:01:38.570
this.length = 0 and this.data = object.

27
00:01:38.570 --> 00:01:40.803
So I'm gonna make you
use an object instead

28
00:01:40.803 --> 00:01:44.248
of
&gt;&gt; Brian Holt: An array,

29
00:01:44.248 --> 00:01:46.720
because if you use an array that's,
cheating, right?

30
00:01:46.720 --> 00:01:48.844
Because we're implementing arrays.

31
00:01:48.844 --> 00:01:53.619
But basically, I want you to make it so

32
00:01:53.619 --> 00:01:59.900
array.0, right, or 0 = 'thing', right?

33
00:01:59.900 --> 00:02:00.989
I want that to still work.

34
00:02:02.740 --> 00:02:08.840
Actually not really, it's gonna be array.
&gt;&gt; Brian Holt: What do I do here,

35
00:02:08.840 --> 00:02:12.453
I just have you do push, right?
&gt;&gt; Brian Holt: But yeah,

36
00:02:12.453 --> 00:02:16.510
you're gonna have to use
an object instead of an array.

37
00:02:16.510 --> 00:02:17.470
That's what I wanna get at, and

38
00:02:17.470 --> 00:02:22.473
then you're gonna have push.
&gt;&gt; Brian Holt: Push(value).

39
00:02:25.668 --> 00:02:26.849
&gt;&gt; Brian Holt: You're gonna have pop,

40
00:02:26.849 --> 00:02:28.825
which is gonna pop something off the top.

41
00:02:28.825 --> 00:02:37.124
get(index).
&gt;&gt; Brian Holt: delete(index).

42
00:02:38.600 --> 00:02:40.188
&gt;&gt; Brian Holt: Something to note here, for

43
00:02:40.188 --> 00:02:44.065
those of you unfamiliar with
the class syntax, there's no commas.

44
00:02:44.065 --> 00:02:46.315
I don't know why they decided not
to put commas in classes, but

45
00:02:46.315 --> 00:02:50.373
there are no commas in classes.
&gt;&gt; Brian Holt: Okay,

46
00:02:50.373 --> 00:02:57.014
I called this _collapseTo.
&gt;&gt; Brian Holt: This

47
00:02:57.014 --> 00:03:02.558
is just an interior utility method,
that I would suggest that you implement,

48
00:03:02.558 --> 00:03:06.507
that basically says,
I'm going to delete index four.

49
00:03:06.507 --> 00:03:10.710
So I'd pass four into here, so I need you
to shift everything else back up one,

50
00:03:10.710 --> 00:03:11.950
right, does that makes sense?

51
00:03:13.960 --> 00:03:16.380
You can do that inside a delete if you
want to, I just wouldn't suggest it.

52
00:03:16.380 --> 00:03:21.071
And then you can ignore serialized cuz you

53
00:03:21.071 --> 00:03:26.125
won't need it.
&gt;&gt; Brian Holt: Okay,

54
00:03:26.125 --> 00:03:28.080
so surprise, surprise.

55
00:03:28.080 --> 00:03:30.226
I did your first unit test for you,

56
00:03:30.226 --> 00:03:34.307
which I think just checks if it's
actually a thing, so good job.

57
00:03:34.307 --> 00:03:39.400
Yep, so it exists.

58
00:03:39.400 --> 00:03:42.100
Now I want you to go in and
fill in all of these methods.

