WEBVTT

1
00:00:00.000 --> 00:00:03.791
[MUSIC]

2
00:00:03.791 --> 00:00:05.153
&gt;&gt; Brian Holt: So let's open your exercise

3
00:00:05.153 --> 00:00:09.979
here.
&gt;&gt; Brian Holt: Something

4
00:00:09.979 --> 00:00:14.768
else that bears mentioning.
&gt;&gt; Brian Holt: I wrote a little

5
00:00:14.768 --> 00:00:20.771
visualization tool for you, so,
&gt;&gt; Brian Holt: If

6
00:00:20.771 --> 00:00:25.720
you look down here,
you'll see this is what the answer

7
00:00:25.720 --> 00:00:30.971
will look like.
&gt;&gt; Brian Holt: It's called bubble loop,

8
00:00:30.971 --> 00:00:32.130
cuz look at this 1, right?

9
00:00:32.130 --> 00:00:34.060
You can see this 1 kind
of bubble up to the top.

10
00:00:34.060 --> 00:00:35.073
That's why it looks,

11
00:00:35.073 --> 00:00:40.009
things kind of tend to bubble up.
&gt;&gt; Brian Holt: And that's why it's called

12
00:00:40.009 --> 00:00:45.331
a bubble loop, or a bubble sort rather.
&gt;&gt; Brian Holt: Okay,

13
00:00:45.331 --> 00:00:52.693
so come in here to the exercise.
&gt;&gt; Brian Holt: [COUGH] So

14
00:00:52.693 --> 00:00:55.464
again, if you want to suspend
the the test from running,

15
00:00:55.464 --> 00:00:58.023
just come down here to the bottom and
say xdescribe.

16
00:00:58.023 --> 00:01:02.085
I highly suggest that because once
you start writing these loops,

17
00:01:02.085 --> 00:01:06.654
you're gonna get a infinite loop,
which is the ugly cousin of the infinite

18
00:01:06.654 --> 00:01:10.623
recursion.
&gt;&gt; Brian Holt: Actually,

19
00:01:10.623 --> 00:01:11.840
they're kinda both equally ugly.

20
00:01:13.270 --> 00:01:17.751
Both of them are gonna make your
browser tab crash, so don't.

21
00:01:17.751 --> 00:01:21.960
I have here a recap of
how bubble sort works.

22
00:01:21.960 --> 00:01:26.591
It's exactly what I just described to you.
&gt;&gt; Brian Holt: And

23
00:01:26.591 --> 00:01:29.320
then there is the optional
visualization helper.

24
00:01:29.320 --> 00:01:32.210
You don't have to use this,
your unit test will still pass without it.

25
00:01:32.210 --> 00:01:36.330
But if you want to, at the beginning
of your inner loop, call snapshot.

26
00:01:36.330 --> 00:01:41.106
Snapshot with whatever your array is,
just passing the whole array.

27
00:01:41.106 --> 00:01:42.050
And if you do that,

28
00:01:42.050 --> 00:01:46.309
you'll get the visualization tool at the
bottom just working for free, hopefully.

29
00:01:46.309 --> 00:01:49.930
But yeah, just call it every single time,
it'll do all the deduplication for you.

