WEBVTT

1
00:00:00.000 --> 00:00:03.905
Hopefully, everybody now is a little bit
more comfortable with the command line,

2
00:00:03.905 --> 00:00:07.109
making things, deleting things,
that's pretty much what we do.

3
00:00:07.109 --> 00:00:10.608
We just make things, we execute them,
we might change some permissions,

4
00:00:10.608 --> 00:00:14.176
we might move some files around, we
might copy them, but this is what we do.

5
00:00:14.176 --> 00:00:18.695
And from here, we can build an entire
universe, which is just fantastic.

6
00:00:18.695 --> 00:00:22.408
I don't know, I love this course,
I'm getting excited now.

7
00:00:22.408 --> 00:00:29.907
I have a slide here called,
In case you get lost.

8
00:00:29.907 --> 00:00:32.807
Because chances are you might
get stuck doing something, and

9
00:00:32.807 --> 00:00:34.712
we wanna make sure you don't get stuck.

10
00:00:34.712 --> 00:00:38.390
So if your second directory is cd ..,
will move you out of that directory,

11
00:00:38.390 --> 00:00:39.719
pretty straightforward.

12
00:00:39.719 --> 00:00:40.896
If you're like where am I?

13
00:00:40.896 --> 00:00:45.401
pwd, print working directory,
will tell you exactly where you are.

14
00:00:45.401 --> 00:00:48.139
clear, if you have a whole bunch
of log files, something like that,

15
00:00:48.139 --> 00:00:51.038
you're like, it's gibberish,
clear will clear your terminal.

16
00:00:51.038 --> 00:00:54.022
It doesn't delete the history,
it just clears your terminal, so

17
00:00:54.022 --> 00:00:55.424
you can always scroll back up.

18
00:00:55.424 --> 00:00:59.239
Ctrl+C will exit almost every program.

19
00:00:59.239 --> 00:01:02.746
It is possible to get stuck in a loop,
but that's pretty uncommon, and

20
00:01:02.746 --> 00:01:04.802
we're probably not gonna do that today.

21
00:01:04.802 --> 00:01:06.221
It's possible to get stuck so

22
00:01:06.221 --> 00:01:09.870
bad that we have to close our terminal
because it won't respond to Ctrl+C.

23
00:01:09.870 --> 00:01:13.937
But almost always in node, or bash,
or anything we're gonna use today,

24
00:01:13.937 --> 00:01:15.852
Ctrl+C will get you out of there.

25
00:01:15.852 --> 00:01:20.773
And we talked about cd today,
will get you to your home directory.

26
00:01:20.773 --> 00:01:24.725
So we learned how to move things around,
we learned how to create things,

27
00:01:24.725 --> 00:01:27.746
we learned how to navigate
our filesystem a little bit.

28
00:01:27.746 --> 00:01:33.057
Let's talk about how to actually edit
files themselves within the command line.

29
00:01:33.057 --> 00:01:36.868
This is where, for frontend engineers,
it gets a little murky,

30
00:01:36.868 --> 00:01:38.266
because I love VS Code.

31
00:01:38.266 --> 00:01:42.831
VS Code is fantastic, or Sublime, or

32
00:01:42.831 --> 00:01:48.694
JetBrains, or Notepad++, okay, I'm out.

33
00:01:48.694 --> 00:01:53.137
I'm sure there's more, someone's like,
Jim, you forgot about my favorite editor,

34
00:01:53.137 --> 00:01:53.978
that's great.

35
00:01:53.978 --> 00:01:57.037
Editors are great, they're powerful,
they do so much for us now,

36
00:01:57.037 --> 00:02:00.097
especially with autocomplete, and
you can run commands in there,

37
00:02:00.097 --> 00:02:02.529
you can even run the browser
from within your editor.

38
00:02:02.529 --> 00:02:07.080
Vim has none of that, well,
it has plugins and things like that, but

39
00:02:07.080 --> 00:02:09.448
at its core, Vim is really simple.

40
00:02:09.448 --> 00:02:11.921
It says, I just wanna edit a file and

41
00:02:11.921 --> 00:02:15.395
I don't wanna go through
a lot of trouble to do it.

42
00:02:15.395 --> 00:02:20.123
That's a really simplistic view of Vim,
and I'll talk about why in a second,

43
00:02:20.123 --> 00:02:20.850
question.

44
00:02:20.850 --> 00:02:25.297
&gt;&gt; Just comments, the primate gen
was summoned when you said them.

45
00:02:25.297 --> 00:02:28.631
We're not gonna go that deep in the Vim,

46
00:02:28.631 --> 00:02:34.037
we're gonna go surface level just
enough to do what we need to do.

47
00:02:34.037 --> 00:02:38.409
But you can go hours, and hours,
and hours in Vim configuration, and

48
00:02:38.409 --> 00:02:39.830
getting really good.

49
00:02:39.830 --> 00:02:44.915
In the beginning, it's gonna feel weird,
you don't use your mouse,

50
00:02:44.915 --> 00:02:48.837
you have to use kind of
esoteric commands to navigate.

51
00:02:48.837 --> 00:02:50.827
By the end of this course,

52
00:02:50.827 --> 00:02:55.994
you will see why Vim is one of
the fastest ways to code and edit files.

53
00:02:55.994 --> 00:02:59.825
And you're like, I don't know,
Jim, I'm pretty good at VS Code,

54
00:02:59.825 --> 00:03:01.952
Vim is almost always gonna be faster.

55
00:03:01.952 --> 00:03:04.845
There's a reason why you see people flying
around, and they're always using Vim or

56
00:03:04.845 --> 00:03:05.915
Emacs or something like that.

57
00:03:05.915 --> 00:03:09.116
Cuz once you don't have to
use your mouse anymore,

58
00:03:09.116 --> 00:03:11.282
you now have two hands to do stuff.

59
00:03:11.282 --> 00:03:12.733
We'll jump into that,

60
00:03:12.733 --> 00:03:17.388
though, and we'll link to the course
on if you really wanna get good at Vim.

61
00:03:19.173 --> 00:03:24.216
So Vim is a text editor, I said it's
pretty basic, but also said it has

62
00:03:24.216 --> 00:03:29.189
three modes, and you're like Jim,
are you lying to me on its basic?

63
00:03:29.189 --> 00:03:32.982
Maybe a little,
Vim will get as complicated as you want,

64
00:03:32.982 --> 00:03:37.974
there is a baseline level of knowledge
you have to have to navigate around.

65
00:03:37.974 --> 00:03:41.569
But the modes we need to know
primarily are the insert mode, so

66
00:03:41.569 --> 00:03:46.492
that's when we're actually inserting text
into the file, or modifying some way.

67
00:03:46.492 --> 00:03:49.741
You have the primary mode, which is
kind of the baseline when you open Vim,

68
00:03:49.741 --> 00:03:50.938
that's where you're at.

69
00:03:50.938 --> 00:03:56.680
And then you have command mode for
searching, saving, actually exiting, etc.

70
00:03:56.680 --> 00:03:59.275
So we're gonna touch all these here.

71
00:03:59.275 --> 00:04:04.858
The way to get to these modes within Vim
are you press i to get an insert mode,

72
00:04:04.858 --> 00:04:09.735
ESC to get into normal regular mode,
kind of back to the default,

73
00:04:09.735 --> 00:04:12.059
and command mode is the colon.

74
00:04:13.475 --> 00:04:19.118
All right, for this exercise,
navigate to your home directory,

75
00:04:19.118 --> 00:04:24.474
make a directory called temp,
open a file called test with vi.

76
00:04:24.474 --> 00:04:29.189
So if you want, you can touch test, and
then open in vi, or you can vi test, and

77
00:04:29.189 --> 00:04:31.124
it will create the file for you.

78
00:04:31.124 --> 00:04:34.554
Write a few lines, and then save and exit.

79
00:04:34.554 --> 00:04:40.436
And the way we save and
exit is command mode wq.

