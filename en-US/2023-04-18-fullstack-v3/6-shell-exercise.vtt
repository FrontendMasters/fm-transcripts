WEBVTT

1
00:00:00.108 --> 00:00:02.465
So next let's talk about your shell.

2
00:00:02.465 --> 00:00:06.042
The shell is the actual
application running in terminal,

3
00:00:06.042 --> 00:00:11.079
the terminal's kind of the thing, the
actual application within your operating

4
00:00:11.079 --> 00:00:15.751
system that you're running, but
a shell interprets all those commands and

5
00:00:15.751 --> 00:00:19.337
converts them into something
that the OS can understand.

6
00:00:19.337 --> 00:00:24.434
OS X, these days if using
a modern MacBook uses the zsh,

7
00:00:24.434 --> 00:00:28.459
which is a more extensible
version of bash.

8
00:00:28.459 --> 00:00:32.434
It's generally the preferred way of doing
things now, but bash is the default.

9
00:00:32.434 --> 00:00:38.749
bash, you'll find on every Unix-based
operating system from here to whatever.

10
00:00:38.749 --> 00:00:40.876
It's a tongue in cheek.

11
00:00:40.876 --> 00:00:42.702
It's called the Bourne again shell.

12
00:00:42.702 --> 00:00:45.299
I looked this up and I was like,
who is this boring person?

13
00:00:45.299 --> 00:00:47.073
It certainly didn't
deal with Jason Bourne.

14
00:00:47.073 --> 00:00:51.525
Now, it's just a funny name,
I don't think it's named after anybody.

15
00:00:51.525 --> 00:00:55.225
All right, that's just a bit of fun
trivia, but bash is the default,

16
00:00:55.225 --> 00:00:56.542
zsh is considered bash,

17
00:00:56.542 --> 00:01:00.013
they're fairly interchangeable
with some minor differences.

18
00:01:00.013 --> 00:01:02.926
But zsh is the one you're using today
if you're using a modern MacBook,

19
00:01:02.926 --> 00:01:04.560
you might be using bash, that's okay.

20
00:01:04.560 --> 00:01:07.262
None of the commands we're
gonna use today changed.

21
00:01:07.262 --> 00:01:11.292
If you're wondering what
your current shell is, say,

22
00:01:11.292 --> 00:01:15.075
echo $,
echo $ just shows you your current shell.

23
00:01:15.075 --> 00:01:17.717
You can also say echo $shell.

24
00:01:17.717 --> 00:01:20.748
That's one of the reserved words,
kind of like user.

25
00:01:20.748 --> 00:01:23.297
echo $user will tell you your username.

26
00:01:23.297 --> 00:01:24.284
There's a whole list of these.

27
00:01:24.284 --> 00:01:27.680
We won't go into them cuz
they're not super critical.

28
00:01:27.680 --> 00:01:30.851
But just fun shortcuts, if you're like,
what am I actually using?

29
00:01:30.851 --> 00:01:35.363
And if you modify your shell
configuration any way, source,

30
00:01:35.363 --> 00:01:40.761
that shell config will reload your
terminal with the new configuration.

31
00:01:40.761 --> 00:01:49.337
So source ~/.bash_profile will
reload your bash configuration.

32
00:01:49.337 --> 00:01:52.424
This is important cuz you'll modify and
you'll be like, why is nothing working?

33
00:01:52.424 --> 00:01:53.849
You have to reload your shell.

34
00:01:58.867 --> 00:02:05.131
All right, so for this next exercise,
open your shell configuration,

35
00:02:05.131 --> 00:02:10.379
add a line that says,
make your shell tell you good morning.

36
00:02:10.379 --> 00:02:14.074
So now it gets a little more complicated
because I'm not being explicit.

37
00:02:14.074 --> 00:02:17.514
I want you to start getting
some of these into your memory.

38
00:02:17.514 --> 00:02:22.106
So how do we get to the terminal
to say anything back to us?

39
00:02:22.106 --> 00:02:24.137
Does anybody remember
what that command was?

40
00:02:24.137 --> 00:02:25.051
&gt;&gt; Echo.

41
00:02:25.051 --> 00:02:26.627
&gt;&gt; Echo, yes.

42
00:02:26.627 --> 00:02:30.292
So you're gonna say echo,
whatever you want it to say.

43
00:02:30.292 --> 00:02:33.423
If you wanna get fancy,
you can use that $user.

44
00:02:33.423 --> 00:02:37.836
Go ahead and play around with
your shelter fig a little bit,

45
00:02:37.836 --> 00:02:41.907
and you'll see kind of
the built-ins that are there.

