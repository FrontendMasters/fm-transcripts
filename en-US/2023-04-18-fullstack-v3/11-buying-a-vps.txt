[00:00:00]
>> Now it is time to buy a VPS. VPS, as we said before, was the virtual private server. Again, your own piece of internet real estate, the place we can do wherever we want. I like the concept of the VPS because it's a wide open field, it's a blank canvas.

[00:00:18]
We can make it to be whatever we want, but essentially we're just buying a server. So by server, we're going to open our browsers and we're gonna go to digital ocean.com. If you use that link, you get some credits. I get some credits. We're all happy. That's the lesson learned from previous courses where I did not do that I lost a lot of credits, but click on that link instead of going directly to Digital Ocean and I will do.

[00:00:44]
Do you get free credits to run your server which is great so won't cost you any money in the short term and generally these servers run about $5 a month or so. So, don't worry about the costs running out but make sure you shut down your servers afterward because that'll get you to I paid that one.

[00:01:02]
So I'm gonna navigate to digitalocean.com. And I already have a login so I'm just going to log in. So generally we're gonna create a new project. You can call it whatever you want. And the purpose doesn't really matter. But we'll say class project educational. Purposes, that we will get a pretty broad a lot of help make the UI a little bit simpler, and description if you want.

[00:01:31]
I created one called Full Stack For Frontend 3, and for class educational purposes I'll move really slowly. The reason why we're using Digital Ocean and not something like AWS. AWS is much more complex, it has a probably a broader suite of offered services that you can do but for the purpose of this class we don't need any of those things.

[00:01:56]
We don't need to set up route 53 or a bunch of easy-to-use things like that. And guess what? Is there a course on AWS on frontend masters? You bet there is. There is a course on AWS. So if you really wanna get good, there's an entire course talking about the tools and the procedures you use to set up AWS environments.

[00:02:19]
So if you want to dig in there. I like Digital Ocean, they have really great tutorials. A lot of what we're gonna cover today, you could probably look up and see some of the tutorials on Digital Ocean. The UI is very friendly. You're probably not gonna shoot yourself in the foot, which is possible pretty easily when you're creating a server or even modifying a server.

[00:02:37]
Digital Ocean does a pretty good job on that. And now I'm not sponsored by Digital Ocean. I just like their UI for a creating service. So we need to create a server we're on Digital Ocean. So it's gonna create, and Digital Ocean calls them droplets Digital Ocean droplet.

[00:02:57]
Yeah, you see where it's going? AWS calls them easy to. Yeah, not as interesting. [LAUGH] That's AWS or Digital Ocean. But let's create a droplet. So let's click the droplet. So next let's pick our region. So why does the region matter? That we pick. Why would it matter?

[00:03:25]
Yes.
>> It helps determine where you're gonna serve the website from.
>> Yeah, exactly. We wanna know where we're serving from, so we're developing on that, but we also wanna know where our visitors are coming from. So we always want the closest region to, where we think our visitors are gonna be, not necessarily where we're developing from, unless it's just development server.

[00:03:43]
In that case, put it closer to where all the developers are. I live in California, I live in beautiful Oakland, California. So I'm gonna pick San Francisco as the closest droplet location. New York is generally a good choice for East Coast people and in general. In the console of AWS, they have different regions to have US East 1, 2, they have US West 1, 2, etc.

[00:04:09]
And at least that Netflix we use all the regions. So we have servers available in all regions. And generally if you're creating a high scale web application you're gonna have servers in all the regions around the world. And you rely on load bouncers and really good routing to direct your users to the right place.

[00:04:27]
But for this is class, pick the one that's closest to you and your part of the world. Next, I'm gonna choose the data center. And it doesn't really matter. In this case, I'm just gonna say SFO1, totally fine. And look, Digital Ocean, they even have a tip here.

[00:04:47]
Just what I was saying, select a data center closest to your users. See, that's why we use Digital Ocean, little helpful tips like that. Now it comes time that we'll get serious. Region, total easy we can pick another region. Operating system, the OS you have to live with.

[00:05:04]
You can easily switch OSs once you start developing on one. So we wanna be really concerned about what we're gonna choose here. We're gonna choose Ubuntu. And we're gonna choose the LTS version and the 64 bit LTS version. And let's talk about that here. Because the the OS is actually fairly important.

[00:05:33]
Like I said, Ubuntu the most common one. And LTS stands for long term support, and that's the one you want running on your server. If you're gonna go through the trouble of buying an operating system, putting all these hours into developing an application. You wanna make sure it's on the LTS and not something that's on the bleeding edge.

[00:05:51]
It's really tempting to be on the bleeding edge, but you have to think like an enterprise software developer, which is is it gonna be on the bleeding edge? No, because there's bugs, there's things that people haven't encountered. You want the most recent, but the slowest, most stable version you can get for your operating system.

[00:06:07]
That's always the rule when you think about enterprise computing. You're welcome to choose something more on the bleeding or close to the more recent version, but always stick with LTS. I was gonna say that's a pretty good rule, unless you really need a registration.

