WEBVTT

1
00:00:00.000 --> 00:00:01.028
Version control,

2
00:00:01.028 --> 00:00:04.953
I assume most people here have worked
with some sort of version control.

3
00:00:07.252 --> 00:00:10.396
Yeah, probably git is
probably the big one, but

4
00:00:10.396 --> 00:00:13.086
there's also Subversion, mercurial.

5
00:00:13.086 --> 00:00:15.628
Fun fact, remember the other day,

6
00:00:15.628 --> 00:00:20.394
in the last section we talked about
hashing, guess what git uses?

7
00:00:20.394 --> 00:00:21.289
&gt;&gt; Hashes.

8
00:00:21.289 --> 00:00:25.666
&gt;&gt; Hashes, yeah, SHA-1,
hashes are everywhere.

9
00:00:25.666 --> 00:00:28.305
The more you understand that,
the more you're like, okay,

10
00:00:28.305 --> 00:00:29.793
now I understand how things work.

11
00:00:29.793 --> 00:00:33.595
Even more fun facts, and I told you
I'm a nerd, so this is really fun,

12
00:00:33.595 --> 00:00:34.959
guess who invented git?

13
00:00:34.959 --> 00:00:36.740
&gt;&gt; Linus Torvalds?

14
00:00:36.740 --> 00:00:40.683
&gt;&gt; Yes, Linus Torvalds,
the same person who invented Linux.

15
00:00:40.683 --> 00:00:44.088
Wow, what a world,
what an engineer, that's impressive,

16
00:00:44.088 --> 00:00:47.570
two major piece of technology
that we rely on every single day.

17
00:00:47.570 --> 00:00:52.570
Yeah, fascinating, really fascinating.

18
00:00:52.570 --> 00:00:59.729
So, for the exercise, when we left off, it
was to create a git repository on GitHub.

19
00:00:59.729 --> 00:01:05.424
On your server,
create an SSH key called gh_key.

20
00:01:05.424 --> 00:01:12.050
And then you need to add that SSH key to
GitHub, add a remote repo to your server.

21
00:01:12.050 --> 00:01:16.505
Make sure you're using that key, and then
you push your local repository to GitHub.

22
00:01:16.505 --> 00:01:18.512
The reason why we're doing that is so

23
00:01:18.512 --> 00:01:22.027
that we don't have to do all of
our coding on the server anymore.

24
00:01:22.027 --> 00:01:26.028
We can now do it on our local machine
via GitHub, and we just push it up and

25
00:01:26.028 --> 00:01:27.112
pull it back down.

26
00:01:27.112 --> 00:01:29.721
So I'm gonna walk through this, because,

27
00:01:29.721 --> 00:01:34.099
actually I tried to run through all
the exercises myself multiple times.

28
00:01:34.099 --> 00:01:37.211
And I actually ran into some issues,
and it stumped me, and

29
00:01:37.211 --> 00:01:38.589
I made such a silly error.

30
00:01:38.589 --> 00:01:42.944
So I wanna walk through and make sure
you're not making silly errors as well.

31
00:01:42.944 --> 00:01:46.722
So I won't do every single step, because I
already created the GitHub account, etc,

32
00:01:46.722 --> 00:01:48.289
that's pretty straightforward.

33
00:01:48.289 --> 00:01:50.620
But I will do the GitHub key and
make sure it's being used,

34
00:01:50.620 --> 00:01:52.152
cuz that part's a little bit tricky.

35
00:01:55.428 --> 00:02:02.056
So I'm gonna switch back
to my server here, clear.

36
00:02:02.056 --> 00:02:04.466
And I'm just gonna double check,

37
00:02:04.466 --> 00:02:08.048
cuz I like to make sure
things are where I left them.

38
00:02:12.585 --> 00:02:16.155
All right, so I'm in my var/www/app,

39
00:02:16.155 --> 00:02:20.952
I've already done a git-init,
so I'm in my git repo.

40
00:02:20.952 --> 00:02:25.323
Now the next thing we wanna do is
we need to create a new SSH key,

41
00:02:25.323 --> 00:02:27.689
anybody remember how to do that?

42
00:02:30.391 --> 00:02:33.931
&gt;&gt; [INAUDIBLE]
&gt;&gt; [LAUGH]

43
00:02:33.931 --> 00:02:35.343
&gt;&gt; ssh-keygen.

44
00:02:35.343 --> 00:02:37.242
&gt;&gt; ssh-keygen, that's right.

45
00:02:37.242 --> 00:02:46.436
So ssh-keygen, And I don't wanna do
it here, because if I do it here,

46
00:02:46.436 --> 00:02:49.484
it's gonna drop it in this folder,
and it might also copy it over.

47
00:02:49.484 --> 00:02:53.816
So this is a mistake I made last night
too, so I'm just gonna Ctrl+C out of here,

48
00:02:53.816 --> 00:02:56.390
clear the window, and
I'm just gonna cd home.

49
00:02:56.390 --> 00:03:00.910
I'm a stickler for these things,
it makes life easier.

50
00:03:00.910 --> 00:03:07.307
So now I'm gonna ssh-keygen in my
.ssh directory in my home, keygen.

51
00:03:11.267 --> 00:03:15.654
And I will call that gh_key, I've
already made one, so it will collide, so

52
00:03:15.654 --> 00:03:17.012
I won't make one here.

53
00:03:17.012 --> 00:03:22.402
But this is how to make the key for
your GitHub account.

54
00:03:27.816 --> 00:03:34.840
Okay, so if I do an ls, I see there's
a private key and a public key.

55
00:03:37.252 --> 00:03:38.442
Everybody here so far?

56
00:03:40.901 --> 00:03:45.456
All right, at this point, you've probably
like, I've made so many SSH keys, it's so

57
00:03:45.456 --> 00:03:46.447
much fun doing it.

58
00:03:46.447 --> 00:03:49.906
But it doesn't hurt to be
a little bit more thorough.

59
00:03:49.906 --> 00:03:53.473
So next, we add that SSH key to GitHub.

60
00:03:53.473 --> 00:03:58.387
And if you follow
the instructions on the slides,

61
00:03:58.387 --> 00:04:03.658
GitHub has a whole nice,
beautiful documentation.

62
00:04:03.658 --> 00:04:07.287
They're very good about documentation,
but I'll just show you.

63
00:04:07.287 --> 00:04:11.792
So GitHub, get myself here.

64
00:04:18.227 --> 00:04:24.515
And the repo was just the name
of my website, jemstack.lol.

65
00:04:24.515 --> 00:04:27.212
And I'm gonna go here to Settings.

66
00:04:27.212 --> 00:04:30.241
You don't actually have to go to the repo,
it's your general settings and

67
00:04:30.241 --> 00:04:31.890
we're gonna go down to SSH and GBG keys.

68
00:04:31.890 --> 00:04:37.631
Let me see here, I added a key,
you can call it whatever you want.

69
00:04:37.631 --> 00:04:39.254
But what do we copy to GitHub?

70
00:04:39.254 --> 00:04:41.225
Somebody remind me, your?

71
00:04:41.225 --> 00:04:44.906
&gt;&gt; Public-
&gt;&gt; Public key, that's right, that's right.

72
00:04:44.906 --> 00:04:47.928
Okay, so you copy your public key,
just like DigitalOcean.

73
00:04:47.928 --> 00:04:51.608
So the next thing we do
is we add a remote repo.

74
00:04:51.608 --> 00:04:56.885
So to do that, let's jump back to
my application directory /var/www.

75
00:05:01.927 --> 00:05:05.887
We say git remote add origin, and

76
00:05:05.887 --> 00:05:10.418
I don't remember the exact command.

77
00:05:10.418 --> 00:05:16.921
So I'm just gonna follow the instructions,
never a bad idea.

78
00:05:16.921 --> 00:05:18.228
So git remote add origin.

79
00:05:21.494 --> 00:05:24.976
Then at this point you go to your repo
that you created, and you just put copy.

80
00:05:33.708 --> 00:05:35.123
And then you paste in the git.

81
00:05:37.358 --> 00:05:40.918
You've probably done this at some
point in your career already,

82
00:05:40.918 --> 00:05:44.427
we've all worked with GitHub or
GitLab or something like that.

83
00:05:44.427 --> 00:05:46.489
Nothing groundbreaking here,

84
00:05:46.489 --> 00:05:51.386
I won't add another origin cuz then I
have to delete it and it'll be a thing.

85
00:05:51.386 --> 00:05:55.688
So now we get to the part where I made
a mistake when I was playing with this

86
00:05:55.688 --> 00:05:58.716
last night,
we need to ensure the new key is used.

87
00:05:58.716 --> 00:06:02.803
So to do that, we need to vi and
we need to vi,

88
00:06:06.602 --> 00:06:10.375
And we need to create
a configuration file in ssh.

89
00:06:10.375 --> 00:06:15.157
So the mistake I made last night was I
sudoed it instead of just running it as my

90
00:06:15.157 --> 00:06:16.072
normal user.

91
00:06:16.072 --> 00:06:18.768
And it was failing, and
it was public key, public key failed.

92
00:06:18.768 --> 00:06:20.844
I was like, did I spell something wrong?

93
00:06:20.844 --> 00:06:23.658
And it took me an embarrassing
long amount of time.

94
00:06:23.658 --> 00:06:29.181
And I'm like, I don't need to sudo it,
it's just a regular file owned by myself.

95
00:06:29.181 --> 00:06:33.342
So your config file in .ssh/config
should look something like, actually,

96
00:06:33.342 --> 00:06:35.178
it should look exactly like this.

97
00:06:35.178 --> 00:06:40.274
You put your host, github.com,
your hostname, github.com,

98
00:06:40.274 --> 00:06:45.833
the identity file is your home
directory /.ssh, and your GitHub key.

99
00:06:45.833 --> 00:06:50.406
&gt;&gt; Is it possible to see how to connect
ssh keys to two different GitHub accounts

100
00:06:50.406 --> 00:06:51.839
from the same machine?

101
00:06:51.839 --> 00:06:54.374
&gt;&gt; You can use the same ssh
key as much as you want,

102
00:06:54.374 --> 00:06:57.626
totally up to your comfort level
when it comes to security.

103
00:06:57.626 --> 00:07:01.639
But yeah, you're welcome to do that,
or you can create new ones,

104
00:07:01.639 --> 00:07:02.795
totally up to you.

105
00:07:08.416 --> 00:07:13.178
Okay, so hopefully your .ssh config
file looks something like this.

106
00:07:17.331 --> 00:07:18.825
So I'm gonna quit out of here.

107
00:07:20.652 --> 00:07:27.761
So, The good way of testing it out
is you can say git push origin main.

108
00:07:29.905 --> 00:07:32.779
And I didn't get any error, so
that means I hooked it up correctly.

109
00:07:32.779 --> 00:07:37.698
Now if you do get errors,
that means either your key file

110
00:07:37.698 --> 00:07:42.105
isn't set correctly or
you mistyped something.

111
00:07:42.105 --> 00:07:45.605
There's a lot of ways you can go wrong,
but that's okay,

112
00:07:45.605 --> 00:07:47.325
we expect to make mistakes.

113
00:07:50.042 --> 00:07:54.213
The way we can test it out is,
I have all these things here.

114
00:08:00.166 --> 00:08:05.228
The way we can test it out
is we can say ssh- test, and

115
00:08:05.228 --> 00:08:10.079
we'll say v, and we'll say git@github.com.

116
00:08:13.271 --> 00:08:15.851
And it's gonna make a test connection, and

117
00:08:15.851 --> 00:08:20.812
it's gonna tell you everything that's
going wrong, if something is going wrong.

118
00:08:20.812 --> 00:08:23.943
This saved my butt last night cuz I
was scratching my head, I'm like,

119
00:08:23.943 --> 00:08:25.122
why isn't this working?

120
00:08:25.122 --> 00:08:28.169
And I was like,
let me just run the test command and

121
00:08:28.169 --> 00:08:29.900
just show me what ssh is doing.

122
00:08:29.900 --> 00:08:33.165
So if you're stuck and
something's not working right,

123
00:08:33.165 --> 00:08:37.382
double check that your ssh key is being
used, that the permissions are set

124
00:08:37.382 --> 00:08:43.945
correctly, Because it'll throw
a warning on all these things

125
00:08:43.945 --> 00:08:48.673
&gt;&gt; So the test run is ssh-Tv,

126
00:08:48.673 --> 00:08:53.200
then git@github.com?

127
00:08:53.200 --> 00:08:57.924
&gt;&gt; Yes, and because I got stuck,
I made a whole slide you can refer

128
00:08:57.924 --> 00:09:02.131
back to in big bold letters
called In case you get stuck.

129
00:09:02.131 --> 00:09:04.831
There's one for testing your
ssh connection, if you're like,

130
00:09:04.831 --> 00:09:07.105
why does it keep saying
permission denied publickey.

131
00:09:07.105 --> 00:09:08.874
SSH isn't telling me anything.

132
00:09:08.874 --> 00:09:13.122
Use this to test your connection, whether
it's to your DigitalOcean droplet or

133
00:09:13.122 --> 00:09:13.624
GitHub.

134
00:09:13.624 --> 00:09:17.426
And remember yesterday, we ran into that
trying to edit a read-only file because I

135
00:09:17.426 --> 00:09:19.995
didn't open it with sudo,
and I'd already edited it.

136
00:09:19.995 --> 00:09:21.518
There's nothing I can do.

137
00:09:21.518 --> 00:09:23.800
And I was like,
there's a command to get around this, but

138
00:09:23.800 --> 00:09:25.626
I can't remember because
it's kind of long.

139
00:09:25.626 --> 00:09:28.560
Here's that command to you,
how to save a read-only file in vim.

140
00:09:32.713 --> 00:09:34.741
Yeah, I am not a vim expert, so

141
00:09:34.741 --> 00:09:38.565
that's why I didn't remember
this off the top of my head.

142
00:09:38.565 --> 00:09:42.116
But that command is fun
because you're writing and

143
00:09:42.116 --> 00:09:47.330
then you're saying I wanna sudo a file,
tee is going to open a new process.

144
00:09:47.330 --> 00:09:51.220
Well, tee is actually going to
just read from standard input and

145
00:09:51.220 --> 00:09:55.559
then write to standard output, and
the % is just the filename itself.

146
00:09:55.559 --> 00:09:58.249
So essentially we're
opening a new shell and

147
00:09:58.249 --> 00:10:02.298
we're saying overwrite the existing
file using the sudo command.

148
00:10:02.298 --> 00:10:07.262
Yeah, most people will probably make a
shortcut for this in their VMRC file, but

149
00:10:07.262 --> 00:10:09.826
we're not going too deep into vim today.

150
00:10:09.826 --> 00:10:12.847
But this is pretty useful because
at some point in your career or

151
00:10:12.847 --> 00:10:16.609
today or you already have, you will open
a file and you make all these changes,

152
00:10:16.609 --> 00:10:17.935
and you're like, great.

153
00:10:17.935 --> 00:10:20.465
And then you can't save, and you're stuck.

154
00:10:20.465 --> 00:10:22.927
Remember this slide.

155
00:10:25.453 --> 00:10:29.297
And then I threw in pkill, we haven't
really run into this issue yet, but

156
00:10:29.297 --> 00:10:32.652
if you have a process that just won't die,
pkill that process.

157
00:10:32.652 --> 00:10:35.227
So pkill node will kill node for you.

158
00:10:35.227 --> 00:10:38.549
Sometimes you can't Ctrl+C out of things,
so you just have to open another shell and

159
00:10:38.549 --> 00:10:39.900
you kill all the other processes.

160
00:10:39.900 --> 00:10:43.431
That one I actually probably use
more in my day-to-day engineering.

161
00:10:43.431 --> 00:10:47.875
When I see something I created eating up a
lot of memory, and it's just like running

162
00:10:47.875 --> 00:10:52.255
and running and running, and I can't kill
it cuz I don't know where it came from,

163
00:10:52.255 --> 00:10:54.183
I can just kill the entire process.

164
00:10:54.183 --> 00:10:57.222
And then view permissions as numbers,
not super useful, but

165
00:10:57.222 --> 00:10:59.451
it's probably a little bit more intuitive.

166
00:10:59.451 --> 00:11:04.176
When we chmod, we're always doing 600 or
644, something like that,

167
00:11:04.176 --> 00:11:07.666
but translating those into the read,
write, execute,

168
00:11:07.666 --> 00:11:11.463
which we'll talk more later today on,
is kind of confusing.

169
00:11:11.463 --> 00:11:12.426
Yes, question.

170
00:11:12.426 --> 00:11:17.046
&gt;&gt; So if the last error message
we get on the test run is

171
00:11:17.046 --> 00:11:22.216
authenticity of host,
github cannot be established,

172
00:11:22.216 --> 00:11:27.834
will that means that we copied
the public key wrong somehow?

173
00:11:27.834 --> 00:11:31.956
&gt;&gt; Authenticity of host, well,
that should be right, it usually throws up

174
00:11:31.956 --> 00:11:36.820
the authenticity warning because you've
never connected and you'd say yes, yeah.

175
00:11:40.092 --> 00:11:44.254
And I think we covered that in our
previous section where that whole known

176
00:11:44.254 --> 00:11:48.566
host file which gives you that list
of places you've connected to before.

177
00:11:48.566 --> 00:11:51.852
And ssh is gonna be like, hey,
you've never connected to this machine,

178
00:11:51.852 --> 00:11:53.823
are you sure you're doing the right thing?

179
00:11:53.823 --> 00:11:57.756
Again, ssh is really trying to make
sure you don't do anything poorly or

180
00:11:57.756 --> 00:11:59.307
shoot yourself in the foot.

181
00:12:02.535 --> 00:12:07.534
So, if everything's working correctly, you
should be able to pull and push from your

182
00:12:07.534 --> 00:12:12.132
remote origin on GitHub, and now you can
clone that repo on your local machine.

183
00:12:12.132 --> 00:12:15.939
So the coding we need to do today,
we can do on our local machine,

184
00:12:15.939 --> 00:12:19.336
we can just push it up,
then pull it down from our server.

185
00:12:19.336 --> 00:12:22.947
So much easier, that's why we're
not going super deep into vi.

186
00:12:22.947 --> 00:12:25.046
We needed to edit some files but

187
00:12:25.046 --> 00:12:29.417
let's use the conveniences of
modern tooling on our machines.

