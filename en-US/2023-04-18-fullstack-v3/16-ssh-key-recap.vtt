WEBVTT

1
00:00:00.002 --> 00:00:04.942
All right, so let's run through
creating an ssh key one more time,

2
00:00:04.942 --> 00:00:07.723
just in case I lost anybody on the way.

3
00:00:07.723 --> 00:00:12.228
I know some people using Windows commands,
should be the same actually, but

4
00:00:12.228 --> 00:00:14.462
it might look a little bit different.

5
00:00:14.462 --> 00:00:19.006
So what we did was,
to we create a new ssh key, we went,

6
00:00:22.545 --> 00:00:28.403
We went into the ssh directory,
so that's cd ~/.ssh.

7
00:00:28.403 --> 00:00:30.549
Then we said ssh-keygen,

8
00:00:37.615 --> 00:00:41.780
And then we gave it a name,
we called it full stack front end,

9
00:00:41.780 --> 00:00:45.961
already did that, so
I won't do it again, but call it fsfe.

10
00:00:45.961 --> 00:00:51.626
And then once you're all done,
I'm just gonna exit out of there.

11
00:00:51.626 --> 00:00:55.792
And you ls full stack front end, if you
have a bunch of keys for some reason,

12
00:00:55.792 --> 00:01:00.313
remember we talked about using grep to
find the actual thing we're looking for.

13
00:01:00.313 --> 00:01:03.982
So you should have two,
two keys in there, once the private key,

14
00:01:03.982 --> 00:01:07.737
the full stack front end,
then the .pub which is your public key.

15
00:01:07.737 --> 00:01:11.839
So to get the public key, we need
to paste that into Digital Ocean so

16
00:01:11.839 --> 00:01:16.034
it knows how to encrypt our ssh
tunnel when we connect to our server.

17
00:01:16.034 --> 00:01:20.237
And it'll put the public key
onto the server for us as well.

18
00:01:20.237 --> 00:01:21.690
That's part of setting up the server.

19
00:01:21.690 --> 00:01:28.041
So we're gonna cat fsfe,
the public key, .pub.

20
00:01:28.041 --> 00:01:30.290
We copy all of this,

21
00:01:38.958 --> 00:01:44.169
And then we went through the exercise
of picking a datacenter,

22
00:01:44.169 --> 00:01:47.226
Ubuntu LTS by creating a new ssh key.

23
00:01:47.226 --> 00:01:52.428
Then we paste our key in here,
like so, we give it a name.

24
00:01:52.428 --> 00:01:54.152
And you can call this whatever you want,

25
00:01:54.152 --> 00:01:56.701
as long as you remember what
it's tied to on your computer.

26
00:01:59.617 --> 00:02:05.417
Then you select a key,
then you say we're creating one droplet,

27
00:02:05.417 --> 00:02:08.274
and then you give it a host name.

28
00:02:08.274 --> 00:02:09.576
You can call it whatever you like.

29
00:02:11.501 --> 00:02:15.643
And then you hit Create Droplet, which
I won't do cuz I already did one, and

30
00:02:15.643 --> 00:02:19.233
I don't wanna get confused myself with so
many servers running.

31
00:02:19.233 --> 00:02:20.422
But you go ahead and create that droplet.

32
00:02:20.422 --> 00:02:24.641
So then you'll have a droplet that's
getting spun up with your SSH key

33
00:02:24.641 --> 00:02:29.230
pre-installed, the public key installed,
and you have the private key.

34
00:02:29.230 --> 00:02:33.559
So once that's up and running, You

35
00:02:33.559 --> 00:02:36.616
should have something here that says
droplet or something like that.

36
00:02:38.328 --> 00:02:41.326
And then you copy, or
you can always select.

37
00:02:41.326 --> 00:02:44.563
So this is the IP address of your
brand new server you just set up.

38
00:02:49.078 --> 00:02:51.797
So to log in to our server,
we need to pass it the identity file.

39
00:02:51.797 --> 00:02:59.295
So we're gonna say ssh, we'll use -i
to specify where our private key is.

40
00:02:59.295 --> 00:03:02.798
And we say ~/ cuz it's an ssh,
even though we're already there,

41
00:03:02.798 --> 00:03:04.530
it doesn't hurt to be specific.

42
00:03:04.530 --> 00:03:08.770
Your private key, so the one that
does not end at .pub, and remember,

43
00:03:08.770 --> 00:03:13.663
the first user always created on a server
is called root, indicates root access.

44
00:03:13.663 --> 00:03:18.891
So we're gonna say root@ our IP address.

45
00:03:18.891 --> 00:03:25.552
And if we did everything right,
We're now logged in.

46
00:03:25.552 --> 00:03:30.338
So you may run into something where
it says something along the lines of,

47
00:03:30.338 --> 00:03:34.655
as we did earlier,
the authenticity of the hosts, blah, blah,

48
00:03:34.655 --> 00:03:37.812
blah, your IP address
can't be established.

49
00:03:37.812 --> 00:03:43.501
That's essentially saying, hey, you've
never ssh into this computer before.

50
00:03:43.501 --> 00:03:45.435
Are you sure it's the right one?

51
00:03:45.435 --> 00:03:47.457
And this is really important,

52
00:03:47.457 --> 00:03:51.752
because let's say you were
sshing into frontendmasters.com.

53
00:03:51.752 --> 00:03:56.225
How do I know that frontendmasters.com
hasn't been hijacked by someone else?

54
00:03:56.225 --> 00:03:59.513
We don't, because the IP address
can change underneath us.

55
00:03:59.513 --> 00:04:01.478
And so we're assuming we're
connecting to one host, but

56
00:04:01.478 --> 00:04:03.213
it's actually something
completely different.

57
00:04:03.213 --> 00:04:08.052
The computer checks that using
the server's SSH key and says, hey,

58
00:04:08.052 --> 00:04:10.315
we've never seen this before.

59
00:04:10.315 --> 00:04:11.730
Are you sure this is the right thing?

60
00:04:11.730 --> 00:04:13.958
So the first time you connect your server,
you're gonna get a prompt like this.

61
00:04:13.958 --> 00:04:17.301
The first time you connect to any new
server that you've never connected before,

62
00:04:17.301 --> 00:04:18.863
you're gonna get a prompt like this.

63
00:04:18.863 --> 00:04:20.775
You can generally say yes.

64
00:04:20.775 --> 00:04:23.399
If this ever happens and
it's not expected,

65
00:04:23.399 --> 00:04:27.207
do not say yes cuz then you have
different problems at that point.

66
00:04:27.207 --> 00:04:30.784
And if you wanna check out,
this isn't really necessary, but

67
00:04:30.784 --> 00:04:35.507
if you wanna see who all you've connected
to in the past, we can look at the, oops,

68
00:04:35.507 --> 00:04:37.490
we can look at the known host file.

69
00:04:37.490 --> 00:04:38.543
So I'm gonna exit out of my server.

70
00:04:38.543 --> 00:04:41.028
To exit out of your server,
you just type exit.

71
00:04:41.028 --> 00:04:44.371
Probably you should put that somewhere
in there, but you can guess, or

72
00:04:44.371 --> 00:04:47.604
you close your terminal,
it'll close down the SSH connection, but

73
00:04:47.604 --> 00:04:50.354
then you have to make a new terminal,
so let's type exit.

74
00:04:50.354 --> 00:04:55.626
So we can look at the known hosts,
so we can cat ~/.ssh/ n and

75
00:04:55.626 --> 00:05:00.316
auto tab, so
something called the known_hosts file.

76
00:05:00.316 --> 00:05:05.167
So this just keeps track of every
single computer we've ever used

77
00:05:05.167 --> 00:05:09.764
an SSH key to connect to,
it just keeps a long, long history.

78
00:05:09.764 --> 00:05:12.533
And you can see I've
connected a lot of computers.

79
00:05:12.533 --> 00:05:15.037
And again, it's just an extra
security precaution saying like, hey,

80
00:05:15.037 --> 00:05:16.487
are you sure you know what you're doing?

81
00:05:16.487 --> 00:05:20.487
Okay, we're gonna remember this for
next time, and it won't bother you again.

82
00:05:20.487 --> 00:05:25.509
Like I said, if you're ever SSHing into
your server and you get this prompt again,

83
00:05:25.509 --> 00:05:29.916
something is wrong, and you should
double-check before you connect.

84
00:05:29.916 --> 00:05:32.930
Okay, hopefully we're all there.

85
00:05:32.930 --> 00:05:36.093
Hopefully, we all successfully
connected into our server.

86
00:05:41.904 --> 00:05:43.977
You know what I didn't like?

87
00:05:43.977 --> 00:05:47.377
I'm pretty lazy, and I wanna
shortcut as much as I possibly can.

88
00:05:47.377 --> 00:05:50.592
I don't wanna have to specify my
identity file every single time.

89
00:05:50.592 --> 00:05:53.047
I think SSH should pick
that up by default.

90
00:05:53.047 --> 00:05:55.725
So we can use that by
modifying our SSH config.

91
00:05:58.853 --> 00:06:04.068
So let's go ahead and,
you can follow along here.

92
00:06:04.068 --> 00:06:06.764
So we're already in SSH,
but I like to be specific.

93
00:06:06.764 --> 00:06:11.570
So I'm gonna vi, And gonna go to SSH,

94
00:06:11.570 --> 00:06:14.407
the directory, and I'm gonna say config.

95
00:06:19.991 --> 00:06:24.034
And I wanna make sure that
the AddKeysToAgent is true and

96
00:06:24.034 --> 00:06:26.449
that we're using the keychain.

97
00:06:26.449 --> 00:06:29.785
So here's where I can specify
whatever my default identity file is.

98
00:06:29.785 --> 00:06:31.872
I can lay them out explicitly.

99
00:06:31.872 --> 00:06:36.339
Or even better, I can just add it to the
keychain, so it'll always automatically

100
00:06:36.339 --> 00:06:40.373
run through every single pair whenever
I'm connecting to an SSH client.

101
00:06:40.373 --> 00:06:43.243
Really, really useful thing,
especially if you're connecting to

102
00:06:43.243 --> 00:06:45.524
a bunch of servers at a time and
you have a bunch of keys.

103
00:06:45.524 --> 00:06:47.016
You add them to your identity file.

104
00:06:47.016 --> 00:06:50.121
SSH will try every single one of
them until it gets the right one.

105
00:06:50.121 --> 00:06:52.567
There's no shame in trying all of them.

106
00:06:52.567 --> 00:06:56.438
But most importantly, we wanna make
sure the AddKeysToAgent says yes.

107
00:06:56.438 --> 00:06:59.852
We want the UseKeychain also to say yes.

108
00:07:02.143 --> 00:07:04.689
And we're just gonnaclose vm because
we're not, I didn't make any changes,

109
00:07:04.689 --> 00:07:05.571
you may have made a change.

110
00:07:05.571 --> 00:07:10.414
So I'm just gonna say :q.

111
00:07:10.414 --> 00:07:14.174
So to add something to the keychain,

112
00:07:14.174 --> 00:07:18.065
we're gonna use ssh add, ssh-add.

113
00:07:18.065 --> 00:07:25.597
And this one's a little funky because
Apple OSX has its own kind of strangeness,

114
00:07:25.597 --> 00:07:29.694
so we have to type in
this specific command,

115
00:07:29.694 --> 00:07:34.597
--apple-use-keychain and
the name of our key.

116
00:07:34.597 --> 00:07:36.459
So we're putting our private
key on the keychain.

117
00:07:38.343 --> 00:07:44.978
So it's --apple, -use-keychain and

118
00:07:44.978 --> 00:07:50.597
then name of our private key,
which is fsfe, all right?

119
00:07:50.597 --> 00:07:51.226
And it's been added.

120
00:07:51.226 --> 00:07:54.078
So now, if I did things correctly,

121
00:07:54.078 --> 00:07:59.605
I should be able to SSH without
having to specify that identity file.

122
00:07:59.605 --> 00:08:02.306
I have not memorized my IP, so
I'm gonna jump back to DigitalOcean.

123
00:08:02.306 --> 00:08:05.129
I'm gonna copy this again.

124
00:08:05.129 --> 00:08:08.304
So now we can SSH, @ our IP.

125
00:08:11.111 --> 00:08:14.596
And now we're in, and now we don't
have to specify that identity file

126
00:08:14.596 --> 00:08:17.567
every single time,
much more convenient and much faster.

127
00:08:17.567 --> 00:08:19.667
Because once you're working on
the server in the back end,

128
00:08:19.667 --> 00:08:21.444
you'll be switching back and
forth quite often.

129
00:08:21.444 --> 00:08:24.658
So this just saves a couple of keystrokes.

130
00:08:24.658 --> 00:08:27.324
Someone was asking, vi,
is it a shortcut for vim?

131
00:08:27.324 --> 00:08:30.120
Yes, you can say vim or vi.

132
00:08:30.120 --> 00:08:33.664
They both open Vim.

133
00:08:33.664 --> 00:08:40.118
Technically, Vim is vi improved,
but it's like PHP.

134
00:08:40.118 --> 00:08:42.090
What do we say PHP stands for?

135
00:08:42.090 --> 00:08:46.222
PHP, Hypertext Preprocessor, yeah.

136
00:08:46.222 --> 00:08:48.344
So it's kind of the same story.

137
00:08:55.359 --> 00:08:58.368
Someone's asking,
is the command --apple/use-keychain?

138
00:08:58.368 --> 00:09:02.358
Yes, that's only for OSX computers.

139
00:09:02.358 --> 00:09:05.262
Windows will use a different command,
I'm not sure, but

140
00:09:05.262 --> 00:09:07.227
I think it can just use the regular SSH.

141
00:09:07.227 --> 00:09:11.872
If you man SSH, you should be
able to use the standard config.

142
00:09:11.872 --> 00:09:15.768
If there's not a config file in your SSH,
you can just create one.

143
00:09:15.768 --> 00:09:21.061
Just in your.ssh folder, just create
config, and then put the config in there.

144
00:09:21.061 --> 00:09:24.679
And looks like someone's getting,
can't connect on port 22 to their IP,

145
00:09:24.679 --> 00:09:26.250
they're getting a parse error.

146
00:09:26.250 --> 00:09:29.696
That usually means you copied the public
key, or maybe you're missing a line or

147
00:09:29.696 --> 00:09:31.299
out of the space somewhere in there.

148
00:09:31.299 --> 00:09:35.073
So just double check that and feel
free to delete the key and readd it or

149
00:09:35.073 --> 00:09:36.845
create another key if you need.

150
00:09:36.845 --> 00:09:38.881
We can create as many SSH keys as we want.

151
00:09:38.881 --> 00:09:43.516
Just don't lose track of them because
you'll be like, which one is it?

152
00:09:43.516 --> 00:09:44.214
It's a whole thing.

153
00:09:44.214 --> 00:09:45.572
It's a whole thing.

