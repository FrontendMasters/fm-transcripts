[00:00:00]
>> What does it mean to be a Full Stack engineer? Anybody? Take a stab at it.
>> Having like full responsibility for data input, handling and representation to the user.
>> Yeah, full responsibility for data input, and data, yeah I like that. Any other interpretations?
>> One who can do a bit of everything.

[00:00:31]

>> [LAUGH]
>> Generalist.
>> Proficient in all aspects of modern computing.
>> I like the proficient, but I'll be honest, it is almost impossible to be really really good at all these things. Almost every topic here is so nuanced and has so much complexity underlying it that your best chance is to understand all these systems, and be able to put them together.

[00:00:56]
But to be called an expert or anything like that is very difficult proposition. There's probably only a few people in the world who have that level of expertise. And again, that's okay, that's totally okay. I just want you all to understand how all these systems tie together. Take the interesting parts for yourself, but if nothing else, by the end, you will be familiar.

[00:01:17]
And when you see these concepts in terms, you'll be like, okay. I don't necessarily remember how to implement it myself, but I remember I've done it before, and I understand how they work and the role they play in the broader system. And someone said generalists, that's what I like.

[00:01:31]
I like that term generalists, someone that can do a little bit of everything. Again, you don't have to be an expert, but it just means you can put it all together.
>> The Full Stack engineer can implement and develop the whole life cycle of the web app website.

[00:01:49]
Jack of all trades Master of None.
>> [LAUGH]
>> Full Stack engineer is someone who builds a complete working app Full Stack technology refers to the entire depth of a computer system application. And Full Stack web developers are those who are capable of developing both frontend and backend of the web.

[00:02:18]
A Swiss Army coder.
>> [LAUGH]
>> Someone who can understand the big picture and uncover all that was needed to deliver the software alone or entity. Having an understanding of all pieces of the stack Is a tongue in cheek one in here someone who can barely put together half working software
>> [LAUGH] That's true too.

[00:02:45]

>> [LAUGH] The entire IT department.
>> [LAUGH] So say IT is different from Full Stack, but there's some overlap there suprissingly enough. Those are all good answers I still like the generalist jack of all trades with Army Knife etc. Because it emphasizes the point that you don't have to be an expert all these systems.

[00:03:11]
You're not gonna be an expert in all these systems. But you just need to understand how they fit together, and then find out who to talk to you when you do need an expert system. So what is Full Stack engineer? What is a stack? Don't worry I won't talk to the audience because who knows where we're gonna go with that one.

[00:03:29]
But a stack I generally consider is some sort of user interface. Otherwise, what are you building, if people can't interact with it, a web server. If we're talking specifically about web applications here which we are, a database of some kind, the operating system, something a lot of people don't consider, we just take for granted, but they exist, on every UI, there's some sort of operating system underneath it, and an application server.

[00:03:58]
Application server depends on the stack, whether or not you need one. But I consider this a pretty good definition of a stack. But again, the term will vary wildly. There's a few popular stacks. You may have heard of the LAMP stack anybody, LAMP stack? Yeah, funny enough, the most popular stack in the world.

[00:04:21]
But a lot of frontend engineers are like, what's Apache? What's PHP? PHP, what's my SQL? Generally considered a WordPress stack which again I think a lot of us writing code in our day to day writing react forget. WordPress is still by far the most popular way of creating a web page on the internet.

[00:04:41]
There's the MEAN stack, Mongo, Express, Angular, Node.JS. There's the MERN stack which is probably a little bit newer Mongo, Express, React, Node.JS. You're saying Jem how did these cool names like MEAN and MERN come about marketing. No, I'm joking, but like, I'm also serious. These stacks are kind of arbitrary.

[00:05:04]
The names they put together are arbitrary. It's really about marketers, developer advocates, fanboys putting together these terms. So if someone is like, You're not using the MEAN stack, don't, bother with them. It doesn't matter what your stack is really, as long as you're familiar with it and you're comfortable and there's a million different acronyms we can make.

[00:05:25]
So generally a good, not a good, but a common friend in stack is Reacts, NodeJS and Redis. That's fairly popular one. Another one that may be a little less popular, or at least that a lot of people haven't heard of is Angular, Tomcat, and MySQL. Anybody heard of Tomcat?

[00:05:46]

>> No.
>> Yeah, what is it?
>> Web server.
>> Yeah.
>> Basically.
>> For Java yeah, very popular application server or web server. But Friend Engineers, we probably haven't heard about that because we consider that a backend thing, but it's really not. It's powering our websites. Then there's an interesting, one Vue, Apache and Postgres all right?

[00:06:11]
So again, it doesn't really matter what your stack is. So you say Full Stack I'm not referring to any particular set of technologies. It's whatever you're comfortable with and whatever the people you're working with are comfortable with, that you can cobble together and make an application that's good enough.

[00:06:28]
So, a Full Stack Engineer is just an engineer who can manage both the frontend and the backend of an application. Someone that can tie it all together, someone that understands how those systems work. That's it, nothing super spicy or worthy of Twitter, unfortunately, unlike some of the responses we got.

