WEBVTT

1
00:00:00.000 --> 00:00:02.855
So next,
let's talk a little bit about HTTP/2.

2
00:00:02.855 --> 00:00:05.669
If you ran into any problems
with your HTTPS setup,

3
00:00:05.669 --> 00:00:10.064
just clear it all out and run Certbot
again, it should fix the problems for you.

4
00:00:10.064 --> 00:00:14.472
But because we're on this really standard
path, it should have all worked together.

5
00:00:14.472 --> 00:00:20.500
So, HTTP/1, the golden standard, 1.1,
is what a lot of the Internet uses.

6
00:00:20.500 --> 00:00:24.065
That just essentially boils down to,
for every file we need,

7
00:00:24.065 --> 00:00:26.273
it makes an independent connection.

8
00:00:26.273 --> 00:00:30.170
So if I need an app.js file,
there's a request and response.

9
00:00:30.170 --> 00:00:35.084
If I need my index.html file,
it opens another request and response, and

10
00:00:35.084 --> 00:00:36.801
that's fine, it works.

11
00:00:36.801 --> 00:00:41.069
But HTTP/2, it does something called
multiplexing, which just means I can do

12
00:00:41.069 --> 00:00:44.853
multiple things on one connection,
and that's much more efficient.

13
00:00:44.853 --> 00:00:49.469
So, HTTP/2, depending on what you're
doing, is much faster than HTTP/1.

14
00:00:49.469 --> 00:00:51.390
Why don't more people use it?

15
00:00:51.390 --> 00:00:55.150
HTTP/2 can take up a bit more CPU
processing because it has to multiplex all

16
00:00:55.150 --> 00:00:56.219
these connections.

17
00:00:56.219 --> 00:00:58.640
So it's not always the right
choice to go with.

18
00:00:58.640 --> 00:01:03.608
But for a simple website, we can go and
set it up, or we can go ahead and

19
00:01:03.608 --> 00:01:04.997
enable HTTP/2.

20
00:01:04.997 --> 00:01:10.690
And the good news is, this will be
the easiest change you make all day.

21
00:01:10.690 --> 00:01:16.980
It's not even one line,
it is one word in our NGINX configuration.

22
00:01:18.449 --> 00:01:23.495
So we say sudo vi
/etc/nginx/sites-enabled.

23
00:01:23.495 --> 00:01:28.175
You find that listen block under 443, and

24
00:01:28.175 --> 00:01:33.233
you just say,
I want to use http2, that's it.

25
00:01:33.233 --> 00:01:35.686
This is as easy as it gets all day.

26
00:01:38.747 --> 00:01:41.426
So I'm gonna do that now.

27
00:01:41.426 --> 00:01:46.186
Actually, first, I wanna see what's

28
00:01:46.186 --> 00:01:50.821
going on in my original website.

29
00:01:50.821 --> 00:01:55.346
502, and that was weird,

30
00:01:55.346 --> 00:01:58.608
let me check on that.

31
00:02:03.122 --> 00:02:04.977
Let me jump over to all.

32
00:02:08.529 --> 00:02:12.095
And if you don't have these columns
available, you just right-click in

33
00:02:12.095 --> 00:02:16.480
your Network Inspector, add the Protocol
header, which tells you what's connecting.

34
00:02:16.480 --> 00:02:20.033
So you see here,
there's an http/1 connection, and

35
00:02:20.033 --> 00:02:22.157
there's a websock connection.

36
00:02:22.157 --> 00:02:26.086
Remember we talked about status codes,
101 is switching,

37
00:02:26.086 --> 00:02:28.614
it just means it's an upgrade request.

38
00:02:28.614 --> 00:02:32.023
And that the scheme is https,
the websocket is wss, so

39
00:02:32.023 --> 00:02:34.558
that's secure web socket connection.

40
00:02:34.558 --> 00:02:39.232
But I want http2, so
let's go to modify that, nginx off.

41
00:02:39.232 --> 00:02:46.954
So we'll say sudo vi /etc/nginx/,

42
00:02:46.954 --> 00:02:54.443
and that's sites-enabled/fsfe.

43
00:02:54.443 --> 00:02:59.403
And all we're gonna do
is find the port 443,

44
00:02:59.403 --> 00:03:02.876
we're gonna add http2 to that.

45
00:03:04.146 --> 00:03:05.799
I will just add it here too.

46
00:03:14.609 --> 00:03:17.631
And that's it, one word, two lines,

47
00:03:17.631 --> 00:03:21.759
if you want to do ipv6 as well,
so we'll write quit.

48
00:03:21.759 --> 00:03:25.614
Whenever we modify nginx, we wanna
make sure it works, sudo nginx -t.

49
00:03:25.614 --> 00:03:28.582
So then we restart nginx.

50
00:03:30.878 --> 00:03:31.879
Sudo service,

51
00:03:44.132 --> 00:03:45.070
There we go.

52
00:03:49.426 --> 00:03:54.498
I need to dive into my server during
the break, cuz it's sometimes 502s,

53
00:03:54.498 --> 00:03:57.946
but PM2 is bringing it back
online if it errors out.

54
00:03:57.946 --> 00:04:02.499
So I'm gonna look at the logs and
see what's going on there.

55
00:04:02.499 --> 00:04:06.017
Probably during the break, though,
cuz it could be a variety of things,

56
00:04:06.017 --> 00:04:08.116
I don't wanna bore you.

57
00:04:08.116 --> 00:04:13.589
But now, when we open our website,
so I'm on jamstack.lol,

58
00:04:13.589 --> 00:04:17.634
we see the protocol's now h2, pretty easy.

59
00:04:17.634 --> 00:04:18.388
Not bad, so

60
00:04:18.388 --> 00:04:24.359
now we have a multiplex connection instead
of these bunch of other connections on h1.

61
00:04:24.359 --> 00:04:26.329
Everybody there?

62
00:04:26.329 --> 00:04:31.183
And another thing to point out is, when
you're modifying, now you keep modifying

63
00:04:31.183 --> 00:04:35.220
your nginx configuration using vi,
you got so much faster, right?

64
00:04:35.220 --> 00:04:40.221
That :wq, it's so fast,
you just don't think about it anymore.

65
00:04:40.221 --> 00:04:43.823
That's what's great about vi is,
when you're really fast at it,

66
00:04:43.823 --> 00:04:46.362
you just no mouse anymore,
just all commands.

67
00:04:46.362 --> 00:04:51.066
And then it just becomes
muscle memory at that point.

68
00:04:56.042 --> 00:04:59.774
We made it,
our final topic of the day, question.

69
00:05:01.610 --> 00:05:04.812
&gt;&gt; So
every time we create another subdomain,

70
00:05:04.812 --> 00:05:10.363
do we have to run that command to generate
the cert for the command at Cerbot?

71
00:05:10.363 --> 00:05:12.236
&gt;&gt; Yeah, I don't think it will
pick it up automatically.

72
00:05:12.236 --> 00:05:17.015
But I think if you run the command,
it will look through and say, hey,

73
00:05:17.015 --> 00:05:21.402
this is missing the certificate,
we'll just add it in for you.

