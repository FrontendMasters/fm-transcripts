WEBVTT

1
00:00:00.000 --> 00:00:02.281
Next, let's create a subdomain.

2
00:00:02.281 --> 00:00:04.033
Subdomains are really useful.

3
00:00:04.033 --> 00:00:08.886
For example, when I work on
Netflix.com I'm not directly developing on

4
00:00:08.886 --> 00:00:13.362
Netflix.com, I'm developing on
our development environment.

5
00:00:13.362 --> 00:00:16.126
So it's gonna be like dev.netflix.com or
something like that.

6
00:00:16.126 --> 00:00:18.440
It's not accessible to the public,
obviously.

7
00:00:18.440 --> 00:00:21.269
But that's the usefulness
of a subdomain as you don't

8
00:00:21.269 --> 00:00:23.122
have to create an entirely new URL.

9
00:00:23.122 --> 00:00:24.998
That means you have to create new cookies,
etc.

10
00:00:24.998 --> 00:00:30.043
When you use a subdomain,
it's a subset of your main domain,

11
00:00:30.043 --> 00:00:32.965
but it's much easier to work with.

12
00:00:32.965 --> 00:00:34.656
You don't have to go
through as much trouble.

13
00:00:34.656 --> 00:00:38.725
So let's create a subdomain called blog.

14
00:00:38.725 --> 00:00:39.987
Or you can call whatever you want.

15
00:00:39.987 --> 00:00:42.556
I'm gonna call it blog because
it's easy to reason about.

16
00:00:42.556 --> 00:00:46.898
So, it'll be blog.jumpsack.lol.

17
00:00:46.898 --> 00:00:51.752
So the first thing that we have to do
is we have to create an A record on

18
00:00:51.752 --> 00:00:52.983
DigitalOcean.

19
00:00:52.983 --> 00:00:56.836
Now, you've already done that before,
so I'll let you do that now.

20
00:00:56.836 --> 00:01:02.626
All right, so probably the hardest part is
remembering where to look on DigitalOcean.

21
00:01:02.626 --> 00:01:06.294
For once you get to the domain, and
if you want to cheat, you can say,

22
00:01:06.294 --> 00:01:09.912
networking slash domains, and
it'll take you to the right place.

23
00:01:09.912 --> 00:01:13.601
To create a record, we just say blog,
and it's gonna fill in the rest for me.

24
00:01:13.601 --> 00:01:15.698
And I create the record.

25
00:01:16.850 --> 00:01:19.577
Great, for right now,
it's not doing anything.

26
00:01:19.577 --> 00:01:23.621
Nginx doesn't know how to handle these
requests, so we're gonna need to create

27
00:01:23.621 --> 00:01:28.357
a new virtual server, Or
just another server to deal with this.

28
00:01:28.357 --> 00:01:29.766
We don't necessarily have to,

29
00:01:29.766 --> 00:01:33.220
but let's say I wanna redirect my blog
to an entirely different application.

30
00:01:33.220 --> 00:01:37.626
Let's say I had a blog running
in Django written in Python, or

31
00:01:37.626 --> 00:01:40.437
not necessarily directing to my node.

32
00:01:40.437 --> 00:01:45.027
So this way we can have multiple
parts in your domain redirecting

33
00:01:45.027 --> 00:01:49.661
to entirely different
applications using nginx.

34
00:01:49.661 --> 00:01:53.938
So to create a server,
create a new server.

35
00:01:53.938 --> 00:01:56.058
And this is what it's going to look like.

36
00:01:59.407 --> 00:02:00.981
So you remember where to create servers?

37
00:02:00.981 --> 00:02:06.252
That's in your /etc/nginx/sites-enabled.

38
00:02:06.252 --> 00:02:09.760
And just call it blog,
blog.yourdomain.com,

39
00:02:09.760 --> 00:02:12.021
or blog.fullstackfrontend.

40
00:02:12.021 --> 00:02:14.332
The name actually doesn't matter too much.

41
00:02:14.332 --> 00:02:16.341
All right, let's go through this together,

42
00:02:16.341 --> 00:02:18.718
just in case you're wondering
what are these things?

43
00:02:18.718 --> 00:02:23.693
Let's go over the the nginx
virtual host config again.

44
00:02:23.693 --> 00:02:26.599
So what I'm gonna do is, clear,

45
00:02:29.975 --> 00:02:37.462
I'm going to sudo vi
/etc/nginx sites-enabled/,

46
00:02:44.039 --> 00:02:48.021
And I'm gonna just gonna call
it blog.fullstackfrontend.

47
00:02:48.021 --> 00:02:51.952
You can call it whatever you like, but
it's really helpful if you're making

48
00:02:51.952 --> 00:02:54.805
a subdomain to prefix it with
the name of the subdomain.

49
00:02:56.797 --> 00:03:03.042
All right, so next I'm gonna create a
server block, and that starts with server.

50
00:03:03.042 --> 00:03:09.053
And I'm just going to close it
off you down here, you know me.

51
00:03:11.334 --> 00:03:16.587
Next, I wanted to listen on port 80 for
now, listen 80.

52
00:03:16.587 --> 00:03:20.452
And then we're gonna listen on 80 but
on ipv6,

53
00:03:27.456 --> 00:03:30.131
And this probably the most important part,

54
00:03:30.131 --> 00:03:34.477
right here is you have to tell nginx
where to go, based on the requests.

55
00:03:34.477 --> 00:03:38.584
So the requests are always be
coming from blog.URLdomain.com.

56
00:03:38.584 --> 00:03:40.056
So we had to write that out explicitly,

57
00:03:40.056 --> 00:03:42.071
because remember,
this isn't the default server.

58
00:03:42.071 --> 00:03:46.850
This is a different server entirely
from our default one we created earlier.

59
00:03:46.850 --> 00:03:53.875
So, server_name and
it's blog.jemstack.lol,

60
00:03:53.875 --> 00:03:57.470
that's your server name.

61
00:03:57.470 --> 00:04:01.732
Then all we do is do what we did before,
we're gonna use proxy pass and

62
00:04:01.732 --> 00:04:03.358
create a location block.

63
00:04:03.358 --> 00:04:08.295
So location to any
requests coming from blog,

64
00:04:12.023 --> 00:04:16.696
And for now we're just gonna proxy pass
that, because we're not gonna create a new

65
00:04:16.696 --> 00:04:19.985
server for this entirely, but
it's pretty easy to do it.

66
00:04:19.985 --> 00:04:23.247
And it's easy to proxy pass to
an entirely different port,

67
00:04:23.247 --> 00:04:25.542
entirely different system and service.

68
00:04:25.542 --> 00:04:31.537
So, http://, I'm just gonna use a shortcut
of localhost instead of 1 to 7.

69
00:04:31.537 --> 00:04:33.598
You can use either 1.

70
00:04:33.598 --> 00:04:35.674
Every single proxy to 3000.

71
00:04:41.869 --> 00:04:45.531
Again, when the first time you did this,
you're like, this is weird.

72
00:04:45.531 --> 00:04:50.407
You do it again, you're like okay, now, I
sort of see how nginx server blocks work.

73
00:04:50.407 --> 00:04:53.222
The last thing we have to do
is update our nginx conf.

74
00:04:53.222 --> 00:04:57.343
Because remember, we didn't set it to pick
up everything in our sights enabled block,

75
00:04:57.343 --> 00:04:58.972
we were really specific about it.

76
00:04:58.972 --> 00:05:03.149
So, I'm just gonna tab up and say,

77
00:05:03.149 --> 00:05:07.756
sudo vi /etc/nginx/nginx.conf.

78
00:05:12.586 --> 00:05:16.734
And we're gonna create another
line here for the include.

79
00:05:21.459 --> 00:05:23.157
Doesn't really matter.

80
00:05:23.157 --> 00:05:28.122
So we're gonna say include,
that new server,

81
00:05:28.122 --> 00:05:34.777
virtual house we created,
nginx/ sites-enabled.

82
00:05:34.777 --> 00:05:40.098
/blog.full stack, front end.

83
00:05:49.529 --> 00:05:53.464
And this if you're running the trouble,
this is probably the thing that we forgot.

84
00:05:53.464 --> 00:05:56.413
It's pretty easy to make this mistake.

85
00:05:56.413 --> 00:05:57.655
And the last one, and

86
00:05:57.655 --> 00:06:02.229
what do we have to do anytime we modify
the configuration of a running process?

87
00:06:02.229 --> 00:06:03.200
&gt;&gt; Restart it.

88
00:06:03.200 --> 00:06:04.581
&gt;&gt; That's right, we have to restart it.

89
00:06:04.581 --> 00:06:06.238
That one's the easy one.

90
00:06:06.238 --> 00:06:07.514
You're like why isn't it working, Jim?

91
00:06:07.514 --> 00:06:10.147
Cuz we didn't restart it,
nginx doesn't know.

92
00:06:10.147 --> 00:06:14.243
So sudo service,

93
00:06:14.243 --> 00:06:18.070
nginx restart.

94
00:06:18.070 --> 00:06:22.525
And as always, we generally try to run
the sudo nginx-t just to validate our

95
00:06:22.525 --> 00:06:26.084
configuration, but
this one's pretty straightforward.

96
00:06:26.084 --> 00:06:31.081
But it's running into issues like
nginx is throwing up some sort of

97
00:06:31.081 --> 00:06:36.001
weird messaging,
do nginx-t to validate your configuration.

98
00:06:36.001 --> 00:06:39.217
So now, I feel like this might
have proxied fast enough,

99
00:06:39.217 --> 00:06:41.237
it might have updated fast enough.

100
00:06:41.237 --> 00:06:45.938
So, blog.jemstack.lol,

101
00:06:45.938 --> 00:06:51.204
it may not have gotten there yet.

102
00:06:51.204 --> 00:06:53.323
Yep, it did.

103
00:06:53.323 --> 00:06:56.639
There, we just created a subdomain, and
we see how easy it is to create a another

104
00:06:56.639 --> 00:06:59.331
application, maybe an entirely
different node application.

105
00:06:59.331 --> 00:07:01.457
We'll just change the port
that we're proxy passing to.

106
00:07:01.457 --> 00:07:03.975
Yeah, not too bad.

107
00:07:03.975 --> 00:07:07.474
What I love about this particular
exercise is if we did it earlier,

108
00:07:07.474 --> 00:07:11.734
we're talking about nginx, you'd be like,
what is all this stuff happening?

109
00:07:11.734 --> 00:07:15.318
But now because we've done it enough
times, we see the purpose for

110
00:07:15.318 --> 00:07:19.478
every single line and how all the systems
work together from the name server to

111
00:07:19.478 --> 00:07:23.014
updating your nginx config, and
restarting the whole process.

