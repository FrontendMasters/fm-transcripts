WEBVTT

1
00:00:00.000 --> 00:00:01.434
Can you help explain cores.

2
00:00:01.434 --> 00:00:06.751
&gt;&gt; So let's say I'm on gemstack.lol and
I have my main server or

3
00:00:06.751 --> 00:00:10.228
I have like a utility file called slot and

4
00:00:10.228 --> 00:00:15.866
it's located at /gemstack/utilities.js and
I import that.

5
00:00:15.866 --> 00:00:17.330
That's pretty cool.

6
00:00:17.330 --> 00:00:22.163
But what if I create a I say you know
what I don't want my utilities file to

7
00:00:22.163 --> 00:00:25.563
live on my server I want
it to live somewhere else.

8
00:00:25.563 --> 00:00:28.651
By default, your web page will
not allow you to do that,

9
00:00:28.651 --> 00:00:32.927
that's called a cross origin requests and
the reason why we don't allow that

10
00:00:32.927 --> 00:00:37.003
by default is we don't control that
origin, so it makes it really easy for

11
00:00:37.003 --> 00:00:40.146
a malicious actor to kind of
mess with your connection.

12
00:00:40.146 --> 00:00:45.163
So cores is about saying like,
I'm very explicit, I'm going

13
00:00:45.163 --> 00:00:51.519
to allow gem stack.utilities to serve
requests to my domain and nothing else.

14
00:00:51.519 --> 00:00:55.568
Because the minute you allow anybody
to import files into your domain,

15
00:00:55.568 --> 00:00:59.889
you're just pulling randomly,
that's when security becomes an issue and

16
00:00:59.889 --> 00:01:04.428
you can see the role of the browser and
you see with SSH you see with permissions.

17
00:01:04.428 --> 00:01:09.031
All these things are designed to help you
not shoot yourself in the foot not do bad

18
00:01:09.031 --> 00:01:09.588
things.

19
00:01:09.588 --> 00:01:11.160
Hence, that's why cores exists.

20
00:01:11.160 --> 00:01:15.936
Just it's just about being explicit
about the things you're important,

21
00:01:15.936 --> 00:01:18.370
the things you run, or where it runs.

22
00:01:18.370 --> 00:01:22.798
&gt;&gt; I'd like to ask Jem, if it's
valid to install a version of MVM in

23
00:01:22.798 --> 00:01:27.964
the droplet to manage the node version
instead of installing it globally or

24
00:01:27.964 --> 00:01:30.098
why it's not a good practice.

25
00:01:30.098 --> 00:01:32.042
&gt;&gt; Yeah, you can saw MVM, no problem.

26
00:01:32.042 --> 00:01:34.016
I do it on my local machine.

27
00:01:34.016 --> 00:01:35.162
It's super handy.

28
00:01:35.162 --> 00:01:37.815
There's nothing wrong with it at all.

29
00:01:37.815 --> 00:01:42.006
We kept it very simple because
you saw the more complex things,

30
00:01:42.006 --> 00:01:44.312
the more it's likely to go wrong.

31
00:01:44.312 --> 00:01:47.697
But you can use MVM, there's no problem.

32
00:01:47.697 --> 00:01:50.335
&gt;&gt; Any good Netflix recommendations?

33
00:01:50.335 --> 00:01:55.171
&gt;&gt; I've been telling everybody here
in Minneapolis about physical 100,

34
00:01:55.171 --> 00:01:58.853
great show on Netflix,
if you're into reality shows and

35
00:01:58.853 --> 00:02:01.708
competitions, really enjoying that one.

36
00:02:01.708 --> 00:02:04.785
I also enjoy Jungle on Amazon Prime.

37
00:02:04.785 --> 00:02:06.342
It's foreign to the UK hip hop scene, but

38
00:02:06.342 --> 00:02:08.400
I really enjoy the cinematography
on that one as well.

39
00:02:08.400 --> 00:02:12.821
Not on Netflix, but I don't get
to watch a lot of TV these days.

40
00:02:12.821 --> 00:02:15.148
When I do, I like to relax.

41
00:02:15.148 --> 00:02:18.928
And of course my favorite is Formula One,
Drive to Survive,

42
00:02:18.928 --> 00:02:23.526
the most expensive drama in the world,
hundreds of millions of dollars,

43
00:02:23.526 --> 00:02:27.771
21 drivers, couple teams and
it's just drama, drama, drama.

44
00:02:27.771 --> 00:02:30.488
It's such such good stuff.

45
00:02:30.488 --> 00:02:34.031
&gt;&gt; What security measures will
be implemented in the Docker

46
00:02:34.031 --> 00:02:35.960
environment if there are any?

47
00:02:35.960 --> 00:02:37.146
&gt;&gt; Yeah, good question.

48
00:02:37.146 --> 00:02:40.450
And the great thing about the Docker
container is we don't need that much

49
00:02:40.450 --> 00:02:44.082
because there's only one port exposed and
we're very exclusive about that and

50
00:02:44.082 --> 00:02:44.747
Dockerfile.

51
00:02:44.747 --> 00:02:48.559
So any security you wanna implement
would be on the application itself.

52
00:02:48.559 --> 00:02:52.524
So but you need to have to worry too
much because I can't you only have that

53
00:02:52.524 --> 00:02:53.109
one port.

54
00:02:53.109 --> 00:02:55.884
As long as you're controlling that,
you're okay.

55
00:02:55.884 --> 00:03:01.110
The other security measure is the Docker
container is only running on one user,

56
00:03:01.110 --> 00:03:02.124
the node user.

57
00:03:02.124 --> 00:03:05.537
That user only has permissions to
run the application, that's it.

58
00:03:05.537 --> 00:03:10.061
So it's pretty locked down, and that's
the good thing about Docker containers,

59
00:03:10.061 --> 00:03:13.500
is you really don't have to go
through too much to lock it down.

60
00:03:13.500 --> 00:03:17.780
Assuming you didn't misconfigure your
actual application server itself.

61
00:03:17.780 --> 00:03:20.494
&gt;&gt; Can you make a container locally and

62
00:03:20.494 --> 00:03:24.394
then just have it pulled
into the server by GitHub?

63
00:03:24.394 --> 00:03:27.746
&gt;&gt; Yeah, there's actually a, I didn't
wanna get into it cuz you have to create

64
00:03:27.746 --> 00:03:30.082
a login, but
there's something called Docker Hub.

65
00:03:30.082 --> 00:03:33.461
So you can create a container and
a username and you can just push to

66
00:03:33.461 --> 00:03:37.228
Docker Hub, which is the equivalent
of GitHub, but for Docker images.

67
00:03:37.228 --> 00:03:39.760
That way anybody can pull your image down.

68
00:03:39.760 --> 00:03:43.092
So I can create an image and
then share it out with you all and

69
00:03:43.092 --> 00:03:47.376
you can just pull it in and now you
are running server on your computer really

70
00:03:47.376 --> 00:03:49.975
easily and that's the power of containers.

71
00:03:49.975 --> 00:03:53.445
&gt;&gt; Is there something else
you recommend as next steps?

72
00:03:53.445 --> 00:03:57.462
&gt;&gt; Frontend masters.com/learn/full stack.

73
00:03:57.462 --> 00:04:01.345
There's a full learning
path that goes through and

74
00:04:01.345 --> 00:04:06.220
starts here and then goes through
know everything from Linux and

75
00:04:06.220 --> 00:04:11.094
command line deeper to Vim,
deeper to containers, etcetera,

76
00:04:11.094 --> 00:04:15.993
and a lot of the courses that were
mentioned throughout the day.

77
00:04:15.993 --> 00:04:20.478
&gt;&gt; Yes, so you start with the frontend, as
we said, it's a really high overview and

78
00:04:20.478 --> 00:04:23.474
there's a lot of places that dive in,
but we didn't.

79
00:04:23.474 --> 00:04:27.868
Because even in the two day course,
we still went probably over time than we

80
00:04:27.868 --> 00:04:30.463
could have and
we just touched the surface.

81
00:04:30.463 --> 00:04:35.252
So you can get into databases,
Linux command Line, VIM Fundamentals,

82
00:04:35.252 --> 00:04:39.351
which we talked about with
ThePrimaegen is right over there.

83
00:04:39.351 --> 00:04:42.858
Introduction to Node,
Scott is an excellent teacher.

84
00:04:42.858 --> 00:04:47.039
API design, you can get the AWS,
we only touched digital motion,

85
00:04:47.039 --> 00:04:48.690
we didn't touch any AWS.

86
00:04:48.690 --> 00:04:50.607
You can go into Docker containers.

87
00:04:50.607 --> 00:04:53.509
More database things SQL and Postgre.

88
00:04:53.509 --> 00:04:58.281
So we are you are here and here is a lot,
you made it this far, you've done a lot,

89
00:04:58.281 --> 00:04:59.715
you've learned a lot.

90
00:04:59.715 --> 00:05:02.254
And you can go deeper anywhere you want,

91
00:05:02.254 --> 00:05:06.746
because any parts of the stacks
are probably their own roller company.

92
00:05:06.746 --> 00:05:10.157
We made it to the end of full stack for
frontend three.

93
00:05:10.157 --> 00:05:14.441
We learned about how the internet works,
we learned about domain name systems,

94
00:05:14.441 --> 00:05:18.792
name servers and this Internet address
book, how we translate IPs into domains.

95
00:05:18.792 --> 00:05:22.143
We bought a domain we
learned what a records are,

96
00:05:22.143 --> 00:05:27.150
we learn what nginx was, we learned how
we use nginx to do a lot of things.

97
00:05:27.150 --> 00:05:30.765
It can load balance,
it can route to applications,

98
00:05:30.765 --> 00:05:34.228
it can do act as a web server
just serve HTML files.

99
00:05:34.228 --> 00:05:37.804
Let's say more importantly,
we learned how the Internet works.

100
00:05:37.804 --> 00:05:42.025
We learned other than, say network card
and routers and we don't own an ISP, but

101
00:05:42.025 --> 00:05:43.156
we know what they do.

102
00:05:43.156 --> 00:05:45.771
We learned about all
these other things and

103
00:05:45.771 --> 00:05:49.997
the role they play in developing
a modern frontend web application.

104
00:05:49.997 --> 00:05:54.035
And remember that iceberg
picture we saw at the beginning?

105
00:05:54.035 --> 00:05:58.444
That frontend and everything else?

106
00:05:58.444 --> 00:06:00.646
Now we know just a little bit
more about that everything else.

107
00:06:00.646 --> 00:06:03.832
So, I hope you enjoyed the course,
pat yourself on the back,

108
00:06:03.832 --> 00:06:05.008
you made it to the end.

109
00:06:05.008 --> 00:06:09.151
You now have a fully functioning modern
web application that you can build on

110
00:06:09.151 --> 00:06:10.898
top of and actually scale out and

111
00:06:10.898 --> 00:06:13.824
it will scale out just fine
using all the steps we did.

112
00:06:13.824 --> 00:06:16.992
Incredible, especially if it's
you're new to programming or

113
00:06:16.992 --> 00:06:20.816
you've never seen any of these things
before, you've come such a long way.

114
00:06:20.816 --> 00:06:24.078
So pat yourself on the back and
continue your learning journey and

115
00:06:24.078 --> 00:06:26.459
I look forward to seeing
you in the next course.

116
00:06:26.459 --> 00:06:32.000
&gt;&gt; [APPLAUSE]

