WEBVTT

1
00:00:00.000 --> 00:00:04.805
So, pull up my own instructions because I
don't remember these websites off the top

2
00:00:04.805 --> 00:00:05.488
of my head.

3
00:00:09.643 --> 00:00:12.550
So we can say curl

4
00:00:12.550 --> 00:00:22.737
https://deb.nodesource.com/setup_19.x,

5
00:00:22.737 --> 00:00:31.060
I'm gonna pipe that into
a new shell with sudo,

6
00:00:33.971 --> 00:00:38.833
-E and bash,
we're gonna put the outputs right there.

7
00:00:38.833 --> 00:00:44.150
And if you want, there's a link at
the bottom of the screen on the slides.

8
00:00:44.150 --> 00:00:48.656
So you can just copy and paste all these
things, you don't have to do it the hard

9
00:00:48.656 --> 00:00:52.154
way like I did, and
hopefully I didn't misspell anything.

10
00:00:52.154 --> 00:00:55.753
Okay, just double checking.

11
00:00:55.753 --> 00:00:58.220
All right, looks like it's still working.

12
00:01:04.131 --> 00:01:06.964
If you're wondering about why
we're using apt versus apt-get.

13
00:01:06.964 --> 00:01:12.470
So apt-get is supposedly
the lower level version of apts,

14
00:01:12.470 --> 00:01:16.553
and apt is the more
human friendly version.

15
00:01:16.553 --> 00:01:17.670
I know it doesn't seem that way.

16
00:01:17.670 --> 00:01:20.154
But that's just the reason
the difference between the two,

17
00:01:20.154 --> 00:01:21.429
they really do the same thing.

18
00:01:21.429 --> 00:01:24.578
But we generally try to use apt for
most things, but in this case,

19
00:01:24.578 --> 00:01:25.793
we're using apt-get.

20
00:01:25.793 --> 00:01:29.723
sudo apt-get

21
00:01:29.723 --> 00:01:34.638
install nodejs.

22
00:01:47.278 --> 00:01:49.212
All right, now we can double check that.

23
00:01:49.212 --> 00:01:51.174
So we can say node --version.

24
00:01:51.174 --> 00:01:57.835
19.7, nice, we're pretty far up
there on the newer versions of Node.

25
00:01:57.835 --> 00:02:00.057
The next thing we wanna
do is let's install Git.

26
00:02:00.057 --> 00:02:05.533
It may be installed by default, but
I just wanna, actually I can say git.

27
00:02:05.533 --> 00:02:06.722
Yeah, git's already installed.

28
00:02:06.722 --> 00:02:10.957
But if it's not, sudo apt install git,
and git has, of course,

29
00:02:10.957 --> 00:02:15.666
version control, which we will talk
about as well, we'll touch on it.

30
00:02:15.666 --> 00:02:19.003
When we installed Node.js,
we installed Git.

31
00:02:19.003 --> 00:02:20.946
So next thing we need to do,
let's set up our application.

32
00:02:20.946 --> 00:02:24.663
We need to establish the file system,
we need to establish version control,

33
00:02:24.663 --> 00:02:25.932
always version control.

34
00:02:25.932 --> 00:02:27.974
Then we need to create a node.js server.

35
00:02:27.974 --> 00:02:31.146
The third one we've already done,
and the rest of it, well,

36
00:02:31.146 --> 00:02:34.196
something you've probably
done a million times already,

37
00:02:34.196 --> 00:02:37.743
if you've created any sort of projects,
but let's do it together.

38
00:02:37.743 --> 00:02:40.628
We're on the server, so
things always get a little bit trickier.

39
00:02:40.628 --> 00:02:44.764
Do you remember how I ran into the issue
earlier where I sudo that file?

40
00:02:44.764 --> 00:02:48.602
Well, I created the file but I didn't have
sudo permission, that was really annoying.

41
00:02:48.602 --> 00:02:49.987
I don't wanna sudo all my files.

42
00:02:49.987 --> 00:02:53.344
So let's just change ownership
of that directory to myself, and

43
00:02:53.344 --> 00:02:55.184
that way I never have to sudo again.

44
00:02:55.184 --> 00:02:57.384
So we're gonna use the chown command,
change owner.

45
00:02:57.384 --> 00:03:01.753
And we're gonna say -R recursively
change ownership to myself,

46
00:03:01.753 --> 00:03:05.429
then we're gonna create
a new application directory.

47
00:03:05.429 --> 00:03:07.083
Then we're just gonna
create a new git repo.

48
00:03:07.083 --> 00:03:10.731
So other than the change ownership,
these are things you've probably

49
00:03:10.731 --> 00:03:13.722
done a million times already,
but let's do it together.

50
00:03:13.722 --> 00:03:20.316
So clear, and I'm gonna cd up one.

51
00:03:22.546 --> 00:03:26.438
So I am now in /var/www.

52
00:03:29.427 --> 00:03:32.232
I wanna change owner,
so I need to sudo for

53
00:03:32.232 --> 00:03:36.409
that cuz it's currently owned by not me,
-R for recursive.

54
00:03:36.409 --> 00:03:38.428
And I'm just gonna change it to myself,
user.

55
00:03:38.428 --> 00:03:45.334
The group and the name is the same and
we're gonna change this current directory.

56
00:03:47.752 --> 00:03:52.575
Okay, and you usually won't see
an output when you change ownership.

57
00:03:52.575 --> 00:03:56.012
So next,
let's make our application directory.

58
00:03:56.012 --> 00:04:00.872
So we're gonna mkdir, use mkdir command,
and we're gonna say /var/.

59
00:04:00.872 --> 00:04:04.715
I know about it indirectly,
I'm just being really, really pedantic,

60
00:04:04.715 --> 00:04:06.862
and we'll call it app, very original.

61
00:04:06.862 --> 00:04:08.513
And let's cd into app.

62
00:04:12.347 --> 00:04:16.722
And let's take git init,
to create a new git repository here.

63
00:04:19.420 --> 00:04:25.694
All right, Everybody with me on this step?

64
00:04:28.780 --> 00:04:31.514
All right, so next thing we'll do,
let's create our application file.

65
00:04:31.514 --> 00:04:36.378
So we'll just say touch app.js.

66
00:04:36.378 --> 00:04:38.712
We're not gonna do anything with it yet.

67
00:04:38.712 --> 00:04:43.808
And because this is a Node.js project,
let's make sure it works with npm.

68
00:04:43.808 --> 00:04:47.538
And npm init will create a package
JSON and all that fun stuff for us.

69
00:04:47.538 --> 00:04:51.096
So we'll just say npm init.

70
00:04:51.096 --> 00:04:51.908
You can call it whatever you want.

71
00:04:51.908 --> 00:04:56.437
I will leave it as app or a full stack
front end, doesn't really matter.

72
00:04:56.437 --> 00:05:00.641
Version's fine, description's fine,

73
00:05:00.641 --> 00:05:06.022
entry point's fine,
the defaults are totally fine.

74
00:05:06.022 --> 00:05:09.609
So now if we ls, we now have an app.js,
and we have a package.js,

75
00:05:09.609 --> 00:05:11.031
the package.json file.

76
00:05:11.031 --> 00:05:15.677
I didn't know about npm init for
the longest time, it's pretty convenient.

77
00:05:22.630 --> 00:05:27.326
Okay, everybody make it to step three so
far.

78
00:05:27.326 --> 00:05:30.528
We're hauling now, we're moving faster,
if you can't tell.

79
00:05:30.528 --> 00:05:33.792
So remember what I said
about incremental knowledge?

80
00:05:33.792 --> 00:05:36.572
Yeah, I don't have to
explain every step anymore.

81
00:05:36.572 --> 00:05:39.100
This is great, we're becoming fluent.

82
00:05:39.100 --> 00:05:43.706
So, step three was,
after we did our step on this new page,

83
00:05:43.706 --> 00:05:47.775
touch, we created app.js file,
we npm inited it.

84
00:05:47.775 --> 00:05:51.007
Now, let's create a basic
node server in app.js.

85
00:05:51.007 --> 00:05:51.884
We've done that before.

86
00:05:51.884 --> 00:05:53.573
So there's a variety of ways to do it.

87
00:05:53.573 --> 00:05:57.454
Remember the last time I said, hey, we're
gonna create a new one where we're just

88
00:05:57.454 --> 00:06:00.560
writing directly to the response
rather than reading from a file,

89
00:06:00.560 --> 00:06:04.286
because the file, it's one more step and
I just don't wanna do that right now.

90
00:06:04.286 --> 00:06:05.881
I just wanna write
directly through response.

91
00:06:05.881 --> 00:06:11.215
So, I'll leave this up or,

92
00:06:11.215 --> 00:06:15.120
actually let's do this follow along,
cuz we've already done this before, so

93
00:06:15.120 --> 00:06:17.587
I don't have to explain
as much this time around.

94
00:06:21.001 --> 00:06:25.854
So again, on your server we're gonna open
vi app.js, we don't need sudo this time.

95
00:06:25.854 --> 00:06:31.578
So INSERT, we're gonna import http.

96
00:06:39.804 --> 00:06:43.134
And what's nice on the server, syntax
highly is just turned on by default.

97
00:06:43.134 --> 00:06:45.716
I didn't do anything, so that's great.

98
00:06:45.716 --> 00:06:48.934
Then we're gonna create a server,

99
00:06:48.934 --> 00:06:53.553
which we've done before,
http.createServer.

100
00:06:55.680 --> 00:06:58.529
That's a function.

101
00:06:58.529 --> 00:07:01.269
Let's move that down here, for my sanity.

102
00:07:06.279 --> 00:07:10.181
And that takes an argument,
that takes a request.

103
00:07:10.181 --> 00:07:13.891
Always requests and then response.

104
00:07:13.891 --> 00:07:15.190
Always in that order.

105
00:07:15.190 --> 00:07:19.562
And then I'm just gonna close it off
here to make my life easier here.

106
00:07:19.562 --> 00:07:22.698
Now, we can shortcut a lot
of things we did before, so

107
00:07:22.698 --> 00:07:27.751
we don't need to pull from a file because
we're just writing a very simple response.

108
00:07:27.751 --> 00:07:30.485
So we're just gonna write directly
to the response, we can do that.

109
00:07:30.485 --> 00:07:32.216
So we're gonna say res.write.

110
00:07:38.435 --> 00:07:41.820
And you can put whatever you want,

111
00:07:41.820 --> 00:07:47.322
I'm gonna say On the way to
being a full stack engineer.

112
00:07:47.322 --> 00:07:52.561
Now I'm gonna say full snack engineer,
cuz that's where I'm at right now,

113
00:07:52.561 --> 00:07:56.972
full snack engineer, And close that off.

114
00:08:00.770 --> 00:08:02.089
But we can't just write willy nolly,

115
00:08:02.089 --> 00:08:04.161
because how does the server
know that we're done writing?

116
00:08:04.161 --> 00:08:05.384
So we have to call end().

117
00:08:05.384 --> 00:08:08.063
We need to be explicit about when
we're done with that response.

118
00:08:08.063 --> 00:08:12.448
And we'll close it off and
send it to the client at this point.

119
00:08:16.661 --> 00:08:21.371
Next, we didn't say which
port we're gonna listen on.

120
00:08:21.371 --> 00:08:25.060
Before we did this on a separate line, we
can just chain these together rather than

121
00:08:25.060 --> 00:08:26.936
create a new server const and do the port.

122
00:08:26.936 --> 00:08:31.155
So we'll just say listen on port 3000.

123
00:08:38.232 --> 00:08:44.047
And then this is just a good practice,
console.log.

124
00:08:44.047 --> 00:08:45.335
We'll just say server started.

125
00:08:59.686 --> 00:09:04.764
Okay, and let's go ahead and
write and quit this file.

126
00:09:04.764 --> 00:09:06.922
Whoops, caps lock on, there we go.

127
00:09:12.203 --> 00:09:14.673
So next, remember, the one piece we're
missing is we have an application,

128
00:09:14.673 --> 00:09:15.395
we have a node server.

129
00:09:15.395 --> 00:09:21.602
We have a nginx server, but how do
they know how to talk to each other?

130
00:09:21.602 --> 00:09:25.459
So we need to create what's called
a virtual configuration, a virtual server.

131
00:09:25.459 --> 00:09:30.390
That way we'll tell, any request that
comes into our server, we'll say, hey,

132
00:09:30.390 --> 00:09:31.687
ngnix, route here.

133
00:09:31.687 --> 00:09:34.266
Just proxy all the requests
from nginx to our node server.

134
00:09:34.266 --> 00:09:37.715
So we're gonna use that proxy_pass
directive that we talked about.

135
00:09:41.512 --> 00:09:44.579
So this is a little bit different,
a little bit off the beaten path, but

136
00:09:44.579 --> 00:09:47.209
this will make our lives a little
bit easier to reason about.

137
00:09:47.209 --> 00:09:51.106
So we're not messing around with
the default nginx configuration.

138
00:09:51.106 --> 00:09:57.640
So you wanna sudo
vi/etc/nginx/sites-enabled,

139
00:09:57.640 --> 00:10:01.905
and create something called fsfe.

140
00:10:01.905 --> 00:10:06.328
The name of this doesn't actually matter,
I just say full stack frontend for

141
00:10:06.328 --> 00:10:09.808
consistency across the board
when I'm modifying it later.

142
00:10:09.808 --> 00:10:10.960
You can name it whatever you want.

143
00:10:10.960 --> 00:10:16.676
A good practice is actually
naming your domain name.

144
00:10:16.676 --> 00:10:19.047
And you can call it dot com,
you can call it whatever you want,

145
00:10:19.047 --> 00:10:20.878
it doesn't affect
the actual configuration.

146
00:10:20.878 --> 00:10:25.956
But, in my instance,
I'm gonna keep it fsfe.

147
00:10:25.956 --> 00:10:29.813
Okay, so let's go ahead and do that.

148
00:10:29.813 --> 00:10:31.602
sudo vi

149
00:10:31.602 --> 00:10:41.602
/etc/nginx/sites-enabled/fsfe.

150
00:10:44.906 --> 00:10:49.552
All right, so what we need to do here
is create a virtual server block.

151
00:10:49.552 --> 00:10:54.073
And why we're creating this and not
modifying the default is we're just taking

152
00:10:54.073 --> 00:10:58.340
out all the extra comments, all
the extra things we don't actually need.

153
00:10:58.340 --> 00:11:02.399
And we're just gonna distill it down to
these are the actual things you need to

154
00:11:02.399 --> 00:11:05.659
run your server, just to make
our lives easier down the road.

155
00:11:05.659 --> 00:11:10.788
So I'll give you a second to copy this and
then I will walk through it.

156
00:11:10.788 --> 00:11:17.689
Otherwise, it's hard to follow along if
I'm typing and talking at the same time.

