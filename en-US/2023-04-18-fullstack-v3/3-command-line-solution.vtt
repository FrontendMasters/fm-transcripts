WEBVTT

1
00:00:00.000 --> 00:00:04.729
Let's work through this exercise and
then I'll show you how to look up things,

2
00:00:04.729 --> 00:00:07.141
both in the man page and on the Internet.

3
00:00:07.141 --> 00:00:08.714
Don't be afraid to Google things.

4
00:00:08.714 --> 00:00:11.423
You will see me Google things
in this class because again,

5
00:00:11.423 --> 00:00:13.923
I don't remember all the stuff
off the top of my head.

6
00:00:13.923 --> 00:00:16.800
No one does, and that's okay.

7
00:00:16.800 --> 00:00:20.772
What I've learned about software
engineering in all my years is you seem to

8
00:00:20.772 --> 00:00:23.876
know what to look for,
when it comes to solution finding.

9
00:00:23.876 --> 00:00:27.057
So hopefully this exercise
wasn't too tasking for you,

10
00:00:27.057 --> 00:00:30.844
it was probably really simple,
if you had any sort of familiarity.

11
00:00:30.844 --> 00:00:34.771
But I wanna get you warmed up with your
terminal on the command line because this

12
00:00:34.771 --> 00:00:36.989
is where we're gonna
be doing all our work.

13
00:00:36.989 --> 00:00:39.411
So let's go ahead and fire this up.

14
00:00:42.719 --> 00:00:47.141
So, the first step was navigating
to your home directory.

15
00:00:47.141 --> 00:00:52.186
Your home directory,
you can shortcut using the tilde.

16
00:00:52.186 --> 00:00:56.458
So cd there, and if I wanna say,
am I sure I'm in my home directory?

17
00:00:56.458 --> 00:00:59.015
So we'll say pwd,
which is print working directory.

18
00:00:59.015 --> 00:01:02.310
So if you wanna navigate
your home directory,

19
00:01:02.310 --> 00:01:07.812
the tilde is gonna be faster but you
can always say /users/ whoever you are.

20
00:01:07.812 --> 00:01:11.283
And I guess not everybody knows this,
but you should.

21
00:01:11.283 --> 00:01:13.476
If not, I'm about to blow your mind.

22
00:01:13.476 --> 00:01:16.142
Tab autocomplete works very well.

23
00:01:16.142 --> 00:01:20.101
So if I'm like,
who are in the users directory?

24
00:01:20.101 --> 00:01:22.947
I can just jump to Jem, that's me.

25
00:01:22.947 --> 00:01:25.974
I just type J and
I'll tab and takes me there.

26
00:01:25.974 --> 00:01:29.862
But cd tilde is the one you probably
just need to remember cuz a lot of

27
00:01:29.862 --> 00:01:32.578
what we're gonna do is
in the home directory.

28
00:01:32.578 --> 00:01:36.794
So next,
let's make a directory called temp.

29
00:01:36.794 --> 00:01:40.138
So we're gonna use the mkdir command,
mkdir temp,

30
00:01:40.138 --> 00:01:44.700
and if we do a quick ls, we'll see
there's something called temp, and

31
00:01:44.700 --> 00:01:47.529
I've made a few other
temp files there too.

32
00:01:47.529 --> 00:01:54.608
So let's move into temp, All right,
let's ls, this should be empty.

33
00:01:54.608 --> 00:01:55.935
Let's make a file called hello.

34
00:01:55.935 --> 00:02:00.285
So we can just touch hello, we ls again.

35
00:02:00.285 --> 00:02:02.690
We see there is a file now called hello.

36
00:02:02.690 --> 00:02:06.648
And again the file has no extension,
has no type,

37
00:02:06.648 --> 00:02:10.804
it's just a blob of data on
your hard disk right now.

38
00:02:10.804 --> 00:02:13.595
So next was to list
the directory contents.

39
00:02:13.595 --> 00:02:17.761
We said ls, list contents.

40
00:02:17.761 --> 00:02:18.927
Why is it called ls?

41
00:02:18.927 --> 00:02:19.642
Now I'm curious.

42
00:02:19.642 --> 00:02:23.020
So I'm gonna man ls, so
the manual page for ls.

43
00:02:25.402 --> 00:02:27.815
It does not explain why it's called ls.

44
00:02:27.815 --> 00:02:32.647
Sometimes what I love about the man
pages is they are standardized in

45
00:02:32.647 --> 00:02:36.739
terms of the name,
the description, things like that.

46
00:02:36.739 --> 00:02:41.445
But it's really dependent on the person
who wrote it and at what time they wrote

47
00:02:41.445 --> 00:02:45.738
it, which is like a fantastic look
into software engineering itself.

48
00:02:45.738 --> 00:02:48.503
Sometimes these have colorful
history of the commands.

49
00:02:48.503 --> 00:02:49.647
Sometimes they're snarky.

50
00:02:49.647 --> 00:02:53.028
Sometimes they're super deadpan.

51
00:02:53.028 --> 00:02:56.960
The man pages are like a hidden gem
in the software engineering world.

52
00:02:56.960 --> 00:03:02.097
I was really hoping this would
explain why ls is called ls and

53
00:03:02.097 --> 00:03:05.302
not ld, it does not, that's okay.

54
00:03:05.302 --> 00:03:10.829
If we scroll down, we can see some
of the flags that we can use.

55
00:03:10.829 --> 00:03:14.486
And the flags I like to use,
I won't go through this whole thing,

56
00:03:14.486 --> 00:03:16.895
cuz man pages are very, very, very long.

57
00:03:16.895 --> 00:03:22.630
But if you wanna find something,
you could type a forward slash and

58
00:03:22.630 --> 00:03:26.020
I'll say -a is what I'm looking for.

59
00:03:26.020 --> 00:03:28.716
And so forward slash in the man page,
and actually,

60
00:03:28.716 --> 00:03:32.836
most of the ways of listing file contents,
which we will talk about much later.

61
00:03:32.836 --> 00:03:37.306
But for now, less or cat or any of these
forward slash and what you're looking for

62
00:03:37.306 --> 00:03:39.231
will help you find in the man page.

63
00:03:39.231 --> 00:03:43.402
So the ls command or

64
00:03:43.402 --> 00:03:51.235
the flags that I use a lot is ls-la.

65
00:03:51.235 --> 00:03:55.382
l will show the details, the permissions,
the size, last modified time, etc.

66
00:03:55.382 --> 00:03:57.267
The a will show the hidden files.

67
00:03:57.267 --> 00:04:00.062
So by default, dot files aren't seen.

68
00:04:00.062 --> 00:04:03.756
So something like your gitignore
won't show up in a standard ls.

69
00:04:03.756 --> 00:04:06.899
And you'd be like, I'm pretty sure
it's there, but I haven't seen it.

70
00:04:06.899 --> 00:04:10.920
You just need to use the -a command.

71
00:04:10.920 --> 00:04:14.008
All right, so we've listed directory
contents, let's move back out.

72
00:04:14.008 --> 00:04:14.918
So how do we move out?

73
00:04:14.918 --> 00:04:18.832
We cd, so that's change directory,
that will actually make sense.

74
00:04:18.832 --> 00:04:24.502
We're gonna say dot dot, and
now we're back one level up.

75
00:04:24.502 --> 00:04:30.062
Now we can cd ../ ../ ../
../ as far as we want,

76
00:04:30.062 --> 00:04:33.588
but we actually can only move so far.

77
00:04:33.588 --> 00:04:37.653
The file system doesn't go to infinity,
it goes up to /.

78
00:04:37.653 --> 00:04:41.393
Slash is known as root,
the root of your file system.

79
00:04:41.393 --> 00:04:45.505
We can say ls there, and you see all the
things that compose your operating system

80
00:04:45.505 --> 00:04:47.033
and your file system itself.

81
00:04:47.033 --> 00:04:50.007
But that's not really
where we're trying to be.

82
00:04:50.007 --> 00:04:52.584
We generally don't mess anything in root.

83
00:04:52.584 --> 00:04:54.750
If you're ever in root,
you probably shouldn't be,

84
00:04:54.750 --> 00:04:57.967
you really don't ever need to be here
unless you really know what you're doing.

85
00:04:57.967 --> 00:05:03.179
So let's go back home, and you remember
the shortcut for going back home, cd~.

86
00:05:03.179 --> 00:05:08.892
So much faster than
saying cd/user/ whatever.

87
00:05:08.892 --> 00:05:13.069
And then our next command,
we said we're going to delete temp.

88
00:05:13.069 --> 00:05:19.706
Remember I said rmdir doesn't work if
there's anything in the directory?

89
00:05:19.706 --> 00:05:25.331
Yeah, by personal opinion, and I know the
Linux fanboys will probably jump on me.

90
00:05:25.331 --> 00:05:27.228
I don't know why rmdir exists.

91
00:05:27.228 --> 00:05:28.598
I just rmdir exists, I just rm everything.

92
00:05:28.598 --> 00:05:32.060
It's a cool command, but generally
we're almost never gonna use rmdir.

93
00:05:32.060 --> 00:05:34.791
We're always gonna use rm.

94
00:05:34.791 --> 00:05:38.649
So we're gonna say rm temp.

95
00:05:38.649 --> 00:05:43.370
We're saying temp is a directory, cuz rm
only works for files, so we can force it,

96
00:05:43.370 --> 00:05:44.252
we say rm-rf.

97
00:05:48.872 --> 00:05:52.946
That way it forces the delete,
whether it's a directory or not.

98
00:05:52.946 --> 00:05:56.557
It'll delete anything,
which is a dangerous command.

99
00:05:56.557 --> 00:05:58.125
And then r is just recursive.

100
00:05:58.125 --> 00:06:00.605
It'll go through and delete everything.

101
00:06:00.605 --> 00:06:02.048
But let me double check that r.

102
00:06:02.048 --> 00:06:04.810
I'm saying it's recursive
cuz my mind is there,

103
00:06:04.810 --> 00:06:07.392
but I'm not quite sure,
so let's look it up.

104
00:06:07.392 --> 00:06:13.774
We'll say -r,
equivalent to capital R, great.

105
00:06:13.774 --> 00:06:18.512
So let's jump to capital R, nope.

106
00:06:18.512 --> 00:06:23.861
/R, why you do this to the man pages?

107
00:06:23.861 --> 00:06:26.316
I could just scroll up,
that's probably what it's telling me.

108
00:06:31.558 --> 00:06:35.456
Yeah, so I would say this is
the equivalent of recursion.

109
00:06:35.456 --> 00:06:39.360
It'll just go through and make sure every
single file is deleted versus just the top

110
00:06:39.360 --> 00:06:41.502
level file,
then you get into a weird state.

111
00:06:44.696 --> 00:06:46.873
Mark, was there a question there?

112
00:06:46.873 --> 00:06:52.215
&gt;&gt; Yeah, just a few people were having
problems exiting the man pages.

113
00:06:52.215 --> 00:06:57.153
&gt;&gt; Man, see where we man rm, q.

114
00:07:01.864 --> 00:07:05.555
Yep, it wouldn't show up cuz I typed q and
it just exits.

