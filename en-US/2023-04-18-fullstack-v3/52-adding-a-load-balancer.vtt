WEBVTT

1
00:00:00.043 --> 00:00:05.791
So for the last time today,
sudo/etc/nginx/

2
00:00:05.791 --> 00:00:10.427
sites-enabled/full stack front end

3
00:00:16.204 --> 00:00:17.589
And I'm just gonna jump up here.

4
00:00:22.768 --> 00:00:26.925
And I'm gonna create an upstream back end.

5
00:00:26.925 --> 00:00:28.645
Do it right above here.

6
00:00:35.599 --> 00:00:36.577
Say upstream.

7
00:00:39.943 --> 00:00:43.076
Actually, do I need to create this here?

8
00:00:43.076 --> 00:00:46.175
No, sorry, wrong place.

9
00:00:46.175 --> 00:00:52.294
We don't do it in the server, we do it in
Nginx conf cuz that wouldn't make sense.

10
00:00:52.294 --> 00:00:55.776
So I'm just gonna U all the way back,
there we go.

11
00:00:55.776 --> 00:00:56.906
I'm gonna quit.

12
00:00:56.906 --> 00:00:59.379
So sudo vi /nginx.conf.

13
00:01:03.713 --> 00:01:07.107
Now we can create upstream backend.

14
00:01:07.107 --> 00:01:08.058
So it doesn't really matter.

15
00:01:08.058 --> 00:01:09.005
We'll do it here.

16
00:01:10.958 --> 00:01:14.845
And we're gonna create a http block first,
if we're not already there.

17
00:01:14.845 --> 00:01:15.591
Let me double check.

18
00:01:19.501 --> 00:01:20.632
Yeah, it's already in there.

19
00:01:20.632 --> 00:01:21.861
So I'll just go at the top here.

20
00:01:25.942 --> 00:01:30.951
So we say upstream, and
we'll call this the nodebacked end just

21
00:01:30.951 --> 00:01:36.170
in case we have different types
of languages or services running.

22
00:01:36.170 --> 00:01:37.878
Call it backed, it's backend.

23
00:01:44.671 --> 00:01:45.925
And we'll just lift all our servers.

24
00:01:45.925 --> 00:01:46.914
We only have two right now.

25
00:01:46.914 --> 00:01:52.165
So we'll say server one is
running on localhost:3000.

26
00:01:54.853 --> 00:01:58.064
And the other one was running on 3001.

27
00:02:11.941 --> 00:02:15.532
Okay, not too bad.

28
00:02:15.532 --> 00:02:16.977
And for real this time,

29
00:02:16.977 --> 00:02:21.544
the last time we're gonna edit this
Nginx configuration for this course.

30
00:02:21.544 --> 00:02:28.174
So all we have to do now, instead of proxy
passing directly to that one open port,

31
00:02:28.174 --> 00:02:33.363
we're just gonna proxy
pass to Node backend.

32
00:02:33.363 --> 00:02:39.575
And we'll let Nginx decide
which server to pass to.

33
00:02:39.575 --> 00:02:43.829
So proxy pass and node backend.

34
00:02:44.888 --> 00:02:46.569
And right-click.

35
00:02:46.569 --> 00:02:47.508
And what do we do?

36
00:02:47.508 --> 00:02:53.032
Sudo nginx -t, looks good.

37
00:02:53.032 --> 00:03:00.807
So sudo service nginx Restart.

38
00:03:04.287 --> 00:03:09.560
And if we did things correctly,
the website's still up and running.

39
00:03:21.624 --> 00:03:25.699
But, you're like, how do I know
it's actually being load balanced?

40
00:03:25.699 --> 00:03:27.930
So this is bonus,
you don't have to do this.

41
00:03:27.930 --> 00:03:31.214
You can believe me that it's being load
balanced, but I'm gonna add in a little

42
00:03:31.214 --> 00:03:34.169
bit of logging just so I know I can
see how the load is being distributed.

43
00:03:39.755 --> 00:03:42.205
So I'm gonna edit my nginx.conf.

44
00:03:42.205 --> 00:03:43.614
Again, you don't have to do this.

45
00:03:43.614 --> 00:03:47.832
I'm just showing you what's actually
happening in the background.

46
00:03:47.832 --> 00:03:50.289
And I'm gonna add a log format line.

47
00:03:55.127 --> 00:03:58.586
So I've already had this copy pasted cuz
I certainly can't remember all this.

48
00:03:58.586 --> 00:04:00.863
We're creating an upstream log format,

49
00:04:00.863 --> 00:04:04.709
and all these things are parameters
that Nginx logs that we can log to.

50
00:04:04.709 --> 00:04:08.025
And this is just a really, really,
really, really verbose log.

51
00:04:08.025 --> 00:04:11.069
And really what we wanna know
is where things are headed.

52
00:04:11.069 --> 00:04:13.332
And this, again, I just copy pasted it.

53
00:04:13.332 --> 00:04:16.882
I don't remember the software head,
I put in the notes.

54
00:04:16.882 --> 00:04:18.935
If you're like,
how did you remember all that?

55
00:04:18.935 --> 00:04:20.197
I didn't, that's my secret.

56
00:04:26.713 --> 00:04:29.352
And we're just gonna edit,
I'm gonna edit my nginx.conf.

57
00:04:29.352 --> 00:04:37.624
And I just wanna say, For

58
00:04:37.624 --> 00:04:44.144
my access log, I'm just gonna specify
that I wanna use that upstream log.

59
00:04:44.144 --> 00:04:48.153
And the logging is in var/ log/ngnix

60
00:04:51.676 --> 00:04:55.329
/access.log, the default spot.

61
00:04:55.329 --> 00:05:00.652
And I'm just gonna specify
when to use this log formats.

62
00:05:02.844 --> 00:05:07.445
Let me write let's double-check, oops.

63
00:05:09.399 --> 00:05:11.403
Everything looks good, let's restart.

64
00:05:13.975 --> 00:05:18.146
And I'm gonna tail sudo

65
00:05:18.146 --> 00:05:23.151
tail- f / var / log / nginx

66
00:05:23.151 --> 00:05:27.737
/ The access.log.

67
00:05:30.416 --> 00:05:32.378
All right,
looks like nothing's happening right now.

68
00:05:32.378 --> 00:05:34.219
So let's go ahead and

69
00:05:38.255 --> 00:05:46.580
Reload my server a few times.

70
00:05:46.580 --> 00:05:50.286
I must have put something in the wrong
place cuz nothing's showing up here.

71
00:05:50.286 --> 00:05:55.608
The dash f, it's always one off,
it's always the one off.

72
00:05:55.608 --> 00:05:58.409
There we go.

73
00:05:58.409 --> 00:06:02.709
So here we can see, as I refresh the
server, sometimes it goes to port 3000,

74
00:06:02.709 --> 00:06:04.431
sometimes it goes to 3001.

75
00:06:04.431 --> 00:06:08.440
If we had more servers, you'll see
the load getting distributed out.

76
00:06:08.440 --> 00:06:12.010
Other than that, we get to add in special
logging into our applications themselves

77
00:06:12.010 --> 00:06:14.156
to respond to the server
about which one they are.

78
00:06:14.156 --> 00:06:16.883
But again, a little bit more complicated,
we need to get.

79
00:06:16.883 --> 00:06:17.686
Pretty cool.

80
00:06:17.686 --> 00:06:19.951
So now you have as many
servers as you want.

81
00:06:19.951 --> 00:06:24.184
You can bring them up and down easily as
you want, and Nginx will take care of all

82
00:06:24.184 --> 00:06:27.924
of it for you as long as you tell them
which server cluster to route to.

