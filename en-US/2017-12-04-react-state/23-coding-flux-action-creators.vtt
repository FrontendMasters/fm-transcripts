WEBVTT

1
00:00:03.330 --> 00:00:07.420
&gt;&gt; Steve: I could all over my application,
make these objects by hand.

2
00:00:07.420 --> 00:00:10.719
That's a thing that I could do.

3
00:00:10.719 --> 00:00:14.650
That's error prone and
problematic for a lot of reasons.

4
00:00:14.650 --> 00:00:16.700
Especially if there's some
normalization formatting.

5
00:00:16.700 --> 00:00:18.870
I don't wanna do that all over my
application, I wanna keep it dry.

6
00:00:20.180 --> 00:00:23.980
So we tend to use this pattern
called action creators.

7
00:00:23.980 --> 00:00:25.670
What is an action creator?

8
00:00:25.670 --> 00:00:32.470
Is a function that creates
an action [LAUGH], right?

9
00:00:32.470 --> 00:00:34.880
There is nothing special going on here.

10
00:00:34.880 --> 00:00:38.730
It is simply a function where you
pass in whatever you need and

11
00:00:38.730 --> 00:00:40.910
outcomes one of these objects.

12
00:00:40.910 --> 00:00:44.150
And it says there's a problem of having
things like incorrectly formatted and

13
00:00:44.150 --> 00:00:45.310
stuff like that.

14
00:00:45.310 --> 00:00:47.960
So we'll say we're gonna use this layout,
so export const.

15
00:00:49.090 --> 00:00:53.860
And I'm gonna call this one
update number of people.

16
00:00:55.200 --> 00:00:58.480
And it's gonna take a value and this
looks very similar to what I was doing

17
00:00:58.480 --> 00:01:00.260
with set state in the components before,
right?

18
00:01:00.260 --> 00:01:04.750
It was like I had a instance method
called update number of people

19
00:01:04.750 --> 00:01:07.910
that took a value and
then set state, right?

20
00:01:09.240 --> 00:01:11.130
The difference here this time is,

21
00:01:11.130 --> 00:01:13.590
what we're going to do is we're
gonna dispatch the action.

22
00:01:15.050 --> 00:01:16.920
So I'm gonna do this long
formula then I'll shorten it.

23
00:01:16.920 --> 00:01:23.150
So the action could be,
&gt;&gt; Steve: This right here.

24
00:01:23.150 --> 00:01:26.870
And we know that I wanna
take the value that came in.

25
00:01:26.870 --> 00:01:28.890
And cause ESX is wonderful.

26
00:01:28.890 --> 00:01:32.370
I can short hand that because not only
the ESX is wonderful but my font is large.

27
00:01:33.470 --> 00:01:37.120
So, we can take that action and
we take out Dispatcher.

28
00:01:37.120 --> 00:01:40.243
We call Dispatch method and
we pass that action, right?

29
00:01:42.670 --> 00:01:47.293
And so all an action creator does is takes
some things and makes the action object,

30
00:01:47.293 --> 00:01:50.308
and then sends it to the AppDispatcher,
that's it.

31
00:01:50.308 --> 00:01:53.070
Let's make a few more of these real quick.

32
00:01:53.070 --> 00:01:55.750
No surprise what they're going to be.

33
00:01:55.750 --> 00:01:57.234
That's why we use example applications.

34
00:02:04.324 --> 00:02:07.460
&gt;&gt; Steve: So what I could do is,
I can shorten this a little bit.

35
00:02:07.460 --> 00:02:09.930
Like I don't necessarily need to
store this in a variable if I'm

36
00:02:09.930 --> 00:02:11.560
immediately gonna use it.

37
00:02:11.560 --> 00:02:13.760
So what I'll do probably,
AppDispatcher.dispatch,

38
00:02:13.760 --> 00:02:16.250
and then I can just do the object in here.

39
00:02:16.250 --> 00:02:19.765
I'll say type, the type is gonna be

40
00:02:19.765 --> 00:02:27.540
UPDATE_SLICES_PER_PERSON.

41
00:02:27.540 --> 00:02:32.520
And again, it'll take the value, cool.

42
00:02:33.930 --> 00:02:35.060
And we'll make one more.

43
00:02:39.578 --> 00:02:41.931
&gt;&gt; Steve: Reset and reset is not
necessarily gonna take a value,

44
00:02:41.931 --> 00:02:44.140
cuz we're just gonna turn
it to what it was before.

45
00:02:44.140 --> 00:02:45.595
So that one's gonna be even easier.

46
00:02:45.595 --> 00:02:48.743
AppDispatcher.dispatch.

47
00:02:52.564 --> 00:02:53.579
&gt;&gt; Steve: And we'll just say the type.

48
00:02:53.579 --> 00:02:56.250
We'll keep it simple.

49
00:02:56.250 --> 00:02:57.800
It's just reset.

50
00:02:57.800 --> 00:03:04.939
All right, so all action creators
are simple functions that go ahead and

51
00:03:04.939 --> 00:03:11.370
create these objects and
we send them to the AppDispatcher.

52
00:03:11.370 --> 00:03:14.070
We're going to see this
pattern again in the future.

53
00:03:14.070 --> 00:03:16.530
And hopefully by then I'll remember
how to type arrow functions.

54
00:03:18.640 --> 00:03:21.693
Very cool, and so
we've created a bunch of actions.

