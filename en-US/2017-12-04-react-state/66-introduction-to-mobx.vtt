WEBVTT

1
00:00:02.780 --> 00:00:06.310
&gt;&gt; Steve: We've been doing
a lot to manage state right?

2
00:00:06.310 --> 00:00:10.790
We've been constructing some mutable state
trees and creating these actions and

3
00:00:10.790 --> 00:00:14.460
then creating these action creators and
then throwing the immutable state tree and

4
00:00:14.460 --> 00:00:18.000
the action to a reducer and
producing a new state.

5
00:00:18.000 --> 00:00:21.229
Whatever happened to just changing stuff?

6
00:00:22.230 --> 00:00:23.850
Remember changing stuff?

7
00:00:23.850 --> 00:00:24.622
It was pretty great!

8
00:00:24.622 --> 00:00:28.929
If you wanted something to be different,
you pushed something onto an array or

9
00:00:28.929 --> 00:00:31.352
you set the text to something else, right?

10
00:00:31.352 --> 00:00:33.915
It was a pretty wonderful thing here.

11
00:00:33.915 --> 00:00:38.520
What if we could just add a thing,
change the text to something and

12
00:00:38.520 --> 00:00:41.200
have that change in our UI?

13
00:00:41.200 --> 00:00:43.990
Like, that would be great to not have
to jump through all of these hoops.

14
00:00:43.990 --> 00:00:45.200
And we'll talk a little bit later,

15
00:00:45.200 --> 00:00:48.190
how there's actually tradeoffs,
which is a common theme.

16
00:00:48.190 --> 00:00:50.404
Turns out everything involves tradeoffs,

17
00:00:50.404 --> 00:00:53.163
there are some times where
this other thing is better.

18
00:00:53.163 --> 00:00:54.006
But yeah, so

19
00:00:54.006 --> 00:00:59.000
a primary tenet of MobX is that you can
store state in a simple data structure.

20
00:00:59.000 --> 00:01:00.550
You can use classes.

21
00:01:00.550 --> 00:01:03.150
Right not even simple JavaScript objects.

22
00:01:03.150 --> 00:01:05.820
But you'd have a class that has
methods that can manipulate the state.

23
00:01:05.820 --> 00:01:07.200
You can do all those things.

24
00:01:07.200 --> 00:01:11.460
From one object to running programming was
cool, and you can just change things and

25
00:01:11.460 --> 00:01:15.370
you will be able to render it and
re render your user interface with that.

26
00:01:16.780 --> 00:01:20.290
So we are gonna do something very
similar to what we did with redux,

27
00:01:20.290 --> 00:01:24.340
and we are gonna kind of play
with it in isolation for a bit.

28
00:01:26.220 --> 00:01:31.591
So I've got bit.ly and
I've got super-basic-mobx.

29
00:01:37.234 --> 00:01:38.668
&gt;&gt; Steve: I'll pause for one second.

30
00:01:51.322 --> 00:01:56.466
&gt;&gt; Steve: So let's take a look at what
we have here, which is this looks like

31
00:01:56.466 --> 00:02:02.340
the person class that we had before,
but you'll notice a few things.

32
00:02:02.340 --> 00:02:06.466
I have these decorators that have
been pulled in from the MobX library.

33
00:02:06.466 --> 00:02:10.478
This one's called observable, and
we decorate first name with it, and

34
00:02:10.478 --> 00:02:12.620
we decorate last name with it.

35
00:02:12.620 --> 00:02:15.940
And now it is wrapped, these properties,

36
00:02:15.940 --> 00:02:19.410
in what we'll take a much
deeper look at in a second.

37
00:02:20.550 --> 00:02:23.961
And, then we have this other
one called computed, alright,

38
00:02:23.961 --> 00:02:26.992
which we are wrapping around
that computed property.

39
00:02:26.992 --> 00:02:32.720
And, what you will see here,
is that this is again a get statement.

40
00:02:32.720 --> 00:02:34.130
But this will actually be regenerated,

41
00:02:34.130 --> 00:02:38.849
like, we will be notified whenever
first name and last name changes.

42
00:02:39.890 --> 00:02:43.489
And what can we do with those
notifications when things change we could

43
00:02:43.489 --> 00:02:44.530
re-render the UI.

44
00:02:44.530 --> 00:02:46.810
We could tell react that
things have changed.

45
00:02:46.810 --> 00:02:48.990
We don't actually even need
to tell react anything.

46
00:02:48.990 --> 00:02:52.690
But the problem right now with regular
objects, if I just took a person

47
00:02:52.690 --> 00:02:57.470
JavaScript object and I instantiated it,
and I passed it to a view, and

48
00:02:57.470 --> 00:03:03.290
I started changing properties on it,
is that we never really know

49
00:03:03.290 --> 00:03:08.200
when that object changes, right we
can mutate state and like react would

50
00:03:08.200 --> 00:03:13.090
not know it's like still the same object
in memory, like nothings changed here.

51
00:03:13.090 --> 00:03:15.690
And like,
it's really hard to do anything, but

52
00:03:15.690 --> 00:03:19.280
when we have observable, all of a sudden
we can know when stuff changes.

53
00:03:19.280 --> 00:03:23.900
Effectively what observable gives us is it
registers events, to say hey I changed.

54
00:03:23.900 --> 00:03:27.117
Someone was saying something to me,
I changed.

55
00:03:27.117 --> 00:03:29.640
You might wanna re-render some things.

56
00:03:29.640 --> 00:03:33.135
So I can make a new
person of me this time.

57
00:03:33.135 --> 00:03:37.325
I can even just have
an observable string and

58
00:03:38.666 --> 00:03:40.580
&gt;&gt; Steve: Check this out.

59
00:03:40.580 --> 00:03:44.820
So I have this little method here
called render which just takes

60
00:03:44.820 --> 00:03:47.705
the document body and sets its inter text.

61
00:03:47.705 --> 00:03:52.194
So you can see the name, the person's
full name, you'll notice I am not using

62
00:03:52.194 --> 00:03:55.950
the parenthesis there as well as
some quote that is just a string.

63
00:03:57.120 --> 00:04:01.480
And then this is a method from
outbacks called autorun Right?

64
00:04:01.480 --> 00:04:07.010
An autorun is triggered when ever
a property that we're observing changes.

65
00:04:07.010 --> 00:04:08.680
So, in this case that
is the first name and

66
00:04:08.680 --> 00:04:12.700
last name on any person object that
we obstantiate, in this case, me.

67
00:04:13.700 --> 00:04:19.760
It is also this particular string that we
wrapped in the observable function, right?

68
00:04:19.760 --> 00:04:24.530
And so, this observable function
here Is slightly different but

69
00:04:24.530 --> 00:04:29.920
effectively the same as this, right and
we will actually see it is a second.

70
00:04:31.090 --> 00:04:35.640
So here I've got,
it is rendering to the page and

71
00:04:35.640 --> 00:04:37.850
it will re-render whenever it changes.

72
00:04:37.850 --> 00:04:41.575
You are like okay, cool so
I put a action on a button or

73
00:04:41.575 --> 00:04:46.088
something like that right This
is just a console, no big deal.

74
00:04:54.109 --> 00:04:54.910
&gt;&gt; Steve: The page changed.

75
00:04:56.080 --> 00:04:59.040
I just literally pulled an object and
re-assigned the first name.

76
00:05:00.500 --> 00:05:04.830
The render is looking for the full name,
right, so somehow it knew.

77
00:05:04.830 --> 00:05:07.800
Full name got recomputed,
because first name changed.

78
00:05:07.800 --> 00:05:10.580
That triggered auto run,
there's no react in this code.

79
00:05:10.580 --> 00:05:14.508
This is like literally
document.body.innertext.

80
00:05:14.508 --> 00:05:19.375
And all of a sudden, I could theoretically
build an entire pizza calculator in here,

81
00:05:19.375 --> 00:05:23.715
or whatever, and re-render the entire
page whenever something changes.

82
00:05:27.457 --> 00:05:28.930
&gt;&gt; Steve: I can say quote.

83
00:05:28.930 --> 00:05:33.370
Now quote's a little trickier
because objects have references, and

84
00:05:33.370 --> 00:05:34.360
we can mutate them.

85
00:05:34.360 --> 00:05:36.970
Usually with strings, they're immutable,
so we just replace them.

86
00:05:36.970 --> 00:05:43.153
So this won't actually work,
&gt;&gt; Steve: Unfortunately I'm not

87
00:05:43.153 --> 00:05:48.630
gonna do it, just trust me that nothing
will happen, we'll still get the old one.

88
00:05:48.630 --> 00:05:52.060
But with the quote, because we can't
do this with strings and numbers,

89
00:05:52.060 --> 00:05:56.070
cuz they're not actually objects, despite
the fact that you think they have methods.

90
00:05:56.070 --> 00:05:58.607
We could do quote.set.

91
00:06:01.339 --> 00:06:04.290
&gt;&gt; Steve: And that automatically changes
on the page, and we will render.

92
00:06:04.290 --> 00:06:06.120
Right, so this is a really powerful idea,

93
00:06:06.120 --> 00:06:09.660
this is taking like the way we normally
used to just dealing with like objects and

94
00:06:09.660 --> 00:06:12.325
things in regular programming
before UIs got very hard.

95
00:06:12.325 --> 00:06:16.726
[LAUGH] And as we change stuff,
we can trigger things to happen.

