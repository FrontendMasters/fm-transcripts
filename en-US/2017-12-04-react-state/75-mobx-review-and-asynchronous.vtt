WEBVTT

1
00:00:03.320 --> 00:00:04.670
&gt;&gt; Steve Kinney: So
we have all the functionality built.

2
00:00:04.670 --> 00:00:07.270
There's something I want
to draw your attention to,

3
00:00:07.270 --> 00:00:12.390
which is, think about what the application

4
00:00:12.390 --> 00:00:15.600
component looked like at the beginning
of when we first built this application.

5
00:00:16.710 --> 00:00:21.120
And like, there's a lot in this file, but
these would all likely be their own file.

6
00:00:21.120 --> 00:00:24.150
You open a file, and
this is what you see, or this one,

7
00:00:24.150 --> 00:00:26.650
but this is effectively our application.

8
00:00:26.650 --> 00:00:30.170
And think about that when we're
looking at the least common ancestor,

9
00:00:30.170 --> 00:00:34.700
and were we decide to keep the state,
and how we pass things down and around.

10
00:00:34.700 --> 00:00:37.760
We don't necessarily need to do that
anymore, we can build our UI and

11
00:00:37.760 --> 00:00:41.680
basically build these pieces that
manage the state really well, and

12
00:00:41.680 --> 00:00:45.160
then arrange our UI, and
in a way that's really flexible, right.

13
00:00:45.160 --> 00:00:49.740
Cuz all of a sudden if a component that
was getting stuff three layers down

14
00:00:49.740 --> 00:00:51.860
the tree,
moves to a different branch of the tree,

15
00:00:51.860 --> 00:00:56.605
you don't have to unwire all of that,
and rewire it back down, right?

16
00:00:56.605 --> 00:01:00.405
You simply can move that component to
a different part of the user interface,

17
00:01:00.405 --> 00:01:01.795
I think it's really powerful.

18
00:01:02.865 --> 00:01:07.007
With this, we're also, like, we shouldn't
just manipulate the objects themselves and

19
00:01:07.007 --> 00:01:08.665
they will re-render the DOM.

20
00:01:08.665 --> 00:01:10.693
So I just want to talk
about a few last things.

21
00:01:15.061 --> 00:01:19.325
&gt;&gt; Steve Kinney: I'm going to briefly
just kind of mention how Async works with

22
00:01:19.325 --> 00:01:24.819
Mabex, which is effectively when the
action happens you can call the promise,

23
00:01:24.819 --> 00:01:28.190
and when it resolves change the object,
right?

24
00:01:28.190 --> 00:01:32.240
So you've got a method that is, for
instance, toggle, it can send out the APR

25
00:01:32.240 --> 00:01:35.820
request, and do it either when it comes
back, or it can do it optimistically.

26
00:01:35.820 --> 00:01:42.215
There's not really any special magic
that you have to do to get that working.

27
00:01:42.215 --> 00:01:45.495
You're just simply going to do it the way
you would normally do it to change

28
00:01:45.495 --> 00:01:47.795
the object, and
that will reflect itself in the state.

29
00:01:47.795 --> 00:01:51.165
The bigger problem is that you have
to solve them are to figure out

30
00:01:51.165 --> 00:01:52.365
how the user interface acts.

31
00:01:52.365 --> 00:01:55.120
Do you do it optimistically,
do you show a loading indicator?

32
00:01:55.120 --> 00:01:58.386
What other things that you need to
change and put stuff together, but

33
00:01:58.386 --> 00:02:01.045
the actual implementation
of it is incredibly simple.

