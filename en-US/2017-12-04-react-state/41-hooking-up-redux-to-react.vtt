WEBVTT

1
00:00:03.180 --> 00:00:08.636
&gt;&gt; Steve Kinney: So, we know Redux, but
now we want to bring it into a React app.

2
00:00:08.636 --> 00:00:11.610
So, we're gonna do the same
thing we did with flux,

3
00:00:11.610 --> 00:00:15.590
where I'm going to code a very simple
example, then we're gonna talk about it.

4
00:00:15.590 --> 00:00:18.050
And then we'll do it together again,
right,

5
00:00:18.050 --> 00:00:20.980
cuz there's just some moving parts and
some abstractions.

6
00:00:20.980 --> 00:00:25.530
So I think seeing it in action to see
what the thousand-foot view is, and

7
00:00:25.530 --> 00:00:29.140
then we'll conceptually talk about it,
and then we'll get into the weeds and

8
00:00:29.140 --> 00:00:30.256
do it one more time.

9
00:00:30.256 --> 00:00:35.760
All right, so
I'm gonna do it with a pizza calculator

10
00:00:37.410 --> 00:00:41.980
and I've given myself a little
bit of starting points here.

11
00:00:41.980 --> 00:00:44.921
You can see, oops,

12
00:00:44.921 --> 00:00:49.759
I've got,
&gt;&gt; Steve Kinney: This

13
00:00:49.759 --> 00:00:52.760
createStore where I'm gonna get
the reducer and the initial state.

14
00:00:52.760 --> 00:00:54.100
I don't need to combine reducers for

15
00:00:54.100 --> 00:00:57.820
the pizza calculator because it is
a very very simple application.

16
00:00:59.800 --> 00:01:01.970
Let's take a look at the actions.

17
00:01:01.970 --> 00:01:04.300
We update the number of
people with a value.

18
00:01:04.300 --> 00:01:06.550
We update the slices per
person with a value.

19
00:01:06.550 --> 00:01:08.210
We reset the calculator, right?

20
00:01:08.210 --> 00:01:10.900
We've seen this repeatedly.

21
00:01:10.900 --> 00:01:15.540
The reducer looks like it should look at
the initial state, the initial state is

22
00:01:15.540 --> 00:01:19.550
gonna be that 10 and 2 that we've used
repeatedly, and we'll also have this

23
00:01:19.550 --> 00:01:23.770
calculate numbers of pizzas needed as
well that we can kinda keep track of.

24
00:01:23.770 --> 00:01:27.610
And we'll talk about this in a second, but
the real two that we're gonna use right

25
00:01:27.610 --> 00:01:31.670
now are the number of people and
the slices per person.

26
00:01:32.750 --> 00:01:35.690
Those are the two that we
care about at this point.

27
00:01:35.690 --> 00:01:38.721
So those exist in the initial state and
reset will obviously put them back.

28
00:01:40.090 --> 00:01:42.990
So we have our actions,
we have our reducers.

29
00:01:42.990 --> 00:01:48.470
We do need to connect it up to react now.

30
00:01:48.470 --> 00:01:52.808
And could you theoretically do
what we did with Flux yesterday,

31
00:01:52.808 --> 00:01:56.300
which is import the store
into each one and

32
00:01:56.300 --> 00:02:01.270
do on component did mount, and
then you could do all of that, right?

33
00:02:01.270 --> 00:02:04.570
But Redux actually gives us another
obstruction that we can use so

34
00:02:04.570 --> 00:02:06.970
that we don't have to do that
manual putting it in, waiting for

35
00:02:06.970 --> 00:02:11.530
the component did mount to subscribe,
and then when component will unmount,

36
00:02:11.530 --> 00:02:13.720
unsubscribing, and then setting
the state in each one of those.

37
00:02:13.720 --> 00:02:16.350
We don't have to do all of that
because there's another obstraction

38
00:02:16.350 --> 00:02:17.900
that we're gonna talk
about in a little bit.

39
00:02:17.900 --> 00:02:20.190
But first I'm gonna be
a little hand wavy about it.

40
00:02:20.190 --> 00:02:24.790
And just note that we wrap the entire
application in this provider,

41
00:02:24.790 --> 00:02:28.300
and we pass it a instance of the store.

42
00:02:29.610 --> 00:02:33.190
I will talk more about what that
is doing under the hood later.

43
00:02:33.190 --> 00:02:37.540
So just go with the flow for
now, and we'll get into it.

44
00:02:37.540 --> 00:02:39.376
But this is, again,

45
00:02:39.376 --> 00:02:45.404
some of the black magic that happens
with this react-redux library.

46
00:02:45.404 --> 00:02:49.681
Which is why I feel strongly about talking
Redux first, or react first, separately,

47
00:02:49.681 --> 00:02:53.079
and then talking about bringing together,
but as soon as you mix in,

48
00:02:53.079 --> 00:02:56.500
what does this black provider do
when we get to the connect function?

49
00:02:56.500 --> 00:02:59.480
What does that do?
It becomes very unclear where the lines

50
00:02:59.480 --> 00:03:02.480
are, so
that's why we talked about Redux first.

51
00:03:02.480 --> 00:03:05.660
All right, great, so I've got all
of my Redux effectively set up.

52
00:03:05.660 --> 00:03:09.460
What I need to do is I need to create
my container components, right?

53
00:03:09.460 --> 00:03:11.900
I want these ones to hook
up to the Redux store and

54
00:03:11.900 --> 00:03:14.220
pass them to
the presentational components.

55
00:03:14.220 --> 00:03:18.170
So right now, these are all wired up
to be presentational in this example.

56
00:03:18.170 --> 00:03:21.010
They just take all
the arguments that they need.

57
00:03:21.010 --> 00:03:25.820
So input takes a whole bunch of props and
it doesn't have anything to do with it.

58
00:03:25.820 --> 00:03:29.250
Reset is a button that takes a single

59
00:03:29.250 --> 00:03:33.010
function as a prop to what you'd like
to do when the reset button is clicked.

60
00:03:33.010 --> 00:03:37.740
Result just takes some state and
title doesn't really.

61
00:03:37.740 --> 00:03:42.080
Title could take a name but apparently
I don't use it for anything, very cool.

62
00:03:42.080 --> 00:03:45.150
So these are all stateless components,
dumb components.

63
00:03:45.150 --> 00:03:47.000
They receive everything they need.

64
00:03:47.000 --> 00:03:47.970
Very easy to test,

65
00:03:47.970 --> 00:03:51.790
you pass stuff in, you see if it has
the things that it needs to have.

66
00:03:51.790 --> 00:03:53.260
I have these containers here.

67
00:03:53.260 --> 00:03:55.630
And right now, does anyone have
any questions about this code?

68
00:03:58.080 --> 00:03:58.740
So far, so good?

69
00:04:00.360 --> 00:04:00.860
Cool.

