WEBVTT

1
00:00:04.030 --> 00:00:07.400
&gt;&gt; Steve Kinney: The next thing we're
gonna look at is this idea of the reducer

2
00:00:07.400 --> 00:00:08.655
that was on the chart,

3
00:00:08.655 --> 00:00:13.169
which you'll notice is not on this list
of the methods because it's a function.

4
00:00:13.169 --> 00:00:15.513
So, let's make a reducer together.

5
00:00:15.513 --> 00:00:17.415
It'll be great.

6
00:00:17.415 --> 00:00:21.012
We'll call, let's make a calculator.

7
00:00:21.012 --> 00:00:24.988
It won't calculate pizzas,
it's just gonna calculate numbers.

8
00:00:24.988 --> 00:00:28.673
Calculator and
remember it takes two arguments,

9
00:00:28.673 --> 00:00:33.505
it takes the action, or
it takes the state of the world, rather.

10
00:00:33.505 --> 00:00:36.749
And then, the action that happened.

11
00:00:36.749 --> 00:00:40.439
A lot of times it is useful considering
you wanna modify the state of the world.

12
00:00:40.439 --> 00:00:43.998
It is useful to start out with some kind
of like, initial state of the world.

13
00:00:43.998 --> 00:00:50.484
So we will say const initialState, [SOUND]

14
00:00:50.484 --> 00:00:53.441
Is a result of zero, cool.

15
00:00:53.441 --> 00:00:57.049
And we'll say state, if no state is
passed in, we'll use the initial state.

16
00:00:57.049 --> 00:01:00.829
That way we don't have to deal with trying
to assign to undefined, and checking and

17
00:01:00.829 --> 00:01:02.774
all that stuff, we're better than that.

18
00:01:02.774 --> 00:01:05.991
So we will start out with
this calculatorReducer.

19
00:01:05.991 --> 00:01:12.305
And the world's simplest reducer,
&gt;&gt; Steve Kinney: Would be

20
00:01:12.305 --> 00:01:19.549
to just ignore whatever action happened
and return the state of the world.

21
00:01:19.549 --> 00:01:24.762
That is a very valid reducer.

22
00:01:24.762 --> 00:01:26.447
Takes the state of world, takes an action,

23
00:01:26.447 --> 00:01:29.280
doesn't do anything with it as long it
returns the new state of the world.

24
00:01:29.280 --> 00:01:30.596
And in some cases,

25
00:01:30.596 --> 00:01:35.136
if this is not something you're
given application cares about.

26
00:01:35.136 --> 00:01:38.808
It is likely that this is probably
what's gonna happen in some of them.

27
00:01:38.808 --> 00:01:43.711
For instance, if you have a reducer that
cares about showing the latest tweet,

28
00:01:43.711 --> 00:01:47.311
a new notification might not
do anything in that reducer.

29
00:01:47.311 --> 00:01:54.752
So that makes sense and we can say,
&gt;&gt; Steve Kinney: I'm

30
00:01:54.752 --> 00:01:57.838
50% chance of JS catching my changes,
I notice.

31
00:02:05.491 --> 00:02:06.562
&gt;&gt; Steve Kinney: There we go.

32
00:02:06.562 --> 00:02:08.908
CalculatorReducer and
we can pass it or whatever and

33
00:02:08.908 --> 00:02:10.515
the state is going to come back out.

34
00:02:10.515 --> 00:02:15.475
So we just like, calculatorReducer,
we take that initial state.

35
00:02:15.475 --> 00:02:17.155
And we will get back out that result.

36
00:02:17.155 --> 00:02:23.299
We don't do anything with the action just
yet, but we can very well could, right?

37
00:02:23.299 --> 00:02:26.806
So let's say we had an action that is add.

38
00:02:26.806 --> 00:02:31.648
And so the two things that we'd probably
need in that case is the action type,

39
00:02:31.648 --> 00:02:33.748
and the value that we want to add.

40
00:02:33.748 --> 00:02:38.786
So we'll say, addAction is going

41
00:02:38.786 --> 00:02:44.516
to be a type of add, these is all caps and

42
00:02:44.516 --> 00:02:48.524
I will have a value of four.

43
00:02:55.398 --> 00:02:57.143
&gt;&gt; Speaker 2: Value of four.

44
00:02:57.143 --> 00:02:58.208
&gt;&gt; Steve Kinney: Yep,

45
00:02:58.208 --> 00:03:02.363
thank you.
&gt;&gt; Steve Kinney: So

46
00:03:02.363 --> 00:03:06.919
as the calculatorReducer I'll take
the initial state of the world.

47
00:03:06.919 --> 00:03:08.886
We just passed that in, nothing happens.

48
00:03:08.886 --> 00:03:10.835
Now, if we go in here and say, and

49
00:03:10.835 --> 00:03:14.328
it's very similar to the way
we did it with flux yesterday.

50
00:03:14.328 --> 00:03:17.706
You can use a switch statement
if that's how you roll.

51
00:03:17.706 --> 00:03:20.612
I've made it very clear
that's not how I roll.

52
00:03:20.612 --> 00:03:25.422
So let's say the action type,
it equals add.

53
00:03:25.422 --> 00:03:28.393
What we'll do,
is we'll return a new object, right?

54
00:03:28.393 --> 00:03:29.290
Because we wanna be immutable here.

55
00:03:29.290 --> 00:03:31.965
We don't wanna change the object,
and we'll see why, later.

56
00:03:31.965 --> 00:03:33.456
We wanna return a brand new object, so

57
00:03:33.456 --> 00:03:35.797
we'll take all the current stuff
in the state of the world.

58
00:03:35.797 --> 00:03:41.145
And, we'll say that the result
is the state's result.

59
00:03:41.145 --> 00:03:45.772
Plus whatever the value on that action is.

60
00:03:45.772 --> 00:03:48.945
So if we have an add action come in,
we'll do that otherwise,

61
00:03:48.945 --> 00:03:52.254
if any other action comes in,
this reduce is going to ignore it.

62
00:03:59.064 --> 00:03:59.768
&gt;&gt; Steve Kinney: So we call it and

63
00:03:59.768 --> 00:04:04.491
we can see that this new,
&gt;&gt; Steve Kinney: State of the world comes

64
00:04:04.491 --> 00:04:06.040
out, which is zero plus four.

65
00:04:06.040 --> 00:04:09.125
Some really,
really heady stuff here, great.

