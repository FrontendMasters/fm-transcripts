WEBVTT

1
00:00:02.874 --> 00:00:05.973
&gt;&gt; Steve Kinney: I'm gonna take you
on a quick tour of the code base and

2
00:00:05.973 --> 00:00:09.490
then we'll take a break and
do this exercise.

3
00:00:09.490 --> 00:00:13.190
Turns out in the Lib directory,
there is this thing called API.

4
00:00:14.740 --> 00:00:20.108
Because computer set ups and like,
remote people, it's actually using index

5
00:00:20.108 --> 00:00:25.087
DB to fake being a server but it is
a promised based asynchronous library.

6
00:00:25.087 --> 00:00:27.900
I didnâ€™t wanna have to worry
about people setting up servers.

7
00:00:27.900 --> 00:00:32.972
So we actually have an API for
storing items in local storage,

8
00:00:32.972 --> 00:00:38.347
removing them, toggling them,
everything along those lines.

9
00:00:38.347 --> 00:00:42.871
What I want you to do is kind of again
looking at the difference between

10
00:00:42.871 --> 00:00:46.381
a regular action creator,
and our API abstraction,

11
00:00:46.381 --> 00:00:51.240
what we're gonna do is convert our
applications to use thunks instead.

12
00:00:51.240 --> 00:00:58.450
So let's just really quickly look at the
API library, again it is absurdly simple.

13
00:01:00.800 --> 00:01:03.950
So we have a few different items in here.

14
00:01:03.950 --> 00:01:07.130
And so you're gonna actually check
out a branch called redux-thunk to

15
00:01:07.130 --> 00:01:07.872
start out with.

16
00:01:10.959 --> 00:01:12.660
&gt;&gt; Steve Kinney: Or
I might have to update this shortly.

17
00:01:12.660 --> 00:01:16.280
I'll make a branch called
redux-thunk base really quickly.

18
00:01:16.280 --> 00:01:22.070
But the major things is, we can add
an item, we can get all of the items.

19
00:01:22.070 --> 00:01:24.700
This will probably work,
I just have the new version.

20
00:01:24.700 --> 00:01:28.681
We can add an item, we can get all
of the items, we can delete an item,

21
00:01:28.681 --> 00:01:31.650
we can update an item,
we can mark all of as packed.

22
00:01:31.650 --> 00:01:36.830
It's just an abstraction
updating them all.

23
00:01:36.830 --> 00:01:40.690
This, we don't actually use right now,
which is deleteUnpackedItems, but

24
00:01:40.690 --> 00:01:41.530
it's available.

25
00:01:41.530 --> 00:01:46.310
So, what we wanna do during this exercise
is take our synchronous action creators

26
00:01:46.310 --> 00:01:50.960
and we're going to want to change
them to make these API calls.

27
00:01:50.960 --> 00:01:55.440
So, you can just import
API from lib/API and

28
00:01:55.440 --> 00:02:00.069
then if you do API.getAll with
parentheses, that will return a promise.

29
00:02:01.080 --> 00:02:04.939
And when that promise resolves,
then we wanna dispatch the action, right.

30
00:02:04.939 --> 00:02:06.587
So definitely check out
those two previous slides,

31
00:02:06.587 --> 00:02:09.350
because that's gonna be the pattern
you're going to implement.

32
00:02:09.350 --> 00:02:11.396
And then we'll go over that together.

