WEBVTT

1
00:00:02.856 --> 00:00:05.797
&gt;&gt; Steve Kinney: So we've got it wired up
in that case, and we can do it also for

2
00:00:05.797 --> 00:00:06.330
NewItem.

3
00:00:06.330 --> 00:00:10.450
If you recall, NewItem was getting
a method passed into it as well,

4
00:00:10.450 --> 00:00:12.460
that we don't need to do anymore.

5
00:00:12.460 --> 00:00:17.729
So let's go into that one as well.
&gt;&gt; Steve Kinney: So here, we're going

6
00:00:17.729 --> 00:00:22.900
to take in the onSubmit from this.props
that we're receiving from application.

7
00:00:22.900 --> 00:00:25.120
But we don't need to do that anymore,
right?

8
00:00:25.120 --> 00:00:28.950
We can receive that from the actions.

9
00:00:38.980 --> 00:00:40.011
&gt;&gt; Steve Kinney: Actions,

10
00:00:40.011 --> 00:00:43.680
just verify that I called it addItem.

11
00:00:44.860 --> 00:00:47.690
Cool, so now addItem,
really just needs the value,

12
00:00:47.690 --> 00:00:49.300
cuz we're doing the rest of it in there.

13
00:00:49.300 --> 00:00:53.330
So we can get rid of this that was
passed in from the outside world.

14
00:00:53.330 --> 00:01:00.940
And we can change this with
&gt;&gt; Steve Kinney: AddItem value, right?

15
00:01:00.940 --> 00:01:03.527
We're getting that
directly from the store,

16
00:01:03.527 --> 00:01:07.080
we don't need to necessarily
do that in this case.

17
00:01:07.080 --> 00:01:09.330
For the application itself,

18
00:01:09.330 --> 00:01:13.900
it does make sense, because we are
splitting it between the two item lists.

19
00:01:13.900 --> 00:01:17.180
It is like a rational place to do it.

20
00:01:17.180 --> 00:01:20.508
There is a refactoring that we might try
to do tomorrow morning where we could

21
00:01:20.508 --> 00:01:21.815
break that out a little more.

22
00:01:21.815 --> 00:01:24.281
But let's start with
the simplest possible thing,

23
00:01:24.281 --> 00:01:26.980
which is to register that with
the store to get the state.

24
00:01:26.980 --> 00:01:31.019
And then we should have the basics up and
running at this point.

25
00:01:31.019 --> 00:01:32.912
So we go to application and

26
00:01:32.912 --> 00:01:38.050
we don't need this default state anymore,
so get rid of that.

27
00:01:38.050 --> 00:01:39.540
Deleting code is the best.

28
00:01:39.540 --> 00:01:42.890
We know that the new item can
handle adding items itself.

29
00:01:44.270 --> 00:01:47.300
We know that the individual
item can handle that.

30
00:01:47.300 --> 00:01:53.722
MarkAsPacked which is we call title item,
that we don't need to do anymore.

31
00:01:53.722 --> 00:01:57.198
This markAsUnpacked is responsibility
of the application component cuz

32
00:01:57.198 --> 00:01:59.615
it has all of the items from
both lists in this case.

33
00:01:59.615 --> 00:02:01.701
So we know that we need that here,

34
00:02:01.701 --> 00:02:06.100
unless we broke that out into it's
own component, cuz we can do that.

35
00:02:06.100 --> 00:02:08.660
We can bring in the store there,
we could parse in all the items,

36
00:02:08.660 --> 00:02:09.490
just lke component.

37
00:02:09.490 --> 00:02:12.100
We have a lot more flexibility
with how we break stuff apart,

38
00:02:12.100 --> 00:02:14.980
without having to worry about parsing
everything down all the time.

39
00:02:14.980 --> 00:02:18.305
Let's just make this a no op for
a little bit, because we aren't actually

40
00:02:18.305 --> 00:02:22.707
gonna set the state here anymore.
&gt;&gt; Steve Kinney: Cool, and so

41
00:02:22.707 --> 00:02:27.275
we'll just say the defaultState
is gonna be itemStore.getItems.

42
00:02:29.390 --> 00:02:35.052
And what we'll do is we will say,

43
00:02:35.052 --> 00:02:39.310
onComponentDidMount.

44
00:02:45.280 --> 00:02:46.208
&gt;&gt; Steve Kinney: Yeah, I was like,

45
00:02:46.208 --> 00:02:47.625
where's my auto complete?

46
00:02:47.625 --> 00:02:57.399
[LAUGH] onComponentDidMount, we will,
&gt;&gt; Steve Kinney: Whenever it changes

47
00:03:02.255 --> 00:03:04.430
&gt;&gt; Steve Kinney: Update.

48
00:03:04.430 --> 00:03:11.627
Nope.
&gt;&gt; Steve Kinney: UpdateItems and

49
00:03:11.627 --> 00:03:14.150
we don't have that method yet.

50
00:03:15.570 --> 00:03:19.532
And then,
&gt;&gt; Steve Kinney: ComponentWillUnmount,

51
00:03:19.532 --> 00:03:26.737
we'll take it off.
&gt;&gt; Steve Kinney: And

52
00:03:26.737 --> 00:03:36.205
what we'll do is we'll say,
&gt;&gt; Steve Kinney: UpdateItems

53
00:03:38.346 --> 00:03:38.957
&gt;&gt; Steve Kinney: And

54
00:03:38.957 --> 00:03:46.007
we'll say this.setState
&gt;&gt; Steve Kinney: and

55
00:03:46.007 --> 00:03:52.435
the items will be ItemStore.getItems.

56
00:03:57.131 --> 00:03:57.978
&gt;&gt; Steve Kinney: Alright, and so

57
00:03:57.978 --> 00:04:00.883
we don't need this in the state anymore.

58
00:04:00.883 --> 00:04:01.600
We do need that one, we have this.

59
00:04:01.600 --> 00:04:07.380
What we don't want is, this now can handle
itself, it doesn't need to be parsed in.

60
00:04:08.790 --> 00:04:11.370
This now can handle itself,
it doesn't need to be parsed in.

61
00:04:13.300 --> 00:04:16.920
Same
&gt;&gt; Steve Kinney: Let's see what we got.

62
00:04:24.040 --> 00:04:25.139
&gt;&gt; Steve Kinney: Let's go pack some

63
00:04:25.139 --> 00:04:29.911
cheese.
&gt;&gt; Steve Kinney: Check that one out in

64
00:04:29.911 --> 00:04:35.013
a second, see the other ones, all right so
&gt;&gt; Steve Kinney: It's fun.

65
00:04:35.013 --> 00:04:39.220
All right, so we're

66
00:04:39.220 --> 00:04:44.160
getting an updateItem.

67
00:04:44.160 --> 00:04:46.450
We're getting them in the store.

68
00:04:55.590 --> 00:04:57.090
&gt;&gt; Steve Kinney: OnComponentDidMount.

69
00:04:57.090 --> 00:04:58.895
I'm a little worried about,

70
00:04:58.895 --> 00:05:06.006
cuz just componentDidMount.
&gt;&gt; Steve Kinney: When

71
00:05:06.006 --> 00:05:08.209
auto complete doesn't work,
it's probably your fault.

72
00:05:15.771 --> 00:05:17.060
&gt;&gt; Steve Kinney: Cool, we can remove one.

73
00:05:18.500 --> 00:05:19.270
We can add one.

74
00:05:20.490 --> 00:05:23.610
We can check them off, back and forth.

75
00:05:23.610 --> 00:05:28.220
We've now separated our state management
from the component hierarchy.

76
00:05:28.220 --> 00:05:31.180
We can give each component what it needs.

77
00:05:31.180 --> 00:05:33.510
Tomorrow morning,

78
00:05:33.510 --> 00:05:35.640
we're gonna look a little bit about
a tiny re-factor that we can do.

79
00:05:35.640 --> 00:05:37.895
And then we'll talk about
other ways to do this.

80
00:05:37.895 --> 00:05:44.220
Cuz there's a lot to be desired,
even from the flux pattern, right?

81
00:05:44.220 --> 00:05:48.350
We have stuff in closures and
we're still pulling it in module state.

82
00:05:48.350 --> 00:05:52.053
Whenever you're doing that it becomes
a little bit harder to test than if it's

83
00:05:52.053 --> 00:05:54.420
simple, things come in,
things go out, right?

84
00:05:54.420 --> 00:05:58.299
And so we'll look at a way to just
have a very simple pattern of

85
00:05:58.299 --> 00:06:02.485
pure functions where the state of
the world, and an action go in,

86
00:06:02.485 --> 00:06:04.710
a new state of the world comes out.

87
00:06:04.710 --> 00:06:07.480
We're not necessarily always
modifying by hand in a closure scope.

88
00:06:07.480 --> 00:06:09.420
All right, so kinda look at that.

89
00:06:09.420 --> 00:06:11.090
What happens if we have multiple stores?

90
00:06:11.090 --> 00:06:17.208
Flux has ways of waiting for one store to
do its thing before doing the other one,

91
00:06:17.208 --> 00:06:19.687
but it's not optimal, right?

92
00:06:19.687 --> 00:06:22.932
So we'll look at some
options beyond just flux for

93
00:06:22.932 --> 00:06:26.420
managing state outside of
the component hierarchy.

94
00:06:26.420 --> 00:06:30.630
But we today managed to
accomplish pulling that off.

95
00:06:30.630 --> 00:06:34.170
Beginning with suffering from
passing stuff down and again,

96
00:06:34.170 --> 00:06:37.900
in a relatively small application
still feeling the pain a little bit.

97
00:06:37.900 --> 00:06:40.860
Figuring out some patterns that give
us flexibility to swap out different

98
00:06:40.860 --> 00:06:41.770
approaches.

99
00:06:41.770 --> 00:06:45.910
And then pulling our state management
outside of the component hierarchy.

100
00:06:45.910 --> 00:06:47.631
All right, so
we accomplished all those things today,

101
00:06:47.631 --> 00:06:48.551
which I think is pretty good.

