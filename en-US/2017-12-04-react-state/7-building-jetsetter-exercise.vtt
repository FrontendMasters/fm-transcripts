WEBVTT

1
00:00:02.280 --> 00:00:05.790
&gt;&gt; Steve Kinney: Okay, so we're gonna
build an application now, right?

2
00:00:05.790 --> 00:00:08.960
And this is gonna be a little bit
of you're going to built it and

3
00:00:08.960 --> 00:00:12.460
then we're gonna build it together, but
let's take a tour of the application.

4
00:00:12.460 --> 00:00:15.040
So this is a second repo,

5
00:00:15.040 --> 00:00:19.270
I think it's actually the third one
on the list, it's called Jetsetter.

6
00:00:19.270 --> 00:00:24.590
And Jetsetter looks a little bit like
this when it's fully wired up, which is

7
00:00:24.590 --> 00:00:30.190
It's not a to do list, to do lists are
overplayed, I'm not making a to do list.

8
00:00:30.190 --> 00:00:34.020
It's a list of items that I want to
pack that I can check on or off.

9
00:00:34.020 --> 00:00:37.750
When you joke, but I use this app.

10
00:00:37.750 --> 00:00:41.389
I actually built an electron
version of it and

11
00:00:41.389 --> 00:00:46.340
I, and basically you can have a bunch
of unpacked items, you can pack them.

12
00:00:46.340 --> 00:00:50.368
And then when it's time for the next trip,
you just hit mark all as unpacked and

13
00:00:50.368 --> 00:00:52.829
you can pack again,
because I travel too much.

14
00:00:52.829 --> 00:00:55.385
So, we can see some different parts of it,

15
00:00:55.385 --> 00:00:58.225
over at the top we have a new item input,
right?

16
00:00:58.225 --> 00:00:59.797
We were talking a little
bit about inputs and

17
00:00:59.797 --> 00:01:01.930
like what's long term state
versus a thermal state.

18
00:01:01.930 --> 00:01:03.230
So just put a mental bookmark there.

19
00:01:04.380 --> 00:01:08.440
Those two other very fancy
red boxes are filters,

20
00:01:08.440 --> 00:01:10.890
mostly to just implement features later.

21
00:01:10.890 --> 00:01:14.440
I have never actually wanted
to filter these lists, but

22
00:01:14.440 --> 00:01:18.390
they are simply so that we can play
around some statement a little bit.

23
00:01:18.390 --> 00:01:20.207
Then we have the list, right?

24
00:01:20.207 --> 00:01:22.917
And there are individual items, and

25
00:01:22.917 --> 00:01:27.034
there's two things an individual
item can do, right?

26
00:01:27.034 --> 00:01:31.147
It's got a check box which
means it can be marked, and

27
00:01:31.147 --> 00:01:36.184
if it is marked as Packed,
it goes down to the other list, right?

28
00:01:36.184 --> 00:01:38.586
Let's think about how we have
to figure out that state, and

29
00:01:38.586 --> 00:01:41.820
where that state has to belong,
cuz it's not isolated component.

30
00:01:41.820 --> 00:01:44.690
And we have removed,
which will simple remove if from the list.

31
00:01:46.410 --> 00:01:53.104
So, there's a lot of slightly tricky
things to think about here, right?

32
00:01:53.104 --> 00:01:57.022
Normally the best way to kind of break
apart a mockup that you get from

33
00:01:57.022 --> 00:02:00.389
a designer, into react off and
just kind of like look at and

34
00:02:00.389 --> 00:02:02.891
draw like boxes over each part, right?.

35
00:02:02.891 --> 00:02:06.653
But we have a little bit of a problem
with those items can move back and

36
00:02:06.653 --> 00:02:08.710
forth between the two list, right?

37
00:02:08.710 --> 00:02:12.500
Which means they're probably not
gonna belong into either one of those

38
00:02:12.500 --> 00:02:16.960
item list components, but they'll
probably have to go one level up, right?

39
00:02:16.960 --> 00:02:20.940
Where we'll filter out between
the packed items and the unpacked items,

40
00:02:20.940 --> 00:02:25.050
and there are all sorts of things to
worry about with filtering performance.

41
00:02:25.050 --> 00:02:27.760
Don't worry about performance right now,

42
00:02:27.760 --> 00:02:31.240
we'll talk about that in
three weeks if you want.

43
00:02:31.240 --> 00:02:33.810
That's a plug, I'm gonna do another
workshop in three weeks on performance.

44
00:02:35.680 --> 00:02:37.740
So, don't worry about performance,

45
00:02:37.740 --> 00:02:39.940
we just wanna figure out
where should this state go?

46
00:02:41.940 --> 00:02:44.892
And probably like can it
be individualized, and

47
00:02:44.892 --> 00:02:49.000
then where does managing actually for
individual item go, right?

48
00:02:49.000 --> 00:02:49.870
How does that work?

49
00:02:51.400 --> 00:02:55.330
The filtering,
the filtering seems like per list, right?

50
00:02:55.330 --> 00:02:57.580
So that probably goes
maybe on the list itself.

51
00:02:57.580 --> 00:03:02.008
There's a lot of like Interesting
little edges cases to this, otherwise,

52
00:03:02.008 --> 00:03:04.513
seems like a simple to do list app, right?

53
00:03:04.513 --> 00:03:06.801
If you look at that marked
all as unpacked, right?

54
00:03:06.801 --> 00:03:10.925
That theoretically needs to work with
all of the items that's not specific to

55
00:03:10.925 --> 00:03:12.230
a list, right?

56
00:03:12.230 --> 00:03:15.480
So, it looks like a to-do list, it's
got a bunch of little weird edge cases

57
00:03:15.480 --> 00:03:17.630
that are probably gonna trip us up a bit.

58
00:03:17.630 --> 00:03:22.450
So what we'll do is we'll spend
about 30 minutes trying to

59
00:03:22.450 --> 00:03:25.570
get a working version of this application.

60
00:03:25.570 --> 00:03:28.910
Being able to add a new item, being able
to filter the list, being able to check

61
00:03:28.910 --> 00:03:32.920
an item, to move it to the pack list or
uncheck it to move it to the unpack list.

62
00:03:32.920 --> 00:03:36.540
Being able to remove an item, and the
thing I didn't talk about there is we also

63
00:03:36.540 --> 00:03:41.430
have counts of each one of them as well
as how many items are on that list.

64
00:03:41.430 --> 00:03:45.497
So if we go to the repo, you can see that
I've done a little bit of work for you,

65
00:03:45.497 --> 00:03:47.071
and so I'll head over there.

66
00:03:54.683 --> 00:03:56.091
&gt;&gt; Steve Kinney: On the master branch.

67
00:03:56.091 --> 00:04:02.545
There is some work on for you, and
I will actually pull it open as well.

68
00:04:11.429 --> 00:04:16.237
&gt;&gt; Steve Kinney: See if I get yield off
and not killing the previous server, yeah,

69
00:04:16.237 --> 00:04:18.780
we'll run it at likely 3001.

70
00:04:24.420 --> 00:04:27.103
&gt;&gt; Steve Kinney: Give it a second
as create(rabdeck) starts up, and

71
00:04:27.103 --> 00:04:29.020
you'll see what I've left you with.

72
00:04:30.230 --> 00:04:33.750
So, I did some CSS for
you, that's very nice.

73
00:04:33.750 --> 00:04:36.280
I put in this counter about your Lyft
coming in ten minutes that we'll worry

74
00:04:36.280 --> 00:04:38.250
about later, that was very nice of me.

75
00:04:38.250 --> 00:04:39.020
Let's add a new item.

76
00:04:40.140 --> 00:04:43.780
I can't even type in the info field,
that is problematic,

77
00:04:45.300 --> 00:04:48.270
because there is no actual
state in this application yet.

78
00:04:48.270 --> 00:04:49.790
Let's take a look at the implementation so
far.

79
00:04:51.690 --> 00:04:55.853
So I can go in to source and
in to components, and if I look at my

80
00:04:55.853 --> 00:05:00.692
application, I have a list of default
items that you saw on that page.

81
00:05:00.692 --> 00:05:04.773
But, here's just a bunch of helpful
comments left for you, right?

82
00:05:04.773 --> 00:05:10.501
Setting the initial state, how are you
going to manipulate the states?

83
00:05:10.501 --> 00:05:12.860
Where maybe wanna get items from state?

84
00:05:12.860 --> 00:05:15.910
There are some presentational
components built for you, but

85
00:05:15.910 --> 00:05:19.360
there's no concept of necessary
working with this state yet.

86
00:05:19.360 --> 00:05:21.570
So you're gonna be on your
own to thing about it.

87
00:05:21.570 --> 00:05:23.580
And you see that I have two items lists,

88
00:05:23.580 --> 00:05:27.720
like the unpacked item should go probably
in the one title unpacked items.

89
00:05:27.720 --> 00:05:30.360
But like again you're, your own person.

90
00:05:30.360 --> 00:05:34.510
Packed items should go in
the packed items array.

91
00:05:34.510 --> 00:05:36.704
We've got this button, so
we can go into the items.

92
00:05:41.414 --> 00:05:45.814
&gt;&gt; Steve Kinney: And you can see that it's
got a filter bar that has term set to

93
00:05:45.814 --> 00:05:51.096
string, and a update search term
that doesn't do anything right now,

94
00:05:51.096 --> 00:05:54.193
so you're gonna have to figure that out.

95
00:05:54.193 --> 00:05:56.706
And the we have the ability to
filter implement it here, but

96
00:05:56.706 --> 00:05:59.281
that could probably get pulled out,
but you don't have to.

97
00:05:59.281 --> 00:06:03.210
And then, we map over those to
create individual items, right?

98
00:06:03.210 --> 00:06:05.620
There is a little bit of
work to do to wire these up

99
00:06:07.020 --> 00:06:11.110
going into the individual item,
you can see it's got an on change,

100
00:06:11.110 --> 00:06:14.930
it shows the item value,
so on and so forth, right?

101
00:06:14.930 --> 00:06:19.862
So we're gonna have to figure
out where does the state

102
00:06:19.862 --> 00:06:22.940
go in this application, right?

103
00:06:22.940 --> 00:06:26.314
If we're gonna change an item
in the item component, but

104
00:06:26.314 --> 00:06:28.930
the individual item lives somewhere else.

105
00:06:28.930 --> 00:06:31.800
How do we get that functionality
down to it, right?

106
00:06:31.800 --> 00:06:36.746
There's a bunch of problems that we're
gonna need to solve, and I'm gonna let you

107
00:06:36.746 --> 00:06:41.693
solve them for a little bit, and then what
we'll do is we will come back together and

108
00:06:41.693 --> 00:06:44.961
we'll solve it as a team cuz
who's not into teamwork?

109
00:06:44.961 --> 00:06:48.287
And I'll kinda show you one approach
that we are eventually going to then

110
00:06:48.287 --> 00:06:50.919
refactor several times over
the course of the workshop.

