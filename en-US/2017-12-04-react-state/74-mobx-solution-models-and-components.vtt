WEBVTT

1
00:00:02.916 --> 00:00:07.188
&gt;&gt; Steve Kinney: All right, so let's try
to implement the ability to remove one,

2
00:00:07.188 --> 00:00:11.910
as well as the ability to toggle
it between the two lists.

3
00:00:11.910 --> 00:00:16.036
So previously,
we added a remove method for

4
00:00:16.036 --> 00:00:21.510
the individual item, and
that is a bound action, right?

5
00:00:21.510 --> 00:00:26.156
So we can go item.remove, and it should
communicate back up to the list for

6
00:00:26.156 --> 00:00:28.460
it to remove item and pass itself in.

7
00:00:28.460 --> 00:00:30.320
So let's give it a shot and
see how it goes.

8
00:00:31.980 --> 00:00:34.400
So we'll have the item being passed in.

9
00:00:34.400 --> 00:00:37.666
What I'm just gonna try to do at this
point is I'm gonna say item.remove.

10
00:00:37.666 --> 00:00:40.230
We'll hope for the best.

11
00:00:42.420 --> 00:00:43.440
Assign a value we've never used.

12
00:00:43.440 --> 00:00:44.385
That seems all fine so far.

13
00:00:48.601 --> 00:00:51.120
&gt;&gt; Steve Kinney: Oop, let's see.

14
00:00:51.120 --> 00:00:53.690
Remove item of undefined.

15
00:00:55.240 --> 00:00:57.793
So this.list.

16
00:00:57.793 --> 00:01:00.221
Let's check what we got.

17
00:01:05.529 --> 00:01:07.549
&gt;&gt; Steve Kinney: Let's go
check out the item list.

18
00:01:08.650 --> 00:01:10.082
Do pass.

19
00:01:10.082 --> 00:01:10.895
This has to be one over.

20
00:01:18.664 --> 00:01:19.656
&gt;&gt; Steve Kinney: Mea culpa on that one.

21
00:01:22.680 --> 00:01:25.120
&gt;&gt; Steve Kinney: I can add it,
I can remove it.

22
00:01:25.120 --> 00:01:28.643
I can add it, I can remove it,
let's implement, let's go for toggle.

23
00:01:28.643 --> 00:01:31.670
You're ready?
All right, let's do it.

24
00:01:31.670 --> 00:01:34.580
This is where I think this
stuff gets really exciting.

25
00:01:34.580 --> 00:01:43.580
So for toggle, we're just gonna say,
action.bound toggle(),

26
00:01:43.580 --> 00:01:49.070
and we'll return this.packed

27
00:01:49.070 --> 00:01:54.880
equals the opposite of this.packed.

28
00:01:54.880 --> 00:01:59.888
And we'll flip back over to that item
component, and we'll switch it with,

29
00:02:03.207 --> 00:02:05.023
&gt;&gt; Steve Kinney: item.toggle.

30
00:02:06.288 --> 00:02:09.530
&gt;&gt; Steve Kinney: So the item is passed in.

31
00:02:09.530 --> 00:02:10.750
It works on itself.

32
00:02:10.750 --> 00:02:12.820
It's not like we're
dispatching actions to a store.

33
00:02:12.820 --> 00:02:13.790
The store changes a thing.

34
00:02:13.790 --> 00:02:17.420
It's like, hey item, do your thing, right.

35
00:02:17.420 --> 00:02:19.510
So now, we can say, hello.

36
00:02:21.730 --> 00:02:26.310
And it switches between the list,
it's a list using computed properties.

37
00:02:26.310 --> 00:02:31.556
So one of the items in the list changes,
that recomputes all the properties,

38
00:02:31.556 --> 00:02:35.996
the observer notices that
the computer properties changed, and

39
00:02:35.996 --> 00:02:37.738
it re-renders the DOM.

40
00:02:37.738 --> 00:02:40.970
So let's take this
a little bit further now.

41
00:02:40.970 --> 00:02:42.548
We'd love to get the filtering working.

42
00:02:42.548 --> 00:02:45.870
So far we've adding,
we've got removing, we've got toggling.

43
00:02:45.870 --> 00:02:49.680
It will be very cool to get
the filter to work as well.

44
00:02:49.680 --> 00:02:53.206
So that's going to involve
a little bit of refactoring,

45
00:02:53.206 --> 00:02:55.858
like we need to get these doing something.

46
00:02:57.670 --> 00:03:00.823
&gt;&gt; Steve Kinney: I mean they work because
I'd say it works with them right now but

47
00:03:00.823 --> 00:03:02.680
let's try to do a little bit better.

48
00:03:02.680 --> 00:03:06.860
I would love for the list to be
able to keep track of all of this.

49
00:03:06.860 --> 00:03:11.510
So what I'm gonna try to do is
let the list keep track of what

50
00:03:11.510 --> 00:03:15.580
the search terms are, and
be able to figure this stuff out for us.

51
00:03:17.380 --> 00:03:17.880
So let's go to the list.

52
00:03:21.634 --> 00:03:22.791
&gt;&gt; Steve Kinney: And we're gonna,

53
00:03:22.791 --> 00:03:26.780
cuz we can just like add the logic
to our data to our actual models.

54
00:03:26.780 --> 00:03:30.400
Which in an NVC pattern is where
this stuff belongs, right?

55
00:03:30.400 --> 00:03:35.200
The model should be able to manage what
the kind of state is in this case.

56
00:03:35.200 --> 00:03:37.980
So we've got the ability to get
ourselves packed and unpacked items.

57
00:03:37.980 --> 00:03:40.930
It would be kind of cool
to be able to say, hey,

58
00:03:40.930 --> 00:03:43.980
can you keep track of what
the search terms are?

59
00:03:45.290 --> 00:03:49.370
And we can argue if there should be
a smaller object that does this, but

60
00:03:49.370 --> 00:03:53.270
let's do it here now and
then like refactor it in a little bit, or

61
00:03:53.270 --> 00:03:54.700
probably not refactor it, but.

62
00:03:56.700 --> 00:03:58.570
This isn't gonna be our bread and
butter application, so

63
00:03:58.570 --> 00:04:01.470
we'll start out with a filter here,
for unpacked items.

64
00:04:02.530 --> 00:04:04.230
We'll do one for packed items.

65
00:04:06.210 --> 00:04:09.690
And so how do we tell what
the filtered items are?

66
00:04:09.690 --> 00:04:12.310
Well we have the list of items,

67
00:04:12.310 --> 00:04:15.390
we've also had the sublist of packed and
unpacked items.

68
00:04:15.390 --> 00:04:18.580
We have this term, we can just compute it.

69
00:04:18.580 --> 00:04:22.660
On the fly, if either one of these
changes, recompute the list.

70
00:04:22.660 --> 00:04:31.128
So let's go do that, so we'll say,
&gt;&gt; Steve Kinney: Filtered unpacked list,

71
00:04:31.128 --> 00:04:33.120
does anyone like that one,
anyone have a better name.

72
00:04:36.725 --> 00:04:44.118
&gt;&gt; Steve Kinney: And
that is going to be return

73
00:04:44.118 --> 00:04:52.439
this.unpackedItems.filter

74
00:04:52.439 --> 00:04:56.449
item.value.

75
00:04:56.449 --> 00:05:06.145
So its name includes
this.unpackedItemsFilter.

76
00:05:09.024 --> 00:05:11.340
&gt;&gt; Steve Kinney: All right, cool.

77
00:05:11.340 --> 00:05:14.119
So we've got the ability to get
to filter the unpacked items.

78
00:05:16.070 --> 00:05:17.355
And we'll filter the packed items.

79
00:05:22.390 --> 00:05:25.551
&gt;&gt; Steve Kinney: And now really all
I need to do is update those strings.

80
00:05:25.551 --> 00:05:30.860
Cuz if the strings get changed,
those'll recompute these filtered lists.

81
00:05:30.860 --> 00:05:33.410
So what I'll do is I'll give myself
an action, cuz I wanna bind it,

82
00:05:33.410 --> 00:05:35.379
I don't wanna make an anonymous
function every time.

83
00:05:36.620 --> 00:05:37.120
I'm better than that.

84
00:05:40.621 --> 00:05:42.807
&gt;&gt; Steve Kinney: Action.bound.

85
00:05:46.301 --> 00:05:50.276
&gt;&gt; Steve Kinney: Update unpacked filter.

86
00:05:53.570 --> 00:05:56.640
&gt;&gt; Steve Kinney: And that'll be,
that'll take the new text.

87
00:05:59.580 --> 00:06:02.639
Let's say value.
Cuz it's gonna be an input field, so

88
00:06:02.639 --> 00:06:04.870
we'll go with that.

89
00:06:04.870 --> 00:06:09.256
And we'll just say that this.unpackeditems
filter now will equal the value.

90
00:06:09.256 --> 00:06:14.280
And the same thing for packed.

91
00:06:14.280 --> 00:06:15.952
Someone please keep an eye
on my capitalization.

92
00:06:15.952 --> 00:06:21.640
All right so we have to update the pact.

93
00:06:21.640 --> 00:06:22.908
Update the unpacked filter.

94
00:06:22.908 --> 00:06:25.851
And those will change those as well.

95
00:06:25.851 --> 00:06:30.002
So now the only thing
I've got to deal with is,

96
00:06:30.002 --> 00:06:33.950
I can actually go back
into my application.

97
00:06:35.900 --> 00:06:42.047
And,
&gt;&gt; Steve Kinney: The items

98
00:06:42.047 --> 00:06:47.590
is in there right now, it's nested,
because we had to pass stuff down before.

99
00:06:47.590 --> 00:06:52.100
And so I have this very generic items.

100
00:06:52.100 --> 00:06:56.530
What I'm probably gonna do is
pull that out and change it.

101
00:06:56.530 --> 00:06:58.300
Cuz I can make different choices,

102
00:06:58.300 --> 00:07:00.910
cuz I can have everything
almost on a flat level.

103
00:07:00.910 --> 00:07:02.085
So we don't need to worry
about stuff as much.

104
00:07:02.085 --> 00:07:05.053
And so what I'm gonna do is I'm
gonna pull the filter out here.

105
00:07:12.734 --> 00:07:14.300
&gt;&gt; Steve Kinney: From the filter.

106
00:07:14.300 --> 00:07:16.610
So now I can use it here as well.

107
00:07:18.730 --> 00:07:24.800
And let's make sure it's not
doubly in the items list now.

108
00:07:26.700 --> 00:07:32.070
We also don't need all of this craziness,
because we are filtering ourselves,

109
00:07:32.070 --> 00:07:33.760
so we'll get rid of that.

110
00:07:33.760 --> 00:07:36.020
Like, that's not a responsibility
with you anymore.

111
00:07:37.330 --> 00:07:38.871
We don't need any of this.

112
00:07:38.871 --> 00:07:43.060
I'm just gonna pass in the item and
the key.

113
00:07:44.290 --> 00:07:49.762
And we wanna be able to have
more control over this.

114
00:07:49.762 --> 00:07:53.614
So I'm actually going
to let it be a child.

115
00:07:54.719 --> 00:07:55.588
&gt;&gt; Steve Kinney: I could, however,

116
00:07:55.588 --> 00:07:59.540
use the render props pattern if I wanna
do all sorts of different stuff in here.

117
00:07:59.540 --> 00:08:01.980
There's a bunch of different, like,
options that I could do as well.

118
00:08:01.980 --> 00:08:05.740
But I feel pretty good about this one,
he says.

119
00:08:07.540 --> 00:08:10.820
All those are just never used,
things I'm removing so much code.

120
00:08:10.820 --> 00:08:11.690
So much code.

121
00:08:13.500 --> 00:08:15.730
So, let's go ahead and
we'll go back to application.

122
00:08:16.850 --> 00:08:19.920
And this props to children, cool.

123
00:08:19.920 --> 00:08:22.580
So, that'll be the items.

124
00:08:22.580 --> 00:08:23.790
All right, I think I'm feeling
pretty good about this.

125
00:08:26.413 --> 00:08:29.561
&gt;&gt; Steve Kinney: And so in here,
we'll just say, we'll give this a child.

126
00:08:33.193 --> 00:08:40.900
&gt;&gt; Steve Kinney: And
it will take itemList.packedItems

127
00:08:44.472 --> 00:08:45.370
&gt;&gt; Steve Kinney: Filter.

128
00:08:46.920 --> 00:08:48.204
I don't like that I
don't have autoComplete.

129
00:08:48.204 --> 00:08:53.135
So I gonna go

130
00:08:53.135 --> 00:08:57.573
check that

131
00:08:57.573 --> 00:09:03.000
file again.

132
00:09:07.964 --> 00:09:10.540
&gt;&gt; Steve Kinney: We'll find out together.

133
00:09:10.540 --> 00:09:11.615
So this will be the search
term that's passed in.

134
00:09:11.615 --> 00:09:13.115
And we'll say,

135
00:09:22.730 --> 00:09:23.255
&gt;&gt; Steve Kinney: Update.

136
00:09:23.255 --> 00:09:28.668
&gt;&gt; Steve Kinney: I'm just gonna go
ahead and look at this because again,

137
00:09:28.668 --> 00:09:33.860
that lack of autoComplete
does not make me feel good.

138
00:09:36.195 --> 00:09:38.940
&gt;&gt; Speaker 2: Filtered packed.

139
00:09:38.940 --> 00:09:40.240
&gt;&gt; Steve Kinney: Look at that.

140
00:09:41.330 --> 00:09:42.890
That's probably my issue right there.

141
00:09:44.680 --> 00:09:48.671
Which is kind of.
So we got packed items, I've got filtered,

142
00:09:48.671 --> 00:09:52.090
packed list, filtered unpacked list.

143
00:09:52.090 --> 00:09:55.010
I think I said at one point,
be careful with my capitalization.

144
00:09:55.010 --> 00:09:57.176
I'm gonna make a mistake.

145
00:09:57.176 --> 00:09:59.760
See, I'm testing you, is the thing.

146
00:10:02.070 --> 00:10:02.570
Cool.

147
00:10:04.558 --> 00:10:09.272
&gt;&gt; Steve Kinney: Oops,
still got the same issue.

148
00:10:09.272 --> 00:10:13.426
onChange is not a function.

149
00:10:13.426 --> 00:10:20.532
That should be coming as the props and
filter 9.

150
00:10:25.880 --> 00:10:30.107
&gt;&gt; Steve Kinney: So that's this onChange,
which is coming in from this.props, so

151
00:10:30.107 --> 00:10:33.009
let's actually console.log this.props.

152
00:10:35.741 --> 00:10:36.385
&gt;&gt; Steve Kinney: Cool.

153
00:10:36.385 --> 00:10:42.553
And I'm also still gonna
go up that level and-

154
00:10:42.553 --> 00:10:46.815
&gt;&gt; Speaker 2: So it's updatePackedFilter,

155
00:10:46.815 --> 00:10:50.517
but not updated [INAUDIBLE]
&gt;&gt; Steve Kinney: So

156
00:10:50.517 --> 00:10:54.749
I have updatePackedFilter,
and in my model,

157
00:10:54.749 --> 00:10:59.640
I've switched it at one point,
so let's grab that.

158
00:10:59.640 --> 00:11:01.696
updatePackedItemsFilter

159
00:11:11.884 --> 00:11:14.688
&gt;&gt; Steve Kinney: All right, so

160
00:11:14.688 --> 00:11:19.070
we're changing it.

161
00:11:19.070 --> 00:11:21.560
We just need to use a new version.

162
00:11:21.560 --> 00:11:26.960
Cool, so I'm actually going to then,
because it's still the entire list.

163
00:11:29.650 --> 00:11:33.590
We'll do the,
what is the name of that one from before?

164
00:11:36.070 --> 00:11:39.810
We're now calling it
the filtered packed list.

165
00:11:52.781 --> 00:11:53.770
&gt;&gt; Steve Kinney: All right, cool.

166
00:11:53.770 --> 00:11:55.880
We got filtering working.

167
00:11:55.880 --> 00:11:59.740
Yay, let's do the same thing for
the unpacked,

168
00:12:03.827 --> 00:12:06.459
&gt;&gt; Steve Kinney: I think auto-complete is

169
00:12:06.459 --> 00:12:11.490
failing me right now,
which makes me really sad.

170
00:12:13.690 --> 00:12:17.944
So let's actually copy this entire
thing over, and we'll swap them out.

171
00:12:21.551 --> 00:12:28.521
&gt;&gt; Steve Kinney: All right,
so this will now be unpacked,

172
00:12:28.521 --> 00:12:32.520
unpacked, unpacked.

173
00:12:32.520 --> 00:12:33.872
Maybe we'll even change
this one to unpacked.

174
00:12:44.600 --> 00:12:47.326
&gt;&gt; Steve Kinney: Cool.

175
00:12:47.326 --> 00:12:52.531
All right, we have the entire
application working except for

176
00:12:52.531 --> 00:12:54.640
this mark all as packed.

177
00:12:54.640 --> 00:12:58.455
But we could literally make
a mark all as packed button, and

178
00:12:58.455 --> 00:13:02.650
just put a action on the item list
which is just gonna set them all,

179
00:13:02.650 --> 00:13:05.120
tell each one to set them all to false.

180
00:13:05.120 --> 00:13:07.470
And we'll have that entirely in place.

181
00:13:07.470 --> 00:13:09.132
And let's actually do that real quick.

182
00:13:11.542 --> 00:13:18.639
&gt;&gt; Steve Kinney: Mark all
of them as packed and

183
00:13:18.639 --> 00:13:23.371
let's go ahead and

184
00:13:23.371 --> 00:13:29.287
let's inject the store

185
00:13:29.287 --> 00:13:33.140
into this one.

186
00:13:34.780 --> 00:13:36.060
Cuz now we can use it from anywhere.

187
00:13:36.060 --> 00:13:37.060
If we wanna move it to
a different part of the UI.

188
00:13:37.060 --> 00:13:40.562
But I think a thing that we don't think
a lot about in the reaction pointer

189
00:13:40.562 --> 00:13:41.941
hierarchy problem is like,

190
00:13:41.941 --> 00:13:45.545
it's all great until design says,
can you move that over to the side bar?

191
00:13:45.545 --> 00:13:47.060
[LAUGH] Right?

192
00:13:47.060 --> 00:13:50.410
And then all of a sudden it's not because
it was deep in your commodity hierarchy.

193
00:13:50.410 --> 00:13:52.350
If we kinda get it to
the point where it's isolated.

194
00:13:53.950 --> 00:13:56.580
We can just literally move this
button anywhere in the UI, and

195
00:13:56.580 --> 00:13:58.650
it's effectively gonna work.

196
00:13:58.650 --> 00:13:59.620
So we'll inject the itemList.

197
00:14:02.273 --> 00:14:04.369
&gt;&gt; Steve Kinney: And
this doesn't need any state,

198
00:14:04.369 --> 00:14:07.630
because it has everything
that it needs in this case.

199
00:14:07.630 --> 00:14:12.237
So we'll take the itemList,
&gt;&gt; Steve Kinney: And

200
00:14:12.237 --> 00:14:18.404
we'll return
&gt;&gt; Steve Kinney: A button.

201
00:14:22.170 --> 00:14:23.746
&gt;&gt; Steve Kinney: And
we'll give it the class name fullwidth,

202
00:14:23.746 --> 00:14:25.330
cuz I believe that's
what it has down there.

203
00:14:37.371 --> 00:14:39.920
&gt;&gt; Steve Kinney: Mark all as packed.

204
00:14:39.920 --> 00:14:44.130
I keep wanting to call
it mark all as read.

205
00:14:44.130 --> 00:14:46.666
That's not what we're building right now.

206
00:14:46.666 --> 00:14:48.515
Cool, and we'll say onClick.

207
00:14:51.476 --> 00:14:56.459
&gt;&gt; Steve Kinney: itemList markAllAsPacked.

208
00:14:56.459 --> 00:15:01.410
And we just need to create that,
&gt;&gt; Steve Kinney: On the itemList.

209
00:15:05.911 --> 00:15:11.889
&gt;&gt; Steve Kinney: Bound markAllAsPacked

210
00:15:17.718 --> 00:15:21.643
&gt;&gt; Steve Kinney: this.items.map

211
00:15:21.643 --> 00:15:26.795
item.packed = false.

212
00:15:30.157 --> 00:15:37.360
&gt;&gt; Steve Kinney: True
if we make it packed.

213
00:15:39.320 --> 00:15:40.613
No we want them unpacked.

214
00:15:40.613 --> 00:15:43.260
I marked all those packed,
so I mistyped this one.

215
00:15:43.260 --> 00:15:48.770
So let's actually, I probably
mistyped it below, but good catch.

216
00:15:50.040 --> 00:15:54.255
Be like
&gt;&gt; Steve Kinney: All right, so

217
00:15:54.255 --> 00:15:58.775
change that, yeah,
well I went whole hog on that one.

218
00:16:03.620 --> 00:16:04.660
&gt;&gt; Steve Kinney: We'll use
this button down here.

219
00:16:08.389 --> 00:16:12.230
&gt;&gt; Steve Kinney: I've unpacked.

220
00:16:12.230 --> 00:16:14.120
We actually don't need this
onSubmit anywhere either.

221
00:16:19.410 --> 00:16:23.139
I just need to finish
what we were doing here.

222
00:16:23.139 --> 00:16:28.160
I feel like the highlighting
is getting slow.

223
00:16:28.160 --> 00:16:32.330
Probably maybe it's just Visual Studio
code is getting a little tired here.

224
00:16:36.331 --> 00:16:39.020
&gt;&gt; Steve Kinney: Mark them
all as unpacked, nope.

225
00:16:40.060 --> 00:16:43.647
&gt;&gt; Speaker 2: Right there,
that doesn't return the item in your map.

226
00:16:46.396 --> 00:16:47.150
&gt;&gt; Steve Kinney: Where?

227
00:16:47.150 --> 00:16:47.990
&gt;&gt; Speaker 2: This map here.

228
00:16:49.380 --> 00:16:49.880
&gt;&gt; Steve Kinney: Nice.

229
00:16:51.410 --> 00:16:52.700
&gt;&gt; Speaker 2: You should return item.

230
00:16:54.090 --> 00:16:56.750
&gt;&gt; Steve Kinney: I think I had a little
spoil with that syntax, right?

231
00:16:56.750 --> 00:16:59.820
The automatic returns but
now when you're doing the assignments.

232
00:16:59.820 --> 00:17:02.874
Yeah, well I'm seeing
the assignment doesn't return item.

233
00:17:02.874 --> 00:17:05.260
So, we have to study it and
then return item.

234
00:17:07.126 --> 00:17:10.660
&gt;&gt; Steve Kinney: Cool,
&gt;&gt; Steve Kinney: I can also use like

235
00:17:10.660 --> 00:17:13.460
the spread operator and
just replace that value too.

236
00:17:13.460 --> 00:17:14.115
But, let's not get fancy here.

237
00:17:18.974 --> 00:17:19.596
&gt;&gt; Steve Kinney: Nope.

238
00:17:24.500 --> 00:17:27.895
&gt;&gt; Steve Kinney: Let's see,
I'm also not convinced it was updated.

239
00:17:53.249 --> 00:17:56.107
&gt;&gt; Steve Kinney: So we don't have
that event list in there happening.

240
00:17:56.107 --> 00:17:59.150
Yep, because we didn't put it onClick.

241
00:18:00.505 --> 00:18:01.470
But we should have it here.

242
00:18:09.932 --> 00:18:12.032
&gt;&gt; Steve Kinney: Cool.

