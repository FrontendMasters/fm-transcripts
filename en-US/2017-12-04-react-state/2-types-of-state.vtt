WEBVTT

1
00:00:02.473 --> 00:00:04.798
&gt;&gt; Steve Kinney: And
that all state is not created equal.

2
00:00:04.798 --> 00:00:08.157
The problem with state is
that it is a very broad term.

3
00:00:08.157 --> 00:00:12.729
And a lot of times even in mono
space font the word state,

4
00:00:12.729 --> 00:00:15.953
there are a lot of pieces to it, right.

5
00:00:15.953 --> 00:00:18.380
There's a lot of different
interpretations of it.

6
00:00:18.380 --> 00:00:19.440
We have our model data.

7
00:00:19.440 --> 00:00:23.130
So in the email client I work
in the list of campaigns or

8
00:00:23.130 --> 00:00:27.968
the number of modules in each campaign,
the tweets in a Twitter feed,

9
00:00:27.968 --> 00:00:30.689
be restaurants in a Yelp page, rIght?

10
00:00:30.689 --> 00:00:33.495
That is model data that is
usually coming from the database.

11
00:00:33.495 --> 00:00:36.897
And like for
a lot of backhand engineers, right?

12
00:00:36.897 --> 00:00:41.701
And it's a friendly masters course,
I can pick on backend engineers, right,

13
00:00:41.701 --> 00:00:43.867
no one is gonna get fully offended.

14
00:00:43.867 --> 00:00:47.240
When we think about HTTP
where you send a request,

15
00:00:47.240 --> 00:00:50.704
the only state happening is the database,
right?

16
00:00:50.704 --> 00:00:54.229
The server springs a life answers
the request, sends the response,

17
00:00:54.229 --> 00:00:56.675
your kind of interaction
is over at that point.

18
00:00:56.675 --> 00:01:01.442
When we are client side engineers
the user opens the application and

19
00:01:01.442 --> 00:01:04.546
it's just state until they leave, right?

20
00:01:04.546 --> 00:01:08.694
It's where they are in
the application is technically state.

21
00:01:08.694 --> 00:01:12.276
Whether or not they've sorted the list
of restaurants in ascending or

22
00:01:12.276 --> 00:01:15.372
descending order based on reviews,
that is a form of state,

23
00:01:15.372 --> 00:01:19.035
even though we're not changing
the restaurants themselves, right?

24
00:01:19.035 --> 00:01:23.219
How we view it,
that is a form of state that has changed.

25
00:01:23.219 --> 00:01:27.197
Figuring out if we're telling the user,
hey, we're going loading these

26
00:01:27.197 --> 00:01:31.003
restaurants, or if we actually have
them already, is a form of state.

27
00:01:31.003 --> 00:01:34.752
Where are we in the process
of getting the model data?

28
00:01:34.752 --> 00:01:37.798
And in the case of single
page applications,

29
00:01:37.798 --> 00:01:40.532
where we are in the app is state, right?

30
00:01:40.532 --> 00:01:43.739
This is not just a separate
index.html page is being rendered.

31
00:01:43.739 --> 00:01:47.175
But this is literally we're
using the URL to a lot of times,

32
00:01:47.175 --> 00:01:50.545
signify the state of the application,
right, whether or

33
00:01:50.545 --> 00:01:54.567
not they are at a given specific
tweet versus a user's page, right?

34
00:01:54.567 --> 00:01:55.802
That is also like state.

35
00:01:55.802 --> 00:02:00.951
So we need to get a little
bit more specific as well.

36
00:02:00.951 --> 00:02:05.753
The only thing I wanna think about is Is
long-lasting state versus what I'm gonna

37
00:02:05.753 --> 00:02:07.155
call ephemeral state.

38
00:02:07.155 --> 00:02:11.204
And when we talked about, you might
not just take one approach, right?

39
00:02:11.204 --> 00:02:12.936
Even if you're like, I'm using Redux.

40
00:02:12.936 --> 00:02:15.665
There might be times that you
still use component state, right.

41
00:02:15.665 --> 00:02:18.415
Because depending on the state
that you're working with,

42
00:02:18.415 --> 00:02:20.946
it might make sense to handle
it differently, right?

43
00:02:20.946 --> 00:02:23.629
Model state is usually
like long-lasting state.

44
00:02:23.629 --> 00:02:26.590
It's what the user's working with while
they're in the application, right?

45
00:02:26.590 --> 00:02:30.536
They're in Gmail, it's a list of
emails that they're looking at, right?

46
00:02:30.536 --> 00:02:34.628
However, what they're currently typing
in an input field before they hit Enter,

47
00:02:34.628 --> 00:02:38.603
if they're adding in a new to-do or
if they're searching their inbox in Gmail,

48
00:02:38.603 --> 00:02:41.075
that's definitely more
like short lived state.

49
00:02:41.075 --> 00:02:44.708
And we're gonna kinda go back and
forth a few times with this today.

50
00:02:44.708 --> 00:02:48.650
We're going to sometimes we're gonna keep
that ephemeral state in a Redux store.

51
00:02:48.650 --> 00:02:52.942
We're gonna use a flux architecture but
then keep it in a component state, right,

52
00:02:52.942 --> 00:02:56.925
and kind of, get a feel for both of these
to figure out which one works better in

53
00:02:56.925 --> 00:03:00.634
different situations and
sometimes it's a personal choice, right.

54
00:03:00.634 --> 00:03:02.214
Which one are you more comfortable with,
right?

55
00:03:02.214 --> 00:03:06.294
There's a certain beauty to having
all of the state of your application

56
00:03:06.294 --> 00:03:09.966
in one serializable object that
you can store in local storage or

57
00:03:09.966 --> 00:03:12.964
send back to the server but
there are costs, right.

58
00:03:12.964 --> 00:03:17.267
Not just performance costs but complexity
cost, right, indirection cost that you

59
00:03:17.267 --> 00:03:21.160
have to think about and deal with so
we're gonna take a look at both of those.

60
00:03:21.160 --> 00:03:25.670
So as we look at different
components over the next day or two,

61
00:03:25.670 --> 00:03:31.249
as we try different approaches, I want
you to ask yourself a few questions.

62
00:03:31.249 --> 00:03:34.094
Does an input field need the same kind
of state management as your model

63
00:03:34.094 --> 00:03:34.730
data, right?

64
00:03:34.730 --> 00:03:36.616
Again, we're gonna try it both ways.

65
00:03:36.616 --> 00:03:41.581
It's kind of up to you to figure out,
in the application that you work on a day

66
00:03:41.581 --> 00:03:46.405
to day basis or is your general life
philosophy, how you feel about this.

67
00:03:46.405 --> 00:03:50.774
I personally have gone back and
forth six times on this topic, right.

68
00:03:50.774 --> 00:03:53.878
Put everything in the Redux Store,
right, and then it's all in one place.

69
00:03:53.878 --> 00:03:58.680
Versus do I really need to fire
an action to a reducer to change

70
00:03:58.680 --> 00:04:03.307
the store because they typed
something in a form, right.

71
00:04:03.307 --> 00:04:07.729
I've gone back and
forth about this I don't now if there's

72
00:04:07.729 --> 00:04:12.064
a always do this answer,
right, even overtime, right,

73
00:04:12.064 --> 00:04:17.301
your thoughts and, I think a lot of
this is still in evolving art form.

74
00:04:17.301 --> 00:04:21.738
So think about input fields, formed
validation, storing it all in one place,

75
00:04:21.738 --> 00:04:25.796
versus compartmentalizing your data
across multiple stores, right?

76
00:04:25.796 --> 00:04:28.888
There are advantages and
disadvantages to both, right?

77
00:04:28.888 --> 00:04:32.582
And what our job over the next day or two
is to explore those differences, right?

78
00:04:32.582 --> 00:04:35.363
To understand what are the trade-offs,
and what, for

79
00:04:35.363 --> 00:04:38.512
the given thing that I'm trying to solve,
is a better choice.

80
00:04:38.512 --> 00:04:43.252
Because spoiler alert there
is not a silver bullet.

81
00:04:43.252 --> 00:04:46.368
We're gonna see, kind of,
through out this and

82
00:04:46.368 --> 00:04:51.613
towards the end that even people in the
community, I won't name it at this point,

83
00:04:51.613 --> 00:04:56.422
but you had it like you would associate
them with given library or project.

84
00:04:56.422 --> 00:04:58.874
It's not always clear that
they've even bought into it.

85
00:04:58.874 --> 00:05:02.652
There's always one way to do things,
right.

86
00:05:02.652 --> 00:05:06.947
So it's interesting that I don't know
we're in a position to do that as well, so

87
00:05:06.947 --> 00:05:10.545
part of our job is to explore this,
talk about this, figure it out,

88
00:05:10.545 --> 00:05:14.290
weigh the trade offs and ultimately
shrug and be slightly undecided.

89
00:05:14.290 --> 00:05:18.983
Because like most of the community
right now is undecided as well and

90
00:05:18.983 --> 00:05:24.021
I like to think I'm smarter than everyone,
that's probably not true.

91
00:05:24.021 --> 00:05:25.195
My wife would agree with that.

