WEBVTT

1
00:00:02.536 --> 00:00:05.355
&gt;&gt; Steve Kinney: And
we wanna round back to that comment that

2
00:00:05.355 --> 00:00:09.349
I said in the Jetsetter application
that we made an action for

3
00:00:09.349 --> 00:00:11.845
updating that new item input field.

4
00:00:11.845 --> 00:00:14.980
And it does raise a question of what
goes in redux state versus what goes in

5
00:00:14.980 --> 00:00:15.770
react state.

6
00:00:17.140 --> 00:00:22.110
And there's a really great
Medium article by Dan Amiroff,

7
00:00:22.110 --> 00:00:26.270
the creator of Redux,
called You Might Not Need Redux.

8
00:00:26.270 --> 00:00:28.270
Right, and we've talked about this before,

9
00:00:28.270 --> 00:00:32.470
there are a lot of benefits from being
able to kind of side load state into

10
00:00:32.470 --> 00:00:34.790
components without having to deal
with the component hierarchy.

11
00:00:34.790 --> 00:00:36.150
But there are trade offs.

12
00:00:36.150 --> 00:00:40.620
And, depending on your application,
that cost benefit analysis is different.

13
00:00:40.620 --> 00:00:44.410
And you don't necessarily need to
use one approach everywhere, right?

14
00:00:44.410 --> 00:00:49.210
With different kinds of state you
might want to different approaches and

15
00:00:49.210 --> 00:00:51.620
you can mix and match them, right?

16
00:00:51.620 --> 00:00:57.110
And so
this is just bigger to make a point.

17
00:00:57.110 --> 00:01:00.180
So we ask ourselves the question of
should we put stuff in the Redux store?

18
00:01:00.180 --> 00:01:02.850
And the answer, like most things,
is that it depends.

19
00:01:02.850 --> 00:01:06.260
It's a trade off and
what is a big trade off is indirection.

20
00:01:06.260 --> 00:01:09.120
If you think about the new item component,

21
00:01:09.120 --> 00:01:12.784
when we first created it,
when we built Jetsetter,

22
00:01:12.784 --> 00:01:16.580
which basic state, everything that we
needed was effectively in this component.

23
00:01:16.580 --> 00:01:20.000
I mean all it needed was what to
do when the submit button was hit.

24
00:01:20.000 --> 00:01:22.130
Should we break it out into Redux?

25
00:01:22.130 --> 00:01:25.110
Well, we'll have the new item
presentational component,

26
00:01:25.110 --> 00:01:28.810
then we'll wrap that map states
[INAUDIBLE] dispatch the props, and

27
00:01:28.810 --> 00:01:31.050
that'll be in the new item container file.

28
00:01:31.050 --> 00:01:34.860
The actions will live in the new
item actions, and the reducer for

29
00:01:34.860 --> 00:01:36.960
that will be in the items reducer, right?

30
00:01:36.960 --> 00:01:39.820
Or the new items text reducer,
something along those lines, right?

31
00:01:39.820 --> 00:01:41.080
And so yes, we've broken it out.

32
00:01:41.080 --> 00:01:46.440
Now, we can side load the state and do
effectively one component [LAUGH] right?

33
00:01:46.440 --> 00:01:50.620
So you have to make the choice if this
is a good trade off for you, right?

34
00:01:50.620 --> 00:01:53.530
Cuz at the end of the day, while
this.setState() does have limitations that

35
00:01:53.530 --> 00:01:58.796
we felt very early in this course,
it also has some advantages, right?

36
00:01:58.796 --> 00:02:03.140
It is [LAUGH] effectively
simpler to reason about and

37
00:02:03.140 --> 00:02:06.410
you get to mix and match these
approaches based on the kind of state.

38
00:02:06.410 --> 00:02:08.520
When we think about state is
there’s only one kind of state.

39
00:02:08.520 --> 00:02:09.803
We end up making poor choices.

40
00:02:09.803 --> 00:02:12.953
We’re better off thinking about what
are the different kinds of state in my

41
00:02:12.953 --> 00:02:16.200
application and how do I want to
manage those different kinds of state?

42
00:02:16.200 --> 00:02:18.040
You can manage them differently
depending on what they are.

43
00:02:19.340 --> 00:02:22.585
So, again, in this case the new item
input, we're doing it just to show and

44
00:02:22.585 --> 00:02:25.440
to kind of demonstrate, but
I'd probably keep this in set state.

