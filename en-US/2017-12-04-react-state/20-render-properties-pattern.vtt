WEBVTT

1
00:00:02.393 --> 00:00:02.901
&gt;&gt; Steve Kinney: Awesome, so

2
00:00:02.901 --> 00:00:05.542
we're going to look at one-third
pattern in the lightning round.

3
00:00:11.024 --> 00:00:12.550
&gt;&gt; Steve Kinney: Which
is render properties.

4
00:00:13.780 --> 00:00:17.155
Render properties is just yet
another pattern for

5
00:00:17.155 --> 00:00:21.590
separating out your state from
your presentational component.

6
00:00:21.590 --> 00:00:26.840
And what makes this really cool is that
it manages to circumvent the problem

7
00:00:26.840 --> 00:00:30.860
that we saw before with container
components sometimes being a black box.

8
00:00:30.860 --> 00:00:34.620
Like you just put pizza container,
current user container.

9
00:00:34.620 --> 00:00:36.220
Tweets container, and

10
00:00:36.220 --> 00:00:39.400
where that actual code is not very
clear when you stare at that file.

11
00:00:39.400 --> 00:00:41.280
You'd have to go to
another file to see it.

12
00:00:41.280 --> 00:00:42.289
The render properties

13
00:00:43.750 --> 00:00:48.740
pattern allows you to see very clearly
what the actual hierarchy is here.

14
00:00:48.740 --> 00:00:54.000
So it gives you the advantages
of the container pattern and

15
00:00:54.000 --> 00:00:55.230
arguably the one you'll use more.

16
00:00:55.230 --> 00:00:57.610
Which is a higher order component pattern,
right?

17
00:00:57.610 --> 00:00:59.840
But it gives you the ability to
see very clearly what's going on.

18
00:01:02.660 --> 00:01:08.450
So here we have the with count
renders property component.

19
00:01:08.450 --> 00:01:11.010
Let's talk about what's going on here.

20
00:01:11.010 --> 00:01:13.470
It's got the same state
that we've seen before.

21
00:01:13.470 --> 00:01:19.830
But you can see that this component
takes a property called render,

22
00:01:19.830 --> 00:01:23.120
which is going to be a function,
right, and it calls that function.

23
00:01:24.330 --> 00:01:28.040
So what does that look like
on the other side to use it?

24
00:01:28.040 --> 00:01:30.600
You'd say WithCount, and
you'd have a property called render.

25
00:01:30.600 --> 00:01:35.030
And you would pass it a function where
it would pass in all of the props.

26
00:01:35.030 --> 00:01:39.230
So it's not what we're used to seeing
in a react component hierarchy, but

27
00:01:39.230 --> 00:01:41.270
when we look at this source code.

28
00:01:41.270 --> 00:01:47.010
It is getting all of the state
from the with counter component.

29
00:01:47.010 --> 00:01:50.720
But, at the same time it is very clear
that hierarchy without having to name

30
00:01:50.720 --> 00:01:53.160
stuff and
look at it in the dev tools right?

31
00:01:53.160 --> 00:01:56.030
In the previous example when we
made with pizza calculations we had

32
00:01:56.030 --> 00:01:56.730
the pizza container.

33
00:01:56.730 --> 00:02:00.020
If we booked in that source code, it was
just pizza container when we used it.

34
00:02:00.020 --> 00:02:02.150
Right, we'd have to go
spelunking to see what it was.

35
00:02:02.150 --> 00:02:04.580
In this case, when we use this component,

36
00:02:04.580 --> 00:02:07.880
it becomes really clear
what the hierarchy is.

37
00:02:07.880 --> 00:02:10.710
We have this WithCount, and
inside, there is a counter.

38
00:02:10.710 --> 00:02:12.760
And we can see that it's
getting count an increment,

39
00:02:12.760 --> 00:02:17.700
right, I'm just stuck with two this time,
because slides, from that component.

40
00:02:17.700 --> 00:02:18.935
So let's go back one slide.

41
00:02:21.560 --> 00:02:26.643
&gt;&gt; Steve Kinney: Right, it renders just
a div that I'm using solely to contain

42
00:02:26.643 --> 00:02:33.330
it cuz I have to return a single div in
this case and it does this.props.render.

43
00:02:33.330 --> 00:02:35.420
Whatever function is passed in, so

44
00:02:35.420 --> 00:02:40.300
in the same way you were able to pass
onIncrement, onDecrement, two functions.

45
00:02:40.300 --> 00:02:42.690
You can pass it, just a property
called render, which is a function.

46
00:02:42.690 --> 00:02:47.730
And it's called to receive, in this case,
this.state.count this.increment, right?

47
00:02:47.730 --> 00:02:49.550
If we did this in the pizza calculator,

48
00:02:49.550 --> 00:02:53.240
we would see that it would be all the
other ones that we wanted to pass through.

49
00:02:53.240 --> 00:02:55.208
And we would see that happen like that.

