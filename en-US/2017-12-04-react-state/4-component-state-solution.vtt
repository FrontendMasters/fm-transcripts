WEBVTT

1
00:00:02.316 --> 00:00:04.582
&gt;&gt; Steve Kinney: All right,
so we did find one issue,

2
00:00:04.582 --> 00:00:07.152
which is I had named the component wrong.

3
00:00:07.152 --> 00:00:10.386
So if you're watching this later,
I've already fixed it and pushed it up and

4
00:00:10.386 --> 00:00:11.342
everything is great.

5
00:00:11.342 --> 00:00:12.653
But if not, I just renamed this counter.

6
00:00:12.653 --> 00:00:16.278
The example will still work without that
change, which is why I didn't catch it.

7
00:00:16.278 --> 00:00:20.231
But if you were slightly thrown
off by that, I apologize.

8
00:00:20.231 --> 00:00:24.326
So inside this counter, really we just
want to get the basic state of this,

9
00:00:24.326 --> 00:00:26.675
the basic component state up and working.

10
00:00:26.675 --> 00:00:29.298
Right now it only has render method.

11
00:00:29.298 --> 00:00:33.182
So we know that we want to basically
have someone out of state and

12
00:00:33.182 --> 00:00:35.839
be able to modify that state with actions.

13
00:00:35.839 --> 00:00:37.492
We can do this a few ways.

14
00:00:37.492 --> 00:00:41.325
And I'll kind of do it a simple way and
then I'll kind of refactor it a little bit

15
00:00:41.325 --> 00:00:45.351
to show you kind of a second approach that
somebody asked me about in the chatroom.

16
00:00:45.351 --> 00:00:48.988
So the first thing we want to do is,
get some state that we want to hold on to.

17
00:00:48.988 --> 00:00:53.879
So we can give it a constructor,
&gt;&gt; Steve Kinney: And we'll call it super.

18
00:00:53.879 --> 00:00:59.159
And I can say this dot state,
I will say that

19
00:00:59.159 --> 00:01:03.873
the count we'll, start out at zero.

20
00:01:03.873 --> 00:01:07.167
All right, so now this component
has some amount of state.

21
00:01:07.167 --> 00:01:10.698
We're not using it yet, but it has it.

22
00:01:10.698 --> 00:01:13.923
So the first thing I want to do, is I want
to take this now like kind of default

23
00:01:13.923 --> 00:01:16.706
value, which is the zero, and
then replace it with that state.

24
00:01:16.706 --> 00:01:18.170
Inside the render method,

25
00:01:18.170 --> 00:01:21.927
we have access to this dot state which
allows us to go and pull that out.

26
00:01:21.927 --> 00:01:29.069
So we could say either, [SOUND].

27
00:01:29.069 --> 00:01:31.276
So state, and we can say state.count.

28
00:01:31.276 --> 00:01:34.439
I don't really like that but
we could do it.

29
00:01:34.439 --> 00:01:37.157
We can also use ES6 structuring.

30
00:01:37.157 --> 00:01:41.023
We just pull the count property
out of the state object.

31
00:01:41.023 --> 00:01:43.280
So we can begin to put that in there.

32
00:01:43.280 --> 00:01:45.608
Now I could go look at
that in the browser, but

33
00:01:45.608 --> 00:01:49.429
I'm not really gonna see a lot,
unless I go ahead and change this to 54.

34
00:01:49.429 --> 00:01:53.051
And then I should expect to go over
to my browser and see 54 in there.

35
00:01:57.970 --> 00:01:59.422
&gt;&gt; Steve Kinney: And there is 54.

36
00:01:59.422 --> 00:02:01.223
Again this is state that doesn't change.

37
00:02:01.223 --> 00:02:03.019
And what was the first
thing we said about state?

38
00:02:03.019 --> 00:02:07.223
Which is that, if it doesn't change,
it probably, shouldn't be staked.

39
00:02:07.223 --> 00:02:11.056
But,we can kind of, see going forward
that we have these three buttons.

40
00:02:11.056 --> 00:02:14.971
And, we likely aspire to change this,
right.

41
00:02:14.971 --> 00:02:15.900
So, we implement those.

42
00:02:15.900 --> 00:02:18.813
And then, we'll refactor them, real quick.

43
00:02:18.813 --> 00:02:21.324
Again, this is just, kind of,
to get out bearings.

44
00:02:21.324 --> 00:02:23.108
And, kind of, work out any sort of,

45
00:02:23.108 --> 00:02:25.596
issues along any sort of
issues along those lines.

46
00:02:25.596 --> 00:02:26.102
Let's try it out.

47
00:02:26.102 --> 00:02:30.267
So, we're probably going to want,
let's get increment working first and

48
00:02:30.267 --> 00:02:31.709
then we'll refactor it.

49
00:02:31.709 --> 00:02:34.847
And just kinda go forward rather
than writing three methods and

50
00:02:34.847 --> 00:02:35.980
refactor all of them.

51
00:02:35.980 --> 00:02:40.608
I can give it a handle increment method.

52
00:02:40.608 --> 00:02:44.813
We can also do the inline function as well
but that's gonna create a new function

53
00:02:44.813 --> 00:02:49.293
every time which is, I'm not worried about
performance of this counter right now.

54
00:02:49.293 --> 00:02:53.302
But likely, we don't necessary want to
create a new function object every single

55
00:02:53.302 --> 00:02:54.354
time we hit a render.

56
00:02:54.354 --> 00:02:58.018
It better off to have one
reference on the class object.

57
00:02:58.018 --> 00:03:04.721
So we can say handling command and
I'd say this.setState.

58
00:03:04.721 --> 00:03:06.696
We'll only take this.state and modify it.

59
00:03:06.696 --> 00:03:09.155
We'll talk about the why in a second, but

60
00:03:09.155 --> 00:03:12.960
we want to use said state instead
of modifying the state itself.

61
00:03:12.960 --> 00:03:19.432
And we'll say count equals
this.state.account plus one or

62
00:03:19.432 --> 00:03:23.047
whatever number you really like.

63
00:03:23.047 --> 00:03:25.681
Cool, this actually will blow up.

64
00:03:25.681 --> 00:03:26.570
Does anyone know why?

65
00:03:31.998 --> 00:03:36.692
&gt;&gt; Steve Kinney: If we use it right here,
&gt;&gt; Steve Kinney: Why?

66
00:03:36.692 --> 00:03:41.212
Yeah, we've gotta bind it, which we'll get
to, somebody asked me about refactoring,

67
00:03:41.212 --> 00:03:44.082
in a second, That I will explain
why I did it in that case.

68
00:03:44.082 --> 00:03:46.433
So this'll call
the handleIncrement method.

69
00:03:46.433 --> 00:03:50.281
But because it's gonna go to the event
loop, we're gonna lose track of this.

70
00:03:50.281 --> 00:03:53.070
So this is going to be
either the global object or

71
00:03:53.070 --> 00:03:56.647
undefined if we're in strict mode,
and that's not great.

72
00:03:56.647 --> 00:03:59.879
So we'll get, handleIncrement is
not a function, which is true,

73
00:03:59.879 --> 00:04:03.242
because it's not on the global object or
anything along those lines.

74
00:04:03.242 --> 00:04:08.583
So what we could do, is we say, everyone's
favorite thing to type into all of react,

75
00:04:08.583 --> 00:04:12.909
this.handleIncrement=this.handleIncrement-
.bind to this.

76
00:04:12.909 --> 00:04:16.276
Does anyone enjoy typing this?

77
00:04:16.276 --> 00:04:19.145
You feel good in the morning.

78
00:04:19.145 --> 00:04:20.270
I like it.

79
00:04:20.270 --> 00:04:21.379
I don't like to type it anymore.

80
00:04:21.379 --> 00:04:23.208
I've typed it way too
many times in my life.

81
00:04:23.208 --> 00:04:26.644
Turns out if we're using
modern versions of babble.

82
00:04:26.644 --> 00:04:30.693
We can actually write a slightly
differently syntax and get around this,

83
00:04:30.693 --> 00:04:34.491
which is, we have the transform
class properties, babble plug in.

84
00:04:34.491 --> 00:04:40.436
We can actually do this dot
handleIncrement give it an arrow function.

85
00:04:40.436 --> 00:04:42.649
That'll actually define
it on the instance and

86
00:04:42.649 --> 00:04:44.931
the arrow function will
bind it to the instance.

87
00:04:44.931 --> 00:04:48.122
So now, I don't have to do that anymore.

88
00:04:48.122 --> 00:04:50.354
&gt;&gt; Speaker 2: What stage is that?

89
00:04:50.354 --> 00:04:51.850
Is that a stage proposal or is that?

90
00:04:51.850 --> 00:04:53.985
&gt;&gt; Steve Kinney: That is stage three,
I believe.

91
00:04:53.985 --> 00:04:54.561
&gt;&gt; Speaker 2: Really?

92
00:04:54.561 --> 00:04:56.530
&gt;&gt; Steve Kinney: Yeah,
I feel like I'm trying to a,

93
00:04:56.530 --> 00:05:00.812
consider a nine stages from memory,
but I'm pretty sure it's stage three.

94
00:05:00.812 --> 00:05:03.734
I reserve the right to either A,
be corrected on that or B,

95
00:05:03.734 --> 00:05:07.450
correct myself at a future time, but
I'm pretty sure it's stage three.

96
00:05:07.450 --> 00:05:09.293
All right, so
now we can handle increments.

97
00:05:09.293 --> 00:05:11.129
Let's verify that that works.

98
00:05:14.898 --> 00:05:16.574
&gt;&gt; Steve Kinney: And we can increment it.

99
00:05:16.574 --> 00:05:20.403
We can also do something
very similar with the state.

100
00:05:20.403 --> 00:05:26.921
And we can say, [SOUND] as well.

101
00:05:26.921 --> 00:05:29.774
And this will be on the instance.

102
00:05:29.774 --> 00:05:32.348
Most of the reason I'm doing that,
for the arrow function.

103
00:05:32.348 --> 00:05:34.694
It's great to not have
to bind this every time,

104
00:05:34.694 --> 00:05:36.934
cuz I will forget over
the course of two days.

105
00:05:36.934 --> 00:05:41.402
Also with a very large font, it's nice
to not have to type extra letters so

106
00:05:41.402 --> 00:05:43.653
we can see everything on one screen.

107
00:05:43.653 --> 00:05:45.561
Cool, so we can handle increment.

108
00:05:45.561 --> 00:05:46.909
We have some default state.

109
00:05:46.909 --> 00:05:48.783
Let's just verify that
everything works again.

110
00:05:54.000 --> 00:05:55.569
&gt;&gt; Steve Kinney: Cool, I can increment.

111
00:05:55.569 --> 00:06:01.191
Decrementing is not that different,

112
00:06:01.191 --> 00:06:08.395
[SOUND] handleDecrement
will just subtract one,

113
00:06:08.395 --> 00:06:13.497
and reset will set it back to zero.

114
00:06:13.497 --> 00:06:17.315
[SOUND] And then we'll just,

115
00:06:24.956 --> 00:06:28.001
&gt;&gt; Steve Kinney: handleDecrement and

116
00:06:28.001 --> 00:06:30.203
this.reset.

117
00:06:30.203 --> 00:06:33.713
And with that, we've implemented
the very simple counter and react,

118
00:06:33.713 --> 00:06:34.950
nothing super special.

119
00:06:34.950 --> 00:06:38.941
Some new syntax which is basically,
we use this one example so

120
00:06:38.941 --> 00:06:40.640
I could show it and use it.

121
00:06:40.640 --> 00:06:43.532
And we know that we've got
a basic working setup.

122
00:06:43.532 --> 00:06:48.036
Great, let's move on to the next thing
cuz we're gonna play with this a little

123
00:06:48.036 --> 00:06:48.661
bit more.

124
00:06:48.661 --> 00:06:50.277
But first, we're gonna play some games.

