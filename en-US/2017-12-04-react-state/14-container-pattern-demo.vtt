WEBVTT

1
00:00:06.416 --> 00:00:10.370
&gt;&gt; Steve Kinney: So here is the counter
that I made in the previous example.

2
00:00:10.370 --> 00:00:16.318
And you can see that it both,
&gt;&gt; Steve Kinney: Handles its own state and

3
00:00:16.318 --> 00:00:18.530
also handles the presentation, right.

4
00:00:18.530 --> 00:00:21.206
And so with the container pattern,
our sole job is for

5
00:00:21.206 --> 00:00:22.824
separating up the two of those.

6
00:00:22.824 --> 00:00:26.890
Right, which is not doing the same
thing in one component, right?

7
00:00:26.890 --> 00:00:28.260
Cuz then we could have
the stateful version,

8
00:00:28.260 --> 00:00:31.570
we could have the presentational one,
and we can use them together.

9
00:00:31.570 --> 00:00:34.440
And this, we'll see when we get to some of
the other patterns, is useful if you have

10
00:00:34.440 --> 00:00:39.630
two components that look very different,
but take the same state, right?

11
00:00:39.630 --> 00:00:44.890
Like the user profile
might take the user but

12
00:00:44.890 --> 00:00:46.780
also the notifications
might need the user.

13
00:00:46.780 --> 00:00:50.730
Right, we can kind of begin to use
these containers in multiple places.

14
00:00:50.730 --> 00:00:56.790
So, implementing this is effectively just
a little bit of cut and pasting, right.

15
00:00:56.790 --> 00:01:02.380
First thing I'm gonna do is I'm actually
gonna take most of this component and

16
00:01:02.380 --> 00:01:03.540
copy it all into the container.

17
00:01:03.540 --> 00:01:07.670
Cuz most of this component is
the state management, right?

18
00:01:07.670 --> 00:01:09.580
It's setting the initial state.

19
00:01:09.580 --> 00:01:13.220
It's handling increment, handling
decrement, handling resetting, right.

20
00:01:13.220 --> 00:01:15.290
There is a little bit of mark up in here.

21
00:01:15.290 --> 00:01:17.410
So I'll take the entire thing at first.

22
00:01:17.410 --> 00:01:21.958
And I'm just gonna copy it
over to CounterContainer.js

23
00:01:21.958 --> 00:01:26.740
which was intentionally left blank,
but no longer.

24
00:01:26.740 --> 00:01:28.980
And what do we name this one?

25
00:01:28.980 --> 00:01:33.501
Counter container.

26
00:01:33.501 --> 00:01:36.461
So counter container is
going to handle a state, but

27
00:01:36.461 --> 00:01:40.376
then what are we gonna use to like
actually be the UI for this counter?

28
00:01:43.659 --> 00:01:45.370
&gt;&gt; Steve Kinney: The counter
component that we had before.

29
00:01:45.370 --> 00:01:46.238
So we'll have to bring that in.

30
00:01:55.097 --> 00:01:56.780
&gt;&gt; Steve Kinney: So bring in the counter.

31
00:01:56.780 --> 00:02:01.682
We have all the state, and
then effectively what we're

32
00:02:01.682 --> 00:02:05.566
going to do is,
&gt;&gt; Steve Kinney: We'll give it

33
00:02:05.566 --> 00:02:06.099
the counter.

34
00:02:09.540 --> 00:02:16.947
&gt;&gt; Steve Kinney: And
we'll say onIncrement is this.onIncrement.

35
00:02:16.947 --> 00:02:20.049
onDecrement, wanna take a lucky guess?

36
00:02:23.324 --> 00:02:24.772
&gt;&gt; Steve Kinney: this.onDecrement and

37
00:02:24.772 --> 00:02:29.108
on reset,
&gt;&gt; Steve Kinney: Unfortunately,

38
00:02:29.108 --> 00:02:31.370
in the other example I just decided
to call this one reset, and

39
00:02:31.370 --> 00:02:32.995
I'm gonna have to live with that decision.

40
00:02:32.995 --> 00:02:36.688
Otherwise do needless refactoring in
a real life coding situation which will

41
00:02:36.688 --> 00:02:37.951
probably never work out.

42
00:02:37.951 --> 00:02:41.961
And we'll also say that the count is
equal to the account that we pull from

43
00:02:41.961 --> 00:02:43.280
the state.

44
00:02:43.280 --> 00:02:46.200
So now the actual counter is not
gonna be in charge of managing

45
00:02:46.200 --> 00:02:47.450
any of its own state.

46
00:02:47.450 --> 00:02:50.390
It's simply going to be a vessel for
the state from the container.

47
00:02:51.620 --> 00:02:53.318
So we'd get rid of all of this.

48
00:02:56.316 --> 00:02:57.621
&gt;&gt; Steve Kinney: And we'll hit Save.

49
00:02:57.621 --> 00:03:01.092
And then going back to counter.js,
I don't need to managing that state,

50
00:03:01.092 --> 00:03:03.420
this is going to be
a component that just renders.

51
00:03:06.516 --> 00:03:09.865
And counter is not gonna come from state
anymore, where is it gonna come from?

52
00:03:09.865 --> 00:03:11.870
&gt;&gt; Speaker 2: [INAUDIBLE]
&gt;&gt; Steve Kinney: Props, right?

53
00:03:11.870 --> 00:03:14.440
Cuz everything that's needs
is being passed in to it.

54
00:03:14.440 --> 00:03:19.276
It will also is gonna get onIncrement,

55
00:03:19.276 --> 00:03:23.964
onDecrement, and

56
00:03:23.964 --> 00:03:27.960
onReset, which I did name
correctly in this case.

57
00:03:29.110 --> 00:03:32.150
We'll see.
[LAUGH] I felt confident that I did until

58
00:03:32.150 --> 00:03:34.290
you asked me, did you.

59
00:03:35.740 --> 00:03:38.019
Yeah, I did call in onReset.

60
00:03:38.019 --> 00:03:39.050
I win.

61
00:03:39.050 --> 00:03:40.559
Cool.

62
00:03:46.535 --> 00:03:48.771
&gt;&gt; Steve Kinney: And we'll pass that in.

63
00:03:48.771 --> 00:03:50.810
So this component receives
everything it needs.

64
00:03:50.810 --> 00:03:55.020
If you needed to test this, you could pass
in two mocks, or three mocks in this case.

65
00:03:55.020 --> 00:03:58.150
[INAUDIBLE] make sure the right one got
called, you could pass in some state,

66
00:03:58.150 --> 00:04:01.530
you can actually get a working version
of this component without having to

67
00:04:01.530 --> 00:04:04.756
first invent the universe in order
to have all the state that you need.

68
00:04:04.756 --> 00:04:08.720
So this makes testing, and again this is
a very simple example but imagine this was

69
00:04:08.720 --> 00:04:14.320
deep in your component tree and that state
was coming from some place far away.

70
00:04:14.320 --> 00:04:17.810
In order to test that component you'd
have to recreate that entire chain,

71
00:04:17.810 --> 00:04:19.300
which you know what that means?

72
00:04:19.300 --> 00:04:21.744
You're not going to be test
that component, right?

73
00:04:21.744 --> 00:04:24.570
[LAUGH] Because when testing is hard,
we don't do it.

74
00:04:25.660 --> 00:04:27.080
Finally, we have one other change to make.

75
00:04:28.300 --> 00:04:31.250
The application will now
grab the counter container.

76
00:04:31.250 --> 00:04:36.695
So the counter.

77
00:04:36.695 --> 00:04:37.498
And now it is time for

78
00:04:37.498 --> 00:04:40.341
the live coding reveal to make sure
I didn't make a mistake somewhere.

79
00:04:44.338 --> 00:04:44.850
&gt;&gt; Steve Kinney: And I did?

80
00:04:46.430 --> 00:04:46.930
Let's see.

81
00:04:48.260 --> 00:04:50.089
So we have the counter container,

82
00:04:50.089 --> 00:04:55.567
make sure all my files have saved,
&gt;&gt; Steve Kinney: These

83
00:04:55.567 --> 00:04:57.570
are getting passed in as props.

84
00:05:09.416 --> 00:05:10.973
&gt;&gt; Steve Kinney: Slightly embarrassing.

85
00:05:14.176 --> 00:05:16.814
&gt;&gt; Speaker 3: [INAUDIBLE] state of count
&gt;&gt; Steve Kinney: What's that?

86
00:05:16.814 --> 00:05:20.026
&gt;&gt; Speaker 3: [INAUDIBLE]
&gt;&gt; Steve Kinney: Yeah.

87
00:05:22.767 --> 00:05:23.267
&gt;&gt; Steve Kinney: Let see.

88
00:05:28.707 --> 00:05:29.809
&gt;&gt; Steve Kinney: So bring in the counter.

89
00:05:33.095 --> 00:05:34.653
&gt;&gt; Steve Kinney: And
what I'll do is I will,

90
00:05:45.838 --> 00:05:46.591
&gt;&gt; Steve Kinney: Chrome sometimes,

91
00:05:46.591 --> 00:05:48.371
if it's undefined, doesn't show anything.

92
00:05:48.371 --> 00:05:50.959
All right, so
I can see that this is undefined.

93
00:05:50.959 --> 00:05:53.982
All right, that's questionable, right?

94
00:05:53.982 --> 00:05:55.448
So why?

95
00:05:57.310 --> 00:05:58.285
&gt;&gt; Steve Kinney: Does anyone see why?

96
00:05:58.285 --> 00:06:01.216
&gt;&gt; Group: [INAUDIBLE]
&gt;&gt; Steve Kinney: I called them handle

97
00:06:01.216 --> 00:06:04.379
increment handle decrement, and
I typed onIncrement and onDecrement and so

98
00:06:04.379 --> 00:06:06.460
those are definitely undefined.

99
00:06:06.460 --> 00:06:07.170
So that's an easy fix.

100
00:06:16.441 --> 00:06:19.675
&gt;&gt; Steve Kinney: The funny part is, I made
that comment about reset and that I didn't

101
00:06:19.675 --> 00:06:22.800
use onReset, now realizing that I also-
&gt;&gt; Speaker 5: onIncrement,

102
00:06:22.800 --> 00:06:29.450
instead of handle increment instead of
&gt;&gt; Steve Kinney: Very cool.

103
00:06:34.473 --> 00:06:37.290
&gt;&gt; Steve Kinney: And now it works as
expected cuz I named the methods the right

104
00:06:37.290 --> 00:06:38.144
thing this time.

