WEBVTT

1
00:00:01.401 --> 00:00:05.699
&gt;&gt; Steve Kinney: Earlier we took a look
at that video and we had that little like

2
00:00:05.699 --> 00:00:10.780
random music generator with random stats,
and that's asynchronism.

3
00:00:10.780 --> 00:00:15.193
It's pulling from an API and
we hit the request new friend button and

4
00:00:15.193 --> 00:00:20.476
that theoretically should trigger,
let's say, a request new friend action.

5
00:00:20.476 --> 00:00:25.367
Then we would want to setup
a saga that's going to

6
00:00:25.367 --> 00:00:29.554
receive those, trigger the HX request.

7
00:00:29.554 --> 00:00:33.803
We have a helper called
API.request new friend.

8
00:00:33.803 --> 00:00:38.337
Fire that off very similar to what we just
did in without all the other thunk stuff

9
00:00:38.337 --> 00:00:38.953
in place.

10
00:00:38.953 --> 00:00:43.157
And then when that happens,
we want to add the user to the page.

11
00:00:43.157 --> 00:00:44.134
So effectively,

12
00:00:44.134 --> 00:00:47.720
the flow that we wanna implement
here is the user clicks a button.

13
00:00:47.720 --> 00:00:52.565
We dispatch a request action, that
triggers the server to make the API call.

14
00:00:52.565 --> 00:00:56.395
And then from there,
when we hear back from the server,

15
00:00:56.395 --> 00:00:59.084
we can dispatch the action to the data to

16
00:00:59.084 --> 00:01:03.666
update the user interface with
the new With a new implementation.

