WEBVTT

1
00:00:05.070 --> 00:00:10.820
&gt;&gt; Steve Kinney: Okay, so, the lab coat
and branch that I had just pushed up,

2
00:00:10.820 --> 00:00:14.170
we called it with pizza calculations but
it was still the container pattern.

3
00:00:14.170 --> 00:00:16.046
Again, the real power of this kind,

4
00:00:16.046 --> 00:00:18.960
this is one of my absolute
favorite patterns with React.

5
00:00:18.960 --> 00:00:23.820
Composing new components by taking
some stable component that may be as

6
00:00:23.820 --> 00:00:26.210
fetching stuff from the API.

7
00:00:26.210 --> 00:00:28.330
You can have it with local storage.

8
00:00:28.330 --> 00:00:32.061
If there is any kind of state that
you wanna use multiple places,

9
00:00:32.061 --> 00:00:34.490
I will almost always create one of these.

10
00:00:34.490 --> 00:00:38.763
This is probably the most common
pattern I use when I am pulling data

11
00:00:38.763 --> 00:00:43.741
from remote sources or even using browser
APIs and I wanna pull that stuff in.

12
00:00:43.741 --> 00:00:48.559
I will make one of these components
cuz I can keep composing bigger, and

13
00:00:48.559 --> 00:00:52.830
bigger chains of these with more,
and more features, right?

14
00:00:52.830 --> 00:00:57.422
So, I can bring something with local
storage, and the current user so on, and

15
00:00:57.422 --> 00:00:58.056
so forth.

16
00:00:58.056 --> 00:01:00.392
So, we called this one with
withPizzaCalculations, but

17
00:01:00.392 --> 00:01:01.590
it doesn't do the thing yet.

18
00:01:01.590 --> 00:01:07.355
What we really wanna do is turn
the container component into a single use.

19
00:01:07.355 --> 00:01:07.860
Hey!

20
00:01:07.860 --> 00:01:11.093
It just happens to wrap this one
presentation component into a factory

21
00:01:11.093 --> 00:01:13.960
that can take any component and
wrap it in this state, right?

22
00:01:13.960 --> 00:01:17.770
And this is, again,
where this becomes incredibly powerful.

23
00:01:17.770 --> 00:01:20.542
So, we do need to do some changes and
there are not a lot of changes, right?

24
00:01:20.542 --> 00:01:22.600
This is why we're kind
of building up to this.

25
00:01:23.890 --> 00:01:25.570
We do know that it is
going to be a function.

26
00:01:28.770 --> 00:01:30.020
And what does it take as the argument?

27
00:01:33.300 --> 00:01:35.800
The wrapped component,
the presentational component,

28
00:01:35.800 --> 00:01:39.360
I have historically always
called the wrapped component.

29
00:01:41.770 --> 00:01:43.451
This will be the argument
that is passed in.

30
00:01:43.451 --> 00:01:48.418
So in this case if we scroll down again.
&gt;&gt; Steve Kinney: It's going to be

31
00:01:48.418 --> 00:01:51.194
this component that we pass
in will be now known as

32
00:01:51.194 --> 00:01:56.565
WrappedComponent.
&gt;&gt; Steve Kinney: And

33
00:01:56.565 --> 00:02:02.120
then we're going to return.
&gt;&gt; Steve Kinney: So we can actually,

34
00:02:02.120 --> 00:02:07.992
just to make this a little clearer, I'm
gonna actually say return class extends,

35
00:02:11.469 --> 00:02:14.480
&gt;&gt; Steve Kinney: Component, right?

36
00:02:14.480 --> 00:02:16.360
And why does this work?

37
00:02:16.360 --> 00:02:20.700
It turns out that classes in JavaScript
are just syntactic sugar over

38
00:02:22.620 --> 00:02:24.490
functions, right?

39
00:02:24.490 --> 00:02:26.524
So, in the same way that I can have a,

40
00:02:26.524 --> 00:02:30.074
remember when we used to use
functions back in the old ES5 days,

41
00:02:30.074 --> 00:02:34.645
with a capital letter, and we used it as
a constructor function and we called new.

42
00:02:34.645 --> 00:02:37.670
tThis is the same thing that we do with
the class, it's just a function, so

43
00:02:37.670 --> 00:02:39.784
in the same way that I can
have anonymous functions,

44
00:02:39.784 --> 00:02:43.050
I can have anonymous causes
cuz it's just synthetic sugar.

45
00:02:43.050 --> 00:02:47.274
What I'm gonna do in this case is I'm just
gonna grab the entire body of this cuz

46
00:02:47.274 --> 00:02:54.380
this is effectively what I want.
&gt;&gt; Steve Kinney: And move it inside here.

47
00:02:55.550 --> 00:03:00.260
And instead of always returning a pizza
calculator, what am I gonna return?

48
00:03:02.300 --> 00:03:03.790
The component that was passed in, right?

49
00:03:03.790 --> 00:03:07.480
So now I have the ability to
create as many of these as I want.

50
00:03:09.630 --> 00:03:15.440
Cool, let's just kinda make sure
that I didn't miss anything.

51
00:03:15.440 --> 00:03:20.705
I most likely left this here, yep.
&gt;&gt; Steve Kinney: And

52
00:03:20.705 --> 00:03:23.714
so now if we wanna create this pizza
container that will eventually,

53
00:03:26.719 --> 00:03:28.049
&gt;&gt; Steve Kinney: Be all the pizza,

54
00:03:28.049 --> 00:03:33.196
calculator, stateful,
guts with the presentational component,

55
00:03:33.196 --> 00:03:37.454
we simply compose it by
combining the stateful component

56
00:03:37.454 --> 00:03:40.310
with the presentational component.

57
00:03:40.310 --> 00:03:43.751
And again, having these two things
separate and being able to mix and

58
00:03:43.751 --> 00:03:47.560
match them as much as I want is possibly
one of my favorite patterns in React.

59
00:03:47.560 --> 00:03:55.994
And I keep repeating that cuz I mean it.
&gt;&gt; Steve Kinney: So we'll say that.

60
00:03:55.994 --> 00:03:56.633
We'll go back over.

