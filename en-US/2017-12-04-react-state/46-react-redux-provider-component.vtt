WEBVTT

1
00:00:03.410 --> 00:00:06.891
&gt;&gt; Steve Kinney: So
the black magic here is Redux has so

2
00:00:06.891 --> 00:00:11.754
far in our experience been very explicit,
right?

3
00:00:11.754 --> 00:00:13.680
When we wired everything
up in that js bin,

4
00:00:13.680 --> 00:00:16.920
we saw how the sausage was made, right?

5
00:00:16.920 --> 00:00:19.590
With map state to props,
we understand those two parts there.

6
00:00:19.590 --> 00:00:21.180
But where is dispatch coming from?

7
00:00:22.670 --> 00:00:24.620
Right, it's coming from the store.

8
00:00:24.620 --> 00:00:29.282
At what point did you pass the current
store into anything while we

9
00:00:29.282 --> 00:00:30.563
were doing this?

10
00:00:30.563 --> 00:00:32.720
Did anyone see us pass the store?

11
00:00:32.720 --> 00:00:37.700
We created the store,
we only passed it one place.

12
00:00:37.700 --> 00:00:38.350
Does anyone remember?

13
00:00:40.390 --> 00:00:41.071
The provider.

14
00:00:41.071 --> 00:00:43.390
And then we never talked
about the provider again.

15
00:00:43.390 --> 00:00:45.310
I was like, yeah, yeah,
pass the store to the provider.

16
00:00:46.870 --> 00:00:50.805
And then, I just got hand wavy and
moved on, and yet somehow,

17
00:00:50.805 --> 00:00:53.920
connect knows about it,
which is very strange.

18
00:00:55.040 --> 00:01:00.480
That's again, kind of like the most
amount of black magic in React Redux,

19
00:01:00.480 --> 00:01:06.680
which is the provider is a component that
sets the context of all of its children.

20
00:01:06.680 --> 00:01:08.708
Which raises the next question, right?

21
00:01:08.708 --> 00:01:09.610
What is context?

22
00:01:09.610 --> 00:01:13.284
Well, context is the third
never talked about child.

23
00:01:13.284 --> 00:01:18.970
We have this.props, we have this.state,
we also have this.context.

24
00:01:18.970 --> 00:01:22.550
And you might be like,
I have never used this.context.

25
00:01:22.550 --> 00:01:25.466
Good, cuz you're not supposed
to use this.context.

26
00:01:25.466 --> 00:01:29.945
Even in the React documentation they're
very clear the majority of applications do

27
00:01:29.945 --> 00:01:31.089
not need to use this.

28
00:01:31.089 --> 00:01:34.290
And I think somewhere,
I don't know if it's in this screenshot,

29
00:01:34.290 --> 00:01:38.020
they're saying if you aren't experienced,
you actually, don't use it.

30
00:01:38.020 --> 00:01:39.444
At one point I think it says in the docs.

31
00:01:39.444 --> 00:01:40.820
Yeah, it says it in that second paragraph.

32
00:01:42.150 --> 00:01:46.150
Basically, this is four
things like Redox and MobX.

33
00:01:46.150 --> 00:01:49.691
Right, it has four libraries to use and
this is generally speaking,

34
00:01:49.691 --> 00:01:53.310
I believe this is still true,
a not necessarily stable API.

35
00:01:53.310 --> 00:01:55.560
So it can change and it will break.

36
00:01:55.560 --> 00:01:57.161
So you're not meant to use it.

37
00:01:57.161 --> 00:02:02.080
It is meant for
libraries like React Redux or MobX React.

38
00:02:02.080 --> 00:02:03.540
That's right, it's swapped in that one.

39
00:02:03.540 --> 00:02:06.607
That's just to keep me on my toes,
I think, as I talk about this stuff.

40
00:02:06.607 --> 00:02:11.037
It's for them to use in order to create
this functionality where all the child

41
00:02:11.037 --> 00:02:13.230
components can know about the store.

42
00:02:13.230 --> 00:02:17.823
It's basically allowing us to side load
the store into every child component.

43
00:02:17.823 --> 00:02:20.022
And it's definitely squirrely to use.

44
00:02:20.022 --> 00:02:23.850
I will talk about some of the nuances,
but then while I talk about it,

45
00:02:23.850 --> 00:02:26.505
remember that you're
not supposed to use it.

46
00:02:26.505 --> 00:02:30.060
[LAUGH] Like,
you probably shouldn't use it.

47
00:02:30.060 --> 00:02:34.150
So this is mostly like intellectual
curiosity in this case.

48
00:02:34.150 --> 00:02:36.290
So the provider, this is, again,

49
00:02:36.290 --> 00:02:39.610
an oversimplification of
the provider component.

50
00:02:39.610 --> 00:02:44.619
But, pull open the source code for React
Redux, I'm not simplifying it too much.

51
00:02:44.619 --> 00:02:48.728
They tend to pull stuff out into other
files and stuff along those lines.

52
00:02:48.728 --> 00:02:53.560
I've boiled it down to fit on one slide,
but there's not a lot happening here.

53
00:02:53.560 --> 00:02:56.500
So the provider extends component.

54
00:02:56.500 --> 00:02:59.300
And it has this method that's built
into React called getChildContext,

55
00:02:59.300 --> 00:03:06.180
which will take the store that we pass in
as a prop and return it as context.store.

56
00:03:06.180 --> 00:03:12.280
And the provider then passes its
getChildContext to all of its children.

57
00:03:12.280 --> 00:03:16.700
So all Provider does is take
that application as a child and

58
00:03:16.700 --> 00:03:23.090
returns it as its render, but all of
its children now get its child context.

59
00:03:23.090 --> 00:03:27.040
It won't work unless you define
this childContextTypes PropTypes,

60
00:03:27.040 --> 00:03:28.500
so you need that.

61
00:03:28.500 --> 00:03:32.110
It's not like normal PropTypes where
you just get kind of chided in

62
00:03:32.110 --> 00:03:35.160
the developer tools if you don't use them.

63
00:03:35.160 --> 00:03:38.405
This you need, and the reason I kept
this in here is if you look at the store

64
00:03:38.405 --> 00:03:42.520
PropTypes, you can see that it's
three functions I was looking for.

65
00:03:42.520 --> 00:03:44.140
This is the React Redux one.

66
00:03:44.140 --> 00:03:45.702
This would be different for MobX.

67
00:03:45.702 --> 00:03:50.214
But you can see it's looking for the
subscribe, dispatch, and getState, right?

68
00:03:50.214 --> 00:03:55.288
So it's expecting a store and it's
gonna pass literally the store to every

69
00:03:55.288 --> 00:04:00.617
single child component under
this.context.store and connect knows that.

70
00:04:00.617 --> 00:04:04.104
And that's where it's getting that
dispatch from, that it passes in.

71
00:04:04.104 --> 00:04:12.320
This is the blackest of the magic
that React Redux uses in this case.

72
00:04:12.320 --> 00:04:16.410
So in this case, all the child
components would need this as well.

73
00:04:16.410 --> 00:04:20.010
They need to have this contextTypes
property on them as well,

74
00:04:20.010 --> 00:04:21.290
which is why we use connect.

75
00:04:21.290 --> 00:04:24.540
And we don't try to do
this by hand normally.

76
00:04:24.540 --> 00:04:27.350
It's basically, connect is taking
care of all of this for us.

77
00:04:27.350 --> 00:04:30.140
And it's wiring this together so
that we don't have to worry about it.

78
00:04:30.140 --> 00:04:33.551
Cuz when something is terrible, you should
probably abstract it Into a library and

79
00:04:33.551 --> 00:04:35.031
never do it again.

80
00:04:35.031 --> 00:04:39.075
So luckily, other people have been
nice enough to do that for us, and

81
00:04:39.075 --> 00:04:41.817
we get to just leverage
the advantages there.

