WEBVTT

1
00:00:00.480 --> 00:00:04.170
All right, so,
we talked about choreography.

2
00:00:04.170 --> 00:00:06.467
Now we're gonna talk about states.

3
00:00:06.467 --> 00:00:11.276
Because, especially when
working with web applications,

4
00:00:11.276 --> 00:00:14.491
you are dealing with different states.

5
00:00:14.491 --> 00:00:19.312
And even if you're not, like if you're
just styling an input, or a button,

6
00:00:19.312 --> 00:00:22.962
there's different states that
those elements can be in.

7
00:00:22.962 --> 00:00:27.536
And so, it's important to define,
just the different styles and

8
00:00:27.536 --> 00:00:31.713
animations that you use, for
each of the different states.

9
00:00:31.713 --> 00:00:36.310
So, let's actually take
a button as an example.

10
00:00:37.950 --> 00:00:41.480
So, I'm going to go back to my main file.

11
00:00:43.717 --> 00:00:45.770
And, we have a few balls here.

12
00:00:45.770 --> 00:00:49.010
So let's just add a button.

13
00:00:50.310 --> 00:00:52.299
Divs aren't buttons,
let me make this a button.

14
00:00:53.370 --> 00:00:55.495
And so let's open our styles as well.

15
00:00:55.495 --> 00:00:58.788
So, let's type this a little bit first.

16
00:00:58.788 --> 00:01:03.004
This is going to have appearance none,

17
00:01:03.004 --> 00:01:08.640
background blue,
color white font-weight bold.

18
00:01:08.640 --> 00:01:15.416
Let's add some padding just 2rem,
border none.

19
00:01:15.416 --> 00:01:18.180
All right, so let's see how that looks.

20
00:01:18.180 --> 00:01:19.910
So if we go back to here.

21
00:01:21.360 --> 00:01:26.711
All right, so, that's at the bottom over
there, let's get rid of our balls for now.

22
00:01:28.597 --> 00:01:30.760
All right, so now we have a button.

23
00:01:30.760 --> 00:01:32.112
This is gonna say click me.

24
00:01:34.014 --> 00:01:39.850
Okay, so there's different states
that this button could be in.

25
00:01:39.850 --> 00:01:43.731
And we talked about this briefly before,
but this button,

26
00:01:43.731 --> 00:01:48.232
you could hover it, you could focus it,
the button could be active,

27
00:01:48.232 --> 00:01:51.901
it might not be and so,
let's add some styles for that.

28
00:01:51.901 --> 00:01:55.927
So, and we're gonna be using
transition here as well, so

29
00:01:55.927 --> 00:01:58.760
I'm just gonna say transition.

30
00:01:58.760 --> 00:02:02.785
Just to make things simple,
we're gonna say all 0.3 seconds and

31
00:02:02.785 --> 00:02:05.830
we're gonna go with
the default easing over here.

32
00:02:05.830 --> 00:02:09.350
So, let's do some common styles for
the button.

33
00:02:09.350 --> 00:02:12.460
Let me make this 2rem, 3rem.

34
00:02:12.460 --> 00:02:17.853
So, we could say that when we hover it,
it's gonna have an opacity of 0.8.

35
00:02:21.647 --> 00:02:26.751
And so, you could see here,
actually it's not really Let

36
00:02:26.751 --> 00:02:32.307
me just make sure i'm in
the right thing or 0.5, see that.

37
00:02:32.307 --> 00:02:38.800
Okay, so you can see that
it's going between 0.5 and 1.

38
00:02:40.556 --> 00:02:42.490
And so of course you could also click it.

39
00:02:42.490 --> 00:02:46.702
So, when it's active, I'm gonna transform,

40
00:02:46.702 --> 00:02:51.643
translate Y and
let's just move this down maybe 20%.

41
00:02:56.366 --> 00:02:59.281
All right, so you see that's working.

42
00:02:59.281 --> 00:03:03.139
But when thinking about states like
there's many states that it could be

43
00:03:03.139 --> 00:03:07.249
in and we might want to define when
we're clicking it even if we're hovered,

44
00:03:07.249 --> 00:03:08.920
we want it to be full opacity.

45
00:03:08.920 --> 00:03:15.830
So, we could say,
that this should be opacity 1.

46
00:03:15.830 --> 00:03:19.880
So, this is just an example of
like just different states.

47
00:03:19.880 --> 00:03:26.060
And, also we have 0.3 seconds defined for
the overall transition?

48
00:03:26.060 --> 00:03:31.047
So, if we click this and we want it
to be maybe a little bit faster,

49
00:03:31.047 --> 00:03:34.704
we could specify it for
that individual state.

50
00:03:34.704 --> 00:03:40.692
So we could say transition duration,
maybe 0.15 seconds.

51
00:03:40.692 --> 00:03:45.409
So, it hovers and
it goes transparents pretty smoothly,

52
00:03:45.409 --> 00:03:48.693
but when you click it it's pretty fast.

53
00:03:50.918 --> 00:03:54.873
And so, these are things where
it's important to think about.

54
00:03:54.873 --> 00:03:59.867
Now, there's other states
which might not be native to

55
00:03:59.867 --> 00:04:04.448
the elements, or
to whatever you're working on.

56
00:04:04.448 --> 00:04:08.900
For example, you might want to
define some sort of app wide state,

57
00:04:08.900 --> 00:04:12.399
in which you wants to show
some sort of animation, or

58
00:04:12.399 --> 00:04:16.868
set some sort of animation property,
such as duration and delay.

59
00:04:16.868 --> 00:04:22.920
And so for that, one of my favorite
things to use, is called data attributes.

60
00:04:22.920 --> 00:04:25.880
So, let me just show you what
that looks like real quick.

61
00:04:27.090 --> 00:04:34.184
Let's say that I have a data attribute
on the entire app, called data-state.

62
00:04:34.184 --> 00:04:37.428
And so let's say that this is, loading.

63
00:04:38.820 --> 00:04:46.580
And so, what's cool about this is that
I could, again, use CSS variables.

64
00:04:46.580 --> 00:04:49.810
And so let's put this just on,
we put it on the app.

65
00:04:51.180 --> 00:04:57.375
So, app and let's see I have a color or
actually opacity.

66
00:04:57.375 --> 00:05:03.699
So, opacity i'm going to set this to,1.

67
00:05:03.699 --> 00:05:09.642
However, if my app is in a loading state

68
00:05:11.644 --> 00:05:17.677
I might want that opacity to be 0.5 And

69
00:05:17.677 --> 00:05:23.000
so, this is how you would select
that data attribute in CSS.

70
00:05:23.000 --> 00:05:29.009
So, this is something that is not really
commonly used, but it's extremely useful.

71
00:05:29.009 --> 00:05:33.147
So, this allows you to define custom
attributes, or data attributes and

72
00:05:33.147 --> 00:05:37.772
there's a reason that we're prefixing it
with data which I'll talk about soon.

73
00:05:37.772 --> 00:05:41.430
But you could select elements
based on that attribute.

74
00:05:41.430 --> 00:05:47.015
So we could say, if the app has this
attribute of data-state equals loading,

75
00:05:47.015 --> 00:05:49.733
then we want the opacity to be 0.5.

76
00:05:49.733 --> 00:05:54.850
And so now, we could set
something like the h1 opacity.

77
00:05:59.396 --> 00:06:03.690
And so we could see because it's loading,
it's actually a little transparent.

78
00:06:03.690 --> 00:06:07.065
So, let me actually copy that over here.

79
00:06:12.767 --> 00:06:14.770
Okay, so, now you see it's loading.

80
00:06:14.770 --> 00:06:17.139
It's little bit transparent in fact,

81
00:06:17.139 --> 00:06:22.310
let's make this even more prominent
just because that might be hard to see.

82
00:06:22.310 --> 00:06:24.689
So ironically,
I'm making it harder to see,

83
00:06:24.689 --> 00:06:27.150
to make it easier to see the difference.

84
00:06:27.150 --> 00:06:32.830
Anyway, so you see that now that
the app is in the data-state loading.

85
00:06:32.830 --> 00:06:36.659
We are setting that CSS variable,
so if I go in the elements,

86
00:06:38.383 --> 00:06:43.730
Just exit this and change this
to something else like success.

87
00:06:45.470 --> 00:06:49.540
Then we see that it's fully transparent or
fully opaque.

88
00:06:51.050 --> 00:06:54.650
Loading, it goes right back to loading.

89
00:06:54.650 --> 00:06:58.690
So, why are we prefixing this with data?

90
00:06:58.690 --> 00:06:59.850
What's so special about data?

91
00:07:01.030 --> 00:07:06.180
So, the really cool thing about this and
I'm gonna grab the app right here.

92
00:07:06.180 --> 00:07:13.327
So, const app equals
document.query selector app.

93
00:07:13.327 --> 00:07:18.513
All right, so what's great about this is
that, you could do this one of two ways.

94
00:07:18.513 --> 00:07:24.501
If you want to just modify any attribute,
that it's like app.set attributes and

95
00:07:24.501 --> 00:07:29.909
then you want to set maybe data-states and
you wanna set that to loading.

96
00:07:29.909 --> 00:07:33.120
It's already loading,
so we could do success.

97
00:07:33.120 --> 00:07:35.140
So, this definitely works.

98
00:07:36.360 --> 00:07:38.760
But it's a little bit verbose.

99
00:07:38.760 --> 00:07:44.577
So instead,
what you could do is you could say,

100
00:07:44.577 --> 00:07:49.100
let me zoom in a bit, app.dataset.

101
00:07:49.100 --> 00:07:50.890
And so, here is what we get for dataset.

102
00:07:50.890 --> 00:07:55.580
It's going to give you all
of those attributes prefixed

103
00:07:55.580 --> 00:07:57.787
with data dash whatever.

104
00:07:57.787 --> 00:08:04.935
So we could say,
app.dataset.state equals loading.

105
00:08:04.935 --> 00:08:06.407
That's all you have to do.

106
00:08:06.407 --> 00:08:09.690
And then it's going to change,
the data attribute for that.

107
00:08:09.690 --> 00:08:15.370
So, this makes it really useful to
work between, JavaScript and CSS.

108
00:08:15.370 --> 00:08:16.190
Yes.

109
00:08:16.190 --> 00:08:19.700
&gt;&gt; Is opacity the attribute or a variable?

110
00:08:19.700 --> 00:08:21.950
&gt;&gt; So, opacity is the variable.

111
00:08:21.950 --> 00:08:28.785
So, we could even call this,
transparency if we wanted to.

112
00:08:28.785 --> 00:08:32.210
And, it's gonna work the same.

113
00:08:33.210 --> 00:08:38.547
So, So

114
00:08:38.547 --> 00:08:42.830
that's a success and yeah,
sorry for the naming conflict.

