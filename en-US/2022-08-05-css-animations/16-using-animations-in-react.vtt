WEBVTT

1
00:00:00.320 --> 00:00:04.575
So, someone in the chat asked,
how would you do this,

2
00:00:04.575 --> 00:00:09.160
the CSS variable part,
how would you do that in React?

3
00:00:09.160 --> 00:00:13.473
Because I did talk about how using
a framework like React does make this

4
00:00:13.473 --> 00:00:15.270
a little bit easier.

5
00:00:15.270 --> 00:00:19.640
Or at least defining each of the variables
easier than manually putting them in.

6
00:00:19.640 --> 00:00:24.303
So let's say I had an array of balls,
so const balls equals,

7
00:00:24.303 --> 00:00:28.060
just call this one,
two, three, four, five.

8
00:00:28.060 --> 00:00:30.813
So, in frameworks like React or Vue,

9
00:00:30.813 --> 00:00:36.320
they have special constructs that allow
you to map over an array of element or

10
00:00:36.320 --> 00:00:40.637
sorry an array of items and
transform those into elements.

11
00:00:40.637 --> 00:00:46.115
So for example, we could say balls.map and

12
00:00:46.115 --> 00:00:53.526
we get the ball and the index and
so we could return the ball.

13
00:00:53.526 --> 00:00:58.558
We have to give it a key,
at least in React and

14
00:00:58.558 --> 00:01:02.095
then, so let's reload this.

15
00:01:03.702 --> 00:01:05.870
Okay, so now we get five balls.

16
00:01:07.740 --> 00:01:14.756
So if we add style here and
this was what the original question was,

17
00:01:14.756 --> 00:01:21.790
we could set double dash I,
which is the index to I, to that value.

18
00:01:23.550 --> 00:01:30.183
And so now if we add an animation here,
so for example key frames,

19
00:01:30.183 --> 00:01:36.580
slide right,
transform none to transform translate X.

20
00:01:36.580 --> 00:01:42.136
Let's just say 300% and
we add that animation

21
00:01:42.136 --> 00:01:47.440
to the ball, slide right over 0.3 seconds.

22
00:01:47.440 --> 00:01:48.400
And let's give it both.

23
00:01:48.400 --> 00:01:50.950
They're gonna move at the same time.

24
00:01:50.950 --> 00:01:56.007
So now if we want it to be
based on their position, so

25
00:01:56.007 --> 00:02:02.831
sort of doing a staggering animation,
we could just say calc far I and

26
00:02:02.831 --> 00:02:07.087
multiply that by some sort of fixed value.

27
00:02:07.087 --> 00:02:09.379
So 0.1 seconds for instance.

28
00:02:09.379 --> 00:02:12.240
And so now we have a staggering animation.

29
00:02:13.590 --> 00:02:16.136
So this is how you would do it in React.

