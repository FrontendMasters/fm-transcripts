WEBVTT

1
00:00:00.100 --> 00:00:06.224
Our last lesson is going to
be on reactive animations.

2
00:00:06.224 --> 00:00:11.643
So, what's the difference between all
of the animations that we've done and

3
00:00:11.643 --> 00:00:13.297
reactive animations?

4
00:00:13.297 --> 00:00:18.347
So, the biggest difference between
these two which they might feel like

5
00:00:18.347 --> 00:00:23.813
completely different things is that
the animations that we were talking about

6
00:00:23.813 --> 00:00:29.611
with transitions and keyframes and state
based animations and layout animation,

7
00:00:29.611 --> 00:00:35.370
all of those, you could think of as pretty
much hands off from any external input.

8
00:00:35.370 --> 00:00:40.840
So you're basically saying when I change
this date, this animation is gonna happen.

9
00:00:40.840 --> 00:00:44.090
I don't care how it happens,
it's sort of like a fire and forget.

10
00:00:44.090 --> 00:00:49.540
It's going to happen, it has a start,
it has a stop and there's your animation.

11
00:00:49.540 --> 00:00:52.254
So, same thing with layouts and
all of those things.

12
00:00:52.254 --> 00:00:56.868
So, reactive animations are different
because they are dependent on

13
00:00:56.868 --> 00:00:58.205
continuous input.

14
00:00:58.205 --> 00:01:02.217
So for example,
when you're moving your mouse or

15
00:01:02.217 --> 00:01:07.088
when you're on your phone and
you're doing, one of the most

16
00:01:07.088 --> 00:01:12.705
common animations,
especially on dribble is the Tinder Swipe.

17
00:01:12.705 --> 00:01:16.955
So, you're swiping either right or left
and you could see the card rotating and

18
00:01:16.955 --> 00:01:21.463
moving as you're moving your hand, and
there's also secondary animations to that

19
00:01:21.463 --> 00:01:25.590
such as the green checkmark appearing,
the red checkmark appearing.

20
00:01:25.590 --> 00:01:31.230
And so you have opacity, you have
transitions, sorry you have transforms,

21
00:01:31.230 --> 00:01:35.307
you have rotation,
there's a lot of things going on and

22
00:01:35.307 --> 00:01:41.850
it's all based on the position of your
finger, or just the pointer technically.

23
00:01:41.850 --> 00:01:44.742
And so reactive animations are about that,

24
00:01:44.742 --> 00:01:50.310
it's about reading continuous input and
reacting to that in real time.

25
00:01:50.310 --> 00:01:55.301
So, we're gonna be talking about how
to do reactive animations in here.

26
00:01:58.562 --> 00:02:05.260
All right, so with this I'm actually
going to jump straight to the exercise.

27
00:02:05.260 --> 00:02:06.249
Let me get rid of this.

28
00:02:09.085 --> 00:02:13.070
And so,
this is the reactive animations exercise.

29
00:02:13.070 --> 00:02:17.412
So we have our little ball here again,
and you know what?

30
00:02:17.412 --> 00:02:22.233
Let me just go ahead and
make that a little bit bigger.

31
00:02:23.763 --> 00:02:30.789
Okay, so we have our circle here,
let's make it 10vmin.

32
00:02:30.789 --> 00:02:34.135
And so, in terms of reactive animation,

33
00:02:34.135 --> 00:02:39.750
here is our initial goal,
we want this ball to follow our mouse.

34
00:02:39.750 --> 00:02:41.544
So it seems like a simple task.

35
00:02:41.544 --> 00:02:43.280
How exactly should we do that?

36
00:02:44.640 --> 00:02:48.090
So, of course this is going
to require some JavaScripts.

37
00:02:48.090 --> 00:02:51.660
Unfortunately, there isn't
a straightforward way.

38
00:02:51.660 --> 00:02:56.360
I see that there isn't any real way
to do this with pure CSS alone.

39
00:02:57.560 --> 00:03:02.867
Okay, so we have the circle element and
what we want to do is we want

40
00:03:02.867 --> 00:03:08.076
to listen for events so
that we could grab the cursor position and

41
00:03:08.076 --> 00:03:14.364
somehow change the position of the circle
so that it is moving with the mouse.

42
00:03:14.364 --> 00:03:20.960
[COUGH] Okay, so, first we're going
to add an event listener on the body.

43
00:03:23.120 --> 00:03:25.280
And I'm gonna call this pointer move.

44
00:03:25.280 --> 00:03:29.169
By the way, you might have used
mouse move, mouse down, mouse up.

45
00:03:29.169 --> 00:03:31.998
I personally really like
using pointer because

46
00:03:31.998 --> 00:03:35.389
a pointer device can be your mouse,
it could be a stylus,

47
00:03:35.389 --> 00:03:39.580
it could be your finger, it's a lot
more versatile than just a mouse.

48
00:03:39.580 --> 00:03:44.252
So, I do recommend using pointer
events whenever you can.

49
00:03:46.557 --> 00:03:50.507
Okay, so first things first,
let's console.log this event and

50
00:03:50.507 --> 00:03:53.339
see what we get when
we're moving our pointer.

51
00:03:55.280 --> 00:03:59.496
So I'm gonna go to the console and
you can see over here,

52
00:03:59.496 --> 00:04:04.900
we have a bunch of pointer events and
there's a few things inside of it.

53
00:04:04.900 --> 00:04:06.600
Actually, there's a lot
of things inside of it.

54
00:04:06.600 --> 00:04:11.135
Because it is a pointer, we have things
like the altitude angle, which doesn't

55
00:04:11.135 --> 00:04:15.204
really make sense to me because I'm
pretty sure my mouse is right there,

56
00:04:15.204 --> 00:04:19.030
it's not hovering over the screen or
something like that.

57
00:04:19.030 --> 00:04:23.280
But we have these two things,
client X and client y.

58
00:04:23.280 --> 00:04:25.220
These are going to be
the properties you want.

59
00:04:25.220 --> 00:04:30.303
So, this is the x and
y position of the pointer relative to,

60
00:04:30.303 --> 00:04:34.320
well, the client, so the the viewports.

61
00:04:34.320 --> 00:04:40.352
And so, at this moment in time,
the x position was over here,

62
00:04:40.352 --> 00:04:46.740
sort of, at 838 pixels,
the y position was at 394 pixels.

63
00:04:46.740 --> 00:04:49.889
Okay, so
what do we do with this information?

64
00:04:51.420 --> 00:04:53.090
Well, first let's grab it.

65
00:04:53.090 --> 00:05:00.750
So const (clientX), ( client Y),
let's grab that from the events,

66
00:05:00.750 --> 00:05:05.625
and just to show you again,
we're gonna log (client X and client Y).

67
00:05:07.335 --> 00:05:12.075
So now you could see that this is
changing as we're moving the mouse.

68
00:05:12.075 --> 00:05:16.034
So remember from previous lessons
we could use CSS variables

69
00:05:16.034 --> 00:05:21.435
to basically communicate between
the JavaScript and the CSS worlds.

70
00:05:21.435 --> 00:05:23.608
So, let's go ahead and do that.

71
00:05:23.608 --> 00:05:28.710
(circlel.style.setProperty).

72
00:05:28.710 --> 00:05:32.988
And I'm going to set X to my clientX and

73
00:05:32.988 --> 00:05:36.480
I'm gonna set Y to my clientY.

74
00:05:37.810 --> 00:05:42.659
Now, in the styles we're not
doing anything with that yet,

75
00:05:42.659 --> 00:05:47.030
but I just want to make sure
that we do have those in CSS,

76
00:05:47.030 --> 00:05:51.140
so I'm actually gonna add
some styling over here.

77
00:05:52.460 --> 00:05:56.800
And you don't have to do this, it's
just for debugging purposes basically.

78
00:05:58.710 --> 00:06:03.254
The contents of this,
I'm gonna get my, but

79
00:06:03.254 --> 00:06:07.920
let's just get the entire
style attribute and

80
00:06:07.920 --> 00:06:12.704
just get that in there,
position: absolute,

81
00:06:12.704 --> 00:06:19.284
bottom: 100%, left: 0,
margin bottom: 0.25rem,

82
00:06:19.284 --> 00:06:24.071
color: white, font-family: monospace and

83
00:06:24.071 --> 00:06:28.764
background: black, padding: 0.5 rem.

84
00:06:28.764 --> 00:06:32.670
Don't worry about this at all,
you're gonna see why I'm doing it.

85
00:06:32.670 --> 00:06:35.120
So, actually it's completely off screen.

86
00:06:35.120 --> 00:06:41.449
So I'm just going to say top:100% and
left:0.

87
00:06:41.449 --> 00:06:46.104
Okay, so [COUGH] Now you could see
the reason that I did this was because

88
00:06:46.104 --> 00:06:51.090
I'm showing you that we're getting
that double dash x and double dash y.

89
00:06:51.090 --> 00:06:54.170
We're getting both of those
custom properties in CSS.

90
00:06:56.000 --> 00:07:00.190
So, this is of course being
read just from the style tag.

91
00:07:00.190 --> 00:07:03.400
And so now we could actually do
something with these values.

92
00:07:04.410 --> 00:07:09.237
So, I'm also gonna give it a white-space:

93
00:07:09.237 --> 00:07:13.308
no wrap because it's looking weird.

94
00:07:13.308 --> 00:07:17.507
Okay, cool, so we have that over there.

95
00:07:17.507 --> 00:07:22.609
So, of course you might be thinking,
can I just use left or top?

96
00:07:22.609 --> 00:07:27.670
Again, try to avoid that,
that's going to cause a layouts trigger.

97
00:07:27.670 --> 00:07:30.945
So instead we wants to transform it.

98
00:07:30.945 --> 00:07:33.215
And so we're going to translate.

99
00:07:34.675 --> 00:07:40.255
And by the way, this is gonna seem broken,
but there's a reason why it's broken.

100
00:07:40.255 --> 00:07:46.662
But we're gonna give it var x and var y

101
00:07:49.278 --> 00:07:53.960
And so this should move,
but it's not moving.

102
00:07:53.960 --> 00:07:59.060
Can anyone here guess why
this circle is not moving?

103
00:07:59.060 --> 00:08:00.410
I mean, it's getting the values.

104
00:08:01.940 --> 00:08:06.139
So, Why isn't it moving?

105
00:08:06.139 --> 00:08:10.365
So, the reason is because the x and
y variables are unitless,

106
00:08:10.365 --> 00:08:14.427
there's no unit, there's no pixel or
rem or whatever, so

107
00:08:14.427 --> 00:08:18.020
CSS doesn't know, okay,
I should move by 130?

108
00:08:18.020 --> 00:08:18.520
130 what?

109
00:08:19.815 --> 00:08:22.795
Feet, inches, CSS has no idea.

110
00:08:22.795 --> 00:08:27.705
So we need to convert these two pixels
somehow, and there's two ways of doing it.

111
00:08:27.705 --> 00:08:33.460
One way is the easy way and one way,
in my opinion is the better more CSS way.

112
00:08:33.460 --> 00:08:38.289
So, we could take each of these,
this is the easy way, and

113
00:08:38.289 --> 00:08:43.920
we could convert these to those
pixel values by adding px over here.

114
00:08:46.476 --> 00:08:48.707
All right, so by doing this,

115
00:08:48.707 --> 00:08:54.680
now we have a circle that's following
our pointer, which is great.

116
00:08:54.680 --> 00:08:59.706
But one potential problem of
this is that now it becomes

117
00:08:59.706 --> 00:09:07.146
a lot harder to use those raw values
because they're converted to pixel values.

118
00:09:07.146 --> 00:09:09.935
And so if you wanted to use them for

119
00:09:09.935 --> 00:09:14.118
things other than just
moving the position as is,

120
00:09:14.118 --> 00:09:19.810
it becomes a little bit more difficult,
at least in my experience.

121
00:09:19.810 --> 00:09:23.865
So instead, if we get the raw values over,

122
00:09:23.865 --> 00:09:27.930
we could define our own custom variables.

123
00:09:27.930 --> 00:09:32.783
So, we could,
I'm gonna put this at the top,

124
00:09:32.783 --> 00:09:36.770
x px and this is calc(var x) * 1 px.

125
00:09:38.760 --> 00:09:42.508
And so, now we're giving
a unit to the unitless value.

126
00:09:42.508 --> 00:09:45.726
[COUGH] And so for y px, oops,

127
00:09:45.726 --> 00:09:51.350
that should be pixel,
that's gonna be that.

128
00:09:51.350 --> 00:09:56.820
And so, now we could just add px to
each of these and it should work.

129
00:09:59.190 --> 00:10:05.780
Okay, so now we have a circle following
us around, it's working pretty well.

130
00:10:07.780 --> 00:10:15.070
And so, what I also wanna do,
is do left:-30%, top: -30%.

131
00:10:15.070 --> 00:10:19.890
And so that's just gonna get the circle,
oops, that's the wrong one.

132
00:10:19.890 --> 00:10:27.050
So, [COUGH] basically,
we want the circle in the middle.

133
00:10:27.050 --> 00:10:32.382
So, we could use calc for that,

134
00:10:32.382 --> 00:10:37.716
calc(var x-px -50%) and

135
00:10:37.716 --> 00:10:42.463
(calc var y px -50%).

136
00:10:42.463 --> 00:10:45.930
So here's our x value and
here's our y value.

137
00:10:45.930 --> 00:10:51.444
So, all we're doing is we're getting
that pixel value and we're moving it 50%

138
00:10:51.444 --> 00:10:56.660
to the left and 50% up so that the circle
is right in the middle of our cursor.

139
00:10:58.859 --> 00:10:59.811
Which it is.

