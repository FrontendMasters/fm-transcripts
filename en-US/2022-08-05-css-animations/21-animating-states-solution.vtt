WEBVTT

1
00:00:00.110 --> 00:00:04.807
All right, so, let's add some
state-based animations in here.

2
00:00:04.807 --> 00:00:06.451
So we have three states to find.

3
00:00:06.451 --> 00:00:09.320
We have subscribe, success, and error.

4
00:00:09.320 --> 00:00:13.780
And these data state attributes
are on the UI form itself.

5
00:00:13.780 --> 00:00:15.370
So that's important to keep in mind.

6
00:00:16.640 --> 00:00:23.358
Like before, we had that slide in
animation or slide up, as I called it.

7
00:00:23.358 --> 00:00:29.291
So, we could say for subscribe in this
subscribe state, that's our initial state.

8
00:00:29.291 --> 00:00:33.596
So that's where we wants to
actually have it, slide up.

9
00:00:33.596 --> 00:00:37.204
So slide up,
let's do that over one second, and

10
00:00:37.204 --> 00:00:39.762
let's have the fill mode be both.

11
00:00:39.762 --> 00:00:43.506
So now,
only when we're in the subscribe state,

12
00:00:43.506 --> 00:00:46.460
will it actually show that animation.

13
00:00:48.420 --> 00:00:53.610
So now let's actually try just
doing the different states.

14
00:00:53.610 --> 00:00:57.180
So we have a success state,
an error state.

15
00:00:57.180 --> 00:01:00.324
Let me just see something real quick.

16
00:01:03.175 --> 00:01:06.670
Okay, yeah, so
we have subscribed success, error.

17
00:01:06.670 --> 00:01:10.020
So, for the success dates,
we have this color,

18
00:01:10.020 --> 00:01:12.800
CSS custom property, or CSS variable,

19
00:01:12.800 --> 00:01:18.530
that we're passing down to all of the
elements that are inside of the UI form.

20
00:01:18.530 --> 00:01:20.900
So we could change that color.

21
00:01:20.900 --> 00:01:25.785
So something like green over here,
maybe make it a bit better.

22
00:01:27.952 --> 00:01:33.335
All right, and so, the way that we test
that without having to hook up JavaScript

23
00:01:33.335 --> 00:01:38.106
or interact with it is, we could just
change the state right over here.

24
00:01:38.106 --> 00:01:40.173
So I'm gonna change it to success, and

25
00:01:40.173 --> 00:01:42.875
then we could see that our
data states are working.

26
00:01:42.875 --> 00:01:46.601
So, remember this is just
like any other CSS selector.

27
00:01:46.601 --> 00:01:52.545
But the difference is, we can manipulate
this pretty easily with JavaScript.

28
00:01:52.545 --> 00:01:59.867
So, going back here, let's change
the Error color to some reddish color.

29
00:01:59.867 --> 00:02:03.039
That's orange.

30
00:02:04.945 --> 00:02:06.076
We got something like that.

31
00:02:07.686 --> 00:02:12.309
And we also want this to be where
we add the Shake Animation.

32
00:02:12.309 --> 00:02:18.027
So, going here,
remember we have these keyframes shake.

33
00:02:18.027 --> 00:02:22.127
So we could add that to the error state,
and say,

34
00:02:22.127 --> 00:02:26.428
animation shake, and
we'll do this for a second.

35
00:02:26.428 --> 00:02:30.148
And we want both ends of
the animation to stick.

36
00:02:30.148 --> 00:02:35.281
So, Now, when we change

37
00:02:35.281 --> 00:02:40.549
the state from subscribe to error,
it's gonna shake.

38
00:02:40.549 --> 00:02:43.692
And now we have our animation.

39
00:02:43.692 --> 00:02:50.660
So we could also go to success,
and we see that we have a success.

40
00:02:50.660 --> 00:02:53.950
We don't have an animation here,
but we could easily add one.

41
00:02:53.950 --> 00:02:56.726
So, actually just for fun,

42
00:02:56.726 --> 00:03:01.938
we could just have it jump up and
join, I don't know.

43
00:03:01.938 --> 00:03:06.720
So, keyframes,
let's just call this a good job.

44
00:03:06.720 --> 00:03:11.388
And so we're gonna go from transform none.

45
00:03:11.388 --> 00:03:16.563
At the deeper sense,
we're gonna go to transform,

46
00:03:16.563 --> 00:03:20.797
translatey, negative 100%, to,,

47
00:03:20.797 --> 00:03:25.280
we're gonna go to transform, translatey.

48
00:03:27.390 --> 00:03:29.120
This is going to be zero.

49
00:03:29.120 --> 00:03:32.390
But, actually right before that,

50
00:03:32.390 --> 00:03:37.200
I wanted to sort of just
have a squishing effect.

51
00:03:37.200 --> 00:03:42.670
So we could also scaley 0.8,
this should look interesting.

52
00:03:42.670 --> 00:03:44.320
But let's see what happens.

53
00:03:45.850 --> 00:03:50.015
So now when we go back up here to success,

54
00:03:50.015 --> 00:03:56.764
we're gonna have animation,
good job, one second, and both.

55
00:03:56.764 --> 00:04:00.151
All right, so,
here's our Subscribe animation.

56
00:04:00.151 --> 00:04:04.856
So when we go to success,
it doesn't do anything.

57
00:04:04.856 --> 00:04:05.760
Let's see what happened.

58
00:04:05.760 --> 00:04:06.605
We have animation.

59
00:04:08.114 --> 00:04:10.650
Good job, okay?

60
00:04:10.650 --> 00:04:14.710
So, one thing we could do is just
determine that the animation

61
00:04:14.710 --> 00:04:17.297
is actually being applied to the form.

62
00:04:17.297 --> 00:04:18.370
And it looks like it's not.

63
00:04:18.370 --> 00:04:24.765
So, you know what,
I'm in the wrong style file.

64
00:04:24.765 --> 00:04:29.720
So Let's go over here.

65
00:04:32.450 --> 00:04:35.492
And so now when we do success,

66
00:04:35.492 --> 00:04:40.500
[LAUGH] it sort of does is
pretty silly animation.

67
00:04:42.960 --> 00:04:47.884
So, of course we could change the speed
of that, and everything like that.

68
00:04:50.025 --> 00:04:55.538
All right, so, the next part of this is,
we actually wants to hook this up so

69
00:04:55.538 --> 00:05:00.381
that when we click the button,
we're going between these dates.

70
00:05:00.381 --> 00:05:03.309
So I'm going to grab
that button over here.

71
00:05:03.309 --> 00:05:08.407
So, all right, actually yeah, so
we have this set state subscribe, and

72
00:05:08.407 --> 00:05:13.360
this is just some JavaScript that's
being put directly into Onclick.

73
00:05:13.360 --> 00:05:16.449
So this is really old school HTML.

74
00:05:16.449 --> 00:05:18.259
But we're gonna define
that function over here.

75
00:05:18.259 --> 00:05:20.315
So function setState.

76
00:05:22.685 --> 00:05:28.245
And so now,
we are going to set the data dot state

77
00:05:28.245 --> 00:05:33.950
of the form elements to
the state that we give it.

78
00:05:33.950 --> 00:05:40.035
So, formL.dataset.state equals state.

79
00:05:40.035 --> 00:05:46.294
So you can see here that we have on
click equals set state subscribing and

80
00:05:46.294 --> 00:05:50.881
so just to show this sort
of pretending to work We're

81
00:05:50.881 --> 00:05:55.390
going to set a timeout if
the state is subscribing.

82
00:05:55.390 --> 00:06:01.459
So if state is subscribing,
then we're gonna set time out.

83
00:06:02.540 --> 00:06:07.620
And after a second or so,
we're going to set state to Success.

84
00:06:09.470 --> 00:06:11.717
And let's just do it after a second.

85
00:06:11.717 --> 00:06:17.870
So, when we click here,
after one second, it goes to Success.

86
00:06:17.870 --> 00:06:21.702
It does our little Success animation,
or we can make it go to Error.

87
00:06:26.763 --> 00:06:29.954
After one second, it goes to Error.

88
00:06:29.954 --> 00:06:33.873
And then we could click it again,
and it's still going to error.

89
00:06:33.873 --> 00:06:38.428
One thing that I like to do is,
do sort of a math.random.

90
00:06:38.428 --> 00:06:44.846
So if it's less than 0.8,
then we'll go to success.

91
00:06:46.616 --> 00:06:50.975
Else, we'll go to error.

92
00:06:53.706 --> 00:06:57.660
All right, so, we click this,
sometimes it goes to Error,

93
00:06:57.660 --> 00:06:59.682
sometimes it goes to Success.

94
00:06:59.682 --> 00:07:04.631
And yeah, so, one last parts
which is sort of a bonus, but

95
00:07:04.631 --> 00:07:08.065
something that's really useful to do,

96
00:07:08.065 --> 00:07:12.711
you see that we have all of
these these pens over here for

97
00:07:12.711 --> 00:07:17.057
subscribe, subscribing,
success, and error.

98
00:07:17.057 --> 00:07:20.838
So, let's say that we want to
conditionally show those based on what

99
00:07:20.838 --> 00:07:21.630
the state is.

100
00:07:23.690 --> 00:07:27.330
What I'd like to do, and of course
you could do something different,

101
00:07:27.330 --> 00:07:32.200
especially if you're using a framework,
then you could do this within JavaScript.

102
00:07:32.200 --> 00:07:36.931
But I like adding a data-show
attribute which says,

103
00:07:36.931 --> 00:07:41.510
show this element only
if we are in that state.

104
00:07:41.510 --> 00:07:45.265
So this is going to be for subscribe.

105
00:07:45.265 --> 00:07:49.358
This is for subscribing, this is for

106
00:07:49.358 --> 00:07:53.062
success, and this is for error.

107
00:07:53.062 --> 00:07:56.405
Now what we could do,
is whenever we change the state,

108
00:07:56.405 --> 00:07:58.960
we could query for all of those elements.

109
00:07:58.960 --> 00:08:04.977
So const shown Els equals
document dot query selector all.

110
00:08:04.977 --> 00:08:09.906
And we could look for those data state

111
00:08:09.906 --> 00:08:14.203
equals whatever that state is.

112
00:08:14.203 --> 00:08:20.599
So by doing that,
we could iterate over those forEach el.

113
00:08:20.599 --> 00:08:26.310
And we could also use data set to
toggle whether they're active or not.

114
00:08:26.310 --> 00:08:30.810
So, el dot data set,
dot active, equals true.

115
00:08:32.030 --> 00:08:37.410
Now, we also have to make sure that we
reset this every time we change the state.

116
00:08:37.410 --> 00:08:39.080
And so we'll do this up here.

117
00:08:39.080 --> 00:08:44.530
Active Els equals all of
the ones that are data active.

118
00:08:45.620 --> 00:08:49.736
And so active Els dot forEach,

119
00:08:49.736 --> 00:08:54.811
El dot data set dot active, is false.

120
00:08:54.811 --> 00:08:59.003
So we're removing the active
data attribute, and

121
00:08:59.003 --> 00:09:04.084
we're setting the ones that
are supposed to be shown to true.

122
00:09:04.084 --> 00:09:08.970
Now in the styling, that show.

123
00:09:08.970 --> 00:09:14.526
We have a style over here that says, if it
has a data show attribute, but it's not

124
00:09:14.526 --> 00:09:20.447
active, so we don't have that data active
attribute on it, then don't display it.

125
00:09:20.447 --> 00:09:27.884
And so the result of that Is this, so we
do have to set an initial state over here.

126
00:09:27.884 --> 00:09:33.052
So, I'm just going to set states.

127
00:09:33.052 --> 00:09:36.554
And our first state is
going to be Subscribe.

128
00:09:38.850 --> 00:09:45.258
So now hopefully,
should be able to see it.

129
00:09:45.258 --> 00:09:49.093
So just double checking,
we have data state equal Subscribe, and

130
00:09:49.093 --> 00:09:50.744
data show equal Subscribe.

131
00:09:50.744 --> 00:10:00.131
So, [COUGH] Let's just make sure that
we have everything, showing Els.

132
00:10:00.131 --> 00:10:03.380
There we go, cool.

133
00:10:03.380 --> 00:10:07.950
So now we have the Subscribe,
and then it shows subscribing.

134
00:10:07.950 --> 00:10:15.967
So, we just have to One
small thing over here.

135
00:10:15.967 --> 00:10:21.590
This is a gotcha that I just ran into and,
hopefully, none of you run into now.

136
00:10:21.590 --> 00:10:27.780
But, to remove a data attribute,
you can't just set it to false.

137
00:10:27.780 --> 00:10:31.764
All you have to do, because that's
actually gonna convert it to the string

138
00:10:31.764 --> 00:10:34.180
false, which is not what you want.

139
00:10:34.180 --> 00:10:37.340
So, what you really want to do,
is delete it.

140
00:10:38.450 --> 00:10:43.341
And so what that's gonna do, is it's
going to just remove that attribute, so

141
00:10:43.341 --> 00:10:45.640
that you don't run into it.

142
00:10:45.640 --> 00:10:50.850
And as a result,
now you have your working animations.

