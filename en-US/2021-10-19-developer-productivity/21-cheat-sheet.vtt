WEBVTT

1
00:00:00.120 --> 00:00:02.155
I wanna take it to the next level.

2
00:00:02.155 --> 00:00:04.451
I wanna make this even more awesome,
right?

3
00:00:04.451 --> 00:00:06.925
We just made something
that was sort of awesome.

4
00:00:06.925 --> 00:00:08.385
I wanna make it awesomer.

5
00:00:08.385 --> 00:00:10.041
I wanna make it max level awesome.

6
00:00:10.041 --> 00:00:13.220
I wanna make it level 9000 awesome.

7
00:00:13.220 --> 00:00:15.784
So first before we say
what the problem is,

8
00:00:15.784 --> 00:00:19.240
I wanna say something that
we all face as a developer.

9
00:00:19.240 --> 00:00:22.140
I think you can kind of guess
where I'm going with this one.

10
00:00:22.140 --> 00:00:24.330
But here's a couple questions I have for
you.

11
00:00:24.330 --> 00:00:29.610
You probably know at least
two of these answers.

12
00:00:29.610 --> 00:00:33.510
Perhaps you're just really adept in these
three languages that I mentioned here.

13
00:00:33.510 --> 00:00:35.722
And so you know all the answers.

14
00:00:35.722 --> 00:00:38.416
But these are just questions
we have typically.

15
00:00:38.416 --> 00:00:42.130
Developers, we all go, okay,
how do you tokenize a string in C?

16
00:00:42.130 --> 00:00:45.100
I know it's not .split,
because C is not simple.

17
00:00:45.100 --> 00:00:47.927
C is like any other programming language,
just hard.

18
00:00:47.927 --> 00:00:49.427
That's kind of my motto.

19
00:00:49.427 --> 00:00:51.000
I think that should be its motto too.

20
00:00:51.000 --> 00:00:54.601
I think C would be really beneficial
if it just was like, C it's hard and

21
00:00:54.601 --> 00:00:56.880
then that would be really good.

22
00:00:56.880 --> 00:01:00.037
So these questions obviously are questions
we ask ourselves all the time.

23
00:01:00.037 --> 00:01:02.828
If we just google them once or
twice and then for the most part,

24
00:01:02.828 --> 00:01:04.200
you know how to do it.

25
00:01:04.200 --> 00:01:06.810
And then you can kind of just
remember it from there on out.

26
00:01:06.810 --> 00:01:09.489
But what if we just don't even
need to open up a browser.

27
00:01:09.489 --> 00:01:15.650
Right now I hate going in here and
going, how to tokenize string in C?

28
00:01:15.650 --> 00:01:18.350
And then go here and
then read stack overflow.

29
00:01:18.350 --> 00:01:21.306
And then some guy's gonna be like,
well actually this is the best way.

30
00:01:21.306 --> 00:01:22.670
What about this one this way?

31
00:01:22.670 --> 00:01:26.860
Then some guy down here has like negative
four, look at that, negative one.

32
00:01:26.860 --> 00:01:28.540
Someone's always wrong on stack overflow.

33
00:01:28.540 --> 00:01:30.107
Someone's always right on stack overflow.

34
00:01:30.107 --> 00:01:33.402
It's just not a great experience to me.

35
00:01:33.402 --> 00:01:35.568
I'm like, whatever,
I don't wanna deal with it.

36
00:01:35.568 --> 00:01:36.819
I want something that's
a little bit easier.

37
00:01:36.819 --> 00:01:38.260
I just want the answer.

38
00:01:38.260 --> 00:01:40.460
Tell me how do I tokenize a string?

39
00:01:40.460 --> 00:01:43.620
And so for me, I technically can do that.

40
00:01:43.620 --> 00:01:47.850
I can jump in here and I can go C and
I can go tokenize string.

41
00:01:47.850 --> 00:01:50.807
And then what it's gonna do is it's
gonna come back and it's gonna tell me,

42
00:01:50.807 --> 00:01:52.490
this is how you tokenize a string.

43
00:01:52.490 --> 00:01:58.090
So I can now take it in C and
boom, I am now using this in C.

44
00:01:58.090 --> 00:01:58.860
That's fantastic.

45
00:01:58.860 --> 00:02:01.740
When I'm done, I press Ctrl+C, close it.

46
00:02:01.740 --> 00:02:03.880
Boom, we're back to right
where we just were.

47
00:02:03.880 --> 00:02:06.260
That is fantastic, that is beautiful.

48
00:02:06.260 --> 00:02:09.949
And of course it uses that wonderful fuzzy
finder that we all just got done using,

49
00:02:09.949 --> 00:02:12.650
so we already know how to
solve half this problem.

50
00:02:12.650 --> 00:02:14.740
So the program that I'm
using is called Cheat Sheet.

51
00:02:14.740 --> 00:02:15.860
It is beautiful.

52
00:02:15.860 --> 00:02:18.890
I use it more and more and
it's one of the best ever.

53
00:02:18.890 --> 00:02:22.320
It also has TLDR already
kind of integrated with it.

54
00:02:22.320 --> 00:02:27.590
If you don't know what TLDR is, TLDR you
can ask it things like, hey TLDR find.

55
00:02:27.590 --> 00:02:29.400
It's like, hey,
here's basically how you use find.

56
00:02:29.400 --> 00:02:30.830
You're like, okay, I didn't know that.

57
00:02:30.830 --> 00:02:31.600
That's awesome.

58
00:02:31.600 --> 00:02:35.523
TLDR sed,
here's basically how you use sed.

59
00:02:35.523 --> 00:02:38.152
It'll give you some basic
kind of hints to use it and

60
00:02:38.152 --> 00:02:41.097
you can use that as a springboard
to learn more about sed.

61
00:02:41.097 --> 00:02:42.300
So let's try a couple of these.

62
00:02:42.300 --> 00:02:43.329
Let's try this right now.

63
00:02:43.329 --> 00:02:47.534
Let's go like this, curl cht.sh/find~exec.

64
00:02:47.534 --> 00:02:48.751
So if you don't know,

65
00:02:48.751 --> 00:02:52.545
when you use find you can actually
even exact something over the find.

66
00:02:52.545 --> 00:02:57.100
Because what ends up happening here is
that if you were to do this exact same

67
00:02:57.100 --> 00:03:00.846
thing right here where instead
of doing exec, to ls dash lh,

68
00:03:00.846 --> 00:03:03.030
you instead typed it out.

69
00:03:03.030 --> 00:03:05.529
It actually is a little bit less
efficient because it has to do this whole

70
00:03:05.529 --> 00:03:06.370
communication thing.

71
00:03:06.370 --> 00:03:08.959
There's a bunch of people
writing about how it can

72
00:03:08.959 --> 00:03:11.733
speed things up like a huge
percentage by using find,

73
00:03:11.733 --> 00:03:14.771
doing the execution as opposed
to typing everything out.

74
00:03:14.771 --> 00:03:16.830
And so it's actually something
that's pretty useful.

75
00:03:16.830 --> 00:03:18.030
At least that's what I've read.

76
00:03:18.030 --> 00:03:21.606
I haven't ever ran into a spot
where I've needed find to be ultra

77
00:03:21.606 --> 00:03:26.378
performant cuz I'm always doing very, very
simple things such as just searching for

78
00:03:26.378 --> 00:03:29.530
a few items within a small confined area.

79
00:03:29.530 --> 00:03:32.520
And of course, find is also
rewritten in rust using Fd, so

80
00:03:32.520 --> 00:03:36.669
if you ever want to do something better,
which is because it's written in rust,

81
00:03:36.669 --> 00:03:40.160
it's better, faster, smoother and
safer, you can use Fd.

82
00:03:40.160 --> 00:03:42.742
I don't currently use Fd but
I hear it's safe and it's fast and

83
00:03:42.742 --> 00:03:45.779
it's awesome and I heard you should
use it because it's written in rust.

84
00:03:45.779 --> 00:03:48.442
All right, so we can curl,
hey, how to use splice?

85
00:03:48.442 --> 00:03:49.780
That's how you use splice.

86
00:03:49.780 --> 00:03:51.016
Hey, you know what I always forget?

87
00:03:51.016 --> 00:03:53.630
What's how do you do a Java scripting or
type script enum?

88
00:03:53.630 --> 00:03:55.060
Here's how you do TypeScript/enum.

89
00:03:55.060 --> 00:03:57.220
Well, how do you do
TypeScript/enum with a string?

90
00:03:57.220 --> 00:04:00.812
Well, here's all the different ways you
can do a TypeScript/enum with a string.

91
00:04:00.812 --> 00:04:02.387
Look at that, here's how you do an enum.

92
00:04:02.387 --> 00:04:05.335
Here's how you do it in this version,
yadi, yada,

93
00:04:05.335 --> 00:04:07.150
a lot of things too fit in there.

94
00:04:07.150 --> 00:04:09.100
So pretty awesome.

95
00:04:09.100 --> 00:04:13.090
I really do like using Cheat Sheet,
it has a lot of answers.

96
00:04:13.090 --> 00:04:15.869
Obviously if you kind of,
there's a point where when you give

97
00:04:15.869 --> 00:04:19.680
it too much information,
it just responds with, I don't know.

98
00:04:19.680 --> 00:04:21.122
I didn't really do it right there, but

99
00:04:21.122 --> 00:04:23.390
you'll get the I don't
know from time to time.

100
00:04:23.390 --> 00:04:25.140
And so there's two things I did there.

101
00:04:25.140 --> 00:04:28.290
Notice that I did this style and
this style.

102
00:04:28.290 --> 00:04:30.934
Whenever you have a curl util,
you can ask for

103
00:04:30.934 --> 00:04:33.335
kind of how to use one of its basic items.

104
00:04:33.335 --> 00:04:39.294
Cheat sheet slash find tilde exec or
if you have like a language thing,

105
00:04:39.294 --> 00:04:45.240
you do cheat sheet slash javascript
slash plus delimited string.

106
00:04:45.240 --> 00:04:48.021
So this just allows you to
splice plus array so meaning,

107
00:04:48.021 --> 00:04:50.380
how do you splice an array?

108
00:04:50.380 --> 00:04:52.946
Awesome, so it's kind of like
you already have Google skills,

109
00:04:52.946 --> 00:04:55.420
you pretty much already
have cheat sheets skills.

110
00:04:55.420 --> 00:04:56.600
And it's pretty straightforward.

111
00:04:56.600 --> 00:05:01.588
And you could also good fun kind of
side fact here is you can also go curl

112
00:05:01.588 --> 00:05:06.155
cheat sheet and you can go golang and
then you can just do learn.

113
00:05:06.155 --> 00:05:10.210
And this will give you everything you
pretty much need to know about golang.

114
00:05:10.210 --> 00:05:13.910
It's gonna I shouldn't here,
let me pipe it into less less,

115
00:05:13.910 --> 00:05:15.923
just gives you a little bit out of time.

116
00:05:15.923 --> 00:05:19.137
It's gonna go like,
hey here's a program beyond hello.

117
00:05:19.137 --> 00:05:21.978
So here's Hello World beyond hello and
then it's gonna go through

118
00:05:21.978 --> 00:05:25.440
show you all the summing, show you how
to multiply learn types, blah blah blah.

119
00:05:25.440 --> 00:05:27.250
Here's all everything you
need to know about types.

120
00:05:27.250 --> 00:05:30.500
And it's gonna go on and on, you get it
returned, all that, really, really nice.

121
00:05:30.500 --> 00:05:33.924
So if you're already pretty good at
programming and you just want to get

122
00:05:33.924 --> 00:05:37.807
a quick understanding of how a different
language works, really awesome little

123
00:05:37.807 --> 00:05:41.680
program just to go, okay, I generally
get how golang does a lot of syntax.

124
00:05:41.680 --> 00:05:43.790
Now it's time for
me to learn it by doing it.

125
00:05:43.790 --> 00:05:47.240
And if I need to learn something, I'll
just do something really, really quick.

126
00:05:47.240 --> 00:05:49.354
So learn is pretty cool.

127
00:05:49.354 --> 00:05:52.790
So, this is what somebody already asked.

128
00:05:52.790 --> 00:05:55.990
Did you just copy and
paste from the terminal?

129
00:05:55.990 --> 00:05:56.880
Yes, I did.

130
00:05:56.880 --> 00:06:01.650
So usability tip, tmux prefix,
open bracket goes into vi mode.

131
00:06:01.650 --> 00:06:04.069
And if you happen to have
these inside your tmuxrc,

132
00:06:04.069 --> 00:06:06.669
which remember your tmuxrc
is in your home directory.

133
00:06:06.669 --> 00:06:08.934
I'll kind of go over
this a little bit more,

134
00:06:08.934 --> 00:06:11.209
just a touch more in the next section or
two.

135
00:06:11.209 --> 00:06:13.710
It will allow you to be able to copy.

136
00:06:13.710 --> 00:06:18.793
And what effectively it's saying is that,
hey, when you're in copy mode in vi,

137
00:06:18.793 --> 00:06:23.151
when you do a copy, I want you to send
it to a program, and I have xclip.

138
00:06:23.151 --> 00:06:26.148
If you're on Mac OS X,
you're gonna have pbcopy.

139
00:06:26.148 --> 00:06:29.448
So you're gonna have to put in
the correct copying command, and then,

140
00:06:29.448 --> 00:06:31.330
it will send it to your clipboard.

141
00:06:31.330 --> 00:06:32.202
So when I do this and

142
00:06:32.202 --> 00:06:35.830
I go prefix open bracket, you'll
notice that I can walk around in here.

143
00:06:35.830 --> 00:06:40.763
And then, I can just use Shift+V and it
will highlight a line, go down, down down,

144
00:06:40.763 --> 00:06:42.586
use y so it's kind of like vim.

145
00:06:42.586 --> 00:06:46.319
And now I've just highlighted those lines,
yanked it to my system clipboard, and

146
00:06:46.319 --> 00:06:47.880
then I can just paste it all I want.

147
00:06:47.880 --> 00:06:52.157
And so in conjunction with cheat sheet and
a little cotton taste thing, it's very,

148
00:06:52.157 --> 00:06:55.610
very easy to just grab the information
you want and yank it around.

149
00:06:55.610 --> 00:06:56.393
It's pretty cool.

150
00:06:56.393 --> 00:07:00.166
I genuinely think it's
a super fun feature.

151
00:07:00.166 --> 00:07:04.066
There's also a lot of other tmux plugins
you can use, which will help you grab

152
00:07:04.066 --> 00:07:07.440
a UIDs out of your terminal,
help you do this, help you to do that.

153
00:07:07.440 --> 00:07:09.060
It's pretty slick.

154
00:07:09.060 --> 00:07:12.948
There's a lot of cool stuff you can do
with tmux that I'm not even talking about,

155
00:07:12.948 --> 00:07:14.880
or I really even use.

156
00:07:14.880 --> 00:07:18.330
So let's do it,
let's build the next script.

157
00:07:18.330 --> 00:07:19.130
I feel like this is good.

158
00:07:19.130 --> 00:07:20.260
Wait, what's the next one?

159
00:07:20.260 --> 00:07:22.080
Let's see Hon,
we have the knowledge this time.

160
00:07:22.080 --> 00:07:23.110
Yeah, we can just build it.

161
00:07:23.110 --> 00:07:25.650
Let's do a little drawing.

162
00:07:25.650 --> 00:07:29.140
That's drawing has gone
just way too complicated.

163
00:07:29.140 --> 00:07:31.170
So complicated no one can even use it.

164
00:07:31.170 --> 00:07:33.220
But let's do this.

165
00:07:33.220 --> 00:07:35.552
We have Cheat Sheet, so
we know, my goodness,

166
00:07:35.552 --> 00:07:38.710
look at how beautiful my handwriting is,
cheat sheet.

167
00:07:38.710 --> 00:07:40.009
Now that is beautiful.

168
00:07:40.009 --> 00:07:42.188
So we have cheat sheet,
we know how it works effectively.

169
00:07:42.188 --> 00:07:44.224
We have a language.

170
00:07:44.224 --> 00:07:45.720
We have a language we can put in here.

171
00:07:47.200 --> 00:07:52.712
Or a corel, a core util and
then here we do slash and

172
00:07:52.712 --> 00:07:57.060
then we do some sort of plus dlm string.

173
00:07:59.210 --> 00:08:01.070
And this one we do tilde.

174
00:08:01.070 --> 00:08:04.400
And then we can do one of the facets,
one of the parts.

175
00:08:04.400 --> 00:08:06.330
I don't know what you call this thing,
query parts.

176
00:08:06.330 --> 00:08:07.880
Whatever you wanna call it.

177
00:08:07.880 --> 00:08:08.455
There we go.
So

178
00:08:08.455 --> 00:08:11.486
those are kind of two
URLs we need to generate.

179
00:08:11.486 --> 00:08:12.657
That should be pretty easy.

180
00:08:12.657 --> 00:08:16.792
And then we can programmatically figure
out, do we want to send languages or

181
00:08:16.792 --> 00:08:17.707
core utils out?

182
00:08:17.707 --> 00:08:20.700
So we could select from some sort of list.

183
00:08:20.700 --> 00:08:23.740
From those two lists, we can know
if it's a language or a core util.

184
00:08:23.740 --> 00:08:25.840
From there, we can then ask for a query.

185
00:08:25.840 --> 00:08:28.990
And from there,
we can send all that information out.

186
00:08:28.990 --> 00:08:32.992
So this should actually be pretty
straightforward to be able to build this

187
00:08:32.992 --> 00:08:37.265
part, the only thing we need after that
is to be able to build the tmux part out.

188
00:08:37.265 --> 00:08:40.520
We're gonna want to actually
create this command and

189
00:08:40.520 --> 00:08:42.990
execute it in say a new window with tmux.

190
00:08:44.351 --> 00:08:48.300
So I think that shouldn't be too hard cuz
we do know how to create a new window.

191
00:08:48.300 --> 00:08:52.070
We know how to change this directory, give
it a name and how to execute a command.

192
00:08:52.070 --> 00:08:58.150
So we should kind of know roughly
everything we need to know to build this.

193
00:08:58.150 --> 00:08:59.705
So let's kind of build this right now.

194
00:08:59.705 --> 00:09:03.313
So I'm gonna go back to temp,
why do I do my key binds for

195
00:09:03.313 --> 00:09:06.854
that previous script in ZSH and
vim and not just tmux?

196
00:09:06.854 --> 00:09:10.734
It makes a lot of sense, why should I
just do Ctrl+A F, boom, I'm running,

197
00:09:10.734 --> 00:09:11.944
it's fantastic here?

198
00:09:11.944 --> 00:09:13.416
I'm gonna create the file first.

199
00:09:13.416 --> 00:09:14.340
We're gonna save the file.

200
00:09:14.340 --> 00:09:18.140
So we have that Cheat Sheet file that
we're about to create all ready to rock.

201
00:09:18.140 --> 00:09:19.310
So why don't I do them?

202
00:09:19.310 --> 00:09:22.400
Well, here's the primary reason,
I'm gonna detach from tmux.

203
00:09:22.400 --> 00:09:25.634
I am not in tmux right now,
whenever I start up a new terminal,

204
00:09:25.634 --> 00:09:27.013
I start up a new terminal.

205
00:09:27.013 --> 00:09:28.107
Am in tmux right now?

206
00:09:28.107 --> 00:09:31.731
No, I'm not in tmux, I'm not always
in tmux at certain points, so

207
00:09:31.731 --> 00:09:36.580
if I can just press Ctrl+F and give myself
the appearance of this fast navigation.

208
00:09:36.580 --> 00:09:38.600
Go to the temp folder that I wanted to.

209
00:09:38.600 --> 00:09:40.752
Now, we're back to where it works.

210
00:09:40.752 --> 00:09:45.744
Now that I'm in vim, Ctrl+F won't
work because it's not with ZSH.

211
00:09:45.744 --> 00:09:51.100
So if I just press Ctrl+F here,
it uses a new window, creation commands.

212
00:09:51.100 --> 00:09:53.295
So that's why it's right here
to create a new window so

213
00:09:53.295 --> 00:09:55.930
it still gives me the appearance
of looking identical.

214
00:09:55.930 --> 00:09:59.330
So when I choose something else,
it will go to that place.

215
00:09:59.330 --> 00:10:03.120
And when I hop back, I'm still back in
vim, and that previous window is gone.

216
00:10:03.120 --> 00:10:06.970
Those are the two points of
interaction that I really do.

217
00:10:06.970 --> 00:10:08.540
And so I feel like that's sufficient.

218
00:10:08.540 --> 00:10:12.860
I almost never open up
vim outside of tmux.

219
00:10:12.860 --> 00:10:15.950
But theoretically,
I should probably do a little bit better.

220
00:10:15.950 --> 00:10:19.460
I mean, I could make it even better, where
I don't even have to be in tmux for Vim.

221
00:10:19.460 --> 00:10:23.130
I could just have like a,
hey, are we in tmux check?

222
00:10:23.130 --> 00:10:25.430
Then do this, else, do that.

223
00:10:25.430 --> 00:10:28.775
Create a new tmux session with all this
name stuff all the way through and

224
00:10:28.775 --> 00:10:29.682
run this command.

225
00:10:29.682 --> 00:10:31.639
We could do it that way.

226
00:10:31.639 --> 00:10:35.999
I just didn't wanna do the tmux one cuz,
hey, I don't wanna press prefix,

227
00:10:35.999 --> 00:10:37.220
I don't know why.

228
00:10:37.220 --> 00:10:40.294
I don't know why I just don't
wanna press prefix and two,

229
00:10:40.294 --> 00:10:44.220
I just wanted it to feel the same
when I'm in Vim or in the terminal.

230
00:10:44.220 --> 00:10:47.360
So that's kinda why I chose what I chose,
personal decision dump.

231
00:10:47.360 --> 00:10:52.690
So I have kind of obtuse reasons for
the reasons why I choose things.

232
00:10:52.690 --> 00:10:57.029
They're kind of just like I just get super
stoked about the way I like things and

233
00:10:57.029 --> 00:11:00.727
then sometimes I look back like
a year later and I go, I am an idiot.

234
00:11:00.727 --> 00:11:03.631
I guess, it's just part of things.

235
00:11:03.631 --> 00:11:04.131
I just get excited.

