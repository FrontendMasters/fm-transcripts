WEBVTT

1
00:00:00.330 --> 00:00:04.599
So let's go back into our stow dr and
I wanna do something, I'm gonna unstow,

2
00:00:04.599 --> 00:00:06.270
I'm gonna unstow tmux.

3
00:00:06.270 --> 00:00:08.470
Now, what do you think happens here?

4
00:00:08.470 --> 00:00:12.400
&gt;&gt; It removes just that symlink,
just the last one.

5
00:00:12.400 --> 00:00:14.860
&gt;&gt; All right, great, great guess I think
that's actually a pretty darn good guess.

6
00:00:14.860 --> 00:00:16.350
That's what I would have guessed as well.

7
00:00:16.350 --> 00:00:18.692
So let's re execute our
find command just to see.

8
00:00:18.692 --> 00:00:22.320
All right, and now you'll notice,
we see nothing inside of config,

9
00:00:22.320 --> 00:00:23.440
it must be a symlink.

10
00:00:23.440 --> 00:00:28.250
Right, so let's Config was a folder.

11
00:00:28.250 --> 00:00:29.600
It is now a symlink.

12
00:00:29.600 --> 00:00:33.928
So it keeps on bringing back as far as it
can, the symlink as far into the tree as

13
00:00:33.928 --> 00:00:38.523
it possibly can, so that was pretty cool
because now I only have one thing stowed,

14
00:00:38.523 --> 00:00:41.330
so it doesn't need to
do the whole file tree.

15
00:00:41.330 --> 00:00:44.570
It only needs to operate
on a very small amount.

16
00:00:44.570 --> 00:00:48.790
And so let's do one more kind of cool
test to really prove this thing out.

17
00:00:48.790 --> 00:00:52.886
Let's go to nvim, let's go into the config
and have a config -file, all right?

18
00:00:52.886 --> 00:00:56.850
So config -file, obviously it's
just a file that's existing.

19
00:00:56.850 --> 00:01:02.720
So let's quit, let's go back, so
our target directory still has.

20
00:01:02.720 --> 00:01:05.550
It still just config
pointing to nvim config.

21
00:01:05.550 --> 00:01:08.860
But now there's multiple
things inside of that folder.

22
00:01:08.860 --> 00:01:11.882
Right, there's both the nvim
folder that has my And

23
00:01:11.882 --> 00:01:15.870
it also has this config file that's
just like hanging around, right?

24
00:01:15.870 --> 00:01:17.170
So let's go like this.

25
00:01:17.170 --> 00:01:20.510
Let's go back into my stow folder,
and that's stow tmux.

26
00:01:20.510 --> 00:01:23.043
Now remember tmux also
has a .config folder, but

27
00:01:23.043 --> 00:01:25.810
it has different sub folders after that.

28
00:01:25.810 --> 00:01:31.425
So when we go down here, and we'd give
it a little ls.la inside of our .config,

29
00:01:31.425 --> 00:01:35.220
what you'll see is that
config file is now a symlink.

30
00:01:35.220 --> 00:01:40.243
It was able to go okay, the symlink was
pointing to just .config in Neovim,

31
00:01:40.243 --> 00:01:43.590
but Neovim has several
sub files within it.

32
00:01:43.590 --> 00:01:46.940
We're gonna go through all of those and
symlink them all out.

33
00:01:46.940 --> 00:01:51.190
So kept the structure of
the .config folder within nvim and

34
00:01:51.190 --> 00:01:53.790
then updated it with tmux.

35
00:01:53.790 --> 00:01:56.683
So this is really cool because it was
able to dynamically be able to take

36
00:01:56.683 --> 00:01:57.640
care of that.

37
00:01:57.640 --> 00:02:02.610
And of course, if I go back in here,
and unstow Neovim, what do we call it?

38
00:02:02.610 --> 00:02:05.423
And then we go back out and
we do our little ls,

39
00:02:05.423 --> 00:02:10.325
it'll just be back now to just
a config symlink pointing to the tmux.

40
00:02:10.325 --> 00:02:15.313
And so, it's really able to kind of move
these things around pretty, it's really,

41
00:02:15.313 --> 00:02:16.535
really slick.

42
00:02:16.535 --> 00:02:20.622
So let's try this, I'm gonna go like
this .config, I'm gonna remove that,

43
00:02:20.622 --> 00:02:23.134
that config, I don't know why I put in.

44
00:02:23.134 --> 00:02:25.535
It's technically a symlink and
I need to have a directory in there.

45
00:02:25.535 --> 00:02:28.840
Now what I'm gonna do is,
I'm actually gonna make .config.

46
00:02:28.840 --> 00:02:33.171
And then not only am I gonna make .config,
I'm gonna put in config file, right?

47
00:02:33.171 --> 00:02:35.960
I'm gonna put it in the config file,
right, there we go.

48
00:02:35.960 --> 00:02:38.560
So inside my config,
I have a file called config.

49
00:02:38.560 --> 00:02:40.330
So I do a find it's right here.

50
00:02:40.330 --> 00:02:45.945
Right and so, let's go back to our
stow directory and let's stow tmux.

51
00:02:45.945 --> 00:02:48.525
Now, what do you think
just happened this time?

52
00:02:51.025 --> 00:02:53.360
Now before if you remember,

53
00:02:53.360 --> 00:02:59.475
it converted the config folder into
a symlink, will it do it this time?

54
00:02:59.475 --> 00:03:03.040
Well the reality of the situation
is that no it won't,

55
00:03:03.040 --> 00:03:06.340
because that folder was already created.

56
00:03:06.340 --> 00:03:11.240
It cannot operate on a folder that
has things in it that aren't just

57
00:03:11.240 --> 00:03:13.030
purely symlinks.

58
00:03:13.030 --> 00:03:15.080
So it's gonna go okay,
this is just part of the path.

59
00:03:15.080 --> 00:03:17.620
That person wants this to be a real path.

60
00:03:17.620 --> 00:03:20.536
I'm not gonna just start
deleting paths for you,

61
00:03:20.536 --> 00:03:24.710
I will only remove symlink that makes
sense and so it does it right here.

62
00:03:24.710 --> 00:03:28.914
So it's gonna take that .config,
it's gonna keep that around and

63
00:03:28.914 --> 00:03:32.380
then just simply symlink
out to that tmux folder.

64
00:03:32.380 --> 00:03:35.389
Awesome, it looks like it's
working really, really well but

65
00:03:35.389 --> 00:03:36.820
there are still more things.

66
00:03:36.820 --> 00:03:39.510
So let's go back in here,
let's open up this, I call the test file.

67
00:03:39.510 --> 00:03:44.020
Let's rename test file to config,
so there we go up.

68
00:03:44.020 --> 00:03:46.580
Actually in here that's the one we
want to rename to config, there we go.

69
00:03:48.160 --> 00:03:52.532
So awesome, so now if we go in
here you'll notice that Neovim

70
00:03:52.532 --> 00:03:56.490
has a .config file folder
with a config file.

71
00:03:56.490 --> 00:03:59.667
And if I go back out here and
I do the exact same thing in here,

72
00:03:59.667 --> 00:04:03.340
you'll notice that our config
also has the exact same setup.

73
00:04:03.340 --> 00:04:07.730
So what happens now when
we try to stow Neovim?

74
00:04:07.730 --> 00:04:09.841
Now what's gonna happen?

75
00:04:09.841 --> 00:04:13.180
Well, when you try to run it,
it says whoa.

76
00:04:13.180 --> 00:04:16.152
I can't do that because
there's a real file there,

77
00:04:16.152 --> 00:04:19.470
I can't mess with things
that aren't real files.

78
00:04:19.470 --> 00:04:22.690
And so
stow will try to be as smart as possible.

79
00:04:22.690 --> 00:04:26.998
It will try to operate in such
a way that it doesn't screw you but

80
00:04:26.998 --> 00:04:32.435
if you have conflicting tree structures,
it won't be able to operate.

81
00:04:32.435 --> 00:04:33.835
And so here's kind of that example.

82
00:04:33.835 --> 00:04:35.245
So that's how I do it.

83
00:04:35.245 --> 00:04:41.232
So when I'm in my Ansible folder,
let's go here, let's go .files.

84
00:04:41.232 --> 00:04:45.591
You'll notice that I literally
go to my .files repo,

85
00:04:45.591 --> 00:04:49.372
cd to my .files repo and execute ubuntu.

86
00:04:49.372 --> 00:04:53.556
So let me just open
that up really quickly,

87
00:04:53.556 --> 00:04:57.282
.files then ubuntu, there we go.

88
00:04:57.282 --> 00:05:01.622
I have a bunch of folders that I have and
I just simply execute install.

89
00:05:01.622 --> 00:05:04.956
Install all, install does,
it just goes through everything that

90
00:05:04.956 --> 00:05:08.360
is a part of my stowed folders and
just unstow them and resells them.

91
00:05:08.360 --> 00:05:11.480
I know you can actually do it
both in one in a singular action.

92
00:05:11.480 --> 00:05:13.710
I was just doing this
during my testing times.

93
00:05:13.710 --> 00:05:18.235
But nonetheless, it goes through and
it just simply install these.

94
00:05:18.235 --> 00:05:20.910
So my answer will script
calls my ubuntu script,

95
00:05:20.910 --> 00:05:24.525
which sets all the stow folders
that it needs to be stowed.

96
00:05:24.525 --> 00:05:29.984
And then I just stow them one at a time
from my .files repo, which means

97
00:05:29.984 --> 00:05:36.020
that my entire home directory then gets
everything, so I can cut out my tmux.

98
00:05:36.020 --> 00:05:41.313
You can see my tmux config is actually

99
00:05:41.313 --> 00:05:45.800
a symlink okay, [INAUDIBLE].

100
00:05:45.800 --> 00:05:48.992
There we go, you can see right away
that it's actually pointing into

101
00:05:48.992 --> 00:05:51.960
my .files into my tmux
folder into my tmux.

102
00:05:51.960 --> 00:05:55.570
So it actually goes and it knows how
to operate on my home directory.

103
00:05:55.570 --> 00:05:59.555
So that means when I execute Ansible, it
makes sure all these things are there for

104
00:05:59.555 --> 00:06:03.013
me and when I did it inside that
Docker container, you'd see the exact

105
00:06:03.013 --> 00:06:07.480
same setup because I'm using that program
to make sure everything is up to date.

106
00:06:07.480 --> 00:06:10.360
Now, this seems like a lot of work, right?

107
00:06:10.360 --> 00:06:14.692
So I think a lot of you go,
well you know my script, it mostly works,

108
00:06:14.692 --> 00:06:17.595
it's good enough, stow is better, right?

109
00:06:17.595 --> 00:06:20.455
Stow is just in reality
better than your script.

110
00:06:20.455 --> 00:06:24.565
It just knows how to do all these things
and it's really, really good at it.

111
00:06:24.565 --> 00:06:27.839
And so, I like using stow because I
don't have to maintain the script,

112
00:06:27.839 --> 00:06:29.825
but I think there's more to it.

113
00:06:29.825 --> 00:06:32.905
Okay, I think there's more to it
that's gonna make it even better.

114
00:06:32.905 --> 00:06:36.105
So hopefully you're feeling the tingle
right now, you're feeling the excitement.

115
00:06:36.105 --> 00:06:39.660
You're very like, man,
I can't believe this is all available.

116
00:06:39.660 --> 00:06:42.209
My setup of a system and
my maintenance of a system,

117
00:06:42.209 --> 00:06:44.240
have now become significantly easier.

118
00:06:44.240 --> 00:06:47.796
That's really what I'm hoping you
walk away with in section one,

119
00:06:47.796 --> 00:06:51.735
is that all the worst parts about
development which is really system setup

120
00:06:51.735 --> 00:06:53.200
going to a new company.

121
00:06:53.200 --> 00:06:57.365
Which by the way, little pro tip,
you're at a company right now if you are,

122
00:06:57.365 --> 00:07:01.537
make an Ansible install for your team and
share with your team boom promotion

123
00:07:01.537 --> 00:07:04.360
millions of dollars yacht,
it'll be fantastic.

124
00:07:04.360 --> 00:07:06.670
People just think you're
the smartest person in the universe.

125
00:07:06.670 --> 00:07:09.461
Because you're now just saved
your team onboarding, right?

126
00:07:09.461 --> 00:07:11.711
When it's time to onboard
hey Ansible pull,

127
00:07:11.711 --> 00:07:14.590
it installs everything your systems ready.

128
00:07:14.590 --> 00:07:15.770
Awesome, right?

129
00:07:15.770 --> 00:07:18.100
It's gonna spread like wildfire.

130
00:07:18.100 --> 00:07:21.685
Alright and by the way I opened up vim,
and you're probably thinking,

131
00:07:21.685 --> 00:07:23.820
how's he flying so fast during vim?

132
00:07:23.820 --> 00:07:25.950
Well, guess what?
I did a course on it like the second time

133
00:07:25.950 --> 00:07:27.094
I mentioned it, come on.

134
00:07:27.094 --> 00:07:29.860
It's ridiculous, it's like I've
planned this out to be such a shill.

