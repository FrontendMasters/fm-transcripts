WEBVTT

1
00:00:00.230 --> 00:00:01.670
Now we need to do something with this,
right?

2
00:00:01.670 --> 00:00:04.980
We want to capture this value because
we want to work on this value.

3
00:00:04.980 --> 00:00:05.880
So let's go like this.

4
00:00:05.880 --> 00:00:08.547
Let's call it session and
we put little, some people like text,

5
00:00:08.547 --> 00:00:11.400
some people like dollar sign,
I don't really know what I like.

6
00:00:11.400 --> 00:00:15.558
But effectively anything inside of
a dollar, parentheses is executed and

7
00:00:15.558 --> 00:00:18.970
the standard out is then
passed into this variable.

8
00:00:18.970 --> 00:00:19.830
This is how you can think about it.

9
00:00:19.830 --> 00:00:24.447
So since SZF, whatever we select,
what we passed out,

10
00:00:24.447 --> 00:00:27.800
we now have it saved as session.

11
00:00:27.800 --> 00:00:31.550
There's another fun thing right here,
which is something called basename.

12
00:00:31.550 --> 00:00:34.630
If you don't know what basename is,
it's another core util.

13
00:00:34.630 --> 00:00:37.994
Here we'll go like this, session name,
oops, space, session_name=,

14
00:00:37.994 --> 00:00:40.913
we'll do another one of these
little dollar signs and go session.

15
00:00:40.913 --> 00:00:46.190
What this effectively does, I think you
probably should have that around there.

16
00:00:46.190 --> 00:00:51.150
Oops, effectively what happens right here
is it's gonna take whatever's passed in,

17
00:00:51.150 --> 00:00:53.294
like a file, and it's going to take,

18
00:00:53.294 --> 00:00:57.730
it's like the final thing instead
of its file path, it's basename.

19
00:00:57.730 --> 00:01:02.363
Awesome, so now, not only do I have the
full absolute path to what I'm trying to

20
00:01:02.363 --> 00:01:05.920
work towards,
I also have just the folder's name.

21
00:01:05.920 --> 00:01:07.390
This is fantastic, right?

22
00:01:07.390 --> 00:01:11.380
And so to prove it, let's go like this,
echo session name, right?

23
00:01:11.380 --> 00:01:12.440
Let's go.
Wait, where are you?

24
00:01:12.440 --> 00:01:14.350
Session_name, there we go.

25
00:01:14.350 --> 00:01:14.937
Awesome.

26
00:01:14.937 --> 00:01:16.200
Go back here.

27
00:01:16.200 --> 00:01:17.670
Let's re-execute this one.

28
00:01:17.670 --> 00:01:19.010
Let's just select ansible.

29
00:01:19.010 --> 00:01:22.610
Notice adjusted .ansible,
the folder that I did have right there.

30
00:01:22.610 --> 00:01:24.480
Awesome, this is exactly what we wanted,
right?

31
00:01:24.480 --> 00:01:27.390
We are now finding the thing.

32
00:01:27.390 --> 00:01:31.252
So we have this part done, which I'd argue
is probably the harder part of the things

33
00:01:31.252 --> 00:01:34.390
to do if you didn't know what
you're doing is grabbing this.

34
00:01:34.390 --> 00:01:35.670
We are fuzzy finding.

35
00:01:35.670 --> 00:01:37.816
We're awesome.
Now all we need to do is actually

36
00:01:37.816 --> 00:01:41.260
just create the tmux utility to do this.

37
00:01:41.260 --> 00:01:45.360
So, obviously I forgot to go
forward in our little script.

38
00:01:45.360 --> 00:01:46.920
Let's create the script, right.

39
00:01:46.920 --> 00:01:47.870
I can't go to the next part.

40
00:01:47.870 --> 00:01:48.602
Don't look at the next part.

41
00:01:48.602 --> 00:01:50.940
All right, so let's go back to our script.

42
00:01:50.940 --> 00:01:52.820
Awesome, let's delete this line.

43
00:01:52.820 --> 00:01:55.788
Now instead what we need to do is
we need to figure out some things

44
00:01:55.788 --> 00:01:57.600
about tmux, right?

45
00:01:57.600 --> 00:02:01.076
One thing we can do is we can do this,
we can ask tmux,

46
00:02:01.076 --> 00:02:03.810
do you already have this session?

47
00:02:03.810 --> 00:02:05.930
So a fun little thing
is called has-session.

48
00:02:05.930 --> 00:02:08.920
So tmux has-session, and
you can provide it a target, so

49
00:02:08.920 --> 00:02:11.880
that I can just call it session_name,
right?

50
00:02:11.880 --> 00:02:12.650
There we go.

51
00:02:12.650 --> 00:02:15.047
This will return to me
zero if it has it or

52
00:02:15.047 --> 00:02:20.770
an error if it doesn't have it, which
means that I can do a if not has-session.

53
00:02:20.770 --> 00:02:24.173
Then I should be able to jump in here and
go, okay, it doesn't have the session,

54
00:02:24.173 --> 00:02:25.388
let's create the session.

55
00:02:25.388 --> 00:02:29.095
tmux new-session, right?

56
00:02:29.095 --> 00:02:30.445
And then I can give it a name.

57
00:02:30.445 --> 00:02:33.515
Let's give it the name,
session_name, right?

58
00:02:33.515 --> 00:02:36.489
And then we can give it the directory,
which remember,

59
00:02:36.489 --> 00:02:38.463
that's what we selected from find.

60
00:02:38.463 --> 00:02:39.204
So session, yeah.

61
00:02:39.204 --> 00:02:40.585
Yeah, there we go.

62
00:02:40.585 --> 00:02:42.925
We get those two things, and
of course, we need the detach it.

63
00:02:42.925 --> 00:02:44.925
So if we're in tmux, we're not exploding.

64
00:02:44.925 --> 00:02:46.905
You can't net sessions,
all that kind of stuff.

65
00:02:46.905 --> 00:02:48.000
Awesome, we have it.

66
00:02:48.000 --> 00:02:51.502
So now by the time we're up to this point,
we know for a fact,

67
00:02:51.502 --> 00:02:54.400
we have a tmux session
with the given name.

68
00:02:54.400 --> 00:02:56.470
And since we've already checked,
we knew it wasn't there.

69
00:02:56.470 --> 00:02:58.250
We're guaranteed right here to have it.

70
00:02:58.250 --> 00:03:04.690
So we just need to do a little
switch-client -t session_name, right?

71
00:03:04.690 --> 00:03:05.520
There we go.

72
00:03:05.520 --> 00:03:09.830
This alone will just make everything work,
right?

73
00:03:09.830 --> 00:03:11.804
Now obviously I am making some
assumptions in the script.

74
00:03:11.804 --> 00:03:14.590
I'm trying not to get
it super complicated.

75
00:03:14.590 --> 00:03:19.180
But I am assuming that we're already in
tmux and running for this script to work.

76
00:03:19.180 --> 00:03:21.480
Now, you don't have to have it that way.

77
00:03:21.480 --> 00:03:24.671
I'm just trying to keep things
a little bit more simple so

78
00:03:24.671 --> 00:03:28.340
we don't overly complicate it
with every possible ending here.

79
00:03:28.340 --> 00:03:28.900
So there we go.

80
00:03:28.900 --> 00:03:30.050
So we made a very simple script.

81
00:03:30.050 --> 00:03:33.080
So I think all these commands are things
we've pretty much typed in except for

82
00:03:33.080 --> 00:03:34.220
has-session.

83
00:03:34.220 --> 00:03:36.570
So all of these should be
very familiar at this point.

84
00:03:36.570 --> 00:03:38.150
We know how new-session works.

85
00:03:38.150 --> 00:03:40.981
We know that switch-client allows you
to programmatically switch clients

86
00:03:40.981 --> 00:03:41.810
to a session_name.

87
00:03:41.810 --> 00:03:44.080
We know you can only
have one session_name,

88
00:03:44.080 --> 00:03:46.750
the session_names have to be unique,
right?

89
00:03:46.750 --> 00:03:50.130
So we're using our folders for
uniqueness of session_names.

90
00:03:50.130 --> 00:03:54.640
Now, there are some extra rules around
this that we haven't quite done yet.

91
00:03:54.640 --> 00:03:57.370
I should actually probably
do that right now anyways.

92
00:03:57.370 --> 00:03:59.170
Session_names do not contain periods.

93
00:03:59.170 --> 00:04:01.090
It can only contain certain
amount of characters.

94
00:04:01.090 --> 00:04:02.084
And there's a fun little
programme called tr.

95
00:04:02.084 --> 00:04:04.670
I know I'm kinda going
a little off the rails here.

96
00:04:04.670 --> 00:04:05.280
So check this out.

97
00:04:05.280 --> 00:04:07.730
If I go foo,
I can actually replace with tr.

98
00:04:07.730 --> 00:04:12.131
Anything that isn't o, I can turn
it into a 1, so f11 instead of foo.

99
00:04:12.131 --> 00:04:14.411
tr just simply takes in the standard end,
and

100
00:04:14.411 --> 00:04:17.591
if it sees any of these characters
specified in the first part,

101
00:04:17.591 --> 00:04:21.024
it replaces them with their
corresponding ones in the second part.

102
00:04:21.024 --> 00:04:23.892
To make this more obvious,
let's put f right here and

103
00:04:23.892 --> 00:04:25.886
put 2 right here, 211, right?

104
00:04:25.886 --> 00:04:28.120
It makes a lot of sense.

105
00:04:28.120 --> 00:04:29.327
tr is fantastic and

106
00:04:29.327 --> 00:04:34.160
I use it surprisingly more than I ever
thought I would actually have used it.

107
00:04:34.160 --> 00:04:36.330
Awesome, so let's go back here.

108
00:04:36.330 --> 00:04:41.860
So anytime we see a period,
let's replace it with an underscore.

109
00:04:41.860 --> 00:04:42.370
There we go.

110
00:04:42.370 --> 00:04:47.130
Awesome, so now we can make sure that we
have valid session names at any point.

111
00:04:47.130 --> 00:04:47.680
Perfect.

112
00:04:47.680 --> 00:04:49.390
So now let's close this.

113
00:04:49.390 --> 00:04:51.760
And now let's re-execute our sessionizer.

114
00:04:51.760 --> 00:04:54.130
So remember, it's gonna give
us all these different names.

115
00:04:54.130 --> 00:04:55.230
And we should be able to go like this.

116
00:04:55.230 --> 00:04:56.590
Let's go to music.

117
00:04:56.590 --> 00:04:59.616
And now we've created
a session called Music,

118
00:04:59.616 --> 00:05:02.197
with one window in the Music directory.

119
00:05:02.197 --> 00:05:05.050
That's pretty awesome, right?

120
00:05:05.050 --> 00:05:09.310
We just did that so dang fast,
it went exactly where we wanted to do it.

121
00:05:09.310 --> 00:05:11.942
And we still have our previous one that
we are just in, whatever that one is.

122
00:05:11.942 --> 00:05:14.640
We have way too many
sessions open at this point.

123
00:05:14.640 --> 00:05:16.830
We are right here in tmp, right?

124
00:05:16.830 --> 00:05:19.580
That's where we're, right here
we just got done executing this.

125
00:05:19.580 --> 00:05:20.960
And awesome, it worked.

126
00:05:20.960 --> 00:05:23.350
So let's jump back to where we were.

127
00:05:23.350 --> 00:05:26.820
And now you'll notice something,
can't find session : Music.

128
00:05:26.820 --> 00:05:28.290
What just happened there?

129
00:05:28.290 --> 00:05:30.380
Well, remember how we did talk for
a second about the redirect.

130
00:05:30.380 --> 00:05:33.155
I probably should have given
a slightly better answer here.

131
00:05:33.155 --> 00:05:35.758
Yeah, what's happening is
that when it can't find it,

132
00:05:35.758 --> 00:05:38.860
it actually prints out can't
find it to the standard error.

133
00:05:38.860 --> 00:05:41.803
So I can actually take 2 and
just pipe it to a place called dev null,

134
00:05:41.803 --> 00:05:44.370
which just means pipe it
to the garbage can, right?

135
00:05:44.370 --> 00:05:46.650
Pipe it to Michael Scott's filing cabinet.

136
00:05:46.650 --> 00:05:49.130
It's exactly where it wants to be
[SOUND] and then we can do it again,

137
00:05:49.130 --> 00:05:50.964
let's open up a new place
that we haven't done.

138
00:05:50.964 --> 00:05:52.630
How about documents?

139
00:05:52.630 --> 00:05:54.970
So now let's go back from where we came.

140
00:05:54.970 --> 00:05:57.220
You'll notice no more error,
everything's great.

141
00:05:57.220 --> 00:05:59.000
Our script is amazing.

142
00:05:59.000 --> 00:06:00.070
It's not littering.

143
00:06:00.070 --> 00:06:01.620
It's fantastic.

144
00:06:01.620 --> 00:06:02.631
This is just exciting.

145
00:06:02.631 --> 00:06:03.326
Is this not just exciting?

146
00:06:03.326 --> 00:06:05.865
I hope that you guys feel
how exciting that was,

147
00:06:05.865 --> 00:06:08.863
we were able to create these
sessions with no problems.

148
00:06:08.863 --> 00:06:11.108
But there is obviously some
disconnections here, right?

149
00:06:11.108 --> 00:06:14.800
How do you execute this program
in a reliable and easy way?

150
00:06:14.800 --> 00:06:16.671
Right now it's just in
some sort of folder,

151
00:06:16.671 --> 00:06:20.230
we actually have to navigate there and
execute it, that's not that great.

152
00:06:20.230 --> 00:06:23.960
When I execute it and I go somewhere say,
ansible, how do you go back?

153
00:06:23.960 --> 00:06:26.592
What's the easy way to go
back other than doing w, and

154
00:06:26.592 --> 00:06:29.180
trying to search through all these things,
right?

155
00:06:29.180 --> 00:06:34.530
But we're getting pretty close to
making the script really good, right?

