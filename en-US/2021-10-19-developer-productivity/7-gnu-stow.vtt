WEBVTT

1
00:00:00.000 --> 00:00:01.734
I'm gonna primarily focus on stow and

2
00:00:01.734 --> 00:00:05.330
the reason why I'm focusing on stow
is that it's incredibly simple.

3
00:00:05.330 --> 00:00:09.851
I really wanted this as part of my
requirements because Ansible is really

4
00:00:09.851 --> 00:00:13.716
complex it can do a lot of things
it can vault, it can install.

5
00:00:13.716 --> 00:00:18.701
It can do my SSH key, awesomeness, it can
also become me, can do sudo operate like

6
00:00:18.701 --> 00:00:22.840
it just, it's built to really
get my system up and running.

7
00:00:22.840 --> 00:00:25.088
So I need something that's
just really simple and so

8
00:00:25.088 --> 00:00:27.040
I wanted to have like
the opposite side here.

9
00:00:28.260 --> 00:00:32.857
Stow only manages symlinks that is it
are soft links as they may be called right

10
00:00:32.857 --> 00:00:33.360
there.

11
00:00:33.360 --> 00:00:35.833
You can also run it on
different operating system.

12
00:00:35.833 --> 00:00:39.019
Meaning that you actually have the choice
of what you do and don't stow.

13
00:00:39.019 --> 00:00:42.235
So it actually does allow you to have
like, hey, when I sell and it's a Mac,

14
00:00:42.235 --> 00:00:45.680
I want to know these things when I still
and it's Ubuntu I want to do these things.

15
00:00:45.680 --> 00:00:48.600
If it's Windows subsystem,
I wanna stow it this way, right?

16
00:00:48.600 --> 00:00:51.210
So you have different
options that you can do.

17
00:00:51.210 --> 00:00:54.791
So to follow along,
I do recommend you if you want to,

18
00:00:54.791 --> 00:00:57.850
you should try following along.

19
00:00:57.850 --> 00:01:01.823
Apt install stow, brew installed stow,
if you're using Arch Linux you probably

20
00:01:01.823 --> 00:01:04.080
already have stow or
know what you're doing.

21
00:01:04.080 --> 00:01:06.712
So I'm just gonna just assume
you've already, by the way me,

22
00:01:06.712 --> 00:01:09.630
you're better than me,
I get it, you use Arch Linux.

23
00:01:09.630 --> 00:01:12.471
By the way, some friends and
I did start a group called FAAL,

24
00:01:12.471 --> 00:01:14.340
father's against Arch Linux.

25
00:01:14.340 --> 00:01:17.042
So if you use it, I just wanna let
that I'm against it, all right,

26
00:01:17.042 --> 00:01:18.160
that's enough of that.

27
00:01:18.160 --> 00:01:20.980
So I'm gonna first jump over
to the greatest program of

28
00:01:20.980 --> 00:01:24.100
all time commonly referred to as GIMP,
here we go.

29
00:01:24.100 --> 00:01:30.920
And this is obviously the superior drawing
program, none other are as good as GIMP.

30
00:01:30.920 --> 00:01:34.010
For those that do know anything about it,
it gets made fun of all the time.

31
00:01:34.010 --> 00:01:36.490
All right, so here we go,
everything looks good.

32
00:01:36.490 --> 00:01:40.630
So when it comes to stowing,
stowing operates on directories and files,

33
00:01:40.630 --> 00:01:44.830
so I'm gonna kind of create this
imaginary directory structure.

34
00:01:44.830 --> 00:01:49.070
Let's just say I have something called
A that has a folder that has B in it.

35
00:01:49.070 --> 00:01:52.480
B is a folder that has C in it and
C as a folder.

36
00:01:52.480 --> 00:01:55.854
Say some file now you're probably
gonna first ask yourself, well,

37
00:01:55.854 --> 00:01:59.587
you have really great handwriting for
using a mouse, you're right, I do.

38
00:01:59.587 --> 00:02:03.763
Second, who names their folders A,
B, and C, but for the sake of this,

39
00:02:03.763 --> 00:02:05.670
that's what we're doing.

40
00:02:05.670 --> 00:02:08.990
So I want you to have your
attention right here on B.

41
00:02:08.990 --> 00:02:14.980
Now B is gonna be where we're at, we're
gonna execute stow within this directory.

42
00:02:14.980 --> 00:02:21.400
So B is my stow directory,
it's gonna go and attempt to stow C.

43
00:02:21.400 --> 00:02:23.550
So C is gonna be the thing that is stowed.

44
00:02:23.550 --> 00:02:27.819
B is the stow directory and where is it
gonna get stowed to now I know obviously

45
00:02:27.819 --> 00:02:32.050
you don't you're probably a little
confused on the terminology.

46
00:02:32.050 --> 00:02:33.300
What does stowing mean?

47
00:02:33.300 --> 00:02:34.164
It'll become clear,

48
00:02:34.164 --> 00:02:37.550
I just wanted to make sure you first
understand where things are going.

49
00:02:37.550 --> 00:02:42.270
Lastly, it's gonna be going to A, so
A is what is referred to as our target

50
00:02:42.270 --> 00:02:47.700
directory, B is our store directory,
and C are the things we're storing.

51
00:02:47.700 --> 00:02:51.230
So let's kind of do this maybe in
a little bit more sensible way.

52
00:02:51.230 --> 00:02:54.120
I'll actually give some real examples,
so hopefully this becomes obvious.

53
00:02:54.120 --> 00:02:57.202
So when I use the term target directory,
you know what I mean,

54
00:02:57.202 --> 00:03:01.540
it means the parent of the directory
that we're executing stow in.

55
00:03:01.540 --> 00:03:05.110
So let's go back here, let's go to
I believe I have it in my Ansible.

56
00:03:05.110 --> 00:03:07.020
Let's just make sure it's not here,

57
00:03:07.020 --> 00:03:10.430
here I'm going to rm rf don't
pretend it's not there, all right?

58
00:03:10.430 --> 00:03:14.730
So we're gonna make a directory
called target directory, right?

59
00:03:14.730 --> 00:03:16.640
So I'm gonna CD into my target directory.

60
00:03:16.640 --> 00:03:20.701
I'm then gonna make a directory
that is gonna be called my,

61
00:03:20.701 --> 00:03:22.663
let's call it still or not.

62
00:03:22.663 --> 00:03:26.364
Yeah, our stow-dr, and so
I'm gonna go into my stow-dr,

63
00:03:26.364 --> 00:03:29.350
and now I'm gonna make
a directory called nvim.

64
00:03:29.350 --> 00:03:30.390
How does that sound?

65
00:03:30.390 --> 00:03:33.490
There we go, so
now I have a couple directories.

66
00:03:33.490 --> 00:03:37.166
And so now we're into a place where I'm
in a place called target directory,

67
00:03:37.166 --> 00:03:40.400
stow directory, and
there's a subfolder called nvim.

68
00:03:40.400 --> 00:03:43.940
So inside of nvim, let's just have
a simple file called testfile.

69
00:03:43.940 --> 00:03:47.170
And in it, I'm gonna go hello,
that's it, there we go.

70
00:03:47.170 --> 00:03:49.382
So now if I go find starting right here,

71
00:03:49.382 --> 00:03:54.575
you'll notice that we have the nvim sub
folder with a single file called testfile.

72
00:03:54.575 --> 00:03:56.969
And if we look it up my
present working directory,

73
00:03:56.969 --> 00:04:00.155
we are currently in target directory,
stow directory.

74
00:04:00.155 --> 00:04:03.239
So now if I call stow,
which is the program, we just got done

75
00:04:03.239 --> 00:04:07.610
installing either using brew, or apt,
or Pac-Man, or whatever you have.

76
00:04:07.610 --> 00:04:10.284
Some next OS person is gonna stand
up now neckbeard super long,

77
00:04:10.284 --> 00:04:13.014
tell me about the glories of next,
I don't wanna hear about it.

78
00:04:13.014 --> 00:04:19.230
So anyways, so we have stow and
we are going to go stow nvim, that's it.

79
00:04:19.230 --> 00:04:24.140
So no output happened, if I go find here,
nothing seemed to change.

80
00:04:24.140 --> 00:04:25.580
So what changed?

81
00:04:25.580 --> 00:04:29.682
Well, if you remember, if you recall,
we have a target directory,

82
00:04:29.682 --> 00:04:32.090
which is the parents directory.

83
00:04:32.090 --> 00:04:35.690
So let's go back into here, and let's
back it up, and let's find right here.

84
00:04:35.690 --> 00:04:36.960
So what are you gonna see in here?

85
00:04:36.960 --> 00:04:39.310
Well, you're gonna see something
that's kind of interesting.

86
00:04:39.310 --> 00:04:44.180
We now have something called
testfile in the target directory.

87
00:04:44.180 --> 00:04:44.920
So what is testfile?

88
00:04:44.920 --> 00:04:49.890
So let's do a little ls-la, you'll
notice that testfile, A, it's a symlink.

89
00:04:49.890 --> 00:04:54.004
So if you're wondering what a symlink is,
that's what a symlink is, so

90
00:04:54.004 --> 00:04:55.400
it's a shortcut.

91
00:04:55.400 --> 00:05:01.400
So you'll see that the test file was just
newly added, I did not add that, stow did.

92
00:05:01.400 --> 00:05:07.530
Stow took the folder that I stowed and
put it in to the target directory.

93
00:05:07.530 --> 00:05:11.144
And what it did is it used symlinks
meaning it didn't copy over the file,

94
00:05:11.144 --> 00:05:13.950
it's just simply pointing
to the previous one.

95
00:05:13.950 --> 00:05:17.800
So let's go back to our show directory and
let's open it back up,

96
00:05:17.800 --> 00:05:20.230
we can see there's the test file.

97
00:05:20.230 --> 00:05:22.516
And so let's add another file,
but this time,

98
00:05:22.516 --> 00:05:27.360
let's add a directory let's pretend like
we're actually creating a nvim config.

99
00:05:27.360 --> 00:05:28.769
So let's do the dot config,

100
00:05:28.769 --> 00:05:32.810
let's go into here and do nvim, and
then inside of here let's do our init.vim.

101
00:05:32.810 --> 00:05:37.598
So this is normally where you would
do it if you were on your desktop, or

102
00:05:37.598 --> 00:05:42.360
on your home directory,
you do dot config, nvim and it dot nvim.

103
00:05:42.360 --> 00:05:46.925
So let's go in here and I have this
nice little dot file right here, so

104
00:05:46.925 --> 00:05:48.790
let's back it up.

105
00:05:48.790 --> 00:05:53.070
All right, so let's go back into
our stow directory and go find.

106
00:05:53.070 --> 00:05:56.750
So this is now our new nvim test folder,
it has nvim.

107
00:05:56.750 --> 00:06:02.082
It has that same test file that did exist,
but it also has a config directory,

108
00:06:02.082 --> 00:06:07.580
a nvim directory, and an init.vim
within the nvim.config directories.

109
00:06:07.580 --> 00:06:12.480
So now when I call stow, and I do nvim,
what do you think is gonna happen?

110
00:06:12.480 --> 00:06:15.170
So let's go back and let's do a find here.

111
00:06:15.170 --> 00:06:18.940
Now find remember,
find it does not follow symlinks.

112
00:06:18.940 --> 00:06:22.016
So what you'll see is that
we do have a test file and

113
00:06:22.016 --> 00:06:24.670
we do have a config folder,
but that is it.

114
00:06:24.670 --> 00:06:29.271
So when I go ls-la you'll notice that the
config folder just points to the config

115
00:06:29.271 --> 00:06:31.270
folder in the nvim folder.

116
00:06:31.270 --> 00:06:35.644
It effectively found the lowest
amount within the file tree that it

117
00:06:35.644 --> 00:06:38.935
could symlink to, and
just simply symlinked it.

118
00:06:38.935 --> 00:06:42.365
It didn't go all the way down,
it didn't create all the folders,

119
00:06:42.365 --> 00:06:45.322
it just went as low as possible and
created that symlink.

120
00:06:45.322 --> 00:06:48.018
Now obviously this could be
a little bit problematic, so

121
00:06:48.018 --> 00:06:51.690
let's see what happens because there
has to be a problem here, right?

122
00:06:51.690 --> 00:06:53.688
So let's go back into
my store directory and

123
00:06:53.688 --> 00:06:56.570
let's create a new one called
tmux up CS that's a file.

124
00:06:56.570 --> 00:06:59.620
We don't want a file,
we want a directory tmux, there we go.

125
00:06:59.620 --> 00:07:02.700
We have a directory called tmux, and
inside of the directory called tmux.

126
00:07:02.700 --> 00:07:05.300
Let's have another dot config folder,
right, so

127
00:07:05.300 --> 00:07:07.600
this now creates a collision, right?

128
00:07:07.600 --> 00:07:12.408
And inside of here, let's have tmux, and
then we can ask them like tmux dot config,

129
00:07:12.408 --> 00:07:13.854
right, there we go.

130
00:07:13.854 --> 00:07:16.970
That's the directory,
let's get rid of that, tmux conf, right?

131
00:07:16.970 --> 00:07:20.400
All right, there we go,
now we can just put it I don't know.

132
00:07:20.400 --> 00:07:23.440
Hello, we'll put hello again,
hello from tmux conf.

133
00:07:23.440 --> 00:07:28.175
Just to make sure just in case we wanna
look at that, so now let's stoke tmux.

134
00:07:28.175 --> 00:07:31.125
Now it didn't say any errors,
it does create the symlinks, but

135
00:07:31.125 --> 00:07:32.630
where was the real question?

136
00:07:32.630 --> 00:07:33.960
Where does it create the symlinks?

137
00:07:33.960 --> 00:07:39.830
So now I just did stow tmux and
previously we had a config symlink here.

138
00:07:39.830 --> 00:07:41.470
What should the result be?

139
00:07:43.190 --> 00:07:46.435
It's really good to be able to kind
of reason about this ahead of time,

140
00:07:46.435 --> 00:07:49.300
so that you can really understand
the program and how it runs.

141
00:07:49.300 --> 00:07:52.674
So we're gonna kinda go with like
the scientific method here we're just

142
00:07:52.674 --> 00:07:53.320
observing.

143
00:07:53.320 --> 00:07:56.608
We're executing and observing cuz I could
just tell you exactly what's gonna happen,

144
00:07:56.608 --> 00:07:58.610
but I think it's better
to learn by watching.

145
00:07:58.610 --> 00:08:02.801
Let's just find out, I'm gonna back
it up and make your guests right now

146
00:08:02.801 --> 00:08:07.100
in your head what you think is gonna
happen and see how right you are.

147
00:08:07.100 --> 00:08:09.560
So now I'm gonna do it again,
I'm gonna do find again.

148
00:08:09.560 --> 00:08:13.130
Now it's obviously changed,
we still have the test folder.

149
00:08:13.130 --> 00:08:16.862
Config is no longer a symlink because
there are two files within it,

150
00:08:16.862 --> 00:08:18.040
it looks like, and so

151
00:08:18.040 --> 00:08:22.530
when I do ls-la on here, you'll see
that config is now just a folder.

152
00:08:22.530 --> 00:08:27.290
And when I go ls-la in my dot config,
you'll see that nvim

153
00:08:27.290 --> 00:08:32.300
points to the nvim folder and
tmux points to the tmux folder.

154
00:08:32.300 --> 00:08:35.640
Now it did not go down and
create all those different files.

155
00:08:35.640 --> 00:08:38.984
Instead, it points, it went as low
as it can in the file path And

156
00:08:38.984 --> 00:08:42.710
simply created symlinks there,
that's pretty cool, right?

157
00:08:42.710 --> 00:08:46.810
We went from a symlink add config to a
folder with symlinks that were needed for

158
00:08:46.810 --> 00:08:49.470
everything that was already
linked at one point.

159
00:08:51.130 --> 00:08:56.960
And so for me, this is a pretty exciting
experience, so let's try this again.

160
00:08:56.960 --> 00:08:59.541
We're gonna do something a little bit
different, we got a question either.

161
00:08:59.541 --> 00:09:02.715
&gt;&gt; How does it know that it
should look at stow-dr for

162
00:09:02.715 --> 00:09:05.070
symlink like do you specified this.

163
00:09:05.070 --> 00:09:09.189
&gt;&gt; So yeah, so that was remember
that was called in our diagram B or

164
00:09:09.189 --> 00:09:14.900
the stow that I've kind of named it,
that is where we're executing stow from.

165
00:09:14.900 --> 00:09:18.858
So stow goes, okay, from here,
I need the stow the nvim folder and

166
00:09:18.858 --> 00:09:21.130
where does it put all of its contents?

167
00:09:21.130 --> 00:09:23.400
It puts it into the target directory.

168
00:09:23.400 --> 00:09:27.668
And so uses the path relative and
just puts everything all there for you, so

169
00:09:27.668 --> 00:09:28.630
it just does it.

170
00:09:28.630 --> 00:09:32.920
&gt;&gt; So we have to be in
the stow-dr to run stow, right?

171
00:09:32.920 --> 00:09:34.670
&gt;&gt; Yes,
it doesn't have to be called stow though.

172
00:09:34.670 --> 00:09:37.368
It can be called B,
it could be called full bar,

173
00:09:37.368 --> 00:09:41.850
whatever directory you execute stow
from will become the stow there.

174
00:09:41.850 --> 00:09:44.280
And where it gets put is one directory up.

175
00:09:44.280 --> 00:09:49.031
Now technically, if you go to man stow,
you should be able to set up target,

176
00:09:49.031 --> 00:09:50.320
right?

177
00:09:50.320 --> 00:09:53.797
There is target directories, you can go
in here, I'm sure there's terminology and

178
00:09:53.797 --> 00:09:55.330
all that in here, but there we go.

179
00:09:55.330 --> 00:09:56.820
You can actually set the target directory.

180
00:09:56.820 --> 00:09:59.760
So it doesn't need to be
in the shape I'm doing it.

181
00:09:59.760 --> 00:10:02.574
I'm just doing the default shape,
right now, so

182
00:10:02.574 --> 00:10:05.510
it feels really obvious what's happening.

183
00:10:05.510 --> 00:10:09.580
But you could theoretically set the target
and it would behave the exact same way.

184
00:10:09.580 --> 00:10:13.100
We would if say your target
was just like slash bar.

185
00:10:13.100 --> 00:10:18.920
Right now you'd have slash bar dot config,
and then two siblings, nvim and tmux.

