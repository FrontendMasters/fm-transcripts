WEBVTT

1
00:00:00.070 --> 00:00:03.530
So we got to just do a couple more parts,
really.

2
00:00:03.530 --> 00:00:04.851
So A, navigation tip.

3
00:00:04.851 --> 00:00:08.452
If you wanna go to your
previous session &lt;prefix&gt; -L,

4
00:00:08.452 --> 00:00:13.530
if you're familiar with Vim, this is
identical to alternate file, right?

5
00:00:13.530 --> 00:00:17.610
So if I go here, let's exit out of here
exit, exit, exit, exit, exit, exit,

6
00:00:17.610 --> 00:00:20.372
there we go, &lt;prefix&gt; -L,
I just went back to tmp.

7
00:00:20.372 --> 00:00:24.819
&lt;prefix&gt; -L,
I go back to that Ansible one.

8
00:00:24.819 --> 00:00:27.280
And I can just go back and
forth, back and forth, right?

9
00:00:27.280 --> 00:00:31.305
So it's identical to alternate file,
it's very, very useful.

10
00:00:31.305 --> 00:00:35.239
So if I need to jump somewhere to do
something quickly, I can do that and

11
00:00:35.239 --> 00:00:38.042
then ultimate session right
back to where I was and

12
00:00:38.042 --> 00:00:40.666
continue on my kind of
my merry way right here.

13
00:00:40.666 --> 00:00:41.996
But we do have a problem though,

14
00:00:41.996 --> 00:00:44.130
we haven't really made this
thing easy to use yet.

15
00:00:45.370 --> 00:00:50.076
Meaning that we have this cool script
that's just in a folder somewhere and

16
00:00:50.076 --> 00:00:51.579
we want it to be useful.

17
00:00:51.579 --> 00:00:53.534
So one thing that I did right away,

18
00:00:53.534 --> 00:00:56.577
there's a lot of ways you
can kinda make this useful.

19
00:00:56.577 --> 00:00:59.278
I put them in kind of,
I would guess, funny locations, but

20
00:00:59.278 --> 00:01:01.270
I like the two locations I put mine.

21
00:01:01.270 --> 00:01:04.535
A, I have mine in my init Vim,
I know this sounds weird,

22
00:01:04.535 --> 00:01:07.329
I have it in VM-ware,
let's see, what is it?

23
00:01:07.329 --> 00:01:11.391
Little f, no it's a &lt;C- f&gt;,
there, that one.

24
00:01:11.391 --> 00:01:15.883
This one, I always know that if I'm using
Vim, I'm already in a tmux session,

25
00:01:15.883 --> 00:01:19.190
I have already kind of made
this reality to myself.

26
00:01:19.190 --> 00:01:22.023
Now remember, I also showed you
that if you create a new window,

27
00:01:22.023 --> 00:01:23.400
you can pass a command into it.

28
00:01:23.400 --> 00:01:27.909
So I have my sessionizer available in the
global path, meaning that it's available

29
00:01:27.909 --> 00:01:32.700
in one of my paths and so therefore, it's
globally there, I can use it at any point.

30
00:01:32.700 --> 00:01:36.193
So therefore, all I have to do is
tmux new window with this thing.

31
00:01:36.193 --> 00:01:40.036
When that thing runs, it will then
create the fuzzy finder do all that and

32
00:01:40.036 --> 00:01:44.212
then remember, new window creates new
window, so I'll actually leave Vim.

33
00:01:44.212 --> 00:01:47.930
And it's right here, notice it's
right here, that's where we're at,

34
00:01:47.930 --> 00:01:50.340
it actually left Vim and it's over here.

35
00:01:50.340 --> 00:01:54.495
The moment I close this, it goes back, it
closes that window and goes back to Vim.

36
00:01:54.495 --> 00:01:55.426
Very, very useful.

37
00:01:55.426 --> 00:01:58.696
You could probably build something
actually somewhat similar in VS Code

38
00:01:58.696 --> 00:02:00.149
that'll communicate to tmux.

39
00:02:00.149 --> 00:02:02.670
I don't think it'd be very,
very hard, same with IntelliJ.

40
00:02:02.670 --> 00:02:06.047
But it's just a different
kind of environment, but

41
00:02:06.047 --> 00:02:08.975
this nonetheless allows
me to do it from Vim.

42
00:02:08.975 --> 00:02:12.455
Now, the reason why I chose Vim
is because often I'm in Vim,

43
00:02:12.455 --> 00:02:14.580
but also I chose one other location.

44
00:02:16.110 --> 00:02:18.488
Let's see, I have it in my zsh profile.

45
00:02:18.488 --> 00:02:22.839
And the reason why I have it in my zsh
profile is that if I'm not in Vim,

46
00:02:22.839 --> 00:02:24.124
I'm in a terminal.

47
00:02:24.124 --> 00:02:27.830
And so when I'm in a terminal,
if I press F, it's just gonna

48
00:02:27.830 --> 00:02:32.390
have that fuzzy find happen right there,
I just use my shell to do this.

49
00:02:32.390 --> 00:02:35.088
Now that I have my shell,
I can then do that and

50
00:02:35.088 --> 00:02:37.439
then that will open up the new session.

51
00:02:37.439 --> 00:02:42.302
So it didn't close my previous window, cuz
my previous window I was just using, so

52
00:02:42.302 --> 00:02:44.550
just shows this right here.

53
00:02:44.550 --> 00:02:48.039
So it's kind of my two ways, that's kinda
where I put it, that was my strategy for

54
00:02:48.039 --> 00:02:49.720
making this very, very useful for me.

55
00:02:49.720 --> 00:02:51.749
Zsh has a vi-mode option.

56
00:02:53.486 --> 00:02:54.980
Nice, yes.

57
00:02:54.980 --> 00:02:56.460
&gt;&gt; Sorry, did you just press F?

58
00:02:57.660 --> 00:02:59.610
&gt;&gt; No, I pressed Ctrl+F.

59
00:02:59.610 --> 00:03:01.204
&gt;&gt; Ctrl+F, okay.

60
00:03:01.204 --> 00:03:04.040
&gt;&gt; Yeah, here, yeah, look, bindkey.

61
00:03:04.040 --> 00:03:04.811
See, it's that thing.

62
00:03:04.811 --> 00:03:06.130
It's Ctrl+F.

63
00:03:06.130 --> 00:03:10.420
So I press Ctrl+F and I send literally
into this sessionizer with a new line, so

64
00:03:10.420 --> 00:03:12.120
I just execute it, right?

65
00:03:12.120 --> 00:03:16.200
That's all I'm doing, so technically,
if we're gonna be honest here,

66
00:03:16.200 --> 00:03:20.760
I'm in the middle of doing this and then
I press Ctrl+F, not that useful, right?

67
00:03:20.760 --> 00:03:24.361
That's probably not the best way I wanna
go, but nonetheless, it works very,

68
00:03:24.361 --> 00:03:25.184
very well for me.

69
00:03:25.184 --> 00:03:27.469
I know the edges, I'm fine with this.

70
00:03:27.469 --> 00:03:30.718
I could technically created something
that was a little bit better.

71
00:03:30.718 --> 00:03:36.110
I could have used tmux, but the problem
is, is that I'm not always in tmux, right?

72
00:03:36.110 --> 00:03:40.206
Really right when I start, I'm not in
tmux, so I want to be able to just open up

73
00:03:40.206 --> 00:03:44.072
a terminal, right, Ctrl+F, and
then go to work, whatever, right?

74
00:03:44.072 --> 00:03:46.389
Work, tmp, boom,
I'm in exactly where I wanna be.

75
00:03:46.389 --> 00:03:49.867
So I just wanted it available in zsh and
then I knew from there on out,

76
00:03:49.867 --> 00:03:52.430
I'm gonna either be in a terminal or
in Vim, and so

77
00:03:52.430 --> 00:03:54.704
that's kind of why I
chose where I chose it.

78
00:03:54.704 --> 00:03:57.107
This is a little bit more
theory than practice, right?

79
00:03:57.107 --> 00:03:59.570
I'm kind of giving you how
I thought about a problem,

80
00:03:59.570 --> 00:04:01.332
not necessarily how you should do it.

81
00:04:01.332 --> 00:04:03.371
Maybe you should use i3 to help you out.

82
00:04:03.371 --> 00:04:05.850
You could use i3, Rofi window,
who knows what you could use?

83
00:04:05.850 --> 00:04:09.133
There's a million ways you can
solve this problem, I'm just trying

84
00:04:09.133 --> 00:04:12.830
to show you a way to solve this problem
and a way that I thought was pretty nice.

85
00:04:14.850 --> 00:04:18.299
And that really makes the thing
super easy, but not only that,

86
00:04:18.299 --> 00:04:22.490
remember this whole Ansible thing
we've been doing now for a while.

87
00:04:22.490 --> 00:04:26.585
If you look inside my dotfiles,
when it calls stows and stows my dotfiles,

88
00:04:26.585 --> 00:04:30.875
I have a folder called bin, which has
a folder called local, which has a folder

89
00:04:30.875 --> 00:04:35.254
called bin, which has these three things
and one of them is this one right here.

90
00:04:35.254 --> 00:04:37.550
So here's mine,
mine's a little bit bigger than yours.

91
00:04:37.550 --> 00:04:41.369
But that's all it does,
it actually puts this into my,

92
00:04:41.369 --> 00:04:44.520
what is it called, my local bin, right?

93
00:04:44.520 --> 00:04:48.102
And so everything in here is
things that are available for

94
00:04:48.102 --> 00:04:50.349
me to be able to execute right here.

95
00:04:50.349 --> 00:04:53.440
So I have the Python formater right here.

96
00:04:53.440 --> 00:04:57.517
It's just that I have my Python
language server, I have screenkey,

97
00:04:57.517 --> 00:05:00.188
cheat sheet I have all
them all right here, so

98
00:05:00.188 --> 00:05:05.205
I can easily use these anywhere within my
system and they install nicely for Ubuntu.

99
00:05:05.205 --> 00:05:08.854
So that's kinda my general plan for using
those and that's how I've made it work

100
00:05:08.854 --> 00:05:12.100
with stow, which is how I get
it installed via Ansible.

101
00:05:12.100 --> 00:05:15.347
So I know the moment that I have Ansible
up and running, I can just use that,

102
00:05:15.347 --> 00:05:18.920
that's kind of our first tmux script,
we actually did something there, right?

103
00:05:18.920 --> 00:05:22.511
I feel like we genuinely accomplished
something that does kinda solve that

104
00:05:22.511 --> 00:05:23.879
terminal problem, right?

105
00:05:23.879 --> 00:05:26.545
In a sense, you have all these
terminals everywhere and

106
00:05:26.545 --> 00:05:29.700
usually they're associated
with an individual project.

107
00:05:29.700 --> 00:05:33.429
You can create windows for each one
of the things you need to run inside

108
00:05:33.429 --> 00:05:37.477
of a folder and now you can navigate to
the folders you want with just three,

109
00:05:37.477 --> 00:05:39.481
four keystrokes and you're there.

110
00:05:39.481 --> 00:05:42.369
And you can fuzzy find for them,
makes it really, really easy.

111
00:05:42.369 --> 00:05:46.940
To me this seems like a good
way to solve that problem.

112
00:05:46.940 --> 00:05:50.304
It really allows you to be able to
move quickly, at least in my book,

113
00:05:50.304 --> 00:05:53.447
this has been incredibly helpful,
for solving that problem.

114
00:05:53.447 --> 00:05:57.014
Nonetheless, that's just how I go about
trying to solve these problems cuz really,

115
00:05:57.014 --> 00:06:00.183
that terminal problem with all
the terminals, I mean, it's plagued me for

116
00:06:00.183 --> 00:06:00.746
a long time.

117
00:06:00.746 --> 00:06:03.388
I've tried so
many different ways to solve this and

118
00:06:03.388 --> 00:06:06.100
it's been really hard coming
up with the right one.

119
00:06:06.100 --> 00:06:09.926
I've tried many different styles,
I've tried many different ways to get this

120
00:06:09.926 --> 00:06:13.633
done and this to me seems like one of the
best ways to really make it so that I have

121
00:06:13.633 --> 00:06:17.600
a very seamless integration with me and
how I interact with my running processes.

122
00:06:18.630 --> 00:06:20.958
Super easy to find, I really like it.

123
00:06:20.958 --> 00:06:22.765
There's other ways you could do it,

124
00:06:22.765 --> 00:06:26.687
just for fun, you know how we have tmux
list sessions, right now only have one.

125
00:06:26.687 --> 00:06:30.837
If you have all of your sessions named,
you have all your windows named,

126
00:06:30.837 --> 00:06:35.057
you create those, you could technically
pipe into FCF all the sessions,

127
00:06:35.057 --> 00:06:39.685
get out the one you want to select, and
then use the targeting mechanism to target

128
00:06:39.685 --> 00:06:42.810
that exact item in the session window and
pane.

129
00:06:42.810 --> 00:06:46.668
So you could really get pretty fine
grain with how you want to do things.

130
00:06:46.668 --> 00:06:48.642
I haven't done that yet,
I haven't needed it.

131
00:06:48.642 --> 00:06:51.650
I don't really have a single project
that I run eight terminals in.

132
00:06:51.650 --> 00:06:54.047
But I mean, there could come
a day where that is the case, and

133
00:06:54.047 --> 00:06:55.990
I want to be able to jump
there pretty darn quick.

