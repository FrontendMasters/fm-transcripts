WEBVTT

1
00:00:00.000 --> 00:00:01.930
So actually,
I'm gonna change the problem statement.

2
00:00:01.930 --> 00:00:05.230
I have a new computer,
this is legitimately the problem.

3
00:00:05.230 --> 00:00:07.872
You are now gonna spend
the next two days of your life,

4
00:00:07.872 --> 00:00:10.890
setting up your machine
being partially productive.

5
00:00:10.890 --> 00:00:13.046
And for
the next month to two months of your life,

6
00:00:13.046 --> 00:00:16.466
you're gonna remember all these little
scripts, all these little things,

7
00:00:16.466 --> 00:00:18.902
these little libraries that
you had to help you build.

8
00:00:18.902 --> 00:00:22.220
Everything that's just kinda gone
into your system you're gonna go,

9
00:00:22.220 --> 00:00:25.479
yeah I gotta go do that, I gotta go
remember what is the thing I need to go

10
00:00:25.479 --> 00:00:28.490
download to get my system working
the way I want it to be working.

11
00:00:29.740 --> 00:00:32.545
And so that's what we want
kinda fix right now, and

12
00:00:32.545 --> 00:00:36.786
I find this one to be huge because the
average tenure at a tech company right now

13
00:00:36.786 --> 00:00:39.530
somewhere between 18 months to two years.

14
00:00:39.530 --> 00:00:42.843
So in the next year and
a half you're guaranteed pretty much

15
00:00:42.843 --> 00:00:47.380
to be getting a new computer,
this is gonna be very painful experience.

16
00:00:47.380 --> 00:00:49.760
You don't want it let's
just solve that now.

17
00:00:49.760 --> 00:00:54.524
So you in the future can look back
at you in the present, and go wow,

18
00:00:54.524 --> 00:00:56.360
what that's so smart.

19
00:00:56.360 --> 00:00:58.720
I was just the smartest person
that ever lived on earth and

20
00:00:58.720 --> 00:00:59.860
it just feels really good.

21
00:00:59.860 --> 00:01:02.318
You can pat yourself on
the back everything,

22
00:01:02.318 --> 00:01:05.830
the worst part though about
a new computer is, SSH keys.

23
00:01:05.830 --> 00:01:10.337
SSH keys are single handling the worst
thing now here's the thing is, I'm not one

24
00:01:10.337 --> 00:01:14.750
of those psychics that stand up on stage,
and call out into the audience.

25
00:01:14.750 --> 00:01:17.750
But I'm pretty sure that there's
someone in this audience, right?

26
00:01:17.750 --> 00:01:19.090
I can see it, hold on.

27
00:01:19.090 --> 00:01:20.270
Yeah, I can feel it.

28
00:01:20.270 --> 00:01:22.270
There's someone in this
audience right now.

29
00:01:22.270 --> 00:01:26.791
That has an email, probably titled
something like Davy Jones's Locker found,

30
00:01:26.791 --> 00:01:31.390
and it actually contains your actual SSH
keys because you wanna be really tricky.

31
00:01:31.390 --> 00:01:34.010
You're gonna throw off hackers if
they ever get your email account.

32
00:01:34.010 --> 00:01:38.425
But nonetheless, you have your
SSH key either emailed to you, or

33
00:01:38.425 --> 00:01:40.890
on a private GitHub in a repo.

34
00:01:40.890 --> 00:01:43.973
No public facing companies have
ever been hacked, I'm positive,

35
00:01:43.973 --> 00:01:47.380
you're never gonna be in trouble
having your SSH keys out there.

36
00:01:47.380 --> 00:01:49.600
Everything is gonna be great, right?

37
00:01:49.600 --> 00:01:52.840
So, SSH keys, they're terrible, right?

38
00:01:52.840 --> 00:01:56.215
So if only there was a solution
to all these problems,

39
00:01:56.215 --> 00:02:00.570
man it's like someone should
be talking about it right now.

40
00:02:00.570 --> 00:02:01.886
So we're gonna talk about Ansible.

41
00:02:01.886 --> 00:02:05.322
Ansible is the solution,
at least as far as I can tell,

42
00:02:05.322 --> 00:02:08.900
it's one of the better
solutions I've ever used.

43
00:02:08.900 --> 00:02:12.681
If anyone's familiar with it,
the first thing you're probably saying is,

44
00:02:12.681 --> 00:02:15.600
isn't that some sort of
cloud configuration thing?

45
00:02:15.600 --> 00:02:19.830
Something like Koobernetes, yes, it is
a cloud configuration tool, as I've heard

46
00:02:19.830 --> 00:02:23.670
of ones best described, at least as far
as I can tell, the best description.

47
00:02:24.770 --> 00:02:28.820
It is the thing that carries
the Leviathan to Tokyo.

48
00:02:28.820 --> 00:02:31.850
And Kubernetes is the thing that
destroys Tokyo, it's the Leviathan.

49
00:02:31.850 --> 00:02:34.710
And so that's how I heard someone
describe it once, it's fantastic.

50
00:02:34.710 --> 00:02:37.730
But yes,
Ansible is a cloud configuration platform.

51
00:02:37.730 --> 00:02:41.324
So we're gonna talk about Ansible for
a second I'm gonna show you how we use it.

52
00:02:41.324 --> 00:02:45.567
And we're gonna even take that previous
example, and extend it to make a system.

53
00:02:45.567 --> 00:02:49.647
Where I could instantly get up a brand
new Docker container within the speed of

54
00:02:49.647 --> 00:02:52.785
my internet, and
the installation process time to be up and

55
00:02:52.785 --> 00:02:55.320
running, and ready to be used.

56
00:02:55.320 --> 00:02:59.814
And so here's really the anatomy
of an Ansible task, all right?

57
00:02:59.814 --> 00:03:00.990
Or an Ansible file.

58
00:03:00.990 --> 00:03:03.210
It's just gonna look like this,
It's gonna have hosts.

59
00:03:03.210 --> 00:03:04.150
We don't need to worry about that.

60
00:03:04.150 --> 00:03:05.410
We're just using our local host.

61
00:03:05.410 --> 00:03:06.810
We're just building it for ourselves.

62
00:03:06.810 --> 00:03:08.620
It's not a complicated version.

63
00:03:08.620 --> 00:03:11.100
Become simply means you're gonna
become the user that's using it.

64
00:03:11.100 --> 00:03:14.930
So hopefully you have all
the privileges on your system you need.

65
00:03:14.930 --> 00:03:18.050
You can even pass in your
password at execution time.

66
00:03:18.050 --> 00:03:20.397
So can do all the pseudo operations
at the correct level, and

67
00:03:20.397 --> 00:03:22.100
installed in the correct places.

68
00:03:22.100 --> 00:03:24.960
You can do pre tasks, you can say,
hey, I need to run these tasks,

69
00:03:24.960 --> 00:03:26.102
before everything else.

70
00:03:26.102 --> 00:03:29.319
You can set up variables so just in
case you want to be able to say like,

71
00:03:29.319 --> 00:03:31.150
here is where my dot files are.

72
00:03:31.150 --> 00:03:32.330
Well, you can set it as a variable.

73
00:03:32.330 --> 00:03:34.900
So instead of having to manually
type out that path all the time,

74
00:03:34.900 --> 00:03:36.530
you can have it defined on the top level.

75
00:03:36.530 --> 00:03:38.860
And then of course, a list of tasks to do.

76
00:03:40.430 --> 00:03:43.896
It's in yamo, which I don't
really understand yamo that well,

77
00:03:43.896 --> 00:03:46.360
I can kinda use it It
feels like fake JSON.

78
00:03:46.360 --> 00:03:49.350
I don't really know what to do with it,
but it's kinda fun to use.

79
00:03:49.350 --> 00:03:51.820
And then of course,
the task looks something like this.

80
00:03:51.820 --> 00:03:54.822
It has a name, that's a string,
it performs some action, and

81
00:03:54.822 --> 00:03:56.630
then you can give it a list of tags.

82
00:03:56.630 --> 00:03:59.700
There's other options as well but
that's pretty much what you'll be doing.

