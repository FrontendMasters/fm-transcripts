WEBVTT

1
00:00:00.260 --> 00:00:02.330
Let's jump over to fzf.

2
00:00:02.330 --> 00:00:03.980
And so I did wanna talk about this.

3
00:00:03.980 --> 00:00:06.640
We are building this tool for those
that don't remember what the tool is.

4
00:00:06.640 --> 00:00:07.960
It's been too long of a break.

5
00:00:07.960 --> 00:00:09.050
Let me just say it really quickly.

6
00:00:09.050 --> 00:00:11.721
We're building a tool for
better navigation, because, right now,

7
00:00:11.721 --> 00:00:14.935
we're still having the same problem with
team ups where it's just like it's really

8
00:00:14.935 --> 00:00:18.110
hard to really get around It doesn't
feel like it really solves a problem.

9
00:00:18.110 --> 00:00:20.330
It's like it looks at the problem
from a new direction.

10
00:00:20.330 --> 00:00:23.080
But we're gonna actually script and
make something else.

11
00:00:23.080 --> 00:00:25.610
So before we do that,
I did wanna show you one thing.

12
00:00:25.610 --> 00:00:29.523
I would be doing you a disservice really
by not showing you this is written by

13
00:00:29.523 --> 00:00:30.650
a guy named June Gun.

14
00:00:30.650 --> 00:00:33.230
First off,
that's like the coolest handle on GitHub.

15
00:00:33.230 --> 00:00:36.010
And also he writes amazing.

16
00:00:36.010 --> 00:00:38.392
Plugins so June gun awesome, but

17
00:00:38.392 --> 00:00:44.470
let me show you team ox you can install
with apt brew, get clone it slash install.

18
00:00:44.470 --> 00:00:45.640
It offers a lot of cool things.

19
00:00:45.640 --> 00:00:46.910
So let's check this out.

20
00:00:46.910 --> 00:00:48.190
So let's go like this.

21
00:00:48.190 --> 00:00:49.594
Remember that previous echo.

22
00:00:49.594 --> 00:00:53.356
Where we had these numbers instead of
piping it into this little pipe program we

23
00:00:53.356 --> 00:00:56.380
have right here, let's pipe it into fzf.

24
00:00:56.380 --> 00:01:00.055
Now what fcf does is it allows you
to have a fuzzy like it's just as

25
00:01:00.055 --> 00:01:02.847
a quick fuzzy finder so
if I type in the number five

26
00:01:02.847 --> 00:01:07.510
Notice that it highlights this five
right here, and that five right there.

27
00:01:07.510 --> 00:01:09.660
So it's saying, I found two results.

28
00:01:09.660 --> 00:01:14.550
So if I type in seven, it's gonna go,
this is the one that closest matches it.

29
00:01:14.550 --> 00:01:19.111
When I press enter, it's gonna take
the line that you have selected and

30
00:01:19.111 --> 00:01:20.810
simply write it out.

31
00:01:20.810 --> 00:01:22.130
To standard out.

32
00:01:22.130 --> 00:01:27.400
So it's just a really nice little, kind
of really Unix philosophy style program.

33
00:01:27.400 --> 00:01:30.129
It just does one thing and
it does that one thing really,

34
00:01:30.129 --> 00:01:31.970
really, really well, right?

35
00:01:31.970 --> 00:01:34.390
It takes a bunch of input and
reduces it down.

36
00:01:34.390 --> 00:01:37.040
You can actually select
multiple inputs if you want to.

37
00:01:37.040 --> 00:01:40.410
But for us, we're just really thinking
about the singular input style.

38
00:01:40.410 --> 00:01:45.270
So I can take a bunch of lines and turn it
into one line with just a few characters.

39
00:01:45.270 --> 00:01:45.900
Awesome.

40
00:01:45.900 --> 00:01:46.750
FCF is awesome.

41
00:01:46.750 --> 00:01:50.797
And if you install FCF, you can use,
remember, I don't know if you've ever

42
00:01:50.797 --> 00:01:54.970
done this before, but you've pressed
control R and you get like previous it's

43
00:01:54.970 --> 00:01:58.920
called like recursive searching and
you get to search up your history.

44
00:01:58.920 --> 00:02:02.897
Well, with FCF, if you do control,
are you actually get your history and

45
00:02:02.897 --> 00:02:05.207
then you can start reducing it by runtime,

46
00:02:05.207 --> 00:02:09.020
you can start looking at all
the different things you're doing.

47
00:02:09.020 --> 00:02:12.020
And it just gives you a faster
way to look through your history.

48
00:02:12.020 --> 00:02:16.432
It's much, much nicer, like No,
I have that one LS of command.

49
00:02:16.432 --> 00:02:18.420
Okay, so that's how you use LSF.

50
00:02:18.420 --> 00:02:21.170
I remember I used it once before,
I couldn't remember it.

51
00:02:21.170 --> 00:02:22.070
Awesome, right?

52
00:02:22.070 --> 00:02:25.796
It just has those things built in,
which is really, really, I mean, for me,

53
00:02:25.796 --> 00:02:27.220
it's just super duper nice.

54
00:02:27.220 --> 00:02:30.046
It's much better than that other search
because you don't really get to see

55
00:02:30.046 --> 00:02:31.910
a window of what you're looking for.

56
00:02:31.910 --> 00:02:34.430
So I love fcf I use it all the time.

57
00:02:34.430 --> 00:02:37.060
It's fantastic and
it has some other things, right?

58
00:02:37.060 --> 00:02:40.990
You can grab files in here so I only
have one file in here so if I back up.

59
00:02:40.990 --> 00:02:44.537
I have a few files in here so if I press
T, it can go through here and grab a bunch

60
00:02:44.537 --> 00:02:48.270
of stuff and say okay, here's everything
that you can possibly look through.

61
00:02:48.270 --> 00:02:51.395
So I can start opening up one of
those folders if I press enter.

62
00:02:51.395 --> 00:02:53.370
It just simply gives me that folder.

63
00:02:53.370 --> 00:02:56.410
And then I can press enter, and
it would navigate there, right?

64
00:02:56.410 --> 00:02:59.580
Pretty nice little,
Nice little item right there.

65
00:02:59.580 --> 00:03:01.150
All right, let's see.

66
00:03:01.150 --> 00:03:01.900
Let's go back to Tampa.

67
00:03:01.900 --> 00:03:02.780
All right, we're back in Tampa.

68
00:03:02.780 --> 00:03:03.860
Everything's great.

69
00:03:03.860 --> 00:03:06.086
So now that you kind of know what FCF is,

70
00:03:06.086 --> 00:03:10.739
it's just a fuzzy finder takes standard
and, and searches over it and returns and

71
00:03:10.739 --> 00:03:13.980
prints out to standard
out what you've selected.

72
00:03:13.980 --> 00:03:19.231
So that's Super useful, so I kind of feel
like we've effectively in most sense,

73
00:03:19.231 --> 00:03:21.630
solved this thing right here.

74
00:03:21.630 --> 00:03:26.012
We know where we want to look,
we know how to use a fuzzy finder,

75
00:03:26.012 --> 00:03:28.480
we know how to target.

76
00:03:28.480 --> 00:03:30.943
All we got to do now is
just right the bits and

77
00:03:30.943 --> 00:03:33.280
pieces together to create this script.

78
00:03:33.280 --> 00:03:36.900
All right, so let me,
let's just do it right now.

79
00:03:36.900 --> 00:03:39.961
Let's jump in here I use vim,
vim fantastic fees VS code,

80
00:03:39.961 --> 00:03:42.330
you can do a little code dot right here.

81
00:03:42.330 --> 00:03:45.551
Wait for that sweet 40 seconds which I'm
buying you time right now you're up and

82
00:03:45.551 --> 00:03:47.830
running, you're feeling
good about yourself.

83
00:03:47.830 --> 00:03:50.520
Let's go Let's create a new
file called tmux session.

84
00:03:50.520 --> 00:03:52.540
Iser, you can call it whatever you want.

85
00:03:52.540 --> 00:03:55.968
Now remember, since we're creating
a little file that we want to be runnable.

86
00:03:55.968 --> 00:03:58.060
We're gonna need to add
in a little shebang.

87
00:03:58.060 --> 00:04:01.071
If you're not familiar with
what shibang effectively do,

88
00:04:01.071 --> 00:04:05.480
they just tell, they effectively identify
what type of program they're going to be.

89
00:04:05.480 --> 00:04:08.896
Now I've been getting better at
saying what type of program it is.

90
00:04:08.896 --> 00:04:11.570
There we go.
I'm gonna say it's a bash program.

91
00:04:11.570 --> 00:04:12.900
We're writing a bash program.

92
00:04:12.900 --> 00:04:16.377
You just got to put this as your first
line, I could technically put something

93
00:04:16.377 --> 00:04:19.990
like node here, and it would actually
run this program via node, right?

94
00:04:19.990 --> 00:04:23.872
You can do that you'll see that on top of
a lot of your executables downloaded via,

95
00:04:23.872 --> 00:04:27.150
like if you looked at the Webpack
node modules dot bin, there you go.

96
00:04:27.150 --> 00:04:28.640
That's what it's called
node modules dot bin.

97
00:04:28.640 --> 00:04:31.020
You look at that,
you'll actually see a shebang at the top.

98
00:04:31.020 --> 00:04:33.581
You'll go okay this thing is
identifying itself as node so

99
00:04:33.581 --> 00:04:35.470
that way it knows how to run itself.

100
00:04:35.470 --> 00:04:36.640
Same thing is going on right here.

101
00:04:36.640 --> 00:04:40.250
It's identifying itself by what program
it needs to or needs to be used to run.

102
00:04:40.250 --> 00:04:41.050
So there we go.

103
00:04:41.050 --> 00:04:43.190
We put that in, things are looking great.

104
00:04:43.190 --> 00:04:46.410
So now we need to be able
to find all those folders.

105
00:04:46.410 --> 00:04:47.840
Well, we're already kind
of at a stuck point.

106
00:04:47.840 --> 00:04:50.750
So here let me do prefix C,
create a new window.

107
00:04:50.750 --> 00:04:53.840
And let's talk about fine so
I'm gonna go all the way down to here.

108
00:04:53.840 --> 00:04:56.130
So I'm in the I'm just
in my home directory.

109
00:04:56.130 --> 00:05:00.535
If I type find and I do dot,
well it returns to me like everything.

110
00:05:00.535 --> 00:05:01.700
My goodness.
I even saw Emacs.

111
00:05:01.700 --> 00:05:05.190
Don't tell anybody that there was an Emacs
anything on the screen there for a second.

112
00:05:05.190 --> 00:05:08.352
I don't want it I don't want anyone
getting in trouble here, but

113
00:05:08.352 --> 00:05:11.650
that just returns everything,
right, way too many things.

114
00:05:11.650 --> 00:05:15.160
Well find has a lot, a lot, of features.

115
00:05:15.160 --> 00:05:17.820
It's one of the most feature-rich
little core utility you can have.

116
00:05:17.820 --> 00:05:20.040
You can do something
like this There's type D.

117
00:05:20.040 --> 00:05:23.613
What this will do is it will find
everything starting at this folder and

118
00:05:23.613 --> 00:05:25.600
only return directories, okay?

119
00:05:25.600 --> 00:05:26.670
Faster.

120
00:05:26.670 --> 00:05:28.170
But still way too many, right?

121
00:05:28.170 --> 00:05:29.280
We don't want that many, right?

122
00:05:29.280 --> 00:05:32.598
We don't need to be in every single
folder on my operating system,

123
00:05:32.598 --> 00:05:34.820
we only really need just a select few.

124
00:05:34.820 --> 00:05:39.045
I want the folders that exist in my home,
the folders that exist in personal,

125
00:05:39.045 --> 00:05:41.520
the folders that exist within work, right.

126
00:05:41.520 --> 00:05:43.790
I don't need the whole universe, right.

127
00:05:43.790 --> 00:05:45.810
All right, so let's try this again.

128
00:05:45.810 --> 00:05:48.450
So I bet if we go man find We
can go to the this manual and

129
00:05:48.450 --> 00:05:50.710
probably find something.

130
00:05:50.710 --> 00:05:52.650
My guess is its depth right?

131
00:05:52.650 --> 00:05:53.880
There we go right away.

132
00:05:53.880 --> 00:05:55.600
It's like something that says max depth.

133
00:05:55.600 --> 00:05:57.619
Awesome.
So let's look up max depth of jump here

134
00:05:57.619 --> 00:06:01.324
to the arguments descends at most levels
perfect that looks like exactly what we're

135
00:06:01.324 --> 00:06:02.290
looking for.

136
00:06:02.290 --> 00:06:04.951
And also there's min depth looks
like exactly what we're looking for

137
00:06:04.951 --> 00:06:05.750
side by side.

138
00:06:05.750 --> 00:06:08.560
It's almost as if I've planned this out.

139
00:06:08.560 --> 00:06:09.400
Awesome.

140
00:06:09.400 --> 00:06:10.030
Let's go like this.

141
00:06:10.030 --> 00:06:12.290
Let's go back to here we're
gonna find with directory.

142
00:06:12.290 --> 00:06:15.405
All right, so now what we're going to want
to do is we're going to want to do min

143
00:06:15.405 --> 00:06:16.270
depth and Max depth.

144
00:06:16.270 --> 00:06:18.217
So min depth, I wanted this one right,

145
00:06:18.217 --> 00:06:22.280
I only want the folders that are one
step away from where I'm searching.

146
00:06:22.280 --> 00:06:26.750
And I also want the max depth, to be one,
only from where we're searching.

147
00:06:26.750 --> 00:06:28.920
One depth maximum from our researching.

148
00:06:28.920 --> 00:06:30.550
So when I press Enter, look at that.

149
00:06:30.550 --> 00:06:33.760
It only gives me the folders
in my root directory.

150
00:06:33.760 --> 00:06:34.500
Awesome.

151
00:06:34.500 --> 00:06:38.768
Another cool thing about find is that you
can not only provide it a folder to look

152
00:06:38.768 --> 00:06:42.190
in, but you can provide it
multiple folders to look in.

153
00:06:42.190 --> 00:06:45.690
So I can go slash personal slash work,
right?

154
00:06:45.690 --> 00:06:47.060
And so now, there we go.

155
00:06:47.060 --> 00:06:51.810
I have All my folders at a singular level
right there, none of them are files.

156
00:06:51.810 --> 00:06:54.830
They're just folders one
deep from where I provided.

157
00:06:54.830 --> 00:06:55.420
This is awesome.

158
00:06:55.420 --> 00:06:57.770
So this is effectively
exactly what we want.

159
00:06:57.770 --> 00:07:02.568
So let me let me just take this guy,
and yank this and go back here and

160
00:07:02.568 --> 00:07:04.420
paste this in here.

161
00:07:04.420 --> 00:07:05.200
Awesome.

162
00:07:05.200 --> 00:07:06.890
There we go.
We have the command.

163
00:07:06.890 --> 00:07:08.977
So if I were to run this
now run this little script,

164
00:07:08.977 --> 00:07:12.380
which here let's run this here I'm going
to do that sweet little move by the way.

165
00:07:12.380 --> 00:07:14.425
I don't know if you just saw
what I just did there, but

166
00:07:14.425 --> 00:07:16.030
it's it's like the greatest move ever.

167
00:07:16.030 --> 00:07:18.640
Let me just show you that really quickly.

168
00:07:18.640 --> 00:07:22.530
Leader x,
look at this little quick vim remap.

169
00:07:22.530 --> 00:07:26.939
I do leader x and it will send out
to the system chmod which everyone's

170
00:07:26.939 --> 00:07:31.260
favorite command to mode,
which just changes a files type.

171
00:07:31.260 --> 00:07:34.540
To executable and
then percent signs current file.

172
00:07:34.540 --> 00:07:36.750
So if I'm in the file,
I can just press leader x and boom.

173
00:07:36.750 --> 00:07:39.899
It's now executable one of the greatest
remaps ever will likely make

174
00:07:39.899 --> 00:07:42.370
it into a YouTube video
at some point here soon.

175
00:07:42.370 --> 00:07:45.500
So if I LS notice, it's already
executable how beautiful is that?

176
00:07:45.500 --> 00:07:46.720
It's just so beautiful.

177
00:07:46.720 --> 00:07:47.310
I love it.

178
00:07:47.310 --> 00:07:49.640
So anyway, so
now we can run Teamup session either.

179
00:07:49.640 --> 00:07:52.140
It does exactly what we wanted it to,
right?

180
00:07:52.140 --> 00:07:54.890
It's finding all the files,
printed them all out, awesome.

181
00:07:54.890 --> 00:07:55.660
This is great.

182
00:07:55.660 --> 00:07:57.070
So let's go back here.

183
00:07:57.070 --> 00:08:00.000
And now we want to pipe
this thing to f z F.

184
00:08:00.000 --> 00:08:02.510
Remember, f cf allow us to fuzzy find.

185
00:08:02.510 --> 00:08:03.770
Alright, so let's just do it again.

186
00:08:03.770 --> 00:08:08.120
Let's go out here and let's do t
mux session Iser and execute that.

187
00:08:08.120 --> 00:08:09.050
Wait.

188
00:08:09.050 --> 00:08:11.520
Well, we're not even near there.

189
00:08:11.520 --> 00:08:12.420
There we go.
Let's reopen it.

190
00:08:12.420 --> 00:08:13.160
There we go.

191
00:08:13.160 --> 00:08:14.290
And go team ox session.

192
00:08:14.290 --> 00:08:15.810
Iser There we go.

193
00:08:15.810 --> 00:08:18.650
I can go, okay, I want to select desktop.

194
00:08:18.650 --> 00:08:22.101
Okay, so fcf like it said,
takes whatever it finds and

195
00:08:22.101 --> 00:08:24.830
pipes it back out to the standard out.

196
00:08:24.830 --> 00:08:25.510
Look at that.

197
00:08:25.510 --> 00:08:26.720
There's my little desktop.

198
00:08:26.720 --> 00:08:28.020
That's exactly what we selected.

199
00:08:28.020 --> 00:08:28.770
Awesome.

200
00:08:28.770 --> 00:08:30.600
Okay, our scripts coming along nicely

