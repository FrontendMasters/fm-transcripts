WEBVTT

1
00:00:00.200 --> 00:00:04.453
Let's say we have a new problem now,
I need to install nodejs npm and

2
00:00:04.453 --> 00:00:09.040
node manager, and of course,
node 14, that's what I like to use.

3
00:00:09.040 --> 00:00:14.528
So I have to do all those things,
so let's do right now.

4
00:00:14.528 --> 00:00:17.910
Let's just take this little task,
let's just install these things.

5
00:00:17.910 --> 00:00:22.280
This is intentional, so hopefully everyone
kind of realizes what I'm doing here, but

6
00:00:22.280 --> 00:00:23.354
let's go like this.

7
00:00:23.354 --> 00:00:27.511
Install node, and of course,
to install node, I'm gonna use app, and

8
00:00:27.511 --> 00:00:29.190
I'm gonna go, what is it?

9
00:00:29.190 --> 00:00:35.152
It is name, it's gonna be nodejs,
and npm, right?

10
00:00:35.152 --> 00:00:37.570
There we go, awesome,
I now have it on my system.

11
00:00:37.570 --> 00:00:41.940
Of course, right after that, I also
need to be able to go, name, install and

12
00:00:41.940 --> 00:00:45.126
I use n for my package management,
some people use nvm.

13
00:00:45.126 --> 00:00:47.939
nvm has that really horrible
startup time problem.

14
00:00:47.939 --> 00:00:50.842
I've looked for a solution,
I've tried a few different ones,

15
00:00:50.842 --> 00:00:54.140
they never seem to work, I couldn't
stand it, so I just moved over to n.

16
00:00:55.470 --> 00:01:00.686
Then we can just go shell,
and go, or not shell, sorry,

17
00:01:00.686 --> 00:01:05.494
npm, and go, name= n,
pretty straightforward.

18
00:01:05.494 --> 00:01:10.590
And then go, name and
we can do, n14, right?

19
00:01:10.590 --> 00:01:14.125
And we'll just copy that,
paste it in here and go n14,

20
00:01:14.125 --> 00:01:17.230
that will just simply
install node version 14.

21
00:01:17.230 --> 00:01:19.254
All right, we've upgraded our script, and

22
00:01:19.254 --> 00:01:22.580
now have a node installation along
with it, so let's go back here.

23
00:01:22.580 --> 00:01:25.984
Let's do the docker and I also get
version 14, which is what I wanted.

24
00:01:25.984 --> 00:01:29.780
Now I'm gonna go ansible.playbook up,
hold on, I forgot one thing.

25
00:01:29.780 --> 00:01:34.285
Now that I think about it,
let's go up here, and pre tasks.

26
00:01:34.285 --> 00:01:38.845
I want to make sure that I have all my
repositories kind of up to date because if

27
00:01:38.845 --> 00:01:42.290
they're not up to date,
I may get something out of date.

28
00:01:42.290 --> 00:01:45.330
So I'm just gonna make sure everything,
you know what, everything's good to go.

29
00:01:45.330 --> 00:01:48.319
So let's quit that,
let's do my classic build dockers,

30
00:01:48.319 --> 00:01:51.317
jump into the docker container,
brand new environment.

31
00:01:51.317 --> 00:01:53.510
Look at this, node doesn't even exist.

32
00:01:53.510 --> 00:01:58.517
So awesome, let's go, ansible,
playbook, fem local, there we go.

33
00:01:58.517 --> 00:02:02.471
Now it's gonna start running it's updating
cache, excellent, this is exactly what I

34
00:02:02.471 --> 00:02:05.693
wanted to see, and wow, hold on,
timeout, it's installing zsh.

35
00:02:05.693 --> 00:02:08.531
I don't wanna install zsh,
I wanna install node.

36
00:02:08.531 --> 00:02:12.337
Well, lucky for you,
we already have this planned out.

37
00:02:12.337 --> 00:02:17.283
So there's something called tags,
tags allow you to identify any

38
00:02:17.283 --> 00:02:21.005
of these tasks with one or
more kind of names to it.

39
00:02:21.005 --> 00:02:24.880
So let's go like this,
I'm gonna go tags and go zich.

40
00:02:26.000 --> 00:02:28.944
Awesome, so let's take this, and
let's just go through here and

41
00:02:28.944 --> 00:02:31.980
paste it in each one of these
little locations, there we go.

42
00:02:31.980 --> 00:02:37.440
Now on the node one, instead of using zsh,
let's just call it node, there we go.

43
00:02:37.440 --> 00:02:41.034
So now, I've tagged each one
of these with node and zsh.

44
00:02:41.034 --> 00:02:44.006
I have to do one more thing which is kind
of annoying, but it's just part of it.

45
00:02:44.006 --> 00:02:48.420
Just like any of the tasks,
a pre task is just a task, right?

46
00:02:48.420 --> 00:02:50.120
It's just like anything else, my goodness.

47
00:02:50.120 --> 00:02:55.636
This indenting problem is driving me nuts,
so I'm gonna go zsh, there we go.

48
00:02:55.636 --> 00:02:59.384
So now I have tags for both node and zsh,
so if I run zsh, it updates the cache,

49
00:02:59.384 --> 00:03:01.610
if I run node, it updates the cache.

50
00:03:01.610 --> 00:03:05.076
Fantastic, so let's close this down,
rebuild our docker container.

51
00:03:05.076 --> 00:03:08.914
I know I should have just used virtual
amounts, but I wanted to be obvious that

52
00:03:08.914 --> 00:03:12.310
every time I make a change,
I'm putting it in, whatever.

53
00:03:12.310 --> 00:03:16.623
So let's rerun ansible, now this time
I can go like this, tag node, and

54
00:03:16.623 --> 00:03:17.776
then do fem local.

55
00:03:17.776 --> 00:03:22.093
Now when it runs, it's gonna update
the cache like I wanted, but

56
00:03:22.093 --> 00:03:26.550
on top of it, it's only gonna
be doing the tasks named node.

57
00:03:26.550 --> 00:03:30.630
So this is really nice because if you have
something on your system you need to kind

58
00:03:30.630 --> 00:03:34.950
of update periodically, say, building
neovim from scratch, you can actually just

59
00:03:34.950 --> 00:03:38.250
have a task that ensures you have
all the libraries are up to date,

60
00:03:38.250 --> 00:03:42.210
everything is good, and then builds
Neovim every single time on your system.

61
00:03:42.210 --> 00:03:46.200
Now you're probably asking yourself,
why does node take so long to install?

62
00:03:46.200 --> 00:03:54.171
Well, it turns out npm relies on something
like 500 different modules needed.

63
00:03:54.171 --> 00:03:56.618
Recall, it has to download so
much, which is kind of ironic,

64
00:03:56.618 --> 00:03:59.220
considering everyone makes fun of npm for
installing the world.

65
00:03:59.220 --> 00:04:03.671
So not only is node modules heavy, but
to install the thing that installs node

66
00:04:03.671 --> 00:04:07.320
modules, it's also heavy,
for me, it's beautiful.

67
00:04:07.320 --> 00:04:09.466
So after it gets done installing node and
npm,

68
00:04:09.466 --> 00:04:12.878
it's gonna go on and it's gonna install n,
and then after it installs n,

69
00:04:12.878 --> 00:04:15.374
it's gonna break because
you know what I didn't do?

70
00:04:15.374 --> 00:04:19.584
I didn't do that one one simple
trick that doctors hate.

71
00:04:19.584 --> 00:04:22.325
Whenever you do anything with,
I always forget this.

72
00:04:22.325 --> 00:04:27.616
Whenever you do anything with npm,
not only do need to specify a name,

73
00:04:27.616 --> 00:04:31.663
but you also need to specify
if it's global or local.

74
00:04:31.663 --> 00:04:34.760
All right, so there we go.

75
00:04:34.760 --> 00:04:36.170
Why is there not a default?

76
00:04:36.170 --> 00:04:37.112
I don't know,

77
00:04:37.112 --> 00:04:42.405
that's unfortunate because now we have to
do this beautiful little thing over again,

78
00:04:42.405 --> 00:04:48.200
rerun the docker, do the ansible,
playbook, tag node fem local, there we go.

79
00:04:48.200 --> 00:04:50.100
So now we're back up,
we're running, we're doing it.

80
00:04:50.100 --> 00:04:52.770
We're updating the cache one more time,
this is a brand new instance, remember.

81
00:04:52.770 --> 00:04:55.931
So of course,
it's gonna do this every single time.

82
00:04:55.931 --> 00:04:59.266
It's going to forcibly
reinstall everything.

83
00:04:59.266 --> 00:05:02.215
Npm is gonna once again take longer
than I wanted to take to install,

84
00:05:02.215 --> 00:05:05.280
even with a great internet
connection that I'm giving here.

85
00:05:05.280 --> 00:05:08.603
And then once all those things
are installed, it's gonna go to N.

86
00:05:08.603 --> 00:05:10.638
And then lastly, and most importantly,

87
00:05:10.638 --> 00:05:13.895
it's gonna install the version
of node that I want.

88
00:05:13.895 --> 00:05:16.616
And for me, this is a big thing because
you could actually specify many versions

89
00:05:16.616 --> 00:05:17.235
in here, right?

90
00:05:17.235 --> 00:05:21.548
So if I wanted to install 10, 12,
14 LTS, whatever I wanted to do,

91
00:05:21.548 --> 00:05:24.207
I could have them all
specified within here.

92
00:05:24.207 --> 00:05:29.205
I also now build Neovim using ansible
exclusively cuz I just want everything to

93
00:05:29.205 --> 00:05:30.450
be up-to-date.

94
00:05:30.450 --> 00:05:35.506
It's super useful even just like in my
semi monthly life that I have to do some

95
00:05:35.506 --> 00:05:41.260
of these tasks, I still have everything
just to run through here at this point.

96
00:05:41.260 --> 00:05:43.210
So we're gonna give it a second,
there we go,

97
00:05:43.210 --> 00:05:45.220
installing n takes
a moment installing n 14.

98
00:05:45.220 --> 00:05:46.793
Awesome, it is now done.

99
00:05:46.793 --> 00:05:50.296
Now remember, last time I ran this
docker container, when I typed node,

100
00:05:50.296 --> 00:05:50.985
it was empty.

101
00:05:50.985 --> 00:05:53.415
It said, hey, that thing doesn't exist.

102
00:05:53.415 --> 00:05:56.466
Now when I type node,
not only do I get it, I also get node 14.

103
00:05:56.466 --> 00:06:01.510
So hopefully, this is starting to
feel a little bit more exciting.

104
00:06:01.510 --> 00:06:05.223
Yes, it is a simple script that
looks a little complex, but

105
00:06:05.223 --> 00:06:10.218
now you can start tagging things that
immediately makes it a lot nicer, right?

106
00:06:10.218 --> 00:06:12.376
Now, you're like, okay,
this is much easier.

107
00:06:12.376 --> 00:06:17.063
A little thing about ansible is
that it runs from top to bottom.

108
00:06:17.063 --> 00:06:20.634
So whatever order the tasks are in,
that's the order it runs.

109
00:06:20.634 --> 00:06:24.000
But I think you can see, oop,
we got a question, Ivan?

110
00:06:25.930 --> 00:06:29.398
&gt;&gt; So my question was,
when do you decide when to use ansible and

111
00:06:29.398 --> 00:06:32.000
when to write a bash script?

112
00:06:32.000 --> 00:06:36.166
&gt;&gt; So my general rule of thumb is,
anything that is installable,

113
00:06:36.166 --> 00:06:38.377
I just use ansible universally.

114
00:06:38.377 --> 00:06:41.914
So whenever I have to use a new tool,
so I actually have an Ansible script and

115
00:06:41.914 --> 00:06:44.905
both for my personal life and
also for my Netflix life, right?

116
00:06:44.905 --> 00:06:48.394
And other people can use that same
Ansible script at Netflix to get up and

117
00:06:48.394 --> 00:06:52.470
running for that specific team, which is
actually very convenient because we have

118
00:06:52.470 --> 00:06:56.425
hundreds of teams, and so I have to work,
unforced them in one of those positions

119
00:06:56.425 --> 00:06:58.961
where I work on about four or
five different teams.

120
00:06:58.961 --> 00:07:03.470
And so I'm constantly having to have
other people's environments all the time.

121
00:07:03.470 --> 00:07:06.714
And so having something that can
get me up and running, and so

122
00:07:06.714 --> 00:07:09.395
I just don't forget all
the things super useful.

123
00:07:09.395 --> 00:07:11.968
So I put everything in Ansible,
I can, except for

124
00:07:11.968 --> 00:07:14.230
just even installing the dot files.

125
00:07:14.230 --> 00:07:17.443
But I have, all are in Ansible,
but how I install dotfiles,

126
00:07:17.443 --> 00:07:18.901
I use a different program.

127
00:07:18.901 --> 00:07:21.374
I don't manually specify
each link in Ansible.

128
00:07:21.374 --> 00:07:25.850
I feel once you got into that world,
you've probably maybe went too far, right?

129
00:07:25.850 --> 00:07:29.242
You shouldn't probably be writing shell
and just doing raw scripts constantly,

130
00:07:29.242 --> 00:07:32.353
there should be some sort of plugin,
there should be some sort of built in.

131
00:07:32.353 --> 00:07:36.163
I just use npm, and then specify
the name if it's global, right,

132
00:07:36.163 --> 00:07:39.070
that's a good thing for Ansible to do.

133
00:07:39.070 --> 00:07:43.691
Obviously, like going back to that said
part, right, at manually installed the szh

134
00:07:43.691 --> 00:07:47.990
auto suggestions using said, to me,
that was me breaking really Ansible, and

135
00:07:47.990 --> 00:07:50.834
just kinda turning it into
just a raw script engine.

136
00:07:50.834 --> 00:07:53.679
So probably don't do that, but
hopefully you can kinda see,

137
00:07:53.679 --> 00:07:56.210
does that sufficiently
answer your question, Ivan?

138
00:07:58.030 --> 00:07:59.720
&gt;&gt; Yeah, definitely, thanks.

139
00:07:59.720 --> 00:08:02.812
&gt;&gt; So you're probably seeing
where I'm going with this,

140
00:08:02.812 --> 00:08:06.210
there's way too many tasks
going on right now, right?

141
00:08:06.210 --> 00:08:10.630
This file is going to get,
it's just going to be gigantic, right?

142
00:08:10.630 --> 00:08:12.731
This is gonna be super
painful to go through,

143
00:08:12.731 --> 00:08:14.820
I don't wanna have to deal with that.

144
00:08:14.820 --> 00:08:17.021
So let's pretend like this doesn't exist,
and

145
00:08:17.021 --> 00:08:19.069
that I definitely deleted
that before hand.

146
00:08:19.069 --> 00:08:23.180
And my goodness, there is a task
directory that I have right here.

147
00:08:23.180 --> 00:08:25.623
And so
I'm gonna open up this task directory, and

148
00:08:25.623 --> 00:08:28.073
I'm going to create
something called node YAML.

149
00:08:28.073 --> 00:08:30.959
And then I'm gonna create
something called zsh.yml.

150
00:08:30.959 --> 00:08:32.275
I'm gonna save it also.

151
00:08:32.275 --> 00:08:35.902
And we're gonna go back to our main file
here, and I'm gonna go up to my tasks, and

152
00:08:35.902 --> 00:08:39.004
I'm gonna go all the way down to
the point where node is being used, and

153
00:08:39.004 --> 00:08:40.550
I'm gonna just delete all these.

154
00:08:40.550 --> 00:08:43.064
So that's all I've done,
is just deleted the tasks,

155
00:08:43.064 --> 00:08:45.371
I haven't changed anything
else about the file.

156
00:08:45.371 --> 00:08:49.420
I'll save it, jump over to my zsh file,
and move it back one, and that's it.

157
00:08:49.420 --> 00:08:53.489
Go back to the main file,
go down through node, delete up the nodes,

158
00:08:53.489 --> 00:08:56.360
go to my node file, and
put those right there.

159
00:08:56.360 --> 00:09:00.490
There we go, everything's aligned,
we're looking good, we have my node

160
00:09:00.490 --> 00:09:04.888
with the node tasks, we have my zsh with
the zsh task, we just need one more item.

161
00:09:04.888 --> 00:09:08.454
I'm gonna go back to here, and
I'm gonna go include zsh_yml, but

162
00:09:08.454 --> 00:09:10.420
it's actually, what is it?

163
00:09:10.420 --> 00:09:15.132
There we go, and then I'll do the exact
same thing, f to z, go like that,

164
00:09:15.132 --> 00:09:16.745
node, perfect.

165
00:09:16.745 --> 00:09:20.201
Now I've included those two files, so
we've taken this really big file and

166
00:09:20.201 --> 00:09:21.616
turn it into something small.

167
00:09:21.616 --> 00:09:24.892
Now we're breaking up tasks and
making them smaller and smaller, so

168
00:09:24.892 --> 00:09:27.115
that it's really easy to understand.

169
00:09:27.115 --> 00:09:28.822
What do I do when I'm installing node?

170
00:09:28.822 --> 00:09:33.120
I do this, I could add in here,
Type Script, Type Script language server,

171
00:09:33.120 --> 00:09:35.335
I could add in a bunch of those items, so

172
00:09:35.335 --> 00:09:38.491
that way each time I install
a new version of node with n,

173
00:09:38.491 --> 00:09:43.420
I also install along with it, each version
of the corresponding npm modules, right?

174
00:09:43.420 --> 00:09:46.815
You can go really in depth in here,
but we're not gonna do that for now.

175
00:09:46.815 --> 00:09:48.650
So there we go, we have that all running.

176
00:09:48.650 --> 00:09:53.279
And of course, if I were to redo
the build-dockers, redo the docker run,

177
00:09:53.279 --> 00:09:54.830
do ansible-playbook.

178
00:09:54.830 --> 00:10:01.300
And this time let's do tag zsh because
it's just faster, and then run fem.yml.

179
00:10:01.300 --> 00:10:04.968
You'll notice I keep saying a fem.local,
I'll explain why here in a moment,

180
00:10:04.968 --> 00:10:06.075
it's just on my brain.

181
00:10:06.075 --> 00:10:09.539
It will go through, notice,
it updated the cache, it's installing zsh,

182
00:10:09.539 --> 00:10:13.453
changing my shell, getting on my zsh,
having everything running, I'm good to go.

183
00:10:13.453 --> 00:10:17.026
And now it's way more easy to use
that script, and look, it works,

184
00:10:17.026 --> 00:10:19.470
auto suggestions also work as well.

185
00:10:19.470 --> 00:10:23.080
Awesome, it's still running,
everything is running exactly as expected.

186
00:10:23.080 --> 00:10:26.939
I can get a clean system now,
something that has no libraries on it.

187
00:10:26.939 --> 00:10:30.320
I can get it up and
running in a matter of seconds.

188
00:10:30.320 --> 00:10:32.928
The reason why I keep
saying that local business,

189
00:10:32.928 --> 00:10:37.130
is that if you look at the files that I
have, one of them is called, Local.yml.

190
00:10:37.130 --> 00:10:41.244
So if you have a repo, and
let's just go back to, here go ansible.

191
00:10:41.244 --> 00:10:42.080
Do I have it?

192
00:10:42.080 --> 00:10:42.610
Yeah, there we go.

193
00:10:44.070 --> 00:10:45.640
I have this as a repo, right?

194
00:10:45.640 --> 00:10:46.879
It has a bunch of stuff in here,

195
00:10:46.879 --> 00:10:49.331
you'll notice,
what does that dangerous SSH folder.

196
00:10:49.331 --> 00:10:53.360
But anyways, I have it all on here,
I have a file called local.yml.

197
00:10:53.360 --> 00:10:55.837
If I wanted to install this repo,

198
00:10:55.837 --> 00:11:01.144
instead of doing ansible playbook
with the files already on my system,

199
00:11:01.144 --> 00:11:05.222
I can do ansible.pull with
all the same key commands.

200
00:11:05.222 --> 00:11:09.162
So I could literally do
ansible.pull instead,

201
00:11:09.162 --> 00:11:13.589
and provided a URL which would
be the URL to my Git repo.

202
00:11:13.589 --> 00:11:15.032
And it would do the rest for you,

203
00:11:15.032 --> 00:11:18.680
meaning that you don't even have to
have the thing cloned on your system.

204
00:11:18.680 --> 00:11:23.101
You just have to have Ansible installed
which takes a few lines of installation.

205
00:11:23.101 --> 00:11:27.176
And that means even more so, I actually
have this little script right here,

206
00:11:27.176 --> 00:11:29.544
Ansible run,
which just does it all for me.

207
00:11:29.544 --> 00:11:31.700
I don't have to do anything, right?

208
00:11:31.700 --> 00:11:36.649
All I have to do is just go to GitHub,
go to my public repo, get this script in

209
00:11:36.649 --> 00:11:41.364
the raw, I can copy and just either
paste it directly into my system, or

210
00:11:41.364 --> 00:11:46.648
I can just curl it down and type or write
to SSH or SH and it'll just work, right?

211
00:11:46.648 --> 00:11:48.015
It just simply works, and

212
00:11:48.015 --> 00:11:51.730
I can have my entire system boot
strapped in a matter of moments.

213
00:11:51.730 --> 00:11:54.616
And for those that don't know,
I use a custom keyboard layout.

214
00:11:54.616 --> 00:11:57.849
So when I have to type in QWERTY by
the way, I use Dvorak, by the way.

215
00:11:57.849 --> 00:12:01.383
When I use QWERTY, as I like to call it,
which is gonna be of course,

216
00:12:01.383 --> 00:12:03.988
they are your QU,
whatever that thing is called.

217
00:12:03.988 --> 00:12:07.510
All those fancy symbols that
people use Q-W-E-R-T, right?

218
00:12:07.510 --> 00:12:11.360
That's your top row, I don't even have to
worry about that, everything will be up

219
00:12:11.360 --> 00:12:14.825
and running and working, and my keyboard
will be all software remapped and

220
00:12:14.825 --> 00:12:17.680
everything, and so
I'm just ready to go right away.

221
00:12:17.680 --> 00:12:19.080
All right, Ivan,
you have another question?

222
00:12:20.640 --> 00:12:25.430
&gt;&gt; Yeah, can it be used to install
the operating system itself?

223
00:12:25.430 --> 00:12:29.398
&gt;&gt; You can install i3 and
other desktop managers or

224
00:12:29.398 --> 00:12:32.600
window managers and things like that.

225
00:12:32.600 --> 00:12:34.880
I've never used it to
install an operating system.

226
00:12:34.880 --> 00:12:38.765
I don't think you can do that because
Ansible kind of assumes there already

227
00:12:38.765 --> 00:12:41.060
isn't an operating system itself.

228
00:12:41.060 --> 00:12:44.240
Unless of some operating system,
I've never installed arch, so

229
00:12:44.240 --> 00:12:46.639
I don't know if you can
install arch from Ubuntu.

230
00:12:46.639 --> 00:12:50.287
My guess is that you can't do that,
you're gonna have to go through grub and

231
00:12:50.287 --> 00:12:53.081
the whole nine yards and
get your system partitioned, and

232
00:12:53.081 --> 00:12:56.220
have everything set up and
boom, then you're ready to go.

233
00:12:56.220 --> 00:13:00.415
So I don't think you can do that, but
once you have your operating system,

234
00:13:00.415 --> 00:13:05.209
if you're on Windows, you launch the Linux
subsystem, and just pull it down right at

235
00:13:05.209 --> 00:13:09.825
the rock, everything's ready in Windows
environment, math, exact same way.

236
00:13:09.825 --> 00:13:15.599
The thing I'm not showing right now is
that Ansible also has a with clause.

237
00:13:15.599 --> 00:13:18.806
And a with clause means that I can say,
hey, with this operating system,

238
00:13:18.806 --> 00:13:21.204
do this, with this other operating system,
do that.

239
00:13:21.204 --> 00:13:25.587
So that way, you can even have
operating system dependent commands,

240
00:13:25.587 --> 00:13:30.121
because obviously your Mac installation
might be slightly different,

241
00:13:30.121 --> 00:13:33.260
not on zsh, but
say on your node package manager.

242
00:13:33.260 --> 00:13:35.709
Because you're gonna be
using brew instead of apt.

243
00:13:35.709 --> 00:13:38.344
And so there's a lot of these
little tricks you can do to

244
00:13:38.344 --> 00:13:40.015
make it really straightforward.

