WEBVTT

1
00:00:00.150 --> 00:00:04.362
So what I think we should do is
let's create the zsh install, but

2
00:00:04.362 --> 00:00:09.780
this time instead of me doing it by hand
one at a time, let's just use Ansible.

3
00:00:09.780 --> 00:00:13.151
So I'm gonna jump back here,
and I'm gonna exit this.

4
00:00:13.151 --> 00:00:14.560
We're gonna exit this one too.

5
00:00:14.560 --> 00:00:16.829
I'm gonna go to, let's see,
where do we wanna go?

6
00:00:16.829 --> 00:00:21.498
Let's go to Ansible really quickly, and
I'm going to just open up Vim right here

7
00:00:21.498 --> 00:00:26.048
and I'm gonna delete this cuz I definitely
have not practiced this once ever.

8
00:00:26.048 --> 00:00:28.820
This is brand new,
first time I've ever done this.

9
00:00:28.820 --> 00:00:32.961
And so we're gonna open up, we're gonna
call it fem.yml, Frontend Masters YAML.

10
00:00:32.961 --> 00:00:35.810
I'll go back here, and let's just cut and
paste this whole thing.

11
00:00:36.970 --> 00:00:38.120
There we go.

12
00:00:38.120 --> 00:00:40.170
And we have that, we don't need pre_tasks.

13
00:00:40.170 --> 00:00:41.590
We don't really need vars.

14
00:00:41.590 --> 00:00:42.800
We can have tasks.

15
00:00:42.800 --> 00:00:44.220
There we go, looking good.

16
00:00:44.220 --> 00:00:46.541
I don't remember the shape of the task,
so I'm just gonna copy and

17
00:00:46.541 --> 00:00:47.840
paste this one right here.

18
00:00:47.840 --> 00:00:52.570
This feels about right, let's,
oopsies, let's paste this one in.

19
00:00:52.570 --> 00:00:53.420
There we go.

20
00:00:53.420 --> 00:00:56.308
We have a name,
looks like this, install zsh.

21
00:00:56.308 --> 00:00:59.597
And then let's go apt, oop.

22
00:00:59.597 --> 00:01:01.717
For whatever reason,
my indenting, I have yet

23
00:01:01.717 --> 00:01:03.580
to figure out why it doesn't work right.

24
00:01:03.580 --> 00:01:04.980
It just drives me nuts.

25
00:01:04.980 --> 00:01:06.320
And then we don't need any tags.

26
00:01:06.320 --> 00:01:08.970
So we're gonna go apt install name=zsh.

27
00:01:08.970 --> 00:01:09.830
There we go.

28
00:01:09.830 --> 00:01:13.590
I now have something that
will just simply install zsh.

29
00:01:13.590 --> 00:01:18.138
So let me just close this down and
let's just rerun Docker.

30
00:01:18.138 --> 00:01:21.079
Oops, actually I have to build Dockers,
don't worry.

31
00:01:21.079 --> 00:01:25.750
I believe I actually have, I thought
I had a, what is it, a build script.

32
00:01:25.750 --> 00:01:28.941
Yeah, there we go.

33
00:01:28.941 --> 00:01:35.515
And so now we can go ansible-playbook, and
we can pass in fem.local right, fem.yml.

34
00:01:35.515 --> 00:01:37.559
This will take that and
it'll run everything.

35
00:01:37.559 --> 00:01:39.790
Okay, I need to install zsh for you.

36
00:01:39.790 --> 00:01:41.406
And so it's gonna go out,
it's gonna download it,

37
00:01:41.406 --> 00:01:44.360
it's gonna make everything happen, and
it's gonna tell you kind of what happened.

38
00:01:44.360 --> 00:01:46.363
So now I can actually execute zsh.

39
00:01:46.363 --> 00:01:48.781
Now this isn't my full environment, but

40
00:01:48.781 --> 00:01:52.300
I now have something that
specifies what to do for me.

41
00:01:52.300 --> 00:01:53.775
So when I have something new,

42
00:01:53.775 --> 00:01:56.667
I don't have to remember every
single step along the way.

43
00:01:56.667 --> 00:01:58.810
So let's exit zsh, let's exit Docker.

44
00:01:58.810 --> 00:01:59.809
There we go.
So we're back here.

45
00:01:59.809 --> 00:02:03.758
Let's reopen up this, let's grab that.

46
00:02:03.758 --> 00:02:05.570
Let's add it,
make sure that's the only thing.

47
00:02:05.570 --> 00:02:06.670
There we go.

48
00:02:06.670 --> 00:02:07.620
And there we go.

49
00:02:07.620 --> 00:02:09.670
So we have this task but
we need more tasks.

50
00:02:09.670 --> 00:02:12.248
Remember, I also have to
remember to change my shell so

51
00:02:12.248 --> 00:02:16.320
that when I start up a new terminal,
I'm using the shell that I expect to use.

52
00:02:16.320 --> 00:02:19.755
So I can go in here and go Change shell,
I'll just give it a nice name so

53
00:02:19.755 --> 00:02:21.025
I don't have to forget.

54
00:02:21.025 --> 00:02:25.486
Shell: chsh -s 'which zsh'.

55
00:02:25.486 --> 00:02:28.638
So it's just like the previous one,
we did this command before but

56
00:02:28.638 --> 00:02:32.150
now I've just simply specified it
right here and we can do it again.

57
00:02:32.150 --> 00:02:39.530
Now you go, install ohmyzsh (please
don't tell people I use this).

58
00:02:39.530 --> 00:02:40.320
There we go.

59
00:02:40.320 --> 00:02:43.740
Now we have that and of course,
we can do the ohmyzsh installation,

60
00:02:43.740 --> 00:02:46.140
which I will never remember
off the top my head.

61
00:02:46.140 --> 00:02:49.830
So I actually have to just simply copy and
paste this.

62
00:02:49.830 --> 00:02:51.410
And so let's copy, let's paste this.

63
00:02:51.410 --> 00:02:52.710
There's probably a better way to do this.

64
00:02:52.710 --> 00:02:55.599
It's gonna give me a warning, hey,
use curl instead of just using shell but

65
00:02:55.599 --> 00:02:57.510
we're just gonna do that for now.

66
00:02:57.510 --> 00:03:02.018
Then we got to remember we need
to install the zsh plugin for

67
00:03:02.018 --> 00:03:05.040
auto suggestions, right?

68
00:03:05.040 --> 00:03:09.930
So let's do that right now, we'll go here,
and there is a way to be able to do Git.

69
00:03:09.930 --> 00:03:13.359
So I don't need to use the shell,
I can actually use a specific Git plugin.

70
00:03:13.359 --> 00:03:14.970
So let's just paste those in here.

71
00:03:14.970 --> 00:03:17.985
And I can go Ansible, you can look
all these things up really easy.

72
00:03:17.985 --> 00:03:22.420
So I'll go like this, ansible git clone.

73
00:03:22.420 --> 00:03:25.020
Go in here, top one.

74
00:03:25.020 --> 00:03:29.161
It right away always has examples, jump to
the example of that repo, distribution and

75
00:03:29.161 --> 00:03:30.980
you can even say version.

76
00:03:30.980 --> 00:03:32.770
So, very, very nice, awesome.

77
00:03:32.770 --> 00:03:33.820
Let's jump in here.

78
00:03:33.820 --> 00:03:35.510
Let's just paste that in there.

79
00:03:37.510 --> 00:03:38.440
All right, there we go.

80
00:03:38.440 --> 00:03:40.790
So I have Ansible Git and
then I can just specify repo.

81
00:03:40.790 --> 00:03:43.116
So let's just specify repo.

82
00:03:43.116 --> 00:03:45.820
Let's take, let's say D word.

83
00:03:45.820 --> 00:03:49.230
There we go.
Let's paste that in there, fantastic.

84
00:03:49.230 --> 00:03:49.860
What was the question?

85
00:03:51.190 --> 00:03:55.810
&gt;&gt; What's the difference between this and
just some ugly bash scripts?

86
00:03:55.810 --> 00:03:58.273
&gt;&gt; The difference between this and
an ugly bash script is that,

87
00:03:58.273 --> 00:04:01.110
well, we're gonna get there
where Git's a lot better.

88
00:04:01.110 --> 00:04:03.316
I kinda wanted to save that here for
a moment,

89
00:04:03.316 --> 00:04:06.580
what really makes this significantly
better, but you are right.

90
00:04:06.580 --> 00:04:10.410
This is a lot like an ugly bash script but
it's gonna get a lot better.

91
00:04:10.410 --> 00:04:12.890
So I would like to kind
of show that as we go.

92
00:04:12.890 --> 00:04:16.857
Don't worry,
I have some things planned but yes,

93
00:04:16.857 --> 00:04:22.300
this is like a bash script but
using YAML to kind of specify each task.

94
00:04:22.300 --> 00:04:24.623
Now I used to do the bash script way,

95
00:04:24.623 --> 00:04:28.344
I actually had about
a 300-line install script, and

96
00:04:28.344 --> 00:04:33.483
I would just like to let you know that I
never successfully had it run first try.

97
00:04:33.483 --> 00:04:37.420
I know, I usually do everything first try,
but this time I just couldn't quite get

98
00:04:37.420 --> 00:04:40.023
it to do it first try, and
it's really, really hard.

99
00:04:40.023 --> 00:04:42.007
Whereas this I found to be very easy,

100
00:04:42.007 --> 00:04:45.975
especially when it comes to using Git,
using some of the finer features,

101
00:04:45.975 --> 00:04:50.519
being able to do all that extra stuff cuz
even when you do, say, this get operation,

102
00:04:50.519 --> 00:04:53.315
I could also do something
with submodules in here.

103
00:04:53.315 --> 00:04:55.319
So I could specify how they
want to use submodules.

104
00:04:55.319 --> 00:05:00.945
I can say, hey, use my ssh key,
instead of just using an HTTPS clone.

105
00:05:00.945 --> 00:05:04.144
There's a lot more to it but
I'm just trying to keep it simple for now.

106
00:05:04.144 --> 00:05:08.640
Right now this just looks like a really
simple bash scripts gone complex, right?

107
00:05:08.640 --> 00:05:10.506
So we'll get there, don't you worry.

108
00:05:10.506 --> 00:05:13.480
And we have one last task
we need to do right now.

109
00:05:13.480 --> 00:05:19.650
So let's paste this thing in here and
we need to update our zshrc, right?

110
00:05:19.650 --> 00:05:22.307
Now, I'm gonna cheat, so
don't do this at home, kids.

111
00:05:22.307 --> 00:05:25.561
But I'm just simply gonna use sed to

112
00:05:25.561 --> 00:05:30.050
kind of replace that one
line inside my plugins.

113
00:05:30.050 --> 00:05:32.457
So I remember the line that
says plugins equals get,

114
00:05:32.457 --> 00:05:35.800
but I'm actually gonna make it
call git zsh-autosuggestions.

115
00:05:35.800 --> 00:05:41.092
I'm pretty sure that
even Ansible will say,

116
00:05:41.092 --> 00:05:43.744
hey, don't use sed.

117
00:05:43.744 --> 00:05:46.150
You should install this
from a clean location.

118
00:05:46.150 --> 00:05:49.667
Now normally I have dotfiles that
already have this in here, but for

119
00:05:49.667 --> 00:05:53.248
this little example, I'm just simply
gonna replace git with this so

120
00:05:53.248 --> 00:05:57.970
everything else works, and then of course
pass in the zshrc, zshrc, there we go.

121
00:05:57.970 --> 00:05:58.980
Everything looks good.

122
00:05:58.980 --> 00:06:00.240
So let's quit the script.

123
00:06:00.240 --> 00:06:01.960
Let's rebuild the dockers.

124
00:06:01.960 --> 00:06:02.510
So there we go.

125
00:06:02.510 --> 00:06:04.520
We got that going here, dockers run.

126
00:06:04.520 --> 00:06:08.397
So this is why I created a clean
environment to test things over and

127
00:06:08.397 --> 00:06:09.480
over again.

128
00:06:09.480 --> 00:06:11.374
Is that I always have
something I can test, and

129
00:06:11.374 --> 00:06:14.110
to make sure it actually
works on a new system.

130
00:06:14.110 --> 00:06:18.407
Even when I was doing this presentation,
my zsh script wasn't necessarily correct.

131
00:06:18.407 --> 00:06:20.850
I didn't have to do some of
these things that I'm doing now.

132
00:06:20.850 --> 00:06:23.891
But I was able to just kind of redo
this over and over again going yes,

133
00:06:23.891 --> 00:06:26.890
I've done this correct, or no,
I haven't done this correct.

134
00:06:26.890 --> 00:06:29.586
So notice it gets done installing,
everything looks fine.

135
00:06:29.586 --> 00:06:32.150
I do this, I press O, look at that.

136
00:06:32.150 --> 00:06:35.559
It is now autocompleting,
everything is set up the way I wanted it.

137
00:06:35.559 --> 00:06:39.000
Now obviously, I wouldn't use sed but
this is just an example.

138
00:06:39.000 --> 00:06:40.010
Yeah, I think there's a question.

139
00:06:41.050 --> 00:06:42.065
&gt;&gt; What is sed again?

140
00:06:42.065 --> 00:06:43.292
Why would we use it?

141
00:06:43.292 --> 00:06:46.895
&gt;&gt; Sed, I'm actually gonna go
over sed later in this talk.

142
00:06:46.895 --> 00:06:50.824
So effectively, sed,
it's a streaming version of ed.

143
00:06:50.824 --> 00:06:55.470
If you don't know what ed is, ed is one
of the oldest editors known to man.

144
00:06:55.470 --> 00:06:57.750
It is a very painful editor to use.

145
00:06:57.750 --> 00:07:00.464
It is the precursor to Vi, and
Vi is the precursor to Vim, and

146
00:07:00.464 --> 00:07:01.970
Vim's the precursor to Neovim.

147
00:07:01.970 --> 00:07:06.700
So there's a lot of iterations that
have actually gone on, and I've didn't

148
00:07:06.700 --> 00:07:11.457
even mention the editor Stevie, which
is actually the true successor to ed.

149
00:07:11.457 --> 00:07:16.573
But effectively all it is, it's an ability
to read lines and then do something

150
00:07:16.573 --> 00:07:21.790
to them and you can mutate the file or
pipe everything out to standard out.

151
00:07:21.790 --> 00:07:26.312
And so it's a very useful tool, especially
if you're having to do some log searching,

152
00:07:26.312 --> 00:07:30.529
manipulation, changing things, anything
in large files that you don't have,

153
00:07:30.529 --> 00:07:31.526
like a repo round.

154
00:07:31.526 --> 00:07:34.150
A lot of people will, hey,
I need to jump in here.

155
00:07:34.150 --> 00:07:39.190
There's a couple occurrences of something
that are in this folder I need to change.

156
00:07:39.190 --> 00:07:42.655
Well, I'm gonna just launch IntelliJ and
do a Find and Replace,

157
00:07:42.655 --> 00:07:44.236
you can easily do it with sed.

158
00:07:44.236 --> 00:07:48.683
It's a very nice tool for whenever you're
doing any sort of ad hoc manipulations or

159
00:07:48.683 --> 00:07:50.720
you have output from a program.

160
00:07:50.720 --> 00:07:54.170
You can either take in, change it and
make it into something else.

161
00:07:54.170 --> 00:07:57.903
Sed is a really great tool and I'll kinda
go over how to better understand sed, but

162
00:07:57.903 --> 00:07:59.377
that'll be a little bit later.

163
00:07:59.377 --> 00:08:01.389
So don't worry,
if you don't understand sed,

164
00:08:01.389 --> 00:08:03.116
it will become very clear in a little bit.

165
00:08:03.116 --> 00:08:06.478
I just wanted to kinda get this example
up to show you how easy was that for

166
00:08:06.478 --> 00:08:07.387
me to install zsh.

167
00:08:07.387 --> 00:08:11.972
Now in one year from now when I get a new
computer, I just run, my Ansible script,

168
00:08:11.972 --> 00:08:14.640
and I have my command
line all ready to rock.

169
00:08:14.640 --> 00:08:16.660
It's exactly the way I want it, awesome.

170
00:08:16.660 --> 00:08:18.970
It has auto suggestions on it,
feels great.

