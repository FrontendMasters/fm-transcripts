WEBVTT

1
00:00:00.000 --> 00:00:01.595
So there we go.

2
00:00:01.595 --> 00:00:04.856
I mean, we just built something
that is pretty dang awesome.

3
00:00:04.856 --> 00:00:07.901
And it's so small, just for a second.

4
00:00:07.901 --> 00:00:11.474
I know, I'm not gonna make that joke, but

5
00:00:11.474 --> 00:00:16.052
this is only what, eight lines,
nine lines of gifts.

6
00:00:16.052 --> 00:00:18.452
You count the second little
dangling if down here.

7
00:00:18.452 --> 00:00:20.118
Nine lines of code.

8
00:00:20.118 --> 00:00:25.740
It's an exceptionally small script and
it does so much.

9
00:00:25.740 --> 00:00:28.251
And this is one thing
that I love about tmux.

10
00:00:28.251 --> 00:00:31.946
Is everything about it is so
well built, right?

11
00:00:31.946 --> 00:00:36.800
Like every part of this is so well
done that even me never doing anything

12
00:00:36.800 --> 00:00:40.192
with split panes just
easily do the right thing.

13
00:00:40.192 --> 00:00:43.825
Just because I knew how split Window or
I knew how new Window works.

14
00:00:43.825 --> 00:00:45.429
And I knew how new session works.

15
00:00:45.429 --> 00:00:47.997
I can just kinda guess my
way completely through and

16
00:00:47.997 --> 00:00:49.795
make the next one work just as well.

17
00:00:49.795 --> 00:00:54.153
It's a really well designed piece of
software and it just runs on its own.

18
00:00:54.153 --> 00:00:57.886
So if you like alacrity,
the terminal emulator or Kitty, right.

19
00:00:57.886 --> 00:01:00.132
You're there, tell me all about kitty.

20
00:01:00.132 --> 00:01:00.926
Well, guess what?

21
00:01:00.926 --> 00:01:01.648
That's okay.

22
00:01:01.648 --> 00:01:03.699
You can use that plus
team ox at the same time.

23
00:01:03.699 --> 00:01:07.045
You don't have to use their built
in emulators if you don't want.

24
00:01:07.045 --> 00:01:09.220
Or their a built in multiplexers.

25
00:01:09.220 --> 00:01:13.155
That's how well tmux works is
it just is its thing by itself.

26
00:01:13.155 --> 00:01:14.928
I absolutely love it personally.

27
00:01:14.928 --> 00:01:16.612
It's just so fantastic to me.

28
00:01:16.612 --> 00:01:18.640
And so this is an awesome script.

29
00:01:18.640 --> 00:01:20.118
Really helps with the workflow,

30
00:01:20.118 --> 00:01:22.659
especially like things like
reading from the standard.

31
00:01:22.659 --> 00:01:24.247
And it just gives me that so quick.

32
00:01:24.247 --> 00:01:26.600
It's exactly what I would
go look up on Google, and

33
00:01:26.600 --> 00:01:29.246
I can just get it in a moment's
notice it's much easier.

34
00:01:29.246 --> 00:01:32.695
So hopefully you like this kind
of little script we built here.

35
00:01:32.695 --> 00:01:34.313
Man, I just love this kind of stuff.

36
00:01:34.313 --> 00:01:36.543
To me this is just like
the most exciting part, right?

37
00:01:36.543 --> 00:01:38.371
So I linked it up using tmux.

38
00:01:38.371 --> 00:01:40.274
Because this is something
I'm only gonna use in tmux.

39
00:01:40.274 --> 00:01:41.936
Obviously splitting a Window.

40
00:01:41.936 --> 00:01:45.713
I feel like just I don't want to
really to create a new window,

41
00:01:45.713 --> 00:01:47.103
you could put this up.

42
00:01:47.103 --> 00:01:50.378
So this is what I have
inside of my tmux RC.

43
00:01:50.378 --> 00:01:52.158
You could use this inside of them.

44
00:01:52.158 --> 00:01:55.764
It'd be kind of weird to put it in maybe
you'd need to put some options in there to

45
00:01:55.764 --> 00:01:57.246
create a new session slash Window.

46
00:01:57.246 --> 00:01:58.707
If you don't have tmux running, right.

47
00:01:58.707 --> 00:02:02.653
It gets a little bit more complicated
if you want to run this from anywhere.

48
00:02:02.653 --> 00:02:05.908
If you're doing the whole kind
of split Window approach, but

49
00:02:05.908 --> 00:02:08.734
nonetheless, this totally works,
it's awesome.

50
00:02:08.734 --> 00:02:09.829
It's easy to link up.

51
00:02:09.829 --> 00:02:13.083
You can choose where you want to
put kind of the hooks into it.

52
00:02:13.083 --> 00:02:15.599
You could even build
this exact same program.

53
00:02:15.599 --> 00:02:16.843
Not even using tmux.

54
00:02:16.843 --> 00:02:20.505
You could use i3 and Rofi menu and
do effectively the exact or row five and

55
00:02:20.505 --> 00:02:22.801
no one knows how to
pronounce that by the way.

56
00:02:22.801 --> 00:02:27.608
And you can build almost the identical
thing using completely different

57
00:02:27.608 --> 00:02:28.560
technology.

58
00:02:28.560 --> 00:02:30.836
And that's what makes some
of these things so awesome.

59
00:02:30.836 --> 00:02:32.651
Is that If you have a good piece of tech,

60
00:02:32.651 --> 00:02:36.243
you know it's good because it just
contains the building blocks that needs.

61
00:02:36.243 --> 00:02:40.068
So I was able to use cht.sh by itself and
use tmux by itself and

62
00:02:40.068 --> 00:02:42.924
I was able to combine them and
including fcf.

63
00:02:42.924 --> 00:02:44.943
And it's just like, It's just so creamy.

64
00:02:44.943 --> 00:02:46.451
It just works so well.

65
00:02:46.451 --> 00:02:47.788
And so there you go.

66
00:02:47.788 --> 00:02:49.763
There's us using tmux.

67
00:02:49.763 --> 00:02:51.257
So we're gonna get coming to the ending.

68
00:02:51.257 --> 00:02:53.734
Which is just me saying hey,
there's awesome plugins out there.

69
00:02:53.734 --> 00:02:55.672
I actually haven't used any of these but

70
00:02:55.672 --> 00:02:58.584
these are the ones that I get
recommended using all the time.

71
00:02:58.584 --> 00:03:00.579
Resurrect I hear is pretty awesome.

72
00:03:00.579 --> 00:03:04.356
It will effectively try to re or
wrecked your processes.

73
00:03:04.356 --> 00:03:06.480
So that way, when you leave and come back,

74
00:03:06.480 --> 00:03:09.612
it will actually put you back
into the previous state you were.

75
00:03:09.612 --> 00:03:10.612
Pretty awesome.

76
00:03:10.612 --> 00:03:15.516
Sessioniserl, all these to do is allow you
to be able to say, hey, I wanna create

77
00:03:15.516 --> 00:03:20.872
this session with this many windows, split
like this, with these processes running.

78
00:03:20.872 --> 00:03:23.354
And it'll just do it all for
you instantaneously, right?

79
00:03:23.354 --> 00:03:26.785
I bet if I just jump in here,
I'll have a little sweet gift, right?

80
00:03:26.785 --> 00:03:29.068
I bet it will, they all have gifts.

81
00:03:29.068 --> 00:03:30.885
Okay, this one doesn't have a gift.

82
00:03:30.885 --> 00:03:31.611
Yes it does.

83
00:03:31.611 --> 00:03:34.754
tmuxp load, go.

84
00:03:34.754 --> 00:03:35.394
Press Enter.

85
00:03:38.426 --> 00:03:38.938
There we go.

86
00:03:38.938 --> 00:03:39.471
Look at it.

87
00:03:39.471 --> 00:03:43.546
See it has what they would consider
a vertical split with vim open in one

88
00:03:43.546 --> 00:03:44.110
of them.

89
00:03:44.110 --> 00:03:47.421
And whatever this Tony at yoga,
I don't know what that is.

90
00:03:47.421 --> 00:03:48.099
But there you go,

91
00:03:48.099 --> 00:03:50.735
like notice that it had this like
kind of whole thing built around it.

92
00:03:50.735 --> 00:03:51.811
Pretty cool, right?

93
00:03:51.811 --> 00:03:54.042
It can like hydrate these sessions and

94
00:03:54.042 --> 00:03:56.979
create them the way you
want them really quickly.

95
00:03:56.979 --> 00:03:59.261
And so
I think I love these type of things.

96
00:03:59.261 --> 00:04:01.940
I think they're an awesome
way to go about doing stuff.

97
00:04:01.940 --> 00:04:04.981
I don't really like the idea of
having to manually type them in.

98
00:04:04.981 --> 00:04:07.715
So you can imagine how you
had those name sessions.

99
00:04:07.715 --> 00:04:09.487
Well, you could use fcf.

100
00:04:09.487 --> 00:04:13.308
You could have those named sessions
probably in a file somewhere or

101
00:04:13.308 --> 00:04:16.116
a way to read that file for
all the session names.

102
00:04:16.116 --> 00:04:17.500
Pipe those to fcf.

103
00:04:17.500 --> 00:04:20.581
Select the one you want,
loaded up for yourself and boom.

104
00:04:20.581 --> 00:04:24.993
Now you have almost the identical plugin
that we just got done building for

105
00:04:24.993 --> 00:04:28.920
File system movement for
tmux p Sessionizing movement, right?

106
00:04:28.920 --> 00:04:32.881
You could really make these things really
cool, really slick and work really fast.

107
00:04:32.881 --> 00:04:34.908
And that's why I just love.

108
00:04:34.908 --> 00:04:39.115
So I do have a TmuxRC,
you put it at home Tmux comp.

109
00:04:39.115 --> 00:04:41.921
I'm not gonna be talking about this
because I mean honestly like I said,

110
00:04:41.921 --> 00:04:43.765
I haven't really done
much looking into this.

111
00:04:43.765 --> 00:04:46.441
I've copied and pasted everything
I wanted off the internet.

112
00:04:46.441 --> 00:04:50.392
And I have a couple good ideas
put into it, and that's about it.

113
00:04:50.392 --> 00:04:55.598
Like a I unbound prefix b, I'm using
prefix a or Ctrl A instead of Ctrl B.

114
00:04:55.598 --> 00:04:56.755
That's how you do it.

115
00:04:56.755 --> 00:04:57.978
Looks it up on the internet.

116
00:04:57.978 --> 00:04:59.624
That's the way it is.

117
00:04:59.624 --> 00:05:03.924
I bind to my r key to resource
my tmux.conf, I make a change.

118
00:05:03.924 --> 00:05:06.165
All I need to press is prefix r and

119
00:05:06.165 --> 00:05:09.983
it refreshes tmux obsession
to have the new rc into it.

120
00:05:09.983 --> 00:05:14.628
You notice how my windows all start at
one, yours probably all started at zero.

121
00:05:14.628 --> 00:05:16.926
I don't like the idea of
starting at zero down here.

122
00:05:16.926 --> 00:05:20.241
Primary reason why is when
you're switching by a number.

123
00:05:20.241 --> 00:05:22.071
So if I jumped to number two, right.

124
00:05:22.071 --> 00:05:23.372
So number two.

125
00:05:23.372 --> 00:05:26.517
Well it's kind of funny
that would be number one.

126
00:05:26.517 --> 00:05:29.717
So it'd be 1, 0, 1, 0.

127
00:05:29.717 --> 00:05:32.072
Like it just feel kinda weird
going between the pinkies.

128
00:05:32.072 --> 00:05:33.644
Whereas at least you're on like one side,

129
00:05:33.644 --> 00:05:35.616
most of the time switching
between one through four.

130
00:05:35.616 --> 00:05:38.757
To me, it just makes more sense, right?

131
00:05:38.757 --> 00:05:40.296
And lastly, this little cool one.

132
00:05:40.296 --> 00:05:42.500
This is kind of one that I have in my
RC that I thought it was really cool.

133
00:05:42.500 --> 00:05:47.600
I bind D to create a new window
in my current pane's path.

134
00:05:47.600 --> 00:05:50.746
I look forward to do script
in that current path,

135
00:05:50.746 --> 00:05:53.527
else I default to my dotfiles todo script.

136
00:05:53.527 --> 00:05:57.608
Meaning, I can go in here and
press Ctrl+A, Shift+D Go.

137
00:05:57.608 --> 00:05:59.739
Okay, here we go check this out.

138
00:05:59.739 --> 00:06:03.053
Look at look at that little
thing right there, right?

139
00:06:03.053 --> 00:06:03.573
There we go.

140
00:06:03.573 --> 00:06:06.339
I just talked about this V room right?

141
00:06:06.339 --> 00:06:08.488
These are things just notes for myself.

142
00:06:08.488 --> 00:06:11.506
And when I close this just goes
way back to where I was right?

143
00:06:11.506 --> 00:06:14.969
Just cool little ways to have to dues or
ways to be able to keep notes.

144
00:06:14.969 --> 00:06:19.389
And like a pretty fast fashion
without like a lot of overhead.

145
00:06:19.389 --> 00:06:20.872
And that just works in Tmux.

146
00:06:20.872 --> 00:06:22.967
Really, really simple to do, right.

147
00:06:22.967 --> 00:06:24.048
You could make this better.

148
00:06:24.048 --> 00:06:27.409
You could probably make it progressively
look up every single directory as

149
00:06:27.409 --> 00:06:28.005
you walk up.

150
00:06:28.005 --> 00:06:29.335
You could do a lot of things.

151
00:06:29.335 --> 00:06:31.238
I just like it like that.

152
00:06:31.238 --> 00:06:31.897
I'm pretty cool.

153
00:06:31.897 --> 00:06:35.838
I look up pretty much everything on the
internet whenever I wanna make changes.

154
00:06:35.838 --> 00:06:38.025
That's why I'm not doing a whole
bunch of deep diving here.

155
00:06:38.025 --> 00:06:40.484
I don't really have much
expertise on the RC.

156
00:06:40.484 --> 00:06:43.188
I just like playing with the tool itself.

157
00:06:43.188 --> 00:06:45.340
my RC is like, 20 lines long.

158
00:06:45.340 --> 00:06:47.056
It's not very long.

159
00:06:47.056 --> 00:06:50.970
All right, that's it,
people that is the end of section two.

160
00:06:50.970 --> 00:06:54.219
Now remember, the goal of this talk,
as I stated in the beginning,

161
00:06:54.219 --> 00:06:57.250
is to provide knowledge that is
gonna be useful for a long time.

162
00:06:57.250 --> 00:07:00.130
Now, with every job,
you're gonna change inevitably.

163
00:07:00.130 --> 00:07:05.076
Every new stack every new language
that you're eventually gonna use,

164
00:07:05.076 --> 00:07:07.146
you can continue using tmux.

165
00:07:07.146 --> 00:07:08.601
You can continue using a window manager.

166
00:07:08.601 --> 00:07:11.139
You can continue using ansible
to hydrate your system.

167
00:07:11.139 --> 00:07:13.752
You can continue using to get your dot
files where you want to do, right.

168
00:07:13.752 --> 00:07:18.499
Everything that I'm trying to
talk about here is built in such

169
00:07:18.499 --> 00:07:23.533
a way that it should be more
agnostic than your current position.

170
00:07:23.533 --> 00:07:27.791
That's kinda the the whole goal of what
I'm trying to do is give you tools to be

171
00:07:27.791 --> 00:07:29.833
able to use for the rest of your life.

172
00:07:29.833 --> 00:07:32.460
And so tmux has been around for
an incredibly long time.

173
00:07:32.460 --> 00:07:35.374
I assume it's gonna keep being around for
incredibly long time.

174
00:07:35.374 --> 00:07:36.350
It's awesome.

175
00:07:36.350 --> 00:07:37.850
So that's that

