WEBVTT

1
00:00:00.040 --> 00:00:02.140
So I just showed you how to
break up a bunch of those tasks.

2
00:00:02.140 --> 00:00:06.100
But at this point ansible
isn't that useful, right?

3
00:00:06.100 --> 00:00:09.050
A lot of you are probably looking
at it going yeah, that's okay.

4
00:00:09.050 --> 00:00:10.630
Maybe I wanna use my own custom script.

5
00:00:10.630 --> 00:00:14.170
I don't have to learn YAML I don't
have to mess with all this stuff.

6
00:00:14.170 --> 00:00:17.146
Yeah, it looks a little convenient
those tags great and all but

7
00:00:17.146 --> 00:00:20.250
perhaps it's not for me,
maybe it's a little too complicated.

8
00:00:21.690 --> 00:00:23.930
Well, hold on,
just hold on there for a second.

9
00:00:23.930 --> 00:00:26.921
Okay, can we just put a pin in it SSH?

10
00:00:26.921 --> 00:00:29.500
Remember I brought this up intentionally.

11
00:00:29.500 --> 00:00:34.540
I did say SSH was a part of getting
your computer up and running.

12
00:00:34.540 --> 00:00:37.660
And this part is just pretty awful, right?

13
00:00:37.660 --> 00:00:39.280
And so SSH keys,
they're the worst thing ever.

14
00:00:39.280 --> 00:00:40.310
They're the best thing ever.

15
00:00:40.310 --> 00:00:42.860
They allow you to have really
easy access onto systems.

16
00:00:42.860 --> 00:00:46.340
But you either have to generate a new
one every time you get a computer and

17
00:00:46.340 --> 00:00:47.270
then go to GitHub.

18
00:00:47.270 --> 00:00:48.540
Go to stash, go to Bitbucket.

19
00:00:48.540 --> 00:00:51.639
Go to wherever you have to go get lab and
re put them all in and

20
00:00:51.639 --> 00:00:54.950
then wherever else you have
to go really annoying.

21
00:00:54.950 --> 00:00:58.240
Well Ansible comes with
something called Ansible vault.

22
00:00:58.240 --> 00:01:00.680
Now this thing is pretty darn awesome.

23
00:01:00.680 --> 00:01:02.460
So I'm gonna give you
a little quick example.

24
00:01:02.460 --> 00:01:03.980
Okay, so let's come in here.

25
00:01:03.980 --> 00:01:05.250
Let's create a file, alright.

26
00:01:06.530 --> 00:01:07.620
And let's call this one.

27
00:01:07.620 --> 00:01:09.570
Wow I already have a test
file what's in here?

28
00:01:09.570 --> 00:01:11.270
My goodness, hello front end masters.

29
00:01:11.270 --> 00:01:13.985
Look at this we already have a test file,
how beautiful is this?

30
00:01:13.985 --> 00:01:16.784
So I'm gonna take this thing down and
I'm gonna run Ansible.

31
00:01:17.935 --> 00:01:24.495
Ansible vault and then I'm gonna encrypt
and I'm gonna choose test file, right?

32
00:01:24.495 --> 00:01:26.715
It's gonna say hey give me a password.

33
00:01:26.715 --> 00:01:32.535
So I'm gonna type in a super-secret
password and then I'm gonna do it again.

34
00:01:32.535 --> 00:01:34.735
And that's that.
It's gonna say encryption successful.

35
00:01:34.735 --> 00:01:37.600
So let's cut out the task
file there we go.

36
00:01:37.600 --> 00:01:42.484
Now this is what the test file looks like,
I could commit this to a public repo,

37
00:01:42.484 --> 00:01:45.720
AES 256 is said to be
likely quantum secure.

38
00:01:45.720 --> 00:01:48.814
So at least for the next while you're
gonna be safe using this type of

39
00:01:48.814 --> 00:01:50.800
encryption It seems pretty good.

40
00:01:50.800 --> 00:01:53.360
And you can store it on public repose.

41
00:01:53.360 --> 00:01:55.540
There you go It's out there,
everything's fine.

42
00:01:55.540 --> 00:02:00.366
And if I wanted to get out the value,
I could do Ansible vault, decrypt, and

43
00:02:00.366 --> 00:02:05.180
then oop, don't wanna put that one
out there and then do test file.

44
00:02:05.180 --> 00:02:08.340
And I could decrypt the test file,
put in my super secret password.

45
00:02:08.340 --> 00:02:11.070
And now when I cut out my test file,
what do I see?

46
00:02:11.070 --> 00:02:12.650
Hello, front end masters.

47
00:02:12.650 --> 00:02:14.280
So it's a two way encryption.

48
00:02:14.280 --> 00:02:17.556
That works really nicely, but
you're probably asking yourself, okay,

49
00:02:17.556 --> 00:02:18.240
that's neat.

50
00:02:19.400 --> 00:02:23.745
And now I don't have to store my SSH
keys in my email or on a private server,

51
00:02:23.745 --> 00:02:25.160
I can actually do that.

52
00:02:25.160 --> 00:02:27.270
But still, that's kind of manual right?

53
00:02:27.270 --> 00:02:28.770
I'd have to decrypt them.

54
00:02:28.770 --> 00:02:30.660
Move them into the correct location.

55
00:02:30.660 --> 00:02:31.550
I don't wanna do that, right?

56
00:02:31.550 --> 00:02:34.160
I don't wanna do I don't wanna
be a part of any of that.

57
00:02:34.160 --> 00:02:35.010
You're right.

58
00:02:35.010 --> 00:02:36.980
You don't wanna do that.

59
00:02:36.980 --> 00:02:37.980
And you don't have to do that.

60
00:02:37.980 --> 00:02:39.546
So I've included the code, but

61
00:02:39.546 --> 00:02:43.130
I'm not gonna kind of I'm only gonna
just lightly go over the code.

62
00:02:43.130 --> 00:02:47.225
Cuz it's really, there's not,
I looked it up on the internet,

63
00:02:47.225 --> 00:02:51.170
I cut I pasted it,
it worked first try, it was beautiful.

64
00:02:51.170 --> 00:02:55.820
I defined a couple vars, where my current
SSH key is, where I want to install it.

65
00:02:55.820 --> 00:02:57.693
Some basic information about it like hey,

66
00:02:57.693 --> 00:03:01.380
I want to create a directory with
the correct permissions safe 700 right?

67
00:03:01.380 --> 00:03:04.430
I want to be able to copy my
source to my destination.

68
00:03:04.430 --> 00:03:06.930
I've also tagged it with DOT files and
SSH.

69
00:03:06.930 --> 00:03:12.370
So if I install my DOT files, I also
need to install these tasks as well.

70
00:03:12.370 --> 00:03:16.100
I need to have my SSH keys up and running
for my DOT files, to be properly running.

71
00:03:16.100 --> 00:03:17.520
I do a bunch of this other stuff.

72
00:03:17.520 --> 00:03:20.720
Set my authorized key so
that it works so I can have both.

73
00:03:20.720 --> 00:03:22.510
So I'm using it from here on out.

74
00:03:22.510 --> 00:03:25.990
If I do a get operation,
it's gonna be ensured to be working.

75
00:03:25.990 --> 00:03:28.310
And of course I can do
something that looks like this.

76
00:03:28.310 --> 00:03:31.204
I can go and
I can clone down a public repo and

77
00:03:31.204 --> 00:03:34.870
then update my sub modules
which are private.

78
00:03:34.870 --> 00:03:38.760
And it will use my SSH key that
I just got done decrypting.

79
00:03:38.760 --> 00:03:40.550
So let me show you kind
of what that looks like.

80
00:03:40.550 --> 00:03:44.420
Here's effectively the exact
thing we will be executing.

81
00:03:44.420 --> 00:03:48.671
So I'm gonna go like this,
I'm gonna rerun a new Docker and

82
00:03:48.671 --> 00:03:53.790
I'm gonna just use my actual my
actual ansible thing I've been using.

83
00:03:53.790 --> 00:03:55.410
So here's my Ansible.

84
00:03:55.410 --> 00:03:59.030
So I'm gonna go Ansible playbook and
I'm gonna run dot files.

85
00:03:59.030 --> 00:04:00.530
That's my tag for all my dot files.

86
00:04:00.530 --> 00:04:03.540
Cause I want things to be up and
running and

87
00:04:03.540 --> 00:04:07.540
then I'm gonna also do ask,
vault pass, right.

88
00:04:07.540 --> 00:04:11.643
And then on top of that,
I'm gonna just specify local ynl vault.

89
00:04:11.643 --> 00:04:18.600
Now I'm going to put in my very secret
passcode don't look at it too much.

90
00:04:18.600 --> 00:04:19.540
There we go.

91
00:04:19.540 --> 00:04:20.950
And there we go.

92
00:04:20.950 --> 00:04:24.780
It's gonna go through it's gonna ensure
that ssh is installed correctly.

93
00:04:24.780 --> 00:04:28.340
It's gonna go through
install My Zsh all that.

94
00:04:28.340 --> 00:04:31.487
Make sure vim plug is there,
it's gonna install that stows there,

95
00:04:31.487 --> 00:04:34.130
it's gonna clone down
my dog file repository.

96
00:04:34.130 --> 00:04:37.190
Not only that, but it's gonna
recursively get everything else with it.

97
00:04:37.190 --> 00:04:40.080
It's gonna install my dog files,
you don't know what to do as yet.

98
00:04:40.080 --> 00:04:43.850
Then it's gonna get a bunch of my personal
projects that I need, and boom, it's done.

99
00:04:43.850 --> 00:04:46.934
Now I'm gonna open up nvm it's gonna have
some errors because I've yet to figure out

100
00:04:46.934 --> 00:04:49.680
this one, how to make this thing work but
then I just got to go plug install.

101
00:04:50.710 --> 00:04:52.730
And once it goes through and
does all of this.

102
00:04:54.450 --> 00:04:55.490
I blah blah blah blah blah.

103
00:04:55.490 --> 00:04:56.070
There we go.

104
00:04:56.070 --> 00:04:59.240
I'll look how beautiful that
is everything is wonderful.

105
00:04:59.240 --> 00:04:59.760
There we go.

106
00:05:01.000 --> 00:05:05.540
And I can quit, quit when I reopen up
then it's now in the way I would like it

107
00:05:05.540 --> 00:05:07.950
all my keyboard shortcuts work.

108
00:05:07.950 --> 00:05:12.415
I can do everything that I wanted to
do everything just works as is because

109
00:05:12.415 --> 00:05:16.291
now my vins up and running and
all my dot files have been there and

110
00:05:16.291 --> 00:05:18.680
they are private with an SSH key.

111
00:05:18.680 --> 00:05:22.110
Now for me, this was a huge thing
that made me really excited.

112
00:05:22.110 --> 00:05:26.360
Cuz I absolutely just hated how
I've handled SSH keys in the past.

113
00:05:26.360 --> 00:05:27.480
This is awesome.

114
00:05:27.480 --> 00:05:28.880
Now it just works.

115
00:05:28.880 --> 00:05:32.880
And I can have them stored in a place
where I'm not going to lose them, right?

116
00:05:32.880 --> 00:05:35.465
And that's a big thing for me is that I
don't want to have to regenerate them and

117
00:05:35.465 --> 00:05:36.650
I don't wanna lose them.

118
00:05:36.650 --> 00:05:38.970
And I don't want them just on
someplace that can get hacked.

119
00:05:38.970 --> 00:05:40.190
I want them secure.

120
00:05:40.190 --> 00:05:44.018
And I feel like this was one of the best
solutions I've seen out there where I can

121
00:05:44.018 --> 00:05:47.330
get a system up and running,
even with those private keys so quick.

122
00:05:47.330 --> 00:05:50.779
And I feel like this is one of the biggest
selling points of Ansible, but

123
00:05:50.779 --> 00:05:52.860
I wanna kind of think about it for
a second.

124
00:05:52.860 --> 00:05:58.715
Besides for SSH keys what else
could we store with Ansible vault?

125
00:05:58.715 --> 00:06:05.260
Well, I feel like everybody here probably
knows what this symbol is right?

126
00:06:05.260 --> 00:06:10.095
How many of you are locked out of binance
right now because you have lost your

127
00:06:10.095 --> 00:06:14.655
password, and you don't have your
backup codes for binance right?

128
00:06:14.655 --> 00:06:16.540
My goodness you can't get
your cryptocurrencies.

129
00:06:16.540 --> 00:06:21.580
You're millions of dogecoin just sitting
there being wasted away right now.

130
00:06:21.580 --> 00:06:26.930
It's because you don't have a way to
store your private information easily.

131
00:06:26.930 --> 00:06:31.223
So something I've been doing is I've
actually been going through my oauth codes

132
00:06:31.223 --> 00:06:32.090
and here we go.

133
00:06:32.090 --> 00:06:34.270
Here's my discord backup codes right?

134
00:06:34.270 --> 00:06:38.512
All right, so I get locked out of this
code, I have my backup codes already here

135
00:06:38.512 --> 00:06:41.360
ready to rock,
I don't even have to worry about it.

136
00:06:41.360 --> 00:06:43.680
For me this was just like a huge thing.

137
00:06:43.680 --> 00:06:47.870
Cuz this its gonna save me 100 folder.

138
00:06:47.870 --> 00:06:51.305
And so now not only do I have all
my installation and everything,

139
00:06:51.305 --> 00:06:54.497
I also have all the keys to
the kingdom in case things break.

140
00:06:54.497 --> 00:06:58.052
In case I lose my phone, all that I
just have to get to a computer and

141
00:06:58.052 --> 00:07:01.770
have Ansible installed and
I can get the backup codes back out.

142
00:07:01.770 --> 00:07:03.230
For me this was just awesome.

143
00:07:03.230 --> 00:07:05.440
For me,
this is just like such a selling point.

144
00:07:05.440 --> 00:07:08.781
That's why this talk I felt like this
section went from like the most boring

145
00:07:08.781 --> 00:07:12.602
section to the most awesome section
because it's just like, I've been screwed

146
00:07:12.602 --> 00:07:16.240
by this so many times in my lifetime and,
I don't have to have it anymore.

147
00:07:16.240 --> 00:07:18.230
And so for me that was awesome.

148
00:07:18.230 --> 00:07:21.775
And so the next question you're probably
asking is how did you just dot file

149
00:07:21.775 --> 00:07:22.345
that easy?

150
00:07:22.345 --> 00:07:24.760
All of your dot files and
all those locations?

151
00:07:24.760 --> 00:07:26.274
That had to be pretty hard, right.

152
00:07:26.274 --> 00:07:30.350
No, it's not all that bad.

153
00:07:30.350 --> 00:07:32.530
Let's keep on going with this computer.

154
00:07:32.530 --> 00:07:36.280
Now remember section one,
I've always labeled it as the 0 to 60.

155
00:07:36.280 --> 00:07:40.044
The section one part of this talk,
it's a bit more meaty and

156
00:07:40.044 --> 00:07:42.840
it doesn't have as many flashy items.

157
00:07:42.840 --> 00:07:45.892
But these are things that
are just gonna save you so

158
00:07:45.892 --> 00:07:48.160
much dang time when you need it.

159
00:07:48.160 --> 00:07:52.915
If you have a computer at home and at
work, you can keep them in sync so easily.

160
00:07:52.915 --> 00:07:54.175
We have a question.

161
00:07:54.175 --> 00:07:58.177
&gt;&gt; Several people asking if you
store this in your public GitHub or

162
00:07:58.177 --> 00:07:59.694
where you can store it?

163
00:07:59.694 --> 00:08:04.838
&gt;&gt; So when you have something
vaulted like I said Aes 256

164
00:08:04.838 --> 00:08:10.430
is considered potentially Aes
256 is it quantum secure.

165
00:08:10.430 --> 00:08:15.680
You always got to be careful because that
they believed is to be quantum resistant.

166
00:08:15.680 --> 00:08:19.355
But so there is some risk in the sense
that if we make huge leaps and

167
00:08:19.355 --> 00:08:23.851
bounds over the next couple years in
quantum technology your public repos with

168
00:08:23.851 --> 00:08:28.141
these encrypted keys could theoretically
be decrypted at some rate that is

169
00:08:28.141 --> 00:08:30.900
achievable within the lifetime, right?

170
00:08:30.900 --> 00:08:33.164
So that is, there is danger to it but

171
00:08:33.164 --> 00:08:37.841
if you store these keys vaulted if
you aren't, if they're not vaulted,

172
00:08:37.841 --> 00:08:41.625
I mean you're just storing
your RSA key publicly, right?

173
00:08:41.625 --> 00:08:42.525
That's your fault.

174
00:08:42.525 --> 00:08:45.554
Not my fault, but you should be safe
to do that I know people that store

175
00:08:45.554 --> 00:08:48.425
their stuff publicly,
I store my stuff publicly.

176
00:08:48.425 --> 00:08:51.082
Just make sure you have a password
that's good enough strong enough,

177
00:08:51.082 --> 00:08:53.200
that you're not gonna actually goof it up.

178
00:08:53.200 --> 00:08:54.880
Right, that's the big thing.

179
00:08:54.880 --> 00:08:58.470
But ultimately in the end,
you need to choose your own risk, right?

180
00:08:58.470 --> 00:09:01.062
I wouldn't necessarily do it if
you I mean, if you feel scared,

181
00:09:01.062 --> 00:09:04.580
you probably maybe you shouldn't do it,
you can do it at least on a private repo.

182
00:09:04.580 --> 00:09:08.201
But nonetheless, at least know
that AS is quantum resistant,

183
00:09:08.201 --> 00:09:11.270
you can't break it with
standard machinery.

184
00:09:11.270 --> 00:09:13.020
So it's fairly safe.

185
00:09:13.020 --> 00:09:15.813
People we use this for
security pretty regularly and

186
00:09:15.813 --> 00:09:18.237
a lot of companies rely
on this security now.

187
00:09:18.237 --> 00:09:19.875
I obviously make mine public,

188
00:09:19.875 --> 00:09:24.460
because I just simply don't I want to be
able to start a computer with nothing.

189
00:09:24.460 --> 00:09:26.930
And so I just make everything public,
everything vaulted.

190
00:09:26.930 --> 00:09:29.350
So you can see all my
vaulted items out there.

191
00:09:29.350 --> 00:09:32.166
Now if someone somehow got my pass code,
then yeah, it would be broken, but

192
00:09:32.166 --> 00:09:33.540
there's always a point of failure.

193
00:09:33.540 --> 00:09:34.740
It's just where's that point of failure?

