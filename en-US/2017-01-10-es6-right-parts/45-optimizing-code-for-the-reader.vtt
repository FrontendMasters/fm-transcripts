WEBVTT

1
00:00:00.000 --> 00:00:03.978
[MUSIC]

2
00:00:03.978 --> 00:00:08.123
&gt;&gt; Kyle Simpson: Just to recap, the whole
point of looking at ES6, it's not about

3
00:00:08.123 --> 00:00:13.012
finding shiny new toys or looking cool
tricks to make ourselves feel smarter,

4
00:00:13.012 --> 00:00:18.810
it's about finding ways to write code that
is clearer and more self descriptive.

5
00:00:18.810 --> 00:00:22.180
Because we would like to optimize our code
more for the reader than for the writer.

6
00:00:23.220 --> 00:00:26.890
Oftentimes, code that's optimized for
the reader is also optimized for

7
00:00:26.890 --> 00:00:29.275
the writer but the reverse is not true.

8
00:00:29.275 --> 00:00:30.170
When we optimize for

9
00:00:30.170 --> 00:00:35.070
ourselves, oftentimes we forget about
who needs to maybe consume our code.

10
00:00:35.070 --> 00:00:38.520
Another member of our team,
somebody a couple of years from now, or

11
00:00:38.520 --> 00:00:41.260
even our future selves
coming back to code.

12
00:00:41.260 --> 00:00:43.320
Cuz I look at code I wrote a week ago and
I'm already lost.

13
00:00:44.540 --> 00:00:46.900
I don't know maybe I'm the only one, but

14
00:00:46.900 --> 00:00:48.670
I'd like to get a lot
better at writing code.

15
00:00:48.670 --> 00:00:53.920
I have this sort of ideal that
maybe the best code, best,

16
00:00:53.920 --> 00:00:57.930
is code that explains itself,
code that teaches itself.

17
00:00:59.350 --> 00:01:02.250
Someone with no prior knowledge
of my domain space or

18
00:01:02.250 --> 00:01:06.450
the problem I'm trying to solve, could sit
down and at one glance, one read through

19
00:01:06.450 --> 00:01:09.700
of my code, perfectly understand
everything that I was thinking about.

20
00:01:09.700 --> 00:01:11.490
All the choices I made and
why I made them.

21
00:01:13.020 --> 00:01:17.310
It's probably not possible, but
that's the ideal that I strive towards.

22
00:01:17.310 --> 00:01:20.860
I look for every opportunity to
use what I know about the language

23
00:01:20.860 --> 00:01:22.080
to go towards that goal.

24
00:01:23.190 --> 00:01:25.220
And I encourage you to try
to do some of that yourself.

25
00:01:26.310 --> 00:01:28.380
Hopefully, ES6 will
help you along the way.

26
00:01:29.380 --> 00:01:30.460
It's been an honor being here.

27
00:01:30.460 --> 00:01:32.820
Thanks for everybody listening and
paying close attention.

28
00:01:32.820 --> 00:01:34.460
Thanks for all the great questions.

29
00:01:34.460 --> 00:01:36.830
Thank you to all of you that
listened online and for

30
00:01:36.830 --> 00:01:39.500
those of you that are watching the course
later, I appreciate it very much.

31
00:01:39.500 --> 00:01:42.960
If you have any questions,
feel free to reach out to me on Twitter.

32
00:01:42.960 --> 00:01:47.620
Check out the book series, the unit JS
books also is another quick little plug.

33
00:01:47.620 --> 00:01:51.720
I've started on my eighth book now,
not part of this series.

34
00:01:51.720 --> 00:01:53.980
I'm writing a book called
functional light JavaScript,

35
00:01:53.980 --> 00:01:56.130
which is gonna look at
functional programming,

36
00:01:56.130 --> 00:01:59.700
from the ground up rather than from
all the heavy terminology down.

37
00:01:59.700 --> 00:02:01.605
So that's being also written up on GitHub,

38
00:02:01.605 --> 00:02:03.770
follow along with that
if you're interested.

39
00:02:03.770 --> 00:02:04.800
Thanks for being here, appreciate it.

