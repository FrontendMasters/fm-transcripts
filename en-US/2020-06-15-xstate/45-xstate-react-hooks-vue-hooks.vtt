WEBVTT

1
00:00:00.130 --> 00:00:04.677
We talked about reacts,
we have hooks for reacts,

2
00:00:04.677 --> 00:00:10.196
which is available in
the exstate/react package over here.

3
00:00:10.196 --> 00:00:14.224
We have that use machine hook
like we talked about, and

4
00:00:14.224 --> 00:00:19.051
interestingly enough,
with view there are also hooks for view.

5
00:00:19.051 --> 00:00:22.654
So if we look in packages exstate view,

6
00:00:22.654 --> 00:00:27.021
we're going to see that
view actually has a very

7
00:00:27.021 --> 00:00:31.947
similar setup to react with
the new composition API.

8
00:00:31.947 --> 00:00:36.739
So with view, you're provided the use
machine hook, and in that hook,

9
00:00:36.739 --> 00:00:40.355
remember, it's a little bit
different than react and

10
00:00:40.355 --> 00:00:45.166
that you have to put it in setup in
that default object that you send back.

11
00:00:45.166 --> 00:00:49.028
And so,
that's going to return the state and

12
00:00:49.028 --> 00:00:52.490
send both of which are reactive values.

13
00:00:52.490 --> 00:00:56.236
And then you could use that in your
view project as if you would use any

14
00:00:56.236 --> 00:00:57.040
other value.

15
00:00:57.040 --> 00:01:02.938
The state is going to update whenever any
state update, whether it's the context or

16
00:01:02.938 --> 00:01:07.838
the finite state value or both changes and
the send, never changes but

17
00:01:07.838 --> 00:01:12.990
it allows you to reactively send events
to that machine that's defined or

18
00:01:12.990 --> 00:01:16.673
not defined, but
that's used in your components.

19
00:01:16.673 --> 00:01:21.715
And so that's how I was able to make
the exstate view, minute machine without

20
00:01:21.715 --> 00:01:26.602
much effort, because the machine
definition is already there, all I have

21
00:01:26.602 --> 00:01:31.590
to do is plug that into view, and it is
guaranteed to work the exact same way.

