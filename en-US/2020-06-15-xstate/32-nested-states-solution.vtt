WEBVTT

1
00:00:00.310 --> 00:00:04.326
Let's take a look at how we could add
nested states into dragging in order to

2
00:00:04.326 --> 00:00:05.995
get the behavior that we want.

3
00:00:08.102 --> 00:00:11.713
By adding states, we don't
necessarily need to change anything.

4
00:00:11.713 --> 00:00:14.723
And that's because our
mouse move mouse up and

5
00:00:14.723 --> 00:00:19.210
key up the escape transitions are still
going to be exactly the same.

6
00:00:19.210 --> 00:00:22.989
So let's add a couple nested states.

7
00:00:22.989 --> 00:00:29.410
So initially we're going
to have a normal state.

8
00:00:29.410 --> 00:00:33.098
And this is going to represent
the normal operation of dragging.

9
00:00:33.098 --> 00:00:40.122
So states, We're gonna have
two states normal and locked.

10
00:00:43.081 --> 00:00:49.121
So, the normal states, we don't really
need to have any different behavior,

11
00:00:49.121 --> 00:00:52.923
we just need to know when
the shift key is pressed.

12
00:00:52.923 --> 00:00:57.142
So we could do, What did we call it?

13
00:00:57.142 --> 00:01:02.895
So nine, So

14
00:01:02.895 --> 00:01:10.730
you can see here, we have a keydown.shift,
in a keyup.shift.

15
00:01:10.730 --> 00:01:14.345
So I'm just gonna copy
these from the final JS.

16
00:01:14.345 --> 00:01:19.255
Basically, we're listening for key down
events on the body just like we are for

17
00:01:19.255 --> 00:01:23.074
escape, except we're going to
be doing it for shift as well.

18
00:01:23.074 --> 00:01:29.186
So we're gonna be doing the same thing,
For keyup.

19
00:01:29.186 --> 00:01:33.532
So when we press Shift+Down,
we get the keydown.shift events.

20
00:01:33.532 --> 00:01:36.758
When we lift it up,
we get the keyup .shift event,

21
00:01:36.758 --> 00:01:40.220
and those are going to be
sent directly to the machine.

22
00:01:40.220 --> 00:01:43.227
So we could go in between normal and
the locks states.

23
00:01:43.227 --> 00:01:49.046
So on, keydown.shift, we go to locked.

24
00:01:49.046 --> 00:01:53.676
And in the locks states, on keyup.shift,

25
00:01:53.676 --> 00:01:56.941
we go back to the normal state.

26
00:01:56.941 --> 00:01:59.024
So let's take a look at what
that looks like right now.

27
00:02:01.161 --> 00:02:04.975
So when we're dragging, you'll see
that we have another state over here,

28
00:02:04.975 --> 00:02:06.060
dragging.normal.

29
00:02:06.060 --> 00:02:11.551
This dot notation is how we could specify
these hierarchical states as a string.

30
00:02:11.551 --> 00:02:15.710
And so when we press Shift,
we see that we're in the locked state.

31
00:02:15.710 --> 00:02:17.229
If you did that correctly,

32
00:02:17.229 --> 00:02:21.585
you'll see that there's a red line in
the middle that only tells it you can only

33
00:02:21.585 --> 00:02:26.090
go from left to right.Obviously we still
can't go from left to right right now.

34
00:02:26.090 --> 00:02:30.849
We need to add that behavior in there
when we're in the locked states.

35
00:02:30.849 --> 00:02:35.812
And so that behavior is normally defined
in mouse move when we are assigning

36
00:02:35.812 --> 00:02:36.614
the delta.

37
00:02:39.923 --> 00:02:43.761
Okay, so let's change or
not change that but

38
00:02:43.761 --> 00:02:49.630
I haven't assign x delta because we
only wants to assign the x value.

39
00:02:49.630 --> 00:02:55.900
So we could remove the y value,
and then, in locked.

40
00:02:55.900 --> 00:02:58.586
We're going to override
this mouse move behavior.

41
00:02:58.586 --> 00:03:03.008
So mousemove, actions.

42
00:03:03.008 --> 00:03:05.249
We're going to assign x delta.

43
00:03:07.754 --> 00:03:09.855
You could ignore this internal false for
now.

44
00:03:12.040 --> 00:03:16.451
And so now when we drag it,
and we press Shift,

45
00:03:16.451 --> 00:03:20.425
now we're only able to move in the x axis.

46
00:03:22.795 --> 00:03:24.286
So we see that everything is working.

47
00:03:30.082 --> 00:03:35.919
Now, states can transition to other
states directly even if they're nested.

48
00:03:35.919 --> 00:03:39.861
And the way that you do this nested
state is by using dots notation.

49
00:03:39.861 --> 00:03:43.194
So right here in idle
when we start dragging,

50
00:03:43.194 --> 00:03:48.471
we immediately go on the mouse down
transition to the dragging states.

51
00:03:48.471 --> 00:03:51.268
And because we're not specifying a child,

52
00:03:51.268 --> 00:03:53.997
we go to its initial
state which is normal.

53
00:03:53.997 --> 00:03:57.704
But we could override that,
we could say dragging.locked.

54
00:03:57.704 --> 00:04:02.819
And so now ,when we start in idle
we're immediately in the lock state,

55
00:04:02.819 --> 00:04:07.850
which isn't very useful, but
that just demonstrates how you could go

56
00:04:07.850 --> 00:04:13.753
directly to this trial state instead of to
the initial state of the parents state.

57
00:04:13.753 --> 00:04:19.130
All right, so Matt asks, Is there any
issue with combining both the key up.

58
00:04:19.130 --> 00:04:23.236
And the key up listeners on the voice
of both of them the shift and

59
00:04:23.236 --> 00:04:27.670
the escape, using a switch to
determine which send events to send.

60
00:04:27.670 --> 00:04:32.132
There is no issue with that and
you could definitely do that if you want.

61
00:04:32.132 --> 00:04:35.597
Again, it's up to how
you structure your app.

62
00:04:35.597 --> 00:04:43.255
So, what they were saying is if we
take this and we move it over here.

63
00:04:43.255 --> 00:04:46.957
Now we have one less event listener and

64
00:04:46.957 --> 00:04:52.054
everything should still work the same,
I believe.

65
00:04:54.230 --> 00:04:59.411
Maybe not because we got rid of yeah,

66
00:04:59.411 --> 00:05:03.813
[LAUGH] targets target dragging.

67
00:05:03.813 --> 00:05:06.723
So now everything should work the same.

68
00:05:06.723 --> 00:05:07.999
Yep.

69
00:05:07.999 --> 00:05:11.966
So yeah, in short, you could
definitely combine both of those.

70
00:05:11.966 --> 00:05:16.838
And there's not really any issue
there because what you're doing is

71
00:05:16.838 --> 00:05:20.702
you're just choosing which
specific events to send.

72
00:05:20.702 --> 00:05:24.149
What you could also do is you
could send this events directly,

73
00:05:24.149 --> 00:05:28.210
you could say service.send(e),
where e stands for event over here.

74
00:05:28.210 --> 00:05:33.123
And what you would have to do then is
use guarded transitions in order to

75
00:05:33.123 --> 00:05:37.804
determine what should be taken
based on what's inside the event.

76
00:05:37.804 --> 00:05:42.244
And so sometimes that's a good idea, but
sometimes when you know exactly which

77
00:05:42.244 --> 00:05:46.300
events you want to limit to, then maybe
it could be a little bit verbose.

