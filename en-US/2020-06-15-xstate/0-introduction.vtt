WEBVTT

1
00:00:00.110 --> 00:00:00.640
Hey everyone.

2
00:00:00.640 --> 00:00:04.450
Welcome to the Frontend Masters
JavaScript State Machines and

3
00:00:04.450 --> 00:00:07.270
State Charts workshop with XState.

4
00:00:07.270 --> 00:00:08.948
Again, my name is David Khourshid.

5
00:00:08.948 --> 00:00:12.240
I am @davidkpiano,
pretty much everywhere online,

6
00:00:12.240 --> 00:00:17.370
on Twitter, on GitHub,
pretty much anywhere you could find me.

7
00:00:17.370 --> 00:00:18.550
So in this workshop,

8
00:00:18.550 --> 00:00:22.140
we're going to be talking about state
machines from basic principles.

9
00:00:22.140 --> 00:00:24.890
We're going to be working with
state machines from scratch,

10
00:00:24.890 --> 00:00:26.818
without using any libraries.

11
00:00:26.818 --> 00:00:30.820
And we could see how they could really
improve the way that we manage application

12
00:00:30.820 --> 00:00:33.570
logic and state managements.

13
00:00:33.570 --> 00:00:37.290
And then we are going to be moving
to state charts with XStates,

14
00:00:37.290 --> 00:00:40.730
the library that I created.

15
00:00:40.730 --> 00:00:44.678
So the repo that we're going
to be working from is this

16
00:00:44.678 --> 00:00:48.270
Frontend Masters XState workshop repo.

17
00:00:48.270 --> 00:00:49.860
You should already have it set up by now.

18
00:00:49.860 --> 00:00:55.810
But if you don't, just get clone it, and
then follow the installation instructions.

19
00:00:55.810 --> 00:00:58.545
So you're going to need
to have parcel installed.

20
00:00:58.545 --> 00:01:01.840
Parcel-bundler should be
included in the repo already.

21
00:01:01.840 --> 00:01:06.700
So if you just run npm install,
everything should work fine.

22
00:01:06.700 --> 00:01:14.163
And then when you run npm start, you'll
see a server running at localhost 1234.

23
00:01:14.163 --> 00:01:17.205
So if we go ahead and
do that, run npm start,

24
00:01:17.205 --> 00:01:20.582
assuming that you've
already run npm install,

25
00:01:20.582 --> 00:01:26.260
you might see an error such as this where
it can't find the file in the cache.

26
00:01:26.260 --> 00:01:31.770
But if you were to just rebuild
it by saving any of the files,

27
00:01:31.770 --> 00:01:33.300
that errors should disappear.

28
00:01:33.300 --> 00:01:35.020
So don't worry about that too much.

29
00:01:35.020 --> 00:01:37.870
That's not really a showstopper.

30
00:01:37.870 --> 00:01:40.460
So here's the way that
the workshop is structured.

31
00:01:40.460 --> 00:01:41.890
We have a bunch of lessons.

32
00:01:41.890 --> 00:01:43.505
We have 12 lessons in total.

33
00:01:43.505 --> 00:01:49.163
And each one of those
lessons has an index.html,

34
00:01:49.163 --> 00:01:55.622
an index.js file, a readme,
and some styling.

35
00:01:55.622 --> 00:02:00.860
So in order to reach one of these, you
could just click one of the links here or

36
00:02:00.860 --> 00:02:07.053
you can navigate directly
to localhost 1234,

37
00:02:07.053 --> 00:02:13.540
then the lessons such as lesson zero,
and then index.html.

38
00:02:13.540 --> 00:02:14.980
So this is built with parcel.

39
00:02:14.980 --> 00:02:20.710
So it's just going to be plain HTML,
CSS and JavaScript.

40
00:02:20.710 --> 00:02:23.620
The styles are going to be in SaaS.

41
00:02:23.620 --> 00:02:26.390
We're not going to be worrying about
the styles too much in this workshop.

42
00:02:26.390 --> 00:02:28.910
We're going to be focusing
just on the JavaScript.

43
00:02:30.180 --> 00:02:35.390
So if you're able to see the screen
when you get to 00/index.html,

44
00:02:35.390 --> 00:02:38.290
congratulations, the workshop
repo is working.

45
00:02:38.290 --> 00:02:39.600
So we're all good there.

46
00:02:42.410 --> 00:02:46.410
So let's work in the index.js file just to

47
00:02:46.410 --> 00:02:50.870
get a feel for
how this workshop is going to be run.

48
00:02:52.320 --> 00:02:53.230
When you go to the readme,

49
00:02:53.230 --> 00:02:58.230
there's going to be Goals, Tips and
obstinately some extra credit at the end.

50
00:02:58.230 --> 00:03:03.120
So the goal is what you're supposed to
do in order to accomplish the exercise.

51
00:03:03.120 --> 00:03:06.910
This is how you're going to get the most
value out of this workshop is by

52
00:03:06.910 --> 00:03:09.560
doing each one of the exercises.

53
00:03:09.560 --> 00:03:12.720
There's going to be tips
both here in the readme and

54
00:03:12.720 --> 00:03:16.620
also in the index.js file
in the form of comments.

55
00:03:16.620 --> 00:03:21.730
And so in this one, this is just a warm-up
example, if you output some object,

56
00:03:21.730 --> 00:03:23.720
it will print it out to the screen.

57
00:03:23.720 --> 00:03:24.920
So let's see how that works.

58
00:03:24.920 --> 00:03:29.799
We have output object and
then it's just writing to

59
00:03:29.799 --> 00:03:35.050
this elOutput elements
that I have over here.

60
00:03:35.050 --> 00:03:37.110
So my name is David Khourshid.

61
00:03:37.110 --> 00:03:38.530
I work at Microsoft.

62
00:03:38.530 --> 00:03:43.800
My interests are piano, state machines and
also animation as well.

63
00:03:43.800 --> 00:03:48.900
So if I save that, you'll see that it
updates over here, which is pretty nice.

