WEBVTT

1
00:00:00.220 --> 00:00:03.015
This is where XState comes in.

2
00:00:03.015 --> 00:00:10.040
XState simplifies all of this and
provides a lot more right out of the box.

3
00:00:10.040 --> 00:00:11.810
So, in your repo,

4
00:00:11.810 --> 00:00:17.860
when you ran NPM install,
it also installed XState as a dependency.

5
00:00:17.860 --> 00:00:25.060
And so we could see over here,
if we look at our package.json,

6
00:00:25.060 --> 00:00:29.930
we should see that XState
is a dependency over here,

7
00:00:29.930 --> 00:00:32.380
and we're currently on version 4.9.1.

8
00:00:32.380 --> 00:00:37.429
So it should be available
just by running import

9
00:00:37.429 --> 00:00:42.650
createMachine from xState.

10
00:00:42.650 --> 00:00:44.680
And so in that same exercise,

11
00:00:44.680 --> 00:00:49.910
we just console.log createMachine,
just to make sure it exists.

12
00:00:49.910 --> 00:00:54.290
So let's go to the exercise and
yeah, we see it over here.

13
00:00:54.290 --> 00:00:55.980
It's doing a bunch of things.

14
00:00:55.980 --> 00:00:59.830
And this is essentially what
we are going to be doing,

15
00:00:59.830 --> 00:01:05.250
what we have already been doing
in our previous exercises,

16
00:01:05.250 --> 00:01:09.530
expect, of course,
it permits a lot more things to happen.

17
00:01:09.530 --> 00:01:13.270
So, that optics syntax that you worked
with, where we have an initial and

18
00:01:13.270 --> 00:01:18.170
we have a bunch of states, that's going
to be the exact same optic syntax

19
00:01:18.170 --> 00:01:23.860
that you are going to use to actually
create the machine in XState.

20
00:01:23.860 --> 00:01:29.730
So we pass in that same object
right into createMachine,

21
00:01:29.730 --> 00:01:32.530
and then we add transitions over here.

22
00:01:32.530 --> 00:01:34.380
So I'm going to go ahead and

23
00:01:34.380 --> 00:01:39.280
go into the scratchpad just to
show you how that's going to look.

24
00:01:39.280 --> 00:01:44.420
So we're going to delete all of these,
and I have createMachine over here.

25
00:01:45.970 --> 00:01:50.310
Just for an example we are going to,
actually let's go ahead and

26
00:01:50.310 --> 00:01:52.660
do the beginning of that feedback form.

27
00:01:52.660 --> 00:01:57.250
So we could say const
feedbackMachine = createMachine.

28
00:01:57.250 --> 00:01:59.870
And this is where you pass
in your object syntax.

29
00:01:59.870 --> 00:02:03.590
So your initial might
be the question state,

30
00:02:03.590 --> 00:02:08.410
you might have a bunch of states and
remember the first thing we do is we

31
00:02:08.410 --> 00:02:10.160
list each of the states
that we're going to have.

32
00:02:10.160 --> 00:02:11.430
So we have a question state.

33
00:02:14.810 --> 00:02:16.501
We have a form state.

34
00:02:16.501 --> 00:02:19.510
We have a thanks state, and
we have a closed state.

35
00:02:21.530 --> 00:02:26.830
Okay, so let's look just dive in to
the speed back machine and see what it is.

36
00:02:26.830 --> 00:02:32.367
So let's console.log feedbackMachine and

37
00:02:32.367 --> 00:02:36.160
we are going to go back to 00.

38
00:02:36.160 --> 00:02:39.750
Remember, you could use 00
as a scratchpad at any time.

39
00:02:40.790 --> 00:02:43.890
All right, so we see there's
a lot of things happening here.

40
00:02:43.890 --> 00:02:45.940
There's this thing called a state node.

41
00:02:45.940 --> 00:02:50.670
And if you remember from our graph
theory lesson, we have nodes and edges,

42
00:02:50.670 --> 00:02:54.270
these edges or
transitions connect each of the nodes.

43
00:02:54.270 --> 00:02:57.830
And so
that's what this state node represents.

44
00:02:57.830 --> 00:03:01.800
And so our root node we see we
have an initial state of question.

45
00:03:01.800 --> 00:03:04.520
And we also have a bunch
of states in here.

46
00:03:04.520 --> 00:03:08.030
And so
this is just that object syntax expanded,

47
00:03:08.030 --> 00:03:11.030
where each one of those states
is itself a state node.

48
00:03:11.030 --> 00:03:12.770
So you could think of this as a tree.

49
00:03:12.770 --> 00:03:16.120
We have a tree of state nodes which
might contain child state nodes,

50
00:03:16.120 --> 00:03:19.110
each of which might contain
child state nodes as well.

51
00:03:19.110 --> 00:03:22.340
In this instance,
we're just going to be keeping it flat.

52
00:03:22.340 --> 00:03:26.000
So we have form, question,
thanks, and closed.

