WEBVTT

1
00:00:00.180 --> 00:00:04.530
Now we're gonna start talking
about transient transitions.

2
00:00:04.530 --> 00:00:08.550
And transient transitions are different
than normal transitions because

3
00:00:08.550 --> 00:00:10.750
they happen on null events.

4
00:00:10.750 --> 00:00:14.355
Or you could sort of consider them
happening on no events at all.

5
00:00:14.355 --> 00:00:17.739
Instead, these are transitions
that are automatically

6
00:00:17.739 --> 00:00:19.520
taken once you enter a state.

7
00:00:19.520 --> 00:00:25.090
And that's why transient transitions are
most useful when used with conditionals.

8
00:00:25.090 --> 00:00:27.810
And so when you have a guarded transition,

9
00:00:27.810 --> 00:00:31.590
you could immediately
choose where to go next.

10
00:00:31.590 --> 00:00:36.716
So remember that a finite state
machine has an initial state,

11
00:00:36.716 --> 00:00:39.582
and it only has one initial state.

12
00:00:39.582 --> 00:00:43.182
When you turn a machine on,
whether it's an ATM or your computer,

13
00:00:43.182 --> 00:00:46.120
it's always gonna have
that same initial state.

14
00:00:46.120 --> 00:00:51.551
But that initial state might initially
check where it needs to go next.

15
00:00:51.551 --> 00:00:56.476
So for example,
let's say that we have a page where you're

16
00:00:56.476 --> 00:01:00.780
checking authentication or authorization.

17
00:01:00.780 --> 00:01:04.850
And you want to immediately take
the user to either the dashboard if

18
00:01:04.850 --> 00:01:09.040
they're authorized, or
the login screen otherwise.

19
00:01:09.040 --> 00:01:12.802
Because we can't start the machine
immediately on the dashboard or

20
00:01:12.802 --> 00:01:15.773
the login screen,
we have this checkingAuth state.

21
00:01:15.773 --> 00:01:19.731
Which is, in this case,
it's known as a transient state,

22
00:01:19.731 --> 00:01:23.382
because it has no direct
transitions based on events.

23
00:01:23.382 --> 00:01:27.050
Instead, it has completely
null transitions.

24
00:01:27.050 --> 00:01:32.420
And so in state machine syntax,
when you look at this diagram,

25
00:01:32.420 --> 00:01:37.150
everything inside these
brackets is a transition guard.

26
00:01:37.150 --> 00:01:42.170
So for example, this is gonna show that
we immediately take this transition

27
00:01:42.170 --> 00:01:45.079
if it's authorized, or
if this authorized condition is true.

28
00:01:46.200 --> 00:01:48.450
Otherwise, we take this transition.

29
00:01:50.210 --> 00:01:55.320
So transient transitions look
a little bit interesting in xstate.

30
00:01:55.320 --> 00:02:02.090
And it's because the property key
is literally just an empty string.

31
00:02:02.090 --> 00:02:06.150
So this means that immediately,

32
00:02:06.150 --> 00:02:10.810
we're going to take one of these
transitions if they apply.

33
00:02:10.810 --> 00:02:16.090
So like we saw before,
where we could have multiple transitions,

34
00:02:16.090 --> 00:02:18.820
we're going to check that
we can take the first one.

35
00:02:18.820 --> 00:02:23.250
So if isAuthorized is true, then we're
going to select this transition.

36
00:02:23.250 --> 00:02:26.738
Otherwise, we're going to
select the other transition.

37
00:02:26.738 --> 00:02:30.913
So we're gonna go directly to the login or
directly to the dashboard,

38
00:02:30.913 --> 00:02:33.261
depending on which condition is true.

39
00:02:36.390 --> 00:02:41.314
So again, you could parameterize
the guard over here,

40
00:02:41.314 --> 00:02:46.255
put it in isAuthorized,
in the guards right over here.

41
00:02:46.255 --> 00:02:53.297
But that's not necessary, only if
you want to parametrize your guards.

