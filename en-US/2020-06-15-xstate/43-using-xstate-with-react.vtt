WEBVTT

1
00:00:00.150 --> 00:00:02.790
So what we're gonna talk about now is

2
00:00:02.790 --> 00:00:06.430
using X state with a variety
of different libraries.

3
00:00:07.880 --> 00:00:11.380
If you look at the documentation,
you will see that there's recipes for

4
00:00:11.380 --> 00:00:16.270
using it with react, View,
RX JS in even Ember now.

5
00:00:17.530 --> 00:00:23.057
So, each of these ways has a template and
if you go to the homepage,

6
00:00:23.057 --> 00:00:27.523
so if you go to
github.com/davidkpiano/xstate,

7
00:00:29.849 --> 00:00:32.310
You will see each of these
templates over here.

8
00:00:32.310 --> 00:00:38.210
So if you want to incorporate X state
into react, here's how you would do it.

9
00:00:38.210 --> 00:00:41.840
Go ahead and
click the X State Reacts Template.

10
00:00:41.840 --> 00:00:44.890
And you will see here, once we zoom in

11
00:00:48.180 --> 00:00:52.670
that we have our machine
defined just like before.

12
00:00:52.670 --> 00:00:57.150
So this is going to say create machine
which is going to be the newer syntax of

13
00:00:57.150 --> 00:00:58.530
create machine.

14
00:01:00.260 --> 00:01:04.030
And this is going to
work directly in reacts,

15
00:01:04.030 --> 00:01:08.790
so if you remember this toggle
machine it's just a reducer.

16
00:01:08.790 --> 00:01:13.890
So you could even use toggle machine
transition as a reducer function

17
00:01:13.890 --> 00:01:18.200
if you were using it just as a plane
reducer that doesn't emit any effects.

18
00:01:19.720 --> 00:01:25.490
But there's also an XState/Reacts package
which provides a use machine hook.

19
00:01:25.490 --> 00:01:30.490
And so this allows you to use this
machine you defined directly in react

20
00:01:30.490 --> 00:01:33.040
the same way that you would use reducer.

21
00:01:33.040 --> 00:01:35.340
And so it provides you two things,

22
00:01:35.340 --> 00:01:39.770
currents which represents the current
state, in sense which represents

23
00:01:39.770 --> 00:01:44.540
a function that allows you to send
events back up to the machine.

24
00:01:44.540 --> 00:01:49.720
For instance, when we click this button,
we're gonna be sending the toggle events.

25
00:01:49.720 --> 00:01:55.070
And that toggle event is gonna be
toggling between inactive and active and

26
00:01:55.070 --> 00:02:00.130
whenever we enter active,
we are gonna increment the counts by one.

27
00:02:00.130 --> 00:02:03.334
Which you could see right there.

28
00:02:05.610 --> 00:02:09.594
So that's how you would
incorporate it into react.

29
00:02:13.091 --> 00:02:19.606
Let me go ahead and There's another

30
00:02:19.606 --> 00:02:24.661
example that I want to show, okay.

31
00:02:26.739 --> 00:02:29.105
And I'm gonna go ahead and
sign in for this one.

32
00:02:32.226 --> 00:02:33.543
Okay, great.

33
00:02:38.953 --> 00:02:43.394
All right, so here's a more advanced
example of using X State and

34
00:02:43.394 --> 00:02:45.100
powering it with react.

35
00:02:46.510 --> 00:02:51.280
Typically, what you would want to do
is you would want to separate your

36
00:02:51.280 --> 00:02:56.540
machine and the components definition.

37
00:02:56.540 --> 00:03:00.410
So, I'm going to show you why
you would want to do that.

38
00:03:00.410 --> 00:03:01.580
Right over here.

39
00:03:02.630 --> 00:03:07.080
Here we have a timer machine
that models the Android timer.

40
00:03:07.080 --> 00:03:09.150
Pretty exactly.

41
00:03:09.150 --> 00:03:10.100
And it's a minute timer.

42
00:03:10.100 --> 00:03:13.530
So once you click here,
it's going to start counting down.

43
00:03:13.530 --> 00:03:16.210
And you could do things such
as pausing the timer and

44
00:03:16.210 --> 00:03:19.330
this is the behavior when it's paused,
it just flashes at you.

45
00:03:19.330 --> 00:03:23.160
You could also reset the timer and
it goes back to 60.

46
00:03:23.160 --> 00:03:25.790
One other thing you could do when
you're in the running state,

47
00:03:25.790 --> 00:03:27.800
you could add minutes.

48
00:03:27.800 --> 00:03:31.410
So this machine in particular
is created with TypeScript,

49
00:03:31.410 --> 00:03:34.860
which we're not gonna go
into in this workshop.

50
00:03:36.240 --> 00:03:41.040
But this machine has
nothing to do with React.

51
00:03:41.040 --> 00:03:46.350
All it's doing is it's defining
the behavior for extended data

52
00:03:46.350 --> 00:03:51.570
such as the duration, the elapsed in the
interval is happening in the machine and

53
00:03:51.570 --> 00:03:55.500
what states it could go between
in that machine, for example,

54
00:03:55.500 --> 00:03:57.500
it's in the running normal state.

55
00:03:57.500 --> 00:04:00.390
When we press pause,
now it's in the pause state.

56
00:04:01.450 --> 00:04:06.370
So the interesting thing about this is
that because we're defining our machine in

57
00:04:06.370 --> 00:04:11.370
a completely pure way, in fact,

58
00:04:11.370 --> 00:04:15.550
I could show you this individualization
we copy this over here.

59
00:04:18.220 --> 00:04:23.470
You can see that this is the schematic for
how that timer machine works.

60
00:04:23.470 --> 00:04:25.950
So once we toggle we go
into the running state.

61
00:04:25.950 --> 00:04:31.360
We could also add a minute or we could
toggle and then we go to the past state.

62
00:04:31.360 --> 00:04:36.110
So you could see we go back and
forth between normal and paused.

63
00:04:38.270 --> 00:04:42.080
Now, one huge advantage of defining
your machines this way, and

64
00:04:42.080 --> 00:04:46.750
not tying it directly to the framework is
that you could even use these machines

65
00:04:46.750 --> 00:04:50.800
directly in other frameworks,
such as view.

66
00:04:50.800 --> 00:04:55.950
And so what I did was I took
that exact same machine,

67
00:04:57.680 --> 00:05:00.290
you can see the timer machine over here.

68
00:05:00.290 --> 00:05:03.730
Absolutely no reference to
view whatsoever in here.

69
00:05:03.730 --> 00:05:08.420
In fact, nothing needed to change
with this machine in particular,

70
00:05:08.420 --> 00:05:11.930
everything is just the same except with
all the typeScript types stripped out

71
00:05:11.930 --> 00:05:14.340
because I'm using just
JavaScript over here.

72
00:05:14.340 --> 00:05:20.095
And you could see that this machine is now
running exactly the same way but in view.

