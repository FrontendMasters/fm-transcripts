WEBVTT

1
00:00:00.380 --> 00:00:03.100
Let's go to our first exercise.

2
00:00:03.100 --> 00:00:04.890
Hopefully, you have the repo up and
running.

3
00:00:04.890 --> 00:00:07.150
If you don't,
please tell me in the chat and

4
00:00:07.150 --> 00:00:09.280
I will try to help you
out as much as possible.

5
00:00:10.740 --> 00:00:14.650
In the first exercise, where if you
run NPM start you will see that.

6
00:00:16.300 --> 00:00:21.987
And remember, you could just save any
file to make the errors disappear.

7
00:00:21.987 --> 00:00:24.422
You're gonna see a readme.md.

8
00:00:24.422 --> 00:00:27.070
And we're gonna have goals here.

9
00:00:27.070 --> 00:00:31.800
And the goal is that we wanna create
a state machine that toggles this

10
00:00:31.800 --> 00:00:36.550
box elements with an ID of box between
the inactive and the active states.

11
00:00:37.850 --> 00:00:42.200
And so here's the HTML for this exercise.

12
00:00:42.200 --> 00:00:44.160
We have a box element here.

13
00:00:44.160 --> 00:00:49.390
And this box elements is actually
controlled by some CSS where if

14
00:00:49.390 --> 00:00:53.950
it has the active state, which I've added
for you, then it goes to full opacity.

15
00:00:53.950 --> 00:00:55.424
Otherwise, it's just half opacity.

16
00:00:55.424 --> 00:00:59.206
So let's take a look at
what that looks like.

17
00:00:59.206 --> 00:01:06.383
So if you navigate to 01 index.HTML,
you're gonna see our box over here.

18
00:01:06.383 --> 00:01:08.290
Right now it's not inactive or active.

19
00:01:08.290 --> 00:01:13.676
So it's just in this faded out blue state,
and clicking does nothing.

20
00:01:13.676 --> 00:01:18.463
So what I want you to do is I want you
to create a very simple state machine

21
00:01:18.463 --> 00:01:22.290
first using switch statements and
then using objects.

22
00:01:24.150 --> 00:01:27.311
What you're going to do is,
just like we did before,

23
00:01:27.311 --> 00:01:31.179
we're going to save the initial
state is the inactive state, and

24
00:01:31.179 --> 00:01:36.057
we want to toggle between the inactive and
active states once we get a click event.

25
00:01:36.057 --> 00:01:38.990
And you can name that
event whatever you want.

26
00:01:38.990 --> 00:01:44.570
So we're going to send the click event,
just like we did in the previous example.

27
00:01:44.570 --> 00:01:50.657
And we are going to set
elbox.dataset.state to the current state.

28
00:01:50.657 --> 00:01:56.027
What this is going to do, by the way,
is it's going to set the data state

29
00:01:56.027 --> 00:02:01.770
attributes to whatever that current
state is, so for example, inactive.

30
00:02:01.770 --> 00:02:03.930
Everything is in the readme.

31
00:02:03.930 --> 00:02:07.748
The first thing you want to do is use
that switch statement in order to switch

32
00:02:07.748 --> 00:02:11.517
between each of the states and then you
wanna switch on each of the events.

33
00:02:14.336 --> 00:02:16.470
And then if you have time,

34
00:02:16.470 --> 00:02:22.108
use the object syntax to use an object
instead of a switch statement.

35
00:02:22.108 --> 00:02:27.250
And that way you can get more of
a feel for what XState will feel like.

