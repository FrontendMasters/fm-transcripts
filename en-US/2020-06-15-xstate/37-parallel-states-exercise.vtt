WEBVTT

1
00:00:00.000 --> 00:00:04.420
So the way that we define
parallel states is,

2
00:00:05.590 --> 00:00:11.850
go to the exercise, type in index.js.

3
00:00:11.850 --> 00:00:16.920
We define parallel states by
giving it type, parallel.

4
00:00:18.130 --> 00:00:21.100
And this is how we know
that the states inside

5
00:00:21.100 --> 00:00:24.210
are all going to be
active at the same time.

6
00:00:24.210 --> 00:00:28.420
Now because of this we don't need
to define an initial state because

7
00:00:28.420 --> 00:00:33.110
all of those states are by
defaults initial states and

8
00:00:33.110 --> 00:00:37.240
they represent regions not exactly states.

9
00:00:37.240 --> 00:00:43.150
So we could have more than one states for
example, we will just start this,

10
00:00:43.150 --> 00:00:47.760
we would have the mode, and
we could have the brightness.

11
00:00:49.510 --> 00:00:55.530
Now, the mode, this state itself
is what's called compound states.

12
00:00:55.530 --> 00:00:59.440
And compound states are those nested
states that we were talking about.

13
00:00:59.440 --> 00:01:04.630
So this does have an initial state, and
like we remember from the last example,

14
00:01:04.630 --> 00:01:09.368
it's initial state was light and
it could have two possible states such as

15
00:01:09.368 --> 00:01:14.680
brights and dark.

16
00:01:14.680 --> 00:01:20.910
For brightness,
we could have an initial state of brights.

17
00:01:20.910 --> 00:01:28.620
And then we could have two possible
states, so states Right in dim.

18
00:01:28.620 --> 00:01:31.230
So let's go ahead and
see what this looks like.

19
00:01:31.230 --> 00:01:33.360
If we console .log it.

20
00:01:33.360 --> 00:01:37.570
So console .log, we're just going
to log the state .value to see.

21
00:01:40.000 --> 00:01:42.160
All right, so if we go to exercise 11.

22
00:01:44.547 --> 00:01:45.980
Cool, all right.

23
00:01:45.980 --> 00:01:47.610
We're in the hidden state now, but

24
00:01:47.610 --> 00:01:52.670
once we turn it on,
we see that we're in more than one state.

25
00:01:52.670 --> 00:01:55.520
So this is where that
object syntax really helps.

26
00:01:55.520 --> 00:02:00.450
We're both in the brightness .bright
state in the mode .lights states.

27
00:02:00.450 --> 00:02:05.450
So, obviously I didn't add any
transitions, but this is where

28
00:02:05.450 --> 00:02:10.760
you're gonna change for example,
mode to dark or brightness to dim, etc.

29
00:02:11.980 --> 00:02:15.410
So Johan asks is region
in orthogonal state?

30
00:02:15.410 --> 00:02:16.270
Yes.

31
00:02:16.270 --> 00:02:18.970
So you could consider
both of those regions.

32
00:02:18.970 --> 00:02:25.401
And in fact, if we take this,
and we put it in the visualizer.

33
00:02:25.401 --> 00:02:32.010
[BLANK AUDIO] You can see
those regions visualized.

34
00:02:32.010 --> 00:02:36.720
So when you turn them on, you're going
to see that we enter both the mode and

35
00:02:36.720 --> 00:02:38.410
brightness parents states, and

36
00:02:38.410 --> 00:02:41.810
we entered their initial
states at the exact same time.

37
00:02:43.030 --> 00:02:46.510
What we wants to do is we wants to
transition between the light and

38
00:02:46.510 --> 00:02:51.560
dark states when we switch, and we want to
go from bright to dim after five seconds

39
00:02:51.560 --> 00:02:55.600
and dim to bright on
that same switch events.

40
00:02:56.860 --> 00:02:57.630
So, good luck.

