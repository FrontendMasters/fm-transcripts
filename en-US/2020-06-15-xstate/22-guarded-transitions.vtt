WEBVTT

1
00:00:00.370 --> 00:00:03.120
Now we're gonna be talking
about transitions,

2
00:00:03.120 --> 00:00:05.180
guarded transitions in particular.

3
00:00:06.960 --> 00:00:11.920
So guarded transitions
are transitions that have

4
00:00:11.920 --> 00:00:17.210
a conditional guard,
which is called cond, C-O-N-D,

5
00:00:17.210 --> 00:00:22.260
and that guard tells us whether or
not we're allowed to take this transition.

6
00:00:22.260 --> 00:00:27.431
So if that guard returns anything falsy,
then that means that no actions

7
00:00:27.431 --> 00:00:32.113
are gonna be executed and
the transition is not going to be taken.

8
00:00:32.113 --> 00:00:40.540
So an example of this, let's say that
you have a promise state machine.

9
00:00:41.820 --> 00:00:45.340
When you go from the idle to
the pending states on a fetch request,

10
00:00:45.340 --> 00:00:47.940
you are waiting for
something to come back.

11
00:00:47.940 --> 00:00:52.410
And that could be either resolve events or
reject events.

12
00:00:52.410 --> 00:00:56.490
Now, remember,
events objects can contain payload.

13
00:00:56.490 --> 00:01:01.110
So it might be useful to use guarded
transitions to check that the payload

14
00:01:01.110 --> 00:01:05.170
in the events satisfy certain criteria or

15
00:01:05.170 --> 00:01:09.380
that our context itself
satisfies certain criteria.

16
00:01:09.380 --> 00:01:13.460
So if we go to the original XState
visualizer example over here,

17
00:01:13.460 --> 00:01:21.700
we could see that there is
an action that assigns retries.

18
00:01:21.700 --> 00:01:27.230
And so these retries are going to
keep incrementing in the states

19
00:01:27.230 --> 00:01:28.390
whenever we fail.

20
00:01:28.390 --> 00:01:31.486
So we see the retries are 0, but

21
00:01:31.486 --> 00:01:37.250
when we click retry it goes to 0,
goes to 2, etc., etc.

22
00:01:37.250 --> 00:01:42.400
So if we wanted to add a guard here,
we could say that, you know what,

23
00:01:42.400 --> 00:01:47.630
we're no longer allowed to retry
if we have more than five retries.

24
00:01:47.630 --> 00:01:50.740
We could say, hey,
you've tried this too many times.

25
00:01:50.740 --> 00:01:55.490
I promise you, it's going to fail,
pun not intended.

26
00:01:55.490 --> 00:02:00.560
So reject failure retry,
we could say that we want

27
00:02:00.560 --> 00:02:07.230
this retry transition to only happen
if we have less than five retries.

28
00:02:07.230 --> 00:02:12.490
So to do that we specify
a conditional predicate.

29
00:02:12.490 --> 00:02:15.980
And just like everything else,
that conditional is going to take

30
00:02:15.980 --> 00:02:20.404
the current context and
the events that it received, and

31
00:02:20.404 --> 00:02:26.420
we're going to return
context.retries is less than 5.

32
00:02:26.420 --> 00:02:29.560
So we can have no more than five retries.

33
00:02:29.560 --> 00:02:35.210
So let's update this, and you'll see
that we have a green cond over here.

34
00:02:35.210 --> 00:02:39.357
And it's green because
the visualizer understands that

35
00:02:39.357 --> 00:02:41.900
it is currently truthy right now.

36
00:02:41.900 --> 00:02:49.430
And so if we reject, retry, reject,
retry we're gonna see that that turns

37
00:02:49.430 --> 00:02:54.430
red after so many retries, and
then we could no longer retry.

38
00:02:54.430 --> 00:02:58.320
So this turns red and we're no longer
allowed to take this transition

39
00:02:58.320 --> 00:03:00.638
because the retries is five or more.

40
00:03:00.638 --> 00:03:05.630
Now this cond doesn't look too
nice in the visualizer, which is

41
00:03:05.630 --> 00:03:10.520
why we could also serialize this condition
as well, or this conditional guard.

42
00:03:10.520 --> 00:03:12.670
So we could say cond,

43
00:03:16.647 --> 00:03:21.250
noExceededRetries, naming things is hard.

44
00:03:21.250 --> 00:03:24.410
So we could specify in
the guards over here

45
00:03:26.390 --> 00:03:31.790
noExceededRetries, and
we could say this is what that means.

46
00:03:31.790 --> 00:03:36.690
So when you see a noExceededRetries guard,
this is the guard that you want

47
00:03:36.690 --> 00:03:41.690
to check against in order to see if
a transition can be taken or not.

48
00:03:41.690 --> 00:03:46.046
So let's update that, and
now you will see over here it says

49
00:03:46.046 --> 00:03:50.840
noExceededRetries, and
it's going to work the exact same way.

50
00:03:50.840 --> 00:03:55.340
To define the guard,
it's just like we showed.

51
00:03:55.340 --> 00:03:59.880
You have the condition,
which is cond over here, and

52
00:03:59.880 --> 00:04:05.590
you are returning true or false based on
whether or not a condition can be taken.

53
00:04:05.590 --> 00:04:10.186
Again, this can be separated
out into a function and

54
00:04:10.186 --> 00:04:13.216
referred to by that function, and

55
00:04:13.216 --> 00:04:18.349
then you could also specify
that in the options.guards.

