WEBVTT

1
00:00:00.520 --> 00:00:06.260
Last time we talked, we were on exercise
six, which was about guarded transitions.

2
00:00:06.260 --> 00:00:12.100
Now, let's actually tackle this exercise,
we have to do a couple of things.

3
00:00:12.100 --> 00:00:14.624
Let's go ahead and get started here.

4
00:00:16.130 --> 00:00:21.431
Okay, all right, so
we want to not let the mouse down

5
00:00:21.431 --> 00:00:27.470
transition happen unless
there's less than five tracks.

6
00:00:27.470 --> 00:00:32.220
So we want to limit the number
of drags that the user is doing.

7
00:00:32.220 --> 00:00:36.740
So to do that, we could add
a conditioned to this transition,

8
00:00:36.740 --> 00:00:39.180
which will make it
the car that transition.

9
00:00:39.180 --> 00:00:43.940
So we could say context event, and

10
00:00:43.940 --> 00:00:49.240
if this condition returns true, that means
that this transition is allowed to happen.

11
00:00:49.240 --> 00:00:53.290
It doesn't mean that it will happen,
it means that it's allowed to happen.

12
00:00:53.290 --> 00:01:02.430
So in this case, we want to return
context.drags is less than 5.

13
00:01:02.430 --> 00:01:05.350
Now just to test that this is true,

14
00:01:05.350 --> 00:01:09.070
let's return false over here
just to see what happens.

15
00:01:09.070 --> 00:01:12.412
So when we return false over here,

16
00:01:12.412 --> 00:01:17.384
you'll see that we're not
allowed to drag at all.

17
00:01:17.384 --> 00:01:21.440
So we're not allowed to go from that
idle state to that dragging state.

18
00:01:21.440 --> 00:01:28.500
Let's get rid of that, okay.

19
00:01:28.500 --> 00:01:32.490
Now we're allowed to drag
however many times we want, and

20
00:01:32.490 --> 00:01:36.070
we could see the drag counter is
being kept track of up here, but

21
00:01:36.070 --> 00:01:38.810
we're not updating
the number of drags yet.

22
00:01:38.810 --> 00:01:42.670
So we need to do that over here on entry.

23
00:01:42.670 --> 00:01:47.410
So we'll say entry and
this is going to be an action.

24
00:01:47.410 --> 00:01:54.640
So we take context and
an event and we're going to say,

25
00:01:54.640 --> 00:01:58.380
whenever we enter the state we
want to increment the drags count.

26
00:01:58.380 --> 00:02:01.660
So this sounds like
an assign action to me.

27
00:02:01.660 --> 00:02:06.161
We are going to assign drags to,

28
00:02:06.161 --> 00:02:10.496
we only need the context here,

29
00:02:10.496 --> 00:02:15.332
we can say context.drags + 1 and

30
00:02:15.332 --> 00:02:18.360
return that, okay.

31
00:02:18.360 --> 00:02:22.140
At the bottom here, we're keeping track
of the drags directly on the elements, so

32
00:02:22.140 --> 00:02:25.300
that we could display it on that
top left corner that you saw.

33
00:02:25.300 --> 00:02:31.074
So when we go here, we'll see okay,
we dragged once, you drag twice,

34
00:02:31.074 --> 00:02:35.452
three times, four times,

35
00:02:35.452 --> 00:02:40.270
five times and now we can't drag anymore.

36
00:02:40.270 --> 00:02:43.050
So there you go.

37
00:02:44.420 --> 00:02:48.508
Hopefully that made sense and
now let's actually extract these out.

38
00:02:48.508 --> 00:02:53.452
So we could say,
let's have a new action here.

39
00:02:53.452 --> 00:02:57.810
const countDrags, and
we could move this assign action.

40
00:02:59.970 --> 00:03:04.105
Say that that's countDrags over to entry.

41
00:03:07.022 --> 00:03:08.391
We could do the same thing over here.

42
00:03:08.391 --> 00:03:14.394
We could say that this condition

43
00:03:14.394 --> 00:03:19.069
should be NotMaxDrags.

44
00:03:19.069 --> 00:03:21.599
I'm terrible with naming things,
but that's okay.

45
00:03:21.599 --> 00:03:29.240
const notMaxDrags and we should see
that it works exactly the same.

46
00:03:29.240 --> 00:03:33.316
After five drags,
we can't do any more drags.

47
00:03:35.772 --> 00:03:41.925
Now, conditionals which make up
the guards for the guard at transitions,

48
00:03:41.925 --> 00:03:45.940
these are configurable
in the very bottom here.

49
00:03:45.940 --> 00:03:52.660
So we could say guards and
we will have notMaxDrags.

50
00:03:56.394 --> 00:03:59.930
We will right now it's just
the same as notMaxDrags.

51
00:03:59.930 --> 00:04:03.410
But if you want to test this,
you could easily override this and

52
00:04:03.410 --> 00:04:08.784
say that this is true and this way
it's always going to let you drag.

53
00:04:08.784 --> 00:04:12.505
It will refresh,

54
00:04:12.505 --> 00:04:16.478
maybe not, okay.

55
00:04:16.478 --> 00:04:21.140
So, if that was a string, there we go.

56
00:04:21.140 --> 00:04:25.800
That's going to allow you to configure it
so that you could drag as many times as

57
00:04:25.800 --> 00:04:31.310
you want or you could test it and say,
let's assume that this is always false.

58
00:04:31.310 --> 00:04:32.310
And now you could never drag.

59
00:04:34.670 --> 00:04:38.940
So, this is what guarded
transitions enable or

60
00:04:38.940 --> 00:04:44.645
rather disable you from doing is choosing
the transition when that happens.

61
00:04:44.645 --> 00:04:49.190
And additional points that I want
to make about guarded transitions

62
00:04:49.190 --> 00:04:54.100
is that when you have a garden transition,

63
00:04:54.100 --> 00:04:58.830
you recognize that this transition is
one that might not be able to be taken.

64
00:04:58.830 --> 00:05:05.210
For example, if notMaxDrags is false,
then we have no transition to do.

65
00:05:05.210 --> 00:05:08.240
But let's say that we wants
to define another state.

66
00:05:08.240 --> 00:05:13.425
So we want to say this is,
let's call it draggedout.

67
00:05:13.425 --> 00:05:15.210
Like we've dragged this out for

68
00:05:15.210 --> 00:05:20.580
too long, so this element is
no longer able to be dragged.

69
00:05:20.580 --> 00:05:23.650
And just for now,
we could give this a final state.

70
00:05:23.650 --> 00:05:27.480
This does nothing but it's a really
good indicator of saying, hey,

71
00:05:27.480 --> 00:05:31.630
we've reached our final state and
nothing can happen from here anymore.

72
00:05:31.630 --> 00:05:36.000
What you could do here
is you could specify

73
00:05:36.000 --> 00:05:40.140
this transition on the mouse
down event as an array.

74
00:05:41.370 --> 00:05:46.020
So, what this means, when we specify
more than one transition, so

75
00:05:46.020 --> 00:05:52.800
we could say target dragged
out is that if the first

76
00:05:52.800 --> 00:05:58.380
transition in the array is not taken,
then we keep going down.

77
00:05:58.380 --> 00:06:02.390
So we checked this transition,
we see, can we take this transition.

78
00:06:02.390 --> 00:06:05.310
If so, then we will take it.

79
00:06:05.310 --> 00:06:07.680
And so now let's see how that looks.

80
00:06:07.680 --> 00:06:10.220
So right now we are dragged
out by default and

81
00:06:10.220 --> 00:06:15.360
that's because we're specifying that
as a string which is defined down here.

82
00:06:15.360 --> 00:06:22.686
So let's go ahead and undo that and
now when we drag five times,

83
00:06:25.707 --> 00:06:29.660
It's going to go to the dragged out state,
as you see over here.

84
00:06:29.660 --> 00:06:34.850
And in that state we're no longer allowed
to drag anyway because it's a final state,

85
00:06:34.850 --> 00:06:36.460
nothing else can happen in it.

