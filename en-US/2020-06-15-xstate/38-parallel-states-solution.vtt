WEBVTT

1
00:00:00.000 --> 00:00:02.637
We have two states over here
which we've defined before.

2
00:00:02.637 --> 00:00:07.550
We have our light state and dark state
that need to switch between each other.

3
00:00:07.550 --> 00:00:11.340
So we could say, on switch,
go to dark here.

4
00:00:12.500 --> 00:00:16.440
And likewise over here,
we could say on switch, go to light.

5
00:00:19.080 --> 00:00:24.020
Now this isn't gonna change the fact that
we still need to model our brightness.

6
00:00:24.020 --> 00:00:28.490
But it's good to check that we could
go back and forth between dark mode and

7
00:00:28.490 --> 00:00:34.270
light mode still, and
still maintain our brightness state.

8
00:00:34.270 --> 00:00:39.950
So we're going to be using a delayed
transition to go from bright to dim.

9
00:00:39.950 --> 00:00:44.880
And so we could say after,
in this case, we'll use 2 seconds.

10
00:00:44.880 --> 00:00:50.613
We're gonna go to dim, and
when we're in the dim state,

11
00:00:50.613 --> 00:00:53.490
on switch, we go to bright.

12
00:00:54.510 --> 00:00:56.580
Now you might be looking at this and

13
00:00:56.580 --> 00:01:00.610
thinking, okay,
which one of these states will win?

14
00:01:00.610 --> 00:01:04.070
We have a dark state that
handles the switch events and

15
00:01:04.070 --> 00:01:08.490
we have a dim state that also
handles the switch events.

16
00:01:08.490 --> 00:01:10.820
Because both of these
are in parallel regions.

17
00:01:10.820 --> 00:01:14.930
The answer is that they will
both handle the same events.

18
00:01:14.930 --> 00:01:19.230
And so if we're in dark mode and
we switch, we'll go the light mode.

19
00:01:19.230 --> 00:01:23.440
If we're in dim mode at the same time,
we will go to bright mode.

20
00:01:23.440 --> 00:01:24.830
So let's go ahead and test that out.

21
00:01:26.430 --> 00:01:30.570
When we turn on, after two seconds,
it's gonna go dim.

22
00:01:31.610 --> 00:01:33.940
And so when we switch again, and so

23
00:01:33.940 --> 00:01:38.120
you could see we're brightness dim and
mode dark.

24
00:01:38.120 --> 00:01:41.650
So when we switch again, you'll see
that it goes back to being bright,

25
00:01:41.650 --> 00:01:42.845
which is great.

26
00:01:42.845 --> 00:01:49.760
And if I keep clicking switch,
it's not really gonna go dim until now.

27
00:01:49.760 --> 00:01:52.220
So it does go to dim.

28
00:01:52.220 --> 00:01:53.000
And now we're in dark mode.

29
00:01:53.000 --> 00:01:57.840
So if I switch again,
it goes back to not being dim and

30
00:01:57.840 --> 00:02:03.120
then it goes from bright to dim,
and we could turn it off,

31
00:02:03.120 --> 00:02:06.642
which is a transition that we forgot.

32
00:02:06.642 --> 00:02:09.150
So let's go ahead and add that over here.

33
00:02:11.948 --> 00:02:16.906
In our visible state,
this is a parent state node where it has

34
00:02:16.906 --> 00:02:20.708
a type of parallel and
we have two states in it.

35
00:02:20.708 --> 00:02:24.917
But in any state node,
you could still define transitions for it.

36
00:02:24.917 --> 00:02:30.179
So we could say on,
turn_off, go to hidden.

37
00:02:33.669 --> 00:02:38.944
So now, We get to switch,

38
00:02:38.944 --> 00:02:41.599
we see the diming behavior working.

39
00:02:41.599 --> 00:02:42.540
There we go.

40
00:02:42.540 --> 00:02:46.090
And then when we turn off,
we go back to hidden.

41
00:02:48.390 --> 00:02:52.440
Now one quick note,
because the state value is not an object,

42
00:02:52.440 --> 00:02:54.560
we need another way of representing it.

43
00:02:54.560 --> 00:02:57.900
Thankfully, there's a helper
method over here called toStrings.

44
00:02:57.900 --> 00:02:59.410
If you call toStrings,

45
00:02:59.410 --> 00:03:04.060
it's going to output an array of strings
that represent each of those state values.

46
00:03:04.060 --> 00:03:08.730
So since we have something like visible
mode dark, we're going to have the visible

47
00:03:08.730 --> 00:03:15.120
string, the visible.mode string and
the visible.mode.dark string.

48
00:03:15.120 --> 00:03:18.310
And so in order to put that
in the data state attribute,

49
00:03:18.310 --> 00:03:21.400
we could just join those with a space.

50
00:03:21.400 --> 00:03:24.742
And so
that's what you see over here visible,

51
00:03:24.742 --> 00:03:28.260
visible.mode, visible.brightness, etc.

52
00:03:29.450 --> 00:03:35.470
Suzanne T asks, can we get a demo of how
to combine parallel in history state?

53
00:03:35.470 --> 00:03:36.850
So that's a great question.

54
00:03:36.850 --> 00:03:38.910
It's more of an advanced topic.

55
00:03:38.910 --> 00:03:42.547
I don't want to spend too much time on it,
but I will go ahead and

56
00:03:42.547 --> 00:03:43.724
show you over here.

57
00:03:43.724 --> 00:03:49.957
Let's say that we want to go
turn on invisible.hist again.

58
00:03:49.957 --> 00:03:55.085
So in a parallel state, you could have
your regions over here, and next to your

59
00:03:55.085 --> 00:04:00.388
regions in the latest version of Xstate,
you could also have your pseudo state.

60
00:04:00.388 --> 00:04:04.730
So you could have that history,
which is of course type: 'history'.

61
00:04:06.080 --> 00:04:10.040
But you're going to see that this
doesn't actually do anything.

62
00:04:10.040 --> 00:04:12.470
And I want you to think about why.

63
00:04:12.470 --> 00:04:16.600
When we turn it on and switch to dark mode
and turn it off and turn it on again,

64
00:04:16.600 --> 00:04:18.776
we don't get that same history state.

65
00:04:18.776 --> 00:04:21.687
And that's because there's
two types of history state.

66
00:04:21.687 --> 00:04:24.650
There's shallow and deep history.

67
00:04:24.650 --> 00:04:27.160
Shallow remembers the immediate child.

68
00:04:27.160 --> 00:04:29.710
Deep remembers all descendants.

69
00:04:29.710 --> 00:04:33.240
And so in this case, our immediate
children are mode and brightness,

70
00:04:33.240 --> 00:04:35.430
which we know are both active anyway.

71
00:04:35.430 --> 00:04:37.070
So it doesn't help us too much.

72
00:04:37.070 --> 00:04:40.330
So if we say, history: 'deep',

73
00:04:40.330 --> 00:04:44.916
then we could specify this
as a deep history node.

74
00:04:44.916 --> 00:04:48.060
And that way, when we turn it on,
switch the mode,

75
00:04:48.060 --> 00:04:51.882
turn it off and turn it on again,
we still have that dark mode.

76
00:04:51.882 --> 00:04:53.516
So it works just the same.

77
00:04:55.907 --> 00:04:59.988
So if you want to learn more about
deep history state, go ahead and

78
00:04:59.988 --> 00:05:02.972
look in the Xstate documentation for
history.

79
00:05:02.972 --> 00:05:06.827
So you could just go to Guides &gt; History,
and

80
00:05:06.827 --> 00:05:12.011
it talks about the two types of
history state nodes in there.

