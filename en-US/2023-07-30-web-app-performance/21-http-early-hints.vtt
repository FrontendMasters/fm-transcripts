WEBVTT

1
00:00:00.000 --> 00:00:03.707
And this one is also really cool.

2
00:00:03.707 --> 00:00:08.031
It's more, I don't wanna experimental
because it's not experimental, but

3
00:00:08.031 --> 00:00:09.784
it needs some work on your side.

4
00:00:09.784 --> 00:00:10.532
Let's say that.

5
00:00:10.532 --> 00:00:12.756
It's called HTTP Early Hints.

6
00:00:12.756 --> 00:00:14.870
This is not so simple as Alia Linka.

7
00:00:14.870 --> 00:00:17.732
So that's what I mean.

8
00:00:17.732 --> 00:00:19.272
It's actually pretty cool.

9
00:00:19.272 --> 00:00:23.727
Let's say it's common if you're
doing server-side rendering.

10
00:00:23.727 --> 00:00:26.283
Let's say that case,
you're doing server-side rendering.

11
00:00:26.283 --> 00:00:30.090
If you're doing server-side rendering,
the server receives the request.

12
00:00:30.090 --> 00:00:35.007
And then it takes some time to execute
that on the server, on the cloud, right?

13
00:00:35.007 --> 00:00:37.944
And then it respond with the HTML.

14
00:00:37.944 --> 00:00:39.234
That's how it works.

15
00:00:39.234 --> 00:00:44.194
Without the hint,
instead of responding with HTTP 200,

16
00:00:44.194 --> 00:00:47.219
the server can respond with 103.

17
00:00:47.219 --> 00:00:50.030
It's called early hints.

18
00:00:50.030 --> 00:00:56.797
And after the code,
it can respond with preload declarations.

19
00:00:56.797 --> 00:00:59.848
So let me explain what that means.

20
00:00:59.848 --> 00:01:07.370
And you are the browser, you're asking me
for HTML, so you contact me and you say,

21
00:01:07.370 --> 00:01:12.349
you want the HTML, I need to go and
do a lot of stuff before,

22
00:01:12.349 --> 00:01:17.356
but before doing that,
I will respond to you with 103.

23
00:01:17.356 --> 00:01:22.254
And it says, okay, in the meantime,
why don't you go and grab this CSS,

24
00:01:22.254 --> 00:01:24.626
this font, and that image, okay?

25
00:01:24.626 --> 00:01:25.490
Wait for me.

26
00:01:25.490 --> 00:01:30.562
Then I go, I do my stuff, and
when I have my HTML over the same

27
00:01:30.562 --> 00:01:36.759
connection that is still waiting,
now I add an HTTP 200 and the file.

28
00:01:36.759 --> 00:01:41.538
So early hints can let
the browser download or

29
00:01:41.538 --> 00:01:46.193
know about other resources around 200,

30
00:01:46.193 --> 00:01:49.602
250 milliseconds earlier.

31
00:01:49.602 --> 00:01:50.436
Does this make sense?

32
00:01:52.928 --> 00:01:57.370
So what happens if the browser,
so this is the diagram.

33
00:01:57.370 --> 00:02:01.592
So normally, at the left,
you will see how that works.

34
00:02:01.592 --> 00:02:04.302
We have the client and we have the server.

35
00:02:04.302 --> 00:02:06.709
The client ask for index.html.

36
00:02:06.709 --> 00:02:11.101
Then it took some time to think and
then it answers with 200, okay?

37
00:02:11.101 --> 00:02:18.250
And then, the browser realized, you need a
CSS, I need a CSS, so it requests the CSS.

38
00:02:18.250 --> 00:02:23.806
With early hints, I'm asked for
HTML, and the server immediately,

39
00:02:23.806 --> 00:02:28.247
without waiting,
responds with 103 and the hints.

40
00:02:28.247 --> 00:02:32.645
You will need a CSS, so go and
request that in the meantime.

41
00:02:32.645 --> 00:02:36.567
So while the server is working
on the final response.

42
00:02:36.567 --> 00:02:43.067
In the meantime, we can take advantage
of the bandwidth to download the CSS.

43
00:02:43.067 --> 00:02:45.373
I know we're the same connection.

44
00:02:45.373 --> 00:02:47.535
Then we get the file.

45
00:02:47.535 --> 00:02:51.790
One of the good thing about this
is that it's backward compatible.

46
00:02:51.790 --> 00:02:56.220
If a browser does not support Jenkins 103,
it will ignore it.

47
00:02:56.220 --> 00:03:01.189
So when the browser Safari or a browser
that is not supporting this reads 103,

48
00:03:01.189 --> 00:03:02.220
it says, what?

49
00:03:02.220 --> 00:03:04.132
I don't know, okay, let's wait.

50
00:03:04.132 --> 00:03:04.898
And it continues to wait.

51
00:03:04.898 --> 00:03:06.533
It will wait for the 200.

52
00:03:06.533 --> 00:03:10.879
Yeah, you won't have the early hints,
but the website will work anyway.

53
00:03:10.879 --> 00:03:14.286
You have a nice article on
web.dev about the early hints,

54
00:03:14.286 --> 00:03:18.051
how to implement that,
how to do that with Apache or with Nginx.

55
00:03:20.735 --> 00:03:25.025
And today if you're using Cloudflare or
other proxy-based providers,

56
00:03:25.025 --> 00:03:28.288
you can enable early hints and
they will do that for you.

57
00:03:28.288 --> 00:03:33.141
So you set up that the cloud
to enable early hints.

58
00:03:33.141 --> 00:03:36.904
You specify which early hints you
want to send to the browser and

59
00:03:36.904 --> 00:03:41.953
it will do that for you So it's difficult

60
00:03:41.953 --> 00:03:47.130
to test this with our example,
we have to make a lot of work in NodeJS.

61
00:03:47.130 --> 00:03:52.096
But actually what will happen
is that we will move here.

62
00:03:52.096 --> 00:03:58.273
For example, if we set all hints
the styles.css, the background CSS,

63
00:03:58.273 --> 00:04:04.669
we can start, these two downloads can
actually start here, around here.

64
00:04:04.669 --> 00:04:09.245
So we can pull the diagram, right?

65
00:04:09.245 --> 00:04:10.691
We can pull a little bit.

66
00:04:10.691 --> 00:04:14.755
And remember,
that also is pulling the vertical bars,

67
00:04:14.755 --> 00:04:17.096
our milestones, our web bias.

