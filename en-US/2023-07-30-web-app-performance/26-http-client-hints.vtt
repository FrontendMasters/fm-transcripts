WEBVTT

1
00:00:00.063 --> 00:00:02.532
HTTP Client Hints.

2
00:00:02.532 --> 00:00:04.940
The idea is for external resources.

3
00:00:04.940 --> 00:00:08.551
We are talking about resource loading.

4
00:00:08.551 --> 00:00:13.759
What if the server can receive data
about the client to make better

5
00:00:13.759 --> 00:00:18.507
decisions about the resource
that it's going to send you?

6
00:00:18.507 --> 00:00:22.131
For example, images.

7
00:00:22.131 --> 00:00:28.978
What if the server knows the pixel density
or the resolution of the current device?

8
00:00:28.978 --> 00:00:34.097
So if you're asking me for an image,
I know if you are on a laptop computer,

9
00:00:34.097 --> 00:00:38.892
if you're on a laptop with a retina
screen, so with more resolution,

10
00:00:38.892 --> 00:00:43.442
if you're on an iPhone,
if you're on an Android, based on that,

11
00:00:43.442 --> 00:00:48.530
without using the picture elements,
so the server will make a decision.

12
00:00:48.530 --> 00:00:51.420
And for that, we can expose data

13
00:00:51.420 --> 00:00:56.142
to the server with a spec
known as HTTP Client Hints.

14
00:00:56.142 --> 00:01:00.361
It's a meta tag that you can
define in the header of your HTML,

15
00:01:00.361 --> 00:01:02.472
actually more than a meta tag,

16
00:01:02.472 --> 00:01:07.768
it's an HTTP header that you can also
express as a meta tag, that's better.

17
00:01:07.768 --> 00:01:10.907
Accept-CH, CH, client hints.

18
00:01:10.907 --> 00:01:15.891
And in the content,
you set a comma-separated list

19
00:01:15.891 --> 00:01:19.407
of properties that you want, okay?

20
00:01:19.407 --> 00:01:21.878
Give me a second.

21
00:01:21.878 --> 00:01:27.836
We can ask today for RTT, Round Trip Time.

22
00:01:27.836 --> 00:01:31.722
So that's the latency.

23
00:01:31.722 --> 00:01:36.827
We can send to the server
the current estimated latency that

24
00:01:36.827 --> 00:01:41.640
we are having, so
the server can decide what to return.

25
00:01:41.640 --> 00:01:45.900
Downlink, that's an estimation
of the bandwidth.

26
00:01:45.900 --> 00:01:49.887
So again,
if the latency is 400 milliseconds,

27
00:01:49.887 --> 00:01:53.235
something's wrong with our connection.

28
00:01:53.235 --> 00:01:58.832
So the server can say, well,
let's return something simpler,

29
00:01:58.832 --> 00:02:02.917
let's increase the experience for
that user.

30
00:02:02.917 --> 00:02:06.553
Does it make sense?

31
00:02:06.553 --> 00:02:13.254
This is the effective connection type,
ECT, effective connection type.

32
00:02:13.254 --> 00:02:19.307
It will give you a string if you are in
2g, 3g, 4g, slow-2g, and that's all.

33
00:02:19.307 --> 00:02:21.476
So there is no 5g or Wi-Fi.

34
00:02:21.476 --> 00:02:25.441
In those cases,
they will give you a 4g, the best one.

35
00:02:25.441 --> 00:02:30.213
Save-Data, that's a boolean
value that will give

36
00:02:30.213 --> 00:02:34.342
you the hint that the user
wants to save data.

37
00:02:34.342 --> 00:02:35.588
What does it mean for you?

38
00:02:35.588 --> 00:02:37.121
It's your problem.

39
00:02:37.121 --> 00:02:44.419
So you can return images in low resolution
if you wanna honor that settings.

40
00:02:44.419 --> 00:02:45.330
Where is the settings?

41
00:02:45.330 --> 00:02:48.210
I will show you what it is,
but on an Android, on Chrome,

42
00:02:48.210 --> 00:02:51.160
for example,
you have a settings Save-Data in the menu.

43
00:02:51.160 --> 00:02:56.237
On iOS, you need to enable that in
your current connection settings

44
00:02:56.237 --> 00:03:02.025
in the Wi-Fi or in your data connection
plan that you have with your carrier,

45
00:03:02.025 --> 00:03:04.180
you can enable Save-Data.

46
00:03:04.180 --> 00:03:07.266
DPR, that's device pixel ratio.

47
00:03:07.266 --> 00:03:10.965
That's the resolution, the pixel density.

48
00:03:10.965 --> 00:03:15.261
Viewport width,
that's the actual width in CSS pixels.

49
00:03:15.261 --> 00:03:18.290
And device memory,
how much memory the device has.

50
00:03:18.290 --> 00:03:23.458
So you can request the client,
the browser,

51
00:03:23.458 --> 00:03:29.040
to send the data to every
resource HTTP request.

52
00:03:29.040 --> 00:03:30.605
That's an HTTP client hint.

53
00:03:30.605 --> 00:03:32.626
Does that make sense?

54
00:03:32.626 --> 00:03:37.742
If you have a lot of work server-side to
do something with the information and

55
00:03:37.742 --> 00:03:38.617
with a hint.

56
00:03:38.617 --> 00:03:43.890
But the idea is to increase
the user experience.

57
00:03:43.890 --> 00:03:47.627
By the way,
the memory is expressed in MiB,

58
00:03:47.627 --> 00:03:53.292
that we know that it's not men in black,
okay, it's mebibytes.

59
00:03:53.292 --> 00:03:55.976
So now you will see that many times.

60
00:03:55.976 --> 00:04:00.690
By the way, so the idea that we
have kilobytes and kibibytes,

61
00:04:00.690 --> 00:04:06.596
it's the only thing that I know that
you will remember from today's course.

62
00:04:06.596 --> 00:04:08.160
That's the only thing you will remember.

