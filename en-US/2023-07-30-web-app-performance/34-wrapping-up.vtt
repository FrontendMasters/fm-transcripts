WEBVTT

1
00:00:00.091 --> 00:00:03.129
So today we'll go over what's the problem?

2
00:00:03.129 --> 00:00:05.795
Why where performance is important?

3
00:00:05.795 --> 00:00:09.260
We've seen a couple of
metrics not all metrics, but

4
00:00:09.260 --> 00:00:14.299
the most important metrics such as
the speed index, time to first byte, and

5
00:00:14.299 --> 00:00:19.758
the core that bite us, CLS for a simple
delay that it's kind of being deprecated.

6
00:00:19.758 --> 00:00:25.018
And probably the most important one,
the one that we wanna focus initially for

7
00:00:25.018 --> 00:00:29.493
the initial page load that is
the largest contentful paint or LCP.

8
00:00:29.493 --> 00:00:33.679
We've seen briefly some tools,
but now you know the tools,

9
00:00:33.679 --> 00:00:37.138
it's time for
you to get deeper with those tools.

10
00:00:37.138 --> 00:00:40.295
Lighthouse, DevTools with a network layer.

11
00:00:40.295 --> 00:00:43.851
We've seen patients
Big Insights that he's taking

12
00:00:43.851 --> 00:00:47.979
information from the Chrome UX report or
on your real users.

13
00:00:47.979 --> 00:00:52.878
We've seen Web Page Test
is pretty cool option.

14
00:00:52.878 --> 00:00:58.768
A pretty cool tool that you will use
a lot as a web performance engineer.

15
00:00:58.768 --> 00:01:01.603
We'll cover briefly charts and diagrams,

16
00:01:01.603 --> 00:01:04.905
the most important one
being the waterfall chart.

17
00:01:04.905 --> 00:01:10.993
The bars that we have there, the lines,
the milestones over that a filmstrip view,

18
00:01:10.993 --> 00:01:16.253
how you can see in action screenshots
of your world while it's loading.

19
00:01:16.253 --> 00:01:20.002
We understand the browsers,
so how browsing works,

20
00:01:20.002 --> 00:01:24.749
so when you type a URL,
what's going on there, what are the steps,

21
00:01:24.749 --> 00:01:29.104
and why then we need to do some
things to improve performance.

22
00:01:29.104 --> 00:01:34.217
We'll cover basic optimizations,
then a lot of other more

23
00:01:34.217 --> 00:01:39.125
hacky things to apply and
like get really moved forward,

24
00:01:39.125 --> 00:01:43.438
move farther the optimizations
that you can get.

25
00:01:43.438 --> 00:01:50.988
And finally, a quick hint on performance
APIs available in the client.

26
00:01:50.988 --> 00:01:55.003
Just remember, always,
why are we doing this?

27
00:01:55.003 --> 00:01:57.626
I think this is important.

28
00:01:57.626 --> 00:02:02.919
Don't apply all the techniques
just because you read an article,

29
00:02:02.919 --> 00:02:08.793
or you were here watching this video,
or you were here doing this course.

30
00:02:08.793 --> 00:02:10.039
It's not important.

31
00:02:10.039 --> 00:02:12.703
What's important is to get better metrics,

32
00:02:12.703 --> 00:02:15.516
because that will lead
into more conversions.

33
00:02:15.516 --> 00:02:19.166
Because just remember that performance
should be top priority for

34
00:02:19.166 --> 00:02:20.214
a lot of websites.

35
00:02:20.214 --> 00:02:24.484
Because it impacts directly the business.

36
00:02:24.484 --> 00:02:27.410
There are much more tricks
to push the limits.

37
00:02:27.410 --> 00:02:35.544
So it's actually a huge discipline within
web development or web engineering.

38
00:02:35.544 --> 00:02:38.756
But I think it's a worthwhile
effort to actually

39
00:02:38.756 --> 00:02:43.547
do that stuff if you remember what's
the goal and why we're doing this?

40
00:02:43.547 --> 00:02:47.668
&gt;&gt; So it seems like a lot of this stuff
is just taking a while to get adapted as

41
00:02:47.668 --> 00:02:49.742
an industry like standard as well.

42
00:02:49.742 --> 00:02:52.827
Do you see that a lot of that
changing in the next five years,

43
00:02:52.827 --> 00:02:56.310
just being automatically sort of
configured configured into it?

44
00:02:56.310 --> 00:03:00.967
&gt;&gt; Well, there are many of the things
that we've cover that are being

45
00:03:00.967 --> 00:03:04.794
automatically applied when
you are using some tools,

46
00:03:04.794 --> 00:03:09.221
some proxies when you are adding
a front on top of your website.

47
00:03:09.221 --> 00:03:13.142
Again, talking about Klausler,
they're not paying me to mention them.

48
00:03:13.142 --> 00:03:18.742
But anyway,
I don't think unless Machine Learning and

49
00:03:18.742 --> 00:03:22.673
ChatGPT replaces us in the future, but

50
00:03:22.673 --> 00:03:29.599
I don't think that it will replace
human work, any automatic tool.

51
00:03:29.599 --> 00:03:36.048
Because there are a lot of things that,
I mean we mentioned that before,

52
00:03:36.048 --> 00:03:40.277
you can get a really good
score at lighthouse and

53
00:03:40.277 --> 00:03:43.788
be pretty bad in the real performance.

54
00:03:43.788 --> 00:03:45.322
Or the other way around.

55
00:03:45.322 --> 00:03:50.770
So while tools can help,
we still need to make manual decisions.

56
00:03:50.770 --> 00:03:54.530
And for that you need to
understand where performance and

57
00:03:54.530 --> 00:03:59.230
while techniques might change with
time the basics are still the same,

58
00:03:59.230 --> 00:04:04.243
is understanding how HTTP works,
understand how the network layer works,

59
00:04:04.243 --> 00:04:09.111
what the browser is doing When you
understand how that works, then you

60
00:04:09.111 --> 00:04:15.031
understand when you have a problem, why is
the problem there and how to solve that.

61
00:04:15.031 --> 00:04:20.927
We each understand how painful
requests are by default.

62
00:04:20.927 --> 00:04:26.309
So from now on, you should try to be more

63
00:04:26.309 --> 00:04:31.216
careful about adding more assets.

64
00:04:31.216 --> 00:04:34.081
Because you know, our budget is limited.

65
00:04:34.081 --> 00:04:35.716
We don't have a limited budget.

66
00:04:35.716 --> 00:04:37.908
It's a small budget.

67
00:04:37.908 --> 00:04:42.470
So we should be very careful about
that budget, and we are spending

68
00:04:42.470 --> 00:04:47.119
the budget sometimes without even
knowing that that's a problem.

69
00:04:47.119 --> 00:04:53.052
Okay, so
feel with the browser how painful it is,

70
00:04:53.052 --> 00:04:57.586
each HTTP request, and make it work.

71
00:04:57.586 --> 00:05:01.330
So if you are going to make a request,
it should be important,

72
00:05:01.330 --> 00:05:04.072
okay, that's kind of the deal here, okay?

73
00:05:04.072 --> 00:05:06.078
Because performance is important.

74
00:05:06.078 --> 00:05:12.036
Just you're here at frontendmaster.com,
it's a really, really fast app website.

75
00:05:12.036 --> 00:05:14.122
You can try, probably you know that.

76
00:05:14.122 --> 00:05:18.819
Well, it's Manila JS and
that's the reason.

77
00:05:18.819 --> 00:05:22.775
And because you take
performance as important and

78
00:05:22.775 --> 00:05:27.765
when you do that, you think about that and
every step you make,

79
00:05:27.765 --> 00:05:32.495
you think, will it impact
performance negatively or not?

80
00:05:32.495 --> 00:05:36.030
Then you make that decision, okay?

81
00:05:36.030 --> 00:05:38.347
Going back to the original idea,

82
00:05:38.347 --> 00:05:42.909
are you feeling bad enough about
what you have been doing and how?

83
00:05:42.909 --> 00:05:45.590
And why it was slow, okay?

84
00:05:45.590 --> 00:05:50.408
But anyway, I hope that you learned
at least a couple of new tricks

85
00:05:50.408 --> 00:05:54.189
that you didn't know to
improve web performance.

86
00:05:54.189 --> 00:06:00.415
Having said that, that's all I have
today for you on web performance.

87
00:06:00.415 --> 00:06:02.976
There's much more, you have the ebook,

88
00:06:02.976 --> 00:06:07.584
you have a copy of the ebook also if you
wanna read more on web performance and

89
00:06:07.584 --> 00:06:11.550
keep engaged with the community
because it's a big community.

90
00:06:11.550 --> 00:06:13.120
Questions?

91
00:06:13.120 --> 00:06:16.220
Have a question?
&gt;&gt; Yeah, I'm not sure if you mentioned,

92
00:06:16.220 --> 00:06:19.583
but Todd Gardner has
a web performance course.

93
00:06:19.583 --> 00:06:24.492
We also have JavaScript performance,
specifically with Steve Kinney.

94
00:06:24.492 --> 00:06:29.369
&gt;&gt; Also, in terms of service workers,
you had the one from Kai Simpson,

95
00:06:29.369 --> 00:06:31.611
also the storage one that I did.

96
00:06:31.611 --> 00:06:35.839
It covers cache storage and
service worker that is important for

97
00:06:35.839 --> 00:06:37.805
improving web performance.

98
00:06:37.805 --> 00:06:39.531
&gt;&gt; You have the PWA course.

99
00:06:39.531 --> 00:06:40.691
&gt;&gt; The PWA course also.

100
00:06:44.298 --> 00:06:47.095
Do you have any final question,
comment, opinion?

101
00:06:47.095 --> 00:06:49.976
&gt;&gt; The other one I was looking
at was React performance.

102
00:06:49.976 --> 00:06:51.476
&gt;&gt; React performance.

103
00:06:51.476 --> 00:06:56.245
&gt;&gt; I think you talked a lot about how it's
easy to make performance a priority when

104
00:06:56.245 --> 00:06:57.555
it comes top-down.

105
00:06:57.555 --> 00:07:01.401
There's a CEOs friend or
something complaints.

106
00:07:01.401 --> 00:07:05.439
But VOD, going bottom up like
as a individual developers,

107
00:07:05.439 --> 00:07:11.272
there's something that you have found has
been an effective way to convince people.

108
00:07:11.272 --> 00:07:16.075
&gt;&gt; I think that most convincing way is
to create a video of the loading process

109
00:07:16.075 --> 00:07:20.878
from webpage test where you can
actually see, when you say 12 seconds,

110
00:07:20.878 --> 00:07:22.908
they say, that's fast.

111
00:07:22.908 --> 00:07:29.467
When you see 12 seconds of white with
the timer, you feel those 12 seconds.

112
00:07:29.467 --> 00:07:30.944
And I think that's good enough.

113
00:07:30.944 --> 00:07:34.122
And the other thing is probably
play golf and try to get into

114
00:07:34.122 --> 00:07:35.825
&gt;&gt; [LAUGH] The CEO game.

115
00:07:37.355 --> 00:07:39.825
&gt;&gt; Yeah, but
&gt;&gt; Or work for

116
00:07:39.825 --> 00:07:42.860
a company where the CEOs of developer and
cares about it.

117
00:07:42.860 --> 00:07:44.883
&gt;&gt; Well, yeah, that's another but

118
00:07:44.883 --> 00:07:49.556
in my experience if you don't have the
whole company on web performance if it's

119
00:07:49.556 --> 00:07:53.133
difficult because sometimes
you need to make concessions.

120
00:07:53.133 --> 00:07:53.753
I mean,

121
00:07:53.753 --> 00:07:59.714
some other parts of the company need to
make some concessions to make that work.

122
00:07:59.714 --> 00:08:04.425
There is no enough belief in,
if the company is not believing you,

123
00:08:04.425 --> 00:08:09.135
it's like, again,
you are the geeky guy with the timer, and

124
00:08:09.135 --> 00:08:15.226
they don't understand that that's not the
case, or maybe that's the case as well.

125
00:08:15.226 --> 00:08:19.611
But we are doing this because it's
better for the whole company, and

126
00:08:19.611 --> 00:08:21.356
it should be top priority.

127
00:08:21.356 --> 00:08:26.065
And if infrastructure needs to make
a change in how they're doing things,

128
00:08:26.065 --> 00:08:26.971
it has a cost.

129
00:08:26.971 --> 00:08:31.680
Okay, it's an investment
because you will have a return.

130
00:08:31.680 --> 00:08:35.508
There is a ROI their return
of investment that, yeah,

131
00:08:35.508 --> 00:08:41.436
someone needs to convince first, at least
the second line, early, at least CTOs.

132
00:08:41.436 --> 00:08:45.853
This CTO can fight for
that in the rest of the company.

133
00:08:45.853 --> 00:08:49.001
That's the case.

134
00:08:49.001 --> 00:08:50.100
But yeah, it's not simple.

135
00:08:50.100 --> 00:08:56.230
I know that when you are just a developer,
yeah, you are the geeky person.

136
00:08:56.230 --> 00:08:59.032
And no one actually
believes that that's true.

137
00:08:59.032 --> 00:09:04.683
I mean, Google has a lot of case studies
on web performance on their website.

138
00:09:04.683 --> 00:09:11.377
Where they big companies already are
showing their information where they say

139
00:09:11.377 --> 00:09:16.062
we increase performance talking
about e commerce sites,

140
00:09:16.062 --> 00:09:20.095
sign from travel sites,
enterprise solutions.

141
00:09:20.095 --> 00:09:24.471
And well that you can gather
information greater report and say hey,

142
00:09:24.471 --> 00:09:28.470
we can do the stuff, and
also the experiment that I mentioned,

143
00:09:28.470 --> 00:09:32.864
similar to the experiment that Amazon
did is also another good idea.

144
00:09:32.864 --> 00:09:34.979
If you get approval for that,

145
00:09:34.979 --> 00:09:39.802
you create an experiment of adding
milliseconds to every request or

146
00:09:39.802 --> 00:09:44.031
to the page load for groups on
the same day at the same time and

147
00:09:44.031 --> 00:09:47.852
see the conversion how
the conversion rate changes.

148
00:09:47.852 --> 00:09:52.159
And then with that,
we will prove that on your website for

149
00:09:52.159 --> 00:09:57.380
your website like the better performance,
the better conversion.

150
00:09:57.380 --> 00:10:01.439
So that means that now we need to go down,
from where we are,

151
00:10:01.439 --> 00:10:05.595
if we go down, we will incorporate,
we will increase that.

152
00:10:05.595 --> 00:10:07.172
Yeah, we will remember money.

153
00:10:07.172 --> 00:10:09.378
&gt;&gt; Awesome, thanks Max.

154
00:10:09.378 --> 00:10:10.536
&gt;&gt; Thank you.

155
00:10:10.536 --> 00:10:14.523
&gt;&gt; [APPLAUSE]

