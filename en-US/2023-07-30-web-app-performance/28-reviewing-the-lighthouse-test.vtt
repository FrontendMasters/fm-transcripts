WEBVTT

1
00:00:00.221 --> 00:00:02.381
Let's go back to our example, and

2
00:00:02.381 --> 00:00:05.892
let's see how we are doing
right now with performance.

3
00:00:05.892 --> 00:00:07.689
Is it better or worse?

4
00:00:07.689 --> 00:00:10.886
Let's go to Lighthouse and grab,

5
00:00:10.886 --> 00:00:16.296
remember 60 was our last, Score.

6
00:00:18.385 --> 00:00:19.728
Let's see what happens now.

7
00:00:19.728 --> 00:00:23.579
I'm still having my, let's say bad server,

8
00:00:23.579 --> 00:00:28.339
that I can solve as well cuz
that's a problem that I have.

9
00:00:28.339 --> 00:00:30.503
You can see it I'm still at 60.

10
00:00:30.503 --> 00:00:31.456
So why is that?

11
00:00:31.456 --> 00:00:34.167
Well, I can try this several times,

12
00:00:34.167 --> 00:00:39.426
the problem is that we have a lot of
Speed Index, remember Speed Index?

13
00:00:39.426 --> 00:00:46.036
Remember that the average or the budget
is 2.5, and yeah, 7 is actually far away.

14
00:00:46.036 --> 00:00:50.764
And Largest Contentful Paint is better
than before, it was 7, now it's 5,

15
00:00:50.764 --> 00:00:51.706
it's better.

16
00:00:51.706 --> 00:00:57.189
But we are still having problems because
time to first byte is really high.

17
00:00:57.189 --> 00:00:58.809
What is time to first byte?

18
00:00:58.809 --> 00:01:01.935
The time that it takes for
the first byte from the server to appear.

19
00:01:01.935 --> 00:01:05.208
And that is just because
I was adding that delay.

20
00:01:05.208 --> 00:01:08.358
What I want is to remove my middleware, so

21
00:01:08.358 --> 00:01:13.493
we don't have that fake delay, and
now it's a more normal server.

22
00:01:13.493 --> 00:01:18.937
And now it's almost instant, of course
that, yeah, it's still local, okay?

23
00:01:18.937 --> 00:01:27.081
We know that, but we can try to get,
The results from here,

24
00:01:27.081 --> 00:01:32.554
now we are at 94, there is still a place
for improvement, as you can see here.

25
00:01:32.554 --> 00:01:36.484
Largest Contentful Paint
is still 3.0 seconds,

26
00:01:36.484 --> 00:01:40.333
we need to find out why,
and here we have examples.

27
00:01:40.333 --> 00:01:45.281
Well, I'm not converting all
the files into WebP and AVIF,

28
00:01:45.281 --> 00:01:49.840
so that's why it says hey,
you should, maybe, okay,

29
00:01:49.840 --> 00:01:53.932
because I did that only
with the first one, oops.

30
00:01:53.932 --> 00:01:58.925
Also there are some render-blocking
resources here going on,

31
00:01:58.925 --> 00:02:03.825
.css and background.css,
that means a blocking resource is

32
00:02:03.825 --> 00:02:08.367
part of what is known as,
it's the critical path, okay.

33
00:02:08.367 --> 00:02:13.186
The critical path is all the files that
are necessary to render something on

34
00:02:13.186 --> 00:02:14.037
the screen.

35
00:02:14.037 --> 00:02:17.559
So without those files,
the browser will never run there.

36
00:02:17.559 --> 00:02:21.414
For example here,
maybe it's a good idea to merge styles and

37
00:02:21.414 --> 00:02:23.164
background into one file.

38
00:02:23.164 --> 00:02:27.826
And actually be true, it's not going to
be a big difference, but it says hey,

39
00:02:27.826 --> 00:02:31.302
be careful because those
are blocking resources, okay?

40
00:02:31.302 --> 00:02:36.648
Then, and this is true,
our CLS isn't really good because I'm

41
00:02:36.648 --> 00:02:41.707
not setting the width and
height of those images in the HTML.

42
00:02:41.707 --> 00:02:46.027
So you should add width and height, so

43
00:02:46.027 --> 00:02:50.893
that will create CLS layout shift, okay?

44
00:02:50.893 --> 00:02:54.380
Here you can see
the critical path in action.

45
00:02:54.380 --> 00:02:59.036
Of course, this tool is much
better with large websites,

46
00:02:59.036 --> 00:03:03.323
where sometimes it's not so
simple to see it, okay?

47
00:03:03.323 --> 00:03:08.235
But anyway, we are pretty good now,
we apply lots of

48
00:03:08.235 --> 00:03:13.271
techniques, mostly for
getting better web vitals.

49
00:03:13.271 --> 00:03:17.940
There's still room for
improvement, and on every website,

50
00:03:17.940 --> 00:03:23.259
remember that you need to test and
see which things are better for you.

51
00:03:23.259 --> 00:03:27.602
So don't trust me, don't trust the slides,
don't trust the book,

52
00:03:27.602 --> 00:03:29.597
trust your own testing, okay?

53
00:03:29.597 --> 00:03:32.865
That's kind of what you
need to understand.

54
00:03:32.865 --> 00:03:36.321
&gt;&gt; Where would I look to see how you'd
set it up so it's a server first for

55
00:03:36.321 --> 00:03:40.374
the initial load, and then it'd be the
client side rendering for the rest of it,

56
00:03:40.374 --> 00:03:45.379
like the individual-
&gt;&gt; Right, that depends on the framework,

57
00:03:45.379 --> 00:03:48.674
Next.js, Nuxt.js for Vue.js.

58
00:03:48.674 --> 00:03:50.503
&gt;&gt; Does Next.js automatically do that?

59
00:03:50.503 --> 00:03:53.520
&gt;&gt; It will automatically do that,
yeah, you can set up,

60
00:03:53.520 --> 00:03:56.352
you can customize it, but
it is automatic, yeah.

61
00:03:56.352 --> 00:03:59.338
&gt;&gt; So it's automatic with
the server first, client second.

62
00:03:59.338 --> 00:04:00.131
&gt;&gt; Yeah.
&gt;&gt; Okay.

63
00:04:00.131 --> 00:04:01.304
&gt;&gt; That's correct, yeah.

64
00:04:02.670 --> 00:04:04.375
But you are still using React.

65
00:04:04.375 --> 00:04:10.867
So every page is a React component, inside
the page you create React component,

66
00:04:10.867 --> 00:04:15.925
you use React components, but
the first load it's actually,

67
00:04:15.925 --> 00:04:22.629
I mean, the same vercel.com is Next.js,
that's the company behind Next.js.

68
00:04:22.629 --> 00:04:26.167
If we create, come on,
cannot create a new report for

69
00:04:26.167 --> 00:04:30.353
some reason, I'm trying to click there,
it's not working.

70
00:04:36.906 --> 00:04:40.071
That's weird, let me remove that one,
no, okay, there.

71
00:04:42.699 --> 00:04:47.930
They are typically proud that
most of the Next.js websites,

72
00:04:47.930 --> 00:04:53.373
they got 99,
I'm not sure what we get here, 85, not 99.

73
00:04:53.373 --> 00:04:57.596
But that depends on the case,
because it's a lab experiment.

74
00:04:57.596 --> 00:05:02.419
But they're using Next.js and
when you look at the page source,

75
00:05:02.419 --> 00:05:05.582
you see HTML, it's not just client side.

76
00:05:05.582 --> 00:05:08.525
I mean, it's not formatted here,
so it's difficult to read this.

77
00:05:08.525 --> 00:05:13.865
Even it has CSS embedded, everything
is done automatically by Next.js in

78
00:05:13.865 --> 00:05:19.900
It embedded the css because it thought that will
be faster for this particular example.

