WEBVTT

1
00:00:00.800 --> 00:00:04.613
Well, it's time to start
working with our project.

2
00:00:04.613 --> 00:00:08.156
To actually see in action
the performance problems and

3
00:00:08.156 --> 00:00:12.130
understanding why we need
to solve them and how.

4
00:00:12.130 --> 00:00:16.628
Just a summary,
we are doing this for the user and

5
00:00:16.628 --> 00:00:21.930
that's, because it will
increase conversion.

6
00:00:21.930 --> 00:00:24.990
And that will increase
business opportunities.

7
00:00:24.990 --> 00:00:26.967
That's why we are doing performance, okay?

8
00:00:26.967 --> 00:00:28.220
Just remember that.

9
00:00:28.220 --> 00:00:31.100
So, this is what you get from the repo.

10
00:00:32.160 --> 00:00:35.475
You have the material section,
you have the slides in PDF and

11
00:00:35.475 --> 00:00:38.212
the e-book that I promised
a copy of the e-book.

12
00:00:38.212 --> 00:00:43.270
And then we have a very basic Node.js,
we express js server.

13
00:00:43.270 --> 00:00:46.180
So, the only thing you need
is to install NPM install.

14
00:00:46.180 --> 00:00:49.640
You run NPM install over the folder and
it will work.

15
00:00:49.640 --> 00:00:52.500
And then you can start
the server with NPM start.

16
00:00:52.500 --> 00:00:53.900
Nothing really fancy.

17
00:00:53.900 --> 00:00:58.684
It opens a server on local host 3030.

18
00:00:58.684 --> 00:01:00.338
You can change the port.

19
00:01:00.338 --> 00:01:02.718
And you will see something like this,
frontend museum.

20
00:01:02.718 --> 00:01:04.555
It's a frontend museum, okay?

21
00:01:04.555 --> 00:01:11.070
So, it's a very basic HTML website,
but if you run it, it feels slow.

22
00:01:11.070 --> 00:01:15.413
And you can see it's
taking its time to load.

23
00:01:15.413 --> 00:01:20.522
And of course,
forcing in this code a couple of problems.

24
00:01:20.522 --> 00:01:25.270
And if we try to grade
a Lighthouse report on it.

25
00:01:26.390 --> 00:01:31.780
Now maybe, it's time to
understand the mode of Lighhouse.

26
00:01:31.780 --> 00:01:35.924
If you have ever been playing with
Lighthouse in the past five years or so.

27
00:01:35.924 --> 00:01:38.750
Far, you haven't seen that
because that's kinda of new.

28
00:01:38.750 --> 00:01:44.470
Navigation is actually the default Option
that we used to have in Lighthouse.

29
00:01:44.470 --> 00:01:46.904
It's actually going to reload the page and

30
00:01:46.904 --> 00:01:51.990
measure the performance of the whole
navigation process, the load process.

31
00:01:51.990 --> 00:01:56.999
Timespan, when you do timespan,
it will make analysis

32
00:01:56.999 --> 00:02:02.210
over a period of time when you
interact with the content.

33
00:02:02.210 --> 00:02:06.559
For example, I can start a timespan,
and then I should work with the app,

34
00:02:06.559 --> 00:02:10.720
interact with the app, select,
click, whatever your app is doing.

35
00:02:10.720 --> 00:02:16.103
And then end the timespan, and now it
will give you some insights on ideas,

36
00:02:16.103 --> 00:02:19.275
on performance issues that you might have.

37
00:02:19.275 --> 00:02:22.730
Over that interaction that you save, okay?

38
00:02:22.730 --> 00:02:24.160
So, that's the one.

39
00:02:24.160 --> 00:02:27.970
If you wanna create another report,
you have the plus sign there.

40
00:02:27.970 --> 00:02:29.380
So, I create plus sign.

41
00:02:29.380 --> 00:02:33.830
And a snapshot is going to take
the page as it is right now.

42
00:02:33.830 --> 00:02:37.230
So, it's not going to refresh the page,
okay?

43
00:02:37.230 --> 00:02:38.598
And that's useful for

44
00:02:38.598 --> 00:02:43.062
single page applications where you are in
a deep link and you wanna test how

45
00:02:43.062 --> 00:02:47.500
it looks like the performance of
that particular moment of the app.

46
00:02:47.500 --> 00:02:52.007
So, you go to that particular moment
of the app, to that state, and

47
00:02:52.007 --> 00:02:55.250
then you create a report on a snapshot.

48
00:02:55.250 --> 00:02:57.370
Most of the time we start with navigation.

49
00:02:57.370 --> 00:02:59.990
That's what we want, and
it's going to restart.

50
00:02:59.990 --> 00:03:01.380
You see the reload.

51
00:03:01.380 --> 00:03:04.962
Operation, and the slower your website,

52
00:03:04.962 --> 00:03:08.550
the slower you will get
the report as well.

53
00:03:09.750 --> 00:03:15.146
And it will give me the score, and also
a list of problems, that it has found.

54
00:03:15.146 --> 00:03:18.820
So I'm getting 60, it can be worse, okay?

55
00:03:18.820 --> 00:03:23.740
I've seen website with two,
the score of two of 100, okay?

56
00:03:23.740 --> 00:03:25.390
Two of 100.

57
00:03:25.390 --> 00:03:27.870
So, 60 is kind of here.

58
00:03:27.870 --> 00:03:30.469
But, you can see it's a very simple HTML,
and

59
00:03:30.469 --> 00:03:33.320
we are still having performance issues.

60
00:03:33.320 --> 00:03:34.910
So, we see a lot of white.

61
00:03:34.910 --> 00:03:38.160
White, white, white, white,
white, until we see something.

62
00:03:38.160 --> 00:03:41.771
So, we will see how to solve the problem,
okay?

63
00:03:41.771 --> 00:03:46.410
So, the first contentful
paint is almost four seconds.

64
00:03:46.410 --> 00:03:48.953
But I guess,
we can try to see that in action, but

65
00:03:48.953 --> 00:03:50.700
it should be that image, right?

66
00:03:50.700 --> 00:03:55.760
It seems like the largest
part of the initial page.

67
00:03:55.760 --> 00:03:58.365
So, it has performance issues.

68
00:03:58.365 --> 00:04:04.066
And if we go to the Network tab,
on Chrome Dev Tools and refresh.

69
00:04:04.066 --> 00:04:08.371
We can see the Waterfall chart here, okay?

70
00:04:08.371 --> 00:04:10.431
So, that's the Waterfall chart.

71
00:04:10.431 --> 00:04:15.356
And we can see that's the HTML
always the first request is

72
00:04:15.356 --> 00:04:17.928
the HTML it's the document.

73
00:04:17.928 --> 00:04:20.825
And while there are some
exceptions on that.

74
00:04:20.825 --> 00:04:27.851
And then we start downloading more
assets we can try to do this like this.

75
00:04:27.851 --> 00:04:33.169
So, we have a JavaScript,
a CSS file, over the timeline..

