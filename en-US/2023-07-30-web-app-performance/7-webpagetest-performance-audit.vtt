WEBVTT

1
00:00:00.000 --> 00:00:02.162
What are the tools we use?

2
00:00:02.162 --> 00:00:04.081
I'm talking about free tools.

3
00:00:04.081 --> 00:00:08.234
WebPageTest, WebPageTest is a website,

4
00:00:08.234 --> 00:00:13.190
it's the bible of performance engineers.

5
00:00:13.190 --> 00:00:18.900
Now, it's owned by Catchpoint,
but it's still free, the tool.

6
00:00:18.900 --> 00:00:20.240
It's open source, by the way.

7
00:00:22.010 --> 00:00:26.740
In WebPageTest,
you can enter a website URL, firt.dev,

8
00:00:26.740 --> 00:00:32.699
pick a simple configuration, or
you can select a lot of advanced parts, or

9
00:00:32.699 --> 00:00:39.242
you can, for example, select to run a
Lighthouse audit or include a repeat view.

10
00:00:39.242 --> 00:00:43.755
So it will actually make the analysis,
then,

11
00:00:45.586 --> 00:00:50.719
Refresh and
make another analysis with a cache inside.

12
00:00:50.719 --> 00:00:55.891
By the way, it's changing the color,
right, the background color.

13
00:00:55.891 --> 00:00:59.737
We can start the site performance test,
that's what I want.

14
00:00:59.737 --> 00:01:02.031
Only see Core Web Vitals.

15
00:01:02.031 --> 00:01:08.087
Visual comparison will let you have two
versions of your website in case you have,

16
00:01:08.087 --> 00:01:11.530
I don't know, staging and development.

17
00:01:11.530 --> 00:01:15.555
You can put two URLs and
see the comparison.

18
00:01:15.555 --> 00:01:18.522
But let's start with just default,
site performance.

19
00:01:18.522 --> 00:01:22.580
And here you can say, yeah,
I want mobile, I want desktop.

20
00:01:22.580 --> 00:01:25.993
And this is going to use
real devices on the.

21
00:01:25.993 --> 00:01:29.806
And because it's a real device,
it's a limited resource,

22
00:01:29.806 --> 00:01:33.934
sometimes you need to wait, okay,
for that resource to be free.

23
00:01:33.934 --> 00:01:37.859
It will take some time, and
then it will give me the answer.

24
00:01:39.070 --> 00:01:45.807
This is one of the most complete tools for
free that we have for web performance.

25
00:01:45.807 --> 00:01:48.189
So it's a masked tool.

26
00:01:48.189 --> 00:01:52.886
So we have a summary,
we have the performance metrics.

27
00:01:52.886 --> 00:01:56.924
By the way, this is not a real Chrome
user metric ,this is right now.

28
00:01:56.924 --> 00:02:00.772
So right now with one device,
in one particular part of the world,

29
00:02:00.772 --> 00:02:02.650
this is what we got.

30
00:02:02.650 --> 00:02:06.869
The other one that we saw
is the 75% of our user.

31
00:02:06.869 --> 00:02:12.069
So for some reason right now,
I'm over 2.5 on Largest Contentful Paint.

32
00:02:12.069 --> 00:02:18.676
It can be the server, the CDN,
something is taking more time.

33
00:02:18.676 --> 00:02:24.493
And here, we can see the visual page
loading process, if you click Explore.

34
00:02:24.493 --> 00:02:29.315
Remember I mentioned that this
is how you can fill the paint.

35
00:02:29.315 --> 00:02:34.100
So this is the filmstrip view, okay?

36
00:02:34.100 --> 00:02:39.436
The filmstrip view,
I can change the settings, and

37
00:02:39.436 --> 00:02:45.507
I can say I wanna see one
screen every 100 milliseconds.

38
00:02:45.507 --> 00:02:48.670
So now this is what you see, okay?

39
00:02:48.670 --> 00:02:52.923
Can you see white, white, white, white,
white, white, white, white, white, and

40
00:02:52.923 --> 00:02:53.795
then something?

41
00:02:53.795 --> 00:02:57.818
So remember I said this is
how you can fill the paint or

42
00:02:57.818 --> 00:03:02.585
you can show your managers that
this is a flow over a timeline.

43
00:03:02.585 --> 00:03:06.780
And you can also view a video.

44
00:03:08.470 --> 00:03:12.196
And if you want a slow motion, the video,
but I don't think you need that, okay?

45
00:03:12.196 --> 00:03:15.180
But with the video,
you can fill the paint.

46
00:03:15.180 --> 00:03:22.760
Yeah, my website is not so slow, but
you can still fill the paint, the whites.

47
00:03:22.760 --> 00:03:29.547
So that's what you show to your managers
to show you that 12 seconds is too much.

48
00:03:29.547 --> 00:03:36.530
They can fill the paint in the video
with the timer at the bottom, okay?

49
00:03:36.530 --> 00:03:37.204
Make sense?

50
00:03:37.204 --> 00:03:38.950
Let's go back.

51
00:03:38.950 --> 00:03:41.126
That's the video of the loading process.

52
00:03:41.126 --> 00:03:46.012
One important part that we have here,
this is pretty cool,

53
00:03:46.012 --> 00:03:49.247
can you see that red line we have there?

54
00:03:49.247 --> 00:03:51.990
There is a red line here.

55
00:03:51.990 --> 00:03:57.289
That red line continues here.

56
00:03:57.289 --> 00:04:02.453
So for example,
let's say I wanna know what happened

57
00:04:02.453 --> 00:04:07.401
in the timeline when we see something,
like here.

58
00:04:07.401 --> 00:04:11.713
It seems like here,
there was something that happened that

59
00:04:11.713 --> 00:04:16.035
went from white to almost seeing
the whole content at once.

60
00:04:16.035 --> 00:04:19.768
So what I'm going to do is I'm
going to move the scroll, so

61
00:04:19.768 --> 00:04:23.600
I'm going to match that
red line with this part.

62
00:04:23.600 --> 00:04:27.630
So I will do this there, okay?

63
00:04:27.630 --> 00:04:33.651
Now, that red line I mentioned,
it continues here.

64
00:04:33.651 --> 00:04:39.504
So now I can scroll down and
try to understand what happened

65
00:04:39.504 --> 00:04:45.602
in the waterfall chart that my
content appear at that point.

66
00:04:45.602 --> 00:04:52.435
So at this point, I can guess only,
that all these CSS files were downloading.

67
00:04:52.435 --> 00:04:56.133
You can see a font, font from Google APIs.

68
00:04:56.133 --> 00:04:59.668
I think that that's the only
thing that I can get from here.

69
00:04:59.668 --> 00:05:06.122
So remember I mentioned that CSS
should be an appetizer, remember that?

70
00:05:06.122 --> 00:05:10.717
Short and, well, that's because
the browser will not render a big cell

71
00:05:10.717 --> 00:05:13.968
before having all the CSS
file downloaded in part.

72
00:05:13.968 --> 00:05:15.631
And we can see it in action here.

73
00:05:15.631 --> 00:05:21.136
We didn't see anything on the screen
before the CSS files were downloaded.

74
00:05:21.136 --> 00:05:22.611
Does it makes sense?

75
00:05:22.611 --> 00:05:30.085
So getting a master of this tool will
convert you into a master web performer.

76
00:05:30.085 --> 00:05:32.915
By the way, here,
can you see there are some green lines?

77
00:05:32.915 --> 00:05:36.340
Those are largest contentful paint or
first paint.

78
00:05:36.340 --> 00:05:39.987
Those are the other metrics
that we were mentioning.

79
00:05:39.987 --> 00:05:40.990
And what is this?

80
00:05:42.706 --> 00:05:46.382
Can you recognize this chart?

81
00:05:46.382 --> 00:05:48.510
We see here, this graph.

82
00:05:48.510 --> 00:05:53.049
This is the graph that makes speed index.

83
00:05:53.049 --> 00:05:57.589
So the speed index was
the area above the curve.

84
00:05:57.589 --> 00:06:04.276
Then in my case it was 0.8, I think,
which is good, because it's less than 2.5.

85
00:06:04.276 --> 00:06:07.696
Maybe you're saying, well,
but that doesn't feel good.

86
00:06:07.696 --> 00:06:12.572
Well, if your final value is
still within two seconds,

87
00:06:12.572 --> 00:06:17.865
three seconds, it doesn't matter,
because, remember,

88
00:06:17.865 --> 00:06:23.083
we are measuring how much blank
the user has seen over time.

89
00:06:23.083 --> 00:06:25.362
You have another question, I think, no?

90
00:06:26.604 --> 00:06:29.289
Okay, it was just me.

91
00:06:29.289 --> 00:06:32.390
And, well, more information will
appear here for WebPageTest.

92
00:06:32.390 --> 00:06:36.301
So it's actually a great tool, and
we will use this tool a lot for

93
00:06:36.301 --> 00:06:38.050
web performance analysis.

94
00:06:39.110 --> 00:06:43.115
The disadvantage of this
tool is in the cloud,

95
00:06:43.115 --> 00:06:47.437
so your content should be public and
accessible.

96
00:06:47.437 --> 00:06:52.775
It doesn't work local, with local content,
unless you download WebPageTest and

97
00:06:52.775 --> 00:06:57.920
run it locally, that you can,
because it's an open source tool.

98
00:06:57.920 --> 00:07:01.394
So you can create your own
local infrastructure for

99
00:07:01.394 --> 00:07:04.317
running your own WebPageTest solutions.

100
00:07:04.317 --> 00:07:09.187
I'm talking about companies that they
don't wanna public their content or they

101
00:07:09.187 --> 00:07:14.217
don't wanna use a service that is from
another company, in this case Catchpoint.

102
00:07:14.217 --> 00:07:16.697
So, well, that's okay,
you can download and

103
00:07:16.697 --> 00:07:19.369
create your own instance
of WebPageTest locally.

104
00:07:20.976 --> 00:07:22.635
Does it make sense?

105
00:07:22.635 --> 00:07:26.730
So as advanced web performance engineers,

106
00:07:26.730 --> 00:07:32.640
we are not going to just rely
on the score from Lighthouse.

107
00:07:32.640 --> 00:07:37.124
We are going to use tools such as
WebPageTest to analyze the whole

108
00:07:37.124 --> 00:07:40.790
situation and
try to find moments for improvement.

