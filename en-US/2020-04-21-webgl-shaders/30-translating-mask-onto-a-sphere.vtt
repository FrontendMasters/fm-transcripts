WEBVTT

1
00:00:00.600 --> 00:00:03.292
One of the other things
that we've been doing so

2
00:00:03.292 --> 00:00:05.526
far it's just working with this cube.

3
00:00:05.526 --> 00:00:10.736
But all of her work, all of Kusama's work,
is spheres, or not all of it,

4
00:00:10.736 --> 00:00:15.121
but much of it is, and so
maybe we'll switch this to a sphere.

5
00:00:20.610 --> 00:00:24.324
So all I'm doing is just replacing
the box geometry with a sphere geometry.

6
00:00:29.107 --> 00:00:31.584
And you'll see that everything
still kind of works.

7
00:00:33.898 --> 00:00:38.749
One of the things is that because we
have a sphere, when we unwrap a sphere,

8
00:00:38.749 --> 00:00:43.369
the horizontal sort of component is
gonna be pretty much twice as long as

9
00:00:43.369 --> 00:00:45.068
the vertical component.

10
00:00:45.068 --> 00:00:49.889
That's why we see these,
when we see these equirectangular images,

11
00:00:49.889 --> 00:00:52.350
they're exactly two to one ratio.

12
00:00:52.350 --> 00:00:57.176
And it's the same thing here, we have this
two to one ratio when we're trying to

13
00:00:57.176 --> 00:01:01.229
draw circles, and that's what's
creating them to be squashed.

14
00:01:01.229 --> 00:01:06.146
And so what we can do is we can say pos.x

15
00:01:06.146 --> 00:01:10.308
maybe multiply that by 0.5.

16
00:01:15.092 --> 00:01:18.459
That's an error.

17
00:01:18.459 --> 00:01:20.562
There's a space.

18
00:01:20.562 --> 00:01:26.160
So multiply that by 0.5 or, actually it
has to be done before we do the modular.

19
00:01:27.640 --> 00:01:33.373
So, let's create another UV variable.

20
00:01:33.373 --> 00:01:37.966
So let's call it, I don't know what to
call it, I'm just going to call it q.

21
00:01:37.966 --> 00:01:40.676
It's not a very good name, but whatever.

22
00:01:40.676 --> 00:01:44.510
And then I'm going to pass q in.

23
00:01:44.510 --> 00:01:49.864
And then I'm going to try doing q.x.

24
00:01:49.864 --> 00:01:56.087
It's not actually 0.5, I'd multiply
x by 2, because the ratio is 2 to 1.

25
00:01:56.087 --> 00:02:03.059
And so what I've just done is I've
declared another vec2, which = vUv.

26
00:02:03.059 --> 00:02:05.666
And then I stretch the x coordinate by 2,
and

27
00:02:05.666 --> 00:02:08.420
then we've done all
the rest of the same stuff.

28
00:02:09.840 --> 00:02:12.627
And that's just gonna make it line
up a little bit better with how this

29
00:02:12.627 --> 00:02:13.936
equirectangular stuff works.

30
00:02:16.030 --> 00:02:18.477
And it'll make the circles look
a little bit more circular.

