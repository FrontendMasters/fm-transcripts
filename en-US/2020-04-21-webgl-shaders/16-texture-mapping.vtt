WEBVTT

1
00:00:00.620 --> 00:00:04.710
So far, we've just been texture mapping
spheres with the Earth texture.

2
00:00:04.710 --> 00:00:07.430
And there's a couple things to note.

3
00:00:07.430 --> 00:00:14.268
One of them is, the way that we described
those textures is called equirectangular.

4
00:00:14.268 --> 00:00:19.650
So if you wanted to find more
images that have that kind of

5
00:00:19.650 --> 00:00:24.860
mapping that you can map onto a sphere,
you can search equirectangular.

6
00:00:24.860 --> 00:00:27.220
You can also use the term
panoramic images,

7
00:00:27.220 --> 00:00:29.970
sometimes you'll find
this kind of mapping.

8
00:00:29.970 --> 00:00:33.678
Sometimes it's also called HDR maps.

9
00:00:33.678 --> 00:00:39.594
And that's because when we work with HDR
maps, for example, for a game engine or

10
00:00:39.594 --> 00:00:45.000
in a rendering engine, it's quite
often this sorta spherical texture.

11
00:00:45.000 --> 00:00:47.580
So there's lots of different
terms that you could search for

12
00:00:47.580 --> 00:00:53.530
these, another term would be
environment map textures.

13
00:00:53.530 --> 00:00:56.480
And you can find these different
textures like this, and

14
00:00:56.480 --> 00:00:58.500
then you can drag those in and apply them.

15
00:00:58.500 --> 00:01:00.520
Just be aware of licensing, obviously.

16
00:01:01.520 --> 00:01:03.930
And then the other thing
that came up is just,

17
00:01:03.930 --> 00:01:06.810
what about geometries that
are not just a sphere?

18
00:01:06.810 --> 00:01:11.180
How do we map textures onto those,
and how is it a little bit different?

19
00:01:11.180 --> 00:01:13.770
So, here's a demo that I
just quickly whipped up.

20
00:01:13.770 --> 00:01:18.050
So if we go into the repository and

21
00:01:18.050 --> 00:01:24.310
we go into the src/demos,
you'll see a few new textures.

22
00:01:24.310 --> 00:01:30.570
You'll see brick-diffuse, and
that's the texture of this brick.

23
00:01:30.570 --> 00:01:32.900
And so when we're actually
looking at this output here,

24
00:01:32.900 --> 00:01:34.770
which I'll walk through a little bit.

25
00:01:34.770 --> 00:01:39.659
When we're looking at this,
it's a seamless texture

26
00:01:39.659 --> 00:01:44.772
that's been repeated across
the surface of this torus.

27
00:01:44.772 --> 00:01:46.350
And so that's the diffuse,

28
00:01:46.350 --> 00:01:50.050
diffuse is just another way of
saying the the color of the texture.

29
00:01:51.240 --> 00:01:53.570
It's kind of the the term that we use for
for color.

30
00:01:54.780 --> 00:01:56.460
There's another type called normal.

31
00:01:56.460 --> 00:02:00.490
So this is a normal map, which I'll show
a little bit about how this works, and

32
00:02:00.490 --> 00:02:02.950
how it changes the look of a material.

33
00:02:04.000 --> 00:02:08.170
But it's a texture that goes
along quite often with diffuse.

34
00:02:08.170 --> 00:02:13.860
And it gives us the information
of the surface geometry, almost.

35
00:02:13.860 --> 00:02:17.030
So this gives us some information
about how the surface geometry

36
00:02:17.030 --> 00:02:21.060
will react to light as the light
hits it and bounces off of it.

37
00:02:21.060 --> 00:02:23.990
And so that can be really useful for
adding a little bit more detail and

38
00:02:23.990 --> 00:02:26.220
a little bit more reaction to light.

39
00:02:26.220 --> 00:02:29.830
And so when you actually go looking for
textures for 3D things, generally,

40
00:02:29.830 --> 00:02:31.910
you'll look up 3D textures.

41
00:02:31.910 --> 00:02:35.040
You'll look up maybe it's called
physically based texturing.

42
00:02:35.040 --> 00:02:37.900
So you can search physically
based texturing or PBR,

43
00:02:37.900 --> 00:02:40.570
physically based rendering, PBR textures.

44
00:02:40.570 --> 00:02:44.309
And you can find packs of textures
that include diffuse, normal.

45
00:02:44.309 --> 00:02:48.989
Sometimes it includes other textures like
metalness, which is just like we've been

46
00:02:48.989 --> 00:02:51.990
defining metalness as 0 to 1 or
roughness as 0 to 1.

47
00:02:51.990 --> 00:02:54.410
Sometimes for certain materials,

48
00:02:54.410 --> 00:02:58.740
you might have a material that's
partly metal and partly rough.

49
00:02:58.740 --> 00:03:03.512
And so for example, if you have
chipped paint, and it's in a texture,

50
00:03:06.048 --> 00:03:08.620
Or even chipped metal
would be a better example.

51
00:03:10.470 --> 00:03:13.940
Where part of the surface
is really metallic, and

52
00:03:13.940 --> 00:03:16.520
then part of it is really rough.

53
00:03:16.520 --> 00:03:19.370
And so this is where we would
use a sort of metalness map.

54
00:03:19.370 --> 00:03:23.330
So metalness texture map,
which would define

55
00:03:23.330 --> 00:03:27.990
which areas of the texture are metallic,
and which areas are not metallic.

56
00:03:29.090 --> 00:03:33.803
But it's hard to sometimes find them
just on Google Images, you might have to

57
00:03:33.803 --> 00:03:38.318
actually search for things like rock
texture pbr or something like that.

58
00:03:38.318 --> 00:03:41.717
And then here you might find
some stone and rock textures.

59
00:03:44.282 --> 00:03:47.232
So yeah, this freepbr.com
is a site I've used before.

60
00:03:47.232 --> 00:03:54.060
It has some nice textures for
different types of surfaces.

61
00:03:54.060 --> 00:03:57.681
So actually getting into the demo,
the demo is just here, it's at the bottom,

62
00:03:57.681 --> 00:03:58.828
torus-material.js.

63
00:03:58.828 --> 00:04:05.505
But I'll just open it up locally, And
just walk through a few of the changes.

64
00:04:05.505 --> 00:04:10.290
So the first obvious change is that
it's using a torus geometry instead of

65
00:04:10.290 --> 00:04:12.000
a sphere geometry.

66
00:04:12.000 --> 00:04:16.980
And so the torus geometry, you can specify
the outer radius size, and then the inner

67
00:04:16.980 --> 00:04:21.250
radius, which is gonna be the thickness
of this donut that we're making.

68
00:04:21.250 --> 00:04:25.921
And then we specify the segments,
the divisions, which is gonna make it less

69
00:04:25.921 --> 00:04:30.450
detailed or more detailed,
like high poly versus low poly.

70
00:04:30.450 --> 00:04:33.910
And then we actually get into
loading some textures, and

71
00:04:33.910 --> 00:04:34.880
here is a little bit different.

72
00:04:34.880 --> 00:04:38.340
We load a texture just like
we did before with the Earth.

73
00:04:38.340 --> 00:04:43.790
We do load with the URL, which is, in this
case, brick-diffuse which is the color.

74
00:04:43.790 --> 00:04:48.300
But here, we're gonna say we want
this texture to wrap seamlessly.

75
00:04:48.300 --> 00:04:53.690
So this line that we have here is saying,
make it so that along the horizontal and

76
00:04:53.690 --> 00:04:57.880
along the vertical, make it so
that this texture wraps seamlessly.

77
00:04:57.880 --> 00:05:00.034
The default, if we didn't have this,

78
00:05:00.034 --> 00:05:03.838
we would see it would start to get
sort of stretched in this weird way.

79
00:05:03.838 --> 00:05:07.724
And that's because the texture's
just getting stretched,

80
00:05:07.724 --> 00:05:09.899
and it starts to look pretty ugly.

81
00:05:09.899 --> 00:05:15.160
And so you need repeat wrapping for it
to seamlessly repeat across the surface.

82
00:05:15.160 --> 00:05:18.756
And then this last thing we're doing here
is, we're changing the repeat value.

83
00:05:18.756 --> 00:05:24.342
So without this, it's going to
just take this texture and try and

84
00:05:24.342 --> 00:05:29.738
wrap it around the mesh just as
if we've taken wrapping paper.

85
00:05:29.738 --> 00:05:34.000
I don't know, you're wrapping a gift, and
you're wrapping it around this object.

86
00:05:34.000 --> 00:05:35.070
But what we really want is,

87
00:05:35.070 --> 00:05:38.710
we want to get rid of this stretching
that's happening in the brick.

88
00:05:38.710 --> 00:05:42.760
And so
we're gonna say something like map.repeat,

89
00:05:42.760 --> 00:05:45.830
which is a vector two, so we can say set.

90
00:05:45.830 --> 00:05:50.930
We can make it repeat twice
along the horizontal plane, or

91
00:05:50.930 --> 00:05:57.810
twice as much as it is along the vertical
plane, or even three times or four times.

92
00:05:57.810 --> 00:06:00.754
And there's no exact number we can really
choose here that would work across

93
00:06:00.754 --> 00:06:01.496
the entire torus.

94
00:06:01.496 --> 00:06:06.074
Because you'll see the bricks that
are close to the center here are gonna be

95
00:06:06.074 --> 00:06:07.247
a little smaller.

96
00:06:07.247 --> 00:06:10.290
And the bricks that are close to the edge
here are gonna be a little bigger.

97
00:06:10.290 --> 00:06:13.750
So if you really wanted this
torus to be perfectly mapped,

98
00:06:13.750 --> 00:06:16.310
you might have to open it up
in Cinema 4D or Blender, and

99
00:06:16.310 --> 00:06:19.570
actually work with these coordinates and
things like that.

100
00:06:19.570 --> 00:06:22.930
But for now,
it's okay just doing something like this.

101
00:06:22.930 --> 00:06:26.900
And then because it's a vector two,
you can say multiplyScalar.

102
00:06:26.900 --> 00:06:30.790
And you can chain these methods together,
because it always returns the vector two.

103
00:06:30.790 --> 00:06:35.350
And so now I could say multiplyScalar(4),
and that's just gonna make it repeat

104
00:06:35.350 --> 00:06:38.440
more or less depending on
what number I put in here.

105
00:06:38.440 --> 00:06:43.109
So this is just scaling the repeat vector,
which is gonna repeat

106
00:06:43.109 --> 00:06:49.100
the texture in two dimensions,
in the x and y, and so that's this here.

107
00:06:49.100 --> 00:06:52.140
And then the next sorta
chunk is the normal map.

108
00:06:52.140 --> 00:06:55.490
So we load it in the same way
we apply repeat wrapping.

109
00:06:55.490 --> 00:07:00.360
And then we copy the vector two so that
the normal map matches the same repeat

110
00:07:00.360 --> 00:07:03.853
values, so
that it's just gonna line up perfectly.

111
00:07:03.853 --> 00:07:08.060
And then the only other thing we really
do is, in our MeshStandardMaterial,

112
00:07:08.060 --> 00:07:12.007
we can tweak the roughness and metalness,
and we pass in the normal map,

113
00:07:12.007 --> 00:07:14.020
we pass in the map.

114
00:07:14.020 --> 00:07:17.600
And so what you'll actually see, I'll
make this a bit bigger so we can see it.

115
00:07:17.600 --> 00:07:21.298
But when we look at the light
as it hits these rocks,

116
00:07:21.298 --> 00:07:26.974
we can really start to see the light sort
of bouncing off the edge of the rocks and

117
00:07:26.974 --> 00:07:30.931
the edge of the stone and
brick and the sort of texture.

118
00:07:30.931 --> 00:07:34.350
And so if I was to take the normal
map out of this material, and

119
00:07:34.350 --> 00:07:38.036
now we look at it from a glancing angle,
we look at it from an edge,

120
00:07:38.036 --> 00:07:40.204
it's just a perfectly smooth torus.

121
00:07:40.204 --> 00:07:44.248
And that's not what we want, we want
to actually start to see the detail of

122
00:07:44.248 --> 00:07:47.132
the brick, so
that's what the normal map gives us.

123
00:07:47.132 --> 00:07:51.027
One other thing worth mentioning
with this kind of approach.

124
00:07:51.027 --> 00:07:54.027
Depending on where you get your
normal maps, might be set up for

125
00:07:54.027 --> 00:07:57.261
a different engine, it might be set up for
Unity or something else.

126
00:07:57.261 --> 00:08:00.790
And they might be using a slightly
different coordinate system.

127
00:08:00.790 --> 00:08:05.430
And it might end up looking like this,
where we look at our texture,

128
00:08:05.430 --> 00:08:09.400
and we're like, well,
we can see the detail of the brick, but

129
00:08:09.400 --> 00:08:12.600
it looks weird, and
it almost looks like it's inverted.

130
00:08:13.915 --> 00:08:17.960
Cuz if we look at this, we would imagine
when the light hits the brick from there,

131
00:08:17.960 --> 00:08:21.740
we would imagine this side
of the brick to be lit up.

132
00:08:21.740 --> 00:08:24.115
But in reality, it's like the other
side of the brick has lit up.

133
00:08:24.115 --> 00:08:26.346
So it's almost there,
it almost looks okay, but

134
00:08:26.346 --> 00:08:30.020
everything looks a little bit backwards or
a little bit inverted.

135
00:08:30.020 --> 00:08:35.250
And that's because maybe some engines
will use an inverted y channel for

136
00:08:35.250 --> 00:08:36.440
the normal map.

137
00:08:36.440 --> 00:08:40.450
And so to change that you just pass
in this thing called normalScale,

138
00:08:40.450 --> 00:08:41.960
which is a vector two.

139
00:08:41.960 --> 00:08:43.490
And you either use a positive or

140
00:08:43.490 --> 00:08:47.900
negative value as the y,
depending on which one looks more correct.

141
00:08:47.900 --> 00:08:53.890
And you can also use the same value to
reduce the overall strength of this map.

142
00:08:53.890 --> 00:08:58.664
So by multiplying it by a scalar value,
which is what we're doing here,

143
00:08:58.664 --> 00:09:02.188
normal strength,
we're making it really intense,

144
00:09:02.188 --> 00:09:05.498
like trying to make these
brick really stand out.

145
00:09:05.498 --> 00:09:09.940
Or making it really reduced, so
really reducing that effect, so

146
00:09:09.940 --> 00:09:12.542
that it's a much more subtle change.

147
00:09:14.832 --> 00:09:17.570
So yeah,
that's just a bit of a recap of texturing.

148
00:09:17.570 --> 00:09:21.142
But also, how do we texture
things that are not just spheres?

149
00:09:21.142 --> 00:09:26.076
And if we had an object that's a 3D model,
like a physical bust or

150
00:09:26.076 --> 00:09:31.103
some sort of maybe a person's character,
or a character design or

151
00:09:31.103 --> 00:09:35.180
something like that, or
an object like a coffee cup.

152
00:09:35.180 --> 00:09:40.162
Then you'd actually have to texture map
it in a 3D software like Blender or

153
00:09:40.162 --> 00:09:45.634
Cinema 4D, or ask your your 3D artists do
the texturing and to do the UV mapping.

154
00:09:45.634 --> 00:09:49.128
So that when you load it into three.js,
it can just be applied with a texture and

155
00:09:49.128 --> 00:09:50.233
it should just all work.

