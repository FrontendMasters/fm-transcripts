WEBVTT

1
00:00:00.000 --> 00:00:02.691
I'm gonna just sort of switch gears here.

2
00:00:02.691 --> 00:00:04.981
I'm gonna open up this WebGL and
GLSL book.

3
00:00:04.981 --> 00:00:09.946
I'm gonna walk through some of
the concepts around coordinate systems and

4
00:00:09.946 --> 00:00:14.845
around meshes and materials and
just sort of review some of those things.

5
00:00:14.845 --> 00:00:17.614
It will be a bit of review if
you've already done some WebGL, but

6
00:00:17.614 --> 00:00:19.681
it's gonna be nice to
just go through it again.

7
00:00:19.681 --> 00:00:22.057
And then we'll actually get
into working with the code and

8
00:00:22.057 --> 00:00:24.644
starting to edit things and
starting to develop it ourselves.

9
00:00:24.644 --> 00:00:28.777
So if you go to the repo and
you go to the interactive book,

10
00:00:28.777 --> 00:00:30.773
the WebGL and GLSL primer.

11
00:00:30.773 --> 00:00:35.739
And you can follow along with me or you
can just watch the screen, it's up to you.

12
00:00:35.739 --> 00:00:40.162
If you follow along, you'll see that
these little demos are interactive, and

13
00:00:40.162 --> 00:00:41.889
so you can actually edit them.

14
00:00:41.889 --> 00:00:47.405
So yeah, the first thing to point
out really is coordinate systems.

15
00:00:47.405 --> 00:00:51.539
So coordinate systems is sorta
the basis for us working with 3D.

16
00:00:51.539 --> 00:00:53.974
You're probably familiar
with 2D coordinates.

17
00:00:53.974 --> 00:00:56.134
Top left is 0, 0,
bottom right is the width and

18
00:00:56.134 --> 00:00:58.160
height of the grid that
we're working with.

19
00:00:58.160 --> 00:01:01.173
And here we just have different
pixel values going in.

20
00:01:01.173 --> 00:01:05.991
And so the coordinate here would be 0
on the x, which is the horizontal, and

21
00:01:05.991 --> 00:01:09.995
2 on the y, which is the vertical,
pretty straightforward.

22
00:01:09.995 --> 00:01:14.042
Also, with this little demo,
you can click this to full screen it or

23
00:01:14.042 --> 00:01:18.321
you can click this reload button to
reset the settings back to default.

24
00:01:21.284 --> 00:01:26.149
So that's the most basic coordinate
system you're familiar with but in WebGL,

25
00:01:26.149 --> 00:01:28.150
and once we start to get into 3D,

26
00:01:28.150 --> 00:01:32.750
we actually want to start thinking in
terms of relative to the origin point.

27
00:01:32.750 --> 00:01:36.685
So in this example,
we've shifted the whole grid and

28
00:01:36.685 --> 00:01:40.455
we've given it the ability
to go negative as well.

29
00:01:40.455 --> 00:01:42.134
So now our coordinates
are going into the negatives.

30
00:01:42.134 --> 00:01:45.267
So the the left or bottom here, -x, -y,

31
00:01:45.267 --> 00:01:48.937
as opposed to just going to 0,
it can go below 0.

32
00:01:48.937 --> 00:01:52.126
And then we also have the center point.

33
00:01:52.126 --> 00:01:57.097
So if we type in 0, 0, that's gonna
be centered in the middle of the grid

34
00:01:57.097 --> 00:02:01.606
that we're working with in the middle
of this coordinate system.

35
00:02:01.606 --> 00:02:04.779
And this concept is really, really
crucial when we start to talk about 3D

36
00:02:04.779 --> 00:02:07.097
because everything is
relative to this coordinate.

37
00:02:07.097 --> 00:02:10.766
And so it could be positive in
either direction, by any amount.

38
00:02:10.766 --> 00:02:15.114
So this is just going up to 1,
but these coordinates could be

39
00:02:15.114 --> 00:02:19.306
going up to infinity in positive or
negative directions.

40
00:02:19.306 --> 00:02:23.315
So this is how we start to think
about 3D coordinates is in this

41
00:02:23.315 --> 00:02:27.493
Cartesian coordinate system
that's centered around 0, 0.

42
00:02:27.493 --> 00:02:29.886
And 3D coordinates is the same thing.

43
00:02:29.886 --> 00:02:32.453
The only thing is that we're
now revealing a third axis.

44
00:02:32.453 --> 00:02:33.678
And so if we go here,

45
00:02:33.678 --> 00:02:38.384
we can see the same 2D coordinate system,
which is centered around 0, 0.

46
00:02:38.384 --> 00:02:41.476
But if we shift our perspective,
if we shift the camera and

47
00:02:41.476 --> 00:02:45.767
we start to look at this coordinate system
from a different angle, we can see that

48
00:02:45.767 --> 00:02:49.705
all of a sudden we're revealing a Z axis,
which is the third coordinate.

49
00:02:49.705 --> 00:02:54.342
And if we don't have any perspective,
if we're just looking at it from 2D and

50
00:02:54.342 --> 00:02:56.872
we're trying to change this Z component,

51
00:02:56.872 --> 00:03:00.613
the third dimension here we're
not gonna see any difference.

52
00:03:00.613 --> 00:03:02.850
But as soon as we look at
it in this perspective and

53
00:03:02.850 --> 00:03:06.299
we change that it's gonna make a huge
difference as to where it's placed.

54
00:03:06.299 --> 00:03:10.635
And so this is pretty much how
a 3D coordinate system works.

55
00:03:12.717 --> 00:03:14.007
It might be pretty basic for some of you.

56
00:03:14.007 --> 00:03:17.447
But you'll see once we
start to work in encode,

57
00:03:17.447 --> 00:03:20.376
it can be sometimes hard to wrap around.

58
00:03:20.376 --> 00:03:23.180
How do I place an object in
the top left of the screen?

59
00:03:23.180 --> 00:03:25.644
Because there's no longer
a top left of the screen,

60
00:03:25.644 --> 00:03:28.501
because everything is relative
to the origin and relative to

61
00:03:28.501 --> 00:03:32.550
things like the camera placement and the
camera orientation, and things like that.

