WEBVTT

1
00:00:00.050 --> 00:00:05.431
So another question came up a little
bit unrelated to this particular scene,

2
00:00:05.431 --> 00:00:10.477
but another question came up is more to
do with the idea of using the GPU for

3
00:00:10.477 --> 00:00:14.730
computation, for
something that's not entirely visual.

4
00:00:14.730 --> 00:00:19.694
And it's just something nice to
mention here is this concept

5
00:00:19.694 --> 00:00:23.308
of GPGPU general purpose GPU programming.

6
00:00:23.308 --> 00:00:27.797
And if you search it in the context of
Three.js, you're gonna see a lot of demos

7
00:00:27.797 --> 00:00:32.424
that have to do with particles, and
flocking algorithms, and things like that.

8
00:00:32.424 --> 00:00:37.065
But the idea is that we're using
the shaders, and we're using the GPU,

9
00:00:37.065 --> 00:00:41.726
not just to do output, but we're
actually using the shaders to do math.

10
00:00:41.726 --> 00:00:46.646
So here would be an example where
the shaders are actually doing the math

11
00:00:46.646 --> 00:00:50.669
that computes the new position
of all these little birds.

12
00:00:50.669 --> 00:00:54.340
And then it's integrating
the position just like sort of like

13
00:00:54.340 --> 00:00:58.011
a physics system almost or
in this case a flocking algorithm,

14
00:00:58.011 --> 00:01:02.035
and then it's using the output of
those shaders to then say, okay,

15
00:01:02.035 --> 00:01:05.028
now I wanna place these
birds at those positions.

16
00:01:05.028 --> 00:01:09.298
And so that's just something to keep
in mind is that you can use the GPU for

17
00:01:09.298 --> 00:01:13.008
general purpose stuff, and
sometimes it's not even visual,

18
00:01:13.008 --> 00:01:16.718
sometimes it's just running some
maybe like a video decoder or

19
00:01:16.718 --> 00:01:20.364
running some sort of thing behind
the scenes of your website.

20
00:01:20.364 --> 00:01:24.552
Maybe it's something to do with like
signal processing or something like that.

21
00:01:24.552 --> 00:01:26.965
It could be something that's
entirely non visual, and

22
00:01:26.965 --> 00:01:29.906
you're just getting back a floating
point result from the shader.

23
00:01:29.906 --> 00:01:33.123
And in WebGL two,
which is a newer version of WebGL,

24
00:01:33.123 --> 00:01:37.804
which is slowly being rolled out across
libraries and browsers and things,

25
00:01:37.804 --> 00:01:40.818
it will have more support for
this kind of GPGPU.

