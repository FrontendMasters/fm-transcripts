WEBVTT

1
00:00:00.050 --> 00:00:03.790
So, we just installed canvas-sketch,
and we should just run this.

2
00:00:03.790 --> 00:00:06.170
If you had problems,
a couple of things to do.

3
00:00:06.170 --> 00:00:09.811
One would just simply be
to try installing it again,

4
00:00:09.811 --> 00:00:13.388
making sure that you're
installing it globally.

5
00:00:13.388 --> 00:00:17.300
And also making sure that you're
installing the command line interface.

6
00:00:17.300 --> 00:00:18.690
So, this little -cli.

7
00:00:18.690 --> 00:00:22.158
And then another thing that might
happen is you might need to,

8
00:00:22.158 --> 00:00:25.540
once it's installed, just quit and reopen
your terminal if you're having trouble.

9
00:00:26.600 --> 00:00:31.350
Or if you having EACCESS issues,
you can go to this Node and npm guide, and

10
00:00:31.350 --> 00:00:33.210
go into the troubleshooting here.

11
00:00:33.210 --> 00:00:36.183
Hopefully that will
cover all the problems.

12
00:00:36.183 --> 00:00:39.110
Worst case scenario, you can just
uninstall and reinstall Node, and

13
00:00:39.110 --> 00:00:40.060
it should all be good.

14
00:00:40.060 --> 00:00:40.840
Yeah, question?

15
00:00:40.840 --> 00:00:44.660
&gt;&gt; You said one other thing I wanted
to mention, some browser extensions,

16
00:00:44.660 --> 00:00:47.110
your browser settings
might prevent this too.

17
00:00:47.110 --> 00:00:50.580
I know I have trouble in Firefox
with my normal settings.

18
00:00:50.580 --> 00:00:56.170
So, I just opened up a Google Chrome
fresh installation and it works fine.

19
00:00:56.170 --> 00:00:56.680
&gt;&gt; Cool, okay.

20
00:00:56.680 --> 00:00:57.690
Good to know.

21
00:00:57.690 --> 00:01:01.612
Yeah, the tool itself, canva-sketch,
is a bit experimental,

22
00:01:01.612 --> 00:01:04.279
because I've been just building it myself.

23
00:01:04.279 --> 00:01:07.989
So, it's not going to be perfect,
there might be some bugs here and there.

24
00:01:07.989 --> 00:01:11.513
The nice thing is that once you get
familiar with how to use three.js,

25
00:01:11.513 --> 00:01:14.082
and once you get familiar
with how to use 3dstuff,

26
00:01:14.082 --> 00:01:16.492
you can actually work
without canva-sketch.

27
00:01:16.492 --> 00:01:20.948
Canvas-sketch is just there to
create this little structure for us,

28
00:01:20.948 --> 00:01:22.921
especially for today as we go.

29
00:01:22.921 --> 00:01:26.400
But it's not at all necessary to do
3D programming or anything like that.

30
00:01:26.400 --> 00:01:28.780
So, if you've got it running and

31
00:01:28.780 --> 00:01:33.130
you open up localhost:9966,
you should see this red wireframe sphere.

32
00:01:33.130 --> 00:01:35.830
And just to test,
before I get too far into things,

33
00:01:35.830 --> 00:01:39.070
we'll open this up in our code editor.

34
00:01:39.070 --> 00:01:40.850
I like to use Visual Studio Code.

35
00:01:42.710 --> 00:01:44.830
And typically I place my windows so

36
00:01:44.830 --> 00:01:48.760
that my code's on one side and
the visuals are on the other.

37
00:01:48.760 --> 00:01:52.000
And now what should happen
is when we change our code,

38
00:01:52.000 --> 00:01:54.330
it should automatically
reload the browser.

39
00:01:54.330 --> 00:01:58.250
And a simple way to just test this out,
it's just to scroll down,

40
00:01:58.250 --> 00:02:03.420
look at setClearColor, and change this
to a different color, so maybe blue.

41
00:02:04.530 --> 00:02:12.099
And when we reload the page,
making sure that the server is running.

42
00:02:12.099 --> 00:02:13.892
I just killed the server, so

43
00:02:13.892 --> 00:02:18.088
I'm gonna run it again by just
doing canvas-sketch sketch.js.

44
00:02:18.088 --> 00:02:21.084
You don't need those extra
flags once the file exists.

45
00:02:24.564 --> 00:02:28.474
And so, once the server is running,
and once you've reloaded the page,

46
00:02:28.474 --> 00:02:31.500
you should be able to change the code,
save the code, and

47
00:02:31.500 --> 00:02:35.030
it should just update
the visuals automatically.

48
00:02:35.030 --> 00:02:38.122
So, as long as that all works,
we should be good to go.

49
00:02:40.916 --> 00:02:43.369
And so, you can also go through and
start to try and

50
00:02:43.369 --> 00:02:46.070
wrap your head around some
of what's happening here.

51
00:02:46.070 --> 00:02:49.720
So, canvas-sketch gives
us these two concepts.

52
00:02:49.720 --> 00:02:52.360
One of them is settings and
one of them is a sketch function.

53
00:02:52.360 --> 00:02:57.190
And so, the settings allows us to set up
the way that the artwork, or the demo,

54
00:02:57.190 --> 00:02:58.310
or the project is gonna look.

55
00:02:58.310 --> 00:03:01.350
So, we can add in things
like dimensions here.

56
00:03:01.350 --> 00:03:06.510
And we can change it to a specific canvas
size, rather than doing full screen.

57
00:03:06.510 --> 00:03:11.220
So, right now I've just changed
it to 512 by 512 pixels.

58
00:03:11.220 --> 00:03:15.450
We can turn on and off the render
loop by setting animate to false.

59
00:03:15.450 --> 00:03:17.470
And now it's just a static artwork.

60
00:03:17.470 --> 00:03:21.240
This is really useful when you're on
the train and you don't have a plug in and

61
00:03:21.240 --> 00:03:22.748
you want to save some battery.

62
00:03:22.748 --> 00:03:25.433
You can just turn off your render loop and
keep iterating.

63
00:03:28.256 --> 00:03:33.137
You can also use presets here instead of
always choosing pixel sizes for width and

64
00:03:33.137 --> 00:03:34.280
height.

65
00:03:34.280 --> 00:03:36.860
You can use a preset for paper size.

66
00:03:36.860 --> 00:03:42.512
So for example letter,
which is US letter size, or A4, A3.

67
00:03:42.512 --> 00:03:46.830
So, A4 would be a more UK or
EU sizing for papers.

68
00:03:47.840 --> 00:03:51.040
And it's going to size this canvas
correctly for that paper size.

69
00:03:52.440 --> 00:03:57.320
And now when we're editing, we're going
through and developing our sketches.

70
00:03:57.320 --> 00:04:01.138
One of the things to keep in mind is
that if you ever see something you like,

71
00:04:01.138 --> 00:04:05.092
you can hit Command + S, once you've
made sure that the canvas is in focus.

72
00:04:05.092 --> 00:04:08.029
So, you might have to click the canvas
just wants to make sure it's in focus.

73
00:04:08.029 --> 00:04:12.920
Hit Command + S or Ctrl + S depending
on whether you're on Windows or Mac.

74
00:04:12.920 --> 00:04:16.200
If you have the console open,

75
00:04:16.200 --> 00:04:20.200
it should just print a little message
saying that you've exported the file.

76
00:04:20.200 --> 00:04:23.425
And when you open up
your Downloads folder,

77
00:04:23.425 --> 00:04:25.959
that file should be there as a PNG.

78
00:04:25.959 --> 00:04:29.452
And so, this is another one of
these benefits of canvas-sketches,

79
00:04:29.452 --> 00:04:32.900
just quick file exporting within
the browser as we're iterating.

80
00:04:32.900 --> 00:04:36.160
And so, this is gonna be really great
through the day is whenever you get

81
00:04:36.160 --> 00:04:36.760
something you like,

82
00:04:36.760 --> 00:04:41.310
you just pop that command in, Command
+ S or Control + S and you get a file.

83
00:04:42.400 --> 00:04:47.138
Now, one of the things you'll notice with
this file, even though I said I wanted and

84
00:04:47.138 --> 00:04:50.460
A4 or a letter size for
a paper, for a print.

85
00:04:50.460 --> 00:04:55.790
If I look the resolution is quite low,
it's 595 by 842 pixels.

86
00:04:55.790 --> 00:04:59.517
And if we tried to send that to a print
studio, it would come out pretty

87
00:04:59.517 --> 00:05:03.530
pixelated and kinda blurry and
it wouldn't look very good.

88
00:05:03.530 --> 00:05:07.226
And so, one of the other benefits
here of canvas-sketch is that we

89
00:05:07.226 --> 00:05:11.589
can say the pixels per inch, and
we can increase the resolution to 300 DPI.

90
00:05:11.589 --> 00:05:14.930
And that's gonna give us
an output that's much larger.

91
00:05:14.930 --> 00:05:19.158
So, when we save the file and
we look at the file,

92
00:05:19.158 --> 00:05:22.777
it's gonna be a much, much larger file.

93
00:05:22.777 --> 00:05:25.892
And so, we could actually send
this to a print studio and

94
00:05:25.892 --> 00:05:28.090
it would actually come out correctly.

95
00:05:29.720 --> 00:05:31.770
It wouldn't come out pixelated and blurry.

96
00:05:33.828 --> 00:05:37.344
And then you can change
the orientation by adding orientation,

97
00:05:37.344 --> 00:05:40.939
changing it to landscape or
setting it to portrait, either one.

98
00:05:45.075 --> 00:05:50.437
And what's more, this might be review
if you've already used canvas-sketch,

99
00:05:50.437 --> 00:05:54.120
but what's more is you can
also specify the units.

100
00:05:54.120 --> 00:05:56.214
So, right now we're working in pixels.

101
00:05:56.214 --> 00:05:59.618
And If I scroll down,
everything's in pixels.

102
00:05:59.618 --> 00:06:02.320
But I can also specify units.

103
00:06:02.320 --> 00:06:05.620
So, let's say I'm gonna
back to 72 pixels per inch,

104
00:06:05.620 --> 00:06:11.000
just cuz it's a bit smaller and
it's not gonna eat as much of my computer.

105
00:06:12.250 --> 00:06:15.510
It's just a bit less intense for
the computer to render that.

106
00:06:15.510 --> 00:06:18.359
And then let's say
instead of it being A4 or

107
00:06:18.359 --> 00:06:24.130
instead of it being some pixel size I
wanted to make a 12 by 12 inch artwork.

108
00:06:24.130 --> 00:06:26.140
So, if I set the dimensions to 12 by 12,

109
00:06:26.140 --> 00:06:31.230
that's just gonna be 12 pixels by
12 pixels, which is super tiny.

110
00:06:31.230 --> 00:06:35.340
But then if I provide the units and
I say, in for inches,

111
00:06:35.340 --> 00:06:38.590
or cm for centimeters,
or mm for millimeters.

112
00:06:38.590 --> 00:06:43.140
Now, I can work in actual physical sizes.

113
00:06:43.140 --> 00:06:49.174
And so, now, I'm creating a print
that is 12 by 12 inches and

114
00:06:49.174 --> 00:06:52.488
72 DPI, or 72 pixels per inch.

115
00:06:52.488 --> 00:06:57.673
And I can hit Command + S, and
the actual pixel output, the pixel sizes

116
00:06:57.673 --> 00:07:03.200
here will be mapped from the pixels
per inch to the proper output size.

117
00:07:03.200 --> 00:07:07.560
And so, now if I was to send this to
a print studio and tell them they could

118
00:07:07.560 --> 00:07:12.460
actually print it at 12 by 12 inches and
everything would look as I expect it to.

119
00:07:12.460 --> 00:07:16.300
Just make sure if you are printing things
you're gonna use high pixels per inch,

120
00:07:16.300 --> 00:07:17.630
like 300.

121
00:07:17.630 --> 00:07:21.730
And one more little thing here is that
when we're running these really large

122
00:07:21.730 --> 00:07:26.290
canvases in the browser,
our browser's gonna start to slow down.

123
00:07:26.290 --> 00:07:28.990
Because we have this huge
canvas that's rendering

124
00:07:28.990 --> 00:07:31.560
this massive canvas inside of our browser.

125
00:07:31.560 --> 00:07:39.159
And so, we can specify this option here,
scaleToView, we can say true.

126
00:07:39.159 --> 00:07:42.564
And what that's gonna do is that's
gonna scale the canvas to the size of

127
00:07:42.564 --> 00:07:45.744
the browser when we're editing it,
when we're developing, and

128
00:07:45.744 --> 00:07:48.020
when we're opening it visually.

129
00:07:48.020 --> 00:07:52.420
But when we hit Command + S,
it's going to use the true physical size,

130
00:07:52.420 --> 00:07:54.630
this large, high-resolution size.

131
00:07:54.630 --> 00:07:58.660
And so, that way we're just not going
to be crushing our computers with this

132
00:07:58.660 --> 00:08:02.120
huge canvas as we're editing and
iterating our sketches.

133
00:08:03.132 --> 00:08:08.060
And so that's the basics of
the canvas-sketch settings for print.

134
00:08:08.060 --> 00:08:12.048
Maybe later we'll get into more,
like frame rates and exporting MP4s,

135
00:08:12.048 --> 00:08:14.436
and exporting GIFs, and things like that.

136
00:08:14.436 --> 00:08:18.150
But maybe you can already see
why canvas-sketch is useful for

137
00:08:18.150 --> 00:08:21.625
this kind of creative coding and
generative art, yeah.

138
00:08:21.625 --> 00:08:27.340
One other thing here worth mentioning,
if you don't include dimensions,

139
00:08:27.340 --> 00:08:30.250
it's just going to full
screen to the browser size.

140
00:08:30.250 --> 00:08:32.670
So, that's just something to keep in mind.

141
00:08:32.670 --> 00:08:35.700
The default,
if we just don't use dimensions,

142
00:08:35.700 --> 00:08:40.220
is gonna just be full screen to
the browser size, and so on, and so forth.

143
00:08:40.220 --> 00:08:43.180
So, back to WebGL.

144
00:08:43.180 --> 00:08:47.150
So, here we have a sphere and there's
lots of code that makes this sphere.

145
00:08:49.720 --> 00:08:52.770
The basic setup is that we
have this settings object,

146
00:08:52.770 --> 00:08:54.950
which gives us the settings for
the canvas-sketch.

147
00:08:54.950 --> 00:08:59.730
But then we also have the sketch function,
which is gonna wrap our entire artwork.

148
00:08:59.730 --> 00:09:03.130
And so, the sketch function gets
passed in some properties of the app.

149
00:09:03.130 --> 00:09:06.360
So, the context of the canvas
we're working with some.

150
00:09:06.360 --> 00:09:09.490
Canvas-sketch gives us a canvas,
gives us a context.

151
00:09:09.490 --> 00:09:11.698
And we use that to
create our WebGL render.

152
00:09:11.698 --> 00:09:15.290
And I'm gonna go through
these in more detail,

153
00:09:15.290 --> 00:09:19.772
but I'll just quickly
scroll through there.

154
00:09:19.772 --> 00:09:22.670
We're gonna talk about how these all
come together to make up a scene,

155
00:09:22.670 --> 00:09:26.550
to make up a 3D virtual world,.

156
00:09:26.550 --> 00:09:30.946
But within here we have the set up of
our scene, and then finally we return

157
00:09:30.946 --> 00:09:35.433
an object that includes things like
resize handlers, render handlers.

158
00:09:35.433 --> 00:09:39.113
And also in some cases, you might want
the canvas-sketch to unload cleanly,

159
00:09:39.113 --> 00:09:43.540
if you're using it in React or if you're
using it in Vue, or something like that.

160
00:09:43.540 --> 00:09:45.950
You'll wanna dispose
off the WebGL context.

161
00:09:45.950 --> 00:09:49.840
And so, the resize handler gets
called when the canvas size changes.

162
00:09:49.840 --> 00:09:54.140
And so, right now I'm reloading the page,
but it might not be calling this function

163
00:09:54.140 --> 00:09:58.760
because the canvas size might be the same,
if we're using a fixed canvas size.

164
00:09:58.760 --> 00:10:01.690
But it will get called whenever
the canvas size changes and

165
00:10:01.690 --> 00:10:04.360
we need to update the render.

166
00:10:04.360 --> 00:10:07.050
And then rendering gets
called every frame.

167
00:10:07.050 --> 00:10:09.910
If we're using a render loop,
it'll be 60 frames a second.

168
00:10:09.910 --> 00:10:13.735
If we're using a static image, it's
just whenever the canvas size changes.

169
00:10:13.735 --> 00:10:17.996
Or if we're using GIF export, it might
be more like 24 frames a second or

170
00:10:17.996 --> 00:10:19.320
25 frames a second.

