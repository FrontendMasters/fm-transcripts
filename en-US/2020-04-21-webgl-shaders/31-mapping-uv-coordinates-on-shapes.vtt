WEBVTT

1
00:00:00.228 --> 00:00:02.242
So one of the other things
I wanted to highlight,

2
00:00:02.242 --> 00:00:05.450
you don't need to follow along with this
part, just leave your code as it is.

3
00:00:05.450 --> 00:00:08.660
But I just wanted to show how
UV coordinates look differently

4
00:00:08.660 --> 00:00:11.650
across different surfaces and
across different geometries.

5
00:00:11.650 --> 00:00:13.291
Because you might be wondering,

6
00:00:13.291 --> 00:00:17.038
how does this work that we just had a
gradient that goes perfectly in like this

7
00:00:17.038 --> 00:00:20.685
square type format and all of a sudden
that works just the same in a sphere?

8
00:00:20.685 --> 00:00:26.590
Well, that's because UV coordinates, they
come in all these built-in geometries.

9
00:00:26.590 --> 00:00:31.330
So just as example, I'll just show you
a grayscale of what the vv.x looks like.

10
00:00:32.710 --> 00:00:36.470
So on a sphere, we have the vv.x and

11
00:00:36.470 --> 00:00:39.940
it's going from this scene here,
it's going from zero.

12
00:00:39.940 --> 00:00:44.640
And when we rotate around,
the value is increasing towards one.

13
00:00:44.640 --> 00:00:49.090
So just like the cube,
this texture coordinate goes from zero

14
00:00:49.090 --> 00:00:51.600
all the way to one,
it goes all the way around to one.

15
00:00:51.600 --> 00:00:54.500
And then it doesn't really wrap
around nicely because it goes from

16
00:00:54.500 --> 00:00:55.710
one back to zero.

17
00:00:55.710 --> 00:00:57.770
So that's why this harsh
seam is happening.

18
00:00:59.860 --> 00:01:05.040
And then if we were to take the other
coordinate, the y-coordinate here,

19
00:01:05.040 --> 00:01:08.030
instead of doing it horizontally,
this is more vertical.

20
00:01:08.030 --> 00:01:11.050
Where on the top pole,
it's pure white, and

21
00:01:11.050 --> 00:01:15.010
as we go down towards the bottom pole,
it's gonna be pure black.

22
00:01:16.660 --> 00:01:19.305
And so
even in a sphere we can use these x and

23
00:01:19.305 --> 00:01:24.309
y-coordinates to create some nice shapes
and patterns and things like that.

24
00:01:24.309 --> 00:01:29.061
One of the things you'll start to see
though is that it's really hard to deal

25
00:01:29.061 --> 00:01:33.960
with spheres because unlike a cube, a cube
has this nice sort of edge to it, but

26
00:01:33.960 --> 00:01:38.192
a sphere has this kind of this weird
artifact that starts to happen at

27
00:01:38.192 --> 00:01:43.271
the poles, which is especially noticeable
when we're doing our masking here.

28
00:01:45.875 --> 00:01:49.670
Because towards the poles,
well, we have two things.

29
00:01:49.670 --> 00:01:55.150
One is that we can very clearly see
the seam that I was mentioning earlier, so

30
00:01:55.150 --> 00:01:56.570
that's one problem.

31
00:01:56.570 --> 00:01:59.568
And another problem is that
as we go towards the poles,

32
00:01:59.568 --> 00:02:03.623
these circles are getting stretched and
they're getting kind of wonky.

33
00:02:05.721 --> 00:02:10.498
And that's just a limitation of
using this type of projection,

34
00:02:10.498 --> 00:02:12.980
this type of mapping on a sphere.

35
00:02:12.980 --> 00:02:18.180
So this type of Cartesian UV coordinate,
so it's Cartesian

36
00:02:18.180 --> 00:02:23.680
in the sense that it's two dimensional,
it's x goes along, and y goes along.

37
00:02:23.680 --> 00:02:26.990
That's a Cartesian coordinate system for
the UV coordinates and

38
00:02:26.990 --> 00:02:30.750
trying to apply that to a sphere comes
up with some artifacts like this.

39
00:02:30.750 --> 00:02:35.180
Like this pole system, or
this pole problem, and the seam problem.

40
00:02:35.180 --> 00:02:36.720
So that's just something to be mindful of,

41
00:02:36.720 --> 00:02:39.650
but how does this look
on other geometries?

42
00:02:39.650 --> 00:02:44.431
So if I was to take a sphere and
maybe turn it into a TaurusGeometry.

43
00:02:48.713 --> 00:02:53.620
I'm just gonna visualize just the,
the vv.x to start.

44
00:02:53.620 --> 00:02:56.850
Remember, this is a great way to visualize
what's happening is just by outputting

45
00:02:56.850 --> 00:02:58.380
the float value.

46
00:02:58.380 --> 00:03:02.300
So here, now,
we're seeing it go from pure white, and

47
00:03:02.300 --> 00:03:07.500
then it goes so radially around
the Taurus all the way down.

48
00:03:07.500 --> 00:03:09.460
Here again, to pure black.

49
00:03:09.460 --> 00:03:14.431
And if I was to use the other coordinate,
It's actually gonna go

50
00:03:14.431 --> 00:03:19.566
from one side like the top part of
the donut or the top part of the bagel.

51
00:03:19.566 --> 00:03:26.350
And then all the way inside from
zero all the way to white out here.

52
00:03:26.350 --> 00:03:29.690
So that's just something to be aware of,
is that these texture coordinates, as long

53
00:03:29.690 --> 00:03:34.740
as you're using built-in geometries here,
you can use these texture coordinates.

54
00:03:34.740 --> 00:03:37.080
But they're all gonna be
a little bit different

55
00:03:37.080 --> 00:03:40.390
depending on how the geometry
is sorta constructed.

56
00:03:40.390 --> 00:03:41.790
So it's just something to be mindful of,

57
00:03:41.790 --> 00:03:44.470
cuz this is gonna have different
artifacts than the sphere.

58
00:03:44.470 --> 00:03:49.807
So I'm visualizing the mask,
we'll start to see the scene here,

59
00:03:49.807 --> 00:03:53.732
that's where it's going
from one back to zero.

60
00:03:55.644 --> 00:03:58.429
And that's the main problem,
I think with the Taurus,

61
00:03:58.429 --> 00:04:00.630
it doesn't have that issue with the poles.

