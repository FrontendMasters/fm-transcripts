WEBVTT

1
00:00:00.035 --> 00:00:04.590
Now, I wanna try and get us still working
in the same scene with this cube and

2
00:00:04.590 --> 00:00:07.354
gradients and understanding coordinates.

3
00:00:07.354 --> 00:00:09.946
But I wanna start to set a bit
more of an intention for

4
00:00:09.946 --> 00:00:14.351
what we're doing rather than just randomly
changing colors and randomly like playing

5
00:00:14.351 --> 00:00:17.991
around with experimentation of like
coordinates and stuff like that.

6
00:00:17.991 --> 00:00:21.896
I'd like us to try and set a bit
of an intention for exercises for

7
00:00:21.896 --> 00:00:23.161
the rest of the day.

8
00:00:23.161 --> 00:00:26.462
And so one of the things I like to
do is find inspiration from art and

9
00:00:26.462 --> 00:00:28.511
art history and contemporary artists.

10
00:00:28.511 --> 00:00:31.535
This is Yayoi Kusama,
who's most well known for

11
00:00:31.535 --> 00:00:36.712
these kinda installation pieces like
infinity mirror type installation pieces.

12
00:00:36.712 --> 00:00:41.194
Where she's doing these lots of circles,
lots of polka dots,

13
00:00:41.194 --> 00:00:46.198
lots of repeating and sort of seamless
patterns across these meshes.

14
00:00:48.047 --> 00:00:49.143
So here's another one.

15
00:00:50.932 --> 00:00:55.334
And she has this sort of motif of polka
dot that appears in most of her work or

16
00:00:55.334 --> 00:00:59.467
almost all of her work,
a lot of these circles, repeating circles.

17
00:01:03.741 --> 00:01:08.022
And if x is a really good base for
us to start to get inspiration for

18
00:01:08.022 --> 00:01:13.597
our own shaders, because it's something
that looks very simple to do in a shader.

19
00:01:13.597 --> 00:01:15.987
Maybe you're thinking,
this is just circles.

20
00:01:15.987 --> 00:01:18.929
But there's so many ways that we
can approach this in a shader.

21
00:01:18.929 --> 00:01:20.539
That it becomes a really good exercise for

22
00:01:20.539 --> 00:01:22.983
us to just understand some of
the different ways we can do this.

23
00:01:25.562 --> 00:01:30.083
So this is what we're gonna be trying to
create is some outputs that look a little

24
00:01:30.083 --> 00:01:30.967
bit like this.

25
00:01:30.967 --> 00:01:35.235
Here's another variation just by
tweaking parameters in the shader,

26
00:01:35.235 --> 00:01:39.503
we can start to introduce lighting,
can start to tweak these colors and

27
00:01:39.503 --> 00:01:41.723
it's all within the same exercise.

28
00:01:41.723 --> 00:01:45.160
So now instead of going through
lots of different exercises,

29
00:01:45.160 --> 00:01:47.871
we're gonna stick within
this kind of output and

30
00:01:47.871 --> 00:01:51.256
try to see how we can tweak it and
change it in different ways.

31
00:01:53.875 --> 00:01:56.968
I'll just run through
some of these outputs.

32
00:01:56.968 --> 00:02:00.996
And then we'll run through again,
in more detail going through each one.

33
00:02:00.996 --> 00:02:06.147
But just when I'm trying to create
something like this, theoretically,

34
00:02:06.147 --> 00:02:10.888
let's say in a hypothetical situation,
you've been approached to

35
00:02:10.888 --> 00:02:15.402
contract a website for either Kusama or
for her next exhibition.

36
00:02:15.402 --> 00:02:19.233
And part of the website includes this
interactive component, which shows some of

37
00:02:19.233 --> 00:02:22.784
her her work or something like her work
that allows you to rotate around these

38
00:02:22.784 --> 00:02:26.522
spheres, maybe interact with them,
move them around or something like that.

39
00:02:26.522 --> 00:02:30.040
And so you need to figure out how do you
actually render these spheres with these

40
00:02:30.040 --> 00:02:30.956
little polka dots.

41
00:02:30.956 --> 00:02:34.829
Well, you could probably use a shader, and
this is what we're gonna end up using.

42
00:02:34.829 --> 00:02:39.528
And so the first thing you might do is
just start simple, start with a cube and

43
00:02:39.528 --> 00:02:43.362
try to get some circles repeated
on the cube, just like this.

44
00:02:43.362 --> 00:02:47.128
And once you have this,
this is kind of gonna be a groundwork for

45
00:02:47.128 --> 00:02:51.198
doing something a little bit more
like this, which is a bit closer.

46
00:02:51.198 --> 00:02:56.106
So making some noise, we're gonna try and
chat briefly about noise, but

47
00:02:56.106 --> 00:02:59.762
trying to create something
with a bit more of a sphere.

48
00:02:59.762 --> 00:03:03.143
Trying to create something
is a bit closer to her work.

49
00:03:03.143 --> 00:03:06.367
But if you do this approach,
you might start to see errors,

50
00:03:06.367 --> 00:03:07.988
you might start to see flaws.

51
00:03:07.988 --> 00:03:09.224
When you turn this sphere,

52
00:03:09.224 --> 00:03:12.510
all of a sudden you're gonna see it
looks a little bit weird on the poles.

53
00:03:12.510 --> 00:03:16.429
That's because of the way that this
particular approach would be using

54
00:03:16.429 --> 00:03:20.359
the texture mapping and so we have to
come up with a different approach.

55
00:03:20.359 --> 00:03:22.390
So how do we get even
spacing across these points?

56
00:03:22.390 --> 00:03:25.818
Just so that it looks a little bit
more like Yayoi Kusama's work.

57
00:03:25.818 --> 00:03:30.042
And so in order to achieve that,
maybe we'll come up with

58
00:03:30.042 --> 00:03:34.707
an approach that uses something
like a icosahedron geometry.

59
00:03:34.707 --> 00:03:37.885
So this is icosahedron,
it takes triangles and

60
00:03:37.885 --> 00:03:42.976
lays them out in this sort of even way
to create a sphere or a spherical shape.

61
00:03:42.976 --> 00:03:47.130
And notice all the triangles are very
evenly spaced from each other.

62
00:03:47.130 --> 00:03:51.725
And all the vertices that defined those
triangles are all very evenly spaced

63
00:03:51.725 --> 00:03:52.308
as well.

64
00:03:52.308 --> 00:03:58.119
And so we could for example define,
on each vertex, we could define an object.

65
00:03:58.119 --> 00:04:02.170
Here it's just spheres, which doesn't
really look like Yayoi Kusama, but

66
00:04:02.170 --> 00:04:05.491
if we didn't use spheres we used disks or
something like that.

67
00:04:05.491 --> 00:04:09.394
Maybe it looks like this,
and all of a sudden,

68
00:04:09.394 --> 00:04:13.210
we get something that's
a bit like her work.

69
00:04:13.210 --> 00:04:17.926
And so the way that works is we
take the points of the vertices of

70
00:04:17.926 --> 00:04:19.480
this icosahedron.

71
00:04:19.480 --> 00:04:23.141
So that's the white spheres for
each of the vertices.

72
00:04:23.141 --> 00:04:27.340
But instead of rendering an icosahedron,
our actual bubbles or balloons or

73
00:04:27.340 --> 00:04:31.812
whatever, we wanna call those things,
those are very smooth, very detailed.

74
00:04:31.812 --> 00:04:34.440
And so we're just using the icosahedron to

75
00:04:34.440 --> 00:04:37.583
define the points on
the sphere that we wanna draw.

76
00:04:37.583 --> 00:04:40.529
And then we can start by
rendering them as spheres, but

77
00:04:40.529 --> 00:04:43.744
that's not what we want,
this looks like some weird ball.

78
00:04:43.744 --> 00:04:48.305
What we want is to make them look like
they're part of the surface of the mesh.

79
00:04:48.305 --> 00:04:52.952
And so instead of using spheres,
we're gonna do little tiny discs.

80
00:04:52.952 --> 00:04:57.170
So there's a geometry in
three.js called Circle Geometry.

81
00:04:57.170 --> 00:04:59.242
And this is what would be used here.

82
00:05:00.741 --> 00:05:06.201
And then we can go further, maybe once
we have this we can create a shader

83
00:05:06.201 --> 00:05:11.678
version of it, that actually maps
the pattern onto the sphere itself.

84
00:05:11.678 --> 00:05:17.614
Because maybe one of the things
you'll notice with this geometric

85
00:05:17.614 --> 00:05:23.550
version is that the actual geometry
is sticking out of the sphere.

86
00:05:23.550 --> 00:05:25.154
And this is a pretty subtle detail, but

87
00:05:25.154 --> 00:05:28.276
maybe your creative director is gonna
be like, well, we can't have this.

88
00:05:28.276 --> 00:05:30.451
It doesn't look like it's good enough.

89
00:05:30.451 --> 00:05:33.899
And so you can actually go in,
you can create a shader version.

90
00:05:33.899 --> 00:05:37.360
And we'll talk a little bit
about how that would work.

91
00:05:37.360 --> 00:05:42.307
And this would be using some math,
which is actually taking the distances of

92
00:05:42.307 --> 00:05:46.031
these points, in the fragment shader and
computing it.

93
00:05:46.031 --> 00:05:50.368
And so I'll go into detail as we go,
but this is just sort of the breakdown.

94
00:05:51.994 --> 00:05:53.908
And then once you have all those things,

95
00:05:53.908 --> 00:05:57.299
you might start to polish it up,
add more spheres rather than just one.

96
00:05:57.299 --> 00:05:59.799
You might start to add
some lighting into it.

97
00:05:59.799 --> 00:06:02.589
And you might finally start to
add little other details or

98
00:06:02.589 --> 00:06:04.398
flourishes or something like that.

99
00:06:04.398 --> 00:06:09.760
So that would be sorta the remainder
of what we wanna sorta strive toward.

100
00:06:09.760 --> 00:06:13.817
But we're gonna keep it simple,
we're gonna do it piece by piece.

101
00:06:13.817 --> 00:06:18.624
And we might not get all the way to the
very end, but the demos are there if you

102
00:06:18.624 --> 00:06:22.603
do wanna continue onwards to the more and
more advanced work.

103
00:06:22.603 --> 00:06:24.678
And I'll try and break down,

104
00:06:24.678 --> 00:06:29.090
at least explain some of the more
advanced approaches as we go.

