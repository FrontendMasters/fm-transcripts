WEBVTT

1
00:00:00.100 --> 00:00:02.966
Do you have any resources
you'd recommend for

2
00:00:02.966 --> 00:00:06.876
learning this stuff on your own
like if you want to go past this?

3
00:00:06.876 --> 00:00:10.934
&gt;&gt; A lot of stack overflow, [LAUGH]
I think part of its like figure out

4
00:00:10.934 --> 00:00:14.240
the thing that you wanna do,
right, especially for

5
00:00:14.240 --> 00:00:18.675
the lambda edge stuff like I think
the possibilities are super cool and

6
00:00:18.675 --> 00:00:22.382
I think about the last time
we did this course in 2018.

7
00:00:22.382 --> 00:00:25.809
You were limited to like
a much smaller time window and

8
00:00:25.809 --> 00:00:30.532
it was like you had a much fewer set
of requests there's like increasingly

9
00:00:30.532 --> 00:00:32.600
more that you can do at the edge.

10
00:00:32.600 --> 00:00:37.330
I watched all the reinvent Keynotes
around lambda gin Cloud Front.

11
00:00:37.330 --> 00:00:42.157
And it's mostly just giant
improvements to performance,

12
00:00:42.157 --> 00:00:46.140
rather than anything around functionality.

13
00:00:46.140 --> 00:00:49.750
But I think a lot of the kinda core pieces
in there are getting kinda better and

14
00:00:49.750 --> 00:00:50.830
faster as we go along.

15
00:00:50.830 --> 00:00:54.764
But a lot of it is like figuring out those
little edge cases like once you have

16
00:00:54.764 --> 00:00:57.020
the problem to solve becomes a lot easier.

17
00:00:57.020 --> 00:00:58.160
Mark.

18
00:00:58.160 --> 00:01:02.150
&gt;&gt; Is it better to use groups and
then give access from there?

19
00:01:03.990 --> 00:01:07.630
&gt;&gt; Yeah, in a lot of cases you have like,
so this is an interesting question.

20
00:01:07.630 --> 00:01:11.440
So the question is basically
around I am and permissions.

21
00:01:12.940 --> 00:01:19.040
I feel like as soon as you get
to like a decent sized company,

22
00:01:19.040 --> 00:01:24.408
instead of putting the policies
directly on a user,

23
00:01:24.408 --> 00:01:29.288
I have a group,
I add that new user to the group,

24
00:01:29.288 --> 00:01:35.290
they have the policies
applied to that group, right?

25
00:01:35.290 --> 00:01:37.410
At a certain size that
totally makes sense.

26
00:01:37.410 --> 00:01:40.310
Would you do that on a personal project?

27
00:01:40.310 --> 00:01:43.543
Have I seen startups that
like I don't know like have

28
00:01:43.543 --> 00:01:47.672
just one account that everyone
logs into you see that too, right?

29
00:01:47.672 --> 00:01:51.536
It comes down to like I think as soon as
you start taking any amount of money like

30
00:01:51.536 --> 00:01:55.637
yes, and you start dealing with something
like that because it's about trust and

31
00:01:55.637 --> 00:01:56.546
stuff like that.

32
00:01:56.546 --> 00:01:58.727
But I think having groups adding users,

33
00:01:58.727 --> 00:02:02.709
that's where the tagging becomes
super important like we effectively,

34
00:02:02.709 --> 00:02:06.302
when I worked at some of the larger
companies that I've worked at,

35
00:02:06.302 --> 00:02:09.665
I had entire teams whose job was
to manage all of that, right?

36
00:02:09.665 --> 00:02:11.560
We were making a user to get us started.

37
00:02:13.070 --> 00:02:17.971
I kind of joked that at the previous
company I didn't have access to any

38
00:02:17.971 --> 00:02:22.720
of those alerts or billing or
group creation, I filed a ticket.

39
00:02:22.720 --> 00:02:26.710
And if I went over my budget,
April came and yelled at me, right?

40
00:02:26.710 --> 00:02:31.577
And there was a report put out, and that's
when I learned that as my $1,000 budget,

41
00:02:31.577 --> 00:02:33.830
I had been spending 13 a month, right?

42
00:02:33.830 --> 00:02:37.749
So a lot of those things, it's a careful
balance between as soon as you're doing

43
00:02:37.749 --> 00:02:41.280
this all yourself, you probably can
kinda do the lightweight version.

44
00:02:41.280 --> 00:02:46.246
And then eventually getting it right is
a course and a skill set on itself, and I

45
00:02:46.246 --> 00:02:52.000
should answer your question like there are
like full AWS like certifications, right?

46
00:02:52.000 --> 00:02:54.106
There are none really focused
on front end engineers,

47
00:02:54.106 --> 00:02:56.320
which was kinda the inspiration
of this course, right?

48
00:02:56.320 --> 00:02:56.910
It's like, cool.

49
00:02:56.910 --> 00:03:00.214
There's solution architect,
right, which is super cool and

50
00:03:00.214 --> 00:03:04.265
I know a bunch of friends have taken and
passed that test for both associate and

51
00:03:04.265 --> 00:03:07.152
professional where you learn
all the things, right?

52
00:03:07.152 --> 00:03:10.657
Shockingly even like kind of preparing for
the update of this course googling that

53
00:03:10.657 --> 00:03:13.826
term will only get you the notes from
the previous version of this course.

54
00:03:13.826 --> 00:03:18.251
So unfortunately, questions [LAUGH]
somewhat hard to answer in this very

55
00:03:18.251 --> 00:03:23.036
like specific use case, but in terms of
like there are full certifications and

56
00:03:23.036 --> 00:03:26.825
everything for AWS itself for
these kinds of things, right?

57
00:03:26.825 --> 00:03:30.548
It's somewhat scant, and it doesn't
bring me a lot of joy to say that but

58
00:03:30.548 --> 00:03:34.920
that is even my own realization,
preparing for the update here as well.

59
00:03:34.920 --> 00:03:38.873
&gt;&gt; Are there any other AWS products that
we should have on our radar as front end

60
00:03:38.873 --> 00:03:39.450
engine?

61
00:03:39.450 --> 00:03:40.960
&gt;&gt; Yeah, totally, totally, totally.

62
00:03:40.960 --> 00:03:41.930
All right, so let's do a few of these.

63
00:03:41.930 --> 00:03:46.914
So the question was other AWS
stuff like future kind of

64
00:03:46.914 --> 00:03:52.200
directions that you could look into and
explore.

65
00:03:52.200 --> 00:03:56.340
So the ones that we were kinda
talking about before is.

66
00:03:56.340 --> 00:04:00.305
Amazon has a few different
products with the name amplify,

67
00:04:00.305 --> 00:04:04.040
which is effectively will
spin up some of these things.

68
00:04:04.040 --> 00:04:06.760
So let's talk about some of
the services that it sits over.

69
00:04:06.760 --> 00:04:11.917
So one of the ones that you might
find super useful is Cognito and

70
00:04:11.917 --> 00:04:16.683
if you use something like Auth zero,
or Firebase Auth, or

71
00:04:16.683 --> 00:04:22.940
something along those lines,
it'll handle like user management for you.

72
00:04:22.940 --> 00:04:25.980
So like permissions authorization,
stuff along those lines and

73
00:04:25.980 --> 00:04:29.730
it's not just like log in with your
Amazon account or anything like that.

74
00:04:29.730 --> 00:04:33.145
You can do log in with Facebook,
so on and so forth.

75
00:04:33.145 --> 00:04:36.710
But the other really interesting
part about that is you

76
00:04:36.710 --> 00:04:41.060
can use Cognito with S3 to do
some really interesting things.

77
00:04:41.060 --> 00:04:45.731
So you can say like, hey user, you
uploaded a photo so I wanna actually give

78
00:04:45.731 --> 00:04:49.602
that photo only permission for
you to actually view, right?

79
00:04:49.602 --> 00:04:54.715
And so some of that kinda permission stuff
when we were setting up the policies, for

80
00:04:54.715 --> 00:04:59.535
given are the roles as well for a given
intro AWS service, you can actually give

81
00:04:59.535 --> 00:05:05.210
them a signed URL, which says like, here's
a URL is good for like 24 hours, right?

82
00:05:05.210 --> 00:05:09.710
And stuff along those lines,
you can actually mix Cognito,

83
00:05:09.710 --> 00:05:14.653
with some of the storing true images or
videos or access management

84
00:05:14.653 --> 00:05:20.130
around your actual media with Cognito
in a way that is really cool.

85
00:05:20.130 --> 00:05:24.072
Another one that is super popular and
really useful,

86
00:05:24.072 --> 00:05:28.030
we can argue is definitely
not a front end thing.

87
00:05:28.030 --> 00:05:32.100
But Dynamo is an incredibly
scalable database.

88
00:05:32.100 --> 00:05:33.710
It's a no SQL database.

89
00:05:33.710 --> 00:05:36.410
So it's a little bit different
than writing like a SQL query.

90
00:05:36.410 --> 00:05:40.530
There's some nuances as key value store,
you work with cursors.

91
00:05:40.530 --> 00:05:43.570
But you can call that from
a lambda edge function, right?

92
00:05:43.570 --> 00:05:47.741
And so if you wanted to store a small
piece of data in a database or

93
00:05:47.741 --> 00:05:53.060
something along those lines,
Dynamo can scale incredibly well, right?

94
00:05:53.060 --> 00:05:56.312
But even it also works for
very small UCAs as well, and

95
00:05:56.312 --> 00:05:59.950
you can talk to that from some
of your lambda@edge as well.

96
00:05:59.950 --> 00:06:04.692
Another cool one that I think is
incredibly neat, we're writing

97
00:06:04.692 --> 00:06:09.790
the outline for the next version of this,
or the follow up is AppSync.

98
00:06:11.030 --> 00:06:17.689
App sync is allows you basically
spin up a GraphQL server, right?

99
00:06:17.689 --> 00:06:21.256
Well you write basically the schema for
your data structure and

100
00:06:21.256 --> 00:06:24.887
then you hit a button it's like
I'll make you a Dynamo DB right,

101
00:06:24.887 --> 00:06:28.115
that can store all that data
as well as its permissions and

102
00:06:28.115 --> 00:06:32.590
then also like the subscription pays
real time updates to WebSockets.

103
00:06:32.590 --> 00:06:38.678
And put a lot of that kind of in place for
you as well.

104
00:06:38.678 --> 00:06:43.830
So yeah, basically it handles all of the
infrastructure for spinning up an entire

105
00:06:43.830 --> 00:06:48.850
GraphQL based data store where you can
just say what it should all look like.

106
00:06:48.850 --> 00:06:50.774
It creates the databases under the scenes,

107
00:06:50.774 --> 00:06:53.460
you can put some additional
logic in there as well.

108
00:06:53.460 --> 00:06:56.915
Incredibly powerful for
real time maps and rapid prototyping and

109
00:06:56.915 --> 00:06:58.310
stuff along those lines.

110
00:06:59.810 --> 00:07:06.601
Another one is Amazon location service,

111
00:07:06.601 --> 00:07:11.240
which is good for like if you want to
add geolocation into your application.

112
00:07:12.690 --> 00:07:19.375
Has to be and somehow ended up in US west,
so put myself back in US East one but

113
00:07:19.375 --> 00:07:23.515
basically if you need to
add like geocoding and

114
00:07:23.515 --> 00:07:27.764
stuff like that into
your application as well,

115
00:07:27.764 --> 00:07:32.674
this is a service that is accessible for
you to do that.

116
00:07:32.674 --> 00:07:37.789
Trying to think of other
ones off the top of my head.

117
00:07:37.789 --> 00:07:39.870
The other one that comes
up a lot is amplify.

118
00:07:41.700 --> 00:07:47.110
And amplify is kind of there's a few
kinda things that are amplified ask,

119
00:07:47.110 --> 00:07:52.705
they have like a set of like UI components
like component library for react.

120
00:07:52.705 --> 00:07:57.444
There's a CLI that will like spin up some
of the Cognito S3 app sync stuff for

121
00:07:57.444 --> 00:08:01.148
you and like if you've ever
used something like Firebase or

122
00:08:01.148 --> 00:08:06.520
something like that kinda stuff spins
a whole bunch of like services together.

123
00:08:06.520 --> 00:08:09.080
Amplify will do that as well.

124
00:08:09.080 --> 00:08:15.442
They actually believe, I haven't
played around with it too much, but

125
00:08:15.442 --> 00:08:22.028
they have a UI builder, I think we
might have to Google for it separately.

126
00:08:26.282 --> 00:08:30.414
There's a components, but I think there's
also like a builder as well we can

127
00:08:30.414 --> 00:08:33.163
like put together a UI and
stuff along those lines.

128
00:08:33.163 --> 00:08:36.224
And then they also have things
like a code pipeline like

129
00:08:36.224 --> 00:08:40.040
kind of like a GitHub actions
kinda thing code commit as well.

130
00:08:40.040 --> 00:08:41.394
I prefer GitHub for that stuff, but

131
00:08:41.394 --> 00:08:43.890
like you could theoretically you
might like them better as well.

132
00:08:43.890 --> 00:08:46.915
So there's a bunch of like other
things around just the core,

133
00:08:46.915 --> 00:08:48.429
deploying your application,

134
00:08:48.429 --> 00:08:52.230
like the actual like kinda things you
might build your application on top of.

135
00:08:52.230 --> 00:08:55.039
We can argue whether they
are kind of backend services or

136
00:08:55.039 --> 00:08:58.341
kind of backend services at
the disposal of front end engineers.

137
00:08:58.341 --> 00:09:02.300
Because, yeah, like spinning up a set of
databases that you can access through

138
00:09:02.300 --> 00:09:05.492
some JavaScript that you write on
your requests and responses or

139
00:09:05.492 --> 00:09:09.170
having a GraphQL database,
I think is super cool as well.

140
00:09:09.170 --> 00:09:10.785
With that, thank you all so much.

141
00:09:10.785 --> 00:09:14.815
[APPLAUSE]

