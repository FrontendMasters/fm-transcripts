WEBVTT

1
00:00:00.030 --> 00:00:03.038
So with that,
we've got three green checks.

2
00:00:03.038 --> 00:00:05.991
Two of them we already started out with.

3
00:00:05.991 --> 00:00:09.439
One of them was we got for free,
which is none of our access keys for

4
00:00:09.439 --> 00:00:12.534
this user are over a year old,
which can confirm, right?

5
00:00:12.534 --> 00:00:13.994
Our root user has MFA.

6
00:00:13.994 --> 00:00:19.677
We have MFA, three green checks,
feels good to be secure in this case.

7
00:00:19.677 --> 00:00:24.923
So now we've done the kind
of administrative

8
00:00:24.923 --> 00:00:28.795
upon unintended pieces of this.

9
00:00:28.795 --> 00:00:33.338
We've got the root user, we've got the
administrative user, we'll have to create

10
00:00:33.338 --> 00:00:36.950
a user to some will be created for
us, that's fine as we go through.

11
00:00:36.950 --> 00:00:41.458
But for that we're kinda done with
the the account setup piece of this.

12
00:00:41.458 --> 00:00:45.790
So with that, we're gonna move into
talking a little bit about S3.

13
00:00:45.790 --> 00:00:49.413
S3 solves the first of
a series of problems for us.

14
00:00:49.413 --> 00:00:54.646
Which is despite all of our hard work
fighting with JavaScript and the DOM and

15
00:00:54.646 --> 00:00:59.467
CSS scoping, so on and so forth,
the end of the day, our applications

16
00:00:59.467 --> 00:01:03.833
are a series of text files that
we need to put onto the internet.

17
00:01:03.833 --> 00:01:07.809
S3 is a place where you can take things,
put them on the cloud,

18
00:01:07.809 --> 00:01:10.962
the cloud just being
somebody else's computer,

19
00:01:10.962 --> 00:01:14.961
get them off of your computer
onto somebody else's computer.

20
00:01:14.961 --> 00:01:15.722
It's hooked up to the internet.

21
00:01:15.722 --> 00:01:20.538
S 3 stands for Simple Storage Service,
say that three times fast.

22
00:01:20.538 --> 00:01:25.532
And it's basically a way that you
can take anything in our case is

23
00:01:25.532 --> 00:01:30.823
gonna be our JavaScript asset for
images, video so on and so forth.

24
00:01:30.823 --> 00:01:35.059
Right and it brings a lot to the table
despite its very unassuming name.

25
00:01:35.059 --> 00:01:41.031
So, let's just kind of get
a conceptual idea around this.

26
00:01:41.031 --> 00:01:42.741
We have our S3 account,

27
00:01:42.741 --> 00:01:48.042
which is the one that our administrator
has right now has a series of buckets.

28
00:01:48.042 --> 00:01:48.774
It's a very technical term.

29
00:01:48.774 --> 00:01:51.199
In that bucket, you put objects or things.

30
00:01:51.199 --> 00:01:54.002
So now you have a bucket full of things.

31
00:01:54.002 --> 00:01:57.110
In this case,
it's gonna be our client side assets.

32
00:01:57.110 --> 00:01:59.985
But like I said, it could be anything and

33
00:01:59.985 --> 00:02:03.714
you can figure out,
you can put stuff in the bucket.

34
00:02:03.714 --> 00:02:07.230
You can take stuff out of the bucket, you
can list all the things in the bucket, so

35
00:02:07.230 --> 00:02:07.976
on and so forth.

36
00:02:07.976 --> 00:02:09.097
We can also host web pages and
web applications out of our buckets.

37
00:02:09.097 --> 00:02:14.317
So that's really great.

38
00:02:14.317 --> 00:02:17.499
Now there's a little bit more to it,

39
00:02:17.499 --> 00:02:22.025
it's infinitely scalable
yeah sounds good right.

40
00:02:22.025 --> 00:02:26.960
I think you can get like there's stuff
like the maximum file size you can put

41
00:02:26.960 --> 00:02:29.325
in there as I think five terabytes.

42
00:02:29.325 --> 00:02:33.179
From doing that from memory,
again the joke about

43
00:02:33.179 --> 00:02:38.147
JavaScript is going large at some
point look at code splitting.

44
00:02:38.147 --> 00:02:42.665
If you're looking at five terabytes in
the eye it's time to start thinking

45
00:02:42.665 --> 00:02:43.464
about that.

46
00:02:43.464 --> 00:02:45.394
It's got three nines of availability and

47
00:02:45.394 --> 00:02:49.086
we'll talk about how to make that a little
bit better later on and it's built for

48
00:02:49.086 --> 00:02:51.859
four nines,
which means 99.99% of the year it is up.

49
00:02:51.859 --> 00:02:55.925
And more impressive is the 11
nines of durability, right?

50
00:02:55.925 --> 00:03:00.197
Which means despite how much you might
regret some of the code in those

51
00:03:00.197 --> 00:03:03.523
applications, S3 will not
be the one that loses it.

52
00:03:03.523 --> 00:03:08.170
Which is really great especially for
some more for assets, like video or

53
00:03:08.170 --> 00:03:13.657
something along those lines like they do
replicate it across multiple data centers,

54
00:03:13.657 --> 00:03:14.895
so on and so forth.

55
00:03:14.895 --> 00:03:19.982
As some of the features almost none
of which will be using versioning.

56
00:03:19.982 --> 00:03:23.571
So if you take a file or
a object in your bucket, and

57
00:03:23.571 --> 00:03:28.883
you replace it with another one,
you can have all the previous versions.

58
00:03:28.883 --> 00:03:30.261
Obviously you'll pay for that, right?

59
00:03:30.261 --> 00:03:33.304
I mean in money not in consequences.

60
00:03:33.304 --> 00:03:35.339
But you can have versions.

61
00:03:35.339 --> 00:03:40.373
You can have encryption,
security and all those things.

62
00:03:40.373 --> 00:03:45.798
For us, we are going to kinda have
Git as our kinda versioning tool.

63
00:03:45.798 --> 00:03:48.811
And we don't need to encrypt our client
side assets cuz the whole goal is to

64
00:03:48.811 --> 00:03:51.350
get those JavaScripts to
the browsers to be compiled and run.

65
00:03:51.350 --> 00:03:54.315
But for different kinds of things
that you might have to do,

66
00:03:54.315 --> 00:03:55.811
those are kind of available.

67
00:03:55.811 --> 00:03:58.983
And there are ways to secure the bucket.

68
00:03:58.983 --> 00:04:01.329
There are ways to encrypt
things in the bucket, right?

69
00:04:01.329 --> 00:04:03.757
And we're gonna kind of go through
some of those steps as well.

70
00:04:03.757 --> 00:04:08.649
Like I said, we are optimizing for people
getting the stuff in our buckets, but

71
00:04:08.649 --> 00:04:13.249
you can, every once in a while you hear
about somebody who left their bucket

72
00:04:13.249 --> 00:04:17.798
unsecured and lost a bunch of sensitive
data and stuff along those lines.

73
00:04:17.798 --> 00:04:22.402
We are lucky enough that we are trying
to get people to read files out of our

74
00:04:22.402 --> 00:04:23.016
bucket.

75
00:04:23.016 --> 00:04:26.493
We will go out of our way to put
those files closer to their computers

76
00:04:26.493 --> 00:04:29.423
to optimize their ability to
read out of those buckets.

77
00:04:29.423 --> 00:04:32.815
But those are things, think about,
should you be storing,

78
00:04:32.815 --> 00:04:36.218
PDFs of the most recent bill or
something along those lines.

79
00:04:36.218 --> 00:04:39.610
If you work in the healthcare industry,
right, there's obviously

80
00:04:39.610 --> 00:04:43.422
additional concerns around S3 that you
definitely gonna need to consider.

81
00:04:43.422 --> 00:04:45.999
It's effectively a key value store.

82
00:04:45.999 --> 00:04:50.000
The key being the file name,
the value Bing the file, right?

83
00:04:50.000 --> 00:04:53.456
But you can set up directories.

84
00:04:53.456 --> 00:04:57.026
It doesn't really have directories but
it will let you think you do.

85
00:04:57.026 --> 00:05:01.316
Right, so if you call something
like Java scripts/script.js,

86
00:05:01.316 --> 00:05:05.681
the UI will show you a folder that
makes you feel better, right, but

87
00:05:05.681 --> 00:05:08.070
it's effectively flat hierarchy.

88
00:05:08.070 --> 00:05:12.000
There's also a data consistency model.

89
00:05:12.000 --> 00:05:14.299
Just to keep it in mind.

90
00:05:14.299 --> 00:05:18.906
I actually literally had
an argument is a strong word

91
00:05:18.906 --> 00:05:24.144
a lively conversation about
the kind of second point here,

92
00:05:24.144 --> 00:05:28.752
which is putting stuff in
his immediate updating and

93
00:05:28.752 --> 00:05:32.858
removing objects is eventually consistent.

94
00:05:32.858 --> 00:05:37.783
This is to get you to those 11 nines of
durability they don't just put your file

95
00:05:37.783 --> 00:05:41.163
on one hard drive one place,
they put it many places and

96
00:05:41.163 --> 00:05:46.039
it might take a little bit to get all of
them off all the different places right.

97
00:05:46.039 --> 00:05:50.707
Amazon we'll see this in a little bit
when we start setting up the very first

98
00:05:50.707 --> 00:05:55.373
thing has this idea of regions right
US East 1 US West 2 so on and so forth and

99
00:05:55.373 --> 00:05:58.209
in those are availabilities zones, right?

100
00:05:58.209 --> 00:06:02.989
One of my co workers literally designed
the East Coast ones and US East one and

101
00:06:02.989 --> 00:06:06.285
us these two are different power grids for
a reason.

102
00:06:06.285 --> 00:06:07.866
For us, we are gonna distribute
our files everywhere.

103
00:06:07.866 --> 00:06:12.341
So where you get a little bit of that kind
of reliability from distribution for free,

104
00:06:12.341 --> 00:06:15.492
but for back end engineers like
if a region goes down below to

105
00:06:15.492 --> 00:06:19.171
flip over to a clone of a database
somewhere else makes a ton of sense.

106
00:06:19.171 --> 00:06:22.170
But anyway, updated removing
objects is eventually consistent.

107
00:06:22.170 --> 00:06:24.641
You could update an object and
get a slightly old one for a second.

108
00:06:24.641 --> 00:06:28.042
What we're talking about
this is literally,

109
00:06:28.042 --> 00:06:31.103
that happens very infrequently if ever.

110
00:06:31.103 --> 00:06:36.358
But it is one of those things
that just put in your brain.

111
00:06:36.358 --> 00:06:40.894
If it does happen to you in some case that
is technically what it says on the label

112
00:06:40.894 --> 00:06:43.050
that that could happen in this case.

113
00:06:43.050 --> 00:06:46.814
What is the cost to uploading S3 is free.

114
00:06:46.814 --> 00:06:52.341
You get charged for storage and
you get charged for request.

115
00:06:52.341 --> 00:06:57.487
So putting things into S3, totally free,
keeping them in S3 will cost you.

116
00:06:57.487 --> 00:07:02.451
But we saw at the free tier we got
five gigabytes of free storage and

117
00:07:02.451 --> 00:07:05.082
then we get charged for requests.

118
00:07:05.082 --> 00:07:09.682
But we will figure out how to
limit the requests to our bucket

119
00:07:09.682 --> 00:07:14.017
as much as possible by the end
of this using CloudFront.

120
00:07:14.017 --> 00:07:17.219
If you're really worried about
there's different tiers as well.

121
00:07:17.219 --> 00:07:20.037
There is, hey, this is normal
stuff I wanna put in a bucket,

122
00:07:20.037 --> 00:07:23.691
then there's another tier called
infrequently access which is kinda you're

123
00:07:23.691 --> 00:07:26.200
gonna put in a bucket that's
on a high shelf, right.

124
00:07:26.200 --> 00:07:30.647
Cost you less to keep it up there, but
might cost more to go get it, right?

125
00:07:30.647 --> 00:07:33.486
Then there's all the way
down to intelligent tearing

126
00:07:33.486 --> 00:07:36.022
which will move it to different places for
you.

127
00:07:36.022 --> 00:07:37.101
And finally glacier,

128
00:07:37.101 --> 00:07:40.123
which is we will put that in
the freezer out in the shed, right.

129
00:07:40.123 --> 00:07:42.336
And so you can kind of for
different use cases.

130
00:07:42.336 --> 00:07:46.304
You can also like find cheaper
options as well, but for

131
00:07:46.304 --> 00:07:51.480
the general size of our client side
application since I said that $13

132
00:07:51.480 --> 00:07:56.758
included me never cleaning stuff out
of the bucket ever, right ,yeah.

133
00:07:56.758 --> 00:08:01.318
&gt;&gt; As far as the difference between
cost of uploading and cost of storage my

134
00:08:01.318 --> 00:08:06.336
understanding it right that if you
theoretically uploaded files, files that

135
00:08:06.336 --> 00:08:11.156
were zero byte size would cost you nothing
&gt;&gt; Yeah I mean upload like they will

136
00:08:11.156 --> 00:08:15.526
take your data to charge you for
storing it later they will happily

137
00:08:15.526 --> 00:08:19.579
encourage you to upload as much
as you possibly want to them so

138
00:08:19.579 --> 00:08:24.522
that you will never think about migrating
it to one of their competitors.

139
00:08:24.522 --> 00:08:30.949
[LAUGH] It sounds very generous, but
it's also purposeful in that case.

140
00:08:30.949 --> 00:08:37.614
So with that,
one of the occasional limitations is

141
00:08:37.614 --> 00:08:43.043
that bucket names need to both be unique.

142
00:08:43.043 --> 00:08:48.266
And then for some of the kinda
early stages of this if you're

143
00:08:48.266 --> 00:08:54.130
gonna use it to host a website then
it needs to be the same as the URL.

144
00:08:54.130 --> 00:08:55.347
I think with CloudFront,
we avoid that eventually but

145
00:08:55.347 --> 00:08:56.516
there will be kind of intermediary period,
right?

146
00:08:56.516 --> 00:08:58.818
So it means you have to
go through a fun dance.

147
00:08:58.818 --> 00:09:02.973
You need a domain name and you need
a bucket, they both have to be unique.

148
00:09:02.973 --> 00:09:05.648
Probably figure that out
kind of simultaneously.

149
00:09:05.648 --> 00:09:10.405
Most of the cases that won't be
a big problem because of that, but

150
00:09:10.405 --> 00:09:14.644
there's another reason why
we're gonna switch gears for

151
00:09:14.644 --> 00:09:17.859
a slight moment and we'll go back into S3.

152
00:09:17.859 --> 00:09:21.736
So we're gonna switch gears talk a little
bit about registering a domain name with

153
00:09:21.736 --> 00:09:22.365
route 53.

154
00:09:22.365 --> 00:09:25.537
And the reason that we're going
to do that now before we get

155
00:09:25.537 --> 00:09:30.016
all the way into using S3 is one, we wanna
know that the domain name is available.

156
00:09:30.016 --> 00:09:34.391
Two it takes a little
bit of time to set up.

157
00:09:34.391 --> 00:09:39.499
So mostly gonna do it now and then jump
back into some of the S3 stuff and

158
00:09:39.499 --> 00:09:42.963
get that all set up to buy
ourselves some time for

159
00:09:42.963 --> 00:09:47.836
the domain to get fully registered
everything along those lines.

160
00:09:47.836 --> 00:09:49.513
So we're gonna do that now as well.

161
00:09:49.513 --> 00:09:54.531
So we will revisit,
we are actually using S3 shortly.

162
00:09:54.531 --> 00:09:57.815
But first we are going to make sure
that we can have both a bucket and

163
00:09:57.815 --> 00:10:01.480
a domain name that work together and
also give it some time for that to cook

