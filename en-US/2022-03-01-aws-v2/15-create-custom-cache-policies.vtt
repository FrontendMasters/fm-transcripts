WEBVTT

1
00:00:00.000 --> 00:00:04.791
Eventually we're gonna have to deal with
the fact of what happens if you push bad

2
00:00:04.791 --> 00:00:05.790
code, right?

3
00:00:05.790 --> 00:00:09.200
Or what happens if you push better code?

4
00:00:09.200 --> 00:00:11.160
Right, you deploy the feature.

5
00:00:11.160 --> 00:00:12.990
Now you deployed a new feature.

6
00:00:12.990 --> 00:00:14.546
We look at the cash policies.

7
00:00:17.172 --> 00:00:18.310
We can go ahead and hit at it.

8
00:00:20.320 --> 00:00:25.548
So we're redirecting, we can actually go
in here and view this caching policy.

9
00:00:28.539 --> 00:00:30.962
And you can see basically
the default setting.

10
00:00:30.962 --> 00:00:32.580
So minimum cache links for a second.

11
00:00:34.130 --> 00:00:38.861
Maximum, I don't know, that's a year,
and by default cache everything that

12
00:00:38.861 --> 00:00:43.840
goes through all those CloudFront
edge nodes for 24 hours, right?

13
00:00:43.840 --> 00:00:46.100
So what happens if you push
a new version on the page?

14
00:00:47.110 --> 00:00:52.590
And yeah, you've directly
fingerprinted your bundles, right.

15
00:00:52.590 --> 00:00:58.790
But it has the same file name no
matter what, or index or HTML, right.

16
00:00:58.790 --> 00:01:03.708
They load index.HTML that
loads the right main.shot.js.

17
00:01:03.708 --> 00:01:07.242
So whatever your build system spits out,
so that becomes tricky,

18
00:01:07.242 --> 00:01:09.890
which is we need to say called front.

19
00:01:09.890 --> 00:01:13.890
Forget everything you
know about index.HTML.

20
00:01:13.890 --> 00:01:16.230
There's a few ways you
can go about doing this.

21
00:01:16.230 --> 00:01:18.388
And one of my current coworkers and

22
00:01:18.388 --> 00:01:22.044
I had this discussion about
which is the right way to do it.

23
00:01:22.044 --> 00:01:27.707
I think probably both have different sets
of trade offs and you get to choose.

24
00:01:27.707 --> 00:01:32.222
For him he wanted to basically
have index.HTML have

25
00:01:32.222 --> 00:01:35.620
a much shorter time to live, right?

26
00:01:35.620 --> 00:01:39.130
Figure everyone who visits
is caching that one, right?

27
00:01:39.130 --> 00:01:43.540
So give it a five second,
a minute, five minute TTL, right?

28
00:01:43.540 --> 00:01:47.190
So basically, when we say those edge
nodes, the first person who gets an edge

29
00:01:47.190 --> 00:01:50.896
note that doesn't have the file pays the
cost to go all the way back to Amazon and

30
00:01:50.896 --> 00:01:53.260
get it, and then everyone else keeps it.

31
00:01:53.260 --> 00:01:57.360
CloudFront by default will say 24 hours,
right?

32
00:01:57.360 --> 00:02:02.365
And then we can play this whole game
again, and the one person will eat

33
00:02:02.365 --> 00:02:07.300
the time to go all the way back to
Virginia to go get the file, right.

34
00:02:07.300 --> 00:02:13.211
So he kept a low one for index.HTML and
then very high for the rest of the files.

35
00:02:13.211 --> 00:02:16.523
Because that's the only ones changing,
everything else is fingerprinted so

36
00:02:16.523 --> 00:02:17.231
on and so forth.

37
00:02:17.231 --> 00:02:20.570
I kept it high for everything, right?

38
00:02:20.570 --> 00:02:25.260
I'll show you the one weird trick
to get around this in a second.

39
00:02:25.260 --> 00:02:27.520
So, you can change these
as much as you want.

40
00:02:27.520 --> 00:02:32.975
The other thing that you can do
is if you go over here to back

41
00:02:32.975 --> 00:02:39.290
to the behaviors menu,
this is the default behavior, right?

42
00:02:39.290 --> 00:02:46.650
You could create a new behavior for
/index.HTML, right?

43
00:02:46.650 --> 00:02:50.615
And you could say all the same things.

44
00:02:50.615 --> 00:02:54.490
And you could set a different policy for
just that file.

45
00:02:54.490 --> 00:02:59.082
Or you might say that, okay, for
the index page, I want this, for

46
00:02:59.082 --> 00:03:05.020
images though keeping for a year, we know
that there's no way to replace an image.

47
00:03:05.020 --> 00:03:09.448
And our app hypothetical is whatever the
app you're working on is, you might say,

48
00:03:09.448 --> 00:03:10.333
okay, images or

49
00:03:10.333 --> 00:03:14.078
anything in the images directory,
or that goes to the images bucket.

50
00:03:14.078 --> 00:03:17.051
You might keep your images
in a different bucket.

51
00:03:17.051 --> 00:03:18.877
That we know that there's
no way to replace them,

52
00:03:18.877 --> 00:03:20.590
there's only a way to upload.

53
00:03:20.590 --> 00:03:22.567
Fine, cool, keep that for a lot longer.

54
00:03:22.567 --> 00:03:28.316
A lot of this will depend on the nature of
your application and that's totally fine.

55
00:03:28.316 --> 00:03:31.403
And you can figure that all out for
yourself, but

56
00:03:31.403 --> 00:03:36.528
you can actually have different sets of
cash rules for different kinds of files.

57
00:03:36.528 --> 00:03:38.010
And you can set those up here as well.

58
00:03:38.010 --> 00:03:41.339
So you can, if you really want to,
you can create a different one,

59
00:03:41.339 --> 00:03:44.787
if you are on the belief system that
you should have a different one for

60
00:03:44.787 --> 00:03:47.720
index.HTML, that will
totally work as well.

61
00:03:47.720 --> 00:03:52.619
But let's come l down to the idea that
okay, let's say you set it to 10 minutes,

62
00:03:52.619 --> 00:03:56.410
but somebody pushed bad code,
totally wasn't you.

63
00:03:56.410 --> 00:03:59.060
I always say, yeah, who pushed it but
who also code reviewed it?

64
00:03:59.060 --> 00:04:04.937
Because, it's usually the first person who
blames whoever wrote the code is the one

65
00:04:04.937 --> 00:04:10.174
who code reviewed it and even five or
10 minutes is not acceptable to you.

66
00:04:10.174 --> 00:04:14.230
In that case, you have something
that we like to call invalidations.

67
00:04:14.230 --> 00:04:16.312
That's not just a mean thing
you say to your friends,

68
00:04:16.312 --> 00:04:19.030
that is a thing that means
something in CloudFront.

69
00:04:19.030 --> 00:04:23.443
So an invalidation is basically
a way to tell CloudFront,

70
00:04:23.443 --> 00:04:27.050
forget everything you
know about that file.

71
00:04:27.050 --> 00:04:30.370
I don't care if the time
to live was five years.

72
00:04:30.370 --> 00:04:33.923
Don't the have five year time to live but
you don't I mean, just forget it.

73
00:04:33.923 --> 00:04:36.846
[LAUGH] Wipe it from your memory
like the movie Men in Black,

74
00:04:36.846 --> 00:04:40.310
right where they see an alien and
then it's just totally gone.

75
00:04:40.310 --> 00:04:42.480
That's basically what we
wanna do to CloudFront.

76
00:04:43.940 --> 00:04:45.860
And I made a joke about this earlier.

77
00:04:45.860 --> 00:04:48.370
One of the ways we can do this,
we can hit Create invalidation.

78
00:04:50.020 --> 00:04:55.809
And you can type in all of the different
paths that you should forget about.

79
00:04:55.809 --> 00:05:01.361
The limitation here is
you get 1,000 of them for

80
00:05:01.361 --> 00:05:07.292
free after that it's fractions
of a fraction of a cent,

81
00:05:07.292 --> 00:05:11.582
right or something along those lines but

82
00:05:11.582 --> 00:05:18.420
the interesting part is that
you can use wild cards, right?

83
00:05:18.420 --> 00:05:25.117
So, firing off 10 invalidations for 10
different file paths is 10 invalidations.

84
00:05:26.626 --> 00:05:31.170
That's one, right?

85
00:05:31.170 --> 00:05:36.816
So what I'm gonna do is we'll go ahead and
that still hasn't applied,

86
00:05:36.816 --> 00:05:41.500
we will investigate it that
is still broken in a second.

87
00:05:41.500 --> 00:05:48.330
We will go and investigate that cuz that
should work but, yeah, things are weird.

88
00:05:48.330 --> 00:05:50.567
So we'll take the site and

89
00:05:50.567 --> 00:05:56.165
I'm gonna open it up in my browser
real quick, or my code editor.

90
00:06:00.912 --> 00:06:04.788
And I'm gonna search for the word indigo.

91
00:06:09.667 --> 00:06:13.457
And I'm gonna change all
instances of indigo to pink.

92
00:06:17.342 --> 00:06:21.513
All right, and at that point,

93
00:06:21.513 --> 00:06:25.693
I'm gonna do an npm run build.

94
00:06:25.693 --> 00:06:30.555
I'm just gonna effectively deploy
a new version of it, and we'll do

95
00:06:35.103 --> 00:06:38.169
All right,
unless I've messed something up.

96
00:06:41.859 --> 00:06:43.267
Still blue.

97
00:06:43.267 --> 00:06:46.814
I also should have validated with local
host to see if I actually turned it pink

98
00:06:46.814 --> 00:06:50.328
and save the file but I'm willing to
believe that's not my issue right now.

99
00:06:50.328 --> 00:06:51.094
But it's blue.

100
00:06:51.094 --> 00:06:51.866
Why is it blue?

101
00:06:51.866 --> 00:06:55.360
Because CloudFront has it cached for
24 hours, right?

102
00:06:55.360 --> 00:06:57.390
So go ahead and
we'll make an invalidation.

103
00:06:58.590 --> 00:07:00.262
Like we threatened to earlier.

104
00:07:01.736 --> 00:07:04.649
We'll say invalidate everything.

105
00:07:04.649 --> 00:07:06.120
And now you see it's in progress.

106
00:07:06.120 --> 00:07:08.680
Like I said, it's going to 300 edge nodes.

107
00:07:10.160 --> 00:07:14.647
It's really cool, right, that this works
at all if it takes a little bit of time,

108
00:07:14.647 --> 00:07:16.027
we're totally into it.

109
00:07:16.027 --> 00:07:20.125
Right, I, if you think about that you
just spun up the ability to distribute

110
00:07:20.125 --> 00:07:24.030
application around the world and yeah,
sure we can make some fun of the UI

111
00:07:24.030 --> 00:07:27.256
sometimes, still pretty cool
technology under the hood.

112
00:07:27.256 --> 00:07:31.112
I am impatient so I am gonna hit Refresh.

113
00:07:31.112 --> 00:07:34.030
You see now it's pink cuz
I invalidated the cache.

114
00:07:34.030 --> 00:07:36.540
I got a fresh version, so on and so forth.

115
00:07:38.600 --> 00:07:40.320
So, that is invalidation.

116
00:07:40.320 --> 00:07:45.320
One of the places that we're gonna use it
is when we build a CI/CD pipeline, right?

117
00:07:45.320 --> 00:07:50.368
That way, we're gonna say,
when you deploy a fresh version,

118
00:07:50.368 --> 00:07:53.223
what I want you to do is to go ahead and

119
00:07:53.223 --> 00:07:58.290
send out an validation when
the new version has been uploaded.

