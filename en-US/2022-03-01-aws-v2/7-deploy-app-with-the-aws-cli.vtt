WEBVTT

1
00:00:00.200 --> 00:00:04.417
One thing that we discovered as a group
is that if you do have two profiles,

2
00:00:04.417 --> 00:00:08.034
you can do a dash dash profile
equals whatever the other one is.

3
00:00:08.034 --> 00:00:10.430
In this case,
I'm just going to use the default one.

4
00:00:10.430 --> 00:00:14.258
But if you do happen to have two running
just make sure using that flag if you're

5
00:00:14.258 --> 00:00:15.019
using that on.

6
00:00:15.019 --> 00:00:16.673
&gt;&gt; Does it actually have the equals in it?

7
00:00:16.673 --> 00:00:19.160
&gt;&gt; It doesn't have equals,
it's just dash dash profile sleep.

8
00:00:20.510 --> 00:00:24.940
I on the other hand just blew my old
accounts away for the purposes of this so

9
00:00:24.940 --> 00:00:27.882
I won't need to cuz I live fast and
dangerously.

10
00:00:27.882 --> 00:00:32.053
So, like I said, I, if you count on
the repo we have a repo it's great,

11
00:00:32.053 --> 00:00:34.224
you can use it, that's wonderful.

12
00:00:34.224 --> 00:00:38.277
If you have any other application
that you would like to deploy,

13
00:00:38.277 --> 00:00:42.780
you can use that, this course is
agnostic to what you wanna deploy, and

14
00:00:42.780 --> 00:00:46.240
more about how you actually
go about deploying it.

15
00:00:46.240 --> 00:00:51.281
But I have effectively a create react
app with just enough react router

16
00:00:51.281 --> 00:00:57.120
in it to cause some problems with not
having static files for everything.

17
00:00:57.120 --> 00:01:03.580
And other than that, some Lorem Ipsum,
there's not a lot going on.

18
00:01:03.580 --> 00:01:04.784
So, we've got that in place.

19
00:01:04.784 --> 00:01:07.940
Now you have this aws
command on your command line.

20
00:01:08.970 --> 00:01:13.351
It'll work with almost all the services,
in this case, you want for s3.

21
00:01:13.351 --> 00:01:18.730
There's actually ls like there
is in bash or what have you.

22
00:01:18.730 --> 00:01:25.757
Which point I could say, okay, show me the
contents of s3:// was superawesome.click.

23
00:01:32.285 --> 00:01:36.804
And you can see the one file
from today is in there,

24
00:01:36.804 --> 00:01:41.120
that index.html that I had uploaded,
right?

25
00:01:43.440 --> 00:01:49.020
Sleep, now, we could want to put
some other stuff in there as well.

26
00:01:49.020 --> 00:01:53.363
There's a bunch of different commands
that you can play around with, but

27
00:01:53.363 --> 00:01:57.773
we're gonna go with we're in an app,
we're ready to rock and roll, and so

28
00:01:57.773 --> 00:02:04.050
we'll do an npm run build And that's
again, this is just create reactive.

29
00:02:04.050 --> 00:02:07.246
In my case, if there's another
application you wanna build,

30
00:02:07.246 --> 00:02:09.610
your npm script might
be slightly different.

31
00:02:09.610 --> 00:02:14.060
This is the one that builds this file and
it will go ahead and spit it out.

32
00:02:14.060 --> 00:02:18.910
And it says look,
the build folder is ready to be deployed.

33
00:02:18.910 --> 00:02:24.650
Well, that's incredibly convenient for
I, I'm ready to deploy it.

34
00:02:24.650 --> 00:02:31.934
And so from the command line,
we can do aws s3 and

35
00:02:31.934 --> 00:02:37.264
we'll copy that build directory to

36
00:02:37.264 --> 00:02:42.603
s3://superawesome.click.

37
00:02:42.603 --> 00:02:43.368
In my case but

38
00:02:43.368 --> 00:02:48.300
whatever your bucket name is you do not
have permission to deploy my bucket.

39
00:02:48.300 --> 00:02:50.926
Because my policy,
you don't you get stuff on my bucket.

40
00:02:50.926 --> 00:02:53.334
Now put stuff in my bucket.

41
00:02:53.334 --> 00:02:57.190
I'm gonna do -- recursive in this case.

42
00:02:57.190 --> 00:03:00.001
I don't think there are sub
directories in a build file, but

43
00:03:00.001 --> 00:03:03.210
that will iterate down all
of the different folders.

44
00:03:03.210 --> 00:03:06.401
I'm gonna just for the people in the room,
move that up slightly.

45
00:03:06.401 --> 00:03:07.458
So that's what we have.

46
00:03:07.458 --> 00:03:08.554
And then I'm gonna hit the button.

47
00:03:11.206 --> 00:03:14.321
And you can see that it
is going through and

48
00:03:14.321 --> 00:03:19.665
uploading all of my various assets
that are in that directory up to s3.

49
00:03:19.665 --> 00:03:21.354
&gt;&gt; What node version are you on?

50
00:03:21.354 --> 00:03:24.519
&gt;&gt; Probably, the current LTS, 16.

51
00:03:27.131 --> 00:03:32.265
That shouldn't matter, so
don't think that it's changed effectively,

52
00:03:32.265 --> 00:03:37.092
yeah, I guess for building
the application it might actually matter.

53
00:03:37.092 --> 00:03:41.909
But for the actual aws cli,
we've got that in place and

54
00:03:41.909 --> 00:03:45.169
now we can go back over to our bucket.

55
00:03:45.169 --> 00:03:49.718
Go to s3 bucket here as
well back over objects,

56
00:03:49.718 --> 00:03:56.049
give that page a refresh, And

57
00:03:56.049 --> 00:04:03.071
you can see that I have all
of the files that I uploaded.

58
00:04:03.071 --> 00:04:07.862
In this case, you can also see that the
index.html is from the same time as all

59
00:04:07.862 --> 00:04:12.359
the rest of the files, which means it
overrode that when we generate when

60
00:04:12.359 --> 00:04:15.930
we upload it by hand and
it is also twice the size.

61
00:04:15.930 --> 00:04:21.050
So now I should be able to go
back down and revisit the site.

62
00:04:21.050 --> 00:04:22.641
Here it is.

63
00:04:22.641 --> 00:04:25.643
It's got a bunch of
different Lorem Ipsums,

64
00:04:25.643 --> 00:04:30.067
you can choose your favorite later
as well as a very large picture of

65
00:04:30.067 --> 00:04:35.500
the Beatles that took a few seconds to
load or a few milliseconds as well.

66
00:04:35.500 --> 00:04:37.180
Has some problems.

67
00:04:37.180 --> 00:04:39.593
You'll notice that very
angry not secure up there.

68
00:04:39.593 --> 00:04:41.700
It's not HTTPS.

69
00:04:41.700 --> 00:04:47.040
My URL leaves something to be desired,
right?

70
00:04:47.040 --> 00:04:50.229
There's some piece of this, it's

71
00:04:50.229 --> 00:04:56.833
superawesome.click.s3-website-uses-one.Am-
azonaws.com.

72
00:04:56.833 --> 00:05:02.282
Also if I go to one of these there
is client side writing notes zombie.

73
00:05:02.282 --> 00:05:05.445
If I actually hit that,
that file doesn't exist,

74
00:05:05.445 --> 00:05:09.280
the client side routing took
care of it with history API.

75
00:05:09.280 --> 00:05:13.970
If I go to that file,
it fundamentally breaks the web, right?

76
00:05:13.970 --> 00:05:17.250
And we talked a little bit before
how s3 was a key value store.

77
00:05:17.250 --> 00:05:18.219
You'd be like,

78
00:05:18.219 --> 00:05:22.660
there's no such key called whatever
that is /notes/zombie in this case.

79
00:05:23.760 --> 00:05:28.288
So we should fix that at some point
because our URL should probably work.

80
00:05:28.288 --> 00:05:30.858
At the very least that's
not the greatest error but

81
00:05:30.858 --> 00:05:32.899
they should also just work in this case.

82
00:05:32.899 --> 00:05:36.760
So we should have some of
that in place as well.

83
00:05:38.300 --> 00:05:42.544
So, there's a lot to be desired here,
is also currently hosted out of uses one.

84
00:05:42.544 --> 00:05:48.221
So, if you are pulling this
particular URL up from a place that

85
00:05:48.221 --> 00:05:53.680
is not close to Virginia,
it will get progressively longer

86
00:05:53.680 --> 00:05:59.750
to load depending on how far
away you are from that location.

87
00:05:59.750 --> 00:06:04.036
So, we have the ability now
to build an application,

88
00:06:04.036 --> 00:06:09.958
deploy it on Amazon but you rest of
our focus now is one operationalizing.

89
00:06:09.958 --> 00:06:13.196
So we're not doing it by hand, two,

90
00:06:13.196 --> 00:06:18.105
fix a bunch of problems around the HTTPS,
the routing,

91
00:06:18.105 --> 00:06:23.185
the URL itself,
the location of those pieces as well.

92
00:06:23.185 --> 00:06:28.815
That's the next piece of this is
to get all those parts in place.

