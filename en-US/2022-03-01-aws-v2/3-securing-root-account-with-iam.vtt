WEBVTT

1
00:00:00.170 --> 00:00:05.563
The primary way that you manage users in
your AWS account is something called IM,

2
00:00:05.563 --> 00:00:09.053
which I don't know that's
supposed to be clever but

3
00:00:09.053 --> 00:00:11.529
it's identity access management.

4
00:00:11.529 --> 00:00:13.630
But it also feels like I am this user.

5
00:00:14.660 --> 00:00:17.970
That could not be a potential pawn or not.

6
00:00:17.970 --> 00:00:20.108
Who knows?
So it's got simpler over the years.

7
00:00:20.108 --> 00:00:26.250
Before, you'll notice that the root
user has no API access currently, right?

8
00:00:26.250 --> 00:00:27.433
And that's good.

9
00:00:27.433 --> 00:00:32.303
That way you don't have to worry about
accidentally pushing the root users key

10
00:00:32.303 --> 00:00:33.200
up to GitHub.

11
00:00:33.200 --> 00:00:37.522
And in a public repo, exposing it
to everyone because at this moment,

12
00:00:37.522 --> 00:00:41.698
the root user does not have an API key for
you to push up into GitHub and

13
00:00:41.698 --> 00:00:43.440
exposed to everyone.

14
00:00:43.440 --> 00:00:45.120
So that's one way to solve for that.

15
00:00:45.120 --> 00:00:47.637
But you can see that there
is a security recommendation

16
00:00:47.637 --> 00:00:49.890
here that you should absolutely follow.

17
00:00:49.890 --> 00:00:55.040
And it would be irresponsible for me to
be but for us, it doesn't matter, right?

18
00:00:55.040 --> 00:00:59.935
Because if you set this up now and
you forgot about it, you'll be sad later,

19
00:00:59.935 --> 00:01:00.810
right?

20
00:01:00.810 --> 00:01:05.056
So we will go ahead and
set this piece up both for a root user and

21
00:01:05.056 --> 00:01:08.660
again later for our administrator user.

22
00:01:08.660 --> 00:01:13.820
Our goal is to set up this root
user secured as much as possible.

23
00:01:13.820 --> 00:01:17.978
And then never touch it again, right,
because that way it's there in case

24
00:01:17.978 --> 00:01:21.476
you lose somehow, so
might lose control the measure account,

25
00:01:21.476 --> 00:01:25.323
what have you we have one additional
tier but this is not the one we go.

26
00:01:25.323 --> 00:01:27.592
Writing the password on sticky notes for,
right,

27
00:01:27.592 --> 00:01:30.580
that's our regular account
that we do that with.

28
00:01:30.580 --> 00:01:33.914
So let's go ahead,
we'll add the two factor here.

29
00:01:33.914 --> 00:01:38.538
We'll kind of take that as a personal trip
together and then we will reconvene and

30
00:01:38.538 --> 00:01:42.755
talk a little bit about setting up that
administrator account and so on and

31
00:01:42.755 --> 00:01:43.590
so forth.

32
00:01:43.590 --> 00:01:48.396
One thing that we talked about during
the break was to add two factor auth

33
00:01:48.396 --> 00:01:50.649
you need some kind of mechanism.

34
00:01:50.649 --> 00:01:52.720
That could be a Yubikey.

35
00:01:52.720 --> 00:01:53.981
That could be all sorts of things.

36
00:01:53.981 --> 00:01:59.193
There are also a bunch of apps that
will store your two factor auth codes,

37
00:01:59.193 --> 00:02:01.678
Google Authenticator being one.

38
00:02:01.678 --> 00:02:06.090
I use Authy which I actually
used before I worked at Twilio,

39
00:02:06.090 --> 00:02:11.220
I think before Twilio even acquired it,
but then I worked at Twilio.

40
00:02:11.220 --> 00:02:13.705
So that is a no way.

41
00:02:13.705 --> 00:02:16.550
The reason why I use it, it's also great.

42
00:02:16.550 --> 00:02:19.520
It's just the one that I happen to use and
can vouch for, but

43
00:02:19.520 --> 00:02:24.120
I'm sure Google Authenticator and some of
the other ones are also great as well.

44
00:02:24.120 --> 00:02:26.410
So got that set up.

45
00:02:26.410 --> 00:02:31.250
And you can see that now I've got
effectively two checks, right?

46
00:02:31.250 --> 00:02:39.122
That said, I still don't
necessarily want to use this.

47
00:02:39.122 --> 00:02:41.538
User if I can avoid it, right?

48
00:02:41.538 --> 00:02:45.093
I'd rather create administrator user
that I can use for most things.

49
00:02:45.093 --> 00:02:49.877
And then eventually, as I get a little
bit more granular with the different use

50
00:02:49.877 --> 00:02:54.683
cases, I again, if I make a GitHub action
that can push my client side assets.

51
00:02:54.683 --> 00:02:59.337
It should only have permission to
push the client side assets to the.

52
00:02:59.337 --> 00:03:02.295
That's the ICD process should, right?

53
00:03:02.295 --> 00:03:06.729
So I can get really granular
with the general permissions,

54
00:03:06.729 --> 00:03:09.090
I give a very given user.

55
00:03:09.090 --> 00:03:11.869
But step one is kind of go ahead and

56
00:03:11.869 --> 00:03:15.454
create myself a new one for
me in this case.

57
00:03:15.454 --> 00:03:22.107
You can also see that there's
an account alias that you can change.

58
00:03:22.107 --> 00:03:27.617
One of the reasons you might consider
changing that, is right now for

59
00:03:27.617 --> 00:03:33.413
this account alias of 552306219397
that I have to type in,

60
00:03:33.413 --> 00:03:37.090
.signin.aws.amazon/console.

61
00:03:37.090 --> 00:03:42.036
And just go ahead and click that and hit
create, and then we'll do FCMAWS live for

62
00:03:42.036 --> 00:03:44.670
me, but for whatever you wanna do for you.

63
00:03:46.040 --> 00:03:52.546
And now you will get,
it looks like I tried that one already.

64
00:03:52.546 --> 00:03:57.563
I misspelled AWS but
that also means that I will not have

65
00:03:57.563 --> 00:04:02.580
to deal with the conflict
from the previous attempts at

66
00:04:02.580 --> 00:04:07.510
this as well,
let's all just remember that, cool.

67
00:04:08.750 --> 00:04:11.580
So once I have that,
I can go in and click Users.

68
00:04:11.580 --> 00:04:17.940
And you can see that at this moment,
there are no users to speak of.

69
00:04:17.940 --> 00:04:19.250
But I can go here I can add a user.

70
00:04:23.230 --> 00:04:27.540
Now you can give this user
any name that you want.

71
00:04:27.540 --> 00:04:32.460
For my purposes of remembering things,
I am not going to be particularly

72
00:04:32.460 --> 00:04:37.716
creative here, but yeah, you could use
your name if you wanted to whatever.

73
00:04:37.716 --> 00:04:39.910
This will be the general user for

74
00:04:39.910 --> 00:04:44.224
you the real effective
administrator/owner of the account.

75
00:04:44.224 --> 00:04:47.763
Just gonna keep it somewhat
generic at this point,

76
00:04:47.763 --> 00:04:52.056
then we have the two kinds of
access that a given user can have.

77
00:04:52.056 --> 00:04:54.260
And this is kind of interesting, right?

78
00:04:54.260 --> 00:04:58.613
So you have the programmatic access, which
remember your root user does not have,

79
00:04:58.613 --> 00:05:00.368
this is effectively API access.

80
00:05:00.368 --> 00:05:04.550
So what are some things that
we'd use the API access for?

81
00:05:04.550 --> 00:05:10.042
Well, API access right but also
the command line, AWS command line tool,

82
00:05:10.042 --> 00:05:14.068
right, which you might use to,
before we set up CICD.

83
00:05:14.068 --> 00:05:19.036
We might go ahead and just use
the command line to take our build assets

84
00:05:19.036 --> 00:05:23.590
from our local laptop and
deploy them up to production as well.

85
00:05:23.590 --> 00:05:30.300
So that's one thing that you could set
up a API access key for your root user.

86
00:05:30.300 --> 00:05:32.070
But even if you've gotten this far, and

87
00:05:32.070 --> 00:05:36.120
you're like, throwing caution to the wind
you like, I'll just use the root user.

88
00:05:36.120 --> 00:05:39.343
There is yet another reason
why you might consider putting

89
00:05:39.343 --> 00:05:42.540
together a administrator
user of some sort.

90
00:05:42.540 --> 00:05:44.040
We are gonna check both just so

91
00:05:44.040 --> 00:05:46.790
we can kind of get a sense
of what that looks like.

92
00:05:46.790 --> 00:05:50.150
Even if you so, even if you don't think
you need both, you go ahead and do that.

93
00:05:51.640 --> 00:05:56.571
So then we've got the ability to give
it a password which I'm going to

94
00:05:56.571 --> 00:05:57.970
do in this case.

95
00:05:57.970 --> 00:06:02.423
Obviously, if you were creating an account
for somebody else, you might choose to use

96
00:06:02.423 --> 00:06:05.850
like an auto generated password or
something along those lines.

97
00:06:05.850 --> 00:06:09.980
And you'd probably make them
reset it at the next sign in.

98
00:06:09.980 --> 00:06:15.059
I am going to not do that in
this case because it's just me,

99
00:06:19.985 --> 00:06:24.480
We'll go ahead and we'll figure out
what permissions this account has.

100
00:06:24.480 --> 00:06:27.004
So then we've got a few
different options for

101
00:06:27.004 --> 00:06:29.534
figuring out what this
user is allowed to do.

102
00:06:29.534 --> 00:06:32.681
As I mentioned before,
future users that we're gonna make,

103
00:06:32.681 --> 00:06:35.235
should have as little access as and
get away with.

104
00:06:35.235 --> 00:06:39.892
But somebody needs to kill the castle and
it probably we don't wanna use the root

105
00:06:39.892 --> 00:06:44.567
user, so this this account will have
what we call basic administrator access.

106
00:06:44.567 --> 00:06:48.263
Which has access to almost everything but
billing, which is why we set

107
00:06:48.263 --> 00:06:52.730
up billing back when we were the root
user, which we still presently are.

108
00:06:52.730 --> 00:06:54.230
You can add the user to a group.

109
00:06:55.240 --> 00:06:58.510
You can copy the permissions
from an existing user or

110
00:06:58.510 --> 00:07:01.646
you can attach the policies
directly to the user.

111
00:07:01.646 --> 00:07:05.037
We don't have an existing user,
so that one rules that one out.

112
00:07:05.037 --> 00:07:07.380
We'll talk a little bit
about groups later.

113
00:07:07.380 --> 00:07:11.690
Let's just put the policies we
want right on to this user.

114
00:07:11.690 --> 00:07:18.275
And there are 725 results, luckily,
the one we need is at the very top.

115
00:07:18.275 --> 00:07:22.369
[LAUGH] Right, and
that is this administrator access,

116
00:07:22.369 --> 00:07:25.930
which is the one that we
want to use in this case.

117
00:07:27.060 --> 00:07:30.346
You hit the little arrow,
you can figure out we can see in JSON,

118
00:07:30.346 --> 00:07:33.942
what it has the ability to do and
we'll write our own policies later.

119
00:07:33.942 --> 00:07:38.194
But you can basically see what
the administrator is allowed to do.

120
00:07:38.194 --> 00:07:43.890
It's allowed everything on everything,
right?

121
00:07:43.890 --> 00:07:45.659
So that is what we're
gonna use in this case.

122
00:07:45.659 --> 00:07:50.792
If you wanted to scope it down a little
bit more you could, like I said,

123
00:07:50.792 --> 00:07:56.099
for all the different things that you
would want to do there are different

124
00:07:56.099 --> 00:08:01.426
kinds of pre configured sets of policies
that you can apply to that user.

125
00:08:01.426 --> 00:08:06.424
We are going to stick with just
administrator access for now.

126
00:08:06.424 --> 00:08:08.025
Next ,we'll go to tags.

127
00:08:09.025 --> 00:08:13.015
Okay, tags are not something
we're gonna deal with today.

128
00:08:13.015 --> 00:08:14.486
Where attacks useful,

129
00:08:14.486 --> 00:08:19.620
they're basically just metadata that
you can put on anything in AWS, right?

130
00:08:19.620 --> 00:08:23.073
So tags are useful especially
as your company grows, or

131
00:08:23.073 --> 00:08:27.332
the company you already have,
like you might say, okay, this tag,

132
00:08:27.332 --> 00:08:30.650
we're gonna tag the team and
it's such an such team.

133
00:08:30.650 --> 00:08:35.410
We're gonna say the product is such and
such product, the cost center is such and

134
00:08:35.410 --> 00:08:38.980
such cost center, so
when you get that bill from Amazon, and

135
00:08:38.980 --> 00:08:43.670
somebody ran up a big tab,
you don't have to like reverse engineer.

136
00:08:43.670 --> 00:08:45.950
What ran up the costs, right?

137
00:08:45.950 --> 00:08:52.328
You can also do clever stuff with
programmatically with the API access.

138
00:08:52.328 --> 00:08:54.651
You wanna get all the resources with yeah,
okay,

139
00:08:54.651 --> 00:08:57.710
I wanna get all the resources with
a given tag, so on and so forth.

140
00:08:57.710 --> 00:09:02.945
It's just ways to annotate various
services and accounts, so you can figure

141
00:09:02.945 --> 00:09:08.570
out for either budgeting or stuff along
those lines and add that metadata.

142
00:09:08.570 --> 00:09:11.694
We don't really have a lot
to do with that right now.

143
00:09:11.694 --> 00:09:13.840
Like I said,
you look at the examples up there,

144
00:09:13.840 --> 00:09:17.040
you can add user information
like an email address.

145
00:09:17.040 --> 00:09:20.274
Job titles,
are figuring out who to yell at,

146
00:09:20.274 --> 00:09:25.227
in the case that someone ran up a bill or
something along those lines.

147
00:09:25.227 --> 00:09:29.120
Awesome, so
this is basically what we've got.

148
00:09:29.120 --> 00:09:33.437
We've got administrator user, it's
username, unsurprisingly is administrator.

149
00:09:33.437 --> 00:09:38.310
It's gonna have both programmatic access
so we can use the CLI from our computers.

150
00:09:38.310 --> 00:09:42.551
You could argue that like, if you're
making it for the team, then maybe you'd

151
00:09:42.551 --> 00:09:46.880
also make individual ones and just have
that kind of master administrator user.

152
00:09:46.880 --> 00:09:51.881
In case somebody decides that
they're rich off NFT's and

153
00:09:51.881 --> 00:09:56.881
never come back, whatever,
and let's go with something

154
00:09:56.881 --> 00:10:00.984
involving a boss but
I felt really just not fun.

155
00:10:00.984 --> 00:10:03.877
So, we've got that, we can go ahead,

156
00:10:03.877 --> 00:10:07.759
we can hit create user then
don't get carried away.

157
00:10:07.759 --> 00:10:10.540
You're like sweet.

158
00:10:11.960 --> 00:10:12.946
We got a user, yeah.

159
00:10:12.946 --> 00:10:17.478
&gt;&gt; What would you look for
to figure out if your policies

160
00:10:17.478 --> 00:10:22.860
hindering you from AWS service
if you set up different axes?

161
00:10:22.860 --> 00:10:24.884
&gt;&gt; You will get like an access
denied real fast, right?

162
00:10:24.884 --> 00:10:31.190
You will try to do something very
simple and get yelled at, right?

163
00:10:31.190 --> 00:10:34.925
I will probably at one point of time
together mess one up when I start writing

164
00:10:34.925 --> 00:10:35.705
my own by hand.

165
00:10:35.705 --> 00:10:40.938
So you will quickly get denied at which
point you will, the error messages for

166
00:10:40.938 --> 00:10:46.970
those are actually what some of the better
ones that you'll see as well, cool.

167
00:10:46.970 --> 00:10:47.891
Any questions in the room?

168
00:10:47.891 --> 00:10:51.312
All right, the screen,
do not get carried away.

169
00:10:51.312 --> 00:10:52.320
It says success.

170
00:10:52.320 --> 00:10:53.129
You think you're done.

171
00:10:54.520 --> 00:10:58.409
This is important screen,
see that secret access key,

172
00:10:58.409 --> 00:11:01.480
which I'm not gonna hit show on, your API.

173
00:11:01.480 --> 00:11:03.940
Your API Key has two parts to it.

174
00:11:03.940 --> 00:11:08.730
You have the access key ID and
the secret access key.

175
00:11:08.730 --> 00:11:12.345
Despite the fact that those names,
sound shockingly similar.

176
00:11:12.345 --> 00:11:14.260
They are very different.

177
00:11:14.260 --> 00:11:17.330
Effectively the access key ID
is kinda like your username.

178
00:11:17.330 --> 00:11:21.800
And the secret access key is kind
of like your password, right?

179
00:11:21.800 --> 00:11:26.182
But you will get to see that
secret access key exactly once.

180
00:11:26.182 --> 00:11:32.035
Right now that's somewhat of a lie, but
effectively on the screen, you will

181
00:11:32.035 --> 00:11:38.010
see there's no way to go back into
the AWS console and see it again later.

182
00:11:38.010 --> 00:11:42.105
So if you just go and hit close,
you will have to go regenerate a new one,

183
00:11:42.105 --> 00:11:44.240
not a whole new user.

184
00:11:44.240 --> 00:11:47.229
But you actually have to go into
at least root in this case,

185
00:11:47.229 --> 00:11:51.140
since or I guess as the administrator and
go generate yourself a new API key.

186
00:11:52.700 --> 00:11:55.360
So you're I'm gonna hit
the Send Email button.

187
00:11:55.360 --> 00:11:56.650
That's not even worth it.

188
00:11:56.650 --> 00:12:00.442
It opens up your email client, telling
the person that they have an account now.

189
00:12:00.442 --> 00:12:03.062
Especially if this is you,
it's not super helpful,

190
00:12:03.062 --> 00:12:07.082
it doesn't include any of the requisite
information that one would need is go talk

191
00:12:07.082 --> 00:12:11.080
to the person in charge or something
that you are the person in charge.

192
00:12:11.080 --> 00:12:16.240
So your choices are, go ahead and
hit show, which I'm not going to do.

193
00:12:16.240 --> 00:12:18.930
And then go put that in like your
password manager of choice or

194
00:12:18.930 --> 00:12:21.219
some more securely place,
somewhere encrypted.

195
00:12:21.219 --> 00:12:24.943
The other option is you
can hit download CSV,

196
00:12:24.943 --> 00:12:30.040
which is gonna download a CSV
that has this unencrypted in it.

197
00:12:30.040 --> 00:12:32.700
So like I said,
you can probably just hit show.

198
00:12:32.700 --> 00:12:37.126
In so far that I am live streaming my
screen and this account effectively has

199
00:12:37.126 --> 00:12:44.140
the keys to the castle,
I am going down with the CSV,

200
00:12:44.140 --> 00:12:50.110
with that you can go ahead and
hit close, right?

201
00:12:50.110 --> 00:12:51.493
And so,
there's your new administrator user.

202
00:12:51.493 --> 00:12:53.094
And to kind of think about the question,

203
00:12:53.094 --> 00:12:55.650
I got earlier about what happens
if you mess up the permissions.

204
00:12:55.650 --> 00:12:59.030
If you get too low, you can always
adjust the permissions, right?

205
00:12:59.030 --> 00:13:02.108
You've got the root user that has that
kind of super user access almost to

206
00:13:02.108 --> 00:13:02.770
your account.

207
00:13:02.770 --> 00:13:06.778
You can tweak and add the policies for
your administrate user or

208
00:13:06.778 --> 00:13:08.450
any of those other users.

209
00:13:08.450 --> 00:13:12.545
Like I said,
at one point if I don't do it on purpose,

210
00:13:12.545 --> 00:13:18.930
I will at least accidentally probably mess
up one of the policies and get yelled at.

211
00:13:20.240 --> 00:13:25.797
So we've got that in place from here
you can also see last activity so

212
00:13:25.797 --> 00:13:27.844
on and so forth and yeah,

213
00:13:27.844 --> 00:13:33.620
effectively at that point we're done
with this root user for the day.

214
00:13:34.650 --> 00:13:39.711
We are going to log out of
the root user and go in and

215
00:13:39.711 --> 00:13:45.531
switch over to our administrator user for
a little bit.

216
00:13:45.531 --> 00:13:49.959
So with that, you can go grab that,
you actually hit this copy button as well.

217
00:13:49.959 --> 00:13:54.856
The sign in URL, will do that and
what we will do is, we will sign out and

218
00:13:54.856 --> 00:13:59.434
we will kind of go through this
process again with our admin user.

219
00:13:59.434 --> 00:14:03.629
I'll kind of get us there and
then we'll take another quick break and

220
00:14:03.629 --> 00:14:05.520
we will add the two factor off.

221
00:14:05.520 --> 00:14:09.990
And all that kind of stuff is kind of an
exercise to go through it one more time.

222
00:14:09.990 --> 00:14:15.540
Also just to secure our accounts, and then
we will kind of pick it up from there.

223
00:14:15.540 --> 00:14:17.430
So let's go get that piece in place.

224
00:14:17.430 --> 00:14:20.032
I'm gonna go up here,
and I'm gonna sign out.

225
00:14:24.940 --> 00:14:28.606
I'll put in that URL,
you'd also type it in,

226
00:14:28.606 --> 00:14:33.592
if you missed it or your 12 digit account,
and this case I am,

227
00:14:42.234 --> 00:14:46.598
Sure, great, and so as you can see,
I kind of joked before,

228
00:14:46.598 --> 00:14:52.264
places I've been to, as the root user
have shown here, it's local storage.

229
00:14:52.264 --> 00:14:55.009
It's fine.

230
00:14:55.009 --> 00:14:57.130
But that also means that
I am is there as well.

231
00:14:57.130 --> 00:15:02.850
And you can see that it's making sure that
you did set up that MFA on every user,

232
00:15:02.850 --> 00:15:05.979
which we did because we were responsible.

233
00:15:05.979 --> 00:15:10.148
But now you should also add it for
yourself as well.

234
00:15:10.148 --> 00:15:14.118
And like I said, I would be remiss if
I said, no, no, this is just a course.

235
00:15:14.118 --> 00:15:16.240
It's cool.

236
00:15:16.240 --> 00:15:16.845
It's cool.

237
00:15:16.845 --> 00:15:20.770
It's just, not do it, let's go,
let's actually secure these accounts and

238
00:15:20.770 --> 00:15:21.432
do it right.

239
00:15:21.432 --> 00:15:24.848
We'll add the two factor auth to
our administrator accounts, and

240
00:15:24.848 --> 00:15:26.802
then we'll get rocking and rolling.

