WEBVTT

1
00:00:00.490 --> 00:00:03.717
So that would allow us
technically to solve for

2
00:00:03.717 --> 00:00:06.140
some of the issues along the way.

3
00:00:06.140 --> 00:00:11.406
Now, one of things I should point out,
because it will kinda come up in a second,

4
00:00:11.406 --> 00:00:17.330
is a whole second set of functionality
within Cloud Front for programming.

5
00:00:17.330 --> 00:00:20.880
And that one is,
you can see right here, functions.

6
00:00:20.880 --> 00:00:22.386
So lambda functions and

7
00:00:22.386 --> 00:00:26.380
CloudFront functions are different,
you're like, great.

8
00:00:27.860 --> 00:00:31.077
We'll talk about CloudFront
functions in a second.

9
00:00:31.077 --> 00:00:35.579
They are basically can do a whole
lot less for a whole lot cheaper and

10
00:00:35.579 --> 00:00:37.519
a whole lot faster, right?

11
00:00:37.519 --> 00:00:42.661
So we'll talk about those briefly,
we're gonna mostly focus

12
00:00:42.661 --> 00:00:48.969
just on the lambda edge ones, because
they're a little bit more flexible and

13
00:00:48.969 --> 00:00:53.357
most CloudFront functions
are just a subset of that.

14
00:00:53.357 --> 00:00:55.484
All right, great, fantastic.

15
00:00:55.484 --> 00:01:00.560
So we can go set those up the same way
we set up basically anything else,

16
00:01:00.560 --> 00:01:04.620
which is for any other lambda,
which is to go to lambda.

17
00:01:06.480 --> 00:01:11.544
Now, it's kinda wild like
they've radically changed

18
00:01:11.544 --> 00:01:16.640
the UI here, and
it's still a little tricky, right?

19
00:01:16.640 --> 00:01:20.481
So we can go ahead and
we can create a new function.

20
00:01:20.481 --> 00:01:24.316
Now you see that this is also
called functions here, but

21
00:01:24.316 --> 00:01:29.143
now we're in lambda instead of CloudFront,
I don't make the rules.

22
00:01:29.143 --> 00:01:35.302
So we can go to say Create function,
and we get a function name.

23
00:01:35.302 --> 00:01:40.212
We're gonna call this one
fixed security headers,

24
00:01:40.212 --> 00:01:45.577
hypothetically, that might
be a thing that we wanna do.

25
00:01:46.609 --> 00:01:51.365
We can pick a runtime, Yeah,

26
00:01:51.365 --> 00:01:56.119
seems you thought code
yumo was precarious,

27
00:01:56.119 --> 00:02:00.420
you don't want to see me do ruby.

28
00:02:00.420 --> 00:02:04.595
I used to write ruby,
I don't think I can anymore.

29
00:02:04.595 --> 00:02:07.499
Cool, so we've got that all in place.

30
00:02:07.499 --> 00:02:08.909
Awesome.

31
00:02:08.909 --> 00:02:13.745
If you needed to talk to something else
you need to give it network access we

32
00:02:13.745 --> 00:02:14.374
don't.

33
00:02:14.374 --> 00:02:17.144
We're simply gonna rewrite
a bunch of headers.

34
00:02:21.147 --> 00:02:28.600
And you can see it's thinking down there.

35
00:02:29.837 --> 00:02:33.062
I made this like booboo
which I am in us-east-2, so

36
00:02:33.062 --> 00:02:36.287
my guess, this is probably good,
I'm glad I did it,

37
00:02:36.287 --> 00:02:40.179
is if I go to add trigger,
I'm not gonna see CloudFront in here.

38
00:02:40.179 --> 00:02:44.904
Which is good because if I didn't
make that mistake and you did,

39
00:02:44.904 --> 00:02:51.110
then you would see, I don't see
CloudFront, something must be terrible.

40
00:02:51.110 --> 00:02:54.182
The other thing I probably will
not see is over an actions,

41
00:02:54.182 --> 00:02:57.420
I will not see the ability
to play to lambda at edge.

42
00:02:57.420 --> 00:03:01.553
That is because I am in us-east-2,
instead of us-east-1.

43
00:03:01.553 --> 00:03:06.933
Like I said before when in doubt we
wanna make sure we're in us-east-1 for

44
00:03:06.933 --> 00:03:09.962
a lot of the CloudFront stuff.

45
00:03:09.962 --> 00:03:14.912
So we'll go over back to lambda which I
should be in there it just takes a while,

46
00:03:14.912 --> 00:03:17.162
so we'll create a function again.

47
00:03:25.246 --> 00:03:27.316
Great.

48
00:03:34.318 --> 00:03:36.373
So give that a second to spin up.

49
00:03:36.373 --> 00:03:40.062
And now if I go to Add trigger,
I go to Select a trigger,

50
00:03:40.062 --> 00:03:42.404
I should see CloudFront shows up.

51
00:03:42.404 --> 00:03:47.182
So that's an important note, if you
don't see it it's not because I took

52
00:03:47.182 --> 00:03:51.356
away support, it's just you're
in Ohio instead of Virginia.

53
00:03:51.356 --> 00:03:56.857
Or you're on the west coast or
you're in Europe or Asia or wherever.

54
00:03:56.857 --> 00:03:59.305
So we have all those in place, so

55
00:03:59.305 --> 00:04:04.022
now I wanna select perhaps a trigger,
will say CloudFront and

56
00:04:04.022 --> 00:04:08.848
I wanna deploy a new version
function global to AWS locations.

57
00:04:08.848 --> 00:04:13.810
Now, basically, there are some
limitations, none of them are meaningful

58
00:04:13.810 --> 00:04:18.537
to us versus regular but they just want
to make sure that you know, this is

59
00:04:18.537 --> 00:04:23.602
gonna go distributed, it's not exactly
the same as one function one place.

60
00:04:23.602 --> 00:04:25.090
Cool.

61
00:04:25.090 --> 00:04:27.070
So we've got all of this,

62
00:04:27.070 --> 00:04:31.212
we don't actually have
a function to deploy just yet.

63
00:04:31.212 --> 00:04:35.136
But this is where you have to make
sure that you set one of these,

64
00:04:36.197 --> 00:04:40.991
Also we all had one cache behavior in our
case and this should be our CloudFront

65
00:04:40.991 --> 00:04:44.113
distribution, and
then you would acknowledge.

66
00:04:44.113 --> 00:04:48.213
But let's go actually write
a function this case.

67
00:04:48.213 --> 00:04:55.084
Now this one the one that we get by
default will be basically saying listen,

68
00:04:55.084 --> 00:05:02.844
the event that comes in respond to it with
a 200 saying hello from lambda, right?

69
00:05:02.844 --> 00:05:07.896
Don't even check us 3,
forget everything, I know what to do,

70
00:05:07.896 --> 00:05:13.616
I'm a web server, everything is great,
just say hello no matter what.

71
00:05:13.616 --> 00:05:16.216
And honestly, you know what?

72
00:05:16.216 --> 00:05:18.782
Let's deploy it, right?

73
00:05:20.038 --> 00:05:24.787
We go ahead, you can test it out by giving

74
00:05:24.787 --> 00:05:29.956
a test event,
any kind of just JSON object,

75
00:05:29.956 --> 00:05:35.214
there's a bunch of templates to have.

76
00:05:35.214 --> 00:05:39.921
You can have a CloudFront access request,
I don't think these are super helpful.

77
00:05:39.921 --> 00:05:42.595
But you got the event, you got a response.

78
00:05:42.595 --> 00:05:46.403
We can go ahead, we can save,
I just hit Command + S,

79
00:05:46.403 --> 00:05:48.704
I think you can do file save too.

80
00:05:48.704 --> 00:05:51.528
And then we can hit Deploy.

81
00:05:51.528 --> 00:05:55.040
Now that is deployed to lambda,

82
00:05:55.040 --> 00:05:59.730
it is not deployed to CloudFront, I know.

83
00:06:01.600 --> 00:06:05.325
Here we go to actions, and
once it is deployed into lambda,

84
00:06:05.325 --> 00:06:08.313
we can then send it out
to the CloudFront nodes.

85
00:06:08.313 --> 00:06:11.166
Lambda@Edge, we're gonna
say that this is a,

86
00:06:11.166 --> 00:06:15.420
we're doing viewer request so
it doesn't get cache invalidation.

87
00:06:15.420 --> 00:06:19.299
So before you check lambda,
just respond with this hello, or

88
00:06:19.299 --> 00:06:23.791
before you check CloudFront just
respond with this hello in this case.

89
00:06:23.791 --> 00:06:27.699
And we acknowledged I'm defining
new versus function and

90
00:06:27.699 --> 00:06:32.335
we published it, this is like the,
you could break things, right?

91
00:06:32.335 --> 00:06:35.637
And we know what we're
doing at this point.

92
00:06:35.637 --> 00:06:38.150
This is a fun little edge case.

93
00:06:38.150 --> 00:06:43.094
Your function execution role
must be assumable by edge lambda

94
00:06:43.094 --> 00:06:45.100
AWS service principle.

95
00:06:47.220 --> 00:06:55.365
So what we need to do is actually go ahead
and edit the policy document in this case.

96
00:06:55.365 --> 00:06:59.700
Because the default one that
it makes is only for lambda,

97
00:06:59.700 --> 00:07:05.530
Amazon AWS.com it didn't
automatically do this piece for you.

98
00:07:05.530 --> 00:07:09.820
The issue as I mentioned before,
is we got yelled at like, hey,

99
00:07:09.820 --> 00:07:13.403
you don't necessarily have the role for
doing that.

100
00:07:13.403 --> 00:07:16.901
Because I made one the wrong region
I actually have two roles and

101
00:07:16.901 --> 00:07:21.441
I'm not entirely sure which one it is,
so I'll just do it twice.

102
00:07:21.441 --> 00:07:24.418
Which is we got these trust relationships.

103
00:07:26.782 --> 00:07:29.034
And we'll go ahead and edit it.

104
00:07:29.034 --> 00:07:33.102
And it's basically what it said before,
which is, hey,

105
00:07:33.102 --> 00:07:38.177
you said we didn't have permission for
edge lambda.amazonaws.com.

106
00:07:38.177 --> 00:07:42.735
And it made this,
you notice that I didn't make this file so

107
00:07:42.735 --> 00:07:45.934
I don't know why I'm getting yelled at.

108
00:07:45.934 --> 00:07:50.304
But we can go ahead and just say,
okay, cool, making an array.

109
00:07:54.290 --> 00:08:00.900
And we'll set the trust relationship
is both lambda.aws.com,

110
00:08:00.900 --> 00:08:04.328
amazonaws.com and edge lambda.

111
00:08:04.328 --> 00:08:07.030
I will copy this as I have to do
it twice since I made a booboo.

112
00:08:09.480 --> 00:08:11.080
&gt;&gt; Could you show again
where you got to that?

113
00:08:11.080 --> 00:08:13.536
&gt;&gt; Yes, I will literally.

114
00:08:15.209 --> 00:08:20.461
So in IAM, we go to Roles and
then I have these two,

115
00:08:20.461 --> 00:08:26.091
then we click on the role
under Trust relationships,

116
00:08:26.091 --> 00:08:29.610
we hit Edit trust relationship.

117
00:08:31.080 --> 00:08:33.510
&gt;&gt; So if we don't have those roles?

118
00:08:33.510 --> 00:08:36.340
&gt;&gt; Yeah, the first time you wanted to
play should make them on your behalf.

119
00:08:36.340 --> 00:08:42.728
So if we hit Deploy once it should go
ahead, set most of everything up for

120
00:08:42.728 --> 00:08:46.678
you, but not enough to be helpful, right?

121
00:08:51.362 --> 00:08:52.902
As well.

122
00:08:52.902 --> 00:08:58.222
You notice that we could hit Deploy and
then it went up there to the new version,

123
00:08:58.222 --> 00:09:01.123
it was only that kinda
special drop down for

124
00:09:01.123 --> 00:09:04.770
deploy to lambda at edge that
we got the issue before.

125
00:09:06.420 --> 00:09:11.901
So we can make that a viewer request
because it's kind of our dummy version

126
00:09:12.949 --> 00:09:18.091
Let's see, does it take a second,
I might have to, you know what it is?

127
00:09:18.091 --> 00:09:24.494
Watch what happens if I refresh
the page And I click it again.

128
00:09:34.034 --> 00:09:37.726
Even if you fix it,
you don't refresh the page,

129
00:09:37.726 --> 00:09:41.610
they cached it somehow [LAUGH] and
it doesn't work.

130
00:09:41.610 --> 00:09:45.875
But if you refresh the page,
it's the old like, did you turn it off and

131
00:09:45.875 --> 00:09:47.860
turn it back on again?

132
00:09:47.860 --> 00:09:50.631
Cuz then it totally works.

133
00:09:51.805 --> 00:09:56.313
All right, cool, so
if I've done everything right,

134
00:09:56.313 --> 00:09:59.790
I should have broken my page, right?

135
00:09:59.790 --> 00:10:04.209
We should get that hello from lambda,
Let's go to the core one,

136
00:10:04.209 --> 00:10:07.500
it might not have fully deployed yet.

137
00:10:07.500 --> 00:10:10.367
Like the one time I want my page
to have broken, it's like no, no,

138
00:10:10.367 --> 00:10:12.172
here's the yellow version of your page.

139
00:10:12.172 --> 00:10:14.122
So it could still be deploying for
a moment.

140
00:10:14.122 --> 00:10:17.235
While we buy ourselves some time
as it goes to all the edge nodes,

141
00:10:17.235 --> 00:10:20.766
let's talk about how to get rid of
that in case you make a booboo, right?

142
00:10:20.766 --> 00:10:24.316
Cuz that was an intentional booboo that
we're gonna have to get rid of, so

143
00:10:24.316 --> 00:10:25.929
we'll go ahead and check it out.

144
00:10:31.324 --> 00:10:36.993
Go back into CloudFront,
I was still deploying as you could see.

145
00:10:36.993 --> 00:10:40.542
Remember, before we kind
of skipped there was

146
00:10:40.542 --> 00:10:44.920
all of the different functions
that we had along the way.

147
00:10:46.130 --> 00:10:51.572
We can go ahead and
we can find that in there as well,

148
00:10:51.572 --> 00:10:58.380
trying to do memory thinking
sort of behaviors Yep.

149
00:11:00.080 --> 00:11:04.898
So you can see on viewer requests,
we have a lambda edge function that

150
00:11:04.898 --> 00:11:09.898
has been registered, that is the one
that we created in us-east-1.

151
00:11:09.898 --> 00:11:10.815
That's just, yeah.

152
00:11:10.815 --> 00:11:15.268
Fix security header,
you can replace that with another one or

153
00:11:15.268 --> 00:11:18.692
version one is that one
that we hit Deploy once,

154
00:11:18.692 --> 00:11:23.750
you can roll it back to a previous
version, so on and so forth.

155
00:11:23.750 --> 00:11:30.810
If you needed to stop, you can hit
No association and go for it, right?

156
00:11:31.930 --> 00:11:34.050
Did it break my site yet?

157
00:11:36.000 --> 00:11:39.708
Okay, we got at least got an arrow, which
means our function is totally working,

158
00:11:39.708 --> 00:11:44.250
it just failed validation, which is super
interesting for the one that they gave us.

159
00:11:44.250 --> 00:11:46.716
But let's go ahead and
actually put in a helpful one.

