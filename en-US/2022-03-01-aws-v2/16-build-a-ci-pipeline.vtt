WEBVTT

1
00:00:00.280 --> 00:00:08.066
Now, you can imagine a world where
putting your administrator access key and

2
00:00:08.066 --> 00:00:12.153
secret key and trusting GitHub with it.

3
00:00:12.153 --> 00:00:15.350
It's probably not the best, not to say
that Git GitHub is not trustworthy.

4
00:00:16.610 --> 00:00:18.990
But it's the internet, right?

5
00:00:18.990 --> 00:00:23.735
And if you put in that key to be able to
do all the command line stuff we're doing

6
00:00:23.735 --> 00:00:24.907
from our laptops.

7
00:00:24.907 --> 00:00:31.200
And something happens because stuff
happens, that's not a good look, right?

8
00:00:31.200 --> 00:00:36.024
And so what we wanna do is we
wanna create a user with a policy

9
00:00:36.024 --> 00:00:41.046
that has access to the bare minimum
that we would need to build

10
00:00:41.046 --> 00:00:45.810
a CICD pipeline,
which is predominantly like, cool.

11
00:00:45.810 --> 00:00:48.660
You should be able to like
put stuff in that bucket.

12
00:00:48.660 --> 00:00:52.762
And you should be able to issue in
validations if that's the like spiritual

13
00:00:52.762 --> 00:00:54.820
path that you went down.

14
00:00:54.820 --> 00:00:57.410
And like, that's it, right?

15
00:00:57.410 --> 00:00:59.658
Even, that's not great if you are.

16
00:00:59.658 --> 00:01:01.296
If you get GitHub gets hacked,

17
00:01:01.296 --> 00:01:04.600
cuz they could theoretical
push that bucket with that.

18
00:01:04.600 --> 00:01:07.053
But hopefully like in a big enough hack,

19
00:01:07.053 --> 00:01:10.670
you're rushing to a [LAUGH] to
get in there and fix it as well.

20
00:01:10.670 --> 00:01:12.959
And you need to mitigate it, so

21
00:01:12.959 --> 00:01:18.780
yeah the other options are yo self host
something something Jenkins have fun.

22
00:01:19.880 --> 00:01:24.159
But for now, for
our cases, this will work.

23
00:01:24.159 --> 00:01:31.460
So let's go ahead and go through the part
where we are going to create a policy.

24
00:01:31.460 --> 00:01:36.687
So let's go back into I am in this case.

25
00:01:36.687 --> 00:01:38.771
Let's see which one I don't
need my S3 book anymore.

26
00:01:38.771 --> 00:01:43.975
We will use that tab,

27
00:01:43.975 --> 00:01:46.870
all right?

28
00:01:46.870 --> 00:01:50.709
We will go ahead and
we are going to create a brand new policy,

29
00:01:50.709 --> 00:01:53.129
which is unique for our C I C D process.

30
00:01:54.960 --> 00:02:00.685
So, is there one of the 915 that are
existing maybe does this I don't think so.

31
00:02:00.685 --> 00:02:07.121
But like, I accept the possibility
that of 915 of them.

32
00:02:07.121 --> 00:02:08.970
Maybe there's one that
does something similar.

33
00:02:11.220 --> 00:02:13.901
So hit create policy.

34
00:02:13.901 --> 00:02:18.832
Okay, so now we get a little visual
editor and choose a service.

35
00:02:18.832 --> 00:02:22.140
There's lots of them,
let's say cloud front.

36
00:02:24.435 --> 00:02:28.942
Let's just look at cloud that's the number
of things in AWS that start with Cloud.

37
00:02:32.134 --> 00:02:34.015
So, naming things, it's hard.

38
00:02:34.015 --> 00:02:37.995
[LAUGH] CloudFront, it does two things
that were basically set up cache

39
00:02:37.995 --> 00:02:41.600
invalidation on something
that's named with the cloud.

40
00:02:41.600 --> 00:02:45.896
Naming things and cache invalidation are
two of the hardest problems in computer

41
00:02:45.896 --> 00:02:47.550
science and off by one errors.

42
00:02:48.550 --> 00:02:52.540
Okay, so we don't want to give it
all Cloudfront actions, all right?

43
00:02:52.540 --> 00:02:58.963
We just want to give it the ability for
creating invalidations.

44
00:03:02.468 --> 00:03:04.408
All right, and then which one?

45
00:03:09.793 --> 00:03:14.588
Let's see, that is the CloudFront
in the distribution ID.

46
00:03:14.588 --> 00:03:18.979
I need to go back and get this is not one
of the ones that is going to manually fill

47
00:03:18.979 --> 00:03:22.559
it in for you or give you the drop
down like it didn't have 53 or

48
00:03:22.559 --> 00:03:24.744
a few other places so we get to go back.

49
00:03:24.744 --> 00:03:26.873
Now we want remember before I was like for
the o ai,

50
00:03:26.873 --> 00:03:28.873
you didn't want this one
that starts with me.

51
00:03:28.873 --> 00:03:31.154
You want the other one to
start with a capital E.

52
00:03:31.154 --> 00:03:33.733
Now you want this one that
starts with a capital E.

53
00:03:36.672 --> 00:03:40.326
Okay, so now we'll go back in here and
we'll paste that in.

54
00:03:40.326 --> 00:03:41.548
So this is kind of familiar.

55
00:03:41.548 --> 00:03:48.565
It's like this is, we're saying, Amazon
resource number for AWS cloud front.

56
00:03:48.565 --> 00:03:50.981
This is our account number that
we made in the very beginning,

57
00:03:50.981 --> 00:03:52.613
yours is obviously different than mine.

58
00:03:52.613 --> 00:03:55.224
We made in the very beginning
of the workshop for

59
00:03:55.224 --> 00:03:58.301
this distribution in which
CloudFront distribution.

60
00:03:58.301 --> 00:04:00.217
So put that one in there as well.

61
00:04:00.217 --> 00:04:02.965
And then we want to add
additional permissions.

62
00:04:05.821 --> 00:04:07.585
And we will choose a service.

63
00:04:09.553 --> 00:04:15.691
And this time we want s3,

64
00:04:15.691 --> 00:04:19.874
cool And so

65
00:04:19.874 --> 00:04:25.095
now what we want to do is for
this one we want put object

66
00:04:29.044 --> 00:04:31.942
And I believe it needs access
to list object as well.

67
00:04:35.519 --> 00:04:39.946
This bucket rather, so
you can see what's in the bucket.

68
00:04:39.946 --> 00:04:41.834
You can put stuff in
the bucket that's about it.

69
00:04:46.878 --> 00:04:50.720
All right, one selected and
one selected perfect.

70
00:04:50.720 --> 00:04:52.200
That should do the trick.

71
00:04:52.200 --> 00:04:54.255
If not,
we'll find out when we go to deploy and

72
00:04:54.255 --> 00:04:57.020
we'll get told exactly what
permission we're forgetting.

73
00:04:58.320 --> 00:05:02.910
Next the tags so we've got that in place.

74
00:05:02.910 --> 00:05:04.323
I don't see the s3 one,

75
00:05:04.323 --> 00:05:09.220
which means there's probably one
additional button that I missed.

76
00:05:09.220 --> 00:05:10.540
So I'm going to go back.

77
00:05:15.780 --> 00:05:19.285
There do we need to set the resource?

78
00:05:19.285 --> 00:05:25.196
Yeah, this one we have
to tell which bucket,

79
00:05:25.196 --> 00:05:31.272
so in this case we want
superawesome.click.

80
00:05:31.272 --> 00:05:33.529
I like that it was just
gonna let me make a policy.

81
00:05:33.529 --> 00:05:35.220
Just missing S3 completely.

82
00:05:35.220 --> 00:05:37.800
Instead of at any point,
show me an error about the issue.

83
00:05:38.980 --> 00:05:45.214
So that's great, superawesome.click.

84
00:05:45.214 --> 00:05:48.242
And this one will give it access to
everything in the bucket just like when we

85
00:05:48.242 --> 00:05:49.218
made it by hand before.

86
00:05:51.994 --> 00:05:53.902
So one of those is I believe, for

87
00:05:53.902 --> 00:05:58.770
the list bucket because it doesn't need
to know which things in the bucket.

88
00:05:58.770 --> 00:06:00.950
So we'll go ahead and create that policy.

89
00:06:00.950 --> 00:06:05.393
One of the questions we got earlier you
can see this one's got caught from s3

90
00:06:05.393 --> 00:06:08.866
It was, if you blow past
the 1000 free invalidations,

91
00:06:08.866 --> 00:06:10.959
how much did they cost beyond that?

92
00:06:10.959 --> 00:06:14.480
It is half a penny per invalidation.

93
00:06:14.480 --> 00:06:18.189
We looked it up during the break,
I said, you get 1000 out.

94
00:06:18.189 --> 00:06:22.649
To be fair, the 1000 invalidations
is spread across all of

95
00:06:22.649 --> 00:06:26.700
the CloudFront distributions
in that account, right?

96
00:06:26.700 --> 00:06:30.006
So like that is not 1000
just a distribution,

97
00:06:30.006 --> 00:06:32.780
it is 1000 across all of them.

98
00:06:32.780 --> 00:06:36.552
And like I had that conversation like
well what if we deploy more than 1000

99
00:06:36.552 --> 00:06:37.316
times a month?

100
00:06:37.316 --> 00:06:40.190
I'm like I would love that problem, right?

101
00:06:40.190 --> 00:06:44.973
Personally, but yeah, it is relatively
cheap beyond that, but that might,

102
00:06:44.973 --> 00:06:49.611
if there's some other reason why you
might be casting validations above and

103
00:06:49.611 --> 00:06:51.585
beyond just deploy on a deploy.

104
00:06:51.585 --> 00:06:56.499
Then some of the other playing
with the time to live might be

105
00:06:56.499 --> 00:07:00.230
the right choice in this case, okay?

106
00:07:00.230 --> 00:07:04.934
So we'll give this name,
we need to give the policy a name and

107
00:07:04.934 --> 00:07:09.960
we'll say like,
Build process, I don't know.

108
00:07:09.960 --> 00:07:17.340
I don't love that name, but
how about deploy static assets?

109
00:07:17.340 --> 00:07:18.150
I like that name better.

110
00:07:20.350 --> 00:07:24.273
You can give a description,
you don't necessarily have to.

111
00:07:26.132 --> 00:07:27.805
And we'll create that policy.

112
00:07:31.981 --> 00:07:32.715
All right, so

113
00:07:32.715 --> 00:07:36.888
now we have this new customer managed one
this is different than all the AWS ones.

114
00:07:36.888 --> 00:07:40.457
Now that's just a policy that is a set
of permissions that we can apply to

115
00:07:40.457 --> 00:07:41.420
different users.

116
00:07:41.420 --> 00:07:46.036
Remember when we made our
administrator before we manually

117
00:07:46.036 --> 00:07:48.446
applied a set of permissions?

118
00:07:48.446 --> 00:07:53.198
Now we have our own cert which
is deploy static assets that

119
00:07:53.198 --> 00:07:56.466
we can put on to any user that we create.

120
00:07:56.466 --> 00:08:01.089
So we need to do Is we need to create
another user different from our

121
00:08:01.089 --> 00:08:05.881
administrator whose sole job is
that can deploy to this one bucket,

122
00:08:05.881 --> 00:08:10.100
and cast invalidations
on one distribution.

123
00:08:10.100 --> 00:08:12.140
Right, yeah, still not ideal.

124
00:08:12.140 --> 00:08:13.704
We lose control of that user.

125
00:08:13.704 --> 00:08:17.540
Also, when we put it in GitHub,
we will encrypt all those things.

126
00:08:17.540 --> 00:08:24.180
But yeah, like still a risk, but the blast
area is a lot smaller in this case.

127
00:08:26.890 --> 00:08:30.890
So go to Users and
this should be somewhat familiar.

128
00:08:30.890 --> 00:08:31.758
Gonna add a user.

129
00:08:37.004 --> 00:08:39.980
This one I'll call build process.

130
00:08:39.980 --> 00:08:43.996
So this one's gonna be a little bit
different than the administrator because

131
00:08:43.996 --> 00:08:47.099
we knew what the administrator
we wanted to log in, right?

132
00:08:47.099 --> 00:08:49.194
And like play around in the console.

133
00:08:49.194 --> 00:08:54.930
Our CI CD pipeline should not be
able to log in and click buttons.

134
00:08:56.150 --> 00:08:58.411
It should only have an API key, okay?

135
00:08:58.411 --> 00:09:03.475
So we will keep access key programmatic
access turned on even then we know

136
00:09:03.475 --> 00:09:09.060
has very limited amount or will have
very limited amount of that access.

137
00:09:09.060 --> 00:09:11.314
And then it gets no password,

138
00:09:11.314 --> 00:09:15.650
right it should not be able to
log into the console at all.

139
00:09:18.987 --> 00:09:22.577
So now instead of.

140
00:09:22.577 --> 00:09:25.674
Actually we want to click
this one right here, and

141
00:09:25.674 --> 00:09:29.008
then we want to instead of
picking one of the AWS ones,

142
00:09:34.257 --> 00:09:40.654
We have our deploy static assets policy.

143
00:09:40.654 --> 00:09:42.833
So now we can apply it that one as well.

144
00:09:42.833 --> 00:09:46.312
So now we have created a user
that can only do one thing.

145
00:09:49.451 --> 00:09:53.994
We're not gonna use tags in this case and
deploy static assets.

146
00:09:56.804 --> 00:10:00.344
Right, this is again
that very arduous screen.

147
00:10:00.344 --> 00:10:03.987
If you mess this up and you just click
away from, it you will have to regenerate

148
00:10:03.987 --> 00:10:07.542
the key, which you can do on the on
the overall users as the administrator.

149
00:10:07.542 --> 00:10:12.357
So either go show yourself
that secret SSH access key,

150
00:10:12.357 --> 00:10:16.760
and copy it somewhere the time being or
in my case.

151
00:10:16.760 --> 00:10:18.113
I'm going to download the CSV and

152
00:10:18.113 --> 00:10:21.170
hope that I don't confuse it with
the other one that I downloaded earlier.

153
00:10:22.840 --> 00:10:27.520
And then, once you close this page,
there is no way to see that key again,

154
00:10:27.520 --> 00:10:30.174
unless you go ahead and regenerate that.

155
00:10:35.700 --> 00:10:37.437
Cool.

156
00:10:37.437 --> 00:10:41.844
All right, so let's see we have a user
that can now from GitHub deploy,

157
00:10:41.844 --> 00:10:44.200
the next step is we need to set that up.

