WEBVTT

1
00:00:00.130 --> 00:00:05.566
So we've got a user the next step is
we have to set GitHub up appropriately.

2
00:00:05.566 --> 00:00:10.211
There's two pieces of this,
one is writing the GitHub action and

3
00:00:10.211 --> 00:00:15.545
then two is giving away our secrets
that we created for that user.

4
00:00:15.545 --> 00:00:20.780
Now, for the most part, I have a set
of handcrafted YAML files that I bring

5
00:00:20.780 --> 00:00:26.755
to different projects as being one of
them that basically takes care of this.

6
00:00:26.755 --> 00:00:30.301
I'm gonna type it out in
the next little piece mostly so

7
00:00:30.301 --> 00:00:34.810
I can talk about each piece and
give us time to reflect on it.

8
00:00:34.810 --> 00:00:38.070
This is in the notes I
dropped in the chat as well.

9
00:00:38.070 --> 00:00:42.730
I would probably just copy and paste it.

10
00:00:42.730 --> 00:00:46.272
The one other thing is
you've got the AWS CLI, and

11
00:00:46.272 --> 00:00:50.250
you need to get your distribution
from somewhere else.

12
00:00:50.250 --> 00:00:55.340
You can actually run this to see all
of your CloudFront distributions.

13
00:00:55.340 --> 00:00:58.721
Since this new account,
you'd likely have one.

14
00:00:58.721 --> 00:01:04.535
So that will get you that e, q whatever
distribution ID that you had before but

15
00:01:04.535 --> 00:01:09.030
I will go ahead and
kind of pull this in to my code base.

16
00:01:09.030 --> 00:01:12.836
And then we can kind of talk about
it as I type it but like I said,

17
00:01:12.836 --> 00:01:16.660
the chance of me messing something
up slightly along the way.

18
00:01:16.660 --> 00:01:19.151
So you'll have to let me know if you
see me make an obvious typo while

19
00:01:19.151 --> 00:01:20.250
I'm chatting.

20
00:01:20.250 --> 00:01:24.449
But we can talk about each of
the different pieces of this as we go

21
00:01:24.449 --> 00:01:25.630
through it.

22
00:01:25.630 --> 00:01:27.190
It's all good, okay.

23
00:01:28.570 --> 00:01:32.730
So you can, there's two ways
you can go about doing this.

24
00:01:32.730 --> 00:01:37.625
You go into GitHub And

25
00:01:37.625 --> 00:01:42.278
let's actually bring this,
we'll go over here,

26
00:01:44.841 --> 00:01:51.272
And we'll go to actions, and
you can set up a workflow for yourself.

27
00:01:53.660 --> 00:01:59.597
And let's go ahead and let's make
the font bigger for everyone involved.

28
00:01:59.597 --> 00:02:02.215
If it doesn't let me do that,
then I'll do in my text editor.

29
00:02:08.949 --> 00:02:15.094
Okay, so your GitHub workflows live in
a directory called .github/workflows,

30
00:02:15.094 --> 00:02:19.320
and you need at least one
called your main.yml, right?

31
00:02:19.320 --> 00:02:23.240
So if you have more than one, I have one
for the main kind of deployment process.

32
00:02:23.240 --> 00:02:26.870
I have one that just does linting and
prettier formatting and stuff like that.

33
00:02:26.870 --> 00:02:30.447
I have one my TypeScript
projects that will go ahead and

34
00:02:30.447 --> 00:02:33.650
run the TypeScript checker,
so on and so forth.

35
00:02:33.650 --> 00:02:36.920
But you need to have at least
one that is named main.

36
00:02:36.920 --> 00:02:45.550
And they give you kind of a basic one
in this case to start with, right?

37
00:02:45.550 --> 00:02:49.329
Again, like the active deployment
might not be my main one but for

38
00:02:49.329 --> 00:02:52.294
the purposes of our time together,
it is, right?

39
00:02:52.294 --> 00:02:58.020
So you might have the one that runs your
tests as the main one that should go off.

40
00:02:58.020 --> 00:02:59.130
So on and so forth, right?

41
00:02:59.130 --> 00:03:02.900
You have one that runs your ciphertext,
one that runs you jest unit tests.

42
00:03:02.900 --> 00:03:07.058
One that does a TypeScript checking
basically everything that you don't want

43
00:03:07.058 --> 00:03:10.720
to do manually when you or one of
your friends opens up a pull request.

44
00:03:12.550 --> 00:03:15.686
So we'll name this one

45
00:03:17.577 --> 00:03:21.870
Deploy website.

46
00:03:21.870 --> 00:03:25.640
One careful thing for us is we don't
wanna do it on pull requests, right?

47
00:03:25.640 --> 00:03:28.200
So, this is when should it happen, right?

48
00:03:28.200 --> 00:03:32.180
So yeah, anytime we push to main,
absolutely.

49
00:03:32.180 --> 00:03:36.070
We do wanna run the test whenever somebody
opens up a pull request against main.

50
00:03:36.070 --> 00:03:40.240
But we do not want to deploy
the website on a pull request.

51
00:03:40.240 --> 00:03:43.970
So this one we will get rid of.

52
00:03:45.140 --> 00:03:49.671
So now, whenever we push to main,
we want to do

53
00:03:49.671 --> 00:03:55.170
the rest of this, That was kind of cool.

54
00:03:55.170 --> 00:03:59.360
You can run it directly
from the actions tab, sure.

55
00:04:01.320 --> 00:04:05.196
Okay, so jobs, we have this idea
that we want to deploy, and

56
00:04:05.196 --> 00:04:08.620
it needs to run some kind of
operating system so fine.

57
00:04:09.770 --> 00:04:13.801
The other part that's given to us for free
is that it will use this GitHub action to

58
00:04:13.801 --> 00:04:15.950
check out the actual code, right?

59
00:04:15.950 --> 00:04:19.412
This is GitHub, setting up an environment,
pulling down your code.

60
00:04:19.412 --> 00:04:22.698
After this, you can basically
run different command lines and

61
00:04:22.698 --> 00:04:26.570
things like here, echo, Hello,
world, this is their default.

62
00:04:26.570 --> 00:04:28.140
One, I just hit create.

63
00:04:28.140 --> 00:04:30.303
We're not going to use most of this but

64
00:04:30.303 --> 00:04:33.950
this is kinda just showing
you the kinda steps, right?

65
00:04:33.950 --> 00:04:36.930
So users is any kind of prebuilt action.

66
00:04:36.930 --> 00:04:42.562
It turns out that not only does GitHub
have some useful ones for us, but

67
00:04:42.562 --> 00:04:47.730
also Amazon has one that they make for
configuring your AWS CLI.

68
00:04:47.730 --> 00:04:51.110
So you can do AWS stuff
inside of a GitHub action.

69
00:04:51.110 --> 00:04:54.140
So we're gonna use this
ability to check out the code.

70
00:04:54.140 --> 00:04:57.380
But after that,
the rest of this is just more demos.

71
00:04:57.380 --> 00:04:59.130
They're just echoing a bunch of stuff.

72
00:04:59.130 --> 00:05:00.320
That's very cool.

73
00:05:00.320 --> 00:05:00.950
I'm happy for them.

74
00:05:00.950 --> 00:05:03.251
I don't want it.

75
00:05:03.251 --> 00:05:08.125
So for us and again, we have the version
of this kind of pre-built but

76
00:05:08.125 --> 00:05:10.743
just to step through all the pieces.

77
00:05:10.743 --> 00:05:16.140
So not only are we going
to use the GitHub checkout.

78
00:05:16.140 --> 00:05:20.486
We will also use the AWS tools as well,
right, so

79
00:05:20.486 --> 00:05:23.573
we can say we'll name this piece.

80
00:05:27.527 --> 00:05:29.341
Well, I should do that above too.

81
00:05:35.006 --> 00:05:40.350
This one will be Checkout Repository.

82
00:05:40.350 --> 00:05:44.032
And after that, we will configure AWS.

83
00:05:44.032 --> 00:05:49.870
So that will be name,
this does not get a, it's a sub-bullet.

84
00:05:49.870 --> 00:05:55.096
My live YAML, if live deploying a CDN
wasn't dangerous enough let's live YAML,

85
00:05:55.096 --> 00:05:57.077
what could possibly go wrong?

86
00:05:57.077 --> 00:06:01.930
So with that the name of the GitHub
action that we want is actually is AWS

87
00:06:01.930 --> 00:06:06.140
actions and it's open source
code you can go look at it.

88
00:06:06.140 --> 00:06:11.045
As well,
which is configure-aws-credentials@v1.

89
00:06:11.045 --> 00:06:16.280
Okay so now,
it will configure that access key,

90
00:06:16.280 --> 00:06:21.768
and a secret access ID, so
you can run AWS command so

91
00:06:21.768 --> 00:06:26.257
that new build process user that we made.

92
00:06:26.257 --> 00:06:33.660
But we need to tell it where to
get that information from, right?

93
00:06:33.660 --> 00:06:35.030
We have not put this into GitHub yet.

94
00:06:35.030 --> 00:06:36.570
We will do that in a second.

95
00:06:36.570 --> 00:06:38.740
But we're gonna put it in
environment variables.

96
00:06:38.740 --> 00:06:43.377
We just basically need to tell this tool
what environment variables it should go

97
00:06:43.377 --> 00:06:45.570
looking for to plug in these values.

98
00:06:45.570 --> 00:06:49.157
So we're gonna say for the configure

99
00:06:49.157 --> 00:06:54.133
aws part it's gonna use this
action AWS has made for

100
00:06:54.133 --> 00:06:58.994
us and
well say with the aws-access-key-id and

101
00:06:58.994 --> 00:07:04.793
then you can interpolate values
in here using this syntax.

102
00:07:04.793 --> 00:07:09.536
So we'll say secrets dot and
we're gonna have to

103
00:07:09.536 --> 00:07:14.985
provide this in a second,
this is not some magic value.

104
00:07:14.985 --> 00:07:20.186
This is like hey GitHub workflow I'm
going to provide you something that

105
00:07:20.186 --> 00:07:25.056
I'm gonna call AWS ACCESS KEY go
get that encrypted value, right?

106
00:07:25.056 --> 00:07:29.442
But that's what you're going
to tell AWS is our access key.

107
00:07:29.442 --> 00:07:35.705
So go grab that, then the next one

108
00:07:35.705 --> 00:07:41.307
is the AWS secret access key,

109
00:07:44.619 --> 00:07:48.113
Which we will call
AWS_SECRET_ ACCESS_KEY so

110
00:07:48.113 --> 00:07:51.272
obvious second value and then what region.

111
00:07:51.272 --> 00:07:55.924
Those are the things when you run
AWS configure before that you

112
00:07:55.924 --> 00:07:57.634
paste it in manually.

113
00:07:57.634 --> 00:08:03.622
But your the whole idea of this build
process is to take you out of the picture.

114
00:08:03.622 --> 00:08:09.399
So in this case we will go ahead and
this one that will now be aws-region,

115
00:08:14.277 --> 00:08:16.580
And you can pass it as a variable.

116
00:08:16.580 --> 00:08:21.489
Or you can hard code it in, it is up to
you if you think you are gonna reuse it

117
00:08:21.489 --> 00:08:26.400
with different values make it a variable
this is clearly not a secret that

118
00:08:26.400 --> 00:08:29.480
we need to encrypt but we could, right?

119
00:08:29.480 --> 00:08:30.450
It's up to you.

120
00:08:30.450 --> 00:08:31.779
I am not in this case.

121
00:08:31.779 --> 00:08:35.134
Mostly just to stick to what,
that I provided you and

122
00:08:35.134 --> 00:08:36.821
we keep it the way I had it.

123
00:08:36.821 --> 00:08:38.912
So this is now set to us-east-1.

124
00:08:38.912 --> 00:08:43.647
I don't actually think there's a duplicate
mapping clearly it's an old error.

125
00:08:43.647 --> 00:08:47.767
So we've got that in place so
now that we'll configure the AWS CLI.

126
00:08:47.767 --> 00:08:49.490
That's the next piece.

127
00:08:49.490 --> 00:08:53.360
Now before you saw the parts that we
deleted we're just running bash commands,

128
00:08:53.360 --> 00:08:54.930
was just running echo, right?

129
00:08:54.930 --> 00:08:59.227
And we saw, that we were able
to deploy our application S3,

130
00:08:59.227 --> 00:09:01.260
using the AWS command line.

131
00:09:01.260 --> 00:09:06.147
So at this point, all we're doing,
is pulling that logic that we had

132
00:09:06.147 --> 00:09:10.192
the ability to install dependencies,
do NPM run build,

133
00:09:10.192 --> 00:09:15.355
do that AWS S3, CP, yada, yada,
yada, and to push everything else.

134
00:09:15.355 --> 00:09:20.252
The one additional command that
we're gonna issue is the creating

135
00:09:20.252 --> 00:09:21.980
an invalidation.

136
00:09:21.980 --> 00:09:25.340
Again, like if you chose to just
set a short TTL that's fine too.

137
00:09:25.340 --> 00:09:30.090
I am going to set it out there as well.

138
00:09:30.090 --> 00:09:34.025
So at this point we'll do another step,

139
00:09:34.025 --> 00:09:38.885
which that step will be named,
I don't nee caps,

140
00:09:38.885 --> 00:09:44.120
Install Modules with dependencies or
what have you.

141
00:09:44.120 --> 00:09:49.860
And that just say like,
we know how to do that.

142
00:09:49.860 --> 00:09:50.740
You can do NPM install.

143
00:09:50.740 --> 00:09:54.868
But you can also do npm ci,
which is a version that will try to cache,

144
00:09:54.868 --> 00:09:59.430
it's a very similar version npm install
but for the purposes optimized for

145
00:09:59.430 --> 00:10:01.370
CI CD pipelines.

146
00:10:01.370 --> 00:10:02.732
So we've got that in place, and

147
00:10:02.732 --> 00:10:05.320
then we saw before that we
need to build the application.

148
00:10:05.320 --> 00:10:08.766
So we'll say build application.

149
00:10:11.391 --> 00:10:13.660
And could I try to jam them
into the same command?

150
00:10:13.660 --> 00:10:18.350
I totally could but then I'm really gonna
suffer when I have to debug later, right?

151
00:10:18.350 --> 00:10:20.045
So we'll do npm run build.

152
00:10:21.948 --> 00:10:26.187
Awesome, and
now we wanna deploy to S 3, right?

153
00:10:32.767 --> 00:10:37.625
And that will just run aws s3

154
00:10:37.625 --> 00:10:42.485
we'll sync it just slightly

155
00:10:42.485 --> 00:10:48.820
different ./build s3://.

156
00:10:48.820 --> 00:10:53.012
Now you could hard code in your bucket it
was a private repo that's probably fine

157
00:10:53.012 --> 00:10:56.520
because the bucket is not the same
as your secret access key.

158
00:10:56.520 --> 00:11:01.416
But I don't even really wanna even
though I've exposed that in my bucket

159
00:11:01.416 --> 00:11:03.550
over the last five hours.

160
00:11:03.550 --> 00:11:08.539
I'm gonna pass that in as a variable
as well unlike us-east-1,

161
00:11:08.539 --> 00:11:10.688
but that's kinda up to you.

162
00:11:20.316 --> 00:11:24.430
I love line got moved I
have in install modules.

163
00:11:24.430 --> 00:11:29.537
So we've got that in place and
then we'll do secrets let's

164
00:11:29.537 --> 00:11:34.760
call this one BUCKET_NAME,
bucket ID, whatever as well.

165
00:11:34.760 --> 00:11:37.892
And then finally we want to create
that CloudFront and validation

166
00:11:47.728 --> 00:11:51.230
Run and
this is gonna be aws CloudFront, so

167
00:11:51.230 --> 00:11:54.941
the other one is aws s3,
is aws CloudFront.

168
00:11:54.941 --> 00:11:58.443
And the command is create invalidation,

169
00:11:58.443 --> 00:12:02.253
and then you gotta give
it a distribution id.

170
00:12:09.640 --> 00:12:17.510
And that will be in my
case secrets.DISTRIBUTION.

171
00:12:20.586 --> 00:12:24.162
ID and then tell it what paths.

172
00:12:26.509 --> 00:12:29.750
In my case, I was doing the star
slash just to validate everything.

173
00:12:31.060 --> 00:12:33.320
Awesome, so we've got all that in place.

174
00:12:33.320 --> 00:12:36.480
Now you could just invalidate
index.HTML if you wanted to.

175
00:12:36.480 --> 00:12:38.467
But if there were images that got built,

176
00:12:38.467 --> 00:12:42.290
if it was like a Gatsby project that
maybe like it's a little more nuanced.

177
00:12:42.290 --> 00:12:45.810
You can choose to refine
this as much as you see fit.

178
00:12:45.810 --> 00:12:48.215
For the purposes of just
a general use case,

179
00:12:48.215 --> 00:12:52.765
I might start very broad coz thinking
you've invalidated things that you haven't

180
00:12:52.765 --> 00:12:55.360
could also be somewhat problematic.

181
00:12:55.360 --> 00:12:57.509
And this is our workflow in this case.

182
00:13:00.100 --> 00:13:04.740
So we should be able to commit it.

183
00:13:06.500 --> 00:13:07.681
Commit this new file.

184
00:13:11.613 --> 00:13:13.230
Now we have an action, it should run.

185
00:13:13.230 --> 00:13:18.099
Now it will theoretically deploy a version
of my site that will be mostly the same.

186
00:13:18.099 --> 00:13:21.090
So as you kind of this will fail,
it will fail, why?

187
00:13:22.590 --> 00:13:25.195
I told you to access all these secrets
I never told you what the secrets were.

188
00:13:25.195 --> 00:13:27.230
[LAUGH] Right?

189
00:13:27.230 --> 00:13:30.905
So I'm gonna add in the secrets and
then we're going to take a quick break and

190
00:13:30.905 --> 00:13:34.710
your job is to change something about
the page, change it from pink to yellow.

191
00:13:34.710 --> 00:13:37.220
Change it from pink, back to indigo.

192
00:13:37.220 --> 00:13:41.018
Do whatever you want change it and
then we will kind of deploy it and

193
00:13:41.018 --> 00:13:43.210
see that our process works.

194
00:13:43.210 --> 00:13:46.440
Yeah, like I said credentials
cannot be loaded.

195
00:13:46.440 --> 00:13:51.246
So let's put that in and then we'll
go ahead and we will adjust that and

196
00:13:51.246 --> 00:13:52.310
send it along.

197
00:13:53.900 --> 00:13:57.883
So for the settings for the repo,
you go to this tab here called Secrets.

198
00:14:00.618 --> 00:14:03.630
And there are no secrets
in this repository.

199
00:14:03.630 --> 00:14:05.150
We're amongst friends here.

200
00:14:05.150 --> 00:14:07.100
Currently, you can go add the secret.

201
00:14:07.100 --> 00:14:09.556
So ones we need to add the AWS access key,

202
00:14:09.556 --> 00:14:13.250
the basic elements we call out
in that build process itself.

203
00:14:13.250 --> 00:14:15.580
We're gonna take a quick break to do it.

204
00:14:15.580 --> 00:14:19.146
So I'm not live streaming my
access key all over the place, but

205
00:14:19.146 --> 00:14:22.750
we want to add in the AWS access key,
the AWS secret key.

206
00:14:22.750 --> 00:14:26.390
The Bucket ID, and
then the distribution ID.

207
00:14:27.640 --> 00:14:31.942
Cool, so let's take about 5 minutes and
we'll do that and then we'll see

208
00:14:31.942 --> 00:14:37.190
if our and try after you have it in place,
change your code changes something else.

209
00:14:37.190 --> 00:14:38.080
Change a word in it.

210
00:14:38.080 --> 00:14:39.030
I don't care what you do.

211
00:14:39.030 --> 00:14:42.270
Just verify that it works
the way you think it's going to.

212
00:14:42.270 --> 00:14:46.318
I plugged in all my secrets One time
in front of everyone in the room,

213
00:14:46.318 --> 00:14:48.440
I think I was fast enough.

214
00:14:48.440 --> 00:14:52.110
If not, I take no responsibility for
anything.

215
00:14:52.110 --> 00:14:53.706
So with that in place,

216
00:14:53.706 --> 00:14:58.520
I also made the changes changing
all of the pink to yellow.

217
00:14:58.520 --> 00:15:02.408
So go ahead and
have no idea what this look like,

218
00:15:02.408 --> 00:15:08.520
felt like that wasn't gonna win me
any graphic design awards anyway.

219
00:15:08.520 --> 00:15:10.130
So I think we're okay.

220
00:15:10.130 --> 00:15:16.082
So I will push that up to GitHub which
will kick off the build process itself.

221
00:15:20.029 --> 00:15:23.025
So we can see once we have
it's not totally up yet but

222
00:15:23.025 --> 00:15:27.695
once it goes up it will run our process
which again., Just doing the same things

223
00:15:27.695 --> 00:15:31.970
that we did by hand before it will go
ahead, it will build all the assets.

224
00:15:31.970 --> 00:15:34.393
It will install it,
it will install dependencies,

225
00:15:34.393 --> 00:15:36.280
then it will build the assets.

226
00:15:36.280 --> 00:15:39.556
Then it will sync them up
with our s3 bucket and

227
00:15:39.556 --> 00:15:44.512
then it will tell CloudFront to clear
the cache and get ready for the and

228
00:15:44.512 --> 00:15:48.460
start serving out the new
hotness of my yellow website,

229
00:15:48.460 --> 00:15:51.837
as opposed to my pink
formerly Indigo website.

230
00:15:51.837 --> 00:15:55.086
So let's check this out
slow on the pushing for

231
00:15:55.086 --> 00:15:58.682
some reason I don't seem
to be able to cancel that.

232
00:15:58.682 --> 00:16:02.139
But I'll show you the last
one that I did as well.

233
00:16:02.139 --> 00:16:07.062
We can see all the steps going through,
the naming them is super helpful

234
00:16:07.062 --> 00:16:10.850
if you ever want to figure
out what went wrong, right?

235
00:16:10.850 --> 00:16:13.900
If you just had if you had a bunch of
runs in there, right or all together,

236
00:16:13.900 --> 00:16:15.560
then you have to go triage it yourself.

237
00:16:15.560 --> 00:16:18.150
But here you would actually
see what happened.

238
00:16:18.150 --> 00:16:22.845
You can see that it created
the invalidation for CloudFront,

239
00:16:22.845 --> 00:16:26.906
which I can also verify in
CloudFront itself as well as

240
00:16:26.906 --> 00:16:31.798
deploying everything just like
we run it from the command line.

241
00:16:31.798 --> 00:16:34.376
But now I never have to run it
from the command line again,

242
00:16:34.376 --> 00:16:37.670
any time a commit makes it into main
it will automatically get deployed.

243
00:16:37.670 --> 00:16:38.859
I don't think about it anymore.

244
00:16:38.859 --> 00:16:41.631
That does mean you have to be somewhat
careful in this particular use case about

245
00:16:41.631 --> 00:16:42.850
what you merge into main, right?

246
00:16:42.850 --> 00:16:45.321
Like whether you have release branches or
you can do it on other ways,

247
00:16:45.321 --> 00:16:46.312
we just did the simple one.

248
00:16:46.312 --> 00:16:47.760
This is not a workshop on GitHub actions.

249
00:16:47.760 --> 00:16:52.365
It's a workshop on just automating this
piece of the pipeline for ourselves.

250
00:16:52.365 --> 00:16:57.730
Back to my actions, we can see that's
going to go through the same process.

251
00:16:57.730 --> 00:17:00.842
We basically know how that should play out
assuming that my yellow got in there and

252
00:17:00.842 --> 00:17:02.770
I didn't mess up that last Git dance.

253
00:17:02.770 --> 00:17:05.970
We'll go through all the steps
that we saw earlier.

254
00:17:05.970 --> 00:17:10.910
And at that point, we now have
a 90% of the way their version of

255
00:17:10.910 --> 00:17:15.760
what we built for a company whose
product was making some amount

256
00:17:15.760 --> 00:17:19.970
of money I probably can't
disclose that loud.

257
00:17:19.970 --> 00:17:24.320
But worth it right and so
we've built basically the similar process

