WEBVTT

1
00:00:00.000 --> 00:00:01.275
&gt;&gt; Scott Moss: Let's keep it moving.
So no code here,

2
00:00:01.275 --> 00:00:03.240
cuz we're gonna implement that here.

3
00:00:03.240 --> 00:00:05.619
And Human in the Loop,
this is where it gets kind of fun.

4
00:00:05.619 --> 00:00:09.450
So you'll see this a lot, HITL,
that means Human in the Loop.

5
00:00:09.450 --> 00:00:13.813
You will see that a lot,
understanding Human in the Loop,

6
00:00:13.813 --> 00:00:18.277
basically, it's basically
a safety mechanism, right?

7
00:00:18.277 --> 00:00:21.350
This is how we prevent AIs
from pressing the nuke button,

8
00:00:21.350 --> 00:00:24.177
we have to say yes before
they press the nuke button.

9
00:00:24.177 --> 00:00:26.381
That's essentially what this is.

10
00:00:26.381 --> 00:00:31.204
By having a Human in the Loop, we prevent
the AIs from doing destructive things.

11
00:00:31.204 --> 00:00:33.126
So what are destructive things?

12
00:00:33.126 --> 00:00:34.286
Anything that's not a query.

13
00:00:34.286 --> 00:00:39.251
If like if you think about CRUD, the only
thing that's non-destructive in CRUD is R,

14
00:00:39.251 --> 00:00:43.754
read, everything else is destructive,
creating, updating and deleting.

15
00:00:43.754 --> 00:00:47.199
We don't want the AI creating anything,
updating anything or

16
00:00:47.199 --> 00:00:49.542
deleting anything without our approval.

17
00:00:49.542 --> 00:00:52.819
And I think from the bubble
that I live in San Francisco,

18
00:00:52.819 --> 00:00:56.585
that is what everybody's moving
towards too, of like, well,

19
00:00:56.585 --> 00:01:00.864
at first we thought AI was gonna
automate everything and be really good.

20
00:01:00.864 --> 00:01:04.576
Now we're like, we don't wanna
take the human element out of it.

21
00:01:04.576 --> 00:01:06.334
We don't wanna get rid of humans.

22
00:01:06.334 --> 00:01:09.004
We really want humans to be in here and
have full control.

23
00:01:09.004 --> 00:01:10.292
We just want the AI to augment them.

24
00:01:10.292 --> 00:01:13.300
So it's like pro-Human in the Loop now.

25
00:01:13.300 --> 00:01:13.943
It's like, that's what everyone's doing.

26
00:01:13.943 --> 00:01:16.458
I wouldn't be surprised if it's
gonna be startups that only do this.

27
00:01:16.458 --> 00:01:18.925
So this is a thing.

28
00:01:18.925 --> 00:01:22.724
And the way that that services from
a UX pattern is mostly like an approval.

29
00:01:22.724 --> 00:01:24.559
Do you approve the AI of doing this thing?

30
00:01:24.559 --> 00:01:26.208
Yes or No, essentially.

31
00:01:26.208 --> 00:01:29.896
So it's something that we
built into our system.

32
00:01:29.896 --> 00:01:33.263
I don't know, well, I'll take that back.

33
00:01:33.263 --> 00:01:36.603
I do know of other ways that people do it.

34
00:01:36.603 --> 00:01:39.015
I haven't seen people do in other ways.

35
00:01:39.015 --> 00:01:40.621
I just know that they do it that way, and

36
00:01:40.621 --> 00:01:43.848
I'm not sure how many people do it the way
that I'm gonna be showing you today.

37
00:01:43.848 --> 00:01:46.657
But Human in the Loop is
basically an approval system.

38
00:01:46.657 --> 00:01:52.101
So it's really cool because it
protects you from a legal standpoint.

39
00:01:52.101 --> 00:01:53.186
If you're creating AI,

40
00:01:53.186 --> 00:01:56.138
what can come to you like,
your AI like just spent all my money.

41
00:01:56.138 --> 00:01:59.688
And it's like, well, you would have to
have approved that, because it doesn't do

42
00:01:59.688 --> 00:02:02.689
it unless you have an approval,
just like a person wouldn't, right?

43
00:02:02.689 --> 00:02:05.155
So you have that, but also, yeah,

44
00:02:05.155 --> 00:02:10.089
it can save you money as well if
the things are just like a runaway AI, but

45
00:02:10.089 --> 00:02:14.858
also, yeah, safety mechanism to make sure,
imagine if you had an AI

46
00:02:14.858 --> 00:02:19.819
that had a tool that had delete access
to your SQL production database.

47
00:02:19.819 --> 00:02:22.623
For some reason, you made that,
I don't know why.

48
00:02:22.623 --> 00:02:26.066
And then there was no approval,
and then it hallucinated and

49
00:02:26.066 --> 00:02:29.522
somebody asked it to get ice cream,
but it did that instead.

50
00:02:29.522 --> 00:02:31.689
Okay, you just dropped
your whole database.

51
00:02:31.689 --> 00:02:37.118
So having that approval is
pretty necessary in my opinion.

52
00:02:37.118 --> 00:02:41.211
Cool, so several ways to
implement a human in a loop.

53
00:02:41.211 --> 00:02:44.300
So there's the synchronous approval,
which is what we're gonna be doing.

54
00:02:44.300 --> 00:02:49.207
So this is basically,
there is a direct pause in the execution.

55
00:02:49.207 --> 00:02:51.292
Nothing can go forward.

56
00:02:51.292 --> 00:02:56.847
The very next thing you say is gonna be
considered a response to this approval.

57
00:02:56.847 --> 00:02:58.985
There's nothing else you can do.

58
00:02:58.985 --> 00:02:59.820
You're completely blocked.

59
00:02:59.820 --> 00:03:00.724
That's what we're gonna be doing.

60
00:03:00.724 --> 00:03:03.009
I think that's the simplest way.

61
00:03:03.009 --> 00:03:05.254
But typically, the way that looks is,

62
00:03:05.254 --> 00:03:07.849
agent decides to use a protected tool or
not.

63
00:03:07.849 --> 00:03:08.811
We're actually not gonna do that.

64
00:03:08.811 --> 00:03:14.638
So we're not even gonna teach the agent
what tool needs to be protected or not.

65
00:03:14.638 --> 00:03:18.271
We're just gonna intervene
ourselves deterministically,

66
00:03:18.271 --> 00:03:22.055
because it's gonna happen 100%
of time if we do it that way.

67
00:03:22.055 --> 00:03:27.035
If we try to teach the agent which tool
needs to be protected through system

68
00:03:27.035 --> 00:03:31.066
prompts and tool descriptions,
you've got to eval that.

69
00:03:31.066 --> 00:03:34.759
It may or may not decide that this
tool that you're trying to run needs

70
00:03:34.759 --> 00:03:38.133
an approval, and then it will
still do things on accident, and

71
00:03:38.133 --> 00:03:40.568
you still might need
to manually intervene.

72
00:03:40.568 --> 00:03:43.697
&gt;&gt; Audience 1: It's the protections
of the approval if it has to

73
00:03:43.697 --> 00:03:46.635
decide if it should-
&gt;&gt; Scott Moss: Exactly, if the AI has to

74
00:03:46.635 --> 00:03:51.076
decide if he's an approval,
what happens if it doesn't decide that?

75
00:03:51.076 --> 00:03:55.937
I guess there's a benefit of
the AI knowing that there is this

76
00:03:55.937 --> 00:03:57.852
concept of approvals.

77
00:03:57.852 --> 00:04:00.975
So you might be able to do that like,
hey, there's this concept of approvals.

78
00:04:00.975 --> 00:04:04.130
You don't have to decide the approvals
are, just letting you know if you

79
00:04:04.130 --> 00:04:07.491
see a message saying not approved from
a tool call response, just know that,

80
00:04:07.491 --> 00:04:09.115
like the user didn't approve that.

81
00:04:09.115 --> 00:04:12.535
So that way it knows and it can respond
and in a way where it's not confused,

82
00:04:12.535 --> 00:04:16.170
because if you don't tell it that, and
then you respond back from a tool call and

83
00:04:16.170 --> 00:04:20.023
you're saying it's not approved, they
might be like, oops, couldn't do this,

84
00:04:20.023 --> 00:04:22.501
when, in reality,
it had no concept of an approval.

85
00:04:22.501 --> 00:04:24.788
If you told it there was an approval,
it might be like, sorry,

86
00:04:24.788 --> 00:04:26.449
I see you didn't approve that,
my bad, right?

87
00:04:26.449 --> 00:04:28.708
&gt;&gt; Audience 1: So just maintaining
the continuity of the conversation

88
00:04:28.708 --> 00:04:29.239
[CROSSTALK].

89
00:04:29.239 --> 00:04:32.977
&gt;&gt; Scott Moss: Exactly, it's like,
yeah, you got to loop this person in.

90
00:04:32.977 --> 00:04:34.238
Otherwise they know what
the hell's going on.

91
00:04:34.238 --> 00:04:36.548
It's literally like talking to a person.

92
00:04:36.548 --> 00:04:39.531
System pauses,
the human reviews are approved.

93
00:04:39.531 --> 00:04:43.819
The best thing about this system is that
your AI could send you an approval and

94
00:04:43.819 --> 00:04:48.442
then you don't interact with it for a year
and you come back and it's still waiting

95
00:04:48.442 --> 00:04:52.881
on that approval, the very next thing
you say is still gonna be that approval.

96
00:04:52.881 --> 00:04:55.423
So there is no expiration time on this.

97
00:04:55.423 --> 00:04:58.416
And that can be good or bad,
depends on your system, but

98
00:04:58.416 --> 00:05:00.531
I think that's what's cool about it.

99
00:05:00.531 --> 00:05:05.156
And then the system either executes
the action if it's approved, or

100
00:05:05.156 --> 00:05:08.356
it does not do the action
if it's not approved.

101
00:05:08.356 --> 00:05:10.397
And then the agent just
continues the conversation.

102
00:05:10.397 --> 00:05:13.090
It's like, cool, wasn't approved,
here's your answer.

103
00:05:13.090 --> 00:05:15.623
Or, it was approved, did it, got the data,

104
00:05:15.623 --> 00:05:18.508
continued to loop,
here's your answer, right?

105
00:05:18.508 --> 00:05:22.889
So you have that, asynchronous queue,
a little harder to do, but

106
00:05:22.889 --> 00:05:27.830
this is for longer running processes or
systems with multiple approvers.

107
00:05:27.830 --> 00:05:30.251
You have multiple people
that have to approve stuff.

108
00:05:30.251 --> 00:05:34.483
Agent submits an action to
an approval queue, right?

109
00:05:34.483 --> 00:05:37.096
The system continues, and
you still can talk to your agent.

110
00:05:37.096 --> 00:05:42.231
You can still do whatever you want because
there's no approval queue over here.

111
00:05:42.231 --> 00:05:45.239
This work that needs to be approved to be
done is irrelevant of the conversation

112
00:05:45.239 --> 00:05:46.525
you're having with your agent.

113
00:05:46.525 --> 00:05:47.681
They're two different things.

114
00:05:47.681 --> 00:05:50.910
It's just like, like for instance,
a document signing request.

115
00:05:50.910 --> 00:05:53.910
Maybe if you had a tool that linked
with Docusign or something like that,

116
00:05:53.910 --> 00:05:55.643
you needed someone to sign the document.

117
00:05:55.643 --> 00:05:57.062
So your agent called that tool,

118
00:05:57.062 --> 00:06:00.121
but it needed to get an approval from
three other people on your team.

119
00:06:00.121 --> 00:06:01.855
You're gonna put that on
the approval requests and

120
00:06:01.855 --> 00:06:02.990
you can still talk to your agent.

121
00:06:02.990 --> 00:06:06.356
It's not gonna block you from doing
anything like the synchronous one would,

122
00:06:06.356 --> 00:06:09.926
because you have nothing to do with this
document, or maybe you already signed, or

123
00:06:09.926 --> 00:06:10.449
whatever.

124
00:06:10.449 --> 00:06:18.349
So, the approvers process that
queue at their own convenience.

125
00:06:18.349 --> 00:06:21.872
So whatever system you have for letting
people know that they need an approval,

126
00:06:21.872 --> 00:06:25.446
whether you email them, whether they also
have agents that your agent talks to,

127
00:06:25.446 --> 00:06:28.146
whether they get a text message,
whether it's in your app.

128
00:06:28.146 --> 00:06:30.701
However, they're gonna approve
it when they get to it.

129
00:06:30.701 --> 00:06:32.881
It has nothing to do with you.

130
00:06:32.881 --> 00:06:36.363
And then once it is approved,
it happens automatically.

131
00:06:36.363 --> 00:06:41.334
It gets completed, and then the results
get fed back into the context

132
00:06:41.334 --> 00:06:44.773
of the original agent
that called the message.

133
00:06:44.773 --> 00:06:48.743
So basically it gets fed
back into the system prompt,

134
00:06:48.743 --> 00:06:54.265
this approval message that I created
a while ago, has since then been approved.

135
00:06:54.265 --> 00:06:56.417
And I see that now.

136
00:06:56.417 --> 00:06:59.067
So it might respond back
in its next message.

137
00:06:59.067 --> 00:07:00.474
I saw that you approved the thing.

138
00:07:00.474 --> 00:07:04.568
Or so and so signed the thing, just
letting you know here's an update, right?

139
00:07:04.568 --> 00:07:09.122
So it can get pretty powerful,
if you think about it, how that works.

140
00:07:09.122 --> 00:07:13.335
So you got that,
this tiered approval system.

141
00:07:13.335 --> 00:07:15.714
I put this in here because I
thought it was kind of crazy, and

142
00:07:15.714 --> 00:07:18.393
we tried to do something like this,
but we didn't really need to.

143
00:07:18.393 --> 00:07:21.724
But this is kind of like the same thing,
except for there's different tiers.

144
00:07:21.724 --> 00:07:26.117
So low-risk stuff happen
automatically because it's like yes,

145
00:07:26.117 --> 00:07:29.812
it's a destructive action,
but I don't really care.

146
00:07:29.812 --> 00:07:30.914
For instance,

147
00:07:30.914 --> 00:07:36.182
I wouldn't care if I had a tool where
my agent wrote to my notion document.

148
00:07:36.182 --> 00:07:38.429
I wouldn't care, you can do it,
you don't need my approval for that.

149
00:07:38.429 --> 00:07:40.258
Just please do it, stop asking me for

150
00:07:40.258 --> 00:07:43.687
that, but please do not send that
email off without approving that.

151
00:07:43.687 --> 00:07:45.413
So that's a little more
medium to high risk.

152
00:07:45.413 --> 00:07:46.955
So please don't do that, right?

153
00:07:46.955 --> 00:07:49.128
So you can have these different tiers.

154
00:07:49.128 --> 00:07:52.347
So a high risk one might be
like writing to the database.

155
00:07:52.347 --> 00:07:55.397
Two people have to approve that,
like a code review.

156
00:07:55.397 --> 00:07:58.451
I send it off,
it goes to approval or queue.

157
00:07:58.451 --> 00:08:02.333
It has a list of people for
when this tool is created.

158
00:08:02.333 --> 00:08:05.941
It looks up like, here's a list of people
who are authorized to approve this.

159
00:08:05.941 --> 00:08:08.945
Grab their information and
send it however you wanna send it.

160
00:08:08.945 --> 00:08:09.711
Email, text message, Slack.

161
00:08:09.711 --> 00:08:14.210
However you send your approvals, once they
approve it, then it gets executed, right?

162
00:08:14.210 --> 00:08:16.088
So there's a way to do that.

163
00:08:16.088 --> 00:08:19.419
You can even do like roles, departments.

164
00:08:19.419 --> 00:08:21.875
This thing got created, go look up.

165
00:08:21.875 --> 00:08:24.169
What role or
department's responsible for this?

166
00:08:24.169 --> 00:08:25.194
Go look that up.

167
00:08:25.194 --> 00:08:27.933
Message everybody in that role or
department,

168
00:08:27.933 --> 00:08:31.843
there's literally nothing you can't do,
which is kind of crazy.

169
00:08:31.843 --> 00:08:33.807
How do we design approval flows?

170
00:08:33.807 --> 00:08:35.447
It's basically only two things.

171
00:08:35.447 --> 00:08:37.773
What action do we want an approval for?

172
00:08:37.773 --> 00:08:41.287
How can we detect when
that action is being ran?

173
00:08:41.287 --> 00:08:45.412
In our case, stop it.

174
00:08:45.412 --> 00:08:47.730
And then the next thing is making
sure the agent doesn't break.

175
00:08:47.730 --> 00:08:52.109
Because if a tool call was made,
then if we save that in the database,

176
00:08:52.109 --> 00:08:55.145
the very next message has
to be a tool response.

177
00:08:55.145 --> 00:08:59.256
But if we're not gonna save that message
because we need to get an approval,

178
00:08:59.256 --> 00:09:00.357
then we discard it.

179
00:09:00.357 --> 00:09:02.719
So then what do we say to the user now?

180
00:09:02.719 --> 00:09:04.586
So we gotta figure out,
do we make another message?

181
00:09:04.586 --> 00:09:06.244
Do we ask them a question?

182
00:09:06.244 --> 00:09:07.382
How does that work?

183
00:09:07.382 --> 00:09:09.433
And then when you come back,

184
00:09:09.433 --> 00:09:14.913
you need to check to make sure that
they didn't leave off an approval state.

185
00:09:14.913 --> 00:09:18.194
If they're left off in an approval state,
a pending approval,

186
00:09:18.194 --> 00:09:22.402
you have to satisfy that, you also need to
check, the user can respond in any way.

187
00:09:22.402 --> 00:09:26.099
Like in our example, it's a chat app, so
there's no button that says yes or no.

188
00:09:26.099 --> 00:09:29.029
They can say, NVMD, nevermind.

189
00:09:29.029 --> 00:09:31.633
The hell does that mean?

190
00:09:31.633 --> 00:09:32.500
We don't know what that means.

191
00:09:32.500 --> 00:09:37.414
So you have to run that through an LLM to
see what the intent of their approval was

192
00:09:37.414 --> 00:09:41.375
and then figure out if they left
off in an approval state or not.

193
00:09:41.375 --> 00:09:45.515
And if they did, write the appropriate
message type to your database,

194
00:09:45.515 --> 00:09:47.868
in this case, would be a tool response.

195
00:09:47.868 --> 00:09:48.812
And then the loop continues.

196
00:09:48.812 --> 00:09:52.460
So there's there's a lot of work that
you have to do to make sure that

197
00:09:52.460 --> 00:09:56.556
it's not broken and it's a good user
experience, at least in our use case.

