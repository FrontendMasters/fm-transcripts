WEBVTT

1
00:00:00.420 --> 00:00:05.319
&gt;&gt; Scott Moss: So now that we have that,
we actually have a dashboard that we can

2
00:00:05.319 --> 00:00:09.060
go look at to visualize
these changes over time.

3
00:00:09.060 --> 00:00:11.781
So we can see a chart on whether or
not we're getting worse or

4
00:00:11.781 --> 00:00:12.930
we're getting better.

5
00:00:13.950 --> 00:00:18.473
To run that,
open up another tab in your terminal.

6
00:00:18.473 --> 00:00:21.334
cd into the experiment-viewer.

7
00:00:26.587 --> 00:00:28.965
&gt;&gt; Scott Moss: I'm sorry,
not experiment-viewer, dashboard.

8
00:00:28.965 --> 00:00:30.977
Why does it say experiment-viewer,
that's weird.

9
00:00:30.977 --> 00:00:33.715
I changed it, I never went back, okay.

10
00:00:33.715 --> 00:00:35.135
cd into the dashboard.

11
00:00:37.785 --> 00:00:42.229
And then from there,
there is a command that you can run,

12
00:00:42.229 --> 00:00:44.184
which is going to be dev.

13
00:00:44.184 --> 00:00:48.646
So you should be run npm run dev,

14
00:00:48.646 --> 00:00:52.618
that's gonna start an app.

15
00:00:52.618 --> 00:00:57.792
You can go to that app and
you'll see something like this,

16
00:00:57.792 --> 00:01:02.974
only ran it once, so
I have a score of 1, so my dot is here.

17
00:01:08.078 --> 00:01:10.938
&gt;&gt; Scott Moss: I'm going to run it again,
intentionally breaking it so

18
00:01:10.938 --> 00:01:12.307
we can see the change.

19
00:01:12.307 --> 00:01:16.810
So I'm gonna say, yeah,

20
00:01:16.810 --> 00:01:21.580
I'm gonna say hi, right?

21
00:01:21.580 --> 00:01:25.440
Or actually,
what I'll do is I'll keep this one, right?

22
00:01:25.440 --> 00:01:30.736
I'll just add some more data,
I'll add another piece of data,

23
00:01:30.736 --> 00:01:34.265
and this one will just say, all right, but

24
00:01:34.265 --> 00:01:39.050
I still expect it to call this
function for some reason.

25
00:01:39.050 --> 00:01:43.984
And actually let me make
sure that my tool call thing

26
00:01:43.984 --> 00:01:49.277
supports that so,
actually we're about to find out.

27
00:01:49.277 --> 00:01:51.777
I don't know if that supports that or
not, but we're gonna see.

28
00:01:51.777 --> 00:01:55.752
So, now I'm gonna go back
I'm gonna run it again.

29
00:01:58.759 --> 00:02:03.297
&gt;&gt; Scott Moss: Yeah it did, so, as you can
see it regressed so, previously we had

30
00:02:03.297 --> 00:02:09.173
a 1, now we have a 0.5 because one was
right and one was wrong, so that's 50%.

31
00:02:09.173 --> 00:02:14.993
So it went down 50%, so
that was a pretty dramatic loss there.

32
00:02:14.993 --> 00:02:17.004
And then this just shows
you that right there,

33
00:02:17.004 --> 00:02:19.553
so you can see the drop right
there visually on the graph.

34
00:02:19.553 --> 00:02:22.822
And this is what you would get on that,
like brain trust data.

35
00:02:22.822 --> 00:02:25.986
Obviously their product's gonna
look way better than this, but

36
00:02:25.986 --> 00:02:29.898
they give you some sort of visualization
on whether or not your thing increased or

37
00:02:29.898 --> 00:02:33.112
decreased and it'll log it out for
you like this as well.

38
00:02:33.112 --> 00:02:34.267
So you can look at it there, so

39
00:02:34.267 --> 00:02:36.752
you can look at it here in
the log when you run it.

40
00:02:36.752 --> 00:02:37.925
You can look at it visually here and

41
00:02:37.925 --> 00:02:40.342
eventually be able to
change these experiments.

42
00:02:40.342 --> 00:02:42.374
But you can also just go
to your results.JSON.

43
00:02:42.374 --> 00:02:45.691
And you can look look at them here, so

44
00:02:45.691 --> 00:02:51.024
I can see that on this first run that had,
I got back a 1.

45
00:02:51.024 --> 00:02:53.134
It totally worked, it was great.

46
00:02:53.134 --> 00:02:55.434
And then I did it again.

47
00:02:55.434 --> 00:02:58.857
I got back a 1, but I also had another
piece of data on this other one, and

48
00:02:58.857 --> 00:03:01.284
I got back a 0 on it, so
its score was point 0.5.

49
00:03:04.067 --> 00:03:05.309
So, I mean, this is just JSON,

50
00:03:05.309 --> 00:03:07.857
you can build whatever dashboard
you want based off this.

51
00:03:07.857 --> 00:03:12.396
But yeah, so couple things,
if you are running on Windows,

52
00:03:12.396 --> 00:03:16.668
trying to run these evals,
the scripts that I created for

53
00:03:16.668 --> 00:03:19.627
you are probably incompatible this.

54
00:03:19.627 --> 00:03:24.936
Where is it, this run file here that
does some foul stuff is incompatible

55
00:03:24.936 --> 00:03:29.478
with how the latest version
of node does dynamic imports.

56
00:03:29.478 --> 00:03:33.492
But no worries,
you can just do this other thing,

57
00:03:33.492 --> 00:03:38.768
which you can just run the file
directly so you can do MDX, TSX.

58
00:03:38.768 --> 00:03:43.677
TSX is like TS node, it allows you to run
TypeScript from node, if you have button,

59
00:03:43.677 --> 00:03:48.393
you can just use button too, but NPS,
TSX, and then just the path to that file.

60
00:03:48.393 --> 00:03:55.213
So in this case, it'll be evals,
experiments, and then Reddit.

61
00:03:55.213 --> 00:03:58.481
So you can just run it like this and
in my case,

62
00:03:58.481 --> 00:04:03.555
it's gonna break because it's saying
the open AI Key is not loaded and

63
00:04:03.555 --> 00:04:09.338
that's because that environment variable
gets loaded when you run my script.

64
00:04:09.338 --> 00:04:14.100
So if you're gonna run the file directly,
you would have to import

65
00:04:14.100 --> 00:04:18.791
.env at the top of every experiment,
so to import your env file.

66
00:04:18.791 --> 00:04:20.426
So that way you don't run into that error.

67
00:04:24.356 --> 00:04:26.878
&gt;&gt; Scott Moss: And then you can do
the same thing, you get the same result.

