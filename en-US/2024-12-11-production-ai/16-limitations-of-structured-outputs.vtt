WEBVTT

1
00:00:00.000 --> 00:00:02.994
&gt;&gt; Scott Moss: The thing about structured
outputs, though, is that it's hard to,

2
00:00:02.994 --> 00:00:04.272
like, you lose some things.

3
00:00:04.272 --> 00:00:06.986
Like, for instance, we haven't
done it here, but we do streaming,

4
00:00:06.986 --> 00:00:09.571
A lot of people do streaming,
where they stream tokens by tokens.

5
00:00:09.571 --> 00:00:12.380
Which, you went to Chat GPT and
you ask it a question,

6
00:00:12.380 --> 00:00:14.139
you see it just starts typing in.

7
00:00:14.139 --> 00:00:16.516
If you really watch,
it's not typing every letter, it's like,

8
00:00:16.516 --> 00:00:17.709
every token is kind of coming in.

9
00:00:17.709 --> 00:00:19.666
And if it is every letter,
they're doing that on the front end.

10
00:00:19.666 --> 00:00:24.054
But they stream every single token cuz
that's how the LLM spits stuff out,

11
00:00:24.054 --> 00:00:25.528
it spits it out by token.

12
00:00:25.528 --> 00:00:29.648
You can't really do that with structured
output, because structured output is JSON,

13
00:00:29.648 --> 00:00:31.331
so you can't render partial JSON.

14
00:00:31.331 --> 00:00:37.106
You can't call JSON dot parse on
partial JSON, it'll just break.

15
00:00:37.106 --> 00:00:40.520
JSON isn't complete until you get
the last bracket at the end, so

16
00:00:40.520 --> 00:00:41.896
you can't even parse it.

17
00:00:41.896 --> 00:00:43.338
So you lose that ability.

18
00:00:43.338 --> 00:00:47.155
I mean, you could technically still stream
it, you just can't do anything with it, or

19
00:00:47.155 --> 00:00:48.557
anything useful, I would say.

20
00:00:48.557 --> 00:00:50.464
So you lose out on some of that.

21
00:00:50.464 --> 00:00:55.743
But I think there's a lot of upside to
it so, highly recommend checking it out.

22
00:00:55.743 --> 00:00:58.194
You can also do structured
outputs with tool calling,

23
00:00:58.194 --> 00:00:59.696
which is what we've been doing.

24
00:00:59.696 --> 00:01:02.798
So I said, we've already been doing it,
that's where we've been doing it,

25
00:01:02.798 --> 00:01:05.948
is in the tool calling, which is, you
can use that for structured outputs too.

26
00:01:05.948 --> 00:01:10.272
Before structured outputs, the way I got
deterministic results from an AI was

27
00:01:10.272 --> 00:01:13.300
using the tool calling to get
the output that I wanted.

28
00:01:13.300 --> 00:01:17.080
So instead of, cuz you couldn't tell
the AI, there was JSON mode, but

29
00:01:17.080 --> 00:01:19.358
JSON mode didn't guarantee a structure.

30
00:01:19.358 --> 00:01:20.559
You couldn't give it a schema.

31
00:01:20.559 --> 00:01:24.502
It would only guarantee that it would give
you JSON, but not in any specific format.

32
00:01:24.502 --> 00:01:27.829
But the tool calling,
even before structured output,

33
00:01:27.829 --> 00:01:31.380
would always try to use those
arguments that you provided.

34
00:01:31.380 --> 00:01:35.440
So, if I wanted some structured output,
I would actually just make a tool that

35
00:01:35.440 --> 00:01:39.453
actually had the prompt in it that would
describe what I wanted this LLM to do.

36
00:01:39.453 --> 00:01:42.817
And then you can pass in
a property to the LLM that says,

37
00:01:42.817 --> 00:01:45.317
you have to use this tool no matter what.

38
00:01:45.317 --> 00:01:46.707
You must use this tool.

39
00:01:46.707 --> 00:01:49.723
So, right now this tool called Auto,

40
00:01:49.723 --> 00:01:54.924
you could just give it a name of a tool,
I forgot the exact syntax.

41
00:01:54.924 --> 00:01:59.433
I think it's like, function name,
you can give it a name of a tool, and

42
00:01:59.433 --> 00:02:04.092
it has to call that tool, and then that
way I'm forcing it to call my tool,

43
00:02:04.092 --> 00:02:06.515
which forces it to get the arguments.

44
00:02:06.515 --> 00:02:08.065
And then all I really
want is those arguments.

45
00:02:08.065 --> 00:02:09.288
That's the answer that I wanted.

46
00:02:09.288 --> 00:02:12.827
And then I won't actually respond back to
the LLM, I'll just get those arguments and

47
00:02:12.827 --> 00:02:13.672
I'm done, right?

48
00:02:13.672 --> 00:02:16.617
So that was the hack that I
did before structured outputs.

49
00:02:16.617 --> 00:02:17.857
Now you don't have to do that.

50
00:02:17.857 --> 00:02:20.008
So, pretty cool.

51
00:02:20.008 --> 00:02:22.439
Any questions on structure outputs?

52
00:02:22.439 --> 00:02:27.803
&gt;&gt; Speaker 2: They use the same logic to
use with structured outputs to guarantee

53
00:02:27.803 --> 00:02:33.469
the shape of it, like with function
calling so you can work reliably.

54
00:02:33.469 --> 00:02:34.713
&gt;&gt; Scott Moss: Yeah, it's fine tuning.

55
00:02:34.713 --> 00:02:41.165
I actually attempted to do this,
I tried to fine-tune, what was it?

56
00:02:41.165 --> 00:02:46.798
Was it 3.5, I think it was 3.5, I tried
to fine-tune 3.5 to do structure outputs.

57
00:02:46.798 --> 00:02:47.436
I got pretty close.

58
00:02:47.436 --> 00:02:48.263
It was pretty good.

59
00:02:48.263 --> 00:02:52.049
It worked like 75% of the time from zero.

60
00:02:52.049 --> 00:02:53.592
So yeah, it was pretty good.

61
00:02:53.592 --> 00:02:55.037
But, yeah, they fine-tune it.

62
00:02:55.037 --> 00:02:58.754
They have a blog post when they talk about
how they did it and stuff like that.

63
00:02:58.754 --> 00:03:02.719
But yeah, it's fine-tuned, I think
they also have like an additional step

64
00:03:02.719 --> 00:03:06.207
with the structured outputs to
guarantee that it always does that.

65
00:03:06.207 --> 00:03:10.266
And I think the joke in the community is
that they just do what Lang Chang does is

66
00:03:10.266 --> 00:03:12.959
they just check it,
[LAUGH] again and so they get it.

67
00:03:12.959 --> 00:03:18.041
Or what you would also probably do is,
you'd have a bigger LLM check

68
00:03:18.041 --> 00:03:23.319
the output of it to be like, hey,
does this output match this schema?

69
00:03:23.319 --> 00:03:25.142
And if it doesn't, you do it, right?

70
00:03:25.142 --> 00:03:29.499
[LAUGH] So there's like,
a big brother intervention type thing.

71
00:03:29.499 --> 00:03:31.902
So, yeah, I don't know,
I don't know what they do, but

72
00:03:31.902 --> 00:03:34.269
I'm guessing some combination
of some of those things.

73
00:03:34.269 --> 00:03:35.910
&gt;&gt; Speaker 2: Sure.
&gt;&gt; Scott Moss: Those people are much,

74
00:03:35.910 --> 00:03:37.053
much smarter than me.

