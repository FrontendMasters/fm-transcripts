WEBVTT

1
00:00:00.000 --> 00:00:03.876
[MUSIC]

2
00:00:03.876 --> 00:00:07.257
&gt;&gt; Justin Meyer: Given the HTML
on your page, the CSS,

3
00:00:07.257 --> 00:00:12.780
and actually the dimensions
of your browser window.

4
00:00:12.780 --> 00:00:18.849
How does the browser lay everything out,
especially the block level layout?

5
00:00:19.930 --> 00:00:22.490
Right it lays that out somehow.

6
00:00:22.490 --> 00:00:25.510
It makes this div a certain with.

7
00:00:25.510 --> 00:00:29.830
And then once the element
has been laid out,

8
00:00:29.830 --> 00:00:32.550
often it's important to know
how big that element is.

9
00:00:32.550 --> 00:00:37.150
If you're creating a slider or
something like that, you need to know

10
00:00:37.150 --> 00:00:42.420
how big this element,
what the room to slide around in, is.

11
00:00:42.420 --> 00:00:48.040
Right, so the DOM provides methods that
you can get an element's dimensions and

12
00:00:48.040 --> 00:00:49.760
location in the page.

13
00:00:53.460 --> 00:00:55.470
So the first thing.

14
00:00:55.470 --> 00:01:00.400
Yeah, I have a slider demo that basically,
when you're making widgets

15
00:01:00.400 --> 00:01:03.530
complex widgets like on the order
of something like jQuery Y,

16
00:01:03.530 --> 00:01:07.500
you typically have to read
the current dimensions of things.

17
00:01:07.500 --> 00:01:11.809
So that you make sure your slider can
move around like in the exact right area.

18
00:01:11.809 --> 00:01:16.401
I have a demo but I'm not gonna show it,
but just suffice it to say,

19
00:01:16.401 --> 00:01:20.210
when you start building
very serious widgets.

20
00:01:20.210 --> 00:01:25.200
Whatever their styles might be you should
learn to adapt to them and that's why it's

21
00:01:25.200 --> 00:01:32.120
important to understand how dimensions and
layout work in the browser.

22
00:01:32.120 --> 00:01:36.390
So let's start with the most
simple example possible.

23
00:01:36.390 --> 00:01:41.880
You've got a body element with a div
inside it that says hello world.

24
00:01:41.880 --> 00:01:43.330
And I'm gonna paint this green.

25
00:01:43.330 --> 00:01:45.740
I should have a style with green but
I couldn't fit it.

26
00:01:47.150 --> 00:01:50.540
And we're gonna start changing
some properties around on it.

27
00:01:50.540 --> 00:01:55.484
So when you first render this page, if I
give the div a background color of green,

28
00:01:55.484 --> 00:01:57.751
it would just be laid out right here.

29
00:01:57.751 --> 00:02:04.210
And this yellow represents
the default margin of the body.

30
00:02:04.210 --> 00:02:06.428
So if you open up a hello
world with a div,

31
00:02:06.428 --> 00:02:10.820
you'll see that it doesn't quite extend
all the way to the outside of the page.

32
00:02:12.190 --> 00:02:16.890
Then if I were to give this
element a width of 30 pixels and

33
00:02:16.890 --> 00:02:20.010
a height of 30 pixels,
it would then take on that dimension.

34
00:02:21.900 --> 00:02:26.960
And if I were to give it a padding,
this padding would be the same color,

35
00:02:26.960 --> 00:02:28.100
they'd be the same color green.

36
00:02:28.100 --> 00:02:32.393
I just change the color green
to illustrate that padding

37
00:02:32.393 --> 00:02:34.685
goes around the width of the.

38
00:02:34.685 --> 00:02:41.830
So if I give a pixel width of 30
pixels and a padding of four pixels.

39
00:02:41.830 --> 00:02:47.550
The total size of the element would
look like it was 38 pixels big, right?

40
00:02:47.550 --> 00:02:53.130
With the default box sizing
of content box, padding and

41
00:02:53.130 --> 00:02:57.820
border and margin is laid outside
of the width of the element.

42
00:02:59.940 --> 00:03:04.060
So if I gave it a border of four pixels,
the border be added around.

43
00:03:04.060 --> 00:03:08.600
And if I gave it a margin
of 10 pixels on the top and

44
00:03:08.600 --> 00:03:14.116
bottom, and three pixels on the sides,
it would be laid out like that.

45
00:03:14.116 --> 00:03:18.400
And that's a little strange too, so
one thing to know is vertical margins

46
00:03:18.400 --> 00:03:24.680
are collapsed but horizontal
margins push up against each other.

47
00:03:24.680 --> 00:03:30.630
So you can see here that
the margin is 10 pixels so

48
00:03:30.630 --> 00:03:33.350
it's gonna be 10 pixels
away from the top but

49
00:03:33.350 --> 00:03:39.060
the margin distance here would be eight
plus three pixels, 11 pixels, all right?

50
00:03:39.060 --> 00:03:44.668
So it doesn't collapse the margins this
direction which is a little strange to me,

51
00:03:44.668 --> 00:03:50.358
but that's how the the DOM works.
&gt;&gt; Justin Meyer: Now I

52
00:03:50.358 --> 00:03:56.965
had a whole spiel here but it can take
a while so I'm just going to skip it.

53
00:03:56.965 --> 00:03:59.355
[LAUGH] This is how layout happens and

54
00:03:59.355 --> 00:04:03.160
just to say on a high
level layout happens.

55
00:04:03.160 --> 00:04:05.230
Horizontal dimensions
are calculated first and

56
00:04:05.230 --> 00:04:07.900
then vertical dimensions
are calculated second, but

57
00:04:07.900 --> 00:04:12.400
I'm gonna skip over that,
it's just not worth explaining right now.

58
00:04:14.220 --> 00:04:16.080
If I have time at the end
I'll come back to it.

59
00:04:17.960 --> 00:04:20.810
So the DOM, once it's laid everything out,

60
00:04:20.810 --> 00:04:26.740
gives you some information about
the dimensions of elements in the page.

61
00:04:26.740 --> 00:04:28.660
There's properties that you can read.

62
00:04:28.660 --> 00:04:32.160
Such as an element's offsetHeight and
offsetWidth.

63
00:04:32.160 --> 00:04:36.990
That gives you the element's
dimensions from border to border,

64
00:04:36.990 --> 00:04:40.039
vertical border and
horizontal border to border.

65
00:04:41.320 --> 00:04:43.780
It also gives you a clientWidth and
clientHeight.

66
00:04:43.780 --> 00:04:46.400
So you can do element.clientWidth and
element.clientHeight,

67
00:04:46.400 --> 00:04:52.120
and it will give you how wide
the element is with just its padding.

68
00:04:52.120 --> 00:04:55.690
What's weird is there's nothing that
gives you the width of this content area.

69
00:04:56.870 --> 00:04:59.910
Strange, but jQuery does.

70
00:04:59.910 --> 00:05:03.460
jQuery gives you an innerWidth(),
an outerWidth(),

71
00:05:03.460 --> 00:05:07.436
a width() function and
an outerWidth(), if you pass it true,

72
00:05:07.436 --> 00:05:11.344
it gives you the size of the margin,
all right, around the area.

73
00:05:11.344 --> 00:05:18.580
And also gives you these things for
height.

74
00:05:18.580 --> 00:05:21.329
It gives you height,
innerHeight, outerHeight, and

75
00:05:21.329 --> 00:05:24.670
outerHeight(true), to get
the the corresponding dimensions.

