WEBVTT

1
00:00:00.000 --> 00:00:03.690
[MUSIC]

2
00:00:03.690 --> 00:00:07.158
&gt;&gt; Justin Meyer: We're gonna
fill out some set of these,

3
00:00:07.158 --> 00:00:10.118
depending on how quickly we move.

4
00:00:10.118 --> 00:00:14.260
Some of them, I just might implement for
you guys, or show you how to do it.

5
00:00:16.620 --> 00:00:21.077
But this is a big nice set
of jQuery's functionality.

6
00:00:21.077 --> 00:00:23.089
And we're gonna use that
to explore the DOM.

7
00:00:23.089 --> 00:00:25.890
And the first thing we're gonna
talk about is just how do

8
00:00:25.890 --> 00:00:27.390
you find elements in the DOM.

9
00:00:27.390 --> 00:00:33.906
So modern browsers provide a nice set
of methods that given a document,

10
00:00:33.906 --> 00:00:40.871
which is really, this document represents
the HTML structure of the page.

11
00:00:40.871 --> 00:00:45.361
Given that, you can find an element by id,
by class name,

12
00:00:45.361 --> 00:00:50.720
by tag name, by a CSS selector,
by a lot of different methods.

13
00:00:50.720 --> 00:00:55.971
So just to give a quick example of
what these do, if you've never seen

14
00:00:55.971 --> 00:01:02.495
them before, document.getElementById finds
an element that has an id attribute,

15
00:01:02.495 --> 00:01:08.315
that matches what's passed in here,
and will return that single element.

16
00:01:08.315 --> 00:01:11.717
getElementsByTagName, one
thing I should also reference,

17
00:01:11.717 --> 00:01:13.612
I'm going in order of performance.

18
00:01:13.612 --> 00:01:21.800
getElementById is the fastest way to
retrieve an element in the whole document.

19
00:01:24.000 --> 00:01:29.990
getElementsByTagName is a way to get all
elements that match a particular tag.

20
00:01:29.990 --> 00:01:34.250
So, if I wanted all li's in my page,
this would get me all the li's.

21
00:01:35.950 --> 00:01:40.120
And the cool thing about this fun
fact is this is a live array.

22
00:01:40.120 --> 00:01:42.744
Like it's not actually an array,
it's a node list.

23
00:01:42.744 --> 00:01:47.185
But it changes, if I insert an li,
whatever this object,

24
00:01:47.185 --> 00:01:51.902
the node list that this thing
is returning, will dynamically

25
00:01:51.902 --> 00:01:56.907
change as li's are added or
removed to the page, which is crazy.

26
00:01:56.907 --> 00:02:01.220
I've never had to use
that functionality for

27
00:02:01.220 --> 00:02:05.087
some kind of benefit but that does work.

28
00:02:05.087 --> 00:02:09.930
Another fairly fast selector
is getElementsByClassName.

29
00:02:09.930 --> 00:02:15.484
This will get all elements,
you see this has this class attribute,

30
00:02:15.484 --> 00:02:18.315
it has at least one part matching.

31
00:02:18.315 --> 00:02:23.565
So, if I had contact space important,
in quotes,

32
00:02:23.565 --> 00:02:30.817
this would still match this element.
&gt;&gt; Justin Meyer: querySelectorAll

33
00:02:30.817 --> 00:02:33.442
gets all elements that
match a CSS selector.

34
00:02:33.442 --> 00:02:37.096
Hopefully everybody here is, at least,
familiar with CSS selectors.

35
00:02:37.096 --> 00:02:42.659
If not, like ping me or Alexis,
right after and we'll explain it to you.

36
00:02:42.659 --> 00:02:45.170
But this will get all elements
that match a CSS selector.

