WEBVTT

1
00:00:00.025 --> 00:00:02.691
[MUSIC]

2
00:00:02.691 --> 00:00:06.960
&gt;&gt; Justin Meyer: So here's the exercise,
so we're gonna do this first.

3
00:00:06.960 --> 00:00:09.340
If the method, did I show the method?

4
00:00:09.340 --> 00:00:12.860
The hint is using
Object.prototype.toString.call.

5
00:00:12.860 --> 00:00:15.390
If that seems a little weird,
the reason why we

6
00:00:15.390 --> 00:00:19.450
have people go through this exercise
is because we will be stealing.

7
00:00:21.830 --> 00:00:25.600
This is kind of like this is,
I forget the name for this,

8
00:00:25.600 --> 00:00:30.530
the objects that are kind
of part of JavaScript.

9
00:00:30.530 --> 00:00:34.730
So we're gonna be stealing array's
methods, we'll be using them for

10
00:00:34.730 --> 00:00:36.030
own devices.

11
00:00:36.030 --> 00:00:41.130
Here we're using an Objects toString
method for own devices on other objects.

12
00:00:41.130 --> 00:00:41.835
What is the word?

13
00:00:41.835 --> 00:00:42.774
Mark, help me out.

14
00:00:42.774 --> 00:00:43.957
&gt;&gt; Speaker 2: [INAUDIBLE]
&gt;&gt; Justin Meyer: I've

15
00:00:43.957 --> 00:00:47.215
totally forgotten what's the word for
that is.

16
00:00:47.215 --> 00:00:49.250
&gt;&gt; Speaker 2: [INAUDIBLE]
&gt;&gt; Justin Meyer: It's a phrase for

17
00:00:49.250 --> 00:00:53.760
like what it is called, it's not like,
yeah, I don't remember it.

18
00:00:53.760 --> 00:00:57.020
Okay, I'll look it up,
it's like drawing a blank.

19
00:00:57.020 --> 00:00:58.940
But we do this stuff a lot,

20
00:00:58.940 --> 00:01:02.105
a lot of libraries do this
stuff where they'll steal.

21
00:01:02.105 --> 00:01:03.658
&gt;&gt; Speaker 2: More.

22
00:01:03.658 --> 00:01:07.694
&gt;&gt; Justin Meyer: It's when you like
use place but I'm your own like or

23
00:01:07.694 --> 00:01:12.554
a like array or object but
it's not do you mean like J Crew does it

24
00:01:12.554 --> 00:01:18.120
all over the place to get the name
of it though it's like not.

25
00:01:18.120 --> 00:01:21.390
It's kind of like a duck punching but
it's something that's

26
00:01:21.390 --> 00:01:25.190
there's another term of phrase that
it's called, I forgot it's called.

27
00:01:25.190 --> 00:01:30.030
I have to remember it, this is kind
of a common pattern of stealing

28
00:01:32.090 --> 00:01:37.220
these type of methods but
using them on your own type of objects.

29
00:01:37.220 --> 00:01:42.230
So you wanna introduce it at your simple,
so it kind of you're used to it later.

30
00:01:42.230 --> 00:01:45.698
So any questions about this
exercise before we start?

31
00:01:49.474 --> 00:01:53.682
&gt;&gt; Justin Meyer: No,
all right, so just to recap,

32
00:01:53.682 --> 00:01:57.601
it's weird to think about, but

33
00:01:57.601 --> 00:02:02.550
it's more simple than you might think.

34
00:02:02.550 --> 00:02:07.050
You're really just using this object
prototype toString.call method and

35
00:02:07.050 --> 00:02:10.370
making sure that it
returns object Array and

36
00:02:10.370 --> 00:02:15.100
as long as it does then
you know it's an Array.

37
00:02:15.100 --> 00:02:19.855
And you will be implementing that in here,

38
00:02:19.855 --> 00:02:24.320
so that's your object and you just
want this to return true or false.

39
00:02:24.320 --> 00:02:25.865
&gt;&gt; Speaker 2: [COUGH]
&gt;&gt; Justin Meyer: If this thing

40
00:02:25.865 --> 00:02:27.025
is truly an Array.

