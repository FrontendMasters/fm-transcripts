WEBVTT

1
00:00:00.000 --> 00:00:03.979
[MUSIC]

2
00:00:03.979 --> 00:00:09.302
&gt;&gt; Justin Meyer: What $.proxy does is it
takes a function and makes sure it returns

3
00:00:09.302 --> 00:00:15.685
a new function that this will be called
with any particular context you pass it.

4
00:00:15.685 --> 00:00:21.859
So let's say here I have a dog
object with a speak function.

5
00:00:23.947 --> 00:00:28.469
&gt;&gt; Justin Meyer: Now I can
create a speakProxy function.

6
00:00:28.469 --> 00:00:32.764
By the way, if you're familiar
with function's bind method,

7
00:00:32.764 --> 00:00:35.877
this is pretty much does
the exact same thing.

8
00:00:35.877 --> 00:00:40.756
I can make a speakProxy,
so this returns a function

9
00:00:40.756 --> 00:00:44.624
that I can call that function directly.

10
00:00:44.624 --> 00:00:47.493
Or, I can pass it to a setTimeout or
do whatever with it.

11
00:00:47.493 --> 00:00:52.076
And it will always,
when this function is called,

12
00:00:52.076 --> 00:00:56.458
it will always call
dog.speak with this as dog.

13
00:00:56.458 --> 00:00:59.995
This is the this you want and
this is the function.

14
00:01:07.459 --> 00:01:10.232
&gt;&gt; Justin Meyer: So
if I did something like that, right,

15
00:01:10.232 --> 00:01:13.088
if I ran this in the console and
hit Enter,

16
00:01:13.088 --> 00:01:18.330
the timeout eventually it would say
fido says woof, just like we want it to.

17
00:01:19.394 --> 00:01:23.890
All right, the reason, I'll kind of
go into this since it's kind of not

18
00:01:23.890 --> 00:01:26.040
why you just can't pass dog.speak here.

19
00:01:27.480 --> 00:01:30.510
I'll explain that real quick
before we start the exercise.

20
00:01:30.510 --> 00:01:34.160
I'll actually explain that right
now cuz I think it will be helpful.

21
00:01:34.160 --> 00:01:37.689
So, let me copy that code.

22
00:01:46.487 --> 00:01:47.641
&gt;&gt; Justin Meyer: Okay, so here's my dog.

23
00:01:52.953 --> 00:01:56.778
&gt;&gt; Justin Meyer: So
if I did something like this,

24
00:01:56.778 --> 00:02:01.744
speak equals dog.speak and call speak,

25
00:02:04.788 --> 00:02:07.312
&gt;&gt; Justin Meyer: With something.

26
00:02:09.973 --> 00:02:11.561
&gt;&gt; Justin Meyer: What's gonna happen here?

27
00:02:23.779 --> 00:02:28.190
&gt;&gt; Justin Meyer: See if you guys
remember the rules for the dot, or for

28
00:02:28.190 --> 00:02:30.300
how this works.

29
00:02:30.300 --> 00:02:33.240
&gt;&gt; Speaker 2: It's
a undefined says something.

30
00:02:33.240 --> 00:02:35.810
&gt;&gt; Justin Meyer: Undefined says something,
exactly right.

31
00:02:35.810 --> 00:02:39.330
And that's because we're
calling a function.

32
00:02:39.330 --> 00:02:42.930
If you see a function called just with
the call operator there's no dot.

33
00:02:42.930 --> 00:02:45.880
If I didn't do dog dot,
I didn't do something dot speak.

34
00:02:47.170 --> 00:02:52.085
What's gonna happen
inside this function is

35
00:02:52.085 --> 00:02:55.973
this is always gonna be the window.

36
00:02:55.973 --> 00:03:01.093
So what $.proxy does it makes it so

37
00:03:01.093 --> 00:03:06.050
I can I can go $.proxy speak dog.

38
00:03:06.050 --> 00:03:10.280
Actually, this is not the best example,
I'm just gonna say says hi.

39
00:03:10.280 --> 00:03:12.603
Get rid of the words.

40
00:03:12.603 --> 00:03:18.026
I can say, and then I can just call
speak and $.proxy will make it so

41
00:03:18.026 --> 00:03:21.466
when I do this it's
gonna say Fido says hi.

42
00:03:23.573 --> 00:03:27.424
&gt;&gt; Justin Meyer: All right, because
$.proxy will make sure that when this

43
00:03:27.424 --> 00:03:32.277
function that is returned is called,
even though it's called like this,

44
00:03:32.277 --> 00:03:37.379
no matter how it's called It's still
gonna have this as what you expect it to.

45
00:03:39.519 --> 00:03:41.540
&gt;&gt; Justin Meyer: Now a lot of
times people get confused.

46
00:03:41.540 --> 00:03:44.590
They would think that,
why can't setTimeout do something similar?

47
00:03:44.590 --> 00:03:49.490
If I did a setTimeout and
did dog.speak and

48
00:03:49.490 --> 00:03:53.580
a second, why doesn't that work?

49
00:03:55.690 --> 00:03:58.790
The reason is is because,
let's say I implemented setTimeout myself.

50
00:04:00.480 --> 00:04:06.653
And put in a, it would take a callback,
and it takes some time.

51
00:04:06.653 --> 00:04:12.621
And let's say I had some access
to some system timer and

52
00:04:12.621 --> 00:04:21.149
I could do set wait, somehow,
&gt;&gt; Justin Meyer: Time.

53
00:04:21.149 --> 00:04:23.691
So this would pause the thread for
a certain number of seconds.

54
00:04:23.691 --> 00:04:26.779
This isn't even how threading works in
JavaScript but let's just say it did.

55
00:04:26.779 --> 00:04:29.004
And if I just called callback,

56
00:04:29.004 --> 00:04:34.630
well it would just be calling dog.speak
like with the normal call operator.

57
00:04:34.630 --> 00:04:39.010
So even though we passed dog.speak we're
still passing a reference to a function.

58
00:04:40.480 --> 00:04:45.213
So when that function is called, because
it's called without the dot operator,

59
00:04:45.213 --> 00:04:47.005
it would be undefined says hi.

60
00:04:49.249 --> 00:04:50.430
&gt;&gt; Justin Meyer: Hopefully
that makes sense.

61
00:04:52.480 --> 00:04:56.832
So what we're gonna try to
do is to create a proxy,

62
00:04:56.832 --> 00:05:01.020
a $.proxy, is what you guys
are going to try to create.

63
00:05:01.020 --> 00:05:03.255
That, or I guess it's up here.

64
00:05:05.590 --> 00:05:08.757
&gt;&gt; Justin Meyer: And I'll give you a hint
about it, it's gonna return a function.

65
00:05:15.384 --> 00:05:19.642
&gt;&gt; Justin Meyer: It's gonna return
a function that's going to call this

66
00:05:19.642 --> 00:05:22.551
function so that this is the context.

67
00:05:27.342 --> 00:05:30.349
&gt;&gt; Justin Meyer: So
that's all the clue I'm gonna give you.

68
00:05:30.349 --> 00:05:34.509
Let's struggle for
another seven minutes and I will,

69
00:05:34.509 --> 00:05:39.496
if people have questions or
need help, I'm here, so is Alexis.

70
00:05:39.496 --> 00:05:40.686
Let me put this up.

71
00:05:43.004 --> 00:05:46.698
&gt;&gt; Justin Meyer: So this is what
we're gonna try to do, is $.proxy.

