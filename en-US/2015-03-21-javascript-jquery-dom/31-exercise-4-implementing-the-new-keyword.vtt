WEBVTT

1
00:00:00.000 --> 00:00:03.867
[MUSIC]

2
00:00:03.867 --> 00:00:07.400
&gt;&gt; Alexis: The last part
of this set of exercises.

3
00:00:07.400 --> 00:00:12.540
We're going to implement the new
keyword as if it didn't exist.

4
00:00:14.040 --> 00:00:16.910
So we're gonna create var Person.

5
00:00:16.910 --> 00:00:18.590
This is our construct.

6
00:00:18.590 --> 00:00:20.970
We're going to give it a prototype.

7
00:00:20.970 --> 00:00:23.640
Method speak, it's just gonna say hello.

8
00:00:23.640 --> 00:00:30.230
Then we're gonna say var Person = new, and
it's gonna have a signature of an object,

9
00:00:30.230 --> 00:00:36.938
and then an array of arguments.
&gt;&gt; Speaker 2: Signature function,

10
00:00:36.938 --> 00:00:38.723
it take function.

11
00:00:38.723 --> 00:00:39.892
You said object.

12
00:00:39.892 --> 00:00:44.208
Signature of the object.
&gt;&gt; Alexis: Signature of the function,

13
00:00:44.208 --> 00:00:45.540
I'm sorry.

14
00:00:45.540 --> 00:00:49.230
We want this signature, we want this
implementation to do the same exact

15
00:00:49.230 --> 00:00:53.710
thing as you would say, var Person
= new Person, with its arguments.

16
00:00:55.380 --> 00:00:58.399
And then at the end we should
be able to say person.speak.

17
00:01:01.280 --> 00:01:04.380
Here's the hints that I
just failed at verbalizing.

18
00:01:07.580 --> 00:01:08.520
Does that make sense?

19
00:01:12.366 --> 00:01:15.600
One other hint,
you're not allowed to use the new keyword

20
00:01:15.600 --> 00:01:18.228
in the implementation of this function.
&gt;&gt; Speaker 2: [LAUGH]

21
00:01:18.228 --> 00:01:22.338
&gt;&gt; Alexis: I see that a lot.

22
00:01:22.338 --> 00:01:26.848
Yes.
&gt;&gt; Speaker 2: Walking through the steps.

23
00:01:26.848 --> 00:01:28.260
&gt;&gt; Alexis: Yes.

24
00:01:28.260 --> 00:01:32.360
So let's verbalize aloud,
before we put this to code.

25
00:01:32.360 --> 00:01:33.710
Remember, verbalization is really,

26
00:01:33.710 --> 00:01:35.550
really important when you
want to implement something.

27
00:01:35.550 --> 00:01:38.389
So what are the things that new does for
us?

28
00:01:41.550 --> 00:01:44.720
I'll give you the first one if
it's going to edge things along.

29
00:01:46.080 --> 00:01:48.590
Your hand came up.
&gt;&gt; Speaker 2: Creates a new instance of

30
00:01:48.590 --> 00:01:50.590
an object, for example.
&gt;&gt; Alexis: Creates a new object.

31
00:01:50.590 --> 00:01:51.680
That it was one of the things it does.

32
00:01:51.680 --> 00:01:53.010
It creates a new object.

33
00:01:53.010 --> 00:01:58.510
What else does it do?
&gt;&gt; Speaker 3: It sets the proto

34
00:01:58.510 --> 00:02:03.450
of the object to something.
&gt;&gt; Alexis: Yes, that's right.

35
00:02:03.450 --> 00:02:05.740
It sets the proto of
the object to something.

36
00:02:05.740 --> 00:02:07.480
Does anyone know what it sets it to?

37
00:02:07.480 --> 00:02:09.053
That's exactly right.

38
00:02:09.053 --> 00:02:16.040
What does it set it to?
&gt;&gt; Speaker 4: To its default proto?

39
00:02:16.040 --> 00:02:20.820
If you don't know if you're
attracted to anything

40
00:02:22.330 --> 00:02:23.770
else.
&gt;&gt; Alexis: It defaults.

41
00:02:26.390 --> 00:02:31.947
That answer is technically
correct in a very abstract way.

42
00:02:31.947 --> 00:02:33.089
&gt;&gt; Speaker 4: Function?

43
00:02:33.089 --> 00:02:35.356
&gt;&gt; Alexis: Not to the function.

44
00:02:35.356 --> 00:02:36.835
You're getting close.
&gt;&gt; Speaker 4: Property?

45
00:02:36.835 --> 00:02:38.870
&gt;&gt; [INAUDIBLE]

46
00:02:38.870 --> 00:02:39.710
&gt;&gt; Alexis: Which function, like me ask

47
00:02:39.710 --> 00:02:41.557
that, which function do you think?
&gt;&gt; Speaker 5: I don't know I

48
00:02:41.557 --> 00:02:45.091
would call it the class, but.
&gt;&gt; Speaker 6: The prototype

49
00:02:45.091 --> 00:02:49.870
&gt;&gt; Alexis: The prototype of

50
00:02:49.870 --> 00:02:53.050
what?
&gt;&gt; Speaker 7: Okay, the prototype.

51
00:02:53.050 --> 00:02:54.140
&gt;&gt; Alexis: I feel like there should be

52
00:02:54.140 --> 00:02:54.820
a mind meld there.

53
00:02:54.820 --> 00:02:56.090
It's so close.
&gt;&gt; Speaker 6: [LAUGH]

54
00:02:56.090 --> 00:02:57.770
&gt;&gt; Speaker 7: The prototype of a person or

55
00:02:57.770 --> 00:02:59.490
the prototype-
&gt;&gt; Alexis: Yes, yes.

56
00:02:59.490 --> 00:03:01.015
The prototype of the constructor function.

57
00:03:01.015 --> 00:03:04.536
[LAUGH] So if you're right, it was
a function thing, it was a constructor and

58
00:03:04.536 --> 00:03:05.940
it is that prototype.

59
00:03:05.940 --> 00:03:09.120
So it's gonna set
the proto of our new object

60
00:03:09.120 --> 00:03:11.640
to the prototype of our constructor.

61
00:03:11.640 --> 00:03:18.480
What else is it gonna do?
&gt;&gt; Alexis: I'll

62
00:03:18.480 --> 00:03:19.630
throw one of the easy ones.

63
00:03:19.630 --> 00:03:21.900
I wanted to get the new objects.

64
00:03:21.900 --> 00:03:23.820
It's going to call the function, right?

65
00:03:23.820 --> 00:03:30.681
It's gonna invoke our constructor.
&gt;&gt; Alexis: And

66
00:03:30.681 --> 00:03:32.390
what's the last thing it's gonna do?

67
00:03:33.560 --> 00:03:35.420
Or one of the other things it's gonna do.

68
00:03:37.120 --> 00:03:38.897
The last for this academic exercise,

69
00:03:38.897 --> 00:03:43.929
then I'll give you the technicality.
&gt;&gt; Alexis: What

70
00:03:43.929 --> 00:03:49.051
else is it gonna do?
&gt;&gt; Alexis: If

71
00:03:49.051 --> 00:03:52.191
you say var Person = new Person.

72
00:03:53.220 --> 00:03:56.590
We've deciphered it creates a new object,

73
00:03:56.590 --> 00:04:00.070
it sets the proto property to
the prototype of person in our case.

74
00:04:01.190 --> 00:04:03.430
It invokes person, right?

75
00:04:03.430 --> 00:04:09.033
It calls it, and what else does it do?
&gt;&gt; Speaker 7: Returns it.

76
00:04:09.033 --> 00:04:11.324
&gt;&gt; Alexis: Returns it, returns what?

77
00:04:11.324 --> 00:04:12.601
&gt;&gt; Speaker 7: Returns person,

78
00:04:12.601 --> 00:04:14.520
lowercase person.
&gt;&gt; Alexis: But

79
00:04:14.520 --> 00:04:16.590
what is the lower case person?
&gt;&gt; Speaker 7: A new object.

80
00:04:16.590 --> 00:04:17.320
&gt;&gt; Alexis: The new object,

81
00:04:17.320 --> 00:04:18.770
it returns the new object.

82
00:04:18.770 --> 00:04:21.354
These are the main things
that the new keyword does for

83
00:04:21.354 --> 00:04:25.220
us.
&gt;&gt; Alexis: Make sense?

84
00:04:25.220 --> 00:04:29.460
So we're gonna write a function
called NEW in all caps,

85
00:04:29.460 --> 00:04:32.590
that does those forming things for us.

86
00:04:34.640 --> 00:04:35.140
Cool?

