WEBVTT

1
00:00:00.000 --> 00:00:03.710
[MUSIC]

2
00:00:03.710 --> 00:00:06.951
&gt;&gt; Justin Meyer: So the first thing
we're gonna do now is we're gonna start

3
00:00:06.951 --> 00:00:08.936
implementing the $ function, and

4
00:00:08.936 --> 00:00:13.820
the $ function we're gonna treat
as a constructor function for now.

5
00:00:13.820 --> 00:00:20.310
So what we wanna be able to write is
new $ and then we pass it CSS selector.

6
00:00:20.310 --> 00:00:25.250
It get all elements in
the page that match that

7
00:00:25.250 --> 00:00:30.350
CSS selector and it's going to add
those elements to the instance that

8
00:00:30.350 --> 00:00:35.370
was just created in such a way that that
instance looks like an array like object.

9
00:00:38.020 --> 00:00:41.260
And there's a trick to making this happen,

10
00:00:42.410 --> 00:00:47.700
that I will kind of walk people through,
will probably give like 15

11
00:00:47.700 --> 00:00:53.610
minutes a little bit longer because I want
people to finish this one on their own.

12
00:00:53.610 --> 00:01:00.990
And let me give a little context to it,

13
00:01:00.990 --> 00:01:06.120
so this hint, is the kinda fast

14
00:01:06.120 --> 00:01:10.560
sneaky way of, well let me describe
this problem a little bit better.

15
00:01:12.070 --> 00:01:15.373
Okay, so let's say I had an array of

16
00:01:15.373 --> 00:01:20.814
items.
&gt;&gt; Justin Meyer: We've all seen on array

17
00:01:20.814 --> 00:01:26.070
of items and
that could look like you know 1, 2.

18
00:01:26.070 --> 00:01:33.857
Let me not use those let me do foo,
bar, zed.

19
00:01:33.857 --> 00:01:37.057
Okay, so that's that's an array of items.

20
00:01:37.057 --> 00:01:41.804
But like we've seen things
can be already like that just

21
00:01:41.804 --> 00:01:46.855
means that they have a length and
they have a properties that

22
00:01:46.855 --> 00:01:52.021
match that they have like a 0,
1, 2, and 3 properties.

23
00:01:52.021 --> 00:01:58.379
So I could have something that's

24
00:01:58.379 --> 00:02:04.736
array like that equals 0 is foo,

25
00:02:04.736 --> 00:02:09.503
1 is bar, 2 is zed, and

26
00:02:09.503 --> 00:02:16.331
then it has a length property of 3.

27
00:02:17.510 --> 00:02:22.300
So when you use jQuery it's actually
making an instance of something.

28
00:02:22.300 --> 00:02:25.760
But it has properties on
it that make it array-like.

29
00:02:25.760 --> 00:02:31.850
Part of it's magic is that
it acts like an array but

30
00:02:31.850 --> 00:02:37.580
it has all of these methods that
arrays don't have on it and.

31
00:02:37.580 --> 00:02:43.190
Probably this next exercise and one more
of the two trickiest exercises today,

32
00:02:45.070 --> 00:02:50.120
is how do you convert the instance
in here which would be this.

33
00:02:51.350 --> 00:02:55.400
How do you make it given some
elements maybe given some elements

34
00:02:55.400 --> 00:02:58.770
like this make it look like this.

35
00:02:58.770 --> 00:03:02.850
Now there's a trick to doing
it which is on the slide

36
00:03:02.850 --> 00:03:04.906
which is down here which
I'll come back to.

37
00:03:04.906 --> 00:03:10.930
But you can solve this anyway that you
can kind of rationally do it and maybe

38
00:03:10.930 --> 00:03:16.110
the easiest way to understand it first is
just simply going through the array and

39
00:03:16.110 --> 00:03:21.280
copying the properties to this so

40
00:03:21.280 --> 00:03:25.670
making sure that this has a 0 property,
a 1 property, a 2 property, and a length.

41
00:03:25.670 --> 00:03:32.430
If you get from the selector
three elements.

42
00:03:32.430 --> 00:03:36.834
So think of it this way the easiest way to
solve that I think conceptually is given

43
00:03:36.834 --> 00:03:40.583
a selector use document query
selector all to go get your elements,

44
00:03:40.583 --> 00:03:42.513
you get an array of elements back.

45
00:03:42.513 --> 00:03:46.984
Do a loop to go through each
one of those elements and copy,

46
00:03:46.984 --> 00:03:50.450
add properties to this that are 0, 1, 2,

47
00:03:50.450 --> 00:03:55.170
as many elements as you have,
and a length property.

48
00:03:55.170 --> 00:04:00.220
That's what you need to do to
make your instances of $ behave

49
00:04:00.220 --> 00:04:05.970
just like jQuery will behave,
any questions on that?

50
00:04:05.970 --> 00:04:09.380
I know it's confusing, but you'll see the
answer and hopefully, it'll make sense.

51
00:04:11.040 --> 00:04:12.733
So we'll do-
&gt;&gt; Speaker 2: Right now,

52
00:04:12.733 --> 00:04:16.695
like your verbalization
of what this should do.

53
00:04:16.695 --> 00:04:20.076
Just like comment it out for

54
00:04:20.076 --> 00:04:24.440
us, like you mentioned.
&gt;&gt; Justin Meyer: Do you want

55
00:04:24.440 --> 00:04:26.000
me to write it out.
&gt;&gt; Speaker 2: Right.

56
00:04:26.000 --> 00:04:26.775
&gt;&gt; Justin Meyer: Sure I'll write it out.

57
00:04:28.440 --> 00:04:34.968
Get elements from the page

58
00:04:34.968 --> 00:04:41.798
using selector, d.qsa.

59
00:04:41.798 --> 00:04:48.968
[LAUGH] Then go through
&gt;&gt; Speaker 3: You should

60
00:04:48.968 --> 00:04:54.330
probably state that that's abbreviated.
&gt;&gt; Justin Meyer: It'll be the hint

61
00:04:54.330 --> 00:04:58.909
that I put up, but sure I can, or I'll-
&gt;&gt; Speaker 3: I just meant you should

62
00:04:58.909 --> 00:05:00.277
verbalize that.

63
00:05:00.277 --> 00:05:06.588
&gt;&gt; Justin Meyer: Yeah.
&gt;&gt; Justin Meyer: Using

64
00:05:06.588 --> 00:05:10.480
document.querySelectorAll, and
then once you have all your elements.

65
00:05:10.480 --> 00:05:19.540
Go through them and copy to this.

66
00:05:19.540 --> 00:05:25.134
I go through each element and

67
00:05:25.134 --> 00:05:32.133
copy to this as a numeric property.

68
00:05:38.955 --> 00:05:41.821
&gt;&gt; Justin Meyer: And then also set length

69
00:05:41.821 --> 00:05:47.714
property.
&gt;&gt; Justin Meyer: To the number

70
00:05:47.714 --> 00:05:55.050
of elements in the array.
&gt;&gt; Justin Meyer: And

71
00:05:55.050 --> 00:06:01.134
what will be showing at the end of this
with that hint is at the very bottom.

72
00:06:01.134 --> 00:06:06.155
A hint at the bottom is a way to
essentially do these steps with

73
00:06:06.155 --> 00:06:11.374
very little code, but
all explain that after I explain a longer

74
00:06:11.374 --> 00:06:16.710
way of doing it which is what you
guys should try it first I think.

75
00:06:19.550 --> 00:06:23.327
Any other questions?
&gt;&gt; Justin Meyer: Any on this guy?

76
00:06:42.430 --> 00:06:47.048
&gt;&gt; Justin Meyer: Okay, so never mind.

77
00:06:47.048 --> 00:06:51.962
So one question that some people
might be talking about online is

78
00:06:51.962 --> 00:06:57.080
jQuery doesn't you don't the pass
new before you JQuery right?

79
00:06:57.080 --> 00:06:59.896
So if you saw we're making
something where you have to do.

80
00:07:05.266 --> 00:07:06.140
&gt;&gt; Justin Meyer: Ready to go.

81
00:07:08.930 --> 00:07:11.420
We're making some the where
you have to do new $.

82
00:07:11.420 --> 00:07:16.680
We're going to remove you having
to do new it's just easier

83
00:07:16.680 --> 00:07:21.860
to get everything started by requiring
people to call the new at first.

84
00:07:23.750 --> 00:07:25.460
Or, we'll make it work just like jQuery in

85
00:07:25.460 --> 00:07:31.855
a moment.
&gt;&gt; Justin Meyer: So,

86
00:07:31.855 --> 00:07:35.150
I think I'll leave this up, then.

87
00:07:35.150 --> 00:07:40.270
The verbalization.

88
00:07:40.270 --> 00:07:42.570
Yeah, cause you guys can see
the tests if you need to.

89
00:07:42.570 --> 00:07:43.820
So, I'll leave this up.

