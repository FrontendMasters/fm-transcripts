WEBVTT

1
00:00:00.000 --> 00:00:03.690
[MUSIC]

2
00:00:03.690 --> 00:00:08.924
&gt;&gt; Justin Meyer: Now we're going to
add an HTML method that gets, or

3
00:00:08.924 --> 00:00:15.150
sets, the inner HTML of all of
the elements in a collection.

4
00:00:16.730 --> 00:00:21.469
So here if I got all li's,
I could set all all

5
00:00:21.469 --> 00:00:25.698
li's HTML to have a div with All Dogs and

6
00:00:25.698 --> 00:00:33.280
then I could read back the first li's
HTML and get that back like this.

7
00:00:33.280 --> 00:00:37.554
So to give a little bit of
explanation on what you're gonna do,

8
00:00:37.554 --> 00:00:39.660
I can keep doing this pattern.

9
00:00:39.660 --> 00:00:43.554
I'm gonna go to this HTML function and

10
00:00:43.554 --> 00:00:48.663
first I need to figure out
if I'm either getting or

11
00:00:48.663 --> 00:00:51.839
setting the HTML, all right.

12
00:00:51.839 --> 00:00:55.109
So the best way of getting or
setting the HTML is to,

13
00:00:55.109 --> 00:00:59.380
well I'm gonna pseudocode this,
I'll give this one to you guys.

14
00:00:59.380 --> 00:01:04.444
If do you arguments.length,
that means someone passed in an argument.

15
00:01:04.444 --> 00:01:09.622
That means I'm gonna do setting,

16
00:01:09.622 --> 00:01:14.442
otherwise I'm going to get this

17
00:01:14.442 --> 00:01:19.804
[0]'s, innerHTML, really.

18
00:01:19.804 --> 00:01:25.459
Now for setting what I need

19
00:01:25.459 --> 00:01:33.427
to do is go through each item in this,

20
00:01:33.427 --> 00:01:39.596
each element in 'this' and

21
00:01:39.596 --> 00:01:46.296
set its innerHTML to newHtml.

22
00:01:53.840 --> 00:01:57.538
&gt;&gt; Justin Meyer: Now,
you can use $.each in here on this.

23
00:01:57.538 --> 00:02:02.574
This is a really nice way of doing it
is to do $.each and then pass at this,

24
00:02:02.574 --> 00:02:07.885
and then you get a function that will be
called back with each element in this.

25
00:02:07.885 --> 00:02:09.072
So I'll give that to you.

26
00:02:09.072 --> 00:02:11.772
So you're gonna do function, and

27
00:02:11.772 --> 00:02:16.250
this'll get called back with the index and
the element.

28
00:02:16.250 --> 00:02:20.872
And I'm gonna change this to return,
and you're also gonna want to

29
00:02:20.872 --> 00:02:25.821
return the original collections
because jQuery supports chaining, so

30
00:02:25.821 --> 00:02:29.977
you'd wanna return here to
make sure it's returning this.

31
00:02:29.977 --> 00:02:36.087
So if that was confusing, basically all
I'm doing is the same as doing this.

32
00:02:36.087 --> 00:02:39.482
Cuz jQuery, anytime that there's a setter,

33
00:02:39.482 --> 00:02:43.748
if you're always setting
the values in your collection,

34
00:02:43.748 --> 00:02:47.680
it always returns the instance
of jQuery back to you.

