WEBVTT

1
00:00:00.000 --> 00:00:03.767
[MUSIC]

2
00:00:03.767 --> 00:00:09.670
&gt;&gt; Justin Meyer: To listen to an event in
the DOM you do element.addEventListener.

3
00:00:09.670 --> 00:00:12.540
You give it the type of
event you want to listen to.

4
00:00:12.540 --> 00:00:14.478
You give it a function to call back and

5
00:00:14.478 --> 00:00:19.170
then there's this capture flag which
we'll talk about what that does.

6
00:00:19.170 --> 00:00:23.746
And then to remove an event,
you call element.removeEventListener and

7
00:00:23.746 --> 00:00:26.907
you,
&gt;&gt; Justin Meyer: And

8
00:00:26.907 --> 00:00:31.465
you give the same event name and the same
handler and the same capture flag.

9
00:00:31.465 --> 00:00:33.210
We'll talk about that means.

10
00:00:33.210 --> 00:00:34.700
So that looks like this.

11
00:00:34.700 --> 00:00:41.230
If I want to listen to when
someone clicks breeds on the page,

12
00:00:41.230 --> 00:00:45.860
on the element I say addEventListener,
give it a click,

13
00:00:45.860 --> 00:00:48.930
give it a function, and we'll talk
about what this means in a second.

14
00:00:50.690 --> 00:00:52.865
Pretty, pretty straightforward, hopefully.

15
00:00:52.865 --> 00:00:54.240
Are there people who've never seen this?

16
00:00:55.330 --> 00:00:57.590
Everybody kinda seen addEventListner?

17
00:00:57.590 --> 00:00:58.200
Most people?

18
00:00:58.200 --> 00:00:59.390
Good, Cool.

19
00:01:01.094 --> 00:01:06.020
To removeEventListener, you always have
to pass the same function that was used

20
00:01:06.020 --> 00:01:09.870
to bind in addEventListener, right.

21
00:01:09.870 --> 00:01:12.450
So if I did addEventListener like this.

22
00:01:13.840 --> 00:01:18.870
So I want to listen on breeds when it's
clicked and we'll console.log('clicked!').

23
00:01:18.870 --> 00:01:20.650
I cannot do this.

24
00:01:21.790 --> 00:01:24.570
I can't just pass a function that

25
00:01:24.570 --> 00:01:29.230
looks the same as the function
passed to the addEventListener.

26
00:01:29.230 --> 00:01:32.600
Because these are two
different functions in memory.

27
00:01:32.600 --> 00:01:34.760
You have to pass the same function back.

28
00:01:35.980 --> 00:01:39.760
So the way to do this is to typically

29
00:01:39.760 --> 00:01:43.540
make sure you save a reference
to your function in a variable.

30
00:01:45.120 --> 00:01:50.890
Then pass that variable and therefore
that function to addEventListener,

31
00:01:50.890 --> 00:01:54.090
so that later,
you can remove the event listener.

32
00:01:55.730 --> 00:01:57.342
So let's see this in action.

33
00:02:01.423 --> 00:02:06.522
&gt;&gt; Justin Meyer: So
I'm going to get my breeds,

34
00:02:06.522 --> 00:02:13.397
I'm going to add an event listener to it.

35
00:02:17.378 --> 00:02:20.359
&gt;&gt; Justin Meyer: But wait,
first I'm going to save my listener,

36
00:02:20.359 --> 00:02:21.896
I'm gonna do a handler.

37
00:02:21.896 --> 00:02:24.333
I'm gonna create a function.

38
00:02:24.333 --> 00:02:31.930
And I'm going to console.log("clicked!").

39
00:02:31.930 --> 00:02:36.650
Then I'm going to add an event listener
to say when someone clicks it,

40
00:02:37.730 --> 00:02:38.940
call back this function.

41
00:02:40.580 --> 00:02:44.950
Actually not this function,
sorry, handler.

42
00:02:47.520 --> 00:02:51.599
Now when I click this ul,
I get clicked, awesome.

43
00:02:51.599 --> 00:02:54.811
And to stop listening,

44
00:02:54.811 --> 00:02:59.313
I'll do removeEventListener.

45
00:03:04.211 --> 00:03:06.020
&gt;&gt; Justin Meyer: Now when I click,
nothing happens.

46
00:03:07.930 --> 00:03:11.274
So I think we're about to see all
the different types of events

47
00:03:11.274 --> 00:03:12.310
you can listen to.

48
00:03:16.458 --> 00:03:18.940
&gt;&gt; Justin Meyer: No,
we're gonna do add a bind method.

