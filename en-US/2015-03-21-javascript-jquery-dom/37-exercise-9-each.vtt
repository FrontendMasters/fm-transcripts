WEBVTT

1
00:00:00.000 --> 00:00:03.862
[MUSIC]

2
00:00:03.862 --> 00:00:09.690
&gt;&gt; Justin Meyer: So $.each,
this just iterates over something.

3
00:00:09.690 --> 00:00:16.400
It iterates either over on
an array-like thing or an object.

4
00:00:16.400 --> 00:00:24.440
So it's gonna go through, here it's
gonna go through an array and for

5
00:00:24.440 --> 00:00:29.790
every item in the array callback with
the index of the array so 0, 1, 2.

6
00:00:29.790 --> 00:00:31.790
It's gonna callback this function and

7
00:00:31.790 --> 00:00:37.280
then also with the value at that index so
a, b, c.

8
00:00:37.280 --> 00:00:42.542
And then if you pass $.each a object,
it's going to call back

9
00:00:42.542 --> 00:00:47.525
with the property so foo,
zed and then the value bar, ted.

10
00:00:50.053 --> 00:00:54.800
&gt;&gt; Justin Meyer: So
we're gonna implement $.each.

11
00:00:54.800 --> 00:00:57.660
So another ten minutes on
the board unless there

12
00:00:57.660 --> 00:01:01.370
are any other questions how to do this.

13
00:01:01.370 --> 00:01:04.930
So this is we're going to be
being passed a function and

14
00:01:04.930 --> 00:01:07.490
you have to call that function.

15
00:01:07.490 --> 00:01:10.582
You're going to set up a loop a for
loop or for

16
00:01:10.582 --> 00:01:14.189
in loop depending on if
this is array-like or not.

17
00:01:14.189 --> 00:01:16.853
Depending on if this is array-like or not,

18
00:01:16.853 --> 00:01:20.390
you're not going to do
either type of loop.

19
00:01:20.390 --> 00:01:25.263
You're gonna do a for in loop if it's
not array-like and a for, a normal for

20
00:01:25.263 --> 00:01:27.030
loop if it is array-like.

21
00:01:27.030 --> 00:01:30.267
And then you're gonna call
this function back for

22
00:01:30.267 --> 00:01:33.670
each iteration of that loop
with the index in value.

