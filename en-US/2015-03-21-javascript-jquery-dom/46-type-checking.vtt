WEBVTT

1
00:00:00.000 --> 00:00:03.795
[MUSIC]

2
00:00:03.795 --> 00:00:06.872
&gt;&gt; Justin Meyer: The next thing we're
gonna talk about a little bit is type

3
00:00:06.872 --> 00:00:07.590
checking.

4
00:00:07.590 --> 00:00:13.100
So it's really useful to
know when a something,

5
00:00:13.100 --> 00:00:18.475
some variable or
some property is of type something else.

6
00:00:18.475 --> 00:00:23.460
And how JavaScript provides ways for
doing that and

7
00:00:23.460 --> 00:00:29.160
what jQuery also helps you with for
doing type detection.

8
00:00:29.160 --> 00:00:31.780
So we talked a little bit
already about typeof.

9
00:00:32.820 --> 00:00:37.550
Which is great that you can do typeof
something that is a number and

10
00:00:37.550 --> 00:00:39.778
get back a number.

11
00:00:39.778 --> 00:00:44.388
And the instanceof function we
learned about that checks if

12
00:00:44.388 --> 00:00:47.903
something is an instance
of something else.

13
00:00:47.903 --> 00:00:52.897
And what you mean by in instance
of an JavaScript is really that on

14
00:00:52.897 --> 00:00:57.241
its proto chain,
somewhere on its proto chain there's

15
00:00:57.241 --> 00:01:01.876
an object that is the constructor
function's prototype.

16
00:01:01.876 --> 00:01:06.448
[COUGH] There's other
ways that you can kind of

17
00:01:06.448 --> 00:01:11.395
check it out to that more or
less sometimes work.

18
00:01:11.395 --> 00:01:14.855
But the weird thing about JavaScript and

19
00:01:14.855 --> 00:01:18.823
this is something that
jQuery helps you with,

20
00:01:18.823 --> 00:01:23.516
is sometimes you're in
a multi-frame environment.

21
00:01:23.516 --> 00:01:27.643
Right, you've got a pop up window or
you've got an iframe on the page and

22
00:01:27.643 --> 00:01:29.960
you want to communicate back and forth.

23
00:01:31.200 --> 00:01:36.350
The issue that I'll show here,
so here I've created an iframe.

24
00:01:36.350 --> 00:01:41.827
And I'm getting the iframe's
array constructor function and

25
00:01:41.827 --> 00:01:44.209
I'm saving it as _Array.

26
00:01:46.050 --> 00:01:49.972
And I'm creating a new instance of _Array.

27
00:01:49.972 --> 00:01:54.500
If I do typeof arr it gives me object as
we know arrays are always type of object.

28
00:01:54.500 --> 00:01:59.310
But if I do arr as instanceof
the normal array I get false.

29
00:02:01.030 --> 00:02:04.546
So if you're writing code that you want

30
00:02:04.546 --> 00:02:09.447
to be able to work with like
arrays from other iframes,

31
00:02:09.447 --> 00:02:14.794
it can be very tricky to tell
if something is an array or not.

32
00:02:17.933 --> 00:02:19.608
&gt;&gt; Justin Meyer: So, yeah,
all these things would fail.

33
00:02:19.608 --> 00:02:23.977
So what jQuery provides is a way that
you'll can always know no matter what

34
00:02:23.977 --> 00:02:28.640
host, really what you call these iframes
are kind of like host environments.

35
00:02:28.640 --> 00:02:29.484
It's like a different,

36
00:02:29.484 --> 00:02:33.560
it's almost like the constructor
functions in that environment.

37
00:02:33.560 --> 00:02:36.530
Those array constructor functions
are different than the array constructor

38
00:02:36.530 --> 00:02:37.710
function in your main window.

39
00:02:38.994 --> 00:02:42.320
What jQuery provides is a way to tell if

40
00:02:42.320 --> 00:02:47.600
the array is actually arrayed no matter
what host environment it came from.

41
00:02:49.710 --> 00:02:56.450
So to do that, you can do it yourself by
doing Object.prototype.toString.call.

42
00:02:56.450 --> 00:03:01.322
This is basically stealing
Object.prototype's toString method,

43
00:03:01.322 --> 00:03:04.630
but calling it on an array
instead of an object.

44
00:03:04.630 --> 00:03:08.426
And that will always
give you [object Array],

45
00:03:08.426 --> 00:03:12.693
no matter what host environment
this array came from.

46
00:03:12.693 --> 00:03:16.210
This is like the true way of checking
if something's an array or not.

47
00:03:18.880 --> 00:03:25.577
So we're gonna implement our version
of $.isArray, jQuery isArray.

48
00:03:25.577 --> 00:03:29.133
So this should return true if
it's passed a normal array but

49
00:03:29.133 --> 00:03:31.915
should also return false
if it's arguments.

50
00:03:31.915 --> 00:03:37.954
But it should also return true if you
get an array from a different frame,

51
00:03:37.954 --> 00:03:40.330
it should also return true.

