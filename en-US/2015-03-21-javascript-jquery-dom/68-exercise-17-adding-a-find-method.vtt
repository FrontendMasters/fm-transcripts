WEBVTT

1
00:00:00.000 --> 00:00:03.852
[MUSIC]

2
00:00:03.852 --> 00:00:07.360
&gt;&gt; Justin Meyer: Next exercise
related to finding elements.

3
00:00:07.360 --> 00:00:12.770
Kinda given one element, or trying to find
an element that matches the selector, is

4
00:00:12.770 --> 00:00:18.030
elements provide a way to go from
that element to other elements.

5
00:00:18.030 --> 00:00:21.340
The same way you can go from the document
to find any element in the page.

6
00:00:21.340 --> 00:00:26.020
You can start at one element and
then go find elements inside of it.

7
00:00:26.020 --> 00:00:28.760
So element even though it
really doesn't make sense has

8
00:00:28.760 --> 00:00:30.640
every element has a getElementById method.

9
00:00:30.640 --> 00:00:33.061
They also have getElementsByTagName, so

10
00:00:33.061 --> 00:00:36.970
this will find all elements inside
this element that match this tag.

11
00:00:38.380 --> 00:00:41.940
Similarly they have
getByClassName all classes,

12
00:00:41.940 --> 00:00:44.860
all elements that match this
class name within this element.

13
00:00:44.860 --> 00:00:46.967
And they have a querySelector and

14
00:00:46.967 --> 00:00:50.776
querySelectorAll, this last one is
important for what we're about to do.

15
00:00:50.776 --> 00:00:55.430
Which is jQuery's find method
that finds all elements within

16
00:00:55.430 --> 00:01:00.150
the collection that match
a certain selector.

17
00:01:00.150 --> 00:01:03.550
Sorry, all elements of the children

18
00:01:03.550 --> 00:01:07.330
of item is in the collection
that match a given selector.

19
00:01:10.050 --> 00:01:14.420
So what that means, I'll show in a second,

20
00:01:14.420 --> 00:01:18.890
is if I want to get every div,
I could get every div in the page.

21
00:01:18.890 --> 00:01:23.490
And then what this would do is for
every single div I found, look for

22
00:01:23.490 --> 00:01:28.849
images inside of it, image tags inside
of it and return a list of all of those.

23
00:01:34.349 --> 00:01:40.410
&gt;&gt; Justin Meyer: So to do this one,
there's two things you need to do.

24
00:01:40.410 --> 00:01:43.970
First you need to go through your
collection or write it out again.

25
00:01:43.970 --> 00:01:48.840
You go through your collection and
for every element in your collection,

26
00:01:48.840 --> 00:01:52.562
find all the elements that
match the passed in selector.

27
00:01:53.680 --> 00:01:56.830
And then given all those elements, you're
gonna do that for every single element.

28
00:01:56.830 --> 00:02:01.730
So you're gonna get a list of elements for
every source elements, so for every div,

29
00:02:01.730 --> 00:02:03.790
you might have multiple images.

30
00:02:03.790 --> 00:02:08.160
And then you've got to combine
them all into one big array.

31
00:02:08.160 --> 00:02:11.600
And that array that you have,

32
00:02:11.600 --> 00:02:15.999
you want to make that,
turn that into a instance of $.

33
00:02:17.440 --> 00:02:22.320
So you need to make the $ function not
only be able to take a string, but

34
00:02:22.320 --> 00:02:23.950
take an array.

35
00:02:25.970 --> 00:02:27.990
So that, given an array,
instead of a string,

36
00:02:27.990 --> 00:02:33.680
it's just gonna take those items and
essentially copy them to an instance of $.

37
00:02:33.680 --> 00:02:36.800
Just like we were doing with
the elements that were retrieved.

38
00:02:36.800 --> 00:02:39.662
So let me step through
that again with writing.

39
00:02:42.169 --> 00:02:43.136
&gt;&gt; Justin Meyer: So
here's our find method.

40
00:02:45.968 --> 00:02:48.566
&gt;&gt; Justin Meyer: You're going to have
to create some kind of accumulator or

41
00:02:48.566 --> 00:02:49.970
something like that.

42
00:02:49.970 --> 00:02:53.083
That's an array of all of
the total items found for

43
00:02:53.083 --> 00:02:56.059
every single item in
the original collection.

44
00:03:01.148 --> 00:03:03.565
&gt;&gt; Justin Meyer: This
will be like an array and

45
00:03:03.565 --> 00:03:08.523
then you're gonna have to go for
each item in collection.

46
00:03:08.523 --> 00:03:12.977
You're gonna have

47
00:03:12.977 --> 00:03:17.708
to get elements that

48
00:03:17.708 --> 00:03:22.996
are within the item for

49
00:03:22.996 --> 00:03:26.625
each element.

50
00:03:26.625 --> 00:03:32.490
Elements that are within
the element that match selector and

51
00:03:32.490 --> 00:03:37.560
then you're gonna have to
add them to accumulator.

52
00:03:37.560 --> 00:03:40.720
And at the end of this, what you're
going to want to be able to do,

53
00:03:40.720 --> 00:03:42.789
I'm just gonna give you this kind of part,

54
00:03:42.789 --> 00:03:46.310
your accumulator is gonna look like
elements, it's gonna be an array.

55
00:03:46.310 --> 00:03:49.040
And, at the end of this what you're
going to want to be able to do

56
00:03:49.040 --> 00:03:52.790
is return $(elements).

57
00:03:54.510 --> 00:03:59.638
You're gonna want to take this array
of elements, and create a $ out of it.

58
00:03:59.638 --> 00:04:04.894
I'll come right back down to this, so,
if you're copying, I'll leave it on this.

59
00:04:04.894 --> 00:04:10.184
Let me talk about how $
is gonna have to change.

60
00:04:10.184 --> 00:04:14.290
So $ really only expects a selector.

61
00:04:14.290 --> 00:04:18.238
I'm gonna remove these other comments,

62
00:04:18.238 --> 00:04:23.210
the old ones and
only expect selector to be a string.

63
00:04:23.210 --> 00:04:28.190
So what you really wanna
do is something like if

64
00:04:28.190 --> 00:04:33.935
selector is a string,
you're gonna want to do this,

65
00:04:33.935 --> 00:04:38.420
otherwise, assume it's array for now.

66
00:04:38.420 --> 00:04:41.694
We might change it later so we can work
with something that's not an array.

67
00:04:41.694 --> 00:04:44.079
And just treat those elements
that were passed in,

68
00:04:44.079 --> 00:04:46.140
selector's gonna be an array of elements.

69
00:04:46.140 --> 00:04:48.817
We will just treat it due to
each one of those elements,

70
00:04:48.817 --> 00:04:50.983
what's going on with elements right here.

71
00:04:54.415 --> 00:04:58.966
&gt;&gt; Justin Meyer: Basically all you really
need to do is say elements = selector.

72
00:05:06.430 --> 00:05:11.308
&gt;&gt; Justin Meyer: So this part is kind of
weird to think about but not too hard,

73
00:05:11.308 --> 00:05:15.700
this might be a little trickier down here.

74
00:05:15.700 --> 00:05:20.520
We'll make this one kind of longer
cuz we went quickly through get text,

75
00:05:21.580 --> 00:05:25.530
so we'll do like 10,
or let's do 12 minutes.

76
00:05:26.600 --> 00:05:28.490
Anybody have any questions
before we begin?

77
00:05:29.840 --> 00:05:34.470
&gt;&gt; Speaker 2: Can I see what you added
to the selector, to the dollar function?

78
00:05:34.470 --> 00:05:39.460
&gt;&gt; Justin Meyer: All I added was a comment
that said if selector is a string

79
00:05:39.460 --> 00:05:42.220
you're gonna do what you used to be doing.

80
00:05:42.220 --> 00:05:45.430
And otherwise if it's not a string, you
can just basically assume it's an array.

81
00:05:45.430 --> 00:05:50.590
And you really just want, this is
really an array of items at this point.

82
00:05:50.590 --> 00:05:53.018
Well just, you're just gonna
say well elements is that and

83
00:05:53.018 --> 00:05:55.020
then just go through
the elements essentially.

84
00:05:58.091 --> 00:05:58.857
&gt;&gt; Justin Meyer: All right,

85
00:05:58.857 --> 00:06:04.230
you're making this function work if it's
been passed a string or passed an array.

86
00:06:04.230 --> 00:06:07.138
If it was passed an array,
well you don't need to query the DOM.

87
00:06:07.138 --> 00:06:10.492
You've already been given your elements,
so

88
00:06:10.492 --> 00:06:15.569
just put those elements on this,
the way that you're already doing.

89
00:06:15.569 --> 00:06:19.950
Let me make one more thing
clear that I didn't.

90
00:06:19.950 --> 00:06:25.300
The reason for this is so
that you can call, I can call a div,

91
00:06:25.300 --> 00:06:30.329
find every div,
then find every image in it if I wanted.

92
00:06:30.329 --> 00:06:34.381
And eventually I could, well not image
let me find every div then I'll find

93
00:06:34.381 --> 00:06:37.486
a variable,
let's say I'm finding every anchor in it.

94
00:06:37.486 --> 00:06:44.242
And I can change the text
to("whatever I feel like") right,

95
00:06:44.242 --> 00:06:51.511
because we wanna make sure find is
going to return a jQuery instance.

96
00:06:51.511 --> 00:06:57.669
So, that we can keep chaining like this,
that's why we have to make $.

97
00:06:57.669 --> 00:06:59.781
It's not good enough just
to return the elements.

98
00:06:59.781 --> 00:07:03.440
We wanna return those
elements wrapped in jQuery.

