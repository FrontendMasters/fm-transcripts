WEBVTT

1
00:00:00.000 --> 00:00:03.759
[MUSIC]

2
00:00:03.759 --> 00:00:06.664
&gt;&gt; Justin Meyer: So there's one other
thing that's good to be aware of.

3
00:00:06.664 --> 00:00:11.770
It's Event Delegation, it's this cool
thing in jQuery that allows you to listen.

4
00:00:11.770 --> 00:00:12.800
Instead of listening on every,

5
00:00:12.800 --> 00:00:16.990
let's say you wanted to listen to when
all anchors in the page are clicked on.

6
00:00:21.040 --> 00:00:23.274
Instead of listening on,
going to every single anchor and

7
00:00:23.274 --> 00:00:28.390
sending up an event handler, you can set
up an event handler on the body, and

8
00:00:28.390 --> 00:00:30.430
check if the target was an anchor.

9
00:00:32.130 --> 00:00:36.780
So, register an event handler there,
and then what you would do is wait for

10
00:00:36.780 --> 00:00:40.770
that event to propagate up to the body,
dispatch the body's event handler,

11
00:00:42.310 --> 00:00:46.860
and then you would check the target

12
00:00:46.860 --> 00:00:51.800
to see if that was the element you
were looking for to do stuff on.

13
00:00:51.800 --> 00:00:56.200
So to give an example, if I wanted to know
any time an anchor was clicked on and

14
00:00:56.200 --> 00:01:00.790
just say, you just clicked on an anchor,
here's the code.

15
00:01:00.790 --> 00:01:05.359
I can listen on the body for a click,
check if the target was an anchor, and

16
00:01:05.359 --> 00:01:11.740
then say, you clicked on an anchor.
&gt;&gt; Justin Meyer: Kind of handy.

17
00:01:11.740 --> 00:01:14.710
That's way faster than going
to every single element and

18
00:01:14.710 --> 00:01:16.640
setting up an event handler.

19
00:01:16.640 --> 00:01:20.200
And, this works if people add or
remove anchors at will.

20
00:01:22.520 --> 00:01:26.660
So, I have an event delegation but
I'm not going to show.

21
00:01:26.660 --> 00:01:30.550
I'm just going to say,
jQuery has an event delegation.

22
00:01:30.550 --> 00:01:35.800
It has event delegation that
lets you listen on an element.

23
00:01:35.800 --> 00:01:39.170
But listen for any time a div
might be clicked in the body, and

24
00:01:39.170 --> 00:01:40.270
will call this back for you.

25
00:01:41.470 --> 00:01:45.127
So this is super useful if you
have anything high performance.

26
00:01:45.127 --> 00:01:49.277
If you're trying to draw thousand rows,
like tr's, and

27
00:01:49.277 --> 00:01:53.511
you want to listen to any time
one of those tr's is clicked,

28
00:01:53.511 --> 00:01:58.271
don't register an event handler
on every one of those table rows.

29
00:01:58.271 --> 00:02:03.196
Set up on some element, something that
listens to when a tr is clicked, and

30
00:02:03.196 --> 00:02:06.267
only setup one event listener,
much faster.

31
00:02:06.267 --> 00:02:13.057
So what jQuery's onClick does, just to
walk through it again a little bit better,

32
00:02:13.057 --> 00:02:17.713
is it listens to,
has its event listener on the body, and

33
00:02:17.713 --> 00:02:22.970
then it's just going to check if
this matches the selector div.

34
00:02:25.660 --> 00:02:32.520
And, if it doesn't, it's going to go
to that element's parent and check if

35
00:02:32.520 --> 00:02:37.920
that matches the selector div, and if it
does, then it's going to do the call back.

36
00:02:37.920 --> 00:02:40.985
It's going to call some call back.

37
00:02:40.985 --> 00:02:45.671
And I have a,
there is an example of this in place, but

38
00:02:45.671 --> 00:02:50.270
I'm not going to walk through it,
unfortunately.

39
00:02:51.310 --> 00:02:56.251
I don't know if Mark will let me send in
a personal video that I could add to this

40
00:02:56.251 --> 00:02:57.072
later.
&gt;&gt; Mark: Yes,

41
00:02:57.072 --> 00:02:59.652
sure.
&gt;&gt; Justin Meyer: Okay, I'll make this last

42
00:02:59.652 --> 00:03:04.610
like half hour of content, and
then I'll clean it up good and

43
00:03:04.610 --> 00:03:08.403
I'll send it, and you can append to the-
&gt;&gt; Mark: Yes,

44
00:03:08.403 --> 00:03:09.000
yes.
&gt;&gt; Justin Meyer: That works?

45
00:03:09.000 --> 00:03:09.500
&gt;&gt; Mark: Yes.

46
00:03:09.500 --> 00:03:10.109
Other teachers have done that.

47
00:03:10.109 --> 00:03:11.098
&gt;&gt; Justin Meyer: Okay, yes.

48
00:03:11.098 --> 00:03:11.917
&gt;&gt; Mark: Just link it to this,

49
00:03:11.917 --> 00:03:12.997
underneath the video.
&gt;&gt; Justin Meyer: Yes.

50
00:03:12.997 --> 00:03:13.563
&gt;&gt; Mark: Or underneath the course,

51
00:03:13.563 --> 00:03:14.896
extra videos.
&gt;&gt; Justin Meyer: Yes,

52
00:03:14.896 --> 00:03:20.110
you can do whatever you want.

53
00:03:20.110 --> 00:03:22.711
Okay, so I'll go through how
Event Delegation is set up, and

54
00:03:22.711 --> 00:03:26.072
I'll probably do a run through those whole
events, so that you guys can get it.

55
00:03:26.072 --> 00:03:27.860
And my apologies for kind of running late.

56
00:03:27.860 --> 00:03:31.060
There's a lot to squeeze in if you're
going to learn everything there is to know

57
00:03:31.060 --> 00:03:34.510
about JavaScript in the DOM and
jQuery in two days.

58
00:03:34.510 --> 00:03:36.720
So thank you for hanging in there.

59
00:03:38.940 --> 00:03:42.599
Don't, the one final point,

60
00:03:42.599 --> 00:03:48.340
don't use DOM 0 and DOM 1 event handlers.

61
00:03:48.340 --> 00:03:52.670
You might see people sticking
on click in the page like this.

62
00:03:52.670 --> 00:03:55.430
Now if you're doing it with Angular,
or one of the frameworks,

63
00:03:55.430 --> 00:03:56.640
it's a little bit different.

64
00:03:56.640 --> 00:04:00.300
Why it's okay there, and not okay here.

65
00:04:00.300 --> 00:04:03.510
But this is how people used
to add event listeners.

66
00:04:03.510 --> 00:04:06.160
Don't do that,
I still see that once in a while.

67
00:04:06.160 --> 00:04:10.434
And instead of doing this, use the
addEventListener, because that allows you

68
00:04:10.434 --> 00:04:14.793
to have multiple event handlers instead
of just one event handler on an element.

