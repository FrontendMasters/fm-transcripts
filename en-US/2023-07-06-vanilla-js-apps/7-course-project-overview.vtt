WEBVTT

1
00:00:00.140 --> 00:00:04.120
We're going to be working with
an app with the name Coffee Masters.

2
00:00:04.120 --> 00:00:07.780
In this case, let's say we have
a coffee shop, we have a coffee store,

3
00:00:07.780 --> 00:00:08.850
we sell coffee.

4
00:00:08.850 --> 00:00:13.256
So we're going to make an app so
the user can order ahead, for example,

5
00:00:13.256 --> 00:00:15.540
your coffee, your morning coffee.

6
00:00:15.540 --> 00:00:19.500
You wake up, you open the app, and
you order like, for example, Starbucks or

7
00:00:19.500 --> 00:00:20.980
any other app.

8
00:00:20.980 --> 00:00:24.580
So it's going to be a web app,
not a native app.

9
00:00:24.580 --> 00:00:29.080
It will have a menu with
all the products available.

10
00:00:29.080 --> 00:00:33.530
We can get into the details to
see more more information, and

11
00:00:33.530 --> 00:00:35.369
we can add it to the cart.

12
00:00:35.369 --> 00:00:39.092
Then we'll have a cart and the cart
will have a form so with our name and

13
00:00:39.092 --> 00:00:43.248
something else, an email, so
we can get the receipt, and that's all.

14
00:00:43.248 --> 00:00:48.296
So it's a basic web app,
but it has navigation,

15
00:00:48.296 --> 00:00:52.820
it has a data structure to manage.

16
00:00:52.820 --> 00:00:56.790
So we will see how to make this
app completely from a scratch.

17
00:00:56.790 --> 00:01:01.310
We already have the HTML and
the CSS, so that part is ready.

18
00:01:01.310 --> 00:01:04.770
We will analyze that in a second.

19
00:01:04.770 --> 00:01:09.410
But the data is in JSON, so we already
have the menu in a JSON file, but

20
00:01:09.410 --> 00:01:12.320
we don't have any JavaScript, okay?

21
00:01:12.320 --> 00:01:14.320
So we are going to
download the JavaScript.

22
00:01:14.320 --> 00:01:16.300
We are going to create web components.

23
00:01:16.300 --> 00:01:18.230
We're going to see how that works.

24
00:01:18.230 --> 00:01:21.310
We are going to fetch the menu using HTTP.

25
00:01:21.310 --> 00:01:25.190
We're going to grab that, and
we're going to render the UI.

26
00:01:25.190 --> 00:01:28.820
It's time to see something in action.

27
00:01:28.820 --> 00:01:36.510
So if you go to the URL that again,
it's firtman.github.io/vanila.

28
00:01:36.510 --> 00:01:41.400
You will get into this website
where you can see the introduction.

29
00:01:41.400 --> 00:01:47.615
And basically, the first part that
you need is to clone the project or

30
00:01:47.615 --> 00:01:52.460
download the ZIP file,
whatever you prefer.

31
00:01:52.460 --> 00:01:54.770
Here you have the worship repository.

32
00:01:54.770 --> 00:01:58.434
That is just the initial
part of the workshop, and

33
00:01:58.434 --> 00:02:03.493
then you have at the end also my final
version that it will be similar,

34
00:02:03.493 --> 00:02:09.270
than the one that I'm going to push on
GitHub on this same repository, okay?

35
00:02:09.270 --> 00:02:14.230
So this is the repository that we're
going to use, CoffeeMaster Vanilla.

36
00:02:14.230 --> 00:02:17.160
So I'm going to open that on my IDE.

37
00:02:17.160 --> 00:02:22.580
I'm using VSCode, but any IDE will work.

38
00:02:22.580 --> 00:02:26.519
The only important part here to
test what they're going to do

39
00:02:26.519 --> 00:02:30.880
is to actually load it in a web server,
in a local web server.

40
00:02:30.880 --> 00:02:31.700
Why?

41
00:02:31.700 --> 00:02:36.355
Just for one particular reason, because
we are going to fetch a JSON file and

42
00:02:36.355 --> 00:02:38.840
that's the only requirement for that.

43
00:02:38.840 --> 00:02:43.300
Because if not, we will get a security
restriction from the browser.

44
00:02:43.300 --> 00:02:47.317
So, I mean, if you open the index.html
in the browser because it's Vanilla.js,

45
00:02:47.317 --> 00:02:50.100
we don't have a build process,
we don't have anything.

46
00:02:50.100 --> 00:02:53.440
Actually, we don't have JavaScript
right now, it will work.

47
00:02:53.440 --> 00:02:57.017
But when we get into downloading
the data from the server,

48
00:02:57.017 --> 00:03:00.231
it's not gonna work directly
from the file system.

49
00:03:00.231 --> 00:03:06.934
So you can use a plugin, I have here a
plugin on VS Code because it says go live.

50
00:03:06.934 --> 00:03:11.276
If not, if you have node.js installed,

51
00:03:11.276 --> 00:03:16.487
you can type mpx serve dot
the current folder, and

52
00:03:16.487 --> 00:03:22.710
that will download,
if you don't have, a little server.

53
00:03:22.710 --> 00:03:25.829
There are many servers,
whatever works for you it's fine,

54
00:03:25.829 --> 00:03:28.190
we don't have any special needs.

55
00:03:28.190 --> 00:03:30.700
So I will just use this plugin.

56
00:03:31.720 --> 00:03:37.370
And this is what you're going to see,
okay, just a brown header.

57
00:03:37.370 --> 00:03:38.860
That's the only thing that we have here.

58
00:03:38.860 --> 00:03:42.260
We have some links that
right now are not working.

59
00:03:42.260 --> 00:03:47.348
And the idea is that here, we're going
to render the contents of the app.

60
00:03:47.348 --> 00:03:52.537
If you open this in Google Chrome,
in this case,

61
00:03:52.537 --> 00:03:57.982
it's localhost 1500,
you will see something

62
00:03:57.982 --> 00:04:03.170
that I'm not sure if you have seen before.

63
00:04:03.170 --> 00:04:07.250
I'm talking about that icon,
that small icon there.

64
00:04:07.250 --> 00:04:14.140
Also in the menu You have
an Install Coffee Masters section.

65
00:04:14.140 --> 00:04:17.800
This is because this is
a progressive web app, a PWA.

66
00:04:18.920 --> 00:04:24.023
If you're interested in knowing more
about PWAs, I have a full course on

67
00:04:24.023 --> 00:04:29.641
Frontend Masters about PWAs and how to
build that part, the installable part.

68
00:04:29.641 --> 00:04:32.272
But actually you can install the app and

69
00:04:32.272 --> 00:04:36.690
if you install the app then
it's gonna have its own window.

70
00:04:36.690 --> 00:04:39.790
Now it's really a window,
remember the window DOM object?

71
00:04:39.790 --> 00:04:44.947
Now it's really a window in
the operating system with its own icon

72
00:04:44.947 --> 00:04:50.610
that works on iOS, Android,
iPadOS, Windows, Mac and Linux.

73
00:04:50.610 --> 00:04:52.650
Okay, so you can install the app.

74
00:04:52.650 --> 00:04:56.410
But maybe for
now we can stay with the browser.

75
00:04:57.760 --> 00:05:00.710
So I will go back to to Chrome.

76
00:05:02.010 --> 00:05:07.799
Let's quickly analyze,
I'm going to open the inspector here,

77
00:05:07.799 --> 00:05:12.220
let's quickly analyze what we have here.

78
00:05:12.220 --> 00:05:15.740
What we are seeing here,
it's actually the DOM.

79
00:05:15.740 --> 00:05:18.360
It's not really the HTML.

80
00:05:18.360 --> 00:05:24.350
There is a big difference between the DOM
and the original HTML that was loaded.

81
00:05:24.350 --> 00:05:29.573
In fact, back in time,
when I started doing web development,

82
00:05:29.573 --> 00:05:34.000
we didn't have the DOM
structure inspector.

83
00:05:34.000 --> 00:05:35.910
We didn't have dev tools.

84
00:05:35.910 --> 00:05:37.205
Yeah, we didn't have that.

85
00:05:37.205 --> 00:05:43.850
So the only thing that we have
is right-click, View Source.

86
00:05:43.850 --> 00:05:47.290
Okay, that was the only
tool available at the time.

87
00:05:47.290 --> 00:05:49.700
And this is actually not the DOM.

88
00:05:49.700 --> 00:05:53.050
This isn't a string
representation of the HTML file.

89
00:05:53.050 --> 00:05:56.165
Okay, but that's not the DOM
because the DOM is in memory,

90
00:05:56.165 --> 00:05:58.830
it's a memory structure in memory.

91
00:05:58.830 --> 00:06:05.150
And what we see here, in this case,
it's the same or kind of the same.

92
00:06:05.150 --> 00:06:10.845
Let me show you something that I'm
not sure if you have seen before.

93
00:06:10.845 --> 00:06:15.999
So I'm going to my index.html,
you don't need to do this on your

94
00:06:15.999 --> 00:06:21.076
own code because it's going to
be something that I will delete.

95
00:06:21.076 --> 00:06:24.305
Just for
show you something really quickly.

96
00:06:24.305 --> 00:06:27.630
What do you think about this?

97
00:06:28.690 --> 00:06:33.140
I'm going to add a title here,
like my first HTML test.

98
00:06:35.690 --> 00:06:37.550
And then I'm going to add an h1.

99
00:06:38.650 --> 00:06:41.030
This is a quick HTML code.

100
00:06:42.480 --> 00:06:45.744
So I'm saving this and
I'm loading this here.

101
00:06:45.744 --> 00:06:47.619
So it works, okay?

102
00:06:47.619 --> 00:06:48.599
It works.

103
00:06:48.599 --> 00:06:52.696
What do you think about that HTML,
is it valid?

104
00:06:52.696 --> 00:06:54.351
Maybe I should add a DOCTYPE.

105
00:06:54.351 --> 00:06:55.771
Let's add that one.

106
00:06:58.470 --> 00:07:00.410
What's your feeling about that HTML?

107
00:07:00.410 --> 00:07:01.470
Is it valid?

108
00:07:03.080 --> 00:07:07.520
I'm seeing some faces kind of saying no.

109
00:07:07.520 --> 00:07:10.320
That's not true, it's a valid HTML file.

110
00:07:12.320 --> 00:07:16.290
I don't need the HTML tag,I
don't need the head or the body.

111
00:07:16.290 --> 00:07:19.340
Those are optional in the HTML spec.

112
00:07:19.340 --> 00:07:23.235
You can run that through
the W3C validator, and

113
00:07:23.235 --> 00:07:26.300
you will see it's valid, okay?

114
00:07:26.300 --> 00:07:27.638
It's valid.

115
00:07:27.638 --> 00:07:32.692
Okay, but now, what happens if I add

116
00:07:32.692 --> 00:07:38.412
a style such as that style, will it work?

117
00:07:41.019 --> 00:07:45.050
So I'm setting the background
color as red for the body.

118
00:07:45.050 --> 00:07:47.030
Do we have a body?

119
00:07:47.030 --> 00:07:48.850
I don't say it, will it work?

120
00:07:50.000 --> 00:07:51.190
What are your bets?

121
00:07:51.190 --> 00:07:52.120
Yes, no.

122
00:07:52.120 --> 00:07:52.970
&gt;&gt; Yes, it'll work.

123
00:07:54.340 --> 00:07:58.000
&gt;&gt; So, let's see, it works.

124
00:07:58.000 --> 00:07:58.500
Why?

125
00:07:59.560 --> 00:08:04.535
Because if you look here,
this is the DOM, and

126
00:08:04.535 --> 00:08:07.220
we actually have a body.

127
00:08:08.750 --> 00:08:09.330
What's going on?

128
00:08:10.930 --> 00:08:16.090
Well, the HTML file and
the DOM are not the same thing.

129
00:08:16.090 --> 00:08:21.100
The DOM is a structure in memory, okay?

130
00:08:21.100 --> 00:08:25.410
And the head and the body can be implicit.

131
00:08:27.130 --> 00:08:30.500
So in this case, we have an implicit head,
an implicit body.

132
00:08:30.500 --> 00:08:34.810
They are actually mandatory, not for
my HTML file, but for the DOM.

133
00:08:36.050 --> 00:08:38.723
Every page has a head and a body,

134
00:08:38.723 --> 00:08:44.420
even if I'm not writing them directly or
explicitly in my HTML.

135
00:08:44.420 --> 00:08:47.250
So here we can see a difference
between the DOM and

136
00:08:47.250 --> 00:08:50.030
the HTML file that I'm writing.

137
00:08:50.030 --> 00:08:52.030
Okay, makes sense?

138
00:08:52.030 --> 00:08:56.910
So in this case, we can see that it's not
really a direct representation of my HTML.

139
00:08:56.910 --> 00:09:02.546
If it has added more stuff
such as the body element.

140
00:09:02.546 --> 00:09:03.446
Makes sense?

141
00:09:03.446 --> 00:09:09.695
So just have that in mind that sometimes
you will see not exactly the same.

142
00:09:09.695 --> 00:09:11.605
Let me go back to my code.

143
00:09:11.605 --> 00:09:16.424
You won't see exactly your HTML as
the DOM, you will see it's similar,

144
00:09:16.424 --> 00:09:21.164
but sometimes it's different because
the browser can add more stuff or

145
00:09:21.164 --> 00:09:22.510
remove more stuff.

146
00:09:22.510 --> 00:09:26.544
And sometimes when you have plugins in
your browser, some plugins can also be

147
00:09:26.544 --> 00:09:31.080
injecting things in your DOM as well,
but we're not going to deal with that.

148
00:09:31.080 --> 00:09:34.441
&gt;&gt; It took me quite some time to
understand why view source and

149
00:09:34.441 --> 00:09:36.992
inspect are very, very different things.

150
00:09:36.992 --> 00:09:38.270
&gt;&gt; That's why.

151
00:09:38.270 --> 00:09:45.870
Because when we are inspecting, we are
inspecting the DOM, not the source code.

152
00:09:45.870 --> 00:09:51.310
So the browser actually is parsing the
HTML source code that we are writing and

153
00:09:51.310 --> 00:09:53.580
is creating the DOM structure.

154
00:09:53.580 --> 00:09:57.718
There is a relationship between
both things of course, but

155
00:09:57.718 --> 00:10:00.540
sometimes it's not 100% the same.

156
00:10:00.540 --> 00:10:05.050
Okay, so that example, by the way,

157
00:10:05.050 --> 00:10:11.899
I develop a lot of web apps
without the head and the body.

158
00:10:11.899 --> 00:10:15.522
So because mostly when I'm
when I'm teaching HTML,

159
00:10:15.522 --> 00:10:19.080
I tend to start not adding the head and
the body.

160
00:10:19.080 --> 00:10:22.730
When you see HTML for
the first time, it's overwhelming.

161
00:10:22.730 --> 00:10:24.480
So many things on the screen.

162
00:10:24.480 --> 00:10:28.079
When you remove the HTML,
the head, and the body,

163
00:10:28.079 --> 00:10:31.446
it goes to the point and
it's perfectly valid.

164
00:10:31.446 --> 00:10:36.682
Okay, but now that we understand the DOM,
we know that anyway the head and

165
00:10:36.682 --> 00:10:42.509
the body and the document itself, the HTML
element, are there anyway in the DOM,

166
00:10:42.509 --> 00:10:46.331
even if you're not explicitly saying so
in the HTML.

167
00:10:47.970 --> 00:10:52.877
Okay, so anyway, here in the body,
we have a header,

168
00:10:52.877 --> 00:10:58.640
that's just plain HTML, and
then we have an empty Main.

169
00:10:58.640 --> 00:11:03.570
Okay, the empty main is where we
are going to render the contents.

170
00:11:03.570 --> 00:11:07.263
And then we have a lot of templates
that we don't know what they are and

171
00:11:07.263 --> 00:11:09.420
we will see what they are later.

172
00:11:09.420 --> 00:11:16.385
Okay, but the first important thing that
you can see here is that the templates,

173
00:11:16.385 --> 00:11:20.390
when I go to my DOM,
let me refresh my page now.

174
00:11:22.840 --> 00:11:27.536
Like the header here,
the templates are there in the DOM, but

175
00:11:27.536 --> 00:11:30.350
they're not been rendered, okay?

176
00:11:30.350 --> 00:11:34.460
So we will understand what those
templates are later, okay?

177
00:11:34.460 --> 00:11:35.640
We have a question, right?

178
00:11:35.640 --> 00:11:40.020
&gt;&gt; How does the browser know
which elements go where?

179
00:11:40.020 --> 00:11:42.390
And where to put the body and
head and that kind of thing?

180
00:11:42.390 --> 00:11:47.410
&gt;&gt; Okay, so let's let me create
a new file to understand that part.

181
00:11:47.410 --> 00:11:53.645
So the question is, where the extreme
case that I was writing without, so

182
00:11:53.645 --> 00:11:59.430
the only mandatory thing for for
an HTML file today is the DOCTYPE.

183
00:11:59.430 --> 00:12:01.870
Even if you don't have the DOCTYPE,
it might work anyway.

184
00:12:04.340 --> 00:12:10.560
So the title is mandatory and that's
the only thing that is mandatory actually.

185
00:12:10.560 --> 00:12:15.319
Well, what happens,
you may have a script tag, okay,

186
00:12:15.319 --> 00:12:18.662
you might have a link loading a CSS, and

187
00:12:18.662 --> 00:12:23.550
you may have things like an h1,
this is a visible title.

188
00:12:26.480 --> 00:12:30.114
I mean, I think the spec is
actually specifying this, but

189
00:12:30.114 --> 00:12:32.720
each browser might do different things.

190
00:12:32.720 --> 00:12:36.332
But fortunately,
they're doing the same thing.

191
00:12:36.332 --> 00:12:41.304
When the parser, so
when the browser finds the first

192
00:12:41.304 --> 00:12:46.920
visible element on your page,
it starts the body.

193
00:12:46.920 --> 00:12:49.410
It ends the head and starts the body.

194
00:12:49.410 --> 00:12:50.720
So in this case, it's my H1.

195
00:12:51.830 --> 00:12:55.990
So I may have a lot of elements before
the H1, but they're not visible.

196
00:12:55.990 --> 00:13:03.549
Meta tags, script tags, link elements,
title, all those will go to the head.

197
00:13:03.549 --> 00:13:08.315
When the browser finds the first
paragraph, the first div,

198
00:13:08.315 --> 00:13:13.082
the first even text note,
that is if you just type text like so

199
00:13:13.082 --> 00:13:16.183
without any element, it's visible.

200
00:13:16.183 --> 00:13:20.070
And because it's visible, it says, okay,
it's visible, let's start the body.

201
00:13:20.070 --> 00:13:22.190
That's how that part works, okay?

202
00:13:26.214 --> 00:13:28.584
Yep.
&gt;&gt; So if you move that, like any p tag or

203
00:13:28.584 --> 00:13:32.112
anything before the title, for
example, would there be issues?

204
00:13:32.112 --> 00:13:35.260
&gt;&gt; The title will go to the body.

205
00:13:35.260 --> 00:13:35.770
&gt;&gt; Interesting.

206
00:13:35.770 --> 00:13:36.270
&gt;&gt; Yeah.

207
00:13:37.500 --> 00:13:38.930
What will happen?

208
00:13:38.930 --> 00:13:40.650
Actually, nothing.

209
00:13:40.650 --> 00:13:42.820
Nothing important, okay?

210
00:13:42.820 --> 00:13:46.380
But yeah,
you may have meta tags in your body.

211
00:13:46.380 --> 00:13:47.050
Can you?

212
00:13:47.050 --> 00:13:47.920
Yes, you can.

213
00:13:48.940 --> 00:13:50.530
Does it make sense?

214
00:13:50.530 --> 00:13:52.476
Not really, but I mean,

215
00:13:52.476 --> 00:13:58.144
you know that browsers are doing their
best efforts to render anything.

216
00:13:58.144 --> 00:14:01.750
Even if you don't close tags,
it works, okay?

217
00:14:01.750 --> 00:14:04.020
And so, it will work.

