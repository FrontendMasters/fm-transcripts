WEBVTT

1
00:00:00.170 --> 00:00:02.767
So now I'm going to open my,

2
00:00:02.767 --> 00:00:07.979
we're going to follow now step
by step what we have here.

3
00:00:07.979 --> 00:00:11.120
And we're going to start with
initializing the project.

4
00:00:11.120 --> 00:00:17.080
And this is something that we won't use,
but I wanna show you what this is.

5
00:00:17.080 --> 00:00:22.104
One of the fears that we have is, or
one of the challenges that we sometimes

6
00:00:22.104 --> 00:00:26.819
have when we are working with vanilla JS,
is that it's too verbose.

7
00:00:26.819 --> 00:00:30.790
document.querySelector,
document.getElementById.

8
00:00:30.790 --> 00:00:36.288
Well, JavaScript is a very
flexible language, very flexible.

9
00:00:36.288 --> 00:00:40.575
So this code, if you copy and
paste this code here,

10
00:00:40.575 --> 00:00:47.180
it's just one example of how you can make
your code less verbose if you want to.

11
00:00:48.350 --> 00:00:54.442
So for example, if you don't wanna
type querySelector all the time,

12
00:00:54.442 --> 00:00:58.580
okay, you can put this,
this is like an alias.

13
00:00:59.810 --> 00:01:03.136
So then,
instead of document.QuerySelector,

14
00:01:03.136 --> 00:01:08.340
I can use the dollar sign,
that by the way, is related to jQuery.

15
00:01:08.340 --> 00:01:12.619
jQuery was using the dollar sign for
doing something very similar to this.

16
00:01:12.619 --> 00:01:19.160
And you can reduce verbosity
easily with JavaScript.

17
00:01:19.160 --> 00:01:20.667
So for example, what else do we have here?

18
00:01:20.667 --> 00:01:25.419
You don't like eventListener, for example,

19
00:01:25.419 --> 00:01:32.804
instead of nav.addEventListener.onClick,
you can say on, and how?

20
00:01:32.804 --> 00:01:35.963
You change the prototype of HTMLElement,
and

21
00:01:35.963 --> 00:01:40.904
you can use call to get all the arguments
or pull the arguments manually.

22
00:01:40.904 --> 00:01:44.864
It's just a hack that I wanna
show you that if you feel

23
00:01:44.864 --> 00:01:49.094
like some parts of vanilla
JavaScript are too verbose,

24
00:01:49.094 --> 00:01:53.145
just create a quick alias
sort of wrapper on top of it.

25
00:01:53.145 --> 00:01:58.689
And even with prototype,
you can actually change directly,

26
00:01:58.689 --> 00:02:04.240
or you can add aliases to any object,
such as an HTMLElement.

27
00:02:04.240 --> 00:02:06.410
This is just a global variable.

28
00:02:06.410 --> 00:02:09.550
And we can use in JavaScript,
you can start or

29
00:02:09.550 --> 00:02:12.660
use the dollar sign as an identifier.

30
00:02:12.660 --> 00:02:17.607
And the same happens with underscore,
you can also use underscore, so

31
00:02:17.607 --> 00:02:20.745
only underscore and
dollar sign as symbols.

32
00:02:20.745 --> 00:02:25.270
So then you can create the variable
with a name underscore.

33
00:02:25.270 --> 00:02:29.153
So instead of a variable,
you can use a function or an object,

34
00:02:29.153 --> 00:02:33.540
you can create an object with some
functions that you use a lot.

35
00:02:33.540 --> 00:02:38.100
For example, domready,
and you receive an event.

36
00:02:38.100 --> 00:02:41.462
And you say that this is,

37
00:02:41.462 --> 00:02:46.107
I'm doing a mix here of syntaxes,

38
00:02:46.107 --> 00:02:50.443
something like this, like so.

39
00:02:50.443 --> 00:02:54.966
And then here you say, okay, domready
is going to be window.addEventListener.

40
00:02:54.966 --> 00:02:59.607
So then you use domready,
and you pass a function.

41
00:02:59.607 --> 00:03:02.750
I'm doing a mix here, that's the syntax.

42
00:03:02.750 --> 00:03:07.800
So then domready equals to,
I'm just playing with this, okay?

43
00:03:07.800 --> 00:03:12.120
But I'm showing you that, yeah, you're
creating your own library if you do that.

44
00:03:13.180 --> 00:03:18.092
And that's, we are going back to
that slide where I show you a tweet.

45
00:03:18.092 --> 00:03:21.535
Saying that maybe it's a good idea to,
at one point,

46
00:03:21.535 --> 00:03:25.375
when you are doing vanilla JS,
creating your own library.

47
00:03:25.375 --> 00:03:31.195
Of course,
when we are doing things like this,

48
00:03:31.195 --> 00:03:34.988
we are reducing, let's say,

49
00:03:36.359 --> 00:03:40.150
Having clean code for
others to read, things like that.

50
00:03:40.150 --> 00:03:41.691
But hey, we have ChatGPT now,

51
00:03:41.691 --> 00:03:45.180
I guess ChatGPT can make
the conversion pretty quickly.

52
00:03:45.180 --> 00:03:48.025
But we explain ChatGPT,
okay, this is my library,

53
00:03:48.025 --> 00:03:51.721
give me full completely vanilla JS code,
and he will do that for us.

54
00:03:51.721 --> 00:03:56.712
And this is just really quickly to show
you how JavaScript is really flexible,

55
00:03:56.712 --> 00:04:01.491
to actually change the language
completely if we don't like some things.

56
00:04:01.491 --> 00:04:07.291
We won't be using this today,
we will stay with verbose vanilla JS.

