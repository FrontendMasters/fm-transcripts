WEBVTT

1
00:00:00.280 --> 00:00:03.517
Okay, let's create our
first Web components.

2
00:00:03.517 --> 00:00:09.058
We are now here in chapter 4, so
we're going to create the custom elements,

3
00:00:09.058 --> 00:00:14.021
we're going to start with a basic
one before reactive programming.

4
00:00:14.021 --> 00:00:17.492
So we're going to start
creating these files.

5
00:00:17.492 --> 00:00:22.872
And for this, I'm not sure if
you realize that we do have

6
00:00:22.872 --> 00:00:29.430
a components folder with CSS
already waiting for us, okay?

7
00:00:29.430 --> 00:00:31.490
And with some names.

8
00:00:31.490 --> 00:00:36.204
So the idea is that we're going to
create the JavaScript counterpart

9
00:00:36.204 --> 00:00:41.560
of these CSS files, and
they're going to be Web components, okay?

10
00:00:41.560 --> 00:00:44.580
So we're going to start with menu,
menu page.

11
00:00:44.580 --> 00:00:50.524
So I'm going to start,
create, MenuPage.js.

12
00:00:50.524 --> 00:00:54.709
MenuPage.js then,
we'll need first a class.

13
00:00:54.709 --> 00:00:59.756
So we need to create the class
with the name MenuPage,

14
00:00:59.756 --> 00:01:03.356
extending from HTML element, okay?

15
00:01:03.356 --> 00:01:10.627
As I mentioned before, typically,
the next step is to create a constructor,

16
00:01:10.627 --> 00:01:14.592
and please, please, always call super,

17
00:01:14.592 --> 00:01:20.560
you will have problems with some
elements if you don't do that.

18
00:01:20.560 --> 00:01:26.645
And finally, we are going to talk
with the custom elements API,

19
00:01:26.645 --> 00:01:32.053
and we're going to define a new
HTML element with a name,

20
00:01:32.053 --> 00:01:37.572
for example menu-page,
apply to that class.

21
00:01:37.572 --> 00:01:40.108
Is this with shadow DOM?

22
00:01:40.108 --> 00:01:44.900
Not yet, so by default,
we don't have Shadow DOM.

23
00:01:44.900 --> 00:01:48.281
&gt;&gt; How do Web components affect SEO?

24
00:01:48.281 --> 00:01:53.374
&gt;&gt; Okay, so the question,
how do Web components affects SEO?

25
00:01:53.374 --> 00:02:00.043
It depends, so this question is within
the question of what happens with single

26
00:02:00.043 --> 00:02:05.829
page applications and SEO, and
client side applications with SEO.

27
00:02:05.829 --> 00:02:11.289
But let's say that based on
how you're rendering this,

28
00:02:11.289 --> 00:02:18.050
it may not affect a lot, or in fact,
it affect less than using React.

29
00:02:18.050 --> 00:02:18.760
Why?

30
00:02:18.760 --> 00:02:22.292
Because, for example,
your template is here in the HTML anyway,

31
00:02:22.292 --> 00:02:25.110
if you use this technique, okay?

32
00:02:25.110 --> 00:02:30.666
So, I would argue that it's
not affecting in any special

33
00:02:30.666 --> 00:02:35.500
way compared with not
using the Web components.

34
00:02:35.500 --> 00:02:41.211
So it's the same as any single
page application, that today,

35
00:02:41.211 --> 00:02:48.860
let's say that search indexes are smart
enough to work without any issue.

36
00:02:48.860 --> 00:02:52.850
Unless you are taking 30
seconds to render your UI.

37
00:02:53.890 --> 00:02:58.048
Typically, it works, so
it's not affecting negatively.

38
00:03:00.870 --> 00:03:02.663
Okay, so now we have menu page.

39
00:03:02.663 --> 00:03:06.380
Does it mean that we can now
use menu page somewhere?

40
00:03:08.130 --> 00:03:08.690
Yes?
No?

41
00:03:08.690 --> 00:03:12.070
What do you think?
What happens if I have here, a menu-page?

42
00:03:12.070 --> 00:03:12.766
Will it work?

43
00:03:14.239 --> 00:03:15.734
I mean, what happens?

44
00:03:15.734 --> 00:03:20.120
How the browser knows that I
have that JavaScript file there?

45
00:03:20.120 --> 00:03:24.329
So I'm in the browser, and if I'm
going to header I do have a menu page,

46
00:03:24.329 --> 00:03:27.292
but this is actually
rendering my Web component?

47
00:03:27.292 --> 00:03:29.130
The answer is no.

48
00:03:29.130 --> 00:03:33.950
When the browser finds an unknown element,
it just ignores the element.

49
00:03:35.110 --> 00:03:39.983
By the way, it goes to the DOM
as an unknown element, but

50
00:03:39.983 --> 00:03:42.840
it's not yet my element.

51
00:03:42.840 --> 00:03:43.720
So why?

52
00:03:43.720 --> 00:03:49.643
Because there is no link between
this HTML and the menu page, JS.

53
00:03:49.643 --> 00:03:52.400
Where can I do the link?

54
00:03:52.400 --> 00:03:58.330
For example here, in my app.js,
I can link my Web components.

55
00:03:58.330 --> 00:03:59.070
How?

56
00:03:59.070 --> 00:04:00.930
Just importing them.

57
00:04:00.930 --> 00:04:04.890
By the way, for that,
I need to export them.

58
00:04:04.890 --> 00:04:10.200
So I can export my MenuPage, so
then someone else can use it.

59
00:04:10.200 --> 00:04:11.414
And then I'm going to import.

60
00:04:16.540 --> 00:04:20.500
MenuPage from components MenuPage.

61
00:04:20.500 --> 00:04:25.615
And this is weird, because we are not
going to use it from JavaScript yet,

62
00:04:25.615 --> 00:04:27.857
but just by importing the file.

63
00:04:27.857 --> 00:04:32.687
Now, the browser will load that file,
and it will execute that module,

64
00:04:32.687 --> 00:04:36.810
and when it will execute that module,
it will execute the define.

65
00:04:38.000 --> 00:04:42.562
And now the browser will know that
we are defining a new Web component,

66
00:04:42.562 --> 00:04:45.670
with the naming MenuPage,
does it make sense?

67
00:04:46.840 --> 00:04:51.086
So you need to import there somewhere
in the chain, in the import chain,

68
00:04:51.086 --> 00:04:53.620
because if not, it's not gonna work.

69
00:04:53.620 --> 00:04:55.640
We will see a difference.

70
00:04:55.640 --> 00:05:00.510
Well, not completely,
because it's still empty right now, okay?

71
00:05:00.510 --> 00:05:02.676
So nothing happens there.

72
00:05:02.676 --> 00:05:06.890
But now it's linked, so
now it's ready for usage.

73
00:05:06.890 --> 00:05:09.530
But anyway,
we're not going to use it like this.

74
00:05:09.530 --> 00:05:11.050
We're going to use it from the router.

75
00:05:12.310 --> 00:05:17.235
Instead of creating an h1 like now,
I'm going to render that, okay?

76
00:05:17.235 --> 00:05:19.790
But we need to load the template.

77
00:05:19.790 --> 00:05:20.720
Let's go step by step.

78
00:05:21.870 --> 00:05:25.048
So, that's the menu page, and

79
00:05:25.048 --> 00:05:29.758
I'm going to just clone
them as details page and

80
00:05:29.758 --> 00:05:34.131
order page, and then change the contents.

81
00:05:34.131 --> 00:05:37.946
Order page, order page, and
also please change this,

82
00:05:37.946 --> 00:05:41.200
because you cannot redefine
the same tag name.

83
00:05:43.330 --> 00:05:46.380
DetailsPage, details-page.

84
00:05:46.380 --> 00:05:48.633
So those are my three pages, okay?

85
00:05:48.633 --> 00:05:53.200
And then here, I'd need DetailsPage.

86
00:05:55.540 --> 00:05:57.820
And what else do we need to do?

87
00:05:57.820 --> 00:06:03.169
We need to import all
the components in app.js

88
00:06:07.118 --> 00:06:12.419
So I'm going to add import for
DetailsPage,

89
00:06:12.419 --> 00:06:17.310
and they're going to import OrderPage.

90
00:06:18.840 --> 00:06:23.154
That means that the browser will download
those JavaScript files, will parse those

91
00:06:23.154 --> 00:06:27.380
JavaScript files and it will know that
there are new components available.

92
00:06:27.380 --> 00:06:31.867
&gt;&gt; Is this getting into how you would
create your own component library?

93
00:06:31.867 --> 00:06:33.700
&gt;&gt; I'm creating components.

94
00:06:33.700 --> 00:06:36.165
I'm not sure what you mean by library,
but yeah,

95
00:06:36.165 --> 00:06:39.070
we are creating a set of three components.

96
00:06:39.070 --> 00:06:44.620
And a Web component is also
the mix of custom elements.

97
00:06:44.620 --> 00:06:48.610
So far, we have just created
the custom elements, nothing else.

98
00:06:48.610 --> 00:06:52.658
But the mix of custom elements,
template, using the template string, and

99
00:06:52.658 --> 00:06:55.470
actually clone the template and use it.

100
00:06:55.470 --> 00:07:00.340
And shadow DOM, the 3 in action is
what we know as a Web component.

101
00:07:00.340 --> 00:07:03.540
And it's kind of a way to create
your own component library.

102
00:07:03.540 --> 00:07:08.316
Okay, so the next step, well,
we can pick the next step,

103
00:07:08.316 --> 00:07:11.142
but let's say that in the router,

104
00:07:11.142 --> 00:07:16.029
if we go to the Router.js,
right now we are creating h1s.

105
00:07:16.029 --> 00:07:18.650
And we may wanna change that.

106
00:07:18.650 --> 00:07:24.407
So instead of h1, I can now create
elements of my custom elements,

107
00:07:24.407 --> 00:07:31.320
such as the menu-page here,
the order-page, and the details-page.

108
00:07:31.320 --> 00:07:35.876
And by the way, what happens if
I leave the text content there?

109
00:07:35.876 --> 00:07:36.992
Will it work?

110
00:07:36.992 --> 00:07:41.620
Yeah, because it's an HTML element,
it can contain text inside.

111
00:07:42.880 --> 00:07:45.361
I am not sure I wanna render that, okay?

112
00:07:45.361 --> 00:07:48.932
At the end,
because I have a template for that, but

113
00:07:48.932 --> 00:07:53.160
it should do something,
but now it's not an h1.

114
00:07:53.160 --> 00:07:56.899
So, if now, you can see,
it says a different style,

115
00:07:56.899 --> 00:07:59.240
because it's not an h1, okay?

116
00:08:00.340 --> 00:08:01.610
But it works.

117
00:08:01.610 --> 00:08:05.989
So now we have a menu page, and
that menu page has a text inside.

118
00:08:12.616 --> 00:08:17.550
Okay?
So we are creating our own elements.

