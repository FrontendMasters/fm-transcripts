WEBVTT

1
00:00:00.070 --> 00:00:01.910
The accessibility tree.

2
00:00:01.910 --> 00:00:05.470
We've seen this in that
dev tools inspector.

3
00:00:05.470 --> 00:00:10.475
The accessibility tree is similar to
the DOM, the document object model,

4
00:00:10.475 --> 00:00:14.448
in that it is a tree representation
of objects on a page, but

5
00:00:14.448 --> 00:00:19.180
it's only the things that
are interesting to accessibility.

6
00:00:19.180 --> 00:00:25.948
So, semantic elements, not style tags or
script tags or comments.

7
00:00:25.948 --> 00:00:30.324
Like a lot of that stuff that you
see in the DOM, at least you can,

8
00:00:30.324 --> 00:00:35.108
it might not have objects with it,
because basically the way that this

9
00:00:35.108 --> 00:00:40.082
stuff works in HTML is we write an element
or a tag, that tag gets parsed.

10
00:00:40.082 --> 00:00:44.079
Turned into an object, the document
object model, those objects and

11
00:00:44.079 --> 00:00:48.087
when they become rendered as elements
have all kinds of information.

12
00:00:48.087 --> 00:00:52.714
That's where the properties and
the attributes, they do a lot of things.

13
00:00:52.714 --> 00:00:57.540
Some of those things are really relevant
to accessibility, so there is a kind of

14
00:00:57.540 --> 00:01:01.876
separate structure that's created
by the browsers and our platform.

15
00:01:01.876 --> 00:01:07.285
So I'm on a Mac, there's MacOS
accessibility APIs, on my iPhone,

16
00:01:07.285 --> 00:01:13.183
I have iOS accessibility APIs,
Windows has its own, Android, and so on.

17
00:01:13.183 --> 00:01:16.850
So there's slight differences
in these accessibility APIs on

18
00:01:16.850 --> 00:01:21.762
your actual platform, your computer, but
they work with web browsers, and this is

19
00:01:21.762 --> 00:01:27.277
why standards are so important is because
we're coordinating all of this, right?

20
00:01:27.277 --> 00:01:31.256
But the accessibility tree is
in all of these platforms, and

21
00:01:31.256 --> 00:01:34.617
it's what screen readers
use to announce things.

22
00:01:34.617 --> 00:01:39.757
So, that all the extra
cruft is stripped away.

23
00:01:39.757 --> 00:01:44.634
And it's helpful when we debug using
tools like the Chrome accessibility tools

24
00:01:44.634 --> 00:01:48.054
cuz it'll show us what's in
the accessibility tree and

25
00:01:48.054 --> 00:01:52.438
we can get pretty far before we actually
have to turn on a screen reader.

26
00:01:52.438 --> 00:01:56.645
Like that tool was not around
when I started and it's awesome.

27
00:01:56.645 --> 00:02:00.799
So let's look at
the accessibility tree right now.

28
00:02:00.799 --> 00:02:04.588
I just inspected the page,
I can go over here to Accessibility.

29
00:02:04.588 --> 00:02:07.668
And so
it shows me there's some generic elements.

30
00:02:07.668 --> 00:02:10.719
There's an article tag, a main,

31
00:02:10.719 --> 00:02:15.043
a paragraph that has static text and
a link in it.

32
00:02:15.043 --> 00:02:18.868
So for the link, for example,
I can see that its role is link,

33
00:02:18.868 --> 00:02:23.281
and when it's an anchor tag,
it just gets that role of link by default,

34
00:02:23.281 --> 00:02:26.536
like that's implicit,
it comes with the element.

35
00:02:26.536 --> 00:02:31.366
It's like a main, has a main role,
like those roles, this is where ARIA

36
00:02:31.366 --> 00:02:36.290
all comes together, is that it's
relevant in this accessibility tree.

37
00:02:36.290 --> 00:02:39.498
And we can actually,
we can look at this now and

38
00:02:39.498 --> 00:02:44.353
we can see kind of how it relates to
the DOM, but there's way more stuff

39
00:02:44.353 --> 00:02:49.242
over here on the DOM side than there
is on the accessibility tree side.

40
00:02:49.242 --> 00:02:53.904
And I think they limit what you
see in Chrome, at least for

41
00:02:53.904 --> 00:02:57.704
performance reasons,
but you can expand it.

42
00:02:57.704 --> 00:02:59.127
Not that you would necessarily want to.

43
00:02:59.127 --> 00:03:02.992
See, they're making me reload
if I really wanna do that.

44
00:03:02.992 --> 00:03:06.697
But this is how screen readers,
most of them,

45
00:03:06.697 --> 00:03:11.449
some will look at the DOM also,
I know JAWS on Windows will.

46
00:03:11.449 --> 00:03:17.368
But you can inspect a lot as developers,
this should be a regular testing tool.

47
00:03:17.368 --> 00:03:19.053
So we wanna know what it is, what it does.

48
00:03:20.504 --> 00:03:24.765
And I wrote about the accessibility
tree a while back when I was learning

49
00:03:24.765 --> 00:03:27.187
about accessibility and performance.

50
00:03:27.187 --> 00:03:32.046
So I have this graphic that
I made kind of describing

51
00:03:32.046 --> 00:03:36.460
the Firefox Gecko engine's rendering flow.

52
00:03:36.460 --> 00:03:40.765
And so, the accessibility tree,
I kind of estimated,

53
00:03:40.765 --> 00:03:44.346
where it would land in
the rendering process.

54
00:03:44.346 --> 00:03:49.063
And I did an interview with Marco Ziha,
he worked at Mozilla in that

55
00:03:49.063 --> 00:03:53.713
article on my website, but
it's really cool to go back and read.

56
00:03:53.713 --> 00:03:58.254
He gave me some really interesting details
about how the accessibility tree works, so

57
00:03:58.254 --> 00:04:00.506
if you're curious, you can go read that.

58
00:04:03.124 --> 00:04:06.991
So we visualize and
test it with Chrome DevTools,

59
00:04:06.991 --> 00:04:12.067
Firefox has an accessibility tree
inspector as well and Safari.

60
00:04:12.067 --> 00:04:16.099
So we have a lot of tools at our disposal,
we just want to know what is this thing?

61
00:04:16.099 --> 00:04:19.691
Well, it's what screen readers
use to announce information.

62
00:04:19.691 --> 00:04:24.980
The roles, what are things,
the states, what state are they in,

63
00:04:24.980 --> 00:04:31.033
the properties, like, are there any names,
any other characteristics?

64
00:04:31.033 --> 00:04:35.736
And so this matters because we want
to know, what is HTML doing for

65
00:04:35.736 --> 00:04:38.056
us and what is ARIA doing for us?

66
00:04:38.056 --> 00:04:42.243
Well, they all come together, so
it's all part of the rendered output.

67
00:04:42.243 --> 00:04:46.830
And I think a good example of
why you wanna understand this,

68
00:04:46.830 --> 00:04:51.894
the distinction between HTML and
ARIA, it came up for me at work.

69
00:04:51.894 --> 00:04:57.458
My coworkers were curious when to use
the disabled attribute on a button or

70
00:04:57.458 --> 00:05:00.523
a form control versus aria-disabled?

71
00:05:00.523 --> 00:05:04.338
They've seen both of those but
weren't quite sure, what does that do?

72
00:05:04.338 --> 00:05:06.756
Well, disabled is built-in HTML.

73
00:05:06.756 --> 00:05:10.699
It's an HTML attribute that
will disable an input.

74
00:05:10.699 --> 00:05:12.866
It will remove it from the tab order.

75
00:05:12.866 --> 00:05:15.965
It will also tell an accessibility tree,
or

76
00:05:15.965 --> 00:05:20.758
in the accessibility tree it will
affect that element there, too.

77
00:05:20.758 --> 00:05:24.163
Whereas aria-disabled will not make
it anything with the keyboard,

78
00:05:24.163 --> 00:05:25.725
it won't change the keyboard.

79
00:05:25.725 --> 00:05:28.631
It won't gray it out to
make it look disabled,

80
00:05:28.631 --> 00:05:31.397
it will only touch the accessibility tree.

81
00:05:31.397 --> 00:05:34.231
So it will affect a screen reader user,
but

82
00:05:34.231 --> 00:05:37.795
not a keyboard user who
isn't using assistive tech.

83
00:05:37.795 --> 00:05:43.072
So I think we want to know, what
are the effects on the accessibility tree?

84
00:05:43.072 --> 00:05:46.957
I think we saw some of that stuff
with the CSS visibility methods.

85
00:05:46.957 --> 00:05:52.217
Things like opacity and visibility,
those have effects or not.

86
00:05:52.217 --> 00:05:55.754
So we kind of want all of these
tools in this whole picture,

87
00:05:55.754 --> 00:05:58.930
we wanna be aware of it so
that when we are debugging or

88
00:05:58.930 --> 00:06:03.871
making recommendations that we kinda know
what ARIA does and doesn't do for us.

89
00:06:03.871 --> 00:06:08.338
And the accessibility tree is
a way that we can visualize it.

90
00:06:08.338 --> 00:06:12.721
So I have a couple of links in here,
the one from my site on accessibility and

91
00:06:12.721 --> 00:06:17.455
performance, there's also a really great
article in here on web accessibility

92
00:06:17.455 --> 00:06:20.331
with accessibility APIs
on Smashing Magazine.

93
00:06:20.331 --> 00:06:25.972
I think it might be written by Leonie
Watson, and she is blind and amazing.

94
00:06:25.972 --> 00:06:29.238
So I love reading stuff from her
about how screen readers work.

95
00:06:29.238 --> 00:06:30.799
So I'd recommend that.

96
00:06:30.799 --> 00:06:34.944
&gt;&gt; It can happen that a long
text has text overflow ellipses.

97
00:06:34.944 --> 00:06:38.421
How would we handle that case?

98
00:06:38.421 --> 00:06:42.163
&gt;&gt; Long text with ellipses.

99
00:06:42.163 --> 00:06:45.019
Yeah, I guess talking
about accessible names.

100
00:06:45.019 --> 00:06:49.475
So, yeah, there was an attribute for
a while called

101
00:06:49.475 --> 00:06:54.652
Long Desk that was meant for
longer descriptions of things.

102
00:06:54.652 --> 00:06:56.788
I think that might have been deprecated,

103
00:06:56.788 --> 00:06:59.603
it was never really a technique
that carried through.

104
00:06:59.603 --> 00:07:05.057
But I think some of the techniques
that you can do with aria-labeledby

105
00:07:05.057 --> 00:07:09.594
give you more flexibility
over things like aria-label.

106
00:07:09.594 --> 00:07:14.541
So aria-label is meant for short things,
just like alt text is on images.

107
00:07:14.541 --> 00:07:20.325
Aria-labeledby, you can use to
point to entire groups of elements,

108
00:07:20.325 --> 00:07:25.139
like a marked-up table or
a heading and some paragraphs.

109
00:07:25.139 --> 00:07:30.922
You can put more content into an element
and reference it with aria-labeledby.

110
00:07:30.922 --> 00:07:35.254
So that's probably what I would
recommend for some of that technique.

111
00:07:35.254 --> 00:07:40.185
As for the ellipsis,
the content that's cut off,

112
00:07:40.185 --> 00:07:45.703
I guess how does a sighted user
get to read more or do they?

113
00:07:45.703 --> 00:07:50.476
If it's cut off for everyone,
then it's kind of, cut off for everyone.

114
00:07:50.476 --> 00:07:54.488
[LAUGH] But if mouse users or
sighted users have a way to read more,

115
00:07:54.488 --> 00:07:57.979
we just want to make sure
that mechanism is accessible,

116
00:07:57.979 --> 00:08:00.233
that's what comes to mind anyway.

117
00:08:00.233 --> 00:08:03.494
&gt;&gt; About facts sections of a page.

118
00:08:03.494 --> 00:08:08.507
The name of the fact might have a H2,
but the question under it should

119
00:08:08.507 --> 00:08:13.013
be H3 to respect the whole tree
of accessibility, correct?

120
00:08:13.013 --> 00:08:14.876
&gt;&gt; That sounds correct.

121
00:08:14.876 --> 00:08:19.378
I'm not quite sure if that's reference
to the slides or just something else.

122
00:08:19.378 --> 00:08:24.388
But yeah, we should try and
have an overall heading hierarchy.

123
00:08:24.388 --> 00:08:29.825
And you'll see in the accessibility tree
it will show heading levels, so yeah, all

124
00:08:29.825 --> 00:08:35.124
that stuff kind of carries through to what
objects are in the accessibility tree.

