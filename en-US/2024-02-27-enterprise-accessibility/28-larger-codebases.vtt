WEBVTT

1
00:00:00.000 --> 00:00:04.417
So some larger codebases, let's talk
about in an enterprise context, or

2
00:00:04.417 --> 00:00:06.670
simply on a larger engineering team.

3
00:00:06.670 --> 00:00:09.839
When you encounter a large
codebase to navigate,

4
00:00:09.839 --> 00:00:12.329
especially when you're new on a team,

5
00:00:12.329 --> 00:00:17.020
it can be tough to sometimes navigate
around, especially as a tech lead.

6
00:00:17.020 --> 00:00:20.179
I think sometimes tech leads
are hired from within.

7
00:00:20.179 --> 00:00:25.703
I've also seen tech leads roles where
they're hiring brand new people, so you

8
00:00:25.703 --> 00:00:31.077
have to get up to speed and so to gather
enough context to make contributions.

9
00:00:31.077 --> 00:00:35.097
It's like one of the questions I asked
in interviews was what's something that

10
00:00:35.097 --> 00:00:38.100
a new hire could do within 30
days that would impress you?

11
00:00:38.100 --> 00:00:42.651
And an answer I got a lot
was make contributions,

12
00:00:42.651 --> 00:00:47.980
cuz it can be hard to figure
out what is up to be effective.

13
00:00:47.980 --> 00:00:49.362
So that's what this is all about.

14
00:00:49.362 --> 00:00:50.657
It's like how do you do that?

15
00:00:50.657 --> 00:00:54.495
And I have a graphic about different
code bases, interestingly,

16
00:00:54.495 --> 00:00:58.206
they have the space shuttle on here
as being like a big code base.

17
00:00:58.206 --> 00:01:03.715
Photoshop 1.0,
it's kind of some old classic software.

18
00:01:03.715 --> 00:01:07.690
I always call my iPhone my pocket
space shuttle, cuz it has more

19
00:01:07.690 --> 00:01:12.498
computing power than the first space
shuttle, [LAUGH] kind of interesting.

20
00:01:12.498 --> 00:01:14.225
Here are some tips, some practical tips.

21
00:01:14.225 --> 00:01:19.358
So use core components like either
third-party component libraries,

22
00:01:19.358 --> 00:01:22.479
Chakra's amazing, there's a bunch now.

23
00:01:22.479 --> 00:01:25.154
Headless UI has some good parts.

24
00:01:25.154 --> 00:01:30.278
When you centralize the UI components for
reuse, either in your own design system or

25
00:01:30.278 --> 00:01:34.248
a third party design system,
there are so many opportunities for

26
00:01:34.248 --> 00:01:38.026
accessibility, or challenges,
depending on the library.

27
00:01:38.026 --> 00:01:42.797
But as consumers,
you can take advantage of those decisions.

28
00:01:42.797 --> 00:01:44.835
You definitely wanna test it out.

29
00:01:44.835 --> 00:01:49.344
I think sometimes with design systems and
component libraries when you're a consumer

30
00:01:49.344 --> 00:01:53.929
of them, they're like, they handled it,
we don't need to test it, it's fine.

31
00:01:53.929 --> 00:01:57.817
But you really do,
I think you can do your framework

32
00:01:57.817 --> 00:02:01.623
authors a solid by testing it and
reporting back.

33
00:02:01.623 --> 00:02:07.422
Report issues, cuz they're just assuming
it works, it might not work that well.

34
00:02:07.422 --> 00:02:10.915
But at the very least, if you
centralize to a core set of components,

35
00:02:10.915 --> 00:02:14.230
you can make improvements in
the central location over time, and

36
00:02:14.230 --> 00:02:17.438
that's just fewer places that
you have to go and make changes.

37
00:02:17.438 --> 00:02:21.950
I've been making a lot of core component
improvements to date pickers and

38
00:02:21.950 --> 00:02:25.806
selects, and so then we can go
grab those.and that already has

39
00:02:25.806 --> 00:02:29.613
the capabilities that we needed
the last time we worked on it.

40
00:02:31.783 --> 00:02:34.765
So some more code base tips,
observe conventions and

41
00:02:34.765 --> 00:02:38.154
don't be afraid to suggest
more accessible improvements.

42
00:02:38.154 --> 00:02:42.704
Read through the code base,
look who committed what code if you can.

43
00:02:42.704 --> 00:02:46.762
Use a get lens extension or
something and figure out who committed

44
00:02:46.762 --> 00:02:50.988
the anti-patterns and
who committed the code that worked better?

45
00:02:50.988 --> 00:02:56.011
And can you go and talk to those people
nicely and figure out what happened there?

46
00:02:56.011 --> 00:02:58.265
What's the story here?

47
00:02:58.265 --> 00:03:01.592
Collect all that information and
kind of gather your perspective for

48
00:03:01.592 --> 00:03:02.519
a bigger picture.

49
00:03:02.519 --> 00:03:06.749
And can you make contributions in
the scope of your current team priorities?

50
00:03:06.749 --> 00:03:09.932
Cuz that can be challenge.

51
00:03:09.932 --> 00:03:12.539
Make accessibility easy to test.

52
00:03:12.539 --> 00:03:14.817
Get some preview URLs, use storybook,

53
00:03:14.817 --> 00:03:19.516
whatever you can do to make it easier to
test, you'll probably increase quality.

54
00:03:19.516 --> 00:03:23.065
So I'm always pushing for that and
it can be hard in some environments, so

55
00:03:23.065 --> 00:03:24.393
find however you can do it.

56
00:03:24.393 --> 00:03:26.223
Storybook might be the answer,

57
00:03:26.223 --> 00:03:29.896
because it's free of some of
your other pipeline constraints.

58
00:03:32.280 --> 00:03:36.832
Look for accessibility documentation,
including some testing steps, and

59
00:03:36.832 --> 00:03:39.010
if there aren't any, create some.

60
00:03:39.010 --> 00:03:43.752
If you have an accessibility team,
maybe you could consult with them, or

61
00:03:43.752 --> 00:03:48.038
working with a third-party company
of an accessibility vendor,

62
00:03:48.038 --> 00:03:51.341
they might have some checklists or
some guidance.

63
00:03:51.341 --> 00:03:54.496
And then if you have
champions on your teams,

64
00:03:54.496 --> 00:03:58.980
give them a little time to
contribute some accessibility tips,

65
00:03:58.980 --> 00:04:04.307
especially when they're tailored to
your code base, that can be helpful.

66
00:04:06.609 --> 00:04:09.840
Use consistent accessibility
test rules and processes.

67
00:04:09.840 --> 00:04:12.475
So as accessibility matures on your teams,

68
00:04:12.475 --> 00:04:15.688
you wanna all be testing
against the same standards.

69
00:04:15.688 --> 00:04:20.698
So using the same axe versions,
using the same, whatever that rule set is,

70
00:04:20.698 --> 00:04:26.178
make sure your axe chrome extension is on
the same version as your automated stuff,

71
00:04:26.178 --> 00:04:29.962
cuz they improve rules and
sometimes they're changes.

72
00:04:29.962 --> 00:04:32.665
So yeah, we wanna be aiming for
consistency.

73
00:04:32.665 --> 00:04:37.537
And there are products at all of
the big accessibility vendors that

74
00:04:37.537 --> 00:04:40.147
are geared at banks and airlines and

75
00:04:40.147 --> 00:04:44.942
those bigger teams that are a bit
more mature for accessibility.

76
00:04:44.942 --> 00:04:48.551
And then kind of after you've
gathered doing the git blame,

77
00:04:48.551 --> 00:04:52.086
looking at the code base,
see if you can talk to some of those

78
00:04:52.086 --> 00:04:55.589
authors to understand what
constraints were they under.

79
00:04:55.589 --> 00:04:59.973
Cuz it could tip you off on some things
that might need to get handled for

80
00:04:59.973 --> 00:05:03.260
you to do things right, but
be diplomatic about it.

81
00:05:03.260 --> 00:05:05.597
We don't wanna be like, why'd you do that?

82
00:05:05.597 --> 00:05:09.951
[LAUGH] We wanna be like, hey, what,
talk to me about this component.

83
00:05:09.951 --> 00:05:12.699
Tell me about what it was
like working on that and

84
00:05:12.699 --> 00:05:14.977
what's our stance on accessibility?

85
00:05:14.977 --> 00:05:19.341
Do you know anything about how
we could make this better?

86
00:05:19.341 --> 00:05:23.265
The person that wrote it might not work
there anymore, that could be interesting,

87
00:05:23.265 --> 00:05:24.511
you could learn that too.

88
00:05:24.511 --> 00:05:28.376
So just kind of the code has
these layers of sediment and

89
00:05:28.376 --> 00:05:33.599
artifacts that can tell us some of
the story about how the code came about.

90
00:05:33.599 --> 00:05:35.590
That can be helpful to learn about.

