WEBVTT

1
00:00:00.102 --> 00:00:02.342
We're gonna talk about
buttons a whole lot more,

2
00:00:02.342 --> 00:00:04.911
way more than you probably
wanted to know about buttons.

3
00:00:04.911 --> 00:00:08.242
So buttons are for toggling things.

4
00:00:08.242 --> 00:00:12.925
Like you have a setting in your user
interface, you're gonna make a button.

5
00:00:12.925 --> 00:00:13.982
They're also for forms.

6
00:00:13.982 --> 00:00:18.283
They submit forms,
they might toggle other features in forms.

7
00:00:18.283 --> 00:00:23.440
You have button or button types submit.

8
00:00:23.440 --> 00:00:28.364
So they're meant for interacting with the
page, whereas links are for navigation.

9
00:00:28.364 --> 00:00:32.269
So we wanna use links with href
attributes for navigating.

10
00:00:32.269 --> 00:00:35.727
Sometimes, with JavaScript, everything's
a hammer, and it's really odd.

11
00:00:35.727 --> 00:00:38.715
You have a hammer, and
everything's a nail, and

12
00:00:38.715 --> 00:00:40.716
you can just bend it to your will.

13
00:00:40.716 --> 00:00:45.547
But for users, it can be confusing when
everything is a link or a button, and

14
00:00:45.547 --> 00:00:49.864
we're not really intentional with
the semantic purpose of those.

15
00:00:49.864 --> 00:00:52.349
So links navigate, buttons toggle things.

16
00:00:52.349 --> 00:00:57.506
Buttons are for interactive things,
which we have quite a few use cases for,

17
00:00:57.506 --> 00:01:01.647
and sometimes it can vary, like,
is your modal deep linked?

18
00:01:01.647 --> 00:01:03.153
If it's deep linked,

19
00:01:03.153 --> 00:01:07.923
then you're gonna need to launch it
with a link that has a href and a URL.

20
00:01:07.923 --> 00:01:13.178
But if it's just like a stateful change
that doesn't have a link attached to it,

21
00:01:13.178 --> 00:01:17.909
or an endpoint that the user can get to,
then a button's probably fine.

22
00:01:17.909 --> 00:01:22.529
Cuz you're gonna launch something, you
hit refresh, and it's not gonna persist.

23
00:01:22.529 --> 00:01:25.480
So sometimes it can depend on
what you're doing with it.

24
00:01:25.480 --> 00:01:28.375
Like, does it have a link or not?

25
00:01:28.375 --> 00:01:32.331
So yeah, that's kind of like setting
the scene for links versus buttons.

26
00:01:32.331 --> 00:01:37.197
But when there are buttons in the code
base, we want them to be real buttons,

27
00:01:37.197 --> 00:01:39.263
not that div with a click event.

28
00:01:39.263 --> 00:01:43.562
Cuz like man, nothing pains me more
than seeing that in codebases,

29
00:01:43.562 --> 00:01:46.954
especially when you can't
just rip it out immediately.

30
00:01:46.954 --> 00:01:49.859
I'm like, let me add it, let me rip
that div button out of there, but

31
00:01:49.859 --> 00:01:50.726
you can't always.

32
00:01:50.726 --> 00:01:56.663
So my goal in this is to help
you spot these before they ship.

33
00:01:56.663 --> 00:01:59.349
Don't let them ship, and
don't ship them yourselves.

34
00:01:59.349 --> 00:02:00.528
[LAUGH].

35
00:02:00.528 --> 00:02:05.035
So here's what it takes to make
a div into an accessible button.

36
00:02:05.035 --> 00:02:06.313
We've got the onClick.

37
00:02:06.313 --> 00:02:08.068
All right, we had that already.

38
00:02:08.068 --> 00:02:11.872
We have to edit onKeyDown or
onKeyUp with a key handler, and

39
00:02:11.872 --> 00:02:16.684
we're probably going to have to check
the event code off the event object.

40
00:02:16.684 --> 00:02:21.183
Check if it was the space or
the Enter key, then run our logic.

41
00:02:21.183 --> 00:02:25.573
That is where you can respond to different
keyboard events, like the arrow keys and

42
00:02:25.573 --> 00:02:26.082
things.

43
00:02:26.082 --> 00:02:30.143
We also, on our div button,
we have to add a role of button, and

44
00:02:30.143 --> 00:02:33.611
we have to add a tabIndex of
zero to make it focusable.

45
00:02:33.611 --> 00:02:36.769
And the text inside will give it a name or
a label.

46
00:02:36.769 --> 00:02:42.360
But if it was just a button,
we could skip so much of that.

47
00:02:42.360 --> 00:02:43.688
It would be so much simpler.

48
00:02:43.688 --> 00:02:45.269
We don't have to write that extra handler.

49
00:02:45.269 --> 00:02:46.220
We don't have to add a role.

50
00:02:46.220 --> 00:02:48.419
We don't have to add tabIndex.

51
00:02:48.419 --> 00:02:50.044
It's just easier.

52
00:02:50.044 --> 00:02:51.333
Now, why do people do this?

53
00:02:51.333 --> 00:02:53.638
I don't know.
Sometimes, it's the styling,

54
00:02:53.638 --> 00:02:57.656
not only the legacy styling that
you don't wanna risk changing.

55
00:02:57.656 --> 00:03:01.410
Sometimes, people are just kind of lazy,
[LAUGH] to be frank.

56
00:03:01.410 --> 00:03:05.404
Like, but I have to style it.

57
00:03:05.404 --> 00:03:08.029
It's like, well,
you're capable of so much.

58
00:03:08.029 --> 00:03:09.914
You can do that, I hope.

59
00:03:09.914 --> 00:03:14.816
I mean, maybe there's some other
constraints I don't know about,

60
00:03:14.816 --> 00:03:18.628
but get a good button reset so
that it's not an issue.

61
00:03:18.628 --> 00:03:20.833
Just make it easy to make button elements.

62
00:03:20.833 --> 00:03:24.493
To make some good defaults.

63
00:03:24.493 --> 00:03:29.784
So be on the lookout for those,
cuz they're some of the most pervasive,

64
00:03:29.784 --> 00:03:32.753
failures for keyboard accessibility.

65
00:03:32.753 --> 00:03:35.468
And we're gonna work on
one in our exercise,

66
00:03:35.468 --> 00:03:38.549
of one that's inspired
by a real-world example.

67
00:03:38.549 --> 00:03:41.316
And so, yeah, keep an eye out for that.

68
00:03:41.316 --> 00:03:45.835
And then, a note about AI here, because I
feel like a lot of the conversation lately

69
00:03:45.835 --> 00:03:47.849
has been around what can AI do for us?

70
00:03:47.849 --> 00:03:50.944
How can we get away with
fewer engineering resources?

71
00:03:50.944 --> 00:03:53.251
Resources or real people.

72
00:03:53.251 --> 00:04:00.353
But I think there's kind of this elephant
in the room that capitalistic folks,

73
00:04:00.353 --> 00:04:06.085
leadership trying to please stakeholders,
want to cut costs.

74
00:04:06.085 --> 00:04:10.478
And so, AI enters the conversation
of like, what can it do for us?

75
00:04:10.478 --> 00:04:14.319
Can we have the screen
readers just figure it out?

76
00:04:14.319 --> 00:04:16.611
So we don't have to change
our authoring process.

77
00:04:16.611 --> 00:04:18.153
We don't have to fix stuff.

78
00:04:18.153 --> 00:04:21.125
We'll just let the screen
reader figure it out.

79
00:04:21.125 --> 00:04:23.020
We can't rely on that.

80
00:04:23.020 --> 00:04:25.314
I mean, first of all,
we can do better than that.

81
00:04:25.314 --> 00:04:28.224
I don't think we wanna give up.

82
00:04:28.224 --> 00:04:33.836
We aren't free from the requirement of
actually making something accessible.

83
00:04:33.836 --> 00:04:39.357
But we also can't expect assistive
technology or AI to solve it for us.

84
00:04:39.357 --> 00:04:42.071
With assistive technology in particular,

85
00:04:42.071 --> 00:04:46.629
that's a very fancy piece of software
that a lot of people can't afford.

86
00:04:46.629 --> 00:04:50.541
Or they're on a really old version,
they might need a grant, or

87
00:04:50.541 --> 00:04:54.247
some sort of government assistance
to get that technology.

88
00:04:54.247 --> 00:04:57.972
So it's like a pretty privileged
point of view to think that AI and

89
00:04:57.972 --> 00:05:00.288
assistive tech can just solve it for us.

90
00:05:00.288 --> 00:05:05.313
I think, instead, it's good to cover
these basics and feel some sense

91
00:05:05.313 --> 00:05:10.787
of pride in the fact that we can make
stuff that's way more robust at its core.

92
00:05:10.787 --> 00:05:15.435
&gt;&gt; So basically, button and
anchor tags are equivalent to buttons.

93
00:05:15.435 --> 00:05:18.920
Can you clarify what you
mean by buttons in quotes?

94
00:05:18.920 --> 00:05:24.565
Do you mean in terms of how someone with
assistive technologies perceive them,

95
00:05:24.565 --> 00:05:26.765
or do you mean by how they look?

96
00:05:26.765 --> 00:05:27.430
&gt;&gt; Both.

97
00:05:27.430 --> 00:05:29.538
So there's kind of an overlap here.

98
00:05:29.538 --> 00:05:30.269
Great question.

99
00:05:30.269 --> 00:05:32.674
So we wanna make links look like links and

100
00:05:32.674 --> 00:05:35.521
buttons look like buttons
as much as possible.

101
00:05:35.521 --> 00:05:41.351
When sometimes, our CTAs, I have worked
with some that if you pass this button,

102
00:05:41.351 --> 00:05:44.034
an href, it'll turn it into a link.

103
00:05:44.034 --> 00:05:46.128
But it's a button component.

104
00:05:46.128 --> 00:05:50.883
And I think where it gets confusing for
users is if you can see the screen, but

105
00:05:50.883 --> 00:05:53.347
you're using assistive technology.

106
00:05:53.347 --> 00:05:55.606
Say, you call into customer support, and

107
00:05:55.606 --> 00:05:58.762
they're helping to navigate
you through an application.

108
00:05:58.762 --> 00:06:02.312
There can be some confusion there
about what is this element?

109
00:06:02.312 --> 00:06:07.264
And similarly, for voice navigation,
kinda like what you see on the screen is

110
00:06:07.264 --> 00:06:12.305
how you're gonna know what to tell your
voice assistant what to interact with.

111
00:06:12.305 --> 00:06:15.628
So sometimes,
that gap in how something's marked

112
00:06:15.628 --> 00:06:20.583
up versus how it looks can have an impact
on how people can navigate the site.

113
00:06:20.583 --> 00:06:25.308
So it is partly the semantic meaning
of the button in the link, but then,

114
00:06:25.308 --> 00:06:27.176
also, user expectations.

115
00:06:27.176 --> 00:06:29.461
And that can get tricky.

116
00:06:29.461 --> 00:06:32.863
Sometimes, this is a battle
that I do not win.

117
00:06:32.863 --> 00:06:34.453
I pick my battles.

118
00:06:34.453 --> 00:06:37.636
And sometimes,
links are gonna look like buttons.

119
00:06:37.636 --> 00:06:43.204
It's not ideal, but I mean, talk about
design decisions and user impact.

120
00:06:43.204 --> 00:06:47.959
Sometimes we have to weigh
the cost of what it takes to

121
00:06:47.959 --> 00:06:52.294
totally redesign our CTAs for
the user impact.

122
00:06:52.294 --> 00:06:53.609
I don't know, it's kind of squishy.

123
00:06:53.609 --> 00:06:55.612
It's not super clearly defined, and

124
00:06:55.612 --> 00:06:59.125
it might not be the highest impact
thing that you have to deal with.

125
00:06:59.125 --> 00:07:03.248
So I'm putting it out there so
that you know to look out for it.

126
00:07:03.248 --> 00:07:06.823
But I wouldn't say it's
the biggest blocker in the world.

127
00:07:06.823 --> 00:07:11.489
Having things like div buttons and
links that aren't reachable or operable,

128
00:07:11.489 --> 00:07:14.044
I think that would be
a way bigger blocker.

129
00:07:14.044 --> 00:07:18.616
&gt;&gt; I guess a common pattern that I've seen
is links that are just like a slightly

130
00:07:18.616 --> 00:07:22.045
more elevated buttons,
where it changes the route, but

131
00:07:22.045 --> 00:07:24.698
also does like a snippet
of business logic.

132
00:07:24.698 --> 00:07:28.851
Maybe pinging the database, analytics,
tracking, updating the state.

133
00:07:28.851 --> 00:07:33.682
Is there a good pattern for that where
you still wanna have an hrefs, but

134
00:07:33.682 --> 00:07:37.156
just a little bit more like
having a function call?

135
00:07:37.156 --> 00:07:41.668
&gt;&gt; Yeah, I mean, I think if it's
a client-rendered application,

136
00:07:41.668 --> 00:07:47.324
we'll talk about a little bit later, you
should be able to route it and call logic.

137
00:07:47.324 --> 00:07:49.200
Yeah, I'd have to test it directly.

138
00:07:49.200 --> 00:07:53.953
But I think if you're not losing stuff
to a page refresh, you have some

139
00:07:53.953 --> 00:07:58.869
potential of being able to fire click
event that calls out to analytics,

140
00:07:58.869 --> 00:08:01.865
or fetches something, and using routing.

141
00:08:01.865 --> 00:08:06.543
I mean, you can use ARIA to change
the semantics of something.

142
00:08:06.543 --> 00:08:09.355
But, as we'll learn
with the rules of ARIA,

143
00:08:09.355 --> 00:08:12.686
we wanna try and
avoid changing rules after the fact.

144
00:08:12.686 --> 00:08:17.405
We wanna use the default semantic
thing first, if at all possible.

145
00:08:17.405 --> 00:08:21.477
&gt;&gt; So I had a question about, I guess,
when you're trying to get a little bit

146
00:08:21.477 --> 00:08:26.077
fancier, and you're trying to sort of
balance accessibility concerns against,

147
00:08:26.077 --> 00:08:27.611
I guess, event bubbling.

148
00:08:27.611 --> 00:08:32.251
So, I've had some examples in a code
base where there's this div and

149
00:08:32.251 --> 00:08:34.732
it's got some click handlers on it.

150
00:08:34.732 --> 00:08:37.732
It's responding to clicks and
keyboards, but

151
00:08:37.732 --> 00:08:40.659
it's not supposed to
be interactive itself.

152
00:08:40.659 --> 00:08:45.050
It's trusting that there's a button
downstream that kicks off an event and

153
00:08:45.050 --> 00:08:46.217
bubbles up the div,

154
00:08:46.217 --> 00:08:50.971
kinda catches it, does some extra stuff,
and then just lets it go through again.

155
00:08:50.971 --> 00:08:53.638
Is that something we should
generally try to avoid?

156
00:08:53.638 --> 00:08:56.917
Or is that something we're just, I guess,

157
00:08:56.917 --> 00:09:01.361
user beware when you're trying
to do something like that?

158
00:09:01.361 --> 00:09:05.719
It's like ARIA where you can very easily
mess things up, and you just have to be

159
00:09:05.719 --> 00:09:09.768
very careful with how you're setting
things up and getting them wired.

160
00:09:09.768 --> 00:09:10.729
&gt;&gt; Great question.

161
00:09:10.729 --> 00:09:14.626
So there are legitimate uses
of click events on divs.

162
00:09:14.626 --> 00:09:16.083
So I'm glad you brought it up,

163
00:09:16.083 --> 00:09:18.844
because not everything needs
to be wrapped with a button.

164
00:09:18.844 --> 00:09:23.726
So I guess that's a potential gotcha
that I'm just so glad that you asked

165
00:09:23.726 --> 00:09:28.704
this question because we don't need
to wrap a button around everything.

166
00:09:28.704 --> 00:09:31.730
Only interactive things.

167
00:09:31.730 --> 00:09:37.667
So say you've got a card component that
the whole thing needs to be clickable, but

168
00:09:37.667 --> 00:09:42.844
you can call that same function off of
a button on the card or from a link.

169
00:09:42.844 --> 00:09:47.002
You can do the same thing on
an interactive element within the card.

170
00:09:47.002 --> 00:09:50.346
It is perfectly fine to put
a JavaScript mouse event so

171
00:09:50.346 --> 00:09:54.656
that you can click the card, but
then, there's still a reachable,

172
00:09:54.656 --> 00:09:58.697
operable target within it that
you can get to from the keyboard.

173
00:09:58.697 --> 00:10:00.849
That is why it's a little bit hard for

174
00:10:00.849 --> 00:10:03.634
automated tooling to
catch this type of issue.

175
00:10:03.634 --> 00:10:05.991
So we're gonna talk about that later too.

176
00:10:05.991 --> 00:10:10.995
Because it's fine to put a click event
on something that's not reachable,

177
00:10:10.995 --> 00:10:14.371
as long as you can do the same
function another way.

178
00:10:14.371 --> 00:10:18.564
So yeah, it can be done, and
it's why Axe doesn't flag stuff like that.

179
00:10:18.564 --> 00:10:21.575
Cuz the computer can't always
tell whether it's legit or not.

180
00:10:21.575 --> 00:10:24.389
[LAUGH] It's kind of subjective,
it can be hard to tell.

181
00:10:24.389 --> 00:10:29.426
But you will know, and you can write some
feature tests around that stuff that bake

182
00:10:29.426 --> 00:10:34.471
in a contract of like, this should be
clickable, this part should be focusable.

183
00:10:34.471 --> 00:10:37.954
And I can write tests that
assert all those things.

184
00:10:37.954 --> 00:10:41.176
And then that can help with
clarifying how it should work.

185
00:10:41.176 --> 00:10:44.723
It'd be like, no, no,
this click event is okay.

186
00:10:44.723 --> 00:10:45.593
These want like,

187
00:10:45.593 --> 00:10:49.436
that's because there's this other thing
that does the same functionality.

