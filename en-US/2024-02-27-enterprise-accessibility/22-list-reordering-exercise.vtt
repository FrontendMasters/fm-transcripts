WEBVTT

1
00:00:00.000 --> 00:00:07.212
All right, so we have an exercise,
a list reordering exercise.

2
00:00:07.212 --> 00:00:10.447
We have a drag and drop widget,
speaking of dragging.

3
00:00:10.447 --> 00:00:16.301
So I can reorder these little items, But

4
00:00:16.301 --> 00:00:18.592
how the heck am I gonna
use a keyboard to do that?

5
00:00:18.592 --> 00:00:21.528
[LAUGH] That's what we're gonna do,

6
00:00:21.528 --> 00:00:27.410
we're gonna make it work with the keyboard
and the screen reader better.

7
00:00:27.410 --> 00:00:29.606
So it's so fun to drag these,
like very satisfying.

8
00:00:29.606 --> 00:00:32.689
[LAUGH] Pretty easy to do these days.

9
00:00:32.689 --> 00:00:38.159
So as before, we have an example
here in our exercise page and

10
00:00:38.159 --> 00:00:40.966
we have a StackBlitz version.

11
00:00:40.966 --> 00:00:43.607
Pick your poison here.

12
00:00:43.607 --> 00:00:47.860
&gt;&gt; What do I need to look for
on A11Y on mobile?

13
00:00:47.860 --> 00:00:53.743
There's no mouse, there's no keyboard,
so how important is A11Y on mobile?

14
00:00:53.743 --> 00:00:54.484
&gt;&gt; It is important.

15
00:00:54.484 --> 00:00:58.706
So people use third-party like Bluetooth,
keyboards.

16
00:00:58.706 --> 00:01:00.638
That is definitely a thing.

17
00:01:00.638 --> 00:01:05.166
And especially if you don't have
the dexterity to touch the screen,

18
00:01:05.166 --> 00:01:09.849
I mean, for some people, their phone
is mounted on their wheelchair,

19
00:01:09.849 --> 00:01:12.442
like they physically can't touch it.

20
00:01:12.442 --> 00:01:16.148
So think about that use case.

21
00:01:16.148 --> 00:01:19.654
You can navigate using
Bluetooth keyboards.

22
00:01:19.654 --> 00:01:21.645
So it is pretty important.

23
00:01:21.645 --> 00:01:24.830
But there's some kinda
mobile best practices,

24
00:01:24.830 --> 00:01:30.277
like making your touch targets bigger so
that you can reach them with your fingers.

25
00:01:30.277 --> 00:01:33.059
And that's part of WCAG.

26
00:01:33.059 --> 00:01:35.812
So yeah, I think a lot of
those basics do apply, and

27
00:01:35.812 --> 00:01:38.193
that's why WCAG applies to native mobile.

28
00:01:38.193 --> 00:01:43.975
So in the Slides, there is
an article in here from DQ on what

29
00:01:43.975 --> 00:01:49.295
WCAG 2.2 means for
native mobile accessibility.

30
00:01:49.295 --> 00:01:55.743
So if you wanna learn more about what
you're on the hook to do, check that out.

31
00:01:55.743 --> 00:01:57.556
List reordering.

32
00:01:57.556 --> 00:02:01.631
And this is one that I've had to
work on a similar pattern, and so

33
00:02:01.631 --> 00:02:05.796
we're actually going to do a little
bit of work with MVDA as well.

34
00:02:05.796 --> 00:02:09.735
Hopefully we can actually see
this one not work this time.

35
00:02:09.735 --> 00:02:14.138
So we'll do this incrementally.

36
00:02:16.018 --> 00:02:19.623
So I'm gonna hop over to VS Code.

37
00:02:19.623 --> 00:02:22.584
I am going to open up our,

38
00:02:22.584 --> 00:02:28.514
this is our ReorderableList
component in React.

39
00:02:28.514 --> 00:02:32.606
So it has a ReorderableList,
and then within that,

40
00:02:32.606 --> 00:02:37.536
there is a ReorderableListItem
component that is repeated for

41
00:02:37.536 --> 00:02:40.146
each one of those dynamic items.

42
00:02:40.146 --> 00:02:44.851
So this has the mouse dragging, it does
not have anything for the keyboard yet.

43
00:02:46.041 --> 00:02:49.375
So if we scroll down to
our kind of output here,

44
00:02:49.375 --> 00:02:52.630
we've got a div with
an unordered list in it.

45
00:02:52.630 --> 00:02:56.584
Just special,
it doesn't have anything unique about it.

46
00:02:56.584 --> 00:03:01.712
And then this ReorderableListItem
is creating LI elements,

47
00:03:01.712 --> 00:03:04.677
and it's passing a bunch of props.

48
00:03:04.677 --> 00:03:05.774
That's about it.

49
00:03:05.774 --> 00:03:09.337
There's no hooks on here for
keyboard users.

50
00:03:09.337 --> 00:03:14.732
An LI is not reachable, it's not operable.

51
00:03:14.732 --> 00:03:17.828
Sure, I could drag it with the mouse,
I could drag all day, but

52
00:03:17.828 --> 00:03:20.292
I'm never gonna be able to
use a keyboard with it.

53
00:03:20.292 --> 00:03:22.100
It has some CSS.

54
00:03:22.100 --> 00:03:26.174
Like the little icon that
you see in the drop zone,

55
00:03:26.174 --> 00:03:30.154
that's all done with CSS,
which is really fun.

56
00:03:30.154 --> 00:03:34.638
Like the sort button, that's a little
SVG background image, just so

57
00:03:34.638 --> 00:03:39.355
that you know that's where some of
this functionality is coming from..

58
00:03:39.355 --> 00:03:43.928
And we already have the styles in here for
the fixed version of it.

59
00:03:43.928 --> 00:03:46.624
But let's go in here and
make some changes.

60
00:03:46.624 --> 00:03:52.020
I also included already the React ARIA
live announcer component.

61
00:03:52.020 --> 00:03:54.217
So let's see how far we get.

62
00:03:54.217 --> 00:03:57.145
[LAUGH] We might just need to look at
the finished version to get that far for

63
00:03:57.145 --> 00:03:57.817
time purposes.

64
00:03:57.817 --> 00:04:03.700
But we can announce these changes,
xo that when you move the list,

65
00:04:03.700 --> 00:04:08.219
we can actually send custom
announcements to say,

66
00:04:08.219 --> 00:04:12.967
we've reordered item 1,
it's now in position 2.

67
00:04:12.967 --> 00:04:17.106
So you can have awareness of, whoa,
I'm moving this with the keyboard.

68
00:04:17.106 --> 00:04:20.926
And I'm gonna move it and
I know where it moved to.

69
00:04:20.926 --> 00:04:24.211
And actually,
the component that I originally worked on,

70
00:04:24.211 --> 00:04:26.914
that this was inspired by,
was a whiskey shelf.

71
00:04:26.914 --> 00:04:29.428
It was a site, drink distiller.

72
00:04:29.428 --> 00:04:32.917
You could buy whiskey online,
it was amazing.

73
00:04:32.917 --> 00:04:35.943
And you had your top shelf of
all your favorite whiskeys and

74
00:04:35.943 --> 00:04:37.250
you could reorder them.

75
00:04:37.250 --> 00:04:40.933
So that was the real feature
that I was like, wait a minute,

76
00:04:40.933 --> 00:04:43.376
we need to make this [LAUGH] accessible.

77
00:04:43.376 --> 00:04:47.801
And you could order whiskey with
voiceover, it was pretty awesome.

78
00:04:47.801 --> 00:04:56.272
So for this, I'm just gonna look
ahead at what I wrote on here.

79
00:04:56.272 --> 00:04:59.173
I'm on the wrong exercise.

80
00:04:59.173 --> 00:05:02.136
Go reordering.

81
00:05:04.070 --> 00:05:08.820
Okay, so let's start with,
we need something to focus on.

82
00:05:08.820 --> 00:05:12.743
So within our list items,
let's go to reference the display.

83
00:05:12.743 --> 00:05:17.178
So we have this little icon here, but it's
just a background image on the list item.

84
00:05:17.178 --> 00:05:20.465
So why don't we make that into a button?

85
00:05:20.465 --> 00:05:23.732
And because I know that this
is gonna be troubling, but

86
00:05:23.732 --> 00:05:27.921
it's gonna be hard to make this work
in NVDA for that same browse mode,

87
00:05:27.921 --> 00:05:30.565
focus mode thing we learned about earlier.

88
00:05:30.565 --> 00:05:34.915
I'm gonna put the dragging,
editing behind in edit mode so

89
00:05:34.915 --> 00:05:37.438
that we actually go Enter to edit.

90
00:05:37.438 --> 00:05:42.365
And I think that's pretty common
in a lot of user interfaces,

91
00:05:42.365 --> 00:05:45.509
is you hit Edit, it allows you to drag.

92
00:05:45.509 --> 00:05:50.723
I know from experience, it will be easier
to make it accessible if you do that,

93
00:05:50.723 --> 00:05:54.359
cuz you can potentially use
application mode safely.

94
00:05:54.359 --> 00:05:56.393
We'll see if we need it.

95
00:05:56.393 --> 00:05:58.343
So let's go put that button in here.

96
00:05:58.343 --> 00:06:02.496
So within the list item,
I'm gonna put a button.

97
00:06:02.496 --> 00:06:05.125
I'm actually gonna put
the name text outside of it,

98
00:06:05.125 --> 00:06:06.995
so it's just the icon in the button.

99
00:06:12.279 --> 00:06:14.975
So on this button element,

100
00:06:14.975 --> 00:06:20.962
we are going to add an aria-label,
cuz it is an icon button.

101
00:06:20.962 --> 00:06:26.978
I'm gonna say, in a template literal, I'll
say Reorder, and I'm gonna put the name.

102
00:06:26.978 --> 00:06:33.011
So I'm,
Grabbing the name dynamically as we're

103
00:06:33.011 --> 00:06:38.905
iterating through these list of items, so
I can say Reorder ${name} from position.

104
00:06:38.905 --> 00:06:40.273
And what index was it?

105
00:06:42.367 --> 00:06:47.636
And I'm gonna reorder from
position ${index + 1}.

106
00:06:47.636 --> 00:06:50.387
So I think index is 0 based.

107
00:06:50.387 --> 00:06:54.175
And I'm just making it into
a more user-friendly string so

108
00:06:54.175 --> 00:06:56.687
that it's starting from position 0.

109
00:06:56.687 --> 00:06:59.616
It's just like, that's too geeky for
the general public.

110
00:06:59.616 --> 00:07:03.117
So I added 1, but
that's where we're starting.

111
00:07:03.117 --> 00:07:07.301
We've got, let's see, what else?

112
00:07:07.301 --> 00:07:13.298
I'm gonna say onKeyDown,
add a KeyDown here, and say handleKeyDown.

113
00:07:13.298 --> 00:07:18.860
onKeyUp, And I'll say (event).

114
00:07:21.119 --> 00:07:26.310
And this callback function, I'm passing
things through as a prop from the parent.

115
00:07:26.310 --> 00:07:30.197
And that's just so that I could have
this be its own chunk of code, but

116
00:07:30.197 --> 00:07:33.097
then the parent's gonna
direct what it's doing.

117
00:07:33.097 --> 00:07:36.919
So I'll call a callback
function up on the parent, and

118
00:07:36.919 --> 00:07:42.336
I'll pass in the event object and
what index was the element, what was this?

119
00:07:42.336 --> 00:07:48.948
One more thing, I'm gonna add a ref to
this, and just that was using forward ref.

120
00:07:48.948 --> 00:07:52.978
That was a way to have the parent
know about these elements, but

121
00:07:52.978 --> 00:07:57.619
they're dynamically created, so
I use the React forward ref API to pass

122
00:07:57.619 --> 00:08:01.442
that through to a child element,
could be pretty helpful.

123
00:08:03.840 --> 00:08:07.330
Just to make sure I got it all,
I'm also gonna add a className.

124
00:08:07.330 --> 00:08:11.958
So className outputs as class
in the rendered output.

125
00:08:11.958 --> 00:08:13.433
If you work with React,
you probably know that.

126
00:08:13.433 --> 00:08:16.430
But okay, so we've got this part.

127
00:08:16.430 --> 00:08:20.683
There are no, wait,
we have a handleKeyDown.

128
00:08:20.683 --> 00:08:23.706
We needed to find that cuz
we have it referenced here.

129
00:08:23.706 --> 00:08:28.555
So I'm gonna say const handleKeyDown.

130
00:08:28.555 --> 00:08:31.234
I'm gonna pass the event object.

131
00:08:31.234 --> 00:08:36.675
And I'll say if (event.code===),
you could do event.key or

132
00:08:36.675 --> 00:08:43.074
event.code I'll say arrowUp cuz I'm going
up or down to get through this list.

133
00:08:43.074 --> 00:08:46.841
Or if event.code is ArrowDown,

134
00:08:46.841 --> 00:08:52.902
I am going to keep the browser
window from scrolling.

135
00:08:54.172 --> 00:08:55.632
That's what this code is doing.

136
00:08:55.632 --> 00:08:57.739
So without it,
it was gonna move the list, but

137
00:08:57.739 --> 00:09:01.696
it's also gonna scroll the page cuz that's
what the ArrowUp, ArrowDown buttons do.

138
00:09:01.696 --> 00:09:05.844
So sometimes you have to write an extra
handler just to prevent that, cuz

139
00:09:05.844 --> 00:09:11.683
you're in the right space to do that, and
it's only under these certain conditions.

140
00:09:11.683 --> 00:09:14.647
So I think to speed this along,

141
00:09:14.647 --> 00:09:19.333
let's actually go and
look at the full version.

142
00:09:20.743 --> 00:09:22.669
So we have our ReorderableListItem.

143
00:09:22.669 --> 00:09:25.187
This is what we just typed.

144
00:09:25.187 --> 00:09:29.678
Let's go look at the rest of the list.

145
00:09:29.678 --> 00:09:36.378
So the edit mode,
I think we had the isReordering already.

146
00:09:36.378 --> 00:09:37.963
That's what the drag and

147
00:09:37.963 --> 00:09:43.034
drop was using to determine whether it
needed that drop zone and all that stuff.

148
00:09:43.034 --> 00:09:48.783
I added another state variable so that
the edit mode button that we're gonna add,

149
00:09:48.783 --> 00:09:52.382
it has its own state that
it's flipping on and off.

150
00:09:52.382 --> 00:09:58.697
So this toggle edit mode, set is editing,
that'll flip that React state variable.

151
00:09:58.697 --> 00:10:03.373
And we are gonna do the bonus round of
announcing this in a screen reader.

152
00:10:03.373 --> 00:10:09.818
So I have an announce function here that
calls the React ARIA live announcer.

153
00:10:09.818 --> 00:10:14.052
And live regions are a way to
pipe messages to a screen reader.

154
00:10:14.052 --> 00:10:15.559
I love this React ARIA 1,

155
00:10:15.559 --> 00:10:19.204
because it will just handle
injecting the live region for you.

156
00:10:19.204 --> 00:10:20.322
You don't even have to do anything.

157
00:10:20.322 --> 00:10:24.485
You just call this function,
it will pipe those messages for you.

158
00:10:24.485 --> 00:10:25.316
There are two levels.

159
00:10:25.316 --> 00:10:27.851
There's assertive and polite.

160
00:10:27.851 --> 00:10:31.423
We'll do assertive to
interrupt any other messages.

161
00:10:31.423 --> 00:10:32.637
Are you gonna say something?

162
00:10:32.637 --> 00:10:36.674
&gt;&gt; No, I wasn't aware and
that's a good way of putting it.

163
00:10:36.674 --> 00:10:37.765
It's cool.

164
00:10:37.765 --> 00:10:39.768
&gt;&gt; Yeah, they called it rude at one point.

165
00:10:39.768 --> 00:10:42.362
It's kind of funny cuz it
really does interrupt.

166
00:10:42.362 --> 00:10:43.657
Sometimes that's what you need.

167
00:10:44.946 --> 00:10:48.986
Okay, so we've got our dragging,
that's all the same,

168
00:10:48.986 --> 00:10:51.716
all of our dragging in here on drop.

169
00:10:51.716 --> 00:10:55.336
Here's our item callback function for
the arrow key handling.

170
00:10:55.336 --> 00:11:01.967
So we've got our event.key,
could be event.code, either one.

171
00:11:01.967 --> 00:11:03.475
We're iterating through the items.

172
00:11:03.475 --> 00:11:04.585
Which one are we on?

173
00:11:04.585 --> 00:11:05.528
Where am I in the list?

174
00:11:05.528 --> 00:11:08.448
So if I delete one,
what should come before it?

175
00:11:08.448 --> 00:11:09.940
So this is the logic to do that.

176
00:11:09.940 --> 00:11:13.508
And of course, there's more than one way
to do it, but that's how I wrote it.

177
00:11:13.508 --> 00:11:17.006
So then if the arrow key is
going the other direction,

178
00:11:17.006 --> 00:11:22.313
I guess that was ArrowDown, ArrowUp looks
at, where are we in the list of items?

179
00:11:22.313 --> 00:11:22.977
Are we at the end?

180
00:11:22.977 --> 00:11:24.544
Are we in the middle.

181
00:11:24.544 --> 00:11:26.564
Do I need to loop around
again in the beginning,

182
00:11:26.564 --> 00:11:29.194
depending on where I am
in the list of the array?

183
00:11:29.194 --> 00:11:34.064
So it'll go and create a new section and
move us to the right place, setItems.

184
00:11:34.064 --> 00:11:36.489
So it basically reorders the array and

185
00:11:36.489 --> 00:11:39.307
then replaces that as
the state of the list.

186
00:11:39.307 --> 00:11:42.059
That's how the drag and drop works, too.

187
00:11:42.059 --> 00:11:47.830
But we can do that, and that's why I
love React, it will just re-render.

188
00:11:47.830 --> 00:11:50.262
I didn't have to go on a pen nodes and

189
00:11:50.262 --> 00:11:55.467
do all of the vanilla JavaScript stuff
that is how this works under the hood.

190
00:11:55.467 --> 00:12:01.145
I love React for accessibility stuff
because I can just re-render something

191
00:12:01.145 --> 00:12:06.134
at the right time and then use state and
ARIA attributes and things.

192
00:12:06.134 --> 00:12:10.722
So you just change the state on and
off and it's amazing.

193
00:12:10.722 --> 00:12:12.880
Super modern tools for accessibility.

194
00:12:12.880 --> 00:12:15.964
So here's where we're announcing
also when these announce.

195
00:12:15.964 --> 00:12:19.769
So this item moved from position 0 or

196
00:12:19.769 --> 00:12:24.201
position 1 to position 2 or position 3.

197
00:12:26.122 --> 00:12:27.372
So let's look at the markup.

198
00:12:28.492 --> 00:12:31.442
We've got this edit mode, this button.

199
00:12:31.442 --> 00:12:34.194
You haven't actually seen it yet,
but now we're gonna add a button.

200
00:12:34.194 --> 00:12:37.952
And when it's in edit mode,
it'll say Edit gear list.

201
00:12:37.952 --> 00:12:42.207
When it is editing,
it'll say Exit edit mode.

202
00:12:42.207 --> 00:12:48.744
So it changes the label text or the button
text, depending on what mode you're in.

203
00:12:48.744 --> 00:12:53.112
We can also use the state variables to
change the way the list looks slightly.

204
00:12:53.112 --> 00:12:57.217
You could make it look like it's editing,
or you could change button, icons.

205
00:12:58.217 --> 00:13:02.530
We are using the role of application here,
so we'll fire this up in NVDA and

206
00:13:02.530 --> 00:13:03.560
compare the two.

207
00:13:05.281 --> 00:13:08.124
But that's about it for this list.

208
00:13:08.124 --> 00:13:09.644
So let's go do that.

209
00:13:09.644 --> 00:13:14.030
Let's try out this reordering
exercise over on Windows, so

210
00:13:14.030 --> 00:13:19.111
we can see what the effects are,
especially of the application mode.

211
00:13:19.111 --> 00:13:21.080
But yeah, let's look at this.

212
00:13:21.080 --> 00:13:22.505
&gt;&gt; Ctrl+R.

213
00:13:22.505 --> 00:13:23.962
&gt;&gt; So I'm gonna refresh this.

214
00:13:23.962 --> 00:13:24.747
&gt;&gt; Loading page.

215
00:13:24.747 --> 00:13:26.427
List reordering.

216
00:13:26.427 --> 00:13:27.749
Accessible you is.

217
00:13:27.749 --> 00:13:29.616
/completed-components.

218
00:13:29.616 --> 00:13:30.941
&gt;&gt; Accessible you is.

219
00:13:30.941 --> 00:13:33.184
&gt;&gt; /exercise-4-reordering/.

220
00:13:33.184 --> 00:13:35.085
&gt;&gt; [LAUGH] Okay, so
we have this dragable version.

221
00:13:35.085 --> 00:13:37.510
&gt;&gt; List reordering exercise.

222
00:13:37.510 --> 00:13:40.043
&gt;&gt; I mean,
we're not gonna do anything with that.

223
00:13:40.043 --> 00:13:45.383
So for this version-
&gt;&gt; Edit gear list.

224
00:13:45.383 --> 00:13:47.036
&gt;&gt; We can go into this edit mode.

225
00:13:49.107 --> 00:13:51.426
&gt;&gt; [SOUND] Edit gear list button.

226
00:13:51.426 --> 00:13:53.467
&gt;&gt; Do you hear the little boop,
that noise?

227
00:13:53.467 --> 00:13:57.704
So, yeah, it's changing modes there, so.

228
00:13:57.704 --> 00:13:59.054
&gt;&gt; Stopped editing.

229
00:13:59.054 --> 00:14:00.111
&gt;&gt; Stopped editing.

230
00:14:00.111 --> 00:14:01.405
&gt;&gt; Edit mode activated.

231
00:14:01.405 --> 00:14:02.715
&gt;&gt; Edit mode activated.

232
00:14:02.715 --> 00:14:03.589
So that's that.

233
00:14:03.589 --> 00:14:07.789
&gt;&gt; React ARIA live announcer, we can
announce a message of when we go in and

234
00:14:07.789 --> 00:14:08.633
out of a mode.

235
00:14:08.633 --> 00:14:10.521
So that's kind of nice.

236
00:14:10.521 --> 00:14:15.038
I didn't have to put that on the button
and hope that it would announce somehow.

237
00:14:15.038 --> 00:14:19.458
I could actually programmatically say,
hey, announce this for me.

238
00:14:19.458 --> 00:14:21.573
So then I can go into the list.

239
00:14:21.573 --> 00:14:25.802
&gt;&gt; Sortable list, reorder paddle
boards from position 1 button.

240
00:14:25.802 --> 00:14:27.902
&gt;&gt; So that's sortable list.

241
00:14:27.902 --> 00:14:31.618
I think that's an ARIA role description.

242
00:14:31.618 --> 00:14:36.086
If I recall,
that's how that's made possible.

243
00:14:36.086 --> 00:14:39.696
But from here, I'm gonna hit the up and
down arrow keys.

244
00:14:39.696 --> 00:14:41.946
&gt;&gt; Paddle boards move to position 2.

245
00:14:41.946 --> 00:14:44.988
Reorder paddle boards
from position 2 button.

246
00:14:44.988 --> 00:14:50.348
&gt;&gt; So sometimes, it's a bit verbose,
I can't exactly control what it says.

247
00:14:50.348 --> 00:14:53.915
So it's announcing the thing that I
told it to, the announcement, and

248
00:14:53.915 --> 00:14:56.018
it's saying what's on the button.

249
00:14:56.018 --> 00:15:00.055
Cuz I actually moved, the focus is moving,
so you reorder it, and

250
00:15:00.055 --> 00:15:02.231
then you tell the focus where to go.

251
00:15:02.231 --> 00:15:04.639
Cuz otherwise, it's like, where was it?

252
00:15:04.639 --> 00:15:06.852
It was in the previous position before, so

253
00:15:06.852 --> 00:15:09.752
I have to move focus on to
the button in the new position.

254
00:15:09.752 --> 00:15:11.973
&gt;&gt; Paddle boards move to position 3.

255
00:15:11.973 --> 00:15:15.283
Reorder paddle boards
from position 3 button.

256
00:15:15.283 --> 00:15:19.213
&gt;&gt; And so without that application mode-
&gt;&gt; Paddle boards move to position 2.

257
00:15:19.213 --> 00:15:23.514
It won't move them cuz
we'll be in the wrong mode.

258
00:15:23.514 --> 00:15:25.479
And so that's what that does.

259
00:15:25.479 --> 00:15:29.309
And so in this edit mode,
we can be, just like the slideshow,

260
00:15:29.309 --> 00:15:32.192
a bit more prescriptive
about how that works.

261
00:15:32.192 --> 00:15:35.974
And when you have the insert
key on your keyboard,

262
00:15:35.974 --> 00:15:39.228
you can get in and
out of the mode manually.

263
00:15:39.228 --> 00:15:45.020
And users, I think, if I were doing that
myself, I would definitely be, you listen

264
00:15:45.020 --> 00:15:50.666
for those sounds and know what mode you're
in, you get used to that after a while.

265
00:15:50.666 --> 00:15:53.978
But if I hit Escape,
I haven't wired that up.

266
00:15:53.978 --> 00:15:57.208
So to get out of this mode right now,

267
00:15:57.208 --> 00:16:01.209
I have to go back to the button and
toggle it.

268
00:16:01.209 --> 00:16:03.734
But that's how I'm allowing this drag and
drop.

269
00:16:03.734 --> 00:16:07.341
So I made a pretty big ugly
button that says Edit gear list.

270
00:16:07.341 --> 00:16:11.876
I think what I see more often on
actual user interfaces is it will be

271
00:16:11.876 --> 00:16:13.780
a little edit button icon.

272
00:16:13.780 --> 00:16:17.746
I feel like I had to edit something
recently that used that pattern.

273
00:16:17.746 --> 00:16:22.023
And so now if you see these
little edit modes to reorder and

274
00:16:22.023 --> 00:16:24.083
things, now you know why.

275
00:16:24.083 --> 00:16:25.410
It can be very useful.

276
00:16:25.410 --> 00:16:29.586
Cuz otherwise I think what happens is
you try to do the drag and drop and

277
00:16:29.586 --> 00:16:34.338
make the reordering work, you're real
tempted to add application mode to get

278
00:16:34.338 --> 00:16:36.354
it to work seamlessly like that.

279
00:16:36.354 --> 00:16:40.512
Cuz I didn't have to do any key commands,
I could hit the up arrow keys, and

280
00:16:40.512 --> 00:16:41.881
it just worked.

281
00:16:41.881 --> 00:16:43.820
But that's because it
has application mode.

282
00:16:43.820 --> 00:16:48.414
So it's passing that arrow key event
directly through the browser instead of

283
00:16:48.414 --> 00:16:53.090
trying to navigate through the page
content and document mode or browse mode.

284
00:16:54.820 --> 00:16:58.610
So that's our reordering list example.

285
00:16:58.610 --> 00:17:03.582
And you are free to take pieces of that,
go look, how was that done again?

286
00:17:03.582 --> 00:17:07.362
And use that,
cuz those techniques might come up when

287
00:17:07.362 --> 00:17:10.806
you're working on super
interactive widgets.

288
00:17:10.806 --> 00:17:16.262
These are some patterns that I haven't
seen out in the wild quite as much,

289
00:17:16.262 --> 00:17:18.726
like the regular tabs and menus.

290
00:17:18.726 --> 00:17:21.842
There's plenty of examples
of those out there in

291
00:17:21.842 --> 00:17:26.174
ARIA Authoring Practices Guide and
various component libraries.

292
00:17:26.174 --> 00:17:32.139
Reordering, not so much, at least
with perfectly working drag and drop.

293
00:17:32.139 --> 00:17:34.176
Sometimes you get one or the other.

294
00:17:34.176 --> 00:17:38.420
It'll work with mouse dragging,
but not with the keyboard, or

295
00:17:38.420 --> 00:17:40.707
maybe it'll work except in NVDA.

296
00:17:40.707 --> 00:17:44.305
That's always the thing that
you have to check, is NVDA.

297
00:17:44.305 --> 00:17:46.893
I've gotten tripped up by that many times.

298
00:17:46.893 --> 00:17:49.847
And JAWS, they work the same.

299
00:17:49.847 --> 00:17:51.903
&gt;&gt; Any questions?

300
00:17:51.903 --> 00:17:55.050
&gt;&gt; You show the code where
the switch between modes is?

301
00:17:55.050 --> 00:17:59.527
&gt;&gt; Yes, yes, thank you for asking.

302
00:17:59.527 --> 00:18:01.601
So one last look at this.

303
00:18:01.601 --> 00:18:05.481
This is on the overall list, the parent.

304
00:18:05.481 --> 00:18:07.186
And actually, VS Code's kind of nice,

305
00:18:07.186 --> 00:18:10.060
it'll show you what
function you're in up here.

306
00:18:10.060 --> 00:18:16.854
So where we are creating a wrapper
element around these items,

307
00:18:16.854 --> 00:18:22.250
that's where the edit mode
is changing the role.

308
00:18:22.250 --> 00:18:27.390
So this is kind of an exception
to the changing a role.

309
00:18:27.390 --> 00:18:30.977
And actually, I'm probably breaking
one of the ARIA rules here.

310
00:18:30.977 --> 00:18:35.590
So that maybe is a way we could
improve this, is to have,

311
00:18:35.590 --> 00:18:40.891
potentially, I could move some of
this logic up a level to a div or

312
00:18:40.891 --> 00:18:46.312
something, because the list,
it has its own role to begin with.

313
00:18:46.312 --> 00:18:49.722
So it's possible.

314
00:18:49.722 --> 00:18:53.267
Maybe this should be a role of list
when it's not a role of application,

315
00:18:53.267 --> 00:18:57.380
or I should put this on a parent
element that isn't already a list.

316
00:18:57.380 --> 00:19:01.181
So in the world of continuously improving,

317
00:19:01.181 --> 00:19:05.710
I'm always open to
improvements like that myself.

318
00:19:05.710 --> 00:19:07.823
So maybe that's something
I could improve here.

319
00:19:07.823 --> 00:19:11.199
But that is a use of ARIA
role description here.

320
00:19:11.199 --> 00:19:14.240
The sortable list, I think that's fine.

321
00:19:15.620 --> 00:19:18.426
It's just what role do we have here?

322
00:19:18.426 --> 00:19:20.690
I think role list might be
better than role group.

323
00:19:20.690 --> 00:19:23.350
But then again, test it.

324
00:19:23.350 --> 00:19:24.257
Don't take my word for it.

325
00:19:24.257 --> 00:19:25.291
Go test things.

326
00:19:25.291 --> 00:19:29.921
We wanna follow those rules, we also
need to test stuff to see what works.

