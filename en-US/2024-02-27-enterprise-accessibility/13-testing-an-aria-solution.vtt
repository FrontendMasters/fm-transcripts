WEBVTT

1
00:00:00.089 --> 00:00:03.845
Let's talk about testing
ARIA Solutions because it is so

2
00:00:03.845 --> 00:00:07.926
easy to get wrong that we want
to make this easier if possible.

3
00:00:07.926 --> 00:00:10.836
We don't wanna have to rely
on QA to catch everything.

4
00:00:10.836 --> 00:00:13.123
They might not be specialized
in accessibility either.

5
00:00:13.123 --> 00:00:16.606
You might know more than QA for a while.

6
00:00:16.606 --> 00:00:19.222
So we wanna look out for
each other and try and

7
00:00:19.222 --> 00:00:23.748
catch things while we have the opportunity
to fix them, even if you have QA,

8
00:00:23.748 --> 00:00:26.880
because that feedback cycle
can just grow and grow.

9
00:00:26.880 --> 00:00:29.860
So we wanna catch it right
in the moment if we can.

10
00:00:29.860 --> 00:00:31.854
So testing early and often.

11
00:00:31.854 --> 00:00:32.920
Here are some tips.

12
00:00:32.920 --> 00:00:39.891
So when you're trying to choose,
can I use an ARIA attribute?

13
00:00:39.891 --> 00:00:44.614
One tip I have after you've exhausted
every default HTML option available,

14
00:00:44.614 --> 00:00:45.857
[LAUGH] start there.

15
00:00:45.857 --> 00:00:49.877
But if you're like, well, we really wanna
try and make this more interactive.

16
00:00:49.877 --> 00:00:53.390
It seems like there's a great
aria-attribute for this.

17
00:00:53.390 --> 00:00:58.297
See if you can gather any of your site
analytics to see which browsers you need

18
00:00:58.297 --> 00:00:59.600
to look out for, and

19
00:00:59.600 --> 00:01:03.905
then you can cross-reference
the WebAIM screen reader surveys.

20
00:01:03.905 --> 00:01:06.901
WebAIM is a group from Utah,
they're amazing.

21
00:01:06.901 --> 00:01:11.750
And they put out these surveys every
few years on the commonly used

22
00:01:11.750 --> 00:01:14.408
screen readers and combinations.

23
00:01:14.408 --> 00:01:18.917
So if you have a lot of Windows traffic
and Chrome or Firefox, you can go down

24
00:01:18.917 --> 00:01:23.730
this list and see, well, what are the
popular combinations for that browser.

25
00:01:23.730 --> 00:01:27.088
And that can at least send you
in the right direction for

26
00:01:27.088 --> 00:01:29.497
which things do we need to prioritize,

27
00:01:29.497 --> 00:01:33.881
cuz you're not gonna be able to do all
of them so we have to rank somehow.

28
00:01:33.881 --> 00:01:37.775
And you can use your site's
traffic to pick the browser and

29
00:01:37.775 --> 00:01:41.035
then you can kind of learn
which screen readers,

30
00:01:41.035 --> 00:01:44.548
do users commonly pair with
that by looking at this.

31
00:01:44.548 --> 00:01:49.106
So then, I mean, we also wanna talk
to people who use screen readers,

32
00:01:49.106 --> 00:01:51.522
just kind of putting that out there.

33
00:01:51.522 --> 00:01:56.086
We don't wanna like go all the way
through this process and assume we know,

34
00:01:56.086 --> 00:02:00.737
cuz we're doing our best, but most of
us are not daily screen reader users.

35
00:02:00.737 --> 00:02:01.550
Just saying.

36
00:02:01.550 --> 00:02:07.670
But another tool, so we've gathered our
analytics, accessibility support I/O or

37
00:02:07.670 --> 00:02:11.665
a11y support.i/o is
a community driven effort to,

38
00:02:11.665 --> 00:02:15.493
it's basically like a can I use for
ARIA attributes.

39
00:02:15.493 --> 00:02:17.885
They're not all on here, but

40
00:02:17.885 --> 00:02:22.670
let's say we wanted to use
aria-pressed for something and

41
00:02:22.670 --> 00:02:28.716
I'd go check the aria spec make sure
I'm like understanding how it works.

42
00:02:28.716 --> 00:02:31.589
The aria spec isn't gonna tell me
how well supported it is though.

43
00:02:31.589 --> 00:02:35.667
So I can look here and
see that it only has partial support but

44
00:02:35.667 --> 00:02:40.561
if I drill down into that it's actually
for the plain true false cases,

45
00:02:40.561 --> 00:02:44.416
it's green and
supported all the way across the board.

46
00:02:44.416 --> 00:02:49.339
So maybe it's pretty reliable for
more base use cases so

47
00:02:49.339 --> 00:02:56.579
I could look I kind of skipped this step,
but we're gonna look at aria-pressed.

48
00:02:56.579 --> 00:02:57.870
So I this is how I open it.

49
00:02:57.870 --> 00:02:59.655
I open up ARIA.

50
00:02:59.655 --> 00:03:02.117
This is, Way ARIA 1.2.

51
00:03:02.117 --> 00:03:05.600
I tend to just search [LAUGH] in
the page for the attribute I want,

52
00:03:05.600 --> 00:03:08.185
find the first linked version,
and click it.

53
00:03:08.185 --> 00:03:09.277
And that'll get me there.

54
00:03:09.277 --> 00:03:14.816
That's kind of my way of
finding my way around ARIA.

55
00:03:14.816 --> 00:03:19.107
So this will tell me that this is only for
button roles.

56
00:03:19.107 --> 00:03:21.538
So if I'm doing something
that's not a button role,

57
00:03:21.538 --> 00:03:23.707
maybe aria-pressed isn't the right choice.

58
00:03:23.707 --> 00:03:28.075
Maybe I need aria-checked or
aria-selected.

59
00:03:28.075 --> 00:03:34.076
So aria-selected I could use on grid cell,
option, row, or tab.

60
00:03:34.076 --> 00:03:38.222
So if I'm doing a tab switcher,
maybe aria-selected is what I need.

61
00:03:38.222 --> 00:03:43.010
Aria-checked is one for
check boxes, radios, options,

62
00:03:43.010 --> 00:03:45.702
and switches, switch buttons.

63
00:03:45.702 --> 00:03:51.801
So if I'm doing one of those,
maybe aria-checked is what I need and

64
00:03:51.801 --> 00:03:57.580
I can use that information with
this accessibility support IO.

65
00:03:57.580 --> 00:04:00.940
So maybe aria-selected.

66
00:04:00.940 --> 00:04:07.051
That one, just kind of mixed support,
but I could go test it.

67
00:04:07.051 --> 00:04:08.670
This kind of helps me narrow it down.

68
00:04:08.670 --> 00:04:14.239
This and my own analytics is like how
I can at least start to see a shape

69
00:04:14.239 --> 00:04:20.520
to how I might prioritize, how I might
figure out how things are supported.

70
00:04:20.520 --> 00:04:23.924
Cuz I could probably fire
it up in voiceover and

71
00:04:23.924 --> 00:04:27.250
test it with Safari,
what are people using?

72
00:04:27.250 --> 00:04:29.014
How do I know where else to look?

73
00:04:29.014 --> 00:04:30.654
How do I know what else to test?

74
00:04:30.654 --> 00:04:35.789
So this is how I kind of figure
out what the priorities are.

75
00:04:35.789 --> 00:04:38.824
You could check out
the ARIA Authoring Practices Guide.

76
00:04:38.824 --> 00:04:40.328
We saw that a little earlier.

77
00:04:40.328 --> 00:04:41.646
It had some patterns on it.

78
00:04:41.646 --> 00:04:48.524
They might have some suggestions of like
how to execute some of these patterns.

79
00:04:48.524 --> 00:04:52.804
You could snoop around the issue
trackers for all the major accessibility

80
00:04:52.804 --> 00:04:57.165
repositories like the MVDA screen
reader has an excellent issue tracker.

81
00:04:57.165 --> 00:04:58.751
It's open source.

82
00:04:58.751 --> 00:05:03.286
And some of the trickiest issues I've
found are on Windows, Windows and

83
00:05:03.286 --> 00:05:07.166
mobile voiceover interestingly,
have been kind of tricky.

84
00:05:07.166 --> 00:05:10.844
The ARIA spec is also developed
in the Open AI GitHub.

85
00:05:10.844 --> 00:05:13.724
And so there's tons of info on there.

86
00:05:13.724 --> 00:05:17.031
What CAG the actual standard for
our guidelines,

87
00:05:17.031 --> 00:05:22.150
those are open source on GitHub, and
then WebKit and Safari, they have their

88
00:05:22.150 --> 00:05:27.367
own bug tracker that it's a little bit
hard to search through, but it is open.

89
00:05:27.367 --> 00:05:29.578
And then lastly, there's the WebAIM.

90
00:05:29.578 --> 00:05:33.351
They have an email discussion
list that has years of archives.

91
00:05:33.351 --> 00:05:37.667
So, and a lot of people on there either
work on browsers or screen readers.

92
00:05:37.667 --> 00:05:42.272
I mean, they are like very influential
people who like answering questions,

93
00:05:42.272 --> 00:05:44.797
and there's a great community around it.

94
00:05:44.797 --> 00:05:46.947
So go search their archives.

95
00:05:46.947 --> 00:05:48.041
In these repos,

96
00:05:48.041 --> 00:05:53.281
I found solutions to things maybe that I
thought were problems but then I learned

97
00:05:53.281 --> 00:05:58.694
how the screen readers were designed
around how blind people actually navigate.

98
00:05:58.694 --> 00:06:01.952
And I could learn that I actually
misunderstood how that was

99
00:06:01.952 --> 00:06:02.928
supposed to work.

100
00:06:02.928 --> 00:06:03.832
Now, I get it.

101
00:06:03.832 --> 00:06:07.422
And that was free information
that I found in these repos.

102
00:06:07.422 --> 00:06:11.803
So these are some of the more
like tactical steps that

103
00:06:11.803 --> 00:06:16.683
you could take to figure out
how to deal with ARIA Support,

104
00:06:16.683 --> 00:06:20.088
cuz it's not perfect across the board.

105
00:06:20.088 --> 00:06:24.162
And remember that screen readers are not
the only thing in accessibility.

106
00:06:24.162 --> 00:06:28.746
So ARIA mostly targets screen readers and
assistive technologies.

107
00:06:28.746 --> 00:06:30.229
But this is one piece of it.

108
00:06:30.229 --> 00:06:30.965
So, yeah,

109
00:06:30.965 --> 00:06:35.997
we kind of just have to remember that
when we're juggling all these priorities.

110
00:06:35.997 --> 00:06:41.142
And so some things are just so
clearly blockers that they're so

111
00:06:41.142 --> 00:06:43.774
severe that we have to fix them.

112
00:06:43.774 --> 00:06:47.682
I just think, yeah, we have a lot of
balls in the air that we're trying to

113
00:06:47.682 --> 00:06:51.913
balance everything and sometimes we have
to remember that people can still see

114
00:06:51.913 --> 00:06:55.116
the screen sometimes, but
they can only use the keyboard or

115
00:06:55.116 --> 00:06:59.118
they have motion sensitivity or
there's all these different use cases.

116
00:06:59.118 --> 00:07:02.454
So we try to hit like
all of them somewhat.

117
00:07:02.454 --> 00:07:06.772
Try to get the basics in general and
then we go into some of these

118
00:07:06.772 --> 00:07:11.686
more obscure issues on certain
browsers and certain screen readers.

