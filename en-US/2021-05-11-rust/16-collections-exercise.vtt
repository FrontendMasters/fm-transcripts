WEBVTT

1
00:00:00.660 --> 00:00:04.390
So same structure as before,
here we've got main.rs.

2
00:00:04.390 --> 00:00:07.890
This time we just have some different code
in there and a different set of to dues.

3
00:00:07.890 --> 00:00:10.300
So here we've got our struct called city.

4
00:00:10.300 --> 00:00:13.519
City has 2 fields right now,
a description, which is a string and

5
00:00:13.519 --> 00:00:15.690
residents which is a use 64.

6
00:00:15.690 --> 00:00:18.537
Our first to do is we wanna add
a field here called is_coastal,

7
00:00:18.537 --> 00:00:19.460
which is a Boolean.

8
00:00:20.790 --> 00:00:22.572
This will cause some other
compiler errors, but

9
00:00:22.572 --> 00:00:25.870
those other compiler errors will tell
you what other changes need to happen.

10
00:00:25.870 --> 00:00:29.493
So this may be your first
experience of encountering rusts,

11
00:00:29.493 --> 00:00:34.193
compiler helping you out and helping you
figure out like what needs to happen.

12
00:00:34.193 --> 00:00:37.360
So let's take a look at
our new city function.

13
00:00:37.360 --> 00:00:40.308
So basically this is saying, give me some
residents and a Boolean for whether or

14
00:00:40.308 --> 00:00:41.500
not it's coastal.

15
00:00:41.500 --> 00:00:45.720
And if it's coastal, I'm going to return
a city struck, which has this description.

16
00:00:45.720 --> 00:00:48.232
A coastal city will have
approximately this many residents, so

17
00:00:48.232 --> 00:00:51.280
we're using format to do
string interpolation here.

18
00:00:51.280 --> 00:00:54.598
Residency may recall as shorthand for
residents:residents.

19
00:00:54.598 --> 00:00:57.170
But we're just writing it in
that sort of shorthand way.

20
00:00:58.380 --> 00:01:01.975
Otherwise, we're gonna panic and say,
to do return a city as described as

21
00:01:01.975 --> 00:01:05.470
a non-coastal city of approximately,
blah, blah, blah residence.

22
00:01:05.470 --> 00:01:08.170
So we're gonna do something pretty
similar to this first branch.

23
00:01:08.170 --> 00:01:11.329
Notice, by the way, that here,
this is an expression and

24
00:01:11.329 --> 00:01:14.100
also this whole if it's an expression.

25
00:01:14.100 --> 00:01:17.719
So basically this function is
using an implicit return here.

26
00:01:17.719 --> 00:01:20.510
Without actually having to
write the return keyword so

27
00:01:20.510 --> 00:01:22.694
it's returning the result of this if, and

28
00:01:22.694 --> 00:01:26.455
then the result of this if in each
branch is this expression right here, so

29
00:01:26.455 --> 00:01:29.514
we're sort of combining the two
things we saw previously.

30
00:01:29.514 --> 00:01:31.570
And then down here we
have our main function.

31
00:01:31.570 --> 00:01:36.092
Which is actually what's kicking things
off, previously in the previous example we

32
00:01:36.092 --> 00:01:40.314
had new non main function defined after
main, here we're defining it before.

33
00:01:40.314 --> 00:01:42.160
Either way is totally fine.

34
00:01:42.160 --> 00:01:44.882
You can feel free to move
it around if you prefer.

35
00:01:44.882 --> 00:01:48.056
And what we've got is we have rustville,
which is a city and

36
00:01:48.056 --> 00:01:51.121
it's saying the rustville is
being assigned to a panic.

37
00:01:51.121 --> 00:01:55.320
So as to call a new city here
with whatever arguments you like.

38
00:01:55.320 --> 00:01:58.758
Now because this is a panic, we can see
that the ID is actually grayed out this

39
00:01:58.758 --> 00:02:00.940
print line like I did on my slide earlier.

40
00:02:00.940 --> 00:02:04.478
Saying, hey, if you hover over it says,
unreachable statement and

41
00:02:04.478 --> 00:02:09.100
the reason it's unreachable is because
it's going to have panicked by then.

42
00:02:09.100 --> 00:02:12.920
So as soon as your fix this to do,
this will no longer be unreachable.

43
00:02:12.920 --> 00:02:15.953
And then finally it's saying if rustville
that is coastal which is an error because

44
00:02:15.953 --> 00:02:17.870
we haven't defined that yet.

45
00:02:17.870 --> 00:02:19.414
Then it's gonna print
it is a coastal city,

46
00:02:19.414 --> 00:02:21.770
otherwise it will print
it is not a coastal city.

47
00:02:21.770 --> 00:02:25.116
So sum up, we have three to do's,
first return a city here,

48
00:02:25.116 --> 00:02:26.902
second called new_city here.

49
00:02:26.902 --> 00:02:30.988
And then finally, print the description
of rustville here just using

50
00:02:30.988 --> 00:02:33.281
string interpolation, like before.

51
00:02:33.281 --> 00:02:37.000
String interpolation plus
accessing a fuel off of a struct

