WEBVTT

1
00:00:00.290 --> 00:00:02.485
Finally, last little step here, docs.

2
00:00:03.710 --> 00:00:08.336
So we have this thing, this other package
that we installed called API Documenter.

3
00:00:08.336 --> 00:00:12.615
And what we're gonna do here is this,

4
00:00:12.615 --> 00:00:18.783
yarn API documenter input temp folder,
output docs.

5
00:00:22.768 --> 00:00:23.840
Where to go.

6
00:00:23.840 --> 00:00:25.200
I forgot a little command there.

7
00:00:25.200 --> 00:00:27.720
It's API documenter markdown.

8
00:00:28.920 --> 00:00:29.840
So that's the command.

9
00:00:30.870 --> 00:00:32.640
I'm gonna run API documenter.

10
00:00:32.640 --> 00:00:34.670
I want it to generate mark down for me.

11
00:00:34.670 --> 00:00:38.546
There's another thing you could generate
here, which I won't get into too much.

12
00:00:38.546 --> 00:00:43.382
Input is the temp folder, output is
the docs folder, which by the way,

13
00:00:43.382 --> 00:00:46.458
it's gonna work really nicely with GitHub.

14
00:00:49.641 --> 00:00:54.717
So I now have a docs folder with
all of this lovely markdown in it,

15
00:00:54.717 --> 00:01:00.170
including a little, this is a message
saying this is a beta release.

16
00:01:00.170 --> 00:01:04.680
It's a preview, may change at any time.

17
00:01:04.680 --> 00:01:05.954
So let's commit this.

18
00:01:16.928 --> 00:01:21.570
And I'll show you what I mean by
this playing very nice with GitHub.

19
00:01:27.504 --> 00:01:32.290
So I'm going to the place on GitHub
where I've hosted this new repo.

20
00:01:33.460 --> 00:01:37.460
And we can see that 18 seconds
ago I pushed a new commit.

21
00:01:37.460 --> 00:01:40.897
So this is pretty recent.

22
00:01:40.897 --> 00:01:43.184
Well first,
before I go into settings here,

23
00:01:43.184 --> 00:01:47.103
let me show you what these docs look like
just purely browsing them on GitHub.

24
00:01:50.246 --> 00:01:51.230
So here we go.

25
00:01:51.230 --> 00:01:55.132
This is where if we had multiple
packages like if this were a mono repo,

26
00:01:55.132 --> 00:01:59.630
it's this little pitch for
the monorepo course,

27
00:01:59.630 --> 00:02:03.540
you can see many different packages,
each of their documentation show up here.

28
00:02:03.540 --> 00:02:06.884
And then you could drill into this and
it'll show you the functions that

29
00:02:06.884 --> 00:02:09.456
are available with this nice
little beta indication.

30
00:02:09.456 --> 00:02:14.387
And then if we look at average,
Here's a description and

31
00:02:14.387 --> 00:02:18.460
there's the signature,
here are the parameters, the return type.

32
00:02:18.460 --> 00:02:22.560
It's kind of basic, but
it kind of comes for free.

33
00:02:23.930 --> 00:02:26.960
And mark down kind of works with a lot
of different things with the nice little

34
00:02:26.960 --> 00:02:28.480
breadcrumb up here.

35
00:02:28.480 --> 00:02:33.720
So, here's what I find is a nice synergy.

36
00:02:35.460 --> 00:02:38.730
It used to be that GitHub Pages would.

37
00:02:38.730 --> 00:02:42.070
They had this gh pages branch,

38
00:02:43.320 --> 00:02:49.256
you'd have to commit your static
site to your gh pages branch and

39
00:02:49.256 --> 00:02:54.090
it always felt weird to me to have
a completely unrelated project.

40
00:02:54.090 --> 00:02:55.120
Your documentation,

41
00:02:55.120 --> 00:02:59.420
it's totally different than your source
code, that's on your gh pages branch.

42
00:02:59.420 --> 00:03:02.960
It's not a different version
of your source code.

43
00:03:02.960 --> 00:03:05.121
It's entirely different content.

44
00:03:05.121 --> 00:03:11.365
Now, I could say I want
the source to be master and

45
00:03:11.365 --> 00:03:15.806
I can actually pick this docs folder and
hit save.

46
00:03:17.831 --> 00:03:21.987
And I wonder if,
we'll see if this actually works,

47
00:03:21.987 --> 00:03:28.095
but, Let's check it out.

48
00:03:28.095 --> 00:03:30.160
It's not there yet.

49
00:03:30.160 --> 00:03:32.650
I'll leave it as [LAUGH] an exercise for

50
00:03:34.000 --> 00:03:37.450
the reader to set up the Jekyll theme and
all that.

51
00:03:37.450 --> 00:03:40.083
But the point is,
once you have that theme set up,

52
00:03:40.083 --> 00:03:43.684
GitHub already understands markdown and
can turn those into HTML.

53
00:03:43.684 --> 00:03:47.498
So this could be just an automatic
self publishing thing.

54
00:03:47.498 --> 00:03:51.333
As soon as new content lands in
that docs folder, GitHub Pages,

55
00:03:51.333 --> 00:03:54.032
it's Jekyll static site generation stuff,

56
00:03:54.032 --> 00:03:58.670
will kick into gear, make that HTML,
you'll have that website published.

57
00:03:58.670 --> 00:03:59.990
You don't have to do a thing.

58
00:03:59.990 --> 00:04:03.943
Automatic publishing with each
new commit that lands on master.

59
00:04:03.943 --> 00:04:08.862
So, with this included,
we've got tests, linting, build,

60
00:04:08.862 --> 00:04:12.060
we can tell when our API surface changes.

61
00:04:12.060 --> 00:04:18.410
We can even validate that the API

62
00:04:18.410 --> 00:04:23.920
surface changes described in a pull
request are the extent of the changes.

63
00:04:23.920 --> 00:04:27.250
Nobody forgot to update that report.

64
00:04:27.250 --> 00:04:32.220
Because we're testing that in CI and
now we have API Docs on top of that.

65
00:04:32.220 --> 00:04:34.951
Really, really nice complete feature set.

66
00:04:34.951 --> 00:04:39.200
And I think we've ticked a lot
of the most important boxes for

67
00:04:39.200 --> 00:04:42.292
a library that's authored in TypeScript.

68
00:04:42.292 --> 00:04:47.113
&gt;&gt; Are there any other popular
alternatives aside from our API

69
00:04:47.113 --> 00:04:48.279
documenter?

70
00:04:48.279 --> 00:04:54.860
&gt;&gt; There are, you're talking about for
API Docs Edwin, is that right?

71
00:04:54.860 --> 00:04:56.209
&gt;&gt; Yeah.

72
00:04:56.209 --> 00:05:01.093
&gt;&gt; So yeah, the question is,
are there other alternatives for

73
00:05:01.093 --> 00:05:07.630
documenting APIs and this is a tricky
subject because there are lots of options.

74
00:05:07.630 --> 00:05:12.510
But particularly for projects that might
find themselves halfway between JavaScript

75
00:05:12.510 --> 00:05:15.130
and TypeScript, at least for
a point in time.

76
00:05:16.270 --> 00:05:19.950
There are some solutions
that work very nicely for

77
00:05:19.950 --> 00:05:24.390
just pure TypeScript and then some that
work nicely for just JavaScript and

78
00:05:24.390 --> 00:05:26.830
they just fall apart when
TypeScript gets involved.

79
00:05:28.710 --> 00:05:29.980
So those two exist.

80
00:05:29.980 --> 00:05:33.440
And then there's even
another category like YUIDoc,

81
00:05:33.440 --> 00:05:36.965
where it doesn't even
look at your code at all.

82
00:05:36.965 --> 00:05:39.710
YUIDoc simply reads comments.

83
00:05:39.710 --> 00:05:42.419
And that puts you in a situation
where you have to do duplicate work.

84
00:05:42.419 --> 00:05:47.435
Every functions documentation must say,
by the way,

85
00:05:47.435 --> 00:05:53.671
my functions name is this and the argument
names that I receive are these.

86
00:05:53.671 --> 00:05:56.790
And keeping that in sync,
it's just a huge pain.

87
00:05:56.790 --> 00:06:03.050
So, I've not found a great option
that covers all of those bases.

88
00:06:03.050 --> 00:06:08.620
Things will either fall apart for
modern JavaScript or TypeScript.

89
00:06:08.620 --> 00:06:10.580
Or they won't analyze the code at all.

90
00:06:10.580 --> 00:06:13.930
And it's all on you, as a developer
to write your documentation.

91
00:06:13.930 --> 00:06:17.600
It's almost like they just strip
away anything that's not a comment.

92
00:06:17.600 --> 00:06:19.320
That seems bad too.

93
00:06:19.320 --> 00:06:22.690
So I think that there's a lot of room for
improvement in the space.

94
00:06:22.690 --> 00:06:26.865
If I had to pick one I
probably would use ESDoc.

95
00:06:28.400 --> 00:06:33.890
But you wanna be careful because any
TypeScript specific documentation

96
00:06:33.890 --> 00:06:39.160
tool like TSDoc, I think it is.

97
00:06:40.400 --> 00:06:41.714
Let me make sure that's
what I think it is.

98
00:06:41.714 --> 00:06:43.045
Nope, sorry, it's type doc.

99
00:06:45.868 --> 00:06:47.454
This one here.

100
00:06:47.454 --> 00:06:50.656
So type doc is really interesting but,

101
00:06:52.724 --> 00:06:57.422
The way it's implemented is so
tightly coupled with the compiler API,

102
00:06:57.422 --> 00:07:02.070
that it tends to lag way behind in
terms of new compiler releases.

103
00:07:02.070 --> 00:07:04.620
So TypeScript 4.0 is out right now.

104
00:07:04.620 --> 00:07:07.710
It is entirely possible,
I would not be shocked,

105
00:07:07.710 --> 00:07:12.140
if type doc reported
nothing newer than 3.8.

106
00:07:12.140 --> 00:07:16.820
So it does put you in a position where
you're always trying to catch up,

107
00:07:16.820 --> 00:07:18.090
catch up, catch up.

108
00:07:18.090 --> 00:07:20.607
And it feels silly to me to have

109
00:07:20.607 --> 00:07:25.451
a tool like this hold you back
in terms of language level.

110
00:07:25.451 --> 00:07:27.818
So that's why I wouldn't
necessarily go with this.

111
00:07:27.818 --> 00:07:33.158
ESDoc uses some of the same
technology that ESLint uses

112
00:07:33.158 --> 00:07:38.910
in terms of building up
that abstract syntax tree.

113
00:07:38.910 --> 00:07:42.450
And that is something that Microsoft and

114
00:07:42.450 --> 00:07:46.430
the TypeScript core team themselves,
they help keep that up to date.

115
00:07:46.430 --> 00:07:52.970
And so it chases the new releases
of the compiler a bit more tightly.

116
00:07:52.970 --> 00:07:56.950
And I think it's less
risky to incorporate that.

117
00:07:56.950 --> 00:07:58.910
Now here's the good news though.

118
00:07:58.910 --> 00:08:01.990
Everyone's trying to
align around JSDoc stuff.

119
00:08:01.990 --> 00:08:07.970
The whole point of this is the things that
make for great tooltips in your own app.

120
00:08:10.060 --> 00:08:14.420
Everyone wants that same stuff to
result in great documentation.

121
00:08:14.420 --> 00:08:18.787
So in some ways these tools can be
dropped in like trade one the other.

122
00:08:18.787 --> 00:08:21.886
The API Docs will look different,
but you won't have to go and

123
00:08:21.886 --> 00:08:24.398
retrofit a bunch of stuff
to your own source code.

124
00:08:26.419 --> 00:08:32.658
And if you're interested in learning more,
I'm very passionate about this space.

125
00:08:32.658 --> 00:08:38.380
So I have a little project here,
On GitHub.

126
00:08:38.380 --> 00:08:41.570
It's called JS documentation cases.

127
00:08:41.570 --> 00:08:46.342
And what I have is a variety
of different interesting

128
00:08:46.342 --> 00:08:51.530
projects like single file of
JavaScript single file of TypeScript.

129
00:08:51.530 --> 00:08:52.030
A mix.

130
00:08:53.220 --> 00:08:56.670
Entry point that's JavaScript but
it refers to some type script.

131
00:08:56.670 --> 00:08:58.740
So I have a bunch of these,

132
00:08:58.740 --> 00:09:03.849
seven different, actually,
it's eight because I have a 3.1 here.

133
00:09:03.849 --> 00:09:08.554
So eight different types of projects
times one, two, three, four, five, six,

134
00:09:08.554 --> 00:09:12.744
times eight different tools that can
be used to generate documentation.

135
00:09:12.744 --> 00:09:17.893
And I keep a very close eye on which of
these 64 combinations start to look okay.

136
00:09:20.167 --> 00:09:22.342
Mostly I want you to look at this and

137
00:09:22.342 --> 00:09:25.755
see Mike's done a lot of
research in this area.

138
00:09:25.755 --> 00:09:28.780
And if there were something
that was good and ready to use,

139
00:09:28.780 --> 00:09:32.760
he would probably just tell us to use
that and I'm not saying that right now.

140
00:09:32.760 --> 00:09:38.150
I'm saying API extractor while it
generates basic documentation,

141
00:09:38.150 --> 00:09:40.570
I trust it more than some
of these other things.

142
00:09:41.740 --> 00:09:44.170
In no small part because
Microsoft makes it and

143
00:09:44.170 --> 00:09:47.260
they use it for
all of their own documentation.

144
00:09:47.260 --> 00:09:50.877
And for their own use of TypeScript,
which they make themselves.

145
00:09:50.877 --> 00:09:54.982
So if this breaks, it will break for
them and I trust that they will fix it.

146
00:09:54.982 --> 00:09:55.482
[LAUGH]

