WEBVTT

1
00:00:00.460 --> 00:00:06.120
So on GitHub,
now that I've created a repo,

2
00:00:06.120 --> 00:00:10.040
you're now able to find
the work I've done so

3
00:00:10.040 --> 00:00:18.540
far on this sort of Mike's TypeScript
boilerplate project.

4
00:00:18.540 --> 00:00:22.479
So if you wanna go to GitHub and
check that out,

5
00:00:22.479 --> 00:00:25.618
then make sure I actually push that.

6
00:00:32.669 --> 00:00:35.802
It's possible I didn't push my code,
we'll see.

7
00:00:35.802 --> 00:00:38.310
It's there now, in any case.

8
00:00:38.310 --> 00:00:43.044
So if you didn't follow my
instructions perfectly, or

9
00:00:43.044 --> 00:00:45.662
if you ran into some problems,

10
00:00:45.662 --> 00:00:50.713
now you can check out exactly
the code that you saw me write.

11
00:00:50.713 --> 00:00:55.216
And if you're watching this,
you're watching this on the video,

12
00:00:55.216 --> 00:00:58.455
just make sure you look
at the readme carefully,

13
00:00:58.455 --> 00:01:02.800
because I'm gonna make sure that
it's very clear which branch,

14
00:01:02.800 --> 00:01:07.310
or commit, or tag you can look to for
each each part of this process.

15
00:01:08.550 --> 00:01:14.760
And where we are right now is we have
linting, TypeScript doing the building,

16
00:01:14.760 --> 00:01:19.790
and we have tests running with Jest.

17
00:01:20.820 --> 00:01:24.230
So we're gonna add one more thing, and

18
00:01:24.230 --> 00:01:27.130
it is probably something that
you haven't seen before.

19
00:01:27.130 --> 00:01:28.658
Just a moment, I gotta pick something up.

20
00:01:28.658 --> 00:01:35.050
So we're gonna add an API
documentation tool.

21
00:01:35.050 --> 00:01:38.850
And there are a lot of different like
doc tools out there for JavaScript and

22
00:01:38.850 --> 00:01:40.510
TypeScript projects.

23
00:01:40.510 --> 00:01:49.445
This one in particular is I think the best
option that exists today for TypeScript.

24
00:01:49.445 --> 00:01:55.156
And it's called API extractor,
sounds fancy, I know.

25
00:01:59.013 --> 00:02:04.697
So we're gonna pick up in
the notes section for,

26
00:02:04.697 --> 00:02:09.568
and it'll be a little part at the bottom.

27
00:02:09.568 --> 00:02:13.789
It's about 80% of the way to the bottom,
and it's called API.

28
00:02:16.910 --> 00:02:20.330
It's called API Surface Report and Docs.

29
00:02:21.490 --> 00:02:24.770
Look for that heading,
API Surface Report and Docs.

30
00:02:25.920 --> 00:02:30.841
So where we're gonna begin is we have

31
00:02:30.841 --> 00:02:34.809
to install two new packages,

32
00:02:34.809 --> 00:02:40.367
yarn add microsoft/api-extractor and

33
00:02:40.367 --> 00:02:44.830
microsoft/api-documenter.

34
00:02:44.830 --> 00:02:49.540
These are two CLIs, each of which
serves a very specific purpose.

35
00:02:49.540 --> 00:02:56.490
And I like that these are separate tools,
because they leave you with options,

36
00:02:56.490 --> 00:03:01.660
in terms of maybe you just wanna
adopt one or the other, or both.

37
00:03:01.660 --> 00:03:03.842
But the choice is yours.

38
00:03:03.842 --> 00:03:07.180
So first,
we're gonna focus on API extractor.

39
00:03:07.180 --> 00:03:13.830
And the job of this tool is to look at
our declaration files, and analyze them,

40
00:03:13.830 --> 00:03:19.070
produce a report on our
public API surface,

41
00:03:20.790 --> 00:03:25.190
and produce a JSON file that
can be used to make docs.

42
00:03:25.190 --> 00:03:29.677
So it's all about analyzing our project,
and

43
00:03:29.677 --> 00:03:34.174
producing stuff that
describes our library.

44
00:03:34.174 --> 00:03:36.153
That stuff could be a markdown file.

45
00:03:36.153 --> 00:03:37.360
That's an API report.

46
00:03:38.680 --> 00:03:43.205
A dtsRollup, which is kinda like a roll
up.js, if you've ever used that, right,

47
00:03:43.205 --> 00:03:47.060
a bunch of things all combined into
a single file, and then a JSON file.

48
00:03:47.060 --> 00:03:50.680
So you've got three different
forms of similar information.

49
00:03:50.680 --> 00:03:55.880
We are going to follow this theme
today of getting that first

50
00:03:55.880 --> 00:04:00.140
basic config file from
these CLIs themselves.

51
00:04:00.140 --> 00:04:05.520
So this one is yarn api-extractor init.

52
00:04:05.520 --> 00:04:09.670
Careful you don't do double dash in it
like we've done with some other tools.

53
00:04:09.670 --> 00:04:11.800
And a couple things have happened.

54
00:04:11.800 --> 00:04:13.280
Actually, just one at this point here.

55
00:04:14.590 --> 00:04:15.703
We have a JSON file.

56
00:04:15.703 --> 00:04:17.750
Here are your red squiggles.

57
00:04:17.750 --> 00:04:21.580
Remember I told you about comments
not really being part of JSON?

58
00:04:21.580 --> 00:04:26.320
Well, we can change the language
mode in VS Code and

59
00:04:26.320 --> 00:04:30.610
say JSON with comments, and
look, everything's gone.

60
00:04:30.610 --> 00:04:34.280
Now, there's a way to set this up in
your settings if you care to do so,

61
00:04:34.280 --> 00:04:35.640
I'm not gonna get into that too much.

62
00:04:37.100 --> 00:04:38.860
We just need to make a few changes here.

63
00:04:38.860 --> 00:04:43.360
So you're gonna look for
mainEntryPointFilePath.

64
00:04:46.980 --> 00:04:50.070
So API extractor expects your library

65
00:04:50.070 --> 00:04:55.260
to have a single entry point where
all of the imports come from.

66
00:04:55.260 --> 00:04:57.720
So a good example would be react, right?

67
00:04:57.720 --> 00:05:01.000
You're not importing things
from react/component.

68
00:05:01.000 --> 00:05:02.620
Everything's just coming from react.

69
00:05:02.620 --> 00:05:04.100
There's this one module.

70
00:05:04.100 --> 00:05:05.520
Everything comes from that.

71
00:05:05.520 --> 00:05:09.660
So that is the opinion That
comes with API extractor.

72
00:05:09.660 --> 00:05:10.890
That you should build things that way.

73
00:05:10.890 --> 00:05:12.360
And I feel like that's a good idea,

74
00:05:12.360 --> 00:05:16.190
because it let's you have very
deliberate public API surface.

75
00:05:17.450 --> 00:05:22.150
So it's go to look at project
folder which is the root of my

76
00:05:22.150 --> 00:05:26.280
kit repo./lib/index.d.ts.

77
00:05:26.280 --> 00:05:29.040
And I want dist instead of lib.

78
00:05:30.070 --> 00:05:31.945
So we're gonna make that
one little change there.

79
00:05:35.003 --> 00:05:39.710
And then there are a couple
other things we're gonna do.

80
00:05:39.710 --> 00:05:47.286
We're gonna look for our dtsRollup,
and whether that's enabled or not.

81
00:05:50.332 --> 00:05:52.207
Here's my API report doc model.

82
00:05:52.207 --> 00:05:57.310
All right, dtsRollup, looks like this
is already enabled, it's set to true.

83
00:05:57.310 --> 00:06:02.690
If you see little carrot m in the notes
as line endings, just ignore those.

84
00:06:02.690 --> 00:06:07.280
That is a mistake.

85
00:06:07.280 --> 00:06:11.645
It's like line feed,
it's like lf instead of crlf,

86
00:06:11.645 --> 00:06:15.180
like carrot return versus line feed.

87
00:06:15.180 --> 00:06:17.620
Anyway, that's not something
that you should type here.

88
00:06:17.620 --> 00:06:19.690
Just make sure that
this is set to enabled.

89
00:06:21.080 --> 00:06:24.200
Next, we're gonna look for
untrimmedFilePath, here it is.

90
00:06:25.550 --> 00:06:28.950
And what we're doing
here is we're describing

91
00:06:30.010 --> 00:06:34.830
different versions of our API surface
that we can make available to people.

92
00:06:34.830 --> 00:06:36.160
This is super cool.

93
00:06:36.160 --> 00:06:39.195
This is where we get the ability to say,

94
00:06:39.195 --> 00:06:43.635
I have a new method available on a class,
but it's in beta test.

95
00:06:43.635 --> 00:06:49.782
It doesn't have the same SemVer
guarantees as my stable release, right?

96
00:06:49.782 --> 00:06:55.640
So here are the types for beta,
and here are the types for stable.

97
00:06:55.640 --> 00:06:57.570
So we need an untrimmedFilePath,

98
00:06:57.570 --> 00:07:02.860
because that represents our
entire API surface untrimmed.

99
00:07:02.860 --> 00:07:03.910
Nothing's been trimmed away.

100
00:07:05.150 --> 00:07:08.660
So just make sure you're
careful about commas,

101
00:07:08.660 --> 00:07:13.040
because with these comments,
the commas can get lost.

102
00:07:13.040 --> 00:07:17.970
So if you see red squiggles here,
it's probably because of that you see here

103
00:07:19.280 --> 00:07:22.030
it doesn't like that comma,
but we're gonna keep going.

104
00:07:22.030 --> 00:07:23.500
So we've got our untrimmedFilePath.

105
00:07:23.500 --> 00:07:24.730
We're gonna comment.

106
00:07:24.730 --> 00:07:28.900
We're gonna enable the beta
trimmed file path, and

107
00:07:28.900 --> 00:07:32.140
it is fine to just sort
of leave this as is.

108
00:07:32.140 --> 00:07:36.390
Actually, I wanna make one little change
up here to align with the notes for

109
00:07:36.390 --> 00:07:43.020
untrimmed, because it is everything,
I wanna add private to the end.

110
00:07:43.020 --> 00:07:46.810
This might be something that you
would consume for testing your code.

111
00:07:48.070 --> 00:07:53.430
It might include private APIs that you
wouldn't want appearing in an autocomplete

112
00:07:53.430 --> 00:07:54.070
for users.

113
00:07:55.570 --> 00:07:59.530
So untrimmed, everything's in
the dist folder, right, untrimmed,

114
00:07:59.530 --> 00:08:00.390
and so it's private.

115
00:08:01.450 --> 00:08:02.370
This is our beta.

116
00:08:03.550 --> 00:08:07.014
So beta ends with beta, so
this one's already good.

117
00:08:07.014 --> 00:08:09.720
And then we've got public.

118
00:08:09.720 --> 00:08:11.850
And let's make this one.

119
00:08:11.850 --> 00:08:13.320
Let's get rid of the public here.

120
00:08:13.320 --> 00:08:15.740
So I've just added my
own little opinion here.

121
00:08:15.740 --> 00:08:20.102
I feel the default thing
that people should look for

122
00:08:20.102 --> 00:08:24.472
should just be your package name .d.ts,
right?

123
00:08:24.472 --> 00:08:27.613
Cuz if they don't know
anything about API Extractor,

124
00:08:27.613 --> 00:08:31.240
then they don't need to worry
about these conventions.

125
00:08:31.240 --> 00:08:34.140
And I feel like it's more important
to indicate what is private,

126
00:08:34.140 --> 00:08:39.425
what you shouldn't use, as opposed to
indicating public, that you should use it.

127
00:08:39.425 --> 00:08:42.000
Cuz it's a little bit

128
00:08:42.000 --> 00:08:46.428
more explicit of a signal this is private,
you shouldn't use it.

129
00:08:46.428 --> 00:08:48.193
So I wanna mark the private,

130
00:08:48.193 --> 00:08:53.058
as opposed to letting people deduce
that it's private, if that makes sense.

131
00:08:57.358 --> 00:08:59.966
All right, so I'm gonna save, which,

132
00:08:59.966 --> 00:09:04.790
should remove that trailing comma for
me, save, and it does.

133
00:09:04.790 --> 00:09:06.509
Otherwise, you can delete it yourself.

134
00:09:07.780 --> 00:09:10.236
And we are done with this file for now.

135
00:09:10.236 --> 00:09:14.497
All right, we need to do one more
thing before we try API Extractor, and

136
00:09:14.497 --> 00:09:16.565
that's make a folder called etc.

137
00:09:16.565 --> 00:09:20.290
This is where your API
report is gonna live.

138
00:09:20.290 --> 00:09:23.890
And the folder must exist before
you try and run this command.

139
00:09:25.090 --> 00:09:31.971
Now it's time to take it for a spin,
yarn api-extractor run, and then --local.

140
00:09:35.274 --> 00:09:36.400
So that's what we ran.

141
00:09:38.530 --> 00:09:43.430
And we can see on the left
a couple things happened.

142
00:09:43.430 --> 00:09:47.652
So first, new declaration files appeared.

143
00:09:47.652 --> 00:09:49.066
So we've got private.

144
00:09:53.380 --> 00:09:54.490
We have beta.

145
00:09:54.490 --> 00:09:59.934
They all look kinda
the same at this point.

146
00:09:59.934 --> 00:10:03.980
This one's missing something here.

147
00:10:03.980 --> 00:10:05.890
This is my public API surface.

148
00:10:05.890 --> 00:10:08.223
It only has AVG.

149
00:10:08.223 --> 00:10:11.000
But if I look at beta, look at this.

150
00:10:11.000 --> 00:10:16.130
So because some three,
this function was marked as beta,

151
00:10:16.130 --> 00:10:19.140
it's not part of my
public API surface yet.

152
00:10:19.140 --> 00:10:23.170
Somebody could opt into this, but
they would have to take an extra step

153
00:10:23.170 --> 00:10:27.520
to use this beta feature, which is
exactly what you want for a beta test.

154
00:10:27.520 --> 00:10:32.520
You want people to be able to,
by default, get the stable experience.

155
00:10:32.520 --> 00:10:35.630
And if they're doing what they
should be doing with the beta,

156
00:10:35.630 --> 00:10:39.300
which is just evaluating it,
not using it in production,

157
00:10:39.300 --> 00:10:43.120
not using it at scale,
that's what makes a beta test.

158
00:10:44.270 --> 00:10:47.150
Well, then they have to make a little
change, and it's pretty simple for

159
00:10:47.150 --> 00:10:49.200
a consumer of this library
to make this change.

