WEBVTT

1
00:00:01.130 --> 00:00:06.640
So, if you go to the readme, after
reading who this course is intended for,

2
00:00:06.640 --> 00:00:09.638
we begin the instructions for
your project setup.

3
00:00:09.638 --> 00:00:13.640
So first,
just in case you're new to using GitHub,

4
00:00:13.640 --> 00:00:17.610
you have to make sure that you have
an SSH key set up with GitHub and

5
00:00:17.610 --> 00:00:22.390
you can test that this works by
trying to SSH into github.com.

6
00:00:22.390 --> 00:00:29.320
And GitHub will basically tell you that I
have successfully authenticated you and

7
00:00:29.320 --> 00:00:32.480
then it will hang up, which is
exactly what you wanna see, right.

8
00:00:32.480 --> 00:00:36.000
In fact, if it can recognize your
username and say it back to you,

9
00:00:36.000 --> 00:00:39.740
that's pretty conclusive proof
that it understands who you are.

10
00:00:41.260 --> 00:00:45.060
So next we're going to install a tool
that might be new to some of you,

11
00:00:45.060 --> 00:00:46.860
this is called volta.

12
00:00:46.860 --> 00:00:49.920
And if you click this link,
it'll take you to the volta homepage,

13
00:00:49.920 --> 00:00:53.730
the install process
just is basically this.

14
00:00:53.730 --> 00:00:56.420
This first step you can do
the second one if you like, but

15
00:00:56.420 --> 00:00:58.830
this first step is the important one.

16
00:00:58.830 --> 00:01:03.170
What this tool is designed to do is
ensure that as you're working in

17
00:01:03.170 --> 00:01:07.900
the project we're focusing on today,
you get the right version of node and

18
00:01:07.900 --> 00:01:09.430
the right version of yarn.

19
00:01:09.430 --> 00:01:12.200
And if you do not have
those correct versions,

20
00:01:12.200 --> 00:01:15.010
volta will download them on the fly for
you.

21
00:01:15.010 --> 00:01:18.740
You don't have to tell it to do anything,
it just does it by themselves by itself.

22
00:01:18.740 --> 00:01:23.440
Now after you install this, you have to
make sure you look at the terminal output.

23
00:01:23.440 --> 00:01:28.410
It will likely tell you that you have to
close your terminal and open up a new one.

24
00:01:28.410 --> 00:01:32.480
This is because of changes some add
something to your bash profile using

25
00:01:32.480 --> 00:01:33.590
sh RC.

26
00:01:33.590 --> 00:01:38.600
And that has to be run
which happens when you open

27
00:01:38.600 --> 00:01:43.750
a new terminal and in order for
it to take effect this needs to happen.

28
00:01:45.430 --> 00:01:49.450
So you've installed volta also, I

29
00:01:49.450 --> 00:01:53.640
think a lot of you probably are using this
but just to make this super clear, visual

30
00:01:53.640 --> 00:01:58.900
studio code is by far the best TypeScript
authoring experience available today.

31
00:01:58.900 --> 00:02:02.660
I strongly recommend that
you use Visual Studio code,

32
00:02:02.660 --> 00:02:07.220
it is possible to get the TypeScript
language server working in other places.

33
00:02:07.220 --> 00:02:13.590
But there are certain things that only VS
code does today, that's not to say that it

34
00:02:13.590 --> 00:02:20.060
has some proprietary thing where Microsoft
only allows VS code to do certain things.

35
00:02:20.060 --> 00:02:23.820
It's more that VS code
is the bleeding edge and

36
00:02:23.820 --> 00:02:28.050
other editors have not
implemented certain things yet.

37
00:02:28.050 --> 00:02:32.570
So make sure we're using VS code today
you're going to clone this repository,

38
00:02:32.570 --> 00:02:36.250
you're going to enter the folder, and

39
00:02:36.250 --> 00:02:39.660
then you're just going to run
yarn to install dependencies.

40
00:02:39.660 --> 00:02:43.077
So I'm going to go through
that process right now just so

41
00:02:43.077 --> 00:02:45.193
we can see that everything works.

42
00:02:49.607 --> 00:02:51.651
So I'm going to clone the repo.

43
00:02:57.901 --> 00:03:01.851
I'm gonna enter the directory,
and then I'm just gonna run yarn.

44
00:03:04.632 --> 00:03:10.845
This is gonna go get all my
dependencies bunch of babble stuff and

45
00:03:10.845 --> 00:03:17.150
then when once this is all done,
we're going to run yarn dev.

46
00:03:17.150 --> 00:03:23.520
And that will start up the development
web server where as we change files

47
00:03:23.520 --> 00:03:29.580
in the source folder this will pick
up on those changes, rebuild the app.

48
00:03:29.580 --> 00:03:34.220
And we'll get that nice,
nice responsive development environment,

49
00:03:36.760 --> 00:03:40.990
all right, there we go, so
now I can just run yarn, Dev.

50
00:03:42.480 --> 00:03:46.510
And you should see some activity, like for

51
00:03:46.510 --> 00:03:49.500
building index HTML and
some JavaScript files.

52
00:03:49.500 --> 00:03:53.160
We're starting out with pure
JavaScript in this project, eventually,

53
00:03:53.160 --> 00:03:56.520
it's going to say,
I'm serving this app on localhost 1234.

54
00:03:56.520 --> 00:04:04.207
So what we're looking at here
if I open up this code base.

55
00:04:08.424 --> 00:04:11.979
So we have a bunch of different folders
here and I want to draw your attention to

56
00:04:11.979 --> 00:04:15.560
the things we're paying attention
we're mostly focused on today.

57
00:04:15.560 --> 00:04:20.180
So first off in the notes
folder we have for

58
00:04:20.180 --> 00:04:24.700
each of the major topics we're hitting
today, we have a dedicated markdown file.

59
00:04:24.700 --> 00:04:26.700
So, for example,

60
00:04:26.700 --> 00:04:31.940
converting JavaScript to TypeScript,
we have a lot of different notes here.

61
00:04:31.940 --> 00:04:36.890
This is to help you Easily copy and
paste things, so you do not have to worry

62
00:04:36.890 --> 00:04:40.700
quite so much about looking at every,
every piece of code I write.

63
00:04:40.700 --> 00:04:44.160
There is something there that
that you can easily consult and

64
00:04:44.160 --> 00:04:46.490
paste right into your, your local code.

65
00:04:48.260 --> 00:04:51.600
This source folder is where we're
going to spend most of our time, so

66
00:04:51.600 --> 00:04:54.661
this is the client side of the app
that we're looking at today.

67
00:04:56.769 --> 00:04:58.440
Within the source folder,

68
00:04:58.440 --> 00:05:02.730
we have sort of a data layer,
just like how we make our API calls.

69
00:05:02.730 --> 00:05:07.030
We have a folder called UI and
this contains some react components.

70
00:05:07.030 --> 00:05:09.660
We have utilities,
which is just low level,

71
00:05:09.660 --> 00:05:12.230
like there's a date
formatting function in there.

72
00:05:12.230 --> 00:05:15.180
And then finally,
index JS is the entry point for

73
00:05:15.180 --> 00:05:18.150
the application,
that's really all that's going on here.

74
00:05:18.150 --> 00:05:22.310
And the only thing I want to also draw
attention to is this DB dot JSON file.

75
00:05:22.310 --> 00:05:27.830
This is all the data that's driving your
application, so as you fetch records,

76
00:05:27.830 --> 00:05:32.550
you'll see some of this data
here appearing in API responses.

77
00:05:32.550 --> 00:05:36.470
And this is where it's coming from and in
fact, if we get to making a POST request

78
00:05:36.470 --> 00:05:39.130
and creating new data that
should appear here as well.

79
00:05:40.360 --> 00:05:45.291
One last thing to draw your attention
to is this API examples folder so

80
00:05:45.291 --> 00:05:49.723
if you have something,
a VS code extension called REST client

81
00:05:52.197 --> 00:05:58.879
And it's this one right here, right,
the one with 1.1 million downloads,

82
00:05:58.879 --> 00:06:02.680
so it's The most popular restclient thing.

83
00:06:03.860 --> 00:06:09.260
You get these little things,
this little annotations on top of these

84
00:06:09.260 --> 00:06:13.980
lines of text in this text file and you
can actually forget rid of that sidebar.

85
00:06:13.980 --> 00:06:18.720
If I click Send request,
we can see that we get an API response,

86
00:06:18.720 --> 00:06:22.430
so it's a little guide to
using the API that works.

87
00:06:22.430 --> 00:06:24.180
So long as you were running yarn Dev and

88
00:06:24.180 --> 00:06:28.280
the API is running,
you should get real HTTP responses.

89
00:06:28.280 --> 00:06:31.780
And this will be useful in terms of
helping us understand how this API works.

