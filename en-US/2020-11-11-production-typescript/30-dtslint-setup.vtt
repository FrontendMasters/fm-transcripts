WEBVTT

1
00:00:00.370 --> 00:00:01.650
Let's set up these tools.

2
00:00:01.650 --> 00:00:06.020
The first one is called Dtslint.

3
00:00:06.020 --> 00:00:10.060
And I'm introducing it first not because
it's best, but it's the oldest and

4
00:00:10.060 --> 00:00:11.120
the most established one.

5
00:00:11.120 --> 00:00:14.670
It also happens to be the one
that definitely-typed uses.

6
00:00:14.670 --> 00:00:20.170
So if you're at all involved with
fixes to ambient type information,

7
00:00:20.170 --> 00:00:23.560
you will find yourself
needing to work with Dtslint.

8
00:00:23.560 --> 00:00:25.110
It's already installed in the project.

9
00:00:25.110 --> 00:00:30.110
So what we need to do here is
look at the README very carefully

10
00:00:30.110 --> 00:00:34.413
because the setup process
is slightly elaborate.

11
00:00:34.413 --> 00:00:39.149
And if you like,
this is a good kinda of thing to just

12
00:00:39.149 --> 00:00:44.106
watch me do if you feel like
learning from me is a little

13
00:00:44.106 --> 00:00:49.315
bit more important than
following directly yourself.

14
00:00:49.315 --> 00:00:53.275
So you wanna read this
README very carefully.

15
00:00:53.275 --> 00:00:57.945
Because this tool is not strictly designed
for exactly what we're using it for, but

16
00:00:57.945 --> 00:00:58.748
it will work.

17
00:00:58.748 --> 00:01:07.444
I'm gonna create a folder in my
test folder called types-pts.lint.

18
00:01:07.444 --> 00:01:14.892
And inside this folder,
I'm gonna create three things,

19
00:01:14.892 --> 00:01:20.677
index.dts, tsconfig, and a tslint file.

20
00:01:20.677 --> 00:01:25.526
We haven't talked about tslint
because it's deprecated.

21
00:01:25.526 --> 00:01:29.618
Used to be sort of the best in
class linter for TypeScript.

22
00:01:29.618 --> 00:01:33.274
But like some of the documentation
tools I mentioned,

23
00:01:33.274 --> 00:01:37.110
it is very tightly coupled
with the compiler API.

24
00:01:37.110 --> 00:01:41.550
So it always tended to lag
behind new compiler releases and

25
00:01:41.550 --> 00:01:48.340
just the upkeep required to
keep it working was very high.

26
00:01:48.340 --> 00:01:52.300
It's one of these things where we stand
on the shoulders of everything that came

27
00:01:52.300 --> 00:01:53.520
before us.

28
00:01:53.520 --> 00:01:56.770
And so it didn't do anything bad.

29
00:01:59.350 --> 00:02:01.657
It's expensive to keep working on it.

30
00:02:01.657 --> 00:02:06.233
So Dtslint announced that they're
voluntarily deprecating their project and

31
00:02:06.233 --> 00:02:10.192
they're channeling their efforts
into the ESLint stuff that we have

32
00:02:10.192 --> 00:02:11.776
already been using today.

33
00:02:14.007 --> 00:02:20.509
The testing tool we're using
is built on top of TSLint and

34
00:02:20.509 --> 00:02:26.606
it is a project maintained
by Microsoft and is used for

35
00:02:26.606 --> 00:02:32.717
the Microsoft-owned
definitely-typed project.

36
00:02:32.717 --> 00:02:36.920
So I am pretty confident in its stability,

37
00:02:36.920 --> 00:02:44.406
given that it needs to keep working or
the ecosystem will have big problems.

38
00:02:44.406 --> 00:02:49.159
So I'm just copying this TSLint JSON and
I'm gonna copy this tsconfig.

39
00:02:54.152 --> 00:02:57.311
All right,
now a couple things to look at here.

40
00:02:57.311 --> 00:03:01.232
In this tsconfig,
we have a paths property.

41
00:03:01.232 --> 00:03:06.738
So this is designed to allow you to
refer to this project that you're

42
00:03:06.738 --> 00:03:11.971
testing in the natural way that
it would be referred to by users.

43
00:03:11.971 --> 00:03:16.498
So you're importing from your disk folder,
not from the source folder.

44
00:03:16.498 --> 00:03:22.489
So in this case, what we're gonna need

45
00:03:22.489 --> 00:03:28.078
to do is, A couple things.

46
00:03:28.078 --> 00:03:33.267
So first,
we need to generate type information

47
00:03:33.267 --> 00:03:38.196
because our dist folder
doesn't contain any

48
00:03:38.196 --> 00:03:42.749
declaration files at this point in time.

49
00:03:45.569 --> 00:03:49.696
In fact, I will save us the trouble
of having to work with that.

50
00:03:49.696 --> 00:03:52.287
We can write types for some tests.

51
00:03:58.097 --> 00:04:00.951
I'll just wire us up one
little declaration file here.

52
00:04:00.951 --> 00:04:06.070
I'm just trying not to spend
an excessive amount of time on this,

53
00:04:06.070 --> 00:04:10.560
cuz you can just look at
a working setup and kinda copy it.

54
00:04:10.560 --> 00:04:13.362
I do want you to understand
what's going on here.

55
00:04:13.362 --> 00:04:19.493
So we're gonna need another tsconfig here.

56
00:04:22.438 --> 00:04:26.589
So let's try this, tsc,

57
00:04:26.589 --> 00:04:30.563
outDir is dist-types.

58
00:04:34.541 --> 00:04:40.633
Declaration, I think it's this one,
declaration only.

59
00:04:52.744 --> 00:04:53.836
Hopefully this worked.

60
00:05:02.983 --> 00:05:04.590
Now we'll just do another config file.

61
00:05:04.590 --> 00:05:08.867
That way you don't have to
copy down a special command.

62
00:05:14.217 --> 00:05:15.964
All right, so like our ESLint 1,

63
00:05:15.964 --> 00:05:18.810
I'm just gonna use that as
the starting point, right?

64
00:05:18.810 --> 00:05:22.080
Cuz I wanna refer to
the existing tsconfig.

65
00:05:23.140 --> 00:05:25.340
We don't need this type thing,
we don't need allow.js,

66
00:05:25.340 --> 00:05:31.540
what we do need is outDir to be
dist-types, just a brand new folder.

67
00:05:31.540 --> 00:05:34.410
We want declarations, true.

68
00:05:36.630 --> 00:05:38.590
emitDeclarationOnly, true.

69
00:05:38.590 --> 00:05:40.267
That's the one I was trying to remember.

70
00:05:40.267 --> 00:05:43.239
And we'll just worry
about this source folder.

71
00:05:47.457 --> 00:05:51.986
So we can do TSC P for project.

72
00:05:56.553 --> 00:05:57.482
And let's see how this works.

73
00:05:57.482 --> 00:06:04.171
And we still have all this trace
resolution metadata down there.

74
00:06:04.171 --> 00:06:05.886
We have one error.

75
00:06:10.330 --> 00:06:13.024
NoEmit is turned on.

76
00:06:13.024 --> 00:06:13.852
So we'll turn it off.

77
00:06:13.852 --> 00:06:18.070
So we actually emit, and while I'm here,

78
00:06:18.070 --> 00:06:22.642
I'm just gonna turn that
trace resolution off

79
00:06:22.642 --> 00:06:27.345
since it's just muddying
the terminal there.

80
00:06:32.747 --> 00:06:33.558
Did I save this?

81
00:06:38.126 --> 00:06:39.535
NoEmit is false.

82
00:06:55.764 --> 00:06:57.978
All right,
must have just forgotten to save it.

83
00:06:57.978 --> 00:07:00.868
So what we should have here
is a disk-types folder and

84
00:07:00.868 --> 00:07:04.168
it only contains declaration files.

85
00:07:04.168 --> 00:07:05.148
So this is great.

86
00:07:05.148 --> 00:07:06.278
This is just what we want.

