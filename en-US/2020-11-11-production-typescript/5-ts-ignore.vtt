WEBVTT

1
00:00:00.008 --> 00:00:09.051
So, TypeScript 3.9 gave us this,
@ts-expect-error.

2
00:00:09.051 --> 00:00:12.465
This is closely related to @ts-ignore.

3
00:00:12.465 --> 00:00:15.583
So if I had something like this,

4
00:00:26.475 --> 00:00:30.738
Both of these would effectively suppress
the error that we should be seeing

5
00:00:30.738 --> 00:00:31.625
here, right?

6
00:00:31.625 --> 00:00:35.398
So if I get rid of my @ts-ignore
I'm gonna get yelled at,

7
00:00:35.398 --> 00:00:37.554
because a string is not a number.

8
00:00:37.554 --> 00:00:41.007
And same goes for this, right?

9
00:00:41.007 --> 00:00:42.436
I'm gonna get yelled at here.

10
00:00:42.436 --> 00:00:47.615
You can think of @ts-expect-error,
like I think of it as,

11
00:00:47.615 --> 00:00:54.204
in almost every place, a better option
than @ts-ignore, and here's why.

12
00:00:56.575 --> 00:00:59.562
And let me make these different so
we don't,

13
00:00:59.562 --> 00:01:03.736
we eliminate this re-declaration
aspect of things, right?

14
00:01:03.736 --> 00:01:07.276
So they're independent now, but
if I were to select both of these and

15
00:01:07.276 --> 00:01:11.793
change it to the number 5, we can see that
@ts-expect-error is now unhappy with me,

16
00:01:11.793 --> 00:01:13.031
@ts-ignore is fine.

17
00:01:13.031 --> 00:01:14.370
And here's why.

18
00:01:16.079 --> 00:01:18.233
It's an unused directive, I'm told.

19
00:01:18.233 --> 00:01:23.315
And what that means is I said,
this should error,

20
00:01:23.315 --> 00:01:26.583
and I want to ignore that error.

21
00:01:26.583 --> 00:01:31.265
@ts-ignore it is more like saying,
if any kind of error happens here or

22
00:01:31.265 --> 00:01:33.820
maybe it doesn't, then ignore that.

23
00:01:33.820 --> 00:01:40.026
So this brings to my attention if
this bypass is no longer necessary,

24
00:01:40.026 --> 00:01:46.876
and that could very well be an indication
in my code that something is wrong.

25
00:01:46.876 --> 00:01:49.790
Like if I add a @ts-ignore,
there's a reason for it, and

26
00:01:49.790 --> 00:01:52.238
I want to be alerted if
it's no longer necessary,

27
00:01:52.238 --> 00:01:55.533
because that could mean that
there's some other change, right?

28
00:01:55.533 --> 00:01:57.233
Let's say that this happened.

29
00:01:57.233 --> 00:01:58.977
What if we did this?

30
00:01:58.977 --> 00:02:00.357
Let me go back here, and

31
00:02:00.357 --> 00:02:05.256
let's say that we're not dealing with
number we're dealing with some other type.

32
00:02:05.256 --> 00:02:10.289
And we went from, Let's

33
00:02:10.289 --> 00:02:15.952
pretend that this is in another file,
Right?

34
00:02:15.952 --> 00:02:18.500
Well, let me change it.

35
00:02:18.500 --> 00:02:20.314
Guess I'm using food too many times.

36
00:02:20.314 --> 00:02:21.894
There we go.

37
00:02:21.894 --> 00:02:25.789
So let's say that this is in another file
and I change it from a food to an any.

38
00:02:25.789 --> 00:02:27.984
Well, that's a problem.

39
00:02:27.984 --> 00:02:31.045
I might have just like lost
some type information.

40
00:02:31.045 --> 00:02:36.808
Maybe there's somewhere somebody has
done this, like number and any, right?

41
00:02:36.808 --> 00:02:40.835
And when you, and
when you say anything that is a number or

42
00:02:40.835 --> 00:02:45.883
also anything else, it could be anything
else in addition to being a number.

43
00:02:45.883 --> 00:02:47.567
Well, that's just anything, right?

44
00:02:47.567 --> 00:02:50.873
So I've effectively made bar and any.

45
00:02:50.873 --> 00:02:52.384
That's a bug.

46
00:02:52.384 --> 00:02:58.394
This type should not be so permissive,
and now it is brought to my attention.

47
00:02:58.394 --> 00:03:03.030
So I like places where,
when I am saying I want to surgically

48
00:03:03.030 --> 00:03:07.964
bypass type checking here,
maybe it's a negative test case.

49
00:03:07.964 --> 00:03:09.972
It's something that shouldn't work.

50
00:03:09.972 --> 00:03:12.114
It had better not work.

51
00:03:12.114 --> 00:03:14.637
If it works, there's a problem.

52
00:03:14.637 --> 00:03:16.559
Well, now I have an assertion.

53
00:03:16.559 --> 00:03:21.338
Now I have a mechanism for being made
aware of this, whereas @ts-ignore,

54
00:03:21.338 --> 00:03:23.216
it doesn't give me any sign.

55
00:03:23.216 --> 00:03:27.232
I basically just turned TypeScript
off there, instead of saying,

56
00:03:27.232 --> 00:03:30.340
there should be an error here and
ignore that error.

57
00:03:30.340 --> 00:03:34.860
So I use @ts-expect-error
almost every place that I

58
00:03:34.860 --> 00:03:38.011
would have been using @ts-ignore.

59
00:03:38.011 --> 00:03:39.850
It's a bigger deal than it may seem.

