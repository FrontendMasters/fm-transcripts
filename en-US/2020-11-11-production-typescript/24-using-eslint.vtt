WEBVTT

1
00:00:00.282 --> 00:00:03.220
Okay, now we can proceed
straight to linting.

2
00:00:03.220 --> 00:00:06.797
And that is going to be in our eslint RC.

3
00:00:08.880 --> 00:00:10.870
This is where we're going to we're

4
00:00:12.720 --> 00:00:15.480
going to install the typescript
specific linting.

5
00:00:16.730 --> 00:00:20.059
So that's going to be yarn,

6
00:00:20.059 --> 00:00:25.420
add typescript-eslint recommended.

7
00:00:25.420 --> 00:00:26.090
Sorry.

8
00:00:32.696 --> 00:00:40.290
Two things, a typescript-eslint, it's
the GitHub org and the NPM package scope.

9
00:00:40.290 --> 00:00:42.500
You only have to remember one thing,
right?

10
00:00:42.500 --> 00:00:44.749
That is where all this stuff is located.

11
00:00:44.749 --> 00:00:48.095
And you're installing two things,
parser so

12
00:00:48.095 --> 00:00:52.814
that eslint can understand typescript and
the eslint plugin, so

13
00:00:52.814 --> 00:00:58.160
that it can provide you feedback about
your typescript, need them both.

14
00:01:04.694 --> 00:01:10.498
And now we can go in here and
let's see what our parser currently is.

15
00:01:10.498 --> 00:01:15.570
Okay, it looks like we may have
already had that which is fine because

16
00:01:15.570 --> 00:01:20.393
the typescript-eslint parser
can understand JavaScript too.

17
00:01:20.393 --> 00:01:28.636
And then we have to add this to
the extends section, add some other stuff.

18
00:01:28.636 --> 00:01:31.807
And I'm gonna explain what some of
the things that are already in here do.

19
00:01:34.814 --> 00:01:36.914
That is some great autocomplete there.

20
00:01:36.914 --> 00:01:42.005
I was not looking forward to typing that,
I'm gonna add 'both of these.

21
00:01:45.054 --> 00:01:47.634
No, don't rob me of that now.

22
00:01:51.948 --> 00:01:55.658
Yes, okay, so, if you don't remember,

23
00:01:55.658 --> 00:02:02.065
like these are exactly the ones that
we added to our small library before.

24
00:02:06.356 --> 00:02:09.363
The project here, just as before,

25
00:02:09.363 --> 00:02:15.230
we had a special eslint oriented
typescript config, right?

26
00:02:15.230 --> 00:02:19.570
This is something that looks at
both our tests and our source code.

27
00:02:19.570 --> 00:02:21.810
Same thing exists here.

28
00:02:21.810 --> 00:02:23.180
We already talked about that.

29
00:02:23.180 --> 00:02:25.160
I need to talk about that with you again.

30
00:02:25.160 --> 00:02:31.998
Because I think we have more
interesting things to focus on here.

31
00:02:31.998 --> 00:02:37.506
And, One

32
00:02:37.506 --> 00:02:44.006
thing that is new because prettier
is part of this setup here,

33
00:02:44.006 --> 00:02:50.506
one thing that is new is I have
prettier typescript-eslint.

34
00:02:50.506 --> 00:02:55.730
So the the eslint plugin for
prettier is important and

35
00:02:55.730 --> 00:03:03.740
you'll only realize how important it is if
you have a situation where prettier and

36
00:03:03.740 --> 00:03:07.823
eslint are fighting against each other.

37
00:03:07.823 --> 00:03:13.009
So imagine that one of those tools wants
to auto format your files one way and

38
00:03:13.009 --> 00:03:17.471
then eslint--fix wants to auto
format your file another way.

39
00:03:17.471 --> 00:03:20.905
Or you could have things where
like prettier does its thing and

40
00:03:20.905 --> 00:03:22.953
now eslint is unhappy and vice versa.

41
00:03:22.953 --> 00:03:27.334
So the whole point of this is
to have eslint back off around

42
00:03:27.334 --> 00:03:31.941
anything that is prettier's job And

43
00:03:31.941 --> 00:03:36.275
they have a special
typescript specific rule set,

44
00:03:36.275 --> 00:03:40.004
which can involve turning some things off,

45
00:03:40.004 --> 00:03:46.280
a rule set doesn't have to mean opting
into things it can mean opting out.

46
00:03:46.280 --> 00:03:48.380
So it's important to
have the right ones here.

47
00:03:48.380 --> 00:03:52.755
Consult the eslint plugin prettier

48
00:03:52.755 --> 00:03:56.940
README because it's a little
bit nuanced how to set this up

49
00:03:56.940 --> 00:04:02.050
even the ordering of these things
in this list is important.

50
00:04:02.050 --> 00:04:07.090
So save yourself some time and
take a look at that

51
00:04:07.090 --> 00:04:13.139
README because it is more
nuanced than one might expect.

52
00:04:13.139 --> 00:04:15.920
I kind of want to see how
things run right now.

53
00:04:17.570 --> 00:04:20.090
Let's see if we're ready to go.

54
00:04:20.090 --> 00:04:24.988
So you can see where we're running
our lint across many folders here and

55
00:04:24.988 --> 00:04:28.181
we got a bunch of warnings
We have some errors.

56
00:04:28.181 --> 00:04:30.430
Where are those errors happening?

57
00:04:30.430 --> 00:04:32.360
They're happening in my server.

58
00:04:33.800 --> 00:04:36.674
Unsafe assignment, no var requires.

59
00:04:39.749 --> 00:04:45.194
So what I can do here, and where all that
is happening it's in the little JSON

60
00:04:45.194 --> 00:04:51.340
server stuff that's happening here it's
not typescript, it's just JavaScript.

61
00:04:51.340 --> 00:04:53.609
But that's what overrides are for, right?

62
00:04:53.609 --> 00:04:58.056
We can pass one or
more objects into this overrides option.

63
00:04:58.056 --> 00:05:04.982
And we can enable or
disable certain rules based on that.

64
00:05:04.982 --> 00:05:08.533
So here I can say rules,

65
00:05:08.533 --> 00:05:14.401
this one disabled, I think it's off.

66
00:05:14.401 --> 00:05:18.248
And then unsafe member access,
unsafe assignment,

67
00:05:18.248 --> 00:05:21.927
like I just don't want to
get too sucked into that.

68
00:05:21.927 --> 00:05:24.100
Cuz we really haven't touched that code.

69
00:05:30.928 --> 00:05:33.765
Let's just disable as
many of these as we can.

70
00:05:36.084 --> 00:05:38.310
Comma, paste off.

71
00:05:40.470 --> 00:05:42.900
All right, let's see where we stand.

72
00:05:42.900 --> 00:05:46.700
So we had 48 problems, 39 errors.

73
00:05:46.700 --> 00:05:49.290
Let's see if we've dramatically
improved our situation.

74
00:05:49.290 --> 00:05:50.444
Oops, I see a mistake.

75
00:05:58.135 --> 00:06:01.106
I'm just running it again because I
corrected at a leading space here

76
00:06:01.106 --> 00:06:03.420
that would have possibly
screwed things up.

77
00:06:03.420 --> 00:06:04.840
All right, we're down to eight errors.

78
00:06:04.840 --> 00:06:08.030
Let's see if there's just more
stuff we need to disable for

79
00:06:08.030 --> 00:06:10.530
the server area it looks like it.

80
00:06:10.530 --> 00:06:15.057
So no var requires,
that looks like another one.

81
00:06:21.827 --> 00:06:22.739
Oops.

82
00:06:27.512 --> 00:06:29.000
We need a comma.

83
00:06:32.254 --> 00:06:36.240
And it looks like, there's unbound method.

84
00:06:36.240 --> 00:06:39.700
So normally like I would want to
take a swing at some of these but.

85
00:06:40.880 --> 00:06:44.550
Again, I'm resisting the temptation
to sort of pile too much into one

86
00:06:45.930 --> 00:06:48.790
poll request,
what would be a pull request.

87
00:06:52.440 --> 00:06:54.160
One more error.

88
00:06:54.160 --> 00:06:55.030
What's going on here?

89
00:06:56.610 --> 00:07:01.373
No unsafe return again in the server

90
00:07:01.373 --> 00:07:06.577
thing, Several folder.

91
00:07:19.142 --> 00:07:26.823
Still one error, this is probably because
fixing one error resolved another, no,

92
00:07:26.823 --> 00:07:33.890
it's because I misspelled this typescript
and I expect we'll get a pass here.

93
00:07:38.692 --> 00:07:41.258
Awesome.

94
00:07:47.286 --> 00:07:52.407
Okay, so now we're at a point where we

95
00:07:52.407 --> 00:07:57.858
got some typescript specific linting.

96
00:07:57.858 --> 00:08:02.702
We have a nice a reasonably
strict compiler setting.

97
00:08:02.702 --> 00:08:05.380
We still have a lot of explicit entities.

98
00:08:05.380 --> 00:08:08.809
And so now even with the eslint,

99
00:08:08.809 --> 00:08:14.951
you could say, You did this,

100
00:08:27.150 --> 00:08:30.450
And now it's really going to light up.

101
00:08:30.450 --> 00:08:35.245
This is your incremental stuff where you
go and you sorta chip away at the explicit

102
00:08:35.245 --> 00:08:40.190
entities that are sorta littered
throughout this app at this point.

103
00:08:40.190 --> 00:08:42.230
No, it would show up with the linting job.

104
00:08:42.230 --> 00:08:45.400
I found out that I made
a really silly mistake here.

105
00:08:45.400 --> 00:08:49.110
I was up here trying to figure out why

106
00:08:50.600 --> 00:08:54.991
I was unable to turn on
this no-explicit-any rule.

107
00:08:56.060 --> 00:08:58.900
And it turns out again,

108
00:08:58.900 --> 00:09:04.060
like it's from my experience,
I am likely to have made a mistake here.

109
00:09:04.060 --> 00:09:08.670
So I just looked elsewhere to see
if in this file, I don't know, turn

110
00:09:08.670 --> 00:09:13.940
this rule off for all typescript files,
it turns out, that's exactly what I did.

111
00:09:13.940 --> 00:09:17.580
So if I just simply, delete that actually,

112
00:09:17.580 --> 00:09:21.940
it's better if I delete this thing up here
because this is a rule that applies across

113
00:09:21.940 --> 00:09:27.140
my whole codebase and I really just
want it to apply to TypeScript files.

114
00:09:27.140 --> 00:09:29.629
And that's this section here, right?

115
00:09:29.629 --> 00:09:34.830
Everything in my source and
tests folder with the TS or TSX extension.

116
00:09:34.830 --> 00:09:38.920
So here I can turn this back on,
if you really like error.

117
00:09:41.230 --> 00:09:46.523
And let's see if I can run this now it
should show a bunch more errors and

118
00:09:46.523 --> 00:09:51.576
I just want to show that it will
surface them and then we can move on.

119
00:09:51.576 --> 00:09:55.571
I'm not gonna make you
watch me play whack a mole.

120
00:09:57.830 --> 00:10:00.518
What if we just disable
like just remove these?

121
00:10:08.471 --> 00:10:11.960
And it's not TSC of course it's
eslint that we're trying to run.

122
00:10:16.134 --> 00:10:20.767
This is why it's even more
important to keep separate,

123
00:10:20.767 --> 00:10:25.218
to know what role each element
of your tool chain has.

124
00:10:25.218 --> 00:10:30.469
Because it's very easy to get confused
about what is TSC validating,

125
00:10:30.469 --> 00:10:35.367
what's typescript validating,
what's eslint checking for.

126
00:10:35.367 --> 00:10:36.564
Everything kind of gets mixed up.

127
00:10:36.564 --> 00:10:38.394
So now, of course,

128
00:10:38.394 --> 00:10:43.889
now that I am not contradicting
myself in my own config file,

129
00:10:43.889 --> 00:10:48.955
here we've got a bunch of
different things like invalid

130
00:10:48.955 --> 00:10:53.727
type any of a template literal expression,
right?

131
00:10:53.727 --> 00:10:57.010
Unexpected type any,
specify a different type.

132
00:10:57.010 --> 00:11:01.470
So now we can see this is where one by
one we could peel off those rules and

133
00:11:01.470 --> 00:11:03.810
sort of ratchet up our safety as we go.

134
00:11:03.810 --> 00:11:08.802
I'm going to leave them disabled,
but I just wanted you to see

135
00:11:08.802 --> 00:11:13.602
that it does in fact work and
I'll leave this off actually,

136
00:11:13.602 --> 00:11:18.709
it does, in fact, work and
the only problem I ran into there was

137
00:11:20.423 --> 00:11:25.796
That the file was getting complicated and
I had a rule, globally enabled,

138
00:11:25.796 --> 00:11:31.730
and then disabled for an override
the pointer to all of my typescript.

139
00:11:31.730 --> 00:11:34.520
So I turned it on and then off.

