WEBVTT

1
00:00:00.075 --> 00:00:04.490
And I realized that,
we forgot to add some CSS for

2
00:00:04.490 --> 00:00:08.428
our dome screen, so
let's just go back into game.svelte.

3
00:00:08.428 --> 00:00:13.679
&gt;&gt; Also there's APU lock,
even though you had 1 out of 3.

4
00:00:13.679 --> 00:00:15.490
&gt;&gt; Yeah, that's a very good point.

5
00:00:15.490 --> 00:00:19.130
I must have messed up
some logics somewhere.

6
00:00:19.130 --> 00:00:24.573
So, Mark just pointed out that, [LAUGH]
the pick message function, is giving me

7
00:00:24.573 --> 00:00:30.361
a slightly more encouraging message than
I deserved with that dismal performance.

8
00:00:33.255 --> 00:00:36.153
And it's not totally clear
to me why that happened

9
00:00:36.153 --> 00:00:39.139
[CROSSTALK]
&gt;&gt; [CROSSTALK] Return the results of your

10
00:00:39.139 --> 00:00:39.905
pick item.

11
00:00:42.773 --> 00:00:43.733
&gt;&gt; Yes.

12
00:00:46.661 --> 00:00:51.614
This is why you don't
live code without people

13
00:00:51.614 --> 00:00:56.823
who have better attention
to detail than you do.

14
00:00:56.823 --> 00:01:01.243
Okay, let's get our CSS in there.

15
00:01:01.243 --> 00:01:03.080
Let's go back down to the CSS block.

16
00:01:04.710 --> 00:01:06.930
And this component started to get
a little bit large, at this point,

17
00:01:06.930 --> 00:01:09.790
I will probably factor out
into multiple components.

18
00:01:09.790 --> 00:01:11.100
But just for the sake of simplicity,

19
00:01:11.100 --> 00:01:15.060
I'm just gonna keep everything in here for
now.

20
00:01:15.060 --> 00:01:19.995
So, dome is gonna have position absolute,
width 100%,

21
00:01:22.573 --> 00:01:26.962
Height, 100%, left, 0, top, 0,

22
00:01:26.962 --> 00:01:32.302
display flex, so
that we can get everything nicely,

23
00:01:32.302 --> 00:01:36.468
vertically and horizontally centered.

24
00:01:36.468 --> 00:01:43.165
Flex direction, column, justify content,

25
00:01:43.165 --> 00:01:47.810
center, and some more styles.

26
00:01:47.810 --> 00:01:52.148
Inside the dome,
we're gonna have a strong tag,

27
00:01:52.148 --> 00:01:58.570
which is gonna contain the actual score,
the one that'd be nice and big.

28
00:01:58.570 --> 00:02:02.413
So we're gonna give that
a font size of 6ems and

29
00:02:02.413 --> 00:02:05.883
we're gonna make it nice and bold as well.

30
00:02:05.883 --> 00:02:07.275
Font weight 700.

31
00:02:11.308 --> 00:02:17.076
Okay, there's just one little piece of
UI that we're missing, which is this.

32
00:02:17.076 --> 00:02:22.505
When you click on a celebrity's face,
you wanna see what that price is,

33
00:02:22.505 --> 00:02:27.400
so that you can see how big the gap
between the two celebrities is.

34
00:02:27.400 --> 00:02:33.134
So we're gonna add some more
stuff to our core component.

35
00:02:33.134 --> 00:02:36.008
We're gonna explore a couple more props.

36
00:02:38.360 --> 00:02:44.810
We're gonna explore, prop called
Show Price, and one called Winner.

37
00:02:44.810 --> 00:02:50.140
So, when show price is true, we're
gonna show the price logically enough.

38
00:02:50.140 --> 00:02:54.400
I'm gonna add that below
our details element.

39
00:02:55.610 --> 00:03:03.503
If show price, Div class= price.

40
00:03:03.503 --> 00:03:08.039
And we're gonna use the class Directive,

41
00:03:08.039 --> 00:03:13.082
to apply the large class
if they are the winner.

42
00:03:16.443 --> 00:03:20.577
You see this sort of thing all the time
where you have some boolean value, and

43
00:03:20.577 --> 00:03:22.851
you wanna toggle the class based on that.

44
00:03:22.851 --> 00:03:28.796
And inside that element,
we'll have the the value itself $ and

45
00:03:28.796 --> 00:03:31.667
then the celebrity's price.

46
00:03:34.560 --> 00:03:38.247
And we're gonna chuck some CSS in there.

47
00:03:42.794 --> 00:03:48.100
Position, absolute,
because we wanted to fill the the button,

48
00:03:48.100 --> 00:03:51.094
width 100%, height 100%.

49
00:03:51.094 --> 00:03:55.652
I should probably create a class to this,
because I've done this a few times,

50
00:03:55.652 --> 00:03:58.498
this is width height,
left top, combination.

51
00:03:58.498 --> 00:04:06.617
We're gonna give it
a slightly dark background,

52
00:04:06.617 --> 00:04:12.000
with RGBA, make it white.

53
00:04:12.000 --> 00:04:17.654
Use Display Flex for the vertical and
horizontal alignment, centering, rather.

54
00:04:20.132 --> 00:04:24.970
Justify content, center.

55
00:04:24.970 --> 00:04:29.940
Font size, 4ems,
font weights 700 nice and bold,

56
00:04:29.940 --> 00:04:34.275
and then for the Winner,
with that large class,

57
00:04:34.275 --> 00:04:38.629
is gonna make the font
size attach bigger 6ems.

58
00:04:41.073 --> 00:04:45.345
All right,
hopefully now when we go through around,

59
00:04:48.838 --> 00:04:52.980
I forgot to pass the props
through to the core components.

60
00:04:52.980 --> 00:04:57.116
So let's go back to game.svelte,
correct style,

61
00:04:57.116 --> 00:05:01.534
I don't need it, here, okay,
so this component, and

62
00:05:01.534 --> 00:05:06.899
this component, we wanna show
the price when we have a last result.

63
00:05:06.899 --> 00:05:11.579
So showprice=,
there's no underscore there, equals,

64
00:05:11.579 --> 00:05:16.361
I'm gonna coerce it to a boolean,
doesn't really matter.

65
00:05:16.361 --> 00:05:20.820
But, I just like to show that
it's supposed to be a boolean.

66
00:05:22.500 --> 00:05:28.300
And they are the winner if
a's price is greater than or

67
00:05:28.300 --> 00:05:33.917
equal to, because if they have the same
price then they're both winner.

68
00:05:33.917 --> 00:05:38.767
b.price and
then the reverse on the other one,

69
00:05:38.767 --> 00:05:41.684
b, a swap those positions.

70
00:05:45.278 --> 00:05:46.116
Okay.

71
00:05:49.625 --> 00:05:55.550
Okay, so now we can see the,
that was close, 67 versus 65.

72
00:05:55.550 --> 00:05:59.220
Now we can see the prices being displayed.

73
00:05:59.220 --> 00:06:02.731
These icons are really big, because I've
only got three rounds happening here.

74
00:06:02.731 --> 00:06:07.897
So let's just go back to select and
revert that to 10 rounds per game.

75
00:06:13.970 --> 00:06:18.210
All right,
we have a functionally complete game, and

76
00:06:18.210 --> 00:06:21.880
we're now at checkpoint 3 and
the get repo.

77
00:06:21.880 --> 00:06:23.910
So once again, if you've fallen behind,

78
00:06:23.910 --> 00:06:28.040
and you wanna catch up before
the final push to a complete game,

79
00:06:28.040 --> 00:06:32.905
then you can stash what you've worked on,
and then do get check out, checkpoint 3.

