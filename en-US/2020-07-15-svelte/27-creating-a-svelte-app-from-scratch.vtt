WEBVTT

1
00:00:00.420 --> 00:00:02.270
So we've been through the entire tutorial,
and

2
00:00:02.270 --> 00:00:06.630
now you understand how to build Svelte
applications, and what Svelte can do.

3
00:00:06.630 --> 00:00:10.010
And on the website, there is
an interactive repple that you can use to

4
00:00:10.010 --> 00:00:14.047
build applications and components of your
own, and you can do quite a lot in here.

5
00:00:14.047 --> 00:00:17.952
But ultimately at some point, you're gonna
wanna take the Svelte experience out of

6
00:00:17.952 --> 00:00:19.855
the repple and onto your local machine.

7
00:00:19.855 --> 00:00:25.291
And so this next section of the workshop
is gonna be about how to do exactly that,

8
00:00:25.291 --> 00:00:28.794
and I'm gonna show you how
to do this from scratch.

9
00:00:28.794 --> 00:00:32.107
Because that way,
you'll get the best possible understanding

10
00:00:32.107 --> 00:00:35.970
of how Svelte actually fits into your
existing development workflow, and

11
00:00:35.970 --> 00:00:39.220
then I'll show you an easy
way to do just that.

12
00:00:39.220 --> 00:00:40.613
So I'm gonna go over to my terminal.

13
00:00:44.300 --> 00:00:48.654
And I'm gonna create a new project,

14
00:00:48.654 --> 00:00:52.173
just bear with me one second.

15
00:01:02.163 --> 00:01:07.173
And then inside here, I'm just

16
00:01:07.173 --> 00:01:12.190
gonna make a source directory.

17
00:01:15.010 --> 00:01:18.034
And I'm gonna have these instructions
open on one half of the window while

18
00:01:18.034 --> 00:01:20.300
I'm doing this so
that you can see what's happening.

19
00:01:29.609 --> 00:01:34.605
Now for this project, we're gonna be
using Rollup to do our module bundling.

20
00:01:34.605 --> 00:01:37.730
Rollup is a piece of software that can
take multiple JavaScript files and

21
00:01:37.730 --> 00:01:42.430
combine them into a single file
suitable for serving to users.

22
00:01:42.430 --> 00:01:48.170
And this is what we use in the default
project template right now.

23
00:01:48.170 --> 00:01:51.270
We do also have an official web pack
loader and there's a bunch of community

24
00:01:51.270 --> 00:01:55.820
plugins for using things like Parcels,
Snowpack, Vite, and so on.

25
00:01:55.820 --> 00:01:59.720
And so it's possible that in future we'll
be using something like Snowpack or Vite.

26
00:01:59.720 --> 00:02:02.631
Which are essentially
beneficiaries of the fact

27
00:02:02.631 --> 00:02:05.400
that modules exist
natively in browsers now,

28
00:02:05.400 --> 00:02:09.860
and we don't necessarily need to be
bundling everything all the time.

29
00:02:09.860 --> 00:02:13.620
But for right now, we're gonna have to
bundle our application in order to use it.

30
00:02:13.620 --> 00:02:18.308
So we're gonna install Rollup by
typing in npm i which is short for

31
00:02:18.308 --> 00:02:21.730
install dash D which is short for
development.

32
00:02:23.987 --> 00:02:26.630
And then the word rollup.

33
00:02:26.630 --> 00:02:31.099
So that installed roll
up into our project, and

34
00:02:31.099 --> 00:02:35.580
then we're gonna create
a Rollup config file.

35
00:02:45.078 --> 00:02:47.406
It just looks like this, and

36
00:02:47.406 --> 00:02:54.000
this config file is gonna expect to
find a file called source/main.js.

37
00:02:54.000 --> 00:02:57.921
And it's gonna generate a file
called public/build/bundle.js,

38
00:02:57.921 --> 00:03:01.450
that's gonna be the file that
gets loaded in the application.

39
00:03:02.820 --> 00:03:08.772
So we need to create that
source/main.js entry point,

40
00:03:08.772 --> 00:03:13.980
I'm just gonna paste this command in here.

41
00:03:13.980 --> 00:03:17.140
And if you have this website open,
I encourage you to follow along.

42
00:03:17.140 --> 00:03:22.766
So we've created some source files, we've
got a main.js, which imports our hello.js,

43
00:03:22.766 --> 00:03:26.130
hello.js just exports
a function logs the word hello.

44
00:03:27.270 --> 00:03:30.479
And now if we run Rollup,
we can see what it does.

45
00:03:32.020 --> 00:03:36.037
It's gonna take that input file,
follow those inputs, and

46
00:03:36.037 --> 00:03:39.150
generate a public/build/bundle.js.

47
00:03:39.150 --> 00:03:43.521
And you can see that it's literally
just taking those two modules and

48
00:03:43.521 --> 00:03:44.960
smush them together.

49
00:03:44.960 --> 00:03:50.736
So now we just need to add an index.html
file to actually load that module,

50
00:03:50.736 --> 00:03:55.150
and I'm just gonna copy
everything over from this page.

51
00:03:56.582 --> 00:04:00.267
And then to serve this page,

52
00:04:00.267 --> 00:04:06.410
I'm gonna install
a dependency called serve,

53
00:04:06.410 --> 00:04:09.645
again, npm i -D serve.

54
00:04:09.645 --> 00:04:14.805
And once that's done,
I can say npx serve public,

55
00:04:14.805 --> 00:04:22.845
npx just allows you to use anything
that's installed locally in your project,

56
00:04:22.845 --> 00:04:28.380
and it is now serving that
page on localhost 5000.

57
00:04:28.380 --> 00:04:29.450
So go over there.

58
00:04:32.010 --> 00:04:35.068
Okay, and if we open the console,

59
00:04:35.068 --> 00:04:40.770
then we will see that it is indeed
logging the word hello, okay?

60
00:04:42.090 --> 00:04:43.070
So that's all well and good,

61
00:04:43.070 --> 00:04:47.715
like you now understand what Rollup does,
but we need to get Svelte in involved.

62
00:04:47.715 --> 00:04:51.910
And Rollup itself doesn't understand
what a cell component is or does, so

63
00:04:51.910 --> 00:04:56.180
we need to teach it,
we need to add a cell plugin for Rollup.

64
00:04:56.180 --> 00:04:59.870
We also need to add a plugin that
will teach Rollup how to find

65
00:04:59.870 --> 00:05:02.470
things inside your node modules folder.

66
00:05:02.470 --> 00:05:07.585
So we're gonna install
two things over here,

67
00:05:07.585 --> 00:05:13.095
we're gonna install
rollup-plugin-serve and

68
00:05:13.095 --> 00:05:17.170
rollup/plugin-mode-resolve.

69
00:05:23.510 --> 00:05:29.409
Right, and then we need to add those

70
00:05:29.409 --> 00:05:34.522
plugins to our roller config,

71
00:05:34.522 --> 00:05:39.046
I'm just gonna select this

72
00:05:39.046 --> 00:05:44.170
whole lot and just paste it in.

73
00:05:44.170 --> 00:05:49.199
And I spent a long time last
night trying to figure out how

74
00:05:49.199 --> 00:05:56.386
to make a diff highlighted code blog into
something that you can copy and paste.

75
00:05:56.386 --> 00:05:58.680
See if you can reverse and
engineer how it works.

76
00:06:00.520 --> 00:06:03.365
Okay, so now that we've done that,
now that we've added those plugins,

77
00:06:03.365 --> 00:06:04.550
we can add a Svelte component.

78
00:06:04.550 --> 00:06:09.128
I'm gonna create source/app.svelte and

79
00:06:09.128 --> 00:06:14.330
I'm gonna paste in some
basic content into that.

80
00:06:17.070 --> 00:06:22.080
And then we wanna import that component
into our main.js, and instantiate

81
00:06:22.080 --> 00:06:27.660
the component inside that, so I'm just
gonna replace everything with this.

82
00:06:29.290 --> 00:06:33.682
And this is the client side Svelte
component API, app is just a regular

83
00:06:33.682 --> 00:06:37.788
JavaScript class that you can
instantiate with the new keyword.

84
00:06:37.788 --> 00:06:42.140
And it takes a bunch of options, target
is the only option that is required,

85
00:06:42.140 --> 00:06:46.450
and the target in this case is
going to be the document body.

86
00:06:46.450 --> 00:06:50.625
And we can also pass
a bunch of props which if

87
00:06:50.625 --> 00:06:54.670
the app exports any props
which this one does,

88
00:06:54.670 --> 00:06:59.730
it exports this name prop,
we'll get initialized to these values.

89
00:07:02.156 --> 00:07:07.576
And the last thing that we need to do
is add a link to the new bundle.css

90
00:07:07.576 --> 00:07:12.170
that is being generated here
from this part of the plugin.

91
00:07:13.640 --> 00:07:19.085
We add that into our index

92
00:07:19.085 --> 00:07:22.850
file, and get rid of that text
because that's no longer relevant.

93
00:07:26.020 --> 00:07:30.443
And now if you've set everything
up correctly, when we run Rollup,

94
00:07:30.443 --> 00:07:34.801
it's gonna find that Svelte module,
and turn it into JavaScript.

95
00:07:37.953 --> 00:07:44.548
It looks like I haven't managed
to install, there we go.

96
00:07:51.566 --> 00:07:55.991
Install the correct thing, run Rollup
[LAUGH] and I also need to install

97
00:07:55.991 --> 00:08:00.199
Svelte itself because that doesn't
come included in the bundle.

98
00:08:01.700 --> 00:08:08.940
So npm i -D svelte, This time,

99
00:08:08.940 --> 00:08:14.060
third time's the charm,
npx rollup -c has created our bundle.

100
00:08:14.060 --> 00:08:17.420
And so now when we do npx serve public,

101
00:08:17.420 --> 00:08:22.893
it's gonna serve our Svelte
project on localhost 5000.

102
00:08:22.893 --> 00:08:27.597
And you can see that indeed,
it is creating our application and

103
00:08:27.597 --> 00:08:30.185
rendering it to document.body.

104
00:08:32.639 --> 00:08:37.664
All right, so that's basically all that
is to it, the official template which

105
00:08:37.664 --> 00:08:42.240
you can see at github.com/voltjs/template
is a little bit fancier.

106
00:08:42.240 --> 00:08:46.730
It has live reloading,
it has a built-in development server, and

107
00:08:46.730 --> 00:08:48.760
various other things
that are quite useful.

108
00:08:48.760 --> 00:08:53.680
But in essence, that's all that it
takes to get a Svelte project up and

109
00:08:53.680 --> 00:08:56.195
running, using Rollup

