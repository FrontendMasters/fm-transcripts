WEBVTT

1
00:00:00.180 --> 00:00:03.780
All right, so the first order of business
is gonna be to create a game screen

2
00:00:03.780 --> 00:00:06.660
component similar to
the welcome screen component.

3
00:00:06.660 --> 00:00:10.480
We'll just put that in here in
source slash screens slash new file

4
00:00:10.480 --> 00:00:12.050
game dot spelt.

5
00:00:17.450 --> 00:00:19.350
And then we'll import that.

6
00:00:19.350 --> 00:00:22.740
Inside app dot felt the same way that
we imported our welcome component.

7
00:00:27.480 --> 00:00:31.662
And then down here, we've got the game
screen goes head placeholder.

8
00:00:31.662 --> 00:00:37.165
We're gonna instantiate
the game component.

9
00:00:37.165 --> 00:00:40.647
But we're gonna pass
through the selection,

10
00:00:40.647 --> 00:00:46.015
because that's what the game is gonna
use to actually render the quiz.

11
00:00:53.132 --> 00:00:57.665
So the first thing we need to do in our
game component is make that selection prop

12
00:00:57.665 --> 00:00:59.933
available export lead selection, and

13
00:00:59.933 --> 00:01:04.619
we're gonna verify that it's getting
passed through correctly by logging it.

14
00:01:09.670 --> 00:01:11.069
And then once again,

15
00:01:11.069 --> 00:01:15.752
we're just gonna rip off some markup
from the one that we made earlier.

16
00:01:40.505 --> 00:01:42.787
The rest is just gonna
be placeholder stuff.

17
00:01:45.074 --> 00:01:49.997
We're gonna make an element
that is gonna contain the game.

18
00:01:55.972 --> 00:02:00.233
And then finally,

19
00:02:00.233 --> 00:02:07.424
we're gonna create that little

20
00:02:07.424 --> 00:02:13.290
row of results down here.

21
00:02:22.196 --> 00:02:25.611
So right now everything is getting
smashed into the middle of the screen,

22
00:02:25.611 --> 00:02:29.020
we want the game container to
fill as much space as possible.

23
00:02:29.020 --> 00:02:32.316
And then for the header and the results
to just occupy the top and bottom.

24
00:02:32.316 --> 00:02:39.294
So, we're gonna add a rule game
container has a flex value of one and

25
00:02:39.294 --> 00:02:45.304
that will make it stretch to
occupy as much space as it can.

26
00:02:45.304 --> 00:02:53.168
Okay, so the game container you can
see is occupying most of the screen

27
00:03:11.903 --> 00:03:16.480
Now if you look at the selection object
that's being passed in as a prop,

28
00:03:16.480 --> 00:03:20.170
we can see the data structure
that we're gonna work with.

29
00:03:21.420 --> 00:03:25.110
And most of the stuff that we
need is that, we got names,

30
00:03:25.110 --> 00:03:28.110
we got prices, got all of that.

31
00:03:28.110 --> 00:03:32.543
But we don't have the image that
belongs to each of the celebrity.

32
00:03:32.543 --> 00:03:34.885
So for that we're gonna
need to go back to the API.

33
00:03:34.885 --> 00:03:37.029
And we're gonna need to load some
more data for each of these.

34
00:03:39.200 --> 00:03:43.910
And that essentially means that
we're gonna need to create

35
00:03:43.910 --> 00:03:47.670
a bunch of promises representing
the result of loading that data.

36
00:03:51.330 --> 00:03:58.610
So let's do const promises
equals selection dot map.

37
00:03:58.610 --> 00:04:01.114
And then for each of those
objects that we just looked at,

38
00:04:11.060 --> 00:04:14.489
We're gonna load some details.

39
00:04:14.489 --> 00:04:17.804
Round at each round has an A property and
a B property.

40
00:04:22.930 --> 00:04:25.232
Right, so now we just need
to implement like details.

41
00:04:36.122 --> 00:04:38.400
I'm just want to grab that URL again.

42
00:04:38.400 --> 00:04:42.351
So each of these has Jason can inspect,

43
00:04:42.351 --> 00:04:49.776
which contains all of the same information
as before plus description and

44
00:04:49.776 --> 00:04:56.500
plus the image is grabbed that URL,
comes res equals await fetch.

45
00:04:56.500 --> 00:05:05.043
And then just replace the real mirror with
the ID of the slab that we care about.

46
00:05:05.043 --> 00:05:11.264
And then just gonna return the Jason for
that response.

47
00:05:11.264 --> 00:05:14.355
So that's gonna give us
a bunch of different

48
00:05:14.355 --> 00:05:18.788
promises that represent the full
details of the celebrities.

49
00:05:18.788 --> 00:05:21.304
Who spaces we are gonna
include in our game.

50
00:05:24.644 --> 00:05:27.456
Now, dealing with asynchronous objects in,

51
00:05:27.456 --> 00:05:32.270
in templating languages has
historically been a little bit awkward.

52
00:05:32.270 --> 00:05:37.120
But spelt has a first class
way of showing promises

53
00:05:37.120 --> 00:05:40.780
in your component that we looked at
earlier and it's called the await block.

54
00:05:40.780 --> 00:05:42.110
So we're gonna use one of those here.

55
00:05:43.240 --> 00:05:49.640
Gonna do a weight something,
we'll figure that out later.

56
00:05:49.640 --> 00:05:54.030
Then we're gonna have an array of A and

57
00:05:54.030 --> 00:05:57.000
B, because that's what's getting
returned from here, an array.

58
00:06:02.450 --> 00:06:04.840
And by the way,
I'm actually using a shorthand here.

59
00:06:04.840 --> 00:06:10.954
So before we had a waive something and
then you would have a pending block.

60
00:06:15.595 --> 00:06:19.074
And then you would have a then closed.

61
00:06:29.308 --> 00:06:34.445
In cases like this one where we actually
don't want to show anything while while

62
00:06:34.445 --> 00:06:39.825
pending is still the case, we can shortcut
this to a weight, something Ben value.

63
00:06:39.825 --> 00:06:44.611
[NOISE] And so once again,
that's gonna be an array with A and

64
00:06:44.611 --> 00:06:47.209
B and we can use destructuring.

65
00:06:50.844 --> 00:06:54.518
And inside there, we're gonna
create the game element itself.

66
00:06:54.518 --> 00:06:57.246
Class equals game.

67
00:07:09.498 --> 00:07:13.386
I'm gonna have a card for
the two celebrities faces.

68
00:07:19.110 --> 00:07:23.292
You don't name and then just like here, so

69
00:07:23.292 --> 00:07:28.053
someone just pointed out
that I am not loading B,

70
00:07:28.053 --> 00:07:33.760
I'm only loading A twice
which is no help at all.

71
00:07:33.760 --> 00:07:34.901
Thank you for spotting that.

72
00:07:37.695 --> 00:07:41.755
Okay so on the final version of the game
you can see the, as well as having

73
00:07:41.755 --> 00:07:46.516
celebrity A, they were having in this
case since celebrity B, Maurice LaMarche.

74
00:07:46.516 --> 00:07:50.700
We have a button in the middle that you
are supposed to press when you see that

75
00:07:50.700 --> 00:07:54.810
charging exactly the same price, so
were gonna add that to mark up as well.

76
00:07:56.970 --> 00:07:59.790
Just put a little div in there and
then inside there,

77
00:07:59.790 --> 00:08:03.710
we can have a button,
give it a class equals same.

78
00:08:06.180 --> 00:08:09.100
And then just put the word same price.

79
00:08:11.990 --> 00:08:17.890
And in some cases, like as we've seen,
it's possible that would be an error.

80
00:08:17.890 --> 00:08:22.210
So we're gonna have a little
error message class equals error.

81
00:08:25.045 --> 00:08:29.735
And we'll just print the Print

82
00:08:29.735 --> 00:08:34.716
a message that says we failed to load,
data and

83
00:08:34.716 --> 00:08:40.607
then [INAUDIBLE] Okay,

84
00:08:40.607 --> 00:08:46.187
so all we got to do now is
figure out what this something

85
00:08:46.187 --> 00:08:51.030
should be, so we have,
an array of promises.

86
00:08:52.110 --> 00:08:55.310
And we're gonna step through them one at a
time and the easiest way to do that would

87
00:08:55.310 --> 00:09:01.330
be to just have a value that represents
the current index into those promises.

88
00:09:01.330 --> 00:09:05.180
So let's create a new
value let I equals zero.

89
00:09:05.180 --> 00:09:08.900
I'm just gonna take that up
as we go through the rounds.

90
00:09:08.900 --> 00:09:11.480
Replace something with promises.

91
00:09:12.770 --> 00:09:16.729
I like so and then now if we

92
00:09:17.960 --> 00:09:21.850
go over to our application and
pick around.

93
00:09:23.930 --> 00:09:28.919
And we can see that it is indeed picking
out two celebrities Gillian Harris and

94
00:09:28.919 --> 00:09:32.539
Kevin Chamberlin and
rendering some game UI for those.

95
00:09:32.539 --> 00:09:37.590
And now, I guess we need to start
building out the rest of that UI.

