WEBVTT

1
00:00:00.660 --> 00:00:02.569
In just about every web application,

2
00:00:02.569 --> 00:00:05.024
you will need to use logic
inside your template.

3
00:00:05.024 --> 00:00:09.376
Whether that's if blocks to control
whether or not something is rendered or

4
00:00:09.376 --> 00:00:12.990
each blocks, which control how
lists of things are rendered.

5
00:00:14.505 --> 00:00:18.800
And HTML doesn't have a native
way of declaring conditions.

6
00:00:18.800 --> 00:00:24.390
So we've added some syntax inside
Svelte that lets you do that.

7
00:00:25.590 --> 00:00:29.080
So here we've got two buttons, one is
a login button and one is a logout button.

8
00:00:30.400 --> 00:00:33.655
And we only wanna show one at a time
because they're obviously mutually

9
00:00:33.655 --> 00:00:34.260
exclusive.

10
00:00:34.260 --> 00:00:39.720
And we can do that by wrapping the buttons
in an if block that looks like this.

11
00:00:39.720 --> 00:00:44.869
If user.loggedIn, indent that,

12
00:00:44.869 --> 00:00:50.024
and then close the if block like so.

13
00:00:50.024 --> 00:00:54.397
And then we're gonna add the same thing
for the second one, except with this time,

14
00:00:54.397 --> 00:00:56.227
we're inverting the condition.

15
00:01:01.782 --> 00:01:04.295
And so now only one of the buttons
is shown at any one time.

16
00:01:04.295 --> 00:01:07.035
If I click on this,
then it's no longer rendered, and

17
00:01:07.035 --> 00:01:09.248
it gets replaced with the opposite button.

18
00:01:15.325 --> 00:01:19.243
Now this is a common case,
the two conditions, user.loggedIn and

19
00:01:19.243 --> 00:01:21.800
user not logged in are mutually exclusive.

20
00:01:21.800 --> 00:01:26.016
So we can replace the two if blocks
with a single if-else block,

21
00:01:26.016 --> 00:01:28.366
just like you would in JavaScript.

22
00:01:28.366 --> 00:01:31.990
And that looks like this, :else here.

23
00:01:34.468 --> 00:01:36.390
And that behaves exactly the same way.

24
00:01:37.590 --> 00:01:39.293
So there are three new
bits of syntax here.

25
00:01:39.293 --> 00:01:43.520
When we're opening a block,
we use the pound sign.

26
00:01:43.520 --> 00:01:46.937
When we're continuing a block,
we use the colon sign.

27
00:01:46.937 --> 00:01:49.121
And when we're closing it,
we use the slash,

28
00:01:49.121 --> 00:01:51.200
just like when you're closing an element.

29
00:01:52.370 --> 00:01:55.233
And that's something that you'll see
in other types of blocks that we'll

30
00:01:55.233 --> 00:01:55.922
introduce soon.

31
00:01:55.922 --> 00:02:00.385
And that's basically the entirety of
the Svelte syntax that you need to learn,

32
00:02:00.385 --> 00:02:03.726
apart from element directors,
which we'll come to soon.

33
00:02:09.201 --> 00:02:12.120
We can also have else-if blocks.

34
00:02:12.120 --> 00:02:15.340
So here we've got an if block and
then we've got an else block, and

35
00:02:15.340 --> 00:02:17.727
then inside the else block we've
got another if-else block.

36
00:02:18.790 --> 00:02:22.540
It'd be easier if we could have
an else if 5 is greater than x.

37
00:02:24.110 --> 00:02:25.350
So x = 7.

38
00:02:26.460 --> 00:02:32.375
If it's greater than 10, render this,
otherwise, if it's greater than,

39
00:02:32.375 --> 00:02:37.611
or if it's less than x, Then show that,

40
00:02:37.611 --> 00:02:39.839
and then we can get rid
of the closing if block.

41
00:02:42.938 --> 00:02:50.411
Reindent everything, and that behaves
exactly as it would in JavaScript.

