WEBVTT

1
00:00:00.000 --> 00:00:05.280
So the next task is gonna
be to add in those buttons.

2
00:00:05.280 --> 00:00:09.593
And we're gonna need to begin that
by defining what our categories are.

3
00:00:09.593 --> 00:00:12.865
Inside welcome.svelte,

4
00:00:15.402 --> 00:00:18.864
I'm gonna add a script tag.

5
00:00:23.231 --> 00:00:28.546
And I'm just gonna create
an array of categories like this.

6
00:00:28.546 --> 00:00:30.762
Now each of these categories
needs to have two things.

7
00:00:30.762 --> 00:00:33.893
It needs to have the label that is
gonna be displayed in the button.

8
00:00:33.893 --> 00:00:35.991
And it needs to have the slug for

9
00:00:35.991 --> 00:00:40.202
the category that is gonna be
used to filter the celebrities.

10
00:00:40.202 --> 00:00:44.177
When you make a selection,
it's gonna take all of

11
00:00:44.177 --> 00:00:49.110
the celebrity data from our API and
filter down based on that.

12
00:00:49.110 --> 00:00:54.893
And it goes a little bit like this,
slug actors,

13
00:00:54.893 --> 00:00:59.559
and then label Actors with a capital A.

14
00:00:59.559 --> 00:01:05.612
Just gonna copy that six times and
replace each of these.

15
00:01:13.191 --> 00:01:21.750
Comedians, Models,

16
00:01:25.684 --> 00:01:33.562
Musicians, I missed some.

17
00:01:33.562 --> 00:01:40.343
I missed creators,
won't somebody think of the creators?

18
00:01:40.343 --> 00:01:45.776
And finally, reality TV which,
if I'm honest, is the bulk of Cameo.

19
00:01:50.841 --> 00:01:53.160
Okay, so we have our categories set up.

20
00:01:53.160 --> 00:01:59.580
Now we need to put them onto the page,
and we do that with an each block.

21
00:02:00.990 --> 00:02:06.468
Okay, so let's add our intro text,

22
00:02:06.468 --> 00:02:11.078
pick a category to play a game.

23
00:02:22.020 --> 00:02:24.912
Then inside this categories div,

24
00:02:24.912 --> 00:02:30.404
we're gonna have our each block,
each categories as category.

25
00:02:36.366 --> 00:02:38.440
And each one is gonna have a button.

26
00:02:41.734 --> 00:02:44.724
And we're not gonna worry about event
listeners or any of that just yet.

27
00:02:44.724 --> 00:02:46.499
We're just gonna get the UI mocked up.

28
00:02:48.160 --> 00:02:52.880
So we're just gonna stick
that category label in there.

29
00:02:52.880 --> 00:02:56.272
Save, and we have some buttons.

30
00:02:56.272 --> 00:03:00.078
Doesn't look exactly right, but
we're not gonna worry about that just yet.

31
00:03:02.812 --> 00:03:08.335
First, we're gonna wire up the buttons,
so that when someone clicks on one,

32
00:03:08.335 --> 00:03:12.701
we move away from the welcome screen and
into the game screen.

33
00:03:21.431 --> 00:03:27.365
Now, You remember earlier
when we were dispatching

34
00:03:27.365 --> 00:03:31.412
events from inside a component so that
another component could respond to them,

35
00:03:31.412 --> 00:03:33.267
and it looked a little bit like this.

36
00:03:33.267 --> 00:03:38.506
import createEventDispatcher from svelte,

37
00:03:38.506 --> 00:03:44.153
and then create the dispatch
function like this.

38
00:03:44.153 --> 00:03:49.578
There is actually an alternative to
this approach, which is that instead of

39
00:03:49.578 --> 00:03:54.933
the component dispatching an event
that the parent component listens to.

40
00:03:54.933 --> 00:03:59.658
The alternative is to do in the way
the frameworks like React do it, which is,

41
00:03:59.658 --> 00:04:03.822
the parent component passes a handler
down to the child component.

42
00:04:03.822 --> 00:04:06.500
And in some ways that's
a little bit neater because

43
00:04:06.500 --> 00:04:09.813
we don't need the ceremony of
creating the event dispatcher.

44
00:04:09.813 --> 00:04:13.428
Personally, I prefer the event form
because it's a little bit closer to

45
00:04:13.428 --> 00:04:15.570
the intent of what is actually happening.

46
00:04:15.570 --> 00:04:19.955
But you can do either, you can create
the handler and pass it in as a prop, or

47
00:04:19.955 --> 00:04:22.402
you can create the event and listen to it.

48
00:04:22.402 --> 00:04:27.320
One advantage of the event system
is that it doesn't actually matter

49
00:04:27.320 --> 00:04:29.454
if the handler exists or not.

50
00:04:29.454 --> 00:04:33.984
So if you're creating a component
that is designed to be consumed in

51
00:04:33.984 --> 00:04:38.591
a place where you don't know what
props are gonna get passed into it,

52
00:04:38.591 --> 00:04:43.057
then that's a nice way to make it
decoupled from its environment.

53
00:04:46.167 --> 00:04:49.313
Okay, we're gonna add a select function,

54
00:04:56.992 --> 00:05:03.749
And for right now, I'm just gonna
put console.log selected, category.

55
00:05:03.749 --> 00:05:07.936
And then we're gonna add that as
an on:click handler to the button.

56
00:05:11.222 --> 00:05:20.365
On:click equals, select category.

57
00:05:23.343 --> 00:05:24.472
Neaten that up slightly.

58
00:05:28.931 --> 00:05:33.323
Okay, so if that's been wired up
correctly, then when we click on one of

59
00:05:33.323 --> 00:05:37.650
these buttons, we're gonna get a log
in the console, and there we go.

60
00:05:37.650 --> 00:05:40.737
Okay, so we know that that
is now working as we expect.

61
00:05:43.421 --> 00:05:49.242
So at this point,
we wanna dispatch the select event,

62
00:05:49.242 --> 00:05:54.060
which the app component
is gonna listen for.

63
00:05:54.060 --> 00:05:58.057
And we're gonna pass the category
as the event detail.

64
00:06:00.268 --> 00:06:02.638
Get rid of that logging because
we don't need it anymore.

65
00:06:02.638 --> 00:06:07.688
Now there is one little wrinkle here,
which is that when the game starts,

66
00:06:07.688 --> 00:06:12.012
it's gonna need to fetch some
more data from over the network.

67
00:06:12.012 --> 00:06:15.717
And because of that, the welcome screen
isn't gonna disappear immediately,

68
00:06:15.717 --> 00:06:17.000
it's gonna take a moment.

69
00:06:18.190 --> 00:06:23.120
And so we could get into a situation
where someone could select a category,

70
00:06:23.120 --> 00:06:27.310
and then they could select another
category before the game actually starts.

71
00:06:27.310 --> 00:06:30.896
And we don't want to deal with
those kind of race condition bugs.

72
00:06:30.896 --> 00:06:33.262
So instead,
we're gonna disable the buttons.

73
00:06:33.262 --> 00:06:36.920
It's an easy way to prevent
that from happening.

74
00:06:36.920 --> 00:06:41.330
And that's easy enough to do,
we're just gonna have a new

75
00:06:41.330 --> 00:06:45.563
value called let selected,
which starts out as false.

76
00:06:45.563 --> 00:06:50.717
When a selection is made,
selected becomes true.

77
00:06:50.717 --> 00:06:56.219
And then we're gonna go
down to our button here and

78
00:06:56.219 --> 00:06:59.234
add disabled = selected.

79
00:07:02.562 --> 00:07:07.792
Right, if I actually just add that logging

80
00:07:07.792 --> 00:07:12.733
back console.log selected category,

81
00:07:12.733 --> 00:07:16.521
and then click on one of these.

82
00:07:16.521 --> 00:07:17.945
It's selected actors, but

83
00:07:17.945 --> 00:07:22.650
it won't select any of the others however
many times I click on those other buttons.

84
00:07:22.650 --> 00:07:27.700
And that's exactly
the behavior that we want, so

85
00:07:27.700 --> 00:07:35.168
all that remains is to add the handler for
that event inside app.svelte.

86
00:07:41.272 --> 00:07:45.460
And we'll log the event, I do this a lot,
it's just a really easy way to check that

87
00:07:45.460 --> 00:07:49.740
things are wired up correctly
before you start implementing them.

88
00:07:49.740 --> 00:07:54.810
And then we're gonna add the on:select
to the welcome component.

89
00:08:06.479 --> 00:08:11.280
Okay, so it's now logging the custom
event, which has as its detail property

90
00:08:11.280 --> 00:08:14.786
the category that was chosen
inside the welcome screen.

91
00:08:19.403 --> 00:08:22.411
All right,
we're almost at checkpoint one, but

92
00:08:22.411 --> 00:08:25.417
there's one big task that
we still need to do, and

93
00:08:25.417 --> 00:08:29.723
that is to load the celebrity data
that the quiz is gonna be composed of.

94
00:08:29.723 --> 00:08:32.830
And we're gonna do that
inside an unmanned handler.

