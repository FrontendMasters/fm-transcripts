WEBVTT

1
00:00:00.122 --> 00:00:04.501
Okay, so the first thing that we're
gonna do is we're gonna remove these

2
00:00:04.501 --> 00:00:06.278
unused props from main.js.

3
00:00:06.278 --> 00:00:08.046
We don't need that stuff anymore.

4
00:00:08.046 --> 00:00:08.986
Just delete that.

5
00:00:17.616 --> 00:00:23.552
And inside our, Main App.svelte we're

6
00:00:23.552 --> 00:00:28.262
gonna get rid of this placeholder content,
which is no longer relevant to us.

7
00:00:30.987 --> 00:00:32.130
So now I have a blank page.

8
00:00:34.003 --> 00:00:37.802
And these styles also no longer relevant,
so I'm just gonna get rid of all of that.

9
00:00:43.643 --> 00:00:45.470
And this state is also unused.

10
00:00:46.480 --> 00:00:50.870
So, I mentioned that there are two
screens, there's the welcome screen and

11
00:00:50.870 --> 00:00:52.296
there's the game screen.

12
00:00:52.296 --> 00:00:54.980
So we're gonna have a piece of state
that represents which screen we're

13
00:00:54.980 --> 00:00:56.800
currently on.

14
00:00:56.800 --> 00:00:58.463
And there's a lot of ways
that you could do this.

15
00:00:58.463 --> 00:01:03.720
You could use a state machine, for
example, but for right now, we're just

16
00:01:03.720 --> 00:01:09.244
gonna keep it nice and simple and
we're gonna have, let state = 'welcome'.

17
00:01:09.244 --> 00:01:14.159
And the alternative is playing.

18
00:01:14.159 --> 00:01:21.383
And then inside our main element,
we're gonna have, if state === 'welcome'.

19
00:01:25.770 --> 00:01:29.986
Or, if state === 'playing'.

20
00:01:33.985 --> 00:01:36.785
Welcome screen goes here.

21
00:01:40.892 --> 00:01:46.114
Game screen goes here.

22
00:01:46.114 --> 00:01:50.025
Save that, and
we've got our intro content there.

23
00:01:52.962 --> 00:01:56.881
Now we're gonna wanna vertically center
the content of this main element.

24
00:01:56.881 --> 00:02:00.109
So I'm gonna add some more CSS down here.

25
00:02:00.109 --> 00:02:03.690
I'm gonna bump up that
max-width to 800 pixels.

26
00:02:03.690 --> 00:02:07.045
And we're gonna make the height 100%.

27
00:02:07.045 --> 00:02:14.571
We're gonna use display: flex,
With a flex-direction of column.

28
00:02:16.619 --> 00:02:21.611
And we're just gonna justify
the content using center.

29
00:02:23.652 --> 00:02:26.868
So now the content is in
the middle of the screen.

30
00:02:32.427 --> 00:02:36.570
Okay, so
let's start building our welcome screen.

31
00:02:36.570 --> 00:02:40.340
We're gonna do that in a new component so
that this one doesn't get too crowded.

32
00:02:40.340 --> 00:02:48.005
I'm gonna create a new file over
here called screens/Welcome.svelte.

33
00:02:52.308 --> 00:02:58.512
[COUGH] And then in my App.js,
my App.svelte,

34
00:02:58.512 --> 00:03:04.261
sorry, I'm gonna import that component.

35
00:03:11.420 --> 00:03:18.060
And then I'm just gonna replace all
of that with, the Welcome component.

36
00:03:23.604 --> 00:03:28.240
I got the path wrong, so Rollup is
giving me an error because it couldn't

37
00:03:28.240 --> 00:03:31.980
resolve ./Welcome.svelte
from source App.svelte.

38
00:03:31.980 --> 00:03:34.680
There's a reason for that,
it's because that file doesn't exist.

39
00:03:34.680 --> 00:03:38.260
I needed to add screens here.

40
00:03:38.260 --> 00:03:41.056
And then hopefully that is gonna
start building correctly again.

41
00:03:47.000 --> 00:03:51.222
And so
now it's time to build our welcome screen.

42
00:03:51.222 --> 00:03:55.204
Now, by the way, if you're using the
Cameoparison starter repo and if you're

43
00:03:55.204 --> 00:03:59.738
following along, then there's a series of
checkpoints that we're gonna work through.

44
00:03:59.738 --> 00:04:03.619
We're currently working towards checkpoint
one, so don't worry if you feel

45
00:04:03.619 --> 00:04:07.112
like you're falling way behind and
aren't gonna be able to catch up.

46
00:04:07.112 --> 00:04:09.636
Because once we get to each checkpoint,

47
00:04:09.636 --> 00:04:14.613
if you're not current with the course then
you can just discard your changes and

48
00:04:14.613 --> 00:04:19.085
check out that checkpoint and
then we'll be able to pick up from there.

49
00:04:19.085 --> 00:04:26.189
So don't worry about about keeping
pace if you're falling behind.

50
00:04:28.275 --> 00:04:31.165
Okay, so what do we need to
put in our welcome screen?

51
00:04:31.165 --> 00:04:33.566
I guess we don't need a script tag for
right now.

52
00:04:33.566 --> 00:04:35.465
So let's ignore that.

53
00:04:35.465 --> 00:04:37.930
I'm gonna cheat a little bit, and

54
00:04:37.930 --> 00:04:41.585
I'm gonna go to the deployed
version of this game.

55
00:04:41.585 --> 00:04:45.270
And I'm just gonna yank the html
out of what's already here.

56
00:04:52.517 --> 00:04:55.401
Because you can do that in Svelte.

57
00:04:55.401 --> 00:05:00.273
It's not like some frameworks
where valid HTML isn't necessarily

58
00:05:00.273 --> 00:05:04.983
valid in the language that you're
writing your application in.

59
00:05:04.983 --> 00:05:09.729
For example, JSX has all sorts of
ways in which it isn't exactly HTML.

60
00:05:09.729 --> 00:05:14.323
And so very often, you'll paste in
perfectly valid HTML into your JSX and

61
00:05:14.323 --> 00:05:16.187
it won't do what you expect.

62
00:05:16.187 --> 00:05:20.380
But in Svelte, we don't have that problem
because valid HTML is valid Svelte,

63
00:05:20.380 --> 00:05:23.698
which makes it really good for
copying things from CodePens and

64
00:05:23.698 --> 00:05:27.034
other places that you find bits
of markup around the Internet.

65
00:05:27.034 --> 00:05:31.287
So I'm just gonna right-click
on that header and

66
00:05:31.287 --> 00:05:36.666
copy out of outerHTML,
just gonna paste that in there, okay.

67
00:05:36.666 --> 00:05:37.970
And we need to clean it up a little bit.

68
00:05:37.970 --> 00:05:41.709
We've got these scoping
selectors that Svelte adds so

69
00:05:41.709 --> 00:05:45.944
that the CSS that belongs to
the component doesn't leak out.

70
00:05:45.944 --> 00:05:50.461
And we just need to get rid of all those
because it's gonna add those anyway.

71
00:05:52.321 --> 00:05:54.407
Get rid of that like that.

72
00:05:54.407 --> 00:05:57.745
And then just neaten up
the indentation and what have you.

73
00:06:01.961 --> 00:06:03.008
Save that.

74
00:06:07.801 --> 00:06:12.719
And okay, we have some markup,
need to get some styles in there as well.

75
00:06:19.702 --> 00:06:21.438
And again, because it's just CSS,

76
00:06:21.438 --> 00:06:24.357
we can paste in any CSS that we
find lying around the Internet.

77
00:06:24.357 --> 00:06:29.180
So here, I'm selecting,
I need to be on the deployed site.

78
00:06:29.180 --> 00:06:36.537
Here I'm selecting the h1, And
I'm gonna find the style here.

79
00:06:36.537 --> 00:06:40.069
And you can see it does indeed
belong to the Welcome component.

80
00:06:40.069 --> 00:06:43.782
And just select all of that,

81
00:06:43.782 --> 00:06:47.968
copy it and put it inside my h1.

82
00:06:59.204 --> 00:07:04.407
Do the same thing for
the paragraph element.

83
00:07:04.407 --> 00:07:06.854
Put a max-width on there and some margin.

84
00:07:14.981 --> 00:07:19.969
And finally for the logo, you see
here we've got the word CAMEOPARISON

85
00:07:19.969 --> 00:07:24.224
spelled out, but here the A has
been replaced with the logo.

86
00:07:24.224 --> 00:07:27.002
And that's done with CSS.

87
00:07:27.002 --> 00:07:32.044
We just need to select element, and

88
00:07:32.044 --> 00:07:39.619
grab the styles and
put them in a new .logo selector.

89
00:07:42.333 --> 00:07:47.996
Right, and that's starting to look
quite a lot like the finished product.

90
00:07:47.996 --> 00:07:50.948
Except, obviously, it's not the same thing
because this is on a white background and

91
00:07:50.948 --> 00:07:52.940
the other one is on a dark background.

92
00:07:52.940 --> 00:07:56.465
And that's because there are some
styles that are not component-specific

93
00:07:56.465 --> 00:07:58.456
that are being applied to the entire page.

94
00:07:58.456 --> 00:08:03.412
These are the styles that live in our
global .CSS file, which is used for

95
00:08:03.412 --> 00:08:08.060
CSS variables, typography rules,
and all of those sorta things.

96
00:08:08.060 --> 00:08:11.578
Anything that applies to all
of your components as opposed

97
00:08:11.578 --> 00:08:15.474
to a specific component,
I like to put it in a global.css file.

98
00:08:15.474 --> 00:08:18.540
So if I go over here,
go to my Network tab,

99
00:08:18.540 --> 00:08:23.975
let's refresh the page to get everything,
and restrict it to CSS files,

100
00:08:23.975 --> 00:08:29.237
then we'll see that there's two CSS
files that have been downloaded,

101
00:08:29.237 --> 00:08:31.628
global.css and bundle.css.

102
00:08:31.628 --> 00:08:34.456
bundle.css is the one that Svelte
generates from our components.

103
00:08:34.456 --> 00:08:37.316
global.css is everything else.

104
00:08:37.316 --> 00:08:39.989
So I'm just gonna open that in a new tab.

105
00:08:39.989 --> 00:08:43.433
And just select all of that.

106
00:08:45.627 --> 00:08:49.636
Go over to the global.css file, like that,

107
00:08:49.636 --> 00:08:54.599
I'm just gonna replace
everything with these styles.

108
00:08:54.599 --> 00:08:58.134
So now if you refresh the page,
don't even need to refresh the page, okay.

109
00:08:58.134 --> 00:08:58.974
It's already done.

110
00:08:58.974 --> 00:09:03.581
So localhost:5000 is now
starting to resemble the version

111
00:09:03.581 --> 00:09:06.745
that's currently running in production.

112
00:09:06.745 --> 00:09:12.284
Obviously, we don't yet
have this section with the buttons,

113
00:09:12.284 --> 00:09:16.160
but we have the header and
everything else.

