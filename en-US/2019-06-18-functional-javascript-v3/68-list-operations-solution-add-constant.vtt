WEBVTT

1
00:00:00.250 --> 00:00:04.163
&gt;&gt; Kyle Simpson: All right, well, I trust
that exercise was a bit challenging, but

2
00:00:04.163 --> 00:00:08.228
hopefully you got a sense of pulling
in a variety of different things.

3
00:00:08.228 --> 00:00:13.230
Let's walk through it and
make sure we catch all of the details.

4
00:00:13.230 --> 00:00:16.654
So item number one in the read me says
that we need to define two different

5
00:00:16.654 --> 00:00:18.609
functions each of which return a value.

6
00:00:18.609 --> 00:00:21.846
I'm gonna use numbers just
to be very convenient.

7
00:00:21.846 --> 00:00:27.539
So I'll define a function five,
that returns the number 5.

8
00:00:27.539 --> 00:00:31.904
And then I'll define a function nine,
that returns the number 9, for

9
00:00:31.904 --> 00:00:36.733
no particular reason just because that's
what I made up at this point, okay?

10
00:00:36.733 --> 00:00:39.350
That's what item number
one in the read me says.

11
00:00:39.350 --> 00:00:42.760
Item number two in the read me
said to create an add function

12
00:00:42.760 --> 00:00:44.790
which takes two numbers.

13
00:00:44.790 --> 00:00:45.963
Well, that should be
pretty straightforward.

14
00:00:45.963 --> 00:00:50.926
We take an add of an x and y, and
it just adds those two together,

15
00:00:50.926 --> 00:00:53.468
and it gives you the value back.

16
00:00:53.468 --> 00:00:56.601
Now, how would we use add
with our five and our nine?

17
00:00:56.601 --> 00:01:00.237
Well, we would call that by saying add,
and then we'd have

18
00:01:00.237 --> 00:01:04.979
to call the function five and call the
function nine and pass in their values.

19
00:01:07.200 --> 00:01:10.570
What's that called when
a function returns its result and

20
00:01:10.570 --> 00:01:12.700
that immediately becomes
the input to another function?

21
00:01:14.990 --> 00:01:16.570
Composition, that's right, okay.

22
00:01:17.610 --> 00:01:21.162
Just making sure you're still
at least partly awake, okay.

23
00:01:21.162 --> 00:01:25.887
Item number three says we
wanna create a function that

24
00:01:25.887 --> 00:01:28.935
can take functions and call them.

25
00:01:28.935 --> 00:01:34.260
So what did we say, we'll call that
add to, that's what the readme says.

26
00:01:34.260 --> 00:01:40.760
We'll make an add2 function, and
that takes an fn1 and an fn2.

27
00:01:40.760 --> 00:01:44.423
And it needs to use the add utility, so

28
00:01:44.423 --> 00:01:50.264
we're just gonna literally call
it like we called it there,

29
00:01:50.264 --> 00:01:53.252
but with the fn1 and the fn2.

30
00:01:55.808 --> 00:01:59.276
&gt;&gt; Kyle Simpson: That's sort of
a higher order add utility, isn't it?

31
00:01:59.276 --> 00:02:02.786
It doesn't add numbers,
it adds functions that hold numbers.

32
00:02:08.080 --> 00:02:12.810
&gt;&gt; Kyle Simpson: Okay, item number four
said take that five and that nine function

33
00:02:12.810 --> 00:02:18.610
that we defined in step one and
let's replace those with another utility.

34
00:02:18.610 --> 00:02:21.645
A utility which I'm going
to call constant, and

35
00:02:21.645 --> 00:02:23.873
I'll explain in just a moment why.

36
00:02:23.873 --> 00:02:29.337
That utility needs to take in a value and
return back a function,

37
00:02:29.337 --> 00:02:34.611
that when called,
that function returns the initial value.

38
00:02:36.168 --> 00:02:38.079
&gt;&gt; Kyle Simpson: So
it's like taking a value and

39
00:02:38.079 --> 00:02:40.439
wrapping it up in a function closure.

40
00:02:41.966 --> 00:02:46.120
And I called this utility constant
because that's exactly what that's called

41
00:02:46.120 --> 00:02:48.150
in functional programming libraries.

42
00:02:48.150 --> 00:02:52.550
When you wanna make a function wrapped
around a value, it's called constant.

43
00:02:52.550 --> 00:02:54.170
So how could I define a five?

44
00:02:54.170 --> 00:02:59.490
I could say five = constant(5) and

45
00:02:59.490 --> 00:03:03.160
nine = constant(9).

46
00:03:03.160 --> 00:03:08.467
And then if I wanted to use that
add2 utility with both of those,

47
00:03:08.467 --> 00:03:13.594
then that would look like add2,
and I'd call five and nine.

