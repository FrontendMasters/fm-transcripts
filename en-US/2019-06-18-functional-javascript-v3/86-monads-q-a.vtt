WEBVTT

1
00:00:00.380 --> 00:00:01.820
&gt;&gt; Kyle Simpson: Any
questions about monads?

2
00:00:01.820 --> 00:00:03.474
Yes?
&gt;&gt; Speaker 2: You said that the identity

3
00:00:03.474 --> 00:00:04.629
here was kind of a cheat.

4
00:00:04.629 --> 00:00:07.030
How would you get the value out?

5
00:00:07.030 --> 00:00:09.620
&gt;&gt; Kyle Simpson: You don't
really get the value out.

6
00:00:09.620 --> 00:00:13.380
You just keep making more monads that do
whatever you need them to do with it.

7
00:00:13.380 --> 00:00:16.955
It's kind of like how in function calls,
you don't,

8
00:00:16.955 --> 00:00:20.970
until the very end,
do your side effect and cheat.

9
00:00:20.970 --> 00:00:23.910
So it's like everything is a monad
that makes another monad that makes

10
00:00:23.910 --> 00:00:24.630
another monad.

11
00:00:24.630 --> 00:00:28.960
And then at the very end, you do your
side effect and your cheat, right?

12
00:00:28.960 --> 00:00:32.220
That's basically why I'm doing it
here at the very end, to show you.

13
00:00:32.220 --> 00:00:35.880
The line 25 is a violation
of the monadic laws.

14
00:00:35.880 --> 00:00:38.430
But it's also the end of our operation,
so it doesn't matter.

15
00:00:38.430 --> 00:00:40.170
It's okay if we go ahead and pull it out.

16
00:00:40.170 --> 00:00:42.692
Everything else above it
is behaving by those laws.

17
00:00:47.185 --> 00:00:48.761
&gt;&gt; Kyle Simpson: And
just to make sure we're clear.

18
00:00:48.761 --> 00:00:53.591
The reason line 25 is a violation of the
monadic law is because .chain has to be

19
00:00:53.591 --> 00:00:56.130
called with a monad returning function.

20
00:00:56.130 --> 00:00:58.334
An identity is not a monad
returning function,

21
00:00:58.334 --> 00:01:01.760
at least not necessarily
a monad returning function.

22
00:01:01.760 --> 00:01:02.990
That's why it's a violation of law.

23
00:01:05.280 --> 00:01:10.177
&gt;&gt; Speaker 3: Is the Monad, is that
a mathematical thing that you could

24
00:01:10.177 --> 00:01:13.555
go study the actual mathematics of it?

25
00:01:13.555 --> 00:01:15.383
That-
&gt;&gt; Kyle Simpson: There is absolutely math

26
00:01:15.383 --> 00:01:16.737
behind monads, yes.

27
00:01:16.737 --> 00:01:19.691
&gt;&gt; Speaker 3: And it's actually
called a monad in mathematics?

28
00:01:19.691 --> 00:01:25.472
Or was that a name that they
made up in programming?

29
00:01:25.472 --> 00:01:28.367
Is that name underlined-
&gt;&gt; Kyle Simpson: The question that you're

30
00:01:28.367 --> 00:01:33.073
asking is a little interesting because
the evolution of the programming and

31
00:01:33.073 --> 00:01:36.676
the evolution of the math,
at least from my perspective,

32
00:01:36.676 --> 00:01:39.420
seem to have been cojoined.

33
00:01:39.420 --> 00:01:43.770
So I'm not sure that it matters that it
was first in math or first in programming.

34
00:01:43.770 --> 00:01:50.640
But there is mathematic principles
underlying the concept of a monad.

35
00:01:50.640 --> 00:01:55.310
So you can't have invented the programming
without the math having first been there.

36
00:01:55.310 --> 00:01:59.680
&gt;&gt; Speaker 3: Right, but
it's not called a monad in mathematics.

37
00:01:59.680 --> 00:02:03.033
What the monad is and
the mathematics that it's built on,

38
00:02:03.033 --> 00:02:05.779
that's not what it's
called in mathematics.

39
00:02:08.680 --> 00:02:11.350
&gt;&gt; Kyle Simpson: That's kinda like saying
it's not called a functioning method.

40
00:02:11.350 --> 00:02:14.770
It is called a function, but
it doesn't really matter what it's called.

41
00:02:14.770 --> 00:02:16.810
What matters is what it does.

42
00:02:16.810 --> 00:02:19.490
So the laws of category theory and

43
00:02:19.490 --> 00:02:23.430
all of that that give us a monad,
those are valid math.

44
00:02:23.430 --> 00:02:27.057
And we realize them in programming
using some programming language's

45
00:02:27.057 --> 00:02:28.420
particular syntax.

46
00:02:28.420 --> 00:02:29.649
&gt;&gt; Speaker 3: Right,
what did you just say?

47
00:02:29.649 --> 00:02:32.097
What kind of math?

48
00:02:32.097 --> 00:02:35.157
You just said the-
&gt;&gt; Kyle Simpson: There's a broader type of

49
00:02:35.157 --> 00:02:38.640
math that underlies a lot
of functional programming.

50
00:02:38.640 --> 00:02:41.425
There's actually more than one,
but category theory.

51
00:02:41.425 --> 00:02:42.266
&gt;&gt; Speaker 3: Category theory.

52
00:02:42.266 --> 00:02:46.612
&gt;&gt; Kyle Simpson: And
I'm way beyond my depth here, right?

53
00:02:46.612 --> 00:02:51.459
But category theory is essentially how we
describe all of these different kinds of

54
00:02:51.459 --> 00:02:52.240
behaviors.

55
00:02:52.240 --> 00:02:55.811
And each different thing is some mixture
of other different kinds of things.

56
00:02:55.811 --> 00:02:57.510
So what category does it fit into?

