WEBVTT

1
00:00:00.000 --> 00:00:03.400
&gt;&gt; Kyle Simpson: Let's do a practice
exercise on this topic of closure.

2
00:00:03.400 --> 00:00:05.140
It feels like a really important topic.

3
00:00:05.140 --> 00:00:07.147
We're probably gonna keep
coming against it over and

4
00:00:07.147 --> 00:00:08.670
over again in functional programming.

5
00:00:08.670 --> 00:00:11.292
It's good for
us to get some more exposure to it.

6
00:00:11.292 --> 00:00:15.900
In this exercise, we're going to
practice closure, by building a utility.

7
00:00:15.900 --> 00:00:17.095
It may seem a little strange.

8
00:00:17.095 --> 00:00:20.490
We're building up a utility
that we'll call stringBuilder.

9
00:00:20.490 --> 00:00:24.280
If you look at the exercise and
specifically look at the test cases down

10
00:00:24.280 --> 00:00:27.860
at the bottom, you'll see what
this is supposed to be able to do.

11
00:00:27.860 --> 00:00:32.420
We're supposed to be able to call
this function, stringBuilder and

12
00:00:32.420 --> 00:00:34.590
pass it a single string.

13
00:00:34.590 --> 00:00:38.060
And then if we call it again with
another string and another string and

14
00:00:38.060 --> 00:00:41.860
another string, we can just keep
adding more and more strings to it.

15
00:00:41.860 --> 00:00:47.975
Until we call it once without any
input and then it's gonna go back and

16
00:00:47.975 --> 00:00:52.700
concatenate all of those strings
together and give us one final string.

17
00:00:54.740 --> 00:00:56.910
And also, not only will it do that,

18
00:00:56.910 --> 00:01:01.900
but we should be able to capture those
individual specialized functions.

19
00:01:01.900 --> 00:01:05.160
So we should be able to capture for
example, Hello,

20
00:01:05.160 --> 00:01:10.190
is the intermediate function,
after stringBuilder was called with Hello.

21
00:01:10.190 --> 00:01:14.450
And we should be able to call this twice,
producing two different functions,

22
00:01:14.450 --> 00:01:19.990
in this case Kyle and Susan and
then we should be able to call Kyle again.

23
00:01:19.990 --> 00:01:24.660
And when we call it with nothing, this
question should come back as the actual

24
00:01:24.660 --> 00:01:27.900
string and greeting should come
back as the actual string.

25
00:01:27.900 --> 00:01:31.470
Okay, this is a bit of
a challenging exercise.

26
00:01:31.470 --> 00:01:35.300
A little bit of a hint can
be seen in the read me, so

27
00:01:35.300 --> 00:01:37.409
you should definitely
check out these hints.

28
00:01:38.720 --> 00:01:41.590
It should be able to give you
everything that you need, but

29
00:01:41.590 --> 00:01:43.660
it will be a little bit tricky and
challenging.

30
00:01:43.660 --> 00:01:45.510
Make sure all of the test cases pass.

