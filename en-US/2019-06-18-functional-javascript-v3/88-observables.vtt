WEBVTT

1
00:00:00.090 --> 00:00:03.220
&gt;&gt; Kyle Simpson: Can you see why lazy
array, if it existed, would allow us to

2
00:00:03.220 --> 00:00:06.914
adapt all of the concepts that we
know about functional programming,

3
00:00:06.914 --> 00:00:08.745
we know how to do them over arrays.

4
00:00:08.745 --> 00:00:12.311
Well, now we can do them over lazy arrays,
which means we can do all

5
00:00:12.311 --> 00:00:16.720
of these functional things over time,
including even things like transducing.

6
00:00:17.910 --> 00:00:20.580
You could even do monads over time.

7
00:00:22.140 --> 00:00:25.520
Everybody follow what I'm saying,
if we had this sort of a lazy array or

8
00:00:25.520 --> 00:00:28.670
a lazy map sort of function.

9
00:00:28.670 --> 00:00:32.000
Well, we don't have map lazy,
and we don't have lazy array, but

10
00:00:32.000 --> 00:00:34.590
what we do have is called observables.

11
00:00:35.750 --> 00:00:38.620
A lazy array,
the way I have formulated it for

12
00:00:38.620 --> 00:00:42.548
you, is essentially,
conceptually an observable.

13
00:00:44.423 --> 00:00:46.503
&gt;&gt; Kyle Simpson: If you haven't
heard about observables,

14
00:00:46.503 --> 00:00:50.680
my favorite metaphor for
them is it's kind of like a spreadsheet.

15
00:00:50.680 --> 00:00:55.750
If you take a value in a spreadsheet,
like you put three in the cell A1, and

16
00:00:55.750 --> 00:01:02.340
then over here in cell B5,
you say B5 is whatever is in A1 times two.

17
00:01:03.850 --> 00:01:07.520
And so now B5 is showing you the value 6,
right?

18
00:01:07.520 --> 00:01:09.610
Because you have three here and six here.

19
00:01:09.610 --> 00:01:11.659
What happens if you change that to 4?

20
00:01:11.659 --> 00:01:15.690
If you change sell A1 to 4,
what's going to show up and cell B5?

21
00:01:17.190 --> 00:01:19.570
Instantaneously it's gonna show 8, right?

22
00:01:19.570 --> 00:01:24.216
There is a relationship
between the cell B5 and A1 and

23
00:01:24.216 --> 00:01:28.963
that relationship is a mapping
that doubles the value.

24
00:01:28.963 --> 00:01:31.550
It is that equation that
is mapping the value.

25
00:01:31.550 --> 00:01:35.378
And that is essentially the same
thing as what we were just showing.

26
00:01:35.378 --> 00:01:40.290
It's the idea of an observable which
is an asynchronous flow of data.

27
00:01:41.490 --> 00:01:46.736
If I put the number four here, it flows
through a mapping operation over to this

28
00:01:46.736 --> 00:01:51.822
other cell and if I were to take another
cell like C10 and have it be whatever

29
00:01:51.822 --> 00:01:57.090
is in B5 plus one, what a C5 gonna be
showing, it's gonna be showing 9 now.

30
00:01:57.090 --> 00:02:00.470
What happens if I change
this value to 5 again?

31
00:02:00.470 --> 00:02:04.890
Well, now, we're gonna have 5, 10 and 11.

32
00:02:04.890 --> 00:02:08.300
You see how the data flowed
asynchronously through that stream?

33
00:02:09.510 --> 00:02:13.750
That's my favorite metaphor for
describing the concept of an observable.

