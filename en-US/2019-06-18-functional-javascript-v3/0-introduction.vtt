WEBVTT

1
00:00:00.160 --> 00:00:03.980
&gt;&gt; Kyle Simpson: Welcome to
version three of this workshop.

2
00:00:03.980 --> 00:00:06.770
I'm excited about the updates
that we're going to have

3
00:00:06.770 --> 00:00:08.460
in Functional-Light JavaScript.

4
00:00:08.460 --> 00:00:11.880
We're going to be talking over
the course of the next two days

5
00:00:11.880 --> 00:00:14.980
about functional programming,
what that means,

6
00:00:14.980 --> 00:00:19.340
how to restructure our brains, because
it is a very different way of thinking.

7
00:00:19.340 --> 00:00:23.125
We have to restructure our
brains to think about and

8
00:00:23.125 --> 00:00:26.215
try to solve problems in a different way.

9
00:00:26.215 --> 00:00:29.453
And if you have never done
functional programming before,

10
00:00:29.453 --> 00:00:32.830
don't worry,
we're going to go from the very basics.

11
00:00:32.830 --> 00:00:37.750
If you've done functional programming
before, you should be aware that this is

12
00:00:37.750 --> 00:00:42.050
not exactly functional programming
with the little trademark next to it.

13
00:00:42.050 --> 00:00:46.530
It's my brand of functional programming
that I call Functional-Light,

14
00:00:46.530 --> 00:00:48.470
that's where this name comes from.

15
00:00:48.470 --> 00:00:52.700
So, this is the name of this course,
it's also the name of the companion book

16
00:00:52.700 --> 00:00:55.026
of the same name,
Functional-Light JavaScript.

17
00:00:55.026 --> 00:00:59.999
So, if you are looking for somewhere to go
from here, somewhere to dig into more of

18
00:00:59.999 --> 00:01:03.766
the concepts, or to get more of
the background on something.

19
00:01:03.766 --> 00:01:07.380
If we go too quickly through something and
you need to go back and review,

20
00:01:07.380 --> 00:01:10.330
I strongly recommend
digging through that book.

21
00:01:10.330 --> 00:01:14.730
Fair warning, even though it says light
in the title, both in this course and

22
00:01:14.730 --> 00:01:21.250
in the book, it is not an intro beginner,
light and easy sort of a course.

23
00:01:21.250 --> 00:01:25.620
What we mean by light, it's not deep.

24
00:01:25.620 --> 00:01:28.580
And actually we are going to go
pretty deep into these topics.

25
00:01:28.580 --> 00:01:32.772
But rather, what I mean by light is
that we're not trying to inundate you

26
00:01:32.772 --> 00:01:37.584
with terminology, mathematic notation,
which is what I would call the top-down

27
00:01:37.584 --> 00:01:40.420
approach to teaching
functional programming.

28
00:01:41.420 --> 00:01:46.708
And I don't know what your experience
may have been, trying to be exposed

29
00:01:46.708 --> 00:01:52.360
to materials, books, blogs, talks,
courses on functional programming.

30
00:01:52.360 --> 00:01:55.902
But I've been doing this
programming thing for a long time,

31
00:01:55.902 --> 00:01:59.480
I'm now probably 25ish
years into programming.

32
00:01:59.480 --> 00:02:03.860
And almost all of that has been in
JavaScript, or at least aware of and

33
00:02:03.860 --> 00:02:05.720
familiar with JavaScript.

34
00:02:05.720 --> 00:02:07.970
And I have gone to countless talks,

35
00:02:07.970 --> 00:02:12.080
read countless blog posts, tried to
pick up and read the first chapter

36
00:02:12.080 --> 00:02:16.550
of I don't even know how many books on
the topic of functional programming.

37
00:02:16.550 --> 00:02:20.510
And it always seems to me like the first
couple of paragraphs are like, yeah,

38
00:02:20.510 --> 00:02:22.140
I'm tracking with this, I get this.

39
00:02:22.140 --> 00:02:26.650
And then all of a sudden,
they throw a word in like a monad or

40
00:02:26.650 --> 00:02:27.230
something like that.

41
00:02:27.230 --> 00:02:28.960
They'll throw a word in like that.

42
00:02:28.960 --> 00:02:31.840
And I'm immediately,
because those words don't mean anything in

43
00:02:31.840 --> 00:02:34.990
the English language,
I'm immediately out of context.

44
00:02:34.990 --> 00:02:38.390
Some of you may have that same experience,
where you feel like, wait a minute,

45
00:02:38.390 --> 00:02:42.240
I was tracking and then all of a sudden
we just went completely off the rails.

46
00:02:42.240 --> 00:02:45.382
Not a little bit at a time, but
just entirely off the rails.

47
00:02:45.382 --> 00:02:49.966
Or maybe it's not a term, but maybe
it's some sort of mathematic equation,

48
00:02:49.966 --> 00:02:54.620
or they talk about something like category
theory or something like that, and

49
00:02:54.620 --> 00:02:59.220
immediately, I'm off the rails,
I'm losing track of what's happening.

50
00:02:59.220 --> 00:03:03.650
So by the first 10 or 15 minutes of
every functional talk I've ever been to,

51
00:03:03.650 --> 00:03:08.460
my eyes have glazed over, and
I'm just barely keeping up, if even that.

52
00:03:09.660 --> 00:03:12.850
So maybe that's your story, and
it certainly has been my story.

53
00:03:12.850 --> 00:03:17.530
It's felt to me like
running face first into

54
00:03:17.530 --> 00:03:22.690
the side of a cliff wall of a mountain,
where I kept wanting to,

55
00:03:22.690 --> 00:03:24.900
I was motivated, and
motivation wasn't the problem.

56
00:03:24.900 --> 00:03:28.780
I kept wanting to understand what
this functional thing was all about.

57
00:03:28.780 --> 00:03:34.833
I remember, actually, probably more than
20 years ago, I remember hearing someone.

58
00:03:34.833 --> 00:03:37.220
And that would have been early
on in my programming career,

59
00:03:37.220 --> 00:03:39.844
so I certainly wouldn't have had
any sense of what the gravitas,

60
00:03:39.844 --> 00:03:41.532
what the meaning of this would have been.

61
00:03:41.532 --> 00:03:44.318
But I remember hearing somebody saying
something like blah, blah, blah,

62
00:03:44.318 --> 00:03:45.870
functional programming.

63
00:03:45.870 --> 00:03:50.680
And I remember thinking to myself, I'm
good with that because I use functions.

64
00:03:50.680 --> 00:03:55.800
And it turns out that I
didn't know anything at all

65
00:03:55.800 --> 00:03:57.550
about what I was doing there.

66
00:03:57.550 --> 00:04:00.580
That it turns out that the idea of having

67
00:04:00.580 --> 00:04:05.250
a keyword in your program called function,
that's not enough.

68
00:04:05.250 --> 00:04:11.450
So I decided to write this book,
and I decided to build this course.

69
00:04:11.450 --> 00:04:16.515
Because for me, all of the existing
materials, while completely valid and

70
00:04:16.515 --> 00:04:20.248
totally right,
I have absolutely no critique of them.

71
00:04:20.248 --> 00:04:20.867
Other than,

72
00:04:20.867 --> 00:04:24.990
for whatever reason, they didn't work with
the way that my brain approached things.

73
00:04:24.990 --> 00:04:29.500
They didn't align with my background.

74
00:04:29.500 --> 00:04:34.690
And I felt inferior about that,
by the way, because I do have a CS degree.

75
00:04:34.690 --> 00:04:39.520
I have a background in computer science,
and I took a lot of math courses.

76
00:04:39.520 --> 00:04:44.201
And so, it's particularly pronounced
that I feel inferior when

77
00:04:44.201 --> 00:04:47.021
somebody says well, it's just math.

78
00:04:47.021 --> 00:04:51.270
And I'm like, well, I'm pretty good
at math and I still don't get it.

79
00:04:51.270 --> 00:04:54.810
And the reason this course is
called Functional-Light JavaScript,

80
00:04:54.810 --> 00:04:57.610
the reason the book is called
that is because I wanted to take,

81
00:04:57.610 --> 00:05:01.420
rather than the top-down approach,
a bottom-up approach.

82
00:05:01.420 --> 00:05:05.160
Speaking of the mountain, the cliff
face that I kept running into and

83
00:05:05.160 --> 00:05:06.080
feeling inferior.

84
00:05:06.080 --> 00:05:09.390
Feeling like I just somehow wasn't
good enough, that I was dumb or

85
00:05:09.390 --> 00:05:11.530
that something was wrong with me.

86
00:05:11.530 --> 00:05:16.622
I kept having people say to me, well, it's
great and it's amazing and it's awesome.

87
00:05:16.622 --> 00:05:19.390
And I'm like,
the problem is not my motivation.

88
00:05:19.390 --> 00:05:24.330
I know smart people that know functional
programming, and I totally agree with them

89
00:05:24.330 --> 00:05:27.640
that it would be great for
me to know functional programming.

90
00:05:27.640 --> 00:05:29.634
The problem is the path.

91
00:05:29.634 --> 00:05:31.289
And actually the problem
is not even the path,

92
00:05:31.289 --> 00:05:33.920
the problem is even more
fundamental than that.

93
00:05:33.920 --> 00:05:38.060
It's like if you walked up to, I don't
know if any of you are rock climbers,

94
00:05:39.210 --> 00:05:42.060
earlier in my life, let's say,
I did some rock climbing.

95
00:05:42.060 --> 00:05:45.463
I am definitely not a rock
climber at this point, okay?

96
00:05:45.463 --> 00:05:47.495
But I liked the idea of rock climbing,

97
00:05:47.495 --> 00:05:51.126
I would love to just be one of those
people that could zip up the wall.

98
00:05:51.126 --> 00:05:53.145
I watched this documentary the other day,
and

99
00:05:53.145 --> 00:05:56.455
this guy's like doing this speed racing
up the rock climbing or whatever.

100
00:05:56.455 --> 00:05:59.100
I'd love to do that, but
that's not me, okay?

101
00:05:59.100 --> 00:06:03.850
I'm not a rock climber, but
I can imagine the moment walking up to

102
00:06:03.850 --> 00:06:07.720
the cliff wall or
a rock climbing wall in your favorite gym.

103
00:06:08.970 --> 00:06:13.190
And somebody who is very experienced
in it, who's already up on the wall,

104
00:06:13.190 --> 00:06:16.560
up near the top, yelling down at you,
just go ahead and

105
00:06:16.560 --> 00:06:18.930
grab that equipment and
you can climb right on up.

106
00:06:20.200 --> 00:06:22.560
And they point to this pile of
equipment sitting on the ground.

107
00:06:23.630 --> 00:06:26.630
And that's what it's felt like to
me with functional programming,

108
00:06:26.630 --> 00:06:29.140
is that we start talking about
things that make sense to me.

109
00:06:29.140 --> 00:06:33.520
And then all of a sudden they say, and by
the way, the carabiner, or and by the way,

110
00:06:33.520 --> 00:06:35.260
this such and such not on the rope, or

111
00:06:35.260 --> 00:06:39.240
they start using things as if
I already know what they are.

112
00:06:39.240 --> 00:06:42.190
They start using those terms as if
I already know what they are, or

113
00:06:42.190 --> 00:06:45.270
they use a process to
describe those things,

114
00:06:45.270 --> 00:06:49.590
that they're assuming that process
is already familiar to me.

115
00:06:49.590 --> 00:06:50.720
And that's where I get lost,

116
00:06:50.720 --> 00:06:55.440
and it would be the same thing if somebody
tried as an experienced rope climber,

117
00:06:55.440 --> 00:07:00.580
to explain to me the very basics of
what on earth is this metal loop for?

118
00:07:00.580 --> 00:07:02.530
That I happen to know
is called a carabiner.

119
00:07:02.530 --> 00:07:03.850
What is that for?

120
00:07:03.850 --> 00:07:04.520
What does it do?

121
00:07:04.520 --> 00:07:05.270
How does it work?

122
00:07:05.270 --> 00:07:08.250
What are its properties and
characteristics?

123
00:07:08.250 --> 00:07:13.382
Because what I can imagine is for
the most experienced of the rock climbers

124
00:07:13.382 --> 00:07:17.953
out there, they are so far beyond
the idea of what is a carabiner?

125
00:07:17.953 --> 00:07:21.002
That they have forgotten what it
was like when they didn't know what

126
00:07:21.002 --> 00:07:21.810
a carabiner was.

127
00:07:24.160 --> 00:07:27.070
And I don't know if any of you
have ever had this experience with

128
00:07:27.070 --> 00:07:29.030
something else that you have learned.

129
00:07:29.030 --> 00:07:32.820
You're all excellent professionals at what
you do and you probably have at some time

130
00:07:32.820 --> 00:07:38.169
or another, tried to explain to somebody
else something that you're pretty good at.

131
00:07:39.740 --> 00:07:43.163
I get to do that for a living and
it's a particular joy.

132
00:07:43.163 --> 00:07:47.506
Because it forces me to come back
to understand on a regular basis,

133
00:07:47.506 --> 00:07:50.918
just how easy it is to lose track,
to lose empathy for

134
00:07:50.918 --> 00:07:55.070
someone who doesn't understand
what you're saying.

135
00:07:55.070 --> 00:07:56.020
I do it all the time.

136
00:07:56.020 --> 00:07:59.040
I use words, and then somebody looks
at me weird, and I'm like, yeah,

137
00:07:59.040 --> 00:08:00.060
you don't know what that word means.

138
00:08:00.060 --> 00:08:02.480
Let me explain what that concept means,
right?

139
00:08:02.480 --> 00:08:05.670
So it's a joy for
me to continue to come back to that.

140
00:08:05.670 --> 00:08:10.000
To be confronted with and come back
to those roots and ask those things.

141
00:08:10.000 --> 00:08:13.860
It's been said that if you can't
explain something to someone else,

142
00:08:13.860 --> 00:08:19.600
then you don't really understand it, but
that doesn't fully encapsulate the truth.

143
00:08:19.600 --> 00:08:23.020
Because at some point,
you can understand something so

144
00:08:23.020 --> 00:08:27.082
well that you may stop being able
to explain it to someone else.

145
00:08:27.082 --> 00:08:31.805
Doug Crockford said it this way years ago,
he said, the curse of the monad, and

146
00:08:31.805 --> 00:08:35.839
I'm gonna extrapolate that from monad,
which is a crazy concept.

147
00:08:35.839 --> 00:08:37.452
Which by the way,
by the end of this course,

148
00:08:37.452 --> 00:08:39.266
we are gonna understand what a monad is.

149
00:08:39.266 --> 00:08:43.090
But, he's said the curse of the monad,
which I'll extrapolate to functional

150
00:08:43.090 --> 00:08:46.460
programming in general,
the curse of functional programming

151
00:08:46.460 --> 00:08:48.730
is that once you understand it,
you stop being able to teach it.

152
00:08:50.580 --> 00:08:53.450
And I've experienced that
personally on many occasions,

153
00:08:53.450 --> 00:08:55.920
seeing people who write
these fantastic things.

154
00:08:55.920 --> 00:08:58.050
And I know they know what
they're talking about.

155
00:08:58.050 --> 00:09:00.050
It's not a question of, like, credential.

156
00:09:00.050 --> 00:09:02.350
It's not a question,
like they're an idiot.

157
00:09:02.350 --> 00:09:04.730
They're smart people, and
they know what they're talking about.

158
00:09:04.730 --> 00:09:07.308
But the way that they presented
is from the top-down,

159
00:09:07.308 --> 00:09:11.074
with the assumption that you already have
all of that training and background.

160
00:09:11.074 --> 00:09:13.589
And so they can use something
like the word carabiner, and

161
00:09:13.589 --> 00:09:14.730
you know what that means.

162
00:09:16.780 --> 00:09:18.318
I didn't know what a carabiner meant, and

163
00:09:18.318 --> 00:09:19.910
I didn't know what
a rope knot looked like.

164
00:09:21.250 --> 00:09:25.620
And so
I kept not benefiting from that material.

165
00:09:25.620 --> 00:09:26.220
So this book and

166
00:09:26.220 --> 00:09:30.100
this course are my attempt to
give you a ground-up perspective.

167
00:09:30.100 --> 00:09:31.440
Again, it's not a beginner intro.

168
00:09:31.440 --> 00:09:33.590
This is deep, heady, difficult stuff.

169
00:09:33.590 --> 00:09:36.540
And it's stuff that I still wrestle with,
I am still challenging with.

170
00:09:36.540 --> 00:09:40.330
So I'm not here to tell you,
I'm a functional programmer, okay?

171
00:09:40.330 --> 00:09:42.330
I have not arrived at
the top of the mountain and

172
00:09:42.330 --> 00:09:45.420
now I have all the clarity and
I can see everything.

173
00:09:45.420 --> 00:09:50.380
This is still a daily struggle that I
am trying to understand these concepts,

174
00:09:50.380 --> 00:09:53.010
and use them more effectively in my code.

175
00:09:53.010 --> 00:09:57.450
And I decided to write it down, so
that hopefully other people might benefit

176
00:09:57.450 --> 00:10:00.180
from my exploration,
my journey of learning.

177
00:10:00.180 --> 00:10:01.250
That's what this course is about.

