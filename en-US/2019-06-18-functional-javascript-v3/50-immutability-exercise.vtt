WEBVTT

1
00:00:00.008 --> 00:00:03.990
&gt;&gt; Kyle Simpson: Let's try an exercise
on this topic of immutability.

2
00:00:03.990 --> 00:00:08.750
Get some practice with both
assignment immutability as well

3
00:00:08.750 --> 00:00:11.630
as value immutability and
of a couple of different kinds.

4
00:00:11.630 --> 00:00:17.210
We'll look first at read only
data structures and then we'll

5
00:00:17.210 --> 00:00:23.080
also look at not changing a data structure
that's been passed into the function.

6
00:00:23.080 --> 00:00:26.660
This exercise won't be covering
actual immutable data structures like

7
00:00:26.660 --> 00:00:27.880
immutable js.

8
00:00:27.880 --> 00:00:28.390
But hopefully,

9
00:00:28.390 --> 00:00:31.630
these concepts will transfer into working
with something like immutable chance.

10
00:00:32.790 --> 00:00:36.940
In this exercise, you're gonna be
generating a set of lottery numbers.

11
00:00:36.940 --> 00:00:39.530
And because we're doing generation
of lottery numbers, of course,

12
00:00:39.530 --> 00:00:41.510
it's random generation.

13
00:00:41.510 --> 00:00:45.770
The goal here is to make
everything else pure except for

14
00:00:45.770 --> 00:00:48.690
that call that is doing
a random number generation.

15
00:00:48.690 --> 00:00:52.265
We wanna leave that everything else
using all of the principles that

16
00:00:52.265 --> 00:00:55.405
we've learned so
far in the course about function purity.

17
00:00:55.405 --> 00:00:59.195
So if I switch over to the exercise file,
you'll notice that we have a function that

18
00:00:59.195 --> 00:01:02.272
does the generation of
a random lottery number.

19
00:01:02.272 --> 00:01:04.472
That's okay that that one is impure, but

20
00:01:04.472 --> 00:01:07.972
we want to leave everything else
according to our principles.

21
00:01:07.972 --> 00:01:11.102
So we're going to fill out a definition
for a pick number function.

22
00:01:11.102 --> 00:01:15.162
And you'll notice that I have a wild true
loop there that supposed to pick a number

23
00:01:15.162 --> 00:01:20.230
and stick it in in some way into
the lucky lottery numbers array.

24
00:01:20.230 --> 00:01:22.670
Now, that is pretty easy,
we could just stick the numbers in.

25
00:01:22.670 --> 00:01:25.740
But the Read Me details
a set of constraints.

26
00:01:25.740 --> 00:01:29.170
First of all,
we want no duplicate lottery numbers.

27
00:01:29.170 --> 00:01:31.810
Now, that's not all that
likely that you would

28
00:01:31.810 --> 00:01:33.530
randomly generate the same lottery number.

29
00:01:33.530 --> 00:01:36.200
We wanna ensure that they
are no duplicates, so

30
00:01:36.200 --> 00:01:38.200
we wanna have unique lottery numbers.

31
00:01:38.200 --> 00:01:42.560
Also additionally, we want our pick number
to make sure that lucky lottery numbers

32
00:01:42.560 --> 00:01:45.320
always stays sorted in ascending order.

33
00:01:45.320 --> 00:01:48.640
So essentially, what you're gonna
want to do is have pick number

34
00:01:48.640 --> 00:01:52.620
generate a number and stick it into
the lucky lottery numbers list.

35
00:01:52.620 --> 00:01:56.060
If it's not already there and
then make sure the list is sorted.

36
00:01:56.060 --> 00:02:00.910
Now, keep in mind, that if pick
number calls lottery known directly,

37
00:02:00.910 --> 00:02:04.290
that makes pick number
not a pure function.

38
00:02:04.290 --> 00:02:08.400
So, remember what we talked about,
about extracting impurity,

39
00:02:08.400 --> 00:02:12.430
we don't want to embed the impurity
if there's someway to extract it.

40
00:02:12.430 --> 00:02:15.290
So, keep that in mind
also with the exercise.

