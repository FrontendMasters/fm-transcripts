WEBVTT

1
00:00:00.030 --> 00:00:02.081
&gt;&gt; Kyle Simpson: Quick
note on composition,

2
00:00:02.081 --> 00:00:07.813
this is a mathematical concept, but
there is a concept called associativity.

3
00:00:07.813 --> 00:00:10.724
Associativity is a mathematical concept.

4
00:00:10.724 --> 00:00:15.813
If I said one plus two plus three,
the plus operator is associative and

5
00:00:15.813 --> 00:00:20.556
that means that the way that I group
these, if I did one plus two and

6
00:00:20.556 --> 00:00:23.680
then did plus three, I'd end up with six.

7
00:00:24.760 --> 00:00:30.090
If I did two plus three first and
then added one, I'd also end up with six.

8
00:00:30.090 --> 00:00:33.550
So whatever order that I group them in,
it doesn't matter,

9
00:00:33.550 --> 00:00:36.020
I get the same result, right?

10
00:00:36.020 --> 00:00:39.440
That's a characteristic of math,
of certain math operations,

11
00:00:39.440 --> 00:00:40.970
is that they are associative.

12
00:00:40.970 --> 00:00:44.970
Well, the reason we bring this up is
because composition is also associative.

13
00:00:46.020 --> 00:00:49.950
Which means, if I have a list of
functions that need to be composed,

14
00:00:49.950 --> 00:00:53.050
I can compose them in any grouping.

15
00:00:53.050 --> 00:00:56.060
And I'm gonna still get
the same end result.

16
00:00:56.060 --> 00:00:58.080
So here I have a composed two utility.

17
00:00:58.080 --> 00:01:00.370
This one can only handle two at a time.

18
00:01:00.370 --> 00:01:04.400
It doesn't handle three or 20,
it just handles two, okay?

19
00:01:04.400 --> 00:01:08.849
So if I grouped minus two and
triple together and then composed that

20
00:01:08.849 --> 00:01:13.934
composition with increment, we get
the same thing as if I compose triple and

21
00:01:13.934 --> 00:01:19.117
increment and then compose that with
minus two, so let me show you that code.

22
00:01:19.117 --> 00:01:23.371
So I am going to say compose two
of minus and triple, minus 2 and

23
00:01:23.371 --> 00:01:25.390
triple, that's line 12.

24
00:01:25.390 --> 00:01:28.820
That composition is
composed with increment.

25
00:01:28.820 --> 00:01:32.532
So we still have the same right to left
ordering, we're still gonna do increment,

26
00:01:32.532 --> 00:01:33.389
triple minus two.

27
00:01:33.389 --> 00:01:39.078
The ordering is still gonna be
increment triple and minus two.

28
00:01:39.078 --> 00:01:41.250
That's what f is a composition of.

29
00:01:41.250 --> 00:01:45.960
Then I have p here, which does
compose two with triple and increment.

30
00:01:45.960 --> 00:01:48.030
And then that is composed with minus.

31
00:01:48.030 --> 00:01:51.420
Still the same order, increment,
triple, and minus two.

32
00:01:51.420 --> 00:01:56.590
The f and
the p functions look different, but

33
00:01:56.590 --> 00:02:01.110
they have the same result because
composition is associative.

34
00:02:01.110 --> 00:02:05.490
That's actually super useful to us,
because it means that we can

35
00:02:05.490 --> 00:02:10.780
actually do currying and
partial application on our compositions.

36
00:02:10.780 --> 00:02:14.500
You don't have to know all the functions
that are going to participate in

37
00:02:14.500 --> 00:02:17.310
a composition all up front.

38
00:02:17.310 --> 00:02:22.310
You could curry the compose utility and
provide two or three of them now, and

39
00:02:22.310 --> 00:02:25.540
then take that result and
compose it with something else later, and

40
00:02:25.540 --> 00:02:28.210
take that result and
compose it with something else later.

41
00:02:28.210 --> 00:02:29.380
And what are you doing?

42
00:02:29.380 --> 00:02:31.640
You're creating a more
specialized function every time.

43
00:02:33.290 --> 00:02:36.300
Because we're using currying to
make a more specialized function.

44
00:02:36.300 --> 00:02:41.600
So the associativity property of
composition sounds sort of a nuance but

45
00:02:41.600 --> 00:02:44.340
it's actually really critical
to making composition so useful.

