WEBVTT

1
00:00:00.000 --> 00:00:03.914
&gt;&gt; Kyle Simpson: All right, well, it's
time that we practice this candy factory,

2
00:00:03.914 --> 00:00:05.294
I mean, composition.

3
00:00:05.294 --> 00:00:07.780
So we've got a quick little exercise for
you,

4
00:00:07.780 --> 00:00:12.010
we're gonna define our own general
compose and general pipe function.

5
00:00:12.010 --> 00:00:16.658
Rather than having one that can only
take 2 or 3 or 4, we wanna write general

6
00:00:16.658 --> 00:00:22.330
functions that can take any number 2,
3, 4, 100, however many that we pass.

7
00:00:22.330 --> 00:00:24.333
You'll notice in the set up for
this exercise,

8
00:00:24.333 --> 00:00:28.310
we have several functions provided,
increment, decrement, double, and half.

9
00:00:28.310 --> 00:00:32.525
And then here are your compose and
pipe functions that you wanna implement.

10
00:00:32.525 --> 00:00:36.304
And you'll notice that you have several
functions set up here at the bottom,

11
00:00:36.304 --> 00:00:39.180
that's the ones that
you're going to test with.

12
00:00:39.180 --> 00:00:44.080
And so you want to make sure that
at the end all of these print true.

13
00:00:44.080 --> 00:00:46.180
You'll notice that in
each case the compose and

14
00:00:46.180 --> 00:00:49.650
the pipe are deliberately set up
to be the reverse of each other.

15
00:00:49.650 --> 00:00:55.764
So that's why f1(3) should return the same
thing as f2(3), because compose with

16
00:00:55.764 --> 00:01:02.280
increment,decrement should be the same
as pipe with decrement,increment, okay?

17
00:01:02.280 --> 00:01:05.090
One last little hint in
implementing compose and

18
00:01:05.090 --> 00:01:08.800
pipe is that you really only need
to implement one of these two.

19
00:01:08.800 --> 00:01:11.301
Pick either compose or
pipe and implement it.

20
00:01:11.301 --> 00:01:15.040
And then the other one can be implemented
in terms of the previous one but

21
00:01:15.040 --> 00:01:17.921
just reversing the list of
functions that you pass in.

