WEBVTT

1
00:00:00.250 --> 00:00:04.251
&gt;&gt; Kyle Simpson: All right, so now that
we've seen that we can apply an operation

2
00:00:04.251 --> 00:00:09.215
like map to a data structure, it's time
for an exercise where we get to practice

3
00:00:09.215 --> 00:00:13.070
with the other operations
applied to a data structure.

4
00:00:13.070 --> 00:00:17.552
So in this particular exercise,
the first part is for

5
00:00:17.552 --> 00:00:24.120
you to implement a filter and
a reduce that can work against our object.

6
00:00:24.120 --> 00:00:27.812
Just like we did in the slides
just a moment ago in the lecture,

7
00:00:27.812 --> 00:00:30.084
what we wanna do now is have a filter and

8
00:00:30.084 --> 00:00:34.490
a reduce that work alongside the map
that was provided in the slides.

9
00:00:34.490 --> 00:00:36.970
So that's gonna be part
one of this exercise.

10
00:00:36.970 --> 00:00:38.640
You wanna take a look
at the other functions.

11
00:00:38.640 --> 00:00:40.840
This Read Me says,
take a look at listSum and

12
00:00:40.840 --> 00:00:43.960
listProduct and
kinda see how the exercise is working.

13
00:00:43.960 --> 00:00:47.600
But primarily, what you're focused on
is implementing a filter object and

14
00:00:47.600 --> 00:00:48.830
a reduce object.

15
00:00:48.830 --> 00:00:55.127
And when you run the completed code, it
should print out that number 38886, okay?

16
00:00:55.127 --> 00:01:01.410
So in the exercise, you'll notice that we
have this object with some arrays in it.

17
00:01:01.410 --> 00:01:05.520
And we have this set of code
that is running a filter object,

18
00:01:05.520 --> 00:01:08.140
a map object, and a reduce object.

19
00:01:08.140 --> 00:01:12.060
And it should end up producing 3886.

20
00:01:12.060 --> 00:01:17.880
The provided function map object as
we saw in the slides is here for

21
00:01:17.880 --> 00:01:22.380
you, you need to take that same pattern
and implement filter object and

22
00:01:22.380 --> 00:01:25.400
reduce object in the same or
in a similar way.

23
00:01:26.660 --> 00:01:28.871
That's part one of the exercise.

24
00:01:28.871 --> 00:01:33.253
Then part two of the exercise,
you're going to be doing some point-free

25
00:01:33.253 --> 00:01:38.143
refactoring and using some of the things,
so there will be some more review here.

