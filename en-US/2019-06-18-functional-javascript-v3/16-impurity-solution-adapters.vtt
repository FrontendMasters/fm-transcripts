WEBVTT

1
00:00:00.210 --> 00:00:02.300
&gt;&gt; Kyle Simpson: Okay,
let's talk about the solution for

2
00:00:02.300 --> 00:00:05.410
part two of the impurity exercise.

3
00:00:05.410 --> 00:00:08.530
What we said was we wanna
take this getStudentsByID and

4
00:00:08.530 --> 00:00:12.770
make it as an adapter function
to the sortStudentsByID so

5
00:00:12.770 --> 00:00:17.890
that it will contain, if you will,
it will prevent from leaking out

6
00:00:17.890 --> 00:00:21.270
any of the side effects that
the sortStudentsByID would have.

7
00:00:21.270 --> 00:00:26.200
In fact, the side effect being that it
would modify that global students array.

8
00:00:26.200 --> 00:00:31.500
So because we're not containing
the lexical scope here, what we're gonna

9
00:00:31.500 --> 00:00:35.510
have to do is that brute-force technique,
that six steps, where we're gonna have to

10
00:00:35.510 --> 00:00:39.620
take the current snapshot of everything,
and then restore it afterwards.

11
00:00:39.620 --> 00:00:43.391
That's our basic approach.

12
00:00:43.391 --> 00:00:46.358
So getStudentsByID is gonna receive and

13
00:00:46.358 --> 00:00:51.072
existing list of students,
we'll call that curStudents, and

14
00:00:51.072 --> 00:00:55.015
that's gonna be the list we
set as our initial value.

15
00:00:55.015 --> 00:00:56.939
But before we set an initial value,

16
00:00:56.939 --> 00:01:00.290
we need to capture the existing
state of the global students.

17
00:01:00.290 --> 00:01:04.405
I'm going to call that origStudents,

18
00:01:04.405 --> 00:01:08.160
and that'll be students.slice.

19
00:01:08.160 --> 00:01:13.681
That's a copy, actually,
I need to do a slice because it's

20
00:01:13.681 --> 00:01:19.434
gonna actually modify it and
we need to keep a copy of the array.

21
00:01:19.434 --> 00:01:21.191
If we only had a reference to the array,

22
00:01:21.191 --> 00:01:25.080
then we would have a reference to the
modified array, which isn't what we want.

23
00:01:25.080 --> 00:01:30.003
So we're making a backup copy, if you
will, of students before we modify it,

24
00:01:30.003 --> 00:01:32.710
and then we're gonna set that as step one.

25
00:01:32.710 --> 00:01:36.890
Step two is to set up the initial
state for the students.

26
00:01:36.890 --> 00:01:43.151
So we wanna say students = curStudent,
we could, for

27
00:01:43.151 --> 00:01:48.196
good measure, make a copy of curStudents.

28
00:01:48.196 --> 00:01:49.790
So let's go ahead and do that.

29
00:01:49.790 --> 00:01:51.800
It doesn't really matter in
this particular case, but

30
00:01:51.800 --> 00:01:55.810
let's go ahead and, just for good measure,
we'll make a copy of curStudents.

31
00:01:55.810 --> 00:01:59.525
So now we have the original state set up,
we have the original state saved,

32
00:01:59.525 --> 00:02:05.063
initial state set up and
we wanna call them sortStudentsByID.

33
00:02:05.063 --> 00:02:09.668
And sortStudentsByID automatically
returns to us a value so

34
00:02:09.668 --> 00:02:14.450
we can do all in one step basically
steps four, or step three and

35
00:02:14.450 --> 00:02:18.871
step four, which is to call it,
make the modification and

36
00:02:18.871 --> 00:02:23.233
capture the new value,
we wanna call that new students.

37
00:02:26.698 --> 00:02:31.500
&gt;&gt; Kyle Simpson: That'll be the newly
modified, newly sorted order students.

38
00:02:31.500 --> 00:02:35.010
Step five,
we need to restore the previous state.

39
00:02:35.010 --> 00:02:38.882
So we need to say,
students = origStudents, and here,

40
00:02:38.882 --> 00:02:43.330
we don't need to make another
copy since we're just restoring.

41
00:02:43.330 --> 00:02:48.820
And step six is to return that new
students state that we capture.

42
00:02:52.303 --> 00:02:56.027
&gt;&gt; Kyle Simpson: Let's take a look and
seeing how this code behaves and

43
00:02:56.027 --> 00:02:59.020
we should see all true
is on our test cases.

44
00:03:01.500 --> 00:03:04.830
What mistake did I make, sortStudentsByID.

45
00:03:04.830 --> 00:03:07.820
&gt;&gt; Speaker 2: The ID is capital D 2
&gt;&gt; Kyle Simpson: There we go.

46
00:03:10.320 --> 00:03:11.620
Thank you very much.

47
00:03:14.280 --> 00:03:16.463
Let's try it again.

48
00:03:16.463 --> 00:03:18.089
There we go, all truth, okay.

49
00:03:18.089 --> 00:03:18.589
[LAUGH]

