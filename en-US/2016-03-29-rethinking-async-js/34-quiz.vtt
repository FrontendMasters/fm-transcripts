WEBVTT

1
00:00:00.000 --> 00:00:04.072
[MUSIC]

2
00:00:04.072 --> 00:00:06.162
&gt;&gt; Kyle: I thought it was
a good opportunity for

3
00:00:06.162 --> 00:00:10.290
us to take a quick look back at what
we've gone through over this workshop.

4
00:00:12.230 --> 00:00:16.240
As I said, this represents kind of the
baseline that I really want all JavaScript

5
00:00:16.240 --> 00:00:18.090
developers to feel like they can get to.

6
00:00:19.120 --> 00:00:22.250
So it's kind of a full court press saying,
let's get the word out,

7
00:00:22.250 --> 00:00:24.900
let's get people practicing and
trying to get to that point.

8
00:00:24.900 --> 00:00:27.220
So, let's make sure we
understand where we've come,

9
00:00:27.220 --> 00:00:29.960
cuz we've come quite a way since
the beginning of the workshop, so far.

10
00:00:31.208 --> 00:00:37.262
So first, in your own words, how would
you describe to me what callback hell is?

11
00:00:37.262 --> 00:00:38.564
What is it really?

12
00:00:44.331 --> 00:00:46.475
&gt;&gt; Speaker 2: Inversion of control.

13
00:00:46.475 --> 00:00:48.880
&gt;&gt; Kyle: Inversion of control
is one of the key aspects.

14
00:00:48.880 --> 00:00:49.450
What else?

15
00:00:51.910 --> 00:00:53.468
&gt;&gt; Speaker 2: Out of sequence.

16
00:00:53.468 --> 00:00:56.270
&gt;&gt; Kyle: The non-local,
non-sequential reasoning.

17
00:00:56.270 --> 00:00:57.470
So what is callback hell?

18
00:00:57.470 --> 00:01:02.410
Callback hell isn't deficiency
of the callbacks pattern alone,

19
00:01:02.410 --> 00:01:05.130
when you don't have anything else but
the callback.

20
00:01:05.130 --> 00:01:08.700
It's not capable of addressing
these major deficiencies.

21
00:01:08.700 --> 00:01:10.140
One of them being a version of control.

22
00:01:10.140 --> 00:01:14.530
One of them being non-local
non-sequential reasoning.

23
00:01:14.530 --> 00:01:15.430
So callbacks,

24
00:01:15.430 --> 00:01:19.340
while they're the atomic fundamental
building block upon which everything we

25
00:01:19.340 --> 00:01:23.330
doing, even that fancy generator stuff
is still got callbacks happening.

26
00:01:24.500 --> 00:01:26.770
But without those
additional patterns on top,

27
00:01:26.770 --> 00:01:29.650
the callbacks are not capable
of addressing these issues.

28
00:01:29.650 --> 00:01:33.760
So we need to put higher order patterns
on top of them to address those problems.

29
00:01:33.760 --> 00:01:36.280
That's what callback hell really is?

30
00:01:36.280 --> 00:01:40.320
You know is that really has very little
to do with the nesting an indentation.

31
00:01:40.320 --> 00:01:43.690
That's a side symptom of vast, okay.

32
00:01:45.800 --> 00:01:47.390
What is a Promise?

33
00:01:47.390 --> 00:01:48.590
I gave two or

34
00:01:48.590 --> 00:01:52.590
three different metaphoric ways or
ways of thinking about what a Promise is.

35
00:01:52.590 --> 00:01:54.450
A conceptually speaking,
what is a Promise?

36
00:01:57.510 --> 00:01:59.680
&gt;&gt; Speaker 2: It's a placeholder for
a value.

37
00:01:59.680 --> 00:02:00.670
&gt;&gt; Kyle: Placeholder for a value.

38
00:02:00.670 --> 00:02:03.550
It's a future cheeseburger, right?

39
00:02:03.550 --> 00:02:06.490
It's a future value, it's the cheeseburger
I'm going to get at some point.

40
00:02:08.250 --> 00:02:08.870
What else is it?

41
00:02:11.800 --> 00:02:12.300
&gt;&gt; Speaker 2: Trust.

42
00:02:13.410 --> 00:02:14.720
&gt;&gt; Kyle: That's what it does and

43
00:02:14.720 --> 00:02:17.610
we'll get to talking more about
what it does in just a minute.

44
00:02:17.610 --> 00:02:19.370
But metaphorically,

45
00:02:19.370 --> 00:02:22.130
I gave you at least two other ways
of thinking about what it does.

46
00:02:26.470 --> 00:02:28.400
Remember, I talked about it
being a completion event.

47
00:02:28.400 --> 00:02:31.180
It's like an event listener
that we get back and

48
00:02:31.180 --> 00:02:34.780
we can register for a completion event,
in this case is called the then event.

49
00:02:35.980 --> 00:02:39.780
It's another way and another third
way of thinking about it is that,

50
00:02:39.780 --> 00:02:40.860
it's a callback manager.

51
00:02:41.920 --> 00:02:44.730
We pass our callback to
the promise system and

52
00:02:44.730 --> 00:02:48.620
it manages them in a way that gives
us that trust as you just said.

53
00:02:48.620 --> 00:02:50.500
We want that trust back.

54
00:02:50.500 --> 00:02:53.610
And by passing them into
the promise system,

55
00:02:53.610 --> 00:02:56.470
we know that promise system
are designed with that trust.

56
00:02:56.470 --> 00:03:00.450
So it solves a version of control because
instead of passing our callbacks into

57
00:03:00.450 --> 00:03:04.740
a third party that we don't trust,
instead they give us a promise back

58
00:03:04.740 --> 00:03:09.800
a trustable system and
we let that system manager called us.

59
00:03:09.800 --> 00:03:12.160
So an invert that inversion of control or

60
00:03:12.160 --> 00:03:15.200
rather just simply restraints
the control that we always have.

61
00:03:17.900 --> 00:03:19.010
How do you pause a generator?

62
00:03:20.470 --> 00:03:21.240
&gt;&gt; Speaker 3: Yield.

63
00:03:21.240 --> 00:03:22.756
&gt;&gt; Kyle: Yield, and
how do you resume a generator?

64
00:03:22.756 --> 00:03:25.102
&gt;&gt; Speaker 3: Iterate.next.

65
00:03:25.102 --> 00:03:30.027
&gt;&gt; Kyle: .next, and what was that one
magical trick for combining generators and

66
00:03:30.027 --> 00:03:31.462
promises together?

67
00:03:35.468 --> 00:03:36.550
&gt;&gt; Speaker 3: Yield a promise.

68
00:03:36.550 --> 00:03:38.680
&gt;&gt; Kyle: Yielding a promise, exactly.

69
00:03:38.680 --> 00:03:41.725
Yield a promise and
then the promise resumes the generator.

70
00:03:41.725 --> 00:03:44.403
It's accurate, okay?

71
00:03:44.403 --> 00:03:45.237
Great.

72
00:03:45.237 --> 00:03:47.330
You want to read more about generators.

73
00:03:47.330 --> 00:03:50.390
I have a four part blog post series to
read about it in addition to the books.

74
00:03:50.390 --> 00:03:51.790
So there's plenty to go and

75
00:03:51.790 --> 00:03:54.680
read in there and I challenge you
encourage you to go dig in on this.

