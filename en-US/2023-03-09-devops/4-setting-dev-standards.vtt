WEBVTT

1
00:00:00.000 --> 00:00:02.719
So we've talked about defining DevOps.

2
00:00:02.719 --> 00:00:06.713
Cool, I appreciate you guys
still being with me here.

3
00:00:06.713 --> 00:00:10.493
Let's talk about standards versus rules.

4
00:00:10.493 --> 00:00:12.336
How many here like rules?

5
00:00:12.336 --> 00:00:15.702
Anybody in programming,
anybody like rules?

6
00:00:15.702 --> 00:00:18.365
Yeah, you like rules, okay.

7
00:00:18.365 --> 00:00:22.601
So more often than not I have
discovered that when you tell

8
00:00:22.601 --> 00:00:27.116
a developer that they have a rule
they immediately hate you.

9
00:00:27.116 --> 00:00:32.791
And so again not even talking about
programming now how do we get around that,

10
00:00:32.791 --> 00:00:33.411
right?

11
00:00:33.411 --> 00:00:37.616
How do I get around to the developer
yelling, say, I was gonna be like this?

12
00:00:37.616 --> 00:00:41.600
And then you simply go,
because it's a rule.

13
00:00:41.600 --> 00:00:47.841
Changing how you even conversate about
things, again, related to culture can

14
00:00:47.841 --> 00:00:53.912
be massively important when trying to
make impactful changes at companies.

15
00:00:53.912 --> 00:00:59.182
And so what I wanna kind of talk about
now is okay, we've defined DevOps,

16
00:00:59.182 --> 00:01:03.857
and we have a good idea of at least,
some of the things we wanna do,

17
00:01:03.857 --> 00:01:08.800
how do we do it in a way where we're
not just stepping over everybody?

18
00:01:08.800 --> 00:01:14.633
And I think that first step is going to be
implementing standards instead of rules,

19
00:01:14.633 --> 00:01:15.227
right.

20
00:01:15.227 --> 00:01:18.725
As I said,
developers don't like rules, however,

21
00:01:18.725 --> 00:01:23.094
they will adhere to standards for
the greater good of the product.

22
00:01:23.094 --> 00:01:27.287
Most of us I would hope will agree that
being in an engineering conversation and

23
00:01:27.287 --> 00:01:30.590
somebody brings up, well that's great,
but like this is for

24
00:01:30.590 --> 00:01:34.803
the greater good of the product, or
this is something we've all agreed upon.

25
00:01:34.803 --> 00:01:40.061
Normally that can be a way of saying,
okay, let's keep our guiding star,

26
00:01:40.061 --> 00:01:44.651
let's keep our focus, and
it will make it a little easier when you

27
00:01:44.651 --> 00:01:49.671
don't want developers to do things
that they probably shouldn't do.

28
00:01:49.671 --> 00:01:54.379
Rules are normally,
something that are pretty hot topics.

29
00:01:54.379 --> 00:01:59.562
And another thing I think about rules
that are not good is they don't seem like

30
00:01:59.562 --> 00:02:05.397
they're bendable, they don't seem like
you can change them, and that's not true.

31
00:02:05.397 --> 00:02:10.580
If somebody was to come into DevOps and
say, hey, we've got this standard,

32
00:02:10.580 --> 00:02:16.035
but it's terrible, it's wasting so
much of our time, I couldn't argue that.

33
00:02:16.035 --> 00:02:21.128
I'd have to sit down and be, okay, cool,
where are we failing, what can we do?

34
00:02:21.128 --> 00:02:23.837
Whereas somebody who hears that,

35
00:02:23.837 --> 00:02:27.132
well we do this as a rule
may not even bring it up.

36
00:02:27.132 --> 00:02:29.939
They may just say, well,
this is how we've done things and

37
00:02:29.939 --> 00:02:31.746
we're gonna keep saying it that way.

38
00:02:31.746 --> 00:02:35.996
And so, again, I think it's really
important to note here that

39
00:02:35.996 --> 00:02:40.496
developers don't like rules, but
they will adhere to standards.

40
00:02:40.496 --> 00:02:44.034
So what are DevOps standards?

41
00:02:44.034 --> 00:02:45.655
What are they actually?

42
00:02:45.655 --> 00:02:48.938
They're guidelines really or
best practices that organizations

43
00:02:48.938 --> 00:02:51.466
can follow to implement
standards successfully.

44
00:02:51.466 --> 00:02:55.736
These standards typically cover areas
such as communication, collaboration and

45
00:02:55.736 --> 00:03:00.189
automation, and can help organizations
improve their software development process

46
00:03:00.189 --> 00:03:02.756
and deliver better products
to their customers.

47
00:03:02.756 --> 00:03:06.547
To give an example of this,
at where I work,

48
00:03:06.547 --> 00:03:10.140
we have two different types of releases.

49
00:03:10.140 --> 00:03:15.099
We have a two week release schedule where
every two weeks the whole company comes

50
00:03:15.099 --> 00:03:18.518
together which some of us
probably can relate to this.

51
00:03:18.518 --> 00:03:23.601
The whole company comes together and
we get into Slack Channel and we work for

52
00:03:23.601 --> 00:03:28.301
three hours, four hours to getting
our deployment out essentially.

53
00:03:28.301 --> 00:03:30.520
That is the standard that we set.

54
00:03:30.520 --> 00:03:35.696
We said okay, well, every two weeks
we're gonna sit down and we're gonna

55
00:03:35.696 --> 00:03:40.708
get this deployment out the door,
keyway is not gonna do anything else,

56
00:03:40.708 --> 00:03:45.585
they're just gonna focus on this,
and that is how we do deployments.

57
00:03:45.585 --> 00:03:51.345
About six months ago or so,
we realized that that wasn't good.

58
00:03:51.345 --> 00:03:55.611
Does anyone have any idea why bringing 300
people together at one time might not be

59
00:03:55.611 --> 00:03:56.285
a good idea?

60
00:03:56.285 --> 00:03:58.615
[LAUGH].

61
00:03:58.615 --> 00:04:04.939
Yeah, it was something we started
realizing is nights would go until 6 PM.

62
00:04:04.939 --> 00:04:09.761
If any of you guys have ever dealt with
late night deployments, same been there.

63
00:04:09.761 --> 00:04:11.960
That's a problem, right?

64
00:04:11.960 --> 00:04:14.474
That's a problem that DevOps can solve.

65
00:04:14.474 --> 00:04:15.783
And so what did we do?

66
00:04:15.783 --> 00:04:19.095
We decided to implement
something called FBR or

67
00:04:19.095 --> 00:04:22.167
what we call our feature-based releases.

68
00:04:22.167 --> 00:04:25.542
And so the whole concept of
this is essentially that,

69
00:04:25.542 --> 00:04:29.367
instead of having everyone come
together every two weeks and

70
00:04:29.367 --> 00:04:34.242
basically hate each other, it was better
for us to build a system that enabled

71
00:04:34.242 --> 00:04:39.421
the developers to deploy on their own,
straight to production if they want it to.

72
00:04:39.421 --> 00:04:42.870
Now if they you know break it,
that's their fault but

73
00:04:42.870 --> 00:04:46.703
that's a standard that we've set,
where we said, okay,

74
00:04:46.703 --> 00:04:51.685
well, as DevOps we will create a flow for
you that you can rely on, depend on,

75
00:04:51.685 --> 00:04:55.692
if you need to rollback you have
the mechanisms there to do it.

76
00:04:55.692 --> 00:05:00.387
But at the end of the day, you can now use
this standard of deployment if you want,

77
00:05:00.387 --> 00:05:03.581
or you can use this standard
of deployment if you want.

78
00:05:03.581 --> 00:05:07.378
And we've made it so
that technically people can go from,

79
00:05:07.378 --> 00:05:12.268
the two week deployment and then slowly
move over to the FBR back and forth.

80
00:05:12.268 --> 00:05:16.492
Again we had to make it so
that people were excited about it.

81
00:05:16.492 --> 00:05:20.079
There's no reason to build anything if
nobody at your company is going to use it,

82
00:05:20.079 --> 00:05:21.261
especially with our job.

83
00:05:21.261 --> 00:05:23.946
So it was very important to
not just build a new flow so

84
00:05:23.946 --> 00:05:28.039
that people can easier deploy their
software, but it was also really important

85
00:05:28.039 --> 00:05:30.930
to build a flow that people
were excited about, right?

86
00:05:30.930 --> 00:05:35.523
Getting hype around it and things like
that, look how easy it is to just,

87
00:05:35.523 --> 00:05:38.506
in our case it's all powered by Jira,
actually.

88
00:05:38.506 --> 00:05:41.438
And so
you can literally just move a Jira and

89
00:05:41.438 --> 00:05:46.255
then it will simply deploy your your
thing for you, again standards.

90
00:05:46.255 --> 00:05:48.998
So let's talk a little bit
about each one of the steps.

91
00:05:48.998 --> 00:05:53.576
I'm gonna give you guys examples on
basically where I think you guys can start

92
00:05:53.576 --> 00:05:56.464
looking for
standards within your company, and

93
00:05:56.464 --> 00:05:59.845
hopefully these will be helpful
in ways that you can start

94
00:05:59.845 --> 00:06:04.439
potentially applying these at your
company, maybe if you don't have them.

95
00:06:04.439 --> 00:06:07.404
The first one is definitely
gonna be automation standards.

96
00:06:07.404 --> 00:06:09.778
Automating the software
deployment development and

97
00:06:09.778 --> 00:06:11.945
deployment process using
tools such as CI/CD.

98
00:06:11.945 --> 00:06:16.175
The main point here is that,
don't do anything twice,

99
00:06:16.175 --> 00:06:19.687
[LAUGH] there's no need,
save yourself time.

100
00:06:19.687 --> 00:06:23.613
If there's a circumstance where you're
spending more than five minutes on

101
00:06:23.613 --> 00:06:26.633
anything, try and automate it,
try and build CLI tools.

102
00:06:26.633 --> 00:06:29.887
Try and make it reproducible a lot easier.

103
00:06:29.887 --> 00:06:34.540
But the main point of having
automation standards is

104
00:06:34.540 --> 00:06:39.723
really about making sure that
the things you guys are doing

105
00:06:39.723 --> 00:06:44.600
a lot are no longer time
consuming within the company.

106
00:06:44.600 --> 00:06:48.106
Planning standards,
I know this sounds crazy but

107
00:06:48.106 --> 00:06:51.704
having good standards
around how you plan things.

108
00:06:51.704 --> 00:06:57.914
I don't expect DevOps engineers or people
who work in DevOps to be Scrum Masters,

109
00:06:57.914 --> 00:07:03.314
that's what PMs do, but our main focus
is still to even work with them,

110
00:07:03.314 --> 00:07:07.831
to sit down and say, okay,
are we on Scrum are we on Kanban?

111
00:07:07.831 --> 00:07:10.159
How does that work within
our infrastructure,

112
00:07:10.159 --> 00:07:11.914
do we have any concerns about that?

113
00:07:11.914 --> 00:07:16.374
We have a new massive change coming
down the pipeline, plan for it.

114
00:07:16.374 --> 00:07:20.232
You know what I mean,
let's prepare for this and so

115
00:07:20.232 --> 00:07:24.193
having good planning
standards is very important.

116
00:07:26.687 --> 00:07:30.838
Quality Standards, my gosh,
everybody please listen to this one.

117
00:07:30.838 --> 00:07:32.856
Please listen to this one.

118
00:07:32.856 --> 00:07:37.853
You have to have quality standards,
you have to, bottom line.

119
00:07:37.853 --> 00:07:42.114
If you don't, it's something you should
really be talking about it your company.

120
00:07:42.114 --> 00:07:44.480
What does quality standards mean?

121
00:07:44.480 --> 00:07:51.013
Version Control, configuration management,
making sure that you have good testing,

122
00:07:51.013 --> 00:07:55.294
good ways of auditing your
software after it's gone out.

123
00:07:55.294 --> 00:07:59.796
This is hands down one of the biggest
things that are lacked in

124
00:07:59.796 --> 00:08:04.754
software development in general,
at least my personal opinion.

125
00:08:04.754 --> 00:08:09.161
We do not set our quality standards
as high as we probably should,

126
00:08:09.161 --> 00:08:12.699
which is what introduces
a lot of problems later on.

127
00:08:12.699 --> 00:08:16.894
And so again doing things like versioning,
version control,

128
00:08:16.894 --> 00:08:20.296
just curious for
any of you guys here, and in chat,

129
00:08:20.296 --> 00:08:25.062
how many of you guys actually use
Simva versioning with your releases?

130
00:08:25.062 --> 00:08:28.543
Actually, 1.1, 1.2, 1.3, I knew it.

131
00:08:28.543 --> 00:08:31.630
Yeah, it's so uncommon, it really is.

132
00:08:31.630 --> 00:08:35.577
Unless you're working on a open source
project or something like that, right?

133
00:08:35.577 --> 00:08:38.927
Which is what you normally think of.

134
00:08:38.927 --> 00:08:46.241
Most companies are just using latest,
things like that.

135
00:08:46.241 --> 00:08:47.831
&gt;&gt; Are there any books or

136
00:08:47.831 --> 00:08:52.521
blogs you recommend that inspired
your philosophy on DevOps.

137
00:08:52.521 --> 00:08:54.111
&gt;&gt; No, I wish there were,

138
00:08:54.111 --> 00:08:58.012
there's definitely again some
white papers out there but

139
00:08:58.012 --> 00:09:03.121
a lot of it right now unfortunately is
just marketing, a lot of it really is.

140
00:09:03.121 --> 00:09:07.161
So it is really gonna be
important I think, for

141
00:09:07.161 --> 00:09:13.592
you to get your confidence,
which is why I'm showing what I'm showing.

142
00:09:13.592 --> 00:09:18.402
If you're not confident in what you're
doing, then you're definitely not

143
00:09:18.402 --> 00:09:23.212
doing DevOps, because DevOps is
definitely about having that confidence.

144
00:09:23.212 --> 00:09:27.973
And again, it may be unique to
your experience at your job,

145
00:09:27.973 --> 00:09:31.116
it may be unique to somewhere else, but

146
00:09:31.116 --> 00:09:36.178
I think that confidence is more
important than anything else.

147
00:09:36.178 --> 00:09:41.775
And yeah, I hope to see more
good information out there.

148
00:09:41.775 --> 00:09:45.697
The only other thing I can
think of that is helpful is,

149
00:09:45.697 --> 00:09:48.761
does anyone here know Kelsey Hightower?

150
00:09:48.761 --> 00:09:53.424
He's a very big, very well known engineer,
and he works at Google, but

151
00:09:53.424 --> 00:09:58.477
he's basically worked in DevOps for
most of his career, from what I can tell.

152
00:09:58.477 --> 00:10:01.372
He's a good source of information.

153
00:10:01.372 --> 00:10:05.727
I would say looking for people who are
willing to have a honest opinion about it,

154
00:10:05.727 --> 00:10:09.692
he's probably gonna be your best bet
with finding helpful resources and

155
00:10:09.692 --> 00:10:11.187
stuff like that right now.

156
00:10:14.256 --> 00:10:18.417
And again,
[LAUGH] hopefully later it'll get better.

157
00:10:18.417 --> 00:10:21.903
And again just to getting
back into the standards here,

158
00:10:21.903 --> 00:10:26.140
communication standards,
we talked a bit about quality, right?

159
00:10:26.140 --> 00:10:29.611
Well you can't really have quality
without good communication.

160
00:10:29.611 --> 00:10:34.934
And this is something that I think
is also really lacked as well,

161
00:10:34.934 --> 00:10:40.370
which is nobody really feels
encouraged to talk about anything.

162
00:10:40.370 --> 00:10:44.881
DevOps being such a lock
door with a lock key,

163
00:10:44.881 --> 00:10:49.392
what a lot of engineers
might not realize is,

164
00:10:49.392 --> 00:10:52.970
I would love to hear your thoughts.

165
00:10:52.970 --> 00:10:57.647
I would, because I think what
a good DevOps mindset is,

166
00:10:57.647 --> 00:11:01.727
is to basically think that
you know nothing, and

167
00:11:01.727 --> 00:11:05.726
you're basically just constantly learning.

168
00:11:05.726 --> 00:11:09.498
And I think that's good in engineering
in general, but especially with DevOps,

169
00:11:09.498 --> 00:11:12.778
when you have so many different types
of things that are coming across,

170
00:11:12.778 --> 00:11:14.052
what you have to deal with.

171
00:11:14.052 --> 00:11:16.161
You may be dealing with
a front end one day,

172
00:11:16.161 --> 00:11:20.145
you might be dealing with a back end the
other day, and the worst thing you can do,

173
00:11:20.145 --> 00:11:24.365
is block that communication with either
preconceived notions about things or,

174
00:11:24.365 --> 00:11:27.262
well, no, I thought it worked this way,
no, it worked.

175
00:11:27.262 --> 00:11:30.010
No, [LAUGH] let's just
figure out the problem.

176
00:11:30.010 --> 00:11:34.036
And so
communication is massively important.

177
00:11:34.036 --> 00:11:36.963
And that might even mean
something as simple as saying,

178
00:11:36.963 --> 00:11:40.093
once a week we'll have our team
sit down and work together.

179
00:11:40.093 --> 00:11:44.786
It might mean that you have other ways of
handling that communication, but if you

180
00:11:44.786 --> 00:11:49.410
are at a company right now where you feel
like communication is a problem to you,

181
00:11:49.410 --> 00:11:53.153
then that's probably something
that really needs to be fixed.

182
00:11:53.153 --> 00:11:57.643
Because it's gonna be hard to make
any type of impactful or big changes,

183
00:11:57.643 --> 00:12:00.747
especially when that
communication is lacking.

184
00:12:03.676 --> 00:12:09.508
And what's cool is is that you can even
utilize standards to improve them.

185
00:12:09.508 --> 00:12:11.923
So things like metrics, right?

186
00:12:11.923 --> 00:12:17.764
How many here actually use metrics
reliably at their companies for things?

187
00:12:17.764 --> 00:12:21.142
Okay, if, okay, gotcha,
gotcha, no worries.

188
00:12:21.142 --> 00:12:26.015
Yeah, that's another thing that is
unfortunately very falling right now

189
00:12:26.015 --> 00:12:28.423
in the industry is metrics and data.

190
00:12:28.423 --> 00:12:31.978
There's a lot of great companies
out there that will tell you,

191
00:12:31.978 --> 00:12:36.355
going back to your question of, how do
I compare the solution to the problem?

192
00:12:36.355 --> 00:12:39.457
Great one, there's tons of companies
out there right now that'll say,

193
00:12:39.457 --> 00:12:42.606
we'll get your data into charts and
it'll look great and you'll get alerts and

194
00:12:42.606 --> 00:12:44.126
then it's, well, what's my data?

195
00:12:44.126 --> 00:12:49.488
[LAUGH] Okay, that's cool that
you've got this cool product,

196
00:12:49.488 --> 00:12:52.981
but you can't think
about it from the tool.

197
00:12:52.981 --> 00:12:55.914
You have to think about what
kind of data do you care about.

198
00:12:55.914 --> 00:13:01.614
As an example, where I work,
we use CICD for our systems, obviously,

199
00:13:01.614 --> 00:13:06.744
and one of the big things we were
worried about was time spent just

200
00:13:06.744 --> 00:13:13.026
running things because we have some
monoliths that take forever to do things.

201
00:13:13.026 --> 00:13:17.254
And so one of the things that we decided
to do was just put in our own trackers for

202
00:13:17.254 --> 00:13:21.418
all of our jobs in CI and then start
marking those, so that we can simply say,

203
00:13:21.418 --> 00:13:25.422
okay, tests are running five minutes,
builds a running 10 minutes.

204
00:13:25.422 --> 00:13:28.522
And they're our metrics,
not somebody else's.

205
00:13:28.522 --> 00:13:30.106
Why would we double those metrics?

206
00:13:30.106 --> 00:13:32.530
Because then we can do other
things with those metrics.

207
00:13:32.530 --> 00:13:36.220
We can alert on those metrics,
we could solve our problems with it,

208
00:13:36.220 --> 00:13:40.329
rather than saying, hey, I'm just
gonna lean on what's already there.

