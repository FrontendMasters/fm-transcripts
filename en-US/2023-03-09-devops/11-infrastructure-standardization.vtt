WEBVTT

1
00:00:00.207 --> 00:00:04.573
We've talked a lot about theory,
practices,

2
00:00:04.573 --> 00:00:08.950
how to take good steps
towards building stuff.

3
00:00:08.950 --> 00:00:14.547
Another thing that I really wanted
to share with you guys is actually

4
00:00:14.547 --> 00:00:20.045
tools that when I first was even
introduced to the concept of them,

5
00:00:20.045 --> 00:00:25.757
I think were pretty massively
revolutionary at the company I was at.

6
00:00:25.757 --> 00:00:30.002
And I think that they solve
individual problems, but

7
00:00:30.002 --> 00:00:34.998
they also do a really good job of
showing what DevOps is supposed

8
00:00:34.998 --> 00:00:38.409
to have opinions about and what it's not.

9
00:00:38.409 --> 00:00:41.142
So yeah, we're gonna go ahead and
just jump right into it.

10
00:00:41.142 --> 00:00:45.647
We're gonna talk about
identifying problems, right?

11
00:00:45.647 --> 00:00:50.365
We talked a bit earlier again with
technical documents of how it helps you

12
00:00:50.365 --> 00:00:55.717
break down a problem so that you know if
it's worth doing it or not, essentially.

13
00:00:55.717 --> 00:01:01.357
But once you have a problem,
obviously you can start working on it, but

14
00:01:01.357 --> 00:01:08.409
how do you know what is a problem and what
isn't, how do you, see, this is an issue?

15
00:01:08.409 --> 00:01:12.880
Normally, something that is happening
a lot is something you're hearing a lot.

16
00:01:12.880 --> 00:01:17.821
Our deployments are slow, our pipelines
are slow, our merges are slow, right?

17
00:01:17.821 --> 00:01:20.678
These are the types of problems
that DevOps focuses on.

18
00:01:20.678 --> 00:01:27.574
There are two big problems that I
think any company deals with and,

19
00:01:27.574 --> 00:01:34.237
oops, not that, actually it is
around a lot of this stuff here.

20
00:01:34.237 --> 00:01:40.077
So we are gonna be working
with these services and

21
00:01:40.077 --> 00:01:43.780
tools and stuff like that, but

22
00:01:43.780 --> 00:01:49.206
they all kind of exemplify
a problem as well.

23
00:01:49.206 --> 00:01:53.936
Most companies probably have some
type of cloud account where they

24
00:01:53.936 --> 00:01:55.882
repository resources to.

25
00:01:55.882 --> 00:01:59.108
Most companies probably
have some type of GitHub or

26
00:01:59.108 --> 00:02:04.595
some type of repository location for code
or infrastructures code, stuff like that.

27
00:02:04.595 --> 00:02:11.445
And most companies normally have CI/CD or
at least they try to.

28
00:02:11.445 --> 00:02:14.460
However, it's one thing
to have these things, and

29
00:02:14.460 --> 00:02:19.474
it's another thing to actually wire them
together to solving problems effectively.

30
00:02:19.474 --> 00:02:26.525
And a lot of companies even have
existing tools like Node JS or

31
00:02:26.525 --> 00:02:31.514
Pulumi, or again, CircleCI for CI/CD.

32
00:02:31.514 --> 00:02:37.112
Say, we're a completely brand new company,
and we know that we wanna host an Amazon,

33
00:02:37.112 --> 00:02:40.332
we know that our source
code is gonna be on GitHub,

34
00:02:40.332 --> 00:02:44.805
we know that we wanna use CircleCI or
something like that for CI/CD.

35
00:02:44.805 --> 00:02:49.548
But we don't want to move forward
until we're confident that we have

36
00:02:49.548 --> 00:02:51.185
good opinionations and

37
00:02:51.185 --> 00:02:56.037
standards around the things that
we're gonna put out there, right?

38
00:02:56.037 --> 00:03:01.932
And this is what's going to lead me to our
first two problems that we can work on and

39
00:03:01.932 --> 00:03:04.717
create technical documents around.

40
00:03:04.717 --> 00:03:08.888
The first one is gonna be
standardizing infrastructure, right?

41
00:03:08.888 --> 00:03:14.710
Too many people too often have opinions
on how something should be deployed.

42
00:03:14.710 --> 00:03:22.269
The reality of it is, it should be
a collaboration and an ongoing process.

43
00:03:22.269 --> 00:03:26.698
Frontend doesn't necessarily have
the complete control to say how they

44
00:03:26.698 --> 00:03:27.867
deploy frontend.

45
00:03:27.867 --> 00:03:31.998
They shouldn't, it should be
a collaboration between frontend

46
00:03:31.998 --> 00:03:35.385
infrastructure, again,
IT or anything like that.

47
00:03:35.385 --> 00:03:38.270
And it's actually the same
way with even CI/CD.

48
00:03:38.270 --> 00:03:42.862
There are these bridges that you
have to work with, where, okay,

49
00:03:42.862 --> 00:03:48.043
we have more of a high level opinionation
interesting that we need to make.

50
00:03:48.043 --> 00:03:53.473
However, we also need to make sure that
we're not impacting the developers and

51
00:03:53.473 --> 00:03:54.698
stuff like that.

52
00:03:54.698 --> 00:03:56.329
Let's see here, yep.

53
00:03:56.329 --> 00:04:00.401
So the first thing that I wanna work on is
solving the standardized infrastructure

54
00:04:00.401 --> 00:04:00.937
problem.

55
00:04:00.937 --> 00:04:05.172
And we are gonna create a quick technical
document to kind of help us here, and

56
00:04:05.172 --> 00:04:07.465
I would love you guys assistance with it.

57
00:04:07.465 --> 00:04:11.161
So what we're gonna do is we're gonna
call this document standardized

58
00:04:11.161 --> 00:04:12.586
infrastructure, right?

59
00:04:12.586 --> 00:04:16.507
S-T-R-U-C-T-U-R-E, if I can spell,
there we go, there is infrastructure.

60
00:04:16.507 --> 00:04:21.443
And our problem is simply going to be we
want to define, that's not the problem,

61
00:04:21.443 --> 00:04:21.960
sorry.

62
00:04:21.960 --> 00:04:27.136
We have no defined patterns or
opinionnations we'll

63
00:04:27.136 --> 00:04:31.628
call them, right, around, I cannot spell.

64
00:04:36.205 --> 00:04:41.463
O-P-I, opinion, we're just gonna

65
00:04:41.463 --> 00:04:46.084
say choices around how we describe

66
00:04:46.084 --> 00:04:50.714
services in our infrastructure.

67
00:04:50.714 --> 00:04:55.018
Infrastructure, S-T-R-U-C-T-U-R-E,
I cannot spell today.

68
00:04:55.018 --> 00:04:56.373
So that's our problem.

69
00:04:56.373 --> 00:04:59.939
We're brand new company and
we have no defined patterns or

70
00:04:59.939 --> 00:05:03.954
choices around how we describe
services in our infrastructure.

71
00:05:03.954 --> 00:05:07.929
The next thing we're gonna do is is we're
gonna say, well, what are these services?

72
00:05:10.425 --> 00:05:15.900
Right, first one is pretty
straightforward, frontends, right?

73
00:05:15.900 --> 00:05:21.977
We need a way of having opinions around
frontends, backends as well, right?

74
00:05:21.977 --> 00:05:26.140
We wanna have a good opinionation
around backends too, right?

75
00:05:26.140 --> 00:05:30.873
And then the next thing we can
do is we can say, okay, well,

76
00:05:30.873 --> 00:05:35.063
we know what these services are,
what do they need?

77
00:05:35.063 --> 00:05:36.753
What do they need, right?

78
00:05:36.753 --> 00:05:41.476
And so for example, if we go to frontends,

79
00:05:41.476 --> 00:05:45.294
this is completely opinionated.

80
00:05:45.294 --> 00:05:48.863
So I'm not going to go super deep into
this just because we also have to

81
00:05:48.863 --> 00:05:49.427
build it.

82
00:05:49.427 --> 00:05:51.545
But we'll say, for example,

83
00:05:51.545 --> 00:05:56.119
we know that frontends will need a bucket,
probably of some type.

84
00:05:56.119 --> 00:06:00.944
We're gonna do static hosting, so
we need a bucket of some sort or

85
00:06:00.944 --> 00:06:04.981
some place to basically
store our flat files, right,

86
00:06:04.981 --> 00:06:08.692
our static files,
I guess is a better word for it.

87
00:06:08.692 --> 00:06:14.769
And then we also need an ingress
of some type, right, some type.

88
00:06:14.769 --> 00:06:19.809
And this can be whether it's Kubernetes,
whatever, it can be anything,

89
00:06:19.809 --> 00:06:24.060
but we just need to make sure
that it's routable essentially.

90
00:06:24.060 --> 00:06:30.935
Outside of that, from a DevOps
perspective, there's not much else, right?

91
00:06:30.935 --> 00:06:34.440
Now, we can add to this, we can say, okay,
well, it needs this or that or whatever.

92
00:06:34.440 --> 00:06:40.442
But when we talk about what we need
from a very simple perspective,

93
00:06:40.442 --> 00:06:45.051
our frontends will just need
a bucket of some sort or

94
00:06:45.051 --> 00:06:51.387
some place to put that data, and
then a way for us to access it, right?

95
00:06:51.387 --> 00:06:57.104
So if we go to backends, oops,
we can kinda do the same thing, right?

96
00:06:57.104 --> 00:07:00.334
Where we can say, okay, for backends,

97
00:07:00.334 --> 00:07:04.799
we probably would want some
type of container, right,

98
00:07:04.799 --> 00:07:11.557
of some sort of if we're gonna be using a
container platform or something like that.

99
00:07:11.557 --> 00:07:16.841
We'll still need that ingress as well,
right, an ingress of some type.

100
00:07:16.841 --> 00:07:20.770
And again,
it can be a bunch of other things.

101
00:07:20.770 --> 00:07:23.073
The reason why I'm showing you this is,

102
00:07:23.073 --> 00:07:27.974
you can already tell there's a separation
between frontends and backends, right?

103
00:07:27.974 --> 00:07:32.050
In frontends, we're talking about,
we wanna save as much money as possible.

104
00:07:32.050 --> 00:07:35.388
We wanna make it so
that we're not spending for

105
00:07:35.388 --> 00:07:38.991
continuous uptime and
things like that, right?

106
00:07:38.991 --> 00:07:42.901
So we're already kind of making
an assumption here that frontends and

107
00:07:42.901 --> 00:07:46.091
backends are intrinsically
different in some regards.

108
00:07:46.091 --> 00:07:50.559
Another thing that we can say here is
that, all of our frontends are gonna

109
00:07:50.559 --> 00:07:54.599
deploy the same way,
that's what this also helps us do, right?

110
00:07:54.599 --> 00:07:58.639
Now, we're not saying, okay, two teams
can deploy frontends differently.

111
00:07:58.639 --> 00:08:02.614
What we're saying is, two teams can
build front ends differently, but

112
00:08:02.614 --> 00:08:05.039
they have to deploy them the same way,
why?

113
00:08:05.039 --> 00:08:07.145
Because that's how we support them, right?

114
00:08:07.145 --> 00:08:08.799
We know how the infrastructure works,

115
00:08:08.799 --> 00:08:11.815
we can easily troubleshoot that
infrastructure and things like that.

116
00:08:11.815 --> 00:08:16.099
And it's the exact same thing for
containers, basically.

117
00:08:16.099 --> 00:08:19.669
If we know where it exists and
we have standards around that,

118
00:08:19.669 --> 00:08:23.320
it makes it a lot easier for
us to be able to do what we need to do.

119
00:08:23.320 --> 00:08:27.460
And really, that's the majority of it.

120
00:08:27.460 --> 00:08:32.157
And so we next can say, well,
what do we need, right?

121
00:08:32.157 --> 00:08:35.701
Because we know what our frontends need,
but what do we need with regards to this?

122
00:08:35.701 --> 00:08:39.991
And the simplest way of putting it is,

123
00:08:39.991 --> 00:08:45.221
we need simple interfaces
that allow us to pull

124
00:08:45.221 --> 00:08:51.537
off the shelf deployments for
specific service types.

125
00:08:51.537 --> 00:08:53.594
Now, we talked about,
what was it called again?

126
00:08:53.594 --> 00:08:56.485
Back, what's the spotify thing again,
sorry?

127
00:08:56.485 --> 00:08:57.453
&gt;&gt; Backstage.

128
00:08:57.453 --> 00:08:59.556
&gt;&gt; Backstage, yeah,
we talked about backstage and

129
00:08:59.556 --> 00:09:01.619
you might go, this sounds like backstage.

130
00:09:01.619 --> 00:09:04.815
That's because backstage is
trying to solve this problem.

131
00:09:04.815 --> 00:09:07.241
Backstage is trying to basically say,

132
00:09:07.241 --> 00:09:12.239
let's standardize a lot of the things that
we do so that we can kinda pull these off

133
00:09:12.239 --> 00:09:16.451
of the shelf solutions instead of
making new solutions every time.

134
00:09:16.451 --> 00:09:19.099
And that's what we need, right?

135
00:09:19.099 --> 00:09:22.517
So we know what our frontends need and
our backends need, but

136
00:09:22.517 --> 00:09:24.670
we also now know what we need, right?

137
00:09:24.670 --> 00:09:33.114
And we can even say, we need a simple
way of managing these resources and

138
00:09:33.114 --> 00:09:37.632
updating them when changed, right?

139
00:09:37.632 --> 00:09:41.552
Outside of that,
most everything is iteration, right?

140
00:09:41.552 --> 00:09:46.598
It's taking a look at it and saying, okay,
well, we need a simple way of making it so

141
00:09:46.598 --> 00:09:49.886
that developers can deploy
a frontend if they need to.

142
00:09:49.886 --> 00:09:55.114
And then we also need a simple way of
managing those resources so that we can.

143
00:09:55.114 --> 00:09:59.225
No mention of technology, no mention of,

144
00:09:59.225 --> 00:10:03.116
you should do this or you should do that.

145
00:10:03.116 --> 00:10:07.804
And as a matter of fact, outside of
just giving this technical document more

146
00:10:07.804 --> 00:10:11.027
information about parameters and
stuff like that,

147
00:10:11.027 --> 00:10:15.000
this is what the developer would get,
realistically, right?

