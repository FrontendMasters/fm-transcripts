WEBVTT

1
00:00:00.140 --> 00:00:05.580
So now, we are actually
rendering a Docker file, right?

2
00:00:05.580 --> 00:00:10.631
And so the last thing we need
to do is we need to make

3
00:00:10.631 --> 00:00:15.703
sure that we can actually
get it to where we need.

4
00:00:15.703 --> 00:00:18.289
So this is a bit of an opinionation,

5
00:00:18.289 --> 00:00:22.006
it's up to you if you want
it to work this way or not.

6
00:00:22.006 --> 00:00:25.775
I'm gonna do it just for sake of time, but

7
00:00:25.775 --> 00:00:30.752
you could make the CLI tool
actually do this remotely.

8
00:00:30.752 --> 00:00:34.977
Clone the repository,
make the changes and push it back up.

9
00:00:34.977 --> 00:00:40.835
So, another thing you could do is you
could write automation weekly to do that.

10
00:00:40.835 --> 00:00:46.364
So that if you made changes to things
to improve, say build performance,

11
00:00:46.364 --> 00:00:52.983
Docker file performance, things like that,
then you put this CLI tool in automation.

12
00:00:52.983 --> 00:00:57.840
And you tell it what repositories
it's supposed to work against, and

13
00:00:57.840 --> 00:01:02.631
then it'll clone those repositories,
run these commands for you.

14
00:01:02.631 --> 00:01:08.415
And now I'm automatically updating
configurations you never have to write.

15
00:01:08.415 --> 00:01:11.721
And this is something we do at Hippo,
where I work.

16
00:01:11.721 --> 00:01:15.907
I actually have an additional command
to this where I can say this,

17
00:01:15.907 --> 00:01:20.712
remote, and then repository basically,
if I spell it right, there we go.

18
00:01:20.712 --> 00:01:25.235
And then, for
example it'd be like example repo, and so

19
00:01:25.235 --> 00:01:31.171
what happens is, even if I wanted to,
because remember the build.json or

20
00:01:31.171 --> 00:01:34.205
with the repository I used to do that.

21
00:01:34.205 --> 00:01:39.363
I don't even need to have a configuration
locally because it's standardized.

22
00:01:39.363 --> 00:01:42.446
These files are in every repository now.

23
00:01:42.446 --> 00:01:47.407
And yeah, this is literally
what I do a lot at Hippo, and

24
00:01:47.407 --> 00:01:52.383
when we were talking about
earlier about saving money?

25
00:01:52.383 --> 00:01:57.144
Think about having 200 repositories
that you have to go in and

26
00:01:57.144 --> 00:02:02.258
update every build configuration for
every Docker file update for,

27
00:02:02.258 --> 00:02:06.773
simply because you don't have
to do that anymore with this.

28
00:02:06.773 --> 00:02:07.620
You know what I mean?

29
00:02:07.620 --> 00:02:12.559
You can simply just automate
the whole process if you wanted to.

30
00:02:12.559 --> 00:02:17.375
And so yeah, that's another thing,
like I said I'm not gonna to get into it

31
00:02:17.375 --> 00:02:21.986
today because maybe we can do it on
a separate course or a separate class.

32
00:02:21.986 --> 00:02:25.865
But how you take this and
how you render it is entirely up to you.

33
00:02:25.865 --> 00:02:30.635
So for now I'm just gonna render
it into the current directory, and

34
00:02:30.635 --> 00:02:35.404
we're going to assume that a developer
would just be running this in

35
00:02:35.404 --> 00:02:37.848
the root of a repository, right?

36
00:02:37.848 --> 00:02:42.194
And if we wanted to we can make
the developer's life even easier,

37
00:02:42.194 --> 00:02:44.260
where we can say you know what?

38
00:02:44.260 --> 00:02:47.914
Don't even worry about
telling me the path.

39
00:02:47.914 --> 00:02:51.109
What we can do is we can say
we'll just hard code it, right?

40
00:02:51.109 --> 00:02:55.232
Now the reason why I showed it to you,
the way of not hard coding it,

41
00:02:55.232 --> 00:03:00.112
is because you may want to not have it in
a specific path or something like that.

42
00:03:00.112 --> 00:03:03.402
However, this is what we
actually do at Hippo,

43
00:03:03.402 --> 00:03:07.531
we standardize it down to the folder and
the location of it.

44
00:03:07.531 --> 00:03:11.660
So that if it's not in the place that
we expected it just doesn't work.

45
00:03:11.660 --> 00:03:17.281
So again, that's totally up to you but it
is i something that might be recommended,

46
00:03:17.281 --> 00:03:20.920
and so now you can see we
don't even need yards really,

47
00:03:20.920 --> 00:03:24.981
unless we wanna add other commands and
stuff like that to it.

48
00:03:24.981 --> 00:03:31.037
For right now, we'll leave it just
to show it as a proof of concept.

49
00:03:31.037 --> 00:03:34.106
Okay, so
now that we've got this Docker file,

50
00:03:34.106 --> 00:03:36.726
we just simply need to write it, right?

51
00:03:36.726 --> 00:03:40.314
So, write file, yep, write file sync.

52
00:03:40.314 --> 00:03:41.591
And then, what do we give it?

53
00:03:41.591 --> 00:03:44.048
We give it the path and then the data.

54
00:03:44.048 --> 00:03:48.827
So the path in this case
is gonna be Dockerfile,

55
00:03:48.827 --> 00:03:52.178
and the data will be dockerfile.

56
00:03:54.603 --> 00:03:57.346
We'll get rid of this as well.

57
00:03:57.346 --> 00:03:59.672
So now, if we run this again,

58
00:04:05.682 --> 00:04:07.894
There you go.

59
00:04:07.894 --> 00:04:10.855
And now you have a Docker file
that you never have to write.

60
00:04:10.855 --> 00:04:17.864
[LAUGH] And again, this is a super,
super, super, super simple example.

61
00:04:17.864 --> 00:04:19.204
Super simple example.

62
00:04:19.204 --> 00:04:21.604
So, let's get a little crazy.

63
00:04:21.604 --> 00:04:23.172
Why not, right?

64
00:04:23.172 --> 00:04:30.292
So what I'm gonna do is I'm also
going to add a file for circleci.yml.

65
00:04:30.292 --> 00:04:33.847
Because the Docker file's nice,
but we're not fully doing it.

66
00:04:33.847 --> 00:04:36.426
I guess one thing we could do, here,
let's add this really quickly, actually.

67
00:04:36.426 --> 00:04:39.731
So let's go back to the Dockerfile
because we did forget something.

68
00:04:39.731 --> 00:04:46.471
We forgot to do our for
loop right of our Dockerfile stuff.

69
00:04:46.471 --> 00:04:52.761
So what we need to is,
is we need to go back our index.

70
00:04:52.761 --> 00:04:57.990
We go back to our index, and
we've got the service name and

71
00:04:57.990 --> 00:05:04.501
the service type, but what's a better
thing that we could pass to this,

72
00:05:04.501 --> 00:05:09.197
so that we always guarantee
the values that we have in

73
00:05:09.197 --> 00:05:13.922
our build.json,
get passed down to our template?

74
00:05:13.922 --> 00:05:19.170
What could be in these, like what what
could we do in this render here, right?

75
00:05:19.170 --> 00:05:24.076
Instead of saying like service name,
configuration service name, service type,

76
00:05:24.076 --> 00:05:26.368
configuration service type, right?

77
00:05:26.368 --> 00:05:27.481
What object maybe could
we pass directly to it?

78
00:05:27.481 --> 00:05:32.386
And it'll always make sure our templates
get all of the build configuration

79
00:05:32.386 --> 00:05:33.236
variables.

80
00:05:37.418 --> 00:05:39.316
So we can pass it,
just the configuration data itself, right?

81
00:05:39.316 --> 00:05:41.375
Because it's already standardized,

82
00:05:41.375 --> 00:05:45.688
and we already know that it's going to
have everything that we need in it, right?

83
00:05:45.688 --> 00:05:49.112
And so now what we can do is
is we can say, all right,

84
00:05:49.112 --> 00:05:53.977
tell you what, Dockerfile,
you're gonna render as a Docker file, but

85
00:05:53.977 --> 00:05:57.434
we're gonna give you all
the configuration data.

86
00:05:57.434 --> 00:06:02.779
So that if we go to this docker file,
now what we can do, sorry, not that one.

87
00:06:02.779 --> 00:06:05.475
This one.
Now, what we can do is we can

88
00:06:05.475 --> 00:06:10.356
still have our service name and
our service type, but

89
00:06:10.356 --> 00:06:17.205
we can also extend things like our for
Dockerfile.PreInstall commands.

90
00:06:17.205 --> 00:06:20.796
I believe is how you do that.

91
00:06:20.796 --> 00:06:25.052
And then endfor, so then we just do for

92
00:06:25.052 --> 00:06:30.505
command in Dockerfile.preinstall commands,

93
00:06:30.505 --> 00:06:35.293
and then what we'll do is we'll just say,

94
00:06:35.293 --> 00:06:38.357
command, just like that.

95
00:06:40.073 --> 00:06:49.076
So now, if we do this, There it is.

96
00:06:49.076 --> 00:06:51.146
Now, it doesn't look pretty,

97
00:06:51.146 --> 00:06:55.372
[LAUGH] because the templating
engine doesn't care about lines.

98
00:06:55.372 --> 00:06:57.493
Don't let developers complain over that.

99
00:06:57.493 --> 00:06:59.681
Tell him, [LAUGH] tell him you're
getting it for free, okay?

100
00:06:59.681 --> 00:07:03.325
[LAUGH] I've dealt with that before
actually, where devs have been like,

101
00:07:03.325 --> 00:07:04.693
why is it got so many lines?

102
00:07:04.693 --> 00:07:07.934
It's like, dude it's a templating engine,
like it's fine.

103
00:07:07.934 --> 00:07:10.065
The computer doesn't care about it.

104
00:07:10.065 --> 00:07:13.739
But like I said,
going back to what we really care about,

105
00:07:13.739 --> 00:07:16.740
it does give us that
flexibility that we want.

106
00:07:16.740 --> 00:07:20.087
Now if a devs like, okay,
I need something else,

107
00:07:20.087 --> 00:07:23.531
I can just do copy something,
something, right?

108
00:07:23.531 --> 00:07:25.547
And then literally, think about this.

109
00:07:25.547 --> 00:07:31.055
I don't even have to do anything but
update the config file,

110
00:07:31.055 --> 00:07:34.305
and then just re-run the command.

111
00:07:41.260 --> 00:07:47.417
This tool has saved us so
much time and money where I work.

112
00:07:47.417 --> 00:07:52.218
Because again, like I said,
I don't have to do this anymore.

113
00:07:52.218 --> 00:07:54.318
The developers can now do this.

114
00:07:54.318 --> 00:07:58.609
They can customize their Docker
files the way that they need.

115
00:07:58.609 --> 00:08:03.218
And say for example,
I kind of hinted at something

116
00:08:03.218 --> 00:08:06.853
here without really fully showing it,

117
00:08:09.318 --> 00:08:13.240
That's why we call it
a pre-install command, right?

118
00:08:13.240 --> 00:08:16.001
Because it's before the yarn install.

119
00:08:16.001 --> 00:08:19.361
And what do we normally care
about before the yarn install?

120
00:08:19.361 --> 00:08:21.894
Moving files over that we need to copy,
right?

121
00:08:21.894 --> 00:08:24.009
Package.json, things like that.

122
00:08:24.009 --> 00:08:27.093
This also means that, you know what?

123
00:08:27.093 --> 00:08:30.387
Eric, it's great that we have
pre-install commands, but

124
00:08:30.387 --> 00:08:32.787
I've got to do something after that, too.

125
00:08:32.787 --> 00:08:34.970
Cool, done.

126
00:08:34.970 --> 00:08:38.111
You know what I mean?

127
00:08:38.111 --> 00:08:40.488
Cool.

128
00:08:40.488 --> 00:08:42.056
PostInstallCommands.

129
00:08:42.056 --> 00:08:48.281
And then we go to our build.json,

130
00:08:48.281 --> 00:08:55.801
pre-install, PostInstallCommands.

131
00:09:11.453 --> 00:09:14.464
So developers should not really have
any problems once you set it up

132
00:09:14.464 --> 00:09:17.815
in a way where you're solving
the problems that they care about, right?

133
00:09:17.815 --> 00:09:22.141
We're not just trying to
put in configuration and

134
00:09:22.141 --> 00:09:26.060
just let it just get dumped in there for
them.

135
00:09:26.060 --> 00:09:30.004
What we're saying is,
is we know with a Docker file,

136
00:09:30.004 --> 00:09:32.822
you're gonna have to do some things.

137
00:09:32.822 --> 00:09:35.124
You're gonna have to do a yarn install.

138
00:09:35.124 --> 00:09:37.394
You're gonna have to do this.

139
00:09:37.394 --> 00:09:40.420
Now, what is one caveat to this?

140
00:09:40.420 --> 00:09:43.805
If you could tell me what
is one caveat to this

141
00:09:43.805 --> 00:09:48.209
Docker file template that is
specific to say a language?

142
00:09:48.209 --> 00:09:50.353
Could I use this with Go?

143
00:09:56.216 --> 00:09:57.247
Well, yeah, no, it's okay.

144
00:09:57.247 --> 00:09:58.824
I mean, that's a fair answer and
an honest one.

145
00:09:58.824 --> 00:10:01.622
And the reality of it is no,

146
00:10:01.622 --> 00:10:07.481
I couldn't because it's
using a yarn install, right?

147
00:10:07.481 --> 00:10:12.343
So if we're agreeing that we're
only building node services, and

148
00:10:12.343 --> 00:10:14.747
we're only using yarn, right?

149
00:10:14.747 --> 00:10:18.218
Then this is a perfectly good way,

150
00:10:18.218 --> 00:10:22.892
like you guys could
literally use this today.

151
00:10:22.892 --> 00:10:24.647
And you probably should.

152
00:10:24.647 --> 00:10:28.385
But seriously,
what happens if we run into that, right?

153
00:10:28.385 --> 00:10:31.585
What happens if it's like,
well, it's not a node thing,

154
00:10:31.585 --> 00:10:34.570
we do the exact same thing
that we've done before, right?

155
00:10:34.570 --> 00:10:37.849
Where we say, okay, well, there's
a couple of things we can do, right?

156
00:10:37.849 --> 00:10:44.735
We could say, well, you know what?

157
00:10:46.048 --> 00:10:48.902
We could do that, right?
And we could actually say,

158
00:10:48.902 --> 00:10:52.629
Dockerfile.InstallCommand, right?

159
00:10:52.629 --> 00:10:59.234
So now, if I go back to my build.json, and
then we just do install command, right?

160
00:10:59.234 --> 00:11:01.798
Now, we don't need multiple of these,
so we only need one.

161
00:11:06.336 --> 00:11:09.546
And, so
here's the thing that's kind of fun.

162
00:11:09.546 --> 00:11:13.707
Technically you don't even have
to update the DSL with this,

163
00:11:13.707 --> 00:11:18.589
because of the way templating engines
work if the variable just exists in

164
00:11:18.589 --> 00:11:22.769
the configuration,
it will become available here, right?

165
00:11:22.769 --> 00:11:26.500
However, we wanna make sure that
it's actually in our type so

166
00:11:26.500 --> 00:11:29.032
that we can use it in the language itself.

167
00:11:29.032 --> 00:11:33.773
And so what we would do is, like that's
why you notice how pre-install commands

168
00:11:33.773 --> 00:11:37.203
is here, but
then post-install commands still worked.

169
00:11:37.203 --> 00:11:41.404
That's because it's just TypeScript
at the end of the day, right?

170
00:11:41.404 --> 00:11:47.204
So, if it's still there but
it's not typed it's totally fine.

171
00:11:47.204 --> 00:11:49.919
And that's a choice, by the way.

172
00:11:49.919 --> 00:11:53.798
That could be a choice
that makes it quicker for

173
00:11:53.798 --> 00:11:56.990
you to adding features if you wanted.

174
00:11:56.990 --> 00:12:03.999
So we save this, save this,
save this, Delete our Docker file,

175
00:12:03.999 --> 00:12:11.427
re-run it, And now we've got
our yarn install again, right?

176
00:12:11.427 --> 00:12:15.390
Say this is, dude, I deal with this so
much, I hate it, I really do.

177
00:12:15.390 --> 00:12:20.471
Say a project wasn't set up with
yarn it was set up with Node.

178
00:12:20.471 --> 00:12:24.137
So what we do is we simply go all right,
you know what?

179
00:12:24.137 --> 00:12:24.686
That's fine.

180
00:12:29.530 --> 00:12:34.748
Cool, you're done, [LAUGH] right?

181
00:12:34.748 --> 00:12:39.965
So, it's up to you on how flexible
you want to make this tool.

182
00:12:39.965 --> 00:12:45.066
However, if you don't wanna ever have
to write a configuration file again or

183
00:12:45.066 --> 00:12:49.710
something like that, you can totally
take this approach to doing it.

