[00:00:00]
>> Cool, so that was a bit, does anyone have any questions on any of that? You're more than welcome to ask any questions you'd like. I know that was quite of a bit. There's more we could add to it. I would love to see what you guys do with it.

[00:00:15]
But I think you can at least see now the power behind utilizing and, I mean, it's really mostly, again, you could do this in Terraform, you could do this in other providers as well. The main point is, we need an interface that DEVS use. We need those bumpers that DEVS can use.

[00:00:34]
As long as we have those bumpers, it doesn't matter what it's in. But if developers are literally modifying Amazon resources directly, that's a problem. That means, they could break a lot very easily. And, yeah, this is essentially our service directory. And so, as I said, if I was a developer and I needed to simply add this or a new service or something like that, I should only have to come in here, paste this, all right, and then put in example two.

[00:01:10]
And that's it. The developer should not really have to do much else. If they do, then maybe something's not supported. We need to have a conversation about it. You know what I mean? Maybe if it's not working cool, I can help you debug it, but at the end of the day, this is what the developers should be using instead of writing their own automation.

[00:01:35]
Any questions on that or anything like that? Yeah?
>> Do leverage Pulumi for creating CI/CD pipelines as well as in AWS?
>> Yeah, I mean, you could really utilize Pulumi for anything it provides a provider for, right? So, I guess I would need to understand what you mean by automating pipelines because there's different automation that goes into there that we're gonna see shortly that is separate from this.

[00:02:10]
But if we wanted to talk about the actual setup of pipelines, saying, GitLab or something like that, then possibly. But they may mean two different things, yeah?
>> Is locking state available out of the Pulumi cloud?
>> That is a good question, pulumi Lock state? I know that it locks state when it goes to modify it, right?

[00:02:33]
Because it doesn't want multiple changes to it. I don't know exactly the depths of how you can lock state mostly because Pulumi allows you to decide on multiple backends. Pulumi actually lets you store your state in a bucket, if you want. It allows you to store it literally on your computer, if you want.

[00:02:53]
So I would imagine they mean shared locking state in the cloud and I don't think you can do that right now, actually. I don't think that's something you could do, I don't think there's a shared lock state, yeah, I'd have to look into that a little bit further.

[00:03:10]
But I do know that, again, if a run is running, you can't run another run while it's running, it'll be like no, you're messing with state that's being updated right now.
>> One more question, is there a way to generate documentation so DEVS know what's supported and what is not?

[00:03:27]

>> Yeah, yeah, absolutely, so that probably would not be in Pulumi, I actually don't know if Pulumi does documentation generation, I don't think it does. But, I mean, realistically, yeah, I know it's just the documentation itself. But realistically, you could add, because it's JavaScript or whatever language, you could add a generator for it.

[00:03:48]
And the cool thing about it being in the language is, if you have it in the language, you can easily tell it about your types, right? You could easily just be like, all right, annotate this type and give us documentation on it. So Pulumi won't give it to you directly, but you could definitely do it, yeah.

[00:04:07]
And you could easily auto-generate that.

