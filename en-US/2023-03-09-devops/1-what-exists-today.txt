[00:00:00]
>> My goal is for the first half of this course to really be just, again as I said, breaking down DevOps. We're gonna go through a lot of different thought experiments, we're gonna look at how again the philosophy of DevOps is really kind of lined out or outlined.

[00:00:16]
And then the second half we're just gonna be programming. So [LAUGH] it's gonna be fun but the first part is definitely gonna be a little bit of theory and philosophy before we get into craft. So let's talk about what exists today. There's a lot of things, as I said, that currently exist in DevOps that are not really helpful.

[00:00:38]
And I'm hoping that these things that I exemplify are things that you probably have even seen at your own companies. And these are purely experiences I've gone through myself as well. So this is stuff I've experienced. First off, as I said, and kind of as we've started our course, DevOps is poorly defined right now in the industry.

[00:01:00]
Because DevOps is a broad and somewhat abstract concept, it is difficult for companies to find and implement it in a concrete and consistent way. Everybody's got an opinion on it in most regards, and depending on who you talk to, what company you're looking at or you're talking to and things like that.

[00:01:16]
The way that they handle DevOps is sometimes entirely different. And there are definitely people who have left one company thinking, I know how this works, I can go somewhere else and then gone somewhere else and realized that actually the way they did it was incredibly niche. There's no real generalization to what they did, and it's actually didn't probably help you much in your learning process.

[00:01:37]
And I do really think a lot of that is just because it is really poorly defined right now. It really is more of what do you think DevOps is rather than what we're trying to define it as a ecosphere, I guess. Culture challenges, right? So because DevOps is poorly defined, and essentially because that impacts culture, there are culture shifts that can happen within an organization because of DevOps, and nine times out of ten, those go nowhere.

[00:02:16]
It can be very challenging for companies to integrate and adopt new things into their practices. And the reality of it is is nine times out of ten, most don't want to. And it's not in the sense that it's not something we'd love to see but it's more so you have to deal with business, you have to deal with trying to make sure that the rest of the company is on board with you and culture is hard.

[00:02:44]
Culture is very hard to change, especially if we're talking about a company that's been doing something one way for a very long time. Again, can kind of start showing you how these start becoming compounding issues. Where because DevOps is poorly defined, and because we are, again as I said before, having culture challenges, we now start dealing with communication issues, right?

[00:03:06]
Basically a lack of clear communication and collaboration between these teams that can lead to errors. And I guarantee you each of us here have seen this. A release goes out, somebody didn't communicate something about some common practice that we do, a feature flag didn't get flipped. Got to roll back.

[00:03:27]
As I said, technically, you can solve a problem one way, but there's always human error. There's always gonna be human error, and that's what DevOps is focused on solving, the human error, the human side of it. And so if you have this missing communication and another common cases like documentation even.

[00:03:48]
How many of us have dealt with not being able to find documentation on something because specific software are really hard to navigate or there wasn't a good organization around those documentation and things like that. That's DevOps. That is a circumstance where DevOps can see that and say like, okay, how do we fix this?

[00:04:07]
And because of that, right, again, because of the proper definition, because of the culture challenges, because of the missing communication, we get suboptimal solutions, right? And again, because developers and IT professionals may not be working together as efficiently and as effectively, we basically result in suboptimal solutions that do not meet the needs of the business or the end users.

[00:04:30]
And this is also very, very common in DevOps. I would imagine most of us can say we've seen some part of subinfrastructure or something we've just kind of looked at and went, what? And it's true, it's probably some type of suboptimal solution that was half baked or not fully put together.

[00:04:55]
And because of that, now we're dealing with some type of weird technical debt that we don't really want to have to deal with, right? So where do we begin? And I'm gonna say I think Moss from the IT Crowd does a pretty good job of describing what DevOps can feel like.

[00:05:12]
So you'll see a few of his gifts in here. But yeah, I wanted to show you guys first and foremost what exists today because once you start thinking about what exists today, that's probably how you feel. [LAUGH] Just like okay, well, there's fire around me, where do we begin?

[00:05:29]
Well, we're gonna start from scratch. As I said, I want you to forget what you've seen about DevOps, I want you to forget what you've heard about DevOps, and I want you to forget what you've done with DevOps. I want you to completely just blank your mind of any knowledge that you have preconceiving to it.

[00:05:47]
And I'm gonna be honest as well, this is something I had to do before I could start understanding how to become a good DevOps engineer. Because I was constantly taking things that I've said,okay, well what about this? Or okay, what about that or things like that and jumping way too far ahead than I needed to.

[00:06:03]
So starting from scratch is probably gonna be the best case scenario here.

