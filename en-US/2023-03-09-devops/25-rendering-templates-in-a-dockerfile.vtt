WEBVTT

1
00:00:00.000 --> 00:00:05.427
So we've gotten that far, but we need
to take one step further, which is,

2
00:00:05.427 --> 00:00:10.855
we need to actually make it so that the
template files are then read by the CLI

3
00:00:10.855 --> 00:00:16.311
tool, and then we create our new Docker
file basically from that, right?

4
00:00:16.311 --> 00:00:23.252
So to do that, what we're gonna
do is we need another tool.

5
00:00:23.252 --> 00:00:27.347
So I'm gonna use something that I prefer,

6
00:00:27.347 --> 00:00:31.670
you guys have probably
heard the term Jinja,

7
00:00:31.670 --> 00:00:36.815
very common way of doing
templating in programming.

8
00:00:36.815 --> 00:00:40.186
This is hands down one of the most,

9
00:00:40.186 --> 00:00:45.780
just standardized ways of
templating that we use today.

10
00:00:45.780 --> 00:00:50.714
And when I tell you that you can build the
CLI tool in any language, I mean, you can.

11
00:00:50.714 --> 00:00:53.108
[LAUGH] You just need
to be able to template,

12
00:00:53.108 --> 00:00:56.631
you need to be able to describe
a domain specific language, and

13
00:00:56.631 --> 00:00:59.707
you need to be able to then
generate the template file.

14
00:00:59.707 --> 00:01:03.073
So If you wanted to, you could do this
in Python, you could do this in Go,

15
00:01:03.073 --> 00:01:04.300
you could do this in Rust.

16
00:01:04.300 --> 00:01:06.661
You could do this in
any language you want.

17
00:01:06.661 --> 00:01:10.347
For me, however, I'm not a big fan of
Jinja because I've used it for so long.

18
00:01:10.347 --> 00:01:13.299
[LAUGH] And so
there's actually another one that

19
00:01:13.299 --> 00:01:18.116
I really like that's actually made by
Mozilla, and it's called Nunjucks.

20
00:01:18.116 --> 00:01:21.358
And it basically underneath
the hood is Jinja,

21
00:01:21.358 --> 00:01:25.977
it's just a little bit nicer,
where you can just really lean on it,

22
00:01:25.977 --> 00:01:30.295
its configuration,
it's just a little simpler to work with.

23
00:01:30.295 --> 00:01:31.549
So we're gonna get started
with this as well, right?

24
00:01:31.549 --> 00:01:35.100
And so just like I did before,

25
00:01:35.100 --> 00:01:39.796
I'm just gonna npm install Nunjucks.

26
00:01:39.796 --> 00:01:43.033
So I'll just do yarn add nunjucks.

27
00:01:46.477 --> 00:01:50.003
And I think it actually also
wants me to add type, so

28
00:01:50.003 --> 00:01:52.546
let's just go ahead and do that too.

29
00:01:52.546 --> 00:01:54.605
Dev@types.

30
00:01:56.884 --> 00:01:59.648
Cool, cool, okay.

31
00:01:59.648 --> 00:02:03.583
And so, There's

32
00:02:03.583 --> 00:02:08.148
actually a nice thing about it as well,
which is you can configure

33
00:02:08.148 --> 00:02:12.974
it to just always know where
the directory of all your templates are.

34
00:02:12.974 --> 00:02:18.060
So you might have noticed that I wrote
the readFileSync, but I didn't write

35
00:02:18.060 --> 00:02:23.003
the readFileSync for the other files,
right, like the template files.

36
00:02:23.003 --> 00:02:26.308
That's because ideally, you could really
just use a templating engine to do that.

37
00:02:26.308 --> 00:02:33.469
And so for example, I believe it's pas,
I don't remember exactly where it is.

38
00:02:33.469 --> 00:02:34.761
Let me see here.

39
00:02:38.938 --> 00:02:44.775
Import from, Nunjucks,

40
00:02:44.775 --> 00:02:48.899
and then this should be configure.

41
00:02:48.899 --> 00:02:50.233
There we go.

42
00:02:50.233 --> 00:02:53.759
Okay, so what we're gonna do is
we're gonna give it the path.

43
00:02:53.759 --> 00:02:57.604
We're gonna say template.

44
00:02:57.604 --> 00:02:58.935
Sorry, templates,
that's where our templates are.

45
00:02:58.935 --> 00:03:03.357
And then at this point, anytime I try
generating a template, all I have to do is

46
00:03:03.357 --> 00:03:07.312
give it the file name, and Nunjucks
knows how to take care of the rest.

47
00:03:07.312 --> 00:03:11.392
So when we talk about needing a ton of
templates and how to manage them and

48
00:03:11.392 --> 00:03:14.180
having code around that,
that's really easy.

49
00:03:14.180 --> 00:03:17.543
Leaning on a templating engine
like Nunjucks or Jinja or

50
00:03:17.543 --> 00:03:20.269
something like that
could be super helpful.

51
00:03:20.269 --> 00:03:25.424
And again, this whole CLI tool is 30
lines of code, so it's really not much.

52
00:03:25.424 --> 00:03:27.391
So once we've got that,

53
00:03:27.391 --> 00:03:32.554
we can actually start working with
our templates if we wanted to.

54
00:03:32.554 --> 00:03:38.593
So if I just did render,
I'm grabbing the render function, right?

55
00:03:38.593 --> 00:03:42.600
And this render function is
another function in Nunjucks, and

56
00:03:42.600 --> 00:03:45.179
it does really pretty much what it says.

57
00:03:45.179 --> 00:03:50.691
It's gonna take a template file and
it's gonna render it for you.

58
00:03:50.691 --> 00:03:55.266
And so in this case, what we wanna do
is we wanna say Dockerfile, right,

59
00:03:55.266 --> 00:03:59.992
because that's our template, and
then we wanna give it some parameters.

60
00:03:59.992 --> 00:04:03.782
Now if we go to the Dockerfile here,
we see that we have a service_name, and

61
00:04:03.782 --> 00:04:05.157
a service_type, right?

62
00:04:05.157 --> 00:04:10.365
So we need to at least
give it a service_name,

63
00:04:10.365 --> 00:04:13.175
oops, service_name.

64
00:04:13.175 --> 00:04:16.000
And then we also need to give
it a service_type, right?

65
00:04:16.000 --> 00:04:22.008
Problem is, that doesn't
necessarily match our DSL exactly.

66
00:04:22.008 --> 00:04:24.191
So we have a couple of
options we can do here.

67
00:04:24.191 --> 00:04:28.823
The first one is we could just change it,
so it's in camel case or in snake case or

68
00:04:28.823 --> 00:04:31.398
whatever or
you just change it here as well.

69
00:04:31.398 --> 00:04:38.973
So in this, what we could do is,
we could just say ServiceType.

70
00:04:38.973 --> 00:04:39.615
And I would recommend this actually,
I would.

71
00:04:39.615 --> 00:04:43.550
I wouldn't try and mesh conventions and

72
00:04:43.550 --> 00:04:50.970
stuff like that just to save yourself
the hassle of wondering what was wise.

73
00:04:50.970 --> 00:04:55.507
And so now we can just literally use

74
00:04:55.507 --> 00:05:00.838
ServiceName, ServiceType like this.

75
00:05:00.838 --> 00:05:05.239
And we'll do configurationData,
ServiceName,

76
00:05:05.239 --> 00:05:09.138
configurationData, ServiceType, okay?

77
00:05:12.666 --> 00:05:14.618
Is this gonna work here?

78
00:05:14.618 --> 00:05:18.287
Hold on, there you go.

79
00:05:18.287 --> 00:05:19.619
Do we think this will work?

80
00:05:23.664 --> 00:05:26.162
Look at the file on the right.

81
00:05:26.162 --> 00:05:28.025
And then look at the file on the left.

82
00:05:28.025 --> 00:05:28.718
What's wrong?

83
00:05:30.497 --> 00:05:31.892
&gt;&gt; ServiceName and Name?

84
00:05:31.892 --> 00:05:36.239
&gt;&gt; Yep, yep, so
this is a caveat to this approach.

85
00:05:36.239 --> 00:05:39.680
[LAUGH] You break the DSL,
it breaks everything.

86
00:05:39.680 --> 00:05:45.655
I've done that before, it's not fun
[LAUGH], especially if you commit it.

87
00:05:45.655 --> 00:05:51.987
And this is another point of having
these types of centralized automations.

88
00:05:51.987 --> 00:05:54.139
You need to make sure they're reliable.

89
00:05:54.139 --> 00:05:57.840
You need to make sure that you
can consistently rely on them and

90
00:05:57.840 --> 00:06:02.114
so that your developers basically
don't deal with what Zuckerberg and

91
00:06:02.114 --> 00:06:04.481
The Social Network was worried about.

92
00:06:04.481 --> 00:06:09.060
People caring to use it cuz it don't work,
that's a massive thing in DevOps.

93
00:06:09.060 --> 00:06:13.109
It's a massive thing in DevOps to
be not only building things, but

94
00:06:13.109 --> 00:06:14.858
building things that work.

95
00:06:14.858 --> 00:06:16.499
[LAUGH] Because if they don't,

96
00:06:16.499 --> 00:06:20.739
I've literally heard you guys already
complain about it from your companies.

97
00:06:20.739 --> 00:06:21.260
You know what I mean?

98
00:06:21.260 --> 00:06:25.383
It's a fair argument that why am I using
something that they're not supporting

99
00:06:25.383 --> 00:06:26.006
properly?

100
00:06:26.006 --> 00:06:28.670
So when you build these kind of things,

101
00:06:28.670 --> 00:06:33.046
it is incredibly important to
have testing or things like that.

102
00:06:33.046 --> 00:06:37.750
Because, again, the goal of this
is to make changes everywhere,

103
00:06:37.750 --> 00:06:39.184
not just one place.

104
00:06:39.184 --> 00:06:42.484
And so if it's gonna be able
to make changes everywhere,

105
00:06:42.484 --> 00:06:46.286
we need to be able to predict that and
make sure it works properly.

106
00:06:46.286 --> 00:06:49.690
Cool, so now that we do this,

107
00:06:49.690 --> 00:06:55.149
I'm just gonna save this,
and let's do this.

108
00:06:55.149 --> 00:07:01.123
We'll say const file =, and
we'll just get this file like this.

109
00:07:03.232 --> 00:07:05.449
Sorry, my thing is in here.

110
00:07:13.906 --> 00:07:16.749
Well, look at that.

111
00:07:16.749 --> 00:07:18.789
I didn't have to write a Dockerfile.

112
00:07:18.789 --> 00:07:24.823
[LAUGH] Yeah, I mean,
we're gonna finish it,

113
00:07:24.823 --> 00:07:27.776
but that is really it.

114
00:07:27.776 --> 00:07:31.774
[LAUGH] It's taking, again, a bumper,

115
00:07:31.774 --> 00:07:35.655
putting it around the developers, and

116
00:07:35.655 --> 00:07:42.133
then making a tool that the developers
can use reliably, right?

117
00:07:42.133 --> 00:07:46.486
And so again, in this case,
what we're doing is we're saying,

118
00:07:46.486 --> 00:07:51.411
all right, devs, you get to use this,
right, and then you use our tool.

119
00:07:51.411 --> 00:07:53.562
That's it, you use our tool.

120
00:07:53.562 --> 00:07:59.770
And when you use our tool,
You'll get exactly what you expect.

121
00:07:59.770 --> 00:08:06.835
So if we go back to here, and then I
believe it's build, right, build.json.

122
00:08:09.983 --> 00:08:11.220
Didn't do that right.

123
00:08:11.220 --> 00:08:15.016
I hate that my history
doesn't go to my terminal.

124
00:08:17.252 --> 00:08:19.859
Build, that should work.

125
00:08:19.859 --> 00:08:20.721
No, two up.

126
00:08:23.851 --> 00:08:27.611
Config, right, not build, okay.

127
00:08:27.611 --> 00:08:30.804
Also helps to remember the code you wrote.

128
00:08:30.804 --> 00:08:33.335
[LAUGH] There we go, cool.

