WEBVTT

1
00:00:00.226 --> 00:00:02.750
Before we go any step further,

2
00:00:02.750 --> 00:00:07.895
can all of you just type in
the pulumi command really quickly and

3
00:00:07.895 --> 00:00:12.083
tell me if it asks you to log in or
create an account?

4
00:00:12.083 --> 00:00:14.488
It might ask you to do that.

5
00:00:14.488 --> 00:00:15.629
No?

6
00:00:18.117 --> 00:00:21.300
Okay, cool, might ask you later,
but if it does, it's okay.

7
00:00:21.300 --> 00:00:23.212
It's free, so it's not that big of a deal.

8
00:00:23.212 --> 00:00:24.471
But let's move forward.

9
00:00:24.471 --> 00:00:28.949
There's a few things that we have to
do to setting up pulumi with Node.js.

10
00:00:28.949 --> 00:00:32.456
And I can actually show you
the documentation on it as well,

11
00:00:32.456 --> 00:00:34.854
let's go to pulumi nodejs get started.

12
00:00:41.838 --> 00:00:45.708
Go here and here we go.

13
00:00:45.708 --> 00:00:48.644
So we've already done
the brew install process and

14
00:00:48.644 --> 00:00:51.041
we've installed our language runtime.

15
00:00:51.041 --> 00:00:54.639
In this sense, it's gonna be TypeScript,
right, and we've got Node js.

16
00:00:54.639 --> 00:00:58.161
The next thing that it suggests us doing

17
00:00:58.161 --> 00:01:02.650
is actually setting up
access to our AWS account.

18
00:01:02.650 --> 00:01:06.854
We are gonna be using AWS, like I said,
so you will wanna make sure that you have

19
00:01:06.854 --> 00:01:09.552
some type of credentials
that you can connect to.

20
00:01:09.552 --> 00:01:12.494
And again, I can show you all that in
a second so we can get that set up.

21
00:01:12.494 --> 00:01:15.307
We don't need to necessarily do this yet,
though.

22
00:01:15.307 --> 00:01:18.368
We really don't because even though
we can set this up and run it,

23
00:01:18.368 --> 00:01:21.095
we have other things to be more
concerned about right now,

24
00:01:21.095 --> 00:01:23.061
which is like how we define these things.

25
00:01:23.061 --> 00:01:25.826
So we're gonna just go ahead and
go forward to Create a New Project.

26
00:01:25.826 --> 00:01:31.450
And so what I'm gonna do is I'm going
to follow these instructions here,

27
00:01:31.450 --> 00:01:35.000
except for I'm just going to do,
there we go.

28
00:01:35.000 --> 00:01:39.194
[LAUGH] Okay, so project name
is gonna be service-directory,

29
00:01:39.194 --> 00:01:42.527
Centralized automation for
internal services.

30
00:01:42.527 --> 00:01:47.522
Now, here's where we start getting into
the Pulumi stuff, which is pretty fun.

31
00:01:47.522 --> 00:01:53.344
Pulumi has this concept of stacks, and
basically stacks are your environments.

32
00:01:53.344 --> 00:01:57.256
So you'll have like a dev environment or
DevStack or ProdStack, whatever.

33
00:01:57.256 --> 00:02:01.021
For right now, we're just gonna use dev,
so we'll hit Enter.

34
00:02:01.021 --> 00:02:04.281
And then it's gonna ask us what
region we want to deploy it to.

35
00:02:04.281 --> 00:02:10.419
I actually want to do us-west-2
because that's where I normally work.

36
00:02:10.419 --> 00:02:12.192
And then it's gonna set up my project for
me.

37
00:02:12.192 --> 00:02:15.504
So actually, as I said,
you can just disregard the npm in it,

38
00:02:15.504 --> 00:02:19.158
it's gonna take care of all of that
with Pulumi new AWS TypeScript.

39
00:02:19.158 --> 00:02:23.758
So let's all get that setup so
that we can move forward.

40
00:02:33.662 --> 00:02:36.280
Also, we may have all just
throttled the Internet.

41
00:02:36.280 --> 00:02:38.480
[LAUGH]
&gt;&gt; It did ask me to log in.

42
00:02:38.480 --> 00:02:39.023
&gt;&gt; Did it?

43
00:02:39.023 --> 00:02:41.219
&gt;&gt; Yeah, once you do the new thing,
it asks you to log in.

44
00:02:41.219 --> 00:02:43.840
&gt;&gt; Okay, cool, yeah, so
if it asks you to log in,

45
00:02:43.840 --> 00:02:47.594
just create an account really easily,
it should be entirely free.

46
00:02:47.594 --> 00:02:51.842
And what's nice about it is if you've ever
used Terraform or anything like that,

47
00:02:51.842 --> 00:02:55.366
it's basically like Terraform Cloud a bit,
where it can help you.

48
00:02:55.366 --> 00:02:59.809
And if you wanna see,
you can actually go to pulumi.com,

49
00:02:59.809 --> 00:03:04.982
Sign in, Email.

50
00:03:08.803 --> 00:03:13.249
And so this is what Pulumi Cloud
can look like, essentially.

51
00:03:15.252 --> 00:03:17.411
And here are your stacks.

52
00:03:17.411 --> 00:03:20.327
So you'll see all of my stacks here that
I've got, and that's what we're gonna do,

53
00:03:20.327 --> 00:03:21.719
we're gonna create a stack basically.

54
00:03:26.924 --> 00:03:28.353
Yep.

55
00:03:28.353 --> 00:03:32.254
&gt;&gt; So if I'm using Linode or
Oracle VM, I'll be able to use Pulumi?

56
00:03:32.254 --> 00:03:33.856
&gt;&gt; Absolutely, yep.

57
00:03:33.856 --> 00:03:36.789
Pulumi has what are called providers, and

58
00:03:36.789 --> 00:03:41.119
again, if you use Terraform,
this is a very similar concept.

59
00:03:41.119 --> 00:03:42.302
What were the ones again?

60
00:03:42.302 --> 00:03:43.194
It was what and what?

61
00:03:43.194 --> 00:03:45.314
&gt;&gt; Linode or Oracle VM.

62
00:03:45.314 --> 00:03:50.955
&gt;&gt; So yep, there you go,
there's automation for Linode.

63
00:03:50.955 --> 00:03:54.680
And if we go to pulumi oracle,

64
00:03:54.680 --> 00:03:59.156
there we go, Oracle Cloud as well.

65
00:03:59.156 --> 00:04:05.245
Now, I will be fair, I don't know
how far it supports these platforms.

66
00:04:05.245 --> 00:04:10.035
But I do know that, yes,
it at least has beginning.

67
00:04:10.035 --> 00:04:13.118
Pulumi is still newer than Terraform.

68
00:04:13.118 --> 00:04:16.623
So Terraform's just been around
a lot longer, it has support for

69
00:04:16.623 --> 00:04:19.170
a lot of other things,
but yeah, for example,

70
00:04:19.170 --> 00:04:23.335
if you wanted to create an instance,
ComputeInstanceAgent, there you go.

71
00:04:23.335 --> 00:04:26.226
It's probably this,
I don't know, but yeah,

72
00:04:26.226 --> 00:04:29.624
you could definitely use
Pulumi with it for sure, yeah.

73
00:04:29.624 --> 00:04:32.105
And we're gonna be using
AWS with this actually so.

74
00:04:34.340 --> 00:04:38.692
Cool, everybody gets signed up?

75
00:04:38.692 --> 00:04:41.790
Yep, cool, awesome.

76
00:04:41.790 --> 00:04:43.386
Good, cool.

77
00:04:43.386 --> 00:04:44.528
All right, so let's move forward.

78
00:04:44.528 --> 00:04:46.835
So now that we've created our stack,

79
00:04:46.835 --> 00:04:51.677
you'll notice that it says to performe
an initial deployment, run pulumi up.

80
00:04:51.677 --> 00:04:55.144
Because you guys haven't gotten your
credentials yet or anything like that,

81
00:04:55.144 --> 00:04:58.610
which you're more than welcome to if
you'd like to, we'll do it in a second,

82
00:04:58.610 --> 00:04:59.677
don't worry about it.

83
00:04:59.677 --> 00:05:03.942
I'm just gonna show you what it looks like
from my end, which is really nothing.

84
00:05:03.942 --> 00:05:07.949
We're gonna look at our code
first before we do that, and so

85
00:05:07.949 --> 00:05:12.055
if we see in our code,
we'll see that we have a Pulumi.dev.

86
00:05:12.055 --> 00:05:17.005
We have a Pulumi.yaml, an index.ts,
a package.lock, package.json, and

87
00:05:17.005 --> 00:05:18.254
tsconfig, right?

88
00:05:18.254 --> 00:05:20.820
Let's talk about these
first two files here.

89
00:05:20.820 --> 00:05:25.940
Well, the first file, Pulumi.dev.yaml,
is the actual stack configuration.

90
00:05:25.940 --> 00:05:31.384
So Pulumi literally stores your
configuration in the source code.

91
00:05:31.384 --> 00:05:35.874
And you might say, well,
what does that mean for secrets and stuff?

92
00:05:35.874 --> 00:05:40.850
Pulumi can actually encrypt secrets and
store those in your repository as well.

93
00:05:40.850 --> 00:05:44.331
So if you've ever found yourself in
a circumstance where you're like,

94
00:05:44.331 --> 00:05:45.990
I don't know where to keep secrets,

95
00:05:45.990 --> 00:05:49.810
or we don't have a really good structured
secrets service, you could lean on this.

96
00:05:49.810 --> 00:05:53.711
You could basically encrypt your
secrets into the config here, and

97
00:05:53.711 --> 00:05:56.519
then just whenever it runs,
it decrypts them and

98
00:05:56.519 --> 00:06:00.228
then injects them into the configuration
the way that it needs.

99
00:06:00.228 --> 00:06:04.496
So for example,
if I wanted to store a secret,

100
00:06:04.496 --> 00:06:08.333
I could say, pulumi config set, right?

101
00:06:08.333 --> 00:06:13.663
hi-chat, right?

102
00:06:13.663 --> 00:06:17.776
And then we could say, hello-world, right?

103
00:06:17.776 --> 00:06:22.776
Now, if I do this, and
then I go back to that, look at that,

104
00:06:22.776 --> 00:06:25.592
there's my new option, right?

105
00:06:25.592 --> 00:06:30.947
So if we were to take this one step
further and lean on the concept of stacks,

106
00:06:30.947 --> 00:06:35.038
right, what I could do is I could say,
pulumi stack new.

107
00:06:35.038 --> 00:06:39.833
Or wait, sorry, pulumi stack,
I think it might be init.

108
00:06:39.833 --> 00:06:45.422
Yeah, and then I'm gonna say, you know
what, I actually want a prod one as well.

109
00:06:45.422 --> 00:06:47.175
Now, there's nothing there yet

110
00:06:47.175 --> 00:06:50.750
because I haven't actually added
anything to the configuration.

111
00:06:50.750 --> 00:06:55.430
But if I do pulumi stack ls,
we'll see I have dev and prod, and

112
00:06:55.430 --> 00:06:58.593
you'll see my star is currently on prod.

113
00:06:58.593 --> 00:07:02.527
So if I go back here and then I save
that variable again, but this time,

114
00:07:02.527 --> 00:07:04.072
it's hello-world-2.

115
00:07:04.072 --> 00:07:09.856
[COUGH] Feature flagging,
right, go back in here.

116
00:07:09.856 --> 00:07:16.500
Now, in prod, I have hello-world-2,
whereas in dev, I have hello-world, right?

117
00:07:16.500 --> 00:07:19.716
So this is another reason
why Pulumi is really nice,

118
00:07:19.716 --> 00:07:22.284
is it kind of is
completely out of the box.

119
00:07:22.284 --> 00:07:26.466
It'll give you secrets for you,
it'll give you configuration for you, and

120
00:07:26.466 --> 00:07:28.798
it also gives you that automation as well.

121
00:07:28.798 --> 00:07:33.613
So for now, we're not gonna worry about
prod, I'm just gonna delete it cuz

122
00:07:33.613 --> 00:07:38.519
I'm not worried about it, and I'm gonna
do pulumi stack select dev, okay?

123
00:07:38.519 --> 00:07:40.064
Cuz that's what we care about.

124
00:07:40.064 --> 00:07:44.411
Now, as I said, it created a whole
bunch of boilerplate for us.

125
00:07:44.411 --> 00:07:48.886
So before we actually do pulumi up,
I'm gonna look at this index.ts.

126
00:07:48.886 --> 00:07:54.295
So when you go back into index.ts,
what do we have?

127
00:07:54.295 --> 00:07:58.649
Well, it would appear that Pulumi
decided to put something in there.

128
00:07:58.649 --> 00:08:01.232
So in the off chance that I
would have done pulumi up,

129
00:08:01.232 --> 00:08:04.489
I would have seen that it was gonna
try and create a random bucket.

130
00:08:04.489 --> 00:08:09.275
I have a way of injecting my secrets,
so disregard the secrets --, but

131
00:08:09.275 --> 00:08:14.690
essentially all you need to really know is
that it just injects my secrets directly

132
00:08:14.690 --> 00:08:19.966
into the command for me so that I don't
accidentally share myself to all of you.

133
00:08:19.966 --> 00:08:24.378
But if I do the main command,
which is aws s3 ls,

134
00:08:24.378 --> 00:08:27.715
we should be able to see that, boom,

135
00:08:27.715 --> 00:08:33.328
I am actually able to access my
buckets and see all that stuff.

136
00:08:33.328 --> 00:08:38.849
So what I'm gonna do is I'm just
gonna say secrets -- pulumi up.

137
00:08:38.849 --> 00:08:40.926
Again, you will just
need to do pulumi up and

138
00:08:40.926 --> 00:08:43.468
you'll add the environment
variables to your show.

139
00:08:43.468 --> 00:08:45.706
I'm doing this as a security precaution.

140
00:08:48.638 --> 00:08:50.549
So, what do we have?

141
00:08:50.549 --> 00:08:58.181
Well, we have a output of a link
that says View Live, right?

142
00:08:58.181 --> 00:09:00.840
And you'll actually notice
that it's a full on URL.

143
00:09:00.840 --> 00:09:05.815
And if we click on this link,
it actually takes us to Pulumi Cloud.

144
00:09:05.815 --> 00:09:09.017
This is another thing that's
really nice about Pulumi,

145
00:09:09.017 --> 00:09:12.754
its runs will synchronize with your
account so that you always have

146
00:09:12.754 --> 00:09:16.840
a centralized place of accessing this
information if you need to later.

147
00:09:16.840 --> 00:09:21.022
And again, it's very similar like
Terraform Cloud in that regard,

148
00:09:21.022 --> 00:09:25.577
it is different in the sense that Pulumi
does not provide you with runners.

149
00:09:25.577 --> 00:09:30.341
Terraform Cloud will actually let you run
on their infrastructure with their own

150
00:09:30.341 --> 00:09:34.264
runners and stuff like that,
Pulumi is essentially just all you,

151
00:09:34.264 --> 00:09:35.541
you run it yourself.

152
00:09:35.541 --> 00:09:42.996
So if we look here, we can see
that in my output, I have changes.

153
00:09:42.996 --> 00:09:46.782
So you see I have changes proposed,
the type of changes in this case,

154
00:09:46.782 --> 00:09:51.422
it's gonna be pulumi, Stack Pulumi,
the name, service-directory-dev.

155
00:09:51.422 --> 00:09:52.847
This is actually my stack.

156
00:09:52.847 --> 00:09:55.617
Okay, so I'm creating a new stack,
cool, and

157
00:09:55.617 --> 00:09:58.266
I'm creating the dev environment for that.

158
00:09:58.266 --> 00:10:00.494
And then in that environment,

159
00:10:00.494 --> 00:10:05.812
you'll notice that I'm creating
an aws s3 bucket, my bucket, right?

160
00:10:05.812 --> 00:10:11.581
The TLDR on this is that stacks own
everything, right, in a given environment.

161
00:10:11.581 --> 00:10:16.484
So the idea is that when we
create a bucket for the DevStack,

162
00:10:16.484 --> 00:10:20.712
it's only going to create
it in that environment.

163
00:10:20.712 --> 00:10:26.671
Until you go to prod and then run it
again, it won't ever get created.

164
00:10:26.671 --> 00:10:30.571
So let's go back here, and
we're gonna actually say no,

165
00:10:30.571 --> 00:10:32.572
that we don't wanna do this.

166
00:10:32.572 --> 00:10:35.534
Because we've already got
a decent understanding of,

167
00:10:35.534 --> 00:10:38.190
we know that we can lean on Pulumi for
automation.

168
00:10:38.190 --> 00:10:41.322
We know that we're gonna write it in
the language that we want to, and

169
00:10:41.322 --> 00:10:43.914
we know that we get the expected
result of, okay, cool,

170
00:10:43.914 --> 00:10:46.944
if we connect it to our AWS account,
we should get some resources.

