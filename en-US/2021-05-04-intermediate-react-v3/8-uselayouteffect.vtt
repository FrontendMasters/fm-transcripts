WEBVTT

1
00:00:00.640 --> 00:00:03.767
Let's go back to one that actually
might be useful for you sometimes,

2
00:00:03.767 --> 00:00:06.260
especially for
my friends that like doing animations.

3
00:00:06.260 --> 00:00:07.900
This one's to pay attention to.

4
00:00:10.190 --> 00:00:12.940
Let's go talk about one
that's called layout effect.

5
00:00:14.800 --> 00:00:16.880
So use layout effect.

6
00:00:16.880 --> 00:00:19.230
We've seen effect before use effect.

7
00:00:20.250 --> 00:00:24.210
But what I was telling you before is
use layout effect or sorry, use effect.

8
00:00:24.210 --> 00:00:26.640
Is scheduled and
you don't know when it's gonna run.

9
00:00:26.640 --> 00:00:31.077
And that's a problem because sometimes
you need that function to immediately run

10
00:00:31.077 --> 00:00:32.690
right after right.

11
00:00:32.690 --> 00:00:35.479
So if I have layout effect component here,

12
00:00:35.479 --> 00:00:39.738
if I wanna measure what this is
immediately after I let go of this,

13
00:00:39.738 --> 00:00:44.007
I need this to execute immediately
after the event has happened.

14
00:00:44.007 --> 00:00:46.818
So I need the render to happen.

15
00:00:46.818 --> 00:00:51.740
And then I need the next thing that
react runs to be my effect, right?

16
00:00:51.740 --> 00:00:54.140
Those things must follow
each other immediately.

17
00:00:55.590 --> 00:00:58.339
If that's your case, and you have
a constraint that like you can't have

18
00:00:58.339 --> 00:01:01.860
anything scheduled between them,
there's a function called layout effect.

19
00:01:01.860 --> 00:01:03.830
Which actually works more.

20
00:01:03.830 --> 00:01:08.827
That's how component did update used
to work still works might still work

21
00:01:08.827 --> 00:01:09.560
that way.

22
00:01:11.630 --> 00:01:16.044
So if you're migrating
from a class based react

23
00:01:16.044 --> 00:01:21.020
component to a functions and
hooks based component.

24
00:01:21.020 --> 00:01:25.812
Which by the way you don't
necessarily have to do it's fine to

25
00:01:25.812 --> 00:01:29.140
leave class components in your code base.

26
00:01:30.850 --> 00:01:34.871
You might need to use layout effect if
you're trying to capture component update

27
00:01:34.871 --> 00:01:35.530
correctly.

28
00:01:37.620 --> 00:01:42.320
Because this is the behavior of how
component did update still works.

29
00:01:42.320 --> 00:01:44.370
So, let's talk about it again.

30
00:01:45.620 --> 00:01:46.820
Effect is scheduled.

31
00:01:46.820 --> 00:01:50.130
There might be stuff that happens after
your component finishes rendering.

32
00:01:50.130 --> 00:01:54.740
Use layout effect happens immediately
after your render finishes.

33
00:01:54.740 --> 00:01:56.467
So again, this is gonna be useful for

34
00:01:56.467 --> 00:01:59.424
people that are doing things like
animation because you need to

35
00:01:59.424 --> 00:02:02.620
capture immediately after this
component finishes rendering.

36
00:02:02.620 --> 00:02:08.892
Where is this in this particular case, I'm
measuring the height and the area of this.

37
00:02:11.030 --> 00:02:13.930
I'm also using a ref to
keep a handle on this box.

38
00:02:15.680 --> 00:02:18.022
Let's see,
I think if I put this as use effect.

39
00:02:22.612 --> 00:02:25.139
To import that, use effect.

40
00:02:28.903 --> 00:02:30.217
Scroll down here.

41
00:02:35.453 --> 00:02:39.731
So it actually is able to render this
fairly accurate most of the time, but

42
00:02:39.731 --> 00:02:43.802
the problem is that you could have
animations that are coming in here in

43
00:02:43.802 --> 00:02:45.840
between them and modifying it.

44
00:02:45.840 --> 00:02:48.960
And so at the end of it,
you're actually not gonna be guaranteed.

45
00:02:48.960 --> 00:02:51.810
But you're getting the correct number
because there could be things in between

46
00:02:51.810 --> 00:02:52.970
there that could be happening.

47
00:02:54.220 --> 00:02:58.927
So, the key here with use layout
effect is that you just need

48
00:02:58.927 --> 00:03:03.270
to have that guarantee of
the immediacy of execution.

49
00:03:03.270 --> 00:03:06.681
And again with things like animations
that becomes very important or

50
00:03:06.681 --> 00:03:09.580
anything that you're like
measuring the DOM after that.

51
00:03:11.350 --> 00:03:13.914
So I think that's probably the best rule
of thumb I can think of at the moment.

52
00:03:13.914 --> 00:03:18.106
If you're measuring the DOM taking
width and height measurements and

53
00:03:18.106 --> 00:03:19.251
things like that.

54
00:03:19.251 --> 00:03:23.189
That's gonna be a good use cases I might
need to use layout effect instead of

55
00:03:23.189 --> 00:03:25.705
effect, if you need those
kind of guarantees.

56
00:03:25.705 --> 00:03:28.061
In this case,
it ends up not being terribly important.

57
00:03:30.589 --> 00:03:32.610
But yeah, there you go.

58
00:03:32.610 --> 00:03:33.970
You typically don't need to do it.

59
00:03:33.970 --> 00:03:34.900
I'll put it that way.

60
00:03:34.900 --> 00:03:37.732
And it's more performance to do effect
because react is really good at

61
00:03:37.732 --> 00:03:39.114
scheduling things.

62
00:03:39.114 --> 00:03:41.260
Yeah, that's actually probably
a really good question.

63
00:03:41.260 --> 00:03:43.375
So I have L equals use ref here.

64
00:03:43.375 --> 00:03:45.309
And I'm just creating
right now the container.

65
00:03:45.309 --> 00:03:49.350
And then if you look down here at
the text area, I'm saying ref equals L.

66
00:03:50.460 --> 00:03:55.680
This is just saying, hey, I want the ref
to always refer to this text area.

67
00:03:56.780 --> 00:04:00.019
It's and here you can see
inside of the set width and

68
00:04:00.019 --> 00:04:03.567
set height that can refer to current and
current facts.

69
00:04:03.567 --> 00:04:05.685
Let's just put console dot log.

70
00:04:07.484 --> 00:04:11.919
L dot current.

71
00:04:11.919 --> 00:04:16.950
Then if I look here in the console,
you can see here it is this text area.

72
00:04:21.358 --> 00:04:22.540
That one.

73
00:04:22.540 --> 00:04:27.311
So that's what ref does is like, because
what's hard about this is react can create

74
00:04:27.311 --> 00:04:30.420
and destroy that text
area a bunch of times.

75
00:04:30.420 --> 00:04:32.920
You don't know when it's going
to create it and destroy it.

76
00:04:32.920 --> 00:04:36.587
And so by putting the ref = el here,
you're actually guaranteed that it's going

77
00:04:36.587 --> 00:04:39.418
to refer to the current text area
being rendered on the screen.

78
00:04:43.838 --> 00:04:45.460
It's good question.

79
00:04:45.460 --> 00:04:47.629
That's another really good use case for

80
00:04:47.629 --> 00:04:51.346
refs is referring to DOM elements
in within your react application.

81
00:04:51.346 --> 00:04:58.670
Pretty simple again 99.99% of the time,
just use the fact it's fine.

82
00:04:58.670 --> 00:05:00.220
You don't need to use layout effect.

83
00:05:00.220 --> 00:05:03.800
It's really for I need guarantees, right?

84
00:05:04.900 --> 00:05:07.475
Like millisecond guarantees, basically.

85
00:05:07.475 --> 00:05:12.590
So this could be the difference between
a animation looking like really jumpy or

86
00:05:12.590 --> 00:05:17.552
like, I'm going here and then I'm
hopping here because the measurement was

87
00:05:17.552 --> 00:05:21.010
incorrect or
looking very smooth all the way across.

88
00:05:23.260 --> 00:05:23.960
So I was there a question?

89
00:05:26.210 --> 00:05:29.400
&gt;&gt; Yeah.
So if we said in line number four,

90
00:05:29.400 --> 00:05:34.870
if we set the width to 20,
it's not taking any width and height.

91
00:05:36.460 --> 00:05:39.310
How do we set the predefined width and
height?

92
00:05:42.710 --> 00:05:48.440
&gt;&gt; Line 28 yeah,
I mean that's a good example this as well.

93
00:05:51.830 --> 00:05:55.869
So if I just click on it,
I think I set this so

94
00:05:55.869 --> 00:06:01.274
that whenever you click on it,
it sets the width to zero.

95
00:06:01.274 --> 00:06:06.224
This way I'm still able to
measure correctly whereas

96
00:06:06.224 --> 00:06:10.734
if I do lay out or
if I do effect here and I do this and

97
00:06:10.734 --> 00:06:15.684
I click on this, all right,
so I have this text area,

98
00:06:15.684 --> 00:06:21.300
I make this 150 and
now this is using effect over here.

99
00:06:21.300 --> 00:06:25.090
If I click on this,
I can register a click event.

100
00:06:28.160 --> 00:06:31.224
Notice this is no longer correct,
this width and

101
00:06:31.224 --> 00:06:36.156
height because I measured it too early
right because the in that millisecond,

102
00:06:36.156 --> 00:06:40.660
because effect happened later, and
the click event happened sooner.

103
00:06:42.290 --> 00:06:44.827
This now width is incorrectly or
the height,

104
00:06:44.827 --> 00:06:47.110
I mean, it's just incorrect, right?

105
00:06:47.110 --> 00:06:52.848
This is obviously not a width one or
a height 147 because what was happening

106
00:06:52.848 --> 00:06:58.600
before is a drag event on a text area is
not actually an event in react, right?

107
00:06:58.600 --> 00:07:00.200
It's like okay,
you dragged it, I don't care.

108
00:07:00.200 --> 00:07:03.820
I'm not gonna re render that because
nothing changed according to react.

109
00:07:03.820 --> 00:07:08.083
So if I don't put a set width on
there because now it's actually doing

110
00:07:08.083 --> 00:07:09.120
the measuring.

111
00:07:10.700 --> 00:07:11.530
Got it, okay.

112
00:07:15.100 --> 00:07:18.954
So, I'm looping back around
to my understanding of this,

113
00:07:18.954 --> 00:07:23.820
it took me a second, effect you can
see here is actually normally correct.

114
00:07:25.310 --> 00:07:28.481
So if I come back into effect,
this is normally going to be correct for

115
00:07:28.481 --> 00:07:29.640
everything that you do.

116
00:07:29.640 --> 00:07:31.930
However, you are not
guaranteed this is correct.

117
00:07:33.250 --> 00:07:36.834
Now if you're doing like a bunch of
stuff like especially animations

118
00:07:36.834 --> 00:07:40.602
where you're like really tying up,
that thread, there could be enough

119
00:07:40.602 --> 00:07:45.520
time between when you modify it and when
you measure it that could be out of sync.

120
00:07:45.520 --> 00:07:47.050
And that's a problem.

121
00:07:47.050 --> 00:07:50.909
When you do it with use layout effect, you
have an absolute guarantee that that is

122
00:07:50.909 --> 00:07:54.680
going to be the correct measurement as
soon as that user is done dragging that.

123
00:07:57.442 --> 00:07:59.935
Okay, that is the correct solution.

124
00:07:59.935 --> 00:08:01.248
It just took me a second to get there.

