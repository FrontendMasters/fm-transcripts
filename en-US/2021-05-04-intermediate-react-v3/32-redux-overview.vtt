WEBVTT

1
00:00:00.330 --> 00:00:01.546
So we just talked about TypeScript.

2
00:00:01.546 --> 00:00:04.476
And we are about to get into Redux.

3
00:00:04.476 --> 00:00:09.430
I have a interesting and
checkered history with Redux.

4
00:00:09.430 --> 00:00:11.564
I do actually really like it.

5
00:00:11.564 --> 00:00:15.061
But it's also been a great source of
stress in my life if we're gonna be

6
00:00:15.061 --> 00:00:17.320
totally honest about it.

7
00:00:17.320 --> 00:00:20.816
But I think it's useful for
you to know it as a tool and,

8
00:00:20.816 --> 00:00:25.691
inaccurately when I ask people are like
what do you wanna learn about Redux?

9
00:00:25.691 --> 00:00:28.643
One of the top topics is
always what about Redux?

10
00:00:28.643 --> 00:00:31.815
So I'm just gonna teach it to you so
that you can understand what it is when

11
00:00:31.815 --> 00:00:35.250
you might wanna use it, and when you
might actually wanna use something else.

12
00:00:36.940 --> 00:00:42.070
So we're gonna go back to
another fresh copy of our repo.

13
00:00:42.070 --> 00:00:44.631
So I'm gonna close this.

14
00:00:44.631 --> 00:00:47.130
So this is another fresh
copy of my repo here.

15
00:00:47.130 --> 00:00:49.840
I'm gonna run npm install really quick.

16
00:00:49.840 --> 00:00:55.685
So let's talk about what Redux is,
where it came from, why it came about.

17
00:00:55.685 --> 00:01:00.824
Initially, there was a thing called
Flux and Facebook used to use

18
00:01:00.824 --> 00:01:06.253
this thing called Flux and
empowered a lot of their react front ends.

19
00:01:06.253 --> 00:01:09.640
Famously the ads product was
all built in React and Flux.

20
00:01:11.610 --> 00:01:15.143
The idea with Flux is it was a data
store that lived on the side of React.

21
00:01:15.143 --> 00:01:18.180
So you had react over here
you had Flux over here.

22
00:01:18.180 --> 00:01:23.082
And React would send actions over the Flux
stores and then the Flux stores and

23
00:01:23.082 --> 00:01:24.393
send back the data.

24
00:01:24.393 --> 00:01:27.514
And the idea is we need wanna isolate
the data portion of our application

25
00:01:27.514 --> 00:01:30.490
from the view portion and
have the view portion just read from that.

26
00:01:31.640 --> 00:01:36.110
Well, for each individual piece, they had
an individual Flux store and at one point,

27
00:01:36.110 --> 00:01:38.990
they famously had over 100
Flux stores on one page and

28
00:01:38.990 --> 00:01:41.580
that's when they finally said,
now we're out.

29
00:01:41.580 --> 00:01:42.758
We don't like this anymore.

30
00:01:42.758 --> 00:01:47.300
And so people blew or
didn't like Flux as much.

31
00:01:48.590 --> 00:01:51.097
So very smart person who is now
currently on the React team.

32
00:01:51.097 --> 00:01:53.540
Dan Abramov came up with
this idea of Redux.

33
00:01:53.540 --> 00:02:00.051
He's like, instead of having 100 Flux
stores, why don't we have one Redux store.

34
00:02:00.051 --> 00:02:02.980
And then everything is just like
a property in that one Redux store.

35
00:02:02.980 --> 00:02:07.267
So you have one state tree,
as if people say.

36
00:02:07.267 --> 00:02:10.496
This ended up being actually a pretty
decent user experience and so

37
00:02:10.496 --> 00:02:13.400
people stuck with it, but
the general idea is the same.

38
00:02:13.400 --> 00:02:18.152
You have one store,
React reads from the Redux store.

39
00:02:18.152 --> 00:02:21.733
And then in order to modify the Redux
stores, it sends actions back to

40
00:02:21.733 --> 00:02:26.220
the Redux stores, and actions are just
like, make this thing change, right?

41
00:02:26.220 --> 00:02:28.984
So, if you remember
the useReducer portion, right?

42
00:02:28.984 --> 00:02:32.557
We sent back in action says,
hey, increment this by 50, or

43
00:02:32.557 --> 00:02:35.464
decrement this by 50,
that's exactly Redux.

44
00:02:35.464 --> 00:02:41.386
That's all Redux is and so useReducer is
basically just like a mini Redux store.

45
00:02:41.386 --> 00:02:43.912
We're gonna take that that
idea of a mini Redux store and

46
00:02:43.912 --> 00:02:45.750
we're gonna make a normal Redux store.

47
00:02:47.850 --> 00:02:50.600
So, what are good reasons to use Redux?

48
00:02:50.600 --> 00:02:51.866
One, we have context already.

49
00:02:51.866 --> 00:02:56.169
So it actually became a little bit
more obsolete recently when we

50
00:02:56.169 --> 00:02:58.168
got a better form of context.

51
00:02:58.168 --> 00:03:03.111
But it still has its good uses, right?

52
00:03:03.111 --> 00:03:05.995
So one thing Redux code
is extremely testable.

53
00:03:05.995 --> 00:03:10.862
And when I say extremely tough, I mean,
it's extremely testable that you

54
00:03:10.862 --> 00:03:14.571
can test basically every portion
of your Redux stores and

55
00:03:14.571 --> 00:03:19.375
that why that's positive is changing
state is usually what causes bugs.

56
00:03:19.375 --> 00:03:21.870
Your state changed in some unexpected way.

57
00:03:21.870 --> 00:03:24.270
So if you can test every portion of that,

58
00:03:24.270 --> 00:03:28.648
make sure that it all integrates
correctly, you can have confidence that

59
00:03:28.648 --> 00:03:33.538
you're not gonna have, at least bugs in
the way that your code is tested, right?

60
00:03:33.538 --> 00:03:34.582
Otherwise your test will fail.

61
00:03:36.590 --> 00:03:39.429
The other thing is that debugging
in Redux is really cool.

62
00:03:39.429 --> 00:03:40.840
And I'm gonna show you at
the end how to do that.

63
00:03:42.710 --> 00:03:50.389
So let's talk about the life cycle
of Redux and this is verbose.

64
00:03:50.389 --> 00:03:53.047
I'm being verbose on purpose,
but it's also complicated.

65
00:03:53.047 --> 00:03:59.380
Let's say you have a Textbox and then the
state of that Textbox is stored in Redux.

66
00:03:59.380 --> 00:04:04.600
Let's talk about the process to get from
the user typing to it being stored and

67
00:04:04.600 --> 00:04:07.104
then rerendered and read and react.

68
00:04:07.104 --> 00:04:09.730
So user types and input box.

69
00:04:09.730 --> 00:04:14.501
This calls an action creator, which
creates an object that's called an action.

70
00:04:14.501 --> 00:04:20.010
Then you call the dispatch function
which dispatch that action to Redux.

71
00:04:21.140 --> 00:04:25.327
Redux then takes that action with
the current state of the store and

72
00:04:25.327 --> 00:04:29.226
that action, and
it calls what's called the route reducer.

73
00:04:29.226 --> 00:04:32.235
And a reducer is just a function that
takes in state and an action and

74
00:04:32.235 --> 00:04:33.500
returns new state.

75
00:04:33.500 --> 00:04:35.065
That's it.

76
00:04:35.065 --> 00:04:39.534
Okay, the route reducer will often
delegate that to a smaller reducer through

77
00:04:39.534 --> 00:04:43.325
a smaller reducer will then do
whatever that action says, right so

78
00:04:43.325 --> 00:04:45.500
it'll modify the state in some way.

79
00:04:45.500 --> 00:04:47.004
It'll return that.

80
00:04:47.004 --> 00:04:51.995
The route reducer returns the state
of the new store that is then fed

81
00:04:51.995 --> 00:04:56.824
back to React and React uses that
state to render the view again.

82
00:04:56.824 --> 00:04:57.526
It's a lot of words.

83
00:04:57.526 --> 00:04:59.190
It's very abstract.

84
00:04:59.190 --> 00:05:01.490
I'm going to walk you
through that in code, but

85
00:05:01.490 --> 00:05:03.396
I just want you to be prepared for that.

86
00:05:03.396 --> 00:05:05.140
Those are the steps that
we're gonna go through.

87
00:05:06.170 --> 00:05:09.281
So, it takes a bit of setting up,
a bit of ceremony.

88
00:05:09.281 --> 00:05:10.710
So, stick with me while we set this up.

89
00:05:12.410 --> 00:05:17.524
Okay, the first thing I want you

90
00:05:17.524 --> 00:05:22.070
to do now is I want you to do npm

91
00:05:22.070 --> 00:05:27.185
install Redux at 4.0.5 and

92
00:05:27.185 --> 00:05:32.500
then React Redux at 7.2.2.

93
00:05:32.500 --> 00:05:36.860
This install Redux and the connecting
layer between React and Redux.

94
00:05:39.170 --> 00:05:41.911
Okay, we're gonna make a new file.

95
00:05:41.911 --> 00:05:46.310
We're gonna save that in our source
directory and we're gonna call

96
00:05:46.310 --> 00:05:50.950
it store.js, lowercase store.js
cuz this is not a react component.

97
00:05:50.950 --> 00:05:52.280
This is a Redux store.

98
00:05:54.520 --> 00:06:00.560
We're gonna import create
store from Redux and

99
00:06:00.560 --> 00:06:05.694
we're going to import reducer from a yet

100
00:06:05.694 --> 00:06:08.716
to be created reducer.

101
00:06:13.478 --> 00:06:14.678
Okay?

102
00:06:14.678 --> 00:06:19.272
Now this really can be as easy as
const store equals create store.

103
00:06:21.084 --> 00:06:21.720
Store.

104
00:06:22.990 --> 00:06:26.914
This is enough for
us to create a Redux store.

105
00:06:26.914 --> 00:06:30.370
But let's take this one step further.

106
00:06:30.370 --> 00:06:32.459
This thing's called the Redux DeTools.

107
00:06:32.459 --> 00:06:35.903
And I'm gonna show you how to
implement them now cuz it's

108
00:06:35.903 --> 00:06:37.569
easier if we do it this way.

109
00:06:37.569 --> 00:06:39.001
So we're gonna say type of window.

110
00:06:39.001 --> 00:06:43.708
We're just gonna make sure that
the window is an object which this

111
00:06:43.708 --> 00:06:47.574
means that this can run in
node without any problems.

112
00:06:47.574 --> 00:06:52.620
And Type of window

113
00:06:52.620 --> 00:07:00.890
dot underscore underscore
Redux DevTools extension.

114
00:07:02.300 --> 00:07:06.619
So if you install
the Redux Dev Tools extension,

115
00:07:06.619 --> 00:07:14.007
it populates itself on this particular
global variable is not equal to undefined.

116
00:07:14.007 --> 00:07:15.253
By the way, I just copy and

117
00:07:15.253 --> 00:07:18.893
paste these off the redux site every
single time I almost never write these.

118
00:07:22.510 --> 00:07:24.278
If it is then call that function.

119
00:07:24.278 --> 00:07:30.036
So if that's a thing, Call that function.

120
00:07:33.460 --> 00:07:37.442
Otherwise, just give it
a function of returns.

121
00:07:37.442 --> 00:07:40.299
This is called an identity functions,
something that returns itself.

122
00:07:43.576 --> 00:07:47.357
I don't really need to care too much
about what this does but basically, if

123
00:07:47.357 --> 00:07:52.040
Redux DevTools are installed which you're
gonna Like the Chrome extension store or

124
00:07:52.040 --> 00:07:54.870
the Firefox extension store,
you'll enable them.

125
00:07:54.870 --> 00:08:00.572
If not, they'll just not do anything,
that's the gist of what we typed out here.

126
00:08:00.572 --> 00:08:03.131
And then we're gonna say
export default store.

127
00:08:07.042 --> 00:08:12.280
Okay, so now we have a Redux store,
it's really easy to set up.

128
00:08:13.520 --> 00:08:17.030
Now, let's go ahead and
go code our first reducer.

