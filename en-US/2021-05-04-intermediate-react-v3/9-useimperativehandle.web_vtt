WEBVTT

1
00:00:00.000 --> 00:00:03.010
Let's talk about use imperative handle.

2
00:00:05.560 --> 00:00:10.626
So I'm going to use imperative handle,
I'm going to scroll down here and

3
00:00:10.626 --> 00:00:15.118
I'm going to venture to say that
unless you are a library author,

4
00:00:15.118 --> 00:00:17.830
you will literally never use this one.

5
00:00:19.350 --> 00:00:21.455
I want you to know about
it that it exists but

6
00:00:21.455 --> 00:00:24.570
this is really only useful if
you're creating like a library.

7
00:00:24.570 --> 00:00:30.236
So I feel like you're an SDK author at
Microsoft and your entire team consumes

8
00:00:30.236 --> 00:00:35.289
your SDK, you might use this If you
are just writing an application,

9
00:00:35.289 --> 00:00:39.230
for airbnb.com,
you probably will never use this.

10
00:00:41.040 --> 00:00:47.050
So let's talk about this particular,
good piece right now,

11
00:00:47.050 --> 00:00:53.520
if I have a address here, so a city and
a state in the United States so

12
00:00:53.520 --> 00:00:59.435
I can put like Salt Lake City,
and I can click Validate form.

13
00:00:59.435 --> 00:01:02.913
It's gonna say that's a valid
form you put in a valid city so

14
00:01:02.913 --> 00:01:06.715
set's say I forgot Salt Lake City and
I just did that.

15
00:01:06.715 --> 00:01:10.252
I want to turn this red, right or

16
00:01:10.252 --> 00:01:15.493
if I come in to settle and
then I put Washington,

17
00:01:15.493 --> 00:01:19.770
it's gonna say, that's not right.

18
00:01:19.770 --> 00:01:23.595
I expected a two letter state, right, so

19
00:01:23.595 --> 00:01:28.305
here's my code that does
that kind of validation.

20
00:01:29.882 --> 00:01:35.141
I have an elaborate input,
that's this one and I have a form, which

21
00:01:35.141 --> 00:01:41.340
is the imperative handle component that
has two elaborate inputs inside of it.

22
00:01:43.450 --> 00:01:46.723
Now what I wanna be able to do is like,
hey, I want to turn

23
00:01:46.723 --> 00:01:51.620
your border red if someone something
doesn't validate on that particular thing.

24
00:01:52.780 --> 00:01:56.979
But all that validation logic is going to
happen here in the imperative component

25
00:01:56.979 --> 00:01:59.694
and I want to be able to
inform the elaborated input,

26
00:01:59.694 --> 00:02:02.310
because it has no functionality in and
of itself.

27
00:02:02.310 --> 00:02:06.346
It's just like it just shows what
the user is putting in and it has some,

28
00:02:06.346 --> 00:02:07.289
display stuff,

29
00:02:07.289 --> 00:02:12.500
but none of the validation logic lives
inside of the elaborate input itself.

30
00:02:12.500 --> 00:02:17.718
Because notice here, Seattle and
Washington, they're both just

31
00:02:17.718 --> 00:02:23.130
elaborate inputs so how do I make
those show errors or not show errors?

32
00:02:25.380 --> 00:02:31.094
Well, the way you can do that is something
called a use imperative handles so

33
00:02:31.094 --> 00:02:35.736
I have this hook here,
basically returns a function that that

34
00:02:35.736 --> 00:02:39.330
a parent can call to say,
hey, focus, right?

35
00:02:40.422 --> 00:02:45.755
And that's another part here, that's
actually the more important In part.

36
00:02:46.775 --> 00:02:49.655
Let's say I put in nothing here and
I clicked here on and

37
00:02:49.655 --> 00:02:51.595
I clicked on validate form.

38
00:02:51.595 --> 00:02:55.696
I want the focus of the user to jump
from here to the one that's wrong so

39
00:02:55.696 --> 00:02:57.815
I click Validate Form.

40
00:02:57.815 --> 00:03:01.385
Notice that my focus jumped there and
I didn't do anything, right?

41
00:03:01.385 --> 00:03:05.925
It just jumped over there, that's not
something that the parent could do.

42
00:03:05.925 --> 00:03:09.593
The parent can't reach into the child and
say, Hey, focus on this,

43
00:03:09.593 --> 00:03:12.130
input element that exists inside of you.

44
00:03:12.130 --> 00:03:15.273
That's something that the child
has to do in and of itself and

45
00:03:15.273 --> 00:03:19.290
the only way you're actually able to
do that is with this imperative handle.

46
00:03:21.600 --> 00:03:29.530
So this focus thing here,
I use another ref here, so where's my ref?

47
00:03:29.530 --> 00:03:31.750
My input ref right there, right?

48
00:03:31.750 --> 00:03:35.953
And then that is placed on this input
element here with the input ref,

49
00:03:35.953 --> 00:03:40.750
right, so that's going to refer to this
input for each individual one right.

50
00:03:40.750 --> 00:03:44.835
The Seattle has one and
the Washington one here, has one as well.

51
00:03:46.465 --> 00:03:50.220
Then I had this imperative Hana which
allows me to create a function on this

52
00:03:50.220 --> 00:03:50.895
component.

53
00:03:52.155 --> 00:03:52.844
Okay, so

54
00:03:52.844 --> 00:03:58.025
now this function on this component
has a functionality called focus,

55
00:03:58.025 --> 00:04:04.605
which allows me to call the focus on the
input and I then pass that to the parent.

56
00:04:04.605 --> 00:04:07.386
So I had this elaborate input for

57
00:04:07.386 --> 00:04:12.227
this imperative handle which
is being rendered here and

58
00:04:12.227 --> 00:04:16.347
then it has two refs,
a city one and a state one,

59
00:04:16.347 --> 00:04:21.497
I'm putting those refs on the city one and
the statement but

60
00:04:21.497 --> 00:04:28.700
notice that these reps are going on custom
components, right things that I made.

61
00:04:28.700 --> 00:04:31.481
It's not going on an input or
a div or an h1 or anything like that,

62
00:04:31.481 --> 00:04:33.830
it's going on what's something I made?

63
00:04:33.830 --> 00:04:38.447
This allows the child to modify the ref
that's handed back to the parent,

64
00:04:38.447 --> 00:04:43.360
so the child takes as soon as like, okay,
this state l now has a function called

65
00:04:43.360 --> 00:04:46.510
focus that you the parent
can call imperatively.

66
00:04:46.510 --> 00:04:49.831
That's where the imperative part
of the handle comes from, so

67
00:04:49.831 --> 00:04:53.843
now I have this functionality of validate
which I definitely did not copy and

68
00:04:53.843 --> 00:04:55.990
paste directly off the Stack Overflow.

69
00:04:57.700 --> 00:05:02.030
And I can call city L,
which is the wrath right?

70
00:05:02.030 --> 00:05:05.639
Current dot focus and
I'm calling this from the parent, so

71
00:05:05.639 --> 00:05:10.420
the parent is actually calling a function
on the child with the child created.

72
00:05:13.210 --> 00:05:16.050
Now, you might question like,
why would I ever do this?

73
00:05:16.050 --> 00:05:17.555
And the answer is you wouldn't,

74
00:05:17.555 --> 00:05:20.690
right typically, you would just
Implement all this code yourself.

75
00:05:20.690 --> 00:05:23.098
But if I'm a library author, and

76
00:05:23.098 --> 00:05:27.312
I make a MPM install elaborate
input that you can install,

77
00:05:27.312 --> 00:05:32.940
I need to provide you away to call
focus on this elaborate input ,right?

78
00:05:32.940 --> 00:05:37.404
So this is made for library authors but

79
00:05:37.404 --> 00:05:43.701
it is something that react does for
you ,make sense?

80
00:05:43.701 --> 00:05:47.776
Okay, it kind of makes sense I mean,
that's that's good enough for me,

81
00:05:47.776 --> 00:05:51.780
it's good enough that you
kind of know that it exists.

82
00:05:51.780 --> 00:05:55.520
It's going to be more important
that sometime you're going to be.

83
00:05:55.520 --> 00:05:57.590
Like NPM install an elaborate input and
then be like,

84
00:05:57.590 --> 00:06:00.650
hey, you need to put a ref on this so
that you can call this function.

85
00:06:00.650 --> 00:06:02.944
This is why, that's the key part for

86
00:06:02.944 --> 00:06:07.320
you to take away is how to use these
not necessarily how to create them.

