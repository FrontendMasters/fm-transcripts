WEBVTT

1
00:00:00.520 --> 00:00:02.040
Let's go to SearchParams.

2
00:00:02.040 --> 00:00:04.390
So SearchParams.

3
00:00:06.020 --> 00:00:10.700
Let's rename that Tsx.

4
00:00:17.727 --> 00:00:20.767
So, up here we're gonna have
to import FunctionComponent.

5
00:00:25.772 --> 00:00:30.220
Okay, from here,
we're also going to have to import.

6
00:00:32.590 --> 00:00:33.910
Nope, not that, that's fine.

7
00:00:35.300 --> 00:00:40.378
From APIResponse, import

8
00:00:40.378 --> 00:00:48.602
PetAPIResponse Animal and

9
00:00:48.602 --> 00:00:54.830
Pet from ./APIResponseTypes.

10
00:00:54.830 --> 00:01:01.547
So first of all ANIMALS is
obviously an Animal array.

11
00:01:04.557 --> 00:01:07.500
Now we could have left it, it was
technically an array of string as well.

12
00:01:07.500 --> 00:01:10.214
But now since we have an animal
type we might as well use it here.

13
00:01:12.443 --> 00:01:18.841
SearchParams, we have to tell
that it is a function component,

14
00:01:18.841 --> 00:01:21.452
That has RouteComponentProps.

15
00:01:27.243 --> 00:01:28.773
So we can get that from reach-router.

16
00:01:31.745 --> 00:01:34.866
Now I don't think we actually
use those anywhere in here.

17
00:01:34.866 --> 00:01:38.650
You could have left those off,
and that's totally fine.

18
00:01:38.650 --> 00:01:40.103
But you might as well put them in there.

19
00:01:43.143 --> 00:01:48.027
It is up there, because technically
SearchParams is a route.

20
00:01:48.027 --> 00:01:49.096
That's where that's coming from.

21
00:01:51.461 --> 00:01:52.043
Okay.

22
00:01:54.563 --> 00:01:56.490
This animal here is always
gonna be an animal.

23
00:01:56.490 --> 00:01:57.397
So as Animal.

24
00:02:01.490 --> 00:02:04.470
Pets here is always a pet array.

25
00:02:04.470 --> 00:02:05.738
So you can put pet there.

26
00:02:10.823 --> 00:02:12.683
It's gonna be requestPets for

27
00:02:12.683 --> 00:02:17.189
the same thing requestsPets is going
to return a promise, and it's like,

28
00:02:17.189 --> 00:02:21.210
hey, I don't like it when you
don't do something with promises.

29
00:02:21.210 --> 00:02:23.605
So we're gonna say void, requestPets.

30
00:02:29.895 --> 00:02:34.063
Okay, same thing here void requestsPets.

31
00:02:37.695 --> 00:02:40.744
Then in the select here,
the one thing that's gonna be like hey,

32
00:02:40.744 --> 00:02:42.500
you told me this is an animal.

33
00:02:42.500 --> 00:02:45.480
I'm not positive these strings I'm
getting back are gonna be animals.

34
00:02:45.480 --> 00:02:49.330
You just gotta be like, now I promise
you they are gonna be animals.

35
00:02:49.330 --> 00:02:51.152
So as Animal, as Animal.

36
00:02:54.898 --> 00:02:56.505
And I think that's it for this one too.

37
00:02:59.612 --> 00:03:00.780
Cool.

38
00:03:00.780 --> 00:03:04.014
We're now in the TypeScript four,
we got one more step here and

39
00:03:04.014 --> 00:03:06.894
then we are totally done
retyping this entire project.

40
00:03:06.894 --> 00:03:07.976
Let's go to results.

41
00:03:10.571 --> 00:03:15.273
Rename this to be, Tsx,

42
00:03:15.273 --> 00:03:18.280
did I miss something in here?

43
00:03:19.370 --> 00:03:21.150
PetAPIResponse and messages.

44
00:03:21.150 --> 00:03:22.015
Not used that anywhere.

45
00:03:27.105 --> 00:03:28.080
Where's this upset?

46
00:03:30.487 --> 00:03:31.250
I missed this.

47
00:03:32.330 --> 00:03:36.027
In SearchParams, line 26,

48
00:03:36.027 --> 00:03:41.154
just got to make this a as PetAPIResponse.

49
00:03:48.550 --> 00:03:50.658
I think you have to, that's what I missed.

50
00:03:50.658 --> 00:03:52.320
And then PetAPIResponse.

51
00:03:53.720 --> 00:03:54.660
And then now it's happy.

52
00:03:56.020 --> 00:04:00.300
So make sure on line 26 here you
type this as a PetAPIResponse.

53
00:04:00.300 --> 00:04:02.440
Then you have to import that at the top.

54
00:04:02.440 --> 00:04:04.410
And then that will make this happy.

55
00:04:04.410 --> 00:04:06.660
The reason I was able to
tell is you can see here,

56
00:04:06.660 --> 00:04:08.980
files that have errors in them turn red,
right?

57
00:04:08.980 --> 00:04:11.426
So we just turned results to tsx.

58
00:04:11.426 --> 00:04:12.910
And there's a bunch of errors in there.

59
00:04:12.910 --> 00:04:13.903
So that's what I was looking at.

60
00:04:16.675 --> 00:04:18.550
All right, this one should go pretty fast.

61
00:04:18.550 --> 00:04:20.360
This is Results.tsx.

62
00:04:20.360 --> 00:04:25.469
We're going to Import FunctionComponent

63
00:04:29.864 --> 00:04:36.717
From react and we're going to import and
here we have a problem.

64
00:04:36.717 --> 00:04:38.424
I would like to import Pet from

65
00:04:45.546 --> 00:04:49.388
./APIResponseTypes but
we have a problem here.

66
00:04:49.388 --> 00:04:53.761
You can't have a PetComponent and
a PetType, that's why a lot of people like

67
00:04:53.761 --> 00:04:57.470
to put IPet in front of these so
there's never a collision there.

68
00:04:58.710 --> 00:05:02.939
But I'm just gonna say we're
gonna import this as PetType, and

69
00:05:02.939 --> 00:05:04.752
then you can get around it.

70
00:05:07.851 --> 00:05:10.818
So here this is easy we just
go function components.

71
00:05:14.148 --> 00:05:22.878
And it's gonna take, PetType array.

72
00:05:27.874 --> 00:05:28.990
You need a colon there.

73
00:05:33.353 --> 00:05:37.055
So imported pet is PetType,
the FunctionComponent from react.

74
00:05:37.055 --> 00:05:39.277
We made this a FunctionComponent
it has PetTypes, and

75
00:05:39.277 --> 00:05:40.882
this just made everything happy here.

76
00:05:43.900 --> 00:05:45.035
So this is what I wanted to show you.

77
00:05:45.035 --> 00:05:49.325
Let's say I forgot to put name in here,
and I just hit x like this,

78
00:05:49.325 --> 00:05:54.890
it's gonna say, hey, I expected name
here and you're not giving it to me.

79
00:05:54.890 --> 00:05:58.486
This is actually probably one of my
favorite parts of using TypeScript and

80
00:05:58.486 --> 00:05:59.356
react together,

81
00:05:59.356 --> 00:06:03.010
is it makes sure that I'm using every
component correctly with its props.

82
00:06:04.060 --> 00:06:06.880
Same with its state, and context and
all those kinds of things.

83
00:06:06.880 --> 00:06:10.849
It just makes sure like the, I know that
your child's component is expecting this

84
00:06:10.849 --> 00:06:13.220
and I'm going to make sure
that you give it to it.

85
00:06:15.570 --> 00:06:18.140
Now some of you might ask, and
I haven't shown you anywhere in here, but

86
00:06:18.140 --> 00:06:20.320
let's just take a look at
what that would look like.

87
00:06:20.320 --> 00:06:28.459
Let's say this pet.tsx has
an optional one called color, right?

88
00:06:28.459 --> 00:06:29.380
And that's a string.

89
00:06:31.510 --> 00:06:35.110
If I put it like this, it's going to
expect that and it must get that color.

90
00:06:35.110 --> 00:06:39.860
But if I put a question mark is,
it's now an optional one, right?.

91
00:06:39.860 --> 00:06:44.333
So if I go in here to results in it,
I don't give it color,

92
00:06:44.333 --> 00:06:49.300
totally fine if I do,
It's gonna say okay, that's fine too.

93
00:06:50.610 --> 00:06:55.166
But like if I try and give us something
else, like, I don't know, something it's

94
00:06:55.166 --> 00:07:00.340
gonna say, hey, you're giving it
something and it doesn't expect that.

95
00:07:00.340 --> 00:07:02.710
So the contract always
has to be fulfilled.

96
00:07:02.710 --> 00:07:09.718
You can't give it too much and
you can't give it to little Okay,

97
00:07:09.718 --> 00:07:10.836
let's get rid of that.

98
00:07:14.752 --> 00:07:17.180
All right, and so now for
the grand finale,

99
00:07:17.180 --> 00:07:19.670
the most difficult one to do yet, but.

100
00:07:19.670 --> 00:07:21.930
Bear with me for like the next 20 minutes.

101
00:07:21.930 --> 00:07:23.210
And we'll definitely get through this.

102
00:07:23.210 --> 00:07:28.618
We're gonna do App.js and
we're gonna rename this to App.tsx.

103
00:07:31.262 --> 00:07:31.971
I'm just kidding, we're done.

104
00:07:31.971 --> 00:07:34.614
We don't have to do anything here.

105
00:07:34.614 --> 00:07:38.490
So SearchParams, why is that upset?

106
00:07:38.490 --> 00:07:45.894
Type is missing for that, yeah, this is
actually a mistake that we made here.

107
00:07:45.894 --> 00:07:47.490
I think it's cuz of this.

108
00:07:47.490 --> 00:07:49.795
This actually isn't
expecting route components.

109
00:07:53.915 --> 00:07:56.630
So we can actually get rid of that and
save that.

110
00:07:56.630 --> 00:08:02.530
And now if we go back to App.tsx,
now it's gonna be fun.

111
00:08:02.530 --> 00:08:04.738
Cuz before we were telling us like,
hey, this is a route,

112
00:08:04.738 --> 00:08:05.920
it expects route components.

113
00:08:06.950 --> 00:08:10.980
And despite the fact that it's actually
true, it is a route component.

114
00:08:10.980 --> 00:08:12.330
We're not actually using any of that.

115
00:08:12.330 --> 00:08:16.100
So it's gonna be like, hey,
you said that these were gonna come here.

116
00:08:16.100 --> 00:08:18.764
I don't see how they're gonna get here.

117
00:08:18.764 --> 00:08:22.729
And the way you would do that is you'd
have to use something like with router or

118
00:08:22.729 --> 00:08:26.816
you'd have to use something like with
router to inject those things in there and

119
00:08:26.816 --> 00:08:28.660
we're just don't need to do that.

120
00:08:28.660 --> 00:08:29.548
So we're not going to.

121
00:08:29.548 --> 00:08:33.947
So yeah, sometimes you want to get like
a really aggressive with your typing's is

122
00:08:33.947 --> 00:08:37.087
like I know this is this and
I'm definitely gonna do this.

123
00:08:37.087 --> 00:08:40.238
But that means you have to make sure that
all that data gets Marshall through or

124
00:08:40.238 --> 00:08:41.801
TypeScript is not gonna believe you.

125
00:08:47.187 --> 00:08:52.541
Okay, you and
I in the span of probably what?

126
00:08:52.541 --> 00:08:54.204
45 minutes to an hour or
something like that,

127
00:08:54.204 --> 00:08:56.670
converted this entire
project to TypeScript.

128
00:08:56.670 --> 00:08:59.451
So you can see it's a bit
of an undertaking now, but

129
00:08:59.451 --> 00:09:01.650
I promise you it's worth it.

130
00:09:01.650 --> 00:09:06.213
Like once you have your
entire project in TypeScript,

131
00:09:06.213 --> 00:09:10.774
it's just really easy cuz I
can come in here to modal and

132
00:09:10.774 --> 00:09:13.867
I can say, import Pet from ./Pet.

133
00:09:13.867 --> 00:09:19.115
And now I can come in here, and
it just gives you lots of really useful

134
00:09:23.807 --> 00:09:26.688
It'll start giving you like type hints and
stuff like that.

135
00:09:26.688 --> 00:09:29.943
It'll start getting very immediate
errors like hey, you did this and

136
00:09:29.943 --> 00:09:33.473
you expected this and this isn't gonna
happen, and this might be normal and

137
00:09:33.473 --> 00:09:35.280
it saves you from a ton of bugs.

138
00:09:35.280 --> 00:09:41.442
Like people like to say that
it prevents you from writing,

139
00:09:41.442 --> 00:09:46.851
everyone's favorite
examples this const x = 5,

140
00:09:46.851 --> 00:09:52.155
5.to or sorry x.toUpper string or
Uppercase.

141
00:09:54.236 --> 00:09:57.069
That's what everyone loves to say like,
look, it prevents you from writing this

142
00:09:57.069 --> 00:09:59.235
error is like I typically do
not have this error, right?

143
00:09:59.235 --> 00:10:03.565
I don't typically try and
call toUpperCase on numbers.

144
00:10:04.915 --> 00:10:08.175
I generally have enough discipline that I
don't call those kinds of things, right?

145
00:10:08.175 --> 00:10:10.369
And TypeScript does prevent you
from doing things like this.

146
00:10:11.390 --> 00:10:14.986
The real benefit of TypeScript is it
actually helps you write your code faster

147
00:10:14.986 --> 00:10:18.364
because you basically get inline
documentation while you're typing,

148
00:10:18.364 --> 00:10:20.871
because they have all
the TypeScript coming with it.

149
00:10:20.871 --> 00:10:23.896
And you can even get like a point
further where you can actually include

150
00:10:23.896 --> 00:10:24.670
documentation.

151
00:10:24.670 --> 00:10:28.313
So if I start writing
something with Pet.tsx,

152
00:10:28.313 --> 00:10:33.238
you can actually inline my
documentation using js doc, right?

153
00:10:33.238 --> 00:10:39.350
So cuz TypeScript can read
js doc I'm a big fan.

154
00:10:39.350 --> 00:10:42.220
I use it on any project that I intend
on maintaining longer than two weeks.

155
00:10:42.220 --> 00:10:43.180
That's kind of my rule of thumb.

156
00:10:43.180 --> 00:10:45.667
If I'm just like knocking
out something really fast,

157
00:10:45.667 --> 00:10:49.180
I'm gonna use JavaScript cuz I
don't need it to be good code.

158
00:10:49.180 --> 00:10:51.676
But if it's gonna live longer than two
weeks, then it needs to be okay code,

159
00:10:51.676 --> 00:10:53.626
because I'm going to come back and
longer than two weeks and

160
00:10:53.626 --> 00:10:55.160
forget everything that I did.

161
00:10:55.160 --> 00:10:57.200
And TypeScript just
helps me read that back.

162
00:11:00.934 --> 00:11:03.721
Okay, lastly, well first of all,
let's go ahead and

163
00:11:03.721 --> 00:11:06.830
make sure that we fixed all of
our errors here that we have.

164
00:11:06.830 --> 00:11:10.552
If we say npm run lint.

165
00:11:16.134 --> 00:11:16.945
Yeah.

166
00:11:16.945 --> 00:11:23.673
So one thing that we have to do is we
have to go back to our package JSON and

167
00:11:23.673 --> 00:11:28.234
we have to add ts and
tsx to both format and lint,

168
00:11:28.234 --> 00:11:31.677
cuz now everything is called that.

169
00:11:36.523 --> 00:11:42.870
So now if we do that again and
say npm run lint, No linting errors.

170
00:11:42.870 --> 00:11:44.490
That's really good.

171
00:11:44.490 --> 00:11:47.260
Let's add another thing
here in our scripts.

172
00:11:47.260 --> 00:11:48.668
Let's add one called typecheck.

173
00:11:51.395 --> 00:11:54.590
And this is just gonna be tsc--noEmit.

174
00:11:56.190 --> 00:11:57.608
If you do tsc without noEmit,

175
00:11:57.608 --> 00:12:01.090
it's actually going to rewrite your
files into JavaScript for you.

176
00:12:01.090 --> 00:12:03.060
So we're just like doing noEmit.

177
00:12:03.060 --> 00:12:06.428
It's just basically hey,
typecheck, but don't rewrite it.

178
00:12:07.752 --> 00:12:11.960
So let's try that again and
that's gonna lint it, that's fine.

179
00:12:11.960 --> 00:12:14.042
Let's do npm run typecheck.

180
00:12:20.244 --> 00:12:22.080
So we still have one in here.

181
00:12:24.000 --> 00:12:24.830
Let's go fix that.

182
00:12:24.830 --> 00:12:25.830
That's gonna be in.

183
00:12:25.830 --> 00:12:26.780
And this is what they look like.

184
00:12:26.780 --> 00:12:28.770
So this is good for you to see that.

185
00:12:28.770 --> 00:12:35.000
So let's go check out carousel.tsx, And

186
00:12:35.000 --> 00:12:37.710
it is upset about this, looks like.

187
00:12:40.010 --> 00:12:43.858
So I think we just need to
check here to make sure that,

188
00:12:43.858 --> 00:12:46.774
let me go back to the this is in carousel.

189
00:12:49.106 --> 00:12:51.708
So it's probably good for you to see like
how you fix errors when they actually

190
00:12:51.708 --> 00:12:53.780
arise here from your type checking.

191
00:12:53.780 --> 00:12:56.180
You just need to check
if index is a thing.

192
00:12:56.180 --> 00:13:04.055
So you have to say if
event.target.dataset.index,

193
00:13:07.253 --> 00:13:09.961
And if I just put that in there
then that should fix everything.

194
00:13:09.961 --> 00:13:13.529
And the next question might ask me is like
why wasn't VS code showing that to me in

195
00:13:13.529 --> 00:13:14.930
the first place?

196
00:13:14.930 --> 00:13:16.252
It just lags behind sometimes.

197
00:13:16.252 --> 00:13:19.450
VS codes trying really hard
not to get in your way.

198
00:13:19.450 --> 00:13:24.600
And so it'll sometimes suspend that
type checking in the background.

199
00:13:24.600 --> 00:13:26.392
So that you don't necessarily see it.

200
00:13:26.392 --> 00:13:29.260
That's how you always wanna check
things before you check them in.

201
00:13:29.260 --> 00:13:31.430
And now you can see I fixed
my last TypeScript error.

