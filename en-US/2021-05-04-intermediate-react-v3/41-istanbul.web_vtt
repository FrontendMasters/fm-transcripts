WEBVTT

1
00:00:00.470 --> 00:00:06.880
So one more very, very cool feature about
Jest, there's a tool called Istanbul.

2
00:00:06.880 --> 00:00:10.284
It's one of my favorite testing tools,
because you get a lot of functionality and

3
00:00:10.284 --> 00:00:12.860
you have to do literally
nothing to get it.

4
00:00:12.860 --> 00:00:14.660
This actually used to be
kind of annoying to set up.

5
00:00:14.660 --> 00:00:16.020
Once you set it up, it was fine.

6
00:00:16.020 --> 00:00:19.450
In fact, one of my earlier courses,
I show you how to set it up.

7
00:00:19.450 --> 00:00:24.150
And it requires a Babel transformation and
hooking into the test suite.

8
00:00:24.150 --> 00:00:27.930
Now we have Jest, Jest just does it for
you out of the box.

9
00:00:29.790 --> 00:00:33.070
So go to your package.json.

10
00:00:33.070 --> 00:00:36.223
And one more thing here for me.

11
00:00:39.237 --> 00:00:44.460
And we want jest -coverage is
the name of it and test:coverage.

12
00:00:46.610 --> 00:00:52.380
Quit your watcher here and then I want
you to run npm run test:coverage.

13
00:00:54.435 --> 00:00:58.220
So this is gonna run your tests, but then
it's gonna give you a report afterwards.

14
00:00:58.220 --> 00:00:59.820
It's like how much test coverage you have.

15
00:01:01.520 --> 00:01:03.500
So you can see here use BreedList.

16
00:01:03.500 --> 00:01:05.472
We don't have all the branching logic,

17
00:01:05.472 --> 00:01:07.971
we're actually missing
a line here it looks like.

18
00:01:07.971 --> 00:01:10.427
But let's say carousel.js,
we have 100% test coverage.

19
00:01:10.427 --> 00:01:14.650
Every single line in there is actually
being executed at least once.

20
00:01:15.980 --> 00:01:18.754
And actually you can
even get deeper in this,

21
00:01:18.754 --> 00:01:22.112
I can say open
coverage/LCOV-report index.html.

22
00:01:22.112 --> 00:01:26.991
And this will actually open an HTML
file where I can actually see

23
00:01:26.991 --> 00:01:31.240
an in depth report of what
my test coverage looks like.

24
00:01:32.250 --> 00:01:36.310
So if I wanna see hey,
what line of useBreedList did I miss?

25
00:01:36.310 --> 00:01:38.819
So if I click on this, I can see.

26
00:01:38.819 --> 00:01:42.900
I'm not checking at all,
is it reading from the cache correctly?

27
00:01:44.350 --> 00:01:48.240
Caching might as well be like French for
bug in my opinion, right?

28
00:01:48.240 --> 00:01:52.140
So this is actually probably something
that we should go in and check, right?

29
00:01:53.870 --> 00:01:57.019
So this is actually gonna let you know,
are you missing something important or

30
00:01:57.019 --> 00:01:59.070
is it fine the way it is, right?

31
00:01:59.070 --> 00:02:03.100
So I don't know, big fan of this,
it's really cool.

32
00:02:03.100 --> 00:02:06.337
Don't check in these files you can always
generate them whenever you want to.

33
00:02:06.337 --> 00:02:11.039
But this is what Istanbul does for
you and it's just built into Jest for

34
00:02:11.039 --> 00:02:12.400
us automatically.

35
00:02:12.400 --> 00:02:15.715
So you can see there of
just the test that you and

36
00:02:15.715 --> 00:02:21.155
I wrote on these four files we've got
33 out of 34 lines of code covered,

37
00:02:21.155 --> 00:02:25.870
100% functions, and
12 out of 14 code branches.

38
00:02:25.870 --> 00:02:27.320
Now this is what some people want.

39
00:02:27.320 --> 00:02:29.714
They want to get 100% on this number, and

40
00:02:29.714 --> 00:02:32.174
I say 97 might even be
too high in my opinion.

41
00:02:32.174 --> 00:02:39.640
[LAUGH] But you can see here we're not
covering all of our JS files, right?

42
00:02:39.640 --> 00:02:40.504
So it won't tell you that,

43
00:02:40.504 --> 00:02:42.660
it won't tell you what your what
whole files you're not covering.

44
00:02:42.660 --> 00:02:48.089
Nonetheless, free information,
really cool to look at.

45
00:02:48.089 --> 00:02:49.060
I'm a big fan.

