WEBVTT

1
00:00:00.160 --> 00:00:03.136
One of the things that's kind of
interesting that node will do is if

2
00:00:03.136 --> 00:00:05.060
there's a directory called reducer.

3
00:00:05.060 --> 00:00:08.216
So let's go ahead and create a directory
inside of src called reducer.

4
00:00:11.572 --> 00:00:15.577
And inside of reducer,
we have a file called index.js, like this.

5
00:00:19.579 --> 00:00:23.465
Now we could say /index like this,
and that's probably even better and

6
00:00:23.465 --> 00:00:25.560
more correct to do it this way.

7
00:00:25.560 --> 00:00:30.648
But if you have a file called index
inside of a folder called reducer,

8
00:00:30.648 --> 00:00:35.600
it'll actually automatically look for
a file called index.js.

9
00:00:35.600 --> 00:00:36.610
Just a fun noteism.

10
00:00:38.460 --> 00:00:41.160
Let's just be explicit and
we'll put index there.

11
00:00:41.160 --> 00:00:43.255
But both of those will work,
you'll see that in my notes.

12
00:00:47.446 --> 00:00:53.392
Okay, here we're gonna import
a function called combineReducers.

13
00:00:53.392 --> 00:00:56.322
Sorry, this is the index.js
inside of reducer.

14
00:00:56.322 --> 00:01:02.449
And again make sure that the reducer
folder is inside the src directory.

15
00:01:02.449 --> 00:01:06.381
{ CombineReducers } from 'redux'.

16
00:01:09.682 --> 00:01:14.624
And we're gonna import something
called location, which is gonna be

17
00:01:14.624 --> 00:01:20.080
another reducer from ./location,
we still have to go code that up, okay?

18
00:01:20.080 --> 00:01:24.232
Here we're going to export
a default combineReducers.

19
00:01:26.840 --> 00:01:30.255
And this is gonna be location:location.

20
00:01:30.255 --> 00:01:34.690
Or if you aren't familiar with recent
JavaScript, if it's called the same thing,

21
00:01:34.690 --> 00:01:38.197
if the key and the value are the same
thing, you could just do this.

22
00:01:40.856 --> 00:01:43.096
That's the same thing
as location:location.

23
00:01:43.096 --> 00:01:44.754
It's just a shorthand way of doing that.

24
00:01:47.054 --> 00:01:49.579
So what is combineReducers?

25
00:01:49.579 --> 00:01:53.480
This auto generates your rootReducer for
you.

26
00:01:53.480 --> 00:01:57.320
So it knows that there's going to
be a reducer here called location.

27
00:01:57.320 --> 00:02:03.030
And it's going to deal with the location
part of your Redux store, right?

28
00:02:03.030 --> 00:02:07.740
Cuz again,
you can think of a Redux store like this.

29
00:02:09.460 --> 00:02:16.022
So I'm gonna have a location thing and
that's gonna be like Seattle, WA.

30
00:02:18.317 --> 00:02:21.231
And then maybe I have an animal portion.

31
00:02:21.231 --> 00:02:22.270
And that's gonna be dog, right?

32
00:02:24.320 --> 00:02:27.610
So a Redux store in reality
is just a giant object.

33
00:02:28.850 --> 00:02:32.971
And so by putting something here called
location and I'm saying that this

34
00:02:32.971 --> 00:02:37.210
particular reducer handles
the location part of my state tree.

35
00:02:37.210 --> 00:02:40.579
So whenever this location reducer
that we haven't written yet

36
00:02:40.579 --> 00:02:42.739
that we're about to write gets called,

37
00:02:42.739 --> 00:02:46.439
it's going to automatically be
passed the location from the store.

38
00:02:46.439 --> 00:02:48.410
It's only gonna worry about that portion.

39
00:02:48.410 --> 00:02:49.408
Does that make sense?

40
00:02:51.838 --> 00:02:52.660
Let's keep going.

41
00:02:52.660 --> 00:02:54.055
Hopefully, we'll make
sense as we go along.

42
00:02:58.676 --> 00:03:00.370
So make a new file here.

43
00:03:00.370 --> 00:03:07.860
And we're gonna call it location.js
inside of the reducer folder.

44
00:03:07.860 --> 00:03:10.737
In this, we're actually going
to write our first reducer here.

45
00:03:10.737 --> 00:03:16.646
So it's gonna be export default function.

46
00:03:16.646 --> 00:03:17.896
You can call it location.

47
00:03:17.896 --> 00:03:20.463
You can call it location reducer,
whatever you wanna call it.

48
00:03:20.463 --> 00:03:22.097
I have it called just location.

49
00:03:22.097 --> 00:03:24.854
The reason why you wanna give
it a name is if it hits a bug,

50
00:03:24.854 --> 00:03:29.010
you'll see it in your stack trace
called whatever you call it here.

51
00:03:29.010 --> 00:03:30.380
So it just helps us with debug ability.

52
00:03:32.500 --> 00:03:34.798
Okay, it's gonna take in state and action.

53
00:03:38.010 --> 00:03:43.741
And then you're gonna say switch,
Based on the action type.

54
00:03:47.321 --> 00:03:54.987
And then you're gonna say case if
it's a CHANGE_LOCATION action,

55
00:03:54.987 --> 00:03:58.564
then return action.payload.

56
00:04:01.162 --> 00:04:05.832
Default, if nothing changes,
then return state.

57
00:04:08.797 --> 00:04:12.040
Okay, so let's talk about this for
a second.

58
00:04:13.720 --> 00:04:16.460
One, I used a switch statement,
I could have used an if statement.

59
00:04:16.460 --> 00:04:17.800
Totally could have done that.

60
00:04:17.800 --> 00:04:21.560
It's just kind of reducers tend
to use switch statements a lot.

61
00:04:22.940 --> 00:04:26.689
So this location one only has one
type of action that it responds to.

62
00:04:26.689 --> 00:04:29.998
But it could have 15 types of
actions that it responds to.

63
00:04:29.998 --> 00:04:34.771
So here in the future, now, if I have,

64
00:04:34.771 --> 00:04:39.839
let's say a case UPPERCASE_LOCATION,

65
00:04:39.839 --> 00:04:46.519
then I can say,
return state.toUppercase, right?

66
00:04:46.519 --> 00:04:48.212
And it could respond to both of those,
right?

67
00:04:48.212 --> 00:04:54.165
So we're kind of setting ourselves up
to expand upon these reducers later.

68
00:04:57.190 --> 00:04:59.390
So let's talk about the action.

69
00:04:59.390 --> 00:05:02.681
Every action always has an action type.

70
00:05:02.681 --> 00:05:08.530
100% of the time,
every action will have a type.

71
00:05:08.530 --> 00:05:11.215
That's the only requirement,
they must have a type.

72
00:05:12.830 --> 00:05:15.423
It's always gonna be something
in uppercase usually.

73
00:05:17.604 --> 00:05:20.490
At least you should always make them
that way, that's just the way you do it.

74
00:05:21.670 --> 00:05:23.919
They frequently will have
things called payloads,

75
00:05:23.919 --> 00:05:27.650
which is kinda like the parameters
that this is being called with.

76
00:05:27.650 --> 00:05:33.242
So let's say this one here for
me is gonna be Salt Lake City, UT.

77
00:05:33.242 --> 00:05:38.580
So that would be what I would
want to change from Seattle.

78
00:05:38.580 --> 00:05:42.202
Let's say it started out Seattle and it
came in with a payload of Salt Lake City,

79
00:05:42.202 --> 00:05:45.190
then I would change the state of
the location to be Salt Lake City.

80
00:05:46.210 --> 00:05:48.379
So that's the kind of things
you'll put in payload.

81
00:05:48.379 --> 00:05:53.140
And this can definitely be, payload
could definitely be a object as well.

82
00:05:53.140 --> 00:05:59.270
It could be city, blah, state, blah.

83
00:05:59.270 --> 00:06:03.809
And then I could reduce that down to
just like a Salt Lake City, UT, right?

84
00:06:03.809 --> 00:06:06.690
It's up to you.
It depends on how your application works.

85
00:06:06.690 --> 00:06:07.757
In this particular case,

86
00:06:07.757 --> 00:06:11.063
we're taking a pretty simple case which
is gonna be payload Salt Lake City, UT.

87
00:06:14.329 --> 00:06:15.918
They also have some other things.

88
00:06:15.918 --> 00:06:19.090
Sometimes they'll have error, they'll
have meta, there's a bunch of things.

89
00:06:19.090 --> 00:06:21.099
There's a flux standard action of how, and

90
00:06:21.099 --> 00:06:24.584
I actually have that linked there in
the notes if you wanna go check that out.

91
00:06:24.584 --> 00:06:27.080
But that's generally how
these things are structured.

92
00:06:27.080 --> 00:06:29.152
There's nothing about Redux that's
going to enforce that for you.

93
00:06:29.152 --> 00:06:33.946
But it's just kind of the methodology
of how one writes Redux.

94
00:06:36.386 --> 00:06:40.205
Okay, so we have the change location.

95
00:06:40.205 --> 00:06:44.114
If someone's trying to change it
from Seattle to Salt Lake City,

96
00:06:44.114 --> 00:06:46.398
we'll return the action.payload.

97
00:06:46.398 --> 00:06:48.385
That'll go back to the rootReducer,

98
00:06:48.385 --> 00:06:51.750
the rootReducer will update from
Seattle to Salt Lake, right?

99
00:06:53.120 --> 00:06:55.890
What about this default return state?

100
00:06:55.890 --> 00:06:59.750
If nothing changes,
you still have to return the state, right?

101
00:06:59.750 --> 00:07:03.850
So let's say another action comes in and
it's change animal, right?

102
00:07:03.850 --> 00:07:06.520
This rootReducer will actually
still will be called.

103
00:07:06.520 --> 00:07:10.440
So you have to say, okay, this is not
something that I'm gonna pay attention to.

104
00:07:10.440 --> 00:07:13.560
So I'm just going to return what
was there previously, right?

105
00:07:13.560 --> 00:07:15.981
So change animal to dog.

106
00:07:15.981 --> 00:07:19.120
The location reducer will just say,
okay, cool.

107
00:07:19.120 --> 00:07:19.867
Seattle didn't change.

108
00:07:19.867 --> 00:07:21.670
I'm going to return Seattle again.

109
00:07:23.750 --> 00:07:29.104
So that's a big key with Redux is
that if you're not doing anything,

110
00:07:29.104 --> 00:07:31.334
just return what was there.

111
00:07:31.334 --> 00:07:34.431
Last thing that we need to do here,
we need a default state.

112
00:07:35.790 --> 00:07:39.850
So by default, what should this be?

113
00:07:39.850 --> 00:07:42.890
It could be empty string, right?

114
00:07:42.890 --> 00:07:47.316
So if you wanna have no default location,
if you wanna have the default location,

115
00:07:47.316 --> 00:07:50.152
be Seattle, Washington,
let's do that, right?

116
00:07:50.152 --> 00:07:58.191
So now, the way that Redux initiates
itself is it calls with a blank action.

117
00:07:58.191 --> 00:08:02.110
So it forces every reducer to run
once to get its default state.

118
00:08:02.110 --> 00:08:05.379
So in this particular case, the default
state of this reducer is gonna be Seattle,

119
00:08:05.379 --> 00:08:05.950
Washington.

120
00:08:05.950 --> 00:08:08.500
So on the very first render,
this will be Seattle.

121
00:08:08.500 --> 00:08:10.764
And this is just a default parameter here.

122
00:08:13.645 --> 00:08:15.290
That's a lot of talking.

123
00:08:15.290 --> 00:08:19.127
But you understand one reducer,
you understand every reducer, right?

124
00:08:19.127 --> 00:08:22.314
Every reducer is going to
look exactly like this.

125
00:08:22.314 --> 00:08:23.843
There is no variation here.

126
00:08:29.177 --> 00:08:32.094
The other thing that I'll throw
out here is TypeScript and

127
00:08:32.094 --> 00:08:36.377
Redux are actually a joy together, because
they will enforce all of the object shapes

128
00:08:36.377 --> 00:08:37.998
for you, which is really nice.

129
00:08:42.693 --> 00:08:44.759
Reducers are synchronous, always.

130
00:08:46.370 --> 00:08:50.980
Redux has the ability to have
asynchronous middleware.

131
00:08:50.980 --> 00:08:54.687
So you can have lie things like thunks or
sagas or generators or promises.

132
00:08:54.687 --> 00:08:56.802
There's a bunch of
different flavors of them.

133
00:08:56.802 --> 00:08:59.015
Not gonna teach them today.

134
00:08:59.015 --> 00:09:02.478
But basically what those are gonna do is
going to force Redux to kick off a side

135
00:09:02.478 --> 00:09:06.447
effect, which will then eventually return
something that will go into the reducers.

136
00:09:06.447 --> 00:09:10.940
But reducers themselves 100% of
the time are always synchronous.

137
00:09:13.190 --> 00:09:16.400
They also have to be pure
with no side effects.

138
00:09:16.400 --> 00:09:22.129
Notice that if I call this reducer
10,000 times with the state of Seattle,

139
00:09:22.129 --> 00:09:26.510
Washington, on the 10,0001st
time that I call this,

140
00:09:26.510 --> 00:09:29.308
what is going to be the result of state?

141
00:09:31.773 --> 00:09:33.580
Seattle Washington, right?

142
00:09:33.580 --> 00:09:37.257
So that means that it doesn't matter how
many times I call, as long as the state

143
00:09:37.257 --> 00:09:41.300
and the action are the same,
it's always gonna be the same result.

144
00:09:41.300 --> 00:09:43.222
That must be true as well for reducers.

145
00:09:46.810 --> 00:09:49.212
Cool, so now we have a location reducer.

146
00:09:52.155 --> 00:09:57.256
Now we need to make it so somehow we
need to get an action into here, right?

147
00:09:57.256 --> 00:09:59.435
So let's go ahead and go think about that.

148
00:10:03.897 --> 00:10:06.462
Or actually, you know what,
while we're here, let's go ahead and

149
00:10:06.462 --> 00:10:07.579
make all the other reducers.

150
00:10:09.040 --> 00:10:11.725
So I'm going to make a new file.

151
00:10:11.725 --> 00:10:15.989
And actually, you can just copy all
this cuz they're basically all the same,

152
00:10:15.989 --> 00:10:16.578
new file.

153
00:10:20.824 --> 00:10:28.374
This is gonna be animal.js
This is gonna be animal.

154
00:10:28.374 --> 00:10:30.325
This is gonna be change animal.

155
00:10:34.268 --> 00:10:37.949
And the state by default,
we can make it whatever you want.

156
00:10:37.949 --> 00:10:39.695
Let's just make it dog for fun.

157
00:10:42.016 --> 00:10:43.285
That's basically it.

158
00:10:46.317 --> 00:10:49.380
Now you might be asking,
this is a lot of repeat code.

159
00:10:49.380 --> 00:10:50.650
Is there something that
can help me with this?

160
00:10:50.650 --> 00:10:53.937
And there are libraries that will actually
generate some of these reducers for you.

161
00:10:53.937 --> 00:10:56.940
But we don't have that many,
let's go ahead and code them by hand.

162
00:10:56.940 --> 00:11:00.495
We got one more or
two more that we're gonna do.

163
00:11:00.495 --> 00:11:01.981
We'll have one for theme.

164
00:11:04.848 --> 00:11:06.261
Theme.js.

165
00:11:09.097 --> 00:11:10.301
So this is gonna be theme.

166
00:11:10.301 --> 00:11:15.773
This is gonna be dark blue by default.

167
00:11:15.773 --> 00:11:18.014
And this is gonna be CHANGE_THEME.

168
00:11:21.076 --> 00:11:23.160
One more, New File.

169
00:11:23.160 --> 00:11:26.105
This one's gonna be breed.js.

170
00:11:28.661 --> 00:11:35.282
Same thing, breed, and
this can be empty string if you want.

171
00:11:35.282 --> 00:11:37.928
Or we can make it Havanese,
whatever, up to you,

172
00:11:37.928 --> 00:11:40.261
whatever you want your
default state to be.

173
00:11:40.261 --> 00:11:42.221
And this will be change breed.

174
00:11:45.286 --> 00:11:50.383
Okay, now we're gonna
go into our index.js.

175
00:11:50.383 --> 00:11:55.503
We're gonna import breed from './breed'.

176
00:11:59.740 --> 00:12:06.327
And let's just do two more,
animal and theme, okay?

177
00:12:06.327 --> 00:12:13.363
So now those are all of our reducers,
breed, animal, theme.

178
00:12:13.363 --> 00:12:14.198
And there we go.

179
00:12:14.198 --> 00:12:17.798
Now we have a rootReducer that can
handle location, breed, animal and

180
00:12:17.798 --> 00:12:20.738
theme in the various different
parts of our application.

