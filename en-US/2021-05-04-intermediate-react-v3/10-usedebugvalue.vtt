WEBVTT

1
00:00:00.139 --> 00:00:03.423
So to useDebugValue,
this is the brand new one,

2
00:00:03.423 --> 00:00:07.039
this is one that was not
in intermediate reactive 2.

3
00:00:07.039 --> 00:00:11.628
And again, it's normally for
authors of library, so

4
00:00:11.628 --> 00:00:17.036
that they can kind of tell you
what their custom hooks are doing.

5
00:00:17.036 --> 00:00:20.972
Let's take a look at it,
let's say I make a custom hook here,

6
00:00:20.972 --> 00:00:23.039
that's called use is raining.

7
00:00:23.039 --> 00:00:28.046
And, in this particular case
it's going to say, randomly,

8
00:00:28.046 --> 00:00:34.419
half the time is going to be raining half
the time it's not going to be raining.

9
00:00:34.419 --> 00:00:36.840
So if you look down here, do you need
a coat today, the answer is yes.

10
00:00:36.840 --> 00:00:41.416
If I refresh this enough times,
it's eventually gonna tell me no or

11
00:00:41.416 --> 00:00:42.549
maybe, right.

12
00:00:42.549 --> 00:00:45.973
So, I have this hook now here,
is called user is raining and

13
00:00:45.973 --> 00:00:50.562
you can pretend that goes off to an API or
fetches all the weather information and

14
00:00:50.562 --> 00:00:54.220
tells me, do you need a coat today or
not, is it raining or not?

15
00:00:54.220 --> 00:00:58.520
So, it would be nice if I could open my
dev tools and take a look at this and

16
00:00:58.520 --> 00:01:01.629
say like,
what is this actually giving back to me?

17
00:01:01.629 --> 00:01:04.850
So, this is a way for
authors of libraries to tell you,

18
00:01:04.850 --> 00:01:07.869
here's what my hook is doing for
you at the moment.

19
00:01:07.869 --> 00:01:13.089
So if I click the React dev tools,
this is like the one that you would

20
00:01:13.089 --> 00:01:18.139
find inside of your, like here,
in your components ones here.

21
00:01:18.139 --> 00:01:21.730
This is like the React dev tools
it's just built into code sandbox,

22
00:01:21.730 --> 00:01:24.260
same thing though,
same code and everything.

23
00:01:24.260 --> 00:01:28.159
If I go down to my Debug value
component here and I click on it,

24
00:01:28.159 --> 00:01:32.839
I know this might be a little bit small,
so let's make this a bit bigger.

25
00:01:32.839 --> 00:01:34.169
And I click on that, so

26
00:01:34.169 --> 00:01:37.879
I'm in my Debug value component
notice I have this hooks here.

27
00:01:37.879 --> 00:01:42.027
This hooks thing where it says is not
raining, that's my use Debug value.

28
00:01:42.027 --> 00:01:46.319
This is something that I can basically
put information in that's readable

29
00:01:46.319 --> 00:01:47.817
by the React dev tools, so

30
00:01:47.817 --> 00:01:51.377
I can kind of Debug what's going
on inside of my custom hooks.

31
00:01:53.662 --> 00:01:56.681
And that's what this use
Debug value is doing.

32
00:02:00.877 --> 00:02:05.866
Anything that you put in here is
you can just say ,useDebugValue.

33
00:02:08.638 --> 00:02:10.136
And that's just gonna show up in there.

34
00:02:21.066 --> 00:02:24.380
This is gonna allow you to
look at things in there.

35
00:02:24.380 --> 00:02:29.110
Let's just copy that one out,
save it, refresh.

36
00:02:32.330 --> 00:02:34.023
So, like you can see is raining there.

37
00:02:35.659 --> 00:02:40.966
Whatever I put in that useDebugValue
is just gonna be showing up there,

38
00:02:40.966 --> 00:02:42.919
inside of the hook there.

39
00:02:42.919 --> 00:02:46.299
So, whatever you need there to Debug,
it's basically like a console log for

40
00:02:46.299 --> 00:02:47.139
your custom hook.

41
00:02:50.879 --> 00:02:54.050
If you have a hook that you're using
everywhere in your application,

42
00:02:54.050 --> 00:02:57.273
like a custom hook that you made,
you might put one in there that might be

43
00:02:57.273 --> 00:03:00.200
a good use case for you, otherwise,
you may never use this one.

44
00:03:00.200 --> 00:03:06.270
So the question is,
Should you wrap everything in use memos,

45
00:03:06.270 --> 00:03:09.860
like every callback that you ever have and
use memo?

46
00:03:09.860 --> 00:03:12.559
And then, I'll talk about
the second part in a second.

47
00:03:12.559 --> 00:03:17.879
I'm gonna say no, and I think it's a bad
idea and I don't think you should do that.

48
00:03:17.879 --> 00:03:21.453
It's kinda going back to what I was saying
before, is like you should have a problem,

49
00:03:21.453 --> 00:03:22.659
before you solve a problem.

50
00:03:22.659 --> 00:03:27.536
Because that memorization is going to
sometimes cause you to not re-render

51
00:03:27.536 --> 00:03:31.649
when you want it to re-render and
it's going to be difficult and

52
00:03:31.649 --> 00:03:34.488
kinda fine tuned to
figure out what that is.

53
00:03:34.488 --> 00:03:38.478
Now you might say, I always do and
I never run into a problem.

54
00:03:38.478 --> 00:03:41.808
Someday you're going to run into
some nasty, gross problem and

55
00:03:41.808 --> 00:03:44.829
it's gonna take you four hours
to figure out that it said,

56
00:03:44.829 --> 00:03:47.126
damn use memo that you put in there,
right.

57
00:03:47.126 --> 00:03:48.950
And I don't like those kind of problems.

58
00:03:48.950 --> 00:03:54.723
And so, this is where I'm going back to
this use memo is going to save you minimal

59
00:03:54.723 --> 00:04:00.085
amounts of re-renders if you're not
using it in this specific use case.

60
00:04:00.085 --> 00:04:03.832
So, the potential of me wasting four hours
trying to figure out where I use memo is

61
00:04:03.832 --> 00:04:05.995
going awry is just 100%
not worth it to me.

62
00:04:05.995 --> 00:04:10.466
React in another self is a very performant
library, that if you're just writing code

63
00:04:10.466 --> 00:04:13.835
the way that I'm showing you here,
it's plenty performance.

64
00:04:13.835 --> 00:04:18.409
So, do not prematurely solve performance
problems where you have no performance

65
00:04:18.409 --> 00:04:22.716
problems, or else, you're going to
start having bigger problems from your

66
00:04:22.716 --> 00:04:24.455
performance optimizations.

67
00:04:24.455 --> 00:04:26.819
This is just like a general
rule of thumb in coding all up,

68
00:04:26.819 --> 00:04:29.700
have performance problems before
you solve performance problems.

