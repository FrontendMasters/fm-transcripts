WEBVTT

1
00:00:00.000 --> 00:00:04.535
Now we need to actually create
the server that will be

2
00:00:04.535 --> 00:00:07.934
able to grab the HTML file that we had and

3
00:00:07.934 --> 00:00:13.604
interpolate it with the notes that
we are going to be passed down or

4
00:00:13.604 --> 00:00:20.331
the format of notes which are divs now,
and then send that back to the client.

5
00:00:20.331 --> 00:00:22.474
So let's do that.

6
00:00:22.474 --> 00:00:24.596
cost createServer.

7
00:00:24.596 --> 00:00:29.979
Server is gonna take some notes,
like this.

8
00:00:29.979 --> 00:00:37.887
And we're just gonna return
the http.createServer, like this.

9
00:00:37.887 --> 00:00:42.064
And request and response.

10
00:00:42.064 --> 00:00:48.205
This is gonna be async because we need
to await reading the file, right?

11
00:00:48.205 --> 00:00:49.815
But first, let's get the HTML path.

12
00:00:49.815 --> 00:00:54.680
So const HTML_PATH = new

13
00:00:54.680 --> 00:00:58.887
URL(), like this.

14
00:00:58.887 --> 00:01:01.758
And that's within the same directory here.

15
00:01:01.758 --> 00:01:07.279
So I can just say templates.html,

16
00:01:07.279 --> 00:01:12.248
and then imports.meta.url,

17
00:01:12.248 --> 00:01:15.749
and then .pathname.

18
00:01:15.749 --> 00:01:19.469
If you're on Windows, I think pathname
breaks it, so don't use pathname.

19
00:01:19.469 --> 00:01:20.829
So we got that.

20
00:01:20.829 --> 00:01:22.341
And then now we're gonna get the template.

21
00:01:22.341 --> 00:01:30.001
So we're gonna say await fs.read
file from the HTML path,

22
00:01:32.156 --> 00:01:35.096
utf-8.

23
00:01:38.243 --> 00:01:41.491
All right, so we got the template.

24
00:01:41.491 --> 00:01:44.441
And the next thing we need to
do is convert that template into

25
00:01:44.441 --> 00:01:46.270
the real HTML that we're gonna use,

26
00:01:46.270 --> 00:01:49.648
which is interpolate the template
with this data once we format it.

27
00:01:49.648 --> 00:01:54.529
So now we're gonna say const
html = interpolate this

28
00:01:54.529 --> 00:01:58.868
template with this object
that has notes on it,

29
00:01:58.868 --> 00:02:04.960
which is gonna be the format notes
of the notes object, like that.

30
00:02:11.935 --> 00:02:13.535
Cool, I think we need to send this back.

31
00:02:13.535 --> 00:02:17.350
So before we send it back, actually we
could do both of these in one, w could do

32
00:02:17.350 --> 00:02:21.371
a writeHead, which means, we could do
a status and the headers at the same time.

33
00:02:21.371 --> 00:02:26.326
So we'll say res.writeHead,
and status of 200, and

34
00:02:26.326 --> 00:02:30.978
then Content-Type is
probably gonna be text/html,

35
00:02:30.978 --> 00:02:37.363
since we're sending back HTML,
we want the browser to treat it like HTML.

36
00:02:39.146 --> 00:02:42.477
And then lastly,
we just need to send back the html,

37
00:02:42.477 --> 00:02:45.064
so we can just say a res.end(html).

38
00:02:52.166 --> 00:02:54.765
And then we'll just create one
last function to start the server.

39
00:02:54.765 --> 00:02:58.143
So we'll say start,
this also takes in notes,

40
00:02:58.143 --> 00:03:03.473
probably take in a port as well,
that way we're not stuck to the same port.

41
00:03:03.473 --> 00:03:06.441
And then all we're gonna do
is just create this server.

42
00:03:06.441 --> 00:03:10.932
So we could say server = createServer,

43
00:03:10.932 --> 00:03:14.371
give in the notes, like this.

44
00:03:14.371 --> 00:03:18.214
And then we just need to do the same
thing we did before where we listen,

45
00:03:18.214 --> 00:03:19.789
then we can open it, right?

46
00:03:19.789 --> 00:03:27.967
So let's say server.listen on
the port that you gave us.

47
00:03:27.967 --> 00:03:31.318
And then I'm actually going
to call open inside of here.

48
00:03:31.318 --> 00:03:37.262
And then we'll begin to just do a log,
console.log('server').

49
00:03:38.332 --> 00:03:42.614
Go ahead and make an address,

50
00:03:42.614 --> 00:03:47.412
which will be http:localhost:

51
00:03:47.412 --> 00:03:52.036
to whatever port you passed in,

52
00:03:52.036 --> 00:03:55.820
like that, or like that.

53
00:03:55.820 --> 00:04:01.007
And then server on, Address,

54
00:04:01.007 --> 00:04:04.426
just so we can see it in
a terminal to make sure it's on.

55
00:04:04.426 --> 00:04:06.224
Otherwise, it'll just
look like it's hanging.

56
00:04:06.224 --> 00:04:07.738
We won't know what's going on.

57
00:04:07.738 --> 00:04:10.840
And then I just wanna open
that address in a browser.

58
00:04:18.138 --> 00:04:21.096
Last thing we gotta do in here is just
make sure we export what we wanna use in

59
00:04:21.096 --> 00:04:21.734
another file.

60
00:04:21.734 --> 00:04:23.724
So I'm gonna export start.

61
00:04:23.724 --> 00:04:27.650
And that's the sweet thing about modules,
I don't have to export any other functions

62
00:04:27.650 --> 00:04:30.364
in here if I don't want them to
be used outside of this file.

63
00:04:30.364 --> 00:04:32.772
That would essentially make
these functions private,

64
00:04:32.772 --> 00:04:33.905
they could never be used.

65
00:04:33.905 --> 00:04:36.790
That also means they couldn't ever be tested
either because you didn't export them.

66
00:04:36.790 --> 00:04:38.094
So you gotta think about that.

67
00:04:38.094 --> 00:04:42.373
So, probably still a good
habit to export them just so

68
00:04:42.373 --> 00:04:46.091
you can test them, but
just keep note of that.

69
00:04:46.091 --> 00:04:51.219
So, okay, so now we have start,
all we wanna do here now is

70
00:04:51.219 --> 00:04:56.351
go back to our command,
scroll down to our web command here

71
00:04:56.351 --> 00:05:01.314
that we haven't done, and
we just want to update that.

72
00:05:01.314 --> 00:05:05.531
So we already have a positional for
port, default to 5,000.

73
00:05:05.531 --> 00:05:07.071
All we wanna do is just do this.

74
00:05:07.071 --> 00:05:10.384
We gotta get all the notes and
we gotta pass those notes to start, and

75
00:05:10.384 --> 00:05:12.141
then we just gotta pass in the port.

76
00:05:12.141 --> 00:05:14.069
So let's do that.

77
00:05:14.069 --> 00:05:22.396
const notes = await get,
Do we have a function for that?

78
00:05:22.396 --> 00:05:27.712
Yes, right.
getAllNotes, there we go.

79
00:05:27.712 --> 00:05:32.353
And then we can just say start
from server, auto import that,

80
00:05:32.353 --> 00:05:35.297
I'm sure it did import it right.

81
00:05:35.297 --> 00:05:38.128
It did, it did .js this time.

82
00:05:38.128 --> 00:05:39.664
Why did it do it this time?

83
00:05:39.664 --> 00:05:41.873
That's so weird.

84
00:05:41.873 --> 00:05:45.794
I mean, I'm not complaining, but
why you didn't do that the first time,

85
00:05:45.794 --> 00:05:46.612
I don't know.

86
00:05:46.612 --> 00:05:50.160
argv.port, to pass in the port there.

87
00:05:53.921 --> 00:05:58.373
Okay, so let's try to run this and
see what we broke.

88
00:05:58.373 --> 00:06:03.148
So now we can type in note web,

89
00:06:03.148 --> 00:06:07.543
and then port is optional.

90
00:06:07.543 --> 00:06:10.429
I'm just not gonna do it,
and let's see what happens.

91
00:06:10.429 --> 00:06:13.811
So, yeah, I already have something in use

92
00:06:13.811 --> 00:06:16.915
on 5,000, I don't know where.

93
00:06:16.915 --> 00:06:19.331
So I'm just gonna pick a different number.

94
00:06:19.331 --> 00:06:22.660
Let's just say 4001.

95
00:06:22.660 --> 00:06:25.842
Boom, so 4001 here.

96
00:06:25.842 --> 00:06:29.697
And let's see,
I don't see anything on the page.

97
00:06:29.697 --> 00:06:31.676
So let's see what's going on here.

98
00:06:31.676 --> 00:06:36.215
Okay, so we got everything running,
but nothing's on the page,

99
00:06:36.215 --> 00:06:39.142
probably because I don't have any notes.

100
00:06:39.142 --> 00:06:40.792
So that would be helpful.

101
00:06:40.792 --> 00:06:43.027
So let's stop this, and
let's make some notes.

102
00:06:43.027 --> 00:06:47.749
So I'm gonna say notes new, clean my room,

103
00:06:47.749 --> 00:06:52.739
clean my room, clean my room,
clean my room.

104
00:06:52.739 --> 00:06:53.570
What else do I have?

105
00:06:53.570 --> 00:06:54.930
I don't feel like typing anything.

106
00:06:54.930 --> 00:06:56.720
I know I got some other stuff in here.

107
00:06:58.843 --> 00:07:02.269
Here we go, I'll just do this.

108
00:07:02.269 --> 00:07:04.716
Cool, okay, so
now I have some notes in here.

109
00:07:04.716 --> 00:07:06.296
Now let's start it.

110
00:07:08.180 --> 00:07:12.283
4003, cool, there we go.

111
00:07:12.283 --> 00:07:15.351
And I'll have a website with my notes.

112
00:07:15.351 --> 00:07:16.896
So then you can go here, right?

113
00:07:16.896 --> 00:07:20.096
You can go into your HTML,
you can add a style tag, add some CSS,

114
00:07:20.096 --> 00:07:22.309
make it look better, do whatever you want.

115
00:07:22.309 --> 00:07:25.966
But basically we just server rendered
some HTML, that's what we just did.

116
00:07:25.966 --> 00:07:28.574
Just so
you've ever heard of server side React.

117
00:07:28.574 --> 00:07:30.913
Yeah, that's where they got this from.

118
00:07:30.913 --> 00:07:33.766
We just server side rendered some stuff.

119
00:07:33.766 --> 00:07:37.390
So typically you probably won't
use HTTP to create a server.

120
00:07:37.390 --> 00:07:38.981
In fact you never will.

121
00:07:38.981 --> 00:07:42.668
You will use something
called Express most likely,

122
00:07:42.668 --> 00:07:45.274
which is way better and functional.

123
00:07:45.274 --> 00:07:50.048
But I didn't want to talk about it in this
course, because then I have to come up

124
00:07:50.048 --> 00:07:53.600
with a use case for using it and
it'll just be trivial.

125
00:07:53.600 --> 00:07:55.353
In this case it makes sense to use this,
but

126
00:07:55.353 --> 00:07:58.236
realistically you'll probably use
something called Express.js or

127
00:07:58.236 --> 00:08:01.890
any other server language out there or
server framework that's out there.

128
00:08:01.890 --> 00:08:05.740
But for our purpose it works, and
I really wanted you to understand how all

129
00:08:05.740 --> 00:08:09.675
this is working, because underneath
Express, it's using HTTP anyway.

130
00:08:09.675 --> 00:08:13.343
So it's important to me that
you understand the foundations.

