WEBVTT

1
00:00:00.310 --> 00:00:01.760
Let's get started.

2
00:00:01.760 --> 00:00:04.013
We already talked about takeaways and
things like that.

3
00:00:04.013 --> 00:00:05.544
Let's start with the history of Node.

4
00:00:05.544 --> 00:00:10.490
So, I think it's important to see where
Node has come and how we got here.

5
00:00:10.490 --> 00:00:15.320
It's just a bunch of stuff here, but
I'm just gonna describe it in my own way.

6
00:00:15.320 --> 00:00:19.644
Node.js is basically just
an environment in which you can run

7
00:00:19.644 --> 00:00:22.230
JavaScript outside of the browser.

8
00:00:22.230 --> 00:00:23.860
That's where it started, right?

9
00:00:23.860 --> 00:00:27.358
If you think of languages like Python,
Ruby, PHP,

10
00:00:27.358 --> 00:00:30.370
these are operating system languages.

11
00:00:30.370 --> 00:00:32.620
These are languages that run
directly on your computer.

12
00:00:32.620 --> 00:00:36.033
You can run those programs
through your terminal.

13
00:00:36.033 --> 00:00:40.620
Before Node.js came out,
you couldn't do that with JavaScript.

14
00:00:40.620 --> 00:00:42.949
JavaScript was only a language
that could be run in a browser.

15
00:00:42.949 --> 00:00:45.388
It was considered a kiddy language.

16
00:00:45.388 --> 00:00:48.553
People didn't really take it
seriously because it was like,

17
00:00:48.553 --> 00:00:51.561
you get to make a scrolling thing
on my space page or something.

18
00:00:51.561 --> 00:00:54.424
No one took it seriously
until Node.js came out.

19
00:00:54.424 --> 00:01:00.040
Some guy named Ryan got really sick of
Not having JavaScripts on his computer,

20
00:01:00.040 --> 00:01:05.400
so he made Node.js, which basically was
like a fork of V8 which at the time

21
00:01:05.400 --> 00:01:11.470
was Google's engine that they created to
to run JavaScript in the Chrome browsers.

22
00:01:11.470 --> 00:01:16.768
So he took that engine and stuck it
on a computer, and that's Node.js.

23
00:01:16.768 --> 00:01:18.460
So there were some differences though,
right?

24
00:01:18.460 --> 00:01:23.486
The browser version of JavaScript
has access to things that

25
00:01:23.486 --> 00:01:28.928
are only useful in a browser like a DOB,
CSS, things like that.

26
00:01:28.928 --> 00:01:32.953
Whereas when you're running something on a
computer, there is no visual output other

27
00:01:32.953 --> 00:01:36.330
than a terminal, so there's no need for
a DOB or CSS or things like that.

28
00:01:36.330 --> 00:01:39.050
So that's where the differences are.

29
00:01:39.050 --> 00:01:41.578
But Node.js itself is not a language.

30
00:01:41.578 --> 00:01:43.510
It's an environment, it's a runtime.

31
00:01:43.510 --> 00:01:45.110
The language itself is JavaScript.

32
00:01:45.110 --> 00:01:49.548
So if you know JavaScript,
then you already know 90% of Node.js.

33
00:01:49.548 --> 00:01:51.220
It's literally the same language.

34
00:01:51.220 --> 00:01:55.420
Just some slight differences and
capabilities on what you can do with it.

35
00:01:55.420 --> 00:01:57.129
So we'll cover a lot of that.

36
00:01:57.129 --> 00:02:03.884
But it's been around since 2009, and since
then, it's been adopted by the community.

37
00:02:03.884 --> 00:02:07.238
As you know,
every hosting provider supports Node.js.

38
00:02:07.238 --> 00:02:10.674
It's probably one of the most
popular server-side frameworks or

39
00:02:10.674 --> 00:02:14.478
server-side runtimes out there,
and it's currently on version 18,

40
00:02:14.478 --> 00:02:16.860
which is what we'll be using today.

41
00:02:16.860 --> 00:02:18.310
So if you don't have that,
don't worry about it.

42
00:02:18.310 --> 00:02:22.150
We'll go through my preferred
method on how to install it.

43
00:02:22.150 --> 00:02:27.227
And there was a time where people
thought Node.js was gonna die, like back

44
00:02:27.227 --> 00:02:32.960
when it was like on version 0.12, it kinda
stagnated and there was no traction.

45
00:02:32.960 --> 00:02:35.520
So the community got fed up and
like forked it and

46
00:02:35.520 --> 00:02:37.510
they made this thing called IO.js.

47
00:02:37.510 --> 00:02:39.988
That was so long ago.

48
00:02:39.988 --> 00:02:41.070
There was this whole thing.

49
00:02:41.070 --> 00:02:45.630
So someone made IO.js cuz they got
sick of Node.js not being updated.

50
00:02:45.630 --> 00:02:48.665
And then that sparked a fire
underneath Node.js like, all right,

51
00:02:48.665 --> 00:02:51.390
we'll get our shit together,
and we'll update our stuff.

52
00:02:51.390 --> 00:02:53.790
So ever since then,
there's been a lot of updates.

53
00:02:53.790 --> 00:02:57.718
Node.js has adopting a lot of things,
there's like a board of smart people that

54
00:02:57.718 --> 00:03:01.646
come together and make sure things are up
to date, it's following ECMO script,

55
00:03:01.646 --> 00:03:04.973
it's in feature parity with things
that happening in the browser.

56
00:03:04.973 --> 00:03:10.073
So it's been taken seriously and
things are popping off now.

57
00:03:10.073 --> 00:03:14.096
So yeah, and today a lot of people
use Node.js in production for

58
00:03:14.096 --> 00:03:19.554
all different types of things, whether
it's like a server, or proxy, build tools.

59
00:03:19.554 --> 00:03:22.440
If you've ever used React or
any front end framework,

60
00:03:22.440 --> 00:03:25.087
100% uses Node.js to build that framework.

61
00:03:25.087 --> 00:03:29.464
That's the tool that converts your JSX
to HTML or JavaScript for the browser,

62
00:03:29.464 --> 00:03:33.775
it's node, unless you're using like
some new thing that you just rust which

63
00:03:33.775 --> 00:03:35.658
everyone's went to that today.

64
00:03:35.658 --> 00:03:39.819
But still, Node.js is pretty much powers
everything in web development at this

65
00:03:39.819 --> 00:03:42.035
point, there's really no way around it.

