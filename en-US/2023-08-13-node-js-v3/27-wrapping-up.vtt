WEBVTT

1
00:00:00.000 --> 00:00:01.554
As far as the CLI app goes,

2
00:00:01.554 --> 00:00:04.752
if we just kind of recap
everything that we have here.

3
00:00:04.752 --> 00:00:09.498
We created an app that allows
us to perform crud on some

4
00:00:09.498 --> 00:00:12.564
notes that interacts with a file.

5
00:00:12.564 --> 00:00:17.898
And takes advantage of some of
the core internal modules like fs and

6
00:00:17.898 --> 00:00:19.428
things like that.

7
00:00:19.428 --> 00:00:22.157
That we get access to inside of node.

8
00:00:22.157 --> 00:00:24.662
We then also interacted with NPM and

9
00:00:24.662 --> 00:00:29.506
installed a few things from other
developers like just yargs open and

10
00:00:29.506 --> 00:00:32.943
created some tests to test
some of those things.

11
00:00:32.943 --> 00:00:38.551
And then lastly, we created a simple but
sophisticated Web server that

12
00:00:38.551 --> 00:00:45.481
sends back some server-side HTML that gets
interpolated from data from our database.

13
00:00:45.481 --> 00:00:48.856
At the end of the day, almost every
app you work on, especially web apps,

14
00:00:48.856 --> 00:00:49.790
is going to be this.

15
00:00:49.790 --> 00:00:51.513
Pulling data from a database,

16
00:00:51.513 --> 00:00:54.971
interpolating it in some type
of HTML JavaScript framework.

17
00:00:54.971 --> 00:00:57.513
That is like every app, period.

18
00:00:57.513 --> 00:01:01.587
And everything around that is just
trying to figure out how to do that

19
00:01:01.587 --> 00:01:05.164
performatively how to do that faster,
how to do it cooler.

20
00:01:05.164 --> 00:01:06.467
That's it.

21
00:01:06.467 --> 00:01:08.125
Like every framework is just this.

22
00:01:08.125 --> 00:01:10.435
It's an abstraction around this.

23
00:01:10.435 --> 00:01:13.710
So if you understand this at its core,
it's fundamental.

24
00:01:13.710 --> 00:01:16.214
If some new framework comes out,
you'd be like, okay.

25
00:01:16.214 --> 00:01:20.369
So how do I interpolate date like it's the
same thing you'll just know you'll be able

26
00:01:20.369 --> 00:01:23.151
to learn in like a day because
you understand the basics.

27
00:01:23.151 --> 00:01:28.567
So yeah, that's pretty much
everything I wanted to cover

28
00:01:28.567 --> 00:01:33.548
as far as things that I wanted
to make sure you all saw.

29
00:01:33.548 --> 00:01:38.165
But now I want to talk about some next
step things that you probably want to

30
00:01:38.165 --> 00:01:41.506
look at to help you on your
journey as you go further.

31
00:01:41.506 --> 00:01:43.880
And I was gonna put them in the notes.

32
00:01:43.880 --> 00:01:45.790
Then I got to the notes and
I was like, you know what,

33
00:01:45.790 --> 00:01:48.230
I'll probably feel different about
it without talking about it.

34
00:01:48.230 --> 00:01:49.629
So I left it blank.

35
00:01:49.629 --> 00:01:54.561
So there's nothing in that page
about Recap because I don't

36
00:01:54.561 --> 00:01:59.214
know I'm brand new and
I like I feel different every day.

37
00:01:59.214 --> 00:02:04.069
So some of the things I definitely want
you all to look at I mentioned it I'm just

38
00:02:04.069 --> 00:02:09.089
gonna show you so you see it with your own
eyes is express Jas so check out Express.

39
00:02:09.089 --> 00:02:14.229
Highly recommend going here and
building out a API server

40
00:02:14.229 --> 00:02:19.164
with Express,
where you can send back some JSON data.

41
00:02:19.164 --> 00:02:23.551
It's the standard, although I
will admit that there are newer,

42
00:02:23.551 --> 00:02:27.803
faster server frameworks out there,
but it doesn't matter.

43
00:02:27.803 --> 00:02:29.421
This isn't going to production.

44
00:02:29.421 --> 00:02:30.651
You don't need to learn every framework.

45
00:02:30.651 --> 00:02:34.223
Just pick one that makes sense to you and
try to build something with it.

46
00:02:34.223 --> 00:02:35.145
And have fun.

47
00:02:35.145 --> 00:02:37.963
I would say Express,
there's probably more resources out there.

48
00:02:37.963 --> 00:02:41.143
There's more things to Google,
there's more videos to watch.

49
00:02:41.143 --> 00:02:43.963
So for me learning something is
all about the accumulation of

50
00:02:43.963 --> 00:02:45.687
resources that are available to me.

51
00:02:45.687 --> 00:02:47.962
It's harder to learn something
with less resources,

52
00:02:47.962 --> 00:02:49.549
even though it might be easy to learn.

53
00:02:49.549 --> 00:02:54.733
Trying to learn Elixir
which is really difficult.

54
00:02:54.733 --> 00:02:57.536
It is difficult because there's not
a lot of resources out there, but

55
00:02:57.536 --> 00:02:59.306
the language itself is not that difficult.

56
00:02:59.306 --> 00:03:01.098
But good luck googling
something on Elixir.

57
00:03:01.098 --> 00:03:07.232
So, yeah, ExpressJS,
build an application with it.

58
00:03:07.232 --> 00:03:12.330
I also recommend checking out
replacing what we did with the files.

59
00:03:12.330 --> 00:03:13.460
But with a database.

60
00:03:13.460 --> 00:03:17.038
So you could pretty much
pick any database you want.

61
00:03:17.038 --> 00:03:21.654
I don't really have like any strong
recommendations on which ones you should

62
00:03:21.654 --> 00:03:26.638
or shouldn't do, but some of the top ones
might be like Postgres or Margo or MySQL.

63
00:03:26.638 --> 00:03:29.458
Just pick one of those databases and

64
00:03:29.458 --> 00:03:35.195
swap out the files that we did with
the database and your choice of an ORM.

65
00:03:35.195 --> 00:03:39.602
A really good RMS is Prisma is probably
like the go to standard out there.

66
00:03:39.602 --> 00:03:43.480
Everyone uses this to model their
database and do different things.

67
00:03:43.480 --> 00:03:48.238
So highly recommend checking that out.

68
00:03:48.238 --> 00:03:52.562
I would also recommend
publishing something to NPM.

69
00:03:52.562 --> 00:03:57.674
So how to Publish a NPM package you

70
00:03:57.674 --> 00:04:03.516
can even take the thing that we made and

71
00:04:03.516 --> 00:04:06.446
publish it to NPM.

72
00:04:06.446 --> 00:04:09.406
It's like two commands
it's really simple to do.

73
00:04:09.406 --> 00:04:12.808
But highly recommend just putting
something on NPM that's got your name on

74
00:04:12.808 --> 00:04:14.650
it, even though no one will ever use it.

75
00:04:14.650 --> 00:04:17.741
But just so you go through that flow and
you feel it, you're like, wow,

76
00:04:17.741 --> 00:04:20.590
I put something out there on
the internet and just put it out there.

77
00:04:20.590 --> 00:04:22.772
So highly recommend that.

78
00:04:22.772 --> 00:04:23.554
Yes.

79
00:04:23.554 --> 00:04:27.926
&gt;&gt; And we have of course, created an open
source JavaScript library on GitHub that

80
00:04:27.926 --> 00:04:29.960
talks about publishing NPM as well.

81
00:04:29.960 --> 00:04:31.720
&gt;&gt; There you go.

82
00:04:31.720 --> 00:04:36.996
That's the one, so do that.

83
00:04:36.996 --> 00:04:40.538
And then also check out TypeScript
if you haven't less about node, but

84
00:04:40.538 --> 00:04:43.268
more just about that's just
what everyone's using.

85
00:04:43.268 --> 00:04:48.295
And then last thing would be,
take a little more advanced course

86
00:04:48.295 --> 00:04:53.336
I know we have the API,
design course here that are also taught.

87
00:04:53.336 --> 00:04:57.407
So check out that one if you want to
take this and go a step further and

88
00:04:57.407 --> 00:05:01.064
make a full blown JSON API that
will like deploy somewhere.

89
00:05:01.064 --> 00:05:01.890
Check out that course.

90
00:05:01.890 --> 00:05:05.116
We pretty much cover everything
in there from Prisma, Postgres,

91
00:05:05.116 --> 00:05:06.798
like all these different things.

92
00:05:06.798 --> 00:05:07.996
We'll keep it up to date.

93
00:05:07.996 --> 00:05:09.500
That one I do go into more depth, but

94
00:05:09.500 --> 00:05:12.625
that also just means like you should
check out like deploying something.

95
00:05:12.625 --> 00:05:14.942
So make a server, deploy it somewhere.

96
00:05:14.942 --> 00:05:16.831
Getting something to work on
your machine is one thing.

97
00:05:16.831 --> 00:05:19.007
Getting it to work on AWS or
Digital ocean or

98
00:05:19.007 --> 00:05:21.917
wherever you want to deploy
it is completely different.

99
00:05:21.917 --> 00:05:24.981
So check that out as well.

100
00:05:24.981 --> 00:05:30.020
Other than that, yeah, just,
I would highly recommend just going in and

101
00:05:30.020 --> 00:05:34.573
trying to, I don't know,
build small automations that you could

102
00:05:34.573 --> 00:05:38.007
leverage in your personal life,
your day to day.

103
00:05:38.007 --> 00:05:41.865
For instance, some of the things that I
built early on were like, I would use

104
00:05:41.865 --> 00:05:45.680
test end to end testing frameworks
that would simulate user interaction.

105
00:05:45.680 --> 00:05:49.179
To go online and automatically
find me shoes or pay my bills,

106
00:05:49.179 --> 00:05:52.348
because I didn't feel like
opening a browser to do it.

107
00:05:52.348 --> 00:05:55.181
So I would have the script go and do it.

108
00:05:55.181 --> 00:05:59.707
Can you open the browser and
go check this Nike website every hour, and

109
00:05:59.707 --> 00:06:02.172
then text me if the shoes are in stock?

110
00:06:02.172 --> 00:06:02.774
So it would.
And

111
00:06:02.774 --> 00:06:05.270
I would just leave my computer running and
it would go do that.

112
00:06:05.270 --> 00:06:09.661
Right, or just like you open a browser and
on the 15th of every month or whatever,

113
00:06:09.661 --> 00:06:11.438
go pay this Internet bill for me.

114
00:06:11.438 --> 00:06:13.900
Here's my credit card information and
it will go do it, right?

115
00:06:13.900 --> 00:06:17.078
So yeah, just try things out.

116
00:06:17.078 --> 00:06:20.664
Try to have fun with it,
something that inspires you.

117
00:06:20.664 --> 00:06:22.527
We didn't talk about it, but

118
00:06:22.527 --> 00:06:27.381
you can make API calls from your server
to other servers and get data, right.

119
00:06:27.381 --> 00:06:29.739
So you can there's not
a limit to what you can do.

120
00:06:29.739 --> 00:06:32.255
So yeah, have fun with it.

121
00:06:32.255 --> 00:06:34.835
Other than that, it was a pleasure.

122
00:06:34.835 --> 00:06:35.577
Thank you everybody.

123
00:06:35.577 --> 00:06:36.824
Thanks for taking the course.

124
00:06:36.824 --> 00:06:41.226
[APPLAUSE]

