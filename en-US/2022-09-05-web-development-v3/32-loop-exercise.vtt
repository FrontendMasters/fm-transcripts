WEBVTT

1
00:00:00.539 --> 00:00:03.327
I'm gonna give you a little project.

2
00:00:04.460 --> 00:00:05.917
Just a little one.

3
00:00:08.350 --> 00:00:17.932
So I want you to write some bit of code,
In your experiments.js here.

4
00:00:17.932 --> 00:00:21.407
We can just delete all this and
start from here.

5
00:00:21.407 --> 00:00:26.133
And I want you to take it, so that I have,

6
00:00:26.133 --> 00:00:30.998
let's say const timesToRepeat = 10.

7
00:00:30.998 --> 00:00:35.744
And I want you to have const character or
something like that equal to,

8
00:00:35.744 --> 00:00:39.445
let's put, I don't know,
b or something like that,

9
00:00:39.445 --> 00:00:44.126
or you can put an emoji in there if
you want to, that might be more fun.

10
00:00:44.126 --> 00:00:50.875
So we're gonna put dog emoji,
cuz I like dogs, whatever you want.

11
00:00:53.629 --> 00:00:58.718
And then I want you to
write some loop that

12
00:00:58.718 --> 00:01:05.461
takes that character and
repeats it that many times.

13
00:01:05.461 --> 00:01:10.435
So if I had this and
I console.logged the answer,

14
00:01:10.435 --> 00:01:13.638
whatever answer it is, right,

15
00:01:16.492 --> 00:01:22.244
This would log out
a string of this 10 times,

16
00:01:22.244 --> 00:01:29.483
right, 1,2, 3, 4, 5, 6, 7, 8, 9, 10.

17
00:01:32.539 --> 00:01:35.572
Right, does it make sense
what I'm looking for?

18
00:01:35.572 --> 00:01:43.706
Okay, so
you're gonna write your code here.

19
00:01:47.905 --> 00:01:52.524
You have to define, so
answer is gonna be something like that.

20
00:01:52.524 --> 00:01:58.280
Okay, So

21
00:01:58.280 --> 00:02:00.995
why am I having you do this?

22
00:02:00.995 --> 00:02:05.766
This is really to just have
you flex some muscles about

23
00:02:05.766 --> 00:02:10.966
learning strings and
concatenating strings together and

24
00:02:10.966 --> 00:02:15.008
learning how to do loops correctly, right?

25
00:02:15.008 --> 00:02:20.264
One of the things that we
didn't talk about, but, Here,

26
00:02:20.264 --> 00:02:24.462
let's say we wanted to do,
let's just refresh this.

27
00:02:24.462 --> 00:02:25.793
Yeah, here we go.

28
00:02:29.439 --> 00:02:33.912
Let numberOfTimesToRepeat, = 10.

29
00:02:33.912 --> 00:02:40.308
I can totally take this and replace this
with, right, I can put variables in here.

30
00:02:40.308 --> 00:02:46.391
There's no reason that I had to
put a hand coded number in there.

31
00:02:46.391 --> 00:02:51.744
So you might wanna take
advantage of that as well.

32
00:02:55.703 --> 00:03:00.658
Also make sure you're declaring your
variable outside of your for loop.

33
00:03:00.658 --> 00:03:04.851
We'll talk about this in
our scoping section, but

34
00:03:04.851 --> 00:03:10.521
if I say let dog = blah in here,
I can't refer to dog outside of here.

35
00:03:10.521 --> 00:03:13.703
It's gonna be like,
I don't know what dog is,

36
00:03:13.703 --> 00:03:18.886
because dog is inside this block and
it's not visible outside of that block.

37
00:03:18.886 --> 00:03:25.718
So just make sure that you
have let answer exist up here.

38
00:03:25.718 --> 00:03:27.641
You might consider starting with an empty
string, that's kind of up to you.

39
00:03:30.596 --> 00:03:39.458
Okay, so, My answer is on this page,
you just have to scroll down a little bit.

40
00:03:39.458 --> 00:03:41.568
I've given a bit of whitespace,
so you don't accidentally cheat.

