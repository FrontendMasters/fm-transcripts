WEBVTT

1
00:00:00.140 --> 00:00:03.130
Let's start talking about the DOM.

2
00:00:04.260 --> 00:00:07.600
D-O-M, Document Object Model.

3
00:00:09.570 --> 00:00:13.131
You've actually already been
interacting with the DOM a little bit,

4
00:00:13.131 --> 00:00:15.800
just because Window
technically is part of the DOM.

5
00:00:16.940 --> 00:00:21.626
We're getting to this weird territory
where there's a spec for JavaScript,

6
00:00:21.626 --> 00:00:24.000
this language, right.

7
00:00:24.000 --> 00:00:25.579
But there's also the spec for

8
00:00:25.579 --> 00:00:29.571
this thing called the DOM which is how
browsers interact with JavaScript.

9
00:00:29.571 --> 00:00:33.140
Window is actually not a part of
JavaScript, it's part of the DOM.

10
00:00:34.570 --> 00:00:36.360
Do you really need to care which is which?

11
00:00:36.360 --> 00:00:37.135
No, [LAUGH].

12
00:00:37.135 --> 00:00:41.330
But I just want you to know that
there's two things in play here.

13
00:00:42.730 --> 00:00:47.555
And again, it becomes much more important
if you start trying to write Node,

14
00:00:47.555 --> 00:00:52.604
because all the stuff that you have in the
DOM ends up not being available in Node or

15
00:00:52.604 --> 00:00:54.777
Deno or other runtimes like that.

16
00:00:57.327 --> 00:01:01.991
So, the DOM defines how JavaScript
interacts with HTML and CSS.

17
00:01:01.991 --> 00:01:04.020
That's the entire gist of it right there.

18
00:01:05.730 --> 00:01:08.970
It's just a bunch of objects and
methods that you can call to say, hey,

19
00:01:08.970 --> 00:01:11.670
I want to interact with
the DOM in such a way, right.

20
00:01:11.670 --> 00:01:13.891
If I'd press this button, do this thing,

21
00:01:13.891 --> 00:01:16.740
would be you interacting
with the DOM via JavaScript.

22
00:01:18.380 --> 00:01:21.276
So, let's look at a really
simple example first.

23
00:01:23.690 --> 00:01:28.380
Let's say I have this div and
I give it a class of red-square, right.

24
00:01:29.900 --> 00:01:31.681
And I gave it this kind of CSS.

25
00:01:33.751 --> 00:01:37.227
Crimson, I give it a width of 100
pixels and height 100 pixels.

26
00:01:37.227 --> 00:01:41.640
Then I grabbed this in
JavaScript using document, oops,

27
00:01:46.694 --> 00:01:50.075
.querySelector, which allows
me to give it a CSS selector,

28
00:01:50.075 --> 00:01:54.510
just like one that you would see
in the CSS selector part, right.

29
00:01:54.510 --> 00:01:56.610
I say give me this red square.

30
00:01:56.610 --> 00:01:58.710
So now I have a handle on this, right.

31
00:01:58.710 --> 00:02:03.873
I have this object here that represents
this square in the DOM, right.

32
00:02:06.283 --> 00:02:07.219
I can then say,

33
00:02:07.219 --> 00:02:10.537
redSquare.style.backgroundColor =
limegreen.

34
00:02:10.537 --> 00:02:14.667
So programmatically,
I can overwrite the CSS.

35
00:02:14.667 --> 00:02:15.295
And try it, right.

36
00:02:15.295 --> 00:02:17.636
If I put blue here, its gonna change.

37
00:02:19.982 --> 00:02:20.986
Pink.

38
00:02:24.682 --> 00:02:26.690
123, that's gonna be black, right.

39
00:02:27.950 --> 00:02:32.799
Someone told me about fogdog, f06d06,

40
00:02:32.799 --> 00:02:37.790
that's a lovely shade of orange, right.

41
00:02:37.790 --> 00:02:40.050
Looks like fogdog.

42
00:02:42.796 --> 00:02:46.040
Anyway, so you can start
overriding the colors that way.

43
00:02:47.600 --> 00:02:51.803
This is how you would use JavaScript
to interact with CSS, and with HTML for

44
00:02:51.803 --> 00:02:53.480
that matter.

45
00:02:53.480 --> 00:02:57.189
So, this is where everything kind of comes
full circle, where you learned HTML,

46
00:02:57.189 --> 00:02:59.201
you learned CSS, you learned JavaScript.

47
00:02:59.201 --> 00:03:02.239
That where they meet in the middle
is the DOM here, right.

48
00:03:04.326 --> 00:03:06.220
So what is document?

49
00:03:06.220 --> 00:03:10.233
Document is, basically allows
you to reach into your HTML and

50
00:03:10.233 --> 00:03:13.290
start messing with stuff, right.

51
00:03:13.290 --> 00:03:15.252
So, if we bring this back up.

52
00:03:18.118 --> 00:03:20.135
And I open my console.

53
00:03:21.954 --> 00:03:28.851
I can say, let's say, let mySquare =

54
00:03:28.851 --> 00:03:38.474
document.querySelector('.red-square').

55
00:03:40.776 --> 00:03:45.340
Now, mySquare is this little friend here,
right.

56
00:03:45.340 --> 00:03:50.438
I had this div that now
I have a handle on and

57
00:03:50.438 --> 00:03:56.870
I can do mySquare.style.width = 300pixels.

58
00:03:58.460 --> 00:03:59.340
And I can make it wider.

59
00:04:01.050 --> 00:04:04.560
Or I can make it 100 pixels and
it goes back to where it was.

60
00:04:06.430 --> 00:04:08.403
This is the fun part in my opinion where,

61
00:04:08.403 --> 00:04:12.014
you get to write code that viscerally
presents something to you, right.

62
00:04:14.709 --> 00:04:18.265
So, querySelector is a newer
thing that you can do.

63
00:04:18.265 --> 00:04:21.146
I say newer, it's not that new.

64
00:04:21.146 --> 00:04:25.203
The old way of doing it was,

65
00:04:25.203 --> 00:04:31.212
document.getElementsByClassName.

66
00:04:31.212 --> 00:04:35.559
And then, you would say, .red-square.

67
00:04:35.559 --> 00:04:39.760
No dot, cuz getElementsByClassName
is implied by the class name.

68
00:04:41.060 --> 00:04:45.382
Okay, this now gives me a, what's called a
node list, which looks like an array, but

69
00:04:45.382 --> 00:04:48.520
it's not quite an array, it's annoying.

70
00:04:48.520 --> 00:04:52.499
So if I wanted to look at
this one in particular,

71
00:04:52.499 --> 00:04:55.490
then I would have to say 0, right.

72
00:04:55.490 --> 00:04:59.450
And then,
that finally would give me the same thing.

73
00:04:59.450 --> 00:05:03.565
Again, I just show you that I would
use querySelector 100% of the time,

74
00:05:03.565 --> 00:05:05.119
it's just way easier to do.

75
00:05:05.119 --> 00:05:09.070
You will definitely see documentation
that has stuff like this in it.

76
00:05:09.070 --> 00:05:13.200
This is the old way,
querySelector's the new way.

77
00:05:13.200 --> 00:05:16.945
And you're gonna find there's a lot of
things in the DOM in particular that

78
00:05:16.945 --> 00:05:20.346
are that way, where you'll see two
ways to do the exact same thing.

79
00:05:20.346 --> 00:05:23.993
And you'll be, which one's the right way?

80
00:05:23.993 --> 00:05:25.793
Well, they're both right, [LAUGH].

81
00:05:25.793 --> 00:05:27.480
They both do what you're trying to do.

82
00:05:27.480 --> 00:05:31.613
But one's newer and
maybe a bit easier to use.

83
00:05:31.613 --> 00:05:34.335
This is the thing about the web is
they just try not to break it, right.

84
00:05:34.335 --> 00:05:37.599
So, instead of deleting things and
replacing them with better things,

85
00:05:37.599 --> 00:05:41.070
they will leave the old things in and
just add new things.

86
00:05:41.070 --> 00:05:43.682
So in other words, if it works
it works and just stick with it.

87
00:05:43.682 --> 00:05:47.458
For the most part, both of those
are totally acceptable they're both

88
00:05:47.458 --> 00:05:49.826
performance, they both work really well.

89
00:05:49.826 --> 00:05:53.588
Just pick one, go with it,
it's totally fine.

90
00:05:53.588 --> 00:05:56.882
Again, when I was learning how
to write code for the browsers,

91
00:05:56.882 --> 00:06:00.437
I don't get this, I feel like I'm
doing something wrong, right.

92
00:06:00.437 --> 00:06:02.908
Because I'm not choosing the right one.

93
00:06:02.908 --> 00:06:05.500
You're not, they're both fine,
stick with the one that you want.

94
00:06:05.500 --> 00:06:08.236
QuerySelector is easier to use,
but after that it's up to you.

95
00:06:14.646 --> 00:06:20.260
Style object, that's how you start
manipulating things directly on the CSS.

96
00:06:22.710 --> 00:06:28.926
Maybe you wanna click it so that if
they click the dark mode button that

97
00:06:28.926 --> 00:06:36.010
you start setting styles with the dark
mode theme, you could totally do that.

98
00:06:38.060 --> 00:06:42.650
Another good one here,
I picked up mySquare,

99
00:06:42.650 --> 00:06:46.074
so let's trash this, mySquare.

100
00:06:46.074 --> 00:06:49.246
There's another thing called classList.

101
00:06:49.246 --> 00:06:52.474
So now, you can see I can see all
of the classes that exist on this.

102
00:06:52.474 --> 00:06:53.988
It just has the one, right?

103
00:06:53.988 --> 00:06:58.728
But let's say I said,
classList.add and I added one called,

104
00:06:58.728 --> 00:07:03.605
I don't know, lol-class or
something like that.

105
00:07:03.605 --> 00:07:06.205
Now, if I look at class list,
again, what does it have?

106
00:07:06.205 --> 00:07:08.085
It now has two classes.

107
00:07:08.085 --> 00:07:12.621
If I inspect it,
you can see here it has lol-class on it.

108
00:07:12.621 --> 00:07:15.341
So this would actually be a better
way of doing dark mode, right.

109
00:07:15.341 --> 00:07:18.308
If someone clicked your dark mode button,
you can go and

110
00:07:18.308 --> 00:07:21.859
add dark to all the various
different things that change, right.

111
00:07:21.859 --> 00:07:25.617
Just by adding classes rather
than directly manipulating styles

112
00:07:31.528 --> 00:07:36.430
Yeah, by manipulating styles, you're
actually just adding inline styles, right.

113
00:07:36.430 --> 00:07:37.651
That's why you can see this here.

114
00:07:44.241 --> 00:07:45.184
Cool.

115
00:07:46.360 --> 00:07:48.384
And we'll go through a bunch
of examples like that,

116
00:07:48.384 --> 00:07:50.414
but this is just one way we
can get started with this.

117
00:07:56.927 --> 00:07:59.788
One thing that people find a little weird.

118
00:07:59.788 --> 00:08:03.939
When you're referring to this in,
let's look at this again.

119
00:08:08.727 --> 00:08:11.470
This is background-color in CSS.

120
00:08:11.470 --> 00:08:15.026
But you notice in JavaScript,
it's backgroundColor,

121
00:08:15.026 --> 00:08:17.370
camel cased in JavaScript.

122
00:08:17.370 --> 00:08:17.980
Why is that?

123
00:08:19.720 --> 00:08:22.105
Because that's the way it is [LAUGH].

124
00:08:22.105 --> 00:08:24.510
There's not really a better
explanation than that.

125
00:08:24.510 --> 00:08:27.312
CSS, everything is kebab case where
they have the dashes between things and

126
00:08:27.312 --> 00:08:28.556
it's just always been that way.

127
00:08:28.556 --> 00:08:32.045
And that's actually not valid JavaScript,

128
00:08:32.045 --> 00:08:36.280
dash is not a valid character
to put in a variable name.

129
00:08:36.280 --> 00:08:42.760
So they actually have to get
around it by camel casing it.

130
00:08:42.760 --> 00:08:46.801
If I wanted to refer to the box
sizing here, how would I do that?

131
00:08:46.801 --> 00:08:50.328
Box and then capital S.

132
00:08:50.328 --> 00:08:55.440
And then, this would have to be
content-box or something like that.

133
00:08:55.440 --> 00:08:59.072
And this would override it to be
content-box instead of border-box.

134
00:09:01.118 --> 00:09:05.186
So you'll just have to do that conversion
in your head from kebab casing to camel

135
00:09:05.186 --> 00:09:12.910
casing Yeah, marginBottom,
that would be the same thing.

136
00:09:14.330 --> 00:09:16.476
Padding-right would become paddingRight,
like that.

137
00:09:21.783 --> 00:09:24.405
And, yeah,
there's a ton of stuff you can do.

138
00:09:24.405 --> 00:09:28.521
I was showing you how to manipulate
the styles, but you can clone elements,

139
00:09:28.521 --> 00:09:30.460
you can create elements on the fly.

140
00:09:32.030 --> 00:09:33.750
Let's just see that really quick.

141
00:09:34.950 --> 00:09:38.988
So I could say,

142
00:09:38.988 --> 00:09:43.649
const myImg = new

143
00:09:43.649 --> 00:09:49.251
HTMLImageElement.

144
00:09:54.662 --> 00:09:56.898
This I don't remember
how to do on the fly.

145
00:09:59.681 --> 00:10:01.520
Now I have to do it, anyway.

146
00:10:01.520 --> 00:10:04.185
Suffice it to say, I'm not gonna
spend too much time digging into it.

147
00:10:04.185 --> 00:10:07.473
But you can create HTML tags on the fly,
you can set their things and

148
00:10:07.473 --> 00:10:11.135
then you could append them to the DOM or
you can remove things from the DOM.

149
00:10:13.595 --> 00:10:16.126
Maybe we can remove this one
really quick just to show you.

150
00:10:18.476 --> 00:10:19.865
I'm gonna show you a really fun trick.

151
00:10:19.865 --> 00:10:23.447
So if you right click on this and
you say, Inspect.

152
00:10:23.447 --> 00:10:27.055
And then, if I go over to my console,
and I say $0,

153
00:10:27.055 --> 00:10:30.750
it'll refer to the last thing
I inspected on the DOM.

154
00:10:31.830 --> 00:10:33.050
That's very useful to me.

155
00:10:33.050 --> 00:10:34.750
So I don't have to go query it.

156
00:10:34.750 --> 00:10:35.890
I can just start messing with it.

157
00:10:35.890 --> 00:10:37.270
This is just a dev tools trick.

158
00:10:37.270 --> 00:10:39.119
And then all of a sudden it's like x.

159
00:10:39.119 --> 00:10:41.705
And so, I don't have to keep doing $0.

160
00:10:41.705 --> 00:10:49.652
So I think I can do, x., Remove.

161
00:10:49.652 --> 00:10:55.913
And I think this will just,
oops Just delete it, right.

162
00:10:55.913 --> 00:10:58.050
So x.remove,
it'll remove itself from the DOM.

163
00:10:59.999 --> 00:11:00.840
Which is pretty fun.

164
00:11:02.773 --> 00:11:04.046
All right, so there's that.

165
00:11:06.312 --> 00:11:07.288
Okay.

166
00:11:09.269 --> 00:11:11.930
So, what if you wanted to modify
multiple things at a time?

167
00:11:13.640 --> 00:11:16.150
Let's say I had this unordered list,
which I do right here.

168
00:11:18.440 --> 00:11:20.960
And I wanna change some things.

169
00:11:22.140 --> 00:11:23.500
But I don't wanna change other things.

170
00:11:24.600 --> 00:11:25.304
How would you do that?

171
00:11:28.780 --> 00:11:31.943
Well, there's a function called
querySelectorAll, querySelector will just

172
00:11:31.943 --> 00:11:35.650
find the first instance of something, and
then, it just gives you that back, right.

173
00:11:35.650 --> 00:11:36.906
So if I have five redSquares,

174
00:11:36.906 --> 00:11:39.486
it's just gonna give me the first
one if I do querySelector.

175
00:11:39.486 --> 00:11:41.177
If I do querySelectorAll,

176
00:11:41.177 --> 00:11:46.180
it's gonna give me all of the instances
of that particular thing.

177
00:11:46.180 --> 00:11:51.441
So I'm gonna say,
document.querySelectorAll for js-target.

178
00:11:51.441 --> 00:11:54.564
And I'm gonna get this one, this one,
I'm not gonna get that one, right.

179
00:11:54.564 --> 00:11:56.460
That one doesn't have the class.

180
00:11:56.460 --> 00:12:00.366
I will get that one and that one, okay.

181
00:12:00.366 --> 00:12:03.048
And I'll say, elementsToChange, right.

182
00:12:03.048 --> 00:12:06.933
So, document.querySelectorAll and
I'm grabbing .js-target.

183
00:12:08.918 --> 00:12:13.359
So, I'm gonna get a list, that's how long?

184
00:12:13.359 --> 00:12:14.542
Length four, right.

185
00:12:14.542 --> 00:12:17.502
This one, this one,
this one, and this one.

186
00:12:17.502 --> 00:12:22.432
Then I'm gonna say, for (let i = 0;
&lt; elementsToChange.length, i++).

187
00:12:23.568 --> 00:12:26.672
And then I'm gonna say,
currentElement.innerText = "Modified by

188
00:12:26.672 --> 00:12:31.393
JavaScript!" And
you can see here it's live, right.

189
00:12:31.393 --> 00:12:33.512
So, if I start changing it
they're gonna keep changing.

190
00:12:43.106 --> 00:12:43.999
Right.

191
00:12:46.163 --> 00:12:52.702
Now, what happens if I just
change this to be, I'm worried.

192
00:12:52.702 --> 00:12:54.017
Yes, this will be fun.

193
00:12:54.017 --> 00:12:56.782
If I just change just to be li,
not only did I change it,

194
00:12:56.782 --> 00:13:00.226
I changed literally everything
else on the in my document, right.

195
00:13:03.356 --> 00:13:07.160
Because it's queering the whole page, it's
not querying just in some particular area.

196
00:13:07.160 --> 00:13:11.300
I was too loose with this, so
I selected every li in my document.

197
00:13:13.150 --> 00:13:14.677
So it did.
I could just crash it if I just

198
00:13:14.677 --> 00:13:16.240
gave it star [LAUGH].

199
00:13:16.240 --> 00:13:19.760
It just deleted my entire page, right.

200
00:13:19.760 --> 00:13:22.401
I don't know, to me this is the payoff for

201
00:13:22.401 --> 00:13:26.409
spending a couple hours with me
grueling through JavaScript.

202
00:13:26.409 --> 00:13:28.260
This is the part where you get to play,
right.

203
00:13:28.260 --> 00:13:31.718
And playing with code I
just think is a lot of fun.

204
00:13:31.718 --> 00:13:36.862
So one thing is definitely in MDN.

205
00:13:36.862 --> 00:13:41.701
Again, References,

206
00:13:41.701 --> 00:13:44.862
Web Developers Guide,
I mean there's a ton of these in here.

207
00:13:49.025 --> 00:13:54.218
There's a ton of stuff in here about HTML,
Elements.

208
00:13:58.876 --> 00:14:02.618
So there's a bunch of methods
built into the DOM, and

209
00:14:02.618 --> 00:14:05.623
we are not even gonna scratch the surface.

210
00:14:05.623 --> 00:14:08.239
There's, I'm sure hundreds, right.

211
00:14:12.527 --> 00:14:16.177
Basically, anything that you're gonna
want to do to the DOM you can definitely

212
00:14:16.177 --> 00:14:17.440
achieve with JavaScript.

213
00:14:19.400 --> 00:14:23.461
So here, I got my x = $0.

214
00:14:23.461 --> 00:14:25.500
So I have this h1 here, right.

215
00:14:27.416 --> 00:14:30.780
I can totally say,

216
00:14:30.780 --> 00:14:36.252
innerHTML = &lt;em&gt;lololol.

217
00:14:41.135 --> 00:14:45.635
And now,
I've actually inserted HTML inside of it.

218
00:14:49.216 --> 00:14:51.794
Right, cuz I changed not
only the text inside of it,

219
00:14:51.794 --> 00:14:54.590
I actually changed the inner
HTML inside of it.

220
00:14:54.590 --> 00:14:57.672
And I put an in there which is,
emphasized.

221
00:14:59.681 --> 00:15:01.295
All sorts of crazy stuff like that.

