WEBVTT

1
00:00:00.610 --> 00:00:02.794
So I wanted to just play around
with this a little bit, so

2
00:00:02.794 --> 00:00:05.660
I have this little CodePen here that
you can go and mess around with.

3
00:00:05.660 --> 00:00:07.697
I'm just gonna open this
directly all the way in CodePen.

4
00:00:13.457 --> 00:00:17.686
We don't need the JavaScript portion,
so you can kind of just hide that and,

5
00:00:17.686 --> 00:00:19.392
let's make this a bit bigger.

6
00:00:23.418 --> 00:00:24.076
Okay.

7
00:00:26.528 --> 00:00:29.815
So let's kind of just go through
this piece by piece a little bit.

8
00:00:29.815 --> 00:00:32.390
By the way CodePen is just like HTML and

9
00:00:32.390 --> 00:00:36.270
CSS that you can edit
directly in the browser.

10
00:00:36.270 --> 00:00:39.321
See you can totally put this into your
project, and it would just work, but

11
00:00:39.321 --> 00:00:41.850
this is just like little snippets
to share with other people.

12
00:00:44.400 --> 00:00:48.593
So I have this h1 here and I have this
h1 selector here, I changed the font, so

13
00:00:48.593 --> 00:00:50.750
this is Helvetica font.

14
00:00:50.750 --> 00:00:55.036
Color red, font size 50,
we can make this 10.

15
00:00:57.341 --> 00:01:02.158
Now it's tiny, right, or
we can make this 75 or

16
00:01:02.158 --> 00:01:06.748
750, that's gonna be enormous, okay, so

17
00:01:06.748 --> 00:01:09.978
now, 75 right now it's huge.

18
00:01:09.978 --> 00:01:11.573
And then I did text-align right, so

19
00:01:11.573 --> 00:01:14.930
notice it's aligning all the way on
the right instead of on the left, right.

20
00:01:14.930 --> 00:01:15.973
So that's what pushed this
all the way over here.

21
00:01:18.538 --> 00:01:22.407
So notice I have this h1 here and
this h1 here, as you might expect,

22
00:01:22.407 --> 00:01:24.764
they're both affected by the same rule.

23
00:01:24.764 --> 00:01:28.951
Because that h1 selector
matches both of them, right.

24
00:01:31.091 --> 00:01:36.498
Okay, we have the h2 here,
this I chose Monaco as the font,

25
00:01:36.498 --> 00:01:43.195
which is a nice monospaced font for
example, your code might be in Monaco.

26
00:01:43.195 --> 00:01:48.267
It's a nice font for coding in,
I made it seagreen, which,

27
00:01:48.267 --> 00:01:52.754
arguably that's not super
seagreeny in my opinion.

28
00:01:52.754 --> 00:01:56.559
But that's what the browser
thinks is seagreen,

29
00:01:56.559 --> 00:02:01.459
smaller font size,
it's got this really thick dotted border.

30
00:02:01.459 --> 00:02:07.387
I mean, gonna make 19 this should
be real thick dots, right, and

31
00:02:07.387 --> 00:02:13.126
we can make them lightgray, Or

32
00:02:15.124 --> 00:02:20.299
We can make them black, and then notice
that this is center aligned, right.

33
00:02:20.299 --> 00:02:23.388
So it takes the entire line and
then its center aligns itself.

34
00:02:27.014 --> 00:02:29.899
Okay, then I had this paragraph down here.

35
00:02:32.398 --> 00:02:36.305
I made it Comic Sans because that's
everyone's favorite font, right,

36
00:02:36.305 --> 00:02:37.446
it's the best font.

37
00:02:40.354 --> 00:02:44.642
So it's Comic Sans, it's 30 pixels,
it's got a black background, and

38
00:02:44.642 --> 00:02:46.600
the color is white, right.

39
00:02:46.600 --> 00:02:49.670
But then we have these yellow things
going on here, what's going with that.

40
00:02:49.670 --> 00:02:52.266
So notice we have spans here, and

41
00:02:52.266 --> 00:02:58.160
then down here underneath that here,
I modify the spans to be yellow.

42
00:02:58.160 --> 00:03:02.381
To be underlined and italic, so
that's when you would wanna use a span.

43
00:03:02.381 --> 00:03:04.878
If you remember talking about
that in the original sections.

44
00:03:04.878 --> 00:03:08.838
If you wanna change the style of
something in the middle of a paragraph,

45
00:03:08.838 --> 00:03:10.824
that's what the span is there for.

46
00:03:12.903 --> 00:03:16.935
So again, a span is like a Ziploc bag,
it's just a generic container for

47
00:03:16.935 --> 00:03:17.672
something.

48
00:03:17.672 --> 00:03:22.270
In this particular case, you could kind
of argue this is emphasized, right.

49
00:03:22.270 --> 00:03:26.919
So the more correct thing to do would have
been to call this an instead of a span.

50
00:03:29.294 --> 00:03:33.143
But, it's kind of just up to you
on how you choose to do something.

51
00:03:35.704 --> 00:03:40.084
Okay So

52
00:03:40.084 --> 00:03:45.431
I have a div here, it says here's an h3.

53
00:03:45.431 --> 00:03:52.050
Notice I don't have h3 styled anywhere
in here, but I do have div color blue.

54
00:03:52.050 --> 00:03:55.552
So notice that div color blue is affecting
the h3 here despite the fact that

55
00:03:55.552 --> 00:03:56.840
there's no h3 selector.

56
00:03:58.050 --> 00:04:01.547
That's because the parent
here can affect the child.

57
00:04:01.547 --> 00:04:03.900
Now, not everything permeates down.

58
00:04:04.930 --> 00:04:10.122
For example, if I say border,
one pixel solid red,

59
00:04:10.122 --> 00:04:13.426
notice that the entire div here,

60
00:04:13.426 --> 00:04:17.800
got a border of one pixel solid red,
right.

61
00:04:18.950 --> 00:04:21.693
But there's not another one inside of it,
right.

62
00:04:21.693 --> 00:04:26.835
So here if I come down and say an h3

63
00:04:26.835 --> 00:04:32.721
border one pixel solid green or blue.

64
00:04:32.721 --> 00:04:37.713
Notice that there's a second
one inside of it, right.

65
00:04:37.713 --> 00:04:40.710
So only some things permeate down,
color being one of them.

66
00:04:43.035 --> 00:04:46.374
And frankly, not many of them do but
color is one of the things,

67
00:04:46.374 --> 00:04:48.583
font will permeate down to the children.

68
00:04:48.583 --> 00:04:50.337
Some of them do, not all of them do.

69
00:04:54.141 --> 00:05:00.443
Okay, more paragraphs here,
and then I got a ul here.

70
00:05:02.166 --> 00:05:09.933
Of list items, so got a list styles you
can just say I want this to be a bullet.

71
00:05:15.369 --> 00:05:17.912
Or what's another one on here,

72
00:05:17.912 --> 00:05:23.050
I can never remember what they are,
but square is one of them.

73
00:05:23.050 --> 00:05:28.240
So you can actually affect what
kind of bullet is shown there.

74
00:05:28.240 --> 00:05:32.235
You can even say list style,
none, it'll take away, so

75
00:05:32.235 --> 00:05:35.242
now notice that there's no bullet there.

76
00:05:38.367 --> 00:05:42.107
Or if you just delete it there's a default
when I think of just a circle, yeah.

77
00:05:46.553 --> 00:05:51.282
You can say list position of inside,
so notice if I say change

78
00:05:51.282 --> 00:05:56.128
this from inside to outside,
I'll actually move it around.

79
00:05:59.027 --> 00:05:59.730
Maybe it won't.

80
00:06:00.790 --> 00:06:04.972
But basically it's like do you want the
positioning of that bullet to be relative

81
00:06:04.972 --> 00:06:06.890
with where the text would have been.

82
00:06:06.890 --> 00:06:08.557
Or do you want me to shift everything in,

83
00:06:08.557 --> 00:06:11.190
so it's inside of where
it would have been.

84
00:06:11.190 --> 00:06:16.290
There's a bunch of positioning
stuff you can do with that.

85
00:06:16.290 --> 00:06:18.540
And they're brown notice
because I did the li is brown.

86
00:06:19.940 --> 00:06:24.740
And then down notice with the ol the
ordered list, I did upper Roman, right, so

87
00:06:24.740 --> 00:06:27.450
now they're Roman characters.

88
00:06:27.450 --> 00:06:31.723
Instead of just the normal numbers or
you can do lower Roman.

89
00:06:34.747 --> 00:06:39.063
Right, you can even just do square,

90
00:06:39.063 --> 00:06:42.689
right, so both of them apply.

91
00:06:42.689 --> 00:06:47.189
If you have an ol and
you still want it to be with bullet points

92
00:06:47.189 --> 00:06:50.343
you can still change it however you want.

93
00:06:50.343 --> 00:06:53.300
It's not that it won't let you change,
it'll let you change whatever you want to.

94
00:06:53.300 --> 00:06:55.600
Is that a good idea?

95
00:06:55.600 --> 00:06:57.816
Probably not,
if you're using an ordered list,

96
00:06:57.816 --> 00:07:00.660
you probably want that some
semblance of order expressed.

97
00:07:00.660 --> 00:07:02.086
But it's totally up to you.

98
00:07:06.791 --> 00:07:10.304
Cool, and then I added a h2 at the end of
the page to show you whatever we change at

99
00:07:10.304 --> 00:07:12.411
the top,
also applied down here at the bottom.

100
00:07:17.483 --> 00:07:22.770
Cool, any questions about anything that
I've shown you with the HTML and CSS.

101
00:07:22.770 --> 00:07:25.385
I just wanted to show you a bunch of
examples of how everything can relate

102
00:07:25.385 --> 00:07:26.700
to each other.

103
00:07:26.700 --> 00:07:29.060
And why we keep HTML
separate from the CSS.

104
00:07:29.060 --> 00:07:33.759
That was another thing that I wanted to
harp on is that, the concerns of HTML.

105
00:07:33.759 --> 00:07:38.160
Which is just content on a page
are different than how you wanna style it,

106
00:07:38.160 --> 00:07:38.674
right.

107
00:07:41.967 --> 00:07:45.048
Technically, you can
inline all of your CSS.

108
00:07:45.048 --> 00:07:49.767
I'm just gonna show you something and
hopefully you'll never do it, but

109
00:07:49.767 --> 00:07:52.291
I can say style equals color pink here.

110
00:07:56.243 --> 00:07:59.420
And that will work, right,
you can inline all of your CSS.

111
00:07:59.420 --> 00:08:01.660
It's an awful idea, though don't.

112
00:08:02.820 --> 00:08:05.209
I'm gonna say right now,
literally never do this.

113
00:08:07.430 --> 00:08:10.733
Because now I've made some one
off unicorn kind of thing that

114
00:08:10.733 --> 00:08:13.141
I can only use in this
one particular place.

115
00:08:13.141 --> 00:08:14.629
Whereas if I put a rule here,

116
00:08:14.629 --> 00:08:18.482
I now have a reusable use rule that I
can use throughout my entire website.

117
00:08:18.482 --> 00:08:21.912
And when your website is
100,000 lines of HTML and

118
00:08:21.912 --> 00:08:25.060
CSS, you wanna have some
reusability to your code.

119
00:08:27.160 --> 00:08:28.700
You separate the content
from the style and

120
00:08:28.700 --> 00:08:30.820
just makes both things easier to maintain.

121
00:08:30.820 --> 00:08:34.184
So, before this section,
we learned how to use CSS rules,

122
00:08:34.184 --> 00:08:36.150
how to affect how your page looks.

123
00:08:38.410 --> 00:08:41.655
I was showing you kind of naive
implementation to this, I'm assuming that.

124
00:08:41.655 --> 00:08:47.870
Every paragraph I have on the page,
has to affect every paragraph right.

125
00:08:47.870 --> 00:08:49.714
What if I have one kind of paragraph here,

126
00:08:49.714 --> 00:08:53.260
and a different kind of paragraph over
here, and I want them to look different.

127
00:08:54.600 --> 00:08:56.400
What if they need to
share some of the styles?

128
00:08:57.620 --> 00:09:01.248
Well, I'm gonna show you how to
select both of them differently, and

129
00:09:01.248 --> 00:09:03.660
how you would do that,
and why you would do it.

130
00:09:03.660 --> 00:09:05.470
And some of the other tips and
tricks on how to do that.

131
00:09:06.560 --> 00:09:10.920
So, for example, what if I wanted to
have a red p here and a blue p here.

132
00:09:10.920 --> 00:09:11.840
How would we do that?

133
00:09:11.840 --> 00:09:15.070
Cuz they're both paragraphs, so
we can't just use the p selector.

134
00:09:17.280 --> 00:09:18.580
So I'll show you that here just a second.

135
00:09:20.350 --> 00:09:24.482
So first of all, we're gonna have to
remember the part on classes that we

136
00:09:24.482 --> 00:09:27.140
talked about in the first
part of this course.

137
00:09:27.140 --> 00:09:29.771
We're gonna reuse that again here, so

138
00:09:29.771 --> 00:09:33.685
that we can style the same types
of tags in different ways.

139
00:09:38.068 --> 00:09:38.978
So for example,

140
00:09:38.978 --> 00:09:43.014
you can imagine here I'd have an h1
with the brand of my particular page.

141
00:09:43.014 --> 00:09:46.593
And maybe I have another
h1 later that says,

142
00:09:46.593 --> 00:09:52.633
blog post title my cool blog post,
how how would I style those differently.

143
00:09:52.633 --> 00:09:54.172
Now the first question
you might ask me is well,

144
00:09:54.172 --> 00:09:55.992
I thought you couldn't have
multiple h1's on a page.

145
00:09:55.992 --> 00:10:00.942
You can, the question is do you want to
and I'm not going to tell you yes or no.

146
00:10:00.942 --> 00:10:04.290
But I'm going to show you how to make them
different and this applies to anything.

147
00:10:04.290 --> 00:10:08.974
So the first one here is I have this h1,
and I give it the class of branding.

148
00:10:10.886 --> 00:10:13.615
And I called it my super cool brand, and

149
00:10:13.615 --> 00:10:17.940
then I have another one over
here called blog-post-title.

150
00:10:17.940 --> 00:10:22.571
And that one's called my cool blog post,
and this one's red and this one's green.

151
00:10:24.675 --> 00:10:28.576
So instead of selecting by h1 here,
which I didn't.

152
00:10:30.965 --> 00:10:37.221
I selected by dot,
that dot is also critical, branding.

153
00:10:39.555 --> 00:10:44.283
So the dot means look for
the class, branding, right,

154
00:10:44.283 --> 00:10:47.650
instead of looking for h1, right.

155
00:10:47.650 --> 00:10:50.022
Which you don't have anything
prefixing it, it'll look for

156
00:10:50.022 --> 00:10:51.030
a literal tag called h1.

157
00:10:52.660 --> 00:10:57.400
It's looking for a class, again,
class here called branding.

158
00:10:59.520 --> 00:11:02.120
So that's what dot branding is.

159
00:11:02.120 --> 00:11:04.728
And now I can select different ones,
right,

160
00:11:04.728 --> 00:11:08.514
class equals branding of my super
cool brand it'll select that.

161
00:11:08.514 --> 00:11:13.946
And .blog-post-title, it'll select
anything called blog-post-title.

162
00:11:13.946 --> 00:11:17.336
Now keep in mind, I don't know,
you might need to do this in the future.

163
00:11:17.336 --> 00:11:23.015
I can have p class equals branding,

164
00:11:23.015 --> 00:11:25.860
other cool text.

165
00:11:25.860 --> 00:11:31.039
Obviously p and h1 are different,
but they both have the class

166
00:11:31.039 --> 00:11:36.624
I can even reuse that across tag types,
right, cuz now this is red.

167
00:11:41.044 --> 00:11:43.764
Just a little note here on class naming,

168
00:11:43.764 --> 00:11:48.090
I told you you can name classes
whatever you want, that stands.

169
00:11:48.090 --> 00:11:54.360
But some personal advice to you, don't
name it red brand or something like that.

170
00:11:56.603 --> 00:12:01.695
Because this is red, you wanna name
things after what they are and

171
00:12:01.695 --> 00:12:03.649
not what they look like.

172
00:12:03.649 --> 00:12:08.195
Just as a general tip, the reason
being is, what happens later when my

173
00:12:08.195 --> 00:12:12.524
company rebrands and all sudden
our branding is now teal, right.

174
00:12:12.524 --> 00:12:18.885
So I come in here and I say teal, so
now the red branding class is color teal.

175
00:12:20.878 --> 00:12:22.984
Really confusing, right, so

176
00:12:22.984 --> 00:12:28.339
you either have to now go refactor in
every single place that use red branding.

177
00:12:28.339 --> 00:12:30.886
Or you just have a red branding
that's teal, and you're

178
00:12:30.886 --> 00:12:34.512
stuck with this really weird cognitive
dissonance that lives in your code base.

179
00:12:34.512 --> 00:12:38.740
Whereas if you just call it branding,
you call it what it's supposed to be,

180
00:12:38.740 --> 00:12:41.180
it's the branding for your website.

181
00:12:41.180 --> 00:12:43.740
You never have any concerns
about what that is.

182
00:12:43.740 --> 00:12:46.790
So that's my advice,
just don't name it what it looks like.

183
00:12:46.790 --> 00:12:49.813
That took me a really long
time to wrap my head around,

184
00:12:49.813 --> 00:12:52.580
but now it's just kind of second nature,
okay.

185
00:12:54.480 --> 00:12:59.191
So that's what the period is, the period
refers to class names, that's fine.

186
00:13:03.010 --> 00:13:05.434
So you might ask me next,

187
00:13:05.434 --> 00:13:11.558
when should I select tags versus
when should I select classes.

188
00:13:11.558 --> 00:13:15.531
My advice to you is 99.99%
of the time classes,

189
00:13:15.531 --> 00:13:21.375
just use classes everywhere, avoid
styling tags directly, almost always.

190
00:13:21.375 --> 00:13:26.131
The only time that I will style
tags directly is if I literally

191
00:13:26.131 --> 00:13:30.061
intend on styling every
tag of that on my webpage.

192
00:13:30.061 --> 00:13:34.250
My intent is literally every single
one of them, which is not frequently.

193
00:13:34.250 --> 00:13:36.886
Normally it's this one looks like this,
this one looks like this,

194
00:13:36.886 --> 00:13:38.890
this one looks like this, right.

195
00:13:38.890 --> 00:13:42.701
But for example, maybe your anchor tags,
you want all of the anchor tags

196
00:13:42.701 --> 00:13:45.530
across your entire website
to look exactly the same.

197
00:13:45.530 --> 00:13:49.030
That would be an acceptable reason
to style just the a tag, right.

198
00:13:50.310 --> 00:13:54.726
So, if you intend on styling everything
the same way, you use the tag,

199
00:13:54.726 --> 00:13:56.760
otherwise, just use classes.

200
00:13:56.760 --> 00:13:58.180
It just makes everything way simpler.

