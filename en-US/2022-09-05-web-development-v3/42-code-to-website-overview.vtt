WEBVTT

1
00:00:00.185 --> 00:00:04.078
So that was all of the JavaScript kind of
grammar, and intros, and things like that.

2
00:00:04.078 --> 00:00:07.371
I wanna start going in and
actually doing front-end programming.

3
00:00:07.371 --> 00:00:09.275
Most of the what we've been doing so

4
00:00:09.275 --> 00:00:11.885
far is just been learning
to program in general.

5
00:00:11.885 --> 00:00:12.920
That could have been JavaScript.

6
00:00:12.920 --> 00:00:13.660
It could have been Python.

7
00:00:13.660 --> 00:00:15.672
It could have been Ruby.

8
00:00:15.672 --> 00:00:18.174
You would've learned more or
less the same thing.

9
00:00:18.174 --> 00:00:21.886
But now we're gonna go do the specific,
interesting functionality of JavaScript,

10
00:00:21.886 --> 00:00:23.441
which is playing with the browser.

11
00:00:27.876 --> 00:00:31.058
So, we've been writing code in a vacuum,
which is to say,

12
00:00:31.058 --> 00:00:34.691
we've basically just been writing
code directly into our browsers

13
00:00:34.691 --> 00:00:37.896
are using my little plugins
that I built in for you, right?

14
00:00:37.896 --> 00:00:40.894
Typically, you don't write
code directly into a website,

15
00:00:40.894 --> 00:00:42.961
you write it into something like VS Code.

16
00:00:42.961 --> 00:00:45.042
And then that VS Code, you save that, and

17
00:00:45.042 --> 00:00:47.424
that gets run on someone's computer,
right?

18
00:00:51.084 --> 00:00:54.577
But I wanna go through just kind of the
life cycle of what happens with code cuz

19
00:00:54.577 --> 00:00:57.708
some people kinda get confused of how
do I get from point A to point B?

20
00:00:57.708 --> 00:01:02.864
How do I get from writing code to
someone seeing it in their browser?

21
00:01:02.864 --> 00:01:05.768
So let's just go through
kinda step by step.

22
00:01:05.768 --> 00:01:08.483
First thing that we're gonna do is
you're gonna write code, right?

23
00:01:08.483 --> 00:01:13.561
You write it in VS Code, Emacs,
Vim, WebStorm, something like that.

24
00:01:13.561 --> 00:01:15.579
You save it.

25
00:01:15.579 --> 00:01:19.019
Then you need to put your
code on a server somewhere.

26
00:01:19.019 --> 00:01:23.253
Somehow there's a trillion ways to do it.

27
00:01:23.253 --> 00:01:27.542
This particular website is
hosted on GitHub, right?

28
00:01:27.542 --> 00:01:31.446
So for you to view this code,
I had to go put it out on GitHub, so

29
00:01:31.446 --> 00:01:33.414
that you could get it, right?

30
00:01:33.414 --> 00:01:36.450
And I had to set some things
up called GitHub pages,

31
00:01:36.450 --> 00:01:39.354
which ends up serving
this particular website.

32
00:01:39.354 --> 00:01:41.136
If you go to frontendmasters.com,

33
00:01:41.136 --> 00:01:43.841
they put all this stuff on
Amazon Web Services, right?

34
00:01:43.841 --> 00:01:48.322
Or if you go to, I don't know, Peloton I
know is hosted on Netlify, right?

35
00:01:48.322 --> 00:01:52.652
There's a bunch of different places
where you can go host your code.

36
00:01:52.652 --> 00:01:53.762
That's up to you.

37
00:01:53.762 --> 00:01:57.854
There's a course by Jem Young on Frontend
Masters that talks about how to get your

38
00:01:57.854 --> 00:02:01.722
stuff up and running on DigitalOcean,
which is a good place to get started.

39
00:02:01.722 --> 00:02:03.147
There's an AWS class.

40
00:02:03.147 --> 00:02:06.171
There's tons of things or ways to do that.

41
00:02:06.171 --> 00:02:07.176
But that's what step 2 is.

42
00:02:07.176 --> 00:02:09.813
It's get it to a place
where someone can see it.

43
00:02:12.171 --> 00:02:16.536
A good example of this one is you can
see this one's doing it with file:///.

44
00:02:16.536 --> 00:02:20.330
You're using your own file
system as your server, right?

45
00:02:20.330 --> 00:02:21.812
So that's kind of the standard here.

46
00:02:21.812 --> 00:02:25.341
If you're doing it locally and
you're using file,

47
00:02:25.341 --> 00:02:29.039
your computer is acting
like it's own server, okay?

48
00:02:31.795 --> 00:02:34.251
So next thing is someone
visits your website.

49
00:02:34.251 --> 00:02:41.250
So someone hits your server with
the right URL or something like that.

50
00:02:41.250 --> 00:02:43.760
A lot of stuff happens in terms
of how the handshake goes.

51
00:02:43.760 --> 00:02:44.800
Like if it's over SSL,

52
00:02:44.800 --> 00:02:48.240
it has to do like a negotiation to make
sure that they speaks the same language.

53
00:02:48.240 --> 00:02:51.246
And then it has to say like,
is this your public key?

54
00:02:51.246 --> 00:02:52.408
Yes, this is my public key.

55
00:02:52.408 --> 00:02:54.767
There's a lot of stuff that goes on there.

56
00:02:54.767 --> 00:02:58.370
But let's just skip past all that stuff.

57
00:02:58.370 --> 00:03:04.046
The request hits your server,
grabs your index to the HTML,

58
00:03:04.046 --> 00:03:08.515
and then returns that back to the user,
right?

59
00:03:08.515 --> 00:03:12.298
If we're talking about this website,
it receives this, right?

60
00:03:12.298 --> 00:03:15.554
The very first thing that
the website gets, sorry,

61
00:03:15.554 --> 00:03:19.637
the person's browser gets after
requesting it from the server.

62
00:03:19.637 --> 00:03:22.166
That's this step.

63
00:03:22.166 --> 00:03:27.734
Your browser is gonna start
going step by step, okay?

64
00:03:27.734 --> 00:03:29.672
This is the kinda DOCTYPE it is.

65
00:03:29.672 --> 00:03:31.252
It's in English.

66
00:03:31.252 --> 00:03:34.048
I'm gonna set the character
set to be UTF-8.

67
00:03:34.048 --> 00:03:36.298
I have something here
that messes with edge.

68
00:03:36.298 --> 00:03:39.986
I'm gonna set this as the variable or
as the viewport.

69
00:03:39.986 --> 00:03:45.788
I'm going to set the title, like the tab
title, to be JS Experiments, okay?

70
00:03:45.788 --> 00:03:47.859
I'm gonna render an h1 that says hello,
and

71
00:03:47.859 --> 00:03:51.362
then it's gonna hit this thing as like,
there's JavaScript to load.

72
00:03:51.362 --> 00:03:54.386
It then opens a request
line back to the server.

73
00:03:54.386 --> 00:03:58.659
It's like hey,
I need this experiments.js file.

74
00:03:58.659 --> 00:04:00.759
Can I have that please?

75
00:04:00.759 --> 00:04:03.548
The servers be like, cool, I got that.

76
00:04:03.548 --> 00:04:08.500
So it'll then send the person back this.

77
00:04:08.500 --> 00:04:09.316
Oops.

78
00:04:12.334 --> 00:04:15.937
Okay, so it'll request this.

79
00:04:15.937 --> 00:04:17.574
It's actually going to pause here.

80
00:04:17.574 --> 00:04:18.730
It's not going to continue.

81
00:04:18.730 --> 00:04:24.826
If there was stuff underneath this,
it would not keep going, okay?

82
00:04:24.826 --> 00:04:28.202
It's then going to say,
okay, I downloaded that.

83
00:04:28.202 --> 00:04:31.274
And then it's going to run all this code,
strangles this,

84
00:04:31.274 --> 00:04:33.676
this does this, and then console.log this.

85
00:04:33.676 --> 00:04:38.152
It'll finish all that,
it's then going to head back here and

86
00:04:38.152 --> 00:04:41.177
it's going to finish out all of the HTML.

87
00:04:41.177 --> 00:04:42.835
And at that point it's done.

88
00:04:42.835 --> 00:04:46.185
So the spinner that you see that your
browser loading will stop spinning because

89
00:04:46.185 --> 00:04:51.520
it has finished loading everything Okay,
this kind of follows.

90
00:04:51.520 --> 00:04:53.656
There's a tab here called the network tab.

91
00:04:55.074 --> 00:05:00.225
If I click all here and I click Refresh,
this actually probably won't show me cuz

92
00:05:00.225 --> 00:05:05.483
I'm on file, but let's look at it here in
this website cuz this has a lot of stuff.

93
00:05:05.483 --> 00:05:08.924
You see all this stuff that are requests.

94
00:05:08.924 --> 00:05:11.492
So it first requests this page the DOM.

95
00:05:15.250 --> 00:05:20.159
And what else is it gonna
request to your latest js.

96
00:05:20.159 --> 00:05:25.248
All this coming from simple analytics.

97
00:05:25.248 --> 00:05:29.208
So I have like a little analytics script
that runs to just tell me how many people

98
00:05:29.208 --> 00:05:30.410
are visiting the site.

99
00:05:30.410 --> 00:05:32.272
It'll do that, right?

100
00:05:32.272 --> 00:05:35.392
Some of you are probably using ad
blockers and so it'll say like 500 there,

101
00:05:35.392 --> 00:05:36.300
something like that.

102
00:05:36.300 --> 00:05:39.887
It'll have blocked that from running
curse you I'm just kidding that's fine

103
00:05:39.887 --> 00:05:40.602
I don't care.

104
00:05:40.602 --> 00:05:45.483
[LAUGH] You can see here,
I have an ad blocker myself on, so

105
00:05:45.483 --> 00:05:47.736
I'm not gonna complain.

106
00:05:47.736 --> 00:05:49.571
It's then going to go get the CSS.

107
00:05:49.571 --> 00:05:54.246
It then gets the clips plug in,
which runs all of the code snippets.

108
00:05:54.246 --> 00:05:56.260
It then grabs some stuff back,
get hooked out.

109
00:05:56.260 --> 00:05:58.918
This is all probably react code here.

110
00:05:58.918 --> 00:06:03.752
Web pack,
this one's the actual page that we're on.

111
00:06:03.752 --> 00:06:08.485
Build manifest, this one will go down to,

112
00:06:08.485 --> 00:06:13.880
this again to the analytics,
which one is this?

113
00:06:13.880 --> 00:06:16.850
This one goes to, this is the clips again.

114
00:06:16.850 --> 00:06:20.173
So this is running more stuff
to do the code execution.

115
00:06:20.173 --> 00:06:21.785
So you can see here,
it starts going into a lot of stuff.

116
00:06:21.785 --> 00:06:24.742
There's a bunch of stuff down
here at the bottom from Twitter.

117
00:06:24.742 --> 00:06:28.209
Cuz if you see down here at
the bottom there's like the words of

118
00:06:28.209 --> 00:06:32.356
encouragement stuff, Twitter loads
a bunch of stuff in the background.

119
00:06:32.356 --> 00:06:35.382
They're probably tracking all of our
information, I don't know probably.

120
00:06:35.382 --> 00:06:41.162
But at the end that's kind of the whole
process of everything that happens, ight?

121
00:06:41.162 --> 00:06:44.191
Good so far?

122
00:06:44.191 --> 00:06:45.910
Same thing happens with CSS too.

123
00:06:45.910 --> 00:06:50.551
If there's like a CSS link in there,
we'll go out there,

124
00:06:50.551 --> 00:06:56.067
load all the CSS, parse it,
execute it and then continue on, okay?

125
00:06:56.067 --> 00:07:00.562
So you after you're done with this course,
if you wanted to deploy this,

126
00:07:00.562 --> 00:07:05.578
you'd have to go to something like Azure,
Amazon web services, Digital Ocean.

127
00:07:05.578 --> 00:07:07.687
I really good one to get
started with this like net,

128
00:07:07.687 --> 00:07:09.954
Le fi that's very friendly
to the two new developers.

129
00:07:09.954 --> 00:07:12.556
So is Digital Ocean.

130
00:07:12.556 --> 00:07:13.861
Kind of up to you.

131
00:07:13.861 --> 00:07:21.486
I tend to use Netlify quite a bit like
I host my wife's website on Netlify.

132
00:07:21.486 --> 00:07:24.595
I say that as someone that used to
literally work on Azure it's just

133
00:07:24.595 --> 00:07:25.326
complicated.

134
00:07:25.326 --> 00:07:28.767
[LAUGH] Big hosting environments
that end up just being complicated.

135
00:07:31.666 --> 00:07:34.839
Yeah, Big hosting environments that
end up just being complicated.

136
00:07:34.839 --> 00:07:38.166
That's just kind of the way it is.

137
00:07:38.166 --> 00:07:39.924
So, this was a point of confusion for

138
00:07:39.924 --> 00:07:43.464
me when I started writing code like
how does my code get to person, right?

139
00:07:43.464 --> 00:07:47.211
I want to take code give person, right?

140
00:07:47.211 --> 00:07:48.514
That's how it works.

