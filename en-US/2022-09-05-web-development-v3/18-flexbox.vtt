WEBVTT

1
00:00:00.140 --> 00:00:05.036
So I say, it's modern, but I mean flex has
to be, in terms of when they standardize,

2
00:00:05.036 --> 00:00:07.216
it has to be a decade old at this point.

3
00:00:07.216 --> 00:00:11.926
Still feels new to me cuz I
started writing in tables, right?

4
00:00:11.926 --> 00:00:15.018
I didn't start before float
was standardized, but

5
00:00:15.018 --> 00:00:17.415
I started before float was everywhere.

6
00:00:20.695 --> 00:00:22.861
I'm just gonna scratch
the surface on this,

7
00:00:22.861 --> 00:00:26.348
Jen Kramer has a whole course that gets
into the depth and nuance of flex.

8
00:00:26.348 --> 00:00:29.408
So if you're really into this and
you really like it,

9
00:00:29.408 --> 00:00:33.964
wanna get further into the spatially
laying out things, I'd suggest going and

10
00:00:33.964 --> 00:00:36.012
taking several of Jen's classes.

11
00:00:36.012 --> 00:00:38.608
And there's a whole CSS learning path
on Frontend Masters that you can

12
00:00:38.608 --> 00:00:39.317
check out as well.

13
00:00:41.554 --> 00:00:45.434
So let's try this instead.

14
00:00:45.434 --> 00:00:47.292
This was really easy to accomplish.

15
00:00:47.292 --> 00:00:49.465
So I had this flex container, so

16
00:00:49.465 --> 00:00:54.631
the thing to know about flex is you're
gonna set flex on the parent, right?

17
00:00:54.631 --> 00:00:59.166
So I had this flex container here, and
if I wanna lay out things inside of that,

18
00:00:59.166 --> 00:01:02.396
like I want these boxes to be
laid out in particular way,

19
00:01:02.396 --> 00:01:05.529
I'm going to set flex on
the parent not the children.

20
00:01:05.529 --> 00:01:07.482
I found that confusing
when I was starting out.

21
00:01:07.482 --> 00:01:09.766
So I had the flex container here, and

22
00:01:09.766 --> 00:01:14.128
noticed that display flex is on
the flex container, not on the boxes.

23
00:01:14.128 --> 00:01:18.588
So you don't actually lay out yourself,
your parent lays you out.

24
00:01:21.403 --> 00:01:27.303
So this is just default display flex
with nothing different about it.

25
00:01:27.303 --> 00:01:30.620
It just lays them out like this
all in a row next to each other.

26
00:01:30.620 --> 00:01:34.461
Same sort of thing, if it runs out
of space, it should just flow.

27
00:01:34.461 --> 00:01:36.227
It will actually doesn't have flow over,

28
00:01:36.227 --> 00:01:38.646
what it does is it actually
squishes things to make it fit.

29
00:01:38.646 --> 00:01:42.817
So notice that these do have
set heights and widths, but

30
00:01:42.817 --> 00:01:46.455
this display flow,
it's gonna be like, well,

31
00:01:46.455 --> 00:01:52.068
I'm running out of space, so all of you
are gonna compress in an equal way.

32
00:01:52.068 --> 00:01:53.785
And that's what happens with flex.

33
00:01:56.686 --> 00:01:58.356
So they don't wrap, they squish.

34
00:02:02.068 --> 00:02:06.537
Now, I'm just gonna show you a bunch of
fun things to do with flex cuz it's really

35
00:02:06.537 --> 00:02:08.992
easy to do and
I find it kinda entertaining.

36
00:02:08.992 --> 00:02:11.172
So notice, this is 1, 2, 3, right?

37
00:02:11.172 --> 00:02:13.329
Same thing here in the code, 1, 2, 3.

38
00:02:13.329 --> 00:02:17.568
But in here, it's laying out 1, 2, 3.

39
00:02:17.568 --> 00:02:21.603
And all I have to do is roll reverse, and
it just reverses everything inside of it.

40
00:02:21.603 --> 00:02:22.401
Just kind of fun.

41
00:02:26.206 --> 00:02:28.885
What happens if you
wanna make it a column?

42
00:02:28.885 --> 00:02:37.407
Same thing, flex-direction column, Okay?

43
00:02:37.407 --> 00:02:41.304
So that's direction,
let's talk about justify-content.

44
00:02:41.304 --> 00:02:44.467
And by the way, column reverse would
work as well, in case you're wondering.

45
00:02:46.549 --> 00:02:47.885
So the 3 is on top.

46
00:02:50.319 --> 00:02:53.095
So if I justify-content right,

47
00:02:53.095 --> 00:02:59.051
notice that before these things were
going left to right here, right?

48
00:02:59.051 --> 00:03:03.341
But if I say, justify-content
to the right or to flex-end or

49
00:03:03.341 --> 00:03:08.386
wherever the end of the container is,
it moves everything to the right.

50
00:03:08.386 --> 00:03:11.428
Why is it called flex-end
instead of right?

51
00:03:11.428 --> 00:03:13.953
Cuz you have to think about this can
also go in the column direction as well.

52
00:03:13.953 --> 00:03:17.535
So it goes to the end of the container
instead of the beginning of the container.

53
00:03:17.535 --> 00:03:22.241
Now, if we did flex-direction column,

54
00:03:25.179 --> 00:03:29.966
This isn't gonna look any different
because the end of the container is

55
00:03:29.966 --> 00:03:31.736
where it stopped anyway.

56
00:03:31.736 --> 00:03:35.527
So I would actually have to give this
a height of a thousand pixels for

57
00:03:35.527 --> 00:03:37.001
us to see the difference.

58
00:03:37.001 --> 00:03:39.767
So now, notice that it's
actually anchored to the bottom.

59
00:03:41.510 --> 00:03:44.475
Whereas if I took this off,
it's anchored to the top.

60
00:03:52.799 --> 00:03:58.102
Right now, the flex-container is
getting as big as the items are.

61
00:03:58.102 --> 00:04:00.891
So it doesn't matter if it's at the
beginning or the end cuz it's the same.

62
00:04:03.785 --> 00:04:10.571
Okay, center, notice that there's space
at the end of this, right, which is nice.

63
00:04:10.571 --> 00:04:16.676
So you can do left center or flex-end.

64
00:04:19.398 --> 00:04:21.996
Right work here, it does work.

65
00:04:21.996 --> 00:04:25.737
But I would say, stick to flex-end
cuz that's a little bit more generic.

66
00:04:31.901 --> 00:04:34.143
I just wanna take a second here and

67
00:04:34.143 --> 00:04:37.277
express how hard it used
to be to center stuff.

68
00:04:37.277 --> 00:04:42.641
It was so hard for so long, and
vertically centering things, which we're

69
00:04:42.641 --> 00:04:47.749
about to show you how to do, used to
just take days out of my life, both in

70
00:04:47.749 --> 00:04:53.056
terms of how much time I spend doing it
and all the stress that it caused me.

71
00:04:53.056 --> 00:04:55.614
With flex, everything just got so
much easier.

72
00:04:57.707 --> 00:05:00.976
Okay, so that's center,
that might be useful to you.

73
00:05:00.976 --> 00:05:04.470
You can also do these fun things,
where you can do space-between,

74
00:05:04.470 --> 00:05:06.441
where it'll equally space them out.

75
00:05:06.441 --> 00:05:09.805
So notice, this goes all the way to
the left, all the way to the right, and

76
00:05:09.805 --> 00:05:11.229
there's equal spacing here.

77
00:05:11.229 --> 00:05:12.624
That's space-between.

78
00:05:14.711 --> 00:05:16.237
Space-around.

79
00:05:16.237 --> 00:05:20.971
So now notice that there's a little bit
of space, and so it'll give you a little

80
00:05:20.971 --> 00:05:24.664
gutter on the beginning in the end
as well as on the beginning.

81
00:05:24.664 --> 00:05:31.574
That's space-around, and
there's one more space-evenly.

82
00:05:31.574 --> 00:05:35.834
So the way that this actually works
with space-around is the beginning and

83
00:05:35.834 --> 00:05:37.939
the end will split a gutter, right?

84
00:05:37.939 --> 00:05:42.371
So this is half of this.

85
00:05:42.371 --> 00:05:47.874
If you do space-evenly,
Now everything beginning and

86
00:05:47.874 --> 00:05:49.721
end will get its own one piece.

87
00:05:51.923 --> 00:05:56.753
I tend to use space-around cuz I think
it's the most aesthetically pleasing, but

88
00:05:56.753 --> 00:05:58.340
that's gonna be up to you.

89
00:05:58.340 --> 00:05:59.449
And it depends what you're doing.

90
00:06:02.283 --> 00:06:05.302
Align-items, this one's
super useful as well.

91
00:06:05.302 --> 00:06:08.547
So let's say I wanna do flex-end.

92
00:06:08.547 --> 00:06:11.167
So this will push everything
vertically down, right?

93
00:06:11.167 --> 00:06:16.117
So now, all the stuff is aligned
on the bottom vertically as

94
00:06:16.117 --> 00:06:20.774
opposed to being aligned at the start,
so fle-start.

95
00:06:24.118 --> 00:06:25.415
So that's helpful.

96
00:06:27.273 --> 00:06:28.517
Center.

97
00:06:28.517 --> 00:06:31.387
So again, this what you're seeing here,

98
00:06:31.387 --> 00:06:36.742
this vertically aligning something in
the middle of something is so hard to do.

99
00:06:36.742 --> 00:06:40.933
And this is just me, like telling you that
I used to hike both up ways in the snow

100
00:06:40.933 --> 00:06:43.853
when I went to school, but
this was used to be so hard.

101
00:06:43.853 --> 00:06:46.090
And I want you to appreciate
how much easier it is now.

102
00:06:46.090 --> 00:06:48.771
Okay, that's all, that's my whole spiel,
I'll stop being an old man.

103
00:06:54.076 --> 00:06:56.775
If you want a good time,
go to Stack Overflow and

104
00:06:56.775 --> 00:07:01.513
just see the decades of human life loss of
people trying to vertically center divs.

105
00:07:07.552 --> 00:07:10.920
Okay, there's also this
fun one called stretch.

106
00:07:10.920 --> 00:07:13.050
So even though these have heights,

107
00:07:13.050 --> 00:07:17.807
if you give it the stretch and you have
to remove the height, that's also true.

108
00:07:17.807 --> 00:07:21.293
Cuz I think if you, Do this,

109
00:07:21.293 --> 00:07:24.348
it'll actually respect the height
first before it does the stretch.

110
00:07:24.348 --> 00:07:26.131
But if you get rid of the height,

111
00:07:26.131 --> 00:07:29.718
then you can actually have it
stretch the height of everything.

112
00:07:29.718 --> 00:07:34.590
So this might be useful if you have
tiles that have text on them, and

113
00:07:34.590 --> 00:07:37.635
you want them all to
be sized the same way,

114
00:07:37.635 --> 00:07:41.814
despite the fact that they
have varying amounts of text.

115
00:07:41.814 --> 00:07:45.037
This stretch can make it really easy to
make all these things the same height no

116
00:07:45.037 --> 00:07:45.639
matter what.

117
00:07:49.771 --> 00:07:51.351
You might wonder what inherit means.

118
00:07:51.351 --> 00:07:57.191
It just means this box-1 might have
some height associated with it.

119
00:07:57.191 --> 00:08:01.735
If I say inherit, it means ignore
what I previously said about it and

120
00:08:01.735 --> 00:08:03.980
just do whatever the default is.

121
00:08:03.980 --> 00:08:06.430
It's basically unsetting a CSS property.

122
00:08:10.729 --> 00:08:15.326
Okay, So

123
00:08:15.326 --> 00:08:19.457
here's another fun one of, like flex-grow.

124
00:08:19.457 --> 00:08:23.802
So let's say I wanna do stuff like
proportional widths in some way.

125
00:08:23.802 --> 00:08:27.671
I have this one that is flex-grow 1,
flex-grow 5.

126
00:08:27.671 --> 00:08:31.333
So this 5 here is 5 times
bigger than this 1, and

127
00:08:31.333 --> 00:08:34.835
this 10 one is 10 times
bigger than this 1.

128
00:08:34.835 --> 00:08:39.198
And it kind of like proportions
out the sizing automatically.

129
00:08:39.198 --> 00:08:44.010
So if I say here, instead of 10,
I put this at 100.

130
00:08:44.010 --> 00:08:47.569
Now, this is substantially
larger than this one, right?

131
00:08:47.569 --> 00:08:52.577
So it just proportions out that sizing for
5.

132
00:08:52.577 --> 00:08:56.397
So now, these will be the same thing,
if I did 5, 5, and 5,

133
00:08:56.397 --> 00:08:58.794
they'd all be taking exactly a third.

134
00:09:01.209 --> 00:09:02.629
Now, why would you do it that way,
I don't know.

135
00:09:02.629 --> 00:09:05.890
But you could,
it also just be the same to just say 1.

136
00:09:10.378 --> 00:09:12.276
That's what flex-grow is.

137
00:09:12.276 --> 00:09:17.373
Notice that the flex grow property
actually goes on the individual

138
00:09:17.373 --> 00:09:22.298
classes themselves and
doesn't go on the grill part of it here.

139
00:09:26.029 --> 00:09:29.770
That's not even valid CSS,
that should be like this.

140
00:09:29.770 --> 00:09:30.272
That's funny.

141
00:09:30.272 --> 00:09:31.185
Good job, Brian.

142
00:09:37.090 --> 00:09:40.205
So notice all these things, I'm not
actually rewriting any of the CSS here.

143
00:09:40.205 --> 00:09:44.534
Actually, let's refresh the page,
cuz I have changed a lot.

144
00:09:44.534 --> 00:09:47.409
Now, I'm just combining all
the classes from the previous one and

145
00:09:47.409 --> 00:09:48.496
not writing any new CSS.

146
00:09:48.496 --> 00:09:54.896
If I do flex-container, ai-center,
reverse, and justify-content,

147
00:09:54.896 --> 00:10:00.997
space-around, it's centering everything,
so it's all centered.

148
00:10:00.997 --> 00:10:06.035
It's reversing as it goes 1,
2, 3 from right to left.

149
00:10:06.035 --> 00:10:08.938
And then it's justifying
the content to space around, so

150
00:10:08.938 --> 00:10:11.733
now there's little gutters
here on the right and left.

151
00:10:15.030 --> 00:10:18.711
So combining all these various different
properties of flex, you can get some

152
00:10:18.711 --> 00:10:22.464
really powerful layouts and get everything
laid out exactly how you expect to.

153
00:10:22.464 --> 00:10:25.483
I use flex constantly.

154
00:10:25.483 --> 00:10:27.947
I abused flex with how much I use it.

155
00:10:27.947 --> 00:10:30.619
Then it makes laying out things just so
nice.

156
00:10:32.815 --> 00:10:37.626
So same thing here, flex-container,

157
00:10:37.626 --> 00:10:41.167
this is going a line items fe.

158
00:10:41.167 --> 00:10:44.072
This is the problem with terrible
classnames, I was being clever.

159
00:10:48.937 --> 00:10:51.616
Flex-end, that's what that stands for.

160
00:10:53.299 --> 00:10:57.318
So it's all going to the right, and
then it's going in a column direction.

161
00:10:57.318 --> 00:10:59.933
So that'll make everything move to
the right, and then it goes in a column.

162
00:11:02.747 --> 00:11:06.033
So hopefully,
you're starting to see, okay,

163
00:11:06.033 --> 00:11:11.096
if I combine this with this other way,
then I can get flex to bend to my will.

164
00:11:15.252 --> 00:11:19.632
So I showed you a subset of
ways that flex can be done.

165
00:11:19.632 --> 00:11:22.321
One, definitely check out Jen's class,
if you're interested in that.

166
00:11:22.321 --> 00:11:24.758
There's a great CSS tricks article on it,

167
00:11:24.758 --> 00:11:27.612
that I think is by far
their most popular article.

168
00:11:27.612 --> 00:11:33.158
I almost always have it open because it
just has everything succinctly described.

169
00:11:33.158 --> 00:11:35.735
So check out that if you
wanna know about that.

170
00:11:35.735 --> 00:11:40.229
We can use flex-wrap to get things on
different lines and different pages and

171
00:11:40.229 --> 00:11:44.674
have multiple lines of flex, there's
a lot of cool stuff you can do with it.

172
00:11:44.674 --> 00:11:51.033
I actually used to use flex to basically
do a grid does before grid was available.

173
00:11:51.033 --> 00:11:54.421
But then grid came out,
that became even easier using grid.

