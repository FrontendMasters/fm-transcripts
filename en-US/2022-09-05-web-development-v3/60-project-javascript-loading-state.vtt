WEBVTT

1
00:00:00.460 --> 00:00:02.308
All right, so
let's go grab the word of the day.

2
00:00:04.140 --> 00:00:08.212
And I'm just gonna do that here directly,
you could write another function to go do

3
00:00:08.212 --> 00:00:11.948
that, I"m not, I'm just gonna do it
right here cuz it's not a lot of work.

4
00:00:11.948 --> 00:00:15.025
Cuz you only request the word of the day
once, right, when the page is loaded.

5
00:00:17.374 --> 00:00:22.635
So const res = await fetch

6
00:00:22.635 --> 00:00:32.683
("https://words.dev-apis.com"),

7
00:00:32.683 --> 00:00:39.625
make sure you get the URL correct.

8
00:00:39.625 --> 00:00:43.000
It's like mailing a letter,
you have to make sure you mail it

9
00:00:43.000 --> 00:00:46.653
to the right address or
it doesn't work, word-of-the-day.

10
00:00:50.163 --> 00:00:51.365
Why res?

11
00:00:51.365 --> 00:00:55.885
This is a common shorthand for
response, it's a response from the API.

12
00:00:57.776 --> 00:01:02.622
And if you're feeling like you wanna have
a fun game here, just put random=1, and

13
00:01:02.622 --> 00:01:05.024
you'll get a new word every single time.

14
00:01:05.024 --> 00:01:08.591
I will warn you, once you create this,
you'll waste a bunch of time playing

15
00:01:08.591 --> 00:01:11.967
the game, it's just always happens
cuz you wanna guess the damn word.

16
00:01:13.326 --> 00:01:15.946
Maybe, I'm just projecting here,
I'm definitely projecting here.

17
00:01:15.946 --> 00:01:19.569
Anyway, we'll stick to
this one cuz I don't wanna

18
00:01:19.569 --> 00:01:23.795
end up playing the game too much,
I'll embarrass myself.

19
00:01:25.523 --> 00:01:30.431
Okay, I'll say const resObj

20
00:01:30.431 --> 00:01:34.554
= await res.json, and

21
00:01:34.554 --> 00:01:41.635
then now I have the word of the day,
right?

22
00:01:41.635 --> 00:01:47.588
So const word =,

23
00:01:52.454 --> 00:01:57.938
Yeah, it'll be resObj.word, right?

24
00:01:57.938 --> 00:02:02.820
Now, I'll show you a fun little trick,
there's a thing called destructuring,

25
00:02:02.820 --> 00:02:04.530
which I do in my answer here.

26
00:02:04.530 --> 00:02:11.137
If I do it like this, This is basically
saying, I know what I'm getting

27
00:02:11.137 --> 00:02:15.862
back from this has a property in it called
word, pull that out and call it word.

28
00:02:15.862 --> 00:02:20.404
I'm gonna leave that off, but
that's where that is in my code.

29
00:02:20.404 --> 00:02:24.177
We're just gonna call this resObj,
for now, and you know what else?

30
00:02:24.177 --> 00:02:27.554
And we're also gonna make this,
too, uppercase,

31
00:02:27.554 --> 00:02:31.719
because the API response is gonna
give you back a lowercase one.

32
00:02:31.719 --> 00:02:34.383
And if you remember,
I'm working 100% in uppercase, so

33
00:02:34.383 --> 00:02:37.572
I'm just gonna make everything sure
everything is always in uppercase.

34
00:02:37.572 --> 00:02:40.981
I now have the word, which is here, so

35
00:02:40.981 --> 00:02:45.256
I'm just gonna say, console.log(word).

36
00:02:45.256 --> 00:02:47.784
So I'll go over here,
refresh, check out this.

37
00:02:49.732 --> 00:02:52.437
And now I have IVORY here, right?

38
00:02:55.028 --> 00:02:58.027
I also have a console log down here for
all the button presses,

39
00:02:58.027 --> 00:03:01.660
which I am going to get rid of,
cuz it's gonna annoy me.

40
00:03:01.660 --> 00:03:02.466
Which is good right?

41
00:03:02.466 --> 00:03:04.663
I am now getting IVORY back from the API.

42
00:03:07.004 --> 00:03:09.628
So, let's use the dev
tools to figure this out,

43
00:03:09.628 --> 00:03:11.878
there's a dev tool here called Network.

44
00:03:11.878 --> 00:03:15.456
Click on that one,
you might have to refresh the page, and

45
00:03:15.456 --> 00:03:18.244
you'll see something that looks like this.

46
00:03:20.896 --> 00:03:23.512
Typically it would show you
all the HTML and CSS and

47
00:03:23.512 --> 00:03:25.509
JavaScript that you got back as well.

48
00:03:25.509 --> 00:03:29.190
Because we're using file here,
the computer won't show it, but

49
00:03:29.190 --> 00:03:33.673
if you're on Google.com, we'd be able
to see, well, let's just look at it.

50
00:03:33.673 --> 00:03:35.777
So here on Google.com, right?

51
00:03:35.777 --> 00:03:37.740
If you come in here to the dev tools,

52
00:03:37.740 --> 00:03:40.432
you can see all the various
different requests.

53
00:03:40.432 --> 00:03:45.235
This is all of the HTML, the CSS,
the JavaScript this page is loading.

54
00:03:45.235 --> 00:03:47.326
You'll see some of these red ones here,

55
00:03:47.326 --> 00:03:50.842
that's actually my ad blocker
blocking a bunch of stuff on Google.

56
00:03:50.842 --> 00:03:57.787
Some of these will be CSS, looks like
none of its CSS, but some of its HTML,

57
00:03:57.787 --> 00:04:03.437
some of it is JavaScript, and
there's one here called XHR.

58
00:04:03.437 --> 00:04:08.273
I forgot what XHR stands for, but
it's all of your AJAX requests.

59
00:04:08.273 --> 00:04:13.356
So, if we go back over to our
Word Masters, you can see it's only

60
00:04:13.356 --> 00:04:18.251
loading one thing, but
specifically if you click on the XHR,

61
00:04:18.251 --> 00:04:21.663
it's loading that word-of-the-day.

62
00:04:21.663 --> 00:04:25.342
If I click on it,
it'll open this little thing down here,

63
00:04:25.342 --> 00:04:29.711
I can see all the things that it
sent back to me, I got a 200, okay.

64
00:04:29.711 --> 00:04:32.888
Most of you are probably familiar
with 404 not found, right?

65
00:04:32.888 --> 00:04:38.168
The meme of whenever you can't
find something it's a 404 error,

66
00:04:38.168 --> 00:04:40.637
that's called an HTTP status.

67
00:04:40.637 --> 00:04:45.213
So you may not know this, but
l a 200 request is everything's okay,

68
00:04:45.213 --> 00:04:46.826
everything went great.

69
00:04:46.826 --> 00:04:51.824
A 301 is a redirect, right,
so it's, hey, you went here,

70
00:04:51.824 --> 00:04:55.079
but you actually need to go here, right?

71
00:04:55.079 --> 00:04:57.906
So for example,
I think if you go to nest.com,

72
00:04:57.906 --> 00:05:00.394
it'll take you to Google.com, right?

73
00:05:00.394 --> 00:05:05.361
That's gonna be done via a redirect,
right, like a 300 or

74
00:05:05.361 --> 00:05:11.968
something like that, cuz Nest bought,
or rather, Google bought Nest, right?

75
00:05:11.968 --> 00:05:16.979
So that's a 300,
a 400 is you messed up, right?

76
00:05:16.979 --> 00:05:19.374
You did something wrong,
so a 403 is forbidden,

77
00:05:19.374 --> 00:05:22.213
meaning you're trying to access
something that you can't.

78
00:05:22.213 --> 00:05:26.121
A 404 is not found.

79
00:05:26.121 --> 00:05:32.116
There's, what is it, a 437 is I'm a
teapot, which is a computer science joke.

80
00:05:32.116 --> 00:05:36.279
Someone made a coffee maker and
the joke was that you make a request to

81
00:05:36.279 --> 00:05:41.041
not the coffee maker but the tea maker and
it'll say, I'm a teapot, right?

82
00:05:41.041 --> 00:05:45.136
And then all the 500s
are the server crashed, right?

83
00:05:45.136 --> 00:05:49.713
Sso if you get a 500, it's like,
hey, our fault, something broke.

84
00:05:49.713 --> 00:05:54.956
Those are all the HTTP statuses,
which is what you'll see here with status.

85
00:05:57.035 --> 00:06:01.969
You'll see all the response headers,
it'll tell you how long the content is.

86
00:06:01.969 --> 00:06:04.126
All sorts of things like that.

87
00:06:04.126 --> 00:06:09.259
But more importantly,
is you wanna look at the response,

88
00:06:09.259 --> 00:06:14.098
this is what the API actually
sent back to you, right?

89
00:06:14.098 --> 00:06:18.391
So I got IVORY and 53 back from the API.

90
00:06:18.391 --> 00:06:22.775
I use this all the time,
which is why I wanted to show you, okay.

91
00:06:25.894 --> 00:06:28.935
So, I now have the word, awesome.

92
00:06:30.759 --> 00:06:36.497
So I think the next thing
that I would do here, Maybe,

93
00:06:36.497 --> 00:06:38.601
we'll do the loading indicator next.

94
00:06:38.601 --> 00:06:41.949
I think that's probably a good idea,
cuz once this is loaded,

95
00:06:41.949 --> 00:06:44.547
then we can stop showing
the loading indicator.

96
00:06:44.547 --> 00:06:48.749
Probably what I would do here is I'd
just make a function that just hides

97
00:06:48.749 --> 00:06:50.723
the loading indicator, right?

98
00:06:50.723 --> 00:06:55.757
So, I'll make another function here,
function setLoading,

99
00:06:55.757 --> 00:07:00.801
something like that,
that's what I called it here in my notes.

100
00:07:00.801 --> 00:07:03.126
It'll take in some true or false.

101
00:07:04.897 --> 00:07:10.520
So you could totally say, if is loading,
add it, if not loading, don't add it.

102
00:07:10.520 --> 00:07:12.621
I'll show you a shorthand for doing that.

103
00:07:12.621 --> 00:07:15.662
If you remember,
I grabbed up here the loading div,

104
00:07:15.662 --> 00:07:17.677
so I already have this available.

105
00:07:17.677 --> 00:07:20.526
And if you remember,
I created the hidden class, right?

106
00:07:20.526 --> 00:07:26.486
So what I'm gonna do here is I'm
gonna say, loadingDiv.classist,

107
00:07:26.486 --> 00:07:30.736
and then there's a function
here called toggle.

108
00:07:30.736 --> 00:07:36.318
So, if I do add('hidden'), right,
even if it's there, it'll add it.

109
00:07:36.318 --> 00:07:41.764
And if I do, I think it's remove,
If it's not there,

110
00:07:41.764 --> 00:07:44.458
it'll always try and remove it.

111
00:07:44.458 --> 00:07:49.610
There's one called toggle, and
then I can give it isLoading.

112
00:07:49.610 --> 00:07:51.449
So if loading is true it'll add it.

113
00:07:51.449 --> 00:07:56.098
If it's loading is false,
then it will remove it.

114
00:07:56.098 --> 00:07:59.480
So it's just I don't have to do an if-then
statement, I can just use toggle.

115
00:08:02.558 --> 00:08:03.863
And now I have this function here.

116
00:08:03.863 --> 00:08:07.614
Rather than having to put this piece
of code everywhere in my code base,

117
00:08:07.614 --> 00:08:11.677
I can just call this setLoading function
with true or false and it'll hide and

118
00:08:11.677 --> 00:08:12.947
show things as needed.

119
00:08:12.947 --> 00:08:17.876
So as soon as I have word here, right,
I can just say, setLoading(false),

120
00:08:17.876 --> 00:08:21.487
right, it's no longer
loading once I have the word.

121
00:08:21.487 --> 00:08:23.327
But I think I have to flip it, right?

122
00:08:23.327 --> 00:08:30.861
If it is loading, show it,
if it's not loading, don't show it, yeah.

123
00:08:30.861 --> 00:08:34.856
So it's actually this exclamation point.

124
00:08:34.856 --> 00:08:36.238
And I think that should work.

125
00:08:36.238 --> 00:08:39.455
Let me just check before I talk,
yeah, there goes.

126
00:08:39.455 --> 00:08:46.793
Okay, so, Yeah,

127
00:08:46.793 --> 00:08:53.142
let's think about the logic here,
cuz I had this flipped around.

128
00:08:53.142 --> 00:08:58.336
If it is loading then we should show,
so it should not have

129
00:08:58.336 --> 00:09:03.808
the hidden, Class, right?

130
00:09:06.032 --> 00:09:09.539
If it is loading, then it's not hidden.

131
00:09:09.539 --> 00:09:12.511
If it isn't loading, it is hidden.

132
00:09:12.511 --> 00:09:18.191
So I had this kind of flipped around,
maybe a better way of doing this,

133
00:09:18.191 --> 00:09:23.217
if you wanted to make this a little
bit more easy to verbalize.

134
00:09:23.217 --> 00:09:27.587
What I could do here is I could
put the visibility:hidden here, so

135
00:09:27.587 --> 00:09:31.892
that by default this is hidden,
and then I could put this as show.

136
00:09:31.892 --> 00:09:34.919
And I could just say, visibility: visible.

137
00:09:36.847 --> 00:09:41.745
And then rather than having this,
I'd have to go back into index.html,

138
00:09:41.745 --> 00:09:44.354
say, okay, by default you show this.

139
00:09:44.354 --> 00:09:49.225
And then down here in Wordy Masters,
rather than having to do this,

140
00:09:51.338 --> 00:09:53.600
Then I can do show.

141
00:09:53.600 --> 00:09:56.182
Kind of flipped the way that
we're thinking about it.

142
00:09:56.182 --> 00:09:58.913
And now this translates to English better,
right?

143
00:10:04.343 --> 00:10:08.503
Did I save everything,
I did, I think, right?

144
00:10:08.503 --> 00:10:12.799
It's just, Very quick to show.

145
00:10:17.668 --> 00:10:26.150
And then now in theory, if I say show,
Did I not save my CSS, maybe?

146
00:10:30.369 --> 00:10:38.319
So what's happening here,
I have these two classes.

147
00:10:38.319 --> 00:10:42.136
If they're both on there one
with visibility: visible and

148
00:10:42.136 --> 00:10:46.883
one with visibility: hidden,
which one of these wins with the cascade?

149
00:10:46.883 --> 00:10:48.324
.info-bar.

150
00:10:51.310 --> 00:10:54.725
So the easy way to deal with that would
just be to move this underneath it.

151
00:10:57.542 --> 00:10:58.907
And now, which one wins?

152
00:10:58.907 --> 00:11:01.918
The one that's lower,
and now it works, okay.

153
00:11:06.288 --> 00:11:10.636
So I hope this just shows you that I
make a ton of mistakes when I'm writing

154
00:11:10.636 --> 00:11:15.150
code and I have to go back and rethink
everything, what it was doing there.

155
00:11:15.150 --> 00:11:19.728
This is about the most simple cascade
thing that can ever happen to you,

156
00:11:19.728 --> 00:11:22.799
still mess it up all the time,
totally normal.

157
00:11:22.799 --> 00:11:27.110
Okay, so now I have a setLoading
function that we can use

158
00:11:27.110 --> 00:11:30.065
wherever we're loading something.

159
00:11:30.065 --> 00:11:34.146
The only other time that we're
gonna be loading something is if

160
00:11:34.146 --> 00:11:38.387
we're making a request to the API of,
hey, is this a valid word?

