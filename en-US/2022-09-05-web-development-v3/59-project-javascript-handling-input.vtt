WEBVTT

1
00:00:00.000 --> 00:00:05.138
I'm gonna go grab that little function
that I told you we were gonna use,

2
00:00:05.138 --> 00:00:06.663
that is letter here.

3
00:00:06.663 --> 00:00:11.245
We're just gonna pop that one down here at
the bottom somewhere, anywhere will do.

4
00:00:19.205 --> 00:00:23.593
And cool, let's go work on addLetter.

5
00:00:23.593 --> 00:00:26.054
I think that's a good
one to work on first.

6
00:00:30.796 --> 00:00:34.925
Write a function here,
we're going to call it addLetter.

7
00:00:34.925 --> 00:00:37.482
And addLetter is gonna take in a letter,
right?

8
00:00:37.482 --> 00:00:42.394
Remember we are passing in the letter
that we got from the key press.

9
00:00:45.594 --> 00:00:49.425
So there's kind of two different
states if we get here, one,

10
00:00:49.425 --> 00:00:54.068
we are already guaranteed that this
letter is a single character, right,

11
00:00:54.068 --> 00:00:56.002
because we checked that here.

12
00:00:56.002 --> 00:00:59.895
If we're in this block,
guaranteed, it's a single letter.

13
00:00:59.895 --> 00:01:03.276
So I don't have to check again if it's
a number, or a letter, or something else,

14
00:01:03.276 --> 00:01:04.362
I already know what it is.

15
00:01:06.975 --> 00:01:09.543
So there's two different behaviors
here that we have to work on.

16
00:01:09.543 --> 00:01:13.810
One of them is if I press F right now,
what do you expect to happen?

17
00:01:15.126 --> 00:01:15.689
It shows up, right?

18
00:01:15.689 --> 00:01:18.871
Well, it will in a second.

19
00:01:18.871 --> 00:01:22.913
But for this one, if I press F right,
well, if I press F right now,

20
00:01:22.913 --> 00:01:24.658
then the F shows up, right?

21
00:01:24.658 --> 00:01:30.285
But if I press A right now,
what do you expect to happen?

22
00:01:30.285 --> 00:01:34.430
The last letter will actually turn into
an A, right, it switches the last letter.

23
00:01:34.430 --> 00:01:36.310
So we have to be able to
handle that case as well.

24
00:01:40.329 --> 00:01:46.219
So if, We have to have some sort

25
00:01:46.219 --> 00:01:51.416
of buffer that we're keeping track of,
and here, I just called it currentGuess.

26
00:01:51.416 --> 00:01:54.411
So I'm gonna call it currentGuess, and

27
00:01:54.411 --> 00:01:58.913
this is going to be equal to
an empty string to start out with.

28
00:01:58.913 --> 00:02:06.230
And we're gonna say if
(currentGuess.length) is less than,

29
00:02:06.230 --> 00:02:11.292
and I could say 5 here
cuz that's what it is.

30
00:02:11.292 --> 00:02:12.795
We call these magic numbers,

31
00:02:12.795 --> 00:02:16.832
because it's just a random number that
you threw in there, like, why is it 5?

32
00:02:16.832 --> 00:02:19.614
What is 5?

33
00:02:19.614 --> 00:02:24.546
Sounds like a stoner question,
like what even is 5, right?

34
00:02:24.546 --> 00:02:26.153
No, it's the ANSWER_LENGTH, right?

35
00:02:26.153 --> 00:02:29.002
It's the max and ANSWER_LENGTH.

36
00:02:29.002 --> 00:02:35.028
So I'm gonna create a variable
up here called ANSWER_LENGTH.

37
00:02:35.028 --> 00:02:40.275
And I'm gonna set that to this, and
then I'm gonna copy and paste that here.

38
00:02:40.275 --> 00:02:41.815
Now, you can read this, right?

39
00:02:41.815 --> 00:02:43.453
Now, it's not magical anymore.

40
00:02:43.453 --> 00:02:46.844
You know exactly what it's asking,
it's like,

41
00:02:46.844 --> 00:02:50.244
have I reached my maximum ANSWER_LENGTH or
not?

42
00:02:50.244 --> 00:02:55.208
Now, you might ask me, why is this
in what we call screaming case,

43
00:02:55.208 --> 00:02:56.901
all capital letters?

44
00:02:56.901 --> 00:03:00.014
It's meant to be,
this doesn't change, right?

45
00:03:00.014 --> 00:03:02.401
This is a constant.

46
00:03:02.401 --> 00:03:05.637
So ANSWER_LENGTH doesn't change over time,
it's always 5, right?

47
00:03:05.637 --> 00:03:08.309
It just represents something
that never changes.

48
00:03:11.324 --> 00:03:16.631
Okay, so if I have space to give, then I'm
just gonna attach it on the end, right?

49
00:03:16.631 --> 00:03:21.665
So I'm gonna say currentGuess += letter,

50
00:03:25.871 --> 00:03:29.718
Right, we're just tacking that
on to the end of currentGuess.

51
00:03:29.718 --> 00:03:34.544
Otherwise, what we're gonna do is we're
gonna have to take that substring.

52
00:03:34.544 --> 00:03:37.369
Do you remember that substring
function that we worked on?

53
00:03:37.369 --> 00:03:43.529
We're gonna say, current, Guess,

54
00:03:51.324 --> 00:03:54.331
Interesting, okay,

55
00:03:54.331 --> 00:03:59.877
is assigned currentGuess.substring.

56
00:04:03.180 --> 00:04:07.646
And we're gonna say, take from 0.

57
00:04:07.646 --> 00:04:11.632
And then we're gonna go
from 1 from the end, so

58
00:04:11.632 --> 00:04:16.425
you're gonna say currentGuess.length -1,
right.

59
00:04:16.425 --> 00:04:23.692
So one from the end, And then we're
just gonna add letter to that, right?

60
00:04:23.692 --> 00:04:27.662
So what this is gonna do, this is
going to lop off the last letter, and

61
00:04:27.662 --> 00:04:30.071
then we're gonna add letter on instead.

62
00:04:30.071 --> 00:04:32.405
So it just does a little
replace really quick.

63
00:04:46.096 --> 00:04:53.050
Okay, and then now what we gonna
do with whatever we just updated,

64
00:04:53.050 --> 00:04:58.278
we're going to write that out to the DOM,
right?

65
00:04:58.278 --> 00:05:01.049
So I have to be able to put
the letters here into this.

66
00:05:01.049 --> 00:05:04.425
So I'm keeping track of what
the word is with currentGuess, but

67
00:05:04.425 --> 00:05:08.562
I also need to write it out here so that
the user can see what we're trying to do.

68
00:05:09.962 --> 00:05:11.496
So I have letters.

69
00:05:15.087 --> 00:05:18.411
And let's just do the first row, and then
we'll worry about the subsequent rows.

70
00:05:20.261 --> 00:05:24.903
We're gonna do currentGuess.length.

71
00:05:27.320 --> 00:05:32.443
Then if you remember, if I have a string

72
00:05:32.443 --> 00:05:38.359
that is five characters long, what's the?

73
00:05:38.359 --> 00:05:43.574
So, if I say, well,
let's just do an example.

74
00:05:43.574 --> 00:05:50.586
Const string =, I don't know, BRIAN.

75
00:05:50.586 --> 00:05:55.471
If I say string.length,
what does that equal to?

76
00:05:57.745 --> 00:06:02.506
5, right, it's 5 long.

77
00:06:02.506 --> 00:06:05.313
Strings are, you can also get
the character at them, right?

78
00:06:05.313 --> 00:06:09.813
So if I say charAt,
which would just give me the character,

79
00:06:09.813 --> 00:06:14.407
if I say charAt(0),
what's the 0 with character here?

80
00:06:14.407 --> 00:06:18.057
B, right, cuz everything
starts from 0 in programming.

81
00:06:18.057 --> 00:06:22.252
If I say string.charAt(4),

82
00:06:22.252 --> 00:06:29.156
that's the last one,
right, cuz it's length -1.

83
00:06:29.156 --> 00:06:35.019
So my point being here is we have to
do length -1, To get that last one.

84
00:06:37.126 --> 00:06:42.678
Okay, that'll give me whatever
square I'm trying to look at here.

85
00:06:42.678 --> 00:06:50.272
And I'm gonna say, length, I'm sorry,
not length, .innerText is assigned letter.

86
00:06:56.636 --> 00:06:58.626
All right, we can get rid of that stuff.

87
00:07:03.635 --> 00:07:05.273
All right, so now, let's try and see.

88
00:07:08.252 --> 00:07:09.583
Current, and I say const here.

89
00:07:09.583 --> 00:07:13.246
You have to say let, cuz I'm
reassigning this over and over again.

90
00:07:13.246 --> 00:07:17.795
If you try and do const there,
it'll break, force a habit.

91
00:07:26.286 --> 00:07:29.726
So there you go, very cool, right?

92
00:07:29.726 --> 00:07:31.335
So now, we can type into it.

93
00:07:37.815 --> 00:07:40.281
Enter doesn't work,
backspace doesn't work.

94
00:07:40.281 --> 00:07:43.557
But as long as we're on a fresh new thing,

95
00:07:43.557 --> 00:07:47.128
we can say that, right,
and that all works.

96
00:07:48.558 --> 00:07:53.404
And it even works for
you trying to overwrite the last thing.

97
00:07:53.404 --> 00:07:57.543
So good so far,
any questions on addLetter?

98
00:08:07.786 --> 00:08:11.719
So if this is confusing to you,
and you're like,

99
00:08:11.719 --> 00:08:16.683
I couldn't read that letter,
I'll just go leave comments for

100
00:08:16.683 --> 00:08:21.289
myself, add letter to the end,
replace the last letter.

101
00:08:21.289 --> 00:08:24.987
Like this one, this is a little murky
if I was trying to combat this as like,

102
00:08:24.987 --> 00:08:27.064
the hell was Brian trying to do with this?

103
00:08:27.064 --> 00:08:30.555
So this is actually somewhere where
I might leave myself a comment for

104
00:08:30.555 --> 00:08:34.058
future Brians like, hey,
this line here replaces the last letter.

105
00:08:34.058 --> 00:08:37.192
Comments are super valuable,
just get in a good habit of like, hey,

106
00:08:37.192 --> 00:08:40.127
this is kind of unclear,
I'm gonna leave a comment for myself.

107
00:08:45.106 --> 00:08:54.873
Okay, So,

108
00:08:57.507 --> 00:09:01.355
Let's do backspace.

109
00:09:04.033 --> 00:09:08.590
No, actually, let's go ahead and
do, what happens if they hit Enter?

110
00:09:08.590 --> 00:09:10.300
So we're gonna do commit next.

111
00:09:18.759 --> 00:09:21.405
I'm gonna make this an async function.

112
00:09:21.405 --> 00:09:24.850
I know later, this is gonna be
asynchronous cuz we have to go and

113
00:09:24.850 --> 00:09:27.452
request it, like, hey,
is this a valid word?

114
00:09:27.452 --> 00:09:32.153
For now, it's just gonna be sync,
but it doesn't really matter.

115
00:09:32.153 --> 00:09:34.037
You can do that later if you want to.

116
00:09:37.051 --> 00:09:41.933
So if I type here B-R-I,
and then I hit Enter,

117
00:09:41.933 --> 00:09:45.119
what would you expect it to do?

118
00:09:47.968 --> 00:09:49.719
Nothing, right,
it doesn't have a valid guess.

119
00:09:49.719 --> 00:09:52.192
They don't have everything entered.

120
00:09:52.192 --> 00:09:53.988
So I would just do nothing.

121
00:09:53.988 --> 00:09:59.649
So if currentGuess.length is not equal

122
00:09:59.649 --> 00:10:05.148
to ANSWER_LENGTH, then do nothing.

123
00:10:05.148 --> 00:10:08.861
And then return, right,
cuz we don't wanna do anything else here.

124
00:10:12.871 --> 00:10:16.048
This is a condition where you're like,
hey, they tried to hit Enter, but

125
00:10:16.048 --> 00:10:19.088
they're not ready for it yet, so
I'm just gonna do nothing in return.

126
00:10:31.663 --> 00:10:39.922
Okay, So

127
00:10:39.922 --> 00:10:41.937
this is where we'd go and try and

128
00:10:41.937 --> 00:10:45.158
check if they were correct
with the word of the day.

129
00:10:45.158 --> 00:10:47.402
We'll get to that eventually.

130
00:10:47.402 --> 00:10:51.688
But for now, if they are at the end and
let's assume that we validated their word,

131
00:10:51.688 --> 00:10:54.570
we're gonna help them move
on to the next row, right?

132
00:10:54.570 --> 00:10:58.792
So if I have B-R-I-A-N and they hit Enter,
here we would check, right, and

133
00:10:58.792 --> 00:11:01.832
then make sure we would do
all the correct highlighting.

134
00:11:01.832 --> 00:11:03.150
We'll do that in a little bit.

135
00:11:03.150 --> 00:11:06.030
We have to get the word of the day
first before we can do that.

136
00:11:06.030 --> 00:11:09.242
But right now,
I just want them to go to the next row,

137
00:11:09.242 --> 00:11:11.584
cuz I wanna be able to type all of that.

138
00:11:11.584 --> 00:11:15.518
So const,
we're gonna have another thing up here,

139
00:11:18.980 --> 00:11:21.153
Where we're gonna keep track
of what row they're on.

140
00:11:21.153 --> 00:11:25.698
So let currentRow, and
they're gonna to start on row 0.

141
00:11:25.698 --> 00:11:29.162
And then as soon as they're done with
row 0, they're gonna go down to row 1,

142
00:11:29.162 --> 00:11:32.591
then row 2, then row 3, then row 4,
then row 5, and then they're done.

143
00:11:34.608 --> 00:11:42.495
Okay, so we're gonna say currentRow++,
increase it by one.

144
00:11:42.495 --> 00:11:47.076
And then we're gonna set
their currentGuess to be,

145
00:11:47.076 --> 00:11:51.981
again, it's a new row, so
their guess is so far blank.

146
00:11:58.064 --> 00:12:03.255
Okay, But now, this kinda broke

147
00:12:03.255 --> 00:12:08.120
our addLetter function specifically here,
right?

148
00:12:08.120 --> 00:12:12.755
Cuz we're no longer writing on this line,
we have to start writing on this line.

149
00:12:12.755 --> 00:12:15.457
So how do we do that?

150
00:12:15.457 --> 00:12:18.451
How do we find the correct box there?

151
00:12:18.451 --> 00:12:22.117
Well, we just have to add,
for the second row, right,

152
00:12:22.117 --> 00:12:27.343
if we were just going to try and write on
the second row, if we just did 5+ here,

153
00:12:27.343 --> 00:12:31.345
or let's say ANSWER_LENGTH +,
and I go here and refresh.

154
00:12:31.345 --> 00:12:34.774
If I start typing right now,
where is it gonna write?

155
00:12:34.774 --> 00:12:37.077
It's gonna start writing on that one,
okay?

156
00:12:37.077 --> 00:12:41.914
Cool, or what if I do times 2?

157
00:12:43.520 --> 00:12:45.717
Third row, right?

158
00:12:45.717 --> 00:12:50.530
So it's just gonna be the current
ANSWER_LENGTH x currentGuess, sorry,

159
00:12:50.530 --> 00:12:51.820
currentRow rather.

160
00:12:56.488 --> 00:12:58.706
So if I refresh this and I say BRIAN,

161
00:13:07.276 --> 00:13:11.147
Right, and now as I'm able to go down
row by row and type in each one of them,

162
00:13:11.147 --> 00:13:15.094
just by doing a little bit of math to
make sure to that I'm on the correct row.

163
00:13:18.173 --> 00:13:22.868
Again, no validation's going on here,
but kinda incrementally breaking this

164
00:13:22.868 --> 00:13:27.782
down into smaller and smaller problems and
building this up into overall solution.

165
00:13:30.137 --> 00:13:31.724
Questions so far?

166
00:13:45.200 --> 00:13:47.106
Okay, cool.

167
00:13:51.194 --> 00:13:54.602
Let's do Backspace.

168
00:13:54.602 --> 00:13:57.210
Yeah, let's do backspace,
that one should be pretty quick.

169
00:14:00.661 --> 00:14:03.672
So we are not done,
obviously not done with commit, right,

170
00:14:03.672 --> 00:14:05.692
we have to do a bunch of stuff in between.

171
00:14:05.692 --> 00:14:10.156
So we'd have to validate the word,
make sure that it's an actual word.

172
00:14:10.156 --> 00:14:13.298
And then underneath that,

173
00:14:13.298 --> 00:14:17.949
we have to do all the marking as correct,

174
00:14:20.462 --> 00:14:26.689
Close, or wrong, right, like making
things green, or yellow, or gray.

175
00:14:28.477 --> 00:14:35.058
And then we also have to do,
did they win or lose, right?

176
00:14:35.058 --> 00:14:37.380
That all has to happen here every
time that they hit Commit, right?

177
00:14:37.380 --> 00:14:44.490
So if they guess the word right, the
game's over, you make the game win, right?

178
00:14:44.490 --> 00:14:47.333
So this is something that I'll do as well.

179
00:14:47.333 --> 00:14:50.349
And actually,
I usually mark these with TODO, and so

180
00:14:50.349 --> 00:14:53.174
you'll find that's a really
common thing to do.

181
00:14:53.174 --> 00:14:56.428
It's basically like you're
leaving your cell future TODOs.

182
00:14:56.428 --> 00:15:01.469
The reason why I do specifically with this
weird formatting is I can search my entire

183
00:15:01.469 --> 00:15:06.665
codebase for TODOs, and then it'll show me
all the stuff that I forgot to do, right?

184
00:15:06.665 --> 00:15:08.341
So that's just a little helpful tip.

185
00:15:11.656 --> 00:15:15.381
But now later, let's say I'm working
on this over the span of a week,

186
00:15:15.381 --> 00:15:17.843
I can now come back a week later and
say, okay,

187
00:15:17.843 --> 00:15:21.211
here's all the thing that past
Brian knew that he needed to do.

188
00:15:21.211 --> 00:15:24.807
So I just context-dump into comments,
so that later,

189
00:15:24.807 --> 00:15:27.440
I can come back and check them out.

190
00:15:27.440 --> 00:15:31.713
So now, I can go work on backspace and
know that I'm not gonna lose

191
00:15:31.713 --> 00:15:34.993
all the contexts that I
have in my brain right now.

192
00:15:34.993 --> 00:15:38.998
Okay, function, backspace.

193
00:15:42.114 --> 00:15:48.468
So I'm gonna say CurrentGuess,
We're basically just gonna do this,

194
00:15:48.468 --> 00:15:53.143
right, except not add a letter at the end,
literally just copy and paste it.

195
00:15:55.383 --> 00:15:59.094
Right, we're taking one off the end.

196
00:16:06.853 --> 00:16:09.062
So what happens if currentGuess
is an empty string, right?

197
00:16:09.062 --> 00:16:12.970
What happens if I
immediately hit Backspace?

198
00:16:12.970 --> 00:16:14.165
Nothing happens.

199
00:16:14.165 --> 00:16:17.123
If you try and
take a substring of an empty string,

200
00:16:17.123 --> 00:16:19.312
still just an empty string, right?

201
00:16:19.312 --> 00:16:22.864
So I could check to say,
does currentLength, or sorry,

202
00:16:22.864 --> 00:16:25.160
does currentGuess have any length?

203
00:16:25.160 --> 00:16:27.218
But it's pointless,
because no matter what,

204
00:16:27.218 --> 00:16:28.973
this will still return an empty string.

205
00:16:28.973 --> 00:16:31.569
So I don't have to be super
defensive about that.

206
00:16:34.349 --> 00:16:39.255
Okay, and then all I have to
do here is I say letters.

207
00:16:39.255 --> 00:16:43.706
Kinda mimicking this,
we can even go as far as to copy and

208
00:16:43.706 --> 00:16:49.883
paste most of this as well and just
modify it, except the only difference is,

209
00:16:53.034 --> 00:16:56.698
It's not gonna be -1, right, cuz we're
gonna take the last thing off of it.

210
00:16:58.781 --> 00:17:02.464
So we do the -1 here, right,

211
00:17:02.464 --> 00:17:07.580
because we're trying to get the last one.

212
00:17:07.580 --> 00:17:13.655
Whereas this one, we actually wanna go
one past that once we delete something,

213
00:17:13.655 --> 00:17:18.562
and we're going to set that to
be equal to empty string, right?

214
00:17:18.562 --> 00:17:23.351
So if I refresh this B-R-I-A-N,
and I hit Backspace,

215
00:17:23.351 --> 00:17:27.081
you just wanna wipe out the last one,
right?

216
00:17:27.081 --> 00:17:31.399
So that's why you take out that -1,
is cuz it's one past that one.

217
00:17:35.459 --> 00:17:38.857
And then there you go.

218
00:17:38.857 --> 00:17:41.071
And now, we have fully
functioning backspace as well.

219
00:17:44.003 --> 00:17:46.072
So that's cool,
that one was pretty fast, right?

220
00:17:54.434 --> 00:17:58.520
Okay, now what's really great
about our approach now is all of

221
00:17:58.520 --> 00:18:01.538
the typing portions of this are done,
right?

222
00:18:01.538 --> 00:18:05.183
All of the adding new letters,
taking away letters,

223
00:18:05.183 --> 00:18:10.217
moving to the next line, 100% finished,
feel pretty good about it.

224
00:18:10.217 --> 00:18:12.533
Now, we can actually work on
the game part of it, right?

225
00:18:12.533 --> 00:18:15.717
So we can go find out what
the word of the day is,

226
00:18:15.717 --> 00:18:19.983
we can find out if it's a valid word,
we can do all that stuff.

227
00:18:19.983 --> 00:18:22.969
But this is how I chose to break down
the problem in my brain, which is,

228
00:18:22.969 --> 00:18:26.211
I'm gonna worry about all the user
interaction first, and then I'll worry

229
00:18:26.211 --> 00:18:29.330
about talking to the backend and
all the validation and stuff like that.

230
00:18:31.526 --> 00:18:34.211
Works for me, it doesn't
necessarily have to work for you.

231
00:18:37.018 --> 00:18:41.787
It's all just kind of stream
of consciousness anyway.

232
00:18:41.787 --> 00:18:45.396
In general, I just suggest you
follow what occurs to you, right?

233
00:18:45.396 --> 00:18:47.416
If you wanna work on this thing next,

234
00:18:47.416 --> 00:18:52.058
you don't have to necessarily hold back
on that, it's just however you work best.

