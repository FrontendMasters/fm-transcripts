WEBVTT

1
00:00:00.000 --> 00:00:06.543
Let's talk about events and
listeners for that matter.

2
00:00:06.543 --> 00:00:09.139
So think about designing a website.

3
00:00:09.139 --> 00:00:11.581
Not everything happens immediately, right?

4
00:00:11.581 --> 00:00:14.443
A user is going to land on your page.

5
00:00:14.443 --> 00:00:16.106
They're gonna start reading things.

6
00:00:16.106 --> 00:00:19.807
And they're gonna make
a decision to do something.

7
00:00:19.807 --> 00:00:23.299
As the developer, you have to wait for
the user to look at your website and

8
00:00:23.299 --> 00:00:25.204
then make a decision and do something.

9
00:00:25.204 --> 00:00:27.028
So you have to be reactive, right?

10
00:00:27.028 --> 00:00:29.768
You have to wait.

11
00:00:29.768 --> 00:00:34.046
Everything that I've shown you so
far is what we say synchronous, right?

12
00:00:34.046 --> 00:00:36.662
A user loads the page and
it immediately runs all this code, right?

13
00:00:36.662 --> 00:00:41.612
Remember that one that we did, where we
repeated that string immediately, right?

14
00:00:41.612 --> 00:00:44.256
Not all coding is like that,
much of it isn't, right?

15
00:00:44.256 --> 00:00:48.301
Particularly JavaScript, it's a lot
about waiting for something to happen.

16
00:00:48.301 --> 00:00:51.968
Enter events, that's what events are for.

17
00:00:51.968 --> 00:00:54.831
So imagine,
I have this Click me button here.

18
00:00:54.831 --> 00:00:59.448
I'm waiting for the user to figure out
that I want them to click this button.

19
00:00:59.448 --> 00:01:01.012
This page has been loaded for
how long, right?

20
00:01:01.012 --> 00:01:02.954
It's been loaded for a couple minutes.

21
00:01:02.954 --> 00:01:08.228
So if I click this, I get a nice
little alert that says, Hey there!

22
00:01:08.228 --> 00:01:09.342
How did I do that?

23
00:01:09.342 --> 00:01:11.712
How did I wait for something to happen?

24
00:01:11.712 --> 00:01:14.240
Well, let's take a look.

25
00:01:14.240 --> 00:01:17.150
First thing, I'm gonna give
you a live little note here.

26
00:01:17.150 --> 00:01:22.042
You can attach multiple of event
listeners to a single DOM node, right?

27
00:01:22.042 --> 00:01:26.841
So if I modify this, it's not going
to replace this event listener,

28
00:01:26.841 --> 00:01:28.592
it's going to add to it.

29
00:01:28.592 --> 00:01:32.670
So if I put a question mark here,
this is now run again, right?

30
00:01:32.670 --> 00:01:35.759
Because it runs every time that I type.

31
00:01:35.759 --> 00:01:37.675
It's gonna do this twice, right?

32
00:01:37.675 --> 00:01:42.767
So I just wanted people to be aware,
if they do this, right?

33
00:01:42.767 --> 00:01:48.195
I've now added a lot of events
listeners to this, right?

34
00:01:48.195 --> 00:01:52.576
Just be aware of that,
weirds some people out.

35
00:01:52.576 --> 00:01:56.017
And just to clear it,
just refresh the page.

36
00:01:56.017 --> 00:01:59.900
Okay, so first thing, I grabbed my button.

37
00:01:59.900 --> 00:02:01.132
So I have the Event button.

38
00:02:01.132 --> 00:02:04.113
So I grabbed it here with querySelector.

39
00:02:04.113 --> 00:02:10.844
Then I say, button.addEventListener,
and I am listening for what?

40
00:02:10.844 --> 00:02:12.169
Clicks, right?

41
00:02:12.169 --> 00:02:15.264
A mouse click.

42
00:02:15.264 --> 00:02:18.474
Technically, I think a touch would count
for this most of the time as well.

43
00:02:18.474 --> 00:02:22.751
But you can actually listen
to touch start and touch end,

44
00:02:22.751 --> 00:02:25.968
right, specifically for mobile phones.

45
00:02:25.968 --> 00:02:31.962
And then you say,
whenever a click happens, do this, Right?

46
00:02:31.962 --> 00:02:34.091
So I'm just using the alert, right?

47
00:02:34.091 --> 00:02:36.587
Alert is the most annoying
thing in the possible world.

48
00:02:36.587 --> 00:02:41.956
I don't think anyone's happy when
they see one of these, right?

49
00:02:41.956 --> 00:02:44.128
So don't do that, people hate it.

50
00:02:44.128 --> 00:02:46.635
Let me tell you as someone that's
been a developer for a long time.

51
00:02:46.635 --> 00:02:48.691
People hate when you do this to them, but

52
00:02:48.691 --> 00:02:52.336
it's also a really easy way to
demonstrate to you reactivity, right?

53
00:02:52.336 --> 00:02:58.824
But you could totally say,
console.log('lol') or

54
00:02:58.824 --> 00:03:02.346
something like that, right?

55
00:03:02.346 --> 00:03:07.168
And you can see all the various different
permutations of that going on here.

56
00:03:10.173 --> 00:03:17.675
But yeah, so
that is the most basic event listener.

57
00:03:17.675 --> 00:03:19.510
There's so many events you can listen for.

58
00:03:19.510 --> 00:03:21.067
There's keyup, there's keydown.

59
00:03:21.067 --> 00:03:25.539
If someone presses something on
the keyboard, there's keypress.

60
00:03:25.539 --> 00:03:30.018
I think we've talked about touch start,
there's touch end.

61
00:03:30.018 --> 00:03:34.329
There is paste, there's cut,
there is right click.

62
00:03:34.329 --> 00:03:41.123
There's so
many different kinds of events, Okay?

63
00:03:41.123 --> 00:03:46.479
This function here, we call it a callback,
cuz basically you're saying,

64
00:03:46.479 --> 00:03:50.260
hey, whenever this happens,
call me back, right?

65
00:03:50.260 --> 00:03:53.002
This function only gets run
whenever this event happens.

66
00:03:58.233 --> 00:04:01.093
Yes, people often get confused,
this looks really weird, Brian.

67
00:04:01.093 --> 00:04:04.999
What is this?
Why is there so much stuff going on here?

68
00:04:04.999 --> 00:04:06.271
Just think about it.

69
00:04:06.271 --> 00:04:10.380
This needs to be closed, right?

70
00:04:10.380 --> 00:04:13.755
You can see they're highlighted
in green at the moment, right?

71
00:04:13.755 --> 00:04:18.568
So this, the first one refers to this one.

72
00:04:18.568 --> 00:04:22.061
And then this one refers to this one.

73
00:04:22.061 --> 00:04:26.430
So it's just closing everything
that was opened, okay?

74
00:04:32.186 --> 00:04:34.401
Yeah, so alert comes from the DOM.

75
00:04:34.401 --> 00:04:38.692
Technically, it's window.alert, right?

76
00:04:40.648 --> 00:04:44.189
Okay, so let's do another one here.

77
00:04:44.189 --> 00:04:46.755
I had this input here.

78
00:04:46.755 --> 00:04:50.451
And right now, underneath it,
it says, nothing has happened.

79
00:04:50.451 --> 00:04:57.574
Here, I'm listening to input-to-copy,
which is this input, right?

80
00:04:57.574 --> 00:05:02.670
And then I have this paragraph here,
which is this one here, p-to-copy-to.

81
00:05:02.670 --> 00:05:04.413
And add an event listener for keyup.

82
00:05:04.413 --> 00:05:08.355
So whenever someone hits the key and
then comes back up.

83
00:05:08.355 --> 00:05:13.390
You can also do keydown,
that's another button press, right?

84
00:05:13.390 --> 00:05:18.386
Then I'm gonna set the paragraph's
innerText to input.value.

85
00:05:18.386 --> 00:05:22.184
So if I type the letter F here,
what do you expect to happen?

86
00:05:25.226 --> 00:05:29.576
I expect nothing has happened yet

87
00:05:29.576 --> 00:05:39.240
to change to F, Right?

88
00:05:47.669 --> 00:05:49.829
There you go.

89
00:05:49.829 --> 00:05:52.322
This allows you to kinda have these
interactive elements to your website.

90
00:05:59.552 --> 00:06:02.179
So why are we using keyup?

91
00:06:02.179 --> 00:06:05.514
Well, if we were doing keydown,
we'd actually always be one key behind.

92
00:06:09.597 --> 00:06:10.982
Well, hold on.

93
00:06:10.982 --> 00:06:14.778
How is the easiest way to do this?

94
00:06:16.994 --> 00:06:19.404
Cuz it already has this event listener.

95
00:06:19.404 --> 00:06:23.244
Anyway, suffice to say, I don't think
I can show you this quite easily.

96
00:06:23.244 --> 00:06:26.343
But if you did keydown, then you'd always
be one down, because it would press it and

97
00:06:26.343 --> 00:06:28.849
it wouldn't register the key button
key yet, so you have to keyup.

98
00:06:30.688 --> 00:06:35.210
Yeah, it registers before
the key actually registers.

99
00:06:35.210 --> 00:06:38.294
And we're referencing input.value here,
right?

100
00:06:38.294 --> 00:06:40.826
So input is this input.

101
00:06:40.826 --> 00:06:44.845
Whatever the user has put into input,

102
00:06:44.845 --> 00:06:48.873
that is going to be the input.value.

103
00:06:48.873 --> 00:06:50.169
That's where that comes from.

104
00:06:52.771 --> 00:06:56.924
Okay, and then we're just passing that
directly into paragraph.innerText,

105
00:06:56.924 --> 00:06:59.315
which is the text of
whatever's inside of it.

106
00:06:59.315 --> 00:07:02.617
We could also have this be like innerHTML.

107
00:07:02.617 --> 00:07:04.465
I think this should work.

108
00:07:04.465 --> 00:07:08.617
If I say m, Right,

109
00:07:08.617 --> 00:07:12.436
then it'll actually put
HTML directly here.

110
00:07:15.599 --> 00:07:16.449
Which is kinda cool, right?

111
00:07:16.449 --> 00:07:20.543
You can actually put this as innerHTML,
right, like this.

112
00:07:20.543 --> 00:07:25.861
And then I could say,
em&gt;lol or something like that.

113
00:07:28.168 --> 00:07:33.586
And actually put HTML
directly out into the DOM.

114
00:07:33.586 --> 00:07:35.682
This is a huge security vulnerability.

115
00:07:35.682 --> 00:07:37.954
Reddit could never do this, right?

116
00:07:37.954 --> 00:07:41.153
Because that means other people
could load their comments and say,

117
00:07:41.153 --> 00:07:44.927
exfiltrate all of their Apple Pay
information or something like that, right?

118
00:07:44.927 --> 00:07:49.581
So typically, you don't wanna put
untrusted-ish email directly into

119
00:07:49.581 --> 00:07:52.719
a document, it's just a bad idea,
in general.

120
00:07:52.719 --> 00:07:54.295
But it's still possible if you want to.

121
00:07:54.295 --> 00:07:56.620
Bad ideas are still possible.

122
00:07:56.620 --> 00:07:57.650
God bless the Internet.

123
00:08:02.181 --> 00:08:03.966
This one's kind of a fun one.

124
00:08:03.966 --> 00:08:05.611
Let's try this.

125
00:08:05.611 --> 00:08:07.033
So I have my color-box.

126
00:08:07.033 --> 00:08:11.651
Its background is a lovely shade of lime
green, width and height of 100 pixels.

127
00:08:11.651 --> 00:08:13.011
Here's the color-box.

128
00:08:13.011 --> 00:08:15.318
Here's the input.

129
00:08:15.318 --> 00:08:19.644
I am then going to listen for
change events.

130
00:08:19.644 --> 00:08:21.079
So what happens with a change event?

131
00:08:21.079 --> 00:08:25.226
As soon as a user does something and
then unfocusses from the input,

132
00:08:25.226 --> 00:08:27.280
it'll register a change event.

133
00:08:27.280 --> 00:08:32.232
So for example, if I type pink here,
nothing has happened.

134
00:08:32.232 --> 00:08:34.626
But if I click somewhere else,
what do you expect to happen?

135
00:08:36.299 --> 00:08:37.768
It's gonna become pink, right?

136
00:08:37.768 --> 00:08:38.852
So that's a change event.

137
00:08:38.852 --> 00:08:42.976
As soon as something has changed and
then unfocusses.

138
00:08:42.976 --> 00:08:47.418
So even if I do this,
Nothing changed, right?

139
00:08:47.418 --> 00:08:51.771
So it still registers that something
needs to change between these

140
00:08:51.771 --> 00:08:53.332
two different things.

141
00:08:53.332 --> 00:08:59.851
But now, you can say, I don't know,
I want this to be black, White,

142
00:08:59.851 --> 00:09:05.654
mediumorchid, right?

143
00:09:05.654 --> 00:09:08.423
Anything that's a valid
color would work here.

144
00:09:08.423 --> 00:09:11.623
Kind of just stringing all these various
different tools we know together to

145
00:09:11.623 --> 00:09:13.875
create these kind of cool
interactive experiences.

146
00:09:13.875 --> 00:09:17.410
Let's talk a little bit about event
delegation slash event bubbling.

147
00:09:17.410 --> 00:09:19.128
I don't really wanna get
you too much into this.

148
00:09:19.128 --> 00:09:22.330
Again, this is another favorite question
to ask to junior Frontend developers.

149
00:09:22.330 --> 00:09:26.088
So it's worth delving into if
you're gonna do interviews.

150
00:09:28.298 --> 00:09:30.479
Right now, I'm listening to
events right at the source.

151
00:09:30.479 --> 00:09:33.088
Every time that this input has an event,

152
00:09:33.088 --> 00:09:36.252
I'm listening to it right
up at the input level.

153
00:09:36.252 --> 00:09:39.172
Technically though, I could listen
to it at the level above it, or

154
00:09:39.172 --> 00:09:41.275
the level above that, or
the level above that.

155
00:09:41.275 --> 00:09:44.101
So the events bubble up to their parents,

156
00:09:44.101 --> 00:09:48.882
until eventually goes to the HTML
level and it fizzles out from there.

157
00:09:48.882 --> 00:09:51.413
But you can take advantage of that.

158
00:09:51.413 --> 00:09:54.555
So I have five buttons here and

159
00:09:54.555 --> 00:09:59.967
a button-container of 1, 2, 3, 4, and 5.

160
00:09:59.967 --> 00:10:04.220
I could go and add an event listener for
every individual button,

161
00:10:04.220 --> 00:10:07.015
that's a little bit burdensome, right?

162
00:10:07.015 --> 00:10:09.770
Because you have to write an event
listener for every single button.

163
00:10:09.770 --> 00:10:13.864
Wouldn't it be nice to just have one
event listener that listens to all five?

164
00:10:13.864 --> 00:10:15.674
You can do that.

165
00:10:15.674 --> 00:10:17.103
So I can listen for

166
00:10:17.103 --> 00:10:22.540
events on button-container instead
of on any individual button.

167
00:10:22.540 --> 00:10:26.754
Rather than listen to events
on any one individual button,

168
00:10:26.754 --> 00:10:32.412
you can listen to it at the parent level,
right, cuz the events will bubble up.

169
00:10:32.412 --> 00:10:36.506
So I have these five different buttons,
but you can see here,

170
00:10:36.506 --> 00:10:41.390
I query the selector button-container,
and then I add an event listener

171
00:10:41.390 --> 00:10:45.829
that listens for clicks at
the button-container level, right?

172
00:10:45.829 --> 00:10:50.498
And then an alert that you
clicked on the event.target

173
00:10:50.498 --> 00:10:54.262
will let you know what was clicked, right?

174
00:10:54.262 --> 00:10:59.569
So in this particular case, it'll let
me know that if I click on button 3,

175
00:10:59.569 --> 00:11:04.483
like this, event.target refers
to the whole button here, right?

176
00:11:06.759 --> 00:11:10.508
Or if I click on button dot this one,
you clicked on button 4,

177
00:11:10.508 --> 00:11:13.552
cuz I'm reading the innerText
out of the button.

178
00:11:15.883 --> 00:11:19.184
Now, what's the danger here?

179
00:11:19.184 --> 00:11:26.811
What happens if I click
between the buttons, Right?

180
00:11:26.811 --> 00:11:30.337
It's reading the innerText,
which is 1, 2, 3, 4, 5 of all of them.

181
00:11:32.372 --> 00:11:33.927
So you do have to be a little careful.

182
00:11:33.927 --> 00:11:38.492
I could put some logic in here to say,
is event.target a button, right?

183
00:11:38.492 --> 00:11:42.232
If it is, do this, if not, ignore it.

184
00:11:42.232 --> 00:11:43.538
That's how you would do that.

185
00:11:46.961 --> 00:11:52.602
But still pretty cool, I can just listen
at the button level, Or at the container

186
00:11:52.602 --> 00:11:56.785
level, and not have to worry about
assigning one for each individual button.

187
00:11:56.785 --> 00:12:02.637
This is called event delegation or event
bubbling, whatever you wanna call it.

188
00:12:06.516 --> 00:12:12.367
And yeah, so that's kind of the gist
of DOM interactions, right?

189
00:12:12.367 --> 00:12:16.285
You wait for events, an event happens,
you do something about it.

190
00:12:16.285 --> 00:12:21.037
It's largely gonna be clicks,
and keyups, and keydowns, and

191
00:12:21.037 --> 00:12:25.353
touch end and touch start,
if you're doing touch stuff.

192
00:12:25.353 --> 00:12:27.570
There's a thing called pointer events,

193
00:12:27.570 --> 00:12:31.064
which are a newer thing that I'm
less familiar with, I confess.

194
00:12:31.064 --> 00:12:33.814
But it's meant to bridge the gap
between clicks and touches.

195
00:12:33.814 --> 00:12:40.520
So that you have this one kind of unified
way of dealing with touch and click, yeah.

196
00:12:40.520 --> 00:12:45.350
But for now, just learn about clicks and
keypresses and such.

