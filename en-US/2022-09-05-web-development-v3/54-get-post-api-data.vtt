WEBVTT

1
00:00:00.320 --> 00:00:03.984
I would invite you to first just
do the random word of the day and

2
00:00:03.984 --> 00:00:07.298
ignore the word validation part and
maybe do that last,

3
00:00:07.298 --> 00:00:11.900
that might make this easier, but that's
up to you of how you wanna work this.

4
00:00:11.900 --> 00:00:17.110
So, here's an interesting one that we're
gonna talk about right now we talked

5
00:00:17.110 --> 00:00:22.260
about GETs kind of implicitly, anytime
that you open this page here, right?

6
00:00:22.260 --> 00:00:26.644
It's actually doing what's
called a get from this API,

7
00:00:26.644 --> 00:00:31.870
which means that I'm trying to
pull information out of an API.

8
00:00:31.870 --> 00:00:33.850
There's other verbs of
what you can do to an API.

9
00:00:35.040 --> 00:00:38.650
So we did GETs, but you can also do posts.

10
00:00:38.650 --> 00:00:43.715
So if I wanna send information to
an API you need to post to the API.

11
00:00:45.947 --> 00:00:49.119
So, if I open this in my browser here,
it's actually

12
00:00:49.119 --> 00:00:54.150
not gonna know what to do with it it's
gonna say some random error message.

13
00:00:54.150 --> 00:00:55.518
You can kind of ignore it.

14
00:00:55.518 --> 00:00:58.167
But basically it's just saying I don't
understand what you're trying to

15
00:00:58.167 --> 00:00:58.680
say, right?

16
00:00:58.680 --> 00:01:03.046
Because we have actually haven't
sent anything to the API to try and

17
00:01:03.046 --> 00:01:03.970
validate it.

18
00:01:05.380 --> 00:01:08.343
So I'm gonna show you how to do that.

19
00:01:08.343 --> 00:01:11.681
In order to do that your browser
actually just does gets so

20
00:01:11.681 --> 00:01:15.867
we're gonna have to do something
besides just opening it in a browser.

21
00:01:15.867 --> 00:01:20.256
We have to use some other sort of program
to be able to talk to the API cuz we're

22
00:01:20.256 --> 00:01:24.940
gonna try and send information to the API
rather than pull information out of it.

23
00:01:26.220 --> 00:01:29.890
So there's two programs you can use one's
called Postman, and one's called Insomnia.

24
00:01:29.890 --> 00:01:32.796
I'm gonna use insomnia cuz
that's the one that I use.

25
00:01:32.796 --> 00:01:36.798
So I'm gonna open a program here
that I have called insomnia.

26
00:01:40.720 --> 00:01:45.779
But you can install Insomnia at insomnia

27
00:01:45.779 --> 00:01:50.400
rest client or something like that.

28
00:01:51.830 --> 00:01:55.533
This is insomnia.rest if
you wanna download it.

29
00:01:58.464 --> 00:02:01.134
Okay, but you can also look for

30
00:02:01.134 --> 00:02:07.109
postman that's also very popular as well,
and they're both free.

31
00:02:08.490 --> 00:02:10.919
Let's do cools set.

32
00:02:10.919 --> 00:02:12.721
Okay, here we go.

33
00:02:16.039 --> 00:02:19.250
So I have this API client here.

34
00:02:19.250 --> 00:02:22.452
So what this is doing you
know how we're making fetches

35
00:02:22.452 --> 00:02:26.851
to API's using our browser I'm gonna
make this a lot bigger so you can see it

36
00:02:31.365 --> 00:02:37.090
This is just a client that does that and
it's that's all this insomnia client does.

37
00:02:38.250 --> 00:02:43.612
So we're gonna go to
our documentation here.

38
00:02:43.612 --> 00:02:49.253
Here we're gonna and get to this, we're
gonna paste that in here and we're gonna

39
00:02:49.253 --> 00:02:54.510
make sure this is a GET and we're gonna
make sure that our body here is empty.

40
00:02:56.090 --> 00:02:57.856
Okay, I'm gonna send that, right?

41
00:02:57.856 --> 00:03:02.470
And so this is basically what I was
already seeing in my browser, right?

42
00:03:02.470 --> 00:03:04.190
This word ivory something like that.

43
00:03:04.190 --> 00:03:08.438
This is just making API requests just like
our browser would do a fetch client this

44
00:03:08.438 --> 00:03:12.562
is basically a fetch request we're doing
a fetch request kind of inside of this

45
00:03:12.562 --> 00:03:14.080
program.

46
00:03:14.080 --> 00:03:16.651
This is just a little helper to
make requests against an API.

47
00:03:19.159 --> 00:03:24.554
So, GET again the idea with a GET is
you're pulling something out of an API

48
00:03:24.554 --> 00:03:30.049
you want information, you want
the weather, you want the word of the day.

49
00:03:30.049 --> 00:03:36.237
But here with the validate word API that
we're trying to do here, I wanna give it

50
00:03:36.237 --> 00:03:42.340
information, I wanna send it information,
I wanna send it this JSON object.

51
00:03:42.340 --> 00:03:47.190
So I'm going to give it some JSON of a
word and I wanna say is this a valid word?

52
00:03:47.190 --> 00:03:52.513
So if I put cools in here and I send
that oops, I need to do a post you might

53
00:03:52.513 --> 00:03:57.776
see some sort of 403 error here
that request cannot be satisfied.

54
00:03:57.776 --> 00:03:59.093
It's because your verb is wrong, right?

55
00:03:59.093 --> 00:04:00.783
Right now I'm trying to post or

56
00:04:00.783 --> 00:04:05.890
I'm trying to get somewhere where it's
actually expecting a post, right?

57
00:04:05.890 --> 00:04:11.200
So if I say POST here and
I say send then I get this back, right?

58
00:04:11.200 --> 00:04:16.428
So, the word cools, cools is a valid
five letter word yes, right?

59
00:04:16.428 --> 00:04:20.011
So I get valid word true back.

60
00:04:20.011 --> 00:04:27.090
Or, do I want I don't know
ASDFF is that a valid word?

61
00:04:27.090 --> 00:04:31.150
So I'll send that and
this is not a valid word, right?

62
00:04:31.150 --> 00:04:34.857
So, this will give me back from
the API is this about whether or not.

63
00:04:34.857 --> 00:04:38.353
I think this will actually only
validate five letter words so

64
00:04:38.353 --> 00:04:41.860
if I put I don't know intent or
something like that, right?

65
00:04:41.860 --> 00:04:45.536
This is a six letter word I think it will
tell you it's not a valid word because

66
00:04:45.536 --> 00:04:49.575
this is only validating five letter words
specifically built for this word clone.

67
00:04:54.721 --> 00:04:59.374
Okay, so, couple of things here
with insomnia specifically you

68
00:04:59.374 --> 00:05:01.670
need to set this on to JSON here.

69
00:05:03.440 --> 00:05:07.393
I think it might default to multipart
form or something like that or

70
00:05:07.393 --> 00:05:08.532
form URL encoded.

71
00:05:08.532 --> 00:05:10.053
Right, cuz there's multiple.

72
00:05:10.053 --> 00:05:14.018
We've talked about how you can send JSON,
you can send XML, you can send Yamo

73
00:05:14.018 --> 00:05:18.000
there's a bunch of stuff that you can
send to API's we're using JSON today.

74
00:05:19.920 --> 00:05:23.450
Shouldn't need any auth headers shouldn't
need any queries or anything like that.

75
00:05:24.450 --> 00:05:28.770
In your headers you might have
content-type application/JSON you're just

76
00:05:28.770 --> 00:05:32.827
letting it knows by the way I'm sending
JSON some API endpoints will speak

77
00:05:32.827 --> 00:05:34.080
multiple languages.

78
00:05:34.080 --> 00:05:37.200
So you have to identify I'm
sending you this kind, right?

79
00:05:37.200 --> 00:05:40.181
Imagine it's like a call center that
you call this speaks both English and

80
00:05:40.181 --> 00:05:40.960
Spanish, right?

81
00:05:40.960 --> 00:05:44.878
And you have to press this is pressing 9
to talk to it a Spanish agent instead of

82
00:05:44.878 --> 00:05:46.280
an English agent, right?

83
00:05:47.330 --> 00:05:51.268
This is just telling us I'm
sending you this in JSON.

84
00:05:51.268 --> 00:05:55.144
And then here I get this back you can also
look at there's all these headers that it

85
00:05:55.144 --> 00:05:58.170
will send back to you they'll tell
you what it sent back to you.

86
00:05:58.170 --> 00:06:03.510
It's like okay I'm going to respond to you
in JSON, it's exactly 35 letters long.

87
00:06:03.510 --> 00:06:04.884
I sent it at this time, and

88
00:06:04.884 --> 00:06:08.280
there's a bunch of stuff that
Amazon sends from you as well.

89
00:06:08.280 --> 00:06:16.335
So, let me show you how to do that
really quick here in post let's just for

90
00:06:16.335 --> 00:06:22.560
a second we're gonna head
back to the async await here.

91
00:06:27.576 --> 00:06:32.118
So, with fetch in fact let's
just look at the MDN fetch.

92
00:06:32.118 --> 00:06:36.850
This is the way I would look at it and
a pilot would look for

93
00:06:36.850 --> 00:06:43.244
verbs, Fetch,

94
00:06:47.619 --> 00:06:51.460
Yeah, so
this is the documentation for fetch.

95
00:06:51.460 --> 00:06:55.865
There's a lot of things that
you could send with fetch.

96
00:06:55.865 --> 00:06:58.283
So you can send a different headers,

97
00:06:58.283 --> 00:07:02.966
you can send a different methods which
is what we care about the moment.

98
00:07:02.966 --> 00:07:04.667
You can say if this is gonna be and

99
00:07:04.667 --> 00:07:08.333
causes a whole nother thing which
we won't talk about at the moment.

100
00:07:08.333 --> 00:07:12.940
Some of them are gonna require some
sort of authentication mechanism, right?

101
00:07:12.940 --> 00:07:16.684
So, a good example is when you tweet,
right,

102
00:07:16.684 --> 00:07:22.950
you post to some endpoint that
Twitter has that allows you to tweet.

103
00:07:22.950 --> 00:07:26.627
But it's very critical that you only let
a person that is actually that correct

104
00:07:26.627 --> 00:07:29.400
person tweet from their own account,
right?

105
00:07:29.400 --> 00:07:31.349
I shouldn't be able to tweet from
your account you shouldn't be able

106
00:07:31.349 --> 00:07:31.930
to tweet from mine.

107
00:07:31.930 --> 00:07:34.360
So you have to have some sort
of authentication header.

108
00:07:34.360 --> 00:07:40.222
We're not worrying about Auth today but
that's what this would go in here and

109
00:07:40.222 --> 00:07:43.481
there's a bunch of other stuff like that.

110
00:07:43.481 --> 00:07:46.651
But if I was trying to do a, let's say for

111
00:07:46.651 --> 00:07:52.535
example this was a post URL instead
you'd give it a configuration object.

112
00:07:52.535 --> 00:07:57.301
And you would say the method here is
POST normally it's done in all caps I

113
00:07:57.301 --> 00:07:59.690
don't think it actually has to be.

114
00:08:00.940 --> 00:08:03.408
And then you would also have
to send it to the body.

115
00:08:04.608 --> 00:08:06.589
The body being what you're
trying to send to it.

116
00:08:07.910 --> 00:08:10.484
So if I was trying to
going back to my insomnia,

117
00:08:10.484 --> 00:08:13.190
if I was trying to send it like word here,
right?

118
00:08:14.390 --> 00:08:18.132
It would just be JSON.stringify.

119
00:08:23.107 --> 00:08:27.518
We could just put this on here and one
line might be a little bit easier to read.

120
00:08:27.518 --> 00:08:30.710
Right cuz body actually has to
end up being a string, right?

121
00:08:30.710 --> 00:08:32.006
That makes sense.

122
00:08:32.006 --> 00:08:35.894
So I'm just sending the word intent here.

123
00:08:35.894 --> 00:08:40.424
So that's how you do a POST instead
of a GET everything is a GET by

124
00:08:40.424 --> 00:08:43.942
default you have to override
it to make it a POST.

125
00:08:45.729 --> 00:08:47.690
POST make sense?

126
00:08:47.690 --> 00:08:48.643
Okay.

127
00:08:51.951 --> 00:08:56.235
Going back to our project,

128
00:09:00.561 --> 00:09:04.949
Yeah, and again if you see that 403 error,
you're probably trying to get to the POST

129
00:09:04.949 --> 00:09:08.700
endpoint or
you're trying to post to the GET endpoint.

130
00:09:08.700 --> 00:09:12.950
Make sure you're not sending bodies
to the word of the day, right?

131
00:09:12.950 --> 00:09:14.774
Because it doesn't expect
any information from you and

132
00:09:14.774 --> 00:09:16.730
it doesn't know what to do if
it gets information from you.

133
00:09:17.750 --> 00:09:21.003
And, by the same token make sure if you're
posting to say that you are sending

134
00:09:21.003 --> 00:09:24.560
the body right because it expects
the body every single time.

135
00:09:24.560 --> 00:09:29.019
So in other words if you're seeing these
errors you probably didn't formulate your

136
00:09:29.019 --> 00:09:30.161
request correctly.

137
00:09:32.589 --> 00:09:36.227
And you'll frequently see something
like missing authentication token or

138
00:09:36.227 --> 00:09:37.830
some sort of nonsense like that.

139
00:09:38.930 --> 00:09:42.390
It's basically Amazon saying we
don't know what to do about this.

140
00:09:42.390 --> 00:09:45.000
You did not formulate it
the way that we expect you to.

