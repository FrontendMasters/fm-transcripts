WEBVTT

1
00:00:00.294 --> 00:00:03.756
Some tips and tricks,
I think I said this in the last time but

2
00:00:03.756 --> 00:00:05.843
please solve one problem at a time.

3
00:00:05.843 --> 00:00:10.491
It's very hard to solve big problems, it's
very easy to solve very small problems.

4
00:00:10.491 --> 00:00:12.590
So just make a bunch of very
small problems for you.

5
00:00:12.590 --> 00:00:16.495
That is half of what coding is,
it's just taking big problems and

6
00:00:16.495 --> 00:00:18.696
dividing it into smaller problems.

7
00:00:18.696 --> 00:00:22.182
I tend to do the HTML and
CSS first but you don't have to.

8
00:00:24.801 --> 00:00:30.522
But I would go something like, make
sure the user's able to guess six times,

9
00:00:30.522 --> 00:00:34.053
then maybe add detection for
correct guesses.

10
00:00:34.053 --> 00:00:38.766
Maybe add correct highlighting,
then maybe add the odd or the yellows or

11
00:00:38.766 --> 00:00:40.242
something like that.

12
00:00:40.242 --> 00:00:43.914
I definitely didn't show you all the
JavaScript methods that you're gonna need

13
00:00:43.914 --> 00:00:44.890
to be able to do this.

14
00:00:44.890 --> 00:00:47.864
I'm relying on you that you're gonna
have to google some of these things.

15
00:00:47.864 --> 00:00:50.850
That's just coding in general,
you have to google a lot of things.

16
00:00:50.850 --> 00:00:53.708
Please, google a lot of things.

17
00:00:53.708 --> 00:00:57.680
A lot of this course is just learning
how to answer your own questions.

18
00:00:57.680 --> 00:00:59.356
I added some animations.

19
00:00:59.356 --> 00:01:04.195
Do animations definitely all the way last,
that's the least important part of this.

20
00:01:04.195 --> 00:01:11.600
I would just start with alert win, or
alert lose, and just start from there.

21
00:01:11.600 --> 00:01:15.572
And then the one thing
that I did wanna show you,

22
00:01:15.572 --> 00:01:21.043
this is gonna help you with if
the user is typing in letters or not.

23
00:01:21.043 --> 00:01:23.867
So, for example here, if I click on this,

24
00:01:23.867 --> 00:01:27.878
if I hit F, right, and
I can also backspace as well, right?

25
00:01:27.878 --> 00:01:32.042
But if I hit four, right, there's
no words that have numbers in them.

26
00:01:32.042 --> 00:01:38.714
So, right now I'm just ignoring numbers or
exclamation points or anything like that.

27
00:01:38.714 --> 00:01:44.001
So I'm detecting is the user
trying to input a letter or not.

28
00:01:44.001 --> 00:01:45.783
I'm gonna show you really
quick just how to do that.

29
00:01:45.783 --> 00:01:48.163
I actually wrote the function for

30
00:01:48.163 --> 00:01:54.028
you because I really didn't wanna talk
about regular expressions in this class.

31
00:01:54.028 --> 00:01:59.782
So this function here, just copy this and
paste it directly into your code.

32
00:01:59.782 --> 00:02:03.435
This will tell you is this a letter or
not.

33
00:02:03.435 --> 00:02:07.521
So, let's just take a look at this.

34
00:02:07.521 --> 00:02:12.766
We'll go into the console, clear here.

35
00:02:12.766 --> 00:02:16.750
All right, so
now I have this function called is letter.

36
00:02:16.750 --> 00:02:21.112
And if I give it just an a, a letter?

37
00:02:21.112 --> 00:02:23.930
Yes, is capital A a letter?

38
00:02:23.930 --> 00:02:27.312
Yes, is exclamation point a letter?

39
00:02:27.312 --> 00:02:31.709
No, is aaaa a letter?

40
00:02:31.709 --> 00:02:33.354
No, because it's multiple letters.

41
00:02:33.354 --> 00:02:37.353
I'm looking for
specifically four single letters, right?

42
00:02:37.353 --> 00:02:44.547
So that's what this function does,
is it just tells you isLetter,

43
00:02:44.547 --> 00:02:48.723
is this a single alphanumeric letter?

44
00:02:48.723 --> 00:02:53.540
And I intentionally left out things
like umlauts, and circumflexes,

45
00:02:53.540 --> 00:02:56.921
and accents just to keep
it really simple for you.

46
00:02:56.921 --> 00:03:02.634
So for example, if I give it like
an umlaut here, it's still gonna say no.

47
00:03:02.634 --> 00:03:04.751
Again, they are valid letters.

48
00:03:04.751 --> 00:03:09.044
I'm not saying anything about anyone's
language but for the purpose of this

49
00:03:09.044 --> 00:03:13.612
class, I'm trying to just limit it to
the 26 letters uppercase and lowercase.

50
00:03:16.111 --> 00:03:17.116
Okay.

51
00:03:19.672 --> 00:03:24.340
So, I know some of you are curious
about what the hell is this.

52
00:03:24.340 --> 00:03:26.865
I don't really wanna spend
a ton of time on it, but

53
00:03:26.865 --> 00:03:29.527
I'll give you just a super
high level explanation.

54
00:03:29.527 --> 00:03:34.477
It's called a regular expression and
basically you can define patterns and

55
00:03:34.477 --> 00:03:38.121
then you can say,
does this match this sort of pattern?

56
00:03:38.121 --> 00:03:41.676
This actually goes through
here in depth if you really

57
00:03:41.676 --> 00:03:43.893
wanna figure out what this does.

58
00:03:43.893 --> 00:03:49.143
But the general gist is it's gonna say,
is this one letter, which is what this is.

59
00:03:49.143 --> 00:03:53.697
So, the two slashes here denote
that it is a regular expression.

60
00:03:53.697 --> 00:03:59.529
This is asking with this circumflex and
the $ sign is that both the beginning and

61
00:03:59.529 --> 00:04:03.288
the end of the word which
means is it's one letter.

62
00:04:03.288 --> 00:04:07.098
And then it's asking, does it fall
in the range of either a to z or

63
00:04:07.098 --> 00:04:08.523
capital A to capital Z?

64
00:04:08.523 --> 00:04:12.857
That's it, that's what this regular
expression does you can make regular

65
00:04:12.857 --> 00:04:15.237
expressions do all sorts of wild things.

66
00:04:15.237 --> 00:04:18.792
This one just checks to
see if it's a letter.

67
00:04:18.792 --> 00:04:20.729
And this will go into that.

68
00:04:20.729 --> 00:04:22.912
If you're more curious than that,

69
00:04:22.912 --> 00:04:26.777
this steps through everything
about what that actually does.

70
00:04:26.777 --> 00:04:31.782
So, use this function to determine if
a user has entered some sort of key or

71
00:04:31.782 --> 00:04:33.094
if they haven't.

72
00:04:37.921 --> 00:04:41.435
Right, so I do that here,
actually I showed you.

73
00:04:41.435 --> 00:04:47.271
So, I can type in here letters but
I can't type in numbers, right?

74
00:04:47.271 --> 00:04:49.691
So I do that here.

75
00:04:49.691 --> 00:04:54.350
This event.prevent default basically means
that whatever this was trying to do,

76
00:04:54.350 --> 00:04:55.357
stop it, right?

77
00:04:55.357 --> 00:04:58.640
So they were trying to type in this,
so don't let them.

78
00:04:58.640 --> 00:05:02.992
So if it's not a letter, which is
what this exclamation point means.

79
00:05:02.992 --> 00:05:05.216
So another way of thinking that is,

80
00:05:05.216 --> 00:05:10.362
if this is triple equal to false,
Then prevent default here.

81
00:05:13.811 --> 00:05:16.354
That's what that's doing.

82
00:05:16.354 --> 00:05:19.969
It actually won't even let you backspace
cuz the backspace isn't actually

83
00:05:19.969 --> 00:05:21.050
a character, right?

84
00:05:21.050 --> 00:05:24.161
It won't let you hit Enter,
this will only accept key.

85
00:05:24.161 --> 00:05:26.698
So you actually do you have to be
a little bit more intelligent than asking

86
00:05:26.698 --> 00:05:27.579
if it's a letter or not.

87
00:05:27.579 --> 00:05:31.555
Because backspace is allowed if they're
trying to delete something, and

88
00:05:31.555 --> 00:05:34.720
if they hit Enter,
they expect it to try and guess, right?

89
00:05:38.239 --> 00:05:40.613
I say that right there, this will
even prevent backspace and enter.

