WEBVTT

1
00:00:00.510 --> 00:00:05.010
All right, so now we're marking
everything correctly, so we did that.

2
00:00:05.010 --> 00:00:10.438
Let's finish that to do, we got one thing
left to do, which is to validate the word.

3
00:00:14.033 --> 00:00:18.029
So let's go ahead and do that, shouldn't
be too complex of a function here.

4
00:00:20.676 --> 00:00:23.239
You could make an extra function
that does this outside of commit,

5
00:00:23.239 --> 00:00:25.137
I'm just gonna do it
directly inside of commit.

6
00:00:25.137 --> 00:00:26.756
Up to you how you choose to do that.

7
00:00:29.089 --> 00:00:33.412
So, first thing we do is we're
gonna set isLoading to true, right,

8
00:00:33.412 --> 00:00:36.253
cuz we're gonna load
something from an API.

9
00:00:36.253 --> 00:00:40.822
We're gonna setLoading,
to be true cuz it is now loading.

10
00:00:42.653 --> 00:00:44.855
This is an async function so

11
00:00:44.855 --> 00:00:50.713
we can do async await in here we can
say const res = await fetch("").

12
00:00:50.713 --> 00:00:54.620
And then we're going to fetch from

13
00:00:54.620 --> 00:01:03.520
("https:://words.dev-apis.com/validate-wo-
rd"), cool.

14
00:01:03.520 --> 00:01:08.317
And if you remember we have to tell
it the method which is a post, and

15
00:01:08.317 --> 00:01:10.129
we have to give it a body.

16
00:01:10.129 --> 00:01:14.522
Which is going to be, JSON.stringify,

17
00:01:16.648 --> 00:01:19.028
{(word: currentGuess}).

18
00:01:22.867 --> 00:01:26.117
So this is going to post to that
API that we talked about, and

19
00:01:26.117 --> 00:01:29.187
it's going to get back is this
a valid five letter word.

20
00:01:29.187 --> 00:01:33.086
So, we're gonna request from
this API the validated word,

21
00:01:33.086 --> 00:01:37.880
we're gonna post, and
we're gonna stringify word: currentGuess.

22
00:01:37.880 --> 00:01:41.385
This is going to post to that API and
it's going to ask,

23
00:01:41.385 --> 00:01:44.584
is this a valid five letter word, Okay?

24
00:01:44.584 --> 00:01:49.595
So I'm gonna say const_resObj

25
00:01:49.595 --> 00:01:54.978
= await, res.json();, and

26
00:01:54.978 --> 00:02:01.288
then I'm gonna say const validword =,

27
00:02:01.288 --> 00:02:05.194
resObj.validWord;.

28
00:02:08.535 --> 00:02:11.158
Now, I'm gonna show you just
a little I'll put in as a comment,

29
00:02:11.158 --> 00:02:13.165
this is how I would actually
typically write it.

30
00:02:18.574 --> 00:02:22.225
These two lines are exactly the same,
by putting these curly braces here.

31
00:02:22.225 --> 00:02:26.810
You say, I know there's something
called validWord inside of resObj, so

32
00:02:26.810 --> 00:02:30.030
pull it out and
make it a variable called validWord.

33
00:02:30.030 --> 00:02:34.736
It's a little cryptic, people that are new
typically struggle with that syntax.

34
00:02:34.736 --> 00:02:38.761
But just you'll see it so,
I'll leave that in there for

35
00:02:38.761 --> 00:02:45.758
you if you want to, Cool.

36
00:02:48.086 --> 00:02:53.414
So, Now we're done loading,

37
00:02:53.414 --> 00:02:56.125
so isLoading is now assigned false.

38
00:02:56.125 --> 00:02:59.847
And we'll say setLoading,
to be false as well.

39
00:03:03.689 --> 00:03:07.739
So now we have this validWord, we know if
it's a valid five letter word or not, so

40
00:03:07.739 --> 00:03:09.243
what are we gonna do about it?

41
00:03:09.243 --> 00:03:13.181
Well if it's not a five
letter word that's valid,

42
00:03:13.181 --> 00:03:16.673
we're gonna say so
if it's not a valid word.

43
00:03:16.673 --> 00:03:20.651
Again, this exclamation point
just makes trues into falses and

44
00:03:20.651 --> 00:03:22.134
the falses into trues.

45
00:03:22.134 --> 00:03:26.037
So you can as think it as not, right?

46
00:03:26.037 --> 00:03:30.268
Exclamation points means not,
so if it is not true it's what?

47
00:03:30.268 --> 00:03:30.976
&gt;&gt; False.

48
00:03:30.976 --> 00:03:33.175
&gt;&gt; False, if it's not false, it's what?

49
00:03:33.175 --> 00:03:33.851
&gt;&gt; True.

50
00:03:36.061 --> 00:03:41.020
&gt;&gt; So basically I'm saying if this
is not a valid word, then do this.

51
00:03:41.020 --> 00:03:48.470
It would be the same thing of doing if
this, do nothing else, do this, right?

52
00:03:50.100 --> 00:03:55.342
Same thing, But we use this everywhere.

53
00:03:55.342 --> 00:04:01.614
So, if it's not a valid word,
Then, what do we do?

54
00:04:03.468 --> 00:04:07.352
Well we don't let them guess
right that's the point here.

55
00:04:07.352 --> 00:04:11.499
So we'll have some function
here called markInvalidWord or

56
00:04:11.499 --> 00:04:15.334
something like that, and
then we will return, right?

57
00:04:15.334 --> 00:04:19.065
Because we don't wanna go on to trying to
mark the guess because they didn't guess

58
00:04:19.065 --> 00:04:19.723
a valid word.

59
00:04:23.303 --> 00:04:26.090
Okay, let's go down here and

60
00:04:26.090 --> 00:04:31.453
we'll make a function here called,
markInvalidWord.

61
00:04:34.100 --> 00:04:38.246
And that'd be fine here if
you just wanted to say,

62
00:04:38.246 --> 00:04:42.712
not a valid word, and move on,
totally fine with me.

63
00:04:42.712 --> 00:04:46.868
So here if I say, blah,
it's just gonna say not a valid word and

64
00:04:46.868 --> 00:04:49.546
it's not gonna let you move on, right?

65
00:04:49.546 --> 00:04:53.798
So I can try again, not a valid word,
and I can here come back and

66
00:04:53.798 --> 00:04:57.183
say pools which it should be a valid word,
right?

67
00:04:57.183 --> 00:04:59.938
Cuz the API is gonna validate,
that it's valid.

68
00:04:59.938 --> 00:05:04.195
If you look at our network requests
here you can see that I have a bunch of

69
00:05:04.195 --> 00:05:11.363
requests to, validate word, Make sense?

70
00:05:13.689 --> 00:05:15.733
So now we're doing POST
requests which is pretty cool.

71
00:05:20.260 --> 00:05:24.564
So I'll show you what I did in mine I made
it a little bit nicer for markInvalidWord,

72
00:05:24.564 --> 00:05:26.750
and I use a little bit of animation.

73
00:05:26.750 --> 00:05:30.917
Animations are always kind of wonky,
you always have to do some funny stuff.

74
00:05:30.917 --> 00:05:37.746
Cuz the browser doesn't necessarily, have
the best ways to interact with animations.

75
00:05:37.746 --> 00:05:40.408
So what I wanna do is I want to
quickly add a class to this so

76
00:05:40.408 --> 00:05:43.260
it flashes an animation and
then I wanna take the class off.

77
00:05:43.260 --> 00:05:47.816
Because, it doesn't remain an invalid
word it just becomes an invalid word and

78
00:05:47.816 --> 00:05:50.537
then you set the user back to try again,
right?

79
00:05:50.537 --> 00:05:52.938
So you just wanna flash something and
then take it away, so

80
00:05:52.938 --> 00:05:54.904
I'm gonna show you how
to do that really quick.

81
00:05:58.922 --> 00:06:03.701
Okay, so I have this class if you

82
00:06:03.701 --> 00:06:09.725
remember from our CSS calls, not spin.

83
00:06:09.725 --> 00:06:13.486
We can make it spin, that'd be fun,
but I called it flash.

84
00:06:13.486 --> 00:06:17.875
So if you mark it with an invalid, it's
gonna flash this red color for one second.

85
00:06:21.185 --> 00:06:26.872
So what I'm gonna do
here is I'm gonna say,

86
00:06:26.872 --> 00:06:32.099
for (let i = 0; i &lt; ANSWER_LENGTH,

87
00:06:32.099 --> 00:06:37.045
i++), we're gonna say letters.

88
00:06:37.045 --> 00:06:42.041
And actually, we can just go ahead and
do basically the same thing here.

89
00:06:42.041 --> 00:06:50.049
Grab that, Instead of adding wrong,

90
00:06:50.049 --> 00:06:55.478
we're gonna add invalid, right?

91
00:06:58.080 --> 00:07:02.557
Okay so let's even just see what
that looks like for just a second.

92
00:07:02.557 --> 00:07:07.334
So if we say something like this,
notice that it flashes red for

93
00:07:07.334 --> 00:07:09.870
a second, pretty cool, right?

94
00:07:09.870 --> 00:07:13.850
I think that's a pretty compelling
interface to show sounds like hey,

95
00:07:13.850 --> 00:07:15.787
this isn't correct, try again.

96
00:07:15.787 --> 00:07:20.787
But here's the problem if I
change it again and do it again,

97
00:07:20.787 --> 00:07:23.289
it's not flashing it, why?

98
00:07:23.289 --> 00:07:27.647
Well if we inspect here,
these are all now invalid, and

99
00:07:27.647 --> 00:07:33.227
I can keep adding invalid to it,
but, it's already invalid, right?

100
00:07:33.227 --> 00:07:38.061
So it's not gonna flash it again cuz it's
only gonna do invalid that first time.

101
00:07:38.061 --> 00:07:42.504
So we have to put it on there, and then we
have to take it off, so how do we do that?

102
00:07:44.858 --> 00:07:47.431
A bunch of ways you could
go about doing this,

103
00:07:47.431 --> 00:07:50.494
we're gonna do a really
lazy way called setTimeout.

104
00:07:50.494 --> 00:07:54.923
This is like hey browser, wait for
some undisclosed amount of time and

105
00:07:54.923 --> 00:07:56.209
then do something.

106
00:07:56.209 --> 00:08:01.205
So I'm gonna write
a function here that says,

107
00:08:02.250 --> 00:08:06.256
Same thing,
except I just want you to remove it.

108
00:08:06.256 --> 00:08:08.017
And then how long do we want it to wait?

109
00:08:09.986 --> 00:08:12.297
It's in milliseconds,
I'm just gonna say 10, right?

110
00:08:12.297 --> 00:08:16.010
Which is basically,
faster than you can blink I think,

111
00:08:16.010 --> 00:08:21.388
I think blinking takes more than a cent
a second, actually I'm not really sure.

112
00:08:21.388 --> 00:08:26.419
Suffice to say very fast so,
the way actually want this to work,

113
00:08:26.419 --> 00:08:30.347
is I want to just remove
it if it was already there.

114
00:08:30.347 --> 00:08:33.790
If I call remove and it's not there,
it just doesn't do anything.

115
00:08:33.790 --> 00:08:36.830
I need to wait long enough for
the browser to say okay,

116
00:08:36.830 --> 00:08:40.829
I understand what you asked me to do,
it's called a repaint, right?

117
00:08:40.829 --> 00:08:47.705
And then I wanna add it,
Okay, let's try that again.

118
00:08:47.705 --> 00:08:51.818
The first time it's not gonna be there so
nothing's bad's gonna happen, right?

119
00:08:51.818 --> 00:08:54.905
And then the invalid class
actually does just stay there,

120
00:08:54.905 --> 00:08:58.749
that doesn't matter to anyone else
besides us the programmer, right?

121
00:08:58.749 --> 00:09:03.394
But now if I hit Enter again,
it'll remove it

122
00:09:03.394 --> 00:09:07.925
just long enough, so
that I can add it back.

123
00:09:10.591 --> 00:09:13.368
Kind of a fun way to do it,
if you don't feel like doing that,

124
00:09:13.368 --> 00:09:17.299
just alerting it's not a valid word would
have been totally acceptable here as well.

