WEBVTT

1
00:00:00.000 --> 00:00:06.531
So hopefully, we got a shot to try and
make the character-repeating little thing.

2
00:00:06.531 --> 00:00:10.377
Hopefully, it was a good exercise in
taking an abstract idea in your brain and

3
00:00:10.377 --> 00:00:11.867
translating that into code.

4
00:00:11.867 --> 00:00:16.667
Again, this kinda feels like I used to be
an Italian translator in a previous life,

5
00:00:16.667 --> 00:00:21.125
that I would hear something in English,
have to think about it, process it,

6
00:00:21.125 --> 00:00:23.003
and spit it back out in Italian.

7
00:00:23.003 --> 00:00:24.115
It's kind of the same idea, right?

8
00:00:24.115 --> 00:00:28.039
You have this abstract idea of, I want to
take this thing, this idea that I have,

9
00:00:28.039 --> 00:00:31.592
and I'm going to turn it into a language
that a computer can understand.

10
00:00:33.681 --> 00:00:38.622
So you can delete all this, or you can
leave it or not, whatever you want.

11
00:00:38.622 --> 00:00:39.601
This is fine, actually.

12
00:00:41.879 --> 00:00:46.376
So we could do something like, basically,

13
00:00:46.376 --> 00:00:51.729
let answer = empty string of some variety,
right?

14
00:00:51.729 --> 00:00:53.990
That's probably a good way to start out.

15
00:00:53.990 --> 00:00:59.377
And then we can say for let i = 0,
i is less than something

16
00:00:59.377 --> 00:01:03.877
like timesToRepeat, right, i++, right?

17
00:01:03.877 --> 00:01:11.782
So this will repeat as many times
as timesToRepeat tells it to, okay?

18
00:01:11.782 --> 00:01:20.069
And then we're just gonna say
answer= answer + character.

19
00:01:25.864 --> 00:01:29.674
In my solution below,
I called answer a word, right?

20
00:01:29.674 --> 00:01:35.113
But you can call whatever you want,
it doesn't really matter.

21
00:01:35.113 --> 00:01:39.247
Okay, so
let's go look at this in my experiments,

22
00:01:39.247 --> 00:01:42.044
make sure I'm not too incorrect.

23
00:01:42.044 --> 00:01:44.250
And you can see there, I have my duck.

24
00:01:44.250 --> 00:01:51.939
So let's change that to be something like,
I don't know.

25
00:01:51.939 --> 00:01:53.056
What's a fun emoji here?

26
00:01:56.679 --> 00:01:58.740
How about the Galaga alien?

27
00:02:00.049 --> 00:02:08.432
Okay, and then we'll do this for
50 times And come over here and refresh.

28
00:02:08.432 --> 00:02:11.867
And there you go, and
we get 50 those little Galaga aliens.

29
00:02:11.867 --> 00:02:16.497
What's fun about this is,
with this particular way of doing it,

30
00:02:16.497 --> 00:02:20.117
you could have multiple
different emojis here, or

31
00:02:20.117 --> 00:02:23.504
they could be characters,
I just like emojis.

32
00:02:23.504 --> 00:02:26.578
So we'll have, I don't know, a dress.

33
00:02:26.578 --> 00:02:32.213
How about, Now, what's going to happen?

34
00:02:32.213 --> 00:02:33.706
How many characters
are we gonna end up with?

35
00:02:33.706 --> 00:02:35.198
&gt;&gt; 100.

36
00:02:35.198 --> 00:02:39.951
&gt;&gt; 100, right,
cuz every one of these loop iterations,

37
00:02:39.951 --> 00:02:45.779
as they're called, iterations,
we'll have two characters added.

38
00:02:45.779 --> 00:02:51.061
So if I refresh here, you can see,
I now have 100 characters here.

39
00:02:51.061 --> 00:02:54.263
And we can make this
go as much as we want.

40
00:02:54.263 --> 00:02:57.296
5000 times, let's do it.

41
00:02:57.296 --> 00:03:00.574
Eventually JavaScript's gonna say,
you asked for a lot of these,

42
00:03:00.574 --> 00:03:02.480
so I cut them off for you, the console.

43
00:03:07.122 --> 00:03:07.724
Kind of fun, right?

44
00:03:11.890 --> 00:03:13.036
So how did we do?

45
00:03:13.036 --> 00:03:14.194
Did this go okay?

46
00:03:20.448 --> 00:03:25.480
This was literally one of my Facebook
interview questions, fun fact.

47
00:03:25.480 --> 00:03:31.131
They had some really silly way
that they wanted me to solve it.

48
00:03:32.416 --> 00:03:37.765
So anyway, but
it was a derivative of this answer.

49
00:03:37.765 --> 00:03:41.915
So two things I would just
wanna say about this, one,

50
00:03:41.915 --> 00:03:47.372
you would not really ever have to
do this in common day-to-day code.

51
00:03:47.372 --> 00:03:50.208
I asked you to do this one, because
it was an interview question for me.

52
00:03:50.208 --> 00:03:52.533
And two, I think it's a good thing
to take an abstract idea and

53
00:03:52.533 --> 00:03:53.490
translate it into code.

54
00:03:53.490 --> 00:03:56.670
I think those are both helpful things.

55
00:03:56.670 --> 00:04:00.248
Cuz there's other really
easy ways of doing this.

56
00:04:00.248 --> 00:04:04.840
I'll show you kind of
a cheater way of doing this.

57
00:04:04.840 --> 00:04:09.936
Let's just say, There's

58
00:04:09.936 --> 00:04:16.080
a function in JavaScript called,
Pad left, I believe.

59
00:04:16.080 --> 00:04:19.506
Let's try the padStart.

60
00:04:19.506 --> 00:04:21.525
So I can make an empty string here.

61
00:04:21.525 --> 00:04:24.740
I'll talk about built-in
functions here in just a second.

62
00:04:24.740 --> 00:04:29.120
But there's a thing here called padStart.

63
00:04:29.120 --> 00:04:34.731
And I can give this a number
of times to repeat and

64
00:04:34.731 --> 00:04:37.970
fill string of character.

65
00:04:41.366 --> 00:04:48.375
And I believe this will do the exact
same thing it does, kind of wild, right?

66
00:04:50.027 --> 00:04:52.569
So we'll talk about built-ins
here in just a second.

67
00:04:52.569 --> 00:04:56.193
A built is just a strings have
a bunch of functions built into them.

68
00:04:56.193 --> 00:04:58.976
We'll talk about what functions out
here in just a second as well, but

69
00:04:58.976 --> 00:05:00.072
console log is a function.

70
00:05:00.072 --> 00:05:03.318
And we can just tell it how many
times we want it to repeat and

71
00:05:03.318 --> 00:05:04.856
what character to repeat.

72
00:05:04.856 --> 00:05:07.761
So then, the browser just does it for
you, right,

73
00:05:07.761 --> 00:05:10.744
and you don't actually have
to write a loop to do it.

74
00:05:10.744 --> 00:05:12.884
My point being here not necessarily this,

75
00:05:12.884 --> 00:05:17.232
I'll explain throughout the rest of the
course, you'll understand how this works.

76
00:05:17.232 --> 00:05:20.811
But my point here that I'm trying to
demonstrate to you is that there's so

77
00:05:20.811 --> 00:05:21.860
many ways to do this.

78
00:05:21.860 --> 00:05:24.721
And there's usually a way that the browser
could just do a lot of this stuff for you.

79
00:05:28.995 --> 00:05:31.902
All right, any questions?

80
00:05:31.902 --> 00:05:35.758
This was the answer I was
hoping you'd come to, this one.

81
00:05:35.758 --> 00:05:40.871
Not line 12, line 12 is super clever,
Not the most clear code.

82
00:05:51.470 --> 00:05:59.496
So again, down here,
Here's my answer here.

83
00:06:04.390 --> 00:06:05.597
So many poodles.

