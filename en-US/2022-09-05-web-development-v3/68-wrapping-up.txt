[00:00:00]
>> I just wanted to throw out a couple more things here of places where I think you can go from here. I think I've already probably mentioned almost all of these. So first one, round out yourself by going to the Frontend Masters Learning Path. They keep these up to date.

[00:00:14]
Pick the one that applies to you. If you're taking this course, you probably wanna take the beginner one. You got more CSS coming. You got more JavaScript coming. Bianca's a great teacher, talks about fundamentals. And then Jon down here will talk to you about accessibility. And then there's more stuff to go on from here, right?

[00:00:34]
From there, you can go into things like deep React, more CSS, the React stuff. That's kind of all the various different places for you to go. Frontend Masters does a really good job of guiding you where you're supposed to go. Just some personal favorite courses of mine. If that commandline stuff felt uncomfortable, I have a whole course on it.

[00:00:55]
I quite like it. [LAUGH] I wrote it. Git, you should learn Nina's stuff. Jem will teach you deploying your code. Scott's Moss's course on Node.js is really good if you wanna go backend. If you wanna try a framework, React is really good. I also teach that course. But the Vue, Svelte, and Angular ones are really good too.

[00:01:17]
And then if you wanna get more into computer science, I also have a course on that where we use JavaScript to do computer science stuff. I'd probably do a bit more JavaScript stuff before hopping into computer science. But that's really useful, particularly for people that wanna interview for Frontend developer jobs.

[00:01:36]
So please tweet at me, I'm always happy to hear what people think. Unless you didn't like it, and in which case, tweet that at Jem Young. He needs to probably hear that. Best of luck on your continued coding path. At this point, I think we can take any sort of question you wanna ask me.

[00:01:54]
I know some people had some career questions that they wanna ask me. So any sort of career advice, or dating advice, I can also do that. Dog care, very passionate about those sorts of things, Normal stuff. Anyway, what kind of questions do people have? What are my thoughts on working at a big company versus a startup?

[00:02:22]
I've done both, obviously. I worked at a really small series a startup in Utah, once upon a time. The biggest company by far would be Microsoft. I was really early at Reddit. I was employee 29 at Reddit, so very early there. Obviously, Reddit's huge now. I think they have over a thousand employees.

[00:02:46]
And then I've worked at Stripe, which is medium to large sized startup. When I worked at Netflix, it was about the same size of Stripe as now. I've enjoyed both. And I will say that different people are very much drawn to different things. I worked with a lot of people that were just stoked to work at Microsoft, and they've been at Microsoft for 25 years.

[00:03:08]
And that's been their dream, they have no other dream, and I think that's great. Microsoft is a absolutely wonderful place to work. I really enjoyed my time there. And I've also worked with people that just hop from small startup to small startup, and are like, I can't deal with bureaucracy, which, big companies is just bureaucracy.

[00:03:24]
That's kinda how it works. So what's my advice there? The time when I learned the most in my career was when I worked at Reddit by far, because it was such a small company. I had to learn everything by trial by fire, because either I fixed something, or we had downtime.

[00:03:44]
And so I had to fix everything. I had to fix the things that I was not comfortable fixing. I had to learn a bunch of stuff just because it was necessary, right? Very stressful [LAUGH], and it's hard to recommend people to do that, because not everyone's in a position that that's acceptable, right?

[00:04:05]
I could not do that now because I have a young child, and I could not abandon my wife like that. And not to imply that other people won't do it, I couldn't today do that, what I did back then. But back then, my wife was working a lot.

[00:04:19]
I was working a lot, and that was totally okay. And while I burned out because I worked too much, at the same time, I'm where I am in my career today because I worked as hard as I did then. So I have a super healthy respect to people.

[00:04:33]
So draw your boundaries, only work your 40 hours a week and stick to that. That's where I am today. I really try not to work more than 40 hours a week. But Brian eight years ago just worked all the time and loved it. I actually really enjoyed it, but that's not for everybody.

[00:04:53]
So I'm kind of trying to delineate for this person that asked, Startups versus, At big companies. When I was at Microsoft, and I had to take a week off, either because I was burned out, or because Reed was having a bad week or something. Reed's my son. Pretty easy to do, right?

[00:05:18]
There was enough people. There was enough redundancy of responsibilities that could mostly be papered over fairly well. If I did that at Reddit, we were gonna have downtime, because I was essential to everything going on there, right? So you need to figure out where you fit in that picture, right?

[00:05:38]
There's a total acceptable thing that where you could go work at your local. I worked for a TV station. That was my first development job. You can work there for 30 years. You can make decent money and you can be really happy, and I have no judgment for anyone in that position.

[00:05:52]
You could jump from startup to startup and just work your tail off for years and years and years and have the best time as well. And you just need to ask yourself, where am I going, and what do I want? So I really enjoyed both my experiences, I wouldn't trade it.

[00:06:07]
I think I'm kind of anxious to get into something smaller again, eventually. I'm very happy at Stripe at the moment. Cuz I enjoy wearing all of the hats, right? I enjoy having to do frontend and backend and ops, and sales and marketing, and product management, and all those things.

[00:06:24]
When you're at a big company, you typically have very narrow focus. I work just on the TV app, which is what I did at Netflix, right? That's all I did, so I just worked on the TV app for a long time. So it's kind of a meandering line of thought, but yeah, I think I feel pretty good about that.

[00:06:44]

>> Just interesting, there was a debate by Jem Young. Or he kinda kicked it off around trying to go from a junior developer all the way to a senior, and how he thinks it's pretty difficult to essentially working outside of your job, working nights and weekends.
>> Yep.

[00:07:05]

>> To kind of amplify, try new things, learn.
>> Absolutely, so the question that was asked was how does one get from a junior to a mid or senior developer? And people have varying opinions on this. And this is kind of related to my last answer. Way earlier in my career, I would go home at night after coding all day, and I'd be still be stoked about coding, and I would code at night, right?

[00:07:35]
I would try new frameworks. I'd try new techniques, I'd read books, I'd watch videos, I'd watch things like Frontend Masters. I did all those things because I was excited about it, right? I genuinely found it refreshing to code outside of my day-to-day work, cuz I found out when you're at work, you have to use their framework, and you're dealing with legacy code.

[00:07:54]
And you don't really get to work on new creative expressions of coding. When I would go home and code at night, I'd get to work on what I wanted to work on, and I could throw things away, and I wouldn't have to work on legacy, right? So that made me really excited.

[00:08:09]
And that was incredibly fruitful for my early career. So a good example of that was when I was at Reddit, I had been working in Angular, old Angular, or Angular 0.8, or something like that. And I had a friend at work introduce me to it, was this like, hey, there's this new thing from Facebook that came out called React.

[00:08:32]
You should give it a shot, right? And so I went home and I just had a code bender on it, wrote a bunch of code in it. I got so excited about it that actually, at night outside of my day job, rewrote our entire checkout process in React, which, again, this was 2014 or something.

[00:08:49]
I think it was 2014, which at that time was incredibly early for React, abnormally early. Reddit was one of the first companies outside of Facebook to run React, thanks to me working on this so early. And that got me to be a React expert really early in my career, which then ended up being really fruitful for me that got me a job at Netflix.

[00:09:14]
And then that got me a job at LinkedIn, and all these kind of different places like that. This would've never happened if I didn't have that kind of lock myself in a room and code kind of mentality. Another really good example of that is when in my very first job, I would teach myself Node at night, cuz I was doing PHP at my job.

[00:09:33]
And when I was interviewing for my first startup job, the guy just asked me, was like, what do you do? Tell me about stuff that you've done recently. And I told him, I was like, hey, check out all this Node stuff I just did this weekend. And that really impressed the CTO of this company who then ended up hiring me largely based on this conversation that we had.

[00:09:52]
So I wanna kind of just delineate I did it cuz I wanted to, right? No one told me that I had to do it. I wasn't doing it because I felt I had to do it to advance my career. Also, undeniably, it advanced my career. So I encourage you, when you have moments where you feel like doing things, when you feel like doing codes like that, chase that dragon, right?

[00:10:17]
Have a good time and enjoy yourself, and express things, and make stupid apps. It's one of my favorite things that I see people doing on Twitter, is they make the most inane dumb things, just cuz it brings them joy, right? Or they'll make really fun CSS drawings. And if that brings you joy, then just lean into it and have a great time.

[00:10:38]
But if you're just like, I have to learn Python today because I need Python on my resume, it's gonna be a drag, and you're gonna burn out. I think that's a big part of this, is I really didn't burn out. This actually was fun. Instead of playing video games or watching Netflix, I was out there writing code, and I was having the same sort of fun.

[00:10:55]
It was relaxing. I don't know, I'm really hesitant about the advice that I give out there because I don't want you to burn out. I want you to continue enjoying this. I'm hoping that to this point, you've enjoyed what we've shared together, right? And if you just come out with I hate this, and I never wanna do it, then I think I've done you a disservice, right?

[00:11:16]
So you gotta find your balance, and it's gonna be very personal too. What someone else tells you is gonna work may not work for you. But I guess that's what I'm saying, is go seek your balance. Anyway, that's how I became a senior engineer really quickly in my career, is a lot of coding at night.

[00:11:34]
Cool, that is the end of the complete intro to Web Dev V3. So yeah, thanks [LAUGH].
>> [APPLAUSE]

