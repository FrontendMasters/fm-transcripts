WEBVTT

1
00:00:00.150 --> 00:00:02.650
&gt;&gt; Kyle Simpson: I'm glad you came back,
and I didn't scare you away.

2
00:00:02.650 --> 00:00:06.090
So let's talk through the solution for
this exercise.

3
00:00:06.090 --> 00:00:07.970
You may have gotten stuck on a few points,
or

4
00:00:07.970 --> 00:00:10.110
there might have been some
things that were confusing.

5
00:00:10.110 --> 00:00:14.000
So, we'll take our time and make sure that
we talk through each of these little bits.

6
00:00:14.000 --> 00:00:17.517
I'm gonna walk you through these
instructions, and then we'll switch over

7
00:00:17.517 --> 00:00:20.509
and we'll do the code, run the code,
and see those end results.

8
00:00:20.509 --> 00:00:23.834
So, you'll notice on
instruction number one it says,

9
00:00:23.834 --> 00:00:26.180
define an addFavoriteBook function.

10
00:00:26.180 --> 00:00:30.008
Well if you recall from our slides and
you probably saw it several times,

11
00:00:30.008 --> 00:00:33.130
the way we make a function is
to use the function keywords.

12
00:00:33.130 --> 00:00:37.600
So, over here in my exercise file, up here
at the top where that code comment is,

13
00:00:37.600 --> 00:00:41.170
I'm gonna take that one out and
I'm gonna actually define a function.

14
00:00:41.170 --> 00:00:46.340
We use the function keyword, and
I'm gonna say addFavoriteBook,

15
00:00:46.340 --> 00:00:49.570
and then we need to receive some input,

16
00:00:49.570 --> 00:00:53.450
it needs to receive an input,
a single parameter called bookName.

17
00:00:53.450 --> 00:00:58.300
So I'm gonna name it bookName right inside
those parentheses, that's the parameter.

18
00:00:58.300 --> 00:00:59.030
Now, just for

19
00:00:59.030 --> 00:01:03.280
the purposes of us testing, let's just
print out whatever has been passed in.

20
00:01:03.280 --> 00:01:08.240
So I'm just gonna say
console.log bookName, and

21
00:01:08.240 --> 00:01:14.390
then if we copy this code over into one of
our run environments, I'm gonna use RunJS.

22
00:01:14.390 --> 00:01:19.030
If I run that code,
you'll notice that it will print out all

23
00:01:19.030 --> 00:01:22.050
five of them because each time
addFavoriteBook was called,

24
00:01:22.050 --> 00:01:25.400
it's receiving bookName it's passed in and
then we're printing it out.

25
00:01:29.120 --> 00:01:34.110
Okay, now the second item in
the instruction says if the provided

26
00:01:34.110 --> 00:01:39.220
book name string does not have
the word Great in it with capital G,

27
00:01:39.220 --> 00:01:42.030
then that's when you add it
to the favorite books array.

28
00:01:42.030 --> 00:01:44.970
And there's several key hints
here that you wanna look at.

29
00:01:44.970 --> 00:01:49.443
Number one, the hint says, if we wanna
figure out whether one sub string is

30
00:01:49.443 --> 00:01:54.630
in a different string, then we say
someString.includes in the anotherString.

31
00:01:54.630 --> 00:01:59.810
And that'll tell us if another string is
inside of some string somewhere, okay.

32
00:01:59.810 --> 00:02:03.870
So, that's the first thing that we
wanna do, we wanna make a decision and

33
00:02:03.870 --> 00:02:07.310
remember we talked about decisions,
we can use the if statement.

34
00:02:07.310 --> 00:02:12.556
So we're gonna say if, and the thing that
we're looking for is to see if bookName,

35
00:02:12.556 --> 00:02:17.410
includes, and then the thing we
wanna check for is whether or

36
00:02:17.410 --> 00:02:22.190
not it includes the word Great, and
that's when we're gonna do something.

37
00:02:22.190 --> 00:02:26.460
But actually this is backwards
because the instructions say,

38
00:02:26.460 --> 00:02:29.390
only if it doesn't include.

39
00:02:29.390 --> 00:02:32.670
So we want to basically end up
filtering out the ones that have Great,

40
00:02:32.670 --> 00:02:34.460
we don't wanna do it
if it doesn't include.

41
00:02:34.460 --> 00:02:36.840
You might remember from our
discussion of operations,

42
00:02:36.840 --> 00:02:42.170
that the exclamation mark is how we
negate or we complement a boolean value.

43
00:02:42.170 --> 00:02:46.260
So if this one would have returned true,
we want it to be false, and

44
00:02:46.260 --> 00:02:48.810
if it would have returned false,
we wanted to return true.

45
00:02:48.810 --> 00:02:52.050
So we're gonna flip it by putting
the exclamation mark there.

46
00:02:52.050 --> 00:02:54.320
So now I'm just gonna do that
console log statement again,

47
00:02:54.320 --> 00:02:57.220
we'll just make sure this time,
that we're only

48
00:02:57.220 --> 00:03:02.100
printing out the three book names
that don't have the word Great in it.

49
00:03:02.100 --> 00:03:06.260
So we'll switch back over to our run
environment, we'll run this, and

50
00:03:06.260 --> 00:03:09.780
we should see only the three book
names then we've filtered out,

51
00:03:09.780 --> 00:03:13.785
we have not printed out Great Gatsby or
Great Expectations.

52
00:03:13.785 --> 00:03:18.255
Okay, so that allows us to see we
validated that our if statement decision

53
00:03:18.255 --> 00:03:20.214
logic, is working correctly.

54
00:03:22.659 --> 00:03:26.245
&gt;&gt; Kyle Simpson: We can do the same thing
in a Chrome console as we're doing in

55
00:03:26.245 --> 00:03:26.759
RunJS.

56
00:03:26.759 --> 00:03:30.864
All right now, the item says that we
should be adding it to the favoriteBooks

57
00:03:30.864 --> 00:03:35.049
array, not just printing it out, but
adding it to the favoriteBooks array.

58
00:03:35.049 --> 00:03:39.153
And here, this third hint tells us
how to put something into array,

59
00:03:39.153 --> 00:03:41.889
we give the array name and
then we say .push,

60
00:03:41.889 --> 00:03:44.711
and we give it the value
that we want to push in.

61
00:03:44.711 --> 00:03:49.998
So let's do that,
instead of console.log, let's actually

62
00:03:49.998 --> 00:03:55.084
just say favoriteBooks.push,
and what we want to push in,

63
00:03:55.084 --> 00:03:59.891
is the book name that's been passed to us,
so bookName.

64
00:03:59.891 --> 00:04:04.632
Now, after all five of those have
been called, then the favorite books

65
00:04:04.632 --> 00:04:09.547
array should have only the three in
it that don't have the great keyword.

66
00:04:09.547 --> 00:04:13.607
So we could quickly check
whether that was true by just

67
00:04:13.607 --> 00:04:17.980
printing out the contents
of favorite books.

68
00:04:17.980 --> 00:04:19.750
After we've made these five calls,

69
00:04:19.750 --> 00:04:23.130
favorite books should have all
three of them contained in it.

70
00:04:23.130 --> 00:04:27.700
Let's try that, I'll copy that code
come back over here to RunJS, and when I

71
00:04:27.700 --> 00:04:32.180
run this code we should see it print
an array with those three strings in it.

72
00:04:33.660 --> 00:04:37.319
And sure enough now we see an array, with
those three strings having been included.

73
00:04:40.190 --> 00:04:43.134
&gt;&gt; Kyle Simpson: Okay,
back to the instructions.

74
00:04:43.134 --> 00:04:48.150
Next item in our instruction said we
wanna make a printFavoriteBooks function.

75
00:04:48.150 --> 00:04:51.240
We already know how to do functions,
that's just the function keyword.

76
00:04:51.240 --> 00:04:55.450
This one's not gonna receive any
parameters, so let's try our hand at that.

77
00:04:55.450 --> 00:04:59.440
In this TODO statement, in place of
the TODO statement we're gonna write

78
00:04:59.440 --> 00:05:05.160
a function called printFavoriteBooks.

79
00:05:05.160 --> 00:05:08.880
And it doesn't receive any parameters, so
we just do that open close parentheses.

80
00:05:09.980 --> 00:05:12.700
Now I don't wanna forget to
take this console.log out, so

81
00:05:12.700 --> 00:05:14.460
I'll remember to take that one out.

82
00:05:14.460 --> 00:05:17.040
We have our printFavoriteBooks function,
and

83
00:05:17.040 --> 00:05:20.960
this is going to be called after
we've done the addFavoriteBooks.

84
00:05:20.960 --> 00:05:26.670
So let's do that down here,
let's actually call printFavoriteBooks.

85
00:05:26.670 --> 00:05:29.920
And you remember that the way that
we execute a function, is we put

86
00:05:29.920 --> 00:05:34.780
a parentheses right after the variable
name, that’s how we execute a function.

87
00:05:34.780 --> 00:05:39.820
Now the instructions tell us what
printFavoriteBooks needs to do.

88
00:05:39.820 --> 00:05:45.780
It first needs to print out a message,
that says Favorite Books: and

89
00:05:45.780 --> 00:05:51.740
then it’s gonna have a number for
how many are in that favorite books array.

90
00:05:51.740 --> 00:05:55.371
All right, so
let's do a console.log statement, and

91
00:05:55.371 --> 00:05:58.590
we're going to be printing something out.

92
00:05:58.590 --> 00:06:03.900
And I'm gonna use, because the hints tell
us to use the back-tick kind of string,

93
00:06:03.900 --> 00:06:07.610
that will allow us to include
a value inside of another string.

94
00:06:07.610 --> 00:06:12.150
So let's use back-tick, and
then inside of this string,

95
00:06:12.150 --> 00:06:17.170
we're gonna say,
Favorite Books, with a colon.

96
00:06:17.170 --> 00:06:20.560
And then the way that we add
a value inside of a string,

97
00:06:20.560 --> 00:06:25.330
the way we drop that value in,
is we do the ${} delimiting.

98
00:06:25.330 --> 00:06:31.540
And then inside of it is the expression,
where we want to print out which,

99
00:06:31.540 --> 00:06:33.540
what is the number of the books?

100
00:06:33.540 --> 00:06:35.360
And the way we know
the number of the books,

101
00:06:35.360 --> 00:06:37.550
is gonna be the length of this array.

102
00:06:37.550 --> 00:06:40.926
So we wanna say, FavoriteBooks.length,

103
00:06:40.926 --> 00:06:45.420
that's gonna be the message
that we wanna print out.

104
00:06:45.420 --> 00:06:49.380
Let's just test this code as is,
and make sure it should print out,

105
00:06:49.380 --> 00:06:52.169
FavoriteBooks: 3, whenever we execute it.

106
00:06:52.169 --> 00:06:55.726
So I'll come over here,
and execute our code, and

107
00:06:55.726 --> 00:06:59.544
sure enough we get the message,
FavoriteBooks:3.

108
00:06:59.544 --> 00:07:03.220
Okay, now, back to the instructions.

109
00:07:03.220 --> 00:07:07.849
It says, Finally, printFavoriteBooks()
should loop through the FavoriteBooks

110
00:07:07.849 --> 00:07:11.870
array, there's our keyword,
we're gonna be using a loop.

111
00:07:11.870 --> 00:07:15.326
It's gonna loop through that favoriteBooks
array, and print out each value.

112
00:07:15.326 --> 00:07:19.210
And we wanna make sure we've already
done this part, we are calling

113
00:07:19.210 --> 00:07:23.988
the printFavoriteBooks function, and
it gives us a hint here which is critical.

114
00:07:23.988 --> 00:07:29.560
It says, use the for of form,
remember in the slides, a few slides back.

115
00:07:29.560 --> 00:07:30.990
There were two ways of doing a for

116
00:07:30.990 --> 00:07:34.100
loop, one was where we were
counting with an i variable.

117
00:07:34.100 --> 00:07:36.960
And one was where we were just
getting all the values in an array.

118
00:07:36.960 --> 00:07:40.779
It's gonna be easier for our purposes
to use this second form of that,

119
00:07:40.779 --> 00:07:42.279
which was this for of loop.

120
00:07:42.279 --> 00:07:47.349
So let's do that, let's go back to
our printFavoriteBooks() function,

121
00:07:47.349 --> 00:07:51.172
and we'll type in for, and
we need to declare a variable.

122
00:07:51.172 --> 00:07:54.514
So we'll say, let, and
we’re using let here just so

123
00:07:54.514 --> 00:07:59.260
we add the variable only in the for
loop instead of the function.

124
00:07:59.260 --> 00:08:02.020
Either way, you could’ve used a var if
you prefer, but I’m gonna use a let.

125
00:08:02.020 --> 00:08:08.920
We’re gonna say for let, and
then we wanna say bookName of,

126
00:08:08.920 --> 00:08:13.020
and then the thing that we’re gonna get
all the values out of is, favoriteBooks.

127
00:08:13.020 --> 00:08:20.549
That's our array, so we're gonna say for,
let bookName of favoriteBooks.

128
00:08:20.549 --> 00:08:25.889
And then we're gonna do console.log,
bookName.

129
00:08:28.274 --> 00:08:29.768
&gt;&gt; Kyle Simpson: Now, if we test this,

130
00:08:29.768 --> 00:08:33.791
we're expecting it to first
print out favoriteBooks: 3.

131
00:08:33.791 --> 00:08:37.139
And then one line at a time, we're
expecting it to print out only the three

132
00:08:37.139 --> 00:08:39.805
books that are in our favoriteBooks array.

133
00:08:39.805 --> 00:08:42.995
If we've done our jobs correctly,
this application should work now.

134
00:08:42.995 --> 00:08:47.046
So I'll switch over,
one last time, to RunJS.

135
00:08:47.046 --> 00:08:52.721
And we will run this code, and
there we go, it says Favorite Books: 3.

136
00:08:52.721 --> 00:08:54.820
Let me move it over so
it's a little easier to see.

137
00:08:54.820 --> 00:08:59.880
Favorite Books: 3, A Song of Ice and Fire,
Crime &amp; Punishment, and You Don't Know JS.

138
00:08:59.880 --> 00:09:02.550
Those are clearly the three best books,
that have ever been written.

139
00:09:04.140 --> 00:09:08.460
All right, so
hopefully you're feeling a lot more

140
00:09:08.460 --> 00:09:11.980
comfortable with some of these
basic programming principles.

141
00:09:11.980 --> 00:09:15.300
If things were a little bit confusing for
you, that's okay.

142
00:09:15.300 --> 00:09:18.010
Try this again,
try the exercise from scratch,

143
00:09:18.010 --> 00:09:22.675
just start over from the empty file and
try going through the instructions.

144
00:09:22.675 --> 00:09:26.505
Maybe try, if you were able
to get the exercise working

145
00:09:26.505 --> 00:09:29.465
up to the point of the solution,
maybe try adding something,

146
00:09:29.465 --> 00:09:33.532
maybe try add some more books, or
add some more calls to add favorite books.

147
00:09:33.532 --> 00:09:38.402
Or maybe try filtering out a different
value from the book name, or

148
00:09:38.402 --> 00:09:40.912
something like that,
play around with this code a little bit.

149
00:09:40.912 --> 00:09:43.697
Don't be afraid to actually
write some JavaScript,

150
00:09:43.697 --> 00:09:47.772
because there really is no better way
of learning how to code JavaScript.

