WEBVTT

1
00:00:00.000 --> 00:00:01.850
&gt;&gt; Kyle Simpson: I've used these terms,
expressions and

2
00:00:01.850 --> 00:00:03.210
statements now several times.

3
00:00:03.210 --> 00:00:09.010
Let's make sure we're very clear about
what an expression or a statement is.

4
00:00:09.010 --> 00:00:12.850
Just like in the English language,
an expression is like a phrase,

5
00:00:12.850 --> 00:00:20.280
like if you say the sentence,
I am a friend who likes to play ping pong.

6
00:00:20.280 --> 00:00:24.070
The phrase who likes to play ping
pong is not a whole sentence.

7
00:00:24.070 --> 00:00:25.580
It's just a part of a sentence.

8
00:00:25.580 --> 00:00:28.590
It's a phrase,
it's a fragment if you will.

9
00:00:28.590 --> 00:00:31.252
In programming speak,
we'd called that an expression.

10
00:00:31.252 --> 00:00:35.646
And then we take the entire thing from
the very beginning to the final period or

11
00:00:35.646 --> 00:00:36.602
question mark.

12
00:00:36.602 --> 00:00:38.405
And we call that whole thing a sentence,

13
00:00:38.405 --> 00:00:41.150
and in programming we
call that a statement.

14
00:00:41.150 --> 00:00:44.190
A lot of times, there's not a big
distinction between expressions and

15
00:00:44.190 --> 00:00:44.910
statements.

16
00:00:44.910 --> 00:00:49.120
But sometimes it is kind of an important
deal to keep them separate.

17
00:00:49.120 --> 00:00:55.120
So in line one, we have a statement
that begins with this var keyword,

18
00:00:55.120 --> 00:00:58.810
which by the way, that's how we tell it,
I wanna make a variable.

19
00:00:58.810 --> 00:01:02.150
And then it ends like a period
in an English sentence.

20
00:01:02.150 --> 00:01:04.190
It ends with the semicolon.

21
00:01:04.190 --> 00:01:05.700
So that's a whole statement,

22
00:01:05.700 --> 00:01:10.440
it's a whole sentence that is saying
something that we want to have happen.

23
00:01:10.440 --> 00:01:15.708
But there are parts to it and in
particular, one of the parts is that age

24
00:01:15.708 --> 00:01:20.871
equals 39 part, that's what we
call an assignment expression.

25
00:01:20.871 --> 00:01:22.800
So we can think of that as a phrase or

26
00:01:22.800 --> 00:01:27.030
an expression inside of the whole
thing which is the statement.

27
00:01:27.030 --> 00:01:30.540
And on line three we see an even
more complex sort of statement.

28
00:01:30.540 --> 00:01:34.620
Starts with the age at the beginning,
ends with the semicolon at the end.

29
00:01:34.620 --> 00:01:37.750
Almost all statements
will end with a semicolon

30
00:01:37.750 --> 00:01:41.080
unless you're dealing with a coding
style which likes to leave those off.

31
00:01:41.080 --> 00:01:43.020
It'd be kind of like if you
were reading Shakespeare and

32
00:01:43.020 --> 00:01:45.070
he had no punctuation in it.

33
00:01:45.070 --> 00:01:47.380
You might get a little confused
where the sentences are.

34
00:01:47.380 --> 00:01:50.700
So some people like to do that, but most
people like to put the semicolon there.

35
00:01:50.700 --> 00:01:53.780
So that's where you know it's
at the end of the sentence,

36
00:01:53.780 --> 00:01:55.490
it's at the end of the statement.

37
00:01:55.490 --> 00:01:57.030
But what are the expressions here?

38
00:01:57.030 --> 00:02:00.530
It turns out that there's several,
more than you might have realized,

39
00:02:00.530 --> 00:02:02.650
in terms of counting things.

40
00:02:02.650 --> 00:02:03.620
So let's look at it.

41
00:02:03.620 --> 00:02:07.600
The number 2 on the right-hand side,
that is an expression.

42
00:02:07.600 --> 00:02:10.320
It happens to be called
a literal expression.

43
00:02:10.320 --> 00:02:11.960
Remember we have those primitive values?

44
00:02:11.960 --> 00:02:15.250
Those are called literals, so
the number 2 is an expression.

45
00:02:15.250 --> 00:02:20.300
And the variable age to the very left of
it, that's also an expression, cuz we

46
00:02:20.300 --> 00:02:24.090
need to go get whatever's in it, in this
case the 39, and do something with it.

47
00:02:25.370 --> 00:02:28.800
So we have two expressions already, and
then you'll notice those parenthesis.

48
00:02:28.800 --> 00:02:30.290
Remember, I was just
talking about grouping.

49
00:02:30.290 --> 00:02:34.810
Well, we've got a set of parenthesis
wrapped around age times 2,

50
00:02:34.810 --> 00:02:38.880
times being the multiplication operator,
that little asterisk there.

51
00:02:38.880 --> 00:02:43.010
That age times 2 with the parenthesis
around it, that's another expression, so

52
00:02:43.010 --> 00:02:44.880
now we have three expressions.

53
00:02:44.880 --> 00:02:50.430
And then there's an expression for the
literal 1, so we have a fourth expression.

54
00:02:50.430 --> 00:02:53.560
And then we have the expression,
1 plus, and

55
00:02:53.560 --> 00:02:58.830
then whatever age times 2 was,
and so that's a fifth expression.

56
00:02:58.830 --> 00:03:03.040
And then we have the age equals
whatever has been computed there,

57
00:03:03.040 --> 00:03:05.050
that's a sixth expression.

58
00:03:05.050 --> 00:03:07.970
All six of those expressions
are part of this one

59
00:03:07.970 --> 00:03:13.440
single sentence statement that
we call a programming statement.

60
00:03:13.440 --> 00:03:16.350
Now again, it's not always that
important that you like go and

61
00:03:16.350 --> 00:03:17.630
count all of the expressions.

62
00:03:17.630 --> 00:03:22.215
But it's at least important that you be
aware of the idea that a single statement

63
00:03:22.215 --> 00:03:25.440
is often built up with lots
of individual expressions.

64
00:03:25.440 --> 00:03:28.582
All right, let's try out those
expressions and statements,

65
00:03:28.582 --> 00:03:31.540
and make sure we see how
they're being evaluated.

66
00:03:31.540 --> 00:03:35.157
If I run this code,
you'll see that it's giving us age 79.

67
00:03:35.157 --> 00:03:41.319
If I were to take that specific expression
and just ask what was age times 2.

68
00:03:41.319 --> 00:03:44.926
Let me comment that out for
a minute, if I ran age times 2,

69
00:03:44.926 --> 00:03:47.380
you're gonna notice that it was 78.

70
00:03:47.380 --> 00:03:50.742
And then that's when we
add it to one to get 79.

71
00:03:50.742 --> 00:03:55.420
And if I say age times 3, now of course
we're gonna get a different age outputted.

