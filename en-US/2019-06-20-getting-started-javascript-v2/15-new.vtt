WEBVTT

1
00:00:00.070 --> 00:00:04.080
&gt;&gt; Kyle Simpson: Now there are built in
fundamental objects that we wanna look at.

2
00:00:04.080 --> 00:00:07.970
And many of these are ones that
actually come historically,

3
00:00:07.970 --> 00:00:10.610
they were kinda copied
from a language like Java.

4
00:00:10.610 --> 00:00:14.650
And that's why they all have capital
letters like capital O Object and

5
00:00:14.650 --> 00:00:17.060
capital A Array and F Function.

6
00:00:17.060 --> 00:00:21.090
Those kind of look like they do the class
names from a language like a Java or

7
00:00:21.090 --> 00:00:22.560
maybe a C++.

8
00:00:22.560 --> 00:00:26.050
And in JavaScript,
we have those they create

9
00:00:26.050 --> 00:00:30.470
object wrappers around these values,
representations of the values.

10
00:00:30.470 --> 00:00:36.180
And we want to use the new keyword
to instantiate instances of those.

11
00:00:36.180 --> 00:00:40.110
But we have some other fundamental objects
that we don't want to use the new keyword.

12
00:00:40.110 --> 00:00:45.300
Specifically string number and boolean,
those we want to use those as functions.

13
00:00:45.300 --> 00:00:47.570
We don't wanna put the new
keyword in front of them.

14
00:00:47.570 --> 00:00:50.520
Because if we call string or number or

15
00:00:50.520 --> 00:00:54.640
boolean with some value,
it actually changes it into that type.

16
00:00:54.640 --> 00:00:58.530
And in just a little bit, we're gonna be
talking about changing the types of our

17
00:00:58.530 --> 00:01:02.450
values if we have a string and we want
to make it into a number or vice versa.

18
00:01:02.450 --> 00:01:05.200
So those three turned
out to be really useful

19
00:01:05.200 --> 00:01:08.680
in what we're gonna call type conversion,
conversion of a type.

20
00:01:10.060 --> 00:01:14.710
Here's an example of using the new
in front of one of those constructor

21
00:01:14.710 --> 00:01:16.780
forms of a fundamental object.

22
00:01:16.780 --> 00:01:21.484
Saying new capital D Date,
that's how we can make a date object and

23
00:01:21.484 --> 00:01:26.104
then use something like the toUTCString
method to represent this

24
00:01:26.104 --> 00:01:29.380
long form of that date and
time of that object.

25
00:01:29.380 --> 00:01:34.371
But then you will notice on line 5 I'm
using capital S String as a function

26
00:01:34.371 --> 00:01:38.557
to convert something that is
a number like my college GPA, and

27
00:01:38.557 --> 00:01:43.171
yes that's actually is the GPA that
I graduated with from college.

28
00:01:43.171 --> 00:01:46.044
Then that, you can take your
numeric form of the GPA and

29
00:01:46.044 --> 00:01:49.231
turn into a string,
that's why in the comments on line six,

30
00:01:49.231 --> 00:01:53.230
it's actually got quotes around
it because now it's a string.

31
00:01:53.230 --> 00:01:56.650
So using new in front of the fundamental
objects where we wanna make object

32
00:01:56.650 --> 00:02:01.170
representations and skipping the new
keyword whenever we wanna call it to do

33
00:02:01.170 --> 00:02:03.080
a type conversion,
like we're doing on my font.

