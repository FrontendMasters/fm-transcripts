WEBVTT

1
00:00:00.158 --> 00:00:02.963
&gt;&gt; Josh Long: So thymeleaf is one of
a half a dozen different supported

2
00:00:02.963 --> 00:00:05.200
server-side templating technologies.

3
00:00:05.200 --> 00:00:07.680
I'm going to create a server
side template here called Users.

4
00:00:07.680 --> 00:00:11.160
I'm gonna paste all this in there,
right, so I've just got this.

5
00:00:11.160 --> 00:00:13.137
I'm not going to write JavaScript for

6
00:00:13.137 --> 00:00:15.680
you live on stage because
I respect you too much.

7
00:00:17.680 --> 00:00:22.255
But basically it's just there,
It's a table, ID name, username,

8
00:00:22.255 --> 00:00:24.280
street, blah, blah, blah.

9
00:00:24.280 --> 00:00:27.939
So for each user in the attribute
variable called users in the model,

10
00:00:27.939 --> 00:00:30.411
render this table cell,
and then that's it.

11
00:00:30.411 --> 00:00:33.030
Okay, so now we go back to our code here.

12
00:00:33.030 --> 00:00:38.050
I'll create an MVC user
class MVC controller.

13
00:00:38.050 --> 00:00:41.810
And notice that I don't have
ResponseBody here, right?

14
00:00:41.810 --> 00:00:45.396
ResponseBody tells
Spring MVC to not interpret

15
00:00:45.396 --> 00:00:50.450
the return value of one of these
methods as the name of a view.

16
00:00:50.450 --> 00:00:55.315
So normally if I return a string from
one of these controller handler methods,

17
00:00:55.315 --> 00:00:58.720
that tells Spring MVC to look
up a view by a convention.

18
00:00:58.720 --> 00:01:03.360
So it'll look up users by source
main resources, blah HTML.

19
00:01:03.360 --> 00:01:05.712
So this'll get turned into,
behind the scenes,

20
00:01:05.712 --> 00:01:08.080
there's something called a ViewResolver.

21
00:01:08.080 --> 00:01:13.661
Src/main/resources/templates +

22
00:01:13.661 --> 00:01:19.075
BLAH + .html, okay, there you go.

23
00:01:19.075 --> 00:01:22.863
So this is the convention and
if you don't have response body,

24
00:01:22.863 --> 00:01:26.570
then Spring MVC is going to be looking for
a view name.

25
00:01:26.570 --> 00:01:30.552
So when you do the response body, it tells
Spring, okay, I might have some other

26
00:01:30.552 --> 00:01:34.490
intent for this response that's coming
from this controller handler method.

27
00:01:34.490 --> 00:01:39.370
And then usually that's just the object to
be rendered into JSON or XML or whatever.

28
00:01:39.370 --> 00:01:40.421
So what about the data?

29
00:01:40.421 --> 00:01:45.780
So I'm going to inject a model,
okay, there we go.

30
00:01:45.780 --> 00:01:51.041
Import the class, here we go,
and I'll say model.addAttributes,

31
00:01:51.041 --> 00:01:55.780
users, and
I'm gonna use the declarative client.

32
00:01:55.780 --> 00:01:59.310
One of the nice things I love about
IntelliJ is that it has this feature where

33
00:01:59.310 --> 00:01:59.991
I can do this.

34
00:01:59.991 --> 00:02:03.940
I can say declarative users, client users.

35
00:02:07.060 --> 00:02:09.447
See how that automatically added
that constructor for me and

36
00:02:09.447 --> 00:02:11.195
the dependency injected type and all that.

37
00:02:14.525 --> 00:02:19.400
So, Is that gonna work?

38
00:02:24.660 --> 00:02:26.680
It goes in the templates folder.

39
00:02:26.680 --> 00:02:30.600
The IDE tried to warn me,
but I didn't listen.

40
00:02:30.600 --> 00:02:33.960
Okay, so there you go,
simple static server side stuff.

41
00:02:33.960 --> 00:02:37.000
I know most of us are doing client
side stuff, but this is still here.

42
00:02:37.000 --> 00:02:40.334
And I did a whole livestream with

43
00:02:40.334 --> 00:02:45.880
the person who created htmx a month ago or
two.

44
00:02:45.880 --> 00:02:48.520
You can actually use this
server side template support.

45
00:02:48.520 --> 00:02:52.040
Plus there's good support for
rendering fragments in Spring.

46
00:02:52.040 --> 00:02:56.650
So if I want to send two out of
band HTML bodies or chunks and

47
00:02:56.650 --> 00:03:01.080
have them replace different
islands at the same time.

48
00:03:01.080 --> 00:03:03.929
You can do that with HTML spring mvc.

49
00:03:03.929 --> 00:03:05.870
You can actually return a collection.

50
00:03:05.870 --> 00:03:08.772
Instead of a string, you return
a collection of model and view or

51
00:03:08.772 --> 00:03:09.590
a collection of.

52
00:03:09.590 --> 00:03:11.440
I think you can do a collection
of string as well, but

53
00:03:11.440 --> 00:03:13.260
multiple views will get
rendered at the same time.

