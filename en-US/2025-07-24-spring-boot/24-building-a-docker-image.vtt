WEBVTT

1
00:00:00.160 --> 00:00:00.840
&gt;&gt; Josh Long: Okay, so that's this.

2
00:00:00.840 --> 00:00:02.665
That's one thing you can do is graalvm,
and

3
00:00:02.665 --> 00:00:04.400
I think that's a worthwhile thing to do.

4
00:00:04.400 --> 00:00:07.040
The other thing you might want to do
is to turn it into a native image.

5
00:00:07.040 --> 00:00:11.124
So you can do this even if you don't
have GRAALVM on your local machine.

6
00:00:11.124 --> 00:00:13.520
So, sorry, we're going to turn
it into a Docker image now.

7
00:00:13.520 --> 00:00:18.546
So what we're going to do
is we're going to say, d,

8
00:00:18.546 --> 00:00:24.480
skip tests, P,
native spring boot colon, build image.

9
00:00:24.480 --> 00:00:25.520
Can you all do this?

10
00:00:27.290 --> 00:00:29.930
Okay, this right here.

11
00:00:35.930 --> 00:00:38.862
Trying to copy and paste it,
but it's going poorly.

12
00:00:38.862 --> 00:00:43.557
There you go, okay.

13
00:00:43.557 --> 00:00:45.790
Do that in the root of your project and

14
00:00:45.790 --> 00:00:49.189
that'll build you a Docker
image that's also native.

15
00:00:49.189 --> 00:00:51.682
And even if you don't have GRAALVM
installed in your local Mac,

16
00:00:51.682 --> 00:00:53.390
this should still work, as far as I know.

17
00:00:53.390 --> 00:00:58.259
So how do we do everybody

18
00:00:58.259 --> 00:01:02.401
get a Docker image?

19
00:01:02.401 --> 00:01:03.230
This will take a little while.

20
00:01:03.230 --> 00:01:04.430
Takes a minute or two.

21
00:01:04.430 --> 00:01:07.253
Because it's going to do the native
image compilation inside of Docker,

22
00:01:07.253 --> 00:01:09.950
you're going to want to start
creating some environment variables.

23
00:01:11.470 --> 00:01:17.312
So export, spring, data source,

24
00:01:17.312 --> 00:01:25.240
URL equals username
equals password equals.

25
00:01:25.240 --> 00:01:27.880
It'll be secret, it'll be my user.

26
00:01:27.880 --> 00:01:33.640
It'll be JDBC, PostgreSQL,
Localhost, my database.

27
00:01:35.640 --> 00:01:40.211
Make sure you've got those set in
the shell in which you've built the Docker

28
00:01:40.211 --> 00:01:40.717
image.

29
00:01:40.717 --> 00:01:43.170
I'm going to copy them over here.

30
00:01:43.170 --> 00:01:43.670
Paste.

31
00:01:45.410 --> 00:01:47.530
Okay, and now you should have
a Docker image down here.

32
00:01:47.530 --> 00:01:49.916
This is the Docker image name.

33
00:01:49.916 --> 00:01:53.004
So you're going to want to set that for
the Docker.

34
00:01:53.004 --> 00:01:58.001
So spring,

35
00:01:58.001 --> 00:02:03.998
data source,

36
00:02:03.998 --> 00:02:12.003
password equals.

37
00:02:12.003 --> 00:02:12.980
Actually, you know what?

38
00:02:12.980 --> 00:02:16.010
This might be easier to do in a script.

39
00:02:16.010 --> 00:02:22.695
Put that

40
00:02:22.695 --> 00:02:29.380
in a file

41
00:02:29.380 --> 00:02:38.930
here, okay

42
00:02:38.930 --> 00:02:45.615
and then

43
00:02:45.615 --> 00:02:54.210
the name of

44
00:02:54.210 --> 00:03:03.760
the build.

45
00:03:11.680 --> 00:03:13.680
Okay, so let me see if that works.

46
00:03:30.010 --> 00:03:30.850
Whoops.
It's going to be.

47
00:03:30.850 --> 00:03:32.210
Remember we talked about this yesterday?

48
00:03:32.210 --> 00:03:35.769
Host.docker.internal I think it is.

49
00:03:35.769 --> 00:03:40.570
Or is it docker.host.internal,
that looks right.

50
00:03:41.610 --> 00:03:43.210
And then you want to run
it on the same port.

51
00:03:43.210 --> 00:03:44.178
You want to export the port.

52
00:03:44.178 --> 00:03:49.034
So -P8080:8080.

53
00:03:49.034 --> 00:03:52.660
There you go, there you go.

54
00:03:52.660 --> 00:03:57.793
So now localhost 8080 customers, voila.

55
00:03:57.793 --> 00:03:59.300
So do this.

56
00:04:06.740 --> 00:04:11.171
Replace this with whatever the Docker
image that it should have printed out at

57
00:04:11.171 --> 00:04:13.362
the end of the build a few minutes ago.

58
00:04:13.362 --> 00:04:14.386
What your Docker image is.

59
00:04:14.386 --> 00:04:16.780
&gt;&gt; Student: And then sorry,
are we actually making a script or

60
00:04:16.780 --> 00:04:18.320
are we configuring something.

61
00:04:18.320 --> 00:04:21.207
&gt;&gt; Josh Long: I just run this in
the shell or create a script or whatever.

62
00:04:21.207 --> 00:04:22.449
It's just there's so many moving parts.

63
00:04:22.449 --> 00:04:24.027
I just put it in a script.

64
00:04:24.027 --> 00:04:26.348
But you can do whatever you want.

65
00:04:26.348 --> 00:04:28.435
You just need to set up.

66
00:04:28.435 --> 00:04:30.369
You can actually hard code
those values in here.

67
00:04:30.369 --> 00:04:32.969
I'm just it's nothing too scary.

68
00:04:32.969 --> 00:04:35.379
I'm just setting environment variables for
the Docker image and

69
00:04:35.379 --> 00:04:37.229
I'm using variables to
keep it a little cleaner.

70
00:04:37.229 --> 00:04:41.164
We've done a sort of speed run of building
an application, talking to a database,

71
00:04:41.164 --> 00:04:44.878
introducing observability and then
packaging it in a way that's suitable for

72
00:04:44.878 --> 00:04:45.969
production.

73
00:04:45.969 --> 00:04:48.130
And you all basically got there.

74
00:04:48.130 --> 00:04:51.050
I'm like, this is easy, right?

75
00:04:51.050 --> 00:04:53.464
If I can do this,
you can definitely do this.

76
00:04:53.464 --> 00:04:56.890
This is an easy thing to do and
it's basic stuff.

77
00:04:56.890 --> 00:05:00.325
This is all the kind of stuff, this is
all the kind of like bread and butter.

78
00:05:00.325 --> 00:05:01.772
Every app needs to do this kind of stuff.

79
00:05:01.772 --> 00:05:04.977
You're going to have something talking to
a database, you might have something on

80
00:05:04.977 --> 00:05:07.263
the web, you're going to need
to put it into a container and

81
00:05:07.263 --> 00:05:09.216
take this to any cloud
platform around the world.

82
00:05:09.216 --> 00:05:13.020
You can take it to Kubernetes, take it to
Cloud Foundry, ticket to anything, right?

83
00:05:13.020 --> 00:05:14.220
This is a wonderful result.

84
00:05:14.220 --> 00:05:15.975
This is production worthy software.

85
00:05:15.975 --> 00:05:20.940
You don't have to look elsewhere for
things to dockerize your image.

86
00:05:20.940 --> 00:05:22.491
You don't have to look elsewhere for

87
00:05:22.491 --> 00:05:24.500
ways to turn it into this
nice super fast thing.

88
00:05:24.500 --> 00:05:27.020
You don't need to look elsewhere for
tools to make it observable.

89
00:05:27.020 --> 00:05:29.621
Just add the right starters and
then run the right command and

90
00:05:29.621 --> 00:05:31.416
it's all provided for you out of the box.

