[00:00:00]
>> Josh Long: My name is Josh Long. I work on the Spring team as a Spring developer advocate. I have been a former Kotlin Google developer expert. I am a Java champion. And look, we all do things that we're not proud of sometimes, regrettably. And I'm a YouTuber, okay? So there's a, there's a YouTube channel there called Coffee Software.

[00:00:18]
It's not great. It's not, it's not going to be the best thing you do this year, but it won't be the worst. I would almost guarantee that probably. I mean, it's not. Anyway, like. And subscribe. Do the thing right. Join me there. It's fun. We can hang out.

[00:00:32]
I'm achingly online. So should you have questions, comments, feedback, whatever, you can find me on email on the Blueskies there. And then, of course, the Bird website, okay? And then if you want to play the home game, we have the code and it's all here. So I would definitely make sure you.

[00:00:46]
If you're going to take a screenshot, a shot of a screen, then this is the one. Cuz this has a code that you're gonna wanna follow along. Not now, but you're going to want to follow along as we go and kind of understand what's happening. I'm not going to give you too many specific exercises.

[00:01:02]
I did lay out everything in that git repository so that each sort of lesson has a corresponding folder and then you can follow along in that folder and kind of see the finished code and so on. When I talk about Spring, it's kind of important to remember that Spring is a, a technology that's been around since 2004 in its 1.0 GA incarnation.

[00:01:23]
It was early Access, people like me were using it in 2003 and so on. But it came from a book. It came from Rod Johnson's book. A guy named Rod Johnson, he wrote this book that talked about a better way forward. He wrote this book saying basically the enterprise Java emperor had no clothes.

[00:01:40]
And this book, it espoused a better way forward and it had a bunch of sample code. That sample code became very popular and it became what is now Spring Framework. So this is one of the rare instances of the documentation preceding the source code, right? And that has resulted in 20 plus years of change and keeping up.

[00:02:00]
And the reason Spring is so predominantly popular today is because it keeps up. It's really good at what it does. It's really good. So this is mostly a back end technology, which is a little awkward Given that we're at front end Masters, I think just today, in honor of Spring Boot, we should rename it Backend Masters, okay?

[00:02:15]
Just today you can keep your front end Masters after we're done. This technology has been very, very comprehensive. It's kept up and I'll show you a little bit of what you can do with it. Right, let's just take a little example here. But just keep in mind, Spring has been this thing that's been around for 20 years, plus it has a second technology that came out in 2014.

[00:02:36]
So spring was already very, very popular by the time 2014 rolled around. By that point, it was already the most well entrenched technology in the Java ecosystem. But it had begun to falter a little bit in that it didn't have support for some of the opinions that you could get from some of these other technologies, right?

[00:02:53]
We had seen at the time things like Ruby on Rails, right? Ruby on Rails came out, they talked about convention over configuration. This is the idea that you get some very, very opinionated defaults, but as a result you can move very quickly. The drawback, of course, to this is that you're sort of stuck in whatever Rails that technology puts you on.

[00:03:10]
If you don't agree with it, if you wanna undo or do a different thing, then you're very much back to square one, right? So Spring Boot was looking for a way to sort of give you the best of both worlds, right? And it gives something called AutoConfiguration. We'll talk about all this in a bit.

[00:03:22]
But basically that technology sparked a renaissance and it happened to coincide with Java 8's release back in 2014, right? So these two technologies, I think they're symbiotic, they needed each other. Java 8 was a huge Java release and Spring Boot was a huge gain in the backend technology.

[00:03:37]
And from that point, Java's mind share has grown, you know what I'm saying? It's gotten bigger relative to where it was in 2013, for example. So it's just been a very interesting few years since then. My goodness. I mean, it's easier to talk about who doesn't use Spring Boot at scale, right?

[00:03:54]
When you wanna build a big website and you wanna scale, you're gonna use Spring, you're gonna use Java. So I don't know that Twitter, I don't think they're using Spring for their core infrastructure, right? I don't know. I know Google doesn't, because they came before Spring, before a lot of that stuff was there, but everybody else does.

[00:04:12]
Literally everybody else, except for. No, Facebook, I forgot about them. They're probably not using it. They have this hackneyed stack based on PHP about which we don't talk. Okay, but, yeah, Netflix, ebay, Amazon, Baidu, Alibaba. Every large hyperscaler on the planet is using Spring. And you can just confirm this by looking for jobs in these various companies.

