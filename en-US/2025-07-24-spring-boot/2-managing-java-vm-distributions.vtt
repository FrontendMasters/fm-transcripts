WEBVTT

1
00:00:00.000 --> 00:00:04.759
&gt;&gt; Josh Long: First things first, if
you're on a Mac or on a Unix of some sort,

2
00:00:04.759 --> 00:00:10.592
including Cygwin or Linux Subsystem for
Windows Subsystem for Linux rather.

3
00:00:10.592 --> 00:00:15.440
Then I recommend you use something called
SDKman to manage your JVM versions.

4
00:00:15.440 --> 00:00:18.880
SDKman is a great tool for
managing JVM infrastructure.

5
00:00:18.880 --> 00:00:20.160
It's like a package manager.

6
00:00:20.160 --> 00:00:23.602
So I can install Kotlin and
Java and Graalvm and so on.

7
00:00:23.602 --> 00:00:25.505
So SDKman IO.

8
00:00:25.505 --> 00:00:26.025
Here you go.

9
00:00:26.025 --> 00:00:28.539
This is very common in the Java ecosystem.

10
00:00:28.539 --> 00:00:30.610
It's a software development kit manager.

11
00:00:30.610 --> 00:00:32.603
You just pipe this straight to Bash.

12
00:00:32.603 --> 00:00:33.158
What could go wrong?

13
00:00:33.158 --> 00:00:34.085
It'll be fine.

14
00:00:34.085 --> 00:00:35.063
Probably right?

15
00:00:35.063 --> 00:00:37.555
Pipe that straight to Bash,
let it set up everything for you.

16
00:00:37.555 --> 00:00:41.805
It'll in turn install
a package manager called SDK.

17
00:00:41.805 --> 00:00:43.858
Okay, so let's, that's your first thing.

18
00:00:43.858 --> 00:00:47.548
So you can say SDK list Java, right?

19
00:00:47.548 --> 00:00:48.672
And then you can see it down here.

20
00:00:48.672 --> 00:00:51.480
It shows all the different
JDK versions out there.

21
00:00:51.480 --> 00:00:55.151
Remember, one of the things that's so
interesting about the Java ecosystem is

22
00:00:55.151 --> 00:00:57.960
that there's no one true
distribution of Java, right?

23
00:00:57.960 --> 00:01:02.136
Even in the Python world, for example, or
in the Node world they have Bun, Deno and

24
00:01:02.136 --> 00:01:02.920
node, right?

25
00:01:02.920 --> 00:01:03.960
That's three.

26
00:01:03.960 --> 00:01:05.142
In Java we have 30.

27
00:01:05.142 --> 00:01:09.011
At least these are all different
versions of different JDKs and

28
00:01:09.011 --> 00:01:11.137
all these are different vendors.

29
00:01:11.137 --> 00:01:14.267
Zulu, Tencent, Temarin, Semru.

30
00:01:14.267 --> 00:01:17.897
So these are all different
implementations of the open source code.

31
00:01:17.897 --> 00:01:20.202
Some of them are clean
room reimplementations,

32
00:01:20.202 --> 00:01:23.473
some of them are value added
distributions on top of OpenJDK, okay?

33
00:01:23.473 --> 00:01:28.415
The one we're gonna be using is actually a
value added distribution on top of OpenJDK

34
00:01:28.415 --> 00:01:30.740
called Graalvm Community Edition.

35
00:01:30.740 --> 00:01:32.100
You can also use the Oracle.

36
00:01:32.100 --> 00:01:33.688
This is not open source, but it is free.

37
00:01:33.688 --> 00:01:37.306
And as far as I understand, I could be
wrong, but as far as I understand this is

38
00:01:37.306 --> 00:01:40.060
usable in any context where
you would otherwise use this.

39
00:01:40.060 --> 00:01:42.220
Except you can't give away the runtime for
this.

40
00:01:42.220 --> 00:01:43.956
But since it's used to
create native images,

41
00:01:43.956 --> 00:01:45.655
you're not giving away the runtime anyway.

42
00:01:45.655 --> 00:01:50.143
So, so graalvm24graalce so
if you want to install that,

43
00:01:50.143 --> 00:01:55.460
you say SDK install Java24graal CE
once you've got SDK installed.

44
00:01:56.500 --> 00:01:57.111
So you'll do that.

45
00:01:57.111 --> 00:02:01.006
I've already got it installed, and
then if you want to say SDK default

46
00:02:01.006 --> 00:02:05.378
Java24 Graal CE that'll make it
the global operating system wide default.

47
00:02:05.378 --> 00:02:07.723
So when you do Java minus version,
there you go,

48
00:02:07.723 --> 00:02:09.506
you should see something like that.

49
00:02:09.506 --> 00:02:12.871
There's a bunch of things that I
think are just worth understanding

50
00:02:12.871 --> 00:02:16.426
that are germane to any Java programmer,
not just a spring developer.

51
00:02:16.426 --> 00:02:20.480
And I want to talk about some of those
things right now in more depth, right.

52
00:02:20.480 --> 00:02:22.282
We did a speedrun just a minute ago,

53
00:02:22.282 --> 00:02:25.360
we did a speedrun looking at
a few of these different things.

54
00:02:25.360 --> 00:02:26.389
We didn't really talk about them.

55
00:02:26.389 --> 00:02:29.698
I just wanted you to see what
the effect of having it all set up and

56
00:02:29.698 --> 00:02:30.960
moving quickly can be.

57
00:02:30.960 --> 00:02:35.328
A few minutes to get something that is
talking to a database that statically

58
00:02:35.328 --> 00:02:40.290
compiled, self deployed, observable,
has an HTTP endpoint, talks to an ORM.

59
00:02:40.290 --> 00:02:45.413
It's like, what was it, less than 10 lines
of Java code to get all that working and

60
00:02:45.413 --> 00:02:49.490
some configuration details for
your data source.

61
00:02:49.490 --> 00:02:51.625
That's all well and good, but
I know what I'm doing and

62
00:02:51.625 --> 00:02:53.085
I know how these parts come together.

63
00:02:53.085 --> 00:02:58.256
We're going to walk through all those
things in detail in the spring layer.

64
00:02:58.256 --> 00:03:01.851
But right now I want to look at some of
the things that were relevant before we

65
00:03:01.851 --> 00:03:05.090
even got started,
before we even get to the spring code.

66
00:03:05.090 --> 00:03:06.036
I mentioned SDKman.

67
00:03:06.036 --> 00:03:09.850
One of the things I love about SDKman is
that it gives you the ability to manage

68
00:03:09.850 --> 00:03:11.870
versions of your SDK.

69
00:03:11.870 --> 00:03:15.350
So I'm using, if you look at this,

70
00:03:15.350 --> 00:03:21.070
I'm using Java SDK,
Java SDK list, Java rather.

71
00:03:21.070 --> 00:03:25.630
You can see it says I'm using
GraalVM Community Edition 24 Graal CE.

72
00:03:26.670 --> 00:03:29.597
So if you do SDK install,
Java 24 Graal CE,

73
00:03:29.597 --> 00:03:32.533
you'll get that version installed as well.

74
00:03:32.533 --> 00:03:39.169
And then you say SDK default Java 24 gral
CE and you'll get that same version,

75
00:03:39.169 --> 00:03:43.745
made it globally available
on your operating system.

76
00:03:43.745 --> 00:03:48.113
One of the things I love about that though
is you can see like a bit of trivia.

77
00:03:48.113 --> 00:03:51.354
Who knows what the most
popular JDK distribution is?

78
00:03:51.354 --> 00:03:54.441
I read last year, and
I don't know if this is true still, but

79
00:03:54.441 --> 00:03:57.180
I read that it's actually
Amazon's Corretto.

80
00:03:57.180 --> 00:04:01.100
So Amazon has a JVM distribution
that they provide on top of aws.

81
00:04:01.100 --> 00:04:02.860
Of course, that's what our shop uses.

82
00:04:02.860 --> 00:04:05.660
Yeah, and it's so very, very, very.

83
00:04:05.660 --> 00:04:07.760
I mean, I don't know what they do to it.

84
00:04:07.760 --> 00:04:10.810
It's just, it just happens to be
the default it's the default used in so

85
00:04:10.810 --> 00:04:11.418
many places.

86
00:04:11.418 --> 00:04:14.931
So that by dint of having been so
installed, it's already the most widely

87
00:04:14.931 --> 00:04:18.174
used distribution, which is pretty
amazing if you think about it.

88
00:04:18.174 --> 00:04:20.757
But nonetheless there's no
reason they're all compatible.

89
00:04:20.757 --> 00:04:24.722
There's no reason you couldn't take
code that's compiled against graalvm and

90
00:04:24.722 --> 00:04:26.478
then run it on Amazon or vice versa.

91
00:04:26.478 --> 00:04:29.187
So we have a bunch of different
distributions and as you move from

92
00:04:29.187 --> 00:04:32.411
one project to another, you might even
have different ranges of versions.

93
00:04:32.411 --> 00:04:36.565
Like you might have GraalVM, but
you're using Java 17 and using Java 21 and

94
00:04:36.565 --> 00:04:37.820
using Java 24.

95
00:04:37.820 --> 00:04:39.620
You might have different
distributions proper.

96
00:04:39.620 --> 00:04:43.188
You might have Amazon Coretta over
there and you might have OpenJDK,

97
00:04:43.188 --> 00:04:44.980
java.net over here, whatever.

98
00:04:44.980 --> 00:04:47.987
And so what you want is a nice
tool to make it easy to manage and

99
00:04:47.987 --> 00:04:50.060
move around with all of them.

100
00:04:50.060 --> 00:04:52.940
One that I actually quite like
as well is also Liberica.

101
00:04:52.940 --> 00:04:54.060
They have everything.

102
00:04:54.060 --> 00:04:58.350
They have graalvm support,
they have Project crack.

103
00:04:58.350 --> 00:04:59.950
We'll get into that in a little bit here.

104
00:04:59.950 --> 00:05:04.864
Support crac, coordinated Restore at
Checkpoint, they have support for

105
00:05:04.864 --> 00:05:09.470
javafx, they have all this extra
stuff on top of their distribution.

106
00:05:09.470 --> 00:05:12.030
So there's Liberica and Liberica Nik.

107
00:05:12.030 --> 00:05:14.310
Okay, but for now, just keep it simple.

108
00:05:14.310 --> 00:05:16.270
Use GraalVM.

109
00:05:16.270 --> 00:05:17.510
There's different distributions here.

110
00:05:17.510 --> 00:05:18.470
These are proprietary.

111
00:05:18.470 --> 00:05:19.790
I think I could be wrong.

112
00:05:19.790 --> 00:05:21.470
These are not the OpenJDK distributions.

113
00:05:21.470 --> 00:05:25.060
These are the proprietary
packagings of OpenJDK.

114
00:05:25.060 --> 00:05:27.620
Some extra stuff right from Oracle.

115
00:05:27.620 --> 00:05:30.420
And there's just, I mean, just a lot of
them, A lot of them are just available.

116
00:05:30.420 --> 00:05:33.691
So let's say you're moving around from
project to project and you want people to

117
00:05:33.691 --> 00:05:36.540
be using the right version of Java
when they go to your project, okay?

118
00:05:36.540 --> 00:05:41.220
So you can do SDK env init in
the folder where you want this managed.

119
00:05:41.220 --> 00:05:42.020
I hit that.

120
00:05:42.020 --> 00:05:42.620
I did that.

121
00:05:42.620 --> 00:05:45.620
And it created this file
here called stkman rc.

122
00:05:45.620 --> 00:05:50.600
So that's now in this folder here, stkmnrc
and it says Java equals 24 graalce.

123
00:05:52.760 --> 00:05:54.222
Sorry, when you set up SDK, man.

124
00:05:54.222 --> 00:05:56.959
Now if I'm, let's say I do SDK list Java,

125
00:05:56.959 --> 00:06:00.320
I'm going to switch to
a different version of Java.

126
00:06:00.320 --> 00:06:01.800
Now I'll switch to.

127
00:06:01.800 --> 00:06:03.240
Which one do I have installed?

128
00:06:04.439 --> 00:06:05.400
Do I have anything?

129
00:06:05.400 --> 00:06:07.622
Okay, here I'll use Java 24 open.

130
00:06:07.622 --> 00:06:12.133
Okay, so
I'm going to say SDK default Java 24 open.

131
00:06:12.133 --> 00:06:15.019
So that's now my operating system
wide open version of Java.

132
00:06:15.019 --> 00:06:17.701
If I go here,
you can see it's just Java 24 now.

133
00:06:17.701 --> 00:06:21.088
And it says there's nothing
about Graalvm in there, right?

134
00:06:21.088 --> 00:06:24.070
So if I go now to the front end
Masters spring boot course.

135
00:06:24.070 --> 00:06:26.870
You can see now it's switched
automatically to graalvm.

136
00:06:26.870 --> 00:06:30.950
So I do Java within this folder and
now it says graalvm.

137
00:06:32.230 --> 00:06:33.310
So that's very, very convenient.

138
00:06:33.310 --> 00:06:34.686
Now you can put that in version control.

139
00:06:34.686 --> 00:06:38.472
What we want to support is that
git clone run lifestyle right?

140
00:06:38.472 --> 00:06:43.395
I want people to be able to get
your code CD into the directory

141
00:06:43.395 --> 00:06:46.454
type idea pom XML and start working.

142
00:06:46.454 --> 00:06:49.554
They should have all the sort
of infrastructure via docker,

143
00:06:49.554 --> 00:06:53.462
they should have the versions of the JVM
infrastructure managed by sdkman.

144
00:06:53.462 --> 00:06:57.610
And they should be able to open it up
in their IDE of choice without having

145
00:06:57.610 --> 00:07:02.034
to import or configure or check in
the IDE droppings, the IDE config files,

146
00:07:02.034 --> 00:07:04.821
you want your build file and
that's it, okay?

147
00:07:04.821 --> 00:07:11.152
So I'm going to go SDK default Java.

148
00:07:11.152 --> 00:07:13.145
That's me, right?

149
00:07:13.145 --> 00:07:17.426
But now that I've added this SDKman.

150
00:07:17.426 --> 00:07:18.389
So that's SDKman.

151
00:07:18.389 --> 00:07:19.681
I quite like that a lot, right?

152
00:07:19.681 --> 00:07:23.319
Sdkman is super useful for
making sure people can get your code.

