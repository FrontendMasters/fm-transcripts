WEBVTT

1
00:00:00.009 --> 00:00:04.097
So we've talked about CMS, we've talked
about working with just the indexed HTML,

2
00:00:04.097 --> 00:00:07.699
but most projects are not gonna be run
that way, that's just the reality.

3
00:00:07.699 --> 00:00:11.774
Most people have bought in fully
to the tool chain system, and so

4
00:00:11.774 --> 00:00:13.668
it's time that we did so too.

5
00:00:13.668 --> 00:00:15.530
For those who come from
the Vue2 ecosystem,

6
00:00:15.530 --> 00:00:18.032
you're probably used to
scaffolding your app with Vue CLI.

7
00:00:18.032 --> 00:00:21.562
But there's been a new kid on the block
in terms of the whole web pack build tool

8
00:00:21.562 --> 00:00:24.512
chain, and if you haven't heard about it,
it's called Vite.

9
00:00:26.527 --> 00:00:29.927
And one of the great things about Vite,
basically what you need to know,

10
00:00:29.927 --> 00:00:33.609
is that it's a bundler underneath that's
helping to push to front end tooling

11
00:00:33.609 --> 00:00:34.747
to use more ES modules.

12
00:00:34.747 --> 00:00:37.731
Basically, it helps to make
apps more performance.

13
00:00:37.731 --> 00:00:42.147
And what's really nice about Vito as well
is that even though avenue the creator of

14
00:00:42.147 --> 00:00:44.835
view is one of the founders
of the Vue technology,

15
00:00:44.835 --> 00:00:46.692
it's a multi framework tooling.

16
00:00:46.692 --> 00:00:51.095
And so it's really nice to see a lot
of framer starting to gather around it.

17
00:00:51.095 --> 00:00:54.580
And so for anyone who's interested
in this kind of stuff, and want to

18
00:00:54.580 --> 00:00:58.607
see like helping to create plugins so
that other frameworks can leverage that,

19
00:00:58.607 --> 00:01:02.300
Vite's doing a very good job as far
as bringing the community together.

20
00:01:02.300 --> 00:01:05.734
But because of all these
performance optimizations though,

21
00:01:05.734 --> 00:01:10.159
Vue CLI currently still uses a web pack
and so it basically has been deprecated in

22
00:01:10.159 --> 00:01:14.466
favor of the create-vue, which is
the new basically equivalent of Vue CLI.

23
00:01:14.466 --> 00:01:17.788
And for this one,
this has Vite powering it underneath.

24
00:01:17.788 --> 00:01:19.527
And so this is where the shift is.

25
00:01:19.527 --> 00:01:24.184
So going forward, if you're creating a new
Vue 3 app, and you have the luxury of

26
00:01:24.184 --> 00:01:29.276
using Vite underneath, create-vue is the
basically recommended way going forward.

27
00:01:29.276 --> 00:01:33.955
So let's go ahead and create a project and
see what that looks like, shall we?

28
00:01:33.955 --> 00:01:38.643
To do that, we're gonna run the command
npm-create vue3 inside of our project.

29
00:01:38.643 --> 00:01:43.429
So, I'm gonna go ahead and
just close some of this off now.

30
00:01:43.429 --> 00:01:48.590
And let's go ahead and
open this up, npm-create-vue @3.

31
00:01:50.130 --> 00:01:53.875
And so one of the things that's really
nice about the modern built tool chains

32
00:01:53.875 --> 00:01:57.444
these days is that you don't have to
install a massive CLI on your computer

33
00:01:57.444 --> 00:02:00.454
only to use it a couple of times
maybe like a year or something.

34
00:02:00.454 --> 00:02:03.133
It's kind of being called on in the fly,
because NPM knows,

35
00:02:03.133 --> 00:02:06.716
you want to temporarily install something,
I'll basically bring down the package.

36
00:02:06.716 --> 00:02:10.852
I'll use it and then after that, I won't
you won't be on your machine anymore.

37
00:02:10.852 --> 00:02:14.201
So for this one I'm just gonna call mine
sandbox right now because I want to show

38
00:02:14.201 --> 00:02:17.600
you all what kind of what's inside, and
then you all will have an opportunity to

39
00:02:17.600 --> 00:02:20.110
create your own building on
what we've been doing today.

40
00:02:21.490 --> 00:02:24.305
All right, so we might need a sandbox.

41
00:02:24.305 --> 00:02:26.897
And so
at first glance you see at TypeScript.

42
00:02:26.897 --> 00:02:30.081
Your first glance,
your first impression might be,

43
00:02:30.081 --> 00:02:32.637
I'm definitely using TypeScript hit no.

44
00:02:32.637 --> 00:02:34.870
I'm gonna say hit Yes.

45
00:02:34.870 --> 00:02:38.398
And the short reason for that is because
when view gives you the option to add

46
00:02:38.398 --> 00:02:42.331
the TypeScript, what it's saying is it's
not saying you have to use TypeScript.

47
00:02:42.331 --> 00:02:44.405
It's saying,
we're gonna configure everything so

48
00:02:44.405 --> 00:02:46.730
that if you ever choose is really easy.

49
00:02:46.730 --> 00:02:48.256
No configurations needed.

50
00:02:48.256 --> 00:02:51.600
There will be one of two lines a couple
of add to make it basically like,

51
00:02:51.600 --> 00:02:53.141
ignore any type script errors.

52
00:02:53.141 --> 00:02:56.543
But one of the things that I found that
is really painful when it comes to code

53
00:02:56.543 --> 00:02:59.677
migrations is that people who wanna
star sprinkling in type script,

54
00:02:59.677 --> 00:03:02.020
usually the build tool
should blossom doing that.

55
00:03:02.020 --> 00:03:04.010
Because they're like,
I just wanna try types.

56
00:03:04.010 --> 00:03:08.071
And than it is like you have to look at
this config file then you have to do a ts

57
00:03:08.071 --> 00:03:13.100
config and then by the time that obstacle
is getting started can be super expensive.

58
00:03:13.100 --> 00:03:15.508
And so, if you didn't know
there's a view three and

59
00:03:15.508 --> 00:03:18.430
TypeScript workshop that I did
you can watch that separately.

60
00:03:18.430 --> 00:03:22.341
But generally speaking, what I'm saying
here is that this is great for code bases

61
00:03:22.341 --> 00:03:26.023
in the sense that like, you can only have
one if one person wants to use types on

62
00:03:26.023 --> 00:03:30.020
one file, they can, you don't have to
enforce it across the entire code base.

63
00:03:30.020 --> 00:03:32.983
And that's the benefit of
having that configured.

64
00:03:32.983 --> 00:03:35.300
As you can see here, JSX support.

65
00:03:35.300 --> 00:03:37.938
This is something I do wanna address,
especially for

66
00:03:37.938 --> 00:03:41.468
those coming from the React background
is that you can use JSX with Vue.

67
00:03:41.468 --> 00:03:45.038
If you've been seeing us do a lot with
native HTML, but just know that if you

68
00:03:45.038 --> 00:03:49.360
really love JSX, and you don't want to
use native HTML, you can still do that.

69
00:03:49.360 --> 00:03:53.036
But personally, I do find it's
advantageous to use native HTML, but

70
00:03:53.036 --> 00:03:57.105
just know that Vue can totally support
that if that's something you prefer.

71
00:03:57.105 --> 00:04:00.568
We're not gonna worry about view
router right now or Penia, and

72
00:04:00.568 --> 00:04:04.557
we're not doing any end to end but
sure, let's add ES lint and prettier.

73
00:04:04.557 --> 00:04:08.270
So for those who are new to the tool
chain space ES lint is basically and

74
00:04:08.270 --> 00:04:12.448
prettier are ways to standardize how
your code is formatted and how it looks.

75
00:04:12.448 --> 00:04:15.510
So things like whether tabs
are two spaces four spaces or

76
00:04:15.510 --> 00:04:19.810
actual tabs semicolons those sort of
things that's how you kind of can enforce

77
00:04:19.810 --> 00:04:21.846
consistency across your codebase.

78
00:04:21.846 --> 00:04:23.702
So let's take a look at
what's actually in here.

79
00:04:23.702 --> 00:04:28.098
So inside of my sandbox directory you
now see a standard Vue project that

80
00:04:28.098 --> 00:04:29.424
scaffolded in Vite.

81
00:04:29.424 --> 00:04:34.163
So a couple of things here, one, we have a
source directory which is fairly standard

82
00:04:34.163 --> 00:04:36.851
on front end client
framework apps these days.

83
00:04:36.851 --> 00:04:40.325
We have the public directory,
which is gonna be what's served and

84
00:04:40.325 --> 00:04:41.710
basically to users.

85
00:04:41.710 --> 00:04:42.421
So basically,

86
00:04:42.421 --> 00:04:45.876
think of the public directory as the build
tools will not do anything to it.

87
00:04:45.876 --> 00:04:48.550
It'll just be bundled with
your code when you serve it.

88
00:04:48.550 --> 00:04:51.860
So basically no asset optimization,
none of that.

89
00:04:51.860 --> 00:04:56.880
And then what we can see here as
well is we have an index HTML.

90
00:04:56.880 --> 00:05:00.621
And this is where you can see actually
how your code is basically being built.

91
00:05:00.621 --> 00:05:04.086
In the sense that like,
If you wanna drop Google Font libraries,

92
00:05:04.086 --> 00:05:07.110
it's as simple now as coming
into your index HTML file and

93
00:05:07.110 --> 00:05:10.773
just dropping in your link to your
style sheets, whatever you need.

94
00:05:10.773 --> 00:05:13.703
And then here we can see we
have our div app as well.

95
00:05:13.703 --> 00:05:16.144
And then script type module here main.ts,
and

96
00:05:16.144 --> 00:05:19.573
this main.ts refers to this file
inside of our source directory.

97
00:05:19.573 --> 00:05:23.164
And so you can see this should
look actually pretty familiar.

98
00:05:23.164 --> 00:05:26.145
We're importing the create app
helper method from view, and

99
00:05:26.145 --> 00:05:28.050
then we're creating an app with that.

100
00:05:28.050 --> 00:05:32.174
And then we're mounting it
to the div ID right here.

101
00:05:32.174 --> 00:05:33.883
And so
that's where you see that inside of index.

102
00:05:33.883 --> 00:05:37.422
Actually, let me split this window,
so that we can get them side by side.

103
00:05:37.422 --> 00:05:38.282
So there we go.

104
00:05:38.282 --> 00:05:40.995
This is where these two
are talking to each other, and

105
00:05:40.995 --> 00:05:44.324
then you'll notice that we're
also importing some CSS as well.

106
00:05:44.324 --> 00:05:46.750
And I'll talk more to
this in a little bit.

107
00:05:46.750 --> 00:05:51.334
Okay, so to show you just how everything
works, let me go ahead and go inside of

108
00:05:51.334 --> 00:05:56.904
the sandbox, and I'm going to install
the dependencies by running npm install.

109
00:05:56.904 --> 00:06:01.805
So while we're doing that, what I'd
like people to do is if you look up

110
00:06:01.805 --> 00:06:06.626
Vue DevTools on your browser,
you should basically get basically,

111
00:06:06.626 --> 00:06:10.553
whether it's Chrome,
Firefox should have it as well.

112
00:06:10.553 --> 00:06:13.070
You should get an extension that
you should be able to install here.

113
00:06:13.070 --> 00:06:17.484
So Vue.js DevTools, you'll see it has
about 1,800 at the time of this recording.

114
00:06:17.484 --> 00:06:21.034
And so you wanna install this because
this is what actually showing up here and

115
00:06:21.034 --> 00:06:24.380
so if you click on your extensions you
can go ahead and pin it if it's not.

116
00:06:24.380 --> 00:06:27.442
It's hidden right now for you,
cuz we'll be using that to

117
00:06:27.442 --> 00:06:31.461
explore what the view data does for
us when it comes looking at a Vue project.

118
00:06:31.461 --> 00:06:34.789
Okay, so inside of here we can
see everything is running now,

119
00:06:34.789 --> 00:06:39.760
so we look at package.json now, let's see
what commands we have available to us.

120
00:06:39.760 --> 00:06:42.513
Well, we have the ability to dev, okay?

121
00:06:42.513 --> 00:06:44.328
And then,
there's a bunch of types of stuff,

122
00:06:44.328 --> 00:06:47.100
we're not even gonna worry
about that right now.

123
00:06:47.100 --> 00:06:50.198
So, npm run dev, all right?

124
00:06:50.198 --> 00:06:51.000
Great.

125
00:06:51.000 --> 00:06:52.871
And let's open that up, there we go.

126
00:06:52.871 --> 00:06:56.438
As we can see,
this is your Hello World Vue application.

127
00:06:56.438 --> 00:06:59.301
Now, when we take a look now,
you'll notice that the dev tools,

128
00:06:59.301 --> 00:07:02.880
if you have that installed,
will actually go ahead and light up.

129
00:07:02.880 --> 00:07:05.574
And so if you open up your console now,
and you go into the drop down, or

130
00:07:05.574 --> 00:07:08.040
if you have a really wide monitor,
you might already see it, but

131
00:07:08.040 --> 00:07:09.936
mine's hidden since it's
a little bit bigger.

132
00:07:09.936 --> 00:07:12.770
Let's click on Vue,
you'll see that here we go.

133
00:07:12.770 --> 00:07:14.859
We have the Dev item, basically,

134
00:07:14.859 --> 00:07:18.323
our entire app now is able to
be inspected inside of here.

135
00:07:18.323 --> 00:07:22.007
So what we're seeing here is
basically we're starting to introduce

136
00:07:22.007 --> 00:07:23.794
the idea of components, right?

137
00:07:23.794 --> 00:07:28.050
Components driven development is really
popular in today's modern front end

138
00:07:28.050 --> 00:07:28.830
frameworks.

139
00:07:28.830 --> 00:07:31.806
And so as you would expect,
Vue certainly supports components, and

140
00:07:31.806 --> 00:07:33.408
we'll be doing a lot more with that.

141
00:07:33.408 --> 00:07:36.588
Now that we have the build
tool chain supported.

142
00:07:36.588 --> 00:07:39.681
So what's cool about this is that you
can see as you click on the different

143
00:07:39.681 --> 00:07:42.332
components, it'll actually tell
you a little bit about it.

144
00:07:42.332 --> 00:07:45.493
And so you can see that yes,
here in the welcome,

145
00:07:45.493 --> 00:07:47.828
there's a bunch of stuff being set up.

146
00:07:47.828 --> 00:07:49.030
The HelloWorld here has a message.

147
00:07:49.030 --> 00:07:53.032
We'll be using this a lot to inspect
what's going on underneath the components.

148
00:07:53.032 --> 00:07:55.739
So definitely keep this in mind when we
start to move forward on other things.

149
00:07:57.710 --> 00:08:00.546
So, what we're gonna do
is I'm gonna go ahead and

150
00:08:00.546 --> 00:08:02.917
port over the playground that I had made.

151
00:08:02.917 --> 00:08:06.420
And we're gonna go ahead and
actually use that to create the app.

152
00:08:06.420 --> 00:08:09.023
So to kinda show you what's going on.

153
00:08:09.023 --> 00:08:12.917
So, the main thing to understand
here is that inside of the main.ts,

154
00:08:12.917 --> 00:08:15.170
you'll see here inside of this app Vue.

155
00:08:15.170 --> 00:08:17.569
And so, dot view files are the bread and

156
00:08:17.569 --> 00:08:21.810
butter of one of the reasons why I
think view also got really popular.

157
00:08:21.810 --> 00:08:24.670
And so,
these are called single file components.

158
00:08:24.670 --> 00:08:27.860
And so, they're single file components
because, well, they have a lot going on.

159
00:08:27.860 --> 00:08:31.150
But you might notice, though, is that none
of my syntax highlighting is working.

160
00:08:31.150 --> 00:08:35.657
And the reason for that is because
you need to actually enable a VS Code

161
00:08:35.657 --> 00:08:38.299
extension and the one that I recommend,

162
00:08:38.299 --> 00:08:43.216
actually kind of the standard actually,
is volear, V- O- L- E- A- R.

163
00:08:43.216 --> 00:08:45.039
So if you're using VS Code, go ahead and

164
00:08:45.039 --> 00:08:48.370
install that on your machine
while you're while you're at it.

165
00:08:48.370 --> 00:08:51.146
So I'm gonna go ahead and enable mine.

166
00:08:51.146 --> 00:08:52.390
And it does a ton of stuff for you.

167
00:08:52.390 --> 00:08:56.944
Honestly, there could probably be a half
day lecture just on Volar alone, but

168
00:08:56.944 --> 00:09:00.257
know that it helps you out
with syntax highlighting, and

169
00:09:00.257 --> 00:09:02.204
a couple of other things as well.

170
00:09:02.204 --> 00:09:06.661
Okay, so instead of App.vue, you might
notice this should look pretty familiar to

171
00:09:06.661 --> 00:09:11.135
you, in the sense that okay, we have this
this part here this template this is HTML.

172
00:09:11.135 --> 00:09:13.217
And this template element believe it or

173
00:09:13.217 --> 00:09:15.560
not is actually built
on a standard in HTML.

174
00:09:15.560 --> 00:09:19.025
The template element is actually
a built-in thing takes email,

175
00:09:19.025 --> 00:09:20.920
it's not just a Vue thing.

176
00:09:20.920 --> 00:09:25.207
But basically it says, hey, this is HTML
that I'm managing in this specific file.

177
00:09:25.207 --> 00:09:26.680
The script block is what you expect.

178
00:09:26.680 --> 00:09:28.692
Here's the JavaScript that I'm managing.

179
00:09:28.692 --> 00:09:32.326
And here we even have a style block,
and that's the manage all the CSS.

180
00:09:32.326 --> 00:09:33.424
And so as you can see,

181
00:09:33.424 --> 00:09:37.636
the reason why it's called single file
components is because it basically allows

182
00:09:37.636 --> 00:09:40.949
you to scope all do things that
you care about into a single file.

183
00:09:40.949 --> 00:09:44.275
And that might sound like what's so
special about that, but

184
00:09:44.275 --> 00:09:48.227
we have to remember prior to this a lot
of times what people were doing is they

185
00:09:48.227 --> 00:09:49.641
would have an app.html.

186
00:09:49.641 --> 00:09:54.331
For example, for the template they'd
have an app.js for the JavaScript, and

187
00:09:54.331 --> 00:09:56.787
then they have an app.css, for the CSS.

188
00:09:56.787 --> 00:10:00.336
And to some extent, there's nothing
wrong with that architecture, but for

189
00:10:00.336 --> 00:10:03.719
a lot of us who, especially when
you're navigating back between files,

190
00:10:03.719 --> 00:10:06.630
it's actually really helpful just
to have it all in one place.

191
00:10:06.630 --> 00:10:08.843
And that's at least that's
what I found in my experience.

192
00:10:08.843 --> 00:10:13.783
Now, granted, there's nothing stopping
you from choosing your own adventure.

193
00:10:13.783 --> 00:10:16.407
So these all these blocks here,
they're optional.

194
00:10:16.407 --> 00:10:17.732
So I can delete this.

195
00:10:17.732 --> 00:10:23.825
And we can just, we can only use
the template and the script.

196
00:10:23.825 --> 00:10:27.518
And the other thing that people often
misunderstand when it comes to single file

197
00:10:27.518 --> 00:10:29.942
components as well,
is that the script template and

198
00:10:29.942 --> 00:10:32.438
style blocks are just what's
default out of the box.

199
00:10:32.438 --> 00:10:34.808
There are actually other libraries and

200
00:10:34.808 --> 00:10:37.762
plugins that utilize
things like a docs plugin.

201
00:10:37.762 --> 00:10:41.691
And so it'll use a docs tag wrapper, and
then basically whatever you document there

202
00:10:41.691 --> 00:10:44.086
will be associated with
that specific component.

203
00:10:44.086 --> 00:10:47.171
And so
really it's actually an open canvas for

204
00:10:47.171 --> 00:10:51.761
people's imaginations when it comes
to how they might wanna scope,

205
00:10:51.761 --> 00:10:56.448
how information is being managed
across their code base, all right?

206
00:10:56.448 --> 00:11:01.830
So let's go ahead and
migrate some stuff over, shall we?

207
00:11:01.830 --> 00:11:05.760
So I'm going to go ahead and
open up my playground here.

208
00:11:05.760 --> 00:11:10.174
Let's do that and
then switch that over here, all right?

209
00:11:10.174 --> 00:11:11.760
Let me zoom out a little bit.

210
00:11:11.760 --> 00:11:14.755
So I think it's a little bit harder to
wait, can I zoom in a little bit harder?

211
00:11:14.755 --> 00:11:15.318
Here we go.

212
00:11:15.318 --> 00:11:16.450
Okay.

213
00:11:16.450 --> 00:11:18.700
So I'm gonna go ahead and
delete this boilerplate stuff.

214
00:11:18.700 --> 00:11:23.066
You all will understand how this
works by the end of the workshop, so

215
00:11:23.066 --> 00:11:24.451
don't worry there.

216
00:11:24.451 --> 00:11:29.228
But this way we keep it simple we have
a script block we have a template block,

217
00:11:29.228 --> 00:11:32.002
in other words our JavaScript and
our HTML.

218
00:11:32.002 --> 00:11:36.631
So what we can do here is we can basically
copy in our HTML here to bum, bum,

219
00:11:36.631 --> 00:11:39.715
bum, bum, bum,
bum all the way down to the div.

220
00:11:39.715 --> 00:11:43.273
And we're gonna go ahead and
drop it inside of our template.

221
00:11:46.246 --> 00:11:48.082
Okay, a lot of things are going
to be breaking right now, and

222
00:11:48.082 --> 00:11:48.806
that's totally fine.

223
00:11:48.806 --> 00:11:53.239
Because what we got to do, we got to
copy all this data that we have here.

224
00:11:53.239 --> 00:11:55.823
So we have a bunch of
stuff inside of here, and

225
00:11:55.823 --> 00:11:58.826
we're just going to copy all of it,
or in this case.

226
00:11:58.826 --> 00:12:02.590
I'm cutting it, the main difference
in tactically speaking though,

227
00:12:02.590 --> 00:12:06.227
is that what we got to do is rather
than saying like create an app here,

228
00:12:06.227 --> 00:12:09.864
because the app has already been created,
we basically are saying,

229
00:12:09.864 --> 00:12:12.841
let's export the object that
we're going to be using.

230
00:12:12.841 --> 00:12:13.947
So in other words,

231
00:12:13.947 --> 00:12:18.410
here is the specific object that will
reflect the JavaScript for this file.

232
00:12:18.410 --> 00:12:21.473
There we go, okay?

233
00:12:21.473 --> 00:12:24.910
So what we see here, we're back to
the point where we have our data here, and

234
00:12:24.910 --> 00:12:28.670
we have all the stuff that we just
copy pasted and we have our template.

235
00:12:28.670 --> 00:12:30.047
So we see some stuff yelling at us.

236
00:12:30.047 --> 00:12:31.968
Yep.
We'll talk about that in a little bit.

237
00:12:31.968 --> 00:12:34.620
And so let's see if this
actually did anything for us.

238
00:12:36.360 --> 00:12:38.630
So you'll notice who, okay?

239
00:12:38.630 --> 00:12:41.340
Our data is there, it's just super messy.

240
00:12:41.340 --> 00:12:44.526
The reason it's super
messy is because we have,

241
00:12:44.526 --> 00:12:49.198
[SOUND] inside of our main.ts,
you saw earlier we have this main.css.

242
00:12:49.198 --> 00:12:51.399
We're gonna wipe that out, cuz right now,

243
00:12:51.399 --> 00:12:56.180
we just wanna work with standard things
and make sure everything's just working.

244
00:12:56.180 --> 00:12:58.407
And so sure enough, there we go.

245
00:12:58.407 --> 00:12:59.849
We have our app, and okay.

246
00:13:05.790 --> 00:13:07.286
So the first thing I want to address
here is that you'll notice now before we

247
00:13:07.286 --> 00:13:08.630
weren't getting any sort of errors
when we did the index HTML way.

248
00:13:08.630 --> 00:13:13.221
Because basically Volar and
these sort of extensions allow

249
00:13:13.221 --> 00:13:18.086
us to basically identify common
problems that people sort of or

250
00:13:18.086 --> 00:13:22.146
mistakes that they make when
it comes to this stuff.

251
00:13:22.146 --> 00:13:25.145
And so you'll notice here we got these
error messages here because it's

252
00:13:25.145 --> 00:13:28.488
saying that whenever we iterate through an
element is expected to have a V bind key

253
00:13:28.488 --> 00:13:30.273
directive so what does that mean exactly.

254
00:13:30.273 --> 00:13:34.604
Well, basically when you're having the
frameworks track the elements that they're

255
00:13:34.604 --> 00:13:37.982
looping through, it's good to give
them some sort of identifier so

256
00:13:37.982 --> 00:13:40.965
that they know whether or
not something's changed or not.

257
00:13:40.965 --> 00:13:44.996
Without that identifier, you basically run
the risk of relying solely on the data to

258
00:13:44.996 --> 00:13:48.744
figure out what's working and when,
especially when it comes to animation,

259
00:13:48.744 --> 00:13:51.208
you will,
it'll bite you in the butt constantly.

260
00:13:51.208 --> 00:13:55.351
So typically what people do then is they
will do the V bind directive because

261
00:13:55.351 --> 00:13:57.995
the key needs to be a unique key for
everything.

262
00:13:57.995 --> 00:14:01.604
And so we can also shortcut this
as well to just like this V key.

263
00:14:01.604 --> 00:14:06.340
And then we can do something as simple as
for example, I sometimes will just take

264
00:14:06.340 --> 00:14:11.161
out the index, and I'll say I will do a ES
lint stringe, sorry the ES six string.

265
00:14:11.161 --> 00:14:13.608
And I'll go item dash index for example.

266
00:14:13.608 --> 00:14:18.339
And so this year then basically provides a
custom key now most of the time when we're

267
00:14:18.339 --> 00:14:21.314
working with databases
hopefully you have UUIDs and

268
00:14:21.314 --> 00:14:23.289
that kind of thing to populate it.

269
00:14:23.289 --> 00:14:28.356
But for the sake of like to sort of
demoing this at the moment, this is how

270
00:14:28.356 --> 00:14:33.346
we could fulfill this requirement
by basically creating our own key.

271
00:14:33.346 --> 00:14:37.068
So you'll see here,
it notices that this is, I think,

272
00:14:37.068 --> 00:14:40.728
identical to the other one,
but index, it doesn't.

273
00:14:40.728 --> 00:14:43.009
So there you go number index.

274
00:14:43.009 --> 00:14:46.027
Great.
What does it not like about it,

275
00:14:46.027 --> 00:14:48.052
it'll format it, okay?

276
00:14:48.052 --> 00:14:49.187
There we go.

277
00:14:49.187 --> 00:14:54.295
And just like that, we have our app now
working inside of the build tool chain.

278
00:14:54.295 --> 00:14:56.614
This is the final bit
that I was talking about.

279
00:14:56.614 --> 00:14:59.837
Remember how I was talking about
where we've enabled TypeScript, but

280
00:14:59.837 --> 00:15:01.026
you don't have to use it?

281
00:15:01.026 --> 00:15:04.452
The main thing here is that you notice
Volar is basically saying, hey,

282
00:15:04.452 --> 00:15:06.978
I thought we're in TypeScript,
what's going on?

283
00:15:06.978 --> 00:15:11.103
So what you've gotta do here is
go into your tsconfig.json, and

284
00:15:11.103 --> 00:15:14.479
under the compiler options,
we can allowJs to true.

285
00:15:14.479 --> 00:15:19.258
And that will basically prevent it from
yelling at us anymore if we don't use

286
00:15:19.258 --> 00:15:20.161
TypeScript.

287
00:15:20.161 --> 00:15:22.819
But on the other hand,
if anyone ever does use TypeScript,

288
00:15:22.819 --> 00:15:24.373
it's just gonna work magically.

289
00:15:24.373 --> 00:15:26.501
We in all the configurations
that already work?

290
00:15:26.501 --> 00:15:27.190
Yes go.

291
00:15:27.190 --> 00:15:29.738
&gt;&gt; If you have an existing project,

292
00:15:29.738 --> 00:15:33.932
would you probably not
recommend trying to devise it?

293
00:15:33.932 --> 00:15:35.044
&gt;&gt; So the question here is around.

294
00:15:35.044 --> 00:15:37.552
If you have an existing project
that already works, whether or

295
00:15:37.552 --> 00:15:38.747
not to switch it over to Vite.

296
00:15:38.747 --> 00:15:42.888
Honestly, I most of the people who've
switched to tool chain have found very

297
00:15:42.888 --> 00:15:46.904
little difference in terms of like
it's not like other build tools where,

298
00:15:46.904 --> 00:15:49.022
like something usually major breaks.

299
00:15:49.022 --> 00:15:51.723
So I guess a lot of it boils down
to actually your dependencies.

300
00:15:51.723 --> 00:15:52.800
I would take a look at that.

301
00:15:52.800 --> 00:15:56.748
If you have a lot of dependencies that
rely on some sort of Webpack build,

302
00:15:56.748 --> 00:15:59.678
then in that case,
Vite might be a little premature.

303
00:15:59.678 --> 00:16:04.186
But if it's a more evergreen project where
it has like standard JavaScript stuff that

304
00:16:04.186 --> 00:16:08.133
is JavaScript libraries installed that
might already have ESM support for

305
00:16:08.133 --> 00:16:08.837
ES modules.

306
00:16:08.837 --> 00:16:11.801
Then that would be a great case for
like, let's just try and

307
00:16:11.801 --> 00:16:16.074
see what happens because the performance
improvements that people are experiencing

308
00:16:16.074 --> 00:16:17.751
on Vite are pretty significant.

309
00:16:17.751 --> 00:16:20.488
And so honestly it's worth
like an hour time box effort,

310
00:16:20.488 --> 00:16:22.952
just to see if you can improve
the DX on that regard.

