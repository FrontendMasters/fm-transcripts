WEBVTT

1
00:00:00.000 --> 00:00:01.900
We've been talking about
single file components.

2
00:00:01.900 --> 00:00:04.260
And it's really time for
us to really start diving into it.

3
00:00:04.260 --> 00:00:09.050
Because what we've really done is
basically moved our entire app from

4
00:00:09.050 --> 00:00:11.100
index.html into app.vue.

5
00:00:11.100 --> 00:00:14.566
But this code,
there's a lot going on here, right?

6
00:00:14.566 --> 00:00:17.230
Especially, cuz there's a lot of logic and
more importantly,

7
00:00:17.230 --> 00:00:19.430
things can be scoped kinda differently.

8
00:00:19.430 --> 00:00:22.743
So it's time to really dive into
component-driven development

9
00:00:22.743 --> 00:00:23.530
at this point.

10
00:00:25.090 --> 00:00:27.315
Okay, so for what I'm gonna do here,

11
00:00:27.315 --> 00:00:31.291
I'm gonna delete all the boilerplate
inside of our code base here.

12
00:00:31.291 --> 00:00:34.030
So that we're not dealing
with any boilerplate.

13
00:00:34.030 --> 00:00:35.789
So let me go ahead and
refactor that real quick.

14
00:00:39.775 --> 00:00:43.315
Factor: delete boilerplate components,
okay.

15
00:00:47.336 --> 00:00:49.690
So now, let's talk about how we
actually create components in Vue.

16
00:00:50.980 --> 00:00:53.680
As we mentioned, single file
components are basically the way to go.

17
00:00:53.680 --> 00:00:58.130
So let's start with something like the,
let's start with something simple.

18
00:00:58.130 --> 00:01:00.270
Actually, I'm in the wrong directory for
this.

19
00:01:00.270 --> 00:01:04.553
Let's go back to the playground,
cuz we'll use the exercise for that.

20
00:01:06.997 --> 00:01:13.820
Okay, inside of my playground,
let's take a look at this one.

21
00:01:13.820 --> 00:01:15.748
So now, that we're actually
in the build tool though,

22
00:01:15.748 --> 00:01:17.815
I need to actually make
sure I run the right one.

23
00:01:17.815 --> 00:01:21.660
So I'll go back to my playground app and
run dev.

24
00:01:21.660 --> 00:01:23.135
And so now, that we're running it,
there we go.

25
00:01:23.135 --> 00:01:25.389
We see that it automatically refreshed
without me doing anything, so

26
00:01:25.389 --> 00:01:27.155
this is great, we have the update.

27
00:01:27.155 --> 00:01:31.515
All right, so let's take a look at
what's going on inside of our app here.

28
00:01:31.515 --> 00:01:34.081
There is a lot, we've played
around with different concepts,

29
00:01:34.081 --> 00:01:37.040
we talked about lists of numbers,
we talked about this increment thing.

30
00:01:37.040 --> 00:01:39.171
So basically,
let's start with the simplest thing,

31
00:01:39.171 --> 00:01:41.190
which is that we have a counter component.

32
00:01:41.190 --> 00:01:44.780
That's like the easiest thing that we
could split off from this at this point.

33
00:01:44.780 --> 00:01:48.460
And so what we can do then is we can say,
okay, let's go into the components folder.

34
00:01:48.460 --> 00:01:53.465
And let's create a new one
called counter.view, okay?

35
00:01:53.465 --> 00:01:56.119
So I'm gonna go ahead and full screen
this, so that it's easier to see,

36
00:01:56.119 --> 00:01:58.480
since we don't actually need to
see the live updates right now.

37
00:01:59.970 --> 00:02:02.633
When you're creating a new component,
basically,

38
00:02:02.633 --> 00:02:04.415
we have our basic building blocks.

39
00:02:04.415 --> 00:02:07.420
We have our script block and
we have our template block.

40
00:02:07.420 --> 00:02:08.740
We don't have any custom
styling right now.

41
00:02:08.740 --> 00:02:10.170
So I'm not gonna add anything.

42
00:02:10.170 --> 00:02:12.690
And so let's start moving some stuff over.

43
00:02:12.690 --> 00:02:16.290
So what I would do is I would actually
start by saying, okay, so inside of my

44
00:02:16.290 --> 00:02:20.311
script block, I will export a default
object, cuz this is what I'm configuring.

45
00:02:20.311 --> 00:02:24.940
And so inside of my data, what do
we have that we wanna migrate over?

46
00:02:24.940 --> 00:02:27.550
Well, we care about the count,
so that looks good.

47
00:02:27.550 --> 00:02:29.580
The counter title, yeah,
that sounds good too.

48
00:02:30.680 --> 00:02:34.630
And we care about the incrementAmount,
this is good.

49
00:02:34.630 --> 00:02:37.400
And then listOfNumbers's not relevant.

50
00:02:37.400 --> 00:02:41.944
Okay, okay, we have some computed
properties, that's relevant for

51
00:02:41.944 --> 00:02:45.530
displayTitle and optimizedIncrementAmount.

52
00:02:45.530 --> 00:02:48.050
So actually none of this is
related to anything else, right?

53
00:02:48.050 --> 00:02:52.897
Cuz we have the count, which is here, we
have the displayTitle, which is here, and

54
00:02:52.897 --> 00:02:55.430
the incrementalAmount is here.

55
00:02:55.430 --> 00:02:58.072
Meaning, we can take this
whole block actually and

56
00:02:58.072 --> 00:03:01.277
just cut that from the app.view,
and then we can put it here.

57
00:03:01.277 --> 00:03:05.320
And then finally, we have this increment
count method that we're using.

58
00:03:05.320 --> 00:03:06.660
And we're actually not
even using the watch.

59
00:03:06.660 --> 00:03:11.355
So we can actually delete this and
we can cut the methods entire block over.

60
00:03:14.839 --> 00:03:19.676
And then what you'll see that we end up
having here is that we have all of our

61
00:03:19.676 --> 00:03:22.420
logic now scoped to the counter, right?

62
00:03:22.420 --> 00:03:25.600
Nothing that's relevant to it is
kept to it and this is great, right?

63
00:03:25.600 --> 00:03:28.549
And to be clear, this is not
a view thing like, React Angular.

64
00:03:28.549 --> 00:03:32.265
We've all been basically thinking this
way as far as like keeping our concerns

65
00:03:32.265 --> 00:03:33.620
scope to the same file.

66
00:03:33.620 --> 00:03:35.160
So it's easier for people to understand.

67
00:03:35.160 --> 00:03:37.450
You don't have to jump files as much.

68
00:03:37.450 --> 00:03:40.645
Now, of course, we've got to make sure we
move all the stuff that's related though

69
00:03:40.645 --> 00:03:42.640
to the counter app when it comes to HTML.

70
00:03:42.640 --> 00:03:44.990
So we have that here, here, here, here.

71
00:03:44.990 --> 00:03:49.340
I think I mostly organized it together,
so there's not too much mystery there.

72
00:03:49.340 --> 00:03:52.988
And so I can cut all that and just drop
it over here inside of the template.

73
00:03:56.960 --> 00:04:00.565
And so what you got here now is we
have our scoped JavaScript and HTML.

74
00:04:00.565 --> 00:04:03.699
And so now, it's the time where we
actually kind of wanna see what's going on

75
00:04:03.699 --> 00:04:04.480
inside of the app.

76
00:04:05.510 --> 00:04:08.324
And so if we take a look,
you'll notice our counter app is gone.

77
00:04:08.324 --> 00:04:11.510
And that's to be expected,
because we've already moved everything.

78
00:04:11.510 --> 00:04:15.440
But what we haven't done is we
haven't actually called our component.

79
00:04:15.440 --> 00:04:16.460
So how does that actually work?

80
00:04:16.460 --> 00:04:18.457
Well, just like standard JavaScript,

81
00:04:18.457 --> 00:04:21.580
what we wanna do is we wanna
basically import our component.

82
00:04:21.580 --> 00:04:25.090
So we wanna import our counter component
where are we importing it from?

83
00:04:25.090 --> 00:04:28.490
Well, we're gonna move up a directory,
cuz right now we're in app.vue.

84
00:04:28.490 --> 00:04:32.340
We're gonna move, wait counter
is in the wrong one right now.

85
00:04:32.340 --> 00:04:34.970
It needs to move down here, okay.

86
00:04:34.970 --> 00:04:38.070
So we have our app.vue and
we're gonna import counter.

87
00:04:38.070 --> 00:04:42.142
And so this is following the file path
directory where we have the root directory

88
00:04:42.142 --> 00:04:45.683
which is this flat one right here,
I'm gonna go up into components.

89
00:04:47.591 --> 00:04:51.792
And then we're gonna import counter.vue,
it's all we're gonna do.

90
00:04:51.792 --> 00:04:55.484
You'll notice that our extensions are
yelling at us, because why is saying hey,

91
00:04:55.484 --> 00:04:58.120
you import something
you never ever used it?

92
00:04:58.120 --> 00:05:01.974
And so the way we actually register
a component inside of use option API

93
00:05:01.974 --> 00:05:04.977
is well, there is an aptly
called components option,

94
00:05:04.977 --> 00:05:08.330
where we can basically register
our counter just like that.

95
00:05:10.680 --> 00:05:14.291
And then-
&gt;&gt; Your methods is inside of your

96
00:05:14.291 --> 00:05:16.320
computer's encounter?

97
00:05:17.960 --> 00:05:21.697
&gt;&gt; Computed, yeah, you're totally right.

98
00:05:21.697 --> 00:05:25.104
So the observation was pointed out
here that my methods when I copy and

99
00:05:25.104 --> 00:05:27.670
pasted was copy pasted at the wrong point.

100
00:05:27.670 --> 00:05:29.090
So we should actually move this out.

101
00:05:29.090 --> 00:05:32.669
There you go, now, that looks much better.

102
00:05:32.669 --> 00:05:35.750
[SOUND] Yeah, that's another thing
we'll talk about in a second.

103
00:05:35.750 --> 00:05:38.560
Okay, there we go,
we have counter and this is good.

104
00:05:38.560 --> 00:05:40.700
And then now, we need to actually use it,
how to use it?

105
00:05:40.700 --> 00:05:42.380
Well, it's a custom component.

106
00:05:42.380 --> 00:05:46.510
So whatever we named it,
basically, we'll do the trick.

107
00:05:46.510 --> 00:05:48.754
And so there we go,
there's our counter component.

108
00:05:48.754 --> 00:05:51.489
A couple of things that might be new
if you're haven't really worked with

109
00:05:51.489 --> 00:05:54.670
components before, is that this is
what's called a self-closing tag.

110
00:05:54.670 --> 00:05:57.690
So this is the equivalent of doing this.

111
00:05:57.690 --> 00:06:01.519
It's just a little bit more succinct,
because rather than duplicating it over,

112
00:06:01.519 --> 00:06:04.800
it's fairly combed as
a self-enclosed like this.

113
00:06:04.800 --> 00:06:07.741
In addition, something else that
view tries to get you to do though,

114
00:06:07.741 --> 00:06:11.108
before we talk more about this is you'll
notice that earlier I had this error.

115
00:06:11.108 --> 00:06:15.205
Which is from es lint in that we really
tried to recommend that you use multiword

116
00:06:15.205 --> 00:06:16.710
component names.

117
00:06:16.710 --> 00:06:17.385
And the reason for

118
00:06:17.385 --> 00:06:20.700
that is because you never know when
the HTML spec is going to add something.

119
00:06:20.700 --> 00:06:25.490
And they basically have, they get first
dibs when it comes to one word components.

120
00:06:25.490 --> 00:06:28.754
So rather than basically run
the risk of conflicting that,

121
00:06:28.754 --> 00:06:32.620
what I might do instead is I might
call this like base counter, right?

122
00:06:32.620 --> 00:06:37.510
This is like the the counter
to rule all components.

123
00:06:37.510 --> 00:06:39.874
And so you'll notice here though
that volar, hey, it says,

124
00:06:39.874 --> 00:06:42.090
I noticed you're refactoring some stuff.

125
00:06:42.090 --> 00:06:43.700
And you say,
what do you what did you notice?

126
00:06:43.700 --> 00:06:47.782
And it says, look, I noticed that inside
of here, it'll actually track the file

127
00:06:47.782 --> 00:06:51.070
path of the thing that it's
related to which is pretty cool.

128
00:06:51.070 --> 00:06:54.294
So I can go ahead and apply that and now,
you'll see that instead of app.vue it's

129
00:06:54.294 --> 00:06:56.975
gone ahead and actually renamed it
correctly inside of my imports.

130
00:06:56.975 --> 00:06:59.410
Which is a nice optimization
that it does for us.

131
00:06:59.410 --> 00:07:03.930
But once again, I really would like
to avoid the single word naming.

132
00:07:03.930 --> 00:07:05.404
So I'm just gonna do that like that.

133
00:07:05.404 --> 00:07:09.200
And then you'll see everything
still works as expected.

134
00:07:09.200 --> 00:07:13.407
But another thing that view does for
you in terms of extending upon HTML

135
00:07:13.407 --> 00:07:16.472
standards is,
you might not like the Pascal case,

136
00:07:16.472 --> 00:07:19.860
which is where you have
the multiword capitalized.

137
00:07:19.860 --> 00:07:25.015
And you might say, I would rather just do
like the standard kebab case for HTML.

138
00:07:25.015 --> 00:07:27.620
And believe it or not,
that actually just works.

139
00:07:27.620 --> 00:07:32.119
Vue will out of the box basically allow
you to convert between two cases,

140
00:07:32.119 --> 00:07:35.090
because it knows how to
track the differences.

141
00:07:36.280 --> 00:07:39.470
And so to say which one is better?

142
00:07:39.470 --> 00:07:42.320
It depends a lot on the team
that you're working with.

143
00:07:42.320 --> 00:07:44.970
I would say in terms of pros and cons.

144
00:07:44.970 --> 00:07:49.067
One of the nice thing about the Pascal
case is that it becomes very evident that

145
00:07:49.067 --> 00:07:52.990
this is something very specific to
the app that this is something custom.

146
00:07:54.220 --> 00:07:59.370
Granted, if using a multiword component,
that also kind of does the job as well.

147
00:07:59.370 --> 00:08:01.600
So it's just kind of what
you're used to in that regard.

148
00:08:01.600 --> 00:08:02.806
You have a question?

149
00:08:02.806 --> 00:08:04.970
&gt;&gt; The inverse of that work,
can you name the file kebab case?

150
00:08:06.440 --> 00:08:08.190
&gt;&gt; I should be able to,
let's give that a shot.

151
00:08:09.438 --> 00:08:13.918
So the question was,
can we name the file kebab case?

152
00:08:13.918 --> 00:08:17.502
Like that, and then what did it change,
well, here we go,

153
00:08:17.502 --> 00:08:20.890
notice that we have applied that,
so we can apply that.

154
00:08:21.955 --> 00:08:25.135
And then inside of here,
we're good inside of here.

155
00:08:26.485 --> 00:08:30.195
This we can do anything about,
cuz this is like an import.

156
00:08:31.225 --> 00:08:33.835
And then I think that
actually still works.

157
00:08:33.835 --> 00:08:35.285
Yep, that's the works.

158
00:08:35.285 --> 00:08:39.695
The main thing about that is be
consistent, that's the only thing I asked.

159
00:08:39.695 --> 00:08:41.875
It doesn't matter which one you choose,
just be consistent.

