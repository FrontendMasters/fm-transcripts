WEBVTT

1
00:00:00.292 --> 00:00:03.656
So story time, when I first started
getting started with coding,

2
00:00:03.656 --> 00:00:06.779
I was one of those people who
thought that JavaScript, well,

3
00:00:06.779 --> 00:00:09.501
in order to know JavaScript,
you need to learn Java.

4
00:00:09.501 --> 00:00:12.664
And this was back in the day where I
was learning from an O'Reilly book,

5
00:00:12.664 --> 00:00:15.054
I picked up an HTML book that
my dad kinda left around.

6
00:00:15.054 --> 00:00:16.905
And then so
when I saw the JavaScript outside,

7
00:00:16.905 --> 00:00:19.480
I picked up the Java book instead and
then I got really confused.

8
00:00:19.480 --> 00:00:23.258
And then I gave up, and
I was discouraged for many, many years.

9
00:00:23.258 --> 00:00:26.734
But then when I started getting back into
it, then I sort of learned, okay, so

10
00:00:26.734 --> 00:00:27.541
it's different.

11
00:00:27.541 --> 00:00:30.020
And I started working with jQuery,
and then at around this time,

12
00:00:30.020 --> 00:00:31.790
framework was starting
to become really big.

13
00:00:31.790 --> 00:00:35.932
So of course, Angular at this point had
really started to get really popular at

14
00:00:35.932 --> 00:00:38.399
that point, and
then React came on the scene.

15
00:00:38.399 --> 00:00:41.047
And so at this point, I'm thinking, okay,

16
00:00:41.047 --> 00:00:43.426
how am I going to get
my skills up to date?

17
00:00:43.426 --> 00:00:45.573
And so I had kind of worked
with all of these, and

18
00:00:45.573 --> 00:00:48.689
React was the one I'd really been
pushing for at one of my old jobs when

19
00:00:48.689 --> 00:00:51.901
I really first started getting hands
on experience with frameworks.

20
00:00:51.901 --> 00:00:55.010
Because after all, this was at least,
as far as the statistics show,

21
00:00:55.010 --> 00:00:56.023
the most popular one.

22
00:00:56.023 --> 00:00:59.339
And it gave me a lot of opportunities
to practice JavaScript, so why not?

23
00:00:59.339 --> 00:01:03.325
But what's interesting is that at this
company even though I was pushing for

24
00:01:03.325 --> 00:01:04.827
React, I had my team going.

25
00:01:04.827 --> 00:01:07.344
Well, there's this new kid
on the block called Vue, and

26
00:01:07.344 --> 00:01:10.399
this around time Vue 2 come out that
we should really check this out.

27
00:01:10.399 --> 00:01:14.342
It's supposed to be basically
just as performant as React, and

28
00:01:14.342 --> 00:01:17.344
it has a more approachable
way of building apps.

29
00:01:17.344 --> 00:01:18.105
And for me, I was like,

30
00:01:18.105 --> 00:01:20.371
I wanna learn the most popular thing,
right, the most cutting edge.

31
00:01:20.371 --> 00:01:22.926
So I was incredibly resistant to it.

32
00:01:22.926 --> 00:01:25.758
And so part of the reason I tell this
story is because I want you to know

33
00:01:25.758 --> 00:01:28.343
that this is where I came from as
far as experience working with

34
00:01:28.343 --> 00:01:29.804
all these different frameworks.

35
00:01:29.804 --> 00:01:32.754
And then from this
context of switching from

36
00:01:32.754 --> 00:01:35.553
React to Angular into the Vue ecosystem.

37
00:01:35.553 --> 00:01:37.399
And yeah, so we'll go from here.

38
00:01:39.514 --> 00:01:44.408
Okay, so just to make sure we clarify
the simple definition of what Vue is.

39
00:01:44.408 --> 00:01:47.705
I think the simplest way to think about
is it's a JavaScript framework for

40
00:01:47.705 --> 00:01:50.540
building web user interfaces,
that's basically what it is.

41
00:01:50.540 --> 00:01:52.560
It can certainly be used
to power other things.

42
00:01:52.560 --> 00:01:55.264
Now, that we have frameworks that
can help you build mobile apps,

43
00:01:55.264 --> 00:01:56.876
you can certainly use the underlying.

44
00:01:56.876 --> 00:01:59.508
But primarily,
it's used to build web interfaces.

45
00:02:01.748 --> 00:02:04.257
Now, of course,
the big question here is why Vue.js?

46
00:02:04.257 --> 00:02:07.279
Why would people consider using Vue?

47
00:02:07.279 --> 00:02:10.155
The first thing is that it's
designed to be approachable.

48
00:02:10.155 --> 00:02:12.909
And what does that mean when
we talk about approachable?

49
00:02:12.909 --> 00:02:17.610
And so this is taken from the docs in that
Vue builds on top of standard HTML, CSS,

50
00:02:17.610 --> 00:02:21.711
and JavaScript with intuitive API and
world-class documentation.

51
00:02:23.196 --> 00:02:27.179
For those coming from the React world,
one of the things you'll know is that one

52
00:02:27.179 --> 00:02:31.061
thing React does is it goes all in on
your ability to know JavaScript, right?

53
00:02:31.061 --> 00:02:33.837
You have to be able to write
basically everything in it, and

54
00:02:33.837 --> 00:02:36.123
things have sort of gotten
improved since then.

55
00:02:36.123 --> 00:02:37.824
But especially in the beginning,

56
00:02:37.824 --> 00:02:41.822
you were sort of kept to the conventions
of JavaScript when you were writing JSX.

57
00:02:41.822 --> 00:02:45.357
So you're writing HTML in your JavaScript,
so you have to do things like class name

58
00:02:45.357 --> 00:02:47.893
instead of just class,
because those are reserved words.

59
00:02:47.893 --> 00:02:52.257
And you find yourself basically
contorting the entire website

60
00:02:52.257 --> 00:02:54.816
into what made sense in JavaScript.

61
00:02:54.816 --> 00:02:59.308
And Vue's approach was that why not take
what people already know, HTML, CSS,

62
00:02:59.308 --> 00:03:03.228
JavaScript, and let's just basically
build on top of that instead.

63
00:03:03.228 --> 00:03:05.277
And so as a result,
you get a different learning curve.

64
00:03:05.277 --> 00:03:07.957
Cuz I know that when I started with React,
I felt

65
00:03:07.957 --> 00:03:12.448
like the amount of JavaScript I needed
to really get productive was super high.

66
00:03:12.448 --> 00:03:15.315
In terms of knowing a lot of
either functional programming, or

67
00:03:15.315 --> 00:03:17.813
a lot of the methods in order
to loop between elements.

68
00:03:17.813 --> 00:03:20.628
There was a lot going on as far
as what's happening in React, so

69
00:03:20.628 --> 00:03:22.338
there's a decent onboarding curve.

70
00:03:22.338 --> 00:03:25.405
But with Vue, I found that
within the first couple hours,

71
00:03:25.405 --> 00:03:27.357
I was able to get not only onboarded.

72
00:03:27.357 --> 00:03:30.958
But I've taught people who have been out
of practice for coding for a long time,

73
00:03:30.958 --> 00:03:32.753
and they got up and running real quick.

74
00:03:32.753 --> 00:03:34.860
And so
I'll show you exactly how that goes, and

75
00:03:34.860 --> 00:03:36.816
we'll get to experience that yourselves.

76
00:03:36.816 --> 00:03:42.078
So this is one of the things to
consider when it comes to Vue.

77
00:03:42.078 --> 00:03:45.206
Performant is always a big thing,
especially with frameworks these days.

78
00:03:45.206 --> 00:03:49.414
The big disclaimer I always wanna add
it first is that vanilla JavaScript and

79
00:03:49.414 --> 00:03:51.465
browser API's have come a long way.

80
00:03:51.465 --> 00:03:54.425
And so if you haven't had
a chance to check out some of

81
00:03:54.425 --> 00:03:57.740
the markers that post on TodoMVC and
vanilla JavaScript.

82
00:03:57.740 --> 00:04:03.802
And so you might not need a framework,
and I say that as a core team member.

83
00:04:03.802 --> 00:04:08.170
But that said, Vue is designed from
the ground up to be a reactive,

84
00:04:08.170 --> 00:04:13.795
compiler-optimized rendering system that
rarely requires manual optimization.

85
00:04:13.795 --> 00:04:16.827
So when it comes to performants,
especially the larger your apps get,

86
00:04:16.827 --> 00:04:19.503
a lot of times people are very
curious about how we can basically

87
00:04:19.503 --> 00:04:22.407
prevent ourselves from creating
bottlenecks in our performants.

88
00:04:22.407 --> 00:04:25.781
Because we don't understand maybe some of
the core primitives about JavaScript, and

89
00:04:25.781 --> 00:04:27.639
that's what frameworks allow for
us, right?

90
00:04:27.639 --> 00:04:29.689
They abstract some of that
performants away, so they say,

91
00:04:29.689 --> 00:04:30.591
we'll take care of that.

92
00:04:30.591 --> 00:04:34.712
You just write your business logic,
and we'll go from there.

93
00:04:34.712 --> 00:04:37.887
And so you might have noticed too I'm
not putting any sort of charts or

94
00:04:37.887 --> 00:04:39.816
numbers as far as sizes go at this moment.

95
00:04:39.816 --> 00:04:42.966
Because one of the things that Vue, and I
think a lot of frameworks are doing right

96
00:04:42.966 --> 00:04:46.298
now is that they're always trying to find
ways to continue to be smaller, right, and

97
00:04:46.298 --> 00:04:48.036
they're learning from each other as we go.

98
00:04:48.036 --> 00:04:51.109
So when you're deciding whether or
not Vue is the performance framework for

99
00:04:51.109 --> 00:04:54.087
you, especially if you're gonna like
migrate an enterprise level app,

100
00:04:54.087 --> 00:04:56.598
you're probably gonna wanna do
some benchmarks of your own.

101
00:04:56.598 --> 00:04:59.530
Because there're gonna be different
contexts to why you might be making

102
00:04:59.530 --> 00:05:02.809
decision, because different bottlenecks
exists within different contexts.

103
00:05:05.228 --> 00:05:08.716
Okay, the other thing is
that Vue is versatile.

104
00:05:08.716 --> 00:05:09.823
So what does that mean?

105
00:05:09.823 --> 00:05:12.298
So via the docs, it's a rich, incremental,

106
00:05:12.298 --> 00:05:16.878
adoptable ecosystem that scales between
a library and a full-featured framework.

107
00:05:16.878 --> 00:05:19.840
And so for anyone who's gotten into
the discussion, usually developers

108
00:05:19.840 --> 00:05:22.717
get very heated about the library
versus framework argument, right?

109
00:05:22.717 --> 00:05:25.155
And that was a big thing for
React too, is React a library?

110
00:05:25.155 --> 00:05:26.986
When is it a framework?

111
00:05:26.986 --> 00:05:30.988
Basically, for Vue, what I will tell you
is that it can be used basically as a CDN,

112
00:05:30.988 --> 00:05:33.134
basically as a drop in
library to your page,

113
00:05:33.134 --> 00:05:35.639
which we'll play around
with just in a little bit.

114
00:05:35.639 --> 00:05:40.041
Or it can be blown up to a fully framework
project that you're used to expect or

115
00:05:40.041 --> 00:05:44.462
you've come to get familiar with when
it comes to front-end applications.

116
00:05:44.462 --> 00:05:47.560
And so that's basically the difference
I would say between the two,

117
00:05:47.560 --> 00:05:50.458
that one usually requires build tools,
the other one does not.

118
00:05:50.458 --> 00:05:52.286
And so Vue is really good at doing that.

119
00:05:52.286 --> 00:05:55.467
The other thing that drew me to Vue,
especially the more I learned about it,

120
00:05:55.467 --> 00:05:56.770
is that it is community first.

121
00:05:56.770 --> 00:06:00.587
Something that I think is often overlooked
when it comes to Vue is that currently,

122
00:06:00.587 --> 00:06:04.568
it is basically within the big three of
the frameworks, right, we have React, Vue,

123
00:06:04.568 --> 00:06:05.088
Angular.

124
00:06:05.088 --> 00:06:08.812
And if we think about it,
React has Facebook backing it,

125
00:06:08.812 --> 00:06:10.992
we have Google backing Angular.

126
00:06:10.992 --> 00:06:14.114
Yet Vue is a community-based
open source project that's

127
00:06:14.114 --> 00:06:16.864
managed to climb to
the popularity that it has now.

128
00:06:16.864 --> 00:06:19.283
I think that speaks a lot
to the conventions and

129
00:06:19.283 --> 00:06:23.266
API's that were designed when Vue was
built as far as its approachability.

130
00:06:23.266 --> 00:06:26.778
I know people like to jump on
the bandwagon as far as what big tech

131
00:06:26.778 --> 00:06:28.050
companies are doing.

132
00:06:28.050 --> 00:06:30.869
But then the fact that Vue is able
to do this while basically learning

133
00:06:30.869 --> 00:06:32.110
from different frameworks.

134
00:06:32.110 --> 00:06:34.507
And basically helping to do
what's best for the community,

135
00:06:34.507 --> 00:06:37.280
I think that's always been a really
attractive selling point of Vue.

136
00:06:37.280 --> 00:06:39.937
It's cuz you know that it's
driven by doing what's best for

137
00:06:39.937 --> 00:06:42.661
the community rather than what's best for
the corporation.

138
00:06:42.661 --> 00:06:46.694
And that we've seen trends of that
over the community at times, but

139
00:06:46.694 --> 00:06:49.682
that's one of the things
I really liked about it.

140
00:06:49.682 --> 00:06:54.522
The other thing about Vue is that most
of the core team is actually made

141
00:06:54.522 --> 00:06:57.030
up of volunteers across the world.

142
00:06:57.030 --> 00:07:00.194
So I think we have somewhat like 26
different countries of volunteers

143
00:07:00.194 --> 00:07:02.633
basically helping to maintain and
build the project.

144
00:07:02.633 --> 00:07:06.113
And that provides for a kind of
international perspective on what's

145
00:07:06.113 --> 00:07:08.993
happening in the world as far
as different kinds of apps.

146
00:07:08.993 --> 00:07:12.673
And so especially when people talk about
numbers and popularity, a lot of things

147
00:07:12.673 --> 00:07:16.420
like npm tend to take statistics from sort
of the Western Hemisphere of the world.

148
00:07:16.420 --> 00:07:19.431
But a lot of things in Asia might
not be included in that, and

149
00:07:19.431 --> 00:07:21.611
we do know that Vue is
heavily used in Asia.

150
00:07:21.611 --> 00:07:24.956
And so it's really cool to see the
different kinds of perspectives that come

151
00:07:24.956 --> 00:07:25.484
with that.

152
00:07:25.484 --> 00:07:26.499
And so with that,

153
00:07:26.499 --> 00:07:30.851
we get a really sort of international
mindset when it comes to building Vue.

154
00:07:32.895 --> 00:07:36.369
Okay, of course, that said,
people when they think about Vue,

155
00:07:36.369 --> 00:07:39.968
because it's not backed by Google,
it's not backed by Facebook,

156
00:07:39.968 --> 00:07:43.271
they wanna know that it's
enterprise-proven and granted.

157
00:07:43.271 --> 00:07:45.789
Now that it's Vue 3,
we've seen a lot of different apps.

158
00:07:45.789 --> 00:07:49.036
I wanna just show a couple for
those who might not be familiar with this.

159
00:07:49.036 --> 00:07:54.187
But Apple actually use Vue to build
their introduction to SwiftUI.

160
00:07:54.187 --> 00:07:56.961
And so the way you know this by the way
is if you install Vue devtools,

161
00:07:56.961 --> 00:07:58.480
which I'll show you how to do later.

162
00:07:58.480 --> 00:08:00.376
You'll notice in the upper right here,

163
00:08:00.376 --> 00:08:04.180
it'll actually detect when Vue is being
used and it'll basically flash green.

164
00:08:04.180 --> 00:08:07.486
By flash green, I mean it'll have
that enabled state, otherwise,

165
00:08:07.486 --> 00:08:08.627
it would be grayed out.

166
00:08:10.287 --> 00:08:11.587
And so here's another page,

167
00:08:11.587 --> 00:08:14.399
here's the Google Careers page
where they're also using Vue.

168
00:08:16.398 --> 00:08:21.359
And then some of you might have
started using Zoom in the pandemic,

169
00:08:21.359 --> 00:08:23.940
and so, yep, Zoom also uses Vue.

170
00:08:23.940 --> 00:08:25.989
As far as e-commerce goes, we have REI.

171
00:08:25.989 --> 00:08:30.147
So for all the outdoor people out there,
when you're using the e-commerce,

172
00:08:30.147 --> 00:08:31.344
Vue is powering that.

173
00:08:31.344 --> 00:08:32.364
L'Oreal Paris as well,

174
00:08:32.364 --> 00:08:35.237
we've had the team actually speak
at some of the conferences before.

175
00:08:35.237 --> 00:08:37.969
It's really fascinating to learn about
the different things they're doing when it

176
00:08:37.969 --> 00:08:38.553
comes to makeup.

177
00:08:38.553 --> 00:08:42.350
So some of the things they were
doing were interactive visually,

178
00:08:42.350 --> 00:08:45.051
imagery where you could
change the lipstick.

179
00:08:45.051 --> 00:08:48.001
And then it would change the image
color of the model and stuff like that.

180
00:08:48.001 --> 00:08:52.767
They're doing some really cool stuff as
far as reactivity in that kind of thing.

181
00:08:52.767 --> 00:08:54.574
And then here's the fun one, Nintendo.

182
00:08:54.574 --> 00:08:56.519
Nintendo is powered by Vue as well as.

183
00:08:56.519 --> 00:08:59.835
So if you ever logged in play around
with that, they are also using Vue.

184
00:09:01.875 --> 00:09:05.925
And if you didn't know, MediaWiki, which
is the big organization behind Wikipedia,

185
00:09:05.925 --> 00:09:07.525
as well as some other properties.

186
00:09:07.525 --> 00:09:11.241
They actually did a really long
investigation into deciding which

187
00:09:11.241 --> 00:09:15.437
framework they would adopt going
forward for their basically migration.

188
00:09:15.437 --> 00:09:21.101
And basically, they landed on Vue,
which we were really happy to hear.

189
00:09:21.101 --> 00:09:23.701
And so if you're ever looking to
see kind of why they did that,

190
00:09:23.701 --> 00:09:25.054
there's a whole paper on that.

191
00:09:25.054 --> 00:09:27.883
So I just wanted to at least
alert you all if you're curious

192
00:09:27.883 --> 00:09:31.524
about a big organization migrating
the Vue and their reasoning behind it,

193
00:09:31.524 --> 00:09:33.167
that is there for y'all to read.

