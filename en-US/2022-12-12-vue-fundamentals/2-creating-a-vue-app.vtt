WEBVTT

1
00:00:00.000 --> 00:00:04.321
So the question here is what do you need
to know to really get started with Vue?

2
00:00:04.321 --> 00:00:08.079
And so earlier we talked about some
prerequisites for the workshop but

3
00:00:08.079 --> 00:00:11.400
this is where I kinda wanna start
us as far as ground zero goes.

4
00:00:11.400 --> 00:00:16.216
As long as you have familiarity with HTML,
CSS, and JavaScript,

5
00:00:16.216 --> 00:00:21.209
and you have familiarity with the code
editor, that is all you need.

6
00:00:21.209 --> 00:00:23.904
And that might come as a surprise to
people because a lot of times when we

7
00:00:23.904 --> 00:00:27.075
think about frameworks, we are thinking
about it from a build tool perspective.

8
00:00:27.075 --> 00:00:30.882
But we're gonna go ahead and
show you how this approach works and

9
00:00:30.882 --> 00:00:35.820
why it's actually a viable approach when
it comes to a lot of organizations looking

10
00:00:35.820 --> 00:00:39.298
to either progressively migrate
their into a framework.

11
00:00:39.298 --> 00:00:43.298
So here's your Morpheus mean, from Matrix.

12
00:00:43.298 --> 00:00:46.357
What if I told you no
build tools were needed?

13
00:00:48.373 --> 00:00:53.100
And so again, some of you will be
understandably skeptical, but we're going

14
00:00:53.100 --> 00:00:57.769
to actually experience this live ourselves
and go through what this is like.

15
00:00:57.769 --> 00:01:01.799
So with that said, has everyone had a
chance to basically fork the repo sort of

16
00:01:01.799 --> 00:01:05.213
clone it down to make sure they
have that environment ready to go?

17
00:01:05.213 --> 00:01:08.097
Okay, great.

18
00:01:09.693 --> 00:01:12.458
So the first thing we're gonna do,
we talked for

19
00:01:12.458 --> 00:01:16.314
a little bit now let's dive right
into some code and check this out.

20
00:01:16.314 --> 00:01:20.198
So, inside of here, you'll notice that
there's very little going on in here.

21
00:01:20.198 --> 00:01:22.365
There's no package dot JSON,
there's no dependency.

22
00:01:22.365 --> 00:01:25.196
So Ron is basically a readme file here and

23
00:01:25.196 --> 00:01:29.451
we have a couple of HTML files for
you to basically work with.

24
00:01:29.451 --> 00:01:32.664
So what I'm gonna do is
I'm gonna go ahead and

25
00:01:32.664 --> 00:01:37.247
open up my playground HTML file
inside of the browser over here.

26
00:01:37.247 --> 00:01:42.222
So to make sure everything's working,
I'm just gonna go ahead and

27
00:01:42.222 --> 00:01:47.284
do and each one with hello front end
masters save refresh there we go,

28
00:01:47.284 --> 00:01:51.672
okay dev environment setup no
build tools required great.

29
00:01:51.672 --> 00:01:54.968
Now, when we think about
building your first Vue app,

30
00:01:54.968 --> 00:01:58.407
I mentioned before because
no build tools are required,

31
00:01:58.407 --> 00:02:02.005
what you can do is you can actually
just drop Vue onto a page.

32
00:02:02.005 --> 00:02:05.967
And so the way we're gonna do
that is we're gonna go ahead and

33
00:02:05.967 --> 00:02:07.920
go on to the Vuejs.orgdocs.

34
00:02:07.920 --> 00:02:13.112
And if we go into the guide,
I believe it's under Quick Start.

35
00:02:13.112 --> 00:02:15.486
We'll see.

36
00:02:15.486 --> 00:02:16.531
Here we go.

37
00:02:16.531 --> 00:02:19.562
There's a section here that
says using view from the CDN.

38
00:02:19.562 --> 00:02:22.835
And all we're gonna do is we're
gonna copy this line right here and

39
00:02:22.835 --> 00:02:24.188
drop it into our HTML file.

40
00:02:26.231 --> 00:02:29.855
It's all we're gonna do here is boom,
paste that in.

41
00:02:29.855 --> 00:02:34.205
And so to verify that this worked, that's
something actually happened we're actually

42
00:02:34.205 --> 00:02:36.529
gonna go ahead and
open up our browser console.

43
00:02:36.529 --> 00:02:38.202
And you'll notice here that one,

44
00:02:38.202 --> 00:02:41.843
it's already alerting us that we're
running a development build of Vue.

45
00:02:41.843 --> 00:02:45.103
So in other words, if we're gonna
deploy this, they're gonna need to use

46
00:02:45.103 --> 00:02:48.155
a production deployment, because
the size is gonna be a bit larger but

47
00:02:48.155 --> 00:02:50.095
this is fine cuz we're learning right now.

48
00:02:50.095 --> 00:02:53.980
So the way you can check the also that
this is working is if you type view it'll

49
00:02:53.980 --> 00:02:57.444
autocomplete and you'll notice
it'll basically bring up the view

50
00:02:57.444 --> 00:02:59.953
object that's ready for
you to do stuff with it.

51
00:02:59.953 --> 00:03:03.635
And so what I'm gonna do right
now is I'm gonna go ahead and

52
00:03:03.635 --> 00:03:06.654
just show you basically
how that kind of works.

53
00:03:06.654 --> 00:03:09.898
So what I'm gonna do here
is we're gonna go ahead and

54
00:03:09.898 --> 00:03:14.620
we're gonna create a div and just like
you typically would expect I'm gonna

55
00:03:14.620 --> 00:03:17.596
call it the div app that's
all we're gonna do.

56
00:03:17.596 --> 00:03:20.817
And then we're gonna say my app in here,
save it.

57
00:03:20.817 --> 00:03:21.675
And we refresh.

58
00:03:21.675 --> 00:03:23.664
There we go, my app is showing up here.

59
00:03:23.664 --> 00:03:25.680
And now let's go to
actually attach our app.

60
00:03:25.680 --> 00:03:26.655
And how do we do that?

61
00:03:26.655 --> 00:03:30.305
So what we're gonna do now is we're gonna
open up the script block at the bottom.

62
00:03:30.305 --> 00:03:32.651
And we're actually going to go ahead and

63
00:03:32.651 --> 00:03:35.485
bring in a function from
view called create app.

64
00:03:35.485 --> 00:03:39.712
So I'm gonna create a constant and
I'm gonna destructure it from Vue.

65
00:03:39.712 --> 00:03:42.894
So it's going to look like this.

66
00:03:42.894 --> 00:03:47.852
Now this is an alternative syntax
basically just calling create

67
00:03:47.852 --> 00:03:51.627
app like this,
calling the function directly.

68
00:03:51.627 --> 00:03:54.577
But there'll be an advantage of this
from like a syntax perspective so

69
00:03:54.577 --> 00:03:56.831
that's why we're destructuring
the function out.

70
00:03:56.831 --> 00:04:03.350
And all we're gonna do is we're gonna go
ahead and say const app equals create app.

71
00:04:03.350 --> 00:04:08.166
And so what that'll do is it'll
create a variable called App, and

72
00:04:08.166 --> 00:04:11.015
then it'll go ahead and create setup.

73
00:04:11.015 --> 00:04:14.865
And all we're gonna do now is we're
gonna mount because what we got to do,

74
00:04:14.865 --> 00:04:17.985
we got to tell view where it is
we wanna actually put the app.

75
00:04:17.985 --> 00:04:20.403
So that is where this
mount keyword comes in.

76
00:04:20.403 --> 00:04:25.197
And we're gonna mount it to the ID
of app which is using the CSS

77
00:04:25.197 --> 00:04:29.712
selector here that are mounted
directly into this part.

78
00:04:29.712 --> 00:04:34.248
So in three lines of code,
we have dropped the view or I guess four,

79
00:04:34.248 --> 00:04:39.932
include the CDN, we've loaded the onto
the page and we basically created the app.

80
00:04:39.932 --> 00:04:43.252
So if we refresh it, we'll notice
nothing's really happening, and

81
00:04:43.252 --> 00:04:46.758
that's totally fine because we
haven't had view display anything yet.

82
00:04:46.758 --> 00:04:50.371
And so when it comes to frameworks, one of
the things that people love about working

83
00:04:50.371 --> 00:04:54.053
with frameworks is that it really helps
attract your data across different states.

84
00:04:54.053 --> 00:04:55.956
So that's called reactive data.

85
00:04:55.956 --> 00:04:59.170
So the fact that when something changes,
it'll go ahead and

86
00:04:59.170 --> 00:05:02.015
make sure that your HTML
page is updated as expected.

87
00:05:02.015 --> 00:05:05.533
So the way we're gonna do this is inside
of our trade app, we're gonna pass it

88
00:05:05.533 --> 00:05:08.961
an object, and this object and allow
us to configure things about our app.

89
00:05:08.961 --> 00:05:10.704
So that's it, so
think of it as a configuration object.

90
00:05:10.704 --> 00:05:15.217
And we're gonna do is we're
gonna pass it a data option, and

91
00:05:15.217 --> 00:05:20.539
we're gonna do is this is gonna be
a function, that returns an object.

92
00:05:20.539 --> 00:05:24.104
And so we think about what's going
on here basically we're saying hey,

93
00:05:24.104 --> 00:05:28.078
Vue will want you to create an app that's
gonna have a data property and the reason

94
00:05:28.078 --> 00:05:31.937
we're using a function here is because
we want to actually basically maintain

95
00:05:31.937 --> 00:05:35.762
the reactivity in terms of like tracking
the latest instance of that object.

96
00:05:35.762 --> 00:05:39.430
Because if you were to do something
instead like just data like this,

97
00:05:39.430 --> 00:05:43.731
the data becomes stale over time, and
there becomes like caching issues, and so

98
00:05:43.731 --> 00:05:47.906
it is become kind of best practice across
frameworks that when you are managing

99
00:05:47.906 --> 00:05:51.447
data, you actually have it be
a function that returns an object and

100
00:05:51.447 --> 00:05:54.573
then the framework will take
care of it from there for you.

101
00:05:54.573 --> 00:05:56.678
And so in this, let us go and
just add a message here.

102
00:05:56.678 --> 00:05:59.214
And this time, I will just say hello.

103
00:05:59.214 --> 00:06:00.975
It works..

104
00:06:00.975 --> 00:06:04.243
Okay, so now here we have our
reactive data message and

105
00:06:04.243 --> 00:06:08.664
the question is how are we going to
actually render that inside of our app?

106
00:06:08.664 --> 00:06:13.846
Well, the way we're gonna do that is we're
going to be using the curly brace syntax.

107
00:06:13.846 --> 00:06:18.558
So this is specific to well actually this
has been a fairly common syntax language.

108
00:06:18.558 --> 00:06:22.254
But as far as the three
frameworks are concerned,

109
00:06:22.254 --> 00:06:27.367
this one Vue uses the double curly brace,
and all we type is message.

110
00:06:27.367 --> 00:06:28.670
That's all it is.

111
00:06:28.670 --> 00:06:30.115
And when we refresh it,

112
00:06:30.115 --> 00:06:35.120
you'll notice your data is now appearing
inside of your page as you would expect.

