WEBVTT

1
00:00:00.360 --> 00:00:04.250
So, to kind of review what just happened,
cuz I know that was a lot.

2
00:00:04.250 --> 00:00:08.365
So, we went ahead and scaffolded a brand
new project using the create-vue CLI,

3
00:00:08.365 --> 00:00:10.980
which created this entire
playground directory.

4
00:00:10.980 --> 00:00:15.460
And then, the key thing here is that,
inside of our index.html,

5
00:00:15.460 --> 00:00:20.420
we can see here that we are getting
our Vue stuff from the source main.ts,

6
00:00:20.420 --> 00:00:23.153
that's how you're gonna follow this.

7
00:00:23.153 --> 00:00:26.817
And so, inside of main.ts,
this is where we can see IS.

8
00:00:26.817 --> 00:00:29.929
This is where we're mounting it to
the app, and then more importantly,

9
00:00:29.929 --> 00:00:31.060
that create app, right?

10
00:00:31.060 --> 00:00:35.731
If we look back at our app right
here inside of playground,

11
00:00:38.489 --> 00:00:40.964
Remember how we pass this object here,

12
00:00:40.964 --> 00:00:44.490
this object now has been
exported out into its own file.

13
00:00:44.490 --> 00:00:46.980
So, that's what I'm talking
about in terms of modularity.

14
00:00:46.980 --> 00:00:51.053
So, this app now, so then to continue
that line of thought, to open it here,

15
00:00:51.053 --> 00:00:53.811
this object that we see
here that we're exporting,

16
00:00:53.811 --> 00:00:56.770
this object is actually
what's being dropped in here.

17
00:00:58.850 --> 00:01:00.960
So, that's how those three
things are being connected.

18
00:01:00.960 --> 00:01:04.433
And this is also one of the reasons why
build tools can be super confusing,

19
00:01:04.433 --> 00:01:06.630
because there are a lot
of moving pieces to it.

20
00:01:07.970 --> 00:01:12.542
And so, to just sort of dive right in,
get your feet wet, what we're gonna do for

21
00:01:12.542 --> 00:01:17.188
this exercise, is go ahead and create
a brand new project with create-vue inside

22
00:01:17.188 --> 00:01:20.475
of our directory that
we've already been using.

23
00:01:20.475 --> 00:01:23.795
And this time you're gonna rename it
to whatever your show name dash forum.

24
00:01:23.795 --> 00:01:26.745
So, in my case,
it'll be Avatar Last Airbender dash forum.

25
00:01:26.745 --> 00:01:31.658
And then we're gonna migrate the stuff
that we've been doing inside of index.html

26
00:01:31.658 --> 00:01:32.795
into App.vue.

27
00:01:32.795 --> 00:01:35.535
For those that haven't upgraded
their Node version in a while,

28
00:01:35.535 --> 00:01:37.220
if you're on anything less than 16.

29
00:01:37.220 --> 00:01:40.789
Basically, Vite doesn't play that well
with some of the older versions because

30
00:01:40.789 --> 00:01:44.440
some of the modern libraries
are actually basically have moved on.

31
00:01:44.440 --> 00:01:49.132
And so, just so, again, this will probably
be outdated by the time cuz Node moves

32
00:01:49.132 --> 00:01:53.920
very quickly, but the latest stable
version is actually 18 at the moment.

33
00:01:53.920 --> 00:01:56.555
So, it's one of those things where if you
feel like the versions are moving quickly,

34
00:01:56.555 --> 00:01:58.140
don't worry, it's not just you.

35
00:01:58.140 --> 00:02:01.919
But, if you're having issues with Vite,
please go ahead and

36
00:02:01.919 --> 00:02:03.528
upgrade to at least 16.

37
00:02:03.528 --> 00:02:07.632
Cuz I know some people have issues
with bit support, like 32 bit,

38
00:02:07.632 --> 00:02:10.165
64 bit support, when it comes to 18.

39
00:02:10.165 --> 00:02:12.760
So, something to consider if
you run into that problem.

40
00:02:16.435 --> 00:02:19.685
So, let's go ahead and
run through that migration once more, and

41
00:02:19.685 --> 00:02:22.250
this time I'll do it with
my TV show that I selected.

42
00:02:23.610 --> 00:02:26.390
So, let's go ahead and do this.

43
00:02:26.390 --> 00:02:28.950
So, what we're gonna do first,
is we're gonna create our new app.

44
00:02:28.950 --> 00:02:31.410
So, I'm gonna do npm create vue@3.

45
00:02:31.410 --> 00:02:34.230
And the reason you want the @3
at the moment is because

46
00:02:34.230 --> 00:02:36.480
you can technically do @2 as well.

47
00:02:36.480 --> 00:02:39.118
I think at some point there probably
will be a default version switch so

48
00:02:39.118 --> 00:02:40.980
that npm create-vue will do its thing.

49
00:02:40.980 --> 00:02:44.468
But for now, it's always safe
to just go ahead and add the 3.

50
00:02:44.468 --> 00:02:49.160
So for me, my TV show is Avatar Last
Airbender, but that's a lot to type out.

51
00:02:49.160 --> 00:02:53.419
So I'm just gonna use the acronym since
most people know it, which is ATLA, for

52
00:02:53.419 --> 00:02:57.060
Avatar The Last Airbender, and
this is the format forum app for it.

53
00:02:57.060 --> 00:03:00.360
For now, I'll just disable TypeScript just
because this is mainly for demo purposes.

54
00:03:00.360 --> 00:03:03.268
But like I said, when it comes to
any sort of app you intend to scale,

55
00:03:03.268 --> 00:03:06.310
it's worth spending the time
to just configure TypeScript.

56
00:03:06.310 --> 00:03:09.172
Add that one line to your TS config
to allow for JavaScript, and

57
00:03:09.172 --> 00:03:12.520
once you do that, you basically can
ignore it until one day you're like,

58
00:03:12.520 --> 00:03:15.830
you know what, I'm gonna try types on
this one file and then easy peasy.

59
00:03:17.110 --> 00:03:20.250
No JSX, we're not gonna worry
about Vue router for now.

60
00:03:20.250 --> 00:03:22.733
I know there are some questions
regarding a standard Vue project.

61
00:03:22.733 --> 00:03:27.172
We will be spending time on Vue router, so
typically, you probably would select yes

62
00:03:27.172 --> 00:03:30.311
for this, in the event you're
planning to scale your app.

63
00:03:30.311 --> 00:03:33.011
But in this case, don't wanna
conflate the pages right now, and

64
00:03:33.011 --> 00:03:34.590
it would be kind of confusing.

65
00:03:34.590 --> 00:03:38.270
So no, same thing with Pinia for
state management.

66
00:03:38.270 --> 00:03:42.783
Not gonna worry about testing, and
figure out those, and then the main two,

67
00:03:42.783 --> 00:03:45.577
I would say yes to,
is the ESLint and Prettier.

68
00:03:45.577 --> 00:03:46.820
That's it.

69
00:03:46.820 --> 00:03:49.767
As you can see here,
we have a new directory here.

70
00:03:49.767 --> 00:03:54.590
And so if we do ls,
we can see that your ATLA forum.

71
00:03:54.590 --> 00:03:58.019
And then if I go and change directories
into it, we'll see now, boom.

72
00:03:58.019 --> 00:04:01.803
We have everything that we would expect
as far as your public directory,

73
00:04:01.803 --> 00:04:05.341
your source directory that contains
your App.vue component, and

74
00:04:05.341 --> 00:04:10.170
then all the different configuration
files, and build stuff that you need.

75
00:04:10.170 --> 00:04:13.450
So, I'm gonna go ahead and just npm
install for that, and let that run.

76
00:04:14.620 --> 00:04:17.772
In the meantime, we can go ahead and
just migrate, cuz the npm install

77
00:04:17.772 --> 00:04:20.720
what it's doing is it's allowing
us to set up a local dev server.

78
00:04:20.720 --> 00:04:23.925
Which I didn't cover earlier, but we'll
explain basically what are the benefits of

79
00:04:23.925 --> 00:04:26.780
it, now that we're starting
to play around with it.

80
00:04:26.780 --> 00:04:28.643
So, let me go ahead and
close all this real quick.

81
00:04:28.643 --> 00:04:32.645
I need this App.vue.

82
00:04:32.645 --> 00:04:38.130
Boom, case split, okay.

83
00:04:38.130 --> 00:04:39.010
There we go.

84
00:04:39.010 --> 00:04:42.860
And then this one,
we need to open up my index.html.

85
00:04:42.860 --> 00:04:44.560
And there we go, okay.

86
00:04:44.560 --> 00:04:47.493
So, when it comes to migration, the first
thing first we'll notice at the top,

87
00:04:47.493 --> 00:04:49.420
is we did customize this title piece.

88
00:04:49.420 --> 00:04:52.592
And normally in some other build tools,
I've experienced in the past,

89
00:04:52.592 --> 00:04:54.781
you have to go through a bit
of work to change that.

90
00:04:54.781 --> 00:04:58.975
But, it's actually fairly easy to do,
because inside of our project,

91
00:04:58.975 --> 00:05:01.883
you'll notice we also
have an index.html here.

92
00:05:01.883 --> 00:05:04.076
And guess what, here is our title.

93
00:05:04.076 --> 00:05:07.256
So, rather than just being Vite app,
I'm just gonna copy over

94
00:05:07.256 --> 00:05:11.650
my Avatar Last Airbender and replace that,
and there we go, we've customized that.

95
00:05:12.740 --> 00:05:17.048
Next, we have everything that's inside of
this app div, so I'm just gonna head and

96
00:05:17.048 --> 00:05:21.190
copy this, knowing that I'm gonna have
a default wrapper, that I'll remove.

97
00:05:22.970 --> 00:05:25.980
So, we'll go ahead and
delete all this stuff inside of template,

98
00:05:25.980 --> 00:05:28.440
cuz this is where our HTML is gonna live.

99
00:05:28.440 --> 00:05:31.410
So, if I paste here, you'll see here
that everything's looking good.

100
00:05:31.410 --> 00:05:33.978
We have some errors that we can
deal with later, but we can go and

101
00:05:33.978 --> 00:05:36.950
delete that Id app,
cuz we don't need that div anymore.

102
00:05:36.950 --> 00:05:37.623
And save that.

103
00:05:37.623 --> 00:05:41.273
And then as you can see, Prettier is
automatically reindenting everything for

104
00:05:41.273 --> 00:05:42.480
us, which is super nice.

105
00:05:44.010 --> 00:05:46.673
Then we won't worry about it yelling
at us at the moment, we'll go ahead and

106
00:05:46.673 --> 00:05:48.060
clean up the JavaScript.

107
00:05:48.060 --> 00:05:50.720
Because this stuff,
we're not worried about it right now.

108
00:05:50.720 --> 00:05:53.724
And then we will also
delete all the styles here,

109
00:05:53.724 --> 00:05:56.147
cuz that's not relevant to us either.

110
00:05:56.147 --> 00:05:59.343
Okay, so finally,
the last thing we need to do though,

111
00:05:59.343 --> 00:06:03.567
is we need to copy all this JavaScript
that we wrote into our script block.

112
00:06:03.567 --> 00:06:10.195
So, if we do that, let's take the entire
object here, Cut that, and then

113
00:06:10.195 --> 00:06:16.120
inside of here, we're gonna export this as
a default object, and just paste that in.

114
00:06:18.370 --> 00:06:19.650
Nothing else has changed.

115
00:06:19.650 --> 00:06:22.900
We have our entire Vue app now,
logic wise inside of here at the top.

116
00:06:24.990 --> 00:06:27.590
And then the last thing we need to
change here, is to add the key.

117
00:06:27.590 --> 00:06:29.496
So, I'm just going ahead and
just do a quick dynamic key.

118
00:06:29.496 --> 00:06:33.091
So bender, and then just do a stat.

119
00:06:33.091 --> 00:06:37.819
So, for objects it's tricky
cuz you don't get an index,

120
00:06:37.819 --> 00:06:42.290
so, I usually just end up
tagging in all of this.

121
00:06:42.290 --> 00:06:44.706
So, you can see here, bender stat type,

122
00:06:44.706 --> 00:06:48.210
that should prevent it from duplicating,
okay?

123
00:06:48.210 --> 00:06:54.549
Then, let's just quickly do that as well,
this will be character-index,

124
00:06:54.549 --> 00:06:59.423
which we'll get by opening up
the second argument inside of

125
00:06:59.423 --> 00:07:03.240
this full list, and
then same thing for here.

126
00:07:03.240 --> 00:07:05.090
So actually, this is interesting.

127
00:07:05.090 --> 00:07:07.620
We have an else-if here,
that's doing even.

128
00:07:07.620 --> 00:07:11.784
So, for the sake of argument, let's
just do even character like that, and

129
00:07:11.784 --> 00:07:12.970
then I can copy this.

130
00:07:14.060 --> 00:07:18.247
And so, inside of here, that way we
basically guarantee that even though these

131
00:07:18.247 --> 00:07:22.684
characters, these things could display,
at the same time they will have different

132
00:07:22.684 --> 00:07:25.200
keys, so,
that way there will be no conflict.

133
00:07:26.860 --> 00:07:29.210
And then we need to actually
fetch the index from this.

134
00:07:29.210 --> 00:07:31.920
So, let's actually split that out as well.

135
00:07:31.920 --> 00:07:32.730
There we go.

136
00:07:32.730 --> 00:07:34.444
Oops, looks like I have
a couple more to do.

137
00:07:34.444 --> 00:07:36.970
Gosh, there is a lot in here.

138
00:07:36.970 --> 00:07:39.434
Let's call this comma-list.

139
00:07:40.500 --> 00:07:42.510
And then, there we go.

140
00:07:42.510 --> 00:07:45.663
And then v-else there are odd characters.

141
00:07:45.663 --> 00:07:48.208
Has no adjacent if, what?

142
00:07:48.208 --> 00:07:49.750
I know why.

143
00:07:49.750 --> 00:07:50.938
Okay, so this is a fun error, so

144
00:07:50.938 --> 00:07:54.090
I actually didn't realize this
has been broken the whole time.

145
00:07:54.090 --> 00:07:57.692
So, this is one of the advantages of using
build tools, is because if we look at this

146
00:07:57.692 --> 00:08:01.560
error message, it says, v-else,
v-else-if has no adjacent v-if, v-else-if.

147
00:08:01.560 --> 00:08:06.471
Because if we actually look here, the next
element right next to it, it's sibling,

148
00:08:06.471 --> 00:08:09.180
is actually just a normal p element.

149
00:08:09.180 --> 00:08:11.490
Through the course of me messing around,

150
00:08:11.490 --> 00:08:15.390
at some point I basically moved it
way too far from its original check.

151
00:08:15.390 --> 00:08:17.704
And so if we look here,
this is actually where it belongs,

152
00:08:17.704 --> 00:08:19.380
it actually belongs up here.

153
00:08:19.380 --> 00:08:21.297
So, I'm gonna go ahead and cut this out.

154
00:08:21.297 --> 00:08:24.440
So again, just like spell check,
and when you're writing papers,

155
00:08:24.440 --> 00:08:25.849
with build tools like Volar and

156
00:08:25.849 --> 00:08:29.334
extensions, it can make life a lot
easier to catching those kind of errors.

157
00:08:29.334 --> 00:08:33.320
So that you're not like, wait,
where did everything go?

158
00:08:33.320 --> 00:08:37.590
&gt;&gt; So, these weren't caught before because
the plugin just couldn't build it?

159
00:08:37.590 --> 00:08:39.651
&gt;&gt; At the time,
I will say I actually had it disabled.

160
00:08:39.651 --> 00:08:42.521
So, it's possible it might have caught it,
but

161
00:08:42.521 --> 00:08:45.111
at the same time it can
be tricky sometimes,

162
00:08:45.111 --> 00:08:49.394
cuz you have to make sure it can detect
that the Vue language is being run.

163
00:08:49.394 --> 00:08:54.239
So, I'm less confident that the extension
would actually pick up on it inside of

164
00:08:54.239 --> 00:08:55.660
an index.html.

165
00:08:55.660 --> 00:08:59.786
But something worth trying later on,
just to kinda see if that works.

166
00:08:59.786 --> 00:09:04.342
Okay, so to make sure this works, we're
not gonna save the changes to this, but

167
00:09:04.342 --> 00:09:05.930
this is good.

168
00:09:05.930 --> 00:09:08.820
We are gonna go ahead and
run this, npm run dev.

169
00:09:10.180 --> 00:09:12.110
Here we go.

170
00:09:12.110 --> 00:09:17.299
And we can see a lot of things are broken,
and the reason it's broken is because why,

171
00:09:17.299 --> 00:09:20.460
inside of our main.js we
are importing a main CSS.

172
00:09:20.460 --> 00:09:22.290
And we don't want all
that styles right now.

173
00:09:22.290 --> 00:09:23.200
So, there we go.

174
00:09:23.200 --> 00:09:25.060
Now it looks exactly as we expect.

175
00:09:25.060 --> 00:09:28.770
We can favorite stuff just like we
did before, our statistics show up.

176
00:09:28.770 --> 00:09:29.310
This looks good.

177
00:09:31.180 --> 00:09:35.784
Okay, does anyone have any questions
about the migration overall?

178
00:09:35.784 --> 00:09:39.470
I know it's kind of a lot to go
from the index.html to this, but

179
00:09:39.470 --> 00:09:43.100
it's one of those things where I
think once you get used to it.

180
00:09:43.100 --> 00:09:46.673
And more importantly, most of the time
you won't be in an index html file, and

181
00:09:46.673 --> 00:09:49.449
moving over to build,
you will basically be starting here.

182
00:09:49.449 --> 00:09:52.371
And we'll basically start getting
more practice with how we work in

183
00:09:52.371 --> 00:09:54.750
this particular environment going forward.

184
00:09:54.750 --> 00:09:57.388
And so something else I did wanna
cover though before we move

185
00:09:57.388 --> 00:10:00.630
on to the next section is, why do we
go through all this process, right?

186
00:10:00.630 --> 00:10:04.416
We talked a lot about builds,
optimizations, but, one of the things that

187
00:10:04.416 --> 00:10:07.179
we have an advantage of when
we have a local dev server,

188
00:10:07.179 --> 00:10:09.308
is what's called hot module reloading.

189
00:10:09.308 --> 00:10:11.389
So, as what we can see
here inside of App.vue,

190
00:10:11.389 --> 00:10:14.690
I noticed that actually my
statistics doesn't have a heading.

191
00:10:14.690 --> 00:10:16.397
And so,
in the past when we where coding earlier,

192
00:10:16.397 --> 00:10:18.290
you might have noticed I
would have to add my changes.

193
00:10:18.290 --> 00:10:21.067
I'd have to switch, or
I'd have to save it inside of VS Code, and

194
00:10:21.067 --> 00:10:23.400
then I have to update it
inside of the browser.

195
00:10:23.400 --> 00:10:26.983
Well, you might have noticed that
I didn't even switch contexts, and

196
00:10:26.983 --> 00:10:30.402
Vite's already updated the browser
to have all my latest changes.

197
00:10:30.402 --> 00:10:34.540
So that in the event, it was like,
stat times 2, I can save that.

198
00:10:34.540 --> 00:10:36.033
You can see it's super fast,

199
00:10:36.033 --> 00:10:40.520
to the point where sometimes you might
even realize that your code has changed.

200
00:10:40.520 --> 00:10:44.144
And that's the kind of thing that Vite has
done to help as far as performance things,

201
00:10:44.144 --> 00:10:47.617
is because now when you make changes on
your code, it's nearly instantaneous,

202
00:10:47.617 --> 00:10:49.370
as far as seeing the results of that.

203
00:10:49.370 --> 00:10:52.670
So, that has been pretty
cool as far as a devex goes.

204
00:10:52.670 --> 00:10:56.198
But incase you ever feel like, this is why
sometimes I make large changes, because,

205
00:10:56.198 --> 00:10:59.040
once again, this time's 2 bit,
if you're not paying attention,

206
00:10:59.040 --> 00:11:01.000
you won't even realize this updated.

207
00:11:01.000 --> 00:11:06.090
So, anyhow, that's something to note
when it comes to working with this.

208
00:11:06.090 --> 00:11:07.864
&gt;&gt; So, if you're not using Vite,

209
00:11:07.864 --> 00:11:12.570
you can't use the dot vue way of
breaking these things up, or is that?

210
00:11:12.570 --> 00:11:13.670
&gt;&gt; You can.

211
00:11:13.670 --> 00:11:15.290
Vite is just the bundler underneath.

212
00:11:15.290 --> 00:11:17.920
So, that's why Vue CLI allows you to,
wait,

213
00:11:17.920 --> 00:11:22.000
when you say break it up via the Vue,
you mean like via dot vue files?

214
00:11:22.000 --> 00:11:23.130
&gt;&gt; Yeah, and have a dot vue file.

215
00:11:24.242 --> 00:11:25.665
&gt;&gt; So that's not specific to Vite.

216
00:11:25.665 --> 00:11:27.290
Webpack was able to do that too.

217
00:11:27.290 --> 00:11:28.900
That's how we were doing
in vue 2 beforehand.

218
00:11:29.910 --> 00:11:34.890
Vite is just making the dependencies
a lot faster to load, that kind of stuff.

219
00:11:34.890 --> 00:11:38.250
It actually doesn't have anything
to do with Vue specifically.

220
00:11:38.250 --> 00:11:42.539
&gt;&gt; Okay, so the dot vue way of doing
it is that you can do that with any

221
00:11:42.539 --> 00:11:43.184
kind of-

222
00:11:43.184 --> 00:11:44.223
&gt;&gt; Yeah,
&gt;&gt; Okay.

223
00:11:44.223 --> 00:11:47.930
&gt;&gt; Mm-hm, and we're about to do more of
that in just, actually in this section.

