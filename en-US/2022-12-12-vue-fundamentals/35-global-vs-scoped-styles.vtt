WEBVTT

1
00:00:00.000 --> 00:00:02.533
We're gonna take a bit of a mental break.

2
00:00:02.533 --> 00:00:05.202
[LAUGH] Because we've been
doing a lot of JavaScript,

3
00:00:05.202 --> 00:00:07.168
doing a lot of the heavy lifting stuff.

4
00:00:07.168 --> 00:00:10.842
Let's talk about styling your app,
because let's face it as web developers.

5
00:00:10.842 --> 00:00:14.664
Styling your app is a real thing, managing
CSS, a lot of us might not love it.

6
00:00:14.664 --> 00:00:18.724
I happen to love CSS, but I wanna
show you what's possible with Vue so

7
00:00:18.724 --> 00:00:22.793
that those ideas can get flow in when
it comes to time to style the app.

8
00:00:22.793 --> 00:00:28.338
So I'm gonna go ahead and
go back to the playground,

9
00:00:28.338 --> 00:00:31.243
run dev, and we're good.

10
00:00:31.243 --> 00:00:33.702
Okay, let's take a look
at our base counter,

11
00:00:33.702 --> 00:00:36.932
since this is what we have showing
up on the screen right now.

12
00:00:36.932 --> 00:00:42.184
Okay, so we talked a lot about templates,
we talked a lot about script.

13
00:00:42.184 --> 00:00:43.319
Let's talk about style.

14
00:00:43.319 --> 00:00:44.515
So actually, I take that back.

15
00:00:44.515 --> 00:00:47.909
I'm going back to playground because this
is a simpler file to read right now.

16
00:00:47.909 --> 00:00:51.166
New base counter has
a lot of stuff going on.

17
00:00:51.166 --> 00:00:53.957
So the style block here,
what exactly is going on here?

18
00:00:53.957 --> 00:00:55.832
Well, let's start by doing
something pretty simple.

19
00:00:55.832 --> 00:01:00.565
Let's go ahead and
let's tag the entire page, and

20
00:01:00.565 --> 00:01:04.196
just give it a background color of say,

21
00:01:04.196 --> 00:01:08.615
let's do the background color, papayawhip.

22
00:01:08.615 --> 00:01:11.041
And I can't spell.

23
00:01:11.041 --> 00:01:12.642
Alright, that should do it.

24
00:01:12.642 --> 00:01:14.238
Okay, this is great.

25
00:01:14.238 --> 00:01:16.476
Now, what's going on here actually?

26
00:01:16.476 --> 00:01:20.238
What's going on is that when you
just have a standard style tag,

27
00:01:20.238 --> 00:01:24.919
what Vue is doing is it's injecting
the style basically across the entire app.

28
00:01:24.919 --> 00:01:28.669
So in other words,
you see these buttons right here?

29
00:01:28.669 --> 00:01:33.987
If I go ahead and did button, border,
red, or let's see 10px solid red,

30
00:01:33.987 --> 00:01:37.747
like that,
you'll see that it impacts everything.

31
00:01:37.747 --> 00:01:41.465
And you might be thinking,
is it because it's app.vue?

32
00:01:41.465 --> 00:01:44.549
No, because the styles
are being injected globally.

33
00:01:44.549 --> 00:01:50.899
So, any component that comes on this
page is gonna get impacted by this.

34
00:01:50.899 --> 00:01:53.731
And so, this is a double-edged
sword like anything else.

35
00:01:53.731 --> 00:01:58.167
There are times that you want
CSS to cascade and do its thing.

36
00:01:58.167 --> 00:02:01.002
And a lot of times, actually though,
you don't want it to do its thing.

37
00:02:01.002 --> 00:02:04.611
You want your style to be encapsulated
to the components you're using.

38
00:02:04.611 --> 00:02:10.009
So, for instance, if we're looking
at the user card, in this case,

39
00:02:10.009 --> 00:02:14.779
you might want the buttons here
to have a very specific style.

40
00:02:14.779 --> 00:02:20.319
In this case, let's say we wanted the
buttons to be border 10 px solid green.

41
00:02:20.319 --> 00:02:25.264
You'll notice, that if we just use
a standard tile tag as it happens to be,

42
00:02:25.264 --> 00:02:27.155
it'll happen to override.

43
00:02:27.155 --> 00:02:31.965
And while you might try to think of a way
to reason why this is happening, trust me,

44
00:02:31.965 --> 00:02:33.500
when you have hundreds and

45
00:02:33.500 --> 00:02:38.343
thousands of components injecting global
styles, you do not want to debug that.

46
00:02:38.343 --> 00:02:43.152
So, that brings us to, so this is
the first style of styling your app,

47
00:02:43.152 --> 00:02:47.242
which is you can just drop CSS,
it will render everywhere.

48
00:02:47.242 --> 00:02:51.794
The one that's the most popular
is something called scope styles.

49
00:02:51.794 --> 00:02:55.993
And if you've never heard of scope styles
before, they're basically a way to do

50
00:02:55.993 --> 00:03:00.334
exactly as the naming convention sounds,
to scope your styles to a specific area.

51
00:03:00.334 --> 00:03:02.487
And so what is actually happening
underneath the hood, right?

52
00:03:02.487 --> 00:03:07.391
Cuz I talked a lot about Vue building on
what already exists in the ecosystem.

53
00:03:07.391 --> 00:03:13.331
Well, scope CSS, what it's actually doing,
if you take a look here, is it's actually

54
00:03:13.331 --> 00:03:18.581
taking a look at the elements that
are relevant to this particular component.

55
00:03:18.581 --> 00:03:22.281
And it's appending
a unique data attribute.

56
00:03:22.281 --> 00:03:25.764
So you see here, this data-v-b600,

57
00:03:25.764 --> 00:03:30.227
that is what's basically
being appended to the HTML.

58
00:03:30.227 --> 00:03:34.150
And then what's cool about this,
is if you look at the,

59
00:03:34.150 --> 00:03:36.860
not the console, where's my CSS?

60
00:03:36.860 --> 00:03:37.990
It's down here, I hit it.

61
00:03:37.990 --> 00:03:42.873
Look at this style, it's button using the
attribute selector to then go ahead and

62
00:03:42.873 --> 00:03:46.220
apply those styles specifically
within that context.

63
00:03:46.220 --> 00:03:48.067
And that actually works pretty well,

64
00:03:48.067 --> 00:03:52.058
assuming that the rest of your global CSS
isn't written in a highly specific way.

65
00:03:52.058 --> 00:03:54.044
This actually works really great, and

66
00:03:54.044 --> 00:03:56.883
a lot of people have a lot of
success using scope styles.

67
00:03:56.883 --> 00:04:01.596
But scope styles is imperfect, because
if we went ahead and, I don't know,

68
00:04:01.596 --> 00:04:06.177
did something a little bit more specific
like this, same thing with that.

69
00:04:06.177 --> 00:04:08.055
I think that didn't quite do it.

70
00:04:08.055 --> 00:04:08.626
It's fine.

71
00:04:08.626 --> 00:04:09.698
I'll just do this.

72
00:04:09.698 --> 00:04:10.580
I'll just go the lazy route.

73
00:04:10.580 --> 00:04:15.038
If someone somewhere in your enterprise
app decided to bang important,

74
00:04:15.038 --> 00:04:18.849
the button, scope styles are not
gonna save you by any means.

75
00:04:18.849 --> 00:04:21.641
You're still gonna have to be
stuck with the cascade effect.

76
00:04:21.641 --> 00:04:25.380
And there's something to be said about
being disciplined about writing your CSS.

77
00:04:25.380 --> 00:04:28.157
So that could be something your team does.

78
00:04:28.157 --> 00:04:29.870
But what if there was a better way?

