WEBVTT

1
00:00:00.080 --> 00:00:02.392
So for this particular exercise,

2
00:00:02.392 --> 00:00:07.200
I want you to try practicing
configuring it from scratch.

3
00:00:07.200 --> 00:00:09.844
Because I want you to get familiar with
the files that are critical to how

4
00:00:09.844 --> 00:00:10.970
Vue Router works.

5
00:00:10.970 --> 00:00:15.510
So as a general guidance,
use the Vue Router docs for reference.

6
00:00:15.510 --> 00:00:17.290
I do not expect you to memorize all this.

7
00:00:17.290 --> 00:00:19.936
And in fact, if you do a lot of copy and
paste from the sample code,

8
00:00:19.936 --> 00:00:21.130
that's totally fine.

9
00:00:21.130 --> 00:00:23.513
The goal is for
you to configure, get a feel for

10
00:00:23.513 --> 00:00:27.630
how things are being,
basically configured out of raw directory.

11
00:00:27.630 --> 00:00:32.441
And then other than that, you can move any
page components that you think is relevant

12
00:00:32.441 --> 00:00:35.320
inside of your c'est-la-vue app.

13
00:00:35.320 --> 00:00:38.309
And then after that we'll go ahead and
upgrade the App.vue to use router,

14
00:00:38.309 --> 00:00:40.786
link and Router Vue, so
that everything renders correctly.

15
00:00:44.523 --> 00:00:49.983
All right, welcome back, how was that
experience was a little bit harrowing

16
00:00:49.983 --> 00:00:55.200
from like just all the configuration,
yeah, I completely understand.

17
00:00:55.200 --> 00:00:58.424
So we're gonna do a run through just
again just to reiterate those steps and

18
00:00:58.424 --> 00:01:00.740
then we'll share some tips and
tricks along the way.

19
00:01:02.360 --> 00:01:07.987
So how this will work,
is we're gonna go over to c'est-la-vue,

20
00:01:07.987 --> 00:01:12.200
let me go ahead and do cest-la-vue, great.

21
00:01:12.200 --> 00:01:13.790
And then let's play around with this.

22
00:01:15.650 --> 00:01:20.399
First thing first is we need
to install vue-router version,

23
00:01:20.399 --> 00:01:23.880
oop not version r version four,
there we go.

24
00:01:25.670 --> 00:01:29.790
Then what we're gonna do is we're
go ahead and configure our app.

25
00:01:29.790 --> 00:01:32.380
Actually, let me go and run it as well,
so we can see the changes happening.

26
00:01:33.490 --> 00:01:35.830
There we go, we're in it, okay?

27
00:01:37.420 --> 00:01:40.742
So inside of our main.js app, we'll see
that we don't have a router right now, so

28
00:01:40.742 --> 00:01:42.700
let's go ahead and fix that.

29
00:01:42.700 --> 00:01:47.301
Import create router from, I usually
prefer when I have the autocomplete, but

30
00:01:47.301 --> 00:01:51.023
I'm fairly confident in this one,
great, yep it's, right?

31
00:01:51.023 --> 00:01:54.953
So we can do now is your const
app is your tree app and

32
00:01:54.953 --> 00:02:00.101
then to make it more declarative
we'll do app.use(router),

33
00:02:00.101 --> 00:02:04.605
which I need to define in a second,
and then app.mount.

34
00:02:04.605 --> 00:02:05.990
Whoops, not a board controller.

35
00:02:05.990 --> 00:02:11.720
And then we can just define our
router this way to create router.

36
00:02:13.240 --> 00:02:14.977
We need to pass some options to it, so

37
00:02:14.977 --> 00:02:17.940
the history on this is gonna
be create web history.

38
00:02:17.940 --> 00:02:21.617
And again, the reason we're doing
this is because it does require

39
00:02:21.617 --> 00:02:26.030
some server configurations in order to
get it to work on the normal HTML5 mode.

40
00:02:26.030 --> 00:02:27.662
And so again, I'll leave it to you and

41
00:02:27.662 --> 00:02:30.550
the dots depending on how
you're deploying it to do that.

42
00:02:30.550 --> 00:02:31.476
But generally speaking,

43
00:02:31.476 --> 00:02:34.250
what you're doing is you wanted
to redirect always to index HTML.

44
00:02:34.250 --> 00:02:36.900
And again, plenty of that to support
probably wherever you're deploying it to.

45
00:02:38.280 --> 00:02:41.875
In the meantime, WebHashHistory is what
we're gonna use because that is the most

46
00:02:41.875 --> 00:02:44.808
universal one in terms of like
ensuring that things don't break.

47
00:02:44.808 --> 00:02:47.363
And that is a function
that we need to run, and

48
00:02:47.363 --> 00:02:49.727
then we need to be able
to find the routes.

49
00:02:49.727 --> 00:02:52.010
And so
just to do this slightly differently, so

50
00:02:52.010 --> 00:02:54.588
you can actually see what's
actually going on here.

51
00:02:54.588 --> 00:02:57.503
So we can actually just define the routes
in here as well, it just I separate them

52
00:02:57.503 --> 00:03:00.088
out into a file normally to make it
a little bit easier for management.

53
00:03:00.088 --> 00:03:02.857
But again, to sort of help seal
the mental model a little bit more,

54
00:03:02.857 --> 00:03:04.051
we're gonna do it this way.

55
00:03:04.051 --> 00:03:08.636
So inside of the components we can see
what kind of pages do we already have?

56
00:03:08.636 --> 00:03:12.098
Well, we already got three
actually aptly named pages, so and

57
00:03:12.098 --> 00:03:15.250
create a folder for views and
let's just move them over.

58
00:03:16.430 --> 00:03:18.602
Yep, okay, what is volere want to do?

59
00:03:18.602 --> 00:03:20.840
It knows I wanna change it,
great, please do that for me.

60
00:03:22.210 --> 00:03:23.300
I'm gonna move that as well.

61
00:03:23.300 --> 00:03:27.470
I'm gonna trust it to do its thing, great.

62
00:03:27.470 --> 00:03:30.756
All right, so now should have
a bunch of things moved over, but

63
00:03:30.756 --> 00:03:33.920
there was a good question that
was asked earlier regarding.

64
00:03:35.120 --> 00:03:37.790
It's nice for us to be explicit
about where the file path is.

65
00:03:37.790 --> 00:03:40.824
But anyone who's worked on a large app
before will know that when it comes to

66
00:03:40.824 --> 00:03:41.450
moving files,

67
00:03:41.450 --> 00:03:44.690
that can be a bit of a pain when you're
moving up directories down directories.

68
00:03:44.690 --> 00:03:47.345
And isn't there an easier way
to do this that it always

69
00:03:47.345 --> 00:03:49.180
refers to the root directory?

70
00:03:49.180 --> 00:03:51.898
That way, no matter where you, as long as
you're not doing a ton of nested folders,

71
00:03:51.898 --> 00:03:53.780
it should make life a lot easier.

72
00:03:53.780 --> 00:03:56.980
And so the secret to this actually is that
we actually do have that already built in.

73
00:03:56.980 --> 00:03:59.180
And that's the Add symbol.

74
00:03:59.180 --> 00:04:02.441
And so when you do the Add symbol,
what that does is it says please go to

75
00:04:02.441 --> 00:04:05.390
the source folder, and
then start your file path from there.

76
00:04:06.440 --> 00:04:08.190
And it's a really nice alias to have.

77
00:04:08.190 --> 00:04:11.981
Now I'm telling you this and you might
be like, that sounds like black magic,

78
00:04:11.981 --> 00:04:12.560
it's not.

79
00:04:12.560 --> 00:04:17.147
If you look inside of our vite.config, in
fact this is a default to be honest, but

80
00:04:17.147 --> 00:04:19.484
I'll just stick it to c'est-la-vue.

81
00:04:19.484 --> 00:04:24.174
You'll see here that there actually is an
alias being defined from vite that says,

82
00:04:24.174 --> 00:04:27.256
hey, this is the Add symbol,
and what I want you to do,

83
00:04:27.256 --> 00:04:32.080
is automatically put the file URL
path to this ./source directory.

84
00:04:32.080 --> 00:04:34.160
So what this means is you can
configure it to whatever you want.

85
00:04:34.160 --> 00:04:35.570
It doesn't have to be app, but

86
00:04:35.570 --> 00:04:39.220
that just happens to be the happens to be
a convention for a lot of applications.

87
00:04:39.220 --> 00:04:41.030
So the Add symbol is there for you.

88
00:04:41.030 --> 00:04:44.004
If you want to simplify the fact that
you don't have to navigate now, wait,

89
00:04:44.004 --> 00:04:45.590
what folder am I in and what's going on?

90
00:04:45.590 --> 00:04:48.120
Now that we have that,
let's keep on going.

91
00:04:48.120 --> 00:04:50.100
So first thing first,
what kind of routes do we have?

92
00:04:50.100 --> 00:04:53.080
Well, we're gonna wanna have a path for
the homepage.

93
00:04:53.080 --> 00:04:54.340
And so what component is that?

94
00:04:54.340 --> 00:04:58.707
We're gonna wanna do the component for
homepage, all right?

95
00:04:58.707 --> 00:05:03.799
So here we have homepage, but we need to
import that, so we have homepage from,

96
00:05:03.799 --> 00:05:07.525
let's use our handy alias
components/homepage.vue.

97
00:05:07.525 --> 00:05:11.226
And that's super convenient because I
don't have to think where am I inside of

98
00:05:11.226 --> 00:05:12.150
the directory?

99
00:05:12.150 --> 00:05:13.260
It's super, super nice.

100
00:05:14.270 --> 00:05:17.086
Great, there was a comment in
the audience that we moved it to vue,

101
00:05:17.086 --> 00:05:18.511
it's not in component anymore.

102
00:05:18.511 --> 00:05:20.606
And that's correct, so that would break,

103
00:05:20.606 --> 00:05:24.470
but from the not having to think about
what directory I'm in, that is helpful.

104
00:05:24.470 --> 00:05:26.437
There we go, look,
everything's showing up.

105
00:05:26.437 --> 00:05:29.761
Okay, then we have a path here,
and let's just go ahead and

106
00:05:29.761 --> 00:05:33.500
copy this block real quick,
just to make this a little bit easier.

107
00:05:33.500 --> 00:05:37.070
And so we have login,
and then we have user.

108
00:05:38.880 --> 00:05:40.660
Okay, UserPage, great.

109
00:05:40.660 --> 00:05:44.703
And then we have UserPage, Login Page, and

110
00:05:44.703 --> 00:05:49.310
this is how most of us would
probably do this part.

111
00:05:49.310 --> 00:05:55.660
Log in is an L and then P or U for
UserPage, there we go save great.

112
00:05:55.660 --> 00:06:01.260
And then what we can do now is go inside
of our app.vue, for c'est-la-vue.

113
00:06:01.260 --> 00:06:04.583
And rather than having this all be managed
now with the current page and what not.

114
00:06:04.583 --> 00:06:06.471
We can actually make this a lot simpler,
so

115
00:06:06.471 --> 00:06:08.732
what we're gonna do here
is we're gonna go ahead.

116
00:06:08.732 --> 00:06:11.383
And rather than put the component
here we're just going to do,

117
00:06:11.383 --> 00:06:13.896
let me delete it first to show
that everything was working.

118
00:06:13.896 --> 00:06:18.755
Okay, great it's gone,
now we're just gonna put

119
00:06:18.755 --> 00:06:23.785
Router-Vue and just like that,
we have our pages.

120
00:06:23.785 --> 00:06:26.225
&gt;&gt; Your routes are all
defined to go to homepage.

121
00:06:26.225 --> 00:06:29.115
&gt;&gt; Yes, they are all defined
to go to homepage, good catch.

122
00:06:29.115 --> 00:06:33.410
So we no longer need to track any of these
things because this is being now managed

123
00:06:33.410 --> 00:06:34.785
at the router level.

124
00:06:34.785 --> 00:06:38.145
So in case you've seen the duplicates,
you should not have duplicates.

125
00:06:38.145 --> 00:06:40.760
There you go, don't need that component.

126
00:06:40.760 --> 00:06:44.260
In fact, we don't need any of this because
all of this is doing is trying to do all

127
00:06:44.260 --> 00:06:47.870
the programmatic things that the vue
router will do for us out of the gate.

128
00:06:47.870 --> 00:06:49.990
So I can actually just
wipe out this whole thing.

129
00:06:52.100 --> 00:06:55.095
And then we can no longer
reference any of these things,

130
00:06:55.095 --> 00:06:57.080
let's comment that out real quick.

131
00:06:58.250 --> 00:07:02.780
And then I think we're
good as far as that goes.

132
00:07:02.780 --> 00:07:04.980
Now we need to actually have
the ability to switch it out.

133
00:07:04.980 --> 00:07:08.067
So rather than use the eight tags,

134
00:07:08.067 --> 00:07:12.973
we're gonna go ahead and
use our router link, sorry.

135
00:07:12.973 --> 00:07:20.790
One, two router link, then we have
this right here, one, two router link.

136
00:07:22.730 --> 00:07:26.840
Then we no longer have to worry about
the click, handling and preventing that.

137
00:07:26.840 --> 00:07:31.408
So all of that can be deleted,
cleaned up, and

138
00:07:31.408 --> 00:07:36.810
then instead href,
what we're gonna do, is to move.

139
00:07:36.810 --> 00:07:45.050
And then just do two, and then we can go
ahead correctly then go login, user home.

140
00:07:46.510 --> 00:07:50.914
Once you have that, there you go,
everything works just as you would expect.

141
00:07:52.696 --> 00:07:59.369
Okay, so before I wrap up this exercise
though I think I do want to show you.

142
00:07:59.369 --> 00:08:05.485
If we go back to the boilerplate
that we created with vue three and

143
00:08:05.485 --> 00:08:12.186
this time adding the fact that we
have to do here's the router, okay?

144
00:08:12.186 --> 00:08:14.695
You might notice something right here,

145
00:08:14.695 --> 00:08:19.343
which is kind of interesting in that
you can actually write a function where

146
00:08:19.343 --> 00:08:22.983
the component is in order to
dynamically import that vue.

147
00:08:22.983 --> 00:08:27.221
And the reason this is a powerful
technique while relatively simple is that

148
00:08:27.221 --> 00:08:31.121
It will then automatically generate
a separate build chunk that will

149
00:08:31.121 --> 00:08:33.152
lazy load when it's being loaded.

150
00:08:33.152 --> 00:08:37.682
Because the problem right now if we
look at how we're actually loading

151
00:08:37.682 --> 00:08:39.870
the route right now in main.js.

152
00:08:39.870 --> 00:08:43.943
And say I love you, we're importing
every single component that the app

153
00:08:43.943 --> 00:08:47.614
might possibly need to route to and
if that app gets pretty large,

154
00:08:47.614 --> 00:08:49.970
that's a lot to break apart.

155
00:08:49.970 --> 00:08:54.358
So generally speaking, it's considered
best practice to go ahead and

156
00:08:54.358 --> 00:08:57.073
just like we see inside of this router.js.

157
00:08:57.073 --> 00:09:00.188
Whoop, not this one,
we're looking at this one, to go ahead and

158
00:09:00.188 --> 00:09:02.270
just import the path directly.

159
00:09:02.270 --> 00:09:04.268
So I'm gonna go ahead and
do that for us, so

160
00:09:04.268 --> 00:09:06.960
that we can actually have
that as a record of that.

161
00:09:06.960 --> 00:09:09.844
So again, rather than have these two
up here cuz we don't know when users

162
00:09:09.844 --> 00:09:12.700
are going to log into that, we know
that home page needs to be imported.

163
00:09:12.700 --> 00:09:17.810
So that cannot be dynamically imported,
but everything else that has potential.

164
00:09:17.810 --> 00:09:22.074
So we can go ahead and
drop the in ports here and

165
00:09:22.074 --> 00:09:27.685
the way it works is it's
a function that returns this path,

166
00:09:27.685 --> 00:09:30.956
and that's what that looks like.

167
00:09:36.131 --> 00:09:39.440
With that, I think I had a right,
just make sure one more time,

168
00:09:39.440 --> 00:09:41.010
that one's not easy to read.

169
00:09:42.680 --> 00:09:47.859
Import yeah, so
I mistakenly did that the other

170
00:09:47.859 --> 00:09:52.567
way it is a function that
does the import here and

171
00:09:52.567 --> 00:09:56.820
imports the specific path just like that.

172
00:09:58.900 --> 00:10:02.180
So again, we can see user experience
wise as far as development goes.

173
00:10:02.180 --> 00:10:04.388
You probably wouldn't really
know the difference, but

174
00:10:04.388 --> 00:10:07.240
this optimization can help a lot when
it comes to your apps going forward.

