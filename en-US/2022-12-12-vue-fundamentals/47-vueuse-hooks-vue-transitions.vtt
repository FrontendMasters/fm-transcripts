WEBVTT

1
00:00:00.250 --> 00:00:05.158
I just wanna do a quick show and tell
demo on, is if you haven't heard of this,

2
00:00:05.158 --> 00:00:08.660
this library,
VueUse is a phenomenal library.

3
00:00:08.660 --> 00:00:12.610
It is a bunch of wrappers
around basically browser API's.

4
00:00:12.610 --> 00:00:15.855
So things that you might commonly
wanna do, say, I don't know,

5
00:00:15.855 --> 00:00:18.400
you wanna be able to do
something with a clipboard.

6
00:00:19.710 --> 00:00:20.620
This should look familiar.

7
00:00:20.620 --> 00:00:24.040
It says, this is a use Clipboard
function that we can import.

8
00:00:24.040 --> 00:00:28.776
And when you import it it'll actually
basically copy over whatever it is as

9
00:00:28.776 --> 00:00:32.470
like a V model and whatnot,
and it just works.

10
00:00:32.470 --> 00:00:35.628
And so to show you just as
a sort of show and tell on this,

11
00:00:35.628 --> 00:00:39.981
something that we often wanna do when
it comes to apps is use local storage.

12
00:00:39.981 --> 00:00:42.696
And if you've never
done that from scratch,

13
00:00:42.696 --> 00:00:46.195
it's a pretty good API to use but
there is a bit to do as far as

14
00:00:46.195 --> 00:00:50.355
manually configuring that in
addition to managing reactive state.

15
00:00:50.355 --> 00:00:54.645
So one of my favorite functions is
the useStorage share with Pinia.

16
00:00:54.645 --> 00:00:59.302
So if we look at Pinia
useStorage with VueUse.

17
00:00:59.302 --> 00:01:00.840
Okay, here we go.

18
00:01:00.840 --> 00:01:03.470
This is a blog post that
actually shows how it would work.

19
00:01:03.470 --> 00:01:07.577
So basically if I scroll down here you'll
notice that inside of this to do list

20
00:01:07.577 --> 00:01:11.639
you have this one line right here that
allows you to import from useStorage.

21
00:01:11.639 --> 00:01:14.617
And what it does is basically
creates a local storage key, and

22
00:01:14.617 --> 00:01:18.799
then every time it's being updated, when
Pinia loads, it will know VueUse's help to

23
00:01:18.799 --> 00:01:21.630
check the local storage first
to see if there's new data.

24
00:01:21.630 --> 00:01:25.287
If there's already existing data, it will
actually start from the local storage and

25
00:01:25.287 --> 00:01:26.771
not from this initialized value.

26
00:01:26.771 --> 00:01:30.960
And so what you end up getting is it's
really elegant coming together of your

27
00:01:30.960 --> 00:01:35.700
VueUse functionality with your
reactive data inside of your Vue app.

28
00:01:35.700 --> 00:01:39.584
And so other ones that are really fun
that you might wanna check out as well is

29
00:01:39.584 --> 00:01:41.630
the color preference like color mode.

30
00:01:41.630 --> 00:01:46.255
And so what you see here is that what this
is doing is that it's basically a reactive

31
00:01:46.255 --> 00:01:51.500
property that allows you to easily toggle
the state of the theme of your app.

32
00:01:51.500 --> 00:01:54.832
There's so much stuff in here because
basically what they've done is taken

33
00:01:54.832 --> 00:01:56.081
a bunch of browser API's and

34
00:01:56.081 --> 00:01:59.120
made it really easy to integrate
inside of your Vue app.

35
00:01:59.120 --> 00:02:01.780
So definitely highly recommended
is one to check out.

36
00:02:03.580 --> 00:02:07.782
The other final thing i wanna shout out
is is regarding transitions in Vue.

37
00:02:09.916 --> 00:02:12.607
So as you know creating
good use experiences,

38
00:02:12.607 --> 00:02:17.101
that's a really important part making
things easier for you just to follow.

39
00:02:17.101 --> 00:02:19.858
And so we don't have time to
go into detail on this but

40
00:02:19.858 --> 00:02:23.184
basically there are built in
components called transition and

41
00:02:23.184 --> 00:02:27.530
transition group that help you manage how
things are being attached as they exit.

42
00:02:27.530 --> 00:02:31.700
So the most common example that I'll show
right now cuz you can check out the docs,

43
00:02:31.700 --> 00:02:33.754
so the one that I love
to show is the one for

44
00:02:33.754 --> 00:02:37.750
transition group because this is
the one that I think we do a lot.

45
00:02:37.750 --> 00:02:42.807
So if I go down into transition group.

46
00:02:44.894 --> 00:02:49.360
A lot of us, render lists,
rather than have them blink in like this,

47
00:02:49.360 --> 00:02:53.440
you can also have them move in
a way that's even smoother.

48
00:02:53.440 --> 00:02:57.470
So you see here,
this actually allows you to shuffle stuff.

49
00:02:57.470 --> 00:02:59.171
And all that is being done how?

50
00:02:59.171 --> 00:03:04.750
It's being done by wrapping basically your
component inside of this transition group.

51
00:03:04.750 --> 00:03:06.521
There's a little bit of
CSS that happens there.

52
00:03:06.521 --> 00:03:09.800
But I'll leave you to check out
the docs to get inspiration from that.

53
00:03:09.800 --> 00:03:13.611
But just know that this is built into the
library so that if you wanna try playing

54
00:03:13.611 --> 00:03:16.456
around with it,
making the users easier to track things.

55
00:03:16.456 --> 00:03:19.803
This is also where the keys are very
important because as you can see,

56
00:03:19.803 --> 00:03:23.670
when we're doing things like shuffling
here, Vue needs to be able to know which

57
00:03:23.670 --> 00:03:27.390
element it is where it needs to
go as it's moving stuff around.

58
00:03:27.390 --> 00:03:32.647
So this is another bit that if you all are
developing for your apps, definitely check

59
00:03:32.647 --> 00:03:37.550
out the transition group and transition
for ways to enhance user experience.

