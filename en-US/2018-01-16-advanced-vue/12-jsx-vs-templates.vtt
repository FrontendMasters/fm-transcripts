WEBVTT

1
00:00:00.280 --> 00:00:02.310
&gt;&gt; Evan You: Render functions,
we're finally getting to it.

2
00:00:02.310 --> 00:00:07.596
Before we talk about render functions, so
there is this sort of competing schools

3
00:00:07.596 --> 00:00:12.970
of thoughts in front end community about
JSX render functions versus templates.

4
00:00:12.970 --> 00:00:17.950
People who like templates hate JSX,
people who like JSX hate templates, and

5
00:00:17.950 --> 00:00:21.660
in my opinion,
they are pretty much the same thing.

6
00:00:21.660 --> 00:00:27.100
When we talk about these things,
we need to think about their end goals.

7
00:00:27.100 --> 00:00:32.740
Both JSX and templates are a way of

8
00:00:32.740 --> 00:00:37.790
declaring the relationship
between the dom and our state.

9
00:00:39.350 --> 00:00:45.040
Templates is just a more static and
more constraining form

10
00:00:45.040 --> 00:00:49.750
of expression, and
that static property has its advantages.

11
00:00:49.750 --> 00:00:54.530
So template is more static, JSX or
render functions are more dynamic.

12
00:00:54.530 --> 00:00:59.310
Being more dynamic gives you advantage of
full access to the programming language.

13
00:00:59.310 --> 00:01:00.660
You can do anything you want.

14
00:01:00.660 --> 00:01:03.300
[COUGH] As long as you
can write it in code,

15
00:01:03.300 --> 00:01:05.260
you can do it in the render function.

16
00:01:05.260 --> 00:01:08.600
So that kind of gets rid of the need for
inventing new syntax and

17
00:01:08.600 --> 00:01:14.210
templates in order for you to achieve
some esoteric rendering requirements.

18
00:01:15.210 --> 00:01:18.340
On the other side,
templates are more static.

19
00:01:18.340 --> 00:01:24.930
In fact, few templates are syntax-wise,
they are parsable by any HTML parser.

20
00:01:24.930 --> 00:01:31.180
So that allows you to quickly migrate
existing templates or migrating existing,

21
00:01:31.180 --> 00:01:36.370
say, markups produced by designers,
you can quickly adopt them into your code.

22
00:01:36.370 --> 00:01:39.210
Better familiarity, and more importantly,

23
00:01:39.210 --> 00:01:44.030
the static nature of templates allowing
better compile time optimizations.

24
00:01:44.030 --> 00:01:47.560
The dynamic nature of JSX actually
make optimization much more difficult,

25
00:01:47.560 --> 00:01:50.440
because there are less
assumptions that can be made.

26
00:01:50.440 --> 00:01:52.330
Because templates are constrained,

27
00:01:52.330 --> 00:01:56.404
these constraints actually serves benefits
when you are trying to compile them,

28
00:01:56.404 --> 00:01:59.650
because you know that you can only
write the template this way, so

29
00:01:59.650 --> 00:02:03.448
you can assume a lot of things can do
more optimizations at the compile time.

30
00:02:03.448 --> 00:02:06.467
So there are benefits on both sides.

31
00:02:06.467 --> 00:02:11.228
But eventually View supports both,
because we see benefits on both sides.

32
00:02:11.228 --> 00:02:16.358
So we expose the templates as the default
API, but we also allow you to drop down

33
00:02:16.358 --> 00:02:22.050
to the render function layer when you
actually need that level of flexibility.

34
00:02:22.050 --> 00:02:24.430
It's just we don't use it as the default.

