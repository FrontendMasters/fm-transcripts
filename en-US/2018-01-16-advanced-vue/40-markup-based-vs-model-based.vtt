WEBVTT

1
00:00:00.310 --> 00:00:03.730
&gt;&gt; Evan You: The next
topic is Form Validation.

2
00:00:03.730 --> 00:00:11.310
So, before we go into the actual code,
I want to talk about that.

3
00:00:11.310 --> 00:00:15.200
Form Validation, in terms of components,

4
00:00:15.200 --> 00:00:21.720
there are two schools of thought,
different styles, I would say.

5
00:00:21.720 --> 00:00:25.371
So one of them is markup-based and
the other is model-based.

6
00:00:25.371 --> 00:00:29.300
So vee-validate and vuelidate are two
of the probably most popular form of

7
00:00:29.300 --> 00:00:34.340
validation plugins in the vue ecosystem,
and they take two different approaches.

8
00:00:34.340 --> 00:00:39.290
Markup-based means the rules for
validating a form

9
00:00:39.290 --> 00:00:44.090
field is directly declared in the template
along with the element Itself.

10
00:00:44.090 --> 00:00:49.100
Similar to how html form elements
allows you to do things like inputs.

11
00:00:49.100 --> 00:00:53.460
Main length equals 5 or
max length equals 20.

12
00:00:53.460 --> 00:00:56.830
Everything is sort of on
the component directly there.

13
00:00:56.830 --> 00:01:00.840
You're essentially declaring your
rules right in your template.

14
00:01:00.840 --> 00:01:03.160
So that's one way to go about it.

15
00:01:03.160 --> 00:01:05.980
And the other way to go
about it is model-based.

16
00:01:05.980 --> 00:01:09.350
Essentially you declare your
validation rules inside the JavaScript.

17
00:01:11.220 --> 00:01:14.491
The good thing about the model-based
validation rule is that your templates

18
00:01:14.491 --> 00:01:15.353
will look cleaner.

19
00:01:15.353 --> 00:01:19.418
And the other thing is because you're
using JavaScript declared rules,

20
00:01:19.418 --> 00:01:22.379
it's easier to implement
custom validation rules.

21
00:01:23.760 --> 00:01:28.313
If you go the market-based route, you're
essentially relying on the library, or

22
00:01:28.313 --> 00:01:31.790
the plugin to pre-implement all
the validation rules for you.

23
00:01:31.790 --> 00:01:37.199
So that you can directly reference them
in your template using attributes or

24
00:01:37.199 --> 00:01:38.800
directives.

25
00:01:38.800 --> 00:01:42.967
But using a JavaScript-based validation
rule in addition to these built-in rules

26
00:01:42.967 --> 00:01:45.736
that the library provide,
you can implement your own.

27
00:01:45.736 --> 00:01:51.329
You can mix and match using existing
validation libraries, pure JavaScript

28
00:01:51.329 --> 00:01:57.590
validation libraries, to combine it with
your validation plugin to do things.

29
00:01:57.590 --> 00:02:02.880
So in the next example, I'm going to walk
through how to build a very simple version

30
00:02:02.880 --> 00:02:06.940
of a validation library that's very
similar to how vuelidate works in practice

