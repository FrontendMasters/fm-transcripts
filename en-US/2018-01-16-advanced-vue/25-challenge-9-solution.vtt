WEBVTT

1
00:00:00.740 --> 00:00:04.538
&gt;&gt; Evan You: The catch of this
implementation is, obviously,

2
00:00:04.538 --> 00:00:11.679
you can have a shared object as our state.
&gt;&gt; Evan You: And,

3
00:00:11.679 --> 00:00:16.626
[COUGH] if we are smart,
we can make it directly

4
00:00:16.626 --> 00:00:22.530
return the thing from
within the render function.

5
00:00:22.530 --> 00:00:28.581
So like,
&gt;&gt; Evan You: We can do it like this,

6
00:00:28.581 --> 00:00:32.345
but you realize that this
does not really work.

7
00:00:32.345 --> 00:00:40.731
Let's implement the methods first.
&gt;&gt; Evan You: If we run this,

8
00:00:40.731 --> 00:00:41.755
you'll realize that when you click,

9
00:00:41.755 --> 00:00:45.088
state doesn't increment.
&gt;&gt; Evan You: And

10
00:00:45.088 --> 00:00:49.927
the reason to this is that,
&gt;&gt; Evan You: If you never

11
00:00:49.927 --> 00:00:54.677
really had the chance to make
state reactive, the default, so

12
00:00:54.677 --> 00:00:58.027
in Vue,
&gt;&gt; Evan You: The way to let Vue know that

13
00:00:58.027 --> 00:01:02.230
it should make something reactive
is by returning it within

14
00:01:02.230 --> 00:01:05.825
data.
&gt;&gt; Evan You: If you

15
00:01:05.825 --> 00:01:09.985
return something within data, this is the
object that Vue will call to observe or

16
00:01:09.985 --> 00:01:11.714
confer function on.

17
00:01:11.714 --> 00:01:16.138
Right, if we don't do that, then state
was never actually passed to Vue and

18
00:01:16.138 --> 00:01:20.490
Vue never had a chance to make it
reactive then nothing will happen, right?

19
00:01:20.490 --> 00:01:24.763
So,
&gt;&gt; Evan You: What we can do is just return

20
00:01:24.763 --> 00:01:30.686
the same object inside the data function.
&gt;&gt; Evan You: And

21
00:01:30.686 --> 00:01:35.986
now, we can do,
&gt;&gt; Evan You: this.count.

22
00:01:40.562 --> 00:01:42.670
&gt;&gt; Evan You: So, this should do the trick.

23
00:01:44.389 --> 00:01:45.053
&gt;&gt; Evan You: Let's run

24
00:01:45.053 --> 00:01:48.450
it.
&gt;&gt; Evan You: No,

25
00:01:50.625 --> 00:01:52.128
&gt;&gt; Evan You: I didn't register Counter,

26
00:01:52.128 --> 00:01:56.380
okay.
&gt;&gt; Evan You: So, components counter.

27
00:02:01.548 --> 00:02:02.907
&gt;&gt; Evan You: Oops.

28
00:02:09.361 --> 00:02:11.356
&gt;&gt; Evan You: So now it works as intended

29
00:02:11.356 --> 00:02:16.901
because Vue's got a chance to take
state to burden to a reactive object.

30
00:02:16.901 --> 00:02:21.474
And state.count is proxied on to
the counter instance as this.count.

