WEBVTT

1
00:00:00.450 --> 00:00:02.850
&gt;&gt; Evan You: So let's go into exercise 3,

2
00:00:02.850 --> 00:00:08.330
now is the time to put the previous
two exercises together, okay?

3
00:00:08.330 --> 00:00:10.700
And it's actually going to
be simpler than you think.

4
00:00:10.700 --> 00:00:13.230
So let's combine
the previous two functions.

5
00:00:13.230 --> 00:00:16.600
So currently we have convert
function from exercise 1,

6
00:00:16.600 --> 00:00:20.560
we have the autorun
function from exercise 2.

7
00:00:20.560 --> 00:00:24.220
So lets rename convert into observe,
all right?

8
00:00:24.220 --> 00:00:27.570
So what observe does it
just take any object,

9
00:00:27.570 --> 00:00:32.750
observe it,
converting them into getters and setters.

10
00:00:32.750 --> 00:00:38.070
And inside getters and setters we can do
something with dependencies, all right?

11
00:00:38.070 --> 00:00:42.530
And then autorun just remains
the same from the previous exercise.

12
00:00:42.530 --> 00:00:46.590
So where we're using the Dep class and
autorun function from exercise two and

13
00:00:46.590 --> 00:00:51.210
then what we need to do is copy
the over convert from exercise one and

14
00:00:51.210 --> 00:00:56.062
modify it so
that we hook up the Dep.depend and

15
00:00:56.062 --> 00:00:59.419
Dep.notify calls into the getters and
setters.

16
00:01:01.330 --> 00:01:06.830
Then when these connect,
we essentially have created an object when

17
00:01:06.830 --> 00:01:11.257
we access a property it collects
dependency but call dep.depend.

18
00:01:11.257 --> 00:01:14.390
And when we mutate a property
by assigning to be

19
00:01:14.390 --> 00:01:16.730
it cause dep.notify to trigger changes.

20
00:01:18.890 --> 00:01:21.430
Are the dots connecting now?

21
00:01:21.430 --> 00:01:24.890
So this is actually how the view
update system works, okay?

22
00:01:24.890 --> 00:01:27.490
So this is what we want.

23
00:01:27.490 --> 00:01:30.850
Let's say we just have a state
object with count zero.

24
00:01:32.380 --> 00:01:34.620
The finished implementation
should observe the state,

25
00:01:35.680 --> 00:01:40.860
this will walk through the properties,
convert them into getters and setters, and

26
00:01:40.860 --> 00:01:44.830
the autorun, inside all autorun,
we're still doing just a console log.

27
00:01:44.830 --> 00:01:48.428
But notice here,
we're accessing state.count.

28
00:01:48.428 --> 00:01:50.310
This is just a normal access.

29
00:01:50.310 --> 00:01:53.640
But if we have converted
the object into getters and

30
00:01:53.640 --> 00:01:57.360
setters, this will be invoking
the getter here, right?

31
00:01:57.360 --> 00:01:59.750
And this is the opportunity
where we should call dep.depend.

32
00:01:59.750 --> 00:02:06.220
And later on when you mutate this
state.count we are invoking the setter,

33
00:02:06.220 --> 00:02:10.820
and this is where we
should call dep.notify.

34
00:02:10.820 --> 00:02:15.160
So exercise 3 is just
to fill in the blanks.

35
00:02:15.160 --> 00:02:18.689
So notice you can reuse most of
the code from exercise 1 and 2.

36
00:02:19.790 --> 00:02:25.000
And it should be pretty
straightforward up to this point.

