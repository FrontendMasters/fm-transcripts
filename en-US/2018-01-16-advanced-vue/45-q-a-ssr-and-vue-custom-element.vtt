WEBVTT

1
00:00:00.350 --> 00:00:05.180
&gt;&gt; Speaker 1: When should we consider
using server side rendering with knocks?

2
00:00:05.180 --> 00:00:11.330
Is it purely performance, or SEO,
or where exactly would the line be?

3
00:00:11.330 --> 00:00:20.730
&gt;&gt; Evan You: So, if you go to ssr.vjs.org,

4
00:00:20.730 --> 00:00:24.290
the first page literally talks
about why services are rendering.

5
00:00:24.290 --> 00:00:28.520
And I think it would be better
off to just read that page,

6
00:00:28.520 --> 00:00:33.690
than me to just read over it
here [LAUGH] But to sum up,

7
00:00:33.690 --> 00:00:36.820
yes, better SEO, better time to content.

8
00:00:36.820 --> 00:00:38.590
There are trade offs, obviously.

9
00:00:38.590 --> 00:00:45.610
You will have a more complex build
set up and deployment requirements.

10
00:00:47.600 --> 00:00:50.120
And your code will also
have some restrictions.

11
00:00:50.120 --> 00:00:57.590
You cannot just access the DOM anywhere
you want, but the benefit is that

12
00:00:58.680 --> 00:01:04.790
your app will be able to render
the first content faster.

13
00:01:04.790 --> 00:01:07.420
And this really only matters when your

14
00:01:07.420 --> 00:01:10.770
business model depends on time to content,
right?

15
00:01:10.770 --> 00:01:15.840
So, let's say you're building a back
end dashboard, that's used internally.

16
00:01:15.840 --> 00:01:19.940
Nobody cares how fast it loads, as long
as it loads within a second or two.

17
00:01:19.940 --> 00:01:22.760
Right, unless it's taking five seconds,
that's probably too long.

18
00:01:22.760 --> 00:01:26.610
But most view apps would
definitely render within a second.

19
00:01:26.610 --> 00:01:30.000
So, in those cases, server-side
rendering is completely unnecessary.

20
00:01:31.020 --> 00:01:34.270
So it's really identifying the product
you're trying to build and

21
00:01:34.270 --> 00:01:39.170
whether time to content, and
SEO are that important, and

22
00:01:39.170 --> 00:01:43.940
then weigh it against the trade offs
of the extra deployment requirement.

23
00:01:43.940 --> 00:01:48.460
The benefits of pure client side app
is that deployment is extremely simple,

24
00:01:48.460 --> 00:01:49.840
everything is just static assets.

25
00:01:49.840 --> 00:01:54.020
You can throw it up on a CDN and
have very good performance.

26
00:01:54.020 --> 00:02:00.100
But if you have server side rendering, you
have pretty significant server side cost,

27
00:02:00.100 --> 00:02:04.856
because now you have to run Node.js
servers to render stuff on every request.

28
00:02:04.856 --> 00:02:11.640
So, you have to weigh the pros and
cons, yeah.

29
00:02:11.640 --> 00:02:14.720
So, last question is
how safe it will be to

30
00:02:14.720 --> 00:02:19.020
use Vue Custom Element as long as it's
not maintained anymore by Vue official?

31
00:02:21.060 --> 00:02:24.650
So I haven't really been following along
with the latest development of that

32
00:02:24.650 --> 00:02:26.210
library that much.

33
00:02:26.210 --> 00:02:30.220
Our original implementation was
really just a proof of concept.

34
00:02:30.220 --> 00:02:35.170
But the author of the new view
custom element library actually

35
00:02:35.170 --> 00:02:36.350
does a very good job.

36
00:02:36.350 --> 00:02:37.310
He's very dedicated.

37
00:02:39.120 --> 00:02:41.510
Filling out the gap in that way.

38
00:02:41.510 --> 00:02:47.554
But honestly, I haven't been paying close
enough attention to that library lately,

39
00:02:47.554 --> 00:02:52.121
so I'm afraid I cannot really say
you should or should not use it.

40
00:02:52.121 --> 00:02:56.960
But think just the same way
as you evaluate any library.

41
00:02:56.960 --> 00:03:01.260
Just look at its maintenance record.

42
00:03:01.260 --> 00:03:06.770
How fast does the author respond
to issues or push new commits.

43
00:03:06.770 --> 00:03:12.520
You would be able to get
a general sense of how stable or

44
00:03:12.520 --> 00:03:15.860
reliable the library is.

45
00:03:15.860 --> 00:03:18.290
&gt;&gt; Speaker 3: What are you
excited about that's upcoming?

46
00:03:19.320 --> 00:03:19.930
&gt;&gt; Evan You: Upcoming?

47
00:03:19.930 --> 00:03:24.953
One of the things we are gonna

48
00:03:24.953 --> 00:03:31.320
do is, the next big thing in
you is probably a rewrite

49
00:03:31.320 --> 00:03:37.050
a build that only runs on
latest modern browsers.

50
00:03:37.050 --> 00:03:41.100
Currently we have a lot of code
that's dealing with legacy browsers,

51
00:03:41.100 --> 00:03:41.779
IE9 or stuff.

52
00:03:41.779 --> 00:03:45.490
Which sort of [COUGH]
[INAUDIBLE] Library itself and

53
00:03:45.490 --> 00:03:51.080
places a lot of restrictions, because we
cannot use any of the latest ES features.

54
00:03:51.080 --> 00:03:53.740
And it's kind of a pain,

55
00:03:53.740 --> 00:03:58.750
because when you know ESS set on
map would be better suited for

56
00:03:58.750 --> 00:04:02.020
this case, but you cannot use it, so
you have to [INAUDIBLE] Yourself,

57
00:04:02.020 --> 00:04:07.370
or use a less capable
alternative in the library.

58
00:04:07.370 --> 00:04:12.320
So, I am pretty looking
forward to the day where IE is

59
00:04:12.320 --> 00:04:17.460
just completely dead, so
that I can drop everything about them.

60
00:04:17.460 --> 00:04:22.437
And then we'll rewrite the reactivity
system using ES 2015 proxies,

61
00:04:22.437 --> 00:04:27.414
which will be able to get rid of some of
the gotchas we currently have in Vue,

62
00:04:27.414 --> 00:04:30.026
for example, adding new properties.

63
00:04:30.026 --> 00:04:34.704
I'm gonna have to call vue.set if
you were using properties, and

64
00:04:34.704 --> 00:04:39.548
you can also directly assign to
indices into arrays without having to

65
00:04:39.548 --> 00:04:42.990
use Vue set again and
you can delete properties.

66
00:04:44.990 --> 00:04:47.550
And observation will be lazy by default,
so

67
00:04:47.550 --> 00:04:52.270
there will be a lot of benefits
if we are able to sort of

68
00:04:53.650 --> 00:04:58.930
both drop a lot of weight, and
also improve the current system even more.

69
00:04:58.930 --> 00:05:01.040
&gt;&gt; Speaker 3: And
will that be side-by-side modern?

70
00:05:01.040 --> 00:05:01.950
&gt;&gt; Evan You: Yes.
&gt;&gt; Speaker 3: Okay.

71
00:05:01.950 --> 00:05:02.450
&gt;&gt; Evan You: Yes.

72
00:05:05.252 --> 00:05:08.110
&gt;&gt; Speaker 4: What's the last year and
a half been like for you?

73
00:05:08.110 --> 00:05:11.130
&gt;&gt; Evan You: Last year and
a half, it's been pretty amazing.

74
00:05:11.130 --> 00:05:14.870
So, it's a big transition,
going from working for

75
00:05:14.870 --> 00:05:17.850
companies to going to work for yourself.

76
00:05:17.850 --> 00:05:24.470
But it's good because this is something
I'm really passionate about, so.

77
00:05:24.470 --> 00:05:29.500
When I'm working on Vue, I'm solving all
these problems, it doesn't really feel

78
00:05:29.500 --> 00:05:34.610
I'm being forced to work on it,
it's I wanna work it.

79
00:05:34.610 --> 00:05:39.570
So, I feel that this alone
is very liberating, and

80
00:05:39.570 --> 00:05:45.040
probably worth a lot of utility to me,
I'm willing to earn less money,

81
00:05:45.040 --> 00:05:48.520
but in fact, I've been earning more or
less the same or

82
00:05:48.520 --> 00:05:53.790
even more than before I started
to work on this full time.

83
00:05:55.220 --> 00:06:01.370
So, I'm pretty happy about
where I am right now.

84
00:06:01.370 --> 00:06:02.983
My tutor description says,

85
00:06:02.983 --> 00:06:06.420
I'm living the dream just working
full time on open source.

86
00:06:06.420 --> 00:06:07.920
It's pretty amazing, yeah.

