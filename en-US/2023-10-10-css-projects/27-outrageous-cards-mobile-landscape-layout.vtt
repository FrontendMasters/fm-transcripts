WEBVTT

1
00:00:00.314 --> 00:00:05.895
Then the next thing to tackle,
Will be our next breakpoint.

2
00:00:05.895 --> 00:00:10.805
And so it reminds you what that looks
like, is it this crazy thing here?

3
00:00:10.805 --> 00:00:15.085
So somehow now we're gonna have
to start playing with layouts.

4
00:00:15.085 --> 00:00:16.616
We have the title,

5
00:00:16.616 --> 00:00:21.790
[COUGH] we have the title is going
to have to turn in some way.

6
00:00:21.790 --> 00:00:25.389
We have our image, somehow we're gonna
have to get the button on top of

7
00:00:25.389 --> 00:00:28.970
the image, and
we have our paragraph here underneath.

8
00:00:28.970 --> 00:00:33.470
So, that is gonna be kind of tricky,
but very doable.

9
00:00:33.470 --> 00:00:36.714
Hint, grid will allow you to
overlap elements like that,

10
00:00:36.714 --> 00:00:39.410
in addition to position absolute.

11
00:00:39.410 --> 00:00:45.500
So to get that started here,
that min-width is 475.

12
00:00:49.233 --> 00:00:53.986
@media (min-width:

13
00:00:53.986 --> 00:00:58.634
475px).

14
00:00:58.634 --> 00:01:00.175
And that should get you started.

15
00:01:00.175 --> 00:01:03.175
So have fun working on
our next breakpoint,

16
00:01:03.175 --> 00:01:08.380
which is our mobile landscape breakpoint
and see if you can figure that out.

17
00:01:12.713 --> 00:01:16.240
All right, so
I hope you had fun coding that.

18
00:01:16.240 --> 00:01:20.640
Next breakpoint here,
let's go through all of the craziness.

19
00:01:20.640 --> 00:01:26.463
So the very first thing that we wanna do
is we wanna try to get the basic elements

20
00:01:26.463 --> 00:01:32.570
in place on our layout for each card, and
not worry so much about how things look.

21
00:01:32.570 --> 00:01:35.198
But if we can generally get
things in the right spot,

22
00:01:35.198 --> 00:01:38.830
then we can go back and tweak and
make sure that it looks pretty.

23
00:01:38.830 --> 00:01:46.100
So to do that, obviously,
we have a card here in our code.

24
00:01:46.100 --> 00:01:50.306
The card's children are the h2,
the card-image,

25
00:01:50.306 --> 00:01:55.700
a paragraph with some text, and
a paragraph with the button.

26
00:01:55.700 --> 00:01:59.970
So we can set our article with that
class of card to be our parent.

27
00:01:59.970 --> 00:02:03.874
And then each one of those individual
elements winds up being our children,

28
00:02:03.874 --> 00:02:07.840
which means we can move them anywhere on
the web page that we want to move them.

29
00:02:08.840 --> 00:02:10.010
So let's set that up.

30
00:02:11.080 --> 00:02:14.247
So here inside of our media query,

31
00:02:14.247 --> 00:02:19.066
we are going to say our card
is going to display grid.

32
00:02:21.763 --> 00:02:26.536
And then we're going to say,
we're going to have

33
00:02:26.536 --> 00:02:31.205
our grid-template-rows, sorry, columns.

34
00:02:33.084 --> 00:02:34.900
We're only gonna have two columns.

35
00:02:34.900 --> 00:02:39.293
We need to have our title, which is turned
on its side, and then we have the other

36
00:02:39.293 --> 00:02:44.420
column that's going to have the image with
the button on it and the text underneath.

37
00:02:44.420 --> 00:02:48.270
So to set that up,
we'll just say 40px 1fr.

38
00:02:49.410 --> 00:02:54.760
So those two columns, so you can see
the see and coffee, [LAUGH] over here.

39
00:02:54.760 --> 00:02:59.066
We haven't turned the text yet, but
there it is over here in its column,

40
00:02:59.066 --> 00:03:02.310
the image assigned to the second column.

41
00:03:02.310 --> 00:03:06.836
And then this paragraph, it has a space
here because, remember, we put some I

42
00:03:06.836 --> 00:03:11.659
don't remember as padding or margin on
the paragraph in our previous breakpoint.

43
00:03:11.659 --> 00:03:16.910
So it doesn't go quite over to the edge,
but it's kind of in that column here,

44
00:03:16.910 --> 00:03:21.240
and then the button is over
in the column with our image.

45
00:03:21.240 --> 00:03:24.690
Okay, so
that's what it's doing by default.

46
00:03:24.690 --> 00:03:27.940
What we wanna do is actually
have three rows here.

47
00:03:27.940 --> 00:03:32.342
We wanna have a row for the image and
the button will be on it, and

48
00:03:32.342 --> 00:03:37.170
we'll have a row,
with the picture underneath of it.

49
00:03:37.170 --> 00:03:41.431
So to set this up, we are going to say

50
00:03:41.431 --> 00:03:48.112
grid-template-rows: 10%, 60% and 30%,

51
00:03:48.112 --> 00:03:53.382
which is gonna make
this look even weirder.

52
00:03:53.382 --> 00:03:56.970
[LAUGH] So again, don't panic yet.

53
00:03:56.970 --> 00:04:00.495
So we have our image there,
you'll see that the image,

54
00:04:00.495 --> 00:04:05.150
which comes before the button,
is trying to cram itself into the 10%.

55
00:04:05.150 --> 00:04:09.943
The order button is in the second row, and
I don't think the third row is actually

56
00:04:09.943 --> 00:04:14.192
being used at the moment, we have a lot
of work to do before we get there.

57
00:04:16.980 --> 00:04:19.570
In fact, let's just go ahead and
do that now.

58
00:04:19.570 --> 00:04:24.960
So if we go to our card h2,
first thing we wanna do is assign

59
00:04:24.960 --> 00:04:31.410
this heading to its correct space,
which kind of already is.

60
00:04:31.410 --> 00:04:36.102
We want the grid column to be
exactly what it is 1/2 be going

61
00:04:36.102 --> 00:04:39.220
from the that first column.

62
00:04:39.220 --> 00:04:41.762
And then our grid row will be 1/4,

63
00:04:41.762 --> 00:04:46.570
we're gonna have it go all the way
down through all of the rows.

64
00:04:46.570 --> 00:04:49.999
So which will again ship this
layout around a little bit?

65
00:04:52.683 --> 00:04:58.527
In order to turn this, though, I am going
to lean on my CSS logical properties.

66
00:04:58.527 --> 00:05:01.680
Now, if you haven't heard
of logical properties,

67
00:05:01.680 --> 00:05:05.416
this is a mix of new properties
that are available to us in CSS.

68
00:05:05.416 --> 00:05:09.265
The way CSS was written, of course,
was originally for English,

69
00:05:09.265 --> 00:05:11.340
English is read from left to right.

70
00:05:11.340 --> 00:05:15.833
And when we think of a box on the page
as we have throughout this course,

71
00:05:15.833 --> 00:05:19.270
we have a top, a right,
a left, and a bottom.

72
00:05:19.270 --> 00:05:22.237
That works great if you
live in left-to-right land.

73
00:05:22.237 --> 00:05:26.579
But if you are writing a language that
goes from right to left, or and there

74
00:05:26.579 --> 00:05:31.790
are languages that go from top to bottom,
this does not necessarily work for you.

75
00:05:31.790 --> 00:05:36.698
So there's a whole suite of new
logical properties that you can use to

76
00:05:36.698 --> 00:05:39.890
lay out some of these other languages.

77
00:05:39.890 --> 00:05:44.378
You can also use them for
tricks like the one I'm about to do, and

78
00:05:44.378 --> 00:05:47.320
that will turn our text on this page.

79
00:05:47.320 --> 00:05:52.361
So to do that, you can do

80
00:05:52.361 --> 00:05:59.690
writing-mode is vertical-lr.

81
00:05:59.690 --> 00:06:05.390
And that will turn your text and it
will set it there inside of that column.

82
00:06:05.390 --> 00:06:08.630
And it's put it by default
in the center of the column.

83
00:06:08.630 --> 00:06:10.320
Pretty cool?

84
00:06:10.320 --> 00:06:14.517
You can also turn this, of course,
lr stands for left to right.

85
00:06:14.517 --> 00:06:20.645
You can also do rl, and
it changes the order of the lines of text,

86
00:06:20.645 --> 00:06:26.208
whether you're reading it up and
down from right to left,

87
00:06:26.208 --> 00:06:30.081
or up and down from left to right, okay?

88
00:06:30.081 --> 00:06:32.514
So this is lr.

89
00:06:32.514 --> 00:06:36.645
To get it back up to the start here,

90
00:06:36.645 --> 00:06:41.207
we need to go to align-self: start.

91
00:06:41.207 --> 00:06:43.690
And I will push that on up
to the start of our grid.

92
00:06:45.580 --> 00:06:50.078
We also have margin and
padding on this, so margin is 0,

93
00:06:50.078 --> 00:06:56.170
padding is 0, and that'll get us
the rest of the way here to the top.

94
00:06:56.170 --> 00:07:00.400
All right, so now we have our .card-image.

95
00:07:00.400 --> 00:07:05.627
And this one, we are going to have it

96
00:07:05.627 --> 00:07:12.076
go over our rows from grid-row: 1/4 and

97
00:07:12.076 --> 00:07:15.925
grid-column: 2/3.

98
00:07:15.925 --> 00:07:18.220
So that's gonna put it
in our second column.

99
00:07:18.220 --> 00:07:21.480
And it's gonna have it stretched
over a whole lot of our rows here.

100
00:07:21.480 --> 00:07:23.460
So right now it looks kind of tall.

101
00:07:23.460 --> 00:07:26.183
And in fact, it's hidden our button and
it's hidden our paragraph.

102
00:07:26.183 --> 00:07:30.112
But again, don't panic,
[LAUGH] one thing at a time we are gonna

103
00:07:30.112 --> 00:07:34.507
make this completely work, but
you have to type in all the code first.

104
00:07:36.549 --> 00:07:44.064
For the card-image,
img min-height will be 600 pixels and

105
00:07:44.064 --> 00:07:49.076
our border-radius we're gonna turn back

106
00:07:49.076 --> 00:07:55.915
on again Var(--radius).

107
00:08:00.061 --> 00:08:05.630
As for our paragraphs, .card p,

108
00:08:05.630 --> 00:08:13.695
we're gonna put this at
our grid-row of 3/4,

109
00:08:13.695 --> 00:08:18.505
our grid-column of 2/3.

110
00:08:18.505 --> 00:08:22.616
So now we have our image,
and we have our button, and

111
00:08:22.616 --> 00:08:26.549
we have our paragraph all
together on top of this.

112
00:08:26.549 --> 00:08:30.224
To cover up the bottom part of this image,

113
00:08:30.224 --> 00:08:35.798
we'll also add a background-color
of var(--vanilla).

114
00:08:39.453 --> 00:08:42.311
And now the button is on
top of the paragraph.

115
00:08:42.311 --> 00:08:47.519
So, you just see the button here, but the
paragraph is still there, it's behind it.

116
00:08:47.519 --> 00:08:50.253
And that's because, remember,
we have two paragraphs here.

117
00:08:50.253 --> 00:08:54.060
So essentially what we just did is we put
those two paragraphs on top of each other.

118
00:08:54.060 --> 00:08:57.335
So we have the text in the back and
we have the button on the front, and

119
00:08:57.335 --> 00:08:59.480
both of them have that vanilla background.

120
00:09:00.760 --> 00:09:04.950
So now what we need to do is move
just the button up here on the page.

121
00:09:04.950 --> 00:09:08.164
How do we do that?

122
00:09:08.164 --> 00:09:15.641
.card, p: last-of-type.

123
00:09:15.641 --> 00:09:17.001
Why not?

124
00:09:17.001 --> 00:09:20.160
Because we're talking about
our last paragraph there.

125
00:09:20.160 --> 00:09:27.910
Here, what we're going to do
is do our grid-column of 2/3.

126
00:09:27.910 --> 00:09:30.001
But the grid row will be 1/2,

127
00:09:30.001 --> 00:09:35.200
in other words move that button up to the
top of the page, so there it is up there.

128
00:09:37.180 --> 00:09:38.284
How cool is that?

129
00:09:40.352 --> 00:09:45.002
[SOUND] All right, so,
we need to override that background color,

130
00:09:45.002 --> 00:09:50.001
because on the previous style here
we set the background to be vanilla.

131
00:09:50.001 --> 00:09:54.097
So now that this is later in the styles,

132
00:09:54.097 --> 00:09:59.201
we can set our background
color to transparent.

133
00:09:59.201 --> 00:10:02.571
So that will have the image
shine through there.

134
00:10:02.571 --> 00:10:05.811
And then we can just change
the styling here for our button.

135
00:10:10.071 --> 00:10:17.147
So for the button,
Our background-color is var(--blue).

136
00:10:23.735 --> 00:10:24.901
There it is.

137
00:10:24.901 --> 00:10:28.045
And our color is var vanilla.

138
00:10:32.544 --> 00:10:38.316
And our border-color is also var(vanilla).

139
00:10:41.875 --> 00:10:47.378
Okay, not bad, super sweet.

140
00:10:47.378 --> 00:10:52.970
And then, we set our hover state because
right now it's gonna go back to the brown.

141
00:10:52.970 --> 00:10:55.220
If you like the brown,
you can keep the brown.

142
00:10:55.220 --> 00:10:57.821
If you don't like it, you can change it.

143
00:10:57.821 --> 00:11:03.489
.button, : hover,

144
00:11:04.971 --> 00:11:08.627
background-color:var(vanilla).

145
00:11:12.416 --> 00:11:16.211
Color: var(--blue).

146
00:11:21.525 --> 00:11:27.758
And border-color: var(--blue).

147
00:11:27.758 --> 00:11:28.573
Awesome, so

148
00:11:28.573 --> 00:11:33.179
now you have a button that looks like
that when you roll your mouse over it.

149
00:11:34.340 --> 00:11:35.207
The last part,

150
00:11:35.207 --> 00:11:39.690
I kind of skipped over some things here
has to do with a bunch of padding things.

151
00:11:39.690 --> 00:11:42.460
So let me go back to my card style here.

152
00:11:43.810 --> 00:11:47.933
Just to clean up the final look here,

153
00:11:47.933 --> 00:11:51.660
we can give this a gap of 0 to rem.

154
00:11:51.660 --> 00:11:55.746
So that's gonna give us some space
between our columns in this case so

155
00:11:55.746 --> 00:11:59.400
that they aren't all
smashed into each other.

156
00:11:59.400 --> 00:12:08.020
And we can give some margin of 0,
sorry, 2rem auto.

157
00:12:08.020 --> 00:12:12.494
So that will give us a little
bit of space on the top and

158
00:12:12.494 --> 00:12:18.520
the bottom being given us some
padding of 0, 2rem, 5rem, 2rem.

159
00:12:18.520 --> 00:12:23.691
So that is 0 on the top because we've
already got a little bit of margin there.

160
00:12:23.691 --> 00:12:27.713
2rem on the left and the right, so
we get it off the edges of the screen.

161
00:12:27.713 --> 00:12:32.158
And then 5rem down here on the bottom to
give us more space in between the cards

162
00:12:37.077 --> 00:12:40.310
And I think that does it for those cards.

163
00:12:40.310 --> 00:12:43.936
&gt;&gt; Why did the background
color on the button not work

164
00:12:43.936 --> 00:12:47.832
until you did the actual button class for
a selector?

165
00:12:47.832 --> 00:12:50.509
Cuz you made it transparent and
then you made it blue.

166
00:12:50.509 --> 00:12:53.370
&gt;&gt; Right, well, let's see.

167
00:12:53.370 --> 00:12:59.350
Well, so what we did was,
we have the paragraph around the button.

168
00:12:59.350 --> 00:13:03.490
So remember we have
a paragraph around the button,

169
00:13:03.490 --> 00:13:08.396
here in 173, we set that to be vanilla,
okay, and then,

170
00:13:08.396 --> 00:13:15.049
which would give us, That,
we cut off the top of the image.

171
00:13:16.971 --> 00:13:18.304
&gt;&gt; Why does it do that?

172
00:13:18.304 --> 00:13:21.650
&gt;&gt; Well, we set the row to be 10% high.

173
00:13:21.650 --> 00:13:25.470
And this button is a little bit
bigger than the 10% that's there.

174
00:13:25.470 --> 00:13:26.562
So that's what's going on.

175
00:13:26.562 --> 00:13:30.130
It's the 10% of that row has
that background color and

176
00:13:30.130 --> 00:13:32.780
then the button is on top of that.

177
00:13:32.780 --> 00:13:36.797
So by adding the background color of
transparent, we bring back the rest of

178
00:13:36.797 --> 00:13:40.390
that image there, and the button
is sitting in a place that I like.

179
00:13:42.210 --> 00:13:42.964
Make sense?

180
00:13:42.964 --> 00:13:45.383
Yeah, good question.

181
00:13:45.383 --> 00:13:48.540
Questions online?

182
00:13:48.540 --> 00:13:50.282
Dustin?

183
00:13:50.282 --> 00:13:52.125
Any questions online?

184
00:13:52.125 --> 00:13:56.079
&gt;&gt; How do we make the button collide
with the copy picture at the top?

185
00:13:56.079 --> 00:13:58.568
Sorry, they missed the CSS grid part.

186
00:13:58.568 --> 00:14:01.067
So that was answered earlier.

187
00:14:01.067 --> 00:14:01.975
&gt;&gt; No worries.

188
00:14:01.975 --> 00:14:05.980
It's grid and
we assign it the same rows and columns,

189
00:14:05.980 --> 00:14:09.550
at least in part to what
the image is occupying.

190
00:14:09.550 --> 00:14:12.554
And so grid will very happily
put all of the elements and

191
00:14:12.554 --> 00:14:14.650
stack them on top of each other.

192
00:14:14.650 --> 00:14:19.116
If you assign them the same rows and
columns, it'll just stack things on up and

193
00:14:19.116 --> 00:14:20.910
be very happy about it.

194
00:14:20.910 --> 00:14:25.715
So absolute positioning is a little
bit different in that you can take any

195
00:14:25.715 --> 00:14:30.073
element anywhere on the page and
pile it on top of something else.

196
00:14:30.073 --> 00:14:33.349
With grid, you can pile things
on top of each other, but

197
00:14:33.349 --> 00:14:35.949
they have to be all
inside of that same grid.

198
00:14:35.949 --> 00:14:40.723
So you're more limited with how you're
gonna stack things on top of each other

199
00:14:40.723 --> 00:14:43.615
with grid as opposed to
absolute positioning,

200
00:14:43.615 --> 00:14:45.800
but the end effect here is the same.

