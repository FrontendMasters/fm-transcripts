WEBVTT

1
00:00:00.310 --> 00:00:04.272
Hi everybody, this is Jen Kramer Welcome
to CSS projects, I'm so

2
00:00:04.272 --> 00:00:06.510
glad that you're here today.

3
00:00:06.510 --> 00:00:10.539
And there is a website to follow
along with this course it is at

4
00:00:10.539 --> 00:00:15.678
projects.css.education, which will
explain all of the instructions for

5
00:00:15.678 --> 00:00:19.250
all of the projects that we
are going to work on today.

6
00:00:20.420 --> 00:00:24.830
So, let me tell you about
this course in general.

7
00:00:24.830 --> 00:00:29.570
So, today we're gonna be working
through six different layout projects.

8
00:00:29.570 --> 00:00:34.454
We're gonna do a style guide, and then
five additional projects that will use

9
00:00:34.454 --> 00:00:38.968
that style guide in terms of putting
together parts of a coffee website,

10
00:00:38.968 --> 00:00:42.180
it's the Coffee Masters website.

11
00:00:42.180 --> 00:00:45.716
The course is designed in a bunch
of different ways, first of all,

12
00:00:45.716 --> 00:00:49.980
it is designed to address different
difficulty levels of difficulty.

13
00:00:49.980 --> 00:00:54.827
So I have suggestions as we go about
how to make these projects a little bit

14
00:00:54.827 --> 00:00:59.200
easier or a little bit more
difficult as you go along the way.

15
00:00:59.200 --> 00:01:03.518
I have some next level suggestions in
there about how you can take these designs

16
00:01:03.518 --> 00:01:06.030
to the next level if
you wanted to do that.

17
00:01:06.030 --> 00:01:09.765
I don't have answers for those next-level
ideas, but they are things like,

18
00:01:09.765 --> 00:01:13.046
if you want to put this in your
portfolio and take it to the next level,

19
00:01:13.046 --> 00:01:16.270
these are some ideas that
you could do to do that.

20
00:01:16.270 --> 00:01:20.292
No JavaScript is required for
anything that we're going to do today,

21
00:01:20.292 --> 00:01:24.680
it is all HTML and CSS, and
we're going to work in CodePen to do that.

22
00:01:24.680 --> 00:01:29.760
I adore CodePen because you focus
on HTML and CSS, you do not work,

23
00:01:29.760 --> 00:01:35.410
focus on workflows, command lines,
frameworks, any other nonsense.

24
00:01:35.410 --> 00:01:39.151
You're gonna focus on the actual code,
HTML and CSS.

25
00:01:39.151 --> 00:01:43.965
It's two thirds of the Front-end, if you
would call yourself a Front-end developer,

26
00:01:43.965 --> 00:01:47.189
you should know HTML and
CSS without frameworks involved.

27
00:01:48.810 --> 00:01:51.382
And then as I said,
as part of that first project,

28
00:01:51.382 --> 00:01:53.950
we're gonna work on some base styling.

29
00:01:53.950 --> 00:01:56.903
And I hope for
some of you who are towards the 1 and

30
00:01:56.903 --> 00:02:00.150
2 end of CSS,
this is an eye-opening experience.

31
00:02:00.150 --> 00:02:03.884
What you wanna do is you wanna
write styles such that they

32
00:02:03.884 --> 00:02:08.731
cascade down into the rest of your design,
and ensures that you will have

33
00:02:08.731 --> 00:02:12.793
consistency through your design,
If you set this up first.

34
00:02:12.793 --> 00:02:17.259
Even if it will never go live,
you've set these styles and

35
00:02:17.259 --> 00:02:22.000
you will then continue to leverage
those as you go into the rest

36
00:02:22.000 --> 00:02:25.935
of the layout projects
that we're going to cover.

37
00:02:25.935 --> 00:02:28.280
Any questions so far?

38
00:02:28.280 --> 00:02:33.297
&gt;&gt; They're asking if if we can
use a framework like tailwind, or

39
00:02:33.297 --> 00:02:38.280
like the person taking the course,
would use a framework.

40
00:02:38.280 --> 00:02:43.202
&gt;&gt; You can do whatever you want, but
I would encourage you to write HTML and

41
00:02:43.202 --> 00:02:46.720
CSS because you ought to learn HTML and
CSS.

42
00:02:46.720 --> 00:02:51.806
Tailwind is not CSS, and by the way,
those of you who are learning Tailwind

43
00:02:51.806 --> 00:02:57.160
to the exclusion of CSS, these
frameworks don't have a long lifetime.

44
00:02:57.160 --> 00:02:59.708
I remember when Bootstrap was the thing,
and

45
00:02:59.708 --> 00:03:04.350
it was never gonna go anywhere ever again,
okay, so Tailwind was the successor.

46
00:03:04.350 --> 00:03:07.657
We're already seeing people talking
about what comes after Tailwind,

47
00:03:07.657 --> 00:03:09.880
frameworks will not stay forever.

48
00:03:09.880 --> 00:03:14.002
So either you're gonna continue to chase
a framework for the rest of your life, or

49
00:03:14.002 --> 00:03:17.826
you can learn the fundamentals, and
you will always know the next framework

50
00:03:17.826 --> 00:03:21.060
because you already know
how the fundamentals work.

51
00:03:21.060 --> 00:03:24.584
So If that is the Front-end Masters
philosophy and it is my philosophy,

52
00:03:24.584 --> 00:03:28.290
it's the reason I love teaching here,
you got to know the fundamentals.

53
00:03:28.290 --> 00:03:33.074
&gt;&gt; Absolutely, you're gonna be much
faster if you know actual CSS.

54
00:03:33.074 --> 00:03:35.748
&gt;&gt; Yes, that's right
&gt;&gt; Peter asks,

55
00:03:35.748 --> 00:03:38.968
are we gonna tackle
the latest CSS features?

56
00:03:38.968 --> 00:03:44.381
&gt;&gt; Yes, well, today we've got Flexbox,
grid, overflow, object fit,

57
00:03:44.381 --> 00:03:49.441
object position, of course the usual
kinds of stuff with colors and

58
00:03:49.441 --> 00:03:53.735
paddings and margins and
all kinds of other craziness.

59
00:03:53.735 --> 00:03:56.473
So I use variables typically for
colors and

60
00:03:56.473 --> 00:04:01.245
fonts because I find students
understand that sort of innately.

61
00:04:01.245 --> 00:04:05.341
If you wanted to do more with variables,
you certainly could do that, yes, and

62
00:04:05.341 --> 00:04:09.319
I'm sure that you could actually do a
whole lot more with variables than what I

63
00:04:09.319 --> 00:04:10.020
do here.

64
00:04:10.020 --> 00:04:14.314
In fact, I've showed that in my advanced
CSS layouts course about how you can

65
00:04:14.314 --> 00:04:18.477
basically use media queries as a way
of just changing values of variables to

66
00:04:18.477 --> 00:04:20.620
change your layouts.

67
00:04:20.620 --> 00:04:23.373
We're not gonna go to that
level here today, but

68
00:04:23.373 --> 00:04:27.010
you could definitely take things
to that level if you wanted to.

69
00:04:28.180 --> 00:04:34.162
&gt;&gt; There was just some discussion around
good ideas on how to learn to practice,

70
00:04:34.162 --> 00:04:39.318
and some people mentioned maybe
looking at designs in Dribbble and

71
00:04:39.318 --> 00:04:41.450
trying to replicate them.

72
00:04:41.450 --> 00:04:43.954
Obviously, this course is
the entire point of it, but

73
00:04:43.954 --> 00:04:45.436
&gt;&gt; That is the entire point of this

74
00:04:45.436 --> 00:04:48.344
course, yes, we will have
a whole series of these designs,

75
00:04:48.344 --> 00:04:52.410
I'm gonna give them to you, and
you will try to replicate them.

76
00:04:52.410 --> 00:04:57.123
And that starts from the style guide and
works the whole way through the course,

77
00:04:57.123 --> 00:04:59.174
you'll see here in just a moment.

78
00:04:59.174 --> 00:05:02.990
All right, so there are four
steps to each of these projects.

79
00:05:02.990 --> 00:05:07.210
These four steps are how you do HTML and
CSS work.

80
00:05:07.210 --> 00:05:12.297
You can take these four steps, put them
in your back pocket, take them to work

81
00:05:12.297 --> 00:05:17.716
tomorrow and apply them if you know these
four steps you are an HTML and CSS master.

82
00:05:17.716 --> 00:05:22.446
It will automatically bump you up one
level in your HTML and CSS knowledge this

83
00:05:22.446 --> 00:05:27.200
is how we do it, okay, so first of all,
we're gonna study the screenshots.

84
00:05:27.200 --> 00:05:31.022
We're gonna have a little bit of
discussion about what you see between

85
00:05:31.022 --> 00:05:34.131
these screenshots,
things we might wanna keep in mind,

86
00:05:34.131 --> 00:05:38.800
things we might wanna plan for
as we work through laying out the design.

87
00:05:38.800 --> 00:05:42.450
Then you're going to code semantic HTML,
so

88
00:05:42.450 --> 00:05:46.588
this is not 25 layers of div,
plus a spam, okay.

89
00:05:46.588 --> 00:05:51.661
This is we're going to work with
articles and sections, figures,

90
00:05:51.661 --> 00:05:57.890
paragraphs lists of the appropriate
type all kinds of things like that.

91
00:05:57.890 --> 00:06:02.704
And we're not gonna worry about how those
things are gonna be grouped with divs and

92
00:06:02.704 --> 00:06:05.704
spans because that is part
of the styling process,

93
00:06:05.704 --> 00:06:08.370
we'll add that as needed
as we move through.

94
00:06:08.370 --> 00:06:13.145
Then you're gonna code the mobile layout,
so the mobile layout is

95
00:06:13.145 --> 00:06:18.720
the first thing that you code,
MobileFirst, that's what it means.

96
00:06:18.720 --> 00:06:23.545
And so you should make sure that your
mobile design is working correctly before

97
00:06:23.545 --> 00:06:24.440
you move on.

98
00:06:24.440 --> 00:06:26.850
We're not gonna bounce between
different break points,

99
00:06:26.850 --> 00:06:28.580
we're gonna start with a mobile design.

100
00:06:28.580 --> 00:06:32.115
We're gonna make sure the mobile
design is working correctly, and

101
00:06:32.115 --> 00:06:36.670
then we move on to however many additional
breakpoints there happened to be.

102
00:06:36.670 --> 00:06:41.533
So don't bounce between breakpoints,
make sure you've got

103
00:06:41.533 --> 00:06:46.674
that mobile clear, and
make sure your HTML starts off semantic,

104
00:06:46.674 --> 00:06:51.240
and you should be able to
create some amazing layouts.

105
00:06:51.240 --> 00:06:55.790
So these are the four steps and we're
going to go through these four steps time

106
00:06:55.790 --> 00:07:00.060
six today so by the time you leave here
[LAUGH] You should be in good shape for

107
00:07:00.060 --> 00:07:03.216
knowing these four steps yes
&gt;&gt; I have a I have a question about

108
00:07:03.216 --> 00:07:04.162
the MobileFirst.

109
00:07:04.162 --> 00:07:05.250
&gt;&gt; Sure.

110
00:07:05.250 --> 00:07:09.900
&gt;&gt; What is the benefit to doing
MobileFirst before worrying about desktop?

111
00:07:09.900 --> 00:07:12.941
&gt;&gt; So MobileFirst has its
origins back when mobile

112
00:07:12.941 --> 00:07:16.980
was just starting to be a thing,
around 2010, 2011.

113
00:07:16.980 --> 00:07:24.020
And Luke W, who is a well-known UX guy,
talked about MobileFirst in two contexts.

114
00:07:24.020 --> 00:07:26.987
One context is how do we plan a website,
and

115
00:07:26.987 --> 00:07:31.050
the other context is how
do we code the website?

116
00:07:31.050 --> 00:07:32.380
So how do we plan it?

117
00:07:32.380 --> 00:07:34.844
If we plan it for
MobileFirst, there's only so

118
00:07:34.844 --> 00:07:38.800
much you can fit on a teensy tiny screen,
which were even smaller back then.

119
00:07:39.950 --> 00:07:43.684
So, in other words, we don't start by
working on a desktop screen where we have

120
00:07:43.684 --> 00:07:46.710
lots of room and then try to
make it work on a mobile device.

121
00:07:46.710 --> 00:07:50.979
We start on a mobile screen, put only the
things that we need to put on that mobile

122
00:07:50.979 --> 00:07:55.720
screen, and then we can spread them out
as we move forward to other devices.

123
00:07:55.720 --> 00:07:59.631
So generally speaking,
you will find things like Bootstrap,

124
00:07:59.631 --> 00:08:03.708
and other various kinds of
frameworks from foundation, UI kit.

125
00:08:03.708 --> 00:08:07.750
There's a whole bunch of them, are written
MobileFirst for this particular reason.

