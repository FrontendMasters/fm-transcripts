WEBVTT

1
00:00:00.200 --> 00:00:05.435
So, the magic here,
we have a bottom browser scrollbar here.

2
00:00:05.435 --> 00:00:10.330
And notice that, yeah, we can scroll
all the way over here on the page,

3
00:00:10.330 --> 00:00:11.890
that's kind of ugly.

4
00:00:13.000 --> 00:00:18.941
The magic to make this work is,
overflow: auto.

5
00:00:20.350 --> 00:00:25.076
And that will put a scrollbar on
the wrapper as opposed to a scrollbar on

6
00:00:25.076 --> 00:00:27.410
the browser window, make sense?

7
00:00:29.480 --> 00:00:33.220
So there's our scrollbar on the wrapper.

8
00:00:33.220 --> 00:00:37.960
And now we can get back and
forth to each of our items, okay?

9
00:00:37.960 --> 00:00:41.190
And then the last thing I added
here was it gap of 2 rem,

10
00:00:41.190 --> 00:00:44.220
give us a little breathing
room between the cards.

11
00:00:47.103 --> 00:00:50.940
&gt;&gt; Is gap a grid method?

12
00:00:50.940 --> 00:00:54.080
&gt;&gt; It is also a flexbox method, yep.

13
00:00:54.080 --> 00:00:56.388
Gap can be used on both flexbox and grid.

14
00:00:56.388 --> 00:00:59.665
&gt;&gt; Understood, last time it was
column gap, this time it's gap, and

15
00:00:59.665 --> 00:01:02.010
maybe it would also apply
if we had rows here?

16
00:01:02.010 --> 00:01:03.378
&gt;&gt; And there's a row gap, yep.

17
00:01:03.378 --> 00:01:07.324
So gap would be columns and rows,
in which case, we only have one row, so

18
00:01:07.324 --> 00:01:08.508
it doesn't matter.

19
00:01:08.508 --> 00:01:13.132
Or you can call column gap which,
of course, is just the columns or row gap.

20
00:01:13.132 --> 00:01:19.190
And I think gap has two numbers for that
same reason or can have two numbers, okay?

21
00:01:19.190 --> 00:01:23.890
&gt;&gt; And there's overflow also,
a grid, or is that flexbox as well?

22
00:01:23.890 --> 00:01:27.080
&gt;&gt; No, that is just a property,
it's been around forever.

23
00:01:28.700 --> 00:01:32.494
So there's a couple of values for
this overflow, one is scroll.

24
00:01:34.817 --> 00:01:40.520
And notice that also gives you
a horizontal or a vertical scrollbar.

25
00:01:40.520 --> 00:01:42.550
Cuz it will turn on
scrollbars all the time.

26
00:01:44.170 --> 00:01:48.159
So auto is what you prefer [LAUGH],
because then, it will only

27
00:01:48.159 --> 00:01:52.600
put on the scrollbar that you need,
&gt;&gt; And

28
00:01:52.600 --> 00:01:55.230
then you have some styling for
that scrollbar too?

29
00:01:55.230 --> 00:01:59.080
&gt;&gt; Yeah, then we have styling for
the scrollbar too, okay?

30
00:01:59.080 --> 00:02:03.880
So we've got our styling there,
blah, blah, blah, blah blah.

31
00:02:03.880 --> 00:02:06.828
Okay, so then I gave you
a link to this article here,

32
00:02:06.828 --> 00:02:09.383
which talks about custom
scrollbars in CSS.

33
00:02:09.383 --> 00:02:14.790
And it will talk you through all the ways
that you can make custom scrollbars.

34
00:02:14.790 --> 00:02:18.170
I'm not gonna go through it all,
I am just going to steal shamelessly.

35
00:02:19.520 --> 00:02:25.310
So, there is a difference for
this between WebKit browsers and Firefox.

36
00:02:25.310 --> 00:02:27.037
So, let's put in WebKit.

37
00:02:30.120 --> 00:02:31.880
We'll start with that.

38
00:02:31.880 --> 00:02:37.481
We have a 4R wrapper, let's see,

39
00:02:37.481 --> 00:02:41.410
-webkit- scrollbar.

40
00:02:43.430 --> 00:02:46.720
And you can set a width of 10 px.

41
00:02:46.720 --> 00:02:49.780
&gt;&gt; Can you quickly touch
upon what WebKit is?

42
00:02:49.780 --> 00:02:55.842
&gt;&gt; WebKit is the engine behind browsers
like Chrome and Safari, notably.

43
00:02:55.842 --> 00:02:56.707
&gt;&gt; Okay.

44
00:02:56.707 --> 00:02:58.159
&gt;&gt; Yeah.
&gt;&gt; So if you provide WebKit,

45
00:02:58.159 --> 00:03:00.530
it will be applicable
to both the browsers?

46
00:03:00.530 --> 00:03:02.100
&gt;&gt; Both of those browsers.
&gt;&gt; Not to Firefox.

47
00:03:02.100 --> 00:03:04.760
&gt;&gt; But not to Firefox, correct, yep.

48
00:03:06.100 --> 00:03:07.170
Did I get that right?

49
00:03:07.170 --> 00:03:11.680
Wrapper:: -webkit
-scrollbar{ width: 10 px}.

50
00:03:11.680 --> 00:03:15.028
I think I did,
it looks like it disappeared, have faith.

51
00:03:15.028 --> 00:03:23.722
Wrapper ::-webkit -scrollbar -track.

52
00:03:25.614 --> 00:03:34.274
Background-color: var (--tan);, okay?

53
00:03:34.274 --> 00:03:37.539
So we've set the width to 10 px,
we couldn't see it there for

54
00:03:37.539 --> 00:03:40.940
a moment because it was the same
color as the background.

55
00:03:40.940 --> 00:03:43.890
Now we have our track,
which is sort of that,

56
00:03:43.890 --> 00:03:47.430
what was white before,
now we have it as tan.

57
00:03:47.430 --> 00:03:52.127
And then we can add .wrapper::

58
00:03:52.127 --> 00:03:56.832
-webkit -scrollbar -thumb.

59
00:03:56.832 --> 00:03:58.789
And this, of course,

60
00:03:58.789 --> 00:04:04.710
is the little doohickey [LAUGH]
that you move back and forth.

61
00:04:04.710 --> 00:04:08.948
And box-shadow: inset 0 0

62
00:04:08.948 --> 00:04:13.699
6px rgba(0, 0, 0, 1).

63
00:04:13.699 --> 00:04:22.620
That came straight out of this article.

64
00:04:22.620 --> 00:04:25.290
And basically, what that does is,

65
00:04:25.290 --> 00:04:30.100
it just puts a shadow on the little
thingy, the thumb, I guess.

66
00:04:30.100 --> 00:04:32.640
I don't even know what you call that.

67
00:04:32.640 --> 00:04:34.279
What would you call that normally?

68
00:04:34.279 --> 00:04:35.213
&gt;&gt; Handle?

69
00:04:35.213 --> 00:04:38.160
&gt;&gt; The handle for
the scrollbar, I don't know.

70
00:04:38.160 --> 00:04:40.270
Anyway, so that's gonna style that.

71
00:04:40.270 --> 00:04:42.444
Yes?
&gt;&gt; How does the double colon modify

72
00:04:42.444 --> 00:04:47.150
the wrapper, and is there a difference
between a double colon and a single colon?

73
00:04:47.150 --> 00:04:51.200
&gt;&gt; Yes, absolutely, there is a difference
between double colons and single colons.

74
00:04:51.200 --> 00:04:56.630
Double colons are pseudo-elements,
single colons are pseudo-classes.

75
00:04:56.630 --> 00:05:01.489
And a pseudo-element is
things like before, after.

76
00:05:03.520 --> 00:05:06.750
First line,
first letter are all pseudo elements.

77
00:05:06.750 --> 00:05:11.160
So basically we're modifying
the properties of that particular item.

78
00:05:11.160 --> 00:05:13.340
Whereas a pseudo class often
has to do with states.

79
00:05:13.340 --> 00:05:17.552
So hover, for example, hover,
visited link, that kind of thing.

80
00:05:17.552 --> 00:05:22.120
We're modifying states of the link
in that particular situation.

81
00:05:22.120 --> 00:05:26.572
So I am just putting in what
the article told me to do.

82
00:05:26.572 --> 00:05:31.760
Anything that starts with
a -webkit is webkit specific.

83
00:05:31.760 --> 00:05:36.236
These are not actually W3C
supported properties, okay?

84
00:05:36.236 --> 00:05:40.320
So that's the WebKit way of doing this.

85
00:05:40.320 --> 00:05:43.456
You're gonna love this for Firefox.

86
00:05:46.096 --> 00:05:51.368
HTML [LAUGH] {scrollbar-color:

87
00:05:51.368 --> 00:05:57.912
var (--coffee) var(--tan); and

88
00:05:57.912 --> 00:06:03.734
scrollbar-width: thin;, okay?

89
00:06:03.734 --> 00:06:09.873
So you won't see anything happen here
on my screen because I am using Chrome.

90
00:06:09.873 --> 00:06:16.079
But if you wanna save your CodePen and
then open it up in Firefox real quick,

91
00:06:16.079 --> 00:06:20.904
you will see that that has a tan
background with the thumb,

92
00:06:20.904 --> 00:06:24.269
the handle, whatever, will be brown.

93
00:06:24.269 --> 00:06:27.867
And you can move that back and
forth, okay?

94
00:06:27.867 --> 00:06:33.500
And true to Firefox's form,
those are the actual properties

95
00:06:33.500 --> 00:06:38.820
that are probably in preparation for
support by the W3C.

96
00:06:38.820 --> 00:06:40.603
So it could be this WebKit
stuff will disappear, but

97
00:06:40.603 --> 00:06:41.746
this is how we do it at the moment.

