[00:00:00]
>> What are you seeing as far as companies using pure JavaScript or frameworks like React, Vue, Angular?
>> I think we would like your take as well. So what am I seeing in terms of, are companies using just pure JavaScript or what's often called Vanilla JavaScript? You'll hear that phrase a lot meaning JavaScript without any kind of framework like React or Angular or Vue, or are companies using React or Angular or Vue or other things, Felt, what have you?

[00:00:32]
So personally, I do see a lot of companies working with frameworks, especially I would say React is kind of the most common least seen one in my experience. And with meta frameworks like Next, which we mentioned briefly earlier, that are kind of the goal that play nicely with React or that that you can kind of use React within.

[00:00:54]
So I would say that React is a very valuable framework. If you want to go ahead after you've kind of got your Vanilla JavaScript bearings under you, go on and learn a bit of React. I think that that is going to be a valuable skill. That said, you do still see plenty of places working with Vanilla JavaScript, and so I might ask Mark to chime in with his take on Vanilla versus Framework JavaScript.

[00:01:24]

>> I think this is too loaded of a question. But [LAUGH] in general, I think that learning fundamentals like this, the course that you just took, is gonna set you up for success no matter what path you take. And it's always great to learn browser APIs and how JavaScript works under the hood.

[00:01:44]
The next course on the Learning Path will probably be well sentences JavaScript. The hard part's anytime you're investing in fundamentals, it makes frameworks and additional layers that you layer on top of Vanilla JavaScript like TypeScript or like React or like Vue or whatever, it just makes picking up those things easier because you can see, this part of the code is React or this part of the code is, or the syntax is TypeScript etc.

[00:02:11]
And so, the more you invest in fundamentals, the better that you're gonna be able to pick up whatever tools are in the professional landscape. So currently, of course React is the most popular and TypeScript is being adapted everywhere. And so, these tools are important if you want to look great with your resume and your projects in your portfolio to get get hired and that kind of thing.

[00:02:40]
So, in a professional landscape, I think that React knowledge is kind of a baseline because it's just used so many places and those paradigms and are just used over and over in new frameworks like Solid, you mentioned Svelte, and they all kind of look somewhat similar. And so, invest in fundamentals and then layer on these kind of approaches and then you'll be setting yourself up for success no matter what tool you come across in your job.

[00:03:13]

>> Yes, exactly. I would agree with that and I would also say Frameworks even more so then, we said JavaScript evolves, JavaScript changes and Frameworks change even more frequently and more drastically. So, who knows what we're all gonna be using in five years or ten years in the JavaScript world?

[00:03:34]
But the fundamentals of JavaScript and the underlying mental models that we have of how it works and how it works with the browser and other web technologies and how it conceives of data and scope in these sort of time, these sort of kind of high level things. That is less likely to change anytime soon.

[00:03:54]
So, I totally agree, learning a framework like React, super useful, learning a language like TypeScript, which is sort of on top of JavaScript, also super useful. But trying to learn those things before we really have our sea legs as it were with JavaScript fundamentals, Vanilla JavaScript is not gonna be as valuable as really learning JavaScript thoroughly and making sure we're comfortable with Vanilla.

[00:04:23]
The frameworks will come and go, they will change, they will evolve, they will drastically change the way they look at things, even React has really kind of changed how we write React code pretty drastically in the last few years. So, those kind of things are gonna evolve and the best way that we can stay adaptable to any of those changes and remain able to work in whatever new framework comes along tomorrow, is to have a really solid foundation in JavaScript.

[00:04:50]
So, just as we said, as Mark said.

