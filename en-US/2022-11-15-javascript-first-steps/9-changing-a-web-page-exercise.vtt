WEBVTT

1
00:00:00.000 --> 00:00:03.663
Okay, so
now armed with these few spells and

2
00:00:03.663 --> 00:00:07.227
our good friend MDN always, to this time,

3
00:00:07.227 --> 00:00:12.985
it's less of a scavenger hunt and
more of a task list, a to-do list.

4
00:00:12.985 --> 00:00:16.452
We're gonna go through and we're gonna
actually manipulate this page and

5
00:00:16.452 --> 00:00:17.671
make it individualized.

6
00:00:17.671 --> 00:00:20.100
So far we've been all
looking at the same page.

7
00:00:20.100 --> 00:00:23.755
Now we're going to customize our page for
ourselves.

8
00:00:23.755 --> 00:00:27.166
So if you're sitting here in the room,
you're going to,

9
00:00:27.166 --> 00:00:31.901
first of all change the player names to
player one can be yourself and player two,

10
00:00:31.901 --> 00:00:34.565
who can be your closest
neighbor next to you.

11
00:00:34.565 --> 00:00:36.606
And if you don't remember their name,
ask them.

12
00:00:36.606 --> 00:00:40.764
If you're following along at home,
you can make player one yourself and

13
00:00:40.764 --> 00:00:45.467
then player two, whoever is closest to you
in the room you're in or in your house or

14
00:00:45.467 --> 00:00:48.901
a friend you just talked to on
the phone or whoever you want.

15
00:00:48.901 --> 00:00:53.200
Then as another fun,
add-on, swap the symbols.

16
00:00:53.200 --> 00:00:57.437
So right now, player one has an x and
player two has an o, swap them.

17
00:00:57.437 --> 00:00:59.874
So player one gets the o.

18
00:00:59.874 --> 00:01:02.156
And then change the subtitle of the page.

19
00:01:02.156 --> 00:01:06.812
Right now it says a game you know,
change it to a game you know and love.

20
00:01:06.812 --> 00:01:09.441
This is your mission should
you choose to accept it.

21
00:01:09.441 --> 00:01:12.916
So let's take five minutes and
try to do that.

22
00:01:18.057 --> 00:01:23.160
We're back with a different web
page than we had before, perhaps.

23
00:01:23.160 --> 00:01:24.390
How did this go?

24
00:01:24.390 --> 00:01:24.965
How are we feeling?

25
00:01:24.965 --> 00:01:29.919
We starting to feel the immense
cosmic powers of our JavaScript

26
00:01:29.919 --> 00:01:34.504
spells little bit, at least for
this one webpage, okay?

27
00:01:34.504 --> 00:01:38.231
So, how did you all decide to do this?

28
00:01:38.231 --> 00:01:41.707
For number one,
like changing the player names?

29
00:01:41.707 --> 00:01:45.750
We saw one example of
changing first player name.

30
00:01:45.750 --> 00:01:51.968
So in mine now it says Sofia and France,
can somebody else change it to their name.

31
00:01:51.968 --> 00:01:56.636
How about Jason,
you look ready to change something.

32
00:01:56.636 --> 00:02:02.686
&gt;&gt; I think I cheated, I went right
into the In the document itself and

33
00:02:02.686 --> 00:02:05.224
changed all of the values.

34
00:02:05.224 --> 00:02:09.068
&gt;&gt; All right, well,
this is a totally legit thing,

35
00:02:09.068 --> 00:02:13.380
since our since our dev tools
let us edit HTML directly.

36
00:02:13.380 --> 00:02:20.310
One way we can change what's on the page
is by going into our Inspector tab,

37
00:02:20.310 --> 00:02:27.021
drilling into whatever we want, and
editing it, as we see fit, right?

38
00:02:27.021 --> 00:02:31.840
So, that is perhaps cheating because
we're not using JavaScript, but

39
00:02:31.840 --> 00:02:33.265
it gets the job done.

40
00:02:33.265 --> 00:02:39.984
So, that's great, and
now I have deleted all important space.

41
00:02:39.984 --> 00:02:46.143
Okay, did anybody manage to use
JavaScript to do the same thing?

42
00:02:46.143 --> 00:02:51.732
&gt;&gt; I changed the game name using
query selector h2.text content but

43
00:02:51.732 --> 00:02:56.419
then when I tried to do
the same thing with p1-name, it

44
00:02:56.419 --> 00:03:00.588
says do not set properties have no setting
&gt;&gt; Errors,

45
00:03:00.588 --> 00:03:05.784
errors JavaScript always is gonna
complain when we're doing something.

46
00:03:05.784 --> 00:03:07.313
So let's find out what happened here.

47
00:03:07.313 --> 00:03:10.078
&gt;&gt; So you typed document.-.

48
00:03:10.078 --> 00:03:11.293
&gt;&gt; QuerySelector.

49
00:03:11.293 --> 00:03:12.222
&gt;&gt; Query selector?

50
00:03:12.222 --> 00:03:14.563
&gt;&gt; Yep, p1-name.

51
00:03:14.563 --> 00:03:15.996
&gt;&gt; P1-name?

52
00:03:15.996 --> 00:03:18.511
&gt;&gt; Yep, and x content.

53
00:03:18.511 --> 00:03:23.460
Right now we are noticing that
we are missing something,

54
00:03:23.460 --> 00:03:29.145
because right now if we stop here and
we press Enter, we see null.

55
00:03:29.145 --> 00:03:33.573
And so now if I tried out text content,
JavaScript is like, no,

56
00:03:33.573 --> 00:03:37.067
I don't know what happened but
something is wrong.

57
00:03:37.067 --> 00:03:38.829
So we're gonna talk about this later.

58
00:03:38.829 --> 00:03:43.255
But there is something wrong here because
we wanted an HTML element to come back

59
00:03:43.255 --> 00:03:46.340
from this, and
instead we got something called null,

60
00:03:46.340 --> 00:03:48.501
which we're gonna talk about later.

61
00:03:48.501 --> 00:03:52.040
About like what is null,
is it related to undefined, what are they,

62
00:03:52.040 --> 00:03:53.940
do they do things for us, who knows.

63
00:03:53.940 --> 00:03:58.941
So there is some small
change we need to make.

64
00:03:58.941 --> 00:04:00.857
We figured out what it is, OJ.

65
00:04:00.857 --> 00:04:01.944
&gt;&gt; It a hashtag.
&gt;&gt; It's a hashtag.

66
00:04:01.944 --> 00:04:04.394
&gt;&gt; Why does it care?

67
00:04:04.394 --> 00:04:07.754
&gt;&gt; What if we put the hash there now,

68
00:04:07.754 --> 00:04:13.036
we get back the span element
that we were expecting.

69
00:04:13.036 --> 00:04:18.619
&gt;&gt; Does anybody know why do we need that
hash, can anybody recap or does anybody

70
00:04:18.619 --> 00:04:23.784
have a guess as to why it matters
whether that hash is there, yes Paul.

71
00:04:23.784 --> 00:04:28.502
&gt;&gt; I think that without
the hash it's just looking for

72
00:04:28.502 --> 00:04:34.328
an element that named and
that's not an element, it's an Id.

73
00:04:34.328 --> 00:04:39.592
&gt;&gt; Right, so in our HTML,
we're looking for

74
00:04:39.592 --> 00:04:45.454
this span right here with
the name inside of it.

75
00:04:45.454 --> 00:04:51.713
This has the Id p1-name, and
so it is the Id attribute.

76
00:04:51.713 --> 00:04:57.743
And this is a kind of a special one,
that we're looking for in this element.

77
00:04:57.743 --> 00:05:02.372
Now, when we use query selector,
we said we're using CSS selectors or

78
00:05:02.372 --> 00:05:07.092
the type of selectors we'd use in CSS
to pull out elements from the page.

79
00:05:07.092 --> 00:05:10.428
And the query selector p1-name like,
JavaScript didn't complain,

80
00:05:10.428 --> 00:05:11.638
it didn't give an error.

81
00:05:11.638 --> 00:05:14.201
This is a valid thing I could pass in.

82
00:05:14.201 --> 00:05:19.814
&gt;&gt; But it's not going to return anything
because query selector p1-name is,

83
00:05:19.814 --> 00:05:24.992
as Paul pointed out, looking for
an element that looks like this, like

84
00:05:24.992 --> 00:05:31.233
has some kind of tag name, p1 minus name,
which even that minus is like unexpected.

85
00:05:31.233 --> 00:05:33.587
That's not really what we're looking for.

86
00:05:33.587 --> 00:05:38.572
We could for example try,
sorry the type of this element to

87
00:05:38.572 --> 00:05:43.965
the tag name itself would be span but
we said that query selector

88
00:05:43.965 --> 00:05:48.666
singular returned to the first
element that matches.

89
00:05:48.666 --> 00:05:53.396
So in this case that's going to give
us the p1 symbol span because it occurs

90
00:05:53.396 --> 00:05:55.059
earlier in the document.

91
00:05:55.059 --> 00:05:57.767
And so that's going to pick out
that x which is not exactly

92
00:05:57.767 --> 00:05:58.476
what we want
&gt;&gt; So

93
00:05:58.476 --> 00:06:01.901
instead what we what we can use
in this case because there's

94
00:06:01.901 --> 00:06:05.198
an Id on the element that we
want on this particular span.

95
00:06:05.198 --> 00:06:11.766
We can kind of jump straight to
that element using the Id selector,

96
00:06:11.766 --> 00:06:16.924
which happens to be, in CSS,
it happens to be hash,

97
00:06:16.924 --> 00:06:22.587
and then the text of the Id or
though the content of the Id.

98
00:06:22.587 --> 00:06:25.108
So in this case #Id value,
and then in CSS,

99
00:06:25.108 --> 00:06:29.213
we would be using it kind of like at
the beginning of some styling rules.

100
00:06:29.213 --> 00:06:33.949
In JavaScript with query selector we can
use it to pick out the same element that

101
00:06:33.949 --> 00:06:36.123
CSS would pick out in a style sheet.

102
00:06:36.123 --> 00:06:40.969
So in this case,
that's why these have different values.

103
00:06:40.969 --> 00:06:45.730
So now, okay, so once we've got our
query selector p1- name, then in order

104
00:06:45.730 --> 00:06:50.659
to change the text, Oj you wanna walk me
through the rest of your solution there?

105
00:06:50.659 --> 00:06:56.848
&gt;&gt; QuerySelector
#p1-name.textcontent equals Jayson.

106
00:06:56.848 --> 00:06:58.324
&gt;&gt; Text content equals,

107
00:06:58.324 --> 00:07:02.292
well I mean I guess in this case
it would be wherever you want.

108
00:07:02.292 --> 00:07:04.895
So we can make it Oj.

109
00:07:04.895 --> 00:07:12.297
And now the page has changed,
cool, awesome.

110
00:07:12.297 --> 00:07:17.424
All right, and we could do the same
thing for the other player.

111
00:07:17.424 --> 00:07:20.908
Just really quickly,
how would I change the player?

112
00:07:20.908 --> 00:07:24.142
Yeah, Paul,
&gt;&gt; this is an excellent use of

113
00:07:24.142 --> 00:07:25.270
the up arrow.

114
00:07:25.270 --> 00:07:28.778
&gt;&gt; Indeed it is, so
I'm going to press up arrow and

115
00:07:28.778 --> 00:07:33.967
fun fact even if I clear I can still
use my up arrow to go back in history.

116
00:07:33.967 --> 00:07:36.722
So in this case,
what should I change this to?

117
00:07:36.722 --> 00:07:39.144
&gt;&gt; Just change the p1 to p2.

118
00:07:39.144 --> 00:07:43.269
&gt;&gt; Okay, so we can make this p2-name and

119
00:07:43.269 --> 00:07:50.400
then the text content can be,
why don't we make it you, like this?

120
00:07:50.400 --> 00:07:52.390
&gt;&gt; Yep.

121
00:07:52.390 --> 00:07:58.611
&gt;&gt; Beautiful, so now we have
different players, excellent, okay.

122
00:07:58.611 --> 00:08:01.682
Now we all ready maybe got a little bit
of a preview about the symbols here.

123
00:08:01.682 --> 00:08:06.071
How did we approach number 2, swapping
the player symbols, the x and the o.

124
00:08:06.071 --> 00:08:10.163
So we know that the o will come first and
the x will come second,

125
00:08:10.163 --> 00:08:12.460
can anybody walk me through this?

126
00:08:14.914 --> 00:08:19.856
So first we have to pick out
the element containing each symbol.

127
00:08:19.856 --> 00:08:24.595
So let's try to go for the x first,
right, which we picked out before.

128
00:08:24.595 --> 00:08:29.777
If we remember we saw that it is inside
of another span, which has an Id on it.

129
00:08:29.777 --> 00:08:31.477
So that's handy.

130
00:08:31.477 --> 00:08:36.742
So we can pick this out by
using the IDP one symbol.

131
00:08:36.742 --> 00:08:39.358
So can anybody just for variety sake,

132
00:08:39.358 --> 00:08:44.273
walk me through another option I
have other than using querySelector?

133
00:08:44.273 --> 00:08:45.878
Anybody remember, yeah.

134
00:08:45.878 --> 00:08:49.114
&gt;&gt; In chat they're using
document.getElementById.

135
00:08:49.114 --> 00:08:56.093
&gt;&gt; Excellent, so getElementById, and then
the Id for the x, let's say is p1 symbol.

136
00:08:56.093 --> 00:08:59.314
And now I can all ready see my browser
is being so helpful in the dev tools.

137
00:08:59.314 --> 00:09:04.303
It's all ready showing me,
highlighting what element it's showing

138
00:09:04.303 --> 00:09:08.373
span hash p1 symbol meaning
the span with Id p1 symbol.

139
00:09:08.373 --> 00:09:11.933
And so how do I now change this to an o?

140
00:09:11.933 --> 00:09:16.594
Maybe the, the chat, had all ready
solved this in the messages there.

141
00:09:16.594 --> 00:09:22.315
So we do document dot get element
by Id quotes, p1 symbol, and then?

142
00:09:22.315 --> 00:09:23.243
&gt;&gt; Text content.

143
00:09:23.243 --> 00:09:27.308
&gt;&gt; Text content,
I'm just tapping to auto complete.

144
00:09:27.308 --> 00:09:34.448
And then space,
we want to change this, right?

145
00:09:34.448 --> 00:09:37.648
So the spell that we used to do
that was like the equal sign and

146
00:09:37.648 --> 00:09:39.840
then whatever we want the content to be.

147
00:09:39.840 --> 00:09:44.451
In this case, we wanna swap it to
the other symbol letter O capital.

148
00:09:44.451 --> 00:09:46.158
So now we have two player O's.

149
00:09:46.158 --> 00:09:48.129
Once I run this we have player o player.

150
00:09:48.129 --> 00:09:49.316
That's not helpful.

151
00:09:49.316 --> 00:09:53.810
Let's swap the other one,
which again, we can use our little

152
00:09:53.810 --> 00:09:58.575
shortcut up arrow to do the like
find the last command we entered.

153
00:09:58.575 --> 00:10:01.279
I'm just gonna go ahead and

154
00:10:01.279 --> 00:10:07.570
change this to p2 symbol to
pick out the second line.

155
00:10:07.570 --> 00:10:11.907
&gt;&gt; And then this one similarly
we'll replace the o with an X and

156
00:10:11.907 --> 00:10:14.351
now they're in the other order.

157
00:10:14.351 --> 00:10:18.586
&gt;&gt; Is there any like fancy like reverse
functions that you could do like

158
00:10:18.586 --> 00:10:21.347
dynamically reassign them in an order now.

159
00:10:21.347 --> 00:10:25.142
&gt;&gt; is there a fancy function we could do,
the answer is always yes.

160
00:10:25.142 --> 00:10:26.442
There's always something we could do.

161
00:10:26.442 --> 00:10:30.609
We could write our own function, let's
say that has some kind of representation

162
00:10:30.609 --> 00:10:32.825
of the two symbols and then reverses them.

163
00:10:32.825 --> 00:10:35.594
&gt;&gt; Sure we can do,
once we figure out JavaScript,

164
00:10:35.594 --> 00:10:38.307
we can make it do pretty
much anything we want.

165
00:10:38.307 --> 00:10:41.384
Not always there's an asterisk on that,
but pretty much anything we want.

166
00:10:41.384 --> 00:10:45.989
But in this case, we're just trying
to these spills kind of these these

167
00:10:45.989 --> 00:10:50.673
different ways of interacting with
the DOM really like under our belts so

168
00:10:50.673 --> 00:10:54.927
that we feel confident working
with the page and messing with it.

169
00:10:54.927 --> 00:11:00.105
So that's why we're just kinda focusing
on these get Element by Id and

170
00:11:00.105 --> 00:11:04.158
querySelector and text content and
things like that.

171
00:11:04.158 --> 00:11:09.240
Okay, the last thing we wanted to do
was change the subtitle of the page.

172
00:11:09.240 --> 00:11:14.115
Right now the subtitle the page
says a game you know, and

173
00:11:14.115 --> 00:11:17.656
we wanted to say a game you know and love.

174
00:11:17.656 --> 00:11:20.391
So there's a couple of
different ways I could do this.

175
00:11:20.391 --> 00:11:25.820
What options do I have and
can anybody think of a way to do this

176
00:11:25.820 --> 00:11:31.046
using a spell that we haven't used yet
in this exercise?

177
00:11:31.046 --> 00:11:36.316
As we saw briefly earlier,
where we add on to

178
00:11:36.316 --> 00:11:42.448
existing text content, or
in other words append.

179
00:11:43.913 --> 00:11:46.118
To text content.

180
00:11:46.118 --> 00:11:49.701
Did anyone use append in their
solution to this exercise?

181
00:11:49.701 --> 00:11:53.229
I'm seeing some nodding,
sounds like maybe in the chat,

182
00:11:53.229 --> 00:11:57.536
there were some uses of append
&gt;&gt; Yeah, there's three, different,

183
00:11:57.536 --> 00:11:59.496
ways that people are adding.

184
00:11:59.496 --> 00:12:02.263
&gt;&gt; Great, okay, so, let's see,
what have we got here?

185
00:12:02.263 --> 00:12:06.262
Some examples, some options, and
again, there's lots of options.

186
00:12:06.262 --> 00:12:13.988
&gt;&gt; So, one person's using
querySelector the header space h2,

187
00:12:13.988 --> 00:12:20.123
and then append in quotes,
space and space love.

188
00:12:20.123 --> 00:12:20.767
&gt;&gt; Okay, so

189
00:12:20.767 --> 00:12:26.013
we can use querySelector as we said to
pick out elements using CSS selectors.

190
00:12:26.013 --> 00:12:31.417
And so
in this case if we want to pick out the h2

191
00:12:31.417 --> 00:12:35.969
element that is inside of the header,

192
00:12:35.969 --> 00:12:39.397
we can use header space h2.

193
00:12:39.397 --> 00:12:41.748
This basically is sort of like
getting more and more specific.

194
00:12:41.748 --> 00:12:45.559
It's saying in the header element,
something that's an h2 element.

195
00:12:45.559 --> 00:12:48.544
And again,
I can read all about this in MDN.

196
00:12:48.544 --> 00:12:51.732
If I want to read up on different
selectors and how that syntax works, but

197
00:12:51.732 --> 00:12:53.455
this is a totally valid way to do it, and

198
00:12:53.455 --> 00:12:56.301
I like it because we're discovering
a new way to derail into it.

199
00:12:56.301 --> 00:13:01.426
And then then what do we have Mark sorry
&gt;&gt; Dot append

200
00:13:01.426 --> 00:13:06.234
in quotes
&gt;&gt; Dot append and then in quotes

201
00:13:06.234 --> 00:13:08.648
&gt;&gt; Space and spaced love.

202
00:13:08.648 --> 00:13:11.308
&gt;&gt; Space and space love.

203
00:13:11.308 --> 00:13:15.500
&gt;&gt; Look at that, we've done it.

204
00:13:15.500 --> 00:13:17.827
And now if we drill into our HTML,

205
00:13:17.827 --> 00:13:22.245
we'll see if we go into this h2
element we have again and love.

206
00:13:22.245 --> 00:13:28.207
So additional text has been appended into
the content of this element, question.

207
00:13:28.207 --> 00:13:32.868
&gt;&gt; Is this probably beyond the scope of
what you want to talk about right now, but

208
00:13:32.868 --> 00:13:36.021
I did the append, but
I misspelled what I appended,

209
00:13:36.021 --> 00:13:40.560
is there any way to immediately roll
back the previous command [CROSSTALK]?

210
00:13:40.560 --> 00:13:43.417
&gt;&gt; Interesting,
is there a quick way to basically no,

211
00:13:43.417 --> 00:13:47.590
I didn't want to say a game you know and
love because I actually hate tic tac toe.

212
00:13:47.590 --> 00:13:51.231
I want to say a game you know and hate.

213
00:13:51.231 --> 00:13:55.287
Is there a quick way to edit that?

214
00:13:55.287 --> 00:14:00.631
I'm not familiar with a undo here.

215
00:14:00.631 --> 00:14:02.871
Ctrl + Z isn't gonna work unfortunately.

216
00:14:02.871 --> 00:14:07.930
But what we can do, we do know how
to completely replace the text.

217
00:14:07.930 --> 00:14:12.831
So what that's maybe a great question, how
do I completely replace this subtitle and

218
00:14:12.831 --> 00:14:14.950
change it to again you know and hate.

219
00:14:14.950 --> 00:14:19.149
Just to add a little negativity
into our classroom why

220
00:14:19.149 --> 00:14:22.236
wouldn't we want that, any guesses?

221
00:14:22.236 --> 00:14:23.836
&gt;&gt; Yeah I had to do that, so

222
00:14:23.836 --> 00:14:28.973
you just instead of doing .append you
use the same old text content equals.

223
00:14:28.973 --> 00:14:35.909
&gt;&gt; Right, so now we can just say I totally
messed up I wanna change this entirely or

224
00:14:35.909 --> 00:14:40.021
maybe I wanna put it back
to what it was before.

225
00:14:40.021 --> 00:14:46.476
Or maybe I just wanna temperate a little
bit I only like it don't love it.

226
00:14:46.476 --> 00:14:50.383
[LAUGH] Yeah this is how
we gonna have to do that,

227
00:14:50.383 --> 00:14:55.708
there's not a kind of a quick
reverse operation kind of thing.

228
00:14:55.708 --> 00:15:01.250
These changes that we've made to the page,
so now, for example, the title is my page.

229
00:15:01.250 --> 00:15:02.950
The player, O, comes first.

230
00:15:02.950 --> 00:15:06.681
The subtitle is different, the names
are different, all of this stuff.

231
00:15:09.049 --> 00:15:14.575
These changes they take place,
they're things that I have

232
00:15:14.575 --> 00:15:20.775
carried out inside of this browser
tab in the JavaScript console.

233
00:15:20.775 --> 00:15:27.625
So what do you think is gonna happen
when let's say I refresh this page,

234
00:15:27.625 --> 00:15:32.191
am I gonna get the new
content that we have here or

235
00:15:32.191 --> 00:15:39.063
the old content that it had originally
if I refresh, guesses, sorry.

236
00:15:39.063 --> 00:15:41.548
&gt;&gt; Old content
&gt;&gt; Old content is the guess.

237
00:15:41.548 --> 00:15:48.992
Let us check indeed It has all gone away,
all of my work lost.

238
00:15:48.992 --> 00:15:52.642
It's very sad because
all of these changes,

239
00:15:52.642 --> 00:15:57.735
these are happening inside of
this particular document object

240
00:15:57.735 --> 00:16:03.325
that I have here in my page and
that changes every time I load the page.

241
00:16:03.325 --> 00:16:06.143
So these changes are not
what we would call.

242
00:16:06.143 --> 00:16:11.513
Persistent because if I reload the page,
it's going to be different.

243
00:16:11.513 --> 00:16:14.733
If somebody else loads the same
page from the same URL,

244
00:16:14.733 --> 00:16:17.396
they're going to see something different.

245
00:16:17.396 --> 00:16:21.508
If I let's say I change

246
00:16:21.508 --> 00:16:27.573
the document title to New title.

247
00:16:27.573 --> 00:16:31.324
If I now even go into a separate tab, and

248
00:16:31.324 --> 00:16:36.896
load the exact same URL,
will notice it has the old title,

249
00:16:36.896 --> 00:16:41.360
even in a just a different tab,
same browser.

250
00:16:41.360 --> 00:16:45.461
That's because each time
the browser loads the page,

251
00:16:45.461 --> 00:16:49.215
it creates a new model of
what Is in this document.

252
00:16:49.215 --> 00:16:54.127
And that is going to be generated from
whatever the source code of that page is

253
00:16:54.127 --> 00:16:57.370
that it finds when it goes to the URL for
this page.

254
00:16:57.370 --> 00:17:00.230
We're gonna look at
editing a file itself so

255
00:17:00.230 --> 00:17:04.250
that we can make sure that these
changes that we're making and

256
00:17:04.250 --> 00:17:09.045
the things that we're doing are not
just happening like in this ephemeral

257
00:17:09.045 --> 00:17:14.025
state of the one time that we loaded this
page in our browser and this one tab.

258
00:17:14.025 --> 00:17:18.637
So that we can actually create a page that
we can later maybe host on our website.

259
00:17:18.637 --> 00:17:22.016
so everybody gets to see our
beautiful JavaScript work.

260
00:17:22.016 --> 00:17:25.488
Or something that we can reload,
in our own browser and

261
00:17:25.488 --> 00:17:28.443
see the things that we
wanted to be different.

262
00:17:28.443 --> 00:17:33.017
So that is a great point that Paul
had made earlier in the break and

263
00:17:33.017 --> 00:17:35.482
just wanted to raise with you all.

