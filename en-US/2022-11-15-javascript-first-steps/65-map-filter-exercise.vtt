WEBVTT

1
00:00:00.709 --> 00:00:06.340
And so what we can do, just to test
our knowledge, is we can use map and

2
00:00:06.340 --> 00:00:11.215
filter to make a couple of new
arrays out of our Spice Girls.

3
00:00:11.215 --> 00:00:12.498
So let's try this together.

4
00:00:15.214 --> 00:00:20.057
How could we create a new array called
names that only has the name of

5
00:00:20.057 --> 00:00:21.365
each Spice Girl?

6
00:00:21.365 --> 00:00:25.030
So here, each object has two properties,
the name and the nickname.

7
00:00:25.030 --> 00:00:29.822
What I want now is an array called names,

8
00:00:31.686 --> 00:00:38.429
That's going to be just Emma,
Jerry, etc., yeah?

9
00:00:38.429 --> 00:00:43.243
How could I do that with my map function,
for example?

10
00:00:45.267 --> 00:00:46.289
Anybody wanna walk me through it?

11
00:00:51.057 --> 00:00:52.034
Paul?

12
00:00:52.034 --> 00:00:55.907
&gt;&gt; Sure, so it'd be spices.map.

13
00:00:55.907 --> 00:00:59.713
&gt;&gt; Okay, so we're gonna map over every
element in the Spice Girls array,

14
00:00:59.713 --> 00:01:01.818
every object in the spice girls array.

15
00:01:01.818 --> 00:01:04.560
&gt;&gt; Then the s, and then the fat arrow.

16
00:01:04.560 --> 00:01:08.747
&gt;&gt; Yeah, and the s is just an arbitrary
name, so I could say spice, for example.

17
00:01:08.747 --> 00:01:10.416
Yep, fat arrow.

18
00:01:10.416 --> 00:01:13.912
&gt;&gt; Then it'd be just spice.name.

19
00:01:13.912 --> 00:01:15.779
&gt;&gt; If I spell it right,
[LAUGH] it would be.

20
00:01:15.779 --> 00:01:16.862
Okay, let's try it out.

21
00:01:16.862 --> 00:01:18.920
Names now is, exactly,

22
00:01:18.920 --> 00:01:24.997
it is just the value of the spice.name
property on the original objects.

23
00:01:24.997 --> 00:01:28.408
And is our spices array gonna
be different than it was before?

24
00:01:30.451 --> 00:01:33.094
No, let's double check.

25
00:01:33.094 --> 00:01:37.644
Spices still has objects in it, so
map does not mutate the array and

26
00:01:37.644 --> 00:01:39.197
neither does filter.

27
00:01:41.003 --> 00:01:42.634
Okay, let's do one more.

28
00:01:42.634 --> 00:01:48.315
Let's try to make a new
array that's called endInY

29
00:01:48.315 --> 00:01:53.346
with just the girls whose
nicknames end in y.

30
00:01:53.346 --> 00:01:55.858
Okay, so similarly to earlier,
we wanted just the males.

31
00:01:55.858 --> 00:01:59.657
Now we want just the girls
whose nicknames end in y, so

32
00:01:59.657 --> 00:02:02.537
we want just Baby, Scary, and Sporty.

33
00:02:02.537 --> 00:02:08.598
But we want the objects for those girls,
but we want only those three of them.

34
00:02:08.598 --> 00:02:10.087
So who'd like to walk me through this one?

35
00:02:16.909 --> 00:02:23.730
So if we want only certain items from this
array, do we need map or filter here?

36
00:02:23.730 --> 00:02:26.494
Filter, exactly.

37
00:02:26.494 --> 00:02:31.974
Great, do you wanna help
me take a stab at it?

38
00:02:31.974 --> 00:02:36.538
&gt;&gt; Yeah, let, okay,
&gt;&gt; Sure yes, we can do let.

39
00:02:36.538 --> 00:02:37.546
&gt;&gt; No, no, no, it's fine.

40
00:02:37.546 --> 00:02:40.649
&gt;&gt; [LAUGH] Okay.

41
00:02:40.649 --> 00:02:43.207
&gt;&gt; = spices.filter.

42
00:02:43.207 --> 00:02:43.892
&gt;&gt; Yep.

43
00:02:43.892 --> 00:02:47.560
&gt;&gt; Parentheses s
&gt;&gt; Arrow?

44
00:02:47.560 --> 00:02:53.105
&gt;&gt; Arrow s.name.ends with?

45
00:02:53.105 --> 00:02:56.285
&gt;&gt; So
it would be nice if we had an ends with,

46
00:02:56.285 --> 00:03:01.246
like we do have starts with in things,
but unfortunately, for

47
00:03:01.246 --> 00:03:04.913
whatever reason we don't
have the opposite.

48
00:03:04.913 --> 00:03:11.626
But how could we get the the last
character in their name?

49
00:03:11.626 --> 00:03:13.889
&gt;&gt; .pop?

50
00:03:13.889 --> 00:03:17.555
&gt;&gt; We could use pop,
if we were working with arrays, but

51
00:03:17.555 --> 00:03:22.292
strings are immutable, right, so
we can't pop things off of them.

52
00:03:22.292 --> 00:03:27.910
So since we're working with strings here-
&gt;&gt; Contains, is there a contains method?

53
00:03:27.910 --> 00:03:29.966
&gt;&gt; We could do, so
there's includes, right?

54
00:03:29.966 --> 00:03:33.855
We had used that for our Mel,
we have includes, but

55
00:03:33.855 --> 00:03:38.379
in that case if we did includes y,
in this case, it probably

56
00:03:38.379 --> 00:03:41.935
might be the same but we could have a-
&gt;&gt; We're looking

57
00:03:41.935 --> 00:03:44.441
for-
&gt;&gt; Yes, Queen Spice, and if the y was at

58
00:03:44.441 --> 00:03:49.131
the beginning of the name, [LAUGH]
that wouldn't work, yeah, suggestion?

59
00:03:49.131 --> 00:03:51.629
&gt;&gt; In chat they're saying endsWith.

60
00:03:51.629 --> 00:03:56.649
&gt;&gt; Yeah, so endsWith, I mean, do we have
a method, endsWith hat I don't know about?

61
00:03:56.649 --> 00:03:59.165
Let's look,
let's see if there's an endsWith.

62
00:03:59.165 --> 00:04:01.541
We do, my gosh, okay, great.

63
00:04:01.541 --> 00:04:03.408
All right, excuse me.

64
00:04:03.408 --> 00:04:05.412
Earlier I said that we didn't have that,
and

65
00:04:05.412 --> 00:04:07.958
I was totally wrong because I
didn't go to MDN and check.

66
00:04:07.958 --> 00:04:12.919
Which is just a pedagogical device I
use to illustrate how you should always

67
00:04:12.919 --> 00:04:14.269
go to MDN and check.

68
00:04:14.269 --> 00:04:17.647
Totally, totally, totally, okay,
all right, we do have endsWith.

69
00:04:17.647 --> 00:04:20.147
Sorry, please continue with
your endsWith solution.

70
00:04:20.147 --> 00:04:21.307
&gt;&gt; It ends with y.

71
00:04:21.307 --> 00:04:24.440
[LAUGH]
&gt;&gt; Ends with y, all right.

72
00:04:24.440 --> 00:04:31.256
[SOUND] All righty, so
now let's check endInY.

73
00:04:31.256 --> 00:04:35.564
Well, something went wrong here,
let's find out what.

74
00:04:35.564 --> 00:04:41.752
Because I said, [LAUGH] what did
I look at was ending in y here?

75
00:04:41.752 --> 00:04:44.758
&gt;&gt; Nickname, you want nickname and-
&gt;&gt; I was looking at names and

76
00:04:44.758 --> 00:04:46.154
we wanted nicknames, and

77
00:04:46.154 --> 00:04:50.672
that's probably on me cuz I probably typed
the wrong thing, so let's try it again.

78
00:04:50.672 --> 00:04:55.276
Good thing I made this a let accidentally,
cuz now we can reassign it.

79
00:04:55.276 --> 00:04:56.911
Let me try again.

80
00:04:56.911 --> 00:04:59.949
This one's a challenge for
me for some reason, all right.

81
00:04:59.949 --> 00:05:04.644
s.nickname this time,
that's what I think what you

82
00:05:04.644 --> 00:05:09.248
had said earlier, endsWith("y").

83
00:05:09.248 --> 00:05:14.187
Now, [LAUGH] endInY actually has those

84
00:05:14.187 --> 00:05:18.358
three Spice Girls, question?

85
00:05:18.358 --> 00:05:21.604
&gt;&gt; So how were you gonna do it
if you didn't have the endsWith?

86
00:05:21.604 --> 00:05:24.893
&gt;&gt; Great question,
a complicated way that is less fun.

87
00:05:24.893 --> 00:05:31.110
So another way that we could get the last
thing, so if I have a I don't know,

88
00:05:31.110 --> 00:05:36.640
stringy here, with indices,
we can get the first character out,

89
00:05:36.640 --> 00:05:41.909
right, or we could get,
I don't know, the third character.

90
00:05:44.669 --> 00:05:49.598
We can also ask for
the length of a string,

91
00:05:53.839 --> 00:05:57.374
Which is going to return, basically,

92
00:05:57.374 --> 00:06:01.665
one more than the index
of the final character.

93
00:06:05.621 --> 00:06:08.975
So what I can do is combine
this knowledge, and

94
00:06:08.975 --> 00:06:13.361
in my square brackets,
I can actually pass in something that

95
00:06:13.361 --> 00:06:16.982
evaluates to a number
instead of a number itself.

96
00:06:16.982 --> 00:06:20.138
So I could do string, well, in this case,

97
00:06:20.138 --> 00:06:24.437
it's a little annoying cuz I
have to type the thing again,

98
00:06:24.437 --> 00:06:29.112
"stringy".length-1, and
that would get the value out.

99
00:06:29.112 --> 00:06:35.768
So what I could do is complicatedY
[LAUGH] is spices.filter, oops,

100
00:06:35.768 --> 00:06:41.390
well I guess I could name it x but
that'd be less helpful.

101
00:06:41.390 --> 00:06:43.498
s, what was it, nickname.

102
00:06:48.643 --> 00:06:57.235
S.nickname.length-1="y", which
is terrible and

103
00:06:57.235 --> 00:07:02.398
not fun, but does get the job done.

104
00:07:02.398 --> 00:07:04.706
I'm glad y'all had a way
better solution for

105
00:07:04.706 --> 00:07:08.119
this than tired old me who didn't
finish her coffee this morning.

106
00:07:08.119 --> 00:07:11.080
So thanks for teaching me JavaScript,
appreciate it.

