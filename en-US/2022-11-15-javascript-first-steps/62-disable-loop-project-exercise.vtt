WEBVTT

1
00:00:00.000 --> 00:00:04.035
Now we wanna move on to the next TODO,
which is essentially in our quiz.

2
00:00:04.035 --> 00:00:08.672
If we look at our finished quiz, what we
want is that after somebody has clicked

3
00:00:08.672 --> 00:00:11.342
the button which is what
this is showing now,

4
00:00:11.342 --> 00:00:16.358
not only does the explanation show up but
also I can't click these buttons anymore.

5
00:00:16.358 --> 00:00:21.751
Because what we saw earlier, disabled.

6
00:00:21.751 --> 00:00:25.364
So basically once I've made a choice
that is my choice that is final and

7
00:00:25.364 --> 00:00:28.381
I don't get it back until I
reload the page, for example.

8
00:00:28.381 --> 00:00:31.951
But what we want to happen is
that I'm gonna reload this.

9
00:00:31.951 --> 00:00:34.139
I'm making a guess,
I don't know which one it is.

10
00:00:34.139 --> 00:00:37.792
Once I make my guess,
I click the button and then that's it.

11
00:00:37.792 --> 00:00:40.557
That's the last time I can
click any of these buttons.

12
00:00:40.557 --> 00:00:46.764
Okay, so we're gonna disable all of
the buttons whenever I click one of them.

13
00:00:46.764 --> 00:00:49.348
So this is our next TODO seven.

14
00:00:49.348 --> 00:00:51.225
We're still within our
event handler function.

15
00:00:51.225 --> 00:00:57.787
This is what's gonna happen every time
we hear a click event on either button.

16
00:00:57.787 --> 00:01:00.104
We want to disable all of the buttons.

17
00:01:00.104 --> 00:01:02.740
In this case there's two.

18
00:01:02.740 --> 00:01:08.496
So we're gonna use
a another loop to do this.

19
00:01:08.496 --> 00:01:13.423
We're going to loop over the buttons
again, and disable all of them.

20
00:01:13.423 --> 00:01:18.740
Now earlier we had written
ourselves a handy little helper

21
00:01:18.740 --> 00:01:23.958
function to disable a button,
so we're gonna use that.

22
00:01:23.958 --> 00:01:27.801
Remember we have written this disable
function that's gonna set the disabled

23
00:01:27.801 --> 00:01:29.499
attribute on the button element.

24
00:01:29.499 --> 00:01:34.925
So we're gonna use our disabled
function in a loop to disable all

25
00:01:34.925 --> 00:01:40.365
of the option buttons anytime
either button is clicked, okay?

26
00:01:40.365 --> 00:01:42.161
Who would like to walk
me through this one?

27
00:01:44.060 --> 00:01:46.332
Jason you wanna take a stab at it?

28
00:01:46.332 --> 00:01:49.151
&gt;&gt; Sure, okay so
we're gonna disable the button.

29
00:01:49.151 --> 00:01:54.982
So we would do a four similar
to the other four loop we had.

30
00:01:54.982 --> 00:01:58.031
So four let button of option buttons.

31
00:01:58.031 --> 00:02:03.645
&gt;&gt; Okay, sure we can do again four let
button of option buttons because again,

32
00:02:03.645 --> 00:02:08.380
each time we do a four let of we're
creating kind of a new scope for

33
00:02:08.380 --> 00:02:09.625
that variable.

34
00:02:09.625 --> 00:02:14.973
But also we could name it something
differently just to make it easier for

35
00:02:14.973 --> 00:02:16.646
ourselves as coders.

36
00:02:16.646 --> 00:02:20.312
So maybe we could name it like,

37
00:02:20.312 --> 00:02:22.731
I don't know
&gt;&gt; Simple buttons.

38
00:02:22.731 --> 00:02:28.758
&gt;&gt; Yeah, unclickable button or something,
or we could call it something else.

39
00:02:28.758 --> 00:02:33.544
&gt;&gt; Just out of curiosity, what it makes
sense to disable it in the same four loop,

40
00:02:33.544 --> 00:02:35.430
so we have an event listener and

41
00:02:35.430 --> 00:02:39.002
that first four loop that's
checking to hear for a click.

42
00:02:39.002 --> 00:02:41.435
So once it's been clicked
can we disable and

43
00:02:41.435 --> 00:02:44.676
that would it make sense to
disable on that same four loop?

44
00:02:44.676 --> 00:02:49.371
&gt;&gt; We're gonna talk a little bit later
about when JavaScript is running this

45
00:02:49.371 --> 00:02:55.062
code, but essentially what we're doing is
we're talking about two different things.

46
00:02:55.062 --> 00:03:00.327
So this outer four loop
is going to run all of

47
00:03:00.327 --> 00:03:07.070
the code inside of it basically
when this script runs.

48
00:03:07.070 --> 00:03:11.856
And in this case the script is gonna run,
when the browser is reading through our

49
00:03:11.856 --> 00:03:14.428
HTML file it's going
to see that script and

50
00:03:14.428 --> 00:03:18.304
it's gonna start running it
immediately when we load the page.

51
00:03:18.304 --> 00:03:23.038
So what we wanna do is immediately when
JavaScript starts running on our script we

52
00:03:23.038 --> 00:03:24.370
want to do something.

53
00:03:24.370 --> 00:03:28.483
And in this case what we wanna
do is add those event listeners.

54
00:03:28.483 --> 00:03:34.310
If we put, like on this same level,
if we put disable button here,

55
00:03:34.310 --> 00:03:37.653
when would the buttons get disabled?

56
00:03:37.653 --> 00:03:38.793
&gt;&gt; Immediately.

57
00:03:38.793 --> 00:03:40.503
&gt;&gt; Immediately, when we load the page.

58
00:03:40.503 --> 00:03:43.648
So essentially I would never
be able to click them.

59
00:03:43.648 --> 00:03:44.159
&gt;&gt; Right.

60
00:03:44.159 --> 00:03:48.571
&gt;&gt; Instead what we want is for that
disabling to happen after somebody has

61
00:03:48.571 --> 00:03:52.773
clicked and so that's what this
event handler function is about.

62
00:03:52.773 --> 00:03:55.439
And this is why I have to
declare it as a function and

63
00:03:55.439 --> 00:03:59.632
give the add Event Listener method that
function because what I'm saying is,

64
00:03:59.632 --> 00:04:02.257
Hey, JavaScript,
here's some chunk of code.

65
00:04:02.257 --> 00:04:06.805
Here's some function body
that I want you to run

66
00:04:06.805 --> 00:04:11.705
after you hear a click event
on the button element.

67
00:04:11.705 --> 00:04:16.490
So the code inside of this function,
inside of these

68
00:04:16.490 --> 00:04:21.617
curly braces is gonna run
maybe if somebody clicks later

69
00:04:23.935 --> 00:04:29.453
Then the code in this Chunk
of have curly braces.

70
00:04:29.453 --> 00:04:33.776
So this the attaching of the event
listeners happens immediately when

71
00:04:33.776 --> 00:04:38.539
the page loads and the script runs whereas
the disabling we only want to happen

72
00:04:38.539 --> 00:04:40.382
after somebody has clicked.

73
00:04:40.382 --> 00:04:44.472
So we wanna put it in
the chunk of code that we're

74
00:04:44.472 --> 00:04:49.399
giving JavaScript to run when
it has heard a click event.

75
00:04:49.399 --> 00:04:51.879
Does that make sense?

76
00:04:51.879 --> 00:04:55.283
We're gonna talk a little bit
more about kinda time and

77
00:04:55.283 --> 00:04:57.283
JavaScript a little bit later.

78
00:04:57.283 --> 00:04:59.682
&gt;&gt; If you do disable button
instead of the four loop,

79
00:04:59.682 --> 00:05:02.323
would it just disable the one
button that was clicked?

80
00:05:02.323 --> 00:05:04.604
&gt;&gt; So now we're talking about scope,
right?

81
00:05:04.604 --> 00:05:05.776
So what is the value of button?

82
00:05:05.776 --> 00:05:07.323
This is a great example.

83
00:05:07.323 --> 00:05:12.517
So in here, Okay

84
00:05:12.517 --> 00:05:17.770
up here this button inside
of the four loop is,

85
00:05:19.476 --> 00:05:26.223
Going to be basically each button
on the page in turn, right?

86
00:05:26.223 --> 00:05:31.963
And here We

87
00:05:31.963 --> 00:05:37.661
are We are declaring
the same name variable.

88
00:05:37.661 --> 00:05:40.994
This is why I said it's sometimes
useful to use different names so

89
00:05:40.994 --> 00:05:42.821
that we don't confuse ourselves.

90
00:05:42.821 --> 00:05:47.762
But what we're doing is we're looping
over the buttons again later in

91
00:05:47.762 --> 00:05:50.702
the program after somebody has clicked.

92
00:05:50.702 --> 00:05:53.733
We're looping over them again,

93
00:05:53.733 --> 00:05:58.588
so, We only have two buttons on our page,

94
00:05:58.588 --> 00:06:02.442
we're talking about the same two buttons.

95
00:06:02.442 --> 00:06:07.342
But in terms of what JavaScript sees and
which button it knows about that's

96
00:06:07.342 --> 00:06:12.110
dependent on the scope that we're
talking in and when this code has run.

97
00:06:12.110 --> 00:06:17.052
So this inner four loop is only
gonna run in the call to our

98
00:06:17.052 --> 00:06:21.576
event handler function that
JavaScript is going to

99
00:06:21.576 --> 00:06:26.114
call once somebody has
clicked one of the buttons.

100
00:06:26.114 --> 00:06:29.611
&gt;&gt; I just tried, it only it only
disabled one button at a time.

101
00:06:29.611 --> 00:06:33.709
Whichever one you pressed,
the other button was not disabled.

102
00:06:33.709 --> 00:06:38.135
&gt;&gt; So that's the thing, so if we're

103
00:06:38.135 --> 00:06:43.121
using button here, disable button,
&gt;&gt; It

104
00:06:43.121 --> 00:06:44.969
will just disable the one that you clicked
&gt;&gt; But

105
00:06:44.969 --> 00:06:48.645
now JavaScript is looking in
it's a little scope window.

106
00:06:48.645 --> 00:06:51.221
It's saying like okay, where's my button?

107
00:06:51.221 --> 00:06:56.959
And it's finding, okay in this four loop I
am currently running one of the buttons.

108
00:06:56.959 --> 00:07:00.125
I'm currently talking
about the first button and

109
00:07:00.125 --> 00:07:04.568
I'm attaching an event listener to
that button, which now is going to

110
00:07:04.568 --> 00:07:09.487
remember the button that I was talking
about when I wrote this event handler.

111
00:07:09.487 --> 00:07:12.429
So this is actually getting at a really
cool thing in JavaScript that we're not

112
00:07:12.429 --> 00:07:13.331
really gonna get into.

113
00:07:13.331 --> 00:07:17.992
But I get into for example in my
functional programming for steps course,

114
00:07:17.992 --> 00:07:22.292
which is this is a closure essentially
over the value of the button.

115
00:07:22.292 --> 00:07:27.194
Meaning that JavaScript, even though it's
going to run this function later after

116
00:07:27.194 --> 00:07:28.815
my four loop has finished.

117
00:07:28.815 --> 00:07:32.084
Like after the page has loaded,
the four loop is done running,

118
00:07:32.084 --> 00:07:34.376
somebody clicks a button, this code runs.

119
00:07:34.376 --> 00:07:39.362
It still remembers the value
of button at the time

120
00:07:39.362 --> 00:07:42.893
that it was defined in my program.

121
00:07:42.893 --> 00:07:47.073
So it's a big concept in JavaScript that
you can get into as you continue your

122
00:07:47.073 --> 00:07:47.670
journey.

123
00:07:47.670 --> 00:07:52.714
But suffice it to say, this is a nice
example of how JavaScript can kind

124
00:07:52.714 --> 00:07:57.928
of remember the value of the variable
at the time when you wrote the code,

125
00:07:57.928 --> 00:08:02.567
because of the way that it looks for
variables in certain scope.

126
00:08:02.567 --> 00:08:03.539
All right, great.

127
00:08:03.539 --> 00:08:08.255
So what we need to do
then is move this oops,

128
00:08:08.255 --> 00:08:13.495
move this disable line
down into our second four

129
00:08:13.495 --> 00:08:18.997
a loop in order to disable
each button in the second

130
00:08:18.997 --> 00:08:23.994
option buttons loop that I'm running here.

131
00:08:23.994 --> 00:08:25.771
All right, so let's see.

132
00:08:25.771 --> 00:08:30.197
&gt;&gt; So did you want to change
that name of the button?

133
00:08:30.197 --> 00:08:34.221
&gt;&gt; Yeah, so
we can change this to some other names so

134
00:08:34.221 --> 00:08:38.639
that we don't confuse
ourselves like I don't know,

135
00:08:38.639 --> 00:08:43.661
I could call it other button or
something like that, right?

136
00:08:43.661 --> 00:08:48.660
But in fact the fact that we had used the
same name revealed this cool thing about

137
00:08:48.660 --> 00:08:51.030
the scope that we're working with.

138
00:08:51.030 --> 00:08:56.999
We have function scope and
the block scope and play here.

139
00:08:56.999 --> 00:09:01.689
But yeah, sure we can name it something
else to make it clear to ourselves, so

140
00:09:01.689 --> 00:09:06.402
that we humans don't get confused about
which one JavaScript is looking at.

141
00:09:06.402 --> 00:09:10.892
So keep in mind that sometimes
you're writing code not just for

142
00:09:10.892 --> 00:09:16.746
JavaScript to read but for yourself or for
your teammates or whoever else to read.

143
00:09:16.746 --> 00:09:18.524
Okay, let's try this out.

144
00:09:18.524 --> 00:09:22.337
I'm gonna save and go back.

145
00:09:22.337 --> 00:09:24.187
Reload my local file and

146
00:09:24.187 --> 00:09:28.913
now we expect that when I click
both things are gonna happen.

147
00:09:28.913 --> 00:09:32.861
The text are gonna show up and
all of the buttons are gonna gray out.

148
00:09:34.506 --> 00:09:36.153
My gosh it worked.

149
00:09:36.153 --> 00:09:40.408
I can't click them anymore,
they are disabled.

150
00:09:40.408 --> 00:09:41.308
Great job y'all.

