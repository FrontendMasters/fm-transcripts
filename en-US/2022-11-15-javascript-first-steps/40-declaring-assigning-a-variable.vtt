WEBVTT

1
00:00:00.097 --> 00:00:04.814
TODO 2, we're gonna declare and
assign a variable called fact that's

2
00:00:04.814 --> 00:00:09.761
going to be an object that represents
a statement, an answer that's true or

3
00:00:09.761 --> 00:00:11.714
false, and an explanation.

4
00:00:15.637 --> 00:00:20.446
The one that I had in here
looked something like

5
00:00:20.446 --> 00:00:25.639
a statement of 1 plus 1
equals equals equals 2.

6
00:00:25.639 --> 00:00:30.427
The answer of true, I can't remember
which version we're looking at if

7
00:00:30.427 --> 00:00:32.477
it's the text or the numbers.

8
00:00:32.477 --> 00:00:39.517
And then the explanation of what the plus
operator does to strings, I think it was.

9
00:00:39.517 --> 00:00:43.288
So, hopefully you all chose
totally different facts.

10
00:00:43.288 --> 00:00:49.013
Can somebody walk me through what
they did for their statement object?

11
00:00:49.013 --> 00:00:56.042
So let's start with, we're gonna assign
a variable and again, this statement now.

12
00:00:56.042 --> 00:00:59.170
In this case,
the statement is just gonna be, sorry,

13
00:00:59.170 --> 00:01:03.661
the fact is just gonna be one fact for
this page, so we're not gonna change it.

14
00:01:03.661 --> 00:01:07.408
It's just gonna be this page,
your page always has one fact.

15
00:01:07.408 --> 00:01:11.862
In my page's case, it was always the fact

16
00:01:11.862 --> 00:01:16.204
string 1 + string 1 === string 2.

17
00:01:16.204 --> 00:01:20.037
And so, if we look at my solution,

18
00:01:20.037 --> 00:01:24.549
hopefully, no spoilers, let's see.

19
00:01:24.549 --> 00:01:30.379
We saw that what I did, scrolling down,

20
00:01:30.379 --> 00:01:34.161
was something like this.

21
00:01:34.161 --> 00:01:38.422
Ignore that, something like this, okay?

22
00:01:38.422 --> 00:01:42.832
So a fact, I have statement,
and so an explanation.

23
00:01:42.832 --> 00:01:45.476
Now, let's look at what you all did.

24
00:01:45.476 --> 00:01:48.096
So who can walk me through their solution?

25
00:01:48.096 --> 00:01:49.251
OJ, did you wanna share?

26
00:01:49.251 --> 00:01:53.469
&gt;&gt; Sure I did, I tried to do const fact
equals and then I do the squiggly lines.

27
00:01:53.469 --> 00:01:56.437
&gt;&gt; Curly braces, yep
&gt;&gt; Squiggly braces statement, colon,

28
00:01:56.437 --> 00:01:57.902
&gt;&gt; Statement, colon.

29
00:01:57.902 --> 00:01:59.657
&gt;&gt; Arrays are just like objects.

30
00:01:59.657 --> 00:02:02.516
&gt;&gt; Arrays are just like objects,
love it, okay?

31
00:02:02.516 --> 00:02:08.695
&gt;&gt; Comma, answers, colon,
an array, yes, no.

32
00:02:08.695 --> 00:02:09.817
&gt;&gt; Interesting, okay.

33
00:02:09.817 --> 00:02:14.361
So in this case, what we want,
we're gonna have two options here.

34
00:02:14.361 --> 00:02:17.304
In fact, where in this case, we're not
gonna change the options from true false.

35
00:02:17.304 --> 00:02:20.835
So we're just gonna keep all of our
questions like true/false questions.

36
00:02:20.835 --> 00:02:24.092
And we already have buttons
set up to say true and false.

37
00:02:24.092 --> 00:02:26.528
So could we edit those to say yes or
no instead?

38
00:02:26.528 --> 00:02:27.922
Absolutely, we could.

39
00:02:27.922 --> 00:02:31.448
In this case,
what we wanna do is represent, for

40
00:02:31.448 --> 00:02:35.233
this particular fact,
what is the correct answer?

41
00:02:35.233 --> 00:02:40.601
So in this case we probably
just want answer singular,

42
00:02:40.601 --> 00:02:46.666
and in this case it could be false,
or I mean depends what you,

43
00:02:46.666 --> 00:02:50.646
this is a philosophical question here.

44
00:02:50.646 --> 00:02:54.403
Let's say, maybe we move this
arrays are just objects,

45
00:02:54.403 --> 00:02:57.076
we'll maybe make it a little trickier.

46
00:02:57.076 --> 00:03:01.955
But arrays are like objects in that
they actually are objects with

47
00:03:01.955 --> 00:03:07.021
some special properties,
then our answer would probably be true.

48
00:03:07.021 --> 00:03:13.654
Okay, so now the value of your answer
here, you could have had two options.

49
00:03:13.654 --> 00:03:19.960
You could have had the boolean value
true or false as a boolean value.

50
00:03:19.960 --> 00:03:27.795
Or you could also have a string value
of the word true or the word false.

51
00:03:27.795 --> 00:03:29.778
Both are valid.

52
00:03:29.778 --> 00:03:34.688
Later, we're gonna have to deal
with the fact that we may have had

53
00:03:34.688 --> 00:03:38.638
a choice of whether to put
a boolean here or a string.

54
00:03:38.638 --> 00:03:42.436
And so, both are valid,
we're gonna have to be conscious

55
00:03:42.436 --> 00:03:47.178
of the fact that answer is a boolean here,
if we used the boolean, yeah?

56
00:03:47.178 --> 00:03:51.709
&gt;&gt; And then explanation,
colon, changed my mind.

57
00:03:51.709 --> 00:03:56.494
&gt;&gt; [LAUGH] Okay, so in this case,
changed my mind could be, it's your page,

58
00:03:56.494 --> 00:03:58.516
you can put whatever you want.

59
00:03:58.516 --> 00:04:03.290
But maybe we could say something
like to explain in a little bit more

60
00:04:03.290 --> 00:04:05.515
detail why the answer is true.

61
00:04:05.515 --> 00:04:11.415
So we could say like arrays are a kind
of object or something like that.

62
00:04:11.415 --> 00:04:15.856
Or arrays are type object or
whatever it is, right?

63
00:04:15.856 --> 00:04:21.553
So depending on what your fact is, you get
to decide what this explanation is, yeah?

64
00:04:27.443 --> 00:04:33.813
Okay, so I'm just gonna say arrays are
kind of object with special properties.

65
00:04:33.813 --> 00:04:37.441
And are we done?

66
00:04:37.441 --> 00:04:38.722
Yes, question.

67
00:04:38.722 --> 00:04:42.946
&gt;&gt; Okay, so
when you showed us the one that you did,

68
00:04:42.946 --> 00:04:47.079
all of the IDs,
the keys there, were in quote.

69
00:04:47.079 --> 00:04:50.541
&gt;&gt; Quotes,
that is a very astute observation.

70
00:04:50.541 --> 00:04:53.581
So, when we're looking at the coding here,
and

71
00:04:53.581 --> 00:04:57.303
it's really difficult to read
inside the inspector here.

72
00:04:57.303 --> 00:05:00.927
Which is why we appreciate
syntax highlighting and IDEs and

73
00:05:00.927 --> 00:05:03.328
how they space everything out nicely.

74
00:05:03.328 --> 00:05:08.575
But you may have noticed that there were

75
00:05:08.575 --> 00:05:13.982
some quotes around the property names.

76
00:05:13.982 --> 00:05:20.442
And in fact, let's go back to our new tab.

77
00:05:22.615 --> 00:05:25.727
In JavaScript, we can do,

78
00:05:29.709 --> 00:05:34.813
myProperty, some kind of value.

79
00:05:34.813 --> 00:05:41.511
We could also do, Strings

80
00:05:41.511 --> 00:05:46.987
that have a little bit more going on here,

81
00:05:46.987 --> 00:05:50.430
like my longer property,

82
00:05:50.430 --> 00:05:56.072
that has spaces in it and
then other value.

83
00:05:56.072 --> 00:06:01.951
And if we look at now at the object o2,
we'll notice that its property key here or

84
00:06:01.951 --> 00:06:06.547
the kind of the name of that
property is now wrapped in strings.

85
00:06:06.547 --> 00:06:08.902
String quotes, double quotes, [LAUGH].

86
00:06:08.902 --> 00:06:13.663
Because what we said before is that
when JavaScript is making these objects,

87
00:06:13.663 --> 00:06:18.058
it's creating these arrows as it were,
these pointers, to values and

88
00:06:18.058 --> 00:06:19.689
it's giving them a name.

89
00:06:19.689 --> 00:06:24.159
And actually, it's kind of
expecting strings for those names.

90
00:06:24.159 --> 00:06:29.036
So what we're usually doing is working
with property names that are just all

91
00:06:29.036 --> 00:06:33.911
one word, no spaces, no symbols,
no other stuff that wouldn't usually go

92
00:06:33.911 --> 00:06:37.742
in a variable name,
this is the convention in JavaScript.

93
00:06:37.742 --> 00:06:41.352
But actually,
we can use whatever string we want.

94
00:06:41.352 --> 00:06:45.296
So if we do you want spaces or
fancy characters or

95
00:06:45.296 --> 00:06:49.742
things like that in our property names,
we can do it.

96
00:06:49.742 --> 00:06:53.922
Now the problem is we can't then,

97
00:06:53.922 --> 00:06:59.266
I can do o.myProperty and
get my value out.

98
00:06:59.266 --> 00:07:02.983
Or as we saw before, we can do o,
the string name of the property,

99
00:07:02.983 --> 00:07:07.322
which is a little hint that actually
JavaScript is seeing these as strings.

100
00:07:07.322 --> 00:07:09.759
And those both give us the same thing.

101
00:07:09.759 --> 00:07:13.517
But with o2,
if we were to do my longer property,

102
00:07:13.517 --> 00:07:19.426
we can already tell from the highlighting
that something is going wrong here.

103
00:07:19.426 --> 00:07:21.943
And JavaScript is like,
what are you saying?

104
00:07:21.943 --> 00:07:24.003
I don't understand what this is,

105
00:07:24.003 --> 00:07:27.563
because that space means
something when I do a dot, right?

106
00:07:27.563 --> 00:07:30.306
Because we're expecting
something else there.

107
00:07:30.306 --> 00:07:35.039
However, I can still use
the brackets notation to

108
00:07:35.039 --> 00:07:39.896
say my longer property and
still get out the value.

109
00:07:39.896 --> 00:07:44.873
So, great question and revealed a little
hidden trick that properties can do.

110
00:07:44.873 --> 00:07:49.044
And so, I think what's happening here is
in the browser, how it's displaying it,

111
00:07:49.044 --> 00:07:52.690
it's just kind of indicating the
stringiness of those property names for

112
00:07:52.690 --> 00:07:56.135
us, even though those quotes don't
exist in my actual source code.

113
00:07:58.502 --> 00:07:59.218
Good eye.

114
00:08:00.247 --> 00:08:04.368
And I just put a semicolon at the end of
this declaration because even though it's

115
00:08:04.368 --> 00:08:07.276
split up on multiple lines,
as we often do with objects,

116
00:08:07.276 --> 00:08:09.658
we've just told JavaScript
to do something.

117
00:08:09.658 --> 00:08:14.721
JavaScript, create a variable fact and
assign it to this object, full stop.

118
00:08:14.721 --> 00:08:17.067
And so, we're using
the semicolon to indicate that.

