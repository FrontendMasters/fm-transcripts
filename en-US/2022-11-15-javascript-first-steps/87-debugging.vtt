WEBVTT

1
00:00:00.000 --> 00:00:04.677
Okay, so
another thing that we're gonna run into in

2
00:00:04.677 --> 00:00:07.880
the real world are bugs in our code.

3
00:00:07.880 --> 00:00:11.315
I hate to break it to you, but
no matter how good you get at JavaScript,

4
00:00:11.315 --> 00:00:15.043
you're never gonna be a perfect software
developer because that thing does

5
00:00:15.043 --> 00:00:15.641
not exist.

6
00:00:15.641 --> 00:00:19.655
And so we all have bugs in our
code from time to time, or

7
00:00:19.655 --> 00:00:24.767
you could say, like share in clueless
we are like totally bugging.

8
00:00:24.767 --> 00:00:26.329
Question is what do we do about it?

9
00:00:26.329 --> 00:00:29.300
So how can we be bugging?

10
00:00:29.300 --> 00:00:32.500
Yeah, so
that's what we're gonna talk about now.

11
00:00:32.500 --> 00:00:37.800
Again, because the fact of life
a certainty of life especially in a loosey

12
00:00:37.800 --> 00:00:43.613
goosey kind of language like JavaScript
where you could get undefined anytime or

13
00:00:43.613 --> 00:00:48.827
it doesn't really care if you pass in
the wrong arguments to a function,

14
00:00:48.827 --> 00:00:50.642
stuff is gonna go wrong.

15
00:00:50.642 --> 00:00:55.336
Spectacular failure is part of the game
of being a JavaScript developer.

16
00:00:55.336 --> 00:01:00.347
So we just have to be able to roll with
the punches and try to figure out when

17
00:01:00.347 --> 00:01:05.379
we have something wrong in our code
try to figure out what is going wrong.

18
00:01:05.379 --> 00:01:12.017
So for example, one of the things that we
could do that I definitely use plenty and

19
00:01:12.017 --> 00:01:16.703
we could use to kind of check
our understanding of what's

20
00:01:16.703 --> 00:01:21.113
happening in our code is to
log things to the console.

21
00:01:21.113 --> 00:01:25.548
So this can be a useful way for
us to kind of assure ourselves of,

22
00:01:25.548 --> 00:01:31.325
let's say the fact that we're executing
the body of a function if we log something

23
00:01:31.325 --> 00:01:36.545
when we start running that function
body then we know that we got that far.

24
00:01:36.545 --> 00:01:41.526
And then we also have our console.warn and
console.error if we want to kind of

25
00:01:41.526 --> 00:01:45.524
make it pop out a little bit more
with those exclamation point,

26
00:01:45.524 --> 00:01:47.498
warning signs in the browser.

27
00:01:47.498 --> 00:01:52.766
And so we can do things like let's
say log values, logs certain things

28
00:01:52.766 --> 00:01:58.035
within our code just to make sure to
kind to check our understanding and

29
00:01:58.035 --> 00:02:02.888
to make sure that things are giving
us the values that we expect.

30
00:02:02.888 --> 00:02:07.050
Sort of how in the console like as we've
been working iteratively on our different

31
00:02:07.050 --> 00:02:11.571
functionality, we've been just checking
things like, is an empty array truthy or

32
00:02:11.571 --> 00:02:12.076
falsey?

33
00:02:12.076 --> 00:02:16.705
Or did we get the right poodle standard
string that we wanted out of this

34
00:02:16.705 --> 00:02:18.285
particular function?

35
00:02:18.285 --> 00:02:19.203
That sort of thing.

36
00:02:19.203 --> 00:02:23.171
So console log is a totally valid
debugging technique that you can use,

37
00:02:23.171 --> 00:02:27.604
but sometimes you don't want your program
really cluttered up with all kinds of

38
00:02:27.604 --> 00:02:29.075
console log statements.

39
00:02:29.075 --> 00:02:32.272
So often this will be a temporary thing
that as a developer you're working

40
00:02:32.272 --> 00:02:35.367
through, you're developing locally,
you're testing things out,

41
00:02:35.367 --> 00:02:36.982
you're maybe logging some things.

42
00:02:36.982 --> 00:02:39.376
You probably wanna remember
to take them out at the end.

43
00:02:39.376 --> 00:02:43.443
And so sometimes that can mean that things
get forgotten, things get left in there,

44
00:02:43.443 --> 00:02:45.750
you end up with a whole
bunch of console output.

45
00:02:45.750 --> 00:02:48.763
And sometimes if you're loading
a web page out there, and

46
00:02:48.763 --> 00:02:52.514
now that we're all using our developer
tools and inspecting the page and

47
00:02:52.514 --> 00:02:55.959
looking at the console you might
see stuff that's logging out from

48
00:02:55.959 --> 00:03:00.353
somebody else's code because they were
just checking values and things like that.

49
00:03:00.353 --> 00:03:03.510
So that is one thing we
can do to be debugging.

