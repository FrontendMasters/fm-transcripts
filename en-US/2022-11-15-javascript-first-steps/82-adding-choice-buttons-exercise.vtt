WEBVTT

1
00:00:00.000 --> 00:00:03.734
What we need to do now is we have
two more TODOs to work through.

2
00:00:03.734 --> 00:00:09.083
And they're gonna require us to
put all of our tools to use.

3
00:00:09.083 --> 00:00:12.119
We are going to scroll down and

4
00:00:12.119 --> 00:00:16.741
take a look at what's
happening in our file.

5
00:00:16.741 --> 00:00:19.615
So, so far,
we've implemented some helper functions.

6
00:00:19.615 --> 00:00:24.291
So far, we haven't actually done
anything in our script here,

7
00:00:24.291 --> 00:00:27.505
we've just declared a bunch of functions.

8
00:00:27.505 --> 00:00:28.482
If you'll notice,

9
00:00:28.482 --> 00:00:32.330
what we've got here is a style of writing
code that has a lot more functions going

10
00:00:32.330 --> 00:00:36.021
on that before where we had a lot of just
like lines of code one after another.

11
00:00:36.021 --> 00:00:39.194
And this is starting to get at what
we mentioned at the beginning.

12
00:00:39.194 --> 00:00:42.194
That writing code in a functional style,

13
00:00:42.194 --> 00:00:46.309
where you're trying to do
everything with functions and

14
00:00:46.309 --> 00:00:51.281
you're trying to make those functions
as independent from values in

15
00:00:51.281 --> 00:00:56.274
the rest of the program that might
be changing over time as possible.

16
00:00:56.274 --> 00:00:57.781
This is a little bit
what we're getting at.

17
00:00:57.781 --> 00:01:00.775
And as I said, there's other courses you
can take including one that I have on

18
00:01:00.775 --> 00:01:03.280
functional programming first
steps that talk more about that.

19
00:01:03.280 --> 00:01:07.007
But what we're starting to get at is
something that looks a little bit

20
00:01:07.007 --> 00:01:11.388
more similar to the type of code you often
see written in JavaScript frameworks.

21
00:01:11.388 --> 00:01:13.683
Like for example react.

22
00:01:13.683 --> 00:01:18.547
And so if we start scrolling down now
from our fetch message, we'll see that

23
00:01:18.547 --> 00:01:23.190
we have some functions that are already
done for us like render buttons.

24
00:01:23.190 --> 00:01:27.069
Now this render keyword shows or
word pops up a lot.

25
00:01:27.069 --> 00:01:31.788
And in web development, especially in
JavaScript development, we're often what

26
00:01:31.788 --> 00:01:36.113
we wanna do, is we wanna compute a bunch
of stuff, bunch of data that we need.

27
00:01:36.113 --> 00:01:40.275
And then we want to render or
display it on the screen,

28
00:01:40.275 --> 00:01:45.654
in the webpage, in the browser in
many cases, for the viewer to see.

29
00:01:45.654 --> 00:01:51.227
And we tend to unlike in our quiz
example where we were kind of computing

30
00:01:51.227 --> 00:01:56.989
the data we need and rendering it to
the text of elements at the same time,

31
00:01:56.989 --> 00:02:02.575
Here in this new program,
we're splitting up that work a little bit.

32
00:02:02.575 --> 00:02:06.052
So we're doing the data fetching and

33
00:02:06.052 --> 00:02:11.212
the transformations on that
data like turning a string

34
00:02:11.212 --> 00:02:16.159
into some other string or
getting a list of choices.

35
00:02:16.159 --> 00:02:21.520
We're doing that work in one part of our
program, and then we're displaying that,

36
00:02:21.520 --> 00:02:25.913
or actually putting it up in the page and
another part of our program.

37
00:02:25.913 --> 00:02:28.535
So this is just some
high context around like,

38
00:02:28.535 --> 00:02:33.110
we're starting to move towards more of
the vibe that you get when you're writing

39
00:02:33.110 --> 00:02:37.102
JavaScript with a framework like React,
where these are separated.

40
00:02:37.102 --> 00:02:41.862
So what we've got here is a render
buttons function that adds the multiple

41
00:02:41.862 --> 00:02:43.719
choice buttons to the page.

42
00:02:43.719 --> 00:02:49.351
We noticed, In our starter,

43
00:02:49.351 --> 00:02:53.010
there's nothing here,
there's no buttons, we need some.

44
00:02:53.010 --> 00:02:56.442
In the finished one,
we had buttons and we have a picture.

45
00:02:56.442 --> 00:02:58.851
So we need to add all that stuff.

46
00:03:01.951 --> 00:03:05.215
And so what we've got here, and this is
just because we already know how to do

47
00:03:05.215 --> 00:03:07.008
this, we're not gonna walk through it.

48
00:03:07.008 --> 00:03:09.164
We were rendering some buttons.

49
00:03:09.164 --> 00:03:14.114
We're creating a button handler function
that's doing something very similar to

50
00:03:14.114 --> 00:03:18.074
what we were doing before with
the correct and incorrect classes,

51
00:03:18.074 --> 00:03:20.780
based on a comparison
to the correct answer.

52
00:03:20.780 --> 00:03:26.561
And it's also just adding one incorrect
button and one correct button,

53
00:03:26.561 --> 00:03:31.487
if we need to show that the correct
answer was somewhere else,

54
00:03:31.487 --> 00:03:34.349
but you know how all that works now.

55
00:03:34.349 --> 00:03:40.798
And we've got now a container
in our document, Somewhere,

56
00:03:40.798 --> 00:03:46.015
a div that's got id="options", which is
where our button elements are gonna go.

57
00:03:46.015 --> 00:03:48.051
But unlike in our previous example,

58
00:03:48.051 --> 00:03:51.214
we don't actually have any
button elements on the page.

59
00:03:51.214 --> 00:03:52.940
What gives?

60
00:03:52.940 --> 00:03:56.988
Well, as with JavaScript,
we can do whatever we want to the DOM.

61
00:03:56.988 --> 00:04:00.617
We can even create entirely new
elements that didn't exist before.

62
00:04:00.617 --> 00:04:02.381
So that's what we're gonna do.

63
00:04:02.381 --> 00:04:10.746
We're going to create, we're gonna take
each of the choices in our choices array.

64
00:04:10.746 --> 00:04:15.715
Which is gonna be an argument
to this render buttons function.

65
00:04:15.715 --> 00:04:18.381
Because that's some data that
we've already computed, and

66
00:04:18.381 --> 00:04:20.800
we're gonna pass it in to
our render buttons function.

67
00:04:20.800 --> 00:04:23.054
And we also know what
the correct answer is.

68
00:04:23.054 --> 00:04:26.919
And that's how we're figuring out
what to do with our button handler.

69
00:04:26.919 --> 00:04:30.852
So what we're gonna do is we're gonna
loop over our choices in our choice array

70
00:04:30.852 --> 00:04:31.397
somehow.

71
00:04:31.397 --> 00:04:36.622
And then create for each element,
a button element whose name,

72
00:04:36.622 --> 00:04:42.429
and value, and text content properties
are all like poodle standard,

73
00:04:42.429 --> 00:04:46.819
or beagle, or
whatever the thing is for that choice.

74
00:04:46.819 --> 00:04:50.052
And then we're gonna attach
a click event listener.

75
00:04:50.052 --> 00:04:55.672
And finally, we're gonna actually
insert my element into the page.

76
00:04:55.672 --> 00:04:57.733
So in order to do this,

77
00:04:57.733 --> 00:05:03.813
we're gonna need a way to actually
create a new element in the DOM.

78
00:05:03.813 --> 00:05:09.924
And perhaps shockingly,
that is called createElement.

79
00:05:09.924 --> 00:05:14.971
So we can call Document.createElement
button to create a new button element,

80
00:05:14.971 --> 00:05:17.242
and then mess with its properties.

