WEBVTT

1
00:00:00.310 --> 00:00:04.560
So, what we've got here
is an HTML document.

2
00:00:04.560 --> 00:00:11.610
This very beautiful, exciting modern
web page is an HTML document.

3
00:00:11.610 --> 00:00:16.810
And if you wanna see the HTML, we can go
back to the inspector, which is what we

4
00:00:16.810 --> 00:00:22.340
opened first when we clicked Inspect, and
we can see some stuff in this document.

5
00:00:24.070 --> 00:00:27.334
And what we're seeing is an HTML document,
and

6
00:00:27.334 --> 00:00:32.231
what JavaScript is seeing when it
looks at that document is represented

7
00:00:32.231 --> 00:00:37.000
by something called the DOM,
the Document Object Model.

8
00:00:37.000 --> 00:00:41.230
So let's talk about what a document
looks like and what it has in it.

9
00:00:41.230 --> 00:00:42.720
So this is kind of a simple document.

10
00:00:42.720 --> 00:00:46.023
This is similar to the structure you'd
see if you look in the inspector for

11
00:00:46.023 --> 00:00:47.260
this Tic-Tac-Toe page.

12
00:00:48.570 --> 00:00:52.878
So, let us try just to
recap kind of HTML and

13
00:00:52.878 --> 00:00:57.906
understand our own mental
model of how this page,

14
00:00:57.906 --> 00:01:00.680
how this document looks.

15
00:01:00.680 --> 00:01:04.996
Let's try to draw this as
a tree of HTML elements.

16
00:01:04.996 --> 00:01:09.027
So what I'm gonna ask you all to
do is help me draw out a diagram

17
00:01:09.027 --> 00:01:13.440
representing the structure
of this HTML document.

18
00:01:13.440 --> 00:01:19.290
So, what is the top-level
element in this page?

19
00:01:19.290 --> 00:01:20.529
Shout it out, anybody.

20
00:01:20.529 --> 00:01:21.790
&gt;&gt; HTML.

21
00:01:21.790 --> 00:01:25.876
&gt;&gt; Yeah, so the HTML here is the element
that we're working with, and

22
00:01:25.876 --> 00:01:29.140
then lang is an attribute on that element.

23
00:01:29.140 --> 00:01:33.201
So this is maybe just like kind of HTML

24
00:01:33.201 --> 00:01:38.190
structure [LAUGH] here
at the top of this page.

25
00:01:38.190 --> 00:01:42.486
And when I say top, I mean kind of
the highest level element there is on this

26
00:01:42.486 --> 00:01:47.870
page, we have an HTML element with some
attributes on it, including the language.

27
00:01:47.870 --> 00:01:49.540
Great, excellent.

28
00:01:49.540 --> 00:01:55.350
Okay, what is contained, or
we could say children of that element?

29
00:01:55.350 --> 00:01:55.870
Yes?

30
00:01:55.870 --> 00:01:58.600
&gt;&gt; They're asking what about the doctype?

31
00:01:58.600 --> 00:01:59.460
&gt;&gt; What about the doctype?

32
00:01:59.460 --> 00:02:00.640
That is a great question.

33
00:02:00.640 --> 00:02:04.013
So the doctype kind of
defines the document.

34
00:02:04.013 --> 00:02:09.072
And we could say,
technically, that there is

35
00:02:09.072 --> 00:02:16.340
kind of a document that sort of
sits above the HTML element.

36
00:02:16.340 --> 00:02:20.536
But since we're working with HTML
documents, and the doc type declares, hey,

37
00:02:20.536 --> 00:02:24.794
this is an HTML document, we're usually
going to kind of not think about that sort

38
00:02:24.794 --> 00:02:27.774
of meta level of that this is
all contained in a document.

39
00:02:27.774 --> 00:02:31.110
Except that is going to be how
we refer to it in JavaScript.

40
00:02:31.110 --> 00:02:36.995
So the HTML and the document kind of
mentally we can sort of merge together.

41
00:02:36.995 --> 00:02:42.032
But essentially, yes, there is a document,
which then has an HTML element

42
00:02:42.032 --> 00:02:46.849
that contains the content of the page,
and that is a really great point.

43
00:02:46.849 --> 00:02:50.000
So what then else do we have in this page,

44
00:02:50.000 --> 00:02:53.540
what is contained within
this HTML element?

45
00:02:55.860 --> 00:02:57.032
What elements do we have there?

46
00:02:57.032 --> 00:03:00.090
Yeah?
&gt;&gt; The heads and the body.

47
00:03:00.090 --> 00:03:02.910
&gt;&gt; Yes, okay, great.
So we could say we sometimes call

48
00:03:02.910 --> 00:03:06.130
these children of the HTML elements.

49
00:03:06.130 --> 00:03:11.280
So we have a head and a body.

50
00:03:11.280 --> 00:03:15.451
Okay, and then so you'll see there are
some dot, dot, dots here that just sort of

51
00:03:15.451 --> 00:03:19.572
indicate that there's other stuff
contained within, for example, the head.

52
00:03:19.572 --> 00:03:20.343
But what about the body?

53
00:03:20.343 --> 00:03:22.075
Let's dig into that a little bit more.

54
00:03:22.075 --> 00:03:26.990
What children elements do we see
on the body element in this page?

55
00:03:26.990 --> 00:03:27.903
&gt;&gt; Header.

56
00:03:27.903 --> 00:03:31.041
&gt;&gt; Excellent, header, so
we have a header, child, and

57
00:03:31.041 --> 00:03:33.780
this is where every page
is gonna be different.

58
00:03:33.780 --> 00:03:37.735
Maybe you have a header, maybe you don't,
maybe you have other elements there.

59
00:03:37.735 --> 00:03:38.660
And similarly,

60
00:03:38.660 --> 00:03:43.493
that might have some other things going on
inside of it, we have some dot, dot, dots.

61
00:03:43.493 --> 00:03:46.636
And then, what else do we have,
in this case?

62
00:03:49.437 --> 00:03:50.070
&gt;&gt; Div.

63
00:03:50.070 --> 00:03:53.742
&gt;&gt; A div, yes.

64
00:03:53.742 --> 00:03:55.637
What is a div often used for in HTML?

65
00:03:58.069 --> 00:04:03.030
&gt;&gt; Divides things, controls sections.

66
00:04:03.030 --> 00:04:05.870
&gt;&gt; It divides things into, yeah,
so I might not say section

67
00:04:05.870 --> 00:04:09.022
just because there is also a section
element that we might use.

68
00:04:09.022 --> 00:04:13.408
But div is kind of a general purpose
maybe grouping element, we could say,

69
00:04:13.408 --> 00:04:15.855
that collects a bunch of other elements.

70
00:04:15.855 --> 00:04:21.015
So we usually don't just see a div,
we usually see a div with stuff in it.

71
00:04:21.015 --> 00:04:22.975
Yeah, comment from the chat.

72
00:04:22.975 --> 00:04:29.990
&gt;&gt; They're saying a div is a container or
a box.

73
00:04:29.990 --> 00:04:34.338
Brian Holt and his intro to web dev
calls it just kind of like an empty box,

74
00:04:34.338 --> 00:04:36.779
like a cardboard box or something else.

75
00:04:38.030 --> 00:04:40.800
&gt;&gt; Exactly, yeah, yeah.

76
00:04:40.800 --> 00:04:42.841
So a container is a great
way to think of a div.

77
00:04:42.841 --> 00:04:46.774
It's kind of an element that collects
other elements inside of it,

78
00:04:46.774 --> 00:04:47.880
like a moving box.

79
00:04:47.880 --> 00:04:49.280
Yeah, great point.

80
00:04:49.280 --> 00:04:51.563
And so, this is not an HTML course,

81
00:04:51.563 --> 00:04:55.000
cuz there are other great
courses out there for this.

82
00:04:55.000 --> 00:04:59.407
So, we're not gonna be digging into too
much detail about all these different

83
00:04:59.407 --> 00:05:02.677
types of elements that you can
have in an HTML document, or

84
00:05:02.677 --> 00:05:07.515
otherwise said, as you pointed out before,
kind of the content of the page, right?

85
00:05:07.515 --> 00:05:10.845
There are a lot, a lot,
a lot that can be said about HTML.

86
00:05:10.845 --> 00:05:13.970
It's another infinite learning journey.

87
00:05:13.970 --> 00:05:18.905
But suffice it to say that we're mapping
out here the structure of the page

88
00:05:18.905 --> 00:05:24.314
because JavaScript, just like us, when
we read a document like this as humans,

89
00:05:24.314 --> 00:05:26.721
we kind of parse it out in our heads.

90
00:05:26.721 --> 00:05:30.782
We construct our mental image of how
this page is structured that maybe looks

91
00:05:30.782 --> 00:05:33.160
something like this tree.

92
00:05:33.160 --> 00:05:35.190
And JavaScript does that as well.

93
00:05:35.190 --> 00:05:39.968
And so, whatever we can work with an HTML,
JavaScript can also interface with,

94
00:05:39.968 --> 00:05:42.778
we could say or
sort of construct a model of, and

95
00:05:42.778 --> 00:05:45.730
that is what we call
the document object model.

96
00:05:45.730 --> 00:05:48.074
So essentially,
JavaScript creates an object,

97
00:05:48.074 --> 00:05:51.640
which we're gonna talk more about
exactly how objects work later.

98
00:05:51.640 --> 00:05:55.637
But JavaScript creates an entity
that represents this document and

99
00:05:55.637 --> 00:05:58.861
all of the structure inside of it,
all of the content,

100
00:05:58.861 --> 00:06:01.520
all of the other elements that it has.

101
00:06:01.520 --> 00:06:07.782
We will dig into the document that
JavaScript represents this page with.

102
00:06:07.782 --> 00:06:12.320
Let's just quickly go back to
our webpage and our console.

103
00:06:13.860 --> 00:06:19.060
And in our console, if I type the spell
document, it's a special word, that

104
00:06:19.060 --> 00:06:25.010
means the document that we are currently
in, that we're currently looking at.

105
00:06:25.010 --> 00:06:28.999
You'll notice I get some kind
of value with all kinds of

106
00:06:28.999 --> 00:06:33.520
stuff in it that represents
this document to JavaScript.

107
00:06:33.520 --> 00:06:38.009
So if you'd like, feel free to poke
around in this document object that you

108
00:06:38.009 --> 00:06:42.166
can invoke by typing the word
document into the JavaScript console.

109
00:06:42.166 --> 00:06:46.565
We'll talk more about how we can
work with this in JavaScript to

110
00:06:46.565 --> 00:06:48.560
interact with the web page.

