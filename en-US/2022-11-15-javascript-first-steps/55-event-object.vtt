WEBVTT

1
00:00:00.000 --> 00:00:06.443
So this is how we now can handle
click events that come at us.

2
00:00:06.443 --> 00:00:11.850
And we can do whatever we want
in these handler functions.

3
00:00:11.850 --> 00:00:13.275
So for example this is a very,

4
00:00:13.275 --> 00:00:16.014
very exciting web page I have
embedded here in my slides.

5
00:00:16.014 --> 00:00:17.413
It has a button.

6
00:00:17.413 --> 00:00:21.047
Now not a lot happens if I click
elsewhere on the page, but

7
00:00:21.047 --> 00:00:24.701
if I click on the button,
this text escapes the box.

8
00:00:24.701 --> 00:00:28.397
And then it goes back in, and
then it escapes, and then it goes back in.

9
00:00:28.397 --> 00:00:31.899
This is not a very exciting or
particularly useful example.

10
00:00:31.899 --> 00:00:35.127
But it just goes to show that we can
do whatever we want to the webpage.

11
00:00:35.127 --> 00:00:39.942
The handler function is
just a JavaScript function,

12
00:00:39.942 --> 00:00:43.048
it can do whatever we need it to do.

13
00:00:43.048 --> 00:00:46.380
We can we can modify parts of the page.

14
00:00:46.380 --> 00:00:49.050
So any guesses what this is,
what's going on here?

15
00:00:50.500 --> 00:00:51.392
We can take a look.

16
00:00:51.392 --> 00:00:55.313
So this is, I'm looking at a code pen
here, which is a nice little sandbox site,

17
00:00:55.313 --> 00:00:56.076
you could say.

18
00:00:56.076 --> 00:00:59.640
A little place where you can,
sort of like a playground.

19
00:00:59.640 --> 00:01:03.880
Codepen.io you can play with snippets
of HTML and CSS, and JavaScript.

20
00:01:03.880 --> 00:01:10.551
So right here, I've got some
basic elements in my page here.

21
00:01:10.551 --> 00:01:15.048
I have a box class div
that has some text in it.

22
00:01:15.048 --> 00:01:17.854
And then I have some text outside of it,

23
00:01:17.854 --> 00:01:21.350
which also has a class applied,
called hidden.

24
00:01:21.350 --> 00:01:25.734
So any guess what is happening
when in my handler function,

25
00:01:25.734 --> 00:01:27.847
that you haven't seen yet.

26
00:01:27.847 --> 00:01:30.636
You don't know what I wrote in this
handler function, but any guesses?

27
00:01:34.047 --> 00:01:38.764
&gt;&gt; An event listener with a click and
then instead of console log,

28
00:01:38.764 --> 00:01:42.157
it executes a different
function to do that.

29
00:01:42.157 --> 00:01:45.957
&gt;&gt; Yep, yep exactly, it's not console
logging, it's doing something else.

30
00:01:45.957 --> 00:01:49.988
And in this case what it's doing,

31
00:01:49.988 --> 00:01:54.446
I have a little hidden class In my CSS.

32
00:01:54.446 --> 00:01:55.711
And what it's doing,

33
00:01:55.711 --> 00:01:59.382
is it's changing which element
that hidden class is applied to.

34
00:01:59.382 --> 00:02:01.080
So let's take a look at the code.

35
00:02:01.080 --> 00:02:03.887
So here we've got a button that
I'm capturing with my document,

36
00:02:03.887 --> 00:02:04.890
get element by ID.

37
00:02:04.890 --> 00:02:07.050
We've seen that lots of times now.

38
00:02:07.050 --> 00:02:10.004
I'm capturing also some paragraphs
with my query selector all,

39
00:02:10.004 --> 00:02:11.590
to get all of the p elements.

40
00:02:11.590 --> 00:02:12.965
And I have a couple of them.

41
00:02:12.965 --> 00:02:15.894
And basically every time
this button is clicked,

42
00:02:15.894 --> 00:02:18.902
that's where I'm attaching
the event listener.

43
00:02:18.902 --> 00:02:22.793
Is on the button element, not on the whole
document like we saw a minute ago.

44
00:02:22.793 --> 00:02:25.053
I'm listening for that click event.

45
00:02:25.053 --> 00:02:30.036
And whenever that click event happens,
I'm calling this function,

46
00:02:30.036 --> 00:02:33.927
that is doing something we'll
see a little bit later.

47
00:02:33.927 --> 00:02:39.580
A for loop over all of the paragraphs and
toggling whether or not they are hidden.

48
00:02:39.580 --> 00:02:43.207
So if they have a class hidden, it's
taking away that class, and if they don't,

49
00:02:43.207 --> 00:02:44.380
it's adding that class.

50
00:02:44.380 --> 00:02:47.470
And what it effectively does,
is switch which one I can see.

51
00:02:49.050 --> 00:02:53.903
So this is just an example of
the arbitrary things we can

52
00:02:53.903 --> 00:02:56.548
do in our handler functions.

53
00:02:56.548 --> 00:03:00.188
Now, if you were looking really closely,
you might have noticed that there was

54
00:03:00.188 --> 00:03:03.191
a parameter in the arrow function
that I had in that last example.

55
00:03:03.191 --> 00:03:05.092
Unlike in the first example.

56
00:03:05.092 --> 00:03:09.551
And so there is an option,
you have the option,

57
00:03:09.551 --> 00:03:15.583
to get some more information about
what happened in this event.

58
00:03:15.583 --> 00:03:17.560
In this case the click event.

59
00:03:17.560 --> 00:03:20.652
JavaScript every time it
calls your handler function,

60
00:03:20.652 --> 00:03:25.780
which it's gonna do automatically
because you attach that event listener.

61
00:03:25.780 --> 00:03:29.430
So every time it calls
that handler function,

62
00:03:29.430 --> 00:03:32.690
it's gonna pass in an event object.

63
00:03:32.690 --> 00:03:36.490
And that event object has some
details about exactly what happened.

64
00:03:37.830 --> 00:03:42.839
So, remember how we said earlier
that JavaScript doesn't really care?

65
00:03:42.839 --> 00:03:46.438
It's pretty loosely goosey about
whether you pass in the right number

66
00:03:46.438 --> 00:03:47.545
of arguments or not.

67
00:03:47.545 --> 00:03:51.968
So it's gonna be passing in this event,
our argument, this event object,

68
00:03:51.968 --> 00:03:54.468
every time we call that handler function.

69
00:03:54.468 --> 00:03:56.675
We may or may not care about it.

70
00:03:56.675 --> 00:04:01.916
If we do care about it ,we can
sort of capture it by making

71
00:04:01.916 --> 00:04:06.722
that event or
often you'll see E as abbreviation.

72
00:04:06.722 --> 00:04:10.082
A parameter of our handler function, and

73
00:04:10.082 --> 00:04:16.000
then we can find out more about
what exactly happened on the page.

74
00:04:16.000 --> 00:04:17.980
So let's take a look at an example.

75
00:04:19.360 --> 00:04:22.192
So now I have,
I'm gonna add a new event listener.

76
00:04:22.192 --> 00:04:22.790
And here's the thing.

77
00:04:22.790 --> 00:04:29.010
You can have multiple listeners for
the same event on the same element.

78
00:04:29.010 --> 00:04:32.490
So in this case, I'm going to add
another listener to the document.

79
00:04:32.490 --> 00:04:34.202
That's also listening for click events.

80
00:04:34.202 --> 00:04:34.967
This time,

81
00:04:34.967 --> 00:04:39.878
we're going to take in that event that
JavaScript is going to try to give us.

82
00:04:39.878 --> 00:04:43.308
We're going to actually capture it this
time as a parameter to our handler

83
00:04:43.308 --> 00:04:43.871
function.

84
00:04:43.871 --> 00:04:46.780
And then we're going to log
the event object itself.

85
00:04:46.780 --> 00:04:48.160
So let's check it out.

86
00:04:48.160 --> 00:04:50.995
Let's see what happens now
if I click on the page.

87
00:04:50.995 --> 00:04:54.350
Aha, so
I still have my old console.log clicked.

88
00:04:54.350 --> 00:04:56.511
Because I that event
listener is still attached.

89
00:04:56.511 --> 00:05:02.853
But now I have a new one, where I'm seeing
this click object has some parameters.

90
00:05:02.853 --> 00:05:08.593
A target, and a client x, and a client y,

91
00:05:08.593 --> 00:05:13.193
and a whole bunch of other stuff.

92
00:05:13.193 --> 00:05:17.655
But essentially,
we're gonna be able to from this object,

93
00:05:17.655 --> 00:05:19.937
drill into the event details.

94
00:05:19.937 --> 00:05:22.009
And get out any relevant information.

95
00:05:22.009 --> 00:05:27.591
For example, maybe I want to know exactly
where on the page the person clicked.

96
00:05:27.591 --> 00:05:30.903
Or were in element,
that's that client x, client y,

97
00:05:30.903 --> 00:05:35.090
that's telling me the location of
their pointer when they clicked.

98
00:05:35.090 --> 00:05:40.980
And target is going to end up
being a super useful property.

99
00:05:40.980 --> 00:05:42.626
So let me click around a little bit.

100
00:05:42.626 --> 00:05:46.944
Take a look at the what the console
is saying about the target property

101
00:05:46.944 --> 00:05:47.995
on this object.

102
00:05:47.995 --> 00:05:51.090
And think about what do you what
do you think that target is?

103
00:05:53.880 --> 00:05:59.794
So, I'm clicking on the title here,
clicking on this div

104
00:05:59.794 --> 00:06:05.598
where we had put the statement that may or
may not be true.

105
00:06:05.598 --> 00:06:10.888
I'm clicking on, This,

106
00:06:10.888 --> 00:06:15.270
the explanation text here.

107
00:06:15.270 --> 00:06:18.770
So any guess what event target is?

108
00:06:20.470 --> 00:06:22.130
&gt;&gt; Where it was clicked?

109
00:06:22.130 --> 00:06:24.461
&gt;&gt; So where in what sense?

110
00:06:24.461 --> 00:06:26.810
Cuz for example, we saw that client X and

111
00:06:26.810 --> 00:06:29.310
client Y are kind of
where in the view port.

112
00:06:29.310 --> 00:06:30.850
Where in the window.

113
00:06:30.850 --> 00:06:33.504
So where In the sense of
&gt;&gt; What element?

114
00:06:33.504 --> 00:06:37.930
&gt;&gt; Which element, exactly,
which element was clicked here.

115
00:06:39.140 --> 00:06:40.580
Nice, exactly.

116
00:06:40.580 --> 00:06:48.168
So this is essentially the element where
whatever event we're listening for, fired.

117
00:06:48.168 --> 00:06:52.093
And so if we wanna just log that for
example or just look at that and

118
00:06:52.093 --> 00:06:55.157
we don't really care about
the rest of the event.

119
00:06:55.157 --> 00:06:57.409
That is also something handy.

120
00:06:57.409 --> 00:07:00.053
We're gonna see that come
up a little bit later.

121
00:07:00.053 --> 00:07:04.745
So this is where we can
see where in the DOM

122
00:07:04.745 --> 00:07:09.447
tree essentially this event happened.

123
00:07:09.447 --> 00:07:11.213
And that's gonna come in super useful.

124
00:07:13.373 --> 00:07:16.483
So click is the event that we've
been listening for so far.

125
00:07:16.483 --> 00:07:19.800
But it is by no means the only
event we can listen for.

126
00:07:19.800 --> 00:07:26.682
There are all kinds of other things
that the browser notices what people do.

127
00:07:26.682 --> 00:07:29.723
So for example, double click,
which for whatever reason,

128
00:07:29.723 --> 00:07:31.520
they didn't spell out the double.

129
00:07:31.520 --> 00:07:38.019
It's just the dblclick,
is the name of a double click event.

130
00:07:38.019 --> 00:07:40.931
There are also events that
don't even involve clicking.

131
00:07:40.931 --> 00:07:45.765
Any guess what mouseove and
mouseout kind of represent?

132
00:07:45.765 --> 00:07:52.050
If I mouse over an element and mouseout
of an element, any guess what that is?

133
00:07:52.050 --> 00:07:53.410
&gt;&gt; Where the cursor is on the screen?

134
00:07:53.410 --> 00:07:55.575
&gt;&gt; Yeah,
where the cursor is on the screen.

135
00:07:55.575 --> 00:07:59.815
So essentially when I mouse over and
then mouse out of an element,

136
00:07:59.815 --> 00:08:04.149
it's sort of like a hover,
sort of like hovering over an element.

137
00:08:04.149 --> 00:08:08.259
So if you've ever, you've seen on webpages
where something cool happens when you

138
00:08:08.259 --> 00:08:09.559
hover over a part of that.

139
00:08:09.559 --> 00:08:13.900
That might be powered by listening for
mouseover and mouseout of it.

140
00:08:13.900 --> 00:08:14.755
Yeah, question.

141
00:08:14.755 --> 00:08:16.870
&gt;&gt; Chat, someone said focus.

142
00:08:16.870 --> 00:08:19.147
&gt;&gt; Focus is another event, exactly.

143
00:08:19.147 --> 00:08:21.724
So for example, if you're clicking or

144
00:08:21.724 --> 00:08:27.201
maybe even tabbing through different
elements to highlight them, or focus them.

145
00:08:27.201 --> 00:08:31.029
Like when you tab through a bunch of
buttons and it shows a little outline,

146
00:08:31.029 --> 00:08:32.480
that sort of thing.

147
00:08:32.480 --> 00:08:37.474
So there are a ton of different
events that the browser knows about.

148
00:08:37.474 --> 00:08:41.458
And that we can then choose to listen for
and then handle.

149
00:08:41.458 --> 00:08:43.856
So guess where you can
read all about them?

150
00:08:43.856 --> 00:08:44.589
&gt;&gt; MDN.

151
00:08:44.589 --> 00:08:46.368
&gt;&gt; MDN, exactly.

152
00:08:46.368 --> 00:08:49.543
So we can [LAUGH] take a look at,

153
00:08:49.543 --> 00:08:54.625
if I go to my good friend MDN and
look for events.

154
00:08:54.625 --> 00:08:59.512
There is a whole bunch of information and
we can even see kind

155
00:08:59.512 --> 00:09:04.421
of all of these different things
that event objects can do.

156
00:09:04.421 --> 00:09:10.577
And we have some guides, also on MDN
about working with event listeners.

157
00:09:10.577 --> 00:09:15.701
And the data that they give us,
and all kinds of good stuff.

158
00:09:15.701 --> 00:09:20.220
So if you want a whole, whole bunch
of overwhelming list of events,

159
00:09:20.220 --> 00:09:23.008
you can search for this event reference.

160
00:09:23.008 --> 00:09:26.097
And find all these
different types of events.

161
00:09:26.097 --> 00:09:29.192
There's all kinds of things going on here.

162
00:09:29.192 --> 00:09:32.523
And this is just a categories of events,
we haven't even gotten to the list yet.

163
00:09:32.523 --> 00:09:35.119
Look how many things,
my god this page is so long.

164
00:09:36.130 --> 00:09:38.460
So long, so long, so long.

165
00:09:38.460 --> 00:09:41.740
So we're obviously not going to have
time to go through all of these.

166
00:09:41.740 --> 00:09:44.287
Essentially, we're going to be
most concerned about clicks for

167
00:09:44.287 --> 00:09:47.030
our page,because we want people to
be able to click on these buttons.

168
00:09:48.040 --> 00:09:48.630
Cool.

169
00:09:48.630 --> 00:09:50.022
Suffice it to say, though,

170
00:09:50.022 --> 00:09:53.560
you can handle all kinds of stuff with
the same event handler structure.

