WEBVTT

1
00:00:00.070 --> 00:00:03.977
Just to recap what we
have been working on,

2
00:00:03.977 --> 00:00:08.319
we've been working through
a quiz webpage that

3
00:00:08.319 --> 00:00:12.771
is going to ultimately be
a little bit of a test for

4
00:00:12.771 --> 00:00:19.160
someone to see their JavaScript knowledge,
put it to the test.

5
00:00:19.160 --> 00:00:23.518
We're gonna have some kind of statement,
a couple of options true or false answers.

6
00:00:23.518 --> 00:00:25.939
When someone clicks on one of the answers,

7
00:00:25.939 --> 00:00:30.660
we're going to show them whether they were
correct or incorrect with some colors.

8
00:00:30.660 --> 00:00:35.343
We're gonna show them what
the explanation behind this statement or

9
00:00:35.343 --> 00:00:38.390
this fact about JavaScript is.

10
00:00:38.390 --> 00:00:39.609
And so this is our end goal,

11
00:00:39.609 --> 00:00:43.090
we're working towards building
this interactive quiz game.

12
00:00:43.090 --> 00:00:47.729
And earlier, we had been working on
a version locally ourselves in our text

13
00:00:47.729 --> 00:00:50.169
editors and we've gotten pretty far.

14
00:00:50.169 --> 00:00:54.761
We've gotten to write several
functions that we're gonna need,

15
00:00:54.761 --> 00:01:00.094
we've gotten to manipulate the page
a little bit, insert our own fact in it.

16
00:01:00.094 --> 00:01:03.859
But we still need to do some work to
make this an interactive quiz and

17
00:01:03.859 --> 00:01:07.720
give the user that feedback
about what the real answer is.

18
00:01:07.720 --> 00:01:09.720
So that is what we're
gonna pick up with now.

19
00:01:11.330 --> 00:01:17.312
And in order to do that, we're gonna
have to talk about events in JavaScript,

20
00:01:17.312 --> 00:01:23.030
because events are how we can
make our webpages interactive.

21
00:01:23.030 --> 00:01:29.650
And right now, our page, it's kind of
like MC Hammer said, we can't touch it.

22
00:01:29.650 --> 00:01:33.617
Well, we can, we can try clicking on
buttons and things on our page, but

23
00:01:33.617 --> 00:01:36.190
nothing is really happening when we do.

24
00:01:36.190 --> 00:01:40.309
What we want is for the action that
I take when I click something,

25
00:01:40.309 --> 00:01:45.350
we want that to do stuff, we want that
to make things happen on our page.

26
00:01:45.350 --> 00:01:49.075
So what we want to do is we
want to handle any events,

27
00:01:49.075 --> 00:01:52.814
any interactive actions
that the user might take.

28
00:01:52.814 --> 00:01:56.649
Or any things that might be happening
here that we can then take them and

29
00:01:56.649 --> 00:01:58.865
run with to change our page as we see fit.

30
00:01:59.925 --> 00:02:02.124
So this is what we need to do.

31
00:02:02.124 --> 00:02:04.973
And the web browser is
really set up to do this.

32
00:02:04.973 --> 00:02:09.410
So again, keeping in mind that JavaScript
was created as a scripting language inside

33
00:02:09.410 --> 00:02:13.485
of the browser, JavaScript and
the browser, they kind of go hand in hand.

34
00:02:13.485 --> 00:02:18.435
And the way it works is that, when the
user does something like click a button,

35
00:02:18.435 --> 00:02:21.050
the web browser fires an event.

36
00:02:21.050 --> 00:02:24.452
So browsers have this concept of events,
there are all kinds of different events,

37
00:02:24.452 --> 00:02:26.590
but click is a really great example.

38
00:02:26.590 --> 00:02:30.082
So I click the button,
the browser fires or

39
00:02:30.082 --> 00:02:35.250
sends off an event that says,
hey, a click happened.

40
00:02:35.250 --> 00:02:39.700
And what we need to do in our
JavaScript is we need to handle it.

41
00:02:39.700 --> 00:02:44.182
So that is how we're going to be
able to react to things that happen,

42
00:02:44.182 --> 00:02:49.137
is we're going to listen for any events
that the browser might be firing and

43
00:02:49.137 --> 00:02:51.960
then we're going to handle them.

44
00:02:51.960 --> 00:02:56.250
And how we do that is what
we're gonna talk about now.

45
00:02:56.250 --> 00:03:00.976
So there is a method
on elements in our DOM

46
00:03:00.976 --> 00:03:05.175
that is called addEventListener.

47
00:03:05.175 --> 00:03:09.335
[COUGH] And what this does is it
let's say attach what's called

48
00:03:09.335 --> 00:03:13.990
an EventListener to a particular
event that the browser might fire.

49
00:03:13.990 --> 00:03:18.875
If that event had something to do with
whatever element we are interested in

50
00:03:18.875 --> 00:03:22.376
listening for changes to or
listening for events on.

51
00:03:22.376 --> 00:03:26.937
So for example, if I add an event
listener to the entire document,

52
00:03:26.937 --> 00:03:33.430
what I'm gonna say here, I'm gonna pass in
two things to the addEventListener method.

53
00:03:33.430 --> 00:03:37.629
The first thing is the name of the event
that I care about, in this case click.

54
00:03:37.629 --> 00:03:39.390
And the second thing, what is that?

55
00:03:39.390 --> 00:03:42.316
That second thing after the comma
here in the parameter, so

56
00:03:42.316 --> 00:03:45.719
the argument that I'm passing into
this method, what do we notice?

57
00:03:46.950 --> 00:03:51.837
We learned what that
weird symbol is earlier.

58
00:03:51.837 --> 00:03:52.572
&gt;&gt; An arrow.

59
00:03:52.572 --> 00:03:53.790
&gt;&gt; It's a fat arrow which?

60
00:03:53.790 --> 00:03:56.145
&gt;&gt; Function.
&gt;&gt; It creates a function, exactly.

61
00:03:56.145 --> 00:04:00.258
So we have an arrow function because we
don't need to really name this function,

62
00:04:00.258 --> 00:04:01.897
but this function, what it is?

63
00:04:01.897 --> 00:04:08.560
So it's called a callback and
some in some resources, you'll find it.

64
00:04:08.560 --> 00:04:11.513
We also call it an event handler function.

65
00:04:11.513 --> 00:04:15.597
And what it does is JavaScript
is gonna take that function and

66
00:04:15.597 --> 00:04:20.725
then anytime it fires a click event on
whatever element we've attached to,

67
00:04:20.725 --> 00:04:23.229
in this case, the entire document.

68
00:04:23.229 --> 00:04:25.505
Is going to call that function and

69
00:04:25.505 --> 00:04:29.250
run whatever code that
function tells it to run.

70
00:04:29.250 --> 00:04:32.630
So in this case,
it's gonna run console.log clicked.

71
00:04:33.780 --> 00:04:35.370
So let's try it out.

72
00:04:35.370 --> 00:04:39.634
If I go into my, this is just my other

73
00:04:39.634 --> 00:04:44.720
version of this page that we've made.

74
00:04:44.720 --> 00:04:49.978
If I add this event listener now,
when I click anywhere on the page.

75
00:04:49.978 --> 00:04:51.505
Do you see how that little 4, 5,

76
00:04:51.505 --> 00:04:54.898
6 it's showing me that all of these
different click events have happened.

77
00:04:54.898 --> 00:04:57.835
And it's it's just kind of
keeping them together and

78
00:04:57.835 --> 00:05:02.729
incrementing this number here instead of
like logging, logging, logging, logging,

79
00:05:02.729 --> 00:05:05.180
just to save me some eyeball strain.

80
00:05:05.180 --> 00:05:09.835
[LAUGH] So this is this is showing
that now by calling that dot

81
00:05:09.835 --> 00:05:15.380
add event listener method now
I am getting information.

82
00:05:15.380 --> 00:05:19.727
I'm getting basically the option to
run my function that I declared and

83
00:05:19.727 --> 00:05:23.270
I decided what to write in,
what code to put in.

84
00:05:23.270 --> 00:05:26.853
That is running every time somebody
clicks anywhere on the document.

85
00:05:26.853 --> 00:05:32.750
Cool, pretty cool, I think so, yes.

86
00:05:32.750 --> 00:05:35.771
So just to review,
we have to pass into things.

87
00:05:35.771 --> 00:05:38.760
And if you're like me, sometimes it's
hard to remember what we have to pass in.

88
00:05:38.760 --> 00:05:39.459
So again,

89
00:05:39.459 --> 00:05:44.834
you can always check on MDN if you're not
sure what parameters this method takes.

90
00:05:44.834 --> 00:05:49.131
The name of the event click is one
that's gonna come up a lot and

91
00:05:49.131 --> 00:05:55.180
then the handler function that JavaScript
is gonna call whenever that event happens.

