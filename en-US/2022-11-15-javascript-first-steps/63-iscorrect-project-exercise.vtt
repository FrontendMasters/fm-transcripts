WEBVTT

1
00:00:00.000 --> 00:00:05.177
All right, we're almost there we need
to do one more thing which is tell

2
00:00:05.177 --> 00:00:11.154
the person who clicked on a value whether
or not they clicked on the correct value.

3
00:00:11.154 --> 00:00:15.478
So if they click on the correct value,
the button goes green,

4
00:00:15.478 --> 00:00:20.053
convention, you could change it
to whatever color you'd like,

5
00:00:20.053 --> 00:00:24.233
perhaps more accessible colors
would also be beneficial.

6
00:00:24.233 --> 00:00:28.330
Or if they click on the wrong answer
the button that they clicked goes red.

7
00:00:28.330 --> 00:00:30.682
Okay, so
this is gonna be our last to do here.

8
00:00:33.980 --> 00:00:39.961
And here we are going
to use our conditional

9
00:00:39.961 --> 00:00:45.776
skills in order to first of all understand

10
00:00:45.776 --> 00:00:51.605
which button was actually clicked here.

11
00:00:51.605 --> 00:00:54.508
Because we're writing the same
handler function for both buttons.

12
00:00:54.508 --> 00:00:59.704
So we need to dynamically or kind of
at the time that this code is running,

13
00:00:59.704 --> 00:01:04.150
we need to understand,
which button they actually clicked.

14
00:01:04.150 --> 00:01:09.133
And then we're gonna take the value of
that button and compare it to the correct

15
00:01:09.133 --> 00:01:13.600
answer, and we wrote a function is
correct earlier to help us do that.

16
00:01:13.600 --> 00:01:21.363
And then we're going to use a conditional
to change the styling of the button.

17
00:01:21.363 --> 00:01:27.959
So there is a built in, in our DOM tree on
our elements, we have a built in method or

18
00:01:27.959 --> 00:01:32.906
property, excuse me,
called class list, which gives us,

19
00:01:32.906 --> 00:01:37.485
a list of all of the CSS classes
applied to this element.

20
00:01:37.485 --> 00:01:42.438
And we can manipulate that list, the same
way that we manipulate what elements

21
00:01:42.438 --> 00:01:45.298
are on the page or
what their text content is.

22
00:01:45.298 --> 00:01:48.475
We can manipulate their CSS too,
for example,

23
00:01:48.475 --> 00:01:53.810
using element.classList.add, and
then adding a string for the class name.

24
00:01:53.810 --> 00:01:58.509
And what we have in our program,
if you look up at the in the style tag,

25
00:01:58.509 --> 00:02:02.807
we have a couple of classes here
called correct and incorrect,

26
00:02:02.807 --> 00:02:06.373
that will color the background
of the button, red or

27
00:02:06.373 --> 00:02:10.207
green, or light green or
light pink is actually [LAUGH].

28
00:02:10.207 --> 00:02:13.909
And you can change those if you
prefer different colors for sure.

29
00:02:13.909 --> 00:02:18.372
So we're going to apply one of those
classes to the button based on

30
00:02:18.372 --> 00:02:23.014
whether the value of the button that
we clicked was the right value.

31
00:02:23.014 --> 00:02:28.670
And we have the right
answer up here in our fact.

32
00:02:28.670 --> 00:02:34.256
And we have an isCorrect function
that we already wrote that is going

33
00:02:34.256 --> 00:02:39.747
to tell us true or false,
is this guess the correct fact.answer?

34
00:02:39.747 --> 00:02:43.968
Yeah, we remember writing this,
all of those years ago.

35
00:02:43.968 --> 00:02:49.403
So, who would like to walk
me through what we're gonna

36
00:02:49.403 --> 00:02:55.086
need to do to conditionally
apply a class to this button?

37
00:02:55.086 --> 00:02:59.112
Either correct or incorrect,
depending on the result of the comparison.

38
00:03:02.121 --> 00:03:06.213
Two, do you wanna take a stab at this one?

39
00:03:06.213 --> 00:03:09.641
&gt;&gt; If,

40
00:03:10.833 --> 00:03:17.448
Parenthesis is correct, curly brackets.

41
00:03:17.448 --> 00:03:18.919
&gt;&gt; So here?

42
00:03:18.919 --> 00:03:20.742
Outside of the friends?

43
00:03:22.417 --> 00:03:23.054
Or where?

44
00:03:23.054 --> 00:03:24.805
Sorry.

45
00:03:24.805 --> 00:03:25.593
&gt;&gt; Yes.

46
00:03:25.593 --> 00:03:31.166
&gt;&gt; All right, well let's maybe just,
we're gonna do, if something,

47
00:03:31.166 --> 00:03:36.078
then curly braces,
just the structure of our conditionals,

48
00:03:36.078 --> 00:03:40.329
it goes, if condition,
then some curly braces, and

49
00:03:40.329 --> 00:03:45.240
then the other thing, and
then we're gonna, I don't know,

50
00:03:45.240 --> 00:03:51.305
we're gonna do something here,
we'll leave this as a TODO for ourselves.

51
00:03:51.305 --> 00:03:54.455
And then how can we do the other decision?

52
00:03:54.455 --> 00:03:57.543
If the condition is true,
we'll do this thing.

53
00:03:57.543 --> 00:03:59.174
&gt;&gt; Else.

54
00:03:59.174 --> 00:04:04.253
&gt;&gt; And then else, and
then we'll do the TODO if false, okay.

55
00:04:06.237 --> 00:04:12.602
So we can say, if correct answer here,
and then TODO if wrong answer.

56
00:04:12.602 --> 00:04:15.730
Okay, so now the question is,
what is our condition gonna be?

57
00:04:19.914 --> 00:04:20.888
Paul you wanna jump in?

58
00:04:20.888 --> 00:04:23.367
&gt;&gt; You do wanna call the isCorrect.

59
00:04:23.367 --> 00:04:24.561
&gt;&gt; We do wanna call isCorrect,

60
00:04:24.561 --> 00:04:27.113
yes, exactly, we wanna call
isCorrect just like you said.

61
00:04:29.325 --> 00:04:36.161
&gt;&gt; But you need to pass into the value,
and the value would be the button.value.

62
00:04:36.161 --> 00:04:40.859
&gt;&gt; Okay, so the value would be, so
the value that we wanna pass in,

63
00:04:40.859 --> 00:04:45.731
the way that isCorrect works and
my IDE is helpfully reminding me,

64
00:04:45.731 --> 00:04:50.952
that we pass in the string of the thing,
the guess that the person made.

65
00:04:50.952 --> 00:04:55.604
Which this is gonna be
the value of the button,

66
00:04:55.604 --> 00:05:01.329
if we look at option buttons,
each of these buttons has,

67
00:05:01.329 --> 00:05:05.768
oops, sorry, I'm in the wrong document.

68
00:05:05.768 --> 00:05:10.749
Option buttons,
if I look at one of the buttons,

69
00:05:10.749 --> 00:05:14.279
each of them has a name and a value.

70
00:05:14.279 --> 00:05:18.184
So the value of the button is usually
the thing that we care about,

71
00:05:18.184 --> 00:05:22.160
you said earlier, so
that's the thing that we're gonna take as,

72
00:05:22.160 --> 00:05:26.290
this is what the person guessed this,
this was their guess, great.

73
00:05:26.290 --> 00:05:29.513
And that's what we wanna pass
in to our isCorrect function.

74
00:05:29.513 --> 00:05:33.924
Now the question is,
how can we get that value?

75
00:05:33.924 --> 00:05:35.261
There are a couple of ways.

76
00:05:35.261 --> 00:05:36.334
You were saying?

77
00:05:36.334 --> 00:05:38.258
Sorry, go ahead.

78
00:05:38.258 --> 00:05:41.297
&gt;&gt; Well,
since we had that button variable-

79
00:05:41.297 --> 00:05:42.713
&gt;&gt; Right, and this was way up,

80
00:05:42.713 --> 00:05:45.250
because each time that we
add this event listener,

81
00:05:45.250 --> 00:05:49.439
we're talking about a specific button that
we're adding the event listener to, so

82
00:05:49.439 --> 00:05:52.352
we know which button we are adding
this event listener to.

83
00:05:52.352 --> 00:05:53.993
&gt;&gt; So it's a button element.

84
00:05:53.993 --> 00:06:00.794
So you can say button.value
&gt;&gt; So we could do button.value here.

85
00:06:00.794 --> 00:06:06.862
I'm just gonna comment this out for
one second.

86
00:06:06.862 --> 00:06:11.830
And we're going to just double
check if I in my for loop,

87
00:06:11.830 --> 00:06:16.083
if I just log let's say,
button.value here.

88
00:06:16.083 --> 00:06:21.303
Sorry, excuse me, in my event handler,
if I log button.value, similarly

89
00:06:21.303 --> 00:06:26.442
to what we just saw, because this code
remembers what the value of button was

90
00:06:26.442 --> 00:06:31.697
when it was declared, we should see
the value of the button that was clicked.

91
00:06:31.697 --> 00:06:35.563
So we're just gonna try this out
just to check our understanding.

92
00:06:35.563 --> 00:06:42.963
So now I clicked the false button,
and it indeed logged the value false.

93
00:06:42.963 --> 00:06:48.428
Let us uncomment what we were doing
before, okay, so now we would expect

94
00:06:48.428 --> 00:06:53.894
that if we pass in button.value to
isCorrect it's gonna compare it to,

95
00:06:53.894 --> 00:06:58.574
the fact on answer that's what
our isCorrect function does.

96
00:07:02.156 --> 00:07:06.462
Up here, that we wrote before, okay,
so now we just need to do the thing.

97
00:07:06.462 --> 00:07:08.171
Now we need to apply the class.

98
00:07:09.776 --> 00:07:14.445
So we saw that there is this
classList.add, we can use that.

99
00:07:14.445 --> 00:07:16.082
Too did you wanna take it from here?

100
00:07:16.082 --> 00:07:24.069
&gt;&gt; Button.classList.add parentheses,

101
00:07:24.069 --> 00:07:27.950
quotes, correct.

102
00:07:27.950 --> 00:07:28.487
&gt;&gt; Okay.

103
00:07:32.244 --> 00:07:33.612
And in the else case?

104
00:07:33.612 --> 00:07:36.698
&gt;&gt; Everything except incorrect.

105
00:07:36.698 --> 00:07:39.183
&gt;&gt; Great, all right,
let's try this out, shall we?

106
00:07:39.183 --> 00:07:43.846
So I saved CTRL, S, let's see what

107
00:07:43.846 --> 00:07:49.291
happens here, I am going to Reload here.

108
00:07:49.291 --> 00:07:52.682
[LAUGH] I accidentally manually
edited the HTML when I was talking

109
00:07:52.682 --> 00:07:54.077
about disabling things.

110
00:07:54.077 --> 00:07:58.436
So you see,
this is fun times in web development.

111
00:07:58.436 --> 00:08:00.994
Okay, that's why it was
automatically disabled.

112
00:08:00.994 --> 00:08:03.758
I was trying to figure it out,
it has nothing to do with our scope or

113
00:08:03.758 --> 00:08:04.815
variables or whatever,

114
00:08:04.815 --> 00:08:08.260
it has to do with me doing stuff and then
forgetting about it and not taking it out.

115
00:08:08.260 --> 00:08:10.651
But now, all right.

116
00:08:10.651 --> 00:08:14.340
We saw a sneak preview, a little bit
of a spoiler, but let's try it out.

117
00:08:14.340 --> 00:08:19.208
So now if we've done everything right,
when we attach this event handler,

118
00:08:19.208 --> 00:08:24.306
after somebody clicks on this particular
button that we attach the handler to,

119
00:08:24.306 --> 00:08:27.138
we're gonna set the explanation content.

120
00:08:27.138 --> 00:08:31.411
We're going to disable all the buttons,
and we're gonna set the correct or

121
00:08:31.411 --> 00:08:35.562
incorrect class on the button based
on the actual value of our statement.

122
00:08:35.562 --> 00:08:36.336
And in your new case,

123
00:08:36.336 --> 00:08:38.830
your statement would be different,
your answer will be different.

124
00:08:38.830 --> 00:08:42.363
So which button is green or
red is maybe gonna be different.

125
00:08:42.363 --> 00:08:44.152
But let's try it out now.

126
00:08:44.152 --> 00:08:45.470
All right, ready?

127
00:08:45.470 --> 00:08:47.760
I refreshed, I saved.

128
00:08:47.760 --> 00:08:49.884
Arrays are like objects, true or false.

129
00:08:51.692 --> 00:08:52.440
What do we think?

130
00:08:52.440 --> 00:08:53.690
Review?

131
00:08:53.690 --> 00:08:54.710
We know the answer.

132
00:08:54.710 --> 00:08:55.410
True.

133
00:08:55.410 --> 00:09:01.710
And indeed we got our green button, so
we're telling the person we've done it.

134
00:09:01.710 --> 00:09:02.870
We've got a quiz game now.

135
00:09:02.870 --> 00:09:06.259
Let's double check and make sure
that if we put in the wrong answer,

136
00:09:06.259 --> 00:09:08.829
that we also get our red
indicator that it is wrong.

137
00:09:08.829 --> 00:09:15.260
So if I click false, whoo,
we have a working quiz game, you all.

138
00:09:15.260 --> 00:09:16.513
We did it.

139
00:09:16.513 --> 00:09:19.170
This is a pretty simple website.

140
00:09:19.170 --> 00:09:25.269
But it is a website that is interacting
dynamically to user input and

141
00:09:25.269 --> 00:09:30.084
doing arbitrary manipulations
of the DOM elements,

142
00:09:30.084 --> 00:09:33.187
of their styles, of the content,

143
00:09:33.187 --> 00:09:38.548
of the HTML document on the fly,
in reaction to user input.

144
00:09:38.548 --> 00:09:43.265
And if you wanna really push yourself,
and really challenge

145
00:09:43.265 --> 00:09:48.541
yourself back in our
@Anjanette.dev/JavaScript first steps,

146
00:09:48.541 --> 00:09:52.070
we had the starter project
that we looked at.

147
00:09:52.070 --> 00:09:56.544
There's also a finished version that
has basically our solution here,

148
00:09:56.544 --> 00:09:58.977
if you want to compare the code in that.

149
00:09:58.977 --> 00:10:01.236
If you are maybe trying
to debug something or

150
00:10:01.236 --> 00:10:03.689
just wanna compare
different ways of doing it.

151
00:10:03.689 --> 00:10:07.366
And there's also a fancy version,
which is the one that we

152
00:10:07.366 --> 00:10:12.247
looked at earlier with multiple questions,
and a next question button, and

153
00:10:12.247 --> 00:10:15.870
you have all the skills to
implement this fancy version.

154
00:10:15.870 --> 00:10:20.658
So if you really wanna push yourself
after this course, go through and try and

155
00:10:20.658 --> 00:10:25.521
see if you can extend this page to have
multiple questions and be going over them

156
00:10:25.521 --> 00:10:30.034
and changing the page each time that
we click this next question button.

157
00:10:30.034 --> 00:10:34.724
Yeah, so you can use this fancy
version as a reference for

158
00:10:34.724 --> 00:10:37.668
trying to figure out how to do that.

