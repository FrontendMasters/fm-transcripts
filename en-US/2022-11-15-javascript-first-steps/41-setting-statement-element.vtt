WEBVTT

1
00:00:00.080 --> 00:00:02.640
Let's keep going with TODO 3.

2
00:00:02.640 --> 00:00:05.156
So now we're gonna actually
do something on the page,

3
00:00:05.156 --> 00:00:08.984
which is we're gonna take this statement,
so in my case it was one plus one equals,

4
00:00:08.984 --> 00:00:10.850
equals, equals, equals two.

5
00:00:10.850 --> 00:00:14.330
In this case, it's a razor like object,
whatever yours said.

6
00:00:14.330 --> 00:00:18.621
That statement text, the question or
sort of the, true or false arrays are like

7
00:00:18.621 --> 00:00:22.030
objects, true or false one plus
one equals equals equals two.

8
00:00:23.070 --> 00:00:29.995
We're gonna put that in this box here,
like I have on this example.

9
00:00:29.995 --> 00:00:35.626
Right now our box is empty, we're gonna
put it in there and make it not empty.

10
00:00:35.626 --> 00:00:38.819
So, how did we do this one?

11
00:00:38.819 --> 00:00:42.629
Who can walk me through their solution?

12
00:00:42.629 --> 00:00:45.626
&gt;&gt; All right, statement.textContent.

13
00:00:45.626 --> 00:00:48.319
&gt;&gt; So, statement now refers to what again?

14
00:00:48.319 --> 00:00:52.977
Our variable from before which we
said was this element, beautiful.

15
00:00:52.977 --> 00:00:57.103
Okay, so statement.textContent.

16
00:00:57.103 --> 00:00:59.325
&gt;&gt; Equals,
&gt;&gt; Equals,

17
00:00:59.325 --> 00:01:03.638
&gt;&gt; fact.statement.

18
00:01:03.638 --> 00:01:05.982
&gt;&gt; Great.

19
00:01:05.982 --> 00:01:06.801
Full stop.

20
00:01:06.801 --> 00:01:12.612
So now if I save and
if I go back to my local file,

21
00:01:12.612 --> 00:01:16.047
here we go, my local file.

22
00:01:16.047 --> 00:01:17.790
And I'm going to refresh.

23
00:01:19.452 --> 00:01:20.030
Look at that.

24
00:01:21.220 --> 00:01:25.784
I've got now JavaScript changing

25
00:01:25.784 --> 00:01:30.345
the HTML when the page is loaded and

26
00:01:30.345 --> 00:01:35.390
this HTML file is read by the browser.

27
00:01:35.390 --> 00:01:37.307
Cool?

28
00:01:37.307 --> 00:01:39.090
All right, we're getting there.

29
00:01:39.090 --> 00:01:43.846
So now, we still have more work
to do in order to get this to be

30
00:01:43.846 --> 00:01:48.603
an actual quiz game, but
we're gonna get to it through a few

31
00:01:48.603 --> 00:01:52.530
other concepts we need to
wrap our heads around.

32
00:01:53.540 --> 00:01:58.358
But before we move on, any questions
on TODOs one, two or three so far?

33
00:01:58.358 --> 00:02:02.948
&gt;&gt; I did the same thing,
statement.textContent equals

34
00:02:02.948 --> 00:02:07.348
factor statement,
content doesn't capitalize.

35
00:02:07.348 --> 00:02:09.696
&gt;&gt; Yes, case sensitivity and
property names.

36
00:02:09.696 --> 00:02:12.699
So text little case content is not gonna

37
00:02:12.699 --> 00:02:16.254
be the same thing as
text uppercase C content.

38
00:02:16.254 --> 00:02:21.030
And again, this is why, again, any text
editor that you're using is totally valid.

39
00:02:21.030 --> 00:02:25.213
But this is why things like IDEs
are helpful because they have knowledge

40
00:02:25.213 --> 00:02:27.730
about what we already have in the program.

41
00:02:27.730 --> 00:02:34.788
So right now it already knows that
statement, it's an element from the DOM,

42
00:02:34.788 --> 00:02:39.580
and so it knows some of
the properties that it has.

43
00:02:39.580 --> 00:02:44.341
So you'll notice that when I start
typing text, it's gonna auto-populate

44
00:02:44.341 --> 00:02:49.260
this little list of options and I can tab
through and get text capital C content.

45
00:02:49.260 --> 00:02:55.808
So this is just another kind of advantage
of using an IDE like VS Code for example.

