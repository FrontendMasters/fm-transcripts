WEBVTT

1
00:00:00.230 --> 00:00:02.490
So this is our task.

2
00:00:02.490 --> 00:00:07.422
So right now, the first few TODO's in this
document are things you already know how

3
00:00:07.422 --> 00:00:12.830
to do, using some of the magic spells that
we have learned so far in the course.

4
00:00:12.830 --> 00:00:16.144
So the first three TODO's,
TODO's one, two and three,

5
00:00:16.144 --> 00:00:19.740
are asking you to do things that
we already have the skills for.

6
00:00:19.740 --> 00:00:22.007
We're gonna declare some variables and

7
00:00:22.007 --> 00:00:25.940
point those at certain
elements in the HTML document.

8
00:00:25.940 --> 00:00:30.709
We're going to create an object,
so I think it's fact singular,

9
00:00:30.709 --> 00:00:35.819
sorry, to represent one fact that
you've learned about JavaScript,

10
00:00:35.819 --> 00:00:40.523
similar to 1 plus 1 equals 2,
triple equals 2, I should say.

11
00:00:40.523 --> 00:00:45.540
And then we're going to manipulate
the page to display our fact.

12
00:00:45.540 --> 00:00:46.829
So let's go to our code.

13
00:00:46.829 --> 00:00:50.530
So we have these TODO 1, 2, and 3.

14
00:00:50.530 --> 00:00:53.475
This is what we're going to fill in.

15
00:00:53.475 --> 00:00:54.616
And in order to do that,

16
00:00:54.616 --> 00:00:57.984
we're gonna need to draw on all
the skills that we've been using, and

17
00:00:57.984 --> 00:01:01.770
we're gonna need to look up at this HTML
and see what we're working with here.

18
00:01:01.770 --> 00:01:04.701
So we have some divs,
they have some IDs on them,

19
00:01:04.701 --> 00:01:07.830
they represent different
parts of the page.

20
00:01:07.830 --> 00:01:14.388
So for example, we want to declare some
kind of fact, and it's gonna be up to you.

21
00:01:14.388 --> 00:01:18.876
You're gonna choose something that you
learned about JavaScript that has a true

22
00:01:18.876 --> 00:01:19.870
or false answer.

23
00:01:19.870 --> 00:01:24.811
And we're gonna put it in
this part of the page, okay?

24
00:01:24.811 --> 00:01:26.496
So let us take a moment.

25
00:01:26.496 --> 00:01:31.357
We're gonna work through those TODOs 1,
2 and 3, to stop after TODO 3.

26
00:01:31.357 --> 00:01:33.180
And then we'll review together.

27
00:01:36.194 --> 00:01:40.296
There are a few different ways that we
can accomplish these goals as usual.

28
00:01:40.296 --> 00:01:46.130
There's lots of different options for
doing the same thing in JavaScript.

29
00:01:46.130 --> 00:01:50.310
But let's walk through and
look at some possible solutions here.

30
00:01:50.310 --> 00:01:56.350
So first of all, in TODO 1 we're gonna
declare and assign a bunch of variables.

31
00:01:56.350 --> 00:02:01.324
Now, these variables correspond
to elements on the page

32
00:02:01.324 --> 00:02:06.607
that we might maybe manipulate or
do some certain things to,

33
00:02:06.607 --> 00:02:11.683
but if we look at what these
elements represent from the one

34
00:02:11.683 --> 00:02:16.677
that we just saw,
none of them are gonna totally change.

35
00:02:16.677 --> 00:02:20.775
So what should I be using
to declare these variables?

36
00:02:20.775 --> 00:02:21.832
Let or Const?

37
00:02:21.832 --> 00:02:22.907
&gt;&gt; Const.

38
00:02:22.907 --> 00:02:27.060
&gt;&gt; Const, cuz I don't really
already have a good reason not to.

39
00:02:27.060 --> 00:02:29.119
So, let's start with statement.

40
00:02:29.119 --> 00:02:31.725
Who would like to walk me
through their solution for

41
00:02:31.725 --> 00:02:33.613
assigning the variable statement?

42
00:02:33.613 --> 00:02:35.307
Yeah, Chat.

43
00:02:35.307 --> 00:02:42.659
&gt;&gt; Let statement equal
document.getElementById(statement).

44
00:02:42.659 --> 00:02:48.965
&gt;&gt; Beautiful, so
we have a div up here with ID statement,

45
00:02:48.965 --> 00:02:54.859
and that is the one that
corresponds to this rounded

46
00:02:54.859 --> 00:03:00.070
box where the true or
false fact is gonna go.

47
00:03:00.070 --> 00:03:05.131
And we are selecting that from our
document using the method getElementById,

48
00:03:05.131 --> 00:03:07.977
and passing in the name
of the ID Statement.

49
00:03:07.977 --> 00:03:10.460
Lovely, thank you, Chat.

50
00:03:10.460 --> 00:03:13.296
Okay, and we could have used let,
but in this case,

51
00:03:13.296 --> 00:03:16.530
let just default to const until
we have a good reason not to.

52
00:03:17.690 --> 00:03:20.280
Okay, how about option buttons?

53
00:03:20.280 --> 00:03:22.498
Now, this is going to be plural.

54
00:03:22.498 --> 00:03:26.778
So I kind of want multiple
things to be captured here.

55
00:03:27.981 --> 00:03:29.184
Who can walk me through?

56
00:03:29.184 --> 00:03:30.455
Yeah, Chat, again.

57
00:03:30.455 --> 00:03:36.440
&gt;&gt; document.querSelectorAll("button").

58
00:03:36.440 --> 00:03:41.035
&gt;&gt; Okay, so this is one thing we could
do is we could get all of the button

59
00:03:41.035 --> 00:03:42.580
elements on the page.

60
00:03:43.980 --> 00:03:48.969
Now, in this case, in our HTML,
we only have two button elements and

61
00:03:48.969 --> 00:03:52.730
they are both inside of this options div.

62
00:03:52.730 --> 00:03:57.809
But I have a question for you, what if
there were another button out here,

63
00:04:01.091 --> 00:04:09.760
Would this be part of my option
buttons as written here?

64
00:04:09.760 --> 00:04:11.505
&gt;&gt; Yeah.

65
00:04:11.505 --> 00:04:15.080
&gt;&gt; Query selector all is
going to select all of

66
00:04:15.080 --> 00:04:18.866
the elements that match
a certain selector.

67
00:04:18.866 --> 00:04:21.700
In this case, that selector is
just looking for a button tag.

68
00:04:21.700 --> 00:04:23.270
So in this case, it's equivalent.

69
00:04:23.270 --> 00:04:24.950
So in this case, it totally works.

70
00:04:24.950 --> 00:04:31.071
But be careful because in this TODO,
I wrote that I want all of the elements

71
00:04:31.071 --> 00:04:36.134
within the options div, and
in this case, that is the same.

72
00:04:36.134 --> 00:04:39.204
But in another example,
it might give you something different.

73
00:04:39.204 --> 00:04:41.699
So totally valid solution.

74
00:04:41.699 --> 00:04:46.122
Did anyone have a different solution
to this one option buttons?

75
00:04:46.122 --> 00:04:47.206
Yeah?

76
00:04:47.206 --> 00:04:52.730
&gt;&gt; So the same thing but
document query selector pound options.

77
00:04:52.730 --> 00:05:00.060
&gt;&gt; Okay, so here we're going to, let's
say use our query selector, selector.

78
00:05:00.060 --> 00:05:04.190
So another nice thing about IDE is that
they offer auto completion sometimes,

79
00:05:04.190 --> 00:05:05.953
same as the browser console div.

80
00:05:05.953 --> 00:05:10.109
querySelector, and then you said?

81
00:05:10.109 --> 00:05:10.999
&gt;&gt; Pound options.

82
00:05:10.999 --> 00:05:15.470
&gt;&gt; Pound options, to select for
the ID options, okay?

83
00:05:15.470 --> 00:05:19.766
So if I were to write this,
just write as this,

84
00:05:19.766 --> 00:05:23.744
what would I get back from querySelector?

85
00:05:28.125 --> 00:05:32.439
Let me ask maybe,
how many elements would I get back?

86
00:05:34.771 --> 00:05:35.436
&gt;&gt; Just the one.

87
00:05:35.436 --> 00:05:38.010
&gt;&gt; So I'm hearing a couple,
maybe three, maybe one.

88
00:05:38.010 --> 00:05:42.130
So in this case, if I were to do it
just like this, let's go find out.

89
00:05:43.150 --> 00:05:47.760
Let's open our, this is our page so far.

90
00:05:47.760 --> 00:05:53.890
Let's try document querySelector options,
this gives me the div options.

91
00:05:53.890 --> 00:05:58.122
Now that might be useful, hat might
be something I'd wanna call options,

92
00:05:58.122 --> 00:05:59.150
let's say.

93
00:05:59.150 --> 00:06:01.839
But in this case, I want all of
the elements within that div.

94
00:06:01.839 --> 00:06:03.813
So how can I get those?

95
00:06:03.813 --> 00:06:05.300
&gt;&gt; .children?

96
00:06:05.300 --> 00:06:09.723
&gt;&gt; .children for example,
so let's try that now.

97
00:06:09.723 --> 00:06:19.295
Now if I were to try this, Now I have
a collection of two buttons, okay?

98
00:06:19.295 --> 00:06:25.525
And the one that we had before
was querySelectorAll button.

99
00:06:26.665 --> 00:06:29.804
That also, it's a slightly different
type of objects and node list but

100
00:06:29.804 --> 00:06:31.284
it still gives me those buttons.

101
00:06:31.284 --> 00:06:33.015
And there's a couple of
other things we could do.

102
00:06:33.015 --> 00:06:37.625
We could do like a querySelector for
let's say,

103
00:06:37.625 --> 00:06:42.130
buttons within the options div,
for example.

104
00:06:42.130 --> 00:06:46.058
So there's a lot of different options
here, [LAUGH] lot of options for

105
00:06:46.058 --> 00:06:47.356
getting our options.

106
00:06:47.356 --> 00:06:53.027
But this works just great.

107
00:06:53.027 --> 00:06:56.481
Okay, how about this last one,
the explanation?

108
00:07:00.320 --> 00:07:02.849
Sort of similar to what we did before.

109
00:07:04.650 --> 00:07:09.294
We could do, this time we wanna
get the explanation div here which

110
00:07:09.294 --> 00:07:14.022
right now has nothing in it, but
in our finished product is going to

111
00:07:14.022 --> 00:07:18.599
have the kind of the text explaining
why the answer is what it is.

112
00:07:19.840 --> 00:07:24.433
So we're gonna need to grab that, and
it handily has a little ID on it.

113
00:07:24.433 --> 00:07:32.100
So we could use either of these methods
basically that we've done so far.

114
00:07:32.100 --> 00:07:35.861
We could use getElementById,
and then the name of the ID.

115
00:07:35.861 --> 00:07:41.042
Or we could use querySelector and
then a hash selector, yeah?

116
00:07:41.042 --> 00:07:46.359
So let's just try let's, for
consistency sake, we'll do the same

117
00:07:46.359 --> 00:07:51.413
way we did this the statement,
and its ID is explanation, cool?

118
00:07:55.471 --> 00:07:59.450
Okay, how we feel about TODO 1, review?

119
00:07:59.450 --> 00:08:00.480
Complete?

120
00:08:00.480 --> 00:08:03.642
Excellent, now,
make sure as you're working in

121
00:08:03.642 --> 00:08:07.118
your file that you remember
to save frequently [LAUGH].

122
00:08:07.118 --> 00:08:10.031
Cuz you never know when your
computer is gonna crash and

123
00:08:10.031 --> 00:08:13.970
you lose a whole bunch of work that
you've been working on for hours.

124
00:08:13.970 --> 00:08:16.570
Not that I speak out of experience.

125
00:08:16.570 --> 00:08:20.420
So let us save it so far.

126
00:08:20.420 --> 00:08:22.826
And I also wanna ask, okay, so

127
00:08:22.826 --> 00:08:27.739
what I was showing you before was this
was actually the page from my site.

128
00:08:27.739 --> 00:08:31.604
And so if I refresh this page, and

129
00:08:31.604 --> 00:08:35.894
I asked for, let's say statement,

130
00:08:42.525 --> 00:08:44.510
Did I already say that?

131
00:08:44.510 --> 00:08:45.900
Okay, it's remembering what I did before.

132
00:08:47.060 --> 00:08:50.830
What I'm showing you here right
now is my version of this project.

133
00:08:50.830 --> 00:08:55.678
What you all wanna be doing is opening
your own version of the project

134
00:08:55.678 --> 00:08:59.435
that you're editing currently
in your local file.

135
00:08:59.435 --> 00:09:02.214
So you can do that by
going to your browser and

136
00:09:02.214 --> 00:09:06.721
it has an option to not just load
a webpage from a URL on the internet, but

137
00:09:06.721 --> 00:09:09.447
to load a file locally from your computer.

138
00:09:09.447 --> 00:09:16.427
So you can open your quiz.HTML
file in there, yeah?

139
00:09:16.427 --> 00:09:21.221
And that's how we're going to
iterate on kind of seeing what

140
00:09:21.221 --> 00:09:23.890
progress we've made so far.

141
00:09:23.890 --> 00:09:28.295
So if I inspect this now,
I should hopefully find,

142
00:09:28.295 --> 00:09:32.890
let me, Move this over, there we go.

143
00:09:32.890 --> 00:09:37.290
I should hopefully find that
now inside of my script tag,

144
00:09:37.290 --> 00:09:42.069
I have not only the TODOs, but
the stuff that I wrote, right?

145
00:09:42.069 --> 00:09:44.890
Like const statement equals
document.getElementById.

146
00:09:46.080 --> 00:09:51.074
So this shows that I am actually loading
the local file that I just edited

147
00:09:51.074 --> 00:09:52.581
in my editor, okay?

148
00:09:52.581 --> 00:09:55.876
So this is what we're gonna do is
we're gonna work kind of iteratively,

149
00:09:55.876 --> 00:09:58.390
which is a word that's
gonna come up a lot today.

150
00:09:58.390 --> 00:10:01.000
We're going to make
some edits to our file.

151
00:10:01.000 --> 00:10:05.704
We're going to refresh our
local file in the browser, and

152
00:10:05.704 --> 00:10:08.780
see the updated changes that we made.

