WEBVTT

1
00:00:00.040 --> 00:00:02.233
So we talked about expressions earlier.

2
00:00:02.233 --> 00:00:08.020
We know that express values like New
York Minute means a second for instance.

3
00:00:08.020 --> 00:00:14.071
And we also have something in JavaScript
called statements that are kind of.

4
00:00:14.071 --> 00:00:17.024
It's not something that you're going
to need to necessarily know and

5
00:00:17.024 --> 00:00:18.135
think about all the time.

6
00:00:18.135 --> 00:00:22.112
But it is a little bit useful to talk
about the difference between statements

7
00:00:22.112 --> 00:00:23.117
and expressions.

8
00:00:23.117 --> 00:00:26.627
And as an actor,
I enjoy Colman Domingo says in this case,

9
00:00:26.627 --> 00:00:29.575
I can't tell if it's a statement or
a question.

10
00:00:29.575 --> 00:00:33.975
So, expressions, we could sort
of think about as being like,

11
00:00:33.975 --> 00:00:38.885
questions, we asked JavaScript that say,
hey, what is this value?

12
00:00:38.885 --> 00:00:43.082
So we could say that an expression asks
JavaScript for a particular value.

13
00:00:43.082 --> 00:00:44.754
Like my assigned variable says,

14
00:00:44.754 --> 00:00:48.410
hey, JavaScript, what's the current
value of my assigned variable?

15
00:00:48.410 --> 00:00:51.889
Or hey, JavaScript, what is 6 plus 4?

16
00:00:51.889 --> 00:00:53.166
That is the value 10.

17
00:00:53.166 --> 00:00:56.973
Or, hey, JavaScript,
what is this element with a certain ID?

18
00:00:56.973 --> 00:00:59.483
And that is a HTML element.

19
00:00:59.483 --> 00:01:03.166
So, an expression as we said,
it sort of evaluates to a value.

20
00:01:03.166 --> 00:01:06.016
Another way we could
think about that is it's

21
00:01:06.016 --> 00:01:10.146
kind of a question that we asked
JavaScript, what is this value?

22
00:01:10.146 --> 00:01:16.572
A statement is something
we tell JavaScript to do.

23
00:01:16.572 --> 00:01:21.414
So, for example, we've seen
statements already that declare or

24
00:01:21.414 --> 00:01:26.265
maybe just assign, or declare and
or assign values to variables.

25
00:01:26.265 --> 00:01:31.942
So for example,
let 10 equals 6 plus 4; is a statement.

26
00:01:31.942 --> 00:01:35.132
It says, hey JavaScript, do a few things,

27
00:01:35.132 --> 00:01:40.393
create a variable called
evaluate the expression 6 plus 4,

28
00:01:40.393 --> 00:01:44.898
and assign the value of that
expression to the variable 10.

29
00:01:44.898 --> 00:01:47.251
JavaScript, do all of those things.

30
00:01:47.251 --> 00:01:50.168
So, we are telling JavaScript to do stuff.

31
00:01:50.168 --> 00:01:54.971
Whereas let's say the expression 6
plus 4 is asking JavaScript, hey,

32
00:01:54.971 --> 00:01:58.849
JavaScript, what is the number
that is equal to 6 plus 4?

33
00:01:58.849 --> 00:02:00.450
And so on and so forth.

34
00:02:00.450 --> 00:02:03.762
If we are,
maybe we've already declared a variable,

35
00:02:03.762 --> 00:02:06.642
even just declaring
a variable is a statement.

36
00:02:06.642 --> 00:02:11.530
And then assigning a variable to a new
value if we've declared it with let,

37
00:02:11.530 --> 00:02:12.934
is also a statement.

38
00:02:12.934 --> 00:02:14.824
So these are examples of statements.

39
00:02:14.824 --> 00:02:20.466
And we notice that these statement,
they tend to have a semicolon

40
00:02:20.466 --> 00:02:25.494
at the end of them,
like a punctuation to say JavaScript,

41
00:02:25.494 --> 00:02:29.514
I am done telling you stuff to do for
now [LAUGH].

42
00:02:29.514 --> 00:02:35.441
And so this is gonna be kind of
something that we're gonna see more of.

43
00:02:35.441 --> 00:02:36.864
We're going to see more
of throughout the course.

44
00:02:36.864 --> 00:02:40.394
We're gonna see other types of statements
that are telling JavaScript to do

45
00:02:40.394 --> 00:02:41.340
different things.

46
00:02:41.340 --> 00:02:43.948
For example, tomorrow we're
going to talk about functions.

47
00:02:43.948 --> 00:02:49.370
Functions have a return statement usually,
that it's going to tell JavaScript,

48
00:02:49.370 --> 00:02:52.632
hey, give me back this
value from this function.

49
00:02:52.632 --> 00:02:54.828
We're going to talk
more about it tomorrow.

50
00:02:54.828 --> 00:03:02.966
We also have things like conditionals that
are going to have more complexity around,

51
00:03:02.966 --> 00:03:07.939
if something is true,
then do some other thing, and

52
00:03:07.939 --> 00:03:12.592
if something is false,
then do something else.

53
00:03:12.592 --> 00:03:16.699
So, we also have things like for
statements in JavaScript,

54
00:03:16.699 --> 00:03:18.480
which are gonna be loops.

55
00:03:18.480 --> 00:03:21.726
And we also saw the statement
console log earlier.

56
00:03:21.726 --> 00:03:26.153
That is another statement of
telling JavaScript hey, JavaScript,

57
00:03:26.153 --> 00:03:28.300
print this thing to the console.

58
00:03:28.300 --> 00:03:32.108
So suffice it to say that there is
kind of in our mental models here,

59
00:03:32.108 --> 00:03:36.872
there's a distinction we can draw between
expressions which can be represented as

60
00:03:36.872 --> 00:03:37.906
values, right?

61
00:03:37.906 --> 00:03:41.725
They are equivalent to values and
statements,

62
00:03:41.725 --> 00:03:47.656
which are more like actions that we
want JavaScript to take, to do stuff.

63
00:03:47.656 --> 00:03:52.621
So, I bring this up just to say
that when we're thinking about our

64
00:03:52.621 --> 00:03:57.336
JavaScript programs, and
the chunks of code inside of them.

65
00:03:57.336 --> 00:04:01.438
Sometimes, we're gonna need a statement,
a command for

66
00:04:01.438 --> 00:04:06.979
Java Script to do something, and
sometimes we're gonna need an expression.

67
00:04:06.979 --> 00:04:12.972
So basically, a long winded way of asking
JavaScript for a particular value.

68
00:04:12.972 --> 00:04:15.955
And they're not always interchangeable.

69
00:04:15.955 --> 00:04:19.077
So, as we get used to
the syntax of JavaScript,

70
00:04:19.077 --> 00:04:24.073
start wrapping our heads around when
we need a statement in a certain place,

71
00:04:24.073 --> 00:04:27.368
and when we need an expression
in a certain place.

72
00:04:27.368 --> 00:04:32.139
So, this is vocabulary,
is not so much important, so

73
00:04:32.139 --> 00:04:37.119
much as for us to keep in mind
that sometimes we're asking

74
00:04:37.119 --> 00:04:41.083
JavaScript to essentially conjure a value.

75
00:04:41.083 --> 00:04:45.506
And other times we're asking
JavaScript to do stuff,

76
00:04:45.506 --> 00:04:51.282
create a new variable or log something
to the console or return a value.

77
00:04:51.282 --> 00:04:56.136
And that is, if you find in the literature
and blog posts, in whatever the words

78
00:04:56.136 --> 00:05:00.064
statement and expression,
that is the meaning of these words.

79
00:05:00.064 --> 00:05:05.079
And of course, guess where you can read
more about statements and expression?

80
00:05:05.079 --> 00:05:06.498
MDN.

81
00:05:06.498 --> 00:05:10.439
Yes, you get it by now, okay.

82
00:05:10.439 --> 00:05:13.573
So at this point,
we're going to move on and

83
00:05:13.573 --> 00:05:19.193
start talking about collection of things
like arrays and objects, as I said.

84
00:05:19.193 --> 00:05:21.719
And our friend Michelle Yeoh
is going to help us do that.

85
00:05:21.719 --> 00:05:24.935
But in the interests of not
overloading our brains and

86
00:05:24.935 --> 00:05:28.446
making them explode from too
much JavaScripty goodness.

87
00:05:28.446 --> 00:05:33.440
And also because we're humans and we get
tired and we are not the machines on

88
00:05:33.440 --> 00:05:38.116
which we run our JavaScript code,
we are humans with needs for food and

89
00:05:38.116 --> 00:05:42.254
sleep and things like that,
pesky little needs that we have.

90
00:05:42.254 --> 00:05:46.243
We are going to take a break here and
come back to this,

91
00:05:46.243 --> 00:05:50.675
start this up in part two,
day two, and jump in to arrays and

92
00:05:50.675 --> 00:05:54.949
objects, and
finish our Tic-Tac-Toe game tomorrow.

93
00:05:54.949 --> 00:06:01.421
So before we do that, I'm just zooming
out and recapping what we've done so far.

94
00:06:01.421 --> 00:06:04.996
We talked about statements and
expressions.

95
00:06:04.996 --> 00:06:11.228
We learned about expressions
as ways to express the value.

96
00:06:11.228 --> 00:06:13.428
We talked about variables and

97
00:06:13.428 --> 00:06:17.923
all of the different ways we
have to declare and assign them.

98
00:06:17.923 --> 00:06:23.648
And we developed a strong mental model for
How JavaScript actually performs

99
00:06:23.648 --> 00:06:29.654
that task of declaring variables and
figuring out what values to point them to.

100
00:06:29.654 --> 00:06:34.388
And that's gonna help us out a lot
as we continue in our journey etc.

101
00:06:34.388 --> 00:06:36.314
Glad you'll remember us.

102
00:06:36.314 --> 00:06:43.151
And we also talked about lots of
different values and data types.

103
00:06:43.151 --> 00:06:50.186
And some of the operators that we can use
on particular data types like strings,

104
00:06:50.186 --> 00:06:56.486
and like our good friends, numbers,
booleans, undefined and null.

105
00:06:56.486 --> 00:06:58.806
So we've really covered a lot of ground.

106
00:06:58.806 --> 00:07:03.781
And this is all on top of the fact
that we actually made some changes

107
00:07:03.781 --> 00:07:05.145
to our document.

108
00:07:05.145 --> 00:07:06.796
Thanks to the Document Object Model.

109
00:07:06.796 --> 00:07:08.412
We've gone through all kinds of stuff.

110
00:07:08.412 --> 00:07:10.540
We've manipulated web pages.

111
00:07:10.540 --> 00:07:12.794
We've talked about
different types of values.

112
00:07:12.794 --> 00:07:17.531
We've figured out how to express
values with more complex expression.

113
00:07:17.531 --> 00:07:20.080
We figured out how to remember
those values as variables.

114
00:07:20.080 --> 00:07:24.172
We're going to dig into even more complex
types of variables, namely arrays and

115
00:07:24.172 --> 00:07:24.724
objects.

116
00:07:24.724 --> 00:07:29.375
Before looking at functions and
other ways that we can get JavaScript to

117
00:07:29.375 --> 00:07:32.798
remember stuff we want to
do with our chunks of code.

118
00:07:32.798 --> 00:07:33.959
Thank you all so much.

119
00:07:33.959 --> 00:07:39.318
For all of your great questions and
example code, and all of that,

120
00:07:39.318 --> 00:07:44.199
exploration of some of the other
things we've heard about in

121
00:07:44.199 --> 00:07:48.810
JavaScript which we can always
look up on our friend MDN.

