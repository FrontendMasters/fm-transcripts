WEBVTT

1
00:00:00.300 --> 00:00:02.150
So, how could we do this?

2
00:00:02.150 --> 00:00:07.100
There's lots of ways as usual, but one of
the things we need to do is we need to do

3
00:00:07.100 --> 00:00:10.470
something for
every choice in choicesArray.

4
00:00:10.470 --> 00:00:13.090
So that means we're gonna
need some kind of loop.

5
00:00:14.460 --> 00:00:16.906
So what kinds of loops do we have?

6
00:00:19.355 --> 00:00:21.790
What would you reach for
here, what's your instinct?

7
00:00:23.715 --> 00:00:24.632
&gt;&gt; For of?

8
00:00:24.632 --> 00:00:27.670
&gt;&gt; For of, that sounds great.

9
00:00:27.670 --> 00:00:32.092
For of lets us loop over an array and
take out every item in it.

10
00:00:32.092 --> 00:00:33.007
And in this case,

11
00:00:33.007 --> 00:00:36.730
we have a choicesArray that we're
gonna get passed into this function.

12
00:00:37.780 --> 00:00:41.788
So named is the parameter.

13
00:00:41.788 --> 00:00:43.110
We're assuming we're gonna pass this in.

14
00:00:43.110 --> 00:00:46.014
And if we look at how
renderButtons is being called,

15
00:00:46.014 --> 00:00:50.940
it's going to receive an array of
choices and then the correct answer.

16
00:00:50.940 --> 00:00:52.330
So we're gonna loop over the choices.

17
00:00:52.330 --> 00:00:54.523
The choicesArray is what it's
called inside of this function,

18
00:00:54.523 --> 00:00:56.390
that's the name of the parameter.

19
00:00:56.390 --> 00:00:58.630
Okay, do you wanna walk me
through declaring a for loop,

20
00:00:58.630 --> 00:01:00.410
just the structure of the for loop?

21
00:01:00.410 --> 00:01:08.680
&gt;&gt; For parentheses, let choice of
choicesArray and then curly brackets.

22
00:01:08.680 --> 00:01:11.047
&gt;&gt; Awesome, okay, so
now this is gonna execute for

23
00:01:11.047 --> 00:01:12.732
everything in our choicesArray.

24
00:01:12.732 --> 00:01:16.114
Which we're probably gonna have three
things cuz that's what we had put in here,

25
00:01:16.114 --> 00:01:19.460
but maybe we could change it
later to be five or whatever.

26
00:01:19.460 --> 00:01:23.985
Okay, so the first thing we need
to do is create a button element.

27
00:01:23.985 --> 00:01:25.130
And we said we can do that, how?

28
00:01:26.420 --> 00:01:28.048
&gt;&gt; CreateElement.

29
00:01:28.048 --> 00:01:30.630
&gt;&gt; CreateElement,
which is a method on which object?

30
00:01:30.630 --> 00:01:31.260
&gt;&gt; Document.

31
00:01:31.260 --> 00:01:32.627
&gt;&gt; Document, beautiful, okay?

32
00:01:32.627 --> 00:01:40.159
So document.createElement, and
it's gonna be of type uptag button.

33
00:01:40.159 --> 00:01:43.719
And then we wanna capture this element so
that we can do stuff with it.

34
00:01:43.719 --> 00:01:51.283
So I'm just gonna say const button, yeah?

35
00:01:51.283 --> 00:01:52.990
Then we're gonna do some
stuff to the button.

36
00:01:52.990 --> 00:01:58.003
What we need to do is set some
properties on this button namely,

37
00:01:58.003 --> 00:02:01.610
the name, the value, and the text content.

38
00:02:03.390 --> 00:02:06.163
So how can we do that?

39
00:02:06.163 --> 00:02:10.277
We know how to set
properties by this point?

40
00:02:10.277 --> 00:02:11.976
&gt;&gt; Button.setProperty.

41
00:02:11.976 --> 00:02:13.150
&gt;&gt; Button?

42
00:02:13.150 --> 00:02:14.330
&gt;&gt; Dot.
&gt;&gt; Dot?

43
00:02:14.330 --> 00:02:17.780
&gt;&gt; SetProperty, or setAttribute.

44
00:02:17.780 --> 00:02:21.640
&gt;&gt; So if you use setAttribute on, yes,
we could use setAttribute if we wanted to.

45
00:02:21.640 --> 00:02:23.789
But actually since we have this,

46
00:02:23.789 --> 00:02:28.560
this is gonna be like JavaScript
object representation of this element.

47
00:02:28.560 --> 00:02:31.293
&gt;&gt; I think you just assign whatever value,
right, after the period?

48
00:02:31.293 --> 00:02:33.845
&gt;&gt; We can actually use the period,
right, to do like,

49
00:02:33.845 --> 00:02:36.920
remember textContent is something
we've worked with a lot.

50
00:02:36.920 --> 00:02:40.420
We've done .textContent= several times.

51
00:02:40.420 --> 00:02:41.950
So that's one thing we can do.

52
00:02:41.950 --> 00:02:46.260
And what we want this to be
is the value of that choice.

53
00:02:46.260 --> 00:02:50.029
So in our for loop, what variable
refers to the value of the choice?

54
00:02:50.029 --> 00:02:51.111
&gt;&gt; Choice, yeah?

55
00:02:51.111 --> 00:02:52.670
&gt;&gt; Not a trick question..

56
00:02:52.670 --> 00:02:59.380
Okay, so we set the textContent and
we wanna do the value and the name also.

57
00:03:01.160 --> 00:03:09.170
And so we can do just like button.value
= choice; button.name = choice.

58
00:03:09.170 --> 00:03:12.485
And there's even
a trickier shorter syntax,

59
00:03:12.485 --> 00:03:15.890
you can see in the finished
example on the site.

60
00:03:15.890 --> 00:03:18.510
But doesn't matter, this is totally valid.

61
00:03:18.510 --> 00:03:22.963
So we're setting the textContent,
we're setting the value which, remember,

62
00:03:22.963 --> 00:03:27.840
is gonna be often used in event handlers
like when we do event.target.value.

63
00:03:27.840 --> 00:03:30.610
So we need that, that's important.

64
00:03:30.610 --> 00:03:34.800
And then we're also setting the name,
which I think is just best practice.

65
00:03:34.800 --> 00:03:39.264
Okay, now we need to attach a click
listener, a click event listener.

66
00:03:39.264 --> 00:03:40.466
How do we do that?

67
00:03:40.466 --> 00:03:42.230
&gt;&gt; Button.addEventListener?

68
00:03:42.230 --> 00:03:44.546
&gt;&gt; Button., more louder?

69
00:03:44.546 --> 00:03:45.558
&gt;&gt; addEventListener.

70
00:03:45.558 --> 00:03:47.025
&gt;&gt; addEventListener, great.

71
00:03:49.279 --> 00:03:51.670
&gt;&gt; And what do we pass into EventListener?

72
00:03:51.670 --> 00:03:52.170
&gt;&gt; Click.

73
00:03:53.829 --> 00:03:54.675
&gt;&gt; Click.

74
00:03:54.675 --> 00:03:57.050
&gt;&gt; Click, yes, exactly.

75
00:03:59.230 --> 00:03:59.949
And what else?

76
00:04:01.270 --> 00:04:02.083
&gt;&gt; Callback function?

77
00:04:02.083 --> 00:04:02.644
&gt;&gt; A function,

78
00:04:02.644 --> 00:04:05.761
a callback function that's going to
be called when this click happens.

79
00:04:05.761 --> 00:04:09.590
Now, we didn't have to write it ourselves
because it was already written for us.

80
00:04:09.590 --> 00:04:13.372
It's very similar to the one we did on our
previous quiz, just a little bit fancier,

81
00:04:13.372 --> 00:04:14.770
it's called button handler.

82
00:04:15.920 --> 00:04:24.040
So we're gonna just pass that in, And
that represents the whole function.

83
00:04:24.040 --> 00:04:28.330
So we're not calling the function,
we're not saying call buttonHandler and

84
00:04:28.330 --> 00:04:29.373
return its value.

85
00:04:29.373 --> 00:04:30.269
We're just saying,

86
00:04:30.269 --> 00:04:33.319
we want the function buttonHandler to
be passed in as the callback here.

87
00:04:34.442 --> 00:04:35.134
Okay, great.

88
00:04:36.193 --> 00:04:41.944
Now, we need to append the button,

89
00:04:44.088 --> 00:04:49.338
As a child or add the button as
a child to the options element which

90
00:04:49.338 --> 00:04:54.313
we have up here, which is like
a little div container for it.

91
00:04:54.313 --> 00:04:57.500
&gt;&gt; AddChild elements?

92
00:04:57.500 --> 00:05:01.105
&gt;&gt; If we need to double check,
like how do we add a child?

93
00:05:01.105 --> 00:05:04.027
AddChild, it's not called add.

94
00:05:04.027 --> 00:05:08.938
Let's say, child,
we have something called appendChild,

95
00:05:08.938 --> 00:05:13.248
so this is going to add a node
to the end of list of children.

96
00:05:15.058 --> 00:05:20.800
So let's try options.appendChild, what?

97
00:05:22.931 --> 00:05:23.811
&gt;&gt; Button?

98
00:05:23.811 --> 00:05:25.926
&gt;&gt; Button, that's our element.

99
00:05:25.926 --> 00:05:29.750
The element that we created
all those many lines ago.

100
00:05:29.750 --> 00:05:35.260
&gt;&gt; You can push into the options
cuz it's not an array obviously?

101
00:05:35.260 --> 00:05:39.390
&gt;&gt; Options is actually an element,
an HTML element, I should say,

102
00:05:39.390 --> 00:05:41.140
as opposed to an array.

103
00:05:41.140 --> 00:05:42.208
&gt;&gt; You can't push it into an element?

104
00:05:42.208 --> 00:05:49.570
&gt;&gt; So we can double check
if we have element.push.

105
00:05:51.010 --> 00:05:55.250
No, but we do have node,
in this case node.

106
00:05:55.250 --> 00:05:57.130
I've been hand waving about
nodes versus elements.

107
00:05:57.130 --> 00:05:58.460
You can read about it on MDN.

108
00:05:58.460 --> 00:06:00.396
But in this case, appendChild should work.

109
00:06:02.170 --> 00:06:07.092
And I think that is all the things
that I wanted us to do as

110
00:06:07.092 --> 00:06:09.740
far as the comment nose.

111
00:06:09.740 --> 00:06:15.692
So let's save, great, and
maybe let's just try out this loop and

112
00:06:15.692 --> 00:06:20.068
just double check that
it's adding something.

113
00:06:20.068 --> 00:06:24.726
Of course, we're gonna have to do a lot
of other things like get choicesArray and

114
00:06:24.726 --> 00:06:27.412
grab and options elements,
so you know what?

115
00:06:27.412 --> 00:06:30.731
Let's press on, I feel confident, for
the interest of time, we'll press on.

116
00:06:30.731 --> 00:06:35.285
But what you could do is, again, you
can't access stuff like options here for

117
00:06:35.285 --> 00:06:36.461
multiple reasons.

118
00:06:36.461 --> 00:06:41.280
One, it's inside of a function, so that
means it's local to the function scope.

119
00:06:41.280 --> 00:06:45.238
But two, we said we can't really
pull out the values in this,

120
00:06:45.238 --> 00:06:49.363
which is because it is a module,
which we'll talk about later.

