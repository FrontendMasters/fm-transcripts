WEBVTT

1
00:00:00.000 --> 00:00:02.835
Time for everybody's favorite
thing in the world, pop quiz.

2
00:00:02.835 --> 00:00:03.973
Ha-ha-ha-ha.

3
00:00:03.973 --> 00:00:08.675
All right, let's put some of
the JavaScript knowledge we've got so

4
00:00:08.675 --> 00:00:11.360
far to the test with a little quiz game.

5
00:00:11.360 --> 00:00:14.241
All right, so
we're gonna play this together.

6
00:00:14.241 --> 00:00:17.185
[COUGH] Question or statements, let's say,

7
00:00:17.185 --> 00:00:20.757
JavaScript was invented in 1995,
true or false?

8
00:00:20.757 --> 00:00:21.836
&gt;&gt; True.
&gt;&gt; True, yes,

9
00:00:21.836 --> 00:00:25.332
this was a easter egg hidden
in that JavaScript object.

10
00:00:25.332 --> 00:00:26.693
And as I mentioned,

11
00:00:26.693 --> 00:00:31.827
Brendan Eich created JavaScript at
Netscape in 1995 in just 10 days.

12
00:00:31.827 --> 00:00:37.350
Interesting, all right, next question,
strings in JavaScript are editable values.

13
00:00:37.350 --> 00:00:42.111
I'm hearing a-
&gt;&gt; False.

14
00:00:42.111 --> 00:00:44.904
&gt;&gt; False, bingo.
So in JavaScript, strings are immutable,

15
00:00:44.904 --> 00:00:48.681
so they can't be edited, but
we can replace them with new and

16
00:00:48.681 --> 00:00:50.031
different strings.

17
00:00:50.031 --> 00:00:54.533
And there's another but that they are
wrapped in kind of these string objects,

18
00:00:54.533 --> 00:00:58.025
which don't manipulate the string,
but often return a new or

19
00:00:58.025 --> 00:01:00.800
different string based
on the original string.

20
00:01:00.800 --> 00:01:02.605
Great, two for two so far.

21
00:01:02.605 --> 00:01:03.870
Excellent work.

22
00:01:03.870 --> 00:01:08.614
Okay, how about 1 + 1 === 2?

23
00:01:08.614 --> 00:01:09.209
True or false?

24
00:01:09.209 --> 00:01:10.632
&gt;&gt; True.

25
00:01:10.632 --> 00:01:15.694
&gt;&gt; Ha-ha, yes, the plus operator,
when it operates on two numbers,

26
00:01:15.694 --> 00:01:19.901
which the 1's are here,
gives their sum, which is 2.

27
00:01:19.901 --> 00:01:26.178
Now, how about '1' + '1' === '2',
true or false?

28
00:01:26.178 --> 00:01:28.870
&gt;&gt; False.
&gt;&gt; I'm hearing false.

29
00:01:28.870 --> 00:01:31.729
Boom, the plus operator,
when it operates on strings,

30
00:01:31.729 --> 00:01:34.900
it does something different than
when it operates on numbers.

31
00:01:34.900 --> 00:01:37.430
So on strings, it concatenates them.

32
00:01:37.430 --> 00:01:39.940
So we would get?

33
00:01:39.940 --> 00:01:43.114
&gt;&gt; 11.
&gt;&gt; String 11, yeah, string 11.

34
00:01:43.114 --> 00:01:44.755
Okay, last question.

35
00:01:44.755 --> 00:01:47.932
Typeof[string 'J',

36
00:01:47.932 --> 00:01:53.541
string 'S'] === strings 'array'.

37
00:01:53.541 --> 00:01:54.814
True or false?

38
00:01:54.814 --> 00:01:55.336
&gt;&gt; False.

39
00:01:55.336 --> 00:02:01.042
&gt;&gt; False, yes,
because arrays are type object, exactly.

40
00:02:01.042 --> 00:02:05.463
Cuz everything in JavaScript is either
a primitive, like strings and numbers and

41
00:02:05.463 --> 00:02:06.815
Booleans, or objects.

42
00:02:06.815 --> 00:02:09.888
So arrays are just
a special kind of object.

43
00:02:09.888 --> 00:02:13.372
And with that,
y'all have got a perfect score.

44
00:02:13.372 --> 00:02:14.400
[APPLAUSE] Great job.

45
00:02:14.400 --> 00:02:20.460
So this, what we're looking at here
is essentially our project for

46
00:02:20.460 --> 00:02:22.705
this part of the course.

47
00:02:22.705 --> 00:02:27.493
So we're going to build a kind of
simplified little JavaScript quiz game,

48
00:02:27.493 --> 00:02:31.070
where we're gonna have
a statement about JavaScript.

49
00:02:31.070 --> 00:02:34.282
And then two buttons, true or false.

50
00:02:34.282 --> 00:02:38.634
And when we make a guess,
we're going to have the page react to tell

51
00:02:38.634 --> 00:02:42.834
us whether the guess was accurate
by turning the buttons green or

52
00:02:42.834 --> 00:02:46.359
whether it was inaccurate
by turning the button red.

53
00:02:46.359 --> 00:02:50.527
And we're gonna display a little
explanation of why the answer is

54
00:02:50.527 --> 00:02:51.298
what it is.

55
00:02:51.298 --> 00:02:56.974
This is our project, our next
project moving on from tic-tac-toe.

56
00:02:56.974 --> 00:03:01.054
And we are going to be working through
this kind of incrementally as we go

57
00:03:01.054 --> 00:03:05.746
through a few more concepts in JavaScript
that we're gonna need to make all of that

58
00:03:05.746 --> 00:03:06.290
happen.

59
00:03:06.290 --> 00:03:11.597
And one of the things that we're gonna
do is look at writing JavaScript,

60
00:03:11.597 --> 00:03:14.910
not in the browser console but
in a text file.

61
00:03:14.910 --> 00:03:17.949
So we said earlier that we have
a few different options for

62
00:03:17.949 --> 00:03:19.480
where we write JavaScript.

63
00:03:19.480 --> 00:03:23.177
One option that we've been using so
far, and we're gonna keep using for

64
00:03:23.177 --> 00:03:27.423
testing out small things is the browser's
JavaScript console, which we saw we can

65
00:03:27.423 --> 00:03:31.140
open by opening the browser's developer
tools by inspecting the page.

66
00:03:31.140 --> 00:03:36.930
Another option that we have is using
a local text file and a text editor.

67
00:03:36.930 --> 00:03:39.686
So for example,
if let's say you're on macOS,

68
00:03:39.686 --> 00:03:43.130
you probably have a built-in
text editor called TextEdit.

69
00:03:43.130 --> 00:03:48.072
Or there are other text editors that folks
like to use for coding, specifically

70
00:03:48.072 --> 00:03:52.809
the most popular of which these days
is called VS Code, Visual Studio Code.

71
00:03:52.809 --> 00:03:54.518
It's put up by Microsoft, and

72
00:03:54.518 --> 00:03:58.740
that is kind of a more comprehensive
integrated development environment.

73
00:03:58.740 --> 00:04:03.178
In this case, it's not gonna matter
what text editor you use, but

74
00:04:03.178 --> 00:04:07.615
we are gonna get used to writing
JavaScript inside of an HTML file so

75
00:04:07.615 --> 00:04:12.472
that we don't lose our changes, for
example, when we reload the page.

76
00:04:12.472 --> 00:04:14.048
So let's do it.

77
00:04:14.048 --> 00:04:20.069
So in the project materials, so
on Java.dev/JavaScript minus

78
00:04:20.069 --> 00:04:25.110
first minus steps,
there is a file, JS Quiz starter.

79
00:04:25.110 --> 00:04:30.162
So if you go to the JavaScript First Step
site, you'll see a JS Quiz starter,

80
00:04:30.162 --> 00:04:33.840
and that is gonna be the starting
point for our project.

81
00:04:33.840 --> 00:04:36.911
Now, there's a finished
version as reference,

82
00:04:36.911 --> 00:04:39.773
which we'll get to by
the end of this section.

83
00:04:39.773 --> 00:04:42.667
And then there's also the kind of fancy or
multi question version,

84
00:04:42.667 --> 00:04:45.359
which is what we just walked
through with multiple questions,

85
00:04:45.359 --> 00:04:48.539
which you can look at on your own time
if you wanna take it to the next level.

86
00:04:48.539 --> 00:04:52.379
But for now,
we're going to open this starter file, and

87
00:04:52.379 --> 00:04:57.019
we'll see we have kind of a blank
slate here with just some HTML that is

88
00:04:57.019 --> 00:05:01.430
setting up the page for us, so
we don't have to worry about that.

89
00:05:01.430 --> 00:05:05.486
So what we're going to do
is we're gonna save this

90
00:05:05.486 --> 00:05:10.220
file locally to our own computer,
which on most systems,

91
00:05:10.220 --> 00:05:15.295
you can do as a right
clicking on the page, And

92
00:05:15.295 --> 00:05:20.040
Save Page As or
Save File As depending on your browser.

93
00:05:20.040 --> 00:05:24.829
And this should give you the option to
save it to, let's say, your downloads.

94
00:05:24.829 --> 00:05:31.913
And you can save it as whatever
you want to save it as,

95
00:05:31.913 --> 00:05:36.910
.html, or it might do that for you.

96
00:05:36.910 --> 00:05:41.149
So we are going to save
that wherever you'd like.

97
00:05:41.149 --> 00:05:46.051
You should also have an option in the file
menu if the right click doesn't work to

98
00:05:46.051 --> 00:05:49.284
save page as, or just Ctrl or
Cmd + C usually works.

99
00:05:49.284 --> 00:05:54.960
And once we've got that saved, we're gonna
open it in our text editor of choice.

100
00:05:54.960 --> 00:06:00.991
So whether you're using kind of
the built-in TextEdit program,

101
00:06:00.991 --> 00:06:05.729
or whether you're using
something a little bit more

102
00:06:05.729 --> 00:06:09.618
robust like VS code, it's totally fine.

103
00:06:09.618 --> 00:06:12.962
So in this case, I'm going to use
VS Code just to show it to you.

104
00:06:12.962 --> 00:06:17.736
But if you're using some other editor,
there's other ones out there too

105
00:06:17.736 --> 00:06:22.676
that folks use, like Atom or Sublime
was very popular for a while there too.

106
00:06:22.676 --> 00:06:23.838
Anything is fine.

107
00:06:23.838 --> 00:06:27.440
In this case, we just need something
that lets us edit the text file.

108
00:06:27.440 --> 00:06:31.943
So I'm going to open this file up,

109
00:06:35.360 --> 00:06:41.510
And we should get this, our nice little
DOCTYPE html that we know and love.

110
00:06:41.510 --> 00:06:45.811
And we can scroll down and
see some CSS going on, and

111
00:06:45.811 --> 00:06:50.627
keep scrolling down and
see what we've got here, okay?

112
00:06:50.627 --> 00:06:54.112
Hopefully, everybody is
able to download it and

113
00:06:54.112 --> 00:06:57.087
get it opened in some kind of text editor.

114
00:06:57.087 --> 00:07:00.255
Now, the nice thing about an IDE
as opposed to text edit or

115
00:07:00.255 --> 00:07:04.890
something like that is that it does fancy
stuff for us, like syntax highlighting.

116
00:07:04.890 --> 00:07:09.433
And it even has some integrations
with stuff like MDN so

117
00:07:09.433 --> 00:07:15.479
that I can look up certain, I don't know,
CSS properties and whatnot.

118
00:07:15.479 --> 00:07:20.404
So there are some nice kind of bonus
things when you're working with an editor

119
00:07:20.404 --> 00:07:23.683
that's specifically for
software development.

120
00:07:23.683 --> 00:07:27.047
But you don't need any
of that in order for

121
00:07:27.047 --> 00:07:32.638
you to write totally valid JavaScript and
HTML and so on and so forth.

122
00:07:32.638 --> 00:07:37.996
Okay, so where in the HTML

123
00:07:37.996 --> 00:07:43.119
doc does JavaScript go?

124
00:07:43.119 --> 00:07:48.643
There is a certain element in HTML
that we're gonna wrap our JavaScript

125
00:07:48.643 --> 00:07:53.350
in in order for the browser to be
able to run it in our web page.

126
00:07:53.350 --> 00:07:58.996
Does anybody know the tag,
the little angle brackets

127
00:07:58.996 --> 00:08:04.401
thing that we need to put
our JavaScript inside of?

128
00:08:04.401 --> 00:08:05.439
&gt;&gt; It's script, right?

129
00:08:05.439 --> 00:08:07.614
&gt;&gt; Script, lovely.

130
00:08:07.614 --> 00:08:12.363
Yes, so
there is a script element in our page.

131
00:08:12.363 --> 00:08:16.249
So if we scroll down, we see a few
different elements, for example,

132
00:08:16.249 --> 00:08:20.806
we have a style element, where a bunch
of CSS goes, it was just pre-written, so

133
00:08:20.806 --> 00:08:22.560
we don't have to worry about.

134
00:08:22.560 --> 00:08:26.796
We have our body, where a bunch of
our content goes, some divs and

135
00:08:26.796 --> 00:08:28.500
some buttons and things.

136
00:08:28.500 --> 00:08:31.178
And then we have a script here,

137
00:08:31.178 --> 00:08:36.440
which sometimes you'll see it
just as the plain script tag.

138
00:08:36.440 --> 00:08:40.866
And sometimes you might see some other
attributes on there, like a type

139
00:08:40.866 --> 00:08:46.133
attribute, for example, that even more
explicitly calls out this is JavaScript.

140
00:08:46.133 --> 00:08:51.739
And so within that, between the opening
script tag and the closing script tag,

141
00:08:51.739 --> 00:08:56.695
this is where we're gonna write all
of our code in JavaScript, okay?

142
00:08:56.695 --> 00:09:00.309
Cool, and if you wanna read more about
the script element, and what it does, and

143
00:09:00.309 --> 00:09:03.229
all of the things it can do, and
all of the attributes it can have,

144
00:09:03.229 --> 00:09:04.801
you know where to go by this point.

145
00:09:04.801 --> 00:09:10.800
So, all right, now, in our example here,
we have a whole bunch of this stuff.

146
00:09:10.800 --> 00:09:11.443
What is this?

147
00:09:11.443 --> 00:09:14.859
There's all these to-do things, and
there's all of these slash, slash, slash,

148
00:09:14.859 --> 00:09:15.861
slash, slash, slash.

149
00:09:15.861 --> 00:09:18.000
So what is all this about?

150
00:09:18.000 --> 00:09:19.454
What are all of these things?

151
00:09:19.454 --> 00:09:21.450
Anybody know?

152
00:09:21.450 --> 00:09:22.475
&gt;&gt; Comments?

153
00:09:22.475 --> 00:09:24.628
&gt;&gt; Comments, yes.

154
00:09:24.628 --> 00:09:31.166
So these // lines in JavaScript
are what we call code comments.

155
00:09:31.166 --> 00:09:35.906
Now, most programming languages have
some kind of concept of a way to

156
00:09:35.906 --> 00:09:40.910
write text within your program that
is not actually part of the program.

157
00:09:40.910 --> 00:09:46.640
It's not command to JavaScript,
it's sort of like notes we're leaving for

158
00:09:46.640 --> 00:09:50.090
whatever human is gonna
be reading this code.

159
00:09:50.090 --> 00:09:53.116
Now, that human might be,
let's say, your co-worker,

160
00:09:53.116 --> 00:09:55.790
who has to also work on
the same code base that you do.

161
00:09:55.790 --> 00:09:57.659
Or it might be you in the future,

162
00:09:57.659 --> 00:10:01.898
who has to remember what the crap you
were doing when you wrote this code.

163
00:10:01.898 --> 00:10:06.229
[LAUGH] So
code comments are really useful.

164
00:10:06.229 --> 00:10:10.713
They help others and yourself
understand what your code is there for,

165
00:10:10.713 --> 00:10:15.430
maybe why you wrote it a certain way or
what a certain part of the code does.

166
00:10:15.430 --> 00:10:20.061
Or sometimes, for example, if you're
doing something a little bit weird or

167
00:10:20.061 --> 00:10:24.407
that you normally wouldn't do,
you can leave a note, a comment to say,

168
00:10:24.407 --> 00:10:26.850
this is why I'm doing this weird thing.

169
00:10:26.850 --> 00:10:31.507
And it also can be useful to keep
track of things that you want to do

170
00:10:31.507 --> 00:10:34.110
later with these to-do comments.

171
00:10:34.110 --> 00:10:38.580
So in fact, some tooling, some IDEs, and
things like that will even parse out

172
00:10:38.580 --> 00:10:42.060
the word to-dos and
sort of make a little checklist for you.

173
00:10:42.060 --> 00:10:46.228
We're not gonna get that fancy, but the
idea is that we can use that to kind of

174
00:10:46.228 --> 00:10:50.352
map out for ourselves what we've done
already and what we still need to do.

175
00:10:50.352 --> 00:10:54.960
So comments are super useful, and in
JavaScript, they start with two slashes.

176
00:10:54.960 --> 00:10:57.830
So that's what all of
these slashes are about.

177
00:10:57.830 --> 00:11:02.681
These are all comments that
are essentially me leaving

178
00:11:02.681 --> 00:11:07.110
notes to all of us about
what we're gonna do in this

179
00:11:07.110 --> 00:11:11.551
JavaScript section of our HTML file,
question.

180
00:11:11.551 --> 00:11:15.303
&gt;&gt; Why is the CSS all in one page?

181
00:11:15.303 --> 00:11:17.948
&gt;&gt; Why is the CSS all in one page.

182
00:11:17.948 --> 00:11:22.502
Well, right now, the reason that all of
this stuff is in one page is so that it is

183
00:11:22.502 --> 00:11:27.211
easy for us to work with, so that we can
download just one file and edit it simply.

184
00:11:27.211 --> 00:11:32.448
But in large projects and large
complicated websites, you will find that

185
00:11:32.448 --> 00:11:37.517
all of this stuff, CSS, JavaScript,
even sometimes little chunks of

186
00:11:37.517 --> 00:11:43.200
different parts of the HTML will sort of
be split up in lots of different places.

187
00:11:43.200 --> 00:11:48.127
And then you'll have some kind of
scaffolding to sort of bring all

188
00:11:48.127 --> 00:11:52.890
that together and load it all into
the same page in the browser.

189
00:11:52.890 --> 00:12:00.716
But that is kind of more advanced in terms
of how large complex JavaScript programs,

190
00:12:00.716 --> 00:12:05.470
or just generally large
web pages are structured.

191
00:12:05.470 --> 00:12:10.330
And how we build websites for
putting up on the web.

192
00:12:10.330 --> 00:12:13.997
This right now is our time to talk
about JavaScript and its features and

193
00:12:13.997 --> 00:12:14.750
how it works.

194
00:12:14.750 --> 00:12:19.127
And so just to make our lives simple,
we've just got one .html file, and

195
00:12:19.127 --> 00:12:22.458
it has all of the stuff we need for
this particular page.

196
00:12:22.458 --> 00:12:29.530
Okay, so in this case,
we've got a whole bunch of to-dos here.

197
00:12:29.530 --> 00:12:32.920
In fact, it's a little overwhelming,
there's a lot of to-dos happening.

198
00:12:32.920 --> 00:12:38.100
What we're gonna do in this part
of the course is gradually work

199
00:12:38.100 --> 00:12:43.767
through these to-dos to fill in
the functionality of our quiz page so

200
00:12:43.767 --> 00:12:48.556
that we go from this blank thing
that has no information and

201
00:12:48.556 --> 00:12:56.497
nothing happens to our, Beautiful,

202
00:12:56.497 --> 00:13:01.549
interactive, meaningful quiz project.

