WEBVTT

1
00:00:00.240 --> 00:00:03.703
&gt;&gt; Bianca Gandolfo: Okay, so
we're gonna revisit our original task,

2
00:00:03.703 --> 00:00:08.870
which is to count all the recommendations
that our chat bot can make for us.

3
00:00:08.870 --> 00:00:13.430
So we

4
00:00:13.430 --> 00:00:17.960
discussed earlier that recommendations
were the same as leaves on a tree, and

5
00:00:17.960 --> 00:00:24.020
we define a leaf as a node
that has no children, yeah.

6
00:00:24.020 --> 00:00:26.900
So let's check that out.

7
00:00:26.900 --> 00:00:31.637
I have here our contains that
we were working on earlier,

8
00:00:31.637 --> 00:00:36.768
to kind of have a reference of how
maybe we can work with this and

9
00:00:36.768 --> 00:00:38.953
also to compare, right?

10
00:00:38.953 --> 00:00:44.040
So the difference here, this is
a class method, so we're using this.

11
00:00:44.040 --> 00:00:48.210
CountReccos is a function
that we pass a tree, okay?

12
00:00:48.210 --> 00:00:51.910
So again, we're not gonna be
using this is in all of that.

13
00:00:53.440 --> 00:00:58.263
All right, so the first thing we wanna

14
00:00:58.263 --> 00:01:03.141
do is see if,
&gt;&gt; Bianca Gandolfo: If a tree or

15
00:01:03.141 --> 00:01:06.597
a node, we can just call this a node.

16
00:01:06.597 --> 00:01:12.668
If a node is a leaf,
how do we check that again?

17
00:01:19.617 --> 00:01:21.601
&gt;&gt; Bianca Gandolfo: Node.left?

18
00:01:21.601 --> 00:01:22.622
&gt;&gt; Speaker 2: And node.right.

19
00:01:22.622 --> 00:01:30.103
&gt;&gt; Bianca Gandolfo: Sorry, and,
&gt;&gt; Bianca Gandolfo: So

20
00:01:30.103 --> 00:01:34.698
this is if they have it,
this says if they don't.

21
00:01:34.698 --> 00:01:38.610
&gt;&gt; Speaker 2: No dot, no.

22
00:01:38.610 --> 00:01:40.527
&gt;&gt; Speaker 3: That's right or yes, no.

23
00:01:44.598 --> 00:01:45.981
&gt;&gt; Bianca Gandolfo: Just testing you.

24
00:01:45.981 --> 00:01:48.607
Are you really paying attention?

25
00:01:48.607 --> 00:01:54.175
Okay, so if we don't have children,

26
00:01:54.175 --> 00:01:59.569
then it's a leaf and we want to return

27
00:01:59.569 --> 00:02:06.841
something,
&gt;&gt; Bianca Gandolfo: Okay?

28
00:02:06.841 --> 00:02:09.110
I don't know yet, I'm just gonna return.

29
00:02:10.220 --> 00:02:17.972
Otherwise, we need to keep traversing,
right?

30
00:02:17.972 --> 00:02:21.973
So,
&gt;&gt; Bianca Gandolfo: We can kind of copy

31
00:02:21.973 --> 00:02:24.680
this here, let's just start with one.

32
00:02:25.730 --> 00:02:30.410
We'll copy this, so this is gonna
be traversing through the left, but

33
00:02:30.410 --> 00:02:32.730
we don't want to do contains, right?

34
00:02:32.730 --> 00:02:36.775
So we're gonna change this to node,

35
00:02:36.775 --> 00:02:42.918
if node.yes and
&gt;&gt; Bianca Gandolfo: We

36
00:02:42.918 --> 00:02:45.632
want to do something.

37
00:02:45.632 --> 00:02:47.000
What do we want to do with this?

38
00:02:47.000 --> 00:02:50.280
We wanna keep counting, right, where
this is gonna be a recursive solution.

39
00:02:52.856 --> 00:02:54.474
&gt;&gt; Bianca Gandolfo: So
we'll call that, and

40
00:02:54.474 --> 00:02:59.422
we're gonna need to do something really
similar for the right side as well.

41
00:03:02.215 --> 00:03:03.633
&gt;&gt; Bianca Gandolfo: Everyone
following here?

42
00:03:06.309 --> 00:03:11.524
&gt;&gt; Bianca Gandolfo: Okay,
&gt;&gt; Bianca Gandolfo: Let's

43
00:03:11.524 --> 00:03:13.100
just keep this or operator here.

44
00:03:13.100 --> 00:03:13.864
Let's check it out.

45
00:03:13.864 --> 00:03:15.728
Let's just try this and see what happens.

46
00:03:15.728 --> 00:03:20.596
Does anyone have a guess of what's
going to happen, what this will return?

47
00:03:23.201 --> 00:03:23.878
&gt;&gt; Bianca Gandolfo: Sorry.

48
00:03:23.878 --> 00:03:25.044
&gt;&gt; [INAUDIBLE]
&gt;&gt; Bianca Gandolfo: First of all,

49
00:03:25.044 --> 00:03:26.797
it's not gonna return anything.

50
00:03:26.797 --> 00:03:30.360
Yeah [INAUDIBLE] a Boolean.

51
00:03:30.360 --> 00:03:34.340
&gt;&gt; Speaker 4: Will it always be false
if we're returning an empty string?

52
00:03:34.340 --> 00:03:35.145
&gt;&gt; Bianca Gandolfo: Yeah.
&gt;&gt; Speaker 4: It'll return an empty

53
00:03:35.145 --> 00:03:36.370
string eventually.

54
00:03:36.370 --> 00:03:40.951
&gt;&gt; Bianca Gandolfo: Yeah, eventually, you
will always return an empty string, and

55
00:03:40.951 --> 00:03:42.210
it will be false.

56
00:03:42.210 --> 00:03:44.960
Okay, so we don't need to walk
through it cuz we know that, good.

57
00:03:46.670 --> 00:03:48.600
But what do we wanna return?

58
00:03:48.600 --> 00:03:52.048
We wanna return that we found a node.

59
00:03:52.048 --> 00:03:55.180
So I'm gonna recommend that we return 1.

60
00:03:57.186 --> 00:04:01.408
&gt;&gt; Bianca Gandolfo: Okay,
now we're out of the boolean, sort of.

61
00:04:01.408 --> 00:04:03.740
Now, how does this change?

62
00:04:03.740 --> 00:04:08.338
So once we get to the bottom, we return 1.

63
00:04:14.156 --> 00:04:16.478
&gt;&gt; Speaker 2: We need to figure
out a way to add up our 1s.

64
00:04:16.478 --> 00:04:17.014
&gt;&gt; Bianca Gandolfo: Yeah.

65
00:04:17.014 --> 00:04:18.833
&gt;&gt; Speaker 2: That go
through the recursion.

66
00:04:18.833 --> 00:04:19.881
&gt;&gt; Bianca Gandolfo: Mm-hm.

67
00:04:23.474 --> 00:04:24.198
&gt;&gt; Bianca Gandolfo: Let's walk through it.

68
00:04:24.198 --> 00:04:26.400
And let's see if we can
identify where that is.

69
00:04:27.430 --> 00:04:29.758
All right,
we're gonna use our tree over here and

70
00:04:29.758 --> 00:04:31.707
we expect there to be two leaves, right?

71
00:04:31.707 --> 00:04:34.095
B is a leaf, D is a leaf.

72
00:04:37.325 --> 00:04:38.406
&gt;&gt; Bianca Gandolfo: Okay.

73
00:04:42.008 --> 00:04:44.423
&gt;&gt; Bianca Gandolfo: Go away.

74
00:04:44.423 --> 00:04:50.717
All right, so the very first time
we call it, node is A, right?

75
00:04:53.007 --> 00:04:54.420
&gt;&gt; Bianca Gandolfo: Does
it have a left and a right?

76
00:04:54.420 --> 00:04:57.390
Yeah, so we're gonna skip over.

77
00:04:58.740 --> 00:05:00.194
Does it have a left?

78
00:05:03.178 --> 00:05:07.474
&gt;&gt; Bianca Gandolfo: Yes, so
we're gonna call this again with

79
00:05:07.474 --> 00:05:11.410
the node in question, which is the B.

80
00:05:13.260 --> 00:05:20.060
So does it not have a yes and
does it not have a no?

81
00:05:21.520 --> 00:05:23.523
True, we return 1.

82
00:05:25.813 --> 00:05:29.111
&gt;&gt; Bianca Gandolfo: Okay, pop this off,
and we called it here, remember?

83
00:05:33.400 --> 00:05:38.019
&gt;&gt; Bianca Gandolfo: Okay,
now we're gonna go here.

84
00:05:38.019 --> 00:05:39.200
&gt;&gt; Speaker 6: It won't go there, right?

85
00:05:41.870 --> 00:05:43.860
Once the-
&gt;&gt; Bianca Gandolfo: That's true.

86
00:05:43.860 --> 00:05:46.462
We have our operator here,
that's annoying.

87
00:05:46.462 --> 00:05:49.650
Well, let's just change it for now.

88
00:05:49.650 --> 00:05:51.540
So then we have to go to the next one.

89
00:05:51.540 --> 00:05:52.266
Good catch.

90
00:05:54.895 --> 00:05:57.464
&gt;&gt; Bianca Gandolfo: We'll go to no.

91
00:05:59.906 --> 00:06:01.692
&gt;&gt; Bianca Gandolfo: That's really
interesting that it keeps doing that.

92
00:06:01.692 --> 00:06:04.883
Okay, we'll go to C.

93
00:06:04.883 --> 00:06:06.812
So what did we call?

94
00:06:09.317 --> 00:06:11.374
&gt;&gt; Bianca Gandolfo: Okay,
so this one is C.

95
00:06:11.374 --> 00:06:13.423
Is C a leaf?

96
00:06:13.423 --> 00:06:20.148
No, so it's going to do this thing.

97
00:06:28.107 --> 00:06:35.642
&gt;&gt; Bianca Gandolfo: Okay, so
it's going to then traverse to the left.

98
00:06:35.642 --> 00:06:38.682
Doesn't have a left, right?

99
00:06:38.682 --> 00:06:45.618
So this is gonna be false,
&gt;&gt; Bianca Gandolfo: Or flash.

100
00:06:45.618 --> 00:06:49.125
False, okay?

101
00:06:51.064 --> 00:06:53.070
&gt;&gt; Bianca Gandolfo: Uh-oh,
now we have that problem again.

102
00:06:54.630 --> 00:06:55.590
Now it's false.

103
00:06:56.890 --> 00:06:57.770
So this is wrong, right?

104
00:06:57.770 --> 00:07:00.140
That needs to change for sure.

105
00:07:01.240 --> 00:07:03.447
Because we do want to go to the right,
correct?

106
00:07:05.458 --> 00:07:07.191
&gt;&gt; Bianca Gandolfo: Right, right, uh-huh.

107
00:07:09.125 --> 00:07:12.226
&gt;&gt; Bianca Gandolfo: Okay,
so this is wrong.

108
00:07:12.226 --> 00:07:13.630
So we need to change that.

109
00:07:16.608 --> 00:07:20.491
&gt;&gt; Bianca Gandolfo: And let's just move
on and just note that that's not correct.

110
00:07:20.491 --> 00:07:26.064
We'll go to node.no, which is D.

111
00:07:26.064 --> 00:07:27.466
We're gonna call this again.

112
00:07:30.495 --> 00:07:31.521
&gt;&gt; Bianca Gandolfo: And
this is a leaf node, so

113
00:07:31.521 --> 00:07:33.160
we don't have to worry about all of that.

114
00:07:33.160 --> 00:07:37.042
And this will return one.

115
00:07:37.042 --> 00:07:41.184
Okay,
&gt;&gt; Bianca Gandolfo: Right, returns one,

116
00:07:41.184 --> 00:07:42.690
everyone following?

117
00:07:42.690 --> 00:07:43.291
Cool.

118
00:07:52.631 --> 00:07:55.002
&gt;&gt; Speaker 7: We still haven't counted,
right?

119
00:07:55.002 --> 00:07:55.718
&gt;&gt; Bianca Gandolfo: Hm?

120
00:07:55.718 --> 00:07:57.471
&gt;&gt; Speaker 7: We still haven't counted it?

121
00:07:59.471 --> 00:08:01.412
&gt;&gt; Bianca Gandolfo: No, we have not.

122
00:08:01.412 --> 00:08:03.470
What you see is what you get,
this is where we're at.

123
00:08:04.510 --> 00:08:06.930
So we popped it off and we return 1 here.

124
00:08:08.600 --> 00:08:13.100
So now we have some interesting
things happening, right?

125
00:08:13.100 --> 00:08:20.070
We have false, this is true,
&gt;&gt; Bianca Gandolfo: Right,

126
00:08:20.070 --> 00:08:22.010
some weird things.

127
00:08:22.010 --> 00:08:24.640
But we're getting somewhere,
we're returning numbers.

128
00:08:25.870 --> 00:08:30.612
At least in two parts of this,
we have 1 and 1 somewhere, right?

129
00:08:32.484 --> 00:08:36.060
&gt;&gt; Bianca Gandolfo: So we're gonna need
to add these, and the question is how?

130
00:08:36.060 --> 00:08:38.168
And we also have the issue
of this true and false.

131
00:08:38.168 --> 00:08:45.049
It seems like it's adding some logic that
is gonna take away from the solution.

132
00:08:45.049 --> 00:08:47.721
Thumbs on that read?

133
00:08:47.721 --> 00:08:52.093
Okay,
&gt;&gt; Bianca Gandolfo: Cool, so

134
00:08:52.093 --> 00:08:56.470
what if we changed this to plus.

135
00:09:03.054 --> 00:09:06.543
&gt;&gt; Bianca Gandolfo: Actually,
this returned undefined, right?

136
00:09:06.543 --> 00:09:07.775
What did this return?

137
00:09:07.775 --> 00:09:13.247
This just returned false
because of our boolean.

138
00:09:13.247 --> 00:09:18.235
So what if we,
&gt;&gt; Bianca Gandolfo: Did something

139
00:09:18.235 --> 00:09:22.220
like this,
I keep deleting the things that I need.

140
00:09:22.220 --> 00:09:23.256
Let me put it back.

141
00:09:28.683 --> 00:09:29.520
&gt;&gt; Bianca Gandolfo: All right.

142
00:09:30.871 --> 00:09:36.900
&gt;&gt; Bianca Gandolfo: So let's maybe
skip this check, skip this check.

143
00:09:38.250 --> 00:09:39.870
So we're taking some risks here.

144
00:09:41.110 --> 00:09:44.288
We might be passing undefined,
right, or null.

145
00:09:46.676 --> 00:09:51.577
&gt;&gt; Bianca Gandolfo: But at least we don't
have to worry about this kind of stuff is

146
00:09:51.577 --> 00:09:53.230
getting in the way.

147
00:09:53.230 --> 00:09:54.356
It's not helping us.

148
00:10:01.603 --> 00:10:06.088
&gt;&gt; Bianca Gandolfo: Okay, so
now we have the issue that we

149
00:10:06.088 --> 00:10:11.015
are gonna be adding booleans and stuff.

150
00:10:11.015 --> 00:10:12.380
Well, we don't have this one.

151
00:10:13.890 --> 00:10:16.490
But this one is now,
it's not gonna be false anymore.

152
00:10:16.490 --> 00:10:19.935
This is now gonna be returned undefined,
right?

153
00:10:19.935 --> 00:10:22.008
Do you guys understand why that is?

154
00:10:22.008 --> 00:10:26.269
So once we go to C,
&gt;&gt; Bianca Gandolfo: Right,

155
00:10:26.269 --> 00:10:27.450
we're gonna call this.

156
00:10:28.860 --> 00:10:35.629
Let's just go through one with our new,
&gt;&gt; Bianca Gandolfo: Our new strategy here.

157
00:10:35.629 --> 00:10:41.629
So now, we call this one

158
00:10:41.629 --> 00:10:46.750
with null, right?

159
00:10:46.750 --> 00:10:50.687
You see that because here's
undefined because we pass null and

160
00:10:50.687 --> 00:10:54.704
we're not handling the case for
where there's nothing there.

161
00:10:54.704 --> 00:10:57.717
So we pass null.

162
00:10:57.717 --> 00:11:03.394
This is not gonna work out for
us, there's nothing there and

163
00:11:03.394 --> 00:11:09.500
then we're gonna return,
all this is not gonna help.

164
00:11:09.500 --> 00:11:15.235
So I'm just gonna do
another check up here,

165
00:11:15.235 --> 00:11:19.736
If (node === null), right?

166
00:11:19.736 --> 00:11:23.360
This is like what we were checking before,
we were safeguarding.

167
00:11:23.360 --> 00:11:26.350
Return 0, right?

168
00:11:26.350 --> 00:11:28.050
We need a number, we're adding.

169
00:11:29.610 --> 00:11:34.513
So now, when we pass in this nothing here,

170
00:11:34.513 --> 00:11:40.680
which is c.yes,
it's gonna be null, we return 0.

171
00:11:40.680 --> 00:11:43.414
So now we have 0 here.

172
00:11:46.048 --> 00:11:47.382
&gt;&gt; Bianca Gandolfo: How
do we feel about that?

173
00:11:49.300 --> 00:11:51.870
&gt;&gt; Bianca Gandolfo: All right,
we'll pop this off.

174
00:11:51.870 --> 00:11:54.040
Let's move this to our final solution.

175
00:11:56.150 --> 00:11:57.400
So we're popping this off.

176
00:11:59.730 --> 00:12:04.857
Now, we're returning 1 + 0,

177
00:12:04.857 --> 00:12:07.793
okay, from here.

178
00:12:07.793 --> 00:12:10.792
So right, 1, so this is now 1,

179
00:12:23.569 --> 00:12:24.863
&gt;&gt; Bianca Gandolfo: 2.

180
00:12:27.517 --> 00:12:28.572
&gt;&gt; Bianca Gandolfo: Easy, right?

181
00:12:28.572 --> 00:12:30.987
[LAUGH]
&gt;&gt; Speaker 2: [LAUGH]

182
00:12:30.987 --> 00:12:31.980
&gt;&gt; Bianca Gandolfo: Just kidding, but

183
00:12:31.980 --> 00:12:33.911
do you see how I reason through that?

184
00:12:33.911 --> 00:12:37.210
We're like, okay,
this boolean thing is not what we want.

185
00:12:37.210 --> 00:12:38.870
We want a number, let's get rid of it.

186
00:12:38.870 --> 00:12:41.637
But we still need to make sure
that we're dealing with null,

187
00:12:41.637 --> 00:12:43.059
how do we do that with a number?

188
00:12:43.059 --> 00:12:49.826
Okay, 0, like,
&gt;&gt; Bianca Gandolfo: That's the strategy.

189
00:12:58.596 --> 00:13:00.769
&gt;&gt; Bianca Gandolfo: I need one
question from the audience.

190
00:13:02.111 --> 00:13:03.715
&gt;&gt; Bianca Gandolfo: Can you gift it to me?

191
00:13:09.673 --> 00:13:10.879
&gt;&gt; Speaker 8: Is there
another way to do this?

192
00:13:12.600 --> 00:13:18.987
&gt;&gt; Bianca Gandolfo: You can do it
iterably and you can keep a variable.

193
00:13:18.987 --> 00:13:20.200
&gt;&gt; Speaker 8: That's the way
I would have done it [LAUGH].

194
00:13:20.200 --> 00:13:20.710
&gt;&gt; Bianca Gandolfo: Yeah.

195
00:13:20.710 --> 00:13:24.950
&gt;&gt; Speaker 2: So you don't need an
accumulative value to catch the one coming

196
00:13:24.950 --> 00:13:30.920
from two different spokes
even if they are nested?

197
00:13:32.050 --> 00:13:35.032
&gt;&gt; Bianca Gandolfo: If you're finding
that you're losing your value,

198
00:13:35.032 --> 00:13:40.340
it's cuz you didn't stand up for
yourself, no.

199
00:13:40.340 --> 00:13:45.176
It's because you didn't
return somewhere properly.

