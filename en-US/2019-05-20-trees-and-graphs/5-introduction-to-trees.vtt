WEBVTT

1
00:00:00.000 --> 00:00:03.583
&gt;&gt; Bianca Gandolfo: So, maybe we have
another question, like do you have milk,

2
00:00:03.583 --> 00:00:04.723
Yes or No, right?

3
00:00:04.723 --> 00:00:11.216
These are separate objects,
we have a third object here.

4
00:00:11.216 --> 00:00:17.132
And this one has the Recommendation, cool?

5
00:00:17.132 --> 00:00:24.174
So these are just objects with properties,
and then we combine them like this.

6
00:00:24.174 --> 00:00:29.075
So if you notice,
this Yes is now an object,

7
00:00:29.075 --> 00:00:32.261
and this No is now an object.

8
00:00:32.261 --> 00:00:35.052
Cool, so
we're just nesting our objects here.

9
00:00:35.052 --> 00:00:40.871
We all feel comfortable about that, we've
done that before in our life, probably.

10
00:00:40.871 --> 00:00:43.991
Yeah, so that's a tree, right?

11
00:00:43.991 --> 00:00:48.041
So we have our tree,
it's a hierarchical data structure.

12
00:00:48.041 --> 00:00:53.081
And we have nodes connected
with relationships.

13
00:00:53.081 --> 00:00:58.037
So our top node we call a root, right?

14
00:00:58.037 --> 00:01:02.700
We retain access to the root and
we explore the tree from the root.

15
00:01:02.700 --> 00:01:05.486
So we have things like left trees,
right trees.

16
00:01:05.486 --> 00:01:09.359
The interesting thing about a tree
is it's made up of more trees.

17
00:01:09.359 --> 00:01:12.374
So if we only had this node here,

18
00:01:12.374 --> 00:01:16.857
this would be a tree with one node in it,
right?

19
00:01:16.857 --> 00:01:21.119
If we remove this node and we only
have this left tree, this is a tree,

20
00:01:21.119 --> 00:01:22.380
this node is a tree.

21
00:01:22.380 --> 00:01:24.897
These three things are a tree,
all of these together are trees.

22
00:01:24.897 --> 00:01:28.471
So it's like our trees
are made up of other trees.

23
00:01:28.471 --> 00:01:33.038
And when you start to hear that, maybe
start having it click recursion, right?

24
00:01:33.038 --> 00:01:36.921
When we breaking down problems
into smaller versions of itself,

25
00:01:36.921 --> 00:01:39.193
that's gonna be recursive problem.

26
00:01:39.193 --> 00:01:43.357
So, we recursive data structures,
we have recursive algorithms,

27
00:01:43.357 --> 00:01:45.023
think about it in that way.

28
00:01:45.023 --> 00:01:49.093
And another thing we should know
about trees and the terminology, so

29
00:01:49.093 --> 00:01:51.492
we can talk the talk, is we have leaves.

30
00:01:51.492 --> 00:01:56.339
So a node that has no
children is a leaf node.

31
00:01:56.339 --> 00:02:01.182
And when we talk about the relationships
between nodes in a tree we talk about

32
00:02:01.182 --> 00:02:02.401
them like family.

33
00:02:02.401 --> 00:02:06.129
Like parent, child, sibling, so

34
00:02:06.129 --> 00:02:10.738
this root is a parent
to this left tree node.

35
00:02:10.738 --> 00:02:17.837
These two pink ones are siblings, etc.

36
00:02:17.837 --> 00:02:23.081
And we also would say this pink
node has an ancestor, right?

37
00:02:23.081 --> 00:02:26.010
So we just talk about it like
we're all family here, so

38
00:02:26.010 --> 00:02:27.804
be very comfortable about that.

39
00:02:27.804 --> 00:02:31.784
And if you don't know what it is, just
think about how you would actually talk

40
00:02:31.784 --> 00:02:34.183
about a family tree and
it's probably right.

41
00:02:34.183 --> 00:02:37.459
Or they'll think you're poetic,
that you know this so

42
00:02:37.459 --> 00:02:40.815
well that you're just inventing
terms that make sense.

43
00:02:40.815 --> 00:02:43.728
&gt;&gt; [LAUGH]
&gt;&gt; Bianca Gandolfo: What's a good one?

44
00:02:43.728 --> 00:02:48.280
I don't know, maybe this one's
the great aunt or something.

45
00:02:48.280 --> 00:02:53.324
Anyway, so talked about the terminology.

46
00:02:53.324 --> 00:02:54.837
Where do we see trees in real life?

47
00:02:54.837 --> 00:02:59.288
A DOM is a tree, who works in DOM,
in the browser land?

48
00:02:59.288 --> 00:03:04.075
Yeah, so you're dealing with trees all
the time, whether you know it or not.

49
00:03:04.075 --> 00:03:06.000
Did you guys know that, the DOM is a tree?

50
00:03:06.000 --> 00:03:09.647
Good, good, so autocomplete,
you start typing in Google.

51
00:03:09.647 --> 00:03:15.613
We did that on birthday, Florida man
activity, where you type in your birthday,

52
00:03:15.613 --> 00:03:20.461
and then Florida man, and
then whatever fills in says something.

53
00:03:20.461 --> 00:03:22.105
I don't know, it's just funny?

54
00:03:22.105 --> 00:03:22.622
Is that the point?

55
00:03:22.622 --> 00:03:24.306
It's just funny, okay?

56
00:03:24.306 --> 00:03:28.041
Sometimes it tells your future or
something.

57
00:03:28.041 --> 00:03:31.600
Or, in a past life,
you did that, I don't know.

58
00:03:31.600 --> 00:03:37.213
So this autocomplete feature uses
a kind of tree called a trie.

59
00:03:37.213 --> 00:03:42.176
And when we're coding or
running our code under the hood,

60
00:03:42.176 --> 00:03:46.341
parsing, we have these
abstract syntax trees.

61
00:03:46.341 --> 00:03:51.296
So they're all trees,
trees are everywhere, they're useful.

62
00:03:51.296 --> 00:03:55.452
Many trees is actually called a forest,
which I think is kinda cute.

63
00:03:55.452 --> 00:03:59.053
If you have lots of trees it's a forest.

64
00:03:59.053 --> 00:04:01.839
What else do I wanna tell you about trees?

65
00:04:01.839 --> 00:04:03.031
Do you guys have questions?

66
00:04:03.031 --> 00:04:03.572
Yeah.

67
00:04:03.572 --> 00:04:05.968
&gt;&gt; Speaker 2: So
this would be one-dimensional still, or

68
00:04:05.968 --> 00:04:08.626
is it two-dimensional, multi-dimensional?

69
00:04:08.626 --> 00:04:10.213
How do you, could you-
&gt;&gt; Bianca Gandolfo: What's

70
00:04:10.213 --> 00:04:11.192
a dimension to you?

71
00:04:11.192 --> 00:04:12.358
&gt;&gt; Speaker 2: Well, that's my question.

72
00:04:12.358 --> 00:04:12.937
&gt;&gt; Bianca Gandolfo: Yeah.

73
00:04:12.937 --> 00:04:17.456
&gt;&gt; Speaker 2: Cuz you guys brought that
up with the linear structures, and

74
00:04:17.456 --> 00:04:22.694
I was just, cuz those are, but
this is looks one-dimensional to me.

75
00:04:22.694 --> 00:04:24.681
&gt;&gt; Bianca Gandolfo: Yeah,
I see what you're saying.

76
00:04:24.681 --> 00:04:28.290
So I don't think about linear
versus non-linear, dimensional or

77
00:04:28.290 --> 00:04:30.898
not-dimensional, I think
about it in levels.

78
00:04:30.898 --> 00:04:35.706
Does it have like a single level or
does it have multiple levels?

79
00:04:35.706 --> 00:04:38.509
Does this seem like it's one level or
multiple levels to you?

80
00:04:38.509 --> 00:04:39.017
&gt;&gt; Speaker 2: Multiple levels.

81
00:04:39.017 --> 00:04:42.401
&gt;&gt; Bianca Gandolfo: Yeah, for sure.

