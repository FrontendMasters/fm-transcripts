WEBVTT

1
00:00:00.120 --> 00:00:01.590
&gt;&gt; Bianca: So here's our insert.

2
00:00:03.830 --> 00:00:08.271
So the first thing that we would change
is where we we don't want this dot value,

3
00:00:08.271 --> 00:00:10.274
we want this dot question, right?

4
00:00:10.274 --> 00:00:12.883
So every note is going to
have a question right?

5
00:00:12.883 --> 00:00:14.630
Seem reasonable?

6
00:00:14.630 --> 00:00:17.610
You guys believe me.
You have doubts?

7
00:00:17.610 --> 00:00:20.886
That looked like a doubting face.

8
00:00:20.886 --> 00:00:25.750
Okay, okay, and then instead of children,

9
00:00:25.750 --> 00:00:29.820
we're gonna have a yes, right?

10
00:00:29.820 --> 00:00:34.740
Which is gonna be,
let's just set it to null for now.

11
00:00:34.740 --> 00:00:39.140
And the reason I'm setting this to null
instead of undefined is because I want it

12
00:00:39.140 --> 00:00:43.450
to be clear that I set it to null,
and it's not

13
00:00:46.490 --> 00:00:50.788
just like a runtime thing assignment,
right?

14
00:00:50.788 --> 00:00:54.820
So runtime if something that's set it will
be undefined, but when I set something,

15
00:00:54.820 --> 00:00:58.690
I'm not gonna ever set it to undefined,
I'm always gonna set it to null.

16
00:00:58.690 --> 00:01:00.900
So it's a good thing,
they're basically the same thing, but

17
00:01:00.900 --> 00:01:03.920
that's an important differentiator.

18
00:01:03.920 --> 00:01:06.100
Especially for debugging and
stuff like that.

19
00:01:06.100 --> 00:01:11.290
Okay, so here we go.

20
00:01:11.290 --> 00:01:15.530
Anything else?
&gt;&gt; Speaker 2: You could add an answer

21
00:01:15.530 --> 00:01:20.202
property to distinguish-

22
00:01:20.202 --> 00:01:24.453
&gt;&gt; Bianca: Like the recommendation?

23
00:01:24.453 --> 00:01:25.227
&gt;&gt; Speaker 2: Yeah.

24
00:01:28.499 --> 00:01:34.830
&gt;&gt; Bianca: So,
&gt;&gt; Bianca: We could also pass that in.

25
00:01:34.830 --> 00:01:37.430
So, if there is a recommendation, right?

26
00:01:38.770 --> 00:01:43.285
Man, this is a long word,
right, we wanna set it.

27
00:01:49.971 --> 00:01:56.232
&gt;&gt; Bianca: Seem reasonable?

28
00:01:56.232 --> 00:01:57.880
Or we could give it a default value.

29
00:02:05.800 --> 00:02:06.300
&gt;&gt; Bianca: Something like this.

30
00:02:09.761 --> 00:02:12.592
&gt;&gt; Bianca: Cool, all right.

31
00:02:12.592 --> 00:02:17.802
So that's instantiating.

32
00:02:17.802 --> 00:02:21.950
Now, just one question, right?

33
00:02:21.950 --> 00:02:26.920
Now if we want to add a child, right?

34
00:02:26.920 --> 00:02:31.796
We wanna add a question, or

35
00:02:31.796 --> 00:02:38.380
a recommendation, to our chat bot.

36
00:02:38.380 --> 00:02:39.330
What do we need to change here?

37
00:02:49.175 --> 00:02:52.108
&gt;&gt; Speaker 2: Having a function for
inserting a question or

38
00:02:52.108 --> 00:02:56.854
inserting a recommendation,
because you need different parameters.

39
00:02:56.854 --> 00:03:02.170
&gt;&gt; Bianca: Yeah, or
just keep it in one for now.

40
00:03:02.170 --> 00:03:04.740
So we'll need a pass in those questions or
recommendations.

41
00:03:07.310 --> 00:03:12.281
The other thing that we could do, since
a question is never a recommendation,

42
00:03:12.281 --> 00:03:15.910
we can always just,
this could be display text, right.

43
00:03:17.440 --> 00:03:20.500
So we always have a display text, right?

44
00:03:20.500 --> 00:03:23.220
It could be a question or
it could be recommendation.

45
00:03:24.780 --> 00:03:29.790
If it's a question, or if it's
recommendation, then the SNO will be null,

46
00:03:29.790 --> 00:03:35.100
like that's another way we can derive
whether it's a question or recommendation.

47
00:03:35.100 --> 00:03:40.670
But let's just make it explicit
to make it simpler for everybody.

48
00:03:42.650 --> 00:03:47.290
Okay, so
we're gonna have to make a new tree.

49
00:03:47.290 --> 00:03:48.650
We'll just keep calling this tree.

50
00:03:48.650 --> 00:03:56.060
And we'll add,
we'll just past these down, okay?

51
00:03:59.435 --> 00:04:03.280
&gt;&gt; Bianca: Now,
this is where it gets interesting, right.

52
00:04:03.280 --> 00:04:08.241
So this.children.push.

53
00:04:12.719 --> 00:04:15.210
&gt;&gt; Bianca: What do we need to know?

54
00:04:15.210 --> 00:04:17.570
Let's just pretend there's
no recommendations for now.

55
00:04:18.650 --> 00:04:20.660
Let's just stick with
questions to simplify.

56
00:04:22.710 --> 00:04:25.990
&gt;&gt; Speaker 2: So do we need to know
if we're pushing the yes or no?

57
00:04:25.990 --> 00:04:28.586
&gt;&gt; Bianca: Yeah, how can we do that?

58
00:04:37.120 --> 00:04:38.146
&gt;&gt; Bianca: Another parameter, right?

59
00:04:38.146 --> 00:04:42.620
All right, I'm gonna call it side,
it'll be the yes side or the no side.

60
00:04:42.620 --> 00:04:43.376
Anyone have a better name?

61
00:04:43.376 --> 00:04:47.176
No, okay.

62
00:04:47.176 --> 00:04:52.549
So, if we could say this.

63
00:04:58.045 --> 00:05:05.205
&gt;&gt; Bianca: [side] = question,

64
00:05:05.205 --> 00:05:10.933
so let's call this

65
00:05:10.933 --> 00:05:15.587
newQuestion.

66
00:05:20.306 --> 00:05:24.720
&gt;&gt; Bianca: Cool, again, there's
a danger here, what's the danger here?

67
00:05:27.356 --> 00:05:30.640
&gt;&gt; Speaker 2: Maybe, [INAUDIBLE].

68
00:05:30.640 --> 00:05:36.060
&gt;&gt; Bianca: Yeah, like maybe people,
the consumer of your tree isn't,

69
00:05:36.060 --> 00:05:40.460
this is something that they pass,
yep, or something weird, and

70
00:05:40.460 --> 00:05:43.310
it's not lining up with your expectations.

71
00:05:43.310 --> 00:05:46.560
But for simplicity,
as long as we were aware of that,

72
00:05:46.560 --> 00:05:48.650
it's fine we can add a check.

73
00:05:48.650 --> 00:05:54.530
You know, in an interview setting,
you know, if you do something like this in

74
00:05:54.530 --> 00:05:59.710
your interview might say, like you know,
what if it's a user error and

75
00:05:59.710 --> 00:06:05.670
then you can say, you know, I will put
a check in, and then you can ask them.

76
00:06:05.670 --> 00:06:08.440
Would you like me to do that, or

77
00:06:08.440 --> 00:06:11.100
do you want me to focus on
actually solving the problem?

78
00:06:11.100 --> 00:06:15.343
Like, you can get caught up in these
details of if it's undefined, all of this

79
00:06:15.343 --> 00:06:19.800
air checking stuff that might take away
from you actually finishing the problem.

80
00:06:19.800 --> 00:06:23.360
And so it's useful to prioritize and
to talk with your interviewer,

81
00:06:23.360 --> 00:06:25.170
because maybe it's really important for

82
00:06:25.170 --> 00:06:30.765
your job to demonstrate that you know
how to check for edge cases early on.

83
00:06:31.860 --> 00:06:34.660
You know, just talk with your
interviewer and see what they think.

84
00:06:34.660 --> 00:06:36.940
But just let them know that
you're thinking about it and

85
00:06:36.940 --> 00:06:39.980
you're making a decision right
now to not prioritize that,

86
00:06:39.980 --> 00:06:43.560
because you're making a trade off for
time and you really wanna focus,

87
00:06:43.560 --> 00:06:48.150
perhaps, on the meat of solving the
problem rather than catching these errors.

88
00:06:49.180 --> 00:06:53.116
Both are important, but
it just kinda like, one of them shows.

89
00:06:53.116 --> 00:06:56.907
This approach shows that you're
thinking about it, you're aware of it,

90
00:06:56.907 --> 00:06:58.600
also it might save you some time.

91
00:07:00.640 --> 00:07:02.061
Okay, cool.

92
00:07:06.282 --> 00:07:07.434
&gt;&gt; Bianca: We good?

93
00:07:11.096 --> 00:07:12.088
&gt;&gt; Bianca: Or are we great?

94
00:07:12.088 --> 00:07:13.535
Are we great?

95
00:07:13.535 --> 00:07:16.550
I'm feeling good.

96
00:07:16.550 --> 00:07:17.800
I'm happy about our little tree.

97
00:07:19.700 --> 00:07:20.780
There's some improvements.

98
00:07:21.880 --> 00:07:22.440
I still feel pretty good about it.

99
00:07:25.706 --> 00:07:28.831
&gt;&gt; Bianca: Cool, all right, back to it.

100
00:07:35.634 --> 00:07:40.467
&gt;&gt; Bianca: Okay, so, you're here, we took
a little detour to talk about how we could

101
00:07:40.467 --> 00:07:45.330
even get here from where we were,
I think that was important for us, yeah?

102
00:07:46.410 --> 00:07:51.040
Okay, so
now that we're here we need to figure out

103
00:07:51.040 --> 00:07:56.190
how do we get to the point where we know
we're at a recommendation, all right.

104
00:07:56.190 --> 00:07:59.420
So off the bat we know that we need to

105
00:07:59.420 --> 00:08:02.340
look at every single
node of the tree right.

106
00:08:02.340 --> 00:08:07.570
Does anyone think there's
a way to get past that?

107
00:08:07.570 --> 00:08:09.339
Read this, this would be an optimization.

108
00:08:13.827 --> 00:08:18.892
&gt;&gt; Speaker 2: So if yes, or no, or
not null on a node go to the next node,

109
00:08:18.892 --> 00:08:23.549
keep going down until you
find one that's not null?

110
00:08:23.549 --> 00:08:24.573
&gt;&gt; Bianca: Mm-hm, yeah, so

111
00:08:24.573 --> 00:08:28.500
that would require you going
through the entire array, right?

112
00:08:28.500 --> 00:08:32.021
So we would traverse through
the entire array or tree.

113
00:08:35.255 --> 00:08:35.900
&gt;&gt; Bianca: Anything?

114
00:08:37.010 --> 00:08:37.990
Keep it in your mind.

115
00:08:37.990 --> 00:08:39.020
Just keep it on your mind.

116
00:08:39.020 --> 00:08:39.810
We'll revisit.

