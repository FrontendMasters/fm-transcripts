WEBVTT

1
00:00:00.000 --> 00:00:03.498
&gt;&gt; Bianca Gandolfo: So we talked a little
bit about how this is like a family tree.

2
00:00:03.498 --> 00:00:10.690
Prior, we were looking at using
objects to represent the nesting.

3
00:00:10.690 --> 00:00:14.741
Here we have three people,
we have a mother, a son and a daughter.

4
00:00:14.741 --> 00:00:20.956
And we can see that we're creating a tree
data structure here through the children

5
00:00:20.956 --> 00:00:26.647
property, which holds a reference to
the son and the daughter in or no way.

6
00:00:26.647 --> 00:00:30.314
So again,
when we are working with our trees,

7
00:00:30.314 --> 00:00:35.312
we can use objects,
messing with objects, we can use arrays.

8
00:00:35.312 --> 00:00:39.264
Why will we use an array
instead of an object?

9
00:00:39.264 --> 00:00:42.317
&gt;&gt; Speaker 2: I had like a risk is
of the index of you can kind of find

10
00:00:42.317 --> 00:00:47.080
the index of whatever object you're
looking for pretty quickly with an array.

11
00:00:47.080 --> 00:00:49.971
&gt;&gt; Bianca Gandolfo: Yeah, so there are
some like array methods that are useful

12
00:00:49.971 --> 00:00:52.343
like index love,
maybe even a length, right?

13
00:00:52.343 --> 00:00:57.901
Maybe you wanna know how
many children there are.

14
00:00:57.901 --> 00:00:58.717
&gt;&gt; Speaker 2: When order matters.

15
00:00:58.717 --> 00:01:00.174
&gt;&gt; Bianca Gandolfo: When order matters,
right?

16
00:01:00.174 --> 00:01:03.778
Maybe the son is older or
younger than the daughter and

17
00:01:03.778 --> 00:01:08.114
we want to arrange it by like birth
order or something like that.

18
00:01:08.114 --> 00:01:12.066
Yeah, absolutely, so
just something to think about.

19
00:01:12.066 --> 00:01:12.855
There are many ways.

20
00:01:12.855 --> 00:01:17.850
Think about when you are implementing
your tree right now using this exercise.

