WEBVTT

1
00:00:00.000 --> 00:00:03.479
&gt;&gt; Bianca Gandolfo: Morning routines,
so what you're supposed to do.

2
00:00:03.479 --> 00:00:11.448
And I do plan, I was reading my goal
journals from since I was a teenager.

3
00:00:11.448 --> 00:00:16.442
And that's always, exercise twice a day or
something stupid like that.

4
00:00:16.442 --> 00:00:20.158
No offense to anyone who does that.

5
00:00:20.158 --> 00:00:22.237
But I have these big goals.

6
00:00:22.237 --> 00:00:25.506
I'll plan in the morning, I'll wake up.

7
00:00:25.506 --> 00:00:29.740
I'll have some fancy tea and
I'll just feel great,

8
00:00:29.740 --> 00:00:34.080
I'll meditate in the forest,
something like that.

9
00:00:34.080 --> 00:00:39.160
But the reality is I wait
until the very last minute.

10
00:00:39.160 --> 00:00:41.303
I do get up and feed my cat.

11
00:00:41.303 --> 00:00:44.720
I wait until the very last minute,
and then I roll out of bed.

12
00:00:44.720 --> 00:00:45.900
My husband makes a coffee for

13
00:00:45.900 --> 00:00:51.120
me every morning, which is great,
so I have coffee there already.

14
00:00:51.120 --> 00:00:56.060
And then I rush to get ready, and
he has very strict meetings, so

15
00:00:56.060 --> 00:00:59.530
that makes me have to leave at
a certain time, otherwise he's late.

16
00:00:59.530 --> 00:01:02.924
We commute together and we make it.

17
00:01:02.924 --> 00:01:07.623
And I get to work and have a slow
start and drink more coffee and

18
00:01:07.623 --> 00:01:11.415
catch up on some things and
it's working for me.

19
00:01:11.415 --> 00:01:17.823
But one thing that I do have
trouble with is the food part.

20
00:01:17.823 --> 00:01:22.320
Having to make these
decisions really early

21
00:01:22.320 --> 00:01:26.581
in the morning is basically impossible.

22
00:01:26.581 --> 00:01:31.347
So being a technologist,
I was like, we can solve this.

23
00:01:31.347 --> 00:01:32.222
We can solve this.

24
00:01:32.222 --> 00:01:36.906
We can just make a chat-bot that
tells us what to eat every morning.

25
00:01:36.906 --> 00:01:39.598
It knows us, we know them.

26
00:01:39.598 --> 00:01:44.333
We can be in bed and do this, easy.

27
00:01:44.333 --> 00:01:45.448
So let's do that.

28
00:01:45.448 --> 00:01:47.088
Are you guys ready?

29
00:01:47.088 --> 00:01:48.105
We're gonna make a chat-bot.

30
00:01:48.105 --> 00:01:51.479
It's gonna help us choose
breakfast in the morning.

31
00:01:51.479 --> 00:01:54.179
Seems simple, but

32
00:01:54.179 --> 00:01:59.412
there's potential here to expand,

33
00:01:59.412 --> 00:02:03.978
can recommend lunch, dinner.

34
00:02:03.978 --> 00:02:06.801
Nothing is too small.

35
00:02:06.801 --> 00:02:07.563
You ready?

36
00:02:07.563 --> 00:02:09.154
Now is the instruction part.

37
00:02:09.154 --> 00:02:10.429
Story time is over.

38
00:02:10.429 --> 00:02:15.249
So the first thing we need to
do when we're creating software

39
00:02:15.249 --> 00:02:18.661
is think about our underlying data model.

40
00:02:18.661 --> 00:02:24.262
How are we gonna implement our
chat-bot with questions and answers?

41
00:02:24.262 --> 00:02:27.543
How's that gonna work?

42
00:02:27.543 --> 00:02:32.447
So I dig deep into my data structures and
algorithm knowledge.

43
00:02:32.447 --> 00:02:34.640
And I'm like, we'll use an object.

44
00:02:34.640 --> 00:02:35.635
Why not, it's easy.

45
00:02:35.635 --> 00:02:37.547
We'll just use an object.

46
00:02:37.547 --> 00:02:39.181
Why make it complicated?

47
00:02:39.181 --> 00:02:40.819
Never over optimize.

48
00:02:40.819 --> 00:02:43.269
Let's start, we'll make an object.

49
00:02:43.269 --> 00:02:46.470
This object will have the question.

50
00:02:46.470 --> 00:02:48.910
The first question is,
do you feel like cooking?

51
00:02:48.910 --> 00:02:50.540
Answer is always no.

52
00:02:50.540 --> 00:02:54.010
But we have options for those of you who
are into the cooking thing in the morning.

53
00:02:54.010 --> 00:02:56.961
I don't know, maybe it's a day off or

54
00:02:56.961 --> 00:03:01.122
something and
you make a nice breakfast on a holiday.

55
00:03:01.122 --> 00:03:06.698
So then we have our next steps,
we have the yes and the no.

56
00:03:06.698 --> 00:03:10.414
And then maybe that will
ask more questions.

57
00:03:10.414 --> 00:03:15.765
So, we have the same structure
where we have this branching logic.

58
00:03:15.765 --> 00:03:17.416
So, do you feel like cooking?

59
00:03:17.416 --> 00:03:19.266
Yes.
Okay next.

60
00:03:19.266 --> 00:03:25.543
Maybe do you have toast, yes or no?

61
00:03:25.543 --> 00:03:30.917
Etc., until we reach a point where we
are able to make a recommendation.

62
00:03:30.917 --> 00:03:32.363
Everyone following here?

63
00:03:32.363 --> 00:03:38.043
Here's the code, here is the picture.

64
00:03:38.043 --> 00:03:42.100
In these data structures classes,
we always draw circles,

65
00:03:42.100 --> 00:03:46.721
we put some numbers in it or
some words and we connect them with lines.

66
00:03:46.721 --> 00:03:49.646
I think it's really important
to think about it like that.

67
00:03:49.646 --> 00:03:54.814
But it's also just as important to
be able to look at this diagram and

68
00:03:54.814 --> 00:03:58.541
have some sense of how
that might look with code.

69
00:03:58.541 --> 00:04:00.844
So that's why I like
to have both of these.

70
00:04:00.844 --> 00:04:03.642
If at some point,
you're seeing a diagram and

71
00:04:03.642 --> 00:04:08.109
your mind isn't really clicking with
this code might look like, ask me.

72
00:04:08.109 --> 00:04:12.806
That's super, super important
because we aren't diagram drawers.

73
00:04:12.806 --> 00:04:14.946
We're software engineers,
we're programmers,

74
00:04:14.946 --> 00:04:16.602
we need to actually code this stuff out.

