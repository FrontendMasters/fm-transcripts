WEBVTT

1
00:00:00.840 --> 00:00:04.040
&gt;&gt; Bianca Gandolfo: So
let's walk through this solution.

2
00:00:04.040 --> 00:00:08.820
So we have our BFS,
we start with any node.

3
00:00:08.820 --> 00:00:12.080
Again, let's just start with one for
consistency and

4
00:00:12.080 --> 00:00:13.300
we'll see how this is different.

5
00:00:14.840 --> 00:00:20.290
Cool, so we're going to push our
starting node into the queue,

6
00:00:20.290 --> 00:00:22.770
and we're gonna mark it as visited.

7
00:00:22.770 --> 00:00:25.417
So queue does have a length,
we are going to shift,

8
00:00:25.417 --> 00:00:28.691
which means we're going to remove
the beginning of the queue.

9
00:00:31.908 --> 00:00:35.746
&gt;&gt; Bianca Gandolfo: And then we
are going to add all of the neighbors,

10
00:00:35.746 --> 00:00:41.778
all of these people,
&gt;&gt; Bianca Gandolfo: To,

11
00:00:44.080 --> 00:00:49.360
&gt;&gt; Bianca Gandolfo: Our queue, okay.

12
00:00:49.360 --> 00:00:51.400
And then we're gonna do work, right?

13
00:00:51.400 --> 00:00:53.963
So in this case, we've come to log in,

14
00:00:53.963 --> 00:00:59.430
it's gonna,
&gt;&gt; Bianca Gandolfo: Look like that,

15
00:00:59.430 --> 00:01:05.972
and then for each neighbor,
&gt;&gt; Bianca Gandolfo: For

16
00:01:05.972 --> 00:01:10.380
the neighbors, each neighbor,
if it's not visited, we're gonna push it.

17
00:01:10.380 --> 00:01:15.370
So we did that already here, and
we're gonna mark it as visited.

18
00:01:15.370 --> 00:01:19.950
So we're gonna add two and
five to our visited list.

19
00:01:21.410 --> 00:01:26.520
And we're gonna start over again, so we're
gonna take off the two from our queue.

20
00:01:27.750 --> 00:01:31.509
We are going to capture all the neighbors,
there's a lot.

21
00:01:31.509 --> 00:01:34.381
And we're gonna do work.

22
00:01:37.894 --> 00:01:39.020
&gt;&gt; Bianca Gandolfo: Actually,
it's gonna log like this.

23
00:01:39.020 --> 00:01:43.700
We're gonna do some work,
in this case console log and then, for

24
00:01:43.700 --> 00:01:47.390
each of our neighbor that's unvisited.

25
00:01:47.390 --> 00:01:51.188
So, one is visited to get that,

26
00:01:51.188 --> 00:01:57.750
five is visited skip that
three is not visited.

27
00:01:57.750 --> 00:02:03.740
So we're going to push three, and
we're going to mark it as visited.

28
00:02:06.160 --> 00:02:07.920
And we're gonna go back up to the top.

29
00:02:09.540 --> 00:02:12.616
We're going to remove the next

30
00:02:12.616 --> 00:02:19.221
one,
&gt;&gt; Bianca Gandolfo: And grab

31
00:02:19.221 --> 00:02:23.671
all of its neighbors, there are all of
its neighbors, we're gonna do some work.

32
00:02:29.279 --> 00:02:32.718
&gt;&gt; Bianca Gandolfo: And for each of the
it's neighbors, if it's not visited, so

33
00:02:32.718 --> 00:02:34.640
we're looking at five.

34
00:02:34.640 --> 00:02:37.050
Four is not visited so
we're gonna add it to the queue.

35
00:02:38.930 --> 00:02:41.669
One is visited, two is visited, all right?

36
00:02:41.669 --> 00:02:46.300
So queue that link, and we're gonna
take the next one which is three.

37
00:02:48.280 --> 00:02:53.448
And we're gonna do some work, and
for each of its neighbors two and

38
00:02:53.448 --> 00:02:58.044
four that aren't visited,
that's two visited, no.

39
00:02:58.044 --> 00:02:58.927
We forgot to add four.

40
00:03:02.993 --> 00:03:06.630
&gt;&gt; Bianca Gandolfo: Okay, so,
&gt;&gt; Bianca Gandolfo: We did three,

41
00:03:06.630 --> 00:03:08.550
so two and four are visited.

42
00:03:09.640 --> 00:03:16.686
So we don't do anything,
and then we pop off four.

43
00:03:16.686 --> 00:03:21.530
We do some work,
does it have any unvisited?

44
00:03:21.530 --> 00:03:22.030
Nope.

45
00:03:24.759 --> 00:03:28.451
&gt;&gt; Bianca Gandolfo: And that's it, so
the way that this prints out, it goes one,

46
00:03:28.451 --> 00:03:31.800
and then the first layer is
these two adjacent, right.

47
00:03:32.850 --> 00:03:38.120
And then, it goes to two

48
00:03:38.120 --> 00:03:42.290
after and visits its adjacents.

49
00:03:42.290 --> 00:03:47.938
And then after that, this is a pretty
small graph, then we just return.

50
00:03:47.938 --> 00:03:52.634
So when you see how it goes layer by
layer, versus the other one would go

51
00:03:52.634 --> 00:03:56.790
through all of an entire unvisited
path before returning up.

52
00:03:58.260 --> 00:04:03.180
Again, this is an editor approach,
you can also easily do this for.

53
00:04:03.180 --> 00:04:08.998
Actually no, you can't, cuz it's a queue.

54
00:04:08.998 --> 00:04:16.440
Well, okay, you can, it is not
recommended, it is not recommended.

55
00:04:16.440 --> 00:04:19.515
Okay,
&gt;&gt; Bianca Gandolfo: Great,

56
00:04:19.515 --> 00:04:23.660
let's talk about time
complexity with the code open.

57
00:04:23.660 --> 00:04:27.450
So, because we are implementing
this with an array,

58
00:04:27.450 --> 00:04:29.740
it's a little bit different
because we are shifting.

59
00:04:29.740 --> 00:04:33.420
Remember shifting is linear,
is it different?

60
00:04:33.420 --> 00:04:35.570
No, I think it's fine actually.

61
00:04:35.570 --> 00:04:40.180
Well, so
we are shifting inside of a loop, and

62
00:04:40.180 --> 00:04:43.090
that should throw some red flags, right?

63
00:04:43.090 --> 00:04:46.680
If you're shifting inside of a loop,
that's starting to look a little bit

64
00:04:46.680 --> 00:04:51.240
like N squared, so keep that in mind.

65
00:04:51.240 --> 00:04:56.290
However, you probably wanna
implement this with a link list,

66
00:04:56.290 --> 00:04:58.650
so that you don't have to shift.

67
00:04:58.650 --> 00:05:03.460
You can just remove from the front,
in constant time and call it a day.

68
00:05:03.460 --> 00:05:06.980
And this would just be linear because
we'd only be worrying about the work

69
00:05:06.980 --> 00:05:08.420
of this while loop.

70
00:05:08.420 --> 00:05:14.390
Everything else is not a big deal,

71
00:05:14.390 --> 00:05:18.551
especially here because
even though it is looping.

72
00:05:18.551 --> 00:05:24.041
Through all the neighbors,
it's not really doing much work.

73
00:05:24.041 --> 00:05:28.991
Cuz it's not really getting into
if the neighbor is unvisited.

74
00:05:28.991 --> 00:05:34.921
So, I would say that that's fine,
I would say linear.

