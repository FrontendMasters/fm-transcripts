WEBVTT

1
00:00:00.000 --> 00:00:05.149
&gt;&gt; Bianca Gandolfo: Let's talk
about different types of graphs.

2
00:00:05.149 --> 00:00:10.025
So we've been dealing with
undirected graphs which

3
00:00:10.025 --> 00:00:14.692
means that you can go from E to A,
A to E no problem.

4
00:00:14.692 --> 00:00:18.480
But there are such thing
as a directed graph, so

5
00:00:18.480 --> 00:00:21.710
a directed graph is what it sounds like.

6
00:00:21.710 --> 00:00:24.295
It has a direction
associated with an edge.

7
00:00:24.295 --> 00:00:29.819
So we've been talking a lot about
adding values to the vertices.

8
00:00:29.819 --> 00:00:35.644
We didn't talk much about adding data on
the edges which we can totally do, right?

9
00:00:35.644 --> 00:00:37.415
So we can give a direction.

10
00:00:37.415 --> 00:00:42.052
So in this graph here,
we can only travel from E to A, right?

11
00:00:42.052 --> 00:00:47.546
And A, we can't travel back to E
because it's directed the wrong way.

12
00:00:47.546 --> 00:00:53.944
And so this is like maps out to real
life things like one way roads and

13
00:00:53.944 --> 00:00:57.841
etc., anything that has a direction.

14
00:00:57.841 --> 00:01:04.838
And then we have the concept of
weighted or unweighted edges.

15
00:01:04.838 --> 00:01:09.045
So back to this map example,
that would be,

16
00:01:09.045 --> 00:01:13.378
maybe the distance from
E to A is seven miles.

17
00:01:13.378 --> 00:01:18.834
And that's a really long one-way street,

18
00:01:18.834 --> 00:01:21.789
that sounds terrible.

19
00:01:21.789 --> 00:01:25.740
And then we have unweighted
which we have been dealing with.

20
00:01:25.740 --> 00:01:30.708
Self loops, we talked a little bit about
self loops or the loop points to itself,

21
00:01:30.708 --> 00:01:33.059
where the edge points to its own self.

22
00:01:33.059 --> 00:01:38.872
The node's edge points to itself.

23
00:01:38.872 --> 00:01:41.834
Then we have sparse and
dense types of graphs.

24
00:01:41.834 --> 00:01:48.637
So most graphs are sparse, which means
that there are more vertices than edges.

25
00:01:48.637 --> 00:01:53.609
Dense means that there's a lot of edges,
yeah, and

26
00:01:53.609 --> 00:01:57.001
then there's cyclic and acyclic.

27
00:01:57.001 --> 00:01:59.668
So are there cycles, are there no cycles?

28
00:01:59.668 --> 00:02:02.330
So can you go in a circle or not?

29
00:02:04.670 --> 00:02:05.931
Those are some properties of graphs.

30
00:02:05.931 --> 00:02:09.123
And based on these properties,

31
00:02:09.123 --> 00:02:13.744
it changes how you deal with a problem,
yeah?

32
00:02:13.744 --> 00:02:17.874
And I wanted to just like,
bring up the adjacency matrix and

33
00:02:17.874 --> 00:02:22.005
the adjacency list, and
talk about these properties, and

34
00:02:22.005 --> 00:02:26.647
how they're gonna change the way
that this data structure looks.

35
00:02:26.647 --> 00:02:28.540
Does that sound good?

36
00:02:28.540 --> 00:02:31.724
So for a directed graph,

37
00:02:31.724 --> 00:02:37.645
how would that change
this adjacency matrix?

38
00:02:37.645 --> 00:02:39.838
What do you think, Michael?

39
00:02:39.838 --> 00:02:41.064
&gt;&gt; Speaker 2: A direct it.

40
00:02:41.064 --> 00:02:44.575
&gt;&gt; Bianca Gandolfo: Yeah,
so it has a direction.

41
00:02:44.575 --> 00:02:47.694
We have adjacency matrix from earlier.

42
00:02:47.694 --> 00:02:49.466
&gt;&gt; Speaker 2: [INAUDIBLE] more logic,

43
00:02:49.466 --> 00:02:55.415
cuz you have to know the constraints in
which way we go, just thinking out loud.

44
00:02:55.415 --> 00:02:57.594
&gt;&gt; Bianca Gandolfo: Yeah,
how could you represent that?

45
00:02:57.594 --> 00:03:02.079
So in this case,
when we represent an edge, so

46
00:03:02.079 --> 00:03:08.060
2 is connected to 1, so
we have a 1 here and we have a 1 here.

47
00:03:08.060 --> 00:03:13.235
How could we just say
only 1 is connected to 2?

48
00:03:13.235 --> 00:03:15.783
&gt;&gt; Speaker 2: I think you would
have to add more metadata on that.

49
00:03:15.783 --> 00:03:20.075
&gt;&gt; Bianca Gandolfo: Actually you don't,
all you have to do is only put one 1.

50
00:03:20.075 --> 00:03:25.947
So if we wanna say that
two is connected to 1, but

51
00:03:25.947 --> 00:03:33.128
1 is not connected to 2,
we would remove the edge from 1.

52
00:03:33.128 --> 00:03:36.673
So this would just be a 0.

53
00:03:36.673 --> 00:03:40.420
So we would never be able
to travel from 1 to 2,

54
00:03:40.420 --> 00:03:44.847
but 2, we could still travel
back to 1 with this edge.

55
00:03:44.847 --> 00:03:46.704
Does everyone see that?

56
00:03:46.704 --> 00:03:47.650
Awesome.

57
00:03:49.126 --> 00:03:52.060
&gt;&gt; Bianca Gandolfo: What
about adjacency list?

58
00:03:52.060 --> 00:03:53.364
How about Joe?

59
00:03:56.924 --> 00:03:58.866
&gt;&gt; Speaker 3: I'm not quite sure.

60
00:03:58.866 --> 00:03:59.860
&gt;&gt; Bianca Gandolfo: Not sure?

61
00:03:59.860 --> 00:04:00.444
That's fair.

62
00:04:00.444 --> 00:04:06.366
How do we represent an edge in
an adjacency list before this?

63
00:04:06.366 --> 00:04:07.305
Do you remember?

64
00:04:08.328 --> 00:04:09.759
&gt;&gt; Bianca Gandolfo: No?
That's okay.

65
00:04:09.759 --> 00:04:11.629
What about Michael number two,
do you remember?

66
00:04:11.629 --> 00:04:17.447
&gt;&gt; Speaker 4: Yeah,
it's listed as the 2 under the 1 property.

67
00:04:17.447 --> 00:04:18.417
&gt;&gt; Bianca Gandolfo: Yeah.

68
00:04:18.417 --> 00:04:23.664
&gt;&gt; Speaker 4: So you would remove that and
leave it and the 2 property.

69
00:04:23.664 --> 00:04:28.159
&gt;&gt; Bianca Gandolfo: Yeah, so
here, this says 1 is connected 2.

70
00:04:28.159 --> 00:04:30.653
This says 2 is connected to 1, right?

71
00:04:30.653 --> 00:04:37.008
So that is not directed, I mean you can
have interdirected graph to be clear.

72
00:04:37.008 --> 00:04:41.492
You can have like a two way street.

73
00:04:41.492 --> 00:04:47.139
But in this case, we will only have
one direction, you would remove one.

74
00:04:47.139 --> 00:04:49.958
Cool, what about weighted?

75
00:04:52.469 --> 00:04:57.700
&gt;&gt; Bianca Gandolfo: How will we represent
a weighted edge and an adjacency matrix?

76
00:04:57.700 --> 00:05:00.353
Eric, do you have a thought?

77
00:05:00.353 --> 00:05:04.245
&gt;&gt; Speaker 5: Say the distance
between one and two,

78
00:05:04.245 --> 00:05:08.385
it doesn't make sense, I'm not sure.

79
00:05:08.385 --> 00:05:09.294
&gt;&gt; Bianca Gandolfo: Okay, that's fine.

80
00:05:09.294 --> 00:05:13.720
&gt;&gt; Speaker 5: May be in the matrix you
could use numbers more higher than one.

81
00:05:13.720 --> 00:05:14.702
&gt;&gt; Bianca Gandolfo: Yeah.

82
00:05:14.702 --> 00:05:17.724
&gt;&gt; Speaker 5: So that it starts at seven.

83
00:05:17.724 --> 00:05:19.450
You could a seven, it's [CROSSTALK]
&gt;&gt; Bianca Gandolfo: Sure, and

84
00:05:19.450 --> 00:05:23.380
then to mark it as empty,
you can put a null in there or something.

85
00:05:23.380 --> 00:05:26.666
Something to differentiate so
you don't have weird edge cases.

86
00:05:26.666 --> 00:05:31.616
So what if the distance is zero and
then you think you don't have an edge,

87
00:05:31.616 --> 00:05:32.356
for sure.

88
00:05:32.356 --> 00:05:37.363
Yeah, so Sony do you know or
Sony, do you know how

89
00:05:37.363 --> 00:05:43.975
we might be able to represent
a weighted edge in our agency list?

90
00:05:47.581 --> 00:05:51.629
&gt;&gt; Speaker 6: Or
we can save them as an object with key and

91
00:05:51.629 --> 00:05:54.179
weight attached to them.

92
00:05:54.179 --> 00:05:56.752
&gt;&gt; Bianca Gandolfo: Yeah, exactly.

93
00:05:56.752 --> 00:05:57.814
All right, so now,

94
00:05:57.814 --> 00:06:01.887
let's talk about how we might represent
self loops in the adjacency matrix.

95
00:06:05.025 --> 00:06:10.376
&gt;&gt; Speaker 7: Instead of having a 0 at
the 1, 1 position, you would have a 1,

96
00:06:10.376 --> 00:06:17.084
or if it ended up being weighted somehow,
then you'd use whatever value that was.

97
00:06:17.084 --> 00:06:21.270
&gt;&gt; Bianca Gandolfo: Yeah, fancy, a
weighted self loop, I like it, very cool.

98
00:06:21.270 --> 00:06:23.978
All right, Karim, self loop and

99
00:06:23.978 --> 00:06:28.251
the adjacency list,
do you have a thought you like?

100
00:06:28.251 --> 00:06:31.091
&gt;&gt; Speaker 8: I guess you'd stick
the number on the left in the array on

101
00:06:31.091 --> 00:06:31.700
the right.

102
00:06:33.110 --> 00:06:40.025
&gt;&gt; Bianca Gandolfo: Yeah, you said add
itself to its own adjacency list, yep.

103
00:06:40.025 --> 00:06:44.756
Sparse and dense isn't really
something that we represent.

104
00:06:44.756 --> 00:06:47.115
It's just sort of a characteristic, right?

105
00:06:47.115 --> 00:06:51.706
So like a dense adjacency matrix
will have like a lot of ones, right?

106
00:06:51.706 --> 00:06:57.710
And a dense adjacency list would
have a lot of references here.

107
00:06:57.710 --> 00:07:00.126
And then cyclic or acyclic,

108
00:07:00.126 --> 00:07:06.077
that's something that you would
have to detect through traversing.

109
00:07:10.823 --> 00:07:14.531
&gt;&gt; Speaker 2: If it's acyclic,
is it pretty much a three?

110
00:07:14.531 --> 00:07:19.234
&gt;&gt; Bianca Gandolfo: Yeah, so a three is a,
&gt;&gt; Bianca Gandolfo: It

111
00:07:19.234 --> 00:07:21.054
doesn't have cycles.

112
00:07:24.378 --> 00:07:25.898
&gt;&gt; Bianca Gandolfo: Yeah,
there's something else, actually.

113
00:07:25.898 --> 00:07:31.690
There's a saying that I'm blanking on.

114
00:07:31.690 --> 00:07:36.968
But it's similar, so there's like directed
acyclic graphs sorta like a really

115
00:07:36.968 --> 00:07:42.107
particular type of graph that you find
in data structure algorithms classes.

116
00:07:42.107 --> 00:07:47.107
But a directed acyclic
graph isn't always a three.

117
00:07:47.107 --> 00:07:50.411
&gt;&gt; Speaker 2: [INAUDIBLE] direction.

118
00:07:50.411 --> 00:07:50.923
&gt;&gt; Bianca Gandolfo: What's that?

119
00:07:50.923 --> 00:07:53.142
&gt;&gt; Speaker 2: Cuz of the direction?

120
00:07:53.142 --> 00:07:54.305
&gt;&gt; Bianca Gandolfo: Because
of the direction?

121
00:07:54.305 --> 00:07:57.914
I think it's because, what is the reason?

122
00:07:57.914 --> 00:08:00.947
&gt;&gt; Speaker 6: A child has a unique
parent of that one, right?

123
00:08:00.947 --> 00:08:01.763
&gt;&gt; Bianca Gandolfo: Yeah.

124
00:08:01.763 --> 00:08:03.149
&gt;&gt; Speaker 6: Yeah.
&gt;&gt; Bianca Gandolfo: Yeah.

