WEBVTT

1
00:00:00.007 --> 00:00:03.743
[MUSIC]

2
00:00:03.743 --> 00:00:06.280
&gt;&gt; Kent C. Dodds: I'm gonna show you
how to do this probably normally

3
00:00:06.280 --> 00:00:08.500
if you were on a meaning stuff.

4
00:00:08.500 --> 00:00:13.850
The most common way to bump
your version is to use npm.

5
00:00:13.850 --> 00:00:19.414
And npm,
actually I just show you the docs page,

6
00:00:19.414 --> 00:00:23.090
docs.npmjs.com, publish.

7
00:00:25.223 --> 00:00:30.190
&gt;&gt; Kent C. Dodds: Version,
nope, here let's go, version.

8
00:00:33.387 --> 00:00:35.395
&gt;&gt; Kent C. Dodds: Version,
where did it go?

9
00:00:35.395 --> 00:00:40.477
Well there's, okay, we'll go ahead and

10
00:00:40.477 --> 00:00:45.005
just do this, npm version --help.

11
00:00:47.099 --> 00:00:50.483
&gt;&gt; Kent C. Dodds: So
this allows you to specify what type

12
00:00:50.483 --> 00:00:53.690
of version you want it to be.

13
00:00:53.690 --> 00:00:58.248
And so we're gonna say npm version major
cuz we're gonna publish a major release.

14
00:00:58.248 --> 00:01:03.080
And yeah, so
we'll just say npm version major.

15
00:01:03.080 --> 00:01:04.440
It's gonna do a couple of things.

16
00:01:04.440 --> 00:01:06.830
First, it's gonna update our package.json,
and

17
00:01:06.830 --> 00:01:09.950
then it's going to also update our tags.

18
00:01:09.950 --> 00:01:12.100
How do I find what tags there are?

19
00:01:13.150 --> 00:01:14.560
Git list tags.

20
00:01:18.488 --> 00:01:19.989
&gt;&gt; Kent C. Dodds: Let's do git tag.

21
00:01:19.989 --> 00:01:26.890
So npm is responsible for
adding that tag to our most recent commit.

22
00:01:26.890 --> 00:01:32.610
So a tag is just like a thing that points
to a commit, that's all that it is.

23
00:01:32.610 --> 00:01:36.920
But GitHub uses tags to
have that release its page.

24
00:01:36.920 --> 00:01:39.780
And so it points to a commit and
then you can download the source

25
00:01:39.780 --> 00:01:42.640
code from that commit and
all the interesting things.

26
00:01:42.640 --> 00:01:44.650
We pretty much are only gonna use for
the change line.

27
00:01:45.950 --> 00:01:51.970
So yeah,
once you have run npn version major,

28
00:01:51.970 --> 00:01:57.830
then you can run npn publish, again,
and you're publishing a major version.

29
00:01:57.830 --> 00:02:02.630
If you want to you can like, [LAUGH] you
know what's hilarious is I totally didn't

30
00:02:02.630 --> 00:02:05.660
rerun my build after I
deleted the dist directory.

31
00:02:05.660 --> 00:02:10.300
So I just published a major
version that has nothing in it.

32
00:02:10.300 --> 00:02:12.120
This is why we automate releases.

33
00:02:12.120 --> 00:02:19.380
So if I go to github-names,
I've got that 2.0 release.

34
00:02:19.380 --> 00:02:22.060
But if I view the code,
we've got nothing in here.

35
00:02:22.060 --> 00:02:28.050
[LAUGH] So we're gonna do a bug fix
real quick before anybody notices.

36
00:02:28.050 --> 00:02:33.288
So we'll do npm version patch,

37
00:02:33.288 --> 00:02:41.534
and then we'll get npm publish
&gt;&gt; Kent C. Dodds: And

38
00:02:41.534 --> 00:02:44.200
then I'll show you how
to deprecate a package.

39
00:02:44.200 --> 00:02:50.208
We kind of already saw that, but
I'll actually do it this time.

40
00:02:50.208 --> 00:02:55.710
Deprecate, we're going to just make
sure I know what the command is.

41
00:02:55.710 --> 00:03:00.946
Okay, yeah, npm deprecate, package is,

42
00:03:00.946 --> 00:03:04.774
github-names@2.0.0.

43
00:03:04.774 --> 00:03:10.260
And then the message is gonna be,
whoops, yeah.

44
00:03:11.660 --> 00:03:14.876
That was not a helpful message at all,
please don't do that.

45
00:03:14.876 --> 00:03:21.140
[LAUGH] But yeah, so
that's whole bunch of stuff about npm and.

46
00:03:22.980 --> 00:03:29.610
Did I already publish, you know what's
funny, I forgot to run the build again.

47
00:03:29.610 --> 00:03:31.728
[LAUGH] This is so embarrassing.

48
00:03:31.728 --> 00:03:35.563
Okay, now npm version, or yeah,

49
00:03:35.563 --> 00:03:39.533
patch again, and npm publish, and

50
00:03:39.533 --> 00:03:46.250
I'm not gonna worry about
deprecating that other one.

51
00:03:46.250 --> 00:03:49.390
You all know how to do that,
so we're gonna continue on.

52
00:03:50.530 --> 00:03:53.250
But with all those words about npm,
I'm gonna go ahead and

53
00:03:53.250 --> 00:03:57.310
stop and give everybody a opportunity
to ask any questions that you have.

54
00:03:57.310 --> 00:04:00.939
Was everybody able to publish a new
major version of the package?

55
00:04:02.500 --> 00:04:04.906
Okay, we've got some 2.0s?

56
00:04:04.906 --> 00:04:07.620
Raise your hand online if you got that.

57
00:04:09.540 --> 00:04:14.300
Ivan is asking, so the way to solve it
is to wait and hold to more changes?

58
00:04:14.300 --> 00:04:19.010
Ivan, if you don't want to publish readme
changes and stuff like that, yeah,

59
00:04:19.010 --> 00:04:20.130
that's the way.

60
00:04:20.130 --> 00:04:23.340
But here in a second I'm
gonna talk about our love for

61
00:04:23.340 --> 00:04:25.800
version numbers and
why it's kind of silly.

62
00:04:27.700 --> 00:04:28.990
So any other questions?

63
00:04:31.227 --> 00:04:32.440
&gt;&gt; Kent C. Dodds: Okay, cool.

64
00:04:32.440 --> 00:04:35.850
So let's talk about our love for
version numbers.

65
00:04:35.850 --> 00:04:41.000
There's something in us that just says,
when I go from two to three,

66
00:04:41.000 --> 00:04:45.550
that's a big deal and this is
something to market and it's exciting.

67
00:04:45.550 --> 00:04:49.180
And Angular hasn't even
released version two yet,

68
00:04:49.180 --> 00:04:51.360
can I possibly release a version three?

69
00:04:51.360 --> 00:04:54.360
How audacious of me.

70
00:04:54.360 --> 00:04:56.410
I have libraries that are up to eight,

71
00:04:56.410 --> 00:05:01.346
I don't think I've ever gotten
a library up to nine before.

72
00:05:01.346 --> 00:05:05.620
It really, just let go of that love for

73
00:05:05.620 --> 00:05:10.706
big marketing releases and big, this is
breaking changes, breaking the world.

74
00:05:10.706 --> 00:05:13.490
And so we're gonna save all these up,
whatever.

75
00:05:13.490 --> 00:05:17.190
As far as breaking changes are concerned,
that's okay.

76
00:05:17.190 --> 00:05:22.800
If you want to, there's there's something
to be said about managing a community and

77
00:05:22.800 --> 00:05:25.210
not breaking the community all the time.

78
00:05:25.210 --> 00:05:28.280
But we have sumver for a reason.

79
00:05:28.280 --> 00:05:34.650
And so the difference between 2.0.0 and
2.0.1, that's really not a big deal.

80
00:05:34.650 --> 00:05:39.102
So if it's just a docs change, yeah sure,
go ahead and publish your release,

81
00:05:39.102 --> 00:05:39.987
not a big deal.

82
00:05:39.987 --> 00:05:45.549
And pushing a breaking change
shouldn't matter quite as much,

83
00:05:45.549 --> 00:05:50.490
especially if it's a really
small breaking change.

84
00:05:50.490 --> 00:05:54.200
Just bump the major version number,
communicate to the community, hey,

85
00:05:54.200 --> 00:05:58.170
you just need to swap these two arguments
because that was a bad API in the first

86
00:05:58.170 --> 00:05:58.940
place or something.

87
00:05:58.940 --> 00:06:01.669
And now it enables us to do this
special currying thing or whatever.

88
00:06:02.980 --> 00:06:05.710
Then yeah, just publish a major change,
it's okay.

89
00:06:06.710 --> 00:06:10.520
If people, as long as people aren't
doing things that they shouldn't,

90
00:06:10.520 --> 00:06:16.030
like using the star in
their version ranges,

91
00:06:16.030 --> 00:06:20.240
then you're not, you shouldn't be
breaking people by doing that.

92
00:06:20.240 --> 00:06:23.030
So yeah, don't worry about it.

93
00:06:23.030 --> 00:06:26.850
Just publish, publish all the time.

94
00:06:26.850 --> 00:06:27.790
Any changes about that?

95
00:06:29.570 --> 00:06:30.520
Sweet.

96
00:06:30.520 --> 00:06:33.436
Numbers are for computers.

97
00:06:33.436 --> 00:06:35.944
Yeah, you do need to
manage your community,

98
00:06:35.944 --> 00:06:39.640
and if it's a big project and
stuff, manage your major versions.

99
00:06:39.640 --> 00:06:41.620
But for the most part, just publish.

