WEBVTT

1
00:00:00.000 --> 00:00:03.842
[MUSIC]

2
00:00:03.842 --> 00:00:07.202
&gt;&gt; Kent C. Dodds: So let's go and automate
this process, because I'm sick and

3
00:00:07.202 --> 00:00:09.668
tired of having to push
more patch releases.

4
00:00:09.668 --> 00:00:14.598
So yeah,
let me just double check my notes here,

5
00:00:14.598 --> 00:00:18.101
make sure I don't miss anything.

6
00:00:27.094 --> 00:00:28.578
&gt;&gt; Kent C. Dodds: Yeah, we just have, and

7
00:00:28.578 --> 00:00:32.414
actually,
&gt;&gt; Kent C. Dodds: Yeah,

8
00:00:32.414 --> 00:00:37.376
we just have pretty much two things to do,
two things left,

9
00:00:37.376 --> 00:00:41.070
and then I'll talk about community stuff.

10
00:00:42.290 --> 00:00:46.790
So the first thing that we're gonna do
here, if we look at the exercises here.

11
00:00:46.790 --> 00:00:50.650
We're going to install a global
module called semantic-release-cli.

12
00:00:50.650 --> 00:00:54.720
Semantic release is going to
do several things for us.

13
00:00:54.720 --> 00:00:58.330
First of all,
it's going to hook into our travis.

14
00:00:58.330 --> 00:01:00.890
So that after our build is successful,

15
00:01:00.890 --> 00:01:05.800
it will run a release script that
we'll look at in a little bit.

16
00:01:05.800 --> 00:01:10.830
The other thing it will do is,
well as part of this release script,

17
00:01:10.830 --> 00:01:16.290
it's gonna set up our package JSON so
that it has the correct version for us.

18
00:01:16.290 --> 00:01:22.580
And then based off our commit messages and
the current version available on GitHub.

19
00:01:22.580 --> 00:01:27.510
And then it's going to
update the GitHub releases

20
00:01:27.510 --> 00:01:31.570
page with a release that represents
all the changes that we've made.

21
00:01:32.570 --> 00:01:35.210
So it's gonna do a lot of
really cool things for us, and

22
00:01:35.210 --> 00:01:38.000
it does all of those things automatically.

23
00:01:38.000 --> 00:01:42.683
We just have to promise semantic-release
that we're going to do the right

24
00:01:42.683 --> 00:01:44.926
thing as far as commit messages go.

25
00:01:44.926 --> 00:01:49.349
One other thing that I just realized
we need to do before that though is,

26
00:01:49.349 --> 00:01:53.938
we need to push all of the tags that
we've made with the npm version stuff.

27
00:01:53.938 --> 00:02:00.440
Cuz npm version made some get tags, so to
do that, you're gonna say git push --tags.

28
00:02:00.440 --> 00:02:05.115
And so that way, when semantic-release
comes around and tries to determine, okay,

29
00:02:05.115 --> 00:02:08.120
what commits are there
since the last release?

30
00:02:08.120 --> 00:02:13.650
It can look at the version 2.0.0,
or 2.0.2 for me,

31
00:02:13.650 --> 00:02:18.700
and determine all the commits since
that one to know what to release.

32
00:02:20.110 --> 00:02:22.300
Okay, cool, so
let's go ahead and install that.

33
00:02:23.640 --> 00:02:29.106
And I forgot to mention,
I think that some of you,

34
00:02:29.106 --> 00:02:36.149
instead of taking the branch,
the FEM08.whatever branch.

35
00:02:36.149 --> 00:02:39.190
Some of you I think just forked my repo,
and

36
00:02:39.190 --> 00:02:43.860
then started working off
of master off of that repo.

37
00:02:43.860 --> 00:02:46.702
That's fine, just be aware that,

38
00:02:46.702 --> 00:02:51.364
the master branch of the Star Wars
names repo is quite old.

39
00:02:51.364 --> 00:02:53.680
It's like six or seven months old.

40
00:02:53.680 --> 00:02:58.630
And so, things are a little bit different
from what we've been working on for

41
00:02:58.630 --> 00:02:59.740
this whole thing.

42
00:02:59.740 --> 00:03:03.630
So you may have to deal with a couple
of weird things, artifacts from that.

43
00:03:03.630 --> 00:03:06.640
Like you probably already have
semantic-release set up and stuff.

44
00:03:06.640 --> 00:03:10.770
So if you, yeah, if that's what you did,
maybe you want to go back and

45
00:03:10.770 --> 00:03:14.690
kind of start over or something, or just
kind of pick up the pieces or something.

46
00:03:16.410 --> 00:03:17.771
Yeah, sorry for that diversion.

47
00:03:17.771 --> 00:03:22.200
So we're gonna install this global
package, semantic-release-cli.

48
00:03:22.200 --> 00:03:26.790
I already have it installed so
I'm gonna not install that.

49
00:03:26.790 --> 00:03:31.450
But once you have that installed, this
is one of the very few packages that I

50
00:03:31.450 --> 00:03:34.430
install globally,
I try to avoid doing that.

51
00:03:34.430 --> 00:03:37.869
But your gonna do
semantic-release-cli setup,

52
00:03:37.869 --> 00:03:40.500
it's gonna ask you a couple of questions.

53
00:03:40.500 --> 00:03:42.500
The first is whether it's private.

54
00:03:42.500 --> 00:03:44.440
The capital letter here is the default.

55
00:03:44.440 --> 00:03:47.300
So I'm gonna leave it
with the default of no.

56
00:03:47.300 --> 00:03:49.650
The registry is the default registry,
I'm good with that.

57
00:03:49.650 --> 00:03:53.840
My username is my npm username,
here's my npm email.

58
00:03:53.840 --> 00:03:58.520
And it wants to access my keychain so
it doesn't have to ask me for my password.

59
00:03:58.520 --> 00:04:00.089
Which is kinda neat, so I'll allow that.

60
00:04:01.150 --> 00:04:06.788
And yeah, so it didn't need to ask for
my password, because it's asked me before.

61
00:04:06.788 --> 00:04:10.610
And then GitHub, I'll do the same thing.

62
00:04:12.020 --> 00:04:15.400
And then it will ask you
what CI you're using.

63
00:04:15.400 --> 00:04:18.480
So the reason it's asking you about
this is because it's going to generate

64
00:04:18.480 --> 00:04:22.000
tokens for you for GitHub and npm.

65
00:04:22.000 --> 00:04:26.320
And it will use those tokens to add to

66
00:04:26.320 --> 00:04:31.200
your Travis build automatically so
that it can do the releasing and

67
00:04:31.200 --> 00:04:36.670
the GitHub changelog generation stuff for
you.

68
00:04:36.670 --> 00:04:41.070
So we'll just say Travis CI,
and that'll take just a second,

69
00:04:41.070 --> 00:04:46.450
then it'll ask us one more thing about
how many versions of node we want to use.

70
00:04:46.450 --> 00:04:48.497
We'll just say a single version.

71
00:04:48.497 --> 00:04:52.529
[SOUND] As soon as it finishes,
it's generating the tokens and

72
00:04:52.529 --> 00:04:54.164
adding those to Travis.

73
00:04:54.164 --> 00:04:58.048
So a single version of Node,
and then we can look,

74
00:04:58.048 --> 00:05:02.200
it actually has made quite
a few changes for us.

75
00:05:02.200 --> 00:05:06.560
So if we look at the diff,
it removed a couple things and

76
00:05:06.560 --> 00:05:08.490
just kind of moved some things around.

77
00:05:08.490 --> 00:05:10.180
I actually don't like what it does.

78
00:05:10.180 --> 00:05:12.970
So I'm going to revert all
that stuff that it did.

79
00:05:12.970 --> 00:05:16.890
But I wanted to show you
that it does do some stuff.

80
00:05:16.890 --> 00:05:19.020
I like the setup that I had.

81
00:05:19.020 --> 00:05:21.420
I'll just explain really
quick what's it's doing.

82
00:05:21.420 --> 00:05:25.370
So its changing the node version to 4,
I like 6.

83
00:05:25.370 --> 00:05:31.030
It's changing before install
to install version 2 of npm.

84
00:05:31.030 --> 00:05:34.864
Version 3 comes installed
with node 6 automatically, so

85
00:05:34.864 --> 00:05:40.870
we don't need that at all and I don't like
npm 2 anyway, version 3 is much better.

86
00:05:40.870 --> 00:05:45.021
It does run npm prune which is
actually can be a good thing.

87
00:05:45.021 --> 00:05:48.508
So we can leave that,
but yeah, either way.

88
00:05:48.508 --> 00:05:53.350
And then, it removed our report-coverage
and replaced it with semantic-release.

89
00:05:53.350 --> 00:05:56.330
I actually want report-coverage and
semantic-release to run, and

90
00:05:56.330 --> 00:05:59.840
I'll show you why that semantic-release
script is here in a second.

91
00:05:59.840 --> 00:06:04.620
And it also has this fancy
branches exception and

92
00:06:04.620 --> 00:06:11.220
that's basically just to not build for
version branches and stuff.

93
00:06:12.260 --> 00:06:14.810
But I don't, we don't need that either.

94
00:06:14.810 --> 00:06:19.270
It also, in our package,json,
removes the version, totally gone.

95
00:06:19.270 --> 00:06:24.590
And so you might be wondering, okay so
what, like what is the purpose of

96
00:06:24.590 --> 00:06:28.610
it removing the version, isn't it supposed
to be publishing our library, right?

97
00:06:28.610 --> 00:06:32.947
So what it does is there is this
semantic-release script that it's added to

98
00:06:32.947 --> 00:06:33.772
our scripts.

99
00:06:33.772 --> 00:06:37.909
First thing that it does
is semantic-release pre,

100
00:06:37.909 --> 00:06:43.838
followed by npm publish and than it
wraps up with semantic-release post.

101
00:06:43.838 --> 00:06:48.660
So semantic-release pre
is going to go to GitHub,

102
00:06:48.660 --> 00:06:55.404
find the most recent version, so
for me that's gonna be v2.0.0.

103
00:06:55.404 --> 00:07:00.325
And then it's going to go to
the current master version or

104
00:07:00.325 --> 00:07:03.297
the repo that it's building, and

105
00:07:03.297 --> 00:07:07.820
it's gonna find the difference
between those two.

106
00:07:07.820 --> 00:07:11.990
All the commits between the most
recently released version, and

107
00:07:11.990 --> 00:07:15.500
the version that it's looking at
right now, the version of code.

108
00:07:15.500 --> 00:07:19.230
It's gonna find all those commits,
and based off of the commit messages,

109
00:07:19.230 --> 00:07:21.680
it's going to determine what
the new version should be.

110
00:07:21.680 --> 00:07:23.530
And I'll show you what that
convention looks like, and

111
00:07:23.530 --> 00:07:28.351
how you can control what
versions semantic-release should,

112
00:07:28.351 --> 00:07:33.280
or how it should treat those changes.

113
00:07:33.280 --> 00:07:37.670
So it's things like if you have fix as
your type, then that's gonna be a patch.

114
00:07:37.670 --> 00:07:40.520
If you have feat as your type,
that's gonna be a minor.

115
00:07:40.520 --> 00:07:43.870
And if you include the words
breaking change in your commit,

116
00:07:43.870 --> 00:07:45.490
then that going to be a major.

117
00:07:45.490 --> 00:07:48.600
That's just like the quick,
quick run down.

118
00:07:48.600 --> 00:07:54.310
So based off of all that, it's going
to add a version to your package.json,

119
00:07:54.310 --> 00:07:56.270
whatever the version ought to be.

120
00:07:56.270 --> 00:07:59.720
And then it's going to run
the npm publish script.

121
00:07:59.720 --> 00:08:02.713
And because it has our token,
it can do that.

122
00:08:02.713 --> 00:08:07.625
And then with the semantic-release post,

123
00:08:07.625 --> 00:08:13.331
that's going to make a git
tag like we did ourselves

124
00:08:13.331 --> 00:08:19.052
a little bit ago, and
then push that tag to GitHub.

125
00:08:19.052 --> 00:08:24.702
And then it's going to interact directly
with the GitHub API to create a release

126
00:08:24.702 --> 00:08:30.368
for that tag, and have the changelog made
for us based off our commit messages.

127
00:08:30.368 --> 00:08:34.600
So that is all it does,
it also updates our URL.

128
00:08:34.600 --> 00:08:38.120
I'm not sure why it does that, and
it adds itself as a dependency.

129
00:08:38.120 --> 00:08:39.800
So that's everything that just happened,

130
00:08:39.800 --> 00:08:42.060
we're going to revert
a couple of those things.

131
00:08:42.060 --> 00:08:44.350
But does anybody have any
questions about that?

132
00:08:44.350 --> 00:08:48.220
I'm gonna go ahead and
wait for the chat here.

133
00:08:49.300 --> 00:08:52.054
So any questions from here?

134
00:08:52.054 --> 00:08:55.614
&gt;&gt; Speaker 2: They were getting
an error on creating a Travis hook, but

135
00:08:55.614 --> 00:08:56.733
I'm not sure if.

136
00:08:56.733 --> 00:09:01.274
&gt;&gt; Kent C. Dodds: So
Brett you did have Travis set up, correct?

137
00:09:01.274 --> 00:09:02.052
I'm pretty sure you did.

138
00:09:05.293 --> 00:09:09.118
&gt;&gt; Kent C. Dodds: Without
a little bit more information,

139
00:09:09.118 --> 00:09:12.500
I don't know if I can give any help.

140
00:09:12.500 --> 00:09:16.831
It looks like Ivan is having
trouble installing globally.

141
00:09:16.831 --> 00:09:22.830
If you can't install semantic-release
globally, then here's what you can do.

142
00:09:22.830 --> 00:09:29.380
So you do npm install semantic-release-cli
and that would install it locally.

143
00:09:29.380 --> 00:09:33.560
Once that's installed locally, you can say

144
00:09:33.560 --> 00:09:39.947
node-modules/.bin/semantic-release-cli and
then setup.

145
00:09:39.947 --> 00:09:41.456
So that should work.

146
00:09:44.302 --> 00:09:45.352
&gt;&gt; Kent C. Dodds: Yeah, and Mike,

147
00:09:45.352 --> 00:09:49.270
I am gonna show examples of
that commit message format.

148
00:09:49.270 --> 00:09:53.950
And I'm also gonna show you a tool that
can help you create your commit messages

149
00:09:53.950 --> 00:09:56.130
in that format, which is pretty handy.

