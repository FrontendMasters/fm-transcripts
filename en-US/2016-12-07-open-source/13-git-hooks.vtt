WEBVTT

1
00:00:00.000 --> 00:00:03.807
[MUSIC]

2
00:00:03.807 --> 00:00:05.300
&gt;&gt; Kent C. Dodds: Saving
yourself from yourself.

3
00:00:05.300 --> 00:00:09.458
So even though we already have linting
set up and we have testing set up, and

4
00:00:09.458 --> 00:00:10.520
that's awesome.

5
00:00:11.780 --> 00:00:16.820
Sometimes you forget to run those things
before you commit code and push it, right?

6
00:00:16.820 --> 00:00:20.919
And so who here, raise your hand
if you're familiar with git hooks?

7
00:00:22.829 --> 00:00:25.160
&gt;&gt; Kent C. Dodds: Okay,
git hooks are a great thing.

8
00:00:27.070 --> 00:00:28.080
So basically,

9
00:00:28.080 --> 00:00:33.520
if you open up your Git directory, you'll
find some really interesting things.

10
00:00:33.520 --> 00:00:36.720
I actually recommend you
spend an hour some day

11
00:00:36.720 --> 00:00:41.090
just looking around in your
.git directory in your project.

12
00:00:41.090 --> 00:00:43.020
It's really kind of interesting.

13
00:00:43.020 --> 00:00:44.763
One thing that you'll find in there,

14
00:00:44.763 --> 00:00:47.988
we've got a couple people who
are familiar with git hooks in the chat.

15
00:00:47.988 --> 00:00:51.109
Actually, one thing you won't find
in there is a hooks directory,

16
00:00:51.109 --> 00:00:52.160
that's kinda funny.

17
00:00:53.170 --> 00:00:57.360
Normally, you'll have
a folder called hooks

18
00:00:57.360 --> 00:01:00.340
when you initialize a git repository.

19
00:01:00.340 --> 00:01:02.830
Does anybody have a hooks
directory in their .git folder?

20
00:01:03.940 --> 00:01:04.990
Actually you know what?

21
00:01:04.990 --> 00:01:07.822
You won't because the set-up
script removes them.

22
00:01:07.822 --> 00:01:11.574
That's right.

23
00:01:11.574 --> 00:01:16.730
So when you don't run the set-up scripts
you'll have a hooks directory in here.

24
00:01:16.730 --> 00:01:21.569
Actually, I'm gonna find another project
to show you actually what that looks like.

25
00:01:24.097 --> 00:01:28.160
&gt;&gt; Kent C. Dodds: So this is
the JavaScript Air website project.

26
00:01:28.160 --> 00:01:34.510
And in here, you have that hooks directory
and you have a bunch of script files.

27
00:01:34.510 --> 00:01:38.470
This actually is using GHooks,
which we're about to use, and so

28
00:01:38.470 --> 00:01:41.150
that's why it's got a bunch
of content in here.

29
00:01:41.150 --> 00:01:45.510
Most of the time you'll just see a bunch
of samples, so these sample files.

30
00:01:45.510 --> 00:01:47.620
But yeah, there are hooks for
commit message.

31
00:01:47.620 --> 00:01:53.285
That's the one that runs when you're about
to add a commit message to a commit.

32
00:01:53.285 --> 00:01:59.203
Post-commit, post-rewrite, so these are
basically scripts that are run before or

33
00:01:59.203 --> 00:02:01.670
after something happens with Git.

34
00:02:01.670 --> 00:02:06.200
So before you rebase,
before you push, before an update,

35
00:02:06.200 --> 00:02:10.440
all kinds of really interesting and
cool things.

36
00:02:10.440 --> 00:02:12.710
So git hooks are really valuable.

37
00:02:12.710 --> 00:02:16.990
One trick about them, though, is they're
not committed to source control.

38
00:02:16.990 --> 00:02:20.710
They're inside of that .git directory so

39
00:02:20.710 --> 00:02:23.560
sharing git hooks has always
kinda been a challenge.

40
00:02:23.560 --> 00:02:28.210
And so we're going to use a tool called
GHooks which allows you to have shareable

41
00:02:28.210 --> 00:02:31.660
git hooks so that everybody
who's working on your project

42
00:02:31.660 --> 00:02:36.970
can have some specific scripts
run before they commit or push.

43
00:02:36.970 --> 00:02:42.610
And specifically throughout this we
want the scripts like the linting and

44
00:02:42.610 --> 00:02:44.400
testing run before we commit anything.

45
00:02:45.410 --> 00:02:48.430
Does that make sense why we're
about to do what we're gonna do?

46
00:02:49.540 --> 00:02:50.573
Okay, there's a question.

47
00:02:50.573 --> 00:02:52.923
&gt;&gt; Speaker 2: I had a question, I was
asking what editor are they using but

48
00:02:52.923 --> 00:02:55.091
they aren't seeing the .git
folder in their editor.

49
00:02:55.091 --> 00:02:56.627
&gt;&gt; Kent C. Dodds: Yeah,
it's pretty common for editors.

50
00:02:56.627 --> 00:02:58.760
&gt;&gt; Speaker 2: You think you
could turn that on in Atom?

51
00:02:58.760 --> 00:03:00.640
&gt;&gt; Kent C. Dodds: So yeah,
if you're using Atom,

52
00:03:00.640 --> 00:03:02.660
I'm pretty sure that
Atom shows it by default.

53
00:03:03.690 --> 00:03:09.580
Actually, no, you'll have to look
in your settings somewhere in here.

54
00:03:09.580 --> 00:03:13.750
There's a way to turn that on, yeah, so
lots of editors don't show dot files,

55
00:03:13.750 --> 00:03:17.740
and VSCode, yeah, I think, too.

56
00:03:17.740 --> 00:03:20.750
You'll have to configure it to show.files.

57
00:03:20.750 --> 00:03:27.310
But if you open up your terminal and
run ls-al,

58
00:03:27.310 --> 00:03:31.790
like on a Mac, I'm not sure what you do on
Windows, but you should see a git there.

59
00:03:31.790 --> 00:03:36.270
And you should be able to say, cd.git and

60
00:03:36.270 --> 00:03:39.700
I'm sure you'll find all the hooks
directory and everything.

