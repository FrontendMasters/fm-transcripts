WEBVTT

1
00:00:00.000 --> 00:00:04.020
[MUSIC]

2
00:00:04.020 --> 00:00:07.020
&gt;&gt; Kent C Dodds: Like I said, you probably
don't wanna distribute your test files.

3
00:00:07.020 --> 00:00:09.930
And you don't need to
transpile those either.

4
00:00:09.930 --> 00:00:17.245
So, we're going to add,
right here, --ignore *.test.js.

5
00:00:17.245 --> 00:00:24.630
I should make a pull request to have
that be automatic, that would be cool.

6
00:00:24.630 --> 00:00:29.758
So now you see in the output that it
is only transpiling source index .js

7
00:00:29.758 --> 00:00:35.570
not the test, but the dist directory
still has my test file in there.

8
00:00:35.570 --> 00:00:38.320
That's not a big deal because I
could just delete it right, and

9
00:00:38.320 --> 00:00:40.170
it won't show up again.

10
00:00:40.170 --> 00:00:43.690
As I'm adding files and
removing files, like that's not cool.

11
00:00:43.690 --> 00:00:48.430
So what's better is to clean everything
up so that it's in a solid state, and

12
00:00:48.430 --> 00:00:49.560
then run the build.

13
00:00:49.560 --> 00:00:53.781
And so with npm scripts,
I can have something happen before any,

14
00:00:53.781 --> 00:00:55.561
like a particular script.

15
00:00:55.561 --> 00:01:01.094
And that's done by creating
a script with the term pre,

16
00:01:01.094 --> 00:01:05.920
and then you can say prebuild,
for example.

17
00:01:05.920 --> 00:01:12.110
So before you run the build script,
I want you to run this script.

18
00:01:13.480 --> 00:01:18.500
And the script that I want to run is
some command that will delete this.

19
00:01:18.500 --> 00:01:22.700
So if I'm on a Mac,
I'm going to say rm -rf dist, and

20
00:01:22.700 --> 00:01:27.160
I guess if I'm on a Windows,
it was rm dir I think.

21
00:01:27.160 --> 00:01:32.014
But I want to have a script that works
across platforms because we are gonna

22
00:01:32.014 --> 00:01:34.285
use this in our validate script and

23
00:01:34.285 --> 00:01:38.060
I'm gonna have contributors
from both Windows and Mac.

24
00:01:38.060 --> 00:01:43.009
So I'm going to use a package
called Rimraf to do that,

25
00:01:43.009 --> 00:01:47.098
rimraf, you normally just install this, so

26
00:01:47.098 --> 00:01:54.005
I think the latest version is 2.5.4
which you have installed already.

27
00:01:54.005 --> 00:01:59.180
And you'll just use that binary,
rimraf dist.

28
00:01:59.180 --> 00:02:02.970
So then if you run your build again,
you'll see that at first run pre built

29
00:02:02.970 --> 00:02:07.129
script and than it runs the built script
and your dist directory should be clean,

30
00:02:07.129 --> 00:02:09.380
just have what you need in them.

31
00:02:09.380 --> 00:02:14.399
&gt;&gt; Student: And that's just by convention
anything having pre in it will run,

32
00:02:14.399 --> 00:02:17.480
if it's the same name as another build?

33
00:02:17.480 --> 00:02:19.298
&gt;&gt; Kent C Dodds: Yep and
then incidentally,

34
00:02:19.298 --> 00:02:22.412
we could also run the prebuild
script by itself.

35
00:02:22.412 --> 00:02:26.429
I haven't tried this before but

36
00:02:26.429 --> 00:02:31.351
if I did, preprebuild: "echo hi".

37
00:02:31.351 --> 00:02:36.960
Nope, looks like it doesn't.

38
00:02:36.960 --> 00:02:38.240
I'm not sure how it's implemented, but

39
00:02:38.240 --> 00:02:40.170
I guess it's not implemented
in a way that will work.

40
00:02:41.300 --> 00:02:43.540
That's kind of funny.

41
00:02:43.540 --> 00:02:48.428
&gt;&gt; Student: So just a question then on the
same scripts and naming, you named that

42
00:02:48.428 --> 00:02:53.940
watchTests, does that any type of
convention or did you just do that?

43
00:02:53.940 --> 00:02:58.960
&gt;&gt; Kent C Dodds: It's fairly conventional,
like for example, npm-run-all has a handy

44
00:02:58.960 --> 00:03:04.690
thing that I think actually, yeah, we're
gonna use it later for our build when we

45
00:03:04.690 --> 00:03:07.320
actually are gonna make multiple
distributions like we were talking about.

46
00:03:07.320 --> 00:03:09.450
One for browser, one for CommonJS.

47
00:03:09.450 --> 00:03:14.590
And so, yeah, npm-run-all utilizes this

48
00:03:14.590 --> 00:03:19.230
convention to allow you to do a couple of
fancy things that we'll look into later.

49
00:03:19.230 --> 00:03:22.650
So the convention of
that colon right there.

50
00:03:22.650 --> 00:03:28.090
As far as the actual name of this script,
maybe that's a little conventional.

51
00:03:28.090 --> 00:03:30.339
I don't know, I've seen it in some places.

52
00:03:31.560 --> 00:03:35.670
Some people might also say test:watch, and

53
00:03:35.670 --> 00:03:38.230
it almost seems like
it's composing together.

54
00:03:41.550 --> 00:03:43.030
Sweet, any other questions?

55
00:03:44.135 --> 00:03:47.355
Okay, we still have a couple
of things left to do.

56
00:03:47.355 --> 00:03:52.695
Lunch is in about seven minutes,
I'm fairly confident we can get that done.

57
00:03:52.695 --> 00:03:57.075
So one other issue that we have now,
we'll run the the build

58
00:03:57.075 --> 00:04:02.856
again,
&gt;&gt; Kent C Dodds: So,

59
00:04:02.856 --> 00:04:06.669
we look in our dist directory and
actually let's go ahead and

60
00:04:06.669 --> 00:04:10.676
pop open the node and
we'll require('/dist').

61
00:04:10.676 --> 00:04:17.100
We're gonna get a big error and that error
is cannot find module starwars-names.json.

62
00:04:17.100 --> 00:04:20.947
So this file right this index.js
file is looking for a sibling,

63
00:04:20.947 --> 00:04:25.590
that's the relative path there,
that's called starwars-names.json.

64
00:04:25.590 --> 00:04:29.294
But it doesn't have one, and
that's because it's in the src directory.

65
00:04:29.294 --> 00:04:30.730
So a couple of ways we could solve this.

66
00:04:30.730 --> 00:04:34.380
We could put the starwars-names.json
in the root of our project and

67
00:04:34.380 --> 00:04:39.640
just have it look up two directories,
cuz then that's relative to both of these.

68
00:04:39.640 --> 00:04:41.800
And that would work great, but

69
00:04:41.800 --> 00:04:45.020
then we'd have to make sure that we're
distributing all the right files.

70
00:04:45.020 --> 00:04:47.920
We'd have to call them out
a lot more explicitly.

71
00:04:47.920 --> 00:04:52.570
I like to have my dist directory be the
only thing that I send to the registry.

72
00:04:52.570 --> 00:04:56.120
It just makes things a lot more
simple to think about, like,

73
00:04:56.120 --> 00:04:57.350
what am I sending to the registry?

74
00:04:57.350 --> 00:04:59.040
Yeah, just the dist.

75
00:04:59.040 --> 00:05:04.080
So what we're gonna do is bebel
has this capability to copy

76
00:05:04.080 --> 00:05:10.330
any files that are not JavaScript files,
so we're gonna use that feature.

77
00:05:10.330 --> 00:05:14.448
So on this single line it
will just --copy-files.

78
00:05:14.448 --> 00:05:18.025
And if you don't like these long name
there are actually abbreviations for

79
00:05:18.025 --> 00:05:21.429
all of these, but I actually like doing
the full version most of the time

80
00:05:21.429 --> 00:05:25.250
because I think it makes more sense for
future maintainers.

81
00:05:25.250 --> 00:05:27.858
So now if we run the build we're
going to get a dist directory

82
00:05:27.858 --> 00:05:29.220
with starwars-names right in there.

83
00:05:29.220 --> 00:05:33.661
And you should be able to run node and
require the dist directory,

84
00:05:33.661 --> 00:05:38.853
which will default to the index, and
you'll get what you're looking for.

85
00:05:42.885 --> 00:05:49.514
&gt;&gt; Kent C Dodds: And for Palpatine,
[SOUND] that guy, okay, yeah.

86
00:05:49.514 --> 00:05:52.620
Just taking a trip down memory lane for
a second.

87
00:05:52.620 --> 00:05:59.050
So any other thoughts or questions,
concerns, comments, jokes?

88
00:06:00.170 --> 00:06:01.385
Okay, we're almost there.

89
00:06:01.385 --> 00:06:09.303
Let's see, I haven't been watching
these questions so I apologize.

90
00:06:09.303 --> 00:06:10.989
Mike asked a little bit ago,

91
00:06:10.989 --> 00:06:16.220
transpiling into a dist folder seems to be
standard for all the websites I've seen.

92
00:06:16.220 --> 00:06:17.250
Wait, I did read that one.

93
00:06:17.250 --> 00:06:19.445
Just kidding.

94
00:06:19.445 --> 00:06:21.996
[SOUND] We are back.

95
00:06:21.996 --> 00:06:26.040
Okay, so one other thing that we're gonna
do here is now that we have the build

96
00:06:26.040 --> 00:06:26.910
working.

97
00:06:26.910 --> 00:06:30.860
We wanna make sure that when somebody
comes into help us maintain our

98
00:06:30.860 --> 00:06:32.630
project and they're setting things up,

99
00:06:32.630 --> 00:06:35.640
we say okay install dependencies
than run the validate script.

100
00:06:35.640 --> 00:06:40.170
We want to make sure that not only test
and linting work, but also they can build.

101
00:06:40.170 --> 00:06:44.478
So that we don't have something specific
to our environment in those scripts.

102
00:06:44.478 --> 00:06:48.952
And so then to accomplish that in our
validate script well just add build.

103
00:06:51.703 --> 00:06:53.510
&gt;&gt; Kent C Dodds: And
that will run in parallel.

104
00:06:53.510 --> 00:06:56.130
All three of these things
can run concurrently,

105
00:06:56.130 --> 00:06:59.300
we don't need to worry about them
clashing or anything like that.

