WEBVTT

1
00:00:00.000 --> 00:00:04.191
[MUSIC]

2
00:00:04.191 --> 00:00:06.250
&gt;&gt; Speaker 1: So now we're gonna
set up automatic releasing.

3
00:00:06.250 --> 00:00:09.000
So before we set up automatic releasing,

4
00:00:09.000 --> 00:00:12.060
I think it would probably
be great to do two things.

5
00:00:12.060 --> 00:00:17.290
First, let's go ahead and just publish it
ourselves without automatically releasing.

6
00:00:17.290 --> 00:00:20.840
And then we're gonna take a break and
then we'll set up automatic releasing.

7
00:00:20.840 --> 00:00:21.780
That sound good to everybody?

8
00:00:23.470 --> 00:00:26.255
Okay, any questions before we do that?

9
00:00:26.255 --> 00:00:27.208
Yes?
&gt;&gt; Speaker 2: Can I just go back to

10
00:00:27.208 --> 00:00:28.231
the core code stuff?

11
00:00:28.231 --> 00:00:29.604
&gt;&gt; Speaker 1: Yeah.

12
00:00:29.604 --> 00:00:32.996
&gt;&gt; Speaker 2: That token, upload token,
do we need to add any of that stuff or

13
00:00:32.996 --> 00:00:34.280
is this really just on?

14
00:00:34.280 --> 00:00:37.858
&gt;&gt; Speaker 1: No, you mean for
semantic-release or for cryptic?

15
00:00:37.858 --> 00:00:42.521
&gt;&gt; Speaker 2: No, are we still
only in the travis.ei stuff, or

16
00:00:42.521 --> 00:00:46.400
do we have to go into cocoa itself and-
&gt;&gt; Speaker 1: Yeah,

17
00:00:46.400 --> 00:00:48.540
you shouldn't have to do
anything with cocoa, yep.

18
00:00:48.540 --> 00:00:50.340
It should just kind of magically work.

19
00:00:50.340 --> 00:00:54.080
As long as you had an account with cocoa,
but I'm not sure what it would do

20
00:00:54.080 --> 00:00:58.150
if you didn't already have
an account when you push it up?

21
00:00:59.640 --> 00:01:00.440
Any other questions?

22
00:01:02.210 --> 00:01:03.130
Okay, sweet.

23
00:01:03.130 --> 00:01:07.502
So yeah, like I said, let's just
go ahead and release something so

24
00:01:07.502 --> 00:01:12.028
that you can feel like you, even if
you aren't able to follow along for

25
00:01:12.028 --> 00:01:16.962
the automated stuff, you can at least
see how you would release something.

26
00:01:16.962 --> 00:01:25.090
So the way that releasing works
is pretty straightforward.

27
00:01:25.090 --> 00:01:26.740
First, you need to login.

28
00:01:26.740 --> 00:01:30.550
So we're gonna go to npmjs.com.

29
00:01:30.550 --> 00:01:34.030
And if you're not logged in, log in.

30
00:01:34.030 --> 00:01:36.950
If you don't have an account, get one.

31
00:01:36.950 --> 00:01:38.920
Once you have an account,

32
00:01:38.920 --> 00:01:44.190
then you can go here back to your
terminal and type in npm login.

33
00:01:45.830 --> 00:01:49.900
And my username is prefilled
cuz that's in my npm RC.

34
00:01:49.900 --> 00:01:54.180
And I'm gonna enter my password,
which I totally now can't remember.

35
00:01:59.996 --> 00:02:01.700
&gt;&gt; Speaker 1: Add your email.

36
00:02:01.700 --> 00:02:02.230
Sweet!

37
00:02:02.230 --> 00:02:03.720
I remembered my password, phew.

38
00:02:06.050 --> 00:02:11.975
And now you should have a token in your
mpmrc file in your home directory.

39
00:02:11.975 --> 00:02:13.870
Don't show that to anyone.

40
00:02:16.670 --> 00:02:18.893
Is everybody able to follow
along to that point?

41
00:02:26.346 --> 00:02:26.994
&gt;&gt; Speaker 1: Okay, so

42
00:02:26.994 --> 00:02:31.380
now that you're logged in,
you should be able to publish this.

43
00:02:31.380 --> 00:02:34.920
Just make sure that, I totally forgot,
my description is wrong.

44
00:02:36.160 --> 00:02:37.060
So update that.

45
00:02:37.060 --> 00:02:42.887
Star Wars should be, GitHub usernames,

46
00:02:42.887 --> 00:02:47.218
yep, that's more accurate.

47
00:02:47.218 --> 00:02:54.050
Update description great.

48
00:02:54.050 --> 00:02:59.181
So with this, now we can run npm, publish,

49
00:02:59.181 --> 00:03:04.315
hit Enter and
[SOUND] it's running npm pack,

50
00:03:04.315 --> 00:03:08.200
and it uploads the zipped file and

51
00:03:08.200 --> 00:03:12.241
now github-names is published.

52
00:03:12.241 --> 00:03:17.749
I wanna hear a giant cheer when
you publish yours like, whoo!

53
00:03:22.422 --> 00:03:25.122
&gt;&gt; Speaker 1: And
if you go to the npm registry,

54
00:03:25.122 --> 00:03:30.440
npm.js.com/package/GitHub names or
whatever names it is.

55
00:03:31.780 --> 00:03:33.882
Then you should see your package.

56
00:03:38.054 --> 00:03:41.463
&gt;&gt; Speaker 1: So again that was npm login.

57
00:03:41.463 --> 00:03:46.194
You fill in your username and password and

58
00:03:46.194 --> 00:03:50.258
your email, then run npm publish.

59
00:03:53.822 --> 00:03:55.090
&gt;&gt; Speaker 1: You got it?

60
00:03:55.090 --> 00:03:56.000
&gt;&gt; Speaker 2: Well, I published it, but

61
00:03:56.000 --> 00:04:00.300
it was garbage so-
&gt;&gt; Speaker 1: [LAUGH]

62
00:04:00.300 --> 00:04:03.101
[LAUGH] oops [LAUGH].

63
00:04:03.101 --> 00:04:05.345
Yeah, and I totally forgot.

64
00:04:05.345 --> 00:04:09.070
You're probably gonna want to run
the build before you publish this.

65
00:04:09.070 --> 00:04:12.586
This why we automate releases so
we don't forget steps like this.

66
00:04:12.586 --> 00:04:16.334
But if you hadn't already run the build,

67
00:04:16.334 --> 00:04:21.702
then that's definitely something
you just run validate.

68
00:04:21.702 --> 00:04:25.090
And then you can publish.

69
00:04:25.090 --> 00:04:28.840
If you want to publish an update,
then you need to update the version here.

70
00:04:31.450 --> 00:04:33.820
So yeah,
there are a couple ways to do that.

71
00:04:33.820 --> 00:04:36.980
But I'll wait for a little bit
while people are still publishing.

72
00:04:36.980 --> 00:04:43.189
If you have your package published to npm,
then I want you to go to the chat.

73
00:04:43.189 --> 00:04:46.880
It's a live event.

74
00:04:46.880 --> 00:04:53.858
And paste in the URL to your module.

75
00:05:05.234 --> 00:05:05.734
&gt;&gt; Speaker 1: Sweet.

76
00:05:08.649 --> 00:05:10.010
&gt;&gt; Speaker 1: I love it.

77
00:05:10.010 --> 00:05:11.740
This is awesome.

78
00:05:11.740 --> 00:05:17.910
Somebody put an awesome GIF on like all
kinds of docs and stuff, yeah, just.

79
00:05:21.000 --> 00:05:25.310
Updated the README from
the original project, good for you.

80
00:05:25.310 --> 00:05:26.100
Who is this?

81
00:05:29.590 --> 00:05:30.910
Awesome, good job.

82
00:05:30.910 --> 00:05:32.270
Good job, everybody.

83
00:05:32.270 --> 00:05:36.170
We've got some awesome new modules here.

84
00:05:36.170 --> 00:05:40.170
So one thing that you're not gonna see,
probably for you but I have for

85
00:05:40.170 --> 00:05:42.250
me because I have a Chrome
extension that does it.

86
00:05:42.250 --> 00:05:44.000
But there's this new code link.

87
00:05:44.000 --> 00:05:49.360
What this does, is it takes me to a
service called npmcdn.com for that module.

88
00:05:49.360 --> 00:05:54.190
So if you go to npmcdn.com,
then it will explain that it's a content,

89
00:05:54.190 --> 00:05:57.950
or it's a CDN for pm packages, and

90
00:05:57.950 --> 00:06:02.120
it basically serves up
what is on the registry.

91
00:06:02.120 --> 00:06:07.080
It's super awesome, and what it enables us
to do is I can go to this random animal

92
00:06:07.080 --> 00:06:11.990
names and explore the folder or

93
00:06:11.990 --> 00:06:14.930
the directory of the disk and
all this stuff.

94
00:06:14.930 --> 00:06:18.330
I can even change the version right here,
which is a new feature that's awesome.

95
00:06:19.450 --> 00:06:20.320
But, yeah.

96
00:06:20.320 --> 00:06:23.270
So if I looked at the random
animals names, JSON.

97
00:06:23.270 --> 00:06:25.020
That's served to me as JSON.

98
00:06:26.710 --> 00:06:30.700
Then I can look at index.umd.JS.

99
00:06:30.700 --> 00:06:31.950
And that's the library right there.

100
00:06:31.950 --> 00:06:37.570
So I'm gonna take this URL,
go to a JS Bin.

101
00:06:40.180 --> 00:06:47.250
And add a script tag up here
where the source is that.

102
00:06:48.640 --> 00:06:54.760
And let's see what was, it's called
random animal names on the global, so

103
00:06:54.760 --> 00:07:04.380
this is say, console.log.random.

104
00:07:04.380 --> 00:07:10.720
And instead of output,
I'll look at console and I'll run.

105
00:07:10.720 --> 00:07:14.250
Boom, and I'm getting this from,
whose is this?

106
00:07:14.250 --> 00:07:15.276
The random animal names.

107
00:07:17.837 --> 00:07:19.070
&gt;&gt; Speaker 1: From Brett.

108
00:07:19.070 --> 00:07:20.300
Brett, thank you for your library.

109
00:07:20.300 --> 00:07:22.780
I'm using it in a JS bin right now.

110
00:07:22.780 --> 00:07:26.310
And that's because we had
a browser base build that works.

111
00:07:26.310 --> 00:07:31.290
And we can now make demos out of it, and
you can make examples out of JS bins, and

112
00:07:31.290 --> 00:07:34.720
put those examples in our documentation.

113
00:07:34.720 --> 00:07:38.340
Or you can use a JS bin or code fan or
whatever floats your boat.

114
00:07:38.340 --> 00:07:41.900
But you can just do it all on your
browser which is super slick and

115
00:07:41.900 --> 00:07:43.450
it's all using NPNCDN.

116
00:07:45.267 --> 00:07:47.295
&gt;&gt; Speaker 1: So that's that.

117
00:07:47.295 --> 00:07:48.735
Any questions?

118
00:07:48.735 --> 00:07:53.280
Looks like plenty of people have been
able to at least publish modules.

119
00:07:53.280 --> 00:07:53.795
Yeah.
And

120
00:07:53.795 --> 00:07:58.545
if you'd like to unpublish,
you can do that for the next 24 hours.

121
00:07:58.545 --> 00:08:01.502
If you wait for more than 24 hours,
you have to contact NPM support.

122
00:08:02.692 --> 00:08:06.181
Okie doke, so I'm back and
Ivan is asking you a question.

123
00:08:06.181 --> 00:08:08.661
What about when there's a little command?

124
00:08:08.661 --> 00:08:09.338
How do we manage that?
So

125
00:08:09.338 --> 00:08:15.350
the question is asking about if you need
to make an update to your package just for

126
00:08:15.350 --> 00:08:21.830
the smaller tiniest little thing,
can't I just over fix a previous Publish.

127
00:08:21.830 --> 00:08:26.482
And no, yeah, even if it's just
a single line in the README,

128
00:08:26.482 --> 00:08:32.123
why do I have to make a whole new version
just to fix something in the README.

129
00:08:32.123 --> 00:08:35.240
There are a couple of reasons for this.

130
00:08:35.240 --> 00:08:41.190
The biggest is for safety, for
the safety of everybody who uses npm.

131
00:08:41.190 --> 00:08:45.970
If somebody could just force
push on top of another version,

132
00:08:45.970 --> 00:08:51.370
an existing version, that would be a
really dangerous thing for the community.

133
00:08:51.370 --> 00:08:57.090
Just as an example, let's say that I get
really frustrated with a community and

134
00:08:57.090 --> 00:08:58.810
so I want to do something really mean, and

135
00:08:58.810 --> 00:09:01.980
I have a package that has
hundreds of thousands of users.

136
00:09:01.980 --> 00:09:04.060
And it's a transitive dependency.

137
00:09:04.060 --> 00:09:07.190
So most people don't even know
that they're using my package.

138
00:09:07.190 --> 00:09:10.274
So I could install a virus
as an install script, so

139
00:09:10.274 --> 00:09:15.270
any time somebody installs my package it
installs this virus on their computer,

140
00:09:15.270 --> 00:09:17.706
and I could cause some serious damage.

141
00:09:17.706 --> 00:09:22.675
And then just go up and
publish a new version of my package, and

142
00:09:22.675 --> 00:09:27.270
boom, I've got everybody's bank accounts.

143
00:09:27.270 --> 00:09:28.790
That's not very nice.

144
00:09:28.790 --> 00:09:34.650
And so having the ability to
lock down versions and make

145
00:09:34.650 --> 00:09:38.800
a package manager immutable is a really
important feature for package manager.

146
00:09:38.800 --> 00:09:39.520
And so

147
00:09:39.520 --> 00:09:44.750
from that security perspective, you cannot
publish on top of an existing version.

148
00:09:46.070 --> 00:09:49.180
So hopefully that answers
the question pretty well.

149
00:09:49.180 --> 00:09:53.660
As far as the version and
the numbers and everything like that.

150
00:09:53.660 --> 00:09:59.608
Let me take a quick pause and
talk about what this version number is.

151
00:09:59.608 --> 00:10:05.855
So if we go to semver.npm, well,
no, no, semver.org, I think.

152
00:10:05.855 --> 00:10:08.687
Yeah, semver.org.

153
00:10:08.687 --> 00:10:12.274
Yeah, this is semantic versioning 2.0.0.

154
00:10:12.274 --> 00:10:18.422
It explains that this version number
that you see here is represented

155
00:10:18.422 --> 00:10:24.260
by three individual numbers that
each have a different meaning.

156
00:10:24.260 --> 00:10:26.550
Let me bump this up a little bit.

157
00:10:26.550 --> 00:10:30.450
First is the major, so
that's the two here.

158
00:10:30.450 --> 00:10:33.820
And a major version is when you
make incompatible API changes.

159
00:10:33.820 --> 00:10:34.990
It's for breaking changes.

160
00:10:34.990 --> 00:10:38.170
Anytime you say, hey, you will have to
change your code to continue using this

161
00:10:38.170 --> 00:10:42.000
project, that's when you
bump the major version.

162
00:10:42.000 --> 00:10:47.010
For a minor version, it's like I added
functionality, or maybe I didn't

163
00:10:47.010 --> 00:10:53.700
extend the API any but I improved
performance or something like that.

164
00:10:53.700 --> 00:10:56.790
Well, even performance would
more likely be a patch.

165
00:10:56.790 --> 00:10:59.150
But it's generally something
like I'm exposing more to you.

166
00:11:00.180 --> 00:11:02.848
But in a backward compatible way.

167
00:11:02.848 --> 00:11:05.367
And then the last number, the patch,

168
00:11:05.367 --> 00:11:08.730
is when you make a backward
compatible bug fix.

169
00:11:08.730 --> 00:11:13.260
So again, the key here is the second
two numbers are backwards compatible.

170
00:11:13.260 --> 00:11:17.360
Any time you break anything and you force
somebody to make changes to their code,

171
00:11:17.360 --> 00:11:19.823
even if they're small
changes to their code,

172
00:11:19.823 --> 00:11:21.880
then it needs to be a major version bump.

173
00:11:21.880 --> 00:11:24.952
This is a contract that you as a library

174
00:11:24.952 --> 00:11:28.799
author you make with
the users of your library.

175
00:11:28.799 --> 00:11:33.320
And then there are other ways that
you can alter this a little bit for

176
00:11:33.320 --> 00:11:38.290
beta versions and stuff and you can
read more about this on semver.org.

177
00:11:38.290 --> 00:11:44.720
But this is a really, really important
concept in the NPM community,

178
00:11:44.720 --> 00:11:49.650
and I recommend that you think
about this very closely.

