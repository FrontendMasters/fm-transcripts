WEBVTT

1
00:00:00.000 --> 00:00:03.952
[MUSIC]

2
00:00:03.952 --> 00:00:08.934
&gt;&gt; Kent C Dodds: Let's just start out
with, normally you'd npm install this,

3
00:00:08.934 --> 00:00:12.550
but we'll just put babel-register in here.

4
00:00:12.550 --> 00:00:18.640
And the version that you all have
installed is 6.11.6, the latest version.

5
00:00:18.640 --> 00:00:23.120
And we're also going to have
babel plugin-instanbul.

6
00:00:23.120 --> 00:00:31.240
And the latest version,
I think we have the latest version, 1.0.3.

7
00:00:31.240 --> 00:00:35.600
Yeah, doesn't matter
what order these are in.

8
00:00:35.600 --> 00:00:39.650
I think it's the wrong order,
but whatever.

9
00:00:40.660 --> 00:00:46.600
And so then,
what we're going to do in our NYC config

10
00:00:46.600 --> 00:00:51.900
is we're going to say, hey,
we don't want you to instrument anything.

11
00:00:51.900 --> 00:00:55.990
Instrument, instrument.

12
00:00:55.990 --> 00:01:01.320
So we're gonna say instrument is false and
then I'll be perfectly

13
00:01:01.320 --> 00:01:05.450
honest I'm not sure why we need this next
property but we do for this to work.

14
00:01:05.450 --> 00:01:10.000
It's sourceMap is false.

15
00:01:10.000 --> 00:01:15.740
I think it just,
source maps do some funny things with,

16
00:01:15.740 --> 00:01:20.530
or like covering your code, so
that's what we're doing there.

17
00:01:20.530 --> 00:01:25.410
And then we're gonna add yet
another property called Require.

18
00:01:26.650 --> 00:01:32.610
And this will tell NYC hey
before you spawn off this mocha

19
00:01:32.610 --> 00:01:39.700
CUI I want you to require this thing and
have it do something.

20
00:01:39.700 --> 00:01:44.040
Just like modify the global state, which
is exactly what we're gonna do with that,

21
00:01:44.040 --> 00:01:45.160
we'll register.

22
00:01:45.160 --> 00:01:50.530
So we want to require
the babel-register module that we just

23
00:01:50.530 --> 00:01:54.750
installed, and so then babel-register
can hijack the require function, and

24
00:01:54.750 --> 00:02:00.900
then anything that uses require will
have that code transpiled on the fly.

25
00:02:00.900 --> 00:02:04.638
And then finally,
we're going to add a plugin here.

26
00:02:07.649 --> 00:02:11.920
&gt;&gt; Kent C Dodds: And that plug in is the
istanbul plug in that we just installed.

27
00:02:11.920 --> 00:02:14.580
So that will plug in istanbul,
we can just shorten it to istanbul.

28
00:02:16.670 --> 00:02:21.780
So with that, if you run NPMT to run

29
00:02:21.780 --> 00:02:26.906
your test you should get results.

30
00:02:29.451 --> 00:02:31.682
&gt;&gt; Kent C Dodds: Raise your hand
as soon as you get to that.

31
00:02:37.117 --> 00:02:39.355
&gt;&gt; Kent C Dodds: And
let me just move this out of the way.

32
00:02:42.227 --> 00:02:46.460
&gt;&gt; Kent C Dodds: So you've got your
plugins here in the babel config.

33
00:02:46.460 --> 00:02:48.110
Plugins is istanbul, it's an array.

34
00:02:48.110 --> 00:02:53.020
You've got a couple online
folks who've got it.

35
00:02:53.020 --> 00:02:58.914
Instrument is false, sourceMap is false,
require, babel-register.

36
00:03:00.790 --> 00:03:01.631
Anybody here got it yet?

37
00:03:08.597 --> 00:03:10.045
&gt;&gt; Kent C Dodds: Awesome, air five.

38
00:03:10.045 --> 00:03:10.545
&gt;&gt; [SOUND]
&gt;&gt; Audience: Woohoo!

39
00:03:13.360 --> 00:03:14.300
&gt;&gt; Kent C Dodds: Okay, sweet.

40
00:03:14.300 --> 00:03:16.950
An air five to you online people,
good job.

41
00:03:18.610 --> 00:03:20.780
Okay, so now we have a problem.

42
00:03:20.780 --> 00:03:21.847
Let's go ahead and run our build.

43
00:03:24.819 --> 00:03:28.200
&gt;&gt; Kent C Dodds: And open up our index.

44
00:03:29.880 --> 00:03:31.800
And you're gonna see
something kinda frightening.

45
00:03:34.720 --> 00:03:39.210
It is, yeah, doing a bunch of crazy stuff.

46
00:03:39.210 --> 00:03:43.210
Remember that variable thing
that I was telling you about.

47
00:03:43.210 --> 00:03:44.960
Yeah, this is the stuff that it's doing.

48
00:03:46.210 --> 00:03:48.190
Yeah, that looks nothing
like what I showed you but

49
00:03:48.190 --> 00:03:50.080
it's the basic, the same basic idea.

50
00:03:50.080 --> 00:03:54.380
It's saying, okay, take some variable,
some property off that variable, and

51
00:03:54.380 --> 00:03:55.460
increment that by one.

52
00:03:56.920 --> 00:04:00.370
So, we don't want to actually distribute
this to our users, of course.

53
00:04:00.370 --> 00:04:01.720
That would be kind of rude.

54
00:04:03.540 --> 00:04:04.080
Yeah.

55
00:04:04.080 --> 00:04:06.380
And it's too much stuff.

56
00:04:06.380 --> 00:04:08.020
It would not be very performant.

57
00:04:08.020 --> 00:04:12.930
So, what we're going to do
is we want to differentiate

58
00:04:12.930 --> 00:04:17.875
between our test environment and
our normal environment and

59
00:04:17.875 --> 00:04:25.310
babel has the ability to let you key off
of the environment variable, node env.

60
00:04:25.310 --> 00:04:27.920
You can also use babel env as well.

61
00:04:27.920 --> 00:04:30.810
But these are just
environment variables that

62
00:04:30.810 --> 00:04:34.300
you set to get babel to behave
a little bit differently.

63
00:04:34.300 --> 00:04:38.120
And so first we'll configure
babel to behave differently given

64
00:04:38.120 --> 00:04:40.560
like a certain environment.

65
00:04:40.560 --> 00:04:44.480
And we do that in our
package.json under the babel

66
00:04:44.480 --> 00:04:47.660
object with the env property as an object.

67
00:04:49.120 --> 00:04:54.770
And then the inside of that where
you want to specify our differences

68
00:04:54.770 --> 00:04:58.487
when we're in the test environment, so
as an object inside of the env object

69
00:04:58.487 --> 00:05:03.170
we'll specify test, and that's where
we put our test only configuration.

70
00:05:10.960 --> 00:05:14.510
So those of you who are the web pack
workshop yesterday this looks familiar.

71
00:05:16.050 --> 00:05:21.270
So then to make babel do
something with this we need to,

72
00:05:21.270 --> 00:05:24.080
sorry let me just so
you can take a look at it really quick.

73
00:05:26.020 --> 00:05:28.470
To make babel do something with this,

74
00:05:28.470 --> 00:05:32.220
we do need to set that environment
variable before we run the test.

75
00:05:32.220 --> 00:05:36.950
The way that we can do that is
actually platform specific.

76
00:05:36.950 --> 00:05:41.040
So we're gonna get something that'll make
it so that we don't have to be platform

77
00:05:41.040 --> 00:05:45.970
specific, but I'll just show you
what it looks like normally and

78
00:05:45.970 --> 00:05:49.690
that is in our test command we'll say so
this for

79
00:05:49.690 --> 00:05:54.530
Mac only if you're on Windows just hold
off on a site if you do know how to

80
00:05:54.530 --> 00:05:56.980
like set environment variables with
Windows you can try this for that.

81
00:05:56.980 --> 00:05:59.580
Well, we will say node to ENV equals test.

82
00:06:01.020 --> 00:06:04.910
And now if I run NPM build or

83
00:06:04.910 --> 00:06:11.540
NPM run build then I look at my index and
everything looks hunky dory.

84
00:06:11.540 --> 00:06:18.460
And if I run NPMT for running the test,
then everything passes just fine.

85
00:06:18.460 --> 00:06:21.100
So I'm getting the best of both worlds,
they're both working.

86
00:06:24.320 --> 00:06:26.030
Any questions so far?

87
00:06:27.060 --> 00:06:32.050
So, like I said, if you're on Windows,
doing this will not work and

88
00:06:32.050 --> 00:06:35.160
I battled with this for quite some time

89
00:06:35.160 --> 00:06:39.734
until I finally wrote
something called cross-env.

90
00:06:39.734 --> 00:06:41.640
That's all you need to do.

91
00:06:41.640 --> 00:06:45.080
Of course, you'll need to install it,
which you already have,

92
00:06:45.080 --> 00:06:49.194
but by adding cross-env in front of there,
this will work on Windows and Mac and

93
00:06:49.194 --> 00:06:52.850
Linux and hopefully everywhere.

94
00:06:52.850 --> 00:06:54.440
That's the idea.

95
00:06:56.490 --> 00:06:58.817
So you do it as if it's a Linux machine,
but

96
00:06:58.817 --> 00:07:03.232
cross-env will detect your platform and
set the environment variable for you.

97
00:07:05.860 --> 00:07:09.937
&gt;&gt; Kent C Dodds: So then if we run npm t,
we should still get passing tests.

98
00:07:12.172 --> 00:07:12.835
&gt;&gt; Kent C Dodds: Yep.

99
00:07:15.899 --> 00:07:20.720
&gt;&gt; Kent C Dodds: Okay,
and that's it actually.

100
00:07:20.720 --> 00:07:22.410
Does anyone have any questions?

101
00:07:26.120 --> 00:07:27.180
Okay.

102
00:07:27.180 --> 00:07:31.220
I'm going to let people
ask questions here.

103
00:07:31.220 --> 00:07:36.100
I wish that I had a polling thing,
because if I did,

104
00:07:36.100 --> 00:07:40.740
I would poll you all and
ask you if you want to spend any time

105
00:07:40.740 --> 00:07:44.470
migrating this to ES6 that's not
exactly like part of the workshop, or

106
00:07:44.470 --> 00:07:50.650
something that I think is important for
your learning of making a library.

107
00:07:50.650 --> 00:07:54.170
But if enough of you want to have some
time to do that, then I can wait for

108
00:07:54.170 --> 00:07:55.350
five or ten minutes.

109
00:07:56.950 --> 00:07:59.270
Anybody wanna just kind of move on?

110
00:07:59.270 --> 00:08:00.940
You can learn the ES6 somewhere else.

111
00:08:00.940 --> 00:08:02.820
Yeah.
That's kind of what I was thinking, too.

112
00:08:02.820 --> 00:08:03.580
Okay.
Cool.

113
00:08:03.580 --> 00:08:05.170
Learning ES6 somewhere else.

114
00:08:05.170 --> 00:08:11.390
For now we're just gonna use
this magical git checkout thing.

115
00:08:11.390 --> 00:08:15.630
So actually I'm gonna just reference this.

116
00:08:15.630 --> 00:08:17.354
&gt;&gt; Student: Can I ask
you a question about the

117
00:08:19.392 --> 00:08:20.726
&gt;&gt; Student: The instrumentation that you

118
00:08:20.726 --> 00:08:21.640
showed us there.

119
00:08:21.640 --> 00:08:23.280
&gt;&gt; Kent C Dodds: Yeah.
&gt;&gt; Student: It looked like there

120
00:08:23.280 --> 00:08:26.020
were only a few lines
that were instrumented.

121
00:08:26.020 --> 00:08:30.910
Did it actually try to
un-instrument it during the,

122
00:08:30.910 --> 00:08:33.800
what happened to that there was-
&gt;&gt; Kent C Dodds: Yeah, yeah,

123
00:08:33.800 --> 00:08:37.470
let me answer that question,
yeah, I understand what you mean.

124
00:08:37.470 --> 00:08:42.800
So here actually let's go back to
exactly what you're talking about.

125
00:08:43.880 --> 00:08:49.140
Yeah, we'll do that, it will be
easiest to just say NODE_ENV=test and

126
00:08:49.140 --> 00:08:50.390
then npm run build.

127
00:08:52.720 --> 00:09:00.770
So with that, we have this function
that does who even knows what.

128
00:09:00.770 --> 00:09:05.220
And then we have our code right
here where it's instrumenting

129
00:09:05.220 --> 00:09:08.670
this line by saying okay,
you got a require statement here and

130
00:09:08.670 --> 00:09:11.290
you need to make sure that
this assignment runs.

131
00:09:11.290 --> 00:09:14.370
This main export line needs to run.

132
00:09:14.370 --> 00:09:18.180
We also did have the import
statement up here.

133
00:09:18.180 --> 00:09:20.710
This is generated code.

134
00:09:20.710 --> 00:09:25.710
So there is somewhere in here where that
import statement is verified to run.

135
00:09:25.710 --> 00:09:29.020
So we are instrumenting
every interesting thing.

136
00:09:29.020 --> 00:09:33.210
Maybe I could put a couple if statements
in here, but I think you get the idea.

137
00:09:33.210 --> 00:09:40.440
If we open up that coverage report though,
lcov-report/index.html.

138
00:09:40.440 --> 00:09:43.660
Then we're going to see that there
are actually only three lines

139
00:09:44.680 --> 00:09:46.586
that have instrumentation reported.

140
00:09:46.586 --> 00:09:51.600
I'm guessing that probably
the reason that this import

141
00:09:51.600 --> 00:09:56.500
statement is not being reported is likely

142
00:09:56.500 --> 00:10:02.100
because your program wouldn't run
at all if that wasn't correct.

143
00:10:02.100 --> 00:10:03.090
That's my guess.

144
00:10:03.090 --> 00:10:08.640
I don't know how you would instrument
an ES6 import because it's static.

145
00:10:08.640 --> 00:10:10.980
And so your program won't even run.

146
00:10:12.290 --> 00:10:13.400
That's my guess.

147
00:10:13.400 --> 00:10:19.310
But that'd be definitely an issue
to file and ask about on NYC.

148
00:10:19.310 --> 00:10:21.340
But yeah,
there is not a whole lot in here,

149
00:10:21.340 --> 00:10:24.870
not many lines in here to
even instrument anyway.

150
00:10:24.870 --> 00:10:25.950
That's why you don't see too much.

151
00:10:27.340 --> 00:10:28.070
Great question.

152
00:10:29.070 --> 00:10:37.030
Okay, so
let's just get back to this thing.

153
00:10:39.000 --> 00:10:40.650
Wait, no, it is.

154
00:10:40.650 --> 00:10:41.770
Yeah, actually I didn't change anything.

155
00:10:41.770 --> 00:10:46.561
So we'll get diff with the next
branch just to see what we've.

156
00:10:46.561 --> 00:10:53.161
Whoops, just copy this guy.

157
00:10:59.060 --> 00:11:00.470
&gt;&gt; Kent C Dodds: Okay, I'm lost.

158
00:11:00.470 --> 00:11:02.302
Forget it.
We'll just check out the next branch.

159
00:11:02.302 --> 00:11:02.926
[LAUGH]

