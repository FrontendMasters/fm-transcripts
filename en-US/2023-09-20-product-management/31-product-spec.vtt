WEBVTT

1
00:00:00.000 --> 00:00:02.569
The product spec.

2
00:00:02.569 --> 00:00:08.264
You can notice it, this is actually
the longest section on this entire course,

3
00:00:08.264 --> 00:00:13.619
but it's probably the most important
doc you write on a consistent basis.

4
00:00:13.619 --> 00:00:17.253
This gets called a lot of things, I will
be calling it the spec for the rest of

5
00:00:17.253 --> 00:00:21.139
this course because so far every company
I've worked at has called it the spec.

6
00:00:21.139 --> 00:00:26.040
But you'll hear this called the product
specification, the product proposal,

7
00:00:26.040 --> 00:00:29.035
the product sheet, but
we'll go with spec here.

8
00:00:29.035 --> 00:00:30.992
I'm sure I'll start talking about this,
and

9
00:00:30.992 --> 00:00:33.862
if your organization has a peculiar
name for it, that'll come up.

10
00:00:33.862 --> 00:00:35.256
&gt;&gt; Statement of work.

11
00:00:35.256 --> 00:00:37.461
&gt;&gt; Statement of work, that would
actually be another really good one.

12
00:00:37.461 --> 00:00:42.461
Some companies will just call it a ticket,
right?

13
00:00:42.461 --> 00:00:46.229
An email if you're working
at a weird company,

14
00:00:46.229 --> 00:00:49.918
there's a there's a lot
of ways to call this.

15
00:00:49.918 --> 00:00:54.720
But it's basically a source of truth
that like this describes the thing

16
00:00:54.720 --> 00:00:59.120
that we're about to do, and
here's all the relevant details for

17
00:00:59.120 --> 00:01:02.816
anyone that needs to get
aligned on what we're doing.

18
00:01:02.816 --> 00:01:08.128
This should not be a a dead doc, which is
why email is a terrible place for this.

19
00:01:08.128 --> 00:01:11.986
This should be a living doc
that as you learn more and

20
00:01:11.986 --> 00:01:16.664
as you update more,
that this gets updated as you go, right?

21
00:01:16.664 --> 00:01:21.181
So another note here, I've given this
caveat a bunch of times, but I'm gonna

22
00:01:21.181 --> 00:01:25.848
give it here because, again, I think
this section is particularly important.

23
00:01:25.848 --> 00:01:30.480
I'm going to give you my tips and tricks
of how I write product specs, and how I've

24
00:01:30.480 --> 00:01:35.197
seen successful ones over the year, and
stuff that I've taken from other people.

25
00:01:35.197 --> 00:01:38.563
How you choose to write product
specs is totally up to you, and

26
00:01:38.563 --> 00:01:41.110
you should lean into
your own strengths here.

27
00:01:41.110 --> 00:01:45.334
So if you hear something here that you
are unsure about or you might like,

28
00:01:45.334 --> 00:01:49.833
emulate it, try it on, see if it works for
you, and you'll either find out,

29
00:01:49.833 --> 00:01:52.344
I don't like this, I like this just as is.

30
00:01:52.344 --> 00:01:56.246
Or here's this middle ground between what
I thought and what Brian's proposing, and

31
00:01:56.246 --> 00:01:57.431
I'm gonna stick to that.

32
00:01:57.431 --> 00:02:01.123
So I'm inviting you very much to
put your own lenses on here and

33
00:02:01.123 --> 00:02:03.040
absorb this through that way and

34
00:02:03.040 --> 00:02:07.593
then realize that I'm way smarter then
you should just do it my way, right?

35
00:02:07.593 --> 00:02:10.766
I'm just kidding, please don't do that.

36
00:02:10.766 --> 00:02:14.936
So product spec describes
some parcel of work,

37
00:02:14.936 --> 00:02:22.353
this will usually be some enhancement to a
product, maybe it might be a new product.

38
00:02:22.353 --> 00:02:26.526
It should be not necessarily exhaustive,
but

39
00:02:26.526 --> 00:02:31.341
it should link to enough
other things that considered

40
00:02:31.341 --> 00:02:35.195
together it could be exhaustive, right?

41
00:02:35.195 --> 00:02:36.379
So, for example,

42
00:02:36.379 --> 00:02:40.969
a lot of my product specs do not have
all of the technical specifications or

43
00:02:40.969 --> 00:02:45.855
all the edge cases described that the
engineers will work on, but I will link to

44
00:02:45.855 --> 00:02:50.468
those docs, I will put the designs in
the doc, but I will link to the docs.

45
00:02:50.468 --> 00:02:54.757
It should be the nexus of your project or
the center, right,

46
00:02:54.757 --> 00:02:57.966
the town square of this
particular project.

47
00:02:57.966 --> 00:03:02.650
My product specs match one-to-one
to things that go on my roadmap.

48
00:03:02.650 --> 00:03:06.167
I don't know if that necessarily
needs to be true, but

49
00:03:06.167 --> 00:03:09.684
if I have big projects that
are split across quarters,

50
00:03:09.684 --> 00:03:14.423
I'll have a product spec typically
per milestone, or at the very least,

51
00:03:14.423 --> 00:03:18.871
one larger product spec that describes
all the milestones in depth.

52
00:03:18.871 --> 00:03:22.230
But its good not to let these
get totally out of control,

53
00:03:22.230 --> 00:03:26.179
because if it's 100 pages,
no one's gonna read it, right?

54
00:03:26.179 --> 00:03:32.021
My product specs, I'm gonna say average,
smaller projects, probably two pages.

55
00:03:32.021 --> 00:03:36.917
Largest projects are probably ten pages.

56
00:03:36.917 --> 00:03:42.543
I don't know, that's finger in
the air kind of thinking about it.

57
00:03:42.543 --> 00:03:47.307
You can do a half pager for something
really small but that would be very,

58
00:03:47.307 --> 00:03:48.175
very small.

59
00:03:48.175 --> 00:03:52.529
&gt;&gt; When you talk about your page count,
may I ask directly,

60
00:03:52.529 --> 00:03:55.624
what it is that you're approximating?

61
00:03:55.624 --> 00:04:00.591
Is it the amount that needs to
be communicated to describe

62
00:04:00.591 --> 00:04:02.455
the concept or idea?

63
00:04:02.455 --> 00:04:05.398
So, let me pick a really easy one.

64
00:04:05.398 --> 00:04:10.574
I've got a data scientist, Jason put this
behind something that we can query, okay?

65
00:04:10.574 --> 00:04:14.842
So what I'm gonna hand you
is a flask app with one HTTP

66
00:04:14.842 --> 00:04:18.443
endpoint that accesses my model, period.

67
00:04:18.443 --> 00:04:19.592
That's all I'm gonna give you.

68
00:04:19.592 --> 00:04:22.385
But to describe that is a paragraph,

69
00:04:22.385 --> 00:04:26.088
unless I get into describing the model,
right?

70
00:04:26.088 --> 00:04:30.920
So how do you think about what
deserves half a page versus what

71
00:04:30.920 --> 00:04:32.635
deserves ten pages?

72
00:04:32.635 --> 00:04:34.806
You were talking a little
bit about complexity, but

73
00:04:34.806 --> 00:04:37.232
what features of complexity,
I suppose, would cue you?

74
00:04:37.232 --> 00:04:42.749
&gt;&gt; Yeah, I think it's gonna be most
driven by how much alignment I'm driving.

75
00:04:42.749 --> 00:04:45.881
In this particular case,
it sounds like it's you and Jason and

76
00:04:45.881 --> 00:04:49.545
you are the only two stakeholders in
this particular product project, so

77
00:04:49.545 --> 00:04:50.921
less is more here, right?

78
00:04:50.921 --> 00:04:54.326
So, I need this end result.

79
00:04:54.326 --> 00:04:55.198
Here you go.

80
00:04:55.198 --> 00:04:59.017
In which case, by all means, just put
it in an email, or a Slack message, or

81
00:04:59.017 --> 00:05:00.153
something like that,

82
00:05:00.153 --> 00:05:03.709
where wherever Jason would like to
be reached, put it there, right?

83
00:05:03.709 --> 00:05:05.738
You don't have to drive much
alignment between you two,

84
00:05:05.738 --> 00:05:07.650
you just need basically
a statement of work, right?

85
00:05:07.650 --> 00:05:12.134
I need this thing and
I have this timeline.

86
00:05:12.134 --> 00:05:17.008
Most of the things I work
on probably incorporate ten

87
00:05:17.008 --> 00:05:20.456
different stakes at the very least.

88
00:05:20.456 --> 00:05:23.890
Legal, security, design, engineering, and

89
00:05:23.890 --> 00:05:28.595
management, product management,
project management like so.

90
00:05:28.595 --> 00:05:33.705
At the scale that I work at, I have to
satisfy at least 10 different viewpoints

91
00:05:33.705 --> 00:05:38.527
with any product spec, and that can
balloon based on how big something is.

92
00:05:38.527 --> 00:05:43.439
One of the projects that work on
touches all snowflake which means that

93
00:05:43.439 --> 00:05:47.444
If I have to speak to thousands of people,
potentially.

94
00:05:47.444 --> 00:05:51.108
That is a very large project spect or
product spec,

95
00:05:51.108 --> 00:05:53.414
so either one of those are fine.

96
00:05:53.414 --> 00:05:54.831
So does that answer your question?

97
00:05:54.831 --> 00:05:55.795
&gt;&gt; It's a great, thank you.

98
00:05:55.795 --> 00:05:58.143
&gt;&gt; Yeah, there we go.

99
00:05:58.143 --> 00:06:03.166
So I'm gonna give you a rough
a framework of how I think about it,

100
00:06:03.166 --> 00:06:07.647
and this is just stuff that I
found useful over the years.

101
00:06:07.647 --> 00:06:11.066
This didn't come from anywhere
other than my own brain and

102
00:06:11.066 --> 00:06:15.613
stuff that I've stolen from my co-workers
that I saw as effective, right?

103
00:06:15.613 --> 00:06:19.330
I think this would apply
across many industries and

104
00:06:19.330 --> 00:06:24.007
then you would just add your own
specific flavor to this as well.

105
00:06:24.007 --> 00:06:27.116
There's some specific Stripe
stuff that we put in here,

106
00:06:27.116 --> 00:06:31.521
regulatory was a really big thing for
Stripe, and we always talked everything,

107
00:06:31.521 --> 00:06:34.912
are we gonna upset anything
regulation-wise by doing this?

108
00:06:34.912 --> 00:06:37.421
I have less of a problem
with that at Snowflake.

109
00:06:37.421 --> 00:06:40.804
We still have parts of Snowflake
have to be compliant, but

110
00:06:40.804 --> 00:06:44.062
we're not worried about
compliance on every project.

111
00:06:44.062 --> 00:06:48.052
So here is my nine sections that more or

112
00:06:48.052 --> 00:06:56.417
less make it into all of my particular
product specs that are of any normal size.

113
00:06:56.417 --> 00:06:59.553
The executive summary,
always the first thing.

114
00:06:59.553 --> 00:07:03.035
The problem statements
are in the user stories.

115
00:07:03.035 --> 00:07:07.024
Goals and non-goals, where I basically
say, I'm definitely gonna do this,

116
00:07:07.024 --> 00:07:08.817
I'm definitely not gonna do that.

117
00:07:08.817 --> 00:07:11.275
The key metrics that I expect to affect,
and

118
00:07:11.275 --> 00:07:14.607
I'll talk about these in depth
as I go through here as well.

119
00:07:14.607 --> 00:07:18.855
The rollback criteria, this one I
see a lot of people not do, and I'm

120
00:07:18.855 --> 00:07:23.848
going to invite you that I think it's a
good thing if it applies to your industry.

121
00:07:23.848 --> 00:07:27.861
If we don't do these things, or
we don't meet these goals, or

122
00:07:27.861 --> 00:07:32.708
these goals don't accomplish, and
we see that we see no path forward on it,

123
00:07:32.708 --> 00:07:35.318
we're gonna roll back to where we were.

124
00:07:35.318 --> 00:07:38.913
Because I like to be very explicit with,
this is an experiment,

125
00:07:38.913 --> 00:07:40.858
everything I do is an experiment.

126
00:07:40.858 --> 00:07:43.622
I don't know if I'm right,
even if I've done a bunch of research.

127
00:07:43.622 --> 00:07:47.424
And if we prove to ourselves that
we don't think that we're right,

128
00:07:47.424 --> 00:07:51.825
we're gonna go back to where we were,
so we don't have dead weight that we're

129
00:07:51.825 --> 00:07:55.113
carrying through of all these
dead experiments, right?

130
00:07:55.113 --> 00:08:01.423
Timelines, design mocks, outstanding
questions, and then appendices.

131
00:08:01.423 --> 00:08:03.573
Some projects will have less than this,

132
00:08:03.573 --> 00:08:07.559
some projects like rollback criteria
just won't make any sense, right?

133
00:08:07.559 --> 00:08:11.975
Some projects have such short timelines
that you don't really need to diagram too

134
00:08:11.975 --> 00:08:13.647
much out what the timeline is.

135
00:08:13.647 --> 00:08:17.705
Some questions or some projects you just
don't have any outstanding questions,

136
00:08:17.705 --> 00:08:19.247
some don't have appendices.

137
00:08:19.247 --> 00:08:22.738
Some things are like APIs that
you're putting out there, so

138
00:08:22.738 --> 00:08:24.249
you don't need designs.

139
00:08:24.249 --> 00:08:28.193
I guess in this particular section,
actually if you were doing an API,

140
00:08:28.193 --> 00:08:32.334
I probably would mark out code and when
I code I would expect to look like that

141
00:08:32.334 --> 00:08:34.592
calls it, I've done that a lot before.

142
00:08:34.592 --> 00:08:38.894
But some things just won't have some sort
of visual representation, that's fine.

143
00:08:38.894 --> 00:08:42.308
But my overarching principle
principle here is the same.

144
00:08:42.308 --> 00:08:46.734
This is roughly ordered in
the order of importance to me,

145
00:08:46.734 --> 00:08:52.188
as the product owner, I have what I
want you to read from this, right?

146
00:08:52.188 --> 00:08:56.227
If you only read the bluff,
I'm stoked, right?

147
00:08:56.227 --> 00:08:59.706
You got most of my point
of view read this, right?

148
00:08:59.706 --> 00:09:02.905
If you only read my
outstanding questions and

149
00:09:02.905 --> 00:09:07.367
technical concerns about my project,
I'm very upset at you,

150
00:09:07.367 --> 00:09:12.181
you read the wrong part of it,
right, I would never put that first.

151
00:09:12.181 --> 00:09:14.769
You might ask,
where am I gonna do context setting?

152
00:09:14.769 --> 00:09:16.298
Typically, in the problem statement.

153
00:09:16.298 --> 00:09:19.337
You're gonna give them enough
context about the problem and

154
00:09:19.337 --> 00:09:22.972
enough context about your proposed
solution here and the user studies,

155
00:09:22.972 --> 00:09:26.144
then they can understand the rest
of the product spec, right?

