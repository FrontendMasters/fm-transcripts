WEBVTT

1
00:00:00.198 --> 00:00:01.856
We had a whole section on this.

2
00:00:01.856 --> 00:00:07.339
I'm not going to spend a bunch of this or
spend a bunch of time on this.

3
00:00:07.339 --> 00:00:09.990
I write this last, the BLUF, right?

4
00:00:09.990 --> 00:00:14.016
Usually I'll let an AI client
take a run at it, like ChatGPT.

5
00:00:14.016 --> 00:00:17.175
Usually for me it's Notion,
cuz I can use that when at work.

6
00:00:17.175 --> 00:00:22.147
And say like, hey, summarize my entire
product spec into two to four lines.

7
00:00:22.147 --> 00:00:23.489
And it'll spit something out.

8
00:00:23.489 --> 00:00:26.177
I'll probably spend a half
hour tweaking it, and

9
00:00:26.177 --> 00:00:28.298
that's usually a good process for me.

10
00:00:28.298 --> 00:00:30.171
But I aim for that executive summary.

11
00:00:30.171 --> 00:00:34.048
It's like, if you land on this
product spec for the first time and

12
00:00:34.048 --> 00:00:37.660
you read just that and you leave,
that I got my point across.

13
00:00:37.660 --> 00:00:38.699
That's my goal.

14
00:00:38.699 --> 00:00:40.791
I don't know if I always get there.

15
00:00:40.791 --> 00:00:43.228
Sometimes that takes
more than four sentences.

16
00:00:43.228 --> 00:00:46.645
I mean, all these rules, again,
are designed to be broken, but

17
00:00:46.645 --> 00:00:47.649
less is more here.

18
00:00:47.649 --> 00:00:52.915
The more concise you can be about
the problem statement, the solution,

19
00:00:52.915 --> 00:00:58.206
and anything else you need to be in there,
the better you are.

20
00:00:58.206 --> 00:01:03.262
Okay, the problem statement and
user stories.

21
00:01:03.262 --> 00:01:07.232
Here whatever I didn't say in the BLUF,
I'll blow that out.

22
00:01:07.232 --> 00:01:09.650
I'll put a couple paragraphs here.

23
00:01:09.650 --> 00:01:10.504
This is a problem.

24
00:01:10.504 --> 00:01:13.135
We found this problem here.

25
00:01:13.135 --> 00:01:17.562
So put a little bit of
credibility appealing in there.

26
00:01:17.562 --> 00:01:18.910
And here's our solution,

27
00:01:18.910 --> 00:01:22.307
here's why we think this is going
to work here's the research that we

28
00:01:22.307 --> 00:01:25.662
did on that here's a bunch of links
if you need to go to those things.

29
00:01:25.662 --> 00:01:27.990
And I try and land on what here.

30
00:01:27.990 --> 00:01:32.108
I'm sure many of you have heard
the minimum viable product, right,

31
00:01:32.108 --> 00:01:33.886
let's get the MVP out there.

32
00:01:33.886 --> 00:01:36.106
I don't quite always agree with that.

33
00:01:36.106 --> 00:01:37.779
Sometimes I do agree with it.

34
00:01:37.779 --> 00:01:40.508
I try and go for
the minimum lovable product.

35
00:01:40.508 --> 00:01:45.195
Because sometimes when you go for
the minimum viable product, and

36
00:01:45.195 --> 00:01:50.383
to explain myself here, the idea
between behind a minimum viable product

37
00:01:50.383 --> 00:01:55.153
is that what is the minimum set of
features that we can launch here and

38
00:01:55.153 --> 00:01:59.117
have it still actually function
as a holistic product?

39
00:01:59.117 --> 00:02:03.159
Frequently, that has you stripping out
the thing that actually makes your product

40
00:02:03.159 --> 00:02:06.797
interesting and it doesn't quite
accomplish what you're going for, and

41
00:02:06.797 --> 00:02:10.030
therefore you're not actually
proving what your hypothesis is or

42
00:02:10.030 --> 00:02:11.435
isn't sometimes, right?

43
00:02:11.435 --> 00:02:14.400
So someone used this term,
minimum lovable product.

44
00:02:14.400 --> 00:02:19.372
Whereas, let's get the core set of
features plus the differentiator that we

45
00:02:19.372 --> 00:02:24.040
need here for this actually to be
holistically proving to ourselves this

46
00:02:24.040 --> 00:02:28.800
product Specter is viable to go forward or
it's not viable to go forward.

47
00:02:28.800 --> 00:02:33.538
You might argue that that's
the viable part of it, but

48
00:02:33.538 --> 00:02:39.732
whatever I like this term so
I stick with it, minimum lovable product.

49
00:02:39.732 --> 00:02:43.021
So find your balance.

50
00:02:43.021 --> 00:02:43.932
Yeah.

51
00:02:43.932 --> 00:02:48.387
I tried to preserve where possible
what makes a product special and

52
00:02:48.387 --> 00:02:50.783
ruthlessly cut anything else out.

53
00:02:50.783 --> 00:02:54.462
Anything that's optional, tangential,
only affects some of our users.

54
00:02:54.462 --> 00:02:57.297
Those are the kind of things
that I try and cut out.

55
00:02:57.297 --> 00:02:59.139
So try and
find whatever your balance is there.

56
00:03:02.512 --> 00:03:08.413
Okay, goals and non-goals.

57
00:03:08.413 --> 00:03:13.314
This is actually more useful for
the non-goals section.

58
00:03:13.314 --> 00:03:16.806
Here, I try and say, like, I'm trying
to do this, I'm trying to do this, and

59
00:03:16.806 --> 00:03:17.863
I'm trying to do this.

60
00:03:17.863 --> 00:03:19.698
And if you don't put in the non-goal
section, someone's like, well,

61
00:03:19.698 --> 00:03:20.356
did you think about this?

62
00:03:20.356 --> 00:03:21.497
Did you think about this?

63
00:03:21.497 --> 00:03:24.144
Did you think about this?

64
00:03:24.144 --> 00:03:26.577
And when you definitely already have,
because it's obvious, and

65
00:03:26.577 --> 00:03:29.150
the person's just trying to hear
the sound of their own voice, right?

66
00:03:29.150 --> 00:03:32.622
So the non-goals, like we
are explicitly not working on this,

67
00:03:32.622 --> 00:03:36.949
we're not shipping this and we're not
going after this demographic, right?

68
00:03:36.949 --> 00:03:42.110
So a good example this is, hey,
we have this dependency on,

69
00:03:42.110 --> 00:03:45.362
I don't know, like GitHub, right?

70
00:03:45.362 --> 00:03:49.314
And you're building this entire
thing about integrating with GitHub.

71
00:03:49.314 --> 00:03:51.824
And in your non-goal section,
you might put like,

72
00:03:51.824 --> 00:03:56.106
we're explicitly only chasing GitHub here,
and we're not thinking about BitBucket,

73
00:03:56.106 --> 00:03:57.835
we're not thinking about GitLab.

74
00:03:57.835 --> 00:04:01.556
We're not thinking about any of
these other services right now,

75
00:04:01.556 --> 00:04:05.888
we're just focusing on GitHub because
we want to try something first before

76
00:04:05.888 --> 00:04:08.140
we fan out to everything else, right?

77
00:04:08.140 --> 00:04:12.429
Non-goals would be a good place to put
that, as like we're not trying any of

78
00:04:12.429 --> 00:04:17.002
these other things until we prove that
the GitHub integration works well first.

79
00:04:18.240 --> 00:04:23.100
This is your guard against scope creep,
which some of you might have heard of but

80
00:04:23.100 --> 00:04:25.723
let me explain to you just really quickly.

81
00:04:25.723 --> 00:04:30.203
The scope, in fact this is what goals and
non-goals are doing.

82
00:04:30.203 --> 00:04:32.332
You're basically defining
the scope of your project.

83
00:04:32.332 --> 00:04:36.001
And scope creep is the unfortunate
thing where things kind of just keep

84
00:04:36.001 --> 00:04:37.503
seeping into your project.

85
00:04:37.503 --> 00:04:38.996
It's like, we should add this.

86
00:04:38.996 --> 00:04:39.800
We should add that.

87
00:04:39.800 --> 00:04:41.622
We should add Bitbucket,
we should add GitLab.

88
00:04:41.622 --> 00:04:44.946
We should add add self-hosted Git,
we should add SPN,

89
00:04:44.946 --> 00:04:47.006
we should add Mercurial, right?

90
00:04:47.006 --> 00:04:49.818
And all sudden,
your project which was very tight and

91
00:04:49.818 --> 00:04:53.569
very focused becomes blown out, and
what was supposed to take a month,

92
00:04:53.569 --> 00:04:55.651
that's now going to take a year right?

93
00:04:55.651 --> 00:04:58.646
You would call that scope creep.

94
00:04:58.646 --> 00:05:03.410
This section is basically you playing
goalie trying to prevent scope creep on

95
00:05:03.410 --> 00:05:04.885
your project, right?

96
00:05:04.885 --> 00:05:08.490
You're trying to preemptively block
things and then when someone says later,

97
00:05:08.490 --> 00:05:11.285
that's something you didn't think of,
you can say, okay,

98
00:05:11.285 --> 00:05:14.650
let's add that to the non-goals,
because I don't wanna do that right?

99
00:05:14.650 --> 00:05:19.886
And so it's kinda your ability to
prevent that from continually coming up.

100
00:05:21.959 --> 00:05:24.080
&gt;&gt; It should be easy, they say.

101
00:05:24.080 --> 00:05:24.712
You did it in the last project.

102
00:05:24.712 --> 00:05:26.791
Why not do it for this one too, right?

103
00:05:26.791 --> 00:05:28.897
The same filters, it should be easy.

104
00:05:28.897 --> 00:05:30.275
I'm like, maybe no.

105
00:05:30.275 --> 00:05:31.232
&gt;&gt; Yep.
&gt;&gt; For you.

106
00:05:31.232 --> 00:05:34.559
[LAUGH]
&gt;&gt; Put it in the non-goal section,

107
00:05:34.559 --> 00:05:36.532
make them fight you on it.

108
00:05:36.532 --> 00:05:40.384
And typically, people will, as soon as
you list it in there, it's like, hey,

109
00:05:40.384 --> 00:05:41.632
here's your feedback and

110
00:05:41.632 --> 00:05:44.824
I put it in the spec of stuff that
I'm definitely not gonna work on.

111
00:05:44.824 --> 00:05:48.098
Usually they feel fulfilled
that they feel heard, right?

112
00:05:48.098 --> 00:05:50.036
You heard it, you thought about it, and

113
00:05:50.036 --> 00:05:52.205
you decided it wasn't
what you wanted to do.

114
00:05:52.205 --> 00:05:55.340
For many people, that's enough.

115
00:05:55.340 --> 00:05:58.133
Right?
&gt;&gt; File that right here in the shredder.

116
00:05:58.133 --> 00:06:02.293
&gt;&gt; Yeah, you, yeah you can call this
the shredder if you want, right.

117
00:06:02.293 --> 00:06:03.704
I like that.

118
00:06:03.704 --> 00:06:08.328
Maybe don't call it the shredder though,
just implicitly.

119
00:06:08.328 --> 00:06:10.064
Key metrics.

120
00:06:10.064 --> 00:06:10.896
We've talked about this
already previously.

121
00:06:10.896 --> 00:06:17.583
This is where you're actually going to
list out stuff that I intend to affect.

122
00:06:17.583 --> 00:06:19.793
Here's how I'm measuring success.

123
00:06:19.793 --> 00:06:27.025
And if I don't affect these things,
this is what I would consider a failure.

124
00:06:27.025 --> 00:06:31.658
So I wrote down some thoughts here
of things that I think about when I

125
00:06:31.658 --> 00:06:33.411
write my product specs.

126
00:06:33.411 --> 00:06:37.782
MAU, which is what a lot of
people call monthly active users.

127
00:06:37.782 --> 00:06:43.686
MAUs, MAUs, or DAUs, daily active users is
a good metric that a lot of people track.

128
00:06:43.686 --> 00:06:48.614
I imagine many of your companies track
how many users are active at least once

129
00:06:48.614 --> 00:06:52.858
a month, and they consider those
people active on your product.

130
00:06:52.858 --> 00:06:54.720
A couple of things.

131
00:06:54.720 --> 00:06:55.819
It is a good metric.

132
00:06:55.819 --> 00:06:58.111
You should track it if it
applies to your business.

133
00:06:58.111 --> 00:07:03.884
However, it is not always 100%
the end-all, be-all of your product.

134
00:07:03.884 --> 00:07:07.204
If a user uses VS Code once a month,

135
00:07:07.204 --> 00:07:11.681
would you call them deeply
engaged in VS Code?

136
00:07:11.681 --> 00:07:13.401
No, probably not, right?

137
00:07:13.401 --> 00:07:15.145
They're not certainly not
your most power users.

138
00:07:15.145 --> 00:07:18.708
Once a month is not that much for
a code editor.

139
00:07:18.708 --> 00:07:23.311
Is once a month good for a, I don't know,

140
00:07:23.311 --> 00:07:26.741
like monthly budget tracker?

141
00:07:26.741 --> 00:07:33.217
Yeah, it's probably actually pretty deeply
engaged with the budget tracker, right?

142
00:07:33.217 --> 00:07:38.100
So it's gonna be super contextual
to whatever you're working on.

143
00:07:38.100 --> 00:07:43.667
Here's an example that
Microsoft did years ago.

144
00:07:43.667 --> 00:07:48.642
They had a pretty big dip in MAU on
Excel and they were wondering why it is.

145
00:07:48.642 --> 00:07:52.863
And they found out that a lot
of these businesses had moved to

146
00:07:52.863 --> 00:07:57.093
quarterly finance reports as
opposed to monthly reports.

147
00:07:57.093 --> 00:08:00.451
And so they had these like
huge spikes every quarter.

148
00:08:00.451 --> 00:08:04.315
And they found out it was just users that
were opening their, you know, reports,

149
00:08:04.315 --> 00:08:08.132
reading them and closing them, and then
not opening it again until the next one.

150
00:08:08.132 --> 00:08:10.412
Is that an active user on Excel?

151
00:08:10.412 --> 00:08:14.161
It's not not an active user.

152
00:08:14.161 --> 00:08:15.003
For those users,

153
00:08:15.003 --> 00:08:18.268
probably that's as engaged as
you're gonna get with them, right?

154
00:08:18.268 --> 00:08:23.052
And so they actually had to come up with
a quarterly active user metric to make

155
00:08:23.052 --> 00:08:26.567
sure there's all right,
are we capturing those people

156
00:08:26.567 --> 00:08:30.381
that are only ever going to
open any spreadsheet quarterly,

157
00:08:30.381 --> 00:08:34.005
what are we doing for
these most casual of users, right?

158
00:08:34.005 --> 00:08:37.813
Because monthly, like they had, the spikes
were really weirding them out and

159
00:08:37.813 --> 00:08:41.505
it really affected their metrics in
strange ways, but once they normalized

160
00:08:41.505 --> 00:08:45.500
across the quarter, it got much easier for
them to interpret their data, right?

161
00:08:45.500 --> 00:08:51.795
So, think about multiple
axes of active users.

162
00:08:51.795 --> 00:08:56.402
So, specifically for VS Code,
we looked at people that opened once,

163
00:08:56.402 --> 00:09:01.011
opened twice, and opened seven times for,
like, lightly engaged,

164
00:09:01.011 --> 00:09:05.013
engaged, and deeply engaged
users across a month, right?

165
00:09:05.013 --> 00:09:08.518
Because we figured, like,
if you're opening seven times a month,

166
00:09:08.518 --> 00:09:12.402
you're using enough VS code that we're
satisfied with how active you are.

167
00:09:12.402 --> 00:09:17.009
&gt;&gt; Can you use like statistics to
kind of create analysis around that

168
00:09:17.009 --> 00:09:18.274
average use and.

169
00:09:18.274 --> 00:09:21.196
&gt;&gt; Yep.
There's all sorts of stuff you can do

170
00:09:21.196 --> 00:09:25.282
around it that I am not qualified
to talk to you too much about.

171
00:09:25.282 --> 00:09:28.446
[LAUGH] Yep, absolutely.

172
00:09:28.446 --> 00:09:30.024
And we have data scientists
that look at it.

173
00:09:33.017 --> 00:09:37.395
Yeah, we talked about this previously but
a CSAT is the metric you're looking for,

174
00:09:37.395 --> 00:09:40.371
plan for the long tail it takes
a long time to affect CSAT.

175
00:09:40.371 --> 00:09:44.895
Let me tell you from years of
experience doing this across

176
00:09:44.895 --> 00:09:49.428
multiple companies,
CSAT takes a long time to bear out.

177
00:09:49.428 --> 00:09:53.405
And then, yeah, pair CSAT with something
more trackable, more immediate,

178
00:09:53.405 --> 00:09:54.739
that will serve you well.

179
00:09:54.739 --> 00:09:58.994
If you're doing a project that,
and your only metric is CSAT,

180
00:09:58.994 --> 00:10:01.336
it's not gonna be a good project.

181
00:10:01.336 --> 00:10:05.942
I don't think I've ever seen that before.

182
00:10:05.942 --> 00:10:09.084
Your project should always
include team metrics.

183
00:10:09.084 --> 00:10:13.279
And if it's not including team metrics,
it should always include company metrics.

184
00:10:13.279 --> 00:10:16.999
So some of the products that I have
to do today as part of my job,

185
00:10:16.999 --> 00:10:19.876
I'm helping sister teams
with their metrics.

186
00:10:19.876 --> 00:10:20.858
That's fine.

187
00:10:20.858 --> 00:10:22.795
Just call that out.

188
00:10:22.795 --> 00:10:26.121
And we do ladder up to team
organizational metrics, but

189
00:10:26.121 --> 00:10:28.260
we do not ladder up into my metrics.

190
00:10:28.260 --> 00:10:29.537
It's fine, right?

191
00:10:29.537 --> 00:10:30.769
Team dependencies are a thing.

192
00:10:30.769 --> 00:10:34.381
We have to all be team players,
so just call that out.

193
00:10:36.470 --> 00:10:41.414
And if you are not laddering up into a
core metric, be very explicit like, we're

194
00:10:41.414 --> 00:10:46.594
doing these things, and here's why we're
not contributing to the company goals.

195
00:10:46.594 --> 00:10:48.376
Now, that can be a bet, right?

196
00:10:48.376 --> 00:10:49.136
I've seen things like that.

197
00:10:49.136 --> 00:10:51.166
It's like, hey,
we're going to try this thing and

198
00:10:51.166 --> 00:10:54.275
we're betting that this could eventually
become a core metric of the company.

199
00:10:54.275 --> 00:10:55.401
That's fine.

200
00:10:55.401 --> 00:10:59.293
Just talk about it.

201
00:10:59.293 --> 00:11:00.055
This one's hard.

202
00:11:00.055 --> 00:11:03.218
If you know specific goals,
we want to grow by X,

203
00:11:03.218 --> 00:11:07.788
we want to slow tickets by X percent,
we want to cut spend by X percent.

204
00:11:07.788 --> 00:11:09.048
Call that out.

205
00:11:09.048 --> 00:11:11.743
You're not always going to know that.

206
00:11:11.743 --> 00:11:15.827
I try and at least always get
numbers in here eventually.

207
00:11:15.827 --> 00:11:19.783
Some of the things I have to kind of
establish a baseline of like, OK,

208
00:11:19.783 --> 00:11:20.952
we're doing this.

209
00:11:20.952 --> 00:11:22.159
What's our numbers now?

210
00:11:22.159 --> 00:11:22.692
OK.
And

211
00:11:22.692 --> 00:11:25.302
then once after the project is launched,
like, OK,

212
00:11:25.302 --> 00:11:27.043
we actually have a goal to get here.

213
00:11:27.043 --> 00:11:28.944
But I do try and
get these numbers in here eventually.

214
00:11:32.338 --> 00:11:33.050
Even guesses sometimes can be okay.

215
00:11:33.050 --> 00:11:36.400
Sometimes guesses can't be okay, right?

216
00:11:36.400 --> 00:11:37.955
So, just play that by ear.

217
00:11:40.508 --> 00:11:43.417
Sometimes utilization is not actually
the thing you're looking for.

218
00:11:43.417 --> 00:11:49.071
This is what's counterintuitive to me.

219
00:11:49.071 --> 00:11:54.196
It's okay to have people try something,
like it, and move on.

220
00:11:54.196 --> 00:11:57.872
So just one that hadn't popped into
my head because I was using it

221
00:11:57.872 --> 00:11:59.584
is a project called Compose.

222
00:11:59.584 --> 00:12:05.436
Kompose is a project that takes
a Docker compose file and

223
00:12:05.436 --> 00:12:10.051
turns it into a Kubernetes configuration.

224
00:12:10.051 --> 00:12:12.832
It's a project designed to
get you started, right?

225
00:12:12.832 --> 00:12:17.409
Now, I would argue, the most
successful use of the Kompose project,

226
00:12:17.409 --> 00:12:22.449
with a K here, is that you try it once,
and be like Kubernetes is awesome, and

227
00:12:22.449 --> 00:12:27.436
then you just write all of your Kubernetes
config files by hand now, right?

228
00:12:27.436 --> 00:12:31.583
You have successfully migrated from Docker
Kompose straight on to Kubernetes and

229
00:12:31.583 --> 00:12:33.094
you never use Kompose again.

230
00:12:33.094 --> 00:12:35.838
The most successful use
of this is one time.

231
00:12:35.838 --> 00:12:40.531
So how do you track that?

232
00:12:40.531 --> 00:12:44.643
It's gonna strongly depend on, for this
particular case, I would just track like

233
00:12:44.643 --> 00:12:48.242
one-time usage and then also track,
you know, Kubernetes adoption.

234
00:12:48.242 --> 00:12:50.972
And if I can correlate those two,
awesome, right?

235
00:12:50.972 --> 00:12:54.416
But sometimes that's not totally possible.

236
00:12:54.416 --> 00:12:58.025
But, yeah, just keep an eye on what
are you actually trying to affect?

237
00:12:58.025 --> 00:13:00.720
What is your actual goal for the project?

238
00:13:00.720 --> 00:13:04.836
If you have someone that uses Kompose all
the time you might be asked like how do we

239
00:13:04.836 --> 00:13:07.859
get this person off of Kompose
onto Kubernetes directly?

240
00:13:07.859 --> 00:13:09.464
Do we want to?

241
00:13:09.464 --> 00:13:12.361
I don't know.

