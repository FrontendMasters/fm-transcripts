[00:00:00]
>> I think it's important to talk about the history of Next.js and kind of how we got here. Especially if you're new to engineering, if you just graduated boot camp, there's some stuff. There's some stuff going on here. So because you might ask yourself, like, well, isn't React a framework?

[00:00:15]
Why do I need a framework for a framework? Right, it's kind of weird, but... The interesting thing is that like if you go to the React documentation, they actually don't recommend using React by itself anymore. They actually recommend using something like Next.js, which is huge. That just happened this year.

[00:00:33]
So they recommend using something like Next.js or any of the other frameworks so. But anyway, the history of React and XTS as you know, it may or may not know. React is just basically a library that was created by Facebook, long time ago 2013, 2014. And then eventually picked up steam to become pretty much the number one JavaScript framework out there.

[00:00:54]
Although I do think there are faster, better frameworks out there. I think React is probably still the most popular one because it just has the biggest community. And everything is pretty much based off of the learnings that React taught everyone. So like everyone just took that and improved it.

[00:01:13]
Had their own opinion. So it's probably going to be the most popular one going for it because the community is just crazy. But it's really just like a library. It's not really a framework, in my opinion. It's just a way for you to build UIs like it doesn't, it's not complete.

[00:01:29]
If you ever use something like Angular. Where Angular is like, all right, you can build these UIs with these components. Also, here's a router, also, here's a testing framework. Also, here's everything that you ever need to do everything in Angular, you don't need to install anything else. Yeah, React's not that.

[00:01:45]
React's just like, here's how you make components. That's it, right? They don't even have A complete state management system. You would have to install something else like a Redux or something to do that. They definitely don't have a router. You would have to install a router. So, and that's really cool because it allows you to have that flexibility of like leve raging things from the community.

[00:02:04]
But when you're a big company with a big team, the last thing you wanna do is like go shopping for open source. And putting your company's resources back on some random person, living in a basement, working on a router. You want it to be backed by a big company.

[00:02:18]
So you want that assurance. So that's what bigger companies would do something like Angular. So then that kind of created the need for something like Next.js, where you need it. A framework for the framework that like kind of brought all these things in. And I think what kind of expedited that was the fact that.

[00:02:35]
You, there were a lot of advancements on how you can render react. So you can render it on the client. You can render it on a server. We're going to talk about some of those things but building that infrastructure to do that was incredibly difficult. I remember when server-side react came out, and I was on a team that had to implement that.

[00:02:52]
It took us months, it took us months to figure out how to do it. Where it's like, now we get it for free. So that's kind of where Next.js is and, why it came to the scene. And now it's like probably the most heavily adopted, most useful React framework out there.

[00:03:06]
And, there are others that kind of compete with Next.js and do something similar, but I think Next.js just has the full package, yeah. But yeah, that's the history of React, Next.js. Also to mention that Versell is the company behind Next.js, formerly Zeit, it's not Cart Versell. They're hosting platform and they have a team dedicated on working on Next.js and I think they're doing a really good job.

[00:03:33]
But so are all the other frameworks out there. I think all the other frameworks are doing really great. It's just, yeah, this company is crushing it, in my opinion. Yeah, any questions about that history of React, Next.js, frameworks in general? If you just went back 10 years, it wasn't too long before we didn't even have frameworks.

[00:03:48]
I remember Backbone.js was the first framework. But before that, everybody just used jQuery. And yeah, part of me wants to go back to that. But the other part of me is just like, man, there was no order there. But it was also very simple. It was a simple time, so, I don't know.

[00:04:05]
But there are some really cool frameworks out there that kind of feel like that. I like QuickJS, that one kind of reminds me of the jQuery days, but with more structure and speed and things like that. So that's a really cool framework to check out. I think we have a quick JS course here at Frontend Masters, right?

[00:04:21]

>> Yeah.
>> Yeah.
>> Misko
>> Misko yeah, the creator of Quick JS, also the creator of Angular. Very smart guy.

