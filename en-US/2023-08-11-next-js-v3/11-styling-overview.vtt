WEBVTT

1
00:00:00.000 --> 00:00:02.799
We lay the groundwork for
the groundwork, and

2
00:00:02.799 --> 00:00:06.116
now we're about to build
some really exciting stuff.

3
00:00:06.116 --> 00:00:10.015
So we left off on our layouts and
templates.

4
00:00:10.015 --> 00:00:17.237
And just to recap, we basically
added some links to our layout here.

5
00:00:17.237 --> 00:00:21.393
But then I think I went in and
kinda just cleared out this homepage.

6
00:00:21.393 --> 00:00:22.610
I'm also just gonna go in and

7
00:00:22.610 --> 00:00:25.003
just clear out all the CSS
in here that's not Tailwind.

8
00:00:25.003 --> 00:00:26.146
You don't have to do this.

9
00:00:26.146 --> 00:00:31.752
I'm sick of looking at a dark theme
right now, so I just got rid of it.

10
00:00:31.752 --> 00:00:36.337
And then the other thing
is we also have this layout

11
00:00:36.337 --> 00:00:40.716
here that we're gonna have for
our dashboard.

12
00:00:40.716 --> 00:00:43.211
We'll configure this in a minute.

13
00:00:43.211 --> 00:00:45.427
So yeah,
that's kinda where we are right now.

14
00:00:45.427 --> 00:00:47.767
The next thing I wanna
talk about is styling,

15
00:00:47.767 --> 00:00:49.738
because as we did this last exercise,

16
00:00:49.738 --> 00:00:54.008
we went through Tailwind and talked about
adding class names and stuff like that.

17
00:00:54.008 --> 00:00:57.747
So if you don't know Tailwind,
it's a CSS library.

18
00:00:57.747 --> 00:00:59.339
I can show you what it is.

19
00:00:59.339 --> 00:01:03.647
Well, it's actually a JavaScript
library that creates CSS.

20
00:01:03.647 --> 00:01:08.809
Snd basically, you can add these
classes to your elements like so and

21
00:01:08.809 --> 00:01:14.689
here's the appropriate matching CSS
that goes for it, so it's pretty cool.

22
00:01:14.689 --> 00:01:19.688
It's a really neat way and a very widely
accepted way to style your components with

23
00:01:19.688 --> 00:01:23.828
just using classes and your React
components and things like that.

24
00:01:23.828 --> 00:01:28.690
So that's what we're using very robust,
very useful, but there are other ways to

25
00:01:28.690 --> 00:01:33.633
style CSS in Next.js, so we're gonna talk
about some of those and go through them.

26
00:01:33.633 --> 00:01:37.493
But I would say, unless you have
an opponent library that already has some

27
00:01:37.493 --> 00:01:41.604
third-party component library that
already has styles associated with it,

28
00:01:41.604 --> 00:01:43.612
I wouldn't say Tailwind is the best.

29
00:01:43.612 --> 00:01:45.507
There's really no answer.

30
00:01:45.507 --> 00:01:48.568
In programming, as you'll soon find out,
as you start working more,

31
00:01:48.568 --> 00:01:50.160
there really isn't a right answer.

32
00:01:50.160 --> 00:01:52.887
There's just trade-offs, right,
everything has a trade-off.

33
00:01:52.887 --> 00:01:54.449
There's never a perfect solution.

34
00:01:54.449 --> 00:01:56.845
It's just like, which trade-off
are you willing to deal with?

35
00:01:56.845 --> 00:02:00.306
And CSS is no different than that.

36
00:02:00.306 --> 00:02:02.114
So let's talk about some of those.

37
00:02:02.114 --> 00:02:06.756
So styling, the most simplest way is just
making a CSS file and then importing it,

38
00:02:06.756 --> 00:02:10.138
right, and we already see
an example of that in our layout.

39
00:02:10.138 --> 00:02:13.891
You can see here,
we're just importing this global CSS file.

40
00:02:13.891 --> 00:02:15.906
Note that when you import a CSS file,

41
00:02:15.906 --> 00:02:19.364
there isn't some thing here
that you're importing, right?

42
00:02:19.364 --> 00:02:23.430
It's just importing it, right,
and it just works somehow.

43
00:02:23.430 --> 00:02:24.994
So how is that?

44
00:02:24.994 --> 00:02:29.690
Well, it's because of the tool
that's building Next.js for us.

45
00:02:29.690 --> 00:02:33.621
If you've used Create React App,
you might have noticed or learned or

46
00:02:33.621 --> 00:02:36.164
read that it uses
something called webpack.

47
00:02:36.164 --> 00:02:41.076
Webpack is a tool built in node
that builds your code for you.

48
00:02:41.076 --> 00:02:44.353
So you might ask yourself, why do I
need something to build my code for me?

49
00:02:44.353 --> 00:02:48.253
Well, up until just recently, browsers
didn't have modules in them, right?

50
00:02:48.253 --> 00:02:52.568
So you would have to have written all your
code and script tags and global space and

51
00:02:52.568 --> 00:02:54.230
add the script tags yourself.

52
00:02:54.230 --> 00:02:57.180
When I was learning to write code,
that's what we had to do.

53
00:02:57.180 --> 00:02:58.365
It wasn't until three or

54
00:02:58.365 --> 00:03:01.983
four years in my career where like,
you can do modules on the front end.

55
00:03:01.983 --> 00:03:04.648
But before that,
we were just using something,

56
00:03:04.648 --> 00:03:07.382
I can't even think of
the name of the tool, Gulp.

57
00:03:07.382 --> 00:03:10.047
And then there was something before Gulp,
forgot the name of it.

58
00:03:10.047 --> 00:03:10.766
&gt;&gt; Grunt.

59
00:03:10.766 --> 00:03:12.689
&gt;&gt; Grunt, there it was, as grunt.

60
00:03:12.689 --> 00:03:14.744
I'm like picturing a pig, and I'm like,
&gt;&gt; [LAUGH]

61
00:03:14.744 --> 00:03:15.595
&gt;&gt; I'm figuring the word.

62
00:03:15.595 --> 00:03:17.715
I'm like, I forgot what it's called.

63
00:03:17.715 --> 00:03:18.235
But it was grunt.

64
00:03:18.235 --> 00:03:20.775
And we used something like grunt
to put in our script tags for us.

65
00:03:20.775 --> 00:03:24.030
And then we did window.app equals
window.app or empty object,

66
00:03:24.030 --> 00:03:25.754
you know what I'm talking about.

67
00:03:25.754 --> 00:03:27.864
So we had to do stuff like that.

68
00:03:27.864 --> 00:03:31.132
Well, now, it's like, well now,
let's just simulate modules.

69
00:03:31.132 --> 00:03:34.023
They're emulating a module
system in the browser.

70
00:03:34.023 --> 00:03:36.068
They're creating it and
they're adding it to the top of the file.

71
00:03:36.068 --> 00:03:37.246
So we get that for free.

72
00:03:37.246 --> 00:03:39.060
So there's a tool that's doing it for us.

73
00:03:39.060 --> 00:03:41.736
Create React App uses something
called webpack to do that,

74
00:03:41.736 --> 00:03:43.835
which is by far the most
popular one out there.

75
00:03:43.835 --> 00:03:48.405
Not the only one, not the only useful one,
but it's the most popular one.

76
00:03:48.405 --> 00:03:50.854
Next.js, by default, I think now,

77
00:03:50.854 --> 00:03:54.844
it's switched over to its new
one that's based off Rust now.

78
00:03:54.844 --> 00:03:57.060
But they also have an experimental one,

79
00:03:57.060 --> 00:04:00.392
I think they call it SWC that is
also in Rust that does things.

80
00:04:00.392 --> 00:04:03.586
So you don't need a tool written
in JavaScript to build JavaScript,

81
00:04:03.586 --> 00:04:04.806
cuz these are just files.

82
00:04:04.806 --> 00:04:08.210
You can manipulate files in any
language that runs on your computer.

83
00:04:08.210 --> 00:04:10.154
Rust just seems to be fastest.

84
00:04:10.154 --> 00:04:11.961
But anyway, long story,

85
00:04:11.961 --> 00:04:17.557
that just means that tool is handling what
happens when this file gets imported.

86
00:04:17.557 --> 00:04:20.665
So although all you have
to do is import it.

87
00:04:20.665 --> 00:04:25.551
The tool when it sees this import,
it's doing things for you automatically,

88
00:04:25.551 --> 00:04:30.437
like taking this CSS, putting it in a
file, adding it as a link tag somewhere in

89
00:04:30.437 --> 00:04:34.310
your HTML, and making sure that
everything has access to it.

90
00:04:34.310 --> 00:04:37.953
All that is happening for you for
free so you don't have to do it,

91
00:04:37.953 --> 00:04:40.260
and this allows anything to be a module.

92
00:04:40.260 --> 00:04:44.709
So you can import an image,
you can import a font.

93
00:04:44.709 --> 00:04:50.044
If there's a way for that bundler
to handle that file extension,

94
00:04:50.044 --> 00:04:51.985
then you can import it.

95
00:04:51.985 --> 00:04:54.967
So that's the reason we don't have
to worry about what happens here.

96
00:04:54.967 --> 00:04:58.022
Although with something like webpack,
you could change the behavior.

97
00:04:58.022 --> 00:04:58.557
I'm lke, you know what?

98
00:04:58.557 --> 00:05:01.399
When I import a CSS,
convert that to a string.

99
00:05:01.399 --> 00:05:03.840
I just want a pure string
text version of that.

100
00:05:03.840 --> 00:05:08.706
So maybe I do get a variable here that I
have to do something like give it a name

101
00:05:08.706 --> 00:05:12.975
and do from, and because that's
the loader that I configure it.

102
00:05:12.975 --> 00:05:14.195
But by default, we don't have to.

103
00:05:14.195 --> 00:05:15.417
This is configured for us.

104
00:05:15.417 --> 00:05:20.377
I mean, if I go check here,
I would imagine that

105
00:05:20.377 --> 00:05:25.220
it's probably somewhere
up here in the head.

106
00:05:25.220 --> 00:05:29.342
Yeah, here we go, it's here,
it was definitely added here.

107
00:05:29.342 --> 00:05:34.601
So you can see that the tool made this for
us and added the link tag to that CSS.

108
00:05:34.601 --> 00:05:37.697
Where you can see here's all of our
Tailwind stuff that got loaded, so

109
00:05:37.697 --> 00:05:39.200
we didn't have to do it.

110
00:05:39.200 --> 00:05:39.700
Here it is.

