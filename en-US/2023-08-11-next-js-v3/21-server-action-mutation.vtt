WEBVTT

1
00:00:00.423 --> 00:00:04.940
Yeah, we left off on all the server
action stuff, which was, like I said,

2
00:00:04.940 --> 00:00:06.106
kinda crazy this.

3
00:00:06.106 --> 00:00:09.167
So this is one of the newer things that
they released in the latest version of

4
00:00:09.167 --> 00:00:11.547
Next.js, which is what prompted
me to wanna come back and

5
00:00:11.547 --> 00:00:12.630
teach the course again.

6
00:00:12.630 --> 00:00:15.932
And I felt that it was substantial enough
that I wanted people to know about it.

7
00:00:15.932 --> 00:00:18.629
So, it sounds like that I
resonated of a lot of people,

8
00:00:18.629 --> 00:00:22.815
hopefully if you're watching this, you
thought this was pretty cool, I think so.

9
00:00:22.815 --> 00:00:25.770
It's one of those things that it's
a new way of doing something,

10
00:00:25.770 --> 00:00:27.556
kind of like when JSX came to the scene.

11
00:00:27.556 --> 00:00:30.806
So, very curious to see what
other frameworks are gonna

12
00:00:30.806 --> 00:00:32.750
do with this type of technology.

13
00:00:33.890 --> 00:00:36.902
Not just React-based frameworks,
but other frontend frameworks.

14
00:00:36.902 --> 00:00:40.310
Now that server components is a thing,
is it gonna stick around?

15
00:00:40.310 --> 00:00:40.966
Are people gonna like it?

16
00:00:40.966 --> 00:00:42.560
Who knows?

17
00:00:42.560 --> 00:00:45.806
So far, I'm enjoying it, but
like I said, it's not for everything.

18
00:00:45.806 --> 00:00:51.020
You don't wanna just use
server actions for everything.

19
00:00:51.020 --> 00:00:53.238
I think in the Next.js docs,
they encourage you to use it for

20
00:00:53.238 --> 00:00:54.992
every form that you have,
and stuff like that.

21
00:00:54.992 --> 00:00:59.965
And you probably can't get away with it,
but, I probably won't use it for that.

22
00:00:59.965 --> 00:01:02.644
[LAUGH] Like I said,
unless it's for like a side effect,

23
00:01:02.644 --> 00:01:04.480
that's pretty much only my use case.

24
00:01:04.480 --> 00:01:08.240
Cool, okay, so we have that.

25
00:01:08.240 --> 00:01:13.073
Let's talk about being able to do
an update, and being able to delete one

26
00:01:13.073 --> 00:01:17.209
of these, just to kind of nail
it home with the server action.

27
00:01:17.209 --> 00:01:20.212
So, all we can do is we
can go to the todo, and

28
00:01:20.212 --> 00:01:23.520
we can create a another
server action here.

29
00:01:23.520 --> 00:01:28.595
But because the todo itself is not a form,
we can't add the server

30
00:01:28.595 --> 00:01:33.131
action to the form action,
because the todo is not a form.

31
00:01:33.131 --> 00:01:37.372
So we have to figure out another
way to trigger a server action, and

32
00:01:37.372 --> 00:01:39.660
that's what we're gonna try now.

33
00:01:39.660 --> 00:01:43.014
So, in order to do that,
we have to turn this into a client.

34
00:01:43.014 --> 00:01:47.801
And this is what I said earlier, like if
you can't use a server action as a form

35
00:01:47.801 --> 00:01:52.516
action, you pretty much have to use
a client component to trigger that, and

36
00:01:52.516 --> 00:01:55.194
at that point, Mazal just do client side.

37
00:01:55.194 --> 00:01:58.648
JavaScript to do whatever you're gonna do,
but we're going to stick with it,

38
00:01:58.648 --> 00:02:00.151
cuz I wanna show you the new stuff.

39
00:02:00.151 --> 00:02:03.326
If you've ever made an API call on React,
you already know that anyway,

40
00:02:03.326 --> 00:02:05.960
so I'm not really gonna show
you anything useful there.

41
00:02:05.960 --> 00:02:10.773
So what we wanna do is
we wanna import the {

42
00:02:10.773 --> 00:02:14.908
useTransition } from 'react'.

43
00:02:14.908 --> 00:02:20.105
So, useTransition is a hook that
basically, you can give it some function

44
00:02:20.105 --> 00:02:26.055
to run, some async thing, mostly data
loading, and React will deprioritize that.

45
00:02:26.055 --> 00:02:31.512
It will, you're basically telling React
like this is not a priority right now,

46
00:02:31.512 --> 00:02:36.906
finish all the other important stuff you
were doing first, before you do this.

47
00:02:36.906 --> 00:02:40.540
Like do this right when you're done.

48
00:02:40.540 --> 00:02:44.684
And we wanna do that because we don't
want whatever we're about to do to block

49
00:02:44.684 --> 00:02:47.250
everything else that's
happening on our app.

50
00:02:47.250 --> 00:02:51.110
We don't wanna clog that process,
so we're gonna deprioritize.

51
00:02:51.110 --> 00:02:52.166
That's the best way I can describe it.

52
00:02:52.166 --> 00:02:55.587
I'm sure there's a better definition for
it somewhere, but

53
00:02:55.587 --> 00:02:59.350
that's the best way I can describe it,
so, yeah, we'll do that.

54
00:02:59.350 --> 00:03:05.129
Let me just go to that thing here,
make sure I have that, okay, cool.

55
00:03:05.129 --> 00:03:09.272
So, what we're gonna do now
is go to our Actions, and

56
00:03:09.272 --> 00:03:15.089
let's just make a new function here,
and we'll call it, completeTodo.

57
00:03:15.089 --> 00:03:19.925
So this is just a function you
will run to complete a Todo, so,

58
00:03:19.925 --> 00:03:22.166
complete Todo, like this.

59
00:03:22.166 --> 00:03:25.037
Because this is not gonna run on a form,

60
00:03:25.037 --> 00:03:28.350
it's gonna run on whatever
we want it to run.

61
00:03:28.350 --> 00:03:32.454
We can take in whatever argument we want,
so I'm just gonna take in an ID here, and

62
00:03:32.454 --> 00:03:34.778
then I'm gonna use db to find and
update that.

63
00:03:34.778 --> 00:03:41.152
So then I'll just say, await, db.todo,

64
00:03:41.152 --> 00:03:46.506
make sure this is async, db.todo.

65
00:03:46.506 --> 00:03:52.106
Let's see, update, or, hmm, is it update?

66
00:03:52.106 --> 00:03:56.280
Yeah, I think it's update.

67
00:03:56.280 --> 00:04:01.256
So let's update, where id is id,

68
00:04:01.256 --> 00:04:06.405
and the data we wanna update is gonna

69
00:04:06.405 --> 00:04:11.398
be complete, completed, true.

70
00:04:11.398 --> 00:04:16.932
So, go find a Todo,
whose id is whatever id they passed in,

71
00:04:16.932 --> 00:04:20.162
and update it to complete it true.

72
00:04:26.534 --> 00:04:29.642
All right, so we got that,
and then after we're done,

73
00:04:29.642 --> 00:04:32.949
we just wanna revalidate the path,
so we can actually see,

74
00:04:32.949 --> 00:04:36.078
we're gonna make some UI
changes when you complete it.

75
00:04:36.078 --> 00:04:38.465
We'll put like a strike-through or

76
00:04:38.465 --> 00:04:43.200
something like that when something
is completed, so we'll do that.

77
00:04:43.200 --> 00:04:51.908
So we got that, complete Todo,
Then we can go to the actual Todo.

78
00:04:51.908 --> 00:04:58.930
We can bring that in,
CompleteTodo, like so.

79
00:05:01.188 --> 00:05:06.346
And then, we're just gonna get this
hook from useTransition like this,

80
00:05:06.346 --> 00:05:10.172
and then we'll get something
called like isPending,

81
00:05:10.172 --> 00:05:15.260
if the transition is pending, and
then we can get the startTransition.

82
00:05:23.892 --> 00:05:29.293
So then, what I wanna do is on click,
I run a function here,

83
00:05:29.293 --> 00:05:35.570
and I'm gonna say, start the transition,
which takes a function.

84
00:05:35.570 --> 00:05:42.313
And then I'm going to say, CompleteTodo.

85
00:05:42.313 --> 00:05:46.370
CompleteTodo, and
then pass in the todo.id.

86
00:05:46.370 --> 00:05:50.617
So, onClick is gonna take a callback,
which calls startTransition,

87
00:05:50.617 --> 00:05:55.380
which takes a callback, which calls
completeTodo, and pass in the todo.id.

88
00:06:03.529 --> 00:06:04.376
Right?

89
00:06:05.812 --> 00:06:13.926
And then what I wanna do is just add
some styling here, so add a class name.

90
00:06:13.926 --> 00:06:18.124
Let's just give this a border black,

91
00:06:18.124 --> 00:06:22.189
10%, sorry, yeah, 10%, or

92
00:06:22.189 --> 00:06:27.172
20%, and then we can say something like,

93
00:06:27.172 --> 00:06:31.390
let's do this, and make this dynamic

94
00:06:34.333 --> 00:06:38.471
We can say if todo.completed,

95
00:06:38.471 --> 00:06:42.916
then we can say strike-through,

96
00:06:42.916 --> 00:06:47.207
I think it's strike-through,

97
00:06:47.207 --> 00:06:52.889
we'll look it up on Tailwind, let's see.

98
00:06:56.727 --> 00:07:01.130
No, it's like, text decoration?

99
00:07:01.130 --> 00:07:02.668
Text strike-through?

100
00:07:02.668 --> 00:07:03.690
&gt;&gt; Yeah, line-through.

101
00:07:03.690 --> 00:07:07.763
&gt;&gt; Line-through, okay,
that makes sense, let's see.

102
00:07:10.520 --> 00:07:15.386
It's text decoration, okay, so, yeah,
you're right, line-through, there we go.

103
00:07:15.386 --> 00:07:20.640
So, line-through, And

104
00:07:20.640 --> 00:07:23.640
maybe we'll change the color of it.

105
00:07:23.640 --> 00:07:27.909
So it's like grayed out,
so line-through, and

106
00:07:27.909 --> 00:07:32.485
then text-gray-100, or
that's way too gray,

107
00:07:32.485 --> 00:07:36.666
text-gray like 900 or something like that.

108
00:07:36.666 --> 00:07:41.190
Okay, and
what's this thing freaking out about?

109
00:07:43.872 --> 00:07:49.020
We need the, and if not,
it's just a empty string, there we go,

110
00:07:51.671 --> 00:07:58.260
Okay, so let's see what happens with this,
if we try to do a transition here.

111
00:07:58.260 --> 00:08:02.553
So we'll do that, we'll go over
to our app, we have this, and

112
00:08:02.553 --> 00:08:05.880
let me put a cursor on this,
it's bothering me.

113
00:08:05.880 --> 00:08:11.850
So, pointer, or is it just cursor?

114
00:08:11.850 --> 00:08:13.126
Let's look it up.

115
00:08:16.397 --> 00:08:21.016
Cursor pointer, that's what it is.

116
00:08:21.016 --> 00:08:24.630
Come here, let me copy you, thank you.

117
00:08:25.890 --> 00:08:28.881
Cursor pointer, so when you hover over it,
you can click on it.

118
00:08:30.940 --> 00:08:36.937
And now, if I go here and click on one
of them, you can see it completes it.

119
00:08:36.937 --> 00:08:42.899
If I refresh, It's still there.

120
00:08:42.899 --> 00:08:47.104
So that's just us using a server
mutation for updating, and

121
00:08:47.104 --> 00:08:51.150
then revalidating it and
watching it it actually change.

122
00:08:53.460 --> 00:08:55.107
Any questions on that?

123
00:08:55.107 --> 00:08:57.216
So again, you could do this client side,

124
00:08:57.216 --> 00:09:00.486
you already know how to do this
client side, you make a API call.

125
00:09:00.486 --> 00:09:03.508
The only thing you don't know how
to do is how to make the API,

126
00:09:03.508 --> 00:09:04.710
we will do that though.

127
00:09:11.708 --> 00:09:12.760
Cool.

128
00:09:12.760 --> 00:09:16.949
Yeah, I just wanna show you how you can do
server actions anywhere in any component,

129
00:09:16.949 --> 00:09:18.077
without using a form.

130
00:09:18.077 --> 00:09:19.730
That's how you do it.

131
00:09:19.730 --> 00:09:22.213
And this way,
you can also do optimistic updates,

132
00:09:22.213 --> 00:09:26.397
where you can show the update immediately
before it comes back, and stuff like that.

133
00:09:26.397 --> 00:09:28.420
That's also a thing.

134
00:09:28.420 --> 00:09:30.135
But yeah, that's how you do that.

