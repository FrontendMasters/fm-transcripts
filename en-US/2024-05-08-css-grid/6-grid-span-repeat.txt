[00:00:00]
>> All right, we are moving on to chapter 4. And so to this point in time we have talked about grid and its syntax in terms of the grid row and grid column using numbers, but I told you there were three kinds of syntax that are available to us with grid, and the second kind that we're gonna look at is called the span syntax.

[00:00:21]
So I'm gonna walk you through exactly how the span syntax works. And if you open up your opening CodePen here and fork that to your account, we're still working with our moons. All right so, I've scrolled down here to roughly line number 13 here in my CSS, and it says figure nth-child(3), so this is that picture of Europa here that we had talked about before.

[00:00:46]
And we had told it to span across the first column from 1 to 2, and we said to span rows 1 as the first line, 5 as the last line here in space. So there are other ways of writing this kind of syntax, and using the span syntax we could do something like this instead, we could say something like span 3.

[00:01:15]
So, by saying span 3, what this is going to do is from where Europa is in space, which is now remember that's the third child, span over three rows, so from the third row it's going to span over three additional rows. That means that we only have one moon next to us because that's all the additional content that we have, if we had more moons, those three moons would be next to Europa.

[00:01:42]
So what if I want it to still be the first item? Then I could say 1/span 3, so in other words, start at the first line and then span 3 rows after that. Make sense, kind of sort of? Okay, so when you say, just to sort of repeat, when you just say span 3 by itself, this is going to mean from wherever you are in space span over three whatever's, we could do this was three columns or three rows, in this case it's three rows.

[00:02:16]
If you give it a starting point with a number, then it will span 3 from that particular starting point, so from 1 span over 3. Make sense, kind of, sort of? Okay, so by that logic, when we're here at grid column, we really only have to say 1, by default it will span to 2, okay?

[00:02:41]
Now, just cuz you can say just one doesn't necessarily mean that this is the best to communicate to all of the other people who are gonna be writing code with you, yeah? I think 1/2 looks a little bit more intuitive than we're really clear about what's going on here, but in this case you could just say 1 and it will work just fine.

[00:03:10]
Okay, so how about this last child, Ganymede, down here? So if I said figure last-child, And I want this one to span across two columns, just to show you how that works, what would I put here for grid-column using the span syntax? So if I want Ganymede to span over two columns, and I wanna use the span syntax, what would I write here for grid column?

[00:03:48]

>> n1/ or 1/span.
>> 1/span 1, yeah, there you go. So, start over here in the first column, span over two columns, that does exactly what it should be doing. Like I said in a lot of cases you can just stick with the numbers if you're totally fine, I find the numbers really into Intuitive and I use them a lot.

[00:04:20]
Span becomes helpful if you are going to write a more generic style and you want it to just span over two, whatever, I want it span over three rows. Whenever I sign this class, the thing is gonna span over three rows, wherever it is in space, that might be useful for that, okay?

[00:04:38]
The other thing I want to introduce at this point is up here on our grid container. Now to this point, we have been writing out however many columns we have, and that hasn't been a big deal because we have two columns or we have three columns, so what?

[00:04:52]
But sometimes you might wind up with ten columns, and writing 1fr ten times in a row it's a real pain in the neck, wouldn't you agree? Okay, so there is a better syntax for this, and that is the repeat syntax. So, we can swap this out for repeat, and then I would say 2, 1fr.

[00:05:15]
Nothing is gonna change here in the way the page looks, this is exactly the same thing, so now I'm telling it to make two columns that are 1fr, make sense? So for my grid template rows where I have three autos in a row, how would I write this with the repeat syntax?

[00:05:37]
What would I say here?
>> Repeat three auto.
>> Repeat 3, auto, exactly. So the number, comma, the size, whatever that size happens to be, FRs are really convenient, autos are convenient for rows, could be anything, make sense? Okay, fantastic, so those mean exactly the same thing, you can write them however you want.

