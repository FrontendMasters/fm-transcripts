WEBVTT

1
00:00:00.100 --> 00:00:01.777
So here's what I'd like for you to do.

2
00:00:05.864 --> 00:00:10.689
Take each moon individually.

3
00:00:10.689 --> 00:00:16.950
I'd like you to set it as a grid item.

4
00:00:16.950 --> 00:00:19.860
So in other words,
we're gonna have each of these moons.

5
00:00:19.860 --> 00:00:27.305
I'd like you to set each individual
figure as a grid item itself.

6
00:00:27.305 --> 00:00:32.032
And, Make

7
00:00:32.032 --> 00:00:37.622
the caption appear to
the right of the moon.

8
00:00:38.932 --> 00:00:42.294
So if we take a look at our figure here,
right,

9
00:00:42.294 --> 00:00:47.318
we've got our figure inside of that,
that figure has two children.

10
00:00:48.578 --> 00:00:50.853
That figure has a child that's an image,

11
00:00:50.853 --> 00:00:54.008
it has a figure that's the figure caption,
okay?

12
00:00:54.008 --> 00:00:57.716
What I'd like for
you to do is if you set up,

13
00:01:00.101 --> 00:01:04.926
If you set up your figure to display:
grid, see if you can set it up such that

14
00:01:04.926 --> 00:01:10.118
your image is on one column, and your
figure caption is on the other column.

15
00:01:10.118 --> 00:01:13.438
Go ahead and take five minutes and
see if you can figure that out now.

16
00:01:13.438 --> 00:01:16.815
Bonus points if you can figure out how
to stack them up going down the page.

17
00:01:16.815 --> 00:01:20.945
So you have all the images on the left and
all of the captions on the right,

18
00:01:20.945 --> 00:01:22.658
go ahead and give it a try now.

19
00:01:26.974 --> 00:01:30.494
All right, so how did you do with
that particular little bit of code?

20
00:01:30.494 --> 00:01:32.864
Hopefully that worked out okay for you.

21
00:01:32.864 --> 00:01:35.431
Here is the little trick
to making this work.

22
00:01:35.431 --> 00:01:39.377
Just like humans can be both parents and
children at the same time,

23
00:01:39.377 --> 00:01:43.731
HTML elements can also be parents and
children at the same time.

24
00:01:43.731 --> 00:01:49.943
So our moons may be children, as we had
talked about extensively here in our HTML,

25
00:01:49.943 --> 00:01:55.471
but our figure itself can also be
a parent with its own children.

26
00:01:55.471 --> 00:01:59.217
So the way that we wound up
setting this up was as follows,

27
00:01:59.217 --> 00:02:04.072
some people created classes for this,
I just do it with figure by itself.

28
00:02:05.462 --> 00:02:10.330
And we say, display: grid,

29
00:02:10.330 --> 00:02:17.162
grid-template-columns: 1fr 1fr.

30
00:02:17.162 --> 00:02:20.510
And that'll put everything next
to each other like that, okay?

31
00:02:20.510 --> 00:02:24.067
And then maybe you want a little
bit of a gap in between, 2rem,

32
00:02:24.067 --> 00:02:26.767
give a little breathing room,
just like that.

33
00:02:27.847 --> 00:02:33.064
And then if you wanted to make sure that
all these stacked together on top of each

34
00:02:33.064 --> 00:02:38.677
other, what we would need to do is instead
of having two grid template columns here,

35
00:02:38.677 --> 00:02:40.278
maybe we have just one.

36
00:02:40.278 --> 00:02:43.989
So now we have all of the moons
over here on the left, and

37
00:02:43.989 --> 00:02:47.071
all of the text over here on the right.

38
00:02:47.071 --> 00:02:50.847
Now the graphic designers are screaming
at us again, we're so proud of ourselves

39
00:02:50.847 --> 00:02:54.531
that we managed to get the text on
the right and the image on the left.

40
00:02:54.531 --> 00:02:58.028
They always want another thing, and
what is it they want this time?

41
00:02:58.028 --> 00:03:01.014
&gt;&gt; Centering the title.

42
00:03:01.014 --> 00:03:05.164
&gt;&gt; Yeah, they wanna put the text in
the middle of the image now, right?

43
00:03:05.164 --> 00:03:07.444
Fortunately, that is an easy thing to do.

44
00:03:07.444 --> 00:03:09.794
That is another property that is here for
us.

45
00:03:11.354 --> 00:03:17.473
So down here in our figure, what I'm
going to say is, align-items: center.

46
00:03:20.397 --> 00:03:26.298
And what that will do is align the center
of the image with the center of the text.

47
00:03:26.298 --> 00:03:28.598
So that looks a little bit nicer.

48
00:03:28.598 --> 00:03:32.718
As always, one of the things that you
can do is put a border on things.

49
00:03:32.718 --> 00:03:36.050
If you're wondering what's going on,

50
00:03:36.050 --> 00:03:41.442
one of the best debugging tools
out there in CSS, 2px solid red.

51
00:03:41.442 --> 00:03:45.597
We'll put a big red border
around that whole figure.

52
00:03:45.597 --> 00:03:48.496
And then for figcaption,

53
00:03:48.496 --> 00:03:54.294
in case you're wondering
what's going on with it,

54
00:03:54.294 --> 00:03:58.796
you could put a border 2px dotted blue.

55
00:03:58.796 --> 00:04:00.801
And that will go around your caption.

56
00:04:00.801 --> 00:04:03.291
That always helps,
putting borders on things.

57
00:04:03.291 --> 00:04:06.221
If you can't see it, you can't style it.

58
00:04:06.221 --> 00:04:08.781
So when in doubt, stick a border on it.

59
00:04:08.781 --> 00:04:13.369
All right, so for our next challenge,
for all of the moons that I have here,

60
00:04:13.369 --> 00:04:17.831
what I'd like to do is I'd like to
designate one of these moons, Europa.

61
00:04:17.831 --> 00:04:21.624
We know Europa's like super special,
because it's possibly we got water, and

62
00:04:21.624 --> 00:04:22.960
who knows if it has life, and

63
00:04:22.960 --> 00:04:25.810
the Europeans are sending
a probe there to find out.

64
00:04:25.810 --> 00:04:30.100
So we wanna feature Europa
as the important moon here.

65
00:04:30.100 --> 00:04:32.555
It's gonna sit on the left-hand side and

66
00:04:32.555 --> 00:04:35.440
it's gonna take up a whole
column all by itself.

67
00:04:35.440 --> 00:04:38.414
And the next to it stacked
on top of each other,

68
00:04:38.414 --> 00:04:41.021
we're gonna put the other three moons.

69
00:04:41.021 --> 00:04:45.722
Okay, so to do something like this,
I'm going to go back to

70
00:04:45.722 --> 00:04:51.621
my grid-container here, and
I am going to set up two columns.

71
00:04:51.621 --> 00:04:54.439
So my grid template columns 1fr 1fr, and

72
00:04:54.439 --> 00:04:59.261
then I'm going to specify how many
rows I want to have on this page.

73
00:04:59.261 --> 00:05:01.955
So I haven't told you how
to do grid-rows yet, but

74
00:05:01.955 --> 00:05:05.037
does anyone have a guess what
the syntax for that might be?

75
00:05:05.037 --> 00:05:06.556
&gt;&gt; It's by grid-template-rows.

76
00:05:06.556 --> 00:05:08.415
&gt;&gt; Hey, how about grid-template-rows?

77
00:05:08.415 --> 00:05:11.386
&gt;&gt; [LAUGH]
&gt;&gt; grid-template-rows.

78
00:05:11.386 --> 00:05:17.026
Now grid-columns,
we specify the widths as 1fr 1 fr 1fr,

79
00:05:17.026 --> 00:05:21.427
with rows, we're specifying heights.

80
00:05:21.427 --> 00:05:26.049
And giving things a height in
CSS is typically a fashion no.

81
00:05:26.049 --> 00:05:30.007
And the reason why is,we never know
how much content we're going to have.

82
00:05:30.007 --> 00:05:35.647
So one of the things that we often do here
in grid is something like auto auto auto.

83
00:05:35.647 --> 00:05:40.507
So in other words,
make it as tall as it should be based

84
00:05:40.507 --> 00:05:44.724
on the content that happens to be here,
okay?

85
00:05:44.724 --> 00:05:46.869
So there we go, we have three rows, but

86
00:05:46.869 --> 00:05:49.353
I only have content enough right now for
two.

87
00:05:51.243 --> 00:05:53.753
So that's gonna give us
two evenly sized columns.

88
00:05:53.753 --> 00:05:58.208
And there are three rows,
this is row one, this is row two.,

89
00:05:58.208 --> 00:06:03.381
row three is down here, there's
nothing in it, but it exists, okay?

90
00:06:03.381 --> 00:06:06.283
And if you put this into browser tools,
you'll see that it's there.

91
00:06:06.283 --> 00:06:10.629
Now what I wanna do is put
my very first moon over in

92
00:06:10.629 --> 00:06:13.643
the left column all by itself.

93
00:06:13.643 --> 00:06:18.051
And let's just say that that's going
to be Europa here right now, or, sorry,

94
00:06:18.051 --> 00:06:19.183
rephrase.

95
00:06:19.183 --> 00:06:22.891
Let's just say that's gonna be Io,
that's our first moon right here.

96
00:06:22.891 --> 00:06:28.117
And so to do this, I am going to

97
00:06:28.117 --> 00:06:33.361
say figure:first-child.

98
00:06:33.361 --> 00:06:36.211
Have you guys seen this selector before,
first-child?

99
00:06:38.301 --> 00:06:40.381
Some say yes, some say no.

100
00:06:40.381 --> 00:06:44.712
Well, just like we can count our siblings,

101
00:06:44.712 --> 00:06:49.044
we can say my parents
have three children and

102
00:06:49.044 --> 00:06:52.830
one is a girl and two are boys, right?

103
00:06:52.830 --> 00:06:55.988
The first child happens to be a girl,
that's me.

104
00:06:55.988 --> 00:06:59.744
And here the first child
is our figure right here,

105
00:06:59.744 --> 00:07:03.414
the very first one of
that group of figures.

106
00:07:03.414 --> 00:07:06.064
So we can select it without
having to set up a class for it.

107
00:07:07.204 --> 00:07:09.508
So our figure:first-child,

108
00:07:09.508 --> 00:07:14.464
we are going to start making use of
some additional properties here.

109
00:07:14.464 --> 00:07:20.196
And this is called grid-column and
grid row.

110
00:07:20.196 --> 00:07:24.956
And this goes back to those numbers that
we looked at inside of the browser tools,

111
00:07:24.956 --> 00:07:30.278
so we're going to give it a starting line,
and we're gonna give it a finish line.

112
00:07:30.278 --> 00:07:35.038
So here for our first child,
we want it to occupy the first column.

113
00:07:35.038 --> 00:07:38.318
And so
what numbers would go with this span?

114
00:07:38.318 --> 00:07:42.622
It starts at one all the way over on
the left before the columns starts and

115
00:07:42.622 --> 00:07:43.640
it goes to what?

116
00:07:43.640 --> 00:07:44.829
&gt;&gt; Three.

117
00:07:44.829 --> 00:07:45.723
&gt;&gt; Where is three?

118
00:07:48.003 --> 00:07:50.382
Yeah, three is all the way
over here on the right,

119
00:07:50.382 --> 00:07:52.033
two is here in the middle, right?

120
00:07:52.033 --> 00:07:55.963
So it goes from one to two,
just like that.

121
00:07:55.963 --> 00:07:58.993
So I'm gonna say may occupy
in the first column.

122
00:08:00.213 --> 00:08:03.789
Then I wanted to occupy
all of those three rows.

123
00:08:03.789 --> 00:08:07.614
So it's gonna occupy the first row
that's gonna make it go from one to two.

124
00:08:07.614 --> 00:08:11.386
It's gonna occupy the second row,
that makes it go from two to three.

125
00:08:11.386 --> 00:08:16.234
And it's gonna occupy the third row,
that makes it go from three to four.

126
00:08:16.234 --> 00:08:23.795
So we're gonna say grid-row: 1/4.

127
00:08:26.806 --> 00:08:30.056
So now we have Io over here.

128
00:08:30.056 --> 00:08:33.911
And you see we have our three other
moons all stacked up each over

129
00:08:33.911 --> 00:08:35.814
here on the right-hand side.

130
00:08:35.814 --> 00:08:37.153
Everybody see how that's happening?

131
00:08:38.643 --> 00:08:39.821
Cool, cool, cool.

132
00:08:39.821 --> 00:08:44.228
So if you're not happy with
the captions next to these moons,

133
00:08:44.228 --> 00:08:48.549
maybe we wanna change a few things around,
here for Io here,

134
00:08:48.549 --> 00:08:53.381
since this is really the important one,
we could say something else

135
00:08:53.381 --> 00:08:57.569
that would happen here,
which would be display:block.

136
00:09:00.005 --> 00:09:02.862
Now, I might have just
weirded out a lot of you,

137
00:09:02.862 --> 00:09:07.052
what did I just do here for
the first-child, for the Io moon?

138
00:09:07.052 --> 00:09:09.321
What did I just do with display: block?

139
00:09:09.321 --> 00:09:11.682
&gt;&gt; You overrode our grid.

140
00:09:11.682 --> 00:09:14.941
&gt;&gt; Yeah, I overrode grid just for
the first child.

141
00:09:14.941 --> 00:09:18.670
So just for the first figure,
I turned grid off.

142
00:09:18.670 --> 00:09:21.917
And by default,
the image will stack on top of the text.

143
00:09:23.278 --> 00:09:25.468
So grid's still in effect for
all those other moons.

144
00:09:25.468 --> 00:09:28.853
Over there on the side,
we have the moon next to the caption, and

145
00:09:28.853 --> 00:09:31.061
they are all stacked on top of each other.

146
00:09:31.061 --> 00:09:32.164
Make sense?

147
00:09:35.849 --> 00:09:39.827
Okay, now,
I said before that I like Europa and

148
00:09:39.827 --> 00:09:44.800
I really want Europa over there
in that spot where Io is, and

149
00:09:44.800 --> 00:09:48.415
I want Io over in the other column.

150
00:09:48.415 --> 00:09:54.412
How might I rearrange things here so
that Europa, which is this one right here,

151
00:09:54.412 --> 00:09:58.995
Europa is over there on the left,
and Io is over on the right?

152
00:09:58.995 --> 00:10:00.765
How would I go about doing that?

153
00:10:00.765 --> 00:10:01.588
Suggestions?

154
00:10:01.588 --> 00:10:03.278
&gt;&gt; Change first to third?

155
00:10:03.278 --> 00:10:07.709
&gt;&gt; We could change first to third
right here in my CSS, right?

156
00:10:07.709 --> 00:10:12.304
So instead of saying figure: first-child,

157
00:10:12.304 --> 00:10:17.733
what I could say would
be figure:nth-child(3).

158
00:10:20.724 --> 00:10:22.156
Hey, look at that.

159
00:10:28.466 --> 00:10:35.921
And it looks like I need to say
my grid-row goes to 4 here.

160
00:10:35.921 --> 00:10:37.423
There we go.

161
00:10:37.423 --> 00:10:42.304
And now I've got my three moons
stacked over here on the left.

162
00:10:42.304 --> 00:10:44.024
And I've got Europa
over here on the right.

163
00:10:44.024 --> 00:10:46.298
I didn't have to change my HTML,

164
00:10:46.298 --> 00:10:51.268
I've just changed the order of
appearance here right inside of the CSS.

165
00:10:51.268 --> 00:10:55.305
&gt;&gt; If there are more moons,
will this break the 1/4.

166
00:10:55.305 --> 00:10:57.907
&gt;&gt; Yes, it will, it will in fact break.

167
00:10:57.907 --> 00:11:01.856
So if we continue to stack more moons up,
and because, of course,

168
00:11:01.856 --> 00:11:05.379
there are many more moons
of Jupiter than these four.

169
00:11:05.379 --> 00:11:06.829
What will start happening?

170
00:11:06.829 --> 00:11:07.649
What will happen?

171
00:11:07.649 --> 00:11:08.969
What happens to the fifth moon?

172
00:11:08.969 --> 00:11:10.653
Where is it going to show up?

173
00:11:10.653 --> 00:11:12.908
&gt;&gt; Underneath the first one?

174
00:11:12.908 --> 00:11:15.095
&gt;&gt; Underneath the first one, exactly,

175
00:11:15.095 --> 00:11:19.149
it would show up right here
underneath Europa in the next row.

176
00:11:19.149 --> 00:11:21.790
Where would the sixth moon show up?

177
00:11:21.790 --> 00:11:22.510
&gt;&gt; Next to that.

178
00:11:22.510 --> 00:11:24.243
&gt;&gt; Right next to that, on the right.

179
00:11:24.243 --> 00:11:26.080
And we'd continue on down the page.

180
00:11:27.680 --> 00:11:28.700
Makes sense?

181
00:11:28.700 --> 00:11:31.380
All right, so far,
here's what we've learned.

182
00:11:31.380 --> 00:11:35.870
Like I said, this is like 80% of grid,
you now know it, okay?

183
00:11:35.870 --> 00:11:39.971
The relationship between our parents and
our children, the grid-container and

184
00:11:39.971 --> 00:11:43.004
the grid-items, right,
parents and the children.

185
00:11:43.004 --> 00:11:47.434
Very, very important in structuring your
HTML and the outcomes that you get here.

186
00:11:47.434 --> 00:11:50.666
You learned about the display property,
the grid-template-columns and

187
00:11:50.666 --> 00:11:52.024
grid-template-rows.

188
00:11:52.024 --> 00:11:55.334
You learned about gap, and
you learned about align-items.

189
00:11:55.334 --> 00:11:59.744
Again, this is like 80% of what you're
gonna use in grid all the time.

190
00:11:59.744 --> 00:12:03.181
You learned about these child properties,
grid-column and grid-row.

191
00:12:03.181 --> 00:12:06.917
And you learn that number syntax in
terms of where you want to place things

192
00:12:06.917 --> 00:12:08.328
in space.

193
00:12:08.328 --> 00:12:14.188
We've taken a look at re-ordering those
grid cells, very, very easy to do.

194
00:12:14.188 --> 00:12:17.689
We know that the intrinsic grid
is gonna help us lay things out.

195
00:12:17.689 --> 00:12:22.460
If we have extra elements here that
we haven't specifically called

196
00:12:22.460 --> 00:12:27.146
out in our grid layout,
they will just continue on in the pattern,

197
00:12:27.146 --> 00:12:29.920
grid is gonna take its best guess at it.

198
00:12:29.920 --> 00:12:34.778
So those are all pretty core
grid types of concepts.

199
00:12:34.778 --> 00:12:39.996
And so now we are ready to give you
your own little activity to try out.

