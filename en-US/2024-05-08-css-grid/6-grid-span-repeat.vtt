WEBVTT

1
00:00:00.062 --> 00:00:02.619
All right, we are moving on to chapter 4.

2
00:00:05.236 --> 00:00:08.696
So this point in time,
we have talked about grid and

3
00:00:08.696 --> 00:00:13.130
its syntax in terms of the grid row and
grid column using numbers.

4
00:00:13.130 --> 00:00:17.941
But I told you there are three kinds of
syntax that are available to us with grid.

5
00:00:17.941 --> 00:00:21.737
And the second kind that we're gonna
look at is called the span syntax.

6
00:00:21.737 --> 00:00:25.375
So I'm gonna walk you through
exactly how the span syntax works.

7
00:00:25.375 --> 00:00:28.825
And if you open up your
opening code pen here and

8
00:00:28.825 --> 00:00:33.707
fork that to your account,
we're still working with our moons.

9
00:00:33.707 --> 00:00:39.692
All right, so I've scrolled down here to
roughly line number 13 here in my CSS,

10
00:00:39.692 --> 00:00:42.748
and it says figure:nth-child(3).

11
00:00:42.748 --> 00:00:46.622
So this is that picture of Europa
here that we had talked about before.

12
00:00:46.622 --> 00:00:52.231
We had told it to span across
the first column from 1 to 2,

13
00:00:52.231 --> 00:00:56.695
and we said to span rows,
1 as the first line,

14
00:00:56.695 --> 00:00:59.906
5 as the last line here in space.

15
00:00:59.906 --> 00:01:04.504
So there are other ways of
writing this kind of syntax.

16
00:01:04.504 --> 00:01:09.725
And using the span syntax,
we could do something like this instead,

17
00:01:09.725 --> 00:01:12.526
we could say something like span 3.

18
00:01:14.907 --> 00:01:20.732
So by saying span 3, what this is going
to do is from where Europa is in space,

19
00:01:20.732 --> 00:01:26.395
which is now, remember, that's
the third child, span over three rows.

20
00:01:26.395 --> 00:01:30.766
So from the third row, it's going
to span over three additional rows.

21
00:01:30.766 --> 00:01:33.667
That means that we only
have one moon next to us,

22
00:01:33.667 --> 00:01:37.238
because that's all the additional
content that we have.

23
00:01:37.238 --> 00:01:42.703
We had more moons, we would have those
three moons would be next to Europa.

24
00:01:42.703 --> 00:01:45.850
So what if I want it to
still be the first item?

25
00:01:45.850 --> 00:01:50.268
Then I could say 1/span 3.

26
00:01:50.268 --> 00:01:56.194
So in other words, start at the first
line and then span three rows after that.

27
00:01:56.194 --> 00:02:02.661
Make sense, kinda sort of, okay?

28
00:02:02.661 --> 00:02:06.811
Just to sort of repeat,
when you just say span 3 by itself,

29
00:02:06.811 --> 00:02:11.792
this is gonna mean from wherever you
are in space span over 3 whatever.

30
00:02:11.792 --> 00:02:14.284
We could do this with three columns or
three rows.

31
00:02:14.284 --> 00:02:16.656
In this case, it's three rows.

32
00:02:16.656 --> 00:02:19.796
If you give it a starting
point with a number,

33
00:02:19.796 --> 00:02:23.856
then it will span 3 from that
particular starting point.

34
00:02:23.856 --> 00:02:27.067
So from 1, span over 3.

35
00:02:27.067 --> 00:02:30.695
Make sense, kinda sort of, okay?

36
00:02:30.695 --> 00:02:37.274
So by that logic, when we're here at grid
column, we really only have to save one.

37
00:02:37.274 --> 00:02:42.515
By default, it will span to 2, okay?

38
00:02:42.515 --> 00:02:47.636
Now, just cuz you can say just one doesn't
necessarily mean that this is the best

39
00:02:47.636 --> 00:02:52.705
to communicate to all of the other people
who are gonna be writing code with you.

40
00:02:52.705 --> 00:02:57.541
Yeah, I think 1/2 looks a little bit
more intuitive than we're really

41
00:02:57.541 --> 00:02:59.884
clear about what's going on here.

42
00:02:59.884 --> 00:03:03.192
But in this case, you could just say 1,
and it will work just fine.

43
00:03:03.192 --> 00:03:07.846
So how about this last child,
Ganymede, down here?

44
00:03:07.846 --> 00:03:11.965
So if I said, figure: last-child,

45
00:03:15.295 --> 00:03:21.567
And I want this one to span across two
columns just to show you how that works,

46
00:03:21.567 --> 00:03:26.665
what would I put here for
grid-column using the span syntax?

47
00:03:26.665 --> 00:03:31.538
&gt;&gt; And 1 slash or 1 slash span.

48
00:03:35.573 --> 00:03:38.983
&gt;&gt; 1/span 2, yeah.

49
00:03:38.983 --> 00:03:40.027
There you go.

50
00:03:42.499 --> 00:03:47.392
So start over here in the first column,
span over two columns.

51
00:03:47.392 --> 00:03:49.922
That does exactly what it should be doing.

52
00:03:49.922 --> 00:03:53.871
Like I said, in a lot of cases,
you can just stick with the numbers.

53
00:03:53.871 --> 00:03:54.884
They're totally fine.

54
00:03:54.884 --> 00:03:57.941
I find the numbers really intuitive and
I use them a lot.

55
00:03:57.941 --> 00:04:02.108
Span becomes helpful if you are gonna
write a more generic style and

56
00:04:02.108 --> 00:04:06.813
you wanted to just span over 2, whatever,
I want it span over three rows.

57
00:04:06.813 --> 00:04:08.469
Whenever I sign this class,

58
00:04:08.469 --> 00:04:12.134
the thing is gonna span over three
rows wherever it is in space.

59
00:04:12.134 --> 00:04:15.906
That might be useful for that, okay?

60
00:04:15.906 --> 00:04:20.453
The other thing I wanna introduce at this
point is up here on our grid container.

61
00:04:20.453 --> 00:04:25.507
Now, to this point, we have been writing
out however many columns we have.

62
00:04:25.507 --> 00:04:28.197
And it hasn't been a big deal,
cuz we have two columns or

63
00:04:28.197 --> 00:04:29.807
we have three columns, so what?

64
00:04:29.807 --> 00:04:33.440
But sometimes you might wind
up with ten columns and

65
00:04:33.440 --> 00:04:39.031
writing 1 fr ten times in a row is a real
pain in the neck, wouldn't you agree?

66
00:04:39.031 --> 00:04:45.351
Okay, so there is a better syntax for
this, and that is the repeat syntax.

67
00:04:45.351 --> 00:04:48.359
So we can swap this out for

68
00:04:48.359 --> 00:04:53.235
repeat, and then I would say 2, 1fr.

69
00:04:53.235 --> 00:04:55.926
Nothing is gonna change here
in the way the page looks.

70
00:04:55.926 --> 00:04:57.994
This is exactly the same thing.

71
00:04:57.994 --> 00:05:05.147
So now I'm telling to make two
columns that are 1fr, make sense?

72
00:05:07.459 --> 00:05:11.700
So for my grid template rows where
I have three autos in a row,

73
00:05:11.700 --> 00:05:14.953
how would I write this
with the repeat syntax?

74
00:05:14.953 --> 00:05:16.752
What would I say here?

75
00:05:16.752 --> 00:05:19.499
&gt;&gt; Pitch it like repeat, three auto.

76
00:05:19.499 --> 00:05:24.292
&gt;&gt; Repeat (3, auto), exactly.

77
00:05:24.292 --> 00:05:29.508
So the number, comma, the size,
whatever that size happens to be.

78
00:05:29.508 --> 00:05:34.804
fr's are really convenient,
autos are convenient for rows.

79
00:05:34.804 --> 00:05:38.056
Could be anything, makes sense?

80
00:05:38.056 --> 00:05:40.800
Okay, fantastic, so
those mean exactly the same thing,

81
00:05:40.800 --> 00:05:42.539
you can write them however you want.

