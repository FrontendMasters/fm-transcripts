WEBVTT

1
00:00:00.260 --> 00:00:03.680
Unfortunately, picture is gonna
forget about a few things here.

2
00:00:03.680 --> 00:00:08.577
So, first of all, how big is the image
location, or in other words,

3
00:00:08.577 --> 00:00:10.910
the hole, in the page layout?

4
00:00:10.910 --> 00:00:15.877
So, if you think about your page
at a very specific dimension,

5
00:00:15.877 --> 00:00:20.673
how big is the hole that the image
is going to fit into, okay?

6
00:00:20.673 --> 00:00:23.563
That we don't know as webpage authors.

7
00:00:23.563 --> 00:00:25.483
And how big are the images?

8
00:00:25.483 --> 00:00:27.627
If you think of this as a hole and a peg,

9
00:00:27.627 --> 00:00:31.053
how big are those images
that might be displayed?

10
00:00:31.053 --> 00:00:33.184
We may not necessarily know that either.

11
00:00:33.184 --> 00:00:37.392
And we may not necessarily know the pixel
density of the screen if we wanna have

12
00:00:37.392 --> 00:00:40.488
a retina image for those kinds of devices.

13
00:00:40.488 --> 00:00:44.954
So it is possible to write
enough code to address

14
00:00:44.954 --> 00:00:50.058
all of those issues, and
it's ridiculous, okay?

15
00:00:50.058 --> 00:00:51.243
Nobody wants this.

16
00:00:51.243 --> 00:00:57.748
[LAUGH] Right, just because you can,
doesn't mean you should, but there you go.

17
00:00:57.748 --> 00:01:01.173
Okay, and I'm not even gonna explain it,
that's what it would look like.

18
00:01:01.173 --> 00:01:04.688
All right, so
if you have that kind of situation,

19
00:01:04.688 --> 00:01:08.960
where you're interested in
serving up the right image, and

20
00:01:08.960 --> 00:01:14.322
you don't necessarily want control
over the content of that image itself,

21
00:01:14.322 --> 00:01:18.563
then we have the alternative
which is srcset and sizes.

22
00:01:18.563 --> 00:01:22.000
These are attributes that go
inside of the image element.

23
00:01:22.000 --> 00:01:27.250
And in this case, the browser is going
to decide which image will display.

24
00:01:27.250 --> 00:01:29.980
Okay, you do not get to decide.

25
00:01:29.980 --> 00:01:34.084
So, generally speaking,
when people work with srcset and sizes,

26
00:01:34.084 --> 00:01:37.840
we're talking about the picture
at different dimensions.

27
00:01:37.840 --> 00:01:42.511
It's gonna be exactly the same photo,
it's not going to be art-directed.

28
00:01:42.511 --> 00:01:46.361
In other words, showing different parts
of the image, or cropped in any way.

29
00:01:46.361 --> 00:01:50.131
It's gonna be exactly the same image
at different dimensions, makes sense?

30
00:01:51.481 --> 00:01:57.091
Okay, so as they say here, these
are the difference between the author

31
00:01:57.091 --> 00:02:02.908
when she's writing the code and
the browser when it's loading the page.

32
00:02:02.908 --> 00:02:07.211
Here's things that you need to know in
order to really optimally load an image.

33
00:02:07.211 --> 00:02:11.430
You needed to know the viewport
dimensions, the image size relative to

34
00:02:11.430 --> 00:02:16.022
the viewport, the screen density, and
the source file dimensions, okay?

35
00:02:16.022 --> 00:02:19.242
And in some cases,
the author knows a few of these things,

36
00:02:19.242 --> 00:02:22.939
the browser knows other of them,
but we don't talk to each other.

37
00:02:22.939 --> 00:02:26.619
And so we have a mess, yeah?

38
00:02:26.619 --> 00:02:29.062
All right, so what srcset and

39
00:02:29.062 --> 00:02:33.868
sizes does is it will resolve
this particular situation.

40
00:02:33.868 --> 00:02:37.308
So now the browser will know not
only the viewport dimensions and

41
00:02:37.308 --> 00:02:41.586
the screen density, it will also know
the image size relative to the viewport.

42
00:02:41.586 --> 00:02:46.843
And it will know the source
files dimensions, makes sense?

43
00:02:46.843 --> 00:02:51.878
Okay, so again, there is a catch,
the browser is gonna decide

44
00:02:51.878 --> 00:02:57.961
which of those images to load, and
it may not load the image that you expect.

45
00:02:57.961 --> 00:03:02.421
Because every browser is gonna be
programmed with their own special

46
00:03:02.421 --> 00:03:03.366
code, okay?

47
00:03:04.366 --> 00:03:07.546
And it may not all be the same,
we know browsers, right?

48
00:03:07.546 --> 00:03:10.156
So that is the thing that
you have to keep in mind.

49
00:03:10.156 --> 00:03:13.603
You have to let the browser do its
own thing, don't be a control freak,

50
00:03:13.603 --> 00:03:14.186
all right?

51
00:03:15.766 --> 00:03:18.924
So this is the way this
code is going to look.

52
00:03:18.924 --> 00:03:22.486
This is all the image element, okay?

53
00:03:22.486 --> 00:03:27.114
So we have an img src, we have an img
srcset, and we have img sizes, and

54
00:03:27.114 --> 00:03:28.946
we have alt text, okay?

55
00:03:28.946 --> 00:03:30.686
So let's go through
what these things mean.

56
00:03:32.686 --> 00:03:37.800
First of all, we have the image itself,
so img src small, that is the fallback.

57
00:03:37.800 --> 00:03:40.388
If the browser doesn't
understand srcset and sizes,

58
00:03:40.388 --> 00:03:42.927
this is the image it's going to display,
all right?

59
00:03:42.927 --> 00:03:47.035
And the alt attribute is going to be
the same thing for all of the images.

60
00:03:47.035 --> 00:03:50.408
Which is fine, because these are images
that are big, and they're small,

61
00:03:50.408 --> 00:03:53.565
and they're all the same picture,
makes sense?

62
00:03:53.565 --> 00:03:59.114
Okay, the srcset part of this
is gonna be the filenames and

63
00:03:59.114 --> 00:04:02.477
widths of these images in pixels.

64
00:04:02.477 --> 00:04:08.042
Unfortunately, you can't use
any other units, so it's 1024w,

65
00:04:08.042 --> 00:04:13.237
that is 1024 pixels,
640w, that is 640 pixels.

66
00:04:13.237 --> 00:04:16.947
And these are the actual dimensions
of these particular images.

67
00:04:16.947 --> 00:04:20.722
So this is just like saying
the image source is large.jpeg and

68
00:04:20.722 --> 00:04:22.180
the width is 1024.

69
00:04:22.180 --> 00:04:23.722
If you were working with the width and

70
00:04:23.722 --> 00:04:26.448
height attributes inside
of the image element.

71
00:04:26.448 --> 00:04:31.144
&gt;&gt; And these aren't max-widths or
min-widths,

72
00:04:31.144 --> 00:04:34.727
it's just-
&gt;&gt; This is the dimension of

73
00:04:34.727 --> 00:04:35.935
the picture, right?

74
00:04:35.935 --> 00:04:38.398
This is the width of this picture.

75
00:04:38.398 --> 00:04:43.396
We are not dictating the hole
in which it is fitting, okay?

76
00:04:43.396 --> 00:04:46.116
That comes with the next thing,
which is sizes.

77
00:04:46.116 --> 00:04:50.256
This is telling it about
the size of the hole, okay?

78
00:04:50.256 --> 00:04:55.626
So here's the picture and its dimensions,
here's the hole you're gonna put it into.

79
00:04:55.626 --> 00:05:00.531
And so, here,
what size has been, width: 36em,

80
00:05:00.531 --> 00:05:03.265
33vw, comma, 100vw.

81
00:05:03.265 --> 00:05:04.076
Here's the logic there.

82
00:05:04.076 --> 00:05:08.965
So if the min-width is at least 36em,
or you could do that in

83
00:05:08.965 --> 00:05:13.867
pixels if you wanted,
then display the image at 33.3vw.

84
00:05:13.867 --> 00:05:14.710
What does that mean?

85
00:05:14.710 --> 00:05:16.955
What is 33.3vw?

86
00:05:16.955 --> 00:05:17.968
&gt;&gt; Vertical width?

87
00:05:17.968 --> 00:05:21.910
&gt;&gt; Viewport width, so
a third of the viewport width, right?

88
00:05:21.910 --> 00:05:25.469
So if the minimum width of
the screen is at least 36em,

89
00:05:25.469 --> 00:05:28.575
I'm not sure what that
translates to in pixels,

90
00:05:28.575 --> 00:05:33.682
then we're gonna display the image at
the width of one-third of the viewport.

91
00:05:33.682 --> 00:05:37.565
So that is how srcset and
sizes work, all right?

92
00:05:37.565 --> 00:05:39.767
And that is how you would read this.

93
00:05:39.767 --> 00:05:42.414
And these slides are available for
download in Chapter 12.

94
00:05:42.414 --> 00:05:45.768
You may wanna download these and
keep them on file.

95
00:05:45.768 --> 00:05:50.043
And you can certainly refer to
Eric Porter's excellent article on this.

96
00:05:50.043 --> 00:05:55.491
It's from 2014, it's still relevant today,
this is still how it works, okay?

97
00:05:55.491 --> 00:06:02.988
All right, so there's other ways you can
use the same kind of source kind of thing.

98
00:06:02.988 --> 00:06:07.541
Some people have done this way, here's
my retina image will be my 2x image,

99
00:06:07.541 --> 00:06:10.568
my super retina image
will be this 3x image.

100
00:06:10.568 --> 00:06:14.105
And then, of course, we'll just have
our standard image as the source for

101
00:06:14.105 --> 00:06:15.588
the image tag.

102
00:06:15.588 --> 00:06:20.487
And as it says here, it's a nice compact
way to supply that high DPI imagery, but

103
00:06:20.487 --> 00:06:23.351
this only works for fixed width images.

104
00:06:23.351 --> 00:06:26.297
So if you want your image to
flex a little bit on the screen,

105
00:06:26.297 --> 00:06:28.411
this is not the solution for that.

106
00:06:28.411 --> 00:06:33.971
So here might wind up being some code
that you could write on this for

107
00:06:33.971 --> 00:06:36.991
a picture, for example, here.

108
00:06:36.991 --> 00:06:42.736
So here's an idea for
incorporating aspect ratios.

109
00:06:42.736 --> 00:06:47.786
So we could load different images
that are of different sizes.

110
00:06:47.786 --> 00:06:52.146
We might have 16 by 9 images
if the screen is big enough.

111
00:06:52.146 --> 00:06:55.266
We might have square images for
other size screens.

112
00:06:55.266 --> 00:06:58.126
And then we have our fallback picture.

113
00:06:58.126 --> 00:07:01.524
So you just look at that and
go, wow, that's kind of cool.

114
00:07:01.524 --> 00:07:05.798
Okay, so here I'm specifying
seven different images,

115
00:07:05.798 --> 00:07:09.189
depending on what's
going on on the screen.

116
00:07:09.189 --> 00:07:12.475
Now, where would you do this much work for
one image?

117
00:07:14.775 --> 00:07:18.614
I don't know, maybe your big
banner image across the top, but

118
00:07:18.614 --> 00:07:21.273
maybe not really much else, yeah.

119
00:07:21.273 --> 00:07:26.233
&gt;&gt; I was actually gonna ask about, can you
query just the actual ratio, screen ratio?

120
00:07:26.233 --> 00:07:31.260
&gt;&gt; You could try doing some aspect
ratio media queries here instead for

121
00:07:31.260 --> 00:07:33.561
your picture element as well.

122
00:07:33.561 --> 00:07:34.662
&gt;&gt; Can I skip ahead?

123
00:07:34.662 --> 00:07:35.908
[LAUGH]
&gt;&gt; There you go.

124
00:07:35.908 --> 00:07:36.443
&gt;&gt; Is that the next slide?

125
00:07:36.443 --> 00:07:38.433
&gt;&gt; There you go, so there's that.

126
00:07:38.433 --> 00:07:42.537
Okay, so which should you use,
picture or src and srcset?

127
00:07:42.537 --> 00:07:47.587
So if you wanna use picture, you have to
start to have to answer these questions.

128
00:07:47.587 --> 00:07:52.384
Is the image being optimum for content
reasons more than technical reasons,

129
00:07:52.384 --> 00:07:52.967
right?

130
00:07:52.967 --> 00:07:57.078
So in other words, I'm gonna take my
picture, I'm gonna take a part of it.

131
00:07:57.078 --> 00:08:01.874
Because when this picture goes down this
small, I can't see that detail anymore,

132
00:08:01.874 --> 00:08:03.789
for example, okay?

133
00:08:03.789 --> 00:08:06.609
For the picture, the author is
going to choose the best image.

134
00:08:06.609 --> 00:08:07.995
So you're gonna program it so

135
00:08:07.995 --> 00:08:11.919
that the image you want to display
where you want to display it.

136
00:08:11.919 --> 00:08:16.108
And those images may potentially be
very different in composition and

137
00:08:16.108 --> 00:08:17.741
dimension, makes sense?

138
00:08:17.741 --> 00:08:21.963
Awesome, for src and srcset,
the images are being optimized for

139
00:08:21.963 --> 00:08:25.050
technical reasons more
than content reasons.

140
00:08:25.050 --> 00:08:28.686
And what we mean by that is we
are doing speed optimization for

141
00:08:28.686 --> 00:08:33.231
our webpage, and we want our images
to load as fast as possible.

142
00:08:33.231 --> 00:08:36.801
Okay, so that would be an example
of a technical consideration.

143
00:08:36.801 --> 00:08:40.371
The browser is gonna
choose the best image, and

144
00:08:40.371 --> 00:08:45.917
that best image may not be the same
across all of the browsers, okay?

145
00:08:45.917 --> 00:08:49.997
And those images are gonna vary in
dimension, but not in composition.

146
00:08:49.997 --> 00:08:54.844
They're all gonna be exactly
the same image, makes sense?

147
00:08:54.844 --> 00:09:00.140
Okay, so finally, if you were
working with background images,

148
00:09:00.140 --> 00:09:03.045
and you want them to be responsive.

149
00:09:03.045 --> 00:09:06.370
Because sometimes your
background images need

150
00:09:06.370 --> 00:09:11.282
to tame their file sizes depending
on what device you're working on.

151
00:09:11.282 --> 00:09:15.772
So here you would contain your
background images in a media query.

152
00:09:15.772 --> 00:09:18.487
And if you do that,
then only one image will download,

153
00:09:18.487 --> 00:09:21.134
if your images are inside
of the media query.

154
00:09:21.134 --> 00:09:24.929
And then you're gonna constrain all of
your background images in specific media

155
00:09:24.929 --> 00:09:27.454
queries, or multiple images may download.

156
00:09:27.454 --> 00:09:29.274
So what do I mean by that?

157
00:09:29.274 --> 00:09:31.364
This is what the code looks like.

158
00:09:31.364 --> 00:09:36.574
So if my max-width is 700 pixels,
we're gonna load the small picture.

159
00:09:36.574 --> 00:09:40.771
If it's at least 701 pixels,
we'll download the larger picture.

