WEBVTT

1
00:00:00.087 --> 00:00:00.786
Very good.

2
00:00:00.786 --> 00:00:02.758
So we are actually starting chapter 2,

3
00:00:02.758 --> 00:00:06.586
now I'm gonna give you a little bit of
background about Grid here so that you get

4
00:00:06.586 --> 00:00:11.010
that 30,000 foot view of what Grid looks
like, and then we're gonna start coding.

5
00:00:11.010 --> 00:00:12.567
So, introducing Grid.

6
00:00:12.567 --> 00:00:14.813
What is it good for?

7
00:00:14.813 --> 00:00:19.677
Grid is best for a series of boxes
that are the same width, perfect.

8
00:00:19.677 --> 00:00:23.513
Layouts that pan across rows and
or columns.

9
00:00:23.513 --> 00:00:28.182
So, remember Flexbox is one-dimensional,
it can either do a row,

10
00:00:28.182 --> 00:00:31.656
it can do a column,
Grid does both at the same time.

11
00:00:31.656 --> 00:00:36.006
If you have siblings, so HTML elements
that are at the same level, and

12
00:00:36.006 --> 00:00:38.956
you want things to overlap or
cover each other,

13
00:00:38.956 --> 00:00:44.158
Grid is something that will do that, you
don't have to use absolute positioning.

14
00:00:44.158 --> 00:00:47.460
Grid will actually allow you
to overlap Grid cells, and

15
00:00:47.460 --> 00:00:50.070
grid should be your default layout method.

16
00:00:50.070 --> 00:00:55.440
So the big key to understanding grid,
and for that matter, Flexbox, is this.

17
00:00:55.440 --> 00:01:01.018
There is an HTML relationship
between parents and children, okay?

18
00:01:01.018 --> 00:01:03.333
We're going to talk a lot about
parents and children today.

19
00:01:03.333 --> 00:01:05.373
We'll start looking at code for this.

20
00:01:05.373 --> 00:01:09.028
We're gonna leverage this
relationship between parents and

21
00:01:09.028 --> 00:01:10.861
children with CSS selectors.

22
00:01:10.861 --> 00:01:15.632
And the properties that are available to
you for working with your layout depend on

23
00:01:15.632 --> 00:01:20.351
whether you're working with a parent in
the HTML or with a child in the HTML that.

24
00:01:20.351 --> 00:01:23.381
That will determine what
properties are available to you.

25
00:01:23.381 --> 00:01:26.779
By the way, if you are grandchildren,
great-grandchildren,

26
00:01:26.779 --> 00:01:29.620
you don't get anything at all,
it's just parents and

27
00:01:29.620 --> 00:01:32.301
children that are going
to have these properties.

28
00:01:32.301 --> 00:01:38.004
So the important part to a successful
CSS layout, whether it's Grid or

29
00:01:38.004 --> 00:01:43.137
whether it's Flexbox is this,
making sure your HTML structure

30
00:01:43.137 --> 00:01:48.098
is correct before you start
applying Grid or Flexbox, okay?

31
00:01:48.098 --> 00:01:51.753
Couple of interesting things about Grid,
If you're not familiar,

32
00:01:51.753 --> 00:01:55.799
there are several kinds of syntax with
Grid that accomplish the same thing.

33
00:01:55.799 --> 00:01:58.407
We're gonna go through all three of those.

34
00:01:58.407 --> 00:02:02.585
So, one of the confusing things about
working with Grid is that you go well,

35
00:02:02.585 --> 00:02:06.769
sometimes it's numbers,
sometimes it's spans, sometimes it's area,

36
00:02:06.769 --> 00:02:09.276
I have no idea when to
use any of those things.

37
00:02:09.276 --> 00:02:11.558
Well, a lot of times they're
just interchangeable,

38
00:02:11.558 --> 00:02:14.300
so pick the syntax that you like,
we'll go through all of those.

39
00:02:14.300 --> 00:02:17.837
Grid is also gonna do its best
to guess at what you want.

40
00:02:17.837 --> 00:02:20.089
And it doesn't always guess correctly,

41
00:02:20.089 --> 00:02:22.673
but it does a really good
job of trying to guess.

42
00:02:22.673 --> 00:02:26.655
So even if you say,
I would like to have three columns, but

43
00:02:26.655 --> 00:02:30.640
your children suggest that
there should be four columns,

44
00:02:30.640 --> 00:02:35.627
Grid is going to try to work with that
to make the layout on your page work.

45
00:02:35.627 --> 00:02:39.600
It's gonna try to guess where to put
the next box in the right location.

46
00:02:39.600 --> 00:02:43.510
In your slides here, I'm gonna give you
a little reference list here of your Grid

47
00:02:43.510 --> 00:02:46.169
properties, you can go
through that at your leisure.

48
00:02:46.169 --> 00:02:50.109
There is a link here to CSS Tricks,
which has I think,

49
00:02:50.109 --> 00:02:54.588
one of the best guides still for
looking at Grid properties.

50
00:02:54.588 --> 00:02:59.012
I asked Chris Coyer about this and
he said, CSS Tricks doesn't seem to be

51
00:02:59.012 --> 00:03:02.796
updated that much anymore,
is this guide still pretty good?

52
00:03:02.796 --> 00:03:06.994
It is, in fact, pretty good, you won't
find a lot of information on sub-grid

53
00:03:06.994 --> 00:03:11.317
there, but for grid, which is the kind of
grid you're gonna use in most of the time

54
00:03:11.317 --> 00:03:14.286
and most of your work,
this is a great reference to use.

55
00:03:14.286 --> 00:03:17.368
If you are one of those people
who like to use games, and

56
00:03:17.368 --> 00:03:20.789
you're very sad about Flexbox Froggy or
Flexbox Defender,

57
00:03:20.789 --> 00:03:24.293
you'll be happy to know that
there are Grid games for you too.

58
00:03:24.293 --> 00:03:27.792
Remember that these games teach
you only properties and values,

59
00:03:27.792 --> 00:03:31.300
they don't really teach you
the thinking behind how to use Grid.

60
00:03:31.300 --> 00:03:35.708
The ones that I was able to find
are Grid Garden, Grid Attack, and

61
00:03:35.708 --> 00:03:40.211
Grid Critters, enjoy and
have a blast, and let's start coding.

