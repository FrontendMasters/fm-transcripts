WEBVTT

1
00:00:00.053 --> 00:00:02.624
Hello everyone, my name is Jen Kramer.

2
00:00:02.624 --> 00:00:06.388
I am the director of Learning Design and
Technology at AnnieCannons.

3
00:00:06.388 --> 00:00:08.773
And this is Grid and Flexbox for

4
00:00:08.773 --> 00:00:12.363
responsive design here
at Frontend Masters.

5
00:00:12.363 --> 00:00:16.389
I'm thrilled to be presenting this
third version of this course.

6
00:00:16.389 --> 00:00:18.782
The first time I taught this was in 2017.

7
00:00:18.782 --> 00:00:23.757
Right back when Flexbox was really the
focus of what we did for web page layouts,

8
00:00:23.757 --> 00:00:28.000
we were just starting to dig into
grid as a thing to layout web pages.

9
00:00:28.000 --> 00:00:32.015
Now that it's 2024,
our focus really should be on Grid for

10
00:00:32.015 --> 00:00:33.469
laying out web pages.

11
00:00:33.469 --> 00:00:37.195
Flexbox is gonna handle a few
exceptions to the rule and so

12
00:00:37.195 --> 00:00:40.464
we're gonna talk a lot
about that in this course.

13
00:00:40.464 --> 00:00:47.043
The website for this course is
at grid-flexbox.css.education.

14
00:00:47.043 --> 00:00:51.502
On this website, you'll find all of
the background behind the course, and

15
00:00:51.502 --> 00:00:56.101
you will find down here a listing of all
the various chapters with links to all of

16
00:00:56.101 --> 00:00:59.326
the CodePens that we'll be
working on in this course.

17
00:00:59.326 --> 00:01:03.141
This course does focus pretty
much on CodePen as a way for

18
00:01:03.141 --> 00:01:07.932
learning Grid and Flexbox and
also container queries, subgrid, and

19
00:01:07.932 --> 00:01:10.301
responsive images along the way.

20
00:01:10.301 --> 00:01:14.355
And the reason why is because we can just
jump right into CodePen and see what we're

21
00:01:14.355 --> 00:01:18.383
doing while we're coding and there's
nothing to install and nothing to set up.

22
00:01:18.383 --> 00:01:22.810
We won't be building whole web pages in
this course will be building parts of

23
00:01:22.810 --> 00:01:25.507
webpages so
that we can understand how Grid and

24
00:01:25.507 --> 00:01:28.981
Flexbox really work in smaller
environments, all right.

25
00:01:28.981 --> 00:01:32.827
So if we get started here,
we're going to start with chapter one.

26
00:01:32.827 --> 00:01:35.414
If you wanna click on that link there,
and you'll

27
00:01:35.414 --> 00:01:39.431
see here I wanna talk a little bit about
the history of responsive design and.

28
00:01:39.431 --> 00:01:43.380
Kind of remind you of where we've been so
that we can learn where we're going.

29
00:01:43.380 --> 00:01:47.542
There are slides that are here available
for you if you wanna download them and

30
00:01:47.542 --> 00:01:48.383
follow along.

31
00:01:48.383 --> 00:01:52.243
And we'll refer back to this deck
a couple of times here in this course.

32
00:01:52.243 --> 00:01:56.225
So I started in this industry
in the year 2000 and so

33
00:01:56.225 --> 00:02:00.133
it is now year 24 that I have
been coding for the web.

34
00:02:00.133 --> 00:02:04.391
And when I graduated from my
master's degree program in 2001,

35
00:02:04.391 --> 00:02:08.960
the state of the web was really maybe
5% of the tools that we have today.

36
00:02:08.960 --> 00:02:10.985
We were using tables for layouts.

37
00:02:10.985 --> 00:02:15.414
We were using FTP to move our
files up to a web server and

38
00:02:15.414 --> 00:02:21.133
there was really almost no CSS
support at all inside of web browsers.

39
00:02:21.133 --> 00:02:25.423
CSS has always kind of been behind the
curve in terms of support inside of web

40
00:02:25.423 --> 00:02:29.934
browsers and at that particular point in
time our web browsers were a big deal.

41
00:02:29.934 --> 00:02:32.782
You had to download them,
you had to install them,

42
00:02:32.782 --> 00:02:35.499
you had to consciously
update your browser and so

43
00:02:35.499 --> 00:02:40.150
things were always just very behind in
terms of everything that we had in 2001.

44
00:02:40.150 --> 00:02:43.420
Wait, we got to 2008 fortunately,
we've made some progress.

45
00:02:43.420 --> 00:02:45.718
We finally ditch table-based layouts and

46
00:02:45.718 --> 00:02:48.283
we were looking more at
float-based layouts.

47
00:02:48.283 --> 00:02:53.487
A lot of our building was done inside of
content management systems like WordPress,

48
00:02:53.487 --> 00:02:54.743
Joomla and Drupal.

49
00:02:54.743 --> 00:02:59.693
And jQuery was the hot thing of
the day because jQuery dressed a lot

50
00:02:59.693 --> 00:03:01.049
of issues for us.

51
00:03:01.049 --> 00:03:05.048
Prior to this if you were working with
regular JavaScript browsers had different

52
00:03:05.048 --> 00:03:07.709
ideas of what
the Document Object Model looked like.

53
00:03:07.709 --> 00:03:11.842
You had a Document Object Model for
Netscape and you had a different one for

54
00:03:11.842 --> 00:03:14.853
IE so JavaScript was just a nightmare and
a disaster.

55
00:03:14.853 --> 00:03:18.301
One of the big problems that jQuery
solved was that we finally had a tool

56
00:03:18.301 --> 00:03:20.592
that was actually cross
browser compatible.

57
00:03:20.592 --> 00:03:21.473
Of course,

58
00:03:21.473 --> 00:03:27.206
Netscape was mostly gone by then we were
back to Mozilla at that point in time.

59
00:03:27.206 --> 00:03:30.754
Once we get to 2010,
we wound up with the iPhone for

60
00:03:30.754 --> 00:03:34.395
the first time the iPad was
shortly coming along there.

61
00:03:34.395 --> 00:03:37.801
And Ethan Marcotte wrote
his famous article from

62
00:03:37.801 --> 00:03:42.131
A List Apart that defined this
concept of responsive design.

63
00:03:42.131 --> 00:03:46.668
And it consisted of
a flexible grid-based layout,

64
00:03:46.668 --> 00:03:50.076
media queries and images that resize.

65
00:03:50.076 --> 00:03:54.327
And what was radical about this idea at
that point in time was that there was

66
00:03:54.327 --> 00:03:58.248
a single code base that could address
all of the devices all at once.

67
00:03:58.248 --> 00:04:03.524
Prior to this we, separate code bases
usually something like jQuery Mobile.

68
00:04:03.524 --> 00:04:07.298
Which would build the entire mobile
website and then you'd have your separate

69
00:04:07.298 --> 00:04:11.128
desktop website, two separate code bases
frequently even if you had a database

70
00:04:11.128 --> 00:04:15.091
behind it that would serve up different
content to those different form factors.

71
00:04:15.091 --> 00:04:18.270
It was still kind of a nightmare
to keep things in sync.

72
00:04:18.270 --> 00:04:23.747
So responsive design helped us put
everything behind one particular codebase.

73
00:04:23.747 --> 00:04:27.238
And we started to think about
responsive design this way,

74
00:04:27.238 --> 00:04:30.310
which was starting with
our grid-based layouts.

75
00:04:30.310 --> 00:04:35.331
So in 2010,
we did this with float-based layouts and

76
00:04:35.331 --> 00:04:38.411
floats for layouts is truly a hack.

77
00:04:38.411 --> 00:04:43.158
And it was it's kind of a nightmare, and
no one really understands how floats work.

78
00:04:43.158 --> 00:04:45.187
They forget that you have
to clear if you float.

79
00:04:45.187 --> 00:04:50.036
And so Bootstrap wound up addressing
that issue really effectively.

80
00:04:50.036 --> 00:04:54.023
People were so happy that they finally had
something that could work for layout and

81
00:04:54.023 --> 00:04:56.641
they didn't have to try to
figure it out on their own.

82
00:04:56.641 --> 00:05:02.680
Between 2014 and 2017 the grid-based
layouts were largely coded with Flexbox.

83
00:05:02.680 --> 00:05:05.838
And we were still kind of obsessed
with Bootstrap at that point in time.

84
00:05:05.838 --> 00:05:08.133
And that was because
Grid was a new spec and

85
00:05:08.133 --> 00:05:10.766
it was still reaching
some of the web browsers.

86
00:05:10.766 --> 00:05:12.670
By 2018, we had support for

87
00:05:12.670 --> 00:05:16.487
Grid pretty much in all of the web
browsers at that point in time.

88
00:05:16.487 --> 00:05:20.651
And now moving on,
we've got support for size queries,

89
00:05:20.651 --> 00:05:24.748
container size queries
that's at February 2023.

90
00:05:24.748 --> 00:05:29.235
And subgrid got support in all the major
browsers by September of 2023.

91
00:05:29.235 --> 00:05:32.652
We are at a point in time where
we need to start pivoting and

92
00:05:32.652 --> 00:05:36.855
starting to use some of these newer
tools that really were designed for

93
00:05:36.855 --> 00:05:39.155
laying out whole web pages like Grid.

94
00:05:39.155 --> 00:05:42.420
The other part of this
is images that resize.

95
00:05:42.420 --> 00:05:47.093
And there was a whole long stretch of
time where this was a disaster but

96
00:05:47.093 --> 00:05:50.478
today we have solutions that are solid,
stable,

97
00:05:50.478 --> 00:05:55.085
cross-browser compatible and
they're in the HTML of all things.

98
00:05:55.085 --> 00:06:00.909
So the picture element is one of these
ways of creating images that resize and

99
00:06:00.909 --> 00:06:03.011
also sizes and source set.

100
00:06:03.011 --> 00:06:05.012
Finally, we have media queries.

101
00:06:05.012 --> 00:06:08.112
I always like to point out with media
queries because people are generally

102
00:06:08.112 --> 00:06:09.863
familiar with them at this point in time.

103
00:06:09.863 --> 00:06:12.277
They're familiar with min
width media queries or

104
00:06:12.277 --> 00:06:15.794
max width media queries where we're
querying the size of the viewport.

105
00:06:15.794 --> 00:06:18.714
But there's also various other
kinds of media queries as well.

106
00:06:18.714 --> 00:06:23.833
You can test on height,
aspect ratio, orientation,

107
00:06:23.833 --> 00:06:29.521
colors and various kinds of
print characteristics as well.

108
00:06:29.521 --> 00:06:34.476
These have continued to grow over time for
media queries.

109
00:06:34.476 --> 00:06:38.299
How does Ethan Marcotte's definition
of responsive design hold up today?

110
00:06:38.299 --> 00:06:43.081
Well, we take typically are doing
our grid-based layouts using various

111
00:06:43.081 --> 00:06:44.787
kinds of CSS frameworks.

112
00:06:44.787 --> 00:06:47.226
We're using Tailwind a lot of the time,

113
00:06:47.226 --> 00:06:51.472
Bootstrap to a lesser extent some
people are starting to use CSS Grid.

114
00:06:51.472 --> 00:06:55.010
The images that resize
often get forgotten.

115
00:06:55.010 --> 00:06:59.168
It is important, especially if you're
gonna use some of those great big giant

116
00:06:59.168 --> 00:07:03.273
banner images that are very large in file
size that we use images that resize.

117
00:07:03.273 --> 00:07:06.462
For some reason, developers seem to
be trying to avoid media queries.

118
00:07:06.462 --> 00:07:09.103
I'm not entirely sure why that is.

119
00:07:09.103 --> 00:07:11.715
They don't add a lot to
the performance of the web page and

120
00:07:11.715 --> 00:07:13.790
they are pretty straightforward to manage.

121
00:07:13.790 --> 00:07:18.154
But I think a lot of people think that
media queries are defined by your

122
00:07:18.154 --> 00:07:21.474
framework and
that they can't be changed perhaps.

123
00:07:21.474 --> 00:07:25.580
And then of course, there's always
the attitude that container queries and

124
00:07:25.580 --> 00:07:27.790
subgrid will solve all of our problems and

125
00:07:27.790 --> 00:07:30.836
we will live in a perfect world
of rainbows and unicorns.

126
00:07:30.836 --> 00:07:34.377
And I'm here to tell you that
that's never going to be the case,

127
00:07:34.377 --> 00:07:36.226
nothing is ever perfect, okay.

128
00:07:36.226 --> 00:07:40.256
So consider these as guiding principles
as you start to think about laying out

129
00:07:40.256 --> 00:07:40.881
web pages.

130
00:07:40.881 --> 00:07:47.354
That we wanna start with CSS Grid as
our first tool in laying out web pages.

131
00:07:47.354 --> 00:07:51.514
Sometimes we'll use Flexbox and we're
gonna talk about when that is appropriate

132
00:07:51.514 --> 00:07:54.177
but Grid should be the first
tool that you reach for.

133
00:07:54.177 --> 00:07:58.717
As you think about the images that resize
consider using the picture element,

134
00:07:58.717 --> 00:08:03.276
sizes and source set which are attributes
that go inside of the image element.

135
00:08:03.276 --> 00:08:06.395
And then you can start thinking about
media queries and container queries.

136
00:08:06.395 --> 00:08:11.200
We'll go into the difference between those
and how they work later on in this course.

137
00:08:11.200 --> 00:08:14.642
Let's talk about this Flexbox
versus Grid thing, okay?

138
00:08:14.642 --> 00:08:16.460
That's not Flexbox and Grid up there,

139
00:08:16.460 --> 00:08:19.614
those are developers that are hashing
it out up there on the screen.

140
00:08:19.614 --> 00:08:24.158
Flexbox and Grid are two perfectly
good specs, they're totally awesome,

141
00:08:24.158 --> 00:08:28.360
they are modern, they're up to date
you should be using both of them.

142
00:08:28.360 --> 00:08:32.748
But we seem to have a lot of conflict in
the community about which is better, and

143
00:08:32.748 --> 00:08:36.352
which should we be using, and
which one should we leave behind.

144
00:08:36.352 --> 00:08:40.859
So I made a little bit of controversy
here recently on one of these

145
00:08:40.859 --> 00:08:44.949
social media platforms when
I said that it's 2024 and

146
00:08:44.949 --> 00:08:48.637
we should be teaching
students Grid from the start.

147
00:08:48.637 --> 00:08:51.376
We shouldn't start with Flexbox
we ought to start with Grid.

148
00:08:51.376 --> 00:08:54.129
Because Flexbox is really an exception for
most layouts.

149
00:08:54.129 --> 00:08:59.189
Grid was designed to lay out web pages we
should be laying out web pages with Grid.

150
00:08:59.189 --> 00:09:02.786
And of course we had
people who had comments to

151
00:09:02.786 --> 00:09:06.109
say about that particular kind of stuff.

152
00:09:06.109 --> 00:09:10.598
So this particular person thought
that there's more work involved for

153
00:09:10.598 --> 00:09:15.855
varying viewport sizes using Grid versus
Flex and shifts in layout construction.

154
00:09:15.855 --> 00:09:18.499
I'm here to tell you that
that is in fact not true.

155
00:09:18.499 --> 00:09:24.591
I'm sorry that you were not taught
appropriately how Grid works.

156
00:09:24.591 --> 00:09:29.844
Flexbox and Grid in terms of their
HTML markup can be extremely similar.

157
00:09:29.844 --> 00:09:31.502
It's the CSS that's gonna change.

158
00:09:31.502 --> 00:09:34.795
We're gonna take a look at
that in a lot of great detail.

159
00:09:34.795 --> 00:09:38.481
If you think about Grid and
all the things that it can do, by the way,

160
00:09:38.481 --> 00:09:39.592
it does a whole lot.

161
00:09:39.592 --> 00:09:43.325
I'm not even gonna be able to cover
all the things that Grid does in this

162
00:09:43.325 --> 00:09:44.474
particular course.

163
00:09:44.474 --> 00:09:47.981
Those things tend to be where
you're trying to use Flexbox,

164
00:09:47.981 --> 00:09:50.540
Flexbox does a much
smaller subset of that.

165
00:09:50.540 --> 00:09:53.590
And there are some things
that Flexbox does better and

166
00:09:53.590 --> 00:09:55.707
does uniquely that Grid does not do.

167
00:09:55.707 --> 00:10:01.606
So basically, what I'm suggesting here is
that where you can go either with Grid or

168
00:10:01.606 --> 00:10:03.303
Flextbox go with Grid.

169
00:10:03.303 --> 00:10:09.150
Where you need to use Flexbox because
that's your only choice use Flexbox, okay?

170
00:10:09.150 --> 00:10:12.753
So that is all I have to be
saying things change over time.

171
00:10:12.753 --> 00:10:16.883
Your bootcamp taught you Flexbox
in 2015 because of cross browser

172
00:10:16.883 --> 00:10:19.133
compatibility to just the way it was.

173
00:10:19.133 --> 00:10:23.206
Bootstrap use Flexbox
because of browser support.

174
00:10:23.206 --> 00:10:26.147
Grid was designed for web page layouts.

175
00:10:26.147 --> 00:10:31.182
HTML tables, floats, Flexbox were
never designed for web page layouts.

176
00:10:31.182 --> 00:10:34.131
Grid is the first tool that
was designed for that.

177
00:10:34.131 --> 00:10:37.707
And sorry for
the last 20 years of hacks before this,

178
00:10:37.707 --> 00:10:40.595
who knew that we wanted
to lay out web pages?

179
00:10:40.595 --> 00:10:44.337
But finally, we have addressed
this particular issue with Grid

