WEBVTT

1
00:00:00.220 --> 00:00:04.977
So the next thing that I'm going
to do here is a big demo of all of

2
00:00:04.977 --> 00:00:06.910
flex boxes properties.

3
00:00:06.910 --> 00:00:09.220
People have found this to be
really helpful in the past.

4
00:00:09.220 --> 00:00:12.685
So I'm going to continue to include this.

5
00:00:12.685 --> 00:00:17.604
If you click on the code pen here,
all right, so here's what we've got.

6
00:00:17.604 --> 00:00:22.475
We just always start with the HTML.

7
00:00:22.475 --> 00:00:26.499
And what you see here is
that we have unordered list.

8
00:00:26.499 --> 00:00:27.838
There's our unordered list.

9
00:00:27.838 --> 00:00:30.344
It's a ul, a bunch of lis.

10
00:00:30.344 --> 00:00:34.843
Shockingly, flexbox is just like
grid in that the parents and

11
00:00:34.843 --> 00:00:39.612
children determine all of
the relationships inside of Flexbox.

12
00:00:39.612 --> 00:00:43.122
So, when you have an unordered list,
we need to be concerned with parents and

13
00:00:43.122 --> 00:00:43.668
children.

14
00:00:43.668 --> 00:00:45.618
Obviously, the UL is the parent.

15
00:00:45.618 --> 00:00:50.047
The LIs are the children
in this particular case.

16
00:00:50.047 --> 00:00:53.463
And then I have some,
just some basic styles here.

17
00:00:53.463 --> 00:00:56.033
Again, this is just
putting on the border box.

18
00:00:56.033 --> 00:01:00.502
It's making some
modifications to the font and

19
00:01:00.502 --> 00:01:04.754
then I've added some sizing, some colors.

20
00:01:04.754 --> 00:01:06.636
That's all that's located here.

21
00:01:06.636 --> 00:01:11.494
And the notes that I'm going to be reading
from are down here in JavaScript is one

22
00:01:11.494 --> 00:01:12.521
giant comment.

23
00:01:12.521 --> 00:01:16.729
So this is the types of properties that
I'm going to be working through if you

24
00:01:16.729 --> 00:01:19.442
wanna refer to all that
giant comment down here.

25
00:01:19.442 --> 00:01:23.283
JavaScript box, cuz we're not using it,

26
00:01:23.283 --> 00:01:27.666
because will use it for
some directions, okay?

27
00:01:29.996 --> 00:01:34.794
So the very first thing that we would do,
is we are working with Flexbox here.

28
00:01:34.794 --> 00:01:41.137
I have my ul that that is going around
all of this each of those numbers,

29
00:01:41.137 --> 00:01:44.909
some of them have text, those are li's.

30
00:01:44.909 --> 00:01:49.582
And I am going to start by
setting this up with a ul and

31
00:01:49.582 --> 00:01:52.534
I'm going to say display flex.

32
00:01:52.534 --> 00:01:57.478
Just by doing that, you will see that
you will immediately get a layout for

33
00:01:57.478 --> 00:01:58.450
the webpage.

34
00:01:58.450 --> 00:02:00.460
This is not true with Grid.

35
00:02:00.460 --> 00:02:04.564
Grid will not give you this layout
immediately, but Flexbox will.

36
00:02:04.564 --> 00:02:08.727
And it's scrolling a little bit off
the page here in my browser, and

37
00:02:08.727 --> 00:02:13.489
that has to do with the fact that I have
this set to affixed width at the moment.

38
00:02:13.489 --> 00:02:20.357
The blue box continues to be the ul,
the red items are the li's.

39
00:02:25.258 --> 00:02:31.138
Okay, the next thing you can do is
you can set up a flex-direction.

40
00:02:31.138 --> 00:02:33.393
And you may be familiar
with some of these.

41
00:02:33.393 --> 00:02:35.113
By default, the direction is row.

42
00:02:35.113 --> 00:02:38.131
If you put in row,
nothing is going to happen.

43
00:02:38.131 --> 00:02:41.434
Did you know about row-reverse?

44
00:02:41.434 --> 00:02:43.892
Okay, what do you think row
reverse is going to do?

45
00:02:43.892 --> 00:02:46.175
Anyone want to take a guess?

46
00:02:46.175 --> 00:02:47.451
Reverse it, right?

47
00:02:47.451 --> 00:02:48.776
So it's gonna go from 6 to 1.

48
00:02:52.335 --> 00:02:56.203
So there we go, 6 to 1, cool.

49
00:02:56.203 --> 00:02:59.127
Why would you wanna do this?

50
00:02:59.127 --> 00:03:00.921
I don't know, but it's kind of cool.

51
00:03:00.921 --> 00:03:03.851
&gt;&gt; [LAUGH]
&gt;&gt; [LAUGH] okay?

52
00:03:03.851 --> 00:03:05.531
We can also make this go up and

53
00:03:05.531 --> 00:03:10.089
down instead of going by row because
remember Flexbox is one direction only.

54
00:03:10.089 --> 00:03:14.808
So you pick rows, or you pick columns
as opposed to grid which has both.

55
00:03:14.808 --> 00:03:21.101
So we could say column and
we're gonna get what we had before, okay?

56
00:03:21.101 --> 00:03:22.982
Guess what column reverse does?

57
00:03:25.542 --> 00:03:26.294
&gt;&gt; 6 to 1.

58
00:03:26.294 --> 00:03:30.276
&gt;&gt; 6 to 1, going up and down the page.

59
00:03:30.276 --> 00:03:31.123
So there we go.

60
00:03:31.123 --> 00:03:34.698
That's column reverse.

61
00:03:34.698 --> 00:03:35.451
Any questions on that?

62
00:03:39.672 --> 00:03:41.058
&gt;&gt; See that being helpful if you think.

63
00:03:41.058 --> 00:03:44.397
You're trying to just sort and
you want to like a reverse order.

64
00:03:44.397 --> 00:03:47.756
&gt;&gt; Yep, if for some reason you
wanna reverse order, here it is.

65
00:03:47.756 --> 00:03:53.368
Yep, honestly, I've never used
this in a real website before.

66
00:03:53.368 --> 00:03:55.200
I really only ever use row.

67
00:03:55.200 --> 00:04:00.664
[LAUGH] the next one is flex wrap and
flex wrap has to do with how Things

68
00:04:00.664 --> 00:04:05.948
are going to wrap onto another line or
wrap onto another column.

69
00:04:05.948 --> 00:04:09.574
And there's a bunch of values for this.

70
00:04:09.574 --> 00:04:13.434
So we could say wrap.

71
00:04:13.434 --> 00:04:16.765
And in theory,
this is going to wrap onto another line.

72
00:04:16.765 --> 00:04:21.714
So we ran out of room here for 5 and
6, so they've moved onto another line.

73
00:04:21.714 --> 00:04:27.487
In this particular case, the width of 2
and 4 are determined by their content.

74
00:04:27.487 --> 00:04:31.324
And since they have some extra text there,
they become a little bit bigger.

75
00:04:31.324 --> 00:04:34.146
That made 5 and 6 push out of the way.

76
00:04:34.146 --> 00:04:36.147
By default, this value is no wrap.

77
00:04:39.987 --> 00:04:42.990
And that means everything
has to fit on that same row,

78
00:04:42.990 --> 00:04:46.418
which means that our text is
gonna wrap in order to make room.

79
00:04:46.418 --> 00:04:48.531
Make sense?

80
00:04:48.531 --> 00:04:56.104
Okay, And

81
00:04:56.104 --> 00:04:59.875
we also have one other because you know,
why not?

82
00:04:59.875 --> 00:05:01.909
This value is wrap reverse.

83
00:05:01.909 --> 00:05:05.801
Does anyone want to guess what
rap reverse is going to do?

84
00:05:05.801 --> 00:05:09.194
&gt;&gt; It's like when you take the record and
you go.

85
00:05:09.194 --> 00:05:11.591
&gt;&gt; Yeah, basically, yep, you got it.

86
00:05:11.591 --> 00:05:15.989
So if we say wrap reverse,
that's gonna put 5 and

87
00:05:15.989 --> 00:05:20.402
6 on top and
it's gonna put 1 to 4 on the bottom.

88
00:05:20.402 --> 00:05:25.486
Again, I have never used
this in a real web page,

89
00:05:25.486 --> 00:05:29.466
but hey, it's there, cool, okay?

90
00:05:29.466 --> 00:05:34.035
There is a shorthand for both the
flex-direction and the flex-wrap property.

91
00:05:34.035 --> 00:05:38.111
This is the one I tend to use,
which is flex-flow.

92
00:05:38.111 --> 00:05:41.170
So you could say something like row-wrap.

93
00:05:44.142 --> 00:05:49.296
And so that's just combining those
flex-direction and flex-wrap properties.

94
00:05:49.296 --> 00:05:51.763
If you feel more comfortable
spelling them out individually,

95
00:05:51.763 --> 00:05:52.889
you're welcome to do that.

96
00:05:52.889 --> 00:05:54.857
If you like to shorthand,
you can use that.

97
00:05:54.857 --> 00:05:57.366
It makes zero difference
to anyone except for

98
00:05:57.366 --> 00:06:01.341
you programmers who want to have
something done in a very specific way.

99
00:06:01.341 --> 00:06:02.758
So that's the whole purpose of that.

