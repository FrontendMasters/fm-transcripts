WEBVTT

1
00:00:00.000 --> 00:00:02.613
&gt;&gt; Evgenii Ray: So
let's proceed to our first exercise,

2
00:00:02.613 --> 00:00:07.615
which is creating this the following
structure, where we have the container,

3
00:00:07.615 --> 00:00:12.559
top-observer element, bottom-observer
element and the virtual-list.

4
00:00:12.559 --> 00:00:17.885
So let's proceed to our virtual-list file.

5
00:00:17.885 --> 00:00:21.057
And let's create this HTML template.

6
00:00:21.057 --> 00:00:26.266
So first we start with a container,
then we should

7
00:00:26.266 --> 00:00:32.746
have a top-observer,
&gt;&gt; Evgenii Ray: Then

8
00:00:32.746 --> 00:00:35.637
we need to have the virtual-list.

9
00:00:36.758 --> 00:00:40.638
&gt;&gt; Evgenii Ray: And
then we want to have the bottom-observer.

10
00:00:43.876 --> 00:00:46.216
&gt;&gt; Evgenii Ray: And
let's convert it to HTML.

11
00:00:49.018 --> 00:00:52.237
&gt;&gt; Evgenii Ray: And
type some utility text.

12
00:00:52.237 --> 00:00:58.076
So this will be the bottom-observer,
oops, sorry.

13
00:00:58.076 --> 00:01:02.129
The next one will be, bottom-observer.

14
00:01:06.938 --> 00:01:09.077
&gt;&gt; Evgenii Ray: So
let's place it in the string now.

15
00:01:11.444 --> 00:01:15.680
&gt;&gt; Evgenii Ray: And
trim it to remove any spaces.

16
00:01:15.680 --> 00:01:20.582
So now we have our basic structure and
we can check our index HTML,

17
00:01:20.582 --> 00:01:26.482
which already has the template that we
used before in the previous exercises.

18
00:01:26.482 --> 00:01:31.389
And it also has the database
that we already used before.

19
00:01:31.389 --> 00:01:35.613
And here we initialized our virtual-list
with some properties right now,

20
00:01:35.613 --> 00:01:36.474
all there now.

21
00:01:36.474 --> 00:01:41.332
So if we run this HTML,
we should see the basic structure, so

22
00:01:41.332 --> 00:01:47.644
top-observer and a bottom-observer,
there are no elements rendered yet.

23
00:01:47.644 --> 00:01:52.579
So the next step would be to register the
callback, so we need to have the observer

24
00:01:52.579 --> 00:01:56.283
that will track the intersection
with the top-observer and

25
00:01:56.283 --> 00:01:58.331
the bottom-observer element.

26
00:01:58.331 --> 00:02:00.682
So let's implement this one.

27
00:02:00.682 --> 00:02:05.856
We are going to transition to
effect method and I'm going to use

28
00:02:05.856 --> 00:02:11.820
the utility function called
intersectionObserver which will return.

29
00:02:11.820 --> 00:02:17.786
So basically, the wrapper around
the observer constructor that we can use,

30
00:02:17.786 --> 00:02:20.833
so it doesn't have any special logic.

31
00:02:20.833 --> 00:02:27.956
It just observes the elements that we
provided just to make the code cleaner.

32
00:02:27.956 --> 00:02:33.061
So first, we need to provide, as
the first parameter provides the targets

33
00:02:33.061 --> 00:02:37.922
that we want to track, and we already
have the method code getObservers

34
00:02:37.922 --> 00:02:42.885
that will return the top-observer and
the bottom-observer element.

35
00:02:42.885 --> 00:02:45.094
Then we need to provide a callback.

36
00:02:45.094 --> 00:02:48.712
So the callback accepts entries.

37
00:02:48.712 --> 00:02:52.402
And we already have the placeholder
function just an empty one.

38
00:02:52.402 --> 00:02:56.545
So there is no logic in there,
which is called

39
00:02:56.545 --> 00:03:02.338
handleintersectionObserver and
we pass the entries inside.

40
00:03:02.338 --> 00:03:05.844
And now we can also provide
the configuration for our observer.

41
00:03:05.844 --> 00:03:09.366
So let's call the threshold.

42
00:03:09.366 --> 00:03:15.288
So let's set up the threshold of 20%,
&gt;&gt; Evgenii Ray: Okay?

43
00:03:15.288 --> 00:03:21.003
So we can now test our file so
we can open,

44
00:03:21.003 --> 00:03:25.207
or actually, let's first,

45
00:03:25.207 --> 00:03:30.101
validate that our code get fired.

46
00:03:30.101 --> 00:03:37.494
So what we can do here is,
&gt;&gt; Evgenii Ray: So

47
00:03:37.494 --> 00:03:41.484
let's do the basic handlings of entries.

48
00:03:41.484 --> 00:03:45.296
So first, we need to loop for
the entries that we have.

49
00:03:49.098 --> 00:03:52.026
&gt;&gt; Evgenii Ray: Then there are two,
basically two cases,

50
00:03:52.026 --> 00:03:56.188
either we have the top-observer or
the bottom-observer.

51
00:03:56.188 --> 00:04:02.010
So but first, let's check that
the entry is intersecting.

52
00:04:03.338 --> 00:04:07.720
&gt;&gt; Evgenii Ray: And
then we validate that entry.target.id

53
00:04:07.720 --> 00:04:12.224
should be equal to
either the top-observer.

54
00:04:14.924 --> 00:04:21.094
&gt;&gt; Evgenii Ray: In this case, we need
to call the handleTopObserver method.

55
00:04:21.094 --> 00:04:24.701
The skeleton of this method already
predefined in the template, but

56
00:04:24.701 --> 00:04:26.515
it doesn't have any code inside.

57
00:04:26.515 --> 00:04:33.612
And then we also have the,
&gt;&gt; Evgenii Ray: Bottom-observer,

58
00:04:33.612 --> 00:04:38.082
if the target ids the bottom-observer.

59
00:04:38.082 --> 00:04:40.562
So this both of functionally
synchronize but

60
00:04:40.562 --> 00:04:43.376
let's specify that they
don't return anything.

61
00:04:43.376 --> 00:04:47.382
And if we want to validate
that the code works,

62
00:04:47.382 --> 00:04:52.534
let's just put some simple alert and
say, the code works.

63
00:04:52.534 --> 00:04:57.727
So okay, now we can open our index.html,

64
00:04:57.727 --> 00:05:02.352
run it and see that, yeah, it works.

65
00:05:02.352 --> 00:05:08.257
Okay, this where our first two
exercises within one bigger exercise.

66
00:05:08.257 --> 00:05:12.296
And now the next part will be to render
some cards when we intersect with

67
00:05:12.296 --> 00:05:13.738
the bottom-observer.

68
00:05:13.738 --> 00:05:15.871
Do we have any questions for
these two parts?

69
00:05:15.871 --> 00:05:20.913
&gt;&gt; Speaker 2: In the y function,
where we get the data-y attribute,

70
00:05:20.913 --> 00:05:27.687
is there any advantage to using get set
attribute versus the data list API?

71
00:05:27.687 --> 00:05:30.959
Or is it mostly just
a matter of preference?

72
00:05:30.959 --> 00:05:34.789
&gt;&gt; Evgenii Ray: It's a matter of
preference, there is no clear advantage.

73
00:05:34.789 --> 00:05:39.573
So here you can either use the data list,
but because I know exactly the name of

74
00:05:39.573 --> 00:05:42.751
the attribute,
we can just use the get attribute.

75
00:05:42.751 --> 00:05:46.767
Maybe if you work with the multiple
attributes then it might be useful to have

76
00:05:46.767 --> 00:05:47.405
data list.

