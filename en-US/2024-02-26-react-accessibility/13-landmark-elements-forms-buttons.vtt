WEBVTT

1
00:00:00.460 --> 00:00:04.370
So landmark elements,
kind of similar to headings.

2
00:00:04.370 --> 00:00:05.773
Headings are used more.

3
00:00:05.773 --> 00:00:10.051
In all of the feedback I've heard
from people who use screen readers,

4
00:00:10.051 --> 00:00:12.970
headings are used a lot of the time.

5
00:00:12.970 --> 00:00:15.187
Everyone's different, of course,

6
00:00:15.187 --> 00:00:18.670
but landmark elements
are technically a best practice.

7
00:00:18.670 --> 00:00:22.732
One of the things in the X Extension
that if you turn best practices off,

8
00:00:22.732 --> 00:00:26.858
any rules related to landmark
elements will be excluded.

9
00:00:26.858 --> 00:00:33.723
They're nice to have and you absolutely
should include landmarks because why not?

10
00:00:33.723 --> 00:00:38.654
Just know that if you only have time
to prioritize one over the other,

11
00:00:38.654 --> 00:00:43.170
put headings at the top of your list,
but landmarks are great.

12
00:00:43.170 --> 00:00:48.980
There are things you create in your
templates that you kinda just set it and

13
00:00:48.980 --> 00:00:50.487
forget it mostly.

14
00:00:50.487 --> 00:00:55.415
If you aren't editing templates or
views that are for bigger sections of

15
00:00:55.415 --> 00:00:59.775
your pages all the time,
you might not even see these elements,

16
00:00:59.775 --> 00:01:03.440
components might get flooded
into these landmarks.

17
00:01:03.440 --> 00:01:07.681
When I opened up the Accessibility
Insights extension earlier,

18
00:01:07.681 --> 00:01:12.161
we had things for headings and
landmarks, so just to refresh there.

19
00:01:12.161 --> 00:01:15.905
So we have nav, main, section, header,

20
00:01:15.905 --> 00:01:20.699
footer, aside, and
there are some rules with these.

21
00:01:20.699 --> 00:01:25.440
So certain landmark elements need
to be what's called top level.

22
00:01:25.440 --> 00:01:28.615
Main is one,
I think a side is another one.

23
00:01:28.615 --> 00:01:35.114
So you can't nest main inside of nav or a
side, that one's a little bit surprising.

24
00:01:35.114 --> 00:01:42.399
That one has to be top level, kind of
like as a sibling to your main element.

25
00:01:42.399 --> 00:01:46.350
&gt;&gt; When to check if results
of aXe are a false positive?

26
00:01:46.350 --> 00:01:52.905
I'm always confused about landmarks, and
specifically about role equal groups

27
00:01:52.905 --> 00:01:58.612
that sometimes are used on list items
results that display as a result.

28
00:01:58.612 --> 00:02:01.863
&gt;&gt; Okay, so
the question is about aXe results, so

29
00:02:01.863 --> 00:02:05.212
a lot of these things will
come up in aXe results.

30
00:02:05.212 --> 00:02:07.508
I'm gonna turn this Landmarks thing off.

31
00:02:07.508 --> 00:02:14.130
So the question was about when to
know about Landmark element results.

32
00:02:14.130 --> 00:02:17.420
So if you're not working
on best practices,

33
00:02:17.420 --> 00:02:21.402
if you have to prioritize,
you have a lot of feedback,

34
00:02:21.402 --> 00:02:25.660
turn those off, fix them later,
maybe come back to them.

35
00:02:25.660 --> 00:02:28.953
If you are trying to fix them
because you have bandwidth,

36
00:02:28.953 --> 00:02:33.629
it's the appropriate time what have you,
read through what it's telling you.

37
00:02:33.629 --> 00:02:36.895
So sometimes it will be reporting
that there are roles and

38
00:02:36.895 --> 00:02:41.538
elements that there shouldn't be,
like for lists, those have default roles.

39
00:02:41.538 --> 00:02:46.949
So we have lists here, UL, and
OL and LI for the list items.

40
00:02:46.949 --> 00:02:51.110
Those have roles built in,
a lot of these do.

41
00:02:51.110 --> 00:02:57.395
That's kind of the overlap that we haven't
totally discussed yet of ARIA and HTML,

42
00:02:57.395 --> 00:03:03.523
is that what makes them semantic is that
they have meaning, whereas divs don't.

43
00:03:03.523 --> 00:03:07.843
And so lists have roles, so, if you
are putting a role of region on one,

44
00:03:07.843 --> 00:03:10.579
I think what aXe might
be telling you is that,

45
00:03:10.579 --> 00:03:14.044
you could put the region role
on a div that wraps the list.

46
00:03:14.044 --> 00:03:18.888
So that the list keeps its semantic
roles without us overwriting them.

47
00:03:18.888 --> 00:03:22.302
So that could be one thing,
if I'm following the question.

48
00:03:25.337 --> 00:03:29.968
So one other note about section and
nav, anything that you've repeated.

49
00:03:29.968 --> 00:03:34.447
And we've actually seen this already,
just kind of in the rendered

50
00:03:34.447 --> 00:03:38.610
result of what we have in these slides,
is that I have two navs,

51
00:03:38.610 --> 00:03:43.426
and I put an ARIA label on those so
that you could tell which one's which.

52
00:03:43.426 --> 00:03:47.775
Cuz especially when you open up
a voiceover in the rotor, I think it won't

53
00:03:47.775 --> 00:03:51.508
even show section elements if
they don't have labels on them.

54
00:03:51.508 --> 00:03:56.140
But if it was just section, section,
section, section, that's like the new div.

55
00:03:56.140 --> 00:04:02.006
[LAUGH] So they've learned kind of
through, practice of evaluating a lot

56
00:04:02.006 --> 00:04:08.172
of web pages that sections that aren't
labeled are kind of treated as divs.

57
00:04:08.172 --> 00:04:13.191
So if you want them to actually be
sectioning elements that come up in

58
00:04:13.191 --> 00:04:18.488
the screen reader as major sectioning
sign posts, you can label them.

59
00:04:18.488 --> 00:04:21.900
And if you are worried about
ARIA label getting out of date,

60
00:04:21.900 --> 00:04:24.427
cuz sometimes those
strings just get set and

61
00:04:24.427 --> 00:04:28.538
forgotten, you could use aria-labelledby,
it's really similar.

62
00:04:28.538 --> 00:04:31.249
But instead of taking a string value for
a label,

63
00:04:31.249 --> 00:04:34.233
you can point it at another element,
like a heading.

64
00:04:34.233 --> 00:04:37.555
So if you have a piece of
content inside of the landmark,

65
00:04:37.555 --> 00:04:42.295
aria-labelledby is pretty great for
labeling, cuz you can just sort of double

66
00:04:42.295 --> 00:04:45.850
up on content that is visible,
that won't get out of date.

67
00:04:45.850 --> 00:04:50.522
So that's one technique I
would recommend for landmarks.

68
00:04:50.522 --> 00:04:55.404
So lists, they're awesome,
don't sleep on using those

69
00:04:55.404 --> 00:05:00.302
because if you have groups of items,
like lists of links.

70
00:05:00.302 --> 00:05:05.292
You can nest lists, they're great
because they automatically count in

71
00:05:05.292 --> 00:05:08.827
a screen reader, it'll say,
list, five items.

72
00:05:08.827 --> 00:05:13.918
There is one gotcha in Safari and
VoiceOver that I have to tell you about.

73
00:05:13.918 --> 00:05:15.920
Safari, again in there,

74
00:05:15.920 --> 00:05:20.935
heuristics of how web pages
are actually written out in the wild.

75
00:05:20.935 --> 00:05:28.014
They've made a counteraction of, if lists
have their lists style removed with CSS,

76
00:05:28.014 --> 00:05:32.925
there's no dot, or
what do they they call that, a marker,

77
00:05:32.925 --> 00:05:37.866
they will actually not call it
out as a list in a lot of cases.

78
00:05:37.866 --> 00:05:42.488
So if you see lists with role list
bolted on, that might be why,

79
00:05:42.488 --> 00:05:47.372
is because you can get Safari to
treat it as a list, no matter what,

80
00:05:47.372 --> 00:05:50.887
if you bolt that list back,
or the roll back on.

81
00:05:50.887 --> 00:05:53.727
So I have an article if you're like,
what, what is she talking about?

82
00:05:53.727 --> 00:05:58.151
[LAUGH] There's a link here,
where Safari might need a little help.

83
00:05:58.151 --> 00:06:03.166
Scott O'Hara did us a solid and wrote
a really great article on this problem.

84
00:06:03.166 --> 00:06:08.422
So if you do use Safari and
VoiceOver, a lot and you're like,

85
00:06:08.422 --> 00:06:13.594
why are my lists not announcing as lists,
that might be why.

86
00:06:13.594 --> 00:06:18.336
And speaking of aXe results, something
that might come up is that lists have

87
00:06:18.336 --> 00:06:22.502
rules, that they can only have
list items as direct descendants.

88
00:06:22.502 --> 00:06:27.807
So if you have divs mixed in with
your list items as siblings,

89
00:06:27.807 --> 00:06:30.928
you might get some failures in aXe,

90
00:06:30.928 --> 00:06:35.525
cuz it I think it messes up
the counting of the lists.

91
00:06:35.525 --> 00:06:39.001
So, that's something I've
seen where the markup,

92
00:06:39.001 --> 00:06:44.116
maybe we don't check it often enough,
like what is our framework rendering?

93
00:06:44.116 --> 00:06:48.404
Sometimes the frameworks will complain,
too, which really helps us out so

94
00:06:48.404 --> 00:06:50.215
we can catch the stuff earlier.

95
00:06:50.215 --> 00:06:55.122
But I think with all of this,
especially if you're using a framework

96
00:06:55.122 --> 00:06:58.843
to build your UIs,
look at what it's spinning out,

97
00:06:58.843 --> 00:07:04.027
[LAUGH] what actually gets rendered,
cuz that can be very eye-opening.

98
00:07:04.027 --> 00:07:07.750
So forms are a huge part of this.

99
00:07:07.750 --> 00:07:13.185
There's some really powerful elements for
accessibility, starting with the form tag.

100
00:07:13.185 --> 00:07:16.622
Within a form tag if you've
built anything for the web,

101
00:07:16.622 --> 00:07:19.999
you've probably worked with
a lot of these elements.

102
00:07:19.999 --> 00:07:22.638
Field sets and legends are awesome.

103
00:07:22.638 --> 00:07:25.568
You can group form controls together and

104
00:07:25.568 --> 00:07:30.061
give them a group name with a legend,
and you can style those.

105
00:07:30.061 --> 00:07:34.936
I think legend you might be able to make
screen reader only, I'd have to go and

106
00:07:34.936 --> 00:07:36.074
double-check.

107
00:07:36.074 --> 00:07:41.165
But the big thing, the big story with form
controls is that they have to be labeled,

108
00:07:41.165 --> 00:07:44.750
or else, where do you even
filling in if you can't see it?

109
00:07:44.750 --> 00:07:47.025
What does this checkbox do?

110
00:07:47.025 --> 00:07:50.337
Can I opt out of your newsletter?

111
00:07:50.337 --> 00:07:53.308
Everyone should be like,
no, we have to label that,

112
00:07:53.308 --> 00:07:55.503
nobody wants extra newsletters, right?

113
00:07:55.503 --> 00:08:00.173
So we need to label every control.

114
00:08:00.173 --> 00:08:02.036
Extensions like aXe and WAVE and

115
00:08:02.036 --> 00:08:05.766
Accessibility Insights are really
great at pointing that out.

116
00:08:05.766 --> 00:08:11.063
If something went wrong or you missed it
somehow, there's two ways to label them.

117
00:08:11.063 --> 00:08:17.927
So for a form input, you can use the for
attribute on the label.

118
00:08:17.927 --> 00:08:24.600
In React it's HTML4, because JSX and
HTML and JavaScript are all mixed up.

119
00:08:24.600 --> 00:08:29.892
So to make sure that the compiler knows
we're talking about the label for

120
00:08:29.892 --> 00:08:33.286
in React, it is the HTML for,
and then the ID.

121
00:08:33.286 --> 00:08:38.175
It will match that label and the input or
select, whatever form control it is.

122
00:08:38.175 --> 00:08:41.092
It will say these two are joined, and

123
00:08:41.092 --> 00:08:46.188
it will then expose that label as
the name for that form control.

124
00:08:46.188 --> 00:08:50.332
Implicit is just when you have
a label element that wraps an input.

125
00:08:50.332 --> 00:08:55.411
The label text will apply to that
input as well, it's pretty easy.

126
00:08:55.411 --> 00:09:00.902
And they're getting easier to style, thank
goodness, [LAUGH] we really needed that.

127
00:09:00.902 --> 00:09:03.346
And then one note about labeling and
naming,

128
00:09:03.346 --> 00:09:06.960
only certain elements can be labeled
with things like ARIA label.

129
00:09:06.960 --> 00:09:12.600
So that question about the role region,
I think even on the SoundCloud

130
00:09:12.600 --> 00:09:18.049
site that we tested earlier,
there might have been an aXe result for

131
00:09:18.049 --> 00:09:23.236
ARIA label not being like you
can't use it on certain elements.

132
00:09:23.236 --> 00:09:27.696
I think it's limited to role of image.

133
00:09:27.696 --> 00:09:31.437
What I tend to do for
that type of thing if I'm like,

134
00:09:31.437 --> 00:09:36.755
can I label that element, I'll go and
pull up that ARIA specification.

135
00:09:36.755 --> 00:09:39.773
Let's go do that real quick as a practice.

136
00:09:39.773 --> 00:09:46.564
So ARIA 1.2, let's say I wanted to look
up ARIA label, I'm just gonna search for

137
00:09:46.564 --> 00:09:51.553
it real quickly and then the first
mention of it I can click on.

138
00:09:51.553 --> 00:09:55.069
So it will tell me what it is,

139
00:09:55.069 --> 00:09:59.758
and then what elements I can use it on.

140
00:09:59.758 --> 00:10:06.060
And so this process of checking,
where can I use it usually can be helpful.

141
00:10:06.060 --> 00:10:11.076
I'm actually not really seeing what I was
looking for here, but whenever you're

142
00:10:11.076 --> 00:10:15.960
going to use something, it would be worth
going and doing a search to make sure.

143
00:10:15.960 --> 00:10:18.513
Your tooling will probably
also complain at you,

144
00:10:18.513 --> 00:10:22.604
which is helpful like, hey, you put
an ARIA label on a div, you can't do that.

145
00:10:22.604 --> 00:10:25.925
Okay, thank you, tool,
thank you for telling me.

146
00:10:25.925 --> 00:10:27.761
So those are some of
the practices that I use.

147
00:10:27.761 --> 00:10:31.541
I'll look at MDN,
Mozilla Developer Network,

148
00:10:31.541 --> 00:10:36.347
I'll look at ARIA if I'm wanting
to go check up on something.

149
00:10:36.347 --> 00:10:39.075
Buttons and links are a huge one,

150
00:10:39.075 --> 00:10:44.838
somehow these are the most basic
elements that we managed to screw up.

151
00:10:44.838 --> 00:10:48.979
I didn't know about them either, I mean
I put click events on divs just like

152
00:10:48.979 --> 00:10:53.413
everyone else in the beginning, then I
learned how awesome the HTML button is.

153
00:10:53.413 --> 00:10:58.187
So it's focusable for free,
it has a built-in role, and you can put

154
00:10:58.187 --> 00:11:02.978
a click event on it and it will work
from the keyboard, a div will not.

155
00:11:02.978 --> 00:11:07.560
Links are also awesome,
they have built-in behavior like history.

156
00:11:07.560 --> 00:11:10.666
They need an href attribute to
be reachable with the keyboard.

157
00:11:10.666 --> 00:11:15.012
So sometimes things that are,
have an onClick but not an href,

158
00:11:15.012 --> 00:11:20.262
those links will not be accessible, so
just so you know that little detail.

159
00:11:20.262 --> 00:11:22.732
And this is kind of the big
thing with buttons and links.

160
00:11:22.732 --> 00:11:27.143
Buttons toggle things,
interactive things in your interface,

161
00:11:27.143 --> 00:11:33.174
launching modals that are not deep-linked,
maybe they toggle a setting or something.

162
00:11:33.174 --> 00:11:38.590
Links navigate, so if there's anything
that needs to take you to a location,

163
00:11:38.590 --> 00:11:43.035
if you can use an anchor link,
that's gonna be the best choice.

164
00:11:43.035 --> 00:11:47.480
And what I hear about the most for this
is sort of an anecdote to think about is

165
00:11:47.480 --> 00:11:52.303
when, blind people call support, or
anyone who's using navigating by voice.

166
00:11:52.303 --> 00:11:57.121
When they call customer support to get
help with an online product or service,

167
00:11:57.121 --> 00:12:00.407
and they have someone talk
them through how to use it.

168
00:12:00.407 --> 00:12:05.164
If the links don't look like links and
the buttons don't look like buttons, or

169
00:12:05.164 --> 00:12:08.730
they're not coded that way,
it can get pretty confusing.

170
00:12:08.730 --> 00:12:13.061
So, we try to make links look like
links and buttons look like buttons.

171
00:12:13.061 --> 00:12:17.569
That can get pretty tricky,
cuz CTAs as we call them, calls to action,

172
00:12:17.569 --> 00:12:19.387
they all look like buttons.

173
00:12:19.387 --> 00:12:25.327
Or the buttons look like links, and
it's kind of just we do the best we can.

174
00:12:25.327 --> 00:12:30.039
Just know that those work and they're
accessible if we use them the right way.

175
00:12:30.039 --> 00:12:34.664
So then lastly, the last one I wanna
mention here is details and summary.

176
00:12:34.664 --> 00:12:40.610
So this is like a built-in accordion
widget, they're keyboard accessible.

177
00:12:40.610 --> 00:12:44.691
They work pretty well and
you get default elements,

178
00:12:44.691 --> 00:12:48.597
be sure to test your
implementation to make sure.

179
00:12:48.597 --> 00:12:49.685
But they're awesome.

180
00:12:49.685 --> 00:12:54.764
If you don't already know about details
in summary, they're pretty great.

181
00:12:54.764 --> 00:12:59.693
So sort of an overview of the elements
that you should definitely try

182
00:12:59.693 --> 00:13:00.995
to use if you can.

183
00:13:00.995 --> 00:13:03.084
Sure, question?

184
00:13:03.084 --> 00:13:06.237
&gt;&gt; Have you used the HTML5
dialogue element?

185
00:13:06.237 --> 00:13:07.536
&gt;&gt; Yes.
&gt;&gt; For doing modals?

186
00:13:07.536 --> 00:13:10.442
Would you recommend that or
would you recommend not using that?

187
00:13:10.442 --> 00:13:14.883
&gt;&gt; I would recommend it, yeah, so the
dialogue element, and really it should be

188
00:13:14.883 --> 00:13:18.878
on this list, maybe I'll add it, but
it has a dialogue role built in.

189
00:13:18.878 --> 00:13:20.995
It has the open and close APIs,

190
00:13:20.995 --> 00:13:25.562
like that is definitely an example
of something that's built in.

191
00:13:25.562 --> 00:13:28.827
I think with some of these
implementations, we have to go and

192
00:13:28.827 --> 00:13:30.880
check, are they really accessible?

193
00:13:30.880 --> 00:13:37.407
Another one that comes to mind
is the default date picker.

194
00:13:37.407 --> 00:13:41.746
I actually haven't had an example of that
earlier and we didn't dig into it very

195
00:13:41.746 --> 00:13:45.647
much, but sometimes we are like,
great, there is a default thing.

196
00:13:45.647 --> 00:13:49.306
Some of these newer components
that haven't quite caught on,

197
00:13:49.306 --> 00:13:54.498
they're part of the reason might be that
they're not totally cross-platform stable.

198
00:13:54.498 --> 00:14:00.718
So we wanna go and check, for the dialogue
I think it works reasonably well.

199
00:14:00.718 --> 00:14:04.114
I think there might have been
some consensus building on,

200
00:14:04.114 --> 00:14:07.659
what focus should be sent into
automatically when it opens.

201
00:14:07.659 --> 00:14:11.629
I think that was a sticking point,
if I remember correctly, but

202
00:14:11.629 --> 00:14:15.979
I think it should work reasonably well,
would be a good thing to test.

