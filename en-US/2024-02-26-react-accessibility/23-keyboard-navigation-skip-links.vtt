WEBVTT

1
00:00:00.160 --> 00:00:04.010
So, let's move on to some
keyboard focus management.

2
00:00:04.010 --> 00:00:07.144
Now that we've gotten very deep into ARIA,

3
00:00:07.144 --> 00:00:12.430
some pretty dynamic stuff, so
it's pretty appy, isn't it?

4
00:00:12.430 --> 00:00:14.460
And a lot of ARIA is that way.

5
00:00:14.460 --> 00:00:17.180
It's for dynamic web applications, so

6
00:00:17.180 --> 00:00:22.944
that's why I kind of prefaced it all by
by saying that it is an advanced tool.

7
00:00:22.944 --> 00:00:25.984
So bear with me if you're like,
whoa, this is getting technical.

8
00:00:27.344 --> 00:00:32.025
Some accessibility is pretty technical,
but some of it is more nuts and

9
00:00:32.025 --> 00:00:36.324
bolts mechanics and focus management for
keyboards is that way.

10
00:00:37.684 --> 00:00:41.383
We can create something that's
keyboard accessible without ARIA

11
00:00:41.383 --> 00:00:43.855
really factoring in at all.

12
00:00:43.855 --> 00:00:46.460
We do need to consider ARIA, but

13
00:00:46.460 --> 00:00:50.615
the keyboard-only mindset
is before all of that.

14
00:00:51.785 --> 00:00:56.325
So we want to think about how
can a keyboard user get around.

15
00:00:56.325 --> 00:01:00.507
How can they go from component
to component or page to page?

16
00:01:00.507 --> 00:01:05.217
How can they navigate through content,
including interactive elements?

17
00:01:06.617 --> 00:01:11.381
And so that mindset is something we
want to think about every time we sit

18
00:01:11.381 --> 00:01:15.357
down to test a web page,
build a web page, build a web app.

19
00:01:16.697 --> 00:01:22.379
And we joked around a little bit earlier
today about turning your mouse off for

20
00:01:22.379 --> 00:01:23.697
a day of the week.

21
00:01:23.697 --> 00:01:29.735
I created a tool kind of as a joke called
No Mouse Days as a nod to that idea.

22
00:01:29.735 --> 00:01:33.854
But I think you wanna incorporate it
into your process somehow of just not

23
00:01:33.854 --> 00:01:38.377
using the mouse, not using your trackpad,
and seeing if you can still reach and

24
00:01:38.377 --> 00:01:42.034
operate everything that
should be interactive.

25
00:01:42.034 --> 00:01:44.414
So I have a mantra for you for testing.

26
00:01:44.414 --> 00:01:47.004
And we touched on this in
our debugging section.

27
00:01:47.004 --> 00:01:49.254
So here is some of that again.

28
00:01:49.254 --> 00:01:52.944
Can you navigate to and
operate all interactive controls?

29
00:01:54.634 --> 00:01:58.084
And so screen reader accessibility
does piggyback on this.

30
00:01:58.084 --> 00:02:02.336
We learned a lot with ARIA,
maybe more than you really wanted to know,

31
00:02:02.336 --> 00:02:04.367
[LAUGH] but they do work together.

32
00:02:04.367 --> 00:02:08.882
So any time you make something keyboard
accessible, the screen reader will also be

33
00:02:08.882 --> 00:02:12.257
able to navigate to that
element using the tab key.

34
00:02:12.257 --> 00:02:15.658
Screen readers do have other
ways of navigating, but

35
00:02:15.658 --> 00:02:19.287
the keyboard access is
foundational to a lot of that, and

36
00:02:19.287 --> 00:02:22.549
it's unfortunately overlooked
a lot of the time.

37
00:02:23.999 --> 00:02:26.709
Can you also see where your
focus point is on the screen?

38
00:02:26.709 --> 00:02:31.493
So when we debugged Soundcloud,
we saw that there were some outlines

39
00:02:31.493 --> 00:02:35.704
suppressed and that is extremely common,
unfortunately.

40
00:02:35.704 --> 00:02:39.220
So we want to allow some
kind of focus state and

41
00:02:39.220 --> 00:02:42.005
subtlety is not that helpful here.

42
00:02:42.005 --> 00:02:43.611
We want it to be obvious,

43
00:02:43.611 --> 00:02:48.788
have contrast so people can actually
see where they are on the screen.

44
00:02:48.788 --> 00:02:52.866
And are we getting lost
behind any active layers or

45
00:02:52.866 --> 00:02:58.508
in inactive mega menus or
being forced through sidebar navigation.

46
00:02:58.508 --> 00:03:00.268
We saw that as well.

47
00:03:02.245 --> 00:03:06.626
And then when you have things like modals,
other layers, interactive widgets,

48
00:03:06.626 --> 00:03:10.655
is your focus moved into that new
content and restored when you're done?

49
00:03:10.655 --> 00:03:15.125
So with a modal, is your focus
moved into the modal when it opens?

50
00:03:15.125 --> 00:03:18.560
And then when you hit escape or
hit the close button or accept or

51
00:03:18.560 --> 00:03:20.344
whatever the call to action is,

52
00:03:20.344 --> 00:03:24.797
your focus from your keyboard should
move back to where you came from.

53
00:03:24.797 --> 00:03:25.463
And that's so

54
00:03:25.463 --> 00:03:28.747
that if you can't use a mouse,
that you're placed in the right spot.

55
00:03:28.747 --> 00:03:32.687
And that's really what
focus management is about,

56
00:03:32.687 --> 00:03:37.431
is putting the user in the right
place to do the thing, to type,

57
00:03:37.431 --> 00:03:43.680
to navigate, to digest content that we
just showed on screen in a new layer.

58
00:03:43.680 --> 00:03:48.424
So it's all about curating that
experience for a keyboard user, so

59
00:03:48.424 --> 00:03:53.349
they're not being literally left
behind a modal or some other layer.

60
00:03:55.649 --> 00:04:00.360
One tool that we use for
focus management is skip links.

61
00:04:00.360 --> 00:04:05.289
Skip links are helpful on content-heavy
sites on web applications,

62
00:04:05.289 --> 00:04:09.975
and so when you can navigate by
skip links, you could jump around.

63
00:04:11.045 --> 00:04:15.805
A common example would be a skip to
content link, or skip to main content.

64
00:04:15.805 --> 00:04:21.265
And so that is a link that you can click
that will bypass you past the header or

65
00:04:21.265 --> 00:04:24.134
other content and to the main content.

66
00:04:24.134 --> 00:04:29.041
Or a back-to-top link, that would be
another example of something maybe even

67
00:04:29.041 --> 00:04:31.837
more common than a skip-to-content link.

68
00:04:31.837 --> 00:04:36.772
And these are requirements in
the Web Content Accessibility Guidelines,

69
00:04:36.772 --> 00:04:38.109
they're a Level A.

70
00:04:38.109 --> 00:04:43.711
So we haven't even really talked about
Level A, but Level A is before double A.

71
00:04:43.711 --> 00:04:48.781
So if you're trying to double A,
that would also include single A.

72
00:04:48.781 --> 00:04:52.404
So bypass blocks
are a important requirement and

73
00:04:52.404 --> 00:04:56.301
I am not meeting that by not
having them on this site.

74
00:04:56.301 --> 00:04:57.621
So I'm gonna add some after this.

75
00:04:58.821 --> 00:05:00.986
So they're not just a nice to have.

76
00:05:00.986 --> 00:05:05.585
We've talked about how they should be
visible, so if you have a skip link,

77
00:05:05.585 --> 00:05:08.359
you really wanna make it so
users can reach and

78
00:05:08.359 --> 00:05:12.675
operate it if they're sighted and
if they're using a screen reader.

79
00:05:14.235 --> 00:05:16.525
So some mechanics of skip links.

80
00:05:16.525 --> 00:05:20.928
You've got the link itself, so
it has an internal link usually, so

81
00:05:20.928 --> 00:05:24.158
the HREF points to an ID
reference on an element.

82
00:05:24.158 --> 00:05:29.808
So in this case, there would be an ID
on an element with main content.

83
00:05:29.808 --> 00:05:32.033
And so when I activate that link,

84
00:05:32.033 --> 00:05:36.728
it will automatically jump me to
that element, which is super handy.

85
00:05:38.258 --> 00:05:43.300
And the other component of a skip
link is where does your focus go to?

86
00:05:43.300 --> 00:05:49.570
And so the main element in this example
has that matching idea of main content.

87
00:05:49.570 --> 00:05:54.575
And just to be extra double sure that
it's going to work as a skip link target,

88
00:05:54.575 --> 00:06:00.080
we call it, I'm gonna recommend adding
a tab index attribute of negative one.

89
00:06:00.080 --> 00:06:04.201
So this is some of our first
exposure to tabindex, but

90
00:06:04.201 --> 00:06:08.338
it will make something focusable or not.

91
00:06:08.338 --> 00:06:11.928
Tabindex of 0 will put
it into the tab order.

92
00:06:11.928 --> 00:06:15.693
Tabindex of negative 1 will
make it receive focus,

93
00:06:15.693 --> 00:06:19.885
like if you use JavaScript or
you use a skip link like this,

94
00:06:19.885 --> 00:06:25.122
it will sort of catch it, but
it won't make it so you can tab on to it.

95
00:06:25.122 --> 00:06:26.502
It's not in the tab order.

96
00:06:28.892 --> 00:06:34.882
And so with CSS, you can choose whether
you want to suppress the focus style.

97
00:06:34.882 --> 00:06:38.756
So you can't tab two elements
with -1 of tabindex, but

98
00:06:38.756 --> 00:06:43.697
when you click on them in most browsers,
they will show a focus outline.

99
00:06:43.697 --> 00:06:44.976
People don't love it.

100
00:06:44.976 --> 00:06:47.626
[LAUGH] I've had to suppress this before.

101
00:06:47.626 --> 00:06:51.414
So this is another use case for
focus visible potentially,

102
00:06:51.414 --> 00:06:56.641
where you match a focus visible selector
to show of style in case when you're using

103
00:06:56.641 --> 00:07:02.473
the keyboard with focus management,
you do wanna show where your focus went.

104
00:07:02.473 --> 00:07:07.311
But for mouse users, you could
suppress that focus outline cuz it's

105
00:07:07.311 --> 00:07:11.913
usually around a whole,
your main content is what would have it.

106
00:07:11.913 --> 00:07:17.293
So, yeah, it can be useful
to know that you can match.

107
00:07:17.293 --> 00:07:20.577
I don't recommend hiding
outlines really ever,

108
00:07:20.577 --> 00:07:25.185
except in the case of these tab
index of negative 1 situations.

109
00:07:25.185 --> 00:07:29.353
And even then, you could probably
add a focus visible replacement, so

110
00:07:29.353 --> 00:07:31.795
that keyword users would get something.

111
00:07:33.165 --> 00:07:35.885
So for skip links examples,
let's go look at some.

112
00:07:37.445 --> 00:07:38.964
Target has it.

113
00:07:38.964 --> 00:07:41.756
Here's their big red site.

114
00:07:41.756 --> 00:07:47.193
And so if I hit Tab, they have their
skip to main content link visible.

115
00:07:47.193 --> 00:07:49.210
It bumps down all the content so

116
00:07:49.210 --> 00:07:53.533
we have this full screen
skip to main content link.

117
00:07:53.533 --> 00:07:57.153
And it's actually pretty
cool how they do this.

118
00:07:57.153 --> 00:08:00.754
They have two links, so there's skip
to main content, skip to footer, and

119
00:08:00.754 --> 00:08:03.026
they just replace them
right in the same space.

120
00:08:03.026 --> 00:08:05.876
So that's a pretty nice treatment.

121
00:08:05.876 --> 00:08:08.586
It looks really seamless
with their design.

122
00:08:08.586 --> 00:08:12.855
It's not like an afterthought,
they obviously planned this and

123
00:08:12.855 --> 00:08:16.516
they have the links just kind
of show up in the same spot.

124
00:08:16.516 --> 00:08:20.454
So let's say I wanted to go to
main content, I hit Enter, and

125
00:08:20.454 --> 00:08:23.017
then my focus is already down the page.

126
00:08:23.017 --> 00:08:25.027
I don't have to go all the way
through all the header links.

127
00:08:26.337 --> 00:08:30.165
If I wanted to go back up to the top
again and try the footer one,

128
00:08:30.165 --> 00:08:32.757
that jumps me way down here to the footer.

129
00:08:34.837 --> 00:08:37.512
And so that can be super handy,
especially for

130
00:08:37.512 --> 00:08:42.175
really content-heavy sites where it would
be a huge pain to have to skip around or

131
00:08:42.175 --> 00:08:44.795
to have to tab through
every single element.

132
00:08:45.875 --> 00:08:47.855
So skip links are pretty great.

133
00:08:47.855 --> 00:08:51.335
Let's see how they marked theirs up,
cuz that looked really cool.

134
00:08:51.335 --> 00:08:53.215
So I'm gonna go Inspect
up here in the header.

135
00:08:54.735 --> 00:08:58.049
Here is our skip links.

136
00:09:00.130 --> 00:09:02.405
We have these links right here.

137
00:09:02.405 --> 00:09:08.156
Skip to main content,
just like we showed, it has the HREF.

138
00:09:08.156 --> 00:09:12.976
So they have a CSS class
here of HSR only focusable.

139
00:09:14.896 --> 00:09:19.446
And it looks a lot like our other
SR only classes that we've seen.

140
00:09:19.446 --> 00:09:24.406
And so this one,
that's how they're accomplishing that.

141
00:09:24.406 --> 00:09:28.574
And then I guess if I wanna
see further how they did it,

142
00:09:28.574 --> 00:09:33.496
when it gets focused,
they just change the positioning on it.

143
00:09:33.496 --> 00:09:35.774
Looks like maybe a few other things, but

144
00:09:35.774 --> 00:09:39.603
that's kind of the cool thing about
skip links is you can test them.

145
00:09:39.603 --> 00:09:42.976
Generally, when they're
marked up with HTML and

146
00:09:42.976 --> 00:09:46.510
styled with CSS and
JavaScript comes into play, but

147
00:09:46.510 --> 00:09:51.671
you can match these element pseudo
states and test how they're gonna look.

148
00:09:51.671 --> 00:09:57.401
So this makes it nice when you're
actively developing skip links.

149
00:09:57.401 --> 00:10:01.071
You can just come in here and toggle
this on, it will keep it in that state.

150
00:10:01.071 --> 00:10:05.826
So you can get it looking nice when
it's active, you don't have to keep

151
00:10:05.826 --> 00:10:10.737
tabbing into the page and
that loop of refresh tab, refresh tab.

152
00:10:10.737 --> 00:10:14.687
Use the force element state on focus,
it just makes your life so much easier.

153
00:10:17.007 --> 00:10:19.287
So let's look at the GitHub version,

154
00:10:19.287 --> 00:10:22.858
cuz they have a lot of really
cool accessibility features.

155
00:10:25.539 --> 00:10:28.823
So theirs, they made it stand
out with a blue background so

156
00:10:28.823 --> 00:10:32.789
it pops over the content instead of
pushing everything out of the way.

157
00:10:32.789 --> 00:10:34.319
Works just as well.

158
00:10:34.319 --> 00:10:35.999
And so I hit Enter.

159
00:10:35.999 --> 00:10:40.689
So you could see how there is no visible
focus style when I hit that Enter.

160
00:10:40.689 --> 00:10:44.865
That's what I was talking
about with the no focus style.

161
00:10:46.555 --> 00:10:50.065
So let's inspect theirs a little bit more.

162
00:10:50.065 --> 00:10:54.904
So if I go back up and
I can inspect this one,

163
00:10:54.904 --> 00:10:58.675
we have skip to start of content.

164
00:11:00.225 --> 00:11:02.361
Not what I meant to do.

165
00:11:02.361 --> 00:11:06.987
So, I can search in here, in the DOM,

166
00:11:06.987 --> 00:11:12.782
start of content, so
that's the link itself.

167
00:11:12.782 --> 00:11:17.683
And then they've accomplished theirs,
instead of having an element that

168
00:11:17.683 --> 00:11:22.688
wraps everything, they just put an empty
div and made it catch the focus.

169
00:11:22.688 --> 00:11:24.898
So that has this matching ID,
but there's nothing in it.

170
00:11:27.158 --> 00:11:30.741
I guess I'd wanna test that because
if we're jumping focus around,

171
00:11:30.741 --> 00:11:33.378
it's not gonna really announce anything.

172
00:11:33.378 --> 00:11:36.432
And thinking about a screen reader user,

173
00:11:36.432 --> 00:11:41.098
I haven't tested this specific
combination of techniques.

174
00:11:41.098 --> 00:11:46.703
It is interesting to me that they
have an element right after it that

175
00:11:46.703 --> 00:11:52.526
has a tabindex of negative 1 on it
that says data skipped to content.

176
00:11:52.526 --> 00:11:57.514
So maybe something, I don't know,
it's a curious technique,

177
00:11:57.514 --> 00:12:00.336
but we don't really see where we go.

178
00:12:00.336 --> 00:12:04.164
I guess one benefit of doing
the tabindex of negative 1 technique

179
00:12:04.164 --> 00:12:08.910
is that you have the option of
showing where the user's focus went.

180
00:12:08.910 --> 00:12:12.800
And for people who really rely on
the keyboard, that could be useful.

181
00:12:14.270 --> 00:12:18.470
So, I think just some food for
thought on how to make this happen.

182
00:12:18.470 --> 00:12:21.342
I mean, they're accomplishing
what we really need to happen,

183
00:12:21.342 --> 00:12:23.366
which is jumping you past the header.

184
00:12:23.366 --> 00:12:26.976
Getting you past all the links that
you don't wanna send a user through.

185
00:12:26.976 --> 00:12:29.146
And that's working great,
that's the requirement.

186
00:12:29.146 --> 00:12:31.891
So two different approaches, but

187
00:12:31.891 --> 00:12:37.862
basically doing the same thing of getting
us past content that we wanna skip

