WEBVTT

1
00:00:00.086 --> 00:00:04.620
What's the difference between low
vision and visually impaired?

2
00:00:04.620 --> 00:00:08.974
&gt;&gt; Yes, so
visually impaired is sort of an umbrella

3
00:00:08.974 --> 00:00:12.598
term that covers a lot of vision issues.

4
00:00:12.598 --> 00:00:17.219
Whereas low vision is more specific
to someone not fully blind, but

5
00:00:17.219 --> 00:00:21.689
has enough of a vision impairment
that affects their daily life.

6
00:00:21.689 --> 00:00:24.856
I think there are some
numbers around the stuff.

7
00:00:24.856 --> 00:00:30.151
So visually impaired would include people
who are fully blind and low vision.

8
00:00:30.151 --> 00:00:33.265
Whereas low vision is a bit more specific,

9
00:00:33.265 --> 00:00:38.468
people who can see somewhat, and
it's so different for every person.

10
00:00:38.468 --> 00:00:43.928
&gt;&gt; How much should Devs use screen
readers in their day-to-day job?

11
00:00:43.928 --> 00:00:50.263
&gt;&gt; I would say regularly just so
that you are actually doing it.

12
00:00:50.263 --> 00:00:51.395
It does take some practice.

13
00:00:51.395 --> 00:00:56.268
So it is a bit of a balance,
you don't wanna sink a bunch of time into

14
00:00:56.268 --> 00:01:00.981
something that you might be
uncovering things that are issues.

15
00:01:00.981 --> 00:01:05.253
Or I spoke to this a little bit earlier,
where sometimes it's operator error,

16
00:01:05.253 --> 00:01:08.697
[lLAUGH] and something we think
is an issue really isn't, or

17
00:01:08.697 --> 00:01:11.144
maybe there is an issue
that we didn't find.

18
00:01:11.144 --> 00:01:15.901
So I'd say you work it in your workflow,
I mean,

19
00:01:15.901 --> 00:01:20.310
maybe once a week or
just on a periodic bases,

20
00:01:20.310 --> 00:01:26.591
depending on are you working on
the same feature for a long time?

21
00:01:26.591 --> 00:01:30.267
I think when you work on something,
I don't know,

22
00:01:30.267 --> 00:01:35.570
if you're never gonna look at it again,
but people use it, definitely,

23
00:01:35.570 --> 00:01:40.295
you have to test it when you have
the opportunity to make changes.

24
00:01:40.295 --> 00:01:44.033
If you're working on something regularly,

25
00:01:44.033 --> 00:01:48.554
I just built a feature that
took me maybe a month, and so

26
00:01:48.554 --> 00:01:53.198
I had various aspects of this
epic that I was working on.

27
00:01:53.198 --> 00:01:57.127
I tested at multiple steps of the way.

28
00:01:57.127 --> 00:02:01.778
So I'd say it's kind of a balance
of testing it enough that you

29
00:02:01.778 --> 00:02:07.236
are familiar with it, but
if you're not an accessibility specialist,

30
00:02:07.236 --> 00:02:12.085
you're probably not gonna do it
every single time you sit down.

31
00:02:12.085 --> 00:02:15.994
I would say what we go into in
the next section with debugging,

32
00:02:15.994 --> 00:02:17.506
you would do a lot more.

33
00:02:17.506 --> 00:02:21.829
There's developer tools that we can use
that will give us a pretty good idea of

34
00:02:21.829 --> 00:02:23.971
what the screen reader will read out.

35
00:02:23.971 --> 00:02:27.789
And those are just so much easier
to work in your regular workflow,

36
00:02:27.789 --> 00:02:30.187
that I would say, reach for those first.

37
00:02:33.421 --> 00:02:37.983
&gt;&gt; Is there something like cross browser
testing, but for screen readers?

38
00:02:37.983 --> 00:02:42.553
How much should we put into testing
our work against different screen

39
00:02:42.553 --> 00:02:44.144
reader technologies?

40
00:02:44.144 --> 00:02:50.029
Or is it enough to use something
like the built-in Mac VoiceOver?

41
00:02:50.029 --> 00:02:55.258
&gt;&gt; Yeah, so I do think that testing
it on Windows screen readers

42
00:02:55.258 --> 00:03:00.180
is important,
because depending on your user traffic,

43
00:03:00.180 --> 00:03:04.910
you could let that dictate
some of how you prioritize.

44
00:03:04.910 --> 00:03:09.462
Safari and VoiceOver work the best,
but Safari is kind of a niche browser,

45
00:03:09.462 --> 00:03:10.553
unfortunately.

46
00:03:10.553 --> 00:03:13.579
I mean,
it's not what we're often developing in.

47
00:03:13.579 --> 00:03:17.730
People are probably visiting your
site more with Windows Chrome.

48
00:03:17.730 --> 00:03:22.715
Just a guess, it's probably not true
across the board, but we want to be

49
00:03:22.715 --> 00:03:28.056
testing with screen readers on Windows
because they do work so differently.

50
00:03:28.056 --> 00:03:31.725
VoiceOver is great, I would definitely say

51
00:03:31.725 --> 00:03:35.997
if you could test it regularly,
that'd be great.

52
00:03:35.997 --> 00:03:40.956
I think if you could only pick one
to prioritize, I would honestly

53
00:03:40.956 --> 00:03:46.015
say Windows over VoiceOver just
because of how many people use it.

54
00:03:46.015 --> 00:03:50.178
NVDA on Windows and JAWS,
they work really similarly.

55
00:03:50.178 --> 00:03:55.018
So you could probably just opt for
NVDA, at least as a developer.

56
00:03:55.018 --> 00:03:59.343
I think for accessibility teams
that are more specialized,

57
00:03:59.343 --> 00:04:03.496
they are going to be putting
more resources and more time,

58
00:04:03.496 --> 00:04:07.084
more experts on testing
various screen readers.

59
00:04:07.084 --> 00:04:10.064
Not everyone has an accessibility team, so

60
00:04:10.064 --> 00:04:15.231
I think you have to kind of pick what's
the right balance of testing for you.

61
00:04:15.231 --> 00:04:18.942
I did mention one tool
earlier called Assistiv Labs.

62
00:04:18.942 --> 00:04:24.940
Let's pull that,
it's assistive without the E.

63
00:04:24.940 --> 00:04:29.387
And so thinking of BrowserStack or
something that's kind of

64
00:04:29.387 --> 00:04:34.532
cross-platform to test, that's sort
of the goal of Assistiv Labs so

65
00:04:34.532 --> 00:04:40.308
that you can test with screen readers
even if you're not using that platform.

66
00:04:40.308 --> 00:04:42.933
So I would check that out
kind of in this realm.

67
00:04:42.933 --> 00:04:48.520
It could be a service that could be a good
tool for your team, it's pretty awesome.

68
00:04:50.841 --> 00:04:52.612
Is there any other questions?

69
00:04:54.528 --> 00:04:58.843
&gt;&gt; Does it make sense to
create alt text for galleries?

70
00:04:58.843 --> 00:05:05.344
Thinking something like carousel or
image galleries script.

71
00:05:05.344 --> 00:05:08.335
&gt;&gt; Yes, so we have images.

72
00:05:08.335 --> 00:05:13.218
I mean, if they're worthy of going into
gallery, they should probably have some

73
00:05:13.218 --> 00:05:16.849
alt text, especially if those
images are wrapped in links.

74
00:05:16.849 --> 00:05:21.724
So when we looked at the W3C's alt
decision tree, that link that we pulled up

75
00:05:21.724 --> 00:05:25.549
earlier, they describe all of
these different scenarios so

76
00:05:25.549 --> 00:05:28.107
you don't have to remember all of them.

77
00:05:28.107 --> 00:05:30.350
But if those images are in links,

78
00:05:30.350 --> 00:05:34.848
we need something to give text to
the links that are wrapping them.

79
00:05:34.848 --> 00:05:40.251
But even if they're just plain images in
a gallery, if they're worth looking at,

80
00:05:40.251 --> 00:05:43.968
then they should have some alt
text on them, I would say.

81
00:05:43.968 --> 00:05:49.230
&gt;&gt; Many SEOs say that you
shouldn't leave alt text blank.

82
00:05:49.230 --> 00:05:54.811
Is there another way to have screen
readers ignore the alt texts for

83
00:05:54.811 --> 00:05:56.615
decorative images?

84
00:05:56.615 --> 00:06:01.963
&gt;&gt; Yes, I would be curious
what they were basing that on.

85
00:06:01.963 --> 00:06:06.891
But sometimes we have to work with
the advice that our marketing teams really

86
00:06:06.891 --> 00:06:07.661
insist on.

87
00:06:07.661 --> 00:06:11.775
So leaving the alt attribute blank,
the attribute's present,

88
00:06:11.775 --> 00:06:15.531
but the value is blank,
is the way that we learned earlier.

89
00:06:15.531 --> 00:06:19.924
You could also have a screen
reader skip over an image by

90
00:06:19.924 --> 00:06:22.989
putting a role of presentation on it.

91
00:06:22.989 --> 00:06:27.315
You could even put ARIA
hidden of true on there,

92
00:06:27.315 --> 00:06:30.896
that's a pretty big hammer for a tool.

93
00:06:30.896 --> 00:06:35.230
I would ask the question of like,
do we really need to do that?

94
00:06:35.230 --> 00:06:40.066
Before we reach for ARIA for
things, we wanna make sure that we

95
00:06:40.066 --> 00:06:44.633
absolutely need to because
there could be other aspects.

96
00:06:44.633 --> 00:06:48.311
I don't know, it's a pretty simple one,
so it might not be too complicated.

97
00:06:48.311 --> 00:06:51.987
But anytime you're like,
maybe we could put some ARIA on it,

98
00:06:51.987 --> 00:06:55.041
you should caution, pause,
do we really need to?

99
00:06:55.041 --> 00:07:01.224
[LAUGH] But putting role presentation
on it might be able to skip it.

100
00:07:01.224 --> 00:07:05.920
I guess I would be curious
why we would need to.

101
00:07:05.920 --> 00:07:10.650
&gt;&gt; So is it better to use tools like axe,
WAVE, and Lighthouse, and

102
00:07:10.650 --> 00:07:15.466
maybe even voice control to test
keyboard instead of VoiceOver for

103
00:07:15.466 --> 00:07:20.118
devs that are new to accessibility and
don't really know much?

104
00:07:20.118 --> 00:07:25.845
&gt;&gt; Yeah, so the question was about whether
to use tools like browser extensions,

105
00:07:25.845 --> 00:07:29.704
which we're going to dive
into a lot here in a minute.

106
00:07:29.704 --> 00:07:31.689
I would say those
are a great starting point.

107
00:07:31.689 --> 00:07:37.373
So the screen reader, it's nice to fire
it up, it's nice to know that it exists.

108
00:07:37.373 --> 00:07:42.177
And you have to know kind of what we're
trying to get to with the tooling.

109
00:07:42.177 --> 00:07:47.864
When we're using axe or WAVE,
as you'll see what those are in a minute,

110
00:07:47.864 --> 00:07:51.137
we kinda wanna know what's the purpose.

111
00:07:51.137 --> 00:07:54.738
And so if you have at least
tried out the screen reader,

112
00:07:54.738 --> 00:07:58.887
even if you do use the developer
tools primarily, it's like,

113
00:07:58.887 --> 00:08:03.211
conceptually, you have to
understand what we're trying to do.

114
00:08:03.211 --> 00:08:08.375
And so it's hard to understand that
without ever firing up a screen reader.

115
00:08:08.375 --> 00:08:11.122
But I think if you can get
most of the way there and

116
00:08:11.122 --> 00:08:13.390
prevent some accessibility defects,

117
00:08:13.390 --> 00:08:18.216
as we call them, let's just call it what
it is, they're defects in our projects.

118
00:08:18.216 --> 00:08:22.654
If we can prevent those from
shipping by using developer tools,

119
00:08:22.654 --> 00:08:24.801
great, I think that's fine.

120
00:08:24.801 --> 00:08:28.665
As we do it more and more,
we should fire it up every now and then,

121
00:08:28.665 --> 00:08:30.322
fire up the screen reader.

122
00:08:30.322 --> 00:08:35.283
Finding that right balance of putting
in enough time that it's worthwhile and

123
00:08:35.283 --> 00:08:39.128
useful is something that everyone
is gonna be different at.

124
00:08:39.128 --> 00:08:43.259
I probably do it more than some other
developers do, but yeah, I think,

125
00:08:43.259 --> 00:08:45.293
like I mentioned, conceptually,

126
00:08:45.293 --> 00:08:48.708
we need to understand what it
is that we're trying to make.

127
00:08:48.708 --> 00:08:50.541
What are we adding all this markup for?

128
00:08:50.541 --> 00:08:54.517
And yeah, so that's the goal.

129
00:08:54.517 --> 00:08:59.130
&gt;&gt; And David in chat was just
commenting that on his team,

130
00:08:59.130 --> 00:09:03.442
they use Assistiv Labs for
the team, and then QA and

131
00:09:03.442 --> 00:09:09.080
our lead accessibility engineer
as a Windows and Android device.

132
00:09:09.080 --> 00:09:10.988
&gt;&gt; Cool, awesome.

133
00:09:10.988 --> 00:09:14.161
So people using Assistiv Labs in the wild.

134
00:09:14.161 --> 00:09:18.611
And that is interesting to hear
about how teams are structured.

135
00:09:18.611 --> 00:09:23.544
So for some teams, there are going
to be accessibility specialists,

136
00:09:23.544 --> 00:09:25.725
that is a thing that people do.

137
00:09:25.725 --> 00:09:31.438
It is a little more rare,
especially in today's market.

138
00:09:31.438 --> 00:09:36.242
I mean, I guess regardless of what's going
on in the job market, it's helpful if

139
00:09:36.242 --> 00:09:40.509
a lot of us can sort of carry the weight
of building accessible web pages.

140
00:09:40.509 --> 00:09:43.063
And so we have to verify that somehow.

141
00:09:43.063 --> 00:09:44.564
And in the next section,

142
00:09:44.564 --> 00:09:48.794
I'm gonna show you kind of the workhorse
tools of how you'll do that.

143
00:09:48.794 --> 00:09:53.509
But with or without accessibility
specialists and accessibility teams,

144
00:09:53.509 --> 00:09:57.771
if we all did more [LAUGH] to make
things accessible to prevent totally

145
00:09:57.771 --> 00:10:02.061
inaccessible things from shipping,
I bet we would have an impact.

146
00:10:02.061 --> 00:10:06.346
So that's my goal,
is just to get all of us to participate,

147
00:10:06.346 --> 00:10:08.762
even if we're not experts in it.

