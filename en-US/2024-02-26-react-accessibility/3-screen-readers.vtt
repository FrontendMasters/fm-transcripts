WEBVTT

1
00:00:00.010 --> 00:00:05.063
So screen readers,
they're a huge part of accessibility.

2
00:00:05.063 --> 00:00:08.850
Super cool that we have screen
readers on our devices.

3
00:00:08.850 --> 00:00:12.539
So screen readers are a type
of assistive technology or

4
00:00:12.539 --> 00:00:15.437
AT which I'll abbreviate here and there.

5
00:00:15.437 --> 00:00:19.884
In the world of accessibility,
AT is just mentioned so

6
00:00:19.884 --> 00:00:24.825
much that you should know that
that's what that stands for.

7
00:00:24.825 --> 00:00:27.918
Screen readers allow people
to both use websites and

8
00:00:27.918 --> 00:00:32.005
web applications and contribute
to websites and web applications.

9
00:00:32.005 --> 00:00:35.018
There are blind developers.

10
00:00:35.018 --> 00:00:38.926
There's different ways that we can
use software to consume software and

11
00:00:38.926 --> 00:00:40.085
to create software.

12
00:00:40.085 --> 00:00:44.223
So the whole the whole thing needs
to be accessible if possible.

13
00:00:44.223 --> 00:00:48.647
And for many people with disabilities,
screen readers are essential for

14
00:00:48.647 --> 00:00:50.296
navigating the day to day.

15
00:00:50.296 --> 00:00:53.848
Mobile devices are amazing these days, and

16
00:00:53.848 --> 00:00:59.037
especially the iPhone has a really
good screen reader built in.

17
00:00:59.037 --> 00:01:03.832
Using maps or checking your calendar,
checking your email,

18
00:01:03.832 --> 00:01:09.557
chatting with a friend, taking pictures,
blind people take pictures.

19
00:01:09.557 --> 00:01:13.325
There's all of these things
that we use our devices for,

20
00:01:13.325 --> 00:01:17.484
you can do with a screen reader,
especially on the iPhone, but

21
00:01:17.484 --> 00:01:20.726
Android devices do have
a screen reader as well.

22
00:01:20.726 --> 00:01:26.003
And it's not limited to blind people
either, screen reading technology,

23
00:01:26.003 --> 00:01:29.722
which uses speech-to-text or
text-to-speech.

24
00:01:29.722 --> 00:01:34.138
Yeah, text-to-speech,
I think I wrote that backwards,

25
00:01:34.138 --> 00:01:36.747
can announce what is on the screen.

26
00:01:36.747 --> 00:01:40.676
And that can be useful for
people who maybe have

27
00:01:40.676 --> 00:01:45.017
cognitive impairments or
you just need more help.

28
00:01:45.017 --> 00:01:49.846
I've even used a browser extension,
I think it's called Read Aloud.

29
00:01:49.846 --> 00:01:54.740
If I'm just feeling really distracted and
I have to read like a legal document or

30
00:01:54.740 --> 00:01:57.735
something, I will totally
use a screen reader so

31
00:01:57.735 --> 00:01:59.941
that I just can't stop reading it.

32
00:01:59.941 --> 00:02:02.901
It'll read it to me.

33
00:02:02.901 --> 00:02:07.520
And I can see the screen, but it's still
helpful to have it read aloud sometimes.

34
00:02:07.520 --> 00:02:12.498
And so, we should consider that not
all screen reader users are blind, or

35
00:02:12.498 --> 00:02:13.797
even fully blind.

36
00:02:13.797 --> 00:02:17.079
Some people use the screen reader
even though they can see the screen,

37
00:02:17.079 --> 00:02:18.140
they're low vision.

38
00:02:18.140 --> 00:02:21.900
I think some of the techniques
that I had seen for

39
00:02:21.900 --> 00:02:26.883
screen readers, just no one can
ever see them like skip links.

40
00:02:26.883 --> 00:02:30.403
There's a skip link I just
fixed the other day that,

41
00:02:30.403 --> 00:02:34.727
no one can see a skip link,
it's for screen readers users only.

42
00:02:34.727 --> 00:02:40.204
And I think that's a misconception
that I hope to clear up that we should

43
00:02:40.204 --> 00:02:45.239
make keyboard interfaces that
screen reader users can also use.

44
00:02:45.239 --> 00:02:49.730
So I have a graphic here
of using VoiceOver for Mac,

45
00:02:49.730 --> 00:02:52.768
just navigating a photo website.

46
00:02:52.768 --> 00:02:56.893
And so we can see the image of the cat,
it's wrapped to the link, so

47
00:02:56.893 --> 00:03:00.892
the screen reader will announce
what type of element we're on.

48
00:03:00.892 --> 00:03:03.429
And if there is content inside of it,
it will tell us.

49
00:03:03.429 --> 00:03:05.550
So this is an image.

50
00:03:05.550 --> 00:03:11.290
It was a stock photo of a cat, so it says,
free cat, feline, photo, and picture.

51
00:03:11.290 --> 00:03:15.707
Maybe highlighting the alt text of
this could use a little bit of help.

52
00:03:15.707 --> 00:03:18.607
Like, I don't know why it says photo and
picture.

53
00:03:18.607 --> 00:03:22.741
But I think sometimes capturing
things how they were created,

54
00:03:22.741 --> 00:03:27.733
seeing what it sounds like in a screen
reader can be really helpful cuz you get

55
00:03:27.733 --> 00:03:32.491
more context of, that's why I
shouldn't write the word photo in my

56
00:03:32.491 --> 00:03:34.844
alt text cuz it already is an image.

57
00:03:34.844 --> 00:03:37.835
In this case, I think they had photo and
picture and image.

58
00:03:37.835 --> 00:03:40.791
So we have to test it sometimes and
figure out, well,

59
00:03:40.791 --> 00:03:43.169
what's gonna make sense in that context?

60
00:03:46.419 --> 00:03:49.432
So screen readers and how they work.

61
00:03:49.432 --> 00:03:54.525
Screen readers are both software and
hardware, a lot of software

62
00:03:54.525 --> 00:03:59.444
that help people interact with
the computer or mobile device.

63
00:03:59.444 --> 00:04:04.677
They convert text and graphics on the
screen to speech or even braille output.

64
00:04:04.677 --> 00:04:09.434
So there's tactile refreshable braille
that people can use as well, so it's

65
00:04:09.434 --> 00:04:14.348
like reading with your fingertips instead
of your eyes and that's pretty cool.

66
00:04:14.348 --> 00:04:17.209
But that leverages some
of these same APIs and

67
00:04:17.209 --> 00:04:21.590
a lot of the same accessibility
techniques that we'll learn about.

68
00:04:21.590 --> 00:04:23.807
The iPhone, as I mentioned,

69
00:04:23.807 --> 00:04:28.608
has an amazing screen reader built
in called VoiceOver for iOS.

70
00:04:28.608 --> 00:04:31.003
Mac computers have
VoiceOver built in as well.

71
00:04:31.003 --> 00:04:36.116
It is slightly different than the version
on iOS, just for platform reasons.

72
00:04:36.116 --> 00:04:41.498
On Windows, users can take advantage
of the built-in screen reader,

73
00:04:41.498 --> 00:04:46.984
Narrator, or you can install
third-party software like NVDA or JAWS.

74
00:04:46.984 --> 00:04:50.708
I like NVDA, it's free and open source and

75
00:04:50.708 --> 00:04:56.824
I have a virtual machine on my computer
that I can run testing on my Mac.

76
00:04:56.824 --> 00:04:59.205
So when users turn on the device,

77
00:04:59.205 --> 00:05:04.406
the screen reader will take the input
using the platform applications.

78
00:05:04.406 --> 00:05:08.470
So things like the settings app, you could
read that aloud in your screen reader.

79
00:05:08.470 --> 00:05:13.224
You can have it read out the web
browser or YouTube on your iPhone or

80
00:05:13.224 --> 00:05:17.381
whatever application,
this isn't limited to the web.

81
00:05:17.381 --> 00:05:20.475
It's kind of intuitive when
you think about it, but

82
00:05:20.475 --> 00:05:22.879
just kind of getting to the basics here.

83
00:05:22.879 --> 00:05:26.758
And so it'll render that output aloud, or

84
00:05:26.758 --> 00:05:30.861
using the tactile device
if the user has one.

85
00:05:30.861 --> 00:05:35.407
And it is pretty amazing that
our technologies work that way.

86
00:05:35.407 --> 00:05:40.530
I have some details in here, there's
a link to read more about screen readers.

87
00:05:40.530 --> 00:05:47.243
There are some surveys from a group called
WebAIM, it's Web Accessibility in Mind.

88
00:05:47.243 --> 00:05:48.681
And, do I have that link in here?

89
00:05:48.681 --> 00:05:52.389
I'm sure there's a link in here somewhere,
but I'll show it to you just in case.

90
00:05:55.176 --> 00:06:00.051
So WebAIM is a group from Utah,
and they're amazing.

91
00:06:00.051 --> 00:06:05.019
They put out these surveys every
couple of years about how people

92
00:06:05.019 --> 00:06:10.271
report voluntarily using different
screen readers and browsers.

93
00:06:10.271 --> 00:06:16.521
And this is sort of our gold standard in
terms of what we can reference for data.

94
00:06:16.521 --> 00:06:20.271
Cuz I mentioned we don't track screen
reader users for privacy reasons.

95
00:06:20.271 --> 00:06:25.071
But we do have the survey results
that are shared widely every time

96
00:06:25.071 --> 00:06:28.220
they open up the survey for participants.

97
00:06:28.220 --> 00:06:32.678
It is a little bit biased in that
it's heavy on North America for

98
00:06:32.678 --> 00:06:35.294
who's contributing to the survey.

99
00:06:35.294 --> 00:06:39.841
It's kind of technology
professionals mostly, but

100
00:06:39.841 --> 00:06:44.599
it's still something,
it's really helpful to have.

101
00:06:44.599 --> 00:06:49.125
So if we scroll down here, we can see
they include mobile screen readers,

102
00:06:49.125 --> 00:06:51.764
screen reader and browser combinations.

103
00:06:51.764 --> 00:06:55.721
So if you're on Windows,
I mentioned analytics a little bit,

104
00:06:55.721 --> 00:07:00.649
which we can't track screen readers
directly, but we can put analytics on our

105
00:07:00.649 --> 00:07:04.255
sites to see which browsers and
platforms people are on.

106
00:07:04.255 --> 00:07:07.816
So say you have a heavy Windows user base.

107
00:07:07.816 --> 00:07:12.310
JAWS and
NVDA are the leading screen readers for,

108
00:07:12.310 --> 00:07:15.306
it looks like Chrome on Windows.

109
00:07:15.306 --> 00:07:20.920
And so you can learn details about how
people actually use these combinations

110
00:07:20.920 --> 00:07:25.684
on here and that can help you
narrow down what you're gonna test.

111
00:07:25.684 --> 00:07:26.766
We can't test everything.

112
00:07:26.766 --> 00:07:30.258
I'm not gonna go fire up
every single screen reader,

113
00:07:30.258 --> 00:07:32.363
I'm gonna have to prioritize.

114
00:07:32.363 --> 00:07:37.329
And sometimes you don't have the bandwidth
to test as much as you would like, but

115
00:07:37.329 --> 00:07:39.239
that's why we use standards.

116
00:07:39.239 --> 00:07:46.302
And why we try to get the basics in so
it will work reasonably well most places.

117
00:07:46.302 --> 00:07:49.178
And then if we have a blocking issue or
something,

118
00:07:49.178 --> 00:07:53.836
some unique combination that our customers
are telling us is really important,

119
00:07:53.836 --> 00:07:57.753
we can respond to that particular
feedback and make improvements.

120
00:08:00.294 --> 00:08:05.848
So a big piece of how this works,
depending on what platform you're on,

121
00:08:05.848 --> 00:08:09.229
so I mentioned Windows and
iOS and Android.

122
00:08:09.229 --> 00:08:13.888
These platforms come with
their own accessibility APIs.

123
00:08:13.888 --> 00:08:15.456
And this gets pretty geeky.

124
00:08:15.456 --> 00:08:16.989
And I like it.

125
00:08:16.989 --> 00:08:22.858
[LAUGH] So, there is an awesome
link in here that I included.

126
00:08:22.858 --> 00:08:28.662
It's kind of been archived and
kept around of how browsers work.

127
00:08:28.662 --> 00:08:33.094
It's fascinating, browsers are very
sophisticated applications.

128
00:08:33.094 --> 00:08:35.859
They clean up a lot of our markup messes.

129
00:08:35.859 --> 00:08:42.476
And so Browsers and our platforms,
so MacOS in the case of my computer,

130
00:08:42.476 --> 00:08:47.551
or iOS or whatever platform
you're on those API's and

131
00:08:47.551 --> 00:08:54.084
the browsers work together to
basically make our rendered webpages.

132
00:08:54.084 --> 00:08:57.327
The accessibility information that we get

133
00:08:57.327 --> 00:09:02.108
out of those is harnessed using
platform accessibility APIs.

134
00:09:02.108 --> 00:09:06.779
And so I mention these because there are
subtle differences in different platforms.

135
00:09:06.779 --> 00:09:11.211
If you test a user interface and
a screen reader on iOS, and

136
00:09:11.211 --> 00:09:16.280
then you go test the same page,
it's a responsive page probably,

137
00:09:16.280 --> 00:09:20.646
you go to test that same one in NVDA and
Chrome on Windows.

138
00:09:20.646 --> 00:09:22.649
It's not gonna be exactly the same.

139
00:09:22.649 --> 00:09:26.206
So it's like the accessibility
version of Pixel Perfection.

140
00:09:26.206 --> 00:09:28.811
There's going to be slight differences,
we have to embrace them.

141
00:09:28.811 --> 00:09:32.582
Just know that those APIs are what's
gonna generate those changes.

142
00:09:32.582 --> 00:09:37.298
It's not you, you're not losing your mind,
they really are different.

143
00:09:37.298 --> 00:09:43.506
Even from MacOS to iOS, so
that's something to remember.

144
00:09:43.506 --> 00:09:46.721
And an example here is
the ARIA has pop-up state.

145
00:09:46.721 --> 00:09:51.647
It is an attribute that you can
communicate like a custom drop-down or

146
00:09:51.647 --> 00:09:52.571
something.

147
00:09:52.571 --> 00:09:59.338
It has pretty wildly different results
depending on what platform you're on,

148
00:09:59.338 --> 00:10:04.498
and we have to work with that,
just something to be aware of.

149
00:10:04.498 --> 00:10:06.404
So another piece of this,

150
00:10:06.404 --> 00:10:10.747
part of what makes this all
work is the accessibility tree.

151
00:10:10.747 --> 00:10:16.785
And this is a structure kind of parallel
to the DOM or the document object model.

152
00:10:16.785 --> 00:10:21.629
This is what all of the accessibility
information on a page gets put into

153
00:10:21.629 --> 00:10:23.981
its own tree, its own structure.

154
00:10:23.981 --> 00:10:28.695
And screen readers and other assistive
technologies leverage that structure.

155
00:10:28.695 --> 00:10:34.164
Some screen readers also look at the DOM,
I know JAWS does on Windows.

156
00:10:34.164 --> 00:10:40.031
Historically, they would do that to try
and work around the lacking accessibility.

157
00:10:40.031 --> 00:10:42.640
But the accessibility tree is a thing.

158
00:10:42.640 --> 00:10:48.385
You will see it as we get into debugging,
and I'm doing a workshop on enterprise

159
00:10:48.385 --> 00:10:53.554
accessibility that will dive way
deeper into the accessibility tree.

160
00:10:53.554 --> 00:11:00.667
So if you see that, you'll see it when we
debug as I mentioned, that's what that is.

161
00:11:00.667 --> 00:11:02.624
So we did look at WebAIM.

162
00:11:02.624 --> 00:11:06.643
How to prioritize, because there's so
many combinations,

163
00:11:06.643 --> 00:11:08.971
you can't possibly test them all.

164
00:11:08.971 --> 00:11:13.713
So work with your teams to identify
which browsers you need to test and

165
00:11:13.713 --> 00:11:18.377
then reference WebAIM's screen
reader survey to know which screen

166
00:11:18.377 --> 00:11:21.501
readers are the most popular combinations.

167
00:11:21.501 --> 00:11:25.794
On a Mac VoiceOver works
the best with Safari.

168
00:11:25.794 --> 00:11:30.459
Safari is not usually prioritized
in most Mac development

169
00:11:30.459 --> 00:11:33.798
environments that I've ever worked in.

170
00:11:33.798 --> 00:11:37.718
So it's kind of ends up being
a special thing just to test so

171
00:11:37.718 --> 00:11:39.562
that VoiceOver will work.

172
00:11:39.562 --> 00:11:43.170
So maybe look at your site analytics,
if you have them to see

173
00:11:43.170 --> 00:11:48.023
if people are really coming to the site
in VoiceOver, it will work with Chrome.

174
00:11:48.023 --> 00:11:52.272
You don't want to spend your time
chasing down bugs in Chrome and

175
00:11:52.272 --> 00:11:54.403
VoiceOver that work in Safari.

176
00:11:54.403 --> 00:11:59.295
Talk about how you spend your time,
you have to make those judgment calls and

177
00:11:59.295 --> 00:12:03.730
if it takes a little bit of time to
get Safari to fix some display bugs so

178
00:12:03.730 --> 00:12:06.582
that it's not like full of broken windows.

179
00:12:06.582 --> 00:12:09.702
I don't know if you know about
broken window theory, but

180
00:12:09.702 --> 00:12:13.088
once there's a broken window,
people will just abandon it.

181
00:12:13.088 --> 00:12:15.723
So if Safari looks janky
no one's gonna use it.

182
00:12:15.723 --> 00:12:20.775
But if we kinda keep up on it,
maybe it'll get used more and tested more.

183
00:12:20.775 --> 00:12:25.666
Because you could save yourself
some time trying to, quote,

184
00:12:25.666 --> 00:12:31.231
fix things in VoiceOver and
Chrome when they just work fine in Safari.

185
00:12:31.231 --> 00:12:34.187
That's the thing but Windows, also,

186
00:12:34.187 --> 00:12:39.483
if you have any site traffic on Windows,
which I mean, who doesn't?

187
00:12:39.483 --> 00:12:43.035
I think a lot of developers
like I see all Macs in here.

188
00:12:43.035 --> 00:12:47.690
[LAUGH] But our customers and
users are probably visiting on Windows.

189
00:12:47.690 --> 00:12:52.114
So we should have a process to
make sure that we're testing and

190
00:12:52.114 --> 00:12:54.595
using a virtual machine is great.

191
00:12:54.595 --> 00:12:59.417
There's also a service called Assistive
Labs that you could check out to run

192
00:12:59.417 --> 00:13:04.334
screen readers in the cloud, on platforms
that you don't necessarily use.

193
00:13:04.334 --> 00:13:10.309
But I do think the VM or
virtual machine route is pretty great.

194
00:13:10.309 --> 00:13:15.736
And I have some more links here
about how the browsers work.

195
00:13:15.736 --> 00:13:21.193
My favorite Mozilla documentation for
various topics.

196
00:13:21.193 --> 00:13:25.285
Yeah, so let's talk about how
to enable these screen readers.

197
00:13:25.285 --> 00:13:27.783
So this page is full of cheat sheets and

198
00:13:27.783 --> 00:13:32.716
things that you would want to reference
when you were in the act of testing.

199
00:13:32.716 --> 00:13:35.148
Starting with VoiceOver for Mac.

200
00:13:35.148 --> 00:13:38.310
And this is something I do all
the time because I'm not a daily

201
00:13:38.310 --> 00:13:39.430
screen reader user.

202
00:13:39.430 --> 00:13:46.975
You can watch me try to get better at
it and I reference these documents.

203
00:13:46.975 --> 00:13:52.495
So this one is from Deque University,
VoiceOver Keyboard Shortcuts on a Mac.

204
00:13:52.495 --> 00:13:55.866
I've even had this printer
version on my workstation so

205
00:13:55.866 --> 00:13:59.103
I could reference it when
I'm doing a lot of testing.

206
00:13:59.103 --> 00:14:04.341
But it is totally understood that
you will have to brush up on these.

207
00:14:04.341 --> 00:14:08.731
So VoiceOver, kind of, 10,000 foot view,

208
00:14:08.731 --> 00:14:14.346
it uses combinations of keys,
starting with the VoiceOver key,

209
00:14:14.346 --> 00:14:20.495
which they say VO but it's actually
control and option held together.

210
00:14:20.495 --> 00:14:25.278
So those modifier keys, you combine
them with a bunch of other keys,

211
00:14:25.278 --> 00:14:28.010
that's a lot of commands to remember.

212
00:14:28.010 --> 00:14:30.983
So cheat sheet, you can cheat,
you can reference.

213
00:14:30.983 --> 00:14:35.518
I do, everyone does, I'd rather have
to look it up and know what I'm doing.

214
00:14:35.518 --> 00:14:40.690
Than open Jira Issues or
something when it's just operator error.

215
00:14:40.690 --> 00:14:45.104
That's a big part of getting
into accessibility testing is

216
00:14:45.104 --> 00:14:49.972
sometimes the testers,
they're doing their best, they care.

217
00:14:49.972 --> 00:14:53.756
If you're not a daily screen reader user,
something might not even be an issue.

218
00:14:53.756 --> 00:14:57.942
Or maybe it is an issue and you missed it,
so there's a bit of a learning curve here.

219
00:14:57.942 --> 00:15:00.479
That is expected.

220
00:15:00.479 --> 00:15:02.561
So I'd bookmark that one.

221
00:15:02.561 --> 00:15:07.976
There's also similar cheat sheets for
iOS cuz iOS is definitely

222
00:15:07.976 --> 00:15:13.399
a platform you should be testing
if you have any mobile traffic.

223
00:15:13.399 --> 00:15:18.703
It's pretty limited to Safari on IOS,
Apple and Webkit have notoriously locked

224
00:15:18.703 --> 00:15:23.626
down the browser engine, so you don't
have too much that you have to test.

225
00:15:23.626 --> 00:15:27.811
I wouldn't test Mobile Chrome or
anything, cuz it's the same.

226
00:15:27.811 --> 00:15:33.095
But VoiceOver and Safari on IOS,
if you have any mobile traffic,

227
00:15:33.095 --> 00:15:37.721
definitely worth trying,
cuz it is a little different.

228
00:15:37.721 --> 00:15:42.248
So, and then similarly, for Windows,

229
00:15:42.248 --> 00:15:46.518
we have some details on JAWS and NVDA.

230
00:15:46.518 --> 00:15:48.934
They work slightly differently.

231
00:15:48.934 --> 00:15:52.737
And so with VoiceOver,
that 10,000 for view,

232
00:15:52.737 --> 00:15:57.566
it's It's like jumbles of keys,
as I affectionately like to say.

233
00:15:57.566 --> 00:15:59.934
It's a lot of combinations of keys.

234
00:15:59.934 --> 00:16:04.862
Whereas with NVDA and JAWS,
they work very similarly.

235
00:16:04.862 --> 00:16:09.533
There is a totally different
paradigm that you don't have to

236
00:16:09.533 --> 00:16:13.387
hold as many keys just
because of the way it works.

237
00:16:13.387 --> 00:16:17.725
And this is something we'll get into in
the enterprise accessibility workshop

238
00:16:17.725 --> 00:16:18.444
quite a bit.

239
00:16:18.444 --> 00:16:23.695
The sort of a gist of it is that there
are different modes that depending

240
00:16:23.695 --> 00:16:28.679
on what type of element you're on,
whether it's a form control or

241
00:16:28.679 --> 00:16:32.690
a paragraph,
will change what key commands do what.

242
00:16:32.690 --> 00:16:38.229
And so it's a little bit
simpler sometimes to use.

243
00:16:38.229 --> 00:16:42.122
You just turn it on and
tab around, navigate.

244
00:16:42.122 --> 00:16:47.867
We are going to try using
VoiceOver as a bit of a demo.

245
00:16:47.867 --> 00:16:51.281
We could fire up NVDA, I do have it.

246
00:16:51.281 --> 00:16:52.776
We'll see if time allows,

247
00:16:52.776 --> 00:16:57.071
but just be aware that it's not gonna
work exactly the same as VoiceOver does.

248
00:16:57.071 --> 00:16:58.142
And then Android.

249
00:16:58.142 --> 00:17:03.873
So Android, their screen reader
historically has been called TalkBack.

250
00:17:03.873 --> 00:17:07.549
I think they're just calling
it Android Accessibility now.

251
00:17:07.549 --> 00:17:10.445
It's used by so many people.

252
00:17:10.445 --> 00:17:14.490
These devices are so popular that of
course, there's people that use it.

253
00:17:14.490 --> 00:17:18.989
It's not as well-loved,
not as well-tested, I will say.

254
00:17:18.989 --> 00:17:23.002
It's probably the one that gets,
if iOS accessibility gets missed,

255
00:17:23.002 --> 00:17:26.411
Android accessibility is
definitely going to get missed.

256
00:17:26.411 --> 00:17:32.095
But if you have any Android users,
it is worth checking out.

257
00:17:32.095 --> 00:17:35.896
I included some tips for
testing with Android from Google.

258
00:17:35.896 --> 00:17:40.421
There's also a cheat sheet for
using the TalkBack screen reader.

259
00:17:40.421 --> 00:17:44.261
And there's some mobile testing
tools that could be helpful.

260
00:17:44.261 --> 00:17:49.282
There's ones from Deque and
from events there startup.

261
00:17:49.282 --> 00:17:52.103
So yeah, lots of different screen readers.

