WEBVTT

1
00:00:00.160 --> 00:00:02.024
Okay, so working with teams.

2
00:00:02.024 --> 00:00:05.243
It's one thing if you're working
by yourself on a project,

3
00:00:05.243 --> 00:00:09.471
your commit messages and things don't have
to be [LAUGH] that useful for teams and

4
00:00:09.471 --> 00:00:11.637
you can make all the decisions you want.

5
00:00:11.637 --> 00:00:13.820
But when you're working with other people,

6
00:00:13.820 --> 00:00:17.854
there's some things you might wanna be
aware of with team concerns and processes.

7
00:00:17.854 --> 00:00:21.668
So I have some ideas around
how to make this a team sport.

8
00:00:21.668 --> 00:00:25.201
Because that's how we're gonna
make the biggest impact,

9
00:00:25.201 --> 00:00:27.680
as many of us are chipping in as possible.

10
00:00:27.680 --> 00:00:32.310
So, sort of the reality of some of
the accessibility efforts that we put in

11
00:00:32.310 --> 00:00:34.938
are that we have to have accountability.

12
00:00:34.938 --> 00:00:39.144
We have to actually make
it a requirement and

13
00:00:39.144 --> 00:00:42.902
make it part of the definition of done.

14
00:00:42.902 --> 00:00:47.945
And so you have to kind of, get your
leadership team on board if you can so

15
00:00:47.945 --> 00:00:50.989
that you have time to
actually spend on it.

16
00:00:50.989 --> 00:00:55.549
I mean, this is gonna be
a negotiation in some cases where

17
00:00:55.549 --> 00:01:00.402
it might have to get worked on
after a breaking change ships.

18
00:01:00.402 --> 00:01:03.150
Like you might need to decouple fixes.

19
00:01:03.150 --> 00:01:08.109
I had this come up the other day where I
really wanted to rip out a component that

20
00:01:08.109 --> 00:01:12.079
was super inaccessible, but
there was a display bug that I was

21
00:01:12.079 --> 00:01:15.533
trying to like get the time,
the cycles to work on it.

22
00:01:15.533 --> 00:01:19.353
I was having issues and so
I'm gonna have to decouple things,

23
00:01:19.353 --> 00:01:23.833
like fix up the display issue and
then come back in, in the next sprint and

24
00:01:23.833 --> 00:01:25.610
do the accessibility work.

25
00:01:25.610 --> 00:01:30.542
So sometimes you don't get to just
rip it all out and do it, you have to

26
00:01:30.542 --> 00:01:36.001
negotiate how to make it part of a
definition of done that people agree with.

27
00:01:36.001 --> 00:01:41.093
Yeah, it's part of the reality
of doing this stuff sometimes.

28
00:01:41.093 --> 00:01:43.298
And so part of this also is like,

29
00:01:43.298 --> 00:01:48.219
who takes responsibility if something
is inaccessible gets shipped?

30
00:01:48.219 --> 00:01:52.801
Like we heard a story
earlier about a lawsuit.

31
00:01:52.801 --> 00:01:57.912
Those are super common and so sometimes
those happen after things have shipped

32
00:01:57.912 --> 00:02:02.558
that it's not a surprise at all because
you knew it was inaccessible and

33
00:02:02.558 --> 00:02:04.895
you tried to do something about it.

34
00:02:04.895 --> 00:02:07.692
it's like, well,
who's held accountable for it?

35
00:02:07.692 --> 00:02:11.551
It really should be the decision
makers that said, nope,

36
00:02:11.551 --> 00:02:16.432
we're gonna ship it, I hear you,
we're not gonna tackle it this cycle,

37
00:02:16.432 --> 00:02:19.138
that person has to be held accountable.

38
00:02:19.138 --> 00:02:22.418
So these things will come up,
it's not always pretty, but

39
00:02:22.418 --> 00:02:26.746
we want to document things as much as
possible, like document your findings,

40
00:02:26.746 --> 00:02:28.662
find what you tested at that time.

41
00:02:28.662 --> 00:02:30.753
If you have to put it down, but

42
00:02:30.753 --> 00:02:35.108
you've done some of the preliminary work,
keep your code and

43
00:02:35.108 --> 00:02:39.736
a branch, have some documentation of,
what was the state of it.

44
00:02:39.736 --> 00:02:42.244
So that if you do have to come back to it,

45
00:02:42.244 --> 00:02:46.502
at least you're not totally starting over,
that can be helpful.

46
00:02:46.502 --> 00:02:51.004
When you're doing code reviews,
this is a really great time to try and

47
00:02:51.004 --> 00:02:56.059
get accessibility addressed in the moment
cuz we don't wanna add to our debt.

48
00:02:56.059 --> 00:03:00.676
I just accrued some accessibility debt
at my own job this week, it happens.

49
00:03:00.676 --> 00:03:05.029
But when you're reviewing people's code,
that might be the time for

50
00:03:05.029 --> 00:03:09.749
people to make some changes and hopefully
you can get stuff in at that time and

51
00:03:09.749 --> 00:03:11.475
not have to come back to it.

52
00:03:11.475 --> 00:03:15.995
There's sort of an art to how
you provide this feedback,

53
00:03:15.995 --> 00:03:19.290
cuz we want people to
want to work with us,

54
00:03:19.290 --> 00:03:23.642
even though we're the bearers
of bad news sometimes.

55
00:03:23.642 --> 00:03:29.017
We don't wanna make people feel bad
cuz we want them to fix their stuff,

56
00:03:29.017 --> 00:03:30.910
so we have to be tactful.

57
00:03:30.910 --> 00:03:35.831
[LAUGH] But surface it at the right time,
like, hey, we need to make this click

58
00:03:35.831 --> 00:03:40.245
event, put it on a real button so
that a keyboard user can operate it.

59
00:03:40.245 --> 00:03:45.523
That's one I see all the time,
where there's click events on divs,

60
00:03:45.523 --> 00:03:50.255
and if they can't fix it right then,
then open up an issue that

61
00:03:50.255 --> 00:03:54.998
will get put on the backlog and
make some good trouble over it.

62
00:03:54.998 --> 00:03:58.653
We don't wanna be like, we're going to be
squeaky wheel about it in the way that you

63
00:03:58.653 --> 00:03:59.973
can in your own work context.

64
00:03:59.973 --> 00:04:04.765
But we want to make sure that things
don't just languish in the backlog and

65
00:04:04.765 --> 00:04:09.247
never get done, so you have to kinda
like find that right balance of,

66
00:04:09.247 --> 00:04:11.285
is this the right time to do it?

67
00:04:11.285 --> 00:04:14.651
I understand the team's
under a lot of pressure,

68
00:04:14.651 --> 00:04:18.500
how are we actually gonna make
sure that this gets fixed so

69
00:04:18.500 --> 00:04:23.645
it doesn't just get shipped inaccessibly
and go out like that way forever?

70
00:04:23.645 --> 00:04:24.460
Code reviews.

71
00:04:24.460 --> 00:04:28.305
And then use consistent tooling and
processes.

72
00:04:28.305 --> 00:04:31.663
If you're all using the AXE extension,

73
00:04:31.663 --> 00:04:37.700
pay attention to what version it's on,
make sure you're all updated.

74
00:04:37.700 --> 00:04:41.715
Or in your issues if you have
AXE results or something,

75
00:04:41.715 --> 00:04:47.040
maybe document what version the API
was on, that can be helpful to know so

76
00:04:47.040 --> 00:04:52.398
that if something changes, you have
a track record of how you tested it.

77
00:04:52.398 --> 00:04:56.992
Even just how you tested it,
tab into the page with a keyboard,

78
00:04:56.992 --> 00:05:02.538
turn on the ax extension, whatever
steps you took to reproduce that issue,

79
00:05:02.538 --> 00:05:05.932
put it in your issues,
in your pull requests.

80
00:05:05.932 --> 00:05:11.158
I find people are very light on
documentation [LAUGH] in PRs,

81
00:05:11.158 --> 00:05:16.176
or pull requests, or issues,
so just sharing what steps

82
00:05:16.176 --> 00:05:21.525
to take to reproduce an issue
in general can be super useful.

83
00:05:21.525 --> 00:05:26.178
And there's a whole,
as you get into accessibility maturity,

84
00:05:26.178 --> 00:05:32.210
companies that are much more serious about
it and have to have more attention on it,

85
00:05:32.210 --> 00:05:37.380
there are tons of tools by all of
the major accessibility companies that

86
00:05:37.380 --> 00:05:42.402
you can sort of, upscale into some
of those paid tools if you need to.

87
00:05:42.402 --> 00:05:43.866
Question.

88
00:05:43.866 --> 00:05:48.571
&gt;&gt; How much are we asked to estimate
when factoring in accessibility?

89
00:05:48.571 --> 00:05:53.023
What percentage of additional
time should we consider adding?

90
00:05:53.023 --> 00:05:54.506
&gt;&gt; Good question.

91
00:05:54.506 --> 00:06:01.332
The figure that I heard working with
a very large tech company was around 30%.

92
00:06:01.332 --> 00:06:05.362
And I think they were being kind of
generous about it just because they're

93
00:06:05.362 --> 00:06:07.777
a big company, it's a slow-moving ship.

94
00:06:07.777 --> 00:06:11.222
There's always delays and
cost overruns in general, [LAUGH] so

95
00:06:11.222 --> 00:06:15.328
I think they were trying to be,
I don't know, sort of forgiving about it.

96
00:06:15.328 --> 00:06:17.596
But that could be on the high end,

97
00:06:17.596 --> 00:06:21.415
like 30% of your time
throughout the whole process.

98
00:06:21.415 --> 00:06:26.094
I mean, it does cost money to do it,
to cost time and money.

99
00:06:26.094 --> 00:06:30.564
I think as developers, there are some
easy wins that we can do that should

100
00:06:30.564 --> 00:06:33.347
just be part of our regular flow and
I don't,

101
00:06:33.347 --> 00:06:38.183
30% of our time that seems a little bit
high if you're doing it all the time,

102
00:06:38.183 --> 00:06:42.097
just as a matter of course, but
it's kind of hard to quantify.

103
00:06:42.097 --> 00:06:45.417
I will say that the cost of not
doing it would be way more.

104
00:06:45.417 --> 00:06:50.152
Like if you have to rebuild your whole
site, how much is that gonna cost?

105
00:06:50.152 --> 00:06:52.513
Or the legal risk or the lost revenue?

106
00:06:52.513 --> 00:06:58.856
So, some of that padded estimates up front
could be like you're trading that time for

107
00:06:58.856 --> 00:07:03.878
not having to redo everything later or
missing out on a huge contract

108
00:07:03.878 --> 00:07:08.219
because your competitor's accessible and
you aren't.

109
00:07:08.219 --> 00:07:13.804
So, kind of put it that way, would you
rather plan it a little bit upfront and

110
00:07:13.804 --> 00:07:17.469
have it go more smoothly or
just go cowboy style and

111
00:07:17.469 --> 00:07:21.343
we're just gonna take a chance and
not do anything.

112
00:07:21.343 --> 00:07:24.396
Unfortunately, I think that's
what a lot of companies do.

113
00:07:24.396 --> 00:07:28.293
But I think there's some easy
wins that we can work in,

114
00:07:28.293 --> 00:07:32.971
even if our broader organizations
aren't quite up to speed yet.

115
00:07:32.971 --> 00:07:36.956
I mean, I'm the sort of like just
do it and ask for forgiveness and

116
00:07:36.956 --> 00:07:40.444
not permission type of person,
but this does take time.

117
00:07:40.444 --> 00:07:42.462
Work is work,
it does take time and effort.

118
00:07:42.462 --> 00:07:43.758
So, we have to find that
balance that works best for us.

119
00:07:47.684 --> 00:07:48.868
Yes.

120
00:07:48.868 --> 00:07:49.704
&gt;&gt; On the team,

121
00:07:49.704 --> 00:07:54.416
I built something that disabled the cursor
on local host on Wednesdays and

122
00:07:54.416 --> 00:07:58.684
it frustrated a lot of people, but
we found and fixed a ton of bugs.

123
00:07:58.684 --> 00:08:02.257
&gt;&gt; Nice, round of applause for that.

124
00:08:02.257 --> 00:08:04.149
[LAUGH] That's amazing.

125
00:08:04.149 --> 00:08:07.725
I actually have a tool that I wrote that's
kind of similar called No Mouse Days.

126
00:08:10.589 --> 00:08:16.136
We might have it in the slide somewhere,
but there is a tool that basically

127
00:08:16.136 --> 00:08:22.221
is that same idea of having a package that
would automatically hide your cursor,

128
00:08:22.221 --> 00:08:27.679
like this will hide it in CSS in any
site that this package is included in,

129
00:08:27.679 --> 00:08:32.351
if you configure it that way,
but yeah, it's frustrating.

130
00:08:32.351 --> 00:08:37.347
But sometimes you have to take desperate
measures to really get through, so

131
00:08:37.347 --> 00:08:38.603
that's amazing.

132
00:08:38.603 --> 00:08:40.455
Good job [LAUGH].

133
00:08:42.324 --> 00:08:47.351
Okay, so going beyond compliance,
accessibility compliance,

134
00:08:47.351 --> 00:08:50.491
and I have a meme from
Austin Powers of Dr.

135
00:08:50.491 --> 00:08:54.279
Evil going our site is
accessibility compliant.

136
00:08:54.279 --> 00:08:59.281
And I can't tell you how often
I see this as a line item and

137
00:08:59.281 --> 00:09:03.326
a doc of like,
we aim to meet WCAG 2.2 AA and

138
00:09:03.326 --> 00:09:08.459
then there's no literally no
process to actually do it.

139
00:09:08.459 --> 00:09:11.117
Like click events on divs that ship and

140
00:09:11.117 --> 00:09:15.034
I'm the only one in a PR review
going can we change that?

141
00:09:15.034 --> 00:09:20.362
You might be the only one even though it's
like literally in your documentation.

142
00:09:20.362 --> 00:09:23.110
So saying something is compliant and

143
00:09:23.110 --> 00:09:28.076
actually making it accessible
are two totally different things.

144
00:09:28.076 --> 00:09:30.658
And you can say it's compliant,
but it probably isn't.

145
00:09:30.658 --> 00:09:32.842
For one, it might have been for

146
00:09:32.842 --> 00:09:37.640
a short period of time before you
made changes and shipped it again.

147
00:09:37.640 --> 00:09:41.969
So if you had a big audit and it was done
months and months ago, it's probably

148
00:09:41.969 --> 00:09:46.927
not relevant anymore if you're shipping
software regularly because things change.

149
00:09:46.927 --> 00:09:54.443
And so when it was tested to where it is
now, it's probably not the same at all.

150
00:09:54.443 --> 00:09:57.758
So we want to go beyond compliance,
we want to make a good experience and

151
00:09:57.758 --> 00:10:00.263
it's something that we want
to work on iteratively.

152
00:10:00.263 --> 00:10:06.298
We're always, we're improving any kind of
bugs or any kind of software features,

153
00:10:06.298 --> 00:10:10.382
accessibility is just part of
that process all the time.

154
00:10:10.382 --> 00:10:12.135
That's how it's going to
be the most successful.

155
00:10:12.135 --> 00:10:14.325
So, I want to get past compliance,

156
00:10:14.325 --> 00:10:18.778
especially when it comes to the web
content accessibility guidelines,

157
00:10:18.778 --> 00:10:22.136
which are great, but
they're just a starting point.

158
00:10:22.136 --> 00:10:26.186
It's all about, is the experience good?

159
00:10:26.186 --> 00:10:28.504
So, a better way to think about this,

160
00:10:28.504 --> 00:10:33.503
I mentioned it being a constant work in
progress and something that we iterate on,

161
00:10:33.503 --> 00:10:36.053
but it also needs to
be part of the design.

162
00:10:36.053 --> 00:10:39.013
It needs to be part of
your product DNA and

163
00:10:39.013 --> 00:10:42.595
the earlier you incorporate that,
the better.

164
00:10:42.595 --> 00:10:46.356
Mostly because like,
depending on how your work gets done,

165
00:10:46.356 --> 00:10:50.646
design might have been like way
earlier and you can't change it now.

166
00:10:50.646 --> 00:10:55.706
So, if we have issues with contrast or
font readability or

167
00:10:55.706 --> 00:11:00.976
things that are more visual
characteristics, that stuff,

168
00:11:00.976 --> 00:11:07.201
that ship has sailed long ago and
you can only fix so much as a developer.

169
00:11:07.201 --> 00:11:11.917
That's design debt right there
turning into accessibility debt.

170
00:11:11.917 --> 00:11:14.626
So we want to make changes as often and
as early as we can.

171
00:11:17.409 --> 00:11:20.247
If you can put an accessibility
statement on your website,

172
00:11:20.247 --> 00:11:21.734
that could be really helpful.

173
00:11:21.734 --> 00:11:27.345
It gives people with disabilities a way to
contact you if they do have an issue and

174
00:11:27.345 --> 00:11:30.609
it's a really great tool to have to say,
hey,

175
00:11:30.609 --> 00:11:33.996
these are the standards
we're aiming to meet.

176
00:11:33.996 --> 00:11:38.467
We're working on it, you don't wanna
be like, we nailed it, we're great.

177
00:11:38.467 --> 00:11:42.358
Just putting the statement here to say
we're compliant, that's not the goal.

178
00:11:42.358 --> 00:11:45.053
The goal is to say, hey,
this is what we're trying to do.

179
00:11:45.053 --> 00:11:49.072
We're continually working on this,
if you find an issue, please tell us.

180
00:11:49.072 --> 00:11:53.570
Cuz those feedback comments are gifts,
they really are helpful.

181
00:11:53.570 --> 00:11:58.065
And so you wanna give people a way to
email you or chat with you and tell you.

182
00:11:58.065 --> 00:12:01.123
Because they might be in
a combination of browser and

183
00:12:01.123 --> 00:12:04.120
screen reader that wasn't
at the top of your list.

184
00:12:04.120 --> 00:12:08.934
So, maybe they could help you identify a
super blocking issue that you just didn't

185
00:12:08.934 --> 00:12:10.734
know, you weren't aware of.

186
00:12:10.734 --> 00:12:14.575
So, accessibility statements
are really great for that.

187
00:12:14.575 --> 00:12:18.092
And then don't stop at tooling,
just like Lighthouse and

188
00:12:18.092 --> 00:12:21.845
AXE saying, okay, zero issues,
100%, you're good.

189
00:12:21.845 --> 00:12:25.024
That may not be the full picture.

190
00:12:25.024 --> 00:12:29.212
There's a great article that I
linked to my slides called Building

191
00:12:29.212 --> 00:12:31.830
the Most Inaccessible Site Possible with

192
00:12:31.830 --> 00:12:34.985
a Perfect Lighthouse Score
by Manuel Matuzovic.

193
00:12:34.985 --> 00:12:39.807
And he highlights perfectly this problem
that you could have a clean bill

194
00:12:39.807 --> 00:12:44.251
of health with an automated tool,
but it could still be terrible.

195
00:12:44.251 --> 00:12:48.776
So there's some links in here
to read a little bit later,

196
00:12:48.776 --> 00:12:52.283
I would like to dive
into actual debugging.

197
00:12:52.283 --> 00:12:53.043
Be ready for that.

