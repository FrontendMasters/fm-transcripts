WEBVTT

1
00:00:00.060 --> 00:00:03.322
Before we keep going too far,
let's run some of these tools so

2
00:00:03.322 --> 00:00:05.410
you could see what I'm talking about.

3
00:00:05.410 --> 00:00:09.660
So, I'll just run it right here
in our workshop materials.

4
00:00:09.660 --> 00:00:13.853
So I'm going to open up the dev tools
on my Mac with command option I,

5
00:00:13.853 --> 00:00:15.778
that'll open up the console.

6
00:00:15.778 --> 00:00:19.556
I can get into the elements inspector.

7
00:00:19.556 --> 00:00:25.443
I happen to have axe DevTools already
installed It's over here on the right.

8
00:00:25.443 --> 00:00:31.099
You can install it through Chrome
extensions, there is a Firefox version and

9
00:00:31.099 --> 00:00:36.556
maybe an Edge version, but
Chrome is the one I tend to use the most.

10
00:00:36.556 --> 00:00:38.815
So some of these upsells I was mentioning,

11
00:00:38.815 --> 00:00:42.947
they have the little lock icon
because you have to pay for them.

12
00:00:42.947 --> 00:00:48.890
But the scan all of my page free setting
is enough to be super helpful and

13
00:00:48.890 --> 00:00:52.437
wallah, we have zero automatic issues.

14
00:00:52.437 --> 00:00:58.057
I put in a little work to make sure that
this was as accessible as it could be, as

15
00:00:58.057 --> 00:01:03.945
you might imagine, but just because this
says zero doesn't mean my job is done.

16
00:01:03.945 --> 00:01:08.509
I mean, we were tabbing through the
sidebar and kind of experientially wasn't,

17
00:01:08.509 --> 00:01:12.426
like it was forcing me through links
that I didn't want to go through.

18
00:01:12.426 --> 00:01:14.506
Axe isn't gonna know about that,

19
00:01:14.506 --> 00:01:19.391
it's gonna just look at if things are
coded right, in ways that it can automate.

20
00:01:19.391 --> 00:01:22.709
So, we want to make sure that things,
are still,

21
00:01:22.709 --> 00:01:28.573
the flows are following best practices and
that we're thinking about the experience.

22
00:01:28.573 --> 00:01:32.671
While we're in here, though,
I could show you Lighthouse.

23
00:01:32.671 --> 00:01:37.133
So Lighthouse is built into Chrome,
I know for some organizations

24
00:01:37.133 --> 00:01:41.513
getting approval on third party
extensions can be a chore [LAUGH] or

25
00:01:41.513 --> 00:01:44.956
even impossible,
if you're really locked down.

26
00:01:44.956 --> 00:01:49.194
So, Lighthouse potentially could
be your saving grace there,

27
00:01:49.194 --> 00:01:53.902
where if you can't get an extension
approved, or maybe it takes time,

28
00:01:53.902 --> 00:01:58.867
Lighthouse is just built into the browser
and it runs the same axe core API.

29
00:01:58.867 --> 00:02:03.336
So I'm gonna uncheck performance,
best practices, SEO, and

30
00:02:03.336 --> 00:02:06.826
progressive web apps just for,
focus purposes.

31
00:02:06.826 --> 00:02:09.495
So it's gonna analyze page load.

32
00:02:10.701 --> 00:02:14.981
It will load up and audit the web page and

33
00:02:14.981 --> 00:02:18.368
report back what's going on.

34
00:02:18.368 --> 00:02:24.701
Checking at a smaller viewport size,
we have some contrast issues

35
00:02:24.701 --> 00:02:30.138
that axe extension did not find,
which is interesting.

36
00:02:30.138 --> 00:02:34.857
And it's actually says error, So

37
00:02:34.857 --> 00:02:38.460
this would be one,
two for me to look into.

38
00:02:38.460 --> 00:02:40.899
It has all the audits that it passed.

39
00:02:40.899 --> 00:02:45.211
I guess sort of my first guess as to
why this would be any different is

40
00:02:45.211 --> 00:02:49.609
that the underlying axe core engines
could be different versions.

41
00:02:49.609 --> 00:02:53.547
It also could be checking at
a different viewport size.

42
00:02:53.547 --> 00:02:56.253
When I ran axe,
it was at the desktop size.

43
00:02:56.253 --> 00:03:01.081
When I ran Lighthouse, it was
checking primarily for a mobile size.

44
00:03:01.081 --> 00:03:05.651
So those are two things right off the bat
that could cause a difference in results.

45
00:03:05.651 --> 00:03:10.140
It also just could be an anomaly
with the way the tool reports.

46
00:03:10.140 --> 00:03:12.503
So sometimes you get different results.

47
00:03:12.503 --> 00:03:16.588
It is helpful to run a variety
of tools because maybe

48
00:03:16.588 --> 00:03:19.634
a different tool will catch an issue.

49
00:03:19.634 --> 00:03:22.327
So, I usually check in multiple things.

50
00:03:22.327 --> 00:03:25.594
Another tool that I mentioned
was accessibility insights.

51
00:03:25.594 --> 00:03:26.694
I have that installed,

52
00:03:26.694 --> 00:03:29.776
it's this really cute little blue
heart with a magnifying glass.

53
00:03:29.776 --> 00:03:31.306
So I can click that and

54
00:03:31.306 --> 00:03:36.156
let me go back to the launch screen
has what's called the fast pass.

55
00:03:36.156 --> 00:03:42.852
That is basically axe core that Microsoft
has also used, so you can run that.

56
00:03:42.852 --> 00:03:48.198
They have this assessment that`s more
of a guided accessibility process, you

57
00:03:48.198 --> 00:03:53.800
could do that, maybe kind of towards the
end of the development cycle of a feature.

58
00:03:53.800 --> 00:03:58.423
That could be a more thorough way to have
it guide you through some accessibility

59
00:03:58.423 --> 00:04:02.977
testing, without having to pay for
a tool that you don't know whether you're

60
00:04:02.977 --> 00:04:07.057
gonna really like that or not,
you could try this guided assessment.

61
00:04:07.057 --> 00:04:10.055
The ad hoc tools are really great.

62
00:04:10.055 --> 00:04:13.205
I could look at things like headings.

63
00:04:13.205 --> 00:04:17.013
This will show me the heading level.

64
00:04:17.013 --> 00:04:22.412
I have two H1s on this page I guess, so
that's something I should probably fix.

65
00:04:22.412 --> 00:04:25.894
I'm a little surprised that that didn't
come up in any of the other tooling.

66
00:04:25.894 --> 00:04:31.467
So, that would be something for me to
look into is why do I have multiple H1s?

67
00:04:31.467 --> 00:04:36.615
Landmarks, I can pull up landmarks and
it will show me all

68
00:04:36.615 --> 00:04:42.728
of these section regions that I
have like a complimentary sidebar,

69
00:04:42.728 --> 00:04:47.569
the main,
the navigation landmark up in the header.

70
00:04:47.569 --> 00:04:51.415
There's a table of contents navigation
landmark that I have labeled.

71
00:04:51.415 --> 00:04:56.541
So that's these two purple landmarks for
navigation.

72
00:04:56.541 --> 00:05:01.495
I made one of them more unique by giving
it an ARIA label of table of contents and

73
00:05:01.495 --> 00:05:05.094
so that gets picked up here
by accessibility insights.

74
00:05:05.094 --> 00:05:06.724
It's pretty handy.

75
00:05:06.724 --> 00:05:12.110
This one's kind of interesting,
the tab stops so I turn that one on and

76
00:05:12.110 --> 00:05:17.703
then if I start tabbing it will show
me a line between where my focus goes.

77
00:05:20.223 --> 00:05:24.889
And interesting that it is, yeah,
you can kind of see like what a nightmare

78
00:05:24.889 --> 00:05:29.131
this sidebar is when you tab through
[LAUGH] using the tab stops tool.

79
00:05:29.131 --> 00:05:32.088
It's not drawing the repeated lines for
some reason,

80
00:05:32.088 --> 00:05:34.347
like we're just seeing the current one.

81
00:05:34.347 --> 00:05:37.457
Usually when I use this tool,
you'll have lines all over the place.

82
00:05:37.457 --> 00:05:42.774
It will mark a line for every single
tab stop which if you're really trying

83
00:05:42.774 --> 00:05:47.747
to work with your design team to change
the way your tab order works for

84
00:05:47.747 --> 00:05:51.293
some reason,
you could use this tab stops tool.

85
00:05:51.293 --> 00:05:56.223
Like if it's jumping back and forth a lot
because for some reason this can be

86
00:05:56.223 --> 00:06:00.683
an effective screenshot tool to
share with your team and say, hey,

87
00:06:00.683 --> 00:06:06.255
this is madness, we're jumping back and
forth across the screen at desktop sizes.

88
00:06:06.255 --> 00:06:13.015
Can we reorder the markup on mobile
somehow so that this is more reasonable?

89
00:06:13.015 --> 00:06:19.681
So it can be a tool to just understand
the tab order overall on a page.

90
00:06:19.681 --> 00:06:21.595
So I'm gonna turn that one off.

91
00:06:21.595 --> 00:06:26.516
Color, I could turn on,
make things more grayscale.

92
00:06:26.516 --> 00:06:28.283
There's all kinds of cool stuff in here.

93
00:06:28.283 --> 00:06:32.979
So, accessibility insights is a really,
really great tool to have.

94
00:06:35.863 --> 00:06:40.556
Cool, okay, so we've kind of dipped our
toes in the water a little bit with some

95
00:06:40.556 --> 00:06:41.969
accessibility tools.

96
00:06:41.969 --> 00:06:46.707
We're gonna look a whole lot more
when we get to our next exercise.

97
00:06:46.707 --> 00:06:50.352
Any questions right now
before we keep going?

98
00:06:50.352 --> 00:06:56.481
&gt;&gt; [INAUDIBLE] I can suggest headings
map extension for heading structure.

99
00:06:56.481 --> 00:06:58.659
&gt;&gt; Cool, let's check it out.

100
00:06:58.659 --> 00:07:01.357
Headings map extension.

101
00:07:01.357 --> 00:07:06.216
Cool yeah,
I'll check this out because the one I use

102
00:07:06.216 --> 00:07:10.646
is a little bit dated,
that looks nice, cool.

103
00:07:10.646 --> 00:07:14.551
I'll leave that open and
add it to our tooling list, thank you.

