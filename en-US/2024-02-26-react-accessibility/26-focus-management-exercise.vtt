WEBVTT

1
00:00:00.000 --> 00:00:03.028
For our focus management exercise,

2
00:00:03.028 --> 00:00:07.138
we are going to add a more
accessible modal layer.

3
00:00:07.138 --> 00:00:10.183
And we'll see how that
the mechanics of that work.

4
00:00:10.183 --> 00:00:17.517
We've learned about tabindex and
how to like trap focus into new layers.

5
00:00:17.517 --> 00:00:20.260
So let's apply it in an example.

6
00:00:20.260 --> 00:00:23.412
We're gonna use pre-built components for
this.

7
00:00:23.412 --> 00:00:28.884
So it should be a little less
in the weeds than ARIA example.

8
00:00:28.884 --> 00:00:32.072
But let's go into this and
see what we've got here.

9
00:00:32.072 --> 00:00:36.408
So for
our image gallery that's in progress,

10
00:00:36.408 --> 00:00:40.754
when I click this,
I have a layer that pops up.

11
00:00:40.754 --> 00:00:46.677
It's not totally done in that,
it does have a close button I can open and

12
00:00:46.677 --> 00:00:50.938
close it, but
I can still get behind that content.

13
00:00:52.196 --> 00:00:57.347
So if that layer is open, I mean,
the display looks funky for

14
00:00:57.347 --> 00:01:01.892
one, but it should really
be blocking me from getting

15
00:01:01.892 --> 00:01:05.431
anywhere behind that layer when it open.

16
00:01:05.431 --> 00:01:07.613
So totally not working.

17
00:01:11.909 --> 00:01:15.509
Let's make something that
does work better, and

18
00:01:15.509 --> 00:01:19.976
we're gonna reach for
components that are already built in.

19
00:01:19.976 --> 00:01:23.605
Because it's a lot easier sometimes.

20
00:01:23.605 --> 00:01:27.702
But we'll look at what are the building
blocks of what they're doing that make it

21
00:01:27.702 --> 00:01:29.701
actually accessible and make it work.

22
00:01:29.701 --> 00:01:36.351
So in our product image gallery,
let's add some components here.

23
00:01:36.351 --> 00:01:38.392
So let's see how it's working right now.

24
00:01:38.392 --> 00:01:44.142
There is a full screen image
state that we're setting on and

25
00:01:44.142 --> 00:01:47.362
off when you click on that image.

26
00:01:47.362 --> 00:01:51.542
So the image is, first of all,
it's a div with an onClick.

27
00:01:51.542 --> 00:01:58.973
Let's make that a button,
let's give it an aria-label.

28
00:01:58.973 --> 00:02:03.258
Open image in full-screen because the alt

29
00:02:03.258 --> 00:02:07.787
attribute would supply
text to that button.

30
00:02:07.787 --> 00:02:10.173
But it would just be the alt
attribute from the image, and

31
00:02:10.173 --> 00:02:12.519
that wouldn't really say what
this action is gonna do.

32
00:02:12.519 --> 00:02:15.147
So clicking on this button,

33
00:02:15.147 --> 00:02:20.300
in this iteration will open
it in a full-screen layer.

34
00:02:20.300 --> 00:02:26.974
So this layer down here is just a regular
old div, it's got some positioning on it.

35
00:02:26.974 --> 00:02:33.575
It has a close button that is another
div with a click event on it.

36
00:02:33.575 --> 00:02:38.616
I think we could just cut our losses and
try a prebuilt component.

37
00:02:38.616 --> 00:02:42.515
And we have some prebuilt components
in here using Shockley Career UI.

38
00:02:42.515 --> 00:02:45.972
And for react,
I think they have Vue versions and

39
00:02:45.972 --> 00:02:48.426
maybe some other options as well.

40
00:02:48.426 --> 00:02:53.014
It's pretty solid, so I would
definitely recommend checking it out if

41
00:02:53.014 --> 00:02:55.700
you're in this part of web development.

42
00:02:55.700 --> 00:03:01.731
So let's pull in,
I'm gonna open up our modal.

43
00:03:01.731 --> 00:03:06.911
Chakra UI and let's go

44
00:03:06.911 --> 00:03:12.641
over to the components.

45
00:03:12.641 --> 00:03:15.884
And I think it's, we need to go to React.

46
00:03:18.249 --> 00:03:25.886
Components, that's where they live and
then Modal.

47
00:03:25.886 --> 00:03:32.020
So interestingly, there's a set of
components under the title overlay.

48
00:03:32.020 --> 00:03:37.931
And so that's this kind of general
concept for something like a layer.

49
00:03:37.931 --> 00:03:41.329
Not to be confused with
an accessibility overlay,

50
00:03:41.329 --> 00:03:46.159
which we are not even really
discussing today, but overlays, modals.

51
00:03:46.159 --> 00:03:51.117
So for this example,
we will grab these components.

52
00:03:51.117 --> 00:03:54.667
We already have Chakra UI React
in our project, so

53
00:03:54.667 --> 00:03:57.039
it's pretty easy to grab these.

54
00:03:57.039 --> 00:04:01.940
They're really great about documenting
how they're adding accessibility.

55
00:04:01.940 --> 00:04:05.816
So, anytime you go to reach for
a pre-built component,

56
00:04:05.816 --> 00:04:10.520
read up on what they have to offer on
this kind of thing and test a demo.

57
00:04:10.520 --> 00:04:14.975
Before you go through the work of
importing it and seeing if it'll work,

58
00:04:14.975 --> 00:04:16.591
go test a demo site first.

59
00:04:16.591 --> 00:04:20.907
And so, some of the things we want
to look for, they are very helpful.

60
00:04:20.907 --> 00:04:24.734
Writing out here, including when
the modal opens, they trap focus in it.

61
00:04:24.734 --> 00:04:26.470
Hey, we know that one.

62
00:04:26.470 --> 00:04:30.974
When the modal opens,
focus is automatically set to the first

63
00:04:30.974 --> 00:04:35.488
enabled element, or
you can tell it what element to focus on.

64
00:04:35.488 --> 00:04:37.078
That is awesome.

65
00:04:37.078 --> 00:04:40.072
So it's something they're
calling initial focus ref.

66
00:04:40.072 --> 00:04:44.353
So, that is a way for
us to reference an element in React,

67
00:04:44.353 --> 00:04:48.292
to say we wanna focus there
when it opens initially.

68
00:04:48.292 --> 00:04:51.660
And then they have a similar
one called finalFocusRef.

69
00:04:51.660 --> 00:04:56.574
So we can choose where to restore focus,
but you don't have to,

70
00:04:56.574 --> 00:05:00.674
they automatically do it for
you, that's amazing.

71
00:05:00.674 --> 00:05:05.872
You can click on it to close it,
you can use the escape key.

72
00:05:05.872 --> 00:05:09.595
Scrolling is blocked behind the modal.

73
00:05:09.595 --> 00:05:13.841
It's rendered in a portal
attached to the end of the body.

74
00:05:13.841 --> 00:05:17.902
So it will break it out so
that it's easier to put a NERT on it.

75
00:05:17.902 --> 00:05:21.082
That was that topic we
were just talking about.

76
00:05:21.082 --> 00:05:24.303
So they're really thinking about
all the right things here.

77
00:05:24.303 --> 00:05:29.463
So if you can use prebuilt components
sometimes, it is a good choice.

78
00:05:29.463 --> 00:05:31.423
And then they have some
ARIA stuff in here.

79
00:05:31.423 --> 00:05:36.023
So they use the aria-modal,
I guess that's a state.

80
00:05:36.023 --> 00:05:38.948
And then they have some labeling
already wired up for you,

81
00:05:38.948 --> 00:05:40.567
that's It's pretty magical.

82
00:05:40.567 --> 00:05:42.347
So let's go add that.

83
00:05:44.022 --> 00:05:47.942
We have an image component,
so I'm gonna add to it.

84
00:05:49.357 --> 00:05:55.746
And for our modal, We're gonna go
pull in some of these components.

85
00:05:55.746 --> 00:06:00.690
So I've got the imports,
let's grab some of this content as well.

86
00:06:00.690 --> 00:06:03.411
They have multiple overlays here.

87
00:06:05.389 --> 00:06:10.387
I wanna get the basic usage.

88
00:06:10.387 --> 00:06:13.043
So we already have a button to open it.

89
00:06:13.043 --> 00:06:17.726
We will grab this modal, we even
have the state to open and close it.

90
00:06:17.726 --> 00:06:20.995
We just want the markup
from this component.

91
00:06:20.995 --> 00:06:28.716
So down here in JSX, I will leave our
full screen image state to render this.

92
00:06:30.170 --> 00:06:33.838
And instead of modal is open,

93
00:06:33.838 --> 00:06:39.571
I will say setFullscreenImage or
let's see.

94
00:06:39.571 --> 00:06:40.969
What do I want to call it?

95
00:06:42.958 --> 00:06:45.108
Yes, so.

96
00:06:46.541 --> 00:06:49.965
What did I add here before actually,

97
00:06:49.965 --> 00:06:55.172
onClose I will say What did I have before?

98
00:06:55.172 --> 00:07:00.173
So we can closefullscreen, so I have
a fullscreenImage and closefullscreen.

99
00:07:01.973 --> 00:07:06.549
Get back here, closefullscreen.

100
00:07:06.549 --> 00:07:13.777
So since I'm not passing any arguments, I
can just reference this callback function.

101
00:07:13.777 --> 00:07:19.606
For this one, I'm gonna say,
I'm gonna take fullscreenImage,

102
00:07:19.606 --> 00:07:22.949
and it It will be a string, I believe.

103
00:07:22.949 --> 00:07:27.862
And so I can turn it into a truthy
falsy variable just by putting

104
00:07:27.862 --> 00:07:31.275
a double exclamation point in front of it.

105
00:07:31.275 --> 00:07:35.381
So that will hinge off of that state
that I'm already, I'm already managing.

106
00:07:35.381 --> 00:07:38.248
And we can go up here to see that,

107
00:07:38.248 --> 00:07:42.831
fullscreenImage is being
managed with you state.

108
00:07:44.846 --> 00:07:51.084
Okay, so
we are not going to use a modal footer.

109
00:07:51.084 --> 00:07:54.193
The modal body will be our image.

110
00:07:55.876 --> 00:08:01.333
So I'm gonna grab the, This image,

111
00:08:01.333 --> 00:08:04.912
I think it's just scaled
down in the smaller size.

112
00:08:04.912 --> 00:08:07.179
So if I open it up with the same asset,

113
00:08:07.179 --> 00:08:10.115
it'll just have the display
to show it bigger.

114
00:08:10.115 --> 00:08:13.351
But I think if you had
different size image assets,

115
00:08:13.351 --> 00:08:17.202
you'd show a bigger one in
the full-screen gallery right.

116
00:08:17.202 --> 00:08:20.660
So our Modal Title, this one,

117
00:08:20.660 --> 00:08:25.325
the design does not have a title showing.

118
00:08:25.325 --> 00:08:28.176
Titles are pretty important for modals.

119
00:08:28.176 --> 00:08:31.974
So I think in this case I
might just include one and

120
00:08:31.974 --> 00:08:34.393
then I would talk with my team.

121
00:08:34.393 --> 00:08:35.713
How are we gonna handle this?

122
00:08:35.713 --> 00:08:39.290
The design doesn't have a Title on it,
but we have to include one.

123
00:08:39.290 --> 00:08:43.599
I could investigate adding a screen
reader only class to this or

124
00:08:43.599 --> 00:08:47.188
something to keep it there but
not show it visually.

125
00:08:47.188 --> 00:08:54.170
But for now, I'm going to put the alt
attribute or maybe the product name.

126
00:08:56.632 --> 00:08:57.815
Only one of those.

127
00:08:57.815 --> 00:09:03.163
Okay, so we have a modal,
let's see what it looks like.

128
00:09:05.793 --> 00:09:07.354
Hey, there it is.

129
00:09:07.354 --> 00:09:12.108
Our style looks a little weird,
but it's already there.

130
00:09:12.108 --> 00:09:19.060
It opened up, it's in the full
context of the window and so.

131
00:09:19.060 --> 00:09:23.413
I can probably control that
with some relative positioning,

132
00:09:23.413 --> 00:09:28.278
but that was like the easiest modal
implementation I've ever done.

133
00:09:28.278 --> 00:09:30.934
And we can take advantage of
some of these libraries now.

134
00:09:30.934 --> 00:09:35.022
Like it didn't used to be that you
could grab a modal off the shelf and

135
00:09:35.022 --> 00:09:39.347
have any hope that it would be accessible,
but like, this is awesome.

136
00:09:39.347 --> 00:09:41.641
So love you Chakra.

137
00:09:41.641 --> 00:09:44.426
[LAUGH] Thank you.

138
00:09:44.426 --> 00:09:49.644
So for this,
let's see if we can control that.

139
00:09:49.644 --> 00:09:51.859
I'll say div className relative.

140
00:09:51.859 --> 00:09:57.174
That is a tailwind class that will
add CSS relative positioning.

141
00:09:57.174 --> 00:10:00.980
So hopefully try and contain some of this.

142
00:10:00.980 --> 00:10:07.348
We might just be kind of not impacting it
in the right way because it's in our slide

143
00:10:07.348 --> 00:10:13.547
references when the full page version
is really what we're gonna care about.

144
00:10:13.547 --> 00:10:18.189
There is a prop for
this also to make the modal go fullscreen.

145
00:10:18.189 --> 00:10:22.947
Think it might be view of full.

146
00:10:22.947 --> 00:10:28.714
This is another area where I'm not gonna
go down the TypeScript rabbit hole,

147
00:10:28.714 --> 00:10:31.827
but sometimes it can, it can be helpful.

148
00:10:31.827 --> 00:10:35.963
I don't,
can't quite recall what the prop is, but

149
00:10:35.963 --> 00:10:40.390
it does, you do have a way
to fullScreen this, really.

150
00:10:42.794 --> 00:10:47.469
So let's see, I'm actually

151
00:10:47.469 --> 00:10:52.894
going to open up our example page.

152
00:10:52.894 --> 00:10:56.904
Wow, that was pretty cool how
easy that was to open and close.

153
00:10:56.904 --> 00:11:00.704
This title is not the right color,
nor is it's the button,

154
00:11:00.704 --> 00:11:02.461
but I think we can fix that.

155
00:11:02.461 --> 00:11:07.280
I mean, the button would be, Pretty,

156
00:11:07.280 --> 00:11:13.535
I think I could do, like colorScheme.

157
00:11:13.535 --> 00:11:17.054
I think that's the Chakra
way of calling things.

158
00:11:19.741 --> 00:11:22.407
I think I might be able to
give it a black colorScheme.

159
00:11:22.407 --> 00:11:26.601
I'm trying to remember,
we'll play with it.

160
00:11:26.601 --> 00:11:30.926
And I can always go back to
the Chakra docs and sort that out.

161
00:11:30.926 --> 00:11:37.748
So for this one, let's see what
it looks like in our full page.

162
00:11:37.748 --> 00:11:43.010
So here's an example, so I do have
the correct color of button here, I didn't

163
00:11:43.010 --> 00:11:48.227
end up including the title on this one,
but we could figure that part out too.

164
00:11:48.227 --> 00:11:53.164
So that is a modal that if I
tab around that close button

165
00:11:53.164 --> 00:11:55.922
is the only focusable thing.

166
00:11:55.922 --> 00:12:00.241
But we know there's other elements on this
page that were focusable before this.

167
00:12:00.241 --> 00:12:05.377
So this modal is doing some
heavy lifting for us, and

168
00:12:05.377 --> 00:12:11.000
that was the easiest copy of
code I think I've ever done.

169
00:12:11.000 --> 00:12:15.182
So try using it, because this
is really what we wanna get to,

170
00:12:15.182 --> 00:12:19.202
is to be able to send focus to
the modal layer when it opens.

171
00:12:19.202 --> 00:12:21.440
I can hit Esc and go back.

172
00:12:21.440 --> 00:12:25.555
My focus was back where we started,
even though we couldn't quite see it.

173
00:12:27.689 --> 00:12:30.977
So that is, yeah,
that's some focus management right there.

