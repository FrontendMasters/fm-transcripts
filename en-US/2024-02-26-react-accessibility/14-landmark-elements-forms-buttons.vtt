WEBVTT

1
00:00:00.000 --> 00:00:06.360
So, landmark elements, kind of similar
to headings, headings are used more.

2
00:00:06.360 --> 00:00:10.258
In all of the feedback I've heard
from people who use screen readers,

3
00:00:10.258 --> 00:00:12.970
headings are used a lot of the time.

4
00:00:12.970 --> 00:00:15.430
Everyone's different, of course, but

5
00:00:15.430 --> 00:00:18.601
landmark elements
are technically a best practice.

6
00:00:18.601 --> 00:00:22.825
One of the things in the axe extension,
that if you turn best practices off,

7
00:00:22.825 --> 00:00:26.858
any rules related to landmark
elements will be excluded.

8
00:00:26.858 --> 00:00:32.528
They're nice to have and you absolutely
should include landmarks because, why not?

9
00:00:33.828 --> 00:00:38.716
Just know that if you only have time
to prioritize one over the other,

10
00:00:38.716 --> 00:00:43.205
put headings at the top of your list,
but landmarks are great.

11
00:00:43.205 --> 00:00:45.970
There are things you create
in your templates and

12
00:00:45.970 --> 00:00:48.741
you kind of just like set it and
forget it mostly.

13
00:00:48.741 --> 00:00:53.826
If you aren't editing templates or
views that are for bigger sections

14
00:00:53.826 --> 00:00:58.665
of your pages all the time,
you might not even see these elements.

15
00:00:58.665 --> 00:01:03.423
Components might get slotted
into these landmarks.

16
00:01:03.423 --> 00:01:07.418
When I opened up the Accessibility
Insights extension earlier,

17
00:01:07.418 --> 00:01:10.653
we had things for headings and landmarks.

18
00:01:10.653 --> 00:01:15.486
So just to refresh there, so
we have nav, main, section,

19
00:01:15.486 --> 00:01:20.722
header, footer, aside, and
there are some rules with these.

20
00:01:20.722 --> 00:01:25.299
So certainly in Mark Elements need
to be what's called top level.

21
00:01:25.299 --> 00:01:31.999
Main is one, I think aside is another one,
so you can't nest main inside of nav.

22
00:01:31.999 --> 00:01:35.632
Or aside,
that one's a little bit surprising,

23
00:01:35.632 --> 00:01:40.236
that one has to be top level kind
of like as a sibling to your main

24
00:01:40.236 --> 00:01:44.656
element
&gt;&gt; When to check if results of acts

25
00:01:44.656 --> 00:01:46.260
are a false positive.

26
00:01:46.260 --> 00:01:49.432
I'm always confused about landmarks and

27
00:01:49.432 --> 00:01:54.687
specifically about role equal groups
that sometimes are used on list

28
00:01:54.687 --> 00:01:59.251
items results that display as a result
&gt;&gt; Okay, so

29
00:01:59.251 --> 00:02:01.735
the the question is about x results.

30
00:02:01.735 --> 00:02:04.482
So a lot of these things
will come up in x results,

31
00:02:04.482 --> 00:02:07.545
I'm gonna turn this landmarks thing off.

32
00:02:07.545 --> 00:02:14.145
So the question was about when to
know about landmark element results.

33
00:02:14.145 --> 00:02:19.755
So, if you're not working on best
practices, if you have to prioritize, you

34
00:02:19.755 --> 00:02:25.676
have a lot of feedback, turn those off,
fix them later, maybe come back to them.

35
00:02:25.676 --> 00:02:30.567
If you are trying to fix them because you
have bandwidth, it's the appropriate time,

36
00:02:30.567 --> 00:02:33.586
what have you,
read through what it's telling you.

37
00:02:33.586 --> 00:02:36.924
So, sometimes it will be
reporting that there are roles and

38
00:02:36.924 --> 00:02:41.534
elements that there shouldn't be,
like for lists, those have default roles.

39
00:02:41.534 --> 00:02:46.307
So we have lists here, ul and
ol and li for the list items,

40
00:02:46.307 --> 00:02:50.094
those have roles built in,
a lot of these do.

41
00:02:51.144 --> 00:02:57.317
That's kind of the overlap that we haven't
totally discussed yet of ARIA and HTML.

42
00:02:57.317 --> 00:03:01.653
What makes them semantic
is that they have meaning,

43
00:03:01.653 --> 00:03:05.607
whereas divs don't, and
so lists have roles.

44
00:03:05.607 --> 00:03:10.591
So if you're putting a role of region on
one, I think what axe might be telling you

45
00:03:10.591 --> 00:03:14.548
is that you could put the region
role on a div that wraps the list so

46
00:03:14.548 --> 00:03:18.828
that the list keeps its semantic
roles without us overwriting them.

47
00:03:18.828 --> 00:03:22.166
So that could be one thing,
if I'm following the question.

48
00:03:25.386 --> 00:03:29.889
So one other note about section and
nav, anything that you've repeated.

49
00:03:29.889 --> 00:03:34.808
And we've actually seen this already, just
kind of in the rendered result of what we

50
00:03:34.808 --> 00:03:37.529
have in these slides,
is that I have two navs.

51
00:03:37.529 --> 00:03:43.366
And I put an ARIA label on those so
that you could tell which one's which.

52
00:03:43.366 --> 00:03:47.733
Cuz especially when you open up
a voiceover in the rotor, I think it won't

53
00:03:47.733 --> 00:03:51.477
even show section elements if
they don't have labels on them.

54
00:03:51.477 --> 00:03:56.231
But if it was just section, section,
section, section, that's like the new div.

55
00:03:56.231 --> 00:04:02.130
[LAUGH] So they've learned through
practice of evaluating a lot of web

56
00:04:02.130 --> 00:04:08.142
pages that sections that aren't
labeled are kind of treated as divs.

57
00:04:08.142 --> 00:04:12.684
So if you want them to actually be
sectioning elements that come up in

58
00:04:12.684 --> 00:04:17.795
the screen reader as like major sectioning
sign posts, you can label them.

59
00:04:17.795 --> 00:04:21.565
And if you are worried about
aria-label getting out of date,

60
00:04:21.565 --> 00:04:26.944
cuz sometimes those strings just get set
and forgotten, you can use aria-labeledby.

61
00:04:26.944 --> 00:04:30.787
It's really similar, but instead of
taking a string value for a label,

62
00:04:30.787 --> 00:04:34.251
you can point it at another element,
like a heading.

63
00:04:34.251 --> 00:04:37.669
So if you have a piece of
content inside of the landmark,

64
00:04:37.669 --> 00:04:42.400
aria-labelledby is pretty great for
labeling cuz you can just sort of double

65
00:04:42.400 --> 00:04:45.912
up on content that is visible
that won't get out of date.

66
00:04:45.912 --> 00:04:48.668
So that's one technique I
would recommend for landmarks.

67
00:04:50.598 --> 00:04:54.013
So lists, they're awesome.

68
00:04:54.013 --> 00:04:59.151
Don't sleep on using those,
because if you have groups of items,

69
00:04:59.151 --> 00:05:02.374
like lists of lists, you can nest lists.

70
00:05:02.374 --> 00:05:06.835
They're great because they
automatically count in a screen reader,

71
00:05:06.835 --> 00:05:08.658
it'll say list five items.

72
00:05:08.658 --> 00:05:13.925
There is one gotcha in Safari and
VoiceOver that I have to tell you about.

73
00:05:13.925 --> 00:05:15.219
Safari, again,

74
00:05:15.219 --> 00:05:20.840
in their heuristics of how webpages
are actually put written out in the wild.

75
00:05:20.840 --> 00:05:27.574
They've made a counteraction of if lists
have their list style removed with CSS,

76
00:05:27.574 --> 00:05:31.787
like there's no dot or no,
what do they call that?

77
00:05:31.787 --> 00:05:37.885
A marker, they will actually not call
it out as a list in a lot of cases.

78
00:05:37.885 --> 00:05:42.573
So if you see lists with roll list
bolted on, that might be why,

79
00:05:42.573 --> 00:05:46.287
is because you can get Safari
to treat it as a list no

80
00:05:46.287 --> 00:05:50.987
matter what if you bolt that list back or
the roll back on.

81
00:05:50.987 --> 00:05:52.817
So I have an article if you're like, what?

82
00:05:52.817 --> 00:05:53.799
What is she talking about?

83
00:05:53.799 --> 00:05:58.197
[LAUGH] There's a link here where
Safari might need a little help.

84
00:05:58.197 --> 00:06:03.164
Scott O'Hara did us a solid and wrote
a really great article on this problem.

85
00:06:03.164 --> 00:06:07.249
So if you do use Safari and
VoiceOver a lot and you're like,

86
00:06:07.249 --> 00:06:10.374
why are my lists not announcing as lists?

87
00:06:10.374 --> 00:06:12.335
That might be why.

88
00:06:12.335 --> 00:06:17.481
And speaking of axe results,
something that might come up is that lists

89
00:06:17.481 --> 00:06:22.480
have rules that they can only have
list items as direct descendants.

90
00:06:22.480 --> 00:06:28.941
So if you have like divs mixed in with
your list items as siblings, you might

91
00:06:28.941 --> 00:06:35.418
get some failures in acts cuz I think
it messes up the counting of the lists.

92
00:06:35.418 --> 00:06:38.319
So that's something I've
seen where the markup,

93
00:06:38.319 --> 00:06:42.783
maybe we don't check it often enough,
like what is our framework rendering?

94
00:06:44.153 --> 00:06:47.667
Sometimes the frameworks will complain
too, which really helps us out so

95
00:06:47.667 --> 00:06:49.263
we can catch this stuff earlier.

96
00:06:49.263 --> 00:06:54.344
But I think with all of this,
especially if you're using a framework

97
00:06:54.344 --> 00:07:00.494
to build your UIs, look at what it's
spinning out, what actually gets rendered?

98
00:07:00.494 --> 00:07:02.108
Cuz that can be very eye opening.

99
00:07:04.068 --> 00:07:09.196
So, forms are a huge part of this,
there's some really powerful elements for

100
00:07:09.196 --> 00:07:13.148
accessibility, starting with the form tag.

101
00:07:13.148 --> 00:07:16.418
Within a form tag,
if you've built anything for the web,

102
00:07:16.418 --> 00:07:19.993
you've probably worked with
a lot of these elements.

103
00:07:19.993 --> 00:07:25.569
Field sets and legends are awesome,
you can group form controls together and

104
00:07:25.569 --> 00:07:28.756
kind of give them a group
name with a legend.

105
00:07:28.756 --> 00:07:32.201
And you can style those,
I think legend you might be able to make

106
00:07:32.201 --> 00:07:36.163
screen reader only,
I'd have to go and double check.

107
00:07:36.163 --> 00:07:40.657
But the big thing, the big story with
form controls is that they have to be

108
00:07:40.657 --> 00:07:44.792
labeled or else, where do you even
filling in if you can't see it?

109
00:07:44.792 --> 00:07:47.052
What does this checkbox do?

110
00:07:47.052 --> 00:07:50.025
Can I opt out of your newsletter?

111
00:07:50.025 --> 00:07:52.776
Everyone should be like,
no, we have to label that,

112
00:07:52.776 --> 00:07:55.502
nobody wants extra newsletters, right?

113
00:07:55.502 --> 00:07:58.675
So, we need to label every control.

114
00:07:58.675 --> 00:08:03.740
Extensions like axe and wave and
accessibility and sites are really great

115
00:08:03.740 --> 00:08:09.460
at pointing that out if something
went wrong or you missed it somehow.

116
00:08:09.460 --> 00:08:12.991
There's two ways to label them, so for

117
00:08:12.991 --> 00:08:18.050
a form input you can use the for
attribute on the label.

118
00:08:18.050 --> 00:08:24.615
In React it's HTML4 because JSX and
HTML and JavaScript are all mixed up.

119
00:08:24.615 --> 00:08:29.902
So to make sure that the compiler knows
we're talking about the label for

120
00:08:29.902 --> 00:08:33.293
in react, it is the HTML for,
and then the ID.

121
00:08:33.293 --> 00:08:37.855
It will match that label and the input or
select whatever form control it is.

122
00:08:37.855 --> 00:08:40.583
It will say these two are joined, and

123
00:08:40.583 --> 00:08:46.268
it will then expose that label as
the name for that form control.

124
00:08:46.268 --> 00:08:50.585
Implicit is just when you have
a label element that wraps an input,

125
00:08:50.585 --> 00:08:53.680
the label text will apply
to that input as well.

126
00:08:53.680 --> 00:08:57.532
It's pretty easy, and
they're getting easier to style,

127
00:08:57.532 --> 00:09:00.624
thank goodness,
[LAUGH] we really needed that.

128
00:09:00.624 --> 00:09:04.950
And then one note about labeling and
naming, only certain elements can be

129
00:09:04.950 --> 00:09:09.571
labeled with things like ARIA label, so
that question about the role region.

130
00:09:09.571 --> 00:09:14.547
Or I think even on the SoundCloud
site that we tested earlier,

131
00:09:14.547 --> 00:09:19.812
there might have been an axe result for
ARIA label not being like,

132
00:09:19.812 --> 00:09:26.244
you can't use it on certain elements,
I think it's limited to a role of image.

133
00:09:27.814 --> 00:09:32.044
What I tend to do for that type of thing,
if I'm like, can I label that element?

134
00:09:32.044 --> 00:09:36.809
I'll go and
pull up the ARIA specification.

135
00:09:36.809 --> 00:09:40.877
Let's go do that real quick as a practice,
so

136
00:09:40.877 --> 00:09:46.133
ARIA 1.2,
let's say I wanted to look up aria-label.

137
00:09:46.133 --> 00:09:48.956
I'm just gonna search for
it real quickly, and

138
00:09:48.956 --> 00:09:51.597
then the first mention
of it I can click on.

139
00:09:51.597 --> 00:09:55.325
So it will tell me what it is and

140
00:09:55.325 --> 00:09:59.659
then what elements I can use it on.

141
00:09:59.659 --> 00:10:06.131
And so this process of checking, where
can I use it, usually can be helpful.

142
00:10:06.131 --> 00:10:08.403
I'm actually not really seeing
what I was looking for here.

143
00:10:08.403 --> 00:10:11.701
But whenever you're gonna use something,

144
00:10:11.701 --> 00:10:15.810
it would be worth going and
doing a search to make sure.

145
00:10:15.810 --> 00:10:19.308
Your tooling will probably also complain
at you, which is helpful, like, hey,

146
00:10:19.308 --> 00:10:22.433
you put an aria-label on a div,
you can't do that.

147
00:10:22.433 --> 00:10:25.953
Okay, thank you tool,
thank you for telling me.

148
00:10:25.953 --> 00:10:27.736
So those are some of
the practices that I use.

149
00:10:27.736 --> 00:10:31.332
I'll look at MDN,
Mozilla Developer Network,

150
00:10:31.332 --> 00:10:35.905
I'll look at ARIA if I'm wanting
to go check up on something.

151
00:10:35.905 --> 00:10:38.781
Buttons and links are a huge one,

152
00:10:38.781 --> 00:10:44.872
somehow these are the most basic
elements that we manage to screw up.

153
00:10:44.872 --> 00:10:49.212
I didn't know about them either, I put
click events on divs just like everyone

154
00:10:49.212 --> 00:10:53.422
else in the beginning, then I learned
how awesome the HTML button is.

155
00:10:53.422 --> 00:10:57.882
So it's focusable for free, it has
a built-in role, and you can put a click

156
00:10:57.882 --> 00:11:01.525
event on it and it will work from
the keyboard, a div will not.

157
00:11:03.015 --> 00:11:07.457
Links are also awesome,
they have built-in behavior like history.

158
00:11:07.457 --> 00:11:10.745
They need an href attribute to
be reachable with keyboard.

159
00:11:10.745 --> 00:11:14.533
So sometimes things that are having
on click but not an href,

160
00:11:14.533 --> 00:11:19.305
those links will not be accessible, so
just so you know that little detail.

161
00:11:20.305 --> 00:11:22.785
And this is kind of the big
thing with buttons and links.

162
00:11:22.785 --> 00:11:27.387
Buttons toggle things,
like interactive things in your interface,

163
00:11:27.387 --> 00:11:33.090
launching models that are not deep linked,
maybe they toggle a setting or something.

164
00:11:33.090 --> 00:11:38.251
Links navigate, so if there's anything
that needs to take you to a location,

165
00:11:38.251 --> 00:11:43.110
if you can use an anchor link,
that's gonna be the best choice.

166
00:11:43.110 --> 00:11:47.914
And what I hear about the most for this as
sort of an anecdote to think about is when

167
00:11:47.914 --> 00:11:52.378
blind people call support, or
anyone who's using navigating by voice.

168
00:11:52.378 --> 00:11:56.968
When they call customer support to get
help with a online product or service, and

169
00:11:56.968 --> 00:12:00.383
they have someone talk them
through how to use it.

170
00:12:00.383 --> 00:12:04.229
If the links don't look like links and
the buttons don't look like buttons and

171
00:12:04.229 --> 00:12:07.033
they're not coded that way
it can get pretty confusing.

172
00:12:08.763 --> 00:12:13.064
So we try to make links look like
links and buttons look like buttons,

173
00:12:13.064 --> 00:12:15.143
that can get pretty tricky.

174
00:12:15.143 --> 00:12:19.255
Cuz CTAs, as we call them, calls to
action, they all look like buttons.

175
00:12:19.255 --> 00:12:25.323
The buttons look like links and
it's kind of just, we do the best we can.

176
00:12:25.323 --> 00:12:28.943
Just know that those work and they're
accessible if we use them the right way.

177
00:12:30.113 --> 00:12:34.703
So then lastly, the last one I wanna
mention here is details and summary.

178
00:12:34.703 --> 00:12:40.245
So this is like a built-in accordion
widget, they're keyboard accessible,

179
00:12:40.245 --> 00:12:44.062
they work pretty well, and
you get default elements.

180
00:12:44.062 --> 00:12:49.555
Be sure to test your implementation
to make sure, but they're awesome.

181
00:12:49.555 --> 00:12:52.797
If you don't already know about details
and summary, they're pretty great.

182
00:12:54.748 --> 00:12:58.434
So sort of an overview of the elements
that you should definitely try to

183
00:12:58.434 --> 00:12:59.251
use if you can.

184
00:13:00.811 --> 00:13:01.987
Sure, question.

185
00:13:01.987 --> 00:13:06.401
&gt;&gt; Have you used the HTML5
dialogue element?

186
00:13:06.401 --> 00:13:07.421
&gt;&gt; Yes.
&gt;&gt; Doing modals,

187
00:13:07.421 --> 00:13:10.551
would you recommend that or
would you recommend not using that?

188
00:13:10.551 --> 00:13:11.741
&gt;&gt; I would recommend it, yes.

189
00:13:11.741 --> 00:13:15.601
So the dialogue element, and really it
should be on this list, we'll add it.

190
00:13:15.601 --> 00:13:20.362
But it has a dialogue role built in,
it has the open and close APIs,

191
00:13:20.362 --> 00:13:24.798
that is definitely an example
of something that's built in.

192
00:13:24.798 --> 00:13:29.042
I think with some of these
implementations, we have to go and check,

193
00:13:29.042 --> 00:13:30.880
are they really accessible?

194
00:13:30.880 --> 00:13:36.736
Another one that comes to mind
is the default date picker.

195
00:13:36.736 --> 00:13:41.032
I actually had an example of that earlier
and we didn't dig into it very much, but

196
00:13:41.032 --> 00:13:44.267
sometimes we are like, great,
there is a default thing.

197
00:13:45.677 --> 00:13:49.510
Some of these newer components
that haven't quite caught on,

198
00:13:49.510 --> 00:13:54.368
part of the reason might be that they're
not totally cross-platform stable.

199
00:13:54.368 --> 00:14:00.018
So we wanna go and check, for the dialogue
I think it works reasonably well.

200
00:14:00.018 --> 00:14:04.996
I think there might have been some
consensus building on what focus should be

201
00:14:04.996 --> 00:14:07.655
sent into automatically when it opens.

202
00:14:07.655 --> 00:14:12.259
I think that was like a sticking
point if I remember correctly.

203
00:14:12.259 --> 00:14:15.895
But I think it should work reasonably
well, maybe a good thing to test.

