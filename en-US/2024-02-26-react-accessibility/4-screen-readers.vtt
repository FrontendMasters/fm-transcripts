WEBVTT

1
00:00:00.190 --> 00:00:04.210
So screen readers,
they're a huge part of accessibility.

2
00:00:05.250 --> 00:00:09.100
Super cool that we have screen
readers on our devices.

3
00:00:09.100 --> 00:00:13.015
So screen readers are a type of
assistive technology, or AT,

4
00:00:13.015 --> 00:00:16.560
which I'll abbreviate here and there.

5
00:00:16.560 --> 00:00:20.524
In the world of accessibility,
AT is just mentioned so

6
00:00:20.524 --> 00:00:24.934
much that you should know that
that's what that stands for.

7
00:00:24.934 --> 00:00:29.091
Screen readers allow people to both
use websites and web applications and

8
00:00:29.091 --> 00:00:31.784
contribute to websites and
web applications.

9
00:00:31.784 --> 00:00:35.045
There are blind developers.

10
00:00:35.045 --> 00:00:39.108
There's different ways that we can
use software to consume software and

11
00:00:39.108 --> 00:00:40.312
to create software.

12
00:00:40.312 --> 00:00:44.265
So the whole thing needs to
be accessible as possible.

13
00:00:44.265 --> 00:00:48.937
And for many people with disabilities,
screen readers are essential for

14
00:00:48.937 --> 00:00:50.984
navigating the day-to-day.

15
00:00:50.984 --> 00:00:54.036
Mobile devices are amazing these days, and

16
00:00:54.036 --> 00:00:59.300
especially the iPhone has a really
good screen reader built in.

17
00:00:59.300 --> 00:01:03.582
Using maps, or checking your calendar,
checking your email,

18
00:01:03.582 --> 00:01:08.855
chatting with a friend, taking pictures,
blind people will take pictures.

19
00:01:08.855 --> 00:01:12.637
[LAUGH] There's all of these
things that we use our devices for

20
00:01:12.637 --> 00:01:16.720
you can do with a screen reader,
especially on the iPhone.

21
00:01:16.720 --> 00:01:20.662
But Android devices do have
a screen reader as well.

22
00:01:20.662 --> 00:01:22.972
And it's not limited to blind people,
either.

23
00:01:22.972 --> 00:01:27.715
Screen reading technology,
which uses speech-to-text, or

24
00:01:27.715 --> 00:01:31.405
text-to-speech, yeah, text-to-speech,

25
00:01:31.405 --> 00:01:36.865
I think I wrote that backwards,
can announce what is on the screen.

26
00:01:36.865 --> 00:01:41.974
And that can be useful for people who
maybe have cognitive impairments or

27
00:01:41.974 --> 00:01:46.915
you just need more help,
I've even used a browser extension called,

28
00:01:46.915 --> 00:01:49.760
I think it's called Read Aloud.

29
00:01:49.760 --> 00:01:55.182
If I'm just feeling really distracted and
I have to read a legal document or

30
00:01:55.182 --> 00:01:58.712
something, I will totally
use a screen reader so

31
00:01:58.712 --> 00:02:02.861
that I just can't stop reading it,
it'll read it to me.

32
00:02:02.861 --> 00:02:07.520
And I can see the screen, but it's still
helpful to have it read aloud sometimes.

33
00:02:07.520 --> 00:02:11.550
And so, we should consider that not
all screen reader users are blind, or

34
00:02:11.550 --> 00:02:15.905
even fully blind, some people use the
screen reader even though they can't see

35
00:02:15.905 --> 00:02:18.219
the screen, they're low vision.

36
00:02:18.219 --> 00:02:22.706
I think some of the techniques that
I had seen for screen readers,

37
00:02:22.706 --> 00:02:26.975
just like, no one can ever see them,
skip links.

38
00:02:26.975 --> 00:02:30.445
There's a skip link I just fixed
the other day that I'm like,

39
00:02:30.445 --> 00:02:34.955
no one can see the skip link,
it's for screen readers users only.

40
00:02:34.955 --> 00:02:40.355
And I think that's a misconception
that I hope to clear up that we should

41
00:02:40.355 --> 00:02:45.308
make keyboard interfaces that
screen reader users can also use.

42
00:02:45.308 --> 00:02:49.722
So I have a graphic here
of using Voiceover for Mac,

43
00:02:49.722 --> 00:02:52.708
just navigating a photo website.

44
00:02:52.708 --> 00:02:56.695
And so, we can see the image of the cat,
it's wrapped in a link, so

45
00:02:56.695 --> 00:03:00.555
the screen reader will announce
what type of element we're on.

46
00:03:00.555 --> 00:03:05.333
And if there is content inside of it,
it will tell us, so this is an image.

47
00:03:05.333 --> 00:03:10.363
It was a stock photo of a cat, so it says,
free cat, feline, photo, and picture.

48
00:03:11.473 --> 00:03:15.857
Maybe highlighting the alt text of
this could use a little bit of help,

49
00:03:15.857 --> 00:03:18.617
I don't know why it says photo and
picture.

50
00:03:18.617 --> 00:03:23.335
But I think sometimes capturing things how
they were created, seeing what it sounds

51
00:03:23.335 --> 00:03:28.053
like in a screen reader can be really
helpful, cuz you get more context of like,

52
00:03:28.053 --> 00:03:31.458
that's why I shouldn't write
the word photo in my alt text.

53
00:03:31.458 --> 00:03:36.416
Cuz it already is an image, in this case,
I think they had photo, and picture,

54
00:03:36.416 --> 00:03:40.043
and image, so we have to test
it sometimes and figure out,

55
00:03:40.043 --> 00:03:43.172
well, what's gonna make
sense in that context?

56
00:03:46.401 --> 00:03:49.469
So screen readers and how they work.

57
00:03:49.469 --> 00:03:52.382
Screen readers are both software and
hardware.

58
00:03:52.382 --> 00:03:57.242
A lot of software that help people
interact with the computer or

59
00:03:57.242 --> 00:04:00.176
mobile device, they convert text and

60
00:04:00.176 --> 00:04:04.586
graphics on the screen to speech or
even braille output.

61
00:04:04.586 --> 00:04:09.647
So there's tactile refreshable
braille that people can use as well.

62
00:04:09.647 --> 00:04:12.866
So it's like reading with your
fingertips instead of your eyes, and

63
00:04:12.866 --> 00:04:14.167
that's pretty cool.

64
00:04:14.167 --> 00:04:16.616
But that leverages some
of these same APIs and

65
00:04:16.616 --> 00:04:20.360
a lot of the same accessibility
techniques that we'll learn about.

66
00:04:21.771 --> 00:04:23.633
The iPhone, as I mentioned,

67
00:04:23.633 --> 00:04:27.661
has an amazing screen reader built
in called VoiceOver for iOS.

68
00:04:28.791 --> 00:04:31.489
Mac computers have
VoiceOver built in as well,

69
00:04:31.489 --> 00:04:35.949
it is slightly different than the version
on iOS, just for platform reasons.

70
00:04:35.949 --> 00:04:42.309
On Windows, users can take advantage
of the built-in screen reader narrator,

71
00:04:42.309 --> 00:04:47.094
or you can install third-party
software like NVDA or JAWS.

72
00:04:47.094 --> 00:04:50.155
Like NVDA it's free and open source, and

73
00:04:50.155 --> 00:04:55.319
I have a virtual machine on my computer
that I can run testing on my Mac.

74
00:04:56.929 --> 00:04:58.924
So when users turn on the device,

75
00:04:58.924 --> 00:05:03.418
the screen reader will take the input
using the platform applications, so

76
00:05:03.418 --> 00:05:08.633
things like the settings app, you could
read that aloud in your screen reader.

77
00:05:08.633 --> 00:05:12.886
You could have it read out the web
browser, or YouTube on your iPhone, or

78
00:05:12.886 --> 00:05:16.253
whatever application,
this isn't limited to the web.

79
00:05:17.563 --> 00:05:20.015
It's kind of intuitive when
you think about it, but

80
00:05:20.015 --> 00:05:21.921
just kind of getting to the basics here.

81
00:05:23.091 --> 00:05:26.420
And so, it'll render that output aloud,

82
00:05:26.420 --> 00:05:30.641
or using the tactile device,
if a user has one.

83
00:05:30.641 --> 00:05:35.521
And it is pretty amazing that
our technologies work that way.

84
00:05:35.521 --> 00:05:39.401
I have some details in here, there's
a link to read more about screen readers.

85
00:05:40.697 --> 00:05:46.837
There are some surveys from a group called
WebAIM, it's Web Accessibility In Mind.

86
00:05:46.837 --> 00:05:48.937
And do I have that link in here?

87
00:05:48.937 --> 00:05:55.293
I'm sure there's a link in here somewhere,
but I'll show it to you just in case.

88
00:05:55.293 --> 00:06:00.287
So WebAIM is a group from Utah,
and they're amazing.

89
00:06:00.287 --> 00:06:05.165
They put out these surveys every
couple of years about how people

90
00:06:05.165 --> 00:06:10.324
report voluntarily using different
screen readers and browsers.

91
00:06:10.324 --> 00:06:15.417
And this is sort of our gold standard in
terms of what we can reference for data.

92
00:06:16.707 --> 00:06:21.523
Because I mentioned we don't track screen
reader users for privacy reasons, but

93
00:06:21.523 --> 00:06:24.662
we do have the survey results
that are shared widely,

94
00:06:24.662 --> 00:06:28.416
every time they open up the survey for
participants.

95
00:06:28.416 --> 00:06:33.310
It is a little bit biased and
that it's heavy on North America for

96
00:06:33.310 --> 00:06:39.385
who's contributing to the survey,
it's kind of technology professionals,

97
00:06:39.385 --> 00:06:43.041
mostly, but it's still something.

98
00:06:43.041 --> 00:06:44.657
It's really helpful to have.

99
00:06:44.657 --> 00:06:49.095
So if we scroll down here, we can see
they include mobile screen readers,

100
00:06:49.095 --> 00:06:51.825
screen reader, and browser combinations.

101
00:06:51.825 --> 00:06:55.782
So if you're on Windows,
I mentioned analytics a little bit,

102
00:06:55.782 --> 00:07:00.712
which we can't track screen readers
directly, but we can put analytics on our

103
00:07:00.712 --> 00:07:04.321
sites to see which browsers and
platforms people are on.

104
00:07:04.321 --> 00:07:09.036
So say you have a heavy
Window's user base, JAWS and

105
00:07:09.036 --> 00:07:15.583
NVDA are the leading screen readers for,
looks like Chrome on Windows.

106
00:07:15.583 --> 00:07:20.978
And so you can learn details about how
people actually use these combinations

107
00:07:20.978 --> 00:07:25.714
on here, and that can help you
narrow down what you're gonna test.

108
00:07:25.714 --> 00:07:27.159
We can't test everything,

109
00:07:27.159 --> 00:07:30.116
like I'm not gonna go fire up
every single screen reader.

110
00:07:30.116 --> 00:07:35.107
I'm gonna have to prioritize, and
sometimes you don't have the bandwidth to

111
00:07:35.107 --> 00:07:39.278
test as much as you would like,
but that's why we use standards.

112
00:07:39.278 --> 00:07:45.474
And why we try to get the basics in, so it
will work reasonably well in most places.

113
00:07:46.494 --> 00:07:49.394
And then if we have a blocking issue or
something,

114
00:07:49.394 --> 00:07:54.089
some unique combination that our customers
are telling us is really important,

115
00:07:54.089 --> 00:07:58.038
we can respond to that particular
feedback and make improvements.

116
00:08:00.371 --> 00:08:06.038
So a big piece of how this works,
depending on what platform you're on.

117
00:08:06.038 --> 00:08:09.296
So I mentioned Windows,
and iOS, and Android.

118
00:08:09.296 --> 00:08:14.185
These platforms come with their
own accessibility APIs, and

119
00:08:14.185 --> 00:08:17.105
this gets pretty geeky and I like it.

120
00:08:17.105 --> 00:08:22.024
[LAUGH] So there is an awesome
link in here that I included,

121
00:08:22.024 --> 00:08:29.517
it's kind of been archived and kept around
of how browsers work, it's fascinating.

122
00:08:29.517 --> 00:08:32.777
Browsers are very
sophisticated applications,

123
00:08:32.777 --> 00:08:36.051
they clean up a lot of our markup messes.

124
00:08:36.051 --> 00:08:42.610
And so, browsers and our platform, so
MacOS in the case of my computer or

125
00:08:42.610 --> 00:08:47.342
iOS or whatever platform you're on,
those APIs and

126
00:08:47.342 --> 00:08:54.335
the browsers work together to
basically make our rendered webpages.

127
00:08:54.335 --> 00:08:59.313
Like the accessibility information
that we get out of those is harnessed

128
00:08:59.313 --> 00:09:01.931
using platform accessibility APIs.

129
00:09:01.931 --> 00:09:06.764
And so, I mention these because there are
subtle differences in different platforms.

130
00:09:06.764 --> 00:09:11.180
Like if you test a user interface and
a screen reader on iOS and

131
00:09:11.180 --> 00:09:16.463
then you go test the same page,
it's a responsive page probably.

132
00:09:16.463 --> 00:09:20.220
You go test that same one in NVDA,
and Chrome, on Windows,

133
00:09:20.220 --> 00:09:22.803
it's not gonna be exactly the same.

134
00:09:22.803 --> 00:09:26.026
So it's like the accessibility
version of pixel perfection.

135
00:09:26.026 --> 00:09:28.724
There's going to be slight differences,
we have to embrace them.

136
00:09:28.724 --> 00:09:33.100
Just know that those APIs are what's
gonna generate those changes,

137
00:09:33.100 --> 00:09:38.230
it's not you, you're not losing your mind,
[LAUGH] they really are different,

138
00:09:38.230 --> 00:09:42.015
even from MacOS to iOS, so
that's something to remember.

139
00:09:43.675 --> 00:09:46.925
And an example here is
the Aria has pop-up state.

140
00:09:46.925 --> 00:09:51.808
It is an attribute that you can
communicate a custom drop-down or

141
00:09:51.808 --> 00:09:52.805
something.

142
00:09:52.805 --> 00:09:58.602
It has pretty wildly different results
depending on what platform you're on,

143
00:09:58.602 --> 00:10:03.021
and we have to work with that,
just something to be aware of.

144
00:10:04.701 --> 00:10:06.367
So another piece of this,

145
00:10:06.367 --> 00:10:10.951
part of what makes this all
work is the accessibility tree.

146
00:10:10.951 --> 00:10:16.954
And this is a structure kind of parallel
to the DOM or the document object model.

147
00:10:16.954 --> 00:10:21.334
This is what all of the accessibility
information on a page gets put into

148
00:10:21.334 --> 00:10:24.174
its own tree, its own structure.

149
00:10:24.174 --> 00:10:28.854
And screen readers and other assistive
technologies leverage that structure.

150
00:10:28.854 --> 00:10:33.234
Some screen readers also look at the DOM,
like I know JAWS does on Windows.

151
00:10:34.444 --> 00:10:37.236
Historically, they would
do that to try and

152
00:10:37.236 --> 00:10:42.375
work around the lacking accessibility,
but the accessibility tree is a thing.

153
00:10:42.375 --> 00:10:48.228
You will see it as we get into debugging,
and I am doing a workshop on enterprise

154
00:10:48.228 --> 00:10:53.567
accessibility that will dive way
deeper into the accessibility tree.

155
00:10:53.567 --> 00:10:58.548
So if you see that, you'll see it when we
debug as I mentioned, that's what that is.

156
00:11:00.908 --> 00:11:04.993
So we did look at WebAIM,
how to prioritize, because there's so

157
00:11:04.993 --> 00:11:09.158
many combinations,
you can't possibly test them all.

158
00:11:09.158 --> 00:11:13.535
So work with your teams to identify
which browsers you need to test and

159
00:11:13.535 --> 00:11:18.365
then reference WebAIM's screen reader
survey to know which screen readers

160
00:11:18.365 --> 00:11:21.256
are the most popular combinations.

161
00:11:21.256 --> 00:11:26.036
On a Mac,
VoiceOver works the best with Safari.

162
00:11:26.036 --> 00:11:29.574
Safari is not usually
prioritized in most Mac

163
00:11:29.574 --> 00:11:33.996
development environments
that I've ever worked in.

164
00:11:33.996 --> 00:11:37.605
So it kind of ends up being
a special thing just to test so

165
00:11:37.605 --> 00:11:39.415
that VoiceOver will work.

166
00:11:39.415 --> 00:11:43.801
So maybe look at your site analytics, if
you have them to see if people are really

167
00:11:43.801 --> 00:11:47.145
coming to the site and voiceover,
it will work with Chrome.

168
00:11:47.145 --> 00:11:51.451
It just, you don't wanna spend your
time chasing down bugs in Chrome and

169
00:11:51.451 --> 00:11:53.369
VoiceOver that work in Safari.

170
00:11:54.499 --> 00:11:56.428
Talk about how you spend your time.

171
00:11:56.428 --> 00:11:58.898
You have to make those judgment calls.

172
00:11:58.898 --> 00:12:03.349
And if it takes a little bit of time to
get Safari, to fix some display bugs so

173
00:12:03.349 --> 00:12:08.297
that it's not full of broken Windows, I
don't know if you know about broken Window

174
00:12:08.297 --> 00:12:13.268
theory, but once there's a broken window,
people will just abandon it.

175
00:12:13.268 --> 00:12:15.860
So if Safari looks junky,
no one's gonna use it,

176
00:12:15.860 --> 00:12:19.713
but if we kind of keep up on it,
maybe it'll get used more and tested more.

177
00:12:20.803 --> 00:12:26.203
Because you could save yourself some
time trying to, quote, fix things

178
00:12:26.203 --> 00:12:32.083
in VoiceOver and Chrome when they just
work fine in Safari, that's a thing.

179
00:12:32.083 --> 00:12:36.670
But Windows also,
if you have any site traffic on Windows,

180
00:12:36.670 --> 00:12:39.689
which I mean, who doesn't?

181
00:12:39.689 --> 00:12:43.602
I think a lot of developers like
I see all Macs in here [LAUGH].

182
00:12:43.602 --> 00:12:47.641
But our customers and
users are probably visiting on Windows.

183
00:12:47.641 --> 00:12:51.997
So we should have a process to
make sure that we're testing, and

184
00:12:51.997 --> 00:12:54.779
using a virtual machine is great.

185
00:12:54.779 --> 00:13:00.011
There's also a service called Assistive
Labs that you could check out to run

186
00:13:00.011 --> 00:13:05.325
screen readers in the cloud, on platforms
that you don't necessarily use,

187
00:13:05.325 --> 00:13:10.538
but I do think the VM or
virtual machine route is pretty great.

188
00:13:10.538 --> 00:13:15.138
And I have some more links here
about how the browsers work,

189
00:13:15.138 --> 00:13:19.560
my favorite Mozilla documentation for
various topics.

190
00:13:21.430 --> 00:13:25.470
Yeah, so let's talk about how
to enable these screen readers.

191
00:13:25.470 --> 00:13:27.648
So this page is full of cheat sheets and

192
00:13:27.648 --> 00:13:32.880
things that you would want to reference
when you're in the act of testing.

193
00:13:32.880 --> 00:13:37.374
Starting with VoiceOver for Mac, and this
is something I do all the time because I'm

194
00:13:37.374 --> 00:13:39.097
not a daily screen reader user.

195
00:13:39.097 --> 00:13:43.519
You can watch me try to
get better at it and

196
00:13:43.519 --> 00:13:46.909
I reference these documents.

197
00:13:46.909 --> 00:13:52.486
So this one is from Deque University,
VoiceOver Keyboard Shortcuts on a Mac.

198
00:13:52.486 --> 00:13:56.284
I've even had this printer
version on my workstation, so

199
00:13:56.284 --> 00:14:00.002
I could reference it when I'm
doing a lot of testing, but

200
00:14:00.002 --> 00:14:04.200
it is totally understood that you
will have to brush up on these.

201
00:14:04.200 --> 00:14:10.939
So VoiceOver, kind of 10,000 foot view,
it uses combinations of keys,

202
00:14:10.939 --> 00:14:15.768
starting with the VoiceOver key,
which they say VO, but

203
00:14:15.768 --> 00:14:20.853
it's actually control and
option held together.

204
00:14:20.853 --> 00:14:24.898
So those modifier keys, you combine
them with a bunch of other keys,

205
00:14:24.898 --> 00:14:28.183
that's a lot of commands to remember.

206
00:14:28.183 --> 00:14:32.453
So cheat sheet, you can cheat,
you can reference, I do everyone does.

207
00:14:32.453 --> 00:14:37.796
I'd rather have to look it up and know
what I'm doing than open JIRA issues or

208
00:14:37.796 --> 00:14:40.884
something when it's just operator error,

209
00:14:40.884 --> 00:14:45.062
that's a big part of getting
into accessibility testing.

210
00:14:45.062 --> 00:14:49.207
Sometimes the testers, they're doing
their best, they care, they just,

211
00:14:49.207 --> 00:14:53.542
if you're not a daily screen reader user
something might not even be an issue, or

212
00:14:53.542 --> 00:14:55.610
maybe it is an issue and you missed it.

213
00:14:55.610 --> 00:14:58.867
So there's a bit of a learning
curve here that is expected.

214
00:15:00.657 --> 00:15:02.707
So I'd bookmark that one.

215
00:15:02.707 --> 00:15:07.907
There's also similar cheat sheets for
iOS cuz iOS is definitely

216
00:15:07.907 --> 00:15:13.117
a platform you should be testing
if you have any mobile traffic.

217
00:15:13.117 --> 00:15:18.185
It's pretty limited to Safari on iOS,
like Apple and WebKit have notoriously

218
00:15:18.185 --> 00:15:23.509
locked down the browser engine, so you
don't have too much that you have to test.

219
00:15:23.509 --> 00:15:27.575
Like I wouldn't test mobile Chrome or
anything cuz it's the same.

220
00:15:27.575 --> 00:15:32.016
But VoiceOver and Safari on iOS,
if you have any mobile traffic,

221
00:15:32.016 --> 00:15:35.998
definitely worth the trying
cuz it is a little different.

222
00:15:37.638 --> 00:15:44.285
So, and then similarly for Windows,
we have some details on JAWS and

223
00:15:44.285 --> 00:15:49.108
NVDA, they work slightly differently.

224
00:15:49.108 --> 00:15:53.138
And so, with VoiceOver,
that 10,000-foot view,

225
00:15:53.138 --> 00:15:57.697
it's like jumbles of keys,
as I affectionately like to say.

226
00:15:57.697 --> 00:16:02.509
It's a lot of combinations of keys,
whereas with NVDA and JAWS,

227
00:16:02.509 --> 00:16:04.529
they work very similarly.

228
00:16:04.529 --> 00:16:09.383
There is a totally different
paradigm that you don't have to

229
00:16:09.383 --> 00:16:13.389
hold as many keys just
because of the way it works.

230
00:16:13.389 --> 00:16:17.634
And this is something we'll get into
an enterprise accessibility workshop

231
00:16:17.634 --> 00:16:18.372
quite a bit.

232
00:16:18.372 --> 00:16:22.627
The sort of a gist of it is
that there are different modes,

233
00:16:22.627 --> 00:16:28.746
that depending on what type of element
you're on, whether it's a form control or

234
00:16:28.746 --> 00:16:32.756
a paragraph,
will change what key commands do what.

235
00:16:32.756 --> 00:16:38.373
And so it's pretty, it's a little
bit simpler sometimes to use,

236
00:16:38.373 --> 00:16:42.097
you just turn it on and
tab around navigate.

237
00:16:42.097 --> 00:16:46.936
We are going to try using
VoiceOver as a bit of a demo.

238
00:16:47.966 --> 00:16:52.010
We could fire up NVDA, I do have it,
we'll see if time allows, but

239
00:16:52.010 --> 00:16:57.200
just be aware that it's not gonna work
exactly the same as VoiceOver does.

240
00:16:57.200 --> 00:17:01.820
And then Android, so Android,
their screen reader historically has been

241
00:17:01.820 --> 00:17:06.680
called TalkBack I think they're just
calling it Android accessibility now.

242
00:17:06.680 --> 00:17:10.197
It's used by so many people,
these devices are so

243
00:17:10.197 --> 00:17:14.050
popular that,
of course there's people that use it,

244
00:17:14.050 --> 00:17:18.990
t's not as well-loved,
not as well-tested, I will say.

245
00:17:18.990 --> 00:17:22.945
It's probably the one that gets,
like if iOS accessibility gets missed,

246
00:17:22.945 --> 00:17:26.840
Android accessibility is definitely
going to get missed [LAUGH].

247
00:17:26.840 --> 00:17:32.000
But if you have any Android users,
it is worth checking out.

248
00:17:32.000 --> 00:17:36.060
I included some tips for
testing with Android from Google.

249
00:17:36.060 --> 00:17:40.399
There's also a cheat sheet for
using the TalkBack screen reader.

250
00:17:40.399 --> 00:17:43.923
And there's some mobile testing
tools that could be helpful,

251
00:17:43.923 --> 00:17:46.325
there's ones from Deque and from events.

252
00:17:46.325 --> 00:17:47.750
They're a startup.

253
00:17:49.380 --> 00:17:52.036
So yeah, lots of different screen readers.

