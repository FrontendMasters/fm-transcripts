WEBVTT

1
00:00:00.060 --> 00:00:03.403
Before we keep going too far,
let's run some of these tools so

2
00:00:03.403 --> 00:00:05.410
you can see what I'm talking about.

3
00:00:05.410 --> 00:00:09.660
So I'll just run it right here
in our workshop materials.

4
00:00:09.660 --> 00:00:13.270
So I'm going to open up the DevTools
on my Mac with Command Option I.

5
00:00:14.330 --> 00:00:15.930
That'll open up the console.

6
00:00:15.930 --> 00:00:19.700
I can get into the elements inspector.

7
00:00:19.700 --> 00:00:25.456
I happen to have AXE DevTools already
installed, it's over here on the right.

8
00:00:25.456 --> 00:00:29.086
You can install it through
Chrome extensions.

9
00:00:29.086 --> 00:00:33.169
There is a Firefox version and
maybe an Edge version, but

10
00:00:33.169 --> 00:00:36.536
Chrome is the one I tend to use the most.

11
00:00:36.536 --> 00:00:40.771
So some of these upsells I was mentioning,
they have the little,

12
00:00:40.771 --> 00:00:42.947
have to pay for them.

13
00:00:42.947 --> 00:00:48.507
But the scan all of my page free
setting is enough to be super helpful.

14
00:00:48.507 --> 00:00:52.397
And voila, we have zero automatic issues.

15
00:00:52.397 --> 00:00:57.090
I put in a little work to make sure that
this was as accessible as it could be,

16
00:00:57.090 --> 00:00:59.067
as you might imagine.

17
00:00:59.067 --> 00:01:04.038
But just because this says 0
doesn't mean my job is done.

18
00:01:04.038 --> 00:01:08.235
I mean, we were tabbing through
the sidebar and kind of experientially,

19
00:01:08.235 --> 00:01:12.548
it was forcing me through links
that I didn't wanna go through.

20
00:01:12.548 --> 00:01:14.218
Axe isn't gonna know about that.

21
00:01:14.218 --> 00:01:19.955
It's gonna just look at if things are
coded right in ways that it can automate.

22
00:01:19.955 --> 00:01:22.823
So we want to make sure
that things are still,

23
00:01:22.823 --> 00:01:28.415
the flows are following best practices and
that we're thinking about the experience.

24
00:01:30.325 --> 00:01:32.805
While we're in here though,
I could show you Lighthouse.

25
00:01:32.805 --> 00:01:37.230
So Lighthouse is built into Chrome if,
I know for some organizations,

26
00:01:37.230 --> 00:01:41.435
getting approval on third party
extensions can be a chore, [LAUGH] or

27
00:01:41.435 --> 00:01:44.927
even impossible,
like if you're really locked down.

28
00:01:44.927 --> 00:01:49.031
So, lighthouse potentially could
be your saving grace there,

29
00:01:49.031 --> 00:01:53.591
where if you can't get an extension
approved, or maybe it takes time,

30
00:01:53.591 --> 00:01:58.967
lighthouse is just built into the browser
and it runs the same XCore API.

31
00:01:58.967 --> 00:02:00.192
So I'm gonna uncheck.

32
00:02:00.192 --> 00:02:05.037
Performance best practices, SEO and
progressive web apps just for

33
00:02:05.037 --> 00:02:06.902
focus purposes.

34
00:02:06.902 --> 00:02:12.146
So it's gonna analyze page load,
it will load up and

35
00:02:12.146 --> 00:02:18.192
audit the webpage and
report back what's going on.

36
00:02:18.192 --> 00:02:21.627
Checking it at a smaller viewport size.

37
00:02:23.847 --> 00:02:28.026
We have some contrast issues
that X extension did not find,

38
00:02:28.026 --> 00:02:30.287
which is interesting.

39
00:02:30.287 --> 00:02:32.327
And it actually says error.

40
00:02:34.887 --> 00:02:38.567
So this would be one too for
me to look into.

41
00:02:38.567 --> 00:02:41.097
It has all the audits is that it passed.

42
00:02:41.097 --> 00:02:45.298
I guess sort of my first guess as to
why this would be any different is that

43
00:02:45.298 --> 00:02:49.667
the underlying axe core engines
could be different versions.

44
00:02:49.667 --> 00:02:53.547
It also could be checking at
a different viewport size.

45
00:02:53.547 --> 00:02:56.307
When I ran axe it was at the desktop size.

46
00:02:56.307 --> 00:03:01.131
When I ran lighthouse, it was
checking primarily for a mobile size.

47
00:03:01.131 --> 00:03:05.621
So those are two things right off the bat
that could cause a difference in results.

48
00:03:05.621 --> 00:03:10.151
It also just could be an anomaly
with the way the tool reports.

49
00:03:10.151 --> 00:03:12.942
So sometimes you get different results.

50
00:03:12.942 --> 00:03:17.567
It is helpful to run a variety of
tools because maybe a different tool

51
00:03:17.567 --> 00:03:19.037
will catch an issue.

52
00:03:19.037 --> 00:03:22.200
Maybe so yeah,
I usually check in multiple things.

53
00:03:22.200 --> 00:03:25.747
Another tool that I mentioned
was accessibility insights.

54
00:03:25.747 --> 00:03:26.847
I have that installed.

55
00:03:26.847 --> 00:03:29.877
It's this really cute little blue
heart with a magnifying glass.

56
00:03:29.877 --> 00:03:33.806
So I can click that, and
let me go back to the launch screen,

57
00:03:33.806 --> 00:03:36.267
has what's called the Fast Pass.

58
00:03:36.267 --> 00:03:41.511
That is basically X-Core that
Microsoft has, is also used.

59
00:03:41.511 --> 00:03:42.801
So you can run that.

60
00:03:42.801 --> 00:03:47.601
They have this assessment that's more
of a guided accessibility process.

61
00:03:47.601 --> 00:03:52.058
You could do that, maybe kind of towards
the end of the development cycle of

62
00:03:52.058 --> 00:03:55.099
a feature that could be a more
thorough way to have it

63
00:03:55.099 --> 00:03:59.489
guide you through some accessibility
testing, without having to pay for

64
00:03:59.489 --> 00:04:04.070
a tool that you don't know whether
you're going to really like that or not.

65
00:04:04.070 --> 00:04:06.140
You could try this guided assessment.

66
00:04:07.150 --> 00:04:10.110
The ad hoc tools are really great.

67
00:04:10.110 --> 00:04:13.270
I could look at things like headings.

68
00:04:13.270 --> 00:04:15.870
This will show me the heading level.

69
00:04:17.070 --> 00:04:19.250
I have two H1s on this page, I guess.

70
00:04:19.250 --> 00:04:22.417
So those that's something
I should probably fix.

71
00:04:22.417 --> 00:04:25.947
I'm a little surprised that that didn't
come up in any of the other tooling.

72
00:04:25.947 --> 00:04:30.287
So that would be something for me to look
into is like, why do I have multiple H1s?

73
00:04:31.477 --> 00:04:34.833
Landmarks, I can pull up landmarks and

74
00:04:34.833 --> 00:04:39.827
it will show me all of these
sectioned regions that I have.

75
00:04:39.827 --> 00:04:45.983
A complimentary sidebar, the main,
the navigation landmark up in the header,

76
00:04:45.983 --> 00:04:51.417
there's a table of contents navigation
landmark that I have labeled,

77
00:04:51.417 --> 00:04:56.550
so that's these two purple landmarks for
navigation.

78
00:04:56.550 --> 00:05:00.520
I made one of them more unique by giving
it an ARIA label of table of contents.

79
00:05:00.520 --> 00:05:03.810
And so that gets picked up here
by Accessibility Insights.

80
00:05:05.190 --> 00:05:06.020
It's pretty handy.

81
00:05:07.040 --> 00:05:08.190
This one's kind of interesting.

82
00:05:08.190 --> 00:05:09.051
The tab stops.

83
00:05:09.051 --> 00:05:14.468
So I turn that one on and
then if I start tabbing,

84
00:05:14.468 --> 00:05:20.292
it will show me a line between
where my focus goes and

85
00:05:20.292 --> 00:05:23.147
interesting that it is.

86
00:05:23.147 --> 00:05:26.763
Yeah, you can kind of see like what
a nightmare this sidebar is when

87
00:05:26.763 --> 00:05:29.039
you tab through using the dev stops tool.

88
00:05:29.039 --> 00:05:32.082
It's not drawing the repeated lines for
some reason,

89
00:05:32.082 --> 00:05:34.406
like we're just seeing the current one.

90
00:05:34.406 --> 00:05:37.556
Usually when I use this tool,
you'll have lines all over the place.

91
00:05:37.556 --> 00:05:42.866
It will mark a line for every single
Tabstop, which if you're really trying to

92
00:05:42.866 --> 00:05:49.342
work with your design team to change the
way your tab order works for some reason.

93
00:05:49.342 --> 00:05:53.729
You could use this tab stops tool,
like if it's jumping back and

94
00:05:53.729 --> 00:05:59.335
forth a lot because for some reason, this
can be an effective screenshot tool to,

95
00:05:59.335 --> 00:06:03.017
share with your team and
say, hey, this is madness.

96
00:06:03.017 --> 00:06:06.307
We're jumping back and
forth across the screen at desktop sizes.

97
00:06:06.307 --> 00:06:11.657
Can we reorder the markup on mobile
somehow so that this is more reasonable?

98
00:06:13.067 --> 00:06:17.396
So it can be a tool to just like
understand the tab order overall on

99
00:06:17.396 --> 00:06:17.967
a page.

100
00:06:19.795 --> 00:06:22.265
So I'm going to turn that one off.

101
00:06:22.265 --> 00:06:25.315
Color I could turn on,
make things more gray scale.

102
00:06:26.525 --> 00:06:30.706
There's all kinds of cool stuff in here,
so

103
00:06:30.706 --> 00:06:36.705
accessibility Insights is a really
great tool to have, okay.

104
00:06:36.705 --> 00:06:40.508
So we've like kind of dipped our toes
in the water a little bit with some

105
00:06:40.508 --> 00:06:42.131
accessibility tools.

106
00:06:42.131 --> 00:06:45.401
We're gonna look a whole lot more
when we get to our next exercise.

107
00:06:46.811 --> 00:06:50.671
Any questions right now
before we keep going?

108
00:06:50.671 --> 00:06:53.541
&gt;&gt; Someone said,
I can suggest headings map,

109
00:06:53.541 --> 00:06:56.661
Chrome extension for heading structure.

110
00:06:56.661 --> 00:06:58.731
&gt;&gt; Cool, let's check it out.

111
00:06:58.731 --> 00:07:00.231
Headings map extension.

112
00:07:01.514 --> 00:07:07.434
Cool, yeah, I'll check this out,
cuz the one I use is a little bit dated.

113
00:07:07.434 --> 00:07:08.614
That looks nice.

114
00:07:10.084 --> 00:07:14.129
Cool, I'll leave that open and
add it to our tooling list, thank you.

