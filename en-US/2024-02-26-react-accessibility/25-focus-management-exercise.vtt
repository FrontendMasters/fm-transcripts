WEBVTT

1
00:00:00.062 --> 00:00:05.554
For our focus management exercise,
we are going to add a more accessible

2
00:00:05.554 --> 00:00:10.154
modal layer, and
we'll see how the mechanics of that work.

3
00:00:10.154 --> 00:00:15.207
We've learned about tab index and
how to trap focus

4
00:00:15.207 --> 00:00:20.271
into new layers, so
let's apply it in an example.

5
00:00:20.271 --> 00:00:24.468
We're gonna use pre-built components for
this, so

6
00:00:24.468 --> 00:00:29.231
it should be a little less in
the weeds than our ARIA example.

7
00:00:29.231 --> 00:00:32.084
But let's go into this and
see what we've got here.

8
00:00:32.084 --> 00:00:36.573
So for
our image gallery that's in progress,

9
00:00:36.573 --> 00:00:41.071
when I click this,
I have a layer that pops up.

10
00:00:41.071 --> 00:00:45.201
It's not totally done in that
it does have a close button.

11
00:00:45.201 --> 00:00:52.211
I can open and close it, but
I can still get behind that content.

12
00:00:52.211 --> 00:00:57.286
So if that layer is open, I mean,
the display looks funky for

13
00:00:57.286 --> 00:01:01.764
one, but it should really
be blocking me from getting

14
00:01:01.764 --> 00:01:05.563
anywhere behind that layer when it's open.

15
00:01:05.563 --> 00:01:07.163
So totally not working.

16
00:01:12.106 --> 00:01:16.408
Let's make something
that does work better.

17
00:01:16.408 --> 00:01:20.973
And we're gonna reach for
components that are already built in,

18
00:01:20.973 --> 00:01:23.717
because it's a lot easier sometimes.

19
00:01:23.717 --> 00:01:27.583
But we'll look at what are the kind of
building box of what they're doing that

20
00:01:27.583 --> 00:01:29.916
make it actually accessible and
make it work.

21
00:01:29.916 --> 00:01:36.478
So in our ProductimageGallery,
let's add some components here.

22
00:01:36.478 --> 00:01:38.469
So let's see how it's working right now.

23
00:01:38.469 --> 00:01:44.148
There is a full screen image
state that we're setting on and

24
00:01:44.148 --> 00:01:47.335
off when you click on that image.

25
00:01:47.335 --> 00:01:51.555
So the image is, first of all,
it's a div with an onClick.

26
00:01:51.555 --> 00:01:53.832
Let's make that a button.

27
00:01:53.832 --> 00:02:01.109
Let's give it an aria-label
Open image in full-screen,

28
00:02:01.109 --> 00:02:05.429
because the alt attribute would
supply text to that button, but

29
00:02:05.429 --> 00:02:08.869
it would just be the alt
attribute from the image and

30
00:02:08.869 --> 00:02:12.635
that wouldn't really say what
this action is gonna do.

31
00:02:12.635 --> 00:02:17.603
So clicking on this button in this
iteration will open it in a full

32
00:02:17.603 --> 00:02:18.799
screen layer.

33
00:02:20.397 --> 00:02:24.535
So this layer down here,
as we've just a regular old div,

34
00:02:24.535 --> 00:02:26.993
it's got some positioning on it.

35
00:02:26.993 --> 00:02:33.716
It has a close button that is another
div with a click event on it.

36
00:02:33.716 --> 00:02:38.684
I think we could just cut our losses and
try a built pre-built component.

37
00:02:38.684 --> 00:02:42.679
And we have some pre-built
components in here using Chakra UI.

38
00:02:42.679 --> 00:02:46.268
And for React,
I think they have view, versions, and

39
00:02:46.268 --> 00:02:48.540
maybe some other options as well.

40
00:02:48.540 --> 00:02:53.040
It's pretty solid, so I would
definitely recommend checking it out if

41
00:02:53.040 --> 00:02:55.671
you're in this part of web development.

42
00:02:55.671 --> 00:02:59.960
So let's pull in, I'm gonna

43
00:02:59.960 --> 00:03:04.936
open up our modal, Chakra UI, and

44
00:03:04.936 --> 00:03:09.925
let's go over to the Components.

45
00:03:12.691 --> 00:03:20.357
And I think it's,
we need to go to React, Components,

46
00:03:20.357 --> 00:03:25.923
that's where they live, and then Modal.

47
00:03:25.923 --> 00:03:32.117
So interestingly, there's a set of
components under the title overlay.

48
00:03:32.117 --> 00:03:38.037
And so that's this kind of general
concept for something like a layer.

49
00:03:38.037 --> 00:03:41.114
Not to be confused with
an accessibility overlay,

50
00:03:41.114 --> 00:03:46.276
which we're not even really discussing
discussing today, but overlays, modals.

51
00:03:46.276 --> 00:03:51.080
So for this example,
we will grab these components.

52
00:03:51.080 --> 00:03:54.692
We already have Chakra UI React
in our project, so

53
00:03:54.692 --> 00:03:57.107
it's pretty easy to grab these.

54
00:03:57.107 --> 00:04:01.963
They're really great about documenting
how they're adding accessibility.

55
00:04:01.963 --> 00:04:06.150
So anytime you go to reach for
a pre-built component,

56
00:04:06.150 --> 00:04:11.347
read up on what they have to offer
on this kinda thing and test a demo.

57
00:04:11.347 --> 00:04:14.025
Before you go through
the work of importing it and

58
00:04:14.025 --> 00:04:16.782
seeing if it'll work,
go test a demo site first.

59
00:04:16.782 --> 00:04:21.485
And so some of the things we wanna look
for, they are very helpfully writing out

60
00:04:21.485 --> 00:04:26.705
here, including when the modal opens, they
trap focus in it, hey, we know that one.

61
00:04:26.705 --> 00:04:31.897
When the modal opens, focus is
automatically set to the first enabled

62
00:04:31.897 --> 00:04:37.181
element, or you can tell it what
element to focus on, that is awesome.

63
00:04:37.181 --> 00:04:40.170
So it's something they're
calling initialFocusRef.

64
00:04:40.170 --> 00:04:44.773
So that is a way for us to reference
an element in React to say,

65
00:04:44.773 --> 00:04:48.310
we wanna focus there
when it opens initially.

66
00:04:48.310 --> 00:04:52.379
And then they have a similar
one called finalFocusRef so

67
00:04:52.379 --> 00:04:55.158
we can choose where to restore focus.

68
00:04:55.158 --> 00:04:58.903
But you don't have to,
they automatically do it for you.

69
00:04:58.903 --> 00:05:00.734
That's amazing.

70
00:05:00.734 --> 00:05:05.918
You can click on it to close it,
you ou can use the Esc key,

71
00:05:05.918 --> 00:05:09.606
scrolling is blocked behind the modal.

72
00:05:09.606 --> 00:05:13.874
It's rendered in a portal attached
to the end of the body, so

73
00:05:13.874 --> 00:05:17.993
it will break it out so
that it's easier to put a NERT on it.

74
00:05:17.993 --> 00:05:21.039
That was that topic we
were just talking about.

75
00:05:21.039 --> 00:05:24.307
So they're really thinking about
all the right things here.

76
00:05:24.307 --> 00:05:29.536
So if you can use pre-built components,
sometimes it is a good choice.

77
00:05:29.536 --> 00:05:31.490
And then they have some
ARIA stuff in here.

78
00:05:31.490 --> 00:05:36.236
So they use the aria-modal,
I guess that's a state.

79
00:05:36.236 --> 00:05:39.114
And then they have some labeling
already wired up for you,

80
00:05:39.114 --> 00:05:40.710
that's It's pretty magical.

81
00:05:40.710 --> 00:05:42.132
So let's go add that.

82
00:05:44.137 --> 00:05:49.487
We have an image component,
so I'm going to add to it.

83
00:05:49.487 --> 00:05:55.712
And for our modal, We're gonna go
pull in some of these components.

84
00:05:55.712 --> 00:06:00.852
So I've got the imports,
let's grab some of content as well.

85
00:06:00.852 --> 00:06:02.724
They have multiple overlays here.

86
00:06:05.645 --> 00:06:10.364
I wanna get the basic usage.

87
00:06:10.364 --> 00:06:13.107
So we already have a button to open it.

88
00:06:13.107 --> 00:06:17.851
We will grab this modal, we even
have the state to open and close it.

89
00:06:17.851 --> 00:06:21.198
We just want the markup
from this component.

90
00:06:21.198 --> 00:06:26.124
So down here in JSX, I will leave our

91
00:06:26.124 --> 00:06:30.297
fullscreenImage state to render this.

92
00:06:30.297 --> 00:06:34.104
And instead of Modal isOpen,

93
00:06:34.104 --> 00:06:38.680
I will say, setFullscreenImage.

94
00:06:38.680 --> 00:06:40.576
Or let's see, what do I wanna call it?

95
00:06:43.126 --> 00:06:48.649
Yes, so, What did I add here before?

96
00:06:48.649 --> 00:06:55.278
Actually, onClose I will say,
What did I have before?

97
00:06:55.278 --> 00:07:00.077
So we had closedFullscreen, so I have
a fullscreenImage and closeFullscreen,

98
00:07:02.260 --> 00:07:06.687
Back here, closeFullscreen.

99
00:07:06.687 --> 00:07:13.773
So since I'm not passing any arguments, I
can just reference this callback function.

100
00:07:13.773 --> 00:07:19.418
For this one,
I'm gonna take fullscreenImage and

101
00:07:19.418 --> 00:07:22.968
it will be a string, I believe.

102
00:07:22.968 --> 00:07:27.936
And so I can turn it into
a truthy-falsy variable just by putting

103
00:07:27.936 --> 00:07:31.252
a double exclamation point in front of it.

104
00:07:31.252 --> 00:07:36.526
So that will hinge off of that state
that I'm already managing and we

105
00:07:36.526 --> 00:07:42.371
can go up here to see that fullscreenImage
is being managed with useState.

106
00:07:45.035 --> 00:07:51.192
Okay, so
we are not going to use a ModalFooter.

107
00:07:51.192 --> 00:07:53.973
The ModalBody will be our image.

108
00:07:56.101 --> 00:08:01.496
So I'm gonna grab the, The image,

109
00:08:01.496 --> 00:08:04.848
I think it's just scaled
down in the smaller size.

110
00:08:04.848 --> 00:08:07.156
So if I open it up with the same asset,

111
00:08:07.156 --> 00:08:10.143
it'll just have the display
to show it bigger.

112
00:08:10.143 --> 00:08:13.422
But I think if you had
different size image assets,

113
00:08:13.422 --> 00:08:17.319
you'd show a bigger one in
the full screen gallery, right?

114
00:08:17.319 --> 00:08:20.715
So our Modal Title, this one,

115
00:08:20.715 --> 00:08:25.296
the design does not have a title showing.

116
00:08:25.296 --> 00:08:28.111
Titles are pretty important for modals.

117
00:08:28.111 --> 00:08:31.615
So I think in this case,
I might just include one and

118
00:08:31.615 --> 00:08:35.782
then I would talk with my team,
how are we gonna handle this?

119
00:08:35.782 --> 00:08:39.364
The design doesn't have a title on it,
but we have to include one.

120
00:08:39.364 --> 00:08:43.644
I could investigate adding a screen
reader only class to this or

121
00:08:43.644 --> 00:08:47.370
something to keep it there,
but not show it visually.

122
00:08:47.370 --> 00:08:54.015
But for now, I'm going to put the alt
attribute or maybe the product name.

123
00:08:56.630 --> 00:08:58.076
Any one of those.

124
00:08:58.076 --> 00:09:02.705
Okay, so we have a modal,
let's see what it looks like.

125
00:09:05.947 --> 00:09:07.498
Hey, there it is.

126
00:09:07.498 --> 00:09:12.298
Our style looks a little weird,
but it's already there.

127
00:09:12.298 --> 00:09:17.304
It opened up,
it's in the full context of the Window.

128
00:09:17.304 --> 00:09:22.176
And so I can probably control that
with some relative positioning,

129
00:09:22.176 --> 00:09:26.801
but that was the easiest modal
implementation I've ever done.

130
00:09:26.801 --> 00:09:31.103
[LAUGH] And we can take advantage
of some of these libraries now.

131
00:09:31.103 --> 00:09:35.248
It didn't use to be that you could
grab a modal off the shelf and

132
00:09:35.248 --> 00:09:39.580
have any hope that it would be accessible,
but this is awesome.

133
00:09:39.580 --> 00:09:44.608
So love you, Chakra, [LAUGH] thank you.

134
00:09:44.608 --> 00:09:49.651
So for this,
let's see if we can control that.

135
00:09:49.651 --> 00:09:52.621
I'll say div className="relative",

136
00:09:52.621 --> 00:09:57.165
that is a Tailwind class that will
add CSS relative positioning.

137
00:09:57.165 --> 00:10:01.043
So hopefully, try and
contain some of this.

138
00:10:01.043 --> 00:10:07.293
We might just be kind of not impacting it
in the right way, cuz it's in our slide

139
00:10:07.293 --> 00:10:13.564
references when the full page version
is really what we're gonna care about.

140
00:10:13.564 --> 00:10:18.237
There is a prop for this also to
make the modal go full screen.

141
00:10:18.237 --> 00:10:23.291
I think it might be view="full".

142
00:10:23.291 --> 00:10:29.151
This is another area where I'm
not gonna go down the Typescript

143
00:10:29.151 --> 00:10:33.584
rabbit hole, but
sometimes it can be helpful.

144
00:10:33.584 --> 00:10:37.698
I can't quite recall what the prop is, but

145
00:10:37.698 --> 00:10:41.940
you do have a way to
full screen this really.

146
00:10:43.244 --> 00:10:45.037
So let's see.

147
00:10:45.037 --> 00:10:53.019
I'm actually going to
open up our example page.

148
00:10:53.019 --> 00:10:56.932
Wow, that was pretty cool how
easy that was to open and close.

149
00:10:56.932 --> 00:11:02.528
This title is not the right color nor is
the button, but I think we can fix that.

150
00:11:02.528 --> 00:11:06.454
I mean, the button would be pretty.

151
00:11:06.454 --> 00:11:13.525
I think I could do colorScheme.

152
00:11:13.525 --> 00:11:16.988
I think that's the Chakra
way of calling things.

153
00:11:19.925 --> 00:11:24.796
I think I might be able to give it
a black color scheme, which I remember.

154
00:11:24.796 --> 00:11:26.664
We'll play with it.

155
00:11:26.664 --> 00:11:31.049
And I can always go back to
the Chakra Docs and sort that out.

156
00:11:31.049 --> 00:11:37.829
So for this one, let's see what
it looks like in our full page.

157
00:11:37.829 --> 00:11:39.425
So here's an example.

158
00:11:39.425 --> 00:11:42.789
So I do have the correct
color of button here.

159
00:11:42.789 --> 00:11:46.012
I didn't end up including
the title on this one, but

160
00:11:46.012 --> 00:11:48.292
we could figure that part out, too.

161
00:11:48.292 --> 00:11:51.737
So that is a modal that if I tab around,

162
00:11:51.737 --> 00:11:56.056
that close button is
the only focusable thing.

163
00:11:56.056 --> 00:12:00.355
But we know there's other elements on this
page that were focusable before this.

164
00:12:00.355 --> 00:12:05.341
So this modal is doing some
heavy lifting for us and

165
00:12:05.341 --> 00:12:11.048
that was the easiest copy of
code I think I've ever done.

166
00:12:11.048 --> 00:12:15.179
So try using it, because this
is really what we wanna get to,

167
00:12:15.179 --> 00:12:19.152
is to be able to send focus to
the modal layer when it opens.

168
00:12:19.152 --> 00:12:23.154
I can hit Esc and go back,
my focus was back where we started,

169
00:12:23.154 --> 00:12:25.757
even though we couldn't quite see it.

170
00:12:27.860 --> 00:12:30.625
So yeah,
that's some focus management right there.

