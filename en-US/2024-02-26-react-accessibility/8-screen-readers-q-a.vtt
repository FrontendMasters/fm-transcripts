WEBVTT

1
00:00:00.460 --> 00:00:04.705
What's the difference between low
vision and visually impaired?

2
00:00:04.705 --> 00:00:07.875
&gt;&gt; Yes, so visually impaired is sort of

3
00:00:07.875 --> 00:00:12.389
an umbrella term that covers
a lot of vision issues.

4
00:00:12.389 --> 00:00:17.296
Whereas low vision is more specific to
someone who has, not fully blind, but

5
00:00:17.296 --> 00:00:21.450
has enough of a vision impairment
that affects their daily life,

6
00:00:21.450 --> 00:00:25.109
I think there are some
numbers around this stuff.

7
00:00:25.109 --> 00:00:29.993
So visually impaired would include people
who are fully blind and low vision,

8
00:00:29.993 --> 00:00:33.169
whereas low vision is a bit more specific.

9
00:00:33.169 --> 00:00:38.309
People who can see somewhat and
it's so different for every person.

10
00:00:38.309 --> 00:00:43.844
&gt;&gt; How much should devs use screen
readers in their day to day job?

11
00:00:43.844 --> 00:00:49.568
&gt;&gt; I would say regularly, just so
that you are actually doing it,

12
00:00:49.568 --> 00:00:54.539
it does take some practice,
so it is a bit of a balance.

13
00:00:54.539 --> 00:00:58.964
You don't wanna sink a bunch of time into
something that you might be uncovering

14
00:00:58.964 --> 00:01:02.598
things that our issues are,
I spoke to this a little bit earlier,

15
00:01:02.598 --> 00:01:04.864
where sometimes it's operator error.

16
00:01:04.864 --> 00:01:08.389
[LAUGH] And something we think
is an issue really isn't or

17
00:01:08.389 --> 00:01:11.242
maybe there is an issue
that we didn't find.

18
00:01:11.242 --> 00:01:15.095
So I'd say, you work it in your workflow,

19
00:01:15.095 --> 00:01:21.089
I mean maybe once a week or
just on a periodic basis, depending on,

20
00:01:21.089 --> 00:01:25.808
are you working on the same feature for
a long time?

21
00:01:25.808 --> 00:01:29.751
I think when you work on something,
I don't know,

22
00:01:29.751 --> 00:01:34.336
if you're never gonna look at it again,
but people use it,

23
00:01:34.336 --> 00:01:40.321
definitely you have to test it when you
have the opportunity to make changes.

24
00:01:40.321 --> 00:01:43.844
If you're working on something regularly,

25
00:01:43.844 --> 00:01:48.660
like I just built a feature that
took me maybe a month, and so,

26
00:01:48.660 --> 00:01:53.034
I had various aspects of this
epic that I was working on.

27
00:01:53.034 --> 00:01:55.811
I tested it multiple steps of the way.

28
00:01:57.301 --> 00:01:58.324
So I'd say,

29
00:01:58.324 --> 00:02:04.380
it's kind of a balance of testing it
enough that you are familiar with it.

30
00:02:04.380 --> 00:02:07.601
But if you're not
an accessibility specialist,

31
00:02:07.601 --> 00:02:12.360
you're probably not gonna do it
every single time you sit down.

32
00:02:12.360 --> 00:02:16.104
I would say what we go into in
the next section with debugging,

33
00:02:16.104 --> 00:02:17.548
you would do a lot more.

34
00:02:17.548 --> 00:02:21.968
There's developer tools that we can use
that will give us a pretty good idea of

35
00:02:21.968 --> 00:02:24.152
what the screen reader will read out.

36
00:02:24.152 --> 00:02:28.780
And those are just so much easier to work
in your regular workflow that I would say,

37
00:02:28.780 --> 00:02:30.134
reach for those first.

38
00:02:33.466 --> 00:02:38.119
&gt;&gt; Is there something like cross browser
testing, but for screen readers?

39
00:02:38.119 --> 00:02:42.669
How much should we put into testing
our work against different screen

40
00:02:42.669 --> 00:02:44.243
reader technologies?

41
00:02:44.243 --> 00:02:50.002
Or is it enough to use something
like the built in Mac voiceover?

42
00:02:50.002 --> 00:02:55.606
&gt;&gt; Yeah, so I do think that testing it
on Windows screen readers is important,

43
00:02:55.606 --> 00:02:58.671
because depending on your user traffic,

44
00:02:58.671 --> 00:03:02.719
you could let that dictate
some of how you prioritize.

45
00:03:05.099 --> 00:03:09.321
Safari and Voiceover work the best,
but Safari is kind of an itch browser,

46
00:03:09.321 --> 00:03:13.759
unfortunately, I mean,
it's not what we're often developing in.

47
00:03:13.759 --> 00:03:18.829
People are probably visiting your site
more with Windows Chrome, just a guess.

48
00:03:18.829 --> 00:03:23.133
It's probably not true across the board,
but we want to be testing with

49
00:03:23.133 --> 00:03:27.022
screen readers on Windows because
they do work so differently.

50
00:03:28.322 --> 00:03:33.488
Voiceover is great, I would definitely
say if you could test it regularly,

51
00:03:33.488 --> 00:03:35.252
that would be great.

52
00:03:35.252 --> 00:03:40.323
I think if you could only pick one
to prioritize, I would honestly say

53
00:03:40.323 --> 00:03:45.145
Windows over Voiceover,
just because of how many people use it.

54
00:03:46.285 --> 00:03:50.424
NVVA on Windows and JAWS,
they work really similarly, so

55
00:03:50.424 --> 00:03:55.325
you could probably just opt for
NVDA, at least as a developer.

56
00:03:55.325 --> 00:03:59.510
I think for accessibility teams
that are more specialized,

57
00:03:59.510 --> 00:04:03.530
they are going to be putting
more resources and more time,

58
00:04:03.530 --> 00:04:07.354
more experts on testing
various screen readers.

59
00:04:07.354 --> 00:04:10.144
Not everyone has an accessibility team.

60
00:04:10.144 --> 00:04:15.124
So I think you have to kind of pick what's
the right balance of testing for you.

61
00:04:15.124 --> 00:04:19.194
I did mention one tool earlier
called assistive labs.

62
00:04:19.194 --> 00:04:24.384
Let's pull that,
it's assistive without the E.

63
00:04:24.384 --> 00:04:29.595
And so, thinking of a browser stack or
something that's kind of cross

64
00:04:29.595 --> 00:04:34.450
platform to test, that's sort of
the goal of assistive labs, so

65
00:04:34.450 --> 00:04:40.312
that you can test with screen readers
even if you're not using that platform.

66
00:04:40.312 --> 00:04:42.964
So I would check that out
kind of in this realm.

67
00:04:42.964 --> 00:04:47.971
It could be a service that could
be a good tool for your team.

68
00:04:47.971 --> 00:04:48.671
It's pretty awesome.

69
00:04:51.041 --> 00:04:52.661
Is there any other questions?

70
00:04:54.701 --> 00:04:59.101
&gt;&gt; Does it make sense to
create alt text for galleries?

71
00:04:59.101 --> 00:05:05.172
Thinking something like a carousel or
image gallery script.

72
00:05:05.172 --> 00:05:08.388
&gt;&gt; Yes, so we have images.

73
00:05:08.388 --> 00:05:12.856
I mean, if they're worthy of going [LAUGH]
in a gallery, they should probably have

74
00:05:12.856 --> 00:05:16.443
some alt text, especially if those
images are wrapped in links.

75
00:05:16.443 --> 00:05:21.626
So when we looked at the W3C Alt decision
tree, that link that we pulled up earlier,

76
00:05:21.626 --> 00:05:24.838
they describe all of these
different scenarios, so

77
00:05:24.838 --> 00:05:27.844
you don't have to remember all of them.

78
00:05:27.844 --> 00:05:30.112
But if those images are in links,

79
00:05:30.112 --> 00:05:35.084
we need something to give text to
the links that are wrapping them.

80
00:05:35.084 --> 00:05:39.894
But even if they're just plain images in a
gallery, if they're worth looking at them,

81
00:05:39.894 --> 00:05:42.758
they should have some alt text on them,
I would say.

82
00:05:44.178 --> 00:05:49.402
&gt;&gt; Many SEOs say that you shouldn't
leave alt text blank, is there

83
00:05:49.402 --> 00:05:55.906
another way to have screen readers ignore
the old texts for decorative images?

84
00:05:55.906 --> 00:06:00.658
&gt;&gt; Yes, I would be curious what
they are basing that on, but

85
00:06:00.658 --> 00:06:07.198
sometimes we have to work with the advice
that our marketing really insist on.

86
00:06:07.198 --> 00:06:12.980
So leaving the alt attribute blank,
like the attributes present,

87
00:06:12.980 --> 00:06:17.950
but the value is blank,
you could also have a screen reader

88
00:06:17.950 --> 00:06:22.931
skip over an image by putting
a role of presentation on it.

89
00:06:22.931 --> 00:06:29.267
You could even put Aria hidden of true
on there, that's a pretty big hammer for

90
00:06:29.267 --> 00:06:35.141
a tool when I would ask the question
of like, do we really need to do that?

91
00:06:35.141 --> 00:06:39.849
Before we reach for Aria for
things, we wanna make sure that

92
00:06:39.849 --> 00:06:44.666
we absolutely need to because
there could be other aspects.

93
00:06:44.666 --> 00:06:49.013
I don't know, it's a pretty simple one,
so it might not be too complicated, but

94
00:06:49.013 --> 00:06:53.234
anytime you're like, maybe we could put
some Aria on it, you should caution,

95
00:06:53.234 --> 00:06:55.072
like pause, do we really need to?

96
00:06:55.072 --> 00:07:01.435
[LAUGH] But putting role presentation
on it might be able to skip it.

97
00:07:01.435 --> 00:07:04.795
I guess I would be curious
why we would need to.

98
00:07:06.145 --> 00:07:11.133
&gt;&gt; So is it better to use tools like Axe,
WAVE, and Lighthouse, and

99
00:07:11.133 --> 00:07:16.216
maybe even voice control to test
keyboard instead of voiceover for

100
00:07:16.216 --> 00:07:21.139
devs that are new to accessibility and
don't really know much?

101
00:07:21.139 --> 00:07:26.340
&gt;&gt; Yeah, so the question was about whether
to use tools like browser extensions,

102
00:07:26.340 --> 00:07:29.844
which we're going to dive
into a lot here in a minute.

103
00:07:29.844 --> 00:07:31.917
I would say those
are a great starting point.

104
00:07:31.917 --> 00:07:37.417
So the screen reader, it's nice to fire
it up, it's nice to know that it exists.

105
00:07:37.417 --> 00:07:42.275
And you have to know kind of what we're
trying to get to with the tooling.

106
00:07:42.275 --> 00:07:48.065
Like when we're using Axe or WAVE,
as you'll see what those are in a minute,

107
00:07:48.065 --> 00:07:51.287
we kind of wanna know what's the purpose.

108
00:07:51.287 --> 00:07:55.004
And so, if you have at least
tried out the screen reader,

109
00:07:55.004 --> 00:08:00.041
even if you do use the developer tools,
primarily it's like conceptually,

110
00:08:00.041 --> 00:08:03.237
you have to understand
what we're trying to do.

111
00:08:03.237 --> 00:08:07.933
And so, it's hard to understand that
without ever firing up a screen reader,

112
00:08:07.933 --> 00:08:10.776
but I think if you can get
most of the way there and

113
00:08:10.776 --> 00:08:15.994
prevent some accessibility defects, as we
call them, let's just call it what it is.

114
00:08:15.994 --> 00:08:18.504
They're defects in our projects.

115
00:08:18.504 --> 00:08:23.154
If we can prevent those from shipping
by using developer tools, great,

116
00:08:23.154 --> 00:08:24.615
I think that's fine.

117
00:08:24.615 --> 00:08:28.617
As we do it more and more,
we should fire it up every now and then,

118
00:08:28.617 --> 00:08:30.335
fire up the screen reader.

119
00:08:30.335 --> 00:08:34.611
Finding that right balance of putting
in enough time that it's worthwhile and

120
00:08:34.611 --> 00:08:38.272
useful is something that everyone
is gonna be different at.

121
00:08:38.272 --> 00:08:41.853
I probably do it more than
some other developers do, but

122
00:08:41.853 --> 00:08:43.529
I think like I mentioned,

123
00:08:43.529 --> 00:08:48.270
conceptually we need to understand
what it is that we're trying to make.

124
00:08:48.270 --> 00:08:50.492
Like, what are we adding
all this markup for?

125
00:08:50.492 --> 00:08:52.372
And yeah, so that's the goal.

126
00:08:54.652 --> 00:08:59.740
&gt;&gt; And David in chat was just
commenting that, [COUGH] on his team,

127
00:08:59.740 --> 00:09:03.772
they use assistive labs for
the team and then QA and

128
00:09:03.772 --> 00:09:09.162
our lead accessibility engineer
as a Windows and Android device.

129
00:09:09.162 --> 00:09:14.451
&gt;&gt; Cool, awesome, so
people using assistive labs in the wild.

130
00:09:14.451 --> 00:09:18.820
And that is interesting to hear
about how teams are structured.

131
00:09:18.820 --> 00:09:22.700
So for some teams there are going
to be accessibility specialists,

132
00:09:22.700 --> 00:09:24.720
that is a thing that people do.

133
00:09:24.720 --> 00:09:29.392
It is a little more rare,
especially in today's market.

134
00:09:29.392 --> 00:09:30.796
So the more, I mean,

135
00:09:30.796 --> 00:09:35.635
I guess regardless of what's going on
in the job market, it's helpful if

136
00:09:35.635 --> 00:09:40.411
a lot of us can sort of carry the weight
of building accessible web pages.

137
00:09:40.411 --> 00:09:43.213
And so, we have to verify that somehow.

138
00:09:43.213 --> 00:09:44.695
And in the next section,

139
00:09:44.695 --> 00:09:48.869
I'm gonna show you kind of the workhorse
tools of how you'll do that.

140
00:09:48.869 --> 00:09:53.345
But with or without accessibility
specialists and accessibility teams,

141
00:09:53.345 --> 00:09:57.960
like if we all did more [LAUGH] to make
things accessible to like prevent totally

142
00:09:57.960 --> 00:10:02.022
inaccessible things from shipping,
I bet we would have an impact.

143
00:10:02.022 --> 00:10:03.569
So that's my goal,

144
00:10:03.569 --> 00:10:08.941
is just to get all of us to participate
even if we're not experts in it.

