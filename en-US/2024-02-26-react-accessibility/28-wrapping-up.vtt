WEBVTT

1
00:00:00.090 --> 00:00:05.120
I want to send you off into the world
with some resources, some encouragement.

2
00:00:05.120 --> 00:00:08.072
I may add to this list over time,
so if there's anything I missed,

3
00:00:08.072 --> 00:00:12.220
I think there were a couple of tools and
techniques that I'll go and incorporate.

4
00:00:12.220 --> 00:00:15.811
There are some notable design systems and
component libraries,

5
00:00:15.811 --> 00:00:20.455
React has quite a few, I think just,
there's been a big demand for it.

6
00:00:20.455 --> 00:00:26.037
React ARIA from Adobe, we saw their focus
scope, that was a pretty handy component,

7
00:00:26.037 --> 00:00:31.154
but there are whole other sets of
components that they've made- Shocker UI,

8
00:00:31.154 --> 00:00:34.975
which is for React, and
Vue and maybe more.

9
00:00:34.975 --> 00:00:39.255
There's Coreui for Vue,
another library called Radix, and

10
00:00:39.255 --> 00:00:44.762
I haven't tested every single one
of these, I will caution you.

11
00:00:44.762 --> 00:00:49.399
And even if something does say it's
accessible also, just kind of a last

12
00:00:49.399 --> 00:00:53.742
plug is that don't take their word for
it, [LAUGH] we've to test it.

13
00:00:53.742 --> 00:00:54.892
I mean, we're all human, right?

14
00:00:54.892 --> 00:00:58.907
So we might build something, and
it worked when we published it, and

15
00:00:58.907 --> 00:01:03.090
then life happens and stuff maybe
doesn't work as well as we thought.

16
00:01:03.090 --> 00:01:06.948
So, as authors of libraries, and or

17
00:01:06.948 --> 00:01:12.720
as consumers of libraries,
we we trust but verify.

18
00:01:12.720 --> 00:01:17.761
Try it out, try out a demo site,
use those debugging techniques, and

19
00:01:17.761 --> 00:01:22.803
at least see what's the state of it,
and how is their GitHub library or

20
00:01:22.803 --> 00:01:26.455
GitHub repo, do they respond to issues?

21
00:01:26.455 --> 00:01:29.615
Are they kind about it, or
are they maybe not so nice about it?

22
00:01:29.615 --> 00:01:34.343
You might be able to do kind of
a gut check of before we convert our

23
00:01:34.343 --> 00:01:36.842
whole app to this design system,

24
00:01:36.842 --> 00:01:41.322
what's the experience gonna
be like trying to fix things?

25
00:01:41.322 --> 00:01:42.802
Question?

26
00:01:42.802 --> 00:01:46.116
&gt;&gt; Have you looked into
Google's material UI?

27
00:01:46.116 --> 00:01:53.274
&gt;&gt; Yes, not recently, I'd have to look
again, but that could be one to check out.

28
00:01:53.274 --> 00:01:58.883
I did work on Angular material a while
back, and yeah, there's some legacy there,

29
00:01:58.883 --> 00:02:02.768
maybe a reason why I didn't
include some of that stuff.

30
00:02:02.768 --> 00:02:07.468
But I know a lot of accessibility does
go into some of these libraries, so

31
00:02:07.468 --> 00:02:10.024
that one could be worth a look for sure.

32
00:02:12.240 --> 00:02:15.925
So some last training and
resources to send you on your way,

33
00:02:15.925 --> 00:02:20.873
there's probably more accessibility
stuff here than you ever bargained for.

34
00:02:20.873 --> 00:02:22.644
The third Thursday in May,

35
00:02:22.644 --> 00:02:26.727
every single year is
Global Accessibility Awareness Day, and

36
00:02:26.727 --> 00:02:30.975
there are talks and events and
all kinds of things, it's great.

37
00:02:30.975 --> 00:02:34.728
I think every day should be accessibility
awareness day personally, but

38
00:02:34.728 --> 00:02:37.436
that's a big one for the community.

39
00:02:37.436 --> 00:02:41.512
If you're anywhere near Toronto,
Accessibility Toronto is amazing,

40
00:02:41.512 --> 00:02:45.716
I don't know how they do it, honestly,
they do meetups and a conference,

41
00:02:45.716 --> 00:02:49.893
they do a gaming accessibility
thing that's really neat.

42
00:02:49.893 --> 00:02:53.624
Also in Toronto is a company called Fable,

43
00:02:53.624 --> 00:02:59.647
they are a user testing group that
you can hire to test your products.

44
00:02:59.647 --> 00:03:04.351
They have disabled testers you
can work with to test prototypes,

45
00:03:04.351 --> 00:03:09.053
pages, and they can help you
highlight issues if maybe you don't

46
00:03:09.053 --> 00:03:12.152
have people in house
to help you with that.

47
00:03:12.152 --> 00:03:16.094
And then I have a series of guidelines for
accessibility,

48
00:03:16.094 --> 00:03:21.088
some more courses, and a list of people
to follow if you're so inclined.

49
00:03:21.088 --> 00:03:25.968
And I guess some parting wisdom or
love to send with you is just that

50
00:03:25.968 --> 00:03:30.165
accessibility can be a way
to stand out from the crowd.

51
00:03:30.165 --> 00:03:35.328
Like I know a lot of people are looking
for jobs right now, and if you have,

52
00:03:35.328 --> 00:03:40.161
as a hiring manager, you have two
candidates who are really solid and

53
00:03:40.161 --> 00:03:43.747
one developer has more
accessibility expertise,

54
00:03:43.747 --> 00:03:46.479
that could be pivotal for teams.

55
00:03:46.479 --> 00:03:49.289
It's not gonna be like the only thing,
but it could help.

56
00:03:51.159 --> 00:03:55.904
So some employers do prefer accessibility
certifications once you start to get

57
00:03:55.904 --> 00:04:00.859
into accessibility specialist roles, but
I don't I think you should need that for

58
00:04:00.859 --> 00:04:02.906
a more general role.

59
00:04:02.906 --> 00:04:07.402
But find your strengths, find what
you're into and, yeah, I just went

60
00:04:07.402 --> 00:04:11.986
through a job search myself, so
I wanna send you some kudos, keep going.

61
00:04:13.726 --> 00:04:14.396
Another question?

62
00:04:16.096 --> 00:04:22.270
&gt;&gt; Do you ever use services like Stark
to maintain a history of accessibility

63
00:04:22.270 --> 00:04:27.560
reports over time versus doing
manual checks every month one?

64
00:04:28.800 --> 00:04:32.900
&gt;&gt; Good question, yes, Stark is amazing,
it has tools for figma and other things.

65
00:04:32.900 --> 00:04:38.009
I haven't used it for that, but yeah,
kinda thinking about working with teams,

66
00:04:38.009 --> 00:04:42.972
and we'll get into some of this in
the enterprise accessibility workshop, but

67
00:04:42.972 --> 00:04:46.156
yeah, very manual tests
are not that repeatable,

68
00:04:46.156 --> 00:04:50.094
especially across if you
have multiple team members.

69
00:04:50.094 --> 00:04:53.704
So, finding tools where
you can share results,

70
00:04:53.704 --> 00:04:59.516
have a repeatable process that will become
more important as you do more of it,

71
00:04:59.516 --> 00:05:04.821
yeah, I think there's very varied
maturity in how you approach that.

72
00:05:04.821 --> 00:05:09.080
I think some teams are just real
scrappy and kind of figure it out,

73
00:05:09.080 --> 00:05:11.559
some teams are bigger enterprises and

74
00:05:11.559 --> 00:05:15.601
they need more elegant solutions
to those kinds of problems.

75
00:05:15.601 --> 00:05:18.127
So, I think a lot of the tools like Axe,

76
00:05:18.127 --> 00:05:21.880
they have whole product suites
around that type of thing,

77
00:05:21.880 --> 00:05:26.401
so I think if you're getting into
team management of accessibility,

78
00:05:26.401 --> 00:05:31.024
you might consider looking at one of
those more enterprise type tools.

79
00:05:32.374 --> 00:05:37.436
&gt;&gt; How about in your continuous
integration build pipeline or

80
00:05:37.436 --> 00:05:42.837
whatever, do you see testing
incorporated there at all?

81
00:05:42.837 --> 00:05:47.578
&gt;&gt; Yes, definitely, and that we will get
into an enterprise accessibility as well,

82
00:05:47.578 --> 00:05:52.677
but with continuous integration, there's
some great opportunities to highlight it.

83
00:05:53.907 --> 00:05:57.987
I see if you have test coverage for
accessibility, and

84
00:05:57.987 --> 00:06:02.689
your teammate publishes a pull request and
it fails the tests,

85
00:06:02.689 --> 00:06:07.398
guess who has to go fix the test
before they can ship their PR?

86
00:06:07.398 --> 00:06:12.827
So I think it really can be helpful for
catching stuff before it ships,

87
00:06:12.827 --> 00:06:17.888
for things like Axe, if you were
running Axe in your CI pipeline,

88
00:06:17.888 --> 00:06:23.041
it's kinda debatable whether you
wanna have those results fail or

89
00:06:23.041 --> 00:06:26.280
not, it kinda depends what they are.

90
00:06:26.280 --> 00:06:30.144
You might have some pre-existing
accessibility failures that you either

91
00:06:30.144 --> 00:06:34.260
have to ignore or you're just always
gonna fail builds, I'm not really sure.

92
00:06:34.260 --> 00:06:38.178
So, I think your feature
tests that you write for

93
00:06:38.178 --> 00:06:44.773
your stuff that you know are reliably tied
to stuff that you actually can control,

94
00:06:44.773 --> 00:06:50.047
those tests should fail builds,
like keyboard tests and stuff.

95
00:06:50.047 --> 00:06:54.337
But yeah, maybe not a full
accessibility test API and

96
00:06:54.337 --> 00:07:00.630
continuous integration, I think maybe
that's more of in your development,

97
00:07:00.630 --> 00:07:05.131
but different teams might
have different approaches.

98
00:07:05.131 --> 00:07:06.533
&gt;&gt; All right, thanks, Marcy.

99
00:07:06.533 --> 00:07:10.190
&gt;&gt; [APPLAUSE]

