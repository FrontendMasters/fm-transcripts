WEBVTT

1
00:00:00.000 --> 00:00:03.950
[MUSIC]

2
00:00:03.950 --> 00:00:07.904
&gt;&gt; Kevin Whinnery: What I'd like to do now
is take you through some of the database

3
00:00:07.904 --> 00:00:10.109
code in the sample application and

4
00:00:10.109 --> 00:00:13.410
talk about how some of
these things are laid out.

5
00:00:13.410 --> 00:00:16.260
I know we've kind of dug
into this a little bit but

6
00:00:16.260 --> 00:00:20.920
I want to take a moment to sort
of step you through the key

7
00:00:20.920 --> 00:00:25.660
bits that make this go
Todo MVC application.

8
00:00:25.660 --> 00:00:30.250
So, the first thing I'm
gonna point out is this file

9
00:00:30.250 --> 00:00:36.290
the SequelizeRc.file at the at
the top level of the directory.

10
00:00:36.290 --> 00:00:42.802
So, when you're using the sequelize CLI to
execute commands in your dev environment,

11
00:00:42.802 --> 00:00:47.642
this file configures some of
the key bits about that experience,

12
00:00:47.642 --> 00:00:51.954
like where your database
configuration is going to live,

13
00:00:51.954 --> 00:00:55.034
when the CLI tool generates migrations,

14
00:00:55.034 --> 00:01:00.226
where it's going to put those migrations,
where it's gonna look for

15
00:01:00.226 --> 00:01:05.431
models that have been defined, or
that will be defined using the CLI.

16
00:01:05.431 --> 00:01:06.952
So, this file is there for

17
00:01:06.952 --> 00:01:11.460
when you do execute those sequelize CLI
commands at the top of the directory.

18
00:01:11.460 --> 00:01:16.860
It's gonna take these
settings into effect.

19
00:01:16.860 --> 00:01:22.540
The other places where you'll find
database related logic in the application

20
00:01:22.540 --> 00:01:25.130
is here in the DB directory.

21
00:01:27.450 --> 00:01:32.150
Sequelize requires database
configuration to be specified in kind of

22
00:01:32.150 --> 00:01:34.800
a specific way, which is kind of

23
00:01:34.800 --> 00:01:38.260
incongruent with how we're doing
configuration elsewhere in the app.

24
00:01:38.260 --> 00:01:42.920
So we have this database.js file
which spoon-feeds sequelize

25
00:01:42.920 --> 00:01:46.800
configuration in the format in
which it is more comfortable.

26
00:01:46.800 --> 00:01:52.440
So we actually read in the real
configuration values from our config

27
00:01:52.440 --> 00:01:57.680
setup as we've been doing already so
far, but then we populate these

28
00:01:57.680 --> 00:02:03.740
things like the database URL and the
dialect that we use for sequelize here.

29
00:02:03.740 --> 00:02:06.460
The other bit you'll notice
is the migrations folders.

30
00:02:06.460 --> 00:02:09.484
So this is where,
when you generate a new model or

31
00:02:09.484 --> 00:02:14.380
you generate a new migration which mutates
the state of the database from one

32
00:02:14.380 --> 00:02:17.800
one state to another,
those files are gonna be generated here.

33
00:02:19.170 --> 00:02:24.100
Much like other migration systems that you
might have used in other environments,

34
00:02:24.100 --> 00:02:29.930
a migration file name is built
of a couple different bits.

35
00:02:29.930 --> 00:02:36.550
The first is a time stamp, which is
the actual you identifier of record for

36
00:02:36.550 --> 00:02:42.880
this migration, and this is how
the sequelize or the ORM engine knows

37
00:02:42.880 --> 00:02:47.180
which migrations have been applied and
which migrations have not been applied.

38
00:02:47.180 --> 00:02:48.930
So this is important and

39
00:02:48.930 --> 00:02:53.320
is generated by the by sequelize
when you create a new migration.

40
00:02:53.320 --> 00:02:56.150
And then the second part
is simply descriptive.

41
00:02:56.150 --> 00:03:00.850
So create to do could be any string,
fluffy bunny one two three.

42
00:03:00.850 --> 00:03:02.470
It doesn't really matter.

43
00:03:02.470 --> 00:03:06.300
It should be descriptive to say
what the migration is about.

44
00:03:06.300 --> 00:03:08.580
So, second part of the migration is for
humans.

45
00:03:09.930 --> 00:03:17.640
And every migration exports a JavaScript
object that has two functions on it.

46
00:03:17.640 --> 00:03:20.350
One is called up and
the other is called down.

47
00:03:20.350 --> 00:03:25.330
So when we are migrating the database
to the next version the up function is

48
00:03:25.330 --> 00:03:30.970
called, and that function is
passed a sequelize query interface

49
00:03:30.970 --> 00:03:37.816
which has methods that let you create
tables or add columns to existing tables.

50
00:03:37.816 --> 00:03:40.980
So as you're mutating
the data model over time,

51
00:03:40.980 --> 00:03:46.760
you'll be able to specify these
functions to go up and down.

52
00:03:46.760 --> 00:03:51.600
So here right now this application
only has one migration,

53
00:03:51.600 --> 00:03:55.720
but all of you are going to
change that in just a little

54
00:03:55.720 --> 00:03:59.190
while by updating the data
model a little bit.

55
00:03:59.190 --> 00:04:03.260
So we're creating a new table
called Todos for our to do items.

56
00:04:03.260 --> 00:04:06.920
And then we're also specifying
the down command so when we're

57
00:04:06.920 --> 00:04:11.850
rolling back this migration, we're just
going to drop the table that we created.

58
00:04:11.850 --> 00:04:15.370
So when you generate migrations
to update the data model

59
00:04:15.370 --> 00:04:19.690
you'll be using these
migration files to do it.

60
00:04:19.690 --> 00:04:22.377
Now the other place where you'll run into,

61
00:04:22.377 --> 00:04:26.730
[COUGH] database code in the application
is in the models folder.

62
00:04:26.730 --> 00:04:32.860
And there's a couple of things that happen
here, which are kind of a twist on how

63
00:04:32.860 --> 00:04:37.912
you'll see things structured in
the sequelize documentation.

64
00:04:37.912 --> 00:04:44.935
So, this file, db.js, creates a single
instance of a sequelize object,

65
00:04:44.935 --> 00:04:49.874
and that sequelize object
takes in the constructor,

66
00:04:49.874 --> 00:04:55.143
a postgres database URL,
that will have the username and

67
00:04:55.143 --> 00:04:58.240
password embedded inside of it.

68
00:04:58.240 --> 00:05:01.940
So this is where we're authenticating
against the database and

69
00:05:01.940 --> 00:05:04.770
we're also passing in the options for

70
00:05:04.770 --> 00:05:10.500
that connection to the database which
were loading in from our configuration.

71
00:05:10.500 --> 00:05:15.100
And in our case,
the configuration that we're passing in is

72
00:05:15.100 --> 00:05:18.519
pretty much the defaults
that sequelize provides.

73
00:05:20.220 --> 00:05:26.030
The development postgres URL is configured
here, and these database options

74
00:05:26.030 --> 00:05:30.750
are arguments to the sequelize constructor
saying we wanna use the postgres dialect.

75
00:05:33.250 --> 00:05:38.460
By default, we don't wanna log every
SQL statement out to the console,

76
00:05:38.460 --> 00:05:42.470
although in the development environment
you can see that we actually override that

77
00:05:42.470 --> 00:05:46.680
and say yes we do want to log SQL
statements out to the console.

78
00:05:46.680 --> 00:05:53.378
And then we also configure
sequalize's connection pool,

79
00:05:53.378 --> 00:05:58.570
which specifies how long
a connection is held

80
00:05:58.570 --> 00:06:03.300
that's idle before it's
deleted from the pool.

81
00:06:03.300 --> 00:06:06.610
And then the maximum number and the
minimum number of concurrent connections

82
00:06:06.610 --> 00:06:07.690
to the database that are allowed.

83
00:06:07.690 --> 00:06:11.604
And those are the default values for
sequelize,

84
00:06:11.604 --> 00:06:17.630
which you can tune to your requirements
if you feel that that is necessary.

85
00:06:19.320 --> 00:06:24.130
So, this database object
is used to define all

86
00:06:24.130 --> 00:06:28.740
the other models in our application,
and right now that there is only one.

87
00:06:28.740 --> 00:06:29.970
We have a to do model,

88
00:06:31.780 --> 00:06:35.540
where again we're going to be requiring
the sequelize module cuz we're gonna need

89
00:06:35.540 --> 00:06:40.430
some some class-level variables off
of that as we define the model.

90
00:06:41.560 --> 00:06:44.640
And here we're going
to create a new model.

91
00:06:44.640 --> 00:06:48.590
And right now the only attribute
we're adding is title.

92
00:06:48.590 --> 00:06:53.590
Although the models by default also
have an ID,which is an auto-incrementing

93
00:06:53.590 --> 00:06:58.150
a primary key in the database,
and it also has a created at

94
00:06:58.150 --> 00:07:02.450
an updated at time stamp,
which is added automatically by sequelize.

95
00:07:04.240 --> 00:07:08.920
So, we export that model object and
then that model object is what we use

96
00:07:08.920 --> 00:07:14.050
elsewhere in our application to
actually do queries and update data.

97
00:07:14.050 --> 00:07:19.362
So, here in the Todo's controller,
we require that model and

98
00:07:19.362 --> 00:07:24.274
when we fetch all to dos we use
the query interface attached

99
00:07:24.274 --> 00:07:29.185
to the model to find all the to
dos with a certain limit, and

100
00:07:29.185 --> 00:07:33.194
then we can find by ID,
create and destroy, and

101
00:07:33.194 --> 00:07:38.435
do all those other operations
within our back-end API here.

102
00:07:38.435 --> 00:07:44.940
So, this is kind of the interface
that we have put together.

103
00:07:44.940 --> 00:07:49.980
We're gonna be expanding on this data
model a little bit with a migration.

104
00:07:51.110 --> 00:07:55.960
Some of the to be aware of here,
so rather than

105
00:07:57.010 --> 00:08:01.440
something like Active Record
where the sort of canonical

106
00:08:01.440 --> 00:08:06.430
source of truth about the current
state of the model and

107
00:08:06.430 --> 00:08:10.070
the properties that it supports
lives in the database.

108
00:08:10.070 --> 00:08:13.670
In the model itself, you don't actually
configure what all the properties are,

109
00:08:13.670 --> 00:08:18.090
like you might configure validations and
other logic about the model, but

110
00:08:18.090 --> 00:08:22.330
you don't sort of enumerate here all the
properties that are a part of the model.

111
00:08:22.330 --> 00:08:24.450
In sequelize,
you actually do have to do that.

112
00:08:24.450 --> 00:08:27.860
So, as you're creating
migrations that mutate

113
00:08:27.860 --> 00:08:33.100
the state of the underlying
tables that back your models,

114
00:08:33.100 --> 00:08:37.750
you'll have to keep that in sync with what
is actually defined here in the model.

115
00:08:37.750 --> 00:08:42.510
So if you create a migration
that adds a property to a model,

116
00:08:42.510 --> 00:08:47.700
you'll have to make sure to add that same
property here in your model declaration.

117
00:08:47.700 --> 00:08:52.020
So one thing that is
potentially somewhat onerous,

118
00:08:52.020 --> 00:08:56.290
it's that way in other ORM systems, but
again, if you're coming from Active Record

119
00:08:56.290 --> 00:08:58.220
that might be a little different
than what you're used to.

120
00:09:00.140 --> 00:09:03.380
Now, when we had you set up
your development environment,

121
00:09:04.770 --> 00:09:10.878
the two command line utilities that
you set up were the sequelize CLI and

122
00:09:10.878 --> 00:09:14.450
the CLI.

123
00:09:14.450 --> 00:09:16.170
We installed those globally.

124
00:09:16.170 --> 00:09:20.699
So the sequelize command line utility,

125
00:09:20.699 --> 00:09:28.822
if you just run sequelize
&gt;&gt; Kevin Whinnery: --help,

126
00:09:28.822 --> 00:09:32.121
you'll see all the different
generators and

127
00:09:32.121 --> 00:09:36.880
other options that the command
line interface gives you.

128
00:09:36.880 --> 00:09:39.402
And the help text is actually pretty good.

129
00:09:39.402 --> 00:09:43.759
That's where I go to a lot to see
what is gonna be possible with

130
00:09:43.759 --> 00:09:46.320
the command line utility.

131
00:09:46.320 --> 00:09:50.990
Most of the commands have some
decent help text that show you how

132
00:09:50.990 --> 00:09:52.680
to use these different commands,

133
00:09:52.680 --> 00:09:57.660
actually give you some examples of how
to generate models of various kinds.

134
00:09:57.660 --> 00:09:59.621
So as you're kind of exploring this,

135
00:09:59.621 --> 00:10:03.808
I would definitely recommend that you
take advantage of these help operations.

136
00:10:03.808 --> 00:10:07.268
So, for example, for model create,

137
00:10:07.268 --> 00:10:12.895
which I suspect is something
that you're gonna be interested

138
00:10:12.895 --> 00:10:17.924
in,
&gt;&gt; Kevin Whinnery: Sequelize,

139
00:10:17.924 --> 00:10:22.340
and then we can just basically append
help to the beginning of that.

140
00:10:23.550 --> 00:10:28.036
That's gonna actually show you
the commands that you pass in to

141
00:10:28.036 --> 00:10:33.440
generate say a user model with
certain attributes and it'll

142
00:10:33.440 --> 00:10:38.940
show you the actual JavaScript that'll
get spat out by that command as well.

143
00:10:38.940 --> 00:10:44.000
So, definitely make use
of those help texts

144
00:10:44.000 --> 00:10:49.250
as you're going through and
doing stuff with the ORM.

145
00:10:49.250 --> 00:10:54.579
The other bit that you'll want
to take advantage of while

146
00:10:54.579 --> 00:11:01.920
you're hacking on it is the sequelize
documentation posted on read the docs.

147
00:11:01.920 --> 00:11:07.130
Specifically, I'll point you to
the migrations documentation

148
00:11:07.130 --> 00:11:12.130
because we will be looking at
expanding on our model a little bit.

149
00:11:12.130 --> 00:11:18.080
So you're gonna be generating migration,
updating the model, running the migration,

150
00:11:18.080 --> 00:11:24.470
and enhancing what the application is,
or what the model is capable of.

151
00:11:24.470 --> 00:11:30.250
So, definitely will be
a resource worth consulting.

152
00:11:30.250 --> 00:11:34.120
So are there any questions
right away about sequelize and

153
00:11:34.120 --> 00:11:38.885
kind of how it fits into this
application or other general questions?

154
00:11:43.756 --> 00:11:48.706
&gt;&gt; Kevin Whinnery: Obviously there's
a lot to learn about the sequelize API,

155
00:11:48.706 --> 00:11:53.854
which is why we're gonna start
off with a task that will get you

156
00:11:53.854 --> 00:11:58.820
familiar with that by actually
wrestling with a real task.

157
00:11:58.820 --> 00:12:02.510
Rather than putting a bunch of
method names in slides that

158
00:12:02.510 --> 00:12:06.760
none of you will remember,
I am gonna be giving you a task

159
00:12:06.760 --> 00:12:11.781
that will require acquiring an operational
knowledge of how this ORM works.

