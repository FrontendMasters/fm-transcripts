WEBVTT

1
00:00:00.000 --> 00:00:03.694
[MUSIC]

2
00:00:03.694 --> 00:00:07.257
&gt;&gt; Kevin Whinnery: What we are going to
do first is actually look at a few things

3
00:00:07.257 --> 00:00:10.150
that you could use other than Express.

4
00:00:10.150 --> 00:00:13.700
And over the next couple days,
as we introduce technology in this stack,

5
00:00:13.700 --> 00:00:16.520
I'll try to talk about some of
the other choices that are out there.

6
00:00:16.520 --> 00:00:20.836
Because again, I think one of the
strengths of the Node ecosystem is there

7
00:00:20.836 --> 00:00:23.006
are a million ways to do everything.

8
00:00:23.006 --> 00:00:24.260
While at the same time,

9
00:00:24.260 --> 00:00:28.610
a weakness of the Node ecosystem is that
there are a million ways to do everything.

10
00:00:28.610 --> 00:00:31.654
So I will try to cover some of
the other things that you can use.

11
00:00:31.654 --> 00:00:38.320
Hapi is another framework which is
focused on creating a server-side APIs.

12
00:00:38.320 --> 00:00:43.220
Although it can do server-side
HTML rendering just like any other

13
00:00:44.270 --> 00:00:45.139
framework out there.

14
00:00:46.170 --> 00:00:50.754
It's used in a lot of popular
Node web applications.

15
00:00:50.754 --> 00:00:57.810
It has a lot more features than Express,
a lot more behavior out of the box.

16
00:00:57.810 --> 00:01:01.540
Which can be a good or a bad thing,
depending on how you look at it.

17
00:01:01.540 --> 00:01:03.072
But it's another mature,

18
00:01:03.072 --> 00:01:07.340
robust framework out there that's
definitely worth your consideration.

19
00:01:07.340 --> 00:01:12.185
On the sort of the furthest end
of the spectrum from Express is

20
00:01:12.185 --> 00:01:14.374
a framework called Sails.

21
00:01:14.374 --> 00:01:18.651
Which strives to be sort of a full stack
framework in the tradition of Ruby

22
00:01:18.651 --> 00:01:19.840
on Rails.

23
00:01:19.840 --> 00:01:26.010
So it provides its own ORM,
its own configuration system,

24
00:01:26.010 --> 00:01:29.490
and sort of tries to pack in all of
the things that you probably need for

25
00:01:29.490 --> 00:01:34.330
a dynamic web application
into the same package.

26
00:01:34.330 --> 00:01:37.950
And it's pretty okay,
I know a few people who have used it.

27
00:01:37.950 --> 00:01:41.510
And if more of a full stack
framework appeals to you,

28
00:01:41.510 --> 00:01:43.622
it's definitely worth checking out.

29
00:01:43.622 --> 00:01:48.100
The caveat that I'll put out there
which is, again in my old age,

30
00:01:48.100 --> 00:01:51.860
the way I choose software is essentially,
I'm like, how well it's documented.

31
00:01:51.860 --> 00:01:55.930
Like how much effort do I have to
expend to do something useful with this

32
00:01:55.930 --> 00:01:57.380
piece of software?

33
00:01:57.380 --> 00:02:01.550
And Sails is documented okay, but

34
00:02:01.550 --> 00:02:05.360
the thing that's kind of a bummer is like
you don't find a lot of resources for it.

35
00:02:05.360 --> 00:02:09.341
Like there aren't a lot of people writing
Sails tutorials, or sample applications,

36
00:02:09.341 --> 00:02:10.438
and that sort of thing.

37
00:02:10.438 --> 00:02:15.200
So you'll find yourself in the wilderness
quite a lot when you're using Sails.

38
00:02:16.240 --> 00:02:20.070
The other one that I would throw out
there, which is sort of a forward-looking

39
00:02:20.070 --> 00:02:24.810
framework built by some of the same
people who built Express, is called Koa.

40
00:02:24.810 --> 00:02:27.190
And Koa had, in the past,

41
00:02:27.190 --> 00:02:32.900
you created a generator-based API for
serving HTTP requests.

42
00:02:32.900 --> 00:02:38.022
They're now moving towards like
fully embracing promises and

43
00:02:38.022 --> 00:02:44.604
the new async/await syntax that's
emerging in newer versions of JavaScript.

44
00:02:44.604 --> 00:02:48.319
But it's definitely
a bleeding-edge-type thing.

45
00:02:48.319 --> 00:02:51.319
And again,
cuz I'm a crusty old man like that,

46
00:02:51.319 --> 00:02:54.857
that bleeding-edge stuff gets old for
me pretty fast.

47
00:02:54.857 --> 00:02:58.397
But it's definitely a cool one
that's worth monitoring that.

48
00:02:58.397 --> 00:03:00.560
Could definitely pick up steam, so.

