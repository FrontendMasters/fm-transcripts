WEBVTT

1
00:00:00.000 --> 00:00:03.948
[MUSIC]

2
00:00:03.948 --> 00:00:08.317
&gt;&gt; Kevin Whinnery: Your challenge
should you choose to accept it is to

3
00:00:08.317 --> 00:00:13.519
implement Google Analytics on
our current to do NBC site and

4
00:00:13.519 --> 00:00:18.928
there's two basic pieces that
we can look at implementing and

5
00:00:18.928 --> 00:00:24.354
the one that you should do first,
start tracking page views.

6
00:00:24.354 --> 00:00:30.010
So initially, when the page is loaded,
we should track like for

7
00:00:30.010 --> 00:00:34.931
the URL, we should track a page view for
the right URL and

8
00:00:34.931 --> 00:00:40.099
then there's actually a router
within the application.

9
00:00:40.099 --> 00:00:42.805
If I go back here, I say, if I filter for

10
00:00:42.805 --> 00:00:46.413
active events or a complete or
active todo user all,

11
00:00:46.413 --> 00:00:51.593
these are actually different routes
that are just happening client side.

12
00:00:51.593 --> 00:00:55.388
And if you're doing a rich
JavaScript application,

13
00:00:55.388 --> 00:01:00.207
you wanna track these different
routes as page view events as well.

14
00:01:00.207 --> 00:01:04.449
So, what will wanna do is
have page movements fire for

15
00:01:04.449 --> 00:01:09.166
all of these different routes and
even though they're just

16
00:01:09.166 --> 00:01:14.664
happening in JavaScript will track
them as page views just the same.

17
00:01:14.664 --> 00:01:20.082
The signing up for
Google Analytics is very easy and

18
00:01:20.082 --> 00:01:25.122
it is free, and
you'll be given a tracking code

19
00:01:25.122 --> 00:01:33.201
that you can use with this handy dandy
module which is universal analytics.

20
00:01:42.172 --> 00:01:43.376
&gt;&gt; Kevin Whinnery: Where is that at?

21
00:01:43.376 --> 00:01:49.202
Maybe I'll just go to NPM directly.
&gt;&gt; Kevin Whinnery: It is just

22
00:01:49.202 --> 00:01:57.666
called Universal Analytics, I believe.
&gt;&gt; Kevin Whinnery: And after you sign up,

23
00:01:57.666 --> 00:02:03.134
you'll be able to install this
module require in your code and

24
00:02:03.134 --> 00:02:09.036
then on initialization pass in
your Google Analytics account ID.

25
00:02:09.036 --> 00:02:16.781
So once you have that, you can use like
some kind of unique user identifier.

26
00:02:16.781 --> 00:02:20.838
You wanna actually pass in any
personally identifying information.

27
00:02:20.838 --> 00:02:25.281
But if you have a UUID for
a given user, you can use that.

28
00:02:25.281 --> 00:02:29.440
Otherwise, you can just initialize
it with this tracking code.

29
00:02:30.890 --> 00:02:36.079
Once you have that, you can, there is
a bit of a delay before page view data

30
00:02:36.079 --> 00:02:40.936
starts showing up in Google Analytics,
but you can also start adding

31
00:02:40.936 --> 00:02:45.981
some logic to track specific page
views from within your application.

32
00:02:45.981 --> 00:02:49.838
And the second task,
if you get through this piece,

33
00:02:49.838 --> 00:02:52.476
we'll be tracking custom events.

34
00:02:52.476 --> 00:02:57.638
So for a visitor, you can fire a custom
event with a given category in

35
00:02:57.638 --> 00:03:03.266
a given action or with a label and
then there's also this optional value.

36
00:03:03.266 --> 00:03:07.154
And if there are events in your
application that are higher value

37
00:03:07.154 --> 00:03:08.018
than others,

38
00:03:08.018 --> 00:03:12.634
you can kind of configure those weights
within your event tracking as well.

39
00:03:12.634 --> 00:03:16.182
I actually don't use that piece
of functionality right now, so

40
00:03:16.182 --> 00:03:20.468
I wouldn't be able to tell you very much
about it, but that is a possibility.

41
00:03:20.468 --> 00:03:25.080
So the Lasko challenge of the day
is going to be implementing

42
00:03:25.080 --> 00:03:29.880
Google Analytics page view
tracking in our application, but

43
00:03:29.880 --> 00:03:35.526
with the caveat that we only want to
do it in the production environment.

44
00:03:35.526 --> 00:03:38.289
For testing, you could implement it for

45
00:03:38.289 --> 00:03:43.084
the development environment as well,
but you'll want to have a way to

46
00:03:43.084 --> 00:03:47.568
only enable Google Analytics in
your production environments.

47
00:03:47.568 --> 00:03:50.830
So, you're not firing off events and
page views during development.

