WEBVTT

1
00:00:00.000 --> 00:00:04.218
[MUSIC]

2
00:00:04.218 --> 00:00:08.947
&gt;&gt; Kevin Whinnery: What I'm gonna do
is basically deploy our to do MVC

3
00:00:08.947 --> 00:00:13.210
application to a production environment.

4
00:00:13.210 --> 00:00:17.410
And there's gonna be some kind of bumps
along the way because I'm gonna actually

5
00:00:17.410 --> 00:00:21.860
manually configure a few things after
the application has been deployed.

6
00:00:21.860 --> 00:00:27.436
But if you have a AWS account already,
you can feel free to follow

7
00:00:27.436 --> 00:00:32.597
along cuz these will be the same
steps that you will need to,

8
00:00:32.597 --> 00:00:37.347
that you will need to reproduce
after you know as we're

9
00:00:37.347 --> 00:00:41.813
trying to get the application
deployed yourself.

10
00:00:41.813 --> 00:00:47.899
So does everybody have

11
00:00:47.899 --> 00:00:53.349
an Amazon account?

12
00:00:53.349 --> 00:00:54.530
Like at least an Amazon developer account?

13
00:00:56.420 --> 00:00:59.460
So we did go so far as to sign up there.

14
00:00:59.460 --> 00:01:03.010
So the next thing that you'll want to do,
and I'll drop this in the,

15
00:01:06.060 --> 00:01:10.350
drop this in the chat,
is the Elastic Beanstalk

16
00:01:10.350 --> 00:01:13.000
command line interface is something
that you'll need to install.

17
00:01:13.000 --> 00:01:17.660
It's a Python utility that can be
installed on any on any platform.

18
00:01:17.660 --> 00:01:20.700
I'm looking at the docs right now but
let me drop it in the chat.

19
00:01:31.581 --> 00:01:33.171
&gt;&gt; Kevin Whinnery: And
if you have homebrew,

20
00:01:33.171 --> 00:01:36.960
it's actually fairly
easy to get installed.

21
00:01:36.960 --> 00:01:41.410
There's actually a brew package that
will do it do it right up for you.

22
00:01:41.410 --> 00:01:45.400
If you also have Python installed,
you can install it with Pip as well So

23
00:01:45.400 --> 00:01:46.730
let me go ahead and drop that in.

24
00:01:52.062 --> 00:01:55.205
&gt;&gt; Kevin Whinnery: So
if you want to go through the process of

25
00:01:55.205 --> 00:01:58.300
starting to get that installed.

26
00:01:58.300 --> 00:02:03.120
I will sort of slowly go
into the Amazon console and

27
00:02:03.120 --> 00:02:05.750
give you a little chance to
get that installed as we go.

28
00:02:07.270 --> 00:02:13.390
Because the first stop is gonna like once
you sign into your Amazon account which

29
00:02:13.390 --> 00:02:19.980
I am right now, you'll probably see a
dashboard that looks something like this,

30
00:02:21.290 --> 00:02:26.220
all deployed to a region that I
haven't deployed to yet, maybe.

31
00:02:26.220 --> 00:02:29.030
Or I guess I could go, US East.

32
00:02:29.030 --> 00:02:29.940
It doesn't really matter.

33
00:02:33.850 --> 00:02:38.226
&gt;&gt; Kevin Whinnery: All right, so
I'm gonna be creating my resources within

34
00:02:38.226 --> 00:02:44.960
the US East region, but first I need to
start by creating an API user for myself.

35
00:02:44.960 --> 00:02:48.890
So from the dashboard, I'm going to go
down to identity and access management.

36
00:02:51.000 --> 00:02:55.260
And these users are actually you
know shared across your account.

37
00:02:55.260 --> 00:02:59.910
So it doesn't matter which region
you're in for this particular one.

38
00:03:01.330 --> 00:03:05.739
So the first thing that you're going
to want to do is go down here to users.

39
00:03:06.990 --> 00:03:08.850
And create a new user.

40
00:03:10.240 --> 00:03:12.800
And you can give them
a user name of some kind.

41
00:03:12.800 --> 00:03:17.070
So I'll go through and
actually create one.

42
00:03:20.510 --> 00:03:22.820
Although I actually have
done this numerous times.

43
00:03:22.820 --> 00:03:25.020
So I already have one created.

44
00:03:25.020 --> 00:03:26.730
So once you create a user.

45
00:03:28.470 --> 00:03:33.640
You'll have the opportunity here in the
browser to see their security credentials

46
00:03:33.640 --> 00:03:38.630
which is going to be their secret key and
like a user ID.

47
00:03:38.630 --> 00:03:42.020
So you're gonna want to
download those credentials and

48
00:03:42.020 --> 00:03:45.640
keep those in a safe location because
it's not possible to retrieve them.

49
00:03:45.640 --> 00:03:50.420
If you lose them, you're gonna have to
regenerate credentials for the user for

50
00:03:50.420 --> 00:03:51.300
security reasons.

51
00:03:52.910 --> 00:03:55.610
So once you create a user,
download your credentials,

52
00:03:55.610 --> 00:03:57.886
store those in a safe location.

53
00:03:57.886 --> 00:04:03.560
Looks like is saying that he always
gets scared in the AWS console and

54
00:04:03.560 --> 00:04:08.460
that is wise as well as well you should
you know it's kind of a scary place.

55
00:04:08.460 --> 00:04:14.140
But hopefully we'll leave today with
it being a little bit less scary.

56
00:04:14.140 --> 00:04:18.010
So once we have those,
once we have those user created

57
00:04:19.810 --> 00:04:25.000
we're gonna want to add that user
to a group and this is different

58
00:04:25.000 --> 00:04:29.480
from the security groups that we'll be
talking about later but it's essentially.

59
00:04:29.480 --> 00:04:35.180
User group which gives them certain
permissions within the AWS infrastructure.

60
00:04:35.180 --> 00:04:40.250
So in my case, I only have one group
defined which is admins, which kind

61
00:04:40.250 --> 00:04:45.990
of gives God mode access to a user for
all of the resources in my AWS account.

62
00:04:45.990 --> 00:04:51.200
As a practical matter, most organizations
you'll work in that use Amazon,

63
00:04:51.200 --> 00:04:55.850
will have security groups with
much more granular restrictions.

64
00:04:55.850 --> 00:04:59.340
But if we look at that briefly,
just to give you an idea of what it is.

65
00:05:03.020 --> 00:05:04.780
&gt;&gt; Kevin Whinnery: Let's see.

66
00:05:07.719 --> 00:05:11.370
&gt;&gt; Kevin Whinnery: So
we can see the users that are in a group.

67
00:05:11.370 --> 00:05:18.050
And it's permissions and
Amazon has essentially like a language

68
00:05:18.050 --> 00:05:22.820
a DSL for determining like what
resources a given group or

69
00:05:22.820 --> 00:05:28.490
a given user has access to and
the administrator access policy.

70
00:05:28.490 --> 00:05:33.424
It's JSON based obviously and for
the administrators basically says

71
00:05:33.424 --> 00:05:38.475
that you can like all kinds of
actions on every kind of resource.

72
00:05:38.475 --> 00:05:40.575
So it's the most permissive one, but

73
00:05:40.575 --> 00:05:45.575
you can make these very tightly scoped to
specific products, to specific instances

74
00:05:45.575 --> 00:05:50.135
of services as granular as you feel
like you need those services to be.

75
00:05:51.299 --> 00:05:58.990
So once you've created, excuse me,

76
00:05:58.990 --> 00:06:05.690
a user added them to a group which has
sufficient permission to yes, question.

77
00:06:05.690 --> 00:06:07.620
&gt;&gt; Speaker 2: Some people ask you,
how you want to do this or

78
00:06:07.620 --> 00:06:08.740
you just want them to watch for now?

79
00:06:08.740 --> 00:06:10.860
And then they're gonna
go through themselves.

80
00:06:10.860 --> 00:06:14.170
Some people are behind but-
&gt;&gt; Kevin Whinnery: Yeah, I mean,

81
00:06:14.170 --> 00:06:19.440
I think that if you want to follow on,
that is totally fine.

82
00:06:19.440 --> 00:06:23.970
The first page of the documentation that I
put in the chat will also take you through

83
00:06:23.970 --> 00:06:25.490
the same process.

84
00:06:25.490 --> 00:06:27.530
So if you want it.

85
00:06:27.530 --> 00:06:30.820
For me, personally,
I like to see it and then do it.

86
00:06:30.820 --> 00:06:35.370
But I would recommend that you
probably watch at this time.

87
00:06:35.370 --> 00:06:37.930
And then try to try to recreate it.

88
00:06:37.930 --> 00:06:42.270
Because if we all try to do it together,
I don't think it will work.

89
00:06:42.270 --> 00:06:46.320
So we'll go through the process show you
the steps and then I'll help each of you

90
00:06:46.320 --> 00:06:52.280
get through it with the rest of the time
we have here this afternoon, right?

91
00:06:52.280 --> 00:06:57.320
So we create a user, we download our
credentials, we add that user to a group

92
00:06:57.320 --> 00:07:01.250
or give that user permissions to access
the resources that it's gonna need.

