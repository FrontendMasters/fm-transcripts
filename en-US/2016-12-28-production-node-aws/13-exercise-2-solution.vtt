WEBVTT

1
00:00:00.000 --> 00:00:04.078
[MUSIC]

2
00:00:04.078 --> 00:00:07.744
&gt;&gt; Kevin Whinnery: I think we'll go
ahead and go over some of the results.

3
00:00:07.744 --> 00:00:12.604
It looks like we had folks step
up to the challenge, once again,

4
00:00:12.604 --> 00:00:18.374
with some solutions that are looking
correct, like something we can ship.

5
00:00:18.374 --> 00:00:24.539
The first one I wanted to check
was the pull request from Lucas,

6
00:00:24.539 --> 00:00:32.960
here in the room, that added the uglify
configuration to the application.

7
00:00:32.960 --> 00:00:37.079
So what Lucas did here,
bump that up a little bit.

8
00:00:37.079 --> 00:00:42.893
So what Lucas did in the grunt file
is he added a new configuration for

9
00:00:42.893 --> 00:00:44.425
the uglify task.

10
00:00:44.425 --> 00:00:48.180
He created a target called my_target.

11
00:00:48.180 --> 00:00:52.130
Not a super descriptive name,
but I think I think it does work.

12
00:00:52.130 --> 00:00:55.150
We can probably follow on and
figure out something for that.

13
00:00:55.150 --> 00:01:00.927
I think in this case, maybe like dist or
something like that would be appropriate.

14
00:01:00.927 --> 00:01:05.898
But in this case,
we are gonna be taking app.js and

15
00:01:05.898 --> 00:01:08.590
writing it out to app.js.

16
00:01:08.590 --> 00:01:13.870
Now in this case, I probably would
have added like a .min.js or

17
00:01:13.870 --> 00:01:17.180
something to the to the end,
to sort of specify it.

18
00:01:18.310 --> 00:01:22.629
That it would be the minified
version rather than the regular

19
00:01:22.629 --> 00:01:24.415
uncompressed version.

20
00:01:24.415 --> 00:01:26.220
But that's generally
what we're looking for.

21
00:01:26.220 --> 00:01:32.449
We need this file,
which is public/app.js, to be uglified.

22
00:01:32.449 --> 00:01:38.508
And in this case,
we're gonna output it to the same file.

23
00:01:38.508 --> 00:01:42.251
Probably, we'd wanna do a different file,
but that's generally what we need.

24
00:01:42.251 --> 00:01:47.267
And then we also have
the uglify task loaded in

25
00:01:47.267 --> 00:01:53.800
from grunt-contrib,
which is exactly what we need.

26
00:01:53.800 --> 00:01:59.960
And then we also add in the uglify
task to the collect_static command.

27
00:01:59.960 --> 00:02:05.514
Which was the desired enhancement
that we had to the project.

28
00:02:05.514 --> 00:02:12.360
And we also required the 2.0 version
of uglify, which, I think, sounds fine.

29
00:02:12.360 --> 00:02:17.530
And actually here I just pulled
down Lucas' branch locally so

30
00:02:17.530 --> 00:02:19.290
I could check it out.

31
00:02:19.290 --> 00:02:24.309
So if we run grunt collect_static,

32
00:02:26.795 --> 00:02:29.390
&gt;&gt; Kevin Whinnery: That's
gonna run our browserify task.

33
00:02:29.390 --> 00:02:35.033
And then we also see that we ran
the uglify task successfully.

34
00:02:35.033 --> 00:02:40.721
And then if we look at our public
directory, which is the desired output,

35
00:02:40.721 --> 00:02:45.060
we definitely have some
uglified JavaScript in there.

36
00:02:45.060 --> 00:02:48.682
So a couple bits to tweak,
but that definitely works.

37
00:02:48.682 --> 00:02:51.880
So like, [APPLAUSE] excellent work,
Lucas, very nicely done.

38
00:02:51.880 --> 00:02:57.280
&gt;&gt; Speaker 2: How did he know to get
the version 2.0.-whatever of uglify?

39
00:02:57.280 --> 00:03:01.756
&gt;&gt; Kevin Whinnery: My guess is that
what he did was do npminstall--save

40
00:03:01.756 --> 00:03:04.430
grunt-contrib uglify.

41
00:03:04.430 --> 00:03:09.540
Which will add the latest
stable version of that

42
00:03:09.540 --> 00:03:14.640
track folder to npm,
your package.json, excuse me.

43
00:03:14.640 --> 00:03:20.370
So that's totally good, I think, well,
I may make a few minor modifications.

44
00:03:20.370 --> 00:03:23.930
And push it up before I push it into
master, but that's what we need.

45
00:03:23.930 --> 00:03:28.010
So you definitely get the free taco there.

46
00:03:28.010 --> 00:03:29.900
That's a lie,
there are no free tacos, sorry.

47
00:03:29.900 --> 00:03:31.696
I probably should have brought tacos.

48
00:03:31.696 --> 00:03:34.048
&gt;&gt; [LAUGH]
&gt;&gt; Kevin Whinnery: That would have been

49
00:03:34.048 --> 00:03:35.070
a good idea.

50
00:03:35.070 --> 00:03:41.520
All right, so let's take a look at one
of the other solutions that we had.

51
00:03:41.520 --> 00:03:43.880
So that was what we were looking for,
for uglify.

52
00:03:43.880 --> 00:03:50.649
And then we needed a npm script to look,
&gt;&gt; Kevin Whinnery: To

53
00:03:50.649 --> 00:03:53.110
actually run the migrations.

54
00:03:55.264 --> 00:03:58.124
&gt;&gt; Kevin Whinnery: So
we have one pull request for that, so

55
00:03:58.124 --> 00:04:00.127
let's let's take a look.

56
00:04:00.127 --> 00:04:05.445
All right, so this pull request
also includes the uglify solution,

57
00:04:05.445 --> 00:04:07.800
which is just fine.

58
00:04:07.800 --> 00:04:11.309
Usually we wanna keep one pull
request to one issue, but

59
00:04:11.309 --> 00:04:14.720
I won't wrist-slap very hard for
that here.

60
00:04:14.720 --> 00:04:15.232
I appreciate-

61
00:04:15.232 --> 00:04:16.770
&gt;&gt; Speaker 3: [INAUDIBLE]
&gt;&gt; Kevin Whinnery: What's that?

62
00:04:16.770 --> 00:04:17.730
&gt;&gt; Speaker 3: It didn't originally.

63
00:04:17.730 --> 00:04:19.825
I think he just forgot to branch.

64
00:04:19.825 --> 00:04:22.511
&gt;&gt; Kevin Whinnery: It's okay,
that's just fine.

65
00:04:22.511 --> 00:04:25.986
All right, so the key bit that we have

66
00:04:25.986 --> 00:04:30.145
here is the migrate
command was added here.

67
00:04:30.145 --> 00:04:33.865
Maybe it'll be a little bit easier
if we actually view the file.

68
00:04:35.950 --> 00:04:38.671
So we have this prestart command.

69
00:04:38.671 --> 00:04:44.601
And that's actually gonna be executed on
our Elastic Beanstalk instance before

70
00:04:44.601 --> 00:04:49.845
the server process is started to run
any pending database migrations.

71
00:04:49.845 --> 00:04:52.720
But we also wanted to
have a custom script.

72
00:04:52.720 --> 00:04:55.440
Because that prestart could
eventually do other things

73
00:04:56.520 --> 00:04:59.046
besides just run the migrations.

74
00:04:59.046 --> 00:05:02.190
So we created another task called migrate,

75
00:05:02.190 --> 00:05:07.040
which also used the local version
of sequelize to run the migrations.

76
00:05:08.340 --> 00:05:11.237
So just for the sake of expedience,

77
00:05:11.237 --> 00:05:15.300
I'll copy that just to
see what that's gonna do.

78
00:05:19.690 --> 00:05:22.748
&gt;&gt; Kevin Whinnery: And the thing
I was hinting at in the comments,

79
00:05:22.748 --> 00:05:25.965
if you were kind of reading
through that thread,

80
00:05:25.965 --> 00:05:30.673
is that the way that you invoke like
nonstandard npm scripts is slightly

81
00:05:30.673 --> 00:05:34.695
different than for
those that you would that run otherwise.

82
00:05:34.695 --> 00:05:39.921
So if I say like npm start,
&gt;&gt; Kevin Whinnery: That's

83
00:05:39.921 --> 00:05:41.022
gonna run the migrations.

84
00:05:41.022 --> 00:05:49.180
And it's going to start up my
development server process on port 3000.

85
00:05:49.180 --> 00:05:52.148
So npm already knows how to npm start.

86
00:05:52.148 --> 00:05:56.832
But if I say npm migrate,
it's gonna say, what?

87
00:05:56.832 --> 00:05:59.726
I don't know,
I don't know what a migrate is.

88
00:05:59.726 --> 00:06:03.644
So it's not one of the sort of built-in
commands that npm knows about.

89
00:06:03.644 --> 00:06:06.664
So rather than saying npm migrate,

90
00:06:06.664 --> 00:06:12.563
I'm gonna say npm run-script,
&gt;&gt; Kevin Whinnery: migrate,

91
00:06:12.563 --> 00:06:18.100
and then that's going to run my migrations
using the built-in sequelize module.

92
00:06:18.100 --> 00:06:23.102
So if you add commands to
the package.json that aren't part

93
00:06:23.102 --> 00:06:28.299
of the known set of npm commands,
you do have to add in that extra

94
00:06:28.299 --> 00:06:33.128
run-script prefix before you
could run those commands.

95
00:06:33.128 --> 00:06:34.680
So that was the bit that I
wanted to point out there.

