WEBVTT

1
00:00:00.000 --> 00:00:03.967
[MUSIC]

2
00:00:03.967 --> 00:00:08.820
&gt;&gt; Kevin Whinnery: The other key
player in our financial chain is SAS.

3
00:00:09.860 --> 00:00:14.730
SAS provides a superset of
CSS features as I said.

4
00:00:14.730 --> 00:00:22.075
If you write just plain CSS, that is
also a valid SAS or SCSS style sheet.

5
00:00:22.075 --> 00:00:24.781
But it provides a lot
more functionality that.

6
00:00:27.456 --> 00:00:31.649
&gt;&gt; Kevin Whinnery: I'm sorry browser if I
had there, I open the chat James actually

7
00:00:31.649 --> 00:00:36.386
corrected me the browser stuff in
this project is largely, is in

8
00:00:36.386 --> 00:00:41.710
the grunt file but some of the transform
configuration is in the package.JSON.

9
00:00:41.710 --> 00:00:46.758
So, some of the browser if I transforms
expect to find their configuration and

10
00:00:46.758 --> 00:00:49.599
package.JSON which is why that's there.

11
00:00:49.599 --> 00:00:54.286
But some of the transformations are
actually configured in the current file.

12
00:00:54.286 --> 00:00:57.047
I think in this in this instance.

13
00:00:57.047 --> 00:00:58.364
Thank you for the clarification there.

14
00:01:01.396 --> 00:01:05.684
&gt;&gt; Kevin Whinnery: So in terms of SAS,
it gives us the ability

15
00:01:05.684 --> 00:01:10.600
to better modularize our CSS, essentially.

16
00:01:10.600 --> 00:01:15.053
It allows us to write our Or CSS like we
would write our code, so in our code,

17
00:01:15.053 --> 00:01:19.156
we wouldn't write the same thing over,
and over, and over again for

18
00:01:19.156 --> 00:01:23.520
different classes, but in CSS that's
essentially what you have to do.

19
00:01:23.520 --> 00:01:27.915
If you want to use you'll find that
you're using the same font family,

20
00:01:27.915 --> 00:01:32.827
declaration for multiple elements and
it's possible to write CSS such that you

21
00:01:32.827 --> 00:01:36.950
don't repeat yourself a lot but
invariably you end up doing that.

22
00:01:36.950 --> 00:01:40.680
So SAS provides the ability to
create things called mixin.

23
00:01:40.680 --> 00:01:43.660
Which allows you to have
better modularization.

24
00:01:43.660 --> 00:01:47.849
In your JavaScript code you
can earn your x here SAS code.

25
00:01:47.849 --> 00:01:52.411
So you can essentially integrate sets of,

26
00:01:52.411 --> 00:01:55.714
functionality into your CSS.

27
00:01:55.714 --> 00:02:02.410
And sort of reuse those mixed
ends all across your SAS code.

28
00:02:02.410 --> 00:02:07.460
The other bit that it allows you to do,
is to specify variables.

29
00:02:07.460 --> 00:02:13.319
And import external SAS style sheets,
basically anywhere within your SAS.

30
00:02:14.960 --> 00:02:17.830
Both are fairly critical features,
especially like when

31
00:02:17.830 --> 00:02:21.910
you're talking about colors and
other sort of site-wide design elements.

32
00:02:21.910 --> 00:02:26.470
Being able to assign those to variables
that you can use in multiple places and

33
00:02:26.470 --> 00:02:27.380
then change once,

34
00:02:27.380 --> 00:02:30.870
and then watch those changes
propagate everywhere in your styles.

35
00:02:30.870 --> 00:02:33.148
That being pretty clutch.

36
00:02:33.148 --> 00:02:38.590
SAS also comes with a fast
as c based compiler.

37
00:02:38.590 --> 00:02:41.110
So it's fairly performance
when you're actually

38
00:02:41.110 --> 00:02:43.915
compiling the style sheets as well.

39
00:02:43.915 --> 00:02:46.190
&gt;&gt; Speaker 2: An you talk a little
bit about the advantages or

40
00:02:46.190 --> 00:02:47.919
disadvantages of SAS over less.

41
00:02:49.470 --> 00:02:50.830
&gt;&gt; Kevin Whinnery: Yeah I mean actually,

42
00:02:50.830 --> 00:02:53.580
that's a well just skip
ahead a little bit so.

43
00:02:53.580 --> 00:02:58.216
It's fairly interchangeable
with less in terms of style.

44
00:02:58.216 --> 00:03:05.230
I think it comes down to
preference largely Sass.

45
00:03:06.430 --> 00:03:11.440
Is cross-platform I think last
is Node.js only, if I'm not

46
00:03:11.440 --> 00:03:14.810
mistaken out you can probably run it and
you can probably use it everywhere,

47
00:03:14.810 --> 00:03:17.750
I'm sure it'll work just fine
with other environments as well.

48
00:03:17.750 --> 00:03:18.450
But yeah.
&gt;&gt; Speaker 3: I'm gonna

49
00:03:18.450 --> 00:03:22.970
extend the question, why would choose only
bootstrap three and like jQuery UI for

50
00:03:22.970 --> 00:03:23.569
some of the stuff?

51
00:03:25.040 --> 00:03:28.340
&gt;&gt; Kevin Whinnery: So those tools,
like the question if you didn't hear it,

52
00:03:28.340 --> 00:03:32.900
was why wouldn't you use Bootstrap 3 or
jQuery UI for stuff like this?

53
00:03:32.900 --> 00:03:35.606
And those tools actually serve
a slightly different purpose.

54
00:03:35.606 --> 00:03:42.060
So like jQuery UI provide a set
of CSS classes that you can apply

55
00:03:42.060 --> 00:03:46.689
to objects, to make them look nice and
turn into drop-downs and stuff like that.

56
00:03:47.990 --> 00:03:51.420
But for authoring your own styles for
your own components,

57
00:03:51.420 --> 00:03:55.720
you probably will be authoring
CSS from scratch, anyway.

58
00:03:55.720 --> 00:04:02.190
And Bootstrap and jQuery UI help with some
prebuilt classes that you can use for

59
00:04:02.190 --> 00:04:06.660
grids, and those tools work
really well with Sass or Less.

60
00:04:06.660 --> 00:04:08.320
In fact, Bootstrap.

61
00:04:08.320 --> 00:04:12.490
One of the things you can
do if you're using Sass.

62
00:04:12.490 --> 00:04:15.940
And I know at one point,
they had less styles as well.

63
00:04:15.940 --> 00:04:20.090
But I feel like maybe at one
point they converted to Sass.

64
00:04:20.090 --> 00:04:22.100
I'll have to check on that specifically.

65
00:04:22.100 --> 00:04:27.340
But, if you actually download
the bootstrap Sass files,

66
00:04:27.340 --> 00:04:33.740
you can import them into your own
styles and use only the parts

67
00:04:33.740 --> 00:04:38.210
of the bootstrap styles that you're
actually leveraging in your application.

68
00:04:39.790 --> 00:04:41.500
And which ends up being a little

69
00:04:43.150 --> 00:04:46.824
lighter weight then including a larger
package that you didn't customize.

70
00:04:46.824 --> 00:04:52.100
There are also similar to bootstrap
is a framework called a UI kit,

71
00:04:52.100 --> 00:04:55.360
which I would definitely
recommend you check out.

72
00:04:55.360 --> 00:05:00.830
Which provides a set of Sass mix-ins and

73
00:05:00.830 --> 00:05:05.180
other bits that you can actually include
in your own CSS to create like CSS3

74
00:05:05.180 --> 00:05:09.310
transformations and
useful things like that.

75
00:05:09.310 --> 00:05:14.567
So it provides useful mix-ins, responsive
breakpoints and stuff like like that.

76
00:05:14.567 --> 00:05:15.564
&gt;&gt; Speaker 3: Thank you.

77
00:05:15.564 --> 00:05:19.064
&gt;&gt; Kevin Whinnery: Yes no problem.

78
00:05:19.064 --> 00:05:22.353
But yes so
less per served largely the same purpose,

79
00:05:22.353 --> 00:05:24.680
and it's fairly interchangeable.

80
00:05:27.290 --> 00:05:28.420
At this point, for

81
00:05:28.420 --> 00:05:32.599
me it's more of a preference thing
usually I like SAS a little better.

82
00:05:35.632 --> 00:05:40.337
&gt;&gt; Kevin Whinnery: And the Webpack as
long as we're here on the alternates tip,

83
00:05:40.337 --> 00:05:45.042
is also provides like a module
bundling functionality based

84
00:05:45.042 --> 00:05:48.480
on the new ECMAScript module system.

85
00:05:48.480 --> 00:05:53.830
It also provides some other module
bundling features and functionality,

86
00:05:54.840 --> 00:06:00.090
also fully legit,
it also has a growing set of plugins.

87
00:06:01.510 --> 00:06:07.000
And, I think at this point
because browser around longer.

88
00:06:07.000 --> 00:06:09.900
I think it has a richer
set of transformations and

89
00:06:09.900 --> 00:06:13.345
plugins that can be brought
to bear using browser Fi, but

90
00:06:13.345 --> 00:06:18.610
Webpacks has a large and thriving
community of plugin developers as well.

91
00:06:18.610 --> 00:06:23.430
So again, fully a valid choice if
you wanna go in that direction.

