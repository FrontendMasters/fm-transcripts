WEBVTT

1
00:00:00.000 --> 00:00:03.889
[MUSIC]

2
00:00:03.889 --> 00:00:07.510
&gt;&gt; Kevin Whinnery: Now, we get to what
I hope will be one of the fun part

3
00:00:07.510 --> 00:00:10.097
of the day, one of many hopefully,

4
00:00:10.097 --> 00:00:15.560
where we spend a lot of time actually
hacking on this application.

5
00:00:15.560 --> 00:00:20.380
Now, unfortunately you guys have all ready
found a few bugs that I did not intend

6
00:00:20.380 --> 00:00:22.200
to put in the application,

7
00:00:22.200 --> 00:00:25.390
specifically around the read
me in the setup experience.

8
00:00:25.390 --> 00:00:29.250
However, there are actually a lot
of things in this application,

9
00:00:29.250 --> 00:00:31.950
that leave something to be desired.

10
00:00:31.950 --> 00:00:37.510
In fact, you could say,
that I have issues, in fact many of them,

11
00:00:37.510 --> 00:00:42.270
seven at the moment that
I could use your help on.

12
00:00:42.270 --> 00:00:46.320
So, what I would like to do over the next,
we'll see how long it takes,

13
00:00:46.320 --> 00:00:50.200
maybe 20 minutes,
to a half hour, maybe more.

14
00:00:50.200 --> 00:00:52.420
We can kind of play it by ear.

15
00:00:52.420 --> 00:00:57.124
I have a three GitHub issues
here labeled exercise 1.

16
00:00:58.280 --> 00:01:03.560
And those are GitHub,
are those issues are around features or

17
00:01:03.560 --> 00:01:09.190
problems with the application, that I
would like for us to collectively add.

18
00:01:09.190 --> 00:01:12.824
So, what I would like for you to do,
is to pick one of these issues, or

19
00:01:12.824 --> 00:01:17.179
get through all of them if you're if
you're feeling particularly industrious.

20
00:01:17.179 --> 00:01:19.196
And try to add the feature or

21
00:01:19.196 --> 00:01:24.790
correct the problem that is described
in one of these GitHub issues.

22
00:01:24.790 --> 00:01:30.390
So, for example, Issue number seven is for
a feature edition.

23
00:01:30.390 --> 00:01:39.070
So, at Twilio, all of our HTP APIs We will
return a header called X-Shenanigans-None,

24
00:01:39.070 --> 00:01:42.260
because one of our core values
as a company is no shenanigans.

25
00:01:42.260 --> 00:01:46.640
So, we return this header with
every response from the API.

26
00:01:46.640 --> 00:01:52.550
But, sadly, this API for to do's,
does not return the X-Shenanigans header.

27
00:01:52.550 --> 00:01:58.200
So, we should look at expanding
the implementation we have with express

28
00:01:58.200 --> 00:02:02.890
to add that header to every request
that served our to do's API.

29
00:02:02.890 --> 00:02:06.360
So, we could send it
back with every request.

30
00:02:06.360 --> 00:02:11.600
But I've scoped it here to say,
only do this for the to do's route.

31
00:02:11.600 --> 00:02:17.842
See if we can forward those API requests
return back this X-Shenanigans header.

32
00:02:17.842 --> 00:02:19.310
So, that's one of the things
you could tackle.

33
00:02:19.310 --> 00:02:23.080
Another thing you might want
to tackle is this piece,

34
00:02:23.080 --> 00:02:28.500
which is not sending a powered by
express header with every response.

35
00:02:28.500 --> 00:02:34.410
So, if you were to look here at this
application, which is already running.

36
00:02:34.410 --> 00:02:38.077
In the Network tab, in web inspector.

37
00:02:41.463 --> 00:02:42.165
&gt;&gt; Kevin Whinnery: Where's this gonna be?

38
00:02:45.668 --> 00:02:46.168
&gt;&gt; Kevin Whinnery: Where's my?

39
00:02:47.390 --> 00:02:49.250
Here we go.
I just have to click

40
00:02:49.250 --> 00:02:50.650
on the resource there.

41
00:02:50.650 --> 00:02:55.110
So, if you look at the headers there
are sent back with the response.

42
00:02:55.110 --> 00:03:00.091
There is a X-Power-By: Express header
that gets returned by default in

43
00:03:00.091 --> 00:03:01.866
an Express Application.

44
00:03:01.866 --> 00:03:06.632
And it's innocuous enough, but when
you're taking an Express Application to

45
00:03:06.632 --> 00:03:11.113
production, usually you don't want
to include that extra information,

46
00:03:11.113 --> 00:03:14.070
because it's possible that an evil doer.

47
00:03:14.070 --> 00:03:16.880
Could launch a targeted
attack on your application

48
00:03:16.880 --> 00:03:20.160
with the knowledge of what web
framework you're using on the backend.

49
00:03:20.160 --> 00:03:22.820
So, it's not the hugest deal in the world,

50
00:03:22.820 --> 00:03:27.710
but if it's a good thing not to do
in a production node application.

51
00:03:27.710 --> 00:03:32.430
So, removing or disabling that
header is a good thing to do.

52
00:03:32.430 --> 00:03:34.287
The other piece that you
might take a look at.

53
00:03:36.845 --> 00:03:39.690
&gt;&gt; Kevin Whinnery: Is the logging
middleware for Express.

54
00:03:39.690 --> 00:03:44.791
So, right now, we don't use very
much middleware in the application.

55
00:03:44.791 --> 00:03:49.769
And one of the things that would be nice
to do would be actually to log the HTTP

56
00:03:49.769 --> 00:03:53.780
traffic, that's coming
into the application.

57
00:03:53.780 --> 00:03:57.300
So, there's lots of modules
out there that do this.

58
00:03:57.300 --> 00:03:59.349
I've linked to one called Morgan,

59
00:03:59.349 --> 00:04:02.638
which is very popular to use
with Express applications.

60
00:04:02.638 --> 00:04:07.198
So, adding some HTTP request
logging middleware would be

61
00:04:07.198 --> 00:04:09.810
a nice feature to take on as well.

62
00:04:10.810 --> 00:04:16.010
So, if you would like to take one of these
on, you can just hack on it locally,

63
00:04:17.100 --> 00:04:20.870
and if you are comfortable
with the Git workflow,

64
00:04:20.870 --> 00:04:25.070
you can actually send a pull
request to this repository.

65
00:04:25.070 --> 00:04:30.070
With the implementation of the feature
that you implemented, and if we have you

66
00:04:30.070 --> 00:04:34.430
know if in 20 to 30 minutes time a few
pull requests that show how to do this.

67
00:04:34.430 --> 00:04:36.520
I'll go ahead and merge them in.

68
00:04:36.520 --> 00:04:39.490
Otherwise, I will cheat and

69
00:04:39.490 --> 00:04:45.020
I will show you how it is to
implement each of these bits.

70
00:04:45.020 --> 00:04:48.490
But I would vastly prefer to merge
a poor request from one of you.

71
00:04:48.490 --> 00:04:50.610
So, if you would like to take on one or

72
00:04:50.610 --> 00:04:54.120
three of these issues in
the next 20 to 30 minutes.

73
00:04:54.120 --> 00:04:55.910
We'll say 30 minutes,

74
00:04:55.910 --> 00:04:59.270
cuz there are still a few folks that
are getting their environment set up.

75
00:04:59.270 --> 00:05:04.200
But we'll play it by or no sooner than
30 minutes will we reconvene, and

76
00:05:04.200 --> 00:05:05.530
talk about some of the solutions.

