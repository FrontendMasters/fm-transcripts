WEBVTT

1
00:00:00.000 --> 00:00:03.809
[MUSIC]

2
00:00:03.809 --> 00:00:07.340
&gt;&gt; Kevin Whinnery: You all have risen
to the challenge very effectively here.

3
00:00:07.340 --> 00:00:08.150
Good job team.

4
00:00:08.150 --> 00:00:09.350
I knew you could do it.

5
00:00:09.350 --> 00:00:13.060
I had nothing but the utmost confidence.

6
00:00:13.060 --> 00:00:17.730
I perused the poll request that came
in for these specific issues and

7
00:00:17.730 --> 00:00:22.980
we have great solutions for
all three issues.

8
00:00:22.980 --> 00:00:28.570
So we have two that are clearly winter
like there what I was looking for

9
00:00:28.570 --> 00:00:33.760
and then we have one that is correct,
and one that is more correct.

10
00:00:33.760 --> 00:00:37.410
So look at both the correct one and
the more correct one.

11
00:00:37.410 --> 00:00:45.780
So number, one we got from 1267 who I
imagine is hanging out on the live stream.

12
00:00:45.780 --> 00:00:47.060
So what's up buddy?

13
00:00:47.060 --> 00:00:47.560
Good job.

14
00:00:49.170 --> 00:00:55.110
This is the most minimal edition of the
morgan logger that we could have added.

15
00:00:55.110 --> 00:00:58.910
So what he did was he NPM
installed that module,

16
00:00:59.980 --> 00:01:05.220
using probably the --save command,
or he might have added it manually.

17
00:01:05.220 --> 00:01:07.500
That also is a possibility.

18
00:01:07.500 --> 00:01:10.780
But when you know that
you wanna add another

19
00:01:10.780 --> 00:01:13.290
module to your projects dependencies.

20
00:01:13.290 --> 00:01:16.294
You can execute this command npm install.

21
00:01:16.294 --> 00:01:21.750
And then --save will actually write

22
00:01:21.750 --> 00:01:26.940
the dependency to your package.json,
so that the next time another

23
00:01:26.940 --> 00:01:31.320
developer npm installs your project
they will get that dependency as well.

24
00:01:31.320 --> 00:01:33.540
So it's always a best practice when you

25
00:01:35.560 --> 00:01:38.530
added dependency to add it to
the package.jason as well.

26
00:01:38.530 --> 00:01:42.080
And npm install -- save is usually
the best way to do that and

27
00:01:42.080 --> 00:01:45.190
lock in the current version of the module.

28
00:01:45.190 --> 00:01:49.930
Probably all we had here was
an npm install --save Morgan

29
00:01:49.930 --> 00:01:55.420
which would add that dependency to
our packaged.json as we have here.

30
00:01:55.420 --> 00:02:01.260
And then we require the Morgan module and
by the default

31
00:02:01.260 --> 00:02:07.430
behavior of Morgan is to log
HD pure quest to standard out.

32
00:02:07.430 --> 00:02:10.900
And he's mounted that middleware there

33
00:02:12.120 --> 00:02:15.630
in front of just about
everything else on here.

34
00:02:15.630 --> 00:02:21.066
So we will get that HTTP logging
output on every request to the server.

35
00:02:21.066 --> 00:02:24.179
So I'm gonna go ahead and plus one that.

36
00:02:27.966 --> 00:02:29.380
&gt;&gt; Kevin Whinnery: So plus one for me.

37
00:02:29.380 --> 00:02:31.961
And I'm gonna merge that down,
so good work.

38
00:02:31.961 --> 00:02:32.461
&gt;&gt; Speaker 2: [COUGH].

39
00:02:36.000 --> 00:02:37.380
&gt;&gt; Kevin Whinnery: Will pull that
down here in just a little bit.

40
00:02:38.400 --> 00:02:44.450
All right, so the other we did
was to take a look at removing

41
00:02:44.450 --> 00:02:48.860
that X powered by, Actually will do that
last because that has the two answers.

42
00:02:48.860 --> 00:02:54.880
The other one was adding an extra
shenanigans none header to the response.

43
00:02:56.040 --> 00:03:01.510
So we have a couple of submissions there,

44
00:03:01.510 --> 00:03:06.940
so we'll go to this one from
James that fixes number seven and

45
00:03:06.940 --> 00:03:10.720
this is probably the lightest
weight way of doing it.

46
00:03:10.720 --> 00:03:14.090
In the Web App.js,

47
00:03:14.090 --> 00:03:19.660
he added a new middleware just declared
it in line which is probably fine.

48
00:03:19.660 --> 00:03:21.340
He could have created another file.

49
00:03:21.340 --> 00:03:23.260
Probably, would've been overkill here.

50
00:03:23.260 --> 00:03:28.780
He sets the extra shenanigans header
on the response using response .set

51
00:03:28.780 --> 00:03:33.784
which is a method available on an express
response, express decorated HTTP

52
00:03:33.784 --> 00:03:40.070
response object and then he calls next to
move on to the next piece of middleware.

53
00:03:40.070 --> 00:03:44.940
And that's all we need to do,
to add that header to do his route.

54
00:03:44.940 --> 00:03:51.614
So I'm gonna plus one that, for
great work, and I'm gonna merge it down.

55
00:03:54.977 --> 00:03:56.460
&gt;&gt; Kevin Whinnery: Awesome.

56
00:03:56.460 --> 00:04:03.530
So now, for
the removing the power by express issue.

57
00:04:03.530 --> 00:04:07.380
We had a couple approaches both
of which are both of which work.

58
00:04:07.380 --> 00:04:09.870
One of which is slightly more correct.

59
00:04:09.870 --> 00:04:13.732
So let's see if I can find the one, okay.

60
00:04:13.732 --> 00:04:18.195
So this is the version

61
00:04:18.195 --> 00:04:22.765
which is correct, but
not as correct as it could be.

62
00:04:22.765 --> 00:04:27.755
So here we've defined
a global middleware which

63
00:04:27.755 --> 00:04:33.060
is gonna be executed on every request
that will remove that header X powered by

64
00:04:33.060 --> 00:04:35.100
from every response that we send back.

65
00:04:35.100 --> 00:04:37.530
And that will have the desired effect.

66
00:04:37.530 --> 00:04:39.840
But it will also execute
on every single request.

67
00:04:39.840 --> 00:04:41.960
So it's a little bit inefficient.

68
00:04:41.960 --> 00:04:46.610
We don't necessarily need to take that
header off on every single request

69
00:04:46.610 --> 00:04:48.390
to the to the server.

70
00:04:48.390 --> 00:04:56.020
So probably what we want to do is I
actually disable that option in Express.

71
00:04:56.020 --> 00:05:02.080
So I think we have a pull request here,
which does just that.

72
00:05:02.080 --> 00:05:07.420
So within the configuration options for
express,

73
00:05:07.420 --> 00:05:13.590
so on an express app,
it has a set and a get function and

74
00:05:13.590 --> 00:05:18.860
those will set configuration properties,
and also get configuration properties.

75
00:05:18.860 --> 00:05:21.220
I mean in this case he is setting
a configuration property,

76
00:05:21.220 --> 00:05:26.250
this x bar powered by header to false,
so express will never send it at all.

77
00:05:26.250 --> 00:05:27.190
Yes question?

78
00:05:27.190 --> 00:05:31.765
&gt;&gt; Speaker 2: Is there any meaningful
difference between doing this method of

79
00:05:31.765 --> 00:05:37.760
.sets for the header to false And
doing it .disable

80
00:05:37.760 --> 00:05:42.670
of the entire header [INAUDIBLE]
.disable the next power by specifically.

81
00:05:42.670 --> 00:05:46.160
&gt;&gt; Speaker 3: This one's not
a header it's a config value.

82
00:05:46.160 --> 00:05:47.460
&gt;&gt; Speaker 2: Okay, so this one are apps.

83
00:05:47.460 --> 00:05:49.020
Where is the other it was on response.

84
00:05:51.410 --> 00:05:55.100
&gt;&gt; Speaker 3: Right, but
you can also do at least according to

85
00:05:55.100 --> 00:05:59.630
the interweaves you can do
app.disable X powered by

86
00:05:59.630 --> 00:06:03.370
in the same area in webapp.js
in the rest of the middleware.

87
00:06:03.370 --> 00:06:05.600
&gt;&gt; Kevin Whinnery: Yeah, I believe
there's also a signature there for

88
00:06:05.600 --> 00:06:08.000
disable for Boolean properties.

89
00:06:08.000 --> 00:06:13.440
So this is expressly just
setting a property to false.

90
00:06:13.440 --> 00:06:18.130
Disable I believe toggles a Boolean
property, like X powered by to false.

91
00:06:18.130 --> 00:06:19.950
So they're equivalent in this case.

92
00:06:21.520 --> 00:06:25.790
So the correct guess to might have
been app.disable X powered by it

93
00:06:25.790 --> 00:06:28.610
would have saved us
a couple characters there.

94
00:06:28.610 --> 00:06:29.420
If we wanted to go that way.

95
00:06:30.770 --> 00:06:33.860
So go back out here.

96
00:06:35.210 --> 00:06:36.930
Got some plus ones.

97
00:06:36.930 --> 00:06:38.840
James added some docs look at you.

98
00:06:39.930 --> 00:06:41.565
Good work.
I'm gonna add my own plus one.

99
00:06:44.767 --> 00:06:45.794
&gt;&gt; Kevin Whinnery: And
we're gonna merge it down.

100
00:06:51.557 --> 00:06:53.360
&gt;&gt; Kevin Whinnery: Super job.

101
00:06:53.360 --> 00:06:59.230
So now if we go back out here,
we've got some add logging middleware.

102
00:07:00.800 --> 00:07:03.830
I thought we would have closed this out.

103
00:07:05.510 --> 00:07:09.050
So I think we just didn't mention it
in the commit message, which is fine.

104
00:07:09.050 --> 00:07:13.080
I'm gonna go ahead and close this out.

105
00:07:13.080 --> 00:07:16.347
So 30 minutes later,
we just knocked out two or

106
00:07:16.347 --> 00:07:19.310
three GitHub issues on our project,
so great work.

107
00:07:19.310 --> 00:07:20.770
We're gonna do that again.

108
00:07:20.770 --> 00:07:22.690
A couple more times here today.

109
00:07:22.690 --> 00:07:26.700
And then I got a fresh batch that
I'm gonna load in there tomorrow for

110
00:07:26.700 --> 00:07:29.130
you guys to go crazy on as well.

111
00:07:29.130 --> 00:07:32.890
So knocked this first one out of the park,
very nicely done.

