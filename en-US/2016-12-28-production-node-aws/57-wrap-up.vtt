WEBVTT

1
00:00:00.000 --> 00:00:03.900
[MUSIC]

2
00:00:03.900 --> 00:00:06.830
&gt;&gt; Kevin Whinnery: Any questions on
Google Analytics before we wrap it up?

3
00:00:06.830 --> 00:00:10.820
&gt;&gt; Speaker 2: There was somebody was
asking if you use load balancing for

4
00:00:10.820 --> 00:00:11.883
the Postgres?

5
00:00:11.883 --> 00:00:12.405
&gt;&gt; Kevin Whinnery: Yes.

6
00:00:12.405 --> 00:00:18.220
So, there isn't a load balancer
in front of Postgres there.

7
00:00:18.220 --> 00:00:23.083
If you use RDS,
they do have a master-slave setu,p and

8
00:00:23.083 --> 00:00:30.031
there's a fair degree of resilience
that's just built into that as a service.

9
00:00:30.031 --> 00:00:33.659
But there isn't a load
balancer on top of Postgres,

10
00:00:33.659 --> 00:00:39.027
mostly because like the, it's not exactly
the same as like an HTTP request.

11
00:00:39.027 --> 00:00:43.323
We actually have a number
of open TCP connections

12
00:00:43.323 --> 00:00:48.263
between our EC2 instances and
our Postgres instance.

13
00:00:48.263 --> 00:00:52.852
It can handle quite a few
concurrent open connections,

14
00:00:52.852 --> 00:00:57.450
but it doesn't sort of handle
traffic in that same way.

15
00:00:58.810 --> 00:01:01.525
So there isn't a load balancer
in front of Postgres, per se.

16
00:01:12.730 --> 00:01:19.350
&gt;&gt; Kevin Whinnery: Cool, so
it's all we're gonna cover.

17
00:01:19.350 --> 00:01:22.780
Obviously we haven't
covered the entire universe

18
00:01:22.780 --> 00:01:25.900
of what's going to be necessary to get to.

19
00:01:25.900 --> 00:01:27.548
Get your application into production.

20
00:01:27.548 --> 00:01:32.192
But the hope is that,
the application that we've presented and

21
00:01:32.192 --> 00:01:37.696
worked on together over the last couple
days gives you the starting point for

22
00:01:37.696 --> 00:01:40.830
getting your application out the door.

23
00:01:40.830 --> 00:01:46.066
We've integrated in this application a lot
of tools and technologies that you will

24
00:01:46.066 --> 00:01:51.247
bring to bear If you're gonna actually
operate this application in production.

25
00:01:51.247 --> 00:01:56.121
The build tooling,
the technology stack, the monitoring,

26
00:01:56.121 --> 00:02:00.807
the ability to understand
the performance implications of

27
00:02:00.807 --> 00:02:04.661
your application after
it''s been deployed.

28
00:02:04.661 --> 00:02:09.890
Infrastructure that with some
tuning can be made to handle

29
00:02:09.890 --> 00:02:15.590
a whole bunch of load for
a reasonably sized web application.

30
00:02:15.590 --> 00:02:19.580
So what I hope you'll walk
away from is a starting point

31
00:02:19.580 --> 00:02:22.760
to start building your own stack,
but if you start from this one and

32
00:02:22.760 --> 00:02:26.620
just build on top of it,
I think you'll ultimately be pretty happy.

33
00:02:26.620 --> 00:02:33.660
And if you have any questions as you go,
my email address is KW@twilio.com.

34
00:02:33.660 --> 00:02:36.570
I'd be happy to answer any questions

35
00:02:36.570 --> 00:02:39.910
that you might have to
the very best of my ability.

36
00:02:39.910 --> 00:02:42.930
I'm on the Twitters @KevinWhinnery,

37
00:02:42.930 --> 00:02:47.110
so you can follow me there as well
where I mostly talk about nerd stuff.

38
00:02:47.110 --> 00:02:48.593
And I'm really grateful for

39
00:02:48.593 --> 00:02:52.501
having had the chance to spend this
time with you over the last couple days.

40
00:02:52.501 --> 00:02:53.353
And I'll hang out today.

41
00:02:53.353 --> 00:02:57.360
I know a couple of you are still
trying to get stuff running, so

42
00:02:57.360 --> 00:03:00.441
I'm happy to stay here
until everybody is up and

43
00:03:00.441 --> 00:03:03.852
running with as much of
the stack as they would like.

44
00:03:03.852 --> 00:03:06.324
So thank you very much, I appreciate it.

45
00:03:06.324 --> 00:03:11.464
&gt;&gt; [APPLAUSE]

