WEBVTT

1
00:00:00.000 --> 00:00:03.656
[MUSIC]

2
00:00:03.656 --> 00:00:07.634
&gt;&gt; Kevin Whinnery: Now we're
actually ready to start creating

3
00:00:07.634 --> 00:00:11.504
the Elastic Beanstalk application and for

4
00:00:11.504 --> 00:00:16.353
that I'm actually gonna go
back to the command line.

5
00:00:16.353 --> 00:00:21.100
To kind of show you what this looks like
end to end, I'm actually gonna clone

6
00:00:21.100 --> 00:00:24.734
this project fresh to show you
exactly what would happen if

7
00:00:24.734 --> 00:00:29.571
you're executing this as we usually do
on a continuous integration server.

8
00:00:29.571 --> 00:00:33.510
These are the steps that would happen to
actually deploy this application with

9
00:00:33.510 --> 00:00:36.507
the exception of actually
initializing the application.

10
00:00:36.507 --> 00:00:39.051
So I'm gonna go.

11
00:00:42.318 --> 00:00:43.201
&gt;&gt; Kevin Whinnery: Oops.

12
00:00:50.992 --> 00:00:57.165
&gt;&gt; Kevin Whinnery: So you can see I have
practiced this once before, once or twice.

13
00:01:00.576 --> 00:01:04.367
&gt;&gt; Kevin Whinnery: All right, so
I'm pulling down the application and

14
00:01:04.367 --> 00:01:08.505
when I'm ready to actually
start deploying this thing,

15
00:01:08.505 --> 00:01:12.224
the first thing I'm gonna
do is I'm gonna cd oops.

16
00:01:14.812 --> 00:01:16.320
&gt;&gt; Kevin Whinnery: Into
the application directory.

17
00:01:17.740 --> 00:01:21.770
And I'm going to type the command
like at this point I assume that

18
00:01:23.880 --> 00:01:26.240
we have the 8WS CLI installed.

19
00:01:26.240 --> 00:01:31.384
And when we do, that's gonna put
this eb command on our system path.

20
00:01:31.384 --> 00:01:35.707
And this is gonna be the primary
way in which we interact with

21
00:01:35.707 --> 00:01:38.137
the elastic beanstalk service.

22
00:01:38.137 --> 00:01:42.260
So the first thing you're
gonna do is eb init.

23
00:01:43.320 --> 00:01:46.138
And that is going to prompt you for

24
00:01:46.138 --> 00:01:51.180
a region in which you would
like to deploy our application.

25
00:01:51.180 --> 00:01:56.058
In this case, I'll go with US East,
Northern Virginia,

26
00:01:56.058 --> 00:01:58.460
it doesn't really matter.

27
00:02:02.323 --> 00:02:04.942
&gt;&gt; Kevin Whinnery: And then you can
if you already have in a existing

28
00:02:04.942 --> 00:02:09.727
Elastic Beanstalk application that you're
looking to associate this project with,

29
00:02:09.727 --> 00:02:11.310
you can choose that.

30
00:02:11.310 --> 00:02:16.060
Otherwise you can create a new
application which we're gonna do here.

31
00:02:16.060 --> 00:02:21.828
All right,
in this one we're gonna call todomvc-

32
00:02:21.828 --> 00:02:27.069
plusplus which is a good
enough default name.

33
00:02:27.069 --> 00:02:30.853
And then it's gonna try to detect the type
of application you're looking to deploy.

34
00:02:30.853 --> 00:02:32.966
So for the Elastic Beanstalk,

35
00:02:32.966 --> 00:02:37.117
it supports certain types of
applications for deployment.

36
00:02:37.117 --> 00:02:40.530
Node.js is one of them, I'm gonna say yes.

37
00:02:40.530 --> 00:02:45.290
And then it'll ask you if you wanna
set up SSH for your instances.

38
00:02:45.290 --> 00:02:48.860
Which will allow you to associate
the public key on your laptop.

39
00:02:50.990 --> 00:02:53.800
With your instances,
you can actually SSH into them.

40
00:02:53.800 --> 00:02:56.080
You can totally do that if you would like.

41
00:02:56.080 --> 00:03:01.250
For demonstration purposes
I'm gonna say no.

42
00:03:01.250 --> 00:03:02.140
And now, we're all set up.

43
00:03:02.140 --> 00:03:08.255
The one step that didn't happen for
me, because I've already done this,

44
00:03:08.255 --> 00:03:12.637
is I was not prompted for
my AWS access key and secret.

45
00:03:12.637 --> 00:03:17.127
So those credentials that you downloaded
from the console before, you'll be

46
00:03:17.127 --> 00:03:21.698
prompted to enter those in during the set
up process when you do eb init, right?

47
00:03:21.698 --> 00:03:27.440
So now I have my application created.

48
00:03:27.440 --> 00:03:30.800
And now I need to create
an environment and

49
00:03:30.800 --> 00:03:36.880
this is actually gonna create EC2
instances that will run my application.

50
00:03:36.880 --> 00:03:41.094
So, to do that,
I'm just going to say eb create.

51
00:03:46.706 --> 00:03:51.340
&gt;&gt; Kevin Whinnery: And it's going to
prompt me for an environment name.

52
00:03:51.340 --> 00:03:54.806
The environment name is
generated by default.

53
00:03:54.806 --> 00:03:58.105
It's just the name of
your application -dev.

54
00:03:58.105 --> 00:04:02.082
You can call it whatever you want, but

55
00:04:02.082 --> 00:04:05.812
maybe I'll just call it todomvc and

56
00:04:05.812 --> 00:04:09.930
not associate it with an environment.

57
00:04:12.110 --> 00:04:16.260
And then you can enter a CNAME
prefix which is going to be like

58
00:04:16.260 --> 00:04:18.880
the public URL for

59
00:04:18.880 --> 00:04:25.310
your elastic load balancer which will send
traffic to your actual node application.

60
00:04:25.310 --> 00:04:28.000
todomvc would be fine for that.

61
00:04:29.500 --> 00:04:34.794
For the load balancer
the classic of classic

62
00:04:34.794 --> 00:04:41.780
configuration is going to be fine or
we can do either one.

63
00:04:41.780 --> 00:04:46.630
And the options are slightly
different based on the region.

64
00:04:46.630 --> 00:04:51.850
If you did or again like I think there's
a different default for instance.

65
00:04:51.850 --> 00:04:56.000
So now what is happening is something
that is actually ultimately

66
00:04:56.000 --> 00:04:58.440
going to fail because
our application needs

67
00:04:58.440 --> 00:05:02.900
a little bit more configuration
before it'll actually run.

68
00:05:02.900 --> 00:05:07.195
But what's gonna happen is that
Elastic Beanstalk is going to provision

69
00:05:07.195 --> 00:05:12.480
an environment that we can administer
through the admin interface.

70
00:05:12.480 --> 00:05:19.030
It's going to zip up the current
contents of our application directory.

71
00:05:19.030 --> 00:05:21.645
It's gonna create a zip file of that.

72
00:05:21.645 --> 00:05:24.744
It's gonna upload that archive to S3, and

73
00:05:24.744 --> 00:05:29.016
then that archive is actually
going to be deployed to the EC2

74
00:05:29.016 --> 00:05:33.812
instances that are being created for
Elastic Beanstalk right now.

75
00:05:33.812 --> 00:05:38.805
So this is gonna take a little bit,
but there's a little bit of

76
00:05:38.805 --> 00:05:44.390
information that we can already
start to glean from the output here.

77
00:05:46.020 --> 00:05:49.360
It's creating a new environment for us.

78
00:05:49.360 --> 00:05:54.022
So it's already created our S3 bucket and

79
00:05:54.022 --> 00:06:00.895
it has created a security group for
our elastic load balancer.

80
00:06:00.895 --> 00:06:03.727
Which is not something we care about.

81
00:06:03.727 --> 00:06:07.874
Because we're actually more
interested in the security group for

82
00:06:07.874 --> 00:06:10.837
the Elastic Beanstalk
instances themselves,

83
00:06:10.837 --> 00:06:14.720
which we'll be able to get
at the end of this process.

84
00:06:14.720 --> 00:06:15.960
So this does take awhile.

85
00:06:15.960 --> 00:06:21.670
So this would be a good point if you
want to continue along your journey.

86
00:06:21.670 --> 00:06:24.471
If you've already downloaded
your credentials,

87
00:06:24.471 --> 00:06:28.062
going into your application
project directory, doing eb init.

88
00:06:28.062 --> 00:06:35.293
Going through the motions of initializing
your application project and

89
00:06:35.293 --> 00:06:40.271
then doing an eb create to
create an environment to

90
00:06:40.271 --> 00:06:44.432
actually deploy our application to you.

91
00:06:44.432 --> 00:06:47.800
So got the environment going.

92
00:06:47.800 --> 00:06:50.250
Again this is gonna
take take a little bit.

93
00:06:51.990 --> 00:06:58.020
But the thing that we would like to see
get created is a security group for

94
00:06:58.020 --> 00:07:01.860
our actual Elastic Beanstalk instances.

95
00:07:01.860 --> 00:07:06.810
So once we have that,
then we can create the RDS instance,

96
00:07:06.810 --> 00:07:10.021
which is actually gonna talk to.

97
00:07:11.200 --> 00:07:14.061
That our instances are actually
going to talk to, our EC2 instances.

98
00:07:23.213 --> 00:07:28.629
&gt;&gt; Kevin Whinnery: So
what did the zero say to the eight?

99
00:07:30.960 --> 00:07:31.588
Anybody know this one?

100
00:07:31.588 --> 00:07:36.740
Nice belt, yes.

101
00:07:36.740 --> 00:07:37.830
Be here all week.

102
00:07:37.830 --> 00:07:43.380
All right, so
now we can see that an actual EC2 instance

103
00:07:43.380 --> 00:07:47.860
has now been created with this identifier.

104
00:07:47.860 --> 00:07:51.932
By default we're only gonna have the one
instance created that we can deploy our

105
00:07:51.932 --> 00:07:52.859
application to.

106
00:07:58.530 --> 00:08:04.701
&gt;&gt; Kevin Whinnery: All right, so
we've got our auto-scaling group created,

107
00:08:04.701 --> 00:08:08.095
the instances being added to it.

108
00:08:08.095 --> 00:08:12.050
Checking, checking, checking.

109
00:08:12.050 --> 00:08:13.550
&gt;&gt; Speaker 2: So
it says safe to Ctrl+C but

110
00:08:13.550 --> 00:08:17.748
what will happen at this point if you did
that, you'd have to start over right?

111
00:08:17.748 --> 00:08:21.444
&gt;&gt; Kevin Whinnery: No it would keep going,
the logs are still being piped like

112
00:08:21.444 --> 00:08:26.060
if we Ctrl+C this,
we could actually go into the console.

113
00:08:26.060 --> 00:08:27.140
Which maybe will do right now.

114
00:08:28.840 --> 00:08:32.844
If we go to the Elastic Beanstalk console,

115
00:08:32.844 --> 00:08:40.647
we can see that the todomvc environment
is gray because it's still initializing.

116
00:08:40.647 --> 00:08:46.051
But we could kind of view the logs and
see what's happening there.

117
00:08:55.851 --> 00:08:57.886
&gt;&gt; Kevin Whinnery: Good, we do have
our security group already a must

118
00:08:57.886 --> 00:08:58.470
in this step.

