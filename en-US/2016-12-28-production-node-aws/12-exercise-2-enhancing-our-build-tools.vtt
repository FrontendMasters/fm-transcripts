WEBVTT

1
00:00:00.000 --> 00:00:03.926
[MUSIC]

2
00:00:03.926 --> 00:00:08.660
&gt;&gt; Kevin Whinnery: Now it's time for
the next exercise portion of our morning.

3
00:00:08.660 --> 00:00:12.820
Where you fix more stuff in
the example code project.

4
00:00:14.410 --> 00:00:18.420
So, to correspond with
exercise number two.

5
00:00:18.420 --> 00:00:20.913
We've got some more GitHub issues for
you to take a look at.

6
00:00:25.642 --> 00:00:27.911
&gt;&gt; Kevin Whinnery: They
are tagged with exercise two.

7
00:00:30.925 --> 00:00:35.992
&gt;&gt; Kevin Whinnery: And the first one is a
bit that probably needs to be implemented

8
00:00:35.992 --> 00:00:41.937
before we take this thing fully to
production which is a task which will,

9
00:00:41.937 --> 00:00:46.907
a task to modify our collect
static task which we already have

10
00:00:46.907 --> 00:00:51.781
in addition to running our
application JavaScript through

11
00:00:51.781 --> 00:00:55.980
Browserify to then run it
through Uglify as well.

12
00:00:55.980 --> 00:01:01.230
So compressing the JavaScript
source into a minified JavaScript

13
00:01:01.230 --> 00:01:05.120
source file that we can use in production
and putting it into the public directory

14
00:01:05.120 --> 00:01:10.640
just like we do with the rest of the
collect stack command so spoiler alert.

15
00:01:10.640 --> 00:01:14.330
There is a Grunt plugin called Uglify

16
00:01:14.330 --> 00:01:17.240
which is probably the place
to start barking up.

17
00:01:17.240 --> 00:01:19.379
If you if you want to take
a crack at that task.

18
00:01:20.570 --> 00:01:23.150
So that is number one.

19
00:01:23.150 --> 00:01:27.190
For bonus points actually on this task,
I didn't actually call it out here,

20
00:01:27.190 --> 00:01:31.670
but if you look in the EJS template
which renders our TODO MVC page,

21
00:01:31.670 --> 00:01:38.930
there's a little bit of conditional
logic in there that inserts a script

22
00:01:38.930 --> 00:01:44.600
tag to the minified version of app.css
if we're in the production environment.

23
00:01:44.600 --> 00:01:48.480
But the JavaScript is
just app.JS every time so

24
00:01:48.480 --> 00:01:53.860
maybe we also want to in the production
environment include the minified JS

25
00:01:53.860 --> 00:01:59.640
file rather than the fully inflated one
with the source maps and everything.

26
00:01:59.640 --> 00:02:02.761
So that's another bit that you might
want to take care of during this

27
00:02:02.761 --> 00:02:03.709
particular issue.

28
00:02:03.709 --> 00:02:09.051
The other one that I put
out there was to add

29
00:02:09.051 --> 00:02:14.853
an NPM start script that
is dedicated just for

30
00:02:14.853 --> 00:02:17.766
running migrations.

31
00:02:17.766 --> 00:02:22.209
I think you'll probably notice
something in the package.json

32
00:02:22.209 --> 00:02:25.911
that already does run the migrations but
post start,

33
00:02:25.911 --> 00:02:31.220
which is what it's currently assigned to,
can do lots of other things.

34
00:02:31.220 --> 00:02:36.440
So it might be nice to have an NPM
script which just runs migrations

35
00:02:36.440 --> 00:02:40.240
using the sequelize command line tool.

36
00:02:40.240 --> 00:02:44.020
And so, for that you'll have to learn
a slightly different incantation

37
00:02:44.020 --> 00:02:46.440
to actually run that and make it work.

38
00:02:47.670 --> 00:02:50.970
So, adding a special
purpose migration command

39
00:02:50.970 --> 00:02:53.940
to our NPM start NPM scripts will
be another thing you could work on.

40
00:02:55.340 --> 00:02:59.470
And those are the two I got, but I'm
getting like unsolicited pull requests for

41
00:02:59.470 --> 00:03:01.560
all kinds of stuff which is awesome.

42
00:03:01.560 --> 00:03:05.389
It's working, I'm very stoked at
what you guys are doing with this.

