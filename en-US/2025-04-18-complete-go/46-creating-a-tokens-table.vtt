WEBVTT

1
00:00:00.000 --> 00:00:02.809
&gt;&gt; Melkey: Let's go into
the migrations here.

2
00:00:02.809 --> 00:00:06.384
Oops, that's neither of them.

3
00:00:06.384 --> 00:00:08.121
And here we're gonna create our new table.

4
00:00:08.121 --> 00:00:15.260
So we're gonna do 1234, 4, I'm just
gonna call it tokens.sql, like so, okay?

5
00:00:15.260 --> 00:00:17.555
Just to make it faster, go ahead and

6
00:00:17.555 --> 00:00:21.853
just copy any of the other existing
SQLs as a starting point for us.

7
00:00:21.853 --> 00:00:26.749
And so we're gonna create table if
not exist instead of users, and

8
00:00:26.749 --> 00:00:28.503
you can call it tokens.

9
00:00:28.503 --> 00:00:34.689
We don't need any of these fields at all,
so just delete those like that.

10
00:00:34.689 --> 00:00:37.277
The first field is gonna be a hash,
like this.

11
00:00:37.277 --> 00:00:41.709
It's gonna be byte a format,
so this is native to Postgres.

12
00:00:41.709 --> 00:00:44.945
Okay, this is gonna be
acting as our primary key.

13
00:00:47.794 --> 00:00:53.676
&gt;&gt; Melkey: Okay, next,
we're gonna have the user_id.

14
00:00:53.676 --> 00:00:57.796
The big int is going to be NOT NULL,

15
00:00:57.796 --> 00:01:01.919
and it's going to be REFERENCES,

16
00:01:01.919 --> 00:01:08.760
users on the users(id),
field and ON DELETE CASCADE.

17
00:01:08.760 --> 00:01:10.090
so if we delete a user,

18
00:01:10.090 --> 00:01:13.946
we're going to delete all the tokens
associated with that user.

19
00:01:16.785 --> 00:01:19.360
&gt;&gt; Melkey: Every token has
an expiry that we can control.

20
00:01:22.112 --> 00:01:26.075
&gt;&gt; Melkey: So we can put that
as a default timestamp, like so.

21
00:01:26.075 --> 00:01:32.032
And then with time zone not null.

22
00:01:32.032 --> 00:01:33.665
And then we have scope.

23
00:01:33.665 --> 00:01:34.801
And this is gonna be text.

24
00:01:34.801 --> 00:01:35.841
And this can also not be null.

25
00:01:35.841 --> 00:01:37.816
So, not null.

26
00:01:37.816 --> 00:01:39.297
Make sure you modify the drop table.

27
00:01:39.297 --> 00:01:43.870
So it's no longer just users,
but it's tokens.

28
00:01:43.870 --> 00:01:46.864
With that,
we can actually use goose migration.

29
00:01:46.864 --> 00:01:54.217
All right, so we have this new table, but
if we go to our psql/4/dt, it's not there.

30
00:01:54.217 --> 00:01:55.386
So how can we get it up, right?

31
00:01:55.386 --> 00:01:56.428
I don't want to delete the database.

32
00:01:56.428 --> 00:01:58.537
Is there any way to just insert it?

33
00:01:58.537 --> 00:02:00.292
Yes, we can use goose.

34
00:02:00.292 --> 00:02:03.824
So at the root of your project,
you can go ahead and run Goose, and

35
00:02:03.824 --> 00:02:05.056
put the command here.

36
00:02:05.056 --> 00:02:06.906
So this is gonna be the command.

37
00:02:06.906 --> 00:02:09.854
Now, it looks pretty nasty.

38
00:02:09.854 --> 00:02:13.290
But what's actually happening
is you're commanding Goose,

39
00:02:13.290 --> 00:02:15.814
where the directory is
that has a SQL file, and

40
00:02:15.814 --> 00:02:20.315
has all the versions of Goose up so we've
run before, and that's in migrations.

41
00:02:20.315 --> 00:02:24.891
We're telling it what is the database,
so we're using Postgres,

42
00:02:24.891 --> 00:02:28.597
and then that is simply
the connection string, okay?

43
00:02:28.597 --> 00:02:33.022
So it's Postgres, we're using Postgres,
it's gonna be the user Postgres,

44
00:02:33.022 --> 00:02:37.131
where the local host is, what the database
name is, and what the port is.

45
00:02:37.131 --> 00:02:39.850
So very similarly,
when we were in database.go,

46
00:02:39.850 --> 00:02:42.696
and even our test db,
we have the connection string,

47
00:02:42.696 --> 00:02:46.253
this is just a different way to
represent that connection string.

48
00:02:46.253 --> 00:02:49.160
Instead of having it nicely separated,

49
00:02:49.160 --> 00:02:54.382
we have concatenated into one core
connection string for our database.

50
00:02:54.382 --> 00:02:57.474
And again, watch the 5432, that's my port.

51
00:02:57.474 --> 00:03:00.891
If it's not your port,
change that accordingly.

52
00:03:00.891 --> 00:03:03.132
And also make sure your database is,
in fact, running.

53
00:03:03.132 --> 00:03:05.262
So you do still have docker compose up.

54
00:03:08.049 --> 00:03:13.558
&gt;&gt; Melkey: So if you click enter,
hopefully you should see an OK with this,

55
00:03:13.558 --> 00:03:19.589
okay, it notifies that the fourth
SQL file in the migrations folder.

56
00:03:19.589 --> 00:03:23.723
And it said, successfully
migrate database to version 4.

57
00:03:23.723 --> 00:03:27.186
&gt;&gt; Speaker 2: We have the same,
ZSH command not found.

58
00:03:27.186 --> 00:03:28.659
Take an export again.

59
00:03:28.659 --> 00:03:30.014
&gt;&gt; Melkey: For goose?

60
00:03:30.014 --> 00:03:33.833
&gt;&gt; Speaker 2: [CROSSTALK]
&gt;&gt; Melkey: Yeah, okay so what this is like

61
00:03:33.833 --> 00:03:38.710
a temporary solution export
path you can actually

62
00:03:38.710 --> 00:03:42.817
just persist that into your .zshrc,
&gt;&gt; Speaker 3: Yeah, so

63
00:03:42.817 --> 00:03:45.472
if you really just type that into your-
&gt;&gt; Melkey: Instead of .zhrc, right?

64
00:03:45.472 --> 00:03:47.296
&gt;&gt; Speaker 3: Yeah.
&gt;&gt; Melkey: Yeah, or .bashrc,

65
00:03:47.296 --> 00:03:51.759
whatever you're using,
cuz I think this just keeps it alive for

66
00:03:51.759 --> 00:03:55.329
the state of the terminal,
for the session state.

67
00:03:55.329 --> 00:03:59.728
And then when you go open up a new
terminal or fail to reload it and

68
00:03:59.728 --> 00:04:02.560
resource it, I think it just goes away.

69
00:04:02.560 --> 00:04:05.135
Wait, now, if it's in the zsh,
it's always gonna be referred to it.

70
00:04:05.135 --> 00:04:08.430
And this is also helpful, yeah, I do
actually recommend putting it in your .zsh

71
00:04:08.430 --> 00:04:10.619
permanently, because this
is just a Go bin, right?

72
00:04:10.619 --> 00:04:15.664
So everything you install with Go will
be in this directory, so then any

73
00:04:15.664 --> 00:04:21.316
Go in talk moving forward will be always
referred to through .zsh to this path.

74
00:04:21.316 --> 00:04:22.552
Nice, that worked.

75
00:04:22.552 --> 00:04:23.333
Yep, okay.

