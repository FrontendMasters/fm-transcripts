WEBVTT

1
00:00:00.111 --> 00:00:04.175
&gt;&gt; Francesca Sadikin: So yes, fast forward
to a different role at a different company

2
00:00:04.175 --> 00:00:09.248
where I encountered a similar challenge
but approached it very differently.

3
00:00:09.248 --> 00:00:13.593
So my team is responsible for
developing reusable components and

4
00:00:13.593 --> 00:00:18.103
workflows meant to accelerate
our other engineers' velocities.

5
00:00:18.103 --> 00:00:22.598
And when I joined,
I found out that despite having some

6
00:00:22.598 --> 00:00:26.714
solutions available,
no one was using any of it.

7
00:00:26.714 --> 00:00:31.087
So we tried all of
the traditional adoption methods,

8
00:00:31.087 --> 00:00:34.013
like write better documentation.

9
00:00:34.013 --> 00:00:37.217
We were presenting it in
lots of different meetings,

10
00:00:37.217 --> 00:00:41.715
to lots of different engineers, but
all of that failed to spark adoption.

11
00:00:41.715 --> 00:00:44.152
So, we decided to take
a different approach.

12
00:00:44.152 --> 00:00:47.177
And thankfully, I knew what not to do,
based off of my first experience.

13
00:00:47.177 --> 00:00:51.022
We were definitely not going
to keep our heads down and

14
00:00:51.022 --> 00:00:54.188
continue coding more tools and workflows.

15
00:00:54.188 --> 00:00:58.165
It was time to talk to our
engineering customers and

16
00:00:58.165 --> 00:01:01.411
really understand the lack of adoption.

17
00:01:01.411 --> 00:01:06.182
So, we had presented this in groups
of meetings, but when we asked,

18
00:01:06.182 --> 00:01:08.010
what's the hesitation?

19
00:01:08.010 --> 00:01:09.265
What's going on?

20
00:01:09.265 --> 00:01:10.939
Silence, nothing.

21
00:01:10.939 --> 00:01:17.671
So we began instead, to have one-on-one
conversations with individual engineers.

22
00:01:17.671 --> 00:01:20.371
And these sessions
created a safe space for

23
00:01:20.371 --> 00:01:25.246
them to openly share all of their concerns
and hesitations, and to be clear,

24
00:01:25.246 --> 00:01:28.709
we weren't trying to sell
them on our existing tools.

25
00:01:28.709 --> 00:01:31.607
Not like, hey,
why don't you use this specific thing?

26
00:01:31.607 --> 00:01:36.084
It was more to really just take
a step back and just understand,

27
00:01:36.084 --> 00:01:41.322
l what's going on for you,
what's actually difficult for you, what's

28
00:01:41.322 --> 00:01:47.002
the most painful part of the engineering
workflows, hearing their opinions.

29
00:01:47.002 --> 00:01:51.852
And it wasn't just simple conversations
where people just told us the answers,

30
00:01:51.852 --> 00:01:56.487
it actually required a lot of active
listening, intense curiosity to really

31
00:01:56.487 --> 00:02:00.360
dig deep into what people were
implicitly saying or hinting at.

32
00:02:00.360 --> 00:02:05.062
And creating an environment where
engineers felt safe to provide that

33
00:02:05.062 --> 00:02:06.342
kind of feedback.

34
00:02:06.342 --> 00:02:10.069
Because, I think in a way they
were also afraid of offending us.

35
00:02:10.069 --> 00:02:14.479
And we were like, no, please, just let us
know, we want to know these things, right?

36
00:02:14.479 --> 00:02:18.367
And so what emerged from these
conversations were really deeply

37
00:02:18.367 --> 00:02:22.404
personal insights that we were
never gonna get in any other forum.

38
00:02:22.404 --> 00:02:26.995
Some engineers, we learned,
had been burned by previous tools

39
00:02:26.995 --> 00:02:31.086
because they adopted it too
early when it wasn't ready.

40
00:02:31.086 --> 00:02:35.112
Others found that they didn't
have time to learn something new,

41
00:02:35.112 --> 00:02:39.298
especially if they didn't know if
it was actually gonna be useful.

42
00:02:39.298 --> 00:02:44.195
So it became clear that in general,
trust was a significant barrier,

43
00:02:44.195 --> 00:02:49.673
they didn't trust our team, it was new,
and they didn't trust these tools.

44
00:02:49.673 --> 00:02:54.581
But that wasn't all, we also uncovered
other deeply painful problems in their

45
00:02:54.581 --> 00:02:57.742
workflows that we hadn't
initially considered.

46
00:02:57.742 --> 00:03:02.445
These were issues that were really
causing the most frustration and

47
00:03:02.445 --> 00:03:08.071
time consumption in their workflows, and
they wanted those to be solved first.

48
00:03:08.071 --> 00:03:12.193
So armed with these insights,
our team did not just push forward with

49
00:03:12.193 --> 00:03:16.815
our existing tools, we iterated on
them continuously, adding feedback and

50
00:03:16.815 --> 00:03:20.179
making adjustments based on
the feedback we received.

51
00:03:20.179 --> 00:03:24.891
So all of the engineers we talked to,
we kept the feedback loop to make sure

52
00:03:24.891 --> 00:03:28.927
that we were continuously hearing
what they thought about it.

53
00:03:28.927 --> 00:03:33.437
And we focused on solving the main
pain points that were most

54
00:03:33.437 --> 00:03:35.882
important to these engineers.

55
00:03:35.882 --> 00:03:41.154
This personalized and responsive approach
gradually built trust and credibility.

56
00:03:41.154 --> 00:03:46.066
As more engineers saw their peers
benefiting from our tools, eventually,

57
00:03:46.066 --> 00:03:50.529
skepticism gave way to curiosity,
and now to widespread adoption.

58
00:03:50.529 --> 00:03:53.070
It took a while, but we were there.

59
00:03:53.070 --> 00:03:57.121
So in both experiences,
the importance of caring about users and

60
00:03:57.121 --> 00:04:02.219
actively listening to them and wanting
to understand them became crystal clear.

61
00:04:02.219 --> 00:04:06.301
The first project failed because
we didn't take the time to

62
00:04:06.301 --> 00:04:11.290
actually understand the needs of our
users beyond the initial request.

63
00:04:11.290 --> 00:04:16.021
The second succeeded with widespread
adoption because we put empathy and

64
00:04:16.021 --> 00:04:20.752
understanding first, engaging in
genuine conversations to uncover and

65
00:04:20.752 --> 00:04:23.359
address the real concerns of our users.

66
00:04:26.450 --> 00:04:27.724
&gt;&gt; Francesca Sadikin: That's
the end of this story.

67
00:04:27.724 --> 00:04:32.331
[LAUGH] Do you guys relate,
agree, or disagree?

68
00:04:32.331 --> 00:04:36.980
Okay, maybe this was a very obvious
message to engineers, that as someone who

69
00:04:36.980 --> 00:04:41.709
constantly did this in the beginning of
my career, I thought it was important.

70
00:04:43.913 --> 00:04:47.923
&gt;&gt; Francesca Sadikin: Just as a takeaway,
a recap of this particular story.

71
00:04:47.923 --> 00:04:52.553
The experience has taught me that
effective work in software engineering is

72
00:04:52.553 --> 00:04:54.808
more than just your ability to code.

73
00:04:54.808 --> 00:04:59.565
Especially if you're working to
build something for someone,

74
00:04:59.565 --> 00:05:04.496
it requires empathy, a willingness
to listen, and a deep care for

75
00:05:04.496 --> 00:05:07.060
the person that you're serving.

76
00:05:07.060 --> 00:05:11.851
Without them, we risk building
solutions in search of problems,

77
00:05:11.851 --> 00:05:15.528
pushing out work that looks
great on the surface but

78
00:05:15.528 --> 00:05:18.791
ultimately fails to
deliver any real value.

79
00:05:18.791 --> 00:05:23.153
So our ability to care directly
correlates with our ability to execute.

