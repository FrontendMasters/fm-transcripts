WEBVTT

1
00:00:00.000 --> 00:00:02.719
&gt;&gt; Francesca Sadikin: So we've covered
how to prepare yourself to succeed as

2
00:00:02.719 --> 00:00:03.851
a software engineer.

3
00:00:03.851 --> 00:00:10.569
Now let's build on all that hard work
by focusing on opportunities now.

4
00:00:10.569 --> 00:00:14.898
Like I mentioned in the beginning of
this course, when people see this quote,

5
00:00:14.898 --> 00:00:17.538
luck is where opportunity
meets preparation.

6
00:00:17.538 --> 00:00:20.533
Think people focus on
the preparation part, right?

7
00:00:20.533 --> 00:00:24.879
Thinking that opportunities
are just things that happen and

8
00:00:24.879 --> 00:00:28.979
all of our hard work takes
advantage of the opportunity.

9
00:00:28.979 --> 00:00:33.559
But I believe that
opportunities like preparation

10
00:00:33.559 --> 00:00:36.653
should also be paid attention to.

11
00:00:36.653 --> 00:00:42.649
But first you might be wondering why are
opportunities even important in summary,

12
00:00:42.649 --> 00:00:46.343
opportunities allow you
to showcase your skills.

13
00:00:46.343 --> 00:00:52.092
What you learn from these experiences
contributes to your growth as an engineer.

14
00:00:52.092 --> 00:00:56.883
You can say it another way, you have to
show don't tell an engineer might claim

15
00:00:56.883 --> 00:00:59.871
they have the skills of
a higher level engineer.

16
00:00:59.871 --> 00:01:04.854
But people will not believe you
unless they can see that you

17
00:01:04.854 --> 00:01:07.706
have experienced it in some way.

18
00:01:07.706 --> 00:01:12.889
It's the proof through experience that
truly convinces others of the abilities.

19
00:01:15.995 --> 00:01:19.624
&gt;&gt; Francesca Sadikin: So we now
understand why opportunities matter.

20
00:01:19.624 --> 00:01:24.620
What if I told you, you can actually
increase your own opportunities.

21
00:01:24.620 --> 00:01:28.456
That would mean that between
preparation and opportunities,

22
00:01:28.456 --> 00:01:33.244
you're creating your own luck, which
means you can foster your own success.

23
00:01:35.855 --> 00:01:40.331
&gt;&gt; Francesca Sadikin: Just a little side
note, to be clear, you can completely grow

24
00:01:40.331 --> 00:01:44.994
your career without intentionally
fostering opportunities.

25
00:01:44.994 --> 00:01:49.169
It is just going to be
most likely a slower path.

26
00:01:49.169 --> 00:01:53.943
So intentionally fostering opportunities
just helps you grow faster.

27
00:01:55.740 --> 00:02:00.561
&gt;&gt; Francesca Sadikin: All right, so,
how do you increase opportunities.

28
00:02:00.561 --> 00:02:02.879
This is a question prompt for
the audience.

29
00:02:03.020 --> 00:02:04.367
&gt;&gt; Francesca Sadikin: How do
you increase opportunities?

30
00:02:04.367 --> 00:02:05.628
Go ahead.

31
00:02:05.628 --> 00:02:07.646
&gt;&gt; Speaker 2: You can leverage on them,

32
00:02:07.646 --> 00:02:12.158
on other senior developers
knowledge of collaboration.

33
00:02:12.158 --> 00:02:15.328
You leverage on the people you
collaborate with their skills.

34
00:02:15.328 --> 00:02:18.889
&gt;&gt; Francesca Sadikin: Yes,
leverage their skills, okay.

35
00:02:18.889 --> 00:02:25.371
How do you how do you get more
opportunities to come your way?

36
00:02:25.371 --> 00:02:26.211
&gt;&gt; Speaker 3: Network.

37
00:02:26.211 --> 00:02:31.166
&gt;&gt; Francesca Sadikin: Networking,
yes okay.

38
00:02:31.166 --> 00:02:35.774
&gt;&gt; Speaker 3: Deliver on time, I always
say if somebody gives you a responsibility

39
00:02:35.774 --> 00:02:39.429
and you meet that responsibility time and
time again,

40
00:02:39.429 --> 00:02:43.092
you're gonna build this
incredible amount of trust.

41
00:02:43.092 --> 00:02:46.081
&gt;&gt; Francesca Sadikin: Yes.
&gt;&gt; Speaker 3: And as you build that trust

42
00:02:46.081 --> 00:02:50.641
with whether it's through
your existing job or

43
00:02:50.641 --> 00:02:54.973
previous jobs or
side jobs or whatever it is.

44
00:02:54.973 --> 00:02:59.436
If you become the person that's
reliable and trustworthy,

45
00:02:59.436 --> 00:03:01.983
I feel like that carries out word.

46
00:03:01.983 --> 00:03:06.771
Because when somebody is, hey,
do you know of a great X, whatever it is,

47
00:03:06.771 --> 00:03:12.126
in this case, developer, you're the name
that's always brought to the table.

48
00:03:12.126 --> 00:03:18.611
Because you're the one that delivers and
communicates well along the way.

49
00:03:18.611 --> 00:03:23.076
&gt;&gt; Speaker 2: Yes, well, you can teach
this course [LAUGH] cuz that is my answer.

50
00:03:23.076 --> 00:03:26.143
&gt;&gt; Francesca Sadikin: Yes, so
some people also said networking, but

51
00:03:26.143 --> 00:03:28.603
networking is a little too abstract.

52
00:03:28.603 --> 00:03:31.009
The real answer is what
you just said right now.

53
00:03:31.009 --> 00:03:35.034
It's about relationships of
trust with those around you.

54
00:03:35.034 --> 00:03:39.023
That is how you increase opportunities.

55
00:03:39.023 --> 00:03:42.092
So given this answer,
you might be wondering,

56
00:03:42.092 --> 00:03:47.324
why are we focusing on relationships in
a software engineering course, right?

57
00:03:47.324 --> 00:03:52.586
And I used to think the same way,
when I was younger, I just thought that

58
00:03:52.586 --> 00:03:57.787
I just needed to work really hard,
deliver really good quality code.

59
00:03:57.787 --> 00:04:01.342
I don't have to care about networking,
relationships,

60
00:04:01.342 --> 00:04:03.598
building good rapport with people.

61
00:04:03.598 --> 00:04:07.925
And somehow I would still be
able to grow as an engineer.

62
00:04:07.925 --> 00:04:12.612
But over time, I learned that
opportunities don't just come from

63
00:04:12.612 --> 00:04:18.563
the quality of your technical skills, they
come from the relationships you build.

64
00:04:18.563 --> 00:04:22.045
So let me explain through
a story about John.

65
00:04:22.045 --> 00:04:27.041
John is an incredibly talented engineer
who was known for his dedication and

66
00:04:27.041 --> 00:04:27.827
hard work.

67
00:04:27.827 --> 00:04:31.153
He would always arrive early,
leave late, and

68
00:04:31.153 --> 00:04:34.654
consistently deliver
really good quality code.

69
00:04:34.654 --> 00:04:37.732
On the surface,
John was the ideal engineer.

70
00:04:37.732 --> 00:04:41.310
But despite his skills and
how hard he worked,

71
00:04:41.310 --> 00:04:46.923
he never seemed to get the big projects
that lead to career growth, why?

72
00:04:46.923 --> 00:04:53.531
Because John didn't get along with his
manager, he always wanted to be right.

73
00:04:53.531 --> 00:04:56.908
He always insisted on
doing things his way,

74
00:04:56.908 --> 00:05:01.390
even when the team had already
made a different decision.

75
00:05:01.390 --> 00:05:06.761
So for example, during a project to
build a calculator, the team agreed

76
00:05:06.761 --> 00:05:11.880
on one solution but he ignored it,
completely implemented his own.

77
00:05:11.880 --> 00:05:17.666
Incidents like these, eventually broke
down his relationships with his manager,

78
00:05:17.666 --> 00:05:23.057
who began to question John's ability
to collaborate and follow directions.

79
00:05:23.057 --> 00:05:26.885
And over time,
if you started to see that, right?

80
00:05:26.885 --> 00:05:32.285
Cuz John started to find himself
being assigned smaller and

81
00:05:32.285 --> 00:05:37.907
smaller projects being assigned
away from the big projects.

82
00:05:37.907 --> 00:05:42.069
He was being sidelined,
not because he wasn't talented, but

83
00:05:42.069 --> 00:05:44.985
because his manager
just did not trust him.

84
00:05:44.985 --> 00:05:49.771
And it wasn't just the manager, the other
teammates started to feel the same way.

85
00:05:49.771 --> 00:05:53.343
John's behavior, though subtle,
signaled to everybody.

86
00:05:53.343 --> 00:05:56.169
That he could not be relied on for

87
00:05:56.169 --> 00:06:02.042
the big collaborative projects
that require trust and teamwork.

88
00:06:02.042 --> 00:06:06.361
It's important to note that John wasn't
intentionally trying to be difficult,

89
00:06:06.361 --> 00:06:10.753
that his actions created an environment
where people didn't wanna work with him.

90
00:06:10.753 --> 00:06:16.038
They felt that working with John would
mean more problems and more conflict,

91
00:06:16.038 --> 00:06:20.531
which ultimately led to fewer and
fewer opportunities for John.

92
00:06:20.531 --> 00:06:23.617
John's story illustrates a crucial point.

93
00:06:23.617 --> 00:06:25.451
You can be an amazing coder,

94
00:06:25.451 --> 00:06:29.128
but if you don't build trust
with the people around you.

95
00:06:29.128 --> 00:06:33.350
You won't be given the opportunities
that lead to career growth.

96
00:06:33.350 --> 00:06:37.803
Just remember that as projects become
larger and more complex, they require more

97
00:06:37.803 --> 00:06:42.398
collaboration because there's just so many
more people that needs to be involved.

98
00:06:42.398 --> 00:06:45.997
And if you're not someone who can be
trusted to work well with others,

99
00:06:45.997 --> 00:06:48.742
you're gonna find yourself
stuck on the sidelines,

100
00:06:48.742 --> 00:06:50.707
possibly facing career stagnation.

101
00:06:53.947 --> 00:06:55.023
&gt;&gt; Francesca Sadikin: Yes.

102
00:06:55.023 --> 00:07:01.449
&gt;&gt; Speaker 3: A few folks online chimed
in and said, ask for opportunities.

103
00:07:01.449 --> 00:07:06.063
&gt;&gt; Speaker 2: If you are at work, you
can ask for tickets without waiting for

104
00:07:06.063 --> 00:07:07.848
them to be given to you.

105
00:07:07.848 --> 00:07:11.699
&gt;&gt; Francesca Sadikin: Yes, that's another
great way to also slowly expand your

106
00:07:11.699 --> 00:07:13.119
responsibilities.

107
00:07:13.119 --> 00:07:18.399
Yes, so you might be thinking,
I'm not like John,

108
00:07:18.399 --> 00:07:21.882
I'm not aggressive or arrogant.

109
00:07:21.882 --> 00:07:26.713
But even small actions,
what we might call microaggressions or

110
00:07:26.713 --> 00:07:30.566
trust busters can have
a similar impact over time.

111
00:07:30.566 --> 00:07:36.089
Maybe you cut people off in meetings, or
you keep mispronouncing someone's name,

112
00:07:36.089 --> 00:07:39.066
or you're quick to dismiss others' ideas.

113
00:07:39.066 --> 00:07:42.241
These behaviors, even if unintentional,

114
00:07:42.241 --> 00:07:46.289
can erode trust over time and
when trust starts to slip.

115
00:07:46.289 --> 00:07:50.308
So the opportunities that you see.

116
00:07:50.308 --> 00:07:53.640
So it's about fostering
a culture where everybody wins,

117
00:07:53.640 --> 00:07:58.060
this means creating a safe environment
where no one is thrown under the bus and

118
00:07:58.060 --> 00:08:00.997
everyone's brought to
the finish line together.

119
00:08:00.997 --> 00:08:04.607
By avoiding judging, blaming or shaming,

120
00:08:04.607 --> 00:08:09.873
you also contribute to this team
dynamic that builds trust, and

121
00:08:09.873 --> 00:08:14.959
people can sense that, and
they'll want to work with you so.

122
00:08:14.959 --> 00:08:19.239
That's the end of this first story,
[LAUGH] what do you guys think?

123
00:08:19.239 --> 00:08:23.579
Do you relate or do you disagree?

124
00:08:23.579 --> 00:08:24.772
Yes.

125
00:08:24.772 --> 00:08:27.620
&gt;&gt; Speaker 2: Yeah,
if I can use mine as a scenario,

126
00:08:27.620 --> 00:08:30.384
I just finished with my supervisor.

127
00:08:30.384 --> 00:08:34.730
I'm leading a project and
he's trying to tell me,

128
00:08:34.730 --> 00:08:39.276
if you have an idea as a project lead,
try to keep it and

129
00:08:39.276 --> 00:08:45.664
let others throw their ideas in first,
so that the part of the whole thing.

130
00:08:45.664 --> 00:08:49.693
So I don't place my ideas first
eventually, I might amend it or

131
00:08:49.693 --> 00:08:54.494
probably use my own idea, but I shouldn't
always come with my idea first.

132
00:08:54.494 --> 00:08:56.937
I should let them feel
part of the whole thing.

133
00:08:56.937 --> 00:08:58.048
So,
&gt;&gt; Francesca Sadikin: Yeah,

134
00:08:58.048 --> 00:08:59.352
&gt;&gt; Speaker 2: I can [CROSSTALK]

135
00:08:59.352 --> 00:09:01.014
&gt;&gt; Francesca Sadikin: Yes, you're creating

136
00:09:01.014 --> 00:09:03.596
space for others to join in, right?

137
00:09:03.596 --> 00:09:07.196
Yes, so they feel comfortable.

138
00:09:07.196 --> 00:09:10.475
Okay, was this story obvious?

139
00:09:10.475 --> 00:09:14.786
&gt;&gt; [LAUGH]
&gt;&gt; Speaker 3: A few comments from online,

140
00:09:14.786 --> 00:09:18.688
trust is as fragile as
a plain sheet of paper.

141
00:09:18.688 --> 00:09:22.089
Once the paper is crumpled up,
it can never be the same again.

142
00:09:22.089 --> 00:09:26.804
I use this analogy to reduce
toxicity in the teams I work with.

143
00:09:26.804 --> 00:09:27.582
&gt;&gt; Francesca Sadikin: Yes.

144
00:09:27.582 --> 00:09:33.075
Once you have that trust, it is very, once
you lose it, it's harder to build it back.

145
00:09:33.075 --> 00:09:34.358
Yes.

146
00:09:34.358 --> 00:09:39.346
&gt;&gt; Speaker 3: And then Zach says, 100%
agree that you can be a great coder but

147
00:09:39.346 --> 00:09:41.318
a bad software engineer.

148
00:09:41.318 --> 00:09:41.945
&gt;&gt; Francesca Sadikin: Yes, and

149
00:09:41.945 --> 00:09:46.036
it will limit your opportunities
in your career eventually.

