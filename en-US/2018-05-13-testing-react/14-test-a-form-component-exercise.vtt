WEBVTT

1
00:00:00.120 --> 00:00:03.510
&gt;&gt; Kent C. Dodds: Okay, so this is about
as raw as you can get for testing.

2
00:00:03.510 --> 00:00:06.450
And that's where you're
gonna start with your tests.

3
00:00:06.450 --> 00:00:10.750
We're also going to take a break for
lunch, right?

4
00:00:10.750 --> 00:00:11.630
Lunch is here.

5
00:00:11.630 --> 00:00:17.345
Okay, so
let me just intro you to the login,

6
00:00:17.345 --> 00:00:19.570
a component that you're gonna be testing.

7
00:00:19.570 --> 00:00:21.380
And I'll set you off for that and lunch.

8
00:00:23.420 --> 00:00:26.270
So if you look at the bottom of my screen,
I forgot to mention this.

9
00:00:26.270 --> 00:00:29.910
That is where I am, what file I have open.

10
00:00:29.910 --> 00:00:32.060
And so if you're ever like, where is he?

11
00:00:32.060 --> 00:00:33.370
That's where.

12
00:00:33.370 --> 00:00:39.913
So client/source/components/_tests_/login
and then the file name, login.step-1.todo.

13
00:00:39.913 --> 00:00:41.420
So that's where you should be.

14
00:00:41.420 --> 00:00:46.264
And the file that you'll be
testing is this login right here,

15
00:00:46.264 --> 00:00:49.160
so let's look at that really quick.

16
00:00:50.500 --> 00:00:54.990
The login renders the div that has a form
in it, and that form has an onSubmit.

17
00:00:56.404 --> 00:01:00.080
That onSubmit calls your on submit props,
so you'll be providing that.

18
00:01:00.080 --> 00:01:04.880
You can make adjust function for that and
then make some assertions on that.

19
00:01:06.020 --> 00:01:13.040
And then you have this label, these
inputs, it's just a username and password.

20
00:01:13.040 --> 00:01:20.227
And so your job is render this, fill in
the username and password with something,

21
00:01:20.227 --> 00:01:25.270
and then trigger the submit,
like I had in my example.

22
00:01:25.270 --> 00:01:28.360
If you get stuck at any point and
you're like, what, how did he do that?

23
00:01:28.360 --> 00:01:31.560
Just look at the non to do version,
reference it really quick,

24
00:01:31.560 --> 00:01:33.390
and then move back.

25
00:01:34.840 --> 00:01:42.380
Don't spend more than a minute struggling
with something that's specific like that.

26
00:01:42.380 --> 00:01:47.440
This is mostly just to get you
feeling how to write these tests.

27
00:01:49.430 --> 00:01:52.208
&gt;&gt; Kent C. Dodds: So yeah,
I also have comments in here for

28
00:01:52.208 --> 00:01:56.420
tips on how you can write these tests and
things too.

29
00:01:56.420 --> 00:01:58.028
Yes?
&gt;&gt; Speaker 2: Would you mind leaving your

30
00:01:58.028 --> 00:02:00.145
example of that editor test up over lunch?

31
00:02:00.145 --> 00:02:01.095
&gt;&gt; Kent C. Dodds: Sure, yeah.

32
00:02:01.095 --> 00:02:03.620
&gt;&gt; Speaker 2: I was kinda following
along and I missed a couple things,

33
00:02:03.620 --> 00:02:06.200
I'd like to make sure I
understand it before.

34
00:02:06.200 --> 00:02:14.240
&gt;&gt; Kent C. Dodds: Yeah, let me make it
fit more on a single screen thing here.

35
00:02:14.240 --> 00:02:17.488
Something like that, here, rats.

36
00:02:20.810 --> 00:02:22.860
&gt;&gt; Kent C. Dodds: Yeah,
something like this.

37
00:02:22.860 --> 00:02:26.040
[SOUND] There you go.

38
00:02:26.040 --> 00:02:26.830
Something like that.

39
00:02:26.830 --> 00:02:27.489
Hopefully that is helpful.

40
00:02:27.489 --> 00:02:31.088
&gt;&gt; Speaker 2: Do you
mean to have the minus?

41
00:02:31.088 --> 00:02:32.901
&gt;&gt; Kent C. Dodds: The minus?
&gt;&gt; Speaker 2: The minus in front of

42
00:02:32.901 --> 00:02:34.216
the test?

43
00:02:34.216 --> 00:02:36.920
&gt;&gt; Kent C. Dodds: Thank you,
[LAUGH] minus test.

44
00:02:36.920 --> 00:02:41.123
And actually, you don't need to see
the mock anyway or the flush promises, so

45
00:02:41.123 --> 00:02:44.260
actually this is probably all
that you really care to see.

46
00:02:45.430 --> 00:02:46.750
Yes?
&gt;&gt; Speaker 2: Maybe I missed it,

47
00:02:46.750 --> 00:02:49.662
what was it that made API a mock?

48
00:02:49.662 --> 00:02:52.202
&gt;&gt; [INAUDIBLE]
&gt;&gt; Kent C. Dodds: So

49
00:02:52.202 --> 00:02:55.160
it was this jest.mock,
is that what you're asking about?

50
00:02:56.200 --> 00:02:57.670
&gt;&gt; Speaker 2: Line 3.

51
00:02:57.670 --> 00:02:59.620
&gt;&gt; Kent C. Dodds: Line 3, yeah.

52
00:02:59.620 --> 00:03:03.960
So a jest has this really cool,
here let's see.

53
00:03:03.960 --> 00:03:07.000
How mocking works in jest?

54
00:03:07.000 --> 00:03:10.400
I've got this repo, kent, there it is.

55
00:03:10.400 --> 00:03:12.170
How jest mocking works.

56
00:03:12.170 --> 00:03:16.050
That explains what's going
on because I saw this and

57
00:03:16.050 --> 00:03:18.360
I was like,now, hold on a second.

58
00:03:18.360 --> 00:03:21.380
I'm importing it first and
then I'm mocking it.

59
00:03:21.380 --> 00:03:22.770
So I investigated a little bit and

60
00:03:22.770 --> 00:03:25.360
then I made this demo repo to
explain how that's all working.

