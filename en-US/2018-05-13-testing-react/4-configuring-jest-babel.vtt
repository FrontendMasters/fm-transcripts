WEBVTT

1
00:00:00.000 --> 00:00:02.430
&gt;&gt; Kent C. Dodds: Then we're
gonna get into configuring Jest.

2
00:00:02.430 --> 00:00:08.360
So you can let your fingers rest for
a little bit, because this part is

3
00:00:08.360 --> 00:00:14.140
pretty much just, watch the show and
interrupt me as you have questions.

4
00:00:14.140 --> 00:00:18.790
So, I'm gonna go ahead and reset --hard,
just so I'm in a clean state.

5
00:00:19.870 --> 00:00:22.430
Don't have any surprises, hopefully.

6
00:00:22.430 --> 00:00:28.290
And you can try to follow along if you
want, if that's something you're into,

7
00:00:28.290 --> 00:00:33.800
but I'm probably gonna go too fast for
you to follow along.

8
00:00:33.800 --> 00:00:38.460
So we are gonna be in this other
directory, configuration &gt; calculator.

9
00:00:38.460 --> 00:00:41.170
There's a calculator and
calculator solution.

10
00:00:41.170 --> 00:00:45.890
So later you can check out the solution
if you wanna reference what's going on.

11
00:00:45.890 --> 00:00:50.110
Or obviously you can watch the video
later, the recording later as well.

12
00:00:51.510 --> 00:00:54.670
So we've got a pretty
simple application here.

13
00:00:54.670 --> 00:00:59.280
The reason that we're not setting up our
actual full application is because it's

14
00:00:59.280 --> 00:01:03.190
It's a fair bit more complex
mostly just for workshop purposes.

15
00:01:03.190 --> 00:01:08.790
So it's not really totally realistic as
far as the configuration is concerned.

16
00:01:08.790 --> 00:01:13.960
So we're gonna CD into the other
directory configuration calculator

17
00:01:15.720 --> 00:01:21.610
and inside of here let's go ahead and
start our server.

18
00:01:21.610 --> 00:01:25.320
So we're using webpack dev server for
development and we've got a build and

19
00:01:25.320 --> 00:01:28.400
we've got this local server.

20
00:01:28.400 --> 00:01:29.650
It's configured with Babel and

21
00:01:29.650 --> 00:01:34.050
all this stuff that you'd find
in normal React application.

22
00:01:34.050 --> 00:01:39.096
So we'll run NPM, run dev and
that will start us up on

23
00:01:39.096 --> 00:01:44.168
localhost 8080 oops, localhost:8080.

24
00:01:44.168 --> 00:01:49.102
And here's a fun little
calculator that was created

25
00:01:49.102 --> 00:01:55.040
by Michael Jackson React Training
friendly person.

26
00:01:55.040 --> 00:01:59.720
This is a link to the original code
pen that he used to create this thing.

27
00:01:59.720 --> 00:02:02.250
So I modified it slightly but
it's pretty cool.

28
00:02:02.250 --> 00:02:06.410
You can actually type in 4 x 3 is 12, and

29
00:02:06.410 --> 00:02:09.460
it does math properly,
which is always good.

30
00:02:09.460 --> 00:02:11.850
Computers are pretty good at that.

31
00:02:11.850 --> 00:02:16.480
It even has this automatic shrinking
function, which is kinda handy.

32
00:02:18.040 --> 00:02:20.280
So, yeah,
it's a pretty simple application, but

33
00:02:20.280 --> 00:02:25.580
it serves really good purpose for us and

34
00:02:25.580 --> 00:02:30.068
that's what we're going to be
configuring for our tests.

35
00:02:30.068 --> 00:02:38.370
So, let's see.

36
00:02:38.370 --> 00:02:42.590
Okay, so let's go ahead and
get this configured to start testing.

37
00:02:42.590 --> 00:02:47.450
So we're gonna MPM Install
has a dev dependency Jest.

38
00:02:49.360 --> 00:02:53.367
And this is one of my
favorite things about Jest,

39
00:02:53.367 --> 00:02:58.563
is it's taking so long to install
because it has tons of stuff.

40
00:02:58.563 --> 00:03:02.987
Because I don't have to install a million
things individually just to get my test

41
00:03:02.987 --> 00:03:03.970
working.

42
00:03:03.970 --> 00:03:07.100
So it comes with a whole bunch of stuff.

43
00:03:07.100 --> 00:03:13.320
And the features that just comes
with out of the box are just unreal.

44
00:03:13.320 --> 00:03:18.030
So I'm gonna go ahead and
add a test script.

45
00:03:18.030 --> 00:03:22.420
Woops, let's make sure that my
keys are in the right spot.

46
00:03:22.420 --> 00:03:25.210
Are my fingers on the right keys?

47
00:03:25.210 --> 00:03:31.950
And that is my test script,
which is called Jest.

48
00:03:31.950 --> 00:03:36.020
And just to- I think I messed it up,
but in the depth dependencies,

49
00:03:36.020 --> 00:03:37.290
it should have Jest in here somewhere.

50
00:03:38.300 --> 00:03:45.950
It is alphabetical, so
it will be Jest and it was that, okay.

51
00:03:45.950 --> 00:03:47.110
So that's the current state of things.

52
00:03:47.110 --> 00:03:47.900
We install it.

53
00:03:47.900 --> 00:03:49.920
We add the script for Jest.

54
00:03:49.920 --> 00:03:53.070
And then if I run the test MPMT for

55
00:03:53.070 --> 00:03:56.120
short then it's gonna say
hey I didn't find any tests.

56
00:03:56.120 --> 00:03:59.400
So we're going to be writing tests later,
for now,

57
00:03:59.400 --> 00:04:02.290
I'm just gonna copy over Some tests.

58
00:04:02.290 --> 00:04:07.820
So we'll copy this over, duplicate this,
put it in the calculator and

59
00:04:07.820 --> 00:04:13.520
we'll take a look at that test.

60
00:04:13.520 --> 00:04:18.170
Okay, so this utilgetformattedvalue,
this is just JavaScript stuff.

61
00:04:18.170 --> 00:04:21.460
It doesn't need It doesn't
even need the dom.

62
00:04:21.460 --> 00:04:22.960
It doesn't, it's not reacting.

63
00:04:23.990 --> 00:04:29.148
And so with this now in place we're
following the built in convention.

64
00:04:29.148 --> 00:04:34.630
So if you look at this error message here,
it has a built in test match.

65
00:04:34.630 --> 00:04:37.780
And so it'll match any file
that matches this glob.

66
00:04:38.780 --> 00:04:41.358
So anything that's inside of
a test directory at any depth.

67
00:04:41.358 --> 00:04:44.910
With the .js and optionally x.

68
00:04:44.910 --> 00:04:48.470
I was found the jsx extension
to be totally weird.

69
00:04:49.830 --> 00:04:52.640
If that's what you do,
I don't know why you do that.

70
00:04:52.640 --> 00:04:56.420
But feel free to continue
doing that if you want to.

71
00:04:56.420 --> 00:05:03.630
But you'd also matches any
file that has .spec.test.js X.

72
00:05:03.630 --> 00:05:06.810
And then it ignores
anything in node modules.

73
00:05:06.810 --> 00:05:10.020
So that's the default configuration for
those.

74
00:05:10.020 --> 00:05:16.100
I like putting things in the double
underscore test directory because I

75
00:05:16.100 --> 00:05:22.260
used to colocate it and have a utils.test
and then my directories just got enormous.

76
00:05:22.260 --> 00:05:25.711
It was hard to tell what was a test and
what wasn't, so

77
00:05:25.711 --> 00:05:31.179
I put everything in a test directory close
by, right next to the file it's testing.

78
00:05:31.179 --> 00:05:36.660
And that made it a lot
easier to manage there.

79
00:05:36.660 --> 00:05:39.680
So, with that, we just copied a test over,

80
00:05:39.680 --> 00:05:43.640
now we can run npm t to run our test again
&gt;&gt; Kent C. Dodds: And

81
00:05:43.640 --> 00:05:47.840
we're getting our first error,
so huray, it found our test.

82
00:05:47.840 --> 00:05:51.800
We've got a problem, and
it's saying unexpected token import.

83
00:05:53.020 --> 00:05:56.800
So this is something that you're
gonna come across in normal,

84
00:05:56.800 --> 00:06:01.430
real world Applications that
are using Webpack and Babel.

85
00:06:01.430 --> 00:06:05.790
Because your Babel configuration should be

86
00:06:05.790 --> 00:06:09.850
set to transpile everything except for
imports.

87
00:06:09.850 --> 00:06:10.390
Who knows why?

88
00:06:11.590 --> 00:06:14.873
Why should you not transpile imports
when you're using Webpack, yeah?

89
00:06:14.873 --> 00:06:18.728
&gt;&gt; Speaker 2: Cuz there's more
than onentax supported by

90
00:06:18.728 --> 00:06:21.140
Webpack
&gt;&gt; Kent C. Dodds: Yes,

91
00:06:21.140 --> 00:06:23.740
because Webpack supports ES modules.

92
00:06:23.740 --> 00:06:28.540
And the reason that webpack supports ES
modules is so it can do tree shaking.

93
00:06:28.540 --> 00:06:33.680
It enables it to skip out
entirely on some imports,

94
00:06:33.680 --> 00:06:38.380
which will remove that dead code and
our bundles are much smaller.

95
00:06:38.380 --> 00:06:40.040
And so if you look in here,

96
00:06:40.040 --> 00:06:44.290
if your babelrc does not look something
like this in your Webpack project,

97
00:06:44.290 --> 00:06:46.510
then you are missing out on tree shaking,
you should change it.

98
00:06:46.510 --> 00:06:52.360
You need to specify for
Babel preset env modules is false.

99
00:06:52.360 --> 00:06:56.990
But this is why our tests are failing
because Jest actually picks up this

100
00:06:56.990 --> 00:07:00.819
babelrc automatically and
applies it to all of our tests.

101
00:07:01.960 --> 00:07:06.340
The problem is we´re saying, hey don´t
transpile the modules and so after

102
00:07:06.340 --> 00:07:10.460
Babel is done with it, Jest looks at it
and says, wait what is this import thing?

103
00:07:10.460 --> 00:07:14.260
So because of that we need to

104
00:07:14.260 --> 00:07:19.590
differentiate between whether this
is happening in our tests or not.

105
00:07:19.590 --> 00:07:25.190
And so I´m gonna scroll down just to copy
this because I don't want it ticked off.

106
00:07:25.190 --> 00:07:29.390
But by default, Jest will set
the node environment to be test,

107
00:07:29.390 --> 00:07:33.990
when it's being run and so
you can determine that inside of here.

108
00:07:33.990 --> 00:07:38.050
One thing I failed to mention is this
handy little trick with the Babel RC.

109
00:07:38.050 --> 00:07:45.100
Your Babel RC is probably just a JSON
file, so I made it a JavaScript file.

110
00:07:45.100 --> 00:07:52.930
Because, in the package JSON here, I have
Babel configured in the package JSON.

111
00:07:52.930 --> 00:07:55.760
That specifies a preset that
points to the JavaScript file.

112
00:07:55.760 --> 00:07:58.860
And now it's like magic, I can have that.

113
00:07:58.860 --> 00:08:02.680
In Babel 7,
this actually will be valid configuration.

114
00:08:02.680 --> 00:08:06.920
You won't need the package.json stuff
anymore, so that would be cool.

115
00:08:06.920 --> 00:08:10.240
Yeah, but for right now,
if you want to write your babelrc

116
00:08:12.120 --> 00:08:17.190
as a JavaScript module you can do
this dynamic stuff, then use presets.

117
00:08:17.190 --> 00:08:22.002
Babble also has the support for this ENV
thing, which is very confusing and so

118
00:08:22.002 --> 00:08:22.974
I never use it.

119
00:08:22.974 --> 00:08:24.500
So this is what I do instead.

120
00:08:25.890 --> 00:08:32.720
Okay, so if we are in test,
yeah, so we'll say modules.

121
00:08:32.720 --> 00:08:38.560
So if we're in tests, then we want to be
CJS, otherwise, we want it to be false.

122
00:08:38.560 --> 00:08:41.320
Let me make sure that's right,
or CommonJS, yeah.

123
00:08:42.580 --> 00:08:45.640
CommonJS is the default module system.

124
00:08:45.640 --> 00:08:49.467
So, that will preset
your V during the test,

125
00:08:49.467 --> 00:08:54.220
will actually transpile our
ES modules to commonJS,.

126
00:08:54.220 --> 00:08:57.029
And then JS will be able
to understand that.

127
00:08:59.020 --> 00:09:00.930
And I have a mistake.

128
00:09:02.080 --> 00:09:05.360
Sometimes I don't know how to program but
I figure it out eventually.

129
00:09:06.470 --> 00:09:11.930
Okay, so with that change let's
run the test again, and it works.

130
00:09:11.930 --> 00:09:14.770
Yay, we got our first test running.

131
00:09:14.770 --> 00:09:16.450
That's pretty nifty and

132
00:09:16.450 --> 00:09:20.260
you know it's kinda cool cuz we didn't
actually have to configure Jest at all.

133
00:09:20.260 --> 00:09:23.910
We had to do some stuff with Babel but

134
00:09:23.910 --> 00:09:28.590
this is literally our test script and
our configuration just with Jest.

135
00:09:28.590 --> 00:09:31.750
Yeah I just think that's
the coolest thing.

