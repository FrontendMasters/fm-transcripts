WEBVTT

1
00:00:04.102 --> 00:00:08.330
&gt;&gt; Kent: Let's move on to Cypress.

2
00:00:08.330 --> 00:00:09.480
I'm wearing a Cypress shirt.

3
00:00:11.500 --> 00:00:13.380
Cypress folks are pretty cool.

4
00:00:13.380 --> 00:00:15.429
I actually have a Cypress shirt, so

5
00:00:15.429 --> 00:00:19.402
maybe we'll race to see who can do
the exercise or, no just kidding.

6
00:00:19.402 --> 00:00:21.843
Maybe it was whoever did
the best air squats.

7
00:00:23.842 --> 00:00:28.000
&gt;&gt; Kent: Let me just reset,
let me add and get reset.

8
00:00:30.360 --> 00:00:33.600
Okay, so
we're back to the very beginning here.

9
00:00:34.940 --> 00:00:38.830
So the beginning of this section will
be very similar to the Jest section,

10
00:00:38.830 --> 00:00:40.489
I will show you how to configure stuff.

11
00:00:41.720 --> 00:00:45.220
With Cypress, it’s actually a little bit
less on the configuration specific side

12
00:00:45.220 --> 00:00:48.420
and more on the let’s set
up everything else, so

13
00:00:48.420 --> 00:00:52.600
that our app is ready to
be tested against side.

14
00:00:52.600 --> 00:00:55.330
And so, that’s what we’re
going to go through here.

15
00:00:55.330 --> 00:01:00.420
It will be a little lighter
than our configuration of jest.

16
00:01:00.420 --> 00:01:06.064
We're actually gonna be in the calculator
again, so if we cd other/configuration/

17
00:01:06.064 --> 00:01:10.639
calculator, that's where we're
gonna be configuring this stuff.

18
00:01:14.282 --> 00:01:17.738
&gt;&gt; Kent: Okay, so
the first step to configuring and

19
00:01:17.738 --> 00:01:20.332
using cypress is to install it.

20
00:01:20.332 --> 00:01:23.539
npm install --save-dev cypress.

21
00:01:25.650 --> 00:01:28.910
And when you setup the repository we
actually installed it twice on your

22
00:01:28.910 --> 00:01:32.800
project, because it´s installed
in calculator solution as well.

23
00:01:32.800 --> 00:01:37.200
So this is the third time I'm installing
Cypress into this project, but

24
00:01:37.200 --> 00:01:41.820
it actually installs an app.

25
00:01:41.820 --> 00:01:46.470
And sticks that in your node_modules,
so it´s just kinda wild but

26
00:01:46.470 --> 00:01:50.520
it's a really capable app that
you'll get a preview up here.

27
00:01:50.520 --> 00:01:53.370
And just a sec when it is finished.

28
00:01:53.370 --> 00:01:55.110
Okay, I'm not gonna make you eat well.

29
00:01:55.110 --> 00:01:58.170
Yeah, it won't take too long.

30
00:01:58.170 --> 00:02:01.200
So Cypress, how many people
here familiar with selenium?

31
00:02:01.200 --> 00:02:02.260
You use selenium before?

32
00:02:02.260 --> 00:02:03.040
Okay.

33
00:02:03.040 --> 00:02:05.490
How many people really
like selenium a lot?

34
00:02:05.490 --> 00:02:07.420
How many people kind of like Selenium?

35
00:02:07.420 --> 00:02:11.140
All right, how many people are glad
that Selenium keeps you from having

36
00:02:11.140 --> 00:02:13.460
to answer pages at two in the morning?

37
00:02:13.460 --> 00:02:16.760
I am, I just wish I didn't have
to use Selenium to do that.

38
00:02:16.760 --> 00:02:19.140
Well, you don't, you have Cypress.

39
00:02:19.140 --> 00:02:22.940
So Cypress has been installed,
if you are in a recent version of npm,

40
00:02:22.940 --> 00:02:27.920
then you can actually use a cool command
called npx, which will run a binary that

41
00:02:27.920 --> 00:02:32.280
exist in your node_module directory,
and so cypress exposes a binary.

42
00:02:33.720 --> 00:02:39.430
And so if I run npx cypress open,
then it will verify that cypress can run.

43
00:02:39.430 --> 00:02:40.733
I'm not sure what that does.

44
00:02:40.733 --> 00:02:46.943
To help you get started, create a bunch of
files for you and you say, okay got it.

45
00:02:46.943 --> 00:02:49.880
And then you can actually run the test.

46
00:02:49.880 --> 00:02:54.530
This prompts open
the Cypress Chrome browser, and

47
00:02:54.530 --> 00:02:56.020
it starts running these tests.

48
00:02:57.280 --> 00:03:02.350
And what's pretty cool about
this is that this is actually,

49
00:03:02.350 --> 00:03:03.950
this isn't just like a video.

50
00:03:03.950 --> 00:03:05.380
What on earth?

51
00:03:05.380 --> 00:03:08.290
But it's actually something
you can interact with.

52
00:03:08.290 --> 00:03:10.740
Like a, well click, click.

53
00:03:10.740 --> 00:03:12.630
Probably broke the test.

54
00:03:12.630 --> 00:03:15.560
But you can also pop open the dev tools.

55
00:03:17.070 --> 00:03:19.530
And look at the dom.

56
00:03:19.530 --> 00:03:21.890
Well things are happening so
crazy fast that,

57
00:03:22.960 --> 00:03:25.870
we'll see a better preview of this
when we start doing our own thing.

58
00:03:25.870 --> 00:03:26.880
So this is really annoying.

59
00:03:26.880 --> 00:03:28.250
I'm gonna stop this.

60
00:03:28.250 --> 00:03:29.490
It's just like the kitchen sink.

61
00:03:29.490 --> 00:03:32.110
This is everything that you could
possibly ever imagine doing,

62
00:03:32.110 --> 00:03:35.080
the cypress is right here.

63
00:03:35.080 --> 00:03:38.196
So let's make it a little less like that,
and

64
00:03:38.196 --> 00:03:42.214
get something that's actually useful for
our purposes,

65
00:03:42.214 --> 00:03:49.260
I'm gonna close this thing
&gt;&gt; Kent: So if we go into Cypress.

66
00:03:49.260 --> 00:03:50.610
Let's look at some of
the files it created.

67
00:03:50.610 --> 00:03:52.210
There's a cypress.json.

68
00:03:52.210 --> 00:03:53.790
That's for configuration.

69
00:03:53.790 --> 00:03:56.490
There's this fixtures thing, and
I'm not gonna show you too much about

70
00:03:56.490 --> 00:04:00.180
the fixtures but cypress is very,
very well documented.

71
00:04:00.180 --> 00:04:04.410
And there's a special way that you can
reference these fixtures in your tests.

72
00:04:04.410 --> 00:04:10.100
So you have, like your default user
that's always gonna be in the database.

73
00:04:10.100 --> 00:04:12.910
You can put their information in here and
then reference that, or

74
00:04:12.910 --> 00:04:13.520
something like that.

75
00:04:14.800 --> 00:04:17.660
And then all the test live in integration.

76
00:04:17.660 --> 00:04:22.350
I don't like that, so I actually change
the configuration to have it in a folder

77
00:04:22.350 --> 00:04:26.980
called e2e because I live Cypress for end
to end, [INAUDIBLE] differ integration.

78
00:04:26.980 --> 00:04:32.150
But yeah, this is were all those
test lived that we were watching.

79
00:04:33.260 --> 00:04:36.380
And then, plugins,
I don't really have a purpose for

80
00:04:36.380 --> 00:04:41.310
plugins so there are reasons, but
we're not gonna get into them.

81
00:04:41.310 --> 00:04:45.290
And then commands, and we'll definitely
have some custom commands that

82
00:04:45.290 --> 00:04:47.619
I'll bring in and
I'll show you some of those.

83
00:04:48.630 --> 00:04:54.010
And that's pretty much all of cypress
configuration to get what we just saw.

84
00:04:54.010 --> 00:04:59.152
So the next thing that we're gonna
do in our cypress configuration,

85
00:04:59.152 --> 00:05:02.620
we'll add some configuration for
a base URL.

86
00:05:02.620 --> 00:05:06.613
So, I always forget if it's all caps or
not,

87
00:05:06.613 --> 00:05:10.827
baseUrl and that'll be a localhost 8080.

88
00:05:10.827 --> 00:05:13.337
So that's where our application lives and

89
00:05:13.337 --> 00:05:16.552
that's where cypress will
boot up in the first place.

90
00:05:16.552 --> 00:05:23.845
And then also want to, I'm gonna change
the integrationfolder to cypress/e2e,

91
00:05:23.845 --> 00:05:30.330
cuz I think it's weird to call it
an integrationfolder in the first place.

92
00:05:31.740 --> 00:05:34.490
So rename, this actually we'll
just delete this entirely.

93
00:05:34.490 --> 00:05:35.830
Cuz I don't want those tests anymore.

94
00:05:37.310 --> 00:05:42.378
And we'll rename this to or
sorry, add a new folder.

95
00:05:42.378 --> 00:05:47.560
New folder, e2e and
that's where tests are gonna live.

96
00:05:47.560 --> 00:05:51.781
Now, we're gonna be looking at
writing test here in just a second.

97
00:05:51.781 --> 00:05:56.247
So I'm gonna duplicate
our test suite here.

98
00:05:58.666 --> 00:06:01.453
&gt;&gt; Kent: And this is a very simple,

99
00:06:01.453 --> 00:06:08.160
actually doesn't make any insertion,
cypress test.

100
00:06:08.160 --> 00:06:12.830
But some of these things actually
might look familiar, getByText or

101
00:06:12.830 --> 00:06:15.460
getting these different buttons and
clicking on them.

102
00:06:15.460 --> 00:06:19.410
These are not built into Cypress,
and so we need to install those.

103
00:06:19.410 --> 00:06:24.923
So do this with npm install --save-dev

104
00:06:24.923 --> 00:06:29.181
cypress-testing-library.

105
00:06:31.741 --> 00:06:37.880
&gt;&gt; Kent: And then we can reference
that in our support file.

106
00:06:37.880 --> 00:06:41.470
So that's where,
this is kinda like our setup script or

107
00:06:41.470 --> 00:06:44.180
setup testing framework script file.

108
00:06:45.340 --> 00:06:47.680
Where we can set up some custom commands.

109
00:06:47.680 --> 00:06:50.634
And the cypress testing library
has some of these custom commands.

110
00:06:50.634 --> 00:06:55.962
So import
'cypress-testing-library/add-commands'.

111
00:06:55.962 --> 00:06:57.150
That'll add our commands for us.

112
00:06:57.150 --> 00:07:01.290
If you wanna look at that,
it has all the commands here.

113
00:07:01.290 --> 00:07:06.123
For each of the commands, it's gonna add
those and we'll actually see some other

114
00:07:06.123 --> 00:07:09.642
custom commands where that,
we'll write some of our own.

115
00:07:11.451 --> 00:07:11.960
&gt;&gt; Kent: Cool.

116
00:07:13.450 --> 00:07:18.850
So now those commands will be available
on Cypress, and we can run them.

117
00:07:18.850 --> 00:07:24.710
So if we start up, you notice I didn't
have to shutdown the Cypress app and

118
00:07:24.710 --> 00:07:28.650
reopen it again,
it detected my changes which is helpful.

119
00:07:29.760 --> 00:07:32.940
Pop that open and there you go.

120
00:07:33.950 --> 00:07:39.260
Clicked 1, and then click +, and then
click 2, and then click =, and then 3.

121
00:07:39.260 --> 00:07:44.030
And then we assert that,
three was what popped up in the display.

122
00:07:44.030 --> 00:07:46.650
Which actually,
why don't we just do that really quick.

123
00:07:46.650 --> 00:07:47.762
Let's find that.

124
00:07:47.762 --> 00:07:52.614
Okay, so this doesn't have
any way really to identify

125
00:07:52.614 --> 00:07:56.631
it reasonably cuz we're using CSS modules.

126
00:07:56.631 --> 00:08:01.903
So what I'm gonna do is
add a data test ID, so

127
00:08:01.903 --> 00:08:09.040
we'll go to src,
calculator-display, and we'll add.

128
00:08:11.220 --> 00:08:12.680
Right here.

129
00:08:12.680 --> 00:08:13.903
Well, let's do it.

130
00:08:16.891 --> 00:08:20.687
&gt;&gt; Kent: this.props, so spread all
the props so we can forward those on.

131
00:08:23.652 --> 00:08:24.947
&gt;&gt; Kent: We’ll apply it right here.

132
00:08:24.947 --> 00:08:25.658
Data-testid="number-display".

133
00:08:32.169 --> 00:08:35.882
&gt;&gt; Kent: And
then inside of here we can say,

134
00:08:35.882 --> 00:08:40.880
.getByTextId('number-display), and

135
00:08:40.880 --> 00:08:44.859
then we can make an assertion there.

136
00:08:44.859 --> 00:08:50.145
So let's just go ahead and we'll save that
it will rerun, and now it got my test id.

137
00:08:50.145 --> 00:08:56.692
So if you are familiar with what I've been
doing already should be like way what?

138
00:08:56.692 --> 00:08:59.950
If you are not, then you are like okay,
that's a cool out bro.

139
00:08:59.950 --> 00:09:03.872
But take a look at this.

140
00:09:03.872 --> 00:09:09.061
I click on this and
it shows me what was selected.

141
00:09:09.061 --> 00:09:12.655
I'm also looking directly
in my developer tools,

142
00:09:12.655 --> 00:09:17.763
that I'm used to using every day and
looking what the state of the dom is.

143
00:09:17.763 --> 00:09:19.190
So, first off, that's awesome.

144
00:09:19.190 --> 00:09:21.290
You can't do that with slaham.

145
00:09:21.290 --> 00:09:25.670
What is even more mind-blowing, is that
I can actually go back up here, and

146
00:09:25.670 --> 00:09:28.050
look at what the state of the dom
looked like at that point.

147
00:09:28.050 --> 00:09:31.660
And it's not just a screenshot,
it's actual dom.

148
00:09:31.660 --> 00:09:35.000
So I can go and select this.

149
00:09:35.000 --> 00:09:37.250
And at that point, that value is zero.

150
00:09:38.660 --> 00:09:39.600
So that's also awesome.

151
00:09:40.800 --> 00:09:45.370
What's even cooler is at this point,
I can start interacting with this thing.

152
00:09:45.370 --> 00:09:47.420
And it doesn't work I forgot, sorry.

153
00:09:47.420 --> 00:09:51.209
[LAUGH] I have to unclip it and
then I can start interacting it,

154
00:09:51.209 --> 00:09:54.380
even once my tests have all finished.

155
00:09:54.380 --> 00:09:59.430
So for this reason, you generally
wanna do your cleanup as a before each

156
00:09:59.430 --> 00:10:03.880
step rather than an after each because, if
something breaks, you'll stop right here.

157
00:10:03.880 --> 00:10:05.520
And it won't do any cleanup, so

158
00:10:05.520 --> 00:10:09.300
you can be in the same state that
you were when the test busted.

159
00:10:09.300 --> 00:10:12.580
So if you can, try to avoid after each in,
use four each instead.

160
00:10:13.960 --> 00:10:18.217
But this is a very,
very like really amazing

161
00:10:18.217 --> 00:10:23.860
development experience
that Cypress gives us.

162
00:10:23.860 --> 00:10:24.779
So.

163
00:10:25.932 --> 00:10:30.510
&gt;&gt; Kent: Yeah, that's basically it for
setting it up so you can actually run it.

164
00:10:30.510 --> 00:10:34.435
Now I'm gonna add a couple of scripts so
that we can automate the process of

165
00:10:34.435 --> 00:10:37.408
running it, so we don't have
to run the dev in one tab and

166
00:10:37.408 --> 00:10:40.093
then open the app in the other
tab of our terminal.

167
00:10:40.093 --> 00:10:42.453
But get them to run all together.

168
00:10:43.831 --> 00:10:50.697
&gt;&gt; Kent: So, to do this were going
to install a new dependency,

169
00:10:50.697 --> 00:10:56.684
npm install --save-dev- npm-run-all.

170
00:10:56.684 --> 00:10:59.050
How many people have
used npm-run-all before?

171
00:10:59.050 --> 00:10:59.910
Okay.

172
00:10:59.910 --> 00:11:05.120
It’s a pretty handy script that allows
you to run multiple scripts in parallel.

173
00:11:07.060 --> 00:11:12.196
And here I'm going to add a script called,
"test:e2e"dev.

174
00:11:12.196 --> 00:11:17.049
That's a semicolon.

175
00:11:17.049 --> 00:11:22.073
And I'll use npm-run-all, whoops.

176
00:11:23.813 --> 00:11:28.660
&gt;&gt; Kent: And it allows me to
run all of these in parallel.

177
00:11:29.820 --> 00:11:34.948
And we want to run the dev script in order
to make a new script called cy:open.

178
00:11:34.948 --> 00:11:41.920
And cy:open is just
gonna be "cypress open".

179
00:11:41.920 --> 00:11:43.280
So it's basically what we're doing here.

180
00:11:43.280 --> 00:11:46.920
We're running the dev script here,
the Cypress open script here.

181
00:11:46.920 --> 00:11:50.002
We're just gonna do it in one script so
we don't have to run it in two places.

182
00:11:50.002 --> 00:11:52.270
So that's the development stuff.

183
00:11:52.270 --> 00:11:54.874
We can close these down for now.

184
00:11:54.874 --> 00:12:01.132
And then to make it work in CI,
we'll add a test:e2e.

185
00:12:01.132 --> 00:12:04.554
You can call it, test.e2e, cy,
whatever you wanna call it.

186
00:12:04.554 --> 00:12:07.890
And we'll run, npm-run-all start.

187
00:12:09.480 --> 00:12:11.850
Sorry, we want it in --parallel.

188
00:12:11.850 --> 00:12:14.890
And in this case, we also want
it to shut down when it's done.

189
00:12:14.890 --> 00:12:19.600
So, with the dev script it's always open,
it's watching files and everything.

190
00:12:19.600 --> 00:12:23.140
In this case, we want it to shut
down when it's all finished so

191
00:12:23.140 --> 00:12:24.840
it doesn't just hang on to cy.

192
00:12:24.840 --> 00:12:26.140
So we're gonna use race.

193
00:12:26.140 --> 00:12:31.128
And that means that we'll npm-run-all will

194
00:12:31.128 --> 00:12:35.220
kill all of the other processes
as soon as the first one exits.

195
00:12:35.220 --> 00:12:39.439
And in that case all that we really care
about is we're gonna start at the server,

196
00:12:39.439 --> 00:12:43.039
we'll start up cypress,
it'll run all the tests then it'll die and

197
00:12:43.039 --> 00:12:44.610
then we'll kill the server.

198
00:12:46.560 --> 00:12:50.800
So we'll race the start and cy:run and

199
00:12:50.800 --> 00:12:56.593
cy:run will just be,
you guessed it, cypress run.

200
00:12:58.640 --> 00:13:04.950
&gt;&gt; Kent: And now if we run npm run test:
e2e, that's what our cy would run.

201
00:13:04.950 --> 00:13:06.330
And it'll break, what?

202
00:13:07.558 --> 00:13:11.134
Sorry as a, yeah,
before we actually do any of that,

203
00:13:11.134 --> 00:13:14.000
we need to run the build,
so npm run build.

204
00:13:14.000 --> 00:13:17.126
Presumably in cy,
you would have already done this.

205
00:13:17.126 --> 00:13:20.471
You can also have a pretest
e2e that would run the build.

206
00:13:22.269 --> 00:13:23.284
&gt;&gt; Kent: Okay.

207
00:13:24.421 --> 00:13:26.003
&gt;&gt; Kent: Then we have things running.

208
00:13:28.943 --> 00:13:31.540
&gt;&gt; Kent: Cypress actually
also records video.

209
00:13:31.540 --> 00:13:34.270
Even when it's running in headless mode,
it'll record video and

210
00:13:34.270 --> 00:13:38.440
you can upload that to CI and
whatever, see what the problem is.

211
00:13:38.440 --> 00:13:41.250
And it looks like we did break something.

212
00:13:41.250 --> 00:13:43.330
Something timed out, so that's no fun.

213
00:13:43.330 --> 00:13:45.130
Maybe we could watch the video.

214
00:13:45.130 --> 00:13:50.232
I'm not gonna debug that,
cuz we wanna move on.

215
00:13:50.232 --> 00:13:56.852
So we could also run mpm run dev or
test e2e:dev.

216
00:14:00.186 --> 00:14:03.330
&gt;&gt; Kent: And
it will pop up in Cypress for us.

217
00:14:03.330 --> 00:14:07.410
And then we can use Cypress
to drive our development.

218
00:14:07.410 --> 00:14:10.230
That's actually something
I've been meeting to try.

219
00:14:10.230 --> 00:14:14.200
I haven't gotten around to trying this
yet, but I kind of want to just close down

220
00:14:14.200 --> 00:14:19.010
Chrome when I' m developing, cuz I'm
really used to just having Chrome open all

221
00:14:19.010 --> 00:14:21.440
the time and
interacting with the things I'm building.

222
00:14:21.440 --> 00:14:24.460
I kind of wanna just close down Chrome and
just use Cypress.

223
00:14:24.460 --> 00:14:27.190
And so like,
often you're going through a flow,

224
00:14:27.190 --> 00:14:31.450
you're implementing some sort of
form flow or something like that.

225
00:14:31.450 --> 00:14:32.960
And so you pull it up and

226
00:14:32.960 --> 00:14:35.120
you click through, until you get
to this spot you need to fix.

227
00:14:35.120 --> 00:14:37.600
And you'll do some code and
then you'll click through it again.

228
00:14:37.600 --> 00:14:40.900
You could automate all those
click through's with Cypress, and

229
00:14:40.900 --> 00:14:42.590
make it a part of your work flow.

230
00:14:42.590 --> 00:14:46.510
Almost like not test-driven development,
but test as you develop.

231
00:14:46.510 --> 00:14:50.600
And, I think that it would actually
really enhance my workflow.

232
00:14:50.600 --> 00:14:55.050
So I'm looking forward to taking a chance
to, or taking an opportunity to do that,

233
00:14:55.050 --> 00:14:57.097
that would be something to check out.

