WEBVTT

1
00:00:00.080 --> 00:00:03.922
&gt;&gt; Kent C. Dodds: Cool.
So let me intro you to the Cypress

2
00:00:03.922 --> 00:00:07.270
installation in the main app.

3
00:00:08.660 --> 00:00:14.090
And then we can,
I can set you free on the exercise.

4
00:00:15.860 --> 00:00:20.381
So, we're actually gonna be
doing a login thing again.

5
00:00:20.381 --> 00:00:25.175
This is intentional, like the fact that
your unit test, your integration test,

6
00:00:25.175 --> 00:00:28.860
and your end to end tests are all
actually the exact same thing.

7
00:00:28.860 --> 00:00:32.901
It's intentional, if I'm gonna have
an end to end task on all this and

8
00:00:32.901 --> 00:00:37.710
it covers all the same stuff, I'd probably
just have the end to end test honestly.

9
00:00:37.710 --> 00:00:40.840
And then we don't have any edge
cases really in the unit test

10
00:00:40.840 --> 00:00:41.690
that we're covering.

11
00:00:41.690 --> 00:00:43.650
So it's, there's no point.

12
00:00:43.650 --> 00:00:46.740
But the reason that I did it for the
workshop is so that you're really familiar

13
00:00:46.740 --> 00:00:50.750
with how this thing works and so you don't
have to learn more domain specific stuff.

14
00:00:50.750 --> 00:00:53.670
So you can see how it works
in a real world application,

15
00:00:53.670 --> 00:00:58.910
a real world setup without having to
learn a lot of domain specific stuff.

16
00:00:58.910 --> 00:01:02.355
Okay, so if you pop open your
package.json, you'll see a bunch of

17
00:01:02.355 --> 00:01:06.420
scripts here, lots of these are just
kinda workshop specific things.

18
00:01:06.420 --> 00:01:12.000
The one that we're going to be
working with is the test :ete.

19
00:01:12.000 --> 00:01:17.955
And that's gonna open up your development
server and it'll open up Cypress.

20
00:01:19.130 --> 00:01:23.320
So this application is a fair amount
more complicated than that calculator.

21
00:01:23.320 --> 00:01:26.880
Now, we have to open both the,
start up the server.

22
00:01:26.880 --> 00:01:32.440
And the client server, and so
we're doing a fair bit more stuff.

23
00:01:32.440 --> 00:01:36.431
And that's generally
the idea behind end-to-end,

24
00:01:36.431 --> 00:01:40.592
is that you have to have more
things set up and ready to go,

25
00:01:40.592 --> 00:01:44.773
just like you would in your
development process anyway.

26
00:01:44.773 --> 00:01:47.985
So often setting up
end-to-end test doesn't take

27
00:01:47.985 --> 00:01:52.810
much more than setting up a new developer
for their development environment.

28
00:01:52.810 --> 00:01:59.263
But anyway, you can go ahead and
in the root directory of the repository,

29
00:01:59.263 --> 00:02:06.360
run npm run test:e2e, and
this should pop open everything for you.

30
00:02:06.360 --> 00:02:07.760
But started our server.

31
00:02:07.760 --> 00:02:13.480
Started up Cypress, and
you should have a couple of tests in here.

32
00:02:13.480 --> 00:02:15.170
You can check out the post one later.

33
00:02:15.170 --> 00:02:20.606
I have that one kind of as an example
something that's not the login and

34
00:02:20.606 --> 00:02:21.935
registration.

35
00:02:21.935 --> 00:02:26.010
Yeah, so for us,
we're going to look at the registration.

36
00:02:26.010 --> 00:02:30.012
I'll just demo that for you,
or I'll show you the test and

37
00:02:30.012 --> 00:02:33.861
then I'll let you go on the exercise for
registration.

38
00:02:33.861 --> 00:02:36.696
But yeah, you can click run all test
just to see what things look like.

39
00:02:39.466 --> 00:02:42.579
&gt;&gt; Kent C. Dodds: And, so this is one
of the reasons I don't do Cypress for

40
00:02:42.579 --> 00:02:46.768
everything, because it like sometimes
takes a really long time to start.

41
00:02:46.768 --> 00:02:51.742
There we go.

42
00:02:56.626 --> 00:03:02.225
&gt;&gt; Kent C. Dodds: [SOUND] So that's gonna
find and like yeah I just, I love this.

43
00:03:02.225 --> 00:03:06.030
I can go and see okay,
let's just click right here.

44
00:03:06.030 --> 00:03:09.060
And that's what it looks
like at that point in time.

45
00:03:09.060 --> 00:03:12.718
We're on this page and
that's what its doing, you can click and

46
00:03:12.718 --> 00:03:14.630
see what the down looks like.

47
00:03:14.630 --> 00:03:20.027
I'm seeing Peter shake his heads like
all those hours wasted with Selenium.

48
00:03:20.027 --> 00:03:24.852
Okay, so there are couple of things
am just gonna show you right

49
00:03:24.852 --> 00:03:27.870
here in Cyprus that we're doing that.

50
00:03:29.140 --> 00:03:33.740
I think it is an important
aspect of testing, here,

51
00:03:33.740 --> 00:03:36.230
actually maybe I'll show
you the test instead.

52
00:03:36.230 --> 00:03:39.090
Go to Cyprus&gt;e2e&gt;post.

53
00:03:40.780 --> 00:03:45.560
So we have tests already for
the login and registration.

54
00:03:45.560 --> 00:03:50.050
And so, often in end to end
test what I'll see is on

55
00:03:50.050 --> 00:03:54.210
every single test is testing login or
registration and login.

56
00:03:54.210 --> 00:03:57.202
Because you wanna have
a fresh new user for

57
00:03:57.202 --> 00:04:01.490
checking out or adding items
to your cart and checking out.

58
00:04:01.490 --> 00:04:05.302
And then you wanna fresh new user for
going to the settings and

59
00:04:05.302 --> 00:04:07.930
updating your settings and saving that.

60
00:04:07.930 --> 00:04:12.330
And so you wind up testing
the registration login over and over and

61
00:04:12.330 --> 00:04:13.210
over again.

62
00:04:13.210 --> 00:04:17.550
So with cyprus, because your tests
are actually running in the same

63
00:04:17.550 --> 00:04:21.820
context as your application,
you can do a fair amount more.

64
00:04:21.820 --> 00:04:26.385
And, so this post actually we
have a custom command that we

65
00:04:26.385 --> 00:04:29.374
use in this post for login as new user.

66
00:04:29.374 --> 00:04:35.137
If we check out our support and
then the commands here,

67
00:04:35.137 --> 00:04:42.040
we'll see we have login as a new user,
uses a create new user API.

68
00:04:42.040 --> 00:04:45.822
And here, we're actually using the same
generate login form that you were using in

69
00:04:45.822 --> 00:04:48.440
your other test,
cuz this is all running in the browser.

70
00:04:48.440 --> 00:04:52.790
It's bundled out with, actually, it's
not WebPack, it's Browserify, fun fact.

71
00:04:53.880 --> 00:04:58.790
But we get a user form, and
then we create a test user.

72
00:04:58.790 --> 00:05:04.760
We post directly to the endpoint for
the register.

73
00:05:04.760 --> 00:05:10.170
So we're like, this is the browser
firing this request as part of our test.

74
00:05:10.170 --> 00:05:13.570
And we return that user object.

75
00:05:13.570 --> 00:05:16.750
And so then when that happens,
we set that item in local storage, and

76
00:05:16.750 --> 00:05:18.210
we return the user.

77
00:05:18.210 --> 00:05:21.090
And so we've already tested the whole
process of login registration,

78
00:05:21.090 --> 00:05:22.140
we're confident about that.

79
00:05:22.140 --> 00:05:25.500
And so because of that,
we can take this shortcut.

80
00:05:25.500 --> 00:05:26.000
And this.

81
00:05:27.330 --> 00:05:31.160
This is actually something you can
do with a redux, your redux store.

82
00:05:31.160 --> 00:05:35.572
You could, because your tests are running
in the same context as your application.

83
00:05:35.572 --> 00:05:40.575
When Cypress is running, you can expose
your redux store to Cypress, as a global

84
00:05:40.575 --> 00:05:45.690
variable, and Cypress can initialize
your redux store to a certain state.

85
00:05:45.690 --> 00:05:47.510
And you can start off from there.

86
00:05:47.510 --> 00:05:51.870
And so at that point, it ceases to
become a full end to end test and

87
00:05:51.870 --> 00:05:55.250
starts to become a much more focused,
still sort of end to end test,

88
00:05:55.250 --> 00:05:58.620
because it's hitting your server.

89
00:05:58.620 --> 00:06:04.354
In addition, the Cypress folks really want
me to mention that Cypress can be used for

90
00:06:04.354 --> 00:06:06.793
integration and unit test as well.

91
00:06:06.793 --> 00:06:10.316
So you can mark out the server, it has
a really powerful capability to run that.

92
00:06:10.316 --> 00:06:13.868
We're not doing that here,
cuz I'm pretty happy with Jest, but

93
00:06:13.868 --> 00:06:16.270
you can really do that it's very powerful.

94
00:06:16.270 --> 00:06:21.891
And you can also, we could render a react
component in our test to the document and

95
00:06:21.891 --> 00:06:25.810
then interact with it just using Cypress.

96
00:06:25.810 --> 00:06:27.990
So if that sounds interesting to you,

97
00:06:27.990 --> 00:06:32.220
there's a lot of resources
to figure that out.

98
00:06:32.220 --> 00:06:38.200
Okay, so
let's take a look at the register.

99
00:06:40.530 --> 00:06:46.320
And here we describe our authentication
list view registration, I guess.

100
00:06:46.320 --> 00:06:48.280
But before each, you're gonna log out.

101
00:06:48.280 --> 00:06:51.060
You can look at the custom command for
logouts right here.

102
00:06:52.670 --> 00:06:56.950
We take Cypress, or we get the window and
for its local storage,

103
00:06:56.950 --> 00:06:58.940
we're going to invoke remove item.

104
00:06:58.940 --> 00:07:03.217
Let me come back to why it looks so
funny in a second.

105
00:07:03.217 --> 00:07:07.109
And then after you've successfully
made sure that you've logged out,

106
00:07:07.109 --> 00:07:09.670
then we'll visit to the homepage.

107
00:07:09.670 --> 00:07:11.700
And then because we're
using Cypress test utils,

108
00:07:11.700 --> 00:07:13.630
we have some really nice selectors for
this.

109
00:07:13.630 --> 00:07:16.630
So we'll get the registration link,
we'll click on it.

110
00:07:16.630 --> 00:07:20.610
Then we'll get the username field,
we'll fill out the username.

111
00:07:20.610 --> 00:07:23.000
We generated a random form.

112
00:07:24.070 --> 00:07:27.080
Same for the password,
then we'll click on the submit button.

113
00:07:27.080 --> 00:07:30.840
And then we'll assert that we
were directed to the homepage.

114
00:07:30.840 --> 00:07:32.980
That assert route is just this thing.

115
00:07:32.980 --> 00:07:36.750
Kinda feel like that should be built in,
to be honest, but it is what it is.

116
00:07:37.990 --> 00:07:41.150
And then we'll verify that
the user's display name is there.

117
00:07:41.150 --> 00:07:43.640
We could also verify the logout
button is there too.

118
00:07:44.710 --> 00:07:47.949
But this is similar to what
your exercise will be.

119
00:07:47.949 --> 00:07:53.040
And it just gives you kind of an idea
of what this experience is like.

120
00:07:54.070 --> 00:07:56.128
So before I push you off on that,

121
00:07:56.128 --> 00:07:59.949
I mentioned that I would talk
about why this looks so funny.

122
00:07:59.949 --> 00:08:08.230
Why isn't it just
window.localstorage.removeitemtoken?

123
00:08:08.230 --> 00:08:12.530
So the reason that it's
not just like regular old

124
00:08:12.530 --> 00:08:16.830
JavaScript in using these Cypress APIs,
is because

125
00:08:16.830 --> 00:08:22.420
in the world of like humans interacting
with that web applications.

126
00:08:22.420 --> 00:08:26.330
The human side of the interaction
is nothing but synchronous.

127
00:08:26.330 --> 00:08:28.160
Everything happens one after the other.

128
00:08:28.160 --> 00:08:31.100
You can't have a user clicking
on two buttons at the same time.

129
00:08:31.100 --> 00:08:35.560
You can't fire two quick events or
anything like that.

130
00:08:35.560 --> 00:08:40.210
And so in Cypress actually,
every single one of these commands.

131
00:08:40.210 --> 00:08:44.557
Probably a better example is here, every
one of these commands is actually like all

132
00:08:44.557 --> 00:08:47.115
of this code is running synchronously,
right?

133
00:08:47.115 --> 00:08:50.610
So there's no like async wait or
anything going on here.

134
00:08:50.610 --> 00:08:54.200
And so what you're doing is,
think of it like this.

135
00:08:54.200 --> 00:08:56.910
You're writing down instructions
on a piece of paper, and

136
00:08:56.910 --> 00:08:59.580
then you're handing that
piece of paper to Cy.

137
00:08:59.580 --> 00:09:02.650
I kind of wanna call this variable user.

138
00:09:03.870 --> 00:09:04.960
So Cy is like your user.

139
00:09:04.960 --> 00:09:08.450
You say here Cy,
could you do these things for me?

140
00:09:08.450 --> 00:09:11.490
And Cy looks at it, and
it does them one at a time.

141
00:09:11.490 --> 00:09:16.060
And by default, it's gonna say, I'm gonna
keep trying to do this for four seconds,

142
00:09:16.060 --> 00:09:20.450
and if I can't do it anymore,
then I'm gonna say, okay, the test broke.

143
00:09:20.450 --> 00:09:23.650
And you can change that timeout.

144
00:09:23.650 --> 00:09:28.500
So that's basically the idea behind
Cypress's queueing system, and

145
00:09:28.500 --> 00:09:30.930
that's why some of the APIs
are kind of weird.

146
00:09:30.930 --> 00:09:36.950
Some of the assertions are like,
just the fact that all of these happens,

147
00:09:36.950 --> 00:09:40.120
all these code executes synchronously,
but it's actually queueing

148
00:09:40.120 --> 00:09:44.570
up the queueing system, makes some
of the APIs a little less ergonomic.

149
00:09:44.570 --> 00:09:49.650
But if you're familiar with Chai,
the test in the library from that

150
00:09:49.650 --> 00:09:55.010
is commonly use with Mocha, then some of
these will look kind of familiar to you.

151
00:09:55.010 --> 00:09:57.290
And you can check out the docs.

152
00:09:57.290 --> 00:09:59.060
Like I said,
Cypress is very well documented.

153
00:10:01.075 --> 00:10:04.147
Okay, any questions before we
launch off into the exercise?

154
00:10:08.095 --> 00:10:09.160
&gt;&gt; Kent C. Dodds: Okay, cool.

155
00:10:09.160 --> 00:10:12.020
So your excercise will live right in here.

156
00:10:12.020 --> 00:10:14.183
Login.todo.

157
00:10:14.183 --> 00:10:21.819
And I give you some instructions
here on what you're supposed to do.

158
00:10:21.819 --> 00:10:25.260
In your case you are gonna
have to create a new user.

159
00:10:25.260 --> 00:10:29.607
But you don't wanna have it log in, so
just create new user, and yeah, and

160
00:10:29.607 --> 00:10:31.208
then go through the log in.

