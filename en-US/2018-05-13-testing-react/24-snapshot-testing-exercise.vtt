WEBVTT

1
00:00:00.020 --> 00:00:01.201
&gt;&gt; Kent C. Dodds: Before
we get into that exercise,

2
00:00:01.201 --> 00:00:03.330
there's one other thing
that I wanted to mention,

3
00:00:03.330 --> 00:00:07.510
is with jest you can actually configure

4
00:00:07.510 --> 00:00:12.630
how these snapshots are being serialized
using custom snapshot serializers.

5
00:00:12.630 --> 00:00:18.982
And so, the custom snapshot serializer
can take what jest wants to snapshot,

6
00:00:18.982 --> 00:00:23.710
and based off of some information,
it can remove things.

7
00:00:23.710 --> 00:00:27.290
I can say hey,
I don't wanna ever show h2s.

8
00:00:27.290 --> 00:00:31.152
Or if you're doing a CLI and
it prints out the full path to something,

9
00:00:31.152 --> 00:00:34.748
you can actually swap that out for
project route or whatever, so

10
00:00:34.748 --> 00:00:37.561
it works on your friend's computer or
whatever.

11
00:00:37.561 --> 00:00:41.749
But another thing that you
can do with snapshots,

12
00:00:41.749 --> 00:00:46.834
you'll notice that when you do
your snapshot for the log in,

13
00:00:46.834 --> 00:00:52.117
is if you're using CSS and JS,
then all of the CSS that's being

14
00:00:52.117 --> 00:00:58.980
generated as you're rendering things out,
will live in memory somewhere.

15
00:00:58.980 --> 00:01:01.209
In our case, we're using glamorous.

16
00:01:01.209 --> 00:01:05.178
And so the snapshot serializer can say,
hey, glamour,

17
00:01:05.178 --> 00:01:10.570
what's the CSS you would have generated
if we were running in a real browser?

18
00:01:10.570 --> 00:01:14.966
It will give that to you and you can say,
okay, based off of what's in the rendered

19
00:01:14.966 --> 00:01:18.180
DOM, I'm going to insert that
CSS above the rendered DOM.

20
00:01:18.180 --> 00:01:23.090
So you'll see that in your snapshot
that it not only includes the HTML,

21
00:01:23.090 --> 00:01:27.710
but also the CSS that would be rendered,
which is just like what?

22
00:01:27.710 --> 00:01:29.210
Very cool, very, very cool.

23
00:01:29.210 --> 00:01:32.219
So you'll see that when you're doing this.

24
00:01:34.320 --> 00:01:36.820
And because you want to know
about configuration and

25
00:01:36.820 --> 00:01:39.320
stuff, that's actually pretty simple.

26
00:01:39.320 --> 00:01:43.400
Snapshot serializers, and
you pass the names of modules.

27
00:01:43.400 --> 00:01:48.019
There's one for stout components,
actually this one's based on the stout

28
00:01:48.019 --> 00:01:53.013
components one and there are various other
serializers that can be pretty handy.

29
00:01:53.013 --> 00:01:54.645
Okay, cool.

30
00:01:54.645 --> 00:01:58.502
So let's go ahead and
get running with npm run test:client.

31
00:02:01.588 --> 00:02:05.368
&gt;&gt; Kent C. Dodds: And
then go to step-4.todo and

32
00:02:05.368 --> 00:02:09.421
scroll down to this snapshot test.

