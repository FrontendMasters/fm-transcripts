WEBVTT

1
00:00:01.210 --> 00:00:05.165
&gt;&gt; Kent C. Dodds: Okay, yeah, so
the question is from Francis and

2
00:00:05.165 --> 00:00:10.854
it's regarding the guiding principle
of the react testing library,

3
00:00:10.854 --> 00:00:14.947
the DOM testing library is
that phrase that I say.

4
00:00:14.947 --> 00:00:17.680
The more that your test resembles
the way your software is used,

5
00:00:17.680 --> 00:00:19.950
the more confidence it can give you.

6
00:00:19.950 --> 00:00:24.780
And so the question is okay, so how
does that apply to a component library?

7
00:00:26.060 --> 00:00:29.420
Or even one that doesn't expose any why.

8
00:00:29.420 --> 00:00:32.440
And so
the user isn't gonna use that directly.

9
00:00:32.440 --> 00:00:36.915
So in those situation I consider the user
to be the consumer of the software, so

10
00:00:36.915 --> 00:00:38.505
the developer who's using it.

11
00:00:38.505 --> 00:00:42.585
So it's kind of a fancy way to just say,

12
00:00:42.585 --> 00:00:45.275
test your component as
if it's a black box.

13
00:00:45.275 --> 00:00:47.905
And only test the public facing API,

14
00:00:47.905 --> 00:00:51.125
don't worry about any of
the implementation details.

15
00:00:51.125 --> 00:00:56.560
And so, yeah, when I'm building
a component like Downshift

16
00:00:56.560 --> 00:01:00.010
is a component that I've been working
on a lot, it's autocomplete library.

17
00:01:00.010 --> 00:01:03.840
It's not actually used
directly by end users.

18
00:01:03.840 --> 00:01:06.910
People have to use it to create
experiences for end users.

19
00:01:06.910 --> 00:01:10.970
So I just use the public API.

20
00:01:10.970 --> 00:01:15.500
A big part of the API is that
the children prop is a render function.

21
00:01:15.500 --> 00:01:18.540
And so I actually make that a spy and
I make sure that that is called

22
00:01:19.560 --> 00:01:24.190
in the right way when I'm testing
it because that's part of the API.

23
00:01:24.190 --> 00:01:26.750
The props are part of the API and so

24
00:01:26.750 --> 00:01:31.320
I interact with it in the same way
that the software's going to be used.

25
00:01:31.320 --> 00:01:34.950
In that case it'll be used
by other code props and

26
00:01:34.950 --> 00:01:39.281
the children prop.
&gt;&gt; Kent C. Dodds: Cool?

27
00:01:42.547 --> 00:01:44.237
&gt;&gt; Kent C. Dodds: And somebody's asking

28
00:01:44.237 --> 00:01:47.310
do you use jest/no-large-snapshots?

29
00:01:47.310 --> 00:01:49.690
They're referring to an ESLint rule.

30
00:01:49.690 --> 00:01:52.889
Eslint plug in Jest.

31
00:01:54.570 --> 00:02:01.840
It's a great collection of jest rules for
ESLint so I suggest that you use these.

32
00:02:01.840 --> 00:02:05.550
One of these is no large snapshots.

33
00:02:07.120 --> 00:02:07.820
Yeah, right here.

34
00:02:10.450 --> 00:02:15.080
So yeah, you can set a limit for
how big your snapshots can be.

35
00:02:15.080 --> 00:02:18.640
I actually haven't added this yet
to anything.

36
00:02:19.690 --> 00:02:22.490
I probably will eventually.

37
00:02:22.490 --> 00:02:25.970
Yeah, so something to look at.

38
00:02:25.970 --> 00:02:29.200
eSsence is pretty cool for
things like that

