WEBVTT

1
00:00:00.390 --> 00:00:04.120
&gt;&gt; Kent C. Dodds: Okay,
the last thing is jest watch mode.

2
00:00:04.120 --> 00:00:08.390
It's amazing,
it's one of my favorite features of jest.

3
00:00:08.390 --> 00:00:10.950
So I add test:watch,

4
00:00:10.950 --> 00:00:16.681
it's pretty common to do something
like that, just add jest --watch.

5
00:00:18.622 --> 00:00:22.167
&gt;&gt; Kent C. Dodds: And
then we can run npm run test:watch.

6
00:00:24.646 --> 00:00:31.460
&gt;&gt; Kent C. Dodds: And
this will run all of our tests.

7
00:00:31.460 --> 00:00:34.670
But if you read the output,
it's actually kind of interesting.

8
00:00:34.670 --> 00:00:39.040
It says, Ran all test suites
related to changed files.

9
00:00:39.040 --> 00:00:41.810
This is one of my favorite
features of js watch mode.

10
00:00:41.810 --> 00:00:47.830
So saying related change files, I'm gonna
go ahead and add this stuff and commit.

11
00:00:51.496 --> 00:00:54.350
&gt;&gt; Kent C. Dodds: Stuff no verify.

12
00:00:54.350 --> 00:00:57.294
Okay, so now my git is clean and

13
00:00:57.294 --> 00:01:03.400
if I run my test again,
&gt;&gt; Kent C. Dodds: Now

14
00:01:03.400 --> 00:01:05.300
it's not going to run any files.

15
00:01:05.300 --> 00:01:08.990
So there's no test found related to
files changed since last commit.

16
00:01:08.990 --> 00:01:12.810
Press A to run all tests or
run JEST with watch all.

17
00:01:12.810 --> 00:01:14.890
So this is an amazing feature.

18
00:01:14.890 --> 00:01:19.000
It is able to determine
which tests are relevant for

19
00:01:19.000 --> 00:01:20.890
the files that have been changed.

20
00:01:20.890 --> 00:01:25.530
And so if I go ahead and make a change to,

21
00:01:28.700 --> 00:01:32.920
probably a good example
versus the utils and

22
00:01:32.920 --> 00:01:36.930
I can say like any chain,
that's the wrong key.

23
00:01:36.930 --> 00:01:41.380
Any change at all there and
it will say hey git,

24
00:01:41.380 --> 00:01:45.540
I noticed that you changed a file, let me
find the tests that are related to that.

25
00:01:45.540 --> 00:01:47.670
Or that are using that file and
run those tests.

26
00:01:49.690 --> 00:01:51.690
It's pretty neat.

27
00:01:51.690 --> 00:01:57.010
So let's change the calculator, or
sorry let's change the auto scaling text.

28
00:01:58.520 --> 00:02:04.100
They and now,
its running our auto scanning test.

29
00:02:05.350 --> 00:02:07.950
So pretty nifty capability there.

30
00:02:07.950 --> 00:02:08.640
Thank you, jest.

31
00:02:11.650 --> 00:02:12.180
Okay.

32
00:02:12.180 --> 00:02:17.269
Also with this watch usage,
you can press A to run all the tests.

33
00:02:19.130 --> 00:02:23.250
Here actually, once it's finished
doing all of its test run it'll say

34
00:02:23.250 --> 00:02:25.690
press w to show your watch usage.

35
00:02:25.690 --> 00:02:30.320
You can press f to run
only the failed test.

36
00:02:30.320 --> 00:02:33.590
So if you have specific tests that
are failing, you are trying to fix those.

37
00:02:33.590 --> 00:02:37.020
It'll take a snapshot
of which tests failed.

38
00:02:37.020 --> 00:02:40.540
And then keep running those until
you get them all fixed or whatever.

39
00:02:40.540 --> 00:02:42.180
Or you change the mode that you're in.

40
00:02:42.180 --> 00:02:45.950
And then you can run them all and
make sure they're all still working.

41
00:02:45.950 --> 00:02:46.670
Yes, question?

42
00:02:46.670 --> 00:02:47.840
&gt;&gt; Speaker 2: I still have a question.

43
00:02:47.840 --> 00:02:53.640
Would you ever wanna combine
the coverage with the watch mode,

44
00:02:53.640 --> 00:02:54.990
or is there a reason you-
&gt;&gt; Kent C. Dodds: Yeah,

45
00:02:54.990 --> 00:02:55.770
I'm glad you asked that.

46
00:02:55.770 --> 00:02:57.900
Cuz I thought about that a second ago,
and I thought I was gonna forget.

47
00:02:57.900 --> 00:03:05.120
So yeah, so the question is can I
update coverage during watch mode?

48
00:03:05.120 --> 00:03:11.060
And not today, I think, but a couple of
weeks ago I saw a pull request for that.

49
00:03:12.290 --> 00:03:15.890
So it actually might be released, but
I haven't looked into the feature yet.

50
00:03:15.890 --> 00:03:22.700
But yeah, the idea is iterative coverage
or what is the word I'm looking for?

51
00:03:22.700 --> 00:03:26.890
It'll just update the coverage
of the tests that were run.

52
00:03:26.890 --> 00:03:27.710
Yeah, it's crazy.

53
00:03:27.710 --> 00:03:28.460
It's very, very cool.

54
00:03:30.150 --> 00:03:31.750
So that is coming soon.

55
00:03:33.370 --> 00:03:35.100
Good question.

56
00:03:35.100 --> 00:03:39.140
Also you can press p to filter
by file name Regex pattern.

57
00:03:39.140 --> 00:03:41.610
So I'll just copy this,
call this metric pattern hit p.

58
00:03:42.650 --> 00:03:44.370
Auto scanning text now it
will only run that one.

59
00:03:45.420 --> 00:03:51.330
You can press t to filter by a specific
test name so if I had multiple tests

60
00:03:51.330 --> 00:03:56.565
in here this would be more impressive but
I only got one anyway.

61
00:03:56.565 --> 00:03:59.980
But I press T, say M-A-T and

62
00:03:59.980 --> 00:04:06.131
that's the [LAUGH] T-M-A-or M-L mounts so

63
00:04:06.131 --> 00:04:11.580
it only runs the tests that match that.

64
00:04:11.580 --> 00:04:17.890
So you can still do test.only to
only run certain tests but with

65
00:04:17.890 --> 00:04:23.230
this feature you don't have to change any
of your code to run a very specific test.

66
00:04:23.230 --> 00:04:27.530
And it also filters down to the test
that you're currently watching.

67
00:04:27.530 --> 00:04:34.000
But if we do all and then I hit tee, then
it will run all of the tests that match,

68
00:04:34.000 --> 00:04:38.300
in all of the files that match that title,
reg-x.

69
00:04:38.300 --> 00:04:43.750
So very, very powerful capabilities here,
and I love it.

70
00:04:43.750 --> 00:04:49.450
Another thing that you might not notice,
but it does for you, is.

71
00:04:49.450 --> 00:04:53.190
If you have a big test suites, running a
hundred tests whenever you make a change,

72
00:04:53.190 --> 00:04:57.710
and one of those tests fail, the next time
it runs, it will run that test first.

73
00:04:57.710 --> 00:05:00.430
So that you get that feedback
immediately on whether

74
00:05:00.430 --> 00:05:01.820
your change has fixed that test.

75
00:05:03.270 --> 00:05:06.010
Jest is like your favorite friend.

76
00:05:06.010 --> 00:05:07.910
Jest is like my favorite friend.

77
00:05:07.910 --> 00:05:08.410
I just love Jest.

