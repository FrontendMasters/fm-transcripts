WEBVTT

1
00:00:00.280 --> 00:00:04.160
All right, so we have an act of conflict
right now and we need to resolve it.

2
00:00:04.160 --> 00:00:07.883
So given what you know, even though I've
already foreshadowed and already told you,

3
00:00:07.883 --> 00:00:10.390
would you use rebase if this
was the experience of rebase?

4
00:00:12.860 --> 00:00:16.649
My guess is most people probably really
wouldn't wanna necessarily use rebase

5
00:00:16.649 --> 00:00:21.155
if it means you're gonna conflict for
any long-held branch Over and over again.

6
00:00:21.155 --> 00:00:25.185
That'd be a pretty bad experience,
just in general.

7
00:00:25.185 --> 00:00:28.155
So hey, that probably helped me not
have long running feature branches.

8
00:00:28.155 --> 00:00:32.255
So it's like a cure through pain and
misery.

9
00:00:32.255 --> 00:00:36.715
So it's a really nice way to kind of
fix that problem, but here we are.

10
00:00:36.715 --> 00:00:39.371
So anyways, I wouldn't personally
wanna use it just because it's just

11
00:00:39.371 --> 00:00:40.762
people Be a pain.

12
00:00:40.762 --> 00:00:45.012
So instead, there's likely something you
don't know about, it's called rerere.

13
00:00:45.012 --> 00:00:48.779
It's one of the strange options and
all of git stands for recorded reuse,

14
00:00:48.779 --> 00:00:50.472
recorded resolutions.

15
00:00:50.472 --> 00:00:51.803
Even from the Git docs,

16
00:00:51.803 --> 00:00:55.202
it says this functionality is
a bit of a hidden feature.

17
00:00:55.202 --> 00:00:57.312
It's like the best feature and
it's hidden.

18
00:00:57.312 --> 00:00:59.152
Why would you do this?

19
00:00:59.152 --> 00:01:00.689
Why would you name this?

20
00:01:00.689 --> 00:01:01.987
Why is it like this?

21
00:01:01.987 --> 00:01:05.900
Just so painful that this why
are you the way you are, right?

22
00:01:05.900 --> 00:01:07.230
That's the meme, right?

23
00:01:07.230 --> 00:01:13.580
It's happening right before our eyes and
so all you have to do is enable rerer.

24
00:01:13.580 --> 00:01:17.870
You can enable it in your config which
means we can enable it locally just for

25
00:01:17.870 --> 00:01:21.616
this repo or you can enable it
globally for All of your repos.

26
00:01:21.616 --> 00:01:25.080
So for the sake of you not having your
system altered in any sort of way,

27
00:01:25.080 --> 00:01:27.716
just enable it locally for
justice rebound.

28
00:01:27.716 --> 00:01:34.366
So I'm gonna go git config and
rerere enabled the enabled, right?

29
00:01:34.366 --> 00:01:35.866
Yeah with the enabled true.

30
00:01:38.126 --> 00:01:38.916
There we go.

31
00:01:38.916 --> 00:01:39.976
We just did we enabled it.

32
00:01:39.976 --> 00:01:41.936
It's been.
Fantastic, right?

33
00:01:41.936 --> 00:01:43.756
And right now we're still
we're still conflicting.

34
00:01:43.756 --> 00:01:45.756
Remember that we're still
in the middle of this.

35
00:01:45.756 --> 00:01:46.806
It's terrible.

36
00:01:46.806 --> 00:01:47.646
Let's see where we're at.

37
00:01:47.646 --> 00:01:48.256
Okay, good.

38
00:01:48.256 --> 00:01:51.376
Everything we have the change in there,
so I'll just add it.

39
00:01:51.376 --> 00:01:53.516
We'll do a git rebase continue.

40
00:01:53.516 --> 00:01:57.326
It will play it oopsies all right,
spelt continue wrong.

41
00:01:58.626 --> 00:01:59.976
Will now edit our commit message.

42
00:01:59.976 --> 00:02:01.683
I'll keep the Commit message
the same because again,

43
00:02:01.683 --> 00:02:03.771
remember rebase gives you the chance
to edit your commit message.

44
00:02:03.771 --> 00:02:05.281
I don't want to edit it.

45
00:02:05.281 --> 00:02:05.911
Awesome.

46
00:02:05.911 --> 00:02:07.271
We resolved the conflict.

47
00:02:08.541 --> 00:02:12.331
Now, let's see something here.

48
00:02:12.331 --> 00:02:13.671
Okay, fantastic, we did this.

49
00:02:13.671 --> 00:02:14.851
By the way, it's on our local list.

50
00:02:14.851 --> 00:02:20.823
So if you do that, if you go git config,
I forgot to say this, list.

51
00:02:20.823 --> 00:02:23.333
Local only, so
these are only local options.

52
00:02:23.333 --> 00:02:25.583
You'll see re, re, re is right here.

53
00:02:25.583 --> 00:02:27.693
All right, you can cat out the git config.

54
00:02:27.693 --> 00:02:29.183
You see it right there.

55
00:02:29.183 --> 00:02:30.523
So, okay, awesome.

56
00:02:30.523 --> 00:02:31.433
It's been enabled.

57
00:02:31.433 --> 00:02:32.123
We're ready.

58
00:02:32.123 --> 00:02:33.713
Fantastic.

59
00:02:33.713 --> 00:02:36.763
And we already talked about what it is.

60
00:02:36.763 --> 00:02:39.113
It's not all sunshine and
rainbows, by the way.

61
00:02:39.113 --> 00:02:42.363
Sometimes you could resolve something
Thing in a way you don't like and

62
00:02:42.363 --> 00:02:45.991
you need to be able to go through and you
can actually delete how you have recorded

63
00:02:45.991 --> 00:02:48.446
your resolutions so
they don't replay again.

64
00:02:48.446 --> 00:02:51.496
So that can kind of be a pain when
you're like, that was a bad merge.

65
00:02:51.496 --> 00:02:54.066
And then you try to pull again and
it just automatically does it for you.

66
00:02:54.066 --> 00:02:56.536
And you're like, dangit,
it just knew what it was doing, right?

67
00:02:56.536 --> 00:02:58.646
And you don't want that to happen,
but it did.

68
00:02:58.646 --> 00:02:59.966
So just remember that.

69
00:02:59.966 --> 00:03:03.197
All right So let's resolve our conflict
and accept our change with A plus 6.

70
00:03:03.197 --> 00:03:08.677
So let's go back to Hello Git, and let's
make a simple change to just upstream.md.

71
00:03:08.677 --> 00:03:11.547
Now, if we didn't have
recorded resolutions on,

72
00:03:11.547 --> 00:03:14.127
we would actually conflict again here.

73
00:03:14.127 --> 00:03:17.613
But instead, if I go upstream,
go right here, and

74
00:03:17.613 --> 00:03:20.609
go another change with a re-re-re.

75
00:03:20.609 --> 00:03:21.329
We'll go like that.

76
00:03:21.329 --> 00:03:26.179
We'll git add,
we'll git commit rerere, right.

77
00:03:26.179 --> 00:03:29.498
And now I can git pull
rebase on remote and

78
00:03:29.498 --> 00:03:34.139
it's just gonna successfully rebase for
us.

79
00:03:34.139 --> 00:03:35.019
Everything's great.

80
00:03:35.019 --> 00:03:37.749
We're not, we're re conflicting.

81
00:03:37.749 --> 00:03:39.179
It's just smooth sailing now.

82
00:03:39.179 --> 00:03:39.679
So.

83
00:03:40.751 --> 00:03:44.761
Very nice to have rerere on,
I would highly recommend having it on.

84
00:03:44.761 --> 00:03:48.647
Just that only one thing you got to
be careful about is of course the bad

85
00:03:48.647 --> 00:03:49.451
resolution.

86
00:03:50.791 --> 00:03:53.321
All right rerere is free.

87
00:03:53.321 --> 00:03:54.771
You can just use it for free.

88
00:03:54.771 --> 00:03:55.271
Nothing

