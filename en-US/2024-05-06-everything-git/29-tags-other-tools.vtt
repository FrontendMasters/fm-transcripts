WEBVTT

1
00:00:00.550 --> 00:00:03.090
Or onto named locations in GIT History.

2
00:00:03.090 --> 00:00:05.410
This is effectively me saying tags, right?

3
00:00:05.410 --> 00:00:08.698
I call it a named location
because it's not a branch,

4
00:00:08.698 --> 00:00:11.940
because a tag is an immutable
point in history.

5
00:00:11.940 --> 00:00:16.050
Unlike a branch, branches you update,
you make commits to, they move all around.

6
00:00:16.050 --> 00:00:19.905
A tag is an immutable
point in your Git history.

7
00:00:19.905 --> 00:00:24.148
And so the best way to think
about it is that it has all

8
00:00:24.148 --> 00:00:28.417
the setup of a branch just
without changeability.

9
00:00:29.627 --> 00:00:30.347
How to use tags?

10
00:00:30.347 --> 00:00:32.167
Very easy if you've never used tags.

11
00:00:32.167 --> 00:00:36.024
Simply do git tag, the name of the tag you
want to create, git take delete if you

12
00:00:36.024 --> 00:00:39.472
wanna delete it, git take the list amount,
git checkout a tag name and

13
00:00:39.472 --> 00:00:42.102
you'll check out a tag as if
it were a branch except for

14
00:00:42.102 --> 00:00:46.758
you're just checking out a SHA and so
you'll be in a detached head state.

15
00:00:46.758 --> 00:00:49.048
So kind of fun stuff.

16
00:00:49.048 --> 00:00:50.658
I go through the various operations here.

17
00:00:52.998 --> 00:00:54.038
We'll do this one right here.

18
00:00:54.038 --> 00:00:57.876
I think this one's really interesting
tags also show up in the log so

19
00:00:57.876 --> 00:01:01.319
long as us decorate with decorates
like your default option if

20
00:01:01.319 --> 00:01:04.118
you create it Tag git tag foobar,
and I go git log.

21
00:01:04.118 --> 00:01:09.478
You'll see right here, it also shows up so
you know which one you're looking at.

22
00:01:09.478 --> 00:01:12.538
So if you're trying to look for
a specific version, this is fantastic.

23
00:01:12.538 --> 00:01:15.618
You can pull tags with
git pull dash dash tags.

24
00:01:15.618 --> 00:01:18.796
So it's just like working
with branches effectively,

25
00:01:18.796 --> 00:01:23.887
you can push tags with git push dash dash
tags will push tags up to to an endpoint.

26
00:01:23.887 --> 00:01:24.777
There you go.

27
00:01:24.777 --> 00:01:26.617
That's pretty much everything about tags.

28
00:01:26.617 --> 00:01:30.004
I'm gonna largely kind of skip this
version because I don't think... I've said

29
00:01:30.004 --> 00:01:31.932
everything about it there's not you know,

30
00:01:31.932 --> 00:01:34.087
we kind of know at this
point how to use branches.

31
00:01:34.087 --> 00:01:36.097
I've been using them all day.

32
00:01:36.097 --> 00:01:40.591
You understand tags inherently right any
questions on tags that is now they're put

33
00:01:40.591 --> 00:01:42.529
Pretty straightforward, right?

34
00:01:42.529 --> 00:01:44.489
&gt;&gt; Yeah, merge them back and forth.

35
00:01:44.489 --> 00:01:45.257
&gt;&gt; You just can't change them.

36
00:01:45.257 --> 00:01:46.833
&gt;&gt; Yeah, That's it.

37
00:01:46.833 --> 00:01:48.099
&gt;&gt; That's it.

38
00:01:48.099 --> 00:01:49.349
All right.

39
00:01:49.349 --> 00:01:52.479
My favorite tool to use is fugitive.

40
00:01:52.479 --> 00:01:54.409
So that's gonna give you
a little quick look.

41
00:01:54.409 --> 00:01:57.369
I don't I mean, I use the command line
like maybe half the time the other half

42
00:01:57.369 --> 00:01:59.189
the time I use fugitive.

43
00:01:59.189 --> 00:02:00.194
It's pretty dang awesome so far.

44
00:02:00.194 --> 00:02:02.644
If I go in here, add a new line.

45
00:02:02.644 --> 00:02:04.594
This is my unstaged changes, right?

46
00:02:04.594 --> 00:02:08.514
I can stage them, I can put them into that
I can unstage them, I can remove them.

47
00:02:08.514 --> 00:02:11.464
It's very, very nice to be able to
have those kinda fast usages of Git.

48
00:02:11.464 --> 00:02:16.204
I think it just makes life a little bit
nicer, especially as you get good at it.

49
00:02:16.204 --> 00:02:20.224
Let's see, right here and
let's do one more thing.

50
00:02:20.224 --> 00:02:23.084
Just to make it nice, you can.

51
00:02:23.084 --> 00:02:26.944
It allows you to do commit messages right
in your editor, which is also fantastic.

52
00:02:26.944 --> 00:02:30.277
I like that and it also allows if
there was an upstream to push to here,

53
00:02:30.277 --> 00:02:31.784
let's go down to.

54
00:02:31.784 --> 00:02:34.694
Let's go to what's called remote-git.

55
00:02:35.874 --> 00:02:38.964
I can also go in here, and
I can also push if I want to.

56
00:02:38.964 --> 00:02:42.835
So if I press Enter now It's gonna go push
this up to remote it's not going to work

57
00:02:42.835 --> 00:02:46.543
because we may change to hello-git and
there's problems we have to resync, but

58
00:02:46.543 --> 00:02:47.707
I can do that if I want to.

59
00:02:47.707 --> 00:02:50.027
I can also jump in here.

60
00:02:51.217 --> 00:02:53.667
Go into here and I can ZZZ it.

61
00:02:53.667 --> 00:02:57.808
It's now stashed ZZA and it's unstashed,
it's kind of nice to be able to do

62
00:02:57.808 --> 00:03:01.621
that it's easy to rebase. If I
really wanted to hit it with the old R,

63
00:03:01.621 --> 00:03:04.461
I know do something on
I have some on stage.

64
00:03:04.461 --> 00:03:05.071
Right?

65
00:03:05.071 --> 00:03:08.511
I can go in here and
let's not do that one.

66
00:03:08.511 --> 00:03:11.591
There we go and
I can go give it the old Ri and go s.

67
00:03:11.591 --> 00:03:12.311
There we go.

68
00:03:12.311 --> 00:03:16.211
I've now just did an interactive
rebase just change it to one commit.

69
00:03:16.211 --> 00:03:19.642
So having a good tool to be able to
work with Git is worth a whole bunch So

70
00:03:19.642 --> 00:03:24.322
whatever tool you use, I hope well, first
off, Vim's fantastic if you don't use Vim.

71
00:03:24.322 --> 00:03:28.452
But if you don't use it and you use
that other editor, just learn the tool.

72
00:03:28.452 --> 00:03:29.602
I think it's Git Lens, right?

73
00:03:29.602 --> 00:03:32.512
And if you get really good at it,
it can just save a whole bunch of time.

74
00:03:32.512 --> 00:03:36.572
And the thing that really makes
this stuff really good isn't,

75
00:03:36.572 --> 00:03:39.493
it's the reason why I
didn't go over diffs.

76
00:03:39.493 --> 00:03:41.083
It's really pretty much in this course.

77
00:03:41.083 --> 00:03:43.183
I don't think diffs are good to
look at on the command line.

78
00:03:43.183 --> 00:03:44.653
I don't think they're enjoyable.

79
00:03:44.653 --> 00:03:45.632
I don't think there's any,

80
00:03:45.632 --> 00:03:48.213
I don't think anyone here is gonna
wanna resolve a conflict by hand.

81
00:03:48.213 --> 00:03:51.653
We all want the ability to,
look at the change like this, right?

82
00:03:51.653 --> 00:03:53.603
Where you have one side and
the other side, and

83
00:03:53.603 --> 00:03:55.723
you get to choose which
side you want to use.

84
00:03:55.723 --> 00:03:59.183
And so, I largely don't think that
that kind of stuff is useful.

85
00:03:59.183 --> 00:04:00.596
That's why we didn't.
We didn't go over it.

86
00:04:00.596 --> 00:04:04.248
And so please, if you're not using a tool
and you're resolving conflicts by hand,

87
00:04:04.248 --> 00:04:05.346
learn the tool.

88
00:04:05.346 --> 00:04:08.966
It'll make your life like ten times better
because they can be a real big pain

89
00:04:08.966 --> 00:04:11.126
in ass the if you try to
do everything by hand.

