WEBVTT

1
00:00:00.000 --> 00:00:04.833
By the way, everybody, if you're
following along, you really do want to

2
00:00:04.833 --> 00:00:08.919
kind of make sure you have the same
experience I'm gonna have.

3
00:00:08.919 --> 00:00:12.753
And so I want you to try to make
a get into its default kinda setting.

4
00:00:12.753 --> 00:00:16.538
So if you've set an initial branch,
you may want to turn that off for now.

5
00:00:16.538 --> 00:00:20.066
You can tell by just taking this command,
copying and going to the command line and

6
00:00:20.066 --> 00:00:20.741
putting it in.

7
00:00:20.741 --> 00:00:23.416
I have one right there, so
I'm gonna do the same thing, and

8
00:00:23.416 --> 00:00:25.137
I'm just gonna go like this, unset.

9
00:00:25.137 --> 00:00:27.741
And so now, there's nothing there.

10
00:00:27.741 --> 00:00:31.372
And so I have the commands
right here on the screen,

11
00:00:31.372 --> 00:00:34.337
please unset any init.defaultBranch.

12
00:00:34.337 --> 00:00:38.397
You don't have to, but
we're gonna be setting it along the way.

13
00:00:38.397 --> 00:00:40.364
Also, if you have rerere.enabled,

14
00:00:40.364 --> 00:00:43.440
it'd be good if you don't
have rerere.enabled for this.

15
00:00:43.440 --> 00:00:44.656
Because if you do,

16
00:00:44.656 --> 00:00:49.374
you'll kind of miss out on some of
the reasons why git is kinda fantastic.

17
00:00:49.374 --> 00:00:51.799
So awesome, now that we have this,
we can keep on going.

18
00:00:51.799 --> 00:00:56.721
So everybody, hopefully, you have all of
your default settings properly set up,

19
00:00:56.721 --> 00:00:58.985
well, it's time to get good, okay?

20
00:00:58.985 --> 00:01:01.105
I'm ready to get good, hopefully you are.

21
00:01:01.105 --> 00:01:02.481
So how things will be structured?

22
00:01:02.481 --> 00:01:06.067
Every section's gonna come with some
kinda question and answer part,

23
00:01:06.067 --> 00:01:08.169
where I'll say, hey, here's a thing.

24
00:01:08.169 --> 00:01:11.165
And then you're gonna look at the thing,
and hopefully, you'll internalize it.

25
00:01:11.165 --> 00:01:14.600
Then I'll ask you a question like,
all right, let's stage the files.

26
00:01:14.600 --> 00:01:17.119
And if I use these terms, hopefully
you remember what they all mean, and

27
00:01:17.119 --> 00:01:18.906
then you're gonna be able
to do it fantastically.

28
00:01:18.906 --> 00:01:20.223
You guys will all be awesome, and

29
00:01:20.223 --> 00:01:22.448
everyone will get a promotion
when they're done here.

30
00:01:22.448 --> 00:01:25.543
Before we begin,
you want to configure your git experience.

31
00:01:25.543 --> 00:01:28.678
This is that one thing you do when
you first set up your computer, and

32
00:01:28.678 --> 00:01:30.988
that you've completely
forgotten how it works.

33
00:01:30.988 --> 00:01:33.754
You just know you did it at some
point in your lifetime, and

34
00:01:33.754 --> 00:01:35.175
now we're gonna do it again.

35
00:01:35.175 --> 00:01:38.425
git config is a lot like
JavaScript's Object.assign,

36
00:01:38.425 --> 00:01:42.565
you have your globalConfig,
which should be for every single project.

37
00:01:42.565 --> 00:01:45.422
And then you can have your
specific project level config.

38
00:01:45.422 --> 00:01:49.021
So maybe in one project, I only wanna
use rebase, and another project,

39
00:01:49.021 --> 00:01:50.211
I don't want to use it.

40
00:01:50.211 --> 00:01:53.180
Maybe in one project,
I wanna have it under my personal name,

41
00:01:53.180 --> 00:01:56.278
whereas I want all my projects
to be under, say, my work email.

42
00:01:56.278 --> 00:01:59.535
And so you can kind of set them up
individually so you don't goof it up.

43
00:01:59.535 --> 00:02:01.062
It's very, very nice.

44
00:02:01.062 --> 00:02:06.986
So some key facts, all git keys
are in the shape of &lt;section&gt;.&lt;key&gt;,

45
00:02:06.986 --> 00:02:09.723
is really important to remember.

46
00:02:09.723 --> 00:02:12.950
Cuz if you don't remember that,
you'll get these weird errors, and

47
00:02:12.950 --> 00:02:14.381
they'll feel kind of arcane.

48
00:02:14.381 --> 00:02:18.577
Remember, &lt;section&gt;.&lt;key&gt; is
the key to any git config.

49
00:02:18.577 --> 00:02:23.167
global means it's for
all projects, user.name and

50
00:02:23.167 --> 00:02:28.165
user.email are the keys used
in helping create a commit.

51
00:02:28.165 --> 00:02:31.967
So when future you looks in the past and
tries to do a git blame,

52
00:02:31.967 --> 00:02:34.251
who do they see other than yourself?

53
00:02:34.251 --> 00:02:38.657
Well, it's driven by these two things
right here, user.name and user.email.

54
00:02:38.657 --> 00:02:42.773
So to add something to your config,
you do git config add,

55
00:02:42.773 --> 00:02:45.972
then you can do global and
the key and a value.

56
00:02:45.972 --> 00:02:48.322
So just like you just think
of it like a hash map, right,

57
00:02:48.322 --> 00:02:49.735
it's pretty straightforward.

58
00:02:49.735 --> 00:02:54.621
You can view anything with git
config -get and then the key name.

59
00:02:54.621 --> 00:02:56.032
All right, so pretty straightforward.

60
00:02:56.032 --> 00:03:01.702
So very first problem, make sure you
have your user.name and your user.email.

61
00:03:01.702 --> 00:03:05.254
If you don't already have those values,
it'll be very, very nice to do that.

62
00:03:05.254 --> 00:03:06.698
All right, quick solution, there you go.

63
00:03:06.698 --> 00:03:09.298
Here's me adding my user.name and
my user.email.

64
00:03:09.298 --> 00:03:10.827
So hopefully everybody else has that.

65
00:03:10.827 --> 00:03:14.459
Just to make sure I have that, I'll just
copy these right now, throw them in there.

66
00:03:14.459 --> 00:03:18.515
Bada bing, bada boom, I got my git
config user.name and user.email,

67
00:03:18.515 --> 00:03:20.254
the.primeagen@aol.com.

68
00:03:20.254 --> 00:03:21.975
Great email right there.

