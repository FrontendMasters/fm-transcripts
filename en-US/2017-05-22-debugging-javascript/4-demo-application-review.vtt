WEBVTT

1
00:00:00.180 --> 00:00:02.487
So this is going to be our platform for
the day.

2
00:00:02.487 --> 00:00:06.918
We are going to use this as our tool to
debug a bunch of different classes of

3
00:00:06.918 --> 00:00:07.850
errors.

4
00:00:07.850 --> 00:00:12.656
But before we do that, I should talk a
little bit about just general structure so

5
00:00:12.656 --> 00:00:14.390
that nobody gets lost in it.

6
00:00:14.390 --> 00:00:19.395
getRANTr itself is using an older
framework called Backbone.JS and

7
00:00:19.395 --> 00:00:24.450
it is not important at all for
you to know anything about it.

8
00:00:24.450 --> 00:00:29.598
So don't worry, Backbone, all of Backbone
structures itself basically like this.

9
00:00:29.598 --> 00:00:32.970
You'll see Backbone.SOMETHING.extend,

10
00:00:32.970 --> 00:00:36.900
and then there'll be all of the functions
that we actually care about.

11
00:00:36.900 --> 00:00:39.540
All of the bugs are in our functions.

12
00:00:39.540 --> 00:00:41.860
You don't need to worry
about Backbone at all.

13
00:00:41.860 --> 00:00:44.430
You just need to worry about our code.

14
00:00:44.430 --> 00:00:48.160
Let's have a look at what the structure
this actually looks like.

15
00:00:50.280 --> 00:00:56.220
Some of the decisions that I've made
with getRANTr are frankly silly.

16
00:00:56.220 --> 00:01:00.287
The point of this was to make the fewest
number of concepts possible to have

17
00:01:00.287 --> 00:01:03.831
a working app so that everybody
here approaching from different

18
00:01:03.831 --> 00:01:07.989
backgrounds would have an easier time
grokking how the whole thing works.

19
00:01:10.257 --> 00:01:12.928
The structure of getRANTr that you'll see,

20
00:01:12.928 --> 00:01:16.620
there's only a few things
you need to care about.

21
00:01:16.620 --> 00:01:19.220
At the top level,
there's an Exercises folder.

22
00:01:19.220 --> 00:01:21.060
That's not part of the code base at all.

23
00:01:21.060 --> 00:01:25.610
This is just your details about
each exercise we're going to do.

24
00:01:26.720 --> 00:01:30.220
Don't scroll to the bottom
that has the solutions.

25
00:01:30.220 --> 00:01:33.230
I encourage you all to try them first and
then if you get stuck,

26
00:01:33.230 --> 00:01:36.130
you can scroll to the bottom and we'll
tell you exactly how to fix each bug.

27
00:01:37.290 --> 00:01:41.400
The code itself is stored in
the source &gt; public folder.

28
00:01:41.400 --> 00:01:44.770
The other stuff in source is
all about the getRANTr server.

29
00:01:44.770 --> 00:01:47.110
There are no bugs in the getRANTr server.

30
00:01:47.110 --> 00:01:51.250
Well, there are no bugs that are part
of this routine that we need to

31
00:01:51.250 --> 00:01:53.400
fix in the getRANTr server.

32
00:01:53.400 --> 00:01:55.700
I'm sure there are a bunch of bugs in it.

33
00:01:55.700 --> 00:01:58.310
All the stuff that we need to
care about is in source &gt; public.

34
00:01:58.310 --> 00:02:00.460
And this is the web application.

35
00:02:00.460 --> 00:02:05.696
There's two root pages index.html and
signup.html.

36
00:02:05.696 --> 00:02:09.577
Index.html is fairly straightforward
markup using Bootstrap, but

37
00:02:09.577 --> 00:02:13.510
you don't need to worry
about anything with styling.

38
00:02:13.510 --> 00:02:16.740
All the scripts are just included
as straight up script tags.

39
00:02:16.740 --> 00:02:20.090
There's nothing magical happening here.

40
00:02:20.090 --> 00:02:23.750
I just referenced each script in
the order they need to come in.

41
00:02:23.750 --> 00:02:26.670
The scripts themselves are all
stored in public &gt; scripts.

42
00:02:26.670 --> 00:02:27.790
And they're all named

43
00:02:29.320 --> 00:02:32.190
fairly straightforwardly
about what they need to do.

44
00:02:32.190 --> 00:02:33.060
Here's an example.

45
00:02:34.160 --> 00:02:37.920
As you can see from my from the Backbone
thing, all of the stuff that we need to do

46
00:02:37.920 --> 00:02:42.600
does follows the pattern of
Backbone.SOMETHING.extend.

47
00:02:42.600 --> 00:02:45.330
And then all of the functions
are just kind of

48
00:02:45.330 --> 00:02:47.220
shoved in here inside of these objects.

49
00:02:47.220 --> 00:02:49.180
And that's all we need to worry about,
okay?

