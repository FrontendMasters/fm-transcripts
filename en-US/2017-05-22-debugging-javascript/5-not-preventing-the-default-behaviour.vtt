WEBVTT

1
00:00:00.160 --> 00:00:05.690
So let's jump into our first bug, this is
a bug that our QA group identified for us.

2
00:00:05.690 --> 00:00:09.220
And they said that, hey, and
when the users are interacting with it,

3
00:00:10.240 --> 00:00:13.840
they can't actually delete
a rant from their timeline,

4
00:00:13.840 --> 00:00:15.340
even though we have a delete button.

5
00:00:17.610 --> 00:00:21.916
So let's jump in and see if we can
recreate, and fix that problem.

6
00:00:21.916 --> 00:00:23.622
So here is our app,

7
00:00:23.622 --> 00:00:29.723
let me just do a Refresh here to make
sure we have the latest running.

8
00:00:29.723 --> 00:00:35.135
And I'm going to try and
delete this first rant that I made.

9
00:00:39.441 --> 00:00:42.079
And as you can see, nothing happens.

10
00:00:43.100 --> 00:00:49.020
Now, this is just my dev account, now,
whenever you're debugging something, it's

11
00:00:49.020 --> 00:00:54.141
always a good idea to try and use real
data and real users whenever possible.

12
00:00:54.141 --> 00:00:56.249
Because dev data can get all wonky and

13
00:00:56.249 --> 00:00:59.710
weird with a lot of people
just trying new things.

14
00:00:59.710 --> 00:01:03.537
So it's always a good idea to have a way
to like impersonate real users and

15
00:01:03.537 --> 00:01:04.369
use real data.

16
00:01:04.369 --> 00:01:08.656
So fortunately,
getRANTr actually has that, so

17
00:01:08.656 --> 00:01:13.255
I'm going to actually jump in and
change out my user.

18
00:01:13.255 --> 00:01:16.599
Now, you can do that by
going into your console, and

19
00:01:16.599 --> 00:01:21.539
you have to stop the service from running,
and you just type in node import and

20
00:01:21.539 --> 00:01:24.050
I have three users one, two and three.

21
00:01:24.050 --> 00:01:30.081
I'm gonna switch to user two,
which is what I call my Keystone user and

22
00:01:30.081 --> 00:01:35.410
now, I'm going to relaunch
the application with NPM start.

23
00:01:39.300 --> 00:01:43.167
Now, if I reload getRANTr, I can see now,

24
00:01:43.167 --> 00:01:47.154
this is my most prolific
user of get ranter.

25
00:01:47.154 --> 00:01:52.402
Now this user has been trialing
getRANTr for some time and they've been

26
00:01:52.402 --> 00:01:58.280
putting all of their their different
rants in here and that's been great.

27
00:01:58.280 --> 00:02:00.355
And you can really see that my ad.

28
00:02:00.355 --> 00:02:03.659
My advertising targeting
is right on the spot,

29
00:02:03.659 --> 00:02:06.307
I am gonna make a mint with this thing.

30
00:02:06.307 --> 00:02:10.932
But so let's try this again, let's say
that this user wanted to delete maybe

31
00:02:10.932 --> 00:02:14.360
an unfortunate tweet and
remove it from their timeline.

32
00:02:14.360 --> 00:02:17.489
But unfortunately they can't,

33
00:02:17.489 --> 00:02:22.636
they experienced the same bug
that I was seeing in Dev.

34
00:02:22.636 --> 00:02:26.600
So let's pop open our debugger and
see if we can figure it out.

35
00:02:26.600 --> 00:02:29.330
So in Chrome, there's lots of different
ways you can pop up in the debugger.

36
00:02:29.330 --> 00:02:34.820
It varies a little bit from Windows
to OS10, it might be F12 on Windows.

37
00:02:34.820 --> 00:02:39.450
I think it's option Command I on OS10 or

38
00:02:39.450 --> 00:02:41.450
you can always just right click and
say inspect.

39
00:02:43.350 --> 00:02:45.440
There's lots of different
ways to open this up.

40
00:02:46.990 --> 00:02:52.404
So I want to take a look at our console
and see what what all is going on here.

41
00:02:52.404 --> 00:02:57.155
So when I try and delete something,
what happens in our debugger console?

42
00:03:01.777 --> 00:03:07.368
Well, nothing like it looks just empty and
you see a flash happening on your screen.

43
00:03:07.368 --> 00:03:12.700
And that's because the whole page
is reloading every time we do this.

44
00:03:12.700 --> 00:03:16.610
So let's see if we can figure out what's
happening before the page reloads.

45
00:03:16.610 --> 00:03:19.960
So here in the console, we can have
some controls about what's going on.

46
00:03:19.960 --> 00:03:22.023
One of the things you can do
is you can preserve the log.

47
00:03:22.023 --> 00:03:26.143
And what this is gonna do is it's going to
not clear out all of the things that have

48
00:03:26.143 --> 00:03:28.434
happened between when pages have changed.

49
00:03:28.434 --> 00:03:33.894
And helps you debug problems where a page
navigation is part of the problem.

50
00:03:33.894 --> 00:03:38.448
So at this, let's try and
delete something.

51
00:03:38.448 --> 00:03:41.218
Now, we can see a whole
bunch of things on this now,

52
00:03:41.218 --> 00:03:45.430
we see a console message that was
printed at the start of the page.

53
00:03:45.430 --> 00:03:50.063
We caught an error, uncaught error track
GS caught cannot read property destroy of

54
00:03:50.063 --> 00:03:52.592
undefined, and then we navigated the page.

55
00:03:52.592 --> 00:03:57.255
[SOUND] so
the first thing I kind of notice here is

56
00:03:57.255 --> 00:04:01.678
that there's some noise here on this page,

57
00:04:01.678 --> 00:04:06.956
it's showing this file
tracker all over the place.

58
00:04:06.956 --> 00:04:09.429
And that's part of my infrastructure code,

59
00:04:09.429 --> 00:04:13.760
that's something I don't really
need to worry about just yet.

60
00:04:13.760 --> 00:04:17.493
So Chrome has this concept of
black boxing, where you can say,

61
00:04:17.493 --> 00:04:22.221
infrastructure scripts that are not part
of some stuff you need to worry about.

62
00:04:22.221 --> 00:04:27.610
You can tell Chrome to exclude them
from stack traces and reports.

63
00:04:27.610 --> 00:04:32.047
So we're gonna navigate
in here to tracker and

64
00:04:32.047 --> 00:04:37.520
notice that it's empty,
there's nothing in tracker.

65
00:04:39.370 --> 00:04:43.753
If we go back to console, maybe we can
look at what's in rantListView, but

66
00:04:43.753 --> 00:04:44.947
that's empty too.

67
00:04:44.947 --> 00:04:49.498
And it's because these navigation
links that Chrome provides to you

68
00:04:49.498 --> 00:04:52.940
happen to before a navigation event.

69
00:04:52.940 --> 00:04:54.780
And so the pointers that it has are gone,

70
00:04:54.780 --> 00:04:57.823
those specific instances of
the scripts aren't loaded anymore.

71
00:04:57.823 --> 00:05:02.747
And so the first thing we actually need
to fix here is this navigation before we

72
00:05:02.747 --> 00:05:04.730
can really do anything at all.

73
00:05:06.030 --> 00:05:08.986
So let's figure out why this
is navigating, well, so

74
00:05:08.986 --> 00:05:10.866
rather than looking at the error.

75
00:05:10.866 --> 00:05:15.780
Why don't we look at how the user
is doing this interaction.

76
00:05:15.780 --> 00:05:19.922
So I'm going to start by
looking at the DOM itself.

77
00:05:19.922 --> 00:05:23.720
I wanna look at this delete button,
so to do that,

78
00:05:23.720 --> 00:05:25.838
there's a couple of
different ways we can do it.

79
00:05:25.838 --> 00:05:30.380
We can thengrab this little selector
tool from the debugger panel and

80
00:05:30.380 --> 00:05:34.617
just move on to the button that
we're looking to interact with.

81
00:05:34.617 --> 00:05:38.931
And by clicking on it, it will bring
us up this full listing of all of

82
00:05:38.931 --> 00:05:42.720
the entire document and
we can see how this is structured.

83
00:05:43.850 --> 00:05:47.374
This is the HTML document
as interpreted by Chrome.

84
00:05:47.374 --> 00:05:52.356
So we can, kinda move around this,
it'll hover other objects

85
00:05:52.356 --> 00:05:57.250
as we interact on the page, so
you could locate other things.

86
00:05:58.300 --> 00:06:02.324
What I specifically care about is I wanna
know what pieces of JavaScript care about

87
00:06:02.324 --> 00:06:03.036
this button.

88
00:06:03.036 --> 00:06:07.665
And so to do that, I can look at
this event listeners section, now,

89
00:06:07.665 --> 00:06:09.310
this is really cool.

90
00:06:09.310 --> 00:06:14.695
This show is you all of the pieces of
JavaScript, listening to this button or

91
00:06:14.695 --> 00:06:20.433
maybe listening to this button, because
it's listening to one of its parents.

92
00:06:20.433 --> 00:06:23.159
You can see the difference
between the button itself and

93
00:06:23.159 --> 00:06:25.600
the parents by toggling
the ancestors checkbox.

94
00:06:26.850 --> 00:06:29.400
If you uncheck ancestors, it will list

95
00:06:29.400 --> 00:06:32.950
anything that is listening specifically
to this button, which is nothing.

96
00:06:34.040 --> 00:06:36.506
But a very common pattern
in JavaScript and

97
00:06:36.506 --> 00:06:41.180
a lot of JavaScript frameworks will be to
use a pattern called event delegation.

98
00:06:41.180 --> 00:06:44.087
Where you're actually listening for
an event at a higher level, but

99
00:06:44.087 --> 00:06:46.000
you really only care
when that thing got hit.

100
00:06:47.520 --> 00:06:49.460
So if we consider the ancestors,

101
00:06:49.460 --> 00:06:53.075
there's all of these different things
listening, somebody caring about blur,

102
00:06:53.075 --> 00:06:57.450
click, error, popstates, submit,
unhandledrejection, a bunch of stuff.

103
00:06:58.540 --> 00:07:02.175
All we care about is click, the user
is gonna click the Delete button, so

104
00:07:02.175 --> 00:07:03.258
what's listening?

105
00:07:05.835 --> 00:07:09.404
So there's three things listening
actually, we have a couple of things in

106
00:07:09.404 --> 00:07:12.590
tracker listening, but if you recall,
that's framework code.

107
00:07:12.590 --> 00:07:13.357
We don't need to worry about that.

108
00:07:13.357 --> 00:07:15.949
And we have rantListView listening, now,

109
00:07:15.949 --> 00:07:20.000
here's some of our code that
we actually care about.

110
00:07:20.000 --> 00:07:23.098
So directly from here,
I can navigate in and

111
00:07:23.098 --> 00:07:28.062
I can see where are we actually
listening to this code or to this event.

112
00:07:33.512 --> 00:07:38.962
And so here's the event,
the event is using a jQuery syntax

113
00:07:38.962 --> 00:07:45.190
event listener attaching to the event,
click with this callback.

114
00:07:46.530 --> 00:07:49.432
And the event is using an event
delegation pattern to see

115
00:07:49.432 --> 00:07:52.221
if did the thing that were
actually clicked on match?

116
00:07:52.221 --> 00:07:59.420
The selector js-delete and if so, we're
gonna call some function called Delete.

117
00:08:01.150 --> 00:08:03.850
Well, that seems okay,
why is it reloading?

118
00:08:05.280 --> 00:08:10.536
If we go back to the elements themselves,
we see that button is inside of a form.

119
00:08:10.536 --> 00:08:14.777
What happens when you click
a button inside of a form on HTML.

120
00:08:14.777 --> 00:08:17.758
&gt;&gt; Submit actual list.

121
00:08:17.758 --> 00:08:20.370
Post, it submits, it submits the form.

122
00:08:20.370 --> 00:08:25.090
It might be a post, it might be a get,
it does the Submit action of the form.

123
00:08:25.090 --> 00:08:28.950
And so nowhere in the code itself
are we actually stopping that default

124
00:08:28.950 --> 00:08:30.580
action from happening.

125
00:08:30.580 --> 00:08:32.641
So even though our JavaScript is running,

126
00:08:32.641 --> 00:08:35.860
the page itself goes on with what
it's doing and doesn't stop it.

127
00:08:35.860 --> 00:08:40.986
And so we need to add, we need to prevent
that default behavior of this event.

128
00:08:40.986 --> 00:08:44.189
Now, it'd be great if we could
just make that change here.

129
00:08:44.189 --> 00:08:47.691
We found the code,
I don't want to drop out of this view and

130
00:08:47.691 --> 00:08:51.420
find it in my editor and
make the change and reload.

131
00:08:51.420 --> 00:08:55.690
And we can do that with
a concept called work spaces, so

132
00:08:55.690 --> 00:09:00.440
I want to actually edit this file live,
so I can tell Chrome.

133
00:09:00.440 --> 00:09:03.570
Hey, this file that I'm looking
at is on my file system as well.

134
00:09:04.590 --> 00:09:06.920
I do that by just opening
up the context menu and

135
00:09:06.920 --> 00:09:09.180
I want to add a new
folder to my workspace.

136
00:09:11.410 --> 00:09:16.650
Now, my workspace, you'll just point
at wherever you downloaded the stuff.

137
00:09:16.650 --> 00:09:23.656
I downloaded getRANTr in Projects,
getRANTr, here's the root for

138
00:09:23.656 --> 00:09:28.869
me and
I'm appointed at the source public folder.

139
00:09:28.869 --> 00:09:31.916
When I do that Chrome will say,
hey, I'm asking for

140
00:09:31.916 --> 00:09:35.944
the rights to talk to your file system
are you sure you want to do that?

141
00:09:35.944 --> 00:09:45.360
And I do, and now, I can map this
file to an actual file on my drive.

142
00:09:45.360 --> 00:09:46.850
So that pops up with the name and

143
00:09:46.850 --> 00:09:51.710
it says this file as served from the web
server was called rantListViewjs.

144
00:09:51.710 --> 00:09:55.776
And hey, I found a file called
rantListView.js on your file system and

145
00:09:55.776 --> 00:09:59.049
that folder you just told me about,
is it the same thing?

146
00:09:59.049 --> 00:10:05.513
And it is, so now,
I should be able to go directly

147
00:10:05.513 --> 00:10:11.500
into this file and
make the changes I want.

148
00:10:11.500 --> 00:10:12.890
And let's test to see if that works,

149
00:10:12.890 --> 00:10:15.460
let's make a trivial change
just to see if it's working.

150
00:10:15.460 --> 00:10:18.676
So I'm just going to interact
with this initialize function and

151
00:10:18.676 --> 00:10:20.054
I'm going to add an alert.

152
00:10:25.700 --> 00:10:29.984
And if I save that, if this change
actually went to the file system,

153
00:10:29.984 --> 00:10:33.555
I should be able to just reload
the page and see my alert.

154
00:10:33.555 --> 00:10:37.471
And hey, it works.

155
00:10:37.471 --> 00:10:42.350
&gt;&gt; How did you,
get to the file on your computer?

156
00:10:43.470 --> 00:10:48.355
Connecting the two, I miss that?

157
00:10:48.355 --> 00:10:54.320
&gt;&gt; There's a two step process,
the first step is from your sources panel.

158
00:10:54.320 --> 00:10:56.754
If you just right click
basically anywhere.

159
00:10:56.754 --> 00:11:02.200
You select add folder to workspace,
adding the folder

160
00:11:02.200 --> 00:11:07.160
to your workspace pops open navigation
on whatever system you're using.

161
00:11:07.160 --> 00:11:13.260
And I selected the public folder
inside of the getRANTr directory.

162
00:11:13.260 --> 00:11:17.100
What that ended up doing is you'll
see here in the sources panel.

163
00:11:17.100 --> 00:11:20.430
There is now the public folder,
this workspace and

164
00:11:20.430 --> 00:11:25.165
I could actually navigate directly and
see what all is in my file system.

165
00:11:25.165 --> 00:11:29.445
The second step is from a file that
came down from the web server,

166
00:11:29.445 --> 00:11:34.280
I can glue that together with something
in my local workspace by saying,

167
00:11:34.280 --> 00:11:36.360
I've already fixed that one.

168
00:11:41.978 --> 00:11:43.438
I don't think I can do it twice.

169
00:11:43.438 --> 00:11:50.199
[LAUGH] It's like map file to file system
resource will be a third option in here.

170
00:11:51.630 --> 00:11:54.385
And they'll bring up a little search panel
that's already populated with the name of

171
00:11:54.385 --> 00:11:56.386
the file, you should just be able
to hit Enter and it finds it.

172
00:11:59.614 --> 00:12:02.484
All right, so
I'm gonna remove this alert now,

173
00:12:02.484 --> 00:12:05.016
because we actually don't want an alert.

174
00:12:05.016 --> 00:12:09.021
But now we know that changes are going
directly against our source,

175
00:12:09.021 --> 00:12:10.713
so now, we can fix this bug.

176
00:12:10.713 --> 00:12:13.035
So the bug is that we're
not preventing the default.

177
00:12:15.879 --> 00:12:21.240
So here, we only care about this event
really, if we're inside of this condition.

178
00:12:21.240 --> 00:12:26.000
If we're inside if
(evt.target.matches|'js-delete')|.

179
00:12:26.000 --> 00:12:30.160
So before we pass it on to do
whatever it is we wanna do,

180
00:12:30.160 --> 00:12:34.825
let's call event.preventDefault.

181
00:12:34.825 --> 00:12:39.631
Event.preventdefault is part of
the standard set of API's available to

182
00:12:39.631 --> 00:12:40.879
us in the browser.

183
00:12:40.879 --> 00:12:45.388
And it will tell the browser to not do
the default behavior that that event would

184
00:12:45.388 --> 00:12:46.680
normally do.

185
00:12:46.680 --> 00:12:49.011
We're gonna handle this entirely
ourselves with JavaScript.

186
00:12:51.984 --> 00:12:55.580
So with that saved I should
be able to reload the page.

187
00:12:56.900 --> 00:12:59.730
And if I take a look at
my console this time,

188
00:12:59.730 --> 00:13:03.090
there's a ton of stuff in it because
I've had preserve log on a while.

189
00:13:03.090 --> 00:13:08.000
So I'm gonna turn off preserve log now and
reload the page, and

190
00:13:08.000 --> 00:13:09.710
should be all cleared out.

191
00:13:09.710 --> 00:13:12.216
So now, if I try and
delete a rant from my timeline.

192
00:13:14.808 --> 00:13:19.533
Now, there's still an error, but
I didn't reload the page anymore,

193
00:13:19.533 --> 00:13:21.200
I fixed one step of this.

