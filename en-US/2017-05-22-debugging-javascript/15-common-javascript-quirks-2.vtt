WEBVTT

1
00:00:00.000 --> 00:00:05.098
So let's play Who Wants to
be a JavaScriptaire Part 2?

2
00:00:05.098 --> 00:00:08.992
Who'd like to be our
contestant this afternoon?

3
00:00:08.992 --> 00:00:10.473
Do I have a volunteer?

4
00:00:10.473 --> 00:00:12.766
Are you ready to play Who-
&gt;&gt; I'm ready.

5
00:00:12.766 --> 00:00:13.756
&gt;&gt; Wants to be a JavaScriptaire?

6
00:00:13.756 --> 00:00:17.140
Same rules as before,
you get one lifeline.

7
00:00:17.140 --> 00:00:20.912
All right,
what will this JavaScript code return?

8
00:00:20.912 --> 00:00:28.111
Math.max called without any argument,
will it be A Infinity,

9
00:00:28.111 --> 00:00:33.324
B -Infinity, C NaN, or D 10e25678?

10
00:00:37.590 --> 00:00:43.897
&gt;&gt; I don't know, I'm thinking
infinity would be my first go to,

11
00:00:43.897 --> 00:00:48.191
but without an argument, I'll go with C.

12
00:00:48.191 --> 00:00:50.574
&gt;&gt; C, not a number, final answer?

13
00:00:50.574 --> 00:00:51.503
&gt;&gt; Final.

14
00:00:51.503 --> 00:00:54.332
&gt;&gt; Unfortunately,
as is typical for JavaScript,

15
00:00:54.332 --> 00:00:58.410
it's not what you would expect at all,
called with no arguments.

16
00:00:58.410 --> 00:01:01.440
It thinks the difference between
two not defined arguments,

17
00:01:01.440 --> 00:01:07.540
which is different than passing in
undefined twice, will return -Infinity.

18
00:01:07.540 --> 00:01:08.838
&gt;&gt; Darn.

19
00:01:08.838 --> 00:01:09.981
&gt;&gt; All right, that's all right.

20
00:01:09.981 --> 00:01:13.500
Question 2,
what will this JavaScript return?

21
00:01:13.500 --> 00:01:15.620
What is the length of a function?

22
00:01:17.110 --> 00:01:19.310
Is it A, undefined?

23
00:01:19.310 --> 00:01:24.025
Is it B 0, C 2, or D 21?

24
00:01:28.558 --> 00:01:31.376
So we're live on television.

25
00:01:31.376 --> 00:01:32.445
What are you thinking?

26
00:01:32.445 --> 00:01:33.588
&gt;&gt; I don't know.

27
00:01:33.588 --> 00:01:35.928
&gt;&gt; What would the length of a function be?

28
00:01:40.008 --> 00:01:42.013
&gt;&gt; I'm thinking C.

29
00:01:42.013 --> 00:01:44.163
&gt;&gt; C, why do you think it's C?

30
00:01:44.163 --> 00:01:48.685
&gt;&gt; From a function in general,
I'm not quite sure.

31
00:01:48.685 --> 00:01:50.768
It's just kind of a random guess,
let's pop-

32
00:01:50.768 --> 00:01:51.892
&gt;&gt; Random guesses are good.

33
00:01:51.892 --> 00:01:53.080
I like random guesses.

34
00:01:54.350 --> 00:01:56.040
&gt;&gt; I don't know.

35
00:01:56.040 --> 00:01:59.130
I know it's an object, of course,

36
00:01:59.130 --> 00:02:04.285
just like everything in JavaScript is,
for the most part.

37
00:02:04.285 --> 00:02:08.048
I don't know, I'll just go with C again
&gt;&gt; C, 2?

38
00:02:08.048 --> 00:02:09.181
&gt;&gt; Yeah.
&gt;&gt; Final answer?

39
00:02:11.537 --> 00:02:12.207
&gt;&gt; Final.

40
00:02:12.207 --> 00:02:15.104
&gt;&gt; All right, you are correct.

41
00:02:15.104 --> 00:02:19.609
The length of a function in
JavaScript specifies the number of

42
00:02:19.609 --> 00:02:22.476
arguments defined in its definition.

43
00:02:22.476 --> 00:02:23.005
&gt;&gt; Sweet.

44
00:02:23.005 --> 00:02:27.155
&gt;&gt; Not the number of arguments passed or
arguments used, but

45
00:02:27.155 --> 00:02:29.876
the arguments specified, so A and B.

46
00:02:29.876 --> 00:02:30.828
&gt;&gt; Nice.

47
00:02:30.828 --> 00:02:36.476
&gt;&gt; What will this JavaScript code return,
+"42"?

48
00:02:36.476 --> 00:02:41.935
Will it be A 42, B 43,

49
00:02:41.935 --> 00:02:46.657
C "43", or D NaN?

50
00:02:46.657 --> 00:02:50.889
And remember,
you do still have a lifeline.

51
00:02:50.889 --> 00:02:56.494
&gt;&gt; This one feeling a little bit more
confident with but not entirely.

52
00:02:59.577 --> 00:03:04.968
I know it's definitely not a number, so
D, that's probably the obvious answer.

53
00:03:08.813 --> 00:03:16.024
I don't think it's gonna return A or
B either because those are numbers,

54
00:03:16.024 --> 00:03:22.500
so, So it's either gonna be C or D.

55
00:03:23.940 --> 00:03:26.530
And I'll ask the audience.

56
00:03:26.530 --> 00:03:27.798
&gt;&gt; All right, audience.

57
00:03:27.798 --> 00:03:30.786
&gt;&gt; C or D.
&gt;&gt; So by round of applause,

58
00:03:30.786 --> 00:03:32.819
who thinks it's A?

59
00:03:32.819 --> 00:03:35.057
Who thinks it's B?

60
00:03:35.057 --> 00:03:38.124
Who thinks it's C?

61
00:03:38.124 --> 00:03:42.053
&gt;&gt; [APPLAUSE]
&gt;&gt; Smattering, and who thinks it's D?

62
00:03:42.053 --> 00:03:45.987
&gt;&gt; [APPLAUSE]
&gt;&gt; Different smattering.

63
00:03:45.987 --> 00:03:47.691
I'm not sure that that helped you a lot,
sir.

64
00:03:47.691 --> 00:03:49.259
[LAUGH]
&gt;&gt; Well,

65
00:03:49.259 --> 00:03:52.910
at least I know that I'm
confident with C or D though.

66
00:03:52.910 --> 00:03:55.641
&gt;&gt; [LAUGH]
&gt;&gt; The audience certainly agrees with you.

67
00:03:55.641 --> 00:03:57.255
&gt;&gt; We'll go with C.

68
00:03:57.255 --> 00:03:58.344
&gt;&gt; C, final answer?

69
00:03:58.344 --> 00:03:59.772
&gt;&gt; It's A.

70
00:03:59.772 --> 00:04:03.038
&gt;&gt; I think it's C.

71
00:04:03.038 --> 00:04:04.084
&gt;&gt; Yes, final answer.

72
00:04:04.084 --> 00:04:06.611
&gt;&gt; All right, "43".

73
00:04:06.611 --> 00:04:11.031
Unfortunately, it is
the number 42 because the plus

74
00:04:11.031 --> 00:04:14.112
operator is not preceded by a string.

75
00:04:14.112 --> 00:04:18.883
And so it is an arithmetic operator,
and therefore,

76
00:04:18.883 --> 00:04:21.858
coerces the value into a number.

77
00:04:21.858 --> 00:04:27.236
And so
this gets evaluated as 0 + 42 or 42.

78
00:04:27.236 --> 00:04:32.900
All right, next question,
what will this JavaScript code return?

79
00:04:32.900 --> 00:04:36.500
Poop emoji minus poop emoji?

80
00:04:36.500 --> 00:04:41.799
Will it be, A ' ', B the poop emoji,

81
00:04:41.799 --> 00:04:45.460
C, &lt;Error&gt;, or D NaN?

82
00:04:45.460 --> 00:04:50.450
&gt;&gt; Hmm, we know it's equals to in Unicode,

83
00:04:50.450 --> 00:04:53.592
right, for a dot length?

84
00:04:53.592 --> 00:04:57.565
&gt;&gt; Well, yeah, as we learned before, the
length of each of these strings is two.

85
00:04:57.565 --> 00:04:58.240
&gt;&gt; Okay.

86
00:05:02.302 --> 00:05:05.127
I don't know if you can
subtract them though.

87
00:05:05.127 --> 00:05:11.454
So I'm thinking it's

88
00:05:11.454 --> 00:05:17.784
gonna be either C or D.

89
00:05:17.784 --> 00:05:19.146
I will go with C.

90
00:05:19.146 --> 00:05:20.660
&gt;&gt; C, &lt;Error&gt;?

91
00:05:20.660 --> 00:05:21.270
&gt;&gt; That's right.

92
00:05:21.270 --> 00:05:22.590
&gt;&gt; All right, let's see if you're right.

93
00:05:24.350 --> 00:05:26.240
Unfortunately, it is NaN.

94
00:05:26.240 --> 00:05:29.289
Very few things in JavaScript
actually throw errors.

95
00:05:30.620 --> 00:05:34.090
The minus operator is always arithmetic.

96
00:05:34.090 --> 00:05:37.920
And so it will attempts to
coerce both sides into numbers,

97
00:05:37.920 --> 00:05:43.070
which it cannot because a poop emoji does
not have a corresponding number value.

98
00:05:43.070 --> 00:05:45.372
And so therefore, two not a number,

99
00:05:45.372 --> 00:05:48.950
subtracted from each other
continues to be not a number.

100
00:05:50.640 --> 00:05:53.768
What will this JavaScript code return,
!!""?

101
00:05:55.180 --> 00:06:01.247
Will it be, A "", B &lt;Error&gt;,
C true, or D false?

102
00:06:10.877 --> 00:06:14.663
&gt;&gt; I don't know, well,
we know very few things throw errors.

103
00:06:14.663 --> 00:06:17.969
&gt;&gt; Very few things in
JavaScript will throw an error.

104
00:06:17.969 --> 00:06:20.766
&gt;&gt; And-
&gt;&gt; It's very tolerant of whatever garbage

105
00:06:20.766 --> 00:06:21.990
you want to throw at it.

106
00:06:21.990 --> 00:06:24.123
&gt;&gt; So we'll skip that one for now.

107
00:06:28.757 --> 00:06:33.020
I'm kinda feeling keep going with C here,
but

108
00:06:33.020 --> 00:06:38.934
I'm thinking it's gonna be true for
whatever reason because,

109
00:06:44.879 --> 00:06:46.540
&gt;&gt; Why do you think it's gonna be true?

110
00:06:46.540 --> 00:06:48.973
You think it's gonna be a Boolean,
I guess.

111
00:06:48.973 --> 00:06:54.023
&gt;&gt; Well, yep, because it's empty so
empty string,

112
00:06:54.023 --> 00:06:58.140
I think, does return false, am I right?

113
00:06:58.140 --> 00:06:58.775
&gt;&gt; Yep.

114
00:06:58.775 --> 00:07:00.161
&gt;&gt; Okay.

115
00:07:05.322 --> 00:07:07.400
Yeah, so let's go with-
&gt;&gt; C true.

116
00:07:07.400 --> 00:07:10.220
&gt;&gt; I don't know the argument explanation-
&gt;&gt; Well,

117
00:07:10.220 --> 00:07:13.930
unfortunately, I have a different
answer on the next slide.

118
00:07:13.930 --> 00:07:16.970
So I'm sorry,
that is incorrect, it is false.

119
00:07:16.970 --> 00:07:21.430
The not, not syntax flips the value twice.

120
00:07:21.430 --> 00:07:26.740
So the first not changes the empty
string into its opposite Boolean value,

121
00:07:26.740 --> 00:07:31.550
so the opposite value would be true,
and then the second not flips it back.

122
00:07:31.550 --> 00:07:36.110
So the not not anything trick is
using JavaScript as a shortcode

123
00:07:36.110 --> 00:07:39.610
to coerce a value into its Boolean type.

124
00:07:39.610 --> 00:07:40.550
&gt;&gt; A lot of got yous.

125
00:07:40.550 --> 00:07:44.385
&gt;&gt; As a totally unrelated thing from a
question that did not make the quiz here,

126
00:07:44.385 --> 00:07:47.880
1/0 in JavaScript is infinity.

