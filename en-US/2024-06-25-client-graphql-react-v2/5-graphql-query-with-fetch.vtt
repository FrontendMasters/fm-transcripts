WEBVTT

1
00:00:00.100 --> 00:00:02.899
&gt;&gt; Scott Moss: So basically,
there's a couple of things you kinda

2
00:00:02.899 --> 00:00:05.442
already talked so
much about a lot of stuff, but

3
00:00:05.442 --> 00:00:08.633
I'm just gonna go into the stuff
that I didn't talk about.

4
00:00:08.633 --> 00:00:12.140
Which are just, okay,
we kinda know what a query looks like.

5
00:00:12.140 --> 00:00:17.810
We talked about how GraphQL is different
than rest, but how do you use it?

6
00:00:17.810 --> 00:00:23.491
Can we use modern fetching
libraries like window.fetch?

7
00:00:23.491 --> 00:00:27.224
If you still use things like Axios or
things like that,

8
00:00:27.224 --> 00:00:29.262
can we use that to do GraphQL?

9
00:00:29.262 --> 00:00:30.924
What are we actually
sending up to the server?

10
00:00:30.924 --> 00:00:32.197
What does that actually look like?

11
00:00:32.197 --> 00:00:33.807
Yeah, that's what we're gonna talk about.

12
00:00:33.807 --> 00:00:36.487
So like I said, everything's a post,
it always has been.

13
00:00:37.707 --> 00:00:42.348
And what you're basically sending up to
the server is something that looks like

14
00:00:42.348 --> 00:00:43.257
this, right?

15
00:00:43.257 --> 00:00:48.842
So here's an example of me using
fetch to do a GraphQL query.

16
00:00:48.842 --> 00:00:52.203
I have my URL,
my query is literally just a string.

17
00:00:52.203 --> 00:00:55.017
My query does not have a name,
so it's like an anonymous query.

18
00:00:55.017 --> 00:00:57.392
Here's the query I wanna do,
it's a user query.

19
00:00:57.392 --> 00:00:59.639
Here are all the fields I wanna use there.

20
00:00:59.639 --> 00:01:03.828
And, as you can see,
I'm just doing a post request, and

21
00:01:03.828 --> 00:01:09.154
I'm just stringifying that query on
the body as the field called query,

22
00:01:09.154 --> 00:01:12.497
and that's it, that's a GraphQL request.

23
00:01:12.497 --> 00:01:16.863
You don't need anything special to
actually send GraphQL requests to

24
00:01:16.863 --> 00:01:20.489
a GraphQL server,
you already know tools is just fetch and

25
00:01:20.489 --> 00:01:23.945
you just put your query
inside of a string.

26
00:01:23.945 --> 00:01:27.060
Now we're not gonna do that, [LAUGH] but
this is how you could do it,

27
00:01:27.060 --> 00:01:28.305
it's very simple.

28
00:01:28.305 --> 00:01:31.533
We're gonna use some tooling on a front
end to make it a lot better and

29
00:01:31.533 --> 00:01:32.845
simpler and easier for us.

30
00:01:32.845 --> 00:01:36.275
But as you can see,
it's really not that special.

31
00:01:36.275 --> 00:01:39.659
So the one thing I did
wanna talk about is,

32
00:01:39.659 --> 00:01:43.054
I said that everything is a post request.

33
00:01:43.054 --> 00:01:47.822
But the other thing is that everything
is also a 200 status code, even errors,

34
00:01:47.822 --> 00:01:50.322
well it doesn't care about status codes.

35
00:01:50.322 --> 00:01:53.437
In reality status codes are really for

36
00:01:53.437 --> 00:01:59.386
machines really if a browser sees
a status code to show a specific error.

37
00:01:59.386 --> 00:02:01.392
But if you're passing an error,

38
00:02:01.392 --> 00:02:05.979
if you wanna indicate some error happened
from the back end to the front end,

39
00:02:05.979 --> 00:02:11.085
you're probably gonna send some specific
message with a code or something anyway.

40
00:02:11.085 --> 00:02:12.913
So GraphQL just takes
that to another level.

41
00:02:12.913 --> 00:02:17.193
So everything's a 200, even if you threw
an error or even if some error happened.

42
00:02:17.193 --> 00:02:21.105
But what you can do is GraphQL has
different fields on it in which you can

43
00:02:21.105 --> 00:02:22.311
put certain things.

44
00:02:22.311 --> 00:02:25.981
So the result of your query is
always gonna be in the data field.

45
00:02:25.981 --> 00:02:29.375
If there's an error, there's gonna be
an array called errors that have all

46
00:02:29.375 --> 00:02:31.931
the error messages, but
it's always gonna be a 200.

47
00:02:31.931 --> 00:02:36.403
So take that as a grain of salt,
all the logic that you've ever

48
00:02:36.403 --> 00:02:41.144
written checking for
status codes over 300 is pointless now.

49
00:02:41.144 --> 00:02:44.452
GraphQL is always gonna be a 200,
it's always gonna be a post request, but

50
00:02:44.452 --> 00:02:47.874
now you're gonna be checking the payload
of the data to see if there was an error.

51
00:02:47.874 --> 00:02:52.257
Like, hey, is there a result.errors
on here or is there a result.data?

52
00:02:52.257 --> 00:02:55.367
You're gonna be looking at that
to determine what the error was.

53
00:02:55.367 --> 00:02:58.378
And then on the backend, you can send
back whatever you want for the error.

54
00:02:58.378 --> 00:03:00.955
There are different standards and
things that you can pick up or

55
00:03:00.955 --> 00:03:03.784
create yourself, but you can just
send back whatever JSON you want.

56
00:03:03.784 --> 00:03:05.568
And that's how you
determine what an error is.

57
00:03:05.568 --> 00:03:09.691
So obviously, the downsides of that
is that you're no longer gonna get

58
00:03:09.691 --> 00:03:12.028
a red error message in Chrome.

59
00:03:12.028 --> 00:03:15.109
When you actually get an error on
the server, it'll be like, post 200,

60
00:03:15.109 --> 00:03:16.038
everything's good.

61
00:03:16.038 --> 00:03:17.823
So you're gonna be debugging, you're like,

62
00:03:17.823 --> 00:03:20.680
man, I don't know why this
isn't showing up on the screen.

63
00:03:20.680 --> 00:03:22.710
It got a 200 everything looks good.

64
00:03:22.710 --> 00:03:25.670
Well actually go look at the result
of that payload, it's a 200,

65
00:03:25.670 --> 00:03:28.020
but, it actually says errors inside of it.

66
00:03:28.020 --> 00:03:32.078
So that's something to keep in
mind is that like, browsers and

67
00:03:32.078 --> 00:03:37.208
clients won't respond, to it, because
it doesn't know that it has an error,

68
00:03:37.208 --> 00:03:39.907
because the status quo is always 200.

69
00:03:39.907 --> 00:03:43.332
Unless you are using a GraphQL
specific client that knows to

70
00:03:43.332 --> 00:03:47.306
look at error pillowed on that result and
then would show something,

71
00:03:47.306 --> 00:03:51.745
so I thing that is confusing a lot
of people in the past, me included.

72
00:03:51.745 --> 00:03:53.657
So, important to know.

