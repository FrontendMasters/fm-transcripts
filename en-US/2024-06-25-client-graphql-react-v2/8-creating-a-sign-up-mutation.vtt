WEBVTT

1
00:00:00.590 --> 00:00:02.126
&gt;&gt; Scott Moss: Let's get to it.

2
00:00:02.126 --> 00:00:06.353
So we're gonna write our first mutation.

3
00:00:06.353 --> 00:00:08.684
We didn't talk about mutations,
so we're just gonna dive in.

4
00:00:08.684 --> 00:00:11.944
But it's very similar to queries.

5
00:00:11.944 --> 00:00:14.096
So mutations, what is a mutation?

6
00:00:14.096 --> 00:00:15.989
Well, a mutation is like a query.

7
00:00:15.989 --> 00:00:18.596
If a query is a read,
a mutation is a write,

8
00:00:18.596 --> 00:00:23.175
that's basically what it says is
you're mutating some state somewhere.

9
00:00:23.175 --> 00:00:24.384
And that's the whole purpose.

10
00:00:24.384 --> 00:00:25.679
So that's what we're gonna do.

11
00:00:25.679 --> 00:00:27.292
So we're gonna write our first mutation.

12
00:00:27.292 --> 00:00:29.462
I'm gonna walk you
through how I write them.

13
00:00:29.462 --> 00:00:33.915
And then you can take from that what
you want, or you can just write it from

14
00:00:33.915 --> 00:00:37.511
scratch if you want to, but
I'm gonna show you how I do it.

15
00:00:37.511 --> 00:00:38.721
And I think it's pretty cool.

16
00:00:38.721 --> 00:00:42.819
So what we'll do is with
your server running,

17
00:00:42.819 --> 00:00:48.508
if you go to our app,
at least mine is on port 3,000, okay?

18
00:00:48.508 --> 00:00:50.586
Yours might also be on port 3,000.

19
00:00:50.586 --> 00:00:57.434
But if you go to
3000/API/GraphQL in the browser,

20
00:00:57.434 --> 00:01:05.004
you should get an app like this,
so load up a whole app for free.

21
00:01:08.632 --> 00:01:11.443
&gt;&gt; Scott Moss: And this is where
you can explore our GraphQL API.

22
00:01:11.443 --> 00:01:13.999
So this is fully functioned,
this is connected to your database.

23
00:01:13.999 --> 00:01:17.430
So you can actually create users,
you can sign in, you can create issues,

24
00:01:17.430 --> 00:01:20.917
you can delete, you can do everything
that is enabled here on this Back end,

25
00:01:20.917 --> 00:01:21.698
it fully works.

26
00:01:21.698 --> 00:01:24.050
So this is where I like
to experiment with and

27
00:01:24.050 --> 00:01:26.670
write the queries that I
need from our front end.

28
00:01:26.670 --> 00:01:29.023
And then I go and copy them and
add them to our front end.

29
00:01:29.023 --> 00:01:30.768
It's just so much easier, right?

30
00:01:30.768 --> 00:01:33.429
So that's what I'm gonna do.

31
00:01:33.429 --> 00:01:38.601
So we need to create
a mutation to sign in.

32
00:01:38.601 --> 00:01:43.209
Before the Star Wars API, we only had one
Root Type we had query, and that was it.

33
00:01:43.209 --> 00:01:45.387
Well, here we have query and mutation.

34
00:01:45.387 --> 00:01:47.631
There's actually a third one
too called subscriptions.

35
00:01:47.631 --> 00:01:51.231
We won't talk about those too much,
but those are basically web sockets.

36
00:01:51.231 --> 00:01:53.669
GraphQL can do web sockets,
they're called subscriptions.

37
00:01:53.669 --> 00:01:56.431
So I wanna do a mutation cuz
I need to create a user.

38
00:01:56.431 --> 00:01:58.655
I'm gonna sign someone in,
so it must be on mutation.

39
00:01:58.655 --> 00:01:59.867
So I'm gonna click plus on that.

40
00:01:59.867 --> 00:02:01.345
It's gonna add a mutation here.

41
00:02:01.345 --> 00:02:05.171
And then as you can see here, all
the available mutations that our API has,

42
00:02:05.171 --> 00:02:07.010
again, already built this for us.

43
00:02:07.010 --> 00:02:10.406
And which one of these mutations
probably makes the most sense for

44
00:02:10.406 --> 00:02:11.648
assigning someone in?

45
00:02:11.648 --> 00:02:12.811
Probably create a user.

46
00:02:12.811 --> 00:02:15.150
So I'm gonna click Create User.

47
00:02:15.150 --> 00:02:22.609
And then what I can see here is that I
have a non-no argument that I must pass.

48
00:02:22.609 --> 00:02:25.919
I know it's non-null because there's
an exclamation mark after it.

49
00:02:25.919 --> 00:02:28.277
That means you have to include this.

50
00:02:28.277 --> 00:02:32.420
So this mutation must take
an argument called input and

51
00:02:32.420 --> 00:02:34.590
its type must be AuthInput.

52
00:02:34.590 --> 00:02:36.240
So what is AuthInput?

53
00:02:36.240 --> 00:02:41.185
Let's go see, alt input is an object
that has a non-null email and

54
00:02:41.185 --> 00:02:42.963
a non-null password.

55
00:02:42.963 --> 00:02:47.775
So for me to sign up, I have to pass
an argument that has a field called input,

56
00:02:47.775 --> 00:02:51.554
that's an object that has an email and
a password, right?

57
00:02:51.554 --> 00:02:56.039
And then I wanna go ahead and

58
00:02:56.039 --> 00:03:01.308
get back the,token and the ID.

59
00:03:01.308 --> 00:03:05.096
And then for the input, I'm gonna go
ahead and select email and password.

60
00:03:05.096 --> 00:03:06.359
It'll add it for me.

61
00:03:06.359 --> 00:03:09.600
And then here, I can add an email.

62
00:03:09.600 --> 00:03:11.419
So I'm just gonna add email here.

63
00:03:11.419 --> 00:03:13.867
I'm admin@admin.com.

64
00:03:13.867 --> 00:03:18.618
And then I'm gonna add a password.

65
00:03:18.618 --> 00:03:22.968
And if I hit mutation,
if I did it right, It'll create a user.

66
00:03:22.968 --> 00:03:25.591
It's the same way if you did it
on the forum on the main branch.

67
00:03:25.591 --> 00:03:27.310
So you can see it created a user.

68
00:03:27.310 --> 00:03:28.505
I got back the token.

69
00:03:28.505 --> 00:03:32.045
There's a JSON Web Token that gets created
that you need to store in the local

70
00:03:32.045 --> 00:03:32.553
storage.

71
00:03:32.553 --> 00:03:35.058
And here's the ID of the user.

72
00:03:35.058 --> 00:03:36.266
And that's a mutation.

73
00:03:36.266 --> 00:03:38.900
So just to walk through to
connect these dots a little more,

74
00:03:38.900 --> 00:03:40.913
because I know I've
talked about it before.

75
00:03:40.913 --> 00:03:43.561
But I really wanna bring
it home with these inputs

76
00:03:43.561 --> 00:03:47.962
because I remember learning GraphQL and
I quite struggled with this for a while.

77
00:03:47.962 --> 00:03:51.611
But it wasn't until I just thought about
it as just a regular function argument

78
00:03:51.611 --> 00:03:53.281
that it started making sense to me.

79
00:03:53.281 --> 00:03:56.133
This is really just
an argument placeholder.

80
00:03:56.133 --> 00:04:00.549
You can call it whatever you want, but

81
00:04:00.549 --> 00:04:06.216
it has to map to the name
that you put here, okay?

82
00:04:06.216 --> 00:04:10.642
So when I pass up my variables object,
which the graphical client is doing for

83
00:04:10.642 --> 00:04:12.627
us, it has to map to the name here.

84
00:04:12.627 --> 00:04:14.604
So in this case, input is input.

85
00:04:14.604 --> 00:04:15.654
It maps those names.

86
00:04:15.654 --> 00:04:19.916
So if I wanted to call this a,
this has to be called a note.

87
00:04:22.262 --> 00:04:23.943
&gt;&gt; Scott Moss: They have to map, right?

88
00:04:23.943 --> 00:04:25.901
And obviously just freaking
out because like what's a so

89
00:04:25.901 --> 00:04:26.893
there has to be a now as well.

90
00:04:26.893 --> 00:04:31.236
Okay, so
you can call it whatever you want, but

91
00:04:31.236 --> 00:04:34.689
it has to map with the actual input.

92
00:04:34.689 --> 00:04:35.729
No, I got rid of my thing.

93
00:04:35.729 --> 00:04:37.188
Hold on.
We got it back.

94
00:04:37.188 --> 00:04:40.316
[INAUDIBLE]
And

95
00:04:40.316 --> 00:04:45.010
give me that, okay?

96
00:04:45.010 --> 00:04:46.982
And then you have to put the type.

97
00:04:46.982 --> 00:04:48.841
What is the type of this input?

98
00:04:48.841 --> 00:04:51.191
It's the same type that
the mutation says it is.

99
00:04:51.191 --> 00:04:53.873
It's a non-null AuthInput type.

100
00:04:53.873 --> 00:04:54.978
It has to be the same type.

101
00:04:54.978 --> 00:04:57.125
Whatever the schema says,
that's what this has to be.

102
00:04:57.125 --> 00:04:59.884
Has to be the same, okay?

103
00:04:59.884 --> 00:05:05.866
And then here, you could think of this as
if this is you creating a function and

104
00:05:05.866 --> 00:05:08.812
describing what arguments you want,

105
00:05:08.812 --> 00:05:13.524
this is you calling a function and
passing the arguments in.

106
00:05:13.524 --> 00:05:14.428
That's the difference.

107
00:05:14.428 --> 00:05:15.962
I'm creating a function,

108
00:05:15.962 --> 00:05:19.576
which means I can call these
arguments whatever the hell I want.

109
00:05:19.576 --> 00:05:20.786
And here's the type for it.

110
00:05:20.786 --> 00:05:24.776
And here on this next line,
I'm calling a function and

111
00:05:24.776 --> 00:05:29.829
now I'm passing the argument in as
a value to this function, right?

112
00:05:29.829 --> 00:05:30.784
This is type check.

113
00:05:30.784 --> 00:05:33.347
This has to be called input because
that's what it's called here.

114
00:05:33.347 --> 00:05:34.603
It's called input.

115
00:05:34.603 --> 00:05:36.722
And its value must be off input.

116
00:05:36.722 --> 00:05:38.649
Well, guess what has an off input value?

117
00:05:38.649 --> 00:05:42.754
This variable here,
dollar input has all the input values, so

118
00:05:42.754 --> 00:05:44.850
I'm just gonna pass it in here.

119
00:05:44.850 --> 00:05:49.867
So the only two things that have to be
the same are the name of this thing and

120
00:05:49.867 --> 00:05:52.425
the name of this thing, that's it.

121
00:05:52.425 --> 00:05:55.440
These dollar variables can be wherever
the hell you want, as long as the same and

122
00:05:55.440 --> 00:05:56.121
your variables.

123
00:05:59.148 --> 00:06:03.973
&gt;&gt; Scott Moss: That's it, there's really
nothing else to inputs other than you can

124
00:06:03.973 --> 00:06:06.930
use them in many, many different places.

125
00:06:08.950 --> 00:06:11.723
&gt;&gt; Scott Moss: I could
create another user here, or

126
00:06:11.723 --> 00:06:16.732
yeah you could do more than one
mutation by the way in one mutation,

127
00:06:16.732 --> 00:06:20.144
it gets crazy you could
do a lot of stuff here.

128
00:06:20.144 --> 00:06:26.360
So I can make more than one create
user call inside of one mutation,

129
00:06:26.360 --> 00:06:30.699
and it'll do it, but
you're not doing that.

130
00:06:30.699 --> 00:06:32.199
Cool, any questions on that?

131
00:06:34.649 --> 00:06:35.267
&gt;&gt; Scott Moss: No, okay, so

132
00:06:35.267 --> 00:06:37.792
now that I have that,
I'm just gonna copy this mutation.

133
00:06:37.792 --> 00:06:38.705
I'm just gonna do this.

134
00:06:38.705 --> 00:06:39.430
I'm gonna say, cool.

135
00:06:39.430 --> 00:06:41.891
I'm gonna copy that mutations, right?

136
00:06:41.891 --> 00:06:42.888
Mouse, let's copy that.

137
00:06:42.888 --> 00:06:47.109
If, we go back to the notes,
there's gonna be a GQL folder on our root.

138
00:06:47.109 --> 00:06:50.813
And for every single query or
mutation that we create,

139
00:06:50.813 --> 00:06:53.078
we're gonna put in his own file.

140
00:06:53.078 --> 00:06:55.715
There's just something that I
do like to keep them separate.

141
00:06:55.715 --> 00:07:00.349
Keep them that way, and then we're
going to paste in what we just copied.

142
00:07:00.349 --> 00:07:02.566
Or if you wanna write it from scratch,
you can write from scratch.

143
00:07:02.566 --> 00:07:04.128
We're gonna put that in there and
we're gonna export it.

144
00:07:04.128 --> 00:07:06.128
So let's do that.

145
00:07:06.128 --> 00:07:09.796
So for our sign in mutation, or actually
the one I just made was sign up so

146
00:07:09.796 --> 00:07:11.643
I'm gonna do the sign up one first.

147
00:07:11.643 --> 00:07:14.107
So I'm gonna grab the sign up mutation,
I'll put it in there, and

148
00:07:14.107 --> 00:07:16.096
I'm gonna do the same thing for
the sign in mutation.

149
00:07:16.096 --> 00:07:22.726
So we go down, there should be a GQL
folder, if not just make it, let me see.

150
00:07:22.726 --> 00:07:25.477
I guess I just deleted the whole
folder which makes sense for clients.

151
00:07:25.477 --> 00:07:30.398
So on the route, just make a new folder,
call it GQL, like that.

152
00:07:30.398 --> 00:07:35.849
If you got some icons it'll
show well Graph QL icon there.

153
00:07:35.849 --> 00:07:42.761
And then I'm gonna make
my sign up mutation.ts.

154
00:07:42.761 --> 00:07:46.296
It's not JSX I don't have to do TSX or
JSX.

155
00:07:46.296 --> 00:07:49.541
It's just a TypeScript file.

156
00:07:49.541 --> 00:07:56.142
And then I'm going to import from Oracle.

157
00:07:56.142 --> 00:07:57.526
I think it's Oracle next maybe.

158
00:07:57.526 --> 00:07:58.567
Let's see.

159
00:07:58.567 --> 00:08:01.272
Yeah, I'll import GQL.

160
00:08:01.272 --> 00:08:06.227
GQL allows us to do something
called a template tag.

161
00:08:06.227 --> 00:08:08.639
Well, it's hard to describe
it a template tag does, but

162
00:08:08.639 --> 00:08:11.869
it's basically like a function that
takes a string and interpolates on it.

163
00:08:11.869 --> 00:08:15.744
And we don't have to use this, you can
actually just use a regular string, and

164
00:08:15.744 --> 00:08:16.755
it works just fine.

165
00:08:16.755 --> 00:08:20.223
But this array here will convert
your string into what's called

166
00:08:20.223 --> 00:08:24.279
a GraphQL document, basically some
objects that we can pass to the query.

167
00:08:24.279 --> 00:08:27.473
It's just another level of abstraction.

168
00:08:27.473 --> 00:08:32.720
People do this because sometimes
they need to operate on a query and

169
00:08:32.720 --> 00:08:35.448
do things with it, transform it.

170
00:08:35.448 --> 00:08:37.147
There's things like code highlight,

171
00:08:37.147 --> 00:08:39.568
it's just a lot better because
you don't have to do it.

172
00:08:39.568 --> 00:08:40.484
We're gonna do it.

173
00:08:40.484 --> 00:08:45.399
So I'm gonna make my sign up

174
00:08:45.399 --> 00:08:49.539
mutation like this.

175
00:08:49.539 --> 00:08:51.390
Wait, no, I'm not doing it.

176
00:08:51.390 --> 00:08:52.182
I wanna make sure I keep the same.

177
00:08:52.182 --> 00:08:53.152
Okay, yeah, all right.

178
00:08:53.152 --> 00:08:54.812
So I'm just gonna do GQL.

179
00:08:54.812 --> 00:08:55.480
We're gonna do that.

180
00:08:55.480 --> 00:08:56.639
I like to go to the next line.

181
00:08:56.639 --> 00:09:00.704
I'm just gonna paste this here.

182
00:09:00.704 --> 00:09:03.167
I don't know what plugin is telling
me to execute this mutation, but

183
00:09:03.167 --> 00:09:03.981
it's not gonna work.

184
00:09:03.981 --> 00:09:05.530
And I don't know what that is.

185
00:09:05.530 --> 00:09:06.436
But it's cool.

186
00:09:06.436 --> 00:09:10.544
It's a good thought, but
I'm pretty sure it does nothing.

187
00:09:10.544 --> 00:09:15.445
So all you have to set up, but
we got that and then I'm just

188
00:09:15.445 --> 00:09:20.366
going to guess I'll just export
this as a name variable.

189
00:09:20.366 --> 00:09:24.213
That way I don't have to rename it and
have name conflicts when I import it.

190
00:09:27.382 --> 00:09:31.019
&gt;&gt; Scott Moss: Okay, so
we have our sign-up mutation.

191
00:09:31.019 --> 00:09:32.590
We'll bring this over to our sign-up file.

192
00:09:32.590 --> 00:09:33.559
We'll try to sign up.

193
00:09:33.559 --> 00:09:34.495
We'll get that working.

194
00:09:34.495 --> 00:09:37.368
Then we'll come back and make our sign-in
mutation, and we'll try to sign in, and

195
00:09:37.368 --> 00:09:38.265
we'll get that working.

196
00:09:38.265 --> 00:09:41.964
So, let's do that.

197
00:09:41.964 --> 00:09:44.131
And at minimum, you need token.

198
00:09:44.131 --> 00:09:44.904
You need token here.

199
00:09:44.904 --> 00:09:47.680
If you don't have token here,
there's gonna be problems.

200
00:09:47.680 --> 00:09:49.903
You don't really need the ID of
not doing anything with it so

201
00:09:49.903 --> 00:09:52.226
I could just get rid of it, but
you definitely need the token.

202
00:09:52.226 --> 00:09:55.073
Cuz we need to save the token in the local
storage when you sign up, otherwise,

203
00:09:55.073 --> 00:09:56.552
we can't make any requests out of that.

