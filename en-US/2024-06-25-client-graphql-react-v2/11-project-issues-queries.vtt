WEBVTT

1
00:00:00.027 --> 00:00:01.676
&gt;&gt; Scott Moss: All right, so yeah,

2
00:00:01.676 --> 00:00:07.186
that's the N +1 query problem
querying nested data that's cyclic.

3
00:00:07.186 --> 00:00:08.340
You can have issues.

4
00:00:08.340 --> 00:00:13.214
If you take the server side version of
this course, I'll talk more about that.

5
00:00:13.214 --> 00:00:15.927
Might even dive into some solutions,
although it's a little more advanced.

6
00:00:15.927 --> 00:00:17.345
But we'll talk about a little more,

7
00:00:17.345 --> 00:00:19.974
cuz that's definitely something
you have to do on the server side.

8
00:00:19.974 --> 00:00:24.856
The client is the attack, the person
doing the antagonist in that type

9
00:00:24.856 --> 00:00:28.840
of scenario where the server
would be the one defending.

10
00:00:28.840 --> 00:00:32.507
So it's definitely on
the server to figure it out.

11
00:00:32.507 --> 00:00:35.792
But let's get to it,
let's make our issuesQuery.

12
00:00:35.792 --> 00:00:36.894
So that's kinda where we started.

13
00:00:36.894 --> 00:00:38.458
So I'll go back to that.

14
00:00:38.458 --> 00:00:43.417
Let me get rid of this highly nested data,
I don't want that.

15
00:00:43.417 --> 00:00:48.984
And instead, I wanna get the content,
the ID, the name, the status.

16
00:00:48.984 --> 00:00:52.090
I think that might be it for now.

17
00:00:52.090 --> 00:00:55.796
I can't remember the component that
I have once, but that's it for now.

18
00:00:55.796 --> 00:00:59.322
I'll get rid of the variables.

19
00:00:59.322 --> 00:01:03.364
I'm just gonna use my UI
here to help me do it.

20
00:01:03.364 --> 00:01:07.398
So I'll say, get rid of those arguments,
I don't want those.

21
00:01:07.398 --> 00:01:13.587
And I'll call this issuesQuery.

22
00:01:13.587 --> 00:01:15.855
Remember, this name right here,
it doesn't matter.

23
00:01:15.855 --> 00:01:19.982
So you do want them to kinda be
just like functions in JavaScript,

24
00:01:19.982 --> 00:01:22.759
think of if you were making, I don't know,

25
00:01:22.759 --> 00:01:27.057
JavaScript in 2005 where everything
was in one file in global.

26
00:01:27.057 --> 00:01:31.584
You don't want these operations
to have the same name.

27
00:01:31.584 --> 00:01:33.907
So you can name whatever you want, but

28
00:01:33.907 --> 00:01:38.421
try to give them different names to
avoid any potential conflicts there.

29
00:01:38.421 --> 00:01:41.376
So I'mma copy that.

30
00:01:41.376 --> 00:01:45.353
I'm going to go over to our app.

31
00:01:45.353 --> 00:01:49.334
I'mma go to our GQL folder,
make a new file here.

32
00:01:49.334 --> 00:01:52.563
I'm gonna call this IssuesQuery, like so.

33
00:01:52.563 --> 00:01:57.399
I'm going to import it from either one of

34
00:01:57.399 --> 00:02:02.813
these cuz they both
import from the same GQL.

35
00:02:02.813 --> 00:02:04.425
So I'm just gonna say GQL there.

36
00:02:04.425 --> 00:02:10.594
Oops, not gqk, whatever that is,
and I'm going to export this.

37
00:02:10.594 --> 00:02:17.217
So IssuesQuery equals graph query,

38
00:02:17.217 --> 00:02:22.344
or gql tag, and then paste in

39
00:02:22.344 --> 00:02:30.556
my query
&gt;&gt; Scott Moss: There we go,

40
00:02:30.556 --> 00:02:31.677
getting our issues.

41
00:02:31.677 --> 00:02:34.002
I'm gonna keep all these the same.

42
00:02:34.002 --> 00:02:38.207
My component is expecting these fields
with these names if I renamed them.

43
00:02:38.207 --> 00:02:40.557
You have to appropriately go
rename your components and

44
00:02:40.557 --> 00:02:42.709
the properties that they're looking for
as well.

45
00:02:42.709 --> 00:02:45.697
So keep that in mind if
you rename any of these.

46
00:02:45.697 --> 00:02:47.888
But I'm gonna keep them like this.

47
00:02:47.888 --> 00:02:49.467
I think we're good here.

48
00:02:49.467 --> 00:02:56.049
And then now, if you go look at the notes,
&gt;&gt; Scott Moss: We

49
00:02:56.049 --> 00:03:03.651
need to go to app/dashboard/page, and
this is the index page of the app,

50
00:03:03.651 --> 00:03:08.125
and here is where we're
gonna do the query.

51
00:03:08.125 --> 00:03:10.950
But we're also gonna handle
some of the error states and

52
00:03:10.950 --> 00:03:14.628
the loading states as well so you can
kinda see what that would look like.

53
00:03:14.628 --> 00:03:17.423
It's very similar to how you would do,

54
00:03:17.423 --> 00:03:21.582
like I use query from React Query or
SWR, is very similar.

55
00:03:21.582 --> 00:03:25.011
They all kinda just copied each other,
which is great for

56
00:03:25.011 --> 00:03:29.313
the community cuz we'd all benefit
from similar APIs and interfaces.

57
00:03:29.313 --> 00:03:31.750
So let's go do that.

58
00:03:31.750 --> 00:03:37.083
So I'mma go back to my code,
go to the dashboard, go to the page.

59
00:03:39.876 --> 00:03:42.127
&gt;&gt; Scott Moss: There we go.

60
00:03:42.127 --> 00:03:46.517
And I need to import useQuery.

61
00:03:46.517 --> 00:03:48.007
So I'mma say, useQuery.

62
00:03:50.297 --> 00:03:52.149
&gt;&gt; Scott Moss: Do I already have it?

63
00:03:52.149 --> 00:03:54.296
I already have it, useQuery use mutation.

64
00:03:54.296 --> 00:03:57.343
If you don't have it,
then you can import it.

65
00:03:57.343 --> 00:04:01.039
I think we wanna import
it from the next one now.

66
00:04:05.458 --> 00:04:09.319
&gt;&gt; Scott Moss: Our goal, next, yeah,
make sure you import it from the next one.

67
00:04:09.319 --> 00:04:13.575
Although I think because we're in use
client, the ones not from the next one,

68
00:04:13.575 --> 00:04:15.849
we're fine cuz we're doing use client.

69
00:04:15.849 --> 00:04:19.064
But just to be safe,
make sure you import from the next one.

70
00:04:19.064 --> 00:04:22.863
The other reason I chose urql other
than the name being cool as hell and

71
00:04:22.863 --> 00:04:26.532
it being easy to understand is that
they actually are one of the only

72
00:04:26.532 --> 00:04:29.240
ones that offer full support for
app directory.

73
00:04:29.240 --> 00:04:31.152
Apollo had an experimental one.

74
00:04:31.152 --> 00:04:32.467
That's literally the name of the package.

75
00:04:32.467 --> 00:04:34.957
It was next experimental.

76
00:04:34.957 --> 00:04:38.083
And I was like, okay, that just means I'm
gonna have to reshoot this course like two

77
00:04:38.083 --> 00:04:40.128
days cuz as soon as I go home,
they're gonna release.

78
00:04:40.128 --> 00:04:42.144
The final one is gonna be different,
and I'm gonna like,

79
00:04:42.144 --> 00:04:43.387
the course doesn't work anymore.

80
00:04:43.387 --> 00:04:46.303
So I didn't wanna do that.

81
00:04:46.303 --> 00:04:50.244
So this one had full support,
so we're using it.

82
00:04:50.244 --> 00:04:51.473
Okay, so we have that.

83
00:04:51.473 --> 00:04:52.603
We just need to import our query.

84
00:04:52.603 --> 00:04:54.785
So IssuesQuery.

85
00:04:54.785 --> 00:04:58.962
Actually, I should just be able
to do issuesQuery like that.

86
00:04:58.962 --> 00:05:00.332
There we go.

87
00:05:00.332 --> 00:05:07.351
Got our issuesQuery, and then down here,
I'm gonna make my declaration.

88
00:05:07.351 --> 00:05:12.089
So I'll say, useQuery, like this,

89
00:05:12.089 --> 00:05:16.394
pass in my issuesQuery, like so.

90
00:05:16.394 --> 00:05:18.340
And then here I get back two arguments.

91
00:05:18.340 --> 00:05:21.127
One is an object, I'm gonna
de-structure some things from there.

92
00:05:21.127 --> 00:05:26.084
And the second one is a function that
you can call to re-execute the query.

93
00:05:26.084 --> 00:05:27.399
I'm just gonna call it replay.

94
00:05:27.399 --> 00:05:31.540
So because what's gonna happen is,

95
00:05:31.540 --> 00:05:35.420
let's see if we got issuesQuery.

96
00:05:35.420 --> 00:05:36.438
Let me figure out that.

97
00:05:41.584 --> 00:05:44.039
&gt;&gt; Scott Moss: Why I'm doing that, right?

98
00:05:44.039 --> 00:05:48.335
And he's an object, sorry about that.

99
00:05:48.335 --> 00:05:49.460
That makes more sense.

100
00:05:49.460 --> 00:05:51.338
So I need to pass in the query.

101
00:05:51.338 --> 00:05:54.987
Not that, there we go.

102
00:05:54.987 --> 00:05:59.145
Passing an object with the queries
parameter, and then issueQuery.

103
00:05:59.145 --> 00:06:00.628
But like I was saying,

104
00:06:00.628 --> 00:06:05.946
you're gonna get this function here that
you can call again to rerun this query.

105
00:06:05.946 --> 00:06:11.016
Because unlike me, use mutation,
when this component renders,

106
00:06:11.016 --> 00:06:14.830
this query is gonna fire
immediately by default.

107
00:06:14.830 --> 00:06:19.323
You can stop it from happening, but
by default, it's gonna fire immediately.

108
00:06:19.323 --> 00:06:22.753
And if you wanna rerun it,
here's a function you can call, and

109
00:06:22.753 --> 00:06:25.358
I'll rerun the same query,
and we will use it.

110
00:06:25.358 --> 00:06:26.982
So that's why I'm making a declaration for
it.

111
00:06:26.982 --> 00:06:28.229
So we got that.

112
00:06:28.229 --> 00:06:34.556
And then here we'll get the data, we'll
get the error if there is an error, and

113
00:06:34.556 --> 00:06:40.334
we'll get fetching, which will be
a Boolean if it's fetching, okay?

114
00:06:40.334 --> 00:06:41.662
So we got those.

115
00:06:44.506 --> 00:06:47.015
&gt;&gt; Scott Moss: And
then basically what I wanna do is here,

116
00:06:47.015 --> 00:06:49.184
I'm mapping over this empty array.

117
00:06:49.184 --> 00:06:53.360
Instead, I wanna map over
the data if there's data, and

118
00:06:53.360 --> 00:06:58.148
short error if there's error,
and fetching if it's fetching.

119
00:06:58.148 --> 00:06:58.811
So let's do that.

120
00:06:58.811 --> 00:07:01.796
So I'mma do here.

121
00:07:01.796 --> 00:07:04.543
This is pretty much all the reactor
gonna do for this course.

122
00:07:04.543 --> 00:07:05.625
This is all of the rear.

123
00:07:05.625 --> 00:07:11.178
So I'm gonna say, if we're fetching and
there's a component called spinner,

124
00:07:11.178 --> 00:07:14.129
it's probably already imported for you.

125
00:07:14.129 --> 00:07:20.732
If it's not, you can import it from,
where is it at, spinner.

126
00:07:20.732 --> 00:07:25.088
Here it is, it's from @nextui-org/react.

127
00:07:25.088 --> 00:07:27.716
It's called spinner,
should already be important.

128
00:07:27.716 --> 00:07:29.378
So you can use that like this.

129
00:07:29.378 --> 00:07:34.838
So if fetching, and
show the spinner like that.

130
00:07:34.838 --> 00:07:39.197
And then if there's an error we can say,
error.

131
00:07:39.197 --> 00:07:42.873
And I don't have a fancy error component,

132
00:07:42.873 --> 00:07:46.863
so I'm just gonna put a div that says,
Error.

133
00:07:50.634 --> 00:07:54.982
&gt;&gt; Scott Moss: And then for
here I wanna say, well,

134
00:07:54.982 --> 00:08:01.166
if there's data, and
I wanna say, data.issues.

135
00:08:01.166 --> 00:08:03.260
And I know it's issues
because if I go look at my

136
00:08:03.260 --> 00:08:07.394
query,
&gt;&gt; Scott Moss: That's what it's called

137
00:08:07.394 --> 00:08:08.475
here, it's called issues.

138
00:08:08.475 --> 00:08:11.081
So it's data.issues.

139
00:08:11.081 --> 00:08:16.600
If this was something else,
it'd be data dot whatever that is.

140
00:08:16.600 --> 00:08:22.172
So we got data.issues.map,
I get the issues here.

141
00:08:22.172 --> 00:08:24.739
And then I'm just gonna look over the
issue and pass it to the issue component.

142
00:08:30.264 --> 00:08:32.250
&gt;&gt; Scott Moss: Cool, so we got that.

143
00:08:32.250 --> 00:08:36.630
You'll probably do this, you won't see any
issues cuz you probably don't have any in

144
00:08:36.630 --> 00:08:40.230
your database cuz we haven't,
unless you went into the API explorer,

145
00:08:40.230 --> 00:08:43.360
ran the create issue mutation and
created some issues there.

146
00:08:43.360 --> 00:08:45.752
You probably won't see any here.

147
00:08:45.752 --> 00:08:48.910
But that would have required
setting up the auth and

148
00:08:48.910 --> 00:08:50.899
all that stuff inside of there.

149
00:08:50.899 --> 00:08:56.538
So which is basically what I have here,
inside of mine I have this headers.

150
00:08:56.538 --> 00:09:00.052
And the reason I have issues on this, and
you're not gonna see them when I go in.

151
00:09:00.052 --> 00:09:03.637
Let me close this so
you can see what I'm talking about.

152
00:09:03.637 --> 00:09:08.263
I have a JSON web token
here on my Apollo server.

153
00:09:08.263 --> 00:09:13.724
And that's why when I do the issuesQuery,
it actually gets the issues.

154
00:09:13.724 --> 00:09:19.812
But if you try to do it, you'll probably
get unauthorization error or something.

155
00:09:19.812 --> 00:09:22.534
Yeah, you'll get unauthorized,
like I'm getting now.

156
00:09:22.534 --> 00:09:26.068
So you probably will see that when
we write this query, and we won't.

157
00:09:26.068 --> 00:09:29.937
Well, if you're signed in, you won't
see it, but if you try to do it here,

158
00:09:29.937 --> 00:09:30.792
you will see it.

159
00:09:30.792 --> 00:09:34.554
But when you go to the app and you refresh
the page, it'll just probably just be

160
00:09:34.554 --> 00:09:37.462
an empty array, which means
nothing will shown on the page.

161
00:09:37.462 --> 00:09:40.089
But if you run it in here,
you're probably gonna authorize.

162
00:09:42.495 --> 00:09:46.291
&gt;&gt; Scott Moss: Okay, so back to our code,
let's make sure this looks good,

163
00:09:46.291 --> 00:09:48.118
everything looks good here.

164
00:09:48.118 --> 00:09:52.666
I think all this is still fine,
let's run this.

165
00:09:52.666 --> 00:09:56.977
So I'mma go back to my app here,
or refresh.

166
00:09:56.977 --> 00:09:59.342
There's my loading state,
you saw those fetching.

167
00:09:59.342 --> 00:10:02.712
I don't see error, so I guess it didn't
error, but I also don't see any issues

168
00:10:02.712 --> 00:10:05.799
because, again, my user doesn't
have any issues, I can verify this.

169
00:10:05.799 --> 00:10:08.281
I'll go to the Network tab, hit Refresh.

170
00:10:08.281 --> 00:10:11.984
And then what you'll notice is, you
should just be able to go down here and

171
00:10:11.984 --> 00:10:14.391
click on where it says graphql,
click on that.

172
00:10:14.391 --> 00:10:16.736
And you can see right here,
I don't have any issues.

173
00:10:16.736 --> 00:10:19.841
It's empty array.

174
00:10:19.841 --> 00:10:22.793
I zoomed in too much.

175
00:10:22.793 --> 00:10:23.876
There we go.

176
00:10:26.971 --> 00:10:28.653
&gt;&gt; Scott Moss: So
you should also be getting an empty array.

