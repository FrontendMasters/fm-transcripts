WEBVTT

1
00:00:00.083 --> 00:00:03.832
All right, I said we're gonna work on x,
but I want to, first of all,

2
00:00:03.832 --> 00:00:08.046
address some little things that could
possibly go wrong, which is this code.

3
00:00:08.046 --> 00:00:11.245
If the green flag was already running and
then you went to drag him,

4
00:00:11.245 --> 00:00:13.888
well, it's checking to see
if he's not touching it.

5
00:00:13.888 --> 00:00:17.660
And then theoretically iterating the y so
it's ready to drop real far.

6
00:00:17.660 --> 00:00:21.219
The other one is,
if you don't use the color picker,

7
00:00:21.219 --> 00:00:24.953
you could end up with a color
that almost looks the same.

8
00:00:24.953 --> 00:00:28.288
But unless Scratch has
the exact same color,

9
00:00:28.288 --> 00:00:32.350
that triggering color won't do the trick,
right?

10
00:00:32.350 --> 00:00:36.658
Which is, again, an argument why you could
choose to use Sprite collisions instead of

11
00:00:36.658 --> 00:00:37.492
colors as well.

12
00:00:37.492 --> 00:00:43.020
But a simple way to fix that is just
grab it and pick the same color, right?

13
00:00:43.020 --> 00:00:46.247
Otherwise, slightly off, it doesn't,
and if you're very close,

14
00:00:46.247 --> 00:00:48.830
it could be hard to see that,
so just check that as well.

15
00:00:50.690 --> 00:00:55.570
So before we do the x axis,
let's add back in jumping, and

16
00:00:55.570 --> 00:00:59.466
then I wanna show an even
better way to do this.

17
00:00:59.466 --> 00:01:04.988
Cuz we are constantly checking to see,
every time,

18
00:01:04.988 --> 00:01:09.650
can we go back up, and
doing it one by one.

19
00:01:09.650 --> 00:01:10.693
There should be an easier way.

20
00:01:10.693 --> 00:01:14.209
If it was falling,
we should know where we were and

21
00:01:14.209 --> 00:01:17.580
to be able to adjust
a little bit easier as well.

22
00:01:17.580 --> 00:01:20.000
It can be a little bit more complicated.

23
00:01:20.000 --> 00:01:25.016
And I will argue with you that if
you don't need something like this,

24
00:01:25.016 --> 00:01:30.590
then maybe you don't need to do it,
and just go for something simpler.

25
00:01:30.590 --> 00:01:36.045
But especially when it comes
to getting the x axis working,

26
00:01:36.045 --> 00:01:42.170
I think it makes a little bit more
sense to do this other way as well.

27
00:01:42.170 --> 00:01:44.190
Again, it's a little bit more complicated.

28
00:01:44.190 --> 00:01:47.777
First, let's put back the jumping so I
don't have to keep dragging this dude, and

29
00:01:47.777 --> 00:01:49.870
then we'll talk about that.

30
00:01:49.870 --> 00:01:53.782
So with that, we'll simply say,

31
00:01:57.279 --> 00:02:04.282
If, nope, not there, too much,
do it over here instead.

32
00:02:04.282 --> 00:02:08.902
If they press the space bar, again,
if you want a different key,

33
00:02:08.902 --> 00:02:13.448
go for it, then we'll set the velocity,
I don't know, 10.

34
00:02:17.809 --> 00:02:22.485
To 10, I will actually put that in our
block, otherwise nothing's gonna happen.

35
00:02:25.386 --> 00:02:28.535
Cool, it works, now I don't have
to keep dragging him all the time.

36
00:02:30.686 --> 00:02:34.417
I mean, considering I don't stop him from
jumping, you can hold that space bar and

37
00:02:34.417 --> 00:02:35.496
get whatever you want.

38
00:02:35.496 --> 00:02:39.816
[LAUGH] Right,
I guess it's also got a Kirby mode, but

39
00:02:39.816 --> 00:02:44.248
it's also got rocket ship mode,
hold that space bar.

40
00:02:44.248 --> 00:02:47.201
Yeah, depending on how
you drew your course,

41
00:02:47.201 --> 00:02:51.528
I don't think, 10 might not even
really do the trick for me here.

42
00:02:51.528 --> 00:02:54.100
But whatever, at this point,
we just wanna make him hit the floor.

43
00:02:54.100 --> 00:02:57.010
Yeah, there's some
definite flaws with this.

44
00:02:57.010 --> 00:02:59.750
Yeah, he has the teleportation,
cuz that's our logic, right?

45
00:02:59.750 --> 00:03:01.570
That is the code that we wrote,
look at it.

46
00:03:01.570 --> 00:03:04.608
It says, if touching red,
change y by 1, which is up,

47
00:03:04.608 --> 00:03:07.310
until you're not touching the red.

48
00:03:07.310 --> 00:03:10.030
My code is great, my mechanic is terrible.

49
00:03:10.030 --> 00:03:13.672
[LAUGH] My game design is not good.

50
00:03:13.672 --> 00:03:18.590
My programming is flawless right now.

51
00:03:18.590 --> 00:03:21.540
So, yeah, we want to adjust for that.

52
00:03:23.320 --> 00:03:28.655
So one of the things we can
do is we can begin to say,

53
00:03:28.655 --> 00:03:31.715
okay, I'm gonna show you.

54
00:03:31.715 --> 00:03:37.240
A lot of times in programming we tend
to write what we call pseudocode,

55
00:03:37.240 --> 00:03:42.770
which is, we write out the plan
before we do the thing, right?

56
00:03:42.770 --> 00:03:44.659
So here's our plan.

57
00:03:46.101 --> 00:03:50.729
Before we were saying,
if in any reason for any shape or form,

58
00:03:50.729 --> 00:03:55.200
you ended up in red,
one at a time until you're back up.

59
00:03:55.200 --> 00:03:58.610
Now, as Caleb noticed,
that has some unintentioned consequences.

60
00:03:58.610 --> 00:04:02.280
When we jump, we hit red,
you teleport back up to the top.

61
00:04:02.280 --> 00:04:04.278
Okay, so that's clearly not what we want,

62
00:04:04.278 --> 00:04:06.460
cuz we want this to
work in all directions.

63
00:04:06.460 --> 00:04:09.463
In fact, what we're gonna want to
eventually do is have the same logic work

64
00:04:09.463 --> 00:04:10.568
for moving left and right.

65
00:04:10.568 --> 00:04:14.741
Because right now,
if my character could move left and

66
00:04:14.741 --> 00:04:19.106
right, he would shoot up to
the top of every step as well.

67
00:04:19.106 --> 00:04:22.720
Caleb, the problem is worse than
you think it is, [LAUGH] right?

68
00:04:22.720 --> 00:04:26.240
This game is worse than
you think it is right now.

69
00:04:26.240 --> 00:04:29.086
If we had left and right,
it'd be even worse.

70
00:04:29.086 --> 00:04:33.591
But if we fix it now with the up and
down, we can then reapply it to left and

71
00:04:33.591 --> 00:04:35.936
right and we will be happier people.

72
00:04:35.936 --> 00:04:39.156
All right, so what we're gonna do is,

73
00:04:39.156 --> 00:04:43.169
let's say we want him to move ten steps,
right?

74
00:04:43.169 --> 00:04:45.871
What we're gonna do is,
instead of letting it happen and

75
00:04:45.871 --> 00:04:47.966
then trying to deal with the consequences.

76
00:04:47.966 --> 00:04:55.316
What we'll do is we'll say, we're going
to write our own custom block that says,

77
00:04:55.316 --> 00:05:00.571
move ten steps, move one step,
are you in the ground, no?

78
00:05:00.571 --> 00:05:02.474
Keep track of where you were.

79
00:05:02.474 --> 00:05:06.486
Move another step,
are you now in the ground, no?

80
00:05:06.486 --> 00:05:08.270
Keep track of where you just were.

81
00:05:08.270 --> 00:05:10.410
Take another step,
you're in the ground now?

82
00:05:10.410 --> 00:05:13.820
Go back to that last spot and
be done, right?

83
00:05:13.820 --> 00:05:18.270
That is our basic plan, which is, if I say
move ten, Scratch will just move in ten.

84
00:05:18.270 --> 00:05:24.391
We're gonna say move one ten times, right,
each time check if you're allowed to go.

85
00:05:24.391 --> 00:05:26.185
And if you're not allowed to go,

86
00:05:26.185 --> 00:05:29.148
we're done with the last
place you were allowed to go.

87
00:05:29.148 --> 00:05:32.518
No more teleporting through platforms and
shooting up to the top,

88
00:05:32.518 --> 00:05:35.240
we're done with that,
that's no way to live, yes?

89
00:05:35.240 --> 00:05:37.075
&gt;&gt; I got another idea for a jump.

90
00:05:37.075 --> 00:05:38.957
&gt;&gt; Okay.

91
00:05:38.957 --> 00:05:44.183
&gt;&gt; If you were going up and
hitting the red,

92
00:05:44.183 --> 00:05:51.892
then you go down until you're
not hitting the red anymore.

93
00:05:51.892 --> 00:05:53.699
If you're going down and you hit the red,

94
00:05:53.699 --> 00:05:57.365
then you go up until you're not hitting it
anymore, and then you should repeat it for

95
00:05:57.365 --> 00:06:02.054
all the-
&gt;&gt; Yeah, that'll work, too, absolutely.

96
00:06:02.054 --> 00:06:03.748
Cool, let's try this one.

97
00:06:03.748 --> 00:06:07.917
Yeah, cuz that would just, basically,
you'd keep track of which direction, and

98
00:06:07.917 --> 00:06:10.510
then you would do the right code path for
that, yep.

99
00:06:10.510 --> 00:06:11.897
This will actually, shockingly,

100
00:06:11.897 --> 00:06:13.980
work in all directions kind
of out of the box, too.

101
00:06:13.980 --> 00:06:16.010
So let's try this as well,
and both would work.

