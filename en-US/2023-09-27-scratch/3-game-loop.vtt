WEBVTT

1
00:00:00.340 --> 00:00:05.184
This works right but there's a few
problems I can hit the red stop sign to

2
00:00:05.184 --> 00:00:10.300
stop my game, And
I can still move around, right?

3
00:00:10.300 --> 00:00:14.262
Also if I wanted to have multiple
movements of like, head down and

4
00:00:14.262 --> 00:00:16.999
to the right,
I couldn't do that right now,

5
00:00:16.999 --> 00:00:20.037
because each one of these
is kind of independent.

6
00:00:20.037 --> 00:00:24.087
Also, there's a bunch of other things,
like normally a game starts, it runs,

7
00:00:24.087 --> 00:00:26.570
something happens and it stops, right?

8
00:00:26.570 --> 00:00:31.107
And the way that we tend to do this
mechanic is what we call a game loop,

9
00:00:31.107 --> 00:00:34.471
which is just simply, we,
when we start the game,

10
00:00:34.471 --> 00:00:39.000
do whatever setup you need to do and
then jump in to the loop.

11
00:00:39.000 --> 00:00:42.727
For those of us who might have to write
Javascript at some point in our life

12
00:00:42.727 --> 00:00:46.380
is kind of like it runs the code and
throws you into an event loop.

13
00:00:46.380 --> 00:00:49.930
And then things happen and
you go along your way as well.

14
00:00:49.930 --> 00:00:55.519
Same basic idea, but
this is more fun than Javascript.

15
00:00:56.830 --> 00:01:03.330
So what we can do there to create a game
loop is we just put a forever loop.

16
00:01:03.330 --> 00:01:04.320
That's not really forever.

17
00:01:04.320 --> 00:01:07.150
It's not like a wild true that's
gonna lock up the main thread.

18
00:01:07.150 --> 00:01:12.129
It's like these do run on the event loop,
right, where it'll say like, run through

19
00:01:12.129 --> 00:01:16.090
this and then put the next tick or
the next frame onto the event loop.

20
00:01:16.090 --> 00:01:20.486
It's s kind of like, do it request
animation frame to the next one, or

21
00:01:20.486 --> 00:01:22.659
set timeout zero, what have you.

22
00:01:22.659 --> 00:01:26.280
And so we can run things over,
and over, and over again.

23
00:01:26.280 --> 00:01:28.270
And so we'll have that kind of in place.

24
00:01:28.270 --> 00:01:33.248
And now, what we could do, for instance,
if I just want to have them run forever,

25
00:01:33.248 --> 00:01:35.283
right, we could take these out.

26
00:01:35.283 --> 00:01:37.581
And we'll delete this one here.

27
00:01:37.581 --> 00:01:41.510
So now I hit the green block,
and he's running right.

28
00:01:41.510 --> 00:01:46.090
Maybe I make it wait a second or something
along those lines, but it's fine.

29
00:01:46.090 --> 00:01:49.423
We're gonna say wait one second
in between cuz that's horrifying.

30
00:01:52.757 --> 00:01:56.280
And this will keep running
as long as the game runs.

31
00:01:56.280 --> 00:02:00.150
As you can see, it's a little weird though
because hitting one of those arrows

32
00:02:00.150 --> 00:02:02.732
throw something else into a loop,
that event loop,

33
00:02:02.732 --> 00:02:06.040
which means that those will take
precedence before we take again.

34
00:02:06.040 --> 00:02:08.790
So we're probably gonna need to
get these into the loop as well.

35
00:02:08.790 --> 00:02:10.959
We'll do that momentarily.

36
00:02:10.959 --> 00:02:14.380
To stop the game, you hit the stop sign.

37
00:02:16.170 --> 00:02:20.599
Awesome, and we can have a bunch
of stuff in place as well.

38
00:02:20.599 --> 00:02:26.818
But let's get the movement
into the game loop as well.

39
00:02:26.818 --> 00:02:30.549
And so the common way that you will
see this is instead of waiting for

40
00:02:30.549 --> 00:02:32.548
one of these buttons to be pressed,

41
00:02:32.548 --> 00:02:35.561
a lot of times what we'll
do is keep looping through.

42
00:02:35.561 --> 00:02:38.156
Because we can tell what buttons
are currently being held down with

43
00:02:38.156 --> 00:02:39.500
the sensing blocks.

44
00:02:39.500 --> 00:02:44.586
So we'll go ahead and
we'll go to say, if I'm going

45
00:02:44.586 --> 00:02:50.029
to do this over here for
a reason you'll see in a second.

46
00:02:51.820 --> 00:02:56.599
We could say,
if a given key is pressed in this case,

47
00:02:56.599 --> 00:03:00.413
we'll say if the right arrow is pressed,

48
00:03:04.261 --> 00:03:08.730
Point in direction 90 and
move ten steps and then I'm very lazy.

49
00:03:08.730 --> 00:03:09.720
So I'll duplicate that.

50
00:03:11.990 --> 00:03:18.520
I'll say if the left arrow is pressed,
Then point in direction -90.

51
00:03:18.520 --> 00:03:21.060
Same logic we had before.

52
00:03:21.060 --> 00:03:21.701
And now in my loop,

53
00:03:21.701 --> 00:03:24.486
I'm gonna zoom out just slightly because
it's getting a little crowded in here.

54
00:03:26.557 --> 00:03:28.663
I can say as we go through the loop.

55
00:03:33.514 --> 00:03:37.505
Check to see if either one of these
buttons are pressed, do the thing.

56
00:03:37.505 --> 00:03:41.640
Let's actually get rid of that.

57
00:03:41.640 --> 00:03:44.363
We don't need to wait a second anymore
because we go back to just change

58
00:03:44.363 --> 00:03:45.434
the costume when he moves.

59
00:03:48.126 --> 00:03:53.091
Okay, so
when the game starts We're gonna set

60
00:03:53.091 --> 00:03:56.890
everything up the way it's supposed to be,
put Arnold wherever we want him to be.

61
00:03:56.890 --> 00:03:59.645
And then once we've got everything
set up the way we want it,

62
00:03:59.645 --> 00:04:02.723
we'll start the game loop,
which is if the right arrow is pressed,

63
00:04:02.723 --> 00:04:05.280
we will point the direction 90 and
move him ten steps.

64
00:04:06.900 --> 00:04:10.239
And if the left arrow is pressed,
we'll point in the direction -90,

65
00:04:10.239 --> 00:04:11.460
move him ten steps.

66
00:04:11.460 --> 00:04:14.834
Either way, we change the costume, right?

67
00:04:21.853 --> 00:04:23.320
And there we go.

68
00:04:23.320 --> 00:04:26.980
He's running around and
we've got both in place.

69
00:04:26.980 --> 00:04:32.240
Now there are a bunch of, like this
isn't the only way to do movement.

70
00:04:32.240 --> 00:04:33.214
Y'all have play Pac-Man.

71
00:04:34.630 --> 00:04:36.520
Right, so Pac-Man, you hit a direction.

72
00:04:36.520 --> 00:04:38.190
Pacman just keeps going.

73
00:04:38.190 --> 00:04:40.780
Pac-Man you don't have to hold
the joystick in that direction.

74
00:04:40.780 --> 00:04:41.920
You hit up on the joystick.

75
00:04:41.920 --> 00:04:45.040
Pacman's gonna go until
Pacman hits the wall, right?

76
00:04:45.040 --> 00:04:45.620
You hit right.

77
00:04:45.620 --> 00:04:48.960
Pacman's gonna go until Pacman hits wall
or a ghost or something along those lines.

78
00:04:50.130 --> 00:04:53.490
And that's where the what
mechanic do you want?

79
00:04:53.490 --> 00:04:56.560
Affects what kind of code you might write.

80
00:04:56.560 --> 00:04:59.206
So for instance, if we wanted that
kind of mechanic in this place,

81
00:04:59.206 --> 00:05:01.712
we could just simply say, hey,
when they press the key point,

82
00:05:01.712 --> 00:05:03.730
I'm gonna give him direction, right?

83
00:05:03.730 --> 00:05:07.138
But then no matter what, move them.

84
00:05:07.138 --> 00:05:10.318
So in this case,
I can take my hand off the keyboard, and

85
00:05:10.318 --> 00:05:12.829
he'll keep going in that given direction.

86
00:05:13.880 --> 00:05:16.100
No one of those is more
right than the other,

87
00:05:16.100 --> 00:05:18.090
it's about what mechanic do you want.

88
00:05:18.090 --> 00:05:20.930
Do you want the mechanic where they
have to press and hold the key?

89
00:05:20.930 --> 00:05:24.314
Or do you want the mechanic where they
press it once to change the direction, but

90
00:05:24.314 --> 00:05:25.810
the character keeps going?

91
00:05:25.810 --> 00:05:29.107
Both are equally right depending
on what kind of effect and

92
00:05:29.107 --> 00:05:31.608
what kind of game you're trying to create.

93
00:05:31.608 --> 00:05:36.283
In our case though, I'm going to
go back to the way things were.

94
00:05:36.283 --> 00:05:39.810
And I'll put things in here,
but both are okay.

95
00:05:39.810 --> 00:05:42.592
Both are correct depending
on what we're trying to do.

