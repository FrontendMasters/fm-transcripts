WEBVTT

1
00:00:00.000 --> 00:00:03.716
All right,
we're not gonna really use this one,

2
00:00:03.716 --> 00:00:07.088
we're gonna use it for
parts in a little bit.

3
00:00:07.088 --> 00:00:10.925
We're gonna create a new
one to help us out here,

4
00:00:10.925 --> 00:00:15.603
how we haven't used in this
one we had like move 10 steps,

5
00:00:15.603 --> 00:00:19.644
we're gonna make our own special version,
okay?

6
00:00:19.644 --> 00:00:22.850
Now we'll make a block.

7
00:00:24.587 --> 00:00:28.712
And you could give it the same name.

8
00:00:31.010 --> 00:00:40.224
We're given an input,
Let's feel wrong move in 10 years.

9
00:00:40.224 --> 00:00:41.519
Small steps.

10
00:00:41.519 --> 00:00:43.320
[LAUGH] Right.

11
00:00:43.320 --> 00:00:48.464
Move in 10 steps and check to see
if I crash into a wall, right,

12
00:00:48.464 --> 00:00:54.768
whatever you want to name it, it doesn't
matter, like, it's all the same.

13
00:00:54.768 --> 00:00:59.799
So we've got this new function
called move small steps, right.

14
00:00:59.799 --> 00:01:05.527
Which point, like I said before, the,
just to go back, the algorithm here is,

15
00:01:05.527 --> 00:01:11.616
if we wanted to move 10 steps, look where
you were, move one step, are you in wall?

16
00:01:11.616 --> 00:01:16.076
No, keep track of that place,
move next step, are you in wall?

17
00:01:16.076 --> 00:01:18.912
No, move next step, are you in wall?

18
00:01:18.912 --> 00:01:19.751
Right?

19
00:01:19.751 --> 00:01:22.776
And so, we can do that,
and then, you're in wall?

20
00:01:22.776 --> 00:01:25.205
Go back to the last place, right?

21
00:01:25.205 --> 00:01:29.604
And then we can use that for
both cases, so at this point,

22
00:01:29.604 --> 00:01:34.105
by definition, how many times
do we want to run this code?

23
00:01:37.412 --> 00:01:39.338
Well, the number of steps we wanna take,
right?

24
00:01:44.182 --> 00:01:45.532
Let's call this steps.

25
00:01:48.765 --> 00:01:51.501
So yeah, exactly, which is whatever
number we pass in there, the same way for

26
00:01:51.501 --> 00:01:53.821
the move block, you can give it
a given number, maybe it's 10,

27
00:01:53.821 --> 00:01:54.785
maybe it's 20, right?

28
00:01:54.785 --> 00:01:57.374
It could depend as we
work on our gameplay, so

29
00:01:57.374 --> 00:02:01.259
in relative error are 10 hard coded
well let them put in a number and

30
00:02:01.259 --> 00:02:05.843
that's what we'll do, because like
moving might be different than jumping.

31
00:02:05.843 --> 00:02:06.908
You know what I mean?

32
00:02:06.908 --> 00:02:11.559
So for here, we'll just go ahead and
we will repeat this.

33
00:02:11.559 --> 00:02:15.911
You grab this one here, that number of
times, so if they put in number 10,

34
00:02:15.911 --> 00:02:18.989
you know many times they're
gonna repeat this loop.

35
00:02:18.989 --> 00:02:26.312
10 times they put the number 20 You
know many times we're gonna do it 20 And

36
00:02:26.312 --> 00:02:32.784
we're gonna make a new variable for
this sprite only called last why?

37
00:02:32.784 --> 00:02:37.556
Which is before we move you,
we want to keep track about where you were

38
00:02:37.556 --> 00:02:41.752
right Because in case you end up
with a wall and the next step,

39
00:02:41.752 --> 00:02:44.741
we need to know where you were previously.

40
00:02:44.741 --> 00:02:50.263
And then we'll put you back where you're

41
00:02:50.263 --> 00:02:55.956
supposed to be, so we've got this last Y.

42
00:02:55.956 --> 00:03:00.214
And each time we're going to
set that last Y to whatever

43
00:03:00.214 --> 00:03:05.043
the current Y position is, right,
so like where are you now?

44
00:03:05.043 --> 00:03:12.032
Okay, now we're gonna move you,
are you in wall?

45
00:03:12.032 --> 00:03:15.347
If so we kept track of where you were
previously and we put you right back.

46
00:03:15.347 --> 00:03:20.180
Well we're gonna do for X and Y, we'll
do Y first I mean, yeah, I talk about

47
00:03:20.180 --> 00:03:25.107
walking into a wall 'cause it is easy,
I guess I'm always on the ground, right?

48
00:03:25.107 --> 00:03:28.239
And like,
I promise that I wouldn't jump and

49
00:03:28.239 --> 00:03:33.523
wave my arms in the air at the beginning
of this, so but good ca good call out.

50
00:03:33.523 --> 00:03:37.732
So, then whatever that number is and
however, far the wide velocity is, that's

51
00:03:37.732 --> 00:03:41.821
how many times we need to check, so we do
need a little bit of division this time.

52
00:03:41.821 --> 00:03:46.307
&gt;&gt; Should we do run
without screen refresh?

53
00:03:46.307 --> 00:03:49.529
&gt;&gt; Yes, yep, and if you didn't do that,
you can right click on it,

54
00:03:49.529 --> 00:03:53.406
go to edit, just make sure that run
without Screen refresh button is checked.

55
00:03:54.440 --> 00:03:58.247
Okay, so
whatever the velocity that we're going is,

56
00:03:58.247 --> 00:04:02.987
we wanna divide it by the number of
steps we were asked to go, right?

57
00:04:02.987 --> 00:04:08.249
So, this is just a nice way to do
division, which is if we're attempting to

58
00:04:08.249 --> 00:04:14.281
go 10 steps or whatever velocity, divide
it, and you should get the right number.

59
00:04:14.281 --> 00:04:16.667
So we'll go ahead and we'll say change y.

60
00:04:19.818 --> 00:04:24.026
And we need to do the division, the
current velocity by how many steps we're

61
00:04:24.026 --> 00:04:26.608
checking for, so we'll just some division.

62
00:04:30.373 --> 00:04:35.303
And this is just gonna be how much
farther we have to versus how

63
00:04:35.303 --> 00:04:39.650
often we wanna check,
so it's the by steps,

64
00:04:39.650 --> 00:04:45.469
that is probably the hardest math
that we're gonna do in this section.

65
00:04:45.469 --> 00:04:50.406
That's not sure there's
an absolute value hiding

66
00:04:50.406 --> 00:04:55.808
somewhere later but, so
we got that and then we'll go.

67
00:04:59.078 --> 00:05:00.991
If we're touching the danger color

68
00:05:08.367 --> 00:05:12.797
Then actually go back to
the last good spot, right?

69
00:05:12.797 --> 00:05:18.725
You know what, [LAUGH] Don't go where
you were going, we changed our minds.

70
00:05:18.725 --> 00:05:19.506
Right?

71
00:05:19.506 --> 00:05:25.172
You go back to where the last known
good spot was, that last Y, right?

72
00:05:25.172 --> 00:05:29.407
And you are done moving and
we set last Y, or

73
00:05:29.407 --> 00:05:32.945
we set Y speed to zero, velocity Y.

74
00:05:32.945 --> 00:05:38.222
Alright, I'm going to talk through
this one more time, because there's

75
00:05:38.222 --> 00:05:43.511
a lot going on, if I say move in ten
small steps, do this ten times, right?

76
00:05:43.511 --> 00:05:47.244
20 times whatever I say in there,
where were you?

77
00:05:47.244 --> 00:05:51.189
Go the next whatever step was.

78
00:05:51.189 --> 00:05:53.100
If you somehow ended up in red,

79
00:05:53.100 --> 00:05:57.362
we're going to ignore the fact that
we made you take a step forward and

80
00:05:57.362 --> 00:06:02.233
we're going to put you right back to where
you were in the last known good spot.

81
00:06:02.233 --> 00:06:06.418
And then you are done jumping at that
point you are on the ground if going down

82
00:06:06.418 --> 00:06:08.423
was going to put you inside ground.

83
00:06:08.423 --> 00:06:13.450
It means that you are done jumping now,
right and you shouldn't have

84
00:06:13.450 --> 00:06:18.835
to do that anymore, we get rid of fixed
landing by and we move back in our new

85
00:06:22.665 --> 00:06:28.539
Our new version, now the only tricky part
here, actually, we don't even need this,

86
00:06:28.539 --> 00:06:34.418
we've got our own if statement, we'll just
move you, this will handle everything.

87
00:06:34.418 --> 00:06:39.322
The only tricky part is, going down,
we have a negative number,

88
00:06:39.322 --> 00:06:42.636
we can divide by a negative number, right?

89
00:06:42.636 --> 00:06:46.638
So even if we're going down 10 steps,
we need a positive 10, and

90
00:06:46.638 --> 00:06:49.894
if we're going up 10 steps,
we need a positive 10.

91
00:06:49.894 --> 00:06:53.964
Alaska kids versus anyone know how
to always get a positive number

92
00:06:53.964 --> 00:06:58.927
no matter what, and then the adults get
to like, go to high school math, yeah.

93
00:06:58.927 --> 00:07:03.216
[INAUDIBLE].

94
00:07:03.216 --> 00:07:07.532
&gt;&gt; Okay so one math operator that
we need is this absolute value,

95
00:07:07.532 --> 00:07:13.100
the absolute value of 5 is 5, the absolute
value of negative 5 is 5, right?

96
00:07:13.100 --> 00:07:17.048
It's just no matter what you
get a positive number, and

97
00:07:17.048 --> 00:07:20.744
we'll do that for
the absolute value of velocity Y,

98
00:07:20.744 --> 00:07:24.776
let's put our hero where he
belongs to in the beginning.

99
00:07:27.211 --> 00:07:30.993
I wonder if,
because I'm doing it after the jump loop,

100
00:07:30.993 --> 00:07:34.452
I have a hypothesis,
I don't know if it's right,

101
00:07:34.452 --> 00:07:39.139
no, we're still sinking into the ground,
all right, let's see.

102
00:07:39.139 --> 00:07:42.022
We change by negative one,
basically, we press,

103
00:07:42.022 --> 00:07:45.181
we're going to do the jump motion,
you know what?

104
00:07:45.181 --> 00:07:47.582
We're changing y twice, right?

105
00:07:47.582 --> 00:07:52.163
I change Y, and then in my code,
I change Y again, so

106
00:07:52.163 --> 00:07:57.180
if you do the same thing twice,
things will break on you.

107
00:07:59.227 --> 00:08:04.566
Look at that, and he jumps, okay now, the
big question, I actually don't wanna start

108
00:08:04.566 --> 00:08:09.569
I'm in the right spot because I don't have
the ability to walk left and right yet.

109
00:08:09.569 --> 00:08:14.553
Until I have that ability that
little like, I should do this to

110
00:08:14.553 --> 00:08:19.181
be nice to myself,
I'm not being very nice to myself, okay,

111
00:08:19.181 --> 00:08:24.178
jumping, the big question Caleb
can he jumped through ceilings?

112
00:08:25.878 --> 00:08:29.108
Right, because we're setting it to zero,
because it was positive,

113
00:08:29.108 --> 00:08:31.023
now if I hold space, I'm holding space,

114
00:08:31.023 --> 00:08:34.327
he will continue to shoot his head
into the wall and bang it repeatedly.

115
00:08:34.327 --> 00:08:38.867
But even on the way up,
if you're now touching red, right,

116
00:08:38.867 --> 00:08:42.605
then don't, then stop going up,
set it to zero,

117
00:08:42.605 --> 00:08:47.252
which point he's no longer going up,
now the act of holding.

118
00:08:47.252 --> 00:08:50.768
The Space key is trying to reset it to
10 over and over and over and over and

119
00:08:50.768 --> 00:08:52.655
over and over and over over over again.

120
00:08:52.655 --> 00:08:57.889
Right but the mechanic that we have at
the very end of do not go into walls

121
00:08:57.889 --> 00:09:02.977
had first taps in and says no, and
it does without a screen refresh.

122
00:09:02.977 --> 00:09:06.656
So this hall he would have theoretically
be going to the wall by 10 are getting

123
00:09:06.656 --> 00:09:07.951
pushed back down, right?

124
00:09:07.951 --> 00:09:11.613
I got to see it, you don't have to say it,
I have to say it.

125
00:09:17.691 --> 00:09:22.905
This is I slowed my code down to such
a sad rate that we don't see it.

126
00:09:22.905 --> 00:09:26.865
[INAUDIBLE]
&gt;&gt; Yeah, I mean, that's doing a lot.

127
00:09:26.865 --> 00:09:32.429
It's doing a lot of calculations there
But, not having to do the render

128
00:09:32.429 --> 00:09:37.974
each time, pretty happy.

