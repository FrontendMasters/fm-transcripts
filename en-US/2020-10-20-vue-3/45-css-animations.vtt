WEBVTT

1
00:00:00.220 --> 00:00:03.500
We're still using the CSS,
the transition component, but

2
00:00:03.500 --> 00:00:09.230
we can add classes based on
enter active and leave active.

3
00:00:09.230 --> 00:00:16.120
So when something is actively changing
inside, we're toggling that appearance,

4
00:00:16.120 --> 00:00:22.170
we can add a class and then declare
a bunch of keyframes and animations.

5
00:00:22.170 --> 00:00:27.949
We can even plug into CSS animation
library like there's animate.css

6
00:00:31.383 --> 00:00:36.475
And this library will allow you to just
kind of plug into these class names.

7
00:00:36.475 --> 00:00:43.455
So you could say, enter active class and
then whatever you wanted from animate.CSS.

8
00:00:43.455 --> 00:00:48.825
Or you could declare it yourself,
you could say, simplest example is this,

9
00:00:48.825 --> 00:00:50.745
we can hook into CSS animation library.

10
00:00:50.745 --> 00:00:52.750
So, let's say I have a ball.

11
00:00:52.750 --> 00:00:53.690
And I want to bounce the ball.

12
00:00:53.690 --> 00:00:57.047
And I want to say the enter
active class is bounce in, and

13
00:00:57.047 --> 00:00:59.200
the leave active class is roll out.

14
00:01:00.230 --> 00:01:01.860
So here we want to keep it dry.

15
00:01:01.860 --> 00:01:05.010
I'm using some sass in order to do so.

16
00:01:05.010 --> 00:01:07.410
If you're not familiar with that,
this is a mix in.

17
00:01:07.410 --> 00:01:11.920
It's basically like a function that I'm
allowed to extend the parameter into.

18
00:01:11.920 --> 00:01:15.990
So what I'm saying here is I
want to transform that ball.

19
00:01:15.990 --> 00:01:18.880
And I wanna,
the value I wanna change is that

20
00:01:18.880 --> 00:01:24.010
y axis because I'm gonna do 0 on
the x axis and 0 on the z axis.

21
00:01:24.010 --> 00:01:27.690
So I'm gonna declare it to go up and
down and up and down and up and

22
00:01:27.690 --> 00:01:28.590
down and up and down.

23
00:01:28.590 --> 00:01:31.780
And you know that you can't do
a transition in CSS that way,

24
00:01:31.780 --> 00:01:34.900
right because we have
to declare many states.

25
00:01:34.900 --> 00:01:40.250
Now in order to actually use this,
I'll say, animation, bounce at key frames.

26
00:01:40.250 --> 00:01:44.010
I'm referencing bounce in,
the amount of seconds,

27
00:01:44.010 --> 00:01:48.230
the ease that I want to use and
both as the film mode.

28
00:01:48.230 --> 00:01:53.950
As another note, you do wanna move things
with transforms instead of margins or

29
00:01:53.950 --> 00:01:55.070
top or left.

30
00:01:55.070 --> 00:01:56.570
Margins, top, left,

31
00:01:56.570 --> 00:02:00.270
those types of things will cause
repeats if you start to move it.

32
00:02:00.270 --> 00:02:03.910
You can see in the browser that
it's not hardware accelerated,

33
00:02:03.910 --> 00:02:07.520
it's not moving well across the page and
it's causing repeats.

34
00:02:07.520 --> 00:02:11.480
If you use transforms,
first of all, that's great.

35
00:02:11.480 --> 00:02:13.950
But if you use translate 3D and

36
00:02:13.950 --> 00:02:19.020
you have a zero on the z axis,
that's called the null transform hack.

37
00:02:19.020 --> 00:02:22.964
And what it does is allow the browser to
know that we wanna hardware accelerate

38
00:02:22.964 --> 00:02:23.759
that element.

39
00:02:25.248 --> 00:02:26.930
So here we've got a bouncing ball.

40
00:02:28.030 --> 00:02:30.022
And we're gonna get it away.

41
00:02:30.022 --> 00:02:33.760
And a bouncing ball and we get to go away.

42
00:02:33.760 --> 00:02:37.280
And then of course, you can see
we're doing multiple things for

43
00:02:37.280 --> 00:02:38.500
each one of these.

44
00:02:38.500 --> 00:02:41.969
So in this case,
we want to use a CSS animation.

45
00:02:43.797 --> 00:02:48.734
You can use custom eases, I think custom
eases are really fun to use because they

46
00:02:48.734 --> 00:02:53.800
give your animation a little bit more
flair and a little bit more uniqueness.

47
00:02:53.800 --> 00:02:57.580
So you can use this
awesome tool by Leah Voru.

48
00:02:57.580 --> 00:02:59.630
Okay, which one is gonna get there first?

49
00:02:59.630 --> 00:03:00.380
It's a trick question.

50
00:03:00.380 --> 00:03:02.658
They're gonna both get
there at the same time.

51
00:03:02.658 --> 00:03:07.650
[LAUGH] So, that's actually a joke I stole
from Val Head, who's an awesome animator.

52
00:03:08.740 --> 00:03:14.290
So, here we're gonna use a bunch of things
to create a different cubic bezier value.

53
00:03:14.290 --> 00:03:17.661
And you can see this passed in here and
you can copy it and

54
00:03:17.661 --> 00:03:21.555
you can also see what the kind of
default ones look like as well.

55
00:03:22.594 --> 00:03:26.730
So, animation without the transition
component, because that can happen.

56
00:03:26.730 --> 00:03:29.670
We mentioned that we're using
the transition component and

57
00:03:29.670 --> 00:03:31.830
that we could bind to things.

58
00:03:31.830 --> 00:03:35.580
So let's go look at this in a code pen.

59
00:03:35.580 --> 00:03:37.990
Push this button to do something
you shouldn't be doing.

60
00:03:37.990 --> 00:03:38.650
Click me.

61
00:03:38.650 --> 00:03:39.265
No!

62
00:03:39.265 --> 00:03:43.870
[LAUGH] So basically what we're
doing here is we've got this

63
00:03:43.870 --> 00:03:47.200
not activated state, which is false.

64
00:03:47.200 --> 00:03:50.320
And we're saying, if we have,

65
00:03:50.320 --> 00:03:55.050
we're creating a class binding
to shake for not activated.

66
00:03:55.050 --> 00:03:58.690
And when we click this,
we make not activated true.

67
00:03:58.690 --> 00:04:01.070
And we add in this Vf.

68
00:04:01.070 --> 00:04:08.740
So if we look at our code in the CSS,
you can see we have this shake,

69
00:04:08.740 --> 00:04:13.200
it's got an animation, we're making
sure to hardware accelerate it.

70
00:04:13.200 --> 00:04:16.440
And the rest of these are hardware
acceleration as well.

71
00:04:17.480 --> 00:04:21.900
And here we're making this transform that
goes back and forth and back and forth and

72
00:04:21.900 --> 00:04:23.180
back and forth.

73
00:04:23.180 --> 00:04:26.600
So we're applying that class
based on a conditional.

74
00:04:27.990 --> 00:04:29.360
You can also interpolate values.

75
00:04:29.360 --> 00:04:32.520
Remember this,
where we move across the screen.

76
00:04:32.520 --> 00:04:38.370
This is a style binding, but
you can interpolate lots of values.

77
00:04:38.370 --> 00:04:39.810
You can interpolate anything.

78
00:04:39.810 --> 00:04:43.000
And you can actually create
animations by doing,

79
00:04:43.000 --> 00:04:46.890
by using this type of interpolation,
by moving this across.

80
00:04:46.890 --> 00:04:50.880
And in order to make it a little bit
smooth, what I've done is I've said,

81
00:04:50.880 --> 00:04:54.660
transition 0.2 seconds,
background color ease, so

82
00:04:54.660 --> 00:04:58.970
that as it's moving across the page, and
it's getting these different values and

83
00:04:58.970 --> 00:05:03.980
moving through these different values,
it's gonna apply a bit of a transition and

84
00:05:03.980 --> 00:05:08.820
make that a little bit softer, so that
it's not cutting across all those values.

85
00:05:08.820 --> 00:05:13.560
And we're gonna even do an activated
Wally with hand gestures,

86
00:05:13.560 --> 00:05:14.979
and stuff by the end of this.

87
00:05:16.210 --> 00:05:19.290
One note,
when you're working with animation,

88
00:05:19.290 --> 00:05:20.990
there's a thing called transform origin.

89
00:05:20.990 --> 00:05:23.220
So if you start to spin something,

90
00:05:23.220 --> 00:05:27.820
what you'd assume is that it would
spin around the center axis.

91
00:05:27.820 --> 00:05:29.970
That is just not true.

92
00:05:29.970 --> 00:05:35.890
[LAUGH] In HTML,
we have this default of 00.

93
00:05:35.890 --> 00:05:40.670
So what usually happens when people start
working with animation is they'll start to

94
00:05:40.670 --> 00:05:46.100
rotate something, and it will go from this
top corner and go whoa, whoa [LAUGH].

95
00:05:46.100 --> 00:05:48.210
And you really don't want that to happen.

96
00:05:48.210 --> 00:05:50.880
So what you'll say is
transform origin 50% 50%.

97
00:05:50.880 --> 00:05:55.660
Or let's say you wanted to
make a robot with arms.

98
00:05:55.660 --> 00:05:58.890
You need to think of that arm as
a box cuz that's how the browser

99
00:05:58.890 --> 00:06:00.150
interprets everything.

100
00:06:00.150 --> 00:06:04.970
So if I wanted to make this arm, I would
have to figure out like, okay, I'm going

101
00:06:04.970 --> 00:06:10.990
zero percent, and then zero percent, but
on this side it's 100% and zero percent.

102
00:06:10.990 --> 00:06:13.200
Or if the leg is here, so

103
00:06:13.200 --> 00:06:17.930
you can kind of look at this as a guide
of where you should be setting them.

104
00:06:17.930 --> 00:06:21.752
You can also say top and left and center
and things, but I tend to say that you

105
00:06:21.752 --> 00:06:25.406
should be using percentages in case
you need to tweak them a little bit.

