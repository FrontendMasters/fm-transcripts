WEBVTT

1
00:00:00.210 --> 00:00:01.270
So v-model.

2
00:00:01.270 --> 00:00:02.278
This is one of my favorites.

3
00:00:02.278 --> 00:00:03.000
I love v-model.

4
00:00:03.000 --> 00:00:04.680
You got to have a favorite.

5
00:00:04.680 --> 00:00:07.810
It creates a relationship between
the data and the instance or

6
00:00:07.810 --> 00:00:11.530
component in a form input so
you can dynamically update values.

7
00:00:11.530 --> 00:00:15.622
A lot of what we do in front end
development has to do with building forms.

8
00:00:15.622 --> 00:00:21.088
[LAUGH] So this allows us to capture
form inputs or capture differences

9
00:00:21.088 --> 00:00:27.490
between v-model inputs or text areas or
things like that very quickly.

10
00:00:27.490 --> 00:00:29.060
It's called two way binding.

11
00:00:29.060 --> 00:00:32.950
So we're accepting user input and
managing it in a responsible manner.

12
00:00:32.950 --> 00:00:36.370
We saw that message before
that we're returning in data.

13
00:00:36.370 --> 00:00:38.730
And we're saying this is
a good place to type things.

14
00:00:38.730 --> 00:00:40.590
That's what we're starting with.

15
00:00:40.590 --> 00:00:42.870
So if I have a typical text area here,

16
00:00:42.870 --> 00:00:46.530
this is actually just plain
HTML aside from the v-model.

17
00:00:46.530 --> 00:00:51.670
So we've got text area, class, rows,
max length, that's a typical text area.

18
00:00:51.670 --> 00:00:56.200
And we have this v-model message
that is establishing a relationship

19
00:00:56.200 --> 00:00:58.281
between what we're holding in data and

20
00:00:58.281 --> 00:01:03.190
what we're kind of gathering
from the user in that text area.

21
00:01:03.190 --> 00:01:06.690
And here we can output that
onto the page in this p tag.

22
00:01:06.690 --> 00:01:10.010
So we've got these mustache templates
where we can output it to the page.

23
00:01:11.990 --> 00:01:15.530
So here if we have this demo,
where we say, hello there everyone, and

24
00:01:15.530 --> 00:01:18.900
I say I like tacos, and

25
00:01:18.900 --> 00:01:22.960
then you can see it directly outputting
to the page very, very quickly.

26
00:01:22.960 --> 00:01:30.400
I can type anything, and it's storing that
data and outputting it as soon as I type.

27
00:01:30.400 --> 00:01:32.230
I didn't have to set state anywhere.

28
00:01:32.230 --> 00:01:34.060
I didn't have to gather anything about it.

29
00:01:34.060 --> 00:01:37.650
I didn't have to ping anything in
order to find that information.

30
00:01:37.650 --> 00:01:42.440
So I just say, message,
hello there everyone, and I mount the app.

31
00:01:42.440 --> 00:01:48.671
And then in that text area,
I established a relationship with message.

32
00:01:48.671 --> 00:01:53.809
So that means we can do really crazy
things like I could do something like

33
00:01:53.809 --> 00:01:58.947
this, where I say write me, and
then all of a sudden things scatter onto

34
00:01:58.947 --> 00:02:05.600
the page as I type things, or I can say, I
like tacos, and I'm not afraid to show it.

35
00:02:05.600 --> 00:02:07.320
And I can erase this and

36
00:02:07.320 --> 00:02:12.540
write it, and you already know how
half of that demo was created.

37
00:02:12.540 --> 00:02:16.700
And in a little bit, you'll know how the
other half is created, because we'll go

38
00:02:16.700 --> 00:02:20.890
into an animation section that shows how
to do enter and leave animations as well.

39
00:02:22.640 --> 00:02:23.920
Tada, cool.

40
00:02:25.420 --> 00:02:25.930
All right.

41
00:02:25.930 --> 00:02:28.720
So if we wanted to do something
other than a textbox,

42
00:02:28.720 --> 00:02:31.780
let's say we wanted to do checkboxes or
radio buttons or

43
00:02:31.780 --> 00:02:36.660
something like that, what we would do
is we'd make Checkednames an array.

44
00:02:36.660 --> 00:02:41.820
And then we add that v-model to every
input that we want to add to that array.

45
00:02:41.820 --> 00:02:47.510
So I can say, John, Paul, George,
Ringo, and take them off as well.

46
00:02:47.510 --> 00:02:51.300
And so if we go into our dev tools here,
if we go into code pen,

47
00:02:51.300 --> 00:02:54.576
and then we can actually look
at this in the view dev tools.

48
00:02:54.576 --> 00:02:59.280
We have our root,
we have our Checkednames array.

49
00:02:59.280 --> 00:03:04.383
And as I click on these, you can
see things appending to that array.

50
00:03:04.383 --> 00:03:06.822
Cool.

51
00:03:06.822 --> 00:03:11.442
Now let's say you don't know how many
of these items that you're gonna

52
00:03:11.442 --> 00:03:12.910
wanna put on the page.

53
00:03:12.910 --> 00:03:18.280
Let's say I'm a really big Beatles fan,
and I'm super hard core,

54
00:03:18.280 --> 00:03:22.490
and I think, well,
actually Pete Best was the fifth Beatle.

55
00:03:22.490 --> 00:03:26.364
So then I could come in here,
and I could add another value.

56
00:03:26.364 --> 00:03:31.104
And I could say Pete, and
it's automatically appended,

57
00:03:31.104 --> 00:03:36.036
because what I did was I used
that v4 that we saw earlier, and

58
00:03:36.036 --> 00:03:39.810
I'm looping through these options.

59
00:03:39.810 --> 00:03:43.680
And I'm establishing a relationship
with those Checkednames.

60
00:03:43.680 --> 00:03:46.630
And we're about we're about to
cover this bind right here.

61
00:03:46.630 --> 00:03:51.145
So we're binding to the value, and
then I'm able to just keep updating that.

62
00:03:51.145 --> 00:03:55.660
So that means I don't have to
keep on copy, pasting inputs and

63
00:03:55.660 --> 00:03:57.250
labels and things like that.

64
00:03:57.250 --> 00:04:02.028
I can actually just dynamically create
them from whatever happens on the server.

