WEBVTT

1
00:00:00.560 --> 00:00:03.010
Let's communicate some events with emit.

2
00:00:04.360 --> 00:00:09.750
Emit is a way to tell, report,
activity from the child to the parent.

3
00:00:09.750 --> 00:00:14.300
So far, we're doing props down,
we're explaining everything from

4
00:00:14.300 --> 00:00:17.590
the parent has all the control and
it's telling the child about things.

5
00:00:17.590 --> 00:00:21.095
But what if the child has to
report its duties to the parent?

6
00:00:21.095 --> 00:00:24.678
What if we need to change
something based on the child?

7
00:00:24.678 --> 00:00:26.576
Well, the child doesn't change it, right?

8
00:00:26.576 --> 00:00:29.230
We're not mutating that prop on the child.

9
00:00:29.230 --> 00:00:34.110
We're communicating to the parent,
hey, something's changed.

10
00:00:34.110 --> 00:00:36.710
And the parent will go up,
okay, thank you, I'll update.

11
00:00:37.920 --> 00:00:39.590
So why do we do this?

12
00:00:39.590 --> 00:00:43.840
Because we want a one-way flow of data, so
there's only one source of truth, right?

13
00:00:43.840 --> 00:00:45.380
We mentioned that a little bit earlier.

14
00:00:45.380 --> 00:00:49.808
We don't want multiple things happening
all over the place that are totally

15
00:00:49.808 --> 00:00:51.689
different from one to another.

16
00:00:51.689 --> 00:00:56.580
We want to make sure that we really
have just one thing that we're working

17
00:00:56.580 --> 00:01:00.880
with here and that it's getting
doled out to other places.

18
00:01:00.880 --> 00:01:04.380
This is just one way of doing it,
I'm gonna show you emit now.

19
00:01:04.380 --> 00:01:07.390
But later today we're gonna
talk about the Composition API,

20
00:01:07.390 --> 00:01:09.430
that's another way of doing this.

21
00:01:09.430 --> 00:01:12.830
And we're also gonna talk about Vuex,
which is yet another way of doing this.

22
00:01:12.830 --> 00:01:17.331
So consider this one
tool in your tool belt.

23
00:01:17.331 --> 00:01:18.410
And I will discuss,

24
00:01:18.410 --> 00:01:22.869
a little bit, the differences between when
you'd want to pick one over the other.

25
00:01:25.028 --> 00:01:29.803
So here we've got our where is my taco and
my click me to order a taco.

26
00:01:29.803 --> 00:01:31.840
I'm gonna open this as a CodePen again.

27
00:01:33.000 --> 00:01:37.589
So we've got our get taco in text.

28
00:01:37.589 --> 00:01:41.650
We've got our script type x-template,
which now you're pros at,

29
00:01:41.650 --> 00:01:46.563
you know that this order button is going
to be making association with a component.

30
00:01:46.563 --> 00:01:50.319
And on this button, when we click,

31
00:01:50.319 --> 00:01:55.340
We're gonna say $emit and
pass into gettaco.

32
00:01:55.340 --> 00:01:58.098
Remember I said earlier,
when you see a dollar sign,

33
00:01:58.098 --> 00:02:02.970
that's something that the view instance
has in particular, that has to offer us.

34
00:02:02.970 --> 00:02:07.500
So when I click this emits,
this changes to taco.

35
00:02:07.500 --> 00:02:13.490
So in our methods we have,
on the parent, updateTaco this.text.

36
00:02:13.490 --> 00:02:15.190
So the parent is making that change,

37
00:02:15.190 --> 00:02:17.520
even though the button
was clicked on the child.

38
00:02:18.750 --> 00:02:20.490
So this button was clicked on the child.

39
00:02:20.490 --> 00:02:22.686
This template is pretty bare, right?

40
00:02:22.686 --> 00:02:25.083
There's not a lot of things going on here.

41
00:02:25.083 --> 00:02:27.520
We don't even have a prop coming down or
anything.

42
00:02:27.520 --> 00:02:30.289
It's just a button,
we have an order button.

43
00:02:30.289 --> 00:02:32.316
It's just a button,
it has no state of its own.

44
00:02:32.316 --> 00:02:35.518
We are saying @click=$emit, so

45
00:02:35.518 --> 00:02:41.505
I'm telling the parent emit please,
do something with gettaco.

46
00:02:41.505 --> 00:02:48.690
And then you can see on that
component @gettaco, so it's @gettaco.

47
00:02:48.690 --> 00:02:54.743
So we're calling this and
then I'm saying updateTaco,

48
00:02:54.743 --> 00:02:58.031
which I have a method for here.

49
00:02:58.031 --> 00:02:59.840
You can name them the same thing.

50
00:02:59.840 --> 00:03:02.320
I named them different things so
that you can see the difference.

51
00:03:02.320 --> 00:03:05.660
So that you can see which one
is is firing which, right?

52
00:03:05.660 --> 00:03:11.720
So again, we're emitting gettaco,
that calls this special click event.

53
00:03:12.890 --> 00:03:16.566
And we're gonna fire a method there,
and that method could do anything.

54
00:03:16.566 --> 00:03:20.434
But the parent is the one changing it,
not the child.

55
00:03:20.434 --> 00:03:21.720
Does that make sense to everyone?

56
00:03:21.720 --> 00:03:22.650
Any questions so far?

57
00:03:25.390 --> 00:03:29.734
Great, we have just another
piece of review here,

58
00:03:29.734 --> 00:03:35.220
we've got our myevent, and
then this is the parent handler.

59
00:03:35.220 --> 00:03:36.810
We can also pass in a parameter.

60
00:03:38.080 --> 00:03:41.031
So if we, let's say we need to
report something to the parent, but

61
00:03:41.031 --> 00:03:43.524
we also need to tell the parent
something about itself.

62
00:03:43.524 --> 00:03:48.451
Like if we had that backpack counter, and
we had that data on the backpack counter

63
00:03:48.451 --> 00:03:52.600
and we wanted to tell the parent,
I got a count of four.

64
00:03:52.600 --> 00:03:56.160
We could pass that four in as
a parameter and it could say, hey,

65
00:03:56.160 --> 00:04:01.600
update this manifest file with that four,
so we're able to pass parameters as well.

66
00:04:02.910 --> 00:04:06.229
So here's this with a parameter.

67
00:04:06.229 --> 00:04:07.210
I'm gonna open this up.

68
00:04:09.180 --> 00:04:15.142
We've got our number of tacos and we're
gonna add a million tacos, all the tacos.

69
00:04:15.142 --> 00:04:20.177
And then we've got, again,
this ability to say on the child,

70
00:04:20.177 --> 00:04:22.552
does child has its own state?

71
00:04:22.552 --> 00:04:25.730
In this instance,
I'm not updating the parent yet, right?

72
00:04:25.730 --> 00:04:30.600
I'm just in the child,
holding that numtacos.

73
00:04:30.600 --> 00:04:37.099
And then as soon as I say,
click me to order a taco, I say gettaco.

74
00:04:37.099 --> 00:04:41.412
I'm emitting get taco
with the number of tacos.

75
00:04:41.412 --> 00:04:46.771
And I say gettaco and
that's gonna go to updateTaco here.

76
00:04:46.771 --> 00:04:52.310
And updateTaco passes in
the numTaco from the child.

77
00:04:52.310 --> 00:04:55.133
And then it's gonna say this.text
= You ordered $(numtaco).

78
00:04:55.133 --> 00:05:03.531
If we want to look at this in Dev Tools,
We have Vue over here.

79
00:05:05.995 --> 00:05:10.660
We have our component,
you see the numtacos.

80
00:05:10.660 --> 00:05:15.360
The route has the text, where is my taco,
it's not holding numtaco.

81
00:05:15.360 --> 00:05:18.400
We are adding tacos, adding tacos.

82
00:05:18.400 --> 00:05:22.138
Now we click this and
then we go back to the route.

83
00:05:22.138 --> 00:05:26.240
And you can see that the text
has changed on the parent.

84
00:05:26.240 --> 00:05:30.793
&gt;&gt; Is it a bad practice to
pass a function into a child

85
00:05:30.793 --> 00:05:34.355
through a prop instead of using emit?

86
00:05:34.355 --> 00:05:38.350
So that the child component would have
access to the scope of the parent?

87
00:05:38.350 --> 00:05:44.760
&gt;&gt; You can, although I would say that
if you're gonna add more functionality,

88
00:05:44.760 --> 00:05:50.100
that's when I start to use things
like Vuex or Composition API.

89
00:05:50.100 --> 00:05:54.445
Because you just have a lot
more that you can work with,

90
00:05:54.445 --> 00:05:59.090
you're not passing a huge
amount of information around.

91
00:06:00.140 --> 00:06:05.200
So you can, I mean,
you can pass that kind of data around.

92
00:06:05.200 --> 00:06:08.738
Although when we start to get
into Composition API and Vuex,

93
00:06:08.738 --> 00:06:12.760
you're gonna start to see how
there's a lot more available to you

94
00:06:12.760 --> 00:06:16.760
in terms of changing that data from
the child to parent or siblings as well.

95
00:06:16.760 --> 00:06:19.488
Here is a kind of goofy CodePen.

96
00:06:19.488 --> 00:06:23.570
I'm starting this ball bouncing, and
I'm just increasing the height and

97
00:06:23.570 --> 00:06:27.930
the ball will continue to bounce and
I can increase the radius as well.

98
00:06:27.930 --> 00:06:32.475
And it's a pretty simple
@heightincrease = incrementHeight,

99
00:06:32.475 --> 00:06:35.560
radiusincrease = incrementRadius.

100
00:06:35.560 --> 00:06:39.040
And you can see those methods
on the parent are this.total and

101
00:06:39.040 --> 00:06:40.425
I'm increasing the radius.

102
00:06:40.425 --> 00:06:43.989
And the ball bouncing
from the height counter.

103
00:06:43.989 --> 00:06:50.860
And the height counter is adding
the height to that count that we have.

104
00:06:50.860 --> 00:06:53.870
But it's also emitting for
the parent to understand it.

105
00:06:53.870 --> 00:06:56.880
But I also wanted to show this
because I wanted to show that emit

106
00:06:56.880 --> 00:06:59.690
doesn't have to be passed
through that click handler.

107
00:06:59.690 --> 00:07:04.400
Remember we can say this.emit inside
of a function if you want to do

108
00:07:04.400 --> 00:07:05.570
more functionality there.

