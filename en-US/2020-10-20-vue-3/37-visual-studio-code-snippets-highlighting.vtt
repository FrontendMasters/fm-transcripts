WEBVTT

1
00:00:00.000 --> 00:00:02.896
So, you'll start off with an app file and
a component.

2
00:00:02.896 --> 00:00:06.433
This is really nice because then you get
to see how these files and imports and

3
00:00:06.433 --> 00:00:07.437
exports might work.

4
00:00:07.437 --> 00:00:11.374
So Vue kinda sets that up for
you directly with the CLI.

5
00:00:11.374 --> 00:00:13.672
Let's go over that Vue.

6
00:00:13.672 --> 00:00:17.541
We went over this Vue file extension for
a moment.

7
00:00:17.541 --> 00:00:21.728
And I also mentioned that
We're working within vscode.

8
00:00:21.728 --> 00:00:25.460
I highly suggest you get Vetur for vscode.

9
00:00:25.460 --> 00:00:32.279
Vetur will give you syntax highlighting
within vscode for that .vue component.

10
00:00:32.279 --> 00:00:33.768
I created some snippets,

11
00:00:33.768 --> 00:00:37.702
there are other snippets out there
that are more based off of the API.

12
00:00:37.702 --> 00:00:40.294
I wrote these snippets
to be what you need,

13
00:00:40.294 --> 00:00:43.463
based on the boilerplate
that you typically write.

14
00:00:43.463 --> 00:00:47.709
So, and you might have noticed for
that component, when we imported and

15
00:00:47.709 --> 00:00:52.232
exported, I made some default so that
you can type multiple things at once and

16
00:00:52.232 --> 00:00:56.711
it kind of autofills a bunch of them at
once, so you can move pretty quickly.

17
00:00:56.711 --> 00:01:01.629
So I also have an article on how
to globally import styles, and

18
00:01:01.629 --> 00:01:04.287
scripts, and things like that.

19
00:01:04.287 --> 00:01:08.648
So, this is where you
can access that file.

20
00:01:08.648 --> 00:01:12.918
And again, that style scoped
is really just going to be for

21
00:01:12.918 --> 00:01:17.203
anything that's particular styles for
that component.

22
00:01:17.203 --> 00:01:21.839
So, it really allows us easily to
scope the styles for the component and

23
00:01:21.839 --> 00:01:23.313
only this component.

24
00:01:23.313 --> 00:01:27.252
You may, if you didn't,
at first add in SCSS or

25
00:01:27.252 --> 00:01:31.894
SASS in your Vue CLI while
you are building everything.

26
00:01:31.894 --> 00:01:36.294
No worries, you can do yarn add or
NPMI node-sass,

27
00:01:36.294 --> 00:01:40.494
sass-loader, and
then you can use lang= scss.

28
00:01:40.494 --> 00:01:41.916
And it will build properly.

29
00:01:41.916 --> 00:01:46.379
So if you ever find an error where
it's like sass, not found and

30
00:01:46.379 --> 00:01:51.196
bla bla bla bla bla, just run this
command, and you'll be golden.

31
00:01:51.196 --> 00:01:54.126
Let's go look over here,
we have a published app.

32
00:01:54.126 --> 00:01:55.825
Let's click on this link.

33
00:01:55.825 --> 00:01:58.972
And here is our stuff, live online.

34
00:01:58.972 --> 00:02:04.937
And I can even go back here, say Site
Settings, Change the site name to setup1.

35
00:02:04.937 --> 00:02:07.054
I'm not sure if that will be taken or not.

36
00:02:07.054 --> 00:02:08.104
Is it taken?

37
00:02:08.104 --> 00:02:09.213
It's not, cool.

38
00:02:09.213 --> 00:02:13.124
And then we click setup1.

39
00:02:13.124 --> 00:02:16.318
Now you can all go to setup1.nullify.app,
and

40
00:02:16.318 --> 00:02:21.344
you can see that thing that used to be
a code pen deployed online pretty simply.

41
00:02:21.344 --> 00:02:22.408
So that's pretty cool.

42
00:02:22.408 --> 00:02:24.003
Awesome.

43
00:02:24.003 --> 00:02:28.956
So this is a good way of getting
applications from one state to a full

44
00:02:28.956 --> 00:02:30.024
other state.

45
00:02:30.024 --> 00:02:34.486
We can create full applications and get
them online really quickly with Vue CLI.

