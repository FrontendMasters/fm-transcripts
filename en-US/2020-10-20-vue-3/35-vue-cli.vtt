WEBVTT

1
00:00:00.000 --> 00:00:05.480
So I'm gonna do a demo of a walk through,
we're gonna create a project from scratch.

2
00:00:05.480 --> 00:00:10.050
I already have Vue CLI installed, but
if you don't have Vue CLI installed,

3
00:00:10.050 --> 00:00:15.465
you can do npm i -g which
is installing it globally,

4
00:00:15.465 --> 00:00:18.280
@vue/cli.

5
00:00:18.280 --> 00:00:22.410
And then to create a project,
I'll say vue create my-project.

6
00:00:22.410 --> 00:00:26.900
And in the repo, the end state of
what we're building is in setup1.

7
00:00:26.900 --> 00:00:31.020
So what I'm gonna do is I'm gonna take
this previous example that we looked at

8
00:00:31.020 --> 00:00:36.930
earlier, and kind of saw this store kinda
piece, and we're gonna refactor it.

9
00:00:36.930 --> 00:00:40.870
And we're gonna put all of these
components into a Vue CLI app, so

10
00:00:40.870 --> 00:00:44.380
you can see what the similarities and
differences are.

11
00:00:44.380 --> 00:00:51.050
So if I go into my terminal and
I say vue create setup1,

12
00:00:51.050 --> 00:00:55.255
then what will happen is Vue will,

13
00:00:55.255 --> 00:01:00.044
my computer's a little bit slow here.

14
00:01:00.044 --> 00:01:05.342
Usually it happens quite quickly, it will
offer you a bunch of different examples so

15
00:01:05.342 --> 00:01:09.013
you can go through this one,
a simple one and default one.

16
00:01:09.013 --> 00:01:12.123
And you can actually even create one and
name it.

17
00:01:12.123 --> 00:01:16.270
I'm gonna manually select feature,
so you can see how this works.

18
00:01:16.270 --> 00:01:20.349
So in this one you could say,
okay, I wanna use babel,

19
00:01:20.349 --> 00:01:25.792
I wanna toggle these features,
I wanna use vuex or something like that.

20
00:01:25.792 --> 00:01:28.592
If you wanted to use TypeScript,
you see how we're gonna do that.

21
00:01:28.592 --> 00:01:32.296
If you wanted to add a router,
if you wanted to add CSS pre-processors,

22
00:01:32.296 --> 00:01:33.240
you can read.

23
00:01:33.240 --> 00:01:37.200
But [LAUGH] basically you're able
to toggle all of these pieces

24
00:01:37.200 --> 00:01:40.790
with the spacebar and so
I'm gonna click Return.

25
00:01:40.790 --> 00:01:45.780
And then I can decide between node-sass or
dart-sass, I typically use node-sass.

26
00:01:45.780 --> 00:01:47.442
I like to use package-json.

27
00:01:47.442 --> 00:01:49.170
It's really whatever you like, and

28
00:01:49.170 --> 00:01:52.910
I mentioned before that you could save
the preset that you just created for

29
00:01:52.910 --> 00:01:56.850
future projects if you wanna name it and
then it always is available.

30
00:01:56.850 --> 00:02:01.676
So then I can say, no I'm not interested
in making it for future projects,

31
00:02:01.676 --> 00:02:06.592
it's going to start building this whole
thing for me, which is super nice.

32
00:02:06.592 --> 00:02:10.009
By the way, you might notice
some sparkles in my terminal and

33
00:02:10.009 --> 00:02:14.370
that's because I'm a major nerd and
I use a thing called, what is it called?

34
00:02:16.780 --> 00:02:19.690
I forget the name of it, but
I will link it up in the readme and

35
00:02:19.690 --> 00:02:21.540
it just makes terminal sparkles.

36
00:02:21.540 --> 00:02:24.596
My husband told me that he thought
I would get sick of it, but

37
00:02:24.596 --> 00:02:26.073
I have not gotten sick of it.

38
00:02:26.073 --> 00:02:30.653
I've been using it for two years and
I still really like my sparkles.

39
00:02:30.653 --> 00:02:36.701
Okay, so if you go back to this as
a reminder of what we were doing before,

40
00:02:36.701 --> 00:02:42.962
we had this ScriptType x template,
which was the child and this is the app.

41
00:02:42.962 --> 00:02:48.330
And this is okay, but what's not okay
about it or what's not ideal about

42
00:02:48.330 --> 00:02:53.530
it is that it's not so clear what
things are and where they're going.

43
00:02:53.530 --> 00:02:56.653
And also we're having to look back and
forth to different sections.

44
00:02:56.653 --> 00:03:01.621
I'm looking at this app in this one place
and this component in a different place.

45
00:03:01.621 --> 00:03:03.333
And so I have to kind of see,

46
00:03:03.333 --> 00:03:07.450
kind of exchange that knowledge
a little bit differently.

47
00:03:07.450 --> 00:03:12.666
So now it will tell me what I do
in order to go into the setup.

48
00:03:12.666 --> 00:03:16.977
So I'll say cd setup1, and
then I'll say yarn serve,

49
00:03:16.977 --> 00:03:21.780
little bit laggy on my keyboard,
I apologize for that.

50
00:03:21.780 --> 00:03:25.809
So okay, if we're looking back at this,
back pop the original one,

51
00:03:25.809 --> 00:03:29.362
what's good about it is that
we're able to use components.

52
00:03:29.362 --> 00:03:33.000
But what could be better about it is,
now I'm looking in one place for

53
00:03:33.000 --> 00:03:35.060
the parent, one place for the child.

54
00:03:35.060 --> 00:03:39.394
It's a little confusing which one
of these is associated with which?

55
00:03:39.394 --> 00:03:44.552
The app component is on that one and
then this state is to this one.

56
00:03:44.552 --> 00:03:46.820
So it's not exactly, perfectly clear.

57
00:03:47.860 --> 00:03:51.600
So what's really nice is when
we're working with an app,

58
00:03:51.600 --> 00:03:57.320
we can use this process and
that Vue CLI will kick this all up for us.

59
00:03:57.320 --> 00:04:02.270
Now if we wanted to look at what
kind of defaults it gives us,

60
00:04:02.270 --> 00:04:07.022
so I'll like open a new tab,
and then I'll open up code.

61
00:04:07.022 --> 00:04:15.570
And then VS code and then,
what we have is our setup.

62
00:04:15.570 --> 00:04:20.000
Inside source,
we have some defaults that we have here.

63
00:04:20.000 --> 00:04:25.835
So one thing that you might
notice is this App.vue component.

64
00:04:25.835 --> 00:04:31.724
All of those single file components that I
mentioned will have the extension .vue and

65
00:04:31.724 --> 00:04:34.763
we're gonna start off with this App.vue.

66
00:04:34.763 --> 00:04:39.798
What's nice also about the CLI is it kind
of starts us off with a few component so

67
00:04:39.798 --> 00:04:42.300
you can see where things live.

68
00:04:42.300 --> 00:04:47.215
So we've got got that div id app,
we've got this HelloWorld component.

69
00:04:47.215 --> 00:04:51.739
You can see we're importing HelloWorld
from components HelloWorld.

70
00:04:51.739 --> 00:04:56.645
This name piece is not super important,
it works fine without that.

71
00:04:56.645 --> 00:04:58.807
We have this components of HelloWorld.

72
00:04:58.807 --> 00:05:00.874
And if we go into HelloWorld,

73
00:05:00.874 --> 00:05:05.625
you can see all of those links
that we saw earlier on the page.

74
00:05:05.625 --> 00:05:12.060
So if I go back to Chrome, You can see,

75
00:05:12.060 --> 00:05:16.550
Welcome to Your Vue.js App and
all of those links.

76
00:05:16.550 --> 00:05:19.519
So if we go back to Visual Studio Code for
a minute,

77
00:05:19.519 --> 00:05:23.010
we have that App.vue with
the template that I mentioned.

78
00:05:23.010 --> 00:05:27.480
The script that I mentioned,
and some default styles,

79
00:05:27.480 --> 00:05:33.963
as well as all of these links here, and
the scripts and some default styles here.

80
00:05:33.963 --> 00:05:38.767
So you can see how we would
start to encapsulate this and

81
00:05:38.767 --> 00:05:43.582
also how all of it that you
need is just in that one area.

82
00:05:43.582 --> 00:05:47.002
There's also a couple other things
I wanted to highlight here.

83
00:05:47.002 --> 00:05:49.752
We're gonna talk about Vuex later today.

84
00:05:49.752 --> 00:05:54.856
We did say in that CLI builds that we
wanted Vue CLI to give us a store and

85
00:05:54.856 --> 00:05:56.730
some boilerplate.

86
00:05:56.730 --> 00:06:00.815
So it gave us a store and
some boilerplate, it added in store and

87
00:06:00.815 --> 00:06:05.180
index.js and so
we don't have to manually add that now.

88
00:06:06.570 --> 00:06:08.800
If you're wondering how
all of this is mounted and

89
00:06:08.800 --> 00:06:13.560
done cuz you saw it in those code pins
that we actually mounted to an app.

90
00:06:13.560 --> 00:06:19.037
What it does is in main.js,
we've got import Vue,

91
00:06:19.037 --> 00:06:22.149
import App, import store and

92
00:06:22.149 --> 00:06:27.143
then we got the store is
passed in here and here.

93
00:06:27.143 --> 00:06:30.803
And then we're rendering this h of App.

94
00:06:30.803 --> 00:06:33.054
h in this case stands for HyperScript.

95
00:06:33.054 --> 00:06:38.204
I have a long article that I'll link up
that explains why it's called HyperScript,

96
00:06:38.204 --> 00:06:40.463
it's like, what is the h for in Vue?

97
00:06:40.463 --> 00:06:43.453
I think you can google what is the h for
in Vue and

98
00:06:43.453 --> 00:06:46.260
it explains all of those things.

99
00:06:46.260 --> 00:06:50.810
The other thing is that when we build
all of these files, if you go in

100
00:06:50.810 --> 00:06:56.360
the public folder, you'll see the
index.HTML that this is being built into.

101
00:06:56.360 --> 00:07:03.790
And if you needed to add a font or other
links, you would do it in inside of here.

102
00:07:03.790 --> 00:07:07.990
So that gives us access to if we

103
00:07:07.990 --> 00:07:12.990
needed to call out to a link for
a global style or something.

104
00:07:12.990 --> 00:07:19.480
And as we move into Nuxt,
we're going to talk a little bit more

105
00:07:19.480 --> 00:07:24.430
about how we render this, because it's
done completely differently in Nuxt.

106
00:07:24.430 --> 00:07:28.613
Nuxt is a meta framework so
it uses Vue under the hood, but

107
00:07:28.613 --> 00:07:30.892
it is a framework on top of Vue.

108
00:07:30.892 --> 00:07:33.990
It's like Vue's version of Next.

109
00:07:33.990 --> 00:07:36.743
So React has Next, Vue has Nuxt.

110
00:07:36.743 --> 00:07:38.150
I know that's very confusing.

111
00:07:38.150 --> 00:07:40.708
We'll go over it a little
bit more in a minute.

