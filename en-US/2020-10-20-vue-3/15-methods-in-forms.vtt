WEBVTT

1
00:00:00.030 --> 00:00:03.690
Methods and forms because like I
mentioned, we're [INAUDIBLE] developers,

2
00:00:03.690 --> 00:00:04.992
we write a lot of forms.

3
00:00:04.992 --> 00:00:08.820
[LAUGH] So what we're gonna do
is we're going to create a form

4
00:00:08.820 --> 00:00:13.490
that posts to a server called
Typicode JSONPlaceholder.

5
00:00:13.490 --> 00:00:17.660
It's a really nice thing if you need
to get some fake server responses and

6
00:00:17.660 --> 00:00:20.720
just make sure that everything
is evaluating correctly.

7
00:00:20.720 --> 00:00:22.440
So I'm gonna write my name here.

8
00:00:22.440 --> 00:00:25.590
And I'm not giving anything away or
doxxing myself with my email.

9
00:00:25.590 --> 00:00:26.240
It's my name.

10
00:00:26.240 --> 00:00:28.040
You could probably figure it out.

11
00:00:28.040 --> 00:00:30.770
And then I'm gonna say,
how do I turn off caps lock?

12
00:00:31.820 --> 00:00:33.500
I don't know.

13
00:00:33.500 --> 00:00:35.340
And then I submit.

14
00:00:35.340 --> 00:00:39.650
And then the response from the server
that I get is the data with my name,

15
00:00:39.650 --> 00:00:43.220
my email, caps, and
then I'm also adding an ID.

16
00:00:44.410 --> 00:00:47.046
And so then we've got a bunch of
headers and things like that and

17
00:00:47.046 --> 00:00:48.520
information about the request.

18
00:00:48.520 --> 00:00:49.565
So let's take a look at this pen.

19
00:00:52.042 --> 00:00:56.959
So far what we've got, you might have
guessed that what we're doing is we're

20
00:00:56.959 --> 00:00:59.155
saying form @submit.prevent.

21
00:00:59.155 --> 00:01:04.645
Now remember, that prevent modifier is
going to do that e.preventDefault so

22
00:01:04.645 --> 00:01:08.995
it's gonna keep that form from
reloading the page on submission.

23
00:01:08.995 --> 00:01:14.089
So we've got @submit.prevent, and we're
gonna call a method called submitForm.

24
00:01:15.855 --> 00:01:19.212
In this submitForm, and
I'm using Axios for this and

25
00:01:19.212 --> 00:01:23.030
I'm writing it as simply as I
possibly can with promises.

26
00:01:23.030 --> 00:01:29.230
So we've got axios.post, and
we're posting to this JSONPlaceholder.

27
00:01:29.230 --> 00:01:33.632
I'm gonna pass in name, email, caps.

28
00:01:33.632 --> 00:01:39.520
And that has a relationship with the name,
email, caps that you can imagine,

29
00:01:39.520 --> 00:01:45.210
have the models on them,
name, email caps, and so on.

30
00:01:46.510 --> 00:01:52.140
And right now, I'm just writing a required
which is a piece of HTML5 native things.

31
00:01:52.140 --> 00:01:55.390
Typically, I'll use Vuelidate for
validation.

32
00:01:55.390 --> 00:01:59.410
But this is just a quick way of
getting a little bit of validation.

33
00:01:59.410 --> 00:02:03.060
And we've got these kind of required.

34
00:02:04.490 --> 00:02:05.270
If you remember,

35
00:02:05.270 --> 00:02:10.650
we also did that binding of that
ternary to turn on an active class.

36
00:02:10.650 --> 00:02:15.100
So I don't want an activeClass on
that button until I have something

37
00:02:15.100 --> 00:02:16.960
in this first input, right?

38
00:02:16.960 --> 00:02:22.740
So I am using that to create that
relationship and say the activeClass

39
00:02:22.740 --> 00:02:25.620
is active, which is similar to
that button that we saw earlier.

40
00:02:25.620 --> 00:02:30.660
So you can go in here and
you can see the active has a background of

41
00:02:30.660 --> 00:02:34.940
a primary color from our code base.

42
00:02:34.940 --> 00:02:37.720
So we have name, email, caps.

43
00:02:37.720 --> 00:02:41.190
I also have an empty string for
the response from the server.

44
00:02:41.190 --> 00:02:43.590
That's not gonna have a V model on it.

45
00:02:43.590 --> 00:02:47.284
As soon as I submit this, so
I'm going to say axios.post.

46
00:02:47.284 --> 00:02:49.540
I'm gonna post all of these things.

47
00:02:49.540 --> 00:02:54.013
And then I say this.response =
JSON.stringify(response, null, 2),

48
00:02:54.013 --> 00:02:56.600
which just allows me
some basic formatting.

49
00:02:56.600 --> 00:03:01.030
It's going to allow that to instead
of being a big clump of information,

50
00:03:01.030 --> 00:03:04.370
it's gonna pretty print it
to the page with two spaces.

51
00:03:04.370 --> 00:03:08.860
And so I'm saying this.response equals
this so that I can output it to the page.

52
00:03:08.860 --> 00:03:12.410
So that you can all see what
that response might be when we

53
00:03:12.410 --> 00:03:15.110
get the response from the server.

54
00:03:15.110 --> 00:03:19.920
Pretty cool, again, not a lot of
code to make all of that work.

55
00:03:19.920 --> 00:03:22.800
We've got a bunch of labels and inputs.

56
00:03:22.800 --> 00:03:26.670
And by the way, if you're making inputs,
you should create labels.

57
00:03:26.670 --> 00:03:31.310
This label has for that has
a relationship with name that'll allow

58
00:03:31.310 --> 00:03:35.570
a screen reader to speak out this name.

59
00:03:35.570 --> 00:03:37.120
And we have typed text.

60
00:03:37.120 --> 00:03:40.256
So this is kind of normal
HTML that we have here and

61
00:03:40.256 --> 00:03:43.699
then we're establishing
a relationship with name.

62
00:03:43.699 --> 00:03:48.324
I should mention also, we're using a lot
of templates today in this course.

63
00:03:49.385 --> 00:03:52.690
You can also use JSX if you're
more comfortable with JSX.

64
00:03:52.690 --> 00:03:54.375
Vue does support JSX.

65
00:03:54.375 --> 00:03:57.675
We're doing a kind of
while in Rome philosophy.

66
00:03:57.675 --> 00:04:01.745
A lot of you developers use templates and
single file components to

67
00:04:01.745 --> 00:04:04.435
write their code and so
I'm gonna show you that way of working.

68
00:04:04.435 --> 00:04:08.885
But just know for yourself that JSX
is totally available to you as well.

69
00:04:09.940 --> 00:04:12.900
So we have all of these pieces.

70
00:04:12.900 --> 00:04:15.135
And that's what it takes
to submit that form.

71
00:04:15.135 --> 00:04:21.100
So here is that @submit.prevent
that's on that top level form,

72
00:04:21.100 --> 00:04:23.000
and all of the things that
we're capturing here.

73
00:04:24.320 --> 00:04:27.260
And here is all of the JavaScript
that it takes to power that.

74
00:04:27.260 --> 00:04:30.170
So again, not too much code
to make all of that happen.

