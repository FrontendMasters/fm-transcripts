WEBVTT

1
00:00:00.124 --> 00:00:02.844
One thing that's amazing
about animations in view,

2
00:00:02.844 --> 00:00:05.692
is that there's a lot of
different ways to work with it.

3
00:00:05.692 --> 00:00:10.302
There's a lot of really
good surface API pieces,

4
00:00:10.302 --> 00:00:15.480
that help us work with
transitioning things in and out.

5
00:00:15.480 --> 00:00:18.806
We talked about hooks with
which to observe things,

6
00:00:18.806 --> 00:00:21.155
it gives us these really nice hooks.

7
00:00:21.155 --> 00:00:25.355
So before we dive in, we should talk
a little bit about transitions versus

8
00:00:25.355 --> 00:00:29.642
animations, because I know that this
kind of trips people up a little bit.

9
00:00:29.642 --> 00:00:33.446
Stephanie Walter did this
great pen that shows,

10
00:00:33.446 --> 00:00:39.385
CSS transitions versus CSS animations,
and what CSS transitions do is they

11
00:00:39.385 --> 00:00:44.487
interpolate two states,
you go from one state to another state,

12
00:00:44.487 --> 00:00:50.460
but you're not allowed to create loops or
other processes in between them.

13
00:00:50.460 --> 00:00:54.886
In terms of CSS animations,
we have the ability to access keyframes.

14
00:00:54.886 --> 00:00:59.998
So keyframes can gives us the ability to
go from one state to another, just like

15
00:00:59.998 --> 00:01:05.188
transitions does, but it also has a lot
more power, so we're able to do loops,

16
00:01:05.188 --> 00:01:09.932
we're able to put many different things,
at different points in time.

17
00:01:09.932 --> 00:01:14.538
We're gonna work with a thing called the
transition component today in view, and

18
00:01:14.538 --> 00:01:17.284
the transition component
can hook into either.

19
00:01:17.284 --> 00:01:21.817
I know that sounds a little bit confusing,
but it can use CSS transitions, or

20
00:01:21.817 --> 00:01:22.883
CSS animations.

21
00:01:22.883 --> 00:01:26.140
I don't want you to think that just
because it's called transition,

22
00:01:26.140 --> 00:01:27.750
that you're not able to use both.

23
00:01:27.750 --> 00:01:29.610
So the transition component.

24
00:01:29.610 --> 00:01:31.608
I'm gonna look at a modal example.

25
00:01:31.608 --> 00:01:35.107
We looked at this modal
example a little bit earlier,

26
00:01:35.107 --> 00:01:40.234
we had the here I am in a slot, we're
toggling, the display of that modal, and

27
00:01:40.234 --> 00:01:45.545
we're basically saying, okay, click
this button, it shows it or it hides it.

28
00:01:47.876 --> 00:01:54.684
So if we have this code pin,
The styles fell off of the code pin.

29
00:01:54.684 --> 00:01:57.296
Here we go,
I think it was just slow to load.

30
00:01:57.296 --> 00:02:01.639
If we trigger this here modal,
we do show modal, and

31
00:02:01.639 --> 00:02:05.907
we hide it, then we see here I am,
so that's okay.

32
00:02:05.907 --> 00:02:09.880
But it's things in nature,
things in real life,

33
00:02:09.880 --> 00:02:13.482
do not just toggle into appearance, right?

34
00:02:13.482 --> 00:02:16.630
In fact, we're kind of training
that that's a bad thing.

35
00:02:16.630 --> 00:02:17.240
[LAUGH].

36
00:02:17.240 --> 00:02:21.689
If something is just popping in our faces,
or just showing up all of a sudden,

37
00:02:21.689 --> 00:02:23.887
that it's not actually a good thing.

38
00:02:23.887 --> 00:02:27.567
And so humans don't kind of work
in those types of Booleans,

39
00:02:27.567 --> 00:02:31.319
in order to make things feel
a little bit smoother for a human,

40
00:02:31.319 --> 00:02:35.894
we need to have things transition,
we need to have some flow of that state.

41
00:02:35.894 --> 00:02:41.266
So what we're gonna do, is we're
going to wrap this child component,

42
00:02:41.266 --> 00:02:45.125
in a transition component,
with the name of fade.

43
00:02:45.125 --> 00:02:50.487
And I redid this graphic for view three,
we changed a couple of different things,

44
00:02:50.487 --> 00:02:53.130
we have enter-from and enter-to now,

45
00:02:53.130 --> 00:02:57.579
and leave-from, leave-to,
before it was just enter and leave.

46
00:02:57.579 --> 00:02:59.693
But now it's a little bit more explicit,
right?

47
00:02:59.693 --> 00:03:04.173
We're saying enter-from,
enter-to and enter-active.

48
00:03:04.173 --> 00:03:09.118
I mentioned before when we're talking
about reactivity, that we have hooks with

49
00:03:09.118 --> 00:03:13.916
which to observe things, if we're
talking about a hover state, again, it's

50
00:03:13.916 --> 00:03:18.860
the moment it starts, you start hovering,
the time that you're going to hover,

51
00:03:18.860 --> 00:03:23.260
what it's going to do in between that
state, and the second it's done.

52
00:03:23.260 --> 00:03:27.792
It's also reusable for other components,
so if I call something fade,

53
00:03:27.792 --> 00:03:32.562
if I say transition name fade, I can
wrap anything in transition name fade.

54
00:03:32.562 --> 00:03:37.393
I'm really plugging into the CSS for
that, so I can declare the CSS in

55
00:03:37.393 --> 00:03:42.476
a more global place or in the app,
and I could say fade-enter-active,

56
00:03:42.476 --> 00:03:46.891
fade- leave-active, and
what this is basically saying is,

57
00:03:46.891 --> 00:03:51.679
anytime opacity is changing,
let's change the opacity this way.

58
00:03:51.679 --> 00:03:57.831
We're gonna do it for, point 20 quarter of
a second, we're gonna use an ease- out,

59
00:03:57.831 --> 00:04:02.090
and then when it's leaving,
we're gonna use an ease-in.

60
00:04:02.090 --> 00:04:06.730
This is an animation tip, you might think
that animations would work with ease in

61
00:04:06.730 --> 00:04:10.769
for entrances and ease out for
exits, but really it's the opposite.

62
00:04:10.769 --> 00:04:15.521
When you use ease out for
entrances, it looks a little

63
00:04:15.521 --> 00:04:20.391
bit more realistic and
you should define it as ease in.

64
00:04:20.391 --> 00:04:23.706
And fade-enter-from and
leave-to is opacity zero,

65
00:04:23.706 --> 00:04:26.109
because that's our start state right?

66
00:04:26.109 --> 00:04:30.058
We're saying start enter-from,

67
00:04:30.058 --> 00:04:34.669
opacity zero, leave-to opacity zero.

68
00:04:34.669 --> 00:04:36.809
This is unnecessary
because it's the default.

69
00:04:36.809 --> 00:04:40.488
We could say fade enter to and
leave from, so

70
00:04:40.488 --> 00:04:45.262
we have that first enter from to,
and then leave from to,

71
00:04:45.262 --> 00:04:49.838
but we don't have to declare
this piece in the middle,

72
00:04:49.838 --> 00:04:55.628
because it's the default for
DOM elements to have an opacity of one.

73
00:04:55.628 --> 00:04:59.207
So now if we could trigger this modal,
it's a little bit better, right?

74
00:04:59.207 --> 00:05:03.742
It feels a little bit more natural, this
is a small example but it's just kind of

75
00:05:03.742 --> 00:05:08.228
fading a little bit better, it's not
popping in your face so quite so strong.

76
00:05:08.228 --> 00:05:11.760
This is great, but what if we wanted
to improve on it one more step?

77
00:05:11.760 --> 00:05:15.126
So what if we wanted to make
the background content fade out of use, so

78
00:05:15.126 --> 00:05:18.972
that the modal took center stage, and
the background lost focus a little bit.

79
00:05:18.972 --> 00:05:22.671
We can't really use the transition
component, I mean technically we could,

80
00:05:22.671 --> 00:05:26.033
we could wrap the entire body of
the page in a transition component, but

81
00:05:26.033 --> 00:05:27.503
that's a little odd, right?

82
00:05:27.503 --> 00:05:32.661
We don't necessarily want to pass
that through the entire background.

83
00:05:32.661 --> 00:05:37.160
So what we wanna do, is we wanna use
something that's not the transition

84
00:05:37.160 --> 00:05:41.384
component, we would probably do
a class binding for this, right?

85
00:05:41.384 --> 00:05:43.868
We talked about that v-bind earlier, and

86
00:05:43.868 --> 00:05:48.010
how we can dynamically bind a class,
we could use it for this instance.

87
00:05:48.010 --> 00:05:50.500
And the reason why I'm bringing this up,

88
00:05:50.500 --> 00:05:54.126
is because you really want to use
the right tool for the job and

89
00:05:54.126 --> 00:05:58.840
I also don't want you to think that you
only can use the transition component.

90
00:05:58.840 --> 00:06:03.709
The transition component is really
good for coordinating entrances and

91
00:06:03.709 --> 00:06:07.630
exits, of a component that
has a conditional statement.

92
00:06:07.630 --> 00:06:10.023
So if you wrap that transition component,

93
00:06:10.023 --> 00:06:14.548
it's not a component that's mounting and
unmounting, it won't really work.

94
00:06:14.548 --> 00:06:19.053
For anything else, any other thing,
we can hook into our CSS and

95
00:06:19.053 --> 00:06:21.150
JavaScript the regular way.

96
00:06:21.150 --> 00:06:26.378
So here, I'll say transition all,
one second ease-out,

97
00:06:26.378 --> 00:06:32.850
I'm gonna do apply a filter of a blur for
two pixels, and opacity of O.4.

98
00:06:32.850 --> 00:06:38.347
And we're still saying,
we're toggling that is showing,

99
00:06:38.347 --> 00:06:42.993
and we're adding this bk
class in this blur class.

100
00:06:42.993 --> 00:06:47.064
So now, if we trigger the modal,
you can see the background,

101
00:06:47.064 --> 00:06:48.799
fade out of view, right?

102
00:06:48.799 --> 00:06:53.053
We don't want necessarily the background
to be set in such sharp focus,

103
00:06:53.053 --> 00:06:55.298
when we're working with this modal.

104
00:06:55.298 --> 00:06:58.719
So that makes this modal just
a little bit nicer to work with,

105
00:06:58.719 --> 00:07:00.540
it's a little bit kinda of a UI.

