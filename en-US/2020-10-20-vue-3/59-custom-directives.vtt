WEBVTT

1
00:00:00.120 --> 00:00:03.440
Let's go over custom
directives really quickly.

2
00:00:03.440 --> 00:00:04.500
They are really awesome.

3
00:00:04.500 --> 00:00:08.490
I mean, if you remember all
of the interesting, fun

4
00:00:08.490 --> 00:00:12.970
things that we could do with directives
really quickly and declaratively.

5
00:00:12.970 --> 00:00:15.839
You might run into
a time when you're like,

6
00:00:15.839 --> 00:00:18.719
I want to do this one
thing pretty commonly.

7
00:00:18.719 --> 00:00:24.770
Or I want to plug into this piece of HTML
often, but there isn't a directive for it.

8
00:00:24.770 --> 00:00:28.190
Well, you can make your own,
and that's so cool.

9
00:00:28.190 --> 00:00:30.770
So, if I'm using this pinned example,

10
00:00:30.770 --> 00:00:35.000
I'll say v-pin,
I will now be pinned onto the page.

11
00:00:35.000 --> 00:00:36.680
I have my app.

12
00:00:36.680 --> 00:00:39.300
And then I say,
remember how we said app.component?

13
00:00:39.300 --> 00:00:42.230
We will say app.directive,
we will call it pin.

14
00:00:42.230 --> 00:00:46.610
It will always start with a v dash,
and whatever the name is,

15
00:00:46.610 --> 00:00:48.990
just to be consistent with
all of the other directives.

16
00:00:48.990 --> 00:00:51.110
So it will be v-pin.

17
00:00:51.110 --> 00:00:54.210
And we say mounted,
we pass in the el and the binding.

18
00:00:54.210 --> 00:00:57.960
And I can say, el.style.position.fixed.

19
00:00:57.960 --> 00:01:00.420
So basically all this is doing

20
00:01:00.420 --> 00:01:05.010
Is adding a style of position fixed to
whatever the element it's resting on.

21
00:01:06.320 --> 00:01:08.590
That's cool, but it doesn't do much right?

22
00:01:08.590 --> 00:01:11.220
I might as well have
just written a style for

23
00:01:11.220 --> 00:01:15.200
that in a global stylesheet, it doesn't
necessarily need to be a directive.

24
00:01:15.200 --> 00:01:17.260
So let's take it a step further.

25
00:01:17.260 --> 00:01:20.870
And in order to take it a step further,
let's talk through these directives little

26
00:01:20.870 --> 00:01:23.890
bit at a time, so
you understand what these arguments are.

27
00:01:23.890 --> 00:01:27.440
So the example like you just saw
will instantiate a directive but

28
00:01:27.440 --> 00:01:29.130
doesn't accept any arguments.

29
00:01:29.130 --> 00:01:32.990
So without passing a value, it's pretty
brittle, it's not very flexible.

30
00:01:32.990 --> 00:01:36.340
But you could still hang some piece of
functionality off of the DOM element.

31
00:01:37.410 --> 00:01:40.520
Here's one step further,
v-example="value".

32
00:01:40.520 --> 00:01:43.500
Remember, v model and
we're connecting to something.

33
00:01:43.500 --> 00:01:45.450
This will pass a value into the directive,
and

34
00:01:45.450 --> 00:01:48.100
that directive figures out what
to do based off of that value.

35
00:01:49.108 --> 00:01:53.750
So div v-if example, and
then that's evaluating to true or

36
00:01:53.750 --> 00:01:55.270
false or something like that.

37
00:01:55.270 --> 00:01:56.825
So that was how that one was made.

38
00:01:58.365 --> 00:02:02.470
v-example is string,
note the font's a little strange,

39
00:02:02.470 --> 00:02:05.250
but you can see that there's
a string passed into that string.

40
00:02:05.250 --> 00:02:10.492
This will let you use a string as an
expression, like we saw with v-html, where

41
00:02:10.492 --> 00:02:15.674
we could pass in a link or strong tags,
or something of that nature to v-html.

42
00:02:17.599 --> 00:02:20.576
V-example:arg="value".

43
00:02:20.576 --> 00:02:25.768
This is like the v-bind or
v-on that we saw before where

44
00:02:25.768 --> 00:02:31.010
we have v-example, and
then we add a colon and value.

45
00:02:31.010 --> 00:02:33.740
This allows us to pass in
an argument to the directive.

46
00:02:33.740 --> 00:02:37.870
In the example below we're
binding to a class, and

47
00:02:37.870 --> 00:02:40.650
we'd style it with an object
stored separately.

48
00:02:40.650 --> 00:02:45.050
So we're saying v-bind, and
I'm saying class or I could say style.

49
00:02:45.050 --> 00:02:48.440
So I'm passing this piece in,
that's an argument.

50
00:02:48.440 --> 00:02:51.930
I could say class, style,
whatever it is, and some class object.

51
00:02:54.315 --> 00:02:59.770
v-example:arg.modifier.value, this
allows us to use a modifier.

52
00:02:59.770 --> 00:03:04.740
The example below allows us to call
preventDefault() on the click event.

53
00:03:06.660 --> 00:03:11.870
So, what's nice about Vue 3 is previously,
when we were working

54
00:03:11.870 --> 00:03:16.074
with custom directives, they had all of
their own life cycle methods and hooks.

55
00:03:16.074 --> 00:03:21.138
In Vue 3, we just change them to be the
same as the component life cycle methods,

56
00:03:21.138 --> 00:03:22.113
which is nice.

57
00:03:22.113 --> 00:03:25.767
Because now you don't have to learn
a whole other thing in order to work with

58
00:03:25.767 --> 00:03:26.470
directives.

59
00:03:26.470 --> 00:03:30.100
They use beforeMount, mounted,
beforeUpdate, updated,

60
00:03:30.100 --> 00:03:32.320
beforeUnmount, and unmounted.

61
00:03:32.320 --> 00:03:36.310
This makes it much more simple to
understand what's happening when we're

62
00:03:36.310 --> 00:03:39.290
mounting and
unmounting elements into the DOM.

63
00:03:39.290 --> 00:03:42.190
So v-pin, this was our first example.

64
00:03:42.190 --> 00:03:45.960
It's got that el.style.position.

65
00:03:45.960 --> 00:03:47.360
As we said, not very good.

66
00:03:47.360 --> 00:03:50.676
Our next one is v-pin 70.

67
00:03:50.676 --> 00:03:54.555
So I'm gonna say pin me 70
pixels from the top of the page.

68
00:03:54.555 --> 00:04:00.830
So I'm passing in mounted,
because I'm grabbing that el.

69
00:04:00.830 --> 00:04:06.080
I'm saying el and binding,
I'm saying the position is fixed, and

70
00:04:06.080 --> 00:04:11.060
the top equals binding.value + pixels.

71
00:04:11.060 --> 00:04:12.320
So that's a little bit better.

72
00:04:12.320 --> 00:04:15.330
If we look at this,
we're scrolling down the page.

73
00:04:15.330 --> 00:04:18.700
So what it's doing is,
it's styling that element.

74
00:04:18.700 --> 00:04:20.580
It's making its position fixed.

75
00:04:20.580 --> 00:04:24.810
And whatever we pass in here,
it will add pixels at the end and

76
00:04:24.810 --> 00:04:26.230
create that top, right?

77
00:04:26.230 --> 00:04:32.030
So now we're able to pin it and
able to do that a little bit better.

78
00:04:32.030 --> 00:04:33.920
Now we can pass an argument.

79
00:04:33.920 --> 00:04:38.020
So let's say we wanted to pin it, but we
might want to pass in multiple directions.

80
00:04:38.020 --> 00:04:42.300
So we might want to say top and
left and up and down or whatever.

81
00:04:42.300 --> 00:04:46.580
So I could have wrote left here, but
I'm going to show you one step further.

82
00:04:46.580 --> 00:04:50.370
Let's say direction was
something that's dynamic too.

83
00:04:50.370 --> 00:04:52.990
So, inside the Vue app, what we could do,

84
00:04:52.990 --> 00:04:59.140
is we could pass in that direction and
that 200 pixels.

85
00:04:59.140 --> 00:05:05.210
So now I can say,
all right, position fixed.

86
00:05:05.210 --> 00:05:09.960
If nothing is declared, just make it top,
but if something is declared,

87
00:05:09.960 --> 00:05:13.810
make it whatever direction we have,
and then the binding.value.

88
00:05:13.810 --> 00:05:19.780
So if we look at this pin, stick me 200
pixel pixels from the right of the page.

89
00:05:19.780 --> 00:05:26.350
And if we look in the JavaScript here,
you can see the direction is right.

90
00:05:26.350 --> 00:05:29.920
I could also say direction is top here.

91
00:05:29.920 --> 00:05:35.280
And now it will stick from the top of the
page instead of to the right of the page.

92
00:05:35.280 --> 00:05:39.740
So that makes it able to be
dynamic in multiple directions.

93
00:05:39.740 --> 00:05:43.310
I can now pass it in and stick it 200,

94
00:05:43.310 --> 00:05:46.890
300 wherever and
also change the direction, super cool.

95
00:05:49.470 --> 00:05:52.860
We could also make it
really dynamic in binding.

96
00:05:52.860 --> 00:05:56.160
I could say the direction,
I could say the pin padding, and

97
00:05:56.160 --> 00:05:59.620
I could say both the mounted and updated.

98
00:05:59.620 --> 00:06:02.870
And why I'm saying both mounted and
updated is

99
00:06:02.870 --> 00:06:07.590
the mounted hook is only firing right when
that thing is first coming onto the page.

100
00:06:07.590 --> 00:06:11.070
But now I'm saying do it
all the time [LAUGH].

101
00:06:11.070 --> 00:06:16.750
Go and grab it anytime something is
updated, go and update this as well.

102
00:06:16.750 --> 00:06:20.230
So this allows me to make
really dynamic arguments.

103
00:06:20.230 --> 00:06:24.040
And you can make all sorts of Vue
directives that do all sorts of things.

104
00:06:24.040 --> 00:06:27.180
So let's do something really fun.

105
00:06:27.180 --> 00:06:30.050
We're going to hook into a scroll event.

106
00:06:30.050 --> 00:06:32.650
We can use libraries like ScrollTrigger.

107
00:06:32.650 --> 00:06:37.260
There's a really great library from
GreenSock that handles scroll events, and

108
00:06:37.260 --> 00:06:37.980
things like that.

109
00:06:37.980 --> 00:06:41.110
But maybe we should just make one
with a directive that's a scroll.

110
00:06:41.110 --> 00:06:44.170
So we're binding to the event
listener of scroll, and

111
00:06:44.170 --> 00:06:49.250
then we're able to say like, okay,
if the scroll top is at this point,

112
00:06:49.250 --> 00:06:52.390
then fire this animation or
do something else.

113
00:06:52.390 --> 00:06:56.400
So we can create a directive that
allows us to hook into scroll.

114
00:06:56.400 --> 00:07:01.820
So we have this v-scroll handleScroll,
that method has that animation logic.

115
00:07:01.820 --> 00:07:04.500
And now when I scroll, that comes up.

116
00:07:04.500 --> 00:07:06.188
And I didn't have to load it.

117
00:07:06.188 --> 00:07:10.120
I mean, I'm using GreenSock, but I'm not
loading any plugins or any extra stuff.

118
00:07:10.120 --> 00:07:14.120
I could have used Waypoints and all these
other libraries, but I can really just

119
00:07:14.120 --> 00:07:20.040
create as much as I want
with that directive.

120
00:07:20.040 --> 00:07:24.654
So I'm using this to create this data
visualization that does these kind of

121
00:07:24.654 --> 00:07:29.280
scrolly telling things with D3 where
we can tell a story about fireballs.

122
00:07:29.280 --> 00:07:31.890
And I don't know much about fireballs,
so right now it's lorem ipsum.

123
00:07:31.890 --> 00:07:35.910
But [LAUGH] eventually this will have
real data and I will open source it.

