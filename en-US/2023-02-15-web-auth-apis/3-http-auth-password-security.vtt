WEBVTT

1
00:00:00.140 --> 00:00:05.162
So today, we will be focusing on creating
our own custom authentication system,

2
00:00:05.162 --> 00:00:08.240
and we will be using
an identity provider as well.

3
00:00:08.240 --> 00:00:13.990
So we will connecting our system
from an identity provider, okay?

4
00:00:13.990 --> 00:00:16.060
So we will see how that works also.

5
00:00:18.130 --> 00:00:19.866
So authentication on the web,

6
00:00:19.866 --> 00:00:24.490
let's start talking about the current
state before actually writing some code.

7
00:00:25.740 --> 00:00:29.155
So security risk,
this is not a security workshop, okay?

8
00:00:29.155 --> 00:00:32.499
There are a lot of things
to talk about security, but

9
00:00:32.499 --> 00:00:37.840
let's go over the basics just to
understand why we need to do some things.

10
00:00:37.840 --> 00:00:40.393
So we have man-in-the-middle attacks.

11
00:00:40.393 --> 00:00:44.134
That's actually an attack that
someone that is not the client or

12
00:00:44.134 --> 00:00:47.460
the server can attack typically
through the network, or

13
00:00:47.460 --> 00:00:51.130
it can be something else, but
typically through a network.

14
00:00:51.130 --> 00:00:55.962
So it's not the server, no one is hacking
the server, no one is hacking the user,

15
00:00:55.962 --> 00:00:58.285
someone is hacking the middle, okay?

16
00:00:58.285 --> 00:01:00.670
That's kind of the idea of this attack.

17
00:01:00.670 --> 00:01:05.895
Keyloggers, meaning the user is
typing a password in a keyboard,

18
00:01:05.895 --> 00:01:12.353
it can be a physical keyboard or it can be
a keyboard that you install on your phone.

19
00:01:12.353 --> 00:01:15.229
So when you install a custom keyboard,

20
00:01:15.229 --> 00:01:19.849
if you install a keyboard that's
kind of a phishing keyboard,

21
00:01:19.849 --> 00:01:25.079
you download it from an untrusted
source because someone told you it's

22
00:01:25.079 --> 00:01:30.242
the best keyboard in the world that
is only for special people, okay?

23
00:01:30.242 --> 00:01:34.311
And you go on download by an APK, an
Android package, not from the Play Store,

24
00:01:34.311 --> 00:01:35.246
from somewhere.

25
00:01:35.246 --> 00:01:41.393
Well, that keyboard will actually be
listening to your passwords, for example.

26
00:01:41.393 --> 00:01:47.130
So another security risk is
easy to guess password, okay?

27
00:01:47.130 --> 00:01:51.971
So, 80% of the data breaches
right now are happening

28
00:01:51.971 --> 00:01:57.224
because of easy to guess passwords,
1, 2, 3, 4, 5,

29
00:01:57.224 --> 00:02:03.325
okay, and the name of my dog,
the name of my mom, and so on.

30
00:02:03.325 --> 00:02:08.178
That's why, okay, there are a lot
of websites asking us with many

31
00:02:08.178 --> 00:02:12.078
rules to increase the security
of our passwords, and

32
00:02:12.078 --> 00:02:16.380
that typically annoys us a lot as users,
okay?

33
00:02:16.380 --> 00:02:22.031
So web servers and
databases attacks, okay, every day,

34
00:02:22.031 --> 00:02:27.004
we are seeing news in
the media about this happens.

35
00:02:27.004 --> 00:02:30.734
This is happening actually in
many companies, small companies,

36
00:02:30.734 --> 00:02:35.130
large companies, governments,
where their servers are attacked somehow,

37
00:02:35.130 --> 00:02:37.810
it doesn't matter how,
and they get the data.

38
00:02:38.830 --> 00:02:41.650
And that data may involve
your credentials.

39
00:02:43.020 --> 00:02:47.603
Phishing, social engineering attacks, in
this case, they're attacking the user and

40
00:02:47.603 --> 00:02:49.170
not the server.

41
00:02:49.170 --> 00:02:53.565
Phishing is a website that is trying
to mimic the real website, but

42
00:02:53.565 --> 00:02:55.300
it's not a real website.

43
00:02:55.300 --> 00:02:59.250
I mean, it feels like paypal.com,
but it's not paypal.com.

44
00:02:59.250 --> 00:03:02.773
We have a typo in the URL and
the user think it's PayPal, and

45
00:03:02.773 --> 00:03:07.900
the user is entering credentials there and
they're stalling your data.

46
00:03:07.900 --> 00:03:11.580
They're stalling your credential
typically to steal your money, okay?

47
00:03:11.580 --> 00:03:16.230
And social engineering attacks is that
when they send you an email, or you

48
00:03:16.230 --> 00:03:21.330
receive a phone call, okay, and you pick
up the phone call and they somehow trick

49
00:03:21.330 --> 00:03:26.130
you into giving them your credentials,
giving them your password, okay?

50
00:03:26.130 --> 00:03:33.013
So these are security risks that are out
there, and we as full stack developers,

51
00:03:33.013 --> 00:03:37.886
we need to try to do whatever
we can to reduce these risks.

52
00:03:37.886 --> 00:03:42.836
We cannot remove the risks,
that's impossible actually, but

53
00:03:42.836 --> 00:03:46.787
we need to do everything
we can to reduce the risks.

54
00:03:46.787 --> 00:03:47.702
Make sense?

55
00:03:47.702 --> 00:03:55.129
So originally on the web, I mean I
haven't started doing websites in 1995,

56
00:03:55.129 --> 00:04:02.792
and originally we were talking about HTTP
authentication and login forms, okay?

57
00:04:02.792 --> 00:04:08.450
So we are going to analyze what happens or
where are the risks here in a second.

58
00:04:08.450 --> 00:04:12.732
Originally, I say originally,
I mean from the 90s, but

59
00:04:12.732 --> 00:04:18.180
still today, 50% of the websites
are using this technique.

60
00:04:18.180 --> 00:04:23.420
So you were in the browser,
so you are the user, okay?

61
00:04:23.420 --> 00:04:25.600
You have a secret, that's your password.

62
00:04:25.600 --> 00:04:28.250
You type your secret in a form.

63
00:04:28.250 --> 00:04:33.404
It can be an HTML form, or I mean, it's
not something that you see these days, but

64
00:04:33.404 --> 00:04:38.586
HTTP supports basic authentication,
I'm not sure if you have seen that, okay?

65
00:04:38.586 --> 00:04:42.145
I'm talking about the the era of
Internet Explorer and Netscape, but

66
00:04:42.145 --> 00:04:43.782
it is still working these days.

67
00:04:43.782 --> 00:04:48.596
So instead of you designing a form in
HTML, the browser will provide you a form

68
00:04:48.596 --> 00:04:53.270
,a native form, okay, and
you type a username and password there.

69
00:04:53.270 --> 00:04:56.490
And the username and
password goes in HTTP headers.

70
00:04:56.490 --> 00:04:58.929
They travel through HTTP
headers to the server.

71
00:04:58.929 --> 00:05:01.605
Anyways, at the end,
it's just the same thing.

72
00:05:01.605 --> 00:05:07.221
It's the web designer designing a form,
or the browser deciding a form,

73
00:05:07.221 --> 00:05:11.841
but the data actually,
that password is coming from the user

74
00:05:11.841 --> 00:05:15.826
to the browser through a keyboard,
maybe, again,

75
00:05:15.826 --> 00:05:20.831
beautiful keyboard on a phone or
a tablet or a physical keyboard.

76
00:05:20.831 --> 00:05:24.544
From the browser,
it goes to the server of our HTTP, and

77
00:05:24.544 --> 00:05:28.020
typically the server will
store that in a database.

78
00:05:28.020 --> 00:05:32.031
So that's simple to follow,
okay, I think you know that.

79
00:05:32.031 --> 00:05:37.210
And typically, it's using HTTP
as a protocol originally, okay?

80
00:05:37.210 --> 00:05:41.240
Well, what was the original
problem of the web during the 90s?

81
00:05:41.240 --> 00:05:45.378
Well, in this diagram,
we have at least two panes of failure,

82
00:05:45.378 --> 00:05:47.580
the keyboard and HTTP, why?

83
00:05:47.580 --> 00:05:50.712
Because on HTTP,
everything goes in plain text.

84
00:05:50.712 --> 00:05:55.809
So the man in the middle were
a pretty common attack, okay, there.

85
00:05:55.809 --> 00:06:00.497
I mean, just to give you a quick sample,
you go to Starbucks to a public Wi Fi,

86
00:06:00.497 --> 00:06:04.105
with some Linux knowledge,
you could get into the router,

87
00:06:04.105 --> 00:06:06.480
into the Wi Fi router from Starbucks.

88
00:06:06.480 --> 00:06:11.321
And then you can see every HTTP
request that everyone at Starbucks

89
00:06:11.321 --> 00:06:15.987
is doing right now,
including all the credentials of the login

90
00:06:15.987 --> 00:06:19.790
credentials that users
were typing on HTTP sites.

91
00:06:19.790 --> 00:06:25.120
But we know that these days,
HTTP sites are not a good idea.

92
00:06:25.120 --> 00:06:28.856
We should upgrade to HTTPS, okay?

93
00:06:28.856 --> 00:06:33.617
And with HTTPS, what happens is that there
is encryption between the browser and

94
00:06:33.617 --> 00:06:34.737
the web server, so

95
00:06:34.737 --> 00:06:38.745
the man in the middle cannot
actually see your credentials, okay?

96
00:06:38.745 --> 00:06:42.453
So we are solving that problem,
but we still have other problems.

97
00:06:42.453 --> 00:06:45.990
For example,
an attacker can get into the server.

98
00:06:45.990 --> 00:06:51.269
All the data breaches out there from large
companies, this is what happens, okay?

99
00:06:51.269 --> 00:06:55.789
So even with HTTPS, I mean,
some people say, it's HTTPS, it's secure.

100
00:06:55.789 --> 00:07:01.591
No, actually, no, in fact, today,
anyone can get an HTTPS server.

101
00:07:01.591 --> 00:07:06.680
And even if the browser says
secure in the URL bar, yeah,

102
00:07:06.680 --> 00:07:12.206
we know, that's just from
the browser to the server, okay?

103
00:07:12.206 --> 00:07:16.538
In fact, today,
I mean from 2020, I think, or

104
00:07:16.538 --> 00:07:20.673
2019, on every browser,
if you have a form,

105
00:07:20.673 --> 00:07:25.608
a login form or a registration
form with a password on HTTP.

106
00:07:25.608 --> 00:07:30.630
The browser will give the user
a red warning saying be careful,

107
00:07:30.630 --> 00:07:34.988
this site is not secure, and
sending this data can lead

108
00:07:34.988 --> 00:07:39.366
to your credentials to
appear somewhere else, okay?

109
00:07:39.366 --> 00:07:43.360
So we still have that risk.

110
00:07:43.360 --> 00:07:46.766
And also, we have the risk of the user,

111
00:07:46.766 --> 00:07:51.312
that's the user typing
the password in places where

112
00:07:51.312 --> 00:07:56.430
it's not the right place or
that's phishing, okay?

113
00:07:56.430 --> 00:07:59.183
Or it can be social engineering attacks,

114
00:07:59.183 --> 00:08:02.760
you are giving an attacker the password,
okay?

115
00:08:02.760 --> 00:08:05.588
And sometimes there are even
weird situations, for example,

116
00:08:05.588 --> 00:08:09.140
sometimes you're on an app, for
example, it can be a QR code reader.

117
00:08:09.140 --> 00:08:12.842
I mean, you went to the Play Store
on Android or on App Store on iOS,

118
00:08:12.842 --> 00:08:16.943
and you downloaded a QR code reader,
because you don't know that today,

119
00:08:16.943 --> 00:08:19.878
you don't need to,
you can use just the camera app.

120
00:08:19.878 --> 00:08:23.670
But let's say you go to the store and
download a QR code reader.

121
00:08:23.670 --> 00:08:27.682
So then you take a picture of
a QR code with your phone and

122
00:08:27.682 --> 00:08:32.567
the website is being rendered in
an inner browser using a WebView,

123
00:08:32.567 --> 00:08:37.250
not really your real browser,
the QR code browser.

124
00:08:37.250 --> 00:08:42.128
And actually, that QR code app that
is rendering your app on the website

125
00:08:42.128 --> 00:08:46.440
on top of that can read what
you're typing in the website.

126
00:08:46.440 --> 00:08:48.650
So maybe the website is the right website.

127
00:08:48.650 --> 00:08:53.830
Maybe you don't have a keylogger, but
the browser is kind of a fake browser.

128
00:08:53.830 --> 00:08:57.935
It's actually pretty simple to
develop that solution, okay?

129
00:08:57.935 --> 00:09:02.735
Of course, if someone finds that in
the Play Store, they can report that and

130
00:09:02.735 --> 00:09:06.560
the Play Store will remove that
from the store, but anyway,

131
00:09:06.560 --> 00:09:08.602
you don't know what happened.

132
00:09:08.602 --> 00:09:11.535
So sometimes the stores,

133
00:09:11.535 --> 00:09:16.745
the QA team will not actually see that,
okay?

134
00:09:16.745 --> 00:09:21.579
So that's why we need to be very careful
on where are you typing your credentials,

135
00:09:21.579 --> 00:09:22.148
okay?.

136
00:09:22.148 --> 00:09:25.956
Sometimes if it's not the browser,
be careful, because that's

137
00:09:25.956 --> 00:09:30.177
not the browser and that app can
actually see what you're typing, okay?

138
00:09:30.177 --> 00:09:35.395
So, Easy to guess passwords and

139
00:09:35.395 --> 00:09:40.904
also reusage of the same password,
even if you have a very complex password,

140
00:09:40.904 --> 00:09:45.845
but you use the same password on
every website, it's a risk, okay?

141
00:09:45.845 --> 00:09:48.160
It's a risk, why?

142
00:09:48.160 --> 00:09:51.892
Because, yeah, if that server is
hacked and it has a data breach,

143
00:09:51.892 --> 00:09:56.095
they will get that complex password that
you are using and then they try that

144
00:09:56.095 --> 00:10:00.730
password on other websites, and
you're using the same one everywhere.

145
00:10:00.730 --> 00:10:06.161
So password managers help with both
problems, because they create really

146
00:10:06.161 --> 00:10:12.020
complex passwords and different
passwords per website or per app, okay?

147
00:10:12.020 --> 00:10:15.411
But it's adding another problem,
or another point of failure.

148
00:10:15.411 --> 00:10:20.250
First, we won't remember those passwords,
so we always need the password manager.

149
00:10:20.250 --> 00:10:26.260
So then you say, okay,
I'm in Japan on vacations.

150
00:10:26.260 --> 00:10:31.275
I don't have Internet here, but my hotel
has a computer and I can log in there, and

151
00:10:31.275 --> 00:10:36.314
then I don't have the password, then I
don't have the password manager, okay?

152
00:10:36.314 --> 00:10:38.689
So you can login in the password manager,
but

153
00:10:38.689 --> 00:10:42.879
then the password manager is an entry
point of failure, because someone can get

154
00:10:42.879 --> 00:10:46.730
my password manager password
with a keylogger, so yeah.

155
00:10:46.730 --> 00:10:53.110
So, I mean, we are better than before,
but it's still not ideal, okay?

156
00:10:53.110 --> 00:10:56.260
And what happens is
the password manager is hacked.

157
00:10:56.260 --> 00:11:00.716
Well, some password manager, they have a
vault and that's encrypted on my phone or

158
00:11:00.716 --> 00:11:04.420
with a key on my phone, but
what happens then if I lost my phone?

159
00:11:04.420 --> 00:11:07.090
So there is always a problem, okay?

160
00:11:07.090 --> 00:11:09.353
And by the way,
there is no silver bullet here.

161
00:11:09.353 --> 00:11:10.951
There will be always problems,

162
00:11:10.951 --> 00:11:15.550
but we need to try to find the balance
between security and user experience.

163
00:11:15.550 --> 00:11:18.539
And right now, yeah,
we are adding more security, but

164
00:11:18.539 --> 00:11:20.644
we are lowering down user experience.

165
00:11:20.644 --> 00:11:25.691
When we are doing that, okay,
users will start doing weird things,

166
00:11:25.691 --> 00:11:31.630
such as taking a Post-it and writing down
a password in a Post-it in the office.

167
00:11:32.760 --> 00:11:34.880
You've seen that, I guess.

168
00:11:34.880 --> 00:11:39.339
I have a couple of pictures from many
places that I've seen where people were

169
00:11:39.339 --> 00:11:41.917
doing this, posting Post-it somewhere,

170
00:11:41.917 --> 00:11:47.190
a piece of paper, because, yeah,
the password is really complicated.

171
00:11:47.190 --> 00:11:53.497
I've seen people writing down all
their passwords in a paper notebook.

172
00:11:53.497 --> 00:11:58.544
At home, they have a paper with all
the passwords written down, okay?

173
00:11:58.544 --> 00:12:02.601
Because the user experience is so
bad to actually because we

174
00:12:02.601 --> 00:12:07.404
were increasing security that at the end,
it's not working, okay?

175
00:12:07.404 --> 00:12:12.075
So for example, I'm not sure if
you have seen this website, so

176
00:12:12.075 --> 00:12:15.172
I encourage you to try it if you haven't.

177
00:12:15.172 --> 00:12:18.514
It's open source, so it's from
the community, so it's safe to use,

178
00:12:18.514 --> 00:12:19.358
let's say that.

179
00:12:19.358 --> 00:12:25.102
So actually, you can put here your
email address or your phone, okay,

180
00:12:25.102 --> 00:12:30.970
and it will tell you if your email has
appeared in any data breach, okay?

181
00:12:32.740 --> 00:12:38.180
There's a good chance, actually pretty
high, that it's going to be a yes for you.

182
00:12:39.430 --> 00:12:41.080
And the same happens with passwords.

183
00:12:42.220 --> 00:12:47.011
In fact, today, if you're using Google
Chrome, or if you're using Safari for

184
00:12:47.011 --> 00:12:51.730
browsing the web, every time you log in in
a website with a password that has been

185
00:12:51.730 --> 00:12:55.160
part of a leak,
I'm not sure if you've seen that.

186
00:12:55.160 --> 00:12:58.940
You receive a message saying, hey,
this password has been used in a leak,

187
00:12:58.940 --> 00:13:03.821
maybe it's time to change the password,
Okay,

188
00:13:03.821 --> 00:13:07.859
because unless you have just
created an email five minutes ago,

189
00:13:07.859 --> 00:13:13.167
there is a good chance that your email and
maybe your credentials, because they were

190
00:13:13.167 --> 00:13:18.647
in plain text or they were hashed, I don't
know, your credentials were also leaked.

