WEBVTT

1
00:00:00.080 --> 00:00:05.154
The final thing that I have here
is just a list of quick tips and

2
00:00:05.154 --> 00:00:08.890
ideas to follow after this workshop.

3
00:00:08.890 --> 00:00:11.017
So native apps, yeah, so,

4
00:00:11.017 --> 00:00:17.052
there are ways today to connect your
login credentials being password-based or

5
00:00:17.052 --> 00:00:22.210
passwordless between the web and
the native app of the same project.

6
00:00:23.520 --> 00:00:28.488
So if that's the case for your company or
in the website you have a website and

7
00:00:28.488 --> 00:00:31.760
also native apps you can
now connect both of them.

8
00:00:33.160 --> 00:00:38.087
So for password managers, for
WebAuthn and passkeys, so

9
00:00:38.087 --> 00:00:41.520
that works for all of them, okay?

10
00:00:41.520 --> 00:00:46.189
And for that you need to handshake or make
a handshake between your web, your site,

11
00:00:46.189 --> 00:00:49.460
your domain, your origin,
and your native app.

12
00:00:49.460 --> 00:00:54.024
On iOS, on Android, or Windows,
how you do that is different, so

13
00:00:54.024 --> 00:00:55.930
go on learn that part.

14
00:00:55.930 --> 00:00:59.283
How you can associate
a website with an app,

15
00:00:59.283 --> 00:01:03.460
with a signature of the app and
then you are ready to go.

16
00:01:04.850 --> 00:01:06.914
Ideas, that you can implement or

17
00:01:06.914 --> 00:01:12.320
you should have in mind when you are doing
everything that we have done today.

18
00:01:12.320 --> 00:01:16.810
Keep use of detonation after login always,
we're not doing that right now.

19
00:01:16.810 --> 00:01:20.676
So if the user wants to get to a URL and
he needs login, and

20
00:01:20.676 --> 00:01:25.532
then you have web authentication,
a lot of processing in the middle,

21
00:01:25.532 --> 00:01:31.319
remember the original URL and return the
user to that URL after a successful login.

22
00:01:31.319 --> 00:01:35.254
Always confirm user emails
if they are real, okay?

23
00:01:35.254 --> 00:01:37.950
So wait for an email confirmation.

24
00:01:37.950 --> 00:01:41.570
Ask about autologin,
don't autologin automatically.

25
00:01:41.570 --> 00:01:45.777
Ask the user, do you want to log
in again automatically next time?

26
00:01:45.777 --> 00:01:50.117
Check privacy's legislation because
that might differ per country or

27
00:01:50.117 --> 00:01:52.770
per region, Europe is one case.

28
00:01:52.770 --> 00:01:57.838
So if you're doing this,
check what you can do and how, okay?

29
00:01:57.838 --> 00:02:00.930
Security's too important here.

30
00:02:00.930 --> 00:02:08.938
So, don't deploy things where you're not
still sure that your flows are okay,

31
00:02:08.938 --> 00:02:13.960
that your security is
as good as it can be.

32
00:02:13.960 --> 00:02:18.928
And test your login UX experience
flows to see if users actually

33
00:02:18.928 --> 00:02:23.940
understand what's the flow and
how to work with this.

34
00:02:23.940 --> 00:02:28.804
In terms of our project as homework,
okay, after today's workshop,

35
00:02:28.804 --> 00:02:32.690
I have a couple of ideas or
things that you can do.

36
00:02:32.690 --> 00:02:37.526
I have the slides here, but also you
have that in the project's website,

37
00:02:37.526 --> 00:02:42.560
if you were following along,
the last chapter, bonus, next steps.

38
00:02:42.560 --> 00:02:46.117
So here I have things recommendations
on what to do in case you wanna

39
00:02:46.117 --> 00:02:48.260
continue working on this project.

40
00:02:48.260 --> 00:02:51.741
Add all the validations that we
are missing, proper error management for

41
00:02:51.741 --> 00:02:52.650
every situation.

42
00:02:52.650 --> 00:02:56.040
We are not managing errors on
every situation right now.

43
00:02:56.040 --> 00:02:59.696
Add better database integrity
right now it's a JSON, yeah,

44
00:02:59.696 --> 00:03:01.510
we can make that better.

45
00:03:01.510 --> 00:03:06.500
Add a forget password flow, confirm email
and registration as I mentioned before.

46
00:03:06.500 --> 00:03:10.964
You can try signing with Apple if
you're willing to pay the Apple

47
00:03:10.964 --> 00:03:13.890
developer account to do that.

48
00:03:13.890 --> 00:03:19.670
You can also add an OAuth 2.0 flow with
Facebook, GitHub, or any other company.

49
00:03:19.670 --> 00:03:24.120
Try to log in with other providers
following their guidelines.

50
00:03:24.120 --> 00:03:26.190
There are code examples.

51
00:03:26.190 --> 00:03:29.490
Add a magic link, so
in this case you create the magic link.

52
00:03:29.490 --> 00:03:34.104
There are libraries to do that,
you send an email with a link and

53
00:03:34.104 --> 00:03:37.700
then you log in the user with that link.

54
00:03:37.700 --> 00:03:42.417
Implement passkeys conditional UI,
this is to make this do you

55
00:03:42.417 --> 00:03:47.320
make the browser or the login with Baskin,
something like that?

56
00:03:47.320 --> 00:03:49.190
And the simple web a fan,

57
00:03:49.190 --> 00:03:55.550
if you go to the passkey section will
help you on what to do or how to do this.

58
00:03:55.550 --> 00:04:00.529
I think it's at the bottom they
have a link here somewhere that

59
00:04:00.529 --> 00:04:04.167
says if you wanna read
about conditional UI,

60
00:04:04.167 --> 00:04:08.379
here you have everything
that you need to do, okay,

61
00:04:08.379 --> 00:04:13.920
to make your website passkey
compatible with this idea, okay?

62
00:04:13.920 --> 00:04:18.350
But this is I still have in mind that this
conditional UI is still in the works.

63
00:04:18.350 --> 00:04:23.220
I mean, it's not completely clear how
it's going to work on every browser.

64
00:04:25.020 --> 00:04:31.780
And the final suggestion here is
to add a multi-factor manager.

65
00:04:31.780 --> 00:04:38.190
So for example users could be able to
delete server-side authenticators.

66
00:04:38.190 --> 00:04:43.988
So right now I have a USB key, I have face
ID but I cannot remove them as a user.

67
00:04:43.988 --> 00:04:47.593
So I can see everything that I've
had added I can remove that and

68
00:04:47.593 --> 00:04:49.373
even name the authenticator.

69
00:04:49.373 --> 00:04:54.829
So this is my key, this is my USB key,
light blue then I have an orange one so

70
00:04:54.829 --> 00:04:59.669
I can say, this is Face ID on my iPhone,
this is Face ID on my iPad,

71
00:04:59.669 --> 00:05:02.157
so I can name my authenticators.

72
00:05:02.157 --> 00:05:07.053
And also try to add the authenticator
app support, that is for example,

73
00:05:07.053 --> 00:05:10.745
Google Authenticator,
where you receive a QR code and

74
00:05:10.745 --> 00:05:15.400
you add your website to an authenticator
that's also possible there

75
00:05:15.400 --> 00:05:19.831
are NPM libraries to help you with that,
it's not so difficult.

76
00:05:19.831 --> 00:05:24.791
And it can help you also to have
another set of validation over your

77
00:05:24.791 --> 00:05:26.243
authentication.

