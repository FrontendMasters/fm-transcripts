WEBVTT

1
00:00:00.124 --> 00:00:02.630
Now it's time to start
working in our project.

2
00:00:02.630 --> 00:00:05.260
I'm trying not to take anything for
granted.

3
00:00:05.260 --> 00:00:09.508
I know that many of you may have already
seen the basic flow and maybe you have

4
00:00:09.508 --> 00:00:14.026
experience doing so, but there may be a
lot of people out there that are coming to

5
00:00:14.026 --> 00:00:18.450
the web for the first time that
they haven't created a login form.

6
00:00:18.450 --> 00:00:20.828
So a login form is actually pretty simple.

7
00:00:20.828 --> 00:00:24.230
I'm not going to teach you how
to create the form in HTML, but

8
00:00:24.230 --> 00:00:26.721
there are a couple of
things to have in mind.

9
00:00:26.721 --> 00:00:32.032
First, the flow typically
involves at least three steps,

10
00:00:32.032 --> 00:00:37.025
the registration form, so
a form to register the user,

11
00:00:37.025 --> 00:00:42.017
the login form, and
at least recover password, okay,

12
00:00:42.017 --> 00:00:45.620
recover or reset the password.

13
00:00:45.620 --> 00:00:46.760
And the verb,

14
00:00:46.760 --> 00:00:52.610
it depends on if you're storing your
passwords in plain text or not.

15
00:00:52.610 --> 00:00:58.310
In fact, I mean, during the 90s, everyone
was storing the passwords in plain text.

16
00:00:58.310 --> 00:01:00.336
It was actually the common situation.

17
00:01:00.336 --> 00:01:04.289
So you typically have a website
that recovers passwords link,

18
00:01:04.289 --> 00:01:08.839
you enter your email address and
you receive the password on your email,

19
00:01:08.839 --> 00:01:13.660
because security wasn't actually
a big problem at that time.

20
00:01:13.660 --> 00:01:16.880
So we were not so
many users on the web probably.

21
00:01:16.880 --> 00:01:20.609
And now if you are hashing in your server,
the password,

22
00:01:20.609 --> 00:01:24.630
then you don't have the password
just sent by email.

23
00:01:24.630 --> 00:01:28.128
So the only thing that you have
is a way to reset your password.

24
00:01:28.128 --> 00:01:31.930
So you know the bit as a user, you get the
link on your email, you click on the link,

25
00:01:31.930 --> 00:01:33.930
and then you create a new password, okay?

26
00:01:33.930 --> 00:01:35.270
So that's the flow.

27
00:01:35.270 --> 00:01:39.825
So we will focus today in
the registration and login section,

28
00:01:39.825 --> 00:01:45.443
because the other one needs email, okay,
and we have only one day to cover.

29
00:01:45.443 --> 00:01:50.574
So we will leave that as homework,
it's actually not difficult to create,

30
00:01:50.574 --> 00:01:53.395
all the recover and rest of the password.

31
00:01:53.395 --> 00:01:57.195
So we will make the registration flow and
the login flow.

32
00:01:57.195 --> 00:01:59.290
And also, big warning, big warning,

33
00:01:59.290 --> 00:02:03.810
everything that we are going to make today
is, let's say, for learning purposes.

34
00:02:03.810 --> 00:02:09.129
So we are trying to learn best
practices and how to deal with these

35
00:02:09.129 --> 00:02:14.940
new flows of authentication,
how to improve user experience.

36
00:02:14.940 --> 00:02:19.191
The code that we are creating might
not be ready for production, okay?

37
00:02:19.191 --> 00:02:24.443
So there are still maybe a lot of things
and validations to do that we are not

38
00:02:24.443 --> 00:02:29.526
going to do today, because maybe a lot
of them are really boring in terms

39
00:02:29.526 --> 00:02:34.549
of the code that we need to write,
simple but boring and large as well.

40
00:02:34.549 --> 00:02:38.519
And I want us to focus on
the important part today, okay?

41
00:02:38.519 --> 00:02:43.940
So that mean there will be a lot
of to-dos after today's workshop

42
00:02:43.940 --> 00:02:49.374
if you wanna go to production with
a full authentication system.

43
00:02:49.374 --> 00:02:52.920
And regarding the form itself,
as I mentioned before, I mean,

44
00:02:52.920 --> 00:02:57.321
I understand that you know HTML enough
to create the form, okay, the form tag,

45
00:02:57.321 --> 00:03:00.880
the input tag, so
that's not what we're going to see.

46
00:03:00.880 --> 00:03:05.897
But today in modern browsers,
there are some things that we need to

47
00:03:05.897 --> 00:03:10.914
do to increase, to enhance
the experience of logging in website or

48
00:03:10.914 --> 00:03:16.910
registering accounts, and
that involves also Password Managers.

49
00:03:16.910 --> 00:03:21.544
So it can be the password
manager from your browser, Edge,

50
00:03:21.544 --> 00:03:26.918
Chrome, Safari, or you might have
a plugin, last pass, one pass,

51
00:03:26.918 --> 00:03:33.061
one last pathway and another plugins or
other third party Password Managers.

52
00:03:33.061 --> 00:03:38.549
So because they will appear in your
form somehow, we need to do some things

53
00:03:38.549 --> 00:03:43.779
to increase the opportunity to have
a better user experience, okay?

54
00:03:43.779 --> 00:03:49.360
So first, things about accessibility,
we need to connect labels for

55
00:03:49.360 --> 00:03:54.030
each element, and
I will do that in a second, okay?

56
00:03:54.030 --> 00:03:57.470
We shouldn't be using
placeholder as labels.

57
00:03:57.470 --> 00:04:02.220
I still find a lot of websites doing this.

58
00:04:02.220 --> 00:04:04.297
So a label is just the label tag.

59
00:04:04.297 --> 00:04:07.123
I'm talking about
the label element in HTML.

60
00:04:07.123 --> 00:04:11.244
Some people say, I don't need the labor,,
I can just write in the placeholder.

61
00:04:11.244 --> 00:04:13.488
You know what a placeholder is?

62
00:04:13.488 --> 00:04:17.815
It's when you have a text appear
grayed out within the text field,

63
00:04:17.815 --> 00:04:20.683
why you don't have content inside, okay?

64
00:04:20.683 --> 00:04:22.455
We will see that in a second.

65
00:04:22.455 --> 00:04:27.856
We should use HTML semantics,
so what's known as HTML5,

66
00:04:27.856 --> 00:04:33.798
so, for example, the require attribute,
the type attribute,

67
00:04:33.798 --> 00:04:39.431
the pattern attribute to define
semantics for that element.

68
00:04:39.431 --> 00:04:43.425
If you're using single page applications,
I mean if it's React and Angular

69
00:04:43.425 --> 00:04:48.050
application, a Vue.js application, just
vanilla JS, but single page application.

70
00:04:49.640 --> 00:04:53.814
The names of the form for
registration and login, and

71
00:04:53.814 --> 00:05:00.146
not just the name of the form, also the
name of each input type must be different.

72
00:05:00.146 --> 00:05:04.526
I know at this point you don't
understand why or what's going on here,

73
00:05:04.526 --> 00:05:08.979
but because it's a single page
application, Password Managers don't

74
00:05:08.979 --> 00:05:13.006
know where you are, if it's a login page,
a registration page.

75
00:05:13.006 --> 00:05:16.587
So if they don't have different names,
so if you reuse the same form,

76
00:05:16.587 --> 00:05:18.360
it's not gonna work.

77
00:05:18.360 --> 00:05:23.509
So another best practice that we typically
see these days on forms is to let

78
00:05:23.509 --> 00:05:29.180
the user make the password visible with
a little eye icon or make it visible.

79
00:05:29.180 --> 00:05:32.969
Mostly this is for mobile devices.

80
00:05:32.969 --> 00:05:38.147
So you know this deal that if
you use an input type password,

81
00:05:38.147 --> 00:05:43.328
while you are typing in that
input textbox, you see stars or

82
00:05:43.328 --> 00:05:47.182
circles, that was optimized for desktop.

83
00:05:47.182 --> 00:05:50.477
If anyone is walking around you or
behind you,

84
00:05:50.477 --> 00:05:54.794
the idea is that they cannot
see what you are typing, right?

85
00:05:54.794 --> 00:06:02.860
But with a mobile phone, we use a mobile
phone, right, it really close to our head.

86
00:06:02.860 --> 00:06:04.921
It's actually much difficult for

87
00:06:04.921 --> 00:06:09.950
someone being behind you seeing what
you're typing on your phone's screen.

88
00:06:09.950 --> 00:06:13.340
Not impossible, but not so simple, okay?

89
00:06:13.340 --> 00:06:16.231
But in the computer,
maybe you have a large monitor, yeah,

90
00:06:16.231 --> 00:06:18.282
anyone can see what you are typing, okay?

91
00:06:18.282 --> 00:06:23.020
So that's why it's not a big
deal if on a mobile phone,

92
00:06:23.020 --> 00:06:25.912
the password is visible, okay?

93
00:06:25.912 --> 00:06:29.575
I'm pretty sure that you have found
yourself counting the characters in

94
00:06:29.575 --> 00:06:33.560
a password field, like, okay,
how many characters did I type?

95
00:06:33.560 --> 00:06:36.085
Or you'll delete everything and
you type again,

96
00:06:36.085 --> 00:06:39.520
because you are not sure what you typed,
mostly on mobile devices.

97
00:06:41.240 --> 00:06:45.173
Also, we should help Password Managers
with auto-complete HTML attributes.

98
00:06:45.173 --> 00:06:48.809
I'm not sure if you have seen this before,
we will do that in a minute, okay?

99
00:06:48.809 --> 00:06:54.353
Because password managers,
they try to guess based

100
00:06:54.353 --> 00:06:59.393
on the name of the text
box what should be there,

101
00:06:59.393 --> 00:07:03.551
like if it's the name, the email, but

102
00:07:03.551 --> 00:07:10.229
what happens if you are writing
your code in Thai or in Italian?

103
00:07:10.229 --> 00:07:12.990
Will Password Manager get the names,

104
00:07:12.990 --> 00:07:17.980
will know which one is the email,
which one is the username?

105
00:07:17.980 --> 00:07:18.657
It's not so simple.

106
00:07:18.657 --> 00:07:26.022
So now we have in HTML some attributes
under the autocomplete attribute that will

107
00:07:26.022 --> 00:07:32.319
actually let us define correctly
what are we expecting on that text?

108
00:07:32.319 --> 00:07:37.296
Also when you have instructions, for
example, you have a text saying,

109
00:07:37.296 --> 00:07:41.949
hey, your password must contain
one letter, one capital letter,

110
00:07:41.949 --> 00:07:48.150
one number or two numbers, well,
that instruction is typically a paragraph.

111
00:07:48.150 --> 00:07:52.110
It's detached from your input type.

112
00:07:52.110 --> 00:07:56.425
Well, for accessibility,
you can connect both elements,

113
00:07:56.425 --> 00:08:00.750
the input with the instructions
with the area described by.

114
00:08:01.820 --> 00:08:06.635
In that case, you will find the ID
of the paragraph that will describe,

115
00:08:06.635 --> 00:08:10.023
for example, the rules for
the password, okay?

116
00:08:10.023 --> 00:08:14.280
So these are things that you should
implement in your HTML forms.

117
00:08:14.280 --> 00:08:18.880
And on single page applications,
this is also interesting.

118
00:08:18.880 --> 00:08:22.870
We should use the submit form event and
not the onclick.

119
00:08:22.870 --> 00:08:26.992
So typically, you have a form and
a login button.

120
00:08:26.992 --> 00:08:32.799
So if you're using React or
Vue.js and you use the submit,

121
00:08:32.799 --> 00:08:38.489
sorry, if you use the click
event handler of the button and

122
00:08:38.489 --> 00:08:42.554
not the submit event handler of the form,

123
00:08:42.554 --> 00:08:47.227
you may have problems
with password managers.

124
00:08:47.227 --> 00:08:53.236
Because they may not know that
actually you submitted the form,

125
00:08:53.236 --> 00:09:00.702
because there is no real submission as
we did with multi-pages before, okay?

126
00:09:00.702 --> 00:09:01.202
Make sense?

127
00:09:02.610 --> 00:09:04.863
So we will see this in action in a second.

128
00:09:04.863 --> 00:09:08.867
And also, we should do a pushState.

129
00:09:08.867 --> 00:09:09.830
What is a pushState?

130
00:09:09.830 --> 00:09:13.170
Change the route in case you're
using a client side routing system.

131
00:09:14.180 --> 00:09:17.807
So after login,
after subscribing the user,

132
00:09:17.807 --> 00:09:21.533
you should change the route or
call pushState.

133
00:09:21.533 --> 00:09:23.775
If you don't do that, okay,

134
00:09:23.775 --> 00:09:28.890
a lot of password managers will not
get that you have just logged in or

135
00:09:28.890 --> 00:09:33.760
created account, so
they won't save the credentials.

136
00:09:33.760 --> 00:09:36.060
It happens to me sometimes
that on some websites,

137
00:09:36.060 --> 00:09:38.700
maybe the Password Manager
is suggesting me a password.

138
00:09:38.700 --> 00:09:43.053
So I see the password suggested
by the Password Manager,

139
00:09:43.053 --> 00:09:47.144
then I register the account and
the password is gone.

140
00:09:47.144 --> 00:09:52.114
I mean, it's not happening on many
websites, but on some websites.

141
00:09:52.114 --> 00:09:56.630
So the password manager didn't
save that password, why?

142
00:09:56.630 --> 00:10:01.569
Because the password manager didn't
realize that the operation happened.

143
00:10:01.569 --> 00:10:06.407
So it didn't save the value, so next time
you get in, you don't have the password,

144
00:10:06.407 --> 00:10:10.050
so you need to reset the password,
you need to reset it, okay?

145
00:10:10.050 --> 00:10:15.213
So for example, for the autocomplete
attribute, the values that we

146
00:10:15.213 --> 00:10:21.367
are going to use for the form
are "new-password" and "current-password".

147
00:10:21.367 --> 00:10:24.140
To use the right one is important.

148
00:10:24.140 --> 00:10:27.530
You use "new-password" on
the registration form.

149
00:10:27.530 --> 00:10:31.653
So you're expressing,
in this case, to the browser or

150
00:10:31.653 --> 00:10:36.741
the Password Manager that here goes
a new password, not the password

151
00:10:36.741 --> 00:10:43.020
that the user has stored in the current
browser or for the current website.

152
00:10:43.020 --> 00:10:46.600
Current password is for the login form.

153
00:10:46.600 --> 00:10:52.317
It means, hey, here, we should put the
password that was already saved before,

154
00:10:54.267 --> 00:10:57.947
So I've seen some forms
that as autocomplete,

155
00:10:57.947 --> 00:11:01.077
they use password, and that's wrong.

156
00:11:01.077 --> 00:11:05.262
You need to pick if it's a new password or
a current password.

157
00:11:05.262 --> 00:11:09.558
And then for your name,
you use autocomplete-"name".

158
00:11:09.558 --> 00:11:14.486
Autocomplete has a large list of options,
like address, you can first name,

159
00:11:14.486 --> 00:11:18.903
given name and family name, okay,
but just for the simple part name.

160
00:11:18.903 --> 00:11:22.110
And for your email, you can use email.

161
00:11:22.110 --> 00:11:25.683
But if the email is going to
be the ID of the user, so

162
00:11:25.683 --> 00:11:30.113
your username, as it's happening on many,
many websites,

163
00:11:30.113 --> 00:11:34.320
then you shouldn't be
using autocomplete email.

164
00:11:34.320 --> 00:11:36.140
You should use autocomplete-"username",
okay?

165
00:11:38.390 --> 00:11:42.969
That's how the Password Manager will
know that even if it's an email,

166
00:11:42.969 --> 00:11:46.800
the username, okay,
it will be part of your credentials.

167
00:11:46.800 --> 00:11:51.198
So for example, in a registration form,
credentials will be the field with

168
00:11:51.198 --> 00:11:56.162
autocomplete-"username' and the field
with autocomplete-"new password".

169
00:11:56.162 --> 00:11:59.550
And in your login form,
it's going to be the same username but

170
00:11:59.550 --> 00:12:00.930
with current password.

171
00:12:00.930 --> 00:12:02.435
Those are the pairs.

