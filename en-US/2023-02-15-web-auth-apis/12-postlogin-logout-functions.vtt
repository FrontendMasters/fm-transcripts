WEBVTT

1
00:00:00.000 --> 00:00:03.164
So let's update the UI then.

2
00:00:03.164 --> 00:00:07.038
With that, we will finish this
first step of our project,

3
00:00:07.038 --> 00:00:11.877
the simplest one, okay, that is just
having the normal standard flow.

4
00:00:11.877 --> 00:00:16.103
So in terms of security and
steps that we are missing, and

5
00:00:16.103 --> 00:00:21.386
we are not actually doing right now
because we have limited time today,

6
00:00:21.386 --> 00:00:26.165
is confirming user's email,
that's also important, okay?

7
00:00:26.165 --> 00:00:30.984
So you shouldn't activate this account
if the user is not confirming that

8
00:00:30.984 --> 00:00:34.884
the email actually exists and
the user is the owner, okay?

9
00:00:34.884 --> 00:00:37.966
So there is that missing step
that has nothing to do with

10
00:00:37.966 --> 00:00:39.651
the authentication, okay?

11
00:00:39.651 --> 00:00:45.033
It has more to do with not actually
using other people's email,

12
00:00:45.033 --> 00:00:48.722
not impersonating other people's email,

13
00:00:48.722 --> 00:00:53.321
and also to confirm that at
least the email does exist.

14
00:00:53.321 --> 00:00:58.936
I don't know about you, but
if you are in a public Wi-Fi,

15
00:00:58.936 --> 00:01:02.728
I travel a lot, so in a lot of airports.

16
00:01:02.728 --> 00:01:06.870
So have you try airport
Wi-Fi on another countries?

17
00:01:06.870 --> 00:01:10.544
Typically, they force you
to register with an email.

18
00:01:10.544 --> 00:01:15.808
I typically put whatever email comes
through my mind at that moment.

19
00:01:15.808 --> 00:01:18.253
And most of the time, you'll get in.

20
00:01:18.253 --> 00:01:23.049
So that database is full of fake emails,
okay?

21
00:01:23.049 --> 00:01:28.792
And the problem is that maybe you're using
an email of someone that has that address,

22
00:01:28.792 --> 00:01:32.797
and you will receive spam from
that airport, which is bad.

23
00:01:32.797 --> 00:01:36.753
And so
you should confirm users' email addresses.

24
00:01:36.753 --> 00:01:42.638
Okay, so what we need to do is something
with the response, not just console.log.

25
00:01:42.638 --> 00:01:47.950
And actually, after registering and
after logging in,

26
00:01:47.950 --> 00:01:52.054
if it's okay,
we need to do the same thing.

27
00:01:52.054 --> 00:01:57.650
So we need to probably set up our
client side account, our flag saying,

28
00:01:57.650 --> 00:02:02.239
hey, we are logged in, and
we need to move to another URL.

29
00:02:02.239 --> 00:02:05.661
So that's why what we are going
to do is we are going to call,

30
00:02:05.661 --> 00:02:10.666
we're going to create a function, another
function that we can call that postLogin.

31
00:02:10.666 --> 00:02:12.917
That we will call from both situations,

32
00:02:12.917 --> 00:02:15.968
because it doesn't matter
if you have just register.

33
00:02:15.968 --> 00:02:19.015
After registration, typically,
you are logged in as well.

34
00:02:19.015 --> 00:02:22.928
So after registration or
after login, we are doing postLogin.

35
00:02:22.928 --> 00:02:28.015
And we are going to receive
here maybe the response and

36
00:02:28.015 --> 00:02:31.529
maybe the user object with the data.

37
00:02:32.797 --> 00:02:33.941
I'm missing the arrow function.

38
00:02:33.941 --> 00:02:40.001
So then both after registering,
I'm going to do postLogin,

39
00:02:40.001 --> 00:02:46.769
I'm going to past their response,
and then we need to pass the user.

40
00:02:46.769 --> 00:02:53.748
I will see if I should pass this user or
not, I will tell you in a minute.

41
00:02:53.748 --> 00:02:59.237
And the same here Auth.postLogin response.

42
00:02:59.237 --> 00:03:02.251
And here we have credentials,
we don't have a user.

43
00:03:02.251 --> 00:03:07.318
So I'm not sure if you remember that
when we are getting the log in,

44
00:03:07.318 --> 00:03:12.224
we are receiving the name and
the email from the server, right?

45
00:03:12.224 --> 00:03:13.016
Remember that?

46
00:03:13.016 --> 00:03:16.322
Well, we already have the email client
side because the email was typed by

47
00:03:16.322 --> 00:03:17.241
the user, anyway.

48
00:03:17.241 --> 00:03:22.795
But well, what we can do, because we
have credentials and not the user,

49
00:03:22.795 --> 00:03:27.713
we can create a new object and
log in that will first populate, or

50
00:03:27.713 --> 00:03:33.201
we will populate with credentials,
okay, with the spread operator.

51
00:03:33.201 --> 00:03:37.998
And then we can add the name that
is coming from the response.

52
00:03:40.802 --> 00:03:45.771
So then we normalize how postLogin
is going to receive the data.

53
00:03:45.771 --> 00:03:50.387
postLogin will receive the response
object from the server and

54
00:03:50.387 --> 00:03:53.530
also a user with name and email, at least.

55
00:03:55.828 --> 00:03:57.729
Make sense?

56
00:03:57.729 --> 00:04:01.030
From a security point of view,
maybe when we are registering,

57
00:04:01.030 --> 00:04:03.158
we're also passing the password here.

58
00:04:03.158 --> 00:04:06.697
So maybe you say, hey, maybe passing
the password is not a good idea.

59
00:04:06.697 --> 00:04:11.478
So if you wanna be more
secure because maybe you

60
00:04:11.478 --> 00:04:16.259
wanna clear the password
as soon as possible,

61
00:04:16.259 --> 00:04:21.284
so you pass the name of
the user from user.name,

62
00:04:21.284 --> 00:04:25.344
and you pass the email as user.email.

63
00:04:25.344 --> 00:04:28.298
And that's also I create a new object,
okay?

64
00:04:28.298 --> 00:04:34.062
So I don't keep the password in memory.

65
00:04:34.062 --> 00:04:37.113
That is just something to add, okay?

66
00:04:37.113 --> 00:04:40.658
So postLogin, what idea with postLogin?

67
00:04:40.658 --> 00:04:46.193
Well, first, we should check if response,
the ok flag, is true or not.

68
00:04:46.193 --> 00:04:49.903
If it's not true,
it's simple what we need to do.

69
00:04:49.903 --> 00:04:54.459
We need to show the user a message, okay?

70
00:04:54.459 --> 00:04:59.526
So far, okay, one thing at a time,
I'm going to make an alert.

71
00:04:59.526 --> 00:05:05.323
We know we shouldn't be using alert
dialog, the native dialogs anymore,

72
00:05:05.323 --> 00:05:09.014
but just for making this quick,
that's fine.

73
00:05:09.014 --> 00:05:12.167
Typically, you will use a UI library,
or your own UI

74
00:05:12.167 --> 00:05:16.630
library that will render a nice message
to the user within the DOM, okay?

75
00:05:16.630 --> 00:05:20.267
But again, I wanna keep the project
as simple as possible so

76
00:05:20.267 --> 00:05:24.874
everybody can actually understand
what I'm doing without getting lost.

77
00:05:24.874 --> 00:05:27.476
So what to do here?

78
00:05:27.476 --> 00:05:32.256
Well, first, our Auth object has a flag,
is logged in.

79
00:05:32.256 --> 00:05:35.340
So I'm going to change that flag.

80
00:05:35.340 --> 00:05:37.688
So is logged in, now is true.

81
00:05:37.688 --> 00:05:40.725
And also,
it has an account that is currently null.

82
00:05:40.725 --> 00:05:42.881
So I'm going to change that, and

83
00:05:42.881 --> 00:05:47.513
I'm gonna say that this is the user
that I'm receiving as an argument.

84
00:05:47.513 --> 00:05:53.399
So remember I'm receiving a user,
so I'm saving that as the account.

85
00:05:53.399 --> 00:05:57.689
And then I should call updateStatus.

86
00:05:57.689 --> 00:06:03.855
updateStatus was the only function
that was pre-arranged for

87
00:06:03.855 --> 00:06:08.862
us, okay,
is the one that is just updating the UI.

88
00:06:11.132 --> 00:06:14.553
And after that,
I'm going to talk to my router.

89
00:06:14.553 --> 00:06:18.592
Again, this is my router,
has a go function,

90
00:06:18.592 --> 00:06:23.045
where I can just say I wanna
go to the root folder, or

91
00:06:23.045 --> 00:06:26.069
I wanna go to the account section.

92
00:06:26.069 --> 00:06:31.721
So you pass a route and
it will go to the route, okay?

93
00:06:31.721 --> 00:06:37.486
To me that will React router,
but this is a very simple router.

94
00:06:37.486 --> 00:06:38.682
Make sense?

95
00:06:38.682 --> 00:06:43.329
So if this works now after I'm logged in,
let me refresh.

96
00:06:43.329 --> 00:06:50.231
So after I'm logging in here,
like will m@m, okay?

97
00:06:50.231 --> 00:06:55.132
And after I type the right
password frontendmasters,

98
00:06:55.132 --> 00:06:57.482
now I can save them or not.

99
00:06:57.482 --> 00:07:01.265
I'm here in my account,
so I'm now logged in.

100
00:07:01.265 --> 00:07:05.519
This is the account section
that have my name, my email.

101
00:07:05.519 --> 00:07:10.709
If I'm going to the home, it says,
You are currently logged in as Max.

102
00:07:10.709 --> 00:07:13.169
So it's working, and
I can go to see my details.

103
00:07:13.169 --> 00:07:16.430
And I have a Log out button
that is doing nothing.

104
00:07:16.430 --> 00:07:20.465
So I still need to create
the Log out button, okay?

105
00:07:20.465 --> 00:07:26.495
But the first step is done, okay?

106
00:07:26.495 --> 00:07:30.854
What about the Log out button?

107
00:07:30.854 --> 00:07:34.433
Okay, from our point of view,

108
00:07:34.433 --> 00:07:40.498
a Log out button is another function here,
logout.

109
00:07:41.830 --> 00:07:48.655
We don't need the event, I think,
there is no form or something like that.

110
00:07:48.655 --> 00:07:54.900
So what I need to do is to do the reverse
operation that we did here in postLogin.

111
00:07:54.900 --> 00:08:01.458
So I need to change these two properties,
the flag and the account, back to null.

112
00:08:01.458 --> 00:08:02.575
Make sense?

113
00:08:02.575 --> 00:08:07.047
So this is false,
the account is going back to null so

114
00:08:07.047 --> 00:08:11.226
I don't have any client
side logged in account.

115
00:08:11.226 --> 00:08:16.573
And I'm also going to call, updateStatus,

116
00:08:16.573 --> 00:08:19.722
that will trigger the whole
change in the page.

117
00:08:19.722 --> 00:08:24.449
And maybe we go to the home, or
to the login page, or wherever,

118
00:08:24.449 --> 00:08:27.678
it's up to us what we're going to do here.

119
00:08:27.678 --> 00:08:33.732
So but if we want, we can talk to
the router and we can go to the home.

120
00:08:33.732 --> 00:08:39.012
I can have another page for
after log out or whatever.

121
00:08:39.012 --> 00:08:40.503
Make sense?

122
00:08:40.503 --> 00:08:45.081
So if that works,
now every time I refreshing my page,

123
00:08:45.081 --> 00:08:49.468
you can see I'm logged out,
which may be a problem.

124
00:08:49.468 --> 00:08:51.007
Well, it seems like a problem, right?

125
00:08:51.007 --> 00:08:54.226
So when we are working with authorization,

126
00:08:54.226 --> 00:08:58.490
remember authorization
happens after authentication.

127
00:08:58.490 --> 00:09:03.212
Well, maybe you can store a token for
the session or for a couple of days,

128
00:09:03.212 --> 00:09:07.716
that's a different problem,
it's not actually authentication.

129
00:09:07.716 --> 00:09:14.174
But anyway, after this, what we're
going to see is, can we do auto login?

130
00:09:14.174 --> 00:09:16.380
So we're going to talk
about that in a minute.

131
00:09:16.380 --> 00:09:18.769
So auto login is like, hey,

132
00:09:18.769 --> 00:09:24.556
if the browser is remembering who we are,
can we just get in quickly?

133
00:09:24.556 --> 00:09:29.370
So let me get back here at the masters,

134
00:09:29.370 --> 00:09:32.985
Continue, I'm logged in.

135
00:09:32.985 --> 00:09:35.600
And if I click Log out, I'm logged out.

136
00:09:35.600 --> 00:09:37.545
So it's working.

137
00:09:37.545 --> 00:09:42.896
So that's a standard flow with
a big warning that there are still

138
00:09:42.896 --> 00:09:47.569
things to do in terms of security,
validation, okay?

139
00:09:47.569 --> 00:09:51.932
So that's homework, because there are more
interesting things to go over today.

