WEBVTT

1
00:00:00.370 --> 00:00:06.050
To implement authentication these days,
you have typically three options.

2
00:00:06.050 --> 00:00:10.228
You create your own custom
authentication system, server style, and

3
00:00:10.228 --> 00:00:13.940
maybe client side as well,
it depends, actually.

4
00:00:13.940 --> 00:00:15.550
So you create your own system.

5
00:00:15.550 --> 00:00:17.550
That's what we are going to build today.

6
00:00:18.830 --> 00:00:24.879
You use identity providers, and
I will explain what that is in a second,

7
00:00:24.879 --> 00:00:29.160
or you use services known
as identity as a service.

8
00:00:30.240 --> 00:00:33.646
Probably, maybe you haven't heard
about the name, that term, but

9
00:00:33.646 --> 00:00:37.230
I will mention some names and
probably that thing will pop up.

10
00:00:37.230 --> 00:00:42.075
So, custom authentication is, for example,
having your own system with username and

11
00:00:42.075 --> 00:00:46.250
password or using the API for
biometrics known as web authentication.

12
00:00:46.250 --> 00:00:51.433
It's not just for biometrics, but it's the
first thing that highlights in our mind,

13
00:00:51.433 --> 00:00:55.680
okay, yeah,
I wanna log in with Face ID in my website.

14
00:00:55.680 --> 00:01:00.504
So identity providers
are typically using different

15
00:01:00.504 --> 00:01:04.909
specs such as OpenID, Or
SAML, so what is that?

16
00:01:04.909 --> 00:01:08.585
Every time you see sign in with,
sign in with Google,

17
00:01:08.585 --> 00:01:13.405
sign in with Apple, sign in with GitHub,
with wherever, actually,

18
00:01:13.405 --> 00:01:17.250
that's the beginning of
an identity provider.

19
00:01:17.250 --> 00:01:22.421
So instead of you creating your own
databases of usernames and passwords,

20
00:01:22.421 --> 00:01:26.690
you will use another database
from a third-party provider,

21
00:01:26.690 --> 00:01:28.970
from Google, from Apple.

22
00:01:28.970 --> 00:01:32.520
Typically, you also create your
own database that matches that.

23
00:01:32.520 --> 00:01:35.749
It's not necessary, so you can just say,
you know what, to use my web app,

24
00:01:35.749 --> 00:01:38.060
you need to have a Google account.

25
00:01:38.060 --> 00:01:42.315
I'm not going to save any
user data in my server, but

26
00:01:42.315 --> 00:01:47.410
I will authenticate you using
your Google's credentials.

27
00:01:47.410 --> 00:01:48.740
It's totally possible.

28
00:01:48.740 --> 00:01:51.670
In that case,
you're just using an identity provider.

29
00:01:51.670 --> 00:01:55.055
And identity as a service, okay,

30
00:01:55.055 --> 00:02:00.076
there are many companies out there,
for example,

31
00:02:00.076 --> 00:02:04.862
Auth0, now acquired by Okta,
or even Amazon,

32
00:02:04.862 --> 00:02:09.678
Cloud Firebase from Google,
Microsoft Azure.

33
00:02:09.678 --> 00:02:11.882
They all offer us solutions for

34
00:02:11.882 --> 00:02:15.540
authenticating our users in our websites,
okay?

35
00:02:15.540 --> 00:02:21.520
The most common one these days,
the largest provider is Auth0.

36
00:02:21.520 --> 00:02:25.310
So in this case, we don't build anything.

37
00:02:25.310 --> 00:02:30.340
We just get a key from their websites,
maybe pay for the service.

38
00:02:30.340 --> 00:02:35.170
It depends on the service that we want,
and that's all.

39
00:02:35.170 --> 00:02:38.249
We can get everything for
free, okay, that's all.

40
00:02:38.249 --> 00:02:41.042
What we are not going to build,
in that case,

41
00:02:41.042 --> 00:02:45.245
any authentication system manually
in our websites in our web app.

42
00:02:45.245 --> 00:02:48.708
We're going to use a third
party solution for that.

