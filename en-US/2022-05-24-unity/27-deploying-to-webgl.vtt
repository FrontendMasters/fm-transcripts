WEBVTT

1
00:00:00.390 --> 00:00:06.290
We're at the last part here where
we're gonna deploy this to WebGL.

2
00:00:06.290 --> 00:00:14.845
And like I said, this is hopefully going
to be perhaps the easiest part of this.

3
00:00:14.845 --> 00:00:19.970
This is a script that is already
in the project we don't need

4
00:00:19.970 --> 00:00:27.155
to write this because frankly this is kind
of beyond the scope of a beginner lesson.

5
00:00:27.155 --> 00:00:32.095
But it was something that was
necessary because of MacOS Monterrey,

6
00:00:32.095 --> 00:00:35.067
I had to add this to make it build on Mac.

7
00:00:35.067 --> 00:00:37.823
If you're on Windows it should be fine and

8
00:00:37.823 --> 00:00:42.728
even if the script is in the project
it shouldn't affect Windows builds.

9
00:00:42.728 --> 00:00:45.340
But I will explain it,
because it is there.

10
00:00:45.340 --> 00:00:53.448
So, in unity, you can add scripts
that pre process your build.

11
00:00:53.448 --> 00:00:58.299
So as you're building something, or
creating a build and outputting it,

12
00:00:58.299 --> 00:01:02.400
you can process that build in
a number of different ways.

13
00:01:02.400 --> 00:01:06.933
And this actually uses
the Unity editor name-space

14
00:01:06.933 --> 00:01:10.545
rather than the Unity engine name space.

15
00:01:10.545 --> 00:01:15.623
And anytime we're using
the Unity editor name-space

16
00:01:15.623 --> 00:01:20.819
we need to wrap that in some
pre processing directives.

17
00:01:20.819 --> 00:01:24.909
Or a compilation directive I should say so
that that doesn't

18
00:01:24.909 --> 00:01:29.491
get included in our builds otherwise
unity is gonna throw an error.

19
00:01:29.491 --> 00:01:32.609
And this only needs to happen on os 10 so

20
00:01:32.609 --> 00:01:37.481
that's why it says Unity Editor OS 10,
so if this is OS10.

21
00:01:37.481 --> 00:01:40.060
Then we need to do this
pre processing step.

22
00:01:41.170 --> 00:01:42.300
So what is the step?

23
00:01:42.300 --> 00:01:47.396
Well, it turns out in macOS monterey and
possibly later if you're

24
00:01:47.396 --> 00:01:51.946
watching this in the future,
you'll need to add this build

25
00:01:51.946 --> 00:01:56.961
preprocessor because it points
to the location of python three.

26
00:01:56.961 --> 00:02:01.030
In macOS Monterey,
they didn't include python 2, and

27
00:02:01.030 --> 00:02:03.590
that's what unity is looking for.

28
00:02:03.590 --> 00:02:07.800
And we need Python in
order to do a WebGL build.

29
00:02:07.800 --> 00:02:12.890
Right now I am not set
to create a WebGL build.

30
00:02:12.890 --> 00:02:17.139
So I'm going to go to file,
build settings and,

31
00:02:17.139 --> 00:02:21.850
I need to switch my platform,
over to WebGL.

32
00:02:21.850 --> 00:02:25.630
So I'm gonna choose, switch platform, and,

33
00:02:25.630 --> 00:02:30.449
that just needs to convert all
of the raw assets that we have,

34
00:02:30.449 --> 00:02:34.800
into a format that webgl
is going to understand.

35
00:02:34.800 --> 00:02:36.990
So any time you switch platforms.

36
00:02:36.990 --> 00:02:42.034
There is going to be a little bit
of a step here where everything has

37
00:02:42.034 --> 00:02:46.823
to transfer over, and
that should be finished momentarily.

38
00:02:49.947 --> 00:02:57.541
Okay, and it's going to continue
doing the script compilation.

39
00:02:57.541 --> 00:03:04.685
We might get a few materials here
that are still processing, okay?

40
00:03:07.735 --> 00:03:12.145
Cool, let's hit play here to
see what that looks like.

41
00:03:12.145 --> 00:03:13.610
Make sure these came in okay.

42
00:03:13.610 --> 00:03:18.336
Yep, l did, just the previews
that look kind of funky there?

43
00:03:18.336 --> 00:03:22.586
So now if I hit build and run.

44
00:03:26.226 --> 00:03:29.610
I'm going to put this in my builds folder.

45
00:03:31.240 --> 00:03:37.790
And I'll say unity for
a web developers WebGL,

46
00:03:37.790 --> 00:03:42.883
and I'll create a new folder there.

47
00:03:42.883 --> 00:03:45.691
And well, actually I don't wanna do that.

48
00:03:45.691 --> 00:03:47.369
That's what I wanted to name the project.

49
00:03:47.369 --> 00:03:52.833
So I have a build folder,
I'll say unity for

50
00:03:52.833 --> 00:03:56.090
web developers, WebGL.

51
00:03:58.020 --> 00:03:59.362
And that's what it will save it as.

52
00:04:02.069 --> 00:04:06.504
And this build step could
take anywhere between 30

53
00:04:06.504 --> 00:04:10.754
seconds to several minutes or
maybe even longer.

54
00:04:10.754 --> 00:04:13.294
It depends on the size of your project.

55
00:04:13.294 --> 00:04:16.171
It depends on the speed of your computer,
and

56
00:04:16.171 --> 00:04:21.910
depends on all manner of different
settings that you might have set in unity.

57
00:04:21.910 --> 00:04:24.780
And it also depends on how recently you

58
00:04:24.780 --> 00:04:29.442
compile the project because a lot
of things do get cached, and

59
00:04:29.442 --> 00:04:34.119
that can help shader compilation
happen a little bit faster.

60
00:04:34.119 --> 00:04:38.588
So we're just waiting for this to finish.

61
00:04:38.588 --> 00:04:44.146
&gt;&gt; So with you in particular about
unity that are not unity but

62
00:04:44.146 --> 00:04:50.621
WebGL that causes the compilation
time to take a little bit longer.

63
00:04:50.621 --> 00:04:51.475
&gt;&gt; I don't know and

64
00:04:51.475 --> 00:04:54.902
that's kind of the beauty of unity
is all that is abstracted away.

65
00:04:54.902 --> 00:05:01.106
I'm sure there's a reason, but I couldn't
explain the entire software stack.

66
00:05:01.106 --> 00:05:06.372
[LAUGH] I assume it's probably doing

67
00:05:06.372 --> 00:05:14.000
some kind of intermediary
language stuff there.

68
00:05:14.000 --> 00:05:18.787
Unity has a system called
ILSSTTP which allows it to

69
00:05:18.787 --> 00:05:24.129
basically compile a lot of stuff to C++,
in this case,

70
00:05:24.129 --> 00:05:29.049
it's not doing that because
we're going to WebGL.

71
00:05:29.049 --> 00:05:34.153
But on other platforms, especially,
say console that allows you to

72
00:05:34.153 --> 00:05:39.340
run unity code much faster than you
could with just C sharp scripts.

73
00:05:39.340 --> 00:05:43.457
And now if we switch
over to the web browser,

74
00:05:43.457 --> 00:05:48.034
I can see that it opened
a port on our local hosts.

75
00:05:48.034 --> 00:05:53.704
And so this is just running with Python
without us having to set up a server or

76
00:05:53.704 --> 00:05:55.324
anything like that.

77
00:05:55.324 --> 00:05:59.152
So it's doing it all on its own, and

78
00:05:59.152 --> 00:06:03.370
press Start to start playing Browser.

79
00:06:03.370 --> 00:06:08.438
And now, yeah, you can see the game
running in a web browser and

80
00:06:08.438 --> 00:06:11.411
you can even hit it to go full screen.

81
00:06:11.411 --> 00:06:15.590
The UI is a little bit small here.

82
00:06:15.590 --> 00:06:21.193
I think that's because of the resolution
that this is being captured at.

83
00:06:21.193 --> 00:06:27.511
Just perhaps some of Apple's magical
retina technology taking over there and

84
00:06:27.511 --> 00:06:33.265
giving us a really weird screen
resolution that unity is picking up on.

85
00:06:33.265 --> 00:06:37.069
But other than that,
everything looks pretty good here.

86
00:06:37.069 --> 00:06:41.560
All the materials are responding to
the lighting in the way I'd expect.

87
00:06:41.560 --> 00:06:45.296
If the player or the opponent falls
off the side we're getting reset So

88
00:06:45.296 --> 00:06:47.630
we're able to grab the collectibles.

89
00:06:47.630 --> 00:06:51.368
The timer is ticking down,
the scores are being calculated.

90
00:06:51.368 --> 00:06:57.180
And once we get to the end here,
we should see the end game screen.

91
00:06:57.180 --> 00:06:58.736
I definitely lost.

92
00:06:58.736 --> 00:07:02.867
You lose and
you can press space to restart the game.

