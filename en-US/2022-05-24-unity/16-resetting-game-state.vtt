WEBVTT

1
00:00:00.460 --> 00:00:05.454
There's one more thing we need
to do in the GameManager,

2
00:00:05.454 --> 00:00:08.760
this is our longest script.

3
00:00:08.760 --> 00:00:12.670
We need to add a method to
restart the game once it's over.

4
00:00:12.670 --> 00:00:17.160
So, just like in other scripts,
we need a RestartGame method.

5
00:00:17.160 --> 00:00:20.678
And if the game is not playing and
RestartGame is called,

6
00:00:20.678 --> 00:00:24.342
then we can unpause the game by
setting the time scale to 1,

7
00:00:24.342 --> 00:00:30.560
because remember we haven't done that
anywhere yet, we've kept setting it to 0.

8
00:00:30.560 --> 00:00:34.676
We'll set it to 1,
we'll reset the game timer and

9
00:00:34.676 --> 00:00:37.949
we'll say that gameIsPlaying is true.

10
00:00:37.949 --> 00:00:40.494
So, let's write that up.

11
00:00:40.494 --> 00:00:45.125
So, public void RestartGame.

12
00:00:47.166 --> 00:00:52.865
We'll say if, The gameIsnotPlaying,

13
00:00:55.925 --> 00:01:03.500
Then unpause the game by
setting the time scale to 1.

14
00:01:05.544 --> 00:01:10.057
So, Time.timeScale should be 1, and

15
00:01:10.057 --> 00:01:13.243
then reset the game timer and

16
00:01:13.243 --> 00:01:19.102
that will say timer is
equal to gameTimeInSeconds.

17
00:01:19.102 --> 00:01:24.213
So we're resetting the game
clock to 60 seconds,

18
00:01:24.213 --> 00:01:28.171
and then gameIsPlaying should be true.

19
00:01:32.472 --> 00:01:34.830
So, we've added a couple of things here.

20
00:01:36.380 --> 00:01:39.096
We have our RestartGame method,

21
00:01:39.096 --> 00:01:43.369
we have a method that gets
called if the game is over.

22
00:01:44.920 --> 00:01:49.460
There's a FixedUpdate that's
running to decrement the timer.

23
00:01:50.510 --> 00:01:56.028
And then in our Start method, we're
setting the game time at the start and

24
00:01:56.028 --> 00:01:58.434
updating the timer in seconds.

25
00:01:58.434 --> 00:02:02.954
And the reason we do this here is because
this UpdateTimer method is going to call

26
00:02:02.954 --> 00:02:03.970
some UI methods.

27
00:02:03.970 --> 00:02:06.884
So we wanna do it here just
before everything starts so

28
00:02:06.884 --> 00:02:09.230
that the UI looks nice
at the start of game.

29
00:02:11.060 --> 00:02:18.007
So, let's save our GameManager, and
we're gonna switch over to Unity.

30
00:02:22.205 --> 00:02:26.744
And now,
it's time to actually create an opponent.

31
00:02:26.744 --> 00:02:31.596
So, we have our player,
switch back to the scene view, but

32
00:02:31.596 --> 00:02:34.130
we never created an opponent.

33
00:02:35.710 --> 00:02:41.406
So, we want that opponent to
be just opposite the player,

34
00:02:41.406 --> 00:02:45.850
and we can do that by
duplicating the player.

35
00:02:45.850 --> 00:02:51.912
So on my Mac, I just selected the player
and hit Command D to duplicate,

36
00:02:51.912 --> 00:02:57.480
and I'm going to change the name
of this game object to opponent.

37
00:02:58.670 --> 00:03:00.950
And just for the sake of clarity,

38
00:03:00.950 --> 00:03:06.163
I'm going to rearrange it in the hierarchy
just so it's next to the player,

39
00:03:06.163 --> 00:03:11.310
that's not actually necessary, but
it's just some good organization.

40
00:03:12.840 --> 00:03:14.290
And so
where do we wanna put this opponent?

41
00:03:14.290 --> 00:03:19.600
Well, we wanna put it on the other
side of the game board here, right?

42
00:03:19.600 --> 00:03:25.164
Well, the player was at negative 3,
that's what our opponent is at,

43
00:03:25.164 --> 00:03:29.080
we wanna put this at positive 0.3,
all right?

44
00:03:29.080 --> 00:03:35.950
So we have the player negative
0.3 of the opponent positive 0.3.

45
00:03:35.950 --> 00:03:40.141
And the opponent is
gonna have all the same

46
00:03:40.141 --> 00:03:43.985
stuff as the player for the most part.

47
00:03:43.985 --> 00:03:48.817
It still needs a sphere collider,
it still needs a rigid body,

48
00:03:48.817 --> 00:03:52.281
it still needs the rolling
movement script,

49
00:03:52.281 --> 00:03:57.294
it still needs score, but
we don't want this to accept input, so

50
00:03:57.294 --> 00:04:02.693
we're going to remove the player
input component from the opponent.

51
00:04:02.693 --> 00:04:07.816
And we're going to remove the player
movement script because we'll

52
00:04:07.816 --> 00:04:12.950
replace that with another script
that will drive rolling movement.

53
00:04:15.010 --> 00:04:17.260
So, let's switch over to the player.

54
00:04:19.150 --> 00:04:24.269
And now that we have all of those restart

55
00:04:24.269 --> 00:04:29.233
methods in place, we can actually add

56
00:04:29.233 --> 00:04:35.140
the rest of our input callback methods.

57
00:04:35.140 --> 00:04:38.623
So, under the player inputs component,

58
00:04:38.623 --> 00:04:43.010
we're going to add several
things to restart here.

59
00:04:43.010 --> 00:04:45.746
I'm gonna switch back
to the slides just so

60
00:04:45.746 --> 00:04:48.641
we can go over what those
are really quickly.

61
00:04:50.786 --> 00:04:55.315
So, we have PlayerMovement.OnMove,

62
00:04:55.315 --> 00:05:00.530
we have that hooked up already, and Unity.

63
00:05:00.530 --> 00:05:05.639
But we need to add six methods to restart,
there's a lot of stuff to

64
00:05:05.639 --> 00:05:10.674
restart when the game gets restarted,
when we hit the spacebar.

65
00:05:10.674 --> 00:05:16.921
And one of those is the method we just
wrote in GameManager.RestartGame,

66
00:05:16.921 --> 00:05:19.598
we need to reset the position for

67
00:05:19.598 --> 00:05:25.466
the rolling movement components on
both the player and the opponent.

68
00:05:25.466 --> 00:05:28.508
We need to reset the position
of the collectible, so

69
00:05:28.508 --> 00:05:31.460
it's back in the middle of the board.

70
00:05:31.460 --> 00:05:37.550
And then we need to reset the score
on both the player and the opponent.

71
00:05:37.550 --> 00:05:41.003
So, there's those six
things we need to hook up.

72
00:05:41.003 --> 00:05:45.341
So, let's switch back to Unity and
do each one of those.

73
00:05:45.341 --> 00:05:51.772
So, I'll come down here, and
here is the restart callback context,

74
00:05:51.772 --> 00:05:58.285
just to review where this is at,
we're on the player game object.

75
00:05:58.285 --> 00:06:01.085
We're looking at the player
input component.

76
00:06:01.085 --> 00:06:07.726
And then I'll fold this back up
because this is how it is by default,

77
00:06:07.726 --> 00:06:14.385
under Events, Player,
Restart is where we want to add these.

78
00:06:14.385 --> 00:06:15.995
So, we need six of them.

79
00:06:15.995 --> 00:06:23.440
So, I'll hit this little plus
button six times, 1, 2, 3, 4, 5, 6.

80
00:06:23.440 --> 00:06:27.650
And the first one that we
need here is the GameManager.

81
00:06:27.650 --> 00:06:32.435
Now, previously, I was just hitting
this little target icon and

82
00:06:32.435 --> 00:06:36.959
choosing from the menu of things
that are either in the scene or

83
00:06:36.959 --> 00:06:40.040
assets that are in the project.

84
00:06:40.040 --> 00:06:44.596
There's another way you can do this, you
can actually just drag game objects from

85
00:06:44.596 --> 00:06:49.040
the hierarchy or drag things from
the project window into the slots.

86
00:06:49.040 --> 00:06:53.865
Now, this is something that tends
to trip beginners a little bit,

87
00:06:53.865 --> 00:06:58.259
because we need to add the GameManager
to one of these slots so

88
00:06:58.259 --> 00:07:01.900
that we can call RestartGame
on the Game Manager.

89
00:07:03.190 --> 00:07:08.317
Think about this for a second,
we could grab the script here and

90
00:07:08.317 --> 00:07:14.024
put it into the slot but that's not
going to do what we want because that

91
00:07:14.024 --> 00:07:19.770
is going to only be able to access
static methods that are on the class.

92
00:07:19.770 --> 00:07:24.764
It's not going to be able to access
the instance of the GameManager that is in

93
00:07:24.764 --> 00:07:27.090
the actual scene, okay?

94
00:07:27.090 --> 00:07:33.550
So we wanna make sure we're dragging from
the hierarchy in this case to this slot.

95
00:07:33.550 --> 00:07:37.947
And the same thing is true
when you click this button,

96
00:07:37.947 --> 00:07:41.570
so if I were to type in GameManager,
right?

97
00:07:41.570 --> 00:07:46.971
You could get it from assets,
that would be incorrect

98
00:07:46.971 --> 00:07:51.301
though we actually want it from the scene.

99
00:07:51.301 --> 00:07:55.997
So, let's drag the GameManager
over to there,

100
00:07:55.997 --> 00:08:00.690
and then the next thing we
need is the Player, and

101
00:08:00.690 --> 00:08:05.060
we'll call a few different
methods on that.

102
00:08:06.140 --> 00:08:11.200
There's the opponent,
we need the collectible.

103
00:08:12.420 --> 00:08:17.803
And then one more time we need both

104
00:08:17.803 --> 00:08:22.615
the Player and the Opponent.

105
00:08:25.400 --> 00:08:28.221
So, let's set up each
one of these methods.

106
00:08:28.221 --> 00:08:36.454
On the GameManager, we want to call
the public method Restartgame.

107
00:08:36.454 --> 00:08:41.651
On the Player, we need to call on

108
00:08:41.651 --> 00:08:47.815
RollingMovement, ResetPosition.

109
00:08:47.815 --> 00:08:53.292
On the opponent, we need to call
RollingMovement, ResetPosition.

110
00:08:53.292 --> 00:08:58.480
On the Collectible,
we need to call ResetPosition.

111
00:08:58.480 --> 00:09:03.534
And then finally on the Player and
Opponent,

112
00:09:03.534 --> 00:09:07.658
we need to call Score.ResetScore.

113
00:09:12.755 --> 00:09:15.432
So now, if we save the scene,

114
00:09:18.378 --> 00:09:22.835
When I hit the play button
nothing should happen.

115
00:09:22.835 --> 00:09:26.840
And I was fooled because
there's no UI here yet, but

116
00:09:26.840 --> 00:09:30.571
this is doing exactly what
we told it to be doing,

117
00:09:30.571 --> 00:09:37.035
the time scale set to 0 until we hit
the space bar, and then the game starts.

118
00:09:37.035 --> 00:09:39.305
So of course, I can still move around.

119
00:09:40.340 --> 00:09:42.036
The Opponent is there, but

120
00:09:42.036 --> 00:09:46.981
the Opponent isn't really going to do
anything because we haven't written any

121
00:09:46.981 --> 00:09:51.358
scripts that are going to drive its
RollingMovement script just yet.

