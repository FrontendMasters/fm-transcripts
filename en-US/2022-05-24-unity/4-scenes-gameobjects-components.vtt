WEBVTT

1
00:00:00.360 --> 00:00:03.590
There's a relationship
between all of these things.

2
00:00:03.590 --> 00:00:10.340
Scenes, are the container for
everything that is in your game.

3
00:00:10.340 --> 00:00:14.416
Game Objects are the most fundamental
building block of your game and

4
00:00:14.416 --> 00:00:18.080
then components,
drive the behavior of those game objects.

5
00:00:18.080 --> 00:00:19.490
So let's break that
down a little bit more.

6
00:00:20.890 --> 00:00:27.885
So scenes, are actually assets,
their files with the .unity extension and

7
00:00:27.885 --> 00:00:32.520
they can contain all or
part of your games content.

8
00:00:32.520 --> 00:00:34.082
And I say that because,

9
00:00:34.082 --> 00:00:38.626
multiple scenes can be loaded at
a time to help split up that content.

10
00:00:38.626 --> 00:00:42.356
So, for example,
if you're building an open world game,

11
00:00:42.356 --> 00:00:45.935
you might have a bunch of chunks
that need to be loaded in,

12
00:00:45.935 --> 00:00:51.960
because there's a limited amount of memory
on the platform that you're deploying to.

13
00:00:51.960 --> 00:00:57.790
So, you could stream in those assets,
as the player is moving around the world.

14
00:00:57.790 --> 00:01:00.960
That's one example of how
scenes might be used.

15
00:01:00.960 --> 00:01:05.692
Scenes could also be used,
by using them just as a construct for

16
00:01:05.692 --> 00:01:07.940
levels in your game, right?

17
00:01:07.940 --> 00:01:14.046
So, a lot of games have levels, where you
progress from one level to the next and

18
00:01:14.046 --> 00:01:18.055
scenes might be a good way for
you to break that up, or

19
00:01:18.055 --> 00:01:23.709
you might have a scene that is your main
menu and then you might have another

20
00:01:23.709 --> 00:01:29.123
scene that is the the actual gameplay,
that you transition between.

21
00:01:29.123 --> 00:01:31.165
So, lots of different ways
that those can be used.

22
00:01:31.165 --> 00:01:36.666
Game objects, which is maybe
the most important thing in Unity,

23
00:01:36.666 --> 00:01:40.567
are the building blocks for
scenes in Unity and

24
00:01:40.567 --> 00:01:44.769
they are really just a container for
components,

25
00:01:44.769 --> 00:01:48.787
game objects are almost
nothing really [LAUGH].

26
00:01:48.787 --> 00:01:51.933
And yet they're everything.

27
00:01:51.933 --> 00:01:55.020
So, they really are just a container for
components.

28
00:01:55.020 --> 00:02:01.020
Game objects, will always have a transform
component attached to them by default.

29
00:02:01.020 --> 00:02:05.430
So, you can't have a game object
in Unity without a transform.

30
00:02:05.430 --> 00:02:08.140
And, I'll show you what that
looks like in a moment.

31
00:02:08.140 --> 00:02:13.188
But a transform component,
will have a position rotation and

32
00:02:13.188 --> 00:02:18.249
scale and that is what places
a game object, in the 3D world.

33
00:02:18.249 --> 00:02:24.050
So that places it within the context
of the scene, within the 3D space.

34
00:02:25.490 --> 00:02:30.358
Components, are scripts that
you can attach to game objects

35
00:02:30.358 --> 00:02:32.990
to change their behavior.

36
00:02:32.990 --> 00:02:39.840
So, Unity leans toward a component based
architecture, which we'll get into later.

37
00:02:41.000 --> 00:02:46.966
But scripts, that when they are attached
to a game object, define the behavior

38
00:02:46.966 --> 00:02:52.487
of that game object, and components
are created via C sharp scripts and,

39
00:02:52.487 --> 00:02:56.960
they can expose values that
are modified in the inspector.

40
00:02:56.960 --> 00:03:02.234
So, you saw in the inspector that I had
a bunch of values when I was selecting

41
00:03:02.234 --> 00:03:08.660
different game objects in the hierarchy
and those are values that can be modified.

42
00:03:08.660 --> 00:03:11.780
&gt;&gt; What IDE do you use or
recommend with Unity?

43
00:03:12.780 --> 00:03:17.391
&gt;&gt; So, I personally use Visual Studio, but

44
00:03:17.391 --> 00:03:24.480
VS Code is also great for Unity,
and a lot of developers use it.

45
00:03:24.480 --> 00:03:28.610
So, yeah, VS Code or Visual Studio,
whichever you prefer.

46
00:03:30.260 --> 00:03:34.230
&gt;&gt; And is Unity cross-platform
across like Mac, Linux and windows?

47
00:03:35.800 --> 00:03:42.830
&gt;&gt; Yes, so Unity is available on Windows,
Mac, and Linux right now, as the editor.

48
00:03:42.830 --> 00:03:46.340
The platforms that you can deploy
your game to are much broader.

49
00:03:46.340 --> 00:03:51.357
So, you can of course deploy to Windows,
Mac, Linux, but gosh,

50
00:03:51.357 --> 00:03:57.091
the deployment is much wider, there's,
I don't know what the number is,

51
00:03:57.091 --> 00:04:02.845
but it's probably like 100 different
platforms that you can deploy to.

52
00:04:02.845 --> 00:04:06.029
So AR, VR consoles, mobile, you name it,

53
00:04:06.029 --> 00:04:09.480
you can probably get
a Unity game running on it.

54
00:04:10.490 --> 00:04:14.769
&gt;&gt; You'll probably get into
this later in the course, but

55
00:04:14.769 --> 00:04:20.130
there was somebody asking how that
WebGL deployment process works.

56
00:04:20.130 --> 00:04:25.862
&gt;&gt; We will get into it and I think
you'll be surprised by how easy it is.

57
00:04:25.862 --> 00:04:29.030
[LAUGH]
&gt;&gt; Is it WebAssembly or-

58
00:04:29.030 --> 00:04:32.873
&gt;&gt; Yes, under the hood, it is WebAssembly.

59
00:04:32.873 --> 00:04:37.273
All right,
are there any additional questions?

60
00:04:37.273 --> 00:04:38.319
Okay, cool.

61
00:04:38.319 --> 00:04:43.507
Well, like I said,
Unity games are composed of scenes,

62
00:04:43.507 --> 00:04:48.588
so scenes contain game objects and
those game objects,

63
00:04:48.588 --> 00:04:54.010
have components attached to
them that drive their behavior

