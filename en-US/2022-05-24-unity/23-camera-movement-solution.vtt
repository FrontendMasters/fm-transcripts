WEBVTT

1
00:00:00.000 --> 00:00:03.623
Here is the solution that I came up with.

2
00:00:03.623 --> 00:00:07.909
This is a slightly more ambiguous task, so

3
00:00:07.909 --> 00:00:13.871
there may have been other
solutions that are just as valid.

4
00:00:13.871 --> 00:00:21.340
But if we take a vector,
which I'm calling target here.

5
00:00:21.340 --> 00:00:26.638
And we take the target
position of the x and z,

6
00:00:26.638 --> 00:00:33.331
and add that to the offset,
and then leave the y the same,

7
00:00:33.331 --> 00:00:39.907
we'll have the position of the target but
away from it.

8
00:00:39.907 --> 00:00:46.372
So the target in this case would
be the action on the board, right?

9
00:00:46.372 --> 00:00:54.504
And then we can linearly interpolate
from the current position to the target.

10
00:00:54.504 --> 00:00:57.832
And there's a couple of options for
what the target could be.

11
00:00:57.832 --> 00:01:01.431
I mean,
it could potentially be the player,

12
00:01:01.431 --> 00:01:05.894
it could be the opponent,
it could be the collectible.

13
00:01:05.894 --> 00:01:09.131
I think, in this case,
because the player and

14
00:01:09.131 --> 00:01:13.782
it's a single player game,
we should make the target the player.

15
00:01:13.782 --> 00:01:18.139
So it's going to frame
the action in that way.

16
00:01:18.139 --> 00:01:22.145
So let's code this up.

17
00:01:22.145 --> 00:01:27.226
And to do that,
we'll create a new script in Unity,

18
00:01:27.226 --> 00:01:30.815
and we'll call it CameraMovement.

19
00:01:33.764 --> 00:01:37.094
And we'll attach that to the camera.

20
00:01:39.411 --> 00:01:41.709
So I'll drag that over to the main camera.

21
00:01:43.698 --> 00:01:49.009
And now, we have a script called
CameraMovement, we'll save that.

22
00:01:49.009 --> 00:01:55.627
And now, I want to open that script,
And let's type that up.

23
00:01:55.627 --> 00:02:00.910
So we don't need these other namespaces,
we just need the Unity engine namespace.

24
00:02:00.910 --> 00:02:09.809
And then inside of Start, Well,
actually, first, we need some variables.

25
00:02:09.809 --> 00:02:11.109
Just getting ahead of myself.

26
00:02:11.109 --> 00:02:15.700
So first, we need a transform
that we're gonna follow.

27
00:02:15.700 --> 00:02:22.700
So SerializedField, Transform,
and this will be our target.

28
00:02:22.700 --> 00:02:27.477
Then we'll say SerializedField Vector3,

29
00:02:27.477 --> 00:02:31.883
and that's going to be the boardCenter.

30
00:02:34.487 --> 00:02:38.115
And then we'll have another Vector3,

31
00:02:40.272 --> 00:02:45.112
That's going to be the offset, okay?

32
00:02:45.112 --> 00:02:52.555
So for the Start, going to Calculate
what that offset should be.

33
00:02:58.529 --> 00:03:03.178
And we'll say transform.position, and

34
00:03:03.178 --> 00:03:07.568
we're going to subtract the position of

35
00:03:07.568 --> 00:03:11.969
the camera from the center of the board.

36
00:03:14.035 --> 00:03:19.953
And now, in update, we need to
actually move the camera around.

37
00:03:19.953 --> 00:03:23.859
So to do that, we'll set

38
00:03:23.859 --> 00:03:29.625
the movement target to the target's

39
00:03:29.625 --> 00:03:34.652
position plus an X and Z offset.

40
00:03:34.652 --> 00:03:37.835
So that will be a vector3.

41
00:03:37.835 --> 00:03:43.941
And we'll just call that
target without the m.

42
00:03:43.941 --> 00:03:49.639
And this will be a new Vector3.

43
00:03:51.961 --> 00:03:56.667
And for the x component,
we need the member

44
00:03:56.667 --> 00:04:02.047
variable target position.x + the offset.x.

45
00:04:04.360 --> 00:04:09.265
The y value can just be
the transform.position.y,

46
00:04:09.265 --> 00:04:12.753
we don't really need to change that.

47
00:04:12.753 --> 00:04:18.719
And then the z value,
same thing as what we did here.

48
00:04:18.719 --> 00:04:20.764
So I'll actually just copy and paste that.

49
00:04:20.764 --> 00:04:27.018
But instead of x, want it to be z, and
we'll end the line with a semicolon.

50
00:04:30.360 --> 00:04:35.860
So now we need to linearly interpolate or

51
00:04:35.860 --> 00:04:39.742
use a ulurp the position from

52
00:04:39.742 --> 00:04:44.774
the current position to the target.

53
00:04:44.774 --> 00:04:51.525
So just like how the opponent moves
around, we wanna move some value.

54
00:04:51.525 --> 00:04:57.584
In this case,
the cameras transform position from

55
00:04:59.510 --> 00:05:03.123
Its current position,
so transform.position.

56
00:05:03.123 --> 00:05:07.085
We wanna move it toward that
calculated target value.

57
00:05:10.883 --> 00:05:18.653
So it's going to slowly do
this over Time.deltaTime.

58
00:05:18.653 --> 00:05:24.975
So the camera is going to get this
target position along with an offset.

59
00:05:24.975 --> 00:05:28.211
So the target position
could be the player,

60
00:05:28.211 --> 00:05:33.195
it could be say where the collectible is,
and then it needs to offset

61
00:05:33.195 --> 00:05:38.368
from that position by some amount,
so it's not zoomed so close to it.

62
00:05:38.368 --> 00:05:43.689
And then we're going to move
the camera in the x and z plane,

63
00:05:43.689 --> 00:05:50.300
kind of back and forth from its current
position to that target over time.

64
00:05:50.300 --> 00:05:53.189
And if we wanted it to move faster or
slower,

65
00:05:53.189 --> 00:05:55.855
we could multiply that by a speed value.

66
00:05:55.855 --> 00:05:59.240
When I was playing, I found that
the default was actually pretty good.

67
00:05:59.240 --> 00:06:00.579
So we'll save that.

68
00:06:03.744 --> 00:06:10.889
We'll get some new serialized fields
in this camera movement script.

69
00:06:10.889 --> 00:06:18.262
And for the target, let's try out
the player and see what that looks like.

70
00:06:18.262 --> 00:06:23.252
And I'm gonna leave the board
centre at its default value, and

71
00:06:23.252 --> 00:06:26.655
we'll see what that ends up looking like.

72
00:06:29.353 --> 00:06:37.427
So I've hit Space, Right now,
I feel like that's pretty good.

73
00:06:37.427 --> 00:06:43.152
And it follows the player around so
that you can see the action.

74
00:06:43.152 --> 00:06:48.207
If I change the x value of this offset,
it actually won't do

75
00:06:48.207 --> 00:06:53.073
anything because that's
calculated at the beginning.

76
00:06:53.073 --> 00:07:00.169
So let's maybe change that to,
we'll say 0 and say -0.5.

77
00:07:00.169 --> 00:07:02.941
And that will kind of pull
the camera back a little bit.

78
00:07:06.222 --> 00:07:07.759
So now we'll do that.

79
00:07:07.759 --> 00:07:11.245
And oops, actually,
that moves the camera far forward.

80
00:07:11.245 --> 00:07:17.722
I meant to do the opposite and
maybe a smaller value of 0.15,

81
00:07:19.553 --> 00:07:22.533
And that should pull it back towards us.

82
00:07:22.533 --> 00:07:24.048
Yeah, that's a little better.

83
00:07:26.076 --> 00:07:29.773
So I mean,
you can play with this a number of ways.

84
00:07:29.773 --> 00:07:35.317
These are the types of things that you
tend to tune when you're creating a game.

85
00:07:35.317 --> 00:07:38.420
I'm actually not sure if
I liked that offset and

86
00:07:38.420 --> 00:07:43.084
that current framing,
maybe that's something we'll change later.

87
00:07:43.084 --> 00:07:49.750
And I feel like maybe something
else we could do is adjust the y.

88
00:07:49.750 --> 00:07:53.007
So like I said, lots of different
ways we could play with that.

89
00:07:53.007 --> 00:07:57.705
Let's try changing the target from
the player to the collectible.

90
00:07:59.901 --> 00:08:03.343
Just to see what that looks like.

91
00:08:03.343 --> 00:08:05.558
&gt;&gt; Would it be hard to change
the angles of the cameras instead?

92
00:08:05.558 --> 00:08:08.238
I mean, that sounds completely
different thing, right?

93
00:08:08.238 --> 00:08:13.434
&gt;&gt; Yeah, I mean that would get into
&gt;&gt; Yeah, so you see now,

94
00:08:13.434 --> 00:08:19.916
it is going to the collectible,
but the movement is pretty jerky,

95
00:08:19.916 --> 00:08:25.270
and that's because it is
looping at a constant speed.

96
00:08:25.270 --> 00:08:26.891
But if we were to learn say,

97
00:08:26.891 --> 00:08:30.569
using a different speed value
might look a little bit better.

98
00:08:30.569 --> 00:08:34.520
So I'm gonna change that back to
the player cuz I liked it the way it was.

