WEBVTT

1
00:00:00.330 --> 00:00:02.523
Now we've got our UI, but

2
00:00:02.523 --> 00:00:08.850
our UI isn't going to do anything
unless we hook it up to some scripts.

3
00:00:08.850 --> 00:00:13.210
So how do we do that?

4
00:00:13.210 --> 00:00:17.230
Well, we need to add this.

5
00:00:18.230 --> 00:00:24.730
Well, we need to add a few things to our
score script so that it's aware of the UI.

6
00:00:24.730 --> 00:00:28.797
So to do this we'll add
a serialized field for

7
00:00:28.797 --> 00:00:34.042
the TextMeshProUGUI object
which I know is really long but

8
00:00:34.042 --> 00:00:37.161
that is the name of the component.

9
00:00:37.161 --> 00:00:41.753
And that comes from
the TextMesh Pro namespace or

10
00:00:41.753 --> 00:00:46.793
TM Pro for short,
which will then hook up in the editor

11
00:00:46.793 --> 00:00:51.970
to the TextMesh Pro UI
objects that we created.

12
00:00:51.970 --> 00:00:55.750
And then we'll update that string,
every fixed update.

13
00:00:55.750 --> 00:01:01.419
So we already have the score component.

14
00:01:01.419 --> 00:01:08.250
So we can just go into VS Code and
go to score.

15
00:01:10.810 --> 00:01:16.220
And at the top here,
I want to add the namespace TM Pro.

16
00:01:18.430 --> 00:01:21.688
And then we need a serialized
field which I'll put above.

17
00:01:21.688 --> 00:01:25.414
For this property and

18
00:01:25.414 --> 00:01:29.968
this needs to be a object of

19
00:01:29.968 --> 00:01:34.522
type TextMesh Pro UGUI and

20
00:01:34.522 --> 00:01:40.121
that will be called Score Text.

21
00:01:40.121 --> 00:01:43.591
We have these two other methods here
we need to add a fixed update method.

22
00:01:50.223 --> 00:01:55.619
And we could update this ScoreText and
reset score or increment score but

23
00:01:55.619 --> 00:02:01.850
okay, we're just going to be a little
bit lazy and updated every frame.

24
00:02:01.850 --> 00:02:04.400
Or sorry, every fixed update,
I should say.

25
00:02:04.400 --> 00:02:08.346
So every fixed update,
update the score string.

26
00:02:12.648 --> 00:02:15.739
So we'll say score text dot text.

27
00:02:16.760 --> 00:02:22.320
That's how we access the actual
string that is string.

28
00:02:22.320 --> 00:02:28.411
We want to set that tot he score value and

29
00:02:28.411 --> 00:02:32.060
cast that to string.

30
00:02:32.060 --> 00:02:36.418
So we'll call the two string method,
that's on integers.

31
00:02:36.418 --> 00:02:41.275
So now that we'll update
our score provided

32
00:02:41.275 --> 00:02:46.271
that we hook up everything
in the inspector.

33
00:02:46.271 --> 00:02:50.196
But let's actually go back to our
slides before we hook things up in

34
00:02:50.196 --> 00:02:55.310
the inspector because we have several
things that we need to hack up there.

35
00:02:55.310 --> 00:02:59.834
But before we do that, there are several
other updates that we want to

36
00:02:59.834 --> 00:03:03.380
do to the GameManager to update our UI.

37
00:03:03.380 --> 00:03:07.302
So, we have a timer, we have Game Over
Text, we need to update those values from

38
00:03:07.302 --> 00:03:11.168
the GameManager because we're keeping
track of them, we have them in the UI,

39
00:03:11.168 --> 00:03:14.180
we just need to To
connect the two together.

40
00:03:14.180 --> 00:03:17.687
So, let's go to the Game Manager and

41
00:03:17.687 --> 00:03:22.110
I believe they have that
open still in VS Code.

42
00:03:23.720 --> 00:03:30.450
So at the top, we'll create
a serialised field called TextMesh Pro.

43
00:03:30.450 --> 00:03:34.540
You doing and I didn't add
the namespace To have TM Pro, so

44
00:03:34.540 --> 00:03:38.480
we got to do that first and
that will clean up that error.

45
00:03:40.490 --> 00:03:44.410
And then we're going to
call this Game Over Text.

46
00:03:46.120 --> 00:03:48.810
We need another one for the timer.

47
00:03:48.810 --> 00:03:52.010
So we'll create a serialized field for
TextMesh Pro.

48
00:03:52.010 --> 00:03:58.911
You go we call this Timer Text So
down here,

49
00:03:58.911 --> 00:04:04.870
we have this method, update timer.

50
00:04:06.130 --> 00:04:10.650
I'm going to uncomment that because now
it is time to update the Timer Text.

51
00:04:11.680 --> 00:04:16.209
And let's actually switch back to our
slides to see how we're going to do that.

52
00:04:17.820 --> 00:04:23.669
So the update timer method is going
to format that floating point

53
00:04:23.669 --> 00:04:30.839
value of the timer into a more human
readable format with minutes and seconds.

54
00:04:30.839 --> 00:04:35.015
So this is all one line,
it's just updating the timer but

55
00:04:35.015 --> 00:04:38.850
there is a lot of stuff
that's being packed in here.

56
00:04:40.070 --> 00:04:48.621
So, first of all, we're using the format
method on the string class within C-Sharp.

57
00:04:48.621 --> 00:04:54.065
And the first number 0 or
1 inside of this format so

58
00:04:54.065 --> 00:05:00.141
here's the first zero here's
the first one is an index so

59
00:05:00.141 --> 00:05:07.920
that's corresponding to additional
arguments in that method so.

60
00:05:07.920 --> 00:05:14.010
Here's zero as the index, and
here's that zeroeth index, and here's one.

61
00:05:14.010 --> 00:05:18.729
And here is that one index and that's
where our two numbers are going to go for

62
00:05:18.729 --> 00:05:20.150
minutes and seconds.

63
00:05:21.970 --> 00:05:26.640
The colon separates the index,
and the formatting.

64
00:05:26.640 --> 00:05:28.250
And the 0's are leading 0'.

65
00:05:28.250 --> 00:05:31.930
So here's the index 0 and
1 and then we have a colon.

66
00:05:31.930 --> 00:05:37.375
And then the formatting for
those is that we want just one place for

67
00:05:37.375 --> 00:05:43.010
the minutes because we only
have 60 seconds in the game.

68
00:05:43.010 --> 00:05:48.820
And then we have two numbers for
the seconds.

69
00:05:48.820 --> 00:05:54.840
So we're going to have a leading
zero there if it's less than 10.

70
00:05:54.840 --> 00:06:00.096
The second part of this is
using the math functions or

71
00:06:00.096 --> 00:06:04.010
math F which is part of Unity.

72
00:06:04.010 --> 00:06:07.110
And we're using what's
called a floor method.

73
00:06:07.110 --> 00:06:09.880
That's common in many math libraries.

74
00:06:09.880 --> 00:06:13.519
You may have come across
this in JavaScript, and

75
00:06:13.519 --> 00:06:19.980
this is going to format that floating
point value into our minutes in seconds.

76
00:06:19.980 --> 00:06:23.676
So if we divide the timer by 60,

77
00:06:23.676 --> 00:06:28.520
that's going to give us our minutes.

78
00:06:28.520 --> 00:06:35.070
If we take the modulus operator of 60,
that's going to give us our seconds.

79
00:06:36.210 --> 00:06:38.640
Okay, so let's type that out.

80
00:06:38.640 --> 00:06:41.010
We're gonna switch back to Unity.

81
00:06:45.150 --> 00:06:49.635
And we will say update timer.

82
00:06:52.841 --> 00:06:59.310
And I'm going to type out that whole
comment just so we know what's going on.

83
00:06:59.310 --> 00:07:05.036
Here so we've got 0 colon 0 colon inside

84
00:07:05.036 --> 00:07:10.934
of these curly braces, and 1 colon 00.

85
00:07:10.934 --> 00:07:17.968
And we'll say the first number 0 and
1 is the index.

86
00:07:17.968 --> 00:07:22.099
Colon separates index and
the formatting, and

87
00:07:22.099 --> 00:07:27.760
that's referring to the colon
inside of the curly braces.

88
00:07:27.760 --> 00:07:32.850
And then the zero, Or

89
00:07:32.850 --> 00:07:35.943
the zeros, are leading zeros.

90
00:07:38.402 --> 00:07:42.070
So now we need to take
that timertext.text, and

91
00:07:42.070 --> 00:07:46.190
remember that's
the TextMesh Pro UGUI object there.

92
00:07:48.000 --> 00:07:51.250
And if I can find my method again,
there it is.

93
00:07:51.250 --> 00:07:58.580
We need to take that text and
we need to apply string.format to it.

94
00:07:58.580 --> 00:08:00.610
And we need this string here.

95
00:08:00.610 --> 00:08:04.390
So, and
of course this is a string literal.

96
00:08:04.390 --> 00:08:07.396
So So it needs to be in quotes as well.

97
00:08:07.396 --> 00:08:11.959
So we'll say zero colon zero and
then after

98
00:08:11.959 --> 00:08:17.411
the closing curly brace
we'll add another colon,

99
00:08:17.411 --> 00:08:21.741
up up our curly braces and say 1:00.

100
00:08:27.441 --> 00:08:32.162
I know this is confusing I promise this
is probably the most confusing part of

101
00:08:32.162 --> 00:08:36.095
this entire game,
is formatting this timer string.

102
00:08:36.095 --> 00:08:40.740
So next, for the arguments we need to say,

103
00:08:40.740 --> 00:08:45.772
math F.floor I need to
take the timer value and

104
00:08:45.772 --> 00:08:52.498
divide by 60 to get the minutes,
then we say math F.floor.

105
00:08:52.498 --> 00:09:00.970
And we say the timer mod 60,
To get the seconds.

106
00:09:05.104 --> 00:09:06.815
All right.

107
00:09:06.815 --> 00:09:07.855
We'll save them.

108
00:09:07.855 --> 00:09:11.935
There's a few more updates we
need to do to the Game Manager.

109
00:09:13.265 --> 00:09:16.680
So let's get started on those
In the game over method,

110
00:09:16.680 --> 00:09:20.480
we need to update the Game Over Text
based on the final score.

111
00:09:20.480 --> 00:09:23.350
So if the player wins,
we need to say you win.

112
00:09:23.350 --> 00:09:25.640
If the player loses,
we need to say you lose.

113
00:09:25.640 --> 00:09:28.650
If there's a tie, we'll say there's a tie.

114
00:09:28.650 --> 00:09:33.530
And then we also need to concatenate
that Game Over Text to some additional

115
00:09:33.530 --> 00:09:36.290
text that says, press space to restart.

116
00:09:38.270 --> 00:09:43.210
So one other thing to keep in mind is
that that Game Over Text shouldn't

117
00:09:43.210 --> 00:09:48.078
always be shown we need to hide it and
show it at the appropriate time.

118
00:09:48.078 --> 00:09:53.943
So to do that we'll actually just
deactivate the game object that the text

119
00:09:53.943 --> 00:10:00.567
component is attached to so we'll say
Game Over Text.Game Object.Set Active and

120
00:10:00.567 --> 00:10:03.498
pass true into that to activate it and

121
00:10:03.498 --> 00:10:07.492
later on we'll deactivate
that in another spot.

122
00:10:07.492 --> 00:10:12.330
So let's switch back to
our Game Manager and

123
00:10:12.330 --> 00:10:18.357
this is going to happen inside
of the game over method.

124
00:10:18.357 --> 00:10:23.010
And there's a few things that
we need to type out here so

125
00:10:23.010 --> 00:10:28.730
we need to display The end
game text if the game's over.

126
00:10:28.730 --> 00:10:33.220
So we'll just create a string
here called Game Over Text.

127
00:10:34.680 --> 00:10:35.450
That's local.

128
00:10:36.490 --> 00:10:42.760
And then we'll say if the players score,

129
00:10:42.760 --> 00:10:47.599
that score value is greater than

130
00:10:47.599 --> 00:10:53.344
the opponent score that score value.

131
00:10:53.344 --> 00:10:58.365
Well then the Game Over Text
should say something

132
00:10:58.365 --> 00:11:04.127
like you win Well in that if
statement with a semicolon.

133
00:11:06.479 --> 00:11:11.994
Then we'll say else if
the player score that score

134
00:11:11.994 --> 00:11:17.390
value is less than
the opponent's score value.

135
00:11:18.790 --> 00:11:26.025
Well then the Game Over Text should
say something like you lose.

136
00:11:26.025 --> 00:11:31.142
And then finally if neither of those

137
00:11:31.142 --> 00:11:35.576
are true then it must be a tie and

138
00:11:35.576 --> 00:11:42.242
things are equal so
we'll say that it is a tie.

139
00:11:42.242 --> 00:11:47.540
And then, finally,
we need to take that string And

140
00:11:47.540 --> 00:11:53.824
we need to assign it to Game Over Text
.txt again remember the Game Over Text

141
00:11:53.824 --> 00:11:59.833
is a TextMesh Pro UGUI object that we
will assign in the inspector soon.

142
00:12:02.444 --> 00:12:06.070
And we need to apply that Game Over Text,
but

143
00:12:06.070 --> 00:12:09.950
we don't wanna just say you win, you lose.

144
00:12:09.950 --> 00:12:14.879
There's a tie, we wanna say that and
we also wanna say to press this

145
00:12:14.879 --> 00:12:20.360
space bar to restart, and we want
a little bit of formatting in there.

146
00:12:20.360 --> 00:12:26.011
We don't want that to just be
right up against this text,

147
00:12:26.011 --> 00:12:32.391
so we'll create two new lines,
and then we can say Press Space,

148
00:12:35.141 --> 00:12:42.230
To restart, And so
that will be our gameovertext.

149
00:12:42.230 --> 00:12:45.140
There's one more thing we need to do here.

150
00:12:45.140 --> 00:12:50.574
If you'll recall, we need to actually
show this because at this point,

151
00:12:50.574 --> 00:12:53.350
the gameovertext will be disabled.

152
00:12:53.350 --> 00:12:55.820
We're gonna disable it soon.

153
00:12:55.820 --> 00:12:56.674
But right now,

154
00:12:56.674 --> 00:13:00.830
we need to enable it because we want to
show this text that we just wrote out.

155
00:13:03.010 --> 00:13:09.517
So show the Game Over Text
once it has been set and we'll

156
00:13:09.517 --> 00:13:16.460
say gameOverText.gameObject.setActive
it's true.

157
00:13:17.540 --> 00:13:20.030
And that will activate the game object.

158
00:13:21.260 --> 00:13:22.570
So let's save that.

159
00:13:24.450 --> 00:13:29.720
And let's do one more
update to the Game Manager.

160
00:13:31.720 --> 00:13:34.420
And that is under the RestartGame.

161
00:13:34.420 --> 00:13:38.950
So when the game restarts,
we want to hide that text.

162
00:13:38.950 --> 00:13:43.852
So let's switch back,
go down to the restart method.

163
00:13:48.932 --> 00:13:52.313
So in Game Manager Restart Game,

164
00:13:52.313 --> 00:13:57.744
we want to hide the end In
the game text will say the same

165
00:13:57.744 --> 00:14:02.941
thing gameovertext.game
object.setactive and

166
00:14:02.941 --> 00:14:06.450
instead of true will say false.

167
00:14:06.450 --> 00:14:10.857
And that will hide the game object and
it won't be visible.

168
00:14:13.102 --> 00:14:16.140
So, we'll save that.

169
00:14:16.140 --> 00:14:20.983
And now we have a couple of things
that we need to hook up in Unity

170
00:14:20.983 --> 00:14:24.440
that we have neglected
up until this point.

171
00:14:28.754 --> 00:14:33.611
So we have all of our bits of UI here,
but I'm going to go to

172
00:14:33.611 --> 00:14:39.083
the Game Manager because if you'll
recall in the Game Manager,

173
00:14:39.083 --> 00:14:45.420
we created those TextMesh Pro UGUI slots,
we need to populate them.

174
00:14:45.420 --> 00:14:49.360
We created the player score
slots that we never populated.

175
00:14:49.360 --> 00:14:51.600
So we need to drag that stuff over.

176
00:14:52.610 --> 00:14:56.817
So the Game Over Text will drag there,

177
00:14:56.817 --> 00:15:02.075
will drag the Timer Text there,
we can drag just

178
00:15:02.075 --> 00:15:07.201
the Player Game Object to
one of these slots and

179
00:15:07.201 --> 00:15:11.415
it's looking for a score component.

180
00:15:11.415 --> 00:15:17.098
So it will automatically grab
the score component and then for

181
00:15:17.098 --> 00:15:23.667
opponent we need to do the same thing
now on the player and the opponent.

182
00:15:25.844 --> 00:15:28.080
There's a few things we
need to hook up as well.

183
00:15:28.080 --> 00:15:33.710
We have this UI here, but
we never filled in this value.

184
00:15:33.710 --> 00:15:38.110
So we need to for the player,
get the player score and

185
00:15:38.110 --> 00:15:40.610
make sure that gets updated.

186
00:15:41.990 --> 00:15:46.050
And then for the opponent So,
we need to grab the opponent score.

187
00:15:47.990 --> 00:15:49.100
Make sure that gets updated.

188
00:15:50.600 --> 00:15:51.950
So now we'll save the scene.

189
00:15:53.500 --> 00:15:57.150
And if we hit play,
if everything went well,

190
00:15:57.150 --> 00:16:01.970
we should see a timer that starts
with a minute on the clock.

191
00:16:01.970 --> 00:16:04.744
Okay, we should be able to hit
space to start the game and

192
00:16:04.744 --> 00:16:06.230
this text should disappear.

193
00:16:07.440 --> 00:16:10.880
The timer should start running.

194
00:16:10.880 --> 00:16:12.930
It is not we'll investigate that.

195
00:16:14.210 --> 00:16:20.154
But it does look like the scoring
is happening successfullly.

196
00:16:22.754 --> 00:16:27.653
So that's good, But

197
00:16:27.653 --> 00:16:32.240
let's see why that timer
might not be updating.

198
00:16:34.090 --> 00:16:43.786
So we've got Timer Text in the Game
Manager And where does this get updated?

199
00:16:43.786 --> 00:16:49.494
Update timer, Okay,

200
00:16:49.494 --> 00:16:53.096
so we called it in start,

201
00:16:53.096 --> 00:16:58.545
but, I missed a step.

202
00:16:58.545 --> 00:17:04.906
In fixed update we never
actually update the timer.

203
00:17:09.031 --> 00:17:13.176
So we'll add the update timer method to
fixed update because we need to update

204
00:17:13.176 --> 00:17:14.590
that every fixed update.

205
00:17:17.620 --> 00:17:19.944
And if I switch back to Unity.

206
00:17:25.990 --> 00:17:33.346
And then hit Play,
Now the Timer Text should update.

