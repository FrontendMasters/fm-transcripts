WEBVTT

1
00:00:00.000 --> 00:00:03.984
[MUSIC]

2
00:00:03.984 --> 00:00:08.171
&gt;&gt; Aaron Frost: I'm gonna explain the
pattern real quick because you guys have

3
00:00:08.171 --> 00:00:12.928
been seeing this pattern, and
I've been vague about what is it doing.

4
00:00:12.928 --> 00:00:19.020
It's not as simple as it looks, okay?

5
00:00:20.580 --> 00:00:23.612
I know this looks like
just some simple syntax.

6
00:00:23.612 --> 00:00:26.987
And I'm saying find the name and
find the age, and pull them out.

7
00:00:26.987 --> 00:00:28.387
That's what we're doing.

8
00:00:28.387 --> 00:00:30.310
It's actually a little
bit more complicated.

9
00:00:33.580 --> 00:00:36.800
Whenever you see a brace on the left.

10
00:00:36.800 --> 00:00:41.870
If I see a brace on the left it means
the thing on the right had better be

11
00:00:41.870 --> 00:00:48.200
an object, or
I'm gonna get an error ,okay?

12
00:00:48.200 --> 00:00:51.490
So yeah, like any time you try and
use this pattern if it's not an object,

13
00:00:51.490 --> 00:00:52.720
we're in trouble, okay?

14
00:00:52.720 --> 00:00:56.030
And I'll show you how
you can get into that.

15
00:00:56.030 --> 00:00:59.420
And the object on the right must
have those properties that were say.

16
00:00:59.420 --> 00:01:04.436
It's got to have, if I say to structure
a name an age out of this thing,

17
00:01:04.436 --> 00:01:09.835
it better have a name and an age
otherwise we're gonna get an error, okay?

18
00:01:09.835 --> 00:01:12.070
And this is called an irrefutable pattern.

19
00:01:13.670 --> 00:01:15.947
Can anyone say whatever irrefutable means?

20
00:01:15.947 --> 00:01:22.201
I can quote if someone gives
an irrefutable testimony that means.

21
00:01:22.201 --> 00:01:23.890
&gt;&gt; Off Camera 1: It can't be refuted?

22
00:01:23.890 --> 00:01:26.946
[LAUGH]
&gt;&gt; Aaron Frost: It's the opposite of being

23
00:01:26.946 --> 00:01:28.263
able to refute.

24
00:01:28.263 --> 00:01:31.528
&gt;&gt; Off Camera 1: [CROSSTALK]
&gt;&gt; Aaron Frost: It's completely qualified,

25
00:01:31.528 --> 00:01:33.900
you can't argue with it at all.

26
00:01:33.900 --> 00:01:36.150
It is what it is, it's irrefutable, okay?

27
00:01:37.290 --> 00:01:40.850
And this pattern, when we write
it like this, is irrefutable.

28
00:01:40.850 --> 00:01:44.790
So if we write like this and I say name.

29
00:01:44.790 --> 00:01:46.950
It's gotta be there, or
we're gonna get an error.

30
00:01:46.950 --> 00:01:48.597
Okay, and that's not very forgiving.

31
00:01:48.597 --> 00:01:53.580
And everyone in this room's like dude,
JavaScript's way more forgiving them that.

32
00:01:53.580 --> 00:01:55.220
Why isn't that being forgiving on this?

33
00:01:55.220 --> 00:01:56.790
So let me show you a little bit.

34
00:02:00.690 --> 00:02:05.060
So here's an example of
where it would freak, okay?

35
00:02:05.060 --> 00:02:08.560
So if I tried to pull an address
out of this person, and

36
00:02:08.560 --> 00:02:10.950
we can clearly see on line one,
there's no address.

37
00:02:12.060 --> 00:02:16.140
We're gonna get an error on this one,
okay?

38
00:02:17.840 --> 00:02:18.820
So it's gonna throw.

39
00:02:20.010 --> 00:02:25.180
It's gonna say some sort of I was able to
find this proper that you're looking for.

40
00:02:25.180 --> 00:02:27.610
The pattern didn't match,
not a good pattern.

41
00:02:28.820 --> 00:02:31.580
I'm not sure where it will end officially,
but

42
00:02:31.580 --> 00:02:36.550
you're gonna get an error
on the line of code, okay?

43
00:02:36.550 --> 00:02:38.910
So how do we get past this now?

44
00:02:38.910 --> 00:02:41.260
We need some sort of forgivable pattern,
right?

45
00:02:41.260 --> 00:02:47.960
And so they implemented, and this is
what changed majorly, earlier this year.

46
00:02:47.960 --> 00:02:52.920
It was set in stone, and
maybe it was towards the end of last year.

47
00:02:52.920 --> 00:02:59.910
I was solid, the structuring was done, and
then they busted out this pattern stuff.

48
00:02:59.910 --> 00:03:01.570
And I think it made it better.

49
00:03:01.570 --> 00:03:03.650
But let me explain it to you guys so

50
00:03:03.650 --> 00:03:08.020
that we can kinda rest assured
knowing everything's good.

51
00:03:08.020 --> 00:03:12.570
So if I do that, you see what I did there?

52
00:03:12.570 --> 00:03:13.430
See what's going on there?

53
00:03:13.430 --> 00:03:15.230
I got a question mark before the address.

54
00:03:16.510 --> 00:03:19.380
We're good again, okay?

55
00:03:19.380 --> 00:03:26.956
Question mark means maybe, possibly,
not 100%, like try though.

56
00:03:26.956 --> 00:03:30.182
If it is good, if it is not undefined.

57
00:03:30.182 --> 00:03:31.917
Undefined is good, okay?

58
00:03:31.917 --> 00:03:34.590
So this is what you are gonna do.

59
00:03:34.590 --> 00:03:37.306
Everyone is like okay,
I'm gonna try this on the traceur-repl.

60
00:03:37.306 --> 00:03:37.815
It doesn't work yet.

61
00:03:37.815 --> 00:03:38.840
It doesn't work yet on the traceur-repl.

62
00:03:38.840 --> 00:03:42.140
So just stay with me cuz
it doesn't work yet.

63
00:03:43.240 --> 00:03:44.650
And I don't feel worse in Firefox either.

64
00:03:45.850 --> 00:03:50.580
So, it forgives address from missing,
what are our agent name,

65
00:03:50.580 --> 00:03:53.600
they're like what if they're missing.

66
00:03:55.700 --> 00:03:57.490
What are we gonna do on those ones?

67
00:03:58.880 --> 00:04:02.446
So are we gonna copy?

68
00:04:02.446 --> 00:04:05.936
Are we're gonna give everyone
their own refutable property and

69
00:04:05.936 --> 00:04:09.210
say this actually doesn't
even have to be a person.

70
00:04:09.210 --> 00:04:15.980
You could pass me a book, and it doesn't
even have an age, a name, or an address.

71
00:04:15.980 --> 00:04:19.880
It's just a thing with a page number and
that's it.

72
00:04:21.160 --> 00:04:24.650
So we could make every
single thing refutable, or

73
00:04:24.650 --> 00:04:29.300
you could make the whole
pattern irrefutable.

74
00:04:29.300 --> 00:04:30.630
Yeah, reputable sorry.

75
00:04:32.270 --> 00:04:33.100
Yeah.

76
00:04:33.100 --> 00:04:36.290
&gt;&gt; Off Camera 2: Somebody is just kinda
saying why a question mark before variable

77
00:04:36.290 --> 00:04:37.401
name, why not after?

78
00:04:37.401 --> 00:04:39.650
And then,
results work in function signatures.

79
00:04:41.620 --> 00:04:46.847
&gt;&gt; Aaron Frost: Yeah, the same question
is yes, the first question, why?

80
00:04:46.847 --> 00:04:52.212
&gt;&gt; Multiple: [CROSSTALK]
&gt;&gt; Aaron Frost: Yeah,

81
00:04:52.212 --> 00:04:53.796
I mean, I think you're.

82
00:04:57.596 --> 00:04:59.561
&gt;&gt; Aaron Frost: I might not be
the best guy to ask that question,

83
00:04:59.561 --> 00:05:00.850
cuz I wasn't in the meetings.

84
00:05:02.760 --> 00:05:06.410
But I'm sure someone at
some point said that.

85
00:05:06.410 --> 00:05:10.230
I mean, I'm sure that whoever asked
this question wasn't the first person.

86
00:05:10.230 --> 00:05:12.410
Someone asked that question before.

87
00:05:12.410 --> 00:05:15.070
It was decided that it would be first for
a reason.

88
00:05:15.070 --> 00:05:18.422
&gt;&gt; Off Camera 3: [INAUDIBLE] operator,
and it's also before.

89
00:05:18.422 --> 00:05:21.342
&gt;&gt; Aaron Frost: Is it before [INAUDIBLE]
Maybe that's where they got it then.

90
00:05:21.342 --> 00:05:23.264
Is the [INAUDIBLE]
operator a question mark?

91
00:05:23.264 --> 00:05:23.850
&gt;&gt; Off Camera 3: Yeah.
&gt;&gt; Aaron Frost: Okay,

92
00:05:23.850 --> 00:05:25.900
maybe that's where they
pulled it from then.

93
00:05:26.940 --> 00:05:27.690
That's good to know.

94
00:05:27.690 --> 00:05:28.340
Thanks for sharing that.

95
00:05:30.170 --> 00:05:31.870
Any other questions?

96
00:05:31.870 --> 00:05:34.590
Yeah.
&gt;&gt; Off Camera 4: What happens if the name

97
00:05:34.590 --> 00:05:35.780
isn't found it, there's an error.

98
00:05:36.920 --> 00:05:38.804
If you use name later as an undefined?

99
00:05:38.804 --> 00:05:39.396
&gt;&gt; Aaron Frost: It's still defined.

100
00:05:39.396 --> 00:05:40.958
&gt;&gt; Off Camera 4: Okay.
&gt;&gt; Aaron Frost: Yeah, yeah, yeah,

101
00:05:40.958 --> 00:05:42.300
yeah definitely.

102
00:05:42.300 --> 00:05:43.960
So, there's two kinds on undefined, right?

103
00:05:45.510 --> 00:05:48.200
Well, depends on who you talk to.

104
00:05:48.200 --> 00:05:51.140
You try and use the word undeclared, and
people are like, there's no such thing.

105
00:05:51.140 --> 00:05:51.910
No, I mean there is.

106
00:05:53.390 --> 00:05:56.150
If I try to reference a variable
that's never even been mentioned,

107
00:05:56.150 --> 00:06:00.280
whether below or above, that actually
is like a runtime error, right.

108
00:06:01.430 --> 00:06:04.140
But if I try and reference
something that's just not defined.

109
00:06:04.140 --> 00:06:06.410
It doesn't have a value, it's declared but

110
00:06:06.410 --> 00:06:11.200
it doesn't have a value,
that's just undefined, right?

111
00:06:11.200 --> 00:06:13.390
And that may not throw an error.

112
00:06:13.390 --> 00:06:17.500
Whereas an undeclared definitely
throws an error, right?

113
00:06:17.500 --> 00:06:21.530
These will be treated as undefined,
they won't be treated as undeclared.

114
00:06:22.840 --> 00:06:25.280
If you're using the refutability.

115
00:06:25.280 --> 00:06:28.854
If you're using irrefutable,
it's like it's undeclared.

116
00:06:28.854 --> 00:06:32.410
&gt;&gt; Off Camera 5: [INAUDIBLE]
&gt;&gt; Aaron Frost: It comes after.

117
00:06:32.410 --> 00:06:32.920
I don't know why.

118
00:06:32.920 --> 00:06:37.633
I'm sure that Douglas Crockford
tried to get it after then.

119
00:06:37.633 --> 00:06:39.352
&gt;&gt; Multiple: [LAUGH]
&gt;&gt; Aaron Frost: He did a lot of things to

120
00:06:39.352 --> 00:06:41.510
try and emulate a lot, just like

121
00:06:43.365 --> 00:06:47.930
which everyone's opinions were shared,
and this is where it ended so.

122
00:06:47.930 --> 00:06:48.830
This is what it is.

123
00:06:48.830 --> 00:06:51.940
And because you can't break the internet,
I don't think it's gonna change.

