WEBVTT

1
00:00:00.000 --> 00:00:04.384
[MUSIC]

2
00:00:04.384 --> 00:00:06.237
&gt;&gt; Aaron Frost: Last call for
questions on destructuring.

3
00:00:06.237 --> 00:00:08.950
Still got time, so we're gonna
try this out for a few minutes.

4
00:00:08.950 --> 00:00:11.727
&gt;&gt; Speaker 2: What are the best
benefits of an array destructure?

5
00:00:11.727 --> 00:00:14.420
&gt;&gt; Aaron Frost: Man,
that's a good question, okay.

6
00:00:14.420 --> 00:00:17.845
So I've been meaning to talk about

7
00:00:17.845 --> 00:00:23.710
the specific benefits that we get out of
each feature and I've been forgetting.

8
00:00:23.710 --> 00:00:27.116
So I was like, I told them to
softball me the question if I forget.

9
00:00:27.116 --> 00:00:35.304
So destructuring doesn't have
performance improvements, right?

10
00:00:35.304 --> 00:00:39.900
Nothing that I just showed you is
something you can't already do.

11
00:00:39.900 --> 00:00:42.030
Do you guys agree?

12
00:00:42.030 --> 00:00:44.890
We've always been able to
do what I just showed you.

13
00:00:44.890 --> 00:00:47.430
This is the sugar on top
of the syntax though.

14
00:00:47.430 --> 00:00:51.050
It just makes it sweeter to see and
easier to code and

15
00:00:51.050 --> 00:00:53.660
maintain and to just visualize.

16
00:00:53.660 --> 00:00:55.040
That make sense?

17
00:00:55.040 --> 00:01:00.830
So some of the things we've talked about
do have some performance impacts and

18
00:01:00.830 --> 00:01:07.630
this may have some micro benefits, or
whatever the opposite of a benefit is.

19
00:01:07.630 --> 00:01:09.870
But I think that they're
probably negligible.

20
00:01:09.870 --> 00:01:10.620
So, yeah.

21
00:01:11.790 --> 00:01:13.150
Do I like Diet Coke?

22
00:01:13.150 --> 00:01:15.829
Dude, actually I hate Diet Coke,
I really do.

23
00:01:15.829 --> 00:01:17.666
But it's the only diet drink he had.

24
00:01:17.666 --> 00:01:20.354
And so, good question, though.

25
00:01:20.354 --> 00:01:24.957
Anyone else, any questions?

26
00:01:24.957 --> 00:01:30.900
&gt;&gt; Speaker 3: You said that the question
mark thing isn't implemented yet.

27
00:01:30.900 --> 00:01:33.388
Is there any-
&gt;&gt; Aaron Frost: Is there any way you guys

28
00:01:33.388 --> 00:01:35.067
can try this out,
is what you want to know.

29
00:01:35.067 --> 00:01:37.990
&gt;&gt; Speaker 3: Now, also,
is there a timeline when?

30
00:01:37.990 --> 00:01:39.976
&gt;&gt; Aaron Frost: No.
&gt;&gt; Speaker 3: Is there-

31
00:01:39.976 --> 00:01:40.973
&gt;&gt; Aaron Frost: Geez.

32
00:01:40.973 --> 00:01:45.900
&gt;&gt; Speaker 3: Next version of Chrome,
ten versions of Chrome from-

33
00:01:45.900 --> 00:01:46.975
&gt;&gt; Aaron Frost: I have no idea, man.

34
00:01:46.975 --> 00:01:50.878
Yeah, I didn't prepare this
presentation that well.

35
00:01:50.878 --> 00:01:56.784
[LAUGH] I would've had to get
into Google's V8 bug log and

36
00:01:56.784 --> 00:02:03.560
see where it's at and then everything and
I just didn't do that.

37
00:02:04.750 --> 00:02:05.860
It's slowly trickling out.

38
00:02:05.860 --> 00:02:09.860
When you get on to the compatibility list,
I mean, like I said earlier,

39
00:02:09.860 --> 00:02:13.730
some of them say green but
it's really kind of only partial.

40
00:02:13.730 --> 00:02:19.900
Like I told you earlier,
Firefox claims let's on this list but

41
00:02:19.900 --> 00:02:22.076
it doesn't respect temporal dead zone.

42
00:02:23.210 --> 00:02:27.820
And it still has statements and
expressions, which aren't a thing.

43
00:02:27.820 --> 00:02:29.950
So it's like,
is that a real implementation?

44
00:02:29.950 --> 00:02:30.680
Should it be green?

45
00:02:30.680 --> 00:02:32.160
Should it be lighter green?

46
00:02:32.160 --> 00:02:34.739
Can I use it if it's kind of implemented?

47
00:02:34.739 --> 00:02:37.109
It's greenish.

48
00:02:38.640 --> 00:02:40.800
Maybe some of these should be greenish,
and

49
00:02:40.800 --> 00:02:44.250
destructuring is definitely one of those.

50
00:02:44.250 --> 00:02:47.390
But if you guys wanna
try it out real quick.

51
00:02:47.390 --> 00:02:52.679
So if we say var (name,

52
00:02:52.679 --> 00:02:59.033
age, address) = person.

53
00:03:02.581 --> 00:03:05.402
&gt;&gt; Aaron Frost: It didn't fail, okay?

54
00:03:05.402 --> 00:03:09.110
So, okay, so

55
00:03:09.110 --> 00:03:13.570
I wrote the chapter on destructuring,
that was one of the first ones I wrote and

56
00:03:13.570 --> 00:03:18.000
when I say first,
I mean it was like two years ago, okay?

57
00:03:18.000 --> 00:03:21.880
And the idea of patterns,

58
00:03:22.970 --> 00:03:26.810
I didn't even have the word
pattern in the chapter.

59
00:03:26.810 --> 00:03:29.350
It wasn't a thing that I
needed to teach people.

60
00:03:30.530 --> 00:03:31.560
And it kind of came up later.

61
00:03:31.560 --> 00:03:36.537
And then the idea of irrefutable patterns
versus refutable patterns was something

62
00:03:36.537 --> 00:03:41.597
that came out later and I was like, okay,
so throw chapter away, rewrite chapter.

63
00:03:41.597 --> 00:03:43.470
I had to kinda start over.

64
00:03:43.470 --> 00:03:49.740
And so, these things are changing, and
this is obviously an implementation.

65
00:03:49.740 --> 00:03:54.759
Firefox, or Mozilla, I should say,
probably built this when,

66
00:03:54.759 --> 00:04:00.052
remember I told you we talked
about the ES4 ES3 stalemate?

67
00:04:00.052 --> 00:04:03.363
So, Firefox, they didn't stop,
neither did Adobe.

68
00:04:03.363 --> 00:04:07.080
They didn't just like well,
we're gonna sandbag our language.

69
00:04:07.080 --> 00:04:09.430
They're over there implementing stuff,
right?

70
00:04:09.430 --> 00:04:16.520
You guys can go to Mozilla's Bugzilla
instance and you can see code commits on

71
00:04:16.520 --> 00:04:21.210
destructuring and generators,
clear back in 2006 and 07.

72
00:04:21.210 --> 00:04:23.140
So they were working on this
stuff during those stalemates.

73
00:04:23.140 --> 00:04:27.120
They were still forging ahead and
adding new features.

74
00:04:27.120 --> 00:04:29.954
And it actually helped in the long run,
because now that they're having

75
00:04:29.954 --> 00:04:32.370
conversations about well,
how should destructuring work,

76
00:04:32.370 --> 00:04:36.510
they have some really valuable input,
because they've already implemented it.

77
00:04:36.510 --> 00:04:41.957
And so like the destructure that
you're gonna see in Firefox,

78
00:04:41.957 --> 00:04:47.220
or like this one that we see in Traceur,
they're not solid.

79
00:04:47.220 --> 00:04:52.260
And they're working on them,
but it's tough.

80
00:04:52.260 --> 00:04:56.300
It sucks, cuz some of the stuff
you can kind of play around with.

81
00:04:56.300 --> 00:05:00.120
But we're still kind of cutting edge on

82
00:05:00.120 --> 00:05:02.790
a lot of this where we're not gonna be
able to mess around with a lot of it, so.

83
00:05:03.920 --> 00:05:08.782
But, again, destructuring is
mostly just the sugar on top of

84
00:05:08.782 --> 00:05:12.345
things you could already
do in the language.

85
00:05:12.345 --> 00:05:15.540
So good question.

86
00:05:15.540 --> 00:05:17.730
Great, great, great, great question man.

87
00:05:18.940 --> 00:05:24.782
So, okay, all right, do you guys wanna
to try it out for a few minutes?

88
00:05:24.782 --> 00:05:29.790
Maybe try some destructuring
in a method signature.

89
00:05:31.080 --> 00:05:34.120
Go ahead and call a method in destructure,
its return value.

90
00:05:35.310 --> 00:05:42.220
See if anyone wants to try and destructure
like a canvas bitarray, sounds fun, right?

91
00:05:43.280 --> 00:05:44.730
I'll try and do that while we're working.

92
00:05:45.870 --> 00:05:47.680
But also, if you wanna read about them,

93
00:05:47.680 --> 00:05:51.290
and the refutable matching, here's
two links that you can go to as well.

94
00:05:52.950 --> 00:05:57.040
If you just go to the Harmony proposals
page, there's one called destructuring and

95
00:05:57.040 --> 00:05:58.980
one called refutable matching.

96
00:06:00.040 --> 00:06:05.210
And if you just go check those out,
that is what you will use.

