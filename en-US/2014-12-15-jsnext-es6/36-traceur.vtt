WEBVTT

1
00:00:00.000 --> 00:00:03.899
[MUSIC]

2
00:00:03.899 --> 00:00:07.560
&gt;&gt; Aaron Frost: I've got this let class,
okay, and I've got a generator in it.

3
00:00:07.560 --> 00:00:10.446
let.js has a generator in it,
don't ask me why.

4
00:00:10.446 --> 00:00:13.250
So you wanna use a generator, but

5
00:00:13.250 --> 00:00:16.880
you need it to compile into a language
that even ES5 could speak, right?

6
00:00:16.880 --> 00:00:19.145
Because you have to support Legacy, okay?

7
00:00:19.145 --> 00:00:23.808
Cool, so I've got this generator
class that's gonna do this code, and

8
00:00:23.808 --> 00:00:26.860
I want to compile it with Traceur now.

9
00:00:26.860 --> 00:00:28.660
So let me show you how to
get Traceur installed.

10
00:00:40.609 --> 00:00:41.720
&gt;&gt; Aaron Frost: Can you
guys see this okay?

11
00:00:42.880 --> 00:00:43.380
That too big?

12
00:00:45.500 --> 00:00:52.360
Okay, I'm gonna see into source and
cd es, okay.

13
00:00:53.360 --> 00:01:00.643
So the first thing you gonna do
is say npm install -g traceur.

14
00:01:00.643 --> 00:01:04.299
Okay so it just goes out and
global installs the Traceur utility for

15
00:01:04.299 --> 00:01:05.220
your computer.

16
00:01:06.260 --> 00:01:09.400
They threw it on npm even though it's,
yeah.

17
00:01:09.400 --> 00:01:11.970
So yeah, there you go, that's Traceur.

18
00:01:11.970 --> 00:01:16.511
So now from the command line you've got,
&gt;&gt; Aaron Frost: Traceur, so

19
00:01:16.511 --> 00:01:20.130
you can do Traceur things from
the command line now, okay.

20
00:01:20.130 --> 00:01:25.340
And it's got a huge health file, to kinda
guide you through what it's gonna do.

21
00:01:25.340 --> 00:01:28.710
And if you have any questions,
there's a lot of help out there online.

22
00:01:29.790 --> 00:01:33.226
So a lot of people using it.

23
00:01:33.226 --> 00:01:36.518
And there's a bunch of
flags you can give it,

24
00:01:36.518 --> 00:01:39.570
like if you wanted to not use for-of's.

25
00:01:39.570 --> 00:01:45.655
You can say for-of = --four-of = false,

26
00:01:45.655 --> 00:01:50.660
--classes true, stuff like that.

27
00:01:50.660 --> 00:01:56.850
Okay, so you can include experimental
stuff, you can include block binding.

28
00:01:58.100 --> 00:02:00.016
Anyway, there's a lot of
stuff that you can do.

29
00:02:00.016 --> 00:02:03.313
So we've got this lead.jsk and
I'm gonna go ahead and

30
00:02:03.313 --> 00:02:06.765
compile this into a generator
real quick using Traceur.

31
00:02:08.450 --> 00:02:09.890
So let's clear this out.

32
00:02:09.890 --> 00:02:15.197
So I'm gonna say traceur,

33
00:02:15.197 --> 00:02:20.733
I want you to write my out into

34
00:02:20.733 --> 00:02:28.824
samples.temp.let.tcr.js, okay?

35
00:02:28.824 --> 00:02:39.370
And the script is samples.let.js, okay?

36
00:02:39.370 --> 00:02:40.240
So everyone see what I did there?

37
00:02:40.240 --> 00:02:41.340
I'm gonna hit Enter.

38
00:02:42.450 --> 00:02:46.957
Aw, I hate live coding but
when it works, how good does that feel?

39
00:02:46.957 --> 00:02:48.861
&gt;&gt; Students: [LAUGH]
&gt;&gt; Aaron Frost: My gosh, I was so worried.

40
00:02:48.861 --> 00:02:53.117
Okay, so now over here we've got this
temp directory, where we've got let.,

41
00:02:53.117 --> 00:02:55.760
let's delete that guy
cuz he's just confusing.

42
00:02:55.760 --> 00:02:59.740
So we've got this thing
that I just created, and

43
00:02:59.740 --> 00:03:04.390
you're like wow, it made all that for
a frigging generator?

44
00:03:04.390 --> 00:03:08.420
Well yeah, there's no Traceur
makes generator work in ES5 okay.

45
00:03:08.420 --> 00:03:10.570
So this is what Traceur's all about.

46
00:03:10.570 --> 00:03:16.586
It's about making it so you can write
ES6 and have it run in ES5 Lant, okay?

47
00:03:16.586 --> 00:03:22.157
So there's a problem though and that is,
like this line by itself, like let's say

48
00:03:22.157 --> 00:03:27.830
that this line, this file represented all
of my code from all like all my libraries.

49
00:03:27.830 --> 00:03:29.310
I compiled it all into one line.

50
00:03:30.840 --> 00:03:35.290
I don't have the Traceur runtime, so
when it tries to say $traceurRuntime

51
00:03:35.290 --> 00:03:38.660
do all these crazy thing,
it's gonna actually freak out.

52
00:03:38.660 --> 00:03:43.577
So you guys are good.

53
00:03:43.577 --> 00:03:48.292
Are you guys gonna believe
I actually just forgot

54
00:03:48.292 --> 00:03:53.014
the flag to include the runtime,
let's try it.

55
00:03:53.014 --> 00:03:57.459
Include runtime, gosh.

56
00:04:02.159 --> 00:04:03.454
&gt;&gt; Aaron Frost: Hold on.

57
00:04:14.259 --> 00:04:15.656
&gt;&gt; Aaron Frost: What the heck?

58
00:04:36.716 --> 00:04:40.648
&gt;&gt; Aaron Frost: To knife like
a total putz, what is the thing?

59
00:04:40.648 --> 00:04:41.148
&gt;&gt; Speaker 3: Are you
talking about the map files?

60
00:04:42.480 --> 00:04:43.590
&gt;&gt; Aaron Frost: No not the source maps,

61
00:04:43.590 --> 00:04:45.690
I don't care about
the source maps right now.

62
00:04:45.690 --> 00:04:48.171
I can show you source maps, but

63
00:04:48.171 --> 00:04:53.067
it needs to include the Runtime so that-
&gt;&gt; Speaker 4: Put it in your index.html?

64
00:04:53.067 --> 00:04:55.025
&gt;&gt; Aaron Frost: You can throw
it in your index.html but

65
00:04:55.025 --> 00:04:58.183
you can also have the build tool
put it in there for you, right.

66
00:04:58.183 --> 00:04:59.260
&gt;&gt; Speaker 4: Okay.

67
00:04:59.260 --> 00:05:01.484
&gt;&gt; Aaron Frost: So you're gonna
need to put it on your page anyway.

68
00:05:01.484 --> 00:05:04.727
But if you don't have it,
like if you haven't copied it in,

69
00:05:04.727 --> 00:05:06.902
you can make your tool copy it in for you.

70
00:05:06.902 --> 00:05:09.076
So, what is it?

71
00:05:09.076 --> 00:05:10.310
My gosh.

72
00:05:10.310 --> 00:05:13.572
Someone is gonna like look at this and
laugh at me.

73
00:05:13.572 --> 00:05:16.310
Anyway, okay, sorry it's not important.

74
00:05:16.310 --> 00:05:17.990
That's how you compile it.

75
00:05:17.990 --> 00:05:21.680
But we kind of need a more programmatic
approach, like we're not gonna sit here

76
00:05:21.680 --> 00:05:25.130
and write command lines,
like commands to compile our stuff, right?

77
00:05:25.130 --> 00:05:28.900
So I'm gonna show you guys grunt-traceur,
if that's okay.

78
00:05:30.740 --> 00:05:35.040
So, if we say gihub, and
we're gonna say grunt-traceur.

79
00:05:37.170 --> 00:05:39.750
So, grunt-traceur is awesome.

80
00:05:39.750 --> 00:05:46.500
There's also a gulp traceur and
then there's EF6FI also can do traceur.

81
00:05:47.500 --> 00:05:53.250
But, essentially how you run it,
it's actually pretty easy.

82
00:05:53.250 --> 00:05:58.940
So let me go ahead and
open up a sample project I created.

83
00:06:03.480 --> 00:06:05.630
So we're gonna do this grunt-tracer test.

84
00:06:08.770 --> 00:06:13.730
So we have this let stuff here and
we have my generators.

85
00:06:13.730 --> 00:06:17.829
And we have a my generator and we want it
to compile into this ES5 directory, okay,

86
00:06:17.829 --> 00:06:19.260
each one of them.

87
00:06:19.260 --> 00:06:23.280
So I made this grunt file.

88
00:06:23.280 --> 00:06:24.430
Who here is familiar with Grunt?

89
00:06:25.900 --> 00:06:33.470
We have some people familiar with that,
that's good.

90
00:06:41.928 --> 00:06:44.124
&gt;&gt; Aaron Frost: Okay,
I'll just minimize this.

91
00:06:44.124 --> 00:06:48.790
So you have to add this traceur
config to your new config.

92
00:06:49.990 --> 00:06:55.379
And so I'm gonna say includeRuntime,
use commonjs modules,

93
00:06:55.379 --> 00:06:59.963
have blockBinding: true and
experimental: true.

94
00:06:59.963 --> 00:07:03.117
And for those who are kinda paying
attention, when we ran Traceur

95
00:07:03.117 --> 00:07:07.050
from the command line and it showed
us all the flags, those are options.

96
00:07:07.050 --> 00:07:11.310
So you can use those same options in here
in the Grunt plugin, it will go ahead and

97
00:07:11.310 --> 00:07:12.140
break them out for you.

98
00:07:13.450 --> 00:07:18.250
And then, so here's my build,
is my custom build.

99
00:07:18.250 --> 00:07:23.346
So I'm gonna say from the current
working directory which is JavaScript,

100
00:07:23.346 --> 00:07:26.560
take everything that's .js and

101
00:07:26.560 --> 00:07:31.070
write it into the ES5 directory,
a Traceur version of itself.

102
00:07:31.070 --> 00:07:35.839
So from here we can say
grunt-traceurcustom and

103
00:07:35.839 --> 00:07:40.837
it tells us,
I don't know if you guys can see this,

104
00:07:40.837 --> 00:07:45.742
sorry, my terminal in
WebStorm's kinda small.

105
00:07:45.742 --> 00:07:50.759
It tells me that it compiled let,
that it compiled my generator and

106
00:07:50.759 --> 00:07:56.953
if we come up here and we look in the ES5
directory, it went ahead and compiled it.

107
00:07:56.953 --> 00:08:00.735
So because I compiled them into
separate files, it went ahead and

108
00:08:00.735 --> 00:08:04.679
it included the runtime in both of
them which is kinda lame, right?

109
00:08:05.690 --> 00:08:08.590
So let's go back to our grunt file, and

110
00:08:08.590 --> 00:08:11.150
say just go ahead or
write all of them to the same file.

111
00:08:11.150 --> 00:08:18.660
So let's just say destination is app.js.

112
00:08:18.660 --> 00:08:24.652
We'll run it again, okay, bollocks.

113
00:08:30.320 --> 00:08:31.574
&gt;&gt; Aaron Frost: Sure.

114
00:08:36.197 --> 00:08:37.654
&gt;&gt; Aaron Frost: Is that
what they're gonna do?

115
00:08:41.250 --> 00:08:43.628
&gt;&gt; Aaron Frost: Anyway,
I'm kind of freaking out here on site,

116
00:08:43.628 --> 00:08:46.596
cuz we're overdoing,
I'm trying to hurry and get it done.

117
00:08:46.596 --> 00:08:49.684
But using grunt-traceur this
is how you do it and you,

118
00:08:49.684 --> 00:08:53.108
if you guys are like hey I'm
gonna do this on my own projects,

119
00:08:53.108 --> 00:08:55.950
you'd make sure you have
all the flags turned on.

120
00:08:55.950 --> 00:08:58.685
If you have something that's
not working you'd like,

121
00:08:58.685 --> 00:09:01.652
well generators isn't working so
we're gonna take it out or

122
00:09:01.652 --> 00:09:04.402
I really want classes so
make sure classes is turned on.

123
00:09:04.402 --> 00:09:09.219
You can turn source maps on so that if you
get an error inline like in this wonky

124
00:09:09.219 --> 00:09:14.400
looking code that it builds out for
you, no one wants to debug this, right.

125
00:09:14.400 --> 00:09:15.780
This looks really scary.

126
00:09:15.780 --> 00:09:19.089
We can turn on source maps and so if
there's ever an error, you click on it and

127
00:09:19.089 --> 00:09:21.290
it takes you back to your original code.

128
00:09:21.290 --> 00:09:22.880
So it makes it easier to troubleshoot.

129
00:09:22.880 --> 00:09:26.160
So make sure you get
source maps turned on, but

130
00:09:26.160 --> 00:09:28.868
you can actually have Traceur
as part of your build process.

131
00:09:28.868 --> 00:09:33.677
And I'm guessing one day once everything's
solidified more and Traceur's stronger,

132
00:09:33.677 --> 00:09:35.727
this is what most frameworks will do,

133
00:09:35.727 --> 00:09:38.505
is have a Traceur build as
part of their build step.

134
00:09:38.505 --> 00:09:42.349
So you guys got an introduction to
Traceur, go ahead and try to out on your

135
00:09:42.349 --> 00:09:46.759
own time though, write some simple stuff
like we wrote today after each section and

136
00:09:46.759 --> 00:09:49.420
try and get Traceur to to
build into a file for you.

