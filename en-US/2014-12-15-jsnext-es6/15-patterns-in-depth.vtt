WEBVTT

1
00:00:00.000 --> 00:00:03.823
[MUSIC]

2
00:00:03.823 --> 00:00:06.110
&gt;&gt; Aaron Frost: So I've kind of showed
you how you would use patterns.

3
00:00:06.110 --> 00:00:09.400
Let's talk about
the intricacies of the patterns.

4
00:00:10.990 --> 00:00:17.410
So if I tried to pull a out of
empty object, it's going to throw.

5
00:00:18.960 --> 00:00:23.090
If I refute the whole thing and
I try and pull a out of it and

6
00:00:23.090 --> 00:00:25.500
assign it to x,
x is just gonna be undefined.

7
00:00:27.989 --> 00:00:32.000
If I try and pull a out of 0,

8
00:00:32.000 --> 00:00:37.460
I'm going to get undefined, as long as
I've made the whole thing refutable.

9
00:00:38.620 --> 00:00:43.610
If I just refute a in an empty object,
I'm still okay.

10
00:00:43.610 --> 00:00:50.010
And if I only refute a on 0, like I'm
trying to pull a out of this primitive,

11
00:00:51.190 --> 00:00:55.500
but I didn't refute the whole pattern,
then it's going to freak out.

12
00:00:55.500 --> 00:00:59.430
Cuz the second it gets into this pattern,
it's gonna try to treat it like an object,

13
00:00:59.430 --> 00:01:00.610
which is you know make you freak out.

14
00:01:00.610 --> 00:01:04.790
So you'd have to refute the whole
thing if it wasn't an object so.

15
00:01:04.790 --> 00:01:06.570
Was that too much?

16
00:01:07.990 --> 00:01:16.042
No, we're good, cuz I've got more.
&gt;&gt; Aaron Frost: So

17
00:01:16.042 --> 00:01:19.070
here on the first one,
we refuted the whole, entire pattern.

18
00:01:20.300 --> 00:01:25.130
And we've said pull a out of undefined and

19
00:01:25.130 --> 00:01:30.730
set it equal to x and if that's
undefined then the default value is 1.

20
00:01:30.730 --> 00:01:33.583
So, in the first line
x is going to equal 1.

21
00:01:33.583 --> 00:01:35.140
Everyone see that?

22
00:01:35.140 --> 00:01:36.410
We're good.
Okay.

23
00:01:36.410 --> 00:01:38.160
In the second one, I'm only refuting a.

24
00:01:40.520 --> 00:01:44.730
So I've got the brace at the front,
which means

25
00:01:44.730 --> 00:01:49.240
it's going to expect what's ever on the
right of the equal sign to be an object.

26
00:01:49.240 --> 00:01:52.240
Which undefined isn't,
so it's gonna throw.

27
00:01:52.240 --> 00:01:55.600
Even though I'm trying to say,
well I mean if it's empty,

28
00:01:55.600 --> 00:01:58.100
if it's undefined, just make it 1.

29
00:01:58.100 --> 00:02:02.708
Well, your pattern wasn't
the kind that can escape errors,

30
00:02:02.708 --> 00:02:08.747
you'd need to refute the whole thing if
you're gonna possibly get a 1 in there.

31
00:02:08.747 --> 00:02:13.553
And then again, if you just refuted
a single property on an empty object,

32
00:02:13.553 --> 00:02:17.057
as long as it's an empty
object you're good to go,.

33
00:02:17.057 --> 00:02:18.610
So good question.

34
00:02:19.690 --> 00:02:21.830
Diego says, do I want to throw errors?

35
00:02:24.700 --> 00:02:27.652
I don't know, you may.
&gt;&gt; Speaker 2: It was I think [CROSSTALK]

36
00:02:27.652 --> 00:02:28.401
&gt;&gt; Aaron Frost: If you're writing

37
00:02:28.401 --> 00:02:31.030
a framework it may be more important
than if you're up to [CROSSTALK]

38
00:02:31.030 --> 00:02:32.410
&gt;&gt; Speaker 2: Again, I think they were

39
00:02:32.410 --> 00:02:36.746
kind of asking earlier, somebody was
saying it kind of looks like you're just

40
00:02:36.746 --> 00:02:40.048
refuting every object everywhere.
&gt;&gt; Aaron Frost: That's the thing,

41
00:02:40.048 --> 00:02:44.901
that's why I was like dude I'm not sure
that the first time I read this I was like

42
00:02:44.901 --> 00:02:47.347
explain to me when I wouldn't refute.

43
00:02:47.347 --> 00:02:53.400
It's just gonna be like a pattern with
a ton of question marks peppered in.

44
00:02:53.400 --> 00:02:56.784
Like why wouldn't I just
refute the whole thing?

45
00:02:56.784 --> 00:02:58.494
And that's a good question,man.

46
00:02:58.494 --> 00:03:03.004
And they may change it in the next version
because I think everyone is gonna wonder

47
00:03:03.004 --> 00:03:04.340
that same exact thing.

48
00:03:04.340 --> 00:03:06.780
I wondered it the first time I saw it and
tried it out, too.

49
00:03:06.780 --> 00:03:10.552
Yeah?
&gt;&gt; Speaker 3: I'm sorry I know you already

50
00:03:10.552 --> 00:03:16.130
said this, but can you have
a default value if you don't refute?

51
00:03:16.130 --> 00:03:17.727
&gt;&gt; Aaron Frost: So-

52
00:03:17.727 --> 00:03:20.240
&gt;&gt; Speaker 3: I mean, like your default

53
00:03:20.240 --> 00:03:24.775
value seems to imply irrefutable.
&gt;&gt; Aaron Frost: Yes, so check this out,

54
00:03:24.775 --> 00:03:26.040
as long as the key was there.

55
00:03:27.200 --> 00:03:28.560
So, can I actually do this here?

56
00:03:37.989 --> 00:03:40.110
&gt;&gt; Aaron Frost: Okay, so if I say

57
00:03:48.404 --> 00:03:50.091
&gt;&gt; Speaker 3: Okay

58
00:03:50.091 --> 00:03:52.818
yeah.

59
00:03:52.818 --> 00:04:02.510
&gt;&gt; Aaron Frost: Sorry.
&gt;&gt; Aaron Frost: What the French?

60
00:04:06.180 --> 00:04:06.830
I don't know.

61
00:04:06.830 --> 00:04:09.342
You should be able to.

62
00:04:09.342 --> 00:04:13.400
I don't think this is the working
implementation cuz this should work and

63
00:04:13.400 --> 00:04:14.190
it's not so.

64
00:04:15.500 --> 00:04:18.032
So, yeah good question though.
&gt;&gt; Speaker 2: So is it just work like

65
00:04:18.032 --> 00:04:23.369
essentially like using the double pipe,
like if it's falsy it'll just go

66
00:04:23.369 --> 00:04:27.290
to your defaults or is it for undefined?
&gt;&gt; Aaron Frost: I

67
00:04:27.290 --> 00:04:28.600
think it's just undefined.

68
00:04:28.600 --> 00:04:30.360
It's not falsy.

69
00:04:30.360 --> 00:04:32.540
Yeah, it's not falsy.

70
00:04:32.540 --> 00:04:36.938
And we'll get into default values in a
second, so we'll talk about what triggers

71
00:04:36.938 --> 00:04:42.020
that assignment expression.

72
00:04:42.020 --> 00:04:46.459
Does anyone have any questions about this,
about these patterns with default values?

73
00:04:47.570 --> 00:04:48.290
So far we're good.

74
00:04:50.390 --> 00:04:52.686
How awesome is this one.

75
00:04:52.686 --> 00:04:57.013
Someone asked about nested objects.

76
00:04:57.013 --> 00:04:58.450
What was your name?

77
00:04:58.450 --> 00:05:01.570
&gt;&gt; Kim: Kim.
&gt;&gt; Aaron Frost: Kim.

78
00:05:01.570 --> 00:05:04.600
So Kim you asked about nested objects.

79
00:05:04.600 --> 00:05:06.870
So this is nested objects.

80
00:05:06.870 --> 00:05:10.940
So I'm gonna highlight,
the stuff that matters.

81
00:05:12.800 --> 00:05:15.070
So we're trying to do structure.

82
00:05:15.070 --> 00:05:18.780
So we said, find the b property and
pull the c out of it.

83
00:05:20.410 --> 00:05:21.760
The sun is bad.

84
00:05:21.760 --> 00:05:23.160
Pull the c out of it.

85
00:05:23.160 --> 00:05:29.410
But we didn't add any refutability
to this, so this is irrefutable.

86
00:05:29.410 --> 00:05:32.200
So when we're trying to pull c,
out of that and

87
00:05:32.200 --> 00:05:34.200
it's not there, it's gonna throw an error.

88
00:05:36.530 --> 00:05:39.800
But maybe we can do an example.

89
00:05:39.800 --> 00:05:41.995
Maybe I have another
site where we do this.

90
00:05:41.995 --> 00:05:48.426
But if I wanted that to be forgiving,
we could just refute that one piece,

91
00:05:48.426 --> 00:05:52.630
and then it wouldn't
matter what b is equal to.

92
00:05:52.630 --> 00:05:57.191
It would accept it because it's refutable.

93
00:05:57.191 --> 00:06:03.560
And then over here we refuted
the whole entire statement.

94
00:06:03.560 --> 00:06:08.509
So nothing needs to be anything really.

95
00:06:08.509 --> 00:06:11.982
Everything will equal
undefined if we don't.

96
00:06:11.982 --> 00:06:14.535
This whole side could be undefined and

97
00:06:14.535 --> 00:06:19.250
because we've refuted the whole side,
we should be safe.

98
00:06:19.250 --> 00:06:21.510
So that's nested.

99
00:06:21.510 --> 00:06:23.190
I think I have some more
examples of it though.

100
00:06:24.710 --> 00:06:26.680
Yeah, sorry nested, I skipped this.

101
00:06:26.680 --> 00:06:30.560
I even have a slide saying I skipped this,
but I forgot that I wrote.

102
00:06:32.890 --> 00:06:38.730
Okay, so if I wanna pull out address and
I don't necessary

103
00:06:38.730 --> 00:06:43.350
want an address variable all I really
care about is the city, states and zip.

104
00:06:43.350 --> 00:06:45.220
This is how you would do that.

105
00:06:45.220 --> 00:06:49.980
You would say find the address and
pull out all the city, state and

106
00:06:49.980 --> 00:06:53.110
zip out of it and
make those three variables.

107
00:06:53.110 --> 00:06:56.719
So, I actually here I wouldn't
end up with an address variable.

108
00:06:56.719 --> 00:07:01.562
So yeah, any questions

109
00:07:01.562 --> 00:07:07.530
there?
&gt;&gt; Aaron Frost: Everyone

110
00:07:07.530 --> 00:07:08.982
see what's going on?

111
00:07:08.982 --> 00:07:13.769
So here, as far as of available
variables I could reference,

112
00:07:13.769 --> 00:07:17.460
I'd have name, age, city, state, and zip.

113
00:07:17.460 --> 00:07:18.420
I wouldn't have anything else.

114
00:07:21.630 --> 00:07:23.918
Any questions?

115
00:07:23.918 --> 00:07:26.021
You guys all kind of look glazed over so

116
00:07:26.021 --> 00:07:30.210
I feel like I'm not doing a very good
job right now I feel like I've lost it.

117
00:07:30.210 --> 00:07:32.490
We're good?
&gt;&gt; Speaker 2: It's good,

118
00:07:32.490 --> 00:07:36.958
it's just a lot of, I mean,
this is pretty straightforward syntax, but

119
00:07:36.958 --> 00:07:40.258
would call that or with a question mark-
&gt;&gt; Aaron Frost: With that last slide?

120
00:07:40.258 --> 00:07:40.944
&gt;&gt; Speaker 2: For extension and

121
00:07:40.944 --> 00:07:44.231
the defaults, that one's, kind of, I would
need a minute to destructure that one in

122
00:07:44.231 --> 00:07:44.876
my head.
&gt;&gt; Aaron Frost: Yeah,

123
00:07:44.876 --> 00:07:47.843
come punch me in the face and it will
probably look better afterwards, right?

124
00:07:47.843 --> 00:07:49.210
&gt;&gt; Speaker 2: [LAUGH]

125
00:07:49.210 --> 00:07:49.914
&gt;&gt; Aaron Frost: Yeah, I know it's

126
00:07:49.914 --> 00:07:51.400
a lot to take in.

127
00:07:51.400 --> 00:07:53.410
So, here's how I can alias the city,
state, and

128
00:07:53.410 --> 00:07:57.410
zip again on the nested pattern.

129
00:07:57.410 --> 00:07:59.510
Did anyone wanna ask questions?

130
00:07:59.510 --> 00:08:01.480
Like, I'm just gonna show this,
just to get the look back?

131
00:08:01.480 --> 00:08:01.980
Hold on?

132
00:08:02.980 --> 00:08:09.640
Cuz this is where everyone kinda was like,
no, yes, five, whatever.

133
00:08:09.640 --> 00:08:15.410
Yeah, so all right, you still have smiles,
I'm gonna leave it up here.

134
00:08:15.410 --> 00:08:21.388
Does anyone have any questions
about it we talked about?

135
00:08:21.388 --> 00:08:23.515
Internets, you guys just get it?
&gt;&gt; Speaker 2: So

136
00:08:23.515 --> 00:08:28.267
that one lingering question I
mentioned was Ben had asked

137
00:08:28.267 --> 00:08:32.064
can you destructure every property?
&gt;&gt; Aaron Frost: Yeah, so

138
00:08:32.064 --> 00:08:33.940
can I destructure with like a star?

139
00:08:35.140 --> 00:08:35.640
No.

140
00:08:36.880 --> 00:08:38.600
No, no, no and let me explain why.

141
00:08:41.010 --> 00:08:45.510
So, Ben was saying, can I do this?

142
00:08:47.930 --> 00:08:50.117
Ben wanted to do this.

143
00:08:50.117 --> 00:08:55.317
So we got person

144
00:08:55.317 --> 00:09:00.921
up there, var.

145
00:09:00.921 --> 00:09:03.010
Ben wanted to know if I could do that.

146
00:09:03.010 --> 00:09:07.050
And I just have it throw
all the properties from

147
00:09:07.050 --> 00:09:10.230
person on to the current
scope as variables.

148
00:09:10.230 --> 00:09:12.344
No, you can't do that.

149
00:09:12.344 --> 00:09:18.013
So, so yeah, you're welcome.

150
00:09:18.013 --> 00:09:23.458
Hopefully, no one else wanted to do that
cuz I don't think I was a very good idea.

151
00:09:23.458 --> 00:09:30.168
But yeah, so you can't do that,
star is not part of this pattern.

152
00:09:30.168 --> 00:09:32.199
I know it's part of a lot of patterns and

153
00:09:32.199 --> 00:09:36.040
we've kind of we see star ,we hear
the word pattern and we're like star.

154
00:09:36.040 --> 00:09:40.270
No, there's no a star in this pattern.

