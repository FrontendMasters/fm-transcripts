WEBVTT

1
00:00:00.000 --> 00:00:03.999
[MUSIC]

2
00:00:03.999 --> 00:00:05.140
&gt;&gt; Aaron Frost: This is how they do that.

3
00:00:05.140 --> 00:00:08.940
They're like, let's standardize it, so
they have to find a standardization

4
00:00:08.940 --> 00:00:12.560
committee that can kind of be
an independent party and own the API.

5
00:00:12.560 --> 00:00:15.970
And then they can just
implement it as JavaScript.

6
00:00:16.980 --> 00:00:21.934
So Netscape reached out to this
committee called Ecma, and

7
00:00:21.934 --> 00:00:27.990
it's independent of Microsoft and
it's independent of Netscape too.

8
00:00:27.990 --> 00:00:31.850
And so in June of 97,
they sit down in 96 and they're like, hey,

9
00:00:31.850 --> 00:00:36.670
let's read the whole thing and we need
like x months to approve the whole thing.

10
00:00:36.670 --> 00:00:43.240
So they finally get it approved in
June of 97 the JS, the JavaScript API

11
00:00:43.240 --> 00:00:48.170
becomes EcmaScript API, the interface
that other people can implement.

12
00:00:50.340 --> 00:00:54.605
And it's the official API for ECMA,
the official scripting API for Ecma, and

13
00:00:54.605 --> 00:00:57.070
a bunch of people
immediately jump on board.

14
00:00:57.070 --> 00:01:00.491
People who have interest
in the language and

15
00:01:00.491 --> 00:01:06.608
in implementing their own scripting
language jump on board with EcmaScript.

16
00:01:06.608 --> 00:01:07.382
That's good.

17
00:01:07.382 --> 00:01:09.470
They're able to roll
out some new features.

18
00:01:09.470 --> 00:01:10.278
They roll out ES2.

19
00:01:10.278 --> 00:01:13.345
They roll out ES3.

20
00:01:13.345 --> 00:01:15.334
Everything's going well.

21
00:01:15.334 --> 00:01:20.614
They still have a ton of ideas though
when they get it is AS3 out in 99,

22
00:01:20.614 --> 00:01:25.720
and before we keep going,
I'm going to define what Ecma is.

23
00:01:25.720 --> 00:01:28.950
Does anyone know what EcmaScript is?

24
00:01:28.950 --> 00:01:33.290
Hold on, well let me talk before I
define EcmaScript vs JavaScript.

25
00:01:33.290 --> 00:01:36.050
Does anyone not understand the difference
between EcmaScript and JavaScript?

26
00:01:37.150 --> 00:01:39.150
So, I'm gonna just go
through it real quick.

27
00:01:39.150 --> 00:01:40.680
So EcmaScript is language spec,

28
00:01:40.680 --> 00:01:44.190
like they say this object
will have this method on it.

29
00:01:44.190 --> 00:01:48.600
And if you call it, you should expect
to pass at these parameters, and

30
00:01:48.600 --> 00:01:51.880
it will return you this
type of a return value.

31
00:01:51.880 --> 00:01:53.780
So just kind of is a specification for

32
00:01:53.780 --> 00:01:59.680
a language, and JavaScript is
a language that implements that spec.

33
00:01:59.680 --> 00:02:02.350
And there's other languages
implement it as well.

34
00:02:02.350 --> 00:02:05.302
So the docs for EcmaScript,
has anyone read them?

35
00:02:05.302 --> 00:02:09.180
They're not humanly digestible very well.

36
00:02:09.180 --> 00:02:14.480
They're tough to read unless you
have a solid degree, and I don't.

37
00:02:14.480 --> 00:02:15.880
So they're still really, really hard for

38
00:02:15.880 --> 00:02:20.980
me to digest, and the JavaScript docs
however will help you write code.

39
00:02:20.980 --> 00:02:24.010
They explain to you, hey, this is you're
gonna call it and run it in JavaScript.

40
00:02:25.130 --> 00:02:31.018
So there's other implementations
of the EcmaScript API though,

41
00:02:31.018 --> 00:02:35.013
like ActionScript is
based on EcmaScript and

42
00:02:35.013 --> 00:02:38.710
Java's Nashorn is based on EcmaScript.

43
00:02:38.710 --> 00:02:40.084
And there's other out there.

44
00:02:40.084 --> 00:02:42.448
You guys could probably
name a whole bunch more.

45
00:02:42.448 --> 00:02:45.640
But Ecma, it used to stand for

46
00:02:45.640 --> 00:02:51.264
the European Computer
Manufacturer Association,

47
00:02:51.264 --> 00:02:54.470
and that's who they went to.

48
00:02:54.470 --> 00:02:58.908
Netscape goes to this European Computer
Manufacturers Association to get this to

49
00:02:58.908 --> 00:03:00.651
be their center scripting API.

50
00:03:00.651 --> 00:03:02.867
But later they just rebrand as Ecma, so

51
00:03:02.867 --> 00:03:07.108
it doesn't mean European Computer
Manufacturers Association anymore.

52
00:03:07.108 --> 00:03:08.606
Ecma is a noun.

53
00:03:08.606 --> 00:03:11.401
It's a name that they call themselves.

54
00:03:11.401 --> 00:03:13.105
It's a proper name.

55
00:03:13.105 --> 00:03:17.252
So their role is to
facilitate discussions and

56
00:03:17.252 --> 00:03:22.900
make sure everyone is participating and
keeping it positive.

57
00:03:25.190 --> 00:03:30.970
Does anyone, and Ecma puts a committee in
charge of steering the EcmaScript API.

58
00:03:30.970 --> 00:03:32.680
Does anyone know the name
of the committee?

59
00:03:35.070 --> 00:03:38.955
Besides him?

60
00:03:38.955 --> 00:03:40.581
&gt;&gt; Speaker 2: TC 39.
&gt;&gt; Aaron Frost: TC 39, yeah.

61
00:03:40.581 --> 00:03:43.920
So TC 39, TC stands for
technical committee.

62
00:03:43.920 --> 00:03:48.250
I don't know what the 39 is,
but it's called TC 39.

63
00:03:48.250 --> 00:03:52.162
So Technical Committee 39,
and the TC 39 is,

64
00:03:52.162 --> 00:03:55.900
they're the ones currently
guiding it today.

65
00:03:55.900 --> 00:03:58.537
Does anyone have any friends on the TC 39?

66
00:03:58.537 --> 00:03:59.826
Acquaintances?

67
00:03:59.826 --> 00:04:02.346
No, okay.

68
00:04:02.346 --> 00:04:03.000
One guy.

69
00:04:03.000 --> 00:04:04.110
No one on the chat.

70
00:04:04.110 --> 00:04:07.580
All right, so I'm gonna go back.

71
00:04:07.580 --> 00:04:13.044
So ES3 is 1999, and more people

72
00:04:13.044 --> 00:04:18.166
started implementing this spec.

73
00:04:18.166 --> 00:04:20.642
It's constantly getting implemented, and

74
00:04:20.642 --> 00:04:23.254
browsers are becoming
more important in 99.

75
00:04:23.254 --> 00:04:27.630
Remember we were about to have this
huge boom that's coming up in 2000?

76
00:04:27.630 --> 00:04:34.140
And more people are getting involved
in the technical committee,

77
00:04:34.140 --> 00:04:39.010
more people are caring about
the direction the language.

78
00:04:39.010 --> 00:04:44.263
And they get two releases out,
and then there's this huge gap.

79
00:04:44.263 --> 00:04:47.462
ES3 goes out in 99.

80
00:04:47.462 --> 00:04:51.160
ES4 begins in 2006.

81
00:04:51.160 --> 00:04:56.810
So we have this this notable gap
with not a lot of the middle,

82
00:04:56.810 --> 00:05:03.320
so I wanted to kind of talk about
what happened there real quick.

83
00:05:03.320 --> 00:05:09.285
So IE just kills Netscape,
just blows them out of the water.

84
00:05:09.285 --> 00:05:14.197
Does everyone remember that,
when Internet Explorer was all you used?

85
00:05:14.197 --> 00:05:17.102
And in 2003 Netscape ends.

86
00:05:17.102 --> 00:05:20.220
They have one thing they do
before they go under though.

87
00:05:20.220 --> 00:05:24.090
They're like, open source all of it,
so they open source all their stuff.

88
00:05:25.280 --> 00:05:29.414
And IE kind of gets their glory days,
and the sandbagging happens.

89
00:05:29.414 --> 00:05:32.404
And we have this huge gap where
there's not a lot of innovation.

90
00:05:32.404 --> 00:05:35.340
The EcmaScript standards body
doesn't have any bite to like,

91
00:05:35.340 --> 00:05:38.392
hey stop doing the things
that you're doing and

92
00:05:38.392 --> 00:05:44.490
everyone stay in together, because no one
is really coming to the meetings anymore.

93
00:05:44.490 --> 00:05:48.438
So it's gonna take a savior to
come back and stop this and

94
00:05:48.438 --> 00:05:53.231
kinda get things back on track, and
then so the browser wars start.

95
00:05:53.231 --> 00:05:59.960
And the guys from Netscape start Mozilla,
and we get Firefox.

96
00:05:59.960 --> 00:06:02.880
I think it wasn't called Firefox,
does anyone remember what it was called?

97
00:06:02.880 --> 00:06:07.110
I think it was like, was it Phoenix?

98
00:06:07.110 --> 00:06:07.806
Something like that.

99
00:06:07.806 --> 00:06:09.150
I can't even remember the first name.

100
00:06:09.150 --> 00:06:11.270
I remember I used it, but
I can't remember what it was called.

101
00:06:12.420 --> 00:06:15.480
Anyway so Mozilla's back.

102
00:06:15.480 --> 00:06:20.580
So Mozilla's new in town, and they care
a lot about the browser, which is awesome.

103
00:06:20.580 --> 00:06:22.460
And in 2006 they're able

104
00:06:23.810 --> 00:06:27.610
to kindle everyone back into
talking about ES4 again.

105
00:06:27.610 --> 00:06:30.930
So that was kind of the big
gap explained there.

106
00:06:30.930 --> 00:06:34.220
That was why there was a big dead time for

107
00:06:34.220 --> 00:06:39.624
JavaScript specifically, and
they start talking about ES4.

108
00:06:39.624 --> 00:06:43.744
They've got a lot of ideas
that they left off back from

109
00:06:43.744 --> 00:06:49.120
1999 when they did ES3, and
some of the ideas conflict.

110
00:06:49.120 --> 00:06:52.090
And the implementations have different
goals, like the different companies

111
00:06:52.090 --> 00:06:56.230
involved need different things
out of EcmaScript, the API.

112
00:06:56.230 --> 00:07:01.262
And Crockford, he's like,
let's get rid of the bad parts.

113
00:07:01.262 --> 00:07:05.635
Let's just keep the good parts,
and Brendan Eich's like, no,

114
00:07:05.635 --> 00:07:11.730
let's get Microsoft to work on this
generatively and and make the specs match.

115
00:07:11.730 --> 00:07:15.802
And Microsoft is like, no, we need to add
all this extra stuff for JScript.Net.

116
00:07:15.802 --> 00:07:19.204
And Adobe's like, dude,
we got Flash stuff going on.

117
00:07:19.204 --> 00:07:22.520
We needed classes and
some other stuff that they needed.

118
00:07:22.520 --> 00:07:24.950
So there's a lot of pull in a bunch
of different directions, right?

119
00:07:24.950 --> 00:07:27.427
So they come up with
these two main pushes.

120
00:07:27.427 --> 00:07:31.820
They're like, hey,
let's do one small release, and

121
00:07:31.820 --> 00:07:36.030
then a bunch of people jump on
that camp and that's called ES3.1.

122
00:07:36.030 --> 00:07:41.690
And then there's another camp that's ES4,
which is significantly bigger.

123
00:07:43.430 --> 00:07:47.630
So in ES1 we've got Mozilla,
and we've got Adobe, and

124
00:07:47.630 --> 00:07:51.810
we've got Opera, and other people.

125
00:07:51.810 --> 00:07:56.800
And on ES4 we've got Microsoft pushing for
ES4, and we've got Yahoo pushing for

126
00:07:56.800 --> 00:08:00.240
ES4, and there's other people
in their camp as well.

127
00:08:00.240 --> 00:08:03.460
And they they spend a lot of
time talking about this, and

128
00:08:03.460 --> 00:08:04.770
they don't do a lot of agreeing.

129
00:08:04.770 --> 00:08:09.820
And when you listen to them talk about it,
there's kind of a falling out where it got

130
00:08:09.820 --> 00:08:15.299
really tough and
not productive in those TC 39 meetings,

131
00:08:15.299 --> 00:08:21.990
and ultimately something's got to give
in order for the language to progress.

132
00:08:21.990 --> 00:08:27.470
And of this fight, though,
at the end they're like, okay, ES3 wins.

133
00:08:27.470 --> 00:08:33.664
The camp that wants to do a much
smaller release, they're gonna win for

134
00:08:33.664 --> 00:08:38.850
now, and
ES4 can become a thing that we do next.

135
00:08:38.850 --> 00:08:44.560
And so
these are the ideas of the two camps.

136
00:08:44.560 --> 00:08:48.670
ES3 was lighter changes, strict mode,
and remove some bad stuff.

137
00:08:48.670 --> 00:08:53.570
Note, don't add any new syntax, and this
is what some people were fighting for.

138
00:08:54.760 --> 00:08:57.840
And then other people want some
heavier changes, classes and

139
00:08:57.840 --> 00:08:59.090
other stuff like that.

140
00:08:59.090 --> 00:09:03.898
And they ended up giving in,
the ES 4 people to

141
00:09:03.898 --> 00:09:08.960
ES 3.1, and when you look at it,

142
00:09:08.960 --> 00:09:14.560
a lot of what we're seeing in ES 6 is
this ES 4 stuff that kind of got pushed.

143
00:09:14.560 --> 00:09:19.157
And so in 2008,
the TC39 meets in Oslo, and

144
00:09:19.157 --> 00:09:24.417
everyone agrees, hey ES 4,
we're gonna postpone it.

145
00:09:24.417 --> 00:09:27.093
ES 3.1, that's the new thing, and

146
00:09:27.093 --> 00:09:31.147
to represent all the progress
we've made as a committee and

147
00:09:31.147 --> 00:09:36.437
as the standardization body,
we're gonna rev the name, though, to ES 5.

148
00:09:36.437 --> 00:09:39.500
And we're gonna call it 3.1,
we're gonna make it an official

149
00:09:39.500 --> 00:09:42.860
release we can call ES 5,
which is why wasn't an ES 4.

150
00:09:42.860 --> 00:09:44.740
That's where ES 5 came from.

151
00:09:44.740 --> 00:09:48.170
And then we'll move on from there.

152
00:09:48.170 --> 00:09:50.790
And Brendan sends out
an e-mail the next month.

153
00:09:52.980 --> 00:09:55.850
He's like, hey,
we're working harmoniously now.

154
00:09:55.850 --> 00:09:59.570
Everything's feels like it's going better,
anyway.

155
00:09:59.570 --> 00:10:02.966
All the other features that ever
go into JavaScript are going into

156
00:10:02.966 --> 00:10:04.770
a bucket I'm gonna call Harmony.

157
00:10:04.770 --> 00:10:08.440
So a lot of us have heard Harmony
features, that just means every feature

158
00:10:08.440 --> 00:10:12.520
that we want to implement, whether it's in
the next version or the two versions or

159
00:10:12.520 --> 00:10:16.680
the third version from now,
it goes into this huge harmony bucket.

160
00:10:16.680 --> 00:10:22.081
So in 2008 Brendan kind of emits
the idea of the harmony bucket,

161
00:10:22.081 --> 00:10:25.607
and 2009 ES 5 is officially approved.

162
00:10:25.607 --> 00:10:30.264
5.1 is officially approved in

163
00:10:30.264 --> 00:10:35.252
June of 2011, and currently,

164
00:10:35.252 --> 00:10:41.090
so the ES 6 is finalizing right now.

165
00:10:41.090 --> 00:10:43.895
And they're still making
changes if you believe it,

166
00:10:43.895 --> 00:10:50.340
around modules and
around classes and stuff.

167
00:10:50.340 --> 00:10:54.980
So it's still moving,
even though they're trying to finalize it.

168
00:10:54.980 --> 00:10:57.170
Maybe they'll finalize
it in June of next year.

169
00:10:58.480 --> 00:11:02.565
Browser vendors are currently
working on ES6, and the TC39 is,

170
00:11:02.565 --> 00:11:07.060
while they're talking about some of these
last features for ES6, they're talking

171
00:11:07.060 --> 00:11:10.830
about ES7 already in and kind of nailing
down the proposals for that version.

