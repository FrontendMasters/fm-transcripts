WEBVTT

1
00:00:00.000 --> 00:00:04.199
[MUSIC]

2
00:00:04.199 --> 00:00:05.310
&gt;&gt; Aaron Frost: This is how
we used to do it, right?

3
00:00:05.310 --> 00:00:10.240
At the top of our functions we would have
a person and we would call displayPerson.

4
00:00:10.240 --> 00:00:14.045
And displayPerson would take the incoming
person and it would store its name and

5
00:00:14.045 --> 00:00:18.250
store its age, and it'd make sure that
they weren't undefined or whatever.

6
00:00:18.250 --> 00:00:20.820
And then it would do something with,
display him, yeah?

7
00:00:20.820 --> 00:00:21.770
&gt;&gt; Speaker 2: Somebody had a question on,

8
00:00:21.770 --> 00:00:24.700
wouldn't an object reference
be more declarative?

9
00:00:24.700 --> 00:00:27.170
Looks counter productive at first glance.

10
00:00:27.170 --> 00:00:31.480
&gt;&gt; Aaron Frost: I don't understand what
he means, do you know what he means?

11
00:00:31.480 --> 00:00:33.242
&gt;&gt; Speaker 2: Maybe from
the previous slide there.

12
00:00:36.934 --> 00:00:40.975
&gt;&gt; Speaker 2: An object
reference be more declarative.

13
00:00:40.975 --> 00:00:42.712
I could ask him to clarify it.

14
00:00:42.712 --> 00:00:47.509
&gt;&gt; Aaron Frost: Yeah,
&gt;&gt; Aaron Frost: I mean,

15
00:00:47.509 --> 00:00:51.800
it could be, but not necessarily,
I mean, it depends on what you're doing.

16
00:00:51.800 --> 00:00:54.418
And, and again,
part of this is probably preference,

17
00:00:54.418 --> 00:00:57.929
some people are probably gonna not
like point destructuring reads, and so

18
00:00:57.929 --> 00:01:00.008
they might not use it,
but I really like it.

19
00:01:00.008 --> 00:01:05.090
If he asked that question and
if he clarifies, I mean no.

20
00:01:05.090 --> 00:01:06.800
He says this example is cool, okay.

21
00:01:08.400 --> 00:01:13.180
All right, so yeah, this is how you'd
normally would do it manually, right?

22
00:01:13.180 --> 00:01:17.619
You'd have your person object and you'd
pass it in here and then you pull it apart

23
00:01:17.619 --> 00:01:21.233
and eventually end up doing something
with it to make it display.

24
00:01:23.881 --> 00:01:27.830
&gt;&gt; Aaron Frost: And so, this is kinda how
we've always manually destructured our

25
00:01:27.830 --> 00:01:31.582
stuff in the past, we're now just
kinda have some sugar on it.

26
00:01:31.582 --> 00:01:35.511
And we've spent the first x lines of
our code kind of marking up the top of

27
00:01:35.511 --> 00:01:38.590
the of the function,
getting all these things ready and

28
00:01:38.590 --> 00:01:41.350
making sure that they're not undefined.

29
00:01:41.350 --> 00:01:45.100
But now we can do it just in one line
of code, so instead of having to

30
00:01:45.100 --> 00:01:49.680
pull it apart like this, we can pull
it apart, the syntax is easier.

31
00:01:49.680 --> 00:01:55.300
And we can actually get it
all in one line of code,

32
00:01:55.300 --> 00:01:56.630
do you guys think this is more readable?

33
00:01:58.690 --> 00:02:00.102
Or do you think that was more readable?

34
00:02:03.362 --> 00:02:04.716
&gt;&gt; Aaron Frost: What do you guys think?

35
00:02:04.716 --> 00:02:06.135
&gt;&gt; Speaker 3: I think
that's more readable.

36
00:02:06.135 --> 00:02:07.211
&gt;&gt; Aaron Frost: You think this is?

37
00:02:07.211 --> 00:02:10.709
I think too, but
some people are not sure yet,

38
00:02:10.709 --> 00:02:15.218
some people are like I don't know,
so what about that way?

39
00:02:17.333 --> 00:02:21.680
&gt;&gt; Aaron Frost: You guys think that's
even more readable to do it that way?

40
00:02:23.480 --> 00:02:27.272
So I know that I've got an object
coming in as the first parameter so

41
00:02:27.272 --> 00:02:30.403
I just throw it straight up
into the method signature.

42
00:02:30.403 --> 00:02:32.186
Is that better, or worse?

43
00:02:34.202 --> 00:02:37.633
&gt;&gt; Aaron Frost: And then,
your method body is just,

44
00:02:37.633 --> 00:02:42.402
displayPerson only cares about that now,
right?

45
00:02:42.402 --> 00:02:46.657
It doesn't care about, you know,
pulling things apart, or anything.

46
00:02:46.657 --> 00:02:50.321
You can just kinda put
that all in the language,

47
00:02:50.321 --> 00:02:55.000
so I kind of like this,
I'm super excited about this stuff.

48
00:02:56.060 --> 00:03:00.935
So yeah, for me, this is, and seriously,
no one applauded, with refresh.

49
00:03:00.935 --> 00:03:04.223
&gt;&gt; Students: [LAUGH] [APPLAUSE]
&gt;&gt; Aaron Frost: Maybe someone online did,

50
00:03:04.223 --> 00:03:06.420
we didn't hear them, okay.

51
00:03:06.420 --> 00:03:07.683
&gt;&gt; Speaker 5: The order
here doesn't matter,

52
00:03:07.683 --> 00:03:09.810
so we could switch age and
name and it will still be okay?

53
00:03:09.810 --> 00:03:14.080
&gt;&gt; Aaron Frost: Yeah, cuz there's no
explicit order on an object anyway, right?

54
00:03:14.080 --> 00:03:17.982
Just key-value pairs, but yeah,
if I switched name and then age,

55
00:03:17.982 --> 00:03:21.610
you'd still have a variable called
name with the name value and

56
00:03:21.610 --> 00:03:23.810
a variable called age with age value.

57
00:03:23.810 --> 00:03:28.840
&gt;&gt; Speaker 6: So
you can pass variable and then also pass

58
00:03:28.840 --> 00:03:34.161
with a comma object, close everything in?

59
00:03:34.161 --> 00:03:41.020
So like displayPerson,
I have x and then comma person.

60
00:03:41.020 --> 00:03:47.100
And so
you're passing that into display person.

61
00:03:47.100 --> 00:03:51.290
&gt;&gt; Aaron Frost: So let's copy this over
and we'll get your question going.

62
00:03:52.640 --> 00:03:53.820
So what's your question?

63
00:03:53.820 --> 00:03:57.340
&gt;&gt; Speaker 6: So, I have var x
equals something, I don't care.

64
00:03:59.550 --> 00:04:06.467
So I have a displayPerson x and comma, or-
&gt;&gt; Aaron Frost: Or x, yeah.

65
00:04:06.467 --> 00:04:07.908
&gt;&gt; Speaker 6: Yeah, so
you're passing in like that.

66
00:04:07.908 --> 00:04:11.126
&gt;&gt; Aaron Frost: Yeah, so that means
I'm taking in whatever x is, and

67
00:04:11.126 --> 00:04:15.504
x could be a function, it could be
an object, and it could be undefined.

68
00:04:15.504 --> 00:04:20.570
But this thing has to be an object
cuz if I give that an integer and

69
00:04:20.570 --> 00:04:26.703
it tries to pull the name off of an
integer, off the age, so it'd freak out.

70
00:04:26.703 --> 00:04:29.990
And we'll talk more about
how it's gonna freak out.

71
00:04:29.990 --> 00:04:33.300
But, it's gonna lose
its stuff if I tried to

72
00:04:33.300 --> 00:04:37.270
pass not an object into this destructuring
pattern, it freaks out, yeah?

73
00:04:37.270 --> 00:04:39.120
&gt;&gt; Speaker 7: Kinda related
to what you just said,

74
00:04:39.120 --> 00:04:42.590
the question was,
what if it doesn't have a name property?

75
00:04:42.590 --> 00:04:45.950
Does name come through as null or
undefined, then?

76
00:04:45.950 --> 00:04:47.480
&gt;&gt; Aaron Frost: It can if you tell it to,

77
00:04:47.480 --> 00:04:52.170
but we haven't told it to yet,
right now we're just doing the happy path.

78
00:04:52.170 --> 00:04:55.290
I'll show an example, I promise,
we're gonna get to that.

79
00:04:55.290 --> 00:05:00.054
Whoever asked that question,
cuz it's a great question, Eric.

80
00:05:00.054 --> 00:05:06.020
Okay, yeah, so it's all done

81
00:05:06.020 --> 00:05:10.602
in the method signature and for me we're
gonna get into default values in a second.

82
00:05:10.602 --> 00:05:15.450
See, you can totally destructure and
data proof the function,

83
00:05:15.450 --> 00:05:18.970
zero lines of code in, and
I think it's more readable anyway.

84
00:05:18.970 --> 00:05:21.990
So, your functions will
be less cluttered and

85
00:05:21.990 --> 00:05:23.880
they'll have just more
of what you care about.

86
00:05:26.090 --> 00:05:30.130
So, I think this is the best,
this is the most readable way for me.

87
00:05:30.130 --> 00:05:33.057
If I looked at a function,
I know exactly what's going on here.

88
00:05:37.515 --> 00:05:42.180
&gt;&gt; Aaron Frost: So, remember I said
you could do default values as well?

89
00:05:43.620 --> 00:05:47.451
So, if I wanted to make sure
that there was at least a name.

90
00:05:47.451 --> 00:05:52.499
So, if someone passed in a person that
didn't have a name, I can at least say,

91
00:05:52.499 --> 00:05:57.360
well, at least put No Name Provided or
if there's no age, at least put 0.

92
00:05:57.360 --> 00:06:01.100
Don't let it be undefined,
give me a name so

93
00:06:01.100 --> 00:06:04.490
we can kind of get it all done
up in the method signature.

94
00:06:06.810 --> 00:06:11.000
So, when you couple those two I
think this is where it gets awesome,

95
00:06:11.000 --> 00:06:12.030
I think it's exciting.

96
00:06:14.560 --> 00:06:21.900
So, this is another way you could use it
to destructure your throw error messages.

97
00:06:21.900 --> 00:06:23.300
Yeah, we have a question.

98
00:06:23.300 --> 00:06:26.795
&gt;&gt; Speaker 2: Instead of passing
an object as a parameter could you

99
00:06:26.795 --> 00:06:30.139
pass a variable and
that references that object?

100
00:06:30.139 --> 00:06:33.059
&gt;&gt; Aaron Frost: I'm gonna go
back to the code, is that okay?

101
00:06:33.059 --> 00:06:34.490
I think that's what I was already doing.

102
00:06:36.910 --> 00:06:40.110
So I have a person and
I'm passing the reference.

103
00:06:42.520 --> 00:06:47.140
Is that what the person was asking, cuz-
&gt;&gt; Speaker 2: We'll see here,

104
00:06:47.140 --> 00:06:48.560
they're a few seconds behind us.

105
00:06:50.160 --> 00:06:54.341
&gt;&gt; Aaron Frost: I don't know, there goes-
&gt;&gt; Speaker 6: How do you deal

106
00:06:54.341 --> 00:06:55.892
with the nested?

107
00:06:55.892 --> 00:06:56.590
&gt;&gt; Aaron Frost: Nested?

108
00:06:56.590 --> 00:06:58.700
&gt;&gt; Speaker 6: Yeah, nested.

109
00:06:58.700 --> 00:07:00.770
&gt;&gt; Aaron Frost: You're
like three slides ahead.

110
00:07:00.770 --> 00:07:02.291
Yeah, but that's a good question right?

111
00:07:02.291 --> 00:07:05.490
Cuz not everything's one level deep,
right?

112
00:07:05.490 --> 00:07:09.310
So, we need to know how to do that,
good question, okay.

113
00:07:11.970 --> 00:07:13.110
&gt;&gt; Speaker 2: He said yes, thanks.

114
00:07:13.110 --> 00:07:17.370
&gt;&gt; Aaron Frost: This guy says, ES6, shut
up and take my money, okay, I love it.

