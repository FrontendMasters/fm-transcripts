WEBVTT

1
00:00:00.110 --> 00:00:02.890
&gt;&gt; Nina Zakharenko: We can just
start typing stuff in here, and

2
00:00:02.890 --> 00:00:04.289
seeing how it works.

3
00:00:04.289 --> 00:00:06.480
Python knows about numbers, right?

4
00:00:08.509 --> 00:00:12.086
&gt;&gt; Nina Zakharenko: So we can type some of
that in here, and as we type commands and

5
00:00:12.086 --> 00:00:15.400
press Enter,
we'll instantaneously see the result.

6
00:00:15.400 --> 00:00:19.586
You'll also notice here,
these kinda three arrows,

7
00:00:19.586 --> 00:00:22.500
that indicates a Python REPL prompt.

8
00:00:23.510 --> 00:00:30.229
The result has no symbol indications.

9
00:00:30.229 --> 00:00:34.909
If you see these arrows in the course
website, you just click on

10
00:00:34.909 --> 00:00:40.139
the Copy button on the top right,
and it'll copy without the arrows.

11
00:00:44.290 --> 00:00:49.909
&gt;&gt; Nina Zakharenko: Can also declare some
variables, just gonna say my name is Nina,

12
00:00:49.909 --> 00:00:53.830
I recommend you use your own name.

13
00:00:53.830 --> 00:00:58.563
And then if we wanna see the value of
that variable, we can just type it in and

14
00:00:58.563 --> 00:01:01.889
hit Enter, and
we'll see what's stored in there.

15
00:01:01.889 --> 00:01:03.018
There are three very,

16
00:01:03.018 --> 00:01:06.710
very important methods that we're
gonna be using throughout the class.

17
00:01:06.710 --> 00:01:13.360
So I recommend that you pay attention
to these, the first one is type.

18
00:01:13.360 --> 00:01:16.855
So if you want to know the type
of something in Python,

19
00:01:16.855 --> 00:01:18.649
it's a dynamic language.

20
00:01:18.649 --> 00:01:22.680
We haven't declared that name as a string,
we just set the value.

21
00:01:22.680 --> 00:01:27.498
So if we wanna know what type is,
we call the type method, and

22
00:01:27.498 --> 00:01:33.079
we pass name into it, it'll hopefully
tell us that the class is a str.

23
00:01:33.079 --> 00:01:37.600
The other useful method
in the wrapper is dir.

24
00:01:37.600 --> 00:01:41.804
So if we call the dir built-in method,
and we pass name,

25
00:01:41.804 --> 00:01:44.790
we're gonna see a whole bunch of stuff.

26
00:01:44.790 --> 00:01:49.662
What this is, ignore the stuff
that starts with the underscores,

27
00:01:49.662 --> 00:01:54.970
what this is, is a directory of every
method available on string types.

28
00:01:56.170 --> 00:01:59.005
So if you forget what something is called,

29
00:01:59.005 --> 00:02:02.330
it's always just right there for
you in the REPL.

30
00:02:02.330 --> 00:02:08.036
So let me try one of these,
I can say name.upper(),

31
00:02:08.036 --> 00:02:11.268
and it'll return that for me.

32
00:02:11.268 --> 00:02:18.920
The last very, very useful REPL,
&gt;&gt; Nina Zakharenko: Command is help,

33
00:02:18.920 --> 00:02:24.330
if you're ever feeling lost, or
not sure what a method does?

34
00:02:24.330 --> 00:02:28.215
You can always type in the built-in help,
and

35
00:02:28.215 --> 00:02:31.709
either parse in a type or even a variable.

36
00:02:31.709 --> 00:02:34.922
So if I put, oops, sorry, my mistake,

37
00:02:34.922 --> 00:02:39.660
you have to parse in a type,
here not the name of a variable.

38
00:02:39.660 --> 00:02:44.030
So when we used type earlier,
we saw that the class was str.

39
00:02:44.030 --> 00:02:50.796
So if we did help(str) and press Enter,
we'll see this whole thing come up,

40
00:02:50.796 --> 00:02:55.010
and this is all of the help for
all of the methods.

41
00:02:55.010 --> 00:02:58.403
To quit out of the screen, press Q.

42
00:02:58.403 --> 00:03:02.753
You could also pass in,
you can pass in the type and

43
00:03:02.753 --> 00:03:08.010
a particular method,
to get the help for just that.

44
00:03:08.010 --> 00:03:11.079
So earlier, I used the upper method.

45
00:03:11.079 --> 00:03:16.191
So if I pass in str, which is the type,
and then .upper() to help,

46
00:03:16.191 --> 00:03:21.500
it'll just show me the help and
the documentation for that one method.

47
00:03:21.500 --> 00:03:28.501
And what this method does, it returns a
copy of the string converted to uppercase.

48
00:03:28.501 --> 00:03:33.464
Okay, so if you ever feel like you're
getting lost, you forgot what arguments

49
00:03:33.464 --> 00:03:38.150
a particular methods takes, type,
help, and dir are your best friends.

