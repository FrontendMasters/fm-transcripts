WEBVTT

1
00:00:00.000 --> 00:00:06.701
&gt;&gt; Nina Zakharenko: Let's quickly take
a look at the anatomy of a Python program.

2
00:00:06.701 --> 00:00:09.205
Let me open that in VS Code.

3
00:00:09.205 --> 00:00:13.910
You're not necessarily gonna understand
this code right now and that's fine.

4
00:00:13.910 --> 00:00:17.564
This is what we're going to build
towards in our final exercise, so

5
00:00:17.564 --> 00:00:19.432
just quickly take you through it.

6
00:00:19.432 --> 00:00:24.578
We're gonna use the GitHub search API
to search for popular repositories

7
00:00:24.578 --> 00:00:29.729
based on the language that they're
written in, and the number of stars.

8
00:00:29.729 --> 00:00:34.680
So, this is a method called
createQuery that helps us build

9
00:00:34.680 --> 00:00:40.338
the query string that we're gonna
pass into the GitHub search API.

10
00:00:43.810 --> 00:00:46.560
&gt;&gt; Nina Zakharenko: And
let's start from the bottom here.

11
00:00:46.560 --> 00:00:48.450
This is our main method.

12
00:00:48.450 --> 00:00:52.779
The languages that we're gonna search for
are Python, JavaScript, and Ruby.

13
00:00:52.779 --> 00:00:56.932
And we're gonna call this
repos with most stars method,

14
00:00:56.932 --> 00:01:01.699
passing our languages, and
get that back as a results variable.

15
00:01:01.699 --> 00:01:06.036
Then we're gonna loop
through every result, and

16
00:01:06.036 --> 00:01:12.762
print out the name of the repo, the
language, and how many stars that it has.

17
00:01:12.762 --> 00:01:16.259
And let's look at this
repos_with_most_stars.

18
00:01:16.259 --> 00:01:21.257
The nice thing about VS Code and
the Python extension is if you

19
00:01:21.257 --> 00:01:26.157
mouse over this method,
repos_with_most_stars, and

20
00:01:26.157 --> 00:01:30.571
you Ctrl+click on it,
it'll take you right there.

21
00:01:30.571 --> 00:01:37.070
So this repos_with_most_stars method,
it takes a list of languages.

22
00:01:37.070 --> 00:01:42.030
It takes a default sort, for
this program it's gonna be stars.

23
00:01:42.030 --> 00:01:45.842
And then it takes the order that it's
gonna sort in, which is descending.

24
00:01:45.842 --> 00:01:51.207
We're gonna create our query,
the create_query method we saw above.

25
00:01:51.207 --> 00:01:56.550
We're gonna define some parameters
that we want to be part of our URL.

26
00:01:56.550 --> 00:01:59.385
And then we're gonna pass in the query and

27
00:01:59.385 --> 00:02:03.849
the parameters as part of a request,
using the request library.

28
00:02:03.849 --> 00:02:08.995
We're gonna get back a response
that has a status code.

29
00:02:08.995 --> 00:02:11.570
And we're gonna do a little
bit of checking here.

30
00:02:11.570 --> 00:02:18.789
So, we're using the unauthenticated
GitHub search endpoint here.

31
00:02:18.789 --> 00:02:23.144
If the status code was not 200,
that means some type of error occurred, so

32
00:02:23.144 --> 00:02:26.230
we're gonna raise an exception and
quit our program.

33
00:02:26.230 --> 00:02:30.690
Otherwise, we're going to get
the JSON from the response.

34
00:02:30.690 --> 00:02:34.236
We're going to get the items
key from that JSON, and

35
00:02:34.236 --> 00:02:37.310
then we're gonna return
all of our records.

36
00:02:40.059 --> 00:02:43.331
&gt;&gt; Nina Zakharenko: So
pretty exciting, right?

37
00:02:43.331 --> 00:02:45.959
I'm gonna quickly run this program, and

38
00:02:45.959 --> 00:02:49.800
I don't assume any of you to have it open,
we'll get there.

39
00:02:49.800 --> 00:02:52.846
So in VS Code,
if I want to run the program,

40
00:02:52.846 --> 00:02:57.689
I'd open my command palette,
Cmd + Shift + P or Ctrl + Shift+ P.

41
00:02:57.689 --> 00:03:01.709
Type Python to narrow it down,
and then I'll just select

42
00:03:01.709 --> 00:03:06.732
Run Python File in Terminal,
&gt;&gt; Nina Zakharenko: And

43
00:03:06.732 --> 00:03:08.250
here we go, here's my results.

44
00:03:08.250 --> 00:03:12.047
So, the other interesting thing
about this GitHub search API,

45
00:03:12.047 --> 00:03:14.929
it doesn't always return
all of their results,

46
00:03:14.929 --> 00:03:18.900
it kind of returns the first few
that it finds before it times out.

47
00:03:18.900 --> 00:03:23.593
So, based on this query,
we have freeCodeCamp,

48
00:03:23.593 --> 00:03:29.520
which is a JavaScript
repository with 300,000 stars,

49
00:03:29.520 --> 00:03:32.669
Bootstrap, Vue, React, etc.

50
00:03:32.669 --> 00:03:36.739
A Python repo here, awesome Python,
and a few other things.

51
00:03:36.739 --> 00:03:37.859
Pretty cool, right?

52
00:03:37.859 --> 00:03:38.690
Quick and easy.

