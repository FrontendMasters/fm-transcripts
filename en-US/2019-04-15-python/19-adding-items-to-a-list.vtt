WEBVTT

1
00:00:00.280 --> 00:00:03.450
&gt;&gt; Nina Zakharenko: If we want
to add items to our list,

2
00:00:03.450 --> 00:00:05.150
there's a few ways of doing it.

3
00:00:05.150 --> 00:00:10.669
So let's start with a
&gt;&gt; Nina Zakharenko: New

4
00:00:10.669 --> 00:00:15.730
list of names, and
it just has two items in it.

5
00:00:15.730 --> 00:00:20.940
In order to add something in at the end,
we use the append method like we saw

6
00:00:23.770 --> 00:00:27.140
Earlier so
we just call .append on names and

7
00:00:27.140 --> 00:00:31.240
we pass in the value that we
wanna append to the list.

8
00:00:31.240 --> 00:00:33.150
Now, if we look at names, there are three.

9
00:00:34.320 --> 00:00:37.429
And of course, len of names returns three.

10
00:00:41.710 --> 00:00:47.980
We can also use the insert method, to
insert values into an arbitrary position.

11
00:00:48.990 --> 00:00:56.079
And the insert method takes two variables.

12
00:00:56.079 --> 00:00:59.000
The first is, let's say, it's my_list.

13
00:00:59.000 --> 00:01:03.938
The first is the position that you wanna
insert at, and the second is the value.

14
00:01:07.209 --> 00:01:12.173
&gt;&gt; Nina Zakharenko: So doing that,
if I wanted to insert an item,

15
00:01:12.173 --> 00:01:17.138
a new name Rose,
at the very start of my list,

16
00:01:17.138 --> 00:01:22.110
what I call here, what's the position?

17
00:01:22.110 --> 00:01:23.080
&gt;&gt; Student: Zero.

18
00:01:23.080 --> 00:01:25.438
&gt;&gt; Nina Zakharenko: Position is zero,
why is that?

19
00:01:25.438 --> 00:01:27.542
&gt;&gt; Student2: Zero-based list.

20
00:01:27.542 --> 00:01:30.930
&gt;&gt; Nina Zakharenko: Zero-based
indexing for the list, exactly right.

21
00:01:32.130 --> 00:01:37.410
And then, the second argument would be
Rose, the name that I wanna insert.

22
00:01:37.410 --> 00:01:39.310
So now if I look at my list of names,

23
00:01:39.310 --> 00:01:42.330
we'll see that Rose is right
there in the beginning.

24
00:01:46.120 --> 00:01:50.409
And again, if we forget the order
we can do a help on list.insert.

25
00:01:51.800 --> 00:01:54.670
And insert object before index,

26
00:01:54.670 --> 00:01:58.025
it will give us the arguments index first,
object after.

27
00:01:58.025 --> 00:02:07.340
There is another way of adding to a list.

28
00:02:07.340 --> 00:02:10.788
Let's say we had two lists.

29
00:02:10.788 --> 00:02:11.828
&gt;&gt; [NOISE]

30
00:02:22.657 --> 00:02:24.288
&gt;&gt; Nina Zakharenko: And should you add

31
00:02:24.288 --> 00:02:30.497
a new item to a list but what if you
want to combine two list together?

32
00:02:30.497 --> 00:02:34.971
To do that,
you would use the extend function.

33
00:02:37.490 --> 00:02:40.570
&gt;&gt; Nina Zakharenko: Now if I take a look
at my list of names, it's Nina, Max,

34
00:02:40.570 --> 00:02:42.830
followed by Red, Blue.

35
00:02:42.830 --> 00:02:47.598
That second list was kind of extended
exactly as it is because lists have

36
00:02:47.598 --> 00:02:48.319
an order.

