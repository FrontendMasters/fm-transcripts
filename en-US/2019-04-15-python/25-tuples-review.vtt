WEBVTT

1
00:00:00.270 --> 00:00:06.995
&gt;&gt; Nina Zakharenko: As side note you
can do unpacking kind of the variables

2
00:00:06.995 --> 00:00:12.230
with a list, but it's a lot less common.

3
00:00:12.230 --> 00:00:16.936
Returning kind of a list from a function
isn't quiet as safe because you know that

4
00:00:16.936 --> 00:00:18.467
it's emutable, right?

5
00:00:18.467 --> 00:00:20.791
Maybe it'll get changed
later down the line, and

6
00:00:20.791 --> 00:00:23.380
you won't quite know what to expect.

7
00:00:23.380 --> 00:00:26.060
So I recap of tools.

8
00:00:26.060 --> 00:00:27.420
We have the cheat sheet right here.

9
00:00:27.420 --> 00:00:29.070
What are they used for?

10
00:00:29.070 --> 00:00:31.830
Storing a snapshot of related items.

11
00:00:32.960 --> 00:00:34.730
That belong to a record maybe.

12
00:00:34.730 --> 00:00:39.030
One we don't plan on modifying,
adding or removing the data.

13
00:00:39.030 --> 00:00:42.978
For creation, we use parentheses,
empty parentheses or

14
00:00:42.978 --> 00:00:46.000
the tuple call for an empty tuple.

15
00:00:46.000 --> 00:00:50.700
Or for a tuple with one item, we have to
make sure to insert that trailing comma.

16
00:00:51.870 --> 00:00:56.620
For a tuple with many items,
insert as many commas as you want.

17
00:00:56.620 --> 00:00:59.518
With or without the optional parentheses,

18
00:00:59.518 --> 00:01:04.777
although,
&gt;&gt; Nina Zakharenko: You'll

19
00:01:04.777 --> 00:01:08.950
see it done both ways, right?

20
00:01:08.950 --> 00:01:11.140
Some people use it, some don't.

21
00:01:11.140 --> 00:01:15.560
For the search, methods my_tuple.index or

22
00:01:15.560 --> 00:01:18.160
item in my_tuple works
just the same as list.

23
00:01:18.160 --> 00:01:24.368
Because there's a sequence to the tuple,
things are in a particular position.

24
00:01:24.368 --> 00:01:26.952
Searching for
an item in a large tuple is also slow.

25
00:01:26.952 --> 00:01:30.951
You kind of have to check each
value just like with the list.

26
00:01:30.951 --> 00:01:36.920
Common methods, you can't add or remove
from tuples but the order is preserved.

27
00:01:36.920 --> 00:01:37.765
Is it mutable?

28
00:01:37.765 --> 00:01:41.150
No, is it in-place sortable?

29
00:01:41.150 --> 00:01:43.370
No, because it's not mutable, right.

30
00:01:43.370 --> 00:01:44.670
These things are typed together.

