WEBVTT

1
00:00:00.000 --> 00:00:02.849
&gt;&gt; Nina Zakharenko: Let's
move on to Boolean logic.

2
00:00:02.849 --> 00:00:06.300
We said a little bit of this
at the beginning of class,

3
00:00:06.300 --> 00:00:11.147
when I talked about not using an empty
list as a default keyword agreement.

4
00:00:11.147 --> 00:00:13.331
You saw me use some if statements.

5
00:00:13.331 --> 00:00:18.354
So we're gonna cover Boolean logic,
and you'll kind

6
00:00:18.354 --> 00:00:24.041
of get a better idea of how that
works under the hood in Python.

7
00:00:24.041 --> 00:00:27.740
Someone in the chat was
asking about truthiness, so

8
00:00:27.740 --> 00:00:30.524
we've seen the values True and False.

9
00:00:30.524 --> 00:00:34.705
Those are kind of black and white,
True is true, False is false.

10
00:00:34.705 --> 00:00:41.074
But in Python, truthiness is,
for a particular type,

11
00:00:41.074 --> 00:00:47.590
is the value represented as true or
false under the hood?

12
00:00:47.590 --> 00:00:52.534
And the best way to do that
is to look at Terminal.

13
00:00:56.693 --> 00:01:03.317
&gt;&gt; Nina Zakharenko: Okay, so for integers,
&gt;&gt; Nina Zakharenko: Well,

14
00:01:03.317 --> 00:01:07.756
that's kind of, okay, let's see,
there's a built-in type True, right,

15
00:01:07.756 --> 00:01:11.156
built-in type False,
those things are just true or false.

16
00:01:13.978 --> 00:01:19.109
&gt;&gt; Nina Zakharenko: The shorthand for
figuring out the truthiness of a value, so

17
00:01:19.109 --> 00:01:24.147
if we look at the type of True,
we'll see that it's a bool.

18
00:01:24.147 --> 00:01:28.543
We can use this type, and
pass things into it, and

19
00:01:28.543 --> 00:01:34.732
it will kind of give us a hint of if
they're evaluated to true or false.

20
00:01:34.732 --> 00:01:40.082
I'm just showing you this in the REPL now,
so we can see things live, as I type.

21
00:01:40.082 --> 00:01:44.957
In general, you don't need to
pass these expressions to bool,

22
00:01:44.957 --> 00:01:49.308
because that conversion
happens under the hood, okay?

23
00:01:49.308 --> 00:01:52.514
So for numbers,

24
00:01:52.514 --> 00:01:57.552
the number 0 is false, or

25
00:01:57.552 --> 00:02:02.595
in this case, false-y.

26
00:02:02.595 --> 00:02:08.215
Any other number in Python is truthy,

27
00:02:08.215 --> 00:02:15.772
including negative numbers,
so kind of a gotcha.

28
00:02:15.772 --> 00:02:21.620
Lists, container, lists, tuples,

29
00:02:21.620 --> 00:02:26.759
sets, empty lists are false-y,

30
00:02:26.759 --> 00:02:31.013
so are empty dictionaries,

31
00:02:31.013 --> 00:02:35.813
empty tuples, and empty sets.

32
00:02:35.813 --> 00:02:39.975
Those are all false-y, they're empty,

33
00:02:39.975 --> 00:02:46.225
if the container has any items in it,
then it evaluates to true.

34
00:02:46.225 --> 00:02:52.488
So a list with an item in it, truthy,

35
00:02:52.488 --> 00:02:58.549
a tuple with an item in it, truthy,

36
00:02:58.549 --> 00:03:04.220
a set with an item in it is truthy.

37
00:03:04.220 --> 00:03:11.045
And lastly, a dictionary with
an item in it is truthy, make sense?

38
00:03:11.045 --> 00:03:15.812
0 is falsy, all other numbers
including negatives are truthy,

39
00:03:15.812 --> 00:03:21.373
empty containers are false-y,
containers with items in them are truthy.

40
00:03:21.373 --> 00:03:26.821
And then the None type, just like you'd
kind of expect, the None type is false-y.

41
00:03:31.268 --> 00:03:37.120
&gt;&gt; Nina Zakharenko: Don't forget
not to name your variables True,

42
00:03:37.120 --> 00:03:41.668
False, None, those are keywords.

43
00:03:46.710 --> 00:03:50.406
&gt;&gt; Nina Zakharenko: Remember that
Python kind of considers a string to

44
00:03:50.406 --> 00:03:52.081
be a sequence as well.

45
00:03:52.081 --> 00:03:56.412
We saw that when we tried to
update a set with a string,

46
00:03:56.412 --> 00:04:00.957
it just took all the individual items and
added them in.

47
00:04:00.957 --> 00:04:06.744
So just like with a sequence,
an empty string is false-y,

48
00:04:06.744 --> 00:04:11.161
but a string with
characters in it is truthy.

