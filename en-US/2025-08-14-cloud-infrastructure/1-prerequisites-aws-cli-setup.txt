[00:00:00]
>> Erik Reinert: We are gonna take a quick second here. I just wanna make sure that everyone at least has this stuff set up. There are some requirements here to make sure that we can all get through this together. The first one is just make sure that you have Docker set up, make sure that you've got GO installed, make sure that you've got a GitHub account, make sure that you've got your GCP account, make sure that you got your AWS account and credentials, and then also make sure that you've got a Supabase account.

[00:00:24]
So before I begin, I don't mind taking some time to make sure that everyone has all that stuff set up. So I'm gonna hop out of this real fast and then I'm going to log into my AWS. One second here, okay. I just wanna make sure that you can get to this page right here.

[00:00:47]
So if you need to set up an account, make sure that you get to this page first. I understand this part is somewhat annoying a lot because I've done this a lot, which is just simply getting credentials on aws. If you wanna create a user or create credentials, the easiest way to do it, and if there's people out there who's like, no, no, no, do it this way.

[00:01:09]
This is the easiest way to do it. I'm not telling you it's the most secure way to do it. I'm just telling you the easiest way to do it is go ahead and up at the top, type in IAM and then navigate to the IAM. Do not go to IAM Identity Center.

[00:01:21]
IAM Identity Center is like an entirely separate thing for managing organizations and stuff. You just wanna go to good old IAM. Once you're in IAM, you'll notice that my account IDs up here, all that stuff. If I click on Users on the left, you'll notice that I have some users already created.

[00:01:41]
I can go ahead and create a whole new. And you'll actually notice that I have a user for the course here too. You can create a user by just clicking Create user. Give it a name of whatever you want. So if you wanted it for the course, you'd just be dem-fd-service.

[00:01:57]
That's the actual repo. If you wanted to make it so that you could log into this user and actually access the UI, then you would click this. I don't need to worry about that. So we're just gonna use it for CLI credentials, then hit Next. This is the part that again, people will probably shun me for.

[00:02:17]
But if you click on Attach policies directly, you can then give it existing policies that Amazon kind of has already created for you. But there's one right here that you really want which is just administrator access. This will make it so that if you open it up, it's just star star.

[00:02:32]
It lets you do everything. So just note that this is a root level access user. But again, for what we're doing, it's fine. Click Next and then click Create user down at the bottom right. And so it'll create that user and then once that user is created, you can go to the user itself.

[00:02:56]
And then there will be a tab here that says Security credentials. You just click on that and then you'll see Access keys. Use Access keys to send programmatic calls. You click Create access key and then it'll give you a list again. This is why I don't expect you to know this cuz it's already super easy.

[00:03:16]
It'll give you a list of what things you wanna click. Just click Command Line to use it. With the command line, click I understand at the bottom and then click Next and then click Create access key. What this is gonna do is this is going to create you a access key and a secret access key.

[00:03:35]
B But you can then export those to your shell by basically copying this and pasting it. Obviously don't use these credentials because these are the fake ones that they put in their article. But you can replace the values and then you should be set up with your shell.

[00:03:52]
So once you've got those credentials added to your shell, if you wanna check and make sure that it's working, you can do aws in your shell s3 and then ls so aws space s3 ls. If you hit enter and you either see nothing or something like this happens, then you are connected, you have authenticated.

[00:04:17]
And again, if you see nothing, that's fine too. If you weren't auth, it would just tell you, hey, you're not authenticated.

