WEBVTT

1
00:00:00.160 --> 00:00:04.097
&gt;&gt; Erik Reinert: So now what I'm going to
do is I'm going to go into my terraform

2
00:00:04.097 --> 00:00:07.760
directory and
we're going to set up a couple of files.

3
00:00:07.760 --> 00:00:13.310
The first file we're going to set
up is actually a locals tf and

4
00:00:13.310 --> 00:00:19.600
inside of that locals TF file I'm
going to copy and paste a variable.

5
00:00:19.600 --> 00:00:20.400
Just one variable.

6
00:00:20.400 --> 00:00:21.760
It's the only variable I need.

7
00:00:21.760 --> 00:00:28.135
But can anyone guess why
I need this variable?

8
00:00:28.135 --> 00:00:32.570
To interact with the ECS cluster?

9
00:00:33.690 --> 00:00:34.890
Kind of, yeah.

10
00:00:34.890 --> 00:00:39.049
So when I built this,
I wanted to evaluate whether or

11
00:00:39.049 --> 00:00:43.130
not I was going to use a VPN for
this solution.

12
00:00:43.130 --> 00:00:46.970
I decided not to, just because
it's just more work, more effort.

13
00:00:46.970 --> 00:00:50.970
An easier approach would just be to
set up what's called a bastion host.

14
00:00:50.970 --> 00:00:52.890
Can anyone tell me what a bastion host is?

15
00:00:55.750 --> 00:00:58.489
It's like a jump box
that lets you jump and

16
00:00:58.489 --> 00:01:01.470
access things that you're not supposed to.

17
00:01:01.470 --> 00:01:03.030
Through a middleman?

18
00:01:03.030 --> 00:01:04.270
Yeah, pretty much, yeah.

19
00:01:04.270 --> 00:01:07.030
So a bastion host is basically
like a backdoor into your

20
00:01:07.030 --> 00:01:09.350
network through a machine.

21
00:01:09.350 --> 00:01:10.742
And so this is kind of like a,

22
00:01:10.742 --> 00:01:14.110
it's a little bit more of an older
school approach to handling this.

23
00:01:14.110 --> 00:01:16.420
Like normally you would drop
a VPN into the network and

24
00:01:16.420 --> 00:01:19.900
then you would just connect
into the network via that VPN.

25
00:01:19.900 --> 00:01:23.852
But unfortunately Amazon VPNs aren't cheap
and they take a while to provision, so

26
00:01:23.852 --> 00:01:26.460
it just didn't really work
very well with the course.

27
00:01:27.500 --> 00:01:33.960
But what we can do is we can at least put
an instance that's publicly accessible,

28
00:01:33.960 --> 00:01:39.660
but only permits your IP address or
wherever you're from to access it.

29
00:01:39.660 --> 00:01:41.980
So that's exactly what this is here.

30
00:01:41.980 --> 00:01:46.040
Effectively what we would do is we
would put in our public IP address.

31
00:01:46.040 --> 00:01:50.044
The long story short of is though, that if
we wanted to make it so that we could at

32
00:01:50.044 --> 00:01:54.172
least get some kind of backdoor into our
network on the cloud, this is at least one

33
00:01:54.172 --> 00:01:58.200
very simple approach of doing it, which
is just putting an instance in there.

34
00:01:58.200 --> 00:02:00.680
Just make that one instance public.

35
00:02:00.680 --> 00:02:03.227
But then you can SSH into that machine and
that

36
00:02:03.227 --> 00:02:08.600
instance can have all of your SSH keys to
everything else that you need access to.

37
00:02:08.600 --> 00:02:13.041
What's nice about a bastion host is I will
say is that you can kind of automate it

38
00:02:13.041 --> 00:02:14.950
into your environment.

39
00:02:14.950 --> 00:02:19.062
So again, you can create a bastion host
that already has like SSH key set up and

40
00:02:19.062 --> 00:02:19.830
everything.

41
00:02:19.830 --> 00:02:23.098
So all you have to do is give access
to your developers to that and

42
00:02:23.098 --> 00:02:24.030
then that's it.

43
00:02:24.030 --> 00:02:27.818
They don't need to have access to
everything else, you just give them

44
00:02:27.818 --> 00:02:32.310
access to the bastion bastion host and
then they get access through that host.

45
00:02:32.310 --> 00:02:34.390
So they're actually really nice.

46
00:02:34.390 --> 00:02:36.510
I kind of miss using Bastion hosts more,
but

47
00:02:36.510 --> 00:02:39.790
VPNs are just nice because they
directly drop you into the network.

48
00:02:39.790 --> 00:02:42.294
You don't have to connect to anything,
right?

49
00:02:42.294 --> 00:02:46.826
Right, so So if you wanted to, you could
swap out the implementation in here with

50
00:02:46.826 --> 00:02:48.970
a VPN is really all I'm trying to say.

51
00:02:48.970 --> 00:02:53.530
And you'd be able to connect to
the service or the environment as well.

52
00:02:53.530 --> 00:02:57.732
All right, so we're going to save that
file and then the next thing we're going

53
00:02:57.732 --> 00:03:01.210
to do is we're going to create
what's called a Providers file.

54
00:03:01.210 --> 00:03:08.610
So Providers tf and then I'm going
to copy and paste one provider.

55
00:03:08.610 --> 00:03:14.150
It's just the Amazon main Hashicorp
provider, if you don't know.

56
00:03:15.350 --> 00:03:17.683
Hashicorp actually has a lot of really,

57
00:03:17.683 --> 00:03:21.750
really great documentation on
the Internet for Terraform.

58
00:03:21.750 --> 00:03:26.739
And if you're doing a lot of Terraform,
you will be using it like a Wikipedia or

59
00:03:26.739 --> 00:03:27.510
an index.

60
00:03:27.510 --> 00:03:29.830
You will be constantly
referencing that thing.

61
00:03:29.830 --> 00:03:32.200
I cannot tell you when
I'm making Terraform,

62
00:03:32.200 --> 00:03:36.550
how often I'm pulling up that site and
looking for attributes or things.

63
00:03:36.550 --> 00:03:41.074
Whenever you're building automation,
there's normally two things I suggest with

64
00:03:41.074 --> 00:03:45.340
Terraform specifically, and I would at,
you know, put these as a note because I

65
00:03:45.340 --> 00:03:48.690
do think that these are kind
of game changers for me.

66
00:03:48.690 --> 00:03:49.570
The first one is.

67
00:03:49.570 --> 00:03:51.690
Yeah, the Terraform docs, right.

68
00:03:51.690 --> 00:03:56.296
So, for example,
if I just did Terraform aws, I can go and

69
00:03:56.296 --> 00:04:02.970
find the complete documentation around
everything related to aws, the provider,

70
00:04:02.970 --> 00:04:08.266
how to configure it,
all of the resources that I can provision.

71
00:04:08.266 --> 00:04:09.570
Sorry, I have dark mode on.

72
00:04:10.860 --> 00:04:11.420
There you go.

73
00:04:12.620 --> 00:04:14.460
Sorry to blind everybody.

74
00:04:14.460 --> 00:04:17.340
All of the resources, how to configure.

75
00:04:17.340 --> 00:04:19.340
And again, you can see here,
this is a lot.

76
00:04:19.340 --> 00:04:23.500
What's really cool about Terraform
is it can manage a lot of things.

77
00:04:23.500 --> 00:04:26.972
One of the things I love to show,
I don't know if you knew this, but

78
00:04:26.972 --> 00:04:29.740
you can actually manage
Spotify with Terraform.

79
00:04:29.740 --> 00:04:33.820
So if you wanted to manage all your
music with Terraform, you totally could.

80
00:04:33.820 --> 00:04:35.860
But there's a lot of really
great stuff out there.

81
00:04:35.860 --> 00:04:40.796
If you're a home lab person like myself,
and if you've ever deployed a Proxmox

82
00:04:40.796 --> 00:04:45.734
cluster, you can actually have the same
experience locally as you may a cloud,

83
00:04:45.734 --> 00:04:50.675
right, where you can write Terraform and
then it'll provision your instances

84
00:04:50.675 --> 00:04:56.600
on your little Proxmox server and it'll
have that same automation experience.

85
00:04:56.600 --> 00:04:59.358
And this is actually something I've
been working with Lately on my stream,

86
00:04:59.358 --> 00:05:00.920
which has been really fun.

87
00:05:00.920 --> 00:05:02.440
But you can do a lot of other things too.

88
00:05:02.440 --> 00:05:04.825
I mean you can manage
kubernetes with Terraform,

89
00:05:04.825 --> 00:05:07.960
you can manage a lot of different
stuff and it's really all here.

90
00:05:07.960 --> 00:05:11.524
So I would recommend,
if you're looking for something to manage,

91
00:05:11.524 --> 00:05:13.820
just search in the Terraform registry.

92
00:05:13.820 --> 00:05:17.500
More than likely you'll find something
that does what you're trying to do.

93
00:05:17.500 --> 00:05:24.540
The second thing that I highly recommend
are things called Terraform modules.

94
00:05:24.540 --> 00:05:29.180
Terraform by itself provides
what are called resources.

95
00:05:29.180 --> 00:05:34.170
For example, if I went to VPC here and
then I clicked on default vpc,

96
00:05:34.170 --> 00:05:37.058
this is a resource, this is a one unit,

97
00:05:37.058 --> 00:05:42.630
it's one resource that Terraform
will create and or manage for me.

98
00:05:42.630 --> 00:05:46.722
However, when you talk
about something like this,

99
00:05:46.722 --> 00:05:50.070
there's way more than one resource here.

100
00:05:50.070 --> 00:05:53.631
As a matter of fact,
even though this is in depth as it is,

101
00:05:53.631 --> 00:05:55.430
this doesn't even really.

102
00:05:56.550 --> 00:06:00.485
This is just the tip of the iceberg with
the actual amount of automation it takes

103
00:06:00.485 --> 00:06:01.270
to build this.

104
00:06:02.310 --> 00:06:06.390
We are going to be in LEGO
world really for all of today.

105
00:06:09.370 --> 00:06:09.870
Sorry.

106
00:06:10.970 --> 00:06:14.834
There are other things out there
that the community has created and

107
00:06:14.834 --> 00:06:19.043
managed that makes it so that you can
have almost like pre built solutions

108
00:06:19.043 --> 00:06:21.610
to the things that you're trying to solve.

109
00:06:21.610 --> 00:06:24.250
And those are called Terraform modules.

110
00:06:24.250 --> 00:06:25.725
So again, Terraform resources and

111
00:06:25.725 --> 00:06:27.650
Terraform modules are two
different things.

112
00:06:27.650 --> 00:06:32.036
So for example, in this scenario,
again going back to the vpc,

113
00:06:32.036 --> 00:06:34.730
let me go and show you really quickly.

114
00:06:34.730 --> 00:06:38.990
So here if I go to vpc, this is all I get.

115
00:06:38.990 --> 00:06:46.350
So I get CIDR block, instant Tennessee
tags, and then just VPC related stuff.

116
00:06:46.350 --> 00:06:50.633
But what if I don't want to
have to think about subnets and

117
00:06:50.633 --> 00:06:54.750
routing and security groups and
all that other stuff.

118
00:06:54.750 --> 00:06:59.200
Well, what you can do is you
can go Terraform, aws, VPC and

119
00:06:59.200 --> 00:07:04.184
if you Google that, you'll see,
if you scroll down a little bit,

120
00:07:04.184 --> 00:07:07.310
you'll see AWS vpc, Terraform module.

121
00:07:08.430 --> 00:07:13.385
These are also on the registry,
but these are community built,

122
00:07:13.385 --> 00:07:18.590
driven and maintained modules
that solve problems on Amazon.

123
00:07:18.590 --> 00:07:23.550
So this is more of a step towards I want
to solve a problem versus I want to run

124
00:07:23.550 --> 00:07:25.150
Terraform.

125
00:07:25.150 --> 00:07:30.129
What's nice about this is that if we go
to the module on the Terraform registry

126
00:07:30.129 --> 00:07:34.780
itself, you can see that this module
is actually way more in depth.

127
00:07:34.780 --> 00:07:39.485
This module lets us actually select AZS
that we want to provision in private

128
00:07:39.485 --> 00:07:43.980
subnets and their IP or their CIDRs,
public subnets and their CIDRs.

129
00:07:43.980 --> 00:07:47.660
It has NAT Gateway support,
it has VPN Gateway support.

130
00:07:47.660 --> 00:07:51.595
The reason why you would Use something
like this over just the VPC resource

131
00:07:51.595 --> 00:07:55.532
that I showed you earlier is that you
want to care more about these settings

132
00:07:55.532 --> 00:07:59.723
than figuring out every single resource
you need to create what you're trying

133
00:07:59.723 --> 00:08:00.380
to create.

134
00:08:01.430 --> 00:08:04.524
Because this underneath the hood
will do all of that for

135
00:08:04.524 --> 00:08:08.790
you via the customization and
the settings on the module.

136
00:08:08.790 --> 00:08:10.790
So these are really powerful.

137
00:08:10.790 --> 00:08:15.699
We use these a lot at where I work because
in all honesty, I don't want to have

138
00:08:15.699 --> 00:08:19.920
to think about how to create a VPC
with four subnets and routing and

139
00:08:19.920 --> 00:08:24.710
a NAT gateway and public access versus
private access and blah blah blah.

140
00:08:24.710 --> 00:08:28.579
It's like bro, this is just like at this
point I just want ChatGPT to do it for

141
00:08:28.579 --> 00:08:29.490
me, right?

142
00:08:29.490 --> 00:08:32.415
However, there are really
nice communities and really,

143
00:08:32.415 --> 00:08:35.770
really great projects that exist
that will solve these problems.

144
00:08:35.770 --> 00:08:40.809
Another one that I would recommend,
if you are trying to get into

145
00:08:40.809 --> 00:08:47.010
the Kubernetes world on Amazon,
I highly recommend you use this module.

146
00:08:47.010 --> 00:08:50.767
I do not recommend you use the Terraform
resource module because that's just

147
00:08:50.767 --> 00:08:53.079
one module and
there's auto scaling groups and

148
00:08:53.079 --> 00:08:57.260
a bunch of other stuff that you have
to add to make Kubernetes work as well.

149
00:08:57.260 --> 00:09:03.180
This gives you an out of the box
Kubernetes cluster that will just work.

150
00:09:03.180 --> 00:09:09.660
It makes going from nothing to Kubernetes
very, very easy and very, very simple.

151
00:09:09.660 --> 00:09:13.902
You can lean on these modules if you want
to and we will be leaning on some of these

152
00:09:13.902 --> 00:09:16.300
modules as well as we
go through the course.

153
00:09:16.300 --> 00:09:19.660
But yeah,
just as two takeaways like I said.

154
00:09:19.660 --> 00:09:23.148
One, look up resources in
the terraform documentation.

155
00:09:23.148 --> 00:09:24.692
And then two, look up,

156
00:09:24.692 --> 00:09:29.800
look up modules that you can find that
can kind of solve these problems for you.

157
00:09:29.800 --> 00:09:33.280
And again you'll notice that
these modules are massively used.

158
00:09:34.320 --> 00:09:38.240
This had 1.1 million
downloads just this week.

159
00:09:38.240 --> 00:09:42.000
So it's being deployed across
tons of infrastructure.

160
00:09:42.000 --> 00:09:45.074
You know that it's being built well,
it's being maintained well,

161
00:09:45.074 --> 00:09:48.640
it's being supported across
tons of different situations.

162
00:09:48.640 --> 00:09:51.550
And so
you'll get this value out of using one

163
00:09:51.550 --> 00:09:54.470
of these rather than building it yourself.

