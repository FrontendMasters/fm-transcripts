WEBVTT

1
00:00:00.480 --> 00:00:04.663
&gt;&gt; Erik Reinert: So we've gone through
the main thing now let's go ahead and

2
00:00:04.663 --> 00:00:07.600
grab the other small things that we need.

3
00:00:08.960 --> 00:00:13.962
So I'm going to create
a locals TF file and again,

4
00:00:13.962 --> 00:00:21.440
you can kind of tell the standard
patterns that like, you know, a lot of.

5
00:00:21.440 --> 00:00:26.706
At least I know of a lot of terraform
users use with like variables,

6
00:00:26.706 --> 00:00:29.440
tf locals TF outputs, TF data tf.

7
00:00:30.720 --> 00:00:32.480
It's just a common convention.

8
00:00:32.480 --> 00:00:34.000
It's not something you have to do.

9
00:00:35.200 --> 00:00:40.080
So we have our locals file, and
just really quickly, I didn't really go

10
00:00:40.080 --> 00:00:44.720
over this, but we wanna make it so
that we have a standardized name for

11
00:00:44.720 --> 00:00:48.720
the service and
all of its resources that it creates.

12
00:00:48.720 --> 00:00:52.080
But we don't want it to be the cluster
name because that's just dev.

13
00:00:52.080 --> 00:00:55.040
We want to separate that in some shape or
form.

14
00:00:55.040 --> 00:00:58.560
So in this case what we're doing
is we're saying cluster name name.

15
00:00:59.570 --> 00:01:04.334
So you could do the same thing with
environment where you could say

16
00:01:04.334 --> 00:01:08.330
you want the full name to be dev name or
something else.

17
00:01:08.330 --> 00:01:11.490
If you don't want it to be cluster name,
you can put whatever else you want there.

18
00:01:11.490 --> 00:01:15.707
But the only thing I want you to
understand is that this is an easy way to

19
00:01:15.707 --> 00:01:20.216
take a value or two values, combine them,
and then just use this value for

20
00:01:20.216 --> 00:01:21.890
everything else.

21
00:01:21.890 --> 00:01:26.660
So in my module I'm using full name for
everything to name it.

22
00:01:26.660 --> 00:01:29.369
Then that will combine these
two values and make it so

23
00:01:29.369 --> 00:01:31.780
that it's easier to read
in the environment.

24
00:01:34.020 --> 00:01:34.740
Cool.

25
00:01:34.740 --> 00:01:35.860
Variables.

26
00:01:35.860 --> 00:01:36.660
Pretty straightforward.

27
00:01:36.660 --> 00:01:38.980
Again, we've gone through
variables a whole bunch.

28
00:01:38.980 --> 00:01:42.740
The only thing I want to note is
these lines right here, really.

29
00:01:44.100 --> 00:01:45.901
So two things, one,

30
00:01:45.901 --> 00:01:52.410
we can actually run a service without
even giving it an image parameter.

31
00:01:52.410 --> 00:01:56.106
The idea here is maybe I want to configure
a service and not push to it yet, or

32
00:01:56.106 --> 00:01:59.450
maybe I just want to get it up and
running or something like that.

33
00:01:59.450 --> 00:02:02.490
I'm not really worried
about giving it code yet.

34
00:02:02.490 --> 00:02:05.890
This is a flexible option that
you can basically give yourself.

35
00:02:05.890 --> 00:02:10.486
Or you can say, well underneath, just
run nginx, run some simple image just so

36
00:02:10.486 --> 00:02:13.930
that the deployment works,
the service is up and running.

37
00:02:13.930 --> 00:02:16.330
You don't have to really care
about what's inside of it.

38
00:02:16.330 --> 00:02:20.920
Now we are going to provide it our own
image because of what we're trying to do.

39
00:02:20.920 --> 00:02:23.680
And this is the second part
of what I wanted to mention,

40
00:02:23.680 --> 00:02:26.960
which is it's okay to
deploy broken services.

41
00:02:26.960 --> 00:02:30.911
I know that sounds terrible to sound,
but the only caveat I give to that is if

42
00:02:30.911 --> 00:02:34.960
you're going to deploy a broken service,
have the intention of Fixing it.

43
00:02:36.960 --> 00:02:42.696
We have some infrastructural things where
I work where there isn't code there yet,

44
00:02:42.696 --> 00:02:47.539
but, but they can create a service and
get the terraform out of the box,

45
00:02:47.539 --> 00:02:51.290
the service out of the box,
everything running.

46
00:02:51.290 --> 00:02:55.773
But if we are provisioning the repository
at the exact same time we are provisioning

47
00:02:55.773 --> 00:03:00.330
the service in Amazon, it's not gonna run
cause there's no source code for it yet.

48
00:03:01.370 --> 00:03:04.650
So what we actually do
is we just let it fail.

49
00:03:04.650 --> 00:03:07.210
It's like just let it fail for
now it's fine.

50
00:03:07.210 --> 00:03:09.982
Because then what'll happen
is the developers will go,

51
00:03:09.982 --> 00:03:13.272
they'll push up their code, the repo or
the deployment will run and

52
00:03:13.272 --> 00:03:16.950
the deployment will grab it and
go no, no, no, this is the act.

53
00:03:16.950 --> 00:03:19.574
And then push up that change and
then everything comes online and

54
00:03:19.574 --> 00:03:21.270
starts working.

55
00:03:21.270 --> 00:03:25.488
Now we don't normally say deploy that to
production, but that at least gets them

56
00:03:25.488 --> 00:03:28.950
set up with everything before
they write a single line of code.

57
00:03:28.950 --> 00:03:31.453
So that by the time they write
code they're just shipping,

58
00:03:31.453 --> 00:03:35.030
they're not worried about setting up more
stuff and will it work or not or whatever.

59
00:03:36.150 --> 00:03:40.308
So in this scenario we are actually going
to deploy it and it will be broken, but

60
00:03:40.308 --> 00:03:44.790
then we'll fix it and it will auto resolve
itself basically and then we'll be fine.

61
00:03:44.790 --> 00:03:48.610
So, so again we put that in there just
to be helpful if we want to make it so

62
00:03:48.610 --> 00:03:52.340
that it is a successful deployment,
but it doesn't mean we have to.

63
00:03:54.020 --> 00:03:58.719
Some other things in here are just
like log retention, kind of important,

64
00:03:58.719 --> 00:04:01.777
memory, CPU as well up here,
all of the basics,

65
00:04:01.777 --> 00:04:05.300
pretty much everything we
need to configure a service.

66
00:04:08.340 --> 00:04:12.415
So then we're going to do one
more which is our outputs TF and

67
00:04:12.415 --> 00:04:14.780
we're going to save this.

68
00:04:14.780 --> 00:04:15.686
And there we go.

69
00:04:15.686 --> 00:04:19.537
This is just all the stuff we need
from a service, all the roles and

70
00:04:19.537 --> 00:04:22.140
everything else if we
wanna use them later.

