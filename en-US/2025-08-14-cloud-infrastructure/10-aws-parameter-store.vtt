WEBVTT

1
00:00:00.320 --> 00:00:01.040
&gt;&gt; Erik Reinert: There we go.

2
00:00:01.040 --> 00:00:01.720
Five minutes.

3
00:00:01.720 --> 00:00:05.920
We have a database up and running,
fully available, connectable.

4
00:00:05.920 --> 00:00:09.760
I've already even got the schemas in
place to be able to run my application.

5
00:00:09.760 --> 00:00:14.625
Obviously we ran into some problems with
setups and whatnot, but if you really look

6
00:00:14.625 --> 00:00:19.001
at the amount of effort and time put into
doing this, it was a Docker file and

7
00:00:19.001 --> 00:00:23.200
creating a postgres instance on
the Internet, not much effort at all.

8
00:00:23.200 --> 00:00:25.760
Again, it's very startup focused.

9
00:00:26.950 --> 00:00:27.750
Okay, cool.

10
00:00:27.750 --> 00:00:29.350
So we've got our database.

11
00:00:29.350 --> 00:00:32.364
If we go back to our diagram here,

12
00:00:32.364 --> 00:00:37.870
the next thing is going to be
App Runner and Parameter Store.

13
00:00:37.870 --> 00:00:40.390
So let's go ahead and get these set up.

14
00:00:42.070 --> 00:00:47.287
What we're going to do first is we're
going to set up parameter store and

15
00:00:47.287 --> 00:00:51.520
then I'm going to go to
SSM Systems Manager.

16
00:00:51.520 --> 00:00:56.080
Once I click on Systems Manager,
I'm going to go to parameter store.

17
00:00:57.360 --> 00:01:01.380
And if I type in again, if I did before,
you'll see obviously I have tons of them

18
00:01:01.380 --> 00:01:04.680
because I use them for
a lot of different applications and stuff.

19
00:01:04.680 --> 00:01:08.857
But if I type in fem, you'll see that
these are going to be the three parameters

20
00:01:08.857 --> 00:01:11.360
that we are going to be creating.

21
00:01:11.360 --> 00:01:13.077
Now again, I have them in previews just so

22
00:01:13.077 --> 00:01:15.280
that you guys can see what
we're going to be doing.

23
00:01:15.280 --> 00:01:17.400
But this is effectively what
we're going to want to do.

24
00:01:17.400 --> 00:01:19.664
And so what we're going to do
is we're going to go ahead and

25
00:01:19.664 --> 00:01:21.290
click Create parameters.

26
00:01:21.290 --> 00:01:26.502
You're gonna type in like a URL

27
00:01:26.502 --> 00:01:34.730
fem-Fd-service/googleclientid, right?

28
00:01:35.930 --> 00:01:40.934
So the idea here is this is key value
storage, which basically means that

29
00:01:40.934 --> 00:01:46.184
the key is kind of like a URL that we're
trying to navigate to the resource and

30
00:01:46.184 --> 00:01:51.186
the value will be the output of that,
the client id, the client secret,

31
00:01:51.186 --> 00:01:55.150
and the URL that we just posted or
created for postgres.

32
00:01:55.150 --> 00:01:59.310
We're going to be copying and
adding these all to ssm.

33
00:01:59.310 --> 00:02:03.328
So what I'm going to do is after I've got
my name put in there, I'm going to click

34
00:02:03.328 --> 00:02:06.990
on secure string because I want to
store it as an actual secured value.

35
00:02:06.990 --> 00:02:09.025
What's really nice about SSM and

36
00:02:09.025 --> 00:02:13.030
Secrets Manager is there's already
encryption in place there.

37
00:02:13.030 --> 00:02:16.350
You don't have to worry about rotating
encryption keys and all of that.

38
00:02:16.350 --> 00:02:21.690
They have a really secure encryption
platform, so you can lean on that.

39
00:02:21.690 --> 00:02:26.372
So I'm just going to say, use the KMS
source of my current account and

40
00:02:26.372 --> 00:02:28.970
then just use the default alias SSM.

41
00:02:28.970 --> 00:02:32.890
You guys should all see this if not,
it'll just ask you to create one.

42
00:02:32.890 --> 00:02:34.970
But yeah, you should be able to use that.

43
00:02:34.970 --> 00:02:36.410
Then we just put in the value.

44
00:02:36.410 --> 00:02:37.850
I have my client.

45
00:02:37.850 --> 00:02:40.050
I think client IDs are fine to show.

46
00:02:40.050 --> 00:02:42.130
So let me go ahead and put this in here.

47
00:02:42.130 --> 00:02:47.220
I'm going to go ahead and
copy this value and paste it in like this.

48
00:02:47.220 --> 00:02:50.020
And then,
I'm just gonna click create parameter.

49
00:02:50.020 --> 00:02:58.180
And so now if I do fem FD service and
then slash.

50
00:02:59.592 --> 00:03:01.740
Whoops, there we go.

51
00:03:01.740 --> 00:03:04.460
You can see that now I have
my Google client ID and

52
00:03:04.460 --> 00:03:07.260
I wanna do the exact same thing for
the other two.

53
00:03:07.260 --> 00:03:11.793
So I'm gonna say,

54
00:03:11.793 --> 00:03:17.470
there we go, slash fem-fd.

55
00:03:17.470 --> 00:03:20.750
And I can kind of come down here and
use that as a quick click.

56
00:03:20.750 --> 00:03:26.590
And then Google Client Secret
secure string.

57
00:03:26.590 --> 00:03:31.501
I move this off screen for a second,

58
00:03:31.501 --> 00:03:38.542
grab my secure string,
paste that in there again,

59
00:03:38.542 --> 00:03:43.480
make sure you click secure string.

60
00:03:43.480 --> 00:03:46.920
It will show values unencrypted.

61
00:03:46.920 --> 00:03:53.160
So be sure to click secure string,
and then bring this over here.

62
00:03:53.160 --> 00:03:54.600
And then we'll do the same thing.

63
00:03:54.600 --> 00:04:00.520
I'll just use that Postgres URL, right?

64
00:04:02.760 --> 00:04:08.719
And then remember, when you copy and paste
the postgres URL from the connect window,

65
00:04:08.719 --> 00:04:12.130
make sure to replace
the your password section.

66
00:04:12.130 --> 00:04:13.970
Otherwise it will not work.

67
00:04:13.970 --> 00:04:17.010
You will have to debug it and
it will waste your time.

68
00:04:17.010 --> 00:04:20.690
You should see three in
total just like that.

69
00:04:20.690 --> 00:04:24.530
You should have a client id,
a client secret and a postgres URL.

70
00:04:24.530 --> 00:04:29.170
And you should populate those basically
with the values that we had already.

71
00:04:29.170 --> 00:04:32.210
So what's kind of nice too is you
can now use this as reference.

72
00:04:32.210 --> 00:04:35.330
You don't have to worry
about having a notepad open.

73
00:04:35.330 --> 00:04:36.590
And I do this a lot, too.

74
00:04:36.590 --> 00:04:38.430
This is why I like having UIs.

75
00:04:38.430 --> 00:04:39.630
I can even move quicker.

76
00:04:39.630 --> 00:04:42.470
It's like I'll just go to SSM and
grab it real quick, you know.

77
00:04:42.470 --> 00:04:48.190
So, yeah, finding solutions that
help you is really the key here.

78
00:04:48.190 --> 00:04:51.070
So we've created our SSM parameters.

79
00:04:51.070 --> 00:04:55.550
Now the next thing we want to do
is we want to set up a IAM policy.

80
00:04:55.550 --> 00:04:58.865
Now this is a little like
out of left field, but

81
00:04:58.865 --> 00:05:02.190
this is something required
to run App Runner.

82
00:05:02.190 --> 00:05:03.230
If you go through the.

83
00:05:03.230 --> 00:05:08.600
If you wanna know more about App Runner,
you just do AWS App Runner, Google it.

84
00:05:08.600 --> 00:05:12.697
Basically, they've got tons of
documentation on how it works and

85
00:05:12.697 --> 00:05:17.303
how to set it up, but effectively I'm
going to be taking you through a crash

86
00:05:17.303 --> 00:05:21.320
course on how to deploy web
applications on App Runner.

87
00:05:21.320 --> 00:05:25.440
One of the things we have to do before
we actually run the application

88
00:05:25.440 --> 00:05:28.520
itself is we have to
create an IAM role for it.

89
00:05:28.520 --> 00:05:31.487
Does anyone not know what I mean by that?

90
00:05:31.487 --> 00:05:38.055
What do I mean by creating an IAM role for
the service I'm about to run?

91
00:05:38.055 --> 00:05:42.242
&gt;&gt; Student: Need to give it permissions to
execute whatever actions the service needs

92
00:05:42.242 --> 00:05:43.150
to execute.

93
00:05:43.150 --> 00:05:44.190
&gt;&gt; Erik Reinert: Exactly, yeah.

94
00:05:44.190 --> 00:05:47.150
So Amazon Cloud's a really big platform.

95
00:05:47.150 --> 00:05:50.910
Maybe your product or
service is working with S3, right.

96
00:05:50.910 --> 00:05:55.070
Maybe it's working with queues,
maybe it's working with other things.

97
00:05:55.070 --> 00:05:59.208
We need to give the running
container the ability to connect and

98
00:05:59.208 --> 00:06:02.110
talk with those things like we do locally.

99
00:06:02.110 --> 00:06:05.137
So we created access keys and
then put them in our shell and

100
00:06:05.137 --> 00:06:06.650
ran command with them.

101
00:06:06.650 --> 00:06:09.290
That's effectively what we're
doing with our service.

102
00:06:09.290 --> 00:06:13.893
We're creating a role that says, hey,
when you're communicating from this place,

103
00:06:13.893 --> 00:06:17.690
you have the permissions to do these
things, and this is like a common.

104
00:06:17.690 --> 00:06:21.716
If you don't know much about Amazon,
this is like a very low level common thing

105
00:06:21.716 --> 00:06:24.767
that you'll do with pretty much
on everything on Amazon and

106
00:06:24.767 --> 00:06:26.490
you'll run into it all the time.

107
00:06:26.490 --> 00:06:30.112
And it's actually really
probably one of the biggest,

108
00:06:30.112 --> 00:06:32.808
I would say IAM is
the biggest pain point of

109
00:06:32.808 --> 00:06:37.910
every developer's experience on
Amazon because it's so annoying.

110
00:06:37.910 --> 00:06:40.150
There's tons and
tons of permissions you have to give it.

111
00:06:40.150 --> 00:06:45.142
But the takeaway I just want you to have
with this is that we're going to go to

112
00:06:45.142 --> 00:06:50.950
the IAM part of the dashboard to give it
permissions to do things in the cloud.

113
00:06:50.950 --> 00:06:53.559
And so what we're going to
do is in the IAM section,

114
00:06:53.559 --> 00:06:56.230
we're gonna click on policies.

115
00:06:56.230 --> 00:06:58.180
Again, I have tons of policies,

116
00:06:58.180 --> 00:07:03.110
but you will also notice that Amazon has
a lot of out of the box policies for you.

117
00:07:03.110 --> 00:07:08.750
So any of the things that are with
the little orange 3D box there is an IM or

118
00:07:08.750 --> 00:07:14.930
an Amazon Managed and you can see
here it says Amazon Managed Policy.

119
00:07:14.930 --> 00:07:20.130
I recommend using these as much
as possible because it's really.

120
00:07:20.130 --> 00:07:25.002
They've tried to solve pretty much every
problem most people are already trying to

121
00:07:25.002 --> 00:07:28.770
do outside of really granular or
really specific permissions.

122
00:07:28.770 --> 00:07:31.970
This is a good go to get started thing.

123
00:07:31.970 --> 00:07:35.134
What's ironic is we won't
be able to use it because

124
00:07:35.134 --> 00:07:38.530
App Runner doesn't have one in there for
some reason.

125
00:07:38.530 --> 00:07:42.550
And I don't know why, but
at least, yeah, I don't think so.

126
00:07:42.550 --> 00:07:47.065
So anyways, what we're going to do is
we're going to click Create Policy and

127
00:07:47.065 --> 00:07:50.677
then we're not actually going
to use the visual editor here,

128
00:07:50.677 --> 00:07:53.310
we're just going to change the JSON.

129
00:07:53.310 --> 00:07:56.590
We're going to literally just
write pure JSON in here.

130
00:07:56.590 --> 00:08:00.750
And then, what I'm going to do is, I'm
going to paste in what we actually need.

131
00:08:00.750 --> 00:08:05.550
And so what I'm going to do so you have it
is I'm just going to open it in my editor.

132
00:08:05.550 --> 00:08:11.460
So the policy that you guys
want to add is this right here.

133
00:08:13.620 --> 00:08:18.157
Unfortunately, this is the only place I
can give this to you because it's not in

134
00:08:18.157 --> 00:08:18.980
source code.

135
00:08:20.020 --> 00:08:21.660
It's something you would do manually.

136
00:08:21.660 --> 00:08:26.745
While you're going through it, all you're
going to do is you're going to create

137
00:08:26.745 --> 00:08:31.682
a JSON object with statement as the array
version at the bottom and then inside of

138
00:08:31.682 --> 00:08:36.500
the array make an object with action
array, get parameters, effect allow.

139
00:08:37.740 --> 00:08:39.777
And then, when you get to Resource,

140
00:08:39.777 --> 00:08:43.980
what you're going to do is you're
going to put in your account region.

141
00:08:43.980 --> 00:08:48.872
Just for consistency sake, let's just
leave it on us West 2 because that's

142
00:08:48.872 --> 00:08:53.660
what I'm already like how everything
else was set up in the course.

143
00:08:53.660 --> 00:08:58.126
So we're going to put us West 2 as
the region and then the account ID is

144
00:08:58.126 --> 00:09:01.980
going to be your account ID and
I can show you how to get that.

145
00:09:01.980 --> 00:09:03.420
So it'd be us West 2.

146
00:09:05.590 --> 00:09:08.281
And then to get your account
ID you can actually up in

147
00:09:08.281 --> 00:09:12.036
the top right hand corner where your
user ID is or username, whatever,

148
00:09:12.036 --> 00:09:15.310
you can click this and
then it'll say Account ID right there.

149
00:09:15.310 --> 00:09:21.590
You can just click that and then that
will allow you to put in your account id.

150
00:09:21.590 --> 00:09:25.510
So can any one guess what
permissions we are giving this?

151
00:09:27.110 --> 00:09:27.990
&gt;&gt; Student: We're giving.

152
00:09:29.730 --> 00:09:33.539
Once we give this policy to the app
runner, we're going to basically allow

153
00:09:33.539 --> 00:09:36.570
the app runner to get parameters
from the parameter store.

154
00:09:36.570 --> 00:09:37.170
&gt;&gt; Erik Reinert: Exactly.

155
00:09:37.170 --> 00:09:38.130
Yeah, exactly.

156
00:09:39.410 --> 00:09:45.284
We are telling Amazon, hey, we just put
some parameters in parameter store,

157
00:09:45.284 --> 00:09:49.250
please allow the application
to use it as well.

158
00:09:49.250 --> 00:09:51.930
This is a policy that we
are allowing it to do.

159
00:09:51.930 --> 00:09:52.874
Now you might be like,

160
00:09:52.874 --> 00:09:56.030
well why am I allowed to do it
without having to add the policy?

161
00:09:56.030 --> 00:09:59.122
Well, that's because you're
probably using an administrator or

162
00:09:59.122 --> 00:10:02.110
root level account that has
access to everything by default.

163
00:10:02.110 --> 00:10:06.819
So yeah, once you've got that, the next
thing we have to do is just click next and

164
00:10:06.819 --> 00:10:08.430
then we will give it a name.

165
00:10:08.430 --> 00:10:13.661
In this case we'll just say
fem FD Service and that's it.

166
00:10:13.661 --> 00:10:16.789
And then, if you scroll down
really quickly you will,

167
00:10:16.789 --> 00:10:21.481
you should see what it's actually, what
permissions are actually defined and so

168
00:10:21.481 --> 00:10:24.890
in this case,
we should see Systems Manager read, right?

169
00:10:24.890 --> 00:10:27.090
So it's limited just to read,
which is important as well.

170
00:10:27.090 --> 00:10:28.981
We don't want the service
to write changes,

171
00:10:28.981 --> 00:10:32.330
we don't want to change the config,
we just want to read it.

172
00:10:32.330 --> 00:10:34.330
So then we're going to
click Create Policy.

173
00:10:36.090 --> 00:10:42.010
And now if I search,
you should see a FEM-FD service, right?

174
00:10:42.010 --> 00:10:47.530
And then if I click on that,
we should be able to see where is it?

175
00:10:47.530 --> 00:10:48.130
Permissions.

176
00:10:48.130 --> 00:10:50.070
Yeah, our permissions right here,
and click on that.

177
00:10:50.070 --> 00:10:52.750
And then I can see,
GetParameters, all of that.

