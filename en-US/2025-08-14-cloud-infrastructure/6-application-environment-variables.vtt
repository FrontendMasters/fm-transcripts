WEBVTT

1
00:00:00.240 --> 00:00:01.960
&gt;&gt; Erik Reinert: Okay, so
now we're gonna hop into source code.

2
00:00:01.960 --> 00:00:05.450
So personally, you're going to notice that
I like to get the annoying stuff out of

3
00:00:05.450 --> 00:00:07.280
the way so
that we can do the more fun stuff.

4
00:00:07.280 --> 00:00:09.602
And for me,
both of what we just did is annoying, so

5
00:00:09.602 --> 00:00:11.440
I'd rather just get that out of the way.

6
00:00:12.960 --> 00:00:15.680
Let's go ahead and
go back into source code.

7
00:00:15.680 --> 00:00:18.740
And what we're going to do now is
we're going to start learning about

8
00:00:18.740 --> 00:00:19.600
the application.

9
00:00:19.600 --> 00:00:22.460
Like, we're going to start getting
ourselves a little bit comfortable with

10
00:00:22.460 --> 00:00:24.080
what this is, how it works.

11
00:00:24.080 --> 00:00:26.025
If I open it up and I look at again,

12
00:00:26.025 --> 00:00:29.370
consider this a scenario where
you were just given this.

13
00:00:29.370 --> 00:00:32.010
You have no idea what this is.

14
00:00:32.010 --> 00:00:34.090
This is very common in the DevOps world.

15
00:00:34.090 --> 00:00:38.861
So is there anything in here from
a DevOps perspective that stands

16
00:00:38.861 --> 00:00:40.603
out to you in this list?

17
00:00:40.603 --> 00:00:45.210
What would be, maybe, and
I'll say there's at least two, yeah?

18
00:00:45.210 --> 00:00:46.170
README.

19
00:00:46.170 --> 00:00:47.975
README, okay, that's one of them, yep.

20
00:00:47.975 --> 00:00:48.647
What else?

21
00:00:48.647 --> 00:00:50.049
The env.

22
00:00:50.049 --> 00:00:51.732
The .env file.

23
00:00:51.732 --> 00:00:52.940
Yep, yep.

24
00:00:52.940 --> 00:00:53.755
The .env file.

25
00:00:53.755 --> 00:00:54.423
Env, yeah.

26
00:00:54.423 --> 00:00:56.008
Yep, yep .env file, yep.

27
00:00:56.008 --> 00:00:56.573
What else?

28
00:00:56.573 --> 00:00:57.500
Docker Compose.

29
00:00:57.500 --> 00:00:59.580
Yep, Docker Compose as well, yeah.

30
00:00:59.580 --> 00:01:01.502
So if I was jumping into this project,

31
00:01:01.502 --> 00:01:04.620
those would be the three things
that I would look at first.

32
00:01:04.620 --> 00:01:08.277
I would first look at the readme and
say, like, please help me, please, God,

33
00:01:08.277 --> 00:01:10.060
make sure somebody documented.

34
00:01:10.060 --> 00:01:13.734
If they didn't, which more than likely
they probably didn't, then I would go and

35
00:01:13.734 --> 00:01:14.740
look at the other two.

36
00:01:14.740 --> 00:01:19.630
So let's really quickly look at
the readme and we'll notice.

37
00:01:19.630 --> 00:01:20.230
Okay, cool.

38
00:01:21.430 --> 00:01:23.510
We actually have documentation.

39
00:01:23.510 --> 00:01:24.950
Nice, all right, cool.

40
00:01:24.950 --> 00:01:27.577
So if we look at it,
we see that again, it's a platform.

41
00:01:27.577 --> 00:01:29.190
We're just gonna call it goals for now.

42
00:01:30.230 --> 00:01:33.334
It has some features to it,
so it has user auth.

43
00:01:33.334 --> 00:01:36.070
Like Mark said you could create profiles.

44
00:01:36.070 --> 00:01:39.270
So, okay, we're gonna be doing
database work, that's for sure.

45
00:01:39.270 --> 00:01:41.190
It has the ability to share updates.

46
00:01:42.870 --> 00:01:45.390
It's got some functionality to it.

47
00:01:45.390 --> 00:01:46.990
Let's look at the prereqs.

48
00:01:46.990 --> 00:01:48.670
We've got Go.

49
00:01:48.670 --> 00:01:52.030
We'll need to make sure we've got Go
installed Docker and Docker Compose.

50
00:01:52.030 --> 00:01:54.430
Cool.
Postgres as well.

51
00:01:54.430 --> 00:01:56.750
Then Google Cloud, which we just did.

52
00:01:56.750 --> 00:01:58.990
We're off to a good start.

53
00:01:58.990 --> 00:02:01.790
We've got a little bit of information
in here on the Docker setup.

54
00:02:01.790 --> 00:02:05.616
It looks like we can use
Docker Compose to bring up a database.

55
00:02:05.616 --> 00:02:06.430
Okay, cool.

56
00:02:06.430 --> 00:02:09.710
Then we've got some information on the
OAUTH setup, which is what we just did.

57
00:02:13.007 --> 00:02:13.559
Boy.

58
00:02:13.559 --> 00:02:18.679
This is definitely not the most ideal
solution to manage your SQL schema.

59
00:02:18.679 --> 00:02:19.879
But hey, it's a start.

60
00:02:19.879 --> 00:02:21.319
At least we have schema.

61
00:02:21.319 --> 00:02:22.479
So that's good, that's good.

62
00:02:22.479 --> 00:02:26.046
But that's kind of like, if I was
being brought onto this project and

63
00:02:26.046 --> 00:02:28.639
I saw it here,
I would immediately go, God.

64
00:02:28.639 --> 00:02:30.159
That's something we need to fix, right?

65
00:02:30.159 --> 00:02:34.279
Because you don't want to be seeding
databases through a readme file.

66
00:02:34.279 --> 00:02:37.136
But it's actually really good that it
was done in this scenario because it

67
00:02:37.136 --> 00:02:38.439
gives us an opportunity to do it.

68
00:02:39.959 --> 00:02:41.340
Okay, cool.

69
00:02:41.340 --> 00:02:43.260
We know that we're using Docker.

70
00:02:43.260 --> 00:02:45.860
We know that we need to set up Google.

71
00:02:45.860 --> 00:02:50.468
We know that we've got some
schema in here as well.

72
00:02:50.468 --> 00:02:53.111
And then, okay, cool,
we've got some more schema.

73
00:02:53.111 --> 00:02:54.782
And then, okay, yeah, there we go.

74
00:02:54.782 --> 00:02:55.787
Yeah, .env.

75
00:02:55.787 --> 00:02:58.221
So we've got a .emv is here as well.

76
00:02:58.221 --> 00:03:02.277
It looks like we copy that,
we create a new one, we update it,

77
00:03:02.277 --> 00:03:05.180
we then source it and then we run it.

78
00:03:05.180 --> 00:03:06.140
Why don't we do that?

79
00:03:06.140 --> 00:03:10.780
Why don't we make sure the app works
basically before we try deploying it?

80
00:03:10.780 --> 00:03:13.400
That would be my next recommendation.

81
00:03:13.400 --> 00:03:18.416
By the way, if you're in a scenario where
you're taking on an app like this and

82
00:03:18.416 --> 00:03:20.316
you have no idea how it works,

83
00:03:20.316 --> 00:03:24.960
familiarize yourself with it because
you're going to be debugging it.

84
00:03:24.960 --> 00:03:28.158
And so if you don't know how to run the
app, you don't know what credentials it

85
00:03:28.158 --> 00:03:31.458
requires and stuff like that, you're just
going to be bashing your head against

86
00:03:31.458 --> 00:03:35.640
the wall later when you try debugging
it and understand why it's not working.

87
00:03:35.640 --> 00:03:39.143
I think our first goal should be let's
get a dev environment up and running,

88
00:03:39.143 --> 00:03:43.250
let's make sure that it works locally and
everything is good to go.

89
00:03:43.250 --> 00:03:48.251
What I'm going to do is I'm going
to take the document's advice and

90
00:03:48.251 --> 00:03:52.210
I'm going to copy my ENV
example to a ENV file itself.

91
00:03:54.050 --> 00:03:58.625
The reason why I'm doing this is because
the repository should ignore that ENV

92
00:03:58.625 --> 00:04:02.363
file, but I should then be able to
use it and keep it in the repo for

93
00:04:02.363 --> 00:04:04.046
future stuff and whatever.

94
00:04:04.046 --> 00:04:05.650
So I'm gonna copy that.

95
00:04:05.650 --> 00:04:08.290
Then I use neovim to be clear.

96
00:04:08.290 --> 00:04:12.767
So all the stuff I'm going to be doing is
in neovim, but yeah, by the way, yeah, but

97
00:04:12.767 --> 00:04:16.994
you're welcome to use any editor,
obviously you don't have to use NeoBIM, so

98
00:04:16.994 --> 00:04:18.910
let's go ahead and open that file.

99
00:04:20.110 --> 00:04:20.884
Okay, cool.

100
00:04:20.884 --> 00:04:23.590
So we've even got some stuff
here that we kind of noticed.

101
00:04:23.590 --> 00:04:27.456
So we've got a Google client id, we've got
a Google client secret, we've got a URL

102
00:04:27.456 --> 00:04:31.510
that's already populated, and we've got
a database URL that's already populated.

103
00:04:31.510 --> 00:04:32.190
Okay, cool.

104
00:04:32.190 --> 00:04:36.176
So it looks like what we need to do is
we need to put in the client ID and

105
00:04:36.176 --> 00:04:38.610
client secrets that we just generated.

106
00:04:38.610 --> 00:04:42.450
So I'm going to do this off screen because
I don't feel like doxing myself again.

107
00:04:42.450 --> 00:04:46.449
But what I would tell you to do next
is to paste in that client ID and

108
00:04:46.449 --> 00:04:49.130
that client secret values directly to it.

109
00:04:49.130 --> 00:04:53.343
So it should look something like this and
then something like this once you're done,

110
00:04:53.343 --> 00:04:54.756
but with the actual values.

111
00:04:54.756 --> 00:04:58.370
So let me go ahead and do this off screen.

112
00:05:01.810 --> 00:05:09.047
I have a strong feeling I'm going to be
generating multiple credentials today.

113
00:05:09.047 --> 00:05:14.837
All right, and if you are curious to make
sure that you know which is the right for

114
00:05:14.837 --> 00:05:19.940
which value, the client ID is
the like .apps.googleusercontent,

115
00:05:19.940 --> 00:05:23.830
and then the secret is just
the pure string value.

116
00:05:23.830 --> 00:05:26.310
So just to note.

117
00:05:26.310 --> 00:05:29.115
So again, make sure you've got
the client ID and client secret and

118
00:05:29.115 --> 00:05:30.630
then just save and close that file.

119
00:05:32.320 --> 00:05:32.880
So there we go.

120
00:05:32.880 --> 00:05:38.000
Now I should have my .env fully populated.

121
00:05:38.000 --> 00:05:41.349
Cool, and
then I'm just gonna do source.env.

122
00:05:41.349 --> 00:05:41.920
That's it.

123
00:05:43.280 --> 00:05:48.160
Can anyone tell me what source
does reads it into your shell?

124
00:05:48.160 --> 00:05:50.560
Can you give me a little bit more
of a detailed answer than that?

125
00:05:52.080 --> 00:05:53.880
What do you mean by
reads it into my shell?

126
00:05:53.880 --> 00:05:55.691
I guess that it sources and

127
00:05:55.691 --> 00:06:00.640
it makes the configurations live
into your environment source shell.

128
00:06:00.640 --> 00:06:04.529
Basically what it does is it will take
any variable that I put in here or

129
00:06:04.529 --> 00:06:09.270
I export and then it'll immediately make
it available in my shell environment.

130
00:06:09.270 --> 00:06:11.190
It exports those for me.

131
00:06:11.190 --> 00:06:14.923
So if I do echo POSTGRES_URL,

132
00:06:14.923 --> 00:06:19.670
you can see I now have that URL, right?

133
00:06:20.870 --> 00:06:24.847
This is common in development where
I want to load a configuration, but

134
00:06:24.847 --> 00:06:28.280
I don't want to have to do
a ton of stuff to do it.

135
00:06:28.280 --> 00:06:32.395
ENV is a really nice approach so
that then again, once you're ready,

136
00:06:32.395 --> 00:06:36.583
you just do source ENV and whenever
you update environment variables or

137
00:06:36.583 --> 00:06:40.906
add new ones, you can just do source
ENV again and then it'll update it and

138
00:06:40.906 --> 00:06:45.800
then once you exit that shell, it will no
longer be there does in that ENV file.

139
00:06:45.800 --> 00:06:50.680
Do you have to have the export in front of
the environment variable for source.env?

140
00:06:50.680 --> 00:06:51.640
You don't.

141
00:06:51.640 --> 00:06:55.773
No, it's just like a habit I have
because sometimes it doesn't work and

142
00:06:55.773 --> 00:06:57.550
I don't really remember why.

143
00:06:58.910 --> 00:07:00.670
But yeah, you normally don't have to.

144
00:07:00.670 --> 00:07:02.670
Yeah, normally you just do.

145
00:07:02.670 --> 00:07:07.710
But underneath the hood,
Source is just running a shell script.

146
00:07:07.710 --> 00:07:09.150
So you can do that.

147
00:07:09.150 --> 00:07:13.190
It's just like when you have this,
it's actually just bash.

148
00:07:13.190 --> 00:07:17.230
So if I wanted to, I could actually
write bash code and da, da, da.

149
00:07:17.230 --> 00:07:19.548
Source just runs a script,
is all I'm trying to say.

150
00:07:19.548 --> 00:07:23.050
So if you want to put export in there,
you can, but you don't have to.

