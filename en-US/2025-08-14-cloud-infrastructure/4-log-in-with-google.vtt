WEBVTT

1
00:00:00.240 --> 00:00:04.356
&gt;&gt; Erik Reinert: So like I said before, if
you go to the repo, you will see a stage

2
00:00:04.356 --> 00:00:10.240
01 startup branch that is the result
of what we're gonna be doing, right?

3
00:00:10.240 --> 00:00:13.575
If you want to be able to copy things or
reference things or whatever,

4
00:00:13.575 --> 00:00:15.360
that is the result.

5
00:00:15.360 --> 00:00:20.197
The only caveat I want to put
in there is that in these

6
00:00:20.197 --> 00:00:24.480
branches I named the service Preview.

7
00:00:24.480 --> 00:00:28.109
So if you see anywhere in
there where it says preview,

8
00:00:28.109 --> 00:00:33.440
you can either just use that or
you can just replace it to FEM FD Service.

9
00:00:33.440 --> 00:00:36.400
I did Preview because I can't
have the non existent and

10
00:00:36.400 --> 00:00:38.560
the existent at the same time.

11
00:00:38.560 --> 00:00:42.082
So I had to create something separate so
I could show you guys right now and

12
00:00:42.082 --> 00:00:45.520
then I can work through it
together on the workshop.

13
00:00:45.520 --> 00:00:48.720
But yeah, so
all the code exists in this branch.

14
00:00:48.720 --> 00:00:50.960
If you want to take a look at that.

15
00:00:50.960 --> 00:00:54.790
As I said before, we are going
to be going into Google Cloud,

16
00:00:54.790 --> 00:00:59.610
although we're only going to be going
this far into it, like, that's it.

17
00:00:59.610 --> 00:01:01.730
This is the only page
we're going to look at.

18
00:01:01.730 --> 00:01:06.530
So this is where we're going to set up
our OAuth2 client ID and credentials.

19
00:01:07.730 --> 00:01:11.090
So make sure that you can
at least get to that page.

20
00:01:11.090 --> 00:01:15.302
Also, as I said before,
we're going to be using Supabase and so

21
00:01:15.302 --> 00:01:19.592
we will eventually be able to log
into your database on Supabase.

22
00:01:19.592 --> 00:01:24.210
You will be able to have all of your
tables here on the left, right?

23
00:01:24.210 --> 00:01:29.546
So, yeah, also parameter store, if you've
never seen parameter store before,

24
00:01:29.546 --> 00:01:34.370
this is where we keep all of our values,
all of our configuration values.

25
00:01:34.370 --> 00:01:38.530
Like I said before, you'll notice that
each one of them is their own value.

26
00:01:39.650 --> 00:01:44.030
This would be that key value approach that
I told you, where it's like, okay, well,

27
00:01:44.030 --> 00:01:48.850
I just want the client id, I just want
the secret, I just want the postgres URL.

28
00:01:48.850 --> 00:01:52.613
Another nice thing about this,
in comparison to Secrets Manager,

29
00:01:52.613 --> 00:01:56.177
if you put all of your secrets
into one thing in Secrets Manager,

30
00:01:56.177 --> 00:02:00.072
then that means that you only have
the ability to set up permissions for

31
00:02:00.072 --> 00:02:04.060
that one secret, which makes it hard
when it grows and grows and grows.

32
00:02:04.060 --> 00:02:08.362
And you're like, parameter store is nice
because I could even individually set up

33
00:02:08.362 --> 00:02:13.300
permissions per each parameter and say,
okay, you can see this, you can see this.

34
00:02:13.300 --> 00:02:14.380
So it's just more granular.

35
00:02:14.380 --> 00:02:18.020
It's a lot easier to work with.

36
00:02:18.020 --> 00:02:21.220
And then the last thing is,
I do want to show you this really quickly.

37
00:02:21.220 --> 00:02:23.540
This is what we're actually
going to be deploying.

38
00:02:23.540 --> 00:02:26.820
So this is the service actually
running up on App Runner.

39
00:02:26.820 --> 00:02:27.500
You can See that?

40
00:02:27.500 --> 00:02:29.380
We got like a random URL at the top.

41
00:02:29.380 --> 00:02:31.410
If you're curious about domains,

42
00:02:31.410 --> 00:02:36.980
we are not going to be provisioning any
kind of custom domains because I hate DNS.

43
00:02:36.980 --> 00:02:39.940
So we're not going to be doing
any kind of domains today.

44
00:02:39.940 --> 00:02:42.420
Don't worry about purchasing a domain.

45
00:02:42.420 --> 00:02:47.550
I would challenge you after this
course to add your own domain to it.

46
00:02:47.550 --> 00:02:48.190
You know what I mean?

47
00:02:48.190 --> 00:02:51.550
Set it up and take this course and
grow off of it.

48
00:02:51.550 --> 00:02:56.550
But yeah, no, at the end of the day it's
just going to be random domains on Amazon.

49
00:02:56.550 --> 00:02:59.630
So that was, don't worry about SSLs or
anything like that.

50
00:03:01.950 --> 00:03:02.670
Okay, cool!

51
00:03:02.670 --> 00:03:05.310
So let's go ahead and get started.

52
00:03:05.310 --> 00:03:08.110
The first thing we're going to do is
we're going to go to the repo itself.

53
00:03:08.110 --> 00:03:12.277
So I want everyone to go
to the Frontend Math or

54
00:03:12.277 --> 00:03:15.800
the FEM/FD service repo right here.

55
00:03:18.200 --> 00:03:23.720
Then what I want you to do is in
another tab I want you to open up your.

56
00:03:25.240 --> 00:03:26.080
Let's see here.

57
00:03:26.080 --> 00:03:29.400
I think for users you would go to.

58
00:03:29.400 --> 00:03:31.740
Yeah.
So you go to your users and

59
00:03:31.740 --> 00:03:35.560
then repositories and
we want to create a new repo.

60
00:03:35.560 --> 00:03:40.610
So basically in one tab I want you to have
the source code open on the main branch.

61
00:03:40.610 --> 00:03:42.850
Then in another tab I want
you to create a new repo.

62
00:03:47.090 --> 00:03:52.290
So you click New, and then you'll
give it the name, femfd-service.

63
00:03:57.010 --> 00:04:00.550
I would go ahead and make this private
just because there's really no need to

64
00:04:00.550 --> 00:04:01.890
make this public right now.

65
00:04:03.730 --> 00:04:06.050
And then,
you don't really need anything else.

66
00:04:06.050 --> 00:04:09.405
If you want to add a license or
anything else like that, you can.

67
00:04:09.405 --> 00:04:12.869
But once you're done with that,
go ahead and click New Repository or

68
00:04:12.869 --> 00:04:13.950
Create Repository.

69
00:04:21.230 --> 00:04:26.222
So again, you're basically creating
a new repo called Fem FDService inside

70
00:04:26.222 --> 00:04:27.310
of your GitHub.

71
00:04:27.310 --> 00:04:31.057
You're going to notice that what's kind of
nice is it gives you some commands to run

72
00:04:31.057 --> 00:04:32.270
and stuff like that.

73
00:04:32.270 --> 00:04:37.770
What we really want to do is we want
to take the existing code base,

74
00:04:37.770 --> 00:04:42.100
clone it and
then push that to our new repo.

75
00:04:42.100 --> 00:04:43.780
That's what we want to do.

76
00:04:43.780 --> 00:04:47.860
What I'm going to do first is I'm
going to go to the FEM FD service.

77
00:04:47.860 --> 00:04:51.819
Let me go to code, and then I'm
going to click my option of cloning.

78
00:04:51.819 --> 00:04:54.620
In this case,
I like to use the GitHub CLI.

79
00:04:54.620 --> 00:04:56.500
So I'm gonna copy that.

80
00:04:56.500 --> 00:04:58.340
Then I'm going to go to my terminal.

81
00:04:58.340 --> 00:05:01.660
For me,
I'm just going to put it on My desktop.

82
00:05:01.660 --> 00:05:03.620
You guys are welcome to
put it wherever you want.

83
00:05:05.250 --> 00:05:08.690
So I'm going to do paste this in and
then I'm going to hit enter.

84
00:05:11.730 --> 00:05:19.130
So then I'm going to go into my repo
right now again, this is the base repo.

85
00:05:19.130 --> 00:05:21.090
We haven't done anything yet.

86
00:05:21.090 --> 00:05:22.250
We were just given it.

87
00:05:22.250 --> 00:05:24.530
We have no idea what's in this repo or
anything.

88
00:05:24.530 --> 00:05:27.170
We just, we want to make sure
it's stored in the right place.

89
00:05:27.170 --> 00:05:32.560
So then what I'm going to do is I'm
going to do git remote origin or

90
00:05:32.560 --> 00:05:35.900
I'm sorry, git remote add origin new.

91
00:05:37.740 --> 00:05:41.100
Again.
I'm in the base repo that I just cloned.

92
00:05:41.100 --> 00:05:44.565
Then I'm going to go back to
the repo that I just created and

93
00:05:44.565 --> 00:05:46.700
I'm going to copy this right here.

94
00:05:47.740 --> 00:05:50.140
Does anyone know what I'm
doing before I go further?

95
00:05:50.140 --> 00:05:53.260
Does anyone know what this does?

96
00:05:53.260 --> 00:05:56.715
Yeah,
&gt;&gt; Speaker 2: you're connecting your new

97
00:05:56.715 --> 00:06:02.030
repo on GitHub to this code base so
you can push it.

98
00:06:02.030 --> 00:06:03.110
&gt;&gt; Erik Reinert: Yep, exactly.

99
00:06:03.110 --> 00:06:06.409
Yeah, so
if you've not worked with Git much,

100
00:06:06.409 --> 00:06:09.630
Git uses some fundamentals
in how it works.

101
00:06:09.630 --> 00:06:13.790
You've got commit, you've got push,
you've got checkout, whatever.

102
00:06:13.790 --> 00:06:18.030
But underneath the hood,
Git uses something called origins.

103
00:06:18.030 --> 00:06:21.710
Origins are where Git pushes and
pulls data from.

104
00:06:21.710 --> 00:06:26.660
So if you've ever been curious of how can
I take an entire repo and then move it,

105
00:06:26.660 --> 00:06:31.310
what you can do is you can go to that
existing repo, configure it to point to

106
00:06:31.310 --> 00:06:36.360
the new repo, and then just simply push
to that new repo and you're good to go.

107
00:06:36.360 --> 00:06:38.600
That's exactly what we're going to do.

108
00:06:38.600 --> 00:06:43.053
After I do Git remote add origin new,

109
00:06:43.053 --> 00:06:47.794
I can just do git push origin new main and

110
00:06:47.794 --> 00:06:51.240
then you will see that.

111
00:06:51.240 --> 00:06:55.410
Now if I refresh this page,
I have my entire code base.

112
00:06:55.410 --> 00:06:56.850
So that's all I want you to do.

113
00:06:56.850 --> 00:07:01.837
That's all I want you to do is I just
want you to clone this repo from

114
00:07:01.837 --> 00:07:06.930
the main branch and simply push it
to your repo by adding an origin.

115
00:07:08.530 --> 00:07:11.554
&gt;&gt; Speaker 3: Could you do that
by forking it on GitHub and

116
00:07:11.554 --> 00:07:13.730
then checking that one out?

117
00:07:13.730 --> 00:07:14.490
&gt;&gt; Erik Reinert: Yeah, you could.

118
00:07:14.490 --> 00:07:16.613
Forks are meant to be merged in.

119
00:07:16.613 --> 00:07:17.410
&gt;&gt; Speaker 3: Sure.
&gt;&gt; Erik Reinert: Right.

120
00:07:17.410 --> 00:07:21.280
So you'll always have like an open fork,
so that you could.

121
00:07:21.280 --> 00:07:24.800
I did think about telling you guys
to just fork it, but I was like,

122
00:07:24.800 --> 00:07:27.680
eh, you wouldn't
technically do it that way.

123
00:07:27.680 --> 00:07:29.360
You'd do something more like this.

124
00:07:29.360 --> 00:07:31.000
All right, so now what I'm going to do is,

125
00:07:31.000 --> 00:07:32.960
I'm actually going to
delete this repository.

126
00:07:32.960 --> 00:07:38.760
So I'm gonna just delete the repo I just
cloned off of my desktop and here I'll.

127
00:07:38.760 --> 00:07:42.289
Sorry, I'll not use my hop commands.

128
00:07:42.289 --> 00:07:49.782
So I'm just going to do RM,
that's rf, not backup.

129
00:07:49.782 --> 00:07:50.660
There we go.

130
00:07:50.660 --> 00:07:52.300
So I'm just gonna remove that repo.

131
00:07:52.300 --> 00:07:57.245
Now the reason why I'm removing that
repo is because that repo is set

132
00:07:57.245 --> 00:08:00.580
up with the one that we cloned from.

133
00:08:00.580 --> 00:08:04.020
But I want to make it so
that I'm using my actual repo.

134
00:08:04.020 --> 00:08:06.609
So then what I'm going to do
is I'm going to go back and

135
00:08:06.609 --> 00:08:10.140
I'm going to do exactly what I did
with the main repo, but now with mine.

136
00:08:10.140 --> 00:08:14.830
So I'm going to go to code
GitHub CLI clone, and

137
00:08:14.830 --> 00:08:20.990
then I'm just going to enter that in,
and now I have my repo.

138
00:08:20.990 --> 00:08:22.990
If you type in that command, thank you.

139
00:08:22.990 --> 00:08:27.790
You should be able to see that we
are referencing the right repo.

140
00:08:27.790 --> 00:08:31.687
Just make sure that you're not referencing
my repo because when you go to push,

141
00:08:31.687 --> 00:08:33.710
you will try pushing to mine.

142
00:08:33.710 --> 00:08:38.575
That's really the only reason why I'm
telling you that if you are in your

143
00:08:38.575 --> 00:08:43.757
main repo, the next thing you're going
to want to do is create a new branch for

144
00:08:43.757 --> 00:08:44.820
your changes.

145
00:08:44.820 --> 00:08:46.820
I don't recommend pushing to main.

146
00:08:46.820 --> 00:08:49.460
You can if you want, but
I don't recommend it.

147
00:08:49.460 --> 00:08:50.980
Get used to using PRs.

148
00:08:50.980 --> 00:08:52.593
Get comfortable with waiting for

149
00:08:52.593 --> 00:08:55.940
status checks because that's going
to be your life moving forward.

150
00:08:57.620 --> 00:08:59.060
Let's go ahead and create a new branch.

151
00:08:59.060 --> 00:09:03.263
If you want to create a new branch,
you can just do git checkout B and

152
00:09:03.263 --> 00:09:05.300
then call it whatever you want.

153
00:09:05.300 --> 00:09:13.310
I'm going to call mine or actually
we'll call it stage zero one Startup.

154
00:09:13.310 --> 00:09:16.434
Yeah, just run that command and

155
00:09:16.434 --> 00:09:21.070
then you should get a brand
new branch created.

156
00:09:22.350 --> 00:09:26.070
Cool, then I don't remember, does that?

157
00:09:26.070 --> 00:09:27.190
I've already got that branch.

158
00:09:27.190 --> 00:09:31.853
So what I'm going to do is I'm going
to call mine Workshop because that's

159
00:09:31.853 --> 00:09:34.350
the branch I'm going to be working in.

160
00:09:35.700 --> 00:09:39.860
Then, you'll see that my branch
has now changed to workshop.

161
00:09:39.860 --> 00:09:43.639
If you want to make sure you should
be able to do git status and

162
00:09:43.639 --> 00:09:48.260
then it'll say on branch workshop or
I'm sorry, on branch stage 01.

163
00:09:48.260 --> 00:09:50.980
So it should say on branch stage 01 for
you guys.

164
00:09:50.980 --> 00:09:53.940
For me it'll say workshop just so
that you guys can keep up.

165
00:09:53.940 --> 00:09:57.460
You might be Like, Eric,
why are you like, what is wt?

166
00:09:58.580 --> 00:10:00.410
So I use something called Work Trees.

167
00:10:00.410 --> 00:10:01.850
Git Work Trees.

168
00:10:01.850 --> 00:10:07.130
I'm not going to go into detail on what
that is because it's its own world.

169
00:10:07.130 --> 00:10:11.730
But the easiest way to describe it, if you
are curious, is it basically makes it.

170
00:10:11.730 --> 00:10:14.170
You'll notice that I have
three directories here.

171
00:10:15.530 --> 00:10:17.599
With normal git,
you would have your repo and

172
00:10:17.599 --> 00:10:22.330
then you'd be the branch that you're in,
and then you'd switch between branches.

173
00:10:22.330 --> 00:10:23.234
Work Trees make it so

174
00:10:23.234 --> 00:10:26.170
that you can actually have branches
in individual directories.

175
00:10:27.240 --> 00:10:31.800
In this case, I actually have stage 01,
02 and 03 all checked out.

176
00:10:31.800 --> 00:10:35.222
Then if I want to, I can just jump
into that, or I can jump into this, or

177
00:10:35.222 --> 00:10:36.280
I can jump into this.

178
00:10:37.720 --> 00:10:40.738
If you've ever been curious
about how can I up my git game,

179
00:10:40.738 --> 00:10:43.720
what are some cool things
that are really helpful?

180
00:10:43.720 --> 00:10:44.720
This is massive.

181
00:10:44.720 --> 00:10:46.280
I really love git Work trees.

182
00:10:46.280 --> 00:10:48.280
Again, they're a big part of my workflow.

183
00:10:49.800 --> 00:10:51.799
If I just do Workshop,

184
00:10:51.799 --> 00:10:57.500
then you'll see I get a directory
called Workshop now created.

185
00:10:57.500 --> 00:11:02.060
Even though I created the branch now I
actually created a directory for it.

186
00:11:02.060 --> 00:11:04.300
So now I'm in Workshop Workshop.

187
00:11:04.300 --> 00:11:08.208
So it's just a really nice way to be
able to have multiple projects open and

188
00:11:08.208 --> 00:11:10.740
stuff like that simultaneously
if you need to.

189
00:11:10.740 --> 00:11:12.300
So what have we done so far?

190
00:11:12.300 --> 00:11:15.783
So again, we got our source code,
we cloned that,

191
00:11:15.783 --> 00:11:18.300
we then created a new repo of our own.

192
00:11:18.300 --> 00:11:23.960
We push that up, and now we have
basically, a working version control.

193
00:11:23.960 --> 00:11:27.274
So if we were talking about like goals and
the things that we've accomplished,

194
00:11:27.274 --> 00:11:30.588
we just accomplish the very first thing,
which is getting our code somewhere so

195
00:11:30.588 --> 00:11:32.040
that people can contribute to it.

196
00:11:32.040 --> 00:11:36.085
So if you want to, you know, if you want
to look at it from this perspective,

197
00:11:36.085 --> 00:11:39.080
this is your first step in
the line of what we're doing.

198
00:11:39.080 --> 00:11:41.480
We have to put our source code somewhere,
right?

199
00:11:41.480 --> 00:11:43.000
So this is how we did it.

