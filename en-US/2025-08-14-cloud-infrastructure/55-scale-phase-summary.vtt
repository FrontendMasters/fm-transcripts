WEBVTT

1
00:00:00.160 --> 00:00:01.120
&gt;&gt; Erik Reinert: So what changed?

2
00:00:01.120 --> 00:00:02.720
We added state with a bucket.

3
00:00:02.720 --> 00:00:04.480
We didn't have any of that before.

4
00:00:04.480 --> 00:00:07.520
We also added networking database,
cluster and services.

5
00:00:07.520 --> 00:00:10.080
We added multiple environments for
support.

6
00:00:10.080 --> 00:00:12.640
We added staging and production.

7
00:00:12.640 --> 00:00:15.919
Outside of that, we also added jobs for
running Terraform.

8
00:00:15.919 --> 00:00:18.240
We added migrations to run on ecs.

9
00:00:18.240 --> 00:00:23.760
You saw us run it directly as well as
updated deployments to go on ECS as well.

10
00:00:23.760 --> 00:00:26.880
So that deployment script really
takes care of the last two part.

11
00:00:26.880 --> 00:00:29.301
The new workflow takes care of the jobs.

12
00:00:29.301 --> 00:00:33.239
The multiple environment support is all
done in our our environment module and

13
00:00:33.239 --> 00:00:33.980
Terraform.

14
00:00:33.980 --> 00:00:37.604
Inside of our environment module is all
of our networking databases, cluster and

15
00:00:37.604 --> 00:00:38.620
services.

16
00:00:38.620 --> 00:00:43.523
And then everything that we provision
exists inside of our state in the bucket.

17
00:00:43.523 --> 00:00:44.940
And that's what we've built today.

18
00:00:44.940 --> 00:00:47.980
Again, it's so much work just
to get one container running.

19
00:00:49.020 --> 00:00:51.180
But let's talk about
the pros really quickly.

20
00:00:51.180 --> 00:00:52.620
So what are the phase pros?

21
00:00:52.620 --> 00:00:56.300
We've automated our cloud management
pretty much entirely, right?

22
00:00:56.300 --> 00:01:00.972
Like we can go from zero all the way
to running now with instances and

23
00:01:00.972 --> 00:01:03.550
everything else that we need.

24
00:01:03.550 --> 00:01:06.350
We consolidated our
cloud resources as well.

25
00:01:06.350 --> 00:01:11.070
We consolidated it so well that we can
create environments based off of it now.

26
00:01:11.070 --> 00:01:14.750
So heavy consolidation that
made it really easy to manage.

27
00:01:14.750 --> 00:01:16.870
We standardized our
infrastructure as well.

28
00:01:16.870 --> 00:01:19.516
We said, okay,
this is what you need to create a network,

29
00:01:19.516 --> 00:01:21.470
this is what you need
to create a database.

30
00:01:21.470 --> 00:01:23.630
This is what you need to create a service.

31
00:01:23.630 --> 00:01:26.121
And we standardized that with
those modules to make it so

32
00:01:26.121 --> 00:01:28.250
that it's really easy to reuse those.

33
00:01:28.250 --> 00:01:31.444
But hands down, the biggest one is,
yeah, we absolutely made it so

34
00:01:31.444 --> 00:01:33.530
that it supports tons of future solutions.

35
00:01:33.530 --> 00:01:37.255
I'm sure you guys can look at this and
understand the amount of stuff you could

36
00:01:37.255 --> 00:01:39.610
build on top of it,
how you could grow it out.

37
00:01:39.610 --> 00:01:42.490
You can add tons of services
to the platform if you want.

38
00:01:42.490 --> 00:01:45.252
Now again, you can chop it up,
move it around,

39
00:01:45.252 --> 00:01:49.690
change it any way that you want because
you have such a great control over it.

40
00:01:51.370 --> 00:01:56.170
The cons, there are cons and
I think you see some of them.

41
00:01:56.170 --> 00:01:59.920
For starters,
this really does require a team to manage.

42
00:01:59.920 --> 00:02:02.520
I would not expect anybody
to manage this on their own.

43
00:02:02.520 --> 00:02:04.640
It's way too much for one person.

44
00:02:04.640 --> 00:02:06.913
It's tons of resources.

45
00:02:06.913 --> 00:02:11.482
If it's just you do the app runner
approach, do me a favor and

46
00:02:11.482 --> 00:02:14.000
go from startup to growth first.

47
00:02:14.000 --> 00:02:17.040
And then let's talk about
when you actually have users.

48
00:02:17.040 --> 00:02:21.760
Going through that process will be
a lot more beneficial in the long run.

49
00:02:21.760 --> 00:02:25.920
Even though, yes, you could start with all
this stuff, it's a lot of complication.

50
00:02:26.960 --> 00:02:29.070
Again, I think you could see that now.

51
00:02:29.070 --> 00:02:32.310
And that was again,
a big part of this course.

52
00:02:32.310 --> 00:02:34.710
Requires custom solutions as well.

53
00:02:34.710 --> 00:02:36.335
Before in the previous stuff,

54
00:02:36.335 --> 00:02:41.350
I didn't have to write any complex kind
of weird script or anything like that.

55
00:02:41.350 --> 00:02:45.411
This definitely has more complexity with
needing to know a little bit more about

56
00:02:45.411 --> 00:02:46.470
Cloud and Amazon.

57
00:02:46.470 --> 00:02:51.313
And there was a lot of knowledge
obviously that I brought in because I was

58
00:02:51.313 --> 00:02:54.580
experienced on Amazon and whatnot.

59
00:02:54.580 --> 00:02:55.631
But then the last one too is.

60
00:02:55.631 --> 00:02:57.700
Requires shared knowledge, right?

61
00:02:57.700 --> 00:03:00.074
So again,
once you start standardizing things,

62
00:03:00.074 --> 00:03:03.894
you start making your own language
of like, well, this is a database.

63
00:03:03.894 --> 00:03:05.460
Well, that's what that means to us.

64
00:03:05.460 --> 00:03:06.780
Or this is a cluster.

65
00:03:06.780 --> 00:03:08.420
That's what that means to us.

66
00:03:08.420 --> 00:03:12.360
And so like, for example, when we have
new hires, sometimes we'll say, yeah,

67
00:03:12.360 --> 00:03:13.260
we have clusters.

68
00:03:13.260 --> 00:03:14.940
And they'll be like, kubernetes clusters.

69
00:03:14.940 --> 00:03:18.980
And we're like, no,
ECS shouldn't have assumed.

70
00:03:18.980 --> 00:03:22.946
And so yeah, it's a kind of a shared
knowledge as you start taking on

71
00:03:22.946 --> 00:03:27.340
this management more and more that
will be shared amongst your teammates.

