WEBVTT

1
00:00:00.130 --> 00:00:03.978
&gt;&gt; Brian Holt: As soon as you request the
breeds list, what you're gonna do with it?

2
00:00:06.382 --> 00:00:08.114
&gt;&gt; Brian Holt: So
this data comes from the API,

3
00:00:08.114 --> 00:00:10.754
in fact,
if you look here in my network console.

4
00:00:12.737 --> 00:00:13.870
&gt;&gt; Brian Holt: Refresh.

5
00:00:25.772 --> 00:00:28.041
&gt;&gt; Brian Holt: If I go to response, yeah,

6
00:00:28.041 --> 00:00:32.502
notice it's getting all
these from the API, right.

7
00:00:32.502 --> 00:00:35.493
And that's what populating
this drop down up here.

8
00:00:38.058 --> 00:00:43.590
&gt;&gt; Brian Holt: So, let's go look at how we
would kind of do that using our code here.

9
00:00:46.740 --> 00:00:49.625
So we're gonna get the breeds list off.

10
00:00:49.625 --> 00:00:51.421
We're gonna just work
through this together and

11
00:00:51.421 --> 00:00:53.010
then I'll let you do the rest by yourself.

12
00:00:59.308 --> 00:01:02.836
&gt;&gt; Brian Holt: So,
let's just go ahead and I'm gonna,

13
00:01:06.126 --> 00:01:09.650
&gt;&gt; Brian Holt: Const, BREEDS_URL

14
00:01:11.021 --> 00:01:14.550
equals dot, right?

15
00:01:14.550 --> 00:01:17.048
So that's gonna get all of
the breeds from the API.

16
00:01:23.407 --> 00:01:27.555
&gt;&gt; Brian Holt: We're gonna do
a fetch(BREEDS_URL), right,

17
00:01:27.555 --> 00:01:30.480
just like we did before, dot then.

18
00:01:30.480 --> 00:01:34.410
We're gonna get back our response,

19
00:01:34.410 --> 00:01:39.229
we're going to return response.json, and

20
00:01:39.229 --> 00:01:42.036
then dot then after that.

21
00:01:44.480 --> 00:01:47.790
&gt;&gt; Brian Holt: This is gonna be
all of the data that we get back.

22
00:01:50.180 --> 00:01:53.762
Or, yeah, I'm using arrow functions here,
but you can also use function,

23
00:01:59.414 --> 00:02:02.389
&gt;&gt; Brian Holt: Just do it this way,

24
00:02:02.389 --> 00:02:07.292
response function data, okay.

25
00:02:07.292 --> 00:02:09.876
So let's just const a log
this out right here.

26
00:02:09.876 --> 00:02:15.140
Console.log, breeds our data dot,
whatever.

27
00:02:16.650 --> 00:02:18.750
Come back over here to our dog viewer.

28
00:02:20.080 --> 00:02:25.717
We have, not this one, this one.

29
00:02:28.862 --> 00:02:31.532
&gt;&gt; Brian Holt: So
if we look here at the console,

30
00:02:36.015 --> 00:02:37.178
&gt;&gt; Brian Holt: Notice that

31
00:02:37.178 --> 00:02:41.490
the message here is all the breeds, right.

32
00:02:41.490 --> 00:02:43.070
So, we got all that back from the API.

33
00:02:45.696 --> 00:02:49.612
&gt;&gt; Brian Holt: Should be seeing this,
right?

34
00:02:49.612 --> 00:02:52.500
It's just line 24 through line 32 there.

35
00:02:52.500 --> 00:02:55.081
That's all the code that
we're concern about.

36
00:03:03.033 --> 00:03:05.891
&gt;&gt; Brian Holt: Now what I'm wanna
do is I'm gonna take this and

37
00:03:05.891 --> 00:03:07.967
turn it into a select box, right?

38
00:03:16.451 --> 00:03:20.063
&gt;&gt; Brian Holt: So, what we're gonna do,
this is an object,

39
00:03:20.063 --> 00:03:23.500
and I want to access
every key in the object.

40
00:03:25.320 --> 00:03:29.580
So if you remember, we talked about

41
00:03:29.580 --> 00:03:36.398
console.log(Objects.keys(data.message)).

42
00:03:41.735 --> 00:03:44.614
&gt;&gt; Brian Holt: Talk about that here in
a second, but now notice this is an array.

43
00:03:49.631 --> 00:03:53.103
&gt;&gt; Brian Holt: So
to make a little bit clear, so

44
00:03:53.103 --> 00:03:57.487
const breedsObject=data.message.

45
00:03:58.850 --> 00:04:02.597
Right, this is the object
full of dog breeds.

46
00:04:02.597 --> 00:04:09.028
And then if I wanna get
all the const breedsArray,

47
00:04:09.028 --> 00:04:16.698
I wanna make that
object.keys(breedsObject), oops.

48
00:04:23.577 --> 00:04:29.609
&gt;&gt; Brian Holt: Make sense, good so far?

49
00:04:29.609 --> 00:04:32.723
Now, I'm gonna do something really
similar to what I was doing up here,

50
00:04:32.723 --> 00:04:34.163
where I was creating image tags.

51
00:04:36.774 --> 00:04:40.340
&gt;&gt; Brian Holt: I'm gonna
create a bunch of options.

52
00:04:42.520 --> 00:04:45.428
So let's go to our
index.html really quick.

53
00:04:45.428 --> 00:04:49.139
I'm gonna put a select here,

54
00:04:49.139 --> 00:04:54.343
class equals, we'll call this breeds.

55
00:04:58.730 --> 00:05:01.822
&gt;&gt; Brian Holt: Okay, and if I refresh over
here, now I have this empty drop down

56
00:05:01.822 --> 00:05:04.990
underneath the add doggo button,
right, nothing's in it yet.

57
00:05:04.990 --> 00:05:08.813
And all I did was I add line 14,

58
00:05:12.537 --> 00:05:15.099
&gt;&gt; Brian Holt: Here in doggos,

59
00:05:15.099 --> 00:05:17.113
the js file.

60
00:05:17.113 --> 00:05:21.486
I'm gonna grab that breed selector
as a const select equals document.

61
00:05:24.990 --> 00:05:30.640
&gt;&gt; Brian Holt: Get, or query rather,
query selector breeds.

62
00:05:30.640 --> 00:05:31.599
Let's make this a little bit bigger.

63
00:05:35.813 --> 00:05:41.180
&gt;&gt; Brian Holt: And
I'm gonna do a for loop here,

64
00:05:41.180 --> 00:05:45.778
for let i = 0, i is less than

65
00:05:45.778 --> 00:05:51.161
breedsarray.length i++).

66
00:05:51.161 --> 00:05:53.772
And then for each one of these breeds,

67
00:05:53.772 --> 00:05:57.533
I wanna create an option
inside of the select, right?

68
00:05:57.533 --> 00:06:02.552
So I'm gonna say, const

69
00:06:02.552 --> 00:06:08.049
option = document.get,

70
00:06:08.049 --> 00:06:13.550
or rather create element.

71
00:06:16.670 --> 00:06:20.676
Option, just like we do with the image,
right,

72
00:06:20.676 --> 00:06:24.210
we're creating an option tag for the dom.

73
00:06:24.210 --> 00:06:30.568
We're gonna say, option.value.

74
00:06:33.896 --> 00:06:39.169
&gt;&gt; Brian Holt: Equals breeds array I,
cuz if you remember, if you're doing drop

75
00:06:39.169 --> 00:06:44.539
downs, you have to have an option
because that's what's actually

76
00:06:44.539 --> 00:06:50.400
going to be selected whenever you select
the option in the drop down here.

77
00:06:50.400 --> 00:06:57.957
And then we're also gonna say,
option.intertext equals the same thing.

78
00:07:04.289 --> 00:07:04.866
&gt;&gt; Brian Holt: Okay,

79
00:07:04.866 --> 00:07:11.600
now we have an option that's ready
to be inserted into our application.

80
00:07:11.600 --> 00:07:18.421
So I'm gonna say
select.appendChild(option).

81
00:07:18.421 --> 00:07:21.040
So now hopefully, if we refresh over here.

82
00:07:24.060 --> 00:07:24.995
Nothing will happen.

83
00:07:31.906 --> 00:07:35.417
&gt;&gt; Brian Holt: So that's fun,
let's see why that's happening.

84
00:07:44.976 --> 00:07:47.745
&gt;&gt; Brian Holt: Dot breeds,
[LAUGH] I did the same thing you did.

85
00:07:47.745 --> 00:07:50.289
[LAUGH] It's the other direction though.

86
00:07:50.289 --> 00:07:52.581
All right, so now there we go.

87
00:07:56.454 --> 00:07:58.150
&gt;&gt; Brian Holt: So
what I messed up was on line 35 here.

88
00:07:58.150 --> 00:08:01.640
I forgot the period because you have
to be selecting the class breeds.

89
00:08:03.260 --> 00:08:07.610
&gt;&gt; Speaker 2: On line 32,
what is object again?

90
00:08:07.610 --> 00:08:08.860
&gt;&gt; Brian Holt: BreedsObject?

91
00:08:08.860 --> 00:08:10.244
What is like, this object?

92
00:08:13.023 --> 00:08:16.850
&gt;&gt; Brian Holt: It's something that
JavaScript makes available to you.

93
00:08:16.850 --> 00:08:19.967
So, there's a bunch of other thing
that objects can do for you.

94
00:08:19.967 --> 00:08:21.193
In this particular case,

95
00:08:21.193 --> 00:08:25.039
we're just gonna use the keys function
to get all the keys out of an object.

96
00:08:25.039 --> 00:08:27.370
&gt;&gt; Speaker 2: An object would be
the data that you're getting in?

97
00:08:27.370 --> 00:08:28.704
&gt;&gt; Brian Holt: Right, it does-
&gt;&gt; Speaker 2: Or the message,

98
00:08:28.704 --> 00:08:29.870
the breedsObject?

99
00:08:29.870 --> 00:08:32.503
&gt;&gt; Brian Holt: Yeah, the breedsObject,
here they got from data.message.

100
00:08:32.503 --> 00:08:35.077
&gt;&gt; Speaker 2: So
why are we not calling it breedsObject,

101
00:08:35.077 --> 00:08:39.930
how does it know that object means
breedsObject and not any other object?

102
00:08:39.930 --> 00:08:45.070
&gt;&gt; Brian Holt: So, if I'll actually just
come in here, it is a good question.

103
00:08:46.210 --> 00:08:47.890
So if I type an object here,

104
00:08:47.890 --> 00:08:54.400
this is actually a whole JavaScript class
Universally available everywhere, right?

105
00:08:54.400 --> 00:08:58.970
So, this object refers to this
helper object that's available.

106
00:08:58.970 --> 00:09:01.430
Like we were using date as well, right?

107
00:09:01.430 --> 00:09:04.331
Said that this is a similar thing
that it's just a helper for

108
00:09:04.331 --> 00:09:05.501
working with objects.

109
00:09:05.501 --> 00:09:06.444
&gt;&gt; Speaker 2: Okay.

110
00:09:08.402 --> 00:09:10.059
&gt;&gt; Brian Holt: Does that
answer your question?

111
00:09:10.059 --> 00:09:11.344
&gt;&gt; Speaker 2: Yeah.

112
00:09:11.344 --> 00:09:14.710
&gt;&gt; Brian Holt: So object.keys is
a function that you pass in an object and

113
00:09:14.710 --> 00:09:15.490
it gives you back an array.

114
00:09:16.680 --> 00:09:18.870
That's the entire magic there.

115
00:09:18.870 --> 00:09:23.406
&gt;&gt; Speaker 2: And I couldn't say const
breedsArray is breeds object.keys or

116
00:09:23.406 --> 00:09:24.970
something?

117
00:09:24.970 --> 00:09:26.130
&gt;&gt; Brian Holt: Nope,
this is how you have to do it.

118
00:09:27.430 --> 00:09:28.660
There are other ways to do it.

119
00:09:28.660 --> 00:09:30.650
In fact, this is relatively new.

120
00:09:32.030 --> 00:09:36.977
But this is one line as
opposed to like five lines.

121
00:09:36.977 --> 00:09:38.148
Does that answer your question?

122
00:09:38.148 --> 00:09:38.744
&gt;&gt; Speaker 2: Mm-hm.

123
00:09:38.744 --> 00:09:41.190
&gt;&gt; Brian Holt: Cool, yeah.

124
00:09:41.190 --> 00:09:44.150
&gt;&gt; Speaker 3: I'm just wondering the
difference since we are now working with

125
00:09:44.150 --> 00:09:47.250
an array,
why we're using create element and

126
00:09:47.250 --> 00:09:51.590
append child verses push or
pop, have you talked about it?

127
00:09:51.590 --> 00:09:54.470
&gt;&gt; Brian Holt: Yeah, so
that's a great question.

128
00:09:56.410 --> 00:10:01.150
When we're doing arrays here, that those
have methods on for push and pop and

129
00:10:01.150 --> 00:10:01.750
all that kind of stuff.

130
00:10:01.750 --> 00:10:03.550
So if I wanted to add
another breed in here,

131
00:10:03.550 --> 00:10:08.330
I could totally say
like breeds array.push.

132
00:10:08.330 --> 00:10:10.810
And just cuz I'm better I'm gonna
put push have a nice in there.

133
00:10:12.902 --> 00:10:15.650
I have, spell nice,

134
00:10:15.650 --> 00:10:21.400
this would totally work because this is
an array, right, but what is select here?

135
00:10:21.400 --> 00:10:24.890
Select is actually a dom element,
right, its not an array.

136
00:10:24.890 --> 00:10:30.270
So this is the way you add something
inside of a dom element or a tag, right.

137
00:10:30.270 --> 00:10:33.979
This is the, if we are looking
at our HTML, it represents this.

138
00:10:35.730 --> 00:10:38.098
Right, so that's not an array,
so it doesn't have push on it.

139
00:10:38.098 --> 00:10:41.332
The only thing that you can do here is you
can append new things inside of it using

140
00:10:41.332 --> 00:10:43.940
this method here called appendChild.

141
00:10:43.940 --> 00:10:45.150
And that it's just the name of the method.

142
00:10:45.150 --> 00:10:47.490
They could have called it push but
they called it appendChild.

