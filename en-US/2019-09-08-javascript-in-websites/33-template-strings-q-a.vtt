WEBVTT

1
00:00:00.098 --> 00:00:06.479
&gt;&gt; Speaker 1: Just a reminder on when
we use backticks to separate content.

2
00:00:06.479 --> 00:00:10.690
&gt;&gt; Brian Holt: So you can always
use backticks to make strings,

3
00:00:10.690 --> 00:00:15.117
so I can say const someString
= 'this is a string.

4
00:00:15.117 --> 00:00:18.759
Even if you're not doing anything special
that you can always use backticks.

5
00:00:18.759 --> 00:00:22.868
However, if you wanna do
this string interpolation or

6
00:00:22.868 --> 00:00:25.737
a template string, as it's called.

7
00:00:25.737 --> 00:00:28.561
So, I wanna put my event.target.value
in the middle of it.

8
00:00:28.561 --> 00:00:32.428
That's where you use the dollar sign and
curly braces here.

9
00:00:32.428 --> 00:00:35.935
And then whatever's inside of there will
actually be output into the string, right?

10
00:00:35.935 --> 00:00:39.881
Whereas if I just put something like that
inside of here without the curly braces,

11
00:00:39.881 --> 00:00:43.027
it's literally going to put
the output event.target.value,

12
00:00:43.027 --> 00:00:44.246
which is not what I want.

13
00:00:47.281 --> 00:00:51.097
&gt;&gt; Brian Holt: And then, here, if I just
had this to be normal quotes or double

14
00:00:51.097 --> 00:00:55.995
quotes, this is actually, literally,
gonna output to the same thing as well.

15
00:00:55.995 --> 00:01:00.638
That's why you can see the syntax
highlighting, everything's brown on it.

16
00:01:00.638 --> 00:01:04.139
So, you have to use backticks,

17
00:01:04.139 --> 00:01:08.555
otherwise you don't get that ability.

18
00:01:08.555 --> 00:01:09.378
Makes sense?

19
00:01:09.378 --> 00:01:12.315
&gt;&gt; Speaker 1: Yeah, or kind of like when
you have a string inside of a string.

20
00:01:14.221 --> 00:01:18.772
&gt;&gt; Brian Holt: Yeah, so this is basically
putting these strings together, yeah.

21
00:01:24.941 --> 00:01:28.069
&gt;&gt; Brian Holt: In other way you can think
about that is this is technically call

22
00:01:28.069 --> 00:01:31.444
the JavaScript expression,
not that you really need to know that.

23
00:01:31.444 --> 00:01:34.713
But as a good rule of thumb
of what an expression is,

24
00:01:34.713 --> 00:01:39.970
is const x = it's anything that can be on
the right side of an assignment, right?

25
00:01:39.970 --> 00:01:46.160
So, here I can have like,
this is cool.toUpperCase,

26
00:01:46.160 --> 00:01:50.385
right, to look something like that.

27
00:01:50.385 --> 00:01:56.177
So, anything I can put on the right
side of that can go here.

28
00:01:56.177 --> 00:01:58.205
So I could put 5 here.

29
00:01:58.205 --> 00:02:01.623
I don't know why you'd want to but
that would work, for example.

30
00:02:05.267 --> 00:02:09.842
&gt;&gt; Brian Holt: Or
you could put Math.random.

31
00:02:09.842 --> 00:02:11.814
If you wanted to output
a random number there, right?

32
00:02:11.814 --> 00:02:12.909
And you can put anything
that you want there.

33
00:02:12.909 --> 00:02:15.404
Anything that can go in the right
side of an equal signs can go there.

34
00:02:18.425 --> 00:02:21.447
&gt;&gt; Brian Holt: Or, in this case,
event.target.value.

35
00:02:21.447 --> 00:02:24.126
&gt;&gt; Speaker 3: So, when you say anything
that can go on the right side of

36
00:02:24.126 --> 00:02:26.473
an equal sign,
basically any JavaScript code.

37
00:02:28.732 --> 00:02:29.893
&gt;&gt; Speaker 3: Or-
&gt;&gt; Speaker 1: Basically, so

38
00:02:29.893 --> 00:02:33.841
what are you differentiating there is like
I can't put an if statement there, right?

39
00:02:33.841 --> 00:02:34.374
&gt;&gt; Speaker 3: Okay.

40
00:02:34.374 --> 00:02:36.849
&gt;&gt; Speaker 1: Because that's a statement,
not an expression per se.

41
00:02:36.849 --> 00:02:40.489
&gt;&gt; Speaker 3: Okay, any JavaScript code
that will return a value can go there.

42
00:02:42.131 --> 00:02:43.370
&gt;&gt; Brian Holt: Okay,
yeah, I'm okay with that.

43
00:02:43.370 --> 00:02:45.818
I'm okay with that [LAUGH].

44
00:02:45.818 --> 00:02:50.828
You could have some function here that
would do something and return a value.

45
00:02:50.828 --> 00:02:52.808
That would be fine.

46
00:02:52.808 --> 00:02:54.530
But you have to draw the line.

47
00:02:54.530 --> 00:02:58.417
I can't put if (this),
this isn't gonna work.

48
00:02:58.417 --> 00:03:01.290
Because if statements are they
are statements, right?

49
00:03:01.290 --> 00:03:02.689
&gt;&gt; Speaker 3: Okay,
yeah, that makes sense.

50
00:03:06.115 --> 00:03:09.187
&gt;&gt; Brian Holt: In general,
you're just gonna output variables, right?

51
00:03:09.187 --> 00:03:10.355
That's in general.

52
00:03:10.355 --> 00:03:16.462
That's all you need to know about it,
that they are more flexible than that.

