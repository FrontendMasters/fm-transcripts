WEBVTT

1
00:00:00.000 --> 00:00:04.250
&gt;&gt; Scott Moss: Let's go
make the Reddit one.

2
00:00:04.250 --> 00:00:09.197
So originally, I was going to get
the front page of Reddit, but probably not

3
00:00:09.197 --> 00:00:14.551
a good idea, especially today, [LAUGH] to
get the front page of Reddit and have it.

4
00:00:14.551 --> 00:00:19.006
I had it doing stuff last night, and I was
like, I can't believe it just did that.

5
00:00:19.006 --> 00:00:20.086
That's kinda crazy.

6
00:00:20.086 --> 00:00:23.446
I don't even wanna know
what that post was, for

7
00:00:23.446 --> 00:00:28.575
that image to get generated like that,
[LAUGH] but that's kind of crazy.

8
00:00:28.575 --> 00:00:31.423
So, I mean, you can do the front
page Redditt if you want,

9
00:00:31.423 --> 00:00:34.058
I'm just not gonna do,
I'm gonna pick a subreddit.

10
00:00:34.058 --> 00:00:36.794
I think I'm gonna pick the,
Dustin showed me the ore,

11
00:00:36.794 --> 00:00:40.421
the cute one was cut of the animals,
but most of them were just images, so

12
00:00:40.421 --> 00:00:43.064
I need something that's
like more text-focused.

13
00:00:43.064 --> 00:00:44.943
So I'm gonna pick the the NBA one.

14
00:00:44.943 --> 00:00:45.917
There was a lot of text on there.

15
00:00:45.917 --> 00:00:47.320
So I'll just pick the NBA one.

16
00:00:47.320 --> 00:00:49.100
You can pick whatever subreddit you want.

17
00:00:49.100 --> 00:00:51.331
You can do the front page of Reddit,
I'll show you how to do it.

18
00:00:51.331 --> 00:00:52.394
It's super simple.

19
00:00:52.394 --> 00:00:56.458
I'm just gonna do the NBA subreddit,
that way I don't get in trouble.

20
00:00:56.458 --> 00:00:59.302
[LAUGH] Cuz that front page is crazy.

21
00:00:59.302 --> 00:01:00.935
[LAUGH] You're not gonna do that.

22
00:01:00.935 --> 00:01:06.908
And we're gonna do the same
stuff here as the import,

23
00:01:06.908 --> 00:01:10.501
was it fetched from no-fetch?

24
00:01:10.501 --> 00:01:11.080
There we go.

25
00:01:11.080 --> 00:01:16.135
So, exports const redditToolDefinition,

26
00:01:16.135 --> 00:01:19.330
we're gonna give it a name.

27
00:01:19.330 --> 00:01:20.730
I'm just gonna call it reddit.

28
00:01:20.730 --> 00:01:22.805
I mean, you don't have to do
exactly what I'm doing here.

29
00:01:22.805 --> 00:01:24.787
If you wanna call it a different name,
give it a different name.

30
00:01:24.787 --> 00:01:27.390
If you wanna have it take some parameters,
actually,

31
00:01:27.390 --> 00:01:29.654
I don't think you can
have it take parameters,

32
00:01:29.654 --> 00:01:33.129
cuz the API that we're using takes
no parameters, but you get my point.

33
00:01:33.129 --> 00:01:36.287
So I'm just gonna say,
get the latest posts from Reddit.

34
00:01:36.287 --> 00:01:39.374
I'm doing NBA, so
I could just come in here and be like,

35
00:01:39.374 --> 00:01:43.666
get the latest NBA post from Reddit, but
I'm not gonna let the AI think that.

36
00:01:43.666 --> 00:01:47.611
That way I don't have to ask very specific
things in my chat like show me the latest

37
00:01:47.611 --> 00:01:49.711
NBA, just show me something from Reddit.

38
00:01:49.711 --> 00:01:50.587
And then it doesn't know.

39
00:01:50.587 --> 00:01:57.701
So I'll do that, I'll make my Args
again with my inference here.

40
00:01:57.701 --> 00:02:02.042
So z.infer, Reddit tool parameters,
which is literally nothing.

41
00:02:02.042 --> 00:02:05.781
So I don't really have to make this
to be honest, but it's just a habit.

42
00:02:05.781 --> 00:02:07.426
And then,
let's actually make the function.

43
00:02:07.426 --> 00:02:10.716
So we'll say,

44
00:02:10.716 --> 00:02:15.526
export const reddit =

45
00:02:15.526 --> 00:02:23.639
ToolFunctionArgs string&gt;, oops.

46
00:02:28.301 --> 00:02:30.961
&gt;&gt; Scott Moss: There we go,
I need a comma there.

47
00:02:30.961 --> 00:02:34.517
And yeah, we'll get that data.

48
00:02:34.517 --> 00:02:36.418
So we'll call it Redditt, and
this is where you can change it.

49
00:02:36.418 --> 00:02:38.960
So I'm going to change mine to the NBA, so

50
00:02:38.960 --> 00:02:42.749
I'm gonna say that, and
then you need to do .json at the end.

51
00:02:42.749 --> 00:02:46.780
So any subreddit you want /.json,
like if I go through this right now,

52
00:02:46.780 --> 00:02:48.910
it's just gonna give me all the json.

53
00:02:52.325 --> 00:02:53.235
&gt;&gt; Scott Moss: There we go.

54
00:02:53.235 --> 00:02:55.341
And it's the same structure no
matter what subreddit you go to,

55
00:02:55.341 --> 00:02:57.216
even if it's the front page,
it's the same structure.

56
00:02:57.216 --> 00:02:59.652
So this code will work no matter what.

57
00:02:59.652 --> 00:03:03.829
So I'm gonna do that, I get the data.

58
00:03:03.829 --> 00:03:07.169
I could just send back all this data to
the LLM right now, but it's a lot of data.

59
00:03:07.169 --> 00:03:11.327
Look at all this,
look at all these tokens.

60
00:03:11.327 --> 00:03:13.553
These are all tokens that's gonna be,
honestly,

61
00:03:13.553 --> 00:03:15.844
this might be more tokens
than what the LLM can take.

62
00:03:15.844 --> 00:03:18.869
So I'm not gonna send back all of this,
right?

63
00:03:18.869 --> 00:03:21.457
So I wanna format this
before I send it back.

64
00:03:21.457 --> 00:03:25.619
So that's what I have in my code up here,
or wherever Redditt is.

65
00:03:25.619 --> 00:03:27.710
Here we go.

66
00:03:27.710 --> 00:03:29.231
I'm doing this, so

67
00:03:29.231 --> 00:03:34.516
I'm actually just gonna copy that
because that's just a lot of work.

68
00:03:34.516 --> 00:03:38.773
But yeah, I'm only gonna send back an
array of these objects that have a title,

69
00:03:38.773 --> 00:03:41.393
a link, a subreddit,
an author, and upvotes.

70
00:03:41.393 --> 00:03:45.188
Put whatever you want, whatever you want
to be able to ask your LLM, put it there.

71
00:03:45.188 --> 00:03:47.547
If you think it's useful, put it there.

72
00:03:47.547 --> 00:03:48.743
You can do whatever you want there.

73
00:03:48.743 --> 00:03:54.369
But these are the things that I thought
were interesting, so I put them there.

74
00:03:54.369 --> 00:03:57.938
And then the last thing is, like I said,
you always have to return a string.

75
00:03:57.938 --> 00:04:01.186
So I'm gonna return that.

76
00:04:01.186 --> 00:04:09.287
And I've always had better look
when I format the JSON to the LLM.

77
00:04:09.287 --> 00:04:14.228
Again, it's very human-like, even though
I know it formats the string before it

78
00:04:14.228 --> 00:04:18.617
processes it and it does different
types of stuff, it gets rid of spaces.

79
00:04:18.617 --> 00:04:24.951
But I've had so much better results when I
stringify, I'll always put spacing on it.

80
00:04:24.951 --> 00:04:29.786
And if you don't know what this does, this
means stringify it and with, spaces of

81
00:04:29.786 --> 00:04:34.855
two, so it's pretty printed out, and not
just like in one line, like regular JSON.

82
00:04:34.855 --> 00:04:38.161
Somehow the AI just reaches better,
just like a human would, I guess.

83
00:04:38.161 --> 00:04:41.825
So I always, when I stringify it and
I pass to the AI, it always just do that.

84
00:04:41.825 --> 00:04:43.322
You don't have to, it's not required.

