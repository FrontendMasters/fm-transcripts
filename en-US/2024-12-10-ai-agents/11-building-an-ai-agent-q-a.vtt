WEBVTT

1
00:00:00.250 --> 00:00:04.112
&gt;&gt; Speaker 1: What if you took
the get weather out of there and

2
00:00:04.112 --> 00:00:07.293
say get stuff and then put in use this.

3
00:00:07.293 --> 00:00:09.395
&gt;&gt; Scott Moss: Get stuff and then do what.

4
00:00:09.395 --> 00:00:12.115
&gt;&gt; Speaker 1: And then change your
description to say use this to get

5
00:00:12.115 --> 00:00:13.049
the weather.

6
00:00:13.049 --> 00:00:17.045
&gt;&gt; Scott Moss: Kay [LAUGH] Use this
to get the weather I think for

7
00:00:17.045 --> 00:00:21.261
sure we'll use it it would for
sure use it now so.

8
00:00:21.261 --> 00:00:25.967
Let's see I think we have to do like
first of all let's not ask it for

9
00:00:25.967 --> 00:00:30.842
the weather like hi what happened
yeah okay that's great I'm so

10
00:00:30.842 --> 00:00:34.391
glad we saw this because I
want to talk about this.

11
00:00:34.391 --> 00:00:38.683
Maybe I told you if you don't send
back once you start getting the tool

12
00:00:38.683 --> 00:00:43.646
calling you have to send back messages in
certain order or the AI will freak out.

13
00:00:43.646 --> 00:00:46.471
This is it so I'm glad we saw this and
I didn't delete my stuff yet.

14
00:00:46.471 --> 00:00:51.972
So basically what this is saying is,
hey, I asked you to run a function.

15
00:00:51.972 --> 00:00:56.014
I expect the the immediate next
message to be a result for

16
00:00:56.014 --> 00:00:59.028
that function, and you didn't do that.

17
00:00:59.028 --> 00:01:00.250
So it's freaking out right now.

18
00:01:00.250 --> 00:01:05.162
You have to reply back to
the function call with the same ID,

19
00:01:05.162 --> 00:01:09.400
in this case it's the ID of this,
with a response.

20
00:01:09.400 --> 00:01:13.529
And I didn't, cuz the next message
I sent was what did I just type in?

21
00:01:13.529 --> 00:01:16.117
I typed in hi so
it's that's not a thing, right?

22
00:01:16.117 --> 00:01:21.231
So if I go look at the database,
what it's saying is that the last

23
00:01:21.231 --> 00:01:27.039
thing I sent you was asking you to
call this function called get weather.

24
00:01:27.039 --> 00:01:31.288
I would expect you to return back
with a message of type tool.

25
00:01:31.288 --> 00:01:34.940
And the content is whatever
you want it to be.

26
00:01:34.940 --> 00:01:42.736
And the tool call ID would be
the same tool call ID as this one.

27
00:01:42.736 --> 00:01:44.594
If it doesn't see that,
it's gonna freak out.

28
00:01:44.594 --> 00:01:48.547
So this is where it can get
pretty complicated sometimes,

29
00:01:48.547 --> 00:01:52.592
especially if you have human in a loop and
things like that.

30
00:01:52.592 --> 00:01:56.468
But let's try it again
with a clear one oops,

31
00:01:56.468 --> 00:01:59.835
guess you do gotta put messages there.

32
00:02:03.463 --> 00:02:07.801
&gt;&gt; Scott Moss: Cool okay, cool I said hi
it didn't ask for weather that's good.

33
00:02:07.801 --> 00:02:10.429
Now, you said ask me for weather?

34
00:02:10.429 --> 00:02:11.501
&gt;&gt; Speaker 2: Yeah.
&gt;&gt; Scott Moss: Okay.

35
00:02:11.501 --> 00:02:12.525
&gt;&gt; Speaker 2: How's the weather?

36
00:02:12.525 --> 00:02:13.509
&gt;&gt; Scott Moss: How's the weather?

37
00:02:21.654 --> 00:02:24.645
&gt;&gt; Scott Moss: It didn't do it,
no, it did it?

38
00:02:24.645 --> 00:02:29.611
No, yeah, I didn't do it,
yeah so even though I told it

39
00:02:29.611 --> 00:02:33.171
to use this for the weather and then
&gt;&gt; Speaker 2: Wait,

40
00:02:33.171 --> 00:02:36.818
do we know that descriptions
li actually making it into

41
00:02:36.818 --> 00:02:37.529
the
&gt;&gt; Scott Moss: Yes,

42
00:02:37.529 --> 00:02:42.466
this description should be that's
what the Zod let's go see.

43
00:02:42.466 --> 00:02:44.547
So this thing right here,
this Zod function thing.

44
00:02:44.547 --> 00:02:50.813
You can see so it'll take in the name
parameters of what you wanna do, and

45
00:02:50.813 --> 00:02:57.931
then in those parameters, you can describe
to the AI what this tool does, right?

46
00:02:57.931 --> 00:03:01.402
So let me show an example of that
&gt;&gt; Speaker 2: There's a top level

47
00:03:01.402 --> 00:03:02.817
description on that.

48
00:03:02.817 --> 00:03:04.119
&gt;&gt; Scott Moss: Yeah, that's how
&gt;&gt; Speaker 2: Object two

49
00:03:04.119 --> 00:03:05.817
&gt;&gt; Scott Moss: Looking at is this what you

50
00:03:05.817 --> 00:03:07.057
guys were saying?

51
00:03:07.057 --> 00:03:07.797
&gt;&gt; Speaker 2: Yeah,
that's what we're saying.

52
00:03:07.797 --> 00:03:10.270
&gt;&gt; Scott Moss: I'm sorry,
I thought you meant here.

53
00:03:10.270 --> 00:03:11.028
&gt;&gt; Speaker 2: No, no, no.

54
00:03:11.028 --> 00:03:11.703
&gt;&gt; Speaker 1: Okay, okay, okay, okay.

55
00:03:11.703 --> 00:03:13.012
&gt;&gt; Scott Moss: I think
you can do that too.

56
00:03:13.012 --> 00:03:14.016
&gt;&gt; Speaker 1: Okay, okay, okay.
&gt;&gt; Speaker 2: Yeah, you might be right.

57
00:03:14.016 --> 00:03:14.858
&gt;&gt; Scott Moss: No, no.
&gt;&gt; Speaker 1: I think doing

58
00:03:14.858 --> 00:03:18.656
that too is like, hey,
if you need this ID, tell it some context.

59
00:03:18.656 --> 00:03:19.395
&gt;&gt; Scott Moss: I see.
&gt;&gt; Speaker 1: That.

60
00:03:19.395 --> 00:03:21.019
&gt;&gt; Scott Moss: No yeah,
no, you guys are right,

61
00:03:21.019 --> 00:03:23.663
I'm sorry we were talking
about two different things.

62
00:03:23.663 --> 00:03:27.254
Okay, so yeah, so
this right here, yeah, okay so

63
00:03:27.254 --> 00:03:29.774
what do you guys want me to put here?

64
00:03:29.774 --> 00:03:31.702
&gt;&gt; Speaker 1: Just that was there.

65
00:03:31.702 --> 00:03:32.331
&gt;&gt; Scott Moss: Okay, cool.

66
00:03:32.331 --> 00:03:33.850
&gt;&gt; Speaker 1: You're
describing the weather tool.

67
00:03:33.850 --> 00:03:38.162
&gt;&gt; Scott Moss: Okay, cool let me delete
my database so we don't get screamed at.

68
00:03:41.569 --> 00:03:47.721
&gt;&gt; Scott Moss: There we go and
then let me say, let's just do Hi,

69
00:03:47.721 --> 00:03:54.030
okay, and then,
what do we expect when I hit this?

70
00:03:54.030 --> 00:03:55.424
&gt;&gt; Speaker 1: I think it'll
call the weather now.

71
00:03:55.424 --> 00:03:59.694
&gt;&gt; Scott Moss: You think I'll call
the weather, and that's because

72
00:03:59.694 --> 00:04:01.176
&gt;&gt; Speaker 1: I'll get stuff for

73
00:04:01.176 --> 00:04:02.290
the weather.

74
00:04:02.290 --> 00:04:04.598
&gt;&gt; Scott Moss: It'll call get suckers
we told us the weather got you.

75
00:04:04.598 --> 00:04:06.385
I think so too, Let's see.

76
00:04:09.603 --> 00:04:12.464
&gt;&gt; Scott Moss: It did,
there you go it called the weather.

77
00:04:12.464 --> 00:04:18.474
So the thing I noticed
about the descriptions is

78
00:04:18.474 --> 00:04:24.495
you reach a point where
you can only put so much.

79
00:04:24.495 --> 00:04:29.312
In the description,
you can't put a full system prompt

80
00:04:29.312 --> 00:04:33.836
in here because then it
loses its ability to reason.

81
00:04:33.836 --> 00:04:37.549
So once you start having
like a lot of tools and

82
00:04:37.549 --> 00:04:42.728
a lot of descriptions in there,
you have to make something that

83
00:04:42.728 --> 00:04:47.638
decides the right tool other
than this assistant, right?

84
00:04:47.638 --> 00:04:51.518
Because you need another LM in front of
this that's again an intent classifier.

85
00:04:51.518 --> 00:04:54.672
That's, hey, given this user message and

86
00:04:54.672 --> 00:04:59.698
this list of tools that this other
agent can do, give me back a list of,

87
00:04:59.698 --> 00:05:04.319
I don't know, objects that describe or
getting back a list of.

88
00:05:04.319 --> 00:05:08.643
All the tools with a confidence score on
like which ones you think I should be

89
00:05:08.643 --> 00:05:11.611
running and
then you can decide what tools to call.

90
00:05:11.611 --> 00:05:14.735
Because once you start adding so
much stuff in here,

91
00:05:14.735 --> 00:05:18.215
three sentences four sentences,
it starts to freak out.

92
00:05:18.215 --> 00:05:21.167
One thing that I learned
that's really good is,

93
00:05:21.167 --> 00:05:25.789
if you always add this one reasoning or
reason yeah, maybe just reasoning.

94
00:05:25.789 --> 00:05:31.423
And you just describe,
why did you pick this tool,

95
00:05:31.423 --> 00:05:36.141
it forces the AI to come
up with a really good

96
00:05:36.141 --> 00:05:41.398
solid reason on why I
decided to pick this tool.

97
00:05:41.398 --> 00:05:45.293
And by having doing that, it sometimes for
prevents it from picking the wrong tool.

98
00:05:45.293 --> 00:05:49.923
So this is chain of thought so sometimes
you'll see this a lot in a lot of

99
00:05:49.923 --> 00:05:54.253
people's prompts is think about this or
tell me why you did this.

100
00:05:54.253 --> 00:05:59.883
And having to do that usually prevents
really bad stuff from happening.

101
00:05:59.883 --> 00:06:03.479
So I have this on every single
tool call that I have made.

102
00:06:03.479 --> 00:06:10.793
And we have 40 of them, so
[LAUGH] Works really good.

103
00:06:10.793 --> 00:06:12.584
Cool, any questions?

104
00:06:12.584 --> 00:06:15.970
&gt;&gt; Speaker 1: Does that get
all put in when you run that?

105
00:06:15.970 --> 00:06:18.660
&gt;&gt; Scott Moss: Yeah, it does you
wanna see it, let's do it yeah,

106
00:06:18.660 --> 00:06:21.492
it does it's kind of funny sometimes,
it's right?

107
00:06:21.492 --> 00:06:22.534
&gt;&gt; Speaker 1: Reasoning it.

108
00:06:22.534 --> 00:06:26.541
&gt;&gt; Scott Moss: Yeah and it helps you
because then you, then you can tune on it

109
00:06:26.541 --> 00:06:31.819
if that's what it thinks, then all right,
let me correct that behavior yeah.

110
00:06:31.819 --> 00:06:34.874
&gt;&gt; Speaker 1: Like you're
fine tuning me now.

111
00:06:34.874 --> 00:06:40.082
&gt;&gt; Scott Moss: [LAUGH] yeah exactly so,
where is it, I gotta log it

112
00:06:40.082 --> 00:06:45.857
better let me log it better yeah,
all right, was it?

113
00:06:45.857 --> 00:06:47.196
There's, yeah,
&gt;&gt; Speaker 1: Accurate weather.

114
00:06:47.196 --> 00:06:50.069
&gt;&gt; Scott Moss: Yeah I picked this to
provide accurate weather information.

115
00:06:50.069 --> 00:06:55.050
Yeah so that makes sense that totally
makes sense that's reasonable,

116
00:06:55.050 --> 00:07:00.211
so, but sometimes here's the thing,
even that can be a hallucination.

117
00:07:00.211 --> 00:07:04.784
So it's [LAUGH] You It'll hallucinate
a good reason and then do the wrong thing,

118
00:07:04.784 --> 00:07:08.213
or it'll do the wrong thing and
hallucinate a good reason.

119
00:07:08.213 --> 00:07:10.953
And it's the reason was great, but

120
00:07:10.953 --> 00:07:15.988
you didn't actually pick the weather
[LAUGH] But you said you did.

121
00:07:15.988 --> 00:07:18.385
Or you didn't pick the weather, but

122
00:07:18.385 --> 00:07:22.650
you said it was a good reason to
pick the weather it's very weird.

123
00:07:22.650 --> 00:07:27.006
One pattern that I found is use the
smaller model to do the stuff, and then

124
00:07:27.006 --> 00:07:31.588
use the bigger model to check the smaller
model and it works out pretty good.

125
00:07:31.588 --> 00:07:37.534
&gt;&gt; Speaker 2: Is there a way to count the
tokens or estimate the tokens response and

126
00:07:37.534 --> 00:07:42.032
what you're sending before
actually sending it?

127
00:07:42.032 --> 00:07:46.955
&gt;&gt; Scott Moss: Yeah there is in Python,
there's one called tip token, or

128
00:07:46.955 --> 00:07:53.170
something like that but NPM, I'm trying
to get the exact name of this one.

129
00:07:53.170 --> 00:07:55.625
Let me find it let me check this one.

130
00:08:00.505 --> 00:08:02.902
&gt;&gt; Scott Moss: This is the one okay,
yeah, GPT, tokenizer yeah,

131
00:08:02.902 --> 00:08:04.106
this one's really good.

132
00:08:04.106 --> 00:08:08.133
So this one will allow you to take in
some texts and return the array of

133
00:08:08.133 --> 00:08:12.797
tokens that you have, and then you can
just count the length of that array, and

134
00:08:12.797 --> 00:08:15.078
you'll see how many tokens you have.

135
00:08:15.078 --> 00:08:18.614
So it also has helper functions
is within token limit.

136
00:08:18.614 --> 00:08:22.453
So you can give it the text,
give it the limit of your model, and

137
00:08:22.453 --> 00:08:25.508
then it'll tell you if
it's within limit or not.

138
00:08:25.508 --> 00:08:30.816
We use this one in production to make
sure we don't break the chat interface

139
00:08:30.816 --> 00:08:35.800
by doing things in rag or anything
that we're doing before we save it.

140
00:08:35.800 --> 00:08:37.741
Before we attempt to save it,
we'll do this.

141
00:08:37.741 --> 00:08:40.703
Sometimes we'll just wait
until the AI screams at us and

142
00:08:40.703 --> 00:08:45.176
we'll detect the error message of like too
many tokens and then we'll go back okay,

143
00:08:45.176 --> 00:08:46.580
sorry, too many tokens.

144
00:08:46.580 --> 00:08:49.141
Let's summarize that answer
before we give it to you, and

145
00:08:49.141 --> 00:08:50.560
then we'll give it back to you.

146
00:08:50.560 --> 00:08:54.054
So we're we're experiment with
a lot of different stuff but yeah,

147
00:08:54.054 --> 00:08:56.394
counting your tokens is
a deal is a good deal.

148
00:08:56.394 --> 00:09:01.312
You probably wanna do that, not just for
making sure your agent doesn't break, but

149
00:09:01.312 --> 00:09:06.107
also for things analytics to see how many
tokens people are using on your product.

150
00:09:06.107 --> 00:09:10.181
Because then you can correlate that to
cost you can go to any you can go to APIs,

151
00:09:10.181 --> 00:09:14.446
docs and they'll tell you this is how much
it costs per million tokens, input and

152
00:09:14.446 --> 00:09:14.968
output.

153
00:09:14.968 --> 00:09:18.365
And that way you can track cost amongst
your users because you're tracking how

154
00:09:18.365 --> 00:09:20.693
many tokens they're sending and
they're getting.

155
00:09:20.693 --> 00:09:24.054
And then you can see how much
users are charge accosting you and

156
00:09:24.054 --> 00:09:26.326
you can charge those people money [LAUGH].

157
00:09:26.326 --> 00:09:30.650
Or if your product is usage based,
you actually have to track these tokens

158
00:09:30.650 --> 00:09:35.758
because you're passing that cost directly
to your users, we're charging you guys.

159
00:09:35.758 --> 00:09:38.680
I don't know, they might obviously
you wouldn't tell them this, but

160
00:09:38.680 --> 00:09:41.369
like in your head you might be
charging a 20% margin on tokens.

161
00:09:41.369 --> 00:09:45.275
So you need to keep track of the tokens so
you can accurate 20% margin on top, and

162
00:09:45.275 --> 00:09:47.665
that's what you charge them,
or whatever it is.

163
00:09:47.665 --> 00:09:50.099
So, yeah,
keeping track of tokens is a good deal.

164
00:09:53.217 --> 00:09:57.221
&gt;&gt; Speaker 2: I think part of the question
is output, an opening, I don't think they

165
00:09:57.221 --> 00:10:01.157
have parameters we can say I only want
a max output of a certain size, or

166
00:10:01.157 --> 00:10:01.926
something.

167
00:10:01.926 --> 00:10:05.023
&gt;&gt; Scott Moss: They do
almost never use that for

168
00:10:05.023 --> 00:10:09.503
some of the things I mean
let me describe that.

169
00:10:09.503 --> 00:10:13.953
So, yes, if you go here,
you can do Max tokens like this but

170
00:10:13.953 --> 00:10:18.406
I guess I'll ask,
how do you know how many tokens you need?

171
00:10:18.406 --> 00:10:22.658
[LAUGH] And that's the hard part, because
if you're building a chat interface,

172
00:10:22.658 --> 00:10:25.284
you probably don't wanna
do max tokens if you're

173
00:10:25.284 --> 00:10:27.491
building a one off transactional thing.

174
00:10:27.491 --> 00:10:32.200
Yeah, that probably makes sense
if I built the thing that

175
00:10:32.200 --> 00:10:36.908
takes a blog post and
it returns true or false, whether or

176
00:10:36.908 --> 00:10:43.186
not this blog post mentions anything
about I don't know a specific person or

177
00:10:43.186 --> 00:10:46.935
specific anything and
it says true or false.

178
00:10:46.935 --> 00:10:50.714
Well, I know how many tokens false
it's at most maybe two tokens and

179
00:10:50.714 --> 00:10:55.114
true is even smaller than that so I could
say, yeah, limit that to two tokens.

180
00:10:55.114 --> 00:10:58.822
So it's forcing it to either be true or
false and that's it.

181
00:10:58.822 --> 00:11:03.119
I've had experiences in the past where
you think by limiting the token,

182
00:11:03.119 --> 00:11:07.857
the AI will rethink what it would say but
in actuality, it'll just get cut off.

183
00:11:07.857 --> 00:11:12.075
[LAUGH] So it's like you think if
I tell you can only do 500 tokens,

184
00:11:12.075 --> 00:11:15.553
you'll make sure your answer
is within 500 tokens.

185
00:11:15.553 --> 00:11:20.056
No, it'll return a 2000 token answer,
but cut it off at 500.

186
00:11:20.056 --> 00:11:23.218
So now you don't get a full answer and
it's, that's not what I wanted you to do.

187
00:11:23.218 --> 00:11:28.127
So it's kinda weird, the other thing
is I mostly use structured outputs.

188
00:11:28.127 --> 00:11:32.905
So for me, I get back JSON from this so
and I don't want,

189
00:11:32.905 --> 00:11:37.605
and then those JSON characters
are counted as tokens.

190
00:11:37.605 --> 00:11:40.747
So I don't wanna get a game of
counting brackets, and parentheses,

191
00:11:40.747 --> 00:11:42.978
and things like that,
it's kinda weird right?

192
00:11:42.978 --> 00:11:45.545
So I personally don't use max output,
&gt;&gt; Speaker 2: Like limiting

193
00:11:45.545 --> 00:11:49.799
the response here is probably a better
choice to say, hey, return just this

194
00:11:49.799 --> 00:11:53.018
TypeScript object that has a Boolean and,
&gt;&gt; Scott Moss: Exactly, yeah,

195
00:11:53.018 --> 00:11:54.765
structured output
&gt;&gt; Speaker 2: That way,

196
00:11:54.765 --> 00:11:57.423
versus
&gt;&gt; Scott Moss: Exactly, yep, that's what

197
00:11:57.423 --> 00:12:03.150
structured outputs is It's here's a just
we're giving the tools a JSON schema.

198
00:12:03.150 --> 00:12:07.953
You can actually do a response format and
give it adjacent schema,

199
00:12:07.953 --> 00:12:10.795
and it will return it in that shape too.

200
00:12:10.795 --> 00:12:15.637
So we just don't have a use case for
that right now but

201
00:12:15.637 --> 00:12:19.724
yeah, good question any other questions?

202
00:12:19.724 --> 00:12:24.024
&gt;&gt; Speaker 1: Does the max tokens
apply to the responders or

203
00:12:24.024 --> 00:12:24.820
&gt;&gt; Scott Moss: Yes, the max tokens

204
00:12:24.820 --> 00:12:25.878
&gt;&gt; Speaker 1: Not the input.

205
00:12:25.878 --> 00:12:27.403
&gt;&gt; Scott Moss: It's not the input,

206
00:12:27.403 --> 00:12:31.650
it's the responses the input
is the whole entire context.

207
00:12:31.650 --> 00:12:37.140
So there's the input that the whole chat
can have, and theoretically you could pass

208
00:12:37.140 --> 00:12:42.646
all that up in one post request, but then
now you're bound by like whatever, HCCP.

209
00:12:42.646 --> 00:12:47.596
Limits, [LAUGH] Well, whatever the
internet allows you to send, I guess, but

210
00:12:47.596 --> 00:12:49.702
yeah, Max Tokens is the output.

211
00:12:49.702 --> 00:12:51.417
&gt;&gt; Speaker 1: It is
the output of the tokens.

