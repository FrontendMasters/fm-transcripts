WEBVTT

1
00:00:00.300 --> 00:00:04.361
We're done with the soft SEO stuff,
the strategy,

2
00:00:04.361 --> 00:00:07.422
we're about to dive into some coding.

3
00:00:07.422 --> 00:00:11.024
And I've got one more slide and
then we're gonna do an exercise and

4
00:00:11.024 --> 00:00:13.290
the exercise is all about this one slide.

5
00:00:16.320 --> 00:00:20.692
So these are the absolute
basic lowest level

6
00:00:20.692 --> 00:00:24.953
pieces of metadata you
can add to your app.

7
00:00:24.953 --> 00:00:27.978
In terms of SEO, a title,
a description, and

8
00:00:27.978 --> 00:00:31.014
keywords, keywords don't matter anymore.

9
00:00:31.014 --> 00:00:33.150
We're going to pretend they do for
this exercise.

10
00:00:34.800 --> 00:00:36.720
Your title should be relatively short.

11
00:00:37.910 --> 00:00:42.844
Just because beyond this length
search engines will truncate it right

12
00:00:42.844 --> 00:00:47.693
you only get one line and just typical
browser would tell us that going

13
00:00:47.693 --> 00:00:51.974
beyond 65 characters,
you'll start to chop things off.

14
00:00:51.974 --> 00:00:55.459
A description is often
heavily weighted towards,

15
00:00:55.459 --> 00:01:00.640
like, what search engines will
interpret your site being all about.

16
00:01:00.640 --> 00:01:06.453
So this is where you want to put
important metadata technical terms.

17
00:01:06.453 --> 00:01:09.790
Things that stand out that
aren't just normal words, but

18
00:01:09.790 --> 00:01:12.183
it should be absolutely human readable.

19
00:01:12.183 --> 00:01:16.862
Some search engines will
use this as the description

20
00:01:16.862 --> 00:01:20.381
under the title of your search result.

21
00:01:20.381 --> 00:01:26.022
And keywords are by and large ignored,
but we'll all use them for this.

22
00:01:26.022 --> 00:01:29.895
So what we're gonna do is take
our starting point app, and

23
00:01:29.895 --> 00:01:32.833
I'm gonna show you how
to use it in a moment.

24
00:01:32.833 --> 00:01:36.365
We're gonna add metadata
like this to the app and

25
00:01:36.365 --> 00:01:39.993
it is currently absent or
incorrect in some form.

26
00:01:39.993 --> 00:01:46.061
And then we're gonna end up
deploying this app to Heroku.

27
00:01:46.061 --> 00:01:50.372
So, the way we're going to start is
this project that you've downloaded.

28
00:01:50.372 --> 00:01:55.606
First, I want you to make sure that
you do a git pull origin master,

29
00:01:55.606 --> 00:02:02.173
like make sure that you pull down the most
recent copy of this SEO workshop project.

30
00:02:02.173 --> 00:02:04.160
I was polishing it last night and

31
00:02:04.160 --> 00:02:07.850
I want to make sure everyone
has the most recent exercises.

32
00:02:08.960 --> 00:02:13.928
And I'm gonna fire it up and
I'm going to do a little mini deploy for

33
00:02:13.928 --> 00:02:18.025
you all, just so
we can all understand how this works.

34
00:02:21.223 --> 00:02:27.330
So what I have here If you're in the SASS
workshop, this will look very familiar.

35
00:02:27.330 --> 00:02:28.830
This is a similar.

36
00:02:28.830 --> 00:02:29.603
Thank you.

37
00:02:29.603 --> 00:02:35.431
This is a very similar setup here,
where we have a folder called exercises.

38
00:02:35.431 --> 00:02:38.682
This is where you're going to live.

39
00:02:38.682 --> 00:02:43.733
Most of some of the exercises like
build on the same sub folder.

40
00:02:43.733 --> 00:02:46.895
You know, in multiple iterations, but

41
00:02:46.895 --> 00:02:51.734
these all represent like many
apps that we'll be working on.

42
00:02:51.734 --> 00:02:56.912
And if we look at this deploy app, we'll
see that we've got a couple files in here.

43
00:02:56.912 --> 00:03:00.171
We've got a folder called public.

44
00:03:00.171 --> 00:03:03.172
This is what the browser reads.

45
00:03:03.172 --> 00:03:06.021
This is what the browser
ends up reading right?

46
00:03:06.021 --> 00:03:10.060
So we've got a CSS file that
is generated from this sass.

47
00:03:10.060 --> 00:03:15.430
So if you've used sass before, you could
use sass in here if you choose to.

48
00:03:15.430 --> 00:03:17.484
We're not gonna be doing
much with style today.

49
00:03:17.484 --> 00:03:20.220
But using CSS in this file is also fine.

50
00:03:21.700 --> 00:03:26.920
And then we've got this folder called
views, and it has an extension called HBS.

51
00:03:26.920 --> 00:03:28.770
HBS is handlebars.

52
00:03:28.770 --> 00:03:30.161
It's a superset of HTML.

53
00:03:30.161 --> 00:03:33.360
So all valid HTML works in this file.

54
00:03:33.360 --> 00:03:34.865
But if you get down here,

55
00:03:34.865 --> 00:03:39.250
you may notice that it looks like
I don't have any handlebars here.

56
00:03:39.250 --> 00:03:42.830
Let's see that so
this is just literal HTML.

57
00:03:42.830 --> 00:03:45.570
You might in the future see
stuff that looks like this,

58
00:03:45.570 --> 00:03:50.220
like capitalize something like that.

59
00:03:50.220 --> 00:03:55.450
So we can use little non HTML
expressions to put like dynamic

60
00:03:55.450 --> 00:04:00.650
pieces of data in our HTML, I'll show
you a more meaningful example just so

61
00:04:00.650 --> 00:04:01.970
we understand what this is all about.

62
00:04:04.690 --> 00:04:09.077
So here we're going to
use data that has been

63
00:04:09.077 --> 00:04:13.832
retrieved from a real API for
a list of courses.

64
00:04:13.832 --> 00:04:19.287
And here you can see we've got
a an unordered list and then we loop over

65
00:04:19.287 --> 00:04:24.980
a list of courses and for each course,
we put a list item in place.

66
00:04:24.980 --> 00:04:28.560
So this is as complex as
it's gonna get and each and

67
00:04:28.560 --> 00:04:32.210
you really won't need to touch
the handlebars portion of this, but

68
00:04:32.210 --> 00:04:34.090
I do want you to know what
you're looking at here.

69
00:04:34.090 --> 00:04:37.370
And I want you to know that
it works just like HTML.

70
00:04:37.370 --> 00:04:40.204
Any HTML we work with today,
you can put in place.

71
00:04:40.204 --> 00:04:46.663
This just lets me make some data with the
HTML before I place it back on the screen.

72
00:04:46.663 --> 00:04:50.501
So, we'll be working in
this deploy folder first.

73
00:04:50.501 --> 00:04:54.270
And what you have here is something
called instructions for deployment.

74
00:04:54.270 --> 00:04:59.377
So if we start this app up,
which is gonna be run, dash e for

75
00:04:59.377 --> 00:05:06.813
exercise, and then the name of
the exercises subfolder, which is deploy.

76
00:05:06.813 --> 00:05:11.268
Let me you know what I can do,

77
00:05:11.268 --> 00:05:15.361
click here and go up here.

78
00:05:15.361 --> 00:05:17.470
Run dash e deploy.

79
00:05:18.880 --> 00:05:22.259
And if we look back at the slides
here at the bottom of each slide,

80
00:05:22.259 --> 00:05:24.213
I have a command to run at the bottom.

81
00:05:24.213 --> 00:05:26.350
So you'll know exactly
which of these to startup.

82
00:05:27.840 --> 00:05:31.610
So if we hit enter, oops,
sorry, it's dot slash run.

83
00:05:33.400 --> 00:05:35.930
You'll see a little banner saying
we've started the exercise and

84
00:05:35.930 --> 00:05:37.431
then you can go to localhost 3000.

85
00:05:37.431 --> 00:05:39.730
You should see something
that looks like this.

86
00:05:41.850 --> 00:05:43.119
So if you can't get to this step.

87
00:05:44.310 --> 00:05:48.306
Let me know or say something in the chat
if you're watching this online so

88
00:05:48.306 --> 00:05:49.823
we can straighten you out.

89
00:05:49.823 --> 00:05:54.452
But judging by having used this before,
it should work for most everyone.

90
00:05:54.452 --> 00:05:59.215
So then what we're gonna do, this app
here it actually is the instructions for

91
00:05:59.215 --> 00:06:01.280
the exercise step by step.

92
00:06:01.280 --> 00:06:04.102
That'll help you get
this app on to Heroku.

93
00:06:04.102 --> 00:06:08.793
So if you've installed the Heroku command
line tool, and logged in with it,

94
00:06:08.793 --> 00:06:13.130
using Heroku login,
you're going to create a new app.

95
00:06:13.130 --> 00:06:17.552
And then you're going to configure
that app with just two variables.

96
00:06:17.552 --> 00:06:22.063
One of these variables kind of
tells Heroku which of the exercise

97
00:06:22.063 --> 00:06:23.743
subfolders to render.

98
00:06:23.743 --> 00:06:26.805
So you'll be able to switch
from the deploy folder to

99
00:06:26.805 --> 00:06:31.329
the AMP folder just by setting this
environment variable and Heroku will like

100
00:06:31.329 --> 00:06:35.802
restart the app in two seconds and
now you'll see something new on the site.

101
00:06:35.802 --> 00:06:40.872
And then finally, you just push to the Git
remote that Heroku sets up for you, right?

102
00:06:40.872 --> 00:06:46.252
So they you push to it, just like you
would push to GitHub using Heroku master.

103
00:06:46.252 --> 00:06:50.511
And then once it goes through its thing
once this command completes, you could run

104
00:06:50.511 --> 00:06:54.090
Heroku open to just open your web
browser with the appropriate URL and

105
00:06:54.090 --> 00:06:55.640
you should see it.

106
00:06:55.640 --> 00:06:58.132
So I've already deployed.

107
00:06:58.132 --> 00:07:00.211
Actually, I can deploy it for
you right now.

108
00:07:00.211 --> 00:07:04.396
GIT push Heroku master and
I have to do double dash force.

109
00:07:04.396 --> 00:07:07.741
Because I've deployed
a later version of this.

110
00:07:07.741 --> 00:07:12.306
Oop, to the Heroku remote,
some kind of going

111
00:07:12.306 --> 00:07:17.234
backwards in history which
is why I have to force.

112
00:07:17.234 --> 00:07:22.333
And you'll see it'll go through
installing a bunch of stuff and

113
00:07:22.333 --> 00:07:26.489
at the very end we should see,
let me shrink it down so

114
00:07:26.489 --> 00:07:29.238
that we can see the bottom of this.

115
00:07:33.190 --> 00:07:35.004
So that's about how long it should take.

116
00:07:35.004 --> 00:07:39.491
And you see it says like,
some URL has been deployed to Heroku.

117
00:07:39.491 --> 00:07:42.332
So this is an automatically
generated app name.

118
00:07:42.332 --> 00:07:48.092
You could either visit this in a browser
or you could just do Heroku open.

119
00:07:48.092 --> 00:07:53.533
And it should open a browser for
you with that URL.

120
00:07:53.533 --> 00:07:56.052
In this case, let's see.

121
00:07:56.052 --> 00:07:57.221
Let's try that one more time.

122
00:07:57.221 --> 00:07:59.065
There we go.

123
00:08:02.743 --> 00:08:05.102
So here I'm viewing a later exercise.

124
00:08:05.102 --> 00:08:06.205
I can switch that.

125
00:08:10.428 --> 00:08:11.886
Like that.

126
00:08:15.840 --> 00:08:19.473
And there are our deploy
instructions soon as it responds.

127
00:08:24.093 --> 00:08:25.261
There we go.

128
00:08:25.261 --> 00:08:27.312
Instructions for deployment.

129
00:08:27.312 --> 00:08:28.442
A little clipped off for you.

130
00:08:28.442 --> 00:08:31.416
But people watching online should see,
is that clear to everyone.

131
00:08:31.416 --> 00:08:36.609
So you're just going to add some metadata
and deploy this and we're going to build

132
00:08:36.609 --> 00:08:41.952
on an example like this over the rest of
the day, where we'll gradually we'll add,

133
00:08:41.952 --> 00:08:48.040
some Facebook metadata, some Twitter
metadata some schema.org Open Graph stuff.

134
00:08:48.040 --> 00:08:51.060
And use some of the best
testing tools available,

135
00:08:51.060 --> 00:08:55.140
to see how our app looks to these
other sites that are important for us.

