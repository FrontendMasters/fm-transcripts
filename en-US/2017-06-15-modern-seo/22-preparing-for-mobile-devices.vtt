WEBVTT

1
00:00:00.550 --> 00:00:05.120
The next thing we're gonna discuss is
a family of improvements we can make to

2
00:00:05.120 --> 00:00:09.100
apps in order to optimize it for
mobile devices.

3
00:00:09.100 --> 00:00:11.890
So we should care about this for
two reasons.

4
00:00:11.890 --> 00:00:17.887
First is that the mobile traffic has
already eclipsed desktop traffic and

5
00:00:17.887 --> 00:00:21.963
is ever accelerating in that direction,
right.

6
00:00:21.963 --> 00:00:25.794
More and more people use
their mobile devices to shop,

7
00:00:25.794 --> 00:00:30.870
to get information, to verify
their businesses real, and so on.

8
00:00:30.870 --> 00:00:35.090
And they do it like many
times throughout the day.

9
00:00:35.090 --> 00:00:38.670
The second thing is that
in the middle of last year,

10
00:00:38.670 --> 00:00:41.250
Google decided to fork
their search index right.

11
00:00:41.250 --> 00:00:47.720
The search index was their master data for
the relevance and

12
00:00:47.720 --> 00:00:52.360
importance of search results
on various keywords, right?

13
00:00:52.360 --> 00:00:56.930
So now we have a desktop specific
index and a mobile specific index or

14
00:00:56.930 --> 00:01:01.490
rather a mobile specific index and
stuff for things that are not mobile.

15
00:01:01.490 --> 00:01:05.230
So that means that your
ranking may be different

16
00:01:05.230 --> 00:01:09.540
depending on whether someone searches
with a mobile device or a desktop device.

17
00:01:09.540 --> 00:01:14.240
One of the things that's taken into
consideration beyond what we've talked

18
00:01:14.240 --> 00:01:18.550
about today for mobile devices is
sort of the fitness of your app and

19
00:01:18.550 --> 00:01:22.330
how well it presents itself
on a mobile form factor.

20
00:01:24.100 --> 00:01:26.310
So one of these things
that you have to look for

21
00:01:26.310 --> 00:01:29.510
is, making sure you handle
your viewport correctly.

22
00:01:29.510 --> 00:01:33.620
This is what ensures that your
content gets sized appropriately,

23
00:01:35.340 --> 00:01:36.600
it's done by a meta tag.

24
00:01:36.600 --> 00:01:42.130
Both iOS and
Android will respect this tag and

25
00:01:42.130 --> 00:01:44.800
you see that the name of
the tag is viewport and

26
00:01:44.800 --> 00:01:49.420
the content is a bunch of key
value pairs separated by commas.

27
00:01:49.420 --> 00:01:53.580
Here are the different things
that you can put in that content,

28
00:01:53.580 --> 00:01:55.560
the different key value pairs here.

29
00:01:55.560 --> 00:01:58.460
This is typically a good setting to use

30
00:01:58.460 --> 00:02:01.820
that you start out with the width of
the viewport being the device width.

31
00:02:01.820 --> 00:02:07.010
So the consequence there is you're
gonna sort of end up with a very narrow

32
00:02:07.010 --> 00:02:11.070
window as opposed to a wide
window that is really zoomed out.

33
00:02:11.070 --> 00:02:17.563
So you just have to make sure that your
CSS facilitates a width of, a phone,

34
00:02:17.563 --> 00:02:25.106
which for an iPhone is 320 pixels that you
collapse down effectively to that width.

35
00:02:25.106 --> 00:02:27.226
The initial scale being one, so

36
00:02:27.226 --> 00:02:31.162
that's controls whether you're
zoomed out or zoomed in.

37
00:02:31.162 --> 00:02:32.908
And then you've got a maximum and

38
00:02:32.908 --> 00:02:37.520
minimum scale that lets you sort of bound
the allowed values for the user to scale.

39
00:02:37.520 --> 00:02:41.130
So if you want them to be able to pinch
to zoom in just a little bit, but

40
00:02:41.130 --> 00:02:45.780
not go all the way in and potentially get
lost and there's swimming around in there.

41
00:02:45.780 --> 00:02:47.665
They're tiny viewpornt and

42
00:02:47.665 --> 00:02:51.913
your big area of content like this
would be a way to prevent that.

43
00:02:51.913 --> 00:02:59.430
I leave it to usability experts to advise
us to what the best values are there.

44
00:02:59.430 --> 00:03:02.040
User scalable being set to yes or no,

45
00:03:02.040 --> 00:03:08.130
that is an on off switch as to whether
you can pinch to zoom at all or not.

46
00:03:08.130 --> 00:03:09.250
And so if you're looking for

47
00:03:09.250 --> 00:03:12.630
something that resembles
the experience of a native app.

48
00:03:12.630 --> 00:03:14.940
Like of an app you downloaded
from the App Store,

49
00:03:14.940 --> 00:03:17.830
you're gonna want to turn
the user scaling off so

50
00:03:17.830 --> 00:03:23.660
that people can't zoom in, like on UI
elements, for example, on the navbar.

51
00:03:23.660 --> 00:03:28.350
You may want to facilitate zooming
within certain areas of your site and

52
00:03:28.350 --> 00:03:32.660
you'll handle that sort of in your
application layer the ability to scroll,

53
00:03:33.670 --> 00:03:36.910
to handle this mouse events and
to appropriately respond.

54
00:03:39.260 --> 00:03:43.820
Additional meta tags that you can add to
your app, which will make it seem more app

55
00:03:43.820 --> 00:03:48.850
like start with the apple mobile
web app capable which value is yes.

56
00:03:48.850 --> 00:03:53.080
So like, this tag is either present or
it's not.

57
00:03:53.080 --> 00:03:56.170
So having a value of no there
doesn't make much sense just

58
00:03:56.170 --> 00:03:58.570
don't include the meta tag at all.

59
00:03:58.570 --> 00:04:02.150
This is what lets your
app launch in fullscreen

60
00:04:02.150 --> 00:04:05.560
if it has been launched from
a home screen bookmark.

61
00:04:05.560 --> 00:04:08.670
So you know how you can add
a website to your homescreen

62
00:04:08.670 --> 00:04:12.350
if you have this meta tag in place and
you launch it from the homescreen.

63
00:04:13.990 --> 00:04:17.900
You will be looking at something
that doesn't appear to be a browser.

64
00:04:17.900 --> 00:04:23.120
So the UP address bar will go away, the
bookmarks button will go away but you'll

65
00:04:23.120 --> 00:04:27.420
have some of the very basic controls
like the ability to swipe to go back.

66
00:04:27.420 --> 00:04:28.660
So you'll just be left with that.

67
00:04:30.050 --> 00:04:31.750
When you're in that full screen mode,

68
00:04:31.750 --> 00:04:34.510
you have the option of
turning the status bar black

69
00:04:34.510 --> 00:04:38.280
versus leaving it as its default colour
which is I believe going to be weight.

70
00:04:39.520 --> 00:04:44.430
And then finally, you have
the option to define an alternate,

71
00:04:44.430 --> 00:04:47.240
like you have a second place to
define the home screen title.

72
00:04:47.240 --> 00:04:51.484
If you don't define it by way of this meta
tag, the title tag will be what's used.

73
00:04:51.484 --> 00:04:56.834
But keep in mind, the number of characters
you are allowed in terms of having

74
00:04:56.834 --> 00:05:02.830
the label underneath that homescreen
button, that's a very small number.

75
00:05:02.830 --> 00:05:07.901
I don't recall exactly what the limit is
but it's probably like less than 30 and

76
00:05:07.901 --> 00:05:12.031
you would not want to have such
a short title for general purposes.

77
00:05:12.031 --> 00:05:15.533
As in showing up in search results,
so this is a place where you can,

78
00:05:15.533 --> 00:05:17.377
instead of truncating your title,

79
00:05:17.377 --> 00:05:21.200
which is what's going to happen
if you go over a certain limit.

80
00:05:21.200 --> 00:05:25.470
Here, you can use the short text
that is meaningful for your app.

81
00:05:27.390 --> 00:05:34.510
So going beyond basic mobile meta tags
like this, a new standard is emerging.

82
00:05:34.510 --> 00:05:40.070
So this is in the W3C draft phase and

83
00:05:40.070 --> 00:05:45.500
already supported by modern Android
devices, it is called a web app manifest.

84
00:05:45.500 --> 00:05:50.010
So you create a JSON file,
you refer to it with a meta tag and

85
00:05:50.010 --> 00:05:54.980
then we can place information
in this JSON file that will help

86
00:05:54.980 --> 00:05:58.810
create a really nice
experience on mobile devices.

87
00:05:58.810 --> 00:06:03.290
So just from top to bottom, we've got
the name of our app which is equivalent to

88
00:06:03.290 --> 00:06:07.840
that Apple specific app title
tag except this would be for

89
00:06:07.840 --> 00:06:12.030
Android devices and we hope Apple will
adopt this as the standard as well.

90
00:06:12.030 --> 00:06:14.888
Right, then we've got this icons array and

91
00:06:14.888 --> 00:06:19.149
in terms of what we can put in there,
two things are recommended.

92
00:06:19.149 --> 00:06:24.872
A 192 pixel icon that is used for
the Android home screen button and

93
00:06:24.872 --> 00:06:29.620
this is the appropriate size for
their high DPI devices.

94
00:06:29.620 --> 00:06:34.194
These are their high resolution
if you have one of those

95
00:06:34.194 --> 00:06:36.487
OLED nice Android phones.

96
00:06:36.487 --> 00:06:40.422
It wants a 192 pixel square for
the home screen and

97
00:06:40.422 --> 00:06:45.790
then a larger image that's 512 pixels
which it will use in composing

98
00:06:45.790 --> 00:06:52.680
together with a background color, which is
also in this file a launch screen for you.

99
00:06:52.680 --> 00:06:56.720
So you're gonna hit that button to launch
the app and it will give you kind of

100
00:06:56.720 --> 00:07:02.000
a startup screen with like your icon
centered on a solid color background.

101
00:07:02.000 --> 00:07:03.991
And then gradually,
you're gonna fade into your app.

102
00:07:07.333 --> 00:07:09.205
So, we get a theme color,

103
00:07:09.205 --> 00:07:13.840
which allows you to change the color
of the title bar of your app.

104
00:07:13.840 --> 00:07:18.530
So you can sort of mess with
the styling of the browser itself

105
00:07:18.530 --> 00:07:20.780
outside of your web application.

106
00:07:20.780 --> 00:07:25.280
The background color is part of
what's used for that splash screen.

107
00:07:25.280 --> 00:07:27.250
And also as your app loads,

108
00:07:27.250 --> 00:07:32.520
this is gonna be like the color of
the unpainted area behind your app.

109
00:07:32.520 --> 00:07:37.860
So normally for a client side rendered
app you'd start with a white screen and

110
00:07:37.860 --> 00:07:39.800
then you'd start rendering stuff on it.

111
00:07:39.800 --> 00:07:43.500
This gives you an opportunity to have
something that maybe is consistent

112
00:07:43.500 --> 00:07:45.290
with the colors you're
going to use in your app.

113
00:07:45.290 --> 00:07:47.720
And so it's a little less of a jarring

114
00:07:47.720 --> 00:07:50.830
Slam from white screen into
bright purple experience.

115
00:07:52.360 --> 00:07:55.500
Finally we've got this display value and

116
00:07:55.500 --> 00:07:59.050
there are a couple things we can do here
but you'll start to see some similarities

117
00:07:59.050 --> 00:08:04.440
with the full screen idea in
the Apple meta tag world.

118
00:08:04.440 --> 00:08:06.850
So, here are the values we can use for
this.

119
00:08:06.850 --> 00:08:10.470
And generally what happens
is devices may not support

120
00:08:10.470 --> 00:08:14.982
all of these different
modes of display an app.

121
00:08:14.982 --> 00:08:19.050
And the policy is if a device that
does not support one of these,

122
00:08:19.050 --> 00:08:22.840
it will fall one down into the list and
try to support that.

123
00:08:22.840 --> 00:08:25.970
And if it doesn't support
that it will fall down.

124
00:08:25.970 --> 00:08:32.127
So from bottom to top, we're sorta
stepping up into a more app experience and

125
00:08:32.127 --> 00:08:36.402
from top to bottom,
we can just go through one by one.

126
00:08:36.402 --> 00:08:40.975
Full screen would take all of the display
area, including your battery bar and

127
00:08:40.975 --> 00:08:44.730
your signal, your cell phone,
signal strength and the clock.

128
00:08:45.760 --> 00:08:49.128
Think video player,
that's taking up everything, right?

129
00:08:49.128 --> 00:08:53.650
Standalone is gonna be slightly less than
that and that would be sort of a typical

130
00:08:53.650 --> 00:08:58.967
app like experience where you
leave that always present.

131
00:09:00.610 --> 00:09:04.980
OS UI in place where you can still
see that your Bluetooth is on and

132
00:09:04.980 --> 00:09:07.130
that your phones on vibrate and so on.

133
00:09:08.200 --> 00:09:10.640
Minimal UI that I have yet

134
00:09:10.640 --> 00:09:16.760
to see an example of this is part of
sort of the proposed standard here.

135
00:09:16.760 --> 00:09:20.480
And this you can think of is like
a very light browser experience,

136
00:09:20.480 --> 00:09:24.660
where you might do away with like
the bookmarks, functionality and

137
00:09:24.660 --> 00:09:27.910
the concept of having
many tabs that are open.

138
00:09:27.910 --> 00:09:33.860
But you keep the back button and you keep
the address bar, maybe the refresh button,

139
00:09:33.860 --> 00:09:37.110
but just sort of slimming down
that UI into something more basic.

140
00:09:37.110 --> 00:09:38.410
And then finally at the bottom,

141
00:09:38.410 --> 00:09:42.550
the last resort is the conventional
browser experience.

142
00:09:42.550 --> 00:09:46.378
So if we specify, the typical thing
we wanna do here is standalone for

143
00:09:46.378 --> 00:09:50.206
a full screen app that's equivalent
to that fullscreen Safari tag,

144
00:09:50.206 --> 00:09:52.318
the mobile Safari tag that I gave you.

145
00:09:54.749 --> 00:09:57.356
We've been talking about adding
stuff to the home screen and

146
00:09:57.356 --> 00:09:58.900
launching it from the home screen.

147
00:09:58.900 --> 00:10:04.730
So let's talk a little bit about home
screen icons, I've given you a cheat sheet

148
00:10:04.730 --> 00:10:11.300
of the size of square icons in pixels for
various different types of devices.

149
00:10:12.360 --> 00:10:18.060
Unfortunately, each of these will
require a separate meta tag and

150
00:10:18.060 --> 00:10:19.790
there are quite a lot of them.

151
00:10:19.790 --> 00:10:24.350
So you probably want to use an app or
some sort of there are a couple of

152
00:10:24.350 --> 00:10:28.530
web applications that can take
a high resolution source image.

153
00:10:28.530 --> 00:10:31.150
And to automatically
generate a zip file for

154
00:10:31.150 --> 00:10:34.580
you that contains all of the different
sizes that you care about.

155
00:10:35.970 --> 00:10:40.540
They tend to look like this, it's just
a link tag, the REL is what you have to

156
00:10:40.540 --> 00:10:45.390
look at in order to make it
work on a particular device.

157
00:10:45.390 --> 00:10:49.120
So, when we start the next exercise,
which we are winding up to here.

158
00:10:49.120 --> 00:10:53.140
I've given you all of these already pre
written in your head because it is tedious

159
00:10:53.140 --> 00:10:56.570
as all hell to go and
find all of the correct ones.

160
00:10:56.570 --> 00:11:03.830
So your task will be to uncomment that
big block of rd in place icon stuff and

161
00:11:03.830 --> 00:11:07.190
you're welcome for that because you
would not learn anything from this.

162
00:11:07.190 --> 00:11:10.510
You would just get tired of copying and
pasting.

163
00:11:10.510 --> 00:11:15.390
A library that I love to use
here is called Add Home screen.

164
00:11:15.390 --> 00:11:18.250
Now I'll show you the GitHub URL and

165
00:11:18.250 --> 00:11:23.240
how you're going to invoke this but
it results in

166
00:11:23.240 --> 00:11:28.020
a nice little bubble floating down and
pointing directly to the share button.

167
00:11:28.020 --> 00:11:32.458
The button the user will press to actually
add this thing to the homescreen on their

168
00:11:32.458 --> 00:11:32.980
device.

169
00:11:32.980 --> 00:11:37.409
And they have cleverly and
probably painstakingly found out all of

170
00:11:37.409 --> 00:11:42.920
the different locations of buttons that
lead to bookmarking on various devices.

171
00:11:42.920 --> 00:11:44.930
So you will find that this
thing will float down and

172
00:11:44.930 --> 00:11:50.610
that little arrow will be pointing
right to that little share button.

173
00:11:50.610 --> 00:11:55.520
Basically instructing the user post
this thing, add home screen and

174
00:11:55.520 --> 00:11:59.930
it will read the icon for your app
right out of the same meta tags that

175
00:12:01.800 --> 00:12:05.680
the mobile browser reads in order to
fetch that and put it on the homescreen.

176
00:12:05.680 --> 00:12:10.960
So really, all you need to do is
put an inline JavaScript block,

177
00:12:10.960 --> 00:12:15.650
so this is gonna be just a script tag,
put something like this in place.

178
00:12:15.650 --> 00:12:19.870
And in fact, for today's exercise, you
don't need to pass any options, I simply

179
00:12:19.870 --> 00:12:25.130
wanted to give you an idea of different
things that you could configure here.

180
00:12:26.180 --> 00:12:30.660
It'll have a great default message, the
default app ID is gonna be something that

181
00:12:30.660 --> 00:12:35.340
relates to this cubic company that
open sourced this project, but

182
00:12:35.340 --> 00:12:37.260
you can change it.

183
00:12:38.470 --> 00:12:41.710
Is the name of the key that it uses
the local storage, so it doesn't keep,

184
00:12:43.500 --> 00:12:47.320
like bombarding users with this message
if they say no, I don't want this.

185
00:12:47.320 --> 00:12:49.320
It won't bother them again.

186
00:12:49.320 --> 00:12:52.207
You can actually have it,
you can set it up so

187
00:12:52.207 --> 00:12:56.046
that like only once every two weeks,
show this to people.

188
00:12:56.046 --> 00:13:03.850
So it'll just track frequency rather than
like a yes no, only show it to them once.

189
00:13:03.850 --> 00:13:08.192
Modal and mandatory are useful for
presenting in a different ways,

190
00:13:08.192 --> 00:13:11.939
which is just simply like add
an overlay that will make it.

191
00:13:11.939 --> 00:13:15.909
So that this is the main focus of the page
and like mandatory would even prevent

192
00:13:15.909 --> 00:13:20.187
people from tapping through that overlay
until they've added it to home screen and

193
00:13:20.187 --> 00:13:21.390
launched it.

194
00:13:21.390 --> 00:13:24.050
So there's a way that you can in

195
00:13:24.050 --> 00:13:26.978
JavaScript detect whether you've
been launched from the home screen.

196
00:13:26.978 --> 00:13:31.090
It's like Window.navigator.standalone, so

197
00:13:31.090 --> 00:13:36.520
it is detecting based on that whether it
should keep pestering you to add this or

198
00:13:36.520 --> 00:13:40.350
whether it can finally, leave you alone.

199
00:13:40.350 --> 00:13:44.700
It is a bad practice to just get
in your users way to that extent.

200
00:13:44.700 --> 00:13:48.340
I would say if you really want to
get on your users home screen just

201
00:13:48.340 --> 00:13:52.790
do that in terms of frequency and
say like, every ten days ask them again.

