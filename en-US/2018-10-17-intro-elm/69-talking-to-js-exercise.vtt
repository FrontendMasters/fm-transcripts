WEBVTT

1
00:00:00.001 --> 00:00:05.029
&gt;&gt; Richard Feldman: Which brings us to
the exercise in localForaging, Part 9.

2
00:00:11.482 --> 00:00:12.414
&gt;&gt; Richard Feldman: All right.

3
00:00:15.148 --> 00:00:19.392
&gt;&gt; Richard Feldman: Okay, so if we look
at intro/server/public/index.html.

4
00:00:19.392 --> 00:00:23.179
We can see how the localForage ports
are hooked up on the JavaScript side.

5
00:00:23.179 --> 00:00:26.916
So this is the one time where we
actually need to dive out of port 9 and

6
00:00:26.916 --> 00:00:27.715
into server.

7
00:00:27.715 --> 00:00:32.075
Because this index.html file
lives in the server, and

8
00:00:32.075 --> 00:00:35.890
is not particular to any
one of these exercises.

9
00:00:35.890 --> 00:00:42.105
So inside the public directory,
we can open up, yeah, index.html.

10
00:00:42.105 --> 00:00:44.962
And inside of here,
we can see a bunch of random stuff,

11
00:00:44.962 --> 00:00:47.462
that's just like the fav icon,
and the fonts.

12
00:00:47.462 --> 00:00:48.695
And the style sheet, and

13
00:00:48.695 --> 00:00:52.698
all that good stuff, here's the script
importing localForage, and elm.js.

14
00:00:52.698 --> 00:00:55.515
Which is our compiled Elm code,
I put a little.

15
00:00:55.515 --> 00:00:56.931
[LAUGH] A little welcome here,

16
00:00:56.931 --> 00:00:59.715
in case people looked into
this earlier on the exercises.

17
00:01:00.743 --> 00:01:02.396
&gt;&gt; Richard Feldman: But
basically, on the Elm side,

18
00:01:02.396 --> 00:01:06.182
all we're gonna need to do is make
changes to stuff on the part9 directory.

19
00:01:06.182 --> 00:01:09.819
This is really just for
our reference, so we can see in here.

20
00:01:09.819 --> 00:01:13.340
We're doing initially,
localforage.getItems ("session").

21
00:01:13.340 --> 00:01:16.365
And we're using that to kick-off
this initial flags value we're

22
00:01:16.365 --> 00:01:17.238
passing into Elm.

23
00:01:17.238 --> 00:01:19.759
Saying, okay,
this is the initial section value,

24
00:01:19.759 --> 00:01:22.223
then we're setting up a subscription here.

25
00:01:22.223 --> 00:01:25.927
Sorry, we're doing
app.ports.storeSession.subcribe,

26
00:01:25.927 --> 00:01:26.891
which is to say.

27
00:01:26.891 --> 00:01:31.288
Every time Elm sends us a command
through a port-named store session.

28
00:01:31.288 --> 00:01:35.144
We wanna run this function
that receives the new session,

29
00:01:35.144 --> 00:01:37.040
and sets it in localForage.

30
00:01:37.040 --> 00:01:40.165
And then, finally,
after we get the new session,

31
00:01:40.165 --> 00:01:43.961
we're going to just call,
app.ports.onSessionChange.

32
00:01:43.961 --> 00:01:46.855
And send the new session to that,
such that,

33
00:01:46.855 --> 00:01:50.754
it will now receive that session
through the subscription.

34
00:01:50.754 --> 00:01:54.293
And can update things accordingly, so
the critical thing here is the two names.

35
00:01:54.293 --> 00:01:56.250
storeSession and onSessionChange,

36
00:01:56.250 --> 00:01:59.315
those are the two things that
need to line up on the Elm side.

37
00:01:59.315 --> 00:02:03.133
With whatever they are going
to be on the JavaScript side.

38
00:02:03.133 --> 00:02:07.088
Okay, so that's all we need
to do on the JavaScript side,

39
00:02:07.088 --> 00:02:09.367
that's already all done for us.

40
00:02:09.367 --> 00:02:11.255
We just need to remember the names, so

41
00:02:11.255 --> 00:02:14.506
the exercise is to add
the corresponding ports to Session.elm.

42
00:02:16.418 --> 00:02:17.196
&gt;&gt; Richard Feldman: Okay.

43
00:02:18.476 --> 00:02:21.425
&gt;&gt; Richard Feldman: So we have
a pair of TODOS in here, first one,

44
00:02:21.425 --> 00:02:24.621
is we're going to send
a session to JavaScript.

45
00:02:24.621 --> 00:02:27.663
So, this is sort of a do-nothing command,

46
00:02:27.663 --> 00:02:30.885
that is sort of wired up
to not be interesting.

47
00:02:30.885 --> 00:02:35.231
What we wanna do is replace this
with a port, so define the port, and

48
00:02:35.231 --> 00:02:37.385
then call it from this function.

49
00:02:37.385 --> 00:02:41.083
Such that, it actually sends
that token out to JavaScript.

50
00:02:41.083 --> 00:02:45.903
The other thing we need to do is do
the same thing on the reverse side.

51
00:02:45.903 --> 00:02:49.867
Bringing data in from JavaScript,
via this subscription, which is,

52
00:02:49.867 --> 00:02:51.861
receiveSessionFromJavaScript.

53
00:02:51.861 --> 00:02:56.017
Once we've got both of those implemented,
everything should work, and

54
00:02:56.017 --> 00:02:58.239
we should once again be able to sign up.

