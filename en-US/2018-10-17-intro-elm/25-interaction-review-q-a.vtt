WEBVTT

1
00:00:00.368 --> 00:00:04.744
&gt;&gt; Speaker 1: Does Elm have anything
like the React component life cycles?

2
00:00:04.744 --> 00:00:07.268
&gt;&gt; Richard Feldman: Does Elm have anything
like the React component life cycles?

3
00:00:07.268 --> 00:00:13.310
No, so in React you have a notion
of local component state.

4
00:00:13.310 --> 00:00:17.618
This is essentially an object oriented
idea where you have mutable state coupled

5
00:00:17.618 --> 00:00:21.118
with methods that work on that state,
so components or objects.

6
00:00:21.118 --> 00:00:22.760
Elm actually doesn't have objects,

7
00:00:22.760 --> 00:00:25.538
which means that it doesn't have
stateful components either.

8
00:00:25.538 --> 00:00:28.607
Basically, everything in Elm is
derived from the application state.

9
00:00:28.607 --> 00:00:32.836
And when you build out your Elm
application, it's a matter of slicing up

10
00:00:32.836 --> 00:00:36.457
that application state and
passing it to playing functions.

11
00:00:36.457 --> 00:00:40.209
In the advanced workshop, we'll talk
about specific techniques for doing that.

12
00:00:40.209 --> 00:00:43.920
But, the short answer is imagine,
if you're coming from React,

13
00:00:43.920 --> 00:00:47.250
what if everything was
a stateless functional component?

14
00:00:47.250 --> 00:00:48.583
That's sort of what you have at Elm.

15
00:00:48.583 --> 00:00:52.648
So, just like those who don't have
any life cycle methods in React,

16
00:00:52.648 --> 00:00:57.644
in Elm all you're working with is pure
functions rather than stateful components.

17
00:00:57.644 --> 00:00:59.532
So, there are no life cycle methods there,
either.

18
00:01:01.682 --> 00:01:04.255
&gt;&gt; Speaker 1: What about CSS?

19
00:01:04.255 --> 00:01:07.137
&gt;&gt; Richard Feldman: So CSS,
there's a couple of ways to do it.

20
00:01:07.137 --> 00:01:10.094
The way that we're doing it in this
application is essentially decoupled from

21
00:01:10.094 --> 00:01:11.001
the Elm architecture.

22
00:01:11.001 --> 00:01:13.336
We're just using a static style sheet.

23
00:01:13.336 --> 00:01:16.776
So one of the things we could choose to
change in our view is class name, for

24
00:01:16.776 --> 00:01:19.343
example, which could make
it refer to different CSS.

25
00:01:19.343 --> 00:01:21.823
Which would make it appear
differently on the page, but

26
00:01:21.823 --> 00:01:24.693
there's other ways to do it sort
of in line in our view function.

27
00:01:24.693 --> 00:01:29.508
So the Elm CSS library I mentioned
earlier, that's one example of a way to

28
00:01:29.508 --> 00:01:34.501
incorporate your styles into the view and
actually change them at runtime.

29
00:01:34.501 --> 00:01:38.888
So that's something like if you've
ever used styled components in React,

30
00:01:38.888 --> 00:01:41.366
or I think Glamorous maybe also does this.

31
00:01:41.366 --> 00:01:45.128
But yeah, there's different ways to do it,

32
00:01:45.128 --> 00:01:49.785
and you don't have to choose
one particular approach.

33
00:01:49.785 --> 00:01:53.463
CSS, there are actually a few different
alternatives with different tradeoffs

34
00:01:53.463 --> 00:01:54.771
depending on your use case.

35
00:01:54.771 --> 00:01:56.469
Let's do a quick review of Part 3.

36
00:01:56.469 --> 00:01:57.801
So first we learned about records.

37
00:01:57.801 --> 00:01:59.301
So here's an example of a record,

38
00:01:59.301 --> 00:02:02.166
it's got some syntactic differences
with JavaScript objects.

39
00:02:02.166 --> 00:02:04.960
But also quite a bit of
semantic differences.

40
00:02:04.960 --> 00:02:07.522
It's not just the equal sign, but
it's also that they're immutable,

41
00:02:07.522 --> 00:02:08.786
that they don't have prototypes.

42
00:02:08.786 --> 00:02:12.759
That they don't have this,
they're just plain immutable data.

43
00:02:12.759 --> 00:02:15.984
We also learned about record updates
syntax, which essentially is a way of

44
00:02:15.984 --> 00:02:19.618
saying, start with this record and give me
back a new record that's exactly the same

45
00:02:19.618 --> 00:02:22.767
as the old one except I've changed one
field or maybe a couple of fields.

46
00:02:22.767 --> 00:02:26.668
Talked about Booleans and all the fun
different ways to combine them.

47
00:02:26.668 --> 00:02:30.796
And finally, we learned about the Elm
architecture, including model, view, and

48
00:02:30.796 --> 00:02:35.058
update, and how those interact with one
another to create interactive application.

