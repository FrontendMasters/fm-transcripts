WEBVTT

1
00:00:00.431 --> 00:00:00.980
&gt;&gt; Richard Feldman: Okay, so

2
00:00:00.980 --> 00:00:04.968
let's talk about some differences
in iteration between records and

3
00:00:04.968 --> 00:00:09.520
other collections, specifically lists,
which we've talked about so far.

4
00:00:09.520 --> 00:00:12.739
So if we have a list that's 1, 2, 3.

5
00:00:12.739 --> 00:00:16.021
Map works fine over this, we can call
list.map, and go over those elements 1,

6
00:00:16.021 --> 00:00:16.565
2, and 3.

7
00:00:16.565 --> 00:00:21.405
We talked about how you cannot
have a list with mixed contents,

8
00:00:21.405 --> 00:00:23.275
because then map would
potentially blow up.

9
00:00:23.275 --> 00:00:26.955
So that's why map is allowed on lists,

10
00:00:26.955 --> 00:00:30.285
is that they rule out having
mixed contents like this.

11
00:00:31.305 --> 00:00:35.165
Now, as we've seen with this record,
records do allow mixed contexts.

12
00:00:35.165 --> 00:00:39.120
You can have, x = 1, y = "foo",
you're allowed to mix and

13
00:00:39.120 --> 00:00:42.830
match whatever different types of
contents you want inside of a record for

14
00:00:42.830 --> 00:00:44.330
the different fields.

15
00:00:44.330 --> 00:00:48.445
And so for that reason, map would
break if map were allowed on records.

16
00:00:48.445 --> 00:00:51.105
And so map's not allowed on records.

17
00:00:51.105 --> 00:00:52.039
This is sort of a tradeoff.

18
00:00:52.039 --> 00:00:55.057
So if we look at lists,
they do support iteration.

19
00:00:55.057 --> 00:00:56.266
You can iterate over list.

20
00:00:56.266 --> 00:00:57.125
You can map over it.

21
00:00:57.125 --> 00:01:02.327
You can do a variety of other operations
that work on each elements in the list.

22
00:01:02.327 --> 00:01:04.553
But lists do not support mixed entries.

23
00:01:04.553 --> 00:01:05.642
Those go hand in hand.

24
00:01:05.642 --> 00:01:09.662
If it did support mixed entries, then it
would not be allowed to support iteration,

25
00:01:09.662 --> 00:01:11.132
which is exactly what
you have with records.

26
00:01:11.132 --> 00:01:12.700
So records do not support iteration.

27
00:01:12.700 --> 00:01:16.480
They don't support map, they don't
support filter or any of the others, but

28
00:01:16.480 --> 00:01:18.034
they do support mixed entries.

29
00:01:18.034 --> 00:01:19.853
And there's a causal relationship here.

30
00:01:19.853 --> 00:01:20.924
You sort have to pick one or

31
00:01:20.924 --> 00:01:23.790
the other if you want both of them
to work reliably at run time.

32
00:01:23.790 --> 00:01:25.740
Without any possibility of crashing.

33
00:01:25.740 --> 00:01:28.070
There's no way to say,
give me all the keys in this record,

34
00:01:28.070 --> 00:01:29.550
I wanna work with those.

35
00:01:29.550 --> 00:01:32.840
Give me all of the values in this record,
I wanna work with those.

36
00:01:32.840 --> 00:01:36.290
Basically, records are just
a mapping between keys and values.

37
00:01:36.290 --> 00:01:39.404
But there's no way to iterate over
either of them like there's with lists.

