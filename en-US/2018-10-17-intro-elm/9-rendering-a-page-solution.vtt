WEBVTT

1
00:00:00.000 --> 00:00:02.357
&gt;&gt; Richard Feldman: Let's
go through the exercise.

2
00:00:02.357 --> 00:00:03.991
So we have a couple of to-dos here.

3
00:00:03.991 --> 00:00:06.980
First one is, add a logo and
a tagline to this banner so

4
00:00:06.980 --> 00:00:09.178
that its structure becomes like this.

5
00:00:09.178 --> 00:00:12.172
Okay, so we've already got some
parts of this structure present.

6
00:00:12.172 --> 00:00:14.475
We've got the banner,
we've got the container.

7
00:00:14.475 --> 00:00:17.675
What we're missing is these
two things in the middle here.

8
00:00:17.675 --> 00:00:21.453
So there's this thing that says,
TODO put the &lt;h1&gt; here instead

9
00:00:21.453 --> 00:00:24.582
of this text&lt;/h1&gt; then add
the P rate after the H1.

10
00:00:24.582 --> 00:00:27.387
So here's what those look like in HTML.

11
00:00:27.387 --> 00:00:30.172
And we can see that they're gonna
end looking pretty similar in Elm.

12
00:00:30.172 --> 00:00:35.701
Let's make a couple of tweaks to convert
them to HTML to Elm function calls.

13
00:00:35.701 --> 00:00:39.090
So we got an h1,
with a class of logo-font.

14
00:00:39.090 --> 00:00:44.694
And then inside of that we have one
text note that just says conduit.

15
00:00:44.694 --> 00:00:50.057
And that is it for our h1,
just gonna put that right there.

16
00:00:50.057 --> 00:00:54.440
And then below that we wanna have this
paragraph tag, so that's just gonna

17
00:00:54.440 --> 00:00:58.629
be a function called P and there are no
attributes to the paragraph tag.

18
00:00:58.629 --> 00:01:01.852
But there is one child node,
a place to share your knowledge.

19
00:01:03.971 --> 00:01:08.326
&gt;&gt; Richard Feldman: Okay,
so that's it for those two.

20
00:01:08.326 --> 00:01:14.182
We do need a closing tag here for
the, oops sorry we already have one.

21
00:01:14.182 --> 00:01:15.095
The closing tag for that.

22
00:01:15.095 --> 00:01:19.417
And once we see this sort of vertical
column here, something that'll

23
00:01:19.417 --> 00:01:24.189
become like muscle memory is realising
wait, there should be a comma there.

24
00:01:24.189 --> 00:01:25.898
So let's delete this whole big comment.

25
00:01:25.898 --> 00:01:28.202
We can kinda see the final structure here.

26
00:01:28.202 --> 00:01:34.459
Let's make sure that this actually
works by going over to our terminal,

27
00:01:34.459 --> 00:01:38.368
and we also need text
with all the text nodes.

28
00:01:38.368 --> 00:01:40.249
There we go, okay.

29
00:01:40.249 --> 00:01:41.945
So let's take a look at
that in the browser.

30
00:01:41.945 --> 00:01:42.847
So at this point,

31
00:01:42.847 --> 00:01:45.984
you notice that everything looks
exactly the same as before.

32
00:01:45.984 --> 00:01:46.640
So why is that?

33
00:01:46.640 --> 00:01:47.700
We made the change, but

34
00:01:47.700 --> 00:01:50.733
there's nothing actually showing
up differently in the browser.

35
00:01:50.733 --> 00:01:55.420
Well, the reason for that is that
in Elm everything starts with main.

36
00:01:55.420 --> 00:01:59.044
So all that's going to happen is if
we change something in main here.

37
00:01:59.044 --> 00:02:02.835
So before the fact that we did this
banner, or in fact, any changes that we

38
00:02:02.835 --> 00:02:06.015
might make to this feed in here,
are going to have any effect,

39
00:02:06.015 --> 00:02:09.342
we need to actually reference
them from somewhere inside main.

40
00:02:09.342 --> 00:02:10.661
So that's where this other TODO comes in.

41
00:02:10.661 --> 00:02:13.567
It says replace this div with the banner.

42
00:02:13.567 --> 00:02:17.530
So we're gonna completely delete that
div and replace it with just banner.

43
00:02:17.530 --> 00:02:20.112
And so now what Elm gets here,
it's going to say

44
00:02:20.112 --> 00:02:23.594
I'm gonna drop in that value that we
defined up here right into there.

45
00:02:23.594 --> 00:02:28.238
So recompile it, go back to the browser,
and now we actually see, conduit,

46
00:02:28.238 --> 00:02:30.247
a place to share your knowledge.

47
00:02:30.247 --> 00:02:36.529
And we can mess with this and
say, your funky Elm knowledge.

48
00:02:36.529 --> 00:02:37.798
And we compile,

49
00:02:37.798 --> 00:02:42.888
we can see now I've got some funky
Elm knowledge going on in there.

50
00:02:42.888 --> 00:02:45.826
Worth noting that, effectively,
what we've done here is,

51
00:02:45.826 --> 00:02:49.561
we've just separated these out so that
it's in a different place in the file.

52
00:02:49.561 --> 00:02:51.371
But we could have just
as easily in-lined it.

53
00:02:51.371 --> 00:02:56.194
We could put that in there and
that would work just as well as what

54
00:02:56.194 --> 00:02:59.758
we did previously,
exactly the same output.

55
00:02:59.758 --> 00:03:04.543
So essentially all we've done is put
this somewhere else and given it a name.

56
00:03:04.543 --> 00:03:07.747
But there's no difference between
putting the one in one place or

57
00:03:07.747 --> 00:03:09.445
in-lining it in the other place.

58
00:03:09.445 --> 00:03:13.092
Either way will work exactly
as well as the other.

