WEBVTT

1
00:00:00.085 --> 00:00:02.738
&gt;&gt; Richard Feldman: So
first problem we have is the avatar URL.

2
00:00:02.738 --> 00:00:05.554
So we've got this maybe URL value.

3
00:00:05.554 --> 00:00:08.311
This a case maybeurl of and
there are two possibilities.

4
00:00:08.311 --> 00:00:11.615
One is we actually got a URL and
the other is this user did not

5
00:00:11.615 --> 00:00:15.411
specify an avatar is we're gonna
have to do some sort of fall back.

6
00:00:15.411 --> 00:00:18.660
So we know the fallback case is
gonna be smiley-cyrus here, and

7
00:00:18.660 --> 00:00:22.342
in the case that we actually have a URL
for them we're just gonna return.

8
00:00:22.342 --> 00:00:26.642
So, in either pathway, in either
situation, we've either got a URL or

9
00:00:26.642 --> 00:00:28.206
we've got Smiley Cyrus.

10
00:00:28.206 --> 00:00:29.235
So, let's see how that looks.

11
00:00:32.979 --> 00:00:37.881
&gt;&gt; Richard Feldman: Fantastic, we now
have actual avatar URL's for those folks.

12
00:00:37.881 --> 00:00:39.839
Great, they're back.

13
00:00:39.839 --> 00:00:44.515
Now, for the next one,
actually you just sign up, blah blah,

14
00:00:44.515 --> 00:00:50.528
you can put whatever you want in this,
doesn't really matter, example.com.

15
00:00:50.528 --> 00:00:53.393
Any password you want and as you can see,

16
00:00:53.393 --> 00:00:57.699
I've now got my Smiley Cyrus
avatar that I'm rocking here.

17
00:00:57.699 --> 00:01:01.251
My feed is empty because I don't
actually follow anyone, but

18
00:01:01.251 --> 00:01:05.440
the global feed shows me all this same
stuff as I saw when I was logged out.

19
00:01:05.440 --> 00:01:09.703
So to reproduce the second bug,
I need to open up new post,

20
00:01:09.703 --> 00:01:11.622
or edit an existing post.

21
00:01:11.622 --> 00:01:14.076
And so I'm gonna say] article title,
Stuff.

22
00:01:14.076 --> 00:01:16.046
What's the article about, Things.

23
00:01:16.046 --> 00:01:19.085
Write the article, blah, blah, blah.

24
00:01:19.085 --> 00:01:22.489
And then to reproduce the bug,
I need to put in tags that actually have

25
00:01:22.489 --> 00:01:25.730
too many spaces in between them,
or at least, multiple spaces.

26
00:01:25.730 --> 00:01:30.246
So I hit Publish and it says,
some tags are empty, curses.

27
00:01:30.246 --> 00:01:33.186
All right, so that's the problem,
is that some of these

28
00:01:33.186 --> 00:01:37.307
spaces are actually getting interpreted
as tags when we don't want them to be.

29
00:01:37.307 --> 00:01:38.748
We want them to just get thrown out.

30
00:01:38.748 --> 00:01:40.428
Okay, so that's the bug,

31
00:01:40.428 --> 00:01:44.090
to fix the bug we're going to
go over to this code over here.

32
00:01:44.090 --> 00:01:49.818
All right, so we've got a pipeline
that currently has one thing in it.

33
00:01:49.818 --> 00:01:52.168
We're splitting the tag string on a space,
so

34
00:01:52.168 --> 00:01:55.431
we get a list of each of the things
that are in between the spaces.

35
00:01:55.431 --> 00:01:59.971
Then we're calling List.map String.trim,
which we'll trim all of them, but

36
00:01:59.971 --> 00:02:02.030
now we want to actually filter them.

37
00:02:02.030 --> 00:02:06.482
And we want to filter them such
that we remove all the ones

38
00:02:06.482 --> 00:02:08.678
that have nothing in them.

39
00:02:08.678 --> 00:02:10.466
In other words, they were just spaces and

40
00:02:10.466 --> 00:02:12.467
they're going to be
processed as empty tags.

41
00:02:12.467 --> 00:02:19.910
Okay, so we're gonna say tag and then tag
double equals quote, did anyone try this?

42
00:02:19.910 --> 00:02:26.382
Okay, you probably know that
it didn't work properly.

43
00:02:26.382 --> 00:02:28.106
It's not quite what we want and

44
00:02:28.106 --> 00:02:32.230
actually there's a special error message
that I put in for this use case.

45
00:02:32.230 --> 00:02:36.630
So I'm just gonna put gibberish in here,
tag, another, etc.

46
00:02:36.630 --> 00:02:39.256
I hit Publish is close but not quite.

47
00:02:39.256 --> 00:02:42.391
The filter are gonna returning true and
it should be returning false.

48
00:02:42.391 --> 00:02:45.832
I'll admit this is an error of
message was specific to the workshops,

49
00:02:45.832 --> 00:02:48.649
it's not what is actually
there the real applications.

50
00:02:48.649 --> 00:02:51.049
Yeah, so this basically saying,

51
00:02:51.049 --> 00:02:55.863
filter it out only if its empty,
sorry, keep it if it's empty.

52
00:02:55.863 --> 00:02:57.278
In other words,
it does the opposite of what we wanted.

53
00:02:57.278 --> 00:03:02.313
It actually throws out all the ones
that we should be keeping and

54
00:03:02.313 --> 00:03:06.500
then keeps the one that we
wanted to be throwing out.

55
00:03:06.500 --> 00:03:09.423
If I change that to no
equal to empty string,

56
00:03:09.423 --> 00:03:12.425
then it will actually
work a good bit better.

57
00:03:12.425 --> 00:03:15.536
Now I can do this blah blah blah,

58
00:03:15.536 --> 00:03:20.618
tag the whatever spaces I,
[COUGH] Publish Article.

59
00:03:20.618 --> 00:03:24.504
And sure enough, now I actually have a
published successfully published article.

60
00:03:24.504 --> 00:03:26.706
The bug has been fixed, huzzah.

