WEBVTT

1
00:00:00.050 --> 00:00:00.600
&gt;&gt; Scott: Welcome back.

2
00:00:00.600 --> 00:00:06.120
I hope everyone was able to deploy
their lambda functions to AWS,

3
00:00:06.120 --> 00:00:10.280
and got to follow this in traps,
and then dig their way out of it,

4
00:00:10.280 --> 00:00:14.620
and maybe have some pretty
interesting questions to ask.

5
00:00:14.620 --> 00:00:16.840
So there really isn't a solution there,

6
00:00:16.840 --> 00:00:19.230
cuz I already showed you how
to deploy before I left.

7
00:00:19.230 --> 00:00:21.908
So I would leave this open to
now that you have deployed, and

8
00:00:21.908 --> 00:00:25.017
you looked at some of the resources,
and you ran into some troubles,

9
00:00:25.017 --> 00:00:28.073
what are some questions you might
have around that deployment, and

10
00:00:28.073 --> 00:00:31.215
some of the issues that you ran into
that I could probably alleviate?

11
00:00:32.603 --> 00:00:34.803
&gt;&gt; Scott: I know we had one about DPC, so

12
00:00:34.803 --> 00:00:40.093
I'm gonna take a quick dive into that
without giving to so much Amazon.

13
00:00:40.093 --> 00:00:43.213
But basically,
there is a service called VPC,

14
00:00:43.213 --> 00:00:46.822
which somebody should make
a startup around this one.

15
00:00:46.822 --> 00:00:49.821
Which is basically
a virtual private Cloud.

16
00:00:49.821 --> 00:00:54.440
So whenever you make an AWS account, you
automatically get one VPC automatically.

17
00:00:54.440 --> 00:00:56.329
You get this nice Internet
gateway automatically.

18
00:00:56.329 --> 00:00:57.670
You get a few subnets.

19
00:00:57.670 --> 00:01:01.700
So you pretty much already have
all the resources you need

20
00:01:01.700 --> 00:01:03.775
to connect your lambda to the Internet.

21
00:01:03.775 --> 00:01:06.415
Cuz all you really need is a VPC,
some subnets,

22
00:01:06.415 --> 00:01:10.583
which are like different nets across
regions that you can use for.

23
00:01:10.583 --> 00:01:14.400
And then, the Internet gateway to
expose yourself to the Internet.

24
00:01:14.400 --> 00:01:17.940
So if you wanted to see what was in a VPC,
you could just click on it.

25
00:01:17.940 --> 00:01:22.000
And let's see, does it show you in here?

26
00:01:22.000 --> 00:01:25.064
Actually, I don't now if
it's gonna show you in here.

27
00:01:26.788 --> 00:01:31.161
&gt;&gt; Scott: I don't think there is one
place where you can go look to see, wait,

28
00:01:31.161 --> 00:01:32.332
VPC connections.

29
00:01:32.332 --> 00:01:33.178
Here we go.

30
00:01:33.178 --> 00:01:35.771
Yeah, so if I had it,
something connected to, this is a VPN.

31
00:01:35.771 --> 00:01:36.720
Nevermind.

32
00:01:36.720 --> 00:01:40.190
Yeah, I don't know if there is one place
you can see everything connected to a VPC.

33
00:01:40.190 --> 00:01:42.670
I think you have to individually
go to the resource itself and

34
00:01:42.670 --> 00:01:45.270
see if it's connected to that VPC.

35
00:01:45.270 --> 00:01:48.890
And again, that's just Amazon and
their GUI.

36
00:01:48.890 --> 00:01:51.700
But yeah, if you wanted to
connect your lambda, then yeah,

37
00:01:51.700 --> 00:01:54.099
you would
&gt;&gt; Scott: I don't want to get into,

38
00:01:54.099 --> 00:01:57.620
there's a lot of stuff you would have to
do to connect all this stuff together.

39
00:01:57.620 --> 00:02:01.980
But yes, you would have to
connect the lambda to the VPC.

40
00:02:01.980 --> 00:02:05.420
Few subnets in some regions,
and then Internet gateway.

41
00:02:05.420 --> 00:02:09.340
I can link everyone to a medium
post that explains it beautifully

42
00:02:09.340 --> 00:02:11.200
if you want to check that out.

43
00:02:11.200 --> 00:02:12.890
It's actually in the service docs.

44
00:02:12.890 --> 00:02:15.630
if you go to the service docs,
they have it in there.

45
00:02:18.221 --> 00:02:20.430
&gt;&gt; Scott: Where am I at?

46
00:02:21.761 --> 00:02:22.990
&gt;&gt; Scott: There we go, okay.

47
00:02:22.990 --> 00:02:24.700
Any other questions on deployment?

48
00:02:25.810 --> 00:02:27.260
Anybody have any troubles?

49
00:02:27.260 --> 00:02:28.866
Any specific things came up?

50
00:02:28.866 --> 00:02:32.230
&gt;&gt; Scott: So everybody deployed easily?

51
00:02:32.230 --> 00:02:32.773
&gt;&gt; Scott: No friction?

52
00:02:32.773 --> 00:02:33.806
&gt;&gt; Speaker 2: There are some friction.

53
00:02:33.806 --> 00:02:34.804
&gt;&gt; Scott: What'd you have friction with?

54
00:02:34.804 --> 00:02:43.680
&gt;&gt; Speaker 2: Initially, it was trying
to figure out how to switch regions.

55
00:02:43.680 --> 00:02:48.150
Because it was overriding
the region that I was in.

56
00:02:48.150 --> 00:02:53.020
And then also, just kind of getting
that credentials file set up properly.

57
00:02:53.020 --> 00:02:57.040
But once you just kind of
like cat it out or open it up

58
00:02:58.090 --> 00:03:02.200
in your editor, it actually becomes pretty
clear to get those credentials in there.

59
00:03:02.200 --> 00:03:02.788
&gt;&gt; Scott: Yeah.
&gt;&gt; Speaker 2: And

60
00:03:02.788 --> 00:03:06.368
that was super helpful in making it,
so you don't have to just export.

61
00:03:06.368 --> 00:03:09.189
Cuz the other thing I was wondering is
that if you export an environment variable

62
00:03:09.189 --> 00:03:11.730
in your terminal, that's gonna
disappear when you close it, right?

63
00:03:11.730 --> 00:03:13.297
&gt;&gt; Scott: Yes.
&gt;&gt; Speaker 2: So you would have to do that

64
00:03:13.297 --> 00:03:17.097
every time, or import it [CROSSTALK]
&gt;&gt; Scott: Import it in your bash, yeah.

65
00:03:17.097 --> 00:03:19.900
&gt;&gt; Scott: Yeah, those can be a nuance,
those things like that.

66
00:03:19.900 --> 00:03:24.105
And then sometimes, if you have multiple
AWS accounts, you forget what's going on.

67
00:03:24.105 --> 00:03:25.850
And, yeah, it's really bad.

68
00:03:25.850 --> 00:03:30.181
So that's why I got that little tool
that I had, this profile manager,

69
00:03:30.181 --> 00:03:32.356
that kinda helps with some of that.

