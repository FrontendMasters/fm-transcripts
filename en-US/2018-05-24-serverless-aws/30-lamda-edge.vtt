WEBVTT

1
00:00:00.133 --> 00:00:03.794
&gt;&gt; Scott Moss: Which brings me to my next
point, globally distributed Lambdas and

2
00:00:03.794 --> 00:00:06.053
what does that mean
an how do you use them.

3
00:00:06.053 --> 00:00:08.067
So it's a couple of things.

4
00:00:08.067 --> 00:00:13.276
You've got AWS on route
53 which is basically,

5
00:00:13.276 --> 00:00:16.881
it's like their DNS or whatever.

6
00:00:16.881 --> 00:00:21.825
But the cool thing about route 53 and
what it lets you do, it will route.

7
00:00:21.825 --> 00:00:24.725
So if you make a Lambda in
every single region on AWS and

8
00:00:24.725 --> 00:00:28.155
I'm not talking about on the Edge,
but just you make a Lambda.

9
00:00:28.155 --> 00:00:31.065
You push one,
the same Lambdas at every region and

10
00:00:31.065 --> 00:00:34.668
then you use route 53 to determine
which Lambda to route to,

11
00:00:34.668 --> 00:00:37.943
depending on where the client
is making that call from.

12
00:00:37.943 --> 00:00:42.731
So it's basically like a CDN, but
it's not on the Edge if that makes sense.

13
00:00:42.731 --> 00:00:47.565
So you use route 53 to push traffic to
different Lambdas that are closer to your

14
00:00:47.565 --> 00:00:48.367
customers.

15
00:00:48.367 --> 00:00:49.617
So that's really cool.

16
00:00:49.617 --> 00:00:54.715
But if you really wanna truly
get on the Edge, what you're

17
00:00:54.715 --> 00:01:01.492
gonna want is Lambda@Edge which is
basically Lambda functions on the Edge.

18
00:01:01.492 --> 00:01:04.736
So if you don't really know
what a Edge is in CDN,

19
00:01:04.736 --> 00:01:09.345
basically a CDN is a network of nodes
across some region or globally.

20
00:01:09.345 --> 00:01:14.057
And whenever you make a request instead
of going to an origin server somewhere in

21
00:01:14.057 --> 00:01:18.979
like Oregon if you're in Florida, you're
gonna go to the closest node to you which

22
00:01:18.979 --> 00:01:21.889
might be Orlando or
Jacksonville or something.

23
00:01:21.889 --> 00:01:26.807
And then that node, what it normally would
do is just like if you're asking for

24
00:01:26.807 --> 00:01:30.848
the same thing, it would send
it back to you, cuz it's cached.

25
00:01:30.848 --> 00:01:32.775
But now because you can
write Lambda on the Edge,

26
00:01:32.775 --> 00:01:34.656
you can actually do
computations right there.

27
00:01:34.656 --> 00:01:37.442
Instead of just sending back a cached
object, you can write a Lambda function.

28
00:01:37.442 --> 00:01:38.933
You can do anything you want there.

29
00:01:38.933 --> 00:01:42.479
So now when somebody hits the Edge server
which might be right next to them,

30
00:01:42.479 --> 00:01:43.901
you can do whatever you want.

31
00:01:43.901 --> 00:01:45.165
You can do an AB test.

32
00:01:45.165 --> 00:01:47.326
You can make a call to another API.

33
00:01:47.326 --> 00:01:49.735
You can access your globally
distributed database.

34
00:01:49.735 --> 00:01:54.380
So therefore, if you think about it, you
have like the whole CDN as your origin.

35
00:01:54.380 --> 00:01:58.150
You no longer have like a single origin
anymore like every node is your origin and

36
00:01:58.150 --> 00:02:00.626
this makes your APIs like
sub 100 milliseconds,

37
00:02:00.626 --> 00:02:02.267
depending on what you're doing.

38
00:02:02.267 --> 00:02:06.709
So you could create some of the world's
fastest APIs by using some of this stuff

39
00:02:06.709 --> 00:02:10.411
and Lambda on the Edge is pretty dope and
they're upgrading it all

40
00:02:10.411 --> 00:02:13.673
the time with lesser limits and
all types of crazy stuff.

41
00:02:13.673 --> 00:02:16.360
When it first came out,
you couldn't really do much with it.

42
00:02:16.360 --> 00:02:19.233
Like you couldn't make
calls to the internet and

43
00:02:19.233 --> 00:02:24.068
some of these functions couldn't do a lot
of things like the limit was like the code

44
00:02:24.068 --> 00:02:27.172
limit was less than a megabyte,
it was ridiculous.

45
00:02:27.172 --> 00:02:28.492
But now, it's pretty good.

46
00:02:28.492 --> 00:02:31.065
It's not the same limits
as regular Lambdas, but

47
00:02:31.065 --> 00:02:33.646
it's still really good on
what you can do with it.

48
00:02:33.646 --> 00:02:36.382
So I highly recommend
checking this stuff out.

49
00:02:36.382 --> 00:02:41.278
This is the next generation of something
you would have done with VCO on fastly or

50
00:02:41.278 --> 00:02:44.419
something like that,
if you've ever used a CDN and

51
00:02:44.419 --> 00:02:49.047
had to use VCO language to do some kind
of like a computation on a node there.

52
00:02:49.047 --> 00:02:53.460
This is the equivalent of
that by the next generation.

53
00:02:53.460 --> 00:02:58.152
Speaking of the Edge,
Cloudflare workers just got announced and

54
00:02:58.152 --> 00:03:00.370
they're currently in beta and

55
00:03:00.370 --> 00:03:04.992
these are basically Cloudflare's
version of Edge functions.

56
00:03:04.992 --> 00:03:07.251
Cloudflare is one of the best
CDN in the world and

57
00:03:07.251 --> 00:03:10.429
I kinda like their approach better
than what Lambda Edge is doing.

58
00:03:10.429 --> 00:03:14.367
It's way simpler in my opinion and
it doesn't take 30 minutes to deploy.

59
00:03:14.367 --> 00:03:17.156
So I would recommend
checking this stuff out.

60
00:03:17.156 --> 00:03:20.994
They're doing some pretty interesting
things and the team is like so active.

61
00:03:20.994 --> 00:03:22.762
It's like you could just email them and
tell them what you want,

62
00:03:22.762 --> 00:03:24.379
and they'll book a meeting with
you like what do you want?

63
00:03:24.379 --> 00:03:25.367
And they'll try to make it.

64
00:03:25.367 --> 00:03:26.824
They're really cool like that.

65
00:03:26.824 --> 00:03:27.657
So again,

66
00:03:27.657 --> 00:03:33.400
this allows you to do computation on
the Edge which is very like powerful.

67
00:03:33.400 --> 00:03:34.064
Super amazing,

68
00:03:34.064 --> 00:03:36.871
you can do all types of crazy shit
there on the Edge like it's amazing.

