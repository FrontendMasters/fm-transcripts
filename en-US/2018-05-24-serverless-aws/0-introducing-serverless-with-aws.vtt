WEBVTT

1
00:00:03.371 --> 00:00:06.988
&gt;&gt; Scott Moss: What's up everybody,
I'm Scott, the CEO and

2
00:00:06.988 --> 00:00:11.427
co-founder of TIPE,
which is spelled T-I-P-E.IO.

3
00:00:11.427 --> 00:00:16.942
The guy at Apple tried to spell it with
a y yesterday, but it's with an i.

4
00:00:16.942 --> 00:00:20.092
And we use serverless
lambda specifically for

5
00:00:20.092 --> 00:00:25.419
a lot of our infrastructure together
with GraphQL, separate from GraphQL for

6
00:00:25.419 --> 00:00:30.290
all different types of things related
to APIs, non-related to APIs.

7
00:00:30.290 --> 00:00:33.844
Doing things on the edge for
CDN, computing on the edge.

8
00:00:33.844 --> 00:00:37.773
So we use it pretty extensively,
and it's just getting better and

9
00:00:37.773 --> 00:00:39.610
it's constantly growing.

10
00:00:39.610 --> 00:00:41.740
And it's just something I always
wanted to teach and talk about,

11
00:00:41.740 --> 00:00:45.970
because I feel like there's this
high barrier entry into it,

12
00:00:45.970 --> 00:00:50.160
because you need to know a lot
about AWS or platforms in general.

13
00:00:50.160 --> 00:00:52.390
But really with tools like
we'll be discussing today,

14
00:00:52.390 --> 00:00:54.000
you can get into it really easily.

15
00:00:54.000 --> 00:00:56.699
And you don't have to be
some DevOps person, or

16
00:00:56.699 --> 00:00:59.883
some backend all star to
understand how to use lambdas.

17
00:00:59.883 --> 00:01:02.370
In fact, anybody can use them.

18
00:01:02.370 --> 00:01:03.920
So that's what we're
gonna be teaching today.

19
00:01:05.290 --> 00:01:06.700
So let's just hop right into it.

20
00:01:07.960 --> 00:01:10.740
Did everyone get a chance
to pull down this repo,

21
00:01:10.740 --> 00:01:13.980
FrontEnd Masters Service with AWS Lambda?

22
00:01:13.980 --> 00:01:15.709
It's not a huge repo.

23
00:01:15.709 --> 00:01:20.444
And the reason this repo isn't so huge is
because the thing about serverless and

24
00:01:20.444 --> 00:01:24.260
lambdas in general is that,
when you get down to the code level,

25
00:01:24.260 --> 00:01:26.609
at the end of the day, it's just code.

26
00:01:26.609 --> 00:01:30.635
If you've ever written anything
server-side or any tooling, it's the same,

27
00:01:30.635 --> 00:01:33.550
whether it's Python,
Node, or what have you.

28
00:01:33.550 --> 00:01:37.060
But the distinguished difference
between serverless and

29
00:01:37.060 --> 00:01:41.652
a server is how it interacts with
the platform you're on, in this case AWS.

30
00:01:41.652 --> 00:01:45.047
And then how we interact with the
framework that's gonna be pretty much like

31
00:01:45.047 --> 00:01:48.920
orchestrating our Lambda functions
which is called the service framework.

32
00:01:48.920 --> 00:01:52.460
So a lot of the stuff you'll be doing
yourself, but the actual code is more or

33
00:01:52.460 --> 00:01:55.130
less the same code you
would've written on a server.

34
00:01:55.130 --> 00:01:57.666
There's definitely some differences,
and we'll discuss those differences.

35
00:01:57.666 --> 00:01:59.120
But at the end of the day, it's just code.

36
00:02:00.140 --> 00:02:02.710
So we're gonna be focused on how
all that comes together, and not so

37
00:02:02.710 --> 00:02:07.830
much on creating some amazing
function that does something amazing.

38
00:02:07.830 --> 00:02:10.400
Cuz we'll just be stuck here
all day trying to debug AWS.

39
00:02:11.520 --> 00:02:14.351
Cool, everybody with me?

40
00:02:14.351 --> 00:02:16.740
Does everybody have AWS account?

41
00:02:18.530 --> 00:02:21.697
If you don't you can set one up,
the instructions are here.

42
00:02:21.697 --> 00:02:26.302
The free tier which will give you plenty
of room to follow this curriculum, and for

43
00:02:26.302 --> 00:02:29.120
the next year to do whatever you want.

44
00:02:29.120 --> 00:02:31.527
But if you didn't get to set one up,
that's totally fine.

45
00:02:31.527 --> 00:02:33.629
You can still follow a long
with the curriculum.

46
00:02:33.629 --> 00:02:39.330
The only part you won’t be able to
actually get in on is when we deploy.

47
00:02:39.330 --> 00:02:40.630
Everything else you can do.

48
00:02:40.630 --> 00:02:43.920
You can run everything locally,
everything is gonna work on your machine.

49
00:02:43.920 --> 00:02:45.880
You don’t even need to touch AWS.

50
00:02:45.880 --> 00:02:50.290
Definitely look at what I’m doing when I
get into AWS and how to move around and

51
00:02:50.290 --> 00:02:52.633
do things, but
you don’t need it to follow along.

52
00:02:52.633 --> 00:02:54.256
You just won’t be able to set deploy.

