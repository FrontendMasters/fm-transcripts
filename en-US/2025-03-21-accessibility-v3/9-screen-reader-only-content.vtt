WEBVTT

1
00:00:00.000 --> 00:00:02.759
&gt;&gt; Jon Kuperman: Another thing
that's really important here is that

2
00:00:02.759 --> 00:00:05.589
sometimes you'll want
screen reader only content.

3
00:00:05.589 --> 00:00:08.562
And this is like a question that I
get asked a lot in workshops is like,

4
00:00:08.562 --> 00:00:09.960
can you detect screen readers?

5
00:00:09.960 --> 00:00:11.899
Is there any kind of way of doing that?

6
00:00:11.899 --> 00:00:14.042
And truthfully,
there's not a way of doing that.

7
00:00:14.042 --> 00:00:15.959
There's no way of detecting
assistive technology.

8
00:00:15.959 --> 00:00:19.409
And I think the standards bodies have been
pretty clear that they don't wanna go down

9
00:00:19.409 --> 00:00:22.290
that road, that you shouldn't be
offering different experiences.

10
00:00:22.290 --> 00:00:26.538
For a while I think there was a pitch to
have a minimal website for accessibility

11
00:00:26.538 --> 00:00:30.736
use cases and then the whole robust
website for non accessibility use cases.

12
00:00:30.736 --> 00:00:32.984
And I think that's like a really
bad direction to head down.

13
00:00:32.984 --> 00:00:37.373
The tools are there to make the full
robust website extremely accessible.

14
00:00:37.373 --> 00:00:38.890
And that's the direction
we should be going in.

15
00:00:38.890 --> 00:00:40.955
So I agree with the standards on there.

16
00:00:40.955 --> 00:00:44.814
However, there are some really cool things
you can do by communicating directly with

17
00:00:44.814 --> 00:00:45.626
screen readers.

18
00:00:45.626 --> 00:00:49.123
And one way to do that is to make elements
that you know the screen reader will read,

19
00:00:49.123 --> 00:00:50.857
but make them visually hidden, right?

20
00:00:50.857 --> 00:00:54.546
And so you say this is here, but
it won't visually appear, but

21
00:00:54.546 --> 00:00:58.248
anyone using a screen reader to
read the content will get to it.

22
00:00:58.248 --> 00:01:01.163
So this kind of like CSS resets
has had a lot of back and

23
00:01:01.163 --> 00:01:04.950
forth over the years of the best way
to make a visually hidden class.

24
00:01:04.950 --> 00:01:08.599
I think a lot of people have settled
on this little bit of CSS here.

25
00:01:08.599 --> 00:01:11.287
But I wanted to tell a cool story
from when I was back at Twitter, and

26
00:01:11.287 --> 00:01:12.929
we'll get into this a little bit later.

27
00:01:12.929 --> 00:01:17.732
But we built this really robust keyboard
shortcut library within twitter.com, and

28
00:01:17.732 --> 00:01:21.665
a lot of social networks have this
where you can go to Timeline, GT, or

29
00:01:21.665 --> 00:01:23.951
go to Messages, GM, things like that.

30
00:01:23.951 --> 00:01:28.327
And we wanted a way of advertising that
particularly to screen reader users.

31
00:01:28.327 --> 00:01:30.616
Say, hey,
we have got this really cool tool set.

32
00:01:30.616 --> 00:01:34.123
And so we came up with this idea
where after the website built,

33
00:01:34.123 --> 00:01:38.239
we prepended a header that said we
have really cool keyboard shortcuts,

34
00:01:38.239 --> 00:01:42.840
hit shift question mark to see them and
then we mark that header visually hidden.

35
00:01:42.840 --> 00:01:45.903
So visually it doesn't show up in
the markup, but it is always there.

36
00:01:45.903 --> 00:01:48.984
And so when you load the site for
the first time with a screen reader,

37
00:01:48.984 --> 00:01:52.554
the first thing that it will read and
we keep a little local storage detective,

38
00:01:52.554 --> 00:01:53.764
you've heard it before.

39
00:01:53.764 --> 00:01:55.858
Was this kind of announcement for
screen readers that, hey,

40
00:01:55.858 --> 00:01:58.245
we've got this really cool shortcut
library, check it out this way.

41
00:01:58.245 --> 00:02:01.853
So you can kind of do some cool
tricks with visually hiding things.

42
00:02:01.853 --> 00:02:06.669
But again, the philosophical point is
we should not be moving in a direction

43
00:02:06.669 --> 00:02:08.336
of making a more limited.

44
00:02:08.336 --> 00:02:11.187
If anything, we should make
the accessible experience more robust.

45
00:02:11.187 --> 00:02:15.362
And so yeah, this is a kind of cool way
that you can sort of interact with screen

46
00:02:15.362 --> 00:02:18.394
reader users without displaying
something like that.

47
00:02:18.394 --> 00:02:21.441
There's caveats though, because if
you were to print out the document,

48
00:02:21.441 --> 00:02:23.174
it would still print out all that markup.

49
00:02:23.174 --> 00:02:26.065
So be kind of aware that you're
not hiding it, hiding it,

50
00:02:26.065 --> 00:02:29.433
you're just visually hiding it
from the rendered process, yeah?

51
00:02:29.433 --> 00:02:33.591
&gt;&gt; Speaker 2: So for an image that is not
really useful for the screen readers,

52
00:02:33.591 --> 00:02:37.061
you can actually have
the Arial hidden True, right?

53
00:02:37.061 --> 00:02:38.488
&gt;&gt; Jon Kuperman: Yeah,
yeah, you could hide it.

54
00:02:38.488 --> 00:02:41.234
I think also like if you just
put the alt text blank on it,

55
00:02:41.234 --> 00:02:42.643
it'll just skip the image.

56
00:02:42.643 --> 00:02:43.719
The screen readers will just skip it.

57
00:02:43.719 --> 00:02:46.008
So yeah, lots of different
ways that you can hide it.

58
00:02:46.008 --> 00:02:50.943
&gt;&gt; Speaker 3: Is a visually hidden
span preferable over an aria label for

59
00:02:50.943 --> 00:02:55.485
anchor tags that should
only contain visible image?

60
00:02:55.485 --> 00:02:59.018
&gt;&gt; Jon Kuperman: So if you have an anchor
tag, okay, yes, you've got links and

61
00:02:59.018 --> 00:03:02.235
instead of text,
the links have visible images in them.

62
00:03:02.235 --> 00:03:06.968
And you're wondering what the best way
to handle that for accessibility is.

63
00:03:06.968 --> 00:03:11.638
I think the actual best way to do it would
just be to have an empty alt string on

64
00:03:11.638 --> 00:03:16.604
the image itself because if you, you don't
wanna visually hid in it because you

65
00:03:16.604 --> 00:03:21.229
need it visually to be there for sighted
users to be able to see the anchor.

66
00:03:21.229 --> 00:03:24.174
An empty alt would be great,
an aria label would also be great.

67
00:03:24.174 --> 00:03:29.117
But I think probably the best solution
would be the anchor and then an empty

68
00:03:29.117 --> 00:03:33.918
alt and then if you needed either
a label or whatever you'd like for it.

69
00:03:33.918 --> 00:03:37.448
So yeah, I guess I think the best solution
probably would be to combine them.

70
00:03:37.448 --> 00:03:40.868
So empty alt on the image,
ARIA label on the anchor and

71
00:03:40.868 --> 00:03:45.124
therefore when users tab over to it,
it'll just read the label and

72
00:03:45.124 --> 00:03:48.329
it won't read the image but
not visually hidden.

73
00:03:48.329 --> 00:03:52.801
&gt;&gt; Speaker 3: Is there a specific
reason it is a one by one pixel and

74
00:03:52.801 --> 00:03:54.159
not just zero?

75
00:03:54.159 --> 00:03:55.348
&gt;&gt; Jon Kuperman: Yeah,
that's a really good question.

76
00:03:55.348 --> 00:03:57.419
So that's referring to
this visually hidden.

77
00:03:57.419 --> 00:04:01.193
This is like the CSS magicians
that work on this stuff.

78
00:04:01.193 --> 00:04:05.461
So I think the thing is, and you see this
quite a bit with like CSS hacks that if

79
00:04:05.461 --> 00:04:10.335
something is width 0 and height 0, there's
like a more than decent chance that tools

80
00:04:10.335 --> 00:04:14.638
like assistive tools will, will skip
it because it doesn't exist to them.

81
00:04:14.638 --> 00:04:18.343
So you see this quite often where you
make something one by one and then you

82
00:04:18.343 --> 00:04:22.596
absolutely position it way off the screen
so it doesn't render, and yet its virtue

83
00:04:22.596 --> 00:04:26.939
of having width and height means that it
won't be skipped by assistive technology.

84
00:04:26.939 --> 00:04:30.542
So I think there's a risk, I think
that probably half the time visually

85
00:04:30.542 --> 00:04:33.074
hidden being zero and
zero would work just great.

86
00:04:33.074 --> 00:04:36.537
But then maybe half the time screen
readers would neglect to read the item

87
00:04:36.537 --> 00:04:38.939
because they would think
that it is not rendered.

