WEBVTT

1
00:00:00.000 --> 00:00:01.953
&gt;&gt; Jon Kuperman: So
getting a little bit further into ARIA,

2
00:00:01.953 --> 00:00:05.643
we've talked about this a little bit, kind
of showing some of the ARIA labels and

3
00:00:05.643 --> 00:00:07.337
the ARIA roles and things like that.

4
00:00:07.337 --> 00:00:12.367
But ARIA is a specification in and
of itself and it's quite a robust API.

5
00:00:12.367 --> 00:00:17.227
So it offers a lot of things that
can provide a ton of usefulness to

6
00:00:17.227 --> 00:00:20.289
interactive and robust applications.

7
00:00:20.289 --> 00:00:23.219
And we'll get into some
kind of cooler examples of

8
00:00:23.219 --> 00:00:28.550
using ARIA to provide what I would say
are exceptional accessible experiences.

9
00:00:28.550 --> 00:00:31.733
So just to review,
the difference between ARIA and

10
00:00:31.733 --> 00:00:36.396
WCAG is that WCAG sets the standard
saying things need sufficient colors,

11
00:00:36.396 --> 00:00:40.689
things need to be keyboard accessible,
things need to be logical and

12
00:00:40.689 --> 00:00:44.846
way ARIA provides tools and
techniques to meet those standards.

13
00:00:44.846 --> 00:00:48.380
So they say, hey, we'll give you ARIA
labeledby, we'll give you described by,

14
00:00:48.380 --> 00:00:51.334
we'll give you these roles and
these regions and things like that.

15
00:00:51.334 --> 00:00:52.516
So there are two specifications.

16
00:00:52.516 --> 00:00:56.704
One says how your app needs to work and
the other provides a set of tools and

17
00:00:56.704 --> 00:00:58.983
techniques to get it working that way.

18
00:00:58.983 --> 00:01:01.908
So there are complementary
standards there, but

19
00:01:01.908 --> 00:01:06.222
ARIA is where we will look for HTML
properties or some JavaScript APIs, or

20
00:01:06.222 --> 00:01:09.794
the tools that we'll actually
need to get our job done here.

21
00:01:09.794 --> 00:01:13.383
So a specific example,
WCAG specifies that text and

22
00:01:13.383 --> 00:01:17.880
interactive elements need to
have sufficient color contrast.

23
00:01:17.880 --> 00:01:19.997
So in order to be compliant, your text and

24
00:01:19.997 --> 00:01:23.476
your interactive elements need
to have some kind of difference.

25
00:01:23.476 --> 00:01:26.683
So WAI-ARIA doesn't
address color contrast,

26
00:01:26.683 --> 00:01:31.216
but it does give you things like
ARIA value now value min, valuemax,

27
00:01:31.216 --> 00:01:36.684
things that you can use to help screen
readers convey interactive robust things.

28
00:01:36.684 --> 00:01:41.079
It's a bit of a subtle line to draw, but
I think ARIA specifically covers it keeps

29
00:01:41.079 --> 00:01:45.220
using the word robust in the spec, but
more advanced applications with more

30
00:01:45.220 --> 00:01:49.618
advanced use cases, tools that would not
be sufficiently covered just by having

31
00:01:49.618 --> 00:01:53.143
a static website with appropriate
colors and things like that.

32
00:01:53.143 --> 00:01:57.630
So yeah, complex components,
that's another good way of viewing it.

33
00:01:57.630 --> 00:02:03.192
Often ARIA comes in to help where
simple HTML cannot do things.

34
00:02:03.192 --> 00:02:05.680
So it's not so
much a replacement for anything.

35
00:02:05.680 --> 00:02:11.160
It's like additive APIs on top of HTML
to help you meet these WCAG standards.

36
00:02:11.160 --> 00:02:15.554
So earlier we learned about the label tag
and we saw all sorts of different ways

37
00:02:15.554 --> 00:02:20.085
that you can use labels, the implicit
labels or the specific labels with IDs and

38
00:02:20.085 --> 00:02:23.126
how they can be used to label
certain form elements and

39
00:02:23.126 --> 00:02:27.739
help screen reader users understand what
it is that they're interacting with.

40
00:02:27.739 --> 00:02:31.342
We also talked back then about
how labels had a limitation

41
00:02:31.342 --> 00:02:34.882
of only being able to be
applied to labelable elements.

42
00:02:34.882 --> 00:02:38.680
And we learned that we can use ARIA for
non labelable elements.

43
00:02:38.680 --> 00:02:42.476
So in general, the ARIA spec provides
us with some really cool tools for

44
00:02:42.476 --> 00:02:44.450
labeling and describing elements.

45
00:02:44.450 --> 00:02:49.512
And those tools are aria-label,
aria-labeledby and aria-described by.

46
00:02:49.512 --> 00:02:51.085
So let's take a little look into these.

47
00:02:51.085 --> 00:02:53.089
So we've got labeledby and describedby,

48
00:02:53.089 --> 00:02:56.659
which I find often trip some people up
when they're first getting started.

49
00:02:56.659 --> 00:03:01.524
So the label is essential information
about the object, like what it is.

50
00:03:01.524 --> 00:03:05.388
Basically what it is,
it is a name field, a name text field.

51
00:03:05.388 --> 00:03:08.051
The description is there
to provide supplemental or

52
00:03:08.051 --> 00:03:12.113
extended information that users might
need for whatever they're working on.

53
00:03:12.113 --> 00:03:18.288
So in this example we can see that
the label is quantity, right?

54
00:03:18.288 --> 00:03:19.992
That first line there, label quantity.

55
00:03:19.992 --> 00:03:23.601
So when they get to the field
it'll say text field, quantity.

56
00:03:23.601 --> 00:03:27.316
And the description is what
the user's kind of supposed to do.

57
00:03:27.316 --> 00:03:30.327
And so it's like enter the desired
quantity 1 through 10, or

58
00:03:30.327 --> 00:03:33.918
maybe it would be, how many of these
headphones would you like to purchase?

59
00:03:33.918 --> 00:03:37.726
Something that's supplemental
that's not absolutely vital for

60
00:03:37.726 --> 00:03:40.174
how to enter information on the field, but

61
00:03:40.174 --> 00:03:44.396
is really nice to have describing what
action you expect the user to take.

62
00:03:44.396 --> 00:03:46.193
Does this kind of example help,
kind of, okay, great.

63
00:03:46.193 --> 00:03:49.116
And then in order that they will be read,
it will be the label and

64
00:03:49.116 --> 00:03:51.337
then the description
will be read afterwards.

65
00:03:51.337 --> 00:03:54.010
So just kind of thinking about how
the screen reader will handle it.

