WEBVTT

1
00:00:00.240 --> 00:00:03.101
&gt;&gt; Jon Kuperman: So, with that,
we will go into our 3rd exercise,

2
00:00:03.101 --> 00:00:04.600
which is tab trapping.

3
00:00:04.600 --> 00:00:09.280
So if we go back over to the website,
and we go back to this area here, and

4
00:00:09.280 --> 00:00:14.792
we go to exercise 3 tab trapping, we'll
notice that we have quite a simple page.

5
00:00:14.792 --> 00:00:16.912
And on this page we have a modal form.

6
00:00:16.912 --> 00:00:20.061
And so you click open the modal and
it opens this contact thing, and

7
00:00:20.061 --> 00:00:22.704
it sort of works how you would
expect where you open it and

8
00:00:22.704 --> 00:00:25.800
it's got a form to it, and
then you hit cancel and it closes it.

9
00:00:25.800 --> 00:00:29.163
But the thing that you'll notice,
like I had described before,

10
00:00:29.163 --> 00:00:33.319
is if you go ahead and you open it and you
begin tabbing through the elements here,

11
00:00:33.319 --> 00:00:37.170
that once you get to the cancel button,
which is the last tab able element,

12
00:00:37.170 --> 00:00:41.203
if you hit tab again, it actually takes
you up and starts tabbing you through,

13
00:00:41.203 --> 00:00:42.778
like my Chrome tabs up here.

14
00:00:42.778 --> 00:00:46.323
I've completely lost the plot here,
and now I'm tabbing back through

15
00:00:46.323 --> 00:00:49.154
the website and
then finally I get back into the modal.

16
00:00:49.154 --> 00:00:53.327
And so kind of your task here, and
the source code, again is all in this HTML

17
00:00:53.327 --> 00:00:56.880
with a little bit of JavaScript here,
is to create a tab trap.

18
00:00:56.880 --> 00:01:00.280
And so the idea being that in some way
there's multiple ways to solve this.

19
00:01:00.280 --> 00:01:02.651
When you are on the last element and
you hit tab,

20
00:01:02.651 --> 00:01:06.816
it should instead of letting you go, it
should send you back to the first element.

21
00:01:06.816 --> 00:01:10.248
And similarly, when you're on the first
element and you hit shift tab,

22
00:01:10.248 --> 00:01:12.114
it should send you to the last element.

23
00:01:17.723 --> 00:01:18.662
All right, cool.

24
00:01:18.662 --> 00:01:20.072
So, yeah, welcome back.

25
00:01:20.072 --> 00:01:23.810
Let's kinda go through this
tab trapping one together.

26
00:01:23.810 --> 00:01:25.370
Hopefully people found it okay.

27
00:01:25.370 --> 00:01:27.586
There's, I think, a couple of
different ways we can solve it.

28
00:01:27.586 --> 00:01:30.486
And again, yeah,
the bigger takeaway, I guess,

29
00:01:30.486 --> 00:01:35.007
is like starting to understand more and
more what the usability concerns are for

30
00:01:35.007 --> 00:01:38.530
people that are doing keyboard only or
using screen readers.

31
00:01:38.530 --> 00:01:42.731
So just as a reminder,
we'll go back into the example here.

32
00:01:42.731 --> 00:01:45.746
We've got this modal and the modal already
does a bunch of cool things for us.

33
00:01:45.746 --> 00:01:48.634
It's like if we hit escape or
click away, it should close and

34
00:01:48.634 --> 00:01:51.342
we can tab through the form elements,
which is great.

35
00:01:51.342 --> 00:01:55.277
But the kinda problem that we were looking
to solve was that when you tab to the end

36
00:01:55.277 --> 00:01:58.350
and then hit tab again,
your focus gets moved back up here.

37
00:01:58.350 --> 00:02:02.108
Similarly, if you were to shift tab
to the beginning and then shift tab,

38
00:02:02.108 --> 00:02:03.806
it gets moved back behind here.

39
00:02:03.806 --> 00:02:05.822
And this is not what we are looking for.

40
00:02:05.822 --> 00:02:07.710
So kinda jumping into
the code a little bit.

41
00:02:07.710 --> 00:02:11.105
Feel free to follow along if you
didn't do the exercise, but otherwise,

42
00:02:11.105 --> 00:02:13.062
however you did it, I'm sure is fine.

43
00:02:13.062 --> 00:02:15.798
But we've got these kind
of two event listeners.

44
00:02:15.798 --> 00:02:18.942
We've got the handle escape key and
the handle tab key.

45
00:02:18.942 --> 00:02:22.998
And so we kinda want to just
implement this handle tab key event.

46
00:02:22.998 --> 00:02:26.448
So we can just do a handle tab key,
and we can grab the event,

47
00:02:26.448 --> 00:02:31.750
and then I think there's a couple of
ways that we could go about doing this.

48
00:02:31.750 --> 00:02:38.290
I guess if we can just log kinda some
things out here and open the DevTools.

49
00:02:39.990 --> 00:02:43.705
So when we hit tab,
we get access to this E,

50
00:02:43.705 --> 00:02:48.578
and the E, if we log it out has
a bunch of good stuff on it.

51
00:02:48.578 --> 00:02:51.330
Yeah, it's got like a code and
a key that are both tabs.

52
00:02:51.330 --> 00:02:54.802
So I think we can do something like,
okay, so we're in here.

53
00:02:54.802 --> 00:03:00.178
If the E key is not and then whatever
that was tab, then we can just return.

54
00:03:00.178 --> 00:03:02.847
Right, so
we only wanna care about the tab key, and

55
00:03:02.847 --> 00:03:05.030
then what we'll do is something like if.

56
00:03:06.610 --> 00:03:11.780
Yeah, there's like a shift key property,
so we'll do if E shift key.

57
00:03:11.780 --> 00:03:17.525
And here we know going backwards or
however we wanna call it, and then else.

58
00:03:17.525 --> 00:03:20.114
And then here we know going forwards and

59
00:03:20.114 --> 00:03:24.905
then, for those that dug through the code,
I provided a helper method.

60
00:03:24.905 --> 00:03:29.567
This does something very
similar to the focusable

61
00:03:29.567 --> 00:03:33.556
library that I had highlighted earlier.

62
00:03:33.556 --> 00:03:38.221
So essentially just returning a big
string of all of the tap able elements

63
00:03:38.221 --> 00:03:39.528
that you can find.

64
00:03:39.528 --> 00:03:43.320
So this one is constrained to just
the ones that we have in our little app.

65
00:03:43.320 --> 00:03:45.448
But you could basically do the same thing.

66
00:03:45.448 --> 00:03:49.157
So basically it's like this array of
all of the different tap able elements.

67
00:03:49.157 --> 00:03:53.888
So I think the things that
we'll sort of wanna do are,

68
00:03:53.888 --> 00:03:58.618
if we're going backwards and
we are on the first one,

69
00:03:58.618 --> 00:04:03.664
if we're shift tabbing and
we're on the first element,

70
00:04:03.664 --> 00:04:08.712
then we would wanna do something
like prevent default and

71
00:04:08.712 --> 00:04:13.200
set focus to last element,
something like that.

72
00:04:13.200 --> 00:04:18.000
And then similarly, if we're going
forwards and we're on the last element,

73
00:04:18.000 --> 00:04:22.945
then we would wanna prevent default and
set focus to first element, basically,

74
00:04:22.945 --> 00:04:24.432
something like that.

75
00:04:24.432 --> 00:04:26.064
I think there's lots of different
ways you could solve it.

76
00:04:26.064 --> 00:04:29.584
So in here, if we're not on the tab,
then we return.

77
00:04:29.584 --> 00:04:35.362
We can make a focusable elements equals
what was our get focusable elements.

78
00:04:35.362 --> 00:04:37.770
So this should be a nice
list of things we can make.

79
00:04:37.770 --> 00:04:41.739
They're like first element
equals focusable elements,

80
00:04:41.739 --> 00:04:46.113
the first one, and then const
last element equals the focusable

81
00:04:46.113 --> 00:04:49.706
elements at focusable
elements length minus one.

82
00:04:49.706 --> 00:04:52.954
So that should give us the first,
the last, and then we could even make like

83
00:04:52.954 --> 00:04:56.386
a const current element if we wanted,
using again from the previous slides.

84
00:04:56.386 --> 00:05:00.298
There's a couple ways we can do this, but
we can use that document active element.

85
00:05:00.298 --> 00:05:08.080
And so if we go ahead and console log out
first, last current, something like that.

86
00:05:08.080 --> 00:05:11.660
And then go ahead and
play this through and refresh.

87
00:05:13.440 --> 00:05:14.376
Okay, cool.

88
00:05:14.376 --> 00:05:17.271
So the first element is
the input name that looks right,

89
00:05:17.271 --> 00:05:20.659
the last element is the button
close modal that also looks right,

90
00:05:20.659 --> 00:05:23.504
and then the current element
would be the input name.

91
00:05:23.504 --> 00:05:24.704
That seems good to me.

92
00:05:24.704 --> 00:05:29.649
So then here I think we can do something
like, okay, if the current element is

93
00:05:29.649 --> 00:05:33.683
equal to the first element,
then we're in our little things,

94
00:05:33.683 --> 00:05:38.400
we can do our E prevent default and
then again using the APIs that we learned

95
00:05:38.400 --> 00:05:42.851
about the Focus API, so then we can
call last element focus, right?

96
00:05:42.851 --> 00:05:46.334
So if it's a tab and
it's a shift and we're on the 1st,

97
00:05:46.334 --> 00:05:49.985
don't do anything normal,
instead send you to the last.

98
00:05:49.985 --> 00:05:51.754
And then we'll do the same thing here.

99
00:05:51.754 --> 00:05:56.000
So we'll do if the current element
is equal to the last element.

100
00:05:56.000 --> 00:06:00.508
So if it's a tab and it's not a shift and
we're on the last element,

101
00:06:00.508 --> 00:06:05.872
then we'll do a prevent default, and
then we'll focus on the first element.

102
00:06:05.872 --> 00:06:08.760
So let's give that a try and
see how it went.

103
00:06:08.760 --> 00:06:11.528
We'll open up the modal tab to the end.

104
00:06:11.528 --> 00:06:15.626
Yes, okay, so now I have tabbed to
the cancel and then I hit tab again, and

105
00:06:15.626 --> 00:06:19.792
it takes me to the name, and let's see
if shift tab takes me to the cancel.

106
00:06:19.792 --> 00:06:24.201
So I can kinda hold the tab key and
just circle around these things, and

107
00:06:24.201 --> 00:06:25.746
that should be good.

108
00:06:25.746 --> 00:06:30.538
I find the active element opens up a bunch
of really cool features that you can build

109
00:06:30.538 --> 00:06:32.354
by preserving their focus.

110
00:06:32.354 --> 00:06:34.938
You could do other things,
you could get fancy.

111
00:06:34.938 --> 00:06:37.330
I think right now you open the modal,
it does.

112
00:06:37.330 --> 00:06:38.842
Okay, it focuses on the first element.

113
00:06:38.842 --> 00:06:42.655
But if you had a more robust custom
application, you could unopen, make sure

114
00:06:42.655 --> 00:06:46.832
that the user was focused where you'd like
them to be, and kind of trapping them in.

115
00:06:46.832 --> 00:06:50.074
Also making sure that there are ways for
example,

116
00:06:50.074 --> 00:06:55.553
you should be able to hit escape to close
the modal because if you're keyboard only,

117
00:06:55.553 --> 00:06:58.661
you're not gonna be able
to click away from it.

118
00:06:58.661 --> 00:07:00.340
So just kind of some
considerations like that.

