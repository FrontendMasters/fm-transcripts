WEBVTT

1
00:00:00.000 --> 00:00:01.606
&gt;&gt; ThePrimeagen: We have
everything we need.

2
00:00:01.606 --> 00:00:03.946
We already have our reliable
environment now, so

3
00:00:03.946 --> 00:00:05.738
we just need one more script, right?

4
00:00:05.738 --> 00:00:06.996
To be able to set up our environment.

5
00:00:06.996 --> 00:00:11.541
So here's my environment idea, and
maybe I'll throw this out there,

6
00:00:11.541 --> 00:00:14.662
cuz it's a little bit
more kind of complicated.

7
00:00:14.662 --> 00:00:18.804
Is that here, I'm gonna go in here,
and I'm gonna jump into GIMP, and

8
00:00:18.804 --> 00:00:23.245
we're gonna kind of do, a quick little
draw of it all, okay, sounds good?

9
00:00:23.245 --> 00:00:25.974
Now this isn't my normal mouse so
if my lines aren't

10
00:00:25.974 --> 00:00:29.708
as straight as they normally are,
I would definitely blame the mouse.

11
00:00:29.708 --> 00:00:31.059
All right, not the user.

12
00:00:31.059 --> 00:00:34.596
So here's the basic idea is that
I really need two operations,

13
00:00:34.596 --> 00:00:37.145
I need a copy directory and
I need a copy file.

14
00:00:37.145 --> 00:00:41.751
In a copy directory, what it needs to
do is it needs to go to a directory.

15
00:00:41.751 --> 00:00:46.372
And inside of that directory,
I need to be able to take all the sub

16
00:00:46.372 --> 00:00:51.095
directories inside of it, and
then copy those to a destination.

17
00:00:51.095 --> 00:00:54.006
So that's kind of my first thing is that,

18
00:00:54.006 --> 00:00:57.426
you can imagine I have
a folder called .config.

19
00:00:57.426 --> 00:01:00.690
And that's the same thing as your XDG
config home, which is on a lot of on like

20
00:01:00.690 --> 00:01:04.525
Ubuntu, and I'm sure there's other systems
that have something very, very similar.

21
00:01:04.525 --> 00:01:08.444
And I wanna copy my doc config, and
I want to put it into my doc config,

22
00:01:08.444 --> 00:01:11.026
that's actually where
all my dot files are.

23
00:01:11.026 --> 00:01:13.920
So I want something that can
that can crawl a directory and

24
00:01:13.920 --> 00:01:15.185
then put them over here,

25
00:01:15.185 --> 00:01:19.487
which means I'm gonna want to delete the
previous version of whatever's in there.

26
00:01:19.487 --> 00:01:22.558
And I'm gonna wanna copy
over the new version.

27
00:01:22.558 --> 00:01:25.432
File's obviously gonna be
something similar, except for

28
00:01:25.432 --> 00:01:29.051
we want it to be a little bit different,
which is I can point to any one file,

29
00:01:29.051 --> 00:01:32.863
take its file name, and then put it into
some other directory somewhere else.

30
00:01:32.863 --> 00:01:34.796
That's it,
that's all we wanna build right here.

31
00:01:34.796 --> 00:01:38.226
So I can have just a very simple kind
of copying scheme for my dot files,

32
00:01:38.226 --> 00:01:38.875
that's it.

33
00:01:38.875 --> 00:01:40.346
So it should be pretty simple, and

34
00:01:40.346 --> 00:01:42.900
then I can just have my dot files
as a series of directories.

35
00:01:42.900 --> 00:01:45.045
Here's my dot config, here's my dot local.

36
00:01:45.045 --> 00:01:48.216
Here's anything else that I
might have in here, my zish RC,

37
00:01:48.216 --> 00:01:51.147
my bash RC, whatever other
fun stuff you have in there.

38
00:01:51.147 --> 00:01:53.906
And for fun,
I can even destroy my my nvim setup for

39
00:01:53.906 --> 00:01:56.615
this, and
kind of just show you how it all works.

40
00:01:56.615 --> 00:01:59.117
So what we're gonna do here is,
I'm gonna jump over here, and

41
00:01:59.117 --> 00:02:00.734
I'm gonna start by creating dev.env.

42
00:02:00.734 --> 00:02:05.150
I call it dev.env, if you probably noticed
that I also have something called dev.env

43
00:02:05.150 --> 00:02:06.309
currently on my path.

44
00:02:06.309 --> 00:02:09.666
If I cat out which dev env,

45
00:02:09.666 --> 00:02:14.096
you'll notice that, all right.

46
00:02:14.096 --> 00:02:18.132
This is my version of it that I already
just have up and running on my system,

47
00:02:18.132 --> 00:02:20.901
which I just copied over
all the things that I want.

48
00:02:20.901 --> 00:02:22.954
I have the copying over my directories,
and

49
00:02:22.954 --> 00:02:25.672
I have just copying over
the individual files that I want,

50
00:02:25.672 --> 00:02:28.127
including tmux, Dev,
prod, ready course ready.

51
00:02:28.127 --> 00:02:31.000
Whatever that one is that's for
this, but I'm not gonna use it,

52
00:02:31.000 --> 00:02:32.055
don't worry about it.

53
00:02:32.055 --> 00:02:33.161
All right, so you get the idea.

54
00:02:33.161 --> 00:02:35.325
You see kind of where
we're going with this.

55
00:02:35.325 --> 00:02:39.389
I find it to be really easy, because when
I want my computer to be up and running,

56
00:02:39.389 --> 00:02:41.329
I do that, and now I have all my files,

57
00:02:41.329 --> 00:02:45.609
and everything's updated from my exact
environment that I have within my system.

58
00:02:45.609 --> 00:02:48.972
So previously, I did the exact same thing,
I just used Ansible.

59
00:02:48.972 --> 00:02:54.030
I would copy the config
folder into my XdG config.

60
00:02:54.030 --> 00:02:58.331
It did this, except for
it did it in like a minute, as opposed to,

61
00:02:58.331 --> 00:03:00.063
like that amount of time.

62
00:03:00.063 --> 00:03:02.758
So I just don't wanna live that
life anymore, not living that life,

63
00:03:02.758 --> 00:03:03.833
I refuse to live that life.

64
00:03:03.833 --> 00:03:06.486
Let's start off by getting
the basics of the script ready.

65
00:03:06.486 --> 00:03:08.388
I'm just gonna copy things over.

66
00:03:08.388 --> 00:03:10.764
There's the whole, like,
Don't Repeat Yourself mantra.

67
00:03:10.764 --> 00:03:16.789
I kind of generally repeat myself if I
have no reason not to repeat myself.

68
00:03:16.789 --> 00:03:19.927
I don't wanna create a bash system.

69
00:03:19.927 --> 00:03:21.762
That kind of just sounds not fun.

70
00:03:21.762 --> 00:03:26.631
So instead, I'm just gonna accept
the fact that I'm gonna go right here and

71
00:03:26.631 --> 00:03:29.764
copy it, and
then go back over here and paste it.

72
00:03:29.764 --> 00:03:33.253
Now, yay, look at that,
we have our scripter.

73
00:03:33.253 --> 00:03:36.346
We don't need to filter,
I'll keep the dry run in here.

74
00:03:36.346 --> 00:03:39.405
We could add in more arguments,
I think mine has more arguments.

75
00:03:39.405 --> 00:03:40.812
And so
we'll just kind of keep it like this so

76
00:03:40.812 --> 00:03:42.001
you can pass in a bunch of arguments.

77
00:03:42.001 --> 00:03:44.058
And I still have this execute,
I still have this.

78
00:03:44.058 --> 00:03:49.314
And then I can go dev, yeah.

79
00:03:49.314 --> 00:03:52.225
And I can do it again, look at that or

80
00:03:52.225 --> 00:03:57.576
we should probably call this thing
dev env, yeah, look at that.

81
00:03:57.576 --> 00:04:04.350
And so now if I, so we can say that,

82
00:04:04.350 --> 00:04:08.338
there we go, nice.

83
00:04:08.338 --> 00:04:11.161
So we have our dry run and
our not dry run.

84
00:04:11.161 --> 00:04:14.178
We definitely wanna keep dry run for this
one because these are gonna be a lot of

85
00:04:14.178 --> 00:04:16.237
destructive operations,
a lot of deleting files.

86
00:04:16.237 --> 00:04:19.601
You kinda wanna make sure that when you
delete a file, you feel ready to do this.

87
00:04:19.601 --> 00:04:22.442
Cuz one time I had the little
things crossed and so

88
00:04:22.442 --> 00:04:26.876
I just deleted the one I created and
then that caused all sorts of problems and

89
00:04:26.876 --> 00:04:29.802
I was really sad, and
then I copied nothing over.

90
00:04:29.802 --> 00:04:34.293
And so it's just always good to just
have a dry run, just part of life.

91
00:04:34.293 --> 00:04:37.508
It just makes life way better when you
have a like second chance exits on

92
00:04:37.508 --> 00:04:39.484
a highway, I think that should be a thing.

93
00:04:39.484 --> 00:04:41.759
You should be able to
miss the first one and

94
00:04:41.759 --> 00:04:44.304
have second one available
right afterwards.

95
00:04:44.304 --> 00:04:45.947
This is the way I live my life, okay,

96
00:04:45.947 --> 00:04:48.711
that may have been the dumbest
thing I've said in a long time.

97
00:04:48.711 --> 00:04:50.195
All right, copy time.

98
00:04:50.195 --> 00:04:52.890
So let's create a function that will
bring over every source directory to

99
00:04:52.890 --> 00:04:53.762
the target directory.

100
00:04:53.762 --> 00:04:57.459
So this will be that first of the two
operations I want to be able to

101
00:04:57.459 --> 00:04:58.965
point it at a directory and

102
00:04:58.965 --> 00:05:02.880
tell it to copy every sub directory
to a new directory's location.

103
00:05:02.880 --> 00:05:04.579
Yeah, yeah?

104
00:05:04.579 --> 00:05:08.045
Yeah, awesome, you guys are just so
great at this.

105
00:05:08.045 --> 00:05:12.977
So I'm gonna have something called
copy_dir, and we have our from,

106
00:05:12.977 --> 00:05:15.659
which is gonna be 1, don't do that.

107
00:05:15.659 --> 00:05:18.789
We're gonna have r 2,
this is where I mess it up, by the way.

108
00:05:18.789 --> 00:05:21.588
I have from 2 as 1,
see, that's what I did.

109
00:05:21.588 --> 00:05:26.185
I didn't update that number and
then bought a bing, bought a boom,

110
00:05:26.185 --> 00:05:31.124
deleted the 2, and then that was
actually the from, and then I was sad.

111
00:05:31.124 --> 00:05:33.484
All right, so we're gonna jump in here.

112
00:05:33.484 --> 00:05:38.947
I'm gonna use something called pushd, and
what this does is it pushes a directory

113
00:05:38.947 --> 00:05:43.631
onto your location stack,
because your location can also be a stack.

114
00:05:43.631 --> 00:05:48.606
So that means where I'm currently at
is allowed to change to a new location.

115
00:05:48.606 --> 00:05:51.417
And when I'm done,
I can pop that directory off, right?

116
00:05:51.417 --> 00:05:56.159
So I can push my from and
I can also popd, right?

117
00:05:56.159 --> 00:05:59.052
So now everywhere in between
here I'm in that from directory,

118
00:05:59.052 --> 00:06:00.809
so everything sounds great, right?

119
00:06:00.809 --> 00:06:03.489
So I can just point
myself to a directory and

120
00:06:03.489 --> 00:06:06.550
now what I can do is I can
go like this dirs= find.

121
00:06:06.550 --> 00:06:11.108
I'm gonna find everything in here,
mindepth 1, maxdepth 1, and

122
00:06:11.108 --> 00:06:14.027
I want them as type directory,
there we go.

123
00:06:14.027 --> 00:06:18.219
So now, I have every single
directory that's within whatever

124
00:06:18.219 --> 00:06:22.184
directory I'm at and I can go for
dir in dirs, look at that.

125
00:06:22.184 --> 00:06:26.112
That's like modern language we're doing
right here, we're looking really good.

126
00:06:26.112 --> 00:06:27.432
This feels really, really nice.

127
00:06:27.432 --> 00:06:30.467
By the way, you can also silence this
because every time you push something in,

128
00:06:30.467 --> 00:06:32.430
it also tells you that
it's changed to directory.

129
00:06:32.430 --> 00:06:36.493
So you can actually take its output and
you can pipe it into dev null or

130
00:06:36.493 --> 00:06:37.358
redirect it.

131
00:06:37.358 --> 00:06:39.352
Technically, this is redirect,
it's not pipe.

132
00:06:39.352 --> 00:06:42.592
Carets are redirect standard out,
pipe is take standard out and

133
00:06:42.592 --> 00:06:44.700
put it into the next program standard in.

134
00:06:44.700 --> 00:06:47.655
So it's a little bit different for
those that don't know the difference, but

135
00:06:47.655 --> 00:06:48.789
tweaks the two, there we go.

136
00:06:48.789 --> 00:06:51.075
So now it'll just be quiet, it'll shut up.

137
00:06:51.075 --> 00:06:55.767
If you wanted more, you could do this,
this would redirect the file descriptor 2

138
00:06:55.767 --> 00:06:59.916
to Dev Null, which file descriptor
2 in every program standard error.

139
00:06:59.916 --> 00:07:02.920
If I'm not mistaken, that's exactly
what it is, 1 is standard out,

140
00:07:02.920 --> 00:07:03.884
2 is standard error.

141
00:07:03.884 --> 00:07:07.960
3 standard in, is that it or 0 standard
in, I don't know all the numbers for

142
00:07:07.960 --> 00:07:11.315
all these things, but
file descriptors, there's numbers.

143
00:07:11.315 --> 00:07:12.159
All right, so there we go.

144
00:07:12.159 --> 00:07:15.623
So we got the dirs, we have all the
directories, and so now we're gonna take

145
00:07:15.623 --> 00:07:19.434
this directory and we're just gonna copy
it over to the destination, that's it.

146
00:07:19.434 --> 00:07:20.700
And so it should be pretty easy.

147
00:07:20.700 --> 00:07:24.261
So I'm gonna go like this, execute,
R-M-R-F-C, that's the dangerous one.

148
00:07:24.261 --> 00:07:26.551
You got that removing of the French
people, you don't like that.

149
00:07:26.551 --> 00:07:29.449
So, if you do that and you mess it up,
everything goes to hell.

150
00:07:29.449 --> 00:07:31.321
So,be careful with this one.

151
00:07:31.321 --> 00:07:35.718
So let's RMRF, our two directory.

152
00:07:35.718 --> 00:07:39.435
So, if there is this
directory in this location,

153
00:07:39.435 --> 00:07:45.463
I'm gonna remove the current one and
I'm going to copy over from the directory.

154
00:07:45.463 --> 00:07:51.132
I'm gonna copy this directory
over to the 2 directory.

155
00:07:51.132 --> 00:07:53.510
That's it, that's all we're gonna,
so simple as that.

156
00:07:53.510 --> 00:07:55.028
That's all the script really is.

157
00:07:55.028 --> 00:07:57.006
Just remove the previous one,
get the new one.

158
00:07:57.006 --> 00:08:00.633
So now we have this nice robust way to
be able to copy a bunch of stuff over.

159
00:08:00.633 --> 00:08:03.333
And so to kinda show you how this works,
let's go like this.

160
00:08:03.333 --> 00:08:05.642
I'm gonna create
a directory called config.

161
00:08:05.642 --> 00:08:09.148
Inside of config,
I'm gonna create one called nvim.

162
00:08:09.148 --> 00:08:12.612
Inside of nvim,
I'm gonna create an init.lua,

163
00:08:12.612 --> 00:08:16.905
that says, print, hello,
Frontend Masters, there we go.

164
00:08:16.905 --> 00:08:21.832
So for those that are uninitialized
into the nvim world.

165
00:08:21.832 --> 00:08:26.608
In the xdg.config/nvim/init.lua,
when nvim starts up,

166
00:08:26.608 --> 00:08:29.319
it looks for this specific script.

167
00:08:29.319 --> 00:08:33.226
When it sees this specific script,
it runs this specific script.

168
00:08:33.226 --> 00:08:36.996
And that's how you configure nvim,
question?

169
00:08:36.996 --> 00:08:41.312
&gt;&gt; Speaker 2: Would you ever back up
the folder before bvefore going in and

170
00:08:41.312 --> 00:08:42.615
deleting files?

171
00:08:42.615 --> 00:08:47.413
&gt;&gt; ThePrimeagen: [LAUGH] Yeah, no, I mean,
I personally am not, this is my system,

172
00:08:47.413 --> 00:08:52.590
I'm just not gonna take that time to
do things like in such a robust way.

173
00:08:52.590 --> 00:08:54.447
There's a very fine line,

174
00:08:54.447 --> 00:08:59.789
I don't know how to describe this other
than this is the line of real software.

175
00:08:59.789 --> 00:09:02.035
There is the line of a hobby that's like,

176
00:09:02.035 --> 00:09:05.064
this is where a lot of times
you'll find all the funs at.

177
00:09:05.064 --> 00:09:08.507
And then there's this
line of real software,

178
00:09:08.507 --> 00:09:12.135
and your goal is to kind
of bounce around in here.

179
00:09:12.135 --> 00:09:16.234
The moment you start doing backups and
stuff, you've gone into real software

180
00:09:16.234 --> 00:09:20.099
land, and real software land takes
a lot more effort to really get going.

181
00:09:20.099 --> 00:09:22.039
You're gonna have to have to really
think about how you do that.

182
00:09:22.039 --> 00:09:23.696
How many backups do you want?

183
00:09:23.696 --> 00:09:26.862
What happened if you have two directories
name the same thing in two different

184
00:09:26.862 --> 00:09:29.209
locations, how much of the path
do you include, right?

185
00:09:29.209 --> 00:09:31.122
It also just becomes this huge nightmare.

186
00:09:31.122 --> 00:09:34.886
So me personally,
I try to avoid real software.

187
00:09:34.886 --> 00:09:38.266
When I'm doing hobby type stuff or I'm
building something, I try to keep it as

188
00:09:38.266 --> 00:09:41.356
one dimensional as possible,
because this area is always really fun.

189
00:09:41.356 --> 00:09:44.001
It just really, really is,
that's like a real thing.

190
00:09:44.001 --> 00:09:48.126
And I think everyone inherently can
identify with that to the deepest part of

191
00:09:48.126 --> 00:09:50.195
their core, like, I know that line.

192
00:09:50.195 --> 00:09:53.228
I've crossed that line, and
then it becomes really unfun.

193
00:09:53.228 --> 00:09:57.449
And the worst part about crossing that
line is the moment you do that project

194
00:09:57.449 --> 00:10:00.937
goes into the elephant graveyard,
which is known as GitHub.

195
00:10:00.937 --> 00:10:04.330
And so that's where it goes immediately,
and then you never touch it again.

196
00:10:04.330 --> 00:10:07.056
It becomes the unfinished project for
the rest of your life.

197
00:10:07.056 --> 00:10:09.091
So don't go into that realm.

198
00:10:09.091 --> 00:10:13.137
I believe we've done everything we need
to do, it's also called having a job.

199
00:10:13.137 --> 00:10:14.297
All right, so there we go,

200
00:10:14.297 --> 00:10:17.534
you can see this is pretty much the exact
same code that I already wrote once.

201
00:10:17.534 --> 00:10:18.785
This looks pretty much the same.

202
00:10:18.785 --> 00:10:22.000
We're gonna have these things,
and I'm gonna copy over this and

203
00:10:22.000 --> 00:10:25.690
just pipe it into my XdG config home,
so we can do the exact same thing here.

204
00:10:25.690 --> 00:10:29.593
So I'll jump back here, and
I'll go like this, copy, ooh, copy dir.

205
00:10:29.593 --> 00:10:34.728
I'm gonna take my config, which is at,
remember, it's right here, it's

206
00:10:34.728 --> 00:10:40.186
on the same level, which has the nvim, and
I am going to run this thing over to XdG.

207
00:10:40.186 --> 00:10:43.220
I always type in an R,
I don't know why, config home.

208
00:10:43.220 --> 00:10:46.829
There we go, so I'm gonna copy
my config to my config home.

209
00:10:46.829 --> 00:10:50.180
So it's gonna copy each one of
the directories, bada, bing, bada, boom,

210
00:10:50.180 --> 00:10:50.757
looks nice.

211
00:10:50.757 --> 00:10:54.278
And of course,
since I am at least minimally smart,

212
00:10:54.278 --> 00:10:57.169
the first thing I'm gonna do are not dumb.

213
00:10:57.169 --> 00:10:59.926
Let's call it dumb, not dumb,
as you can see right here, okay?

214
00:10:59.926 --> 00:11:01.085
Dry run, what do we do?

215
00:11:01.085 --> 00:11:05.031
We rm-rf, Prime Gen config,
same directory.

216
00:11:05.031 --> 00:11:08.280
I could fix this, I don't even care to
fix that, like that's the same thing.

217
00:11:08.280 --> 00:11:13.138
I know it's inefficient to navigate once
more on yourself, but whatever, right?

218
00:11:13.138 --> 00:11:17.684
Delete the nvim folder, then I'm
gonna take my nvim folder here and

219
00:11:17.684 --> 00:11:18.893
then put it over.

220
00:11:18.893 --> 00:11:21.377
Remember, we do a little pushd, popd, so

221
00:11:21.377 --> 00:11:24.004
the .nvim is actually
in the config folder.

222
00:11:24.004 --> 00:11:26.831
So it's not far away,
all right, fantastic.

223
00:11:26.831 --> 00:11:31.361
So let's just do this, I just did it,
I just wiped out my nvim config.

224
00:11:31.361 --> 00:11:34.821
My goodness, if I open up nvim,
look at that Hello, front end masters.

225
00:11:34.821 --> 00:11:39.222
There we go, we have now copied over
everything, everything is fantastic.

226
00:11:39.222 --> 00:11:42.972
It is actually working, and
now I'll just quickly execute mine.

227
00:11:42.972 --> 00:11:46.003
If I do that, we're back up and
running, how fantastic is that?

228
00:11:46.003 --> 00:11:47.318
So, nvim's back.

229
00:11:47.318 --> 00:11:49.234
What you saw for a moment,
it was very easy for

230
00:11:49.234 --> 00:11:51.618
me just to wipe out my setting and
put my new one in place.

231
00:11:51.618 --> 00:11:55.283
Again, I'm just not a symlink guy,
I don't like symlinks.

232
00:11:55.283 --> 00:11:58.463
I think that they're really,
really, really convenient and

233
00:11:58.463 --> 00:11:59.790
that's a problem for me.

234
00:11:59.790 --> 00:12:02.347
Because I will never update
my stuff ever again, and

235
00:12:02.347 --> 00:12:05.495
I'll lose a bunch of work because
they're so dump convenient.

236
00:12:05.495 --> 00:12:08.714
And that's that cuz I forget, I forget,
this director is not symboling, so

237
00:12:08.714 --> 00:12:11.485
when I commit, it just didn't get
that one, and so just won't do it.

238
00:12:11.485 --> 00:12:14.890
It's not gonna do it,
not not going to do it, all right.

239
00:12:14.890 --> 00:12:16.232
There we go, copy directory.

240
00:12:16.232 --> 00:12:18.074
Look at that, this is fantastic.

241
00:12:18.074 --> 00:12:23.960
So this is truly how I get my
environment up and running, there we go.

242
00:12:23.960 --> 00:12:26.887
And just like that, we have that
copy over all of the directories,

243
00:12:26.887 --> 00:12:30.311
all the configuration programs, but
what about one-off scripts, right?

244
00:12:30.311 --> 00:12:32.056
So that's the other thing we gotta do,
okay?

245
00:12:32.056 --> 00:12:34.994
Expect a, [INAUDIBLE] look at that,
don't look at that.

246
00:12:34.994 --> 00:12:39.749
Exact same thing,
we're gonna do something like copy dir,

247
00:12:39.749 --> 00:12:41.997
except for I want copy file.

248
00:12:41.997 --> 00:12:42.988
We're gonna have the exact same thing.

249
00:12:42.988 --> 00:12:46.234
I wanna be able to copy from
this file to this directory.

250
00:12:46.234 --> 00:12:48.172
That's kind of how I
think of it in my head.

251
00:12:48.172 --> 00:12:51.048
Just say it like that in my head and
everything seems to work out pretty good.

252
00:12:51.048 --> 00:12:55.017
So instead, we don't need to do any
sort of push because the from is a file,

253
00:12:55.017 --> 00:12:58.232
the to is a directory,
just have that convention in my head.

254
00:12:58.232 --> 00:13:01.640
But what I really want is I'm
gonna need to have the name,

255
00:13:01.640 --> 00:13:04.907
which is what is the name of
the file that I'm passing.

256
00:13:04.907 --> 00:13:07.866
So I'm gonna go like this, base name from.

257
00:13:07.866 --> 00:13:10.714
And for those that don't know what
base name does, it's pretty nice.

258
00:13:10.714 --> 00:13:14.659
So let's pretend we have something called,
here I'll go base names,

259
00:13:14.659 --> 00:13:16.511
pretend we have foo, bar, baz.

260
00:13:16.511 --> 00:13:20.285
If you've used things like path,
you probably noticed that it has,

261
00:13:20.285 --> 00:13:21.261
I think in Dino and

262
00:13:21.261 --> 00:13:25.450
in bun, it uses base name and go and
all other languages, it uses base name.

263
00:13:25.450 --> 00:13:28.283
Because what that does is it takes
the last item in the path and

264
00:13:28.283 --> 00:13:29.404
that's the base name.

265
00:13:29.404 --> 00:13:32.794
You can also do something called dir name,
this is from earlier, remember earlier?

266
00:13:32.794 --> 00:13:36.446
Foo bar just pops off that last
one on top and says, okay,

267
00:13:36.446 --> 00:13:40.256
this is the directory in which
the thing you're saying exists.

268
00:13:40.256 --> 00:13:43.206
That's why at the top right here,
that's why that works,

269
00:13:43.206 --> 00:13:44.681
is cuz we get the bash source.

270
00:13:44.681 --> 00:13:45.715
Where does it exist?

271
00:13:45.715 --> 00:13:48.210
Now, let's get the der name
of where that file is,

272
00:13:48.210 --> 00:13:52.290
change directory to where that file is and
then get the present working directory.

273
00:13:52.290 --> 00:13:55.663
So hopefully that now makes much
more sense this weird little hack.

274
00:13:55.663 --> 00:13:59.998
I can't memorize things,
it's much easier to memorize steps than it

275
00:13:59.998 --> 00:14:03.755
is to memorize exact text in order,
or else I just forget it.

276
00:14:03.755 --> 00:14:06.758
And so now I understand how it works,
so it's easier.

277
00:14:06.758 --> 00:14:07.545
So there we go.

278
00:14:07.545 --> 00:14:09.867
So we have from, we have to,
we have the base name,

279
00:14:09.867 --> 00:14:12.304
so now I have the name of
the script that I'm copying.

280
00:14:12.304 --> 00:14:17.193
And so all I need to do now is it just
do a little bit of execution here.

281
00:14:17.193 --> 00:14:20.725
So what I'm gonna do is
I'm always gonna remove,

282
00:14:20.725 --> 00:14:25.529
don't do recursively forced delete
if it's not a folder, right?

283
00:14:25.529 --> 00:14:28.726
Because, in case you accidentally,
somehow had it's a file over here, but

284
00:14:28.726 --> 00:14:30.906
a folder over there,
you won't destroy yourself.

285
00:14:30.906 --> 00:14:32.515
Things will blow up, and
you won't be able to do anything.

286
00:14:32.515 --> 00:14:35.494
And you're, okay, yeah,
I made a mistake, absolutely good.

287
00:14:35.494 --> 00:14:42.244
So what I'm gonna do here is,
I'm gonna remove 2/ Name,

288
00:14:42.244 --> 00:14:48.738
and I'm gonna copy over from totoo/name,
there we go.

289
00:14:48.738 --> 00:14:49.948
So now I've actually
used the name of script.

290
00:14:49.948 --> 00:14:54.316
So if it's called bash RC in wherever I
have located it within my environment,

291
00:14:54.316 --> 00:14:56.846
it will be called bash
RC wherever I put it in.

292
00:14:56.846 --> 00:14:58.828
So it's kinda like a nice
little way to do that.

293
00:14:58.828 --> 00:15:03.265
And so let's just do a little kinda fake
one, I'll go like this, copy file, and

294
00:15:03.265 --> 00:15:05.436
I'm gonna go special config, right?

295
00:15:05.436 --> 00:15:07.895
And I wanna put that in my home directory,
all right?

296
00:15:07.895 --> 00:15:11.183
There we go, and I'll go in here and

297
00:15:11.183 --> 00:15:16.129
call special config,
whoopsies, specialconfig.

298
00:15:16.129 --> 00:15:19.068
Go in here, hi, there we go,
wow, I didn't use foo.

299
00:15:19.068 --> 00:15:22.983
Well, I think I'm ruining
my life right here.

300
00:15:22.983 --> 00:15:27.439
So whoopsie, that's my main one,
I'll re-execute this one.

301
00:15:27.439 --> 00:15:29.567
And you'll notice that right
away it says cannot remove.

302
00:15:29.567 --> 00:15:30.966
I should have dry run this, but I didn't.

303
00:15:30.966 --> 00:15:34.140
I was so confident,
should have dry ran it, didn't.

304
00:15:34.140 --> 00:15:35.816
Confidence way too high right now.

305
00:15:35.816 --> 00:15:39.276
There we go, cannot remove that location.

306
00:15:39.276 --> 00:15:42.843
Notice that it's the name of the file that
I passed in, that's why base name is so

307
00:15:42.843 --> 00:15:46.317
cool that it actually is able to take that
and you're able to get out that name.

308
00:15:46.317 --> 00:15:49.520
So now I can just do this and
you can see, okay, it does now exist,

309
00:15:49.520 --> 00:15:50.468
we now deleted it.

310
00:15:50.468 --> 00:15:52.649
Now we are copying everything over,
fantastic.

311
00:15:52.649 --> 00:15:59.162
And if I go cat special config, whoopsies.

312
00:15:59.162 --> 00:16:01.322
I called it in prep when I
was practicing last night.

313
00:16:01.322 --> 00:16:06.088
I did call it special RC, [LAUGH] Copy.

314
00:16:06.088 --> 00:16:07.353
There you go, hi, fantastic.

315
00:16:07.353 --> 00:16:10.424
So now I have a way to copy
over a set of directories,

316
00:16:10.424 --> 00:16:13.863
copy over special just one off scripts,
and there we go.

317
00:16:13.863 --> 00:16:18.692
Now, we have ourselves the full dot file

318
00:16:18.692 --> 00:16:23.244
experience, at least in my opinion.

319
00:16:23.244 --> 00:16:26.373
I often find that it's very
easy to want to abstract,

320
00:16:26.373 --> 00:16:29.157
cuz how many people when
I copied over the log and

321
00:16:29.157 --> 00:16:33.002
executes first thought was,
we should create a utils file.

322
00:16:33.002 --> 00:16:36.693
I bet you a lot of people are like just
create a utils just source a utils file.

323
00:16:36.693 --> 00:16:39.818
And you're probably right,
we could easily source a utils file.

324
00:16:39.818 --> 00:16:44.220
You're correct, but I'm just letting you
know that you don't always need to build

325
00:16:44.220 --> 00:16:48.002
things super complicated,
because the moment you're building that,

326
00:16:48.002 --> 00:16:50.865
you might as well switch
into a real language, right?

327
00:16:50.865 --> 00:16:54.066
I always have some rules around bash
is like, once you work with arrays or

328
00:16:54.066 --> 00:16:57.424
you start building an entire utils folder,
it's probably just time to give

329
00:16:57.424 --> 00:17:00.962
up the fight and just go to some other
language like Python or Node or something.

330
00:17:00.962 --> 00:17:04.134
Something that can do scripting for
you that's a little bit,

331
00:17:04.134 --> 00:17:05.357
nicer to put together.

332
00:17:05.357 --> 00:17:09.750
And so as simple as this is this, whatever
it is, bash, bash can be complicated

333
00:17:09.750 --> 00:17:13.766
really, really quickly, and
I think that's a good thing to remember.

334
00:17:13.766 --> 00:17:16.741
So if you keep it simple,
bash tends to keep pretty simple.

335
00:17:16.741 --> 00:17:17.654
And so there we go,

336
00:17:17.654 --> 00:17:21.437
about 100 lines of code, and this is
how I actually manage all my dot files.

337
00:17:21.437 --> 00:17:24.859
This is almost one for one, all the same
code, and so it's pretty dang simple.

338
00:17:24.859 --> 00:17:27.497
I really, really like it, and
it feels very extensible, and

339
00:17:27.497 --> 00:17:31.122
I don't feel like I have anything that I'm
running into that I'm very upset about.

340
00:17:31.122 --> 00:17:34.823
And so I'm much more happy than I was
with Ansible, because with Ansible,

341
00:17:34.823 --> 00:17:37.998
I literally had 1000 lines of
configuration for installing

342
00:17:37.998 --> 00:17:41.959
it was well over 1000 just because of
how much verbosity that's required.

343
00:17:41.959 --> 00:17:44.315
Ansible is like the Java of the world,
where it's like,

344
00:17:44.315 --> 00:17:45.994
this is the Python on the world, right?

345
00:17:45.994 --> 00:17:49.393
You can do a lot,
Python is extremely terse.

346
00:17:49.393 --> 00:17:51.024
You can do a lot in a very few things.

347
00:17:51.024 --> 00:17:53.906
A single property access can end up
being hundreds of functions of calls.

348
00:17:53.906 --> 00:17:55.385
You don't even know
what's going to happen.

349
00:17:55.385 --> 00:17:56.948
So this is kind of the same approach.

350
00:17:56.948 --> 00:18:01.766
It's just like, keeping it simple, making
it work, I'm very happy with it, at leas,

351
00:18:01.766 --> 00:18:02.490
there we go.

