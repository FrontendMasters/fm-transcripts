WEBVTT

1
00:00:00.000 --> 00:00:01.756
&gt;&gt; ThePrimeagen: So why neovim?

2
00:00:01.756 --> 00:00:04.529
Why not just using an IDE in Vim motions?

3
00:00:04.529 --> 00:00:06.448
I'm sure a lot of people ask
me that same question, and

4
00:00:06.448 --> 00:00:07.886
you probably ask me that same question.

5
00:00:07.886 --> 00:00:11.886
Really for me, it's just that I
want something I can edit and

6
00:00:11.886 --> 00:00:13.934
make it exactly the way I want.

7
00:00:13.934 --> 00:00:15.411
And also, I don't like Microsoft.

8
00:00:15.411 --> 00:00:19.806
So I wouldn't use VS Code either way,
but I'd use something like zed.

9
00:00:19.806 --> 00:00:23.946
The thing is, is I just want to be able to
completely make it the exact way I want

10
00:00:23.946 --> 00:00:26.972
it, so it really comes down to Emacs or
Vim, question.

11
00:00:26.972 --> 00:00:30.289
&gt;&gt; Speaker 2: I just wanna shout out
that if you wanna learn Vim deeper,

12
00:00:30.289 --> 00:00:32.581
you have a course on Frontend Masters.

13
00:00:32.581 --> 00:00:34.431
&gt;&gt; ThePrimeagen: I do have a course on
Frontend Masters on Vim, this is true.

14
00:00:34.431 --> 00:00:35.078
&gt;&gt; Speaker 2: They're already here.

15
00:00:35.078 --> 00:00:38.660
They can jump to that course via
the annotation that will be inserted.

16
00:00:38.660 --> 00:00:40.465
&gt;&gt; ThePrimeagen: That was
my first course ever.

17
00:00:40.465 --> 00:00:43.284
Somehow convinced,
this is back when you're really Frontend,

18
00:00:43.284 --> 00:00:44.367
you're only Frontend.

19
00:00:44.367 --> 00:00:46.720
I was like your first
non-frontend course practically.

20
00:00:46.720 --> 00:00:49.536
One of like three first
non-frontend courses.

21
00:00:49.536 --> 00:00:51.571
&gt;&gt; Speaker 2: Not too many,
but we had some.

22
00:00:51.571 --> 00:00:52.661
&gt;&gt; ThePrimeagen: We had some.

23
00:00:52.661 --> 00:00:53.674
Now you got lots.

24
00:00:53.674 --> 00:00:56.848
So there you go, that's really why I do,
I just want that,

25
00:00:56.848 --> 00:00:58.763
I kind of like the Lean experience.

26
00:00:58.763 --> 00:01:03.543
I also like the ability to have every
single directory I can navigate to and

27
00:01:03.543 --> 00:01:06.487
then have that editor
open at that location.

28
00:01:06.487 --> 00:01:08.150
So they're each their
own kind of experience,

29
00:01:08.150 --> 00:01:10.780
I like to stay in the terminal,
I don't really want to leave the terminal.

30
00:01:10.780 --> 00:01:14.575
I'm not really a non-terminal guy,
I don't like GUIs,

31
00:01:14.575 --> 00:01:17.990
I don't wanna click buttons,
I wanna mash things.

32
00:01:17.990 --> 00:01:22.424
And long after the AI takes over, someday
in 1000 years, whatever that time comes

33
00:01:22.424 --> 00:01:26.250
with, they actually produce a smart
LLM that can actually do something and

34
00:01:26.250 --> 00:01:27.851
no longer we need the program.

35
00:01:27.851 --> 00:01:31.495
I'll probably still just wanna match keys,
use Vim, and build stuff,

36
00:01:31.495 --> 00:01:33.534
cuz I just enjoy the process of doing it.

37
00:01:33.534 --> 00:01:34.202
And so, why do I use it?

38
00:01:34.202 --> 00:01:37.734
I don't know, I'm a Luddite,
if that's the proper answer,

39
00:01:37.734 --> 00:01:40.425
that's who I am, yes
&gt;&gt; Speaker 3: You think the Vim motions

40
00:01:40.425 --> 00:01:44.656
and the keyboard-based development
is more powerful than compared to

41
00:01:44.656 --> 00:01:47.702
the environment side of
VIM in that relationship.

42
00:01:47.702 --> 00:01:49.692
&gt;&gt; ThePrimeagen: Yeah,
I think that's the better part.

43
00:01:49.692 --> 00:01:50.649
&gt;&gt; Speaker 3: Yeah.

44
00:01:50.649 --> 00:01:53.362
&gt;&gt; ThePrimeagen: Because that one's
universal in the sense that if you learn

45
00:01:53.362 --> 00:01:56.996
Vim motions and then you have to go do
program Java, I'm just gonna use IntelliJ

46
00:01:56.996 --> 00:02:00.322
if I'm going to have to go program Java,
that's the It's the reality.

47
00:02:00.322 --> 00:02:03.400
They have a great way in motions,
it's like, I'm already at home,

48
00:02:03.400 --> 00:02:05.910
I just need to learn some
IntelliJ ways of doing things.

49
00:02:05.910 --> 00:02:10.070
And it's just like, okay, every editor
I go to already has these pre built-in

50
00:02:10.070 --> 00:02:13.236
motions, and they're mostly all the same,
so therefore,

51
00:02:13.236 --> 00:02:15.800
I can really kind of just
move fast in any editor.

52
00:02:15.800 --> 00:02:18.326
And so, I think that,
that is definitely the plus.

53
00:02:18.326 --> 00:02:19.428
But for me, it's more than that.

54
00:02:19.428 --> 00:02:22.361
And that's the fact that I can
do anything I want within it.

55
00:02:22.361 --> 00:02:23.683
And so, kind of to show a little bit,

56
00:02:23.683 --> 00:02:26.353
I was gonna show a little bit of kind
of playing around with the Neovim API.

57
00:02:26.353 --> 00:02:28.767
So if you ever get so
curious you wish to open it up,

58
00:02:28.767 --> 00:02:30.274
I could show you how to do that.

59
00:02:30.274 --> 00:02:31.505
It's pretty, pretty dang simple.

60
00:02:31.505 --> 00:02:35.390
Let me just undo this, so I can have
that as fun input at some other time.

61
00:02:35.390 --> 00:02:39.217
So what I'm gonna do is I'm just
going to create a test.lua.

62
00:02:39.217 --> 00:02:41.444
It's in Lua, so
if you have never used Lua,

63
00:02:41.444 --> 00:02:45.252
Lua is actually a pretty fun programming
language, it has some oddities.

64
00:02:45.252 --> 00:02:48.476
It use one-based indexing,
which some people would argue is

65
00:02:48.476 --> 00:02:52.886
the superior indexing, I would argue
they're wrong, but that's just me, okay?

66
00:02:52.886 --> 00:02:56.250
So the nice part about Neovim is,
you can do anything,

67
00:02:56.250 --> 00:02:59.995
you can start programming,
you can go print, hello world.

68
00:02:59.995 --> 00:03:02.210
And I've just created a function,
let's call it hello.

69
00:03:02.210 --> 00:03:04.445
And I can just simply
execute hello right here.

70
00:03:04.445 --> 00:03:06.560
And of course, there we go.

71
00:03:06.560 --> 00:03:10.940
Now, to execute this in Neovim, I can just
go :SO, that will source this file and

72
00:03:10.940 --> 00:03:12.600
it will run it, so there we go.

73
00:03:12.600 --> 00:03:14.059
Hello world, right there in the bottom.

74
00:03:14.059 --> 00:03:15.698
You can see that in the bottom left.

75
00:03:15.698 --> 00:03:19.010
And so, it just runs, which means
that you can just test scripts,

76
00:03:19.010 --> 00:03:20.261
you can just run things.

77
00:03:20.261 --> 00:03:24.379
Which means, if you're familiar with the
help API, there's ways to go around it,

78
00:03:24.379 --> 00:03:26.884
you can say h, and
then you can go vim_api.nvim.

79
00:03:26.884 --> 00:03:28.538
You can try r, sorry, not that way.

80
00:03:28.538 --> 00:03:29.602
You go nvim_ and

81
00:03:29.602 --> 00:03:33.939
this will show you every single of
the APIs that you have available.

82
00:03:33.939 --> 00:03:35.704
There's a bunch of APIs that you can do.

83
00:03:35.704 --> 00:03:39.951
And so, I have it on fuzzy find,
it's just easier that way, so

84
00:03:39.951 --> 00:03:42.208
I can go like nvim_openwindow.

85
00:03:42.208 --> 00:03:46.263
So open window takes in a buffer, if it
should enter that and the configuration.

86
00:03:46.263 --> 00:03:49.755
So just to make it easy, I'm gonna go
right down here to the example, and

87
00:03:49.755 --> 00:03:52.388
I'm just going to yank that one,
put it down here, and

88
00:03:52.388 --> 00:03:55.634
I'm just gonna paste that in here,
and I'm gonna go, shout out.

89
00:03:55.634 --> 00:03:57.930
I now just created a little
window right here, so

90
00:03:57.930 --> 00:04:00.347
we have our own window,
which is this window also.

91
00:04:00.347 --> 00:04:04.308
But I didn't enter it, so I can go true,
so I can just enter the window,

92
00:04:04.308 --> 00:04:06.698
shout it out, and now I'm in that window.

93
00:04:06.698 --> 00:04:11.391
So you can see it right there,
the exact same buffer,

94
00:04:11.391 --> 00:04:17.661
I just created the same buffer in
a new window, size 3 by 12, right?

95
00:04:17.661 --> 00:04:21.226
And so, you can build whatever you want,
and it's relatively simple,

96
00:04:21.226 --> 00:04:24.340
that was not hard to create,
that was really simple to create.

97
00:04:24.340 --> 00:04:26.836
The entire API is like that where
you can create a whole bunch,

98
00:04:26.836 --> 00:04:29.624
like creating harpoon,
it's just actually wasn't all that hard,

99
00:04:29.624 --> 00:04:31.613
cuz most of it's just
that they're available.

100
00:04:31.613 --> 00:04:39.422
The hardest parts was saving per location
to a place that won't get deleted.

101
00:04:39.422 --> 00:04:42.078
That's in your local directory and
some sort of data config, right?

102
00:04:42.078 --> 00:04:45.455
Just figuring out those things, like, how
to, okay, you can't just have your project

103
00:04:45.455 --> 00:04:47.542
path, because file names
are bound by a certain size.

104
00:04:47.542 --> 00:04:50.868
You have to pass it through a SHA to
be a certain way so it doesn't collide,

105
00:04:50.868 --> 00:04:53.282
all those dumb things,
those are the hardest parts,

106
00:04:53.282 --> 00:04:55.556
using this to actually
build it was the easy part.

107
00:04:55.556 --> 00:04:59.029
And so, it's pretty fun to be able to
just hack and build whatever you want.

108
00:04:59.029 --> 00:05:02.834
If you have an idea for a plugin,
you can just go do it like,

109
00:05:02.834 --> 00:05:06.904
nothing says that I have to use
this version of Git, but I can.

110
00:05:06.904 --> 00:05:08.466
You could make all this, all right?

111
00:05:08.466 --> 00:05:10.353
This just uses Git and
it starts doing that.

112
00:05:10.353 --> 00:05:12.133
I've just staged all these changes.

113
00:05:12.133 --> 00:05:15.063
I can start committing all
those changes and do all that,

114
00:05:15.063 --> 00:05:17.090
they're just simple things, right?

115
00:05:17.090 --> 00:05:19.871
I did abort the commit, cuz it's an empty
commit, you have to have a commit message.

116
00:05:19.871 --> 00:05:23.361
You can't just do an empty one, but
you get the idea that all these

117
00:05:23.361 --> 00:05:27.319
are just created, and they're not
that hard to do, some take more time.

118
00:05:27.319 --> 00:05:29.756
This Git probably falls under
to that real software line,

119
00:05:29.756 --> 00:05:32.301
you know the one I'm talking
about that's not fun anymore?

120
00:05:32.301 --> 00:05:34.675
And so, that one goes there, but
Vim just allows you to do it.

121
00:05:34.675 --> 00:05:38.298
So this is the real reason why I
continue to use it, is cuz of Lua,

122
00:05:38.298 --> 00:05:42.596
it's cuz I can edit my editor in a simple
language that scales fairly well for

123
00:05:42.596 --> 00:05:44.636
small to medium-sized projects.

124
00:05:44.636 --> 00:05:46.909
It's probably not a great language for
large projects,

125
00:05:46.909 --> 00:05:48.953
but it's good enough that
I can do anything I want.

126
00:05:48.953 --> 00:05:51.734
And so, there's kind of my case for
why it's fun to do stuff,

127
00:05:51.734 --> 00:05:54.046
I had this one where I had
this little example code.

128
00:05:54.046 --> 00:05:57.460
This will just open up a little window
that will be relative to the editor,

129
00:05:57.460 --> 00:06:00.837
that'll be kind of big, that will read
in any file and then print it out.

130
00:06:00.837 --> 00:06:04.996
So I could just say, instantly have your
package.json pop up as something you can

131
00:06:04.996 --> 00:06:07.360
look at and edit, and
then close it back down.

132
00:06:07.360 --> 00:06:10.183
Right, you can just do fun things like
that, not that that's useful, right?

133
00:06:10.183 --> 00:06:13.863
You can just fuzzy find package.json,
but theoretically,

134
00:06:13.863 --> 00:06:17.269
you could build anything you
want that you think is cool.

135
00:06:17.269 --> 00:06:20.071
And so, one time I had an Arduino and
so I was writing a program to it, right?

136
00:06:20.071 --> 00:06:22.827
But it takes a little bit to start,
and then it start, and

137
00:06:22.827 --> 00:06:25.765
then it start doing something,
and then it pipe out output.

138
00:06:25.765 --> 00:06:29.724
So, and then I had, all my debug output,
so I just wrote something

139
00:06:29.724 --> 00:06:34.631
that did system tail file, this file that
is the file descriptor for the Arduino.

140
00:06:34.631 --> 00:06:37.075
And then I just had that as
a floating window in my Vim, so

141
00:06:37.075 --> 00:06:38.821
I'd just be programming, send it.

142
00:06:38.821 --> 00:06:39.786
It's okay, I can see it loading.

143
00:06:39.786 --> 00:06:40.751
Okay, got the files.

144
00:06:40.751 --> 00:06:41.905
Okay, it's starting to print these things.

145
00:06:41.905 --> 00:06:45.805
Okay, I like that, I see what I did wrong,
and then I could just go back and forth,

146
00:06:45.805 --> 00:06:48.520
cuz I could just build that
window in just a couple lines,

147
00:06:48.520 --> 00:06:51.316
follow something in a couple lines,
and just run it once.

148
00:06:51.316 --> 00:06:55.691
And so, it's a very hackable experience,
which I think makes it super fun.

149
00:06:55.691 --> 00:06:56.791
So that's why I like it.

150
00:06:56.791 --> 00:06:58.909
There's a lot more, hopefully enjoy that.

151
00:06:58.909 --> 00:07:04.254
And a quick note about AI, you can pretty
much just ask any of the AI's cloud,

152
00:07:04.254 --> 00:07:09.366
to make you a plugin and it would just
do it pretty much one shot every time.

153
00:07:09.366 --> 00:07:14.176
It's just because the APIs are so well
documented and they're always so hungry

154
00:07:14.176 --> 00:07:19.940
for human-generated data that they've just
gulped up the Neovim API like 9,000 times.

155
00:07:19.940 --> 00:07:22.977
So they have a pretty good,
strong correlation with it, so

156
00:07:22.977 --> 00:07:24.815
it mostly will produce good stuff.

157
00:07:24.815 --> 00:07:27.987
It may use slightly older APIs
as opposed to newer ones, or

158
00:07:27.987 --> 00:07:30.122
do things in a little bit wonky way, but

159
00:07:30.122 --> 00:07:34.688
it can pretty much make anything every
time, and so, it's pretty nice to do that.

160
00:07:34.688 --> 00:07:37.467
Also, I made a little game,
it's called VanBeGood.

161
00:07:37.467 --> 00:07:41.190
So if you go, VinBeGood,
someone just added this.

162
00:07:41.190 --> 00:07:44.700
If you wanna get good at basic motions,
you can do something like a relative,

163
00:07:44.700 --> 00:07:48.222
you delete whatever line you wanna play,
and then it's gonna show you this.

164
00:07:48.222 --> 00:07:52.122
And so, you can go like five up,
delete me, seven up, delete me, three up,

165
00:07:52.122 --> 00:07:56.400
delete me, one up, delete me, 17 down,
delete me, right, three up this.

166
00:07:56.400 --> 00:08:00.500
And then you can just go through and
it'll just do, what, 12 of them.

167
00:08:00.500 --> 00:08:05.793
There you go, and it shows you I got
an average of 13, all that, yay, right?

168
00:08:05.793 --> 00:08:08.516
That was pretty good, and
it has other games in it.

169
00:08:08.516 --> 00:08:13.231
Someone just added this just last week,
you can play a little game of snake,

170
00:08:13.231 --> 00:08:17.146
which is actually, it's really,
really hard to play snake.

171
00:08:17.146 --> 00:08:20.577
They didn't normalize the speed going
downwards versus going sideways.

172
00:08:20.577 --> 00:08:23.852
Fundamental game design flaw here, but
you can see that it goes really slow, and

173
00:08:23.852 --> 00:08:25.358
then speeds up really fast, right?

174
00:08:25.358 --> 00:08:26.587
And so, you can kind of see this game.

175
00:08:26.587 --> 00:08:30.371
So you can like learn how to do H, J,
K, and L, all that kind of stuff, so

176
00:08:30.371 --> 00:08:31.878
it's actually pretty fun.

177
00:08:31.878 --> 00:08:35.141
There you go I killed myself, all right.

178
00:08:35.141 --> 00:08:40.888
Nice, there you go, that is the funnest
that's available, it helps you learn.

179
00:08:40.888 --> 00:08:45.157
Actually, the reason why I got good at
relative jumps, the reason why I created

180
00:08:45.157 --> 00:08:49.062
this game is cuz I could never get into
the habit of using relative jumps.

181
00:08:49.062 --> 00:08:51.359
So I was like, there's only one
way I can get into the habit.

182
00:08:51.359 --> 00:08:54.427
Is I have to build something that
optimizes a reward center for

183
00:08:54.427 --> 00:08:55.551
me to be able to use it.

184
00:08:55.551 --> 00:08:59.424
So I built the video game just so
I can hop to it and get so used to it,

185
00:08:59.424 --> 00:09:03.951
that now I use relative line jumps as
just like my daily mode because of that.

186
00:09:03.951 --> 00:09:07.045
So then,
that's just stop optimizing things.

187
00:09:07.045 --> 00:09:08.892
This last part,
this may get a little bit offensive.

188
00:09:08.892 --> 00:09:10.937
This is about terminals,
I don't really care what terminal you use.

189
00:09:10.937 --> 00:09:14.308
I know a lot of people feel that this
is the section I said this earlier.

190
00:09:14.308 --> 00:09:17.840
A lot of people, I told you I was
gonna have to say this again, but

191
00:09:17.840 --> 00:09:21.440
a lot of people feel very near and
dear to the technology they use,

192
00:09:21.440 --> 00:09:24.339
they're absolutely married to Kitty or
whatever.

193
00:09:24.339 --> 00:09:28.900
I'm not, I use Ghosty because
I like Mitchell, right?

194
00:09:28.900 --> 00:09:30.578
That's as simple as it gets.

195
00:09:30.578 --> 00:09:31.840
And so why not Alacrity?

196
00:09:31.840 --> 00:09:33.318
I was using Alacrity.

197
00:09:33.318 --> 00:09:34.394
Why not Kitty?

198
00:09:34.394 --> 00:09:37.792
I don't use Kitty because I don't, I find
the person who wrote it to be unpleasant.

199
00:09:37.792 --> 00:09:40.655
He says very mean things on the Internet
to people, so I don't like him.

200
00:09:40.655 --> 00:09:44.232
I don't wanna use this stuff,
Ghosty, he's very, very nice,

201
00:09:44.232 --> 00:09:47.290
I used to I used Xterm-256color
up until this year,

202
00:09:47.290 --> 00:09:51.217
I used a terminal from the 80s for
almost my entire programming life.

203
00:09:51.217 --> 00:09:55.057
Like that's just that, and it's just
the only reason why I switched is

204
00:09:55.057 --> 00:09:58.065
because I couldn't play ASCII
doom in my terminal, and

205
00:09:58.065 --> 00:10:02.040
anything larger than a small ask amount,
and I need it to be pretty large.

206
00:10:02.040 --> 00:10:04.253
And so,
that's the only reason why I switched.

207
00:10:04.253 --> 00:10:08.490
Unless if you're using Westerm, since you
can build the entire TMUX experience or

208
00:10:08.490 --> 00:10:11.348
ZelleJ experience,
they're inconsequential to me.

209
00:10:11.348 --> 00:10:14.144
Other than that they exist, they're fast,
and they work, that's all I want.

210
00:10:14.144 --> 00:10:16.549
Give me fast, it exists, and it works.

