WEBVTT

1
00:00:00.000 --> 00:00:02.163
&gt;&gt; Speaker 1: We're gonna get started
with, first, the environment.

2
00:00:02.163 --> 00:00:05.373
I think the environment is everything
that surrounds the development process.

3
00:00:05.373 --> 00:00:10.108
It's not the actual dev process that we do
day to day, it's everything around that.

4
00:00:10.108 --> 00:00:13.028
It's how you install your favorite
libraries, how you interact with your

5
00:00:13.028 --> 00:00:16.037
operating system, get it the way you
want it to be, how you arrange windows,

6
00:00:16.037 --> 00:00:19.265
how you arrange screens, or desktops,
or whatever you wanna call these things.

7
00:00:19.265 --> 00:00:20.957
I'm not really sure what people call them.

8
00:00:20.957 --> 00:00:22.069
I hear them called desktops.

9
00:00:22.069 --> 00:00:23.828
I think that's probably good enough for
me,

10
00:00:23.828 --> 00:00:25.783
even though I don't
technically have a desktop.

11
00:00:25.783 --> 00:00:28.856
So I think that that works for
the most part.

12
00:00:28.856 --> 00:00:33.478
All right, I think this is the most
important kind of starting place, which is

13
00:00:33.478 --> 00:00:37.961
a question you have to ask yourself,
if I were to give you a brand new computer

14
00:00:37.961 --> 00:00:42.443
today, how long does it take for you to
get up and running to be productive and

15
00:00:42.443 --> 00:00:46.995
then furthermore, how many more days is
spent trying to realize that you have

16
00:00:46.995 --> 00:00:51.729
certain things on one computer and now
you have to reconcile that entire thing.

17
00:00:51.729 --> 00:00:54.179
And then over the course
of the next three days,

18
00:00:54.179 --> 00:00:58.039
you install a whole list of just like
small little libraries that are really

19
00:00:58.039 --> 00:01:02.566
useful or, I forgot to update my bash,
scripts to do this, or my zish, whatever,

20
00:01:02.566 --> 00:01:06.699
my zish profile has this extra one little
remap in it that I forgot to bring over.

21
00:01:06.699 --> 00:01:07.850
And I really like it.

22
00:01:07.850 --> 00:01:10.085
And so all those things,
they just kinda add up.

23
00:01:10.085 --> 00:01:12.076
And I don't ever want to
have to think about that.

24
00:01:12.076 --> 00:01:14.460
I don't wanna have to think about it ever.

25
00:01:14.460 --> 00:01:17.616
And I want something that's super
simple that I can understand.

26
00:01:17.616 --> 00:01:19.552
I like that experience.

27
00:01:19.552 --> 00:01:21.904
The first thing I used to use,
this is kind of like I used to use.

28
00:01:21.904 --> 00:01:24.664
I showed again,
just as where I used to be,

29
00:01:24.664 --> 00:01:29.592
cuz in the previous course on this,
this is what I used, which was Ansible.

30
00:01:29.592 --> 00:01:34.045
For a long time, I used Ansible to manage
my dotfiles, to bring everything down.

31
00:01:34.045 --> 00:01:35.191
I think it's actually pretty good.

32
00:01:35.191 --> 00:01:37.654
There's a lot of great
things about Ansible,

33
00:01:37.654 --> 00:01:41.013
and there's also things that
aren't as great about Ansible.

34
00:01:41.013 --> 00:01:45.289
And so, here's some pros and
cons that I kind of threw up here.

35
00:01:45.289 --> 00:01:49.627
If you've ever used Ansible,
there's a lot of documentation.

36
00:01:49.627 --> 00:01:52.489
It's can be used more than just for
managing dot files.

37
00:01:52.489 --> 00:01:55.047
Ansible vault actually is really cool.

38
00:01:55.047 --> 00:01:58.345
Ansible vault, if you don't know what
it is, it allows you to effectively,

39
00:01:58.345 --> 00:02:01.414
it's a two way encryption, so
you can encrypt and decrypt your files.

40
00:02:01.414 --> 00:02:05.614
So that way, if you have, say, a bunch of
codes you want on for like your discord

41
00:02:05.614 --> 00:02:09.755
recovery accounts, or all your recovery
codes, you could just put on a file,

42
00:02:09.755 --> 00:02:13.767
encode it, and then push, put it on
GitHub, no one can decode it, unless,

43
00:02:13.767 --> 00:02:17.511
if they have your super cool passwords,
it'll make a dumb password.

44
00:02:17.511 --> 00:02:21.715
I know dolphins are awesome, but
dolphins is not a great password.

45
00:02:21.715 --> 00:02:24.330
There's a bunch of other
cool stuff you can do.

46
00:02:24.330 --> 00:02:26.619
It's also just terribly slow.

47
00:02:26.619 --> 00:02:30.088
It just, because everything is assuming
this kind of remote relationship.

48
00:02:30.088 --> 00:02:33.203
It's designed to work with servers and,

49
00:02:33.203 --> 00:02:37.920
if you really think about it,
your computer might be a server.

50
00:02:37.920 --> 00:02:41.574
So it can be just terribly slow and
it can also be just really hard for

51
00:02:41.574 --> 00:02:45.249
certain tasks, I found that just
installing plugins for neovim.

52
00:02:45.249 --> 00:02:47.480
It just took quite a few
tries to get the thing right,

53
00:02:47.480 --> 00:02:49.217
and I just got tired of trying to do that.

54
00:02:49.217 --> 00:02:51.359
And caching was kind of annoying.

55
00:02:51.359 --> 00:02:56.001
Tags for being able to run certain tasks,
though a really great idea.

56
00:02:56.001 --> 00:02:58.389
Once you have 100 tasks,
it's a pain in the ass,

57
00:02:58.389 --> 00:03:01.013
because then you don't have
like that all task because.

58
00:03:01.013 --> 00:03:03.797
Becomes really difficult and then you
just, you find yourself copying and

59
00:03:03.797 --> 00:03:06.271
pasting and trying to figure out
why some things aren't running or

60
00:03:06.271 --> 00:03:09.519
you just never even realize they don't run
and then you're very upset with yourself.

61
00:03:09.519 --> 00:03:11.183
Also, YAML sucks.

62
00:03:11.183 --> 00:03:13.996
I believe I can wholeheartedly say this,
me and

63
00:03:13.996 --> 00:03:16.329
all Norwegians agree that YAML sucks.

64
00:03:16.329 --> 00:03:21.814
And so if you don't know the joke,
no is also false in YAML.

65
00:03:21.814 --> 00:03:26.457
And so Norway is often abbreviated XENO
and then it gets, turns into false.

66
00:03:26.457 --> 00:03:27.568
Alright, basic Ansible.

67
00:03:27.568 --> 00:03:30.490
So we're gonna create a basic script so
I can show you what it's about.

68
00:03:30.490 --> 00:03:33.319
So that way you can at least try it out,
see how it feels.

69
00:03:33.319 --> 00:03:37.571
And if you do like it and you want to use
this, then you can at least use this for

70
00:03:37.571 --> 00:03:38.251
yourself.

71
00:03:38.251 --> 00:03:41.545
We're gonna just simply bring down
Neo Vim and we are gonna Build it, and

72
00:03:41.545 --> 00:03:43.114
we're going to put it in our path.

73
00:03:43.114 --> 00:03:47.370
So if you're on Windows this part
might be a lot more difficult, and so

74
00:03:47.370 --> 00:03:50.990
perhaps you can just as,
just like a watching experience.

75
00:03:50.990 --> 00:03:53.067
You can just watch this.

76
00:03:53.067 --> 00:03:58.629
But if you're on Mac or some sort of
Linux flavor, this should just work out.

77
00:03:58.629 --> 00:04:02.299
Obviously there'll be some differences
with Mac, and because I'm on Linux,

78
00:04:02.299 --> 00:04:05.476
there's gonna be some differences
I'm gonna use sudo apt install,

79
00:04:05.476 --> 00:04:08.621
you may have to use brew install,
or whatever Mac uses, Mac ports.

80
00:04:08.621 --> 00:04:09.512
So what is Ansible?

81
00:04:09.512 --> 00:04:14.840
From there GitHub, it says Ansible is
a radically simple IT automation system.

82
00:04:14.840 --> 00:04:17.918
It handles configuration management,
application deployment,

83
00:04:17.918 --> 00:04:21.051
cloud provisioning, ad hoc task execution,
Network Automation.

84
00:04:21.051 --> 00:04:23.516
And multi-node orchestration.

85
00:04:23.516 --> 00:04:27.274
Ansible makes complex changes like
zero downtime rolling updates

86
00:04:27.274 --> 00:04:28.824
with load balancers easy.

87
00:04:28.824 --> 00:04:30.829
More information on the Ansible website.

88
00:04:30.829 --> 00:04:33.198
So you're probably thinking,
aren't we talking about dot files?

89
00:04:33.198 --> 00:04:34.153
And yes, we are.

90
00:04:34.153 --> 00:04:36.485
As I said earlier,
if you really squint your eyes,

91
00:04:36.485 --> 00:04:40.085
really look at your computer as squint
as possible, it's actually a server.

92
00:04:40.085 --> 00:04:40.797
That's all it is.

93
00:04:40.797 --> 00:04:43.630
It's a server too and
things work out that way.

94
00:04:43.630 --> 00:04:47.408
All right, so by the way,
I know I put this in here last night,

95
00:04:47.408 --> 00:04:51.575
so I already said this, but
do feel free just to watch this section.

96
00:04:51.575 --> 00:04:54.431
It's just more of a learning
experience to see something else.

97
00:04:54.431 --> 00:04:59.009
This is not my personal recommended way,
though I do think it's very interesting,

98
00:04:59.009 --> 00:05:02.568
and it could be really useful if
you have to set up many computers.

99
00:05:02.568 --> 00:05:06.422
If you are someone like I know there's
entire places, if you have a company in

100
00:05:06.422 --> 00:05:10.399
which you want everyone to have very
similar experiences on multiple different

101
00:05:10.399 --> 00:05:14.430
type of operating systems, this could be
very interesting to be able to be like,

102
00:05:14.430 --> 00:05:16.958
hey, when you get here,
just do ansible-pull.

103
00:05:16.958 --> 00:05:18.036
It's gonna set up everything.

104
00:05:18.036 --> 00:05:22.521
Maybe it's a bit better than
just a A bunch of bash scripts.

105
00:05:22.521 --> 00:05:25.850
Because I can bash scripts
can be kind of unwieldy.

106
00:05:25.850 --> 00:05:28.015
Given the right circumstances,
people tend to hate them.

107
00:05:28.015 --> 00:05:30.971
So if you wanna follow along,
do a little pip install Ansible.

108
00:05:30.971 --> 00:05:35.135
Pip three, preferably if you're still
living that python two, seven dream life,

109
00:05:35.135 --> 00:05:37.316
I would say you need to
wake up to the future.

110
00:05:37.316 --> 00:05:41.736
Now, old man, it's everything's great,
now, python three is fantastic.

111
00:05:41.736 --> 00:05:44.636
All right, so at the heart of Ansible,
you're usually working with

112
00:05:44.636 --> 00:05:47.990
something called an inventory, and
inventory is usually like a list of nodes.

113
00:05:47.990 --> 00:05:49.534
We're not gonna be working with that.

114
00:05:49.534 --> 00:05:53.898
We are gonna be doing a local host,
and that's gonna be good enough.

115
00:05:53.898 --> 00:05:56.750
And so we're only gonna be concerned
more about playbooks in which,

116
00:05:56.750 --> 00:05:59.417
even in this we're not even gonna
be doing a lot with playbooks.

117
00:05:59.417 --> 00:06:00.207
Question.

118
00:06:00.207 --> 00:06:01.575
&gt;&gt; Speaker 2: Why not?

119
00:06:01.575 --> 00:06:05.338
Apt instead of PIP-3.

120
00:06:05.338 --> 00:06:06.953
&gt;&gt; Speaker 1: All right, I mean,

121
00:06:06.953 --> 00:06:12.948
at this is kinda like some people
prefer their cucumbers pickled, right?

122
00:06:12.948 --> 00:06:16.431
You can choose how you want to install it.

123
00:06:16.431 --> 00:06:17.930
There's no prescribed way.

124
00:06:17.930 --> 00:06:20.705
Anytime I can use that phrase,
it just makes me really happy.

125
00:06:20.705 --> 00:06:21.751
And this is one of those times.

126
00:06:21.751 --> 00:06:25.920
All right, a friend once said, this,
I don't actually know what this means, but

127
00:06:25.920 --> 00:06:27.124
it seems really funny.

128
00:06:27.124 --> 00:06:29.066
Ansible is the helicopter
that drops Godzilla.

129
00:06:29.066 --> 00:06:30.856
Godzilla being Kubernetes.

130
00:06:30.856 --> 00:06:33.917
So since, I just think it's funny to say,
I don't really know.

131
00:06:33.917 --> 00:06:34.936
I don't actually even understand this.

132
00:06:34.936 --> 00:06:36.427
It's just fantastic.

133
00:06:36.427 --> 00:06:38.709
All right, so let's just jump right in and
start doing this.

134
00:06:38.709 --> 00:06:40.443
So this would be your first playbook.

135
00:06:40.443 --> 00:06:42.011
It's very simple.

136
00:06:42.011 --> 00:06:46.780
So what we're gonna do is we are gonna
create a directory called MF Ansible or

137
00:06:46.780 --> 00:06:48.581
whatever you wanna call it.

138
00:06:48.581 --> 00:06:52.440
That stands for my first answerable,
not mother friendship Ansible.

139
00:06:52.440 --> 00:06:53.518
It's a little bit different there.

140
00:06:53.518 --> 00:06:54.802
So I'm gonna jump over here.

141
00:06:54.802 --> 00:06:56.100
I'm gonna do a little maktor.

142
00:06:56.100 --> 00:06:58.435
Let's actually, I probably I might have.

143
00:06:58.435 --> 00:06:59.554
Yeah, I already have that.

144
00:06:59.554 --> 00:07:03.651
Let's There we go.

145
00:07:03.651 --> 00:07:06.504
Good, all right, now, hey, fresh system.

146
00:07:06.504 --> 00:07:07.499
I've never done this before.

147
00:07:07.499 --> 00:07:09.472
Let's just try it together.

148
00:07:09.472 --> 00:07:10.589
This would be really fun.

149
00:07:10.589 --> 00:07:15.614
So I'm gonna create a new
directory called MF Ansible, and

150
00:07:15.614 --> 00:07:21.058
in here I'm gonna create a single
file called the neovim.yml.

151
00:07:21.058 --> 00:07:22.334
All right, fantastic.

152
00:07:22.334 --> 00:07:24.931
And with that,
I'm just gonna copy over this.

153
00:07:24.931 --> 00:07:27.796
This is kind of like
the heading to a playbook.

154
00:07:27.796 --> 00:07:30.035
It says, hey, here's the name of the task.

155
00:07:30.035 --> 00:07:32.871
This is where we're gonna be executing
it on, obviously, local host.

156
00:07:32.871 --> 00:07:34.420
And here's the list of tasks.

157
00:07:34.420 --> 00:07:36.306
For those that can't really read YAML.

158
00:07:36.306 --> 00:07:39.289
You don't have a lot of YAML experience,
I don't blame you.

159
00:07:39.289 --> 00:07:41.054
It kind of looks funny to me too.

160
00:07:41.054 --> 00:07:44.807
It's hard to remember when to use
dashes and where to use dashes and

161
00:07:44.807 --> 00:07:46.828
all that fun stuff, but here we go.

162
00:07:46.828 --> 00:07:48.407
We have something we can run now.

163
00:07:48.407 --> 00:07:53.133
So with this put in into a YAML file,
we should be able to jump back here and

164
00:07:53.133 --> 00:07:55.847
we can execute Ansible Playbook NeoVim.

165
00:07:55.847 --> 00:07:58.668
And so you should probably
see the following output.

166
00:07:58.668 --> 00:08:00.276
I'll just do this right here.

167
00:08:00.276 --> 00:08:02.888
Here, there's a bunch of warnings
about me needing to update some stuff.

168
00:08:02.888 --> 00:08:05.373
We're gonna ignore that,
because that's just who we are.

169
00:08:05.373 --> 00:08:05.961
And there we go.

170
00:08:05.961 --> 00:08:08.077
We just ran our first Ansible task.

171
00:08:08.077 --> 00:08:09.599
Doesn't it feel good?

172
00:08:09.599 --> 00:08:10.411
We did it.

173
00:08:10.411 --> 00:08:14.736
We officially did nothing, successfully,
and it took a little bit, but we did it.

174
00:08:14.736 --> 00:08:17.867
You'll may notice that how I said,
Ansible is a bit slow.

175
00:08:17.867 --> 00:08:19.857
That's a lot of time spent doing nothing.

176
00:08:19.857 --> 00:08:21.348
Can we agree to that?

177
00:08:21.348 --> 00:08:28.178
If I put a little time in front of there,
we'll see how long it actually takes.

178
00:08:28.178 --> 00:08:31.385
If you can see, it took 2.24 seconds user.

179
00:08:31.385 --> 00:08:32.338
That's a lot of CPU.

180
00:08:32.338 --> 00:08:35.172
We also use a lot of CPU to not do a lot.

181
00:08:35.172 --> 00:08:39.740
So a total of 3.813, like...

182
00:08:39.740 --> 00:08:40.587
Combined second.

183
00:08:40.587 --> 00:08:41.727
So anyways, there you go.

