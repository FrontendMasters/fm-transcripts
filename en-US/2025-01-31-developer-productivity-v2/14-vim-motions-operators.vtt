WEBVTT

1
00:00:00.000 --> 00:00:00.925
&gt;&gt; ThePrimeagen: Okay, so let's go.

2
00:00:00.925 --> 00:00:03.477
I'm just gonna show you
a couple cool things about Vim,

3
00:00:03.477 --> 00:00:07.027
things that are a little bit different
that maybe you just don't know about.

4
00:00:07.027 --> 00:00:10.824
First off, motions are pretty darm cool.

5
00:00:10.824 --> 00:00:13.568
It just kind of give you quick just
breakdown of all the fun stuff.

6
00:00:13.568 --> 00:00:17.892
So I'm just gonna put in a bunch
of text around here, right?

7
00:00:17.892 --> 00:00:21.369
There we go, fantastic and
do some of that, and then I'm gonna go,

8
00:00:21.369 --> 00:00:24.489
lspStop, because you probably
don't want to see all that.

9
00:00:24.489 --> 00:00:26.802
Okay, so we have a bunch of we
have a bunch of text right here.

10
00:00:26.802 --> 00:00:31.659
So obviously, j, if you haven't seen h and
l go back forth.

11
00:00:31.659 --> 00:00:34.872
l goes one direction, h goes the other
one j, goes down, k goes up.

12
00:00:34.872 --> 00:00:38.884
You've seen those, w jumps by word, right?

13
00:00:38.884 --> 00:00:39.584
So it's pretty easy.

14
00:00:39.584 --> 00:00:45.377
So if you had a bunch of spaces in here,
w would jump by word, b goes backwards.

15
00:00:45.377 --> 00:00:48.578
But those are all basic,
no movements of them.

16
00:00:48.578 --> 00:00:50.596
F will jump to the first
occurrence of that character.

17
00:00:50.596 --> 00:00:53.897
So f opens parenthesis will jump to it.

18
00:00:53.897 --> 00:00:57.038
Then I can do, there's no more of those.

19
00:00:57.038 --> 00:00:58.691
Let's go F open bracket.

20
00:00:58.691 --> 00:01:00.242
Then I can do something semicolon, and

21
00:01:00.242 --> 00:01:02.545
we'll jump to the next occurrence
common will jump back.

22
00:01:02.545 --> 00:01:08.110
So you can kind of jump through
the list on the horizontal side,

23
00:01:08.110 --> 00:01:10.530
F or T will jump backwards.

24
00:01:10.530 --> 00:01:13.233
T jumps up to, but not including.

25
00:01:13.233 --> 00:01:16.377
So this is some cool things, but that's
not what makes vim pretty cool, right?

26
00:01:16.377 --> 00:01:18.728
That's some basic motions, right?

27
00:01:18.728 --> 00:01:20.207
What makes it really good is that.

28
00:01:20.207 --> 00:01:22.855
You combine motions with operators.

29
00:01:22.855 --> 00:01:25.954
So d is an operator d
means I'm gonna delete,

30
00:01:25.954 --> 00:01:30.947
d down in the very bottom right here
means I'm in operator pending mode.

31
00:01:30.947 --> 00:01:33.057
It's now operator delete
now I can do something.

32
00:01:33.057 --> 00:01:37.957
So I can go f, opening, what's it called,
opening parentheses, and

33
00:01:37.957 --> 00:01:43.205
it's gonna delete from my key up to and
including the opening parentheses.

34
00:01:43.205 --> 00:01:47.126
So you can start seeing, hopefully,
that this has a lot of power to it.

35
00:01:47.126 --> 00:01:48.470
You can start really moving around.

36
00:01:48.470 --> 00:01:48.971
You can combine them.

37
00:01:48.971 --> 00:01:54.303
So I can go d, j, so
I deleted my current line plus one below.

38
00:01:54.303 --> 00:01:56.260
I can go 3j and jump three down.

39
00:01:56.260 --> 00:01:59.027
That's why, if you look over here,
my numbering is so weird.

40
00:01:59.027 --> 00:02:00.799
I have the number of the line that I'm on.

41
00:02:00.799 --> 00:02:02.368
And plus relative line numbers either way.

42
00:02:02.368 --> 00:02:05.802
So if I wanna go down to this one
right way down here, I'd go 8j and

43
00:02:05.802 --> 00:02:06.743
jump right to it.

44
00:02:06.743 --> 00:02:10.484
If I wanna delete from here
all the way up to here,

45
00:02:10.484 --> 00:02:13.965
I'd go d11k delete 11 lines up, right?

46
00:02:13.965 --> 00:02:16.545
You start getting kind of these
ideas of combining things.

47
00:02:16.545 --> 00:02:19.173
c is delete except for
it goes into insert mode.

48
00:02:19.173 --> 00:02:21.576
So ct opening parenthesis.

49
00:02:21.576 --> 00:02:25.314
I'm now deleted all the way up to it,
but I'm in insert mode, so

50
00:02:25.314 --> 00:02:26.503
now I can just type.

51
00:02:26.503 --> 00:02:28.527
So okay,
that's where those are some fun things but

52
00:02:28.527 --> 00:02:30.055
then there's even better operators.

53
00:02:30.055 --> 00:02:32.580
Which makes it more fun is
that you got AP and IP.

54
00:02:32.580 --> 00:02:37.600
So if I go v for visual mode,
which highlights, and then I go around

55
00:02:37.600 --> 00:02:42.638
paragraph, it will highlight
the section around the paragraph.

56
00:02:42.638 --> 00:02:43.709
That's pretty nice.

57
00:02:43.709 --> 00:02:45.350
So that means I can also dap.

58
00:02:45.350 --> 00:02:46.136
You can dap on the haters.

59
00:02:46.136 --> 00:02:48.060
I can delete around
the paragraph really easily.

60
00:02:48.060 --> 00:02:52.153
So a paragraph's any,
no white space continuous code.

61
00:02:52.153 --> 00:02:54.065
So dap will delete that.

62
00:02:54.065 --> 00:02:57.603
dip will delete it, but
not the new lines below it.

63
00:02:57.603 --> 00:02:59.948
And so there's a lot of fun
things you can do with that.

64
00:02:59.948 --> 00:03:01.228
You can also to do all the other things.

65
00:03:01.228 --> 00:03:05.574
I can yip, I can yap it just a standard
Twitter user, I can just yap it and

66
00:03:05.574 --> 00:03:07.912
that will put it onto my paste buffer.

67
00:03:07.912 --> 00:03:10.981
And so now I can paste it all I want.

68
00:03:10.981 --> 00:03:13.285
The things about Vim
that also make it unique,

69
00:03:13.285 --> 00:03:16.712
as long as you separate out your
system clipboard plus your pasting,

70
00:03:16.712 --> 00:03:20.694
I can have something that is on my paste
buffer, so I can just press p to paste it.

71
00:03:20.694 --> 00:03:22.120
And that's pretty nice, right?

72
00:03:22.120 --> 00:03:23.977
But I can also have
whatever's on my clipboard.

73
00:03:23.977 --> 00:03:28.024
So if I go Ctrl+C or Ctrl+V, that's
still from those lines I had earlier.

74
00:03:28.024 --> 00:03:31.807
So I have the things I can copy on the
outside of my editor, say, web addresses,

75
00:03:31.807 --> 00:03:34.819
whatever, and then the things
I'm copying inside my editor.

76
00:03:34.819 --> 00:03:37.092
They're very different kind
of distinct things, so

77
00:03:37.092 --> 00:03:38.763
it's a little different experience.

78
00:03:38.763 --> 00:03:41.468
And so there's the basic crash
course Course, on motions, just so

79
00:03:41.468 --> 00:03:42.567
everybody knows them all.

80
00:03:42.567 --> 00:03:44.466
There's, lots and
lots and lots of motions.

81
00:03:44.466 --> 00:03:48.492
You can do a lot of really
weird things gUIW, all right?

82
00:03:48.492 --> 00:03:50.629
g, there you go.

83
00:03:50.629 --> 00:03:51.768
IW is really fun.

84
00:03:51.768 --> 00:03:55.598
So that's inside word viw will highlight
the words you're on if there's periods and

85
00:03:55.598 --> 00:03:56.244
other stuff.

86
00:03:56.244 --> 00:04:00.508
So say you're in a function, or
you're in some sort of C++ or

87
00:04:00.508 --> 00:04:02.123
you use a lot of colons.

88
00:04:02.123 --> 00:04:07.056
If I go viw, it only highlights up to
one of those special characters, but

89
00:04:07.056 --> 00:04:11.048
viW, highlights up to and
beyond only to the white spaces.

90
00:04:11.048 --> 00:04:15.516
So that means I can yiW and
yank that whole thing.

91
00:04:15.516 --> 00:04:19.166
Now things get even better is that
you can remap all of your stuff too.

92
00:04:19.166 --> 00:04:24.571
So if I go leader, which for
me is space and then I go, yiW.

93
00:04:24.571 --> 00:04:27.186
That just did a special operation.

94
00:04:27.186 --> 00:04:30.856
That put it onto my clipboard, or
should have put it onto my clipboard.

95
00:04:30.856 --> 00:04:34.970
There we go, so my clipboard now,
I just didn't do it in time.

96
00:04:34.970 --> 00:04:37.059
It just put it a space bar but
there you go.

97
00:04:37.059 --> 00:04:40.147
So now you can even do things that,
which I think is super cool,

98
00:04:40.147 --> 00:04:43.196
is the ability to remap Operations
to actually be different.

99
00:04:43.196 --> 00:04:48.541
So if I go this, if I just go capital,
let's see what's it called?

100
00:04:48.541 --> 00:04:52.522
Go space y you'll notice that it
remapped it to double quotes plus y,

101
00:04:52.522 --> 00:04:55.416
which is a way that you go
to the system clipboard.

102
00:04:55.416 --> 00:04:57.878
So it's called the unnamed plus
register or whatever it's called.

103
00:04:57.878 --> 00:05:01.465
So, it's I've remapped space
y into a special area.

104
00:05:01.465 --> 00:05:03.246
And now I can just do a motion.

105
00:05:03.246 --> 00:05:08.777
fh and that just copied into my clipboard
up to the h and including the h.

106
00:05:08.777 --> 00:05:14.050
So you can get really kind of adventurous
with all of this, but it gets even better.

107
00:05:14.050 --> 00:05:16.522
I can delete inside, see that string?

108
00:05:16.522 --> 00:05:17.058
Hello from prime.

109
00:05:17.058 --> 00:05:18.823
I can go see ci"".

110
00:05:18.823 --> 00:05:23.543
I've just jumped to the upcoming string
deleted all the contents out of it, and

111
00:05:23.543 --> 00:05:27.006
now I'm in an insert mode and
I can type, because I used c.

112
00:05:27.006 --> 00:05:32.288
You can do the same thing, di() will
delete everything within the parentheses.

113
00:05:32.288 --> 00:05:35.752
If you had two sets of parentheses,

114
00:05:35.752 --> 00:05:40.494
you could technically go d2i(), d2i that.

115
00:05:40.494 --> 00:05:43.245
It'll delete both sets of parentheses,
which is kind of,

116
00:05:43.245 --> 00:05:45.621
now you're getting really
fancy footwork there.

117
00:05:45.621 --> 00:05:48.403
I never do that kind of stuff but
you can get pretty fancy with all that.

118
00:05:48.403 --> 00:05:50.834
And so
those are all the compound fund operators.

119
00:05:50.834 --> 00:05:52.144
There you go.
I just want to give you

120
00:05:52.144 --> 00:05:55.889
a quick little understanding that once
you get really good at manipulating text,

121
00:05:55.889 --> 00:05:56.930
you can do quite a bit.

122
00:05:56.930 --> 00:05:59.785
And it gets pretty dang fun.

123
00:05:59.785 --> 00:06:02.028
One thing that I just think it's fun,

124
00:06:02.028 --> 00:06:06.244
which maybe that's kind of silly of
me to think programming can be fun.

125
00:06:06.244 --> 00:06:09.724
But something that I do all the time,
that I just really doing,

126
00:06:09.724 --> 00:06:13.337
is if I need to copy this function,
Shift+V for highlight line,

127
00:06:13.337 --> 00:06:17.297
f4 to the squarely brace percent sign
to go down, y to yank it, right?

128
00:06:17.297 --> 00:06:20.236
And so you just do that, and
it just feels fun to do, right?

129
00:06:20.236 --> 00:06:23.995
I can just yeah, and it just feels
good to go through these motions, and

130
00:06:23.995 --> 00:06:26.012
then all sudden you start doing them.

131
00:06:26.012 --> 00:06:29.202
They're like combos,
plane some sort of street Fighter game,

132
00:06:29.202 --> 00:06:31.337
Mortal Kombat, and you're just into it.

133
00:06:31.337 --> 00:06:33.071
It's just a lot of fun.

134
00:06:33.071 --> 00:06:35.741
I don't know, it just gets me
all addicted and happy about it.

135
00:06:35.741 --> 00:06:36.648
And so there you go.

136
00:06:36.648 --> 00:06:37.469
So I wanted to show you that.

137
00:06:37.469 --> 00:06:38.827
So there you go.

138
00:06:38.827 --> 00:06:41.240
There's some motions,
there's some other quick things or

139
00:06:41.240 --> 00:06:43.095
cool things that I think
are just really good.

140
00:06:43.095 --> 00:06:44.953
Let's go into a bigger project.

141
00:06:44.953 --> 00:06:47.179
Let's go into a project called caleb,

142
00:06:47.179 --> 00:06:50.556
I'm making the game that uses
Vim motions as a platformer.

143
00:06:50.556 --> 00:06:52.184
I know sounds really crazy, right?

144
00:06:52.184 --> 00:06:55.423
And so it's still a platformer, except for
use of emotions, you get the idea.

145
00:06:55.423 --> 00:07:01.881
So if I jump into here, and this is not
this is the other one dev and there we go.

146
00:07:01.881 --> 00:07:04.047
Okay, we're gonna open up
the proper version right here.

147
00:07:04.047 --> 00:07:07.840
There you go there's my proper
one if I say I search for

148
00:07:07.840 --> 00:07:10.045
I don't know state ca S state.

149
00:07:10.045 --> 00:07:12.724
It'll show me a whole bunch
of occurrences of them.

150
00:07:12.724 --> 00:07:15.587
This is just your standard fuzzy
find you have this in VS code and

151
00:07:15.587 --> 00:07:18.179
all this one thing that I think
is super cool about them and

152
00:07:18.179 --> 00:07:21.495
I didn't know about this for years is
something called a quick fix list.

153
00:07:21.495 --> 00:07:24.304
A quick fix list is all
of those locations,

154
00:07:24.304 --> 00:07:28.907
and you can bunch of different ways
you can create a quick fix list, but

155
00:07:28.907 --> 00:07:33.527
from search results, I can put all
of those locations into this list.

156
00:07:33.527 --> 00:07:34.790
And so now I have this list.

157
00:07:34.790 --> 00:07:35.565
It doesn't have to be there.

158
00:07:35.565 --> 00:07:39.264
It can go that, but I can navigate that
list, and they'll show me every single

159
00:07:39.264 --> 00:07:42.139
occurrence of that, and
I can walk through each one of them.

160
00:07:42.139 --> 00:07:46.536
So you can see I'm on 14 out of 390 and so
I can just walk through all of them and

161
00:07:46.536 --> 00:07:47.128
see them.

162
00:07:47.128 --> 00:07:50.670
You can do operations over
the top of a quick fix list.

163
00:07:50.670 --> 00:07:52.550
Maybe I wanna go quick fix list?

164
00:07:52.550 --> 00:07:56.726
Do I want to replace everything
that says state with StateFoo?

165
00:07:56.726 --> 00:07:59.284
And now it's gonna go through and
do all of them.

166
00:07:59.284 --> 00:08:01.526
If I wanted to, I press q to stop it,
but you could do that.

167
00:08:01.526 --> 00:08:03.838
You could also do g, and there you go and

168
00:08:03.838 --> 00:08:07.286
then fantastic just highlight
does everything awesome.

169
00:08:07.286 --> 00:08:10.120
And now we have StateFoo
through everywhere.

170
00:08:10.120 --> 00:08:10.754
That'd be really bad.

171
00:08:10.754 --> 00:08:12.432
So if I were to at this point hit Save,

172
00:08:12.432 --> 00:08:15.794
that would probably not be a very good
experience, because I just changed

173
00:08:15.794 --> 00:08:19.552
everything to StateFoo throughout my
entire project that had the word S, state.

174
00:08:19.552 --> 00:08:23.200
But quick fix lists are Pretty cool
because if you are looking for a pattern,

175
00:08:23.200 --> 00:08:26.173
something you need to jump on,
that's not a symbol, right?

176
00:08:26.173 --> 00:08:31.129
This is not for your lsp, this is for
symbols that you just can't quite put on.

177
00:08:31.129 --> 00:08:33.902
You can do this and
then hop through them as actual points.

178
00:08:33.902 --> 00:08:36.627
If you had test breaking and
you wanna take your stack trace,

179
00:08:36.627 --> 00:08:40.047
you could theoretically take a stack
trace, pump it into a quick fix list and

180
00:08:40.047 --> 00:08:41.293
walk those points as well.

181
00:08:41.293 --> 00:08:45.953
You can do a lot of these kind of fun and
clever operations really quickly with it.

182
00:08:45.953 --> 00:08:50.213
I'm gonna quit this really quickly
quit all bang there we go.

183
00:08:50.213 --> 00:08:53.374
All right, so they're very good.

184
00:08:53.374 --> 00:08:58.107
They also work really good when it
comes to your, what's it called?

185
00:08:58.107 --> 00:09:00.603
Your lsp so
you can take every lsp reference.

186
00:09:00.603 --> 00:09:03.866
And put it onto a quick fix list and then
walk them, which is really nice to have,

187
00:09:03.866 --> 00:09:06.088
because sometimes you don't
want to go back to that.

188
00:09:06.088 --> 00:09:07.806
You just wanna be doing
something in this file.

189
00:09:07.806 --> 00:09:10.560
Then you can go to the next one,
then you can go to the next one, and

190
00:09:10.560 --> 00:09:14.238
it shows you every single version of where
this thing exists throughout your program.

191
00:09:14.238 --> 00:09:14.947
So it's really good.

192
00:09:14.947 --> 00:09:18.159
Quick fix lists are just,
absolutely incredible,

193
00:09:18.159 --> 00:09:20.716
because you can just do so much with them.

194
00:09:20.716 --> 00:09:23.426
You can get harpoon also for
VS code, I think harpoon is great.

195
00:09:23.426 --> 00:09:25.753
If you don't use harpoon,
do you use harpoon?

196
00:09:25.753 --> 00:09:26.451
&gt;&gt; Speaker 2: No.

197
00:09:26.451 --> 00:09:27.256
&gt;&gt; ThePrimeagen: You hurt my feelings.

198
00:09:27.256 --> 00:09:29.303
So harpoon, effectively,
all it is sticky files.

199
00:09:29.303 --> 00:09:31.686
You choose the file you want, and
then that will become a sticky files.

200
00:09:31.686 --> 00:09:35.109
I have three sticky files right now
in this project, those three so

201
00:09:35.109 --> 00:09:38.896
I can just swap between them with one
press thing, because I always have,

202
00:09:38.896 --> 00:09:40.870
I often find myself editing one file.

203
00:09:40.870 --> 00:09:42.563
And then I'll edit one other file, and

204
00:09:42.563 --> 00:09:44.728
I just swap back before
those things all the time.

205
00:09:44.728 --> 00:09:47.562
And I really hate this thing
where you have to go input, okay,

206
00:09:47.562 --> 00:09:48.607
edit this one, okay?

207
00:09:48.607 --> 00:09:50.739
And okay, that one,
okay, I need to go back.

208
00:09:50.739 --> 00:09:53.507
And then you keep on doing this thing
where you're constantly fuzzy fighting

209
00:09:53.507 --> 00:09:55.219
between two or
three files over and over again.

210
00:09:55.219 --> 00:09:58.618
So I just got tired and just wrote
my own plugin just to do it for me.

211
00:09:58.618 --> 00:10:00.611
So I just never have to
think about that again.

212
00:10:00.611 --> 00:10:07.707
VS code has a similar thing, just ways to
improve your life is a really good move.

213
00:10:07.707 --> 00:10:11.694
Or if you find yourself just doing
the same thing over and over again,

214
00:10:11.694 --> 00:10:13.635
just don't live your life that.

215
00:10:13.635 --> 00:10:14.862
Don't, you don't want that.

216
00:10:14.862 --> 00:10:17.376
Trust me, you don't want that.

217
00:10:17.376 --> 00:10:21.707
There's one little fun thing that I just
ran into just recently that I thought was

218
00:10:21.707 --> 00:10:22.416
super cool.

219
00:10:22.416 --> 00:10:26.959
So we're gonna do this really quickly,
which is gonna be aoc-elixer.

220
00:10:26.959 --> 00:10:29.520
And this is probably a weird one.

221
00:10:29.520 --> 00:10:31.057
I think some people might
know where this is going.

222
00:10:31.057 --> 00:10:35.572
But for advent of code this year,
if you don't know what advent of code is,

223
00:10:35.572 --> 00:10:38.592
effectively think Leak code Christmas,
right?

224
00:10:38.592 --> 00:10:39.637
That's all it is.

225
00:10:39.637 --> 00:10:43.701
It's an advent calendar with
leak code style problems, but

226
00:10:43.701 --> 00:10:48.652
they tend to be a lot more fun that you
have to solve on a daily basis, okay?

227
00:10:48.652 --> 00:10:54.043
And so
this year's day three had this problem.

228
00:10:54.043 --> 00:10:57.739
Effectively, what it was is that
you had to decipher this input and

229
00:10:57.739 --> 00:11:01.110
perform all the multiplication so
anything that did, mul.

230
00:11:01.110 --> 00:11:05.484
Opening parenthesis, no spaces,
up to three digits, comma, three digits,

231
00:11:05.484 --> 00:11:07.524
closing parenthesis, that's it.

232
00:11:07.524 --> 00:11:10.381
You have to take that and
multiply that together.

233
00:11:10.381 --> 00:11:13.894
And then, this one would be
dropped because it has brackets.

234
00:11:13.894 --> 00:11:16.010
This one would be good because it doesn't.

235
00:11:16.010 --> 00:11:18.453
This one would be dropped
because it's closing brackets.

236
00:11:18.453 --> 00:11:21.444
This one would be executed, and
this one would be executed.

237
00:11:21.444 --> 00:11:25.841
And the fun part about it is that you can
actually solve all of this using Vim as

238
00:11:25.841 --> 00:11:30.254
the means in which you can solve it as
opposed to actually writing a program.

239
00:11:30.254 --> 00:11:33.290
You don't even have to write a program to
solve this because you can actually solve

240
00:11:33.290 --> 00:11:34.840
this also with sed, which is kind of fun.

241
00:11:34.840 --> 00:11:38.932
So I can do something this where
I can take every single line and

242
00:11:38.932 --> 00:11:43.116
I could look for say everything
that says the word mul, right?

243
00:11:43.116 --> 00:11:45.082
Okay, we can find this, right?

244
00:11:45.082 --> 00:11:46.516
We see that, we're seeing that.

245
00:11:46.516 --> 00:11:50.833
Then, I need to find a digit, right,
but it could be up to three digits.

246
00:11:50.833 --> 00:11:54.618
So I don't really know how many,
so I have to go 1 to 3, right?

247
00:11:54.618 --> 00:11:55.768
There we go.

248
00:11:55.768 --> 00:11:58.244
Then I can do a comma and
I can do it again.

249
00:11:58.244 --> 00:12:01.027
Somewhere between 1 to 3 of those digits.

250
00:12:01.027 --> 00:12:03.228
One to three of those digits and
then a closing currency.

251
00:12:03.228 --> 00:12:03.767
There you go.

252
00:12:03.767 --> 00:12:05.577
I found one of these groups, right?

253
00:12:05.577 --> 00:12:09.240
So, then what I could do is I could do
remember that old fighting one-eyed Kirby.

254
00:12:09.240 --> 00:12:12.460
Well, it doesn't have to be a one-eyed
Kirby in those capture groups.

255
00:12:12.460 --> 00:12:17.374
So, I'm just gonna capture that as
a group do a do a replace it and

256
00:12:17.374 --> 00:12:21.747
then do a new line, and
then do that for every one of them.

257
00:12:21.747 --> 00:12:24.920
So now I've partially solved this
problem by doing a fun find and

258
00:12:24.920 --> 00:12:26.282
replace within my editor.

259
00:12:26.282 --> 00:12:27.101
I'm not even programming.

260
00:12:27.101 --> 00:12:31.901
I'm just doing this by the way, this has
actually happened in real life where I had

261
00:12:31.901 --> 00:12:34.841
to execute it was 200
files needed an upgrade.

262
00:12:34.841 --> 00:12:37.309
But the upgrade was programmatical, and so

263
00:12:37.309 --> 00:12:40.656
I recorded the macro in which
I played across all the files.

264
00:12:40.656 --> 00:12:44.766
Files, it had to change a function and
move if statements around and all that.

265
00:12:44.766 --> 00:12:49.189
And so I didn't have to manually
do it 200 and some times or

266
00:12:49.189 --> 00:12:52.238
try to get a Node program
correct to do it.

267
00:12:52.238 --> 00:12:55.164
Instead I could play a macro,
see the outcome, play the next macro,

268
00:12:55.164 --> 00:12:56.083
next one, next one.

269
00:12:56.083 --> 00:12:57.546
It just made it really fun.

270
00:12:57.546 --> 00:13:00.653
And I used a quick fix list to do that, so
I can find the offender, play it once, and

271
00:13:00.653 --> 00:13:01.840
then navigate to the next one.

272
00:13:01.840 --> 00:13:07.068
Play it,, so it's, yes,
okay, I messed that one up.

273
00:13:07.068 --> 00:13:08.286
What did I mess that one up for?

274
00:13:08.286 --> 00:13:08.791
It's pretty fun.

275
00:13:08.791 --> 00:13:10.690
So okay, look at this, so we've got that.

276
00:13:10.690 --> 00:13:14.787
We've just done that fun little thing
right there, which made me move all that.

277
00:13:14.787 --> 00:13:15.883
Then I could do it again.

278
00:13:15.883 --> 00:13:17.566
I could do something even more fun, right?

279
00:13:17.566 --> 00:13:22.252
I could go, hey, match everything up to
the mul, right, up to mul, and then I

280
00:13:22.252 --> 00:13:27.444
could do that exact same thing, but this
time let's capture these decimals, right?

281
00:13:27.444 --> 00:13:34.528
So let's capture any digit
that's 1 to 3 long, right?

282
00:13:34.528 --> 00:13:37.236
And then let's capture,
did I get this one correct?

283
00:13:37.236 --> 00:13:39.599
Did I not get this one correct?

284
00:13:39.599 --> 00:13:46.115
Hold on we're not correcting.

285
00:13:46.115 --> 00:13:49.747
There it is all right, let's just get
this thing correct really quickly.

286
00:13:49.747 --> 00:13:51.148
Hold on, 1 to 3.

287
00:13:51.148 --> 00:13:57.633
There we go and
then I want to do digit, 1 to 3.

288
00:13:57.633 --> 00:13:58.841
There we go.
And then we're gonna close it off.

289
00:13:58.841 --> 00:13:59.465
So there we go.

290
00:13:59.465 --> 00:14:00.480
We found all those ones.

291
00:14:00.480 --> 00:14:01.848
We've matched everything right here.

292
00:14:01.848 --> 00:14:05.576
So what I'm gonna do is I'm gonna
do a capture group on these digits,

293
00:14:05.576 --> 00:14:07.327
capture group on these digits.

294
00:14:07.327 --> 00:14:12.306
It's kinda just fun stuff do that, and
I'm gonna replace it with 1 times 2,

295
00:14:12.306 --> 00:14:15.181
so I can just do
a multiplication right here.

296
00:14:15.181 --> 00:14:17.144
Okay, that's kind of interesting, right?

297
00:14:17.144 --> 00:14:18.499
I can delete that line for now.

298
00:14:18.499 --> 00:14:19.489
I can take all these ones.

299
00:14:19.489 --> 00:14:24.981
I can replace the new
line character with a +.

300
00:14:24.981 --> 00:14:29.022
Take that and pipe it out to bc,
the calculator, basic calculator.

301
00:14:29.022 --> 00:14:30.074
There you go, that's the answer.

302
00:14:30.074 --> 00:14:31.763
It's 161, right?

303
00:14:31.763 --> 00:14:34.487
It's kind of a fun little thing and
so then I recorded that as a macro.

304
00:14:34.487 --> 00:14:37.858
And I could replay all those
keystrokes in that order and

305
00:14:37.858 --> 00:14:39.730
then solve the entire puzzle.

306
00:14:39.730 --> 00:14:42.653
And there you go solved aoc without
actually writing a program,

307
00:14:42.653 --> 00:14:45.200
just manipulating text,
which is actually kind of a fun

308
00:14:45.200 --> 00:14:49.118
thought exercise that you can go through,
which just shows that knowing your tools.

309
00:14:49.118 --> 00:14:51.958
And what you can do with them
actually allows a whole different,

310
00:14:51.958 --> 00:14:55.596
unique possibility for solving it's not
that you can really use this regularly.

311
00:14:55.596 --> 00:14:59.407
But there's so many little scooby doo
scrambles you find yourself in and

312
00:14:59.407 --> 00:15:01.918
being able to play around and
solve stuff that.

