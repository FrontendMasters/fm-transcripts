WEBVTT

1
00:00:00.032 --> 00:00:04.858
&gt;&gt; ThePrimeagen: So now we need to
actually do the entire process of

2
00:00:04.858 --> 00:00:08.165
installing Neovim via Ansible.

3
00:00:08.165 --> 00:00:11.467
Right, so the first thing we want to
do is we wanna clone down Neovim.

4
00:00:11.467 --> 00:00:12.803
When it comes to using Ansible,

5
00:00:12.803 --> 00:00:16.128
one of my favorite features about Ansible
is that the docs are just really easy.

6
00:00:16.128 --> 00:00:19.027
Everything is hyper-discoverable,
which is good.

7
00:00:19.027 --> 00:00:24.834
And ChatGPT can be nice for those that
like to indulge in our AI friends.

8
00:00:24.834 --> 00:00:30.075
The AIs get 95% of the things correct, but
often I find that it just loves to use

9
00:00:30.075 --> 00:00:35.645
shell scripts, cuz shell scripts are the
ultimate hammer and they work everywhere.

10
00:00:35.645 --> 00:00:38.980
And it has a bunch of data
about how to write bash.

11
00:00:38.980 --> 00:00:41.970
And so when it sees that, that it can
just write bash, it just writes bash.

12
00:00:41.970 --> 00:00:43.373
And so you'll say, how do you do this?

13
00:00:43.373 --> 00:00:44.997
And it'll just be like, bash.

14
00:00:44.997 --> 00:00:48.759
And then you realize you have the world's
most complicated bash set up when you

15
00:00:48.759 --> 00:00:52.692
could've just written bash to begin with
instead of having series of gambles that

16
00:00:52.692 --> 00:00:53.444
produce bash.

17
00:00:53.444 --> 00:00:58.802
It's just not the way I'd personally
like to live my life, it's kinda gross.

18
00:00:58.802 --> 00:01:03.306
So generally speaking, I try not to use
the old AIs when it comes to this just cuz

19
00:01:03.306 --> 00:01:06.115
of the outdated or
oddly used way it does things.

20
00:01:06.115 --> 00:01:11.363
So let's go in here and let's just simply
look up Ansible, get clone, right?

21
00:01:11.363 --> 00:01:14.894
Right here, it'll probably be, wow, look
at that, it's one of my first results,

22
00:01:14.894 --> 00:01:17.214
I can't believe it,
it's like I've been here before.

23
00:01:17.214 --> 00:01:19.309
I'm gonna jump in here,
go here, and as you can see,

24
00:01:19.309 --> 00:01:22.674
it gives you a bunch of options, what
everything means, everything's fantastic.

25
00:01:22.674 --> 00:01:25.862
And then below, they do the greatest thing
ever, which is just give you examples.

26
00:01:25.862 --> 00:01:29.321
This is what I wanna see, this is what you
wanna see, this is what we all wanna see,

27
00:01:29.321 --> 00:01:30.945
and now we're really happy about it.

28
00:01:30.945 --> 00:01:33.493
So what I'm gonna do is I'm gonna
go all the way down here, and

29
00:01:33.493 --> 00:01:36.009
this one right here,
example of cloning of a single branch.

30
00:01:36.009 --> 00:01:40.712
So I'm just gonna copy that guy, come
over here and jump into my old editor.

31
00:01:40.712 --> 00:01:43.796
All right, so I'm gonna go up here, and
let's edit this thing and call this one,

32
00:01:43.796 --> 00:01:46.270
I'm just gonna give it actually
a better name, Install Neovim.

33
00:01:46.270 --> 00:01:50.130
It's gonna run on localhost,
and I'm gonna go clone Neovim.

34
00:01:50.130 --> 00:01:54.039
Now this is kind of an interesting thing
to do because if you're setting up your

35
00:01:54.039 --> 00:01:56.290
computer to run for
the first time, you may or

36
00:01:56.290 --> 00:01:58.501
may not have your SSH
keys on your computer.

37
00:01:58.501 --> 00:02:01.420
Maybe you like to generate them
every time you get a new computer.

38
00:02:01.420 --> 00:02:03.089
There's a lot of different
ways to go about this.

39
00:02:03.089 --> 00:02:06.821
If you're using Ansible vault,
you can actually take one SSH key and

40
00:02:06.821 --> 00:02:09.339
you can vault it up and
then put it up on GitHub.

41
00:02:09.339 --> 00:02:12.149
And then when you want, you can bring
it back down and un-vault it, and boom,

42
00:02:12.149 --> 00:02:13.525
you have the same SSH key everywhere.

43
00:02:13.525 --> 00:02:17.153
I'm not sure if that's actually a security
concern or not, feels like it should be.

44
00:02:17.153 --> 00:02:21.415
But at the same time,
it's like a really complicated encryption,

45
00:02:21.415 --> 00:02:23.152
maybe quantum computers.

46
00:02:23.152 --> 00:02:25.952
Quantum computers, they're right around
the corner, they're just this close.

47
00:02:25.952 --> 00:02:28.127
They're coming for all of your RSAs.

48
00:02:28.127 --> 00:02:28.878
All right, so

49
00:02:28.878 --> 00:02:32.645
what I'm gonna do here is I'm just
gonna get the HTTPS version of that.

50
00:02:32.645 --> 00:02:34.194
So I'm gonna go to, what is it?

51
00:02:34.194 --> 00:02:40.105
It's Neovim, look that up,
I bet you, I even have it completed,

52
00:02:40.105 --> 00:02:43.816
yeah, github.com, neovim/neovim.

53
00:02:43.816 --> 00:02:50.213
And once this thing loads,
&gt;&gt; ThePrimeagen: All right,

54
00:02:50.213 --> 00:02:53.389
I'm gonna go to code,
and I'll get the HTTPS.

55
00:02:53.389 --> 00:02:57.799
I'm on the Firefox, so I'm not signed in,
so it doesn't think I have any sort of,

56
00:02:57.799 --> 00:03:00.142
what's it called, SSH keys, there we go.

57
00:03:00.142 --> 00:03:03.712
And you can even set destination
where you want to check this out.

58
00:03:03.712 --> 00:03:05.773
So this is another kind of
weird part about Ansible.

59
00:03:05.773 --> 00:03:07.721
How do I say home, right?

60
00:03:07.721 --> 00:03:13.145
It's not gonna accept something that looks
like this, that's just not gonna work out.

61
00:03:13.145 --> 00:03:16.862
Well, the nice part about Ansible,
again, is that it's really look upable,

62
00:03:16.862 --> 00:03:17.759
as I said earlier.

63
00:03:17.759 --> 00:03:22.270
So let's jump back here and
go Ansible environment variables.

64
00:03:22.270 --> 00:03:27.914
Jump in here and look at that,
built-in environment lookup, right away.

65
00:03:27.914 --> 00:03:34.950
Examples, first one is, in fact,
a home lookup, fantastic, copy and paste.

66
00:03:34.950 --> 00:03:36.966
And so we're gonna do that right now,
I mean,

67
00:03:36.966 --> 00:03:39.879
this is senior-level engineering
going on here, so there we go.

68
00:03:39.879 --> 00:03:43.995
So I'm gonna look up
ansible.built-in.environment, home, and

69
00:03:43.995 --> 00:03:46.724
then I'm just gonna go/personal/neovim.

70
00:03:46.724 --> 00:03:51.058
Awesome, single_branch, yes,
version, let's go with 0.10.1.

71
00:03:51.058 --> 00:03:56.262
Cuz if I'm not mistaken, if I go
nvim --version, I should be on 10.2.

72
00:03:56.262 --> 00:03:58.947
I'm on 10.1,
I still have the other one in there.

73
00:03:58.947 --> 00:04:01.246
Let's go, neovim, for a quick second.

74
00:04:01.246 --> 00:04:04.742
Sudo make install, hold on.

75
00:04:07.565 --> 00:04:10.483
&gt;&gt; ThePrimeagen: Yeah, I accidentally,
well not accidentally,

76
00:04:10.483 --> 00:04:12.016
I was preparing for this.

77
00:04:12.016 --> 00:04:17.055
Type it in the password wrong,
there's a lot stuff going on here.

78
00:04:17.055 --> 00:04:19.336
There we go, fantastic, got this.

79
00:04:19.336 --> 00:04:23.413
So now when I go back here, I should
be able to go neovim version 10.2.

80
00:04:23.413 --> 00:04:26.488
Okay, good, so that way we can prove
that as I install these things,

81
00:04:26.488 --> 00:04:28.462
I'm actually installing the right thing.

82
00:04:28.462 --> 00:04:32.765
And show that this entire process actually
works and I'm not just making it up, okay?

83
00:04:32.765 --> 00:04:36.702
And yes, I do have a habit of
writing before I do anything.

84
00:04:36.702 --> 00:04:38.453
I say I'm a chronic saver, okay?

85
00:04:38.453 --> 00:04:43.054
If I stop saving so much, the world
might actually have a surplus of energy.

86
00:04:43.054 --> 00:04:45.005
All right, so let's see,
what do we have here?

87
00:04:45.005 --> 00:04:47.878
We're gonna clone down Neovim, and
we're gonna put it in personal/neovim.

88
00:04:47.878 --> 00:04:49.603
So let's just do that right now.

89
00:04:49.603 --> 00:04:53.064
I'm gonna go in here and
go ansible-playbook neovim.

90
00:04:53.064 --> 00:04:56.328
So now this time we have installed Neovim,
we're gathering the facts,

91
00:04:56.328 --> 00:04:59.336
now we're actually cloning Neovim,
it's happening right now.

92
00:04:59.336 --> 00:05:02.289
All right, there we go, boom,
I've cloned down Neovim.

93
00:05:02.289 --> 00:05:05.385
If I go ls ../neovim,
you can see right there,

94
00:05:05.385 --> 00:05:09.388
we have officially cloned Neovim down,
okay, so look at that.

95
00:05:09.388 --> 00:05:14.535
So now I have this cool playbook that
anytime I run it, clones down Neovim,

96
00:05:14.535 --> 00:05:19.619
has all that stuff set up, but we still
got more things left to do, right?

97
00:05:19.619 --> 00:05:21.966
We actually have to do
the installation part and all that.

98
00:05:21.966 --> 00:05:24.196
All right, so here you go,
this is the expected output, I think.

99
00:05:24.196 --> 00:05:28.027
It's close, I did 10.2, you can do 10.1,
you can do 9.4 if you really want to.

100
00:05:28.027 --> 00:05:31.654
All right, so next, building Neovim
does require a few libraries, for

101
00:05:31.654 --> 00:05:32.911
those that don't know.

102
00:05:32.911 --> 00:05:35.562
These are the libraries that
I remember that it requires.

103
00:05:35.562 --> 00:05:38.172
It may require more, but I'm pretty
sure this is all that it requires.

104
00:05:38.172 --> 00:05:42.939
So if we were to be using bash,
I would just do a little sudo apt install

105
00:05:42.939 --> 00:05:47.394
cmake gettext lua5.1 liblua5.1 dev,
and that's that.

106
00:05:47.394 --> 00:05:53.164
But since we are not using bash, we are
now going to be building it via Ansible.

107
00:05:53.164 --> 00:05:56.387
So what I'm gonna do, let's see,
yeah, I wanna go ahead there.

108
00:05:56.387 --> 00:05:59.400
We're gonna go and we're gonna look
up on how to actually use sudo apt.

109
00:05:59.400 --> 00:06:03.209
So I'll just do the exact same thing
that I've been doing, Ansible,

110
00:06:03.209 --> 00:06:05.608
I misspelled that, you can't see my text.

111
00:06:05.608 --> 00:06:10.090
Don't worry about it, ansible apt install.

112
00:06:10.090 --> 00:06:14.548
Again, it's already built-in module, we'll
just do a little copy, a little paste, and

113
00:06:14.548 --> 00:06:15.646
baba bee, bada boom.

114
00:06:15.646 --> 00:06:17.873
You can actually do
little operating switch,

115
00:06:17.873 --> 00:06:20.106
kind of like operating
system switches here.

116
00:06:20.106 --> 00:06:23.313
So that way you could have Brew
installer ports install for Mac, and

117
00:06:23.313 --> 00:06:24.726
you have Ansible for Ubuntu.

118
00:06:24.726 --> 00:06:29.061
So it does make things a little bit nicer
when it comes to multi-operating system

119
00:06:29.061 --> 00:06:29.835
operations.

120
00:06:29.835 --> 00:06:31.973
So if we look through here,
we'll notice right away,

121
00:06:31.973 --> 00:06:35.090
we have this nice little ansible install
right here install a list of packages.

122
00:06:35.090 --> 00:06:37.164
That's pretty much exactly what I want.

123
00:06:37.164 --> 00:06:41.340
So I'm gonna go in here and
I'm gonna do that.

124
00:06:41.340 --> 00:06:45.180
And then I'll go Neovim Deps, fantastic.

125
00:06:45.180 --> 00:06:48.379
It's really just this simple,
this is working with Ansible.

126
00:06:48.379 --> 00:06:50.788
A lot of Ansible is just grabbing this,

127
00:06:50.788 --> 00:06:54.589
you can get into the complicated
side of things, like I said.

128
00:06:54.589 --> 00:06:57.870
Getting some of that Neovim stuff is
just really annoying at some point.

129
00:06:57.870 --> 00:07:05.077
And so now let's just go in here and
just get all this stuff done.

130
00:07:06.896 --> 00:07:09.997
&gt;&gt; ThePrimeagen: I don't
know why it did that,

131
00:07:09.997 --> 00:07:14.723
that seems weird, there we go, fantastic.

132
00:07:14.723 --> 00:07:18.378
All right, so we have our Neovim Deps,
we can install it.

133
00:07:18.378 --> 00:07:21.112
Now with Ansible,
you also have this thing called become,

134
00:07:21.112 --> 00:07:23.529
which effectively you become
the user that you run.

135
00:07:23.529 --> 00:07:27.538
So now I actually have the elevated
permissions instead of just the Ansible

136
00:07:27.538 --> 00:07:28.309
permission.

137
00:07:28.309 --> 00:07:31.109
So now can actually do,
say, a pseudo app install,

138
00:07:31.109 --> 00:07:32.963
as opposed to just an apt install.

139
00:07:32.963 --> 00:07:36.630
And so now if I were to rerun this, you
would notice right away that after it goes

140
00:07:36.630 --> 00:07:38.754
here, it's gonna attempt to clone Neovim.

141
00:07:38.754 --> 00:07:41.117
Neovim already is in a good state.

142
00:07:41.117 --> 00:07:46.100
So this thing should
hopefully run fairly quick.

143
00:07:46.100 --> 00:07:49.207
Usually it cashes out pretty quickly,
there you go.

144
00:07:49.207 --> 00:07:53.252
Can't do that, needs a pseudo password,
so we should probably provide a password.

145
00:07:53.252 --> 00:07:57.685
If you throw in a little -k, -k, ask for
a nice password, throw it in there.

146
00:07:57.685 --> 00:08:00.596
And if I typed it in correctly,
this thing should just run.

147
00:08:00.596 --> 00:08:05.311
And then it'll ensure that I also
have all the dependencies installed,

148
00:08:05.311 --> 00:08:06.324
so there we go.

149
00:08:06.324 --> 00:08:08.978
So now we've ran, now we have
all the dependencies installed.

150
00:08:08.978 --> 00:08:09.848
And as you can see,

151
00:08:09.848 --> 00:08:13.514
we're kind of developing this single
script to be able to install everything.

152
00:08:13.514 --> 00:08:16.648
I mean, I don't necessarily find
this to be a bad experience.

153
00:08:16.648 --> 00:08:21.123
I did this for my entire system over
the last few years, and it's really nice.

154
00:08:21.123 --> 00:08:24.394
Really, what it all came down
to wasn't the Ansible part for

155
00:08:24.394 --> 00:08:26.263
getting my system up and running.

156
00:08:26.263 --> 00:08:29.872
Is for any time I made a change
to my development environment and

157
00:08:29.872 --> 00:08:34.248
I wanted to update the source of truth
into my system, it took 30 seconds.

158
00:08:34.248 --> 00:08:38.190
And that was enough for me to say,
that's it, I'm rewriting everything.

159
00:08:38.190 --> 00:08:42.885
I know, I have my weird hills I die on,
and that's the one I die on.

160
00:08:42.885 --> 00:08:44.510
All right, so we can keep on going.

161
00:08:44.510 --> 00:08:47.108
We pretty much have the exact
same code right here.

162
00:08:47.108 --> 00:08:49.194
And so, yep, there's a crash,
we already went through this.

163
00:08:49.194 --> 00:08:52.556
Okay, so now we just have to build,
that means we just need to Google how to

164
00:08:52.556 --> 00:08:56.032
do the make stuff, copy the relevant
instructions, implement a new task,

165
00:08:56.032 --> 00:08:57.960
and eventually have some Neovim profit.

166
00:08:57.960 --> 00:09:02.485
And so here's how you build Neovim
straight from their build MD, which is,

167
00:09:02.485 --> 00:09:07.293
you just go into the directory and you do
a make with this little RelWithDebInfo,

168
00:09:07.293 --> 00:09:09.078
and then a sudo make install.

169
00:09:09.078 --> 00:09:10.238
We can do this, what do we call?

170
00:09:10.238 --> 00:09:13.062
I'm gonna cheat here for a second,
I'm gonna just jump down here.

171
00:09:13.062 --> 00:09:17.744
Neovim, it's just make, okay,
that's pretty nice, anyways, that's nice.

172
00:09:17.744 --> 00:09:19.721
Normally, I wonder why I
couldn't find it there.

173
00:09:19.721 --> 00:09:20.935
Usually it shows up as the first one.

174
00:09:20.935 --> 00:09:23.677
That's actually one of the things
that I really like about Ansible,

175
00:09:23.677 --> 00:09:26.953
is everything you have a question on tends
to be the first thing that just shows up.

176
00:09:26.953 --> 00:09:29.550
And so right here, it's Neovim with make.

177
00:09:29.550 --> 00:09:32.762
You can say, hey,
here's the directory I want to go into,

178
00:09:32.762 --> 00:09:35.730
and here's the params that
I'm gonna have with make.

179
00:09:35.730 --> 00:09:38.061
Okay, fantastic, then I can copy that.

180
00:09:38.061 --> 00:09:41.803
So that would be the build, and then this
one can be changed into the directory.

181
00:09:41.803 --> 00:09:46.567
And target equals install, and
then we can have become: true.

182
00:09:46.567 --> 00:09:50.445
So now this will do
the pseudo make install.

183
00:09:50.445 --> 00:09:53.469
And if we have done everything correctly,

184
00:09:53.469 --> 00:09:58.468
we should be able to rerun this
thing with the super sweet password.

185
00:09:58.468 --> 00:10:00.339
My goodness, I think I'm mistyping this.

186
00:10:00.339 --> 00:10:04.371
No, I'm not much of a stand and
typer kinda guy, I definitely mistyped,

187
00:10:04.371 --> 00:10:06.138
ain't no way that's correct.

188
00:10:06.138 --> 00:10:11.070
Absolutely correct, I knew I had
that first try, just unstoppable.

189
00:10:11.070 --> 00:10:13.315
So here's another thing that I
never really liked about Ansible.

190
00:10:13.315 --> 00:10:17.859
So unless if you're executing it
with four, I think it's -V, V,

191
00:10:17.859 --> 00:10:22.344
V, V, four Vs for super ultra,
very, very, very verbose mode.

192
00:10:22.344 --> 00:10:24.017
You don't get to see a lot
of what's happening.

193
00:10:24.017 --> 00:10:27.526
And so unless if you remember to do that,
you're just gonna sit here and

194
00:10:27.526 --> 00:10:29.703
you're gonna go, I wonder where it's at.

195
00:10:29.703 --> 00:10:33.012
I don't think we're stuck,
I just somehow doubt that we're stuck.

196
00:10:33.012 --> 00:10:35.604
Let's just jump in here and
go like this, hit a top.

197
00:10:35.604 --> 00:10:36.637
Is anything running?

198
00:10:36.637 --> 00:10:38.702
I mean, it looks like something's running.

199
00:10:38.702 --> 00:10:42.905
Ooh, maybe we are stuck, or
maybe we just got done finishing.

200
00:10:42.905 --> 00:10:44.154
Chrome's taking a lot of time.

201
00:10:44.154 --> 00:10:48.252
See, that's one of the bad parts
about this whole process is,

202
00:10:48.252 --> 00:10:50.507
I don't know what's happening.

203
00:10:50.507 --> 00:10:53.080
What's the downside here?

204
00:10:53.080 --> 00:10:55.321
And so this is one thing I don't like.

205
00:10:55.321 --> 00:10:58.736
My guess is that it might be downloading,
okay, here, we're just gonna kill it.

206
00:10:58.736 --> 00:11:02.119
We'll throw in a bunch of Vs, okay?

207
00:11:02.119 --> 00:11:05.062
Do you see how many Vs I
just threw in there?

208
00:11:05.062 --> 00:11:06.922
That was a lot of Vs.

209
00:11:06.922 --> 00:11:09.133
So now you get a bunch of this stuff.

210
00:11:09.133 --> 00:11:13.375
So you get all the tasks that
are actually being executed.

211
00:11:13.375 --> 00:11:18.796
Now if I remember correctly, I'm not sure
if you actually get the output right away.

212
00:11:18.796 --> 00:11:22.303
And so this was one of the things that
I grew frustrated about with Ansible

213
00:11:22.303 --> 00:11:23.118
is just having.

214
00:11:23.118 --> 00:11:31.148
I like that kind of tactile feedback
of just having it right there.

215
00:11:31.148 --> 00:11:35.532
Because I'm not using this to hydrate some
other computer somewhere else in which

216
00:11:35.532 --> 00:11:37.128
I can monitor a touch easier.

217
00:11:37.128 --> 00:11:39.907
Instead, I am just doing it right here for
me, right?

218
00:11:39.907 --> 00:11:43.917
This is for me, I will like the for
me kind of output.

219
00:11:43.917 --> 00:11:47.449
And so this might take five minutes to
build, so just to avoid this whole thing,

220
00:11:47.449 --> 00:11:49.356
I'm just gonna kill it, you get the idea.

221
00:11:49.356 --> 00:11:50.853
This looks pretty good, right?

222
00:11:50.853 --> 00:11:52.338
All right, fantastic.

223
00:11:52.338 --> 00:11:54.814
I'm just gonna kill that, and
we're just gonna move on.

224
00:11:54.814 --> 00:11:57.518
So there we go,
everything looks pretty good.

225
00:11:57.518 --> 00:11:59.933
This is all the same,
you'll notice that this is the same too,

226
00:11:59.933 --> 00:12:00.990
we do the exact same thing.

227
00:12:00.990 --> 00:12:03.946
We're just to change into the directory,
do a little target install,

228
00:12:03.946 --> 00:12:04.839
bada bing bada boom.

229
00:12:04.839 --> 00:12:06.106
And that is Ansible.

230
00:12:06.106 --> 00:12:09.870
That's what it takes to create something
that would give you your own freshly built

231
00:12:09.870 --> 00:12:10.847
version of Ansible.

232
00:12:10.847 --> 00:12:14.855
You can change that little version number,
and it'll check out a new one,

233
00:12:14.855 --> 00:12:16.326
then it will do a new build.

234
00:12:16.326 --> 00:12:19.097
And we can kinda move on from there.

235
00:12:19.097 --> 00:12:23.165
It's pretty easy to control, I don't
really feel like it's hard to understand.

236
00:12:23.165 --> 00:12:29.975
I think some people prefer to avoid bash,
because there's the 400 rules of bash.

237
00:12:29.975 --> 00:12:34.031
And once you memorize the 400 rules,
bash is really great, but until you do,

238
00:12:34.031 --> 00:12:35.834
bash is really, really horrible.

239
00:12:35.834 --> 00:12:39.333
And I don't really blame you on that one,
I have just a few of the rules memorized,

240
00:12:39.333 --> 00:12:40.473
so I'm pretty good at it.

241
00:12:40.473 --> 00:12:45.229
So it feels really easy to attempt to
avoid that entire side of things and

242
00:12:45.229 --> 00:12:48.970
use something that's a bit
more on the rails like this.

243
00:12:48.970 --> 00:12:52.540
This is very clear, I mean,
in the end, even though it's verbose,

244
00:12:52.540 --> 00:12:55.758
it's extremely easy to tell
exactly what each step is doing.

245
00:12:55.758 --> 00:12:57.512
And so it feels really, really nice.

246
00:12:57.512 --> 00:13:01.788
But I don't want to use that anymore,
I've decided that I don't like it anymore.

247
00:13:01.788 --> 00:13:04.425
And so for me,
I'm gonna do something a bit different.

248
00:13:04.425 --> 00:13:07.761
I am gonna now do convention
over configuration.

249
00:13:07.761 --> 00:13:12.340
That's the mantra I'm re-adopting for
the third or fourth time in my lifetime.

250
00:13:12.340 --> 00:13:15.477
YAML feels more like
configuration over convention.

251
00:13:15.477 --> 00:13:18.252
It's just like, here's every single
way you have to configure it.

252
00:13:18.252 --> 00:13:20.775
With all the possible options,
you have to go onto the Internet and

253
00:13:20.775 --> 00:13:21.600
find every last key.

254
00:13:21.600 --> 00:13:24.222
And when something doesn't work, you
have to figure out why it doesn't work.

255
00:13:24.222 --> 00:13:27.468
And it just feels more complicated
than it ever needed to be.

