WEBVTT

1
00:00:00.040 --> 00:00:04.117
&gt;&gt; ThePrimeagen: Let's kind of redo
what we did with ansible, except for

2
00:00:04.117 --> 00:00:08.381
we're gonna do it with our
little bash script right here.

3
00:00:08.381 --> 00:00:11.786
So what we're gonna do here is we're
gonna update our neovim scripts to

4
00:00:11.786 --> 00:00:13.553
be identical to our ansible script.

5
00:00:13.553 --> 00:00:18.821
So to do that, I'm gonna jump
back to the MF ansible thing.

6
00:00:18.821 --> 00:00:19.968
I'm just gonna grab this whole.

7
00:00:19.968 --> 00:00:23.080
This thing really quickly jump
back here and I'm just gonna rep,

8
00:00:23.080 --> 00:00:24.732
I'm just gonna paste this all in.

9
00:00:24.732 --> 00:00:26.704
'cause I want you to see the difference.

10
00:00:26.704 --> 00:00:27.565
I want you to feel it.

11
00:00:27.565 --> 00:00:30.989
I want you to know what it
felt in your soul to do this.

12
00:00:30.989 --> 00:00:33.857
So what I'm gonna do is I'm
gonna delete all these lines.

13
00:00:33.857 --> 00:00:35.431
Bam.
Five lines gone.

14
00:00:35.431 --> 00:00:39.662
I'm gonna go, get,clone branch.

15
00:00:39.662 --> 00:00:42.667
v0.10.1 that just clones out that branch.

16
00:00:42.667 --> 00:00:48.141
And I'm gonna wanna put that
in home personal neovim.

17
00:00:48.141 --> 00:00:48.890
There we go.

18
00:00:48.890 --> 00:00:50.145
Delete that.
Look at that.

19
00:00:50.145 --> 00:00:53.893
Look at how simplified that, I mean,
for me, this is just like why again,

20
00:00:53.893 --> 00:00:55.451
I just like the bash approach.

21
00:00:55.451 --> 00:00:56.025
I just get it.

22
00:00:56.025 --> 00:00:56.699
I can look at it.

23
00:00:56.699 --> 00:00:57.325
I feel this.

24
00:00:57.325 --> 00:00:59.319
I do it every day, right?

25
00:00:59.319 --> 00:01:01.104
All right,
we need some sudo make installs.

26
00:01:01.104 --> 00:01:06.333
So I'm gonna go sudo or
app install do that bring that up here and

27
00:01:06.333 --> 00:01:11.475
then just throw those for
them again feeling so good, right?

28
00:01:11.475 --> 00:01:13.336
Like that's just feeling darn good.

29
00:01:13.336 --> 00:01:17.560
We're gonna change into
that directory now.

30
00:01:17.560 --> 00:01:22.827
We have to go cd Home,
personal, and neovim.

31
00:01:22.827 --> 00:01:25.860
And then, by the way,
always use things like home.

32
00:01:25.860 --> 00:01:31.113
You don't have to use, because if you use
like the full qualified path it can be,

33
00:01:31.113 --> 00:01:33.058
let's see, what is it, XF?

34
00:01:33.058 --> 00:01:33.727
There we go.

35
00:01:33.727 --> 00:01:37.674
If you change systems and
you don't have the same name life sucks.

36
00:01:37.674 --> 00:01:39.233
So just use.

37
00:01:39.233 --> 00:01:42.264
Use those,
it just makes life a little bit easier.

38
00:01:42.264 --> 00:01:47.515
All right, and then params and
if I'm not mistaken, it's just, I believe

39
00:01:47.515 --> 00:01:52.949
that is all that is, and then we just
have to do a little pseudo-make install.

40
00:01:55.788 --> 00:01:56.892
Alright.

41
00:01:56.892 --> 00:02:03.822
And so now I am now Stalling Neo Vim in
five lines instead of, 44 lines Ansible.

42
00:02:03.822 --> 00:02:06.028
So configuration over convention.

43
00:02:06.028 --> 00:02:06.888
Which one's better?

44
00:02:06.888 --> 00:02:08.934
One's more messy, more error prone.

45
00:02:08.934 --> 00:02:13.788
I'd say the other one is just more like
you have to look up every detail to get

46
00:02:13.788 --> 00:02:14.804
things right.

47
00:02:14.804 --> 00:02:15.663
Tapper.

48
00:02:15.663 --> 00:02:19.466
&gt;&gt; Speaker 2: Was that expansion
shortcut a neo vim thing or.

49
00:02:19.466 --> 00:02:21.123
&gt;&gt; ThePrimeagen: Yeah.

50
00:02:21.123 --> 00:02:25.441
If you do Ctrl+X, Ctrl+F, it will expand
any path based on where you're at,

51
00:02:25.441 --> 00:02:27.445
and it will let you kind of look at it.

52
00:02:27.445 --> 00:02:31.585
So if I go like this, it'll say,
okay, I have these two directories.

53
00:02:31.585 --> 00:02:33.508
And what's in here,
I have these two and so

54
00:02:33.508 --> 00:02:36.403
it's kind of like already built
in little file under standard.

55
00:02:36.403 --> 00:02:37.173
It's already there.

56
00:02:37.173 --> 00:02:38.638
It's a fun thing, you know?

57
00:02:38.638 --> 00:02:41.919
Neovim privilege,
you wouldn't understand that's great.

58
00:02:41.919 --> 00:02:45.310
Actually, you might understand, I'm not
sure [LAUGH] All right, you're learning,

59
00:02:45.310 --> 00:02:46.058
we're learning.

60
00:02:46.058 --> 00:02:48.955
So now, if I were to actually
run this thing right here,

61
00:02:48.955 --> 00:02:51.801
you would notice right away,
hey, look at that.

62
00:02:51.801 --> 00:02:56.167
Come on, let me go like this RM,
RF, personal neovim.

63
00:02:56.167 --> 00:03:00.485
Let me just destroy neovim really
quickly and so now I can run this.

64
00:03:00.485 --> 00:03:02.117
You can see it clone right in.

65
00:03:02.117 --> 00:03:02.662
It goes through.

66
00:03:02.662 --> 00:03:07.258
It's going to clone in just that
single branch, which is fantastic.

67
00:03:07.258 --> 00:03:07.969
It takes a little bit.

68
00:03:07.969 --> 00:03:11.913
There's a lot of, people have been
developing on it for a while.

69
00:03:11.913 --> 00:03:13.698
There's a lot of stuff in there.

70
00:03:13.698 --> 00:03:17.632
A lot of history, a lot of commits,
a lot of features.

71
00:03:17.632 --> 00:03:20.451
Hey, we didn't need all the views this
time You didn't need all the what?

72
00:03:20.451 --> 00:03:21.286
The v's.

73
00:03:21.286 --> 00:03:22.162
There's no v's.

74
00:03:22.162 --> 00:03:23.945
Notice that you recognize all this output.

75
00:03:23.945 --> 00:03:27.181
So when something goes wrong,
it feels really easy to fix,

76
00:03:27.181 --> 00:03:28.680
which is also really nice.

77
00:03:28.680 --> 00:03:30.811
You live and you learn as time goes on.

78
00:03:30.811 --> 00:03:35.540
And I think I've just kind of ended in
this really kind of basic approach to life

79
00:03:35.540 --> 00:03:39.351
where I just don't want to have
to think about things anymore.

80
00:03:39.351 --> 00:03:41.320
If that makes sense, right?

81
00:03:41.320 --> 00:03:43.908
I don't want,
I just wanted to build it the way I want.

82
00:03:43.908 --> 00:03:47.342
I don't want to have to go look up
everyone else's software to do something

83
00:03:47.342 --> 00:03:48.705
that's relatively simple,

84
00:03:48.705 --> 00:03:52.573
like installing a bunch of things you need
is actually a relatively simple process,

85
00:03:52.573 --> 00:03:55.807
and we effectively have a decently
extensible version in 44 lines.

86
00:03:55.807 --> 00:03:57.830
And it's not like I was trying
that hard in writing this.

87
00:03:57.830 --> 00:03:59.754
This is just okay, script.

88
00:03:59.754 --> 00:04:03.102
I'm sure that a bunch of
bash people were like,

89
00:04:03.102 --> 00:04:07.297
actually, they were very upset
at some of the things I did.

90
00:04:07.297 --> 00:04:11.389
if you don't get your password wrong once,
there you go.

91
00:04:11.389 --> 00:04:12.338
And then you can even see this.

92
00:04:12.338 --> 00:04:14.605
Look at this, you can see that,
okay, look at that, we're building.

93
00:04:14.605 --> 00:04:17.397
Okay, this looks good,
we got 200% like 18 times.

94
00:04:17.397 --> 00:04:18.886
You can watch it happen.

95
00:04:18.886 --> 00:04:21.461
I like watching things happen makes
me feel better on the inside.

96
00:04:21.461 --> 00:04:24.372
I don't feel freaked out that it's
just stalled to doing who knows what.

97
00:04:24.372 --> 00:04:26.306
And so there we go.

98
00:04:26.306 --> 00:04:27.848
This looks fantastic.

99
00:04:27.848 --> 00:04:29.229
And so now we have some executable code.

100
00:04:29.229 --> 00:04:29.996
What do we do in this one?

101
00:04:29.996 --> 00:04:31.975
Look at that,
I didn't even do the little -b right here.

102
00:04:31.975 --> 00:04:34.097
I did the whole fetch and
checkout business.

103
00:04:34.097 --> 00:04:36.769
So you can even make it more
verbose than you need to make it.

104
00:04:36.769 --> 00:04:38.458
And just like that,
that's why I like Bash.

105
00:04:38.458 --> 00:04:39.747
I used Ansible for years.

106
00:04:39.747 --> 00:04:41.688
I'm not using it anymore.

107
00:04:41.688 --> 00:04:42.826
There you go.

108
00:04:42.826 --> 00:04:43.896
We're moving on.

109
00:04:43.896 --> 00:04:45.530
We're moving on with life.

110
00:04:45.530 --> 00:04:46.676
And that's just that.

111
00:04:46.676 --> 00:04:49.261
The little neovim building thing
did actually end up building and

112
00:04:49.261 --> 00:04:50.491
everything looks fantastic.

113
00:04:50.491 --> 00:04:54.054
So if I now run neovim,
you'll notice it's at 10.1.

114
00:04:54.054 --> 00:04:55.020
Bada bing, bada boom.

115
00:04:55.020 --> 00:04:56.642
Five lines.
Looks everything looks great.

116
00:04:56.642 --> 00:04:59.853
All right, someone, I did see someone ask,
is all of that just?

117
00:04:59.853 --> 00:05:01.383
To build neovim?

118
00:05:01.383 --> 00:05:05.181
Well, no, it's to build anything, right?

119
00:05:05.181 --> 00:05:06.682
Because now I can have neovim.

120
00:05:06.682 --> 00:05:09.000
It's, I can have whatever I want.

121
00:05:09.000 --> 00:05:11.596
If we were to re execute any of
those things, we can have all that.

122
00:05:11.596 --> 00:05:13.900
I can hit run with just a foo so

123
00:05:13.900 --> 00:05:18.519
that way we skip over neovim
run the foo bar, fantastic.

124
00:05:18.519 --> 00:05:19.991
And it just allows for all that.

125
00:05:19.991 --> 00:05:25.346
And so there you go, step one of where I
think my environment's better than yours.

126
00:05:25.346 --> 00:05:29.024
Sorry, I'm sure yours is also very nice,
but I like mine better.

127
00:05:29.024 --> 00:05:32.553
Okay, so all we've talked about is just
getting software onto your machine or

128
00:05:32.553 --> 00:05:34.537
setting it up into a state
in which you want.

129
00:05:34.537 --> 00:05:38.332
But we haven't talked about dot files, the
configurations, the customizations, right?

130
00:05:38.332 --> 00:05:41.926
The good stuff, the gold of your
experience, right here, right?

131
00:05:41.926 --> 00:05:46.557
Well, for those are unfamiliar with the
term dot files, we're talking about like

132
00:05:46.557 --> 00:05:50.938
your bash RC, your zish RC, your vim RC,
all these are examples of dot files.

133
00:05:50.938 --> 00:05:55.928
They typically are ran before the program
that you're running setup is complete, and

134
00:05:55.928 --> 00:05:59.156
so they run at some point
within the startup lifecycle.

135
00:05:59.156 --> 00:06:01.521
I can't tell you where, but
they run at some point, right?

136
00:06:01.521 --> 00:06:02.647
Like your VimRC or

137
00:06:02.647 --> 00:06:07.163
Anit.Lua runs after some hydration
of the environment has happened.

138
00:06:07.163 --> 00:06:10.337
And then they'll run your script cuz
obviously like the Lua engine needs

139
00:06:10.337 --> 00:06:11.751
to be ready to be able to run Lua.

140
00:06:11.751 --> 00:06:15.200
So it's just like at some point
within the startup, it runs.

141
00:06:15.200 --> 00:06:18.267
All right, we got a question already.

142
00:06:18.267 --> 00:06:22.978
&gt;&gt; Speaker 3: Just one thing I did like
about the Ansible approach was having

143
00:06:22.978 --> 00:06:26.790
the SSH key ready to go for
cloning private repos.

144
00:06:26.790 --> 00:06:31.578
&gt;&gt; ThePrimeagen: So, UNO reverse, you can
still use like, so one thing we could do,

145
00:06:31.578 --> 00:06:36.712
remember how I had that whole like,
pip install Bonanzas going on here.

146
00:06:36.712 --> 00:06:38.195
We could have in here, Ansible.

147
00:06:38.195 --> 00:06:41.709
We could have inside of here,
some sort of Pip3 install ansible or

148
00:06:41.709 --> 00:06:43.422
however you want to install it.

149
00:06:43.422 --> 00:06:47.514
That way you have your vault and then you
can clone down your place with your keys.

150
00:06:47.514 --> 00:06:49.648
You can ansible vault it all out.

151
00:06:49.648 --> 00:06:52.217
Type in your little password because
it will prompt you right then and

152
00:06:52.217 --> 00:06:54.518
there for your password so
you don't have to do it at the very,

153
00:06:54.518 --> 00:06:57.442
very top of your program hoping you didn't
get it wrong until you get all the way

154
00:06:57.442 --> 00:06:58.844
down to the bottom where you need it.

155
00:06:58.844 --> 00:07:00.941
And so you'll have that nice little
ansible Ansible approach, and

156
00:07:00.941 --> 00:07:02.888
you can do it with multiple, and
you can have different keys for

157
00:07:02.888 --> 00:07:03.720
different ones, right?

158
00:07:03.720 --> 00:07:06.444
There's like a whole bunch of reasons
why it's actually better this way, and

159
00:07:06.444 --> 00:07:08.066
then you can just have it right then and
there.

160
00:07:08.066 --> 00:07:11.407
So you can still use Ansible Vault and
this approach.

161
00:07:11.407 --> 00:07:13.833
Nothing says they're
somehow mutually exclusive.

162
00:07:13.833 --> 00:07:15.716
You just don't have to use
Ansible to install everything.

163
00:07:15.716 --> 00:07:19.504
In fact, you can even use Ansible and
this approach, right?

164
00:07:19.504 --> 00:07:21.406
Nothing says you can do it all.

165
00:07:21.406 --> 00:07:24.509
This is kind of a do it all, do your
own adventure kind of approach here.

166
00:07:24.509 --> 00:07:28.459
It's just a really dumb script runner.

167
00:07:28.459 --> 00:07:32.489
And I just simply use it with the
convention of this starts my machine ready

168
00:07:32.489 --> 00:07:33.855
to be production ready.

169
00:07:33.855 --> 00:07:34.629
That's it.

170
00:07:34.629 --> 00:07:36.501
And so it's a pretty simple approach.

171
00:07:36.501 --> 00:07:37.664
Yes?

172
00:07:37.664 --> 00:07:42.089
&gt;&gt; Speaker 3: Your approach for
running this kind of script setup on like

173
00:07:42.089 --> 00:07:47.521
a server, would you do that on a server
versus your own personal setup?

174
00:07:47.521 --> 00:07:50.498
&gt;&gt; ThePrimeagen: So I'm building
this just for just for myself.

175
00:07:50.498 --> 00:07:54.407
If it was a server, you'd probably want
to use something that's a little bit more

176
00:07:54.407 --> 00:07:55.777
production grade, right?

177
00:07:55.777 --> 00:07:59.158
No one's relying on, like when you
have to set up a new computer,

178
00:07:59.158 --> 00:08:01.566
people usually have
the expectation of a day.

179
00:08:01.566 --> 00:08:03.715
If you're ready in five minutes,
that's fantastic.

180
00:08:03.715 --> 00:08:05.911
If you're ready in thirty minutes,
that's fantastic, right?

181
00:08:05.911 --> 00:08:10.424
That's good and so I don't I'm not
considering this like a server experience.

182
00:08:10.424 --> 00:08:12.420
The only thing I said
is that with Ansible,

183
00:08:12.420 --> 00:08:15.143
this it's supposed it's
designed to work with servers.

184
00:08:15.143 --> 00:08:18.316
That's why it has an inventory, a list
of nodes that you're actually working

185
00:08:18.316 --> 00:08:20.863
with in executing these commands
remotely as long as you have,

186
00:08:20.863 --> 00:08:22.515
the proper authority on that computer.

187
00:08:22.515 --> 00:08:25.828
So for me, I just went really hard,
and wow, I have a server, right?

188
00:08:25.828 --> 00:08:26.938
And that's all that it was.

189
00:08:26.938 --> 00:08:31.101
And so that's why we are, that's why I
wouldn't recommend this for your company,

190
00:08:31.101 --> 00:08:32.634
cuz that'd be crazy, right?

191
00:08:32.634 --> 00:08:35.726
That would probably be a I mean,
maybe it would work, I don't know, but

192
00:08:35.726 --> 00:08:37.720
I just don't think I'd
wanna live that life.

193
00:08:37.720 --> 00:08:41.498
Maybe I would wanna live that life,
I'd have to see the situation before.

194
00:08:41.498 --> 00:08:43.827
Four, I'd say yes or no to it.

195
00:08:43.827 --> 00:08:45.538
&gt;&gt; Speaker 3: The senior engineer answer.

196
00:08:45.538 --> 00:08:47.042
It depends.

197
00:08:47.042 --> 00:08:50.107
&gt;&gt; ThePrimeagen: It depends,
and you're doing it wrong.

198
00:08:50.107 --> 00:08:52.128
And I also think the bike
shed should be blue.

