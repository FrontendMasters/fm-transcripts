WEBVTT

1
00:00:00.000 --> 00:00:04.680
[MUSIC]

2
00:00:04.680 --> 00:00:08.787
&gt;&gt; Ben: So you've seen a handful of
examples of these queries now, and

3
00:00:08.787 --> 00:00:13.591
we've talked about, we've seen some
pixel-based media queries, and

4
00:00:13.591 --> 00:00:16.170
we've seen em-based media queries.

5
00:00:16.170 --> 00:00:20.110
And at this point we have
pretty much shifted all of our

6
00:00:20.110 --> 00:00:24.210
media queries we're writing
using the unit of measure now.

7
00:00:24.210 --> 00:00:29.270
Ems are relative, they're based on
the initial font size declaration.

8
00:00:29.270 --> 00:00:33.380
So if you define somewhere above,
like in the body or something,

9
00:00:33.380 --> 00:00:38.780
a font size of 100%, then you're kind
of evening out the playing field.

10
00:00:38.780 --> 00:00:44.240
Later on then, you can say a font
size of 1 inside of a say a div,

11
00:00:44.240 --> 00:00:48.210
and then inside of that
a paragraph if you did 2 ems,

12
00:00:48.210 --> 00:00:51.720
it would double in size because
that's of the relative to its parent.

13
00:00:51.720 --> 00:00:55.890
Inside of that paragraph, if you say you
had a strong tag, and you set the font

14
00:00:55.890 --> 00:00:59.760
size to .5, that would actually be
cutting it in half back to one.

15
00:00:59.760 --> 00:01:03.230
So you gonna kind of do some
math to calculate those things.

16
00:01:03.230 --> 00:01:04.320
It gets a little bit confusing.

17
00:01:04.320 --> 00:01:09.256
We just recently put out a nice mix in for
pre-compilers.

18
00:01:09.256 --> 00:01:11.713
It's built to work with SaaS, but

19
00:01:11.713 --> 00:01:16.626
it could be ported to any of the other
pre-compilers that uses rems,

20
00:01:16.626 --> 00:01:21.950
which is a newer unit of measure,
but it doesn't sort of it doesn't.

21
00:01:21.950 --> 00:01:26.920
Basically what it does is it uses
the same base for all the measurements so

22
00:01:26.920 --> 00:01:32.380
instead of getting sort of additive as
you get deeper deeper nested in your CSS,

23
00:01:32.380 --> 00:01:36.540
it would just go back to that core,
that root font size.

24
00:01:36.540 --> 00:01:39.760
That's a much more usable cause you're
not always doing math to figure out how

25
00:01:39.760 --> 00:01:41.740
what the font size is
actually gonna translate to.

26
00:01:43.670 --> 00:01:47.430
That's out on GitHub, and there's
a code pen, I think, for it as well.

27
00:01:47.430 --> 00:01:50.360
But we use ems because they're
a more proportional unit of measure,

28
00:01:50.360 --> 00:01:54.020
and we're trying to get away
from thinking in pixels.

29
00:01:54.020 --> 00:01:59.050
And because your layout now will adjust
based on font size, so if you have a user

30
00:01:59.050 --> 00:02:02.820
who happens to have poor vision, or has
increased the font size for some reason,

31
00:02:02.820 --> 00:02:06.500
you can still serve them an appropriate
layout based on that font size and

32
00:02:06.500 --> 00:02:08.640
line lengths and those sorts of things.

33
00:02:08.640 --> 00:02:11.628
And it just, it generally adheres a bit
more to the principles of responsive,

34
00:02:11.628 --> 00:02:14.273
we could have a beer later tonight
if you want to talk more about this.

35
00:02:14.273 --> 00:02:17.946
I'll give you a quick demo of
a site that's built using ems and

36
00:02:17.946 --> 00:02:20.216
show you the difference that you get.

37
00:02:34.734 --> 00:02:37.525
&gt;&gt; Ben: So
Jason Grigsby is out in Portland.

38
00:02:37.525 --> 00:02:38.934
I mentioned him a little earlier.

39
00:02:38.934 --> 00:02:43.730
This is his company Cloud Four, and
one of his, actually lies are right here.

40
00:02:43.730 --> 00:02:46.170
She just wrote not maybe
a few months back.

41
00:02:46.170 --> 00:02:50.180
They redesigned this site, and she did
a lot of the front end development on it,

42
00:02:50.180 --> 00:02:53.664
and wrote a big article on
their blog cloudfour.com,

43
00:02:53.664 --> 00:02:56.840
about why they've chosen
to start using ems as well.

44
00:02:56.840 --> 00:02:57.430
Really good read.

45
00:02:57.430 --> 00:02:59.907
If you want to get into the real nitty
gritty of what the difference is and

46
00:02:59.907 --> 00:03:01.451
how you can calculate
some of those things.

47
00:03:01.451 --> 00:03:06.151
But I'll show you their site, so you know
you've got fairly standard layout here.

48
00:03:06.151 --> 00:03:12.102
And as you adjust, kinda get this nav that
like sticks to the top of that carousel,

49
00:03:12.102 --> 00:03:13.750
or that hero section.

50
00:03:13.750 --> 00:03:16.525
And then the further down you go,

51
00:03:16.525 --> 00:03:21.580
youshift into this sort of having
a menu kind of layout here.

52
00:03:23.100 --> 00:03:26.734
Right, so fairly simple design.

53
00:03:26.734 --> 00:03:31.294
Nothing overly exciting here, right,
it's really very, very standard.

54
00:03:31.294 --> 00:03:34.880
But watch what happens as
I decrease my font size.

55
00:03:36.140 --> 00:03:40.068
So if I decrease and
refresh you'll see that.

56
00:03:40.068 --> 00:03:40.913
Whoops.

57
00:03:43.043 --> 00:03:50.196
&gt;&gt; Ben: As I take my width down
&gt;&gt; Ben: you'll see that I have to get

58
00:03:50.196 --> 00:03:55.804
much more narrow with my browser width
before I trigger this next layout.

59
00:03:55.804 --> 00:03:58.439
Okay, if I take my font size back up,

60
00:03:58.439 --> 00:04:03.199
I have to refresh because it's not
sort of responding right away,

61
00:04:03.199 --> 00:04:08.129
but I can actually trigger a different
layout based on the font size.

62
00:04:08.129 --> 00:04:10.544
So this is kind of fascinating.

63
00:04:10.544 --> 00:04:16.787
I can refresh, bump my font size way up,
and even without it a massive resolution,

64
00:04:16.787 --> 00:04:23.680
a massive view port width, I'm triggering
the smallest layout that they have.

65
00:04:23.680 --> 00:04:27.541
And what's cool is that the line length
is sort of maintained because we've done,

66
00:04:27.541 --> 00:04:28.980
we've taken this approach.

67
00:04:28.980 --> 00:04:33.480
So this takes a little bit of
experimentation to play around with, but

68
00:04:33.480 --> 00:04:37.790
this is where I think most people
are gonna be going eventually, okay?

69
00:04:37.790 --> 00:04:40.670
And if you take a look at
the Media Query bookmarklet,

70
00:04:40.670 --> 00:04:45.820
you'll see here that she's got
a ton of all these based queries.

71
00:04:45.820 --> 00:04:49.280
You know, hey, look at this.

72
00:04:49.280 --> 00:04:52.052
They're not using a screen end.

73
00:04:52.052 --> 00:04:54.321
Way to go.
Way to go, Jason.

74
00:04:55.730 --> 00:04:56.490
Cool.

75
00:04:57.780 --> 00:04:59.540
Okay, so questions on that?

76
00:04:59.540 --> 00:05:02.520
I know that can be a bit confusing.

77
00:05:02.520 --> 00:05:06.280
But if you can get kind of just get into a
browser and start experimenting with some

78
00:05:06.280 --> 00:05:09.931
of those things, and the Media Query
bookmarklet that Rob wrote will will give

79
00:05:09.931 --> 00:05:13.713
you a good understanding of where you are
at any given point as you adjust, okay?

80
00:05:13.713 --> 00:05:16.297
All right, cool.

81
00:05:26.531 --> 00:05:27.108
&gt;&gt; Ben: Okay.

82
00:05:33.028 --> 00:05:35.547
&gt;&gt; Ben: Let's see, trying to think.

83
00:05:35.547 --> 00:05:38.923
I've got the next section here is
on retrofitting, but I'm wondering,

84
00:05:38.923 --> 00:05:42.090
it's probably going to take more than,
we have about a half an hour.

85
00:05:43.100 --> 00:05:46.180
Give me a second here to
take a look at my notes, and

86
00:05:46.180 --> 00:05:48.160
see if there's another section
that we can squeeze in.

