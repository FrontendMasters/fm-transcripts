WEBVTT

1
00:00:00.000 --> 00:00:04.273
[MUSIC]

2
00:00:04.273 --> 00:00:07.580
&gt;&gt; Ben Callahan: So
let's let's move on to content.

3
00:00:08.710 --> 00:00:10.828
Once we have a grid that's
based on proportions,

4
00:00:10.828 --> 00:00:14.200
the content that we put into
that grid has to also adjust.

5
00:00:16.260 --> 00:00:19.680
So obviously text is gonna do
a pretty good job by default, right?

6
00:00:19.680 --> 00:00:24.550
If you take all your styles out of any
website just disable stylesheets and

7
00:00:24.550 --> 00:00:27.310
look at the text and
adjust the width of the viewport.

8
00:00:27.310 --> 00:00:29.180
The text is going to reflow fairly simply.

9
00:00:29.180 --> 00:00:30.530
That's how the Web works.

10
00:00:30.530 --> 00:00:32.340
But when you start to
think about images and

11
00:00:32.340 --> 00:00:37.110
videos and other kinds of content, that's
when things get a little bit tricky.

12
00:00:37.110 --> 00:00:41.690
So actually it's actually not
that difficult what we found and

13
00:00:41.690 --> 00:00:44.800
Ethan kind of calls this out
in his article and his book.

14
00:00:44.800 --> 00:00:49.239
But using just the simple-max width rule
on an image, obviously, we would probably

15
00:00:49.239 --> 00:00:53.509
want to be a bit more specific with your
selector, but just for explanation sake.

16
00:00:53.509 --> 00:00:58.410
What this does is it ask the image
to render at its native resolution,

17
00:00:58.410 --> 00:01:04.110
unless It's wider than its container and
in that case it'll just be 100%.

18
00:01:04.110 --> 00:01:07.609
So this will never let the image get
larger than its native resolution,

19
00:01:07.609 --> 00:01:10.030
which is kind of what's important.

20
00:01:10.030 --> 00:01:15.030
You could also take that max off and
just set the width as a percentage.

21
00:01:15.030 --> 00:01:18.610
The danger you might run into there
would be if the width of the container

22
00:01:18.610 --> 00:01:20.930
is greater than the width,
the native width,

23
00:01:20.930 --> 00:01:23.680
of the image it'll actually
try to scale that image up.

24
00:01:23.680 --> 00:01:29.034
So if you just set it to 100% and it's
just sitting in the browser and you change

25
00:01:29.034 --> 00:01:35.030
the browser width, the browser will try
to scale that image as wide as it can.

26
00:01:35.030 --> 00:01:37.303
So, let's take a quick look here.

27
00:01:37.303 --> 00:01:41.889
In that 01-RWD101 folder there's a br-3.

28
00:01:47.723 --> 00:01:55.140
&gt;&gt; Ben Callahan: So, I have in
the body here, I'm looking at br-3.

29
00:01:55.140 --> 00:01:59.280
I've added a little poem
in span-3 the top div,

30
00:01:59.280 --> 00:02:02.580
I've added a title and
a little poem in an image.

31
00:02:04.460 --> 00:02:07.430
I like bacon so
we're gonna talk about bacon a little bit.

32
00:02:07.430 --> 00:02:10.610
We have any vegetarians in the room?

33
00:02:10.610 --> 00:02:13.666
There's a picture of celery in
the image folder if you would like

34
00:02:13.666 --> 00:02:14.577
to change you can.

35
00:02:14.577 --> 00:02:17.390
&gt;&gt; Speaker 2: That okay I recognize
the deliciousness of bacon.

36
00:02:17.390 --> 00:02:18.700
&gt;&gt; Ben Callahan: All right.

37
00:02:18.700 --> 00:02:19.310
Excellent.

38
00:02:19.310 --> 00:02:23.340
So this is what happens when I throw
a big old picture of bacon and

39
00:02:23.340 --> 00:02:26.320
a poem about bacon into the existing

40
00:02:26.320 --> 00:02:28.440
sort of flexible grid system that
we've been playing with, okay?

41
00:02:30.000 --> 00:02:31.180
Can I get a volunteer?

42
00:02:31.180 --> 00:02:31.900
I need a volunteer.

43
00:02:33.710 --> 00:02:35.415
&gt;&gt; Speaker 2: Sure I will.
&gt;&gt; Ben Callahan: Man this is too perfect.

44
00:02:35.415 --> 00:02:37.436
Will you read this poem for us?

45
00:02:37.436 --> 00:02:39.159
&gt;&gt; Speaker 2: Absolutely I will.

46
00:02:39.159 --> 00:02:46.220
You taste so good with fat a dripping, and
in the pan you're finger licking good.

47
00:02:46.220 --> 00:02:50.956
I never cook you in portions meager, you
kiss and pop, which makes me eager to chop

48
00:02:50.956 --> 00:02:54.883
you down with eggs and toast, but
I love you bacon, I love you most.

49
00:02:54.883 --> 00:02:55.564
It's true.

50
00:02:55.564 --> 00:02:56.107
&gt;&gt; Ben Callahan: Great.

51
00:02:56.107 --> 00:02:58.320
Thank you, okay, excellent.

52
00:02:58.320 --> 00:03:02.170
Okay, so you can see what happens as
soon as we throw this picture in.

53
00:03:02.170 --> 00:03:04.014
Okay, the text itself is adjusting, right?

54
00:03:04.014 --> 00:03:07.950
Like we said that the text will
just flow into this container.

55
00:03:07.950 --> 00:03:10.316
But look what happens with that image?

56
00:03:10.316 --> 00:03:13.589
All right, that's not acceptable, right?

57
00:03:13.589 --> 00:03:17.417
So what I would like to do is
again all I've done is add

58
00:03:17.417 --> 00:03:21.820
this little bit of content into
that span three in the body.

59
00:03:21.820 --> 00:03:22.700
But I'd like for

60
00:03:22.700 --> 00:03:28.244
you guys to do is add a little selector at
the bottom of that style block in br-3.

61
00:03:28.244 --> 00:03:33.530
And apply a rule to images that
will adjust the width of this image

62
00:03:33.530 --> 00:03:35.670
in the layout itself, okay?

63
00:03:35.670 --> 00:03:37.118
I'll give you a couple of minutes and
then we'll jump back in.

64
00:03:49.995 --> 00:03:51.839
&gt;&gt; Ben Callahan: Okay,
we got some width set on an image,

65
00:03:51.839 --> 00:03:53.214
playing around a little bit.

66
00:03:53.214 --> 00:03:54.652
Yeah, cool.

67
00:03:54.652 --> 00:03:55.803
Let's take a look.

68
00:04:05.579 --> 00:04:07.000
&gt;&gt; Ben Callahan: [COUGH] So.

69
00:04:12.156 --> 00:04:14.157
&gt;&gt; Ben Callahan: In br-4,
I've added a really,

70
00:04:14.157 --> 00:04:18.095
just a dead simple little rule here for
images, okay, right here.

71
00:04:20.976 --> 00:04:24.372
&gt;&gt; Ben Callahan: And what this does
is just floats the image right.

72
00:04:24.372 --> 00:04:27.352
And then I'm experimenting to start with,
with a max width of 100%.

73
00:04:27.352 --> 00:04:30.190
So if we open this up in a browser.

74
00:04:32.600 --> 00:04:36.350
So here is the version prior,
version three.

75
00:04:38.370 --> 00:04:41.820
And with just those two little styles,
this is kind of what we get.

76
00:04:41.820 --> 00:04:44.792
All of sudden that image is kind of
fitting inside of its container, right?

77
00:04:44.792 --> 00:04:50.030
So, at this point the container that
that image lives in is actually

78
00:04:50.030 --> 00:04:53.490
more narrow than the image itself,
the native resolution of the image.

79
00:04:53.490 --> 00:04:57.225
So that max width the rule is kicking in
and it's saying 100%, max width 100%.

80
00:04:57.225 --> 00:05:03.930
Now as we start to adjust this wider,
text is still reflowing you can see.

81
00:05:05.370 --> 00:05:08.070
At some point here, we're gonna
reach a width where, right here,

82
00:05:08.070 --> 00:05:11.902
where the container is now wider than
the native resolution of the image.

83
00:05:11.902 --> 00:05:15.120
So the image is floated right, so it's
kind of hanging on to the right edge of

84
00:05:15.120 --> 00:05:19.292
that container and
the text now can flow up around it.

85
00:05:19.292 --> 00:05:23.530
So this max-width is a nice rule

86
00:05:23.530 --> 00:05:27.900
because you know it won't let that
image scale up above its native res.

87
00:05:27.900 --> 00:05:31.990
Now max-width is supported in,
I think it's IE6 or something.

88
00:05:31.990 --> 00:05:37.270
So, in that case you might service a style
which is a width based style there.

89
00:05:37.270 --> 00:05:38.630
Now let's play around
with some other stuff.

90
00:05:38.630 --> 00:05:41.691
Instead of max-width, if we just do width,

91
00:05:41.691 --> 00:05:46.010
we're gonna see that
the behavior's almost identical.

92
00:05:46.010 --> 00:05:50.213
Until you reach a point where now
it's gonna just go ahead and try and

93
00:05:50.213 --> 00:05:52.740
scale that image as big, and it will do.

94
00:05:52.740 --> 00:05:56.590
This image actually looks pretty good
with the browser scaling it up in Chrome.

95
00:05:56.590 --> 00:05:58.969
But you'll see that it'll
just keep getting big,

96
00:05:58.969 --> 00:06:01.470
it'll just get as wide as it can,
it will honor that.

97
00:06:01.470 --> 00:06:05.780
You've set it, you want it to be 100%
of its container, it's gonna do it.

98
00:06:05.780 --> 00:06:11.559
Now we could also just say I want
this to always be 50%, right?

99
00:06:13.729 --> 00:06:15.986
&gt;&gt; Ben Callahan: Refresh,
it's taking it way down now and

100
00:06:15.986 --> 00:06:18.320
it will always be 50% of the container.

101
00:06:18.320 --> 00:06:21.706
If I used a max-width, 50%,

102
00:06:21.706 --> 00:06:26.260
the difference would be when 50% of
this container is wider than the native

103
00:06:26.260 --> 00:06:30.320
resolution, that image will still not
get larger than its native, okay.

104
00:06:30.320 --> 00:06:31.810
So you'd have to be up,
I think this is 850,

105
00:06:31.810 --> 00:06:36.500
you'd have to be way up, 1700 pixels or
something, to reach that point.

106
00:06:37.760 --> 00:06:38.515
Make sense, max-width?

107
00:06:38.515 --> 00:06:42.144
Okay, very cool.

108
00:06:45.480 --> 00:06:47.540
So, that's images right?

109
00:06:47.540 --> 00:06:49.640
Pretty simple actually to handle that.

110
00:06:49.640 --> 00:06:52.780
But let's talk a little bit about video.

111
00:06:52.780 --> 00:06:55.130
How many of you guys have sites
that have some video on them?

112
00:06:56.160 --> 00:06:59.421
How are you getting the video in?

113
00:06:59.421 --> 00:07:01.253
Is this like a hosted solution.

114
00:07:01.253 --> 00:07:03.632
&gt;&gt; [INAUDIBLE]
&gt;&gt; Ben Callahan: Okay,

115
00:07:03.632 --> 00:07:05.117
are you doing like an IFrame?

116
00:07:05.117 --> 00:07:10.950
Are you using a video tag or
what do you, how are you, do you know?

117
00:07:10.950 --> 00:07:13.475
&gt;&gt; Speaker 3: He just pulls
it in to a [INAUDIBLE].

118
00:07:13.475 --> 00:07:16.700
&gt;&gt; Ben Callahan: Okay, right so
there's lots of different ways.

119
00:07:16.700 --> 00:07:19.920
If you're doing something other
than like say a YouTube or

120
00:07:19.920 --> 00:07:22.730
Vimeo embed, which is generally a lot.

121
00:07:22.730 --> 00:07:24.870
I think YouTube right now
is still giving IFrames,

122
00:07:24.870 --> 00:07:28.020
is how they give you the embed
code is a little IFrame.

123
00:07:28.020 --> 00:07:32.340
And if you're doing anything other than
an IFrame those other objects that you can

124
00:07:32.340 --> 00:07:35.740
embed actually these kinds of rules
work really well with them too.

125
00:07:35.740 --> 00:07:38.740
Setting the width and
they'll maintain their own aspect ratio.

126
00:07:38.740 --> 00:07:39.870
All those things.

127
00:07:39.870 --> 00:07:44.190
One thing you'll note about the image,
if we start to set heights on the image,

128
00:07:44.190 --> 00:07:46.961
we're gonna start messing with this, okay?

129
00:07:46.961 --> 00:07:50.130
Cuz if you say you set
the height to some percentage or

130
00:07:50.130 --> 00:07:54.030
something weird like that, then now
the aspect ratio calculations are off.

131
00:07:54.030 --> 00:07:55.645
So you need to leave
the height setting off.

132
00:07:55.645 --> 00:07:59.195
And we're going to talk in the
retrofitting section about ways that you

133
00:07:59.195 --> 00:08:02.080
can override some inline
styles if you need to.

134
00:08:02.080 --> 00:08:04.530
If you have a system that's
generating that stuff.

135
00:08:04.530 --> 00:08:07.030
But for
a lot of the object in embed and video,

136
00:08:07.030 --> 00:08:11.370
all those kinds of tags you can actually
get them to respond very similarly.

137
00:08:11.370 --> 00:08:13.810
But let's talk about a scenario
that's a little bit more challenging.

138
00:08:15.080 --> 00:08:18.030
Say you've got your video
hosted on YouTube and

139
00:08:18.030 --> 00:08:22.100
you want to have a video that exists
in a site that is responsive.

140
00:08:22.100 --> 00:08:25.650
So how are we gonna handle
a scenario like that?

141
00:08:25.650 --> 00:08:31.000
If you look a little bit further down
in that repository there's this,

142
00:08:31.000 --> 00:08:35.420
see this ratios, 11-Ratios and
12-Ratios-Review.

143
00:08:35.420 --> 00:08:39.677
Let's take a look at 11-Ratios real
quick and there's a ratio.html.

144
00:08:41.715 --> 00:08:47.595
&gt;&gt; Ben Callahan: You can see the markup
inside the body is really simple here,

145
00:08:47.595 --> 00:08:48.800
okay?

146
00:08:48.800 --> 00:08:52.196
I basically got a complete two divs,
a nested div basically, and

147
00:08:52.196 --> 00:08:54.686
one's container and
one is a class of element.

148
00:08:54.686 --> 00:08:58.350
Nothing inside of them at all,
nothing in there, okay.

149
00:08:58.350 --> 00:09:03.469
And then in the style block here, just
again, just to kind of prove the concept,

150
00:09:03.469 --> 00:09:07.837
I've given this container a relative
position, a height of 0, and

151
00:09:07.837 --> 00:09:09.674
a padding-bottom 50%.

152
00:09:09.674 --> 00:09:12.670
We're gonna talk about this rule, this is
kind of where the magic is happening here.

153
00:09:13.710 --> 00:09:17.930
And then inside of that is the element,
which is absolutely positioned.

154
00:09:17.930 --> 00:09:20.570
Top left zero and it's given a width and
a height of 100%.

155
00:09:20.570 --> 00:09:24.910
And I've just given it a background
color so that we can see it, okay?

156
00:09:24.910 --> 00:09:26.740
If I open this bad boy up in the browser.

157
00:09:30.330 --> 00:09:34.790
What's happening is this is an empty div,
okay, that's maintaining its aspect ratio.

158
00:09:35.890 --> 00:09:36.763
This is called intrinsic ratios.

159
00:09:36.763 --> 00:09:38.399
Really, really simple to do.

160
00:09:38.399 --> 00:09:41.607
I mean, you saw this is all CSS, there's
no JavaScript, there's nothing, okay?

161
00:09:41.607 --> 00:09:47.000
This thing will maintain its two to one
ratio with no content inside of it at all.

162
00:09:47.000 --> 00:09:51.686
So you can imagine that if you could
get an IFrame or a container around

163
00:09:51.686 --> 00:09:56.770
that IFrame to kinda do that, you could
actually get video to respond like this.

164
00:09:56.770 --> 00:09:59.310
The way this works is actually so simple.

165
00:09:59.310 --> 00:10:03.649
There's a height of zero set on
the container and a padding-bottom of 50%.

166
00:10:03.649 --> 00:10:06.445
In CSS, whenever you apply a padding,

167
00:10:06.445 --> 00:10:11.330
you're using a percentage,
it's always based on the width.

168
00:10:11.330 --> 00:10:13.680
So even though we're setting
something that's on the bottom,

169
00:10:13.680 --> 00:10:16.580
which is impacting
the height of the element,

170
00:10:16.580 --> 00:10:20.480
the calculation of 50% is based
on the width of the element.

171
00:10:20.480 --> 00:10:25.335
So what that means is this item will
always be twice as wide as it is tall.

172
00:10:25.335 --> 00:10:28.257
50% of the width will be
applied to create the height.

173
00:10:28.257 --> 00:10:32.947
I could set this to 25% and you'd see,

174
00:10:32.947 --> 00:10:36.439
now it's four to one, right?

175
00:10:36.439 --> 00:10:39.222
So, you can do the math on a 16:9 video.

176
00:10:39.222 --> 00:10:43.519
You can look at in YouTube, if you look at
the IFrame they'll put little widths and

177
00:10:43.519 --> 00:10:46.120
heights attributes right on there.

178
00:10:46.120 --> 00:10:48.550
And you can use those,
do the math on that quickly, and

179
00:10:48.550 --> 00:10:53.190
get whatever the percentage of your
specific video's aspect ratio is.

180
00:10:53.190 --> 00:10:55.271
And let's take a look at this
actually with a video embedded.

181
00:10:57.725 --> 00:11:02.823
&gt;&gt; Ben Callahan: So this is an example
file that's got some other stuff in it and

182
00:11:02.823 --> 00:11:09.240
I've thrown in a video literally
straight from YouTube right here, okay.

183
00:11:09.240 --> 00:11:13.546
Its got a width of 516, a height of 315.

184
00:11:13.546 --> 00:11:17.550
This is cut and pasted straight
from YouTube's video embed, okay.

185
00:11:17.550 --> 00:11:19.394
And if I open this up
here without applying

186
00:11:19.394 --> 00:11:24.253
any styles,
&gt;&gt; Ben Callahan: We get the same

187
00:11:24.253 --> 00:11:26.584
kind of thing that we got with the image,
right?

188
00:11:26.584 --> 00:11:30.420
So this IFrame isn't really
being controlled in any way and

189
00:11:30.420 --> 00:11:33.590
you'll see it's not a good experience,
right?

190
00:11:33.590 --> 00:11:40.130
But if we open this up on the review
where I've applied a few styles.

191
00:11:40.130 --> 00:11:43.134
And I'll show you the styles that
I've applied, it's pretty simple.

192
00:11:47.115 --> 00:11:50.572
&gt;&gt; Ben Callahan: So again,
same kind of stuff, the containing block,

193
00:11:50.572 --> 00:11:54.039
this is just for positioning,
this video holder div.

194
00:11:55.056 --> 00:11:57.830
Padding-bottom of 56.25% which

195
00:11:57.830 --> 00:12:01.680
was calculated based on those width the
height attributes in that IFrame, okay.

196
00:12:01.680 --> 00:12:02.777
315 divided by 560.

197
00:12:02.777 --> 00:12:07.365
And then again the height of zero in the
same stuff for the IFrame to position it.

198
00:12:07.365 --> 00:12:14.731
If I open this up,
&gt;&gt; Ben Callahan: We'll

199
00:12:14.731 --> 00:12:17.733
see that this video itself, and
embedded straight from YouTube,

200
00:12:17.733 --> 00:12:19.460
is actually responding really well.

201
00:12:20.540 --> 00:12:22.470
So this is purely CSS.

202
00:12:22.470 --> 00:12:24.960
I mean, this is very easy to do.

203
00:12:24.960 --> 00:12:27.660
So this kind of technique,
intrinsic ratios, can be used for

204
00:12:27.660 --> 00:12:29.860
a lot of different things.

205
00:12:29.860 --> 00:12:31.680
This is just one example.

206
00:12:31.680 --> 00:12:33.860
Who plays Tiny Wings, anybody?

207
00:12:33.860 --> 00:12:34.601
Cool game, isn't it?

208
00:12:34.601 --> 00:12:35.654
I love that game.

209
00:12:35.654 --> 00:12:38.198
[LAUGH] Okay.

210
00:12:38.198 --> 00:12:40.806
Questions on content?

211
00:12:40.806 --> 00:12:43.390
Getting content to flux?

212
00:12:43.390 --> 00:12:44.871
Yeah.
&gt;&gt; Speaker 4: How do you handle the retina

213
00:12:44.871 --> 00:12:45.846
display with that?

214
00:12:45.846 --> 00:12:46.614
&gt;&gt; Ben Callahan: With the video?

215
00:12:46.614 --> 00:12:47.542
&gt;&gt; Speaker 4: With the image.

216
00:12:47.542 --> 00:12:50.460
&gt;&gt; Ben Callahan: With the image,
there's so many ways to do this.

217
00:12:50.460 --> 00:12:53.310
Actually last night, Mark and
I were having dinner and

218
00:12:53.310 --> 00:12:57.560
talking about, I don't know, and
he said even, I think that maybe last week

219
00:12:57.560 --> 00:13:01.446
you guys talked a little bit about
this compressive images technique.

220
00:13:01.446 --> 00:13:05.782
I mean, we're gonna talk about media
queries here and there are ways to sort

221
00:13:05.782 --> 00:13:09.667
of, using media queries,
check the pixel density of the display.

222
00:13:09.667 --> 00:13:14.469
And then in that case you could serve
a different image if your image is being

223
00:13:14.469 --> 00:13:15.590
served in CSS.

224
00:13:15.590 --> 00:13:19.621
If it's being served in the DOM
like an image, an inline image tag,

225
00:13:19.621 --> 00:13:22.405
you can serve a larger image and
scale it down.

226
00:13:22.405 --> 00:13:26.958
Obviously, which is kind of what you
would have to do to get the proper

227
00:13:26.958 --> 00:13:28.697
amount of pixel density.

228
00:13:30.450 --> 00:13:33.080
There's also some pretty cool
techniques we're in a look at in

229
00:13:33.080 --> 00:13:34.410
the JavaScript section.

230
00:13:34.410 --> 00:13:37.920
Scott Jehl's Picturefill is
incredibly useful and could work for

231
00:13:37.920 --> 00:13:39.510
that kind of thing as well.

232
00:13:39.510 --> 00:13:41.290
So, we gonna cover those.

233
00:13:41.290 --> 00:13:43.280
It's kind of scattered throughout the day.

234
00:13:43.280 --> 00:13:47.202
If I don't get your question answered
enough, just come talk to me and

235
00:13:47.202 --> 00:13:48.668
we'll look at your case.

236
00:13:48.668 --> 00:13:49.291
Was something back there, yeah?

237
00:13:49.291 --> 00:13:51.910
&gt;&gt; Speaker 5: Yeah, so
I was curious about adding bottom and

238
00:13:51.910 --> 00:13:55.213
I was really surprised when
you said it's based on width.

239
00:13:55.213 --> 00:13:55.797
&gt;&gt; Ben Callahan: Yeah.

240
00:13:55.797 --> 00:13:58.250
&gt;&gt; Speaker 5: To me I would
almost think that's like a bug.

241
00:13:58.250 --> 00:14:02.300
Cuz I would expect bottom on
top to be based on height.

242
00:14:02.300 --> 00:14:03.382
Was that intentional so

243
00:14:03.382 --> 00:14:05.940
that you could do this kind of-
&gt;&gt; Ben Callahan: Well, I don't think that

244
00:14:05.940 --> 00:14:09.840
it was intended for this kind of use,
but that is how the spec is written.

245
00:14:09.840 --> 00:14:13.278
So it is as indicated in the spec.

246
00:14:13.278 --> 00:14:15.451
Yeah, it's kind of weird.

247
00:14:15.451 --> 00:14:16.428
&gt;&gt; Speaker 5: Yeah.

248
00:14:16.428 --> 00:14:17.683
&gt;&gt; Ben Callahan: Yeah?

249
00:14:17.683 --> 00:14:18.604
&gt;&gt; Speaker 5: It works well.

250
00:14:18.604 --> 00:14:20.860
&gt;&gt; Speaker 6: Are there any compatibility
issues with older browsers?

251
00:14:20.860 --> 00:14:25.880
&gt;&gt; Ben Callahan: There are some with,
let me think where.

252
00:14:27.420 --> 00:14:30.280
Well, the cases where it usually comes up

253
00:14:30.280 --> 00:14:33.790
are generally browsers that don't
support media queries either.

254
00:14:33.790 --> 00:14:37.480
And so if you're not serving a responsive
layout to a browser because it doesn't

255
00:14:37.480 --> 00:14:41.990
support some of the other advanced
features and that sometimes it's a wash.

256
00:14:41.990 --> 00:14:43.686
But there are some other workarounds too.

257
00:14:43.686 --> 00:14:47.778
And there's also, if you have to have
something that works in like IE6 or

258
00:14:47.778 --> 00:14:48.568
something.

259
00:14:48.568 --> 00:14:54.150
There's some JavaScript libraries that
do sort of make that function fit vid.

260
00:14:54.150 --> 00:14:55.751
We're gonna take a look at
that too a little later, so.

261
00:14:58.919 --> 00:14:59.481
&gt;&gt; Ben Callahan: Anything else there?

262
00:14:59.481 --> 00:15:02.511
Cool, all right.

263
00:15:06.989 --> 00:15:07.670
&gt;&gt; Ben Callahan: Let's see here.

264
00:15:20.918 --> 00:15:23.590
&gt;&gt; Ben Callahan: Okay, so
intrinsic ratios, really cool stuff.

265
00:15:23.590 --> 00:15:26.680
You can use that in a lot
of different ways, okay.

266
00:15:26.680 --> 00:15:28.230
Experiment with some of those things,
it's fun.

