WEBVTT

1
00:00:00.000 --> 00:00:05.024
[MUSIC]

2
00:00:05.024 --> 00:00:08.510
&gt;&gt; Ben Callahan: Let's talk a little
bit about off canvas layouts.

3
00:00:09.630 --> 00:00:11.620
This is fun stuff.

4
00:00:11.620 --> 00:00:15.260
Luke Wroblewski written a pretty good
wrap up of some of the patterns that

5
00:00:15.260 --> 00:00:16.340
are starting to emerge here.

6
00:00:16.340 --> 00:00:18.710
He's done these nice
little diagrams as well.

7
00:00:18.710 --> 00:00:20.192
They kind of illustrate what's happening.

8
00:00:20.192 --> 00:00:23.321
I'm gonna show you three and
you kind of get a picture for

9
00:00:23.321 --> 00:00:25.194
what we're talking about here.

10
00:00:28.657 --> 00:00:31.025
&gt;&gt; Ben Callahan: So
here's an example of one and

11
00:00:31.025 --> 00:00:35.680
I can take my browser down here and
you'll see what happens.

12
00:00:37.200 --> 00:00:40.380
So when I do this,
I'm given menu and extra.

13
00:00:41.610 --> 00:00:44.410
We just talked about this navigation
pattern where the menu lives in

14
00:00:44.410 --> 00:00:45.380
the footer.

15
00:00:45.380 --> 00:00:47.820
Is repositioned up so
that's what he's using here and

16
00:00:47.820 --> 00:00:51.650
then extra slides content
in from off canvas.

17
00:00:51.650 --> 00:00:53.470
So, that's why it's called off canvas.

18
00:00:53.470 --> 00:00:56.450
If you look at sort of
the viewport as the canvas and

19
00:00:56.450 --> 00:01:01.084
you think of your content shifting behind,
pretty simple concept.

20
00:01:01.084 --> 00:01:05.750
One thing that we really start
to see is you'll notice that

21
00:01:05.750 --> 00:01:09.400
there's an animation that's actually
kind of critical for this to work,

22
00:01:09.400 --> 00:01:13.230
because you want your user to understand
that you've actually shifted things.

23
00:01:13.230 --> 00:01:17.140
In addition to that, they're leaving
some content from that mains

24
00:01:17.140 --> 00:01:21.220
column still visible, just kind of
implying that the content didn't leave,

25
00:01:21.220 --> 00:01:25.850
it's still there, and if you want to
get to it you can just click back or

26
00:01:25.850 --> 00:01:28.520
click to close the extra content.

27
00:01:28.520 --> 00:01:33.020
So I like those kinds of cues that they're
giving to the user to really imply what's

28
00:01:33.020 --> 00:01:33.920
actually happening.

29
00:01:36.510 --> 00:01:40.280
One example there, and then here's
a more complex version of the same,

30
00:01:40.280 --> 00:01:43.880
you can see they have these sort of
three different asides in this column.

31
00:01:43.880 --> 00:01:48.140
We take this down and it's a single link
here extra which gives them all the nav

32
00:01:48.140 --> 00:01:50.950
and a tabable container
in the left column.

33
00:01:50.950 --> 00:01:55.290
So you can see we could do a ton of stuff
with these kinds of techniques, right.

34
00:01:55.290 --> 00:01:57.840
I mean this is just
really basic concepting.

35
00:01:59.240 --> 00:02:02.620
Again still sort of implying that
the content hasn't actually left,

36
00:02:02.620 --> 00:02:04.099
it's just off to the side.

37
00:02:05.120 --> 00:02:07.980
And then this is probably the most
beautiful implementation I've seen.

38
00:02:07.980 --> 00:02:12.200
I really think this is
nice because I think.

39
00:02:12.200 --> 00:02:14.680
And I've actually written
about this in an article on

40
00:02:14.680 --> 00:02:17.620
our blog called cross width consistency.

41
00:02:17.620 --> 00:02:18.890
And I think that there's something to it.

42
00:02:18.890 --> 00:02:21.640
I hear a lot of people saying, and we'll
talk a little bit more about this, but

43
00:02:21.640 --> 00:02:23.790
I hear a lot of people saying
the users don't resize their browsers.

44
00:02:23.790 --> 00:02:28.610
But actually we users do resize their
browsers maybe not in the same way that we

45
00:02:28.610 --> 00:02:32.115
developers do but
they view your site on a small device.

46
00:02:32.115 --> 00:02:36.330
They view it more 13% of people
have all three of these categories.

47
00:02:36.330 --> 00:02:39.500
You better bet they're going to
the same websites on those devices.

48
00:02:39.500 --> 00:02:43.560
I may have used Twitter and the web here
I may use it on my desktop or my laptop.

49
00:02:43.560 --> 00:02:46.860
I'm mixed I'm changing my
browser width for those sites.

50
00:02:46.860 --> 00:02:52.140
So we can with a technique like
this we can start to imply and

51
00:02:52.140 --> 00:02:54.970
imply the same layouts even
at smaller resolutions.

52
00:02:54.970 --> 00:02:58.590
So watch what happens as I take this down,
basic three column layout.

53
00:03:00.270 --> 00:03:03.960
And now I've gotten to a point where
the extra is off to the right.

54
00:03:03.960 --> 00:03:06.800
This is the same content that
has always lived on the right

55
00:03:06.800 --> 00:03:09.620
at larger resolutions and
it still lives on the right.

56
00:03:09.620 --> 00:03:18.200
If I continue down again I get
the same kind of thing, left, right.

57
00:03:18.200 --> 00:03:21.750
So all I've really done is adapt my large

58
00:03:21.750 --> 00:03:27.155
resolution layout to work In
the same way at smaller resolutions.

59
00:03:27.155 --> 00:03:29.650
That familiarity is really
kind of key to usability.

60
00:03:29.650 --> 00:03:32.970
So I think this is a really potent,

61
00:03:32.970 --> 00:03:34.620
there's a lot of stuff
that could happen here.

62
00:03:34.620 --> 00:03:39.830
Actually some of this stuff started to
initiate because of what was happening in

63
00:03:39.830 --> 00:03:41.150
native apps.

64
00:03:41.150 --> 00:03:45.320
I think Facebook now is even has something
kind of like this where you kind of on

65
00:03:45.320 --> 00:03:49.120
the the native app itself you touch and
it kind of slides over you still

66
00:03:49.120 --> 00:03:53.760
have that implied content column.

67
00:03:53.760 --> 00:03:58.720
We've actually when we talk about
retrofitting we'll talk a little

68
00:03:58.720 --> 00:04:02.330
bit about some of the other things but
we've actually had found a use case for

69
00:04:02.330 --> 00:04:07.020
this in retrofitting as well
where we're given a very simple.

70
00:04:07.020 --> 00:04:08.700
In fact if we look at the code here.

71
00:04:09.700 --> 00:04:12.270
Now that's not a good way to do it,
let's do it this way.

72
00:04:12.270 --> 00:04:16.740
If you actually look at the markup
of this page, it's very very simple.

73
00:04:21.590 --> 00:04:22.580
Let's do it like this.

74
00:04:23.900 --> 00:04:27.360
Okay so I have a header which
is all the way across the top.

75
00:04:27.360 --> 00:04:28.607
I have a nav item.

76
00:04:32.605 --> 00:04:35.200
&gt;&gt; Ben Callahan: Where did
my nav go there it is.

77
00:04:35.200 --> 00:04:37.660
Nav right, which is on the left.

78
00:04:37.660 --> 00:04:40.910
I have section in the center and
a section on the right.

79
00:04:40.910 --> 00:04:43.540
Okay, that's pretty common for
three column layout,

80
00:04:43.540 --> 00:04:46.670
three grouping elements to let those
three columns live next to each other.

81
00:04:46.670 --> 00:04:47.720
Dead simple, right.

82
00:04:47.720 --> 00:04:49.600
Pretty much every site
that's three columns,

83
00:04:49.600 --> 00:04:52.440
that's not table based layout is
gonna have something like that.

84
00:04:52.440 --> 00:04:57.080
What that means, is that you could
use fairly standard existing markup

85
00:04:57.080 --> 00:05:00.530
to make this kind of layout
work at smaller resolutions.

86
00:05:00.530 --> 00:05:03.980
You could just a little bit of margin is
all really is that's really happening

87
00:05:03.980 --> 00:05:07.830
here, negative margins and some shifting
and add a little JavaScript to that and

88
00:05:07.830 --> 00:05:12.340
you can literally write in a new
navigation menu to navigate those things.

89
00:05:12.340 --> 00:05:15.400
I mean you can really do some amazing
things without having to go in and

90
00:05:15.400 --> 00:05:18.390
creating and you can create
a much better experience for

91
00:05:18.390 --> 00:05:21.990
users than just a shrunk
down version of that site.

92
00:05:21.990 --> 00:05:25.686
So I think there's a lot to be done
here probably a lot more experimentation

93
00:05:25.686 --> 00:05:26.576
that we'll see.

94
00:05:35.776 --> 00:05:38.094
&gt;&gt; Ben Callahan: And
then just a final point here.

95
00:05:40.927 --> 00:05:45.213
&gt;&gt; Ben Callahan: There's there are so
many more solutions out there for

96
00:05:45.213 --> 00:05:48.110
JavaScript for picture for images.

97
00:05:48.110 --> 00:05:52.329
But be careful with any of those that
are JavaScript based because any time

98
00:05:52.329 --> 00:05:56.820
the image element actually lives in the
DOM and your using JavaScript to try and

99
00:05:56.820 --> 00:06:00.038
go back at load time and
adjust that storage attribute.

100
00:06:00.038 --> 00:06:02.449
Those kinds of solutions,
there's tons of them out there.

101
00:06:02.449 --> 00:06:06.326
They're gonna run into a lot of the same
kinds of challenges where browsers

102
00:06:06.326 --> 00:06:10.077
are doing a lot more to try and speed
up the process of the apparent loading

103
00:06:10.077 --> 00:06:14.325
of a page or doing things like speculative
parsing where they're looking ahead in

104
00:06:14.325 --> 00:06:18.530
the DOM and making firing off additional
requests even before they get there.

105
00:06:18.530 --> 00:06:21.630
So, even if you've got a blocking script,
you better bet that that

106
00:06:21.630 --> 00:06:25.270
browser is making requests for
images that exist further down in the DOM.

107
00:06:25.270 --> 00:06:28.060
So there's all kinds of race
conditions that happen.

108
00:06:28.060 --> 00:06:30.960
You may end up actually
doing more damage than good.

109
00:06:30.960 --> 00:06:34.630
But that shouldn't keep you from
experiment with these things, okay?

110
00:06:34.630 --> 00:06:36.010
Performance is important.

111
00:06:36.010 --> 00:06:37.950
Access is more important, okay?

112
00:06:37.950 --> 00:06:39.190
This is my belief.

113
00:06:39.190 --> 00:06:43.100
Christopher says it great mobile
later is better than mobile never.

114
00:06:43.100 --> 00:06:45.270
If you don't do anything to your site,

115
00:06:46.770 --> 00:06:49.920
your users are still gonna
download those big images, right.

116
00:06:49.920 --> 00:06:51.170
[LAUGH] I mean,

117
00:06:51.170 --> 00:06:54.860
they're still gonna go to your site
whether you've made it responsive or not.

118
00:06:54.860 --> 00:06:57.590
And they're gonna still make all
those requests for those big images.

119
00:06:57.590 --> 00:07:01.120
So even if all you're doing is
scaling them in the browser,

120
00:07:01.120 --> 00:07:03.700
you're still giving them at
a more appropriate resolution.

121
00:07:03.700 --> 00:07:06.630
You still can make your text more readable
you still can make your navigation more

122
00:07:06.630 --> 00:07:08.250
usable.

123
00:07:08.250 --> 00:07:11.860
But there are some that
are evolving that are much more

124
00:07:11.860 --> 00:07:13.944
sort of emerging patterns
that are much more usable.

125
00:07:13.944 --> 00:07:19.020
So Christopher great book out by the way
called Mobilizing Websites check that out

126
00:07:19.020 --> 00:07:24.990
if you're in a scenario we've got to
work with a lot of legacy sites, okay.

127
00:07:26.480 --> 00:07:30.010
That's what I've got for us to sort
of finish up the morning with here.

128
00:07:30.010 --> 00:07:32.190
And I think it's about time for
a break for lunch.

129
00:07:32.190 --> 00:07:35.850
And then we'll come back in,
and jump into some more code.

