WEBVTT

1
00:00:00.320 --> 00:00:02.400
&gt;&gt; Will Sentance: Let's have thumbs,
this is hard stuff.

2
00:00:02.400 --> 00:00:03.210
This is complicated.

3
00:00:03.210 --> 00:00:08.110
It's not conceptually as demanding as
closure, but it's just bloody complicated.

4
00:00:09.280 --> 00:00:10.330
Yup.

5
00:00:10.330 --> 00:00:12.480
&gt;&gt; Speaker 2: I don't know
if they're quick, but-

6
00:00:12.480 --> 00:00:12.991
&gt;&gt; Will Sentance: Can I look at them

7
00:00:12.991 --> 00:00:13.508
on here as well?

8
00:00:13.508 --> 00:00:16.920
I haven't pulled them up on here as well.

9
00:00:16.920 --> 00:00:18.060
Well, the first one,

10
00:00:18.060 --> 00:00:21.450
the difference between object
underscore proto underscore.

11
00:00:21.450 --> 00:00:24.320
We can see the difference
between user 2 underscore,

12
00:00:24.320 --> 00:00:29.350
underscore proto underscore,
and this guy prototype up here.

13
00:00:29.350 --> 00:00:32.680
These are the two fundamentally,
this is why I don't love calling,

14
00:00:32.680 --> 00:00:37.300
saying user 2's prototype are these
functions up, is this object up here.

15
00:00:37.300 --> 00:00:41.440
I don't love saying that for the very
reason that underscore proto underscore is

16
00:00:41.440 --> 00:00:46.430
the reference created,
whereas prototype is the set of functions

17
00:00:46.430 --> 00:00:51.630
that we want our object to get returned
from user creator to have access

18
00:00:51.630 --> 00:00:56.599
to in the_project_property, okay?

19
00:00:56.599 --> 00:00:58.440
And the other question.

20
00:00:58.440 --> 00:01:01.250
Is there a difference between the use
in values you use to create the values

21
00:01:01.250 --> 00:01:01.840
the one you use?

22
00:01:03.890 --> 00:01:08.260
Yeah, Alex, the first one is
going to call user creator,

23
00:01:08.260 --> 00:01:12.220
but you still have to call the function,
okay?

24
00:01:12.220 --> 00:01:13.800
And yeah, exactly.

25
00:01:13.800 --> 00:01:19.510
As Rishab says, new calls a function,
you have to call the function.

26
00:01:19.510 --> 00:01:21.992
Okay, all right.

27
00:01:23.774 --> 00:01:25.879
&gt;&gt; Will Sentance: Okay,
at this point we're at 350.

28
00:01:25.879 --> 00:01:30.720
I think, we're gonna see,
while it's all fresh in our mind.

29
00:01:30.720 --> 00:01:34.385
We're gonna see one final,
let's have funds first.

30
00:01:34.385 --> 00:01:35.900
I don't know what happened here,

31
00:01:35.900 --> 00:01:38.050
clarification, move me along,
move me along.

32
00:01:38.050 --> 00:01:40.046
Everyone stands out,
it's good to have clarifications.

33
00:01:40.046 --> 00:01:42.171
Griffin has a clarification.

34
00:01:42.171 --> 00:01:44.800
Shelby, Griffin, go ahead.

35
00:01:44.800 --> 00:01:49.350
&gt;&gt; Griffin: So if you wanted to
put an increment function when you

36
00:01:49.350 --> 00:01:54.160
declared the user create function, can you
do it at that point, or do you have to

37
00:01:54.160 --> 00:01:58.962
do user creator.prototype.increment
equals function?

38
00:01:58.962 --> 00:02:01.570
&gt;&gt; Will Sentance: You're like, hold on,
can I just sort of in-user create an?

39
00:02:01.570 --> 00:02:04.949
It was in Python or other languages,
we put it all there, don't we?

40
00:02:04.949 --> 00:02:05.770
&gt;&gt; Griffin: Yeah.

41
00:02:05.770 --> 00:02:06.696
&gt;&gt; Will Sentance: Not in JavaScript.

42
00:02:06.696 --> 00:02:07.210
&gt;&gt; Griffin: No, okay.

43
00:02:07.210 --> 00:02:10.310
&gt;&gt; Will Sentance: Or wait,
thank you for teeing up Solution 4.

44
00:02:10.310 --> 00:02:14.094
So people who don't know the languages go,
well, let's see first benefits,

45
00:02:14.094 --> 00:02:14.949
faster to write.

46
00:02:14.949 --> 00:02:19.100
This is still standard
practice in modern JavaScript.

47
00:02:19.100 --> 00:02:23.131
Negatives, 9 out of 10 developers
have no idea how it works and

48
00:02:23.131 --> 00:02:26.311
therefore do not pass senior interviews.

49
00:02:26.311 --> 00:02:27.345
This stuff is required.

50
00:02:27.345 --> 00:02:30.390
Again to code smith, well, not so much.

51
00:02:30.390 --> 00:02:32.180
This stuff is day three of code smith.

52
00:02:32.180 --> 00:02:34.670
You need to know this stuff to
get a senior developer position.

53
00:02:34.670 --> 00:02:39.022
You need to know this stuff to get
a mid-level developer position.

54
00:02:39.022 --> 00:02:40.680
You have to have these pieces down.

