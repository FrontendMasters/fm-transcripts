WEBVTT

1
00:00:00.180 --> 00:00:02.414
&gt;&gt; Will Sentance: All right,
let's have fun.

2
00:00:02.414 --> 00:00:03.621
I'm not accepting this.

3
00:00:03.621 --> 00:00:05.115
I have clarifications.

4
00:00:05.115 --> 00:00:08.428
I'm clear that our functions,
when treated like functions,

5
00:00:08.428 --> 00:00:11.499
by adding parens on the end of them,
behave as functions.

6
00:00:11.499 --> 00:00:17.583
If they're treated like an object,
use a creator.andrew.

7
00:00:17.583 --> 00:00:18.832
What would this return for?

8
00:00:18.832 --> 00:00:21.452
What would this evaluate to, Andrea?

9
00:00:21.452 --> 00:00:25.528
&gt;&gt; Andrea: It's gonna be
an object with Andrew.

10
00:00:25.528 --> 00:00:28.270
&gt;&gt; Will Sentance: Well, but
with me retrieving this.

11
00:00:28.270 --> 00:00:30.033
So here we've already for
the Andrew property.

12
00:00:30.033 --> 00:00:34.571
So a user created .andrew,
I'd be retrieving three, exactly.

13
00:00:34.571 --> 00:00:37.289
Okay, so let's have thumbs on that notion.

14
00:00:37.289 --> 00:00:38.253
It's weird.

15
00:00:38.253 --> 00:00:41.146
Part of it's is just I need
more time to embrace it.

16
00:00:41.146 --> 00:00:47.986
So Andrew's got a thumb Katie's got a
thumb, medium thumb, sort of like a thumb.

17
00:00:47.986 --> 00:00:51.029
Art is good to go,
Lindsey has a medium thumb.

18
00:00:51.029 --> 00:00:51.662
Griffin has one.

19
00:00:51.662 --> 00:00:53.318
Griffin, will you kick us off?

20
00:00:53.318 --> 00:00:57.043
&gt;&gt; Griffin: So if you were to use
the user creator as a call back function,

21
00:00:57.043 --> 00:01:01.880
can you use that user creator object
data in that function that you're using-

22
00:01:01.880 --> 00:01:03.050
&gt;&gt; Will Sentance: You certainly can, but

23
00:01:03.050 --> 00:01:04.260
I'll just make this point.

24
00:01:04.260 --> 00:01:05.310
&gt;&gt; Griffin: Yeah.
&gt;&gt; Will Sentance: That wouldn't standard

25
00:01:05.310 --> 00:01:05.950
practice.

26
00:01:05.950 --> 00:01:07.260
&gt;&gt; Griffin: Yeah.
&gt;&gt; Will Sentance: Just cuz it's there,

27
00:01:07.260 --> 00:01:07.990
doesn't mean we use it.

28
00:01:07.990 --> 00:01:10.680
We use it for
this one thing we're gonna talk about.

29
00:01:10.680 --> 00:01:14.780
It isn't standard practice to
bundle them in that sense.

30
00:01:14.780 --> 00:01:20.172
They're functions, it is all fundamentally
objects but they use as functions, okay?

31
00:01:20.172 --> 00:01:21.397
But we can store stuff here.

32
00:01:21.397 --> 00:01:28.639
We're gonna see in a moment, we're gonna
store something here, something here.

33
00:01:28.639 --> 00:01:31.042
We are gonna store something here.

34
00:01:31.042 --> 00:01:32.308
All right, everyone got that?

35
00:01:32.308 --> 00:01:34.222
Okay, Griffin, go ahead.

36
00:01:34.222 --> 00:01:38.994
&gt;&gt; Griffin: Again, with the memory, could
you kind of, instead of using the backpack

37
00:01:38.994 --> 00:01:41.216
of the lexicon thing, could you-
&gt;&gt; Will Sentance: Lexical scope.

38
00:01:41.216 --> 00:01:46.140
&gt;&gt; Griffin: [LAUGH] Yeah, could you
store it into that function's object?

39
00:01:46.140 --> 00:01:49.230
&gt;&gt; Will Sentance: This is where it
gets a bit hard with hard parts,

40
00:01:49.230 --> 00:01:53.800
is we're seeing all of the underlying
things, features of JavaScript.

41
00:01:54.970 --> 00:01:57.019
Some of them you can cross-use.

42
00:01:58.180 --> 00:02:00.660
This one, the lexical scope is a special,

43
00:02:00.660 --> 00:02:05.720
magical property that is not involved in
conventional sort of objects like this.

44
00:02:05.720 --> 00:02:07.440
It's hidden off.

45
00:02:07.440 --> 00:02:10.140
You're right, we said functions have
a hidden square brackets quote,

46
00:02:10.140 --> 00:02:11.370
that's not this guy here.

47
00:02:11.370 --> 00:02:14.210
That's a really nice
clarification by Griffin.

48
00:02:14.210 --> 00:02:16.739
This object definitely is
not that scope property,

49
00:02:16.739 --> 00:02:19.048
do you remember that guy
which held on to state?

50
00:02:19.048 --> 00:02:21.069
Live in date, okay.

51
00:02:21.069 --> 00:02:22.535
That's an interesting one, man.

52
00:02:22.535 --> 00:02:23.510
Definitely not.

53
00:02:23.510 --> 00:02:26.334
No, stop.
Stop it.

54
00:02:26.334 --> 00:02:29.653
That's not allowed and doesn't, okay.

55
00:02:29.653 --> 00:02:31.093
Lindsay?

56
00:02:31.093 --> 00:02:33.364
&gt;&gt; Lindsay: I don't know.
I think I got lost somewhere,

57
00:02:33.364 --> 00:02:36.710
but what's the function in
user creator right now?

58
00:02:38.328 --> 00:02:40.528
&gt;&gt; Will Sentance: User
creator was declared.

59
00:02:40.528 --> 00:02:42.170
&gt;&gt; Lindsay: Maybe C, Mr. Pelting.

60
00:02:42.170 --> 00:02:44.180
&gt;&gt; Will Sentance: We
are going to see in a second,

61
00:02:44.180 --> 00:02:47.530
but user creator was declared
as a function at the top right?

62
00:02:47.530 --> 00:02:51.880
Whenever you declare a function,
by default, just by its' very nature,

63
00:02:51.880 --> 00:02:53.710
it's also an object.

64
00:02:54.780 --> 00:02:56.270
Okay, just declaring that.

65
00:02:56.270 --> 00:02:59.340
Talk me through what we did
in line 1 there, Lindsey.

66
00:02:59.340 --> 00:03:00.970
&gt;&gt; Lindsay: Declared the function.

67
00:03:00.970 --> 00:03:01.710
User creator.

68
00:03:01.710 --> 00:03:02.391
&gt;&gt; Will Sentance: User creator.

69
00:03:02.391 --> 00:03:04.405
We're allowed to draw
functions in a box like that?

70
00:03:04.405 --> 00:03:05.200
&gt;&gt; Lindsay: Mm-hm.

71
00:03:05.200 --> 00:03:09.336
&gt;&gt; Will Sentance: What do we do in
a few lines down in let user1 =.

72
00:03:09.336 --> 00:03:15.630
&gt;&gt; Lindsay: We declared a variable and
assigned it.

73
00:03:15.630 --> 00:03:18.720
The whatever,
the user creator will return.

74
00:03:18.720 --> 00:03:20.550
&gt;&gt; Will Sentance: Great,
go run that functionality.

75
00:03:20.550 --> 00:03:22.130
And I know I have to run
the functionality, why?

76
00:03:22.130 --> 00:03:24.180
&gt;&gt; Lindsay: The prens.

77
00:03:24.180 --> 00:03:25.130
&gt;&gt; Will Sentance: The prens, good.

78
00:03:25.130 --> 00:03:31.310
But let's not forget, if in the next
line I was to write usercreator.andrew,

79
00:03:31.310 --> 00:03:37.020
in other words treating usercreator as an
object JavaScript is not gonna complain.

80
00:03:37.020 --> 00:03:40.710
It's gonna go, yeah, sure, yes,
I'm a function, but I'm also an object.

81
00:03:40.710 --> 00:03:43.520
You treat me like a function,
I run like a function.

82
00:03:43.520 --> 00:03:46.130
You put something in me like an object,
and

83
00:03:46.130 --> 00:03:48.750
now these start to become
weird things to say.

84
00:03:48.750 --> 00:03:51.543
You put something in me like an object,
I behave as an object.

85
00:03:51.543 --> 00:03:54.696
That is just how it is.

86
00:03:54.696 --> 00:03:56.835
Okay, Lindsay, so it is a function.

87
00:03:56.835 --> 00:03:58.150
Nothing has changed.

88
00:03:58.150 --> 00:04:02.629
But if I were to treat it like
an object: usercreator and

89
00:04:02.629 --> 00:04:05.967
said usercreator.andrew=3, then,

90
00:04:05.967 --> 00:04:11.517
if I had to console log my usercreator,
I'd still see the function.

91
00:04:11.517 --> 00:04:15.988
But if I had to console log my user
creator with a special Chrome dev tool,

92
00:04:15.988 --> 00:04:20.166
down arrow, I would see the function,
but also in the properties,

93
00:04:20.166 --> 00:04:23.717
I would see some other properties,
and our andrew : 3.

94
00:04:23.717 --> 00:04:27.003
Okay, so
this is not surface level, really.

95
00:04:27.003 --> 00:04:30.634
We're not gonna be doing this day-to-day,
but it's there.

96
00:04:30.634 --> 00:04:32.165
This is our day to day.

97
00:04:32.165 --> 00:04:35.416
This is what the function really is but
we can't store some stuff here but

98
00:04:35.416 --> 00:04:37.347
we're not gonna be storing it ourselves.

99
00:04:37.347 --> 00:04:40.106
JavaScript stores stuff here for us.

100
00:04:40.106 --> 00:04:42.413
That's really what the real story is here.

101
00:04:42.413 --> 00:04:44.135
We created a function.

102
00:04:44.135 --> 00:04:46.417
But JavaScript can store
some stuff here for,

103
00:04:46.417 --> 00:04:50.105
we're definitely never storing Andrea
three ever ever ever on this object

104
00:04:50.105 --> 00:04:53.101
let's be really clear on that,
we're not doing that ever.

105
00:04:53.101 --> 00:04:57.438
We definitely, but
JavaScript can store stuff there for

106
00:04:57.438 --> 00:05:00.058
us because it has special goals and

107
00:05:00.058 --> 00:05:05.766
things it wants to achieve that we wanna
make available to you as a creator.

