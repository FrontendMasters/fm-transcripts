WEBVTT

1
00:00:00.000 --> 00:00:03.350
&gt;&gt; Will Sentance: Pair programming
info is without question,

2
00:00:03.350 --> 00:00:05.148
Codesmith wouldn't work without it.

3
00:00:05.148 --> 00:00:08.413
Of the 1,000 hours you spend at Codesmith,
about 400 I'd say are paired.

4
00:00:08.413 --> 00:00:10.907
Everyone's laptop pulled to.

5
00:00:10.907 --> 00:00:13.223
Thank you, Amin.

6
00:00:13.223 --> 00:00:14.290
Thank you, man.

7
00:00:14.290 --> 00:00:17.150
My passive aggressive thank you.
&gt;&gt; [LAUGH]

8
00:00:17.150 --> 00:00:18.150
&gt;&gt; Will Sentance: Never is a thank you be

9
00:00:18.150 --> 00:00:23.362
less grateful and more demanding.

10
00:00:23.362 --> 00:00:24.396
All right, so

11
00:00:24.396 --> 00:00:29.850
pair programming is the secret approach
to how you grow as an engineer.

12
00:00:29.850 --> 00:00:31.240
Let's look at it up here.

13
00:00:31.240 --> 00:00:35.240
There are two types of learning out there,
or there's a spectrum.

14
00:00:35.240 --> 00:00:37.240
Harder learning, easier learning.

15
00:00:37.240 --> 00:00:39.660
Easier learning spoon feeds.

16
00:00:39.660 --> 00:00:41.380
Maybe a diagram, no diagram.

17
00:00:41.380 --> 00:00:44.074
Easier learning is spoon feed,
that's fine.

18
00:00:44.074 --> 00:00:48.740
So people mention Code Academy,
Code School, wonderful.

19
00:00:48.740 --> 00:00:53.209
For your first 30, 50, even 100,
even 200 hours, great.

20
00:00:53.209 --> 00:00:58.160
You have to just keep going, just keep
pushing and if it spoon feeds you it keeps

21
00:00:58.160 --> 00:01:03.511
it going and repeating and re-writing
a function 100 times, that's worth it.

22
00:01:03.511 --> 00:01:07.608
But at some point,
you're gonna start a plateau in

23
00:01:07.608 --> 00:01:12.440
your growth if you follow
the spoon fed approach.

24
00:01:12.440 --> 00:01:16.940
You're gonna remain a junior developer,
an entry level developer.

25
00:01:16.940 --> 00:01:18.650
That's not what you want.

26
00:01:18.650 --> 00:01:24.980
You wanna grow into an autonomous
problem solving mid or senior developer.

27
00:01:24.980 --> 00:01:26.941
So how do you do it?

28
00:01:26.941 --> 00:01:29.297
You do hard learning.

29
00:01:29.297 --> 00:01:30.790
You don't do the easier learning for long.

30
00:01:30.790 --> 00:01:32.060
You do hard learning.

31
00:01:32.060 --> 00:01:38.762
So hard learning is things like, shout out
to Clara, I go and try and build projects.

32
00:01:38.762 --> 00:01:44.007
Hard learning is doing MIT OpenCourseWare
and all the problem sets of it.

33
00:01:44.007 --> 00:01:46.323
Hard learning is doing all those MOOCs and

34
00:01:46.323 --> 00:01:50.307
all the problems that's associated
with them, like Coursera, edX.

35
00:01:50.307 --> 00:01:54.298
Has anyone ever finished one of those?

36
00:01:54.298 --> 00:01:55.071
I doubt it.

37
00:01:55.071 --> 00:01:57.997
So maybe you have, this could be
a life changing moment for me.

38
00:01:57.997 --> 00:01:59.648
Which one did you finish
all the problem sets on?

39
00:01:59.648 --> 00:02:00.641
&gt;&gt; Speaker 2: It was not a programming

40
00:02:00.641 --> 00:02:03.292
one, I finished a different one.
&gt;&gt; Will Sentance: Okay, there you go,

41
00:02:03.292 --> 00:02:06.792
that's confirmed my bias, and?
&gt;&gt; Speaker 3: Coursera for Ruby.

42
00:02:06.792 --> 00:02:08.016
&gt;&gt; Will Sentance: You completed a full

43
00:02:08.016 --> 00:02:09.168
Coursera course?

44
00:02:09.168 --> 00:02:09.747
&gt;&gt; Speaker 3: Yeah.
&gt;&gt; Will Sentance: All

45
00:02:09.747 --> 00:02:10.477
the problem sets?

46
00:02:10.477 --> 00:02:11.688
&gt;&gt; Speaker 3: Yeah.
&gt;&gt; Will Sentance: Let's give her

47
00:02:11.688 --> 00:02:12.473
a round of applause.
&gt;&gt; [APPLAUSE]

48
00:02:12.473 --> 00:02:13.464
&gt;&gt; Will Sentance: My God,

49
00:02:13.464 --> 00:02:17.590
this is unprecedented.
&gt;&gt; Speaker 3: I felt obligated to,

50
00:02:17.590 --> 00:02:19.441
cuz my company paid for me to do it.

51
00:02:19.441 --> 00:02:21.214
[LAUGH]
&gt;&gt; Will Sentance: So I'll tell you this.

52
00:02:21.214 --> 00:02:23.497
Seriously, commitment device is very,
cuz it's incredibly hard, right?

53
00:02:23.497 --> 00:02:25.532
The hard learning, what happens?

54
00:02:25.532 --> 00:02:28.731
You hit a block, and
that's what hard learning is.

55
00:02:28.731 --> 00:02:32.164
At that moment you give up.

56
00:02:32.164 --> 00:02:37.008
So you grow as a problem solver and
you grow as a communicator when you hit

57
00:02:37.008 --> 00:02:40.318
a block,
when you cannot make this thing work and

58
00:02:40.318 --> 00:02:45.560
everything is screaming at you,
go do something, make a cup of tea.

59
00:02:45.560 --> 00:02:48.954
Just run,
you wanna get away from the struggle.

60
00:02:48.954 --> 00:02:50.196
But that's when you grow.

61
00:02:50.196 --> 00:02:52.924
That moment where you keep
pushing through is when you grow.

62
00:02:52.924 --> 00:02:57.096
If it takes a commitment device that your
company paying for you to do it, okay,

63
00:02:57.096 --> 00:02:57.796
that helps.

64
00:02:57.796 --> 00:02:59.406
But most of the time,

65
00:02:59.406 --> 00:03:04.516
we do tend to slip into the give up
approach when we do hard learning.

66
00:03:04.516 --> 00:03:06.395
But hard learning is where we grow.

67
00:03:06.395 --> 00:03:08.978
It's where you become an actual engineer.

68
00:03:08.978 --> 00:03:12.530
No one ever became an engineer,
unfortunately, by doing Code School.

69
00:03:12.530 --> 00:03:13.843
I love Code School man,

70
00:03:13.843 --> 00:03:17.400
JavaScript Road Trip if I hear
that theme tune one more time.

71
00:03:17.400 --> 00:03:21.868
But instead we fall into the trap
doing easier learning and

72
00:03:21.868 --> 00:03:26.987
thinking we're growing but
we hit plateau, like what we do next?

73
00:03:26.987 --> 00:03:29.473
Or we do hard learning but
we risk giving up.

74
00:03:29.473 --> 00:03:34.786
Now if we push through the hard learning,
suppose we're doing JavaScript 30,

75
00:03:34.786 --> 00:03:39.021
we're pushing through,
suppose we're doing, I don't know,

76
00:03:39.021 --> 00:03:42.410
Coursera or edX course and
we're pushing through.

77
00:03:42.410 --> 00:03:46.130
Great, now we move into this camp,

78
00:03:46.130 --> 00:03:50.979
this bit here,
even here we're not safe yet.

79
00:03:52.610 --> 00:03:56.100
There's a spectrum here of
how we do the hard learning.

80
00:03:56.100 --> 00:03:57.738
On one end is the researcher.

81
00:03:57.738 --> 00:04:01.870
So you'll say okay I've heard Will
say I should be doing hard learning.

82
00:04:01.870 --> 00:04:05.400
I've heard him say it,
I'm gonna go do a project.

83
00:04:05.400 --> 00:04:09.869
I'm gonna build a project or I'm gonna go
and do some hard code rule problems or

84
00:04:09.869 --> 00:04:13.811
I'm gonna do some Exercism.io problems,
they're gonna be hard.

85
00:04:13.811 --> 00:04:15.115
But I'm gonna do it.

86
00:04:15.115 --> 00:04:17.358
Okay, great!

87
00:04:17.358 --> 00:04:23.341
And then you see ten words in the question
that you don't know and you go, okay.

88
00:04:23.341 --> 00:04:24.670
You go look them up.

89
00:04:24.670 --> 00:04:29.946
And in that documentation,
you see another ten words you don't know.

90
00:04:29.946 --> 00:04:31.168
Okay, now it's half way through.

91
00:04:31.168 --> 00:04:33.928
Now it's lunch time, so you take a quick
break and then you come back and

92
00:04:33.928 --> 00:04:34.903
you go okay, I've got.

93
00:04:34.903 --> 00:04:37.844
And by the end of the day you have
read everything there is to know about

94
00:04:37.844 --> 00:04:39.942
object-oriented programming in JavaScript.

95
00:04:39.942 --> 00:04:42.921
But you have not put your
hands on the keyboard once.

96
00:04:42.921 --> 00:04:46.718
You've fallen into the researcher trap,
that's one extreme.

97
00:04:46.718 --> 00:04:49.299
You're doing hard learning but
you're not actually doing it.

98
00:04:49.299 --> 00:04:51.680
You're doing hard work but
you're not doing it, hard problems but

99
00:04:51.680 --> 00:04:52.817
you're not actually doing it.

100
00:04:52.817 --> 00:04:57.370
Other end, the Stack Overflow approach.

101
00:04:57.370 --> 00:04:58.664
This is the, I'm doing a project,

102
00:04:58.664 --> 00:05:01.690
I'm doing real hard learning,
this is real problem solving.

103
00:05:01.690 --> 00:05:03.340
Okay, this isn't working.

104
00:05:03.340 --> 00:05:04.870
Let me, there's a snippet.

105
00:05:04.870 --> 00:05:06.380
Man, someone has had this error before.

106
00:05:06.380 --> 00:05:10.370
Snippet from Stack Overflow,
take snippet, copy and paste.

107
00:05:10.370 --> 00:05:11.780
Still not quite working.

108
00:05:11.780 --> 00:05:14.190
Take another snippet, copy and paste.

109
00:05:14.190 --> 00:05:15.010
Okay, another snippet, copy paste.

110
00:05:15.010 --> 00:05:17.340
Okay, they're not working together.

111
00:05:17.340 --> 00:05:21.360
Post those three snippets and
ask someone how make them work.

112
00:05:21.360 --> 00:05:23.340
I was working Stack Overflow approach.

113
00:05:23.340 --> 00:05:24.230
You're doing hard learning.

114
00:05:24.230 --> 00:05:25.690
You're doing hard problem.

115
00:05:25.690 --> 00:05:28.370
But you're doing the just make it work.

116
00:05:28.370 --> 00:05:30.220
No idea, no idea how it's working.

117
00:05:32.270 --> 00:05:35.920
So it might seem we're stuck in
a catch 22 with all this stuff.

118
00:05:35.920 --> 00:05:38.970
That is a little arrow above
that pointing at the green area.

119
00:05:38.970 --> 00:05:42.350
Pair programming lands us
perfectly in the middle.

120
00:05:42.350 --> 00:05:47.000
Hopefully, if we do it right, between
the I must understand what I'm doing

121
00:05:47.000 --> 00:05:51.710
in the hard learning and
the other end, the make it work.

122
00:05:51.710 --> 00:05:56.430
Pair programming says
because you have to never

123
00:05:57.650 --> 00:06:00.030
problem solve,
never come up with a solution,

124
00:06:00.030 --> 00:06:02.800
never come up an approach to
solving the problem and type it.

125
00:06:03.980 --> 00:06:07.741
If you come up with the approach,
your hands are behind your back,

126
00:06:07.741 --> 00:06:12.514
you're having your partner interpret your
pseudocode as sort of way we talk through

127
00:06:12.514 --> 00:06:16.786
our code up here which there's gonna be
a lot more of it in the next two days.

128
00:06:16.786 --> 00:06:20.130
You have your partner
turn your pseudocode,

129
00:06:20.130 --> 00:06:25.760
your spoken verbalized problem
solving approach into actual code.

130
00:06:25.760 --> 00:06:30.870
What that means is you explain your
approach to solving the problem and

131
00:06:30.870 --> 00:06:35.490
then have them actually interpret
your approach into actual code.

132
00:06:35.490 --> 00:06:39.090
You have to understand it just
enough that you can explain it,

133
00:06:39.090 --> 00:06:41.780
like this is why we're gonna do it,
this is how we're gonna do it.

134
00:06:41.780 --> 00:06:43.800
But you don't have to understand it so

135
00:06:43.800 --> 00:06:46.660
much because you can't leave your
pair programming partner waiting

136
00:06:46.660 --> 00:06:49.780
there while you research all of
object-oriented programming.

137
00:06:49.780 --> 00:06:51.780
You've gotta at least
get your hands dirty,

138
00:06:51.780 --> 00:06:53.820
cuz they're sitting there waiting for you.

139
00:06:53.820 --> 00:06:57.720
But nor can you just plug and
play because you've gotta

140
00:06:57.720 --> 00:07:02.690
talk through the code line by line to them
and have them actually turn it into code.

141
00:07:02.690 --> 00:07:06.048
So you're forced to land in the green
area between on the one end,

142
00:07:06.048 --> 00:07:09.222
the must understand everything,
never get my hands dirty and

143
00:07:09.222 --> 00:07:13.216
the don't understand anything, but
hey I've put my hands on the keyboard.

144
00:07:13.216 --> 00:07:14.923
This is an incredibly powerful approach.

145
00:07:14.923 --> 00:07:15.717
Let's see it in action.

146
00:07:15.717 --> 00:07:19.087
Let's imagine we have Barb and Lindsay.

147
00:07:19.087 --> 00:07:24.869
Okay, so Barb and Lindsay, they see
a problem presented they want to work on.

148
00:07:24.869 --> 00:07:27.630
It says, okay, Barb and Lindsay,

149
00:07:27.630 --> 00:07:32.570
display ten tweets from
Twitter's API on the webpage.

150
00:07:32.570 --> 00:07:35.410
Ten tweet from Twitter's API
on the webpage.

151
00:07:35.410 --> 00:07:40.690
All right, so Barb says Lindsay, do you
know Twitter's API and she's like no.

152
00:07:40.690 --> 00:07:42.450
Let's go look at Twitter's API doc.

153
00:07:42.450 --> 00:07:45.149
Let's go look at the doc,
the documentation,

154
00:07:45.149 --> 00:07:47.450
see what it says about how the API works.

155
00:07:47.450 --> 00:07:51.603
And then they get there and
Barb sees, Lindsay,

156
00:07:51.603 --> 00:07:57.985
it says that it's gonna give us very
conveniently an array of ten strings,

157
00:07:57.985 --> 00:08:02.565
which are the ten tweets
directly from this address.

158
00:08:02.565 --> 00:08:04.302
And Lindsay's like, that's not likely.

159
00:08:04.302 --> 00:08:06.202
But Barb says yes it is.

160
00:08:06.202 --> 00:08:09.737
There it is, look that's what it says,
just an array of 10 strings effortless,

161
00:08:09.737 --> 00:08:10.855
easiest API in the world.

162
00:08:10.855 --> 00:08:15.240
No authentication, nothing,
just there they are.

163
00:08:15.240 --> 00:08:19.490
And Barb's really happy,
Barb look happier.

164
00:08:19.490 --> 00:08:20.260
Barb really happy.

165
00:08:20.260 --> 00:08:23.820
She's grinning she's so
happy with how easy this API is.

166
00:08:23.820 --> 00:08:29.060
And then Lindsay says actually let's look
again, I think there's a jQuery method

167
00:08:29.060 --> 00:08:34.970
that we can use to append strings to
a dumb element, to a bit of the page,

168
00:08:34.970 --> 00:08:38.420
to a dumb element, like an element with
a class name like tweets container.

169
00:08:39.650 --> 00:08:41.260
So now they've done their research.

170
00:08:41.260 --> 00:08:44.304
That was the research stage,
they did that together kinda hustling,

171
00:08:44.304 --> 00:08:45.190
figuring that out.

172
00:08:45.190 --> 00:08:48.874
Now they move into
the driver navigator stage.

173
00:08:48.874 --> 00:08:53.232
So let's say Barb says hey Lindsay I've

174
00:08:53.232 --> 00:08:58.240
actually got an idea how
we can approach this.

175
00:08:58.240 --> 00:09:00.340
Do you mind if I navigate?

176
00:09:00.340 --> 00:09:05.030
So Barb's job is now gonna be to
talk through an approach to solving

177
00:09:05.030 --> 00:09:09.654
this problem, and her hands
are never gonna touch the keyboard.

178
00:09:09.654 --> 00:09:13.669
If she feels, man, Lindsay just,
I know what I want you to do,

179
00:09:13.669 --> 00:09:17.978
that's the moment where her technical
communication gets to level up.

180
00:09:17.978 --> 00:09:22.746
Cuz she needs to be able to explicate how
to solve the problem to Lindsay such that

181
00:09:22.746 --> 00:09:25.750
Lindsay can actually type
it out on the keyboard.

182
00:09:25.750 --> 00:09:26.907
So for example,

183
00:09:26.907 --> 00:09:32.380
Barb says all right Lindsay let's
start by declaring a function.

184
00:09:32.380 --> 00:09:34.960
Let's call it append tweets.

185
00:09:36.290 --> 00:09:40.224
Let's have it be passed the parameter,
let's call it tweets array,

186
00:09:40.224 --> 00:09:41.634
that's a placeholder.

187
00:09:41.634 --> 00:09:47.690
And the body of the function,
let's iterate through that tweets array,

188
00:09:47.690 --> 00:09:52.085
loop through it,
take each string, each tweet, and

189
00:09:52.085 --> 00:09:57.184
pass the tweet string to
jQuery's built-in append method.

190
00:09:57.184 --> 00:10:01.905
And let's called that append method on
the DOM element with the class name,

191
00:10:01.905 --> 00:10:04.056
let's call it tweets container.

192
00:10:04.056 --> 00:10:05.549
Let's call it that.

193
00:10:05.549 --> 00:10:09.274
And now, at this point, so
they've used their research, and

194
00:10:09.274 --> 00:10:14.350
Barb has spoken in pseudocode, and
she's never put her hands on the keyboard.

195
00:10:14.350 --> 00:10:19.338
And now, Lindsay, she's our driver,
so she's actually at the keyboard.

196
00:10:19.338 --> 00:10:22.064
She's going, okay,
declare a function, append tweets.

197
00:10:22.064 --> 00:10:28.118
All right, function append tweets parens,
tweets array is the parameter,

198
00:10:28.118 --> 00:10:32.495
okay tweets array, close parens,
open curly braces,

199
00:10:32.495 --> 00:10:37.539
iterate through the input array,
four in parens let i equal 0.

200
00:10:37.539 --> 00:10:45.004
And at no point did Barb say Lindsay,
function, append tweets, open paren.

201
00:10:45.004 --> 00:10:50.570
No she was saying all this precise
pseudocode, which we'll be working

202
00:10:50.570 --> 00:10:56.056
on today as Amin said we are declaring
the function multiplied by two.

203
00:10:56.056 --> 00:11:01.190
We are declaring output and
assigning it to the return value

204
00:11:01.190 --> 00:11:06.930
of the call two multiplied by
two with the argument four.

205
00:11:06.930 --> 00:11:14.750
That pseudo code is what Lindsay's turning
into actual code on the keyboard, okay.

206
00:11:14.750 --> 00:11:19.080
What this does is it ensures that Barb has
enough understanding to be able to talk

207
00:11:19.080 --> 00:11:22.300
through it, but not too much that
she's stopped and not coded.

208
00:11:22.300 --> 00:11:30.080
And that Lindsay has the ability to
interpret that precise pseudocode.

209
00:11:30.080 --> 00:11:32.559
After about ten 15 minutes
they could swap over.

210
00:11:32.559 --> 00:11:35.780
Now you may hit a block and be like,
damn I have no idea how to solve this.

211
00:11:35.780 --> 00:11:38.320
So yeah as always, try figuring stuff out.

212
00:11:38.320 --> 00:11:44.082
But if you have an idea, force yourself,
actually Barb I have an idea.

213
00:11:44.082 --> 00:11:45.567
Do you mind driving?

214
00:11:45.567 --> 00:11:48.278
And so Lindsay's gonna explain her idea.

215
00:11:48.278 --> 00:11:50.233
You know that moment when you're like,
let me just try this.

216
00:11:50.233 --> 00:11:51.589
Can we console log that.

217
00:11:51.589 --> 00:11:57.050
Force yourself to have the other
person be navigated through it by you.

218
00:11:57.050 --> 00:12:01.828
And by the way, Barb thinks that
Lindsay is making a horrible mistake.

219
00:12:01.828 --> 00:12:03.977
Or Lindsay thinks that Barb is
making a horrible, let's be equal.

220
00:12:03.977 --> 00:12:06.460
Lindsay thinks Barb is
making a horrible mistake.

221
00:12:06.460 --> 00:12:12.090
She does not say, stop, stop, stop,
stop, let me show you how to do it.

222
00:12:12.090 --> 00:12:13.310
She doesn't do that.

223
00:12:13.310 --> 00:12:16.140
She quietly sits there, smugly.
&gt;&gt; [LAUGH]

224
00:12:16.140 --> 00:12:16.740
&gt;&gt; Will Sentance: No, not smugly.

225
00:12:17.800 --> 00:12:22.980
She quietly sits there, goes, mm-hm,
mm-hm, yeah, keep going, no, no, no.

226
00:12:22.980 --> 00:12:26.405
And by the way, half the time,
the smugness is wiped off her face.

227
00:12:26.405 --> 00:12:28.122
Barb, I know you're not
actually like this.

228
00:12:28.122 --> 00:12:29.888
I think you're charming.
&gt;&gt; [LAUGH]

229
00:12:29.888 --> 00:12:31.131
&gt;&gt; Will Sentance: Half the time, actually,

230
00:12:31.131 --> 00:12:34.481
it turns out, Lindsay had a different
approach to what Barb thought, and

231
00:12:34.481 --> 00:12:35.356
it kind of worked.

232
00:12:35.356 --> 00:12:36.618
It worked anyway.

233
00:12:36.618 --> 00:12:39.029
But half the time,
actually, you know what?

234
00:12:39.029 --> 00:12:40.182
Barb's approach was totally wrong.

235
00:12:40.182 --> 00:12:44.464
So Lindsay's typing to Barb's approach,
and Barb was totally wrong.

236
00:12:44.464 --> 00:12:49.924
But now Lindsay, even though she thinks
she knew a better approach, they press run

237
00:12:49.924 --> 00:12:55.384
in the console, they see the error appear
that says an undefined is not a function.

238
00:12:55.384 --> 00:12:58.561
And now they get to debug
as a pair together as well.

239
00:12:58.561 --> 00:13:02.411
All right, this is a long
introduction to pair programming, but

240
00:13:02.411 --> 00:13:05.849
anyone got questions on how
to pair program effectively?

241
00:13:05.849 --> 00:13:08.430
We're gonna be doing it for two days.

242
00:13:08.430 --> 00:13:10.950
So we wanna really know,
what if this happens?

243
00:13:10.950 --> 00:13:12.330
What if I filled it?

244
00:13:12.330 --> 00:13:13.470
How do people know?

245
00:13:13.470 --> 00:13:16.610
Don't be a dual driver-navigator.

246
00:13:16.610 --> 00:13:18.990
In other words,
don't be typing and explaining.

247
00:13:18.990 --> 00:13:19.920
I'm gonna be wondering around.

248
00:13:19.920 --> 00:13:23.700
If I see, I wanna be clear who's
driver and navigator at any point.

249
00:13:23.700 --> 00:13:24.750
Try and always have accountable.

250
00:13:24.750 --> 00:13:27.319
But also, let me tell you,
it's an aspiration.

251
00:13:27.319 --> 00:13:32.011
And the best execution of pair programming
is just if I have an idea of how to solve

252
00:13:32.011 --> 00:13:36.157
it, I am not gonna have my hands on
the keyboard, the other person is.

253
00:13:36.157 --> 00:13:39.183
I'm gonna communicate them through and
explain how to solve it.

254
00:13:39.183 --> 00:13:41.195
But any questions on how to pair?

