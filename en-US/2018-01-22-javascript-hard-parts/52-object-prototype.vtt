WEBVTT

1
00:00:16.890 --> 00:00:18.755
It makes a bond here.

2
00:00:18.755 --> 00:00:23.005
It makes a bond to this
user creator.protoype.

3
00:00:23.005 --> 00:00:27.151
user creator, this is,
when it's an object,

4
00:00:27.151 --> 00:00:31.816
just like we could do .andrew.prototype,
right?

5
00:00:31.816 --> 00:00:36.810
.prototype, which is,
wait for it, another object.

6
00:00:57.150 --> 00:00:58.746
And login is a function.

7
00:00:58.746 --> 00:01:02.166
We're gonna go through this
line by line do not fear.

8
00:01:02.166 --> 00:01:07.182
But, no log, cuz we don't know what
each function source is gonna be called.

9
00:01:07.182 --> 00:01:10.830
We need a default place that
this auto generated object,

10
00:01:10.830 --> 00:01:15.770
that gets its auto proto bond up before
that object got its proto bond we said.

11
00:01:15.770 --> 00:01:20.917
make it to use the function store, when
we said Before create an empty object.

12
00:01:20.917 --> 00:01:25.189
When we run userCreator,
go inside, create an empty object.

13
00:01:25.189 --> 00:01:29.539
Store properties on it,
name which is Will, score which is 3.

14
00:01:29.539 --> 00:01:33.084
But when we create an empty
object make a bond to any of

15
00:01:33.084 --> 00:01:37.113
the functions that we could ever
want to use on this object.

16
00:01:37.113 --> 00:01:40.520
So when we pass out that
object to store in user1.

17
00:01:40.520 --> 00:01:45.467
And we call User1 it'll increment, even
when we don't find the increment function

18
00:01:45.467 --> 00:01:49.862
on User1, we just look up to through
the _proto_ to userfunction store.

19
00:01:49.862 --> 00:01:51.579
But we made that explicitly.

20
00:01:51.579 --> 00:01:54.070
We said make a bond to userfunction store.

21
00:01:54.070 --> 00:01:58.273
We still gotta do that, with the new
key word this is gone, it's automated.

22
00:01:58.273 --> 00:02:02.217
So, we need a standardized place,
cuz we create new function stores and

23
00:02:02.217 --> 00:02:04.027
we store those functions there.

24
00:02:04.027 --> 00:02:04.738
Didn't we?

25
00:02:04.738 --> 00:02:08.812
There it is, use the function stores for
the function and it made the bond.

26
00:02:08.812 --> 00:02:10.492
Now we don't get to do that, so

27
00:02:10.492 --> 00:02:13.700
we need a default place in
which to store those functions.

28
00:02:13.700 --> 00:02:16.911
And Java Shifter says
best place to store them.

29
00:02:16.911 --> 00:02:22.289
We're gonna give you a lot of objects
stored on user creator in its object form.

30
00:02:22.289 --> 00:02:27.268
Low object on it with the property
prototype and you can store them there.

31
00:02:27.268 --> 00:02:29.300
So let's see that in action.

32
00:02:29.300 --> 00:02:32.290
New keyword automates
a lot of our manual work.

33
00:02:32.290 --> 00:02:36.475
Gone is the line of creating
the empty object with the bond, well,

34
00:02:36.475 --> 00:02:41.336
we call it functionStore here, whatever,
with the bond to functionStore.

35
00:02:41.336 --> 00:02:44.401
No longer can we refer
to newUser.name is name.

36
00:02:44.401 --> 00:02:46.271
newUser.name is name Will.

37
00:02:46.271 --> 00:02:47.916
User.score is Score 3.

38
00:02:47.916 --> 00:02:49.020
Can't do that.

39
00:02:49.020 --> 00:02:51.180
Now, we refer to it as this.name, this,

40
00:02:51.180 --> 00:02:54.061
which is then gonna become
the auto-generated object.

41
00:02:54.061 --> 00:02:55.141
.name is name Will.

42
00:02:55.141 --> 00:02:58.982
No longer do we have to return this out,
done automatically for us, which,

43
00:02:58.982 --> 00:03:02.822
by the way, means, when you've seen
this user creator with a new keyword,

44
00:03:02.822 --> 00:03:06.422
you've really never realized
something's being returned out.

45
00:03:06.422 --> 00:03:07.382
That's in there.

46
00:03:07.382 --> 00:03:11.910
It's automatically returning out for us,
the object that was automatically created.

47
00:03:11.910 --> 00:03:13.738
But now that inner object,

48
00:03:13.738 --> 00:03:18.828
needs to somehow have a guaranteed place
it can finds its shared functions.

49
00:03:18.828 --> 00:03:23.836
Such that when we return that object
out and call this function on user1 and

50
00:03:23.836 --> 00:03:28.766
don't find increment, even though we
don't have a bound to the function

51
00:03:28.766 --> 00:03:32.689
store Somehow we know where to look,
for the functionality.

52
00:03:32.689 --> 00:03:34.326
While the default place,

53
00:03:34.326 --> 00:03:38.048
is the name of the function in
which the object was created.

54
00:03:38.048 --> 00:03:41.547
Not at its function version,
but as an object version.

55
00:03:41.547 --> 00:03:45.866
On the prototype property of that
function that created the object.

56
00:03:45.866 --> 00:03:47.970
Is a property called prototype.

57
00:03:47.970 --> 00:03:54.290
Which itself has an object on it, and
that's where we store those functions.

58
00:03:54.290 --> 00:03:59.076
And JavaScript is gonna know to
make a bond to this guy here.

