WEBVTT

1
00:00:00.320 --> 00:00:01.890
&gt;&gt; Will Sentance: All right,
let's have fun on this concept.

2
00:00:01.890 --> 00:00:04.110
We're gonna add a few more pieces,
they're gonna be subtleties.

3
00:00:04.110 --> 00:00:04.908
Like, hold on,

4
00:00:04.908 --> 00:00:08.328
what if multiple things are being
passed off into this web browser API?

5
00:00:08.328 --> 00:00:10.650
Hold on, how do I know when
to start calling this one?

6
00:00:10.650 --> 00:00:13.470
There's a whole bunch of clarifications
that come after the pairing.

7
00:00:13.470 --> 00:00:16.760
But first,
thumbs on this essential new piece.

8
00:00:16.760 --> 00:00:21.620
This is a whole new piece of how you
think about running your JavaScript.

9
00:00:22.630 --> 00:00:25.500
Thumbs on, questions around this area.

10
00:00:25.500 --> 00:00:26.230
I have no idea.

11
00:00:26.230 --> 00:00:28.480
I have clarifications on this.

12
00:00:28.480 --> 00:00:30.570
I'm clear on these pieces we've seen so
far.

13
00:00:30.570 --> 00:00:31.360
Everyone's thumbs are out.

14
00:00:31.360 --> 00:00:33.170
Andrea's clear, Andrew's clear.

15
00:00:33.170 --> 00:00:35.470
Katie has a clarification, Dave has one.

16
00:00:35.470 --> 00:00:36.459
Katie, come do yours first.

17
00:00:37.690 --> 00:00:43.090
&gt;&gt; Katie: The process of pushing
print hello to the call stack.

18
00:00:43.090 --> 00:00:45.790
Is that happening within the timer?

19
00:00:47.490 --> 00:00:51.660
I'm visualizing that timer is
a function of a web browser.

20
00:00:51.660 --> 00:00:55.320
&gt;&gt; Will Sentance: It feels like
a function, we're gonna see in a second.

21
00:00:55.320 --> 00:01:00.280
After the pairing, exactly how does this
function get back into JavaScript land.

22
00:01:00.280 --> 00:01:04.640
Or how does the references function
tell JavaScript go run me when the timer

23
00:01:04.640 --> 00:01:07.900
completes, we're gonna see that after
the pairing, great question Katy, Dave?

24
00:01:07.900 --> 00:01:11.820
&gt;&gt; Dave: If you have 20 console
logs after that would it then-

25
00:01:11.820 --> 00:01:12.950
&gt;&gt; Will Sentance: Great question, Dave,

26
00:01:12.950 --> 00:01:14.870
again, very nice question.

27
00:01:14.870 --> 00:01:15.880
Which would run first?

28
00:01:15.880 --> 00:01:16.600
You've got 20 console logs.

29
00:01:16.600 --> 00:01:19.440
Would they run, or would the timer,
which is now done,

30
00:01:19.440 --> 00:01:21.750
probably, would it insert itself?

31
00:01:21.750 --> 00:01:24.900
We will see the answer to that
after the pair programming.

