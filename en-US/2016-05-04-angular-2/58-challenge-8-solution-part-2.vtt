WEBVTT

1
00:00:00.000 --> 00:00:04.104
[MUSIC]

2
00:00:04.104 --> 00:00:07.000
&gt;&gt; Scott Moss: All right, so
let's get back to the NGF1.

3
00:00:07.000 --> 00:00:09.190
So now, on NGF1,
you click on one of these.

4
00:00:10.250 --> 00:00:15.199
We want it to be.
&gt;&gt; Scott Moss: We

5
00:00:15.199 --> 00:00:16.320
wanna show something different.

6
00:00:16.320 --> 00:00:21.830
How about what we do is, actually,
let's come back to that one again.

7
00:00:21.830 --> 00:00:22.750
Let's do the last one.

8
00:00:22.750 --> 00:00:23.770
That one's still so trivial.

9
00:00:25.010 --> 00:00:28.834
So the last one is add inputs to
the directive to allow it to receive ID.

10
00:00:28.834 --> 00:00:31.027
Let's do that.

11
00:00:31.027 --> 00:00:33.762
So we'll come back in here.

12
00:00:33.762 --> 00:00:34.860
Inputs.

13
00:00:34.860 --> 00:00:39.796
Actually let's do it the other way
this time so you can see how it works.

14
00:00:39.796 --> 00:00:42.970
Input and then we'll just call it,

15
00:00:42.970 --> 00:00:46.370
we can't call it ID because
that's already taken.

16
00:00:46.370 --> 00:00:47.086
So we'll call it.

17
00:00:47.086 --> 00:00:54.136
Widget, or position,

18
00:00:54.136 --> 00:00:57.670
whatever.

19
00:00:57.670 --> 00:01:06.130
So that'll take the position
in here as this, some string.

20
00:01:06.130 --> 00:01:09.460
So we still have it, but what if.

21
00:01:09.460 --> 00:01:11.420
This input was changed from the outside.

22
00:01:11.420 --> 00:01:13.530
How did this directive react to it?

23
00:01:13.530 --> 00:01:17.180
Like in angular 1 you
would use scope.watch.

24
00:01:17.180 --> 00:01:18.410
So what's the equivalent here?

25
00:01:18.410 --> 00:01:18.910
Anybody know?

26
00:01:21.280 --> 00:01:21.780
No?

27
00:01:22.830 --> 00:01:23.560
Anybody want to guess?

28
00:01:27.370 --> 00:01:28.230
We didn't really talk about it.

29
00:01:28.230 --> 00:01:29.230
Setters and getters.

30
00:01:29.230 --> 00:01:32.060
So we can override the setters and
getters of this property.

31
00:01:33.260 --> 00:01:41.270
So we can say when position is
set we want this thing to happen.

32
00:01:41.270 --> 00:01:42.730
So when this thing is set.

33
00:01:45.090 --> 00:01:50.714
Our, what's the syntax for it.

34
00:01:50.714 --> 00:01:58.185
Set position.
&gt;&gt; Scott Moss: Thought

35
00:01:58.185 --> 00:02:03.166
it was brackets.
&gt;&gt; Speaker 2: And is it set property

36
00:02:04.294 --> 00:02:10.614
something?
&gt;&gt; Scott Moss: No,

37
00:02:10.614 --> 00:02:12.251
let's look.

38
00:02:22.670 --> 00:02:23.360
&gt;&gt; Speaker 2: Get column.
&gt;&gt; Scott Moss: Hm, yup.

39
00:02:23.360 --> 00:02:29.305
So it's set and then yeah,

40
00:02:29.305 --> 00:02:34.480
it is, that was right.

41
00:02:34.480 --> 00:02:37.250
I don't know the error,
this thing's just messing up.

42
00:02:37.250 --> 00:02:42.094
So it is like this.
&gt;&gt; Scott Moss: Why is it error now,

43
00:02:42.094 --> 00:02:43.940
must have exactly one parameter.

44
00:02:43.940 --> 00:02:46.430
It's saying I need a parameter here,
that's all.

45
00:02:46.430 --> 00:02:48.160
I'm like, why is it freaking out?

46
00:02:48.160 --> 00:02:51.440
All right, so yeah, so
when we set this, now every time

47
00:02:51.440 --> 00:02:55.620
the input is changed from outside this
directive this function here will be ran.

48
00:02:55.620 --> 00:03:01.960
So we can do things like, for
instance, based on the position

49
00:03:01.960 --> 00:03:07.000
of these components we could
have like these components

50
00:03:07.000 --> 00:03:10.860
go through like a color scale or
something like that based on the position.

51
00:03:10.860 --> 00:03:11.560
Something like that.

52
00:03:11.560 --> 00:03:13.320
So just different type
of things we can do.

53
00:03:13.320 --> 00:03:16.983
But that's how you would respond to
this thing being updated this is

54
00:03:16.983 --> 00:03:20.730
overwriting the setters and getters
of the property that's being input.

55
00:03:20.730 --> 00:03:22.350
In this case the input is position.

56
00:03:23.360 --> 00:03:26.130
If you wanted to do this inline with
a directive then you would just do it this

57
00:03:26.130 --> 00:03:27.100
way, it's still the same way.

58
00:03:28.300 --> 00:03:32.576
I mean with the decorator you would

59
00:03:32.576 --> 00:03:36.950
still do it like this or like.
&gt;&gt; Speaker 3: Do you

60
00:03:36.950 --> 00:03:38.367
need to import?
&gt;&gt; Scott Moss: All right,

61
00:03:38.367 --> 00:03:48.310
that's why it's freaking out, thank you.
&gt;&gt; Scott Moss: Stop.

62
00:03:51.370 --> 00:03:52.550
There we go.

63
00:03:52.550 --> 00:03:54.410
So you will still do it the same way and

64
00:03:54.410 --> 00:04:00.350
this will just override it.
&gt;&gt; Scott Moss: So

65
00:04:00.350 --> 00:04:03.513
we'll just do that, and
we'll go back to that position and

66
00:04:03.513 --> 00:04:12.529
we'll just keep it static.
&gt;&gt; Scott Moss: And

67
00:04:12.529 --> 00:04:17.923
then now here.
&gt;&gt; Scott Moss: We're

68
00:04:17.923 --> 00:04:21.893
able to pass in a position but we can
also just like we did in our last example

69
00:04:21.893 --> 00:04:25.020
is just take advantage of
this highlight property.

70
00:04:25.020 --> 00:04:26.744
That's really not doing anything.

71
00:04:26.744 --> 00:04:29.770
Maybe we pass in a color here and
actually that will do

72
00:04:29.770 --> 00:04:33.745
the color that's on every wire but
for the example we have position.

73
00:04:33.745 --> 00:04:38.869
And it was like this, and

74
00:04:38.869 --> 00:04:46.062
then we passed in the widget.id.
&gt;&gt; Speaker 4: So

75
00:04:46.062 --> 00:04:48.289
if you hit two directives
as the both token and

76
00:04:48.289 --> 00:04:51.230
put a POS, would they both pick it up?
&gt;&gt; Scott Moss: Say

77
00:04:51.230 --> 00:04:53.790
it again.
&gt;&gt; Speaker 4: [COUGH] If you hid multiple

78
00:04:53.790 --> 00:04:59.220
directives on the same element that
took in similarly named parameters.

79
00:04:59.220 --> 00:05:01.740
So if you hid to the parameter,

80
00:05:01.740 --> 00:05:03.485
they would both pick that up [INAUDIBLE]
&gt;&gt; Scott Moss: There would

81
00:05:03.485 --> 00:05:04.000
be a name collision in there.

82
00:05:04.000 --> 00:05:05.210
Yeah, I'm guessing they
would both pick them up.

83
00:05:05.210 --> 00:05:07.340
They would both pick up the same thing,
yeah.

84
00:05:07.340 --> 00:05:09.930
I think they would just
handle it that way.

85
00:05:09.930 --> 00:05:10.790
I don't think it would error out.

86
00:05:12.420 --> 00:05:13.100
Good question though.

87
00:05:15.070 --> 00:05:21.120
Any other questions on this?
&gt;&gt; Scott Moss: Okay.

88
00:05:22.370 --> 00:05:24.065
Still trying to think
of a good use case for

89
00:05:24.065 --> 00:05:26.961
NGF here because this thing
is like already showing.

90
00:05:28.200 --> 00:05:31.860
If you did something Eric, good job but
I can't really think of a good use case

91
00:05:31.860 --> 00:05:34.940
to put an NGIF here,
I mean I could I see an NGClass or

92
00:05:34.940 --> 00:05:39.820
something like that but not an NGF Like I
don't know what if I would do.

93
00:05:40.910 --> 00:05:43.900
It's already ifing here on the right so.

94
00:05:45.480 --> 00:05:46.710
So yeah.
Those are directives.

95
00:05:46.710 --> 00:05:51.920
Pretty simple to get started with but
I would say the structural

96
00:05:51.920 --> 00:05:57.170
directives and some of the internal
observable stuff are probably some

97
00:05:57.170 --> 00:06:01.080
of the toughest stuff in Angular 2 I would
say, they can get really, really crazy.

98
00:06:01.080 --> 00:06:03.960
If you wanna see for
example just go look at the docs and

99
00:06:03.960 --> 00:06:05.730
go look at some of the structure
directives they built and

100
00:06:05.730 --> 00:06:08.670
kinda see what's going on in there,
you'll see what I'm talking about.

101
00:06:08.670 --> 00:06:12.420
It's just like hm,
a scientist built this for sure, so

102
00:06:12.420 --> 00:06:16.540
I highly recommend check it out though,
learn a lot by looking at that stuff.

