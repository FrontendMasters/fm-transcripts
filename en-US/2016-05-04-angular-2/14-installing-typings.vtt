WEBVTT

1
00:00:00.000 --> 00:00:03.996
[MUSIC]

2
00:00:03.996 --> 00:00:05.946
&gt;&gt; Scott Moss: To get
started with Typings,

3
00:00:05.946 --> 00:00:10.392
really all you have to do this is,
you come in here in this terminal,

4
00:00:10.392 --> 00:00:13.746
say Typings, and it,
just like everything else.

5
00:00:13.746 --> 00:00:16.527
Obviously mine threw error,
it is already have it,

6
00:00:16.527 --> 00:00:20.323
that's why through error and it was
just in this allows a flower here and

7
00:00:20.323 --> 00:00:23.818
I think it gets this name from
your package .json and that's it.

8
00:00:23.818 --> 00:00:28.296
And then as far as I can install
in typings, typings install and

9
00:00:28.296 --> 00:00:31.266
then the name of the one
hat you wanna saw.

10
00:00:31.266 --> 00:00:35.030
In this case let's say, node and then
save, I think it's actually gonna throw

11
00:00:35.030 --> 00:00:40.143
an error, let me see.
&gt;&gt; Scott Moss: Yeah, so

12
00:00:40.143 --> 00:00:46.483
this one threw an error, and that's
because node Is a ambient typing, as

13
00:00:46.483 --> 00:00:53.460
I just found out ambient means that note
exposes other typings to other modules.

14
00:00:53.460 --> 00:00:56.320
So, you have to do the ambient on it like

15
00:00:56.320 --> 00:00:58.990
this.
&gt;&gt; Scott Moss: Which is what the error is

16
00:00:58.990 --> 00:01:05.738
recommending.
&gt;&gt; Scott Moss: Yes,

17
00:01:05.738 --> 00:01:06.840
that's the one that I want.

18
00:01:06.840 --> 00:01:07.340
Thank you.

19
00:01:12.560 --> 00:01:15.680
So once that installs,
it's going to take...oh there it is.

20
00:01:15.680 --> 00:01:19.570
So notice boom, it put that in here for
me, just like a package adjacent.

21
00:01:19.570 --> 00:01:21.070
So you should never be
writing to this file.

22
00:01:21.070 --> 00:01:22.270
It's a live file.

23
00:01:22.270 --> 00:01:24.720
Just like the package adjacent.

24
00:01:24.720 --> 00:01:27.540
So I mean maybe there's some
things you have to write in here,

25
00:01:27.540 --> 00:01:31.340
but maybe you said it once and you don't
write it again, but it's a live file.

26
00:01:31.340 --> 00:01:32.566
It's going to be updated all the time.

27
00:01:32.566 --> 00:01:34.670
So you'd never if you had the typings.

28
00:01:34.670 --> 00:01:38.300
So now that we have this node here,
if you go into typings folder.

29
00:01:38.300 --> 00:01:40.592
And we go into, what is it?
&gt;&gt; Speaker 2: I noticed for

30
00:01:40.592 --> 00:01:44.978
you it got infinity tucked but
when I installed it,

31
00:01:44.978 --> 00:01:48.888
it doesn't come through here at all.
&gt;&gt; Scott Moss: Where'd it come from?

32
00:01:48.888 --> 00:01:50.848
&gt;&gt; Speaker 2: The rich street.

33
00:01:50.848 --> 00:01:53.490
ET?
&gt;&gt; Scott Moss: It might

34
00:01:53.490 --> 00:01:56.390
be pointed to the same thing,
eventually, but that's weird.

35
00:01:56.390 --> 00:01:59.448
Like I said,
typing graphs from different places,

36
00:01:59.448 --> 00:02:04.189
I don't know how it resolves which one
to graph first, but something like that.

37
00:02:04.189 --> 00:02:09.484
So, here's the and here's a DTS file,
it's just a whole bunch of cryptic

38
00:02:09.484 --> 00:02:14.949
TypeScript that defines how your Tooling
is going to support the framework or

39
00:02:14.949 --> 00:02:18.584
the library or
the code that you're trying to use.

40
00:02:18.584 --> 00:02:21.303
So, this is how our
lintern knows about node.

41
00:02:21.303 --> 00:02:26.186
Somebody went and
wrote this deepest definition type file to

42
00:02:26.186 --> 00:02:30.119
expose metadata about Node and
all its methods.

43
00:02:30.119 --> 00:02:34.719
So, now I can get access
to that outside of here.

44
00:02:34.719 --> 00:02:38.412
So, that's pretty much typings and you
can install anything you want, so if for

45
00:02:38.412 --> 00:02:41.235
instance if you wanna install
a low dash with Node, and then,

46
00:02:41.235 --> 00:02:44.898
maybe you want the typings for lodash you
should probably look it up in typings.

47
00:02:44.898 --> 00:02:49.393
You can come up in here and
you can say typings search and

48
00:02:49.393 --> 00:02:54.395
lodash.
&gt;&gt; Scott Moss: And

49
00:02:54.395 --> 00:02:56.839
yeah, we have one,
it's lodash there it is.

50
00:02:56.839 --> 00:03:00.829
Then you know that there's a typing
definition file for it, so

51
00:03:00.829 --> 00:03:02.800
it's pretty cool.

52
00:03:02.800 --> 00:03:07.745
Any questions on typings?
&gt;&gt; Scott Moss: Nope, nope.

53
00:03:07.745 --> 00:03:08.612
Okay.

54
00:03:08.612 --> 00:03:11.438
The other thing you have to do,

55
00:03:11.438 --> 00:03:14.110
is you have to Set up.
&gt;&gt; Speaker 3: Hold up real quick.

56
00:03:14.110 --> 00:03:15.160
We have a question.
&gt;&gt; Scott Moss: Yes?

57
00:03:15.160 --> 00:03:16.180
&gt;&gt; Speaker 3: What's the command for

58
00:03:16.180 --> 00:03:18.370
typing node and ambient?
&gt;&gt; James: I just got

59
00:03:18.370 --> 00:03:20.120
it for him.
&gt;&gt; Scott Moss: Okay.

60
00:03:20.120 --> 00:03:20.620
Yeah.
&gt;&gt; Speaker 3: Boom.

61
00:03:20.620 --> 00:03:22.489
&gt;&gt; Scott Moss: It was install node dash

62
00:03:22.489 --> 00:03:25.868
dash ambient dash dash save.
&gt;&gt; Speaker 3: Thanks, James.

63
00:03:25.868 --> 00:03:30.551
&gt;&gt; Scott Moss: There you go.

64
00:03:30.551 --> 00:03:31.088
Cool and

65
00:03:31.088 --> 00:03:35.108
then I do recommend
using obviously mine is.

66
00:03:35.108 --> 00:03:36.288
Crutched right now, so.

67
00:03:36.288 --> 00:03:39.328
But, I do recommend using the Linter.

68
00:03:39.328 --> 00:03:41.986
The really cool thing about this is,
though,

69
00:03:41.986 --> 00:03:46.838
there's this thing called ng2ling that
has specific Linter rules for Angular 2.

70
00:03:46.838 --> 00:03:49.887
I highly recommend installing that and
telling your Linter about it,

71
00:03:49.887 --> 00:03:51.880
which is what I'm doing here.

72
00:03:51.880 --> 00:03:54.990
And then, you can expose these rules like,
for instance,

73
00:03:54.990 --> 00:03:59.170
if you make a component, it must have
a selector name and it must be kabob case.

74
00:03:59.170 --> 00:04:00.870
It's pretty legit.

75
00:04:00.870 --> 00:04:04.100
I think that's really really cool and
stuff like that.

76
00:04:04.100 --> 00:04:09.649
So these are specific to Angular 2
linting rules, which I think is amazing.

77
00:04:09.649 --> 00:04:11.610
So, however your men are doing that.

78
00:04:11.610 --> 00:04:14.160
But out the box, linter will work for
basic TypeScript,

79
00:04:14.160 --> 00:04:16.669
this just gives us anchor to
linting abilities as well.

80
00:04:16.669 --> 00:04:22.195
And then, of course, the pinnacle IDE you
have, you need to provide the appropriate

81
00:04:22.195 --> 00:04:27.129
plugin for your linter, which is mostly
gonna come down to MPM installing.

82
00:04:28.540 --> 00:04:33.970
Globally, tslint, which is mostly
what most of the lenses are based on.

83
00:04:33.970 --> 00:04:37.540
So, make sure you have that globally
installed just like you would with eslint,

84
00:04:37.540 --> 00:04:42.340
jscs, or jslint or whatever linter
you had, it's the same process.

85
00:04:44.220 --> 00:04:48.850
Cool, and
the last thing It's the Tsconfig.

86
00:04:50.270 --> 00:04:52.670
So, the compiler reads this and

87
00:04:52.670 --> 00:04:56.530
maybe whatever plug in you might
have in your ID will also read this.

88
00:04:56.530 --> 00:04:59.590
So, this is just telling it what to
do like for instance compileOnSave.

89
00:04:59.590 --> 00:05:02.818
If you had TypeScripts running in sublime,
I know that plug in well.

90
00:05:02.818 --> 00:05:06.817
If you set this as true like compile and
open up in any tab like here's your code,

91
00:05:06.817 --> 00:05:09.400
don't want that every single time.

92
00:05:09.400 --> 00:05:12.410
BuildOnSave, so this is just a way for you
to configure, because we're running it for

93
00:05:12.410 --> 00:05:14.740
the command line,
we don't really need all this stuff.

94
00:05:14.740 --> 00:05:17.439
We're not like transpiring
our code on the fly.

95
00:05:17.439 --> 00:05:20.512
So, I just turn it all off and then,

96
00:05:20.512 --> 00:05:25.124
here are the files that
We're telling theTSconfig or

97
00:05:25.124 --> 00:05:30.760
the typescript compiler that we're
going to be using this file,

98
00:05:30.760 --> 00:05:33.649
this glob of files and this file.

99
00:05:33.649 --> 00:05:37.600
Obviously, we need to put in the other
typings that we install like node.

100
00:05:37.600 --> 00:05:39.569
The stuff that I just installed
we will put in here too.

101
00:05:39.569 --> 00:05:40.860
So, you need to put that stuff in here.

102
00:05:40.860 --> 00:05:45.379
You can also just do a glob for
all your typings and you'll still be fine.

103
00:05:45.379 --> 00:05:47.998
And then, if you don't really remember
all this, that's totally fine.

104
00:05:47.998 --> 00:05:54.321
If you TSC globally you get this
nice TSC here that broke and

105
00:05:54.321 --> 00:05:59.740
you can say "TSC dash dash
in net." I get an error

106
00:05:59.740 --> 00:06:05.419
because I already have one but
if I didn't have one,

107
00:06:05.419 --> 00:06:10.790
let's just remove and then run it again.

108
00:06:10.790 --> 00:06:14.448
Boom, it will create one for you.

109
00:06:14.448 --> 00:06:18.371
And yeah, very minimum but
yeah I don't create

110
00:06:18.371 --> 00:06:23.449
one.
&gt;&gt; Scott Moss: So,

111
00:06:23.449 --> 00:06:29.440
if you made it through all of that,
and you run it, let's see.

112
00:06:29.440 --> 00:06:31.938
Hopefully, mine still works.
&gt;&gt; Scott Moss: So,

113
00:06:31.938 --> 00:06:33.020
I just erased a lot of stuff.

114
00:06:33.020 --> 00:06:38.928
A lot of confidence on myself right now.
&gt;&gt; Scott Moss: So,

115
00:06:38.928 --> 00:06:42.917
if you made it through all of that,
looks like mine is working,

116
00:06:42.917 --> 00:06:47.214
and you built this thing.
&gt;&gt; Scott Moss: Yeah.

117
00:06:47.214 --> 00:06:48.208
&gt;&gt; Speaker 3: [LAUGH]

118
00:06:48.208 --> 00:06:50.440
&gt;&gt; Scott Moss: So, mine doesn't work cuz I

119
00:06:50.440 --> 00:06:54.997
just deleted a whole bunch of stuff and
did a lot of stuff But

120
00:06:54.997 --> 00:06:57.190
yeah, you get the point.

121
00:06:57.190 --> 00:06:57.909
What's going on here?

122
00:06:57.909 --> 00:06:58.629
Why did it put it here?

123
00:06:58.629 --> 00:07:02.463
I've messed mine up a lot so

124
00:07:02.463 --> 00:07:07.808
that's the tour of the build system.

125
00:07:07.808 --> 00:07:10.109
So, it's okay if you don't understand
everything, it's totally fine.

126
00:07:10.109 --> 00:07:12.959
But at least you're familiar,
at least you know the moving parts,

127
00:07:12.959 --> 00:07:16.210
you might not know what to do with them,
you might not know when to recognize or

128
00:07:16.210 --> 00:07:20.070
what is happening, but you know the moving
part, you know what is involved.

129
00:07:20.070 --> 00:07:25.870
So it won't be as like magic, so but
there are a lot of pieces, and like

130
00:07:25.870 --> 00:07:30.080
I said these are like foundations of those
pieces in the we just add more to them.

131
00:07:30.080 --> 00:07:33.650
Like more rules for rental more stuff for
webpack, more bundling,

132
00:07:33.650 --> 00:07:37.360
more optimizing, all this other stuff,
so but, this is the foundation.

133
00:07:37.360 --> 00:07:42.769
Most of the other stuff after this is
just adding plugins and stuff like that.

134
00:07:42.769 --> 00:07:43.548
Cool?

135
00:07:43.548 --> 00:07:49.069
Any questions?
&gt;&gt; Scott Moss: All right.

136
00:07:49.069 --> 00:07:50.329
&gt;&gt; Speaker 2: Next item, hair tie.

137
00:07:50.329 --> 00:07:51.808
&gt;&gt; Scott Moss: [LAUGH]

138
00:07:51.808 --> 00:07:52.693
&gt;&gt; Speaker 2: I have one question for

139
00:07:52.693 --> 00:07:53.408
you.
&gt;&gt; Scott Moss: Yes?

140
00:07:53.408 --> 00:07:55.450
&gt;&gt; Speaker 2: Do you have a seed project

141
00:07:55.450 --> 00:07:59.728
you recommend for this sort of stuff?
&gt;&gt; Scott Moss: A starter project for this?

142
00:07:59.728 --> 00:08:01.136
&gt;&gt; Speaker 2: Yeah, like a seed that you

143
00:08:01.136 --> 00:08:04.128
would generally refer to.
&gt;&gt; Scott Moss: Actually I don't.

144
00:08:04.128 --> 00:08:04.766
No, but

145
00:08:04.766 --> 00:08:07.695
I could make one if that would help.
&gt;&gt; Speaker 2: No,

146
00:08:07.695 --> 00:08:09.468
I was just wondering if
there was something.

147
00:08:09.468 --> 00:08:12.056
No, I was just wondering if there
was something would usually

148
00:08:12.056 --> 00:08:15.258
refer to just to make your life easier,
or if you would start that yourself?

149
00:08:15.258 --> 00:08:15.959
&gt;&gt; Scott Moss: See, I'm kinda weird.

150
00:08:15.959 --> 00:08:19.138
I usually start it myself,
until I'm really comfortable with it.

151
00:08:19.138 --> 00:08:23.263
When it comes to build systems and stuff,
that's the one thing that I do over and

152
00:08:23.263 --> 00:08:27.389
over and over again but then, everything
else I'm fine using the project for or

153
00:08:27.389 --> 00:08:28.148
starter for.

154
00:08:28.148 --> 00:08:29.949
But when it comes to build systems,
I don't know why.

155
00:08:29.949 --> 00:08:34.402
I just feel like I have to do it,
because it's so unique to my project that

156
00:08:34.402 --> 00:08:38.563
I'd rather just build it myself
than download somebody else's and

157
00:08:38.563 --> 00:08:41.702
have to change it and
figure out why they did this and

158
00:08:41.702 --> 00:08:44.928
erase this cuz I don't have the repo or
that folder.

159
00:08:44.928 --> 00:08:48.630
So, I usually just do it myself but
that's just me.

