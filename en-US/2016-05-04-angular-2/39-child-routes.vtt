WEBVTT

1
00:00:00.000 --> 00:00:03.941
[MUSIC]

2
00:00:03.941 --> 00:00:09.590
&gt;&gt; Scott Moss: Child routes,
they're unique for Angular Two.

3
00:00:09.590 --> 00:00:12.260
But they are ideal, we need child routes.

4
00:00:12.260 --> 00:00:16.170
That was the whole cavit about
the Angular One routers was like,

5
00:00:16.170 --> 00:00:17.810
what's the story behind this?

6
00:00:17.810 --> 00:00:18.830
How do we do this?

7
00:00:18.830 --> 00:00:20.230
And we couldn't so UI router came out.

8
00:00:20.230 --> 00:00:25.080
So this is our implementation,
it's different, but it works.

9
00:00:25.080 --> 00:00:27.834
So, components of child routes
are ignorant of the parents' route

10
00:00:27.834 --> 00:00:28.620
implementation.

11
00:00:28.620 --> 00:00:30.910
So children don't know that
they belong to some parent.

12
00:00:30.910 --> 00:00:33.870
They don't know what their parents'
configuration is, they just don't know.

13
00:00:33.870 --> 00:00:36.380
They use routes and paths, and that's it.

14
00:00:36.380 --> 00:00:38.352
But the parent, and its config.

15
00:00:38.352 --> 00:00:45.137
And it's path property,
the path property here.

16
00:00:45.137 --> 00:00:49.601
The path property at
the end of it you just need

17
00:00:49.601 --> 00:00:53.490
to put a forward slash dot, dot, dot.

18
00:00:53.490 --> 00:00:56.125
That's it.

19
00:00:56.125 --> 00:00:58.080
[COUGH] Excuse me.

20
00:00:58.080 --> 00:01:02.720
So you put a forward slash dot dot dot
on the path of the parent property

21
00:01:02.720 --> 00:01:07.120
whose child route, or whose route
will have a child inside of it.

22
00:01:09.640 --> 00:01:11.720
I know.
You're looking at me like, what.

23
00:01:11.720 --> 00:01:12.700
Trust me.

24
00:01:12.700 --> 00:01:13.950
We'll go through it.

25
00:01:13.950 --> 00:01:17.420
But that's how you set up a child
route instance, you have to do that.

26
00:01:17.420 --> 00:01:21.357
And then this is gonna allow you to place
another router outlet inside the child

27
00:01:21.357 --> 00:01:28.383
component.
&gt;&gt; Scott Moss: So

28
00:01:28.383 --> 00:01:31.921
right here at the top, we set up another
component here for the path, and

29
00:01:31.921 --> 00:01:34.760
you can see we put forward slash dot,
dot, dot.

30
00:01:34.760 --> 00:01:40.250
This means, hey inside of this,
another-component template,

31
00:01:40.250 --> 00:01:43.570
there's going to be another
router outlet and it, too,

32
00:01:43.570 --> 00:01:45.610
will have it's own route config
which is right below it.

33
00:01:45.610 --> 00:01:49.200
There's another route config and then, so

34
00:01:49.200 --> 00:01:52.490
where it says /first, that's going
to be mounted on another-component.

35
00:01:52.490 --> 00:01:54.820
So, it's going to be
another-component/first.

36
00:01:54.820 --> 00:02:04.302
That's where that's gonna be mounted.
&gt;&gt; Scott Moss: Yeah,

37
00:02:04.302 --> 00:02:09.093
yeah.
&gt;&gt; Scott Moss: All right, so

38
00:02:09.093 --> 00:02:10.430
let's get into it.

39
00:02:10.430 --> 00:02:12.450
I've got some plunks.

40
00:02:12.450 --> 00:02:13.750
I want to do a little
bit of live coding and

41
00:02:13.750 --> 00:02:15.920
then we're gonna jump into our exercise,
cool?

42
00:02:17.210 --> 00:02:20.460
All right, so
one of the plunks that I wanted to show

43
00:02:26.210 --> 00:02:30.730
was one that I thought was kind
of gnarly was a child router.

44
00:02:30.730 --> 00:02:35.456
So we'll just look at that for a little
bit and then we'll do some live coding.

45
00:02:35.456 --> 00:02:37.046
So any questions on the child router?

46
00:02:37.046 --> 00:02:40.891
I seen some confused faces.
&gt;&gt; Speaker 2: Just one, if you had,

47
00:02:40.891 --> 00:02:43.455
if you wanted a bare route,

48
00:02:43.455 --> 00:02:49.050
like just the parent route
ending with the last component?

49
00:02:49.050 --> 00:02:50.960
But without a child component part,

50
00:02:50.960 --> 00:02:53.740
how would you do that?
&gt;&gt; Scott Moss: Well,

51
00:02:53.740 --> 00:02:56.850
if you just want, I'm guessing what you're
saying is you have a bare route, and

52
00:02:56.850 --> 00:03:00.440
then you have another
extension on the route.

53
00:03:00.440 --> 00:03:02.621
First you have slash users and
slash users ID.

54
00:03:02.621 --> 00:03:06.086
Is that what you're saying?
&gt;&gt; Speaker 2: Yeah, well kind of.

55
00:03:06.086 --> 00:03:09.720
CEC had users, and
then a child component is our profile.

56
00:03:09.720 --> 00:03:10.810
For whatever reason.
&gt;&gt; Scott Moss: Okay,

57
00:03:10.810 --> 00:03:12.050
I see what you're saying.

58
00:03:12.050 --> 00:03:13.980
That depends on where you
want profile to load up.

59
00:03:13.980 --> 00:03:18.940
Does profile load up in users or
does profile render on its own page?

60
00:03:18.940 --> 00:03:19.830
There's a difference.

61
00:03:19.830 --> 00:03:23.450
If profile loads in the users template,
then you need child routing.

62
00:03:23.450 --> 00:03:26.554
If profile is its own page then you don't,
you just navigate to it normally and

63
00:03:26.554 --> 00:03:30.663
you're fine.
&gt;&gt; Scott Moss: We'll go over that

64
00:03:30.663 --> 00:03:31.620
example, yeah.

65
00:03:31.620 --> 00:03:34.350
So it really all depends on where do
you want that component to render.

66
00:03:34.350 --> 00:03:37.280
&gt;&gt; Speaker 2: In other words,

67
00:03:37.280 --> 00:03:41.140
is it parallel or is it nested?
&gt;&gt; Speaker 3: Well what if it's nested but

68
00:03:41.140 --> 00:03:43.640
you also want just to be

69
00:03:43.640 --> 00:03:48.690
able to look at the user record?
&gt;&gt; Scott Moss: I see what you're saying.

70
00:03:48.690 --> 00:03:52.960
So you can set a,
you don't have to go to the child route.

71
00:03:52.960 --> 00:03:55.390
You can set the parent
route as the default.

72
00:03:55.390 --> 00:03:59.170
So therefore if you don't want to go to
the profile but just look at the user,

73
00:03:59.170 --> 00:04:01.450
you can go there and
the profile won't render.

74
00:04:01.450 --> 00:04:04.730
Yeah, you just have to put
use default on the parent,

75
00:04:04.730 --> 00:04:06.590
the one that has dot dot dot.
&gt;&gt; Speaker 3: Okay.

76
00:04:06.590 --> 00:04:07.592
&gt;&gt; Scott Moss: You can put use default on

77
00:04:07.592 --> 00:04:08.170
that, yeah.

78
00:04:09.750 --> 00:04:10.270
Good question.

79
00:04:11.600 --> 00:04:14.220
So, this thing doesn't render by default?

80
00:04:14.220 --> 00:04:15.490
Okay.

81
00:04:15.490 --> 00:04:17.180
So let's take a closer look at this stuff.

82
00:04:19.180 --> 00:04:19.910
So the child routes.

83
00:04:19.910 --> 00:04:22.412
Let's just look at the code.

84
00:04:29.194 --> 00:04:30.705
&gt;&gt; Scott Moss: Where's it at?

85
00:04:30.705 --> 00:04:36.770
That's not it.
&gt;&gt; Scott Moss: There it is.

86
00:04:36.770 --> 00:04:39.320
So, in the parent router,
is that big enough?

87
00:04:39.320 --> 00:04:40.080
Do I need to make this bigger?

88
00:04:41.430 --> 00:04:41.970
Let's make it bigger.

89
00:04:43.990 --> 00:04:47.710
So in the PAN router, again, when you
setup the route config, it's pathed, so

90
00:04:47.710 --> 00:04:50.260
normally you would just make
a path like this, right.

91
00:04:50.260 --> 00:04:51.300
And then you'd be done,
like here's my path.

92
00:04:57.210 --> 00:04:59.122
But because we're gonna have a child,

93
00:04:59.122 --> 00:05:04.342
we're gonna have another component
render or another component render

94
00:05:04.342 --> 00:05:09.400
in this router outlet we need to say hey
we're gonna set up a child router here.

95
00:05:09.400 --> 00:05:15.860
So we just do dot, dot, dot, and
then now we add our router outlet.

96
00:05:15.860 --> 00:05:21.070
And then for the child component
if we go into the child component.

97
00:05:21.070 --> 00:05:21.570
Where is it at?

98
00:05:22.750 --> 00:05:24.110
This one right here.

99
00:05:24.110 --> 00:05:25.984
You see it has a router outlet and

100
00:05:25.984 --> 00:05:30.288
the only reason it can do this is because
we put the dot dot dot in its parents

101
00:05:30.288 --> 00:05:34.244
configuration.
&gt;&gt; Scott Moss: So

102
00:05:34.244 --> 00:05:37.820
now it also has a router outlet and
it also has its own route config.

103
00:05:39.270 --> 00:05:40.454
And it too could have its own children.

104
00:05:48.999 --> 00:05:51.810
&gt;&gt; Scott Moss: We'll go over this
a little more, it's, I know.

105
00:05:54.210 --> 00:05:56.710
It's different than most
routing frameworks.

106
00:05:58.100 --> 00:05:59.040
&gt;&gt; Speaker 2: So pop that on to full

107
00:05:59.040 --> 00:06:01.490
screen and then see what that looks like.
&gt;&gt; Scott Moss: All right, where

108
00:06:01.490 --> 00:06:04.229
is the full screen button, this thing?
&gt;&gt; Speaker 2: No, yeah.

109
00:06:14.069 --> 00:06:16.059
&gt;&gt; Scott Moss: All right, so,

110
00:06:16.059 --> 00:06:17.771
I spilled it.

111
00:06:17.771 --> 00:06:18.325
Let's refresh.

112
00:06:31.701 --> 00:06:32.586
&gt;&gt; Scott Moss: Okay, I guess it just

113
00:06:32.586 --> 00:06:37.426
didn't want to do it.
&gt;&gt; Scott Moss: Let's try that

114
00:06:37.426 --> 00:06:43.390
again.
&gt;&gt; Scott Moss: Okay, here we go.

115
00:06:45.250 --> 00:06:46.280
So right here, let's check it out.

116
00:06:46.280 --> 00:06:49.910
If we go look at our component,
right here,

117
00:06:49.910 --> 00:06:53.130
inside another component,
it just says, introducing.

118
00:06:53.130 --> 00:06:55.930
So we scroll down on what's rendering,
that's all we see.

119
00:06:55.930 --> 00:06:59.250
Introducing, it's child
hasn't been mounted yet.

120
00:06:59.250 --> 00:07:02.000
There's no route,
nothing has been placed here.

121
00:07:02.000 --> 00:07:04.310
We haven't navigated anywhere, right?

122
00:07:04.310 --> 00:07:04.810
That's it.

123
00:07:05.940 --> 00:07:07.380
It's just empty.

124
00:07:07.380 --> 00:07:10.410
Then if we go look, and
you see this button right here.

125
00:07:10.410 --> 00:07:15.730
It says, hey, if you click this button
it's going to go to Firstchild.

126
00:07:15.730 --> 00:07:17.000
So, we didn't talk about Firstchild.

127
00:07:18.330 --> 00:07:24.100
But, Firstchild is really, all it's
going to do, it's just going to say,

128
00:07:24.100 --> 00:07:26.120
hey we want to load up
the route called Firstchild.

129
00:07:26.120 --> 00:07:30.639
All right, so, if we go back to
the router configuration, did I pass it?

130
00:07:30.639 --> 00:07:34.726
Right here, the name of this route
is called Firstchild all right?

131
00:07:34.726 --> 00:07:40.630
So when we click this button
we're saying hey, we want to,

132
00:07:40.630 --> 00:07:45.592
mount Firstchild route as
the child component for

133
00:07:45.592 --> 00:07:50.889
this route.
&gt;&gt; Scott Moss: So that's where

134
00:07:50.889 --> 00:07:54.220
the relationship comes, because remember,
the child doesn't know about the parent.

135
00:07:56.030 --> 00:07:58.698
So this is where the relationship comes,
right here.

136
00:07:58.698 --> 00:08:02.547
So we're mounting the first child
component onto another component when we

137
00:08:02.547 --> 00:08:03.578
click this button.

138
00:08:03.578 --> 00:08:07.226
So that's why when I click this button,

139
00:08:07.226 --> 00:08:12.163
the first child component is
going to be rendered right

140
00:08:12.163 --> 00:08:17.114
in here to this router outlet,
or another component.

141
00:08:17.114 --> 00:08:19.824
But even more so,

142
00:08:19.824 --> 00:08:25.800
if we go look at Firstchild component.

143
00:08:28.280 --> 00:08:30.310
Again we can make sure that the templates,

144
00:08:30.310 --> 00:08:32.690
everything is there,
everything is mounted.

145
00:08:32.690 --> 00:08:37.085
And again the first child also
has its own routing setup.

146
00:08:44.355 --> 00:08:45.360
&gt;&gt; Scott Moss: Yes.

147
00:08:45.360 --> 00:08:47.500
&gt;&gt; Speaker 4: So, in another component,

148
00:08:47.500 --> 00:08:52.560
if you were to have the link to Firstchild
in that template would you have to define

149
00:08:52.560 --> 00:08:56.790
another component in the router link or
could you just say Firstchild,

150
00:08:56.790 --> 00:08:58.470
it'll know where to go?
&gt;&gt; Scott Moss: Yeah,

151
00:08:58.470 --> 00:09:02.380
so because the child doesn't really
have a parent, it doesn't, so

152
00:09:02.380 --> 00:09:05.400
if you just navigated straight to it,
yeah, it'll just load it up.

153
00:09:05.400 --> 00:09:09.280
So, but I think this is actually,
now that I think about it,

154
00:09:09.280 --> 00:09:11.870
it's actually a good thing because
then you can use the routes.

155
00:09:11.870 --> 00:09:15.860
Maybe I want this route to be
a child route on this link, but

156
00:09:15.860 --> 00:09:17.180
on this link I want it to be separate.

157
00:09:17.180 --> 00:09:20.140
I want it to be it's own route because
it doesn't know about its parent.

158
00:09:20.140 --> 00:09:23.380
So yeah, if you just navigated to it,
if you just navigated to first,

159
00:09:23.380 --> 00:09:24.870
it would just load up first.
&gt;&gt; Speaker 4: Right, but

160
00:09:24.870 --> 00:09:27.510
if you add the link in the template for

161
00:09:27.510 --> 00:09:29.980
another component.
&gt;&gt; Scott Moss: Inside of-

162
00:09:29.980 --> 00:09:30.640
&gt;&gt; Speaker 4: Inside of there.

163
00:09:30.640 --> 00:09:31.990
&gt;&gt; Scott Moss: If you had a link.

164
00:09:31.990 --> 00:09:33.730
&gt;&gt; Speaker 4: And so in the router link.

165
00:09:33.730 --> 00:09:36.778
So let's say in between the router
outlet in [CROSSTALK] h1,

166
00:09:36.778 --> 00:09:38.462
you had an a with a router outlet.

167
00:09:38.462 --> 00:09:39.780
You could just say FirstChild?

168
00:09:39.780 --> 00:09:43.455
You wouldn't have to say-
&gt;&gt; Scott Moss: Well this is FirstChild.

169
00:09:43.455 --> 00:09:44.138
&gt;&gt; Speaker 4: Okay.

170
00:09:44.138 --> 00:09:44.887
&gt;&gt; Scott Moss: Right we are our

171
00:09:44.887 --> 00:09:46.020
FirstChild.

172
00:09:46.020 --> 00:09:48.275
But you mean like if we try
to set up the navigation in

173
00:09:48.275 --> 00:09:49.000
this page.
&gt;&gt; Speaker 4: Yeah.

174
00:09:51.080 --> 00:09:51.910
&gt;&gt; Scott Moss: I think if you

175
00:09:51.910 --> 00:09:55.340
just put Firstchild, it's just gonna
mount just Firstchild without a parent.

176
00:09:55.340 --> 00:09:56.220
&gt;&gt; Speaker 4: Cuz in your app you're

177
00:09:56.220 --> 00:09:58.320
saying route to another component and

178
00:09:58.320 --> 00:09:59.540
then Firstchild.
&gt;&gt; Scott Moss: Right.

179
00:09:59.540 --> 00:10:00.790
&gt;&gt; Speaker 4: So if you're already in

180
00:10:00.790 --> 00:10:02.539
another component.
&gt;&gt; Scott Moss: Is it aware?

181
00:10:02.539 --> 00:10:03.465
&gt;&gt; Speaker 4: Yeah, and you wanna

182
00:10:03.465 --> 00:10:06.080
[CROSSTALK] have a link to Firstchild.
&gt;&gt; Scott Moss: Yeah.

183
00:10:06.080 --> 00:10:07.285
&gt;&gt; Speaker 4: Could you just router link

184
00:10:07.285 --> 00:10:09.670
equals Firstchild and?
&gt;&gt; Scott Moss: I don't

185
00:10:09.670 --> 00:10:10.960
think it would be aware.

186
00:10:10.960 --> 00:10:12.590
The way they have it set up,
from my understanding,

187
00:10:12.590 --> 00:10:15.500
is that the child just doesn't
know anything about the parent.

188
00:10:15.500 --> 00:10:16.810
Even though it's mounted on that URL.

189
00:10:16.810 --> 00:10:20.504
I would say, we can test it, but
I'm guessing that it won't know and

190
00:10:20.504 --> 00:10:23.200
you still have to set that up.
&gt;&gt; Speaker 5: I'll give it a shot and

191
00:10:23.200 --> 00:10:23.870
see what happens.

