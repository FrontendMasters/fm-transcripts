WEBVTT

1
00:00:00.000 --> 00:00:03.881
[MUSIC]

2
00:00:03.881 --> 00:00:09.580
&gt;&gt; Lukas Ruebbelke: So @Input, we simply
define this inside of our component,

3
00:00:09.580 --> 00:00:14.510
that this property is being
populated via an input.

4
00:00:15.770 --> 00:00:20.915
Then on the parent template we
use a property binding to say

5
00:00:20.915 --> 00:00:25.955
whatever we put into this property,
whatever value this

6
00:00:25.955 --> 00:00:32.564
is getting passed to this component.
&gt;&gt; Lukas Ruebbelke: And

7
00:00:32.564 --> 00:00:37.808
so, this is what this looks like.

8
00:00:37.808 --> 00:00:43.640
In the component here,
we're saying that my component,

9
00:00:43.640 --> 00:00:48.520
in this case,
we have a greeting property and

10
00:00:49.910 --> 00:00:55.560
in the parent component then we
are defining the greeting property.

11
00:00:55.560 --> 00:00:59.400
And we are sending in 'Hello, Child".

12
00:00:59.400 --> 00:01:02.110
Now you'll notice that I
did not set a default here.

13
00:01:03.200 --> 00:01:04.240
Well, I set a default, so

14
00:01:04.240 --> 00:01:07.910
if it did not get defined,
then it would just go to the default.

15
00:01:07.910 --> 00:01:14.636
So let's actually just hop into some
code real quick and see what this looks

16
00:01:14.636 --> 00:01:21.683
like.
&gt;&gt; Lukas Ruebbelke: And so, this

17
00:01:21.683 --> 00:01:26.329
in the passing data to a component plunk.
&gt;&gt; Lukas Ruebbelke: And

18
00:01:26.329 --> 00:01:28.870
you can see here, this is what we saw.

19
00:01:28.870 --> 00:01:32.987
We have in our my component,
we have an input that is,

20
00:01:32.987 --> 00:01:38.570
we're basically setting greeting,
and so we're binding this.

21
00:01:38.570 --> 00:01:39.110
And then from here,

22
00:01:39.110 --> 00:01:45.140
we can just use string interpolation
to display it in the template.

23
00:01:45.140 --> 00:01:49.840
And then we're passing it
here when we define this.

24
00:01:49.840 --> 00:01:53.050
So, if we go back to our code,

25
00:01:59.730 --> 00:02:01.150
just pull this aside here.

26
00:02:01.150 --> 00:02:05.990
You can see I

27
00:02:05.990 --> 00:02:10.830
have greeting and
I'm passing this in to my component.

28
00:02:12.470 --> 00:02:14.319
But in here I'm not, so

29
00:02:14.319 --> 00:02:20.052
let's do just another one
&gt;&gt; Lukas Ruebbelke: When

30
00:02:20.052 --> 00:02:23.976
you say goodbye to somebody,
what's the opposite of greeting?

31
00:02:23.976 --> 00:02:26.202
&gt;&gt; Speaker 2: [INAUDIBLE]

32
00:02:26.202 --> 00:02:28.601
&gt;&gt; Lukas Ruebbelke: Salutation, sure.

33
00:02:28.601 --> 00:02:30.827
&gt;&gt; Speaker 2: [INAUDIBLE]

34
00:02:30.827 --> 00:02:32.714
&gt;&gt; Lukas Ruebbelke: I don't know.

35
00:02:32.714 --> 00:02:34.260
Goodbye.

36
00:02:34.260 --> 00:02:37.249
So this is just a property
on the parent component.

37
00:02:40.690 --> 00:02:44.820
And then let's just go ahead and
salutations, so

38
00:02:44.820 --> 00:02:46.089
we're going to property bind to this.

39
00:02:47.340 --> 00:02:50.240
Equals salutation.

40
00:02:51.500 --> 00:02:58.013
And then within our

41
00:02:58.013 --> 00:03:05.341
shell component here

42
00:03:05.341 --> 00:03:11.046
string equals,

43
00:03:15.018 --> 00:03:18.991
&gt;&gt; Speaker 3: Do you hit

44
00:03:18.991 --> 00:03:23.990
the typo?
&gt;&gt; Lukas Ruebbelke: What's that?

45
00:03:23.990 --> 00:03:26.260
&gt;&gt; Speaker 3: Do you hit [INAUDIBLE]?

46
00:03:26.260 --> 00:03:26.970
&gt;&gt; Lukas Ruebbelke: You do not have to.

47
00:03:26.970 --> 00:03:27.750
But because Scott did, I did.

48
00:03:27.750 --> 00:03:30.420
When-
&gt;&gt; Scott Moss: Is it lower case string or

49
00:03:30.420 --> 00:03:31.240
upper case string [INAUDIBLE]?
&gt;&gt; Lukas Ruebbelke: I've

50
00:03:31.240 --> 00:03:32.039
been using upper case.

51
00:03:33.070 --> 00:03:37.630
And place n for number, but I don't think
it actually matters the run time because

52
00:03:37.630 --> 00:03:38.730
it get's struck out anyways.

53
00:03:38.730 --> 00:03:39.420
&gt;&gt; Scott Moss: Okay.
&gt;&gt; Lukas Ruebbelke: Yeah.

54
00:03:43.360 --> 00:03:47.700
So the answer to that is,
it's good enough, either way I think.

55
00:03:47.700 --> 00:03:48.430
&gt;&gt; Scott Moss: Whatever you want.

56
00:03:48.430 --> 00:03:50.767
&gt;&gt; Lukas Ruebbelke: Whatever I want, okay?

57
00:03:50.767 --> 00:03:57.467
And we'll just duplicate this here.
&gt;&gt; Scott Moss: I

58
00:03:57.467 --> 00:03:58.460
just want to say one thing.

59
00:03:58.460 --> 00:04:03.978
If you're coming from React, inputs and
outputs are really just props, all right?

60
00:04:03.978 --> 00:04:09.650
An input is a prop that you're
passing into a component, an output

61
00:04:09.650 --> 00:04:15.370
is a handler on it, or
some type of event on a callback.

62
00:04:15.370 --> 00:04:16.240
Same thing.
&gt;&gt; Lukas Ruebbelke: If

63
00:04:16.240 --> 00:04:18.690
you're coming from Angular 2,
that's exactly how it works as well.

64
00:04:18.690 --> 00:04:24.160
I mean, that's it,
something goes in some event has fired and

65
00:04:24.160 --> 00:04:25.650
we need to handle it on
the parent component.

66
00:04:27.290 --> 00:04:31.918
And, so let's go ahead and re-render

67
00:04:31.918 --> 00:04:37.696
this.
&gt;&gt; Lukas Ruebbelke: So

68
00:04:37.696 --> 00:04:42.347
now you can see that on
the two components you

69
00:04:42.347 --> 00:04:47.249
got the default salutation on the top one,
and

70
00:04:47.249 --> 00:04:51.650
the custom salutation on the bottom onw,

71
00:04:51.650 --> 00:04:56.049
the reason being is because in the App TS,

72
00:04:56.049 --> 00:05:02.740
I said greeting on the top one and
salutation on the bottom one.

73
00:05:04.500 --> 00:05:06.380
Pretty straight forward,
any questions on that?

74
00:05:06.380 --> 00:05:09.015
Want to pass something into my component,

75
00:05:09.015 --> 00:05:15.118
put an input on it.
&gt;&gt; Lukas Ruebbelke: One

76
00:05:15.118 --> 00:05:23.800
other thing worth mentioning here is
that you can also alias this as well.

77
00:05:23.800 --> 00:05:26.939
So for instance, if there's some
weird property shadowing or

78
00:05:26.939 --> 00:05:30.792
something that's happening, and
you want to call it something different,

79
00:05:30.792 --> 00:05:35.217
You can create an alias on that.
&gt;&gt; Lukas Ruebbelke: So,

80
00:05:35.217 --> 00:05:42.330
outputs work similar, just in the opposite
direction, and they are events.

81
00:05:42.330 --> 00:05:45.550
So this is very much, if you're
comfortable with expression binding

82
00:05:45.550 --> 00:05:48.800
In Angular 1,
this works very close to that.

83
00:05:50.150 --> 00:05:55.740
The main thing is, with Angular 1,
we had Scope to emit events for us.

84
00:05:55.740 --> 00:05:58.260
With Angular 2,
we do not have that mechanism, so

85
00:05:58.260 --> 00:06:02.500
we need the EventEmitter
to handle that for us.

86
00:06:02.500 --> 00:06:05.830
So make sure that we
import the EventEmitter.

87
00:06:05.830 --> 00:06:10.020
And then we use the output
decorator to define that, hey,

88
00:06:10.020 --> 00:06:13.390
this thing is actually
going to emit an event.

89
00:06:13.390 --> 00:06:18.280
And so, you can see here we've defined
some value, and when this gets called,

90
00:06:18.280 --> 00:06:20.040
it's going to do that call back.

91
00:06:20.040 --> 00:06:24.738
So here we have, click calls greet, and

92
00:06:24.738 --> 00:06:30.406
within this greet method
we are on the property,

93
00:06:30.406 --> 00:06:33.320
we defined as an output.

94
00:06:34.640 --> 00:06:37.530
So we're actually instantiating
this as a new EventEmitter.

95
00:06:37.530 --> 00:06:41.230
So we're saying greeting is
an EventEmitter, or greeter rather, and

96
00:06:41.230 --> 00:06:43.540
from here we're going
to call greeter.emit.

97
00:06:43.540 --> 00:06:47.390
And so, fairly simple,
you have EventEmitter.

98
00:06:47.390 --> 00:06:52.610
You call emit on that to surface
the event to parent component.

99
00:06:54.840 --> 00:06:59.530
And then, in the parent component, and
this is critical, you have MyComponent.

100
00:07:00.590 --> 00:07:04.860
Then greeter,
which is the name of the output,

101
00:07:04.860 --> 00:07:08.990
which is just an event emitter,
we're saying greeter equals greet.

102
00:07:08.990 --> 00:07:12.520
And we are saying
the dollar event parameter.

103
00:07:12.520 --> 00:07:19.330
So whenever we admit something off
of greeter, then it's going to call

104
00:07:19.330 --> 00:07:26.690
whatever we put into the attribute
value of this particular property.

105
00:07:26.690 --> 00:07:34.188
In this case, we're calling greet.
&gt;&gt; Lukas Ruebbelke: Let me just hop into

106
00:07:34.188 --> 00:07:39.142
the code, we'll just see this real quick.
&gt;&gt; Speaker 5: There's a couple questions

107
00:07:39.142 --> 00:07:44.380
on that, what's that layout padding?
&gt;&gt; Lukas Ruebbelke: So that is,

108
00:07:45.810 --> 00:07:51.830
I'm using material design light
because I like pretty things,

109
00:07:53.000 --> 00:07:58.190
and so that is, design light stuff,

110
00:07:58.190 --> 00:08:01.830
whenever I see pasted snippets in,
I strip that out, so

111
00:08:01.830 --> 00:08:06.000
that's purely That's just material
design stuff that's happening.

112
00:08:10.010 --> 00:08:11.370
Any other questions?

113
00:08:11.370 --> 00:08:14.200
You said questions, plural.
&gt;&gt; Speaker 5: Two people

114
00:08:14.200 --> 00:08:18.020
asking the same one and somebody says,
are there day two plunks?

115
00:08:18.020 --> 00:08:23.320
Are all these links in the same one?
&gt;&gt; Lukas Ruebbelke: They're

116
00:08:23.320 --> 00:08:24.602
in the same link.

117
00:08:24.602 --> 00:08:27.920
[INAUDIBLE] .com/fem Hyphen plunks.

118
00:08:27.920 --> 00:08:36.870
Or you go to github.com/onehungrymind,
they are in there as well.

119
00:08:36.870 --> 00:08:41.350
Simply because I've had Plunker go out
on me at the worst possible times,

120
00:08:41.350 --> 00:08:46.020
namely my first Frontend Masters workshop,
I am creating offline versions as well.

121
00:08:46.020 --> 00:08:50.420
So you can actually download them all at
once And this is what you're seeing here.

122
00:08:51.830 --> 00:08:54.340
So we just went through,
downloaded everything, and so

123
00:08:54.340 --> 00:08:55.542
they're online on Plunker.

124
00:08:55.542 --> 00:08:58.460
If you want to fork them, which is really
handy, and look at a specific one, or

125
00:08:58.460 --> 00:09:00.700
you can download the entire set of Plunks.

126
00:09:00.700 --> 00:09:06.120
And we'll be adding to those
as this workshop progresses.

127
00:09:06.120 --> 00:09:10.680
So I'd like to think that eventually
this is going to be the ultimate

128
00:09:10.680 --> 00:09:14.510
repository of Angular 2 examples.

129
00:09:14.510 --> 00:09:17.650
So like a real Martha Steward cookbook for

130
00:09:17.650 --> 00:09:20.700
Angular is the point.
&gt;&gt; Scott Moss: So

131
00:09:20.700 --> 00:09:22.770
you're Martha Stewart in this.
&gt;&gt; Lukas Ruebbelke: I'm Martha, and

132
00:09:22.770 --> 00:09:24.210
he's Steward.
&gt;&gt; Scott Moss: All right.

133
00:09:25.830 --> 00:09:27.000
&gt;&gt; Lukas Ruebbelke: Any questions on that?

134
00:09:27.000 --> 00:09:28.810
No, just kidding.

135
00:09:30.740 --> 00:09:39.325
All right, so output.
&gt;&gt; Lukas Ruebbelke: Just

136
00:09:39.325 --> 00:09:40.640
go through here real quick.

137
00:09:41.950 --> 00:09:42.685
Fire this up.

138
00:09:53.373 --> 00:09:55.760
&gt;&gt; Lukas Ruebbelke: And
this apparently is, wait.

139
00:09:58.130 --> 00:09:58.630
Did that go?

140
00:10:01.120 --> 00:10:05.446
It happened so fast I didn't even realize,
click the button for a greeting.

141
00:10:05.446 --> 00:10:11.533
Child greeting emitted.

142
00:10:11.533 --> 00:10:14.210
Yay, I'm glad you are all sitting down for
this.

