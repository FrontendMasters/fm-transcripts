WEBVTT

1
00:00:00.180 --> 00:00:04.492
&gt;&gt; Lukas Ruebbelke: Now what
we need to do is create

2
00:00:04.492 --> 00:00:08.805
a widget details component.

3
00:00:27.842 --> 00:00:29.421
&gt;&gt; Lukas Ruebbelke: Maybe I'll
parse this out, then.

4
00:00:37.694 --> 00:00:41.523
&gt;&gt; Lukas Ruebbelke: Go 'widget-details'

5
00:00:48.927 --> 00:00:50.184
&gt;&gt; Lukas Ruebbelke: But from here,

6
00:00:50.184 --> 00:00:59.707
we're just going to dump the widget.
&gt;&gt; Lukas Ruebbelke: To the page.

7
00:01:06.573 --> 00:01:10.285
&gt;&gt; Lukas Ruebbelke: Whatever this is.

8
00:01:10.285 --> 00:01:16.770
So WidgetDetails

9
00:01:16.770 --> 00:01:24.987
input selectWidget.

10
00:01:32.680 --> 00:01:34.416
&gt;&gt; Lukas Ruebbelke: Red means stop so

11
00:01:34.416 --> 00:01:36.775
gonna be a nice queue.

12
00:01:39.295 --> 00:01:44.938
So now this should in
theory display some widget.

13
00:01:44.938 --> 00:01:50.087
Now what we need to do, the trick is,
&gt;&gt; Lukas Ruebbelke: We need to get this

14
00:01:50.087 --> 00:01:56.897
into a selectable state and broadcast it
so we can show it in the item details.

15
00:01:56.897 --> 00:02:00.981
So what I'm going to do here is, for

16
00:02:00.981 --> 00:02:06.848
the sake of time,
I'm just going to hop over here.

17
00:02:06.848 --> 00:02:09.867
And let's copy some stuff real quick.

18
00:02:40.736 --> 00:02:46.771
&gt;&gt; Lukas Ruebbelke: I'm going to go here.
&gt;&gt; Lukas Ruebbelke: And

19
00:02:46.771 --> 00:02:50.243
we'll fill this in in just a moment.

20
00:02:50.243 --> 00:02:55.478
I shall go ahead and.
&gt;&gt; Lukas Ruebbelke: Pre-select this so

21
00:02:55.478 --> 00:02:57.071
just, cuz we know we're gonna use it.

22
00:02:57.071 --> 00:03:00.559
So we go widget-details.component.

23
00:03:02.792 --> 00:03:06.003
&gt;&gt; Lukas Ruebbelke: Details.

24
00:03:06.003 --> 00:03:08.765
Put this in the directives.

25
00:03:08.765 --> 00:03:16.976
Won't make that mistake again.
&gt;&gt; Lukas Ruebbelke: And

26
00:03:16.976 --> 00:03:23.386
from here, widget details.

27
00:03:29.297 --> 00:03:30.663
&gt;&gt; Lukas Ruebbelke: Selected widget

28
00:03:42.794 --> 00:03:44.159
&gt;&gt; Lukas Ruebbelke: Scott used active.

29
00:03:44.159 --> 00:03:48.731
I'm gonna just this to selective because I

30
00:03:48.731 --> 00:03:53.310
can.
&gt;&gt; Lukas Ruebbelke: Okay.

31
00:03:55.375 --> 00:03:56.467
&gt;&gt; Lukas Ruebbelke: And then in our

32
00:03:56.467 --> 00:04:00.656
widgets list,
let's go to our items list component.

33
00:04:00.656 --> 00:04:05.735
We're just going to copy this.
&gt;&gt; Lukas Ruebbelke: Paste this in.

34
00:04:11.186 --> 00:04:13.971
&gt;&gt; Lukas Ruebbelke: And we'll go Widget.

35
00:04:16.738 --> 00:04:18.786
&gt;&gt; Lukas Ruebbelke: Of widgets.

36
00:04:48.595 --> 00:04:49.912
&gt;&gt; Lukas Ruebbelke: Put that back in just

37
00:04:49.912 --> 00:04:50.611
a moment.

38
00:04:57.142 --> 00:04:59.980
&gt;&gt; Lukas Ruebbelke: Aw yeah.

39
00:04:59.980 --> 00:05:08.727
So now we've got this list of widgets.
&gt;&gt; Lukas Ruebbelke: I'm not for

40
00:05:08.727 --> 00:05:12.510
sure why my price is not showing up,
but that's done.

41
00:05:12.510 --> 00:05:17.478
It's irrelevant, and so now let's create

42
00:05:17.478 --> 00:05:22.587
the ability to select this and
broadcast it.

43
00:05:22.587 --> 00:05:27.504
So we're gonna go here, output.

44
00:05:32.161 --> 00:05:35.436
&gt;&gt; Lukas Ruebbelke: Output selected.

45
00:05:45.904 --> 00:05:49.413
&gt;&gt; Speaker 2: It's equals new event?

46
00:05:49.413 --> 00:05:50.794
&gt;&gt; Lukas Ruebbelke: Yeah I was going to

47
00:05:50.794 --> 00:05:56.385
type it but whatever.
&gt;&gt; Lukas Ruebbelke: I

48
00:05:56.385 --> 00:05:58.254
probably should just import this.

49
00:06:08.427 --> 00:06:11.927
&gt;&gt; Lukas Ruebbelke: Okay, then from here,

50
00:06:11.927 --> 00:06:18.473
click.
&gt;&gt; Lukas Ruebbelke: =

51
00:06:18.473 --> 00:06:27.636
Selected.emit widget.

52
00:06:27.636 --> 00:06:28.777
Does this look right?

53
00:06:28.777 --> 00:06:31.487
Good?
Yes?

54
00:06:31.487 --> 00:06:32.073
I believe so.

55
00:06:32.073 --> 00:06:40.332
Then we'll go into the parent
component here and or the sum.

56
00:06:55.960 --> 00:06:58.258
&gt;&gt; Lukas Ruebbelke: So when this fires,

57
00:06:58.258 --> 00:07:03.000
we're going to call this selectwidget.

58
00:07:03.000 --> 00:07:07.830
Take a widget parameter and
we are going to

59
00:07:07.830 --> 00:07:12.804
go this.selectedwidget equals widget.

60
00:07:23.151 --> 00:07:24.552
&gt;&gt; Lukas Ruebbelke: Snap.

61
00:07:24.552 --> 00:07:27.470
So you can see here, not super pretty.

62
00:07:27.470 --> 00:07:34.419
We could actually just clean this up for

63
00:07:34.419 --> 00:07:39.901
the sake of our UI department.

64
00:07:39.901 --> 00:07:46.371
Selected widget.name

65
00:07:57.783 --> 00:08:03.889
&gt;&gt; Lukas Ruebbelke: Selected

66
00:08:03.889 --> 00:08:10.572
widget.

67
00:08:10.572 --> 00:08:13.751
It's not price, silly.

68
00:08:20.630 --> 00:08:21.774
&gt;&gt; Lukas Ruebbelke: I'll show you,

69
00:08:21.774 --> 00:08:23.165
column select.

70
00:08:23.165 --> 00:08:25.825
No, what just happened.

71
00:08:25.825 --> 00:08:26.732
Okay.

72
00:08:35.116 --> 00:08:37.602
&gt;&gt; Lukas Ruebbelke: And there we go.

73
00:08:37.602 --> 00:08:42.007
So just to review real quick.

74
00:08:42.007 --> 00:08:45.237
We created a widgets collection
on our widgets service.

75
00:08:45.237 --> 00:08:50.824
Not interesting but
more so what I wanna call

76
00:08:50.824 --> 00:08:56.110
out is that in our widget component here.

77
00:08:56.110 --> 00:09:01.423
You pulled in the widget service,
we pulled widgets directly from it and

78
00:09:01.423 --> 00:09:05.268
then we passed it into our
widgets list via an input.

79
00:09:05.268 --> 00:09:08.747
We did the same thing
with selected widget.

80
00:09:08.747 --> 00:09:11.843
Whatever selected widget
is on the parent component,

81
00:09:11.843 --> 00:09:15.625
that's what's being rendered in
the widget details component.

82
00:09:15.625 --> 00:09:19.197
Then when we select a widget in the list,

83
00:09:19.197 --> 00:09:23.725
we are emitting that, and
then sending it to here.

84
00:09:23.725 --> 00:09:28.911
Which is then being picked
up by change detection,

85
00:09:28.911 --> 00:09:31.573
and then rendering here.

86
00:09:31.573 --> 00:09:35.346
And so these components know nothing
of each other, in fact they're not even

87
00:09:35.346 --> 00:09:38.963
really doing anything other than when
I select this, just admit who I am.

88
00:09:38.963 --> 00:09:42.672
And then the parent component
is taking that, and

89
00:09:42.672 --> 00:09:47.015
immediately binding it to
the widget details component.

90
00:09:47.015 --> 00:09:49.085
Yes, question in the back.
&gt;&gt; Speaker 3: Back there when

91
00:09:49.085 --> 00:09:52.807
you were on the selected widget and
you're passing an event.

92
00:09:52.807 --> 00:09:54.151
&gt;&gt; Lukas Ruebbelke: Mm-hm.

93
00:09:54.151 --> 00:09:55.859
&gt;&gt; Speaker 3: They're wondering what is

94
00:09:55.859 --> 00:10:00.695
happening when you're passing an event,
but the function type is a widget.

95
00:10:00.695 --> 00:10:03.788
How does that happen?

96
00:10:03.788 --> 00:10:05.405
So yeah, it's expecting widget, but

97
00:10:05.405 --> 00:10:10.987
you're passing event.
&gt;&gt; Lukas Ruebbelke: So if I were to wager,

98
00:10:10.987 --> 00:10:14.647
I believe event type is of any.

99
00:10:14.647 --> 00:10:16.476
So it's whatever I admit,

100
00:10:16.476 --> 00:10:21.415
then I just presume that's what's
going to be coming down the pipeline.

101
00:10:21.415 --> 00:10:26.025
And so I don't think that event
is typed to anything specific.

102
00:10:26.025 --> 00:10:30.273
So for instance,
in this case because I'm manually

103
00:10:30.273 --> 00:10:35.303
triggering the event here, and
I'm sending out the widget.

104
00:10:35.303 --> 00:10:37.138
That's what's coming up.

105
00:10:37.138 --> 00:10:42.032
But, for instance, if I wanted to
actually, let's say I was doing like

106
00:10:42.032 --> 00:10:46.685
a drag, or, especially a drag,
let's say something with a mouse,

107
00:10:46.685 --> 00:10:51.682
then I could do mouse-enter, or
mouse-over, or something like that.

108
00:10:51.682 --> 00:10:53.497
I can just pass the native dom event and

109
00:10:53.497 --> 00:10:56.068
I would actually get event
information on that link.

110
00:10:56.068 --> 00:11:00.570
Where was the mouse, where is the mouse,
page dimensions and stuff like that.

111
00:11:00.570 --> 00:11:04.167
So this dollar event
can really be anything.

112
00:11:04.167 --> 00:11:07.369
It can be a native dom
event with information or

113
00:11:07.369 --> 00:11:11.237
it can be something you
are specifically passing to it.

114
00:11:11.237 --> 00:11:16.687
In this case,
we're passing a selected item up.

115
00:11:16.687 --> 00:11:20.378
Any questions?

116
00:11:20.378 --> 00:11:28.098
Pew, pew, pew!
&gt;&gt; Lukas Ruebbelke: So,

117
00:11:28.098 --> 00:11:32.990
before I go any further input, output.

118
00:11:32.990 --> 00:11:34.782
Does this make sense?

119
00:11:34.782 --> 00:11:37.662
The idea of how this just wires up.

120
00:11:37.662 --> 00:11:38.281
Good?

121
00:11:38.281 --> 00:11:40.094
Yes?

122
00:11:40.094 --> 00:11:46.046
I think that if you've ever tried
to do an Angular One directive,

123
00:11:46.046 --> 00:11:48.765
this is far superior to that.

124
00:11:48.765 --> 00:11:53.315
Like isolated scope written Angular for
over three years now.

125
00:11:53.315 --> 00:11:57.277
And there are times when I'm
like what is going on here?

126
00:11:57.277 --> 00:12:02.723
And with the various forms of isolated
scope, and trying to encapsulate

127
00:12:02.723 --> 00:12:07.735
that with now it's simply inputs,
outputs, it works very well.

128
00:12:07.735 --> 00:12:12.110
And this sets the stage for
building large compostable applications.

