WEBVTT

1
00:00:00.000 --> 00:00:03.962
[MUSIC]

2
00:00:03.962 --> 00:00:06.490
&gt;&gt; Lukas Ruebbelke: There was a question
maybe before we get into that.

3
00:00:06.490 --> 00:00:09.690
&gt;&gt; Audience: Yes,
on handling really large apps,

4
00:00:09.690 --> 00:00:14.140
is there anything like OC Lazy Load
that was in Angular One?

5
00:00:14.140 --> 00:00:17.534
Or anything like code
splitting with webpack?

6
00:00:17.534 --> 00:00:18.034
&gt;&gt; Lukas Ruebbelke: There is.

7
00:00:21.230 --> 00:00:22.870
&gt;&gt; Lukas Ruebbelke: Scott,
would you like to answer that?

8
00:00:22.870 --> 00:00:23.540
&gt;&gt; Scott: What was the question?

9
00:00:23.540 --> 00:00:24.152
I didn't hear, I'm sorry.

10
00:00:24.152 --> 00:00:26.630
&gt;&gt; Lukas Ruebbelke: He was thinking
about lunch, we apologize.

11
00:00:26.630 --> 00:00:27.180
&gt;&gt; Scott: Yeah.

12
00:00:27.180 --> 00:00:29.798
&gt;&gt; Audience: Talking about really
having really large apps and

13
00:00:29.798 --> 00:00:31.361
Angular One has OC Lazy Load.

14
00:00:31.361 --> 00:00:33.526
Is there anything like
that in Angular Two?

15
00:00:33.526 --> 00:00:35.830
And then code splitting with webpack.

16
00:00:35.830 --> 00:00:38.730
&gt;&gt; Scott: Yeah, I would recommend
using the code splitting or

17
00:00:38.730 --> 00:00:41.680
the asynchronous module
loading with Web Pack.

18
00:00:41.680 --> 00:00:44.984
Code splitting the webpack is
pretty well documented and simple.

19
00:00:44.984 --> 00:00:51.270
And then you can use require inside of
webpack to dynamically load components.

20
00:00:51.270 --> 00:00:53.030
So it makes sense
the title's in the routing.

21
00:00:53.030 --> 00:00:54.450
So you can totally do that.

22
00:00:56.670 --> 00:00:58.490
But webpack, yeah,
pretty much handles all of that stuff.

23
00:01:00.280 --> 00:01:01.020
&gt;&gt; Lukas Ruebbelke: Thanks webpack.

24
00:01:02.980 --> 00:01:05.235
All right, time for the challenges.

25
00:01:07.419 --> 00:01:12.340
&gt;&gt; Lukas Ruebbelke: So what I'd like you
to do is using the items components as

26
00:01:12.340 --> 00:01:18.388
a reference, we're going to create
a dumb widgets list component and

27
00:01:18.388 --> 00:01:20.973
a widgets detail component.

28
00:01:20.973 --> 00:01:22.435
Using Inputs and Outputs.

29
00:01:23.765 --> 00:01:27.905
From there, create a widget service and
hard code a widgets collection.

30
00:01:27.905 --> 00:01:32.065
So this can just be an array of
widget items, whatever you wanna do.

31
00:01:32.065 --> 00:01:35.945
Scott actually I think did a pretty
good job of laying some of that out.

32
00:01:35.945 --> 00:01:39.500
So you're welcome to,
did you check your branch in?

33
00:01:39.500 --> 00:01:44.210
So, his solution is up on GitHub
if you'd like to pull that down.

34
00:01:44.210 --> 00:01:47.560
And then consume the widgets component or
consume that collection of the widgets

35
00:01:47.560 --> 00:01:52.450
component and pass it into the widgets
list component render that.

36
00:01:52.450 --> 00:01:57.450
From there, I'd like you to create and
event that when you select the widget from

37
00:01:57.450 --> 00:02:01.740
the widgets list, that it communicates
that to the widgets component.

38
00:02:01.740 --> 00:02:06.430
And displays it in the widget details.

39
00:02:06.430 --> 00:02:13.208
This is what happens when you do slides
in Uber on the way to your workshop.

40
00:02:17.676 --> 00:02:18.253
&gt;&gt; Lukas Ruebbelke: There we go.

41
00:02:21.817 --> 00:02:26.719
&gt;&gt; Lukas Ruebbelke: Now everything that I
am proposing here I would not ask you to

42
00:02:26.719 --> 00:02:30.157
do something that I have not done myself.

43
00:02:30.157 --> 00:02:34.312
And by that it's all been
done in the items feature so

44
00:02:34.312 --> 00:02:36.869
please use that as a reference.

45
00:02:36.869 --> 00:02:43.310
And if you wanna be super rad, try not
to mimic the items object verbatim.

46
00:02:43.310 --> 00:02:44.140
Play around with it.

47
00:02:44.140 --> 00:02:49.380
So, try some different properties and
create an interesting object.

48
00:02:50.700 --> 00:02:55.320
Because we're going to be actually,
for now you can just dump, or

49
00:02:55.320 --> 00:02:58.740
combine to the widgets object
in the widgets detail.

50
00:02:58.740 --> 00:03:00.500
But then, this afternoon,

51
00:03:00.500 --> 00:03:03.280
we're going to be converting that
into a form to actually edit it.

52
00:03:03.280 --> 00:03:03.780
So.

