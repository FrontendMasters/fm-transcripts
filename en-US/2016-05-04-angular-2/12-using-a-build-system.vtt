WEBVTT

1
00:00:00.000 --> 00:00:04.248
[MUSIC]

2
00:00:04.248 --> 00:00:05.369
&gt;&gt; Scott Moss: If you
got everything working,

3
00:00:05.369 --> 00:00:06.580
you should be able to come in here.

4
00:00:07.720 --> 00:00:13.550
And if you have webpack dev service set
up, which I think everybody does, right?

5
00:00:13.550 --> 00:00:15.750
Webpack dev server.

6
00:00:15.750 --> 00:00:18.070
And you just run that right in
the root of your application.

7
00:00:18.070 --> 00:00:20.370
It will find the webpack config.

8
00:00:20.370 --> 00:00:21.640
Cuz that's the standard name of the file,

9
00:00:21.640 --> 00:00:23.450
just like goat file is
a standard goat file name.

10
00:00:23.450 --> 00:00:26.150
It will find that if you hit enter and
just run that,

11
00:00:26.150 --> 00:00:28.850
it will give you this nice little URL.

12
00:00:28.850 --> 00:00:31.450
Something broke.

13
00:00:31.450 --> 00:00:35.960
Property name is missing type app,
name does not exist.

14
00:00:35.960 --> 00:00:38.600
Okay, so that's my, this is a TypeScript.

15
00:00:38.600 --> 00:00:42.160
This is TypeScript saying hey,
some stuff messed up.

16
00:00:42.160 --> 00:00:44.720
We still built it,
don't worry about it, you're good.

17
00:00:44.720 --> 00:00:45.820
You can run your app.

18
00:00:45.820 --> 00:00:48.600
Just letting you know that
this stuff is messed up.

19
00:00:48.600 --> 00:00:49.910
That's TypeSscript
complaining right there.

20
00:00:50.970 --> 00:00:53.690
So it's really nice to
recognize those errors.

21
00:00:53.690 --> 00:00:54.840
But we'll address that stuff later.

22
00:00:54.840 --> 00:00:57.320
Let's just go look at that.

23
00:00:57.320 --> 00:01:00.150
Oops, what is it?

24
00:01:00.150 --> 00:01:06.952
This URL right here.
&gt;&gt; Scott Moss: Actually

25
00:01:06.952 --> 00:01:10.990
looks like It's not a silent error,
it actually didn't build so.

26
00:01:10.990 --> 00:01:12.440
Actually, I think I need to go fix those.

27
00:01:12.440 --> 00:01:14.040
So let's see what's happening here.

28
00:01:14.040 --> 00:01:16.170
App incorrectly implements
interface application.

29
00:01:18.480 --> 00:01:24.642
Okay, name string, new app.
&gt;&gt; Scott Moss: Is

30
00:01:24.642 --> 00:01:27.270
that better?
&gt;&gt; Speaker 2: Yeah, you don't have a name

31
00:01:27.270 --> 00:01:29.440
property on the app class.
&gt;&gt; Scott Moss: Yeah,

32
00:01:29.440 --> 00:01:34.058
I don't.
&gt;&gt; Lukas: The student becomes the teacher.

33
00:01:34.058 --> 00:01:37.360
&gt;&gt; Scott Moss: [LAUGH] I don't know why my

34
00:01:37.360 --> 00:01:42.780
sublime is just crawling right now.

35
00:01:42.780 --> 00:01:46.230
It's 11 lines of code.
&gt;&gt; [INAUDIBLE]

36
00:01:46.230 --> 00:01:47.764
&gt;&gt; Scott Moss: Yeah it must be the.

37
00:01:47.764 --> 00:01:49.270
I need to change it to on save.

38
00:01:51.281 --> 00:01:56.834
My god, man, I'm not even touching it,
watch, watch, watch.

39
00:01:56.834 --> 00:02:01.970
Okay, wow, okay,

40
00:02:01.970 --> 00:02:07.415
okay, let's just.

41
00:02:13.175 --> 00:02:13.885
&gt;&gt; Scott Moss: There we go.

42
00:02:16.274 --> 00:02:17.608
&gt;&gt; Scott Moss: Boom, there we go,

43
00:02:17.608 --> 00:02:27.590
all right, that should work.
&gt;&gt; Scott Moss: No, doesn't like me still?

44
00:02:27.590 --> 00:02:28.700
Okay, error at default.

45
00:02:28.700 --> 00:02:32.401
App, or app type application.

46
00:02:32.401 --> 00:02:36.370
What are they talking about?

47
00:02:36.370 --> 00:02:37.500
Maybe it just hasn't built yet.

48
00:02:39.900 --> 00:02:45.900
Okay, that looks right to me.

49
00:02:45.900 --> 00:02:49.480
All right, let's try that.

50
00:02:49.480 --> 00:02:53.765
No, it still doesn't like it.
&gt;&gt; Speaker 4: You might have to explicitly

51
00:02:53.765 --> 00:02:57.280
define the name property in the box.
&gt;&gt; Speaker 2: Yeah,

52
00:02:57.280 --> 00:02:59.600
you gotta put the name on.
&gt;&gt; Scott Moss: All right,

53
00:02:59.600 --> 00:03:03.057
already covered.
&gt;&gt; Speaker 4: Because it automatically

54
00:03:03.057 --> 00:03:08.232
does it in the constructor for you,
but when you're doing an implement,

55
00:03:08.232 --> 00:03:12.200
I think it [INAUDIBLE] manually do it.
&gt;&gt; Scott Moss: I'd rather not sit here and

56
00:03:12.200 --> 00:03:15.240
watch you guys watch me crawl
through this sublime right now.

57
00:03:15.240 --> 00:03:18.150
Because this crawling.

58
00:03:18.150 --> 00:03:21.580
Yes, Lucas, you had a question?
&gt;&gt; Lukas: I'm just stretching.

59
00:03:21.580 --> 00:03:22.149
&gt;&gt; Scott Moss: You're just stretching.

60
00:03:22.149 --> 00:03:25.395
Thought you were raising your hand.
&gt;&gt; Lukas: [LAUGH]

61
00:03:25.395 --> 00:03:26.095
&gt;&gt; Scott Moss: So yeah, go ahead and

62
00:03:26.095 --> 00:03:29.775
do that and you'll know it's working
when you don't have any errors and

63
00:03:29.775 --> 00:03:32.285
you load up your file.

64
00:03:32.285 --> 00:03:33.895
And if you're using
the Webpack Dev server,

65
00:03:33.895 --> 00:03:38.785
just make sure you have an index.html on
the root, cuz it's gonna look for that.

66
00:03:38.785 --> 00:03:41.885
If you don't really wanna load this
up in the server, that's fine.

67
00:03:41.885 --> 00:03:46.610
Just do Webpack and build it and if it
gets a clean build, go look at the output.

68
00:03:46.610 --> 00:03:52.710
For instance, if I go look at this output
here in the bundle.js, and I scroll down.

69
00:03:52.710 --> 00:03:55.560
Forget about all that crap,
here's my code.

70
00:03:55.560 --> 00:03:59.190
I scroll down right here,
this is what my code compiled down to.

71
00:03:59.190 --> 00:04:01.360
And I can obviously tell that
that's going to run in a browser.

72
00:04:01.360 --> 00:04:02.690
That looks fine.

73
00:04:02.690 --> 00:04:03.590
Fantastic.

74
00:04:03.590 --> 00:04:04.550
So that's a check too.

75
00:04:04.550 --> 00:04:06.060
If you don't want to load up a browser.

76
00:04:06.060 --> 00:04:11.580
So let's take 15 minutes, let's get
that out the way, run into those errors,

77
00:04:12.620 --> 00:04:15.310
just bump your head up against the wall,
me and Lukas will be here.

78
00:04:15.310 --> 00:04:15.880
And you'll be good.

79
00:04:15.880 --> 00:04:18.520
Yes?
&gt;&gt; Speaker 5: The question,

80
00:04:18.520 --> 00:04:21.060
they still aren't getting
the public versus private

81
00:04:21.060 --> 00:04:23.870
difference?
&gt;&gt; Scott Moss: Public

82
00:04:23.870 --> 00:04:24.980
versus private ,if it's?

83
00:04:24.980 --> 00:04:27.480
Lukas, you want to elaborate on that?
&gt;&gt; Speaker 5: I guess.

84
00:04:27.480 --> 00:04:34.622
Let me see if.
&gt;&gt; Lukas: The difference

85
00:04:34.622 --> 00:04:36.310
between public versus private?

86
00:04:36.310 --> 00:04:42.406
So, one of the problems is that
that syntactic sugar in TypeScript,

87
00:04:42.406 --> 00:04:45.558
but you can see when Scott was trying

88
00:04:45.558 --> 00:04:50.410
to compile this application
he was throwing an error.

89
00:04:50.410 --> 00:04:54.923
The reason being is that
he was defining his this or

90
00:04:54.923 --> 00:04:59.550
the name parameter is
private in the constructor.

91
00:05:00.600 --> 00:05:04.160
And therefore,
it was not satisfying the interface.

92
00:05:05.190 --> 00:05:11.150
And so, what he needs to do is,
either define the name property

93
00:05:11.150 --> 00:05:16.740
on the class itself outside of the
constructor or allow that to be public.

94
00:05:16.740 --> 00:05:19.039
In TypeScript everything
is public by default.

95
00:05:20.220 --> 00:05:24.410
Again, it all gets stripped away at
the end of the day when you compile,

96
00:05:24.410 --> 00:05:29.780
but it allows you to convey intent and
you will throw errors,

97
00:05:29.780 --> 00:05:33.570
or at least throw TypeScript
errors when that happens.

98
00:05:33.570 --> 00:05:39.369
But, it's pretty much an approximation
of classical public verses private.

99
00:05:39.369 --> 00:05:44.207
And if it's private then you can access
it and if it's public then you know,

100
00:05:44.207 --> 00:05:47.383
you can, so
it's public-private members, but

101
00:05:47.383 --> 00:05:51.842
the only issue is that it's not
enforced at runtime because all of that

102
00:05:51.842 --> 00:05:55.940
get stripped out.
&gt;&gt; Scott Moss: Thanks,

103
00:05:55.940 --> 00:05:56.810
Lukas.
&gt;&gt; Lukas: Yes.

104
00:05:59.730 --> 00:06:00.788
&gt;&gt; Scott Moss: Okay, so that totally

105
00:06:00.788 --> 00:06:01.293
fixed it.

106
00:06:01.293 --> 00:06:08.275
Hello.
&gt;&gt; Lukas: Don't be looking at mine.

107
00:06:08.275 --> 00:06:12.410
Go over to that linter.
&gt;&gt; Scott Moss: I did, I disabled it.

108
00:06:12.410 --> 00:06:16.390
It's just, so this is why I switched
back between Adam and Sublime.

109
00:06:16.390 --> 00:06:17.760
When one breaks, I go to the other one.

110
00:06:17.760 --> 00:06:19.570
But then the other one breaks and

111
00:06:19.570 --> 00:06:22.970
then the other one is like I'm
working now, so I think they're like

112
00:06:22.970 --> 00:06:25.492
trolling me or something I don't know.
&gt;&gt; Speaker 5: A couple people in chat

113
00:06:25.492 --> 00:06:29.000
were saying they don't
even know where to start.

114
00:06:29.000 --> 00:06:31.964
Can you put some of this code
up there to give them a starting

115
00:06:31.964 --> 00:06:32.560
point?
&gt;&gt; Scott Moss: Yep.

116
00:06:32.560 --> 00:06:33.760
&gt;&gt; Speaker 5: Or maybe walk through again.

117
00:06:33.760 --> 00:06:34.560
&gt;&gt; Scott Moss: Yeah I'll push it up.

118
00:06:34.560 --> 00:06:38.260
So while I'm pushing it up, where they
can start is, first thing's first,

119
00:06:38.260 --> 00:06:41.620
is just create a root file
to their applications.

120
00:06:41.620 --> 00:06:45.337
So right now I have an app
folder with a route.ts and

121
00:06:45.337 --> 00:06:50.160
just write some type of TypeScript or
ES 6 code in there.

122
00:06:50.160 --> 00:06:51.290
So that's the starting point.

123
00:06:51.290 --> 00:06:54.300
Just make sure you have a file
that needs to be compiled.

124
00:06:54.300 --> 00:06:58.100
And in this case,
I made this file do an alert, so

125
00:06:58.100 --> 00:06:59.464
I can see it when I load
it up in a browser.

126
00:06:59.464 --> 00:07:01.440
That way I don't have to check the logs or
something.

127
00:07:01.440 --> 00:07:03.090
So that's the first step.

128
00:07:03.090 --> 00:07:06.180
The second step is to
get it to compile and

129
00:07:06.180 --> 00:07:08.390
the way you would do that
is with the webpack config.

130
00:07:10.640 --> 00:07:14.080
So everybody should already have
the webpack tools installed

131
00:07:14.080 --> 00:07:17.520
globally on a computer and what not,
so that stuff should already be there.

132
00:07:17.520 --> 00:07:22.860
Only thing you have to do now is use
a loader like awesome-typescript loader or

133
00:07:22.860 --> 00:07:24.418
TS LOADER whichever one you want to use.

134
00:07:24.418 --> 00:07:27.784
Highly recommend you use
an awesome-typescript loader and

135
00:07:27.784 --> 00:07:30.820
configure a webpack to bundle your code,
that's it.

136
00:07:32.800 --> 00:07:35.400
And then step three is to go into
a terminal, type in the webpack and

137
00:07:35.400 --> 00:07:37.530
watch it bundle,
that's minimal, you're done.

138
00:07:37.530 --> 00:07:39.980
But I do recommend going a step further.

139
00:07:39.980 --> 00:07:41.680
Using web pack dev server.

140
00:07:41.680 --> 00:07:42.920
Setting up your linter.

141
00:07:42.920 --> 00:07:44.170
Setting up typings.

142
00:07:46.440 --> 00:07:47.980
And TS config.

143
00:07:47.980 --> 00:07:50.450
But you don't have to because we're
not going to use this anyway.

144
00:07:50.450 --> 00:07:51.990
It's already in the starter repo.

145
00:07:51.990 --> 00:07:53.940
But it'd be really nice
if you knew what it was.

146
00:07:57.200 --> 00:07:59.870
So if you feel lost you should feel lost.

147
00:08:01.590 --> 00:08:02.850
That's the point.

148
00:08:02.850 --> 00:08:06.560
Of this one, but the rest of the stuff
won't be like this I promise.

149
00:08:06.560 --> 00:08:09.110
This one is just,
this is how you gotta do it

