WEBVTT

1
00:00:00.000 --> 00:00:04.384
[MUSIC]

2
00:00:04.384 --> 00:00:05.510
&gt;&gt; Scott Moss: So yeah,
this is one way how you would get.

3
00:00:05.510 --> 00:00:07.990
And then as you can imagine, a post.

4
00:00:07.990 --> 00:00:11.610
We obviously can't post to this Reddit
URL, so I'm not gonna try to do that.

5
00:00:11.610 --> 00:00:13.170
But it will look very similar to this.

6
00:00:14.770 --> 00:00:19.870
It would be something like this,
followed by the JSON.stringified

7
00:00:19.870 --> 00:00:23.120
body of the data that you're posting to.

8
00:00:23.120 --> 00:00:27.740
Now if you wanna work with the headers,
we would just have to inject

9
00:00:30.690 --> 00:00:35.850
headers and request options from HTTP and

10
00:00:35.850 --> 00:00:39.960
then we would just
configure our headers here.

11
00:00:39.960 --> 00:00:47.030
So it'll be something const headers
equals new headers and then we can

12
00:00:48.700 --> 00:00:54.830
put our header stuff here,
authorization, whatever it is.

13
00:00:57.260 --> 00:00:58.970
And then you need to set up a new options.

14
00:01:01.290 --> 00:01:06.730
Request options, and then the headers
are going to be these headers.

15
00:01:10.630 --> 00:01:11.220
Like that.

16
00:01:11.220 --> 00:01:15.508
And you can just pass that
in as a third argument.

17
00:01:23.181 --> 00:01:25.994
&gt;&gt; Scott Moss: Any questions on this

18
00:01:25.994 --> 00:01:27.090
stuff?

19
00:01:27.090 --> 00:01:28.050
Yes?
&gt;&gt; Speaker 2: Can I just see

20
00:01:28.050 --> 00:01:30.198
the constructor that was in app.

21
00:01:30.198 --> 00:01:31.820
Yeah great [INAUDIBLE].

22
00:01:40.961 --> 00:01:41.461
&gt;&gt; Scott Moss: Any questions on this?

23
00:01:43.180 --> 00:01:44.800
So, we figured out how to fetch it.

24
00:01:44.800 --> 00:01:48.340
Now lets go over strategy of how to
successfully grab this data from

25
00:01:48.340 --> 00:01:51.470
the service, implement it in one of
our components, and on to a template.

26
00:01:51.470 --> 00:01:54.590
We will just render these Reddit
posts on to a template right quick.

27
00:01:54.590 --> 00:01:57.180
That way you can get a taste of how
you would do it with the widgets.

28
00:01:59.200 --> 00:02:00.970
So, obviously I don't
need this stuff anymore.

29
00:02:00.970 --> 00:02:02.240
Let's get rid of that.

30
00:02:02.240 --> 00:02:02.761
Not that.

31
00:02:11.315 --> 00:02:12.725
&gt;&gt; Scott Moss: And that's gonna be a get.

32
00:02:14.895 --> 00:02:15.585
So we got that.

33
00:02:15.585 --> 00:02:17.015
Make sure we return this.

34
00:02:17.015 --> 00:02:19.515
If we don't return this then
you don't get access to it.

35
00:02:19.515 --> 00:02:21.925
So make sure you do that.

36
00:02:21.925 --> 00:02:24.135
And then we're obviously not
gonna count the log here.

37
00:02:24.135 --> 00:02:25.725
We're actually not gonna subscribe here.

38
00:02:25.725 --> 00:02:29.035
We're gonna subscribe in
the component itself, not in here.

39
00:02:29.035 --> 00:02:31.930
The reason we don't want to subscribe in
here is because there's nothing that we

40
00:02:31.930 --> 00:02:33.080
wanna do in this service.

41
00:02:33.080 --> 00:02:36.320
Everything that we wanna do when we
get notified about the data is in

42
00:02:36.320 --> 00:02:36.890
the components.

43
00:02:36.890 --> 00:02:37.840
That's where we subscribe to.

44
00:02:37.840 --> 00:02:39.310
We don't wanna subscribe in here.

45
00:02:41.640 --> 00:02:43.290
So now we're gonna go
over to our component.

46
00:02:44.360 --> 00:02:47.900
I'm just gonna put it in app for
the sake of not having to make more stuff.

47
00:02:50.800 --> 00:02:53.190
And I'll just make a component right
quick and we'll just call it post.

48
00:02:56.080 --> 00:03:03.500
And it's just gonna be a ul with
an li that has an ng four on it.

49
00:03:08.887 --> 00:03:13.177
&gt;&gt; Scott Moss: Posts of posts.

50
00:03:13.177 --> 00:03:15.084
And then we'll just put.

51
00:03:15.084 --> 00:03:20.902
The posts.title.

52
00:03:24.185 --> 00:03:26.525
&gt;&gt; Scott Moss: And, the author, so

53
00:03:26.525 --> 00:03:31.370
we'll do that.
&gt;&gt; Speaker 3: Stop your posts,

54
00:03:31.370 --> 00:03:35.090
you have posts of the posts.
&gt;&gt; Scott Moss: Thank you.

55
00:03:35.090 --> 00:03:38.550
Post of posts we'll put that there.

56
00:03:40.520 --> 00:03:42.880
And now in our app we just
need to work with that.

57
00:03:42.880 --> 00:03:44.014
So let's just go ahead and set that up.

58
00:03:44.014 --> 00:03:47.127
Post as an array, got that.

59
00:03:47.127 --> 00:03:53.268
What we'll do,
as soon as this starts we'll fetch it,

60
00:03:53.268 --> 00:03:58.770
then we'll subscribe, and
now we get the posts.

61
00:03:58.770 --> 00:04:04.080
Actually this is going to
be some weird funky data,

62
00:04:04.080 --> 00:04:09.050
Reddit returns some weird data,
let's see what this looks like.

63
00:04:09.050 --> 00:04:10.166
Let's see what this looks like.

64
00:04:20.069 --> 00:04:22.050
&gt;&gt; Scott Moss: Cool, so it's an object.

65
00:04:22.050 --> 00:04:22.670
There it is it.

66
00:04:22.670 --> 00:04:24.710
It's the children property that we want.

67
00:04:24.710 --> 00:04:28.080
So we only want the children property so
I'm gonna go back here and

68
00:04:28.080 --> 00:04:30.840
just modify our map function.

69
00:04:30.840 --> 00:04:32.400
Just return that.

70
00:04:32.400 --> 00:04:35.390
So that way by the time it gets to
the view, we'll really have what we need.

71
00:04:35.390 --> 00:04:39.490
And in fact, I can even go a step further.

72
00:04:39.490 --> 00:04:41.150
So the children property,

73
00:04:41.150 --> 00:04:43.990
I'll have an object with the data
project on them individually.

74
00:04:45.505 --> 00:04:52.055
And then the ones that we want are author
and title, I am guessing there is a title.

75
00:04:52.055 --> 00:04:52.835
Yeah title.

76
00:04:52.835 --> 00:04:54.195
So we can just do that here too.

77
00:04:54.195 --> 00:04:59.753
So we can say res dot JSON dot data
dot children dot map the child,

78
00:05:04.256 --> 00:05:05.722
&gt;&gt; Scott Moss: And all we want to return.

79
00:05:07.782 --> 00:05:15.419
And really, all we want from the child is,
&gt;&gt; Scott Moss: The data attribute.

80
00:05:15.419 --> 00:05:19.090
So if you don't know what that is,
I'm destructuring in the array, I mean,

81
00:05:19.090 --> 00:05:21.560
in argument signature so
you can just destructure there.

82
00:05:21.560 --> 00:05:24.390
So there's a property called data
on the argument that's coming in on

83
00:05:24.390 --> 00:05:25.190
this callback.

84
00:05:25.190 --> 00:05:26.700
So I'm destructuring right there.

85
00:05:26.700 --> 00:05:36.620
It's the equivalent of doing
that's equivalent of that.

86
00:05:36.620 --> 00:05:39.400
We're doing it in the array signature.

87
00:05:39.400 --> 00:05:41.430
It's also the equivalent of doing it like,
that.

88
00:05:41.430 --> 00:05:48.230
All three of them are the same.

89
00:05:49.280 --> 00:05:50.760
So we'll just keep it simple,
we'll just do that.

90
00:05:51.980 --> 00:05:57.910
And I want to return is the author,
which is the data dot author,

91
00:05:59.110 --> 00:06:05.800
and then the title which would be
the data dot title, there we go.

92
00:06:05.800 --> 00:06:07.990
So let's see what that looks like.

93
00:06:16.340 --> 00:06:18.220
Cool, there we go, alter title,
that's all we needed.

94
00:06:19.630 --> 00:06:21.810
And now we can come back over here.

95
00:06:21.810 --> 00:06:29.270
And we then say,
posts equal that data or this dot post.

96
00:06:31.420 --> 00:06:31.930
The both add data.

97
00:06:34.100 --> 00:06:36.820
And our template should be good,
plus that title plus the author.

98
00:06:36.820 --> 00:06:41.786
We should see something on the page now,

99
00:06:41.786 --> 00:06:47.159
there we go.
&gt;&gt; Scott Moss: So

100
00:06:47.159 --> 00:06:49.637
that's one strategy,
probably the most naive,

101
00:06:49.637 --> 00:06:53.900
simplest strategy to get data from
a server and into your component.

102
00:06:53.900 --> 00:06:57.980
I would not recommend doing it this way,
like I said, it's very naive,

103
00:06:57.980 --> 00:06:59.410
it's not gonna scale.

104
00:06:59.410 --> 00:07:01.770
We probably wanna use something better and

105
00:07:01.770 --> 00:07:04.420
we'll talk about better strategies
here on the course tomorrow.

106
00:07:04.420 --> 00:07:07.390
But this is the simplest way to do it.

107
00:07:07.390 --> 00:07:09.990
But obviously storing this state
like this, is not a good idea.

