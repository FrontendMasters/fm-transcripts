WEBVTT

1
00:00:00.710 --> 00:00:04.248
[MUSIC]

2
00:00:04.248 --> 00:00:05.750
&gt;&gt; Scott Moss: Let's talk about
the asterisked stuff, right.

3
00:00:05.750 --> 00:00:06.720
Let's do some iterations here.

4
00:00:06.720 --> 00:00:11.770
So we'll do a URL and we'll do LI and
just some basic numbers.

5
00:00:11.770 --> 00:00:13.130
So we'll use star.

6
00:00:13.130 --> 00:00:14.840
Why do you say star?

7
00:00:14.840 --> 00:00:16.750
Do people say asterisk?

8
00:00:16.750 --> 00:00:20.820
I just star, right?

9
00:00:20.820 --> 00:00:25.450
Star, okay, star ng 4 equals,
and we'll just stay num

10
00:00:29.220 --> 00:00:31.640
of nums.

11
00:00:31.640 --> 00:00:36.740
So the reason they did of, and not in like
they used to, is because of iterators.

12
00:00:36.740 --> 00:00:40.080
Because now you can do of syntax to
iterate over things in JavaScript.

13
00:00:40.080 --> 00:00:42.140
So, that's why they're doing that here.

14
00:00:42.140 --> 00:00:43.670
It makes sense.

15
00:00:43.670 --> 00:00:48.210
And for each one of those we're just
going to just put a noun here, Shazam.

16
00:00:48.210 --> 00:00:52.200
So, now we need to go to here and
we need to initialize these bad boys.

17
00:00:52.200 --> 00:00:54.540
So, we'll just say nums and
it goes in an array of 1, 2, 3.

18
00:00:54.540 --> 00:01:00.014
And now, we have our

19
00:01:00.014 --> 00:01:05.170
nums, all right.

20
00:01:07.080 --> 00:01:11.230
So remember the other way around for
this, would be something like this.

21
00:01:11.230 --> 00:01:17.141
So we have a ul ad then li.
&gt;&gt; Scott Moss: And

22
00:01:17.141 --> 00:01:22.364
then a template.
&gt;&gt; Scott Moss: And

23
00:01:22.364 --> 00:01:26.584
then, NG4= num of nums.

24
00:01:26.584 --> 00:01:32.020
Then num.

25
00:01:32.020 --> 00:01:36.128
I think

26
00:01:36.128 --> 00:01:43.663
that's it.

27
00:01:44.890 --> 00:01:46.407
Maybe I got it wrong, we'll see.

28
00:01:51.726 --> 00:01:52.280
&gt;&gt; Scott Moss: Yeah,
I totally got it wrong.

29
00:01:52.280 --> 00:01:55.422
It broke.
So, forgot what that was, let's,

30
00:01:55.422 --> 00:01:57.886
look at the syntax real quick.

31
00:02:04.746 --> 00:02:05.826
&gt;&gt; Scott Moss: Yeah,

32
00:02:05.826 --> 00:02:10.690
okay, I put it on the wrong one.

33
00:02:10.690 --> 00:02:12.640
It's actually like this.

34
00:02:16.740 --> 00:02:17.270
Had it backwards.

35
00:02:17.270 --> 00:02:24.134
So let's check that out.

36
00:02:24.134 --> 00:02:28.889
Okay, it's still broke,

37
00:02:28.889 --> 00:02:34.058
does not work, unexpected,

38
00:02:34.058 --> 00:02:42.760
may be you just don't use
this with that any more.

39
00:02:44.550 --> 00:02:45.060
Let's check it out.

40
00:02:47.660 --> 00:02:48.730
No, that's not it.

41
00:02:48.730 --> 00:02:50.440
Okay, we're not going to sit here and
debug this.

42
00:02:51.850 --> 00:02:54.570
So just use this way because it's better,
obviously.

43
00:02:56.710 --> 00:02:58.210
Any other questions?

44
00:02:58.210 --> 00:02:59.570
On this stuff.
&gt;&gt; Speaker 2: It's

45
00:02:59.570 --> 00:03:05.330
the Awesomer Asterisk Loader WebPack.
&gt;&gt; Scott Moss: Awesomer Asterisk Loader?

46
00:03:05.330 --> 00:03:06.250
That's a thing?

47
00:03:06.250 --> 00:03:07.130
&gt;&gt; Speaker 2: No.
&gt;&gt; Scott Moss: [LAUGH]

48
00:03:07.130 --> 00:03:07.758
&gt;&gt; Speaker 2: It should be.

49
00:03:07.758 --> 00:03:11.840
[LAUGH] You could solve this
with WebPack naturally.

50
00:03:11.840 --> 00:03:12.350
&gt;&gt; Scott Moss: Probably could.

51
00:03:13.960 --> 00:03:15.640
Those are some of the basic.
&gt;&gt; Speaker 3: Somebody's

52
00:03:15.640 --> 00:03:16.390
having an issue in CAD.

53
00:03:16.390 --> 00:03:19.750
Could you maybe just see if that
message means anything to you?

54
00:03:19.750 --> 00:03:20.250
&gt;&gt; Scott Moss: There's one more

55
00:03:20.250 --> 00:03:21.560
example I want to show you.

56
00:03:21.560 --> 00:03:22.410
The Elvis operator.

57
00:03:22.410 --> 00:03:26.910
I forgot that one, so let's do that.

58
00:03:26.910 --> 00:03:31.160
Let's say H1, and
we'll just call it Elvis, name.

59
00:03:32.400 --> 00:03:33.370
The way we do it is we do that.

60
00:03:35.200 --> 00:03:40.600
Right, so we'll say Elvis?.name and
then now we'll come in here and

61
00:03:40.600 --> 00:03:46.040
I'm gonna make Elvis be
an object with no name property.

62
00:03:46.040 --> 00:03:50.950
And let's see what happens.
&gt;&gt; Speaker 4: Absolutely nothing.

63
00:03:50.950 --> 00:03:51.760
&gt;&gt; Scott Moss: Nothing on the page,

64
00:03:51.760 --> 00:03:53.380
no errors, what's in the DOM?

65
00:03:53.380 --> 00:04:00.100
Let's check out the DOM.
&gt;&gt; Scott Moss: Okay, could you just go?

66
00:04:00.100 --> 00:04:06.624
Thank you.
&gt;&gt; Scott Moss: Hm,

67
00:04:06.624 --> 00:04:09.640
there's the h1, wait no nevermind,
this is not the h1.

68
00:04:09.640 --> 00:04:13.090
It's just not there,
it's just not even on the page at all.

69
00:04:13.090 --> 00:04:16.450
This element Never even got rendered.

70
00:04:17.730 --> 00:04:20.225
So, that's pretty cool.

71
00:04:20.225 --> 00:04:22.556
But now,-
&gt;&gt; Speaker 5: Take the operator off.

72
00:04:22.556 --> 00:04:24.510
&gt;&gt; Scott Moss: You take the operator off.

73
00:04:29.150 --> 00:04:31.450
What happened?

74
00:04:31.450 --> 00:04:40.068
No errors, elements.
&gt;&gt; Scott Moss: Hm,

75
00:04:40.068 --> 00:04:41.690
looks like no change there, actually.

76
00:04:41.690 --> 00:04:45.120
Looks like the same result.

77
00:04:47.210 --> 00:04:49.070
I don't know,
maybe it works differently now in Beta9.

78
00:04:50.840 --> 00:04:52.655
Let's put that back and

79
00:04:52.655 --> 00:05:00.366
then put a name property.
&gt;&gt; Scott Moss: Okay,

80
00:05:00.366 --> 00:05:01.030
obviously it shows up.

81
00:05:03.000 --> 00:05:04.180
But that's weird.

82
00:05:04.180 --> 00:05:06.820
I was expecting it to error,
maybe it silently errored, I don't know.

83
00:05:11.340 --> 00:05:14.310
Interesting, I'll look into that.

