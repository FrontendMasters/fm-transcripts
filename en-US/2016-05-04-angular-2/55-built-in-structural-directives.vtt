WEBVTT

1
00:00:00.000 --> 00:00:03.964
[MUSIC]

2
00:00:03.964 --> 00:00:06.700
&gt;&gt; Scott Moss: So, now we'll talk about
some of the built-in attribute directives.

3
00:00:06.700 --> 00:00:10.660
Let's go, let's go here and
we can play with some of them.

4
00:00:10.660 --> 00:00:15.753
So, some of the built-in ones include,

5
00:00:15.753 --> 00:00:21.345
we have like ngClass,
&gt;&gt; Scott Moss: Which

6
00:00:21.345 --> 00:00:26.240
does the exact same thing as
the one on angle one did.

7
00:00:26.240 --> 00:00:30.200
It conditionally will apply a CSS
class based on some condition.

8
00:00:32.230 --> 00:00:39.660
We have NG Style, which again will take
an object and apply style to an element.

9
00:00:39.660 --> 00:00:40.170
Nothing fancy.

10
00:00:42.320 --> 00:00:44.545
There's some other ones
that are interesting.

11
00:00:46.540 --> 00:00:47.767
&gt;&gt; Scott Moss: Let me see, ngStyle,

12
00:00:47.767 --> 00:00:49.050
no this might-

13
00:00:49.050 --> 00:00:50.130
&gt;&gt; Speaker 2: Maybe-
&gt;&gt; Scott Moss: What's wrong?

14
00:00:50.130 --> 00:00:51.570
&gt;&gt; Speaker 2: It's hidden.

15
00:00:51.570 --> 00:00:52.080
&gt;&gt; Scott Moss: Hidden?
&gt;&gt; Speaker 2: Yeah.

16
00:00:53.310 --> 00:00:55.015
&gt;&gt; Scott Moss: Well you can
bind to the hidden Hidden

17
00:00:55.015 --> 00:00:55.865
properties-
&gt;&gt; Speaker 2: Right.

18
00:00:55.865 --> 00:00:57.915
&gt;&gt; Scott Moss: Yeah,
like that because that's a property.

19
00:00:57.915 --> 00:00:58.621
So, probably not.

20
00:00:58.621 --> 00:01:01.925
So, I guess that's a good
segue to go into, now,

21
00:01:01.925 --> 00:01:06.085
talk about the structural directives,
which are the more powerful directives,

22
00:01:06.085 --> 00:01:09.225
the ones that we use, and
take advantage of the template syntax.

23
00:01:09.225 --> 00:01:10.155
So, some of those include,

24
00:01:10.155 --> 00:01:14.454
and you've been using one pretty
much this whole time, NG4.

25
00:01:14.454 --> 00:01:18.970
So, NG4 is a structural directive it
pretty much just uses the template.

26
00:01:20.390 --> 00:01:24.722
Syntax from the shadow dom and all it
does is just replace that template with

27
00:01:24.722 --> 00:01:27.410
an empty script tag, that's all it does.

28
00:01:27.410 --> 00:01:30.740
So, it actually removes it from the dom
and replaces it with an empty script tag.

29
00:01:30.740 --> 00:01:32.888
So, what we're going to
do is we're going to,

30
00:01:32.888 --> 00:01:36.240
actually that's going to be
an exercise for you guys.

31
00:01:36.240 --> 00:01:41.160
So, let's just walk through how N G F
works, some of the other ones like N G

32
00:01:41.160 --> 00:01:44.530
switch and stuff like that so
we can get a handle on it.

33
00:01:44.530 --> 00:01:49.277
So, for instance,
let's change some of the stuff around,

34
00:01:49.277 --> 00:01:54.518
let's go to
&gt;&gt; Scott Moss: Let's go to items,

35
00:01:54.518 --> 00:01:55.872
see what's going on in here.

36
00:02:00.436 --> 00:02:05.460
&gt;&gt; Scott Moss: So, we'll just add
another button down here, let's do that.

37
00:02:05.460 --> 00:02:07.775
That's a nice, fancy CSS.

38
00:02:12.710 --> 00:02:17.924
&gt;&gt; Scott Moss: So, on click
&gt;&gt; Scott Moss: we'll

39
00:02:17.924 --> 00:02:19.850
just toggle something.

40
00:02:19.850 --> 00:02:25.370
We'll say, show equals not show.

41
00:02:27.380 --> 00:02:27.880
Let's do that.

42
00:02:29.660 --> 00:02:39.460
So, now inside of this component,
&gt;&gt; Speaker 3: Probably

43
00:02:39.460 --> 00:02:40.660
want to get some text in your book.

44
00:02:41.940 --> 00:02:42.440
&gt;&gt; Scott Moss: Yeah.

45
00:02:46.134 --> 00:02:46.790
&gt;&gt; Scott Moss: Toggle show.

46
00:02:48.530 --> 00:02:49.863
Then I will put some text down there.

47
00:03:03.128 --> 00:03:07.380
&gt;&gt; Scott Moss: So, you noticed most
structural directives start with the star.

48
00:03:07.380 --> 00:03:08.852
That's actually the shortcut syntax.

49
00:03:08.852 --> 00:03:11.840
This asterisk, or the star,
like we talked about yesterday,

50
00:03:11.840 --> 00:03:15.570
is really just a shortcut for the template
syntax which will look like this.

51
00:03:15.570 --> 00:03:18.250
And, we could actually just
convert it to this anyway,

52
00:03:18.250 --> 00:03:19.925
so it's really just Show here.

53
00:03:19.925 --> 00:03:24.755
It would actually look like this.

54
00:03:30.796 --> 00:03:31.805
&gt;&gt; Scott Moss: That's the equivalent.

55
00:03:34.510 --> 00:03:36.605
&gt;&gt; Scott Moss: So,
that's all this is doing.

56
00:03:36.605 --> 00:03:38.365
So, you don't have to
write it all the time.

57
00:03:38.365 --> 00:03:40.275
And, only structural
directives can do this.

58
00:03:40.275 --> 00:03:44.050
So, when you see that, you know that
It's changing the HTML somewhere,

59
00:03:44.050 --> 00:03:45.230
it's changing the content.

60
00:03:45.230 --> 00:03:48.490
You could think of it if you ever got
deep into Angular 1 directives, it was

61
00:03:48.490 --> 00:03:53.360
where you did tricky things in the compile
phase from the directive before the link.

62
00:03:53.360 --> 00:03:57.481
Is there still something like priority so
if you hit two of those

63
00:03:57.481 --> 00:04:01.740
on the edge run you can tell
which one is going to hit first?

64
00:04:01.740 --> 00:04:05.070
I don't know how they handle priorities,
the story there.

65
00:04:05.070 --> 00:04:07.474
I don't think this it is
well documented yet, but

66
00:04:07.474 --> 00:04:10.811
I'm sure they have to have some type
of system setup for priorities.

67
00:04:10.811 --> 00:04:12.630
How you would handle that, I am not sure.

68
00:04:12.630 --> 00:04:15.500
I will figure that out for
you because that's interesting.

69
00:04:17.200 --> 00:04:18.166
All right, so let's check it out.

70
00:04:30.595 --> 00:04:35.917
&gt;&gt; Scott Moss: Items, toggle show.

71
00:04:35.917 --> 00:04:37.110
All right, so I click it.

72
00:04:38.660 --> 00:04:41.460
All I'm doing is saying
show equals not show.

73
00:04:41.460 --> 00:04:43.770
So, this is doing an inverse
every single time I click it.

74
00:04:46.140 --> 00:04:49.250
So that's NGF and if we inspect the dom,
if we look at this, yes?

75
00:04:49.250 --> 00:04:52.710
&gt;&gt; Speaker 4: I was just going to say that
I noticed that the, that when you click

76
00:04:52.710 --> 00:04:56.850
the button, it's actually firing
the click event on the parent dev.

77
00:04:56.850 --> 00:05:01.530
&gt;&gt; Scott Moss: It is, so if you want to
get around that, then what we would have

78
00:05:01.530 --> 00:05:07.620
to do is we would have to make
an actual statement here that executes.

79
00:05:07.620 --> 00:05:11.152
So, let's say toggle by
the pass in the event.

80
00:05:14.885 --> 00:05:19.226
&gt;&gt; Scott Moss: And then,
down here, toggle grab the event.

81
00:05:22.870 --> 00:05:24.929
&gt;&gt; Scott Moss: Let's continue
to do what we were doing before.

82
00:05:31.748 --> 00:05:37.305
&gt;&gt; Scott Moss: But, then you also
want to do event.stopPropagation

83
00:05:37.305 --> 00:05:40.216
to stop it from bubbling up.

84
00:05:51.885 --> 00:05:53.970
&gt;&gt; Scott Moss: Any questions on NGF?

85
00:05:56.840 --> 00:06:01.840
So, very similar to like NG4, they pretty
much work the same way as far as, you can

86
00:06:01.840 --> 00:06:06.510
expect them to completely change how the
DOM templates are going to be rendered.

87
00:06:06.510 --> 00:06:09.630
And, let's actually, I think it's
valuable to look at the DOM here

88
00:06:09.630 --> 00:06:12.150
while this stuff is being
toggled to see what's going on.

89
00:06:12.150 --> 00:06:14.646
So let's do that.
Get over there.

90
00:06:17.235 --> 00:06:19.743
&gt;&gt; Scott Moss: So, if we look right here,
there's this comment here,

91
00:06:19.743 --> 00:06:21.670
we have the H1's totally in there.

92
00:06:21.670 --> 00:06:24.680
And then, when we click it,
it actually removes it.

93
00:06:24.680 --> 00:06:29.860
This is important because in Angular 1,
they have NG low, NG high.

94
00:06:29.860 --> 00:06:33.499
NG high just hid it with CSS,
but it was still in the DOM,

95
00:06:33.499 --> 00:06:37.850
which people's like no
that's performing and stuff.

96
00:06:37.850 --> 00:06:41.360
But, actually if it's leaving like all
these events and stuff around, it's using

97
00:06:41.360 --> 00:06:44.600
up resources that could be used elsewhere,
if I change detection and what-not.

98
00:06:44.600 --> 00:06:48.350
But, also on the flip-side,
if you remove it like NG If does,

99
00:06:48.350 --> 00:06:50.560
then it's really expensive
initializing the component.

100
00:06:50.560 --> 00:06:53.360
So, what they did was,
when the component NG If

101
00:06:53.360 --> 00:06:58.410
is smart enough to keep the component
state, or that element's state.

102
00:06:58.410 --> 00:07:02.600
So, when it comes back it doesn't have to
reinitialize, so it's not that expensive.

103
00:07:02.600 --> 00:07:03.830
So, it's the best of both worlds.

104
00:07:03.830 --> 00:07:06.200
So, that's what NG If does now,
whereas it didn't before.

105
00:07:07.870 --> 00:07:08.530
So, it's pretty cool.

106
00:07:12.020 --> 00:07:17.180
Any questions on that?

107
00:07:17.180 --> 00:07:22.490
Alright, so I do have one more example
I could go through to show you, to

108
00:07:22.490 --> 00:07:25.840
solidify your understanding of attribute
directives, I could totally do that.

109
00:07:27.130 --> 00:07:29.930
If you need it, yeah you need it.

110
00:07:32.110 --> 00:07:33.248
Let's do it.

111
00:07:33.248 --> 00:07:35.793
[LAUGH] What am I saying.

112
00:07:35.793 --> 00:07:36.820
Of course.

113
00:07:36.820 --> 00:07:38.074
Let's make another one.

114
00:07:38.074 --> 00:07:40.060
Actually, I kind of made one,
let's just go through it.

115
00:07:40.060 --> 00:07:41.088
So, I made the spinner one.

116
00:07:41.088 --> 00:07:44.930
This directive just spins
when you hover over it.

117
00:07:44.930 --> 00:07:47.120
So, let's just walk through
why this is happening here.

118
00:07:47.120 --> 00:07:49.260
It's very similar to the one we just made.

119
00:07:49.260 --> 00:07:51.262
It's a directive, has a selector spinner,

120
00:07:51.262 --> 00:07:57.110
mouse over mouse out on the host,
just run the same method.

121
00:07:57.110 --> 00:08:02.080
And, all that method does
is just set the style.

122
00:08:02.080 --> 00:08:05.420
So, its a transform with an ease in, and

123
00:08:05.420 --> 00:08:09.270
then it just rotates on
an increasing degree.

124
00:08:10.790 --> 00:08:12.057
That's it.
We'll walk through this,

125
00:08:12.057 --> 00:08:15.610
and then we'll enhance it and
maybe we'll talk about some more stuff.

126
00:08:15.610 --> 00:08:17.140
So, let's see how that happens,
how that stuff works.

127
00:08:17.140 --> 00:08:18.748
I have it here.
I'm going to go back to app.

128
00:08:18.748 --> 00:08:22.390
Then, I think I already have it in app.

129
00:08:23.940 --> 00:08:29.300
Here to, let's see, yeah,
yep it's right there.

130
00:08:30.610 --> 00:08:31.440
So, let's take a look at that.

131
00:08:33.210 --> 00:08:36.255
It's this red square right here,
so hover over this.

132
00:08:36.255 --> 00:08:39.165
Ten degrees out ten degrees,
ten degrees, ten degrees.

133
00:08:39.165 --> 00:08:40.385
And you can see it will keep going.

134
00:08:41.575 --> 00:08:42.075
Forever.

135
00:08:44.489 --> 00:08:46.745
&gt;&gt; Scott Moss: So, as you see
directives are very, very powerful.

136
00:08:47.895 --> 00:08:52.686
Very, very simple to their component
children because they don't have

137
00:08:52.686 --> 00:08:56.640
templates, which actually
just simplifies it a lot.

138
00:08:56.640 --> 00:09:00.470
But, again when you get into
custom structural components or

139
00:09:00.470 --> 00:09:02.830
directors, they get pretty complicated.

140
00:09:02.830 --> 00:09:08.490
There's alot of internal things that
you have to use to manipulate the dial.

141
00:09:14.148 --> 00:09:16.196
&gt;&gt; Scott Moss: So,
any questions on this stuff?

142
00:09:20.750 --> 00:09:21.920
&gt;&gt; Speaker 5: There was one here.

143
00:09:21.920 --> 00:09:23.040
&gt;&gt; Scott Moss: Yes.

144
00:09:23.040 --> 00:09:25.410
&gt;&gt; Speaker 5: One second let me find it.

145
00:09:25.410 --> 00:09:27.760
How can I get a toggle button trigger for
a particular element?

146
00:09:29.390 --> 00:09:31.220
And not for all of the boxes.

147
00:09:32.640 --> 00:09:35.790
&gt;&gt; Scott Moss: How can I get a toggle-
&gt;&gt; Speaker 5: Button trigger for

148
00:09:35.790 --> 00:09:37.330
a particular element.

149
00:09:37.330 --> 00:09:42.290
&gt;&gt; Scott Moss: For a particular element,
&gt;&gt; Scott Moss: and not for all the boxes.

150
00:09:45.030 --> 00:09:46.270
Let me try to understand.

151
00:09:46.270 --> 00:09:50.060
So, they only want, I'm guessing what
they're asking is, instead of having all

152
00:09:50.060 --> 00:09:52.825
of these toggles sharing the same state,
they only want it to show on one?

153
00:09:52.825 --> 00:09:56.130
&gt;&gt; Speaker 5: Yeah, or
maybe just any element.

154
00:09:56.130 --> 00:09:58.940
&gt;&gt; Scott Moss: Okay, well it looks like
I'm doing this inside of an items list

155
00:09:58.940 --> 00:10:02.250
that's repeating over, yeah.

156
00:10:02.250 --> 00:10:05.080
So, NG4, so it's going to do it for all of
them because it's sharing the same state.

157
00:10:06.130 --> 00:10:10.640
Because this shows, this model,
the show bullion is just one.

158
00:10:10.640 --> 00:10:12.380
It's not one for every instance.

159
00:10:12.380 --> 00:10:15.170
So, you would just have to make sure that

160
00:10:15.170 --> 00:10:16.920
you're just not sharing
the same state like I am.

161
00:10:16.920 --> 00:10:20.116
So, maybe have that instance be
inside the, where is it at?.

162
00:10:20.116 --> 00:10:22.210
&gt;&gt; Speaker 4: In the details.

163
00:10:22.210 --> 00:10:23.590
&gt;&gt; Scott Moss: Right.

164
00:10:23.590 --> 00:10:24.620
Have it there instead of here.

165
00:10:24.620 --> 00:10:29.090
Because it's just sharing the same one and
that's pretty much it.

166
00:10:29.090 --> 00:10:32.160
Another way you can do is you could
have it to where you click and

167
00:10:32.160 --> 00:10:37.020
it passes in the active items ID,
and only the ID gets to show.

168
00:10:37.020 --> 00:10:38.445
I mean,
there's a lot of ways you can do it.

