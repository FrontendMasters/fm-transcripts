WEBVTT

1
00:00:00.000 --> 00:00:03.927
[MUSIC]

2
00:00:03.927 --> 00:00:07.874
&gt;&gt; Lukas Ruebbelke: So
let's do another one.

3
00:00:07.874 --> 00:00:12.769
Let's think of an appropriate event.

4
00:00:34.669 --> 00:00:38.631
&gt;&gt; Lukas Ruebbelke: Okay, clearly this

5
00:00:38.631 --> 00:00:43.910
is a contrived example.

6
00:00:43.910 --> 00:00:47.700
Like, I would never
really dance in public.

7
00:00:47.700 --> 00:00:52.430
So here this is just an event, a method.

8
00:00:52.430 --> 00:00:56.290
Yes?
&gt;&gt; Speaker 2: So you have dance as

9
00:00:56.290 --> 00:01:01.740
the method name?
&gt;&gt; Speaker 2: That's okay to do?

10
00:01:01.740 --> 00:01:02.510
&gt;&gt; Lukas Ruebbelke: No that's

11
00:01:02.510 --> 00:01:04.240
not okay to do.
&gt;&gt; Speaker 2: Okay.

12
00:01:04.240 --> 00:01:05.220
&gt;&gt; Lukas Ruebbelke: Thank you for saving

13
00:01:05.220 --> 00:01:06.960
my life.
&gt;&gt; Speaker 2: You're welcome.

14
00:01:08.400 --> 00:01:11.110
What did I do?
&gt;&gt; Lukas Ruebbelke: It's what I do

15
00:01:11.110 --> 00:01:11.860
for a living.

16
00:01:11.860 --> 00:01:12.800
I save people's lives.

17
00:01:12.800 --> 00:01:17.410
Okay, so now into our components.

18
00:01:17.410 --> 00:01:22.320
I almost feel like I'm at a concert and
at this

19
00:01:22.320 --> 00:01:26.640
point we're at the hit song and everyone
could just jump in and sing with me.

20
00:01:26.640 --> 00:01:30.162
That it's almost.

21
00:01:31.990 --> 00:01:37.970
It's almost feel like we're going through
like a top 40 songs from like the 80s and

22
00:01:37.970 --> 00:01:39.050
just everybody knows the lyrics.

23
00:01:41.230 --> 00:01:43.831
So I want to

24
00:01:43.831 --> 00:01:52.362
dance
&gt;&gt; Lukas Ruebbelke: Yeah,

25
00:01:52.362 --> 00:01:53.575
that would be more appropriate.

26
00:01:53.575 --> 00:01:56.015
Dance Me.

27
00:01:56.015 --> 00:02:01.937
Okay, and I'm going

28
00:02:01.937 --> 00:02:09.844
to go @Output() dancer.

29
00:02:09.844 --> 00:02:14.930
So creating a new EventEmitter and
what I'm gonna do

30
00:02:14.930 --> 00:02:21.815
here
&gt;&gt; Lukas Ruebbelke: Instead of doing this.

31
00:02:36.638 --> 00:02:38.281
&gt;&gt; Lukas Ruebbelke: You can also omit this

32
00:02:38.281 --> 00:02:40.527
event right from the HTML.

33
00:02:40.527 --> 00:02:44.247
So you would want to do it like this if
you actually needed to perform some logic

34
00:02:44.247 --> 00:02:45.707
before actually emitting that event.

35
00:02:45.707 --> 00:02:49.897
For instance, saying this thing happened
but I don't want to actually do it or

36
00:02:49.897 --> 00:02:53.830
I need to do some small transformation
before I send it out the door.

37
00:02:53.830 --> 00:03:00.053
You can do it that way, or if it is really
similar just pass through sometimes

38
00:03:00.053 --> 00:03:06.472
I will just bypass this entirely to where
I have a component that just inputs and

39
00:03:06.472 --> 00:03:10.377
outputs and
there is nothing else in the class.

40
00:03:21.377 --> 00:03:21.989
&gt;&gt; Lukas Ruebbelke: Did I break

41
00:03:21.989 --> 00:03:27.121
something?
&gt;&gt; Lukas Ruebbelke: Hold on.

42
00:03:27.121 --> 00:03:31.988
Dancer output.
&gt;&gt; Speaker 2: So

43
00:03:31.988 --> 00:03:37.096
in that one isn't it called dancing or

44
00:03:37.096 --> 00:03:40.475
something like that?

45
00:03:40.475 --> 00:03:50.065
Does it have to be the same?
&gt;&gt; Scott Moss: You

46
00:03:50.065 --> 00:03:54.732
don't have a component with that element.
&gt;&gt; Lukas Ruebbelke: That's

47
00:03:54.732 --> 00:03:56.812
right.
&gt;&gt; Scott Moss: Also,

48
00:03:56.812 --> 00:03:58.330
if the property-level decorators.

49
00:03:58.330 --> 00:04:01.100
It just looks weird to anybody for
the inputs and outputs.

50
00:04:01.100 --> 00:04:03.890
You can also use,
you can also define your inputs and

51
00:04:03.890 --> 00:04:07.100
outputs on the component decorator, too.

52
00:04:08.580 --> 00:04:11.610
So right where you put your selector and
your template, you can put input and

53
00:04:11.610 --> 00:04:14.280
output and they both take a raise,
which strings the inputs and

54
00:04:14.280 --> 00:04:15.600
outputs that you want.

55
00:04:15.600 --> 00:04:16.830
That's an alternative syntax.

56
00:04:18.670 --> 00:04:20.610
But I believe the property decorators,

57
00:04:20.610 --> 00:04:24.820
are the preferred sentence.
&gt;&gt; Lukas Ruebbelke: So,

58
00:04:24.820 --> 00:04:25.660
that's why it did not work.

59
00:04:25.660 --> 00:04:29.020
It's because I forgot to go back to my
parent component and wire this out.

60
00:04:29.020 --> 00:04:32.360
So now, when dancer fires,

61
00:04:32.360 --> 00:04:38.190
it's going to fire this event here and
we're going to set this.

62
00:04:39.730 --> 00:04:40.750
Now what I also need to do,

63
00:04:40.750 --> 00:04:44.480
I did like half a demo here,
I thought it was ready to go.

64
00:04:44.480 --> 00:04:49.526
Possibly the emit method on the event

65
00:04:49.526 --> 00:04:54.383
emitter is deprecated now.
&gt;&gt; Scott Moss: And

66
00:04:54.383 --> 00:04:57.590
then use text so [INAUDIBLE].
&gt;&gt; Lukas Ruebbelke: Did that just happen

67
00:04:57.590 --> 00:04:59.090
like three days ago?
&gt;&gt; Scott Moss: It

68
00:05:00.660 --> 00:05:01.230
was recent, yeah.
&gt;&gt; Lukas Ruebbelke: My.

69
00:05:01.230 --> 00:05:02.449
&gt;&gt; Scott Moss: Text style.

70
00:05:14.159 --> 00:05:14.910
&gt;&gt; Lukas Ruebbelke: It's only appropriate.

71
00:05:15.930 --> 00:05:17.380
And there we go.

72
00:05:17.380 --> 00:05:20.320
So any questions on events?

73
00:05:21.750 --> 00:05:24.050
You just omit it from the child component,
pick it up,

74
00:05:24.050 --> 00:05:28.628
put put it in the parent component.
&gt;&gt; Lukas Ruebbelke: Are we good

75
00:05:28.628 --> 00:05:30.410
on chats?
&gt;&gt; Speaker 4: Did you cover,

76
00:05:30.410 --> 00:05:35.203
can you omit an object or an array?
&gt;&gt; Lukas Ruebbelke: You can omit anything.

77
00:05:37.423 --> 00:05:38.658
&gt;&gt; Lukas Ruebbelke: So for example,

78
00:05:44.014 --> 00:05:46.161
&gt;&gt; Lukas Ruebbelke: Just see this here.

79
00:05:48.462 --> 00:05:52.868
&gt;&gt; Lukas Ruebbelke: [SOUND]

80
00:05:58.245 --> 00:05:59.452
&gt;&gt; Lukas Ruebbelke: So we have an items

81
00:05:59.452 --> 00:06:02.920
list, and, this is in our sample app.

82
00:06:02.920 --> 00:06:04.740
So when something is selected,
select item.

83
00:06:06.170 --> 00:06:10.100
And then in the handler,
it's actually getting the item object.

84
00:06:11.810 --> 00:06:14.550
And, so it can be a, you know,
pretty much any value.

85
00:06:14.550 --> 00:06:19.218
Whatever you pass up that's what
your dollar event is going to

86
00:06:19.218 --> 00:06:23.698
be.
&gt;&gt; Lukas Ruebbelke: Next

87
00:06:23.698 --> 00:06:29.120
question?
&gt;&gt; Lukas Ruebbelke: Are we good?

88
00:06:29.120 --> 00:06:31.290
&gt;&gt; Speaker 4: I don't know if you want to

89
00:06:31.290 --> 00:06:36.150
cover this later or not but they're kind
of curious on a discussion when Angular 2

90
00:06:36.150 --> 00:06:41.580
makes sense versus React from a technology
standpoint, but maybe you wanna cover that

91
00:06:41.580 --> 00:06:45.920
towards the end.
&gt;&gt; Lukas Ruebbelke: That might be, so

92
00:06:45.920 --> 00:06:46.690
I will answer this.

93
00:06:46.690 --> 00:06:49.610
This is a much large discussion

94
00:06:49.610 --> 00:06:53.060
than I think the 30 seconds
that I'm going to give it.

95
00:06:53.060 --> 00:06:56.700
I think React is an excellent,
excellent framework.

96
00:06:56.700 --> 00:07:00.760
I think a lot of how they
approach state management and

97
00:07:00.760 --> 00:07:06.210
even component driven design has really
affected how Angular 2 comes together.

98
00:07:06.210 --> 00:07:08.760
Six months ago, I would've probably
said if you're doing something totally

99
00:07:08.760 --> 00:07:13.890
greenfield and
that Reactor's a really strong contender.

100
00:07:13.890 --> 00:07:19.161
Now that we are in beta and
going very quickly to basically

101
00:07:19.161 --> 00:07:24.580
a 1.0 release for Angular 2,
it gets a little bit more nuanced.

102
00:07:25.900 --> 00:07:30.000
I think that according to
Brad Green Angular 2 is really ready for

103
00:07:30.000 --> 00:07:35.390
production other than they're making a few
additional changes to what is available,

104
00:07:35.390 --> 00:07:39.030
to the API, and
working on optimizing the payload.

105
00:07:39.030 --> 00:07:44.040
With that said, for me one of the reasons
why I like Angular 2 so much, and

106
00:07:44.040 --> 00:07:49.070
I would generally at this point
choose Angular 2 over React

107
00:07:49.070 --> 00:07:53.610
is because of the true reactive
mechanisms baked into the framework,

108
00:07:53.610 --> 00:07:54.680
which you will see tomorrow.

109
00:07:54.680 --> 00:07:59.380
I think that's really,
really core, or it's just key for

110
00:07:59.380 --> 00:08:04.270
building out like large scale applications
that when you have observables baked

111
00:08:04.270 --> 00:08:09.560
into it that you can take the kind of
reactive patterns, especially reducts.

112
00:08:09.560 --> 00:08:12.360
And applied into Angular, now you
can have, you have this parody, but

113
00:08:12.360 --> 00:08:16.110
then you add in the new change detection,
which for

114
00:08:16.110 --> 00:08:21.185
a lot of benchmarks,
as fast if not faster than React.

115
00:08:21.185 --> 00:08:26.380
And with the, kind of reactive thing,
being the big one,

116
00:08:26.380 --> 00:08:33.420
baked into http, and forms,
that to me is just huge.

117
00:08:33.420 --> 00:08:37.490
It's really a toss-up, I would have
to know more to say yes or no.

118
00:08:37.490 --> 00:08:38.250
Which one to choose.

119
00:08:38.250 --> 00:08:43.560
I think they're both great frameworks, but
one because I already understand Angular.

120
00:08:43.560 --> 00:08:45.040
That's probably where I'm going to stay.

121
00:08:45.040 --> 00:08:49.610
But really I think it comes down to
personal preference and I happen to really

122
00:08:49.610 --> 00:08:55.030
like reactive things, like truly
reactive things, such as observables.

123
00:08:55.030 --> 00:08:57.630
Scott, if you would like to give
a two minute answer to that,

124
00:08:57.630 --> 00:08:59.040
I think this is interesting and

125
00:08:59.040 --> 00:09:01.310
a valuable side discussion.
&gt;&gt; Scott Moss: Yeah.

126
00:09:01.310 --> 00:09:05.410
So I use React all the time using it for
over a year now and Angular.

127
00:09:05.410 --> 00:09:10.320
I would say the reason I would
choose Angular 2 right now would be

128
00:09:10.320 --> 00:09:13.660
I think of react as more of
a library than a framework actually.

129
00:09:13.660 --> 00:09:18.620
It's really just a view library and
you still have to be diligent and

130
00:09:18.620 --> 00:09:21.460
resourceful and figure out
the other pieces as far as like,

131
00:09:21.460 --> 00:09:24.100
what are you gonna use for
your Http client.

132
00:09:24.100 --> 00:09:25.120
State management.

133
00:09:26.330 --> 00:09:28.220
All these other things
you have to figure out.

134
00:09:28.220 --> 00:09:29.800
Some people still use courier with X.

135
00:09:29.800 --> 00:09:31.830
There's just a lot of things
you have to add to it.

136
00:09:31.830 --> 00:09:33.140
Which is fine if you're resourceful and

137
00:09:33.140 --> 00:09:35.250
you're on the bleeding edge of JavaScript,
but for

138
00:09:35.250 --> 00:09:39.050
most people especially in companies
they don't really want to do that.

139
00:09:39.050 --> 00:09:40.739
They want to the complete solution.

140
00:09:40.739 --> 00:09:46.399
So Angular1 was a complete solution but it
turns out it just wasn't as effective and

141
00:09:46.399 --> 00:09:49.524
complete and react showed it's weaknesses.

142
00:09:49.524 --> 00:09:53.450
So Angular 2 keeps that same approach
where we're going to be that same complete

143
00:09:53.450 --> 00:09:54.961
package we were in Angular 1.

144
00:09:54.961 --> 00:09:58.601
But now we're coming back, we're using
standard technologies like Templates,

145
00:09:58.601 --> 00:10:01.669
Shadow Dom, we're gonna be building
with type scripts so tooling and

146
00:10:01.669 --> 00:10:03.460
documentation is better.

147
00:10:03.460 --> 00:10:06.850
And we're also gonna improve and
learn what React did and

148
00:10:06.850 --> 00:10:09.620
apply some of the methodologies and
some of the stuff that people are doing

149
00:10:09.620 --> 00:10:11.570
with unidirectional data flow and
what not.

150
00:10:11.570 --> 00:10:14.590
So they kept the same stuff,
they learned from React.

151
00:10:14.590 --> 00:10:15.940
And they cooperated with them,

152
00:10:15.940 --> 00:10:20.850
they did that stuff and
it still the complete piece of.

153
00:10:20.850 --> 00:10:24.140
If you just want to start building
what I happened to download and

154
00:10:24.140 --> 00:10:29.618
research a thousand different libraries
then I would choose Angular 2.

