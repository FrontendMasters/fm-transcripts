WEBVTT

1
00:00:00.110 --> 00:00:02.610
&gt;&gt; Kyle Simpson: All right,
so interators and generators.

2
00:00:02.610 --> 00:00:06.860
They are an exciting topic, but it is hard
to kind of wrap your brain around until

3
00:00:06.860 --> 00:00:10.780
you've actually put your fingers on
the keyboard and tried it yourself.

4
00:00:10.780 --> 00:00:13.236
So you're gonna get a chance
with this particular exercise.

5
00:00:13.236 --> 00:00:15.713
Here's what you're gonna be creating.

6
00:00:15.713 --> 00:00:20.613
You're gonna take this numbers object
which we've defined here on lines 1, 2,

7
00:00:20.613 --> 00:00:23.990
and 3, and you're going to
make it an iterable object.

8
00:00:23.990 --> 00:00:26.610
But it's not gonna be iterating
over any data that it has,

9
00:00:26.610 --> 00:00:30.400
it's going to be producing
data sort of virtually.

10
00:00:30.400 --> 00:00:35.310
And what you want it to do is that if
you do a default iteration over it,

11
00:00:35.310 --> 00:00:39.730
like you see with the for of loop, you
want it to be able to spit out the values

12
00:00:39.730 --> 00:00:41.840
from 0 up to 100, incrementing by 1.

13
00:00:42.950 --> 00:00:48.150
So you should define a symbol.iterator
on it that can loop out

14
00:00:48.150 --> 00:00:51.850
all of those values, yield out all
of those values from 0 to a 100.

15
00:00:51.850 --> 00:00:55.040
However, that's only
the default iteration.

16
00:00:55.040 --> 00:00:59.130
We also want to support
customizing the iteration

17
00:00:59.130 --> 00:01:03.830
by calling the iterator directly and
passing in certain information.

18
00:01:03.830 --> 00:01:09.450
So we want to be able to tell it I want
the numbers object to iterate from 6 up

19
00:01:09.450 --> 00:01:16.360
to 30 step counting by 4, and that should
be able to print out those values.

20
00:01:16.360 --> 00:01:22.040
Now, what you see here is a reference to
being able to print out those values,

21
00:01:22.040 --> 00:01:26.160
which means you're gonna wanna
turn this into a template literal.

22
00:01:26.160 --> 00:01:30.280
And you're gonna wanna iterate
over the numbers object and

23
00:01:30.280 --> 00:01:33.580
put it into an array that
can then be stringified.

24
00:01:33.580 --> 00:01:36.830
So you're probably gonna wanna
use something like the hint here,

25
00:01:36.830 --> 00:01:41.700
which is dot, dot, dot, spreading
out the iterator into an array, and

26
00:01:41.700 --> 00:01:43.000
then dropping the array in.

27
00:01:43.000 --> 00:01:45.860
So make sure to take note of that hint.

28
00:01:45.860 --> 00:01:50.690
But your numbers symbol.iterator
is just a regular function,

29
00:01:50.690 --> 00:01:53.000
so it needs to take some inputs.

30
00:01:53.000 --> 00:01:58.268
Using what you know about Destructuring,
you should have some named inputs that

31
00:01:58.268 --> 00:02:04.013
have some defaults where the default is to
start at 0 and end at 100, stepping by 1.

32
00:02:04.013 --> 00:02:08.380
And then you should be able to call that
function and use some named arguments.

33
00:02:08.380 --> 00:02:11.820
So in other words, we're pulling together
a variety of things that we talked about

34
00:02:11.820 --> 00:02:15.220
so far into one exercise.

35
00:02:15.220 --> 00:02:17.380
This is not actually
that many lines of code,

36
00:02:17.380 --> 00:02:20.360
maybe a total of five
to eight lines of code.

37
00:02:20.360 --> 00:02:24.230
But the real trick here is to think
about how do I bring each of these

38
00:02:24.230 --> 00:02:25.620
pieces together?

39
00:02:25.620 --> 00:02:28.450
Start by figuring out how
do I define my iterator?

40
00:02:28.450 --> 00:02:30.420
How do I pass it some inputs?

41
00:02:30.420 --> 00:02:32.110
And how do I iterate over it?

42
00:02:32.110 --> 00:02:37.790
Okay, so we would normally take probably
about ten minutes or so for this exercise,

43
00:02:37.790 --> 00:02:40.810
so we'll come back in a few minutes,
and we'll talk about the solution.

44
00:02:40.810 --> 00:02:43.760
As always,
if you get a bit stuck on this exercise,

45
00:02:43.760 --> 00:02:49.593
feel free to take a look at
the ex.fixed solution file.

