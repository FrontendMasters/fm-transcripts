WEBVTT

1
00:00:00.000 --> 00:00:03.650
&gt;&gt; Kyle Simpson: As far as narratives go,
I think that it's important for

2
00:00:03.650 --> 00:00:08.839
us to understand that it's not just a grab
bag of whatever we can figure out that.

3
00:00:08.839 --> 00:00:13.249
That there are some important, larger
narratives happening with the evolution of

4
00:00:13.249 --> 00:00:17.281
language and I think the most important
of those is that JavaScript is moving

5
00:00:17.281 --> 00:00:20.259
in the direction of being
a more declarative language.

6
00:00:20.259 --> 00:00:24.053
Declarative as compared to imperative.

7
00:00:24.053 --> 00:00:28.631
Where declarative means we declare
the outcome, the what, and

8
00:00:28.631 --> 00:00:34.563
we allow the abstractions of the language
to handle the how, so, that the reader is

9
00:00:34.563 --> 00:00:40.029
focused more on the what, the outcome and
even more importantly on the why.

10
00:00:40.029 --> 00:00:44.074
That makes code able
to communicate better.

11
00:00:44.074 --> 00:00:46.989
Generally speaking more declarative
code communicates better.

12
00:00:46.989 --> 00:00:51.904
So for example, some of you probably know
about the dot dot dot spread operator

13
00:00:51.904 --> 00:00:54.450
that was one of the features add in ES6.

14
00:00:54.450 --> 00:00:59.971
And the dot dot dot operator is
replacing the very imperative equivalent

15
00:00:59.971 --> 00:01:05.222
of doing something like a dot apply or
doing something like arguments

16
00:01:05.222 --> 00:01:10.201
that array.call with arguments to
try to erase slices I call with

17
00:01:10.201 --> 00:01:15.303
arguments to try to turn the argument's
object into a real array.

18
00:01:15.303 --> 00:01:18.922
So those are very imperative
approaches to things, and

19
00:01:18.922 --> 00:01:21.390
then we got declarative approaches.

20
00:01:21.390 --> 00:01:24.264
It wasn't so
much you could do a whole new thing,

21
00:01:24.264 --> 00:01:28.342
as it was you could do it in a much
cleaner and more communicative way.

22
00:01:28.342 --> 00:01:31.632
And so that is an important
narrative to understand.

23
00:01:31.632 --> 00:01:33.934
And as we go throughout this course,

24
00:01:33.934 --> 00:01:38.544
you are gonna see features that have
varying degrees of imperativeness or

25
00:01:38.544 --> 00:01:43.524
declarativeness, but I think they do fit
in this larger narrative which says,

26
00:01:43.524 --> 00:01:48.914
these are not necessarily things that no
JavaScript developer has ever done before.

27
00:01:48.914 --> 00:01:53.259
But rather, we've been hacking these
sorts of things for years, and

28
00:01:53.259 --> 00:01:58.046
it's time for the language to support it,
and in as clear, and concise, and

29
00:01:58.046 --> 00:02:00.127
communicable a way as possible.

30
00:02:00.127 --> 00:02:03.278
And so I'm excited about
the future of JavaScript.

31
00:02:03.278 --> 00:02:08.203
It's bright, it's vibrant,
there's lots of amazing things happening.

32
00:02:08.203 --> 00:02:11.077
And quite frankly,
it's good job security for me,

33
00:02:11.077 --> 00:02:14.812
because we're gonna continue to
have lots of things to talk about.

34
00:02:14.812 --> 00:02:19.316
And you'll see that this course will have
to get updated on a one or two-year basis,

35
00:02:19.316 --> 00:02:22.940
cuz there's gonna be new stuff that
keeps landing in the language.

36
00:02:22.940 --> 00:02:24.520
And that's a good and healthy thing.

