WEBVTT

1
00:00:00.000 --> 00:00:03.150
&gt;&gt; Kyle Simpson: So
async functions they are amazing.

2
00:00:03.150 --> 00:00:05.689
They are so
much better than promised Jane's.

3
00:00:05.689 --> 00:00:10.527
Let's get some practice using an async
await syntax that synchronous

4
00:00:10.527 --> 00:00:12.332
async pattern so called.

5
00:00:12.332 --> 00:00:14.116
Let's get some practice with that.

6
00:00:14.116 --> 00:00:17.569
We're gonna be making
fake ajax calls here.

7
00:00:17.569 --> 00:00:20.611
We're going to be requesting
three separate files.

8
00:00:20.611 --> 00:00:22.888
We want to request them concurrently,

9
00:00:22.888 --> 00:00:27.511
meaning we want to request them all at
once but we don't want to print them ASAP,

10
00:00:27.511 --> 00:00:30.282
I mean we don't want to
print them in any order.

11
00:00:30.282 --> 00:00:34.292
We want to make sure to print them in
the specific order that they should be

12
00:00:34.292 --> 00:00:35.099
coming back.

13
00:00:35.099 --> 00:00:38.516
So in other words, we want to
print the response to file one and

14
00:00:38.516 --> 00:00:42.154
then the response to file two and
then the response to file three.

15
00:00:42.154 --> 00:00:47.431
So we're requesting them concurrently,
or printing them sequentially, but

16
00:00:47.431 --> 00:00:52.483
the last little twist is that we do wanna
print them as soon as they come back.

17
00:00:52.483 --> 00:00:57.545
So in other words, we want to if
file one's response comes back right

18
00:00:57.545 --> 00:01:02.457
away print it even if we haven't yet
gotten file two or file three.

19
00:01:02.457 --> 00:01:06.420
So, we can't just wait for
all of them to finish for printing room.

20
00:01:06.420 --> 00:01:09.126
So, we're gonna be using promises here,

21
00:01:09.126 --> 00:01:12.591
that's what your get file
utility that you'll call.

22
00:01:12.591 --> 00:01:17.370
You'll call that with the thing that
you're, the string that you're getting and

23
00:01:17.370 --> 00:01:20.987
it will give you a promise,
it'll be awaiting that promise and

24
00:01:20.987 --> 00:01:23.662
then using that result to print it out,
okay?

25
00:01:23.662 --> 00:01:27.595
Again, this is only about
five to eight lines of code.

26
00:01:27.595 --> 00:01:31.521
So don't feel like you need to
write a big, complex solution here.

27
00:01:31.521 --> 00:01:34.747
Just think carefully about
where your awaits need to be.

28
00:01:34.747 --> 00:01:38.774
Because an await does block the execution
of the rest of the function.

29
00:01:38.774 --> 00:01:42.265
And you don't want to block
things unnecessarily.

30
00:01:42.265 --> 00:01:44.886
If you need hint because you get stuck,

31
00:01:44.886 --> 00:01:48.626
feel free to take a look at
the solution file ex.fixed.

32
00:01:48.626 --> 00:01:53.057
We'll be back in a few minutes to talk
about the solution to this exercise.

