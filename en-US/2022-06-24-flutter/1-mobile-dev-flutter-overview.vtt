WEBVTT

1
00:00:00.077 --> 00:00:04.109
So if you're a front ender,
so you're doing front end,

2
00:00:04.109 --> 00:00:07.050
typically today, you have two targets.

3
00:00:07.050 --> 00:00:08.982
You can be doing websites, and

4
00:00:08.982 --> 00:00:13.970
that's probably the most common target
when you are here at Frontend Masters.

5
00:00:13.970 --> 00:00:19.125
So you are a web developer, you are doing
front end in JavaScript, React, Angular,

6
00:00:19.125 --> 00:00:24.149
or whatever framework you are using, or
Manilla Js, or you can do native clients.

7
00:00:24.149 --> 00:00:29.924
Today we are going to be making native
clients, at least at the beginning.

8
00:00:29.924 --> 00:00:34.675
When you go native,
in terms of I wanna make native clients,

9
00:00:34.675 --> 00:00:38.586
you can use official SDKs,
such as Swift for iOS,

10
00:00:38.586 --> 00:00:43.265
Kotlin for Android, or
you can use a cross-platform SDK.

11
00:00:43.265 --> 00:00:47.696
So a cross-platform SDK is
typically a solution that is not

12
00:00:47.696 --> 00:00:52.215
actually from the platform,
it's not by the Android team,

13
00:00:52.215 --> 00:00:57.995
it's not by the iOS team, it's just
another team, typically open source.

14
00:00:57.995 --> 00:01:05.380
It can let you compile or build an app for
several platforms from the same project.

15
00:01:05.380 --> 00:01:07.603
And this is where we are today,

16
00:01:07.603 --> 00:01:12.061
we are going to be building apps
using a cross-platform SDK.

17
00:01:12.061 --> 00:01:16.225
And within this world here,
today we have several solutions.

18
00:01:16.225 --> 00:01:20.348
These are the top three.

19
00:01:20.348 --> 00:01:23.867
So in the top three options that we have,

20
00:01:23.867 --> 00:01:28.949
we have React Native,
Microsoft Xamarin, and Flutter.

21
00:01:28.949 --> 00:01:33.702
So React Native was the king
until probably 2020,

22
00:01:33.702 --> 00:01:39.076
in terms of cross-platform SDK,
and now Flutter is actually

23
00:01:39.076 --> 00:01:43.643
getting over React Native
in terms of usage, okay?

24
00:01:43.643 --> 00:01:49.600
So Flutter is kind of the king these days
for modern cross-platform app development,

25
00:01:49.600 --> 00:01:54.668
and that's the framework, the UI
platform that we are going to be using.

26
00:01:54.668 --> 00:02:00.509
And with Flutter,
we can actually compile apps for Android,

27
00:02:00.509 --> 00:02:05.788
for Apple platforms including Mac,
iOS, iPad OS, for

28
00:02:05.788 --> 00:02:12.555
Windows, and something interesting
is that we can also compile PWAs.

29
00:02:12.555 --> 00:02:17.385
So with Flutter,
it's not just native clients,

30
00:02:17.385 --> 00:02:24.520
we will be able to create, to get
an output, to build a web app, website.

31
00:02:24.520 --> 00:02:27.530
We are not going to write a lot of HTML.

32
00:02:27.530 --> 00:02:31.040
We're not going to write JavaScript
at all for that web app.

33
00:02:31.040 --> 00:02:37.149
We will write Dart and Flutter and
the output will be a web app, okay?

34
00:02:37.149 --> 00:02:40.932
But have in mind that when
you're doing Flutter,

35
00:02:40.932 --> 00:02:44.636
you are also making websites or
web apps, okay?

36
00:02:44.636 --> 00:02:49.391
Do you have any question at
this point on where Flutter

37
00:02:49.391 --> 00:02:52.570
fits in the app development world?

38
00:02:52.570 --> 00:02:54.590
&gt;&gt; What are the Windows
apps that it produces?

39
00:02:54.590 --> 00:02:55.805
Is it executables or is it?

40
00:02:55.805 --> 00:02:56.865
&gt;&gt; That's a good question.

41
00:02:56.865 --> 00:03:01.027
So the question has to do with Windows and
what kind of app it's actually creating.

42
00:03:01.027 --> 00:03:04.948
So it has several targets,
or several outputs.

43
00:03:04.948 --> 00:03:11.645
It can create Win32 apps,
compatible from Windows 7, okay, to today.

44
00:03:11.645 --> 00:03:16.296
And it can also create universal
Windows applications that actually will

45
00:03:16.296 --> 00:03:18.029
go to the Microsoft Store.

46
00:03:18.029 --> 00:03:20.632
So it supports both targets for Windows.

47
00:03:20.632 --> 00:03:25.993
So classic Win32 apps and
modern Windows development for

48
00:03:25.993 --> 00:03:30.077
the store for Windows 10 and Windows 11.

49
00:03:30.077 --> 00:03:32.229
I have a question in the chat.

50
00:03:32.229 --> 00:03:34.810
&gt;&gt; Yeah,
they're just saying it supports Linux.

51
00:03:34.810 --> 00:03:38.260
&gt;&gt; Yeah, it support Linux as well as many
other platforms, I'm just picking the top

52
00:03:38.260 --> 00:03:41.120
three here, but yeah, you're right,
it's supported on Linux.

53
00:03:41.120 --> 00:03:45.343
Also there are other platforms that
are in beta, or sometimes in alpha.

54
00:03:45.343 --> 00:03:50.844
For example, you can compile to Folk J OS.

55
00:03:50.844 --> 00:03:51.640
What's that?

56
00:03:51.640 --> 00:03:54.180
That's an OS from Google.

57
00:03:54.180 --> 00:03:59.016
That is the one that is being
used in the Nest display devices,

58
00:03:59.016 --> 00:04:04.332
such as the formerly Google Home devices,
that they have a screen.

59
00:04:04.332 --> 00:04:08.618
You can also target those platforms,
Linux, and many others, okay?

60
00:04:08.618 --> 00:04:15.885
So I'm just picking here the top three
in terms of usage within Flutter, okay?

61
00:04:15.885 --> 00:04:18.187
And many more are coming, actually.

62
00:04:18.187 --> 00:04:22.540
Because it's open source,
anyone can actually make its own compiler.

63
00:04:22.540 --> 00:04:28.283
So you can compile Flutter apps for
other platforms as well.

64
00:04:28.283 --> 00:04:32.459
Okay, so today we're going to
be building Coffee Masters.

65
00:04:32.459 --> 00:04:36.398
Coffee Masters is going to be an app
that is suitable for a coffee shop.

66
00:04:36.398 --> 00:04:39.215
So let's say that we
own now a coffee shop.

67
00:04:39.215 --> 00:04:41.529
So we want users to order from the app.

68
00:04:41.529 --> 00:04:45.642
So we will have a menu, and from the menu,

69
00:04:45.642 --> 00:04:51.179
we will be able to add coffee and
snacks to a cart, okay?

70
00:04:51.179 --> 00:04:53.810
So we're going to use that
to consume web services.

71
00:04:53.810 --> 00:04:59.086
And also to see how data
management works in Flutter.

72
00:04:59.086 --> 00:05:00.461
Okay, so that's our project.

73
00:05:00.461 --> 00:05:02.505
We are going to code the app from scratch.

74
00:05:02.505 --> 00:05:07.456
The only thing that you have already coded
is just some snippet to play with Dart and

75
00:05:07.456 --> 00:05:11.859
some images, but that's all,
everything will be coded from scratch.

76
00:05:11.859 --> 00:05:14.050
We're going to focus on Material Design.

77
00:05:14.050 --> 00:05:18.501
So we haven't seen this yet, but there are
many decisions that we need to make when

78
00:05:18.501 --> 00:05:20.515
we are doing Flutter applications.

79
00:05:20.515 --> 00:05:25.132
One of the decision is which
UI toolkit we want to use.

80
00:05:25.132 --> 00:05:30.086
Material, it's actually an open and
with a free license,

81
00:05:30.086 --> 00:05:35.850
let's say, architectural system for
design, created by Google.

82
00:05:35.850 --> 00:05:38.599
It's called Material Design,
probably you have heard about it.

83
00:05:38.599 --> 00:05:43.027
And Material Design is
a set of best practices and

84
00:05:43.027 --> 00:05:46.058
design patterns to design apps.

85
00:05:46.058 --> 00:05:49.387
And Flutter supports Material Design and

86
00:05:49.387 --> 00:05:54.249
it's compatible with the web,
with Android, or with iOS.

87
00:05:54.249 --> 00:05:59.044
But have in mind that Flutter also
supports other UI toolkits, for example,

88
00:05:59.044 --> 00:06:01.569
there is one within the name Cupertino.

89
00:06:01.569 --> 00:06:06.778
So if I say Cupertino in terms
of mobile app development,

90
00:06:06.778 --> 00:06:09.392
we are talking about Apple.

91
00:06:09.392 --> 00:06:13.739
Cupertino is the city where Apple resides,
where the Apple Park is, okay?

92
00:06:13.739 --> 00:06:21.195
So the Cupertino set of widgets in
Flutter are actually an iOS design.

93
00:06:21.195 --> 00:06:25.713
But if you do that, it's not going to
be visually compatible with Android or

94
00:06:25.713 --> 00:06:26.710
the web, okay?

95
00:06:26.710 --> 00:06:31.739
So we are going to focus on materials that
works everywhere including iOS, okay?

96
00:06:31.739 --> 00:06:37.019
Remember to download the assets and
the help from that URL.

