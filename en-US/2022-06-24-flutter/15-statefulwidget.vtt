WEBVTT

1
00:00:00.310 --> 00:00:06.730
So we need to upgrade our
widget to a state full widget.

2
00:00:07.940 --> 00:00:11.550
So we have two kinds of
widget to the flutter,

3
00:00:11.550 --> 00:00:14.700
stateless widget, stateful widget.

4
00:00:14.700 --> 00:00:19.588
In a stateful widget is the one that
can change its own content based

5
00:00:19.588 --> 00:00:22.740
on things that happen within that widget.

6
00:00:24.030 --> 00:00:25.710
Does it makes sense?

7
00:00:25.710 --> 00:00:28.790
If you receive the name as a property,
from the outside,

8
00:00:28.790 --> 00:00:31.460
it's either a stateless widget.

9
00:00:31.460 --> 00:00:33.040
It receives property from the outside.

10
00:00:34.710 --> 00:00:36.940
We are going to have a lot
of examples of that.

11
00:00:36.940 --> 00:00:42.749
But if the wizard itself is changing
its content based on an event or

12
00:00:42.749 --> 00:00:48.160
an external factor,
then it should be an stateful widget.

13
00:00:48.160 --> 00:00:53.750
So instead of extending from a stateless,
we just extend from a stateful.

14
00:00:54.780 --> 00:00:59.190
But there are a couple
of steps to be done.

15
00:00:59.190 --> 00:01:02.165
Unfortunately, we have
a simpler way to do this.

16
00:01:02.165 --> 00:01:07.785
Instead of doing manually, if you put
your cursor over the class declaration

17
00:01:07.785 --> 00:01:13.245
on both Android Studio and Visual Studio,
you get this little hint there.

18
00:01:13.245 --> 00:01:18.969
Or that you can access that with
Alt+Enter in Android Studio,

19
00:01:18.969 --> 00:01:23.580
or command or ctrl., on Visual Studio.

20
00:01:23.580 --> 00:01:25.601
So when you access that,

21
00:01:25.601 --> 00:01:31.840
there is an option to actually
convert it into an a stateful widget.

22
00:01:31.840 --> 00:01:33.398
Okay, do you see that one?

23
00:01:33.398 --> 00:01:35.610
Convert to a stateful widget.

24
00:01:35.610 --> 00:01:42.420
So if I click there, it actually converted
my great widget into an a stateful widget.

25
00:01:44.190 --> 00:01:49.383
And you can see that a stateful widget has
two steps, that it's weird, to be honest.

26
00:01:49.383 --> 00:01:52.930
The first time you see that,
is kind of what's going on here?

27
00:01:52.930 --> 00:01:58.638
So first, you're a stateful widget, now,
it still contains the same key property.

28
00:01:58.638 --> 00:02:02.598
And now, it has an state object
that is of another class,

29
00:02:02.598 --> 00:02:06.320
that by the way,
the classes start with underscore.

30
00:02:06.320 --> 00:02:08.863
Do you remember what underscore means?

31
00:02:08.863 --> 00:02:12.544
Private, so
actually from the outside of this package,

32
00:02:12.544 --> 00:02:15.310
no one can actually use my state directly.

33
00:02:15.310 --> 00:02:19.451
Was the state another class
extending from a state?

34
00:02:19.451 --> 00:02:24.000
And it receives the name
of the widget as a generic.

35
00:02:24.000 --> 00:02:28.416
It feels strange, by the way,
if it's weird for

36
00:02:28.416 --> 00:02:32.834
you to see this happening
here like two classes,

37
00:02:32.834 --> 00:02:36.417
it's just an executive order, okay?

38
00:02:36.417 --> 00:02:39.060
This is how it is,
this is how flutter works.

39
00:02:39.060 --> 00:02:41.010
Okay, there is no other way to do this.

40
00:02:41.010 --> 00:02:45.358
So you need to grade when you have an a
stateful widget, you have two classes.

41
00:02:45.358 --> 00:02:50.710
The widget itself that actually is
going to be plain simple, always.

42
00:02:50.710 --> 00:02:53.980
Most of the time,
your widget will look like this.

43
00:02:53.980 --> 00:03:01.050
And the current rendering happens
actually in the state, okay?

44
00:03:01.050 --> 00:03:06.310
So if I save this, and it try this again,
if it's still not working.

45
00:03:07.360 --> 00:03:11.772
Hey, Max, you lied to us, we graded
a stateful wizard, but nothing happens.

46
00:03:11.772 --> 00:03:16.803
Because there is one more step,
every time you make

47
00:03:16.803 --> 00:03:21.722
a change in the state that
will make a re-render.

48
00:03:21.722 --> 00:03:26.730
First, every time there is the bill
function is being executed.

49
00:03:26.730 --> 00:03:29.764
In this case,
we are initializing a new variable name.

50
00:03:29.764 --> 00:03:30.680
And this is a problem,

51
00:03:30.680 --> 00:03:33.537
because every time we're building,
we're starting from scratch.

52
00:03:33.537 --> 00:03:38.352
So actually,
when I need to move my variable outside,

53
00:03:38.352 --> 00:03:45.280
I make it a property of the class of the
state class, this is my state variable.

54
00:03:47.070 --> 00:03:52.059
So the state variable is one or
more variables that are actually defining

55
00:03:52.059 --> 00:03:55.670
changes in my user interface
in this widget, okay?

56
00:03:55.670 --> 00:04:00.810
So I just move the variable
as a property of the class.

57
00:04:00.810 --> 00:04:03.416
And the other thing that
I need to change is,

58
00:04:03.416 --> 00:04:05.819
I cannot change the variable like this.

59
00:04:05.819 --> 00:04:12.472
I need to do that within
a set state method.

60
00:04:12.472 --> 00:04:18.345
So there is a set state method that
receives a function as an argument,

61
00:04:18.345 --> 00:04:24.029
where you need to put all the changes
that you trigger every render.

62
00:04:27.132 --> 00:04:28.093
I don't need that semicolon.

63
00:04:30.974 --> 00:04:33.790
So we can put this in, if I save, now,

64
00:04:33.790 --> 00:04:39.180
that coma shouldn't be go there and
there is a semicolon, there we are.

65
00:04:40.280 --> 00:04:43.294
You have the code, if you wanna
see it in the companion website.

66
00:04:43.294 --> 00:04:47.870
So actually, how to make changes
in your own user interface?

67
00:04:47.870 --> 00:04:52.205
You grade variables as as
properties of the state class, and

68
00:04:52.205 --> 00:04:58.130
then you change the values of those
variables within a set state call.

69
00:04:58.130 --> 00:05:03.551
If you're coming from react,
from let's say, classic react development.

70
00:05:03.551 --> 00:05:08.033
We did the same thing with
class components in React,

71
00:05:08.033 --> 00:05:10.830
they had the same set state idea.

72
00:05:10.830 --> 00:05:14.640
So we change the state in a setState.

73
00:05:14.640 --> 00:05:18.328
So if I save these now and
try these on the screen, I started typing.

74
00:05:18.328 --> 00:05:22.262
And if you look at that every
time the variable is changing,

75
00:05:22.262 --> 00:05:25.023
the system is re- rendering the widget.

76
00:05:25.023 --> 00:05:30.235
So it's going through
the bill method again, okay?

77
00:05:30.235 --> 00:05:32.266
Make sense?

78
00:05:32.266 --> 00:05:35.139
So we're going to do this a lot
a couple of times anyway,

79
00:05:35.139 --> 00:05:37.168
stateful widget, stateless widget.

80
00:05:37.168 --> 00:05:40.823
It takes time to get used
to this practice, mostly,

81
00:05:40.823 --> 00:05:44.657
if you have never played
with the reactive framework.

82
00:05:44.657 --> 00:05:48.121
Do you have any question on
this little grade impression?

83
00:05:48.121 --> 00:05:53.730
&gt;&gt; No, it's actually,
is there any shortcut to get a state one?

84
00:05:53.730 --> 00:05:56.584
&gt;&gt; So if you wanna create in a state full-
&gt;&gt; State full.

85
00:05:56.584 --> 00:06:00.069
&gt;&gt; From the ground up, it's stful.

86
00:06:00.069 --> 00:06:05.081
So, stful, Enter, it creates both,
and then you start the class.

87
00:06:05.081 --> 00:06:08.669
It creates both the widget class and
the state class, and

88
00:06:08.669 --> 00:06:11.370
it makes everything connected properly.

89
00:06:12.600 --> 00:06:16.169
Okay, so again,
to create a new stateful widget.

90
00:06:16.169 --> 00:06:21.968
If you type stful, Enter, and immediately
the name of the widget that you want,

91
00:06:21.968 --> 00:06:24.870
like person name, whatever.

92
00:06:24.870 --> 00:06:27.688
So in this case,
it's creating the widget, the state and

93
00:06:27.688 --> 00:06:29.770
everything is automatically connected.

94
00:06:30.870 --> 00:06:35.694
You will see that flutter is actually,

95
00:06:35.694 --> 00:06:39.064
the flutter code is large.

96
00:06:39.064 --> 00:06:42.834
So typically,
when you look at flutter code,

97
00:06:42.834 --> 00:06:45.934
you have a lot of lines of source code.

98
00:06:45.934 --> 00:06:50.199
But we are heavily based on
the tool to make that code.

99
00:06:50.199 --> 00:06:54.565
Not every time we are going
to create these manually.

100
00:06:54.565 --> 00:06:57.770
For example,
remember the column that I did?

101
00:06:59.140 --> 00:07:04.764
What if I want now my, let's see,
I want the text to be in a row.

102
00:07:04.764 --> 00:07:07.715
We have column and also, we have row,

103
00:07:07.715 --> 00:07:12.310
row will actually stack
elements in the same row.

104
00:07:12.310 --> 00:07:18.430
Okay, so in the same line, so I need to
add a row and the row has children inside.

105
00:07:18.430 --> 00:07:21.551
But instead of doing that, look at this,

106
00:07:21.551 --> 00:07:26.110
if I put my cursor over the text,
I have this little guy here.

107
00:07:27.680 --> 00:07:33.359
If I click there, I have a lot of options
available on both Android Studio and

108
00:07:33.359 --> 00:07:35.850
ambitious Studio code.

109
00:07:35.850 --> 00:07:37.754
I can wrap this with the row, or

110
00:07:37.754 --> 00:07:41.210
with other things that we
don't know what they are yet.

111
00:07:42.260 --> 00:07:47.523
So if I say wrap with row, it creates
the row with the children property,

112
00:07:47.523 --> 00:07:52.030
the array, I need to put my text
inside with a trailing comma.

113
00:07:53.890 --> 00:07:58.755
So most of the time, we're going
to be using these tools to wrap,

114
00:07:58.755 --> 00:08:03.510
to add widgets, remove widgets and
work with widgets, okay?

115
00:08:03.510 --> 00:08:06.679
So now, you can add another
text here with something else.

116
00:08:10.236 --> 00:08:16.194
Okay, something like that coma, so
now, there is a row there, okay?

117
00:08:16.194 --> 00:08:21.074
And then we have a column with a row and
we can nest this as much as possible.

118
00:08:21.074 --> 00:08:25.593
And why do I have a warning
there on that text?

119
00:08:25.593 --> 00:08:26.627
&gt;&gt; Const.

120
00:08:26.627 --> 00:08:31.518
&gt;&gt; The const, because this is not
changing, it's asking me for a const.

121
00:08:31.518 --> 00:08:35.113
Again, if I don't add the const,
nothing will happen, but

122
00:08:35.113 --> 00:08:39.710
the compiler thinks that it will be
more efficient unless a buggy, okay?

123
00:08:39.710 --> 00:08:44.850
To define that as a const, because I
know the content is not changing, okay?

124
00:08:44.850 --> 00:08:45.820
Make sense?

125
00:08:45.820 --> 00:08:49.789
So we have a stateless widget and
we have a stateful widget.

126
00:08:49.789 --> 00:08:54.050
On every situation you pick the one
that you prefer or you need.

127
00:08:54.050 --> 00:08:58.028
And anyway, if you pick the wrong one,
it's easy to move to the other one.

128
00:08:58.028 --> 00:09:01.643
It's just changing the superclass and
adding or

129
00:09:01.643 --> 00:09:06.590
removing that auxiliary class that
we are adding the state class.

