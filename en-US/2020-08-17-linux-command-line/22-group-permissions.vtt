WEBVTT

1
00:00:00.000 --> 00:00:05.475
Okay, so now I exit I'm back to primary.

2
00:00:08.113 --> 00:00:10.054
And let's talk about permissions now.

3
00:00:17.033 --> 00:00:18.132
Yeah, let's go ahead and do that.

4
00:00:21.373 --> 00:00:24.167
So actually, I'm gonna go back to being
Brian cuz that was a fun experience.

5
00:00:24.167 --> 00:00:29.171
So again, I'm here as Brian,
and where am I?

6
00:00:29.171 --> 00:00:35.255
Let's go to users, Not users,

7
00:00:35.255 --> 00:00:40.209
home, /ubuntu.

8
00:00:45.241 --> 00:00:48.751
Okay, so
I'm inside of Ubuntu's home directory and

9
00:00:48.751 --> 00:00:52.262
you can see here this is all
owned by Ubuntu, Ubuntu.

10
00:00:52.262 --> 00:00:56.975
So if I try and, For

11
00:00:56.975 --> 00:01:02.738
example here I try to,
Vi another file.txt.

12
00:01:02.738 --> 00:01:06.353
So I vi another file.txt.

13
00:01:06.353 --> 00:01:11.492
Notice down here it says,
read only, why is that?

14
00:01:11.492 --> 00:01:16.906
Well, it's because Brian doesn't have
access to the ability to read and

15
00:01:16.906 --> 00:01:19.802
write inside of Ubuntu's directory.

16
00:01:19.802 --> 00:01:24.705
So if I come in here and I try and say,
it even says changing a read only file.

17
00:01:24.705 --> 00:01:27.935
Then I come down here and say right quit.

18
00:01:27.935 --> 00:01:31.158
It's gonna say, I told you like
seven times, this is read only.

19
00:01:31.158 --> 00:01:34.182
This is read only is because you don't
have any permissions to write, read or

20
00:01:34.182 --> 00:01:34.703
write here.

21
00:01:36.362 --> 00:01:40.227
So, what I'll have to do here is say
quit with an exclamation point and

22
00:01:40.227 --> 00:01:42.072
say quit without saving, okay?

23
00:01:42.072 --> 00:01:44.928
And let's talk about why that is.

24
00:01:44.928 --> 00:01:49.431
If you look here at another file.txt,
this is gonna be we're looking at.

25
00:01:49.431 --> 00:01:53.306
This little like hieroglyphics
that we have right here,

26
00:01:53.306 --> 00:01:55.978
these are the permissions of the file.

27
00:01:55.978 --> 00:02:00.852
So the first one, this is whether
it's a special file are normal file,

28
00:02:00.852 --> 00:02:03.461
if it's a dash, it's a normal file.

29
00:02:03.461 --> 00:02:06.745
So that's just like a text file or
JavaScript file or a Python file.

30
00:02:06.745 --> 00:02:09.849
Or a PNG is just really any flat file.

31
00:02:12.302 --> 00:02:14.217
But if it has something else like d,
for example,

32
00:02:14.217 --> 00:02:15.731
that means it's a directory, right?

33
00:02:15.731 --> 00:02:19.202
So home here means it's a folder,
right, that's what that d means.

34
00:02:19.202 --> 00:02:22.584
There's a handful of others,
I think I wrote them down here.

35
00:02:22.584 --> 00:02:25.203
There's like binary files.

36
00:02:27.797 --> 00:02:29.243
There's a bunch of other stuff
that doesn't really matter.

37
00:02:29.243 --> 00:02:33.008
The only two that really you see
a whole lot of our normal files and

38
00:02:33.008 --> 00:02:34.132
directory files.

39
00:02:37.516 --> 00:02:43.590
Let's see, The next r, w,

40
00:02:43.590 --> 00:02:51.071
x, that is the, Yeah, so
these are all file permissions.

41
00:02:51.071 --> 00:02:55.683
So you'll notice it says rwx,
rwx, rwx, right?

42
00:02:55.683 --> 00:02:59.793
So I'm trying to make sure that
I read it the correct way.

43
00:03:02.054 --> 00:03:04.880
Yep, so the first one is
the user permissions, right?

44
00:03:04.880 --> 00:03:12.381
So, rwx here means that this can be read,
written to or executed by Ubuntu.

45
00:03:12.381 --> 00:03:17.181
So it's the specific user
that's listed here, okay?

46
00:03:19.542 --> 00:03:22.699
The next rwx here is the group.

47
00:03:22.699 --> 00:03:27.706
So this means that this file can be read,
written, or executed by anyone in

48
00:03:27.706 --> 00:03:32.643
the Ubuntu, that's the Ubuntu user or
anyone it's in the Ubuntu group.

49
00:03:32.643 --> 00:03:37.072
These just happen to be named the same
thing they don't have to be, right?

50
00:03:37.072 --> 00:03:38.818
This could be like the readers group or
something like that.

51
00:03:38.818 --> 00:03:42.995
The last r-x here is

52
00:03:42.995 --> 00:03:48.408
the everyone else group.

53
00:03:48.408 --> 00:03:52.282
So in this, is a directory, right?

54
00:03:52.282 --> 00:03:56.060
So this means that anyone that's
not either in the group or

55
00:03:56.060 --> 00:04:01.087
this user can read from it, they can
execute it, but they cannot write to it.

56
00:04:03.524 --> 00:04:07.683
So again, let's look here this
another file that tar or sorry,

57
00:04:07.683 --> 00:04:10.699
not another file that
txt this one right here.

58
00:04:10.699 --> 00:04:11.836
It's a flat file.

59
00:04:11.836 --> 00:04:15.913
This can be read to or
written to by the user.

60
00:04:15.913 --> 00:04:17.061
It cannot be executed.

61
00:04:17.061 --> 00:04:21.573
This can be read to or written to, but
it cannot be executed by the group.

62
00:04:21.573 --> 00:04:24.464
And it can be read by everyone else,
but it can't be read or

63
00:04:24.464 --> 00:04:25.768
executed by anyone else.

64
00:04:25.768 --> 00:04:28.642
So that's what that means.

65
00:04:28.642 --> 00:04:29.675
Make sense so far?

66
00:04:33.846 --> 00:04:37.525
So that's why Brian or

67
00:04:37.525 --> 00:04:43.535
cannot write to another file.txt.

68
00:04:43.535 --> 00:04:49.435
It's because Brian can read it, Brian
has our permissions here from the other,

69
00:04:49.435 --> 00:04:51.972
right, but he cannot write to it.

70
00:04:51.972 --> 00:04:56.051
Because he doesn't have any
permissions to do that.

71
00:04:56.051 --> 00:05:01.043
I'll talk about the xd can execute
later but basically means like, if it's

72
00:05:01.043 --> 00:05:06.202
like a binary or like a command, it can
be ran as a command, so like LS, right?

73
00:05:06.202 --> 00:05:08.583
So if we look at ls -las /bin,

74
00:05:08.583 --> 00:05:13.362
you'll notice that all of these
have x permissions, right?

75
00:05:13.362 --> 00:05:15.383
So like tar,
that's what we've been using, right?

76
00:05:15.383 --> 00:05:21.543
It means anyone can execute for, like for
example, Brian can't write to tar here.

77
00:05:21.543 --> 00:05:25.522
Does that make sense, okay.

78
00:05:31.235 --> 00:05:32.318
So where am I?

79
00:05:32.318 --> 00:05:40.429
Let's go back to, This dot right here,

80
00:05:40.429 --> 00:05:43.602
this top one represents the directory
that we're in this moment in time,

81
00:05:43.602 --> 00:05:46.229
which means that it's owned by Ubuntu and
the Ubuntu group.

82
00:05:46.229 --> 00:05:50.076
And Brian does not have write
permissions on this folder.

83
00:05:50.076 --> 00:05:57.091
So if I try and do touch brian.txt,
it's gonna say, Brian can't write here.

84
00:05:57.091 --> 00:06:01.343
Now, I absolutely could say,
sudo touch brian.txt, but

85
00:06:01.343 --> 00:06:03.559
then who is gonna own the file?

86
00:06:09.281 --> 00:06:11.767
So if I have brian.txt
now look who owns it.

87
00:06:11.767 --> 00:06:15.113
Root, root owns it.

88
00:06:17.623 --> 00:06:22.359
And what's even kind of more insulting
is that not even Ubuntu can now read or

89
00:06:22.359 --> 00:06:23.327
write to this.

90
00:06:23.327 --> 00:06:27.797
Because you'll see here that
there's only read permissions for

91
00:06:27.797 --> 00:06:29.917
anyone besides the root user.

92
00:06:34.061 --> 00:06:34.926
Go ahead and remove that.

93
00:06:37.410 --> 00:06:39.686
Actually, let's keep rolling with that.

94
00:06:44.480 --> 00:06:45.676
All right, well, yeah.

95
00:06:45.676 --> 00:06:49.388
So let's talk about like ways that
we can kind of mitigate this.

96
00:06:52.417 --> 00:06:56.996
I'm gonna exit this out and so I'm gonna
be now as Ubuntu, let's go ahead and

97
00:06:56.996 --> 00:06:58.555
go to the root directory.

98
00:06:58.555 --> 00:07:02.301
We kind of already talked
about this a little bit.

99
00:07:02.301 --> 00:07:05.787
I wanna make a hello, but
I can't do that as Ubuntu.

100
00:07:05.787 --> 00:07:10.197
So instead what I'll do is I'll make
a directory, I'll sudo make a directory.

101
00:07:12.654 --> 00:07:17.186
So now I have a hello directory here.

102
00:07:17.186 --> 00:07:19.225
But this is owned by root root.

103
00:07:19.225 --> 00:07:21.666
What happens if I want Ubuntu to
be able to read and write to this?

104
00:07:21.666 --> 00:07:28.538
So I can use something called,
Go inside hello here, right?

105
00:07:28.538 --> 00:07:32.762
And I can't even still touch hello.txt.

106
00:07:32.762 --> 00:07:36.848
Ubuntu cannot read and
write into this hello directory.

107
00:07:36.848 --> 00:07:45.165
So what I wanna do,
Is I'm gonna say sudo change ownership.

108
00:07:45.165 --> 00:07:49.918
So that's what ch own or chown,
if you wanna say it that way,

109
00:07:49.918 --> 00:07:51.794
don't say it that way.

110
00:07:51.794 --> 00:07:59.447
I can change the ownership from
root root to Ubuntu, like this.

111
00:08:01.606 --> 00:08:04.086
And again, that's the Ubuntu user and
the Ubuntu group,

112
00:08:04.086 --> 00:08:05.510
those could be different names.

113
00:08:08.571 --> 00:08:11.332
And then I wanna change that to /hello.

114
00:08:14.643 --> 00:08:17.882
So now if I look at
the user permissions here,

115
00:08:17.882 --> 00:08:20.707
you'll see that Ubuntu owns this now.

116
00:08:20.707 --> 00:08:25.194
So now, again, in Ubuntu,
I can say touch hello.txt.

117
00:08:25.194 --> 00:08:29.224
And now it works, because Ubuntu
actually owns this directory now, and

118
00:08:29.224 --> 00:08:31.084
can do whatever they want there.

119
00:08:34.122 --> 00:08:38.363
So that's when you'll see change ownership
a lot you'll be changing ownership

120
00:08:38.363 --> 00:08:41.304
probably from the root directory or
root user to a user.

121
00:08:44.849 --> 00:08:53.395
Cuz again, like I can't, if I say su
Brian, Brian can't write here, right?

122
00:08:55.433 --> 00:08:58.474
So this would be like one opportunity that
you can make a directory that only one

123
00:08:58.474 --> 00:09:00.103
user can write to and
then no one else can.

124
00:09:03.869 --> 00:09:05.290
So makes sense about permissions for
users?

125
00:09:11.491 --> 00:09:12.936
So this is one way of going about this.

126
00:09:12.936 --> 00:09:17.248
You can like scope it down to users,
but you can also change the, so

127
00:09:17.248 --> 00:09:21.344
let's take a look at this hello.txt
that I just created here.

128
00:09:21.344 --> 00:09:26.107
This has read permissions for
everybody, but only Ubuntu user or

129
00:09:26.107 --> 00:09:28.802
Ubuntu group people can write to it.

130
00:09:28.802 --> 00:09:31.319
What if I wanna make it so
anybody can write to this file and

131
00:09:31.319 --> 00:09:33.059
it doesn't really matter who owns it?

132
00:09:34.702 --> 00:09:38.029
You can use something called chmod.

133
00:09:41.076 --> 00:09:44.989
What I can actually end up doing
here is I'm gonna say sudo chmod.

134
00:09:44.989 --> 00:09:49.429
So I'm gonna change
the permissions on the file.

135
00:09:49.429 --> 00:09:53.846
And I'm going to say, u=urw,

136
00:09:53.846 --> 00:09:58.425
g=rw and I think it's o, yeah,

137
00:09:58.425 --> 00:10:03.496
o=rw, so the o stands for other, so

138
00:10:03.496 --> 00:10:08.258
user group other for hello.txt.

139
00:10:08.258 --> 00:10:10.737
So now if I look at this again,

140
00:10:10.737 --> 00:10:14.914
you can see now anybody can read and
write to this.

141
00:10:17.143 --> 00:10:23.035
So if I switch users to Brian now,
and I say, touch brian.txt,

142
00:10:23.035 --> 00:10:27.957
one, don't touch me,
absolutely don't touch me.

143
00:10:27.957 --> 00:10:30.830
But you can touch this folder, I gave
you permissions to touch the folder.

144
00:10:30.830 --> 00:10:34.586
So, if I say touch brian.txt,
now do you think this is gonna work?

145
00:10:37.620 --> 00:10:38.893
No, why is that?

146
00:10:38.893 --> 00:10:42.227
So Brian didn't get to
the to the directory,

147
00:10:42.227 --> 00:10:44.873
Brian got permissions to the file.

148
00:10:44.873 --> 00:10:48.117
But it's so I can say vi hello.txt.

149
00:10:53.545 --> 00:11:00.450
And I can say hello this was
written by brian, right quit.

150
00:11:04.977 --> 00:11:10.205
Yeah, right quit exclamation point cuz it
doesn't have permissions in the directory.

151
00:11:12.597 --> 00:11:17.130
But now I can say exit and I can come back
out here and I can cat hello.txt and look,

152
00:11:17.130 --> 00:11:19.410
that was actually written out by Brian.

153
00:11:26.598 --> 00:11:27.269
Makes sense?

154
00:11:29.975 --> 00:11:33.268
Cool, so if I wanted to do
that by the directory as well,

155
00:11:33.268 --> 00:11:36.787
I could absolutely come in here and
say change mod for that.

156
00:11:36.787 --> 00:11:41.149
Instead of changing it for the file, I can
just put periods represent this directory

157
00:11:41.149 --> 00:11:44.722
or /hello if you wanna be more verbose,
I'm just gonna put period.

158
00:11:46.679 --> 00:11:50.832
And now, you have to give it x for
directories as well.

159
00:11:50.832 --> 00:11:55.581
So, come in here and you have to add x,

160
00:11:58.713 --> 00:12:00.760
For the directory for hello.

161
00:12:00.760 --> 00:12:04.998
And now if you go into hello,

162
00:12:04.998 --> 00:12:11.188
you can see I can switch users into brian.

163
00:12:11.188 --> 00:12:14.006
And I can say touch brian.txt and

164
00:12:14.006 --> 00:12:19.855
now it will allow Brian to create
the file and here you can take a look.

165
00:12:19.855 --> 00:12:22.663
And you can see that we
created a brian.txt and

166
00:12:22.663 --> 00:12:24.467
this is owned by brian brian.

167
00:12:24.467 --> 00:12:27.736
Despite the fact that this is
a directory owned by Ubuntu.

168
00:12:30.892 --> 00:12:31.562
Make sense?

169
00:12:31.562 --> 00:12:36.082
So that's what change chmod is for.

170
00:12:36.082 --> 00:12:38.996
It's messing with those permissions for
groups and users.

171
00:12:38.996 --> 00:12:43.497
I'll be honest, I almost always and just
adding permissions to a file like usually

172
00:12:43.497 --> 00:12:47.678
it's either adding an executable
permission or making it more permissive or

173
00:12:47.678 --> 00:12:49.242
less permissive for users.

174
00:12:49.242 --> 00:12:53.979
But I don't really modify the group
permissions very much cuz I don't usually

175
00:12:53.979 --> 00:12:56.360
mess too much with group permissions.

