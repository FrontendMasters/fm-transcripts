WEBVTT

1
00:00:00.000 --> 00:00:03.506
So the next thing that we're
gonna talk about is snaps.

2
00:00:06.726 --> 00:00:08.886
So I need to give you
a bit of history here and

3
00:00:08.886 --> 00:00:12.733
also a little bit of open source politics
because this is kind of necessary.

4
00:00:12.733 --> 00:00:17.661
The way to package a Linux package
is way too controversial for

5
00:00:17.661 --> 00:00:20.235
what that sounds like, right?

6
00:00:20.235 --> 00:00:27.451
There's an open source war over how to
correctly package something for Linux.

7
00:00:27.451 --> 00:00:32.644
So the problem with APT and
most package managers is it's relatively

8
00:00:32.644 --> 00:00:38.461
unsafe in the sense of if someone injects
bad code into APT and you install it,

9
00:00:38.461 --> 00:00:44.307
they can wreck some serious havoc on you
and do some pretty nefarious things.

10
00:00:44.307 --> 00:00:47.238
And so
various different package managers and

11
00:00:47.238 --> 00:00:52.061
companies have been trying to figure
out how can we install untrusted code?

12
00:00:52.061 --> 00:00:55.893
And someone that has worked
on this problem before,

13
00:00:55.893 --> 00:01:01.389
installing untrusted code is always,
it's kind of a scary proposition.

14
00:01:01.389 --> 00:01:06.318
So the way that they kind of mitigate
that right now is every bit of

15
00:01:06.318 --> 00:01:11.339
code that you install from APT is
always combed over by open source

16
00:01:11.339 --> 00:01:16.485
developers to make sure that you
are not installing anything bad.

17
00:01:16.485 --> 00:01:18.273
And that's not a super scalable solution.

18
00:01:18.273 --> 00:01:20.571
And it's also very fallible, right?

19
00:01:20.571 --> 00:01:24.894
If I'm an open source developer and
I go read 10,000 lines of code,

20
00:01:24.894 --> 00:01:29.428
there's a decent chance that someone can
write code in such a clever way that I

21
00:01:29.428 --> 00:01:31.262
would miss the bad parts of it.

22
00:01:31.262 --> 00:01:35.934
We've seen this with NPM a couple of
times, right, where we've had really

23
00:01:35.934 --> 00:01:39.586
bad code make it out to NPM
because people are pretty smart.

24
00:01:39.586 --> 00:01:42.707
They can circumvent obvious
ways of exfiltrating data.

25
00:01:44.434 --> 00:01:49.226
So knowing that's the problem that
we wanna have some sort of scalable

26
00:01:49.226 --> 00:01:52.075
solution of installing untrusted code.

27
00:01:52.075 --> 00:01:56.599
There's been four or five different major
initiatives to try and figure that out.

28
00:01:56.599 --> 00:01:58.261
One of them is called snaps,

29
00:01:58.261 --> 00:02:02.432
and that's the one officially
supported by Canonical and for Ubuntu.

30
00:02:02.432 --> 00:02:04.315
So that's what I'm gonna focus on.

31
00:02:04.315 --> 00:02:07.641
But the cool thing about snaps,
because of how they're packaged and

32
00:02:07.641 --> 00:02:09.892
run, they can run on
any Linux distribution.

33
00:02:09.892 --> 00:02:16.302
Whereas something like APT is actually
gonna only install Ubuntu code, right?

34
00:02:16.302 --> 00:02:19.361
So you can't use APT on Red Hat,
for example,

35
00:02:19.361 --> 00:02:23.222
because that code was compiled
specifically for Ubuntu.

36
00:02:23.222 --> 00:02:26.865
And there's enough differences that
that's not gonna port across easily.

37
00:02:26.865 --> 00:02:31.217
You'd have to rebuild it from
the source specifically for Red Hat.

38
00:02:31.217 --> 00:02:34.043
What snaps do is they do
something called sandboxing.

39
00:02:34.043 --> 00:02:37.291
Or at least they're
trying the sandboxing so

40
00:02:37.291 --> 00:02:42.083
that it's a totally enclosed package
that it cannot break out of.

41
00:02:42.083 --> 00:02:46.323
So even if you install something that's
going to steal all of your bitcoins,

42
00:02:46.323 --> 00:02:49.532
it won't be able to break out
of that particular sandbox.

43
00:02:49.532 --> 00:02:52.115
And that's the kind of
the basic premise of snaps.

44
00:02:52.115 --> 00:02:54.594
Because we're able to sandbox everything,

45
00:02:54.594 --> 00:02:57.992
they can actually include all
of the code necessary to run it.

46
00:02:57.992 --> 00:03:00.648
Which means that you can have a snap and

47
00:03:00.648 --> 00:03:04.051
you have the very same snap on Ubuntu and
Red Hat.

48
00:03:04.051 --> 00:03:06.058
It's both gonna run the correct way.

49
00:03:06.058 --> 00:03:11.420
So that's another big benefit of snaps
as it works outside of just Ubuntu,

50
00:03:11.420 --> 00:03:12.707
Mint and Debian.

51
00:03:15.075 --> 00:03:17.985
And another thing that's
kind of beneficial is every

52
00:03:17.985 --> 00:03:22.124
time that you go to update something
from APT, it throws away everything and

53
00:03:22.124 --> 00:03:24.399
it downloads an entire new version of it.

54
00:03:24.399 --> 00:03:28.731
So if you have a package that's a gigabyte
big, you have to throw it gigabyte and

55
00:03:28.731 --> 00:03:32.300
reinstall the gigabyte even if you
updated just one line of code.

56
00:03:32.300 --> 00:03:34.840
The nice thing about snaps is
they can ship deltas, right?

57
00:03:34.840 --> 00:03:37.874
So they can actually just ship
the one line of code that changed and

58
00:03:37.874 --> 00:03:40.092
don't have to redownload
the entire package.

59
00:03:40.092 --> 00:03:44.555
So that's the basic premise.

60
00:03:44.555 --> 00:03:46.227
That's the idea of what snaps are.

61
00:03:46.227 --> 00:03:51.942
It's officially supported by Canonical.

62
00:03:51.942 --> 00:03:53.217
And in general,
I think it's a fairly sound architecture.

63
00:03:53.217 --> 00:03:55.982
I use snaps, but there are some
people that don't like them.

64
00:03:55.982 --> 00:03:58.326
And they don't like Ubuntu or

65
00:03:58.326 --> 00:04:03.875
Canonical's kind of aggressive
approach to getting this out there.

66
00:04:03.875 --> 00:04:06.262
I actually read that I think
as of a couple weeks ago.

67
00:04:06.262 --> 00:04:08.507
Mint, which is again
downstream from Ubuntu,

68
00:04:08.507 --> 00:04:11.434
doesn't even include the ability
to run snaps out of the box.

69
00:04:11.434 --> 00:04:14.953
You can do it, you just install
one package called Snaps D.

70
00:04:14.953 --> 00:04:19.082
But you have to install it
because they didn't like how

71
00:04:19.082 --> 00:04:22.670
aggressive they were being about it.

72
00:04:22.670 --> 00:04:28.703
So I think probably the question you're
gonna ask me is why would I use a snap and

73
00:04:28.703 --> 00:04:30.267
why would I use APT?

74
00:04:30.267 --> 00:04:34.292
And honestly, for the most part,
you're not gonna really care a whole lot.

75
00:04:34.292 --> 00:04:35.643
Snaps are more secure.

76
00:04:35.643 --> 00:04:37.889
I think that's an honest
answer to that question.

77
00:04:37.889 --> 00:04:42.503
They update automatically, so
this can be both a scary and a cool thing.

78
00:04:42.503 --> 00:04:44.734
You don't control when snaps update.

79
00:04:44.734 --> 00:04:47.370
Snaps just update themselves
automatically and

80
00:04:47.370 --> 00:04:51.172
there's no ability to kind of stop
that train from getting in motion.

81
00:04:51.172 --> 00:04:55.776
They did that on purpose, kinda like
browsers, where browsers are like,

82
00:04:55.776 --> 00:04:56.810
we don't care.

83
00:04:56.810 --> 00:04:58.547
We're gonna update and we're not
gonna let you tell us not to update,

84
00:04:58.547 --> 00:04:59.881
because we want everyone to
be on the latest package.

85
00:04:59.881 --> 00:05:03.075
They built snaps in a similar way that
they want everyone to be up to date.

86
00:05:03.075 --> 00:05:07.280
And that upsets people that wanna
have control over the versions.

87
00:05:07.280 --> 00:05:11.795
So that's kind of a mixed bag
thing of how you feel about it.

88
00:05:11.795 --> 00:05:15.251
If it's my production Node.js server,
I don't want you to update it.

89
00:05:15.251 --> 00:05:16.483
That's my thing.

90
00:05:16.483 --> 00:05:17.714
Don't touch my thing.

91
00:05:17.714 --> 00:05:21.454
But if it's my desktop computer and you're
updating Chrome for me automatically,

92
00:05:21.454 --> 00:05:23.148
great, cool, do it automatically.

93
00:05:23.148 --> 00:05:25.287
I don't wanna think about that.

94
00:05:25.287 --> 00:05:28.257
So snaps are safer as long
as you don't install it.

95
00:05:28.257 --> 00:05:30.429
You can install snaps in an unsafe way.

96
00:05:30.429 --> 00:05:34.375
But as long as you install it in
the safe way, which is the normal way,

97
00:05:34.375 --> 00:05:37.997
they are safer cuz they won't
let code outside of the sandbox.

98
00:05:37.997 --> 00:05:44.184
Snaps are how Ubuntu install GUI apps,
graphical user interface.

99
00:05:46.254 --> 00:05:50.195
So if you do snap install Visual Studio
code, right, you can stall that via snap.

100
00:05:50.195 --> 00:05:55.042
You can do Spotify, Firefox, Chrome,
all those kind of different tools.

101
00:05:55.042 --> 00:05:57.910
All those are installed via snap.

102
00:06:02.232 --> 00:06:05.004
So when you install Deb,
Deb is another form of packaging,

103
00:06:05.004 --> 00:06:08.006
which is what APT uses underneath
the hood and for the most part.

104
00:06:08.006 --> 00:06:11.798
You can install snaps via APT,
which is a little confusing.

105
00:06:11.798 --> 00:06:15.057
But Debs,
which is the other file format for APT,

106
00:06:15.057 --> 00:06:19.867
those have to be 100% reviewed before
they make it onto the registry,

107
00:06:19.867 --> 00:06:23.605
which is probably why we're
still in Node 8 for Ubuntu.

108
00:06:23.605 --> 00:06:29.289
Cuz they don't wanna make sure that
people aren't publishing nefarious stuff.

109
00:06:29.289 --> 00:06:31.170
Snaps, due to how they're packaged,

110
00:06:31.170 --> 00:06:34.194
can be updated by the developer
without going through review.

111
00:06:34.194 --> 00:06:36.659
So that means they're able
to stay more up to date.

112
00:06:36.659 --> 00:06:39.382
We can have more control of it
because there's more trust there.

113
00:06:39.382 --> 00:06:42.637
Or rather to distrust them so they can
basically do whatever they want, right?

114
00:06:42.637 --> 00:06:48.413
So that's my exhaustive list of why you
should think about snaps versus Debs.

115
00:06:51.711 --> 00:06:54.664
So things like node and
lolcat are actually installed on both.

116
00:06:54.664 --> 00:06:57.755
So in fact, we can go ahead and
try that if you want to.

117
00:06:57.755 --> 00:07:02.541
If I come in here and say, let's see,

118
00:07:02.541 --> 00:07:08.526
apt --help remove, sudo apt remove lolcat,

119
00:07:08.526 --> 00:07:14.076
that'll go remove it from the Deb version.

120
00:07:14.076 --> 00:07:17.365
And then if I do, I think it's snap.

121
00:07:17.365 --> 00:07:21.931
So if I say sudo snap install lolcat,

122
00:07:26.867 --> 00:07:29.364
This will actually go out and
get the snap version of lolcat.

123
00:07:29.364 --> 00:07:31.547
And you'll see it doesn't matter.

124
00:07:31.547 --> 00:07:36.786
It works precisely the same way,
but they're packaged differently.

125
00:07:42.166 --> 00:07:43.927
So that'll work, it'll take just a second.

126
00:07:43.927 --> 00:07:49.973
So if you're gonna ask me what am
I gonna do when it's my computer.

127
00:07:49.973 --> 00:07:53.950
If I'm doing a Linux desktop,
where I have the Ubuntu desktop running,

128
00:07:53.950 --> 00:07:58.071
I'll probably use snap quite a bit more
cuz I like the autoupdate feature.

129
00:07:58.071 --> 00:08:02.647
And otherwise, I kinda just use APT, and
that's probably more just from muscle

130
00:08:02.647 --> 00:08:05.216
memory than any sort
of conscious decision.

131
00:08:05.216 --> 00:08:08.207
So probably that's a non-answer,
but it's also the truth.

132
00:08:08.207 --> 00:08:10.509
[LAUGH] So that's what you get.

133
00:08:13.335 --> 00:08:16.438
So yeah, it's taking a little bit longer.

134
00:08:16.438 --> 00:08:20.547
I think typically snaps end up
being a bit bigger in size,

135
00:08:20.547 --> 00:08:25.185
because they include all of their
dependencies in one package.

136
00:08:25.185 --> 00:08:28.680
Whereas when you install from APT,
it seems smaller because

137
00:08:28.680 --> 00:08:33.281
it has just the code, and then its
dependencies span onto other dependencies.

138
00:08:33.281 --> 00:08:38.248
So I think snaps on the whole end up being
a tiny bit bigger if you include all

139
00:08:38.248 --> 00:08:42.914
the dependencies, but in reality,
it ends up being about the same.

140
00:08:44.148 --> 00:08:47.276
Yeah, like I mentioned, lolcat right now,
it's probably installing Ruby for

141
00:08:47.276 --> 00:08:48.155
me inside of the snap.

142
00:08:48.155 --> 00:08:50.306
Which is probably why it's pretty big.

143
00:08:57.387 --> 00:09:00.315
Another thing that I think I kind
of alluded to this earlier, but

144
00:09:00.315 --> 00:09:04.236
in order to run a snap, you need something
called snapd, which is a daemon or daemon.

145
00:09:04.236 --> 00:09:06.940
Depends on who you asked about that.

146
00:09:06.940 --> 00:09:10.394
Again, computer scientists can never agree
to how to pronounce things because we

147
00:09:10.394 --> 00:09:11.956
don't speak our language, right?

148
00:09:11.956 --> 00:09:13.473
We type our language.

149
00:09:13.473 --> 00:09:18.368
So how do you pronounce
the word D-A-E-M-O-N?

150
00:09:18.368 --> 00:09:22.001
I've always said daemon
because there's an A in there.

151
00:09:22.001 --> 00:09:27.899
[LAUGH] But it's technically the old
English spelling of the word demon.

152
00:09:27.899 --> 00:09:29.658
So people just say demon.

153
00:09:29.658 --> 00:09:33.663
Up to you, I'm sure you're incorrect no
matter what you say, so doesn't matter.

154
00:09:33.663 --> 00:09:38.379
So a daemon is something that runs in
the background that you don't have to

155
00:09:38.379 --> 00:09:39.835
worry about, right?

156
00:09:39.835 --> 00:09:42.262
So the snapd or initd or containerd,

157
00:09:42.262 --> 00:09:46.346
anything that ends with a d at
the end is a daemon, typically.

158
00:09:46.346 --> 00:09:49.837
And these are programs that are running in
the background without you having to do

159
00:09:49.837 --> 00:09:50.723
anything about it.

160
00:09:50.723 --> 00:09:53.016
That's all that term means.

161
00:09:53.016 --> 00:09:55.656
So you have to install the snap daemon,

162
00:09:55.656 --> 00:09:59.101
which is the tool that
actually executes daemons.

163
00:09:59.101 --> 00:10:03.480
So if you're on Mint or if you're
on Red Hat or anything like that,

164
00:10:03.480 --> 00:10:07.564
you just have to install snap daemon,
and then you can run it.

165
00:10:07.564 --> 00:10:09.258
Okay, so there we go.

166
00:10:09.258 --> 00:10:10.492
I installed lolcat.

167
00:10:10.492 --> 00:10:14.739
Now I can say ls -lsa,
pipe that into lolcat.

168
00:10:17.249 --> 00:10:18.581
And I probably have to
restart this cuz it, yeah.

169
00:10:18.581 --> 00:10:23.773
This particular terminal session
won't have lolcat installed yet,

170
00:10:23.773 --> 00:10:27.295
so I have to open it, so
reinitializes itself.

171
00:10:27.295 --> 00:10:32.978
And now I can say ls -lsa pipe lolcat,

172
00:10:32.978 --> 00:10:35.649
and there you go.

173
00:10:35.649 --> 00:10:39.490
Now, that's running from snap
instead of running from a Deb.

174
00:10:43.955 --> 00:10:49.918
So something that you might see as well,
let's do a sudo apt remove nodejs.

175
00:10:52.232 --> 00:10:54.961
Okay, that'll go delete
nodejs from the Deb.

176
00:10:54.961 --> 00:11:00.287
And then if we do,
let's say, snap info node,

177
00:11:03.197 --> 00:11:05.998
You can see here,
because it's going through snap,

178
00:11:05.998 --> 00:11:09.173
the people that maintain the node
snap which is node source,

179
00:11:09.173 --> 00:11:12.050
which is a bunch of lovely people,
you can trust them.

180
00:11:12.050 --> 00:11:16.787
They're able to publish much quicker
because they don't have to go through any

181
00:11:16.787 --> 00:11:18.209
sort of process for it.

182
00:11:18.209 --> 00:11:20.825
And you can see here, they're up on 14.

183
00:11:20.825 --> 00:11:24.899
So that's why Ubuntu is kinda pushing, or
Canonical is pushing people towards snaps.

184
00:11:24.899 --> 00:11:29.983
So now I can just say sudo snap install.

185
00:11:29.983 --> 00:11:34.015
So when you're installing snaps,
you have to opt into a channel.

186
00:11:34.015 --> 00:11:38.570
Most snaps have just a default channel,
which is what we saw with lolcat and

187
00:11:38.570 --> 00:11:40.249
have to opt into a channel.

188
00:11:40.249 --> 00:11:45.107
But in this one, you have to say,
give me versions of Node 14.

189
00:11:45.107 --> 00:11:48.471
Because they don't wanna upgrade
to Node 16 without you knowing,

190
00:11:48.471 --> 00:11:50.566
because that can break your application.

191
00:11:50.566 --> 00:11:54.675
So I'm gonna say I wanna be on 14/stable,
but

192
00:11:54.675 --> 00:11:59.298
I could say 12/stable,
I could say 10/stable.

193
00:11:59.298 --> 00:12:02.792
In fact, you can see up here.
There's latest/stable, there's beta, edge.

194
00:12:02.792 --> 00:12:05.373
There's a bunch of different channels.

195
00:12:05.373 --> 00:12:07.852
And then you have to
just give it a classic.

196
00:12:07.852 --> 00:12:10.320
If I didn't give it this classic,
then it wouldn't actually work,

197
00:12:10.320 --> 00:12:11.182
it wouldn't install.

198
00:12:11.182 --> 00:12:13.842
This actually allows this
to break out of the snaps.

199
00:12:13.842 --> 00:12:16.441
So this actually is not fully sandbox,

200
00:12:16.441 --> 00:12:21.894
which means that you do need to trust it
if you're gonna give it this classic flag.

201
00:12:21.894 --> 00:12:25.409
If I do that,
this is actually gonna go out and

202
00:12:25.409 --> 00:12:28.565
grab me the latest version of Node 14.

203
00:12:30.603 --> 00:12:34.897
And I'm not gonna sit here and
make you watch this install, but

204
00:12:34.897 --> 00:12:37.420
suffice to say this is going to work.

205
00:12:37.420 --> 00:12:38.929
It's gonna install the latest of Node 14.

206
00:12:41.728 --> 00:12:46.009
Yeah, the thing I wanna underscore here,
if you're gonna give it the --classic,

207
00:12:46.009 --> 00:12:47.674
go check who's publishing it and

208
00:12:47.674 --> 00:12:50.899
make sure that's someone that
you trust to publish something.

209
00:12:50.899 --> 00:12:54.490
Because it's not quite as secure, but
it is more secure than an APT install.

210
00:12:54.490 --> 00:12:58.118
So kinda balance your options with that.

211
00:13:01.759 --> 00:13:06.977
And that's it for Node.js,
or it's not Node.js.

212
00:13:06.977 --> 00:13:09.682
I just taught you Node.js in 30 seconds.

213
00:13:09.682 --> 00:13:16.162
That's it for package management with
Linux, or specifically with Ubuntu.

214
00:13:16.162 --> 00:13:20.211
Everything I just taught you
is pretty specific to Ubuntu.

215
00:13:20.211 --> 00:13:25.207
If you're gonna do something with
Red Hat or with Mint or something else,

216
00:13:25.207 --> 00:13:27.794
they have their own versions of this.

217
00:13:27.794 --> 00:13:32.762
But it's relatively similar ideas,
just expressed by different companies.

