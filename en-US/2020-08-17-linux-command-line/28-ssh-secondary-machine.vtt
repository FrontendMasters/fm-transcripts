WEBVTT

1
00:00:00.000 --> 00:00:04.496
We are gonna get into talking about SSH.

2
00:00:04.496 --> 00:00:08.682
This ends up being a super important
topic for many engineers for

3
00:00:08.682 --> 00:00:10.165
a variety of reasons.

4
00:00:10.165 --> 00:00:11.201
But SSH stands for

5
00:00:11.201 --> 00:00:15.913
Secure Shell, and allows you to connect
from one computer to another computer.

6
00:00:15.913 --> 00:00:19.588
I imagine many of you have probably
tried this before in some capacity.

7
00:00:19.588 --> 00:00:23.325
And if you ever use Git, there's
a decent chance you've used it in Git,

8
00:00:23.325 --> 00:00:25.543
because Git underneath the hood uses SSH.

9
00:00:25.543 --> 00:00:28.708
Now this particular section I'm
gonna show you using multi-pass and

10
00:00:28.708 --> 00:00:30.864
using some specific
features to multi-pass.

11
00:00:30.864 --> 00:00:33.969
So if you're using something like WSL or
VirtualBox,

12
00:00:33.969 --> 00:00:37.411
I think this section you'll
probably just have to watch, or

13
00:00:37.411 --> 00:00:40.799
you could set up another VM in
the cloud and connect to that.

14
00:00:40.799 --> 00:00:43.140
That's kind of up to you.

15
00:00:43.140 --> 00:00:46.143
But yeah, let's go ahead and get started.

16
00:00:46.143 --> 00:00:50.981
So again, SSH allows you to connect
from one computer to another, and

17
00:00:50.981 --> 00:00:56.158
allows you to remotely execute commands
on a different computer, right?

18
00:00:56.158 --> 00:01:01.214
So this will be like I have a computer
running out in my server farm out in Azure

19
00:01:01.214 --> 00:01:06.444
or AWS, and I wanna connect to it,
do something and then disconnect, right?

20
00:01:06.444 --> 00:01:09.808
I mean when I used to run my
own servers on DigitalOcean,

21
00:01:09.808 --> 00:01:12.325
I used to do this very, very frequently.

22
00:01:12.325 --> 00:01:18.717
What we're gonna do is, we're going to
run a second VM locally on our computer,

23
00:01:18.717 --> 00:01:23.801
and then we're going to connect
to that VM using a different VM.

24
00:01:23.801 --> 00:01:26.843
So we have two VMs, and
we have one VM connect to the other VM.

25
00:01:26.843 --> 00:01:30.191
I mean, this isn't gonna be super
useful from the perspective of,

26
00:01:30.191 --> 00:01:33.655
you would never really need to connect
to a second VM from the first VM,

27
00:01:33.655 --> 00:01:37.378
you could probably just use your host
computer to connect to the second VM.

28
00:01:37.378 --> 00:01:39.871
But nonetheless,
I wanna show you how to do this.

29
00:01:39.871 --> 00:01:45.222
Okay, so what we're gonna do,
is we're gonna get a second VM running.

30
00:01:45.222 --> 00:01:50.597
So if you're in macOS like me,
you're gonna open your terminal here.

31
00:01:50.597 --> 00:01:52.490
I'm gonna open a second
term terminal here.

32
00:01:52.490 --> 00:01:55.504
You can do this with a new tab here.

33
00:01:59.652 --> 00:02:02.658
Okay, but notice this one
looks different from this one.

34
00:02:02.658 --> 00:02:07.600
This is actually my Mac terminal.

35
00:02:07.600 --> 00:02:12.056
You can see here that this is not even
running bash, this is running Zsh.

36
00:02:12.056 --> 00:02:14.347
And I'm gonna run one command here.

37
00:02:14.347 --> 00:02:17.176
If you're running Windows,
you're gonna open PowerShell, and

38
00:02:17.176 --> 00:02:20.621
you can just hit the Windows button,
type in PowerShell, and open PowerShell.

39
00:02:20.621 --> 00:02:24.200
And then I want you to run
this command right here.

40
00:02:24.200 --> 00:02:27.264
Multipass launch name secondary.

41
00:02:31.966 --> 00:02:33.472
Like that.

42
00:02:35.925 --> 00:02:38.924
Okay, this is actually going to go and
create a second VM on our computer.

43
00:02:38.924 --> 00:02:42.074
And you can see here I have a primary
one that's already running,

44
00:02:42.074 --> 00:02:44.722
and it's gonna create a second
one called secondary.

45
00:02:46.734 --> 00:02:49.156
Not something you necessarily
need to care a whole lot about.

46
00:02:49.156 --> 00:02:52.390
Multipass is just a tool that you use on
your computer to kind of simulate a cloud

47
00:02:52.390 --> 00:02:53.029
environment.

48
00:02:55.357 --> 00:02:58.650
But yeah,
that's how we're gonna get it working.

49
00:02:58.650 --> 00:03:04.469
This will take maybe, I don't know 30,
45 seconds to get up and running, okay?

50
00:03:04.469 --> 00:03:08.602
And then here we can say
multipass shell secondary.

51
00:03:12.063 --> 00:03:15.583
And you can see here,
I'm now connected to ubuntu@secondary.

52
00:03:15.583 --> 00:03:18.605
And you can actually see up here as well,
secondary up here,

53
00:03:18.605 --> 00:03:21.883
you can also say open shell up there,
and you can connect to that.

54
00:03:25.904 --> 00:03:29.687
Cool, so I have a totally
separate secondary environment.

55
00:03:29.687 --> 00:03:32.329
You can see here I have ubuntu@primary and
ubuntu@secondary.

56
00:03:32.329 --> 00:03:35.630
You can imagine these being two separate
computers, like maybe primary is my

57
00:03:35.630 --> 00:03:38.391
computer that I have at home, and
secondary is one on the cloud.

58
00:03:38.391 --> 00:03:41.715
Or maybe they're two
different VMs in the cloud.

59
00:03:41.715 --> 00:03:45.784
But, yeah, they're two different computers
basically running on our computer.

60
00:03:45.784 --> 00:03:49.836
So, the first thing we're gonna do on
secondary, is we're gonna add a new user,

61
00:03:49.836 --> 00:03:52.096
something that we've already done before.

62
00:03:52.096 --> 00:03:57.231
So I'm gonna say sudo useradd.

63
00:03:57.231 --> 00:03:59.891
We're gonna give it a default shell so
that before,

64
00:03:59.891 --> 00:04:02.256
remember we were using
that weird dash shell.

65
00:04:02.256 --> 00:04:07.101
This time we're gonna use bash,
so you can say, -s/bin/bash,

66
00:04:07.101 --> 00:04:11.607
and this will have it start bash
instead of that weird dash one.

67
00:04:11.607 --> 00:04:16.009
Want to give a -m which will give it a,
it creates the user a home folder for

68
00:04:16.009 --> 00:04:18.790
you, so
you don't have to create it for them.

69
00:04:18.790 --> 00:04:21.051
We're gonna give it the group of Ubuntu,
so

70
00:04:21.051 --> 00:04:25.339
it has all the same permissions as Ubuntu,
and we're gonna name the user, Brian.

71
00:04:29.458 --> 00:04:31.529
Okay, pretty straightforwards so far.

72
00:04:31.529 --> 00:04:33.330
And now we're just gonna
change Brian's password.

73
00:04:37.306 --> 00:04:40.633
Something super simple, okay?

74
00:04:40.633 --> 00:04:46.205
And so now if I say switch users Brian,
you can see here, I'm here as Brian,

75
00:04:46.205 --> 00:04:51.014
you can see that I am in Ubuntu,
and I was running bash as my shell.

76
00:04:55.042 --> 00:04:58.016
And it also created a home directory for
Brian as well.

