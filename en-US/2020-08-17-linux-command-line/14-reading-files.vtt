WEBVTT

1
00:00:00.000 --> 00:00:02.946
The next section we're gonna go into is
files, pipes, and permissions here and

2
00:00:02.946 --> 00:00:04.653
we're gonna go with
interacting with files.

3
00:00:04.653 --> 00:00:08.910
And so we're gonna get more into how
to read files, interact with files,

4
00:00:08.910 --> 00:00:10.294
those kinds of things.

5
00:00:10.294 --> 00:00:13.709
And so this section in particular,
and what you're gonna see for

6
00:00:13.709 --> 00:00:17.307
this is I'm gonna go over just a lot
of programs that you need to know or

7
00:00:17.307 --> 00:00:19.935
commands or
whatever you want to think of them as.

8
00:00:19.935 --> 00:00:24.887
Okay, so let's just go ahead and
hop back into it.

9
00:00:24.887 --> 00:00:29.352
So open your command line here,
which I got.

10
00:00:31.786 --> 00:00:36.828
So one of them I wanna introduce you
to right away is one called less.

11
00:00:36.828 --> 00:00:41.609
And less allows you to read a file,
so it's kind of like vim that you're

12
00:00:41.609 --> 00:00:46.567
opening it into a full page like reader
mode, but it's just for reading.

13
00:00:46.567 --> 00:00:48.878
It's not for writing or
anything like this or anything else.

14
00:00:48.878 --> 00:00:53.510
So if I say less textfile.txt.

15
00:00:53.510 --> 00:00:58.419
Notice it throws me into this file and
I'm in a whole program now and

16
00:00:58.419 --> 00:01:02.285
it actually even kind of
looks a little bit like vim.

17
00:01:02.285 --> 00:01:07.413
But this allows me to read a file and
It's really good for long files.

18
00:01:07.413 --> 00:01:11.595
And then when I'm done with it,
it's the same thing as vim,

19
00:01:11.595 --> 00:01:14.470
I just hit Q, and
it pops me back out of it.

20
00:01:14.470 --> 00:01:17.251
So, less is one that's
really useful to know.

21
00:01:17.251 --> 00:01:20.913
Let's just go in here to
the text file real quick and

22
00:01:20.913 --> 00:01:23.477
I'm just gonna make it super long.

23
00:01:23.477 --> 00:01:28.967
So if I say insert and I'm just
gonna add a bunch of new lines here.

24
00:01:33.060 --> 00:01:39.375
Okay, so
now if I look at less txtfile.txt.

25
00:01:39.375 --> 00:01:42.846
Now if I hit down and up,
you can see it's scrolling up and down.

26
00:01:44.415 --> 00:01:47.125
That's what less is really good for,
less is really good for long files.

27
00:01:50.598 --> 00:01:54.566
And there's special shortcuts for
navigating quickly that I don't know

28
00:01:54.566 --> 00:01:57.834
because I don't use less enough
to learn all the shortcuts.

29
00:01:57.834 --> 00:02:01.359
And that's another kind of
thing that you'll find with

30
00:02:01.359 --> 00:02:06.171
these bash commands is you'll invest
time into the tools that you use a lot.

31
00:02:06.171 --> 00:02:10.298
I know git very, very well cuz I use git
probably the most on the command line, but

32
00:02:10.298 --> 00:02:12.380
do I know less very well, no, I don't.

33
00:02:15.957 --> 00:02:19.654
Yeah, so
there's like a way you can like search,

34
00:02:19.654 --> 00:02:23.007
I think if you say like,
slash then type hey.

35
00:02:23.007 --> 00:02:26.721
Yeah, so you can like search for things,
I remember that you can use slash, but

36
00:02:26.721 --> 00:02:29.335
there's a bunch of things like
that less can do for you.

37
00:02:34.522 --> 00:02:36.308
And yeah, cool, so,

38
00:02:36.308 --> 00:02:42.049
a question that a lot of people probably
have is what about more, right?

39
00:02:42.049 --> 00:02:46.315
Cuz we're talking about less,
but what about more?

40
00:02:46.315 --> 00:02:50.265
So if I say more textfile.txt,
pretty similar, right?

41
00:02:50.265 --> 00:02:54.518
You kind of get popped into
this same sort of thing.

42
00:02:54.518 --> 00:02:59.321
When should you use less and
when should you use more, just use less.

43
00:02:59.321 --> 00:03:02.250
[LAUGH] So more is the older
version of our older version.

44
00:03:02.250 --> 00:03:07.052
It is an older program, that someone
down the line got sick of the things

45
00:03:07.052 --> 00:03:10.906
that less or that more couldn't do,
so they wrote less.

46
00:03:10.906 --> 00:03:14.152
And again,
being a snarky computer scientist,

47
00:03:14.152 --> 00:03:16.613
they called it the opposite of more.

48
00:03:16.613 --> 00:03:20.524
So that's where the name less comes from,
it's the newer version of more.

49
00:03:20.524 --> 00:03:25.206
More is just included because
it's been there historically,

50
00:03:25.206 --> 00:03:30.255
which is again, a very common pattern for
which ones are included.

51
00:03:30.255 --> 00:03:35.224
And less just has more features,
it's just a general better thing to learn,

52
00:03:35.224 --> 00:03:37.220
so I would say just learn less.

53
00:03:40.739 --> 00:03:45.725
Yeah, less is a better thing to learn, and
there's other things that are even newer

54
00:03:45.725 --> 00:03:50.235
than less, there's most, right, but
most isn't installed by default.

55
00:03:50.235 --> 00:03:53.907
And I tend to just learn the ones
that are installed by default.

56
00:03:56.981 --> 00:03:59.869
Cool, so that's less, very useful for
reading long documents or

57
00:03:59.869 --> 00:04:01.374
documents of any variety really.

58
00:04:05.479 --> 00:04:09.844
Yep, it's meant to mimic vim
to some degree, the same keys.

59
00:04:12.379 --> 00:04:15.828
All right, so let's talk about man,
M-A-N, so man stands for manual.

60
00:04:15.828 --> 00:04:19.648
If you want to get in
depth about a program,

61
00:04:19.648 --> 00:04:24.862
it'll give you the manual basically for
those programs.

62
00:04:24.862 --> 00:04:28.907
So if I say man less,
it'll give me the manual for less.

63
00:04:32.108 --> 00:04:36.978
Right, so if I scroll down here,
it'll give me like a very in depth with

64
00:04:36.978 --> 00:04:41.050
here's everything you could
ever want to know about less.

65
00:04:41.050 --> 00:04:43.579
And you can see it's pretty long.

66
00:04:48.115 --> 00:04:52.976
You can see down at the bottom,
it's about 1000 lines long.

67
00:04:52.976 --> 00:04:54.335
That's how long it is.

68
00:04:57.020 --> 00:05:01.934
Now, the reason why I showed you less
before I showed you man is that man

69
00:05:01.934 --> 00:05:02.780
uses less.

70
00:05:02.780 --> 00:05:06.116
So if you learn how to use less,
you already know how to use man.

71
00:05:06.116 --> 00:05:10.271
The nice thing about it is you
can also do less -- help and

72
00:05:10.271 --> 00:05:14.181
this will give you
the abbreviated version, right?

73
00:05:14.181 --> 00:05:16.950
You can see here it's the summary
of less commands, right?

74
00:05:19.769 --> 00:05:21.466
But man will give you the entire manual.

75
00:05:21.466 --> 00:05:24.884
Now, you might ask me,
how often do I actually end up using man?

76
00:05:24.884 --> 00:05:28.824
Not very much because it's
usually too much information,

77
00:05:28.824 --> 00:05:31.828
it's usually more information that I want.

78
00:05:31.828 --> 00:05:35.728
And I'm usually better off just googling
for whatever thing I'm looking for

79
00:05:35.728 --> 00:05:37.539
if I'm getting into the man pages.

80
00:05:37.539 --> 00:05:42.090
It is useful for whatever reason, like if
you don't have an internet connection and

81
00:05:42.090 --> 00:05:45.180
you wanna look at how to use a program,
man can be useful.

82
00:05:45.180 --> 00:05:51.880
But also not everything has a man page
as well, so keep that in mind as well.

83
00:05:53.681 --> 00:05:57.955
I don't know if Python 3 has a man page,
it does.

84
00:05:57.955 --> 00:06:01.908
So it does, so
some of them don't have fan pages.

85
00:06:06.561 --> 00:06:09.436
Yeah, if you want the exhaustive thing,
use man.

86
00:06:09.436 --> 00:06:13.045
If you want just the abbreviated version,
use -- help.

87
00:06:17.486 --> 00:06:22.410
All right, let's pop into cat,
it's one that I end up using a lot.

88
00:06:22.410 --> 00:06:29.076
So, if I say cat textfile.txt,
it just prints everything out and

89
00:06:29.076 --> 00:06:33.012
it doesn't do it in less for like less.

90
00:06:33.012 --> 00:06:38.558
Gives you like a nice scrolling,
makes it nice to read.

91
00:06:38.558 --> 00:06:42.429
Cat just grabs the entire file and
spits it out for you, so

92
00:06:42.429 --> 00:06:44.940
you can see here I said cat textfile.

93
00:06:44.940 --> 00:06:47.285
This is Brian, blah blah blah, and

94
00:06:47.285 --> 00:06:50.654
also has all those empty
lines there in the middle.

95
00:06:50.654 --> 00:06:53.751
So, if you have a really short text file,

96
00:06:53.751 --> 00:06:57.301
it's pretty useful to
use cat instead of less.

97
00:06:57.301 --> 00:06:58.974
We'll use cat more later.

98
00:06:58.974 --> 00:07:02.408
Because what it's actually
doing is it's actually

99
00:07:02.408 --> 00:07:04.912
adding that file to the standard out.

100
00:07:04.912 --> 00:07:08.210
And you can use that to be interesting.

101
00:07:08.210 --> 00:07:12.600
But if you don't know standard out is yet,
we'll talk about that in a little bit.

102
00:07:12.600 --> 00:07:16.550
You might ask why it's called cat.

103
00:07:16.550 --> 00:07:18.267
It's from concatenate, so

104
00:07:18.267 --> 00:07:21.420
it's concatenating your
file to the standard out.

105
00:07:21.420 --> 00:07:22.277
That's why it's called cat.

106
00:07:26.272 --> 00:07:29.423
Okay, we already saw tail a little bit.

107
00:07:29.423 --> 00:07:33.167
So if I say tail textfile.txt,

108
00:07:33.167 --> 00:07:38.169
notice it just outputs the last ten lines.

109
00:07:38.169 --> 00:07:41.773
That can be really useful for
various different reasons.

110
00:07:41.773 --> 00:07:46.447
If you wanna just look at the logs but you
only wanna select the last ten things from

111
00:07:46.447 --> 00:07:48.867
the logs you can say tail textfile.txt.

112
00:07:48.867 --> 00:07:56.097
And it's the same thing with head,
it'll just do the first ten lines,

113
00:07:56.097 --> 00:08:00.447
and you can control how
many lines that is.

114
00:08:00.447 --> 00:08:01.160
How many is it?

115
00:08:05.350 --> 00:08:08.361
It's n, so if I say tail -n 3,

116
00:08:08.361 --> 00:08:12.834
textfile.txt, it only
gives me three lines.

117
00:08:12.834 --> 00:08:15.457
Same thing with head.

118
00:08:19.526 --> 00:08:24.011
The same thing if I want 50,
it'll give me the first 50 lines.

119
00:08:24.011 --> 00:08:29.801
So this can be useful if you're looking
for just one particular part of the file.

120
00:08:29.801 --> 00:08:35.523
We also showed you the -f which
shows you how you see in real time.

121
00:08:35.523 --> 00:08:40.689
So this is tail-f textfile.txt.

122
00:08:40.689 --> 00:08:44.769
This will show me in real time
as things are added to the file,

123
00:08:44.769 --> 00:08:49.889
right now nothing is being added to it,
but if there were they would show up.

124
00:08:49.889 --> 00:08:52.159
This would be useful for
like tailing the logs.

125
00:08:52.159 --> 00:08:58.012
In fact, you might have even heard that
term before tailing the logs, right?

126
00:08:58.012 --> 00:08:58.748
It's from this tail.

127
00:09:00.828 --> 00:09:04.777
So if you do that, then you can
use Ctrl+C to get out of that.

128
00:09:13.067 --> 00:09:17.394
In fact, Yeah, I'll show you this,

129
00:09:17.394 --> 00:09:19.392
you don't necessarily have to follow
along with this, but I'll show you.

130
00:09:19.392 --> 00:09:26.552
If I do tail -f textfile and
then I'm gonna open another terminal.

131
00:09:26.552 --> 00:09:32.319
So I can say here inside of
this multipass shell primary.

132
00:09:37.978 --> 00:09:40.599
So you can see here I have two
terminals running on the same thing.

133
00:09:40.599 --> 00:09:48.748
So if I say echo hi and I'm gonna
attach that at the end of textfile.txt.

134
00:09:48.748 --> 00:09:54.156
If I go into here,
you can see it found hi cuz

135
00:09:54.156 --> 00:10:01.232
I added new information
into using this-- operator.

136
00:10:01.232 --> 00:10:03.022
We'll talk about this in a little bit, but

137
00:10:03.022 --> 00:10:05.228
all that does is appends new
text to the end of a file.

138
00:10:13.730 --> 00:10:18.456
There you go, that's what the tail -f is,
if you wanna follow in real time,

139
00:10:18.456 --> 00:10:21.016
those files having things added to them.

140
00:10:25.383 --> 00:10:29.211
Cool, let's get into make directory.

141
00:10:32.446 --> 00:10:36.801
So I'm here in my Ubuntu home directory.

142
00:10:36.801 --> 00:10:42.946
Let's say I wanted to make a new folder
in here, you can say make directory,

143
00:10:42.946 --> 00:10:47.375
mkdir, and
I'm just gonna call it my-new-folder.

144
00:10:50.076 --> 00:10:52.547
And you can see here, I made a new folder.

145
00:10:52.547 --> 00:10:58.754
So I can say cd my directory, And you can
make more folders as much as you want.

146
00:11:02.841 --> 00:11:06.746
So that's when you'll end
up using a lot [COUGH].

147
00:11:06.746 --> 00:11:11.171
One that I end up using quite
a bit as well is mkdir -p.

148
00:11:11.171 --> 00:11:18.241
And then if you give it multiple folders,
it'll create all those folders for you.

149
00:11:18.241 --> 00:11:25.646
So I can say -p hi/my/name/is/Brian.

150
00:11:27.457 --> 00:11:31.318
So now you can see I made a file or
a folder called hi.

151
00:11:31.318 --> 00:11:37.978
And in here is another my, and
you can just, my/name/is/Brian, right?

152
00:11:37.978 --> 00:11:42.391
I don't know why you would do that,
but it's there.

153
00:11:42.391 --> 00:11:50.020
So the -p just allows you to make
multiple folders nested all at once.

