WEBVTT

1
00:00:00.000 --> 00:00:02.834
Talk about bash history for a second.

2
00:00:02.834 --> 00:00:06.534
So, we talked about the things that
you type in go into your bash history,

3
00:00:06.534 --> 00:00:08.276
that's what up and down is using.

4
00:00:08.276 --> 00:00:11.266
That's what the reverse searches using.

5
00:00:15.031 --> 00:00:19.548
But just so,
you know where your bash history is,

6
00:00:19.548 --> 00:00:24.937
if I hit tail and
then tail -/ bash_history, like that.

7
00:00:24.937 --> 00:00:28.016
This is gonna show me
the last things that I ran.

8
00:00:28.016 --> 00:00:31.798
That's what tail does, tail just
outputs the last ten lines from a file.

9
00:00:31.798 --> 00:00:35.745
Your bash_history will have
everything you've ever run, but

10
00:00:35.745 --> 00:00:38.168
I just wanna let you know where that is.

11
00:00:38.168 --> 00:00:40.400
So, if you go in and
you delete your bash_history,

12
00:00:40.400 --> 00:00:41.941
it'll delete all of your history.

13
00:00:41.941 --> 00:00:44.284
So, that's a good thing to do.

14
00:00:44.284 --> 00:00:47.478
If you've like put a password in there
something like you can actually just go in

15
00:00:47.478 --> 00:00:50.064
and edit directly and
delete the passwords and stuff like that.

16
00:00:50.064 --> 00:00:54.053
We'll talk more about tail later,
but that's where it is,

17
00:00:54.053 --> 00:00:55.943
in case you're wondering.

18
00:00:55.943 --> 00:00:58.431
It's in your, in fact,
where am I right now?

19
00:00:58.431 --> 00:00:59.555
I'm in my home directory.

20
00:00:59.555 --> 00:01:03.827
So, if I just hit ls -a, you can see one
of those is bash history, right there.

21
00:01:06.605 --> 00:01:11.328
Another thing to keep in mind is your
bash_history is not written out to on

22
00:01:11.328 --> 00:01:13.091
the fly every single time.

23
00:01:13.091 --> 00:01:16.741
It actually buffers all of your
commands in your current session and

24
00:01:16.741 --> 00:01:20.658
then as soon as I log out, it'll
write all that stuff to bash_history.

25
00:01:20.658 --> 00:01:23.991
So, it's not always writing to it
you have to, you have to log out for

26
00:01:23.991 --> 00:01:25.843
it to write till your bash_history.

27
00:01:35.668 --> 00:01:37.204
Let's talk about another one.

28
00:01:37.204 --> 00:01:40.186
So, if I do ls -a, right?

29
00:01:40.186 --> 00:01:42.492
Let's do this again, ls -a,

30
00:01:42.492 --> 00:01:46.851
let's say, I want it for
whatever reason to run it again.

31
00:01:46.851 --> 00:01:51.957
You can actually put exclamation point,
exclamation point and

32
00:01:51.957 --> 00:01:57.735
it's actually going to do the exact
same command that you did last time.

33
00:01:57.735 --> 00:01:59.690
You'll often hear people
call this bang bang.

34
00:01:59.690 --> 00:02:03.984
I don't know why computer scientists
choose to call explanation points bang,

35
00:02:03.984 --> 00:02:04.696
but they do.

36
00:02:04.696 --> 00:02:08.287
So, for good or for worse,
that's what I'm gonna call it too.

37
00:02:08.287 --> 00:02:11.405
It's probably good for
you to get used to hearing it.

38
00:02:11.405 --> 00:02:15.556
Now why is this useful in this
particular case, this isn't useful.

39
00:02:15.556 --> 00:02:17.606
I could have typed ls -a, or
I could have hit up enter.

40
00:02:17.606 --> 00:02:22.435
However, you can actually insert
that into another command.

41
00:02:22.435 --> 00:02:28.033
So, the reason why I use bang bang
all the time, is let's say I do like.

42
00:02:28.033 --> 00:02:32.641
I do something I needed to use do pseudo,
which I'll talk about pseudo in a bit.

43
00:02:32.641 --> 00:02:34.129
You can do pseudo bang, bang,

44
00:02:34.129 --> 00:02:36.719
it will actually rerun
the last command with pseudo.

45
00:02:36.719 --> 00:02:44.031
And again, we'll talk about pseudo in
a bit, but that's when I use bang, bang.

46
00:02:44.031 --> 00:02:47.143
That just works in bash,
I don't even think that even works in zsh.

47
00:02:47.143 --> 00:02:49.999
So, be aware of that.

48
00:02:49.999 --> 00:02:52.453
So, if you're on Mac that might not work.

49
00:03:02.454 --> 00:03:03.727
Yeah.
So, actually went and

50
00:03:03.727 --> 00:03:04.960
found out why they called it bang.

51
00:03:04.960 --> 00:03:06.528
It turns out in the 1950s,

52
00:03:06.528 --> 00:03:10.765
secretarial dictation typesetting manuals
in American refer to the mark as bang.

53
00:03:10.765 --> 00:03:14.709
And they refer to it as being
from comic books, right?

54
00:03:14.709 --> 00:03:16.897
Because it looks like
an exclamation point, right?

55
00:03:16.897 --> 00:03:19.810
And I didn't know that I don't.

56
00:03:19.810 --> 00:03:23.920
So, comic books are the reason why
you call exclamation points bang

57
00:03:23.920 --> 00:03:25.300
in computer science.

58
00:03:25.300 --> 00:03:27.410
So, there's your dumb fact for the day.

59
00:03:27.410 --> 00:03:30.868
Well, actually, probably not for the day,

60
00:03:30.868 --> 00:03:34.600
I probably have a lot more
dumb facts to tell you.

61
00:03:34.600 --> 00:03:37.174
So buckle up, okay?

62
00:03:37.174 --> 00:03:39.400
Clear, you've probably seen me type
that a billion times by now, but

63
00:03:39.400 --> 00:03:40.392
that just clears your screen.

64
00:03:40.392 --> 00:03:42.633
But again, it's still up here,
if you scroll up.

65
00:03:42.633 --> 00:03:45.553
I think you can also do so

66
00:03:45.553 --> 00:03:50.517
if I do like Ctrl+L, that'll also do so

67
00:03:50.517 --> 00:03:55.344
if it's Ctrl+N, it also does clear.

68
00:03:55.344 --> 00:03:58.379
I never remember that but I can always
remember clear, siren clear all the time.

69
00:04:02.052 --> 00:04:05.804
And last thing here, copy and
paste on the command line.

70
00:04:05.804 --> 00:04:10.402
So, if I come in here and say something
like this and I wanna copy it,

71
00:04:10.402 --> 00:04:13.147
obviously you can highlight all that and

72
00:04:13.147 --> 00:04:17.285
I hit Command C and then Command V
like that all works on Macs.

73
00:04:17.285 --> 00:04:22.118
But I do wanna call out on Windows,
copy and

74
00:04:22.118 --> 00:04:26.425
paste on Windows is Ctrl+C, right?

75
00:04:26.425 --> 00:04:30.378
And, so Ctrl+C means something
totally different on the terminal.

76
00:04:30.378 --> 00:04:34.591
So, you're the normal way that you
would copy and paste doesn't work.

77
00:04:34.591 --> 00:04:38.852
So, you actually have to do
Ctrl+Shift+C and Ctrl+Shift +V.

78
00:04:38.852 --> 00:04:42.444
And that's to disambiguate it
from what Ctrl+C and Ctrl+V mean,

79
00:04:42.444 --> 00:04:45.413
which is something totally
different in the terminal.

80
00:04:45.413 --> 00:04:45.990
In fact,

81
00:04:45.990 --> 00:04:51.132
it's literally the next thing we're gonna
talk about which is how to send signals.

82
00:04:51.132 --> 00:04:54.266
But just be aware if you're on
Windows to do copy and paste,

83
00:04:54.266 --> 00:04:57.040
you have to do Ctrl+Shift+C and
Ctrl +Shift+V.

84
00:04:57.040 --> 00:05:02.306
But if you're on Mac, Command+C and
Command+V work just as normal.

85
00:05:02.306 --> 00:05:06.508
Now, I say all that,
be extremely careful what you copy and

86
00:05:06.508 --> 00:05:08.704
paste into your command line.

87
00:05:08.704 --> 00:05:15.570
Your command line can cause a lot of
damage, [COUGH] if you're not careful.

88
00:05:15.570 --> 00:05:20.349
Particularly, if you're copying things
off of the internet, you can copy and

89
00:05:20.349 --> 00:05:24.628
paste things that you don't necessarily
want to happen, like send all

90
00:05:24.628 --> 00:05:29.505
of my passwords to someone that's going
to mine Bitcoin on my computer, right?

91
00:05:29.505 --> 00:05:33.585
So, you need to be really
careful what you copy and paste.

92
00:05:33.585 --> 00:05:37.718
Actually, it's to the point where
a website can detect that you're copying

93
00:05:37.718 --> 00:05:39.054
something off of it, and

94
00:05:39.054 --> 00:05:42.503
they can swap what they're
putting into your palette, right?

95
00:05:42.503 --> 00:05:44.274
And that's really easy
to do with JavaScript.

96
00:05:44.274 --> 00:05:48.519
So, if you're copying off of a website,
make sure it's a website that you trust,

97
00:05:48.519 --> 00:05:51.324
like GitHub or StackOverflow or
something like that.

98
00:05:51.324 --> 00:05:56.187
That if you're copying off of someone's
blog, don't directly paste it into your

99
00:05:56.187 --> 00:06:00.226
terminal, paste it into like VS Code,
make sure that it's, good.

100
00:06:00.226 --> 00:06:05.352
And then, copy and paste it again
from VS Code into your command line.

101
00:06:05.352 --> 00:06:07.736
And that'll just save you some time.

102
00:06:07.736 --> 00:06:12.449
This has actually happened to
me before where an attacker

103
00:06:12.449 --> 00:06:15.498
has put bad stuff into my clipboard.

104
00:06:15.498 --> 00:06:17.451
So, just be really,
really careful with that.

105
00:06:17.451 --> 00:06:20.810
It's actually even possible to put
a return characters that you can copy and

106
00:06:20.810 --> 00:06:22.753
paste something, and it'll paste it, and

107
00:06:22.753 --> 00:06:25.026
it won't even give you
the opportunity to read it.

108
00:06:25.026 --> 00:06:29.084
It'll immediately run it, because they
put the return character at the end, so

109
00:06:29.084 --> 00:06:30.648
it's pretty sophisticated.

110
00:06:30.648 --> 00:06:35.573
Most emulators, I know for example,
terminal.app and iTerm will say, hey,

111
00:06:35.573 --> 00:06:38.527
there's a return character
at the end of this.

112
00:06:38.527 --> 00:06:40.743
Are you sure you wanted to run this?

113
00:06:40.743 --> 00:06:43.572
It'll ask you but not all of them will.

114
00:06:43.572 --> 00:06:46.379
So, all that to say,
be extremely careful what you copy and

115
00:06:46.379 --> 00:06:47.682
paste into your terminal.

116
00:06:47.682 --> 00:06:50.732
It can be catastrophic,
what you put in there.

117
00:06:50.732 --> 00:06:55.979
And then, the last thing just as a word of
advice, like when you're in copying and

118
00:06:55.979 --> 00:07:00.406
pasting things, I think I say this
my intro to web dev course as well.

119
00:07:00.406 --> 00:07:02.514
Figure out what you're copying and
pasting, right?

120
00:07:02.514 --> 00:07:06.766
Like if you're copying a super long
command that does a ton of crazy stuff

121
00:07:06.766 --> 00:07:07.332
for you.

122
00:07:07.332 --> 00:07:10.856
It's worth your time to pull apart the
command to figure out what it does because

123
00:07:10.856 --> 00:07:14.171
obviously, it was useful to you in some
capacity as you would be copying and

124
00:07:14.171 --> 00:07:14.768
pasting it.

125
00:07:14.768 --> 00:07:19.040
It's a good opportunity for you to go
figure out what's useful about it, right?

126
00:07:19.040 --> 00:07:21.168
Just in general,
like it's fine to copy and paste things,

127
00:07:21.168 --> 00:07:23.008
just figure out what you're copying and
pasting.

