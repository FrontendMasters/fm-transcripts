WEBVTT

1
00:00:00.000 --> 00:00:03.936
&gt;&gt; Jen Kramer: All right so
then we're gonna move on here to Nesting.

2
00:00:03.936 --> 00:00:05.517
So if you open up Chapter 13.

3
00:00:10.956 --> 00:00:15.347
&gt;&gt; Jen Kramer: And I believe,
what have I go going on here this time?

4
00:00:15.347 --> 00:00:18.079
Okay, so
this time what I've done is the following,

5
00:00:18.079 --> 00:00:21.311
I have the same fine lit web page
I've been working with so far.

6
00:00:21.311 --> 00:00:25.456
And inside of my article,
I have a series of little boxes,

7
00:00:25.456 --> 00:00:29.980
which I'd like to display all
next to each other, okay?

8
00:00:29.980 --> 00:00:33.450
So there's a couple of ways
that you could code this.

9
00:00:33.450 --> 00:00:37.410
You could try coding this just with
Flex Box using these asides here,

10
00:00:37.410 --> 00:00:39.430
these three asides in white.

11
00:00:39.430 --> 00:00:43.270
You could code them with Flex Box
inside of this particular article.

12
00:00:43.270 --> 00:00:45.350
That would be a really
great way of doing things.

13
00:00:46.420 --> 00:00:49.290
Then Flex Box would control
however many articles there were.

14
00:00:49.290 --> 00:00:50.950
They would wrap up onto other lines.

15
00:00:50.950 --> 00:00:54.350
They would adjust to
the appropriate widths and

16
00:00:54.350 --> 00:00:56.510
whatever parameters that
you happen to set up.

17
00:00:56.510 --> 00:01:00.979
And what I'm talking about when I
say lay this out with Flex Box.

18
00:01:00.979 --> 00:01:05.058
I'm talking about the way that we laid
out our image gallery with Flex Box,

19
00:01:05.058 --> 00:01:06.689
not the Flex Box grid system.

20
00:01:06.689 --> 00:01:11.820
There's no reason to use the Flex Box grid
system if you're working with CSS grid,

21
00:01:11.820 --> 00:01:13.816
just work with CSS grid, okay?

22
00:01:13.816 --> 00:01:18.660
But in the interest of showing you
exactly how a nested grid would work.

23
00:01:18.660 --> 00:01:23.100
If that winds up being something
that is important to you,

24
00:01:23.100 --> 00:01:25.050
I will show you that now.

25
00:01:25.050 --> 00:01:30.910
The disadvantage here to the CSS
grid portion of this is that

26
00:01:30.910 --> 00:01:35.170
depending on what kind of crazy layout
you're doing in the CSS grid it may or

27
00:01:35.170 --> 00:01:37.170
may not repeat adequately.

28
00:01:37.170 --> 00:01:41.021
So if you think about the Mondrian
painting we laid out earlier,

29
00:01:41.021 --> 00:01:45.533
it would be pretty hard to repeat that for
another bunch of these articles.

30
00:01:48.226 --> 00:01:51.120
&gt;&gt; Jen Kramer: And Flex Box,
of course, you get what you got.

31
00:01:51.120 --> 00:01:53.940
It's gonna be a series of these
boxes one after the other.

32
00:01:53.940 --> 00:02:00.246
But I'm just, right now just demonstrating
to you how a nested grid system will work.

33
00:02:00.246 --> 00:02:03.850
So the HTML is exactly the same as
what we have been working with before.

34
00:02:03.850 --> 00:02:05.374
We're gonna go to the CSS.

35
00:02:08.482 --> 00:02:12.874
&gt;&gt; Jen Kramer: And
what I've done here is the following, so

36
00:02:12.874 --> 00:02:18.893
remember that there's a parent
child relationship in grid.

37
00:02:18.893 --> 00:02:21.398
You have the grid container and
you have the grid items.

38
00:02:21.398 --> 00:02:26.224
So the grid container its direct
descendants are all grid items.

39
00:02:26.224 --> 00:02:30.868
Anything inside of the grid items
is unaffected by gri, right?

40
00:02:30.868 --> 00:02:37.545
So if you look at your HTML here, we have
a wrapper which is our grid container.

41
00:02:37.545 --> 00:02:41.817
Its children are the header and
the article, right?

42
00:02:41.817 --> 00:02:44.913
And the aside, so
those are all grid items.

43
00:02:44.913 --> 00:02:49.576
But inside of the article itself, I now
have this div with a class of nested, and

44
00:02:49.576 --> 00:02:51.330
three asides inside of that.

45
00:02:51.330 --> 00:02:56.667
None of those have any grid properties
associated with them at all, because that

46
00:02:56.667 --> 00:03:02.017
as far as the inheritance goes from the
wrapper to it's children and that's it.

47
00:03:02.017 --> 00:03:06.347
So what we need to do here is
with this div class of nested,

48
00:03:06.347 --> 00:03:10.773
we're gonna declare that to be
the next grid container and

49
00:03:10.773 --> 00:03:14.503
the aasides become the grid items,
make sense?

50
00:03:14.503 --> 00:03:19.984
Okay, so to do that,
&gt;&gt; Jen Kramer: Here

51
00:03:19.984 --> 00:03:22.514
we'll go ahead and put in another class.

52
00:03:22.514 --> 00:03:25.122
I'm gonna put it in right
before my media query here.

53
00:03:25.122 --> 00:03:31.619
And I'm gonna call this the nested class,
which you saw was there inside of the div.

54
00:03:34.120 --> 00:03:39.663
And just as we typically do,
we can just say display grid,

55
00:03:39.663 --> 00:03:44.590
grid-gap, whatever you wanna do.

56
00:03:44.590 --> 00:03:47.374
I said 1m, you could, of course,
pick whatever you want.

57
00:03:50.709 --> 00:03:55.593
&gt;&gt; Jen Kramer: And
I added here also grid-template-columns,

58
00:03:58.701 --> 00:03:59.278
&gt;&gt; Jen Kramer: Auto.

59
00:03:59.278 --> 00:04:03.674
And the reason I did that is because I'm
gonna call out grid template columns in

60
00:04:03.674 --> 00:04:08.285
the media queries later, otherwise I would
just not even declare it here, okay?

61
00:04:08.285 --> 00:04:13.463
Then inside of the media queries,
&gt;&gt; Jen Kramer: So

62
00:04:13.463 --> 00:04:16.254
in this first media query here.

63
00:04:16.254 --> 00:04:18.895
So here's what I did.

64
00:04:18.895 --> 00:04:21.447
We have a bunch of asides going on here.

65
00:04:21.447 --> 00:04:26.282
So there's a series of
asides that are here, okay?

66
00:04:26.282 --> 00:04:29.915
There's also an aside
over here on the outside.

67
00:04:29.915 --> 00:04:33.776
You could do funky things with,
whatever, nth child or

68
00:04:33.776 --> 00:04:36.913
nth of type, and so
forth, to select these.

69
00:04:36.913 --> 00:04:41.123
My sense was it would be simpler for a lot
of people if I just declare a class here.

70
00:04:41.123 --> 00:04:46.760
So I'm gonna declare this last aside
here that's on line 33 in my HTML.

71
00:04:46.760 --> 00:04:51.676
I'm gonna call that class of sidebar
because I want its behavior to be

72
00:04:51.676 --> 00:04:56.698
very different than the asides that
I'm working with inside of here.

73
00:04:59.892 --> 00:05:05.342
&gt;&gt; Jen Kramer: And consequently, inside of
my media queries where you see the side

74
00:05:05.342 --> 00:05:10.898
currently, I'm gonna change that
to .side bar in both locations.

75
00:05:13.851 --> 00:05:17.403
&gt;&gt; Jen Kramer: Otherwise what would happen
is that the styles that are here for

76
00:05:17.403 --> 00:05:21.155
the aside, the generic HTML class
would apply also to those asides

77
00:05:21.155 --> 00:05:24.860
that are going to be inside of
the article and we don't want that.

78
00:05:26.180 --> 00:05:29.640
So, that was just a switch we had to make
because we're adding this extra code.

79
00:05:30.950 --> 00:05:37.182
Now the actual new code that
we're going to add is this,

80
00:05:37.182 --> 00:05:42.221
nested is my class inside
of the media query,

81
00:05:42.221 --> 00:05:50.858
and I can then say grid-template-columns:
repeat (3, 1fr), okay?

82
00:05:57.553 --> 00:06:01.289
&gt;&gt; Jen Kramer: So does that make sense?

83
00:06:01.289 --> 00:06:06.929
Okay, and if we now take a look
at our web page and refresh.

84
00:06:08.750 --> 00:06:13.450
There's our three asides all side by side,
everything looks great.

85
00:06:15.320 --> 00:06:20.213
And when I crunch the page down,
&gt;&gt; Jen Kramer: At some point

86
00:06:20.213 --> 00:06:24.381
along the way, those will all stack and
there they go, okay.

87
00:06:28.807 --> 00:06:29.307
&gt;&gt; Jen Kramer: All right.

88
00:06:35.451 --> 00:06:40.172
&gt;&gt; Jen Kramer: So just to refresh again,
what we did was we declared div with

89
00:06:40.172 --> 00:06:43.792
a class of nested becomes
our grid container.

90
00:06:43.792 --> 00:06:47.529
The asides there inside of that
become our grid items, and

91
00:06:47.529 --> 00:06:50.209
that is then reflected inside of our CSS.

92
00:06:51.830 --> 00:06:55.710
So here's our nested is our grid container

93
00:06:55.710 --> 00:06:59.630
declared here outside of
the media queries, and then

94
00:06:59.630 --> 00:07:03.900
inside the media queries we can declare
exactly how we want those to display.

95
00:07:03.900 --> 00:07:06.620
In this case, at

96
00:07:06.620 --> 00:07:11.194
the larger screen sizes we'd like to
have three columns of equal size.

97
00:07:11.194 --> 00:07:16.190
But mobile dimensions we are just
gonna stack them on top of each other.

