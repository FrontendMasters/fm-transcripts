WEBVTT

1
00:00:00.030 --> 00:00:04.880
&gt;&gt; Jen Kramer: So we are on to chapter 11,
and I call this one Grid Grid.

2
00:00:04.880 --> 00:00:08.280
And the reason why is
if you go on ahead and

3
00:00:08.280 --> 00:00:13.482
open up the beginning files here,
the grid.html files, and

4
00:00:13.482 --> 00:00:19.297
go on ahead and display that in a browser,
we're back to pies again.

5
00:00:19.297 --> 00:00:22.508
So you all are gonna remember
this from yesterday,

6
00:00:22.508 --> 00:00:26.050
we coded this with floats,
we coded this with Flexbox.

7
00:00:26.050 --> 00:00:30.890
Now we're gonna go through and code
this one more time, this time with Grid.

8
00:00:30.890 --> 00:00:35.975
And the purpose behind that is, coding
the same thing three different ways, you

9
00:00:35.975 --> 00:00:41.125
actually learn a lot about the advantages
and disadvantages of each type of layout.

10
00:00:41.125 --> 00:00:43.865
So we can go ahead and do this together.

11
00:00:45.035 --> 00:00:48.735
What I've given you for your starting
files are in the begin folder.

12
00:00:48.735 --> 00:00:51.755
There's a grid.html,
and there's a grid.css.

13
00:00:53.310 --> 00:00:55.700
Go on ahead and open up both of those.

14
00:00:55.700 --> 00:01:00.790
And I believe what I did was
I copied over the, I think,

15
00:01:00.790 --> 00:01:05.480
a lot of the code from the Flexbox
stuff that we did yesterday.

16
00:01:05.480 --> 00:01:10.183
So let's just start by
editing our HTML here,

17
00:01:10.183 --> 00:01:13.690
and let's work on row one, okay.

18
00:01:13.690 --> 00:01:18.240
And we'll just start by editing the HTLM
and then we'll write some CSS for this.

19
00:01:18.240 --> 00:01:20.980
So if you take a look here at row one,

20
00:01:20.980 --> 00:01:24.926
once again it's the four boxes that
are all next to each other here in a row.

21
00:01:26.420 --> 00:01:28.880
Right now all of these have
exactly the same class.

22
00:01:28.880 --> 00:01:32.213
What would happen if we try
to display this with Grid

23
00:01:32.213 --> 00:01:35.855
in a web page where I have four
items with the same class,

24
00:01:35.855 --> 00:01:40.135
and then therefore the same grid
column and grid row dimensions?

25
00:01:40.135 --> 00:01:41.520
What would happen?
&gt;&gt; Speaker 2: They'd be on

26
00:01:41.520 --> 00:01:43.287
top of each other.
&gt;&gt; Jen Kramer: They're all gonna stack

27
00:01:43.287 --> 00:01:44.560
on top of each other.

28
00:01:44.560 --> 00:01:47.641
So we need to come up with a way
that we have individual classes for

29
00:01:47.641 --> 00:01:49.025
each one of these articles.

30
00:01:49.025 --> 00:01:53.909
[COUGH] And what I did was I fell
back to some really old coding

31
00:01:53.909 --> 00:01:58.706
naming technology that we use
to use with tables, okay.

32
00:01:58.706 --> 00:02:03.392
So some of you may not be old
enough to remember this, but

33
00:02:03.392 --> 00:02:08.678
what we used to do was we would
call our classes something like,

34
00:02:08.678 --> 00:02:12.310
r1c1, so that's row one, column one.

35
00:02:12.310 --> 00:02:16.550
Okay, and that would refer to say
the upper left hand corner of your box.

36
00:02:16.550 --> 00:02:19.780
So that's the technique that I've used for
naming these boxes,

37
00:02:19.780 --> 00:02:21.550
because they're not anything special.

38
00:02:23.090 --> 00:02:26.890
You can of course call them whatever
you want, just as always true in CSS.

39
00:02:28.110 --> 00:02:31.428
So I'm gonna call this r1c1.

40
00:02:31.428 --> 00:02:35.050
My second article then would be what?
&gt;&gt; Speaker 2: R1C2.

41
00:02:35.050 --> 00:02:37.894
&gt;&gt; Jen Kramer: r1c2, my third article

42
00:02:37.894 --> 00:02:42.820
would be?
&gt;&gt; Speaker 2: r1c3

43
00:02:42.820 --> 00:02:44.310
&gt;&gt; Jen Kramer: r1c3, and

44
00:02:44.310 --> 00:02:48.100
my fourth article would be?

45
00:02:48.100 --> 00:02:53.483
r1c4, okay.
&gt;&gt; Jen Kramer: So

46
00:02:53.483 --> 00:02:55.598
that's those first four
boxes here in our HTML.

47
00:02:55.598 --> 00:02:58.817
And then if we flip over to our

48
00:02:58.817 --> 00:03:04.273
CSS,
&gt;&gt; Jen Kramer: What we're gonna wind

49
00:03:04.273 --> 00:03:09.389
up doing here is we're gonna come
on down to the wrapper here, and

50
00:03:09.389 --> 00:03:14.976
we can go ahead and add to our wrapper.
&gt;&gt; Jen Kramer: So

51
00:03:14.976 --> 00:03:17.840
we're probably gonna do
what here on our wrapper?

52
00:03:17.840 --> 00:03:20.779
What are our properties gonna be?
&gt;&gt; Speaker 2: display: grid.

53
00:03:20.779 --> 00:03:22.906
&gt;&gt; Jen Kramer: display: grid.

54
00:03:25.125 --> 00:03:26.038
&gt;&gt; Jen Kramer: Okay, and

55
00:03:26.038 --> 00:03:30.711
maybe we'll have some kind
of grid gap of some amount.

56
00:03:34.915 --> 00:03:36.679
&gt;&gt; Jen Kramer: Say two percent,

57
00:03:36.679 --> 00:03:41.085
okay.
&gt;&gt; Jen Kramer: Now

58
00:03:41.085 --> 00:03:44.404
the other thing that you're
probably gonna wanna do, and

59
00:03:44.404 --> 00:03:48.840
you can do it right now where it says
grid system here, starting on line 34.

60
00:03:48.840 --> 00:03:54.460
All this code that's here we're just going
to rip out the first two declarations,

61
00:03:54.460 --> 00:03:56.830
the row and then that class col thing.

62
00:03:56.830 --> 00:03:57.660
We'll rip those out.

63
00:03:59.990 --> 00:04:02.350
And then you can keep
the background colors if you like,

64
00:04:02.350 --> 00:04:03.630
the Martha Stewart colors.

65
00:04:04.650 --> 00:04:08.508
What we'll wind up having
to do here is .r1,

66
00:04:10.612 --> 00:04:15.857
&gt;&gt; Jen Kramer: c1, .r1c2,

67
00:04:15.857 --> 00:04:22.857
.r1c3, .r1c4.

68
00:04:22.857 --> 00:04:27.702
Or you can use some kind of fancy
attribute selector if you want, and

69
00:04:27.702 --> 00:04:30.250
so that's one way of doing this.

70
00:04:30.250 --> 00:04:32.720
And I guess I've actually
also could do it this way.

71
00:04:32.720 --> 00:04:38.700
We could set up just our articles
since many of them are yellow.

72
00:04:38.700 --> 00:04:42.530
We could set these up default as
the yellow background color, and

73
00:04:42.530 --> 00:04:46.290
we can override those later
with other classes if you want.

74
00:04:46.290 --> 00:04:49.811
That might be less typing.

75
00:04:49.811 --> 00:04:54.300
Okay, down here on line
52 we have our reverse.

76
00:04:55.850 --> 00:04:58.670
That flex direction stuff
doesn't fly with Grid so

77
00:04:58.670 --> 00:05:01.660
we can just sort of go on ahead and
kill that reverse.

78
00:05:01.660 --> 00:05:07.246
We actually don't need that at all.
&gt;&gt; Jen Kramer: And

79
00:05:07.246 --> 00:05:12.917
then what's down here in the media queries
you can delete as well because we'll be

80
00:05:12.917 --> 00:05:19.177
adding our own stuff to these.
&gt;&gt; Jen Kramer: So

81
00:05:19.177 --> 00:05:25.970
for this first row then let's go ahead and
start with the desktop layout on that.

82
00:05:25.970 --> 00:05:29.970
What we've done so
far is we've declared that we have,

83
00:05:29.970 --> 00:05:34.340
our wrapper is gonna be a display of grid,
we have a grid gap of two percent.

84
00:05:34.340 --> 00:05:41.050
And what we're going to do next is,
down here under the desktop,

85
00:05:41.050 --> 00:05:46.290
let's on go ahead and add to this some
information about our layout, okay.

86
00:05:46.290 --> 00:05:48.790
Then I'm gonna show you
a new way of typing this.

87
00:05:48.790 --> 00:05:53.780
So obviously we could do exactly
what we have done in the past.

88
00:05:53.780 --> 00:05:59.030
Which is we could set up all of those
classes, we could set up our grid rows, or

89
00:05:59.030 --> 00:06:02.480
grid columns and our grid rows as to where
each one of these things is going to be.

90
00:06:04.260 --> 00:06:06.628
But here's some other things
that we can do with this too.

91
00:06:06.628 --> 00:06:12.215
.wrapper, what we're gonna do is this,
we're gonna call out our

92
00:06:12.215 --> 00:06:18.149
grid template columns,
&gt;&gt; Jen Kramer: And

93
00:06:18.149 --> 00:06:23.027
our grid template rows.
&gt;&gt; Jen Kramer: And

94
00:06:23.027 --> 00:06:30.487
we're gonna do it with a different type
of syntax for calling these out, okay.

95
00:06:30.487 --> 00:06:37.057
So the syntax that I'm gonna use is this,

96
00:06:37.057 --> 00:06:41.954
repeat(4,1fr), okay.

97
00:06:41.954 --> 00:06:47.310
Repeat, and then in parentheses, 4,1fr.

98
00:06:47.310 --> 00:06:52.340
All right, so in the Mondrian examples,
when we called out our grid template

99
00:06:52.340 --> 00:06:56.480
columns we had a number for each one of
those, in pixels in that particular case.

100
00:06:56.480 --> 00:07:00.680
Which we're talking about
the columns widths and so forth.

101
00:07:00.680 --> 00:07:05.380
In this particular case what we're saying
here is we would like to, obviously,

102
00:07:05.380 --> 00:07:07.866
repeat what's inside of the parentheses.

103
00:07:07.866 --> 00:07:12.490
So we're gonna have four columns,
that's what the number four refers to, and

104
00:07:12.490 --> 00:07:17.630
then it's width is 1fr,
which looks like one french, right.

105
00:07:17.630 --> 00:07:20.810
But it's not, it's actually one fraction.

106
00:07:20.810 --> 00:07:23.580
So this is one of the incredibly
cool things about Grid.

107
00:07:25.080 --> 00:07:29.160
If you think about working in floats or
Flexbox, we typically work in

108
00:07:29.160 --> 00:07:33.400
the same units as we're working
on say the width of our page.

109
00:07:33.400 --> 00:07:37.900
And so frequently my style is
I call out widths in percents.

110
00:07:37.900 --> 00:07:42.142
So I have a percent width for my cell,
I have a percent width for my margin,

111
00:07:42.142 --> 00:07:43.587
it all adds to 100%.

112
00:07:43.587 --> 00:07:45.931
You don't like to mix those units, right.

113
00:07:45.931 --> 00:07:50.384
We don't generally have pixels that we mix
up with percents that we mix up with m's,

114
00:07:50.384 --> 00:07:52.090
it's just a disaster, right.

115
00:07:52.090 --> 00:07:54.070
Then we're really not
sure what we're doing.

116
00:07:54.070 --> 00:07:59.150
The cool thing about Grid is that Grid is
very able to mix up all of those units

117
00:07:59.150 --> 00:08:00.480
as you're working across things.

118
00:08:00.480 --> 00:08:03.706
So right now we already have
a grid gap of two percent,

119
00:08:03.706 --> 00:08:08.910
and now I've thrown in this thing
called fr, so one fraction.

120
00:08:08.910 --> 00:08:09.680
What does that mean?

121
00:08:09.680 --> 00:08:13.810
We're gonna have four columns on the page,
so basically take whatever's

122
00:08:13.810 --> 00:08:18.710
there on the page, figure in that two
percent width in between the columns.

123
00:08:18.710 --> 00:08:20.480
And by the way, whatever is left over,

124
00:08:20.480 --> 00:08:23.580
divide it into four pieces,
four fractions.

125
00:08:24.590 --> 00:08:25.400
Isn't it great?

126
00:08:25.400 --> 00:08:28.000
Finally, the browser is doing math for
you.

127
00:08:28.000 --> 00:08:29.630
It's fabulous.

128
00:08:29.630 --> 00:08:35.180
So the fr unit is a really powerful
unit that you can use here for Grid.

129
00:08:35.180 --> 00:08:37.930
And you can, of course,
have as many fractions as you want.

130
00:08:39.300 --> 00:08:45.044
We could have said eight fractions here
if we wanted, but with four columns, in

131
00:08:45.044 --> 00:08:50.721
which case it would say those four columns
would each be eight fractions wide.

132
00:08:50.721 --> 00:08:52.790
So the total width of
the page would be what?

133
00:08:52.790 --> 00:08:59.790
32 fractions, right, 8 fractions called
out for the width times 4 of those.

134
00:08:59.790 --> 00:09:01.826
Make sense?

135
00:09:01.826 --> 00:09:06.280
You can have as many fractions or
as few fractions as you want.

136
00:09:06.280 --> 00:09:08.081
And you can also have decimal fractions,
by the way.

137
00:09:08.081 --> 00:09:11.640
So if you wanted to work your
whole page as one fraction,

138
00:09:11.640 --> 00:09:15.982
then you wanted to work in fractions
of a fraction, you can do that.

139
00:09:15.982 --> 00:09:22.060
So I can say 0.33 fractions or
whatever, 0.25 fractions.

140
00:09:22.060 --> 00:09:24.709
Okay, so that's one of those, and then for

141
00:09:24.709 --> 00:09:28.740
my template rows I'm gonna do
the same kind of thing again.

142
00:09:28.740 --> 00:09:32.880
Repeat, in this case I have five rows, so

143
00:09:32.880 --> 00:09:37.880
I'm gong to say five comma and then it's,
usually the next thing I specify is width.

144
00:09:38.970 --> 00:09:40.570
I'm just gonna say auto.

145
00:09:40.570 --> 00:09:44.930
We don't really have a strong feeling
about the dimensions on these rows, so

146
00:09:44.930 --> 00:09:46.280
just whatever is there.

147
00:09:46.280 --> 00:09:48.870
Take the content, make it all work, okay.

148
00:09:48.870 --> 00:09:54.640
So auto is a great keyword also.
&gt;&gt; Jen Kramer: So far, so good?

149
00:09:57.030 --> 00:10:00.600
Okay, so that’s what we need there
to figure out the widths and

150
00:10:00.600 --> 00:10:02.090
the heights of our various columns.

151
00:10:03.340 --> 00:10:08.547
All right, so
why don’t you take two minutes and

152
00:10:08.547 --> 00:10:14.135
you’re gonna go ahead and
write the classes then for

153
00:10:14.135 --> 00:10:19.089
r1c1, for the desktop dimensions r1c1,

154
00:10:19.089 --> 00:10:22.534
r1c2, r1c3, and r1c4.

155
00:10:22.534 --> 00:10:29.080
Go on ahead and write those out now,
the grid column and grid row values.

156
00:10:29.080 --> 00:10:35.531
If we go on ahead and look at the webpage,
&gt;&gt; Jen Kramer: It

157
00:10:35.531 --> 00:10:36.906
probably looks like this.

158
00:10:36.906 --> 00:10:39.172
Yeah?

159
00:10:39.172 --> 00:10:42.932
All right, so while we've
explicitly called out locations

160
00:10:42.932 --> 00:10:47.060
at the desktop dimension for
these boxes, the first row of boxes,

161
00:10:47.060 --> 00:10:51.490
the rest of them don't have any
classes associated with them.

162
00:10:51.490 --> 00:10:54.970
And so what Grid has done,
as John's gone ahead and said, okay great,

163
00:10:54.970 --> 00:10:56.240
you made all these spots for me.

164
00:10:56.240 --> 00:10:59.566
I'll put one unit of content in
each one of those spots, awesome.

165
00:10:59.566 --> 00:11:04.450
Right, and remember again,
this is a parent-child relationship.

166
00:11:04.450 --> 00:11:08.810
So the parent is the wrapper, the children
are the individual articles, and so

167
00:11:08.810 --> 00:11:10.370
that's what Grid is looking for.

168
00:11:10.370 --> 00:11:12.580
It just looks for
all the children of the wrapper, and

169
00:11:12.580 --> 00:11:17.000
it assigns each child one
spot here in the grid, okay.

170
00:11:17.000 --> 00:11:21.010
Now, so given that it does that
automatically, why did we go through

171
00:11:21.010 --> 00:11:25.930
our CSS and spell out exactly where
all of these things are located?

172
00:11:27.270 --> 00:11:30.390
Anyone have any idea what
the thinking there is?

173
00:11:31.740 --> 00:11:34.100
It seems awfully repetitive, doesn't it?

174
00:11:34.100 --> 00:11:38.420
Well the reason why is because we're
gonna wind up placing those grid cells

175
00:11:38.420 --> 00:11:42.400
in a different location when we
go to the media queries, right.

176
00:11:44.430 --> 00:11:46.550
So if we were going to
go to our media queries,

177
00:11:46.550 --> 00:11:50.720
we've started with just
the desktop dimension here.

178
00:11:50.720 --> 00:11:55.060
We could actually move the wrapper
declaration here to the tablet,

179
00:11:55.060 --> 00:11:57.700
because this is gonna hold true for
the tablet dimension and

180
00:11:57.700 --> 00:12:00.310
the desktop dimension,
we're gonna have four columns.

181
00:12:01.500 --> 00:12:03.530
And then our layout here

182
00:12:05.330 --> 00:12:10.810
on the tablet is gonna change, right,
all these cells are gonna change position.

183
00:12:10.810 --> 00:12:11.654
True?

184
00:12:11.654 --> 00:12:19.097
So these are gonna go to 1/3 and
3/5, yeah.

185
00:12:19.097 --> 00:12:26.170
Why am I not calling out the rows here?
&gt;&gt; Speaker 3: Auto.

186
00:12:27.230 --> 00:12:28.670
&gt;&gt; Jen Kramer: Yeah, it's very smart,

187
00:12:28.670 --> 00:12:32.270
right, it's automatically, it's looking
at the source order of the HTML,

188
00:12:32.270 --> 00:12:34.280
it's putting them in the order anyway.

189
00:12:34.280 --> 00:12:42.030
So you can call out the row locations
if you wish, if that is helpful to you.

190
00:12:42.030 --> 00:12:46.324
If you don't want to, it's what Grid is
gonna do by default anyway which is why I

191
00:12:46.324 --> 00:12:47.938
haven't listed those here.

192
00:12:47.938 --> 00:12:51.865
Make sense?
&gt;&gt; Jen Kramer: Okay,

193
00:12:56.596 --> 00:12:57.478
&gt;&gt; Jen Kramer: So if we go in ahead and

194
00:12:57.478 --> 00:13:03.186
save that.
&gt;&gt; Jen Kramer: And we can

195
00:13:03.186 --> 00:13:09.370
refresh our page, and we're just looking
at that first row and it's behavior.

196
00:13:09.370 --> 00:13:12.230
So when we narrow that up and

197
00:13:12.230 --> 00:13:16.040
get to our break point,
somewhere along the way, there we go.

198
00:13:16.040 --> 00:13:18.640
We get our two and two,
which is what we would expect, yeah.

199
00:13:20.430 --> 00:13:25.647
Okay,
&gt;&gt; Jen Kramer: How

200
00:13:25.647 --> 00:13:27.330
are you guys feeling about this so far?

201
00:13:28.330 --> 00:13:29.960
Pretty straightforward?

202
00:13:29.960 --> 00:13:33.950
Okay, yes, Peter?
&gt;&gt; Speaker 2: So what I did was I just I

203
00:13:33.950 --> 00:13:36.520
changed the grid template columns to two-

204
00:13:36.520 --> 00:13:37.170
&gt;&gt; Jen Kramer: Okay.
&gt;&gt; Speaker 2: And

205
00:13:37.170 --> 00:13:38.040
one fr.
&gt;&gt; Jen Kramer: Yep.

206
00:13:38.040 --> 00:13:39.200
&gt;&gt; Speaker 2: Do you think it would

207
00:13:39.200 --> 00:13:41.170
be more likely for
people to keep it the same-

208
00:13:41.170 --> 00:13:41.840
&gt;&gt; Jen Kramer: Sure.

209
00:13:41.840 --> 00:13:42.740
&gt;&gt; Speaker 2: All the code or

210
00:13:42.740 --> 00:13:45.741
to change them up in the media queries?
&gt;&gt; Jen Kramer: You could absolutely do

211
00:13:45.741 --> 00:13:46.400
that instead.

212
00:13:46.400 --> 00:13:51.319
So what Peter is saying that he
did is his solution was this.

213
00:13:52.870 --> 00:13:57.360
So he would have had in the desktop, he
would've had the grid template columns and

214
00:13:57.360 --> 00:14:01.110
the grid template rows at four and
five, just like we said up here.

215
00:14:01.110 --> 00:14:04.630
But then when you come up
here to the media query,

216
00:14:04.630 --> 00:14:07.664
you said repeat.
&gt;&gt; Speaker 2: I just said two.

217
00:14:07.664 --> 00:14:10.003
&gt;&gt; Jen Kramer: Two.

218
00:14:10.003 --> 00:14:10.832
&gt;&gt; Speaker 2: And then I changed all

219
00:14:10.832 --> 00:14:11.470
the columns.

220
00:14:11.470 --> 00:14:12.970
So maybe it's not as efficient.
&gt;&gt; Jen Kramer: And

221
00:14:12.970 --> 00:14:15.080
then you changed all the columns here?

222
00:14:15.080 --> 00:14:18.290
Okay, so this would be like one, two.
&gt;&gt; Speaker 2: Two,

223
00:14:18.290 --> 00:14:18.870
three.
&gt;&gt; Jen Kramer: And

224
00:14:18.870 --> 00:14:19.930
this would be two, three.

225
00:14:21.240 --> 00:14:24.530
Okay, so that's another possible solution.

226
00:14:25.530 --> 00:14:28.940
I don't see a particular
advantage one way or the other.

227
00:14:28.940 --> 00:14:30.940
It sort of like what make sense to you,
right.

228
00:14:33.430 --> 00:14:36.775
My methodology is calling out
that grid template columns and

229
00:14:36.775 --> 00:14:40.690
grid template rows once and
just changing the position of the cells.

230
00:14:40.690 --> 00:14:43.119
He's calling them out twice, so

231
00:14:43.119 --> 00:14:47.035
I think that probably just
boils down to preference.

232
00:14:47.035 --> 00:14:48.950
I don't see a huge advantage one way or
the other.

