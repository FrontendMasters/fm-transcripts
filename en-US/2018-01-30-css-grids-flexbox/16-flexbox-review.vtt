WEBVTT

1
00:00:00.060 --> 00:00:02.250
&gt;&gt; Jen Kramer: So
let's think about this a little bit more.

2
00:00:02.250 --> 00:00:05.720
So we're gonna go back to
our example of our html.

3
00:00:05.720 --> 00:00:10.890
We're building a four column
grid system and we have rows and

4
00:00:10.890 --> 00:00:13.290
we have cells,
just like we had with floats.

5
00:00:13.290 --> 00:00:17.150
Our row is the flex-
&gt;&gt; Speaker 2: container

6
00:00:17.150 --> 00:00:17.746
&gt;&gt; Jen Kramer: Container.

7
00:00:17.746 --> 00:00:21.930
The individual cells are?
&gt;&gt; Speaker 3: Flex items.

8
00:00:21.930 --> 00:00:24.040
&gt;&gt; Jen Kramer: Flex items, right?

9
00:00:24.040 --> 00:00:28.108
So here is some representative
HTML where we have a row and

10
00:00:28.108 --> 00:00:29.973
which is our container and

11
00:00:29.973 --> 00:00:35.187
then inside of that are the flex items.
&gt;&gt; Jen Kramer: The HTML,

12
00:00:35.187 --> 00:00:38.030
or sorry, the CSS for
this might look as follow.

13
00:00:38.030 --> 00:00:40.400
So we have a class of row.

14
00:00:40.400 --> 00:00:44.610
We're gonna display that as flex because
of course that's our initial declaration

15
00:00:44.610 --> 00:00:47.200
there to get this display as flex box.

16
00:00:47.200 --> 00:00:50.410
Our flex flow might be
something like row wrap.

17
00:00:50.410 --> 00:00:53.890
Obviously you can change those values
if you want but chances are to a wrap.

18
00:00:54.890 --> 00:00:57.920
You could justify the content
ion some direction or another,

19
00:00:57.920 --> 00:01:00.100
I have this being center.

20
00:01:00.100 --> 00:01:03.240
Obviously, you have all the other
choices in values here, and

21
00:01:03.240 --> 00:01:04.500
I've put in a margin as well.

22
00:01:05.990 --> 00:01:09.510
And of course there's a note there that
you can change row direction and so

23
00:01:09.510 --> 00:01:10.350
forth if you wish.

24
00:01:11.750 --> 00:01:15.770
In terms of the individual
column properties, so .col-1,

25
00:01:15.770 --> 00:01:17.770
how would we set that up?

26
00:01:17.770 --> 00:01:22.010
We can set our flex-basis property,
remember this is the short-hand.

27
00:01:22.010 --> 00:01:27.040
Grow, shrink basis,
GSB, grow shrink basis,

28
00:01:27.040 --> 00:01:31.830
and so the growing and shrink are zero, in
other words we're not worrying about them.

29
00:01:31.830 --> 00:01:34.860
But the basis number
will vary depending on

30
00:01:34.860 --> 00:01:38.370
which particular media query
you might be doing, okay?

31
00:01:40.140 --> 00:01:42.600
And then of course rearranging
the columns is super easy.

32
00:01:42.600 --> 00:01:46.790
We can push and call them, it's what
we usually call them with floats.

33
00:01:46.790 --> 00:01:50.080
You can call them also by whatever other
name you want and you can just change

34
00:01:50.080 --> 00:01:55.490
the order property around to
achieve the effect that you want.

