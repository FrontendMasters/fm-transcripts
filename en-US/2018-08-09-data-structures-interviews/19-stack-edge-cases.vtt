WEBVTT

1
00:00:00.160 --> 00:00:05.633
&gt;&gt; Bianca Gandolfo: So what are some
things that could go wrong here?

2
00:00:05.633 --> 00:00:08.292
So for this one we had to check our input,

3
00:00:08.292 --> 00:00:12.923
make sure that it's the correct type,
that it even passed anything.

4
00:00:12.923 --> 00:00:16.708
For this one-
&gt;&gt; Speaker 2: It's like the opposite of,

5
00:00:16.708 --> 00:00:18.930
what if there is
an argument passed into it?

6
00:00:18.930 --> 00:00:19.543
&gt;&gt; Bianca Gandolfo: Yeah, if there

7
00:00:19.543 --> 00:00:22.134
is an argument, nothing would happen.
&gt;&gt; Speaker 2: It's just it's not gonna

8
00:00:22.134 --> 00:00:24.342
be referenced, it's just gonna sit there.
&gt;&gt; Bianca Gandolfo: Yeah,

9
00:00:24.342 --> 00:00:27.178
it'll just disappear.
&gt;&gt; Speaker 3: Nothing's been added to this

10
00:00:27.178 --> 00:00:28.052
stack.
&gt;&gt; Bianca Gandolfo: Yeah.

11
00:00:28.052 --> 00:00:28.942
&gt;&gt; Speaker 3: This stack it would be

12
00:00:28.942 --> 00:00:31.058
negative one, which would go back.
&gt;&gt; Bianca Gandolfo: Yeah,

13
00:00:31.058 --> 00:00:35.934
what if it is empty?
&gt;&gt; Bianca Gandolfo: Yeah, so

14
00:00:35.934 --> 00:00:37.950
how can we handle that?

15
00:00:37.950 --> 00:00:42.739
So if you're popping
something that's empty,

16
00:00:42.739 --> 00:00:48.225
you would just,
I guess we could either throw an error,

17
00:00:48.225 --> 00:00:55.250
or we could just do nothing,
return undefined or something like that.

18
00:00:56.900 --> 00:00:58.494
So those are some things
that you could do.

19
00:00:58.494 --> 00:00:59.470
&gt;&gt; Speaker 2: Just wrap it into if

20
00:00:59.470 --> 00:01:01.192
statement?
&gt;&gt; Bianca Gandolfo: Yeah, so if you-

21
00:01:01.192 --> 00:01:02.960
&gt;&gt; Speaker 2: If it's more than zero,

22
00:01:02.960 --> 00:01:07.851
then do this, if not, return.
&gt;&gt; Bianca Gandolfo: Yeah, exactly,

23
00:01:07.851 --> 00:01:11.891
so we can say if this._length.

24
00:01:11.891 --> 00:01:17.011
Yeah, so what this will account for,
if you say if this._length,

25
00:01:17.011 --> 00:01:21.177
it will account for
if it's undefined, or if it's 0.

26
00:01:21.177 --> 00:01:23.368
So just be careful about that.

27
00:01:23.368 --> 00:01:26.725
It's good in some scenarios, but

28
00:01:26.725 --> 00:01:31.587
in some cases where you're
checking if an array,

29
00:01:31.587 --> 00:01:36.123
or if like a what could
also be undefined or 0?

30
00:01:36.123 --> 00:01:39.591
An index number could be 0,
and that's a valid number, but

31
00:01:39.591 --> 00:01:42.727
you're checking if it exists or
something like that.

32
00:01:42.727 --> 00:01:49.056
Just be mindful of this
conditional catching undefineds,

33
00:01:49.056 --> 00:01:53.241
if that's not what your intention is.

34
00:01:53.241 --> 00:01:59.981
Oops.
&gt;&gt; Bianca Gandolfo: So

35
00:01:59.981 --> 00:02:07.212
if we have something,
do that, else whatever.

36
00:02:07.212 --> 00:02:12.290
You could throw, you could do nothing.

37
00:02:12.290 --> 00:02:13.898
Those are kinda your two options.

38
00:02:13.898 --> 00:02:18.282
However, this is where
you'd ask your interviewer,

39
00:02:18.282 --> 00:02:23.381
do you want me to throw an error, or
how do you want this implemented?

40
00:02:23.381 --> 00:02:27.632
And usually I would say,
okay, why don't we see what

41
00:02:27.632 --> 00:02:32.265
an array does?
&gt;&gt; Bianca Gandolfo: So

42
00:02:32.265 --> 00:02:33.660
let's create an array.

43
00:02:33.660 --> 00:02:35.249
Let's make it a little bigger.

44
00:02:35.249 --> 00:02:38.850
And then,
I forgot that I have a thing I can run.

45
00:02:38.850 --> 00:02:42.859
So if I say, arr.pop,
it just returns undefined.

46
00:02:42.859 --> 00:02:46.358
So that would be my default assumption.

47
00:02:46.358 --> 00:02:52.107
It's just have it act like an array so
that our APIs are similar, in so far that

48
00:02:52.107 --> 00:02:58.180
it doesn't compromise any of the other
core behaviors of our data structure.

49
00:02:58.180 --> 00:02:59.748
So the push and the pop and

50
00:02:59.748 --> 00:03:06.397
the NQDQ stuff,
&gt;&gt; Bianca Gandolfo: There's that.

51
00:03:06.397 --> 00:03:07.886
&gt;&gt; Speaker 2: Cuz it automatically return

52
00:03:07.886 --> 00:03:08.570
undefined.

53
00:03:08.570 --> 00:03:09.835
We don't need the else statement?
&gt;&gt; Bianca Gandolfo: Yep,

54
00:03:09.835 --> 00:03:13.367
they'll automatically return undefined,
exactly.

55
00:03:13.367 --> 00:03:18.714
Should we try it out?
&gt;&gt; Bianca Gandolfo: So

56
00:03:18.714 --> 00:03:22.800
now we push, push, pop, we're expecting
it to look something like this.

57
00:03:24.820 --> 00:03:27.341
Let's take a look, nice.

