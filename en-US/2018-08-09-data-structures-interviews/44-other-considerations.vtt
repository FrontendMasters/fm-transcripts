WEBVTT

1
00:00:00.050 --> 00:00:04.990
&gt;&gt; Bianca Gandolfo: Okay, more things
to consider, and then I'm done.

2
00:00:04.990 --> 00:00:10.210
So if you're doing something in place,
you are essentially creating side effects,

3
00:00:10.210 --> 00:00:14.570
so whenever you do that you want to
discuss that with your interviewer.

4
00:00:14.570 --> 00:00:19.287
So, for example,
the reason side effects are bad

5
00:00:19.287 --> 00:00:24.240
is because if you are mutating
your data structure.

6
00:00:24.240 --> 00:00:27.480
We're talking a lot about
having things by reference,

7
00:00:27.480 --> 00:00:32.220
so if you change this data
structure it can have unintended

8
00:00:32.220 --> 00:00:36.980
consequences in other places on your
code that are also relying on this data.

9
00:00:36.980 --> 00:00:40.700
So whenever you do an in-place algorithm,
you're essentially doing side effects.

10
00:00:40.700 --> 00:00:42.150
So you're saving space.

11
00:00:42.150 --> 00:00:45.880
But there is a trade-off and so
just being aware that and whether or

12
00:00:45.880 --> 00:00:47.510
not you should preserve
the original order.

13
00:00:49.400 --> 00:00:50.870
Set versus map versus object.

14
00:00:50.870 --> 00:00:53.734
We talked about that, so
like different lengths.

15
00:00:53.734 --> 00:00:58.040
All your off-by-one errors.

16
00:00:58.040 --> 00:00:59.809
Optimizing versus readability.

17
00:01:01.160 --> 00:01:04.108
What's better?
If you're gonna take it to the next step,

18
00:01:04.108 --> 00:01:08.120
if you're gonna use bit shifting
is that truly optimizing?

19
00:01:08.120 --> 00:01:12.350
Or are you sacrificing readability for the
person who comes up after you who's not

20
00:01:12.350 --> 00:01:18.670
aware, who's not very familiar
with bit wise kind of operators?

21
00:01:20.440 --> 00:01:24.341
Also, just always think about what more
information can you ask your interviewer?

22
00:01:24.341 --> 00:01:29.937
Because often you can
basically figure out exactly

23
00:01:29.937 --> 00:01:34.889
what the, so, if you ask enough questions.

24
00:01:36.390 --> 00:01:39.426
It's not like they're gonna
give you the answer, but

25
00:01:39.426 --> 00:01:43.716
based on the constraints they give you,
like time complexity constraints,

26
00:01:43.716 --> 00:01:47.544
space complexity constraints, and
you know your data structures,

27
00:01:47.544 --> 00:01:50.520
you can kinda whittle down
what kind of problem it is.

28
00:01:50.520 --> 00:01:53.607
So just keep thinking about,
okay, what are the more,

29
00:01:53.607 --> 00:01:56.244
what's more information
than I could ask for?

