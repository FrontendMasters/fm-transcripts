WEBVTT

1
00:00:00.700 --> 00:00:02.590
&gt;&gt; Bianca Gandolfo: All right,
so let's check out our Queue.

2
00:00:02.590 --> 00:00:05.051
We have our prompt.

3
00:00:07.544 --> 00:00:12.082
&gt;&gt; Bianca Gandolfo: I am going to fork it.

4
00:00:12.082 --> 00:00:15.833
I'm gonna go through this one
a little bit more quickly,

5
00:00:15.833 --> 00:00:18.891
since we've gone through
the stack already.

6
00:00:18.891 --> 00:00:20.233
&gt;&gt; Speaker 2: It's kinda similar.

7
00:00:20.233 --> 00:00:20.733
&gt;&gt; Bianca Gandolfo: Yeah.

8
00:00:23.064 --> 00:00:26.910
&gt;&gt; Bianca Gandolfo: Yeah,
&gt;&gt; Bianca Gandolfo: It's very similar.

9
00:00:26.910 --> 00:00:31.769
So let's think about
how that applies to us.

10
00:00:31.769 --> 00:00:37.378
So enqueue, we need to take a value,
same as the push method.

11
00:00:37.378 --> 00:00:39.993
Dequeue, takes nothing.

12
00:00:39.993 --> 00:00:41.398
Peek, takes nothing.

13
00:00:41.398 --> 00:00:46.720
Okay, so let's do var myQ = Queue,

14
00:00:46.720 --> 00:00:53.430
new Queue, not an old queue,
it's a new one.

15
00:00:53.430 --> 00:00:57.274
We're gonna instantiate it, like that.

16
00:00:57.274 --> 00:01:00.307
And, where is my, and

17
00:01:00.307 --> 00:01:05.590
we want it to look something like this.

18
00:01:08.848 --> 00:01:11.695
&gt;&gt; Bianca Gandolfo: Uh-oh, too many open.

19
00:01:14.948 --> 00:01:17.121
&gt;&gt; Bianca Gandolfo: Excuse me.

20
00:01:20.377 --> 00:01:26.430
&gt;&gt; Bianca Gandolfo: Queue prompt,
Queue solution, here we go.

21
00:01:26.430 --> 00:01:31.076
That's why I have to name them,
very specific, or I get confused.

22
00:01:31.076 --> 00:01:38.510
Okay, so we want our Queue, so we want to,
&gt;&gt; Bianca Gandolfo: .enqueue.

23
00:01:38.510 --> 00:01:45.419
So when we enqueue something,
we wanna push it to the back.

24
00:01:45.419 --> 00:01:53.027
So the same as our,
&gt;&gt; Bianca Gandolfo: This

25
00:01:53.027 --> 00:01:55.880
is the same order from our stack.

26
00:01:55.880 --> 00:01:59.657
So once we do this, we expect it to
look like that, with a length of 2.

27
00:01:59.657 --> 00:02:04.451
And then we want to myQ.dequeue.

28
00:02:04.451 --> 00:02:09.795
And we want it to look
something like this.

29
00:02:11.099 --> 00:02:13.659
&gt;&gt; Bianca Gandolfo: We
wanna take the first

30
00:02:13.659 --> 00:02:18.219
one,
&gt;&gt; Bianca Gandolfo: Okay?

31
00:02:23.580 --> 00:02:25.920
&gt;&gt; Bianca Gandolfo: All right.

32
00:02:25.920 --> 00:02:29.690
&gt;&gt; Speaker 3: Did we wanna
update the property in line 43?

33
00:02:29.690 --> 00:02:31.689
Does it wanna be number one, string one?

34
00:02:31.689 --> 00:02:32.526
Or should it be zero?

35
00:02:33.830 --> 00:02:37.719
&gt;&gt; Bianca Gandolfo: What do you mean?

36
00:02:37.719 --> 00:02:42.211
&gt;&gt; Speaker 3: I'm sorry, line 42.

37
00:02:42.211 --> 00:02:44.277
&gt;&gt; Bianca Gandolfo: Mm-hm.

38
00:02:44.277 --> 00:02:49.093
&gt;&gt; Speaker 3: The number one is the key,
and then the string saying one is

39
00:02:49.093 --> 00:02:50.433
the property-
&gt;&gt; Bianca Gandolfo: Mm-hm.

40
00:02:50.433 --> 00:02:53.451
&gt;&gt; Speaker 3: Do we wanna update
the key to zero, or it doesn't matter?

41
00:02:53.451 --> 00:02:55.096
&gt;&gt; Bianca Gandolfo: Cuz we
already moved the first one.

42
00:02:55.096 --> 00:02:55.636
&gt;&gt; Speaker 3: Yeah.
&gt;&gt; Bianca Gandolfo: Yeah,

43
00:02:55.636 --> 00:03:01.202
if we want it to be in constant time, we
can't go back and edit all of the indices.

44
00:03:01.202 --> 00:03:02.709
&gt;&gt; Speaker 3: Sure.
&gt;&gt; Bianca Gandolfo: So this is the one

45
00:03:02.709 --> 00:03:07.018
thing that makes it different
from an array implemetation,

46
00:03:07.018 --> 00:03:11.494
where we imagine array being
a continuous block of memory, and

47
00:03:11.494 --> 00:03:14.639
the array indices need to stay consistent.

48
00:03:14.639 --> 00:03:21.440
So, kind of, but we're going to
keep track of it a different way so

49
00:03:21.440 --> 00:03:27.519
that we don't have to reshuffle
the contents of our Queue.

50
00:03:27.519 --> 00:03:34.547
And it will keep our dequeue,
and later subsequent enqueue's,

51
00:03:34.547 --> 00:03:41.341
in our constant time constraint
that is required by our Queue.

52
00:03:41.341 --> 00:03:46.967
Okay, okay, so when we dequeue,

53
00:03:46.967 --> 00:03:52.020
we want it to look like this.

54
00:03:52.020 --> 00:03:56.546
And then, let's say, whoops,

55
00:03:56.546 --> 00:04:01.564
let's say we want to enqueue again.

56
00:04:01.564 --> 00:04:03.040
So let's enqueue,
&gt;&gt; Bianca Gandolfo: Two.

57
00:04:08.858 --> 00:04:15.350
&gt;&gt; Bianca Gandolfo: So then, how might we,
&gt;&gt; Bianca Gandolfo: Make this work?

58
00:04:15.350 --> 00:04:18.640
&gt;&gt; Speaker 4: Is that a trick question?

59
00:04:18.640 --> 00:04:22.638
&gt;&gt; Bianca Gandolfo: No, it's similar-
&gt;&gt; Speaker 4: Should we use

60
00:04:22.638 --> 00:04:23.295
the length again?

61
00:04:23.295 --> 00:04:24.719
&gt;&gt; Bianca Gandolfo: Yeah,
we'll need the length.

62
00:04:26.015 --> 00:04:30.995
&gt;&gt; Bianca Gandolfo: One thing
we could do is we could just

63
00:04:30.995 --> 00:04:35.738
keep track of,
&gt;&gt; Bianca Gandolfo: The first,

64
00:04:35.738 --> 00:04:39.665
we could call it the head, even.

65
00:04:39.665 --> 00:04:44.318
The value of the headIndex,
or something like that.

66
00:04:46.752 --> 00:04:50.502
&gt;&gt; Bianca Gandolfo: And then the tail
index would be the headIndex,

67
00:04:50.502 --> 00:04:51.920
plus the length.

68
00:04:53.428 --> 00:04:58.603
&gt;&gt; Bianca Gandolfo: So
if the length is 1, let's see.

69
00:04:58.603 --> 00:05:01.440
So if the headIndex is 1,
the length is 1, no,

70
00:05:01.440 --> 00:05:04.870
that's not gonna work cuz
that's gonna equal 2.

71
00:05:04.870 --> 00:05:09.604
But let's say our, in this case,

72
00:05:09.604 --> 00:05:15.815
our headIndex equals 0, and then we add 2.

73
00:05:15.815 --> 00:05:17.950
Okay, so
we're saying that we're off by one here.

74
00:05:17.950 --> 00:05:21.968
So it would be the headIndex,
plus the length, minus one.

75
00:05:21.968 --> 00:05:26.076
These are things that are really,
really important to check,

76
00:05:26.076 --> 00:05:29.728
because making assumptions,
you know what that does.

77
00:05:29.728 --> 00:05:32.040
So we don't do that here.

78
00:05:32.040 --> 00:05:33.932
So now we're gonna enqueue two.

79
00:05:33.932 --> 00:05:39.630
So what that would look like,
&gt;&gt; Bianca Gandolfo: Is,

80
00:05:39.630 --> 00:05:41.880
so the head is gonna stay the same.

81
00:05:41.880 --> 00:05:44.295
The length is gonna increment to 2.

82
00:05:45.565 --> 00:05:50.989
So one plus two minus one is,
one plus two,

83
00:05:50.989 --> 00:05:55.375
that's three, minus one is two.

84
00:05:55.375 --> 00:06:00.290
This is why I don't teach
the math problems, two.

85
00:06:00.290 --> 00:06:03.267
&gt;&gt; Speaker 5: Because it'll
assign the next possible index,

86
00:06:03.267 --> 00:06:04.943
since we moved something?

87
00:06:04.943 --> 00:06:06.120
&gt;&gt; Bianca Gandolfo: Mm-hm.

88
00:06:06.120 --> 00:06:08.605
&gt;&gt; Speaker 5: So
we try to just assess where to-

89
00:06:08.605 --> 00:06:09.310
&gt;&gt; Bianca Gandolfo: Yeah.

90
00:06:09.310 --> 00:06:11.339
&gt;&gt; Speaker 5: The next
sequential value of the index?

91
00:06:11.339 --> 00:06:13.440
&gt;&gt; Bianca Gandolfo: Yep,
yep, yep, exactly.

92
00:06:13.440 --> 00:06:19.013
And this way,
we don't have to reshuffle anything.

93
00:06:19.013 --> 00:06:22.001
And because our Queue doesn't,
in our stack,

94
00:06:22.001 --> 00:06:26.580
we don't really use it to access
anything in the middle, usually.

95
00:06:26.580 --> 00:06:29.699
We're really only operating on either,
the front, or the back.

96
00:06:29.699 --> 00:06:31.748
So the indices in the middle
really don't matter,

97
00:06:31.748 --> 00:06:34.170
we just need to keep track of the front,
and the back.

98
00:06:34.170 --> 00:06:39.329
And since we can derive the last index,
we're fine.

99
00:06:39.329 --> 00:06:42.636
And we're using numerical indices, so

100
00:06:42.636 --> 00:06:48.397
it's just easy to come up with,
&gt;&gt; Bianca Gandolfo: The tail.

