WEBVTT

1
00:00:00.100 --> 00:00:03.780
&gt;&gt; Will Sentance: So now, Seth,
we're inside the UserCreator.

2
00:00:03.780 --> 00:00:06.590
We have a nice this,
it refers to an object.

3
00:00:06.590 --> 00:00:08.673
By the way, note, side effect.

4
00:00:08.673 --> 00:00:11.153
This is a side effect from
within the UserCreator.

5
00:00:11.153 --> 00:00:12.867
We're probably not going
to return everything out,

6
00:00:12.867 --> 00:00:15.580
because we're changing stuff
when they're out already.

7
00:00:15.580 --> 00:00:20.960
And so Seth talk me through the assignment
that now happens inside of UserCreator.

8
00:00:20.960 --> 00:00:23.290
We called out this,
it refers to the object.

9
00:00:23.290 --> 00:00:23.810
Created and

10
00:00:23.810 --> 00:00:26.830
paid user creator with the help of new,
talk me through the assignment.

11
00:00:26.830 --> 00:00:28.320
&gt;&gt; Seth: We are going to apply-
&gt;&gt; Will Sentance: Sorry,

12
00:00:28.320 --> 00:00:29.570
before assignment, forgive me man.

13
00:00:29.570 --> 00:00:30.940
We've got to do our, no, my fault.

14
00:00:30.940 --> 00:00:32.360
We've gotta do out argument.

15
00:00:32.360 --> 00:00:34.320
So we've gotta add this
in our local memory.

16
00:00:34.320 --> 00:00:35.285
Help me out with that argument.

17
00:00:35.285 --> 00:00:39.400
&gt;&gt; Seth: So passing in paid
name which is value of Alysa.

18
00:00:39.400 --> 00:00:42.280
&gt;&gt; Will Sentance: And becomes
the value of what parameter in here?

19
00:00:42.280 --> 00:00:43.310
&gt;&gt; Seth: Becomes the value of negative.

20
00:00:43.310 --> 00:00:45.600
&gt;&gt; Will Sentance: Yeah, well-
&gt;&gt; Seth: And

21
00:00:45.600 --> 00:00:50.060
page score which is 8
becomes the value of score.

22
00:00:50.060 --> 00:00:50.930
&gt;&gt; Will Sentance: Fantastic.

23
00:00:50.930 --> 00:00:55.220
&gt;&gt; Seth: We're then going to apply
name and score to the lexical list.

24
00:00:56.280 --> 00:00:57.280
&gt;&gt; Will Sentance: Yeah, lexical list,

25
00:00:57.280 --> 00:01:00.700
I'd be a bit cautious to call it
that because it's not actually,

26
00:01:00.700 --> 00:01:05.170
we are explicitly it feels like the
letsCallThis, and like our arrow function.

27
00:01:05.170 --> 00:01:10.370
But letsCallThis actually is stored on a
property of a function, as a letsCallThis.

28
00:01:10.370 --> 00:01:14.170
Here, we are explicitly saying
it's the object1, there.

29
00:01:14.170 --> 00:01:15.724
I see where you're going
with the letsCallThis,

30
00:01:15.724 --> 00:01:17.132
that's not an unreasonable
term to call it.

31
00:01:18.892 --> 00:01:20.286
&gt;&gt; Will Sentance: Yeah,
okay I can take that, yeah,

32
00:01:20.286 --> 00:01:22.800
that's fine, that's actually
not unreasonably difficult.

33
00:01:22.800 --> 00:01:26.370
So this.name but it refers to
the object one layer out which

34
00:01:26.370 --> 00:01:28.140
is what you mean by
lexical here I suppose.

35
00:01:28.140 --> 00:01:30.300
&gt;&gt; Seth: It just sounded better than this,
this, this.

36
00:01:30.300 --> 00:01:31.368
&gt;&gt; Will Sentance: Yeah, I hear that man.

37
00:01:31.368 --> 00:01:33.080
&gt;&gt; Seth: [LAUGH]
&gt;&gt; Will Sentance: So this is the object

38
00:01:33.080 --> 00:01:36.051
one layer out to which we're gonna add a-
&gt;&gt; Seth: Name score.

39
00:01:36.051 --> 00:01:37.730
&gt;&gt; Will Sentance: Name, property.

40
00:01:38.750 --> 00:01:40.660
&gt;&gt; Seth: And it's gonna be-
&gt;&gt; Will Sentance: Yeah.

41
00:01:40.660 --> 00:01:42.060
&gt;&gt; Seth: Score is 8.

42
00:01:42.060 --> 00:01:43.640
&gt;&gt; Will Sentance: Yeah, perfect.

43
00:01:43.640 --> 00:01:49.440
I hope people didn't mind us dragging that
out a bit together, because it really is.

44
00:01:49.440 --> 00:01:54.555
So those are both having an effect
out here, because we passed into user

45
00:01:54.555 --> 00:02:00.650
creator.core this object to be used
as the this inside of UserCreator.

46
00:02:00.650 --> 00:02:02.510
So we're sticking the properties on.

47
00:02:02.510 --> 00:02:06.745
It goes where's this, this is one layer
out, stick name on it and Alyssa.

48
00:02:06.745 --> 00:02:11.526
This.score where is this,
it's one layer out score, set it to 8.

49
00:02:11.526 --> 00:02:15.786
So look at, though, folk, I have
the object in paid user creator which by

50
00:02:15.786 --> 00:02:19.900
the way has the right proto already,
and I filled in its properties.

51
00:02:19.900 --> 00:02:21.830
I didn't have to write that code again.

52
00:02:21.830 --> 00:02:24.581
I use the UserCreator, but man,

53
00:02:24.581 --> 00:02:28.616
did it take a bit of
contrivance to use that code.

54
00:02:28.616 --> 00:02:32.421
Cuz I had to use call to make sure I was
making the changes on the right object,

55
00:02:32.421 --> 00:02:33.520
one layer out.

56
00:02:33.520 --> 00:02:35.630
Pretty brutal, I think.

57
00:02:35.630 --> 00:02:36.800
One second man, I promise.

58
00:02:38.190 --> 00:02:41.310
Do we have a return
value from UserCreator?

59
00:02:41.310 --> 00:02:45.180
No, we didn't use a new keyword on it,
so it doesn't auto-insert return out.

60
00:02:45.180 --> 00:02:48.180
We didn't need it, because we're
referring to an object one layer out.

61
00:02:48.180 --> 00:02:49.200
So we had a side effect,

62
00:02:49.200 --> 00:02:52.420
sort of pseudo-return,
a kind of side effect return.

63
00:02:53.960 --> 00:02:58.613
All right, and then as you say, right, we
could use apply in exactly the same way.

64
00:02:58.613 --> 00:03:04.930
But except we put our further arguments
in as a single argument in an array.

65
00:03:04.930 --> 00:03:09.610
We exit out of execution context and
we don't return anything.

66
00:03:09.610 --> 00:03:11.040
We were doing side effects.

67
00:03:11.040 --> 00:03:11.990
I mean, side effects.

68
00:03:11.990 --> 00:03:15.520
I would never return value mu, changing
something outside of the execution context

69
00:03:15.520 --> 00:03:17.710
from within, yeah, the exclusion context.

70
00:03:17.710 --> 00:03:23.390
And then we hit our final line of our
execution context, which says to do what?

71
00:03:23.390 --> 00:03:24.820
Nick, what's the final line?

72
00:03:24.820 --> 00:03:28.230
We're back in page UserCreator,
now what's the final line?

73
00:03:28.230 --> 00:03:30.860
We've got our object out, it didn't
have quite the right properties yet,

74
00:03:30.860 --> 00:03:32.970
to be a pageUser, so
what do we need to do?

75
00:03:32.970 --> 00:03:35.790
&gt;&gt; Nick: Now, that we have
the right properties on there,

76
00:03:35.790 --> 00:03:40.200
it will be returned to paid user one.

77
00:03:40.200 --> 00:03:41.000
&gt;&gt; Will Sentance: I agree man, but

78
00:03:41.000 --> 00:03:43.558
we've got one more property
you wanna add to make it so.

79
00:03:43.558 --> 00:03:46.870
&gt;&gt; Nick: Yeah,
this.accountBalance will be set to

80
00:03:46.870 --> 00:03:48.350
the account balance that's passed in.

81
00:03:48.350 --> 00:03:49.690
&gt;&gt; Will Sentance: Beautiful, and

82
00:03:49.690 --> 00:03:52.950
now we're back out to the this being
directly the object we're changing on.

83
00:03:52.950 --> 00:03:55.400
We're back out to page UserCreator, so

84
00:03:55.400 --> 00:03:57.456
I just put this in here
to make it really clear.

85
00:03:57.456 --> 00:04:05.174
This.accountBalance is account balance.

86
00:04:05.174 --> 00:04:06.171
The one that was passed in.

87
00:04:06.171 --> 00:04:08.181
And therefore it is what, Nick?

88
00:04:08.181 --> 00:04:08.977
&gt;&gt; Nick: 25.

89
00:04:08.977 --> 00:04:12.650
&gt;&gt; Will Sentance: 25, and
we got our beautiful object here.

90
00:04:12.650 --> 00:04:14.090
&gt;&gt; Nick: And now it's returned.

91
00:04:14.090 --> 00:04:16.690
&gt;&gt; Will Sentance: Because of what
did we run pages creator with?

92
00:04:16.690 --> 00:04:17.480
The help of?

93
00:04:17.480 --> 00:04:19.180
&gt;&gt; Nick: New.
&gt;&gt; Will Sentance: The new keyword, and

94
00:04:19.180 --> 00:04:28.100
the final thing it does is return
our object out into paid user one.

95
00:04:28.100 --> 00:04:28.860
It loses the name,

96
00:04:28.860 --> 00:04:33.790
this, we get the object out and in
a moment we're gonna do our lookup check.

97
00:04:33.790 --> 00:04:38.760
We're gonna do our lookup check to see,
do we have everything we need?

98
00:04:38.760 --> 00:04:40.920
There's our object returned out.

99
00:04:42.120 --> 00:04:45.890
With name, and
we'll do thumbs in a moment people, and

100
00:04:45.890 --> 00:04:50.590
I know that this feels very
complicated but we are seeing

101
00:04:50.590 --> 00:04:56.160
the final penultimate pieces
of all of OOP and JavaScript.

102
00:04:56.160 --> 00:05:00.080
And especially, if you use things like
React, you're gonna see on the final

103
00:05:00.080 --> 00:05:05.440
slide, this is the model behind React.

104
00:05:05.440 --> 00:05:08.310
There isn't really much more.

105
00:05:09.430 --> 00:05:11.040
This is the model behind React.

106
00:05:11.040 --> 00:05:14.770
This notion of having access to
functionality's not directly there.

107
00:05:14.770 --> 00:05:17.910
Our solution four is gonna
implement it the way React does.

108
00:05:17.910 --> 00:05:18.880
Didn't used to.

109
00:05:18.880 --> 00:05:20.200
React used to implement it,

110
00:05:20.200 --> 00:05:25.470
if you remember in the previous versions
before six version, pretty much this way.

111
00:05:25.470 --> 00:05:30.220
ES Six version implements it this way,
implements it solution four way in React.

112
00:05:30.220 --> 00:05:34.640
Okay, so it's got this bond up to,
there it is.

113
00:05:34.640 --> 00:05:40.923
Up to, sorry, hold on, up to this object,
the prototype object on Pages Creator,

114
00:05:40.923 --> 00:05:46.322
because of the new keyword help that
ensured that the auto created object

115
00:05:46.322 --> 00:05:51.469
got a bond to the function store on
that functions prototype object.

