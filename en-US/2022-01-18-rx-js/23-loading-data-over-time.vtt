WEBVTT

1
00:00:00.219 --> 00:00:03.820
So we implemented autocomplete, we could
try a little bit of a different pattern.

2
00:00:03.820 --> 00:00:06.600
There's a pattern I talked
about towards beginning,

3
00:00:06.600 --> 00:00:08.361
which is sometimes you hit an API.

4
00:00:08.361 --> 00:00:11.680
With that API,
you have to hit another API,

5
00:00:11.680 --> 00:00:15.290
right you don't get all
the data that you need.

6
00:00:15.290 --> 00:00:19.780
And sometimes this is intentional,
like maybe it's a List View and

7
00:00:19.780 --> 00:00:24.838
you have some of the data and then you
wanna kind of decorated with more data.

8
00:00:24.838 --> 00:00:27.305
Sometimes it's just
the API that you got and

9
00:00:27.305 --> 00:00:31.580
it is totally on the back end team's
backlog to give you a better API, yeah.

10
00:00:32.690 --> 00:00:34.970
Way, down on the backlog.

11
00:00:34.970 --> 00:00:38.690
It's there though, and
you got to do what you gotta do.

12
00:00:38.690 --> 00:00:44.307
So these are both situations, both
the positive happy version of this and

13
00:00:44.307 --> 00:00:50.209
the sad version of it, regardless how we
might solve for it is a similar idea.

14
00:00:50.209 --> 00:00:56.703
So instead of searching on a keystroke the
functionality that we want now we're gonna

15
00:00:56.703 --> 00:01:02.223
hit the fetch button and we're gonna
get like the Pokemon that matches.

16
00:01:02.223 --> 00:01:08.237
And if you saw before we only got
the name the ID and the classification.

17
00:01:08.237 --> 00:01:14.468
In this case what we wanna do is we wanna
get that Pokemon we'll show that data and

18
00:01:14.468 --> 00:01:20.513
then we'll find out more, like if I go
to an individual one if I say Pika 25,

19
00:01:20.513 --> 00:01:24.605
you can see I get a whole
bunch of other information,

20
00:01:24.605 --> 00:01:29.580
most of which I don't care about,
but some of it I do.

21
00:01:29.580 --> 00:01:32.843
But so, we wanna change this a little bit,

22
00:01:32.843 --> 00:01:37.843
we're gonna steal from a little
bit of our previous code as well.

23
00:01:37.843 --> 00:01:42.715
But let's go ahead and for now,
let's call this old search just so

24
00:01:42.715 --> 00:01:48.127
we can don't have to deal with the comment
in and out and moving it around.

25
00:01:48.127 --> 00:01:52.549
So, instead of the search input
like that's an a form, and

26
00:01:52.549 --> 00:01:58.033
we went to either I hit Enter, or
to hit the button, it'll submit the form

27
00:01:58.033 --> 00:02:02.996
that's gonna be when I go fetch one so
instead of an autocomplete.

28
00:02:02.996 --> 00:02:04.860
We'll maybe got a list of names.

29
00:02:04.860 --> 00:02:07.439
In this case, what we wanna do is okay,

30
00:02:07.439 --> 00:02:12.236
we have found one that we wanna search for
and return it for them, great.

31
00:02:12.236 --> 00:02:15.172
So, what we'll do is but
first, we don't know the ID,

32
00:02:15.172 --> 00:02:18.177
we don't know the ID until
the search results come back.

33
00:02:18.177 --> 00:02:23.022
We just want the search results the first
one that matches, of the first one that

34
00:02:23.022 --> 00:02:28.210
matches, we then wanna go get the
subsequent data for that Pokemon, right?

35
00:02:28.210 --> 00:02:31.845
So we do have one more little helper
function they should just bring in right

36
00:02:31.845 --> 00:02:34.672
now called render Pokemon,
that just shows a different,

37
00:02:34.672 --> 00:02:37.112
it's just a different
dominant relation thing.

38
00:02:37.112 --> 00:02:43.760
It just shows like a div with a name and
bigger letters and stuff like that.

39
00:02:43.760 --> 00:02:46.020
So let's think this out,
we have our search.

40
00:02:48.862 --> 00:02:52.496
And that is now gonna be from the form,
and what do we care about with the form?

41
00:02:52.496 --> 00:02:54.191
What action?

42
00:02:54.191 --> 00:02:56.948
&gt;&gt; Target?

43
00:02:56.948 --> 00:03:00.045
&gt;&gt; Well,
first of all what like what event?

44
00:03:00.045 --> 00:03:01.427
&gt;&gt; Inputs.

45
00:03:01.427 --> 00:03:06.625
&gt;&gt; Input work for a search field, but
this is what we go submit, alright.

46
00:03:06.625 --> 00:03:11.600
So we'll submit, and
then that will trigger our pipeline.

47
00:03:13.320 --> 00:03:17.115
And so there,
now this is interesting because we care,

48
00:03:17.115 --> 00:03:21.011
they hit the forum we care
about the input field, right?

49
00:03:21.011 --> 00:03:26.800
So we could say To
the search fields value.

50
00:03:28.300 --> 00:03:32.559
So now this will be the contents
of the search field just

51
00:03:32.559 --> 00:03:35.998
like we had on line 41 currently, great.

52
00:03:35.998 --> 00:03:40.966
And then, what we'll do is now we should
add that value cuz we don't care about

53
00:03:40.966 --> 00:03:45.128
the event target value we care
about what's in the search field.

54
00:03:45.128 --> 00:03:49.990
We'll go and we will get the Pokemon
just like we did before, all right.

55
00:03:49.990 --> 00:03:53.030
So this I think most of
this will work right?

56
00:03:53.030 --> 00:03:54.608
Like we wanna switch map,

57
00:03:54.608 --> 00:03:58.850
cuz this way they hit it multiple
times we'll get the most recent one.

58
00:03:58.850 --> 00:04:01.808
And you can argue maybe this
should be an exhaust map,

59
00:04:01.808 --> 00:04:05.965
because go get what they got the next
time regardless they change it again.

60
00:04:05.965 --> 00:04:07.931
Yeah, sure.

61
00:04:07.931 --> 00:04:09.150
Whichever one makes you happier.

62
00:04:09.150 --> 00:04:12.923
Like again, like sometimes this comes
down to nuance on the behavior pattern,

63
00:04:12.923 --> 00:04:15.964
knowing that both are an option,
how they behave differently is

64
00:04:15.964 --> 00:04:19.770
the important part which one you choose
to use again depends on your situation.

65
00:04:21.130 --> 00:04:25.666
Okay, so what I will probably
do at this point is I want to

66
00:04:25.666 --> 00:04:30.398
break out the act of getting
a search a Pokemon that matches

67
00:04:30.398 --> 00:04:34.665
a search term from the getting
the additional data.

68
00:04:34.665 --> 00:04:40.921
Cuz we know that search slash PIKA,
will get me everyone that matches PIKA and

69
00:04:40.921 --> 00:04:47.189
the beginning, and then slash 25 will
get me the data about that given one.

70
00:04:47.189 --> 00:04:51.510
So let's just separate those out so that
our observable does not become insane.

71
00:04:52.870 --> 00:04:56.982
So we'll say const like search Pokemon.

72
00:04:56.982 --> 00:05:03.088
With a search term, this will be very
similar to what we have down there.

73
00:05:06.108 --> 00:05:13.241
Right, and from there,
we're gonna return this piece of it right?

74
00:05:13.241 --> 00:05:15.328
It's basically this part
of our functionality

75
00:05:20.397 --> 00:05:23.080
I shall replace it wholesale right there.

76
00:05:23.080 --> 00:05:26.200
So we have the ability
to trigger the search,

77
00:05:26.200 --> 00:05:29.249
we can take out the chaos
in this situation.

78
00:05:29.249 --> 00:05:31.420
We can always add this chaos back in,
don't worry.

79
00:05:32.490 --> 00:05:35.804
And then for the additional data or

80
00:05:35.804 --> 00:05:42.170
we can call it like Pokemon data,
that's gonna take the.

81
00:05:42.170 --> 00:05:44.630
Either the whole PokÃ©mon or
the idea it's up to you.

82
00:05:46.520 --> 00:05:49.611
And then kind of return.

83
00:05:51.447 --> 00:05:52.865
From fetch.

84
00:05:52.865 --> 00:05:58.788
And we'll get theoretically we could,
I got two endpoints here we could,

85
00:05:58.788 --> 00:06:02.275
let's actually shave that off real quick.

86
00:06:07.223 --> 00:06:11.668
You probably stored these variables,
right, but this will work.

87
00:06:11.668 --> 00:06:17.741
So the endpoint for search plus the search
term, and this one will be the endpoint,

88
00:06:21.729 --> 00:06:25.580
Plus the ID that we're looking for,
right and this part remains the same.

89
00:06:25.580 --> 00:06:28.219
So, now we have basically
factory functions

90
00:06:28.219 --> 00:06:32.840
that will produce observables scoped for
the fetch requests that we want.

91
00:06:32.840 --> 00:06:36.389
You would do something very similar
if you're using promises or

92
00:06:36.389 --> 00:06:39.740
what have you just kind of go
fetch that data, hard coding and

93
00:06:39.740 --> 00:06:42.710
all over the place is a way
to make yourself sad later.

94
00:06:42.710 --> 00:06:45.791
So now,
we know that when we when this happens,

95
00:06:45.791 --> 00:06:48.480
we wanna go we have the search value.

96
00:06:48.480 --> 00:06:50.120
So what's the first
thing that we wanna do?

97
00:06:50.120 --> 00:06:52.861
Again, we wanna get the first one
that matches the search term.

98
00:06:52.861 --> 00:06:56.689
We wanna display down the page,
and then we wanna go and

99
00:06:56.689 --> 00:07:01.320
subsequently get all of the data
about that Pokemon, right?

100
00:07:01.320 --> 00:07:05.473
So what's the,
what operator comes next in this search?

101
00:07:05.473 --> 00:07:08.181
Whereas right now I'm just mapping
the submission to the value and

102
00:07:08.181 --> 00:07:09.350
then moving on with my life.

103
00:07:13.454 --> 00:07:15.613
&gt;&gt; Switch map,
&gt;&gt; Switch map,

104
00:07:15.613 --> 00:07:19.241
cuz I wanna go make a request, right?

105
00:07:19.241 --> 00:07:23.742
So take whatever happened, I've got now
the value as what's coming in here, and

106
00:07:23.742 --> 00:07:25.980
we know that this takes a search term.

107
00:07:25.980 --> 00:07:31.206
So we could actually theoretically, so
let's give ourselves some prettier we'll

108
00:07:31.206 --> 00:07:36.442
handle this for us in a second, but let's
give ourselves some room in the meantime.

109
00:07:36.442 --> 00:07:41.106
Make sure we have that comment at
the end we do, so we'll say switch map,

110
00:07:41.106 --> 00:07:43.716
and which, what are we switch mapping?

111
00:07:43.716 --> 00:07:45.471
&gt;&gt; Search Pokemon.

112
00:07:45.471 --> 00:07:47.331
&gt;&gt; Search Pokemon?

113
00:07:49.665 --> 00:07:54.962
Right, and that should give us back
exactly what we're looking for.

114
00:07:54.962 --> 00:07:58.609
Now, let's actually see,
let's do this kind of piece by piece.

115
00:07:58.609 --> 00:07:59.610
We've got that in place.

116
00:07:59.610 --> 00:08:04.033
We're gonna turn subscribe just
to a console log for now, so

117
00:08:04.033 --> 00:08:06.387
we can see everything in place.

118
00:08:06.387 --> 00:08:11.806
Suite, open up the Console,
bigger eyes at slightly and so if I said,

119
00:08:16.774 --> 00:08:21.410
You can see we get back that
initial data awesome, right?

120
00:08:21.410 --> 00:08:24.624
We now have kind of what we need.

121
00:08:24.624 --> 00:08:27.641
Let's go ahead and I'm thinking at
this point since we have that data,

122
00:08:27.641 --> 00:08:30.010
let's do some data transformation here.

123
00:08:30.010 --> 00:08:32.718
We'll say, cool, now I wanna plug

124
00:08:38.532 --> 00:08:43.835
Pokemon, so if I do that,
we should just now get a raw array.

125
00:08:43.835 --> 00:08:46.514
Now we only want the first one,
two ways I can handle this.

126
00:08:50.015 --> 00:08:54.540
One is I could use a map and just
grabbed the first one out of the array.

127
00:08:55.650 --> 00:09:01.974
The other one is, we know that merge
map will take anything observable like,

128
00:09:01.974 --> 00:09:05.687
and use from and
put it into the stream right.

129
00:09:05.687 --> 00:09:09.393
And so
what happens if we use RAM on an array.

130
00:09:12.299 --> 00:09:14.803
From the very beginning,
but it's from on an array

131
00:09:14.803 --> 00:09:16.980
&gt;&gt; What a bunch of observables.

132
00:09:16.980 --> 00:09:21.002
&gt;&gt; Get a yeah, I got a stream of
all the values in there now right.

133
00:09:21.002 --> 00:09:26.132
So I could use a map where I just
grab the first thing on the right,

134
00:09:26.132 --> 00:09:28.996
that's totally I think I could do.

135
00:09:28.996 --> 00:09:33.847
Or I could say,

136
00:09:39.312 --> 00:09:43.173
Well figure out a way, so we're just
saying like cool map over this return

137
00:09:43.173 --> 00:09:46.225
the thing but then turn that
array into a stream of values,

138
00:09:46.225 --> 00:09:48.244
is effectively the same thing as doing

139
00:09:56.235 --> 00:09:58.010
And then merging it together, right?

140
00:09:58.010 --> 00:09:59.930
We're saying like take that array and

141
00:09:59.930 --> 00:10:03.770
stream them one by one instead
of streaming me the array.

142
00:10:03.770 --> 00:10:07.600
So we'll go ahead and say merge map,
give me the series of them.

143
00:10:07.600 --> 00:10:13.046
So if I say, get a stream of every
Pokemon that starts with others B and U.

144
00:10:13.046 --> 00:10:18.094
Now in this case, I could just render
those one by one right I no longer

145
00:10:18.094 --> 00:10:23.230
have an array that has I have to iterate
over in my DOM manipulation code

146
00:10:23.230 --> 00:10:28.651
I could just one by one as they came
through, but I only want the first one.

147
00:10:28.651 --> 00:10:32.410
What can I do to get that
&gt;&gt; Take one

148
00:10:32.410 --> 00:10:34.499
&gt;&gt; Take one.

149
00:10:34.499 --> 00:10:39.358
Take one will get me just
the first one be you fetch,

150
00:10:39.358 --> 00:10:46.300
I just get Bulbasaur just not
an array of one just the raw object.

151
00:10:46.300 --> 00:10:49.371
Take one is common enough,
that there is another operator

152
00:10:49.371 --> 00:10:53.078
does basically the same thing does
anyone take a wild guess what it is?

153
00:10:53.078 --> 00:10:56.611
&gt;&gt; First?
Right good, so first, and yeah,

154
00:10:56.611 --> 00:11:00.520
like the other part of the auto importing.

155
00:11:00.520 --> 00:11:07.320
Are you auto imported from lodash or
ext JS, be you boom, all right?

156
00:11:07.320 --> 00:11:11.816
So now, from the search I am switching to
the most recent one if I slammed on that

157
00:11:11.816 --> 00:11:15.580
button, we could put in all of that
same logic that we had before.

158
00:11:15.580 --> 00:11:21.058
But I'm getting the first one through and
now we could theoretically,

159
00:11:26.200 --> 00:11:30.926
Render it again that's just some DOM
manipulation code because trust me,

160
00:11:30.926 --> 00:11:34.302
watching me write raw DOM
manipulation code by hand,

161
00:11:34.302 --> 00:11:36.564
it's no one's idea of a good time.

162
00:11:36.564 --> 00:11:38.108
So I did it made sure
it worked beforehand.

163
00:11:40.961 --> 00:11:42.940
Right, you can see a load to the page.

164
00:11:42.940 --> 00:11:45.904
This is interesting,
loading additional data.

165
00:11:45.904 --> 00:11:49.547
Now that's hard coded because
basically unless we have

166
00:11:49.547 --> 00:11:53.507
the additional data on that object,
it shows that, right.

167
00:11:53.507 --> 00:11:56.325
So now what we wanna
do is upon loading it,

168
00:11:56.325 --> 00:12:00.685
we wanna then take that information and
fetch additional data.

169
00:12:04.669 --> 00:12:07.168
Cool and so what would we do here
we have a few options, right?

170
00:12:11.695 --> 00:12:13.623
We kind of wanna, this will render it and

171
00:12:13.623 --> 00:12:16.641
we'll get the Pokemon back where
we can do more stuff, right?

172
00:12:16.641 --> 00:12:20.590
Cuz tap, takes whatever you gave it and
passes it along.

173
00:12:20.590 --> 00:12:22.260
Fair well, what else do we wanna do?

174
00:12:22.260 --> 00:12:27.231
&gt;&gt; We could switch map on the get Pokemon.

175
00:12:27.231 --> 00:12:29.710
&gt;&gt; We can switch map on the get Pokemon,
right?

176
00:12:34.149 --> 00:12:38.403
Now, we could merge map to but y'all have
figured out the trick here already and

177
00:12:38.403 --> 00:12:40.400
why this becomes problematic.

178
00:12:40.400 --> 00:12:43.786
Switch map is probably our right choice,
so I will not do the thing where I write

179
00:12:43.786 --> 00:12:47.145
the wrong code and trick you, cuz you've
already guessed the right answer.

180
00:12:47.145 --> 00:12:49.921
So we will switch map to that Pokemon.

181
00:12:56.195 --> 00:13:00.674
And in there, what we can do is,
we can go ahead and

182
00:13:00.674 --> 00:13:03.672
we can get that one as well right.

183
00:13:03.672 --> 00:13:08.385
So we've got the Pokemon in this case and
we could say,

184
00:13:08.385 --> 00:13:13.201
this is this code is gonna have
some problems too right so

185
00:13:13.201 --> 00:13:15.573
we could say, switch map.

186
00:13:15.573 --> 00:13:22.897
And then we'll return, From that Pokemon.

187
00:13:23.997 --> 00:13:27.525
And then theoretically
we could call render.

188
00:13:27.525 --> 00:13:32.403
What we need to do at this point is
put it on to that Pokemon object,

189
00:13:32.403 --> 00:13:33.931
that we had before.

190
00:13:33.931 --> 00:13:34.473
So we've got that.

191
00:13:36.638 --> 00:13:39.363
So let's say this point,
let's see what we have at this point.

192
00:13:42.308 --> 00:13:43.664
Console I'll get at the end, right?

193
00:13:48.783 --> 00:13:49.797
So later I get that data.

194
00:13:52.866 --> 00:13:57.189
And I could theoretically target that
part of the DOM, but the other tricky

195
00:13:57.189 --> 00:14:01.940
part is like I could do the first, I could
render to the page, then I get this data.

196
00:14:01.940 --> 00:14:04.280
I could also subsequently do that as well.

197
00:14:05.730 --> 00:14:07.767
There's a few ways that I could do this,
I could target that and

198
00:14:07.767 --> 00:14:09.820
that would probably enough
to get me the data.

199
00:14:09.820 --> 00:14:14.804
The other thing I could do
is I could kind of try to do

200
00:14:14.804 --> 00:14:19.450
them little bit both at the same time,
right?

201
00:14:19.450 --> 00:14:24.750
So what if we tried this, we'll take our
switch map where we have the Pokemon.

202
00:14:24.750 --> 00:14:28.550
And we're just gonna store that
in a variable for a second.

203
00:14:29.780 --> 00:14:32.160
Now we know that if we wanna
do anything in ArcGIS,

204
00:14:32.160 --> 00:14:35.490
we have to turn even our raw
values back into observables.

205
00:14:35.490 --> 00:14:39.315
It's kinda like a synchronous code
once you start playing with async,

206
00:14:39.315 --> 00:14:41.298
everything has to be async, right?

207
00:14:41.298 --> 00:14:43.857
The second you have one synchronous
function in there like you don't have

208
00:14:43.857 --> 00:14:45.764
async code anymore or
you just have a headache or bugs.

209
00:14:48.597 --> 00:14:49.566
So we'll say.

210
00:14:50.578 --> 00:14:55.832
Turn that into an observable.

211
00:14:55.832 --> 00:15:03.193
And now we've also got We could
go ahead and we could say,

212
00:15:07.960 --> 00:15:14.568
Our additional data, we just called data
if you wanted to or an additional data.

213
00:15:15.688 --> 00:15:18.948
Is get that Pokemon data without Pokemon.

214
00:15:25.031 --> 00:15:33.522
And, Put it all together.

215
00:15:33.522 --> 00:15:39.470
So here we can just map it.

216
00:15:41.790 --> 00:15:44.948
This is kind of what we do a scan earlier,
right?

217
00:15:44.948 --> 00:15:46.535
We can save our data.

218
00:15:46.535 --> 00:15:48.643
So we've got the Pokemon scope,
we've got the data in scope.

219
00:15:54.456 --> 00:15:58.451
Everything about
the Pokemon plus the data.

220
00:15:58.451 --> 00:15:59.289
Nope?

221
00:16:02.671 --> 00:16:07.203
Right and that out of here we need to
return both of those at the same time

222
00:16:17.557 --> 00:16:22.510
So it'll pass through that initial one and
so here we could actually move this down,

223
00:16:22.510 --> 00:16:25.507
so we'll start fetching our data.

224
00:16:25.507 --> 00:16:32.722
Try this out You can see that
it loads right into passes.

225
00:16:32.722 --> 00:16:37.192
Now there is an issue here where, if we
slowed this down, we'd be getting all of

226
00:16:37.192 --> 00:16:40.823
this we'd be doing all this and
then they could theoretically.

227
00:16:40.823 --> 00:16:45.467
So we can use a switch map or an exhaust
map depending on what we wanna do.

228
00:16:45.467 --> 00:16:48.613
If you're like, finish what they did,
for some reason, exhaust map,

229
00:16:48.613 --> 00:16:50.017
we'll pull this all together.

230
00:16:50.017 --> 00:16:51.970
But if we look at this, let's review.

231
00:16:53.130 --> 00:16:56.133
We go get the first one, and
then we're gonna kind of fire,

232
00:16:56.133 --> 00:16:59.738
we'll take showing the initial one
if it comes back super fast, cool,

233
00:16:59.738 --> 00:17:02.346
do both but
then kind of give me both pieces of data.

234
00:17:02.346 --> 00:17:05.796
Because when I did them in a stream
that problem with the pipe, cool,

235
00:17:05.796 --> 00:17:07.531
you had the PokÃ©mon and that data.

236
00:17:07.531 --> 00:17:10.903
And then you do the second one then
you only have the second piece.

237
00:17:10.903 --> 00:17:15.184
Here we're just gonna kind of like, I have
a Pokemon maybe we'll get more stuff, and

238
00:17:15.184 --> 00:17:18.471
then I'm gonna merge them both here and
then keep emitting data.

239
00:17:18.471 --> 00:17:22.436
So I can kinda update my data store you
could probably do this with a scan as

240
00:17:22.436 --> 00:17:26.986
well, but they're just kind of different
ways to kinda manipulate the streams and

241
00:17:26.986 --> 00:17:28.040
pull them together

