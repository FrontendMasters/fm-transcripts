[00:00:00]
>> So let's go through and let's play with an example. So I've got this area for mapping exercises and let's let's go play around with this a little bit this is in the mapping directory here. Here we have get character is a fake promise in this case. It's a fake API request is a JSON file and here you can see the answer sheet.

[00:00:23]
But go ahead from this promise get me the first one in the database and get plucked the name out. That seems fine that's good so what we wanna do at this point is we wanna be able to kind of map these in different ways. But what happens if we wanted to get four characters?

[00:00:46]
Right, we wanted to go get, one two three and four. So we could do something like. 1, 2, 3, and 4. And maybe this is what we get back from the API that they were looking for. And what I wanna do is I want to take those numbers, and we'll see I'm gonna do this wrong first we'll map them and we'll say for that number I want to go get that character let's start with the four character at this point.

[00:01:29]
And we'll get that nth character. Right, and you can see that this doesn't work great and if you look under the hood these are a bunch of observables. So I can merge map them instead of a map. We'll require that one, swap this one. Now you can see it pulls in each one of them as its own independent piece.

[00:02:04]
I need these ideas in the database go fire them off in parallel. As they come back, put them on the page, right? So these are all getting fired in parallel. And as they come in, they are getting handled, right? And so you begin to kind of like play around with pieces of this as we go through.

[00:02:29]
So, we have the ability to switch between things. This seems kind of interesting for us, like what could we do here? I think switch map is one of the more interesting ones and like once you kind of wrap your head around switch map, you can also theoretically kind of get a sense around how to deal with exhaustion.

[00:02:48]
Just like what logic, do you want? Right, like the kind of usage and syntax isn't too different, but this idea of like figuring out how to deal with different pieces of this along the way. So I'll actually show you a simple implementation of it and we kind of play around with it a little bit as well.

[00:03:05]
We'll look at it we'll kinda try to implement it also. So I have this playground that I built, and this is the kind of under the hood piece of it, right? Well actually I'll take it for a spin in a second, but we've got to start and stop that we've seen before.

[00:03:25]
We've got this ability to clear all that does is clear out the Dom. It's not really important for us. But we're going to merge, play and pause. And then we're going to switch between. If it's running we're switch between whatever observable we care about, or this special observable.

[00:03:43]
Two is a strong word but there are two special observables that RxJS gives us. One is called never and the other one is called empty. Just as a random guess, what do you think never does?
>> Never
>> Nothing.
>> Nothing never emits, it never completes. It's just like a black hole of observable, nothing happens, right?

[00:04:07]
And empty will just basically immediately complete. Right, like I don't want to do anything here, I'm actually done right? I think that's it we're finished. So if you look at the switch map code right we have the true and the false coming through just like we had that 1,2,3,4 previously.

[00:04:25]
Either true or false is coming through, right? That value is again true or false. If it's running, right? I would love to switch to this observable from the very beginning, if you forget what you were doing, if anything else was happening, because theoretically never could have been happening.

[00:04:44]
If it is false, then switch to this never observable. So means that when we're running well listen to whatever, this could be, for instance, an interval, right? We can see how this might work for our timer, where we say cool switch that interval that's counting away. If it's false redirect to the never observable, right?

[00:05:08]
So now we have the ability to change the flow based on other events that kinda come through in this case.

