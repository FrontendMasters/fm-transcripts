WEBVTT

1
00:00:00.002 --> 00:00:02.844
So let's go through and
let's play with an example.

2
00:00:02.844 --> 00:00:07.669
So I've got this area for
mapping exercises and

3
00:00:07.669 --> 00:00:12.372
let's let's go play
around with this a little

4
00:00:12.372 --> 00:00:16.727
bit this is in the mapping directory here.

5
00:00:16.727 --> 00:00:19.923
Here we have get character is
a fake promise in this case.

6
00:00:19.923 --> 00:00:23.644
It's a fake API request is a JSON file and
here you can see the answer sheet.

7
00:00:23.644 --> 00:00:28.684
But go ahead from this promise get
me the first one in the database and

8
00:00:28.684 --> 00:00:30.640
get plucked the name out.

9
00:00:30.640 --> 00:00:36.106
That seems fine that's good so
what we wanna do at this

10
00:00:36.106 --> 00:00:42.552
point is we wanna be able to kind
of map these in different ways.

11
00:00:42.552 --> 00:00:46.339
But what happens if we wanted
to get four characters?

12
00:00:46.339 --> 00:00:50.937
Right, we wanted to go get,
one two three and four.

13
00:00:50.937 --> 00:00:52.908
So we could do something like.

14
00:01:01.719 --> 00:01:03.666
1, 2, 3, and 4.

15
00:01:03.666 --> 00:01:08.176
And maybe this is what we get back from
the API that they were looking for.

16
00:01:08.176 --> 00:01:13.421
And what I wanna do is I want
to take those numbers, and

17
00:01:13.421 --> 00:01:19.251
we'll see I'm gonna do this
wrong first we'll map them and

18
00:01:19.251 --> 00:01:24.731
we'll say for that number I
want to go get that character

19
00:01:24.731 --> 00:01:29.885
let's start with the four
character at this point.

20
00:01:29.885 --> 00:01:33.430
And we'll get that nth character.

21
00:01:36.292 --> 00:01:39.300
Right, and you can see that
this doesn't work great and

22
00:01:39.300 --> 00:01:42.512
if you look under the hood these
are a bunch of observables.

23
00:01:42.512 --> 00:01:46.200
So I can merge map them instead of a map.

24
00:01:46.200 --> 00:01:52.254
We'll require that one,

25
00:01:52.254 --> 00:01:55.836
swap this one.

26
00:01:55.836 --> 00:02:00.306
Now you can see it pulls in each one of

27
00:02:00.306 --> 00:02:04.786
them as its own independent piece.

28
00:02:04.786 --> 00:02:11.372
I need these ideas in the database
go fire them off in parallel.

29
00:02:11.372 --> 00:02:15.075
As they come back,
put them on the page, right?

30
00:02:15.075 --> 00:02:17.418
So these are all getting
fired in parallel.

31
00:02:17.418 --> 00:02:21.546
And as they come in,
they are getting handled, right?

32
00:02:21.546 --> 00:02:24.538
And so you begin to kind of like

33
00:02:24.538 --> 00:02:29.455
play around with pieces
of this as we go through.

34
00:02:29.455 --> 00:02:31.451
So, we have the ability
to switch between things.

35
00:02:31.451 --> 00:02:35.714
This seems kind of interesting for
us, like what could we do here?

36
00:02:35.714 --> 00:02:39.495
I think switch map is one of
the more interesting ones and

37
00:02:39.495 --> 00:02:43.197
like once you kind of wrap
your head around switch map,

38
00:02:43.197 --> 00:02:48.764
you can also theoretically kind of get a
sense around how to deal with exhaustion.

39
00:02:48.764 --> 00:02:50.526
Just like what logic, do you want?

40
00:02:50.526 --> 00:02:55.885
Right, like the kind of usage and
syntax isn't too different, but this idea

41
00:02:55.885 --> 00:03:01.173
of like figuring out how to deal with
different pieces of this along the way.

42
00:03:01.173 --> 00:03:03.753
So I'll actually show you
a simple implementation of it and

43
00:03:03.753 --> 00:03:05.928
we kind of play around with
it a little bit as well.

44
00:03:05.928 --> 00:03:08.602
We'll look at it we'll kinda
try to implement it also.

45
00:03:08.602 --> 00:03:12.653
So I have this playground that I built,
and

46
00:03:12.653 --> 00:03:17.730
this is the kind of under
the hood piece of it, right?

47
00:03:17.730 --> 00:03:21.522
Well actually I'll take it for
a spin in a second, but

48
00:03:21.522 --> 00:03:25.329
we've got to start and
stop that we've seen before.

49
00:03:25.329 --> 00:03:27.469
We've got this ability to clear all
that does is clear out the Dom.

50
00:03:27.469 --> 00:03:29.196
It's not really important for us.

51
00:03:29.196 --> 00:03:31.851
But we're going to merge, play and pause.

52
00:03:31.851 --> 00:03:36.282
And then we're going to switch between.

53
00:03:36.282 --> 00:03:41.600
If it's running we're switch between
whatever observable we care about,

54
00:03:41.600 --> 00:03:43.684
or this special observable.

55
00:03:43.684 --> 00:03:49.450
Two is a strong word but there are two
special observables that RxJS gives us.

56
00:03:49.450 --> 00:03:53.481
One is called never and
the other one is called empty.

57
00:03:53.481 --> 00:03:57.680
Just as a random guess,
what do you think never does?

58
00:03:57.680 --> 00:03:59.542
&gt;&gt; Never
&gt;&gt; Nothing.

59
00:03:59.542 --> 00:04:02.900
&gt;&gt; Nothing never emits,
it never completes.

60
00:04:02.900 --> 00:04:07.553
It's just like a black hole of observable,
nothing happens, right?

61
00:04:07.553 --> 00:04:12.443
And empty will just basically
immediately complete.

62
00:04:12.443 --> 00:04:15.768
Right, like I don't want to do anything
here, I'm actually done right?

63
00:04:15.768 --> 00:04:18.902
I think that's it we're finished.

64
00:04:18.902 --> 00:04:21.636
So if you look at the switch map
code right we have the true and

65
00:04:21.636 --> 00:04:25.766
the false coming through just like
we had that 1,2,3,4 previously.

66
00:04:25.766 --> 00:04:28.977
Either true or
false is coming through, right?

67
00:04:28.977 --> 00:04:31.782
That value is again true or false.

68
00:04:31.782 --> 00:04:33.884
If it's running, right?

69
00:04:33.884 --> 00:04:37.495
I would love to switch to this
observable from the very beginning,

70
00:04:37.495 --> 00:04:41.170
if you forget what you were doing,
if anything else was happening,

71
00:04:41.170 --> 00:04:44.343
because theoretically never
could have been happening.

72
00:04:44.343 --> 00:04:50.448
If it is false,
then switch to this never observable.

73
00:04:50.448 --> 00:04:54.194
So means that when we're running well
listen to whatever, this could be, for

74
00:04:54.194 --> 00:04:55.855
instance, an interval, right?

75
00:04:55.855 --> 00:04:58.395
We can see how this might work for
our timer,

76
00:04:58.395 --> 00:05:02.045
where we say cool switch that
interval that's counting away.

77
00:05:02.045 --> 00:05:08.057
If it's false redirect to
the never observable, right?

78
00:05:08.057 --> 00:05:12.887
So now we have the ability to change
the flow based on other events that

79
00:05:12.887 --> 00:05:15.230
kinda come through in this case.

