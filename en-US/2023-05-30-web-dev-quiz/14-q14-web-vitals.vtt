WEBVTT

1
00:00:00.330 --> 00:00:03.477
Match the web vitals to
the correct descriptions.

2
00:00:03.477 --> 00:00:07.850
So we have TTFB, FID,
TTI, TBT, CLS, and INP.

3
00:00:07.850 --> 00:00:12.163
And then the time it takes for a web page
to respond to a user's first interaction,

4
00:00:12.163 --> 00:00:14.225
the time that it takes the main thread,

5
00:00:14.225 --> 00:00:18.570
the time that the main thread is
blocked from responding to user input.

6
00:00:18.570 --> 00:00:20.035
The average time it takes for

7
00:00:20.035 --> 00:00:23.960
a webpage to update its visuals
after a user interacts with it.

8
00:00:23.960 --> 00:00:26.767
The time it takes for
the server to respond to a request and

9
00:00:26.767 --> 00:00:29.500
start sending data back to the client.

10
00:00:29.500 --> 00:00:31.930
Or the time it takes for
a webpage to be fully loaded and

11
00:00:31.930 --> 00:00:33.337
responsive to the user input.

12
00:00:33.337 --> 00:00:35.943
Or the last one,
the stability of a webpage's layout or

13
00:00:35.943 --> 00:00:38.835
unexpected layout shifts that
occur on a webpage as it loads.

14
00:00:43.021 --> 00:00:45.525
So the answer is TTFB or
Time To First Byte, the time it takes for

15
00:00:45.525 --> 00:00:48.647
the server to respond to a request and
start sending data back to the client, or

16
00:00:48.647 --> 00:00:51.142
more like the moment that
the client receives the first byte.

17
00:00:51.142 --> 00:00:54.262
Then we have FID, First Input Delay,
which is the time it takes for

18
00:00:54.262 --> 00:00:56.788
a webpage to respond to
a user's first interaction.

19
00:00:56.788 --> 00:01:00.715
Then we have TTI, Time To Interactive,
which is the time it takes for

20
00:01:00.715 --> 00:01:04.049
a webpage to be fully loaded and
responsive to user input.

21
00:01:04.049 --> 00:01:08.043
We have the TBT, Total Blocking Time,
which is the time that it takes the main

22
00:01:08.043 --> 00:01:11.555
thread or the main thread is blocked
from responding to user input.

23
00:01:11.555 --> 00:01:15.788
Then we have CLS, which is Layout Shifts,
so the stability of the webpages and

24
00:01:15.788 --> 00:01:19.917
layouts or the unexpected layout shifts
that occur on a webpage as it loads.

25
00:01:19.917 --> 00:01:24.333
And NIP, Interaction to Next Paint,
which is the average time it takes for

26
00:01:24.333 --> 00:01:28.061
a webpage to update its visuals
after a user interacts with it.

27
00:01:28.061 --> 00:01:32.601
So first, the Time To First Byte, there's
no animation here or something, but that's

28
00:01:32.601 --> 00:01:36.432
just the moment that the client receives
the very first byte of the server.

29
00:01:36.432 --> 00:01:38.835
This isn't necessarily
as the response ends.

30
00:01:38.835 --> 00:01:43.415
Normally, a response streams in, so this
is just the first byte of that response.

31
00:01:43.415 --> 00:01:46.535
That is that Time To First Byte,
that's the moment where the parser can

32
00:01:46.535 --> 00:01:48.627
kinda start parsing and
processing that HTML.

33
00:01:50.097 --> 00:01:54.317
First, or next, we have the First Input
Delay, and this one kinda measures.

34
00:01:54.317 --> 00:01:56.996
So on the main thread,
we can have long tasks,

35
00:01:56.996 --> 00:02:00.452
which is a task over 50 milliseconds,
or a regular task.

36
00:02:00.452 --> 00:02:04.657
And if you open your dev tools, you will
often see another bar with long tasks,

37
00:02:04.657 --> 00:02:09.010
these are the tasks that you wanna
avoid as they block the main thread.

38
00:02:09.010 --> 00:02:12.069
So for example, here,
the user clicks on something,

39
00:02:12.069 --> 00:02:14.660
as it's still performing a long task.

40
00:02:14.660 --> 00:02:19.170
So during those 200 milliseconds, which
seems short, but for a user experience,

41
00:02:19.170 --> 00:02:23.495
that's actually quite a lot, it cannot
process that event because the main thread

42
00:02:23.495 --> 00:02:28.870
is currently still processing that long
task, and JavaScript is single-threaded.

43
00:02:28.870 --> 00:02:33.666
First Input Delay isn't super consistent
cuz what if the user clicked for

44
00:02:33.666 --> 00:02:36.542
the first time right
before that long task?

45
00:02:36.542 --> 00:02:40.939
Then your First Input Delay seems
a lot shorter, even though, yeah,

46
00:02:40.939 --> 00:02:43.310
so it's not super consistent.

47
00:02:43.310 --> 00:02:48.120
Also, users may not even interact
with your website, then you don't get

48
00:02:48.120 --> 00:02:52.632
a First Input Delay value, but
it's still good to just keep in mind.

49
00:02:52.632 --> 00:02:57.555
Then we have the Time To Interactive,
which is the first time after a long task

50
00:02:57.555 --> 00:03:03.630
has ended that the main thread didn't have
any long tasks for at least five seconds.

51
00:03:03.630 --> 00:03:06.735
So this kind of just measures
that after that time,

52
00:03:06.735 --> 00:03:09.140
the thread is reliably interactive.

53
00:03:09.140 --> 00:03:13.793
Maybe some long task might still occur six
seconds after that last long task, if that

54
00:03:13.793 --> 00:03:18.330
makes sense, but yeah, at that point in
time, that's the Time To Interactive.

55
00:03:18.330 --> 00:03:23.812
So yeah, that's when you can make sure
that long tasks won't block user input.

56
00:03:25.457 --> 00:03:27.871
Next, we have the Total Blocking Time,

57
00:03:27.871 --> 00:03:30.924
which is the time from
the First Contentful Paint to

58
00:03:30.924 --> 00:03:35.761
the Time To Interactive that the long
tasks take longer than 50 milliseconds.

59
00:03:35.761 --> 00:03:39.871
So the first one was 90 milliseconds,
so then it's 40,

60
00:03:39.871 --> 00:03:44.315
55, it's 5 milliseconds,
and 154 minus 50 is 104.

61
00:03:44.315 --> 00:03:47.510
And these all get combined
into a single value.

62
00:03:47.510 --> 00:03:52.814
So here, the Total Blocking Time is 149
milliseconds, because that is the kind

63
00:03:52.814 --> 00:03:58.298
of cumulative time that the tasks were
over 50 milliseconds, if that makes sense.

64
00:03:58.298 --> 00:04:00.099
I feel like I'm explaining
it in a confusing way.

65
00:04:00.099 --> 00:04:05.409
But the Total Blocking Time is a good
indication of how interactive your

66
00:04:05.409 --> 00:04:10.807
webpage is before the Time To Interactive,
because as you see here, for

67
00:04:10.807 --> 00:04:17.200
both of these, well, scenarios,
the Time To Interactive is the exact same.

68
00:04:17.200 --> 00:04:19.790
But for the first one,
there's just one big long task.

69
00:04:19.790 --> 00:04:23.790
During that entire long task, your user
cannot interact with your webpage at all.

70
00:04:23.790 --> 00:04:28.165
Whereas for the second one, your user
still has some time to interact with it,

71
00:04:28.165 --> 00:04:30.236
cuz there are still some long tasks.

72
00:04:30.236 --> 00:04:33.338
But in between,
they can still interact with it and

73
00:04:33.338 --> 00:04:35.511
they will actually see that input.

74
00:04:35.511 --> 00:04:40.114
But it's not reliable because you still
see that some long tasks are happening

75
00:04:40.114 --> 00:04:40.958
right there.

76
00:04:40.958 --> 00:04:43.770
So yeah, it's just like a good
measurement to see, okay,

77
00:04:43.770 --> 00:04:45.457
this is my Time To Interactive, but

78
00:04:45.457 --> 00:04:48.632
how interactive is it prior to
getting to the Time To Interactive?

79
00:04:48.632 --> 00:04:53.336
Because it doesn't mean that your
webpage isn't interactive at all

80
00:04:53.336 --> 00:04:55.700
before that timestamp, kind of.

81
00:04:57.276 --> 00:05:01.427
Yeah, so here, the Total Blocking Time
of the first one is 700 milliseconds,

82
00:05:01.427 --> 00:05:04.453
whereas for the first one,
it's only 15 milliseconds.

83
00:05:04.453 --> 00:05:06.130
So that's a lot better.

84
00:05:07.350 --> 00:05:11.105
Then we have the Cumulative Layout Shift,
which is kind of like,

85
00:05:11.105 --> 00:05:15.480
it's the product of the distance
fraction with the impact fraction.

86
00:05:15.480 --> 00:05:18.507
So first, we have the distance fraction,

87
00:05:18.507 --> 00:05:22.965
which is what percent of the largest
viewport measurement, so

88
00:05:22.965 --> 00:05:27.100
either the height or the width,
did that element change?

89
00:05:27.100 --> 00:05:30.768
So in this case, it moved by 22% down.

90
00:05:30.768 --> 00:05:35.399
And then we have the impact fraction,
which measures the percentage of

91
00:05:35.399 --> 00:05:38.809
the vieport that was affected
by this layout shift.

92
00:05:38.809 --> 00:05:41.837
So in this case, it was the entire
view port that got shifted.

93
00:05:41.837 --> 00:05:45.946
As you could see here,
nothing was as it used to be.

94
00:05:45.946 --> 00:05:47.427
I don't know if it just went back.

95
00:05:47.427 --> 00:05:53.527
Yeah, so in this case, the CLS is 0.22,
cuz the distance fraction is 22%,

96
00:05:53.527 --> 00:05:58.074
0.22, and
then the impact fraction is 1, so 0.22.

97
00:06:00.642 --> 00:06:03.294
So you can see here,
if we somehow dynamically load a filter,

98
00:06:03.294 --> 00:06:05.540
I don't know why that would
be dynamically loaded.

99
00:06:05.540 --> 00:06:08.387
Maybe you're fetching
something from a database and

100
00:06:08.387 --> 00:06:12.689
then conditionally rendering based on,
I don't know, a certain condition and

101
00:06:12.689 --> 00:06:15.360
this gets rendered right
after the initial load.

102
00:06:15.360 --> 00:06:19.431
So maybe your user wants to click right on
that Using React Server Components, but

103
00:06:19.431 --> 00:06:22.450
then it shifts and
you accidentally click on that sort date.

104
00:06:22.450 --> 00:06:27.490
So in this case, the distance fraction
is only 13% down of the total viewport's

105
00:06:27.490 --> 00:06:32.314
heights, and only 60% of the total
viewport was affected by this change, so

106
00:06:32.314 --> 00:06:34.197
then the CLS is only 0.07.

107
00:06:35.530 --> 00:06:36.032
That make sense?

108
00:06:36.032 --> 00:06:36.541
Kind of?

109
00:06:36.541 --> 00:06:41.379
[LAUGH] And then we have
the Interaction to Next Paint,

110
00:06:41.379 --> 00:06:45.149
which is kind of a new
measurement [LAUGH].

111
00:06:45.149 --> 00:06:48.040
Or it gets measured when
a user leaves a page.

112
00:06:48.040 --> 00:06:52.498
And it's the combination or the average
time that it took for the website or

113
00:06:52.498 --> 00:06:55.187
for the page to respond
to user interaction,

114
00:06:55.187 --> 00:06:58.910
until that interaction actually
showed up on the page.

115
00:06:58.910 --> 00:07:02.462
So that includes processing
the click event, layout, paint, and

116
00:07:02.462 --> 00:07:04.010
also compositing.

117
00:07:04.010 --> 00:07:08.968
So at the very end, or when the user
leaves the page, you usually get the worst

118
00:07:08.968 --> 00:07:13.189
INP that it measured throughout
the entire lifespan of the page.

119
00:07:13.189 --> 00:07:15.820
But it kinda depends on the amount
of interaction you have.

120
00:07:15.820 --> 00:07:18.610
Sometimes you get the 98 percentile,
stuff like that.

121
00:07:19.860 --> 00:07:24.484
So that's Interaction to Next Paint,
which is pretty new, but a pretty good

122
00:07:24.484 --> 00:07:28.555
indication of just how responsive
it also looks through your user.

