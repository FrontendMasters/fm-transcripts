WEBVTT

1
00:00:00.000 --> 00:00:03.281
All right, which resources
will be allowed with following

2
00:00:03.281 --> 00:00:05.653
content Content Security Policy header?

3
00:00:05.653 --> 00:00:10.951
Is it A, a script like a local script,
B, fetching from api.website.com,

4
00:00:10.951 --> 00:00:14.901
a font face with fonts, or
like just loading local fonts?

5
00:00:14.901 --> 00:00:15.841
I'll just say it like that.

6
00:00:15.841 --> 00:00:19.209
A data URI image, an inline style,

7
00:00:19.209 --> 00:00:24.039
an iframe that embeds
from embed.example.com,

8
00:00:24.039 --> 00:00:28.646
a stylesheet from fonts.googleapis.com, or

9
00:00:28.646 --> 00:00:32.261
a video from videos.example.com?

10
00:00:32.261 --> 00:00:34.612
All right, so let's look at the answer.

11
00:00:34.612 --> 00:00:38.025
The answer is we can only
load our local scripts and

12
00:00:38.025 --> 00:00:41.447
the stylesheet from
fonts.googleapis dot com.

13
00:00:41.447 --> 00:00:44.481
So with a Content Security Policy header,

14
00:00:44.481 --> 00:00:48.620
we can control where our website
can load resources from.

15
00:00:48.620 --> 00:00:51.483
So we can do this for
scripts, images, fonts,

16
00:00:51.483 --> 00:00:55.134
stylesheets, video,
audio embedded content, iframes,

17
00:00:55.134 --> 00:00:59.587
web and service workers, fetch and
web sockets, and form submissions.

18
00:00:59.587 --> 00:01:03.607
Now by default here,
we say default-src none.

19
00:01:03.607 --> 00:01:05.601
So this basically sets everything to none.

20
00:01:05.601 --> 00:01:08.932
We can not load any resources,
not even local resources, nothing,

21
00:01:08.932 --> 00:01:10.086
we cannot do anything.

22
00:01:10.086 --> 00:01:13.190
But we can override this with,
in this case,

23
00:01:13.190 --> 00:01:18.187
a script-src, sorry about that,
which I set it to self, very subtle.

24
00:01:18.187 --> 00:01:24.250
So in this case, we're saying scripts
can only be loaded from the same origin,

25
00:01:24.250 --> 00:01:27.972
from our website,
not from any other location.

26
00:01:27.972 --> 00:01:33.378
Then we set script-src to self, so
we can load images from the same origin,

27
00:01:33.378 --> 00:01:36.257
but also from the example.com domain.

28
00:01:36.257 --> 00:01:38.698
We set the style-src only
to fonts.googleapis.com.

29
00:01:38.698 --> 00:01:42.887
So it can only fetch from
fonts.googleapis.com,

30
00:01:42.887 --> 00:01:47.178
not from your own fonts,
no, only from that domain.

31
00:01:47.178 --> 00:01:50.008
And then the style sheet, sorry,
it says CSS from there, and

32
00:01:50.008 --> 00:01:52.523
then the fonts from gstatic or
fonts.gstatic.com.

33
00:01:52.523 --> 00:01:56.192
So also not from self,
just from fonts.gstatic.

34
00:01:56.192 --> 00:02:01.758
So if we now compare that,
first we have, well, our local scripts.

35
00:02:01.758 --> 00:02:03.633
And this is allowed because
we have the script-src self.

36
00:02:03.633 --> 00:02:08.452
So we just said that it's okay to load
resources from the same origin or

37
00:02:08.452 --> 00:02:10.582
yeah, from your own website.

38
00:02:10.582 --> 00:02:11.112
That's totally fine.

39
00:02:11.112 --> 00:02:14.148
But then we make a fetch
request to api.website.com, but

40
00:02:14.148 --> 00:02:18.229
we have the connect src still to none
because we didn't specify any overrides.

41
00:02:18.229 --> 00:02:21.105
So it defaulted back to that default-src.

42
00:02:21.105 --> 00:02:25.021
So that'll be blocked by
the Content Security Policy.

43
00:02:25.021 --> 00:02:29.876
Same for font-face, we only set okay, you
can load fonts from fonts.gstatic.com but

44
00:02:29.876 --> 00:02:32.671
not from your own fonts,
not from your own domain.

45
00:02:32.671 --> 00:02:33.775
So this one gets blocked.

46
00:02:33.775 --> 00:02:38.329
For images, this is a bit deceiving cuz
you think, okay, it's a data image,

47
00:02:38.329 --> 00:02:39.854
is this self, it's not.

48
00:02:39.854 --> 00:02:43.179
So with image-src,
you need to then define the data.

49
00:02:43.179 --> 00:02:48.103
You need to add the data
attributes image-src to allow

50
00:02:48.103 --> 00:02:50.998
these base 64 images as well.

51
00:02:50.998 --> 00:02:55.235
So this one is blocked because we don't
have that data in the CSP policy.

52
00:02:55.235 --> 00:02:59.662
Then we have inline styles also not
allowed because we only specify that

53
00:02:59.662 --> 00:03:04.765
styles we come from fonts.googleapis.com,
and this includes inline styles.

54
00:03:04.765 --> 00:03:09.115
Then we have iframes, frame-src is none,
so we cannot embed anything.

55
00:03:09.115 --> 00:03:10.558
Finally, we have stylesheet.

56
00:03:10.558 --> 00:03:14.813
This is allowed because we're fetching
it from fonts.googleapis.com so

57
00:03:14.813 --> 00:03:16.211
that domain is allowed.

58
00:03:16.211 --> 00:03:20.185
And then lastly, we have video, which is
the media-src, we also set that to none.

59
00:03:20.185 --> 00:03:22.027
So this one will be blocked.

60
00:03:22.027 --> 00:03:24.522
Yeah, I'll just keep it on this one.

61
00:03:24.522 --> 00:03:29.122
So yeah, the Content Security Policy is
just a great way to really fully control

62
00:03:29.122 --> 00:03:32.213
where a website can load
resources from to prevent any

63
00:03:32.213 --> 00:03:35.871
attacks like cross-site scripting,
all that kind of stuff.

64
00:03:35.871 --> 00:03:40.030
Especially important when
you're working at the bank or

65
00:03:40.030 --> 00:03:43.069
anything that uses very sensitive data.

66
00:03:43.069 --> 00:03:47.574
Making sure that if you know exactly
where your resources are coming from,

67
00:03:47.574 --> 00:03:52.293
setting up a Content Security Policy,
either in like a metatag or as a response

68
00:03:52.293 --> 00:03:56.820
header is a great way to ensure that
your website is a bit more secure, yes.

