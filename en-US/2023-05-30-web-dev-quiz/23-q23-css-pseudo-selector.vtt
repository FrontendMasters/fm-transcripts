WEBVTT

1
00:00:00.000 --> 00:00:04.515
In which of the CSS pseudo selectors can
we use to only target the first item?

2
00:00:04.515 --> 00:00:07.798
So this item one, so not to three or four.

3
00:00:07.798 --> 00:00:12.725
And I realized that this is like invalid
list item, I guess cuz you all should have

4
00:00:12.725 --> 00:00:15.566
been wrapped in a link
that I forgot to do that.

5
00:00:15.566 --> 00:00:18.992
So we just have to live with this.

6
00:00:18.992 --> 00:00:23.344
It'll work, though, HTML will render it.

7
00:00:23.344 --> 00:00:25.162
&gt;&gt; HTML always works.

8
00:00:25.162 --> 00:00:25.913
&gt;&gt; All right, annoyingly.

9
00:00:29.456 --> 00:00:31.760
So the correct answer here is A and C.

10
00:00:33.720 --> 00:00:40.359
So, first, we have the ul:first-child
pseudo selector or pseudo-class.

11
00:00:40.359 --> 00:00:41.051
With this,

12
00:00:41.051 --> 00:00:44.930
we can get the first ul elements
among a group of sibling elements.

13
00:00:44.930 --> 00:00:49.074
So in this case, it's just the first
ul within, I guess, the root,

14
00:00:49.074 --> 00:00:50.865
which in this case is the div.

15
00:00:50.865 --> 00:00:53.020
So then we target that ul.

16
00:00:53.020 --> 00:00:57.881
And then we use a child combinator to
select the list item that's a direct

17
00:00:57.881 --> 00:00:59.005
child of the ul.

18
00:00:59.005 --> 00:00:59.859
So in this case,

19
00:00:59.859 --> 00:01:03.690
that targets the very first list item
cuz there are no other list items.

20
00:01:03.690 --> 00:01:06.481
So this one's right.

21
00:01:06.481 --> 00:01:07.490
Yeah, towards that one.

22
00:01:09.060 --> 00:01:11.991
Then we have the ul:first-child again.

23
00:01:11.991 --> 00:01:14.167
So we again target that first ul, but

24
00:01:14.167 --> 00:01:17.900
now we're using the adjacent
sibling combinator.

25
00:01:17.900 --> 00:01:20.540
And this selector matches
the second element.

26
00:01:20.540 --> 00:01:25.046
So the li only if it's like immediately
follows the first element on

27
00:01:25.046 --> 00:01:26.160
the same level.

28
00:01:26.160 --> 00:01:27.646
It's like an adjacent sibling.

29
00:01:27.646 --> 00:01:29.986
So this would have worked if
we didn't have that ul and

30
00:01:29.986 --> 00:01:33.120
we had an li right next to that ul,
then this would have been fine.

31
00:01:33.120 --> 00:01:34.587
But we don't have that,
so this doesn't work.

32
00:01:34.587 --> 00:01:41.240
[LAUGH] Yeah, so now C also works.

33
00:01:41.240 --> 00:01:43.688
So we again have the ul:
first-child to target the first ul.

34
00:01:43.688 --> 00:01:48.633
And then we also have the li:first-child
to target the very first-child

35
00:01:48.633 --> 00:01:52.630
that is an li within the ul,
that's the first-child.

36
00:01:52.630 --> 00:01:57.394
Sounds so weird just saying this out
loud with those CSS selectors, but yeah.

37
00:01:57.394 --> 00:02:01.920
So only get the first li,
the first-child that's an li of that ul.

38
00:02:04.090 --> 00:02:10.992
Now we have the ul first-of-type and then
the li first-of-type, which doesn't work.

39
00:02:10.992 --> 00:02:13.999
So essentially what happens is we
again get the right ul with that ul

40
00:02:13.999 --> 00:02:14.920
first-of-type.

41
00:02:14.920 --> 00:02:18.219
This is the first-of-type within that
container with sibling elements.

42
00:02:18.219 --> 00:02:20.958
But then because we say li first-of-type,

43
00:02:20.958 --> 00:02:26.190
it also targets the first li within
the ul that's rendered within that ul.

44
00:02:26.190 --> 00:02:29.982
So it also targets too.

45
00:02:29.982 --> 00:02:35.033
Yeah, so this happens because the li
first-of-type gets applied to all

46
00:02:35.033 --> 00:02:40.340
the children and that li is still the
first type within the direct child of ul.

47
00:02:40.340 --> 00:02:45.499
That sounds super confusing but
yeah, that is the way it is.

48
00:02:45.499 --> 00:02:47.644
And lastly, we do the same thing, but

49
00:02:47.644 --> 00:02:50.270
again with the adjacent
sibling combinator.

50
00:02:50.270 --> 00:02:53.160
So does this won't work cuz we don't
have an li on the same level as ul.

51
00:02:53.160 --> 00:02:55.140
It doesn't have any li with the siblings.

52
00:02:55.140 --> 00:02:59.907
It's also not what we're looking for
cuz that one li is not the sibling.

53
00:02:59.907 --> 00:03:00.860
So that won't work.

