WEBVTT

1
00:00:00.083 --> 00:00:04.315
Question number two,
which statements are true?

2
00:00:04.315 --> 00:00:09.590
A, the render tree contains all the
elements from the DOM and CSSOM combined.

3
00:00:09.590 --> 00:00:13.695
B, compositing is the process of
separating layers based on z-index,

4
00:00:13.695 --> 00:00:17.813
which are then combined to form
the final image displayed on the screen.

5
00:00:17.813 --> 00:00:21.128
C is the layout process assigns colors and

6
00:00:21.128 --> 00:00:25.021
images to the visual
elements in the reder tree.

7
00:00:25.021 --> 00:00:29.248
D, the compositing process happens
on the compositor thread, or E,

8
00:00:29.248 --> 00:00:31.912
elements that aren't visible on the page.

9
00:00:31.912 --> 00:00:35.822
So for example with display hidden,
are not part of the dom tree.

10
00:00:39.537 --> 00:00:41.282
Let's go to the answer.

11
00:00:41.282 --> 00:00:43.958
So the only right answer here is D.

12
00:00:43.958 --> 00:00:47.670
The compositing process happens
on the compositor thread.

13
00:00:47.670 --> 00:00:51.580
So this question is all about
the rendering pipeline.

14
00:00:51.580 --> 00:00:55.471
Because before the browser
is able to render anything,

15
00:00:55.471 --> 00:00:59.193
it has to first parse the HTML and
generate a DOM tree,

16
00:00:59.193 --> 00:01:04.020
which represents the static
markup as a tree data structure.

17
00:01:04.020 --> 00:01:08.561
And it does the same for the CSS, but
that one representing the styles and

18
00:01:08.561 --> 00:01:10.587
rules apply to every elements.

19
00:01:10.587 --> 00:01:15.753
And after doing it, kind of combines
both trees, and it only includes like

20
00:01:15.753 --> 00:01:20.837
the visual elements the elements that
will actually see on the screen into

21
00:01:20.837 --> 00:01:25.936
a render tree, and this tree contains
both the styles as well as the HTML.

22
00:01:25.936 --> 00:01:29.147
It doesn't include, again,
any elements that aren't visible,

23
00:01:29.147 --> 00:01:31.880
not the head elements or
anything with display hidden.

24
00:01:31.880 --> 00:01:34.310
This is just what will
eventually get rendered.

25
00:01:34.310 --> 00:01:38.020
Based on this tree, the next phase
happens which is the layout process.

26
00:01:38.020 --> 00:01:41.718
So in that case,
it calculates the position, the size, and

27
00:01:41.718 --> 00:01:47.160
the geometry of every element that
will eventually render on the screen.

28
00:01:47.160 --> 00:01:52.082
And it also takes into account like
viewport element dimensions all

29
00:01:52.082 --> 00:01:53.210
those things.

30
00:01:53.210 --> 00:01:56.460
Then the next phase is the painting phase,
right,

31
00:01:56.460 --> 00:02:00.543
when it actually creates a visual
representation of a DOM tree on

32
00:02:00.543 --> 00:02:05.306
the screen so it's actually when it
starts to render those pixels, yeah,

33
00:02:05.306 --> 00:02:09.718
the entire rasterization process
happens during this paints method.

34
00:02:09.718 --> 00:02:13.253
And this also takes into
consideration the screen resolution,

35
00:02:13.253 --> 00:02:15.810
everything that can be
painted on the screen.

36
00:02:16.900 --> 00:02:20.520
Now after paints is the compositing phase.

37
00:02:20.520 --> 00:02:24.699
Because as the browser is painting it,
it's actually doing it on a separate layer

38
00:02:24.699 --> 00:02:27.302
sometimes depending on
the styles you're using,

39
00:02:27.302 --> 00:02:30.490
we'll talk about that in
another question as well.

40
00:02:30.490 --> 00:02:35.080
But then at the very end, it actually
merges all those layouts together into one

41
00:02:35.080 --> 00:02:39.720
final bitmap, one final image that
eventually gets rendered on the screen.

42
00:02:39.720 --> 00:02:41.865
So when we go back to those statements,

43
00:02:41.865 --> 00:02:46.164
the render tree contains all the elements
from the DOM and the CSSOM combined.

44
00:02:46.164 --> 00:02:48.000
That's Not true.

45
00:02:48.000 --> 00:02:51.300
It's not all the elements,
it's only the visual elements.

46
00:02:51.300 --> 00:02:54.277
So the head elements as I said,
the display hidden,

47
00:02:54.277 --> 00:02:56.790
they won't be included in the render tree.

48
00:02:56.790 --> 00:03:01.629
&gt;&gt; Is the combination of DOM and
CSSOM called the render tree?

49
00:03:01.629 --> 00:03:02.970
Then
&gt;&gt; Yeah, that's the render tree.

50
00:03:02.970 --> 00:03:03.972
Sorry if I didn't mention that.

51
00:03:03.972 --> 00:03:05.800
It's called the render tree.

52
00:03:05.800 --> 00:03:08.280
Yeah.
And then those are kind of special notes.

53
00:03:08.280 --> 00:03:11.157
And all of these notes
have internal methods that

54
00:03:11.157 --> 00:03:15.015
eventually the drawer in Chromium,
Skia can use to invoke that,

55
00:03:15.015 --> 00:03:18.650
and then it'll actually paint
something on the screen.

56
00:03:18.650 --> 00:03:21.594
But then be like compositing is a process
of separating layers based on z-index,

57
00:03:21.594 --> 00:03:23.353
which are then combined
to form the final image.

58
00:03:23.353 --> 00:03:23.939
That's not true.

59
00:03:23.939 --> 00:03:27.045
Compositing is just a process of
combining those layers together.

60
00:03:27.045 --> 00:03:32.778
And the z-index plays a role in kind
of the stacking order of these layers,

61
00:03:32.778 --> 00:03:36.970
but it's not separating
anything based on it itself.

62
00:03:38.070 --> 00:03:40.149
And then the layout
process assigns colors and

63
00:03:40.149 --> 00:03:42.770
images to the visual
elements in the render tree.

64
00:03:42.770 --> 00:03:46.259
It's not the layout process,
it's a paint process.

65
00:03:46.259 --> 00:03:50.042
And the E falls elements that aren't
visible, for example display hidden,

66
00:03:50.042 --> 00:03:51.330
aren't part of DOM tree.

67
00:03:51.330 --> 00:03:54.570
They are part of the DOM tree,
just not the render tree.

68
00:03:55.840 --> 00:03:58.301
So the compositing process
happens on the compositor thread.

69
00:03:58.301 --> 00:04:02.764
And this is like a separate thread in your
GPU that your browser uses to kind of

70
00:04:02.764 --> 00:04:06.330
offload that pretty expensive
compositing process.

71
00:04:06.330 --> 00:04:09.737
So it doesn't all happen
on your own device.

72
00:04:09.737 --> 00:04:14.600
This is much faster, allows for much
smoother animations, all the good stuff.

