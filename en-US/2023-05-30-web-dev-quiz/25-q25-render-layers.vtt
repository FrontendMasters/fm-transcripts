WEBVTT

1
00:00:00.000 --> 00:00:04.179
Question 25, which of the following
properties causes the element to be

2
00:00:04.179 --> 00:00:06.113
promoted to its own render layer?

3
00:00:06.113 --> 00:00:10.690
Is it z-index: 1, translate3d,
will-change: transform,

4
00:00:10.690 --> 00:00:16.085
transform: rotate(45deg) position: fixed,
or position: absolute.

5
00:00:18.961 --> 00:00:21.597
The right answers here is B, translate3d.

6
00:00:21.597 --> 00:00:26.960
It's also C, will-change: transform, D,
transform: rotate, and E, position: fixed.

7
00:00:26.960 --> 00:00:29.153
So first, let's just talk about
those rendering layers again.

8
00:00:29.153 --> 00:00:33.181
So let's say that we just have this very
simple page with those four elements.

9
00:00:33.181 --> 00:00:39.066
And we want to animate those
elements to the middle.

10
00:00:39.066 --> 00:00:43.336
Now, what we can do is, with certain GPU
accelerated properties, we can essentially

11
00:00:43.336 --> 00:00:46.857
create those own layers for
these elements that should move like that.

12
00:00:46.857 --> 00:00:50.854
So now they're not on the same rendering
layer anymore with the yellow in,

13
00:00:50.854 --> 00:00:52.702
blue one there on their own layer.

14
00:00:52.702 --> 00:00:56.904
So now they can just when they move it's
just the layers that move around, it's not

15
00:00:56.904 --> 00:01:00.990
the actual elements itself that as as we
mentioned before it's with the pixels in

16
00:01:00.990 --> 00:01:04.981
the layout that it has recalculate every
time it's just a smooth transition.

17
00:01:04.981 --> 00:01:09.250
This happens on the GPU, so your GPU is
made for animation, stuff like that, or

18
00:01:09.250 --> 00:01:10.737
it's really good at that.

19
00:01:10.737 --> 00:01:14.452
So, this just enables that
smoothness to your website.

20
00:01:14.452 --> 00:01:19.054
There are certain, [LAUGH] okay,
weird transition, but yeah.

21
00:01:19.054 --> 00:01:22.981
There are certain elements that will
always cause the browser to create

22
00:01:22.981 --> 00:01:24.098
a rendering layer.

23
00:01:24.098 --> 00:01:24.732
These are some of them.

24
00:01:24.732 --> 00:01:29.636
So will-change: transform, position:
fixed, opacity, filter, transform.

25
00:01:29.636 --> 00:01:34.644
There is also more than this, you also
have translate X, Y, 3D stuff we just saw,

26
00:01:34.644 --> 00:01:39.608
backface-visibility, hidden,
will-change: opacity, a video elements.

27
00:01:39.608 --> 00:01:41.390
I believe it's all video elements now.

28
00:01:41.390 --> 00:01:45.845
Initially it was just with accelerated
decoding, but I'm not sure,

29
00:01:45.845 --> 00:01:50.314
I think it's all video elements now,
and then we have a WebGL canvas.

30
00:01:50.314 --> 00:01:54.248
So, WebGL has all these 3D stuff,
it needs to be accelerated.

31
00:01:54.248 --> 00:01:57.661
And then also rotations.

32
00:01:57.661 --> 00:01:59.973
So rotate y.

33
00:01:59.973 --> 00:02:04.687
Maybe I can go back to
a front-end master's website.

34
00:02:04.687 --> 00:02:06.529
Let's see,
probably now it just won't happen.

35
00:02:06.529 --> 00:02:10.202
But let's say that,
I don't know, we just wanna,

36
00:02:10.202 --> 00:02:14.796
say that this wrap here should
have a will-change: transform,

37
00:02:14.796 --> 00:02:18.992
which doesn't make sense cuz
we're not transforming it.

38
00:02:18.992 --> 00:02:22.947
I cannot type when I'm live.

39
00:02:22.947 --> 00:02:25.276
Where is the layers?

40
00:02:25.276 --> 00:02:26.773
Did I remove layers somehow?

41
00:02:26.773 --> 00:02:29.215
Lots and more tools, layers.

42
00:02:29.215 --> 00:02:31.712
Let's see if it created something for
that.

43
00:02:31.712 --> 00:02:32.415
Yeah, here.
So

44
00:02:32.415 --> 00:02:38.225
this is like the element we just
promote it to its own layer.

45
00:02:38.225 --> 00:02:40.230
And you can see for
the compositing reasons,

46
00:02:40.230 --> 00:02:42.782
this has a will-change:
transform compositing hint.

47
00:02:42.782 --> 00:02:45.955
So now, it doesn't make sense
to have this in your own layer,

48
00:02:45.955 --> 00:02:48.641
cuz we're not animating it or
anything, but yeah,

49
00:02:48.641 --> 00:02:52.625
this is now its own little layer and
it uses almost three megabytes of memory.

50
00:02:52.625 --> 00:02:55.278
So, again,
it doesn't make sense to do it here but

51
00:02:55.278 --> 00:02:58.637
then you can see how these
properties affect rendering layers.

52
00:03:01.185 --> 00:03:02.456
Cool, makes sense?

53
00:03:02.456 --> 00:03:06.925
You just kind of gotta I guess not really
remember which properties cause a layer to

54
00:03:06.925 --> 00:03:07.896
be promoted, but

55
00:03:07.896 --> 00:03:12.431
cuz often it's pretty obvious which ones
do for example, with position: fixed it

56
00:03:12.431 --> 00:03:16.357
does because it will always kind of
stay in the same place on the screen.

57
00:03:16.357 --> 00:03:21.102
And otherwise you're scrolling animation
will be super janky, cuz on every scroll,

58
00:03:21.102 --> 00:03:24.352
your page would have to read
layouts to repaint every time,

59
00:03:24.352 --> 00:03:26.704
cuz it would having it
on a separate layer.

60
00:03:26.704 --> 00:03:30.382
This allows these two layers
to smoothly kind of move.

61
00:03:30.382 --> 00:03:34.280
[LAUGH] This isn't weird, but
on top of each other, so yeah.

