WEBVTT

1
00:00:00.515 --> 00:00:02.516
Okay, Question 3.

2
00:00:02.516 --> 00:00:04.430
Fill in the correct terms.

3
00:00:04.430 --> 00:00:09.156
So we have the Recursive DNS Resolver,
the Root Name Server, the IP Address,

4
00:00:09.156 --> 00:00:13.468
the Top Level Domain Name Server,
and the Authoritative Name Server.

5
00:00:13.468 --> 00:00:16.977
So I kind of put them where they
should be when you read that text.

6
00:00:16.977 --> 00:00:18.190
I don't know if that makes sense.

7
00:00:22.472 --> 00:00:26.301
All right,
let's see where everything should go.

8
00:00:26.301 --> 00:00:30.622
So the browser first sends a request to A,
the Recursive DNS Resolver,

9
00:00:30.622 --> 00:00:34.306
then the Recursive DNS Resolver
queries a Root Name Server.

10
00:00:34.306 --> 00:00:37.096
The Root Name Server then
responds with the TLD or

11
00:00:37.096 --> 00:00:39.692
Top Level Domain Name Server's IP address.

12
00:00:39.692 --> 00:00:43.084
The Recursive DNS Resolver
queries the TLD Name Server.

13
00:00:43.084 --> 00:00:46.876
And then the TLD Name Server responds
with the Authoritative Name Server's IP

14
00:00:46.876 --> 00:00:47.801
address, [LAUGH].

15
00:00:47.801 --> 00:00:51.241
Recursive DNS Resolver requeries
the Authoritative Name Server.

16
00:00:51.241 --> 00:00:56.299
And finally, the Authoritative Name Server
responds with the website's IP Address.

17
00:00:56.299 --> 00:00:57.856
Okay, so
what are we even talking about here?

18
00:00:57.856 --> 00:01:02.483
So we're talking about DNS because,
before a browser knows where to

19
00:01:02.483 --> 00:01:06.790
actually fetch your data from,
it cannot just know the domain,

20
00:01:06.790 --> 00:01:11.772
it needs to get an IP address, and
this is the entire DNS resolving story.

21
00:01:11.772 --> 00:01:15.186
So first, your browser sends
a request to your DNS resolver.

22
00:01:15.186 --> 00:01:20.641
This is usually provided with your ISP,
or you can also use the Google DNS,

23
00:01:20.641 --> 00:01:25.240
CloudFlare DNS to say hey,
I need to go to www.website.com.

24
00:01:25.240 --> 00:01:28.166
What's the IP for this so
I can make a request to that server?

25
00:01:28.166 --> 00:01:31.348
Your DNS Resolver,
that first query is a Root Name Server.

26
00:01:31.348 --> 00:01:35.837
There are only 13 kind of IPs for
Root Name Servers in the world.

27
00:01:35.837 --> 00:01:40.306
They all contain IP addresses to the next
DNS server, which we talked about earlier,

28
00:01:40.306 --> 00:01:42.181
so top-level domain name server.

29
00:01:42.181 --> 00:01:46.232
But a common kind of misconception here
is that there are only 13 physical

30
00:01:46.232 --> 00:01:49.845
servers in the world for
Root Name Servers, that's not the case.

31
00:01:49.845 --> 00:01:54.451
They use something called anycast routing,
which essentially allows you to have only

32
00:01:54.451 --> 00:01:57.681
13 IP addresses, but
they can point to multiple servers.

33
00:01:57.681 --> 00:02:00.911
One IP address can point to multiple
servers just to still make sure

34
00:02:00.911 --> 00:02:02.988
that the entirety in this process is fast,

35
00:02:02.988 --> 00:02:06.234
and you don't have to make a request
to the other side of the world.

36
00:02:06.234 --> 00:02:10.688
But anyway, so the Root Name Servers,
they contain the IP address for

37
00:02:10.688 --> 00:02:16.363
the top-level domain server for the TLDs
like .com, .net, .nl, all those things.

38
00:02:16.363 --> 00:02:20.118
So this was like, all right, you need .com,
that's fine, here's the IP address for

39
00:02:20.118 --> 00:02:21.258
that top-level domain.

40
00:02:21.258 --> 00:02:24.952
So based on that IP address,
the DNS Resolver is now like hey,

41
00:02:24.952 --> 00:02:26.666
I need it for website.com.

42
00:02:26.666 --> 00:02:30.167
Because the top-level domain
server has the IP addresses for

43
00:02:30.167 --> 00:02:32.187
the Authoritative Name Servers for

44
00:02:32.187 --> 00:02:36.103
all the domains that ends with
a certain top-level domain, right?

45
00:02:36.103 --> 00:02:38.144
So it's like, okay,
I got google.com, twitter.com.

46
00:02:38.144 --> 00:02:39.330
I also have website.com.

47
00:02:39.330 --> 00:02:41.963
Perfect, this is the IP address.

48
00:02:41.963 --> 00:02:42.870
Oop, and it returns that.

49
00:02:42.870 --> 00:02:45.523
So that was the IP address
that just [LAUGH] returned.

50
00:02:45.523 --> 00:02:48.771
And then finally,
we have the Authoritative Name Server.

51
00:02:48.771 --> 00:02:55.338
And this name server contains
the actual DNS records for your domain.

52
00:02:55.338 --> 00:03:02.275
So it has the A name or A record,
triple A, all that stuff.

53
00:03:02.275 --> 00:03:07.224
So it also has, okay, for
this domain, it's this IP, so

54
00:03:07.224 --> 00:03:10.658
this is kinda your final answer domain.

55
00:03:10.658 --> 00:03:13.892
So it's like, okay, for www.website.com,
this is your IP address.

56
00:03:13.892 --> 00:03:17.856
And this IP address corresponds
with your web server, right?

57
00:03:17.856 --> 00:03:20.706
So finally, this is now your
server based on that IP address.

58
00:03:20.706 --> 00:03:25.230
So it can start the entire TCP process,
create a TCP connection, and

59
00:03:25.230 --> 00:03:28.671
finally, make your request
to fetch the resource.

60
00:03:28.671 --> 00:03:33.557
So this proces called DNS Resolving
happens every time that

61
00:03:33.557 --> 00:03:38.649
you make a request to a third party or
a kind of cross-origin.

62
00:03:38.649 --> 00:03:43.387
And normally your DNS Recursive Resolver
also has a cache, so you don't have to

63
00:03:43.387 --> 00:03:47.577
have this process every time for
websites that you visit frequently.

64
00:03:47.577 --> 00:03:51.078
But yeah, in some cases,
you still have to do this pretty often.

65
00:03:51.078 --> 00:03:53.406
It kinda depends on the TTL,

66
00:03:53.406 --> 00:03:58.168
the time to live that servers have for
their DNS records.

67
00:03:58.168 --> 00:04:01.794
Yeah.
&gt;&gt; TLS connection is also made for

68
00:04:01.794 --> 00:04:03.565
HTTP requests?

69
00:04:03.565 --> 00:04:07.152
&gt;&gt; Yeah, TLS isn't for
HTTP, TCP is for HTTP.

70
00:04:07.152 --> 00:04:09.137
But TLS is like the secure.

71
00:04:09.137 --> 00:04:10.979
We'll also have a question on that later,
by the way.

72
00:04:10.979 --> 00:04:12.255
That's just for HTTPS.

73
00:04:12.255 --> 00:04:15.125
That's the entire client hello server,

74
00:04:15.125 --> 00:04:20.549
hello to create that encrypted connection
between the client and the server.

75
00:04:20.549 --> 00:04:24.083
But you will always need a TCP
connection unless you use HTTP3,

76
00:04:24.083 --> 00:04:26.187
which we'll also have a question on.

77
00:04:26.187 --> 00:04:27.481
Then you don't need that.

78
00:04:27.481 --> 00:04:30.044
But, yeah, if that made any sense.

79
00:04:30.044 --> 00:04:33.402
So, yeah, the TCP connection is just that
established connection between the client

80
00:04:33.402 --> 00:04:36.031
and the server where they can
actually send HTTP requests, right?

81
00:04:36.031 --> 00:04:40.670
It's kind of like the transport layer for
your requests.

