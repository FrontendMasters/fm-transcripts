WEBVTT

1
00:00:00.272 --> 00:00:02.591
All right, next question,
what's the output?

2
00:00:02.591 --> 00:00:06.989
Is it A, name Jane, and
the street is 101 Main St?

3
00:00:06.989 --> 00:00:10.769
Is it name Jane and
the address is 102 Main St?

4
00:00:10.769 --> 00:00:14.932
Is it name Sarah with 101 Main St,
or Sarah with 102 Main St?

5
00:00:18.616 --> 00:00:24.240
All right, the right answer is B,
it's Jane with the 102 Main St.

6
00:00:24.240 --> 00:00:28.662
So what we're doing here is we first
create a member object, we have Jane, and

7
00:00:28.662 --> 00:00:32.763
within that object, we have another
object named the address, right?

8
00:00:32.763 --> 00:00:35.495
So first we create that object
in the heap of Jane, and

9
00:00:35.495 --> 00:00:39.890
then the address is another reference to
another object the street, the address object.

10
00:00:39.890 --> 00:00:43.218
Then we create a new object
using the spread operator.

11
00:00:43.218 --> 00:00:44.086
We create member2.

12
00:00:44.086 --> 00:00:48.646
Now, one thing to remember about
the spread operator is that it only

13
00:00:48.646 --> 00:00:51.286
enables shallowing copying objects,

14
00:00:51.286 --> 00:00:55.448
which means that the top-level
properties are duplicated.

15
00:00:55.448 --> 00:01:00.696
So in this case, name Jane, but
the rest holds like the address

16
00:01:00.696 --> 00:01:05.167
is actually a direct reference
to the copied object.

17
00:01:05.167 --> 00:01:07.640
So that's not copied by value,
it's copied by reference.

18
00:01:07.640 --> 00:01:13.403
So member2.address points to the same
object in memory as member.address.

19
00:01:13.403 --> 00:01:17.486
So now when we change
member.address.St to 102 Main St,

20
00:01:17.486 --> 00:01:22.440
It changes that on the object that is
shared with both member and member2.

21
00:01:22.440 --> 00:01:25.515
Now when we just change
the member.name to Sarah,

22
00:01:25.515 --> 00:01:28.961
that change is only reflected
within the member object.

23
00:01:28.961 --> 00:01:32.775
So when we now log member2, you will see
Jane because that name hasn't changed.

24
00:01:32.775 --> 00:01:38.318
There's no reference to
member.name from member2.

25
00:01:38.318 --> 00:01:42.141
But the address has changed because
that's referring to the same object as

26
00:01:42.141 --> 00:01:44.880
the member,
which is where we updated that value.

27
00:01:44.880 --> 00:01:48.125
So you'll see Jane and 102 Main St.

