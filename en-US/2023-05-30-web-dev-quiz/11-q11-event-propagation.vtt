WEBVTT

1
00:00:00.000 --> 00:00:01.115
Okay, ready for the next question?

2
00:00:01.115 --> 00:00:05.494
What gets logged when clicking button?

3
00:00:05.494 --> 00:00:09.213
I'm not gonna say all the, cuz that
would just be confusing, but is it A, B,

4
00:00:09.213 --> 00:00:09.853
C, D, or E?

5
00:00:14.530 --> 00:00:16.620
All right, so let's look at the answer.

6
00:00:16.620 --> 00:00:17.854
So the right one is E.

7
00:00:17.854 --> 00:00:19.320
It's A, C, G, F, D, E.

8
00:00:21.110 --> 00:00:25.911
So when we talk about events propagation,
there's three phases, right?

9
00:00:25.911 --> 00:00:29.730
First event goes down to the target
element, this phase is called capturing.

10
00:00:29.730 --> 00:00:32.625
And once it's actually at the element,
it's called targeting,

11
00:00:32.625 --> 00:00:35.135
like it's finally at the target
that it tries to capture.

12
00:00:35.135 --> 00:00:38.760
So in this case it's the button
cuz we clicked the button.

13
00:00:38.760 --> 00:00:44.682
And afterward, it goes back up to all
its ancestors which is called bubbling.

14
00:00:44.682 --> 00:00:47.948
Now whenever we register an event
listener, we can actually tell or

15
00:00:47.948 --> 00:00:51.844
we can pass a second argument like true or
false to say whether it should run during

16
00:00:51.844 --> 00:00:54.341
the capturing phase or
during the bubbling phase.

17
00:00:54.341 --> 00:00:57.669
And by default, it always runs
during the bubbling phase, so

18
00:00:57.669 --> 00:01:00.485
if we don't pass a value it
runs when it goes back up,

19
00:01:00.485 --> 00:01:04.212
otherwise it runs during the capturing
phase, so when it goes down.

20
00:01:04.212 --> 00:01:08.650
So when we pass true it runs
during the capturing phase.

21
00:01:08.650 --> 00:01:13.014
So in this case, you can see that we're
logging A during the capturing cuz we had

22
00:01:13.014 --> 00:01:16.681
passed true, then C also because
we passed true, G, same thing.

23
00:01:16.681 --> 00:01:21.147
Then we go back to F, that's the one on
the button where we didn't pass anything,

24
00:01:21.147 --> 00:01:22.920
so it runs during the bubbling.

25
00:01:22.920 --> 00:01:26.264
And then we have the longer one with D,
and also stopPropagation,

26
00:01:26.264 --> 00:01:29.204
which we'll talk more about that later,
and E and then B.

27
00:01:29.204 --> 00:01:33.067
So the event first goes all
the way down to all the elements,

28
00:01:33.067 --> 00:01:37.330
finds console.log("A"),
logs A, C, logs C, G, logs G.

29
00:01:39.250 --> 00:01:46.040
Finally, it's at the targeting phase,
goes back to bubbling, so it logs F.

30
00:01:46.040 --> 00:01:48.790
Hello, yeah, there F, and
then it goes to this one.

31
00:01:48.790 --> 00:01:51.607
So first it logs D cuz there's
a console.log ("D"), but

32
00:01:51.607 --> 00:01:53.404
then you see the E.stopPropagation.

33
00:01:53.404 --> 00:01:57.004
And what this method does,
is it essentially says to the event,

34
00:01:57.004 --> 00:02:01.538
please don't propagate further up or
down depending on what phase it's in, but

35
00:02:01.538 --> 00:02:05.980
still execute all the event handlers
that are on the current elements.

36
00:02:05.980 --> 00:02:09.192
So it won't just stop
executing right away.

37
00:02:09.192 --> 00:02:12.822
When it gets invoked, it will still
execute all the event listeners on

38
00:02:12.822 --> 00:02:14.770
the current element that it's at.

39
00:02:14.770 --> 00:02:17.205
So right now we just have one,
but if it had multiple,

40
00:02:17.205 --> 00:02:19.007
it would have also run those multiple.

41
00:02:19.007 --> 00:02:22.460
It just won't go to the upper div,
to the outer div again.

42
00:02:23.580 --> 00:02:27.746
So yeah, it will still log E because it
doesn't stop executing right away, it will

43
00:02:27.746 --> 00:02:31.867
still just go execute the rest of the
handlers, but yeah, it doesn't go back up.

44
00:02:31.867 --> 00:02:34.422
And then there's, I don't know why E?

45
00:02:34.422 --> 00:02:35.834
There, there is E.

46
00:02:35.834 --> 00:02:39.890
There's also the stop immediate
propagation, I believe.

47
00:02:39.890 --> 00:02:41.908
And in that case, we're telling it,

48
00:02:41.908 --> 00:02:44.747
if the current events had
multiple event listeners,

49
00:02:44.747 --> 00:02:48.987
or the current elements have multiple
event listeners, do not execute those.

50
00:02:48.987 --> 00:02:52.322
So with stopPropagation, we're still
saying like you can still execute

51
00:02:52.322 --> 00:02:55.170
the event listeners with
stop immediate propagation.

52
00:02:55.170 --> 00:02:57.785
We're telling it, no,
also don't execute those,

53
00:02:57.785 --> 00:03:00.643
just stop propagating even to
the other event listeners.

54
00:03:00.643 --> 00:03:03.810
Yeah, hope that made sense?

55
00:03:03.810 --> 00:03:08.094
So during the capturing phase, it might
make sense to add an event listener if you

56
00:03:08.094 --> 00:03:11.319
want to, maybe,
first ensure that it should even go there.

57
00:03:11.319 --> 00:03:14.896
I don't know,
you can just run checks to say like, okay,

58
00:03:14.896 --> 00:03:18.290
does it make sense if
the event target is button?

59
00:03:18.290 --> 00:03:21.580
Maybe based on certain conditions,
should it really go there or not?

60
00:03:21.580 --> 00:03:25.690
And if that's not the case,
you can just run the stopPropagation.

61
00:03:25.690 --> 00:03:30.310
And during the bubbling phase, we actually
have access to the targets value,

62
00:03:30.310 --> 00:03:33.251
which we don't have during
the capturing phase.

63
00:03:33.251 --> 00:03:38.012
So maybe in that case during bubbling we
want to, I don't know, have some condition

64
00:03:38.012 --> 00:03:42.280
based on the target value in which
case you have to propagate or not.

65
00:03:42.280 --> 00:03:44.030
Yeah, I don't know,
it just gives you the flexibility.

66
00:03:44.030 --> 00:03:46.960
It's different use cases, I guess.

67
00:03:46.960 --> 00:03:48.176
Yeah, a question?

68
00:03:48.176 --> 00:03:51.040
&gt;&gt; What was the definition for
targeting again?

69
00:03:51.040 --> 00:03:55.341
&gt;&gt; Targeting is more when it finds the,
like nothing really happens,

70
00:03:55.341 --> 00:03:59.275
it's just when it finds the element
that the event target is.

71
00:03:59.275 --> 00:04:02.260
So in this case, it's button,
cuz we clicked the button.

72
00:04:02.260 --> 00:04:03.709
So targeting, nothing really happens.

73
00:04:03.709 --> 00:04:06.930
I don't think there are any
listeners you can add to targeting.

74
00:04:06.930 --> 00:04:10.028
It's just kind of when
the event gets its value,

75
00:04:10.028 --> 00:04:14.347
like this is when it finds the element
that it was supposed to go for.

