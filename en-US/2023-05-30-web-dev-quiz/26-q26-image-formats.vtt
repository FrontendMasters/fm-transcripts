WEBVTT

1
00:00:00.000 --> 00:00:02.165
All right, so match the image
formats to the descriptions.

2
00:00:02.165 --> 00:00:06.510
We have JPEG, PNG, or Ping, apparently,
it's pronounced ping, I never knew that.

3
00:00:06.510 --> 00:00:09.685
We have WebP and AVIF, and
then we have both lossy and

4
00:00:09.685 --> 00:00:14.177
lossless compression, supports HDR and
WCG, supports transparency.

5
00:00:14.177 --> 00:00:17.256
And we have both lossy and lossless
compression, supports transparency,

6
00:00:17.256 --> 00:00:19.280
supports progressive rendering.

7
00:00:19.280 --> 00:00:21.740
Our 3 is lossless compression,
high quality,

8
00:00:21.740 --> 00:00:24.202
supports transparency
,and larger file size.

9
00:00:24.202 --> 00:00:27.450
Or 4, lossy compression,
supports progressive rendering.

10
00:00:28.830 --> 00:00:33.511
It's not really a description,
it's more like characteristics, I guess.

11
00:00:38.590 --> 00:00:41.500
All right, so we have A,
JPEG for lossy compression,

12
00:00:41.500 --> 00:00:43.412
supports progressive rendering.

13
00:00:43.412 --> 00:00:47.236
We have PNG or ping for
lossless compression, high quality, and

14
00:00:47.236 --> 00:00:50.670
supports transparency,
also larger file size.

15
00:00:50.670 --> 00:00:53.720
Then we have WebP for both lossy and
lossless compression,

16
00:00:53.720 --> 00:00:57.084
supports transparency, and
supports progressive rendering.

17
00:00:57.084 --> 00:01:00.634
And AVIF for both lossy and
lossless compression, supports HDR and

18
00:01:00.634 --> 00:01:03.200
WCG, and supports transparency.

19
00:01:03.200 --> 00:01:08.615
So first, when talking about JPEG,
ignore that animation.

20
00:01:08.615 --> 00:01:12.837
But yeah, with lossy compression,
this is a method for data compression

21
00:01:12.837 --> 00:01:17.970
where some of the original image data is
discarded just to get a smaller file size.

22
00:01:17.970 --> 00:01:23.255
So this does mean, though that the image
quality is often worse, but you can kind

23
00:01:23.255 --> 00:01:28.714
of achieve a good balance between size
reduction and an acceptable image quality.

24
00:01:28.714 --> 00:01:33.050
Cuz it's not in all cases that we need
to have the super high res image.

25
00:01:33.050 --> 00:01:34.214
Then we have progressive rendering.

26
00:01:34.214 --> 00:01:36.435
[LAUGH] Is this animation just
gonna be the whole time now?

27
00:01:36.435 --> 00:01:39.075
The back is a kind of
progressive rendering,

28
00:01:39.075 --> 00:01:42.347
cuz that's often what you see
when you visit a website.

29
00:01:42.347 --> 00:01:47.350
And first, the image is super pixelated,
and then slowly it's becoming sharper,

30
00:01:47.350 --> 00:01:50.745
that's progressive rendering and
JPEG supports that.

31
00:01:50.745 --> 00:01:51.965
Okay, sorry about that.

32
00:01:51.965 --> 00:01:57.039
And then there's also faster decoding, cuz
devices can decode them really fast and

33
00:01:57.039 --> 00:02:01.836
display them really quickly without
using any significant processing power.

34
00:02:01.836 --> 00:02:06.063
Next is PNG, this is just the image
I got from Wikimedia or something.

35
00:02:06.063 --> 00:02:08.344
So this is lossless compression, so

36
00:02:08.344 --> 00:02:11.660
it doesn't get rid of any
of the original image data.

37
00:02:13.080 --> 00:02:17.624
So this is perfect for images where you
really need to get these super defined

38
00:02:17.624 --> 00:02:21.823
sharp edges like those, like your logo or
any text, stuff like that.

39
00:02:21.823 --> 00:02:25.183
Where with a JPEG,
it could have been kind of pixelated,

40
00:02:25.183 --> 00:02:27.700
because of the lossy compression.

41
00:02:27.700 --> 00:02:28.588
This one doesn't.

42
00:02:28.588 --> 00:02:31.555
It also supports transparency,
which JPEG doesn't.

43
00:02:31.555 --> 00:02:34.576
Like in this photo,
it has a transparent background.

44
00:02:34.576 --> 00:02:38.676
So yeah, you can kind of have those
images with semi transparent elements as

45
00:02:38.676 --> 00:02:43.400
well with PNG, but because of the lossless
compression is larger and file size.

46
00:02:43.400 --> 00:02:45.230
But in some cases, that is fine.

47
00:02:45.230 --> 00:02:52.490
If you just wanna have this super fine or
refined image, that's okay.

48
00:02:52.490 --> 00:02:56.796
Then we have WebP,
which is a newer image format.

49
00:02:56.796 --> 00:03:00.270
This one supports both lossy and
lossless compression, so

50
00:03:00.270 --> 00:03:03.150
you can kind of configure that yourself.

51
00:03:03.150 --> 00:03:07.535
It also supports transparency, so it's a
pretty good alternative for both JPEG and

52
00:03:07.535 --> 00:03:10.269
PNG, cuz it also supports
progressive rendering.

53
00:03:10.269 --> 00:03:14.850
So we have the good progressive rendering
of JPEG, and this transparency from PNG.

54
00:03:16.410 --> 00:03:21.837
And this one is pretty good for
stuff like this, maybe an e-commerce or

55
00:03:21.837 --> 00:03:27.264
anything where you kind of show these
smaller pictures in a lot of them,

56
00:03:27.264 --> 00:03:31.527
because WebP's size is much,
much smaller than JPEG.

57
00:03:31.527 --> 00:03:36.430
Yeah, it offers a much better compression
than both JPEG and PNG, but yeah.

58
00:03:36.430 --> 00:03:39.053
And then we have AVIF,
which is not as widely supported.

59
00:03:39.053 --> 00:03:44.883
I mean WebP is pretty well right now, but
AVIF is newer and not as well supported.

60
00:03:44.883 --> 00:03:48.593
This also supports both lossy and
lossless compression, same as WebP.

61
00:03:48.593 --> 00:03:51.410
But this also supports
the high dynamic range and

62
00:03:51.410 --> 00:03:53.860
something called the wide color gamut.

63
00:03:53.860 --> 00:03:55.574
I think you pronounce it gamut,
I never know.

64
00:03:55.574 --> 00:04:01.136
It allows you to represent images
with a much bigger contrast and

65
00:04:01.136 --> 00:04:04.329
much more richness and colour to it.

66
00:04:05.450 --> 00:04:07.369
Yeah, also like the luminance level.

67
00:04:07.369 --> 00:04:10.009
I believe is included in
that high dynamic range.

68
00:04:10.009 --> 00:04:13.982
So for example, this picture is super
colorful and it has to be super sharp, and

69
00:04:13.982 --> 00:04:14.945
AVIFF is perfect.

70
00:04:14.945 --> 00:04:16.556
But often, the decoding and

71
00:04:16.556 --> 00:04:20.124
encoding takes a lot longer than
with the other image formats.

72
00:04:20.124 --> 00:04:24.813
And of course, the browser support, there
isn't as much browser support for it yet.

73
00:04:24.813 --> 00:04:28.838
It also supports transparency,
again, same as WebP.

74
00:04:28.838 --> 00:04:32.910
So it's perfect for web background,
transparent backgrounds, stuff like that.

