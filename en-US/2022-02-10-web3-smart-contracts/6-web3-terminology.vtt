WEBVTT

1
00:00:00.000 --> 00:00:03.167
So let's go over some basics, some things
that will hopefully make more sense.

2
00:00:03.167 --> 00:00:06.544
Often when people say Web3,
they mean blockchain technology, right,

3
00:00:06.544 --> 00:00:09.440
being able to do something
specific with blockchain, right?

4
00:00:09.440 --> 00:00:13.853
And so, of course, that means for us,
that's gonna be the Ethereum blockchain,

5
00:00:13.853 --> 00:00:17.776
which means we're developing smart
contracts on the Ethereum network.

6
00:00:17.776 --> 00:00:20.506
Boom, Web3, fantastic, right?

7
00:00:20.506 --> 00:00:24.964
A Provider, I keep saying this phrase,
Provider, which we saw with MetaMask.

8
00:00:24.964 --> 00:00:28.852
Straight from the ethers
documentation is a Provider abstracts

9
00:00:28.852 --> 00:00:32.740
a connection to the Ethereum
blockchain for issuing queries and

10
00:00:32.740 --> 00:00:35.191
sending state changing transactions.

11
00:00:35.191 --> 00:00:38.164
So meaning that ethers does not
know where your network is,

12
00:00:38.164 --> 00:00:41.565
I've said this before, but
it does not know where your network is.

13
00:00:41.565 --> 00:00:43.892
It effectively needs the pipe.

14
00:00:43.892 --> 00:00:47.450
And so your provider is a pipe,
effectively.

15
00:00:47.450 --> 00:00:50.160
It says, okay,
you make your request through me.

16
00:00:50.160 --> 00:00:54.142
I know where to request it to, I will
forward your request to that network and

17
00:00:54.142 --> 00:00:55.272
return the results.

18
00:00:55.272 --> 00:00:59.460
And so there's kind of a specific API that
they already have set up for provider.

19
00:00:59.460 --> 00:01:03.953
Web3 or MetaMask, they have a little
helper function that we did

20
00:01:03.953 --> 00:01:08.693
execute that actually transforms
the MetaMask object into an ethers

21
00:01:08.693 --> 00:01:12.389
Provider that we used to contact for
our Hello World.

22
00:01:12.389 --> 00:01:16.750
A contract is just code written in
Solidity that has been compiled and

23
00:01:16.750 --> 00:01:18.410
deployed onto a network.

24
00:01:18.410 --> 00:01:21.148
It has an address that is no
different from a wallet address.

25
00:01:21.148 --> 00:01:24.210
You cannot look at a contract and
go, that's a contract address,

26
00:01:24.210 --> 00:01:25.480
that's a wallet address.

27
00:01:25.480 --> 00:01:26.968
They're identical in all shapes.

28
00:01:26.968 --> 00:01:32.070
You can send money to a contract just like
you can send money to another wallet.

29
00:01:32.070 --> 00:01:35.550
The only difference is, is that it
also has functions you can call on it.

30
00:01:35.550 --> 00:01:38.170
A wallet of course is just
a public private key combo.

31
00:01:38.170 --> 00:01:41.306
You really just need the private key,
if you have the private key,

32
00:01:41.306 --> 00:01:42.762
you can have everything back.

33
00:01:42.762 --> 00:01:45.842
By the way, the ability, let's see it.

34
00:01:45.842 --> 00:01:48.697
There's also really one
more important thing.

35
00:01:48.697 --> 00:01:50.997
By the way,
I don't know if I've covered this yet,

36
00:01:50.997 --> 00:01:52.580
this is a key piece of terminology.

37
00:01:52.580 --> 00:01:57.186
It's the ability to tell someone that you
know something that they probably don't

38
00:01:57.186 --> 00:02:00.950
know, or that you're proficient
in obscure piece of technology.

39
00:02:00.950 --> 00:02:06.155
So now that you all are learning about
Web3, you will shortly, after this course,

40
00:02:06.155 --> 00:02:10.500
be able to go out and be like,
by the way, I did learn about Web3.

41
00:02:10.500 --> 00:02:12.878
And they're not even gonna know
what questions to ask you.

42
00:02:12.878 --> 00:02:13.440
It doesn't matter.

43
00:02:13.440 --> 00:02:14.830
You got to by the way them.

44
00:02:14.830 --> 00:02:17.623
So for example,
I can say I use vim, by the way.

45
00:02:17.623 --> 00:02:20.082
I type in dvorak, by the way.

46
00:02:20.082 --> 00:02:23.323
And also I write CLI programs in Rustling,
by the way.

47
00:02:23.323 --> 00:02:26.171
Rustling, obviously, a feature,
not a programming language.

48
00:02:26.171 --> 00:02:30.506
And so, very important, so as you go on,
you're gonna to be able to do this and

49
00:02:30.506 --> 00:02:31.580
it's fantastic.

50
00:02:31.580 --> 00:02:33.915
I don't have the ultimate,
by the way, which is using Arch.

51
00:02:33.915 --> 00:02:37.635
Unfortunately, I have kids, you're not
allowed to use Arch Linux and have kids.

52
00:02:37.635 --> 00:02:38.635
It's kind of a rule.

53
00:02:38.635 --> 00:02:39.681
You can't by the way people.

54
00:02:39.681 --> 00:02:40.550
So it's very complicated.

55
00:02:40.550 --> 00:02:43.592
I wish I would have been smarter in
my 20s, could have already done that,

56
00:02:43.592 --> 00:02:44.232
but I didn't.

57
00:02:44.232 --> 00:02:47.382
All right, so
some technology we're using is ethers.

58
00:02:47.382 --> 00:02:53.542
Ethers is the main kind of abstraction for
the Ethereum network.

59
00:02:53.542 --> 00:02:56.033
And so it provides all the ways for
you to be able to call,

60
00:02:56.033 --> 00:02:58.050
it creates your contract
from an interface.

61
00:02:58.050 --> 00:03:01.072
So it's just like a JavaScript object,
we've already seen that,

62
00:03:01.072 --> 00:03:02.671
we're kind of familiar with that.

63
00:03:02.671 --> 00:03:05.023
Hardhat is the testing backbone, right?

64
00:03:05.023 --> 00:03:08.150
It is all the infrastructure you need
to be able to launch out your smart

65
00:03:08.150 --> 00:03:09.051
contract, right?

66
00:03:09.051 --> 00:03:12.076
It has those extra methods
attached to ethers for

67
00:03:12.076 --> 00:03:16.352
being able to read a contract off of
a disk and get a contract factory,

68
00:03:16.352 --> 00:03:20.366
be able to take that contract factory and
deploy it to a network.

69
00:03:20.366 --> 00:03:21.837
So it is very beautiful.

70
00:03:21.837 --> 00:03:23.571
It actually abstracts a lot of things.

71
00:03:23.571 --> 00:03:24.940
It also has that nice network.

72
00:03:24.940 --> 00:03:26.850
It's fantastic.

73
00:03:26.850 --> 00:03:29.419
MetaMask is obviously the browser plugin.

74
00:03:29.419 --> 00:03:30.758
It's the defacto standard.

75
00:03:30.758 --> 00:03:33.613
It is a both a provider and a signer.

76
00:03:33.613 --> 00:03:38.797
A signer is the ability to make
a state changing transaction.

77
00:03:38.797 --> 00:03:43.507
Whereas a Provider only allows
the ability to call to the network and

78
00:03:43.507 --> 00:03:46.407
read functions that don't alter state.

79
00:03:46.407 --> 00:03:49.181
You'll notice that on the web,
I never referenced hardhat.

80
00:03:49.181 --> 00:03:53.268
Again, that's because hardhat is
purely on the infrastructure side,

81
00:03:53.268 --> 00:03:55.820
it's not on the website thus far,
at least.

82
00:03:55.820 --> 00:03:58.684
I'm sure there's a way you
could make it on the website or

83
00:03:58.684 --> 00:04:01.904
there might be some benefit, but
right now, I see no benefit and

84
00:04:01.904 --> 00:04:04.366
I'm pretty sure it just
won't even work at all.

85
00:04:04.366 --> 00:04:08.253
So let's jump over to the whiteboard,
which is right here.

86
00:04:08.253 --> 00:04:11.932
And I'm gonna kind of go over the whole
process again, but let's use boxes and

87
00:04:11.932 --> 00:04:14.014
arrows cuz sometimes
that just helps a lot.

88
00:04:14.014 --> 00:04:17.686
And so one thing right away you'll notice
is that we wrote a contract, right?

89
00:04:17.686 --> 00:04:18.900
It's in Solidity.

90
00:04:18.900 --> 00:04:21.467
We called out to hardhat.

91
00:04:21.467 --> 00:04:26.084
And with hardhat, it takes this and
produces out a JSON file that actually

92
00:04:26.084 --> 00:04:29.596
has the bytecode in it and,
of course, the interface.

93
00:04:29.596 --> 00:04:34.877
Then we created the deploy script
that actually uses the hardhat

94
00:04:34.877 --> 00:04:39.784
information to grab all this and
deploy it out to a network.

95
00:04:39.784 --> 00:04:44.323
Now, this network, it doesn't have
to be local, it can be anywhere.

96
00:04:44.323 --> 00:04:47.359
We use hardhat to create
said local network.

97
00:04:47.359 --> 00:04:51.791
And so now, it has all the exact
same features as a full fledged

98
00:04:51.791 --> 00:04:55.211
network except for
it's on our local machine.

99
00:04:55.211 --> 00:04:59.302
Then we created a browser
little script here and

100
00:04:59.302 --> 00:05:04.839
we used MetaMask and
we pointed MetaMask to this local network.

101
00:05:04.839 --> 00:05:11.730
We used our little JavaScript to call into
MetaMask, which called into this cloud,

102
00:05:11.730 --> 00:05:16.985
returned the results back out,
and returned us those results.

103
00:05:16.985 --> 00:05:20.235
And we were able to display,
Hello Frontend Masters.

104
00:05:20.235 --> 00:05:23.466
So that's effectively what is going on.

105
00:05:23.466 --> 00:05:26.813
Does everyone kinda have that same
picture in their mind, right,

106
00:05:26.813 --> 00:05:28.258
the kind of the set of steps?

107
00:05:28.258 --> 00:05:33.223
I just wanted to make sure we really
have these foundational steps cuz as

108
00:05:33.223 --> 00:05:37.709
we go forward, if you don't have these,
it just is difficult.

109
00:05:37.709 --> 00:05:44.243
All right, we do have one question
&gt;&gt; How does ethers differ from web3JS?

110
00:05:44.243 --> 00:05:48.923
Would you ever wanna use
Web3 instead of ethers?

111
00:05:48.923 --> 00:05:52.704
&gt;&gt; So Web3 has much more functionality.

112
00:05:52.704 --> 00:05:55.496
Ethers is really, really simple.

113
00:05:55.496 --> 00:05:57.261
And so
that's one reason why I just like it,

114
00:05:57.261 --> 00:05:59.095
is that it's limited in its functionality.

115
00:05:59.095 --> 00:06:01.342
Web3, obviously,
you can do a lot more with.

116
00:06:01.342 --> 00:06:05.701
And probably long-term, is the better
con or a better library to use.

117
00:06:05.701 --> 00:06:09.869
It's just ethers is specifically
focused on one thing, Ethereum, and

118
00:06:09.869 --> 00:06:11.929
it makes it very, very easy to use.

119
00:06:11.929 --> 00:06:17.552
Honestly, I mean that's why I primarily
use it, is it just works very, very well.

120
00:06:17.552 --> 00:06:20.484
There is a nomiclabs/hardhat-web3,

121
00:06:20.484 --> 00:06:25.184
you can have all the same niceties
with Web3 as opposed to ethers.

122
00:06:25.184 --> 00:06:28.688
I just like ethers for now.

123
00:06:28.688 --> 00:06:29.580
It just makes everything straightforward.

124
00:06:29.580 --> 00:06:31.886
Plus, there's a lot of really
great tutorials on it.

125
00:06:31.886 --> 00:06:34.149
It just seems to be
a very simple one to use.

126
00:06:34.149 --> 00:06:36.723
It's kinda like the jQuery at one day.

127
00:06:36.723 --> 00:06:38.086
You could just search
up anything on jQuery.

128
00:06:38.086 --> 00:06:40.200
You can solve math with jQuery,
it's beautiful.

