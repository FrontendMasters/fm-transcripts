WEBVTT

1
00:00:00.180 --> 00:00:02.110
This I know sucks, right?

2
00:00:02.110 --> 00:00:03.512
You don't wanna have to do this.

3
00:00:03.512 --> 00:00:07.700
This is the worst form of programming
where you have these long running state

4
00:00:07.700 --> 00:00:11.431
transitions that you want to happen
over time and you have to wait for

5
00:00:11.431 --> 00:00:14.259
something to happen and
then you can do the action.

6
00:00:14.259 --> 00:00:17.630
It's much better to be kind of
pushed this information, right?

7
00:00:17.630 --> 00:00:21.644
Let's erase this transaction and
just [SOUND] get it out of my sight.

8
00:00:21.644 --> 00:00:23.630
And we're gonna erase
the set counter as well.

9
00:00:23.630 --> 00:00:24.670
Disgusting, right?

10
00:00:25.870 --> 00:00:30.322
And what we're gonna do instead is we're
gonna go to our counter contract, and

11
00:00:30.322 --> 00:00:32.830
we're gonna add in one more item.

12
00:00:32.830 --> 00:00:37.280
We're gonna add in one of the greatest
parts about the solidity network.

13
00:00:37.280 --> 00:00:41.360
I personally think this is just
something that is just so dang exciting.

14
00:00:41.360 --> 00:00:49.000
We'll go like this, event CounterInc,
and I'm gonna pass in, that, that is it.

15
00:00:49.000 --> 00:00:53.788
We've just defined an event that
can happen from our contract that

16
00:00:53.788 --> 00:00:59.320
simply has a counter or a singular
value that comes out of this event.

17
00:00:59.320 --> 00:01:03.891
You can have three arguments in an event
and furthermore you can even index

18
00:01:03.891 --> 00:01:07.734
some of those items if you would
like to filter on top of those.

19
00:01:07.734 --> 00:01:12.090
Events are not only able to be listened
to in real time, you can actually go back

20
00:01:12.090 --> 00:01:16.420
through the blockchain and see
a history of events that have happened.

21
00:01:16.420 --> 00:01:20.960
In a sense, they're like cheap storage,
but they're harder to use.

22
00:01:20.960 --> 00:01:22.430
And so they're very, very interesting.

23
00:01:22.430 --> 00:01:26.598
To index that you could do something like,
index, I was gonna show you this, but

24
00:01:26.598 --> 00:01:29.720
it's just a lot of extra work,
you can do that.

25
00:01:29.720 --> 00:01:30.950
And you can then go like,

26
00:01:30.950 --> 00:01:34.500
I only want to listen to events
that have a counter of equal to 5.

27
00:01:34.500 --> 00:01:37.916
And then it will only be notified cuz
it can do a lot of live searching.

28
00:01:37.916 --> 00:01:41.467
Learn about events they're fantastic,
but I just wanted to make sure everyone

29
00:01:41.467 --> 00:01:44.913
understands that they exist cuz that's
the most important part about this,

30
00:01:44.913 --> 00:01:48.390
is that you know that events exist and
that they're super useful.

31
00:01:48.390 --> 00:01:51.100
And so now that we've done that, we need
to do one other thing which I forgot to do

32
00:01:51.100 --> 00:01:52.192
last night while practicing and

33
00:01:52.192 --> 00:01:54.190
it took me 20 minutes to figure
out what was going wrong.

34
00:01:54.190 --> 00:02:00.150
I'm gonna go like, this emit
Counter Inc(counter, there we go.

35
00:02:00.150 --> 00:02:03.957
At this point I want to make
sure everybody knows, hey,

36
00:02:03.957 --> 00:02:07.446
this count has happened and
here's the new value.

37
00:02:07.446 --> 00:02:12.376
There's something very important now,
which is what do we have to do?

38
00:02:12.376 --> 00:02:15.518
Can someone tell me the steps in
here that we have to do to get

39
00:02:15.518 --> 00:02:17.583
everything working for our website?

40
00:02:17.583 --> 00:02:20.117
Does anyone remember
the steps we have to do?

41
00:02:22.834 --> 00:02:24.760
Deploy it.

42
00:02:24.760 --> 00:02:29.294
Updater and take down Webpack relaunch it,
right, kind of sucks.

43
00:02:29.294 --> 00:02:31.570
It is what it is, but
we got to do those things.

44
00:02:31.570 --> 00:02:35.424
I really wanted to make this part super
painful because I really want you to

45
00:02:35.424 --> 00:02:37.090
be excited for part four.

46
00:02:37.090 --> 00:02:40.845
So this is just me making it so
painful, you're like, my gosh,

47
00:02:40.845 --> 00:02:42.890
just stop doing this already.

48
00:02:42.890 --> 00:02:45.360
No, we're gonna keep on doing
this cuz it has to hurt.

49
00:02:45.360 --> 00:02:48.110
It has to hurt to make
something super sweet.

50
00:02:48.110 --> 00:02:51.490
I think what was it,
Mellencamp that said something like that?

51
00:02:51.490 --> 00:02:53.670
I can't remember, anyways,
that joke fell flat.

52
00:02:53.670 --> 00:02:54.170
Let it go.

53
00:02:54.170 --> 00:02:55.820
Just let the joke go.

54
00:02:55.820 --> 00:02:59.706
All right, so now that we have that,
let's go back and

55
00:02:59.706 --> 00:03:03.148
let's relaunch our contract, right?

56
00:03:03.148 --> 00:03:04.080
We do have one question.

57
00:03:04.080 --> 00:03:07.788
&gt;&gt; Yeah, so
at a higher level what is an event then?

58
00:03:07.788 --> 00:03:10.260
Is it something that's
persisted somewhere?

59
00:03:10.260 --> 00:03:15.012
&gt;&gt; Yes, so every transaction will actually
have a log field associated with it in

60
00:03:15.012 --> 00:03:17.570
which you can put data into it.

61
00:03:17.570 --> 00:03:21.270
And so when that transaction happens,
you'll know about the log.

62
00:03:21.270 --> 00:03:25.358
And not only that, but the provider
has a way to listen to the network as

63
00:03:25.358 --> 00:03:28.760
it produces blocks and
read through the logs.

64
00:03:28.760 --> 00:03:33.132
If you've told the provider, hey, I want
to be able to listen to these specific

65
00:03:33.132 --> 00:03:37.590
events, even filtered on this specific
set of data, it will do all that for you.

66
00:03:37.590 --> 00:03:41.780
It kind of feels like magic, and
in the end, you simply get out a callback.

67
00:03:43.720 --> 00:03:44.510
If that makes sense.

68
00:03:44.510 --> 00:03:48.770
Yeah, it's pretty much 200 IQ.

69
00:03:48.770 --> 00:03:52.470
So we've just deployed a new
counter that now has our event.

70
00:03:52.470 --> 00:03:56.950
So again, copy out the address,
go to the end.

71
00:03:56.950 --> 00:03:59.649
Delete the address,
paste it in, go to Webpack,

72
00:03:59.649 --> 00:04:01.980
take down Webpack, put it back up.

73
00:04:01.980 --> 00:04:05.004
I know, I feel so good at this at
this point it's like a video game.

74
00:04:05.004 --> 00:04:09.381
I'm pretty much cranking 90s and
Fortnight except for it's with Webpack and

75
00:04:09.381 --> 00:04:11.480
updating, environment variables.

76
00:04:11.480 --> 00:04:13.310
All right, now we said that out loud.

77
00:04:13.310 --> 00:04:16.850
I'm going to refresh it and
notice that our increment is back at one.

78
00:04:16.850 --> 00:04:19.040
But we haven't done anything
to the front end yet.

79
00:04:19.040 --> 00:04:24.890
So let's go back to our code,
and let's go to index.ts.

80
00:04:24.890 --> 00:04:26.774
So we need to change something, right?

81
00:04:26.774 --> 00:04:30.230
I don't want to have to try to
call this at the right time.

82
00:04:30.230 --> 00:04:33.510
I want something to
call me when it's time.

83
00:04:33.510 --> 00:04:35.270
So let's do this.

84
00:04:35.270 --> 00:04:39.254
Let's go counter,
which the name of our contract, on,

85
00:04:39.254 --> 00:04:43.360
which is a convenience method for
us to be able to do that.

86
00:04:43.360 --> 00:04:45.984
Now we need to provide it a filter.

87
00:04:45.984 --> 00:04:49.900
In the JavaScript world obviously you
do something like this on counter Inc.

88
00:04:49.900 --> 00:04:51.870
That's just not how it's gonna work here.

89
00:04:51.870 --> 00:04:53.480
Instead, we have to do this.

90
00:04:53.480 --> 00:05:00.345
We have to go counter,
filters, CounterInc.

91
00:05:00.345 --> 00:05:04.450
Remember how ethers generates all
these magic functions for us?

92
00:05:04.450 --> 00:05:08.610
It also generates magic filters for
us to listen for our events.

93
00:05:08.610 --> 00:05:12.262
It's really actually kind
of a fantastic library.

94
00:05:12.262 --> 00:05:17.430
So this name, CounterInc, is the name,
that's within our contract.

95
00:05:17.430 --> 00:05:19.170
So it just generates it for us.

96
00:05:20.230 --> 00:05:23.938
And so now that we've done that,
we can have a function,

97
00:05:23.938 --> 00:05:27.120
which takes in the arguments
from our contract.

98
00:05:27.120 --> 00:05:30.515
So I'll have count, right,
cuz that gets passed through.

99
00:05:30.515 --> 00:05:33.438
And now I can take that,
and I can set counter, and

100
00:05:33.438 --> 00:05:36.930
I wanna just pass them account
will jump up to counter.

101
00:05:36.930 --> 00:05:40.740
We'll take an account, right now make
a little question mark in there and

102
00:05:40.740 --> 00:05:44.010
I'll just do a little count,
or do that, fantastic, right?

103
00:05:44.010 --> 00:05:46.790
We just made it all work
out fantastically, right?

104
00:05:46.790 --> 00:05:50.125
And so now every single time this
gets called, we can then do whatever,

105
00:05:50.125 --> 00:05:53.586
I don't know, I think people call it
top down render, whatever they do.

106
00:05:53.586 --> 00:05:56.340
They can do some sort of fantastic
updating of all of your UI,

107
00:05:56.340 --> 00:05:58.420
cuz you have all of your events in here.

108
00:05:58.420 --> 00:06:02.201
And so you can hook that into all of your
state transformation, all the stuff you

109
00:06:02.201 --> 00:06:06.130
need to do, but it's now abstracted
away from an action that a user takes.

110
00:06:06.130 --> 00:06:08.200
We just simply listen for that event.

111
00:06:08.200 --> 00:06:12.190
Which means that if we opened up
a second browser, theoretically,

112
00:06:12.190 --> 00:06:17.120
we should be able to have both those
browsers update at the same time, right?

113
00:06:17.120 --> 00:06:18.930
So we will try that as well.

114
00:06:18.930 --> 00:06:20.960
But for now we've done this.

115
00:06:20.960 --> 00:06:21.980
Let's go back to this.

116
00:06:21.980 --> 00:06:24.840
Let's refresh it and
my goodness, what just happened?

117
00:06:24.840 --> 00:06:26.598
Everything broke, right?

118
00:06:26.598 --> 00:06:31.595
Again, [LAUGH] first try on this breaking,
it really intentionally did this.

119
00:06:31.595 --> 00:06:36.040
All right, scroll to the top, counters
filters CounterInc is not a function.

120
00:06:37.090 --> 00:06:38.450
But I thought I just told you that, right?

121
00:06:38.450 --> 00:06:39.630
We just created this event.

122
00:06:39.630 --> 00:06:40.640
Why isn't it not that?

123
00:06:41.640 --> 00:06:44.820
Well remember, again, go back to our code.

124
00:06:44.820 --> 00:06:49.860
What did we tell ethers was our interface?

125
00:06:49.860 --> 00:06:52.044
We didn't tell it about this event.

126
00:06:52.044 --> 00:06:55.571
So instead of doing this anymore,
let's delete that.

127
00:06:55.571 --> 00:06:59.900
I just really wanted you to know that
you can just simply create an inline

128
00:06:59.900 --> 00:07:03.737
interface, we don't need to do
an in line interface anymore.

129
00:07:03.737 --> 00:07:08.077
Let's erase that, let's go to the tippity
top and let's import contract or

130
00:07:08.077 --> 00:07:12.216
it was called counter, we'll call
counter from, go back to artifacts,

131
00:07:12.216 --> 00:07:14.718
oopsies, that happens every now and then.

132
00:07:14.718 --> 00:07:19.303
Import, contract or I call a counter from,
it's like Groundhog's Day.

133
00:07:19.303 --> 00:07:25.943
Let's go to artifacts, contracts,
counter.sol, counter.json.

134
00:07:25.943 --> 00:07:28.524
Now remember, it's French, there you go.

135
00:07:28.524 --> 00:07:31.372
You have this nice counter right here and

136
00:07:31.372 --> 00:07:36.312
now we have that file that I showed
you earlier inside of our front end,

137
00:07:36.312 --> 00:07:40.282
that's why I had that TS
config resolved json modules.

138
00:07:40.282 --> 00:07:42.210
And so that we can really get out this.

139
00:07:42.210 --> 00:07:45.250
Now notice what's different about our ABI,
which stands for

140
00:07:45.250 --> 00:07:49.180
Application Binary Interface, but
it doesn't really look very binary to me.

141
00:07:50.510 --> 00:07:52.300
It has no indexes.

142
00:07:52.300 --> 00:07:53.520
It has a name.

143
00:07:53.520 --> 00:07:54.780
It has a type.

144
00:07:54.780 --> 00:07:57.630
It has the name of our event and
its type event.

145
00:07:57.630 --> 00:08:02.432
So really is gonna tell ethers everything
it needs to properly construct our

146
00:08:02.432 --> 00:08:04.050
contract object.

147
00:08:04.050 --> 00:08:07.320
So now it's going to add that
filters method to ethers, so

148
00:08:07.320 --> 00:08:09.270
we'll be able to use that.

149
00:08:09.270 --> 00:08:13.352
So now all we need to do is go back,
go down to where we initialized it and

150
00:08:13.352 --> 00:08:15.168
just simply do counter.abi.

151
00:08:15.168 --> 00:08:19.723
That will be the abi we need to pass in
and now this will always work as we make

152
00:08:19.723 --> 00:08:23.034
updates to counter it will
pick up all those changes.

153
00:08:23.034 --> 00:08:24.723
We don't need to manually specify it.

154
00:08:24.723 --> 00:08:27.322
It is beautiful.

155
00:08:27.322 --> 00:08:29.064
All right, I mean, I think it's beautiful.

156
00:08:29.064 --> 00:08:33.457
Now the reason you use hardhat, hardhat
saves all this information out for you and

157
00:08:33.457 --> 00:08:36.953
it saves it in such a way that it
works nicely with ethers, right,

158
00:08:36.953 --> 00:08:38.878
which I think is pretty fantastic.

159
00:08:38.878 --> 00:08:42.726
So now that we've done that, we should
be able to go back to our website, and

160
00:08:42.726 --> 00:08:44.975
we should be able to see these changes.

161
00:08:44.975 --> 00:08:45.915
So let's go back here.

162
00:08:45.915 --> 00:08:46.935
Let's refresh.

163
00:08:46.935 --> 00:08:48.315
All right, we're back.

164
00:08:48.315 --> 00:08:50.105
We have it, fantastic.

165
00:08:50.105 --> 00:08:51.635
Let's increment it.

166
00:08:51.635 --> 00:08:52.875
It'll do the same thing.

167
00:08:52.875 --> 00:08:54.085
Hey, do you wanna do this?

168
00:08:54.085 --> 00:08:55.469
Yes, we wanna do this.

169
00:08:55.469 --> 00:08:57.685
Now, my goodness, we're waiting.

170
00:08:57.685 --> 00:08:58.815
Is it gonna happen?

171
00:08:58.815 --> 00:09:02.100
Looks like we have the longer wait here.

172
00:09:02.100 --> 00:09:05.862
I'm so excited because it's
gonna happen in 3, 2, 1, now.

173
00:09:05.862 --> 00:09:10.843
I nailed it, but wait, what the heck it
didn't quite update where's the update,

174
00:09:10.843 --> 00:09:11.640
there it is.

175
00:09:11.640 --> 00:09:14.742
Our event got called,
look at that and now says number two.

176
00:09:14.742 --> 00:09:16.860
That is pretty awesome, right?

177
00:09:16.860 --> 00:09:20.487
Now we're actually really
interacting with Etherium and

178
00:09:20.487 --> 00:09:23.510
we're actually getting data back out.

179
00:09:23.510 --> 00:09:26.734
And, really we should be able
to go in here and go to 69.

180
00:09:26.734 --> 00:09:28.859
69, I actually haven't done this yet.

181
00:09:28.859 --> 00:09:32.709
We'll update it from a second browser tab,
make it happen.

182
00:09:32.709 --> 00:09:37.300
It's gonna go off, it's gonna now do a
nice little event at the exact same time.

183
00:09:37.300 --> 00:09:41.874
And theoretically we should be able to see
both of these go off at the same time cuz

184
00:09:41.874 --> 00:09:45.652
they're both listening to the same
source which is our network.

185
00:09:45.652 --> 00:09:49.731
It's no different than if you did it,
there you go we got one updated.

186
00:09:49.731 --> 00:09:51.795
I don't, there it is, we got them both.

187
00:09:51.795 --> 00:09:53.686
They both actually worked out.

188
00:09:53.686 --> 00:09:55.119
For me this was really,

189
00:09:55.119 --> 00:09:59.356
really cool because this is like
a whole new level of things you can do.

190
00:09:59.356 --> 00:10:03.468
Your contract can have all these
state changes happening not even from

191
00:10:03.468 --> 00:10:07.659
the person that's using it and
you can listen to only the ones you want.

192
00:10:07.659 --> 00:10:12.147
Say you only wanted to listen to changes
that that individual person has made,

193
00:10:12.147 --> 00:10:14.740
the person that's calling the count.

194
00:10:14.740 --> 00:10:18.645
I could also add in message.sender,
which is just saying, hey,

195
00:10:18.645 --> 00:10:22.360
here is the address of the person
who's called this function.

196
00:10:22.360 --> 00:10:27.304
And then inside of here, I can simply put
address and since I want to filter on it,

197
00:10:27.304 --> 00:10:30.310
index, and I can go,
ader, and there we go.

198
00:10:30.310 --> 00:10:34.043
Now we've made events that I can
listen to that only I have done.

199
00:10:34.043 --> 00:10:37.991
And so you can do all these really
cool tricky things that just make it

200
00:10:37.991 --> 00:10:38.760
super nice.

