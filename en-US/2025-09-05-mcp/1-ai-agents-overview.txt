[00:00:00]
>> Brian Holt: So I just wanna put some general thoughts on AI before I know all of you are gonna have all these questions about what I think about AI. So I've been doing development for professionally but I've been paid to be around tech for about 15 years and then you can say about 10 years before that I was thinking about and working on it.

[00:00:20]
All this to say is I've been around databases and tech for a very, very long time and I've seen a lot of fads come and go. There was the JavaScript framework wars, and there was blockchain and all these other things that some of them ended up being really important.

[00:00:36]
React ended up being one of the things that was really important. And then other things like some of the blockchain stuff became less important and less emphasized as time went on, right? I don't think AI is a fad. I mean, I think if you're here or listening to this, you probably somewhat agree with that.

[00:00:51]
I think some people are thinking that like that the trade of software dev is gonna go away overnight. And I don't think that's true. I do think that people that adopt AI and AI techniques are going to do better than people that, perhaps, have more experience or would be able to hand code things better.

[00:01:08]
I watch some of my engineers just at databricks and what they can do with cursor. We have a site license for Cursor and they are just churning out good code at just an unbelievable pace. Something that I just wouldn't have been able to match when I was at Netflix or something like that.

[00:01:23]
And it's just because they're really good at finding the balance of writing their own code and writing really good prompts, and then inspecting what the LLM is putting out, and then feeding that code into another LLM for judging it, and all these kind of things. They're doing pretty advanced techniques.

[00:01:39]
It's much more than just like this broken help fix please, which is what I do when I head to my AI coding agents, right? I do think we're in for a lot of change. And I think the people that embrace the change and learn how to harness the change will do really well.

[00:01:54]
And I think the people that just fight it tooth and nail, they're just not gonna go as fast, right? It's gonna reflect on their opportunities. I think we're gonna continue seeing a Cambrian explosion of progress in AI tools. I don't think it's gonna be the same sort of progress you've already seen.

[00:02:11]
Cuz basically what they've been doing for a while now is throwing more training data and more compute at all these different LLMs to train them to do better, different things. And we're kind of got to the end of the Internet [LAUGH]. These LLMs have now just seen the Internet and we don't get new Internet at a very quick pace, particularly new Internet that's not generated by AI, which is just kind of the LLMs feeding themselves.

[00:02:36]
So it's all gonna come down to new techniques that we innovate, new ways of using LLMs. Those are kinda gonna be the ways of progress forward. So it's gonna be rather than just LLMs getting smarter and bigger and faster as we've seen them, we're gonna see them be using different techniques, using less tokens, being more efficient here, coming in the future.

[00:02:55]
This is one thing I did wanna emphasize, I think I say it twice in here. I should tell you that I am somewhat serious about it. Regardless of if you wrote it or your AI agent wrote it, you are responsible for all code that you ship. And if I ever hear from any of you that like, my agent wrote that, I'm not responsible for that, I'm just gonna throw you out, we're on the 36th floor.

[00:03:16]
I'm just gonna throw you one of the windows here, right, absolutely not, right, you are responsible for everything that you ship. The best coding people or the developers that I work with take personal responsibility for everything they ship, regardless of whether an agent wrote it or not, right?

[00:03:32]
If it's less important code, it's okay to have a cursory glance at it, but if it's important stuff that you're shipping and while it works and it compiles, I'm just gonna open my pull request. That's the wrong way about going about using all these tools. I wanted to just spend a moment on the word agent and agentic cuz it's the biggest, hottest buzzword.

[00:03:52]
And you'll notice that I'm kind of interchanging the words LLMs and agents, which is not totally accurate, but it's also what people are doing. So the first thing is that it is a marketing term that is not well defined, which means that marketing companies are just going hog wild with it and applying it to everything, which is why I'm just using the word agent everywhere when I really actually just mean LLM.

[00:04:16]
It's because that's what everyone's marketing is doing. And so it's kinda just burned into my brain that way. The idea with an agent is it's some autonomous framework of a network of LLMs that just you give it a task and then it'll apply one LLM to do something and then it'll pass that to another LLM and then you'll have all these various different, basically many brains working on the same problem.

[00:04:40]
That's the intention of the word agent, right? Just to take for example replit, which is a coding agent. It's a very cool product, if you have not played with it, definitely go give it a shot. Powered by neon and databricks, that's why I'm a big fan. If you give them like, hey, generate me a to do app that has multiple users.

[00:05:05]
It'll give it to a engineer LLM that will then pass it off to a product manager LLM that they'll pass it off to a designer LLM. And it has actually many Personas in every part of its little agent framework, that then it gets planned out by the product manager, it gets passed to the designer which makes a mock up for it, which then gets passed to the engineer.

[00:05:26]
And then there's a judge LLM at the end that says, does this fulfill what the user asked? And then there's a DevOps, one that'll help you deploy it and manage your database and all these kind of different things, right? That is really the core of what an agent is intended to be.

[00:05:42]
But then marketing got a hold of it. It's like anything that has AI applied to it is now agentic, right, because that's such a hot word right now. So, I just put this in here because I was confusing myself. I was like, how am I defining agent throughout this course?

[00:05:58]
And so, I kinda wanted to just write it down to make sure that we're all on the same page of what an agent is. This is the intent of what the word is. But I probably will somewhat use it interchangeably with the word LLM, for which I future apologize and also cannot stop myself.

[00:06:13]
I left several of these here. I actually got to work on app build. This one's free and open source. It's actually meant to be a reference architecture for one of these agents. So if you're curious about this, just pop on over to GitHub. You can see, look, there's my little face.

[00:06:30]
I did some docs, don't be too impressed [LAUGH]. But you can actually see here, we actually outline here of how we built it, how you do it. It's meant to be a reference architecture for one of these. Yeah, maybe I'll come back one of these days and do a complete intro to making agents.

[00:06:48]
That would be fun. But here's a bunch, I left them here. Replit, v0, Create, which is now create anything they rebranded, Same.new Databutton, all very cool stuff.
>> Brian Holt: We'll be using some coding IDE agents, so you would call cursor an agent. Probably you would call the agent mode of VS code an agent as well, right, because they're essentially LLMs that have this iteration loop, right, that's really the crux of what an agent is meant to be.

