[00:00:00]
>> Brian Holt: Congrats. That is the intro to mcp. Hopefully this was helpful for you. Hopefully you learned a little bit about Vibe coding. You learned a little bit about just AI in general, how to use LLMs, how to use MCPs, how to write tools for their usage. At the end of my courses, I always like to give people kind of some directions of like, here's some stuff you could go do afterwards to kind of like solidify your learnings.

[00:00:24]
So a really good thing is like if you built something with me in the previous section in the Vibe coding one, like the. The Todoist clone, or maybe you had some other deal like a recipe app or something like that, go make your own MCP server for that, right?

[00:00:35]
You can either Vibe code that yourself or write it yourself. If you're keen on learning more MCP servers, the best thing you can do is go find something like Vercel, where it doesn't exist yet. Well, actually Vercel is probably a bad example because they do have a standard I O1, but they don't have a hosted one.

[00:00:51]
But go find a service that you do like that has an API and make your own MCP server. A lot of them are just community maintained ones. I suggested this before, but I had a fun time making a personal MCP server that can read my email calendar, local file system, discord, all those kind of things.

[00:01:09]
I use that from time to time. Pretty cool. If you're more interested in learning about the client side, which I already have given you, this homework is like, go try Cursor Windsurf, the one that I just showed you crush. Go try all those and see which one you like.

[00:01:26]
They all are slightly different. Yeah, just go check out some of these more awesome MCP servers and try installing them. I went through this, they were kind of fun to look at. Data platforms, gaming, all this kind of stuff. There's a ton of them out there already. Go look at them.

[00:01:42]
Go scrutinize what they did well, what they didn't do well. Have some fun with that. Go try one of the other clients. Yeah, we talked about that already. There's a bunch of them here as well. And specifically the Gemini CLI is also very cool. It's like the Claude one.

[00:02:01]
It's just with Gemini instead of Claude. And just go Vibe, code some more stuff and see what your results are. You'll definitely learn a lot of how to plan. That's the thing that I find that I keep refining the most of, like how do I preempt the LLM from making bad choices up front because one line in an LLM prompt can save an entire app.

[00:02:24]
It is wild. So you'll find a bunch of stuff that you like that do not drop database and the one the please use Drizzle where you can. That line is the most important line in my web app prompts. In any case, please share with me what you do on LinkedIn, on Twitter.

[00:02:43]
And yeah, I'm excited to see what you build. The one thing I just want to put out there is like, this isn't cheating. And I feel like a lot of engineers feel like this is cheating. I'm gonna go as far to say it's becoming necessary for us to kind of stay up and stay as productive as we're expected to be.

[00:03:00]
So the more you invest in this, I think the better off you're going to be. So yeah, don't feel like it's cheating because it isn't. Please read it though. Please read the code that it generates. Obviously I was just full on straight up ignoring that pull request. I would definitely, if someone opened that on my team, I would have an LLM read it as well and say scrutinize this and please find problem areas for me.

[00:03:24]
But I would also read it like every pull request that goes into your code base should be human reviewed by probably at least two people. And the more important it is, the more you should like scrutinize it. Like, the LLM tools are great, but they still are not at human level because remember that it's being trained on everything on GitHub and most of the stuff on GitHub not great.

[00:03:46]
Thanks for coming everybody and hope you enjoyed the course.

