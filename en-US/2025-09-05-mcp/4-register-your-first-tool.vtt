WEBVTT

1
00:00:00.240 --> 00:00:02.800
&gt;&gt; Brian Holt: First thing here is
we're going to create a server.

2
00:00:02.800 --> 00:00:10.720
So equals new Mcp Server
name: "add server".

3
00:00:10.720 --> 00:00:15.680
You can call whatever you want and
you have to give it a version.

4
00:00:15.680 --> 00:00:20.800
This is just telling it like,
hey, I have version 1.0.1.

5
00:00:20.800 --> 00:00:24.361
So if you have cached internally 1.0.0,

6
00:00:24.361 --> 00:00:27.840
please invalidate your cache and
repull it.

7
00:00:31.460 --> 00:00:33.580
Okay, so now we have this MCP server.

8
00:00:33.580 --> 00:00:38.100
We're gonna say server.registerTool.

9
00:00:39.940 --> 00:00:40.740
So add.

10
00:00:42.020 --> 00:00:42.740
There we go.

11
00:00:46.340 --> 00:00:49.060
And then we're going to give it a title.

12
00:00:50.580 --> 00:00:55.321
So this is really important because
this is how the AI is going to

13
00:00:55.321 --> 00:00:58.280
decide do I want to use this tool or not.

14
00:00:59.480 --> 00:01:01.160
So we're going to call
this the addition tool.

15
00:01:02.440 --> 00:01:08.784
We're going to give it a description,
add two numbers together,

16
00:01:08.784 --> 00:01:13.440
and then we're going to
give it an input schema.

17
00:01:13.440 --> 00:01:14.600
Input schema.

18
00:01:18.120 --> 00:01:19.880
And then here's where
we're going to use Zod.

19
00:01:19.880 --> 00:01:27.524
So we're going to say A is
going to be Z number and

20
00:01:27.524 --> 00:01:31.740
B is going to be a Z number.

21
00:01:35.340 --> 00:01:39.565
So we're building an MCP server that
all it does is it takes in two numbers,

22
00:01:39.565 --> 00:01:42.460
adds them together,
returns them back to the LLM.

23
00:01:45.420 --> 00:01:49.610
Okay, so after that you're going
to give it a function async.

24
00:01:51.770 --> 00:01:54.330
It's going to get an A and B.

25
00:01:55.850 --> 00:01:58.690
So this is the object that it's
going to get from the LLM.

26
00:01:58.690 --> 00:02:00.170
It's gonna get a and b.

27
00:02:02.490 --> 00:02:08.364
That's going to be function and

28
00:02:08.364 --> 00:02:14.238
it's going to return content,

29
00:02:14.238 --> 00:02:21.425
type text, text colon string A plus B.

30
00:02:21.425 --> 00:02:25.998
I guess we probably could

31
00:02:25.998 --> 00:02:30.788
have given a number back,

32
00:02:30.788 --> 00:02:35.798
but everything's going to

33
00:02:35.798 --> 00:02:41.040
be put into a string anyway.

34
00:02:41.040 --> 00:02:42.200
So I put it into a string.

35
00:02:49.490 --> 00:02:54.850
So essentially your MCP
server can expose many tools.

36
00:02:54.850 --> 00:02:58.210
We're exposing one tool here,
the add tool.

37
00:02:58.210 --> 00:03:00.631
We've given the title
of an addition tool and

38
00:03:00.631 --> 00:03:03.570
the description is that it
adds two numbers together.

39
00:03:03.570 --> 00:03:07.053
So that's going to give the hint to the
LLM is like, hey, if the user is asking

40
00:03:07.053 --> 00:03:11.520
you to add things, I'm a tool that does
exactly what that user wants you to do.

41
00:03:11.520 --> 00:03:16.343
It says that if you want to use this tool,
give me A, give me B and

42
00:03:16.343 --> 00:03:20.240
then run this function by passing A and
B into it.

43
00:03:20.240 --> 00:03:23.263
I'll do some sort of deterministic
code based thing and

44
00:03:23.263 --> 00:03:25.920
then I'll give you back an answer.

45
00:03:25.920 --> 00:03:29.680
This is the power of the MCP server
is adding two numbers together.

46
00:03:29.680 --> 00:03:31.120
No, I'm just kidding.

47
00:03:31.120 --> 00:03:35.537
The power of MCP is that you can
define inputs into a system and

48
00:03:35.537 --> 00:03:41.610
then you can deterministically Accomplish
a thing and then give it back to the LLM.

49
00:03:41.610 --> 00:03:45.690
Because that's the problem with LLMs is
that they are just wildly inconsistent.

50
00:03:45.690 --> 00:03:49.981
Even if you give a ton of prompting and
say, if a user asks to do this, do this,

51
00:03:49.981 --> 00:03:54.932
this, this, this and this, and then return
this, sometimes it's just like, well, I

52
00:03:54.932 --> 00:03:59.450
know better than what this user is asking
for, therefore I'm not going to do it.

53
00:04:01.290 --> 00:04:07.790
My favorite example of this is we make
a MCP server for databases, right.

54
00:04:07.790 --> 00:04:11.158
And we used to give the database,
was here,

55
00:04:11.158 --> 00:04:16.110
just run whatever SQL you feel
like against the database.

56
00:04:16.110 --> 00:04:18.296
And so
one of my favorite things is like, hey,

57
00:04:18.296 --> 00:04:20.750
put this information into the database.

58
00:04:20.750 --> 00:04:25.230
And what the agent decided to do is,
this doesn't fit in your database.

59
00:04:25.230 --> 00:04:27.550
I'm going to drop your database and
recreate it.

60
00:04:27.550 --> 00:04:30.666
And so it just dropped everything,
recreated everything from scratch and

61
00:04:30.666 --> 00:04:31.910
dropped all the data with it.

62
00:04:31.910 --> 00:04:35.410
But it didn't care because that was
outside of its prompting, right?

63
00:04:35.410 --> 00:04:37.770
Made total sense to this agent.

64
00:04:37.770 --> 00:04:40.170
It's like, yeah,
you don't want this database anymore.

65
00:04:40.170 --> 00:04:43.090
You want a database where this fits,
right?

66
00:04:43.090 --> 00:04:45.210
So now we just don't give it
the capability of doing that.

67
00:04:45.210 --> 00:04:49.014
We say, here's a tool for adding things
to the database, here's a tool for

68
00:04:49.014 --> 00:04:50.450
migrating databases.

69
00:04:50.450 --> 00:04:52.450
And by the way, there's no tool for
dropping database.

70
00:04:52.450 --> 00:04:55.090
Stop asking me to drop databases, right?

71
00:04:55.090 --> 00:04:58.530
&gt;&gt; Speaker 2: So it knows to use
this tool based on the description.

72
00:04:58.530 --> 00:04:59.050
&gt;&gt; Brian Holt: Yep.

73
00:04:59.050 --> 00:05:01.570
&gt;&gt; Speaker 2: How much context
should you put in that description?

74
00:05:03.030 --> 00:05:04.310
&gt;&gt; Brian Holt: That's a good question.

75
00:05:04.310 --> 00:05:07.910
I don't necessarily think I
have a great answer for you.

76
00:05:10.790 --> 00:05:13.030
The real answer to your
question is enough.

77
00:05:17.110 --> 00:05:21.270
In this particular case, putting anything
else here would just be superfluous.

78
00:05:22.870 --> 00:05:24.630
You wouldn't want any much more than this.

79
00:05:26.310 --> 00:05:31.863
So you don't want to put too much context
there because then you start getting

80
00:05:31.863 --> 00:05:37.860
the LLM to hallucinate ideas like,
you use this word to real numbers, right?

81
00:05:37.860 --> 00:05:40.735
And then it's going to start really
hinging on this word real and

82
00:05:40.735 --> 00:05:42.180
going off in weird directions.

83
00:05:42.180 --> 00:05:43.940
You didn't really anticipate it for.

84
00:05:45.380 --> 00:05:47.620
Despite the fact that it is a real number,
right?

85
00:05:47.620 --> 00:05:50.420
But it's superfluous in that context.

86
00:05:50.420 --> 00:05:54.367
Whereas the prompts for, I mean,

87
00:05:54.367 --> 00:06:00.640
I wonder if I can bring up
the neon MCP server, GitHub.

88
00:06:04.320 --> 00:06:05.600
Yeah, some of these would be really good.

89
00:06:05.600 --> 00:06:08.708
An optional id, like, you can see
that they're not terribly long here.

90
00:06:08.708 --> 00:06:11.656
These are ones that are actually
describing parameters.

91
00:06:11.656 --> 00:06:13.280
They're not describing tools.

92
00:06:15.440 --> 00:06:18.612
But you can see some of these
get a little bit longer,

93
00:06:18.612 --> 00:06:21.440
but you can see like
they're not paragraphs.

94
00:06:21.440 --> 00:06:24.230
Right.
They're several sentences.

95
00:06:24.230 --> 00:06:27.223
And it's enough to get the LLM
familiar with what you want from it or

96
00:06:27.223 --> 00:06:30.057
what you want it to do with it,
and not anything more than that,

97
00:06:30.057 --> 00:06:33.510
because it usually causes
more problems than it solves.

98
00:06:33.510 --> 00:06:36.230
Is that dodgy enough of an answer for you?

99
00:06:36.230 --> 00:06:37.572
Okay.
&gt;&gt; Speaker 2: That works, yeah, thanks.

100
00:06:37.572 --> 00:06:38.989
&gt;&gt; Brian Holt: Cool,
definitely check out this one.

101
00:06:38.989 --> 00:06:43.430
This one's a very, like I would venture
to say it's one of the best made ones.

102
00:06:43.430 --> 00:06:45.110
We spent a lot of time trying to get this.

103
00:06:49.280 --> 00:06:51.200
I was talking to someone
at Microsoft the other day.

104
00:06:51.200 --> 00:06:54.999
They actually say that they use ours
as an example to all their customers,

105
00:06:54.999 --> 00:06:57.280
as well as how to make and
ship an MCP server.

