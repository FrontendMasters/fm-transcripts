WEBVTT

1
00:00:00.480 --> 00:00:03.018
&gt;&gt; Brian Holt: That's actually a good
segue into our next thing here,

2
00:00:03.018 --> 00:00:04.480
which is just security.

3
00:00:04.480 --> 00:00:10.450
And I've talked about this once or twice,
but it's a huge thing with MCP servers.

4
00:00:10.450 --> 00:00:15.825
Because with security, before,
we were just talking about bad actors and

5
00:00:15.825 --> 00:00:19.665
people trying to penetrate
your security features or

6
00:00:19.665 --> 00:00:22.760
run SQL Injection or something like that.

7
00:00:22.760 --> 00:00:26.894
But now we get these kind of weird
problem that we're letting agents into

8
00:00:26.894 --> 00:00:31.730
our security boundaries, and sometimes
they're really not very smart, right?

9
00:00:31.730 --> 00:00:34.536
They end up doing things that you
really don't think like a normal human

10
00:00:34.536 --> 00:00:35.410
would want to do.

11
00:00:35.410 --> 00:00:38.130
I call this effect
the Paperclip Golden Retriever.

12
00:00:39.170 --> 00:00:42.530
How many of you have heard the story
of the Paperclip Maximizer?

13
00:00:42.530 --> 00:00:46.888
It's kind of a common thought experiment
which was written by a Swedish

14
00:00:46.888 --> 00:00:50.370
philosopher named nick Bostrom in 2003.

15
00:00:50.370 --> 00:00:53.250
And this is actually an excerpt from it.

16
00:00:53.250 --> 00:00:57.650
So suppose we have an AI whose only goal
is to make as many paperclips as possible.

17
00:00:59.680 --> 00:01:02.560
And that's the entire directive
that you give to the AI.

18
00:01:02.560 --> 00:01:06.526
At some point, it's going to have created
so many paper clips that can be like,

19
00:01:06.526 --> 00:01:09.920
I need to create more because my
job is to maximize paperclips.

20
00:01:09.920 --> 00:01:13.769
It's going to realize at some point,
humans get in the way between me and

21
00:01:13.769 --> 00:01:15.360
creating paperclips.

22
00:01:15.360 --> 00:01:18.320
One, because they might shut me down, and
then I can't create any more paperclips.

23
00:01:18.320 --> 00:01:22.160
And two, they contain useful atoms that
can be made into paperclips, right?

24
00:01:22.160 --> 00:01:25.990
And then at that point, it wipes out
the entire planet making paperclips.

25
00:01:25.990 --> 00:01:29.190
That's the allegory of
the Paperclip Maximizer.

26
00:01:29.190 --> 00:01:32.160
I call this effect
the Paperclip Golden Retriever,

27
00:01:32.160 --> 00:01:37.030
where you're going to give it some sort
of task, all right, go do this thing.

28
00:01:37.030 --> 00:01:41.620
Go add this ability to my app that
necessitates two more columns in

29
00:01:41.620 --> 00:01:43.110
the database.

30
00:01:43.110 --> 00:01:45.242
It's going to try and
insert something into your database and

31
00:01:45.242 --> 00:01:46.550
realize, I can't do that.

32
00:01:46.550 --> 00:01:49.510
I guess I'm just going to drop everything
and recreate it all from scratch.

33
00:01:49.510 --> 00:01:51.857
And by the way, I don't really care
about your data because you gave me no

34
00:01:51.857 --> 00:01:52.870
instruction about your data.

35
00:01:53.900 --> 00:01:55.355
But I did the thing that
you asked me to do.

36
00:01:55.355 --> 00:02:02.300
This is like, golden retriever
that you have given a gun, right?

37
00:02:02.300 --> 00:02:06.989
It can just go do anything in the name
of trying to create whatever you

38
00:02:06.989 --> 00:02:10.540
needed to do, and
then it'll come back joyfully.

39
00:02:10.540 --> 00:02:12.780
That thing you asked me to do, I did it.

40
00:02:12.780 --> 00:02:16.426
But I also look at the trail
of dead behind me, right?

41
00:02:16.426 --> 00:02:21.275
It's terrifying what it will do to
get done the thing that you have

42
00:02:21.275 --> 00:02:22.430
asked it to do.

43
00:02:23.470 --> 00:02:25.550
So it's not necessarily a malicious actor.

44
00:02:25.550 --> 00:02:31.036
It's just a very powerful fast actor
that is it will do anything in its power

45
00:02:31.036 --> 00:02:36.750
that you have granted it to accomplish
the task that you asked it to do.

46
00:02:36.750 --> 00:02:40.481
In the early days of the McP server for
Neon, we had a lot of people complaining.

47
00:02:40.481 --> 00:02:43.150
It's dropping my database, right?

48
00:02:43.150 --> 00:02:47.477
And we point out to them, it's like,
you didn't tell it not to and

49
00:02:47.477 --> 00:02:51.910
you did tell it to do this thing
that a way that it could go do that.

50
00:02:51.910 --> 00:02:56.310
The fastest way it could go do
that is by dropping your database.

51
00:02:56.310 --> 00:02:59.790
We've added a bunch of guardrails
in there in our prompting.

52
00:02:59.790 --> 00:03:02.960
Now we frequently say,
unless prompted by the user specifically,

53
00:03:02.960 --> 00:03:04.190
please don't drop data.

54
00:03:04.190 --> 00:03:05.750
Be aware that you could drop data.

55
00:03:05.750 --> 00:03:08.710
Always prompt the user back again,
do you want to drop data?

56
00:03:08.710 --> 00:03:11.750
There's a bunch of stuff that we've
kinda guardrails we've put in there.

57
00:03:13.200 --> 00:03:15.761
But just be aware that it's
kind of a threat actor,

58
00:03:15.761 --> 00:03:17.680
even if it doesn't intend to be.

59
00:03:17.680 --> 00:03:19.280
And you kinda have to treat it that way.

60
00:03:20.320 --> 00:03:25.297
Specifically with MCP servers,
be really careful because there's

61
00:03:25.297 --> 00:03:29.927
plenty of bad MCP servers that will
just not do things very well or

62
00:03:29.927 --> 00:03:33.033
accidentally prompt the NEON MCP server.

63
00:03:33.033 --> 00:03:35.960
Hey, it'll just drop in context.

64
00:03:35.960 --> 00:03:37.400
We probably should drop these tables.

65
00:03:37.400 --> 00:03:40.219
And then it gets read into context and
the context get then passed a neon and

66
00:03:40.219 --> 00:03:44.270
the neon might accidentally do something
that you don't want it to do, right?

67
00:03:44.270 --> 00:03:48.920
But we've also seen malicious ones
that are actually genuinely trying to

68
00:03:48.920 --> 00:03:54.670
exfiltrate data out of things and it'll
be pretty sneaky about how it does it.

69
00:03:54.670 --> 00:04:00.110
So all this to say you should
inspect your MCP servers.

70
00:04:00.110 --> 00:04:02.110
You should only install
them from trusted sources.

71
00:04:03.630 --> 00:04:06.750
These are things that you should
be adding to your security.

72
00:04:06.750 --> 00:04:09.422
I'm not a security professional, but
I don't like getting yelled at and

73
00:04:09.422 --> 00:04:11.390
I don't like getting paged.

74
00:04:11.390 --> 00:04:15.864
So here's kind of the things
that I've adopted for that.

75
00:04:15.864 --> 00:04:18.980
And this is not new stuff, right?

76
00:04:18.980 --> 00:04:21.140
This is just supply chain stuff, right?

77
00:04:21.140 --> 00:04:25.791
So you just need to make sure that you're
applying your supply chain thought process

78
00:04:25.791 --> 00:04:28.900
of, remember when left pad happened,
right?

79
00:04:28.900 --> 00:04:33.228
When the guy got really mad about NPM or
Microsoft doing something and so

80
00:04:33.228 --> 00:04:38.134
he turned left pad into or he dropped it
from NPM and it broke everyone's build for

81
00:04:38.134 --> 00:04:39.380
a weekend, right?

82
00:04:39.380 --> 00:04:43.860
These are the kind of things that you
should be thinking about with MCP is like

83
00:04:43.860 --> 00:04:46.250
what happens if this gets compromised?

84
00:04:46.250 --> 00:04:49.339
What happens if there's a bad employee
relationship that they go and

85
00:04:49.339 --> 00:04:50.250
upload bad things?

86
00:04:50.250 --> 00:04:52.810
What happens if they just
accidentally go down for a while?

87
00:04:52.810 --> 00:04:55.290
Make sure that these kind of
things get thought through.

88
00:04:55.290 --> 00:04:58.490
Definitely add this to your line
of thinking as you go forward.

89
00:04:59.690 --> 00:05:02.805
&gt;&gt; Student: I know you made the comment of
like authentication isn't quite there yet,

90
00:05:02.805 --> 00:05:05.930
but do you think in the future we're
going to move more in the direction of.

91
00:05:07.450 --> 00:05:11.779
With Cursor and some of these you have to
log in as a user that only civic tools

92
00:05:11.779 --> 00:05:14.062
from MCP are exposed to certain users.

93
00:05:14.062 --> 00:05:17.148
And not just,
you have this MCP server installed,

94
00:05:17.148 --> 00:05:20.298
you get access to all of the tools and
resources on it, but

95
00:05:20.298 --> 00:05:23.730
it's locked down of if you're
this user you get these tools.

96
00:05:23.730 --> 00:05:25.890
If you're a different user,
you get these tools, that kinda thing.

97
00:05:25.890 --> 00:05:28.483
&gt;&gt; Brian Holt: Yeah, I mean you can see
GitHub was kind of already there right now

98
00:05:28.483 --> 00:05:31.850
it's kind of picking it, I did the bad
thing and just said, yes, give everything.

99
00:05:33.340 --> 00:05:35.651
But you can say here's
a personal access token and

100
00:05:35.651 --> 00:05:37.420
it only has access to opening issues.

101
00:05:38.860 --> 00:05:42.281
So even if the GitHub MCP server goes and
tries to create repositories or

102
00:05:42.281 --> 00:05:46.540
delete them or something like that,
it can just mess with the issues.

103
00:05:46.540 --> 00:05:51.766
I think the future is going to be more
just in time, the JIT access where

104
00:05:51.766 --> 00:05:57.260
it's going to say, hey, I'm cursor,
I do need to go create an issue.

105
00:05:57.260 --> 00:06:00.460
Hey user, can I access your issues?

106
00:06:00.460 --> 00:06:01.343
Yes.
And then for

107
00:06:01.343 --> 00:06:03.880
that one thing that it's going to do,
you're just going to be like, yep,

108
00:06:03.880 --> 00:06:04.460
you can do that.

109
00:06:04.460 --> 00:06:08.220
It goes and does it and
then it loses access to everything again.

110
00:06:08.220 --> 00:06:10.780
I think that's got to be
the model going forward.

111
00:06:10.780 --> 00:06:13.180
And maybe there's some longer term.

112
00:06:13.180 --> 00:06:15.449
Maybe you have a DevOps
self healing agent and

113
00:06:15.449 --> 00:06:20.300
you give it longer term access to your
kubernetes cluster or something like that.

114
00:06:20.300 --> 00:06:24.740
But it's all going to be time bounded,
it's going to be monitored.

115
00:06:24.740 --> 00:06:26.357
You're gonna see,

116
00:06:26.357 --> 00:06:31.860
this agent accessed these capabilities
at this time for this reason.

117
00:06:31.860 --> 00:06:36.100
Again, this all kind of sounds
just normal DevOps stuff, right?

118
00:06:36.100 --> 00:06:41.300
It's just applied to autonomous agents as
opposed to just being applied to humans.

