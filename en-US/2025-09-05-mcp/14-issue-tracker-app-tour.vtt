WEBVTT

1
00:00:00.320 --> 00:00:04.160
&gt;&gt; Brian Holt: We are going to do
an MCP server for our issue tracker.

2
00:00:04.160 --> 00:00:12.080
Let me just make you mildly
familiar with this one, right?

3
00:00:12.080 --> 00:00:18.696
Nope, this is just the one that I had

4
00:00:18.696 --> 00:00:24.640
you all clone off of GitHub.

5
00:00:24.640 --> 00:00:28.604
Make sure you run npm install on backend,
npm install on frontend, and

6
00:00:28.604 --> 00:00:30.290
npm install here, right?

7
00:00:30.290 --> 00:00:31.730
I've already done that all.

8
00:00:31.730 --> 00:00:34.290
But you have to go into backend, npm i.

9
00:00:35.570 --> 00:00:40.434
You have to go into frontend, npm i and

10
00:00:40.434 --> 00:00:45.010
then I can say npm i think run dev.

11
00:00:45.010 --> 00:00:47.010
Yeah, it'll run both of
them at the same time.

12
00:00:49.890 --> 00:00:52.850
And it's all proxy through 5173.

13
00:00:52.850 --> 00:00:57.460
So you can see here I get this
nice little issue tracker.

14
00:00:58.660 --> 00:01:00.020
I'm going to sign out.

15
00:01:00.020 --> 00:01:05.140
So you can sign in or you can sign up,
whatever you want to do here.

16
00:01:05.140 --> 00:01:07.860
I have my account already created on here.

17
00:01:07.860 --> 00:01:12.671
Trying to think,
I just put a brianexample.com, and

18
00:01:12.671 --> 00:01:17.700
I have now logged in and
you'll see something like this.

19
00:01:18.820 --> 00:01:20.660
You all will have to
create your own accounts.

20
00:01:23.310 --> 00:01:27.070
Okay, there's issues here.

21
00:01:28.270 --> 00:01:31.925
You can see that they have statuses,
priorities,

22
00:01:31.925 --> 00:01:35.070
timelines, admin users, blah blah blah.

23
00:01:39.390 --> 00:01:44.758
So there's a handful of users that you
should be able to create an issue,

24
00:01:44.758 --> 00:01:46.430
make a better course.

25
00:01:48.420 --> 00:01:53.860
I don't know why I feel the need
to be mean to myself on camera.

26
00:01:55.940 --> 00:02:02.020
And that is definitely urgent and
assigned to me.

27
00:02:02.020 --> 00:02:07.140
And I am going to create my own issue,
so there we go.

28
00:02:07.140 --> 00:02:08.820
I didn't give it any tags.

29
00:02:08.820 --> 00:02:10.220
I think you can give it tags here.

30
00:02:10.220 --> 00:02:12.100
Yeah, this is definitely a rust problem.

31
00:02:14.670 --> 00:02:17.070
So, there you go,
that's the whole issue tracker.

32
00:02:20.430 --> 00:02:24.185
Any questions,
it's meant to be fairly simple but

33
00:02:24.185 --> 00:02:26.990
kind of a GitHub style issue tracker.

34
00:02:29.790 --> 00:02:31.680
We're going to make an MCP server so

35
00:02:31.680 --> 00:02:35.460
that the MCP server imagine like you're
in mid flow with Claude code and

36
00:02:35.460 --> 00:02:39.730
just saying like hey, this is broken,
I need to fix it later.

37
00:02:39.730 --> 00:02:43.670
Create an issue for this kind of
integration and I'm seeing these kind of

38
00:02:43.670 --> 00:02:47.933
issues and please fill up the body with
all the pertinent steps that we need to do

39
00:02:47.933 --> 00:02:51.114
and make sure assign this to me and
assign these tags to it.

40
00:02:51.114 --> 00:02:54.177
And then you could be done for the day,
you can come back two weeks later and

41
00:02:54.177 --> 00:02:55.523
say hey, pull all of my issues.

42
00:02:55.523 --> 00:02:58.861
And then it says, yeah,
I remember I needed to do this one,

43
00:02:58.861 --> 00:03:00.928
hey, Claude code work on this issue.

44
00:03:00.928 --> 00:03:04.145
And then it'll go work on it with all
the context that I had before and

45
00:03:04.145 --> 00:03:07.090
then you can say okay,
open a pull request and close my issue.

46
00:03:08.320 --> 00:03:09.760
Pretty powerful workflow.

47
00:03:09.760 --> 00:03:15.311
It's actually Mostly how I work these days
I just have cloud code create issues for

48
00:03:15.311 --> 00:03:21.120
me on GitHub or linear and then I have it
pull it later whenever I need to go do it.

49
00:03:21.120 --> 00:03:25.280
So let's go make an MCP server
that allows us to do that locally.

50
00:03:25.280 --> 00:03:28.000
Here, I have here.

51
00:03:28.000 --> 00:03:33.440
This will just get you back to where
we were as of when we did Resources.

52
00:03:34.890 --> 00:03:38.170
So if you follow along so far,
you're already to this point.

53
00:03:40.970 --> 00:03:46.627
We already looked at the app, so
we want Claude to act on our behalf.

54
00:03:46.627 --> 00:03:51.690
We need an order of operations, so this
is the big one that I wanted to show you.

55
00:03:51.690 --> 00:03:52.810
Order of operations.

56
00:03:54.090 --> 00:03:58.132
There's a real temptation when you're
building an MCP server to just make it

57
00:03:58.132 --> 00:03:59.010
match your API.

58
00:03:59.010 --> 00:04:02.810
Like you have one tool
call per API endpoint.

59
00:04:02.810 --> 00:04:04.850
That is everyone's first
immediate reaction.

60
00:04:04.850 --> 00:04:08.250
If that's your first reaction,
very normal.

61
00:04:08.250 --> 00:04:13.530
It's a very bad first instinct there.

62
00:04:13.530 --> 00:04:21.290
Why, why don't we just map one API call
to one API call to one tool request?

63
00:04:23.210 --> 00:04:28.369
Think about whenever you need to
create an issue and assign a user and

64
00:04:28.369 --> 00:04:34.180
assign an urgency to it, you have to
call an API endpoint to create an issue.

65
00:04:34.180 --> 00:04:35.460
You have to get the ID back.

66
00:04:35.460 --> 00:04:37.477
You then have to take that id,

67
00:04:37.477 --> 00:04:42.340
you have to then feed it back into
do a bunch of other stuff like that.

68
00:04:42.340 --> 00:04:47.288
What I'm trying to basically call out
here is there's a big sequence, the order

69
00:04:47.288 --> 00:04:52.180
is important, and then you have to feed
an idea from here to here to here to here.

70
00:04:53.620 --> 00:04:57.422
It's very brittle when it comes to getting
it out of order or getting the ID wrong or

71
00:04:57.422 --> 00:04:59.140
pulling out the wrong information.

72
00:05:01.300 --> 00:05:07.300
Let me show you exactly what I'm talking
about here with this, the job space tool.

73
00:05:07.300 --> 00:05:11.700
This is something that literally happened
to me while I was developing this course.

74
00:05:11.700 --> 00:05:14.923
I said,
using the issues tracker MCP server,

75
00:05:14.923 --> 00:05:19.460
create a new issue in my issue tracker and
assign it to me.

76
00:05:19.460 --> 00:05:24.020
Then the robot says,
well, ID me doesn't exist

77
00:05:24.020 --> 00:05:29.140
because it misunderstood
what I meant by me.

78
00:05:29.140 --> 00:05:33.660
It interpreted that to be literally the ID
of me, when in reality I needed to go to

79
00:05:33.660 --> 00:05:37.380
the API, figure out who I am,
get that ID and then feed it back in.

80
00:05:39.220 --> 00:05:43.803
Now, Claude Desktop with Sonnet
actually got this right, but

81
00:05:43.803 --> 00:05:47.780
when I fed it into Quinn,
Quinn did not get it right.

82
00:05:47.780 --> 00:05:49.300
So we'll talk about this in a second.

83
00:05:49.300 --> 00:05:52.858
We're first going to build it with
API because I think it's good for

84
00:05:52.858 --> 00:05:55.450
you to kind of see and
feel how that works.

85
00:05:55.450 --> 00:05:58.728
But then we're gonna do this kind
of more jobs-oriented approach,

86
00:05:58.728 --> 00:06:02.970
where you basically say, do this entire
workflow that's gonna take 10 API calls.

87
00:06:02.970 --> 00:06:06.570
But we're going to provide you step
by step how to do this in code.

88
00:06:06.570 --> 00:06:09.290
So that's what order of operations meant.

89
00:06:09.290 --> 00:06:11.930
We're going to work with
Auth here just for a second.

90
00:06:11.930 --> 00:06:13.890
Auth is an interesting one.

91
00:06:13.890 --> 00:06:16.450
It's very much evolving with MCP Server.

92
00:06:16.450 --> 00:06:19.700
Like how, how do you let an agent
act on behalf of the user?

93
00:06:21.140 --> 00:06:21.900
That's a good question.

94
00:06:21.900 --> 00:06:24.740
It's actually kind of
unsolved at the moment.

95
00:06:24.740 --> 00:06:26.380
There's a bunch of companies
thinking about this.

96
00:06:26.380 --> 00:06:29.940
Like I know Clerk is working on it,
I know DSCOPE is working on it.

97
00:06:29.940 --> 00:06:34.668
There's two companies I work a lot with,
but basically they have to go get

98
00:06:34.668 --> 00:06:39.410
some sort of token, some API token,
some sort of like limited use thing.

99
00:06:39.410 --> 00:06:44.220
Because they don't want the agent to have
forever access to your Persona, right?

100
00:06:44.220 --> 00:06:45.660
Like what's the right balance there?

101
00:06:45.660 --> 00:06:46.540
I don't know.

102
00:06:46.540 --> 00:06:47.260
Not my problem.

103
00:06:47.260 --> 00:06:49.660
Well, I mean it is my problem, but
it's also their problem to solve.

104
00:06:49.660 --> 00:06:51.140
So not my problem to solve.

105
00:06:51.140 --> 00:06:52.780
We're just gonna kind
of cheat a little bit.

106
00:06:52.780 --> 00:06:55.860
I put a little thing up here,
says copy API token and

107
00:06:55.860 --> 00:06:58.860
we're just going to paste that in there.

108
00:06:58.860 --> 00:07:01.466
This would be a perfect use case for
elicitation of like, hey,

109
00:07:01.466 --> 00:07:02.460
go do this thing for me.

110
00:07:02.460 --> 00:07:03.700
I don't have your API key.

111
00:07:03.700 --> 00:07:07.460
You could do an elicitation for
it right now.

112
00:07:07.460 --> 00:07:11.429
If you do it, it'll just say I don't have
your API key, run your prompt again, but

113
00:07:11.429 --> 00:07:13.710
please give me the API key.

114
00:07:13.710 --> 00:07:14.990
One bit of fair warning here.

115
00:07:14.990 --> 00:07:19.390
If you click Copy API key,
this is what it looks like.

116
00:07:21.550 --> 00:07:22.230
I have it.

117
00:07:22.230 --> 00:07:25.340
So there's only one valid API key at
a time because I didn't want to write API

118
00:07:25.340 --> 00:07:26.469
key management software.

119
00:07:26.469 --> 00:07:29.870
So if you do it, it will invalidate
all of your previous API keys.

120
00:07:31.230 --> 00:07:32.630
So just be aware of that.

121
00:07:32.630 --> 00:07:36.640
That is just Brian being straight up lazy
when it came to writing this course and

122
00:07:36.640 --> 00:07:38.130
then correct tags people.

123
00:07:38.130 --> 00:07:41.948
So another thing,
when I was developing this,

124
00:07:41.948 --> 00:07:46.912
when I had just freeform labels with this,
I would have bugs,

125
00:07:46.912 --> 00:07:49.690
like bugs to fix to do's, right?

126
00:07:49.690 --> 00:07:52.564
It would just came up with
a trillion different tags for

127
00:07:52.564 --> 00:07:56.010
all these different things,
which is not what you want, right?

128
00:07:56.010 --> 00:07:59.970
You want one bug tag and if you pull
the bug tag, it pulls everything.

