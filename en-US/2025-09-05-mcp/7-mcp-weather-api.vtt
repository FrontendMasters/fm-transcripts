WEBVTT

1
00:00:00.560 --> 00:00:01.741
&gt;&gt; Brian Holt: So we just did addition,

2
00:00:01.741 --> 00:00:04.000
which is probably not
the most exciting thing.

3
00:00:04.000 --> 00:00:08.220
I mean, let's look at what Claude actually
responded to me that one time because it

4
00:00:08.220 --> 00:00:10.160
was pretty funny.

5
00:00:10.160 --> 00:00:10.789
He's like,

6
00:00:10.789 --> 00:00:14.513
I don't have access to this, but however,
I can easily help you at 2 and 7.

7
00:00:14.513 --> 00:00:16.320
The answer is 9, right?

8
00:00:16.320 --> 00:00:19.840
It's a little like,
I do know how to do this.

9
00:00:19.840 --> 00:00:25.304
Why are you subjecting me to this?

10
00:00:25.304 --> 00:00:27.068
That's funny, then it gave me advice.

11
00:00:27.068 --> 00:00:29.173
And then it's gonna say,
you're absolutely right.

12
00:00:29.173 --> 00:00:29.680
Just kidding.

13
00:00:31.920 --> 00:00:35.120
So let's look at our course website here.

14
00:00:35.120 --> 00:00:39.280
We are going to be working with OpenMedio.

15
00:00:39.280 --> 00:00:41.560
I actually did talk to
their person before.

16
00:00:41.560 --> 00:00:42.557
This is like, hey,

17
00:00:42.557 --> 00:00:46.440
we're about to hammer your API with a
bunch of students doing this all at once.

18
00:00:46.440 --> 00:00:48.800
And they're like,
we don't care, that's fine.

19
00:00:48.800 --> 00:00:51.320
So we're going to be trying this API.

20
00:00:51.320 --> 00:00:54.050
I think it's free.

21
00:00:54.050 --> 00:00:56.490
You don't even have to sign up,
which is really cool.

22
00:00:57.530 --> 00:01:00.610
They're just hoping that people
start using it professionally.

23
00:01:00.610 --> 00:01:03.130
So if you do have weather needs,
it seems like it's a pretty cool service.

24
00:01:06.010 --> 00:01:10.090
So, yeah, they did graciously agree to let
me use their sample API as a sample for

25
00:01:10.090 --> 00:01:10.810
this course.

26
00:01:10.810 --> 00:01:11.610
It is real information.

27
00:01:13.210 --> 00:01:16.430
In the event in the future
that this API is not working,

28
00:01:16.430 --> 00:01:20.730
I did link there's this repo of a bunch
of public APIs that you can try.

29
00:01:20.730 --> 00:01:24.010
So building MCP service for this might
be something that you might try later.

30
00:01:25.650 --> 00:01:28.521
The only reason I did this is because
one of my react courses used to use pet

31
00:01:28.521 --> 00:01:29.321
adoption as an API,

32
00:01:29.321 --> 00:01:32.194
which was really cool because it was
real pets that people could adopt and

33
00:01:32.194 --> 00:01:36.290
people would actually adopt pets from the
course, which I thought was pretty cool.

34
00:01:36.290 --> 00:01:39.970
But their API just did not hold
up over the years, unfortunately.

35
00:01:41.410 --> 00:01:43.800
Anyway, there's a ton
of cool stuff in here.

36
00:01:43.800 --> 00:01:48.130
There's one for movies,
that would be a really cool one to build.

37
00:01:48.130 --> 00:01:51.660
I don't know, all sorts of fun stuff,
but for now, OpenMedio.

38
00:01:51.660 --> 00:01:52.340
Very cool.

39
00:01:54.820 --> 00:01:58.931
So you and I could write this if you
want to, but as you can see here,

40
00:01:58.931 --> 00:02:02.980
this actually really isn't too
much interesting information.

41
00:02:02.980 --> 00:02:07.832
We're going to install the OpenMedio SDK,
we're going to make a weather server,

42
00:02:07.832 --> 00:02:11.660
and then we're just going to
register this tool and get weather.

43
00:02:11.660 --> 00:02:13.524
It's going to get the current weather and

44
00:02:13.524 --> 00:02:17.100
then you're going to get a current weather
for a given latitude and longitude.

45
00:02:17.100 --> 00:02:19.292
This only works for
latitude and longitude,

46
00:02:19.292 --> 00:02:23.080
but LLMs are really good at getting
longitude and latitude for things.

47
00:02:23.080 --> 00:02:25.557
If you say give me the weather
from Minneapolis, it's like, yeah,

48
00:02:25.557 --> 00:02:27.395
I know Minneapolis is this latitude and
longitude.

49
00:02:27.395 --> 00:02:31.037
And it'll just do it for you, so
you don't actually have to geocode or

50
00:02:31.037 --> 00:02:35.194
anything like that, the LLM will just
figure it out for you or it'll lie to you.

51
00:02:35.194 --> 00:02:40.952
You don't know.
That's part of the fun you define.

52
00:02:40.952 --> 00:02:46.403
Here's the parameters you're gonna
get back, the temperature, humidity,

53
00:02:46.403 --> 00:02:51.463
apparent temperature is a day,
precipitation, rain, and wind speed.

54
00:02:51.463 --> 00:02:55.410
And I'm asking for miles per hour
is Fahrenheit and inches of rain.

55
00:02:55.410 --> 00:02:58.185
And then this is just, you're telling it,

56
00:02:58.185 --> 00:03:01.570
this is the output that it's
going to get back again.

57
00:03:01.570 --> 00:03:03.683
We could just write this ourselves.

58
00:03:03.683 --> 00:03:08.086
But nothing in here I just showed
you was very interesting, was it?

59
00:03:08.086 --> 00:03:12.986
So what we're gonna do here,
I'm gonna open my VS Code and

60
00:03:12.986 --> 00:03:17.294
we're gonna say npm install
openmeteo like this.

61
00:03:23.170 --> 00:03:27.689
Okay, so now if I look in my package.json,
you can see I have openmeteo here.

62
00:03:27.689 --> 00:03:30.410
1.2 is what I'm on at the moment.

63
00:03:32.810 --> 00:03:37.130
And I am fully blessing you that if you
just want to copy and paste this because

64
00:03:37.130 --> 00:03:41.470
again, nothing here we did is quite
very different from what we did before.

65
00:03:41.470 --> 00:03:42.856
The only really interesting
part about this

66
00:03:42.856 --> 00:03:45.110
is now this is actually doing something
more interesting than adding.

67
00:03:45.110 --> 00:03:48.190
It's actually adding real
capability to an LLM.

68
00:03:48.190 --> 00:03:53.110
Because if you ask an LLM, hey, what's
the temperature right now in Minneapolis?

69
00:03:53.110 --> 00:03:56.284
It's going to tell you, I don't know,
it doesn't have access.

70
00:03:56.284 --> 00:03:59.255
That's not part of its training
data is current weather.

71
00:04:01.891 --> 00:04:04.311
Okay, so
I'm just going to create a new file here.

72
00:04:04.311 --> 00:04:10.380
I'm gonna save this as weather.js and
I'm just gonna paste all of that.

73
00:04:11.980 --> 00:04:16.177
Let's look at the Zod types for
just a sec because I think that's useful.

74
00:04:16.177 --> 00:04:20.220
The Zod type that you just is the number,
you describe it, what it is, you say that.

75
00:04:20.220 --> 00:04:21.980
You can say that this is optional.

76
00:04:25.340 --> 00:04:27.100
However, it's not optional.

77
00:04:28.300 --> 00:04:32.220
You can't have just longitude and just say
tell me everything around the equator.

78
00:04:33.420 --> 00:04:36.620
It doesn't make a lot of sense, but
that's how you would do it there.

79
00:04:38.940 --> 00:04:43.006
Then here you're just telling the weather
data that you're expecting to get back,

80
00:04:43.006 --> 00:04:45.420
which is what's going to
be given back to the LLM.

81
00:04:46.700 --> 00:04:48.859
Let's add this as an MCP server.

82
00:04:48.859 --> 00:04:52.795
I'm going to come back to that
same Claude desktop here,

83
00:04:52.795 --> 00:04:58.300
I'm just going to copy and paste this
because it's more or less the same thing.

84
00:05:01.340 --> 00:05:06.633
So I'm going to have Weather Server,
same node,

85
00:05:06.633 --> 00:05:11.180
binary args is just
going to be weather js.

86
00:05:13.260 --> 00:05:15.206
That's it.

87
00:05:15.206 --> 00:05:18.140
We don't have to reinstall the packages,
cuz it's in the same directory, right?

88
00:05:18.140 --> 00:05:22.591
It's just going to be
running a different file.

89
00:05:22.591 --> 00:05:24.460
And again, Tome's done the exact same way.

90
00:05:26.840 --> 00:05:31.800
So now if we go into Cloud Desktop,
quit, restart it.

91
00:05:33.960 --> 00:05:35.720
New chat.

92
00:05:35.720 --> 00:05:39.960
If we look down here, we should see
Weather Server and get weather.

93
00:05:39.960 --> 00:05:46.553
And I'm just going

94
00:05:46.553 --> 00:05:51.497
to ask do I need

95
00:05:51.497 --> 00:05:57.267
a raincoat today

96
00:05:57.267 --> 00:06:03.449
in Minneapolis,

97
00:06:03.449 --> 00:06:07.990
Minnesota.

98
00:06:07.990 --> 00:06:09.890
If you'd asked this yesterday,
though, it would have said yes.

99
00:06:12.450 --> 00:06:14.930
So you can see here
with latitude launches.

100
00:06:14.930 --> 00:06:16.970
Someone probably should check that
to make sure it's actually true.

101
00:06:16.970 --> 00:06:18.130
I have no idea.

102
00:06:18.130 --> 00:06:19.330
I'm just trusting it.

103
00:06:20.600 --> 00:06:25.992
But it got back this information,
which this information

104
00:06:25.992 --> 00:06:32.607
looks pretty plausible based on what
I can see out the window right now.

105
00:06:32.607 --> 00:06:34.507
Okay, pretty cool, right?

106
00:06:34.507 --> 00:06:38.377
We've basically added a new capability
to our to Claude Desktop that it didn't

107
00:06:38.377 --> 00:06:39.160
have before.

108
00:06:39.160 --> 00:06:43.997
It didn't have any ability to access that
now, actually, I think you can turn on

109
00:06:43.997 --> 00:06:48.977
web Search, which I have on right now, and
it would have been able to find that, but

110
00:06:48.977 --> 00:06:52.560
we'll just kind of like pretend
that that's not the case.

111
00:06:52.560 --> 00:06:55.764
That used to not be true.

