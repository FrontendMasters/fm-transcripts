WEBVTT

1
00:00:00.260 --> 00:00:06.594
&gt;&gt; Steve Kinney: And so with the item,
right, for add we want to go ahead and,

2
00:00:06.594 --> 00:00:11.695
&gt;&gt; Steve Kinney: List.items.push[new Item]

3
00:00:11.695 --> 00:00:16.980
with all the properties in there.

4
00:00:18.070 --> 00:00:22.245
So I'm actually,
before I had wrote destructure and

5
00:00:22.245 --> 00:00:24.656
I turned it into regular ones,

6
00:00:24.656 --> 00:00:30.707
I don't want to care too much about
the order in there, I just want the value.

7
00:00:30.707 --> 00:00:33.240
Actually we'll say value,
I think that'll work.

8
00:00:33.240 --> 00:00:36.707
So take the value and then we want
to pass a reference to this list so

9
00:00:36.707 --> 00:00:38.550
it can go ahead and remove itself.

10
00:00:40.278 --> 00:00:41.680
&gt;&gt; Steve Kinney: So here's a new item.

11
00:00:41.680 --> 00:00:44.250
This is what your name is,
and this is who I am

12
00:00:44.250 --> 00:00:49.300
when you need to ask me to remove you from
this list, right, so it has a reference.

13
00:00:49.300 --> 00:00:53.440
And before when we do this in redox,
we need to know the ID of everything.

14
00:00:53.440 --> 00:00:58.310
This is we just pointed the full object,
right, cuz that referential

15
00:00:58.310 --> 00:01:01.130
quality will just work in this
case cuz they are the same object.

16
00:01:03.150 --> 00:01:09.670
And then we'll do a action.bound.

17
00:01:15.393 --> 00:01:16.054
&gt;&gt; Steve Kinney: Hold on,

18
00:01:16.054 --> 00:01:21.759
we'll actually do this.items.filter
&gt;&gt; Steve Kinney: So

19
00:01:21.759 --> 00:01:26.900
we get a reference to that item, and
we'll do the trick we've done before.

20
00:01:26.900 --> 00:01:28.800
But we don't need to check the ID,

21
00:01:28.800 --> 00:01:32.260
we can literally look in memory, are you
the one in memory that we had before?

22
00:01:35.584 --> 00:01:37.834
&gt;&gt; Steve Kinney: Except we can't name
them both item cuz that doesn't work.

23
00:01:41.488 --> 00:01:45.680
&gt;&gt; Steve Kinney: We'll call
this one item to remove.

24
00:01:48.662 --> 00:01:52.387
&gt;&gt; Steve Kinney: So
go through all the items,

25
00:01:52.387 --> 00:01:56.430
see are you the item to remove.

26
00:01:56.430 --> 00:02:02.145
And honestly like that is our
state management piece, right.

27
00:02:02.145 --> 00:02:05.078
Where they're just objects that kind
of communicate and talk to each other.

28
00:02:05.078 --> 00:02:08.764
A lot of the, it's effectively a graph
provenance of a tree problem that we

29
00:02:08.764 --> 00:02:13.020
hadn't Redux and we'll talk a little bit
about the trade offs at the very end.

30
00:02:13.020 --> 00:02:16.630
But it's like this is
an item has a remove method,

31
00:02:16.630 --> 00:02:19.500
when you call that it tells the list,
hey, take me off the array.

32
00:02:19.500 --> 00:02:24.100
You have a toggle on the item which
flips its Boolean value back and forth.

