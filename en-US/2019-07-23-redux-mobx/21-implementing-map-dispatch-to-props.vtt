WEBVTT

1
00:00:00.090 --> 00:00:03.550
&gt;&gt; Steve Kinney: What I'm gonna do is I'm
gonna implement the ability to create

2
00:00:03.550 --> 00:00:07.370
a card, because it's a more
complicated one, right?

3
00:00:07.370 --> 00:00:10.774
Because cards have a relation to list.

4
00:00:10.774 --> 00:00:13.460
It's always slightly more tricky
than being able to add a list, or

5
00:00:13.460 --> 00:00:14.830
being able to add a user.

6
00:00:14.830 --> 00:00:17.871
But once we can do cards,
it's like lists and users are easy.

7
00:00:17.871 --> 00:00:22.816
So the ability to create a card together
and once we have that will kind of just

8
00:00:22.816 --> 00:00:28.280
pull in the ability to create a list and
users, it'll be kind of repetitive.

9
00:00:28.280 --> 00:00:29.993
But let's go ahead and
we'll implement that.

10
00:00:29.993 --> 00:00:34.791
If we look at the UI, you can see that
I've got the ability to add a title,

11
00:00:34.791 --> 00:00:38.110
a description, and
then we'll hit Create card.

12
00:00:38.110 --> 00:00:41.930
So this is what's new in this case is

13
00:00:41.930 --> 00:00:44.550
we're gonna have to do a map dispatched
props in this application now.

14
00:00:45.820 --> 00:00:50.250
Also there's two schools of thought.

15
00:00:50.250 --> 00:00:55.210
Could you store each and
one of these input fields in Redux state?

16
00:00:56.240 --> 00:00:57.760
I guess you could, right?

17
00:00:57.760 --> 00:01:03.655
You can probably say, all right, for every
list there's going to be create card form,

18
00:01:03.655 --> 00:01:08.310
so I'm gonna make more properties
on that global state object.

19
00:01:08.310 --> 00:01:12.810
And I will then fire of actions and
yeah you could do all that.

20
00:01:12.810 --> 00:01:15.570
But like these input fields
are getting used anyway.

21
00:01:15.570 --> 00:01:17.110
I'm not that sharing that state anywhere.

22
00:01:17.110 --> 00:01:21.394
I'm not persisting it to a date, I'm not
doing anything with the state other than

23
00:01:21.394 --> 00:01:24.886
populating the input fields on change,
and then using that data.

24
00:01:24.886 --> 00:01:27.661
So I might opt for
react state at this point,

25
00:01:27.661 --> 00:01:30.370
I might choose not to use Redux state.

26
00:01:30.370 --> 00:01:34.260
In fact, spoiler alert, I'm not going
to choose to use [LAUGH] Redux state,

27
00:01:34.260 --> 00:01:38.550
right, cuz that is adding unnecessary
complexity with no benefit.

28
00:01:38.550 --> 00:01:41.900
Right and I don't like to do that, right?

29
00:01:43.370 --> 00:01:47.020
So, we'll go ahead and implement the
ability to create a card and then we're

30
00:01:47.020 --> 00:01:52.000
gonna start out and we'll like with a
little bit of a hurt our head a little bit

31
00:01:52.000 --> 00:01:55.710
and then I'll show you a better
approach that will help us refactor it.

32
00:01:55.710 --> 00:01:59.710
As we'll see, like some of the hard parts
of working with an immutable object and

33
00:01:59.710 --> 00:02:02.260
why you might consider
doing something else.

34
00:02:03.320 --> 00:02:09.374
So, when this happens we need
to put a new card in two places.

35
00:02:09.374 --> 00:02:14.541
We need to take the card itself and
put it into that cards part of the tray,

36
00:02:14.541 --> 00:02:20.572
but then the list also needs to know, hey,
that new card that belongs to me, right.

37
00:02:20.572 --> 00:02:24.013
So we need to put it in two places for
listeners,

38
00:02:24.013 --> 00:02:27.820
we're only gonna need to
really put them one place.

39
00:02:27.820 --> 00:02:28.690
So we'll go back over.

40
00:02:29.970 --> 00:02:32.390
We're gonna a create card container.

41
00:02:32.390 --> 00:02:36.210
This one's gonna be different because
it's not gonna have any state props.

42
00:02:36.210 --> 00:02:40.401
That'll all be stored in the actual
react state local component, but

43
00:02:40.401 --> 00:02:44.946
we will map dispatched props which is
when they hit Create card, all right,

44
00:02:44.946 --> 00:02:47.950
tell Redux we need to put
a new card into our store.

45
00:02:47.950 --> 00:02:53.461
So go ahead and we'll create

46
00:02:53.461 --> 00:02:59.437
a CreateCardContainer.js.

47
00:02:59.437 --> 00:03:09.138
Then we'll import
&gt;&gt; Steve Kinney: Create.card.

48
00:03:17.174 --> 00:03:20.710
&gt;&gt; Steve Kinney: Nice, well, we'll just
populate some like default card data

49
00:03:20.710 --> 00:03:23.843
that will use,
which is we know that cards have titles,

50
00:03:23.843 --> 00:03:26.995
descriptions and
they're assigned to somebody.

51
00:03:26.995 --> 00:03:28.681
So I'm just here to create
an object I can use.

52
00:03:32.144 --> 00:03:35.075
&gt;&gt; Steve Kinney: Just title
that'll be an empty string.

53
00:03:37.809 --> 00:03:38.831
&gt;&gt; Steve Kinney: Description.

54
00:03:42.457 --> 00:03:46.900
&gt;&gt; Steve Kinney: That'll be an empty
string assigned to just be an empty

55
00:03:46.900 --> 00:03:47.680
string.

56
00:03:49.080 --> 00:03:52.942
All right, now we're only gonna
create that mapDispatchToProps.

57
00:03:58.740 --> 00:04:00.988
&gt;&gt; Steve Kinney: We'll do
the kind of original version, and

58
00:04:00.988 --> 00:04:03.184
we'll see if we can refactor a little bit.

59
00:04:05.439 --> 00:04:10.383
&gt;&gt; Steve Kinney: So
we'll return a createCard.

60
00:04:13.722 --> 00:04:16.806
&gt;&gt; Steve Kinney: Lowercase.

61
00:04:16.806 --> 00:04:20.244
Make this on an object, right.

62
00:04:20.244 --> 00:04:22.778
Cuz the mapDispatchToProps
always has to return an object,

63
00:04:22.778 --> 00:04:24.180
cuz these are the props, right?

64
00:04:24.180 --> 00:04:27.929
This will get combined with
the nonexistent map state props.

65
00:04:29.160 --> 00:04:32.105
And become the set of props
that go to that component.

66
00:04:34.410 --> 00:04:39.030
&gt;&gt; Steve Kinney: It'll take some kinda
list Id, white list is this going on, and

67
00:04:39.030 --> 00:04:43.568
effectively, what is,
what's the details, is the title and

68
00:04:43.568 --> 00:04:47.440
description of the card and
stuff along those lines?

69
00:04:47.440 --> 00:04:48.960
So make a new cardID.

70
00:04:48.960 --> 00:04:53.693
We're just gonna cheat and
just use add known,

71
00:04:53.693 --> 00:04:57.717
hopefully unique string identifier and

72
00:04:57.717 --> 00:05:02.813
then the card is going to be
the Id that we just made.

73
00:05:02.813 --> 00:05:11.212
Anything that came from
the dispatch cardData.

74
00:05:11.212 --> 00:05:18.511
And then,
&gt;&gt; Steve Kinney: We'll do actually,

75
00:05:18.511 --> 00:05:21.188
we'll start with the default data.

76
00:05:31.689 --> 00:05:34.380
&gt;&gt; Steve Kinney: Let's start
with the cardId we know we want.

77
00:05:34.380 --> 00:05:35.880
Any default data and

78
00:05:35.880 --> 00:05:39.640
then because this one comes last it
overrides the previous properties.

79
00:05:39.640 --> 00:05:44.730
So the Id will be the first property, then
it's going to basically create a title,

80
00:05:44.730 --> 00:05:47.150
description, assigned to that
are all be empty strings.

81
00:05:47.150 --> 00:05:50.320
And then whatever we got in there
will override those, right.

82
00:05:50.320 --> 00:05:53.896
That is how that kind of spread
operator works that we saw earlier.

83
00:05:53.896 --> 00:05:57.855
All right, and then once we have
the listId, because we need to know

84
00:05:57.855 --> 00:06:02.100
what list added to and the new cardData,
we're kind of done here.

85
00:06:02.100 --> 00:06:03.376
We just say dispatch.

86
00:06:07.902 --> 00:06:10.303
&gt;&gt; Steve Kinney: We'll start with this,
we'll have to replace this.

87
00:06:10.303 --> 00:06:15.608
CARD_CREATE and
we'll say the payload is the son

88
00:06:15.608 --> 00:06:21.680
in the card that we just made the listId,
and the cardId.

89
00:06:23.160 --> 00:06:24.720
As well now could I get it off the card?

90
00:06:24.720 --> 00:06:29.300
Sure, I could totally do that but
it's easier for me later.

91
00:06:29.300 --> 00:06:30.390
So we've got an action.

92
00:06:30.390 --> 00:06:32.130
That's it, that's all we need for

93
00:06:32.130 --> 00:06:35.562
this component the rest now goes to
back to pure Redux as we saw before.

94
00:06:35.562 --> 00:06:38.845
And we will make sure to export default.

95
00:06:41.476 --> 00:06:44.610
&gt;&gt; Steve Kinney: Connect,
now we don't have any map stage props.

96
00:06:44.610 --> 00:06:48.196
So (null, mapDispatchToProps),

97
00:06:48.196 --> 00:06:52.684
and we'll give it that
CreateCard component.

98
00:06:52.684 --> 00:06:56.420
So this is now a component we can
put anywhere in our application.

99
00:06:56.420 --> 00:06:59.592
Now when it gets called we're
gonna need to give it a listId and

100
00:06:59.592 --> 00:07:02.581
some card data, but it is,
we can put it anywhere we want,

101
00:07:02.581 --> 00:07:06.974
and it is hooked into Redux, and it's able
to dispatch those actions from anywhere.

102
00:07:06.974 --> 00:07:10.266
All right, that's super cool, so
now we'll go back into our card.

103
00:07:12.179 --> 00:07:14.487
&gt;&gt; Steve Kinney: Or
it's actually in our list, and

104
00:07:14.487 --> 00:07:19.270
we're gonna replace CreateCard
with CreateCardContainer, right?

105
00:07:19.270 --> 00:07:21.980
And we know that the only
thing it's really

106
00:07:21.980 --> 00:07:25.620
gonna need is to know what
list it's currently in, right?

107
00:07:25.620 --> 00:07:31.605
So we'll say listId is this list.id.

108
00:07:33.409 --> 00:07:34.140
&gt;&gt; Steve Kinney: Great.

109
00:07:37.326 --> 00:07:40.520
&gt;&gt; Steve Kinney: So
let's look at that CreateCard real fast.

110
00:07:40.520 --> 00:07:42.136
Make sure we're getting in the listId.

111
00:07:47.964 --> 00:07:50.081
&gt;&gt; Steve Kinney: Actually, we don't need
to do in the render because we don't

112
00:07:50.081 --> 00:07:51.040
need to show it.

113
00:07:51.040 --> 00:07:53.930
We just need to do it here onCreateCard.

114
00:07:53.930 --> 00:07:57.330
This state will be the title and
the description.

115
00:07:57.330 --> 00:07:59.100
So we'll also just get the listId here.

116
00:08:07.440 --> 00:08:08.628
&gt;&gt; Steve Kinney: We'll pass it in.

117
00:08:10.940 --> 00:08:13.451
&gt;&gt; Steve Kinney: All right,
now, you're like,

118
00:08:13.451 --> 00:08:16.970
could I use own props
in mapDispatchToProps?

119
00:08:16.970 --> 00:08:18.890
You totally could.

120
00:08:18.890 --> 00:08:24.391
Right, you could totally go
back over into this CreditCard

121
00:08:24.391 --> 00:08:29.461
container and
dispatch just like mapStatesToProps.

122
00:08:32.660 --> 00:08:36.132
&gt;&gt; Steve Kinney: Could take the own
props and we do ownProps.listId.

123
00:08:36.132 --> 00:08:39.600
When we refactor this, I'm gonna show
you why you might not want to do that.

124
00:08:39.600 --> 00:08:42.650
But you absolutely could, and
there might be cases where you need to.

125
00:08:42.650 --> 00:08:44.730
But we'll start with it like this.

126
00:08:45.840 --> 00:08:50.060
All right, so we've got in there,
we've got it in the list component.

127
00:08:50.060 --> 00:08:54.330
Now, it's the eternal problem
of events in JavaScript

128
00:08:54.330 --> 00:08:56.800
which is if an action is dispatched or

129
00:08:56.800 --> 00:09:02.110
an event fires and nobody is listening for
it, does it really even matter?

130
00:09:02.110 --> 00:09:05.290
If I'm not mistaken, in our list reducer

131
00:09:06.480 --> 00:09:11.690
the number of files is a common criticism.

132
00:09:11.690 --> 00:09:13.010
How about that?

133
00:09:13.010 --> 00:09:16.230
Redux, but
you start to get into flow again.

134
00:09:16.230 --> 00:09:19.150
Likely infrastructure gets
put into place at one point.

135
00:09:19.150 --> 00:09:22.150
And having sub separated out
is sometimes really helpful.

136
00:09:22.150 --> 00:09:25.820
All right, so I misspelled the word
components in the container.

137
00:09:28.690 --> 00:09:29.270
So I fix that.

138
00:09:33.650 --> 00:09:36.700
Great and hopefully I can do more done.

139
00:09:36.700 --> 00:09:39.170
This is very important, right?

140
00:09:39.170 --> 00:09:42.700
I'm not seeing it show up just yet.

141
00:09:42.700 --> 00:09:45.510
So let's take a look and
see what's happening.

142
00:09:45.510 --> 00:09:51.410
First place I might look is
it was called onCreateCard.

143
00:09:51.410 --> 00:09:55.180
So let's just switch that I mean,
I can either name it both ways.

144
00:09:55.180 --> 00:09:57.900
Either way, I'm refactoring
a traditional react application here.

145
00:09:57.900 --> 00:10:01.060
So let's go with the flow
instead of onCreditCard.

146
00:10:01.060 --> 00:10:03.620
We don't need to do that anymore
cuz it's coming from Redux.

147
00:10:03.620 --> 00:10:05.750
And do createCard.

148
00:10:10.605 --> 00:10:11.727
&gt;&gt; Steve Kinney: Great.

