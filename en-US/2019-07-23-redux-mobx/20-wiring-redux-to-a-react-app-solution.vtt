WEBVTT

1
00:00:00.025 --> 00:00:03.089
&gt;&gt; Steve Kinney: Great,
so let's give it a shot.

2
00:00:03.089 --> 00:00:08.049
We'll start with a card-reducer.

3
00:00:08.049 --> 00:00:11.849
At this point we will import the cards,

4
00:00:11.849 --> 00:00:17.846
let me to structure that,
import the cards as defaultCards.

5
00:00:17.846 --> 00:00:22.104
And again, you might do a thing where you
hit an API, that's obviously what we do

6
00:00:22.104 --> 00:00:26.130
but, just to keep us focused, we're
gonna talk about APIs in a little bit.

7
00:00:27.460 --> 00:00:29.527
From the normalized-state.

8
00:00:30.850 --> 00:00:32.020
&gt;&gt; Steve Kinney: Write the cardsReducer.

9
00:00:34.040 --> 00:00:35.690
And I'll start out with some cards, again,

10
00:00:35.690 --> 00:00:38.300
that is the same as the state
when we were doing it earlier.

11
00:00:38.300 --> 00:00:43.096
I'll make it defaultCards where it starts
out as, and we'll get that action, so

12
00:00:43.096 --> 00:00:47.003
when something happens,
we should be able to modify these cards.

13
00:00:47.003 --> 00:00:50.150
For now,
we're just going to return back the cards.

14
00:00:50.150 --> 00:00:54.036
So all actions that flow through will
just kinda flow through this reducer and

15
00:00:54.036 --> 00:00:58.160
not modify them, that's obviously not
the end result, but it's good enough for

16
00:00:58.160 --> 00:00:58.776
right now.

17
00:01:02.481 --> 00:01:05.918
&gt;&gt; Steve Kinney: Cool, when I'm
getting these files, is not a redux,

18
00:01:05.918 --> 00:01:07.202
there's no rules.

19
00:01:07.202 --> 00:01:11.291
Your team, you should have a rule that you
agree upon, and not name them different

20
00:01:11.291 --> 00:01:15.499
things, but with the layout, there's a
bunch of different philosophies on how you

21
00:01:15.499 --> 00:01:18.920
layout, like what file you put
the actions in versus the reducers.

22
00:01:18.920 --> 00:01:22.750
There's a pattern called ducks,
where you try to put it all into one file.

23
00:01:22.750 --> 00:01:26.680
Honestly, it doesn't matter
as long as you have a plan.

24
00:01:26.680 --> 00:01:32.800
In my experience, I hate them all equally,
and I tend to take a different approach

25
00:01:32.800 --> 00:01:36.060
on every app, as long as you're consistent
in the application you're working on.

26
00:01:37.090 --> 00:01:39.530
So this is not necessarily a mandate
how I'm laying it out, and

27
00:01:39.530 --> 00:01:42.190
you might drop into it outwards,
lay it out differently, totally fine.

28
00:01:43.450 --> 00:01:46.430
So we've got that in place, now what we
need to do is, we need to drop it into

29
00:01:46.430 --> 00:01:51.210
that index.js in the redurecs, and
we'll be able to just combine it in there.

30
00:01:51.210 --> 00:01:56.260
So we'll have, there's only one reducer,
technically, but

31
00:01:56.260 --> 00:02:01.560
it's the combination of, I guess what
you would call a bunch of sub reducers,

32
00:02:01.560 --> 00:02:06.640
which is the literal first time I've
ever used that term, so you're welcome.

33
00:02:06.640 --> 00:02:08.970
It's a Frontend Masters first.

34
00:02:08.970 --> 00:02:11.550
So once we have this in place,

35
00:02:11.550 --> 00:02:16.524
we should be able to take
a look at our state, let's see.

36
00:02:20.484 --> 00:02:23.676
&gt;&gt; Steve Kinney: We've got the cards,
we've got the lists.

37
00:02:28.685 --> 00:02:31.766
&gt;&gt; Steve Kinney: But I don't see them just
yet, we'll figure that out momentarily.

38
00:02:35.779 --> 00:02:37.982
&gt;&gt; Steve Kinney: We've got
both of them in place.

39
00:02:46.925 --> 00:02:49.110
&gt;&gt; Steve Kinney: Okay, I'm just gonna
console.log this to see what happens.

40
00:03:02.549 --> 00:03:04.984
&gt;&gt; Steve Kinney: Looks like we've
got a little bit of an issue,

41
00:03:04.984 --> 00:03:09.168
we've gotta fix with the individual lists
as well, but I don't see that card,

42
00:03:09.168 --> 00:03:10.740
and I will find it in a second.

43
00:03:10.740 --> 00:03:12.428
Let's go fix that issue with the list.

44
00:03:15.600 --> 00:03:18.885
&gt;&gt; Steve Kinney: It does need that key,
luckily we only have the listId, so

45
00:03:18.885 --> 00:03:20.240
that's a perfect key.

46
00:03:24.691 --> 00:03:28.486
&gt;&gt; Steve Kinney: All right, let's go swap
out the card for the card container,

47
00:03:28.486 --> 00:03:30.900
I think that might be our issue.

48
00:03:30.900 --> 00:03:37.521
So create a CardContainer component,
and that is gonna pull and connect.

49
00:03:41.426 --> 00:03:46.643
&gt;&gt; Steve Kinney: From react-redux,
it's gonna pull in that card component

50
00:03:52.427 --> 00:03:54.217
&gt;&gt; Steve Kinney: Great, and now we just,

51
00:03:54.217 --> 00:03:57.201
again, before we had the lists on the 3,

52
00:03:57.201 --> 00:04:00.230
now we need to get
the cards off the three.

53
00:04:00.230 --> 00:04:01.945
And we'll figure out.

54
00:04:06.363 --> 00:04:07.820
&gt;&gt; Steve Kinney: How that works.

55
00:04:07.820 --> 00:04:12.978
So, make a const mapStateToProps,
we'll take some state,

56
00:04:12.978 --> 00:04:17.936
now, this is also,
there's no cards plural in this case,

57
00:04:17.936 --> 00:04:21.327
cuz the list actually has all the cards.

58
00:04:21.327 --> 00:04:24.962
So we're gonna need the ownProps here,
cuz we're gonna figure out,

59
00:04:24.962 --> 00:04:26.140
what card do you want?

60
00:04:28.220 --> 00:04:34.177
And so, when we do that,
we'll do return this new card prop,

61
00:04:34.177 --> 00:04:41.284
that is going to be
the state.cards.entities(ownProps.cardId),

62
00:04:41.284 --> 00:04:46.784
we'll have to do a little bit
of refactoring in a second,

63
00:04:46.784 --> 00:04:50.009
but we'll do that momentarily.

64
00:04:50.009 --> 00:04:52.281
And we'll export default,

65
00:04:52.281 --> 00:04:57.966
we'll connect that mapStateToProps
function to the card component.

66
00:05:00.960 --> 00:05:02.340
&gt;&gt; Steve Kinney: Now in
the individual list.

67
00:05:04.620 --> 00:05:05.480
Now we can swap it out.

68
00:05:08.020 --> 00:05:09.760
Card container will get rid of the card.

69
00:05:10.880 --> 00:05:14.650
And so, you notice that I have these,
an individual card, and then I have

70
00:05:14.650 --> 00:05:19.274
the cardContainer, I could theoretically
define them both in the same file.

71
00:05:19.274 --> 00:05:20.320
I could,

72
00:05:20.320 --> 00:05:25.280
in the second function to connect,
write the entire component there as well.

73
00:05:25.280 --> 00:05:27.660
Why don't I do this?

74
00:05:27.660 --> 00:05:31.361
Because there's a chance that,
especially for testing purposes,

75
00:05:31.361 --> 00:05:35.121
that I might want to just have the
component where I can pass in props and

76
00:05:35.121 --> 00:05:39.434
mark some stuff, without having to wrap
it in an entire Redux store for my test.

77
00:05:39.434 --> 00:05:44.179
Or I might wanna have components that
are reusable across different connections

78
00:05:44.179 --> 00:05:45.050
to Redux.

79
00:05:45.050 --> 00:05:48.350
We have a component library where we have
components that are used in multiple

80
00:05:48.350 --> 00:05:51.960
places throughout the products, but
keeping them separate gives you a little

81
00:05:51.960 --> 00:05:57.470
bit more flexibility, even if you
don't always need that flexibility.

82
00:05:57.470 --> 00:06:02.310
So we'll pass in, the cardId,

83
00:06:02.310 --> 00:06:05.820
which will be this cardId as well.

84
00:06:07.190 --> 00:06:09.910
Cuz list.cards,
after we normalize our state,

85
00:06:09.910 --> 00:06:14.120
went from an array of card objects
to just an array of IDs, and

86
00:06:14.120 --> 00:06:17.120
they're kept separately, so we're
pulling them off the state differently.

87
00:06:18.244 --> 00:06:22.370
All right, so let's go ahead and
let's see what we get.

88
00:06:22.370 --> 00:06:25.758
That's what I expected.

89
00:06:25.758 --> 00:06:28.045
We have to just go and.

90
00:06:29.463 --> 00:06:30.629
&gt;&gt; Steve Kinney: The reducer.

91
00:06:30.629 --> 00:06:35.805
My suspicion was, hey,
why isn't it on there?

92
00:06:35.805 --> 00:06:39.397
I'm like, that file must not be getting
called yet, and when it got called,

93
00:06:39.397 --> 00:06:40.580
it broke.

94
00:06:40.580 --> 00:06:45.620
So, that's actually, again, not having
an error sometimes it's problematic.

95
00:06:45.620 --> 00:06:49.220
Once you have an error, it's easy to solve
which is, I needed to go up a level in

96
00:06:49.220 --> 00:06:57.319
the directory
&gt;&gt; Steve Kinney: Normalize state,

97
00:06:57.319 --> 00:07:01.781
so turning it off and
turning it back on worked [LAUGH],

98
00:07:01.781 --> 00:07:05.466
so I don't have a really
great story there.

99
00:07:09.694 --> 00:07:11.191
&gt;&gt; Steve Kinney: All right,
so my error is like,

100
00:07:11.191 --> 00:07:13.084
I basically needed to reset the server.

101
00:07:13.084 --> 00:07:17.180
At one point I had moved some files
around, which could have been it, but

102
00:07:17.180 --> 00:07:21.275
unfortunately turning it off and
turning it back on solved the issue, or

103
00:07:21.275 --> 00:07:23.980
fortunately depends on
how you think about it.

104
00:07:23.980 --> 00:07:27.160
For us, at least made it an easy fix.

105
00:07:27.160 --> 00:07:27.720
All right, great.

