WEBVTT

1
00:00:00.070 --> 00:00:03.220
&gt;&gt; Steve Kinney: And you can kind of like
just use this now in your application.

2
00:00:03.220 --> 00:00:10.770
So we'll go into
the application itself and cool.

3
00:00:10.770 --> 00:00:14.130
So we need to actually,
do we have a have an index in here?

4
00:00:14.130 --> 00:00:17.090
We have an index.js,
we need to do some wiring up here.

5
00:00:19.040 --> 00:00:23.210
What this is going to look like is
effectively that same provider stuff that

6
00:00:23.210 --> 00:00:24.000
we've seen before.

7
00:00:25.100 --> 00:00:30.725
And so we can say something
along the lines of we'll

8
00:00:30.725 --> 00:00:35.170
pull in the provider from mobx.

9
00:00:35.170 --> 00:00:38.139
Now this is a different one
than the one from Redux.

10
00:00:43.066 --> 00:00:44.550
&gt;&gt; Steve Kinney: Mobx react.

11
00:00:44.550 --> 00:00:48.024
We'll pull that in, and
then we'll wrap the application.

12
00:00:54.793 --> 00:00:55.745
&gt;&gt; Steve Kinney: And the provider.

13
00:00:55.745 --> 00:01:02.781
We'll say that the itemList,

14
00:01:12.965 --> 00:01:14.600
&gt;&gt; Steve Kinney: Did I export it?

15
00:01:27.929 --> 00:01:32.258
&gt;&gt; Steve Kinney: So we can rename this
file item store to/ It doesn't matter,

16
00:01:32.258 --> 00:01:33.850
we could pass this in.

17
00:01:33.850 --> 00:01:38.900
Now, we don't want to pass in the class,
we want to instantiate an item list.

18
00:01:40.120 --> 00:01:45.159
So, we'll say item list just [NOISE].

19
00:01:54.513 --> 00:01:58.631
&gt;&gt; Steve Kinney: Cool, so now,
it's effectively context aware.

20
00:01:58.631 --> 00:02:03.398
Basically any component that
needs to know about a given item

21
00:02:03.398 --> 00:02:08.014
like these accesses,
list of items, we can just inject.

22
00:02:08.014 --> 00:02:09.310
Be like, hey,

23
00:02:09.310 --> 00:02:14.080
I heard you need the itemList,
very cool, here it is, all right?

24
00:02:14.080 --> 00:02:15.920
We can inject it into that component.

25
00:02:17.710 --> 00:02:21.584
Awesome, so we'll go in, and

26
00:02:21.584 --> 00:02:27.549
we'll take a look,
application will have it.

27
00:02:27.549 --> 00:02:29.744
We don't really need it
anywhere in an application.

28
00:02:29.744 --> 00:02:34.542
But if we go into application
we can see that we wanna

29
00:02:34.542 --> 00:02:37.960
show these two lists of items.

30
00:02:37.960 --> 00:02:42.880
What we could do is we can make

31
00:02:42.880 --> 00:02:47.190
an abstraction over this item,
where we can basically say,

32
00:02:47.190 --> 00:02:51.420
hey, what I'm going to do with you is,
I'm going to show you.

33
00:02:51.420 --> 00:02:55.020
I'm going to make a packed items one and
an unpacked Items one.

34
00:02:55.020 --> 00:02:58.910
And we'll just kind of wrap this
idea of an Items component.

35
00:02:58.910 --> 00:03:03.220
So we'll say, like PackedItems, and

36
00:03:03.220 --> 00:03:07.407
what we'll do is we'll just inject.

37
00:03:12.076 --> 00:03:14.622
&gt;&gt; Steve Kinney: They call it itemsList so
itemsList.

38
00:03:14.622 --> 00:03:20.300
Because it's a string, you have to
kinda get it right which is fun,

39
00:03:20.300 --> 00:03:26.230
itemList singular, cool
&gt;&gt; Steve Kinney: Didn't do that here,

40
00:03:26.230 --> 00:03:27.440
so we'll pass it in.

41
00:03:29.160 --> 00:03:30.880
And so we're injecting it,
but we saw before,

42
00:03:30.880 --> 00:03:36.310
then the component itself needs
to be given the observer, right?

43
00:03:36.310 --> 00:03:37.900
It is observing the observable.

44
00:03:39.320 --> 00:03:44.840
Cool, and that will get injected into it,
the item list, right?

45
00:03:56.113 --> 00:03:58.765
&gt;&gt; Steve Kinney: Right, inject and
we'll bring in observer

46
00:04:04.616 --> 00:04:05.345
&gt;&gt; Steve Kinney: Cool, and

47
00:04:05.345 --> 00:04:08.509
we'll go ahead and
we'll have that in place.

48
00:04:08.509 --> 00:04:14.670
And we'll say hey,
what we wanna do is I wanna show

49
00:04:14.670 --> 00:04:19.806
you items, right with the title unpacked

50
00:04:19.806 --> 00:04:25.345
items
&gt;&gt; Steve Kinney: Right,

51
00:04:25.345 --> 00:04:29.235
and this will be, we'll start out,
we won't implement the filters just yet.

52
00:04:29.235 --> 00:04:37.686
We'll say the items in here are going
to be the item list dot unpacked items.

53
00:04:42.826 --> 00:04:44.702
&gt;&gt; Steve Kinney: And
that syncs the meet the API there.

54
00:04:44.702 --> 00:04:46.053
We just need to return this.

55
00:04:46.053 --> 00:04:49.170
Right now we could wrap it either way.

56
00:04:49.170 --> 00:04:51.710
I'm getting yelled at for something here.

57
00:04:59.583 --> 00:05:01.759
&gt;&gt; Steve Kinney: It wanted
a comma instead of a semicolon.

58
00:05:01.759 --> 00:05:07.810
Cool and we make another one for
the unpacked items.

59
00:05:07.810 --> 00:05:10.038
Now I could do this in
the application too.

60
00:05:12.556 --> 00:05:14.923
&gt;&gt; Steve Kinney: But the nice part about
these components is now because I've like

61
00:05:14.923 --> 00:05:17.610
abstracted them, they are effectively
a higher order component right?

62
00:05:17.610 --> 00:05:19.718
They're wrapping around the item.

63
00:05:19.718 --> 00:05:23.230
This is supposed to be packed.

64
00:05:23.230 --> 00:05:24.730
We'll call this one on pact.

65
00:05:24.730 --> 00:05:28.787
We call this one unpacked.

66
00:05:33.959 --> 00:05:35.471
&gt;&gt; Steve Kinney: So packed items.

67
00:05:35.471 --> 00:05:40.840
Cool, and so
we can kind of put both of these in place.

68
00:05:40.840 --> 00:05:47.356
So here we'll say
&gt;&gt; Steve Kinney: Pull

69
00:05:47.356 --> 00:05:49.167
in the unpacked items

70
00:05:58.978 --> 00:06:00.119
&gt;&gt; Steve Kinney: You'll notice
I don't have to pass any props.

71
00:06:01.870 --> 00:06:05.630
Close on the PackedItems, and
just use these components where,

72
00:06:05.630 --> 00:06:10.040
I can move them around throughout my
component hierarchy, it doesn't matter.

73
00:06:10.040 --> 00:06:12.380
Which is kind of the dream in this case.

