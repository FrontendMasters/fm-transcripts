WEBVTT

1
00:00:00.260 --> 00:00:02.230
&gt;&gt; Steve Kinney: And you can see
that this action is flowing through.

2
00:00:02.230 --> 00:00:03.865
And it's actually flowing
through the list reduce,

3
00:00:03.865 --> 00:00:06.230
cuz that's where we have the console log.

4
00:00:06.230 --> 00:00:08.210
Luckily we're gonna need to
actually deal with it there.

5
00:00:08.210 --> 00:00:11.430
We're gonna need to deal with this action
in two places, the card reducer and

6
00:00:11.430 --> 00:00:13.000
the list reducer.

7
00:00:13.000 --> 00:00:15.680
But you're gonna see it's flowing
through that one, we have our payload.

8
00:00:15.680 --> 00:00:17.220
Everything's kind of like hooked up.

9
00:00:17.220 --> 00:00:19.290
We're done with the react portion of this.

10
00:00:19.290 --> 00:00:22.560
The rest of this all
happens now in Redux land,

11
00:00:22.560 --> 00:00:26.910
because React is already made aware
of when any of the state changes.

12
00:00:26.910 --> 00:00:29.470
It's been able to tell Redux,
we just need to tell Redux,

13
00:00:29.470 --> 00:00:33.360
hey, a thing happened, can you update the
state of our application to reflect that?

14
00:00:33.360 --> 00:00:37.260
And I'll be like, yeah,
sure can if you just tell me how to do it.

15
00:00:37.260 --> 00:00:41.402
So go into the card reducer first.

16
00:00:47.697 --> 00:00:51.828
&gt;&gt; Steve Kinney: Instead of just console
logging for funsies, let's go ahead and

17
00:00:51.828 --> 00:00:52.360
check.

18
00:00:52.360 --> 00:00:57.607
All right, we'll say,
&gt;&gt; Steve Kinney: If

19
00:00:57.607 --> 00:01:02.963
the action.type is CARD_CREATE,
and we will refactor this

20
00:01:02.963 --> 00:01:08.528
to a constant in a second, but
let's just get it working first.

21
00:01:08.528 --> 00:01:13.280
We'll grab the card and the cardId from

22
00:01:13.280 --> 00:01:18.861
the payload,
&gt;&gt; Steve Kinney: And

23
00:01:18.861 --> 00:01:23.522
then we'll return,
&gt;&gt; Steve Kinney: Entities, right,

24
00:01:23.522 --> 00:01:25.830
cuz card has entities and
it has IDs, right.

25
00:01:25.830 --> 00:01:29.445
Return entities is all of the other

26
00:01:29.445 --> 00:01:33.650
cards.entities, right,
that was already in state.

27
00:01:34.830 --> 00:01:39.440
And we'll add a new one with the cardId,
and that will be our new card, right.

28
00:01:39.440 --> 00:01:44.750
So previously we had keys that were
the IDs of each card and the values.

29
00:01:44.750 --> 00:01:46.980
We're just adding a new key for

30
00:01:46.980 --> 00:01:51.690
the new card ID and
a new value as the card data, right.

31
00:01:51.690 --> 00:01:56.454
This syntax effectively just allows
you to have a variable in an object,

32
00:01:56.454 --> 00:01:58.103
as an object key rather.

33
00:02:00.814 --> 00:02:03.791
&gt;&gt; Steve Kinney: Right, and then we also
just need to add it to the array of IDs.

34
00:02:05.928 --> 00:02:09.090
&gt;&gt; Steve Kinney: This isn't actually used
in our current version of the application.

35
00:02:09.090 --> 00:02:11.930
We can either spread it, but
if we wanna have an all cards view,

36
00:02:11.930 --> 00:02:13.180
we would need this, right.

37
00:02:13.180 --> 00:02:17.971
And so we're just kinda being
forward thinking for our friends,

38
00:02:17.971 --> 00:02:21.560
which would be cards.ids
plus this new cardId.

39
00:02:21.560 --> 00:02:26.130
You also could use a radar concate and
just concate it on as well.

40
00:02:26.130 --> 00:02:28.210
I like the consistency of this syntax.

41
00:02:28.210 --> 00:02:32.500
I don't have to think about object out
of sign versus the radar concate between

42
00:02:32.500 --> 00:02:35.624
the two of them, I just spread stuff and
it works in both.

43
00:02:35.624 --> 00:02:39.444
But depending on your babel settings and
what browsers you're targeting,

44
00:02:39.444 --> 00:02:41.360
this is still relatively new syntax.

45
00:02:41.360 --> 00:02:46.479
So for a while we weren't able to
use it cuz we just didn't have

46
00:02:46.479 --> 00:02:52.410
the right setup for it, but we do now so
we're ready to rock and roll.

47
00:02:52.410 --> 00:02:55.724
Now this will go ahead and create a card,
we should be able to see that.

48
00:02:55.724 --> 00:02:57.980
Let's just verify before
we get too deep in here.

49
00:02:57.980 --> 00:02:58.910
We'll see more done.

50
00:02:58.910 --> 00:03:00.340
And this is very important.

51
00:03:01.420 --> 00:03:05.468
Now you'll notice it didn't show up,
right, cuz it's been added to our state.

52
00:03:08.076 --> 00:03:10.687
&gt;&gt; Steve Kinney: If we go to the cards,

53
00:03:10.687 --> 00:03:17.320
you can see that there's
now four different IDs.

54
00:03:17.320 --> 00:03:22.134
We've got the, let's just go to the state,
go cards, entities,

55
00:03:22.134 --> 00:03:28.000
I don't know which one is the newest one,
pretty sure it's this one.

56
00:03:28.000 --> 00:03:29.902
More done, this is very important.

57
00:03:29.902 --> 00:03:33.471
It's added to the state, but it's not on
the list yet because we just have to,

58
00:03:33.471 --> 00:03:36.571
the list goes through its array of
card IDs and does each one of them.

59
00:03:36.571 --> 00:03:40.221
So we actually need to listen
to this action in two places,

60
00:03:40.221 --> 00:03:41.869
which is totally doable.

61
00:03:44.355 --> 00:03:47.300
&gt;&gt; Steve Kinney: So
we'll go into the list reducer, and

62
00:03:47.300 --> 00:03:50.165
what we're gonna say is, all right.

63
00:03:53.727 --> 00:03:57.420
&gt;&gt; Steve Kinney: Actual,
spellcheck was helpful there for my typo.

64
00:03:57.420 --> 00:04:03.610
CARD_CREATE, and
we'll say we need a few things.

65
00:04:03.610 --> 00:04:09.082
We need the,
&gt;&gt; Steve Kinney: Card ID from the,

66
00:04:09.082 --> 00:04:14.100
actually we can grab this separately,
we'll say, grab the card ID.

67
00:04:14.100 --> 00:04:18.985
We'll go and
grab the list ID from the action.payload.

68
00:04:21.857 --> 00:04:26.530
&gt;&gt; Steve Kinney: We'll grab the,
we got a new set of entities.

69
00:04:26.530 --> 00:04:31.980
So remember, we can't just
modify the list.entities, right.

70
00:04:31.980 --> 00:04:34.790
We need to return a new object so
that when Redux says,

71
00:04:34.790 --> 00:04:38.400
here's the new state of the world,
React goes, this is a different object.

72
00:04:38.400 --> 00:04:44.818
So we're basically gonna make
a copy of list.entities.

73
00:04:44.818 --> 00:04:46.058
Effectively it's just a clone.

74
00:04:48.905 --> 00:04:49.883
&gt;&gt; Steve Kinney: Call this entities.

75
00:04:52.277 --> 00:04:54.560
&gt;&gt; Steve Kinney: And
then we'll say on this new one,

76
00:04:57.040 --> 00:04:58.174
&gt;&gt; Steve Kinney: Find the list ID.

77
00:05:00.414 --> 00:05:03.289
&gt;&gt; Steve Kinney: Spread out
that entire singular list.

78
00:05:04.490 --> 00:05:06.035
And if this makes you wanna cry,

79
00:05:06.035 --> 00:05:08.170
we'll talk about how to
abstract this in a second.

80
00:05:09.210 --> 00:05:12.218
Take all the other properties,
but replace the cards.

81
00:05:18.832 --> 00:05:20.006
&gt;&gt; Steve Kinney: I'll
use concat this time.

82
00:05:22.432 --> 00:05:23.293
&gt;&gt; Steve Kinney: Right, so

83
00:05:23.293 --> 00:05:29.046
this is basically creating a new list
that is going to a new set of lists.

84
00:05:29.046 --> 00:05:34.232
And then what we're able to do
in here is we'll just say return

85
00:05:34.232 --> 00:05:38.843
all the other lists or
the list, the IDs effectively.

86
00:05:41.203 --> 00:05:43.750
&gt;&gt; Steve Kinney: So honestly,
I'm confused by this.

87
00:05:45.610 --> 00:05:50.284
Also that semi colon is not
gonna make us happy later.

88
00:05:50.284 --> 00:05:52.116
Go ahead and
we should see it show up on the page.

89
00:05:54.828 --> 00:05:57.102
&gt;&gt; Steve Kinney: Great,
now the fact of the matter is,

90
00:05:57.102 --> 00:06:00.810
we're gonna have to write gnarly
code like that all the time.

91
00:06:01.860 --> 00:06:05.150
You have a choice, you can use mutable JS,
totally, or Mori or

92
00:06:05.150 --> 00:06:06.040
any of those libraries.

93
00:06:07.510 --> 00:06:12.140
Again, you pay the cost of not necessarily
having regular JavaScript objects anymore,

94
00:06:12.140 --> 00:06:15.170
which might be scary,
might just be too big a refactor for you.

95
00:06:15.170 --> 00:06:19.114
The other option is to create yourself
some helper functions that make this

96
00:06:19.114 --> 00:06:20.373
effectively less bad.

97
00:06:20.373 --> 00:06:21.638
They basically abstract this away,

98
00:06:21.638 --> 00:06:23.500
cuz we're gonna be doing
this all over the place.

99
00:06:23.500 --> 00:06:28.968
It'd be cool to just say, hey,
I'd love to just be able to go ahead and

100
00:06:28.968 --> 00:06:35.494
change this property and give, do all the
making of the new objects for me, right.

101
00:06:35.494 --> 00:06:37.405
Sometimes you can't avoid gnarly code, but

102
00:06:37.405 --> 00:06:39.550
if you can abstract your
way it's not as bad.

103
00:06:39.550 --> 00:06:42.880
Low dash has a separate version for
functional programming.

104
00:06:42.880 --> 00:06:46.180
Functional programming is
all about immutability.

105
00:06:46.180 --> 00:06:49.600
And there's a version of that,
of their set helper, where

106
00:06:49.600 --> 00:06:54.410
basically you give it the property chain
that you're looking for in the new value.

107
00:06:54.410 --> 00:06:58.630
And it basically creates the new
objects along the way for you.

