WEBVTT

1
00:00:01.740 --> 00:00:02.750
&gt;&gt; Speaker 1: Yeah, hi, everyone.

2
00:00:02.750 --> 00:00:07.900
So my name is Kent C Dodds and
this is some information about me.

3
00:00:07.900 --> 00:00:12.420
Each one of these little things is linked
including a cute picture of my puppy.

4
00:00:12.420 --> 00:00:19.050
My oldest is not even six yet, so I don't
know why we got a puppy, but we did.

5
00:00:19.050 --> 00:00:21.386
And now, we're happy with her.

6
00:00:21.386 --> 00:00:28.045
But yeah, so my slides are right here,
kcd.im/tp-slides.

7
00:00:28.045 --> 00:00:31.029
And you can get all of links and stuff.

8
00:00:31.029 --> 00:00:34.117
There isn't a whole lot
to my slides beyond this.

9
00:00:34.117 --> 00:00:38.508
There are a couple of useful things and
some resources that I link to.

10
00:00:38.508 --> 00:00:43.058
But for the most part, most of our time
is gonna be spent in the repo anyway, so

11
00:00:43.058 --> 00:00:46.919
which is like open source,
you'll have access to that forever.

12
00:00:46.919 --> 00:00:47.519
Okay, cool.

13
00:00:47.519 --> 00:00:52.616
So I like to set up expectations so
that you're not like waiting for

14
00:00:52.616 --> 00:00:55.354
something and then it never comes.

15
00:00:55.354 --> 00:00:58.452
So let's talk about what this talk is.

16
00:00:58.452 --> 00:01:03.064
We're gonna be talking about
the fundamentals behind tests and testing.

17
00:01:03.064 --> 00:01:07.400
So we're actually going to write
a testing framework in Assertion Library.

18
00:01:07.400 --> 00:01:09.940
That's the first thing
we're gonna do today, so

19
00:01:09.940 --> 00:01:14.050
that you really get understanding
of what testing really is.

20
00:01:14.050 --> 00:01:17.540
Another thing that I didn't mention, but

21
00:01:17.540 --> 00:01:20.540
I probably should is this
is all JavaScript stuff.

22
00:01:20.540 --> 00:01:24.590
So if you're not experienced
with JavaScripts at all,

23
00:01:24.590 --> 00:01:25.860
you're gonna struggle a little bit.

24
00:01:25.860 --> 00:01:30.750
I had somebody come to a workshop like
this recently who knew nothing about

25
00:01:30.750 --> 00:01:35.920
JavaScript and it was a little bit of
a struggle for them to do the exercises.

26
00:01:35.920 --> 00:01:37.920
So hopefully,
you're familiar with JavaScript.

27
00:01:37.920 --> 00:01:41.940
But if you're not, then get your friend
to come and help you with the syntax.

28
00:01:41.940 --> 00:01:44.898
JavaScript is the best language anyway,
so you should learn it.

29
00:01:44.898 --> 00:01:51.180
So we're gonna talk about different forms
of testing not all forms of testing.

30
00:01:51.180 --> 00:01:55.338
There are many, the two that we
are focusing on today are unit and

31
00:01:55.338 --> 00:01:57.220
integration testing.

32
00:01:57.220 --> 00:02:00.420
This is more like practices and
principles,

33
00:02:00.420 --> 00:02:04.470
so lots of these things can apply
to various forms of testing,

34
00:02:04.470 --> 00:02:07.180
these are just the two that
we'll be focusing on today.

35
00:02:07.180 --> 00:02:11.460
And we'll definitely cover test doubles or
mock spies or stubs,

36
00:02:11.460 --> 00:02:16.360
whatever you wanna call those things we'll
be talking about that, what those really

37
00:02:16.360 --> 00:02:21.045
are, and
in what situations they're useful.

38
00:02:21.045 --> 00:02:23.175
We'll talk about test driven development.

39
00:02:24.335 --> 00:02:29.281
We're not gonna be talking about all of
the different methodologies of testing,

40
00:02:29.281 --> 00:02:33.451
but TDD is one that I found to be
pretty useful on certain situations.

41
00:02:33.451 --> 00:02:38.683
And then yeah, just hopefully,
this gives you some core principles to

42
00:02:38.683 --> 00:02:44.451
help you write tests that'll give you
confidence and also are maintainable.

43
00:02:44.451 --> 00:02:48.860
So I'm gonna try and
avoid technology-specific stuff.

44
00:02:48.860 --> 00:02:52.285
We're gonna be using specific
frameworks and stuff.

45
00:02:52.285 --> 00:02:55.683
And so there, you will need to learn
at least the assertion library and

46
00:02:55.683 --> 00:02:57.534
how to use the framework a little bit.

47
00:02:57.534 --> 00:03:02.424
But the technology-specific stuff is from
my other workshop with testing react We're

48
00:03:02.424 --> 00:03:07.980
not gonna configure any tools, it's all
preconfigured for you and everything.

49
00:03:07.980 --> 00:03:13.070
And testing is one subject

50
00:03:13.070 --> 00:03:18.010
that has a huge variety of opinions and
that

51
00:03:18.010 --> 00:03:23.410
is not lost on me, I have a lot opinions
based off of my experience testing.

52
00:03:23.410 --> 00:03:29.900
And I know several people, I just spoke at
a conference all about testing JavaScript.

53
00:03:29.900 --> 00:03:34.190
And it was like every other talk was
disagreeing with the previous one.

54
00:03:34.190 --> 00:03:37.310
It was so many opinions about testing.

55
00:03:37.310 --> 00:03:40.310
So there are tradeoffs
everywhere in software.

56
00:03:40.310 --> 00:03:43.620
In particular with testing,
there are tons of tradeoffs.

57
00:03:43.620 --> 00:03:49.470
And so, I'll be giving you my opinions of
things that I've seen that have made it

58
00:03:49.470 --> 00:03:54.010
easier for me to maintain tests and that
give me confidence that I'm looking for.

59
00:03:54.010 --> 00:03:55.352
And, like I said earlier,

60
00:03:55.352 --> 00:03:58.100
we're not covering all the forms
of testing, just a select few.

61
00:03:59.110 --> 00:04:02.680
So if you haven't set up the workshop,
make sure that you do that, it's going to

62
00:04:02.680 --> 00:04:08.380
take a fair amount of time to set it up,
just because that's the way it is.

63
00:04:09.390 --> 00:04:12.010
The workshop is pretty big.

64
00:04:12.010 --> 00:04:17.200
It's actually an application where I'm
trying to balance the line between totally

65
00:04:17.200 --> 00:04:22.520
practical but not too confusing and
domain specific.

66
00:04:22.520 --> 00:04:26.360
And so you are installing an app,
but it also has this other

67
00:04:26.360 --> 00:04:31.390
directory that has some other
stuff in it for specific examples.

68
00:04:33.122 --> 00:04:36.340
So yeah, this may take a fair amount
of time for you to install, but

69
00:04:36.340 --> 00:04:40.060
once that's done you should be all set and
ready to go.

70
00:04:40.060 --> 00:04:44.230
If you are struggling with that
a little bit, I'll be in the chat and

71
00:04:44.230 --> 00:04:48.500
in here helping people out
during exercises and stuff.

72
00:04:48.500 --> 00:04:54.061
Yeah, for many of the exercises, not all
of them, but for many of the exercises,

73
00:04:54.061 --> 00:04:59.070
there's a test at the bottom that has
a link to elaboration and feedback.

74
00:04:59.070 --> 00:05:03.756
This is scientifically proven that when
you reiterate the things you have been

75
00:05:03.756 --> 00:05:07.025
taught, that you'll remember
those things better.

76
00:05:07.025 --> 00:05:09.728
And so, that is why I have this form,

77
00:05:09.728 --> 00:05:14.613
that's why I added it to my workshops so
it gives you an opportunity

78
00:05:14.613 --> 00:05:19.340
to type out what it is that you
learned from this exercise.

79
00:05:19.340 --> 00:05:22.810
And that will just help
solidify things in your mind.

80
00:05:22.810 --> 00:05:24.340
It's kinda like-
&gt;&gt; Speaker 2: If you're watching it

81
00:05:24.340 --> 00:05:28.210
as a course, use the notes feature and
take notes to yourself.

82
00:05:28.210 --> 00:05:29.280
&gt;&gt; Speaker 1: Yeah, thanks, Mark.

83
00:05:29.280 --> 00:05:31.630
Yeah, I gotta think about that, too.

84
00:05:31.630 --> 00:05:34.310
Feel free to still submit
the feedback if you want to.

85
00:05:34.310 --> 00:05:39.040
But yeah, the notes feature would be
a good place to take those notes as well.

86
00:05:40.380 --> 00:05:44.670
And then, if you have any questions for
me that aren't really related to this,

87
00:05:44.670 --> 00:05:47.300
I do have an ask me anything on GitHub.

88
00:05:47.300 --> 00:05:51.820
Several hundreds of questions on
there that you can read through and

89
00:05:51.820 --> 00:05:56.180
ask additional questions if they're
not relevant to today's subject.

90
00:05:56.180 --> 00:06:00.260
And then, I tweet sometimes,
actually I tweet all the time.

91
00:06:00.260 --> 00:06:02.260
I'm constantly tweeting all the time.

92
00:06:02.260 --> 00:06:06.890
So if you're interested in JavaScript,
React and how cute my dog is.

93
00:06:08.370 --> 00:06:11.240
I don't tweet about my dog too much.

94
00:06:11.240 --> 00:06:15.800
Okay, so the routine that we're gonna
go through is I'm gonna demo something,

95
00:06:15.800 --> 00:06:20.370
a principle or practice, and
well, this is a general routine,

96
00:06:20.370 --> 00:06:22.130
not all of them will follow this.

97
00:06:22.130 --> 00:06:24.350
But in general, I'll demo something.

98
00:06:24.350 --> 00:06:29.400
I'll introduce you to the exercise and
then set you loose on the exercise.

99
00:06:29.400 --> 00:06:33.660
I'll show you how to run the test and
everything to get that exercise going.

100
00:06:33.660 --> 00:06:36.970
If you can, pair program with
somebody on the exercise.

101
00:06:36.970 --> 00:06:40.460
You don't both have to be working
through the exercise on your computer.

102
00:06:40.460 --> 00:06:43.090
You can like be on one person's computer.

103
00:06:43.090 --> 00:06:47.210
So if you're interested in doing that,
I recommend it because it's a really great

104
00:06:47.210 --> 00:06:50.180
way for both of you to solidify
what you're understanding.

105
00:06:50.180 --> 00:06:53.770
You have to talk through what
your assumptions are, and

106
00:06:53.770 --> 00:06:56.100
you can correct each other's assumptions.

107
00:06:56.100 --> 00:07:00.389
So yeah, pair programming in the exercises
is a great way to solidify your

108
00:07:00.389 --> 00:07:01.783
understanding there.

109
00:07:01.783 --> 00:07:06.386
Make sure to fill out the elaboration,
that'll help you solidify things.

110
00:07:06.386 --> 00:07:10.678
For some of the exercises,
there's a bonus test that you can

111
00:07:10.678 --> 00:07:15.072
implement additional stuff,
implement additional tests.

112
00:07:15.072 --> 00:07:18.824
Look for opportunities to help others,
that will, so

113
00:07:18.824 --> 00:07:21.280
let me let you in on a little secret.

114
00:07:21.280 --> 00:07:23.562
So when I give these workshops,

115
00:07:23.562 --> 00:07:27.289
this is actually just a part
of my learning process.

116
00:07:27.289 --> 00:07:32.360
So I'm in the process of learning testing,
in the process of learning React and

117
00:07:32.360 --> 00:07:37.130
a really important part of my process
is to teach what I'm learning to other

118
00:07:37.130 --> 00:07:40.715
people, and
that's how I solidify my understanding.

119
00:07:40.715 --> 00:07:45.526
So I wouldn't have had nearly as much
experience with this stuff if I didn't

120
00:07:45.526 --> 00:07:48.618
have to prepare this
workshop to give to you all.

121
00:07:48.618 --> 00:07:53.097
And I wanna work really hard to make
sure that it's really great content.

122
00:07:53.097 --> 00:07:58.119
And so, when you try to take the things
that you've learned and teach it

123
00:07:58.119 --> 00:08:03.813
to other people, it will help solidify
that understanding in your mind as well,

124
00:08:03.813 --> 00:08:09.280
clear up some misconceived assumptions
that you have and that kind of thing.

125
00:08:09.280 --> 00:08:13.264
So if you notice somebody is struggling
with something, then look for

126
00:08:13.264 --> 00:08:14.962
an opportunity to help them.

127
00:08:14.962 --> 00:08:18.753
And if you notice something weird in the
repository, a typo or anything like that,

128
00:08:18.753 --> 00:08:20.283
feel free to make a pull request.

129
00:08:20.283 --> 00:08:24.715
It's totally open source and
several people have actually done that.

