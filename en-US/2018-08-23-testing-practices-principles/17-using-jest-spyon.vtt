WEBVTT

1
00:00:00.000 --> 00:00:06.376
&gt;&gt; Speaker 1: Sweet, so let's go ahead and
swap ourselves over to spy on.

2
00:00:06.376 --> 00:00:09.412
So I neglected to switch us
over to the right test, so

3
00:00:09.412 --> 00:00:12.180
hopefully that wasn't
too much of a struggle.

4
00:00:12.180 --> 00:00:16.321
I`ll hit P thumb-war.3.todo and

5
00:00:16.321 --> 00:00:22.668
then we're gonna actually just
get rid of this entirely.

6
00:00:22.668 --> 00:00:30.678
Then I'm gonna say swap that with
jest.spyOn/utils, 'getWinner').

7
00:00:30.678 --> 00:00:33.358
So I wanna say take this object and

8
00:00:33.358 --> 00:00:37.874
swap the getWinner property
on it with a mock function.

9
00:00:37.874 --> 00:00:41.739
But actually it just kind of
wraps the existing function.

10
00:00:41.739 --> 00:00:45.566
It's still going to continue to
call the underlying function.

11
00:00:45.566 --> 00:00:47.944
And in our case,
we wanna mock that entirely.

12
00:00:47.944 --> 00:00:50.489
It's making a network call or
whatever it's doing.

13
00:00:50.489 --> 00:00:55.411
And so now that that getWinner is
a mock function, it has a bunch of

14
00:00:55.411 --> 00:01:00.799
properties on it and one of those
is the mockImplementation property.

15
00:01:00.799 --> 00:01:02.688
So we'll say mockImplementation.

16
00:01:02.688 --> 00:01:04.787
We'll pass our mockImplementation to it.

17
00:01:04.787 --> 00:01:10.154
And now, instead of calling the actual
implementation or call a fake one.

18
00:01:10.154 --> 00:01:17.175
And then instead of here, we no longer
need to keep track of the original,

19
00:01:17.175 --> 00:01:21.610
we can say utils.getWinner.mockRestore.

20
00:01:21.610 --> 00:01:23.686
And everything should still be working.

21
00:01:23.686 --> 00:01:29.204
Let me go back and grab this assertion,
sorry, I missed out on that.

22
00:01:29.204 --> 00:01:32.641
But that should still
function as it had before.

23
00:01:36.257 --> 00:01:37.273
&gt;&gt; Speaker 1: Any questions?

24
00:01:40.055 --> 00:01:45.327
&gt;&gt; Speaker 1: All right, cool, so
the next thing that we're going to do.

25
00:01:47.175 --> 00:01:50.588
&gt;&gt; Speaker 1: That solves
the problem we talked about earlier.

26
00:01:50.588 --> 00:01:55.517
So right now even with
this jest.spyOn utils.

27
00:01:55.517 --> 00:01:59.584
Jest is now the one responsible for
modifying this utils objects.

28
00:01:59.584 --> 00:02:03.008
But it's not really an object it's more
of a namespace, an import namespace.

29
00:02:03.008 --> 00:02:07.026
And modifying things on an import
name space is a bad idea,

30
00:02:07.026 --> 00:02:09.328
it doesn't work with this spec.

31
00:02:09.328 --> 00:02:15.038
And so we need to change this and
jest actually has a mechanism for

32
00:02:15.038 --> 00:02:18.860
doing that built-in called jest.mock.

33
00:02:18.860 --> 00:02:23.637
And I've got just a little example of what
that looks like It's a relative to this

34
00:02:23.637 --> 00:02:26.321
file, relative to
the module we wanna mock.

35
00:02:26.321 --> 00:02:33.026
So spoiler alert, and then what
we want that module to look like.

36
00:02:33.026 --> 00:02:36.234
So a function that returns what
we want that module to look like.

37
00:02:36.234 --> 00:02:40.833
If we were to inline that module
right here what would it look like?

38
00:02:40.833 --> 00:02:46.263
We're going to swap out our
existing stuff with this api and

39
00:02:46.263 --> 00:02:50.941
now we're no longer busting
the US modules stuff.

40
00:02:50.941 --> 00:02:55.430
We're just using jest to
accomplish our purposes here.

41
00:02:55.430 --> 00:02:59.661
I'll explain a little bit more of how
it jest does what it's doing after

42
00:02:59.661 --> 00:03:00.585
our exercise.

43
00:03:00.585 --> 00:03:04.880
But for now I think you should have
everything you need to be successful here.

44
00:03:06.224 --> 00:03:11.439
&gt;&gt; Speaker 1: So let's go ahead and
I will hit the P key,

45
00:03:11.439 --> 00:03:14.721
thumb-war.4.todo.

46
00:03:14.721 --> 00:03:16.024
Get these tests running.

