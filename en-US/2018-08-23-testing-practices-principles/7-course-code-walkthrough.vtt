WEBVTT

1
00:00:00.000 --> 00:00:01.510
&gt;&gt; Kent C. Dodds: Okay, so, with that,

2
00:00:01.510 --> 00:00:05.285
this application is a combination
of a client and a server.

3
00:00:05.285 --> 00:00:09.077
The server is just an API server,
handles authentication as well.

4
00:00:09.077 --> 00:00:13.852
And then, the client is
a create react app application.

5
00:00:13.852 --> 00:00:17.008
Run npm run dev.

6
00:00:17.008 --> 00:00:21.805
Sorry, we're developing, we're not
actually running a production app.

7
00:00:21.805 --> 00:00:22.907
There we go.
That's why

8
00:00:22.907 --> 00:00:24.755
the thing didn't pop open for us.

9
00:00:24.755 --> 00:00:25.580
Full screen, there we go.

10
00:00:25.580 --> 00:00:30.767
Okay, so
now it's loading us with our fake data.

11
00:00:30.767 --> 00:00:34.813
So you should have I think about ten
posts from ten different users and

12
00:00:34.813 --> 00:00:38.596
now you should be able to log in
with til and the password's til.

13
00:00:38.596 --> 00:00:44.139
And then with that you should see
the users, username at the top.

14
00:00:44.139 --> 00:00:45.953
You'll see this plus button at the bottom.

15
00:00:45.953 --> 00:00:49.767
You can click on that and
actually add a post.

16
00:00:49.767 --> 00:00:53.078
So My Post, hey there!

17
00:00:53.078 --> 00:00:55.322
And stuff is cool.

18
00:00:55.322 --> 00:00:57.840
Whatever you wanna do there.

19
00:00:57.840 --> 00:01:01.989
And submit that and
you'll see your post up here at the top.

20
00:01:01.989 --> 00:01:07.608
And this is reminiscent of Twitter because
you can't delete or edit any posts.

21
00:01:07.608 --> 00:01:11.682
So that is actually,
I kind of intentionally left that, so

22
00:01:11.682 --> 00:01:16.167
you could add that if you wanted to and
try to do some TBD with that.

23
00:01:16.167 --> 00:01:20.479
Actually we have an exercise
to add delete to the API and

24
00:01:20.479 --> 00:01:24.525
then you could add that to
the client if you want to.

25
00:01:24.525 --> 00:01:27.435
So that's pretty much
the entire app right there.

26
00:01:27.435 --> 00:01:30.822
So there's user management.

27
00:01:30.822 --> 00:01:33.705
There's post that can be created.

28
00:01:33.705 --> 00:01:35.518
And then we can logout.

29
00:01:35.518 --> 00:01:39.224
And see other people's posts and stuff.

30
00:01:40.883 --> 00:01:45.500
&gt;&gt; Kent C. Dodds: So that's the app, and
for our first test, we're gonna be working

31
00:01:45.500 --> 00:01:50.456
in the authentication piece of the app,
so the authentication module.

32
00:01:50.456 --> 00:01:51.612
So you can close down the server,

33
00:01:51.612 --> 00:01:53.318
you don't need to have
this thing open anymore.

34
00:01:58.367 --> 00:02:03.497
&gt;&gt; Kent C. Dodds: And
to get started with this, we're gonna be

35
00:02:03.497 --> 00:02:09.844
in the server directory,
src, utils, and auth.js.

36
00:02:15.218 --> 00:02:20.026
&gt;&gt; Kent C. Dodds: And then the associated
test with this file is in auth.todo.

37
00:02:20.026 --> 00:02:22.457
If you look at auth.js,
that's the solution.

38
00:02:22.457 --> 00:02:27.746
Feel free to do that and reference it,
but we're gonna be working in auth.todo.

39
00:02:33.457 --> 00:02:38.686
&gt;&gt; Kent C. Dodds: Okay, so I'm gonna be
doing the first test, isPasswordAllowed,

40
00:02:38.686 --> 00:02:42.370
and then you'll be doing
the userToJSON test.

41
00:02:42.370 --> 00:02:46.772
If we look at the source code and
see what these things are doing.

42
00:02:46.772 --> 00:02:51.240
My is password allowed is
checking the passwords length.

43
00:02:51.240 --> 00:02:55.714
It's testing that the password has
at least a number and a non number.

44
00:02:55.714 --> 00:03:00.745
And that's pretty much all the stipulation
for our password validation.

45
00:03:00.745 --> 00:03:04.180
And then user to j.son
takes a user object.

46
00:03:04.180 --> 00:03:08.377
And then removes all this
unsafe properties from it, so

47
00:03:08.377 --> 00:03:14.114
we don't wanna send sort and hash and
other properties too, to the client.

48
00:03:14.114 --> 00:03:15.758
So we're turning that user into safety or
something.

49
00:03:15.758 --> 00:03:18.356
So that's what you will be testing all

50
00:03:18.356 --> 00:03:22.101
that I'm gonna be showing
you is task password alone.

51
00:03:22.101 --> 00:03:26.035
To learn this test

52
00:03:26.035 --> 00:03:31.023
you'll run npm test.

53
00:03:31.023 --> 00:03:34.111
And then let's explore this
watch mode here really quick,

54
00:03:34.111 --> 00:03:36.279
cuz you'll be getting used to this a lot.

55
00:03:36.279 --> 00:03:41.319
So watch mode is full of features,

56
00:03:41.319 --> 00:03:44.679
has some really cool stuff.

57
00:03:44.679 --> 00:03:48.639
My recommendation is actually
read the stuff that it's saying,

58
00:03:48.639 --> 00:03:51.811
don't ignore it,
because it's actually useful.

59
00:03:51.811 --> 00:03:55.885
Most of the time,
things are useful, read stuff.

60
00:03:55.885 --> 00:03:58.203
It's a good thing to learn to do.

61
00:03:58.203 --> 00:04:03.109
So, yeah, during watch mode,
the experience is entirely interactive.

62
00:04:03.109 --> 00:04:08.635
You actually type it in the terminal,
and it will change what's going on.

63
00:04:08.635 --> 00:04:11.216
So the most important lesson,

64
00:04:11.216 --> 00:04:16.584
any new vin user learns how to
quit cuz its not straightforward.

65
00:04:16.584 --> 00:04:20.195
In just watch mode you
just press q to quit.

66
00:04:20.195 --> 00:04:22.850
And then I'll start t up again.

67
00:04:22.850 --> 00:04:26.992
If you want to run us all
of the tests available.

68
00:04:26.992 --> 00:04:31.985
And you hit A and we've got clients
in server tests all running in

69
00:04:31.985 --> 00:04:36.907
parallel just spawns them all off and
they'll touch them all.

70
00:04:36.907 --> 00:04:39.469
So here once we're finished
with a test run, or

71
00:04:39.469 --> 00:04:43.581
even during a test run you can interrupt
a test run by hitting any character.

72
00:04:43.581 --> 00:04:48.609
So if I hit Enter to run things again and
I hit any other character like Q.

73
00:04:48.609 --> 00:04:51.303
It says test run was interrupted.

74
00:04:51.303 --> 00:04:52.934
They say press W to show more.

75
00:04:52.934 --> 00:04:57.734
And I can press o to only run
the test related to changed files,

76
00:04:57.734 --> 00:05:02.918
which is a sweet feature that we can
talk about later if you want to.

77
00:05:02.918 --> 00:05:09.857
What we're mostly interested in is press
P to filter by a file named regex pin.

78
00:05:09.857 --> 00:05:14.952
So you hit P, and
the file name regex pattern we want,

79
00:05:14.952 --> 00:05:20.516
the test we wanna run,
is auth.todo, auth.todo.js.

80
00:05:20.516 --> 00:05:26.196
And that is a regex, so
you could do escapes and stuff.

81
00:05:26.196 --> 00:05:27.792
Looks like we actually have two of those.

82
00:05:27.792 --> 00:05:33.792
So you could hit P again,
utils.*auth.todo.js.

83
00:05:33.792 --> 00:05:35.765
And then just from the one
you are interested in.

84
00:05:40.776 --> 00:05:43.084
&gt;&gt; Kent C. Dodds: Okay, cool.

85
00:05:43.084 --> 00:05:46.055
So just to recap, again,
this is where we are gonna want to be.

86
00:05:46.055 --> 00:05:49.143
So I am gonna start from scratch.

87
00:05:49.143 --> 00:05:54.767
You start MPM test,
you hit P and then utils,

88
00:05:54.767 --> 00:05:58.923
whoop, utils.*auth.todo.

89
00:05:58.923 --> 00:05:59.950
That should get you in this state.

