WEBVTT

1
00:00:00.000 --> 00:00:03.269
&gt;&gt; Speaker 1: Hopefully
that was exciting and fun.

2
00:00:03.269 --> 00:00:08.239
Let's go ahead and implement, or
walk through the solution here.

3
00:00:08.239 --> 00:00:14.525
And then we can, if you have any
questions about this, then please do ask.

4
00:00:14.525 --> 00:00:19.013
So we already had the database set up for
you, and

5
00:00:19.013 --> 00:00:24.501
then this test to get all the posts
that are in the database.

6
00:00:24.501 --> 00:00:29.095
These are actually unauthenticated
requests, so it's a fair amount easier.

7
00:00:29.095 --> 00:00:33.941
Some of the authenticated requests
have to do a little bit more,

8
00:00:33.941 --> 00:00:38.532
and we'll take a look at what
that looks like in a little bit.

9
00:00:38.532 --> 00:00:41.649
So, we have our post controller,

10
00:00:41.649 --> 00:00:46.277
the post controller we want
to I call getpost on it.

11
00:00:46.277 --> 00:00:49.782
That's an asynchronous method so
I'll await that and

12
00:00:49.782 --> 00:00:52.383
it also accepts a request and response.

13
00:00:52.383 --> 00:00:59.427
Here, let's pull that out just so
we can see that for sure, Oops.

14
00:00:59.427 --> 00:01:03.410
And so getpost and request response.

15
00:01:03.410 --> 00:01:07.978
It takes the [INAUDIBLE] and
calls JSON on it.

16
00:01:07.978 --> 00:01:12.190
So, we'll make the request
equal an empty object, and

17
00:01:12.190 --> 00:01:17.578
we'll make the response equal an object
that has a JSON just function.

18
00:01:19.497 --> 00:01:23.744
&gt;&gt; Speaker 1: And then, we wait for
the getPost to resolve.

19
00:01:23.744 --> 00:01:30.563
And then, we can make our assertions
we'll expect Json to have and

20
00:01:30.563 --> 00:01:35.990
call times once, and
expect res jason, we could,

21
00:01:35.990 --> 00:01:41.312
yeah, to have been called
with an array of posts.

22
00:01:41.312 --> 00:01:46.206
And these need to be the posts
that are in the database.

23
00:01:46.206 --> 00:01:51.323
So let's go ahead and
retrieve those from the database

24
00:01:51.323 --> 00:01:55.997
say allPost await db.getpost and
actualy we'll

25
00:01:55.997 --> 00:02:00.799
just say this is an object
that has a post property.

26
00:02:00.799 --> 00:02:05.353
Okay, great it's always kind of freaks me
out when I make a bunch of changes and

27
00:02:05.353 --> 00:02:08.045
it says they're still passing and
like wait.

28
00:02:08.045 --> 00:02:11.854
So you'll want to not make sure that.

29
00:02:11.854 --> 00:02:17.593
And actually if you like it's this
gigantic amount of information

30
00:02:17.593 --> 00:02:23.340
that's generated every time you
hit the database, kind of cool.

31
00:02:23.340 --> 00:02:30.334
Okay so that is working and that's
pretty much everything that you need for

32
00:02:30.334 --> 00:02:36.896
that functionality for you to be
confident enough in functionality.

33
00:02:36.896 --> 00:02:42.397
Okay so the integration test that we
gonna write in a little bit are a little

34
00:02:42.397 --> 00:02:47.201
more involved and you will need
some more time for the exercise.

35
00:02:47.201 --> 00:02:52.404
So, given the time constraints,
that´s actually why I only had to

36
00:02:52.404 --> 00:02:57.623
do this one test, so that we can
move on to the integration portion.

37
00:02:57.623 --> 00:03:02.084
So I´m gonna show you what
these tests look like and

38
00:03:02.084 --> 00:03:06.241
then, I´ll actually copy
over a couple Test.

39
00:03:06.241 --> 00:03:13.308
And we'll give a look at those and
talk about test object factories.

40
00:03:13.308 --> 00:03:17.401
So actually I'll do the users
other than the post.

41
00:03:17.401 --> 00:03:24.436
So when you get the all the users test,
I'll just do these.

42
00:03:26.608 --> 00:03:28.341
&gt;&gt; Speaker 1: And paste those in there.

43
00:03:30.085 --> 00:03:33.803
&gt;&gt; Speaker 1: Okay, and this one is
identical to that one we had before.

44
00:03:33.803 --> 00:03:38.169
Okay so,
we're gonna need a couple extra things.

45
00:03:40.003 --> 00:03:41.183
&gt;&gt; Speaker 1: Yeah.

46
00:03:43.513 --> 00:03:45.340
&gt;&gt; Speaker 1: And this request and

47
00:03:45.340 --> 00:03:50.294
response I'm gonna be coming
from some other things.

48
00:03:55.212 --> 00:04:00.279
&gt;&gt; Speaker 1: And here why don't we for
illustration purposes we'll

49
00:04:00.279 --> 00:04:05.236
in line all of our properties here and
request params,

50
00:04:05.236 --> 00:04:10.298
put this up here, sorry,
in retrospective you to go if I

51
00:04:10.298 --> 00:04:15.616
had this all set up ahead of time,
so I apologize for that.

52
00:04:15.616 --> 00:04:21.959
Direct our buyers going to be right here.

53
00:04:21.959 --> 00:04:28.026
Okay, let me put this right there.

