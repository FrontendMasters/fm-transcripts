WEBVTT

1
00:00:00.000 --> 00:00:02.625
Now this actually isn't enough either,

2
00:00:02.625 --> 00:00:08.034
we also have to think about the health of
specific characteristics of your adoption.

3
00:00:08.034 --> 00:00:11.329
So, I like to think about this,
I just call these health metrics.

4
00:00:11.329 --> 00:00:14.611
And so, there needs to be
a set of health scores, for

5
00:00:14.611 --> 00:00:19.771
specific metrics that you care about,
that are important to your organization.

6
00:00:19.771 --> 00:00:24.729
So I'll give you a couple examples,
if the version of the design system that's

7
00:00:24.729 --> 00:00:27.397
in use is a really
important metric to you.

8
00:00:27.397 --> 00:00:31.192
Then you might determine that
there's a grade you can assign,

9
00:00:31.192 --> 00:00:32.629
to the system version.

10
00:00:32.629 --> 00:00:36.433
So if somebody is using the current
version, they're getting a grade A.

11
00:00:36.433 --> 00:00:40.208
If they're using the current
version back one,

12
00:00:40.208 --> 00:00:45.007
they get a grade B, anything two or
older is a grade C, right?

13
00:00:45.007 --> 00:00:49.186
Again, this is just an example and you
may not care as much about the version of

14
00:00:49.186 --> 00:00:53.000
the system, perhaps you do,
your versioning by component, right.

15
00:00:53.000 --> 00:00:54.883
So maybe there's a different metric for
you.

16
00:00:54.883 --> 00:00:59.672
But what you're getting at,
is a specific metric that we wanna track

17
00:00:59.672 --> 00:01:03.733
the health of across those
different levels of adoption.

18
00:01:03.733 --> 00:01:07.260
Another example might
be product coverage so

19
00:01:07.260 --> 00:01:10.519
how much of a product is using the system.

20
00:01:10.519 --> 00:01:14.004
So 75% or more of my product
is built using the system,

21
00:01:14.004 --> 00:01:16.411
that's phenomenal that's a grade A.

22
00:01:16.411 --> 00:01:20.057
50 to 75, maybe is a B,
so on and so forth.

23
00:01:20.057 --> 00:01:27.025
And so again, there may be a handful of
these health metrics, that you define.

24
00:01:27.025 --> 00:01:30.104
and these are gonna grow and
change as your system does and

25
00:01:30.104 --> 00:01:32.040
as your organization does, okay?

26
00:01:32.040 --> 00:01:34.495
So don't make these set in stone, but

27
00:01:34.495 --> 00:01:38.730
this is how you get at a much more
nuanced definition of adoption.

28
00:01:38.730 --> 00:01:44.343
That also gives people a vision of how
they can come on board as subscribers,

29
00:01:44.343 --> 00:01:47.952
and tracks the health of
all of those adoptions.

30
00:01:47.952 --> 00:01:52.482
I will say it's really
hard to track this stuff.

31
00:01:52.482 --> 00:01:56.183
And there are all kinds of articles
out there, if you just Google, like,

32
00:01:56.183 --> 00:01:58.582
how do I track design system adoption,
right.

33
00:01:58.582 --> 00:01:59.858
You're gonna get a lot of stuff.

34
00:01:59.858 --> 00:02:04.648
And probably 80% of that Is
like somebody who's written

35
00:02:04.648 --> 00:02:07.536
a little open source code scraper.

36
00:02:07.536 --> 00:02:12.396
That goes out and looks at repos looks for
includes of your design system

37
00:02:12.396 --> 00:02:16.459
components in product production
code bases or whatever.

38
00:02:16.459 --> 00:02:21.630
That's great but
that's a tiny slice of adoption, okay?

39
00:02:21.630 --> 00:02:24.584
That's one discipline that's
a developer somewhere that and

40
00:02:24.584 --> 00:02:26.880
all that means is they
included it in their code.

41
00:02:26.880 --> 00:02:28.850
It doesn't actually mean
they necessarily use it.

42
00:02:28.850 --> 00:02:30.161
[LAUGH] That much, right?

43
00:02:30.161 --> 00:02:34.842
So, what we need to recognize is
that adoption can happen across

44
00:02:34.842 --> 00:02:36.326
every discipline.

45
00:02:36.326 --> 00:02:38.540
So I'm interested in understanding,

46
00:02:38.540 --> 00:02:41.430
how are my product owners
using the design system?

47
00:02:41.430 --> 00:02:46.336
How are my UX writers using the design
system, how are my front-end designers,

48
00:02:46.336 --> 00:02:49.385
front-end developers
using the design system?

49
00:02:49.385 --> 00:02:53.035
QA, right I mean, one place for
all of these things,

50
00:02:53.035 --> 00:02:57.593
to show me exactly how they should
look and feel thats a Q&amp;A dream.

51
00:02:57.593 --> 00:03:02.159
They should be loving this work, so
how do we think about adoption in a much

52
00:03:02.159 --> 00:03:06.075
more perspective I want to think
about all those disciplines.

53
00:03:06.075 --> 00:03:09.987
Anybody who's Java it is is to touch and
interact with,

54
00:03:09.987 --> 00:03:15.081
how we get those interfaces out into
the open should be considered here.

55
00:03:15.081 --> 00:03:18.629
And of course it's not enough,
to track it.

56
00:03:18.629 --> 00:03:23.418
You also have to maintain it
this is really hard, okay.

57
00:03:23.418 --> 00:03:28.464
As far as I can tell my best sort of
like just based on the interviews and

58
00:03:28.464 --> 00:03:33.954
stuff the best advice that I can give
you in terms of maintaining adoption.

59
00:03:33.954 --> 00:03:37.539
Is actually more about building
trust with your subscribers, right?

60
00:03:37.539 --> 00:03:43.965
This is trust built with communication,
with consistency and with transparency.

61
00:03:43.965 --> 00:03:47.442
The example I think is like easy is
when we were talking earlier about

62
00:03:47.442 --> 00:03:50.675
synchronization, keeping all
these assets in sync, right,

63
00:03:50.675 --> 00:03:53.118
so I have a figma file
that's got a button in it.

64
00:03:53.118 --> 00:03:55.572
I've got a react component
that has a button.

65
00:03:55.572 --> 00:03:56.646
I've got an angular,

66
00:03:56.646 --> 00:04:00.044
that's got I have a prototype maybe
something inure that's a button.

67
00:04:00.044 --> 00:04:04.217
All of these things are different assets,
different tangible pieces and

68
00:04:04.217 --> 00:04:08.333
parts that different discipline needs
to do their work, with a button.

69
00:04:08.333 --> 00:04:11.576
So now I've got four different versions
of this thing out there, this button.

70
00:04:11.576 --> 00:04:15.374
So when I make a change in one, how do
I make sure we're synchronizing that

71
00:04:15.374 --> 00:04:17.475
across all of these assets that we have.

72
00:04:17.475 --> 00:04:22.903
so I can guarantee you your assets
are never gonna always be in sync.

73
00:04:22.903 --> 00:04:26.932
It's next to impossible to do that,
especially as you scale.

74
00:04:26.932 --> 00:04:31.444
So what you have to do, and this is
a way that you maintain that trust.

75
00:04:31.444 --> 00:04:36.719
Is you're really good with transparency
about the state of those components,

76
00:04:36.719 --> 00:04:37.276
right?

77
00:04:37.276 --> 00:04:42.734
So what, we're talking about is, again,
closing the gap between their expectation,

78
00:04:42.734 --> 00:04:46.318
when they use the thing and
the reality of using the thing.

79
00:04:46.318 --> 00:04:51.381
I want to be clear and say, actually
this button in React is in the backlog

80
00:04:51.381 --> 00:04:55.959
to be updated for a new version but,
we'll support that change.

81
00:04:55.959 --> 00:04:57.492
If you decide to integrate this,

82
00:04:57.492 --> 00:05:00.028
will help you with the migration
up to the new version.

83
00:05:00.028 --> 00:05:02.256
But, you got to let them know
that's what they're getting.

84
00:05:02.256 --> 00:05:05.460
So, that they don't get the Figma thing,
see I'm gonna use the button to use

85
00:05:05.460 --> 00:05:08.137
the button and then it's not what
they saw in the Figma, right.

86
00:05:08.137 --> 00:05:10.231
Now you're creating tension and
you're breaking trust.

87
00:05:10.231 --> 00:05:13.788
So that's kind of what we need to do here.

88
00:05:13.788 --> 00:05:17.315
I'll also say in terms
of tracking this stuff,

89
00:05:17.315 --> 00:05:21.206
there is no tool that does all of this for
you, okay?

90
00:05:21.206 --> 00:05:23.321
I mean, I wish that I could tell you,

91
00:05:23.321 --> 00:05:26.270
it existed you just have to install it and
it works.

92
00:05:26.270 --> 00:05:31.035
But we're literally talking about,
tracking all these different nuances.

93
00:05:31.035 --> 00:05:36.540
Of different usage and different tools,
I mean this is not simple to do.

94
00:05:36.540 --> 00:05:39.840
And so,
early on you can't do all of these, right?

95
00:05:39.840 --> 00:05:44.910
You need to pick one simple path, and you
need to choose a couple metrics of health.

96
00:05:44.910 --> 00:05:49.764
And that might be a very manual process
early on, where maybe once a quarter.

97
00:05:49.764 --> 00:05:53.620
By sending a few emails to ask few
folks how things are going, right,

98
00:05:53.620 --> 00:05:55.362
it can be that simple early on.

99
00:05:55.362 --> 00:05:56.155
But over time,

100
00:05:56.155 --> 00:05:59.693
you can start to develop some more
tools to do these things there are.

101
00:05:59.693 --> 00:06:02.549
There's obviously an API and
figma that lets you see some of this,

102
00:06:02.549 --> 00:06:04.079
there's even analytics in figma.

103
00:06:04.079 --> 00:06:08.170
So you can do some work to kind of pull
the data you get from a specific tool.

104
00:06:08.170 --> 00:06:11.693
Maybe some of the code scraping things
combined with that combined with some

105
00:06:11.693 --> 00:06:13.022
pulse surveys or whatever.

106
00:06:13.022 --> 00:06:17.937
I will get you to a place where you can
report on the health of your adoption,

107
00:06:17.937 --> 00:06:20.054
across these different tiers.

108
00:06:20.054 --> 00:06:26.991
And then I'll just cover one other concept
here in stage two, which is super common.

109
00:06:26.991 --> 00:06:29.959
And I have heard so
many stories from folks,

110
00:06:29.959 --> 00:06:34.221
who have been in this what I just
call a teeter totter maturity.

111
00:06:34.221 --> 00:06:39.051
They've been in this problem where they
get Stage 2, and they do all this work and

112
00:06:39.051 --> 00:06:41.991
they feel like they've
got good adoption level,

113
00:06:41.991 --> 00:06:44.667
they have a good
understanding of adoption.

114
00:06:44.667 --> 00:06:48.835
And then all of a sudden they're in
Stage 3, working on other problems and

115
00:06:48.835 --> 00:06:51.284
pretty quickly they see adoption fall off,

116
00:06:51.284 --> 00:06:55.344
and they fall back into almost crisis
mode, like how do we fix adoption?

117
00:06:55.344 --> 00:06:58.565
And so
this is a very normal experience, and

118
00:06:58.565 --> 00:07:03.017
It's really frustrating and
a lot of folks end up giving up.

119
00:07:03.017 --> 00:07:06.739
And in fact, we were talking
a little bit about Dan Moll earlier,

120
00:07:06.739 --> 00:07:09.866
he's got a great talk on
the design system graveyard.

121
00:07:09.866 --> 00:07:13.069
Which is a real thing,
a lot of our clients are on their fifth or

122
00:07:13.069 --> 00:07:14.129
sixth attempt now.

123
00:07:14.129 --> 00:07:16.777
And that's probably because of
something like this, right?

124
00:07:16.777 --> 00:07:20.049
Where they get into here and
they just they can't get people to adopt.

125
00:07:20.049 --> 00:07:24.533
Or they do for a while and then they
stop using it or something happens,

126
00:07:24.533 --> 00:07:27.047
it's a really frustrating scenario.

127
00:07:29.219 --> 00:07:33.377
As best as I can tell that this happens
because the same team that was so

128
00:07:33.377 --> 00:07:37.479
focused on releasing that first
version of the system in stage one.

129
00:07:37.479 --> 00:07:43.151
Is now being asked to figure out how to
make the system really easy to adopt.

130
00:07:43.151 --> 00:07:47.111
They're being asked to learn how
to provide really good trust,

131
00:07:47.111 --> 00:07:51.014
building customer support,
to their existing subscribers.

132
00:07:51.014 --> 00:07:57.252
And it's a new system, so it's gonna
need support, that is a big job, right?

133
00:07:57.252 --> 00:07:59.870
Customer support for
design systems is a big job.

134
00:07:59.870 --> 00:08:03.584
And almost nobody has that role on
their teams, especially in stage two.

135
00:08:03.584 --> 00:08:06.893
And we're also saying you gotta
continue to add new features, and

136
00:08:06.893 --> 00:08:08.441
fix all the bugs that surface.

137
00:08:08.441 --> 00:08:10.994
And I mean we're just asking
too much of these folks.

138
00:08:10.994 --> 00:08:15.500
So in the face of all of that work,
it's really easy to

139
00:08:15.500 --> 00:08:20.318
leave off of all the stuff that
will make it easy to adopt.

140
00:08:20.318 --> 00:08:22.738
We just push it aside, and we just think,

141
00:08:22.738 --> 00:08:25.307
I've got this fire I got to put out,
right?

142
00:08:25.307 --> 00:08:30.410
But that means that you're spending a lot
of time supporting new adoptions, right.

143
00:08:30.410 --> 00:08:35.270
Instead of evolving the system in
a way that sort of codifies that

144
00:08:35.270 --> 00:08:40.131
ease of adoption automating
the adoption process in some ways.

145
00:08:40.131 --> 00:08:45.234
You're gonna have to take the time
until you take the time to make

146
00:08:45.234 --> 00:08:50.070
it easy to adopt it's really hard for
that to actually last.

