WEBVTT

1
00:00:00.160 --> 00:00:04.100
&gt;&gt; Mike North: So these are great, and
there's a new player on the scene for

2
00:00:04.100 --> 00:00:08.500
measuring progressive web apps,
and it is called Lighthouse.

3
00:00:08.500 --> 00:00:12.303
So, this is a Chrome extension that you
can install if you haven't installed it

4
00:00:12.303 --> 00:00:13.849
yet, please go ahead and do so.

5
00:00:13.849 --> 00:00:18.949
And the idea is that it will audit
your performance, and it will look for

6
00:00:18.949 --> 00:00:23.369
the presence of, metadata and
the ability to go offline, and

7
00:00:23.369 --> 00:00:28.570
the ability to make sure that
you're serving your app securely.

8
00:00:28.570 --> 00:00:31.929
And it boils that all down into
a score out of a hundred and

9
00:00:31.929 --> 00:00:36.720
now I believe they give you four scores
they separate out sort of performance and

10
00:00:36.720 --> 00:00:41.610
best practices and accessibility and
then progressive web app specific stuff.

11
00:00:41.610 --> 00:00:49.526
So this is enough of an official tool
that it ships with Chrome 61 for free.

12
00:00:49.526 --> 00:00:54.364
So if you have a Chrome Canary and you
turn on like developer tool experiments

13
00:00:54.364 --> 00:00:58.143
it's a Chrome flag,
you will see that in the Audit's tab,

14
00:00:58.143 --> 00:01:02.010
you can actually launch
Lighthouse right from there.

15
00:01:02.010 --> 00:01:05.591
You don't have to install
an extension anymore,

16
00:01:05.591 --> 00:01:10.545
so it is a big part of what we do,
all the time, this is a very new tool.

17
00:01:10.545 --> 00:01:14.788
This is a very old tool that
is still incredibly useful,

18
00:01:14.788 --> 00:01:20.046
webpagetest.org, and I think this
is a Steve Soders project here.

19
00:01:20.046 --> 00:01:24.865
It's been around for minimum,
ten years, the big benefit here,

20
00:01:24.865 --> 00:01:30.374
the reason why it is still incredibly
relevant, other than really breaking

21
00:01:30.374 --> 00:01:35.452
down the order in which resources
are loaded, and what's blocking,

22
00:01:35.452 --> 00:01:40.900
and all of the pitfalls of HTTP1 that
we hit, and we'll talk about later?

23
00:01:40.900 --> 00:01:45.684
The main thing that it allows,
is we can test under real

24
00:01:45.684 --> 00:01:51.097
network conditions, and
with real devices in a device form.

25
00:01:51.097 --> 00:01:55.806
So you could say I wanna test
with Motorola X phone and

26
00:01:55.806 --> 00:01:59.560
use this data center in Dallas Virginia.

27
00:01:59.560 --> 00:02:03.522
And you're not running
everything on local host you're

28
00:02:03.522 --> 00:02:06.492
actually that real like SSL handshakes and

29
00:02:06.492 --> 00:02:11.620
real conditions that are much closer
to what your users will experience.

30
00:02:11.620 --> 00:02:16.579
So, additionally you get the same kinda
filmstrip and you can even turn this

31
00:02:16.579 --> 00:02:21.381
into an animated gif so you can sort
of play a couple side by side, and see,

32
00:02:21.381 --> 00:02:25.333
periodically over time you might
ship a change and then see,

33
00:02:25.333 --> 00:02:30.090
all right, is this making things better or
is this making things worse.

34
00:02:30.090 --> 00:02:34.647
On the bottom you can see a big
breakdown of exactly what's

35
00:02:34.647 --> 00:02:38.553
being downloaded, and
these vertical lines here

36
00:02:38.553 --> 00:02:43.300
they represent important
milestones like the DOM is ready.

37
00:02:43.300 --> 00:02:46.834
Right, you'll get a nice
vertical line there, so

38
00:02:46.834 --> 00:02:51.940
this is a really nice visual way to
track things and it is completely free.

39
00:02:51.940 --> 00:02:55.983
The only downside is you have to wait in
line sometimes, for a couple minutes,

40
00:02:55.983 --> 00:02:59.060
you're sort of in the queue,
and then your page is tested.

41
00:02:59.060 --> 00:03:03.620
And it must be a public URL, at least
to use the one that's hosted on this

42
00:03:03.620 --> 00:03:07.877
domain if your working at
an organization that has a firewall, and

43
00:03:07.877 --> 00:03:12.604
you're not allowed to have public
URLs to hit your staging environment.

44
00:03:12.604 --> 00:03:16.725
It's open source you can
host it yourself and

45
00:03:16.725 --> 00:03:22.472
you can setup a little virtual
machine behind your firewall and

46
00:03:22.472 --> 00:03:25.740
it is yours to do with what you like.

47
00:03:25.740 --> 00:03:29.094
And ultimately at the end,
you get a letter grade,

48
00:03:29.094 --> 00:03:33.230
which is even more course
judgement than a score out of 100.

49
00:03:33.230 --> 00:03:37.721
You can see that Steve's
dinosaur JS .org domain,

50
00:03:37.721 --> 00:03:42.325
that could use a little help
when it comes to caching.

51
00:03:42.325 --> 00:03:43.125
&gt;&gt; Steve: Little bit of caching.

52
00:03:43.125 --> 00:03:46.285
&gt;&gt; Mike North: You gotta do better,
Steve, better work on that.

53
00:03:46.285 --> 00:03:49.303
And then, looks like he's not using a CDN,

54
00:03:49.303 --> 00:03:53.150
again almost everyone's
going to have problems here.

55
00:03:53.150 --> 00:03:57.300
If you get all As, it's because it's
an example that is designed to get all As.

56
00:03:57.300 --> 00:04:01.860
LinkedIn.com is going to have issues here,
Google's gonna have issues here.

