WEBVTT

1
00:00:00.210 --> 00:00:01.560
&gt;&gt; Mike North: I'm actually
gonna go through and

2
00:00:01.560 --> 00:00:03.390
make sure we're all set up here.

3
00:00:03.390 --> 00:00:07.470
I'm gonna sort of explain
the set up process bit by bit.

4
00:00:07.470 --> 00:00:09.726
Some of this is covered in the README.

5
00:00:09.726 --> 00:00:12.657
But just in case some
people are having issues,

6
00:00:12.657 --> 00:00:16.330
I wanna make sure we're not
leaving anyone out in the cold.

7
00:00:20.219 --> 00:00:24.359
&gt;&gt; Mike North: All right, so the first
thing we need,let me clear everything out.

8
00:00:24.359 --> 00:00:27.629
So I can do npm run clean, and

9
00:00:27.629 --> 00:00:32.230
that's gonna get rid of everything.

10
00:00:32.230 --> 00:00:33.320
And you'll see here,

11
00:00:33.320 --> 00:00:38.720
if we had looked before I had
a dist folder here, I still do.

12
00:00:38.720 --> 00:00:41.979
So the only thing that's left is a couple
of certs, I can get rid of those in fact.

13
00:00:46.954 --> 00:00:49.790
&gt;&gt; Mike North: All right, great.

14
00:00:49.790 --> 00:00:53.510
So there's nothing in my desk folder,
the folder exists, that's it.

15
00:00:53.510 --> 00:00:58.720
The first thing we wanna do is we
wanna generate some certificates.

16
00:00:58.720 --> 00:01:03.379
And there are some shortcuts
that I have in the README.

17
00:01:03.379 --> 00:01:08.019
But I'm gonna show you how to actually
keep these commands only using node in

18
00:01:08.019 --> 00:01:11.740
case you're having some
issue with those scripts.

19
00:01:11.740 --> 00:01:15.430
So the main file that's
sort of the entry point for

20
00:01:15.430 --> 00:01:17.465
the cli stuff we're working with is here.

21
00:01:17.465 --> 00:01:23.408
Server/cli/cli.js, so
we wanna run it like this we can say,

22
00:01:23.408 --> 00:01:27.490
node and
then follow it with that file name.

23
00:01:27.490 --> 00:01:33.116
And what we get out is this sort of
this little documentation here and

24
00:01:33.116 --> 00:01:37.369
you can see we've got
a couple commands we can run.

25
00:01:37.369 --> 00:01:39.030
We've got help as one of those commands,

26
00:01:39.030 --> 00:01:42.000
which will just do what you're
seeing on the screen, here.

27
00:01:42.000 --> 00:01:44.690
But I'm interested in
generating some certificates,

28
00:01:44.690 --> 00:01:47.530
so I'm just gonna add that as
an argument to the end here.

29
00:01:50.570 --> 00:01:57.439
And in my dist folder, [SOUND] let me
make sure that's working properly.

30
00:02:01.288 --> 00:02:02.560
&gt;&gt; Mike North: Here they are.

31
00:02:02.560 --> 00:02:05.720
So here my certificates
that were just generated.

32
00:02:05.720 --> 00:02:08.990
And now, I will convince you
that this is really happening.

33
00:02:08.990 --> 00:02:15.470
Delete, Delete, and
let's generate them again.

34
00:02:17.200 --> 00:02:18.910
There we go, okay, so

35
00:02:19.930 --> 00:02:24.620
you may need certificates when
working with your web application.

36
00:02:24.620 --> 00:02:25.640
And this is, for

37
00:02:25.640 --> 00:02:30.460
many developers, the first time they're
dealing with certificate generation.

38
00:02:30.460 --> 00:02:34.420
You have to be very, very,
very careful about this.

39
00:02:34.420 --> 00:02:40.530
If you trust some strange certificate,
like someone hands you a certificate

40
00:02:40.530 --> 00:02:44.120
authority, and they say like,
just use this for development purposes.

41
00:02:44.120 --> 00:02:46.380
We're gonna all share to
the certificate authority.

42
00:02:46.380 --> 00:02:49.910
Whoever has that private
key they can observe and

43
00:02:49.910 --> 00:02:55.600
tamper with any HTTPS traffic
that you send from your machine.

44
00:02:55.600 --> 00:02:59.600
So if you trust a certificate authority
you're handing over the keys for

45
00:02:59.600 --> 00:03:03.860
all of your privacy, and all of your
security, including your online banking.

46
00:03:03.860 --> 00:03:05.930
So be really careful about that.

47
00:03:05.930 --> 00:03:09.390
The way this is working there's a piece
of software here called devcert,

48
00:03:09.390 --> 00:03:13.250
that generates a certificate of
authority on each of your machines.

49
00:03:13.250 --> 00:03:16.879
Nobody has that key except you,
we're not sharing anything at all.

50
00:03:16.879 --> 00:03:20.616
And then, what happens is any
app that needs a certificate,

51
00:03:20.616 --> 00:03:24.220
they'll generate their own
like sign by that authority.

52
00:03:24.220 --> 00:03:27.606
And in this case it's one that's
gonna expire in 14 days, and

53
00:03:27.606 --> 00:03:29.999
then he would just have
to generate a new one.

54
00:03:29.999 --> 00:03:34.871
But it's sort like an expiration date,
that means, even after this

55
00:03:34.871 --> 00:03:39.750
workshop is done, if someone gets
it a year from now, it is useless.

56
00:03:39.750 --> 00:03:43.520
So that's what we've got here,
we're generating the certificates.

57
00:03:44.770 --> 00:03:46.410
And I'm just gonna look
at my commands here,

58
00:03:46.410 --> 00:03:49.080
to make sure I'm not skipping any steps.

59
00:03:49.080 --> 00:03:54.455
So we're gonna run this
prepvapid command as well.

60
00:03:54.455 --> 00:03:58.320
Vapid-keys are necessary for web push.

61
00:03:58.320 --> 00:04:02.460
So if you wanted to just
copy the right hand side of

62
00:04:02.460 --> 00:04:05.220
line 24 here in package JSON run that.

63
00:04:06.360 --> 00:04:11.440
You should see in your private folder
you have this vapid.json thing here.

64
00:04:11.440 --> 00:04:16.050
I'm not going to click on it because that
is, there is something secret in there and

65
00:04:16.050 --> 00:04:17.920
it is in JSON.

66
00:04:17.920 --> 00:04:18.960
You would see my private key,

67
00:04:18.960 --> 00:04:22.850
you would be able to send my machine,
push notifications.

68
00:04:25.150 --> 00:04:29.330
The next thing we're gonna do, so
we've already generated the certs here,

69
00:04:29.330 --> 00:04:32.900
we're going to run this command here.

70
00:04:32.900 --> 00:04:36.240
Essentially, what that's doing is
clearing out any certificates that were

71
00:04:36.240 --> 00:04:37.070
there before.

72
00:04:37.070 --> 00:04:41.047
So you wanna come back in 14 days,
the certificate's invalid,

73
00:04:41.047 --> 00:04:43.970
the browser is giving you
all sorts of warnings.

74
00:04:43.970 --> 00:04:47.190
You just want a clean slate,
so you could just do that.

75
00:04:47.190 --> 00:04:50.210
So we're getting rid of dist,
get ourselves a clean slate.

76
00:04:50.210 --> 00:04:54.000
And then finally, all we're doing is
copying these certificates and the dist.

77
00:04:54.000 --> 00:04:57.260
It seems like a couple
little backflips here, but

78
00:04:57.260 --> 00:05:02.770
one of the limitations of our HTTP2 server
is we basically can point it at a folder.

79
00:05:02.770 --> 00:05:09.070
And it's gonna look for a key and
a certificate of a particular name, and we

80
00:05:09.070 --> 00:05:13.780
have to set things up just right, so the
stars align perfectly so that it works.

81
00:05:15.030 --> 00:05:19.829
So now we finished this prepcerts step,
and

82
00:05:19.829 --> 00:05:22.690
I also wanna get on video.

83
00:05:25.340 --> 00:05:29.607
I'm using node 7.10 not 7.1.0,

84
00:05:29.607 --> 00:05:34.020
it is 7.10.0, so
there are some features that were

85
00:05:34.020 --> 00:05:39.200
using their that require you to have
a relatively recent version of node.

86
00:05:39.200 --> 00:05:42.630
At least this recent you may be able
to get away with with an older version.

87
00:05:44.130 --> 00:05:51.430
And then we are going to,
I just wanna start the UI, right?

88
00:05:51.430 --> 00:05:53.660
So there are two components
in this project here.

89
00:05:54.860 --> 00:05:58.770
You can see we've got a client folder,
so that's our little React App.

90
00:05:58.770 --> 00:06:03.170
And our server folder down here,
that's a little node.js,

91
00:06:03.170 --> 00:06:06.040
JSON API, and
we've even got a little database here.

92
00:06:06.040 --> 00:06:12.290
But let's just make sure that this, oops,
let's make sure that the UI starts up.

93
00:06:14.680 --> 00:06:21.770
We'll just do npm run watch, so
this does not start the API, okay?

94
00:06:21.770 --> 00:06:25.211
So this looks good, and
if I were to then visit this URL.

95
00:06:27.370 --> 00:06:29.900
&gt;&gt; Mike North: I should see
something that looks like the app.

96
00:06:29.900 --> 00:06:32.640
This is exactly what you
should be seeing right now.

97
00:06:32.640 --> 00:06:37.490
Ajax requests are failing at the moment,
our API is not there to satisfy them.

98
00:06:37.490 --> 00:06:40.179
But this is how you know
that the webpack and

99
00:06:40.179 --> 00:06:43.320
the React side of things
are operating as usual.

100
00:06:43.320 --> 00:06:49.510
And you also may notice that I currently
have to trust this certificate.

101
00:06:49.510 --> 00:06:54.820
Now if you are getting a certificate
warning here, there are a couple of ways

102
00:06:54.820 --> 00:07:01.330
to get buy it, like most browsers offer
means to ignore that specific certificate.

103
00:07:01.330 --> 00:07:08.262
If I were to open it up in Safari here,
I can actually click on this lock,

104
00:07:08.262 --> 00:07:12.307
show the certificate, and I mean sorry,

105
00:07:12.307 --> 00:07:17.293
let me make it a little bit easier for
people to see.

106
00:07:17.293 --> 00:07:21.959
Display,
&gt;&gt; Mike North: Scaled

107
00:07:21.959 --> 00:07:27.575
perfect,
&gt;&gt; Mike North: So

108
00:07:27.575 --> 00:07:33.945
there's this Trust area here,
and if I did not trust it,

109
00:07:33.945 --> 00:07:42.260
I would have the ability to go ahead,
and opt in or opt out of that.

110
00:07:42.260 --> 00:07:44.280
So it's already tested for all users.

111
00:07:44.280 --> 00:07:48.260
I'm using system default here, but on
a Mac you should be able to visit this and

112
00:07:48.260 --> 00:07:49.240
sort of opt in.

113
00:07:49.240 --> 00:07:53.340
This is that certificate authority
that you've signed and trusted.

114
00:07:53.340 --> 00:07:56.715
And this is the disposable certificate,
that is a,

115
00:07:56.715 --> 00:08:01.850
it looks like I have my expiration date
wrong, but we will fix that later on.

116
00:08:03.870 --> 00:08:04.571
All right, so

117
00:08:04.571 --> 00:08:09.996
now that we know that that works,
&gt;&gt; Mike North: Let's

118
00:08:09.996 --> 00:08:11.210
try to run the whole thing.

119
00:08:11.210 --> 00:08:16.300
And the way we'll run the whole thing is,
going back to that cli command here.

120
00:08:16.300 --> 00:08:21.940
And you may be able to just
do ./run serve, right?

121
00:08:21.940 --> 00:08:24.290
That will work for most of you.

122
00:08:24.290 --> 00:08:29.230
If that doesn't work, if I haven't done
my Windows due diligence properly,

123
00:08:29.230 --> 00:08:32.370
we'll just go back to that cli thing here.

124
00:08:32.370 --> 00:08:36.400
And the command we're gonna run is not
gen-certs, it's going to be serve.

125
00:08:37.910 --> 00:08:40.329
And you should see a bunch
of stuff start up.

126
00:08:40.329 --> 00:08:44.753
At the top we can see we're serving
the web client in that mode over

127
00:08:44.753 --> 00:08:46.290
localhost 3000.

128
00:08:46.290 --> 00:08:50.220
And here we're serving
the API over localhost 3100.

129
00:08:50.220 --> 00:08:52.590
We're actually using the same
certificate for both.

130
00:08:52.590 --> 00:08:56.210
Now if we look at our app you should
see something that looks like this.

131
00:08:56.210 --> 00:09:01.030
So the idea there was the README
should be sufficient for

132
00:09:01.030 --> 00:09:04.960
most developers,
particularly if you use a Mac.

133
00:09:04.960 --> 00:09:08.400
Going through all of this should have
gotten you to where you need to go.

134
00:09:08.400 --> 00:09:12.629
However, if you're using a Windows
machine like the step by step process,

135
00:09:12.629 --> 00:09:13.890
we just went through.

136
00:09:13.890 --> 00:09:19.248
If I've screwed things up that
requires only node doesn't require

137
00:09:19.248 --> 00:09:24.430
any shell scripts or running too
much through npm script runner.

138
00:09:24.430 --> 00:09:29.440
So that step by step process should've
helped you assemble what you need.

139
00:09:29.440 --> 00:09:33.989
And in the end, we've got now in the dist
folder the certificates we need.

140
00:09:33.989 --> 00:09:38.248
And the last thing I wanna
do is we can kill this,

141
00:09:38.248 --> 00:09:42.650
and I wanna build the app,
npm run build:prod.

142
00:09:42.650 --> 00:09:44.882
So this is gonna take a little while,

143
00:09:44.882 --> 00:09:47.770
because it's heavily
optimizing this thing.

144
00:09:47.770 --> 00:09:50.543
One of the great benefits of webpack,
and there are some great

145
00:09:50.543 --> 00:09:53.860
Frontend Masters Webpack courses
that are worth checking out.

146
00:09:53.860 --> 00:09:57.460
It's actually shaking away any
code that we don't end up using.

147
00:09:57.460 --> 00:10:02.320
So it's trying to any module that
we haven't explicitly imported,

148
00:10:02.320 --> 00:10:06.090
or imported something that
need that it's going to,

149
00:10:06.090 --> 00:10:08.964
our users don't have to download that.

150
00:10:08.964 --> 00:10:15.396
So now if I do,
&gt;&gt; Mike North: So

151
00:10:15.396 --> 00:10:21.262
if we look at the dist folder here,
and we look at this app file,

152
00:10:21.262 --> 00:10:27.223
which is,
&gt;&gt; Mike North: Right here,

153
00:10:27.223 --> 00:10:29.049
it's this gzipped 1.

154
00:10:29.049 --> 00:10:33.290
We can see, there's our ADK that
we're starting with, right there.

155
00:10:33.290 --> 00:10:37.840
So this is the non-gzipped size, 297.

156
00:10:37.840 --> 00:10:42.495
And then ADK here, and
that might be a shocking shrink there,

157
00:10:42.495 --> 00:10:49.620
gzipped it works really well for
ridiculously repetitive strings.

158
00:10:49.620 --> 00:10:53.492
And all of our API calls like
document.createElement, or

159
00:10:53.492 --> 00:10:54.890
React createClass.

160
00:10:54.890 --> 00:10:58.220
All of that gets compressed really,
really, really nicely.

161
00:10:58.220 --> 00:11:00.780
We have a nice degree of
repetition in this code.

162
00:11:00.780 --> 00:11:03.400
So ADK that's our starting point.

163
00:11:03.400 --> 00:11:07.209
And I do wanna do,
I promise this is really the last thing.

164
00:11:10.949 --> 00:11:13.750
&gt;&gt; Mike North: We'll add this
environment variable at the beginning.

165
00:11:13.750 --> 00:11:16.160
This is going to,
once the build is complete,

166
00:11:16.160 --> 00:11:21.460
open up a little web based tool where
we can explore what is in this ADK?

167
00:11:21.460 --> 00:11:22.390
Where is that coming from?

168
00:11:25.560 --> 00:11:27.770
So if we look at it here,

169
00:11:27.770 --> 00:11:32.720
we can hover over,
it looks like not responsive text here.

170
00:11:32.720 --> 00:11:38.960
We can hover over the various sections of
this tree visualization, and you wanna

171
00:11:38.960 --> 00:11:44.000
look at the gzipped size, which in the
tool tip is the bottom most level there.

172
00:11:44.000 --> 00:11:49.580
So you can see, here's our client,
this is our application code on the right.

173
00:11:49.580 --> 00:11:51.910
We've got about 8.3 kilabytes of that.

174
00:11:51.910 --> 00:11:56.740
Stuff that's coming from node modules
accounts for the rest, about 68 kilobytes.

175
00:11:56.740 --> 00:12:03.222
And the big culprits here are react-dom,
so that's 35 kilobytes.

176
00:12:03.222 --> 00:12:04.659
The qrcode-reader, and

177
00:12:04.659 --> 00:12:08.321
we're gonna start working with
qrcodes a little bit later today.

178
00:12:08.321 --> 00:12:11.890
That is the really expensive
thing we're doing on the client.

179
00:12:11.890 --> 00:12:15.410
And then we've got couple of other
libraries that are much smaller here.

180
00:12:15.410 --> 00:12:17.606
I want us to keep an eye on this,

181
00:12:17.606 --> 00:12:21.079
because one of our goals
here is to try to make it.

182
00:12:21.079 --> 00:12:23.888
So if the user's not skinny
qrcode they shouldn't

183
00:12:23.888 --> 00:12:27.530
have to download that every
time they go and visit the app.

184
00:12:27.530 --> 00:12:30.170
We wanna sort of make that
happen at the last minute.

185
00:12:30.170 --> 00:12:32.390
If you're using a Mac this
probably went pretty smoothly.

186
00:12:32.390 --> 00:12:35.149
If you're using Windows
the biggest tip I can give you is,

187
00:12:36.150 --> 00:12:40.110
Windows 10 you want to install
the Linux subsystem for Windows.

188
00:12:40.110 --> 00:12:44.340
It is a recent advancement
in the past year or so.

189
00:12:44.340 --> 00:12:50.520
Essentially, it installs pieces
of Ubuntu which is a popular

190
00:12:50.520 --> 00:12:55.644
Linux distribution, it installs them
side by side with your Windows OS.

191
00:12:55.644 --> 00:13:01.170
The end result is you can run a true
bash environment inside Windows

192
00:13:01.170 --> 00:13:06.809
without having to worry about Cygwin or
running a virtual machine.

193
00:13:06.809 --> 00:13:12.439
This makes it so
your set-up process is much faster.

194
00:13:12.439 --> 00:13:14.871
And as we encounter little setup issues,

195
00:13:14.871 --> 00:13:18.630
we will add them to the README,
and a troubleshooting section.

