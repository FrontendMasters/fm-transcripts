WEBVTT

1
00:00:00.220 --> 00:00:04.136
&gt;&gt; Mike North: So the second thing
is a little bit more interesting,

2
00:00:04.136 --> 00:00:06.926
that is something called a VAPID key.

3
00:00:06.926 --> 00:00:12.145
VAPID stands for Voluntary
Application Server Identification for

4
00:00:12.145 --> 00:00:17.740
Web Push, this is not so much encryption,
it's just identification.

5
00:00:17.740 --> 00:00:21.111
And the idea is that you
generate some keys, and

6
00:00:21.111 --> 00:00:24.566
the public key is part of
your app that you ship and

7
00:00:24.566 --> 00:00:30.230
the private key is part of what you use to
send messages to this web push service.

8
00:00:30.230 --> 00:00:37.415
And it serves to really ensure
that this came from your server.

9
00:00:37.415 --> 00:00:41.379
Now it's voluntary, you do not have to
use it but it's a good idea to use it.

10
00:00:41.379 --> 00:00:44.511
You're a good citizen developer for
doing this.

11
00:00:44.511 --> 00:00:50.255
The main benefit is that the push
service itself can identify

12
00:00:50.255 --> 00:00:55.209
traffic coming into it, and
so it's a way that it can

13
00:00:55.209 --> 00:01:00.183
kinda mitigate or
more easily detect DDoS attacks.

14
00:01:00.183 --> 00:01:04.639
So if you identify yourself, your
traffic is not going to be confused for

15
00:01:04.639 --> 00:01:08.959
other things, and they know exactly
who they will shut down, right?

16
00:01:08.959 --> 00:01:10.586
So if there's an issue,

17
00:01:10.586 --> 00:01:15.622
they're likely to let the identified
traffic continue as usual, and sort of

18
00:01:15.622 --> 00:01:21.061
throttle down the unidentified traffic
cuz that could potentially be malicious.

19
00:01:21.061 --> 00:01:25.570
So here's a function that you need,
you'll need this for

20
00:01:25.570 --> 00:01:30.264
the exercise, it's basically
gonna take that VAPID key and

21
00:01:30.264 --> 00:01:34.144
turn it into a form that
this library can consume.

22
00:01:34.144 --> 00:01:39.940
Just copy and paste it, and use it when
we have these subscribe options, right?

23
00:01:39.940 --> 00:01:47.695
So we need to have this in a form where
it is an eight bit integer array and

24
00:01:47.695 --> 00:01:51.901
currently it's a Base 64 string and

25
00:01:51.901 --> 00:01:55.591
this puts it in the right format.

26
00:01:55.591 --> 00:02:00.549
So and we don't have this function
available to us as part of

27
00:02:00.549 --> 00:02:06.312
the service worker platform but
we can use it by copying and pasting.

28
00:02:06.312 --> 00:02:10.886
So the way you generate a pair of
VAPID keys is possible with this web

29
00:02:10.886 --> 00:02:13.836
push library that's already installed.

30
00:02:13.836 --> 00:02:18.660
You should already have VAPID keys in
your private folder in the project, there

31
00:02:18.660 --> 00:02:23.416
should be a little JSON file in there
called, I think it's just vapid.json.

32
00:02:23.416 --> 00:02:27.215
And public key goes to the browser,
private key is part of the little Node.js

33
00:02:27.215 --> 00:02:29.800
thing that's gonna be
sending the notifications.

