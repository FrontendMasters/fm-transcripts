WEBVTT

1
00:00:00.050 --> 00:00:02.140
&gt;&gt; Steve: So,
I don't know how to break this to you.

2
00:00:02.140 --> 00:00:04.830
But the shopping cart you've been
working with so far is a lie.

3
00:00:04.830 --> 00:00:06.810
It hasn't been going to the server.

4
00:00:06.810 --> 00:00:10.200
We just updated the DOM and
told you everything was okay, and

5
00:00:10.200 --> 00:00:12.700
we never actually saved any of it.

6
00:00:12.700 --> 00:00:15.290
But that's where you come in, right?

7
00:00:15.290 --> 00:00:18.960
What we're gonna do and I'll take you
on a little tour of it in a second,

8
00:00:18.960 --> 00:00:23.190
is we have this save cart
function in the cart store.

9
00:00:24.940 --> 00:00:27.680
It doesn't actually save
the cart right now,

10
00:00:27.680 --> 00:00:30.360
because we didn't know how to use fetch,
right?

11
00:00:30.360 --> 00:00:33.330
We didn't know how to fire
off the request to save it.

12
00:00:33.330 --> 00:00:37.906
So, we're gonna need to update it so
instead of just lying to us and

13
00:00:37.906 --> 00:00:43.414
saying yeah, totally saved it, to in fact,
do the thing that we asked it to do.

14
00:00:43.414 --> 00:00:46.221
We're gonna take a look at the API
to help you figure this out.

15
00:00:46.221 --> 00:00:50.953
Mike made this pretty cool file called
API_PLAYGROUND.http and if you have

16
00:00:50.953 --> 00:00:55.700
one of the recommended plugins, you'll
to be able to take the API for a spin.

17
00:00:55.700 --> 00:00:59.717
So I'm gonna do that with you real quick
and then I'm going to cut you loose.

18
00:01:02.799 --> 00:01:08.170
&gt;&gt; Steve: All right, and
I'm gonna take a little less of this.

19
00:01:09.891 --> 00:01:15.074
&gt;&gt; Steve: Sweet, all right, so
if I go to files and I'm just gonna do API

20
00:01:15.074 --> 00:01:21.450
playground, and what we can see here,
please start your server.

21
00:01:21.450 --> 00:01:23.446
Please stop server.

22
00:01:23.446 --> 00:01:25.035
Good catch.

23
00:01:28.527 --> 00:01:29.219
&gt;&gt; Steve: There it is.

24
00:01:29.219 --> 00:01:33.675
&gt;&gt; Steve: This is why you program with
friends, they know when your server's not

25
00:01:33.675 --> 00:01:37.920
running, even when you're not
paying attention to those things.

26
00:01:39.530 --> 00:01:40.500
All right, cool.

27
00:01:40.500 --> 00:01:44.640
So we can see Mike has documented the API.

28
00:01:45.950 --> 00:01:49.328
So we could theoretically get the items.

29
00:01:49.328 --> 00:01:55.030
You click this, you'll actually see
what the JSON response might be.

30
00:01:55.030 --> 00:01:58.207
So this will get all the items and store.

31
00:01:58.207 --> 00:02:01.594
We can, too big.

32
00:02:01.594 --> 00:02:05.851
We can limit to them to two,
we can get the tenth one forward,

33
00:02:05.851 --> 00:02:09.310
we can get just ones
from a given category.

34
00:02:09.310 --> 00:02:13.430
Note those are great, but they
are beyond what we've been tasked to do.

35
00:02:13.430 --> 00:02:16.840
We can see that if we
are successfully getting the items,

36
00:02:16.840 --> 00:02:19.230
they show up on the page,
that is not an issue.

37
00:02:19.230 --> 00:02:22.970
The issue was that saving
to a cart was a lie.

38
00:02:22.970 --> 00:02:25.470
And we are here to rectify that lie.

39
00:02:27.030 --> 00:02:33.290
So we can see we can put, to the shopping,
we can send it an array of items.

40
00:02:33.290 --> 00:02:34.810
That seems interesting to me.

41
00:02:34.810 --> 00:02:37.550
I can put stuff in the shopping cart.

42
00:02:37.550 --> 00:02:41.320
Seems like that would be relevant for
the task at hand.

43
00:02:41.320 --> 00:02:47.430
Also, it looks like I can get all
the orders, and I can also post an order.

44
00:02:48.550 --> 00:02:52.490
Again, seems relevant to our interests,
just saying.

45
00:02:52.490 --> 00:02:55.003
I say all this apropos of nothing.

46
00:02:55.003 --> 00:02:59.052
Not that you will not about
to implement saving carts and

47
00:02:59.052 --> 00:03:02.550
orders to the server or anything.

48
00:03:02.550 --> 00:03:04.550
Just totally spitballing here.

49
00:03:04.550 --> 00:03:06.151
All right, then we can go to CartStore.

50
00:03:09.652 --> 00:03:12.165
&gt;&gt; Steve: And we gotta go through this.

51
00:03:12.165 --> 00:03:17.415
So we can see this.savedcart, that looks
interesting to me, we'll keep going.

52
00:03:17.415 --> 00:03:19.517
This.savedcart, we're definitely
saving the cart a lot.

53
00:03:19.517 --> 00:03:25.662
We're saying there's this really helpful
code comment here that says persist

54
00:03:25.662 --> 00:03:31.087
the cart, which immediately just
resolves a promise with the stuff.

55
00:03:31.087 --> 00:03:35.670
So it didn't save it to the service, like
yeah, it did it, here it is, back to you.

56
00:03:35.670 --> 00:03:39.776
Seems like what we might
wanna do is replace this.

57
00:03:39.776 --> 00:03:44.086
Like empty promise with hey, why don't
you put the stuff in the chart and

58
00:03:44.086 --> 00:03:47.620
then return to me the promise
from fetch that says whether or

59
00:03:47.620 --> 00:03:51.242
not this was successful and
then I'll do the thing, right?

60
00:03:51.242 --> 00:03:57.320
So let's look at our tasks again.

61
00:03:57.320 --> 00:04:00.701
So our first task here is
to go to the CartStore and

62
00:04:00.701 --> 00:04:06.074
cuz we're gonna implement a fetch that's
going to use the correct API call.

63
00:04:06.074 --> 00:04:09.966
And we're gonna send it to
the server to hopefully persist,

64
00:04:09.966 --> 00:04:14.180
which will give us back a promise
that we could hand back to the UI.

65
00:04:14.180 --> 00:04:16.070
Questions, comments,
concerns, cries of outrage?

