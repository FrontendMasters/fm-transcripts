WEBVTT

1
00:00:00.040 --> 00:00:03.246
&gt;&gt; Mike North: So the first improvement
I wanna make is something I'm calling

2
00:00:03.246 --> 00:00:05.130
enhanced client-side rendering.

3
00:00:05.130 --> 00:00:09.141
We'll talk about server-side
rendering in a moment,

4
00:00:09.141 --> 00:00:13.249
it is a great performance
improvement that you can make.

5
00:00:13.249 --> 00:00:17.169
It is complicated, it is tricky,
it is error prone,

6
00:00:17.169 --> 00:00:20.841
I'm going to give you a half
measure that is easy.

7
00:00:20.841 --> 00:00:25.523
There's basically no excuse,
if your app looks like

8
00:00:25.523 --> 00:00:30.204
what we're working with
today there's no excuse for

9
00:00:30.204 --> 00:00:33.650
this for failing to do this easy thing.

10
00:00:33.650 --> 00:00:37.880
And you get to skip all of this
server side rendering headaches.

11
00:00:37.880 --> 00:00:43.165
So the idea here is if we're trying to
get this, if I can give you a way that

12
00:00:43.165 --> 00:00:48.106
we can show the non data parts of the UI,
right just the address bar or

13
00:00:48.106 --> 00:00:52.810
the menu bar at the top,
the little footer, maybe the buttons.

14
00:00:52.810 --> 00:00:57.664
At least the user will feel like
something is happening, and

15
00:00:57.664 --> 00:01:03.089
on a 2G connection, this is basically
gonna take our load time down

16
00:01:03.089 --> 00:01:08.132
from around the seven second mark
to below the two second mark,

17
00:01:08.132 --> 00:01:10.911
massive, massive improvement.

18
00:01:10.911 --> 00:01:15.750
So I should have your attention now,
right?

19
00:01:15.750 --> 00:01:18.789
So here is the recipe,
it's a three step recipe.

20
00:01:21.006 --> 00:01:26.700
&gt;&gt; Mike North: We're gonna modify our
index.ejs, our index.html thing, right?

21
00:01:26.700 --> 00:01:31.107
And we're gonna identify
URL-agnostic parts of what is

22
00:01:31.107 --> 00:01:33.689
rendered on the screen, right?

23
00:01:33.689 --> 00:01:38.806
You're just gonna go look at your elements
tab and say that, here's the HTML for

24
00:01:38.806 --> 00:01:43.022
the nav bar, for the menu bar at
the top and here's the footer, and

25
00:01:43.022 --> 00:01:48.080
it will basically clean it up and I want
that to be the starting point that we use.

26
00:01:48.080 --> 00:01:53.020
And I've taken care of step two for
you, which is to take CSS,

27
00:01:53.020 --> 00:01:56.632
ideally this would be only critical CSS,
but

28
00:01:56.632 --> 00:02:02.639
we're using a really tiny six kilobyte
material design library for this.

29
00:02:02.639 --> 00:02:06.253
So we can get away with all
CSS being treated as critical,

30
00:02:06.253 --> 00:02:10.924
but you would want that embedded in
your index.html avoiding the need for

31
00:02:10.924 --> 00:02:14.410
a roundtrip request in order for
things to get styled.

32
00:02:14.410 --> 00:02:19.359
The idea is as soon as the HTML file
lands, you don't need a second round

33
00:02:19.359 --> 00:02:23.319
trip anywhere before you can
get this screen showing up,

34
00:02:23.319 --> 00:02:28.377
that's how we get this screen showing
up well below the two second mark.

35
00:02:30.360 --> 00:02:35.351
&gt;&gt; Mike North: So I proposed that this is
how we have altered our situation here,

36
00:02:35.351 --> 00:02:39.615
by the time we make a round trip and
get the index.html,

37
00:02:39.615 --> 00:02:42.973
we're going to have our
first Paint here and

38
00:02:42.973 --> 00:02:47.909
I've also indicated that we can
be interactive at this moment.

39
00:02:47.909 --> 00:02:51.493
If you have not already been sold
on the idea of using CSS for

40
00:02:51.493 --> 00:02:56.119
interactivity as opposed to JavaScript,
this is a great reason, right?

41
00:02:56.119 --> 00:03:01.813
The difference between listening for a
JavaScript click event to open up a menu,

42
00:03:01.813 --> 00:03:04.743
to expand it, versus a CSS hover effect,

43
00:03:04.743 --> 00:03:10.459
that hover effect can work right there
without waiting for scripts to download.

44
00:03:10.459 --> 00:03:15.949
Anything that requires like registering
a listener and running a code into hide or

45
00:03:15.949 --> 00:03:21.299
show something, that now, like that
would not be interactive at this moment.

46
00:03:21.299 --> 00:03:27.816
So CSS is a powerful tool for and try to
find way, at least your top level for

47
00:03:27.816 --> 00:03:33.090
navigation, can be driven entirely,
by CSS if possible.

48
00:03:33.090 --> 00:03:36.963
And you can also if you knew
just a little bit of JavaScript,

49
00:03:36.963 --> 00:03:40.761
maybe just adding in or
removing a class for top level nav,

50
00:03:40.761 --> 00:03:46.369
it wouldn't hurt to maybe even embed that
script in your index.html so it's there.

51
00:03:46.369 --> 00:03:49.783
Like as soon this lands, you put it so

52
00:03:49.783 --> 00:03:55.184
that it doesn't block anything
else from downloading but

53
00:03:55.184 --> 00:04:00.379
you can have this one request,
and you're ready to go.

54
00:04:00.379 --> 00:04:03.937
So then we can go and fetch our
Java script, and it comes back, and

55
00:04:03.937 --> 00:04:08.039
we can parse it, boot it, go get some
JSON, now we can start showing data.

56
00:04:08.039 --> 00:04:13.329
So we haven't really improved this metric
here, but the other two we pushed,

57
00:04:13.329 --> 00:04:17.429
way, way, way back,
they're in a much better situation.

58
00:04:17.429 --> 00:04:19.370
So this is what we're
gonna be implementing.

59
00:04:19.370 --> 00:04:22.602
Now I'm gonna talk to you
about server side rendering,

60
00:04:22.602 --> 00:04:25.229
which is the more general solution for
this.

61
00:04:25.229 --> 00:04:29.120
It is inherently really,
really complicated.

62
00:04:29.120 --> 00:04:33.285
It essentially means like your
server is booting up, and

63
00:04:33.285 --> 00:04:37.899
programmatically grabbing the HTML for
your JavaScript app.

64
00:04:37.899 --> 00:04:42.763
So it fits like start up your react app
and go and send it to a particular URL and

65
00:04:42.763 --> 00:04:47.323
then wait for the all of the JSON to
come back to it, and then grab that and

66
00:04:47.323 --> 00:04:48.931
respond with that HTML.

