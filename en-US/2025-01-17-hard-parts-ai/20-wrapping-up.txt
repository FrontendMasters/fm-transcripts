[00:00:00]
>> Will Sentance: Yeah, question was, any learning materials that I recommend? Well, of course, I have to say, if you want to explore one of the most interesting parts of deep learning, deep learning being, lots and lots of layers of weights, neural networks with lots of layers. But in extension, machine learning.

[00:00:20]
And particularly a groundbreaking part of it that's used a lot in things like autonomous vehicle development. And as I say, if you haven't been in a Waymo yet, raise your hand if you've been in a Waymo. Yeah, it's great fun. And after two rides with no driver, you get very used to it.

[00:00:36]
But initially, anyway, that uses a technique, deep reinforcement learning, that is, actually there's a book on it by the co-founder of Codesmith, Alex Zai from Manning. That of course, I have to recommend, practical applications of it. But if you're looking to explore from more foundational first principles, it's a very practical application approach, that book So that's also a serious recommendation, as a plug for co-founder of Codesmith.

[00:01:08]
But if you're looking instead for actually, I think, the best tools to build out the mental models that would empower you as software engineers, I always recommend the Grokking series. I believe, also from Manning, they are phenomenal. I absolutely love them, I'd love to write one myself one day.

[00:01:27]
They're not all perfect, but they're about building out mental models of many of these areas. I think I read the neural networks one about seven years ago, and those mental models still, or it was the deep learning one, those models still sit with me with great clarity today.

[00:01:47]
And so, I absolutely love, they have one for algorithms, they have one for machine learning, they have one for neural networks or deep learning, I can't remember which one they called it. But for this, for neural networks, the one for machine learning, which is anything from decision trees to other techniques, regression, gradient boosting, other techniques.

[00:02:08]
And as I said, they have one for neural networks. I can't remember if it's called neural networks or deep learning, but it's a grokking series. Without a shadow of the doubt, my favorite set of books. And also, always good is 3Blue1Brown on YouTube. The brilliant Stanford math grad, or Caltech math grad, brilliant communicator, incredible visualizations, always have complex algorithms, has a lot of fun visualizations of neural networks.

[00:02:39]
Definitely more on the math heavy side, tends to assume you're pretty confident with calculus and with linear algebra. Maybe more calculus and linear algebra, but still, nevertheless, relatively accessible. Where to go next with all of this? Where to go next with all of this? Get building with code and now with models.

[00:03:02]
Prediction, machine learning AI models in software engineering has changed what we can tackle with code. When I spoke to the Global Head of AI at a 5,000-person law firm, their words were, we will not be hiring as many lawyers, we have a new, lawyers have a very post-college standard route.

[00:03:22]
They said, we have a new version of that for our technologists, for our lawyer software engineers. At Codesmith, we've had multiple people go off and become legal software engineers. Where the job description said, must have JD, must have done law degree, and be software engineer. This is the burgeoning space, whole new domains where previously you could build a tool for a law firm, but it was not gonna be providing legal advice.

[00:03:51]
Because you couldn't make predictions about complex data, like human language. Now you can, it does not mean it's always gonna be easy, and that's why you want the right leaders doing it, but it's emerging, health, climate, all these areas, climate modeling. Software engineers, with the help of our collaborators, data scientists, ML engineers, are at the heart of turning these models into products that actually solve people's problems.

[00:04:21]
So recognize what makes you great at building with code. It's your flexibility and your underlying capacities. That means, integrate what in the end, are these core mental models. It doesn't go really beyond that core idea of sample to population via generalization using model, but the incredible complexity with it is fascinating.

[00:04:43]
But remember, we're about to have a whole bunch of new domains be, I don't know, have software enter their core. That makes you even more important, where you send to your problem-solving ability to flexibly figure out how to get there, whatever the tools are. And your technical communication, ability to bring others along with you, including folk who are suddenly going, shoot, I'm giving legal advice via a software tool.

[00:05:12]
This matters that you do this the right way, especially your flexibility, because the tools are gonna change. It may be LangChain this year, to integrate in production some of these models, but it definitely may not be next year. And that's gonna be the rapid change of the years ahead.

[00:05:27]
So remember your edge is your flexibility to problem-solve and communicate these complex ideas. Next steps, investigate the development of machine learning models as we've done here from first principles. Building out a neural network from scratch, building out decision trees from scratch, investigating from first principles of sample and generalization.

[00:05:47]
That's data exploration, understanding the nature of it, standardizing it, and then prototyping models. And then, experiment with deploying those models in production, very engineering-oriented. And the tools that are available to scale that and integrate with your builds in your engineering careers ahead. It has been wonderful having you here, great job everybody.

[00:06:11]
Thank you, and good night.
>> [APPLAUSE]

