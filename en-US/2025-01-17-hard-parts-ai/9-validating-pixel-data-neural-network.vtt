WEBVTT

1
00:00:00.000 --> 00:00:01.829
&gt;&gt; Will Sentance: So
let's validate with some more images.

2
00:00:01.829 --> 00:00:06.826
Let's come up with another image
here in our validation set of data.

3
00:00:06.826 --> 00:00:09.491
You're all doing really,
really well, people.

4
00:00:09.491 --> 00:00:12.952
We're one step away from gradient descent,

5
00:00:12.952 --> 00:00:18.524
one of the most important aspects of
training a machine learning model.

6
00:00:18.524 --> 00:00:25.924
So validation,
let's come up with another image,

7
00:00:25.924 --> 00:00:31.314
yeah, 101 000 000 111.

8
00:00:31.314 --> 00:00:32.752
So we know what this is.

9
00:00:32.752 --> 00:00:36.618
This is, anyone think this is a smile?

10
00:00:36.618 --> 00:00:37.704
No, it doesn't look like a smile to me.

11
00:00:37.704 --> 00:00:42.262
So smile, what would be the value in our,
we know what this is, we label this,

12
00:00:42.262 --> 00:00:43.506
validation is data,

13
00:00:43.506 --> 00:00:48.297
we wanna check whether we've not got too
perfect for our weights for this sample.

14
00:00:48.297 --> 00:00:52.316
And that it's a bit more
generally applicable.

15
00:00:52.316 --> 00:00:55.908
We know we know this is not a smile,
so smiles value, Ben, will be what?

16
00:00:55.908 --> 00:00:56.522
&gt;&gt; Ben: -1.

17
00:00:56.522 --> 00:00:58.488
&gt;&gt; Will Sentance: -1,
spot on, there it is.

18
00:00:58.488 --> 00:01:01.450
Let's do some validation, people.

19
00:01:01.450 --> 00:01:09.821
Validation, 101 000 000 111, there it is.

20
00:01:09.821 --> 00:01:10.893
Is it a smile?

21
00:01:10.893 --> 00:01:13.802
We know absolutely it's not.

22
00:01:13.802 --> 00:01:16.150
Let's apply our multipliers.

23
00:01:16.150 --> 00:01:17.681
Posh word for multipliers.

24
00:01:17.681 --> 00:01:20.785
Ben, given you said it and
then didn't say it when I asked, Ben?

25
00:01:20.785 --> 00:01:23.599
&gt;&gt; Ben: Embedded [INAUDIBLE].

26
00:01:23.599 --> 00:01:24.642
&gt;&gt; Male speaker 1: Weights.
&gt;&gt; Will Sentance: Weights, see,

27
00:01:24.642 --> 00:01:28.273
that's what happens when you're
passive-aggressive with somebody.

28
00:01:28.273 --> 00:01:34.115
They rightly go f you and
say the wrong thing.

29
00:01:34.115 --> 00:01:35.090
F is okay, isn't it?

30
00:01:35.090 --> 00:01:36.070
That's just a letter.

31
00:01:36.070 --> 00:01:38.749
All right, all right.

32
00:01:38.749 --> 00:01:43.736
Yeah, and I was, then it's been fantastic.

33
00:01:43.736 --> 00:01:47.350
So our weights are 000.

34
00:01:47.350 --> 00:01:49.134
Everyone together, 000?

35
00:01:49.134 --> 00:01:52.311
&gt;&gt; 0 -1, 0, 1, 1, 0, 1.

36
00:01:52.311 --> 00:01:56.226
&gt;&gt; Will Sentance: Do you know
why we use tools like NumPy to

37
00:01:56.226 --> 00:01:59.320
deal with matrices in Python?

38
00:01:59.320 --> 00:02:03.560
So we don't have to write all these out,
of course, but we're on a blackboard, for

39
00:02:03.560 --> 00:02:04.298
some reason.

40
00:02:04.298 --> 00:02:06.795
Why would we be doing
this on a blackboard?

41
00:02:06.795 --> 00:02:10.882
Well, because, as I said,
I don't know how to use computers.

42
00:02:10.882 --> 00:02:15.190
And nobody can disprove that, because
you've never seen me use a computer in

43
00:02:15.190 --> 00:02:17.123
the history, I don't love them.

44
00:02:17.123 --> 00:02:18.001
I don't love them.

45
00:02:18.001 --> 00:02:19.050
All right, no, they're great.

46
00:02:19.050 --> 00:02:21.148
So there we go, let's apply it.

47
00:02:21.148 --> 00:02:25.743
Let's sum and
multiply as our validation stage.

48
00:02:25.743 --> 00:02:32.640
Some old, I'm a bit worried, but let's
look at our converted output, converted.

49
00:02:32.640 --> 00:02:36.658
And then our target output,
we know this is not a smile, so

50
00:02:36.658 --> 00:02:39.372
the target output everyone, is what?

51
00:02:39.372 --> 00:02:39.882
&gt;&gt; -1.

52
00:02:39.882 --> 00:02:43.187
&gt;&gt; Will Sentance: -1, thank you for
the -1 as well, exactly.

53
00:02:43.187 --> 00:02:46.294
Accuracy is gonna be out of 1.

54
00:02:46.294 --> 00:02:49.417
That's what we're checking,
out of this one sample.

55
00:02:49.417 --> 00:02:52.060
Okay, let's do our conversion.

56
00:02:52.060 --> 00:02:56.055
Kayla, if you don't mind, 0 by 1 is?

57
00:02:56.055 --> 00:02:57.105
&gt;&gt; Kayla: 0.
&gt;&gt; Will Sentance: So just keep me going.

58
00:02:57.105 --> 00:02:57.769
0 plus?

59
00:02:57.769 --> 00:02:58.460
&gt;&gt; Kayla: 0.
&gt;&gt; Will Sentance: Plus?

60
00:02:58.460 --> 00:02:59.563
&gt;&gt; Kayla: 0.
&gt;&gt; Will Sentance: Plus?

61
00:02:59.563 --> 00:03:00.633
&gt;&gt; Kayla: 0.

62
00:03:00.633 --> 00:03:04.908
&gt;&gt; Will Sentance: Okay, yeah, and

63
00:03:04.908 --> 00:03:09.328
then 0 + 0 +
&gt;&gt; Kayla: I guess, 0.

64
00:03:09.328 --> 00:03:11.742
&gt;&gt; Will Sentance: [LAUGH All right,
so you guys are [INAUDIBLE].

65
00:03:11.742 --> 00:03:18.659
Okay, now, so 0 by 0 is 0,
0 by my -1 is 0.

66
00:03:18.659 --> 00:03:22.476
I'm a bit worried.

67
00:03:22.476 --> 00:03:25.184
It's already looking worrying for
my validation success.

68
00:03:25.184 --> 00:03:28.656
0 by 0, okay.

69
00:03:28.656 --> 00:03:30.508
0 by 1, everybody?

70
00:03:30.508 --> 00:03:32.235
&gt;&gt; 0.

71
00:03:32.235 --> 00:03:36.338
&gt;&gt; Will Sentance: 1 by 1.

72
00:03:36.338 --> 00:03:39.501
0 by 1, so our total is, everyone?.

73
00:03:39.501 --> 00:03:41.056
&gt;&gt; 1.

74
00:03:41.056 --> 00:03:43.250
&gt;&gt; Will Sentance: Is 1 equal to -1?

75
00:03:43.250 --> 00:03:45.308
&gt;&gt; Ben: No.
&gt;&gt; Will Sentance: No, it's not.

76
00:03:45.308 --> 00:03:47.402
So our accuracy is 0 out of 1.

77
00:03:47.402 --> 00:03:52.017
So it's failed our validation stage, why?

78
00:03:52.017 --> 00:03:57.838
Because more pixels appear to
matter than perhaps we thought.

79
00:03:57.838 --> 00:03:58.838
Which pixels here?

80
00:03:58.838 --> 00:04:00.059
It's kind of fun to try and spot.

81
00:04:00.059 --> 00:04:05.002
Which pixels here meant that
this didn't work as we expected?

82
00:04:05.002 --> 00:04:07.573
Which pixels were previously 1s and
are now 0s?

83
00:04:07.573 --> 00:04:09.981
Which pixels didn't we
not realize mattered?

84
00:04:09.981 --> 00:04:11.280
&gt;&gt; Male speaker 1: 7 and 9.

85
00:04:11.280 --> 00:04:15.001
&gt;&gt; Will Sentance: 123456, yeah,
7, yeah, yeah, well, 6, yeah.

86
00:04:15.001 --> 00:04:17.260
&gt;&gt; [LAUGH]
&gt;&gt; Will Sentance: 012, yeah, anyway,

87
00:04:17.260 --> 00:04:19.134
these two, yeah, exactly.

88
00:04:19.134 --> 00:04:22.890
These ones matter, didn't they?

89
00:04:22.890 --> 00:04:27.492
And we have, any multipliers or
weights on those, Jamie?

90
00:04:27.492 --> 00:04:28.169
No, Jamie's right.

91
00:04:28.169 --> 00:04:31.208
Exactly, we do not.

92
00:04:31.208 --> 00:04:37.336
More pixels matter than we thought, so
our multipliers are no longer effective.

93
00:04:37.336 --> 00:04:40.172
Our accuracy dropped,
we need to expand our sample.

94
00:04:40.172 --> 00:04:42.726
I'd say we just take this straight in,
we don't use this validation.

95
00:04:42.726 --> 00:04:46.731
We take it straight in and
make it part of our sample and

96
00:04:46.731 --> 00:04:51.274
add more multipliers now for
more, maybe all of our pixels.

97
00:04:51.274 --> 00:04:56.198
In fact, we're gonna have a problem emerge

98
00:04:56.198 --> 00:05:01.521
where there is no set of
perfect multipliers for

99
00:05:01.521 --> 00:05:06.191
even a sample larger than a few elements?

100
00:05:06.191 --> 00:05:10.646
No, I hate the word elements,
even a sample for more than a few images,

101
00:05:10.646 --> 00:05:15.575
we are not gonna be able to find a set of
multipliers that will perfectly match.

102
00:05:15.575 --> 00:05:19.319
Meaning, maybe we introduce
an idea of confidence, but

103
00:05:19.319 --> 00:05:22.985
maybe there's even a way of moving beyond,
as you say,

104
00:05:22.985 --> 00:05:27.823
the fairly arbitrary nature of 1 and
-1 to something more like 0 to 1.

105
00:05:27.823 --> 00:05:31.678
Where 0 represents complete
confidence is not, and

106
00:05:31.678 --> 00:05:35.628
100%/1 represents complete
confidence it is.

107
00:05:35.628 --> 00:05:38.372
And that is exactly what we're gonna
do with the help of the Sigmoid

108
00:05:38.372 --> 00:05:39.360
activation function.

109
00:05:39.360 --> 00:05:42.298
&gt;&gt; Paul: What's the difference
between features and labels?

110
00:05:42.298 --> 00:05:47.462
&gt;&gt; Will Sentance: Absolutely,
the features are all

111
00:05:47.462 --> 00:05:55.484
the other data that we want
to convert into the label.

112
00:05:55.484 --> 00:06:00.889
The key thing is that in our sample
we have every set of the pixels,

113
00:06:00.889 --> 00:06:06.490
in this case, the features are,
actually, that's a great,

114
00:06:06.490 --> 00:06:11.627
let's just, before I go into that,
shoot, thank you.

115
00:06:11.627 --> 00:06:18.967
Before I go into that, how many
parameters do we have in this model?

116
00:06:18.967 --> 00:06:20.166
&gt;&gt; Paul: 12.
&gt;&gt; Will Sentance: Paul, yeah, okay,

117
00:06:20.166 --> 00:06:20.786
[INAUDIBLE].

118
00:06:20.786 --> 00:06:24.748
Yeah, 12 parameters.

119
00:06:24.748 --> 00:06:27.888
How many features do
we have in this model?

120
00:06:27.888 --> 00:06:31.084
Last time we had four parameters and
I guess, three features,

121
00:06:31.084 --> 00:06:32.168
although to be fair,

122
00:06:32.168 --> 00:06:36.346
you could say that the number of features
kind of became a parameter in that model.

123
00:06:36.346 --> 00:06:40.409
So maybe that was three features,
four parameters.

124
00:06:40.409 --> 00:06:42.295
How many parameters do we have here?

125
00:06:42.295 --> 00:06:44.108
How many, sorry,
features we have here, a bit simpler?

126
00:06:44.108 --> 00:06:45.460
Nick, how many features do we have?

127
00:06:48.032 --> 00:06:51.272
&gt;&gt; Will Sentance: 1, 2, 3, 4,
5, 6, 7, 8, 9, 10, 11, 12,

128
00:06:51.272 --> 00:06:52.777
how many features do we have?

129
00:06:52.777 --> 00:06:56.409
12 12, 12,

130
00:06:56.409 --> 00:07:00.725
features, exactly.

131
00:07:00.725 --> 00:07:04.946
Features are the input
data that we have for

132
00:07:04.946 --> 00:07:09.525
both the sample and
the population as a whole.

133
00:07:09.525 --> 00:07:15.078
Meaning that, where we only have
the label for those input pixels.

134
00:07:15.078 --> 00:07:20.016
So the features are these 12
pixels in their positions.

135
00:07:20.016 --> 00:07:25.855
You can literally store them as a list
of an array, 12 numbers, 0s and 1s.

136
00:07:25.855 --> 00:07:29.073
We want to be able to
take those 12 pixels.

137
00:07:29.073 --> 00:07:34.556
And for the data that we have labeled,
the 12 pixels we have labeled 1 and

138
00:07:34.556 --> 00:07:39.952
the 12 we have labeled -1,
work out how to convert those 12 pixels or

139
00:07:39.952 --> 00:07:42.929
features into their associated label.

140
00:07:42.929 --> 00:07:46.257
Via the 12 parameters of our model,

141
00:07:46.257 --> 00:07:51.457
the 12 multipliers,
that are 100% or towards that,

142
00:07:51.457 --> 00:07:56.459
convert our sample's pixels or,
what are they called?

143
00:07:56.459 --> 00:08:01.725
Features, into the associated label,
so that for

144
00:08:01.725 --> 00:08:06.378
our population as a whole,
where we only have

145
00:08:06.378 --> 00:08:11.660
the 12 pixel values,
we only have the features.

146
00:08:11.660 --> 00:08:16.221
We can insert them and
generate out a label

147
00:08:16.221 --> 00:08:21.962
automatically using the model and
its parameters.

148
00:08:21.962 --> 00:08:24.815
What are the parameters here known as,
everybody?

149
00:08:24.815 --> 00:08:25.360
Weights.

150
00:08:25.360 --> 00:08:26.639
&gt;&gt; Female speaker 1: Weights, exactly.

