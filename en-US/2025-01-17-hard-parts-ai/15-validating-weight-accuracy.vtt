WEBVTT

1
00:00:00.000 --> 00:00:04.126
&gt;&gt; Will Sentance: Let's
just check we trust that.

2
00:00:04.126 --> 00:00:09.423
Let's check that it's actually
working by updating our weight.

3
00:00:09.423 --> 00:00:13.829
So this is after a hundred
rounds of tweaking.

4
00:00:13.829 --> 00:00:16.036
We did one, and got a lot better.

5
00:00:16.036 --> 00:00:20.836
Well, not quite so
much better with the sigmoid adjustment,

6
00:00:20.836 --> 00:00:25.822
but people, whereas we could never
find a perfect set of weights

7
00:00:25.822 --> 00:00:30.186
to match 1 to 1, -1 to -1,
-1 to -1, 1 to 1.

8
00:00:30.186 --> 00:00:35.106
Now we're able to do so because,
we're dealing with closer to a smooth

9
00:00:35.106 --> 00:00:39.959
curve towards the 100% and 0%,
through the sigmoid function.

10
00:00:39.959 --> 00:00:45.252
And it's also nicely,
giving us a much more familiar than 1 and

11
00:00:45.252 --> 00:00:49.481
-1, giving us a 100% for smile, and a 0%.

12
00:00:49.481 --> 00:00:54.746
And it mirrors roughly a sense of
the confidence we have in that prediction.

13
00:00:54.746 --> 00:01:00.525
So, let's get validating,
let's use these multipliers updated for

14
00:01:00.525 --> 00:01:04.195
our after a hundred
rounds of tweaking them.

15
00:01:04.195 --> 00:01:07.205
And you can see the very
first round of tweaking,

16
00:01:07.205 --> 00:01:09.494
we jumped all the way from 0s to 1s.

17
00:01:09.494 --> 00:01:13.669
After 100, we've taken a lot smaller
steps to get there, but we got there, so

18
00:01:13.669 --> 00:01:16.105
help me out here people,
what are our weights?

19
00:01:16.105 --> 00:01:20.508
Just help me out so I can read off there,
and you can start practicing the math,

20
00:01:20.508 --> 00:01:21.124
top left.

21
00:01:21.124 --> 00:01:21.825
&gt;&gt; Speaker 2: -0.5.

22
00:01:21.825 --> 00:01:26.455
&gt;&gt; Will Sentance: Yeah,
-0.5, beautiful, top right.

23
00:01:26.455 --> 00:01:27.275
&gt;&gt; Speaker 2: Same.

24
00:01:27.275 --> 00:01:33.209
&gt;&gt; Will Sentance: -0.5 brilliant,
bottom second up left 2.2, and

25
00:01:33.209 --> 00:01:39.893
then the right one is 2.2 as well,
and then the middle one is.

26
00:01:39.893 --> 00:01:41.645
&gt;&gt; Speaker 3: -2.5.

27
00:01:41.645 --> 00:01:47.620
&gt;&gt; Will Sentance: -2.5,
everyone getting their math ready,

28
00:01:47.620 --> 00:01:53.431
bottom left, -1.6, 1.9,

29
00:01:54.523 --> 00:01:58.037
&gt;&gt; Speaker 3: And -1.6.

30
00:01:58.037 --> 00:02:01.595
&gt;&gt; Will Sentance: Okay, it's,
time for some validation, and

31
00:02:01.595 --> 00:02:04.887
I've not used my balls space well enough.

32
00:02:04.887 --> 00:02:09.950
So firstly, before we get
validated with another sample,

33
00:02:09.950 --> 00:02:15.427
let's just look at what our outputs are,
of multiplying here.

34
00:02:15.427 --> 00:02:17.098
I guess we could prove it to ourselves.

35
00:02:17.098 --> 00:02:20.430
Let's do a rough back of the envelope
calculation from, well, let's do it for

36
00:02:20.430 --> 00:02:23.583
the easiest one, because it's only
got five numbers you wanna multiply.

37
00:02:23.583 --> 00:02:29.602
So, we run our flat face,
which should have the output of 0%,

38
00:02:29.602 --> 00:02:34.734
through final multipliers
after 100 iterations.

39
00:02:34.734 --> 00:02:39.716
1 by- 0.5, everyone together?

40
00:02:39.716 --> 00:02:40.677
&gt;&gt; Speaker 3: -0.5.

41
00:02:40.677 --> 00:02:45.635
&gt;&gt; Will Sentance: Yeah,
plus 1 by -0.5, -1 in total let's keep

42
00:02:45.635 --> 00:02:49.497
the running total, now it's -2.6.

43
00:02:49.497 --> 00:02:54.166
The -1 plus one point
state of 1.6 plus 1.9

44
00:02:54.166 --> 00:02:59.169
multiplied by 1,
-2.6 that gives us negative,

45
00:02:59.169 --> 00:03:03.631
everyone's arithmetic,- 0.7, right?

46
00:03:03.631 --> 00:03:08.676
Yes, plus -1.6.

47
00:03:08.676 --> 00:03:11.880
-0.7 plus -1.6 comes to what, everybody?

48
00:03:11.880 --> 00:03:13.602
&gt;&gt; Speaker 3: -2.3.

49
00:03:13.602 --> 00:03:18.204
&gt;&gt; Will Sentance: Is that right, yes, did
you see the answer, good, -2.3, exactly.

50
00:03:18.204 --> 00:03:22.548
So for this one,
our total from adding them all up, and

51
00:03:22.548 --> 00:03:25.958
then we put that into sigmoid is -2.3.

52
00:03:25.958 --> 00:03:29.970
What's -2.3 output?

53
00:03:29.970 --> 00:03:31.538
&gt;&gt; Speaker 3: Less than 10%?

54
00:03:31.538 --> 00:03:34.269
&gt;&gt; Will Sentance: It's less than 10%,
exactly, and what is it, roughly?

55
00:03:34.269 --> 00:03:37.123
&gt;&gt; Speaker 3: 9
&gt;&gt; Will Sentance: 9%, beautiful,

56
00:03:37.123 --> 00:03:43.558
let's do it in green because it's sigmoid,
it's 9%.

57
00:03:43.558 --> 00:03:45.462
Is 9% equal to 0?

58
00:03:45.462 --> 00:03:49.959
No, but it's like, that's the symbol for
roughly, I'll take it.

59
00:03:49.959 --> 00:03:56.726
And then we'll just do the other ones,
fully, what's the output of running,

60
00:03:56.726 --> 00:04:03.405
new multipliers on this set of 12 pixels
anyone see what the total output is?

61
00:04:03.405 --> 00:04:06.632
&gt;&gt; Kayla: 5.2
&gt;&gt; Will Sentance: 5.2, excellent Kayla,

62
00:04:06.632 --> 00:04:11.974
5.2, which is roughly what
through Sigmoid, Kayla?

63
00:04:11.974 --> 00:04:13.502
&gt;&gt; Kayla: 99%
&gt;&gt; Will Sentance: 99%,

64
00:04:13.502 --> 00:04:16.821
which is very much roughly a 100%.

65
00:04:16.821 --> 00:04:23.093
Okay, 2 out of 4, let's do it for
this sad phase here,

66
00:04:23.093 --> 00:04:29.256
it comes to roughly what can
we see on there, negative?

67
00:04:29.256 --> 00:04:31.552
&gt;&gt; Kayla: 2.4.

68
00:04:31.552 --> 00:04:33.939
&gt;&gt; Will Sentance: 2.4,
through sigmoid we get?

69
00:04:33.939 --> 00:04:34.853
&gt;&gt; Kayla: 8.

70
00:04:34.853 --> 00:04:41.590
&gt;&gt; Will Sentance: 8%, which is good
enough roughly, 0% we'll take it,

71
00:04:41.590 --> 00:04:46.317
and then the top one, we have what Kayla?

72
00:04:46.317 --> 00:04:46.817
&gt;&gt; Kayla: Two.

73
00:04:46.817 --> 00:04:50.222
&gt;&gt; Will Sentance: Two, which comes to?

74
00:04:50.222 --> 00:04:51.087
&gt;&gt; Kayla: 89.

75
00:04:51.087 --> 00:04:55.500
&gt;&gt; Will Sentance: 89% just
below our 90% as I said,

76
00:04:55.500 --> 00:04:59.245
just below the 90%, 89%,

77
00:04:59.245 --> 00:05:05.289
which is good enough [LAUGH] for
our model to 100%.

78
00:05:05.289 --> 00:05:09.517
Well, let's switch to
using a percentage now,

79
00:05:09.517 --> 00:05:16.024
we have accuracy of 93% on average,
and error how far off are we of 7%.

80
00:05:16.024 --> 00:05:21.651
So, that's how far off are we
on each case as opposed to like,

81
00:05:21.651 --> 00:05:27.402
is it right or wrong,
because we're no longer right or wrong.

82
00:05:27.402 --> 00:05:32.230
So we're very, very confident that
the top and the bottom are smiles,

83
00:05:32.230 --> 00:05:35.944
and we're very confident
that the middle two are not.

84
00:05:35.944 --> 00:05:41.366
Our model has done a really good
job of converting our samples such

85
00:05:41.366 --> 00:05:48.181
that we can now use it on another image,
or even check it without validation data.

86
00:05:48.181 --> 00:05:50.971
But look at this, people,
look how different the value is.

87
00:05:50.971 --> 00:05:53.774
It's 5.2 on this lower image, and

88
00:05:53.774 --> 00:05:58.330
it's 2 on this upper image before
we run it through sigmoid,

89
00:05:58.330 --> 00:06:02.817
where it becomes 99% and
89%, both quite confident.

90
00:06:02.817 --> 00:06:05.031
Now we have a measure of our confidence.

91
00:06:05.031 --> 00:06:09.541
This is a very smile, very,
very smile, this is a quite smile,

92
00:06:09.541 --> 00:06:11.389
which sorta makes sense.

93
00:06:11.389 --> 00:06:14.748
It's got stuff going on that looks
a bit like the non smile, whereas this,

94
00:06:14.748 --> 00:06:18.015
there's none of the stuff going on,
that looks a bit like the non smile.

95
00:06:18.015 --> 00:06:23.702
So now we're almost there,
people, let's validate.

96
00:06:23.702 --> 00:06:27.993
So, we're doing well enough that
we can validate on a new smile.

97
00:06:27.993 --> 00:06:31.990
I'm sorry, I'm gonna squeeze in here,

98
00:06:31.990 --> 00:06:36.566
it's very,
very messy of me to do validation.

99
00:06:36.566 --> 00:06:43.117
Okay, new smile,
we've got 101, 000, 110, 111.

100
00:06:43.117 --> 00:06:48.866
There it is, is that a smile?

101
00:06:48.866 --> 00:06:52.683
That is not a smile,
we label it, not smile.

102
00:06:52.683 --> 00:06:54.548
But we're gonna run our multipliers.

103
00:06:54.548 --> 00:06:59.031
Everybody, it's arithmetic time,
run our multipliers.

104
00:06:59.031 --> 00:07:00.877
[SOUND].

105
00:07:00.877 --> 00:07:01.642
&gt;&gt; Will Sentance: Run our multipliers.

106
00:07:04.244 --> 00:07:07.688
&gt;&gt; Will Sentance: There it is,
run our multipliers through, and

107
00:07:07.688 --> 00:07:12.267
what do we get, everybody ready,
Maria, it's your moment.

108
00:07:12.267 --> 00:07:13.096
&gt;&gt; Maria: The first one?

109
00:07:13.096 --> 00:07:16.584
&gt;&gt; Will Sentance: Yeah,
give me the go ahead, sorry, Maria.

110
00:07:16.584 --> 00:07:17.252
&gt;&gt; Maria: 0.5.

111
00:07:17.252 --> 00:07:17.863
&gt;&gt; Will Sentance: Yeah, beautiful.
&gt;&gt; Speaker 2: 0.

112
00:07:17.863 --> 00:07:25.246
&gt;&gt; Will Sentance: 0, -0.5, yep,
then we got a lot of 0s and then?

113
00:07:25.246 --> 00:07:26.189
&gt;&gt; Maria: - 2.2.

114
00:07:26.189 --> 00:07:30.487
&gt;&gt; Will Sentance: + 2.2 plus no, negative-
&gt;&gt; Maria: 2.5

115
00:07:30.487 --> 00:07:35.345
&gt;&gt; Will Sentance: Yeah, -2.5 + 0.

116
00:07:35.345 --> 00:07:37.657
&gt;&gt; Maria: And then -1.6.

117
00:07:37.657 --> 00:07:38.429
&gt;&gt; Will Sentance: Well done.

118
00:07:38.429 --> 00:07:41.326
&gt;&gt; Maria: + 1.9- 1.6.

119
00:07:41.326 --> 00:07:44.606
&gt;&gt; Will Sentance: Okay, math time [LAUGH].

120
00:07:44.606 --> 00:07:47.954
&gt;&gt; Speaker 3: -2.6, I have a calculator.

121
00:07:47.954 --> 00:07:52.181
&gt;&gt; Kayla: [LAUGH]
&gt;&gt; Will Sentance: Outrageous, yeah, 5,

122
00:07:52.181 --> 00:07:53.721
-2.6.

123
00:07:53.721 --> 00:07:56.169
Honestly, you saved us all a lot of time.

124
00:07:56.169 --> 00:07:58.787
&gt;&gt; Speaker 3: None of us need to do that,
we went through grade school.

125
00:07:58.787 --> 00:08:00.758
&gt;&gt; Will Sentance: This is
very important material.

126
00:08:00.758 --> 00:08:01.748
&gt;&gt; Speaker 3: Sorry [LAUGH].

127
00:08:01.748 --> 00:08:05.616
&gt;&gt; Will Sentance: There we go, run it
through, and what's the output of that?

128
00:08:05.616 --> 00:08:08.065
&gt;&gt; Speaker 3: Less than five.

129
00:08:08.065 --> 00:08:14.593
&gt;&gt; Will Sentance: Yeah, maybe even less,
yeah, I think it's probably about 7%.

130
00:08:14.593 --> 00:08:19.009
Look at that, we know it's not a small,
we gave it 0%,

131
00:08:19.009 --> 00:08:22.696
our multiplies through
sigmoid given us 7%.

132
00:08:22.696 --> 00:08:27.593
I would say that accuracy,
the error there for our validation data,

133
00:08:27.593 --> 00:08:30.639
albeit we only have one in our validation.

134
00:08:30.639 --> 00:08:36.705
Our error is therefore 7%, the target, 0%,
the error therefore is seven off that 7%.

135
00:08:36.705 --> 00:08:39.475
And that's why an error being
a bit higher, not a bad thing,

136
00:08:39.475 --> 00:08:41.060
that's really good confidence.

137
00:08:41.060 --> 00:08:42.771
We're very happy with that,
we're very happy with that.

138
00:08:42.771 --> 00:08:46.574
So, how's it doing our validation data?

139
00:08:46.574 --> 00:08:51.888
It does really nicely,
so, there we go, people,

140
00:08:51.888 --> 00:08:56.220
this stuff is really challenging stuff.

141
00:08:56.220 --> 00:09:00.387
We built out here a set
of weights through.

142
00:09:00.387 --> 00:09:05.539
We didn't see the 100 stages
of tries of tweaking,

143
00:09:05.539 --> 00:09:10.691
but we did one,
that we did each tweak independently,

144
00:09:10.691 --> 00:09:14.053
which way should I tweak up or down?

145
00:09:14.053 --> 00:09:17.337
And we saw up better go down on that one,
and

146
00:09:17.337 --> 00:09:21.647
then we mirrored as Jamie did
better go down on that one.

147
00:09:21.647 --> 00:09:25.567
And we check each of them independently,
go back to 0 of all the others each time.

148
00:09:25.567 --> 00:09:30.857
But then we were allowed to
mathematically do them all at once.

149
00:09:30.857 --> 00:09:35.428
And in one go, increase the one
that said go up if you just did it,

150
00:09:35.428 --> 00:09:40.340
decrease the one that said go down
if you just change that weight, and

151
00:09:40.340 --> 00:09:43.665
we did it all at once and
we got whatever it was.

152
00:09:43.665 --> 00:09:48.006
It was like 1- 1, 1,- 1, 1, -1.

153
00:09:48.006 --> 00:09:52.678
And that got us closer to
our targets of 1, smile,

154
00:09:52.678 --> 00:09:56.275
-1, not, -1, not, 1, smile.

155
00:09:56.275 --> 00:10:01.038
Problem is there was no perfect
conversion set of multipliers.

156
00:10:01.038 --> 00:10:05.662
If we wanted to light for light match
up ones, out of our prediction or

157
00:10:05.662 --> 00:10:09.195
-1s out of our prediction,
out of our converter.

158
00:10:09.195 --> 00:10:12.693
And that would prevent us using
it on our larger population.

159
00:10:12.693 --> 00:10:16.465
We'd get a bunch of random numbers
that were neither 1 nor -1.

160
00:10:16.465 --> 00:10:19.435
So we don't know is it a smile, or not,

161
00:10:19.435 --> 00:10:23.222
even though our sample only labeled 1s and
-1.

162
00:10:23.222 --> 00:10:26.194
So we said,
if there's no perfect conversion,

163
00:10:26.194 --> 00:10:29.165
maybe the size of how positive or
negative it is,

164
00:10:29.165 --> 00:10:33.304
could be a useful indicator of how
confident we are, it's a smile.

165
00:10:33.304 --> 00:10:36.860
Well, yeah, if we're gonna do that,
let's run it through

166
00:10:36.860 --> 00:10:41.258
a sigmoid function that then actually
squashes our big positive numbers,

167
00:10:41.258 --> 00:10:44.353
very confident down to about 97, 96, 95%.

168
00:10:44.353 --> 00:10:47.154
And squashes are big negative numbers.

169
00:10:47.154 --> 00:10:48.819
Very confident it's not a smile.

170
00:10:48.819 --> 00:10:53.560
I know we only had -1 and -1, but
you can imagine a different sample,

171
00:10:53.560 --> 00:10:57.293
big negative numbers,
definitely not as small, into,

172
00:10:57.293 --> 00:11:00.589
remember all negative
numbers are below 50%.

173
00:11:00.589 --> 00:11:04.237
And all negative numbers lower
than about -5 are like or

174
00:11:04.237 --> 00:11:08.201
-2 are like under 10%
,squash those into under 10%.

175
00:11:08.201 --> 00:11:14.614
And then rather than have our labels
be 1 and -1, just say 100% and 0%.

176
00:11:14.614 --> 00:11:20.125
And now we're trying to convert our
12 numbers through our multipliers,

177
00:11:20.125 --> 00:11:25.548
and through our sigmoid conversion
to get to something close to 100%,

178
00:11:25.548 --> 00:11:31.592
something close to 0%, something
close to 0%, something close to 100%.

179
00:11:31.592 --> 00:11:37.163
And our accuracy is now measured
in percentage how far off we are,

180
00:11:37.163 --> 00:11:42.136
but we now have the possibility
of a bunch of multipliers.

181
00:11:42.136 --> 00:11:47.403
That actually give us, firstly,
they don't need to be exactly

182
00:11:47.403 --> 00:11:52.680
to be correct matching, so
that enables it to even be possible.

183
00:11:52.680 --> 00:11:57.618
But also, it's rather nice that they also
mirror kinda a percentage confidence.

184
00:11:57.618 --> 00:12:00.570
This means we're really
quite confident now,

185
00:12:00.570 --> 00:12:03.684
this means we're quite
confident it's a smile.

186
00:12:03.684 --> 00:12:05.443
This means,
this is definitely the shape of a smile.

187
00:12:05.443 --> 00:12:09.004
Now, this is for our existing historic,
our sample data.

188
00:12:09.004 --> 00:12:13.682
We then used that on a new,
in this case, validation so

189
00:12:13.682 --> 00:12:20.932
we did actually know it wasn't a smile, we
used it on this image, and got out a 7%.

190
00:12:20.932 --> 00:12:25.493
A pretty high degree of confidence,
no smile in this image.

191
00:12:25.493 --> 00:12:28.860
Using our model,
we knew it was a smile, but

192
00:12:28.860 --> 00:12:34.600
we're able to use our multipliers on
it and get out as the output -2.6.

193
00:12:34.600 --> 00:12:39.176
So quite a negative number, and
convert it to a sigmoid cuz it

194
00:12:39.176 --> 00:12:43.324
squashes all numbers into between 0% and
100%.

195
00:12:43.324 --> 00:12:49.919
And so negative numbers, even as not that
small, but below -2, as Joe was asking,

196
00:12:49.919 --> 00:12:55.249
into a 7%, and now we can feel pretty
confident this is not a smile.

197
00:12:55.249 --> 00:13:00.338
And this, people,
is full your network implementation,

198
00:13:00.338 --> 00:13:03.186
would be a single A your network,

199
00:13:03.186 --> 00:13:08.478
single F weights where we use
gradient decent to figure out how

200
00:13:08.478 --> 00:13:13.505
to get closer to more of that
sample converting actually.

201
00:13:13.505 --> 00:13:19.479
Side note typically we would refer
not to the accuracy conversion but

202
00:13:19.479 --> 00:13:21.231
the average error.

203
00:13:21.231 --> 00:13:24.839
The average error is known as the loss, so

204
00:13:24.839 --> 00:13:30.626
you might have heard of a machine
learning model minimizing loss.

205
00:13:30.626 --> 00:13:35.158
In fact, you might have heard that
training a neural network is about finding

206
00:13:35.158 --> 00:13:36.353
the loss function.

207
00:13:36.353 --> 00:13:42.258
That is to say, how has I changed these
Multipliers, does loss go up or down?

208
00:13:42.258 --> 00:13:44.731
And that's exactly what's happening.

209
00:13:44.731 --> 00:13:50.378
And the loss we wanted to go down steadily
get more and more converting correctly.

210
00:13:50.378 --> 00:13:56.669
Single layer neural network,
12 parameters we reached loss of 7%.

211
00:13:56.669 --> 00:13:59.727
We reached that error of
70% after a 100 iterations.

212
00:13:59.727 --> 00:14:06.446
We only saw one of them, but
after a 100 we got to these weights.

213
00:14:06.446 --> 00:14:09.687
This technique, we had four in our sample.

214
00:14:09.687 --> 00:14:13.855
This technique could be applied
to a 100,000 in our sample.

215
00:14:13.855 --> 00:14:19.445
There's no eyeballing here,
there's purely, per multiplier, try and

216
00:14:19.445 --> 00:14:25.940
tweak up or down independently, tweak up,
leave all the rest the same, run through.

217
00:14:25.940 --> 00:14:26.664
How's it do?

218
00:14:26.664 --> 00:14:28.432
Better worse, better, better,
better, better worse.

219
00:14:28.432 --> 00:14:32.918
But okay, well, then keep that tweet up,
tweet down, keep all the same,

220
00:14:32.918 --> 00:14:37.637
run through all the sample with everything
the same besides the little tweak.

221
00:14:37.637 --> 00:14:41.961
And we only have to do 12 checks then,
albeit on every sample element.

222
00:14:41.961 --> 00:14:44.418
12 checks on every sample element and

223
00:14:44.418 --> 00:14:49.189
then we just do all of those changes at
once, and then we do it all over again.

224
00:14:49.189 --> 00:14:53.893
New training iteration, and
then we do it all over again,

225
00:14:53.893 --> 00:15:00.235
getting our multipliers to get us closer
and closer to our sample converting.

