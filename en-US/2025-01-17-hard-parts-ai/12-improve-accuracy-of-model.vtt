WEBVTT

1
00:00:00.000 --> 00:00:04.916
&gt;&gt; Will Sentance: So we definitely
improved our accuracy, fantastic, but

2
00:00:04.916 --> 00:00:06.532
something's up.

3
00:00:06.532 --> 00:00:12.289
Well, before we go into what's up,
first, figuring out learning

4
00:00:12.289 --> 00:00:18.154
our multipliers with a larger sample,
we used independent checks.

5
00:00:18.154 --> 00:00:21.563
Independent means take just one of these.

6
00:00:21.563 --> 00:00:25.986
These are all zero, remember, and
when let's just try tweaking this one up.

7
00:00:25.986 --> 00:00:27.459
Did it make it net better?

8
00:00:27.459 --> 00:00:29.229
More conversions correctly.

9
00:00:29.229 --> 00:00:30.630
Converter work better.

10
00:00:30.630 --> 00:00:31.736
Kayla's nodding.

11
00:00:31.736 --> 00:00:32.842
It definitely did.

12
00:00:32.842 --> 00:00:34.906
Then we tried tweaking this one up.

13
00:00:34.906 --> 00:00:36.379
Did it make it net better?

14
00:00:36.379 --> 00:00:41.031
Did it make more conversions ff we had
this as a higher number than zero?

15
00:00:42.660 --> 00:00:44.893
&gt;&gt; Will Sentance: It did not.
Kayla is showing her head, and

16
00:00:44.893 --> 00:00:46.839
exactly right, it did not.

17
00:00:46.839 --> 00:00:51.779
So we said, okay, decrease the number
there, decrease the weight.

18
00:00:51.779 --> 00:00:56.045
We then Jamie spotted for
our bottom left corner here.

19
00:00:56.045 --> 00:00:59.344
Did it work better, up or down?
And Jamie did a quick calculation holding

20
00:00:59.344 --> 00:01:03.787
everything else at zero and
went okay, if that one's negative.

21
00:01:03.787 --> 00:01:07.545
Well, I think Jamie probably
spotted the mirror the reflection.

22
00:01:07.545 --> 00:01:11.303
But if that one's negative,
that one's negative, that's good.

23
00:01:11.303 --> 00:01:16.835
If they're all zeros converting and
that one's negative that's better.

24
00:01:16.835 --> 00:01:19.399
And then this one doesn't matter and

25
00:01:19.399 --> 00:01:24.524
this one's would be making it worse
conversion, the negative one here,

26
00:01:24.524 --> 00:01:29.420
but two out of four and one no change
improves the overall conversion.

27
00:01:29.420 --> 00:01:30.982
As Jamie said.
Then we did the other three, but

28
00:01:30.982 --> 00:01:34.624
we just kind of, I told you that that's
the direction to go for each of those.

29
00:01:34.624 --> 00:01:38.924
All we did was exactly the same step,
the same step we did here, here, here.

30
00:01:38.924 --> 00:01:40.460
We did it for these three.

31
00:01:40.460 --> 00:01:45.967
Always holding constant all the other
weights, all the other multipliers.

32
00:01:45.967 --> 00:01:51.474
But that surely can't be possible to then,
having said, the best direction to go for

33
00:01:51.474 --> 00:01:55.145
if everything's zero, and
we increase this one to one,

34
00:01:55.145 --> 00:01:59.811
it converts more of our sample correctly,
therefore and then do that for

35
00:01:59.811 --> 00:02:04.268
this one, do that for this one, and
then do them all at the same time.

36
00:02:04.268 --> 00:02:06.597
Surely it won't work.

37
00:02:06.597 --> 00:02:10.430
It worked for one by itself, and
it worked for this one by itself but

38
00:02:10.430 --> 00:02:13.308
that was going down when
everything else is zero,

39
00:02:13.308 --> 00:02:16.141
not when everything else
has also been changed.

40
00:02:16.141 --> 00:02:22.609
Surely we can't check the impact of each
weight change independent like that and

41
00:02:22.609 --> 00:02:26.031
then apply it all together and
yet we can and

42
00:02:26.031 --> 00:02:32.026
it's absolutely mission-critical to
finding the right multipliers for

43
00:02:32.026 --> 00:02:36.423
any degree of size of sample
that we are able to do that.

44
00:02:36.423 --> 00:02:41.291
If we keep our tweaks small
enough we can for two reasons.

45
00:02:41.291 --> 00:02:46.585
One, we keep them small enough,
we avoid interaction effects.

46
00:02:46.585 --> 00:02:52.388
Even though we checked, does increasing
this multiplier from zero to one convert

47
00:02:52.388 --> 00:02:58.273
more of our sample, the one multiplied by
the one, the one multiplied by the zero,

48
00:02:58.273 --> 00:03:03.260
one more by the one, one more by the one,
and everything else is zero.

49
00:03:03.260 --> 00:03:04.793
Does it convert more of our sample?

50
00:03:04.793 --> 00:03:07.359
Yes, okay.

51
00:03:07.359 --> 00:03:11.207
Say for the middle bottom multiplier,
increase it,

52
00:03:11.207 --> 00:03:15.055
then forget about it and
get everything back to zero,

53
00:03:15.055 --> 00:03:19.853
including the one we just tweaked and
try tweaking this one up.

54
00:03:19.853 --> 00:03:21.137
That made things worse.

55
00:03:21.137 --> 00:03:23.537
So let's assume we need to tweak it down.

56
00:03:23.537 --> 00:03:27.307
It could be that we need to change it,
but in fact, we checked again,

57
00:03:27.307 --> 00:03:28.481
it was tweak it down.

58
00:03:28.481 --> 00:03:32.986
Then the same here, then we didn't do
these ones explicitly, but then the same

59
00:03:32.986 --> 00:03:37.575
here, this one would be, but always going
back to all the other ones being zero.

60
00:03:37.575 --> 00:03:43.688
It turns out, though, that due to what
discipline of math where small changes and

61
00:03:43.688 --> 00:03:48.397
we study how rates of change had
a reason about rates of change?

62
00:03:48.397 --> 00:03:49.152
&gt;&gt; Speaker 2: Calculus.

63
00:03:49.152 --> 00:03:52.750
&gt;&gt; Will Sentance: It's calculus.
This is known as partial differentiation

64
00:03:52.750 --> 00:03:57.336
where we make small changes
independent of each other of

65
00:03:57.336 --> 00:04:01.335
these multipliers we can
do them all together and

66
00:04:01.335 --> 00:04:07.108
be confident that they are all still
in the right direction of change.

67
00:04:07.108 --> 00:04:12.998
And that is absolutely mission critical
and is known as gradient descent.

68
00:04:12.998 --> 00:04:19.970
Taking independent steps towards improved
conversion accuracy for our sample.

69
00:04:19.970 --> 00:04:24.169
Independent steps and
then being able to do them all at once and

70
00:04:24.169 --> 00:04:29.098
know that even though independently
they were the right direction, but

71
00:04:29.098 --> 00:04:34.298
you're like, are they really going to
be the right direction altogether?

72
00:04:34.298 --> 00:04:38.188
They will be, because of these two
things we want them to be small,

73
00:04:38.188 --> 00:04:43.051
one is that avoids, it means that actually
increasing this one here from zero to one

74
00:04:43.051 --> 00:04:46.038
when everything else is
zero is the right move, but

75
00:04:46.038 --> 00:04:50.762
also increasing this from zero to one
when they've all had their little tweaks,

76
00:04:50.762 --> 00:04:55.654
it's still the right move because the
interaction effect is sufficiently small.

77
00:04:55.654 --> 00:05:00.150
As in you might be okay, the one here is
the right one to move, to increase but

78
00:05:00.150 --> 00:05:04.320
when I change all these, might this
not have been right to move to one?

79
00:05:04.320 --> 00:05:06.397
Maybe it should have said it's zero.

80
00:05:06.397 --> 00:05:10.284
No, if a tweak is small enough, knowing
which direction to go independently,

81
00:05:10.284 --> 00:05:13.077
we can then apply all at once and
get a better conversion.

82
00:05:13.077 --> 00:05:16.065
We went from zero,
if you remember, to three.

83
00:05:16.065 --> 00:05:20.220
And if we keep going,
maybe we'll get to four.

84
00:05:20.220 --> 00:05:20.801
Well, or maybe not.

85
00:05:20.801 --> 00:05:25.758
Two or b the reason we keep it
small is to prevent overshooting.

86
00:05:25.758 --> 00:05:30.178
What if we had kept growing
this not to one, but to 1.1.

87
00:05:30.178 --> 00:05:34.700
What would that have done to
our converted output here?

88
00:05:34.700 --> 00:05:40.859
Would it have overshot and
no longer have met, met our target of one?

89
00:05:40.859 --> 00:05:45.946
Machine learning is steady
incremental computer tweaking.

90
00:05:45.946 --> 00:05:49.696
After this first round,
we're still not fully accurate.

91
00:05:49.696 --> 00:05:51.305
So what do we do?

92
00:05:51.305 --> 00:05:54.090
We do this all over again.

93
00:05:54.090 --> 00:05:59.427
Starting with 0, 0, 0, 0, 1, -1,
-1, -1, -1, we will now assess

94
00:05:59.427 --> 00:06:04.574
do we want to increase or decrease this
one holding all the rest of them constant?

95
00:06:04.574 --> 00:06:09.108
And if we do, we'll hopefully improve our
accuracy a bit more or maybe not, and

96
00:06:09.108 --> 00:06:12.371
that's gonna be a problem
we're gonna spot in a moment.

