WEBVTT

1
00:00:00.000 --> 00:00:01.475
&gt;&gt; Jon Kuperman: Yeah, so
for this next section,

2
00:00:01.475 --> 00:00:03.530
we'll cover the essential Chrome DevTools,

3
00:00:03.530 --> 00:00:06.862
which I've kind of outlined as
the elements, console and sources panel.

4
00:00:06.862 --> 00:00:10.064
And we'll talk a little bit about what's
in them, how that stuff's created and

5
00:00:10.064 --> 00:00:12.575
why it's like there's some
important distinctions to make.

6
00:00:12.575 --> 00:00:16.605
I think, so back to the earlier page
where we've got this view source.

7
00:00:16.605 --> 00:00:23.098
So this is like the actual text that
comes down in an index HTML file.

8
00:00:23.098 --> 00:00:27.349
And one thing to note is that when you're
looking at the HTML inside the debugger,

9
00:00:27.349 --> 00:00:30.305
it's not just that it kind of
like collapses the trees and

10
00:00:30.305 --> 00:00:32.050
adds syntax highlighting to it.

11
00:00:32.050 --> 00:00:35.685
There's like quite a distinction
to be made between HTML and

12
00:00:35.685 --> 00:00:37.761
DOM, the document object model.

13
00:00:37.761 --> 00:00:42.753
And so the important thing here is that,
what the elements panel is showing

14
00:00:42.753 --> 00:00:47.667
you is this kind of living application
where that HTML has been rendered,

15
00:00:47.667 --> 00:00:52.602
and then the CSS has been rendered and
the CSS has been applied to the HTML.

16
00:00:52.602 --> 00:00:56.531
And then similarly, JavaScript has had
a chance to run and alter the HTML.

17
00:00:56.531 --> 00:01:01.087
And so it goes from becoming this kind of
flat list of texts, the original source

18
00:01:01.087 --> 00:01:05.371
code to being this very interactive DOM,
which has sizing information and

19
00:01:05.371 --> 00:01:09.726
positional information, has attributes
applying it as event listeners.

20
00:01:09.726 --> 00:01:11.856
I think there's an important
distinction to be made here.

21
00:01:11.856 --> 00:01:14.728
And one way of visualizing it,
which is cool,

22
00:01:14.728 --> 00:01:18.054
is there's this tool by
Hixie called the DOM viewer.

23
00:01:18.054 --> 00:01:20.636
And you can kind of take some HTML.

24
00:01:20.636 --> 00:01:25.052
And then you can, on the left, and then on
the right, you can actually see the kind

25
00:01:25.052 --> 00:01:29.342
of JavaScript DOM view that is created
from it, just to kind of visualize that we

26
00:01:29.342 --> 00:01:33.182
go from this idea of this kind of flat
list of tags to this tree of elements

27
00:01:33.182 --> 00:01:36.088
with attributes and
properties, things like that.

28
00:01:36.088 --> 00:01:40.785
And so when we're messing with the
elements panel, we're messing with this

29
00:01:40.785 --> 00:01:45.712
living document object as opposed to just
like a very nicely laid out set of HTML.

30
00:01:45.712 --> 00:01:49.946
There's a quite a big difference there
because all these attributes get applied

31
00:01:49.946 --> 00:01:54.118
with just the HTML you don't really have
any way of knowing that that h1 is going

32
00:01:54.118 --> 00:01:57.063
to get the font size 30 unless
you do it with your eyes.

33
00:01:57.063 --> 00:02:01.156
But with the DOM it's already been parsed
and applied so we already know that that

34
00:02:01.156 --> 00:02:04.845
HTML will have that class applied and
that there's a style sheet, etc.

35
00:02:04.845 --> 00:02:08.305
So things have to be sort of
assembled before the elements view.

36
00:02:08.305 --> 00:02:10.501
Another thing that's
kind of important is CSS.

37
00:02:10.501 --> 00:02:13.925
So we're gonna get into it
a little bit where we'll

38
00:02:13.925 --> 00:02:18.319
see this idea of computed styles or
this idea of conflicts in CSS.

39
00:02:18.319 --> 00:02:20.673
And this can be very confusing
when looking at the DevTools,

40
00:02:20.673 --> 00:02:22.577
but it's actually more
fundamental than that.

41
00:02:22.577 --> 00:02:27.093
And so how many people here have heard
of this idea of CSS specificity?

42
00:02:27.093 --> 00:02:30.478
Okay, cool, yeah, so
you've got this idea of specificity.

43
00:02:30.478 --> 00:02:32.799
It's not important to remember the order,

44
00:02:32.799 --> 00:02:37.327
it's just important to remember that there
is this kind of like battle that happens.

45
00:02:37.327 --> 00:02:40.784
And the idea that you can think about
is you can think about having multiple

46
00:02:40.784 --> 00:02:42.859
selectors that apply to a certain element.

47
00:02:42.859 --> 00:02:44.864
And they all say the color should be.

48
00:02:44.864 --> 00:02:49.750
So you can imagine a dev with a class and
an ID.

49
00:02:49.750 --> 00:02:52.426
And then you have a CSS
selector that says, okay well,

50
00:02:52.426 --> 00:02:53.946
devs should be the color blue.

51
00:02:53.946 --> 00:02:57.061
And then you have a class selector that
says, that class should be the color red.

52
00:02:57.061 --> 00:03:00.023
And then you have an ID selector that
says, that ID should be the color yellow.

53
00:03:00.023 --> 00:03:01.551
And now the browser has to figure
out what color should be the div.

54
00:03:01.551 --> 00:03:04.622
What to do with that information,
do I make it blue, or do I make it red,

55
00:03:04.622 --> 00:03:06.329
or do I make it yellow, how do I do that?

56
00:03:06.329 --> 00:03:09.434
And so we had to come up with
this standardized rule set for

57
00:03:09.434 --> 00:03:10.991
it called CSS specificity.

58
00:03:10.991 --> 00:03:13.927
And so you can kind of see
here that we have basically,

59
00:03:13.927 --> 00:03:17.136
it's just this order of priority
that goes all the way up.

60
00:03:17.136 --> 00:03:20.556
And so the more specific you get,
the more powerful it is.

61
00:03:20.556 --> 00:03:22.997
And the less specific you get,
the less powerful it is.

62
00:03:22.997 --> 00:03:28.837
And by specific, I mean if your CSS just
uses an element like dev, devs are blue.

63
00:03:28.837 --> 00:03:30.684
That's not very specific,
right, that's vague.

64
00:03:30.684 --> 00:03:31.890
It just applies to all divs.

65
00:03:31.890 --> 00:03:36.626
Whereas if you have an ID on a div, like
an ID of important or ID of hello, and

66
00:03:36.626 --> 00:03:39.428
you say divs with the ID
of hello are purple.

67
00:03:39.428 --> 00:03:41.341
That's more specific, right?

68
00:03:41.341 --> 00:03:45.078
So we've said that, yeah,
divs are blue, but this div is purple.

69
00:03:45.078 --> 00:03:48.211
And it goes kind of all the way up,
eventually ending with that inline

70
00:03:48.211 --> 00:03:51.670
important word, which I'm assuming
people have used while frustrated and

71
00:03:51.670 --> 00:03:53.851
unable to get their styles
to apply correctly.

72
00:03:53.851 --> 00:03:57.555
So there's a lot to be
kinda gleaned from here.

73
00:03:57.555 --> 00:04:00.327
I think that coming up with
ways of doing your selectors so

74
00:04:00.327 --> 00:04:03.276
that they won't accidentally
clash with other selectors,

75
00:04:03.276 --> 00:04:07.297
like probably having an element selector
is something to largely stay away from.

76
00:04:07.297 --> 00:04:10.028
Sometimes you'll want it for a base style.

77
00:04:10.028 --> 00:04:13.204
You also don't necessarily wanna
cover your whole code with IDs, so

78
00:04:13.204 --> 00:04:15.406
you can take advantage of
the nice parts of CSS.

79
00:04:15.406 --> 00:04:19.495
But it leads into all of these
philosophical how to name your CSS classes

80
00:04:19.495 --> 00:04:20.867
or when to use classes.

81
00:04:20.867 --> 00:04:23.833
Classes are IDs, and that's really
out of the scope of this course.

82
00:04:23.833 --> 00:04:27.602
But the important thing to know is
that the dev tools will show you,

83
00:04:27.602 --> 00:04:31.526
after all the specificity rules applied,
which one is being shown.

84
00:04:31.526 --> 00:04:35.112
And if you ever see your attribute
that you're looking for with a strike

85
00:04:35.112 --> 00:04:39.611
through it, it's because something else
was more specific, that's why it's there.

86
00:04:39.611 --> 00:04:41.047
So we're gonna cover all that.

87
00:04:41.047 --> 00:04:43.392
The last thing to talk
about is source maps.

88
00:04:43.392 --> 00:04:46.961
So, we mentioned this a little
earlier in the course, but more and

89
00:04:46.961 --> 00:04:50.149
more these days,
the application code that runs is more and

90
00:04:50.149 --> 00:04:52.853
more dissimilar from your
original source code.

91
00:04:52.853 --> 00:04:57.373
Whether you have a Javascript app that
you've been running through, I don't know,

92
00:04:57.373 --> 00:05:01.077
like Veet and Webpack and use Typescript
and those get stripped out and

93
00:05:01.077 --> 00:05:04.185
then you use like Tercer and
it does this like optimizing.

94
00:05:04.185 --> 00:05:07.768
You have this huge build pipeline, whether
you're doing some web assembly stuff and

95
00:05:07.768 --> 00:05:10.754
it's an actual different programming
language like you write C++ or

96
00:05:10.754 --> 00:05:12.494
you write rust and it runs as Javascript,

97
00:05:12.494 --> 00:05:15.054
there's all this disconnect
kind of between these things.

98
00:05:15.054 --> 00:05:18.874
And the dev tools is like the important
place where they do the best work

99
00:05:18.874 --> 00:05:23.474
that they can to kind of reassemble things
and help you understand where these things

100
00:05:23.474 --> 00:05:27.917
came from because more and more like if
you were looking at that view page source.

101
00:05:27.917 --> 00:05:32.110
That's even less helpful now than it was
ten years ago because the chances are that

102
00:05:32.110 --> 00:05:36.124
markup is being assembled from 80
different react components that are going

103
00:05:36.124 --> 00:05:39.810
through Javascript and all being applied,
it gets very complicated.

104
00:05:39.810 --> 00:05:44.594
And so we'll talk a little bit about,
the importance of source maps and

105
00:05:44.594 --> 00:05:46.996
where those come into this as well.

