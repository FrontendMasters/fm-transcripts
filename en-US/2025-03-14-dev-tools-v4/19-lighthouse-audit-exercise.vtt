WEBVTT

1
00:00:00.000 --> 00:00:02.950
&gt;&gt; Jon Kuperman: For the next thing,
we'll go to the Exercises, and

2
00:00:02.950 --> 00:00:06.449
we'll go to Lighthouse, and
we will see this very slow page.

3
00:00:06.449 --> 00:00:09.837
And yeah, please go ahead and
run a Lighthouse audit on this.

4
00:00:09.837 --> 00:00:11.618
You've sort of got two
different options here.

5
00:00:11.618 --> 00:00:14.645
If you'd like to just kind of loosely
follow along, run the Lighthouse audit.

6
00:00:14.645 --> 00:00:16.947
And then just kind of read
through some of the things and

7
00:00:16.947 --> 00:00:19.013
make sure you understand and
internalize them.

8
00:00:19.013 --> 00:00:22.725
If you have the code running locally,
please feel free to go ahead and

9
00:00:22.725 --> 00:00:25.809
change the source code,
according to the suggestions.

10
00:00:25.809 --> 00:00:27.113
And then reload the page and

11
00:00:27.113 --> 00:00:30.860
see if you can get your Lighthouse scores
at least up into the green somewhere.

12
00:00:30.860 --> 00:00:33.692
&gt;&gt; Speaker 2: How would you compare
Lighthouse to PageSpeed Insights?

13
00:00:33.692 --> 00:00:35.142
&gt;&gt; Jon Kuperman: Yeah,
that's a great question.

14
00:00:35.142 --> 00:00:40.202
So I think that, in many ways, Lighthouse
is the new and reimagined version.

15
00:00:40.202 --> 00:00:43.955
I think that if you were to go with one,
going with Lighthouse would be great.

16
00:00:43.955 --> 00:00:49.322
In a lot of ways, PageSpeed Insights
is a subset of the Lighthouse rule set.

17
00:00:49.322 --> 00:00:52.486
I do think that if you have a current
workflow, like a CI workflow with

18
00:00:52.486 --> 00:00:55.616
PageSpeed Insights, that's excellent,
that's really great.

19
00:00:55.616 --> 00:00:58.284
I don't think there's a big
call to migrate over, but

20
00:00:58.284 --> 00:01:01.483
if you were starting something new,
I would go with Lighthouse.

21
00:01:01.483 --> 00:01:04.999
It's got a lot more contributors,
it's a lot more open and established, and

22
00:01:04.999 --> 00:01:06.766
I think it's really well thought out.

23
00:01:06.766 --> 00:01:10.318
But it's one of those things I
would not recommend switching for

24
00:01:10.318 --> 00:01:11.644
the sake of switching.

25
00:01:11.644 --> 00:01:15.245
If you've got a workflow that's set up
with PageSpeed Insights, that's great.

26
00:01:18.779 --> 00:01:22.293
&gt;&gt; Jon Kuperman: Cool, yeah, I wanted to
give a call-out here for this exercise.

27
00:01:22.293 --> 00:01:26.178
And then going forward, I think there's
slightly more value you get out of

28
00:01:26.178 --> 00:01:30.201
running the code locally, whereas
the previous exercises were identical.

29
00:01:30.201 --> 00:01:34.941
So just another call-out if you
wanna go here and grab this and

30
00:01:34.941 --> 00:01:38.234
then just run it with
a simple HTTP server.

31
00:01:38.234 --> 00:01:40.181
It can be a little bit more
fun as you're going through.

32
00:01:40.181 --> 00:01:44.185
Again, completely optional, feel free to
use masteringdevtools.com, but if you

33
00:01:44.185 --> 00:01:47.978
wanna really get in there and mess around
with stuff, local can be a bit more fun.

34
00:01:47.978 --> 00:01:50.825
So cool, let's run through this together.

35
00:01:50.825 --> 00:01:54.363
It's a very tricky balance making
the most annoying site I can, but

36
00:01:54.363 --> 00:01:58.085
then also knowing that I'll have to be
live in front of a lot of people and

37
00:01:58.085 --> 00:02:00.774
not lose my cool while trying
to mess with the site.

38
00:02:00.774 --> 00:02:03.818
Maybe I went a little overboard on
annoyance with all these pop-ups.

39
00:02:03.818 --> 00:02:08.736
But okay, so
we'll analyze page load, let it go.

40
00:02:08.736 --> 00:02:12.744
It's quite a lot over these requests.

41
00:02:12.744 --> 00:02:15.895
No, just do what you want, just do it.

42
00:02:15.895 --> 00:02:18.818
Okay, great, so we did pretty poorly.

43
00:02:18.818 --> 00:02:24.603
Boy, [LAUGH] yeah, I saw,
I can't remember where it landed.

44
00:02:24.603 --> 00:02:28.282
There was a cool discussion about
all these pop-ups for location and

45
00:02:28.282 --> 00:02:32.026
all these different permissions
that were Chrome, I think was like,

46
00:02:32.026 --> 00:02:33.818
we wanna make it more punishing.

47
00:02:33.818 --> 00:02:38.270
Where if you click no, then you as an app
developer have lost your opportunity,

48
00:02:38.270 --> 00:02:40.539
you can't pop it up again, basically.

49
00:02:40.539 --> 00:02:44.080
I don't know if that went through or
not, encouraging you to be like,

50
00:02:44.080 --> 00:02:47.694
wait until I hit open map and
then ask for my location, don't just ask.

51
00:02:47.694 --> 00:02:48.775
But anyway, I digress.

52
00:02:48.775 --> 00:02:51.355
Okay, so
we did pretty poorly on these things, but

53
00:02:51.355 --> 00:02:55.435
I think it's a cool opportunity to look
through a whole variety of things that may

54
00:02:55.435 --> 00:02:56.335
have gone wrong.

55
00:02:56.335 --> 00:02:57.357
How did people find it?

56
00:02:57.357 --> 00:03:00.221
Was it somewhat digestible as
you were kinda clicking through?

57
00:03:00.221 --> 00:03:01.076
Did the messages make sense?

58
00:03:01.076 --> 00:03:03.344
I think they've done a really
excellent job with that.

59
00:03:03.344 --> 00:03:04.927
So yeah, I think this is good.

60
00:03:04.927 --> 00:03:09.403
So we can see right away,
the first paint took too long.

61
00:03:09.403 --> 00:03:12.394
We didn't have anything blocking,
no layout shifts, which is nice, but

62
00:03:12.394 --> 00:03:14.631
just in general,
we did very poorly on the speed index.

63
00:03:14.631 --> 00:03:16.278
And then if we wanna drill down into why,

64
00:03:16.278 --> 00:03:18.128
we can start really
looking at these things.

65
00:03:18.128 --> 00:03:21.618
So largest contentful paint,
we can see here.

66
00:03:21.618 --> 00:03:25.522
And this is the element that was given
the largest contentful paint, and

67
00:03:25.522 --> 00:03:27.385
we can see that it took a long time.

68
00:03:27.385 --> 00:03:29.939
So we can kind of start
going through these and

69
00:03:29.939 --> 00:03:33.919
kind of putting together an understanding
of why this might be so off.

70
00:03:33.919 --> 00:03:37.364
So we can see there's a lot of JavaScript,
if we minified it,

71
00:03:37.364 --> 00:03:39.101
we would save 56 kilobytes.

72
00:03:39.101 --> 00:03:42.537
So that's important, that's like
gonna be blocking as it's parsing and

73
00:03:42.537 --> 00:03:43.415
things like that.

74
00:03:43.415 --> 00:03:45.714
Images are not in next-gen formats.

75
00:03:45.714 --> 00:03:49.271
So we can see here that we've got
this big image of the cat here.

76
00:03:49.271 --> 00:03:56.774
And it looks like the cat is a,
it doesn't say what the format is.

77
00:03:56.774 --> 00:03:59.938
Images, it says what's better, I guess-.

78
00:03:59.938 --> 00:04:00.727
&gt;&gt; Speaker 2: It's a JPEG.

79
00:04:00.727 --> 00:04:02.770
&gt;&gt; Jon Kuperman: Yeah, right,
I guess I was surprised it doesn't say.

80
00:04:02.770 --> 00:04:07.016
But we can go over to the Network tab and
I think we could do a refresh there and

81
00:04:07.016 --> 00:04:08.364
see that it's a JPEG and

82
00:04:08.364 --> 00:04:12.024
see that there are better formats
out there than JPEG like WebP.

83
00:04:12.024 --> 00:04:14.105
So yeah, so that's cool, so
we've got too much JavaScript.

84
00:04:14.105 --> 00:04:17.624
We've got a big image,
we've got no caching policies,

85
00:04:17.624 --> 00:04:22.700
we've got a bunch of unused JavaScript,
which I always find a really cool thing.

86
00:04:22.700 --> 00:04:25.969
Caveats here, so I guess a few years ago,
DevTools added this unused concept, right?

87
00:04:25.969 --> 00:04:30.077
So they have unused JavaScript,
unused CSS, and that's really great,

88
00:04:30.077 --> 00:04:34.600
because I think we can accidentally ship
a bunch of stuff, especially with CSS.

89
00:04:34.600 --> 00:04:36.881
Sometimes I look at what's unused,
I'm like, yeah,

90
00:04:36.881 --> 00:04:38.417
I totally got rid of all those elements.

91
00:04:38.417 --> 00:04:42.855
But the important thing for long-lived
applications is It might be unused now,

92
00:04:42.855 --> 00:04:45.801
but it doesn't mean it's
always going to be unused.

93
00:04:45.801 --> 00:04:49.550
So you can't necessarily delete
unused CSS because what if you have

94
00:04:49.550 --> 00:04:53.838
a modal that pops up later during a
workflow and that's what needs it styled?

95
00:04:53.838 --> 00:04:58.061
So you do need to be context-aware when
you're looking at these unused things.

96
00:04:58.061 --> 00:05:00.543
That being said,
if you don't need it till later,

97
00:05:00.543 --> 00:05:03.734
then you could defer the bundle
itself from loading too, right?

98
00:05:03.734 --> 00:05:06.130
You could have that JavaScript and
CSS bundle.

99
00:05:06.130 --> 00:05:09.447
So it does get a little bit tricky, but
I think unused is a very good metric.

100
00:05:09.447 --> 00:05:14.962
It just doesn't mean you can just delete
anything that's marked unused and be okay.

101
00:05:14.962 --> 00:05:18.977
Cool, so yeah, so basically I think
we found some really good stuff here,

102
00:05:18.977 --> 00:05:22.768
a ton of JavaScript, too big of an image,
the image is in a bad format.

103
00:05:22.768 --> 00:05:25.962
We get this kind of nice picture,
where the first paint was blocked for

104
00:05:25.962 --> 00:05:26.892
a really long time.

105
00:05:26.892 --> 00:05:29.280
That being said,
there weren't any layout shifts, and

106
00:05:29.280 --> 00:05:31.328
we were interactive right
away after we loaded.

107
00:05:31.328 --> 00:05:35.344
So that's 65 out of 100,
I think that puts us in an okay spot.

108
00:05:35.344 --> 00:05:38.337
Accessibility, did really badly.

109
00:05:38.337 --> 00:05:41.873
Mostly, we have these things, we have
this aria-hidden on the document body,

110
00:05:41.873 --> 00:05:44.896
meaning the whole document won't
be accessible to screen readers.

111
00:05:44.896 --> 00:05:47.155
That's a real problem.

112
00:05:47.155 --> 00:05:50.682
And then we have these aria-hidden
elements that have descendants that

113
00:05:50.682 --> 00:05:51.908
are meant to be focused.

114
00:05:51.908 --> 00:05:55.143
So we're basically saying, you can't focus
on these things, and later, we're saying,

115
00:05:55.143 --> 00:05:56.147
this needs to be focusable.

116
00:05:56.147 --> 00:05:59.618
So again, this gets covered a lot more
in-depth in my accessibility course, but

117
00:05:59.618 --> 00:06:01.193
we could do some really nice things.

118
00:06:01.193 --> 00:06:04.599
We go through the code and
we could remove these aria-hidden tags,

119
00:06:04.599 --> 00:06:06.880
which probably aren't doing us any favors.

120
00:06:06.880 --> 00:06:10.838
We also have the document with no title
element, so we don't have a title up here

121
00:06:10.838 --> 00:06:14.345
in the head for the screen reader to
read out what document you're on.

122
00:06:14.345 --> 00:06:17.417
So we could probably fix those
things in three minutes and

123
00:06:17.417 --> 00:06:19.529
get some really nice gains out of that.

124
00:06:19.529 --> 00:06:23.268
Moving on to best practices,
we've got this thing that it catches,

125
00:06:23.268 --> 00:06:26.564
wherever you prevent users from
pasting into input fields.

126
00:06:26.564 --> 00:06:29.311
Remember this from our essential one.

127
00:06:29.311 --> 00:06:31.420
We also don't have a meta viewport.

128
00:06:31.420 --> 00:06:35.588
And again, if you're curious about these
things, why do we need this meta viewport,

129
00:06:35.588 --> 00:06:39.262
we can see that it basically helps your
app be optimized for mobile screens.

130
00:06:39.262 --> 00:06:43.080
So it can provide a really big boost to
your app's loading time if you add these

131
00:06:43.080 --> 00:06:44.197
these viewport tags,

132
00:06:44.197 --> 00:06:47.570
and you can click through here to
see a bunch more information on it.

133
00:06:47.570 --> 00:06:50.630
And similarly, for SEO,
we don't have the title element.

134
00:06:50.630 --> 00:06:55.011
I think this is an important caveat here,
cuz I do a lot of teaching on performance,

135
00:06:55.011 --> 00:06:58.159
I do a lot of teaching on
accessibility and the crossovers.

136
00:06:58.159 --> 00:07:01.889
Being good at one, or helping your website
with one, helps it with the other so

137
00:07:01.889 --> 00:07:03.537
often, which I find really nice.

138
00:07:03.537 --> 00:07:07.542
So thinking about it for an example,
adding a simple title element crosses over

139
00:07:07.542 --> 00:07:09.945
the threshold between SEO and
accessibility.

140
00:07:09.945 --> 00:07:13.462
So accessibility for the screen reader
reading what document you're on, and

141
00:07:13.462 --> 00:07:15.763
SEO for
the search result knowing what to display.

142
00:07:15.763 --> 00:07:20.695
But this is similarly true, for
example, keyboard shortcuts or

143
00:07:20.695 --> 00:07:25.457
any kind of partial loading,
where something comes in later.

144
00:07:25.457 --> 00:07:28.746
For an accessibility standpoint,
you can add aria attributes and

145
00:07:28.746 --> 00:07:31.753
have the document announce that
an image has just loaded in.

146
00:07:31.753 --> 00:07:33.194
And from a performance standpoint,

147
00:07:33.194 --> 00:07:35.806
you cannot load that image immediately
cuz you don't need it yet.

148
00:07:35.806 --> 00:07:39.500
And so I find that the crossover between
these things is very pleasant a lot

149
00:07:39.500 --> 00:07:40.044
of times.

150
00:07:40.044 --> 00:07:43.213
Where if you make your
website very SEO optimized,

151
00:07:43.213 --> 00:07:47.488
you'll often get performance and
accessibility wins just by virtue

152
00:07:47.488 --> 00:07:50.890
of doing that, and
vice versa when you do a full audit.

153
00:07:50.890 --> 00:07:54.826
Another one's semantic HTML, that can be
faster cuz it has to do less laying out

154
00:07:54.826 --> 00:07:56.609
and it can also be more accessible.

155
00:07:56.609 --> 00:07:59.537
That's another one of switching
from divs with click handlers and

156
00:07:59.537 --> 00:08:01.993
all this JavaScript to a button,
something like that,

157
00:08:01.993 --> 00:08:05.045
can give you all these different ways,
which I think is kind of nice.

158
00:08:05.045 --> 00:08:07.894
So yeah, we don't have our meta
description, we don't have our title.

159
00:08:07.894 --> 00:08:09.622
So yeah, hopefully this one went well.

160
00:08:09.622 --> 00:08:13.608
This is a really nice starting place,
just go hit your app with Lighthouse,

161
00:08:13.608 --> 00:08:14.744
get an initial idea.

162
00:08:14.744 --> 00:08:17.320
Does anybody have any Lighthouse
questions before we move on?

163
00:08:17.320 --> 00:08:21.136
&gt;&gt; Speaker 2: Looks like the unused
JavaScript shows the particularly large

164
00:08:21.136 --> 00:08:25.600
JavaScript files in their modules,
is there a way to see that total list of

165
00:08:25.600 --> 00:08:28.633
unused JavaScript rather
than just the top ones?

166
00:08:28.633 --> 00:08:31.756
&gt;&gt; Jon Kuperman: Yeah, so
let me actually look into this,

167
00:08:31.756 --> 00:08:35.074
because there used to
be quite a cool thing.

168
00:08:35.074 --> 00:08:36.995
This might take me a minute to find.

169
00:08:40.003 --> 00:08:43.234
&gt;&gt; Jon Kuperman: There is quite a cool,

170
00:08:48.901 --> 00:08:52.142
&gt;&gt; Jon Kuperman: Yes, this.

171
00:08:52.142 --> 00:08:53.048
So check this out,

172
00:08:53.048 --> 00:08:56.455
let me make sure it's the right thing
before I show you how to get there.

173
00:09:02.489 --> 00:09:06.577
&gt;&gt; Jon Kuperman: Maybe this
isn't what I thought it was.

174
00:09:06.577 --> 00:09:10.710
Yeah, okay, so here,
does this only work with CSS?

175
00:09:16.285 --> 00:09:19.667
&gt;&gt; Jon Kuperman: Give me a second
here to kind of figure things out.

176
00:09:19.667 --> 00:09:22.641
There's a really nice workflow.

177
00:09:22.641 --> 00:09:27.970
Yeah, so okay, let me back it up then,
now I can act all polished about this.

178
00:09:27.970 --> 00:09:28.970
Yeah, so this is great.

179
00:09:28.970 --> 00:09:31.786
So the Lighthouse audit can give you
this basic concept of unused, and

180
00:09:31.786 --> 00:09:33.802
it'll show you the largest
ones that are unused.

181
00:09:33.802 --> 00:09:37.477
Because the point of Lighthouse is trying
to get you the lowest hanging fruit to get

182
00:09:37.477 --> 00:09:38.340
your site faster.

183
00:09:38.340 --> 00:09:42.482
But the Chrome DevTools actually
provides a really nice,

184
00:09:42.482 --> 00:09:46.637
deep insight into unused code,
both JavaScript and CSS.

185
00:09:46.637 --> 00:09:49.630
And in order to get there,
you can open up the DevTools,

186
00:09:49.630 --> 00:09:52.000
hit Escape to open up
this little subpanel.

187
00:09:52.000 --> 00:09:55.280
Then you can click on the hamburger menu,
you can click into Coverage.

188
00:09:55.280 --> 00:09:58.673
And then when you click into Coverage, you
can do another refresh of your website.

189
00:09:58.673 --> 00:10:02.396
And what this will do is it'll list all
of your CSS and all of your JavaScript.

190
00:10:02.396 --> 00:10:04.301
As well as when you click on one,

191
00:10:04.301 --> 00:10:08.197
it will show you in the Sources tab
what is used and what is unused.

192
00:10:08.197 --> 00:10:10.813
And so
it'll show you these big blocks of red,

193
00:10:10.813 --> 00:10:14.918
like this page doesn't have an image
on it, so this image CSS is unused.

194
00:10:14.918 --> 00:10:18.305
Similarly, if we had anything here,
I think we use 100%, but

195
00:10:18.305 --> 00:10:21.464
you basically can get this really
granular view of each file.

196
00:10:21.464 --> 00:10:25.104
Which type it is, how big it is in total,
how much of that is unused, and

197
00:10:25.104 --> 00:10:26.757
then a little visualizer of it.

198
00:10:26.757 --> 00:10:28.223
Does this make sense as a concept?

199
00:10:28.223 --> 00:10:33.200
So having a more deep dive into out of
my CSS, 50% is unused on this page,

200
00:10:33.200 --> 00:10:35.822
out of my JavaScript, 0% is unused.

201
00:10:35.822 --> 00:10:37.597
So you can really see what ran and
what didn't.

202
00:10:37.597 --> 00:10:39.302
&gt;&gt; Speaker 3: How did you
get to that coverage page?

203
00:10:39.302 --> 00:10:42.045
&gt;&gt; Jon Kuperman: Yeah, so let's do it
one more time cuz it's a bit sneaky.

204
00:10:42.045 --> 00:10:45.672
So from any page in the DevTools that
you have open, you can hit Escape,

205
00:10:45.672 --> 00:10:48.344
which should pop open this
little subconsole here.

206
00:10:48.344 --> 00:10:50.419
And then from there,
you get this hamburger menu,

207
00:10:50.419 --> 00:10:52.018
which has a bunch of really cool stuff.

208
00:10:52.018 --> 00:10:54.693
We will cover this at the end,
under experiments, but

209
00:10:54.693 --> 00:10:57.730
we has a bunch of cool stuff here,
one of them being Coverage.

210
00:10:57.730 --> 00:11:00.670
And so now, with this selected,
whenever you hit Escape, on and off,

211
00:11:00.670 --> 00:11:01.896
you'll always have access.

212
00:11:01.896 --> 00:11:04.485
So you can kind of redesign your
little bottom tab to have whatever

213
00:11:04.485 --> 00:11:05.107
you want on it.

214
00:11:05.107 --> 00:11:08.705
But this is really great cuz you can
really dive in, you can be like, okay,

215
00:11:08.705 --> 00:11:12.040
what is being hit, what is not being
hit in all my JavaScript and CSS?

216
00:11:12.040 --> 00:11:17.176
&gt;&gt; Speaker 4: Sometimes if I
want to go to the website,

217
00:11:17.176 --> 00:11:20.809
I only use the one style CSS.

218
00:11:20.809 --> 00:11:21.599
&gt;&gt; Jon Kuperman: Yeah.

219
00:11:21.599 --> 00:11:25.600
&gt;&gt; Speaker 4: And sometimes you can go
to some page who don't use a lot of-

220
00:11:25.600 --> 00:11:27.484
&gt;&gt; Jon Kuperman: 100%, yeah.

221
00:11:27.484 --> 00:11:30.629
&gt;&gt; Speaker 4: So
if I see something like that,

222
00:11:30.629 --> 00:11:35.190
it's better to have a file for CSS or-
&gt;&gt; Jon Kuperman: I don't think so,

223
00:11:35.190 --> 00:11:38.224
it's a great question, because it's
like these tools are useful but

224
00:11:38.224 --> 00:11:39.420
they're also deceptive.

225
00:11:39.420 --> 00:11:43.331
So yeah, he's saying, you imagine you
have two pages, right, one and two, and

226
00:11:43.331 --> 00:11:47.088
you have one style.css, which has all
the style that you need for both pages.

227
00:11:47.088 --> 00:11:49.165
So you go to page one and
you look at coverage and

228
00:11:49.165 --> 00:11:52.864
it's like half of this is unused but it is
used, it's just used on the other page.

229
00:11:52.864 --> 00:11:57.956
So kind of should you break up your
styling by page or is that not necessary?

230
00:11:57.956 --> 00:12:00.895
I think it's like you have to
make a personal choice on.

231
00:12:00.895 --> 00:12:05.558
I think if you have a tremendous amount
of styling and a lot of pages that people

232
00:12:05.558 --> 00:12:09.503
spend a long time on, it could be
beneficial to bundle each page so

233
00:12:09.503 --> 00:12:12.916
that each page only has the JavaScript and
CSS it needs.

234
00:12:12.916 --> 00:12:14.292
I think a lot of the time,

235
00:12:14.292 --> 00:12:18.766
you're completely fine with a single
style sheet for your entire application.

236
00:12:18.766 --> 00:12:20.246
I do think it's worth considering,

237
00:12:20.246 --> 00:12:22.833
though, I think you should think
about how much you would save.

238
00:12:22.833 --> 00:12:26.359
So let's say we had one style sheet,
it was 100 kilobytes for two pages, and

239
00:12:26.359 --> 00:12:27.417
they're 50/50.

240
00:12:27.417 --> 00:12:31.236
I think it's probably worth it to break
it up to save the user from downloading

241
00:12:31.236 --> 00:12:32.605
50 kilobytes each time.

242
00:12:32.605 --> 00:12:36.564
If it's small amount or there's a lot of
shared code, then probably not worth it.

243
00:12:36.564 --> 00:12:39.069
I know that's a hand wavy answer, but

244
00:12:39.069 --> 00:12:42.986
I think I wouldn't necessarily
jump to making chunks, but

245
00:12:42.986 --> 00:12:47.471
I would consider it as a tool in your
toolkit cuz it could be worth it.

