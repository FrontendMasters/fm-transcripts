WEBVTT

1
00:00:00.000 --> 00:00:03.133
&gt;&gt; Jon Kuperman: So application,
this is basically like we have in the web,

2
00:00:03.133 --> 00:00:05.273
all sorts of ways that we can store data.

3
00:00:05.273 --> 00:00:09.868
We've got our cookies, our session
storage, local storage, index dB.

4
00:00:09.868 --> 00:00:11.172
We've got all these great things.

5
00:00:11.172 --> 00:00:12.985
There's a bunch of cool classes
in Frontend Masters for

6
00:00:12.985 --> 00:00:14.422
working with these various technologies.

7
00:00:14.422 --> 00:00:18.334
But the important thing to know is that if
you're storing stuff within the browser,

8
00:00:18.334 --> 00:00:20.220
this is where you can come to inspect it.

9
00:00:20.220 --> 00:00:24.735
To edit it, and probably most importantly,
to clear all site data.

10
00:00:24.735 --> 00:00:28.597
How many people use this application
tab just to clear all site data?

11
00:00:28.597 --> 00:00:32.697
All right, yes, so, yeah, if you ever
get into an area where your login is not

12
00:00:32.697 --> 00:00:35.632
working, or
something is behaving strangely or cast.

13
00:00:35.632 --> 00:00:38.516
You can come to the application and
you can clear all your site data and

14
00:00:38.516 --> 00:00:40.170
that'll kinda give you a fresh state.

15
00:00:40.170 --> 00:00:44.156
On top of that, this site doesn't do much,
but if you go to any of your real sites

16
00:00:44.156 --> 00:00:48.024
that use local storage or session storage,
you can browse tables of key value

17
00:00:48.024 --> 00:00:51.324
pairs and kind of see what's
stored on there, things like that.

18
00:00:51.324 --> 00:00:53.455
Also if you do service worker stuff,

19
00:00:53.455 --> 00:00:56.765
this is where you can do your
mode like simulate offline.

20
00:00:56.765 --> 00:00:58.855
You can see what service
workers are registered.

21
00:00:58.855 --> 00:01:02.036
You can deregister service workers,
all sorts of things like that.

22
00:01:02.036 --> 00:01:05.271
And if you have a progressive web
app that ships as a mobile app.

23
00:01:05.271 --> 00:01:08.506
You can inspect the manifest for it here,
and you can see what its icon will be and

24
00:01:08.506 --> 00:01:10.547
what its color scheme will be,
things like that.

25
00:01:10.547 --> 00:01:14.532
So yeah, this one's mostly just
kind of like read, write, tables.

26
00:01:14.532 --> 00:01:19.276
Perhaps the most useful is
just clearing the cache, yes?

27
00:01:19.276 --> 00:01:22.465
&gt;&gt; Speaker 2: On the networks tab,
there's a disable cache checkbox,

28
00:01:22.465 --> 00:01:24.817
does that affect what
shows up on this tab?

29
00:01:24.817 --> 00:01:25.848
&gt;&gt; Jon Kuperman: No,
that's a great question.

30
00:01:25.848 --> 00:01:28.948
Yeah, so on the network tab,
we have this disable cache and

31
00:01:28.948 --> 00:01:32.855
all this will do is if it was going to
read from the browser's local cache for

32
00:01:32.855 --> 00:01:36.471
like a CSS file or something,
it'll skip that and refetch it again.

33
00:01:36.471 --> 00:01:38.768
However, anything that is stored,

34
00:01:38.768 --> 00:01:42.856
your application manifest,
service worker, stuff like that.

35
00:01:42.856 --> 00:01:45.238
Those caches are going to
persist on the application.

36
00:01:45.238 --> 00:01:48.176
So this, no matter what you have
clicked over here in the network,

37
00:01:48.176 --> 00:01:50.965
you'll still see 100% of things
in the application side.

38
00:01:50.965 --> 00:01:54.710
Memory, not much to say now,
we will end the day with it.

39
00:01:54.710 --> 00:01:58.366
But just know that at any point you
can capture a heap snapshot, and

40
00:01:58.366 --> 00:02:02.675
by clicking that button and that button
will show you sort of everything that is

41
00:02:02.675 --> 00:02:04.916
stored in memory for your application.

42
00:02:04.916 --> 00:02:08.168
This page is just HTML, so quite a bit of
it is surrounded in these parentheses,

43
00:02:08.168 --> 00:02:10.461
meaning it's just some kind
of internal system thing.

44
00:02:10.461 --> 00:02:12.999
But as we get into it, we can see,
if we make a big array,

45
00:02:12.999 --> 00:02:14.355
we can view the array in here.

46
00:02:14.355 --> 00:02:16.908
There's a lot of cool,
advanced stuff you can do with memory.

47
00:02:16.908 --> 00:02:19.467
So if you're working on any
kind of Web Assembly stuff,

48
00:02:19.467 --> 00:02:21.815
which I know there are some
great courses here for.

49
00:02:21.815 --> 00:02:25.604
You can see the actual memory used
by your C++ code or your Rust code.

50
00:02:25.604 --> 00:02:29.156
Similarly, if you're working with
any of the typed array stuff,

51
00:02:29.156 --> 00:02:31.447
which is not in the purview
of this course.

52
00:02:31.447 --> 00:02:34.147
You can see the specific memory
instructions for those as well,

53
00:02:34.147 --> 00:02:35.100
which is really nice.

