WEBVTT

1
00:00:00.000 --> 00:00:02.165
&gt;&gt; Jon Kuperman: All right,
we made it, we're performance experts,

2
00:00:02.165 --> 00:00:02.925
not just kidding.

3
00:00:02.925 --> 00:00:04.322
We'll go through that a lot more.

4
00:00:04.322 --> 00:00:09.119
I do find it nice to take a quick pass and
then we'll circle back.

5
00:00:09.119 --> 00:00:12.714
Console, okay,
most people's favorite one, yes, love it.

6
00:00:12.714 --> 00:00:16.674
So it is a full REPL, as a lot of people
know, you could do like const a = hello,

7
00:00:16.674 --> 00:00:19.555
and then you could do a and
get hello, that's very nice.

8
00:00:19.555 --> 00:00:22.099
You can do all sorts of
JavaScript operations,

9
00:00:22.099 --> 00:00:25.095
like math, you can kinda
quickly see things like that.

10
00:00:25.095 --> 00:00:26.289
It's very, very nice.

11
00:00:26.289 --> 00:00:29.740
It also interacts with the dom
in multiple cool ways.

12
00:00:29.740 --> 00:00:34.000
So if we go to the elements and
we see that we've got this like nav class,

13
00:00:34.000 --> 00:00:35.068
main nav, okay.

14
00:00:35.068 --> 00:00:39.300
So from here you can do something
just like you'd be able to do in your

15
00:00:39.300 --> 00:00:40.506
JavaScript code.

16
00:00:40.506 --> 00:00:47.840
So you can getElementsByClassName,
and you could do main-nav.

17
00:00:47.840 --> 00:00:51.540
And boom, we get this HTMLCollection, and
in that HTMLCollection is our main-nav.

18
00:00:51.540 --> 00:00:55.899
So you can see when we hover over this in
the console, it highlights it in the HTML

19
00:00:55.899 --> 00:00:58.847
just as though we were hovering
it over it in the HTML.

20
00:00:58.847 --> 00:01:02.958
But there's some really cool things that
you can do, for example, we can go into

21
00:01:02.958 --> 00:01:06.773
our elements page here and we can
click on something, let's say this h1.

22
00:01:06.773 --> 00:01:08.996
This h1 that's like up here somewhere.

23
00:01:08.996 --> 00:01:12.469
Okay, so we click on it, and it's now
saved in our kind of Chrome DevTools

24
00:01:12.469 --> 00:01:14.722
history as the most
recently clicked on thing.

25
00:01:14.722 --> 00:01:19.126
So later, if we're going ahead, and
let's go ahead and clear this for now.

26
00:01:20.354 --> 00:01:25.923
&gt;&gt; Jon Kuperman: Clear, you can use these
magic kind of jQuery-looking numbers.

27
00:01:25.923 --> 00:01:29.994
So you can do $number, and it'll bring
back the most recently clicked on thing,

28
00:01:29.994 --> 00:01:30.530
that h1.

29
00:01:30.530 --> 00:01:31.831
And you can do operations on it.

30
00:01:31.831 --> 00:01:35.089
So you can do textContent = high, or

31
00:01:35.089 --> 00:01:39.936
something like that, and
it'll actually change it.

32
00:01:39.936 --> 00:01:43.582
And so you can have this really nice, deep
linked relationship between things that

33
00:01:43.582 --> 00:01:46.623
you click on in the elements or
things that you select in the sources.

34
00:01:46.623 --> 00:01:48.539
And then you can bring
them into the console and

35
00:01:48.539 --> 00:01:50.318
you can do operations on them very nicely.

36
00:01:50.318 --> 00:01:53.409
This works with,
I think up to five numbers or something.

37
00:01:53.409 --> 00:01:56.244
So you click on the paragraph,
and then the div, and

38
00:01:56.244 --> 00:02:00.561
then we can go back to console, and we can
see that the div is the most recent, and

39
00:02:00.561 --> 00:02:02.835
the paragraph is the second most recent.

40
00:02:02.835 --> 00:02:04.670
So you can kinda pull things in and
play with them.

41
00:02:04.670 --> 00:02:06.790
It's really nice, you get this kind of,

42
00:02:06.790 --> 00:02:10.790
full rep where you can call all sorts of
JavaScript methods on HTM L elements and

43
00:02:10.790 --> 00:02:13.290
see them update in real time,
things like that.

44
00:02:13.290 --> 00:02:15.742
So quite a lot of cool stuff
that you can do in here.

45
00:02:15.742 --> 00:02:21.226
This is also where all of your warnings
and errors and logs will show up.

46
00:02:21.226 --> 00:02:22.880
You can do quite a few cool things.

47
00:02:22.880 --> 00:02:27.168
One thing that's nice is you can clear it
at any time, but you can also go ahead and

48
00:02:27.168 --> 00:02:28.758
filter it in different ways.

49
00:02:28.758 --> 00:02:31.161
So you can see this very nice,
top level thing.

50
00:02:31.161 --> 00:02:34.435
We don't have any messages, we don't have
any errors, all that stuff, that's fine.

51
00:02:34.435 --> 00:02:38.105
But if you wanted to, if you had a lot of
stuff and you really wanted to focus on,

52
00:02:38.105 --> 00:02:39.562
let's say, just the errors.

53
00:02:39.562 --> 00:02:42.987
You can filter it by going to default
level and you could deselect info and

54
00:02:42.987 --> 00:02:44.688
warnings and just show the errors.

55
00:02:44.688 --> 00:02:48.773
You can also get this kind
of nice issues screen here.

56
00:02:48.773 --> 00:02:51.281
And so,
this issues screen will basically show

57
00:02:51.281 --> 00:02:54.363
you a much more human readable
set of issues that it found.

58
00:02:54.363 --> 00:02:59.524
So it says here that, page layout for this
page may be unexpected due to quirks mode,

59
00:02:59.524 --> 00:03:02.737
and this is because it
doesn't have a Doctype HTML.

60
00:03:02.737 --> 00:03:07.147
So for example, if I were to go into my
IDE and edit this page, and I were to go

61
00:03:07.147 --> 00:03:11.430
to the top and just add this Doctype HTML
and hit Save, and then refresh.

62
00:03:11.430 --> 00:03:14.648
We can see that the issue has gone away,
there's no issue.

63
00:03:14.648 --> 00:03:16.939
So it's quite a lot of cool
stuff in this console.

64
00:03:16.939 --> 00:03:19.964
The REPL is obviously great,
but being able to bring in and

65
00:03:19.964 --> 00:03:23.874
interact with elements from the DOM,
I think, is very important as well.

66
00:03:23.874 --> 00:03:26.574
Yeah, and quite nice.

67
00:03:26.574 --> 00:03:27.925
Feeling good about console?

68
00:03:27.925 --> 00:03:29.356
All right, console's great.

69
00:03:29.356 --> 00:03:30.967
Okay, sources.

70
00:03:30.967 --> 00:03:33.475
So this is essentially a full IDE.

71
00:03:33.475 --> 00:03:37.424
I think that back when I
used to teach the course and

72
00:03:37.424 --> 00:03:40.351
bundling was less the de facto norm.

73
00:03:40.351 --> 00:03:43.552
There's some really cool things
you can do, like these workspaces,

74
00:03:43.552 --> 00:03:46.211
where you can drag your HTML and
CSS and JavaScript in, and

75
00:03:46.211 --> 00:03:50.023
then you can edit them in here, and you
can hit Save, and they'll persist to disk.

76
00:03:50.023 --> 00:03:51.682
Which is a really cool thing.

77
00:03:51.682 --> 00:03:55.310
I've stopped teaching that
in recent years because, And

78
00:03:55.310 --> 00:03:59.963
I'm not saying this is a good thing, but
the reality is, I think almost all of our

79
00:03:59.963 --> 00:04:03.879
apps these days have some kind of
build step or some kind of bundler.

80
00:04:03.879 --> 00:04:05.929
That may not be true.

81
00:04:05.929 --> 00:04:08.975
I mean, this project, for
example, is just HTML and CSS, but

82
00:04:08.975 --> 00:04:10.772
I do find this persist to this thing.

83
00:04:10.772 --> 00:04:14.655
It won't work with a build step cuz it
doesn't know how to find back the actual

84
00:04:14.655 --> 00:04:18.243
source file, and therefore its kind
of usefulness is unfortunately,

85
00:04:18.243 --> 00:04:19.951
kind of gone away over the years.

86
00:04:19.951 --> 00:04:23.947
That being said, it's still really nice
to have an IDE where you can click on

87
00:04:23.947 --> 00:04:28.068
any file, like we can click on our HTML,
and you can just have your normal place

88
00:04:28.068 --> 00:04:30.905
where you can kind of edit things and
do what you will.

89
00:04:30.905 --> 00:04:33.431
The persist to disk may not be as useful,
but

90
00:04:33.431 --> 00:04:38.091
having a full IDE that is your actual live
code still has a lot of good usefulness.

91
00:04:38.091 --> 00:04:41.971
And the other thing that we're gonna talk
about here is when we have a whole section

92
00:04:41.971 --> 00:04:44.909
on is that this is also where
your step three debugger will be.

93
00:04:44.909 --> 00:04:47.470
So if you add a debugger
line to your source code, or

94
00:04:47.470 --> 00:04:51.282
if you set a break point in your Chrome
DevTools, this is where when it hits,

95
00:04:51.282 --> 00:04:52.910
it will open up the Sources tab.

96
00:04:52.910 --> 00:04:55.452
And you get all sorts of great
stuff on the right here,

97
00:04:55.452 --> 00:04:57.668
where you can watch for
certain expressions.

98
00:04:57.668 --> 00:04:59.106
You can view all your break points.

99
00:04:59.106 --> 00:05:01.975
You can see the JavaScript
scope of where you are.

100
00:05:01.975 --> 00:05:05.261
You can see the whole call stack and
you can walk it back and forth.

101
00:05:05.261 --> 00:05:07.722
And you can do all sorts
of fancy break points,

102
00:05:07.722 --> 00:05:11.002
you could do a thing like,
when we fetch my API endpoint,

103
00:05:11.002 --> 00:05:15.000
break there, or when this HTML changes
of style attribute, break there.

104
00:05:15.000 --> 00:05:19.182
You can do all sorts of cool break
points besides just lines of JavaScript.

105
00:05:19.182 --> 00:05:20.858
Cool, how are we feeling about sources?

106
00:05:20.858 --> 00:05:21.610
Good enough?

107
00:05:21.610 --> 00:05:22.652
Yeah.
&gt;&gt; Speaker 2: I have a question,

108
00:05:22.652 --> 00:05:23.893
just drawn saving your progress here.

109
00:05:23.893 --> 00:05:26.883
So like you said,
it's similar to an IDE in some ways,

110
00:05:26.883 --> 00:05:30.334
how do you practically save things
from here to your workflow?

111
00:05:30.334 --> 00:05:31.831
Or is that always looking for an answer?

112
00:05:31.831 --> 00:05:35.507
&gt;&gt; Jon Kuperman: I think the reality is
that if you have a complex workflow that

113
00:05:35.507 --> 00:05:40.194
DevTools can't really figure out,
which I think is most of us at this point,

114
00:05:40.194 --> 00:05:43.602
then saving your changes is
going to be very difficult.

115
00:05:43.602 --> 00:05:47.978
I think that they do have a nice,
if you're in the workspaces, you can use

116
00:05:47.978 --> 00:05:52.655
the workspace and then you can try to
export like a diff of the changes, right?

117
00:05:52.655 --> 00:05:55.507
However, it's still gonna treat it
like there's one JavaScript and

118
00:05:55.507 --> 00:05:58.598
one CSS file and it's still gonna be on
you to find the actual source code that

119
00:05:58.598 --> 00:05:59.675
generated those things.

120
00:05:59.675 --> 00:06:04.332
So I do think that this workflow,
whether it's persisting to disk or

121
00:06:04.332 --> 00:06:09.068
at least just seeing what has changed,
has kind of gone away as more and

122
00:06:09.068 --> 00:06:12.710
more of a disconnect between
the actual source code.

123
00:06:12.710 --> 00:06:18.010
And a quick shout out,
I will say here, I mentioned earlier

124
00:06:18.010 --> 00:06:22.886
that I work on the source
maps task group under TC39,

125
00:06:22.886 --> 00:06:27.454
I would be incredibly open
to any kind of proposal.

126
00:06:27.454 --> 00:06:28.822
I mean,
we have a lot that we can do there.

127
00:06:28.822 --> 00:06:34.492
The bundler tools can stick stuff there
and the dev tools can read it or use it.

128
00:06:34.492 --> 00:06:38.771
I would be very open if anybody had
interest in working on a proposal for

129
00:06:38.771 --> 00:06:43.425
workspaces essentially, where you
could show your module graph, right?

130
00:06:43.425 --> 00:06:46.731
I could think of an idea where you
could be like, okay, this style,

131
00:06:46.731 --> 00:06:50.920
CSS is actually comprised of one, two, and
three dot CSS, and here's how they map.

132
00:06:50.920 --> 00:06:53.350
I could see something
really cool being there.

133
00:06:53.350 --> 00:06:56.178
It doesn't exist, but if somebody is
interested in working on something

134
00:06:56.178 --> 00:06:59.091
like that, I think that would be a very
neat thing to get back to this kind of,

135
00:06:59.091 --> 00:07:00.023
persisting workflow.

136
00:07:00.023 --> 00:07:02.577
But I do think we've sort of lost it,
at least for now.

