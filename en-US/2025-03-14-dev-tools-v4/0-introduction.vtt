WEBVTT

1
00:00:00.000 --> 00:00:03.639
All right, welcome everybody
to Mastering Chrome DevTools.

2
00:00:03.639 --> 00:00:07.557
This is version four of the course that
I've done through Frontend Masters.

3
00:00:07.557 --> 00:00:11.144
And yeah, so today we've got, hopefully
a lot of really cool stuff to cover.

4
00:00:11.144 --> 00:00:13.493
And yeah, let's get into it.

5
00:00:13.493 --> 00:00:17.007
Just real quick about me,
my name is John Kuperman.

6
00:00:17.007 --> 00:00:19.447
I, for the last few years,
have sat on TC39,

7
00:00:19.447 --> 00:00:22.629
which is the standards body
behind the JavaScript language.

8
00:00:22.629 --> 00:00:25.434
So that's how new features
get into the language.

9
00:00:25.434 --> 00:00:30.045
They also maintain working groups
around a lot of other cool things,

10
00:00:30.045 --> 00:00:35.705
like source maps, which I am a co-convener
for, as well as proposals for signals.

11
00:00:35.705 --> 00:00:39.011
So we will talk about source maps
today as they relate very closely to

12
00:00:39.011 --> 00:00:43.071
Chrome DevTools, but We'll not talk about
signals today, despite my passion for

13
00:00:43.071 --> 00:00:44.296
talking about signals.

14
00:00:44.296 --> 00:00:47.696
And then, for work, I work at Bloomberg.

15
00:00:47.696 --> 00:00:51.906
I build DevTools, so I get to work
very closely with the Chrome DevTools.

16
00:00:51.906 --> 00:00:56.245
We do a lot of tight integrations
with them for our financial terminal,

17
00:00:56.245 --> 00:01:00.673
as well as we build custom DevTools,
both on top of Chrome and separate.

18
00:01:00.673 --> 00:01:04.691
So, I love building and
talking about developer tooling.

19
00:01:04.691 --> 00:01:08.273
For this course,
I'll leave this slide up for a minute, but

20
00:01:08.273 --> 00:01:12.364
we basically got the code for
people who wanna follow along locally.

21
00:01:12.364 --> 00:01:15.294
That's on GitHub,
at mastering-devtools-static.

22
00:01:15.294 --> 00:01:17.947
We've got the slides,
which I made a tiny URL for

23
00:01:17.947 --> 00:01:21.005
if anyone wants to follow along
with the slides as we go.

24
00:01:21.005 --> 00:01:25.173
And then the code itself is
deployed to masteringdevtools.com.

25
00:01:25.173 --> 00:01:27.842
So please feel free to just
use masteringdevtools.com

26
00:01:27.842 --> 00:01:31.134
unless you're more comfortable
working in your own kind of, IDE and

27
00:01:31.134 --> 00:01:33.193
building things locally and refreshing.

28
00:01:33.193 --> 00:01:37.471
In which case, you can get the same
experience by pulling down the code and

29
00:01:37.471 --> 00:01:39.679
just running it with any HTTP server.

30
00:01:39.679 --> 00:01:42.501
So, I've got instructions on
how to get the code running,

31
00:01:42.501 --> 00:01:45.839
it's literally just static HTML and
CSS, so it should be quite easy.

32
00:01:45.839 --> 00:01:49.553
Otherwise, yeah, just follow along
with the slides and the deployed code.

33
00:01:49.553 --> 00:01:52.374
A bit about what I do before
we kind of get into it.

34
00:01:52.374 --> 00:01:56.342
Two of my colleagues gave this great
conference talk a few months ago that I

35
00:01:56.342 --> 00:02:00.566
have linked at the bottom of the slides
called Building a C++/JS Browser for

36
00:02:00.566 --> 00:02:01.924
the Financial Markets.

37
00:02:01.924 --> 00:02:06.155
So yeah, we essentially make our own
web browser, except instead of serving

38
00:02:06.155 --> 00:02:09.884
user-generated web content,
we serve financial applications.

39
00:02:09.884 --> 00:02:14.283
So there's thousands of these financial
applications, we have this custom browser

40
00:02:14.283 --> 00:02:18.264
that does a bunch of really cool real-time
and charting and fast rendering.

41
00:02:18.264 --> 00:02:19.588
And, it's a really,

42
00:02:19.588 --> 00:02:24.192
really cool project where we get to do all
sorts of deep work within Chromium and

43
00:02:24.192 --> 00:02:28.048
within Chrome DevTools, and
a bunch of high performance C++.

44
00:02:28.048 --> 00:02:31.815
And a bunch of really cool things that
lets us contribute to open-source.

45
00:02:31.815 --> 00:02:35.195
So we sit on,
what wig the web committee, TC39,

46
00:02:35.195 --> 00:02:40.237
the C++ Standards Committee, just doing
as much as we can out in the open.

47
00:02:40.237 --> 00:02:44.183
Which is kind of perfect for me cuz I
came in just loving Chrome DevTools, and

48
00:02:44.183 --> 00:02:47.095
I get to work very,
very closely with them all the time.

49
00:02:47.095 --> 00:02:49.749
So I usually find people come
from three different, maybe,

50
00:02:49.749 --> 00:02:51.320
categories with Chrome DevTools.

51
00:02:51.320 --> 00:02:53.860
I suppose there's people who have
never really opened them before,

52
00:02:53.860 --> 00:02:56.762
maybe they know that they're there, or
maybe they've used it once or twice.

53
00:02:56.762 --> 00:03:01.477
Then there's usually the bread and
butter folks who have used elements,

54
00:03:01.477 --> 00:03:05.443
maybe the console a good amount,
maybe sources a little bit.

55
00:03:05.443 --> 00:03:07.802
Maybe they clicked on performance and
memory.

56
00:03:07.802 --> 00:03:11.550
And then there's people who do a
considerable amount of performance audit.

57
00:03:11.550 --> 00:03:15.338
So, where is everybody
kind of at right now,

58
00:03:15.338 --> 00:03:18.836
in terms of their comfort with DevTools?

59
00:03:18.836 --> 00:03:19.963
&gt;&gt; Speaker 2: Lots of consoles.

60
00:03:19.963 --> 00:03:21.367
&gt;&gt; Jon Kuperman: Lots of console,
yeah, that's great.

61
00:03:21.367 --> 00:03:22.449
That's a good one.

62
00:03:22.449 --> 00:03:23.852
That's very useful.

63
00:03:23.852 --> 00:03:25.190
&gt;&gt; Speaker 3: Prototyping.

64
00:03:25.190 --> 00:03:27.902
&gt;&gt; Jon Kuperman: Okay, yeah, so you're
in the Elements tab a lot, and, okay.

65
00:03:27.902 --> 00:03:31.325
&gt;&gt; Speaker 3: My software takes
a ton of time to build, so-

66
00:03:31.325 --> 00:03:31.937
&gt;&gt; Jon Kuperman: That's great, yeah.

67
00:03:31.937 --> 00:03:32.983
&gt;&gt; Speaker 3: If you have
to troubleshoot anything,

68
00:03:32.983 --> 00:03:33.939
it's best to do it in the DevTools.

69
00:03:33.939 --> 00:03:34.498
&gt;&gt; Jon Kuperman: No, I love that.

70
00:03:34.498 --> 00:03:39.828
I think that's such a good way of using
them to get around some hurdle, yeah.

71
00:03:39.828 --> 00:03:41.567
&gt;&gt; Speaker 4: Also setting breakpoints.

72
00:03:41.567 --> 00:03:43.664
&gt;&gt; Jon Kuperman: Yeah, breakpoints.

73
00:03:43.664 --> 00:03:46.620
Cool, yeah, we have a whole section
on step-through debugging, but

74
00:03:46.620 --> 00:03:49.825
essentially trying to elevate from
just console logging into step-through

75
00:03:49.825 --> 00:03:51.124
debugging with breakpoints.

76
00:03:51.124 --> 00:03:52.359
Awesome, awesome.

77
00:03:52.359 --> 00:03:54.006
&gt;&gt; Speaker 5: Network tab,
security, privacy for me,

78
00:03:54.006 --> 00:03:55.391
just seeing where my data is going.

79
00:03:55.391 --> 00:03:56.650
&gt;&gt; Jon Kuperman: Yeah,
I know, that's great.

80
00:03:56.650 --> 00:04:00.448
Yeah, yeah, network tab, security,
privacy can be really, really good.

81
00:04:00.448 --> 00:04:02.770
Yeah, I do quite a bit with
the network tab at work,

82
00:04:02.770 --> 00:04:05.957
just making sure that bundle sizes
are coming in an appropriate way and

83
00:04:05.957 --> 00:04:08.244
all of our TLS settings and
everything all right.

84
00:04:08.244 --> 00:04:09.735
That's great.

85
00:04:09.735 --> 00:04:14.663
&gt;&gt; Speaker 6: Yeah, also looking at
image formats and optimization and-

86
00:04:14.663 --> 00:04:15.295
&gt;&gt; Jon Kuperman: Yeah

87
00:04:15.295 --> 00:04:16.341
&gt;&gt; Speaker 6: Looking at,

88
00:04:16.341 --> 00:04:18.248
filter by the largest.

89
00:04:18.248 --> 00:04:19.668
&gt;&gt; Jon Kuperman: Yep, I love that.

90
00:04:19.668 --> 00:04:22.458
Yeah, I love that, again,
more like great performance stuff,

91
00:04:22.458 --> 00:04:24.843
like seeing all the stuff
that's kinda coming to you and

92
00:04:24.843 --> 00:04:27.955
analyzing, you can use the network tab,
see what the biggest thing is.

93
00:04:27.955 --> 00:04:28.718
I think that's really cool.

94
00:04:28.718 --> 00:04:32.268
You could use Lighthouse, which will give
you offerings if there's maybe better

95
00:04:32.268 --> 00:04:33.716
formats that you could be using.

96
00:04:33.716 --> 00:04:37.776
Or just telling you if you're maybe
loading 1000 by 1000 image and

97
00:04:37.776 --> 00:04:40.807
then rendering it 100 by 100,
things like that,

98
00:04:40.807 --> 00:04:43.908
which still bite massive
production sites all the time.

99
00:04:43.908 --> 00:04:47.820
It's always kind of a funny thing to me
that we have all these conference talks

100
00:04:47.820 --> 00:04:51.613
and workshops about optimizing your
build system that you're like,

101
00:04:51.613 --> 00:04:53.436
I saved 0.3 kilobytes off this.

102
00:04:53.436 --> 00:04:55.469
And, I switched to a lighter version,
which is great.

103
00:04:55.469 --> 00:04:56.145
I love all that stuff.

104
00:04:56.145 --> 00:04:59.157
But then, serving like a ten meg
image on top of all that stuff

105
00:04:59.157 --> 00:05:02.543
after you've worked so hard, yeah,
I think those are excellent.

106
00:05:02.543 --> 00:05:04.475
Cool, yeah, hopefully we'll cover
a good amount of that today.

107
00:05:04.475 --> 00:05:07.866
And then, hopefully,
I always hope the most new value,

108
00:05:07.866 --> 00:05:11.552
I hope, will come from the performance and
the memory stuff.

109
00:05:11.552 --> 00:05:16.109
Getting a little bit more comfortable with
really auditing the nitty gritty of your

110
00:05:16.109 --> 00:05:18.006
site and seeing what's going on.

111
00:05:18.006 --> 00:05:21.529
Excellent, to cover in this course, these
are the sections that we've got outlined.

112
00:05:21.529 --> 00:05:23.457
So, essential Chrome DevTools,

113
00:05:23.457 --> 00:05:27.851
which I hope will just give you a passing
familiarity with each one of the tabs.

114
00:05:27.851 --> 00:05:30.635
Just kind of, a comfort in understanding
what they're there for and

115
00:05:30.635 --> 00:05:31.355
what they can do.

116
00:05:31.355 --> 00:05:35.012
Then we'll get into network optimization,
talk about all sorts of stuff coming over

117
00:05:35.012 --> 00:05:38.232
the network and how to use the DevTools
to get a really good understanding.

118
00:05:38.232 --> 00:05:42.529
We'll go into Lighthouse audits, so
covering a lot of the rail and kind of,

119
00:05:42.529 --> 00:05:47.231
web core vital stuff that we talked about
before, as well as image optimization and

120
00:05:47.231 --> 00:05:48.589
bundle optimization.

121
00:05:48.589 --> 00:05:52.299
We'll have a section on step-through
debugging, so kind of making some examples

122
00:05:52.299 --> 00:05:55.479
where just console logging would be
quite difficult to fix a problem but

123
00:05:55.479 --> 00:05:57.759
step-through debugging
can make it a lot easier.

124
00:05:57.759 --> 00:06:01.054
Then we'll get into performance profiling,
so that's CPU-bound stuff.

125
00:06:01.054 --> 00:06:05.342
So we'll kind of analyze the performance
of certain things and we'll play around

126
00:06:05.342 --> 00:06:09.336
with concepts like CSS transforms or
animation frames, things like that.

127
00:06:09.336 --> 00:06:12.325
And then finally,
landing in memory management,

128
00:06:12.325 --> 00:06:15.667
talking about how to detect if
your app has a memory leak.

129
00:06:15.667 --> 00:06:18.007
And if so,
how to kind of use heap snapshots,

130
00:06:18.007 --> 00:06:21.218
kind of figure out where the memory
leak might be coming from.

131
00:06:21.218 --> 00:06:24.132
And then at the very end, we'll play
around with a few of the cool experiments.

132
00:06:24.132 --> 00:06:26.144
I'm not sure how many people are familiar,
but

133
00:06:26.144 --> 00:06:29.276
Chrome DevTools launches a ton of
experiments behind flags all the time.

134
00:06:29.276 --> 00:06:30.464
And they're available to users.

135
00:06:30.464 --> 00:06:32.111
They didn't used to be, but they are.

136
00:06:32.111 --> 00:06:36.155
And so it can be kind of a fun place to
click through and see what's there and

137
00:06:36.155 --> 00:06:39.827
enable some and, yeah,
we'll just kind of have a play with that.

