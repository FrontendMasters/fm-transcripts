WEBVTT

1
00:00:00.607 --> 00:00:02.666
Does anyone have any
questions about transitions?

2
00:00:04.872 --> 00:00:06.530
Mark.

3
00:00:06.530 --> 00:00:10.642
&gt;&gt; I've noticed you've developed
route three.js wrapper for Svelte.

4
00:00:10.642 --> 00:00:15.301
My question is where do you draw the line
that you need to use a third party

5
00:00:15.301 --> 00:00:17.096
library to do animations.

6
00:00:17.096 --> 00:00:22.088
Obviously in three.js,
it's to get 3D animations but in so

7
00:00:22.088 --> 00:00:26.792
now it's scenario like maybe
wanting to use G SAP as Svelte

8
00:00:26.792 --> 00:00:31.784
provide all the required APIs to
do animations that G SAP can or

9
00:00:31.784 --> 00:00:35.538
what's the limitation of Svelte generated?

10
00:00:35.538 --> 00:00:37.027
&gt;&gt; That's a good question.

11
00:00:37.027 --> 00:00:40.452
So Svelte doesn't have like a whole
lot of animation stuff built in,

12
00:00:40.452 --> 00:00:44.470
if you're doing complex sequence of
animations for example, then transitions

13
00:00:44.470 --> 00:00:47.973
probably aren't the tool that you
would reach for in that situation.

14
00:00:47.973 --> 00:00:52.169
And you could definitely use G SAP or
any other animation library.

15
00:00:52.169 --> 00:00:56.867
What's really hard to do with
an external library is controlling when

16
00:00:56.867 --> 00:00:59.425
elements are unmounted from the DOM.

17
00:00:59.425 --> 00:01:04.268
This is a recurring theme with frameworks
like you wanna be able to understand when

18
00:01:04.268 --> 00:01:08.633
an element is being removed so
that you can transition it out gracefully.

19
00:01:08.633 --> 00:01:11.228
Whereas normally what happens is
it's just taken out of the DOM.

20
00:01:11.228 --> 00:01:15.669
So it's really easy to add a CSS animation
that applies when an element is created,

21
00:01:15.669 --> 00:01:18.473
but there's no equivalent for
when it's removed.

22
00:01:18.473 --> 00:01:23.461
And so at that point, the framework
kind of has to have its own built in

23
00:01:23.461 --> 00:01:28.027
support for that concept, and
that's what transitions are.

24
00:01:28.027 --> 00:01:33.124
It's a way of of making state
transitions happen over time

25
00:01:33.124 --> 00:01:39.271
in a way that a third party library
just wouldn't be able to hook into.

26
00:01:39.271 --> 00:01:43.738
But beyond that, if you're changing
the opacity of an element but you're not

27
00:01:43.738 --> 00:01:48.411
removing it from the DOM or something like
that then you can go nuts with third party

28
00:01:48.411 --> 00:01:52.632
animation libraries particularly
if you're doing something complex.

29
00:01:52.632 --> 00:01:57.263
And thrill is a little bit of
a special case, I did not make thrill,

30
00:01:57.263 --> 00:02:02.229
it's a community driven project that
I use myself in my own projects but

31
00:02:02.229 --> 00:02:05.077
I haven't actually contributed to it.

32
00:02:05.077 --> 00:02:08.857
In thrill you're not dealing
with DOM elements at all

33
00:02:08.857 --> 00:02:11.717
you're dealing with three JS objects.

34
00:02:11.717 --> 00:02:15.092
And so at that point, Svelte doesn't
really have any ability to kind of

35
00:02:15.092 --> 00:02:17.919
hook into that and
control how those elements are removed.

36
00:02:17.919 --> 00:02:21.627
So at that point, you are dependent
on the third party libraries.

37
00:02:21.627 --> 00:02:25.164
I hope that answers the question.

38
00:02:25.164 --> 00:02:29.302
Okay.
&gt;&gt; Then you're talking about the merits of

39
00:02:29.302 --> 00:02:34.010
CSS versus declaring this
stuff in JavaScript in it

40
00:02:34.010 --> 00:02:39.154
perhaps adding your own classes and
then just adding and

41
00:02:39.154 --> 00:02:44.518
removing the classes with
Svelte to specific elements but

42
00:02:44.518 --> 00:02:48.479
I don't know what your thought is on that.

43
00:02:48.479 --> 00:02:52.755
&gt;&gt; Yeah, it depends on what you're
doing that is certainly an option but

44
00:02:52.755 --> 00:02:57.973
if you're actually removing things from
the DOM altogether or if you're unmounting

45
00:02:57.973 --> 00:03:02.557
components, then it can be quite hard
to coordinate all of that activity.

46
00:03:02.557 --> 00:03:05.962
And so that's where
transitions become quite handy.

47
00:03:08.412 --> 00:03:10.988
&gt;&gt; I'll just read this comment quick.

48
00:03:10.988 --> 00:03:16.427
A situation I ran into was wanting
to use Svelte transitions,

49
00:03:16.427 --> 00:03:21.343
but I wanted them to apply when
the element was hidden and

50
00:03:21.343 --> 00:03:26.060
unhidden in CSS and not removed,
added from the DOM.

51
00:03:26.060 --> 00:03:29.739
I wanted everything in the DOM,
but just hidden.

52
00:03:29.739 --> 00:03:34.854
&gt;&gt; Yeah, so that transitions are designed
for that scenario at that point,

53
00:03:34.854 --> 00:03:37.917
you probably would need
to use CSS classes.

54
00:03:37.917 --> 00:03:39.175
But that's an interesting use case.

55
00:03:39.175 --> 00:03:44.720
I wonder if there's some way that
we could add the ability to control

56
00:03:44.720 --> 00:03:50.184
the CSS animations that you would
add with a class through Svelte.

57
00:03:50.184 --> 00:03:54.714
Maybe we'll add a new feature,
open an issue on GitHub.

