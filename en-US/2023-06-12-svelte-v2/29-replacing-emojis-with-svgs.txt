[00:00:00]
>> We don't have much of a game at this point because the emojis are facing us. We need to make this start to resemble a real game. And to do that, we're gonna have the cards on their backs by default. And if you recall from the original demo, these kind of flip over using CSS transforms.

[00:00:18]
So we're gonna need to set a few things up to make that work. The first thing we need to do is we need to add some perspective on our grid. And there's CSS property called perspective, we're gonna give it a value of 100 vw, it doesn't really matter.

[00:00:36]
It just affects how severe the distortion is when things are flipping over using CSS transforms. And then inside our square component, I'm just gonna close all of the junk up here cuz I don't need anymore. We're gonna add some CSS transforms that simulate the card being flipped around.

[00:01:08]
In order to see the flip happen, we're gonna need to add a transition. Let's do something like that, transition the transform property for 0.4 seconds. So far nothing's happening, and I think that's because we need to add a transform style on here of preserve-3d CSS transforms especially when we're dealing with 3D, is the kind of stuff that I have to look at NDN at each time, I can never remember how to get it right, Clearly, I haven't got it right at this point.

[00:02:02]
It's because we're applying the transform only to the button instead of to the entire flipped element. So we're gonna change that selector so that we're targeting flipped and you'll see that cow flipped around there. Okay, so it's starting to look a little bit like what we want except that the emojis shouldn't be visible until the card is flipped.

[00:02:26]
So to make that work, we need to have a default transform on the image of rotateY(180deg). And we also need to add a property called backface visibility, which should be hidden. Okay, so now the emoji is not visible until the card is flipped. One thing that we don't want to happen is for the button to continue being visible after we flip, because we don't want you to be able to click on that.

[00:03:01]
So the button is also gonna get a back face visibility hidden. And that means that the background that we put in earlier is now showing through. So let's make that a nicer color. In fact, we're gonna need to add another element for that background. Let's call it div class=background And just like the image, that's only gonna become visible when the card as a whole is flipped Okay, we're getting there, but we need to add some more styles here clearly.

[00:04:05]
Let's do width 100%, height 100%, and we'll slap in a position absolute in there as well. Okay, things are starting to behave. But what we're finding is that some of these cards are still flippable even though we've already found those pairs. So we actually want to remove those.

[00:04:33]
Or rather we wanna keep them flipped once they've been found. So we're gonna keep the flipped class active when the square has either been selected or it's been found. And do that like that and so now you can see which cards have already been found, and which ones still need to be found.

[00:04:58]
Okay, we're gonna get rid of these default ugly button styles. We're gonna give that a background of #eee and get rid of the border, and let's give it a border radius as well while we're at it of 1em. Okay, that's starting to look a little bit like what we had on the published version.

[00:05:21]
We'll add that border-radius to the background when the card is flipped as well. We're actually going to change that background to white and give it a border of, eee. Let's make that a little bit bigger maybe, a little bit thicker. Okay, we're starting to get a little bit closer to what we had before.

[00:06:00]
The border-radius isn't quite the same between the button and the div. And that's because, by default in the browser, buttons have a font size that does not inherit from the surrounding content. So we need to add that explicitly. font-size inherit. Now everything is using the same border-radius. In the same vein, we wanna get rid of the default styles on the button in the countdown.

[00:06:37]
Give it a background of transparent and a border of none. And the countdown button now looks a little bit nicer. At the moment, it doesn't do anything because we haven't wired up any event handlers, but we'll come to that soon.

