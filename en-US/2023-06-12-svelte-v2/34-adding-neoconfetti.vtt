WEBVTT

1
00:00:00.090 --> 00:00:05.043
We need to get the state into the screen,
and we also need to be

2
00:00:05.043 --> 00:00:10.115
able to start new games and
interact with the game component.

3
00:00:10.115 --> 00:00:14.822
So we're gonna need to expose
some functions from our game

4
00:00:14.822 --> 00:00:18.386
component that the page can interact with.

5
00:00:18.386 --> 00:00:22.997
The first one we'll do is start.

6
00:00:22.997 --> 00:00:27.373
Create a function, start, and
then this is gonna take a level.

7
00:00:30.241 --> 00:00:33.114
All right, when we call this
start function from outside,

8
00:00:33.114 --> 00:00:34.843
that is gonna reset the game state.

9
00:00:37.024 --> 00:00:41.245
So will do, size = level.size.

10
00:00:41.245 --> 00:00:44.232
The grid is a newly created grid.

11
00:00:47.543 --> 00:00:53.458
Remaining and
duration are both equal to level.duration.

12
00:01:01.309 --> 00:01:05.318
And then we're gonna actually start
the game by calling a new function called

13
00:01:05.318 --> 00:01:07.425
resume, which we're about to create.

14
00:01:15.732 --> 00:01:23.195
So now we're gonna set playing to true,
And call our countdown function.

15
00:01:23.195 --> 00:01:30.490
And then the final step is to communicate
that state back up to the page component.

16
00:01:30.490 --> 00:01:32.440
So we're gonna need to create
an event dispatcher for that.

17
00:01:34.010 --> 00:01:39.895
So as before,
const dispatch = CreateEventDispatcher.

18
00:01:41.851 --> 00:01:47.782
And when the game resumes,
we are going to dispatch, A play event.

19
00:01:52.766 --> 00:01:55.907
We need to export this start function so
that we can call it from outside.

20
00:02:00.100 --> 00:02:04.359
And now inside our page.svete component,
when we click on one of these buttons,

21
00:02:04.359 --> 00:02:06.471
we're gonna call that start function.

22
00:02:13.080 --> 00:02:18.724
But before we can do that, we need to
get a reference to the game component,

23
00:02:18.724 --> 00:02:25.277
so we're gonna create, let game, up here,
and then bind that to the game component.

24
00:02:25.277 --> 00:02:29.438
And then inside our event handler,
we're gonna call game.start.

25
00:02:32.835 --> 00:02:37.656
And we also want, we need to pass in the
the level that you wanna start it with.

26
00:02:42.680 --> 00:02:45.592
We need to give a type to this,

27
00:02:45.592 --> 00:02:50.678
this is gonna be a, Game object, and

28
00:02:50.678 --> 00:02:56.981
so that now understands that the start
function takes a level argument.

29
00:03:00.888 --> 00:03:05.691
Okay, so we've got the main component
telling the game component to start a new

30
00:03:05.691 --> 00:03:10.364
game, we now need to get the state back
from the game component into the page.

31
00:03:10.364 --> 00:03:11.077
We'll do that with event handler.

32
00:03:13.135 --> 00:03:13.635
On:play.

33
00:03:17.043 --> 00:03:19.491
We're gonna set the state to playing, and

34
00:03:19.491 --> 00:03:22.827
that's gonna have the effect
of getting rid of the modal.

35
00:03:25.333 --> 00:03:29.451
So if you choose a level,
the game begins, but

36
00:03:29.451 --> 00:03:35.588
we need to get rid of all of the initial
state that we had to begin with.

37
00:03:35.588 --> 00:03:40.331
We don't wanna have
a level already selected,

38
00:03:40.331 --> 00:03:44.014
we don't wanna have a default size.

39
00:03:44.014 --> 00:03:49.399
The grid needs to be empty,
just going to get rid of all of this.

40
00:03:49.399 --> 00:03:54.264
let remaining = 0, let duration = 0.

41
00:03:56.467 --> 00:04:00.809
And we don't even wanna show this
countdown unless the game is currently

42
00:04:00.809 --> 00:04:01.388
active.

43
00:04:01.388 --> 00:04:05.776
So we're just gonna wrap this
whole thing in an if playing.

44
00:04:16.500 --> 00:04:20.914
Okay, so
now we can pick a hard level if you want,

45
00:04:20.914 --> 00:04:26.526
we can choose medium, and
we see that we have some broken CSS.

46
00:04:26.526 --> 00:04:30.492
That's because we're
not parsing the size of

47
00:04:30.492 --> 00:04:34.163
the gameboard down to the grid component.

48
00:04:34.163 --> 00:04:40.248
We can fix that with
a CSS custom property,

49
00:04:47.988 --> 00:04:49.984
And we can then use that
inside the grid component.

50
00:04:52.714 --> 00:04:56.825
If we just find the CSS declaration
where we've hard coded for and

51
00:04:56.825 --> 00:05:03.092
get rid of that and
replace it with, var(--size).

52
00:05:09.276 --> 00:05:12.467
And we can now play a medium game,
or we can play have a hard game and

53
00:05:12.467 --> 00:05:14.634
everything will shrink down accordingly.

54
00:05:19.690 --> 00:05:23.842
So we just need to
communicate the win state and

55
00:05:23.842 --> 00:05:29.070
the lost state, and
then our game is basically complete.

56
00:05:30.615 --> 00:05:35.434
If we found all of the pairs,
we can dispatch a win event,

57
00:05:39.638 --> 00:05:43.964
And if the countdown runs out,
we can dispatch a lose event.

58
00:05:48.231 --> 00:05:53.575
And if someone hits the countdown button,
then we can set playing to false so

59
00:05:53.575 --> 00:05:59.609
that the countdown timer doesn't continue,
and we can also dispatch a pause event.

60
00:06:04.010 --> 00:06:07.669
And then in the top component,
page.svelte, we can add handlers for

61
00:06:07.669 --> 00:06:09.350
each of those changes of state.

62
00:06:38.827 --> 00:06:43.968
[LAUGH] Okay, it is telling us
that we immediately lost the game,

63
00:06:43.968 --> 00:06:46.360
and I think I know why that is.

64
00:06:46.360 --> 00:06:51.091
It's because inside game.svelte,
we're calling the countdown

65
00:06:51.091 --> 00:06:55.823
function as soon as the component
is mounted, which we do not want.

66
00:06:55.823 --> 00:07:01.819
Instead, we want that countdown to
start when the game is resumed or

67
00:07:01.819 --> 00:07:03.932
when we start the game.

68
00:07:03.932 --> 00:07:07.004
So if we get rid of that onMount call,

69
00:07:07.004 --> 00:07:12.766
it should take us to the welcome screen,
where we can start the game.

70
00:07:12.766 --> 00:07:16.843
It is not counting down right now.

71
00:07:16.843 --> 00:07:21.322
That's backwards.

72
00:07:27.459 --> 00:07:28.411
All right, unfortunately,

73
00:07:28.411 --> 00:07:30.512
the only way to check that this
works is to actually play the game.

74
00:07:36.286 --> 00:07:38.207
Did we see the red bird already?

75
00:07:38.207 --> 00:07:38.881
No, not there.

76
00:07:41.882 --> 00:07:43.059
I think we saw the alligator.

77
00:07:45.884 --> 00:07:46.851
Man, I'm so bad at this.

78
00:08:00.131 --> 00:08:03.741
Okay, and it shows us that if
we do in fact win the game,

79
00:08:03.741 --> 00:08:06.656
it'll send us the you
won the game message.

