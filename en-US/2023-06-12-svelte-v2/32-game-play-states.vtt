WEBVTT

1
00:00:00.240 --> 00:00:03.812
So far most things
are looking pretty good, but

2
00:00:03.812 --> 00:00:08.810
we have some game logic that has not yet
been accounted for.

3
00:00:08.810 --> 00:00:10.160
So, there's a few things that can happen.

4
00:00:10.160 --> 00:00:12.720
We can win the game by
finding all of the pairs, or

5
00:00:12.720 --> 00:00:15.270
we can lose the game by
running out of time.

6
00:00:15.270 --> 00:00:18.880
We can also pause the game
by hitting the pause button.

7
00:00:18.880 --> 00:00:20.889
So, let's represent each of those.

8
00:00:21.910 --> 00:00:26.059
First the pause one is easy to do.

9
00:00:26.059 --> 00:00:29.221
We're just gonna add an On click here.

10
00:00:29.221 --> 00:00:34.079
And that's gonna forward any click events
on the button up to the game component.

11
00:00:37.947 --> 00:00:42.854
We'll add on the countdown,
we'll add, oops, get rid of that.

12
00:00:57.179 --> 00:00:58.954
We'll add a little to-do to ourselves.

13
00:01:01.581 --> 00:01:06.746
In the grid component,
if we find all of the pairs,

14
00:01:06.746 --> 00:01:11.432
then the length of the found
array will be equal

15
00:01:11.432 --> 00:01:15.171
to the area of the grid divided by 2.

16
00:01:32.682 --> 00:01:38.096
And finally, if we run out of time inside
our countdown loop, then we lose the game.

17
00:01:38.096 --> 00:01:42.991
And the way that we're gonna do
this is we're gonna have a variety

18
00:01:42.991 --> 00:01:46.118
of states that the application can be in.

19
00:01:46.118 --> 00:01:48.680
I'm gonna go back into our
page.svelte component.

20
00:01:48.680 --> 00:01:53.172
And we're gonna define a set of states for
the game.

21
00:01:59.725 --> 00:02:04.430
We can be waiting when
we first load the game.

22
00:02:04.430 --> 00:02:05.546
We can be playing.

23
00:02:07.771 --> 00:02:08.508
We can be paused.

24
00:02:11.129 --> 00:02:12.619
We can be in a win state.

25
00:02:15.606 --> 00:02:16.106
Call it won.

26
00:02:19.054 --> 00:02:21.309
Or we can have lost the game.

27
00:02:21.309 --> 00:02:24.330
And we'll initialize that
with a value of waiting.

28
00:02:28.110 --> 00:02:30.692
We need to add lang="ts" because,
otherwise,

29
00:02:30.692 --> 00:02:32.620
it doesn't understand this syntax.

30
00:02:37.347 --> 00:02:40.701
And so now we can add some
UI around the game itself so

31
00:02:40.701 --> 00:02:46.241
that when we first come to this app, we're
not launched into the game immediately,

32
00:02:46.241 --> 00:02:49.149
we have this interstitial welcome screen.

33
00:02:49.149 --> 00:02:53.386
And when we interact with that,
it takes us into the game.

34
00:02:53.386 --> 00:02:55.976
So anytime we are not actively playing,

35
00:02:55.976 --> 00:03:00.547
whether it's because we've paused
the game, or because we've won or

36
00:03:00.547 --> 00:03:04.983
we've lost, we wanna have a modal
that appears on top of the game UI.

37
00:03:04.983 --> 00:03:13.966
So if state is not playing,
Then we wanna have some content.

38
00:03:13.966 --> 00:03:18.612
And we're gonna put that in
a new modal component, so

39
00:03:18.612 --> 00:03:21.514
that we can add some styles to it.

40
00:03:21.514 --> 00:03:25.135
So add that component, Modal.svelte.

41
00:03:34.480 --> 00:03:36.780
The first thing we're gonna do
is create a modal-background,

42
00:03:39.493 --> 00:03:43.669
Which covers the entire screen.

43
00:03:43.669 --> 00:03:51.422
Use position fixed,
Give it a width and a height of 100%.

44
00:03:58.062 --> 00:04:00.606
And we're gonna give it a backdrop filter,

45
00:04:04.014 --> 00:04:10.063
That blurs everything behind the modal.

46
00:04:10.063 --> 00:04:14.383
We're gonna use display grid and
then just place everything in the center.

47
00:04:18.499 --> 00:04:25.200
And finally, we're gonna give it a z-index
to put it safely above all of the content.

48
00:04:25.200 --> 00:04:29.118
And then, inside that,
we'll have the modal content itself.

49
00:04:37.399 --> 00:04:41.178
And we're gonna create a slot, so, that
we can pass some content into this modal.

50
00:04:41.178 --> 00:04:44.367
Save that and
over here we'll create our modal.

51
00:04:48.686 --> 00:04:53.185
Then we can start adding some content
inside here depending on the state that

52
00:04:53.185 --> 00:04:54.530
we're currently in.

53
00:04:54.530 --> 00:05:00.812
So when we first load the page,
the state is going to be waiting.

54
00:05:00.812 --> 00:05:05.000
So we'll add if state is waiting,

55
00:05:07.462 --> 00:05:14.509
We'll add some text that just says,
coose a level.

56
00:05:24.882 --> 00:05:28.448
It looks like we need to add some
positioning on that fixed element so

57
00:05:28.448 --> 00:05:29.459
that we can see it.

58
00:05:32.258 --> 00:05:32.903
All right,

59
00:05:32.903 --> 00:05:37.031
this is the first time I've actually
had some text in this application, and

60
00:05:37.031 --> 00:05:41.770
we can suddenly see that we're using
Times New Roman which is a horrible sin.

61
00:05:41.770 --> 00:05:44.100
So we need to pick some nicer fonts for
this.

62
00:05:46.160 --> 00:05:51.920
One thing that I like to do when
I'm creating any new styles is,

63
00:05:51.920 --> 00:05:56.390
have a default style that
is using the system UI.

64
00:05:57.630 --> 00:06:00.465
Because this way, we don't need
to download any custom fonts, and

65
00:06:00.465 --> 00:06:03.514
it will look pretty nice on basically
whatever platform you're using.

66
00:06:03.514 --> 00:06:07.845
So in VS code,
if you just start typing system UI,

67
00:06:07.845 --> 00:06:11.361
you will get some nicer fonts like that.

68
00:06:11.361 --> 00:06:13.821
But for the for the logo of the game,

69
00:06:13.821 --> 00:06:17.857
we want something a little bit
nicer than the system font.

70
00:06:17.857 --> 00:06:19.537
You can pick your own font but

71
00:06:19.537 --> 00:06:23.116
this is one that I particularly
liked called grandstander.

72
00:06:23.116 --> 00:06:27.992
And rather than going into Google fonts or
whatever and downloading a WAV file and

73
00:06:27.992 --> 00:06:31.734
adding it to my project,
I'm just gonna install it from npm.

74
00:06:31.734 --> 00:06:37.262
There's a wonderful set of
packages called fontsource.

75
00:06:37.262 --> 00:06:45.691
And I'm just gonna install
fontsource/grandstander.

76
00:06:45.691 --> 00:06:50.765
But if you have a font that you would like
to use instead then you can install that.

77
00:06:50.765 --> 00:06:52.753
And once that's installed,

78
00:06:52.753 --> 00:06:58.086
all I need to do in here is add an import
declaration to the top of my styles.css.

79
00:07:00.558 --> 00:07:01.573
That points to that new package.

80
00:07:05.540 --> 00:07:09.352
Right, this makes the grandstander
font available to my app.

81
00:07:09.352 --> 00:07:18.048
So if I add an h1,
I can use font-family, Grandstander.

82
00:07:18.048 --> 00:07:22.016
And then now if I've
set that up correctly,

83
00:07:22.016 --> 00:07:25.134
I can add an h1 inside that modal.

84
00:07:30.841 --> 00:07:31.826
Hey, presto, we have a logo.

85
00:07:36.565 --> 00:07:40.165
Looks like we need to add some
more styles to the modal so

86
00:07:40.165 --> 00:07:43.000
that everything is correctly justified.

87
00:07:43.000 --> 00:07:44.974
Or maybe we just need to make
the h1 a little bit bigger so

88
00:07:44.974 --> 00:07:46.029
let's add some styles here.

89
00:07:57.216 --> 00:07:58.050
Make that nice and big.

90
00:08:03.221 --> 00:08:06.174
And in the original,
we're highlighting the text inside.

91
00:08:06.174 --> 00:08:09.119
So I'm gonna do that by
creating a span inside the h1,

92
00:08:14.084 --> 00:08:18.662
And giving that nice color.

93
00:08:30.365 --> 00:08:33.777
I'm just gonna wrap all
of that in a header, so

94
00:08:33.777 --> 00:08:36.763
that we can add a little tagline as well.

95
00:08:44.988 --> 00:08:48.476
Gonna give the p font-family
a Grandstander as well.

96
00:08:57.278 --> 00:09:00.759
And then we need to handle all of
the other states that our application

97
00:09:00.759 --> 00:09:01.429
could be in.

98
00:09:01.429 --> 00:09:06.117
So we already know that we're not in
the playing state and that leaves paused,

99
00:09:06.117 --> 00:09:07.122
won, and lost.

100
00:09:14.220 --> 00:09:17.316
So we can handle the won and
the lost states together.

101
00:09:17.316 --> 00:09:21.920
If state is won, or state is lost,

102
00:09:30.082 --> 00:09:33.088
We'll add some text that
says you state the game.

103
00:09:36.459 --> 00:09:37.444
If the game is paused,

104
00:09:47.441 --> 00:09:50.950
We'll just say game is currently paused.

105
00:09:50.950 --> 00:09:56.709
And then we'll turn this into
an else if state is waiting.

106
00:09:56.709 --> 00:10:00.291
Then we'll invite the player
to choose a level.

107
00:10:03.373 --> 00:10:06.389
And then below that text,
we wanna have some buttons so

108
00:10:06.389 --> 00:10:08.500
that we can actually start a new game.

109
00:10:16.768 --> 00:10:20.658
And the buttons that we show are gonna
be dependent on what state we're in.

110
00:10:20.658 --> 00:10:24.402
If the game is currently paused,

111
00:10:24.402 --> 00:10:30.161
then we wanna show a Resume button or
a Quit button.

112
00:10:32.705 --> 00:10:37.711
Otherwise, we want to show
the different levels.

113
00:10:42.380 --> 00:10:45.824
And I'm just roughing out
the UI at this point.

114
00:10:45.824 --> 00:10:48.512
We'll add the logic in a moment.

115
00:11:03.890 --> 00:11:06.400
Okay, right now there's
only one button visible and

116
00:11:06.400 --> 00:11:09.255
that is the easy level because
we haven't added the others.

117
00:11:09.255 --> 00:11:14.480
So let's go into levels.ts and

118
00:11:14.480 --> 00:11:19.904
add the other levels of our game.

119
00:11:19.904 --> 00:11:22.947
We'll add one for medium,
it's gonna have a size of 6.

120
00:11:25.031 --> 00:11:29.476
And a duration of, let's say,
2 and a half minutes.

121
00:11:33.067 --> 00:11:37.040
And we're gonna copy the emojis from
the jest that I shared earlier.

122
00:11:53.383 --> 00:11:58.349
And then finally, for the masochists
you're gonna have a hard level

123
00:11:58.349 --> 00:12:01.870
which is gonna be 8 by
8 which means 32 pairs.

124
00:12:01.870 --> 00:12:06.289
And for this one we'll say 5 minutes

125
00:12:12.636 --> 00:12:15.526
It's also gonna be hard because
we're using face emojis and

126
00:12:15.526 --> 00:12:19.564
they all look basically the same, so it's
kinda hard to distinguish between them.

127
00:12:25.423 --> 00:12:28.228
All right, and now if we look at our app,
we should see easy, medium, and

128
00:12:28.228 --> 00:12:34.324
hard.

