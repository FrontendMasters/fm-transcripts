WEBVTT

1
00:00:00.181 --> 00:00:07.524
So it's time to start adding the UI for
the game board itself.

2
00:00:07.524 --> 00:00:11.723
Gonna add another component,
we'll call it Grid.svelte.

3
00:00:14.703 --> 00:00:18.571
And we'll begin with div class=grid.

4
00:00:20.531 --> 00:00:24.641
And then inside there, we're gonna have a
bunch of different elements, but for now,

5
00:00:24.641 --> 00:00:27.134
we just wanna create the styles for
the grid itself.

6
00:00:29.626 --> 00:00:33.472
This time, we're gonna use display grid,
obviously, cuz that's what we're making.

7
00:00:39.763 --> 00:00:45.793
And we're gonna give
grid-template-columns of,

8
00:00:45.793 --> 00:00:51.020
for now, we'll just hardcode 4 times 1fr.

9
00:00:51.020 --> 00:00:53.184
Fr, I think, stands for fraction.

10
00:00:53.184 --> 00:00:57.295
So this is saying that we'll just
divide it into four equal columns.

11
00:00:57.295 --> 00:01:01.334
Gonna copy that row with Cmd+Shift+D,
and do the same with rows.

12
00:01:04.196 --> 00:01:06.988
Right, and
I think that if we inspect that now,

13
00:01:10.662 --> 00:01:12.804
I forgot to add
the components to the page.

14
00:01:12.804 --> 00:01:13.905
So let's do that.

15
00:01:13.905 --> 00:01:17.406
Inside game,
we'll open up this grid-container element.

16
00:01:22.056 --> 00:01:24.381
Just tap to auto-import that.

17
00:01:31.540 --> 00:01:35.796
All right, so our grid is now
being rendered inside there, but

18
00:01:35.796 --> 00:01:39.186
it's not visible because
it has a height of zero.

19
00:01:39.186 --> 00:01:44.918
We could fix that like that to
see the grid start to take shape.

20
00:01:44.918 --> 00:01:47.297
Obviously, we need to put
it in the actual styles.

21
00:01:54.287 --> 00:01:58.151
And then we need to put
something inside the grid,

22
00:01:58.151 --> 00:02:02.114
we need to put the squares
of the grid in the markup.

23
00:02:02.114 --> 00:02:04.517
So we'll create a new file,
call it square,

24
00:02:14.205 --> 00:02:16.895
div class=square.

25
00:02:16.895 --> 00:02:20.805
And again, we're gonna give it some gaudy
styles just so that we can see everything.

26
00:02:22.050 --> 00:02:25.805
You got background of yellow.

27
00:02:25.805 --> 00:02:29.927
And then inside the grid,
if we just loop over

28
00:02:29.927 --> 00:02:34.487
an array of 16 items,
we can place the squares.

29
00:02:34.487 --> 00:02:42.647
Do each Array(16) as _ cuz we don't
care about the value at this point.

30
00:02:46.562 --> 00:02:48.196
Import the square component.

31
00:02:50.439 --> 00:02:57.033
And we can see that the yellow square is,
in fact, appearing in our grid.

32
00:02:57.033 --> 00:02:58.987
We wanna make it a little
bit more grid-like.

33
00:02:58.987 --> 00:03:03.008
So in order to be able to see the grid
lines, I'm gonna add a grid-gap,

34
00:03:06.439 --> 00:03:08.966
Of let's say half an.

35
00:03:08.966 --> 00:03:12.107
Okay, so
this is starting to take shape, but

36
00:03:12.107 --> 00:03:16.984
one thing that I don't love is that
as this gets bigger, eventually,

37
00:03:16.984 --> 00:03:21.213
it takes up the whole screen,
and it just looks kinda silly.

38
00:03:21.213 --> 00:03:25.376
We would like to have a maximum size for
the game so

39
00:03:25.376 --> 00:03:28.433
that it doesn't look outrageous.

40
00:03:28.433 --> 00:03:34.124
And there's a little trick that I like to
use for this, and that trick is font size.

41
00:03:34.124 --> 00:03:39.917
The way that we're gonna do this
is inside the game component,

42
00:03:39.917 --> 00:03:45.165
we're gonna set a font size
on the main container element

43
00:03:45.165 --> 00:03:52.629
that is based on that vmin value that we
talked about earlier with an upper limit.

44
00:03:52.629 --> 00:03:59.819
So down here,
we'll do font-size the minimum of 1vmin.

45
00:03:59.819 --> 00:04:02.925
And we don't yet
know what the value is gonna be.

46
00:04:02.925 --> 00:04:08.142
So we'll just do like
0.1rems as an example.

47
00:04:08.142 --> 00:04:14.610
And then if we replace all of
these vmin declarations with ems,

48
00:04:14.610 --> 00:04:20.969
it will use that container
element's font size as the guide.

49
00:04:20.969 --> 00:04:23.303
So we can see that 0.1 is
probably a little bit too small.

50
00:04:23.303 --> 00:04:28.280
So let's pump that up, maybe 0.5.

51
00:04:28.280 --> 00:04:33.348
Okay, so now it will shrink to
accommodate smaller screens,

52
00:04:33.348 --> 00:04:36.569
but when we get to much larger screens,

53
00:04:40.249 --> 00:04:43.507
It will stay at a reasonable size.

54
00:04:43.507 --> 00:04:46.969
So that's just a little CSS trick
that I find very handy when

55
00:04:46.969 --> 00:04:49.541
I'm building this sort of user interface.

