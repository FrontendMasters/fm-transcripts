WEBVTT

1
00:00:00.408 --> 00:00:05.019
So it's time to start adding
the the UI for the for

2
00:00:05.019 --> 00:00:09.755
the game board itself and
add another component.

3
00:00:09.755 --> 00:00:12.044
We'll call it grid dot svelte.

4
00:00:14.728 --> 00:00:18.164
And we'll begin with
div class equals grid.

5
00:00:20.607 --> 00:00:24.200
And then inside there we're gonna have
a bunch of different elements, but for

6
00:00:24.200 --> 00:00:26.767
now we just wanna create the styles for
the grid itself.

7
00:00:29.608 --> 00:00:33.377
This time we're gonna use display grid,
obviously, cuz that's what we're making.

8
00:00:39.871 --> 00:00:44.757
And we're gonna give
grid template columns of,

9
00:00:44.757 --> 00:00:49.523
for now we'll just hard
code four times one FR,

10
00:00:49.523 --> 00:00:52.992
FR I think, stands for fraction.

11
00:00:52.992 --> 00:00:57.271
So this is saying that we'll just
divide it into four equal columns.

12
00:00:57.271 --> 00:01:04.444
Gonna copy that row with command shift
D and do the same with rows, right.

13
00:01:04.444 --> 00:01:08.670
And I think that if we inspect that now,

14
00:01:08.670 --> 00:01:12.682
I forgot to add the component to the page.

15
00:01:12.682 --> 00:01:15.534
So let's do that inside game.

16
00:01:15.534 --> 00:01:17.702
We'll open up this grid container element.

17
00:01:22.179 --> 00:01:24.625
Just tab to auto import that.

18
00:01:31.585 --> 00:01:35.855
All right so our grid is now
being rendered inside there, but

19
00:01:35.855 --> 00:01:39.384
it's not visible because
it has a height of zero.

20
00:01:39.384 --> 00:01:44.873
We can fix that like that to see
the grid start to take shape.

21
00:01:44.873 --> 00:01:47.002
Obviously, we need to put
it in the actual styles.

22
00:01:54.286 --> 00:01:57.741
And then we need to put
something inside the grid,

23
00:01:57.741 --> 00:02:00.379
we need to put the squares of the grid.

24
00:02:00.379 --> 00:02:02.103
In the markup.

25
00:02:02.103 --> 00:02:04.950
So we'll create a new file,
call it square.

26
00:02:14.184 --> 00:02:17.454
Div class = square.

27
00:02:17.454 --> 00:02:22.290
And again we're gonna give it some gaudy
styles just so that we can see everything.

28
00:02:22.290 --> 00:02:25.959
The background of yellow.

29
00:02:25.959 --> 00:02:30.388
And then inside the grid,
if we just loop over

30
00:02:30.388 --> 00:02:35.297
an array of 16 items,
we can place the squares.

31
00:02:35.297 --> 00:02:42.714
Do each array 16 as underscore, cuz we
don't care about value at this point.

32
00:02:46.723 --> 00:02:50.514
Import the square component.

33
00:02:50.514 --> 00:02:56.955
And we can see that the yellow square
is in fact appearing in our grid.

34
00:02:56.955 --> 00:02:59.384
I want to make it a little
bit more grid-like, so

35
00:02:59.384 --> 00:03:02.839
in order to be able to see the grid lines,
I'm going to add a grid gap.

36
00:03:06.511 --> 00:03:08.985
Of let's say half an M.

37
00:03:08.985 --> 00:03:12.145
Okay, so
this is starting to take shape, but

38
00:03:12.145 --> 00:03:16.054
one thing that I don't love
is that as this gets bigger,

39
00:03:16.054 --> 00:03:21.062
eventually it takes up the whole screen
and it just looks kind of silly.

40
00:03:21.062 --> 00:03:24.326
We would like to have a maximum size for

41
00:03:24.326 --> 00:03:28.312
the game so
that it doesn't look outrageous.

42
00:03:28.312 --> 00:03:34.298
There's a little trick that I like to use
for this, and that trick is font size.

43
00:03:34.298 --> 00:03:40.385
The way that we're going to do
this is Inside the game component.

44
00:03:40.385 --> 00:03:45.426
We're gonna set a font size
on the main container element

45
00:03:45.426 --> 00:03:52.579
that is based on that V min value that we
talked about earlier with an upper limit.

46
00:03:52.579 --> 00:03:58.628
So down here we'll do font size
the minimum of one V min.&amp;nbsp; And

47
00:03:58.628 --> 00:04:02.815
we don't yet
know what the value is going to be.

48
00:04:02.815 --> 00:04:08.945
So we'll just do like what
0.1 rems as an example.

49
00:04:08.945 --> 00:04:13.754
And then if we replace all of
these V min declarations with EMS,

50
00:04:13.754 --> 00:04:18.655
it will use that that container
elements font size as the guide,

51
00:04:18.655 --> 00:04:23.229
so we can see that 0.1 is
probably a little bit too small.

52
00:04:23.229 --> 00:04:28.545
So let's Bump that up maybe 0.5, okay?

53
00:04:28.545 --> 00:04:33.567
So now it will it will shrink to
accommodate smaller screens but

54
00:04:33.567 --> 00:04:36.420
when we get to much larger screens,

55
00:04:40.292 --> 00:04:43.801
It will stay at a reasonable size.

56
00:04:43.801 --> 00:04:48.355
So that's just a little CSS trick that I
find very handy when I'm building this

57
00:04:48.355 --> 00:04:49.804
sort of user interface.

