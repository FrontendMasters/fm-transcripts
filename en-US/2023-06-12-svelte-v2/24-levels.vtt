WEBVTT

1
00:00:00.110 --> 00:00:04.962
About time we started adding
a little bit of game logic.

2
00:00:04.962 --> 00:00:09.291
And the first thing we want to do
is define the levels of our game.

3
00:00:09.291 --> 00:00:13.949
Because we have three different levels,
we've got easy, medium and hard, and

4
00:00:13.949 --> 00:00:16.485
those are gonna have different grid sizes,

5
00:00:16.485 --> 00:00:20.071
different durations,
different sets of emojis, and so on.

6
00:00:20.071 --> 00:00:24.160
And so it's a good thing to get that
roughed out before we go any further.

7
00:00:24.160 --> 00:00:28.593
So I'm gonna create a new
module called levels.ts.

8
00:00:33.048 --> 00:00:38.520
And I'm gonna start by defining
an interface for my level.

9
00:00:38.520 --> 00:00:40.280
So this is some TypeScript.

10
00:00:40.280 --> 00:00:43.970
If you're not familiar with TypeScript,
then this might seem a little alien, but

11
00:00:43.970 --> 00:00:46.888
this is just basically saying what
the shape of a level should be.

12
00:00:46.888 --> 00:00:49.656
Export interface level,

13
00:00:49.656 --> 00:00:55.200
we're gonna have a few
different properties here.

14
00:00:56.790 --> 00:01:02.077
We're gonna have a label,
that's where we're going to put easy,

15
00:01:02.077 --> 00:01:04.224
medium, hard, and so on.

16
00:01:04.224 --> 00:01:08.970
We're gonna have a size, which is the
horizontal or vertical size of the grid.

17
00:01:10.330 --> 00:01:13.808
So the easy mode,
we're going to have a 4x4.

18
00:01:13.808 --> 00:01:17.385
For it to be matching pairs,
it needs to be even numbers, so

19
00:01:17.385 --> 00:01:22.620
we can't have a 5x5 grid, so medium will
be 6x6, and then hard is gonna be 8 by 8.

20
00:01:22.620 --> 00:01:25.080
So that's the number.

21
00:01:26.390 --> 00:01:28.123
We'll give each level a duration,

22
00:01:28.123 --> 00:01:31.260
the number of milliseconds that
you have to complete the level.

23
00:01:34.307 --> 00:01:37.318
And each level is gonna
get its own set of emojis.

24
00:01:41.363 --> 00:01:44.530
All right, this syntax right
here means an array of strings.

25
00:01:45.870 --> 00:01:52.196
It's a shorthand way of doing this,
those two things are equivalent.

26
00:01:57.967 --> 00:02:01.178
Okay, so we'll create our first level, and

27
00:02:01.178 --> 00:02:06.010
then we can come back later and
do the others, export const levels.

28
00:02:07.070 --> 00:02:11.255
And this is going to be an array of these
level objects that we just defined.

29
00:02:14.853 --> 00:02:21.040
The first one is gonna be easy,
It's gonna have a size of four.

30
00:02:21.040 --> 00:02:24.720
It's going to have a duration of,
let's say, one minute.

31
00:02:24.720 --> 00:02:28.900
We can dial this down later
by doing some play testing.

32
00:02:28.900 --> 00:02:30.570
If it's too easy or
too hard, we can change it.

33
00:02:32.130 --> 00:02:38.210
And then the tricky bit is
getting the emojis in here.

34
00:02:38.210 --> 00:02:41.658
There's a bunch of places where
you could get a list of images or

35
00:02:41.658 --> 00:02:44.540
you could like manually type them all out.

36
00:02:44.540 --> 00:02:46.810
But for the sake of this workshop,

37
00:02:46.810 --> 00:02:50.106
we actually have a list
of emojis available here.

38
00:02:50.106 --> 00:02:53.549
If you go to ematchi.vercel.app/gist,

39
00:02:53.549 --> 00:02:57.790
it will redirect you to
something I made earlier.

40
00:02:57.790 --> 00:03:03.224
You can just copy and
paste these into your levels.ts file.

41
00:03:03.224 --> 00:03:10.091
If you take the easy one, just copy
that and then put it inside that string,

42
00:03:10.091 --> 00:03:14.784
and then put .split on
the space character there.

43
00:03:14.784 --> 00:03:19.618
All right, that's gonna give us
an array of emojis that we can use.

