[00:00:00]
>> So it's time to start adding the the UI for the for the game board itself and add another component. We'll call it grid dot svelte. And we'll begin with div class equals grid. And then inside there we're gonna have a bunch of different elements, but for now we just wanna create the styles for the grid itself.

[00:00:29]
This time we're gonna use display grid, obviously, cuz that's what we're making. And we're gonna give grid template columns of, for now we'll just hard code four times one FR, FR I think, stands for fraction. So this is saying that we'll just divide it into four equal columns.

[00:00:57]
Gonna copy that row with command shift D and do the same with rows, right. And I think that if we inspect that now, I forgot to add the component to the page. So let's do that inside game. We'll open up this grid container element. Just tab to auto import that.

[00:01:31]
All right so our grid is now being rendered inside there, but it's not visible because it has a height of zero. We can fix that like that to see the grid start to take shape. Obviously, we need to put it in the actual styles. And then we need to put something inside the grid, we need to put the squares of the grid.

[00:02:00]
In the markup. So we'll create a new file, call it square. Div class = square. And again we're gonna give it some gaudy styles just so that we can see everything. The background of yellow. And then inside the grid, if we just loop over an array of 16 items, we can place the squares.

[00:02:35]
Do each array 16 as underscore, cuz we don't care about value at this point. Import the square component. And we can see that the yellow square is in fact appearing in our grid. I want to make it a little bit more grid-like, so in order to be able to see the grid lines, I'm going to add a grid gap.

[00:03:06]
Of let's say half an M. Okay, so this is starting to take shape, but one thing that I don't love is that as this gets bigger, eventually it takes up the whole screen and it just looks kind of silly. We would like to have a maximum size for the game so that it doesn't look outrageous.

[00:03:28]
There's a little trick that I like to use for this, and that trick is font size. The way that we're going to do this is Inside the game component. We're gonna set a font size on the main container element that is based on that V min value that we talked about earlier with an upper limit.

[00:03:52]
So down here we'll do font size the minimum of one V min.&nbsp; And we don't yet know what the value is going to be. So we'll just do like what 0.1 rems as an example. And then if we replace all of these V min declarations with EMS, it will use that that container elements font size as the guide, so we can see that 0.1 is probably a little bit too small.

[00:04:23]
So let's Bump that up maybe 0.5, okay? So now it will it will shrink to accommodate smaller screens but when we get to much larger screens, It will stay at a reasonable size. So that's just a little CSS trick that I find very handy when I'm building this sort of user interface.

