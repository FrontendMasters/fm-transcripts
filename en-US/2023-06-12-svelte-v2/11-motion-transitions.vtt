WEBVTT

1
00:00:00.000 --> 00:00:04.776
About time we started adding
a little bit of game logic.

2
00:00:04.776 --> 00:00:09.668
And the first thing we wanna do is define
the levels of our game cuz you have three

3
00:00:09.668 --> 00:00:14.710
different levels, you've got easy,
medium, and hard and those are gonna have

4
00:00:14.710 --> 00:00:20.074
different grid sizes, different durations,
different sets of emojis, and so on.

5
00:00:20.074 --> 00:00:24.155
And so it's a good thing to get that
roughed out before we go any further.

6
00:00:24.155 --> 00:00:28.579
So I'm gonna create a new
module called levels.ts.

7
00:00:32.992 --> 00:00:38.500
And I'm gonna start by defining
an interface for my level.

8
00:00:38.500 --> 00:00:40.184
So this is some TypeScripts.

9
00:00:40.184 --> 00:00:44.594
If you're not familiar with TypeScript,
then this might seem a little alien, but

10
00:00:44.594 --> 00:00:48.068
this is just basically saying what
the shape of a level should be.

11
00:00:48.068 --> 00:00:50.762
Export interface level,

12
00:00:50.762 --> 00:00:56.156
we're gonna have a few
different properties here.

13
00:00:56.156 --> 00:01:01.822
We're gonna have a label,
that's where we're gonna put easy,

14
00:01:01.822 --> 00:01:04.202
medium, hard, and so on.

15
00:01:04.202 --> 00:01:10.098
We're gonna have a size, which is the
horizontal or vertical size of the grid.

16
00:01:10.098 --> 00:01:13.582
So the easy mode we're
gonna have a 4 by 4.

17
00:01:13.582 --> 00:01:16.742
For it to be matching pairs it
needs to be even numbers so

18
00:01:16.742 --> 00:01:18.472
we can't have a 5 by 5 grid.

19
00:01:18.472 --> 00:01:20.344
So medium will be 6 by 6.

20
00:01:20.344 --> 00:01:24.258
And then hard is gonna be 8 by 8.

21
00:01:24.258 --> 00:01:27.575
So that's a number,
we'll give each level a duration,

22
00:01:27.575 --> 00:01:31.319
the number of milliseconds that
you have to complete the level.

23
00:01:34.015 --> 00:01:37.346
And each level is gonna
get its own set of emojis.

24
00:01:41.291 --> 00:01:45.554
All right, this syntax right
here means an array of strings.

25
00:01:45.554 --> 00:01:50.697
It's a shorthand way of doing this.

26
00:01:50.697 --> 00:01:52.560
Those two things are equivalent.

27
00:01:57.921 --> 00:02:00.951
Okay, so we'll create our first level, and

28
00:02:00.951 --> 00:02:03.995
then we can come back later and
do the others.

29
00:02:03.995 --> 00:02:06.058
export const levels, and

30
00:02:06.058 --> 00:02:11.507
this is gonna be an array of these
level objects that we just defined.

31
00:02:14.744 --> 00:02:18.692
The first one is gonna be easy.

32
00:02:18.692 --> 00:02:21.501
It's gonna have a size of 4.

33
00:02:21.501 --> 00:02:24.604
It's gonna have a duration of,
let's say, one minute.

34
00:02:24.604 --> 00:02:28.688
We can dial this down later
by doing some play testing.

35
00:02:28.688 --> 00:02:31.811
If it's too easy or
too hard, we can change it.

36
00:02:31.811 --> 00:02:38.050
And then the tricky bit is
getting the emojis in here.

37
00:02:38.050 --> 00:02:41.992
There's a bunch of places where
you could get a list of emojis, or

38
00:02:41.992 --> 00:02:44.297
you could manually type them all out.

39
00:02:44.297 --> 00:02:47.102
But for the sake of this workshop,

40
00:02:47.102 --> 00:02:51.181
we actually have a list
of emojis available here.

41
00:02:51.181 --> 00:02:54.206
If you go to ematchi.vercel.app/gist,

42
00:02:54.206 --> 00:02:57.649
it will redirect you to
something I made earlier.

43
00:02:57.649 --> 00:03:03.243
You can just copy and
paste these into your levels.ts file.

44
00:03:03.243 --> 00:03:10.199
If you take the easy one, just copy that
and then put it inside that string and

45
00:03:10.199 --> 00:03:14.560
then put .split on
the space character there.

46
00:03:14.560 --> 00:03:19.560
Right, that's gonna give us
an array of emojis that we can use.

