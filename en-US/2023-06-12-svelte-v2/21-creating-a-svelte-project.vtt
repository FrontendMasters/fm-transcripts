WEBVTT

1
00:00:00.270 --> 00:00:03.785
Okay, so
the one case that we haven't handled yet

2
00:00:03.785 --> 00:00:08.229
is the case where the user guessed
correctly and now has a pair.

3
00:00:08.229 --> 00:00:12.867
And so from within this grid component,
we need to communicate that up to

4
00:00:12.867 --> 00:00:16.526
the game components so
that we can update the game state.

5
00:00:16.526 --> 00:00:22.504
And to do that, this component Grid.svelte
needs to become an event dispatcher.

6
00:00:22.504 --> 00:00:25.984
So, as we've seen in the workshop so far,

7
00:00:25.984 --> 00:00:30.823
we'll create dispatch as
createEventDispatcher() and

8
00:00:30.823 --> 00:00:35.383
it's automatically imported that for
us from Svelte.

9
00:00:35.383 --> 00:00:39.982
And then inside here,
we're gonna dispatch a found event,

10
00:00:39.982 --> 00:00:43.319
and we're gonna give it some information,

11
00:00:43.319 --> 00:00:47.668
we're gonna pass the emoji
that was found in that event.

12
00:00:51.374 --> 00:00:54.094
And then in our Game.svelte componen,

13
00:00:54.094 --> 00:00:57.854
I'm gonna move that over to the left so
that I can see it.

14
00:00:57.854 --> 00:01:04.071
We can now add a found event
listener on the grid component.

15
00:01:04.071 --> 00:01:06.465
Like so, tab to accept that completion.

16
00:01:11.535 --> 00:01:15.457
All right, so this event data is
gonna tell us which emoji was found.

17
00:01:18.852 --> 00:01:22.839
You remember that we declared this
array up here of the emojis that

18
00:01:22.839 --> 00:01:26.550
have been found,
I'm just gonna push data into that array.

19
00:01:36.671 --> 00:01:42.880
Right, this e.detail object is something
that you get on a custom event.

20
00:01:42.880 --> 00:01:45.336
And this isn't a spell thing,
it's a dumb thing.

21
00:01:45.336 --> 00:01:48.499
The e.detail can be just
an arbitrary object of data,

22
00:01:48.499 --> 00:01:52.299
it's basically whatever you pass
in to your dispatch function.

23
00:01:55.774 --> 00:01:57.449
Save so that pretty makes it look nice.

24
00:01:59.869 --> 00:02:04.995
And now we need to do something
with the array of found emojis.

25
00:02:04.995 --> 00:02:05.650
First of all,

26
00:02:05.650 --> 00:02:08.878
we need to remove it from the grid
because you can't find a pair twice.

27
00:02:13.419 --> 00:02:17.338
All right, same drill,
and then scroll by now,

28
00:02:17.338 --> 00:02:20.501
we need to create this prop on the grid.

29
00:02:20.501 --> 00:02:24.805
I'm just gonna duplicate that
line with Command+Shift+D.

30
00:02:28.004 --> 00:02:31.940
Okay, now we need to represent
that inside the square component.

31
00:02:31.940 --> 00:02:35.420
So we're gonna pass a found
property into here, but

32
00:02:35.420 --> 00:02:37.880
it's not gonna be the entire array.

33
00:02:37.880 --> 00:02:40.050
It's just gonna be a boolean of whether or

34
00:02:40.050 --> 00:02:43.530
not found includes the emoji that
we're currently dealing with.

35
00:02:43.530 --> 00:02:49.921
So inside square,
just like selected as a boolean,

36
00:02:49.921 --> 00:02:54.569
we're gonna add a found boolean, and

37
00:02:54.569 --> 00:03:01.702
that's gonna be if the array
includes the current emoji.

38
00:03:07.907 --> 00:03:12.342
And we can use this to remove
the spam from the grid altogether,

39
00:03:16.325 --> 00:03:18.778
Once the emoji has been found.

40
00:03:24.328 --> 00:03:29.836
So now if I pick two pairs
from the grid like these

41
00:03:29.836 --> 00:03:34.806
two fish, they get removed from the grid.

42
00:03:37.295 --> 00:03:41.661
You'll notice, of course,
that there is a repeating pattern here,

43
00:03:41.661 --> 00:03:45.814
the emojis at the top are duplicated
in the bottom half of the grid.

44
00:03:45.814 --> 00:03:51.382
So this game isn't gonna be a whole lot
of fun, so we need to shuffle the emojis.

45
00:03:51.382 --> 00:03:56.062
And to do that, we're gonna create
a new module called utils.ts, and

46
00:03:56.062 --> 00:04:00.197
inside that module,
we're gonna create a shuffle function.

47
00:04:09.384 --> 00:04:13.698
Do export function shuffle, and

48
00:04:13.698 --> 00:04:21.253
the input to this function is
gonna be an array of strings.

49
00:04:24.232 --> 00:04:27.981
But the fact that it's an array of
strings actually isn't material,

50
00:04:27.981 --> 00:04:31.159
the shuffle function doesn't
care what it's shuffling,

51
00:04:31.159 --> 00:04:33.908
so we're gonna turn this
into a generic function.

52
00:04:33.908 --> 00:04:38.321
We do that by adding a generic
argument like this, and

53
00:04:38.321 --> 00:04:41.865
then we can replace
the string here with T.

54
00:04:41.865 --> 00:04:46.530
This is nice because now when something
calls shuffle and passes in an array of

55
00:04:46.530 --> 00:04:51.437
whatever values, then TypeScript will
know what kind of array is getting back.

56
00:04:55.492 --> 00:04:59.956
Okay, so we're gonna implement
something called the Fisher Yates

57
00:04:59.956 --> 00:05:03.491
shuffle algorithm which
modifies an array in place.

58
00:05:03.491 --> 00:05:06.529
We begin by getting
the current array length, and

59
00:05:06.529 --> 00:05:08.997
then we're just gonna work backwards.

60
00:05:12.447 --> 00:05:20.827
At each point, we are gonna get a random
value between 0 and the current index.

61
00:05:25.826 --> 00:05:32.158
So that's Math.floor of Math.random() *

62
00:05:32.158 --> 00:05:37.390
i + 1 because we just decremented it.

63
00:05:37.390 --> 00:05:42.482
And we wanna get a temporary

64
00:05:42.482 --> 00:05:49.126
variable that contains an array i,

65
00:05:49.126 --> 00:05:54.440
I think, and then we do array

66
00:05:54.440 --> 00:05:58.868
[i] = array [j] and

67
00:05:58.868 --> 00:06:02.863
array [j] = temp.

68
00:06:02.863 --> 00:06:05.261
If I get this right first time,
I'm gonna be super happy with myself.

69
00:06:05.261 --> 00:06:09.548
And then we just return
the array at the end.

70
00:06:09.548 --> 00:06:13.449
So now inside the game
where we create this grid,

71
00:06:13.449 --> 00:06:18.876
we can take these peer where we're
just duplicating everything and

72
00:06:18.876 --> 00:06:22.799
we can shuffle that before we return it,
right?

73
00:06:22.799 --> 00:06:27.188
Okay, we need to import it and
we do that from utils.

74
00:06:27.188 --> 00:06:30.072
If I hit Save, hopefully we're
gonna get a randomized array.

75
00:06:31.542 --> 00:06:34.987
All right, it doesn't look that random
because we've got the caterpillars next to

76
00:06:34.987 --> 00:06:37.479
each other and the dinosaurs on
top of each other, but it is.

77
00:06:37.479 --> 00:06:41.602
This is a shuffled array.

78
00:06:41.602 --> 00:06:44.446
Okay, so
things are starting to take shape.

79
00:06:46.893 --> 00:06:51.661
One thing we're not doing right now
is we're not storing the emojis

80
00:06:51.661 --> 00:06:54.253
that we've found outside the grid,

81
00:06:54.253 --> 00:06:58.950
and we have a space to do that in
this info block below the game grid.

82
00:06:58.950 --> 00:07:03.633
So we would like to include all of
the emoji that have been found so

83
00:07:03.633 --> 00:07:04.774
far down here.

84
00:07:04.774 --> 00:07:09.417
We're gonna create a new component for
this, we call it found.svelte.

85
00:07:12.596 --> 00:07:16.741
Just do div class = "found".

86
00:07:16.741 --> 00:07:20.989
And it will take the found array,

87
00:07:20.989 --> 00:07:25.401
export let found: string array.

88
00:07:25.401 --> 00:07:28.747
And we'll just render,
I need to add the lang = ts,

89
00:07:28.747 --> 00:07:31.877
that's why it's giving
me the red squigglers.

90
00:07:31.877 --> 00:07:35.276
And it's just gonna render an array
of all of the found emojis.

91
00:07:43.123 --> 00:07:44.813
And I'm gonna add a key there so

92
00:07:44.813 --> 00:07:48.718
that we can do some funky animation
stuff later on when we build the app.

93
00:07:57.186 --> 00:08:05.301
Right, back in my game.svelte,
We can create that component.

94
00:08:07.847 --> 00:08:11.033
And pass the find array into it.

95
00:08:11.033 --> 00:08:14.777
And now if I find a pair
of these turtles here,

96
00:08:14.777 --> 00:08:18.631
then hopefully it's
gonna appear down here.

97
00:08:18.631 --> 00:08:23.213
It's a little hard to see though, so
I'm gonna go back to found.svelte and

98
00:08:23.213 --> 00:08:24.297
add some styles.

99
00:08:30.884 --> 00:08:33.671
Maybe bump that a little bit further.

100
00:08:36.824 --> 00:08:39.463
We want that to be centered, so

101
00:08:39.463 --> 00:08:45.151
we're gonna add some display flex
goodness to div class = found.

102
00:08:57.937 --> 00:09:03.924
Justify content center,
align-items: center.

103
00:09:03.924 --> 00:09:07.236
We'll put a little gap between
the things that we find.

104
00:09:11.472 --> 00:09:13.639
And now find some more of these pairs,

105
00:09:13.639 --> 00:09:16.626
they'll also get added to
that array at the bottom,

