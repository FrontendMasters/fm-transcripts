WEBVTT

1
00:00:00.000 --> 00:00:03.614
So far,
most things are looking pretty good,

2
00:00:03.614 --> 00:00:08.533
but we have some game logic that
has not yet been accounted for.

3
00:00:08.533 --> 00:00:09.916
So there's a few things that can happen.

4
00:00:09.916 --> 00:00:12.593
We can win the game by
finding all of the pairs or

5
00:00:12.593 --> 00:00:15.074
we can lose the game by
running out of time.

6
00:00:15.074 --> 00:00:18.584
We can also pause the game
by hitting the Pause button.

7
00:00:18.584 --> 00:00:21.233
So let's represent each of those.

8
00:00:21.233 --> 00:00:23.619
First, the pause one is easy to do.

9
00:00:23.619 --> 00:00:28.710
We're just gonna add an onclick here,
and that's gonna

10
00:00:28.710 --> 00:00:34.449
forward any click events on
the button up to the game component.

11
00:00:37.991 --> 00:00:43.063
On the countdown, we'll add,
oops, get rid of that.

12
00:00:57.181 --> 00:01:01.584
We'll add a little to-do to ourselves.

13
00:01:01.584 --> 00:01:06.634
In the grid component,
if we find all of the pairs,

14
00:01:06.634 --> 00:01:11.214
then the length of the found
array will be equal

15
00:01:11.214 --> 00:01:14.863
to the area of the grid divided by 2.

16
00:01:32.702 --> 00:01:40.042
Finally if we run out of time inside our
countdown loop, then we lose the game.

17
00:01:40.042 --> 00:01:44.484
And the way that we're gonna do this is
we're gonna have a variety of states that

18
00:01:44.484 --> 00:01:46.025
the application can be in.

19
00:01:46.025 --> 00:01:52.075
I'm gonna go back into our
page.svelte component.

20
00:01:52.075 --> 00:01:54.943
And we're gonna define a set of states for
the game.

21
00:01:59.699 --> 00:02:04.440
We can be waiting when
we first load the game.

22
00:02:04.440 --> 00:02:06.927
We can be playing,

23
00:02:07.938 --> 00:02:12.831
We can be paused,
We can be in a win state.

24
00:02:15.594 --> 00:02:21.435
Call it won, Or we can have lost the game.

25
00:02:21.435 --> 00:02:24.627
And we'll initialize that
with value of waiting.

26
00:02:28.583 --> 00:02:30.145
We need to add lang equals ts,

27
00:02:30.145 --> 00:02:33.153
because otherwise it doesn't
understand this syntax.

28
00:02:38.059 --> 00:02:41.381
So now, we can add some UI
around the game itself so

29
00:02:41.381 --> 00:02:47.017
that when we first come to this app, we're
not launched into the game immediately.

30
00:02:47.017 --> 00:02:49.937
We have this interstitial welcome screen,
and

31
00:02:49.937 --> 00:02:53.301
when we interact with that,
it takes us into the game.

32
00:02:53.301 --> 00:02:55.936
So any time we're not actively playing,

33
00:02:55.936 --> 00:03:00.453
whether it's because we've paused
the game, or because we've won,

34
00:03:00.453 --> 00:03:04.990
or we've lost, we wanna have a modal
that appears on top of the game UI.

35
00:03:04.990 --> 00:03:13.938
So a state is not playing,
Then we wanna have some content.

36
00:03:13.938 --> 00:03:19.073
And we're gonna put that
in a new modal component so

37
00:03:19.073 --> 00:03:22.426
that we can add some styles to it.

38
00:03:22.426 --> 00:03:27.616
So add that component, Modal.svelte.

39
00:03:34.356 --> 00:03:37.321
And the first thing we're gonna
do is create a modal background,

40
00:03:39.551 --> 00:03:41.108
Which covers the entire screen.

41
00:03:45.998 --> 00:03:47.274
Use position fixed.

42
00:03:49.966 --> 00:03:53.212
Give it a width and a height of 100%.

43
00:03:58.087 --> 00:04:00.845
And we're gonna give it a backdrop filter,

44
00:04:04.013 --> 00:04:07.537
That blurs everything behind the modal.

45
00:04:10.376 --> 00:04:14.799
We're gonna use display grid, and
then just place everything in the center.

46
00:04:18.534 --> 00:04:23.468
And finally, we're gonna give it a Z index
to put it safely above all of the content.

47
00:04:25.225 --> 00:04:29.317
And then inside there,
we'll have the modal content itself.

48
00:04:37.371 --> 00:04:41.406
And we're gonna create a slot so that we
can pass some content into this modal.

49
00:04:41.406 --> 00:04:44.457
Save that, and over here,
we'll create our modal.

50
00:04:48.703 --> 00:04:53.204
Then we can start adding some content
inside here depending on the state that

51
00:04:53.204 --> 00:04:54.552
we're currently in.

52
00:04:54.552 --> 00:05:00.776
So when we first load the page,
the state is going to be waiting.

53
00:05:00.776 --> 00:05:08.135
So we'll add if state is waiting.

54
00:05:11.270 --> 00:05:14.588
We'll add some text that
just says choose a level.

55
00:05:25.009 --> 00:05:29.522
It looks like we need to add some
positioning on that fixed element so

56
00:05:29.522 --> 00:05:30.796
that we can see it.

57
00:05:32.280 --> 00:05:36.887
All right, this is the first time I've
actually had some text in this application

58
00:05:36.887 --> 00:05:41.523
and we can suddenly see that we are using
Times New Roman, which is a horrible sin.

59
00:05:41.523 --> 00:05:45.993
So we need to pick some nicer fonts for
this.

60
00:05:45.993 --> 00:05:51.282
One thing that I like to do
when I'm creating any new

61
00:05:51.282 --> 00:05:57.319
styles is have a default style
that is using the system UI.

62
00:05:57.319 --> 00:06:00.378
Because this way, we don't need
to download any custom fonts and

63
00:06:00.378 --> 00:06:03.784
it will look pretty nice on basically
whatever platform you're using.

64
00:06:03.784 --> 00:06:07.926
So in VS Code,
if you just start typing system UI,

65
00:06:07.926 --> 00:06:11.290
you will get some nicer fonts like that.

66
00:06:11.290 --> 00:06:13.642
But for the for the logo of the game,

67
00:06:13.642 --> 00:06:17.492
we want something a little bit
nicer than the system font.

68
00:06:17.492 --> 00:06:19.293
You can pick your own font, but

69
00:06:19.293 --> 00:06:22.843
this is one that I particularly
liked called grandstander.

70
00:06:22.843 --> 00:06:27.790
And rather than going into Google fonts or
whatever and downloading a WAV file and

71
00:06:27.790 --> 00:06:31.586
adding it to my project,
I'm just gonna install it from NPM.

72
00:06:31.586 --> 00:06:37.275
There's a wonderful set of
packages called font source.

73
00:06:37.275 --> 00:06:41.748
And I'm just gonna install
font source/grandstander.

74
00:06:41.748 --> 00:06:47.697
But if you have a font that
you would like to use instead,

75
00:06:47.697 --> 00:06:50.619
then you can install that.

76
00:06:50.619 --> 00:06:55.550
And once that's installed,
all I need to do in

77
00:06:55.550 --> 00:07:00.609
here is add an import
declaration to the top of my

78
00:07:00.609 --> 00:07:05.602
styles.css that points
to that new package.

79
00:07:05.602 --> 00:07:09.272
Right, this makes the grandstander
font available to my app.

80
00:07:09.272 --> 00:07:13.426
So if I add an h1, I can use font family,

81
00:07:18.147 --> 00:07:19.372
Grandstander.

82
00:07:19.372 --> 00:07:22.687
And then now if I've
set that up correctly,

83
00:07:22.687 --> 00:07:25.294
I can add an h1 inside that modal.

84
00:07:30.812 --> 00:07:32.918
Hey, Presto, we have a logo.

85
00:07:36.594 --> 00:07:39.377
Looks like we need to add some
more styles to the modal so

86
00:07:39.377 --> 00:07:41.568
that everything is correctly justified.

87
00:07:41.568 --> 00:07:44.765
Or maybe we just need to make
the h1 a little bit bigger, so

88
00:07:44.765 --> 00:07:46.412
let's add some styles here.

89
00:07:57.255 --> 00:07:58.437
Make that nice and big.

90
00:08:03.117 --> 00:08:06.240
And n the original,
we're highlighting the text inside.

91
00:08:06.240 --> 00:08:09.150
So I'm gonna do that by
creating a span inside the h1,

92
00:08:14.151 --> 00:08:18.768
And giving that nice color.

93
00:08:30.390 --> 00:08:33.988
I'm just gonna wrap all
of that in the header so

94
00:08:33.988 --> 00:08:37.141
that we can add a little tagline as well.

95
00:08:45.031 --> 00:08:50.746
I'm gonna give the p front
family brand standard as well.

96
00:08:57.245 --> 00:09:00.436
And then we need to handle all of
the other states that our application

97
00:09:00.436 --> 00:09:01.051
could be in.

98
00:09:01.051 --> 00:09:06.101
So you already know that
we're not in the playing,

99
00:09:06.101 --> 00:09:10.216
and that leaves paused, won, and lost.

100
00:09:14.282 --> 00:09:16.769
So we can handle the won and

101
00:09:16.769 --> 00:09:22.205
the lost states together if
state is won or state is lost.

102
00:09:30.073 --> 00:09:34.036
We'll add some text that
says you state the game.

103
00:09:36.434 --> 00:09:37.818
If the game is paused,

104
00:09:47.432 --> 00:09:50.631
We'll just say game is currently paused,
and

105
00:09:50.631 --> 00:09:54.412
then we'll turn this into
an else if state is waiting.

106
00:09:57.110 --> 00:10:01.281
Then we'll invite the player
to choose a level.

107
00:10:04.077 --> 00:10:06.816
And then below that text,
we wanna have some buttons so

108
00:10:06.816 --> 00:10:08.733
that we can actually start a new game.

109
00:10:16.762 --> 00:10:20.574
And the buttons that we show are gonna
be dependent on what state we're in.

110
00:10:20.574 --> 00:10:24.734
If the game is currently paused,
then we wanna show a Resume button or

111
00:10:24.734 --> 00:10:25.678
a Quit button.

112
00:10:32.661 --> 00:10:34.500
Otherwise, we want to show
the different levels.

113
00:10:42.414 --> 00:10:45.622
And I'm just roughing out
the UI at this point.

114
00:10:45.622 --> 00:10:48.737
We'll add the logic in a moment.

115
00:11:03.805 --> 00:11:07.462
Okay, right now, there's only one button
visible, and that is the easy level,

116
00:11:07.462 --> 00:11:09.223
because we haven't added the others.

117
00:11:09.223 --> 00:11:13.174
So let's go into levels.ts, and

118
00:11:13.174 --> 00:11:16.994
Add the other levels of our game.

119
00:11:16.994 --> 00:11:23.996
We'll add one for medium,
it's gonna have a size of six and

120
00:11:23.996 --> 00:11:29.610
a duration of let's say two and
a half minutes.

121
00:11:33.004 --> 00:11:37.346
And we're gonna copy the emojis
from the gist I shared earlier.

122
00:11:53.361 --> 00:11:58.253
And then finally, for the masochists,
we're gonna have a hard

123
00:11:58.253 --> 00:12:02.613
levelwhich is gonna be 8 by 8,
which means 32 pairs.

124
00:12:02.613 --> 00:12:06.539
And for this one, we'll say five minutes

125
00:12:12.646 --> 00:12:15.708
It's also gonna be hard,
because we're using face emojis and

126
00:12:15.708 --> 00:12:17.398
they all look basically the same.

127
00:12:17.398 --> 00:12:19.690
So it's kinda hard to
distinguish between them.

128
00:12:25.379 --> 00:12:29.218
All right, and now, if we look at our app,
we should see easy, medium, and hard.

