WEBVTT

1
00:00:00.090 --> 00:00:04.021
We need to get the state into this screen,
and

2
00:00:04.021 --> 00:00:10.864
we also need to be able to start new games
and interact with the game component.

3
00:00:10.864 --> 00:00:15.597
So we're gonna need to expose some
functions from our game component

4
00:00:15.597 --> 00:00:17.890
that the page can interact with.

5
00:00:17.890 --> 00:00:22.725
The first one we'll do is start.

6
00:00:22.725 --> 00:00:27.670
Create a function, start, and
then this is gonna take a level.

7
00:00:30.225 --> 00:00:34.375
All right, then we call this
start function from outside,

8
00:00:34.375 --> 00:00:36.870
that is gonna reset the game state.

9
00:00:36.870 --> 00:00:41.353
So we'll do size = level.size.

10
00:00:41.353 --> 00:00:44.358
The grid is a newly created grid.

11
00:00:47.675 --> 00:00:54.185
And remaining and
duration are both equal to level.duration.

12
00:01:01.951 --> 00:01:05.742
And then we're gonna actually start
the game by calling a new function called

13
00:01:05.742 --> 00:01:07.617
resume which we're about to create.

14
00:01:15.554 --> 00:01:20.308
So now we're gonna set playing to true.

15
00:01:20.308 --> 00:01:23.271
Then call our countdown function.

16
00:01:23.271 --> 00:01:30.354
And then the final step is to communicate
that state back up to the page component.

17
00:01:30.354 --> 00:01:33.777
So we're gonna need to create
an event dispatcher for that.

18
00:01:33.777 --> 00:01:41.655
So, as before,
const dispatch=createEventDispatcher().

19
00:01:41.655 --> 00:01:48.710
And when the game resumes,
we are going to dispatch a play event.

20
00:01:52.540 --> 00:01:56.830
We need to export this start function so
that we can call it from outside.

21
00:01:59.790 --> 00:02:03.210
And now inside our page.svelte component.

22
00:02:03.210 --> 00:02:07.852
When we click on one of these buttons,
we're gonna call that start function.

23
00:02:12.790 --> 00:02:15.985
But before we can do that, we need to
get a reference to the game component.

24
00:02:15.985 --> 00:02:20.761
So we're gonna create let game up here and

25
00:02:20.761 --> 00:02:25.128
then bind that to the game component,

26
00:02:25.128 --> 00:02:32.638
then inside our event handler,
we're gonna call game.start.

27
00:02:32.638 --> 00:02:40.816
And we also want we need to pass in the
the level that you want to start it with.

28
00:02:42.749 --> 00:02:45.268
We need to give a type to this.

29
00:02:45.268 --> 00:02:47.378
This is gonna be a.

30
00:02:49.303 --> 00:02:53.703
A game object and so
that that now understands that

31
00:02:53.703 --> 00:02:57.593
the start function takes a level argument.

32
00:03:00.642 --> 00:03:05.495
Okay, so we've got the main component
telling the game component to start a new

33
00:03:05.495 --> 00:03:10.216
game, we now need to get the state back
from the game component into the page.

34
00:03:10.216 --> 00:03:13.390
We'll do that with event handler.

35
00:03:13.390 --> 00:03:20.362
On play,
We're gonna set the state to playing and

36
00:03:20.362 --> 00:03:25.050
that's gonna have the effect
of getting rid of the modal.

37
00:03:25.050 --> 00:03:28.807
So if you choose a level the game begins.

38
00:03:28.807 --> 00:03:35.249
But we need to get rid of all of the
initial state that we had to begin with.

39
00:03:35.249 --> 00:03:39.139
We don't want to have
a level already selected.

40
00:03:39.139 --> 00:03:44.050
We don't want to have
a default size the grid

41
00:03:44.050 --> 00:03:49.243
needs to be empty just gonna
get rid of all of this.

42
00:03:49.243 --> 00:03:56.873
Let remaining=0, let duration=0.

43
00:03:56.873 --> 00:04:00.089
And we don't even want to show
this countdown unless the game is

44
00:04:00.089 --> 00:04:01.127
currently active.

45
00:04:01.127 --> 00:04:05.775
So we're just gonna wrap
this whole thing in an if

46
00:04:05.775 --> 00:04:16.231
playing.

47
00:04:16.231 --> 00:04:19.820
Okay, so now we can pick
a harder level if you want.

48
00:04:19.820 --> 00:04:26.200
We can choose medium and
we see that we have some broken CSS.

49
00:04:26.200 --> 00:04:30.942
That's because we're not
passing the size of the game

50
00:04:30.942 --> 00:04:33.942
board down to the grid component.

51
00:04:33.942 --> 00:04:37.317
We can fix that with
a CSS custom property.

52
00:04:47.629 --> 00:04:50.529
And we can then use that
inside the grid component.

53
00:04:52.807 --> 00:04:58.536
If you just find the CSS declaration where
we hard coded 4, get rid of that and

54
00:04:58.536 --> 00:05:04.778
replace it with, var(--size).

55
00:05:09.067 --> 00:05:13.274
All right, we can now play a medium
game or we can play a hard game and

56
00:05:13.274 --> 00:05:16.072
everything will shrink down accordingly.

57
00:05:19.430 --> 00:05:23.215
So we just need to communicate
the win state and the loss state, and

58
00:05:23.215 --> 00:05:25.387
then our game is basically complete.

59
00:05:30.313 --> 00:05:35.990
If we found all of the pairs,
we can dispatch a win event.

60
00:05:39.431 --> 00:05:45.813
And if the countdown runs out,
we can dispatch a lose event.

61
00:05:47.995 --> 00:05:53.658
And if someone hits the countdown button,
then we can set playing to false,

62
00:05:53.658 --> 00:05:57.295
so that the countdown
timer doesn't continue.

63
00:05:57.295 --> 00:06:00.453
And we can also dispatch a pause event.

64
00:06:03.978 --> 00:06:08.106
And then in the top component
Page.svelte we can add handlers for

65
00:06:08.106 --> 00:06:10.103
each of those changes of state.

66
00:06:41.539 --> 00:06:45.098
[LAUGH] okay, it is telling us
that we immediately lost the game.

67
00:06:45.098 --> 00:06:50.312
And I think I know why that is is because
inside game.svelte we're calling the,

68
00:06:50.312 --> 00:06:53.994
countdown function as soon
as the component is mounted,

69
00:06:53.994 --> 00:06:55.390
which we do not want.

70
00:06:55.390 --> 00:07:00.358
Instead, we want that countdown
to start when the game

71
00:07:00.358 --> 00:07:03.710
is resumed or when we start the game.

72
00:07:03.710 --> 00:07:07.114
So if we get rid of that onMount call,

73
00:07:07.114 --> 00:07:12.837
it should take you to the welcome
screen where we can start the game.

74
00:07:12.837 --> 00:07:18.411
It is not counting down right now,

75
00:07:18.411 --> 00:07:21.878
that's backwards.

76
00:07:27.485 --> 00:07:28.572
All right, unfortunately,

77
00:07:28.572 --> 00:07:30.972
the only way to check that this
works is to actually play the game.

78
00:07:36.339 --> 00:07:37.971
Did we see the red bird already?

79
00:07:37.971 --> 00:07:41.898
No, not there.

80
00:07:41.898 --> 00:07:45.784
I think we saw the alligator.

81
00:07:45.784 --> 00:07:47.751
Man, I'm so bad at this.

82
00:08:00.101 --> 00:08:03.881
Okay, and it shows us that if
we do in fact win the game,

83
00:08:03.881 --> 00:08:06.935
it'll send us the you
won the game message.

