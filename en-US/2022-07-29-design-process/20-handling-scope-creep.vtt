WEBVTT

1
00:00:00.640 --> 00:00:03.130
So I've kind of touched
on this a lot of times.

2
00:00:03.130 --> 00:00:07.424
And a lot of the things that we have
already done and already talked about in

3
00:00:07.424 --> 00:00:12.170
terms of our process, a way of managing
projects, will help with scope creep.

4
00:00:12.170 --> 00:00:16.606
But I didn't wanna pull it out
particularly at this point, because this

5
00:00:16.606 --> 00:00:21.336
is often where scope creep really kinda
kicks off from a design perspective,

6
00:00:21.336 --> 00:00:26.010
if you've shown the design, and
then the goalposts begin to move, right?

7
00:00:27.220 --> 00:00:33.221
But I think it's important to say that
scope creep isn't inherently bad,

8
00:00:33.221 --> 00:00:38.460
that digital does allow us to
adapt to projects as we go.

9
00:00:38.460 --> 00:00:43.723
And especially if we break it into those
stages that I talked about, right?

10
00:00:43.723 --> 00:00:49.083
So the discovery, the prototype,
the build, the live between

11
00:00:49.083 --> 00:00:55.842
each of those phases is an opportunity to
take stock and to pivot your direction.

12
00:00:55.842 --> 00:01:00.780
So if you get to the end of the discovery
phase and you learn about some constraints

13
00:01:00.780 --> 00:01:04.970
on the project, that may mean
you have to change the scope.

14
00:01:04.970 --> 00:01:08.320
Or you might learn something about your
user group, which means that you wanna

15
00:01:08.320 --> 00:01:11.640
introduce some functionality you
hadn't previously considered.

16
00:01:11.640 --> 00:01:15.133
Or it may be that after the prototype
stage, you didn't test very well and so

17
00:01:15.133 --> 00:01:17.877
you need to add a different
feature that you'd missed out.

18
00:01:17.877 --> 00:01:23.250
That's fine, those are opportunities baked
into the process to do that kind of thing.

19
00:01:24.270 --> 00:01:28.838
But that's not to say that
we don't need a strategy for

20
00:01:28.838 --> 00:01:35.707
dealing with maybe the less useful scope
creep that comes in at random intervals.

21
00:01:35.707 --> 00:01:41.147
And the technique that I use is really,
really simple that I create

22
00:01:41.147 --> 00:01:46.018
a backlog of post launch work packages and
test scenarios.

23
00:01:46.018 --> 00:01:50.917
So, and again I do this in notion
because I seem to be obsessed with

24
00:01:50.917 --> 00:01:53.410
that app at the moment.

25
00:01:53.410 --> 00:01:58.788
And effectively what I'm doing is every
time somebody comes up with an idea,

26
00:01:58.788 --> 00:02:02.180
I say,
great let's move that into my backlog for

27
00:02:02.180 --> 00:02:06.336
we'll assess it once we've got
the main bulk of work done.

28
00:02:06.336 --> 00:02:11.464
And it can be involved in our
post-launch iteration phase.

29
00:02:11.464 --> 00:02:16.100
And then there'll be other occasions where
people will say, I'm not sure this works

30
00:02:16.100 --> 00:02:19.824
or that doesn't, and our responses
were let's test that, all right?

31
00:02:19.824 --> 00:02:25.128
And I use that a minute ago deny as
an excuse for us for it not to happen.

32
00:02:25.128 --> 00:02:29.698
But actually, you should actually write
down, okay, there's a test scenario that

33
00:02:29.698 --> 00:02:33.510
we need to run at a later date in order
to confirm this particular thing.

34
00:02:34.550 --> 00:02:40.202
So now, of course,
getting a client to accept that,

35
00:02:40.202 --> 00:02:46.242
it's difficult if you suddenly
drop it on them, right?

36
00:02:46.242 --> 00:02:50.411
But if you build it into the process
from the very beginning,

37
00:02:50.411 --> 00:02:53.123
you've set people's expectations.

38
00:02:53.123 --> 00:02:55.393
So if right at the beginning
when you discuss, look,

39
00:02:55.393 --> 00:02:57.366
these are the stages
we're gonna go through.

40
00:02:57.366 --> 00:03:01.230
If you discuss live, if you say that
once we go live with this website,

41
00:03:01.230 --> 00:03:05.355
that's not the end of the project,
that's not the end of the engagement,

42
00:03:05.355 --> 00:03:09.251
there is opportunity to evolve and
improve the project at that stage.

43
00:03:09.251 --> 00:03:10.505
Then, absolutely,

44
00:03:10.505 --> 00:03:15.760
is gonna be a lot easier when you start
talking about adding things that phase.

45
00:03:15.760 --> 00:03:21.190
The other thing is I'm always the one to
first come up with an idea of our scope,

46
00:03:21.190 --> 00:03:22.370
right?

47
00:03:22.370 --> 00:03:25.756
So which sounds weird, but
it actually works really well.

48
00:03:25.756 --> 00:03:29.367
Because if you're the first person
to come up with an idea of scope and

49
00:03:29.367 --> 00:03:32.667
your response to your own idea is,
we shouldn't do that now but

50
00:03:32.667 --> 00:03:35.490
we'll put it in that backlog for
post launch.

51
00:03:35.490 --> 00:03:39.530
Then you're kind of applying the rule to
yourself and not just to other people.

52
00:03:41.990 --> 00:03:44.149
And this list is brilliant.

53
00:03:44.149 --> 00:03:49.567
This is gold dust, because this is your
opportunity to actually evolve and

54
00:03:49.567 --> 00:03:52.491
improve the website after it goes live.

55
00:03:52.491 --> 00:03:56.217
And if you happen to work for
an external agency, this is a roadmap for

56
00:03:56.217 --> 00:03:57.770
ongoing work.

57
00:03:57.770 --> 00:04:00.299
And if you work in-houses,
it's justification for

58
00:04:00.299 --> 00:04:04.180
ongoing investment in this particular
product rather than getting abandoned and

59
00:04:04.180 --> 00:04:06.680
allowing it to decay over time.

60
00:04:06.680 --> 00:04:10.544
So really, having that kinda
backlog is really useful tool.

61
00:04:10.544 --> 00:04:13.323
Another little bit of advice I wanna give,
and

62
00:04:13.323 --> 00:04:16.040
again this is gonna sound
awful when I say it.

63
00:04:16.040 --> 00:04:21.372
A little bit of advise I wanna give in
terms of how to deal with comments that

64
00:04:21.372 --> 00:04:26.805
you get back and scope creep in particular
is, never say no to scope creep.

65
00:04:26.805 --> 00:04:29.843
[LAUGH] That sounds awful.

66
00:04:29.843 --> 00:04:33.303
Because you're thinking, no,
I need to say no, we can't do that,

67
00:04:33.303 --> 00:04:35.767
we don't have the budget,
we don't have time.

68
00:04:35.767 --> 00:04:37.320
It's just the word, no.

69
00:04:37.320 --> 00:04:40.150
And it's how we go about dealing with it.

70
00:04:40.150 --> 00:04:44.859
The trouble is that scope creep, sorry,

71
00:04:44.859 --> 00:04:51.189
the word no has immediately
confrontational, right?

72
00:04:51.189 --> 00:04:53.275
And probably untrue in
a lot of situations.

73
00:04:53.275 --> 00:04:58.430
I get this, I'm on the other side
of it with developers often, right?

74
00:04:58.430 --> 00:05:03.170
I love you developers, but there
are just some times when it gets tricky.

75
00:05:03.170 --> 00:05:07.080
So I'll come up with some design and
the developer turns around and says, no,

76
00:05:07.080 --> 00:05:08.040
we can't do that.

77
00:05:08.040 --> 00:05:10.483
And I know they're blatantly lying,

78
00:05:10.483 --> 00:05:15.605
because you can do anything if you've
got endless time and money, right?

79
00:05:15.605 --> 00:05:19.875
So, actually no is not correct, right?

80
00:05:19.875 --> 00:05:26.705
Instead, it's a matter of
unpacking that and saying why,

81
00:05:26.705 --> 00:05:33.271
braising those questions
around that subject, right?

82
00:05:33.271 --> 00:05:36.652
Let me give some examples and
it'd be a lot clearer.

83
00:05:36.652 --> 00:05:40.906
We could do that but it would add
an extra two months to the timeline,

84
00:05:40.906 --> 00:05:42.110
is that feasible?

85
00:05:43.120 --> 00:05:45.713
See how much better that is right?

86
00:05:45.713 --> 00:05:49.716
Or well, I estimate that cost
about an extra two grand,

87
00:05:49.716 --> 00:05:52.022
do you have the budget for that?

88
00:05:53.956 --> 00:05:57.377
Or okay, that's great,
we can definitely do that,

89
00:05:57.377 --> 00:06:00.655
what feature are we gonna
drop to make that happen?

90
00:06:03.100 --> 00:06:06.149
Or would you prefer to deal
with this post-launch or

91
00:06:06.149 --> 00:06:08.378
do we wanna push back the launch date?

92
00:06:08.378 --> 00:06:09.370
It's another really good one.

93
00:06:13.319 --> 00:06:17.321
I think I'll probably need to see
the business case to justify that,

94
00:06:17.321 --> 00:06:21.326
is that something you mind putting
that together so I can have a look?

95
00:06:21.326 --> 00:06:25.078
Makes such a difference how you word it,
and you word it as a question.

96
00:06:25.078 --> 00:06:27.851
The one I particularly
like out of that is,

97
00:06:27.851 --> 00:06:33.110
would you prefer to deal with this
post-launch or push back the launch date?

98
00:06:33.110 --> 00:06:37.532
This is actually a parenting technique
that I learned [LAUGH], right?

99
00:06:37.532 --> 00:06:42.830
If you want your child to eat vegetables,
right,

100
00:06:42.830 --> 00:06:48.000
if you say to them,
you have to eat your carrots,

101
00:06:48.000 --> 00:06:51.450
they will say no, right?

102
00:06:51.450 --> 00:06:56.211
But if you say would you like carrots or
broccoli, right?

103
00:06:56.211 --> 00:06:59.927
They'll pick one out of those two choices,
okay?

104
00:06:59.927 --> 00:07:02.541
And that's exactly what I've
done with that question,

105
00:07:02.541 --> 00:07:05.382
would you prefer to deal with
it post-launch or now, right?

106
00:07:06.680 --> 00:07:11.149
So think about how you're handling
those conversations and interactions.

107
00:07:11.149 --> 00:07:15.028
And think about the words you use, because
they make an enormous difference to

108
00:07:15.028 --> 00:07:18.318
whether or not you're gonna be able
to deal with your scope creep,

109
00:07:18.318 --> 00:07:21.170
whether you're gonna be able
to do your feedback, etc.

