WEBVTT

1
00:00:00.000 --> 00:00:05.966
This is a bit of a weird catch-all section
that I've created at the end of this for

2
00:00:05.966 --> 00:00:12.132
what happens after the prototyping stage,
right, once you've done the design.

3
00:00:12.132 --> 00:00:15.239
Basically, I outlined those stages,
didn't I?

4
00:00:15.239 --> 00:00:19.080
Discovery phase, prototyping,
build, and live, right?

5
00:00:19.080 --> 00:00:22.852
Basically, most of the heavy
lifting in the design for

6
00:00:22.852 --> 00:00:27.365
the designer happens in the discovery
phase in the prototyping.

7
00:00:27.365 --> 00:00:31.216
Once it gets into build and
live, our role changes, right?

8
00:00:31.216 --> 00:00:33.661
But that doesn't mean it goes away.

9
00:00:33.661 --> 00:00:39.104
And actually, there's important work
that needs to be done in the build and

10
00:00:39.104 --> 00:00:43.369
the go live, where it's really
important to get it right.

11
00:00:43.369 --> 00:00:48.333
Because if we don't get it right,
the website A won't look like what we

12
00:00:48.333 --> 00:00:53.299
agreed it would look like with
the clients, which can cause problems,

13
00:00:53.299 --> 00:00:55.139
and B will underperform.

14
00:00:55.139 --> 00:00:58.379
And C probably never
reach its full potential,

15
00:00:58.379 --> 00:01:04.054
because a website never reaches its full
potential on the day it goes live, right?

16
00:01:04.054 --> 00:01:06.576
There will always be
things that can improve.

17
00:01:06.576 --> 00:01:10.262
So it's that kinda stuff that I
wanna get to in this final session.

18
00:01:10.262 --> 00:01:14.300
So let's start off by talking
about working with developers.

19
00:01:14.300 --> 00:01:19.942
Now, by far, the majority of you that are
listening to this are either developers or

20
00:01:19.942 --> 00:01:22.336
do the development and the design.

21
00:01:22.336 --> 00:01:27.440
So you working by yourself
makes life a lot easier.

22
00:01:27.440 --> 00:01:32.466
But I think it is really important
to stress the working relationship

23
00:01:32.466 --> 00:01:36.983
between a designer and
a developer is incredibly important.

24
00:01:36.983 --> 00:01:40.841
And yet these days with
the way the industry's gone,

25
00:01:40.841 --> 00:01:45.051
it's becoming increasingly
abstract from one another.

26
00:01:45.051 --> 00:01:49.904
So too often, it's less of a problem in
an agency and freelancer environment.

27
00:01:49.904 --> 00:01:54.941
Because either the Jack of all trades that
are doing both development and design,

28
00:01:54.941 --> 00:01:59.906
or, alternatively, they're in relatively
small teams where the designer and

29
00:01:59.906 --> 00:02:01.890
the developer sit side by side.

30
00:02:01.890 --> 00:02:07.521
But in larger organizations, it's like
they live in two separate worlds often.

31
00:02:07.521 --> 00:02:08.992
I don't know what it's like with you guys.

32
00:02:08.992 --> 00:02:13.414
But typically, the developers don't
even report into the same department as

33
00:02:13.414 --> 00:02:14.963
the designers sometimes.

34
00:02:14.963 --> 00:02:19.549
And there's not necessarily a lot of
interaction going between the two.

35
00:02:19.549 --> 00:02:25.987
But I would say that the fundamental
link there between the designer and

36
00:02:25.987 --> 00:02:30.287
the developer is probably,
it's a three way.

37
00:02:30.287 --> 00:02:32.043
That could have been worded better,
couldn't it?

38
00:02:32.043 --> 00:02:37.069
It's the relationship between the designer
and the content specialist and

39
00:02:37.069 --> 00:02:41.636
the designer and the developer,
are the key relationships in this.

40
00:02:41.636 --> 00:02:45.574
And so ideally,
you wanna be sitting beside

41
00:02:45.574 --> 00:02:49.519
the developer as you do the design, right?

42
00:02:49.519 --> 00:02:51.050
I know that doesn't always happen.

43
00:02:51.050 --> 00:02:54.673
So the next best thing is you've
gotta involve that developer a lot.

44
00:02:54.673 --> 00:02:59.351
Show them sketches, show them wireframes,
show them everything as you go along.

45
00:02:59.351 --> 00:03:04.084
Involve them in the conversation,
because they will have all

46
00:03:04.084 --> 00:03:09.089
kinds of feedback that they can
give on things like performance,

47
00:03:09.089 --> 00:03:13.560
on things like security,
on things like interactivity.

48
00:03:13.560 --> 00:03:16.594
Increasingly these days,
I'm going to developers and

49
00:03:16.594 --> 00:03:20.079
coming up with some idea about
animation or interactivity, and

50
00:03:20.079 --> 00:03:23.841
developers are looking at me going,
well, that's a bit 2000.

51
00:03:23.841 --> 00:03:28.860
[LAUGH] These days, we can do this,
and it's amazing and wonderful.

52
00:03:28.860 --> 00:03:30.880
So that kind of relationship
is really important.

53
00:03:30.880 --> 00:03:34.876
I've overwrite the point,
but there you go.

54
00:03:34.876 --> 00:03:36.897
I will also repeat what I said earlier,

55
00:03:36.897 --> 00:03:39.601
don't forget to design with
the developer in mind.

56
00:03:39.601 --> 00:03:43.286
So create components that
the developer can reuse.

57
00:03:43.286 --> 00:03:47.901
So when you're working in Figma and
you're doing navigation and headers and

58
00:03:47.901 --> 00:03:50.316
footers and cards and things like that.

59
00:03:50.316 --> 00:03:54.740
Don't just build them individually on each
page, but use the component function, so

60
00:03:54.740 --> 00:03:58.194
that a developer can easily see
that that's a reusable component,

61
00:03:58.194 --> 00:04:00.030
it's reused over multiple pages.

62
00:04:00.030 --> 00:04:04.937
Design using the auto-layout
function I mentioned in Figma.

63
00:04:04.937 --> 00:04:08.063
It very closely replicates
the CSS box model,

64
00:04:08.063 --> 00:04:11.923
which makes life a lot easier,
again, for developers.

65
00:04:11.923 --> 00:04:13.736
Make use of the color and

66
00:04:13.736 --> 00:04:18.640
typography styles to ensure
consistency across your designs.

67
00:04:18.640 --> 00:04:23.475
Create all those states, think about
button states, linked states, form states,

68
00:04:23.475 --> 00:04:26.847
all of these things you need to
get into with the developer.

69
00:04:26.847 --> 00:04:30.402
And error messaging is another
really big one to get into

70
00:04:30.402 --> 00:04:32.980
when you're working with developers.

71
00:04:32.980 --> 00:04:37.914
And then when it comes to breakpoints,
consider your responsive breakpoints.

72
00:04:37.914 --> 00:04:42.975
We've fallen into this bad habit,
I think, at the moment,

73
00:04:42.975 --> 00:04:49.324
when it comes to responsive design,
where it seems to be the standard rule,

74
00:04:49.324 --> 00:04:53.711
you do a desktop version and
you do a mobile version.

75
00:04:53.711 --> 00:05:00.042
Maybe if you got loads of time and money,
you do a tablet version in between.

76
00:05:00.042 --> 00:05:03.866
But those are completely arbitrary things,
right?

77
00:05:03.866 --> 00:05:05.615
There is no mobile size.

78
00:05:05.615 --> 00:05:08.532
There is no desktop size.

79
00:05:08.532 --> 00:05:12.629
So I would encourage you instead of
thinking in terms of just mobile and

80
00:05:12.629 --> 00:05:17.500
desktop, actually design your breakpoints
around the content, not the device.

81
00:05:17.500 --> 00:05:22.471
So that as you're creating your design,
again, with Figma and things,

82
00:05:22.471 --> 00:05:25.691
you can actually make
your design responsive.

83
00:05:25.691 --> 00:05:29.640
So the only points where
you need a breakpoint and

84
00:05:29.640 --> 00:05:34.455
a separate version is where
the design kind of falls apart,

85
00:05:34.455 --> 00:05:38.610
because the line lights are too small or
whatever.

86
00:05:38.610 --> 00:05:43.346
So I just break it wherever is the natural
place to break rather than at any

87
00:05:43.346 --> 00:05:44.754
particular device.

88
00:05:44.754 --> 00:05:50.366
And also, make sure your developers are
comfortable with these design tools and

89
00:05:50.366 --> 00:05:53.184
understand all of their capabilities.

90
00:05:53.184 --> 00:05:57.431
I was working with a developer recently,
and I just made a throwaway comment.

91
00:05:57.431 --> 00:06:01.735
And of course,
this is the inspect view for you in Figma.

92
00:06:01.735 --> 00:06:06.453
And he was like, [SOUND] I blew his mind,
cuz he just hadn't used Figma before,

93
00:06:06.453 --> 00:06:08.970
which why should he, he's a developer.

94
00:06:08.970 --> 00:06:13.240
And yet, it will give you loads
of information, loads of CSS.

95
00:06:13.240 --> 00:06:15.547
I'm not saying you use
exactly the CSS in there,

96
00:06:15.547 --> 00:06:19.100
but it's quick access to all the
information that you need as a developer.

97
00:06:19.100 --> 00:06:23.415
So yeah, just build and
nurture that relationship.

98
00:06:23.415 --> 00:06:27.518
Use tools that help each other and
support each other, and

99
00:06:27.518 --> 00:06:31.548
don't think,
that's the developer's problem.

100
00:06:31.548 --> 00:06:35.599
I'm speaking to the converted here,
but it's worth saying.

101
00:06:35.599 --> 00:06:38.620
If for no other reason,
you can just edit this bit out and

102
00:06:38.620 --> 00:06:40.111
send it to your designers.

103
00:06:43.406 --> 00:06:47.554
The other thing I would say when it
comes to that working relationship and

104
00:06:47.554 --> 00:06:50.282
when you get into the build,
is to be flexible.

105
00:06:50.282 --> 00:06:54.062
I come across a lot of designers,
especially designers that came

106
00:06:54.062 --> 00:06:58.943
originally from a print background, that
are obsessed with perfect pixel design,

107
00:06:58.943 --> 00:07:01.296
which is just not very feasible online.

108
00:07:01.296 --> 00:07:07.203
But in particular, I think even with more
educated designers, they often make some

109
00:07:07.203 --> 00:07:12.776
bad decisions that if there had been
a proper conversation with the developer,

110
00:07:12.776 --> 00:07:17.780
could have been avoided,
especially around the area of performance.

111
00:07:17.780 --> 00:07:19.346
So I see a lot of designers,

112
00:07:19.346 --> 00:07:22.494
they get carried away with
their use of fonts, right?

113
00:07:22.494 --> 00:07:26.275
Fonts are a big drain on performance.

114
00:07:26.275 --> 00:07:30.765
They get pretty big, unless you're using
variable fonts where, which by the way,

115
00:07:30.765 --> 00:07:35.079
if you haven't checked out variable fonts
as a designer, you really should do.

116
00:07:35.079 --> 00:07:39.796
Really, you wanna be avoiding
using any more than two fonts.

117
00:07:39.796 --> 00:07:44.638
And you wanna limit the number of font
variations, weights that you use,

118
00:07:44.638 --> 00:07:49.260
because it all build up and
really starts having a hit on performance.

119
00:07:49.260 --> 00:07:51.161
While I'm going through these,
I'm really interested,

120
00:07:51.161 --> 00:07:53.607
cuz I know there are developers in
the room and there's developers on chat.

121
00:07:53.607 --> 00:07:57.598
So if there are any other messages
you could send to designers,

122
00:07:57.598 --> 00:08:00.170
I'd love to hear it in the chat, right?

123
00:08:00.170 --> 00:08:01.716
What other things do they need to know?

124
00:08:01.716 --> 00:08:04.344
So fonts is one thing that I often.

125
00:08:04.344 --> 00:08:07.190
Images is another when
it comes to performance.

126
00:08:07.190 --> 00:08:13.036
Designers love to add imagery
that has no value, right?

127
00:08:13.036 --> 00:08:15.232
It's purely decorative, right?

128
00:08:15.232 --> 00:08:17.212
The page is looking a bit boring.

129
00:08:17.212 --> 00:08:20.420
Let's put in a stock photograph
of two people shaking hands.

130
00:08:20.420 --> 00:08:22.824
It's like, why?

131
00:08:22.824 --> 00:08:27.530
It's like using bandwidth for no reason,
and provides no value whatsoever.

132
00:08:27.530 --> 00:08:31.322
So we need to kind of avoid that thing.

133
00:08:31.322 --> 00:08:35.543
And understand images better, I think
a lot of designers are really poor in

134
00:08:35.543 --> 00:08:38.897
understanding the medium in
which they operate on the Web.

135
00:08:38.897 --> 00:08:43.498
So the fact that some images compress
better than others, that kind of thing.

136
00:08:43.498 --> 00:08:48.260
As designers, I think we've got
a responsibility to understand that

137
00:08:48.260 --> 00:08:50.691
kind of thing and not just go [LAUGH].

138
00:08:50.691 --> 00:08:53.921
I think there's this thing that
performance is developers' problem.

139
00:08:53.921 --> 00:08:59.591
But if you give them a design which
has got massive hero images and

140
00:08:59.591 --> 00:09:04.737
video backgrounds and fonts and
all of this kind of stuff,

141
00:09:04.737 --> 00:09:07.587
they can't perform miracles.

142
00:09:07.587 --> 00:09:09.340
And JavaScript is the final thing.

143
00:09:09.340 --> 00:09:14.099
I mean, there's nothing wrong with
JavaScript, don't get me wrong,

144
00:09:14.099 --> 00:09:15.198
don't hate me.

145
00:09:15.198 --> 00:09:20.358
But as you add interactive elements into a
design and add design delighters, so nice

146
00:09:20.358 --> 00:09:25.823
animations and that kind of thing, really,
really good, but they can cause problems.

147
00:09:25.823 --> 00:09:29.735
JavaScript, in my experience, can cause
problems, especially on mobile devices,

148
00:09:29.735 --> 00:09:32.428
less powerful devices,
they don't always run very well.

149
00:09:32.428 --> 00:09:36.569
So if you're gonna use JavaScript,
use it, in my opinion, at least,

150
00:09:36.569 --> 00:09:40.515
to progressively enhance the design
rather than as a requirement.

151
00:09:40.515 --> 00:09:43.854
But I know that that proves
somewhat controversial.

152
00:09:43.854 --> 00:09:47.416
So has anybody got any kind
of other things designer,

153
00:09:47.416 --> 00:09:49.405
developer conflict points?

154
00:09:49.405 --> 00:09:51.359
Has anybody posted anything into chat?

155
00:09:54.595 --> 00:10:00.835
&gt;&gt; No, one person said, I thought
the design process started in Figma.

156
00:10:00.835 --> 00:10:03.613
I'm glad I saw this workshop
early in my programming career.

157
00:10:03.613 --> 00:10:04.823
&gt;&gt; Yeah.
&gt;&gt; See you.

158
00:10:04.823 --> 00:10:06.600
&gt;&gt; It needs to end in Figma.

159
00:10:06.600 --> 00:10:10.836
Well, no, even Figma is only in the middle
part of it, because I would ask you,

160
00:10:10.836 --> 00:10:14.843
after you finish in Figma, you're
then moving into the browser, right?

161
00:10:14.843 --> 00:10:20.743
In fact, as somebody who is very old and
old school in this,

162
00:10:20.743 --> 00:10:28.536
I will actually sometimes just skip Figma
entirely and code it in the browser.

163
00:10:28.536 --> 00:10:34.477
This gets into the, should designers
know how to code debate, right?

164
00:10:34.477 --> 00:10:39.089
I believe fundamentally that any designer,
any artist,

165
00:10:39.089 --> 00:10:44.373
whatever, needs to understand
the medium in which they operate.

166
00:10:44.373 --> 00:10:48.072
And that doesn't mean they're ever gonna
code like a developer can code, and

167
00:10:48.072 --> 00:10:51.614
neither should they, they shouldn't
be doing production-ready code.

168
00:10:51.614 --> 00:10:55.355
But you do need to understand
the fundamentals of the medium that you

169
00:10:55.355 --> 00:10:55.886
work in.

170
00:10:55.886 --> 00:11:00.774
And I think that's why I actually
quite like designing in the browser,

171
00:11:00.774 --> 00:11:02.821
because I know it works then.

172
00:11:02.821 --> 00:11:05.543
I know that that is how
the browser behaves.

173
00:11:05.543 --> 00:11:10.047
And although Figma and Sketch and
these kinds of tools are making leaps and

174
00:11:10.047 --> 00:11:14.045
bounds in terms of replicating
the browser-based experience,

175
00:11:14.045 --> 00:11:17.699
they're still not quite there,
it's not quite the same.

176
00:11:17.699 --> 00:11:21.679
So there is something to be
said from actually, yeah, okay,

177
00:11:21.679 --> 00:11:24.968
do Figma to a certain degree,
but then take it on and

178
00:11:24.968 --> 00:11:29.350
go on to then refine that in the browser
and take it to the next level.

179
00:11:29.350 --> 00:11:33.030
So don't see your Figma
files as written in stone.

180
00:11:33.030 --> 00:11:35.512
They are just a step
on the design journey.

181
00:11:38.060 --> 00:11:43.805
Right, Let's talk about
one area in particular,

182
00:11:43.805 --> 00:11:47.743
which is called design delighters,
cuz this is a tricky one, right?

183
00:11:47.743 --> 00:11:54.140
So first of all, let me define
what I mean by design delighter,

184
00:11:54.140 --> 00:11:58.258
right, cuz it's a bit of a made up term.

185
00:11:58.258 --> 00:12:02.899
A design delighter is an interactive or
visual element that although not necessary

186
00:12:02.899 --> 00:12:06.292
for the site, enhances
the experience in some way, right?

187
00:12:06.292 --> 00:12:10.096
So a design delighter
might be an animation or

188
00:12:10.096 --> 00:12:14.000
something along those lines, kind of, yes,

189
00:12:14.000 --> 00:12:20.120
you could configure your product
through a form with a drop-down menu.

190
00:12:20.120 --> 00:12:24.864
But it would be much better if it
was an interactive wizard that

191
00:12:24.864 --> 00:12:26.789
you kind of played with.

192
00:12:26.789 --> 00:12:29.658
So there are things like this.

193
00:12:29.658 --> 00:12:32.326
Now, these are really useful components,
and

194
00:12:32.326 --> 00:12:34.603
there are all kinds of examples of them.

195
00:12:34.603 --> 00:12:38.815
So accordions, animation, carousels,

196
00:12:38.815 --> 00:12:44.782
interactive guides, wizards,
and configuration tools,

197
00:12:44.782 --> 00:12:49.931
all of these,
I would define as design delighters.

198
00:12:49.931 --> 00:12:52.744
And a design delighter is
not strictly necessary, but

199
00:12:52.744 --> 00:12:54.775
it makes a big difference to a website.

200
00:12:54.775 --> 00:12:59.277
And so the way that I tend to approach
those as I do design and as I work on

201
00:12:59.277 --> 00:13:04.245
design projects is to think of those,
I set aside a certain amount of time and

202
00:13:04.245 --> 00:13:08.770
a certain amount of budget to do
specifically those things, right?

203
00:13:08.770 --> 00:13:13.811
So I design the experience as if it's
not reliant on those things, and

204
00:13:13.811 --> 00:13:18.682
then we add those as an extra layer
on top, progressively enhance or

205
00:13:18.682 --> 00:13:22.632
improve the application
using these kinds of things.

206
00:13:22.632 --> 00:13:26.500
And the reason that I take that
approach is because I think

207
00:13:26.500 --> 00:13:31.416
creating design delighters works best
when it's done very much in close

208
00:13:31.416 --> 00:13:33.936
collaboration with the developer.

209
00:13:33.936 --> 00:13:39.406
A developer is gonna have a much
better idea as what is possible and

210
00:13:39.406 --> 00:13:42.794
what will fit within the budget, okay?

211
00:13:42.794 --> 00:13:48.294
So the design delighters I tend to
leave until I'm in the build phase,

212
00:13:48.294 --> 00:13:53.343
so that I can do those in close
relationship with the developer.

213
00:13:53.343 --> 00:13:57.038
So there's a whole load
of stuff about working

214
00:13:57.038 --> 00:13:59.983
with developers in the build stage.

215
00:13:59.983 --> 00:14:04.899
But there is one final message that
I did briefly mention before, but

216
00:14:04.899 --> 00:14:09.323
I'm now gonna say in very big
letters on a bright background.

217
00:14:09.323 --> 00:14:13.413
Which is,
never ever show a design to a client or

218
00:14:13.413 --> 00:14:19.565
a stakeholder that you have not first
shown to your developer, right?

219
00:14:19.565 --> 00:14:22.768
I see people make this
mistake all the time and

220
00:14:22.768 --> 00:14:25.810
you get yourself caught in a trap, right?

221
00:14:25.810 --> 00:14:29.413
You present and
sell an idea to stakeholders and

222
00:14:29.413 --> 00:14:32.398
clients that can't be built, right?

223
00:14:32.398 --> 00:14:37.391
That isn't gonna fit in the budget,
isn't fitting in the timescales.

224
00:14:37.391 --> 00:14:39.941
Show it to your developer first,

225
00:14:39.941 --> 00:14:44.870
make sure that they get a chance to go,
you really wanna do that?

226
00:14:44.870 --> 00:14:50.502
If we do that, we're gonna have to change
our architecture or whatever it involves.

227
00:14:50.502 --> 00:14:52.875
Those conversations need to happen and
are really important.

228
00:14:52.875 --> 00:14:58.075
And while I'm on ranting, right,
one more thing just to throw into the mix,

229
00:14:58.075 --> 00:15:00.960
let go of pixel perfect control of design.

230
00:15:00.960 --> 00:15:05.993
That's another thing that too many
designers seem to be hung up on,

231
00:15:05.993 --> 00:15:08.213
and it just isn't relevant.

232
00:15:08.213 --> 00:15:12.491
A developer isn't gonna be able to
reproduce your design exactly as you

233
00:15:12.491 --> 00:15:13.428
envisaged it.

234
00:15:13.428 --> 00:15:16.760
The web doesn't work like that,
get over it.

235
00:15:16.760 --> 00:15:20.351
So basically what I'm saying is
this is a collaboration, right?

236
00:15:20.351 --> 00:15:23.730
The final design is a collaboration
between the developer and the design and

237
00:15:23.730 --> 00:15:26.120
the content person and
various other people as well.

238
00:15:26.120 --> 00:15:29.490
But you don't own the design, right?

239
00:15:29.490 --> 00:15:31.763
And I think it's important
to recognize that.

240
00:15:31.763 --> 00:15:35.500
The final design is really a collaboration
between design and development.

241
00:15:35.500 --> 00:15:36.371
And that's great.

242
00:15:36.371 --> 00:15:39.915
If you're someone that does both
the design and the development,

243
00:15:39.915 --> 00:15:42.825
that puts you in a uniquely good position,
I believe,

244
00:15:42.825 --> 00:15:47.090
to produce an outstanding experience,
cuz you understand the whole picture.

245
00:15:47.090 --> 00:15:51.965
Now, obviously, it's hard to be both
an expert in design and development,

246
00:15:51.965 --> 00:15:53.916
and I don't think you will be.

247
00:15:53.916 --> 00:16:01.911
But there is an advantage in being a
generalist as well, so don't regret that.

248
00:16:01.911 --> 00:16:03.773
And that means that you need to involve
the developer early in the process.

249
00:16:03.773 --> 00:16:06.718
And you need to be, as the designer,

250
00:16:06.718 --> 00:16:11.857
available to collaborate with
the developer during the build.

251
00:16:11.857 --> 00:16:13.970
You can't just disappear
on to other things.

