WEBVTT

1
00:00:00.120 --> 00:00:01.640
&gt;&gt; Burke Holland: So
while that's happening,

2
00:00:01.640 --> 00:00:03.460
let's take a look at some
of these other files here.

3
00:00:05.070 --> 00:00:08.360
There is a docker-compose file,
let's talk about that for a second.

4
00:00:08.360 --> 00:00:13.440
This is a compose file, so how does the
compose file relate to our docker file?

5
00:00:13.440 --> 00:00:16.980
What compose file does is it allows
you to specify multiple images, and

6
00:00:16.980 --> 00:00:18.690
then link them together.

7
00:00:18.690 --> 00:00:22.840
So let's imagine if you would for
a second that we want to have MongoDB.

8
00:00:22.840 --> 00:00:26.390
And we wanna deploy MongoDB
as part of our container.

9
00:00:26.390 --> 00:00:29.389
One way we could do that is to
just add another container,

10
00:00:29.389 --> 00:00:32.460
and link those two containers
together in the same image.

11
00:00:32.460 --> 00:00:37.880
So to do that, what we're gonna do is come
down and do a new service called mongo.

12
00:00:37.880 --> 00:00:42.690
And inside of it, we're gonna specify
an image, and we're gonna call that mongo.

13
00:00:42.690 --> 00:00:47.939
And then in order to make these two
containers so they can talk to each other,

14
00:00:47.939 --> 00:00:52.680
we're gonna add a links, and
we're gonna link this with mongo.

15
00:00:52.680 --> 00:00:54.411
So I'm gonna save this.

16
00:00:54.411 --> 00:00:59.359
And now what we wanna do is recreate our
image with docker-compose cuz we've got

17
00:00:59.359 --> 00:01:03.870
multiple containers now that are gonna
be spun up from one image file, and

18
00:01:03.870 --> 00:01:06.685
those two containers
can talk to each other.

19
00:01:06.685 --> 00:01:09.470
So now our app can talk
to our MongoDB container.

20
00:01:09.470 --> 00:01:15.385
So let's do this docker, and we're
gonna say compose up, and we gonna say,

21
00:01:15.385 --> 00:01:20.738
this folder, pick the compose file
&gt;&gt; Burke Holland: And

22
00:01:20.738 --> 00:01:27.426
it's gonna start building, and
port 3000's already allocated.

23
00:01:27.426 --> 00:01:31.949
But if we go over to our docker extension,
look at this,

24
00:01:31.949 --> 00:01:36.345
we have a mongo container and
it's running, okay?

25
00:01:36.345 --> 00:01:38.995
So if we were to deploy
this image to the cloud,

26
00:01:38.995 --> 00:01:42.985
what would happen is, the cloud would
pull it in, spin up two containers, and

27
00:01:42.985 --> 00:01:47.675
we now deployed our app and
our database in one go, boom!

28
00:01:47.675 --> 00:01:51.035
And you know it's gonna work
because it works on my machine

29
00:01:51.035 --> 00:01:53.461
provided something isn't
already running on port 3000.

