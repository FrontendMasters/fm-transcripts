WEBVTT

1
00:00:00.350 --> 00:00:04.810
&gt;&gt; Speaker 1: If you transpile your code,
this type of thing would still work?

2
00:00:04.810 --> 00:00:07.550
&gt;&gt; Burke Holland: Yes.
So, that's a good question.

3
00:00:07.550 --> 00:00:08.770
Yes, it will.

4
00:00:08.770 --> 00:00:13.580
You mean, in terms of bright points and
things like that if you transpile?

5
00:00:13.580 --> 00:00:17.270
Well, no, because your break points
are around the line number, and

6
00:00:17.270 --> 00:00:20.680
your your transposition
is gonna change that.

7
00:00:20.680 --> 00:00:26.050
So if you're transpiling, and you're not
debugging via source map back to, in other

8
00:00:26.050 --> 00:00:29.270
words, if you were in the index file, and
that's where you put your breakpoint and

9
00:00:29.270 --> 00:00:33.430
then you changed the TypeScript,
and saved, and it changed the file.

10
00:00:33.430 --> 00:00:37.225
Then the breakpoint's now not on the same
line anymore, so it's not gonna work.

11
00:00:37.225 --> 00:00:38.890
Now, here's what you can do.

12
00:00:38.890 --> 00:00:44.414
In the case of the express application,
&gt;&gt; Burke Holland: Let me do this again,

13
00:00:44.414 --> 00:00:46.450
I'll show you what happens here.

14
00:00:46.450 --> 00:00:48.800
Let's start this,
this thing's running, cool.

15
00:00:48.800 --> 00:00:53.670
So now I'm a developer,
[COUGH] I got my Cheetos and

16
00:00:53.670 --> 00:00:57.070
my Coke and I'm gonna come over
here to I mean, that's what I eat.

17
00:00:57.070 --> 00:01:00.070
And then I'm gonna come over here in the
index file, and I'm gonna do something.

18
00:01:00.070 --> 00:01:04.140
I'm gonna, you know what,
I need to go ahead and console.log this.

19
00:01:04.140 --> 00:01:06.550
Even though I know about log points,
I just don't have time for it.

20
00:01:06.550 --> 00:01:07.700
So I'm just gonna log out the color.

21
00:01:07.700 --> 00:01:09.410
Let's go ahead and save that.

22
00:01:09.410 --> 00:01:14.560
Let's go ahead and change this, change
the color, good, yep, hit the breakpoint.

23
00:01:14.560 --> 00:01:18.358
And then, let's go ahead and
look it our debug console to see my,

24
00:01:18.358 --> 00:01:23.210
it's not there.

25
00:01:23.210 --> 00:01:24.056
Why isn't it there?

26
00:01:24.056 --> 00:01:26.898
Anybody know?

27
00:01:26.898 --> 00:01:31.040
It's because in order for

28
00:01:31.040 --> 00:01:35.920
it to pick up the changes, we have to
stop the application and then restart

29
00:01:35.920 --> 00:01:40.300
the application because it's a node app,
that is a pain, you do not wanna do that.

30
00:01:40.300 --> 00:01:43.090
So we give you a tip on
how to get around that.

31
00:01:43.090 --> 00:01:46.160
You can install something called nodemon.

32
00:01:46.160 --> 00:01:49.600
It's called nodemon,
which I think is short for node monitor.

33
00:01:49.600 --> 00:01:52.990
And then Visual Studio code will
automatically pick up that you have that

34
00:01:52.990 --> 00:01:56.470
and it will give you the opportunity
to use it in your launch config.

35
00:01:56.470 --> 00:01:59.580
So let me come over here and
show you what that looks like.

36
00:02:00.810 --> 00:02:03.960
This is not actually answering the
question, but it is answering the question

37
00:02:03.960 --> 00:02:07.050
of what happens when your code
changes can a debugger still works.

38
00:02:07.050 --> 00:02:09.100
I'm gonna show you how to do that
with at least the node part.

39
00:02:10.260 --> 00:02:11.870
So here we have a node.

40
00:02:12.990 --> 00:02:14.680
Let's add a new configuration up here.

41
00:02:14.680 --> 00:02:18.479
So I'm gonna do add configuration and
if you go down you'll see,

42
00:02:19.880 --> 00:02:25.380
let's see here nodemon setup right
here you see it some a click that

43
00:02:25.380 --> 00:02:28.750
you have to have nodemon installed,
which is an NPM package.

44
00:02:30.880 --> 00:02:34.930
&gt;&gt; Speaker 3: Is there also
a configuration for currently?

45
00:02:39.242 --> 00:02:41.400
&gt;&gt; Burke Holland: Let's see.

46
00:02:41.400 --> 00:02:46.070
&gt;&gt; Speaker 3: And do you see any problems
with concurrently messing with the debug

47
00:02:46.070 --> 00:02:51.460
on the running debug on both
the server and the front end?

48
00:02:51.460 --> 00:02:54.690
&gt;&gt; Burke Holland: To
concurrently run the process?

49
00:02:54.690 --> 00:02:57.090
Well, remember it when
you run concurrently,

50
00:02:57.090 --> 00:02:58.870
you're gonna run it from NPM start.

51
00:02:58.870 --> 00:03:02.950
So in that case, you're not using the
debugger to launch, you're just attaching.

52
00:03:02.950 --> 00:03:06.400
So you would be attaching your
processes that are all ready running or

53
00:03:06.400 --> 00:03:09.920
in the case of Chrome, you always
have to open that additional window.

54
00:03:09.920 --> 00:03:14.235
But if you use concurrently to launch
a node process, then you can go ahead and,

55
00:03:14.235 --> 00:03:15.220
Launch.

56
00:03:15.220 --> 00:03:17.400
Attach to that, yeah.

57
00:03:17.400 --> 00:03:22.400
But well, disconnect here is that
oftentimes you have to start your

58
00:03:22.400 --> 00:03:26.230
apps with NPM start, and
then you have to launch the debugger.

59
00:03:26.230 --> 00:03:29.520
Which launches debug
instances of those things.

60
00:03:29.520 --> 00:03:31.330
In other words, in order to debug Chrome,

61
00:03:31.330 --> 00:03:33.780
you have to launch Chrome
with a debug flag.

62
00:03:33.780 --> 00:03:37.410
In order to debug node, you have to
launch node with the debug flag.

63
00:03:37.410 --> 00:03:40.830
So what you would do is you'd launch with
concurrently then you'd come over and

64
00:03:40.830 --> 00:03:42.340
create a launch config, and

65
00:03:42.340 --> 00:03:45.980
you would hit start, and
it would create debug instances of that.

66
00:03:49.100 --> 00:03:51.440
So a little bit of a disconnect there,

67
00:03:51.440 --> 00:03:53.940
but the problem is you have to get
those things in to debug mode.

68
00:03:53.940 --> 00:03:56.760
You have to pass,
now if you did concurrently and

69
00:03:56.760 --> 00:04:00.760
it has like an inspect flag that you could
pass to it for node then you could just

70
00:04:00.760 --> 00:04:05.870
attach the debugger process
instead of launching it.

71
00:04:05.870 --> 00:04:09.096
So up here, let me add,
I'm going to add nodemon real quick.

72
00:04:10.741 --> 00:04:15.900
&gt;&gt; Burke Holland: So you can see how this
works, and it's got lots of options.

73
00:04:17.340 --> 00:04:19.910
Lets take this out, let's move this up.

74
00:04:19.910 --> 00:04:21.188
How do we move things?

75
00:04:21.188 --> 00:04:27.110
Option, up arrow, yes, no,
was that whole section a waste, all right.

76
00:04:27.110 --> 00:04:28.160
[LAUGH].

77
00:04:28.160 --> 00:04:33.220
Let's pull this out, and
then we want server,

78
00:04:33.220 --> 00:04:36.800
server slash, learn to type,

79
00:04:36.800 --> 00:04:40.990
server slash server dot JS and
see we've got, we're going to use nodemon.

80
00:04:40.990 --> 00:04:43.890
Remember, I said nodemon is a,
you install it for a NPM, so

81
00:04:43.890 --> 00:04:47.380
you do NPM install, nodemon.

82
00:04:47.380 --> 00:04:48.790
Nodemon like this.

83
00:04:48.790 --> 00:04:50.140
And you'd probably do it globally.

84
00:04:50.140 --> 00:04:51.170
This launch config.

85
00:04:51.170 --> 00:04:54.160
So let's Run this now.

86
00:04:54.160 --> 00:04:55.790
We need to change, what did I call this?

87
00:04:55.790 --> 00:04:58.800
This is called nodemon,
let's change it back to launch server.

88
00:04:58.800 --> 00:05:02.320
VS quotes complaining about that,
this doesn't exist.

89
00:05:02.320 --> 00:05:02.918
It does now.

90
00:05:02.918 --> 00:05:06.266
Update yourself.

91
00:05:06.266 --> 00:05:09.215
All right, and
then let's launch the whole darn app.

92
00:05:11.598 --> 00:05:14.028
&gt;&gt; Burke Holland: So
there's the front end.

93
00:05:14.028 --> 00:05:18.510
This looks like the back end running here.

94
00:05:18.510 --> 00:05:23.240
So now we can come back and we can say, so
for instance, if we change the color here,

95
00:05:23.240 --> 00:05:27.630
we should actually see this now in the,
yep, it's right there,

96
00:05:27.630 --> 00:05:28.480
it's being logged out.

97
00:05:28.480 --> 00:05:31.880
So let's come back and say, okay,
I don't wanna see that anymore.

98
00:05:31.880 --> 00:05:35.880
So I'm gonna go ahead and
let's clear out some real estate here.

99
00:05:37.510 --> 00:05:41.850
Let's say I need more information
here I'm like the color is

100
00:05:41.850 --> 00:05:46.690
a little bit of string interpolation.

101
00:05:46.690 --> 00:05:48.580
And now I've saved it and
if you notice, but

102
00:05:48.580 --> 00:05:53.390
up in the top it very briefly blanked
because it killed the node process,

103
00:05:53.390 --> 00:05:57.860
restarted it and reattach the debugger
all with me just clicking save.

104
00:05:57.860 --> 00:06:02.130
And so if I come back and
do this again, change it to blue.

105
00:06:03.350 --> 00:06:07.740
And now let's look at our debug console,
the color is, right?

106
00:06:07.740 --> 00:06:11.300
So we're now changing node code on
the fly without having to stop and

107
00:06:11.300 --> 00:06:12.460
start our debugger every time.

108
00:06:13.540 --> 00:06:17.825
So it's also a very nifty tool for
your at least the API side.

