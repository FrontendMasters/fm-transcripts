WEBVTT

1
00:00:00.137 --> 00:00:05.954
&gt;&gt; Burke Holland: I wanna talk to
you about data inside of VS code.

2
00:00:05.954 --> 00:00:09.546
Let's talk about working with data,
I'm gonna open this.

3
00:00:14.992 --> 00:00:16.739
&gt;&gt; Burke Holland: And I think, let's see,

4
00:00:16.739 --> 00:00:21.597
think what we wanna do here is I'm
gonna open the start folder directly.

5
00:00:23.168 --> 00:00:24.951
&gt;&gt; Burke Holland: And, yep.

6
00:00:24.951 --> 00:00:29.072
All right, so I made the point earlier
this morning that you really need to know

7
00:00:29.072 --> 00:00:33.720
about data, and be able to work with
data at some point from your editor.

8
00:00:33.720 --> 00:00:36.980
Now, there are a lot of
different databases out there.

9
00:00:36.980 --> 00:00:40.870
There is SQL Server, there's MySQL,
there's Postscripts, there's Oracle.

10
00:00:40.870 --> 00:00:44.620
There are document based
databases like MongoDB,

11
00:00:44.620 --> 00:00:49.490
Cosmos DB, Firebase,
there's a lot of them out there.

12
00:00:49.490 --> 00:00:52.010
Usually databases are a black box.

13
00:00:52.010 --> 00:00:56.826
In other words, your code talks to it,
but you can't really see inside of it.

14
00:00:56.826 --> 00:01:00.987
Unless you're using some sort of a command
line tool, or something to query it,

15
00:01:00.987 --> 00:01:02.160
but you can't see it.

16
00:01:04.410 --> 00:01:09.210
There are sometimes third party tools that
you can install like Robo 3T for MongoDB.

17
00:01:09.210 --> 00:01:13.120
But then you're going in and
out of your editor, and depending on

18
00:01:13.120 --> 00:01:17.550
which third party tool you're using,
it may be up to your standards or may not.

19
00:01:17.550 --> 00:01:20.600
And so databases have historically
been outside of the editor.

20
00:01:20.600 --> 00:01:23.330
One of the things that Visual Studio
developers have enjoyed for

21
00:01:23.330 --> 00:01:27.970
a long time is an integrated
sequel server experience.

22
00:01:27.970 --> 00:01:32.480
So if you've used Visual Studio before
you know that you can connect to your

23
00:01:32.480 --> 00:01:36.358
SQL Server, and you can just inspect it,
look at it, query it.

24
00:01:36.358 --> 00:01:37.552
You can even drag out and

25
00:01:37.552 --> 00:01:41.960
create an object-relational mapper
directly from Visual Studio.

26
00:01:41.960 --> 00:01:45.150
Everybody else has not had this luxury.

27
00:01:45.150 --> 00:01:47.730
So today,
what I wanna show you is how you can bring

28
00:01:47.730 --> 00:01:50.240
in data into your development environment.

29
00:01:50.240 --> 00:01:51.420
So at this point,

30
00:01:51.420 --> 00:01:56.130
we've got the dial cranked way over to the
left hand side like we are way towards 11,

31
00:01:56.130 --> 00:01:59.320
to the point now where we
bringing in the database inside.

32
00:01:59.320 --> 00:02:03.730
So not only are we inside of a container
developing in an environment that's not on

33
00:02:03.730 --> 00:02:07.160
our machine, but we're gonna
bring databases into the mix too.

34
00:02:07.160 --> 00:02:12.180
Now remember we just got done doing remote
containers, we're gonna use them now.

35
00:02:12.180 --> 00:02:17.844
So in order for you to complete this
project, you have to have SQLite,

36
00:02:17.844 --> 00:02:22.230
MySQL, and MongoDB installed.

37
00:02:22.230 --> 00:02:23.580
But you don't,

38
00:02:23.580 --> 00:02:29.780
because I've created a remote container
that has all of those things for you.

39
00:02:29.780 --> 00:02:34.798
So all you have to do here
is Remote-Containers,

40
00:02:34.798 --> 00:02:37.787
reopen folder in container.

41
00:02:37.787 --> 00:02:39.855
So what I would like to do,

42
00:02:39.855 --> 00:02:44.367
at least is I've made some
changes to this application.

43
00:02:44.367 --> 00:02:47.113
So that when you run it and
you refresh it,

44
00:02:47.113 --> 00:02:52.080
it saves colors to a MongoDB database
that you don't have installed.

45
00:02:52.080 --> 00:02:54.860
But I've included it in the container,
so it will be there.

46
00:02:54.860 --> 00:02:58.017
In order to connect to the database
instance and work with it,

47
00:02:58.017 --> 00:03:00.033
you need to have the proper extension.

48
00:03:00.033 --> 00:03:03.620
So I've included for
you the Cosmos DB extension.

49
00:03:03.620 --> 00:03:06.300
Now Cosmos DB is an Azure database.

50
00:03:06.300 --> 00:03:09.984
But the unique thing about it is
that it exposes the MongoDB API.

51
00:03:09.984 --> 00:03:12.865
So you can use MongoDB API
to talk to Azure,

52
00:03:12.865 --> 00:03:18.020
which means that you can also use it
to attach to any MongoDB database.

53
00:03:18.020 --> 00:03:21.260
So I'm just gonna go ahead and
detach this one.

54
00:03:21.260 --> 00:03:23.710
And we wanna attach to MongoDB.

55
00:03:23.710 --> 00:03:27.400
So to do that, we're gonna say attach,
and it's gonna say, what kind?

56
00:03:27.400 --> 00:03:33.880
Say Mongo, and then it wants to know
the path, the address of MongoDB.

57
00:03:34.930 --> 00:03:40.490
Now our MongoDB is running in a container
and it's called mongo, it's right there.

58
00:03:40.490 --> 00:03:42.620
So in order to attach to it,
this is how we do it.

59
00:03:42.620 --> 00:03:48.030
We say mongodb://mongo because
that's the name of the container.

60
00:03:48.030 --> 00:03:51.118
And because that container is
linked to the container we're in,

61
00:03:51.118 --> 00:03:52.080
we could say Enter.

62
00:03:53.370 --> 00:03:58.360
And now we are attached to MongoDB.

63
00:03:58.360 --> 00:04:00.600
And actually I've got a database here.

64
00:04:00.600 --> 00:04:04.030
So let's delete this database and
create it again.

65
00:04:04.030 --> 00:04:08.830
So what I'm gonna do here now is I need
a database inside of MongoDB to store

66
00:04:08.830 --> 00:04:10.110
these values.

67
00:04:10.110 --> 00:04:13.713
So I'm gonna create a database and
just call it lamp.

68
00:04:13.713 --> 00:04:18.250
And then it wants to know the name of the
collection, I'm gonna call that colors.

69
00:04:18.250 --> 00:04:24.980
Now inside of our MongoDB we have
a database, and we have a colors here.

70
00:04:24.980 --> 00:04:30.330
So hopefully, although not being
able to open on localhost 3000

71
00:04:30.330 --> 00:04:35.048
was a little concerning to me,
and we see if this is working.

72
00:04:35.048 --> 00:04:37.054
All right, so this is our application or

73
00:04:37.054 --> 00:04:39.479
it should be at least let's
make sure that it is.

74
00:04:39.479 --> 00:04:44.142
One of the things that's
interesting about yeah, it's not.

75
00:04:44.142 --> 00:04:47.947
So react apps by the way,
if you didn't know this,

76
00:04:47.947 --> 00:04:50.610
they have a service worker in them.

77
00:04:50.610 --> 00:04:52.869
And if you don't clear the site data,

78
00:04:52.869 --> 00:04:57.235
then it continues to show up like you
actually have a site when you do not.

79
00:04:57.235 --> 00:05:01.985
[LAUGH] So little tip there,
make sure you clear your service workers.

80
00:05:01.985 --> 00:05:07.440
So I do think, it said I
couldn't do a devPort of 3000 but

81
00:05:07.440 --> 00:05:09.770
I think I can just forward it like this.

82
00:05:09.770 --> 00:05:16.740
I should be able to do remote containers,
forward port from container,

83
00:05:16.740 --> 00:05:21.899
forward port, say 3000,
give me a second here.

84
00:05:26.216 --> 00:05:29.404
&gt;&gt; Burke Holland: What I'm doing now is
I'm rebuilding the container just to make

85
00:05:29.404 --> 00:05:31.570
sure that I'm starting fresh.

86
00:05:31.570 --> 00:05:32.961
And I did that from the command palette.

87
00:05:36.064 --> 00:05:38.259
&gt;&gt; Burke Holland: You can see it's
copying that little VS code server into

88
00:05:38.259 --> 00:05:39.672
the container.

89
00:05:39.672 --> 00:05:41.097
&gt;&gt; Burke Holland: Let's try this again,

90
00:05:41.097 --> 00:05:43.952
see if we can forward
a port from the container.

91
00:05:48.184 --> 00:05:52.298
&gt;&gt; Burke Holland: All right, so my remote
container is setup here is a little bit

92
00:05:52.298 --> 00:05:56.901
wonky, so we're inside the container but
we still need to start it.

93
00:05:56.901 --> 00:06:01.342
And remember we can do npm run,
npm start is our script.

94
00:06:05.126 --> 00:06:07.050
&gt;&gt; Burke Holland: And now it's running.

95
00:06:07.050 --> 00:06:14.470
If you go back and refresh,
let's do localhost 3000, and there we are.

96
00:06:14.470 --> 00:06:18.890
And you can see our logs right down here.

97
00:06:18.890 --> 00:06:20.480
Let's go ahead and
remove this color picker.

98
00:06:20.480 --> 00:06:23.040
So I'm gonna change
this color a few times.

99
00:06:24.680 --> 00:06:30.597
Let go brown, let's go cyan,
green, magenta.

100
00:06:34.043 --> 00:06:37.381
&gt;&gt; Burke Holland: All right, so now what
I've done is I've run the app a few times,

101
00:06:37.381 --> 00:06:38.980
and I've changed the colors.

102
00:06:38.980 --> 00:06:43.030
And because I changed the code to write to
MongoDB database we should now have some

103
00:06:43.030 --> 00:06:45.710
records in said database.

104
00:06:45.710 --> 00:06:46.680
Let's take a look here.

105
00:06:48.690 --> 00:06:51.820
Here's our mongo, there's our lamp,
here's our colors,

106
00:06:51.820 --> 00:06:55.870
and here are the records that have
been inserted, so we can see them now.

107
00:06:55.870 --> 00:07:00.150
If I click on one there's
the color that I did, okay?

108
00:07:00.150 --> 00:07:06.270
Now if I change this value,
let's say, I change it to the only,

109
00:07:08.580 --> 00:07:12.090
remember this is Simon, and I click Save.

110
00:07:13.680 --> 00:07:17.910
It's gonna say, do you want to
upload this and change the database?

111
00:07:17.910 --> 00:07:21.170
So I can say yeah, done.

112
00:07:21.170 --> 00:07:26.857
Now if I go back to look at this one,
and look at this one, it's persisted.

