WEBVTT

1
00:00:00.250 --> 00:00:02.150
&gt;&gt; Burke Holland: Let's move on to
something a little more complicated,

2
00:00:02.150 --> 00:00:05.790
because often times, you're not running
a very simple program like this that's

3
00:00:05.790 --> 00:00:10.350
just a single file that has no
dependencies and no user interface.

4
00:00:10.350 --> 00:00:15.320
This is a rather contrived example,
although you can use this.

5
00:00:15.320 --> 00:00:20.120
So what I'm gonna do here is I'm gonna
move on to our next project here.

6
00:00:20.120 --> 00:00:25.660
And this project is interesting,
because we're using TypeScript.

7
00:00:25.660 --> 00:00:30.410
So I'm going to open the index file
here and collapse the sidebar.

8
00:00:30.410 --> 00:00:35.720
And because actually it's open it again,
because I've included a tsconfig here,

9
00:00:35.720 --> 00:00:38.412
which instructs TypeScript on what to do,

10
00:00:38.412 --> 00:00:41.810
I've given it just some
basic instructions.

11
00:00:41.810 --> 00:00:46.459
Use the common JS module format,
preserve JSX, use Source Maps,

12
00:00:46.459 --> 00:00:48.630
in line my Source Maps.

13
00:00:48.630 --> 00:00:50.960
Because I've given it
some basic instructions,

14
00:00:50.960 --> 00:00:53.620
VS code will now build this transcript for
me.

15
00:00:53.620 --> 00:00:56.380
So I'm gonna go ahead and
let's delete this file.

16
00:00:56.380 --> 00:00:59.600
I should learn the keyboard shortcut for
deleting files.

17
00:00:59.600 --> 00:01:03.370
Somebody put that in the exercise,
submit a pull request.

18
00:01:03.370 --> 00:01:06.440
So I've deleted all of the files here and

19
00:01:06.440 --> 00:01:10.260
remember, TypeScript doesn't
run in the browser or Node.

20
00:01:10.260 --> 00:01:13.508
All it does is transfile to JavaScript
to which we need so we need those files.

21
00:01:13.508 --> 00:01:19.159
To get them back, what we can do is,
Cmd+Shift B opens our build process.

22
00:01:19.159 --> 00:01:21.857
Because I've got the tsconfig,
the TypeScript

23
00:01:21.857 --> 00:01:26.480
compiler automatically picks us up VS code
says, well okay, what do you wanna do?

24
00:01:26.480 --> 00:01:27.960
Did you wanna just build it?

25
00:01:27.960 --> 00:01:29.262
I can do that so let's build.

26
00:01:29.262 --> 00:01:32.969
So it'll build it and
those files come back.

27
00:01:32.969 --> 00:01:37.970
Even better, I can say I can do
Cmd+Shift+B and I can watch it.

28
00:01:37.970 --> 00:01:42.300
And now, I've got a watch process
happening so anytime I make any changes

29
00:01:42.300 --> 00:01:46.560
to these TypeScript files, they get
compiled over here into JavaScript files.

30
00:01:48.090 --> 00:01:49.540
Now, while we're on
the subject of TypeScript,

31
00:01:49.540 --> 00:01:52.620
I want to show you a little trick
here in TypeScript that you can use.

32
00:01:52.620 --> 00:01:56.800
A lot of times, you have TypeScript
files and you have JavaScript files.

33
00:01:56.800 --> 00:01:59.290
But you don't wanna see
the JavaScript files, right?

34
00:01:59.290 --> 00:02:01.730
You just want to see the TypeScript files.

35
00:02:01.730 --> 00:02:08.150
So what you can do here is,
let's see, we can add our settings.

36
00:02:08.150 --> 00:02:10.070
Let's add some settings here.

37
00:02:10.070 --> 00:02:13.820
And you'll see that when I do that,
it creates a settings.json file.

38
00:02:13.820 --> 00:02:18.681
And what I'm gonna do here is I'm gonna
come down and just say files, exclude, and

39
00:02:18.681 --> 00:02:23.695
it it kind of gives me a list of things
that it thinks I probably want to exclude.

40
00:02:23.695 --> 00:02:30.525
We'll take these out and
we'll put in, let's do **/*.js and

41
00:02:30.525 --> 00:02:35.860
then we can do, sorry,
we have to say, true.

42
00:02:35.860 --> 00:02:40.780
And then let's duplicate that,
bring it down,

43
00:02:40.780 --> 00:02:44.050
and let's say **/*.js.map, is true.

44
00:02:44.050 --> 00:02:46.900
Save that, and if you watch over
to the side those files are gone.

45
00:02:46.900 --> 00:02:49.110
Now they're not gone from the file system.

46
00:02:49.110 --> 00:02:50.630
They're just gone from the editor.

47
00:02:50.630 --> 00:02:53.990
And that just cleans up
your editor a whole lot so

48
00:02:53.990 --> 00:02:57.695
you can see what you're
looking at a little better.

49
00:02:57.695 --> 00:03:02.943
You could also use glob expressions up

50
00:03:02.943 --> 00:03:10.655
here to do multiple things in one line so
you can do this.

51
00:03:10.655 --> 00:03:14.238
I think it's **/* and then ***.

52
00:03:14.238 --> 00:03:17.519
You know what it is, it's like this.

53
00:03:17.519 --> 00:03:19.363
Watch this, like this or this.

54
00:03:22.542 --> 00:03:26.840
&gt;&gt; Burke Holland: So any valid glob file,
glob expression will work here.

55
00:03:26.840 --> 00:03:28.799
If you wanna look up globs,
you can just Google that and

56
00:03:28.799 --> 00:03:29.875
try to figure out the Syntax.

57
00:03:29.875 --> 00:03:34.705
But my point is you can create rather
complex glob expressions that exclude all

58
00:03:34.705 --> 00:03:35.740
kinds of files.

59
00:03:37.710 --> 00:03:40.622
All right, so let's go ahead and
keep in what we had before.

60
00:03:44.730 --> 00:03:48.100
&gt;&gt; Burke Holland: Js and
then let's do one more for the other one.

61
00:03:48.100 --> 00:03:51.942
Let's do **/*.js.map, and

62
00:03:51.942 --> 00:03:57.070
that will keep all of our
JavaScript files out.

63
00:03:58.080 --> 00:04:00.029
Help us to focus, remove this.

64
00:04:00.029 --> 00:04:03.150
Go ahead and save that, okay.

65
00:04:03.150 --> 00:04:06.290
So now we want to actually
debug this application here.

66
00:04:07.400 --> 00:04:12.180
So to run this, what we actually need
to do is open up a terminal here.

67
00:04:12.180 --> 00:04:15.240
So I'm just gonna run this from
the terminal so you can see how this runs.

68
00:04:15.240 --> 00:04:19.903
This program right here is a CLI program,
so in other words,

69
00:04:19.903 --> 00:04:22.377
it doesn't run in the browser.

70
00:04:22.377 --> 00:04:25.370
It runs in Node, but
it is activated from the CLI.

71
00:04:25.370 --> 00:04:27.480
So it's gonna prompt us for something.

72
00:04:27.480 --> 00:04:30.810
We have to input a color then
it's gonna change the lamp color.

73
00:04:30.810 --> 00:04:33.871
All of that happens in the terminal so
if we were to run this,

74
00:04:33.871 --> 00:04:36.951
what we would say is,
we'd come down here to our terminal.

75
00:04:36.951 --> 00:04:39.095
We have to make sure we're
in the right folder here.

76
00:04:39.095 --> 00:04:43.470
So I'm gonna go up one and then move
into and actually, I'll show you this.

77
00:04:43.470 --> 00:04:45.210
If you just add a new terminal instance,

78
00:04:45.210 --> 00:04:47.500
it'll ask you which one of
these projects you wanna add?

79
00:04:47.500 --> 00:04:50.090
Remember I said terminals
are specific to projects?

80
00:04:50.090 --> 00:04:52.840
So we can just put one here, and
now we're in the right folder.

81
00:04:54.130 --> 00:04:59.480
And now I can say here,
I could run this by saying node index.js.

82
00:04:59.480 --> 00:05:02.390
Now, we're writing our file
in the TypeScript, but

83
00:05:02.390 --> 00:05:04.780
we've to run it in the JavaScript, okay.

84
00:05:04.780 --> 00:05:07.260
So I'm gonna hit Enter here and
it's gonna ask us to enter a color.

85
00:05:07.260 --> 00:05:14.050
I'll put in green and
the lamp color has been changed to green.

86
00:05:15.440 --> 00:05:19.290
Remember I told you that we can run
JavaScript files with no configuration at

87
00:05:19.290 --> 00:05:20.380
all, right?

88
00:05:20.380 --> 00:05:23.440
So we can do that here, so let's do that.

89
00:05:23.440 --> 00:05:27.087
I'm going to press F5, okay, and

90
00:05:27.087 --> 00:05:31.716
it's gonna run and
then it's gonna go away.

91
00:05:31.716 --> 00:05:35.990
What happened, all right,
so here's the deal.

92
00:05:35.990 --> 00:05:40.987
When you run applications
in VS code like I just did,

93
00:05:40.987 --> 00:05:44.520
it runs them on an internal console.

94
00:05:44.520 --> 00:05:48.615
So that console prompt that we need in
order to interact this application,

95
00:05:48.615 --> 00:05:51.150
it's there, but you can't see it.

96
00:05:51.150 --> 00:05:56.860
So what we need to do is instruct VS
code on where to put the output or

97
00:05:56.860 --> 00:06:01.330
we need it to use the integrated terminal
instead of the internal terminal.

98
00:06:01.330 --> 00:06:06.127
In order to do that, we are now
configuring the debug process so

99
00:06:06.127 --> 00:06:11.661
we need to add what's called a launch
configuration or a launch config.

100
00:06:14.867 --> 00:06:19.680
&gt;&gt; Burke Holland: What I'm gonna do is
I'm gonna come over here to our debug

101
00:06:19.680 --> 00:06:23.910
panel and
I'm gonna open the drop down list here.

102
00:06:25.350 --> 00:06:28.040
And you can see here I've got
several options for add config,

103
00:06:28.040 --> 00:06:30.300
I'm gonna say add config here.

104
00:06:31.440 --> 00:06:34.160
And it's gonna wanna know well,
what are you trying to debug?

105
00:06:34.160 --> 00:06:38.810
We're debugging a node process so
we'll choose node, and

106
00:06:38.810 --> 00:06:41.135
then it's going to create for

107
00:06:41.135 --> 00:06:45.887
us a launch config in the project
to folder which it just did.

108
00:06:45.887 --> 00:06:50.129
So if we come back to our explorer you
can see there's now, its collapse some of

109
00:06:50.129 --> 00:06:54.100
this, make it a little easier and
see this is our launch config.

110
00:06:54.100 --> 00:06:56.344
So let's look at this launch config.

111
00:06:56.344 --> 00:07:00.029
Right here, you can see that the name of
it is launch program that type is node and

112
00:07:00.029 --> 00:07:01.460
the request is launch.

113
00:07:01.460 --> 00:07:07.380
We've two types of launch configs or
two types of requests, launch and attach.

114
00:07:07.380 --> 00:07:09.840
You can attach a debugger
to a running process or

115
00:07:09.840 --> 00:07:13.670
you can use the debugger to launch and
then it will attach itself.

116
00:07:13.670 --> 00:07:15.883
You will almost always use launch,

117
00:07:15.883 --> 00:07:20.382
it's much more common to use launch
than attach but you can use attach and

118
00:07:20.382 --> 00:07:24.600
will look at that here a little bit,
it's called launch program.

119
00:07:24.600 --> 00:07:28.530
Whatever we change this name to is
what will show up in the debugger.

120
00:07:28.530 --> 00:07:30.940
Here's what I mean by that, right now,

121
00:07:30.940 --> 00:07:35.750
if we go back to the right here
you see it says launch program.

122
00:07:35.750 --> 00:07:41.120
If we change this to Launch CLI app,
it changes up here too.

123
00:07:41.120 --> 00:07:43.300
So that's what the name
does in the launch config.

124
00:07:44.450 --> 00:07:49.480
The next thing it wants to know is
what file is my entry point for

125
00:07:49.480 --> 00:07:50.560
running this application.

126
00:07:50.560 --> 00:07:53.190
So for us, it tries to guess for you,

127
00:07:53.190 --> 00:07:56.830
which is why it took a little bit of time
for that launch config to be created.

128
00:07:56.830 --> 00:08:00.780
Because VS code is looking at my projects
and it's trying to figure out okay,

129
00:08:00.780 --> 00:08:04.200
based on the file structure,
I think this is what you want.

130
00:08:04.200 --> 00:08:06.220
And then for our out files here,

131
00:08:06.220 --> 00:08:10.340
it just these are just where my JavaScript
files live, which is my workspace folder.

132
00:08:10.340 --> 00:08:13.840
These configurations are all
added by VS code automatically,

133
00:08:13.840 --> 00:08:17.500
I didn't have to do anything to get that,
they're just there.

134
00:08:17.500 --> 00:08:22.730
Now, in order for us to get access
to the terminal for the CLI

135
00:08:22.730 --> 00:08:26.310
app to run in the right place, we need to
specify that we're going to come down.

136
00:08:26.310 --> 00:08:29.200
In this case we're looking for
the console so

137
00:08:29.200 --> 00:08:33.980
any console here, you can see we have
external, integrated and internal.

138
00:08:33.980 --> 00:08:35.080
Right now we're internal so

139
00:08:35.080 --> 00:08:40.020
I'm gonna change that to integrated
terminal here, and save that.

140
00:08:40.020 --> 00:08:46.160
And then now we should be able to add
a breakpoint to the index.ts file,

141
00:08:46.160 --> 00:08:50.220
not the JavaScript file,
to the index file, right here.

142
00:08:50.220 --> 00:08:54.667
And then go ahead and
run this from the debugger.

143
00:08:54.667 --> 00:08:56.310
So I'm gonna go ahead and launch it.

144
00:08:57.590 --> 00:08:59.090
All right,

145
00:08:59.090 --> 00:09:03.620
so in the case of this launch config,
we actually don't need the out files.

146
00:09:03.620 --> 00:09:07.470
This is what I mean by configs
being a little bit hard to set up,

147
00:09:07.470 --> 00:09:10.030
it's because you really do have to get
them just right, and if you don't,

148
00:09:10.030 --> 00:09:11.760
the debugging just doesn't work.

149
00:09:11.760 --> 00:09:15.490
And so I took out the out files, which
I'm assuming was providing a bad path

150
00:09:16.950 --> 00:09:21.780
and let me go ahead and kill this
application so we don't see that anymore.

151
00:09:23.130 --> 00:09:26.611
And the debugger should work now so
let's go back to the index file here.

152
00:09:26.611 --> 00:09:32.270
I'm gonna put a break point and
then let's go ahead and launch it.

153
00:09:32.270 --> 00:09:34.600
And now see its opening
the internal terminal or

154
00:09:34.600 --> 00:09:38.280
the integrated terminal here rather,
and we can change the color, and

155
00:09:38.280 --> 00:09:42.470
then it will break on the breakpoint
as you see right there.

156
00:09:42.470 --> 00:09:45.889
And now we can do logpoints and
breakpoints and other types of things.

157
00:09:45.889 --> 00:09:49.403
What's very interesting is that
we're debugging TypeScripts, but

158
00:09:49.403 --> 00:09:50.899
we're running JavaScript.

159
00:09:50.899 --> 00:09:55.370
So you can see how VS code makes it so
much easier to debug.

160
00:09:55.370 --> 00:09:57.400
Otherwise you'd have to set
all this stuff up yourself,

161
00:09:57.400 --> 00:10:00.480
you have to set up Source Maps,
that's not a lot of fun.

162
00:10:00.480 --> 00:10:03.900
And so VS code does that for
you automatically, which is super nice.

163
00:10:03.900 --> 00:10:07.910
So let's go ahead and
continue on through this.

164
00:10:07.910 --> 00:10:13.648
Now another thing that you
can do is you can set the VS

165
00:10:13.648 --> 00:10:19.270
code to auto attach its
debugger to your process.

166
00:10:19.270 --> 00:10:21.460
So here's what I mean.

167
00:10:21.460 --> 00:10:26.030
A lot of times, people are like,
cool story about the debugging, but

168
00:10:26.030 --> 00:10:29.600
I don't start my apps with the debugger.

169
00:10:29.600 --> 00:10:31.880
I start them from the terminal
with a start command or

170
00:10:31.880 --> 00:10:35.920
some sort of specific command
that I'm running from MPM or

171
00:10:35.920 --> 00:10:38.692
my package JSON and
I'd really like to keep it that way.

172
00:10:38.692 --> 00:10:44.450
I don't wanna change and if that's
the case, what you can do is you can

173
00:10:44.450 --> 00:10:47.570
have VS code auto attach to that
process whenever it fires up.

174
00:10:47.570 --> 00:10:49.870
So let me show you how that works.

175
00:10:49.870 --> 00:10:50.710
In this case,

176
00:10:50.710 --> 00:10:55.010
let's say we were bent on running it like
this where we wanted to run it this way.

177
00:10:56.580 --> 00:11:01.530
So if we do this, we get the exact
same prompt there it goes.

178
00:11:01.530 --> 00:11:05.130
Now we want the debugger to attach
when we run this application so

179
00:11:05.130 --> 00:11:08.940
what we can do is we can
toggle on auto attach, okay?

180
00:11:08.940 --> 00:11:10.938
I'm gonna debug auto attach and

181
00:11:10.938 --> 00:11:14.934
then what we have to do is we have
to inspect we're saying node and

182
00:11:14.934 --> 00:11:20.050
then whenever you wanna use a debugger in
node, you have to pass the inspect flag.

183
00:11:20.050 --> 00:11:23.222
Because there's a special debugging
protocol that it opens when you

184
00:11:23.222 --> 00:11:24.431
do that on port 9229.

185
00:11:24.431 --> 00:11:26.861
You don't need to know
any of that information,

186
00:11:26.861 --> 00:11:29.660
just the fact that that's
the way that it goes.

187
00:11:29.660 --> 00:11:33.660
So if we run this with node index.js,
nothing's going to happen.

188
00:11:35.140 --> 00:11:35.938
What's another color?

189
00:11:35.938 --> 00:11:39.852
I'm running out of colors and
nothing's gonna happen.

190
00:11:39.852 --> 00:11:41.601
But if we run it with
node inspect index.js,

191
00:11:42.765 --> 00:11:43.396
&gt;&gt; Burke Holland: Still nothing happens.

192
00:11:43.396 --> 00:11:49.289
Let's change it again,

193
00:11:49.289 --> 00:11:52.380
there we go.

194
00:11:52.380 --> 00:11:55.750
I'll tell you what, let's do it on,
I think a better example,

195
00:11:55.750 --> 00:12:00.490
this might be on this one here, so
I'm going to drop a breakpoint here and

196
00:12:00.490 --> 00:12:04.720
let's run into a new terminal instance.

197
00:12:04.720 --> 00:12:10.400
I'm going to do node inspect index.js and
we want to toggle on auto attach.

198
00:12:10.400 --> 00:12:15.910
I don't know if I just toggled it on or
off, we're about to find out, there we go.

199
00:12:15.910 --> 00:12:18.240
Now it's on, I just had to toggle off.

200
00:12:18.240 --> 00:12:22.840
So now you can see that the debugger gets
hit automatically just by virtue of me

201
00:12:22.840 --> 00:12:24.450
starting from the terminal.

202
00:12:24.450 --> 00:12:27.060
So just know that if you wanna
start from the terminal you can and

203
00:12:27.060 --> 00:12:29.280
if you wanna still use the debugger,
you can.

204
00:12:29.280 --> 00:12:31.670
And you need to know about
the auto attach feature so

205
00:12:31.670 --> 00:12:36.460
that you can auto attach the debugger
whenever you run with the --inspect flag.

206
00:12:36.460 --> 00:12:39.940
And just remember, if you don't use the
inspect flag, nothing is going to happen,

207
00:12:39.940 --> 00:12:42.660
because you are not in
a debugging protocol for Node.

