WEBVTT

1
00:00:00.210 --> 00:00:04.260
If you don't already have Netcat, go ahead
and try to figure out how to install it,

2
00:00:04.260 --> 00:00:09.980
you can, if you ran the nclp command or
you might have to do Netcat l or p.

3
00:00:09.980 --> 00:00:14.970
Sometimes the options
are a little mixed up.

4
00:00:14.970 --> 00:00:19.790
So you might have to do something
like dash l without the p,

5
00:00:19.790 --> 00:00:21.440
Cuz there's like a couple
of different versions.

6
00:00:21.440 --> 00:00:23.440
There's like a BSD version and
another one.

7
00:00:23.440 --> 00:00:29.300
So, anyways figure out how to run Netcat,
and

8
00:00:29.300 --> 00:00:34.270
Netcat is really nice because
it lets you have a plain text

9
00:00:35.270 --> 00:00:39.810
session with a server or you can be the
server and you can just type in responses.

10
00:00:41.910 --> 00:00:49.860
So here's a fun thing to try, hang on, so
here's some different things you can try.

11
00:00:49.860 --> 00:00:53.770
Probably one of those is gonna work,
the top one or the second one down.

12
00:00:53.770 --> 00:00:57.540
This will listen for
an incoming connection on port 5000.

13
00:00:57.540 --> 00:01:01.900
And then the third one down,
the nc localhost 5000,

14
00:01:01.900 --> 00:01:04.860
if you do that in another terminal window,

15
00:01:04.860 --> 00:01:07.980
you should be able to connect to your
server and you can type a message.

16
00:01:09.600 --> 00:01:12.840
So I'm gonna go ahead and
do that over here on the right.

17
00:01:13.990 --> 00:01:19.310
So I'm gonna do nc dash lp is,
it's how it works in my system.

18
00:01:19.310 --> 00:01:21.680
I could do nc localhost 5000.

19
00:01:21.680 --> 00:01:25.070
Now on either side,
I can type whatever I want, so

20
00:01:25.070 --> 00:01:27.990
I can type, hello, I am the client.

21
00:01:29.360 --> 00:01:35.464
And over here on the server, I can type,
hello clients, I am the server.

22
00:01:39.824 --> 00:01:41.031
And so pretty much,

23
00:01:41.031 --> 00:01:43.185
we have a little chat program-
&gt;&gt; [COUGH]

24
00:01:43.185 --> 00:01:43.882
&gt;&gt; Going on here.

25
00:01:43.882 --> 00:01:49.040
This is more or

26
00:01:49.040 --> 00:01:55.940
less how protocols and
servers and clients work.

27
00:01:57.020 --> 00:02:01.510
Although, if you have a protocol,
the way that you exchange

28
00:02:01.510 --> 00:02:04.940
information is a lot more nailed down,
so it's not so freeform as this.

29
00:02:04.940 --> 00:02:08.140
For example, if you had something like,

30
00:02:08.140 --> 00:02:12.590
maybe you have a convention where you
use brackets to say the username.

31
00:02:12.590 --> 00:02:16.640
But then there's no way of enforcing,
like which side, so the server could lie

32
00:02:16.640 --> 00:02:19.940
about being the client and the client
could lie about being the server.

33
00:02:19.940 --> 00:02:22.520
You can also have multiple
clients connected.

34
00:02:22.520 --> 00:02:26.400
So if I open a third connection
now as a client to my server.

35
00:02:27.760 --> 00:02:30.860
In this case with Netcat,
you can only have one connection.

36
00:02:30.860 --> 00:02:35.480
But if you have a server with node for
example, then you can have as many clients

37
00:02:35.480 --> 00:02:40.590
as you like, up to like, whatever your
system can handle, like probably, maybe

38
00:02:41.660 --> 00:02:46.350
like 5 to 10,000 to expect till
you run out of file descriptors.

