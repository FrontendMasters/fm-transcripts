WEBVTT

1
00:00:00.270 --> 00:00:04.250
So I wanna list down all of the Core
Streams that are available in mode

2
00:00:04.250 --> 00:00:08.570
both to give you an idea for
maybe what you can poke around at and

3
00:00:08.570 --> 00:00:12.500
also just to show you where they all are,
what they're good for.

4
00:00:13.770 --> 00:00:15.010
So, we've seen a bunch of these already.

5
00:00:15.010 --> 00:00:20.469
We've seen fs.createReadStream( ),
we've seen fs.createWriteStream( ).

6
00:00:20.469 --> 00:00:23.930
We've also seen process standard in and
process standard out.

7
00:00:23.930 --> 00:00:27.910
But there's also standard error,
err, which is used for

8
00:00:27.910 --> 00:00:31.600
writing to file descriptor two, I think.

9
00:00:31.600 --> 00:00:36.160
Which is just the extra spammy info
messages you can print to the terminal.

10
00:00:36.160 --> 00:00:38.640
If you wanna put errors there,
it's a good place to put them.

11
00:00:41.160 --> 00:00:44.337
Also if you create a child process,
there's a node module and

12
00:00:44.337 --> 00:00:45.996
I need just show how that works.

13
00:00:48.873 --> 00:00:51.410
Called child process.

14
00:00:51.410 --> 00:00:56.868
So it has some methods as spawn and
I forget exactly what they are,

15
00:00:56.868 --> 00:01:00.451
but we'll just pull up the spawn and exec.

16
00:01:00.451 --> 00:01:07.569
So we'll use the spawn method right
now to run another program in a.

17
00:01:07.569 --> 00:01:12.200
And we'll, we can write to it standard
input and read from it standard output.

18
00:01:12.200 --> 00:01:19.590
So, for example,
if I spawn something like grep right.

19
00:01:19.590 --> 00:01:24.479
So the first argument is the command name,
the grep, in this case.

20
00:01:24.479 --> 00:01:29.254
The second argument is an array of the
command line arguments that you want to

21
00:01:29.254 --> 00:01:30.530
pass in.

22
00:01:30.530 --> 00:01:34.060
So I'll do grep for potato.

23
00:01:34.060 --> 00:01:41.474
Now every time I write a line of input
to standard in on this process object.

24
00:01:44.132 --> 00:01:49.262
That matches the string potato,
which could be a regex if you like,

25
00:01:49.262 --> 00:01:54.942
then I should get that line on the output
so, I can write a couple of things.

26
00:01:54.942 --> 00:02:02.377
Cheese, Carrots, carrot potato

27
00:02:06.806 --> 00:02:11.509
Potato, so
the last two those automatch and

28
00:02:11.509 --> 00:02:16.591
then I'll call end to tell
the program to end and

29
00:02:16.591 --> 00:02:23.220
I can pipe ps.stdout just
to standard out normally.

30
00:02:23.220 --> 00:02:26.610
So this little program is just
gonna watch that come in for us and

31
00:02:26.610 --> 00:02:30.910
we can use all of the string methods
we've seen so far to deal with it.

32
00:02:30.910 --> 00:02:32.230
So here we go.

33
00:02:32.230 --> 00:02:37.250
We get, we ran the grep command,
piped in a lot of things,

34
00:02:37.250 --> 00:02:40.630
but it only printed out the lines
that matched the string potato.

35
00:02:41.870 --> 00:02:44.207
Just add that to the Repo.

36
00:02:44.207 --> 00:02:46.186
&gt;&gt; [COUGH]
&gt;&gt; Okay, so

37
00:02:46.186 --> 00:02:50.890
we've also seen net.connect and
net.createServer.

38
00:02:50.890 --> 00:02:53.571
There's also tls.connect and
tls.createServer so

39
00:02:53.571 --> 00:02:55.410
you can make SSL connections.

40
00:02:55.410 --> 00:02:59.860
But then you have to generate certificates
it's a little bit complicated you have to

41
00:02:59.860 --> 00:03:02.680
have to bust out some open
SSL commands and such.

42
00:03:02.680 --> 00:03:05.982
So not going to do that right now.

43
00:03:05.982 --> 00:03:10.819
But it's with air, those are both,
just like the net methods,

44
00:03:10.819 --> 00:03:16.747
the TLS methods, return duplex streams
that work the same way that they work.

45
00:03:16.747 --> 00:03:21.489
With net except you have to be a little
bit more careful about which part is

46
00:03:21.489 --> 00:03:24.845
the plaintext, and
which part is the ciphertext.

