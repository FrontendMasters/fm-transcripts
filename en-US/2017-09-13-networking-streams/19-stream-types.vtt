WEBVTT

1
00:00:00.170 --> 00:00:03.700
So now we can talk a little bit about
different kinds of stream types.

2
00:00:03.700 --> 00:00:06.486
We've already seen a few
examples of some streams.

3
00:00:06.486 --> 00:00:11.207
We've seen transform streams with
through2, through2 by default.

4
00:00:11.207 --> 00:00:15.093
Even if you never use the readable side,
even if you never use the writable side,

5
00:00:15.093 --> 00:00:17.800
through2 is always gonna
give you a transform stream.

6
00:00:18.962 --> 00:00:25.120
And concat-stream is always
gonna be a writable stream.

7
00:00:25.120 --> 00:00:30.103
So you can think of readable streams
as being producers of data or sources,

8
00:00:30.103 --> 00:00:32.270
like from where you get data.

9
00:00:32.270 --> 00:00:36.640
They're Like fs.createreadstream is
another example of a readable stream.

10
00:00:36.640 --> 00:00:41.480
Writable streams are sinks of data,
destinations where the data will flow to.

11
00:00:41.480 --> 00:00:44.810
There's a method that we'll get
into called fs.createwritestream.

12
00:00:44.810 --> 00:00:49.120
That's good example of this,
that writes data into a file on disk.

13
00:00:50.290 --> 00:00:51.740
There's also a transform streams.

14
00:00:51.740 --> 00:00:55.440
These are things that sort of
take input and produce output.

15
00:00:55.440 --> 00:01:00.300
Then there's duplex streams
which are more complicated, but

16
00:01:00.300 --> 00:01:05.230
you can think of things like bidirectional
network protocols as duplex streams.

17
00:01:05.230 --> 00:01:07.780
Or you might also think of
them as kinda a telephone.

18
00:01:07.780 --> 00:01:11.160
We'll get a little bit more into what
those look like exactly because those

19
00:01:11.160 --> 00:01:19.680
are kinda the hardest to fully grok.

20
00:01:19.680 --> 00:01:24.820
So here's kind of what each of these
looks like with the pipe method.

21
00:01:24.820 --> 00:01:30.720
So you pipe from a readable stream
into some kind of writable stream.

22
00:01:30.720 --> 00:01:34.100
Transform streams and duplex streams
are both readable and writable.

23
00:01:34.100 --> 00:01:37.570
So they are gonna appear on
either side of this kinda thing.

24
00:01:39.010 --> 00:01:42.640
Writable streams are what you pipe to.

25
00:01:42.640 --> 00:01:47.621
So, inside of the arguments to the pipe
functions is where a writable stream

26
00:01:47.621 --> 00:01:48.230
would go.

27
00:01:48.230 --> 00:01:52.300
With transform streams,
you sort of put them between two streams.

28
00:01:52.300 --> 00:01:57.360
Even if you never hook up the other
end of the stream like either end.

29
00:01:57.360 --> 00:02:01.070
If you have a writable stream,
then you could do that.

30
00:02:01.070 --> 00:02:03.680
And a duplex stream is the oddball.

31
00:02:03.680 --> 00:02:06.900
And this looks like it
would be a loop maybe,

32
00:02:06.900 --> 00:02:09.380
if you're thinking about
how streams that'll work.

33
00:02:09.380 --> 00:02:16.170
But, if you see A.pipeB.pipeA, you're
definitely dealing with a duplex stream.

