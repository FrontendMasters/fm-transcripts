WEBVTT

1
00:00:00.490 --> 00:00:04.850
Now that we've had some time to
play around with HTTP servers and

2
00:00:04.850 --> 00:00:07.400
did a little bit with headers and
netcat and curl,

3
00:00:07.400 --> 00:00:13.010
can talk a little bit about some other
text based fun protocols like SMTP.

4
00:00:13.010 --> 00:00:15.950
SMTP is used to send emails.

5
00:00:15.950 --> 00:00:21.520
So, for example,
we can send an email on our local SMTP

6
00:00:21.520 --> 00:00:24.880
daemon which on my system is running.

7
00:00:24.880 --> 00:00:28.630
I don't know how common that is on Macs,
but I don't know, give it a shot,

8
00:00:28.630 --> 00:00:29.380
maybe it'll work.

9
00:00:29.380 --> 00:00:31.860
If not, you can just see
how it works on my machine.

10
00:00:33.000 --> 00:00:35.480
So we can send a message
from whoever we want,

11
00:00:35.480 --> 00:00:40.890
because SMTP servers typically have
no validation at all by default.

12
00:00:40.890 --> 00:00:46.470
Although if you try to do this on a real
SMTP server on the public internet,

13
00:00:46.470 --> 00:00:47.260
it's not going to work.

14
00:00:47.260 --> 00:00:50.370
So, it's kind of fun to do on localhost.

15
00:00:50.370 --> 00:00:54.350
So, here I can connect
to localhost port 25.

16
00:00:54.350 --> 00:00:57.990
Email is just a simple
text based protocol.

17
00:00:57.990 --> 00:01:01.320
It actually has a lot of
commonality with HTTP.

18
00:01:01.320 --> 00:01:06.640
So, it has things like status codes, it
has things like in the body of messages,

19
00:01:06.640 --> 00:01:09.720
you have a similar idea to HTTP headers.

20
00:01:09.720 --> 00:01:13.790
It has similar kind of
content mime system.

21
00:01:13.790 --> 00:01:17.339
So I can do, hello localhost.

22
00:01:21.200 --> 00:01:26.116
Let me get back message
that's 200 category message

23
00:01:26.116 --> 00:01:31.310
that means okay,
now I can send email from whoever I want.

24
00:01:31.310 --> 00:01:36.540
So I send one from trump@whitehouse.gov.

25
00:01:36.540 --> 00:01:45.410
Sorry mail from,
not fom trump@whitehouse.gov 250 OK.

26
00:01:45.410 --> 00:01:47.890
So the server seems to be fine with this,

27
00:01:47.890 --> 00:01:50.730
even though just sending
it from netcat locally.

28
00:01:51.870 --> 00:01:56.100
I can send rcpt to substack@localhost.

29
00:01:56.100 --> 00:01:58.530
So this is gonna send me an email locally.

30
00:01:58.530 --> 00:01:59.530
Accepted as well.

31
00:02:00.820 --> 00:02:08.522
Now you can send the data, the body of
the email message with data commands.

32
00:02:08.522 --> 00:02:12.560
And then by default,
you type everything you want to type and

33
00:02:12.560 --> 00:02:13.360
then you hit a period.

34
00:02:13.360 --> 00:02:15.250
You type a period on a single line.

35
00:02:15.250 --> 00:02:17.310
So you hit period, Enter.

36
00:02:17.310 --> 00:02:19.960
And then that's like
the end of the message.

37
00:02:19.960 --> 00:02:23.620
There's other ways of formatting it but
this is the default way.

38
00:02:23.620 --> 00:02:24.980
That's very old.

39
00:02:24.980 --> 00:02:29.590
So by default most email
clients are going to interpret

40
00:02:29.590 --> 00:02:32.600
the first block just
like HTTP is the headers.

41
00:02:32.600 --> 00:02:34.030
So one is called subject.

42
00:02:34.030 --> 00:02:37.956
You can also have things like
different things in there.

43
00:02:37.956 --> 00:02:43.920
So, FAKE NEWS and two new lines
just like HTTP and you're fired.

44
00:02:46.020 --> 00:02:47.820
So there we go, it was sent.

45
00:02:47.820 --> 00:02:49.680
Okay, and we can quit.

46
00:02:49.680 --> 00:02:54.280
And now I have new mail on my system so
I can type the mail command to read it.

47
00:02:54.280 --> 00:02:57.800
Here we go trump@whitehouse.gov.

48
00:02:57.800 --> 00:02:58.850
Get a message, you're fired.

49
00:03:00.160 --> 00:03:06.480
So this is all that it takes to
send a message to an SMTP server.

50
00:03:08.110 --> 00:03:12.190
Although in the real internet,
the servers are very careful to check

51
00:03:12.190 --> 00:03:15.770
what IP address they're actually
receiving the messages from so

52
00:03:15.770 --> 00:03:21.870
that they have some more verification
than just accepting anything blindly.

53
00:03:21.870 --> 00:03:26.520
Which is actually how email used to work
on the public internet back when everyone

54
00:03:26.520 --> 00:03:29.570
was an academic or worked for
the military, I guess.

55
00:03:29.570 --> 00:03:34.950
So just something kind of fun
another text based protocol.

56
00:03:34.950 --> 00:03:39.390
That's, you can type out with netcat
if you ever just want to poke around.

