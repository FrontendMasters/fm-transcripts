WEBVTT

1
00:00:00.250 --> 00:00:03.790
What does adding that transformed because
ultimately when I've been running it,

2
00:00:03.790 --> 00:00:05.900
it does exactly the same thing.

3
00:00:05.900 --> 00:00:09.150
What were you saying the trends
in adding the transform?

4
00:00:09.150 --> 00:00:12.190
&gt;&gt; So if the transform here,
which is this line,

5
00:00:14.130 --> 00:00:19.740
turns these chunks of data into uppercase.

6
00:00:20.910 --> 00:00:22.520
So that's what this example does.

7
00:00:23.820 --> 00:00:24.465
Is it just-
&gt;&gt; No-

8
00:00:24.465 --> 00:00:25.900
&gt;&gt; Don't you have the same thing or-

9
00:00:25.900 --> 00:00:28.720
&gt;&gt; I think he means the core versus the-

10
00:00:28.720 --> 00:00:30.380
&gt;&gt; Yeah, well, the core versus-

11
00:00:30.380 --> 00:00:31.770
&gt;&gt; Yeah, so it does the same thing,

12
00:00:31.770 --> 00:00:33.170
it's meant to be the same.

13
00:00:33.170 --> 00:00:37.816
It's just more of like a comparison of
using core stream versus userland 32

14
00:00:37.816 --> 00:00:38.466
package.

15
00:00:38.466 --> 00:00:41.038
&gt;&gt; Okay, so that transform-
&gt;&gt; Use whichever

16
00:00:41.038 --> 00:00:43.601
one-
&gt;&gt; Object is basically what you could use

17
00:00:43.601 --> 00:00:46.040
in the core package rather than-
&gt;&gt; Yes.

18
00:00:46.040 --> 00:00:47.397
&gt;&gt; The 32 package.

19
00:00:47.397 --> 00:00:51.862
&gt;&gt; Yeah, I like the 32 one a little
bit better cuz it's more terse, but

20
00:00:51.862 --> 00:00:53.615
the core one is fine, too.

21
00:00:53.615 --> 00:00:56.520
Use whichever one you like the best.

22
00:00:56.520 --> 00:01:00.150
But you should readable stream, instead
of core stream because if you don't,

23
00:01:00.150 --> 00:01:02.510
it will come to bite you eventually.

24
00:01:02.510 --> 00:01:07.462
[LAUGH] There's a great blog post by
Rod Vagg about exactly that problem.

25
00:01:07.462 --> 00:01:13.323
[LAUGH]
&gt;&gt; Why does node continue to have their

26
00:01:13.323 --> 00:01:19.662
own, like if that's a better way, then
shouldn't node just be like, use userland.

27
00:01:21.630 --> 00:01:22.212
Yes-
&gt;&gt; I agree.

28
00:01:22.212 --> 00:01:24.792
&gt;&gt; [LAUGH]
&gt;&gt; Wouldn't that be good?

29
00:01:24.792 --> 00:01:27.410
[LAUGH] But that's not the world
that we live in, it seems.

30
00:01:28.770 --> 00:01:30.463
&gt;&gt; Because I guess if they did that,

31
00:01:30.463 --> 00:01:34.092
then it would break [LAUGH] everything
that uses the core said there.

32
00:01:34.092 --> 00:01:37.117
&gt;&gt; Yeah, everything can just stop, stop.

33
00:01:37.117 --> 00:01:40.008
[LAUGH]
&gt;&gt; Stop supporting it.

34
00:01:40.008 --> 00:01:44.120
&gt;&gt; Yeah, just like babysit
the versions of VA, I don't know.

35
00:01:44.120 --> 00:01:48.214
That would be, I don't know,
people will always wanna change stuff and

36
00:01:48.214 --> 00:01:51.435
you've always gotta deal with
different kinds of like,

37
00:01:51.435 --> 00:01:54.040
something is never gonna
be perfect as well.

38
00:01:54.040 --> 00:01:57.956
So change is kind of inevitable, but
at least by using userland packages,

39
00:01:57.956 --> 00:02:00.640
you're sort of shielded
from a lot of that change.

40
00:02:00.640 --> 00:02:05.530
So that's why I highly recommend using
userland packages wherever possible,

41
00:02:05.530 --> 00:02:09.730
even for things like query string cuz
that also had some changes over time.

42
00:02:10.860 --> 00:02:14.342
You can make more guarantees about
the versions of these things that people

43
00:02:14.342 --> 00:02:17.104
are going to have when they
install it no matter what version

44
00:02:17.104 --> 00:02:18.388
of node they're running.

45
00:02:24.482 --> 00:02:28.260
Okay, so there are some questions on
the chat, I guess, that I can answer.

46
00:02:30.090 --> 00:02:36.500
So one of them is about if you want
to close this stream, what do you do?

47
00:02:36.500 --> 00:02:43.210
So this gets in a little bit to some
notes that I have later on about

48
00:02:46.570 --> 00:02:49.220
paused mode versus flow mode streams.

49
00:02:49.220 --> 00:02:51.865
So I think that we'll be able to,

50
00:02:51.865 --> 00:02:56.690
maybe that upcoming section
should address that question.

51
00:02:58.550 --> 00:03:02.578
There are ways to destroy
streams sometimes.

52
00:03:02.578 --> 00:03:09.210
Sometimes, streams provide a destroy
method, but usually it's not required.

53
00:03:13.639 --> 00:03:16.235
And then another thing
is if you're piping,

54
00:03:16.235 --> 00:03:19.460
how do other transform
functions know you're closed?

55
00:03:21.650 --> 00:03:27.380
They don't have to is the question or
is the is the answer.

56
00:03:27.380 --> 00:03:31.600
So yeah, but
I'll get into that a bit more later.

57
00:03:31.600 --> 00:03:32.100
So

