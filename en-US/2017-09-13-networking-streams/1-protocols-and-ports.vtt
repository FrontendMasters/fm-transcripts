WEBVTT

1
00:00:00.360 --> 00:00:05.968
On top of these UDP and TCP circuits,
we have this idea of protocols.

2
00:00:05.968 --> 00:00:09.940
Protocols are literal languages
that we use to interact with

3
00:00:09.940 --> 00:00:11.800
different kinds of services.

4
00:00:11.800 --> 00:00:16.660
So a really common one on
the internet is HTTP and HTTPS.

5
00:00:16.660 --> 00:00:21.270
HTTPS just has a layer of
TLS encryption over HTTP.

6
00:00:22.680 --> 00:00:25.760
To send emails we use SMTP,
which we're gonna get into.

7
00:00:25.760 --> 00:00:31.480
It's actually a very simple protocol
that's quite similar to HTTP in some ways.

8
00:00:31.480 --> 00:00:33.788
There's also IMAP and POP3,

9
00:00:33.788 --> 00:00:39.200
also text-based protocols that you
can use to read email messages.

10
00:00:39.200 --> 00:00:43.500
There's IRC, which is a really old but
still useful text-based chat protocol.

11
00:00:45.405 --> 00:00:48.970
Then others like FTP,
not used as much anymore, but

12
00:00:48.970 --> 00:00:54.030
SSH is still pretty common.

13
00:00:55.530 --> 00:00:58.300
So all of these different services,
typically,

14
00:00:58.300 --> 00:01:00.820
have kind of like a default port.

15
00:01:00.820 --> 00:01:02.806
This is not always true.

16
00:01:02.806 --> 00:01:05.652
And some of them have several
ports that they typically use.

17
00:01:05.652 --> 00:01:09.567
FTP is kind of a wild card here
because it has a command port.

18
00:01:09.567 --> 00:01:12.749
It's kind of designed a bit
like how satellites work.

19
00:01:12.749 --> 00:01:17.390
Actually, it's pretty interesting because
you have a port that you listen on,

20
00:01:17.390 --> 00:01:21.860
I think it's 21, or 20, or something,
and that's the control port.

21
00:01:21.860 --> 00:01:24.230
And then, FTP will actually go ahead and

22
00:01:24.230 --> 00:01:27.560
open additional ports when
it does a file transfer.

23
00:01:27.560 --> 00:01:32.500
And so it's kind of complicated to set up
a network config for it for that reason.

24
00:01:32.500 --> 00:01:37.289
But it's fascinating because that's also
how, if you have a ground station and

25
00:01:37.289 --> 00:01:40.387
wanna talk to a satellite,
you have usually a low but

26
00:01:40.387 --> 00:01:43.218
more reliable control
frequency that you use.

27
00:01:43.218 --> 00:01:48.262
And then you use a higher frequency
that has more throughput to pull

28
00:01:48.262 --> 00:01:53.668
down weather raster images from
cameras that are pointed at the earth,

29
00:01:53.668 --> 00:01:55.578
that kind of thing, so.

30
00:01:55.578 --> 00:01:58.900
Kind of a fun way to remember how FTP
works, and also, how satellites work.

31
00:02:00.090 --> 00:02:07.625
So each of these different kinds
of systems lives on a usual port.

32
00:02:07.625 --> 00:02:12.263
So these are numbers between 1 and
65,000 or so

33
00:02:12.263 --> 00:02:18.147
that differentiates the service
on the system, for the most part.

34
00:02:18.147 --> 00:02:20.878
You can always run something
on a different port.

35
00:02:20.878 --> 00:02:25.846
And you have to do because on most
systems to bind to a lower port,

36
00:02:25.846 --> 00:02:28.606
you have to have admin privileges or

37
00:02:28.606 --> 00:02:32.390
you have to have special
kind of configuration.

38
00:02:32.390 --> 00:02:36.746
So it's pretty common when you're
developing to run a HTTP server on port

39
00:02:36.746 --> 00:02:39.780
5000 or port 8000 or something like that.

40
00:02:40.980 --> 00:02:45.200
Here's how it was, 21 for
the control port of FTP.

41
00:02:45.200 --> 00:02:49.610
SSH is usually 22, 25 for
SMTP, 80 is HTTP, etc.

42
00:02:50.840 --> 00:02:53.403
IRC has got a bunch of them, but

43
00:02:53.403 --> 00:02:58.441
I think that's the most common
one that's typically used.

44
00:03:00.341 --> 00:03:04.690
So here's something that you
can all try on your system.

45
00:03:04.690 --> 00:03:08.645
If you go ahead and
if you have netcat installed,

46
00:03:08.645 --> 00:03:13.380
you can try nc- lp 1024,
which probably auto works.

47
00:03:13.380 --> 00:03:17.350
So right here,
when you run netcat with dash l,

48
00:03:17.350 --> 00:03:22.220
it listens on a port, and
p tells it what port to listen on.

49
00:03:22.220 --> 00:03:29.330
So if you try to do 1023,
though, it probably won't work.

50
00:03:29.330 --> 00:03:31.616
So I'm gonna go ahead and
do that on my screen.

51
00:03:31.616 --> 00:03:33.444
Whoa, whoa, whoa.

52
00:03:33.444 --> 00:03:38.954
[LAUGH] All right, so
it's installing something.

53
00:03:38.954 --> 00:03:43.100
[LAUGH] So if I listen on 1024,
there we go.

54
00:03:43.100 --> 00:03:47.352
It works because it's just waiting for
connection.

55
00:03:47.352 --> 00:03:51.352
I'll get a little more into how
to use netcat for testing things.

56
00:03:51.352 --> 00:03:54.521
If I do 1023, permission denied.

57
00:03:54.521 --> 00:03:59.790
So this is a default kinda policy
that most Unix C systems have.

58
00:03:59.790 --> 00:04:01.890
I don't know how it works with Windows,
but it might be similar,

59
00:04:01.890 --> 00:04:03.070
it might not, who knows?

