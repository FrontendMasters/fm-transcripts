WEBVTT

1
00:00:00.150 --> 00:00:02.660
If we have our WebSocket server and
it works, and

2
00:00:02.660 --> 00:00:05.450
you make sure that your cache
if you've messed something up,

3
00:00:05.450 --> 00:00:10.000
you can do Ctrl+Shift+R and
that will tell your browser to just

4
00:00:12.130 --> 00:00:16.480
yeah, usually sometimes,
unless it doesn't, it'll work.

5
00:00:16.480 --> 00:00:18.910
So, here I've got the example.

6
00:00:18.910 --> 00:00:22.990
If I type something like hello,
I get back the result,

7
00:00:22.990 --> 00:00:25.752
uppercase in the browser, hooray.

8
00:00:28.757 --> 00:00:33.330
Great, so we're doing, We're

9
00:00:33.330 --> 00:00:38.093
using streams from Node.js land
in the browser, fantastic.

10
00:00:39.800 --> 00:00:44.188
If we wanna do streams in
Node.js with a WebSocket client,

11
00:00:44.188 --> 00:00:47.013
we can also do that using the same API.

12
00:00:47.013 --> 00:00:51.398
So if I take this little snippet, and I
run it in the browser, then it should take

13
00:00:51.398 --> 00:00:55.535
my standard in, pipe it to the WebSocket
server and pipe it back out again.

14
00:00:57.031 --> 00:01:02.993
So I'm gonna make a little WebSocket,
command line client.

15
00:01:02.993 --> 00:01:07.387
I'll call it nclient, whatever.

16
00:01:11.205 --> 00:01:15.951
So there we are,
that should all work, hooray.

17
00:01:20.303 --> 00:01:24.869
It's pretty nice I think to be able
to use more or less exactly the same

18
00:01:24.869 --> 00:01:30.088
interface at least just to stand up the
connection in the browser and the node.

