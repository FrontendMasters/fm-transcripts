WEBVTT

1
00:00:00.170 --> 00:00:02.340
&gt;&gt; Jason Lengstorf: To actually use this,

2
00:00:02.340 --> 00:00:05.910
we want to be able to modify
the title of our site.

3
00:00:05.910 --> 00:00:09.320
So we have to do a couple of
pieces of boilerplate first.

4
00:00:09.320 --> 00:00:13.385
And what we're going to
do is get back in here,

5
00:00:13.385 --> 00:00:18.704
we're gonna stop our server,
and then I'm going to install

6
00:00:18.704 --> 00:00:23.623
gatsby-plugin-react-helmet and
react-helmet.

7
00:00:23.623 --> 00:00:31.100
So React Helmet is a library for modifying
the head of an HTML document in React.

8
00:00:31.100 --> 00:00:35.975
It allows us to set the title, meta tags,
if you wanted to do Open Graph

9
00:00:35.975 --> 00:00:40.289
descriptions or Twitter Cards,
you would set those in here.

10
00:00:40.289 --> 00:00:44.780
It's also how you can set the language
attribute on your HTML tag.

11
00:00:44.780 --> 00:00:50.162
And a whole bunch of other things that
are really good for making accessible and

12
00:00:50.162 --> 00:00:54.200
full-featured SEO friendly websites.

13
00:00:54.200 --> 00:00:55.350
So let's get those installed.

14
00:00:57.030 --> 00:00:58.630
I guess I actually need to install them.

15
00:01:10.118 --> 00:01:12.820
&gt;&gt; Jason Lengstorf: And
now that we have these installed,

16
00:01:12.820 --> 00:01:16.750
I'm going to get back into
the config file here.

17
00:01:16.750 --> 00:01:22.870
And I just need to add
gatsby-plugin-react-helmet.

18
00:01:22.870 --> 00:01:27.596
This is so that we can do server
side rendering with Helmet.

19
00:01:27.596 --> 00:01:29.696
But again,
you shouldn't have to configure that,

20
00:01:29.696 --> 00:01:31.780
you shouldn't have to
worry about it at all.

21
00:01:31.780 --> 00:01:34.180
So you add the plugin and
you're off to the races.

22
00:01:35.610 --> 00:01:39.970
Next, we can go back into our layout file,
and

23
00:01:39.970 --> 00:01:44.670
our layout file is also going
to be where we set our SEO.

24
00:01:44.670 --> 00:01:50.712
So I'm going to import
Helmet from react-helmet,

25
00:01:50.712 --> 00:01:55.962
and,
&gt;&gt; Jason Lengstorf: Let's get into,

26
00:01:55.962 --> 00:01:59.480
let's see, where are we gonna put this?

27
00:01:59.480 --> 00:02:01.385
How about right below our global styles?

28
00:02:01.385 --> 00:02:07.029
So I'm gonna set Helmet, and
let's add a language attribute for

29
00:02:07.029 --> 00:02:12.975
accessibility,
&gt;&gt; Jason Lengstorf: I'm

30
00:02:12.975 --> 00:02:14.499
also going to add a title.

31
00:02:16.330 --> 00:02:19.140
And right now, we don't have
access to that GraphQL yet, so

32
00:02:19.140 --> 00:02:20.610
let's just make sure that this works.

33
00:02:22.811 --> 00:02:28.538
&gt;&gt; Jason Lengstorf: And then we also
wanna add a meta name description,

34
00:02:28.538 --> 00:02:33.910
and the content will be site description.

35
00:02:33.910 --> 00:02:35.450
So we need to actually load this data, but

36
00:02:35.450 --> 00:02:38.330
for now, we just wanna make sure
that this is doing what we expected.

37
00:02:41.840 --> 00:02:43.490
&gt;&gt; Jason Lengstorf: So let's save that.

38
00:02:48.380 --> 00:02:51.029
&gt;&gt; Jason Lengstorf: And
now when I restart the server,

39
00:02:51.029 --> 00:02:56.421
&gt;&gt; Jason Lengstorf: What we'll see is

40
00:02:56.421 --> 00:03:03.890
that,
&gt;&gt; Jason Lengstorf: Now we get a title.

41
00:03:03.890 --> 00:03:09.660
And if inspect the head, I can also
see that the lang attribute is set,

42
00:03:09.660 --> 00:03:12.900
and we've got the title here.

43
00:03:12.900 --> 00:03:15.340
And let's poke down,
there it is, the description, so

44
00:03:15.340 --> 00:03:17.090
our description is showing up as well.

45
00:03:17.090 --> 00:03:19.840
So everything that we wanted
to happen is showing up, but

46
00:03:19.840 --> 00:03:22.750
it's not using the data that we
added to our site config yet.

47
00:03:22.750 --> 00:03:25.960
So there are lot of ways
that we can get this data.

48
00:03:25.960 --> 00:03:31.090
The easiest one is to
just grab this out as is.

49
00:03:32.270 --> 00:03:35.840
And I'm gonna create a convenience method.

50
00:03:35.840 --> 00:03:37.250
Now, in a typical website,

51
00:03:37.250 --> 00:03:40.180
you'd probably end up using the site
metadata in a bunch of places.

52
00:03:40.180 --> 00:03:42.750
Because this is a pretty
limited scale app, we're not.

53
00:03:42.750 --> 00:03:45.540
But I'm still gonna show you the
abstraction because it's really useful.

54
00:03:45.540 --> 00:03:46.640
I'm gonna write a React Hook.

55
00:03:47.780 --> 00:03:51.300
So I'm gonna create a folder called hooks.

56
00:03:51.300 --> 00:03:59.520
And in, it I'm going to
create use-sitemetadata.js.

57
00:03:59.520 --> 00:04:04.291
And the Hook that we wanna use is
actually not gonna use any React at all.

58
00:04:04.291 --> 00:04:06.160
So this is kind of a fun thing to do.

59
00:04:06.160 --> 00:04:10.830
Instead, we're going to import GraphQL and

60
00:04:10.830 --> 00:04:15.290
a Gatsby Hook called
useStaticQuery from Gatsby.

61
00:04:15.290 --> 00:04:17.707
Let me hide that so
we can see what's going on.

62
00:04:20.335 --> 00:04:23.765
&gt;&gt; Jason Lengstorf: And
then we're gonna define our Hook, so

63
00:04:23.765 --> 00:04:27.989
useSiteMetadata, doesn't
take any arguments.

64
00:04:30.497 --> 00:04:33.130
&gt;&gt; Jason Lengstorf: And what we're
going to do is we're gonna just create

65
00:04:33.130 --> 00:04:33.779
a variable.

66
00:04:33.779 --> 00:04:36.440
&gt;&gt; Student: You've got a typo
there on useSiteMetadata.

67
00:04:39.000 --> 00:04:41.120
&gt;&gt; Jason Lengstorf: Metadata,
okay, perfect.

68
00:04:41.120 --> 00:04:46.354
So we have a useStaticQuery.

69
00:04:46.354 --> 00:04:49.233
And then inside of useStaticQuery,
we're gonna write a GraphQL query.

70
00:04:49.233 --> 00:04:52.763
So we use Gatsby's GraphQL template tag,
and

71
00:04:52.763 --> 00:04:57.210
then we can just paste in that
query that we already wrote.

72
00:05:04.177 --> 00:05:08.978
&gt;&gt; Jason Lengstorf: And the data that
comes back is just gonna be an object that

73
00:05:08.978 --> 00:05:11.190
matches this structure.

74
00:05:11.190 --> 00:05:13.320
So basically this becomes the JSON object.

75
00:05:13.320 --> 00:05:19.130
So we're gonna have
data.site.siteMetadata.title.

76
00:05:19.130 --> 00:05:23.460
For convenience, we don't wanna have to
type data.site.siteMetadata every time,

77
00:05:23.460 --> 00:05:25.800
we just wanna return the metadata.

78
00:05:25.800 --> 00:05:30.645
So we can return data.site.siteMetadata.

79
00:05:33.805 --> 00:05:38.400
&gt;&gt; Jason Lengstorf: And
now we can export default useSiteMetadata.

80
00:05:42.289 --> 00:05:43.760
&gt;&gt; Jason Lengstorf: And
then in our layout,

81
00:05:50.347 --> 00:05:52.751
&gt;&gt; Jason Lengstorf: We can grab that Hook,

82
00:05:52.751 --> 00:05:59.471
so import useSiteMetadata
from hooks/use-sitemetadata.

83
00:05:59.471 --> 00:06:02.250
And then we're gonna have to
refactor this a little bit.

84
00:06:02.250 --> 00:06:06.850
Right now we're using the implicit return,
that's what this parentheses is for.

85
00:06:06.850 --> 00:06:13.210
So I'm going to just highlight the whole
thing, wrap it in a curly brace,

86
00:06:13.210 --> 00:06:15.690
and then we're gonna return, down here.

87
00:06:15.690 --> 00:06:20.560
And then I'm going to do,
we want the title and

88
00:06:20.560 --> 00:06:25.760
description from useSite, oops,

89
00:06:25.760 --> 00:06:29.070
no, not from, = useSiteMetadata.

90
00:06:30.770 --> 00:06:33.620
Okay, so
what we're doing is in useSiteMetadata,

91
00:06:33.620 --> 00:06:35.760
we're just grabbing that metadata object.

92
00:06:35.760 --> 00:06:39.050
And then here we're able to just
destructure it and get only what we need,

93
00:06:39.050 --> 00:06:43.810
so just the pieces that we're actually
gonna use come out of that data.

94
00:06:43.810 --> 00:06:50.148
And then down here, I can reset this to
just use the pieces that we wanted to use.

95
00:06:52.625 --> 00:06:55.617
&gt;&gt; Jason Lengstorf: So we've got our
title and description using the title and

96
00:06:55.617 --> 00:06:58.805
description that we're loading
from our site's metadata.

97
00:07:03.137 --> 00:07:09.360
&gt;&gt; Jason Lengstorf: And,
&gt;&gt; Jason Lengstorf: That's

98
00:07:09.360 --> 00:07:12.970
got a new query in it, so
I'm gonna stop and restart the page.

99
00:07:12.970 --> 00:07:15.230
We're working on improvements for
that in the Gatsby Core.

100
00:07:15.230 --> 00:07:18.205
But at the moment, when you change your
GraphQL queries, a lot of times you're

101
00:07:18.205 --> 00:07:21.070
gonna need to stop and restart the page
just to make sure that it picks those up.

102
00:07:22.110 --> 00:07:27.630
And now you can see our Frontend Masters
Gatsby workshop is being loaded,

103
00:07:27.630 --> 00:07:31.720
and also our description
is being loaded as well.

104
00:07:31.720 --> 00:07:39.360
So with a combination of
GraphQL to get this data,

105
00:07:39.360 --> 00:07:44.850
and then React Hooks to make it really
easy to access this data, we have a really

106
00:07:44.850 --> 00:07:50.670
powerful solution for
tossing data around inside of our app.

107
00:07:50.670 --> 00:07:53.020
This is a really nice workflow.

108
00:07:53.020 --> 00:07:57.745
And the great thing about it is that as
your site scales, you don't have to go and

109
00:07:57.745 --> 00:08:02.320
refactor that query in a bunch of places,
you're going to use site metadata.

110
00:08:02.320 --> 00:08:04.670
You're like,
we added an author page, cool,

111
00:08:04.670 --> 00:08:06.140
now it's available to the entire app.

112
00:08:07.310 --> 00:08:10.210
So it's a really scalable way
to manage that data access.

