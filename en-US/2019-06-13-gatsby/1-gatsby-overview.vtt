WEBVTT

1
00:00:00.250 --> 00:00:01.806
&gt;&gt; Jason Lengstorf: But
before we can talk about what Gatsby is,

2
00:00:01.806 --> 00:00:03.920
we need to understand the problems
that Gatsby is solving.

3
00:00:03.920 --> 00:00:07.560
So let's look at the challenges
of modern web development.

4
00:00:07.560 --> 00:00:12.730
And modern web development is
such a powerful thing, but

5
00:00:12.730 --> 00:00:16.550
it comes with this just kind
of big knot of challenges.

6
00:00:16.550 --> 00:00:20.900
And three of them, if we were to
put them into their big buckets,

7
00:00:20.900 --> 00:00:22.680
one is just that getting
started is overwhelming.

8
00:00:22.680 --> 00:00:26.810
There are dozens or hundreds of tools for
for doing just frontend development.

9
00:00:26.810 --> 00:00:28.870
And that can mean that
when you get started,

10
00:00:28.870 --> 00:00:30.950
it's hard to decide what you should use.

11
00:00:30.950 --> 00:00:33.440
It's hard to figure out how
all these pieces fit together.

12
00:00:33.440 --> 00:00:36.610
It's hard to get it customized
to do the thing that you want.

13
00:00:36.610 --> 00:00:40.040
You sometimes feel like,
I wanna write some code.

14
00:00:40.040 --> 00:00:43.526
But ultimately, what you end up doing is
spending hours reading documentation for

15
00:00:43.526 --> 00:00:46.487
various projects just to get something
up and running in the browser.

16
00:00:48.051 --> 00:00:50.860
&gt;&gt; Jason Lengstorf: The way that we
manage our data is also evolving.

17
00:00:50.860 --> 00:00:56.500
We are no longer using just monolithic
CMSs, where the database, the content

18
00:00:56.500 --> 00:01:01.360
management part, the UI, and everything is
handled through one monolithic code base.

19
00:01:01.360 --> 00:01:04.100
That's starting to break apart, and we're
starting to see different strategies for

20
00:01:04.100 --> 00:01:06.000
this, and so we need to be able
to address that in our code.

21
00:01:07.110 --> 00:01:09.170
And third,
getting it right is just really hard.

22
00:01:09.170 --> 00:01:12.710
You can make an entire career
out of multiple subsections.

23
00:01:12.710 --> 00:01:16.630
You can become a DevOps specialist, and
spend your whole career just launching,

24
00:01:16.630 --> 00:01:18.150
and scaling, and deploying sites.

25
00:01:18.150 --> 00:01:21.480
You can become a performance expert or
UX expert.

26
00:01:21.480 --> 00:01:23.140
And each of those things,

27
00:01:23.140 --> 00:01:26.730
it's deep enough that you could spend
your entire career learning and

28
00:01:26.730 --> 00:01:30.060
improving in that area, and you'd probably
still never hit the bottom of that.

29
00:01:30.060 --> 00:01:32.740
You'd probably still never learn
everything there is to know.

30
00:01:32.740 --> 00:01:35.600
So if we're gonna build
these great experiences, and

31
00:01:35.600 --> 00:01:38.370
we have to do all of that,
we have to make a great UX,

32
00:01:38.370 --> 00:01:43.220
we have to get it up and performant,
we have to get it deployed and scaled.

33
00:01:43.220 --> 00:01:47.480
It's just really hard to get all
of that right, as one person or

34
00:01:47.480 --> 00:01:50.130
as a small team, and so
we need to address that.

35
00:01:50.130 --> 00:01:53.900
And so Gatsby is designed to
try to address these problems.

36
00:01:53.900 --> 00:01:59.630
And so the first way that we do that
is Gatsby is designed to be a shortcut.

37
00:01:59.630 --> 00:02:03.520
We wanna allow developers to quickly
build excellent apps and sites, and

38
00:02:03.520 --> 00:02:06.480
we do that by helping to
eliminate boilerplate.

39
00:02:06.480 --> 00:02:10.420
Boilerplate is really common
in modern JavaScript,

40
00:02:10.420 --> 00:02:15.080
in modern apps in general,
where you want to just build something.

41
00:02:15.080 --> 00:02:18.720
I wanna open up the browser and
type hello world and see it show up.

42
00:02:18.720 --> 00:02:22.820
But it ends up being a huge amount
of setup to make this work.

43
00:02:22.820 --> 00:02:24.280
And so let's do this,

44
00:02:24.280 --> 00:02:29.210
let's see how we can get from our console,
we wanna open something up,

45
00:02:29.210 --> 00:02:31.850
open a code editor, write something,
and then show it in the browser.

46
00:02:33.110 --> 00:02:35.450
So I do that, I'm like, great,
this is gonna be so much fun.

47
00:02:35.450 --> 00:02:36.950
But then I need Webpack.

48
00:02:36.950 --> 00:02:37.880
Okay, why do I need Webpack?

49
00:02:37.880 --> 00:02:41.480
Well, I need the JavaScript to be
bundled in a way that can be used on

50
00:02:41.480 --> 00:02:42.310
the page, okay.

51
00:02:42.310 --> 00:02:45.900
All right, but then I wanna use ES15,
so I need Babel.

52
00:02:45.900 --> 00:02:51.550
Okay, so then I need to do CSS, and
I wanna make sure that that's optimized

53
00:02:51.550 --> 00:02:56.690
properly, and has all the polyfills and
the proprietary property names.

54
00:02:56.690 --> 00:03:00.584
Okay, so now I've got PostCSS in here,
and then I need to get it on a server, so

55
00:03:00.584 --> 00:03:02.270
I'm now dealing with Node.js.

56
00:03:02.270 --> 00:03:06.160
And then when I get that Node server
stood up, I have to post that somewhere.

57
00:03:06.160 --> 00:03:10.810
So now I'm looking at a container,
or Kubernetes or Docker, or

58
00:03:10.810 --> 00:03:13.860
I'm trying to get it in somewhere,
all right.

59
00:03:13.860 --> 00:03:19.891
So then I need to route this somehow,
so now I'm installing

60
00:03:19.891 --> 00:03:23.460
Nginex to make sure that it's pointing
to my app when somebody hits my domain.

61
00:03:23.460 --> 00:03:29.154
And the assets are just chewing through my
bandwidth, so now I gotta install a CDN.

62
00:03:29.154 --> 00:03:32.830
And suddenly,
I haven't even written any code yet.

63
00:03:32.830 --> 00:03:35.710
This is just the stuff that I
have to do to get the site up and

64
00:03:35.710 --> 00:03:39.860
running in my browser, and then out onto
the Internet, and that's a lot of stuff.

65
00:03:40.960 --> 00:03:44.250
So Gatsby's removing the boilerplate for
getting started and deploying.

66
00:03:44.250 --> 00:03:48.710
We want you to be able to,
very quickly, just open the browser and

67
00:03:48.710 --> 00:03:52.690
start seeing the stuff that you're typing,
no boilerplate, no nonsense.

68
00:03:52.690 --> 00:03:54.930
And so it looks a little bit like this.

69
00:03:54.930 --> 00:03:59.800
You have your code editor, you install
Gatsby, and then you just build a site.

70
00:03:59.800 --> 00:04:03.640
You don't have to worry about Webpack or
Babel, or any of this boilerplate.

71
00:04:03.640 --> 00:04:06.620
You just get to write some code,
and you see it in the browser.

72
00:04:06.620 --> 00:04:09.047
A library loads as you develop,
and when you're ready,

73
00:04:09.047 --> 00:04:11.070
you just deploy it to Netlify.

74
00:04:11.070 --> 00:04:14.756
And the great thing about this is that
to use Gatsby, there's very little to

75
00:04:14.756 --> 00:04:18.749
learn that you wouldn't already know if
you were working with React and GraphQL.

76
00:04:18.749 --> 00:04:22.750
Because under the hood,
Gatsby's just using React and GraphQL.

77
00:04:22.750 --> 00:04:27.290
So you get to work with languages that
you already know that will transfer from

78
00:04:27.290 --> 00:04:29.500
other jobs or other frameworks.

79
00:04:29.500 --> 00:04:31.720
If you're working in React or

80
00:04:31.720 --> 00:04:37.200
if you're working with a GraphQL code
base, those skills are gonna transfer.

81
00:04:37.200 --> 00:04:40.930
You don't have to relearn a new language
to use Gatsby, you just get to use React.

82
00:04:40.930 --> 00:04:44.760
And then when you deploy it in Netlify,
Netlify just watches your GitHub branches.

83
00:04:44.760 --> 00:04:46.930
And when you push to that GitHub branch,
it's like, okay, cool,

84
00:04:46.930 --> 00:04:48.530
I'll put that on the Internet for you.

85
00:04:48.530 --> 00:04:50.310
And you don't have to
worry about deployment.

86
00:04:50.310 --> 00:04:53.350
Because Gatsby's deploying
as static assets,

87
00:04:53.350 --> 00:04:54.900
you also don't have to
worry about server scaling.

88
00:04:54.900 --> 00:04:56.510
You don't have to worry
about database charting.

89
00:04:56.510 --> 00:05:00.070
You don't have to worry about
making things synchronize, or

90
00:05:00.070 --> 00:05:02.810
eventually consistent, or
all these words that are terrifying

91
00:05:02.810 --> 00:05:04.980
when you start thinking about
scaling production apps.

92
00:05:06.010 --> 00:05:10.710
Instead, you just say, here's a bucket of
static files, I'm gonna put this on a CDN.

93
00:05:10.710 --> 00:05:14.010
CDNs are designed to geographically
distribute that stuff.

94
00:05:14.010 --> 00:05:17.150
And because it's static, you don't
have to worry about database access,

95
00:05:17.150 --> 00:05:18.660
you don't have to worry
about the server going down.

96
00:05:18.660 --> 00:05:20.270
You don't have to worry about DDoS.

97
00:05:20.270 --> 00:05:24.347
I mean,
it takes quite a bit to DDoS a CDN, right?

98
00:05:24.347 --> 00:05:28.697
So your site is going to be resilient,
and you don't have to think about it.

99
00:05:28.697 --> 00:05:30.621
You just say, Netlify,
please host my site.

100
00:05:30.621 --> 00:05:34.727
And it says, gotcha, continue about your
day, don't worry about this anymore.

