WEBVTT

1
00:00:00.310 --> 00:00:03.240
&gt;&gt; Jason Lengstorf: The next thing
that Gatsby trying to do is that,

2
00:00:03.240 --> 00:00:06.720
Gatsby is acting as an orchestration
layer for taming the Content Mesh.

3
00:00:06.720 --> 00:00:10.159
I'm saying a lot of words, don't worry,
I'm going to explain them.

4
00:00:10.159 --> 00:00:13.160
And the many sources of data
that are available on the web.

5
00:00:13.160 --> 00:00:16.810
So the monolithic CMS,
as I said, is kinda dying.

6
00:00:16.810 --> 00:00:21.580
We're still seeing things like WordPress
like Drupal, and they're still being used.

7
00:00:21.580 --> 00:00:25.120
But we're starting to see them shift
toward this model of being headless,

8
00:00:25.120 --> 00:00:28.250
they act as an API as
opposed to a UI layer.

9
00:00:28.250 --> 00:00:31.540
Decoupled Drupal is very popular,

10
00:00:31.540 --> 00:00:34.910
WordPress now has an API so
you can do headless WordPress.

11
00:00:36.310 --> 00:00:39.990
There are entire CMS that are being built,
designed to be headless,

12
00:00:39.990 --> 00:00:44.090
things like Sanity.io,
things like Contentful.

13
00:00:44.090 --> 00:00:46.760
These are companies that were
designed without a UI layer,

14
00:00:46.760 --> 00:00:49.180
they're just a way to manage data.

15
00:00:49.180 --> 00:00:51.860
And we need to be able to deal with that,
right?

16
00:00:51.860 --> 00:00:54.670
So you need another solution for
dealing with that data.

17
00:00:55.750 --> 00:00:58.840
So we call this Gatsby, the Content Mesh,

18
00:00:58.840 --> 00:01:02.870
my coworker, Sam Bhagwat,
came up with this term.

19
00:01:02.870 --> 00:01:07.120
And it's the idea that, if you have
data from all these disparate places.

20
00:01:07.120 --> 00:01:11.110
You're able to stitch them together
into one common layer, the mesh.

21
00:01:11.110 --> 00:01:14.960
And that normalizes that data in
a way that allows us to access it.

22
00:01:14.960 --> 00:01:17.490
Where it doesn't matter when
you're building your site,

23
00:01:17.490 --> 00:01:23.790
if you're doing it with WordPress, or
Shopify, or a combination thereof.

24
00:01:23.790 --> 00:01:28.820
You can also do it with local files,
you can do it with a Jason, or a CSV.

25
00:01:28.820 --> 00:01:32.810
Whatever you've got, we can pull it in and
we normalize it into this graphical layer.

26
00:01:32.810 --> 00:01:35.932
So it feels the same to work with your
data, no matter where that data came from.

27
00:01:38.422 --> 00:01:41.138
&gt;&gt; Jason Lengstorf: So in an old
school site, if you were to take and

28
00:01:41.138 --> 00:01:41.980
look at this.

29
00:01:41.980 --> 00:01:46.520
You've got a search bar, you've got some
images, some text, some products, and

30
00:01:46.520 --> 00:01:48.260
you would have to make a decision.

31
00:01:48.260 --> 00:01:52.610
All right, is this an e-commerce site or
is this a blog?

32
00:01:52.610 --> 00:01:56.156
Because, if it's a blog,
maybe we're gonna use WordPress.

33
00:01:56.156 --> 00:02:00.590
And then we have to figure out a way to
shoehorn e-commerce into a WordPress site.

34
00:02:00.590 --> 00:02:05.260
Or maybe we're gonna use Magento
because it's an e-commerce site.

35
00:02:05.260 --> 00:02:08.430
But now we have to shoehorn
a blog into Magento.

36
00:02:08.430 --> 00:02:13.330
And both of them can handle that, but
it's not what they were built to do.

37
00:02:13.330 --> 00:02:15.420
WordPress is built to
be blogging software,

38
00:02:15.420 --> 00:02:17.810
Magento was built to be
e-commerce software.

39
00:02:17.810 --> 00:02:22.330
And most tools are purpose-built for
a thing, they do one thing really well.

40
00:02:22.330 --> 00:02:25.800
And that's what this headless CMS
specialization is really showing us.

41
00:02:25.800 --> 00:02:30.070
Is that you can get these wonderful
purpose-built tools that do one thing so,

42
00:02:30.070 --> 00:02:32.790
so well, and
that's what you wanna use it for.

43
00:02:32.790 --> 00:02:35.700
With the Content Mesh,
you're able to do that, so

44
00:02:35.700 --> 00:02:37.800
you just use the service
that solves the problem.

45
00:02:37.800 --> 00:02:40.640
If you want a great search experience,
hook in Algolia.

46
00:02:40.640 --> 00:02:45.200
You want content management for your text,
pull in Contentful, it's great for that.

47
00:02:45.200 --> 00:02:49.740
You want to make sure that your
assets are served in an optimized and

48
00:02:49.740 --> 00:02:52.030
cacheable way,
Cloudinary is really good for that.

49
00:02:52.030 --> 00:02:54.670
You wanna sell something,
Stripe is excellent for that.

50
00:02:54.670 --> 00:02:57.170
So you don't have to make
these trade offs anymore,

51
00:02:57.170 --> 00:02:59.450
you can just look at what you need.

52
00:02:59.450 --> 00:03:03.780
Look at the best tool for each task,
not for overall like on average,

53
00:03:03.780 --> 00:03:05.200
this is better than everything else.

54
00:03:05.200 --> 00:03:10.199
But, specifically for this task, this tool
is the best, and then choose that tool and

55
00:03:10.199 --> 00:03:12.955
stitch it together into
one solidified layer.

56
00:03:14.876 --> 00:03:17.531
&gt;&gt; Jason Lengstorf: What this
looks like in Gatsby is we're able

57
00:03:17.531 --> 00:03:20.084
to just put source plugins for anything.

58
00:03:20.084 --> 00:03:22.840
Another GraphQL API,
I'm not gonna name all these logos,

59
00:03:22.840 --> 00:03:27.070
but you're able to just pull
in content from everywhere.

60
00:03:27.070 --> 00:03:29.830
And it comes into Gatsby
as this unified layer.

61
00:03:29.830 --> 00:03:32.463
You then build using reacting GraphQL.

62
00:03:32.463 --> 00:03:36.960
The GraphQL layer allows you to query for
the data from any of these data sources.

63
00:03:36.960 --> 00:03:39.939
Or all of them together in
one kind of unified query,

64
00:03:39.939 --> 00:03:42.932
which we'll look at a little
later in the workshop.

65
00:03:42.932 --> 00:03:45.957
Once you're done,
you run the Gatsby build process,

66
00:03:45.957 --> 00:03:48.600
which gives you a folder
full of static assets.

67
00:03:48.600 --> 00:03:50.530
Those static assets can go up on any CDN,

68
00:03:50.530 --> 00:03:53.470
you can host them on, you can throw
them up on an FTP, if you want.

69
00:03:53.470 --> 00:03:57.010
Or you can put them on Amazon S3,
on Netlify, on Fastly,

70
00:03:57.010 --> 00:04:00.030
on whatever you prefer,
whatever you have available to you.

71
00:04:00.030 --> 00:04:04.450
And then once you're done, this is where
Gatsby really stands out from other static

72
00:04:04.450 --> 00:04:08.360
site generators because we go beyond that.

73
00:04:08.360 --> 00:04:12.820
Once you hit the browser, it rehydrate
into a fully functional reactor.

74
00:04:12.820 --> 00:04:14.990
So you're not just serving static sites,

75
00:04:14.990 --> 00:04:17.820
you're actually serving
Progressive Web Apps.

76
00:04:17.820 --> 00:04:22.050
And to look at how that kinda works
in practice, this is our Swag Store.

77
00:04:22.050 --> 00:04:25.680
Now, this is an old version in the UI,
the new version is a little different.

78
00:04:25.680 --> 00:04:29.898
We built this store because everybody
who contributes to Gatsby is kind of

79
00:04:29.898 --> 00:04:33.036
automatically invited to be
a maintainer of our repo.

80
00:04:33.036 --> 00:04:37.500
And we also give you a coupon code for
proclaiming a free item swag.

81
00:04:37.500 --> 00:04:40.020
And we do that to say thank you to the
people who are willing to volunteer their

82
00:04:40.020 --> 00:04:42.100
time to maintain Opensource.

83
00:04:42.100 --> 00:04:45.710
So the way this works
is we've got products,

84
00:04:45.710 --> 00:04:47.220
you can add those products to a cart.

85
00:04:47.220 --> 00:04:48.950
And you're able to log in
with your GitHub account,

86
00:04:48.950 --> 00:04:51.940
which is the how we verify whether or
not you're a contributor to our repo.

87
00:04:51.940 --> 00:04:56.180
So we pull in the products
from Shopify at Build Time.

88
00:04:56.180 --> 00:04:59.715
We query those products from our database,
and we build static HTML with those.

89
00:04:59.715 --> 00:05:03.920
At run time, we check whether or
not you're logged in, and

90
00:05:03.920 --> 00:05:07.300
we use Shopify API's to
build a shopping cart.

91
00:05:07.300 --> 00:05:12.235
So we're able to kind of attach
a shopping cart from Shopify to your user

92
00:05:12.235 --> 00:05:14.220
account that's at Auth0.

93
00:05:14.220 --> 00:05:18.480
And all of that is tied to static HTML
that we built ahead of time with Shopify.

94
00:05:18.480 --> 00:05:21.240
Once you're logged in,
we do the same thing.

95
00:05:21.240 --> 00:05:24.770
We use GitHub to pull in
your recent contribution, so

96
00:05:24.770 --> 00:05:26.500
how many contributions you made.

97
00:05:26.500 --> 00:05:30.410
And then the actual contribution that
was most recent, and then below that,

98
00:05:30.410 --> 00:05:31.340
we just pull in some issues.

99
00:05:31.340 --> 00:05:32.800
These are the latest issues, and

100
00:05:32.800 --> 00:05:35.930
we want that to be dynamic because
those change by the minute, right?

101
00:05:37.840 --> 00:05:41.390
So this leads us to the third
thing that Gatsby is, which is,

102
00:05:41.390 --> 00:05:42.710
it's a Progressive Web App generator.

103
00:05:42.710 --> 00:05:46.370
The idea is that we just wanna make
the right thing the easy thing.

104
00:05:46.370 --> 00:05:49.510
We've talked about how hard it is
to get all of these things right.

105
00:05:49.510 --> 00:05:53.550
Well, if you need to deliver
a dynamic app experience.

106
00:05:53.550 --> 00:05:56.920
And you need to design
this really interactive,

107
00:05:56.920 --> 00:05:59.690
really highly functional,
extremely scalable,

108
00:05:59.690 --> 00:06:05.150
fast website, doing all of that from
scratch would be extremely hard.

109
00:06:05.150 --> 00:06:09.120
But, if Gatsby lays the foundation,
so that you don't have to think about

110
00:06:09.120 --> 00:06:12.670
the vast majority of what you're doing and
just focus on the experience.

111
00:06:12.670 --> 00:06:14.640
Then you get most of it right by default,

112
00:06:14.640 --> 00:06:16.440
we call this making the right
thing the easy thing.

113
00:06:16.440 --> 00:06:19.940
And the idea behind making the right
thing the easy thing is that.

114
00:06:19.940 --> 00:06:23.590
By setting good defaults,
you as an app developer,

115
00:06:23.590 --> 00:06:26.830
don't need to think about
making good choices.

116
00:06:26.830 --> 00:06:29.330
You make good choices
by not making choices.

