WEBVTT

1
00:00:00.000 --> 00:00:01.220
&gt;&gt; Jason Lengstorf: We're kind
of coming up on the end here.

2
00:00:01.220 --> 00:00:03.850
So the last thing that we really want to

3
00:00:03.850 --> 00:00:08.170
do is make sure that we
didn't do anything silly.

4
00:00:08.170 --> 00:00:11.650
So the way that we're going to do that is
we're going to check the output and make

5
00:00:11.650 --> 00:00:16.300
sure that the bundle that we built is only
including stuff that we actually need.

6
00:00:18.640 --> 00:00:21.160
And a lot of projects like any time
that you're using a bundler or

7
00:00:21.160 --> 00:00:24.150
something like webpack or
anything like that.

8
00:00:24.150 --> 00:00:28.130
A risk that you run is
accidentally including

9
00:00:28.130 --> 00:00:30.720
a whole bunch of stuff that
you're not actually using.

10
00:00:30.720 --> 00:00:34.300
So the way that we are going
to solve this problem,

11
00:00:35.990 --> 00:00:37.300
we actually don't even
know if it's a problem.

12
00:00:37.300 --> 00:00:41.035
The way that we're gonna see
if we have this problem,

13
00:00:41.035 --> 00:00:44.028
is we're going to install a new plug-in.

14
00:00:44.028 --> 00:00:47.740
And this plugin is called,
let's do NPM install.

15
00:00:47.740 --> 00:00:48.768
&gt;&gt; Student: You have to unfreeze.

16
00:00:48.768 --> 00:00:50.650
&gt;&gt; Jason Lengstorf: Gatsby,
let me unfreeze.

17
00:00:51.830 --> 00:00:52.550
Here we go.

18
00:00:52.550 --> 00:00:56.770
Okay, so
we're gonna install a new plug-in.

19
00:00:56.770 --> 00:01:06.000
That plugin is called
gatbsy-plugin-webbpack-bundle-analyzer and

20
00:01:06.000 --> 00:01:07.100
we're going to let that install.

21
00:01:08.630 --> 00:01:12.467
And as this installs,
we're going to close things down and

22
00:01:12.467 --> 00:01:14.778
get back to just our Gatsby config.

23
00:01:21.093 --> 00:01:22.938
&gt;&gt; Jason Lengstorf: And
we can just drop this

24
00:01:22.938 --> 00:01:27.873
in,
&gt;&gt; Jason Lengstorf: Pretty much

25
00:01:27.873 --> 00:01:30.393
wherever we want to here.

26
00:01:30.393 --> 00:01:37.331
Let's,
&gt;&gt; Jason Lengstorf: Drop

27
00:01:37.331 --> 00:01:38.330
this right at the bottom.

28
00:01:39.900 --> 00:01:42.772
And so what we're gonna do is resolve

29
00:01:42.772 --> 00:01:51.320
the gatsby-plugin-webpack-bundle-analyzer
and

30
00:01:51.320 --> 00:01:53.570
we're going to set some options on this.

31
00:01:53.570 --> 00:01:59.210
The first one is we want this
to run on our production bundle.

32
00:01:59.210 --> 00:02:03.215
It's not super useful on the development
bundle because when we're running and

33
00:02:03.215 --> 00:02:07.720
Gatsby developed, we're not actually
doing the optimizations to.

34
00:02:07.720 --> 00:02:09.560
We want hot module reloading to work.

35
00:02:09.560 --> 00:02:11.520
So we're not gonna do all that
work to split the bundles and

36
00:02:11.520 --> 00:02:13.490
stuff it would it would be too slow.

37
00:02:13.490 --> 00:02:16.560
So in production mode,
that's what we wanna check.

38
00:02:16.560 --> 00:02:20.620
Also, we wanna make sure that
we don't run this all the time.

39
00:02:20.620 --> 00:02:25.080
So we're gonna make sure that it only
runs if we set a an environment variable.

40
00:02:25.080 --> 00:02:31.718
So we're going to set process end and
we're gonna call this ANALYZE_BUNDLE_SIZE.

41
00:02:31.718 --> 00:02:37.350
So if ANALYZE_BUNDLE_SIZE is true,
it will work.

42
00:02:37.350 --> 00:02:39.810
Otherwise, it's going
to disable this plugin.

43
00:02:42.290 --> 00:02:46.001
We want to generate a stats file,

44
00:02:46.001 --> 00:02:50.790
singular, generateStatFile, is true.

45
00:02:50.790 --> 00:02:57.561
And then, we also want to set
the analyzerMode to static.

46
00:02:57.561 --> 00:03:01.854
And all of these options are kinda,
don't worry about them too much

47
00:03:01.854 --> 00:03:05.630
because this is where we start
getting into web pack stuff.

48
00:03:05.630 --> 00:03:09.948
We're now doing web pack config through

49
00:03:09.948 --> 00:03:14.779
a proxy config which
is don't overthink it.

50
00:03:14.779 --> 00:03:15.842
[LAUGH] Basically,

51
00:03:15.842 --> 00:03:20.500
what we want is we want a way to look
at visually what's in our bundle.

52
00:03:20.500 --> 00:03:25.500
So now that we have this,
I'm gonna open up the package.json,

53
00:03:25.500 --> 00:03:28.230
and I'm gonna add a new script here.

54
00:03:28.230 --> 00:03:29.795
And this script is gonna
be called analyze.

55
00:03:29.795 --> 00:03:36.782
[SOUND] And
inside of it we're going to use.

56
00:03:36.782 --> 00:03:40.940
If you installed cross end if you're on
Windows you're going to use cross end.

57
00:03:40.940 --> 00:03:42.370
I'm going to use to show it.

58
00:03:42.370 --> 00:03:43.790
You don't need this if
you're on a Mac though.

59
00:03:43.790 --> 00:03:50.508
So I'm going to do
ANALYZE_BUNDLE_SIZE equals true.

60
00:03:53.008 --> 00:03:55.350
&gt;&gt; Jason Lengstorf: And
then we're gonna do gatsby build.

61
00:03:55.350 --> 00:03:59.450
So if you're on a Mac, you can leave
this part out and it will work.

62
00:03:59.450 --> 00:04:03.120
If you're on Windows, that's just gonna
make sure that the environment variable

63
00:04:03.120 --> 00:04:04.070
actually gets picked up.

64
00:04:04.070 --> 00:04:07.910
But you do need to make sure that
you have cross end installed or

65
00:04:07.910 --> 00:04:08.730
else its not gonna work.

66
00:04:10.130 --> 00:04:16.440
So once we've got this running,
what we can do is jump into our I term.

67
00:04:17.610 --> 00:04:23.315
And I'm going to do npm run analyze.

68
00:04:23.315 --> 00:04:25.868
And so we can see appear that it does run,

69
00:04:25.868 --> 00:04:29.040
ANALYZE_BUNDLE_SIZE true
with gatsby build.

70
00:04:29.040 --> 00:04:33.130
It's doing all the build stuff
that we want it to build and

71
00:04:33.130 --> 00:04:36.080
then it opens up this report.

72
00:04:36.080 --> 00:04:41.110
So this report that opens up is
a little intimidating to look at but

73
00:04:41.110 --> 00:04:44.970
what it shows us is kind of
everything that's being used.

74
00:04:46.670 --> 00:04:49.710
And so what's important about this is
that we can start to take a look and

75
00:04:49.710 --> 00:04:52.310
see are we including anything
that we shouldn't be.

76
00:04:52.310 --> 00:04:58.370
A good example of a thing that you
might find in here is all of Lodash.

77
00:04:58.370 --> 00:04:59.820
If you're using one or

78
00:04:59.820 --> 00:05:03.780
two Lodash functions,
if you include them the wrong way,

79
00:05:03.780 --> 00:05:07.650
you'll end up importing the entire Lodash
library which is hundreds of kilobytes.

80
00:05:07.650 --> 00:05:08.935
You don't need that.

81
00:05:08.935 --> 00:05:10.540
Moment.js is another one.

82
00:05:10.540 --> 00:05:14.390
If you import something
from moment is huge.

83
00:05:14.390 --> 00:05:18.020
And so maybe you wanna refactor
to use like date functions

84
00:05:20.140 --> 00:05:25.530
with load Ash you can refactor to
use named exports from loadashes.

85
00:05:25.530 --> 00:05:27.370
And that will give you the clean up.

86
00:05:27.370 --> 00:05:30.190
Maybe you wanna use low
dashes like lib slash get

87
00:05:30.190 --> 00:05:33.540
to get to the just
the function that you need.

88
00:05:33.540 --> 00:05:36.690
There are a lot of different
ways that you can clean this up.

89
00:05:36.690 --> 00:05:38.730
This isn't a performance.

90
00:05:38.730 --> 00:05:39.860
It's not a performance workshop.

91
00:05:39.860 --> 00:05:42.540
So we're not gonna go like
super deep into this.

92
00:05:42.540 --> 00:05:45.200
But it's a way for you to look and
see like, all right,

93
00:05:45.200 --> 00:05:49.260
we're pulling down,
like 200 kilobytes of JavaScript.

94
00:05:49.260 --> 00:05:51.810
That's not an insignificant amount.

95
00:05:51.810 --> 00:05:52.806
Why is that coming in?

96
00:05:52.806 --> 00:05:55.174
So you've got react-dom,
that's the thing that you expect.

97
00:05:55.174 --> 00:05:59.380
Core.js is another thing that we
need emotion and reach, right?

98
00:05:59.380 --> 00:06:02.240
So all this stuff that we're seeing and
stuff that we expect to be here,

99
00:06:02.240 --> 00:06:04.150
there are no surprises.

100
00:06:04.150 --> 00:06:08.410
And the same with the the components,
we're also seeing, like, all right,

101
00:06:08.410 --> 00:06:10.660
these components are only
bringing in what they need.

102
00:06:10.660 --> 00:06:13.700
There's no outside stuff
getting all over the place.

103
00:06:15.820 --> 00:06:18.510
React helmet is only included once,
which is good.

104
00:06:18.510 --> 00:06:21.660
Same with the background image in Gatsby
image, they're only included once.

105
00:06:21.660 --> 00:06:23.460
We're not seeing them in multiple places.

106
00:06:23.460 --> 00:06:29.270
So basically it's a good way to just
do a final visual check that like,

107
00:06:29.270 --> 00:06:31.810
whoa, why is this bundle five megabytes or
something?

