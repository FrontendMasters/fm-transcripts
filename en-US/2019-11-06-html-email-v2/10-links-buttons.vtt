WEBVTT

1
00:00:00.000 --> 00:00:02.880
&gt;&gt; Jason Rodriguez: Now we're gonna
look at links and buttons in our emails.

2
00:00:02.880 --> 00:00:07.310
Because this is where all the work
happens in email campaigns.

3
00:00:07.310 --> 00:00:10.850
I mentioned earlier that all of your
campaigns should have some sort of goal

4
00:00:10.850 --> 00:00:12.320
associated with them.

5
00:00:12.320 --> 00:00:15.920
So it's very rare that we're sending
purely informational emails.

6
00:00:15.920 --> 00:00:19.370
We almost always want somebody
to take some action and

7
00:00:19.370 --> 00:00:22.000
an email,
whether that's visiting a website,

8
00:00:22.000 --> 00:00:26.620
opening up an app on their mobile device,
going to some sort of form.

9
00:00:26.620 --> 00:00:29.050
We want our emails to do some work for us.

10
00:00:29.050 --> 00:00:31.748
And the way that happens is through links.

11
00:00:31.748 --> 00:00:34.680
So using hyperlinks to take
them different places.

12
00:00:34.680 --> 00:00:38.671
So it's very similar to the web, like
the magic of the web is in the hyperlink.

13
00:00:38.671 --> 00:00:39.534
That's what the web is built on.

14
00:00:39.534 --> 00:00:41.970
And the same thing applies for email.

15
00:00:41.970 --> 00:00:44.990
We wanna make sure that we can get
people going where they need to.

16
00:00:44.990 --> 00:00:48.930
A lot of that is making sure that
we're using those absolute URLs so

17
00:00:48.930 --> 00:00:50.500
they go where they need to.

18
00:00:50.500 --> 00:00:54.480
But there's a couple of things to keep in
my mind when you start introducing links

19
00:00:54.480 --> 00:00:56.040
into your email campaign.

20
00:00:56.040 --> 00:00:58.810
And a lot of this is
related to accessibility,

21
00:00:58.810 --> 00:01:02.050
which we'll dig into a lot
more in a few minutes here.

22
00:01:02.050 --> 00:01:04.790
So one of the main things
is use descriptive links.

23
00:01:04.790 --> 00:01:06.490
So don't just say,

24
00:01:06.490 --> 00:01:10.370
click here in a link because that's
not descriptive really at all.

25
00:01:10.370 --> 00:01:13.640
You want to describe what happens
when that person clicks here.

26
00:01:13.640 --> 00:01:16.065
So read this article and
have the the title of the article or

27
00:01:16.065 --> 00:01:17.015
something like that.

28
00:01:18.165 --> 00:01:21.695
If they're going to a help site like,
get help from our experts,

29
00:01:21.695 --> 00:01:23.215
might be a good descriptive link.

30
00:01:23.215 --> 00:01:26.925
So use descriptive links,
just don't say learn more or

31
00:01:26.925 --> 00:01:29.805
click here for
whatever that link happens to be.

32
00:01:29.805 --> 00:01:33.255
That'll help people out to understand
what is gonna happen when they take that

33
00:01:33.255 --> 00:01:34.250
action.

34
00:01:34.250 --> 00:01:37.360
One of my biggest things that I try to
encourage people to do is to embrace

35
00:01:37.360 --> 00:01:39.110
those link conventions.

36
00:01:39.110 --> 00:01:42.360
So by default, on the web,
when somebody adds a hyperlink,

37
00:01:42.360 --> 00:01:45.220
we get that bright blue underlined text.

38
00:01:45.220 --> 00:01:48.310
And that's good because it
establishes that convention.

39
00:01:48.310 --> 00:01:49.480
Anybody that goes online,

40
00:01:49.480 --> 00:01:53.010
they see that bright blue text that's
underlined, they know that it's a link.

41
00:01:53.010 --> 00:01:54.025
It's gonna do something.

42
00:01:54.025 --> 00:01:55.750
It'll take them someplace.

43
00:01:55.750 --> 00:02:00.798
So I'm a huge proponent of embracing
that convention in your emails,

44
00:02:00.798 --> 00:02:02.340
in your websites.

45
00:02:02.340 --> 00:02:06.466
So in my mind, if something's underlined,
regardless of what color it happens to be,

46
00:02:06.466 --> 00:02:07.710
it's a link.

47
00:02:07.710 --> 00:02:13.870
I wouldn't rely on the strong tag or
emphasis for trying to convey

48
00:02:13.870 --> 00:02:18.980
emphasis instead of an underline, because
you could introduce that frustration for

49
00:02:18.980 --> 00:02:22.500
subscribers if you use an underline
that's not an actual link.

50
00:02:22.500 --> 00:02:26.390
So I like using blue links too, but
obviously, color those how you want.

51
00:02:26.390 --> 00:02:30.240
You rarely want to rely just on color for

52
00:02:30.240 --> 00:02:33.740
denoting something's a link because we
do have people that are colorblind.

53
00:02:33.740 --> 00:02:38.730
And they can see they don't get that
functionality based just on color alone.

54
00:02:38.730 --> 00:02:41.870
So using those two in
combination is a great practice,

55
00:02:41.870 --> 00:02:44.260
that's why it's convention for a reason.

56
00:02:44.260 --> 00:02:48.300
And a big thing, especially when it comes
to buttons, is not using images for

57
00:02:48.300 --> 00:02:49.520
buttons.

58
00:02:49.520 --> 00:02:52.510
There's a lot of reasons why
you don't wanna do that.

59
00:02:52.510 --> 00:02:56.280
The main one being a lot of email clients
will disable those images by default.

60
00:02:56.280 --> 00:02:58.710
So if that is your main call to action,
and

61
00:02:58.710 --> 00:03:02.440
the user doesn't even see it, the
likelihood of them taking that action and

62
00:03:02.440 --> 00:03:04.730
doing what you want them to do is very,
very slim.

63
00:03:05.980 --> 00:03:09.180
So we're gonna be looking at a couple
of different approaches to buttons.

64
00:03:09.180 --> 00:03:13.509
There's a document called
Buttons.html in the GitHub repo.

65
00:03:13.509 --> 00:03:15.860
It's similarly named in CodePen.

66
00:03:15.860 --> 00:03:18.710
That'll give you a couple
of examples of how to

67
00:03:18.710 --> 00:03:21.570
approach building out
buttons in your email.

68
00:03:21.570 --> 00:03:26.725
So I wanna show you an example of that,
then we'll get to this exercise here.

69
00:03:29.867 --> 00:03:31.804
&gt;&gt; Jason Rodriguez: So
I'm gonna open up, well,

70
00:03:31.804 --> 00:03:37.230
let's let's start by looking at that link
that we had in our email campaign first.

71
00:03:37.230 --> 00:03:39.410
So we have this link up here.

72
00:03:39.410 --> 00:03:41.030
That's eventually gonna be a button.

73
00:03:41.030 --> 00:03:44.190
So let's look at this
unsubscribe link here.

74
00:03:44.190 --> 00:03:45.080
So right now,

75
00:03:45.080 --> 00:03:51.550
it's just that default blue link that
we're all used to seeing down here.

76
00:03:51.550 --> 00:03:53.110
So we could leave it that way.

77
00:03:53.110 --> 00:03:56.260
Most email clients will
render it as intended.

78
00:03:56.260 --> 00:04:00.420
But if we want to override that,
then we can use style in here.

79
00:04:00.420 --> 00:04:08.850
We can update the color
to something like purple.

80
00:04:08.850 --> 00:04:14.210
I am a big fan of updating the font
weight of text links to be bold so

81
00:04:14.210 --> 00:04:19.200
that people that do have some
sort of color blindness or

82
00:04:19.200 --> 00:04:22.415
it's, again, not just using
the color to denote that link.

83
00:04:22.415 --> 00:04:23.830
So we have the underline.

84
00:04:23.830 --> 00:04:28.850
We have the bolded weight, so you can tell
that this is a link, which is helpful,

85
00:04:28.850 --> 00:04:33.550
especially when we add additional
tech surrounding that link.

86
00:04:33.550 --> 00:04:36.490
So it's very obvious that
this is itself a link,

87
00:04:36.490 --> 00:04:39.250
and it'll perform some
action when you click on it.

88
00:04:39.250 --> 00:04:44.530
But the main thing we're gonna be
adding to our emails are those buttons.

89
00:04:44.530 --> 00:04:50.160
So we, eventually, wanna make this look
like a button for people to click on.

90
00:04:50.160 --> 00:04:52.730
But the way you do that in
email is a little bit different

91
00:04:52.730 --> 00:04:55.200
from how you would in the web world.

92
00:04:56.680 --> 00:04:59.800
So on the web side of things,
traditionally,

93
00:04:59.800 --> 00:05:03.370
you would have like some sort
of CSS class called button.

94
00:05:03.370 --> 00:05:06.450
You have to use things,
like depending on what it is,

95
00:05:06.450 --> 00:05:09.420
you might make it block level or
an inline block element.

96
00:05:09.420 --> 00:05:12.230
And then you would use things like
padding and the background color and

97
00:05:12.230 --> 00:05:15.310
borders to style that component
to look like a button.

98
00:05:16.590 --> 00:05:18.990
While we can do that for
certain email clients,

99
00:05:18.990 --> 00:05:23.770
it doesn't work across the board for
a lot of email clients.

100
00:05:23.770 --> 00:05:27.050
So we have to rely on a couple
of different techniques

101
00:05:27.050 --> 00:05:28.590
to get these buttons working.

102
00:05:28.590 --> 00:05:31.530
So let's look at what
this button looks like.

103
00:05:31.530 --> 00:05:33.800
So up here it's just this big blue button.

104
00:05:33.800 --> 00:05:35.460
It has some rounded corners.

105
00:05:35.460 --> 00:05:36.760
This one has a hover cell applied.

106
00:05:36.760 --> 00:05:39.590
These ones don't, but
we can add that as needed.

107
00:05:39.590 --> 00:05:41.560
But these, generally, look the same.

108
00:05:41.560 --> 00:05:44.480
This one's a little bit wider
just because of how it was coded.

109
00:05:44.480 --> 00:05:46.540
But these ones are all buttons.

110
00:05:46.540 --> 00:05:49.950
They have rounded corners,
the same text, same background color.

111
00:05:49.950 --> 00:05:52.050
So there's a couple of
different ways to do this.

112
00:05:52.050 --> 00:05:56.730
The the overarching term for something
like this is called a bulletproof button.

113
00:05:56.730 --> 00:06:01.350
It's bulletproof because they work across
all these different email clients.

114
00:06:01.350 --> 00:06:04.800
But the the first one
we're gonna look at is

115
00:06:04.800 --> 00:06:06.500
the traditional kind
of bulletproof button.

116
00:06:06.500 --> 00:06:10.150
And this was developed by a guy named
Stig Morten Myre, who works for

117
00:06:10.150 --> 00:06:13.346
Campaign Monitor, years and years ago.

118
00:06:13.346 --> 00:06:19.390
And Campaign Monitor,

119
00:06:19.390 --> 00:06:22.810
they have a tool out there called
Buttons.cm, which was a website where

120
00:06:22.810 --> 00:06:26.370
you can go and generate these bulletproof
buttons, which is an amazing tool.

121
00:06:26.370 --> 00:06:29.820
So I grabbed some code from them and
update it a little bit just for

122
00:06:29.820 --> 00:06:31.330
styling purposes.

123
00:06:31.330 --> 00:06:35.430
But you can see that this is
using something called VML.

124
00:06:35.430 --> 00:06:39.020
So we have this conditional comment
here that says, &lt;!--(if mso)&gt;.

125
00:06:39.020 --> 00:06:45.580
So if this is viewed in Microsoft Office,
then I want this code down here to apply.

126
00:06:45.580 --> 00:06:48.570
And this is using VML,
which is vector markup language,

127
00:06:48.570 --> 00:06:52.430
which is this really arcane, verbose,

128
00:06:52.430 --> 00:06:58.530
strange language that is
proprietary to Microsoft Office.

129
00:06:58.530 --> 00:07:02.430
It's extraordinarily hard to
find good documentation for VML.

130
00:07:02.430 --> 00:07:05.510
I actually have a blog post on my website.

131
00:07:05.510 --> 00:07:08.030
I think it was called Dial M for MSO,

132
00:07:08.030 --> 00:07:12.600
because I had enlisted the help
of one of Litmus' engineers had

133
00:07:12.600 --> 00:07:17.610
to open up this really old file and
get this documentation working and stuff.

134
00:07:17.610 --> 00:07:19.210
I think it's up on GitHub now.

135
00:07:19.210 --> 00:07:23.864
But it's this really arcane language
that nobody outside of Stig Morten Myre

136
00:07:23.864 --> 00:07:25.716
fully understands.

137
00:07:25.716 --> 00:07:27.920
But what you're doing is using VML,

138
00:07:27.920 --> 00:07:34.450
this vector markup to build these objects,
these shapes for your button.

139
00:07:34.450 --> 00:07:38.230
So for Microsoft Office, it will see this,

140
00:07:38.230 --> 00:07:42.830
it will render that button,
and it works in Outlook.

141
00:07:42.830 --> 00:07:46.070
Whereas other approaches don't
necessarily always do that.

142
00:07:46.070 --> 00:07:49.370
They work to some extent,
but will lose sizing or

143
00:07:49.370 --> 00:07:53.270
padding on our buttons in Outlook or
other clients.

144
00:07:53.270 --> 00:07:56.670
So really,
the most bulletproof version of a button

145
00:07:56.670 --> 00:08:01.065
is this original bulletproof button
that you can use at Buttons.cm.

146
00:08:01.065 --> 00:08:02.890
Buttons.cm is great.

147
00:08:02.890 --> 00:08:05.790
It allows you to update
the text of your button.

148
00:08:05.790 --> 00:08:11.050
You can add a background image, if you
want, something like a gradient or flames

149
00:08:11.050 --> 00:08:15.040
on the back of your image, something
like that, your background color,

150
00:08:15.040 --> 00:08:19.270
your font color, the button size,
border color, and then the URL.

151
00:08:19.270 --> 00:08:22.570
And it'll just spit out this code for
you, which you can copy and

152
00:08:22.570 --> 00:08:23.870
paste in your email.

153
00:08:23.870 --> 00:08:25.650
This is super handy.

154
00:08:25.650 --> 00:08:29.890
I highly recommend using it because
it is the most bulletproof approach

155
00:08:29.890 --> 00:08:31.560
to building buttons.

156
00:08:31.560 --> 00:08:33.930
But sometimes you don't
wanna have that in there.

157
00:08:33.930 --> 00:08:37.490
From a maintainability perspective,
it's a little bit harder to maintain

158
00:08:37.490 --> 00:08:41.650
to update the styling if you need to
update that on a per campaign basis.

159
00:08:41.650 --> 00:08:44.290
So there's a couple of other
ways to add buttons in there.

160
00:08:44.290 --> 00:08:47.290
The next one's using
a padding based approach.

161
00:08:47.290 --> 00:08:54.440
So this is adding padding to whatever that
container for a button happens to be.

162
00:08:54.440 --> 00:08:56.270
So for an email that's gonna be a table.

163
00:08:56.270 --> 00:08:59.790
So this your first kinda introduction
to a table structure for an email.

164
00:08:59.790 --> 00:09:01.430
So we have this table here.

165
00:09:01.430 --> 00:09:04.710
We're gonna be setting a couple
of attributes there to override

166
00:09:04.710 --> 00:09:06.700
default styling for that table.

167
00:09:06.700 --> 00:09:10.740
But the magic happens on this
table cell for our buttons.

168
00:09:10.740 --> 00:09:15.358
So we have the anchor tag in here,
where we set things like the font size,

169
00:09:15.358 --> 00:09:20.090
the font, family, the color,
similar to how we do any other text.

170
00:09:20.090 --> 00:09:23.900
But on the table cell we
introduce some padding

171
00:09:23.900 --> 00:09:26.100
to provide that structure for our button.

172
00:09:26.100 --> 00:09:29.360
And then we use something like border
radius to affect the corners and

173
00:09:29.360 --> 00:09:31.890
then the background color
attribute on that table cell.

174
00:09:31.890 --> 00:09:35.000
And that will give us
that second button type.

175
00:09:36.220 --> 00:09:39.190
So this works pretty well
in things like Outlook.

176
00:09:39.190 --> 00:09:41.560
We'll see these in Litmus in a second.

177
00:09:41.560 --> 00:09:45.980
You'll lose a lot of that padding because
it doesn't respect it on a table cell,

178
00:09:45.980 --> 00:09:46.560
which sucks.

179
00:09:46.560 --> 00:09:50.360
So it doesn't look as good as
something like the VML-based button.

180
00:09:50.360 --> 00:09:54.590
So then somebody developed this other
approach, which is using borders.

181
00:09:54.590 --> 00:09:58.440
So instead of providing all
that padding on the table cell,

182
00:09:58.440 --> 00:10:03.059
we add these gigantic
borders to the anchor tag.

183
00:10:04.340 --> 00:10:08.550
So we, again, have this boilerplate stuff,
controlling the text.

184
00:10:08.550 --> 00:10:10.450
The border-radius is in there.

185
00:10:10.450 --> 00:10:12.390
We have a background-color applied.

186
00:10:12.390 --> 00:10:17.320
But then you can see all of these borders,
we declare each individual border.

187
00:10:17.320 --> 00:10:22.550
And then for things like the top and the
bottom, we have a certain height on those.

188
00:10:22.550 --> 00:10:28.030
And then for the right and left we have
even more to make it look like a button.

189
00:10:28.030 --> 00:10:32.120
So again, this works in different email
clients but not across all of them.

190
00:10:32.120 --> 00:10:34.910
So then somebody went through and

191
00:10:34.910 --> 00:10:40.000
combined those two things to this
padding plus border based button.

192
00:10:40.000 --> 00:10:44.550
So we can see here we have
a couple of things going on.

193
00:10:44.550 --> 00:10:47.660
So we're doing a little bit of
styling on the table cell itself,

194
00:10:47.660 --> 00:10:53.000
the background color on the table cell,
table itself similar to how we did it for

195
00:10:53.000 --> 00:10:55.670
that padding based approach.

196
00:10:55.670 --> 00:11:00.150
But then we're adding a border in here and

197
00:11:00.150 --> 00:11:04.030
then the padding on the link
itself instead of the table cell.

198
00:11:04.030 --> 00:11:08.210
So again, this works in some email
clients, but not across all of them.

199
00:11:08.210 --> 00:11:11.250
So those are a couple of options for
different buttons.

200
00:11:11.250 --> 00:11:15.880
But I think it's important to see how this
actually renders across email clients

201
00:11:15.880 --> 00:11:19.830
to get a sense of what you
should have probably use.

202
00:11:19.830 --> 00:11:21.600
I still recommend using,

203
00:11:21.600 --> 00:11:26.970
I think when it comes down to it,
I would fall back, that Buttons.cm the VML

204
00:11:26.970 --> 00:11:31.540
approach just because it is the most
reliable across all these email clients.

205
00:11:31.540 --> 00:11:36.110
But if you are worried
about maintainability,

206
00:11:36.110 --> 00:11:40.080
customizing it, if you're using
some sort of build process or

207
00:11:40.080 --> 00:11:44.580
like a framework to help generate your
emails, then you might need to fall back

208
00:11:44.580 --> 00:11:48.880
to one of these other solutions
that is less verbose, less arcane,

209
00:11:48.880 --> 00:11:52.740
easier to maintain and easier to
customize on a per campaign basis.

210
00:11:52.740 --> 00:11:55.030
So you can see Apple Mail is awesome.

211
00:11:55.030 --> 00:11:58.780
It's the greatest email client
in the world, no issues there.

212
00:11:59.900 --> 00:12:03.600
We Outlook the VML one looks perfect.

213
00:12:03.600 --> 00:12:06.670
The padding base button is not too bad.

214
00:12:06.670 --> 00:12:10.380
We lose that border radius and
a little bit of the sizing around it.

215
00:12:10.380 --> 00:12:12.810
And then the border base
button gets even worse, and

216
00:12:12.810 --> 00:12:14.449
then the padding plus
border base is similar.

217
00:12:14.449 --> 00:12:17.250
But we don't get things
like those rounded corners.

218
00:12:17.250 --> 00:12:21.500
We're not gonna get background images in
there, and that's across the board for

219
00:12:21.500 --> 00:12:22.680
most of the Outlooks here.

220
00:12:24.630 --> 00:12:28.550
Mobile and
web mail clients are pretty much the same.

221
00:12:28.550 --> 00:12:29.838
They render things pretty well.

222
00:12:29.838 --> 00:12:36.810
Yeah, so Samsung mail is the one that
doesn't play nice with VML based buttons.

223
00:12:36.810 --> 00:12:38.600
But you could use one of the other ones,

224
00:12:38.600 --> 00:12:42.950
which is kind of annoying, but
it is what it is Samsung mail.

225
00:12:42.950 --> 00:12:48.190
When you get into like web mail clients,
you'll see some randomness in here,

226
00:12:48.190 --> 00:12:51.936
especially when you get into
European based clients like DMX or

227
00:12:51.936 --> 00:12:54.700
mail.ru things like that.

228
00:12:54.700 --> 00:12:57.040
Some of them work, some of them don't.

229
00:12:57.040 --> 00:13:01.820
So I would recommend using
that VML based approach

230
00:13:01.820 --> 00:13:05.390
because it is super reliable
across most email clients.

231
00:13:06.560 --> 00:13:11.210
If you do need to update things easily,
then you might wanna

232
00:13:11.210 --> 00:13:16.350
fall back on that border plus batting
heading based approach is pretty reliable.

233
00:13:16.350 --> 00:13:19.100
But one thing to keep in mind, too,

234
00:13:19.100 --> 00:13:23.590
is that if you're using one
of these other HTML and

235
00:13:23.590 --> 00:13:28.900
CSS based solutions, then when you want
to add things like hovers, then it takes

236
00:13:28.900 --> 00:13:32.910
a little bit more work because you're
overriding more of those CSS properties.

237
00:13:32.910 --> 00:13:38.810
The VML one is nice because if we
look up at these hover states,

238
00:13:38.810 --> 00:13:42.360
all I'm doing is assigning
a class to that button and

239
00:13:42.360 --> 00:13:47.240
then using that pseudo selector, the hover
state and updating the background color.

240
00:13:47.240 --> 00:13:48.520
So we get that hover.

241
00:13:48.520 --> 00:13:52.810
It's super easy to override that with that
VML based approach, which is awesome.

242
00:13:52.810 --> 00:13:56.290
But if you're using that padding or
the borders, then you're gonna have to

243
00:13:56.290 --> 00:14:01.380
override each of those different CSS
properties, which gets super tedious.

244
00:14:01.380 --> 00:14:02.390
You might leave one of those out.

245
00:14:02.390 --> 00:14:07.080
And you'll get something with like
a red top border and green bottom or

246
00:14:07.080 --> 00:14:09.210
something like that,
and it looks super bad.

247
00:14:09.210 --> 00:14:12.300
So that's why I recommend
using that VML based approach.

248
00:14:12.300 --> 00:14:16.130
And it's super easy cuz you
can rely on Buttons.cm to

249
00:14:16.130 --> 00:14:17.650
just generate that code for you.

250
00:14:17.650 --> 00:14:19.960
You can dump it in your campaign,
it works well.

251
00:14:19.960 --> 00:14:25.840
The one thing that doesn't work that great
is responsive stuff for that button.

252
00:14:25.840 --> 00:14:30.190
So if you have a long string of text
in that button and you expect it to

253
00:14:30.190 --> 00:14:34.180
wrap on mobile devices because it's
too long to fit in that container,

254
00:14:34.180 --> 00:14:37.830
making that responsive using the VML
button is a little bit harder to do.

255
00:14:39.470 --> 00:14:42.600
So that's where those other
approaches are really handy too.

256
00:14:42.600 --> 00:14:46.740
If you are using long links or
long CTAs in your buttons,

257
00:14:46.740 --> 00:14:48.780
you might want to use one
of those other approaches.

258
00:14:48.780 --> 00:14:53.020
Because you can adapt the text size and
stuff like that a little bit easy

259
00:14:53.020 --> 00:14:55.890
than what you can do for
the VLM based approach.

