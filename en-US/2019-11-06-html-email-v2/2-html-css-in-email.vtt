WEBVTT

1
00:00:00.040 --> 00:00:03.890
&gt;&gt; Jason Rodriguez: So let's look at kind
of the basics of why email design and

2
00:00:03.890 --> 00:00:05.740
development it consists of.

3
00:00:05.740 --> 00:00:08.530
So this is all about the bare bones,
HTML and

4
00:00:08.530 --> 00:00:12.590
CSS that will be using
in an email campaign.

5
00:00:12.590 --> 00:00:15.330
So in this section,
we're gonna look at some of those basics,

6
00:00:15.330 --> 00:00:19.870
how to apply them to email campaigns, some
of the HTML attributes you need to know,

7
00:00:19.870 --> 00:00:23.830
the CSS properties that are reliable
across these different email clients.

8
00:00:23.830 --> 00:00:26.840
And a lot of this is gonna be
kind of an up front lecture, and

9
00:00:26.840 --> 00:00:28.180
then we'll start looking into some code.

10
00:00:28.180 --> 00:00:31.110
I have a couple of challenges
throughout the day for you guys, too.

11
00:00:31.110 --> 00:00:34.450
Dig in and
get your hands dirty with some code here.

12
00:00:34.450 --> 00:00:39.710
But yeah, we talk about email clients,
we talk about all of these guys up here.

13
00:00:39.710 --> 00:00:42.794
So we have some of those
classics like Thunderbird,

14
00:00:42.794 --> 00:00:44.975
which is still in pretty wide usage.

15
00:00:44.975 --> 00:00:51.800
All those different versions of Outlook,
Gmail, Apple mail, Yahoo, AOL.

16
00:00:51.800 --> 00:00:56.792
There are dozens and dozens of popular
email clients out there and each one of

17
00:00:56.792 --> 00:01:01.645
them essentially uses its own rendering
engine to render our HTML or CSS.

18
00:01:01.645 --> 00:01:05.710
So that can be good or bad,
things like Gmail and Chrome.

19
00:01:05.710 --> 00:01:08.070
They use WebKit for
rendering which is awesome.

20
00:01:08.070 --> 00:01:09.590
Apple Mail relies on WebKit.

21
00:01:09.590 --> 00:01:11.560
So that rendering is really solid.

22
00:01:11.560 --> 00:01:12.820
It supports a lot of HTML.

23
00:01:12.820 --> 00:01:14.390
It supports a lot of CSS.

24
00:01:14.390 --> 00:01:18.509
And our emails look really good in
those email clients most of the time.

25
00:01:18.509 --> 00:01:21.462
But then you have older versions
of outlook that are using well,

26
00:01:21.462 --> 00:01:23.000
even newer versions of Outlook.

27
00:01:24.140 --> 00:01:27.270
Back in 2007, I think it was,

28
00:01:27.270 --> 00:01:31.290
they switched from using Internet Explorer
as the rendering engine for HTML and

29
00:01:31.290 --> 00:01:36.430
CSS, to using Microsoft Word for
rendering HTML and CSS.

30
00:01:36.430 --> 00:01:41.126
Which is kind of mind blowing to
think about because Word is not

31
00:01:41.126 --> 00:01:44.298
intended to render code, at least well.

32
00:01:44.298 --> 00:01:49.527
And the reasons they did that were, I
mean, in my mind, they make sense because

33
00:01:49.527 --> 00:01:54.430
they were trying to make a rich email
editing experience for their users.

34
00:01:54.430 --> 00:01:57.230
So they weren't really thinking
about markers in the Enron,

35
00:01:57.230 --> 00:01:58.580
they were thinking about their users.

36
00:01:58.580 --> 00:02:02.790
They wanted to provide this rich editing
interface similar to working and

37
00:02:02.790 --> 00:02:05.450
word by and outlook itself.

38
00:02:05.450 --> 00:02:07.840
So the user experience I
get that that's awesome.

39
00:02:07.840 --> 00:02:11.460
You can add Excel tables and images and

40
00:02:11.460 --> 00:02:17.120
crap like that into your email between,
even the person sitting next to the desk.

41
00:02:17.120 --> 00:02:20.250
But for
email marketers that rely on HTML and

42
00:02:20.250 --> 00:02:24.980
CSS that's generally a nightmare because,
Word is not like a lot of HTML and CSS.

43
00:02:26.060 --> 00:02:29.550
So that's what we have to keep in mind
that's like that foundational thing.

44
00:02:29.550 --> 00:02:32.250
We have to know, what HTML and CSS works.

45
00:02:32.250 --> 00:02:35.010
Were across all these
different email clients.

46
00:02:35.010 --> 00:02:36.770
The big ones are generally the Outlooks,

47
00:02:36.770 --> 00:02:39.950
though because they don't like a lot of
different things, so we have to kind of

48
00:02:39.950 --> 00:02:44.410
cater to them there, they're that edge
case that we need to worry about.

49
00:02:44.410 --> 00:02:48.056
And it kind of sucks because
we still have a lot of

50
00:02:48.056 --> 00:02:52.718
people using various versions
of Outlook from 2002 on.

51
00:02:52.718 --> 00:02:55.090
So it's just something to keep in mind.

52
00:02:55.090 --> 00:02:58.640
But that essentially means there
are zero email standards out there.

53
00:02:58.640 --> 00:03:02.058
While we're using HTML and CSS.

54
00:03:02.058 --> 00:03:04.530
Similar to how you would on a website.

55
00:03:04.530 --> 00:03:06.580
There aren't any agreed upon standards.

56
00:03:06.580 --> 00:03:12.490
There's no one set of standards that every
email client follows and implements.

57
00:03:12.490 --> 00:03:19.230
So we have to kinda shrink down our HTML
and CSS and only use certain things.

58
00:03:19.230 --> 00:03:20.860
And that takes me to my next point.

59
00:03:20.860 --> 00:03:24.320
The web and
email are completely different things.

60
00:03:24.320 --> 00:03:28.070
While we use those same technologies,

61
00:03:28.070 --> 00:03:33.250
we can rely on the web
using modern standards.

62
00:03:33.250 --> 00:03:36.810
So we can use things like semantic
elements, and newer HTML5.

63
00:03:37.850 --> 00:03:39.800
We can use CSS 3 reliably and

64
00:03:39.800 --> 00:03:43.630
know that it works pretty well
across all these different browsers.

65
00:03:43.630 --> 00:03:45.630
But most people,
when they're building a website,

66
00:03:45.630 --> 00:03:49.730
they're only contending with a handful,
four or five different browsers.

67
00:03:49.730 --> 00:03:54.180
But email, we have to deal with dozens and
dozens fo different email clients.

68
00:03:54.180 --> 00:03:59.090
So what you're used to on the website
of things, aren't gonna apply to email.

69
00:03:59.090 --> 00:04:04.570
So things that work in email are pretty
basic slim down versions of HTML and CSS.

70
00:04:04.570 --> 00:04:09.050
Largely table based designs
will look at kind of like it,

71
00:04:09.050 --> 00:04:11.840
I like to call it nearly table free email.

72
00:04:11.840 --> 00:04:15.425
And then simple semantics so
we should include semantic for

73
00:04:15.425 --> 00:04:19.090
accessibility reasons which
we'll get into this morning.

74
00:04:19.090 --> 00:04:24.078
By you can't really rely on like the full
suite of HTML5 semantic elements in your

75
00:04:24.078 --> 00:04:25.270
email campaigns.

76
00:04:25.270 --> 00:04:26.290
What doesn't work and

77
00:04:26.290 --> 00:04:31.490
email for the most part certain clients
will support some of this stuff by.

78
00:04:31.490 --> 00:04:33.430
If you are sending to
wide enough audience,

79
00:04:33.430 --> 00:04:36.900
you're not going to be using this
stuff things like flow based designs.

80
00:04:36.900 --> 00:04:39.580
CSS grid is kind of off the table.

81
00:04:39.580 --> 00:04:44.660
Unfortunately, it does work and things
like Apple Mail which use WebKit and

82
00:04:44.660 --> 00:04:49.170
can render that CSS Grid or
something like flex box pretty reliably by

83
00:04:49.170 --> 00:04:52.380
most other email clients will
just completely ignore it.

84
00:04:52.380 --> 00:04:56.870
JavaScript, out of the question, pretty
much every email client is gonna strip

85
00:04:56.870 --> 00:05:00.390
that out of the org campaign for
security purposes.

86
00:05:00.390 --> 00:05:04.330
The one exception is that Gmail
started implementing something,

87
00:05:04.330 --> 00:05:08.500
is like their new promotional tabs that
allows you to provide some sort of like

88
00:05:08.500 --> 00:05:11.700
offer information with your
email split in the inbox.

89
00:05:11.700 --> 00:05:14.540
So that uses JSON in
the head of your document.

90
00:05:14.540 --> 00:05:19.790
So Gmail specifically, if you have
that structure JSON in there, it will

91
00:05:19.790 --> 00:05:25.720
pull that in and use it to enhance that
email in the inbox for Gmail users.

92
00:05:25.720 --> 00:05:29.340
But outside of that, any scripting and
stuff is a no-go in email.

93
00:05:29.340 --> 00:05:33.550
And then a hell of a lot of CSS
is just off the table for email,

94
00:05:33.550 --> 00:05:34.990
which we'll get into.

95
00:05:34.990 --> 00:05:39.900
Couple of resources for identifying what
CSS works, what CSS doesn't work and

96
00:05:39.900 --> 00:05:43.130
kind of get new speed on what
you should be using your emails.

