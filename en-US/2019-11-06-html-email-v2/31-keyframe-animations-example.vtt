WEBVTT

1
00:00:00.360 --> 00:00:04.104
&gt;&gt; Jason Rodriguez: So
inside of this CSS animations.html file,

2
00:00:04.104 --> 00:00:07.970
I set up a keyframe
animation called fade-in.

3
00:00:07.970 --> 00:00:11.950
So that's the name of that animation
that we're gonna call later on here.

4
00:00:11.950 --> 00:00:16.629
So we have this from state, which is
our starting state to this end state.

5
00:00:16.629 --> 00:00:18.480
So we're just fading something out.

6
00:00:18.480 --> 00:00:21.340
So we're gonna rely on
the CSS opacity property.

7
00:00:21.340 --> 00:00:25.010
This first thing we're gonna
do is set the opacity to zero.

8
00:00:25.010 --> 00:00:27.470
And then I wanna add this
slight scaling effect so

9
00:00:27.470 --> 00:00:30.760
that this is gonna work on our
images our logo and our hero image.

10
00:00:30.760 --> 00:00:33.960
So both of those are gonna start a little
bit smaller and then fade in and

11
00:00:33.960 --> 00:00:36.910
get a little bit bigger
to their intended size.

12
00:00:36.910 --> 00:00:38.650
So we can use a transform property,

13
00:00:38.650 --> 00:00:41.660
which again takes a whole
bunch of different values.

14
00:00:41.660 --> 00:00:46.270
This one is taking the scale value, which
will scale both the x and the y axes.

15
00:00:46.270 --> 00:00:48.599
So we're setting it at 0.8.

16
00:00:48.599 --> 00:00:52.580
So 80% of its final intended full size and

17
00:00:52.580 --> 00:00:55.920
then we wanna get to that full size,
that full opacity.

18
00:00:55.920 --> 00:01:01.380
So the n states this opacity is equal to
1, and then transform scale is equal to 1.

19
00:01:01.380 --> 00:01:05.970
So that's the full opacity,
full width and height of those images.

20
00:01:05.970 --> 00:01:09.300
So we're doing this on
two different elements.

21
00:01:09.300 --> 00:01:13.910
You could very easily just have a single
fade class that you apply across elements.

22
00:01:13.910 --> 00:01:16.100
But I wanted to stagger
this a little bit so

23
00:01:16.100 --> 00:01:19.520
that the logo loads a little bit
quicker than the hero image.

24
00:01:19.520 --> 00:01:26.100
So it kinda has this graduated
animation across those two elements.

25
00:01:26.100 --> 00:01:29.200
So I set up two different
classes this fade one

26
00:01:29.200 --> 00:01:33.000
is applied down into the logo
image you can see class="fade1".

27
00:01:33.000 --> 00:01:37.290
And then fade2 is applied on that
hero image and outside of our email.

28
00:01:37.290 --> 00:01:39.480
So then we use the CSS animation property.

29
00:01:41.040 --> 00:01:44.150
We set it to one second for
that first fade, and

30
00:01:44.150 --> 00:01:46.950
then we call that name, that word.

31
00:01:46.950 --> 00:01:50.700
Well, we set it to one second, we call
the name fade-in, which is our animation.

32
00:01:50.700 --> 00:01:52.130
And then I set the iteration,

33
00:01:52.130 --> 00:01:56.950
the count number for that animation,
to only happen once so it's not repeating.

34
00:01:56.950 --> 00:02:00.607
So if we didn't have that, then it would
keep repeating that fade in and fade out,

35
00:02:00.607 --> 00:02:02.590
it's a really jarring experience.

36
00:02:02.590 --> 00:02:06.030
But we don't want that happen, so
we only want it to happen once and

37
00:02:06.030 --> 00:02:10.140
it ends on this last ending state,
that two state.

38
00:02:10.140 --> 00:02:14.010
The second fade we're gonna make
that a little bit longer to give

39
00:02:14.010 --> 00:02:15.954
it that staggered appearance.

40
00:02:15.954 --> 00:02:20.151
So we're gonna set that animation duration
to two seconds and then only make it

41
00:02:20.151 --> 00:02:24.630
happen once and again it's using
that same starting and ending state.

42
00:02:24.630 --> 00:02:29.610
So if we open this up here and you can
see hopefully quickly those two different

43
00:02:29.610 --> 00:02:33.490
images, kinda has that
staggered fading in approach.

44
00:02:33.490 --> 00:02:36.795
So it's subtle but it's one of those
things that when you're opening

45
00:02:36.795 --> 00:02:40.600
this up in the inbox, it catches your eye.

46
00:02:40.600 --> 00:02:43.860
It's subtle but
it's a nice experience for people.

47
00:02:43.860 --> 00:02:48.410
And it mimics a lot of I feel like you
see this behavior a lot on web pages now,

48
00:02:48.410 --> 00:02:52.260
that kinda loading animation,
that lazy loading animation.

49
00:02:52.260 --> 00:02:54.990
So it brings some of that
experience into the inbox itself,

50
00:02:54.990 --> 00:02:56.690
which is pretty cool to see.

51
00:02:56.690 --> 00:02:58.750
And again,
we're doing this hover stuff down here.

52
00:02:58.750 --> 00:03:03.306
So it feels more of like a web experience
than a typical email experience which is

53
00:03:03.306 --> 00:03:03.920
awesome.

54
00:03:05.060 --> 00:03:08.050
So I want you guys to play
around with that a little bit.

55
00:03:08.050 --> 00:03:11.077
Play around with both hover states and

56
00:03:11.077 --> 00:03:15.920
those key frame animations and
test them out in your emails.

57
00:03:15.920 --> 00:03:19.490
So create some sort of hover state for
your button.

58
00:03:19.490 --> 00:03:22.500
Preferably make it do more than
just changing the background color,

59
00:03:22.500 --> 00:03:23.990
that's pretty easy.

60
00:03:23.990 --> 00:03:26.988
So mess around with things like transform,
the transform

61
00:03:26.988 --> 00:03:31.750
property is awesome in CSS and you can
do some really cool stuff with that.

62
00:03:31.750 --> 00:03:35.798
The Mozilla Developer Network
documentation is a great resource, so

63
00:03:35.798 --> 00:03:39.740
visit MDN if you wanna look at some
of those transform properties.

64
00:03:39.740 --> 00:03:41.875
And then look at those
key frame animations,

65
00:03:41.875 --> 00:03:44.990
add a key frame animation to
something like the image.

66
00:03:44.990 --> 00:03:46.620
You can scale it, you can rotate it,

67
00:03:46.620 --> 00:03:49.870
you can fade it in an out,
if you wanna you can use position and

68
00:03:49.870 --> 00:03:53.390
move it around the screen of the email,
around that view port.

69
00:03:53.390 --> 00:03:55.780
Test those out,
add some animations in our emails.

