WEBVTT

1
00:00:00.080 --> 00:00:05.050
&gt;&gt; Rodriguez: That's what we're gonna look
at next is preventing those kind of issues

2
00:00:05.050 --> 00:00:09.760
by using this other approach that's
called a hybrid or spongy coding.

3
00:00:09.760 --> 00:00:15.487
So this was developed by a couple of
people really back in the day years ago.

4
00:00:15.487 --> 00:00:19.184
The hybrid version was
originally developed by a woman

5
00:00:19.184 --> 00:00:22.247
named Nicole Merlin who's from Australia.

6
00:00:22.247 --> 00:00:24.038
Worked for campaign monitor for a while.

7
00:00:24.038 --> 00:00:28.069
Is unfortunately no longer the email
industry but she is awesome.

8
00:00:28.069 --> 00:00:29.556
So she called it hybrid coding and

9
00:00:29.556 --> 00:00:32.115
a couple of other people
referred to it as hybrid coding.

10
00:00:32.115 --> 00:00:34.864
And then there is this guy that worked for
Mailchimp for

11
00:00:34.864 --> 00:00:38.630
a long time that built all of those
email templates that Mailchimp users and

12
00:00:38.630 --> 00:00:41.646
create inside of their wizard
editor named Fabio Carnero.

13
00:00:41.646 --> 00:00:43.099
He works for booking.com now.

14
00:00:43.099 --> 00:00:44.940
Super smart email developer.

15
00:00:44.940 --> 00:00:46.970
He referred to his
version as spongy coding.

16
00:00:46.970 --> 00:00:50.658
I have a bunch of kind of coding
samples from him that we'll go over.

17
00:00:50.658 --> 00:00:55.350
But this takes a different approach from
the traditional version of the response

18
00:00:55.350 --> 00:00:55.907
female.

19
00:00:55.907 --> 00:00:59.889
But we're still gonna use that
fluidity for our layouts.

20
00:00:59.889 --> 00:01:02.620
It's a very important
key component of this.

21
00:01:02.620 --> 00:01:05.120
But everything's gonna
be fluid by default.

22
00:01:05.120 --> 00:01:07.790
So all of our tables
are gonna be fluid widths,

23
00:01:07.790 --> 00:01:10.120
instead of having that 600 pixel wide.

24
00:01:10.120 --> 00:01:15.360
But to constrain that, we're going to fall
back to using that max-width CSS property.

25
00:01:15.360 --> 00:01:17.880
So this is similar to what we were
doing when we were first starting out,

26
00:01:17.880 --> 00:01:19.660
we had that div container.

27
00:01:19.660 --> 00:01:24.270
I had set it to have a max-width
inline on that div to be 600 pixels.

28
00:01:24.270 --> 00:01:28.061
And then that constrained it for all of
the different email clients except for

29
00:01:28.061 --> 00:01:31.516
our Outlook friends, and
that's where the problem comes into play.

30
00:01:31.516 --> 00:01:34.408
We can have those fluid by
default responsive emails, but

31
00:01:34.408 --> 00:01:37.240
when they're opened up in
Outlook that doesn't work and

32
00:01:37.240 --> 00:01:40.559
we get those broken layouts that
are super wide and look terrible.

33
00:01:40.559 --> 00:01:44.030
All those line lengths are really long and
hard to read that copy in an email.

34
00:01:44.030 --> 00:01:47.070
So the way we get around that is
using something that's typically

35
00:01:47.070 --> 00:01:50.650
referred to as a ghost table or
an MSO table.

36
00:01:50.650 --> 00:01:54.020
So Microsoft has this

37
00:01:54.020 --> 00:01:59.040
concept of targeting itself by
using these conditional comments.

38
00:01:59.040 --> 00:02:00.850
So you might be familiar with this.

39
00:02:00.850 --> 00:02:03.810
If you were building websites
way back in the day years ago.

40
00:02:03.810 --> 00:02:08.130
You would conditionally feed
IE a certain CSS styles

41
00:02:08.130 --> 00:02:10.900
that you knew that it would respect and
display properly.

42
00:02:10.900 --> 00:02:14.150
Because it wasn't very happy
with older versions by Alias.

43
00:02:14.150 --> 00:02:19.050
We're very happy with newer properties and
CSS, CSS three stuff like that.

44
00:02:19.050 --> 00:02:21.210
So you could use this
conditional comment and

45
00:02:21.210 --> 00:02:27.180
use the square bracket a notation to
target IE and we can do that same thing.

46
00:02:27.180 --> 00:02:31.210
Inside of Microsoft Office
to target Microsoft Outlook.

47
00:02:31.210 --> 00:02:34.580
So what we can do the same,
we can open up that comment.

48
00:02:34.580 --> 00:02:38.100
Using that comment,
same syntax for HTML comments.

49
00:02:38.100 --> 00:02:42.490
And then we use the square bracket,
we say if this is opened up and

50
00:02:42.490 --> 00:02:45.320
in this case greater than or
equal to MSO 9.

51
00:02:45.320 --> 00:02:47.750
Which is one of the versions
of Microsoft Outlook.

52
00:02:47.750 --> 00:02:52.400
We'll see what those versions correspond
to in a second here, or it's viewed an IE.

53
00:02:52.400 --> 00:02:53.980
So all the versions of IE,

54
00:02:53.980 --> 00:02:57.740
then I want you to apply the code
inside of this conditional common.

55
00:02:57.740 --> 00:02:59.990
So it's kinda like a media query or

56
00:02:59.990 --> 00:03:03.050
setting some sorta property
that you're testing for.

57
00:03:03.050 --> 00:03:07.290
Then if that property is true than that
condition's true that anything inside of

58
00:03:07.290 --> 00:03:11.180
that is displayed and rendered, but
this only works in Microsoft Outlook,

59
00:03:11.180 --> 00:03:14.620
which is awesome because that's where most
of our problems and email design lie.

60
00:03:14.620 --> 00:03:18.340
So we can target Microsoft Outlook
very specifically.

61
00:03:18.340 --> 00:03:22.040
So we've seen this in play when we were
looking at those bulletproof buttons,

62
00:03:22.040 --> 00:03:25.060
the buttons.cm approach that used VML.

63
00:03:25.060 --> 00:03:28.150
So you probably saw one of
these conditional comments.

64
00:03:28.150 --> 00:03:33.020
It would start up in front of our anchor
tag and below it as well, to open and

65
00:03:33.020 --> 00:03:35.390
close that conditional code.

66
00:03:35.390 --> 00:03:38.940
Same thing applies, we're gonna be
targeting specific versions of Outlook.

67
00:03:38.940 --> 00:03:41.940
And then we're gonna be feeding
them stuff that they understand.

68
00:03:41.940 --> 00:03:44.150
So in our case, it's gonna be tables.

69
00:03:44.150 --> 00:03:50.184
And since these are not rendered or seen
by any other email client, only Outlook.

70
00:03:50.184 --> 00:03:51.995
They're kind of like ghosts for that, so

71
00:03:51.995 --> 00:03:54.130
that's where that term
ghost table comes from.

72
00:03:54.130 --> 00:03:57.985
For all other clients they
are nonexistent, they don't matter.

73
00:03:57.985 --> 00:04:02.340
But Outlook will see these and
render them accordingly, which is awesome.

74
00:04:02.340 --> 00:04:06.110
So these are the different Outlook
versions, it goes up from there.

75
00:04:06.110 --> 00:04:09.570
You can see Version 9 is Outlook 2000,
Version 10 is 2002,

76
00:04:09.570 --> 00:04:11.940
it goes all the way up there.

77
00:04:11.940 --> 00:04:16.800
I think more recent versions have fallen
off of this naming convention, and

78
00:04:16.800 --> 00:04:21.420
you can see it skips weirdly from
12 to 14 for no reason whatsoever.

79
00:04:21.420 --> 00:04:25.610
But these are the main ones because
they're still using Microsoft Word.

80
00:04:25.610 --> 00:04:28.170
Newer versions will respect
anything that's greater than or

81
00:04:28.170 --> 00:04:32.480
equal to that older version,
which is why you typically start at that

82
00:04:32.480 --> 00:04:36.720
lowest version of Outlook, that oldest
version, and then go anything above that.

83
00:04:36.720 --> 00:04:40.547
And it will respect this
conditional code here.

84
00:04:40.547 --> 00:04:44.310
If we wanna target things specifically
we can say greater than or

85
00:04:44.310 --> 00:04:45.503
equal to using GTE.

86
00:04:45.503 --> 00:04:46.894
Greater than is GTE.

87
00:04:46.894 --> 00:04:50.810
Less than or equal to, and less than,
have those properties as well.

88
00:04:50.810 --> 00:04:55.550
It's very rare that you would ever have to
target a very specific version of Outlook.

89
00:04:55.550 --> 00:04:59.680
It is usually easier to just target
the old one and work ahead and

90
00:04:59.680 --> 00:05:02.240
just make it apply for all of those
different versions of Outlook.

