WEBVTT

1
00:00:00.160 --> 00:00:02.055
&gt;&gt; Rodriguez: When we get
into multiple columns,

2
00:00:02.055 --> 00:00:06.470
I'm a huge proponent of that
single column, simple layout.

3
00:00:06.470 --> 00:00:10.280
My own personal emails follow
that kind of design paradigm.

4
00:00:10.280 --> 00:00:12.610
Most of our emails at
Litmus are single column.

5
00:00:12.610 --> 00:00:17.610
It really helps you to focus your content
and force that strong visual hierarchy

6
00:00:17.610 --> 00:00:20.130
which we were talking about
when it comes to accessibility.

7
00:00:20.130 --> 00:00:22.880
And it helps keep things
really easily maintainable.

8
00:00:22.880 --> 00:00:27.010
And you can create new emails pretty
quickly using that simpler single

9
00:00:27.010 --> 00:00:28.230
column approach.

10
00:00:28.230 --> 00:00:33.130
But a lot of times you're going to have
to create this multiple column layout for

11
00:00:33.130 --> 00:00:34.050
a variety of reasons.

12
00:00:34.050 --> 00:00:35.700
You might have a product grid.

13
00:00:35.700 --> 00:00:39.440
You might have a calendar
event like has a picture with

14
00:00:39.440 --> 00:00:44.220
whatever kind of media you have next to
it, that kind of media card type design.

15
00:00:44.220 --> 00:00:46.440
And you're gonna have to
introduce these multiple columns.

16
00:00:46.440 --> 00:00:49.540
So the way you do that is
still relying on your tables.

17
00:00:49.540 --> 00:00:52.700
And then we'll start using
multiple table cells in a single

18
00:00:52.700 --> 00:00:55.410
row to provide those different columns.

19
00:00:55.410 --> 00:00:58.440
But you again want to nest
these in a specific order.

20
00:00:58.440 --> 00:01:01.830
You're gonna have that fluid table again,
that's your main container.

21
00:01:01.830 --> 00:01:04.700
You're gonna have that fixed
width table which was what our

22
00:01:04.700 --> 00:01:06.470
600 pixel wide table was before.

23
00:01:06.470 --> 00:01:10.280
Then you're gonna have another fluid
table that's 100% wide underneath that.

24
00:01:10.280 --> 00:01:14.660
And then you'll have your final kind of
fixed width tables for those columns.

25
00:01:14.660 --> 00:01:18.110
And we'll see how that works
out in this two-one-three

26
00:01:18.110 --> 00:01:21.000
column structure that we're
gonna build in a second here.

27
00:01:21.000 --> 00:01:24.930
So those final fixed tables
usually work better if they're,

28
00:01:26.650 --> 00:01:29.260
you can use percentage-based width for
that.

29
00:01:29.260 --> 00:01:34.036
So in our example, we'll set that to
a percentage like 50% for the left and

30
00:01:34.036 --> 00:01:35.170
the right.

31
00:01:35.170 --> 00:01:38.360
You can do 33% if you're doing
a three-column approach,

32
00:01:38.360 --> 00:01:39.660
something like that.

33
00:01:39.660 --> 00:01:42.250
You can do pixel-based stuff.

34
00:01:42.250 --> 00:01:45.780
But if you get really heavily nested and
start building a bunch of multiple

35
00:01:45.780 --> 00:01:48.590
columns, then the math gets
a little bit trickier.

36
00:01:48.590 --> 00:01:50.310
And you have to account for
that a little bit more.

37
00:01:50.310 --> 00:01:52.090
Especially when it comes to Outlook,

38
00:01:52.090 --> 00:01:57.500
which is a little bit tricky with it when
it comes to the math on widths of items.

39
00:01:57.500 --> 00:01:59.990
So we'll see how that plays
out in a second here, too,

40
00:01:59.990 --> 00:02:01.828
when we start building out this example.

41
00:02:01.828 --> 00:02:06.718
First I want you to try to add two
columns to your email campaign using that

42
00:02:06.718 --> 00:02:07.555
approach.

43
00:02:07.555 --> 00:02:11.093
We'll have that fixed table, or sorry,
the fluid table, the fixed table,

44
00:02:11.093 --> 00:02:13.120
the fluid table, the fixed table.

45
00:02:13.120 --> 00:02:19.780
And add two tables in that final
container for your different columns.

46
00:02:19.780 --> 00:02:22.560
So start with two,
add a third one in there if you want.

47
00:02:22.560 --> 00:02:26.050
You can try using pixel sizing or
percentage sizing.

48
00:02:26.050 --> 00:02:28.670
And see how you'd actually develop that.

49
00:02:28.670 --> 00:02:32.130
Just throw some dummy content in there,
an image if you want to.

50
00:02:32.130 --> 00:02:35.270
And see if you can get that
multiple column structure working.

51
00:02:35.270 --> 00:02:40.110
Before we head back and see how somebody
like me would code something like that.

52
00:02:40.110 --> 00:02:43.370
So let's take five minutes and
start adding some columns for

53
00:02:43.370 --> 00:02:44.580
those tables that we just built out.

