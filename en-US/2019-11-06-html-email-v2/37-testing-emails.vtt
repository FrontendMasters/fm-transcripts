WEBVTT

1
00:00:00.540 --> 00:00:04.380
&gt;&gt; Rodriguez: So I wanted to end up
just going through some of the tools,

2
00:00:04.380 --> 00:00:09.420
some of the resources that I found
really helpful as I've gotten deeper and

3
00:00:09.420 --> 00:00:12.144
deeper into email design development.

4
00:00:12.144 --> 00:00:15.529
And remind you of a couple of things that
you should keep in mind as you start

5
00:00:15.529 --> 00:00:18.110
progressing and
in this journey of email development.

6
00:00:18.110 --> 00:00:22.305
The first one is really
about testing your emails.

7
00:00:22.305 --> 00:00:24.573
Obviously, I have work for litmus.

8
00:00:24.573 --> 00:00:28.006
I used litmus for a long time for
years before I joined the company.

9
00:00:28.006 --> 00:00:30.570
There are other services out there.

10
00:00:30.570 --> 00:00:34.592
Regardless of what you do, what service
you end up using, I would highly recommend

11
00:00:34.592 --> 00:00:37.651
that you test all of your email
campaigns before you send them.

12
00:00:37.651 --> 00:00:42.282
We saw earlier that chart that had
the Gmail's on Android and iOS, and

13
00:00:42.282 --> 00:00:44.720
Outlook on Android and iOS.

14
00:00:44.720 --> 00:00:48.446
Over a three month period, they made
45 updates between them that could

15
00:00:48.446 --> 00:00:50.624
potentially break your email campaigns.

16
00:00:50.624 --> 00:00:53.910
And that's just stuff we knew about.

17
00:00:53.910 --> 00:00:57.570
So like webmail clients, a lot of times
will push updates to their service.

18
00:00:57.570 --> 00:00:59.030
It's that continuous integration.

19
00:00:59.030 --> 00:01:03.955
You're constantly updating those
clients and your apps and services.

20
00:01:03.955 --> 00:01:07.700
And all those updates could potentially
break your email campaigns.

21
00:01:07.700 --> 00:01:09.477
So regardless what you're doing,

22
00:01:09.477 --> 00:01:13.037
using some sort of testing service
is essential as an email developer.

23
00:01:13.037 --> 00:01:17.264
Litmus gives you close to 100 different
email clients you can test in.

24
00:01:17.264 --> 00:01:19.323
We have a code editor that
allows you to test in there.

25
00:01:19.323 --> 00:01:23.950
If you're not using a dedicated service
still send yourself test emails.

26
00:01:23.950 --> 00:01:29.085
So I know there is a question around,
how do you send an HTML email?

27
00:01:29.085 --> 00:01:33.920
So if you can, get your hands on an email
service provider like MailChimp or

28
00:01:33.920 --> 00:01:38.913
Campaign Monitor, Salesforce Marketing
Cloud, IBM Watson, whatever you

29
00:01:38.913 --> 00:01:44.095
happen to be using that'll allow you to
send these test campaigns to yourself.

30
00:01:44.095 --> 00:01:46.205
If you can't get your hands on that,

31
00:01:46.205 --> 00:01:50.902
if your company kinda locks that down to
your manager or somebody else on the team,

32
00:01:50.902 --> 00:01:54.070
there's this website called
puts mail.com litmus.

33
00:01:54.070 --> 00:01:55.783
It started before litmus, we acquired it.

34
00:01:55.783 --> 00:01:57.490
We keep it running.

35
00:01:57.490 --> 00:02:00.480
It allows you to add up
to ten email addresses so

36
00:02:00.480 --> 00:02:05.019
you could have different email
addresses for Outlook or AOL or Gmail.

37
00:02:05.019 --> 00:02:07.475
You can add those in there,
you add a subject line,

38
00:02:07.475 --> 00:02:10.750
you dump your code in there and
then you can send that test campaign.

39
00:02:10.750 --> 00:02:14.710
So if you're not using a dedicated service
to test across all these different

40
00:02:14.710 --> 00:02:19.650
clients, at least set up as many free
test addresses as you possibly can.

41
00:02:19.650 --> 00:02:22.760
Send yourself those email campaigns,
interact with them and

42
00:02:22.760 --> 00:02:24.828
see how they work in those
different e-mail campaigns.

43
00:02:24.828 --> 00:02:28.559
Cuz that'll allow you to make sure you're
not sending these broken emails to your

44
00:02:28.559 --> 00:02:32.304
subscribers, creating these really
terrible experiences that nobody enjoys.

45
00:02:32.304 --> 00:02:34.879
And hopefully you won't
get marked as spammers or

46
00:02:34.879 --> 00:02:37.218
something like that with your subscribers.

47
00:02:37.218 --> 00:02:41.831
Troubleshooting is,
I know there are a couple of questions

48
00:02:41.831 --> 00:02:45.160
about how you determine what works where.

49
00:02:45.160 --> 00:02:46.641
Is there a good reference for

50
00:02:46.641 --> 00:02:50.477
figuring out where these things
are working across these email clients?

51
00:02:50.477 --> 00:02:53.070
This one is brand new.

52
00:02:53.070 --> 00:02:55.088
It got released,
I think a week or two ago.

53
00:02:55.088 --> 00:02:57.490
It's called Caniemail.com.

54
00:02:57.490 --> 00:03:03.022
So similar to the HTML version can I use
which is a massively valuable resource.

55
00:03:03.022 --> 00:03:07.936
Caniemail.com allows you to either look
through a list of features in CSS and

56
00:03:07.936 --> 00:03:11.950
HTML and see where there
supported crafts these clients.

57
00:03:11.950 --> 00:03:12.977
Or you can search for them.

58
00:03:12.977 --> 00:03:16.231
So we can look at what
that looks like here.

59
00:03:16.231 --> 00:03:18.240
I think I have it pulled up, yep.

60
00:03:18.240 --> 00:03:22.030
So Caniemal.com, so
something like font-face.

61
00:03:22.030 --> 00:03:23.426
If you're using web fonts,

62
00:03:23.426 --> 00:03:27.220
you would include that using the app
font-face property inside of your CSS.

63
00:03:27.220 --> 00:03:31.890
You can quickly see that its supported
in Apple Mail, no surprise there.

64
00:03:31.890 --> 00:03:32.700
It's not supported in Gmail.

65
00:03:32.700 --> 00:03:35.610
Has limited support in Outlook.

66
00:03:35.610 --> 00:03:39.954
That limited support means that it doesn't
show the Web Fonts but it will by default

67
00:03:39.954 --> 00:03:44.312
fall back to Times New Roman, regardless
of what your fallback fonts happen to be.

68
00:03:44.312 --> 00:03:47.085
There is some fixes for that.

69
00:03:47.085 --> 00:03:50.151
But you can see where these
things are supported.

70
00:03:50.151 --> 00:03:55.317
You can see any notes about the rendering
support across those email clients.

71
00:03:55.317 --> 00:03:59.334
And then there is even links to
resource about actually implement that.

72
00:03:59.334 --> 00:04:03.679
So this is a super helpful,
brand new thing that just got rolled out.

73
00:04:03.679 --> 00:04:08.789
You can go in if you're wondering if
media queries work across email clients.

74
00:04:08.789 --> 00:04:11.740
You can see that Apple Mail,
they work beautifully.

75
00:04:11.740 --> 00:04:13.071
Gmail has a couple of limitations.

76
00:04:13.071 --> 00:04:16.180
And then the Outlook's no surprise.

77
00:04:16.180 --> 00:04:18.932
The older versions of Outlook, or
the desktop versions of Outlook,

78
00:04:18.932 --> 00:04:20.648
don't work very well with media queries.

79
00:04:20.648 --> 00:04:24.200
So it's a super handy resource.

80
00:04:24.200 --> 00:04:27.040
I would definitely suggest checking
that out and bookmarking it

81
00:04:27.040 --> 00:04:29.860
because it's one of the quickest
ways to figure out what works where.

82
00:04:31.630 --> 00:04:35.760
Similar to that Campaign Monitor
has maintained this for, god,

83
00:04:35.760 --> 00:04:37.270
over a decade at this point.

84
00:04:37.270 --> 00:04:39.598
It's campaignmonitor.com/css.

85
00:04:39.598 --> 00:04:42.140
And again, this goes through and lists.

86
00:04:42.140 --> 00:04:45.939
It's not quite as searchable or
easy to use as caniemail.com, but

87
00:04:45.939 --> 00:04:47.605
it's still really useful and

88
00:04:47.605 --> 00:04:52.160
it goes a little bit more in depth to
what properties it actually tests out.

89
00:04:52.160 --> 00:05:00.180
But if you go over there you can see
different types of the email campaign.

90
00:05:00.180 --> 00:05:03.110
So you can look at,
sorry I'm gonna go back to,

91
00:05:03.110 --> 00:05:05.780
we'll go to beginning here,
different aspects.

92
00:05:05.780 --> 00:05:06.490
So whether or

93
00:05:06.490 --> 00:05:12.160
not style in the head is supported,
whether style in the body is supported.

94
00:05:12.160 --> 00:05:13.310
Different selectors,

95
00:05:13.310 --> 00:05:18.170
different media queries on different
properties that you're testing for.

96
00:05:18.170 --> 00:05:22.320
How different types of fonts or
SVGs are supported.

97
00:05:22.320 --> 00:05:25.140
It's a really in-depth way to look
at what's supported across these

98
00:05:25.140 --> 00:05:25.914
e-mail clients.

99
00:05:25.914 --> 00:05:29.422
So you can pop open each of those
see where it's supported on desktop,

100
00:05:29.422 --> 00:05:30.503
mobile and web mail.

101
00:05:30.503 --> 00:05:35.884
But this has been kinda the go to resource
for most email developers over the years.

102
00:05:35.884 --> 00:05:39.333
It started out small,
it's been growing and they've been,

103
00:05:39.333 --> 00:05:42.267
they did a good update of
this maybe about a year ago.

104
00:05:42.267 --> 00:05:45.486
It's this new design that's pretty
easy to use and find what you need.

105
00:05:45.486 --> 00:05:48.950
I think you can search through here.

106
00:05:48.950 --> 00:05:51.639
But I do like I have to say like that,

107
00:05:51.639 --> 00:05:57.033
this kind of view this caniuse.com
type view that caniemail calm has.

108
00:06:00.120 --> 00:06:03.957
&gt;&gt; Rodriguez: Freshinbox.com is a blog
that's run by a guy in the industry named

109
00:06:03.957 --> 00:06:06.902
Justin Khoo who does a lot
of work to help document,

110
00:06:06.902 --> 00:06:11.260
especially around interactive
email what you can and can't do.

111
00:06:11.260 --> 00:06:16.080
So fresh and box.com resources
is another great tool for

112
00:06:16.080 --> 00:06:20.020
you to see what supported where
he calls a kinetic email.

113
00:06:20.020 --> 00:06:22.180
It's another term for interactive email.

114
00:06:22.180 --> 00:06:25.170
So he has this chart that looks
at the different properties.

115
00:06:25.170 --> 00:06:26.934
We would use when building
interactive emails.

116
00:06:26.934 --> 00:06:30.329
So things like CSS transitions or
animation.

117
00:06:31.510 --> 00:06:36.553
The checked pseudo selector, where
forms are supported things like that,

118
00:06:36.553 --> 00:06:41.141
to show you can reliably make these
interactive e-mail campaigns.

119
00:06:41.141 --> 00:06:44.467
He has a couple of notes too
which are helpful to figure out

120
00:06:44.467 --> 00:06:46.834
how troubleshoot some of those issues.

121
00:06:46.834 --> 00:06:49.410
One of the great things
too is that he has.

122
00:06:49.410 --> 00:06:53.070
All these examples and different
techniques listed so if you want to look

123
00:06:53.070 --> 00:06:58.500
at how to do a hamburger menu,
but he has that code available.

124
00:06:58.500 --> 00:06:59.820
He has a description or

125
00:06:59.820 --> 00:07:03.786
a tutorial about how to implement
something like a hamburger menu.

126
00:07:03.786 --> 00:07:07.298
So Freshinbox.com is
another great resource for

127
00:07:07.298 --> 00:07:12.237
figuring out specifically where
interactive emails are supported.

128
00:07:12.237 --> 00:07:17.340
And then seeing more examples of
interactivity inside of email campaigns.

