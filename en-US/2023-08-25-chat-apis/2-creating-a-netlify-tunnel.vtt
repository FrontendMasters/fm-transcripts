WEBVTT

1
00:00:00.070 --> 00:00:04.909
We are going to clone the start
branch of the Learn with Jason chat

2
00:00:04.909 --> 00:00:07.115
ops Frontend Masters repo.

3
00:00:07.115 --> 00:00:12.825
To clone this repo, we're going to run
GitHub repo clone learn with Jason,

4
00:00:12.825 --> 00:00:15.963
and then chatops-frontend-masters.

5
00:00:15.963 --> 00:00:19.486
And then I'm gonna run a -- to
get us out of the GitHub CLI and

6
00:00:19.486 --> 00:00:21.508
into just plain old git commands.

7
00:00:21.508 --> 00:00:26.030
And I wanna clone this start repo,
so -b for branch and start.

8
00:00:26.030 --> 00:00:29.147
So, this is gonna give
us the start branch,

9
00:00:29.147 --> 00:00:33.798
and when I move into this,
I can see that I'm on the start branch.

10
00:00:33.798 --> 00:00:40.152
So, here we have the pieces that we're
gonna need, and there's not a lot in here.

11
00:00:40.152 --> 00:00:42.636
These are all just stubbed out files so

12
00:00:42.636 --> 00:00:45.438
that we have a starting
point to work from.

13
00:00:45.438 --> 00:00:48.484
And then we've got our big old
file of type definitions so

14
00:00:48.484 --> 00:00:51.288
that we don't have to write
any of those ourselves.

15
00:00:51.288 --> 00:00:53.864
You can look at those if
you're interested but

16
00:00:53.864 --> 00:00:56.251
you won't need to be
in this folder at all.

17
00:00:56.251 --> 00:01:00.611
Then we have a couple other pieces
that we'll want, like we've got

18
00:01:00.611 --> 00:01:05.374
the Netlify config setup here to grab
the functions from the right place.

19
00:01:05.374 --> 00:01:07.256
And to set up a redirect so

20
00:01:07.256 --> 00:01:11.843
that we can use a slash API
command instead of anything else.

21
00:01:11.843 --> 00:01:17.036
And yeah, that pretty much puts
us in good shape here, so, Next,

22
00:01:17.036 --> 00:01:20.995
what I'm gonna do is I wanna get
this ready for us to develop.

23
00:01:20.995 --> 00:01:26.642
So, I'm gonna NPM install, and that
gives us the dependencies that we need.

24
00:01:26.642 --> 00:01:28.485
There aren't a lot in this one.

25
00:01:28.485 --> 00:01:32.445
We're basically using Netlify functions
and then the types node, we'll install,

26
00:01:32.445 --> 00:01:35.370
actually I don't think we'll
install anything else as we go.

27
00:01:35.370 --> 00:01:38.641
This is a pretty lightweight
bot which I always appreciate,

28
00:01:38.641 --> 00:01:43.141
because it means there's just less things
to hold in your head as context as you go.

29
00:01:43.141 --> 00:01:47.865
Then the other thing that we need to do is
we need to actually deploy this to Netlify

30
00:01:47.865 --> 00:01:51.684
so that we can run the live tunnel,
and that's because Netlify is

31
00:01:51.684 --> 00:01:55.027
using details from the project
to set up the live tunnel.

32
00:01:55.027 --> 00:01:58.948
So we're going to run a GitHub repo fork.

33
00:01:58.948 --> 00:02:03.917
And this is going to give me
a copy of this repo in my

34
00:02:03.917 --> 00:02:08.907
personal account, and
I do want to add a remote.

35
00:02:08.907 --> 00:02:15.333
Okay, so now that I've got this
cloned on my own version of it,

36
00:02:15.333 --> 00:02:20.084
I can push this thing live and
be able to use it.

37
00:02:20.084 --> 00:02:24.650
So the reason we're gonna do this again
is because we need to have a live tunnel,

38
00:02:24.650 --> 00:02:28.961
because Slack bots operate by sending
requests to a live URL that we set up.

39
00:02:28.961 --> 00:02:31.388
So, similar to a webhook
if you've ever set one up.

40
00:02:31.388 --> 00:02:34.338
And the way that a webhook
works is that it's

41
00:02:34.338 --> 00:02:37.541
a URL available somewhere
publicly on the web.

42
00:02:37.541 --> 00:02:42.299
And whenever the app that you've
added a webhook to has something for

43
00:02:42.299 --> 00:02:46.904
your particular command,
it sends that payload to that live URL.

44
00:02:46.904 --> 00:02:50.530
So for us to test a Slack bot,
we need to have that live URL,

45
00:02:50.530 --> 00:02:53.280
which won't work with local development.

46
00:02:53.280 --> 00:02:58.459
So, the Netlify CLI has this
built-in feature to add a live

47
00:02:58.459 --> 00:03:03.950
tunnel into our local development box,
which means that we can

48
00:03:03.950 --> 00:03:10.392
use the webhook public URL field on
Slack with our local development box.

49
00:03:10.392 --> 00:03:14.945
Which it's gonna make such a huge
difference for the speed of development.

50
00:03:14.945 --> 00:03:18.264
Cuz our only alternative would be to
actually deploy this every time we make

51
00:03:18.264 --> 00:03:20.910
a change to test it and
see if it works, which is it's slow.

52
00:03:20.910 --> 00:03:22.356
It's frustrating.

53
00:03:22.356 --> 00:03:23.644
And it just tends to take,

54
00:03:23.644 --> 00:03:27.226
it takes me out of it if I have to wait
five minutes between trying things.

55
00:03:27.226 --> 00:03:30.696
And I tend to get distracted and
move on to other projects, and

56
00:03:30.696 --> 00:03:34.058
I just tend to not make a lot
of progress in those instances.

57
00:03:34.058 --> 00:03:41.210
So, now that we've got this thing forked,
I am going to install the Netlify CLI.

58
00:03:43.121 --> 00:03:46.291
Okay, so
we've got the Netlify CLI installed,

59
00:03:46.291 --> 00:03:49.939
wow, and I'm gonna run
netlify-v to get the version.

60
00:03:49.939 --> 00:03:56.668
So, we're running
Netlify CLI version 15.2.0.

61
00:03:56.668 --> 00:04:01.595
Then I'm going to make sure I'm
logged in by running Netlify login.

62
00:04:01.595 --> 00:04:02.746
And it says I'm already logged in.

63
00:04:02.746 --> 00:04:09.230
Why don't I log out so
that I can show that actual flow?

64
00:04:09.230 --> 00:04:13.139
Okay, so I'm gonna run Netlify login, and

65
00:04:13.139 --> 00:04:17.997
it's going to open up my GitHub account,
or my sorry,

66
00:04:17.997 --> 00:04:23.086
my Netlify account, and
ask if I meant to log in, right?

67
00:04:23.086 --> 00:04:25.786
So, I want to authorize that.

68
00:04:25.786 --> 00:04:27.461
Great, I can close this window.

69
00:04:27.461 --> 00:04:30.030
So I'm gonna close this one down and
then back here.

70
00:04:30.030 --> 00:04:31.114
I'm now logged in.

71
00:04:31.114 --> 00:04:36.370
And if I run Netlify status,
it will show me who I am and all that.

72
00:04:36.370 --> 00:04:40.322
But it says here, I'm not in a folder
that's linked to a site, and

73
00:04:40.322 --> 00:04:43.231
that's expected cuz we
haven't set one up yet.

74
00:04:43.231 --> 00:04:48.932
So, we're going to set up that
site by running Netlify init, And

75
00:04:48.932 --> 00:04:53.685
we're going to connect, let's say we
want to create and configure a new site.

76
00:04:53.685 --> 00:04:55.522
This is a brand new one
that we wanna ship.

77
00:04:55.522 --> 00:04:59.987
So, I'm gonna put it on my team, and
we can call it whatever we want, but

78
00:04:59.987 --> 00:05:03.942
because we're going to have to
update this name in a few places,

79
00:05:03.942 --> 00:05:06.751
I'm gonna give it a name
that I can remember.

80
00:05:06.751 --> 00:05:11.851
So I'll just go with like a short name
like that, and then we don't have

81
00:05:11.851 --> 00:05:17.892
a build command, we can keep the defaults
there, it's gonna set all that up for us.

82
00:05:17.892 --> 00:05:20.658
Good, and now we're happy.

83
00:05:20.658 --> 00:05:24.383
So next,
we can start this thing in live mode.

84
00:05:24.383 --> 00:05:27.083
So, the Netlify dev command
will start a local dev server,

85
00:05:27.083 --> 00:05:30.053
it'll auto detect what's going on,
because in this case we're

86
00:05:30.053 --> 00:05:33.147
using serverless functions,
which we'll talk about in a moment.

87
00:05:33.147 --> 00:05:35.782
Netlify is gonna auto detect all of that.

88
00:05:35.782 --> 00:05:38.593
But what we want to add is this live flag.

89
00:05:38.593 --> 00:05:43.570
And so what the live flag does is it
tells Netlify to set up that live tunnel,

90
00:05:43.570 --> 00:05:48.564
which again, we need to be set up with
a deployed site to use that live flag.

91
00:05:48.564 --> 00:05:52.174
Because it's gonna use
the name of the project, and

92
00:05:52.174 --> 00:05:56.043
just a few other things to
actually make this function.

93
00:05:56.043 --> 00:06:01.076
So, this is now a live
running instance of our

94
00:06:01.076 --> 00:06:06.647
development box,
which is available on the web.

95
00:06:06.647 --> 00:06:11.641
So, if I go in here and I look at our
function here, this is our function for

96
00:06:11.641 --> 00:06:17.379
the Slack, and right now it doesn't do
anything other than return a 200 status.

97
00:06:17.379 --> 00:06:21.165
And the body handles Slack interactivity.

98
00:06:21.165 --> 00:06:27.041
So, if I head back out,
open that in the bigger

99
00:06:27.041 --> 00:06:32.466
window here, and I head over to API Slack,

100
00:06:32.466 --> 00:06:37.759
we've got, that's running in the web.

101
00:06:37.759 --> 00:06:40.707
And anybody who wants to
can hit this if you go

102
00:06:40.707 --> 00:06:45.313
to the
chatops-fem-22e106.netlify.live/api/slack

103
00:06:45.313 --> 00:06:49.002
that is going to run on
your computer right now for

104
00:06:49.002 --> 00:06:52.207
as long as my development
instance is running.

105
00:06:52.207 --> 00:06:55.449
And the reason this is exciting is
it means that I can now use this.

106
00:06:55.449 --> 00:06:58.308
And whenever I make a change,

107
00:07:00.614 --> 00:07:05.041
That change is also available
through that live URL instantly.

108
00:07:05.041 --> 00:07:09.078
And so that means that my local
development will be reflected in

109
00:07:09.078 --> 00:07:10.982
the Slack's "/" command on Save,

110
00:07:10.982 --> 00:07:15.566
instead of requiring me to deploy
the serverless function every time.

111
00:07:15.566 --> 00:07:19.556
And even if it only takes a few seconds,
it just takes you out of your flow.

112
00:07:19.556 --> 00:07:24.424
So, this is a big reason, it's why the
inconvenience of having to get that site

113
00:07:24.424 --> 00:07:26.604
deployed and set up in Netlify CLI,

114
00:07:26.604 --> 00:07:30.767
it's why it's worth it because
you get this extra interactivity.

115
00:07:30.767 --> 00:07:32.109
And this is handy in a lot of reasons.

116
00:07:32.109 --> 00:07:35.726
Like you can use this to share your work
in progress with a co-worker without

117
00:07:35.726 --> 00:07:38.055
having to deploy it or
all sorts of other things.

118
00:07:38.055 --> 00:07:41.997
But in this particular case, I don't know
of any other way to do this other than

119
00:07:41.997 --> 00:07:43.749
setting up something like ngrok.

120
00:07:43.749 --> 00:07:46.306
Which is, again,
basically the same functionality but

121
00:07:46.306 --> 00:07:49.301
it's a little more involved and
it's a separate service as well.

122
00:07:49.301 --> 00:07:55.237
So, that is gonna be the the foundation
of running this bot.

