WEBVTT

1
00:00:00.000 --> 00:00:03.981
What we're gonna build today is we're
gonna build a custom bot for slack.

2
00:00:03.981 --> 00:00:07.503
That custom bot is going
to feature a slash command,

3
00:00:07.503 --> 00:00:10.865
which will allow someone
to say I have a request and

4
00:00:10.865 --> 00:00:16.244
that request is going to take user
input and save that user input to notion.

5
00:00:16.244 --> 00:00:19.733
We're also gonna have a context shortcut
so the little three dots on a message.

6
00:00:19.733 --> 00:00:23.072
Where you can drop that down and
then click a process reminder so

7
00:00:23.072 --> 00:00:27.175
that the bot will tell somebody like,
hey, this looks like it's a request.

8
00:00:27.175 --> 00:00:30.860
If you want us to measure this, you've
got to put it into the request form,

9
00:00:30.860 --> 00:00:33.212
here's the slash command
to make that happen.

10
00:00:33.212 --> 00:00:37.488
And then we wanna set up a weekly reminder
for the team, for those incoming tasks for

11
00:00:37.488 --> 00:00:39.458
anything that hasn't been handled.

12
00:00:39.458 --> 00:00:42.600
We wanna make sure that we're letting
people know like, hey, you've got requests

13
00:00:42.600 --> 00:00:45.045
in your queue don't drop those,
because this is the other part.

14
00:00:45.045 --> 00:00:50.452
When you put a process in place, you have
to adhere to that process unflinchingly

15
00:00:50.452 --> 00:00:56.033
as a team, or else everybody else in the
company learns that your process is flaky.

16
00:00:56.033 --> 00:01:00.176
And people won't use flaky processes,
this is, we've seen this in tech,

17
00:01:00.176 --> 00:01:04.207
we've seen this in interpersonal
communication and all over the place.

18
00:01:04.207 --> 00:01:07.788
If something is inconsistently applied,
you stop trusting it, and

19
00:01:07.788 --> 00:01:09.898
that means you're less likely to do it.

20
00:01:09.898 --> 00:01:12.614
So as a team,
when you put a process in place,

21
00:01:12.614 --> 00:01:16.347
you need to make sure it's
a process you can 100% follow.

22
00:01:16.347 --> 00:01:19.832
And that's why things like having a weekly
reminder are really useful because

23
00:01:19.832 --> 00:01:22.441
you can see, here are the tasks
that we haven't handled.

24
00:01:22.441 --> 00:01:26.450
You can go handle them right away as
part of your weekly standup meeting or

25
00:01:26.450 --> 00:01:27.896
a weekly triage session or

26
00:01:27.896 --> 00:01:32.187
whatever it is where you go and make
sure that everything has been evaluated.

27
00:01:32.187 --> 00:01:34.862
You've asked questions if
something needs clarification,

28
00:01:34.862 --> 00:01:36.980
assigned it back to
the person who requested it.

29
00:01:36.980 --> 00:01:40.253
You've assigned it to a team member if
it's something that's ready to be worked

30
00:01:40.253 --> 00:01:43.716
on, or you've said, this isn't something
we can handle if it's outside of what you

31
00:01:43.716 --> 00:01:44.844
can prioritize right now.

32
00:01:44.844 --> 00:01:46.847
But in any case,
you are actually going in and

33
00:01:46.847 --> 00:01:50.027
prioritizing these things because
that builds trust in your process.

34
00:01:50.027 --> 00:01:53.297
People know that if they put
something into the slash command,

35
00:01:53.297 --> 00:01:57.009
that they will get a response in
a reasonable timeframe from your team.

36
00:01:57.009 --> 00:01:59.743
So how we're gonna build
that is we are gonna,

37
00:01:59.743 --> 00:02:04.451
the biggest part is we're gonna set up
a live tunnel so that we can test locally.

38
00:02:04.451 --> 00:02:08.834
This is one of the things that gets really
challenging when you start building with

39
00:02:08.834 --> 00:02:10.359
third party tools that are,

40
00:02:10.359 --> 00:02:14.508
you know, Slack bots and other types of
commands that rely on a live service.

41
00:02:14.508 --> 00:02:16.393
When you're developing locally,

42
00:02:16.393 --> 00:02:20.346
you don't have a live URL that you can
put into these services, which often

43
00:02:20.346 --> 00:02:24.393
means that what you're gonna end up
doing is having to deploy your command.

44
00:02:24.393 --> 00:02:28.203
And have it up on a production URL for
testing which makes it so slow and so

45
00:02:28.203 --> 00:02:29.157
frustrating, so

46
00:02:29.157 --> 00:02:33.175
instead what we're gonna do is we're
gonna use a live tunneling service.

47
00:02:33.175 --> 00:02:38.247
That will allow us to keep up a local
development environment running,

48
00:02:38.247 --> 00:02:41.976
but also give it a live URL so
that we can test as we go.

49
00:02:41.976 --> 00:02:44.836
We're gonna use serverless
functions to power our command so

50
00:02:44.836 --> 00:02:45.993
that we can keep it free.

51
00:02:45.993 --> 00:02:48.696
Our bot does not need to
be constantly running.

52
00:02:48.696 --> 00:02:52.111
Our bot is all based on incoming requests.

53
00:02:52.111 --> 00:02:55.595
So you're gonna run a slash command which
says, hey bot, that'll wake the bot up.

54
00:02:55.595 --> 00:02:57.188
You've got the cron job,

55
00:02:57.188 --> 00:03:01.897
which is gonna be running on a regular
schedule, so that'll wake the bot up,

56
00:03:01.897 --> 00:03:05.969
and each of these things is something
that is on a like a pull basis.

57
00:03:05.969 --> 00:03:08.473
We don't need the on a push basis, sorry.

58
00:03:08.473 --> 00:03:12.127
We don't need the command to be
listening or reading every message or

59
00:03:12.127 --> 00:03:16.359
anything like that, it's so we'll use
a serverless function, keep it free.

60
00:03:16.359 --> 00:03:19.889
Cron jobs are gonna be used to
handle our weekly reminders and,

61
00:03:19.889 --> 00:03:22.152
this is gonna be based
on a few accounts so

62
00:03:22.152 --> 00:03:25.631
the first thing is we're gonna
be working from a GitHub repo.

63
00:03:25.631 --> 00:03:30.724
So you'll need a GitHub account if you
wanna push and deploy this we are going

64
00:03:30.724 --> 00:03:35.912
to be working in Slack today so you'll
need a Slack account with a workspace.

65
00:03:35.912 --> 00:03:38.640
You can create one of these for
free At slack.com and

66
00:03:38.640 --> 00:03:40.381
you'll just need admin access.

67
00:03:40.381 --> 00:03:44.453
So if you have admin access to a Slack
account you are welcome to create a test

68
00:03:44.453 --> 00:03:47.104
channel and
work in there with no other friends so

69
00:03:47.104 --> 00:03:49.646
you're not you know being
noisy to your team.

70
00:03:49.646 --> 00:03:53.545
Or if you wanna be sure that you
are not disrupting your team,

71
00:03:53.545 --> 00:03:56.985
just create a new workspace and
work in there first and

72
00:03:56.985 --> 00:04:01.516
then you can port this bot, to any
workspace that you want to use it in.

73
00:04:01.516 --> 00:04:05.757
You're gonna be using Notion, so
you wanna have a Notion account and

74
00:04:05.757 --> 00:04:10.594
a Notion workspace that has API access,
so somewhere where you're an admin.

75
00:04:10.594 --> 00:04:15.040
We're gonna be creating one database
in it that we read and write from, so

76
00:04:15.040 --> 00:04:18.786
you'll just need the ability to
create a bot that can do that.

77
00:04:18.786 --> 00:04:21.631
We're gonna be using Netlify for
the serverless functions for

78
00:04:21.631 --> 00:04:25.120
the live tunnel and for the Cron jobs,
so to follow along with this tutorial,

79
00:04:25.120 --> 00:04:27.498
you're gonna want a Netlify account,
it's free.

80
00:04:27.498 --> 00:04:31.590
Again, everything that we're using
today is gonna be on free tier, so

81
00:04:31.590 --> 00:04:33.377
no paid accounts or anything.

82
00:04:33.377 --> 00:04:38.955
This account is gonna be how we deploy
things, how we set up the live tunnel.

83
00:04:38.955 --> 00:04:44.613
You could use something like ngrok, but
it's a lot of setup and it's a little more

84
00:04:44.613 --> 00:04:50.032
handson than using a Netlify dev command,
so that's why I went with Netlify.

85
00:04:50.032 --> 00:04:54.705
Again, you could use ngrok and then any
serverless functions provider that you

86
00:04:54.705 --> 00:04:59.043
wish, this is not a workshop that's
like tied to this specific account.

87
00:04:59.043 --> 00:05:03.229
This is just the way that I
found that is the fastest and

88
00:05:03.229 --> 00:05:06.031
least painful to get things set up.

89
00:05:06.031 --> 00:05:09.245
The free tier of these services
are gonna be all you need, again,

90
00:05:09.245 --> 00:05:13.411
just as a reminder, tools that you gonna
need, you gonna need git on your computer.

91
00:05:13.411 --> 00:05:18.098
You gonna need Node v16 higher,
the Netlify CLI is how we're

92
00:05:18.098 --> 00:05:22.441
gonna set up that live tunnel,
so y'all gonna need that. I will walk you through in setting up that part.

93
00:05:22.441 --> 00:05:26
You'll need permission to clone repos and

94
00:05:26.306 --> 00:05:32.102
run third-party code on your
computer. If you are on a work computer that can sometimes be an issue if your computer is really locked down. So, double check that before you get started,

95
00:05:32.102 --> 00:05:38.563
make sure that you have permission
to clone, and push to GitHub repos.

96
00:05:38.563 --> 00:05:42.353
So a few things that I'll be using
that aren't required for this but

97
00:05:42.353 --> 00:05:45.224
just to give some context
on the stack that I use.

98
00:05:45.224 --> 00:05:48.876
VS code is what I'll be using
is both my code editor and

99
00:05:48.876 --> 00:05:52.706
as my terminal I like it,
you can use whatever you want.

100
00:05:52.706 --> 00:05:55.725
GitHub CLI, I use this for managing repos,

101
00:05:55.725 --> 00:05:59.885
it's delightful to use,
i love it, you don't need it, but

102
00:05:59.885 --> 00:06:05.775
that's what I'll be using whenever you see
the GH command, that's the GitHub CLI.

103
00:06:05.775 --> 00:06:10.026
And again, these are my preferences
they're not requirements you can work with

104
00:06:10.026 --> 00:06:11.913
or without these if you wish.

105
00:06:11.913 --> 00:06:15.590
Some assumed knowledge, what I assume
you're gonna know as I go through this

106
00:06:15.590 --> 00:06:19.963
workshop, some intermediate knowledge of
JavaScript, so, nothing super in-depth.

107
00:06:19.963 --> 00:06:23.175
This isn't gonna be like an algorithms
whiteboard interview or anything.

108
00:06:23.175 --> 00:06:26.714
But what I will be assuming is that
you understand the basic grammar of

109
00:06:26.714 --> 00:06:30.131
the language, you know, how to set up,
how to create variables,

110
00:06:30.131 --> 00:06:33.381
how to create functions,
how to do a loop and things like that.

111
00:06:33.381 --> 00:06:37.379
It just, we won't do like an intro to
JavaScript as part of this workshop.

112
00:06:37.379 --> 00:06:40.026
We'll be sending and
receiving data via API, and

113
00:06:40.026 --> 00:06:44.448
I'm not gonna go deep into the specifics
of that, so we'll be using the Fetch API.

114
00:06:44.448 --> 00:06:50.274
If you've never used the Fetch API, the
docs are on the Mozilla developer network,

115
00:06:50.274 --> 00:06:55.296
the MDN docs, so go check those out,
but you won't need the depth of it.

116
00:06:55.296 --> 00:06:58.641
You just need to know what I'm doing and
I will walk through that.

117
00:06:58.641 --> 00:07:01.835
Again, if you have questions,
please do ask.

118
00:07:01.835 --> 00:07:05.888
We'll be running some commands
in the terminal, and this is,

119
00:07:05.888 --> 00:07:08.034
you can just copy paste what I do.

120
00:07:08.034 --> 00:07:11.579
But I am gonna assume that you
are aware of where your terminal is and

121
00:07:11.579 --> 00:07:12.986
how to run a command in it.

122
00:07:12.986 --> 00:07:17.639
Basic awareness of TypeScript, we're gonna
be using types for autocomplete today.

123
00:07:17.639 --> 00:07:20.845
I've already written all of the types
that you're gonna need, and

124
00:07:20.845 --> 00:07:23.656
they're in the starter repo
that I'll show in a minute, so

125
00:07:23.656 --> 00:07:25.812
you don't need to write TypeScript really.

126
00:07:25.812 --> 00:07:29.280
We might add a couple types to
functions and things as we go, but

127
00:07:29.280 --> 00:07:33.346
we're not gonna be setting up types or
interfaces or anything like that.

128
00:07:33.346 --> 00:07:38.249
So you don't need to know how to write
TypeScript as much as you just need

129
00:07:38.249 --> 00:07:43.003
to know That TypeScript exists and
that we're using it a little bit.

130
00:07:43.003 --> 00:07:46.213
And yeah, again, you don't need to
be a pro for any of these things.

131
00:07:46.213 --> 00:07:48.343
You are welcome to ask questions and

132
00:07:48.343 --> 00:07:52.678
let me know if something doesn't make
sense and I'll try to explain it.

133
00:07:52.678 --> 00:07:56.870
But these are the things that I'm kind of
coming in with a baseline assumption of.

