WEBVTT

1
00:00:00.000 --> 00:00:03.821
The app we built today was built
from a standpoint of kind of showing

2
00:00:03.821 --> 00:00:08.461
an intentionally silly example so that we
didn't get too hung up on the details of

3
00:00:08.461 --> 00:00:11.281
how your team should
handle incoming requests.

4
00:00:11.281 --> 00:00:16.577
But the functionality that we've gone
through here is applicable to Slack,

5
00:00:16.577 --> 00:00:22.374
it's applicable to Discord, it'll work in
any chat app that gives you API access.

6
00:00:22.374 --> 00:00:26.804
And you don't have to use notion, you can
use any project management tool that your

7
00:00:26.804 --> 00:00:28.648
team prefers that has API access.

8
00:00:28.648 --> 00:00:35.529
So Jira, Linear, Trello, GitHub Issues,
anything you can think of, right?

9
00:00:35.529 --> 00:00:40.707
And that is a really powerful workflow
that will let you hopefully simplify

10
00:00:40.707 --> 00:00:45.638
your processes, give your team more
control over how they do work, and

11
00:00:45.638 --> 00:00:48.773
eliminate some of that
just admin overhead.

12
00:00:48.773 --> 00:00:51.514
You don't have somebody who's gotta
monitor the channel to make sure that

13
00:00:51.514 --> 00:00:52.567
things don't get dropped.

14
00:00:52.567 --> 00:00:56.305
You've got the ability to gently
nudge your co-workers without that,

15
00:00:56.305 --> 00:00:59.982
even that small conflict of having to
tell somebody that the way they did

16
00:00:59.982 --> 00:01:01.961
something isn't the preferred way.

17
00:01:01.961 --> 00:01:06.566
And as you can probably imagine,
there are a lot of things that you

18
00:01:06.566 --> 00:01:10.444
can do with this that let you take this so
much further.

19
00:01:10.444 --> 00:01:13.660
So a couple of things that
you might use this for

20
00:01:13.660 --> 00:01:16.561
that aren't directly process related.

21
00:01:16.561 --> 00:01:21.016
You could send a weekly update on your
key metrics by pulling those from

22
00:01:21.016 --> 00:01:23.669
different APIs that your team monitors.

23
00:01:23.669 --> 00:01:28.251
You could allow your team members to
check the status of a service with

24
00:01:28.251 --> 00:01:31.811
a slash command,
you could kinda have an uptime bot.

25
00:01:31.811 --> 00:01:35.951
You could create an intake fossa,
what we did creating an intake process for

26
00:01:35.951 --> 00:01:37.581
cross functional requests.

27
00:01:37.581 --> 00:01:42.501
So if a team that's not your team needs
some help, they use this modal to ask for

28
00:01:42.501 --> 00:01:45.275
the help and
clarify what they need and why.

29
00:01:45.275 --> 00:01:47.677
You could create a quick
capture process for new ideas.

30
00:01:47.677 --> 00:01:51.939
If you are on a team like a lot of the
teams I've been on, everybody's coming up

31
00:01:51.939 --> 00:01:55.558
with really fun ideas that you
can't prioritize it right now, but

32
00:01:55.558 --> 00:01:59.006
it is something you wanna do
since you don't wanna lose track.

33
00:01:59.006 --> 00:02:01.624
So having an idea/command
that puts it in to list for

34
00:02:01.624 --> 00:02:04.418
the next time you are ready
to start prioritizing work,

35
00:02:04.418 --> 00:02:07.942
that's a great way to make sure
that people's ideas don't get lost.

36
00:02:07.942 --> 00:02:12.154
And that you don't lose some of
those great ideas that could

37
00:02:12.154 --> 00:02:16.799
be excellent to work on once you
finished your account workload.

38
00:02:16.799 --> 00:02:20.634
And you could also do something like
having a way to relay customer feedback or

39
00:02:20.634 --> 00:02:21.703
customer requests.

40
00:02:21.703 --> 00:02:25.605
If you're the support team,
if you're a developer experience team,

41
00:02:25.605 --> 00:02:30.157
if you're out with your customers and they
have something that they wish existed or

42
00:02:30.157 --> 00:02:32.058
something that they don't like.

43
00:02:32.058 --> 00:02:35.854
Have a quick way in Slack to say,
hey, customers didn't like this, and

44
00:02:35.854 --> 00:02:39.356
then that posts to the right channel and
it posts as a GitHub Issue.

45
00:02:39.356 --> 00:02:43.212
And give somebody an ability to actually
act on that feedback instead of having to

46
00:02:43.212 --> 00:02:46.955
go back through Slack to try to find where
that message was when they do have some

47
00:02:46.955 --> 00:02:47.997
time to triage that.

48
00:02:47.997 --> 00:02:52.063
So another way to look at
this is you can make ChatOps

49
00:02:52.063 --> 00:02:56.044
do just about anything that
you can do with an API.

50
00:02:56.044 --> 00:03:01.164
So if you can figure out how to access
any process that you have in your company

51
00:03:01.164 --> 00:03:06.206
via API, you can probably find a way
to hook it into your ChatOps workflow.

52
00:03:06.206 --> 00:03:09.507
Because again, putting people into
the context they're already in,

53
00:03:09.507 --> 00:03:12.590
people are discussing something in Slack,
they have a question,

54
00:03:12.590 --> 00:03:16.075
they're in Slack, they wanna ask you for
something, they're in Slack.

55
00:03:16.075 --> 00:03:19.118
That is all, just put the work there.

56
00:03:19.118 --> 00:03:20.834
If somebody's asking a question,

57
00:03:20.834 --> 00:03:23.473
you can run a slash command
that shows them the answer.

58
00:03:23.473 --> 00:03:25.846
Or even better, they can run
a slash command themselves and

59
00:03:25.846 --> 00:03:27.565
then they don't have to ask the question.

60
00:03:27.565 --> 00:03:32.464
That's a great way to make sure that your
team is following processes, that they're

61
00:03:32.464 --> 00:03:36.612
clear on how things get done, and
that you don't spend a lot of time doing

62
00:03:36.612 --> 00:03:41.261
admin work instead of building things
that actually move your company forward.

63
00:03:41.261 --> 00:03:42.898
So thanks, everybody,
for hanging out today.

64
00:03:42.898 --> 00:03:46.751
If you have questions,
if you wanna find more of what I've done,

65
00:03:46.751 --> 00:03:50.129
you can head over to learnwithjason.dev or
Jason.af.

66
00:03:50.129 --> 00:03:54.026
I have a lot of educational
material that I hope you'll enjoy.

67
00:03:54.026 --> 00:03:57.995
I go live twice a week on Twitch,
Tuesdays and Thursdays, if you want to

68
00:03:57.995 --> 00:04:02.712
follow along, and you can find all of that
on the homepage of learnwithjason.dev.

69
00:04:02.712 --> 00:04:04.146
Hope to see you there.

