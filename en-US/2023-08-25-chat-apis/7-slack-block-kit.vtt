WEBVTT

1
00:00:00.190 --> 00:00:04.040
So up to this point, we've looked at
kind of direct interactivity where

2
00:00:04.040 --> 00:00:08.457
somebody runs a command and then we don't
have to worry about what their input was,

3
00:00:08.457 --> 00:00:11.140
we can just send something back.

4
00:00:11.140 --> 00:00:14.120
To make this truly useful,
we wanna make it a two way conversation.

5
00:00:14.120 --> 00:00:17.403
We want someone to be able
to send some data to us and

6
00:00:17.403 --> 00:00:20.290
then respond based on that data.

7
00:00:20.290 --> 00:00:25.290
So, we will be using something
called the Block Kit Builder

8
00:00:25.290 --> 00:00:27.893
which I can quickly show here.

9
00:00:33.426 --> 00:00:39.174
And the way that this works is
Slack has this very thorough custom

10
00:00:39.174 --> 00:00:44.831
implementation of all sorts of
things that you can do in Slack.

11
00:00:44.831 --> 00:00:49.571
So if you wanna add text fields,
if you wanna add static_select,

12
00:00:49.571 --> 00:00:54.395
if you wanna add buttons,
you wanna add images, all of these things

13
00:00:54.395 --> 00:00:59.410
are possible to do inside of Slack
if you use their JSON Schema.

14
00:00:59.410 --> 00:01:02.183
And as you can see,
this JSON Schema is thorough.

15
00:01:02.183 --> 00:01:04.547
It has a lot of pieces.

16
00:01:04.547 --> 00:01:07.709
It's pretty verbose,
which is a good thing because it means

17
00:01:07.709 --> 00:01:10.375
that it's very descriptive and
you can parse it and

18
00:01:10.375 --> 00:01:13.730
I like that about it, but
it can be a little bit of a pain to write.

19
00:01:13.730 --> 00:01:18.543
So we're gona create a helper that lets
us generate these blocks through a little

20
00:01:18.543 --> 00:01:22.384
utility function, just to keep
our code a little more compact.

21
00:01:22.384 --> 00:01:26.990
Cuz otherwise, what ends up happening is,
your function ends up just being this

22
00:01:26.990 --> 00:01:30.869
giant block of JSON that you either
have to collapse or move around.

23
00:01:30.869 --> 00:01:34.590
So I like being a little
more terse with the utility.

24
00:01:34.590 --> 00:01:36.950
You can make a choice,
you don't necessarily need to do this.

25
00:01:36.950 --> 00:01:40.814
I prefer it, and so
that's why I keep doing it.

26
00:01:40.814 --> 00:01:46.883
And what I wanna do is go back
into our slack util here, And

27
00:01:46.883 --> 00:01:53.173
down below our verification,
I'm going to add a new export.

28
00:01:53.173 --> 00:01:55.162
This is gonna be called blocks.

29
00:01:55.162 --> 00:02:01.557
And it's gonna be an object that is full
of the blocks that we want to create.

30
00:02:01.557 --> 00:02:04.431
So we're using a subset here,
you won't need to use all of these.

31
00:02:04.431 --> 00:02:07.768
So I'm gonna create one for sections.

32
00:02:09.789 --> 00:02:12.740
I'm gonna create one for an input.

33
00:02:15.836 --> 00:02:25.674
And I believe we need a select And
that's all we're gonna use today.

34
00:02:25.674 --> 00:02:28.035
Like I said, there are a lot of blocks.

35
00:02:28.035 --> 00:02:32.486
So as you kind of build out your own chat
ops, you might need to expand this to

36
00:02:32.486 --> 00:02:37.230
accommodate more things, but
this is what we're doing for the demo.

37
00:02:37.230 --> 00:02:40.780
So we'll keep it nice and
tight as much as we can.

38
00:02:41.900 --> 00:02:48.565
So that's gonna accept text and we're
gonna call this a SectionBlockArgs so

39
00:02:48.565 --> 00:02:53.896
that we get some autocomplete there and
that is going to return

40
00:02:53.896 --> 00:03:00.475
a SlackblockSection. And

41
00:03:00.475 --> 00:03:04.800
it says, yeah, because we're not returning
anything yet, it says that it's invalid.

42
00:03:04.800 --> 00:03:09.810
So we need to actually return and we can
say it's gonna be a type of section.

43
00:03:09.810 --> 00:03:14.527
And we're gonna have text of type,
we'll use Markdown.

44
00:03:14.527 --> 00:03:19.791
Now, Slack their markdown isn't Markdown,
it's a specific dialect

45
00:03:19.791 --> 00:03:24.603
that they've created to give
Markdown-like capabilities,

46
00:03:24.603 --> 00:03:28.770
which I think is why they
spell this differently.

47
00:03:28.770 --> 00:03:32.580
I'm not sure, but for whatever reason,
they don't like vowels.

48
00:03:32.580 --> 00:03:34.977
And then we pass in this text.

49
00:03:34.977 --> 00:03:38.758
And now that we've satisfied
the conditions of a SlackBlockSection,

50
00:03:38.758 --> 00:03:43.243
we don't have that red squiggly anymore,
and that will give us a valid Slack block.

51
00:03:43.243 --> 00:03:48.189
Next, we're gonna do the same thing,
but for the input and the select,

52
00:03:48.189 --> 00:03:50.799
these are both a little more in depth.

53
00:03:50.799 --> 00:03:55.773
So for our input, we're gonna have an id,
we're gonna have a label.

54
00:03:55.773 --> 00:03:58.573
In fact, we can autocomplete some of this,

55
00:03:58.573 --> 00:04:01.987
we just go straight to our
Input(BlockArgs) here.

56
00:04:01.987 --> 00:04:06.453
And give us our label, a placeholder,
will need the initial value,

57
00:04:06.453 --> 00:04:12.060
which I'm gonna set to be blank, and the
hint, which we can also set to be blank.

58
00:04:12.060 --> 00:04:15.523
We'll look at what both of these
are as we start actually using them.

59
00:04:15.523 --> 00:04:22.598
And that is going to
return a SlackBlockInput.

60
00:04:22.598 --> 00:04:28.610
And to make that valid we're
gonna return an object,

61
00:04:28.610 --> 00:04:34.640
it has a block_id which will be the id,
and _block.

62
00:04:34.640 --> 00:04:36.640
It's gonna have a type
which will be input.

63
00:04:37.920 --> 00:04:42.531
It's going to have a label
which will include a type.

64
00:04:42.531 --> 00:04:45.395
In our case,
we're gonna use plain_text and

65
00:04:45.395 --> 00:04:49.440
the text will be the label itself
that we passed in as an argument.

66
00:04:49.440 --> 00:04:50.855
Then we've got the element.

67
00:04:50.855 --> 00:04:56.062
The element is the actual input part.

68
00:04:56.062 --> 00:05:00.061
So we're gonna give it an action_id,
that's the ID.

69
00:05:00.061 --> 00:05:05.069
We're going to give it a type,
and that is a plain_text_input.

70
00:05:12.022 --> 00:05:14.186
Boy, plain_text_input.

71
00:05:14.186 --> 00:05:16.959
And then we're going to
give it a placeholder.

72
00:05:16.959 --> 00:05:21.017
And so a placeholder is like what will be
visible inside the input when nothing's

73
00:05:21.017 --> 00:05:22.500
been added to it.

74
00:05:22.500 --> 00:05:27.210
So that is an object and
it has a type of plain_text.

75
00:05:28.210 --> 00:05:34.730
This is a very common pattern in
Slack blocks is this type in text.

76
00:05:35.940 --> 00:05:37.980
The text itself will be our placeholder.

77
00:05:39.510 --> 00:05:43.701
Then we've got an initial value
which follows just the initial value

78
00:05:43.701 --> 00:05:44.719
being a string.

79
00:05:46.710 --> 00:05:49.550
And then outside of the element
we can set a hint if we want.

80
00:05:49.550 --> 00:05:52.514
The hint is text shown
underneath the input, so

81
00:05:52.514 --> 00:05:57.120
we can give people a clue that doesn't
disappear when they start typing.

82
00:05:58.920 --> 00:06:00.940
And the text itself will be our hint.

83
00:06:02.560 --> 00:06:07.470
So, saving that,
then we can move into our select.

84
00:06:07.470 --> 00:06:12.911
And our select is going
to be SelectBlockArgs,

85
00:06:12.911 --> 00:06:18.357
and that is going to
return a SlackBlockInput.

86
00:06:18.357 --> 00:06:22.017
Because the select and
an input are effectively the same thing,

87
00:06:22.017 --> 00:06:24.809
they just have a couple
extra fields in a select.

88
00:06:24.809 --> 00:06:29.350
So this one is going to take an ID,
a label,

89
00:06:29.350 --> 00:06:32.645
a placeholder, and options.

90
00:06:32.645 --> 00:06:36.941
The options being what you can
select from the drop down.

91
00:06:36.941 --> 00:06:41.976
And this will return a block _id.

92
00:06:41.976 --> 00:06:48.243
And that's going to,
again, be the id_block.

93
00:06:48.243 --> 00:06:51.539
I'll show you why I use this
naming convention when we get

94
00:06:51.539 --> 00:06:53.196
into accessing the values.

95
00:06:53.196 --> 00:06:54.780
But the the short answer is,

96
00:06:54.780 --> 00:06:58.746
we're going to have to drill down
through a giant object in the values.

97
00:06:58.746 --> 00:07:02.046
So having predictable things
like the id_block and

98
00:07:02.046 --> 00:07:06.621
then the id as opposed to what gets
auto generated by Slack, is gonna make

99
00:07:06.621 --> 00:07:11.571
it possible to work with these values and
a little easier for us to think about.

100
00:07:11.571 --> 00:07:13.726
We're gonna set a type of input.

101
00:07:13.726 --> 00:07:15.932
We will use a label.

102
00:07:15.932 --> 00:07:20.950
That label is going to be exactly the same
as this one, so I'm gonna copy paste it.

103
00:07:24.699 --> 00:07:27.700
And then we want an element.

104
00:07:27.700 --> 00:07:31.040
That element is going to
have an action_id of id.

105
00:07:31.040 --> 00:07:36.493
The type is going to be
a static_select this time.

106
00:07:36.493 --> 00:07:40.667
And for the placeholder,

107
00:07:40.667 --> 00:07:45.797
now this is inside the element.

108
00:07:45.797 --> 00:07:48.311
So the placeholder goes here,

109
00:07:48.311 --> 00:07:54.026
that's going to have a type of
plain_text and a text of placeholder.

110
00:07:54.026 --> 00:07:58.021
If you wanna use emojis and stuff you
can also set emoji to true in these, but

111
00:07:58.021 --> 00:08:02.720
we're not using them so you can
leave it or not doesn't really matter.

112
00:08:02.720 --> 00:08:06.840
For options, we are going to map
over the options that were given.

113
00:08:08.120 --> 00:08:11.614
And we are going to know
that these have a label and

114
00:08:11.614 --> 00:08:15.890
a value, because that is what
we've defined them to have.

115
00:08:17.770 --> 00:08:24.170
And for each one, we're gonna return text,
and it has a type of plain_text.

116
00:08:24.170 --> 00:08:28.360
It has the text value itself of label.

117
00:08:28.360 --> 00:08:32.750
And we can set emoji to true if we want

118
00:08:36.434 --> 00:08:39.722
And then the last thing
we want is the value.

119
00:08:39.722 --> 00:08:44.219
So this is how we actually get
options into it, so we can save that.

120
00:08:44.219 --> 00:08:49.283
And now we have these little
helpers that we'll be able to use

121
00:08:49.283 --> 00:08:54.163
to make our lives easier as
we're building out our modal.

122
00:08:54.163 --> 00:09:00.058
Because what we wanna do next is
actually create from the slash command.

123
00:09:00.058 --> 00:09:04.981
We wanna pop up a modal window that
asks a couple questions that we need in

124
00:09:04.981 --> 00:09:07.290
order to respond to the request.

125
00:09:07.290 --> 00:09:12.281
And we keep it simple, when I was
building this for a previous team,

126
00:09:12.281 --> 00:09:14.130
we had three questions.

127
00:09:14.130 --> 00:09:16.170
It was, what do you need?

128
00:09:16.170 --> 00:09:17.340
When do you need it by?

129
00:09:17.340 --> 00:09:22.670
Because if it doesn't have a deadline,
is it actually important, right?

130
00:09:22.670 --> 00:09:24.297
And how urgent is this?

131
00:09:24.297 --> 00:09:26.350
What's the risk if we don't get this done?

132
00:09:26.350 --> 00:09:30.972
It's nice to have, it's a must have it's a
critical blocker, making sure that we have

133
00:09:30.972 --> 00:09:34.290
an understanding of what the level
of urgency is for the thing.

134
00:09:34.290 --> 00:09:35.937
And then an optional input for,

135
00:09:35.937 --> 00:09:39.630
are there any other details that
we need, links to stuff etc.

136
00:09:39.630 --> 00:09:41.130
And by keeping it small,

137
00:09:41.130 --> 00:09:45.630
because the urge is always gather all
of the information but what I found is,

138
00:09:45.630 --> 00:09:49.500
if you give people one or
two fields to fill out, they'll do it.

139
00:09:49.500 --> 00:09:53.691
If you give them ten fields, they won't,
or they'll start kind of short-cutting

140
00:09:53.691 --> 00:09:56.660
those fields and
then they become less information.

141
00:09:56.660 --> 00:10:00.899
So you want the absolute minimum number
of inputs that you can to actually do

142
00:10:00.899 --> 00:10:01.514
your job.

143
00:10:01.514 --> 00:10:04.716
Anything else can be in
an additional context box so

144
00:10:04.716 --> 00:10:06.732
that people can help out there.

