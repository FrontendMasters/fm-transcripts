WEBVTT

1
00:00:00.000 --> 00:00:02.991
Let's set up a triage call.

2
00:00:02.991 --> 00:00:10.393
We're gonna have this thing
send us a reminder once every,

3
00:00:10.393 --> 00:00:15.587
we'll say, week to post the open items.

4
00:00:15.587 --> 00:00:19.216
And to make that work,
we're gonna create a new function.

5
00:00:19.216 --> 00:00:22.285
So I'm gonna open up code.

6
00:00:22.285 --> 00:00:26.724
And in here under my source, I'm gonna

7
00:00:26.724 --> 00:00:31.845
create a new function called reminder.ts.

8
00:00:31.845 --> 00:00:37.219
And inside reminder,
we're going to set up a new

9
00:00:37.219 --> 00:00:43.519
handler that is a type though,
so we can make that a type.

10
00:00:43.519 --> 00:00:45.626
And then I also want schedule,

11
00:00:45.626 --> 00:00:49.610
which is the way that Netlify
functions handle cron jobs.

12
00:00:49.610 --> 00:00:56.801
I'm also going to import get
new items from the notion,

13
00:00:56.801 --> 00:01:01.238
and I'm gonna import blocks, and

14
00:01:01.238 --> 00:01:06.752
the Slack API helper from the Slack utils.

15
00:01:06.752 --> 00:01:13.841
Then we're gonna create a new function
called postnewNotionItemsToSlack.

16
00:01:13.841 --> 00:01:17.410
Nice descriptive function name there.

17
00:01:17.410 --> 00:01:22.114
And that's gonna be an async
function that is going to

18
00:01:22.114 --> 00:01:25.883
grab the items by a weight, getNewItems.

19
00:01:25.883 --> 00:01:30.335
So now we've got the items from
Notion in this items variable and

20
00:01:30.335 --> 00:01:32.404
we can send them off to Slack.

21
00:01:32.404 --> 00:01:36.247
So we're gonna await Slack API and

22
00:01:36.247 --> 00:01:43.139
use the chat.postMessage,
send it to our general channel,

23
00:01:43.139 --> 00:01:47.261
which I'm going to grab out of here.

24
00:01:47.261 --> 00:01:51.207
So click on the channel itself,
go down to the bottom, grab that channel.

25
00:01:51.207 --> 00:01:53.947
We could have put that
into the environment.

26
00:01:53.947 --> 00:01:58.570
No real reason that I didn't other than
I didn't think about it until just now.

27
00:01:58.570 --> 00:02:00.030
Then we're gonna set up blocks.

28
00:02:01.470 --> 00:02:08.449
And for these, we're gonna use
blocks.section and send in some text.

29
00:02:08.449 --> 00:02:10.336
And our text is going to be, so

30
00:02:10.336 --> 00:02:13.743
I wanna make this kind of
a multi-line piece of text.

31
00:02:13.743 --> 00:02:17.055
And this is a trick that I learned
to avoid having a lot of line break

32
00:02:17.055 --> 00:02:20.928
characters and stuff, is you can make
an array and then join it on a new line.

33
00:02:20.928 --> 00:02:23.636
So I'm going to say,

34
00:02:23.636 --> 00:02:29.060
here are the opinions awaiting judgment.

35
00:02:29.060 --> 00:02:33.028
Then we wanna set up just an empty line.

36
00:02:33.028 --> 00:02:41.297
And then we're going to items.map to
get our list of items for display.

37
00:02:41.297 --> 00:02:42.564
So we'll get the item.

38
00:02:42.564 --> 00:02:48.735
And for each of these,
we're going to do a dash to make a list,

39
00:02:48.735 --> 00:02:55.046
and we'll get the item.opinion and
then add the spice level.

40
00:02:55.046 --> 00:02:59.497
Spice level is going
to be item.spicelevel,

41
00:03:00.754 --> 00:03:05.647
Okay, so
you'll see we spread that here, and

42
00:03:05.647 --> 00:03:11.928
that means that each one of these
is now a line in this setup.

43
00:03:11.928 --> 00:03:16.399
And I'm gonna add another empty line and
we're gonna say,

44
00:03:16.399 --> 00:03:18.552
see all items and add a link.

45
00:03:18.552 --> 00:03:24.155
So we'll say https.notion,
or https://notion.com/.

46
00:03:24.155 --> 00:03:28.283
Then we're gonna put in that database ID.

47
00:03:30.824 --> 00:03:37.295
Because, well, Notion usually shows
you the space name in the URL.

48
00:03:37.295 --> 00:03:40.508
You can just drop in a database ID and
it will work.

49
00:03:40.508 --> 00:03:43.861
And then this is another kind
of interesting Slack thing.

50
00:03:43.861 --> 00:03:50.773
So we're opening up these pointy boys
to do a link, but I want it to be text.

51
00:03:50.773 --> 00:03:55.285
So I can just add a pipe and
then the text I want it to be, and

52
00:03:55.285 --> 00:03:58.300
Notion will turn that into link text.

53
00:03:58.300 --> 00:04:02.905
Again, that's,
I don't know why Notion does things, or

54
00:04:02.905 --> 00:04:06.128
sorry, why Slack does things like that,

55
00:04:06.128 --> 00:04:10.476
but that was a choice they made,
and we must abide by it.

56
00:04:10.476 --> 00:04:12.926
So then we can join the whole
thing using a newline character.

57
00:04:12.926 --> 00:04:17.212
And that way what we get is
a multi-paragraph chunk of text that gets

58
00:04:17.212 --> 00:04:20.383
sent to the browser or
into the the Slack channel.

59
00:04:20.383 --> 00:04:22.468
So we can save that.

60
00:04:22.468 --> 00:04:29.352
And then underneath it,
we're going to return statusCode of 200.

61
00:04:29.352 --> 00:04:33.708
Now cron jobs don't need anybody,
so you don't have to send one back.

62
00:04:33.708 --> 00:04:38.945
And to actually set up the cron part
of this, we're gonna export a const

63
00:04:38.945 --> 00:04:43.680
called handler, and
then we imported that schedule function.

64
00:04:44.940 --> 00:04:47.636
So the first argument here
is gonna be the cron, and

65
00:04:47.636 --> 00:04:51.035
then the second piece is gonna be
the function that gets called.

66
00:04:51.035 --> 00:04:55.712
So I'm gonna use, I could just
guess at what one of these is, but

67
00:04:55.712 --> 00:05:00.669
instead, I'm gonna use a really
cool tool called crontab.guru.

68
00:05:00.669 --> 00:05:08.324
And what this does is, it lets you kind
of do this a little more human readably.

69
00:05:08.324 --> 00:05:13.995
So if you come in here and you say,
we'll just set this to be like this,

70
00:05:13.995 --> 00:05:17.182
every minute it would run our cron job.

71
00:05:17.182 --> 00:05:22.274
So then you can say every 15 minutes or

72
00:05:22.274 --> 00:05:26.758
at minute 0, so hourly, right?

73
00:05:26.758 --> 00:05:31.463
And then we could also say,
run it at noon, which is what we want, but

74
00:05:31.463 --> 00:05:33.995
then we also want it to be run on a day.

75
00:05:33.995 --> 00:05:39.518
So we want this to be, why don't we run
it a day of the week instead, right?

76
00:05:39.518 --> 00:05:40.116
There we go.
So every

77
00:05:40.116 --> 00:05:42.181
Monday at noon we want this to run.

78
00:05:42.181 --> 00:05:44.333
So maybe ours is gonna be 9.

79
00:05:44.333 --> 00:05:48.629
Now you gotta play with this a little
bit because you gotta figure out what

80
00:05:48.629 --> 00:05:52.293
the offset is between the deployed
server and your location,

81
00:05:52.293 --> 00:05:54.068
like your team's location.

82
00:05:54.068 --> 00:05:57.115
Because they don't give
you a timezone offset,

83
00:05:57.115 --> 00:06:00.174
you just kinda have to
figure out how this works.

84
00:06:00.174 --> 00:06:01.191
But this seems good.

85
00:06:01.191 --> 00:06:07.598
So every Monday at 9AM, we're gonna
run this, and you'll see how it works.

86
00:06:07.598 --> 00:06:15.039
So then when we come in here and
set this, It sits just like this.

87
00:06:15.039 --> 00:06:18.939
And that'll tell it to run every Monday,
but then we wanna test this.

88
00:06:18.939 --> 00:06:25.045
So why don't we also set
this to run every minute for

89
00:06:25.045 --> 00:06:30.596
a little bit and
then we'll change that back.

90
00:06:30.596 --> 00:06:33.804
So now this is running.

91
00:06:33.804 --> 00:06:40.752
And if I go out to my browser,
only in testing, you can do this.

92
00:06:40.752 --> 00:06:43.775
And it's actually gonna yell at me for
trying, but it's okay.

93
00:06:43.775 --> 00:06:50.468
So I'm gonna hit API Slack, and
this time I'm going to hit Reminder.

94
00:06:54.969 --> 00:06:56.675
Am I on the wrong version of this?

95
00:07:00.112 --> 00:07:10.072
We're running on This version.

96
00:07:15.294 --> 00:07:18.797
So I can replace the hash there and
hit it.

97
00:07:18.797 --> 00:07:21.369
And it says, you perform an HTTP
request for the reminder,

98
00:07:21.369 --> 00:07:22.765
which is a scheduled function.

99
00:07:22.765 --> 00:07:25.532
You can do it to test locally,
but it won't work in production.

100
00:07:25.532 --> 00:07:28.983
Now assuming that did what we wanted,
hey, here we go.

101
00:07:28.983 --> 00:07:33.943
We've got a reminder from our Food Fight
app that says, what all of the open

102
00:07:33.943 --> 00:07:38.933
items are, and then has a link to follow
through and see them all in notion.

