WEBVTT

1
00:00:00.000 --> 00:00:03.710
So let's get a version is kind of working.

2
00:00:03.710 --> 00:00:08.834
Some of this is going to
be a little bit what we

3
00:00:08.834 --> 00:00:13.780
saw before, but let's define our type.

4
00:00:13.780 --> 00:00:16.000
Let's say the type is a counter action.

5
00:00:18.840 --> 00:00:25.860
And the counteraction is
gonna have a type of,

6
00:00:25.860 --> 00:00:31.980
let's say increment decrement cool and

7
00:00:31.980 --> 00:00:36.841
say and we'll say the payload.

8
00:00:36.841 --> 00:00:40.150
Payloads interesting this one, right.

9
00:00:40.150 --> 00:00:43.510
There's a bunch of ways
you could go about this.

10
00:00:44.620 --> 00:00:48.998
You could say that when they
hit increment and decrement,

11
00:00:48.998 --> 00:00:52.760
it will dispatch a payload
that is a number of one.

12
00:00:52.760 --> 00:00:54.847
Right?
We can start with that.

13
00:00:54.847 --> 00:00:57.118
But we know no is a counter.

14
00:00:57.118 --> 00:01:01.613
No is a strong word, but let's say
hypothetically in our current use

15
00:01:01.613 --> 00:01:06.031
case increment decrement Increment
by one and decrement by one, so

16
00:01:06.031 --> 00:01:09.630
I like having to put one
in every time it'll work.

17
00:01:09.630 --> 00:01:12.000
But then I could just get down to set.

18
00:01:12.000 --> 00:01:13.640
So let's try something here.

19
00:01:13.640 --> 00:01:17.300
Let's say the payload is optional right?

20
00:01:18.550 --> 00:01:21.225
If you're gonna set it to
a different number, yeah,

21
00:01:21.225 --> 00:01:24.190
like you need to give us
a number to set it to.

22
00:01:24.190 --> 00:01:26.903
However, if you're gonna
increment decrement,

23
00:01:26.903 --> 00:01:30.550
we're gonna like change it by one,
it's gonna be fine.

24
00:01:30.550 --> 00:01:36.604
Cool and we'll also say that the type

25
00:01:36.604 --> 00:01:42.861
of counter state is a value of number.

26
00:01:42.861 --> 00:01:43.899
All right, so

27
00:01:43.899 --> 00:01:49.445
we've got that in place a reducer gonna
be pretty straightforward as well.

28
00:01:52.715 --> 00:01:59.547
We'll say the state is counter state and
the time of an action is counter action.

29
00:02:03.495 --> 00:02:06.595
All right, and I'll use a switch
statement this time just to change it up.

30
00:02:06.595 --> 00:02:10.515
I understand that switch
statements are common for

31
00:02:10.515 --> 00:02:15.349
reducers I for some reason,
just like conditionals that's my

32
00:02:15.349 --> 00:02:20.106
personal taste will say in
the case of increment will return,

33
00:02:23.321 --> 00:02:31.478
They will even like return instead
return will return value is state.value,

34
00:02:31.478 --> 00:02:37.050
plus one fun fact about how
decrement's gonna work.

35
00:02:45.322 --> 00:02:48.058
And then set will actually figure
out what the payload is and

36
00:02:48.058 --> 00:02:50.641
we'll kind of see something
interesting here as well.

37
00:02:53.867 --> 00:02:57.376
So, now that needs to be a call.

38
00:02:57.376 --> 00:03:02.689
All right, and
we'll say the set is return value.

39
00:03:06.625 --> 00:03:07.222
And really,

40
00:03:07.222 --> 00:03:11.128
it's not even like we're just setting it
to numbers it's really gonna be we'll just

41
00:03:11.128 --> 00:03:14.831
say it's like action dot payload like
whatever the person right that'll be good

42
00:03:23.766 --> 00:03:27.768
Return, hold on,

43
00:03:33.373 --> 00:03:34.320
Cool.

44
00:03:34.320 --> 00:03:36.300
Here, our concern this could be undefined.

45
00:03:36.300 --> 00:03:38.080
Right.

46
00:03:38.080 --> 00:03:41.608
And especially if I did something like
let's say actually wanted to add it for

47
00:03:41.608 --> 00:03:43.950
some reason, right,
you could see we're types.

48
00:03:43.950 --> 00:03:45.260
We've got a little upset here.

49
00:03:45.260 --> 00:03:49.589
Because maybe it's like eventually
one is like increment decrement

50
00:03:49.589 --> 00:03:51.590
by a certain amount.

51
00:03:51.590 --> 00:03:55.791
And, well, in this case, like it's like,
well, this could be undefined and

52
00:03:55.791 --> 00:03:58.350
it's yelling at me about things.

53
00:03:58.350 --> 00:04:00.100
And that's kinda interesting.

54
00:04:00.100 --> 00:04:04.944
And like, I don't love this so far, but,

55
00:04:04.944 --> 00:04:09.386
we'll go ahead, and we'll say that,

56
00:04:09.386 --> 00:04:16.700
it's just action.payload for
now, or return state.

57
00:04:16.700 --> 00:04:17.250
All right.

58
00:04:17.250 --> 00:04:20.540
So in our counter we will grab

59
00:04:25.162 --> 00:04:30.910
Our state and
our dispatch it's gonna be usereducer.

60
00:04:32.080 --> 00:04:33.158
I'm going to be a reducer.

61
00:04:33.158 --> 00:04:38.396
And again, like I could pass
in like something I explicitly

62
00:04:38.396 --> 00:04:43.530
defined as counter state, but
as I demonstrated before,

63
00:04:43.530 --> 00:04:49.420
as long as it fits that type,
TypeScript will be okay with it.

64
00:04:49.420 --> 00:04:49.923
What are you angry about?

65
00:04:54.541 --> 00:04:58.731
UseReducer without action.

66
00:05:02.631 --> 00:05:04.270
Maybe it's not, let's see.

67
00:05:05.400 --> 00:05:08.400
UseReducer should be fine.

68
00:05:10.300 --> 00:05:12.831
Maybe the message.

69
00:05:12.831 --> 00:05:17.597
Any I don't want any reducer.

70
00:05:17.597 --> 00:05:20.940
Cuz it couldn't return a number or
undefined.

71
00:05:22.870 --> 00:05:24.030
That's interesting.

72
00:05:24.030 --> 00:05:29.652
Let's see what happens if I actually
typed the state shouldn't be an issue but

73
00:05:29.652 --> 00:05:33.330
we'll find out probably
missed something small.

74
00:05:35.000 --> 00:05:37.450
And someone noticed I need to
change decrement to minus one.

75
00:05:37.450 --> 00:05:39.094
So before I get that.

76
00:05:39.094 --> 00:05:43.014
One of the other questions
is can I use an enum for

77
00:05:43.014 --> 00:05:46.460
this type scrip has an idea of enums.

78
00:05:46.460 --> 00:05:50.502
In like my opinion, like it's a little
bit of an anti pattern because they add

79
00:05:50.502 --> 00:05:54.750
a lot of complexity and abstraction and
I don't think is super helpful, right?

80
00:05:54.750 --> 00:05:56.320
Like an enum is basically a value.

81
00:05:56.320 --> 00:05:58.740
It's like it can be one
of these three states.

82
00:05:58.740 --> 00:06:00.950
And those states under
the hood become numbers and

83
00:06:00.950 --> 00:06:03.200
you kind of change them to something else.

84
00:06:03.200 --> 00:06:08.370
For me, I think that the kind of having
the union types makes more sense.

85
00:06:08.370 --> 00:06:12.740
I when I first learned TypeScript,
I was like, enums is cool I like enums.

86
00:06:12.740 --> 00:06:17.850
And then every time I stopped using
enums have somewhat regretted it.

87
00:06:17.850 --> 00:06:20.960
All right, so we change that to minus one.

88
00:06:20.960 --> 00:06:23.290
Thank you for chat for helping me there.

89
00:06:23.290 --> 00:06:27.430
But let's say a state is kind of
state action is counteraction.

90
00:06:29.570 --> 00:06:30.870
We'll deal with it in a second.

91
00:06:30.870 --> 00:06:33.508
I'm not quite sure what the issue is yet,
but

92
00:06:33.508 --> 00:06:37.890
we're gonna push forward a little bit
we'll see if it resolves the issue.

93
00:06:39.330 --> 00:06:42.730
All right, so then let's make some
helper functions for ourselves.

94
00:06:45.280 --> 00:06:50.206
We'll say we've got
this idea of increment.

95
00:06:50.206 --> 00:06:58.929
It's going to Type off.

96
00:07:07.151 --> 00:07:08.218
Any six or dispatch.

97
00:07:11.316 --> 00:07:16.130
Should work.

98
00:07:16.130 --> 00:07:18.709
It's actually, it's over here
where I kind of winged it for

99
00:07:18.709 --> 00:07:21.320
a little bit where some of
the issues are coming up.

100
00:07:21.320 --> 00:07:24.210
But I can say, I'm interested in this.

101
00:07:24.210 --> 00:07:25.840
This is somewhat fascinating to me.

102
00:07:28.410 --> 00:07:31.660
Which is, if I just have increment and
decrement,

103
00:07:31.660 --> 00:07:37.470
which are these places are just, they're
not dealing with the payload at all.

104
00:07:37.470 --> 00:07:38.230
Everything works.

105
00:07:38.230 --> 00:07:45.370
It's things that a little squirrely with
me when I just use the payload like this.

106
00:07:45.370 --> 00:07:50.335
I have a hypothesis
which is an do this and

107
00:07:50.335 --> 00:07:56.620
my hypothesis is because
this could be undefined.

108
00:07:57.750 --> 00:08:00.630
It has confused everyone in everything.

109
00:08:00.630 --> 00:08:05.870
Which one because value could now be
a number or it could be undefined.

110
00:08:05.870 --> 00:08:10.720
And I think what happened was tie feels
like, it could be anything, right?

111
00:08:10.720 --> 00:08:15.290
Now saying that either it exists, or
zero I guess that could be falsie.

112
00:08:15.290 --> 00:08:19.500
But like since it defaults to zero,
I'm not super worried about it.

113
00:08:19.500 --> 00:08:21.300
Everything comes back to normal again.

114
00:08:21.300 --> 00:08:26.041
It's like okay, no matter what
value is getting set as a number

115
00:08:26.041 --> 00:08:29.810
everything makes sense
in in the world again.

116
00:08:29.810 --> 00:08:31.560
That's pretty cool.

117
00:08:31.560 --> 00:08:35.580
So interesting little deviation there.

118
00:08:35.580 --> 00:08:40.361
But yeah, again, TypeScript is trying
to help you if you confuse it, and

119
00:08:40.361 --> 00:08:45.068
it can't figure out what's gonna go
on deterministically It's starts

120
00:08:45.068 --> 00:08:49.774
to be not okay and refer like that's
a that's a fair bug that we would have

121
00:08:49.774 --> 00:08:51.960
solved if we kept going forward.

122
00:08:51.960 --> 00:08:56.020
But like, I definitely see a world
where it makes sense that like that was

123
00:08:56.020 --> 00:08:59.815
brought to our attention pretty
early on because like yeah, like,

124
00:08:59.815 --> 00:09:04.008
this isn't my first time doing this
exercise so I knew that we were gonna see

125
00:09:04.008 --> 00:09:07.550
it through but if I was just
writing code like I got a ticket.

126
00:09:07.550 --> 00:09:11.030
I was just working on stuff I might not
know that like eventually everything was

127
00:09:11.030 --> 00:09:12.990
going to be okay just yet.

128
00:09:12.990 --> 00:09:19.873
So he will make a decrement
As you can even see,

129
00:09:19.873 --> 00:09:22.300
as I was typing it as I type got
a little upset there for a second.

130
00:09:22.300 --> 00:09:23.240
It's like that.

131
00:09:23.240 --> 00:09:26.570
It's not either increment decrement or
set.

132
00:09:26.570 --> 00:09:31.482
And here we'll actually just
say that reset is going to just

133
00:09:31.482 --> 00:09:33.990
set it to zero, all right.

134
00:09:33.990 --> 00:09:37.679
So I'll just say it because I
make a point with that later,

135
00:09:37.679 --> 00:09:42.140
and this case it will take some number and
N it's gonna be that number.

136
00:09:43.470 --> 00:09:48.602
I'll fire it off to set with a value or

137
00:09:48.602 --> 00:09:53.507
payload Of 0.

138
00:09:53.507 --> 00:09:54.090
Right?

139
00:09:54.090 --> 00:09:55.280
Everything's happy right now.

140
00:09:57.450 --> 00:09:58.900
Cool.
So now we can go ahead and

141
00:09:58.900 --> 00:10:05.203
we'll say that This will be reset.

142
00:10:10.015 --> 00:10:15.800
So here we'll say,
make two just to make a point in a second.

143
00:10:15.800 --> 00:10:18.488
I don't use one, we'll use reset,

144
00:10:18.488 --> 00:10:22.493
where it's gonna be hard coded and
one that we pass in.

145
00:10:22.493 --> 00:10:26.949
All right, nothing special here.

146
00:10:29.897 --> 00:10:30.593
Increment,

147
00:10:36.342 --> 00:10:40.331
Reset, Decrement.

148
00:10:42.416 --> 00:10:43.759
All right, we've got a working.

149
00:10:43.759 --> 00:10:45.680
Now let's make sure we haven't.

150
00:10:45.680 --> 00:10:46.524
We're gonna set some buttons.

151
00:10:49.330 --> 00:10:53.604
We got actually put that state of value
in there because even just change

152
00:10:53.604 --> 00:10:57.177
it in the hood if we were hard
coded as zero is not gonna work.

153
00:11:01.089 --> 00:11:01.779
Cool.
All right.

