WEBVTT

1
00:00:00.040 --> 00:00:03.934
Then our next kind of like exercise here,

2
00:00:03.934 --> 00:00:09.384
we are going to look at some of
the more sophisticated seems

3
00:00:09.384 --> 00:00:15.411
really some more advanced,
if you will, component patterns.

4
00:00:15.411 --> 00:00:20.801
That you might again the thing I'll say
is like definitely making your opponent

5
00:00:20.801 --> 00:00:26.820
library but like also if you're just
working in a large code base because yeah.

6
00:00:26.820 --> 00:00:31.770
So this is a common pattern now we have
a design system and in our design system,

7
00:00:31.770 --> 00:00:36.120
you have different variants of a button,
you have a primary button,

8
00:00:36.120 --> 00:00:40.245
a secondary button,
a destructive button, a disabled button,

9
00:00:40.245 --> 00:00:43.620
small buttons, big buttons,
all sorts of buttons.

10
00:00:44.840 --> 00:00:49.730
And though the way that we
do it is it's actually more

11
00:00:49.730 --> 00:00:54.520
like this like button and
then variant is primary.

12
00:00:56.760 --> 00:01:01.574
But you can have a button that is
both primary and secondary, but

13
00:01:01.574 --> 00:01:07.490
you can have like a primary disabled
button and stuff along those lines.

14
00:01:07.490 --> 00:01:12.120
So this is one way to do it with just
having a string you can use a union type.

15
00:01:12.120 --> 00:01:17.151
What I would love to do is have
a syntax more like this where I

16
00:01:17.151 --> 00:01:23.460
can kind of just pass any other types
of buttons indirectly as a prop.

17
00:01:23.460 --> 00:01:29.031
In case, you've probably seen this syntax
before, but if you haven't in react,

18
00:01:29.031 --> 00:01:34.450
any prop is passed in without an equal
sign an argument is just true.

19
00:01:34.450 --> 00:01:35.990
It's just a Boolean and it's true.

20
00:01:35.990 --> 00:01:39.440
So you can see that we've got this type
up here, where we've got the children.

21
00:01:39.440 --> 00:01:43.924
And in this case, we know that react
node can be a child I'm making it so

22
00:01:43.924 --> 00:01:47.120
that since it's a button,
it is only a string.

23
00:01:47.120 --> 00:01:51.280
So I'm again, using my types to
enforce the intention of my code.

24
00:01:51.280 --> 00:01:53.330
But I've got three optional prompts.

25
00:01:53.330 --> 00:01:55.690
So there's nothing stopping me right now.

26
00:01:55.690 --> 00:01:59.850
They're saying that a button
is both primary and secondary.

27
00:02:01.280 --> 00:02:05.632
And that's not great because it's like a,
in this case, whatever order they're in

28
00:02:05.632 --> 00:02:09.730
here like wins because that's the way
the class names are put on there.

29
00:02:09.730 --> 00:02:11.070
Like that's not great.

30
00:02:11.070 --> 00:02:15.423
And so I want to make it so that like
if somebody accidentally does that

31
00:02:15.423 --> 00:02:20.320
TypeScript warns them at compile time,
and we don't ship it to production.

32
00:02:20.320 --> 00:02:25.021
Because that would just be one of those
things where it's like, you might have

33
00:02:25.021 --> 00:02:29.651
a Cypress test that's lucky enough to
catch it, but probably is just a booboo

34
00:02:29.651 --> 00:02:34.910
that you didn't mean to do and you will
find a customer found defect around it.

35
00:02:34.910 --> 00:02:42.053
So what we're going to try to do is get
a little advance with our types and

36
00:02:42.053 --> 00:02:47.172
see if we can create a system
where you can pass in any

37
00:02:47.172 --> 00:02:52.890
given one of those properties,
but not more than one.

38
00:02:52.890 --> 00:02:56.736
And this will be somewhat similar if
you remember when we were talking

39
00:02:56.736 --> 00:02:57.960
the reducers.

40
00:02:57.960 --> 00:03:02.450
And we said okay for increment and
decrement I don't want a payload.

41
00:03:02.450 --> 00:03:05.950
But for set,
I do want a payload with a new value.

42
00:03:05.950 --> 00:03:09.120
This is somewhat similar to
what we did there as well.

43
00:03:10.120 --> 00:03:13.520
And so what we're going to do
is create some new types here.

44
00:03:14.640 --> 00:03:16.540
So we've got button props and

45
00:03:16.540 --> 00:03:21.330
button props are going to be the props
that are common to all of the buttons.

46
00:03:22.400 --> 00:03:25.841
And so we're going to remove some stuff,
we're going to basically end up removing

47
00:03:25.841 --> 00:03:29.420
these three, but we'll start out
by just making our new types.

48
00:03:29.420 --> 00:03:38.267
And so type primary button props,
Is going to be everything in button props,

49
00:03:42.750 --> 00:03:45.442
Along with primary being a Boolean.

50
00:03:48.895 --> 00:03:51.439
Right, and you can see how the story goes.

51
00:03:54.528 --> 00:04:01.279
The secondary button props Would be

52
00:04:04.055 --> 00:04:09.492
Destructive button props
will be everything shared

53
00:04:09.492 --> 00:04:16.040
in the button prompts and
then destructive is a Boolean.

54
00:04:16.040 --> 00:04:17.620
So let's look at what we have here.

55
00:04:17.620 --> 00:04:20.190
This is kind of interesting up, hold on.

56
00:04:20.190 --> 00:04:22.291
Let's actually remove
this part here first.

57
00:04:28.414 --> 00:04:31.364
So you can see that it's button props and
prime minister bullying so on and so

58
00:04:31.364 --> 00:04:32.020
forth, right?

59
00:04:32.020 --> 00:04:34.840
In this case,
it will be children and primary,

60
00:04:34.840 --> 00:04:39.430
children and secondary, children and
destructive, but not more than one.

61
00:04:39.430 --> 00:04:43.900
Before we had options, it like
the either undefined or they're set.

62
00:04:43.900 --> 00:04:47.694
Here we're saying we have three different
types which is simply the children and

63
00:04:47.694 --> 00:04:51.500
maybe, yes, Prime Minister,
I thought it was a V for a second there.

64
00:04:51.500 --> 00:04:57.337
So it's now three different types, where
can be any given one of those, right?

65
00:04:57.337 --> 00:04:58.977
But not all of them, and

66
00:04:58.977 --> 00:05:05.070
we can get a little bit better because now
we've just an optional if any of them.

67
00:05:05.070 --> 00:05:07.510
TypeScript has a type called never.

68
00:05:08.740 --> 00:05:12.200
And it's like, if optional is
like maybe you hand it to me.

69
00:05:14.140 --> 00:05:15.960
Never is absolutely not.

70
00:05:15.960 --> 00:05:18.730
Should this ever be set, no matter what.

71
00:05:18.730 --> 00:05:20.568
And so if you think about this,

72
00:05:20.568 --> 00:05:24.170
we could do something kind
of interesting here as well.

73
00:05:24.170 --> 00:05:30.156
Where we say all right,
we're gonna say its primary,

74
00:05:30.156 --> 00:05:36.160
but then secondary should
never be that destructive,

75
00:05:44.963 --> 00:05:47.208
Never as well.

76
00:05:47.208 --> 00:05:48.897
So we can do that as well.

77
00:05:48.897 --> 00:05:52.477
Again adding an additional
kind of safety there.

78
00:05:52.477 --> 00:05:54.325
Here we'll just change
this one to primary.

79
00:06:00.953 --> 00:06:02.805
And we'll change this one here to primary.

80
00:06:10.465 --> 00:06:12.800
Cool, so we've got that all in place.

81
00:06:12.800 --> 00:06:16.840
And so now we can kind of change our
button props a little bit as well.

82
00:06:18.020 --> 00:06:21.168
And so we're going to do here is
we'll go ahead and we'll say alright,

83
00:06:21.168 --> 00:06:23.120
because button props is now just children.

84
00:06:23.120 --> 00:06:26.820
So you can see that all of these are angry
about primary, secondary and destructive.

85
00:06:26.820 --> 00:06:29.400
So none of that is working
the way that we want it to.

86
00:06:29.400 --> 00:06:33.590
So what we need to do is say, listen,
you can be any of these three types.

87
00:06:33.590 --> 00:06:34.880
We're cool with any of them.

88
00:06:34.880 --> 00:06:38.480
And you can see that the nice part
is that they kind of don't overlap.

89
00:06:38.480 --> 00:06:41.808
So we can go ahead and we'll say that,
okay, all three of these are false and

90
00:06:41.808 --> 00:06:44.210
we'll say it's button props.

91
00:06:44.210 --> 00:06:46.850
We can actually probably just get away
with saying, hey let's try it out.

92
00:06:48.400 --> 00:06:53.440
We'll say, this is a union

93
00:06:53.440 --> 00:06:58.263
of PrimaryButtonProps or

94
00:06:58.263 --> 00:07:03.087
SecondaryButtonProps or

95
00:07:03.087 --> 00:07:09.673
DestructiveButtonProps, cool.

96
00:07:12.617 --> 00:07:16.139
Now you can see everything works but
if I try to pass in secondary,

97
00:07:19.629 --> 00:07:21.820
Button is now angry with me.

98
00:07:21.820 --> 00:07:24.838
You can pass in anyone but
you can't pass into,

99
00:07:24.838 --> 00:07:29.514
because it'll match any one of these
types but you can see that these other

100
00:07:29.514 --> 00:07:33.836
types here don't allow secondary or
destructive either, right?

101
00:07:33.836 --> 00:07:37.228
And so we can now have any given one of
them I think you can probably even remove

102
00:07:37.228 --> 00:07:39.933
these I like these because they
actually make it very clear.

103
00:07:39.933 --> 00:07:42.649
I'm pretty sure you're
moving to find out together.

104
00:07:42.649 --> 00:07:45.730
If not, I'll quickly walk that back.

105
00:07:45.730 --> 00:07:51.539
So we do need the never on those otherwise
it will try to match, so put that back.

106
00:07:52.820 --> 00:07:56.479
So yeah, we have these types which
are effectively primary, secondary and

107
00:07:56.479 --> 00:07:58.100
destructive.

108
00:07:58.100 --> 00:08:03.230
You cannot put more than one because any
given type discludes the other ones.

109
00:08:03.230 --> 00:08:08.132
So yeah, is an effective way to just
add more safety to how you intend

110
00:08:08.132 --> 00:08:10.199
your components to be used.

111
00:08:11.870 --> 00:08:15.170
And useful like,
do you need to do it all the time?

112
00:08:15.170 --> 00:08:15.720
No.

113
00:08:15.720 --> 00:08:19.994
But if you know that you're building
a component library used by other teams

114
00:08:19.994 --> 00:08:23.598
incredibly useful, or
if you just know that again, over time,

115
00:08:23.598 --> 00:08:27.930
the intention of that code,
all those great ideas that you had.

116
00:08:27.930 --> 00:08:30.070
Start to slip away a little bit like it.

117
00:08:30.070 --> 00:08:31.240
There's two developers, you have to worry.

118
00:08:31.240 --> 00:08:33.687
The most important valve in the world
is you six months from now,

119
00:08:33.687 --> 00:08:36.540
who doesn't know what you meant when
you wrote that code originally.

120
00:08:36.540 --> 00:08:41.260
So you are basically trying to do
a favor to future you in this case.

121
00:08:41.260 --> 00:08:42.970
Again, the most important
developer in the world.

