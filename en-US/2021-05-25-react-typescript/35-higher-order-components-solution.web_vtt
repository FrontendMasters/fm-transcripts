WEBVTT

1
00:00:00.020 --> 00:00:04.799
So our mission is we're gonna take
this component that takes a user and

2
00:00:04.799 --> 00:00:06.421
it takes a salutation.

3
00:00:06.421 --> 00:00:12.219
And what we wanna do with it is have it
just like, we wanna create a hierarchy,

4
00:00:12.219 --> 00:00:16.700
wanna pass in the user but
still have a take the salutation.

5
00:00:16.700 --> 00:00:19.541
So a little bit of extension
on what we did previously.

6
00:00:19.541 --> 00:00:22.641
We'll make it a little bit better
than the last version as well.

7
00:00:22.641 --> 00:00:26.519
So first of all, all right, we know that
the width user is just gonna pass in

8
00:00:26.519 --> 00:00:28.690
a user model, so we'll start with that.

9
00:00:28.690 --> 00:00:36.296
And so we'll say the type of
withuserprops is going to be user,

10
00:00:36.296 --> 00:00:40.611
just give me one of our user models.

11
00:00:40.611 --> 00:00:41.503
All right.

12
00:00:41.503 --> 00:00:44.212
So we've got that in place.

13
00:00:44.212 --> 00:00:50.713
And now we're gonna make our
function called with current user.

14
00:00:50.713 --> 00:00:55.482
Seems like a good name for
A component is gonna take a user.

15
00:00:55.482 --> 00:00:56.860
And so we've got that in place.

16
00:00:56.860 --> 00:01:01.345
And what we're gonna do is we'll start
with the kind of the same pattern we had

17
00:01:01.345 --> 00:01:03.490
before what other types in a second.

18
00:01:03.490 --> 00:01:08.627
So it's going to take a component and

19
00:01:08.627 --> 00:01:13.276
it's going to return the props.

20
00:01:13.276 --> 00:01:16.737
Again, like all the type stuff we
did a second ago, we will do again.

21
00:01:16.737 --> 00:01:21.660
And it's gonna return the component

22
00:01:21.660 --> 00:01:26.752
with all those props spread at first.

23
00:01:26.752 --> 00:01:30.897
So spread operator like normally if you
wanted to spread all like an object of

24
00:01:30.897 --> 00:01:34.198
props across react component,
you would write it as so, but

25
00:01:34.198 --> 00:01:35.770
we also need to typecast it.

26
00:01:35.770 --> 00:01:38.800
So we're gonna wrap it in parentheses.

27
00:01:38.800 --> 00:01:43.340
And then the user is going to
be that current user up there.

28
00:01:43.340 --> 00:01:44.650
Right.
All right, TypeScript.

29
00:01:44.650 --> 00:01:47.212
It's like what is t,
you never told me about t component.

30
00:01:47.212 --> 00:01:48.493
I don't know what it is props.

31
00:01:48.493 --> 00:01:53.531
I don't know what it is we are, we're
gonna handle all of that momentarily.

32
00:01:53.531 --> 00:02:00.323
So all right, first of all we want to say
we're going to have this idea of t and

33
00:02:00.323 --> 00:02:05.438
the component will be some
kind of react component type.

34
00:02:10.405 --> 00:02:12.781
All right.

35
00:02:12.781 --> 00:02:13.730
So we've got that in place.

36
00:02:13.730 --> 00:02:14.520
Now to be clear,

37
00:02:14.520 --> 00:02:18.420
really typesafe is going to figure it out
based on the component that we passed in.

38
00:02:18.420 --> 00:02:22.622
But if you instead of doing
with current user and

39
00:02:22.622 --> 00:02:26.509
then passing in the name tag component,
and

40
00:02:26.509 --> 00:02:32.512
having a figure out you could define
that it has like name tag props.

41
00:02:32.512 --> 00:02:33.950
You don't need to do that.

42
00:02:33.950 --> 00:02:37.136
From some of the stuff we saw when we
did that generics exercise earlier,

43
00:02:37.136 --> 00:02:40.478
which is when we have a function,
TypeScript will do everything in its power

44
00:02:40.478 --> 00:02:42.482
to try to acquiesce what
you actually meant.

45
00:02:42.482 --> 00:02:44.503
So we can skip that.

46
00:02:44.503 --> 00:02:47.640
But we're gonna need to give it a little
bit more information to make it happier.

47
00:02:47.640 --> 00:02:49.100
I also need to import react.

48
00:02:49.100 --> 00:02:52.262
So import star as react so

49
00:02:52.262 --> 00:02:57.840
that we can use react
component type there.

50
00:02:59.200 --> 00:03:02.670
All right, so we've got that in place.

51
00:03:02.670 --> 00:03:07.550
And the other thing that we can do is,
go here and

52
00:03:07.550 --> 00:03:10.610
say we'll do our omit again.

53
00:03:10.610 --> 00:03:15.602
We'll say that this is going to be,
props is going to be omit.

54
00:03:15.602 --> 00:03:18.528
And then whatever prop types
we're working with, and

55
00:03:18.528 --> 00:03:21.401
just take out everything
that's in with user props.

56
00:03:21.401 --> 00:03:22.746
Cuz we're gonna say like,

57
00:03:22.746 --> 00:03:26.910
this new component takes whatever it took
originally, in this case, salutation.

58
00:03:26.910 --> 00:03:29.580
But take out everything in with
user props which is the user.

59
00:03:29.580 --> 00:03:36.801
So hopefully that will get us to where
when I goes to key of with user props.

60
00:03:36.801 --> 00:03:40.172
Close that angle bracket.

61
00:03:40.172 --> 00:03:42.697
So we got most of the high
order component in place.

62
00:03:42.697 --> 00:03:44.770
So now we've got this name tag and
we can say.

63
00:03:47.160 --> 00:03:53.320
Name tag with current user
was with current user.

64
00:03:55.999 --> 00:03:58.869
Name tag, and we'll swap this in.

65
00:04:04.182 --> 00:04:09.303
All right, it's now angry about
with the fact that we have

66
00:04:09.303 --> 00:04:14.542
a user because like no you made
a new type that removes that.

67
00:04:14.542 --> 00:04:15.783
So, this will work.

68
00:04:15.783 --> 00:04:20.040
There is one other kind of
cool extension that we can do.

69
00:04:20.040 --> 00:04:24.750
And we can also say that T, we can say

70
00:04:24.750 --> 00:04:29.630
that should extend with user props.

71
00:04:29.630 --> 00:04:33.220
We talked about this last example, but
we didn't necessarily do extends plural.

72
00:04:34.560 --> 00:04:37.624
And what this will do is
now with current user,

73
00:04:37.624 --> 00:04:42.353
we'll only take components that
originally took a user prop, right?

74
00:04:42.353 --> 00:04:45.280
So, listen, it's gonna be a generic type.

75
00:04:45.280 --> 00:04:47.797
Our only rule is that generic type has

76
00:04:47.797 --> 00:04:50.808
to be in a type that had
a user property on it.

77
00:04:50.808 --> 00:04:55.257
Right so we can, we this is now
even safer, which is you can't pass

78
00:04:55.257 --> 00:05:00.025
things into with current user that
didn't take a user property at all,

79
00:05:00.025 --> 00:05:04.488
which again, is really useful if
one making a component library.

80
00:05:04.488 --> 00:05:08.299
2, If you are, I joke that even if
you're not making a library for

81
00:05:08.299 --> 00:05:12.265
other people to consume in a large
enough codebase, you kind of are.

82
00:05:12.265 --> 00:05:15.900
Right, pieces of your code will
be consumed in other parts of

83
00:05:15.900 --> 00:05:17.052
the application.

84
00:05:17.052 --> 00:05:21.187
And so being able to like express
the intent of that code is

85
00:05:21.187 --> 00:05:24.125
an incredibly powerful idea, as well.

86
00:05:24.125 --> 00:05:25.960
Right and we have it in place.

