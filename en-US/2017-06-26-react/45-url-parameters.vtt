WEBVTT

1
00:00:00.440 --> 00:00:03.250
&gt;&gt; Brian Holt: So we're gonna get going,
we're gonna create another route.

2
00:00:03.250 --> 00:00:07.136
So let's create a new file here,
call it Details.jsx.

3
00:00:09.695 --> 00:00:12.301
&gt;&gt; Brian Holt: Oops, and
we're gonna put that inside of JS.

4
00:00:16.374 --> 00:00:19.240
&gt;&gt; Brian Holt: One thing I was gonna
mention is that we haven't written tests

5
00:00:19.240 --> 00:00:22.500
for details or showCard or
any of our other components.

6
00:00:22.500 --> 00:00:25.950
You would, right, you typically would
write tests for every single component,

7
00:00:25.950 --> 00:00:27.906
if you're gonna write tests at all for
those.

8
00:00:27.906 --> 00:00:30.756
We're not going to because it
would be redundant, right.

9
00:00:30.756 --> 00:00:32.668
I wouldn't be showing you new concepts,

10
00:00:32.668 --> 00:00:35.079
which is kind of the point
of what we're doing here.

11
00:00:35.079 --> 00:00:38.126
So, for now we're only gonna be
writing tests for Search, and

12
00:00:38.126 --> 00:00:40.672
then eventually we'll write more tests for
Redux.

13
00:00:40.672 --> 00:00:44.558
But we're not gonna write the other
rest of tests, but you should, right?

14
00:00:44.558 --> 00:00:50.063
In fact, it might even be a good exercise
for you to understand how to write tests.

15
00:00:50.063 --> 00:00:54.058
Okay, so we have details.

16
00:00:54.058 --> 00:00:54.648
First thing,

17
00:00:54.648 --> 00:00:58.252
since we're already typed everywhere else
we're gonna first thing opt into typing.

18
00:01:02.046 --> 00:01:06.185
&gt;&gt; Brian Holt: import
React from 'react' and

19
00:01:06.185 --> 00:01:12.472
we're just gonna make
a bare bones const Details

20
00:01:12.472 --> 00:01:18.967
=,
&gt;&gt; Brian Holt: We're

21
00:01:18.967 --> 00:01:25.666
gonna have div className = 'details',
&gt;&gt; Brian Holt: And

22
00:01:25.666 --> 00:01:31.675
you can put an h1 in here with, hi lol,
whatever you wanna put in there.

23
00:01:31.675 --> 00:01:35.920
Just kinda make sure everything's gonna
work first before we work too much on it.

24
00:01:35.920 --> 00:01:40.342
export default Details, okay.

25
00:01:40.342 --> 00:01:41.954
So now we have a bare bones of component.

26
00:01:44.413 --> 00:01:47.555
&gt;&gt; Brian Holt: And then we're going
to go import that into our router and

27
00:01:47.555 --> 00:01:49.340
make use of that.

28
00:01:49.340 --> 00:01:54.355
So go to app.jsx, sorry,

29
00:01:54.355 --> 00:01:58.730
app.jsx not Kleiner.

30
00:01:58.730 --> 00:02:04.991
We're going to import,
&gt;&gt; Brian Holt: Details from ./Details.

31
00:02:04.991 --> 00:02:10.371
And we're going to make a new route here,

32
00:02:10.371 --> 00:02:16.831
which is gonna be Route path=/details/:id,

33
00:02:16.831 --> 00:02:22.847
and component is going
to be equal to Details.

34
00:02:27.518 --> 00:02:30.652
&gt;&gt; Brian Holt: So what this is saying
is we're gonna make a details page for

35
00:02:30.652 --> 00:02:32.984
each individual show that we have, right?

36
00:02:35.601 --> 00:02:38.153
&gt;&gt; Brian Holt: And we wanna be able to
address each show individually, right.

37
00:02:38.153 --> 00:02:43.114
So we're gonna have details /:id, right?

38
00:02:43.114 --> 00:02:48.115
So that :id is going to be the imdbID for
that particular element.

39
00:02:48.115 --> 00:02:52.235
And then if it matches that it's
going to call the details route and

40
00:02:52.235 --> 00:02:55.262
it's going to pass this
id into details as well.

41
00:02:59.061 --> 00:02:59.755
&gt;&gt; Brian Holt: Cool.

42
00:03:03.960 --> 00:03:08.908
&gt;&gt; Brian Holt: So what we're going to do
here is we're going to first check to

43
00:03:08.908 --> 00:03:10.914
make sure that it works.

44
00:03:14.574 --> 00:03:18.214
&gt;&gt; Brian Holt: My notes are incorrect
here so if you're following my notes,

45
00:03:18.214 --> 00:03:20.389
just be aware that I need to fix that.

46
00:03:22.150 --> 00:03:24.633
So we're gonna go here into our page.

47
00:03:26.974 --> 00:03:28.268
&gt;&gt; Brian Holt: And
it's not running right now, so

48
00:03:28.268 --> 00:03:29.660
we're going to get it running first.

49
00:03:34.258 --> 00:03:39.256
&gt;&gt; Brian Holt: yarn dev,
&gt;&gt; Brian Holt: Okay,

50
00:03:39.256 --> 00:03:42.298
and then we're gonna come
in here to this page.

51
00:03:42.298 --> 00:03:44.674
Okay, and
then just to make sure everything works,

52
00:03:44.674 --> 00:03:47.430
we're just going to write a URL
that would match that route.

53
00:03:47.430 --> 00:03:50.903
So, /details/something, right?

54
00:03:50.903 --> 00:03:52.540
It could be literally anything.

55
00:03:54.210 --> 00:03:56.700
And notice that we get this hi lol, right?

56
00:03:56.700 --> 00:03:57.485
So, it's working, right?

57
00:04:00.819 --> 00:04:03.744
&gt;&gt; Brian Holt: In fact,
something that we can do here so

58
00:04:03.744 --> 00:04:09.089
you can see what that looks like,
we come in here to Details really quick.

59
00:04:09.089 --> 00:04:14.104
If you want to see what those
parameters the routes passing in,

60
00:04:14.104 --> 00:04:18.751
we can do &lt;pre&gt;&lt;code&gt; and
then do a JSON.stringify.

61
00:04:18.751 --> 00:04:23.943
We've done this before so
hopefully this looks familiar, to props,

62
00:04:23.943 --> 00:04:28.673
null, 4,
&gt;&gt; Brian Holt: And

63
00:04:28.673 --> 00:04:30.304
we're gonna pass in props here.

64
00:04:30.304 --> 00:04:32.953
So the first thing,
it's gonna yell at us and say hey,

65
00:04:32.953 --> 00:04:34.687
I don't know what those types are.

66
00:04:34.687 --> 00:04:36.911
That's fine, I don't care yet.

67
00:04:39.888 --> 00:04:41.344
&gt;&gt; Brian Holt: I'm more interested
in just seeing what it looks like.

68
00:04:41.344 --> 00:04:43.158
So you can see here,
this is probably kind of hard to see but

69
00:04:43.158 --> 00:04:44.286
let's make it a little bit bigger.

70
00:04:47.322 --> 00:04:50.243
&gt;&gt; Brian Holt: So notice that we
get something of a match, right.

71
00:04:50.243 --> 00:04:56.474
So we can see what information
is coming from the match, right?

72
00:04:56.474 --> 00:05:01.311
So this is the path that it matched, the
exact URL if there was an exact match and

73
00:05:01.311 --> 00:05:03.380
the params that came in, right?

74
00:05:03.380 --> 00:05:07.718
So I called this URL with /detail /1,
right?

75
00:05:07.718 --> 00:05:10.550
If I call this with something-else,

76
00:05:10.550 --> 00:05:14.980
it's gonna come in with something
else as that ID, right?

77
00:05:14.980 --> 00:05:17.241
So that's going to be pulled
from the URL for you.

78
00:05:19.580 --> 00:05:21.398
&gt;&gt; Brian Holt: You can see the location,

79
00:05:21.398 --> 00:05:25.703
that's being passed in as well
as well as the history object.

80
00:05:25.703 --> 00:05:30.683
And this is going to be literary
the history package from MPM.

81
00:05:30.683 --> 00:05:35.116
That's how React Router DOM works, is it
works with this package called history and

82
00:05:35.116 --> 00:05:38.248
so you're able to manipulate
the history that way as well.

83
00:05:40.970 --> 00:05:45.223
&gt;&gt; Brian Holt: Okay, so let's go ahead and
actually do something with it now.

84
00:05:49.417 --> 00:05:52.752
&gt;&gt; Brian Holt: So we'll drop this
right here cuz we don't need it.

85
00:05:55.306 --> 00:06:02.587
&gt;&gt; Brian Holt: And,
&gt;&gt; Brian Holt: Yeah, I showed you that.

86
00:06:07.324 --> 00:06:12.327
&gt;&gt; Brian Holt: Actually, what we're gonna
do first, there's a couple strategies

87
00:06:12.327 --> 00:06:18.024
that we could employ here to get the
correct data into the details page, right?

88
00:06:18.024 --> 00:06:24.078
So we're reading stuff out of this props,
or it's not props, but data.json, right?

89
00:06:24.078 --> 00:06:27.820
And for a details page,
it's concentrating on one show right,

90
00:06:27.820 --> 00:06:31.435
it's not concentrating on all
of the shows, it's just one.

91
00:06:31.435 --> 00:06:36.128
So one thing that we could do is inside
of the details page is just given that

92
00:06:36.128 --> 00:06:40.761
parameter id, we can go and find
the correct show out of our data.json.

93
00:06:40.761 --> 00:06:42.515
I don't think that's the best approach.

94
00:06:42.515 --> 00:06:47.015
I think the details page should be unaware
that other shows that even exist, right?

95
00:06:47.015 --> 00:06:50.600
It should just have the one show and
that'll make it more flexible.

96
00:06:50.600 --> 00:06:55.424
That way the details, the particular show
can from any number of sources, right?

97
00:06:55.424 --> 00:07:00.513
It can come from API, it can come from a
hydrated server side rendering data store,

98
00:07:00.513 --> 00:07:03.287
it could be siloed in some other way,
right?

99
00:07:03.287 --> 00:07:07.923
It makes it more flexible
as well as more testable.

100
00:07:07.923 --> 00:07:12.307
So what we're gonna do instead
is we're gonna go to app.jsx.

101
00:07:12.307 --> 00:07:16.087
And what we're gonna do up here is
we're going to import the data up here.

102
00:07:18.586 --> 00:07:21.515
&gt;&gt; Brian Holt: preload from

103
00:07:21.515 --> 00:07:28.976
'../data.json', okay?

104
00:07:32.801 --> 00:07:36.793
&gt;&gt; Brian Holt: Now we wanna pass the
correct show from preload into Details,

105
00:07:36.793 --> 00:07:37.340
right?

106
00:07:37.340 --> 00:07:40.276
However, notice that we're
not actually rendering,

107
00:07:40.276 --> 00:07:43.218
we're not creating an instance
of details right here.

108
00:07:43.218 --> 00:07:45.313
We're just passing at
the general component and

109
00:07:45.313 --> 00:07:47.416
then Route is rendering the component,
right?

110
00:07:47.416 --> 00:07:54.097
So how do we pass props from what
we have inside of app into details?

111
00:07:55.548 --> 00:08:00.238
&gt;&gt; Brian Holt: Well, there's kind
of a cool trick you can do here.

112
00:08:00.238 --> 00:08:04.950
If you have a function that
returns a component, that in and

113
00:08:04.950 --> 00:08:07.691
of itself is a component, right?

114
00:08:07.691 --> 00:08:11.460
Cuz you can have these functions,
right, in fact, this one's perfect.

115
00:08:11.460 --> 00:08:15.770
This is a perfect example right here, this
is a function that returns markup, right?

116
00:08:15.770 --> 00:08:20.329
So here, we could have
a function that returns details

117
00:08:24.150 --> 00:08:25.800
&gt;&gt; Brian Holt: And that also works, right?

118
00:08:25.800 --> 00:08:29.610
Because now, this in and of itself, this
block right here is another component.

119
00:08:29.610 --> 00:08:33.961
What's cool about this, is now we
can pass things into details, right?

120
00:08:33.961 --> 00:08:35.808
We can pass props into details.

121
00:08:35.808 --> 00:08:39.370
So, stuff='cool', right?

122
00:08:39.370 --> 00:08:41.825
I don't know,
whatever you wanna put in there.

123
00:08:45.817 --> 00:08:47.519
&gt;&gt; Brian Holt: But
now what we can do instead,

124
00:08:47.519 --> 00:08:51.866
we can say show =,
&gt;&gt; Brian Holt: And

125
00:08:51.866 --> 00:08:54.739
then we can figure out which particular
show we wanna pass into there.

126
00:08:54.739 --> 00:09:03.286
So we can do preload.shows.find I
think is the method I wanna use.

127
00:09:03.286 --> 00:09:10.962
So I'm gonna do find,
&gt;&gt; Brian Holt: And

128
00:09:10.962 --> 00:09:15.181
this is gonna be a show, and

129
00:09:15.181 --> 00:09:24.179
it's gonna be props.params.id
=== show.imdbID.

130
00:09:32.316 --> 00:09:34.461
&gt;&gt; Brian Holt: So
we have a couple of problems here.

131
00:09:34.461 --> 00:09:37.494
Well, first of all,
this is actually going to work.

132
00:09:37.494 --> 00:09:42.675
So, now if we save this,
&gt;&gt; Brian Holt: We have some complaining

133
00:09:42.675 --> 00:09:47.159
from our type system but
we're going to figure that out real quick.

134
00:09:47.159 --> 00:09:51.220
&gt;&gt; Speaker 2: Does that arrow
function have to accept props?

135
00:09:51.220 --> 00:09:52.364
&gt;&gt; Brian Holt: Yeah, exactly, thank you.

136
00:09:55.169 --> 00:09:57.070
&gt;&gt; Brian Holt: So it's gonna be
mad that this isn't typed either.

137
00:09:58.940 --> 00:10:01.757
But we'll placate the type
system momentarily.

138
00:10:04.594 --> 00:10:09.224
&gt;&gt; Brian Holt: In fact, you'll kinda see
this pattern emerging of how I write flow.

139
00:10:09.224 --> 00:10:13.136
It's like, I'll just write whatever the
hell I wanna write, then I'll go back and

140
00:10:13.136 --> 00:10:14.583
figure out the types, right?

141
00:10:14.583 --> 00:10:19.200
And then I'll actually make
solid my type of annotations.

142
00:10:19.200 --> 00:10:22.247
But I'll first take advantage of
the dynamic nature of JavaScript and

143
00:10:22.247 --> 00:10:25.651
just throw stuff to the wind and figure
it out, and then come back and say okay,

144
00:10:25.651 --> 00:10:26.805
let's make this mature.

145
00:10:30.883 --> 00:10:34.091
&gt;&gt; Brian Holt: So something else
is not actually a valid ID, right?

146
00:10:34.091 --> 00:10:37.131
But, if I put in something like one of

147
00:10:37.131 --> 00:10:41.155
these,
&gt;&gt; Brian Holt: Did I break it?

148
00:10:41.155 --> 00:10:42.233
I broke it, didn't I?

149
00:10:53.662 --> 00:10:55.945
&gt;&gt; Brian Holt: But anyway,
what I'm gonna be pulling out,

150
00:10:55.945 --> 00:10:57.819
if you look here in your data.json.

151
00:10:57.819 --> 00:11:02.070
You can just pick anyone of
these imdbIDs right here.

152
00:11:02.070 --> 00:11:06.719
So let's look at, I don't know.

153
00:11:06.719 --> 00:11:08.889
How about Stranger Things?

154
00:11:08.889 --> 00:11:13.105
We'll pull that one off, come in here and

155
00:11:13.105 --> 00:11:17.326
paste that in here, see what is going on.

156
00:11:20.559 --> 00:11:21.823
&gt;&gt; Brian Holt: Cannot read ID.

157
00:11:21.823 --> 00:11:26.383
So let's go and
figure out why it can't read the ID.

158
00:11:26.383 --> 00:11:30.080
So going back to the app.jsx,

159
00:11:34.082 --> 00:11:36.123
&gt;&gt; Brian Holt: So component here,

160
00:11:36.123 --> 00:11:41.165
props which is gonna return
a details parameter,

161
00:11:41.165 --> 00:11:49.200
preload.shows.find(show,
&gt;&gt; Brian Holt: This should

162
00:11:49.200 --> 00:11:54.874
refer to that prop, props.params.id,
which will probably equal to show.imdbID.

163
00:11:58.213 --> 00:11:59.228
&gt;&gt; Brian Holt: Let's make
this a little bit more,

164
00:12:02.896 --> 00:12:03.543
&gt;&gt; Brian Holt: Little less clever.

165
00:12:20.460 --> 00:12:23.517
&gt;&gt; Brian Holt: Okay, and then we're gonna
set, we'll pull this out here just a sec.

166
00:12:29.459 --> 00:12:32.469
&gt;&gt; Brian Holt: Const selectedShow = that.

167
00:12:35.089 --> 00:12:38.398
&gt;&gt; Brian Holt: And we'll pass
in our selectedShow right there.

168
00:12:51.574 --> 00:12:56.281
&gt;&gt; Brian Holt: Okay,
&gt;&gt; Brian Holt: Still getting an error

169
00:12:56.281 --> 00:13:02.471
there, so props,
&gt;&gt; Brian Holt: .params,

170
00:13:02.471 --> 00:13:07.145
so I guess let's just
console.log(props) here.

171
00:13:32.000 --> 00:13:34.633
&gt;&gt; Brian Holt: Cannot read ID there.

172
00:13:34.633 --> 00:13:37.878
Well, that's not super useful.

173
00:13:44.226 --> 00:13:48.665
&gt;&gt; Brian Holt: So for now we'll just
comment that out cuz I'm sure that's where

174
00:13:48.665 --> 00:13:50.450
it is, and return an h1.

175
00:13:54.965 --> 00:13:55.936
&gt;&gt; Brian Holt: Let's see what's going on.

176
00:14:02.866 --> 00:14:05.450
&gt;&gt; Brian Holt: Okay, so
that's all fine I think.

177
00:14:08.471 --> 00:14:10.312
&gt;&gt; Brian Holt: So
is she getting from, it's from match.

178
00:14:12.704 --> 00:14:13.394
&gt;&gt; Brian Holt: See, okay.

179
00:14:13.394 --> 00:14:16.600
So this is something that my type
checker was trying to tell me, and

180
00:14:16.600 --> 00:14:17.644
I was just ignoring.

181
00:14:17.644 --> 00:14:20.799
[LAUGH] So it should be prop.

182
00:14:20.799 --> 00:14:25.662
So if we go back down here,
&gt;&gt; Brian Holt: It should

183
00:14:25.662 --> 00:14:28.828
be props.match.params.ID.

184
00:14:31.618 --> 00:14:36.862
&gt;&gt; Brian Holt: And if we come back in
here, and get rid of this h1 right here.

185
00:14:42.246 --> 00:14:43.272
&gt;&gt; Brian Holt: There you go, and

186
00:14:43.272 --> 00:14:47.522
now notice that show is actually being
passed down into details, right?

187
00:14:53.238 --> 00:14:55.867
&gt;&gt; Brian Holt: Okay, so let's recap
cuz there's a lot that went on there.

188
00:14:55.867 --> 00:15:00.420
So what we put in here was
this is a component here that

189
00:15:00.420 --> 00:15:04.043
it's going to select the correct show and

190
00:15:04.043 --> 00:15:08.509
then it's gonna pass that
show down into details.

191
00:15:08.509 --> 00:15:13.262
Now notice that we lost the match detail,
the history,

192
00:15:13.262 --> 00:15:17.826
all that stuff that was being
passed down to details.

193
00:15:17.826 --> 00:15:19.346
And that's kind of a problem.

194
00:15:19.346 --> 00:15:22.124
You want those things to still show
up because details is a route and

195
00:15:22.124 --> 00:15:23.624
it should have access to that data.

196
00:15:23.624 --> 00:15:27.011
So what we're gonna do here
after show is just put in hey,

197
00:15:27.011 --> 00:15:29.493
just give it the rest
of the props as well.

198
00:15:32.201 --> 00:15:35.873
&gt;&gt; Brian Holt: That's just good practice
that if it's a route it should get all

199
00:15:35.873 --> 00:15:36.696
that detail.

200
00:15:36.696 --> 00:15:41.449
So now if you go back here and refresh,
&gt;&gt; Brian Holt: So

201
00:15:41.449 --> 00:15:45.496
the reason why it's not actually
refreshing right now for us is because

202
00:15:45.496 --> 00:15:50.032
it's encountering errors, and it will
only refresh when there are no errors.

203
00:15:50.032 --> 00:15:53.935
That's why hot module reload
is not firing right now.

204
00:15:53.935 --> 00:15:57.658
But now notice it's getting the show,
the match, the location, the history,

205
00:15:57.658 --> 00:15:59.259
and all that kind of stuff, cool?

206
00:16:07.275 --> 00:16:10.881
&gt;&gt; Brian Holt: So let's actually go and
fix some of our types here because this

207
00:16:10.881 --> 00:16:15.305
is saying, hey, you're accessing Match and
I can't validate that that's

208
00:16:15.305 --> 00:16:19.749
gonna cause an error, so please help
me understand what's happening here.

209
00:16:22.155 --> 00:16:25.647
&gt;&gt; Brian Holt: Well, what's cool
is match is actually a type that

210
00:16:25.647 --> 00:16:28.009
React Router DOM exports for you.

211
00:16:28.009 --> 00:16:29.422
So we can actually just pull in Match.

212
00:16:29.422 --> 00:16:36.482
So we're gonna come up here and say,
and this is specific to flow right now.

213
00:16:36.482 --> 00:16:40.544
You're gonna import type Match,

214
00:16:43.185 --> 00:16:46.399
&gt;&gt; Brian Holt: from 'react-router-dom'.

215
00:16:46.399 --> 00:16:48.770
This came from flow typed.

216
00:16:48.770 --> 00:16:53.263
Okay, so now we have this Match type and

217
00:16:53.263 --> 00:16:58.847
we can tell this props
right here that it's gonna

218
00:16:58.847 --> 00:17:04.442
have a Match and
that match is going to be a Match.

219
00:17:08.333 --> 00:17:11.693
&gt;&gt; Brian Holt: That make sense?
So props is gonna be an object on that,

220
00:17:11.693 --> 00:17:17.047
it's going to have a match object,
which is going to be of type Match.

221
00:17:19.533 --> 00:17:21.521
&gt;&gt; Brian Holt: So
this match corresponds to that, right?

222
00:17:21.521 --> 00:17:25.680
And that capital M Match corresponds
to that match right there.

223
00:17:25.680 --> 00:17:28.516
It's a little confusing when things
are called the same thing, but

224
00:17:28.516 --> 00:17:29.768
that's what's happening.

225
00:17:33.439 --> 00:17:35.728
&gt;&gt; Brian Holt: Now let's talk about
that we're accessing this object called

226
00:17:35.728 --> 00:17:36.381
params, right?

227
00:17:36.381 --> 00:17:39.355
Params is going to be defined
by definition on Match, or

228
00:17:39.355 --> 00:17:42.222
else something else is gonna
throw a flow type error.

229
00:17:42.222 --> 00:17:45.437
So we know for
a fact that match always come with params.

230
00:17:45.437 --> 00:17:49.302
And then everything else on
params is anyone's bet, right?

231
00:17:49.302 --> 00:17:51.785
But flow type's not gonna
validate that for you.

232
00:17:54.776 --> 00:17:57.049
&gt;&gt; Brian Holt: I don't think,
I think if I put other here.

233
00:17:59.755 --> 00:18:00.525
&gt;&gt; Brian Holt: No, it's not,

234
00:18:00.525 --> 00:18:03.666
it's not smart enough to know that
ID is gonna be from this, right?

235
00:18:03.666 --> 00:18:06.947
It's not gonna do string interpolation for
you, sorry.

236
00:18:08.806 --> 00:18:10.510
&gt;&gt; Brian Holt: So
what match is going to be,

237
00:18:10.510 --> 00:18:12.928
is it's gonna be an object of anything.

238
00:18:12.928 --> 00:18:16.350
And it's just not gonna validate
anything that's coming back from params.

