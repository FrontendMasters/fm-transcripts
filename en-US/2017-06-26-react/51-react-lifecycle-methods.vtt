WEBVTT

1
00:00:00.000 --> 00:00:02.622
&gt;&gt; Brian Holt: And
now we're gonna do Ajax.

2
00:00:02.622 --> 00:00:06.781
So remarkably, we haven't actually
had to use lifecycle methods yet.

3
00:00:06.781 --> 00:00:10.823
Which is crazy because they're actually
fairly common when you're writing React.

4
00:00:10.823 --> 00:00:13.749
But we have not actually
had to use them yet.

5
00:00:13.749 --> 00:00:16.629
So we're going to
introduce something now so

6
00:00:16.629 --> 00:00:19.900
that you can see what these
lifecycle methods are.

7
00:00:19.900 --> 00:00:25.741
So going back to our code,
let's look at something like ShowCard,

8
00:00:25.741 --> 00:00:28.100
it's a pretty simple one.

9
00:00:28.100 --> 00:00:30.552
No, let's look at Search.

10
00:00:32.434 --> 00:00:36.128
&gt;&gt; Brian Holt: So you have to think of
the lifecycle of the component as it lives

11
00:00:36.128 --> 00:00:37.321
on the DOM, right?

12
00:00:37.321 --> 00:00:39.370
The first thing that happens to it,

13
00:00:39.370 --> 00:00:43.754
is it calls its constructor, inevitably,
that's how ES6 classes work.

14
00:00:43.754 --> 00:00:46.825
Right, then after that it's gonna
get it's own default props.

15
00:00:46.825 --> 00:00:49.725
And then right before it
gets mounted to the DOM,

16
00:00:49.725 --> 00:00:53.069
it's gonna call a method
called component will mount.

17
00:00:53.069 --> 00:00:58.021
So actually what I would do here is,
I think it goes here,

18
00:00:58.021 --> 00:01:00.819
so it's component will mount.

19
00:01:00.819 --> 00:01:02.417
You don't have to copy this,
I'm just gonna show you.

20
00:01:05.454 --> 00:01:09.724
&gt;&gt; Brian Holt: So this here is a method
that's specific to React, that this is

21
00:01:09.724 --> 00:01:14.658
going to get called right before react
renders it out to the DOM, right?

22
00:01:14.658 --> 00:01:16.002
So it's called render for

23
00:01:16.002 --> 00:01:19.674
the frist time already, so it actually
has the first amount of markup.

24
00:01:19.674 --> 00:01:21.940
And then it's about to
be mounted to the dom.

25
00:01:21.940 --> 00:01:24.207
It's gonna call this
componentWillMount method.

26
00:01:24.207 --> 00:01:28.639
And to be honest with you, you're not
gonna use componentWillMount very much.

27
00:01:28.639 --> 00:01:32.125
But one of the things that it
is useful for and is important,

28
00:01:32.125 --> 00:01:36.240
is if you have something that needs
to happen both on the service side,

29
00:01:36.240 --> 00:01:40.180
if you're doing service-side rendering,
and the client side.

30
00:01:40.180 --> 00:01:42.852
So that's the key about
componentWillMount,

31
00:01:42.852 --> 00:01:45.133
is that it does get called on the server.

32
00:01:45.133 --> 00:01:50.290
The one that you're gonna end up using
more is componentDidMount, right?

33
00:01:50.290 --> 00:01:54.054
So this is going to get called after
it's been rendered out to the DOM for

34
00:01:54.054 --> 00:01:55.197
the very first time.

35
00:01:55.197 --> 00:01:59.853
Now, what's peculiar and
good about componentDidMount is you can

36
00:01:59.853 --> 00:02:04.191
be guaranteed that Window is
available at this point, right?

37
00:02:04.191 --> 00:02:06.089
Because it's already been rendered and

38
00:02:06.089 --> 00:02:08.221
it's not going to get called a node,
right?

39
00:02:08.221 --> 00:02:12.109
So anything that you wanna do with window
or anything you wanna do with like doing

40
00:02:12.109 --> 00:02:14.673
Ajax request,
are gonna go to componentDidMount.

41
00:02:14.673 --> 00:02:17.745
Thus you are gonna use
componentDidMount quite a bit.

42
00:02:17.745 --> 00:02:22.076
A good example, so besides Ajax and
beside anything that references window or

43
00:02:22.076 --> 00:02:26.490
document, another good thing you are gonna
do in windows componentDidMount.

44
00:02:26.490 --> 00:02:29.503
Is if you need to integrate
with another library.

45
00:02:29.503 --> 00:02:31.870
So an example of that would be D3, right?

46
00:02:31.870 --> 00:02:35.679
Say you'd have a React component
that renders out a chart with D3.

47
00:02:35.679 --> 00:02:38.671
You would do all of that stuff
here in componentDidMount to do

48
00:02:38.671 --> 00:02:40.322
that integration level with it.

49
00:02:42.915 --> 00:02:46.088
&gt;&gt; Brian Holt: If you need to add
any event listeners on the window,

50
00:02:46.088 --> 00:02:48.484
that's when you would do this as well.

51
00:02:48.484 --> 00:02:51.043
So yes, we're gonna be using
componentDidMount quite a bit.

52
00:02:53.446 --> 00:02:55.237
&gt;&gt; Brian Holt: There's
a couple other of them.

53
00:02:55.237 --> 00:02:58.177
I have them documented out here in my
notes if you wanna go and read them,

54
00:02:58.177 --> 00:03:01.125
and they're also really well
documented in the React documentation.

55
00:03:01.125 --> 00:03:03.557
There's componentWillReceiveProps.

56
00:03:03.557 --> 00:03:08.455
That's gonna get called every time
that you're gonna get brand new props

57
00:03:08.455 --> 00:03:09.643
from the parent.

58
00:03:09.643 --> 00:03:13.527
There's ShouldComponentUpdate which
we've actually will use later.

59
00:03:13.527 --> 00:03:16.541
It's a performance optimization method
which typically you don't have to

60
00:03:16.541 --> 00:03:17.112
worry about.

61
00:03:17.112 --> 00:03:20.659
Reactors plenty performed it by itself,
but sometimes

62
00:03:20.659 --> 00:03:25.496
you have performance problems and
this is kind of the escape hatch for that.

63
00:03:25.496 --> 00:03:29.491
And then the last one is
componentWillUnmount.

64
00:03:33.551 --> 00:03:34.294
&gt;&gt; Brian Holt: Like that, I think.

65
00:03:37.786 --> 00:03:40.686
&gt;&gt; Brian Holt: This is before the
component is about the leave the DOM, and

66
00:03:40.686 --> 00:03:43.361
typically this is gonna be
where you clean up, right?

67
00:03:43.361 --> 00:03:46.987
If you added any event listeners,
if you need to like detach from D3 or

68
00:03:46.987 --> 00:03:50.628
anything like that, all that kind
of clean up stuff will happen here.

69
00:03:50.628 --> 00:03:53.583
Again, not something that you're
typically going to need to do,

70
00:03:53.583 --> 00:03:55.975
but it's available there for
you should you need it.

71
00:03:58.481 --> 00:03:59.047
&gt;&gt; Brian Holt: And that's really it.
So,

72
00:03:59.047 --> 00:04:02.680
it's just a bunch of hooks that you
can hook into the lifecycle of these

73
00:04:02.680 --> 00:04:06.571
components to kind of do different
things depending on what you need to do.

