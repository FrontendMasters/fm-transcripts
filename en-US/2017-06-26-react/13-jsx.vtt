WEBVTT

1
00:00:00.000 --> 00:00:04.273
&gt;&gt; Brian Holt: So let's keep going, the
last thing we did was we did this ESLint

2
00:00:04.273 --> 00:00:08.405
ignore to make sure that we don't
get all these crazy errors.

3
00:00:08.405 --> 00:00:10.874
Let me run yarn lint,
everything should be good now.

4
00:00:10.874 --> 00:00:17.309
I pushed up v3-2 I believe, yep, I did.

5
00:00:17.309 --> 00:00:19.625
So that should be good as well.

6
00:00:23.973 --> 00:00:25.460
&gt;&gt; Brian Holt: Yeah, yeah, that's fine.

7
00:00:27.528 --> 00:00:29.017
&gt;&gt; Brian Holt: So up to this point,

8
00:00:29.017 --> 00:00:34.639
we have been writing just plain
Vanilla JavaScript in our ClientApp.jsx.

9
00:00:37.597 --> 00:00:42.480
&gt;&gt; Brian Holt: And
we are gonna take this a step further now.

10
00:00:42.480 --> 00:00:45.705
So let's see,
let's get this back to where it was.

11
00:00:45.705 --> 00:00:52.963
Function,
&gt;&gt; Brian Holt: So now we're

12
00:00:52.963 --> 00:00:59.036
gonna start writing this in terms of
JSX instead of using Vanilla React.

13
00:00:59.036 --> 00:01:04.799
So let's go ahead and
refactor MyTitle first.

14
00:01:07.290 --> 00:01:08.518
&gt;&gt; Brian Holt: Yeah, let's do that.

15
00:01:11.019 --> 00:01:13.111
&gt;&gt; Brian Holt: So
what we're gonna do here,

16
00:01:14.917 --> 00:01:16.892
&gt;&gt; Brian Holt: Is instead of having all

17
00:01:16.892 --> 00:01:22.534
this ce stuff, actually you can
just comment that out for a second.

18
00:01:22.534 --> 00:01:27.566
And we're gonna say return &lt;div,

19
00:01:33.759 --> 00:01:39.206
&gt;&gt; Brian Holt: And,
&gt;&gt; Brian Holt: Then

20
00:01:39.206 --> 00:01:45.272
inside of that we're going to put an h1,
&gt;&gt; Brian Holt: With

21
00:01:45.272 --> 00:01:49.196
props.title inside of it,

22
00:01:56.579 --> 00:01:59.560
&gt;&gt; Brian Holt: Okay?

23
00:01:59.560 --> 00:02:02.745
And then we'll get to
the style here momentarily.

24
00:02:02.745 --> 00:02:04.435
But you can see here,
this looks a little peculiar.

25
00:02:04.435 --> 00:02:07.122
This isn’t a string or anything.

26
00:02:07.122 --> 00:02:12.703
This is actually writing HTML
directly into our JavaScript.

27
00:02:12.703 --> 00:02:13.534
This is JSX.

28
00:02:13.534 --> 00:02:16.771
This is what I keep referring to as JSX.

29
00:02:16.771 --> 00:02:21.971
So basically all JSX is gonna do for
you, it doesn't extend

30
00:02:21.971 --> 00:02:28.528
JavaScript at all other than adding
this XML like syntax into JavaScript.

31
00:02:28.528 --> 00:02:33.573
So we get to write basically
the HTML that we want to show up.

32
00:02:33.573 --> 00:02:35.326
We just get to write that directly.

33
00:02:35.326 --> 00:02:40.321
The reason why this arose is if you look
at this, when we're doing the ce syntax,

34
00:02:40.321 --> 00:02:45.469
this createElement syntax, we're writing
code that mimics our markup, right?

35
00:02:45.469 --> 00:02:48.484
So if you're writing code
that mimics your markup,

36
00:02:48.484 --> 00:02:53.019
wouldn't it be nice if you could just
write the markup and not have to mimic it?

37
00:02:53.019 --> 00:02:57.969
That's kind of the general gist here is
we're writing the actual markup instead

38
00:02:57.969 --> 00:03:01.328
of writing the code that's
going to mimic the markup.

39
00:03:03.273 --> 00:03:06.087
&gt;&gt; Brian Holt: So you put in a div, right?

40
00:03:06.087 --> 00:03:09.338
This is just putting out
literally a div text and

41
00:03:09.338 --> 00:03:12.599
this is getting compiled to the ce div,
right?

42
00:03:12.599 --> 00:03:14.738
So there's no real magic happening here.

43
00:03:14.738 --> 00:03:20.472
All this is going to end up being
is pretty much this, right?

44
00:03:20.472 --> 00:03:22.693
That's all it's getting compiled out here.

45
00:03:25.103 --> 00:03:28.373
&gt;&gt; Brian Holt: Now you might ask, but
look, okay, what about these curly braces?

46
00:03:28.373 --> 00:03:31.309
Well, if I don't put
these curly braces in,

47
00:03:31.309 --> 00:03:35.729
it's going to literally output
the string props.title, right?

48
00:03:35.729 --> 00:03:37.759
Literally the string props.title.

49
00:03:37.759 --> 00:03:42.952
And we don't want that, we want it to
put in what is inside of props.title,

50
00:03:42.952 --> 00:03:44.748
what does it represents?

51
00:03:44.748 --> 00:03:49.278
So the way you do that with JSX
is you just put curly braces.

52
00:03:49.278 --> 00:03:53.302
That's just saying, inside of here
is a JavaScript expression, and

53
00:03:53.302 --> 00:03:54.811
I want you to output that.

54
00:03:57.381 --> 00:04:01.278
&gt;&gt; Brian Holt: So
I could put toUpperCase here, right?

55
00:04:01.278 --> 00:04:02.416
And that would work.

56
00:04:02.416 --> 00:04:08.120
So anything that can basically be on the
right side of an equals sign, works here.

57
00:04:12.348 --> 00:04:14.212
&gt;&gt; Brian Holt: Okay, make sense?

58
00:04:15.506 --> 00:04:20.418
&gt;&gt; Brian Holt: So let's go ahead and
bring in the style as well.

59
00:04:20.418 --> 00:04:28.427
So what we do there, is we say, style,
&gt;&gt; Brian Holt: Okay?

60
00:04:28.427 --> 00:04:29.663
So this works the same way.

61
00:04:29.663 --> 00:04:32.460
We're gonna put curly braces here, right?

62
00:04:32.460 --> 00:04:36.884
And that's gonna represent some sort of
expression that's gonna be going on inside

63
00:04:36.884 --> 00:04:37.453
of there.

64
00:04:37.453 --> 00:04:43.242
Now, let's just say const style

65
00:04:43.242 --> 00:04:48.009
= color: props.color.

66
00:04:48.009 --> 00:04:51.433
It's gonna look something like that.

67
00:04:51.433 --> 00:04:57.950
And then we can put style right there,
so this corresponds to that, right?

68
00:05:00.670 --> 00:05:02.025
&gt;&gt; Brian Holt: Good so far?

69
00:05:04.409 --> 00:05:06.983
&gt;&gt; Brian Holt: Now the question you might
ask me is why can't we just put this

70
00:05:06.983 --> 00:05:07.853
straight in there?

71
00:05:07.853 --> 00:05:09.302
Well, you can.

72
00:05:09.302 --> 00:05:14.101
The reason why I show you this first
is cuz people get really weirded out by

73
00:05:14.101 --> 00:05:17.341
seeing curly braces next to each other,
right?

74
00:05:17.341 --> 00:05:21.823
They think that the double curly brace
means something, and it doesn’t, right?

75
00:05:21.823 --> 00:05:24.446
The outer curly brace means
that it’s an expression.

76
00:05:24.446 --> 00:05:29.018
The inner curly braces
means JavaScript object.

77
00:05:29.018 --> 00:05:36.362
So that's why I wanted to show you first
that you can just put style like that.

78
00:05:36.362 --> 00:05:39.134
But I'm gonna leave it as the object
there and get rid of this.

79
00:05:44.272 --> 00:05:47.469
&gt;&gt; Brian Holt: So now,
this return right here, and

80
00:05:47.469 --> 00:05:52.732
this return right here equivalent
to the point that actually

81
00:05:52.732 --> 00:05:58.316
this is getting trans-piled to
pretty much literally be this.

82
00:06:01.209 --> 00:06:03.588
&gt;&gt; Brian Holt: Any questions about JSX so
far?

83
00:06:06.211 --> 00:06:07.611
&gt;&gt; Brian Holt: Makes sense?

84
00:06:09.776 --> 00:06:11.061
&gt;&gt; Brian Holt: Okay?

85
00:06:13.803 --> 00:06:18.110
&gt;&gt; Brian Holt: So this will work as is
you can technically mix JSX with not JSX.

86
00:06:18.110 --> 00:06:21.118
Cant see why you would but
it works, I promise.

87
00:06:22.961 --> 00:06:27.201
&gt;&gt; Brian Holt: We're getting some linting
errors which we will address later,

88
00:06:27.201 --> 00:06:29.368
don't worry about them for now.

89
00:06:31.752 --> 00:06:36.819
&gt;&gt; Brian Holt: Okay, and what we're
gonna do here is change this to be.

90
00:06:39.495 --> 00:06:42.408
&gt;&gt; Brian Holt: So let's do this.

91
00:06:44.631 --> 00:06:50.577
&gt;&gt; Brian Holt: I'm gonna do,
div id="my-first-component".

92
00:06:57.656 --> 00:07:00.699
&gt;&gt; Brian Holt: Something
else that bears mentioning.

93
00:07:00.699 --> 00:07:04.837
So you see how this begins and
ends with a parenthesis.

94
00:07:04.837 --> 00:07:09.071
The reason why we do that is it just
makes it appear a little bit nicer,

95
00:07:09.071 --> 00:07:11.275
it makes the spacing more present.

96
00:07:11.275 --> 00:07:14.443
If you don't put the parenthesis there,

97
00:07:14.443 --> 00:07:19.694
this return thing's it's ended cuz
there's a hard return there and

98
00:07:19.694 --> 00:07:25.418
so it doesn't actually carry on to
the next line to finish the expression.

99
00:07:25.418 --> 00:07:28.955
So you put the parenthesis there to let
JavaScript know, hey, I'm not done yet,

100
00:07:28.955 --> 00:07:30.658
you need to go to the next line, right?

101
00:07:30.658 --> 00:07:32.470
Does that make sense?

102
00:07:32.470 --> 00:07:35.669
But just so you know,
this is just as valid.

103
00:07:41.422 --> 00:07:43.456
&gt;&gt; Brian Holt: Just looks really weird,
right?

104
00:07:45.197 --> 00:07:49.373
&gt;&gt; Brian Holt: In fact, I think if you,
no, Prettier let it stand.

105
00:07:49.373 --> 00:07:52.560
Sometimes Prettier will just fix that for
you.

106
00:07:53.564 --> 00:07:54.456
&gt;&gt; Brian Holt: That's a nice thing.

107
00:07:54.456 --> 00:08:00.915
Prettier is a,
&gt;&gt; Brian Holt: JSX aware.

108
00:08:07.123 --> 00:08:12.356
&gt;&gt; Brian Holt: Yeah, see how we have
to finish working with this, okay?

109
00:08:12.356 --> 00:08:17.424
So we've finished div, and so now we're
going to do these MyTitle components.

110
00:08:23.787 --> 00:08:29.799
&gt;&gt; Brian Holt: Let's see,
"Game of Thrones"

111
00:08:29.799 --> 00:08:34.102
color="YellowGreen

112
00:08:47.597 --> 00:08:48.318
&gt;&gt; Brian Holt: Okay,

113
00:08:48.318 --> 00:08:52.048
and so this one was Stranger Things.

114
00:08:54.751 --> 00:08:57.428
&gt;&gt; Brian Holt: This one
was House of Cards,

115
00:09:00.660 --> 00:09:01.866
&gt;&gt; Brian Holt: And this one was,

116
00:09:01.866 --> 00:09:05.574
I don't know, The Americans or
something like that.

117
00:09:05.574 --> 00:09:10.562
GreenYellow, Peru, and

118
00:09:10.562 --> 00:09:14.876
how about burly wood?

119
00:09:14.876 --> 00:09:15.964
That's another good one.

120
00:09:19.657 --> 00:09:20.609
&gt;&gt; Brian Holt: Okay.

121
00:09:21.690 --> 00:09:26.658
&gt;&gt; Brian Holt: So something else
you're gonna note here is MyTitle,

122
00:09:26.658 --> 00:09:32.282
we can treat it is as if it was
like a real HTML element, right?

123
00:09:32.282 --> 00:09:34.968
Despite the fact that it's
one that we've created.

124
00:09:34.968 --> 00:09:38.809
In React terms it's called
the composite component, right?

125
00:09:38.809 --> 00:09:40.718
It's a component made
up of other components.

126
00:09:42.726 --> 00:09:47.023
&gt;&gt; Brian Holt: And we get to treat it as
if it was a real HTML DOM thing, right?

127
00:09:47.023 --> 00:09:50.264
And we can give it attributes
the same way, right?

128
00:09:50.264 --> 00:09:52.706
This one,
we're giving it an id up here, right?

129
00:09:52.706 --> 00:09:54.739
This one, we're giving it a title here.

130
00:09:56.706 --> 00:10:00.072
&gt;&gt; Brian Holt: Something else you might be
tempted to do is to leave off the trailing

131
00:10:00.072 --> 00:10:02.506
slash because that's
technically valid HTML.

132
00:10:02.506 --> 00:10:04.333
It's not valid JSX.

133
00:10:04.333 --> 00:10:08.153
So you have to have that closing
slash if it's a self-closing tag.

134
00:10:10.531 --> 00:10:13.853
&gt;&gt; Brian Holt: Same things for
input, right?

135
00:10:17.874 --> 00:10:21.240
&gt;&gt; Brian Holt: This is
technically valid HTML, right?

136
00:10:21.240 --> 00:10:25.257
You don't actually have to
have that self closing slash.

137
00:10:25.257 --> 00:10:28.600
For JSX, you must have it,
just so you know.

138
00:10:31.249 --> 00:10:32.689
&gt;&gt; Brian Holt: But
what else is kind of fun about it,

139
00:10:32.689 --> 00:10:34.091
is anything can be self-closing.

140
00:10:34.091 --> 00:10:37.354
So if you need a self-closing div,
you're free to do that.

141
00:10:40.010 --> 00:10:41.868
&gt;&gt; Brian Holt: Any questions?

142
00:10:45.776 --> 00:10:47.636
&gt;&gt; Brian Holt: Yeah.

143
00:10:47.636 --> 00:10:52.698
&gt;&gt; Speaker 2: Doug was just asking if JSX
was used anywhere else other than React

144
00:10:52.698 --> 00:10:57.498
and someone else chimed in that
you can use JSX with Foo or Bue.

145
00:10:57.498 --> 00:11:02.362
&gt;&gt; Brian Holt: Yep, so
it definitely was invented for React.

146
00:11:02.362 --> 00:11:06.217
It was invented by the team of Facebook,
to mimic their XHP,

147
00:11:06.217 --> 00:11:11.140
I think is what it's called, their
internal PHP thing that they were using.

148
00:11:11.140 --> 00:11:13.516
And they invented it to mimic that, and

149
00:11:13.516 --> 00:11:17.410
then it just kinda stuck because
people found it really useful.

150
00:11:17.410 --> 00:11:19.996
JSX has then since been
separated from React.

151
00:11:19.996 --> 00:11:23.619
So JSX and
React are not necessarily together.

152
00:11:23.619 --> 00:11:28.313
JSX is its own separate
standard that React then uses.

153
00:11:28.313 --> 00:11:34.638
And so as has been pointed out, Bue is
one of the places that it's being used.

154
00:11:34.638 --> 00:11:39.123
There's other things like Deco,
Deco, I don't know how you say it.

155
00:11:39.123 --> 00:11:43.929
That one uses it as well,
Preact uses it, like there is a bunch of

156
00:11:43.929 --> 00:11:48.836
different languages, it's available for
any language to use.

157
00:11:48.836 --> 00:11:53.276
&gt;&gt; Speaker 3: Why don't you need
this onCreate element on this one?

158
00:11:53.276 --> 00:11:55.441
&gt;&gt; Brian Holt: So why don't you
need any react.create element,

159
00:11:55.441 --> 00:11:57.467
that's what it's getting trans-pilled to.

160
00:11:57.467 --> 00:12:02.635
So this h1,
when it actually gets through being

161
00:12:02.635 --> 00:12:07.425
run through Babble will
actually end up being

162
00:12:07.425 --> 00:12:14.119
React.createElement('h1', null,
props.title).

163
00:12:15.721 --> 00:12:21.007
&gt;&gt; Brian Holt: So this is pre Babble,
this is post Babble, that make sense?

164
00:12:21.007 --> 00:12:23.966
&gt;&gt; Speaker 2: Well,
I guess the attribute in that case.

165
00:12:23.966 --> 00:12:26.338
&gt;&gt; Brian Holt: Yeah, it'd be yeah.

166
00:12:26.338 --> 00:12:27.383
It would be this.

167
00:12:32.101 --> 00:12:33.315
&gt;&gt; Brian Holt: Well, style, right?

168
00:12:33.315 --> 00:12:34.317
Whatever.

169
00:12:34.317 --> 00:12:36.086
So yes,
there would be a style object in there.

170
00:12:38.090 --> 00:12:41.282
&gt;&gt; Brian Holt: So
we are getting some linting errors.

171
00:12:41.282 --> 00:12:43.526
It's asking for prop types.

172
00:12:43.526 --> 00:12:48.691
And to that I say,
let's tackle that a little bit later.

173
00:12:50.665 --> 00:12:52.669
&gt;&gt; Brian Holt: For
now I'd like to move on, and

174
00:12:52.669 --> 00:12:56.316
then we'll come back to tackle
the prop types conundrum.

175
00:12:56.316 --> 00:13:00.125
So where I say create element
down here with MyFirstComponent.

176
00:13:00.125 --> 00:13:04.428
You can say, my-first-component like that.

177
00:13:06.923 --> 00:13:09.767
&gt;&gt; Speaker 2: And
remove the ce definition at the top?

178
00:13:09.767 --> 00:13:13.350
&gt;&gt; Brian Holt: Yes,
cuz now it gonna be erroring up there.

179
00:13:16.587 --> 00:13:20.026
&gt;&gt; Speaker 4: We remove
the React import as well?

180
00:13:20.026 --> 00:13:21.850
&gt;&gt; Brian Holt: That's a good question.

181
00:13:21.850 --> 00:13:26.340
The answer to that question is anywhere
you're using JSX, you have to import

182
00:13:26.340 --> 00:13:30.151
the React library because what
is this getting trans-piled to?

183
00:13:30.151 --> 00:13:33.501
It's getting trans-piled to
React.createElement, right?

184
00:13:33.501 --> 00:13:38.679
So it is being used despite the fact
that you are not directly using it.

185
00:13:38.679 --> 00:13:45.590
Luckily you're linter, so if I remove
this, it's gonna error out right here.

186
00:13:45.590 --> 00:13:50.888
And it says right here React
must be in scope when using JSX.

187
00:13:57.326 --> 00:13:58.558
&gt;&gt; Brian Holt: Good question.

188
00:14:00.473 --> 00:14:04.268
&gt;&gt; Brian Holt: So
a thing worth pointing out.

189
00:14:04.268 --> 00:14:08.932
This is only going to be true for
a little bit longer, but

190
00:14:08.932 --> 00:14:13.725
it is true now nonetheless,
&gt;&gt; Brian Holt: We'll

191
00:14:13.725 --> 00:14:17.478
just do &lt;h2&gt;doesn't work.

192
00:14:20.874 --> 00:14:22.177
&gt;&gt; Brian Holt: So this doesn't work.

193
00:14:22.177 --> 00:14:25.298
We can't have two top level returns,
right?

194
00:14:25.298 --> 00:14:30.971
There needs to be one top level element
for every single React component.

195
00:14:30.971 --> 00:14:32.597
Now why is that?

196
00:14:32.597 --> 00:14:39.210
Well, if you think about what
this is being trans-piled to,

197
00:14:39.210 --> 00:14:45.452
it would be, MyTitle =ce(div),
ce(h2), right?

198
00:14:45.452 --> 00:14:48.635
That doesn't make any sense in JavaScript,
right?

199
00:14:48.635 --> 00:14:54.828
You can't have that be assigned to two
things at once, so this doesn't work.

200
00:14:54.828 --> 00:14:58.075
However, With React 16,

201
00:14:58.075 --> 00:15:04.038
which we are on 15.5 right now,
this will work.

202
00:15:04.038 --> 00:15:08.634
We will be able to return
an array of top level components.

203
00:15:08.634 --> 00:15:11.482
And that will work with
what's called React Fiber,

204
00:15:11.482 --> 00:15:14.144
which is the new architecture for
React coming.

205
00:15:14.144 --> 00:15:16.723
It's kind of outside the scope of
what we want to talk about today.

206
00:15:16.723 --> 00:15:20.229
But suffice to say, it is coming.

207
00:15:20.229 --> 00:15:23.848
And I really don't see it affecting
too much the way I write code anyway.

208
00:15:23.848 --> 00:15:25.835
But eventually it will be possible.

209
00:15:31.479 --> 00:15:35.584
&gt;&gt; Brian Holt: Cool, so what will happen
typically if you have something like this,

210
00:15:35.584 --> 00:15:39.134
where you have two things that
you wanna return as top level,

211
00:15:39.134 --> 00:15:41.795
you'll just wrap them both in a div,
right?

212
00:15:41.795 --> 00:15:45.131
You'll see a lot of wrapping divs for
that reason.

213
00:15:45.131 --> 00:15:47.283
Does that make sense?

214
00:15:47.283 --> 00:15:54.055
Do div,
&gt;&gt; Brian Holt: Right,

215
00:15:54.055 --> 00:15:56.090
that's typically the way
you would handle that.

216
00:16:01.922 --> 00:16:06.114
&gt;&gt; Brian Holt: So that kind of
concludes what we wanted to talk about

217
00:16:06.114 --> 00:16:10.402
today with kind of our intro
to React like bear bones,

218
00:16:10.402 --> 00:16:14.810
like actually just messing
around with React itself.

219
00:16:14.810 --> 00:16:18.985
And now we're actually going to start
building an app together which we will

220
00:16:18.985 --> 00:16:23.108
build for the rest of two and a half
days that we have left together, right?

