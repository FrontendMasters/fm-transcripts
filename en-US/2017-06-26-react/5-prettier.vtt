WEBVTT

1
00:00:00.570 --> 00:00:02.020
&gt;&gt; Speaker 1: So first thing,
let's just go ahead and

2
00:00:02.020 --> 00:00:05.860
get this out of just
being in a script tag.

3
00:00:05.860 --> 00:00:07.651
So I'm just gonna cut this.

4
00:00:12.771 --> 00:00:13.940
&gt;&gt; Speaker 1: I'm gonna create a new file.

5
00:00:15.420 --> 00:00:20.000
And I'm actually gonna create
a new directory, as well.

6
00:00:21.800 --> 00:00:24.972
New folder, I'm just gonna call it js.

7
00:00:27.325 --> 00:00:31.145
&gt;&gt; Speaker 1: And inside of js,
I'm gonna create a new file.

8
00:00:32.619 --> 00:00:34.695
&gt;&gt; Speaker 1: And I am going to call this.

9
00:00:38.092 --> 00:00:44.983
&gt;&gt; Speaker 1: Let's call it
&gt;&gt; Speaker 1: ClientApp.jsx.

10
00:00:52.430 --> 00:00:54.397
&gt;&gt; Speaker 1: And
we're just gonna put all of that in there.

11
00:01:00.433 --> 00:01:01.230
&gt;&gt; Speaker 1: Save that.

12
00:01:01.230 --> 00:01:03.994
And now we're going to get to
start talking about some tools for

13
00:01:03.994 --> 00:01:06.462
just a moment,
before we go back to writing more React.

14
00:01:06.462 --> 00:01:10.618
So the first tool that I wanna talk about,
which I am just incredibly excited about,

15
00:01:10.618 --> 00:01:14.550
to the point that I've contributed
a couple times, is a tool called Prettier.

16
00:01:16.220 --> 00:01:20.750
So I've written a little bit
of Go just here and there.

17
00:01:20.750 --> 00:01:25.040
And one of my favorite
favorite parts about writing

18
00:01:25.040 --> 00:01:27.270
Go is a tool called Go Format.

19
00:01:27.270 --> 00:01:28.990
Which is just amazing.

20
00:01:28.990 --> 00:01:33.875
That it's amazing because the Go
community has standardized on this tool

21
00:01:33.875 --> 00:01:36.085
that just automatically
formats their code for them.

22
00:01:36.085 --> 00:01:37.185
They don't have to do anything.

23
00:01:37.185 --> 00:01:38.285
It just always looks the same.

24
00:01:38.285 --> 00:01:39.915
And there's just never any question.

25
00:01:39.915 --> 00:01:42.535
Just everyone always uses Go Format.

26
00:01:42.535 --> 00:01:45.195
And there's no bike shedding
about how many tabs or

27
00:01:45.195 --> 00:01:49.320
spaces or semicolons or no semicolons.

28
00:01:49.320 --> 00:01:52.377
Or spaces between function and
the parenthesis,

29
00:01:52.377 --> 00:01:55.152
all of this stuff just
is never talked about.

30
00:01:55.152 --> 00:01:57.881
Because this tool just already
takes care of it for them and

31
00:01:57.881 --> 00:01:59.560
there's no room to argue about it.

32
00:02:00.630 --> 00:02:02.560
Now for
anyone that's been writing JavaScript for

33
00:02:02.560 --> 00:02:05.820
any length of time, there's lots
of room to talk about it, right?

34
00:02:05.820 --> 00:02:09.300
How many of us have had just this
week a conversation like that?

35
00:02:09.300 --> 00:02:11.280
Pretty much most of us, right?

36
00:02:12.400 --> 00:02:15.080
So enter Prettier.

37
00:02:15.080 --> 00:02:19.585
Prettier is kind of aiming to be this
Go Format tools that it does all of this

38
00:02:19.585 --> 00:02:21.265
formatting stuff for you.

39
00:02:21.265 --> 00:02:26.234
And this actually scares a lot of people
like, when I introduce it to the Netflix

40
00:02:26.234 --> 00:02:29.737
there was some fear and
uncertainty and doubt, right?

41
00:02:29.737 --> 00:02:32.307
Because people have their patterns
that they're accustomed to and

42
00:02:32.307 --> 00:02:33.260
that they like, right?

43
00:02:34.465 --> 00:02:37.310
However, the way that I like
to propose it to people is,

44
00:02:37.310 --> 00:02:40.900
imagine that when you're writing code
you always have this background thread

45
00:02:40.900 --> 00:02:43.310
in your brain of how am I
gonna make this more readable?

46
00:02:43.310 --> 00:02:45.000
How am I gonna format this right?

47
00:02:45.000 --> 00:02:46.864
Is all the spacing correct?

48
00:02:46.864 --> 00:02:48.776
Do I have the right commas
in the right places?

49
00:02:48.776 --> 00:02:50.492
Should I be writing semi colons,
should I not write it?

50
00:02:50.492 --> 00:02:53.220
All these decisions are just
constantly going on in the background.

51
00:02:53.220 --> 00:02:56.608
Imagine if you could just
shut down that thread, right?

52
00:02:56.608 --> 00:02:59.890
And that you just free up more resources
to be thinking about anything else.

53
00:03:01.150 --> 00:03:02.990
This is even a great example right here.

54
00:03:02.990 --> 00:03:05.730
So, here I pasted this code, right?

55
00:03:05.730 --> 00:03:08.040
And the indentations off, right?

56
00:03:08.040 --> 00:03:12.449
Because the first one's correct but there
is extra tabs coming in from the HTML.

57
00:03:14.350 --> 00:03:17.890
And furthermore there's now mixed tabs and
spaces too, which is kind of a problem.

58
00:03:19.150 --> 00:03:20.610
So I had to actually go in and fix this.

59
00:03:20.610 --> 00:03:23.260
I pasted it and the first thing
I instantly did is I went and

60
00:03:23.260 --> 00:03:25.980
said okay, I'm gonna fix this and
get all of it right.

61
00:03:25.980 --> 00:03:27.390
Prettier can just fix this for

62
00:03:27.390 --> 00:03:30.150
you automatically on
the fly every single time.

63
00:03:31.810 --> 00:03:34.170
So you can paste code, and
not have to worry about,

64
00:03:34.170 --> 00:03:37.442
well should I break line here,
should I break at 180, should I break 120?

65
00:03:37.442 --> 00:03:43.510
All these different things Prettier
is just gonna do it for you.

66
00:03:43.510 --> 00:03:46.440
So, I invite you to tool around with it.

67
00:03:46.440 --> 00:03:48.850
They actually did us quite a few
that we can choose, right?

68
00:03:48.850 --> 00:03:52.508
We can tell it to wrap it 80 characters,
we can tell it to wrap it 120,

69
00:03:52.508 --> 00:03:56.229
we can tell it to use semicolons,
we can tell it not to tabs, spaces, etc.

70
00:03:56.229 --> 00:03:57.471
I kinda wish that they hadn't.

71
00:03:57.471 --> 00:04:01.680
I kinda wish that they had just said, this
is the way it is, and just deal with it.

72
00:04:01.680 --> 00:04:04.370
But I'm just happy it exist.

73
00:04:04.370 --> 00:04:07.570
So let's go with that.

74
00:04:07.570 --> 00:04:14.711
So what I want you to do now,
is I want you to go to your command line,

75
00:04:14.711 --> 00:04:19.571
and I want you to do
yarn global add prettier.

76
00:04:25.345 --> 00:04:27.101
&gt;&gt; Speaker 1: I think mine
should already be up to date.

77
00:04:31.265 --> 00:04:32.453
&gt;&gt; Speaker 1: 1.31.

78
00:04:36.293 --> 00:04:37.118
&gt;&gt; Speaker 1: Yep.

79
00:04:40.351 --> 00:04:43.970
&gt;&gt; Speaker 1: So, this is going
to give us the ability to do it.

80
00:04:43.970 --> 00:04:48.430
So, if I go into, I'm in node modules, so

81
00:04:48.430 --> 00:04:53.130
if I go into js, I saved this, right?

82
00:04:53.130 --> 00:04:57.310
So notice that the, in fact,
let's just really mess it up.

83
00:04:57.310 --> 00:05:00.230
So now everything is really unformatted,
right?

84
00:05:00.230 --> 00:05:02.590
This is just a mess but
still valid JavaScript, right?

85
00:05:02.590 --> 00:05:07.688
This would totally would
work in a browser.

86
00:05:07.688 --> 00:05:09.311
Now if I say prettier.

87
00:05:12.196 --> 00:05:15.865
&gt;&gt; Speaker 1: And what we're gonna do
here is we're gonna say --single quote.

88
00:05:15.865 --> 00:05:20.884
So we're gonna give it some
parameters to tell how we want it to

89
00:05:20.884 --> 00:05:25.721
be formatted,
we're gonna do --print-width=20.

90
00:05:25.721 --> 00:05:29.054
It defaults still 80,
which is to small for my opinion,

91
00:05:29.054 --> 00:05:31.649
I'm not coding on an old
school terminal so.

92
00:05:35.230 --> 00:05:41.390
And then we're just gonna
learn on ClientApp.jsx, okay.

93
00:05:42.850 --> 00:05:45.294
So if I just hit Enter right now
is not actually gonna write it,

94
00:05:45.294 --> 00:05:47.363
its just going to show me
what it's gonna look like.

95
00:05:50.957 --> 00:05:53.050
&gt;&gt; Speaker 1: So
this is what it actually printed out.

96
00:05:56.379 --> 00:05:57.080
&gt;&gt; Speaker 1: When I ran that.

97
00:05:58.230 --> 00:06:00.190
But notice nothing's changed here yet.

98
00:06:00.190 --> 00:06:01.325
Right, it's still broken.

99
00:06:03.766 --> 00:06:06.742
&gt;&gt; Speaker 1: So
now if I come in here and say

100
00:06:06.742 --> 00:06:13.912
--write,
&gt;&gt; Speaker 1: It's

101
00:06:13.912 --> 00:06:17.540
gonna tell me which one it
wrote in 56 milliseconds, and

102
00:06:17.540 --> 00:06:21.107
notice I come back here,
everything is well formatted.

103
00:06:24.047 --> 00:06:26.199
&gt;&gt; Speaker 1: And
also notice for a example that,

104
00:06:26.199 --> 00:06:30.452
I was not writing semicolons before and
it just did it automatically.

105
00:06:34.277 --> 00:06:38.897
&gt;&gt; Speaker 2: People are asking why
you put jsx instead of js as the file

106
00:06:38.897 --> 00:06:40.390
extension name.

107
00:06:40.390 --> 00:06:44.390
&gt;&gt; Speaker 1: So right now I'm putting
jsx, because momentarily we wanna

108
00:06:44.390 --> 00:06:49.410
be introducing Babel, which is going
to make it possible for us to use jsx.

109
00:06:49.410 --> 00:06:54.908
So you can put .js for now, but you're
gonna have to rename it in ten minutes.

110
00:06:54.908 --> 00:06:58.010
So I would just recommend
keeping it as jsx.

111
00:06:59.240 --> 00:07:02.126
And the reason why I do that,
the real reason,

112
00:07:02.126 --> 00:07:04.796
our linting rules are going to require it.

113
00:07:04.796 --> 00:07:09.760
But the secondary reason they chose
that is they require that anything that

114
00:07:09.760 --> 00:07:12.533
will use jsx that needs to be transpiled.

115
00:07:12.533 --> 00:07:14.872
Must have a jsx extension,

116
00:07:14.872 --> 00:07:20.273
just to kind of denote that this
is something to be transpiled.

117
00:07:22.715 --> 00:07:28.520
&gt;&gt; Speaker 2: Sorry, so after you ran the
prettier on jsx, what else did you use?

118
00:07:28.520 --> 00:07:30.985
&gt;&gt; Speaker 1: You have
to just put --write.

119
00:07:32.870 --> 00:07:35.519
&gt;&gt; Speaker 1: Otherwise it just displays
it and it doesn't actually write it.

120
00:07:38.727 --> 00:07:39.882
&gt;&gt; Speaker 1: So
again if I write it again,

121
00:07:39.882 --> 00:07:43.070
it's gonna show it as grey because it
didn't actually change anything, so.

122
00:07:44.590 --> 00:07:46.840
&gt;&gt; Speaker 2: Can that be added
automatically to sublime so

123
00:07:46.840 --> 00:07:48.530
it saves it running pretty?

124
00:07:48.530 --> 00:07:49.740
&gt;&gt; Speaker 1: Yep, we're gonna do that.

125
00:07:52.960 --> 00:07:57.300
So exactly this is kind
of burdensome to do.

126
00:07:57.300 --> 00:08:02.570
So if you go to the class website here,

127
00:08:02.570 --> 00:08:06.868
editor integration, right?

128
00:08:06.868 --> 00:08:11.615
So right now, prettier doesn't have
a good way of doing project level

129
00:08:11.615 --> 00:08:14.120
configs which is annoying, right?

130
00:08:14.120 --> 00:08:15.040
They're working on it.

131
00:08:15.040 --> 00:08:16.660
It's something is gonna get done.

132
00:08:16.660 --> 00:08:19.123
But, for now you have to configure it for

133
00:08:19.123 --> 00:08:22.904
every individual developer that
is writing on your project.

134
00:08:25.222 --> 00:08:27.070
&gt;&gt; Speaker 1: That's one
limitation if you don't mind.

135
00:08:27.070 --> 00:08:30.190
So anyways, come here to and go here.

136
00:08:30.190 --> 00:08:32.440
Which is gonna take you
to the Prettier repo and

137
00:08:32.440 --> 00:08:36.060
it's going to take you down to
the various editor integrations.

138
00:08:37.150 --> 00:08:42.150
So it's possible to do with Atom,
Emacs, Vim, then have it for

139
00:08:43.310 --> 00:08:47.550
Visual Studio Code, Visual Studio,
Sublime and Web Storm.

140
00:08:47.550 --> 00:08:52.236
If you're not using one of those,
&gt;&gt; Speaker 1: Good luck.

141
00:08:52.236 --> 00:08:54.890
[LAUGH] No, I'm sure it's possible.

142
00:08:55.910 --> 00:08:58.290
These are just the ones
that they have notes for.

143
00:08:58.290 --> 00:09:00.051
So I will show you how to it with Sublime.

144
00:09:02.080 --> 00:09:05.929
&gt;&gt; Speaker 1: You're gonna come in and
say install package.

145
00:09:05.929 --> 00:09:07.839
And I already have it installed so
it's not gonna show up, but

146
00:09:07.839 --> 00:09:08.699
it's called jsprettier.

147
00:09:10.510 --> 00:09:13.290
All one word, install that.

148
00:09:13.290 --> 00:09:18.340
And then what you're gonna do is
you going to come into sublime.

149
00:09:18.340 --> 00:09:24.280
So I am bringing up this
menu by hitting Shift+Cmd+P,

150
00:09:24.280 --> 00:09:28.460
then open up js pretty or user, settings.

151
00:09:30.990 --> 00:09:32.910
So, for me, I'm using MVM, so

152
00:09:32.910 --> 00:09:37.670
I had to define where Prettier was,
which is easy to do.

153
00:09:37.670 --> 00:09:40.376
You just come in here and
say which prettier, and

154
00:09:40.376 --> 00:09:42.099
that's gonna give you a path.

155
00:09:42.099 --> 00:09:43.520
So, just copy and paste that.

156
00:09:46.370 --> 00:09:49.757
Node path, again I had to say again,
which node.

157
00:09:53.339 --> 00:09:54.380
&gt;&gt; Speaker 1: Copy and paste that.

158
00:09:56.430 --> 00:09:58.370
And then this is the one
that you might wanna change,

159
00:09:58.370 --> 00:10:01.820
which is auto_format_on_save.

160
00:10:01.820 --> 00:10:04.049
Stick that to be true.

161
00:10:04.049 --> 00:10:07.520
And then here are the Prettier
options that you want to use.

162
00:10:07.520 --> 00:10:08.740
You're welcome to change any of these.

163
00:10:08.740 --> 00:10:13.815
The only one that I ask you that you
use is you need to use the parser flow,

164
00:10:13.815 --> 00:10:16.960
since we'll be using
flow later in the day.

165
00:10:16.960 --> 00:10:20.910
It will be useful for you to use the flow
parser instead of the Babylon parser.

166
00:10:22.130 --> 00:10:24.500
&gt;&gt; Speaker 2: Sorry,
how did you get to that file in Sublime?

167
00:10:24.500 --> 00:10:25.460
I'm also using it.

168
00:10:25.460 --> 00:10:29.417
&gt;&gt; Speaker 1: So, shift command P,
then js prettier,

169
00:10:29.417 --> 00:10:33.156
then go to the prettier settings user.

170
00:10:35.831 --> 00:10:37.035
&gt;&gt; Speaker 1: If you want
to see all of the ones,

171
00:10:37.035 --> 00:10:38.240
you can look at the default ones.

172
00:10:38.240 --> 00:10:40.635
It will show you all of
the things that you can change.

173
00:10:46.379 --> 00:10:50.660
&gt;&gt; Speaker 1: But the key is, here,
you wanna do auto_format_on_save, right?

174
00:10:50.660 --> 00:10:53.660
This will make things a ton easier.

175
00:10:53.660 --> 00:10:58.191
So for example, if I do this and mess it
up again, all I have to do is click Save,

176
00:10:58.191 --> 00:11:01.177
and everything just fixes
itself automatically.

177
00:11:05.989 --> 00:11:10.200
&gt;&gt; Speaker 1: And you can get again,
really wildly out of touch here.

178
00:11:11.640 --> 00:11:15.720
Make things that are technically
valid JavaScript, but

179
00:11:15.720 --> 00:11:18.102
it'll just fix all of it for you.

180
00:11:20.245 --> 00:11:21.760
&gt;&gt; Speaker 1: It will do some respecting.

181
00:11:21.760 --> 00:11:25.940
So for example here,
I put an extra line break here.

182
00:11:25.940 --> 00:11:27.446
It will respect things like that.

183
00:11:29.439 --> 00:11:31.760
&gt;&gt; Speaker 1: It'll respect that I want
to keep these on two separate lines.

184
00:11:31.760 --> 00:11:34.226
It'll also respect that I wanna try and
keep these on one line.

185
00:11:38.700 --> 00:11:42.934
&gt;&gt; Speaker 1: So some of those
things that'll keep or maybe not.

186
00:11:48.658 --> 00:11:49.479
&gt;&gt; Speaker 1: Here we go.

187
00:11:51.840 --> 00:11:54.847
&gt;&gt; Speaker 1: The last thing I
wanna do is I wanna make it so

188
00:11:54.847 --> 00:11:59.690
people can do actually the entire
project from the command line.

189
00:11:59.690 --> 00:12:07.052
So going back to this we're gonna say,

190
00:12:07.052 --> 00:12:12.406
top, prettier --write,

191
00:12:12.406 --> 00:12:22.015
--single-quote --print-width=120.

192
00:12:22.015 --> 00:12:31.054
And then --parser=flow.

193
00:12:31.054 --> 00:12:33.090
What other settings did we have in here?

194
00:12:35.989 --> 00:12:39.653
&gt;&gt; Speaker 1: I think most of these
are just, these are all the default ones.

195
00:12:41.807 --> 00:12:44.106
&gt;&gt; Speaker 1: Tab width equals 2.

196
00:12:44.106 --> 00:12:49.380
--tab.width=2.

197
00:12:49.380 --> 00:12:52.950
So this is what I'm saying,
there's no config file.

198
00:12:52.950 --> 00:12:54.979
You actually have to do it every
single time in the command line.

199
00:12:56.040 --> 00:13:00.170
And then, we wanted to make sure
that it hits every js file and

200
00:13:00.170 --> 00:13:01.950
every jsx file, right?

201
00:13:01.950 --> 00:13:05.040
Cuz we wanna always format
those two different things.

202
00:13:05.040 --> 00:13:12.067
So what we're gonna do here is \",
&gt;&gt; Speaker 1: js,

203
00:13:14.893 --> 00:13:20.236
&gt;&gt; Speaker 1: ** /*.js

204
00:13:20.236 --> 00:13:28.249
I want to do js,jsx\

205
00:13:33.261 --> 00:13:34.192
&gt;&gt; Speaker 1: Does that look right,

206
00:13:34.192 --> 00:13:34.928
let's try that.

207
00:13:37.455 --> 00:13:38.600
&gt;&gt; Speaker 1: Yep, I didn't think so.

208
00:13:40.740 --> 00:13:43.460
Yeah, I don't need the back
slashes I can just put the quotes.

209
00:13:43.460 --> 00:13:44.186
That's what it is.

210
00:13:44.186 --> 00:13:49.971
Okay so,
&gt;&gt; Speaker 1: [COUGH] What this is going

211
00:13:49.971 --> 00:13:54.546
to do is it's going to hit everything in
your JS directory that has a JS or a JSX.

212
00:13:57.210 --> 00:13:59.757
&gt;&gt; Speaker 1: Kind of file extension.

213
00:14:01.574 --> 00:14:03.007
&gt;&gt; Speaker 1: So
this would be useful for example,

214
00:14:03.007 --> 00:14:06.070
if somebody didn't want to install
prettier and was working on your project.

215
00:14:06.070 --> 00:14:09.410
Or you could put it as maybe
some sort of pre commit hook.

216
00:14:09.410 --> 00:14:11.906
You could put it into your
continuous integration.

217
00:14:11.906 --> 00:14:14.430
So anything you're gonna
require your users to do.

218
00:14:14.430 --> 00:14:17.530
It's probably good to have kind of an
escape hatch if they don't want to install

219
00:14:17.530 --> 00:14:19.690
all of your tooling for
them inside of the editor.

220
00:14:19.690 --> 00:14:24.125
So what we are gonna do is we are actually
going to, this is a paint remember right,

221
00:14:24.125 --> 00:14:25.595
slash impossible to remember.

222
00:14:25.595 --> 00:14:27.918
[LAUGH] I have to lookup
my notes here to get it.

223
00:14:27.918 --> 00:14:32.641
So we're going to put this
inside of our project directory,

224
00:14:32.641 --> 00:14:35.798
so are gonna go into the package.json.

225
00:14:35.798 --> 00:14:38.951
And here I have scripts, and you can see
that there's already one here for the api,

226
00:14:38.951 --> 00:14:39.910
which we'll run later.

227
00:14:39.910 --> 00:14:40.997
Don't worry about it for now.

228
00:14:40.997 --> 00:14:44.586
[SOUND] We're gonna put another
one here that says format.

229
00:14:45.963 --> 00:14:51.056
&gt;&gt; Speaker 1: And we're just going to
put that thing that we just already had.

230
00:14:54.358 --> 00:14:56.973
&gt;&gt; Speaker 1: But you're gonna
have to escape those backslashes.

231
00:15:03.594 --> 00:15:06.613
&gt;&gt; Speaker 1: Let's do view ward wrap.

232
00:15:10.776 --> 00:15:13.860
&gt;&gt; Speaker 1: So now, I'll let you finish.

233
00:15:13.860 --> 00:15:16.420
Well, let me show you and then I'll
come back and I'll let you finish it and

234
00:15:16.420 --> 00:15:17.950
then we'll take a quick break after that.

235
00:15:20.800 --> 00:15:23.570
I can come to the command line and
I can say,

236
00:15:23.570 --> 00:15:28.580
yarn, so, we're gonna use yarn for this.

237
00:15:28.580 --> 00:15:30.369
And then all I have to say is yarn format.

238
00:15:32.410 --> 00:15:34.210
And it's gonna go through and
run that command, right?

239
00:15:34.210 --> 00:15:38.520
So, I can save that bach command in
to the package.json and then run it.

240
00:15:38.520 --> 00:15:43.260
This is the same thing as saying
npm run format, same dev.

241
00:15:45.436 --> 00:15:46.610
&gt;&gt; Speaker 1: But this is nice now,

242
00:15:46.610 --> 00:15:50.870
because I've kind of preemptively saved
this, so that we can always use it.

243
00:15:52.690 --> 00:15:53.505
That makes sense?

244
00:15:55.967 --> 00:15:57.138
&gt;&gt; Speaker 1: Cool.

245
00:15:59.449 --> 00:16:01.808
&gt;&gt; Speaker 1: And what's nice is we don't
have to go and tell it every single file,

246
00:16:01.808 --> 00:16:04.060
it's always just gonna pick up
everything in that js directory.

247
00:16:08.746 --> 00:16:11.596
Now to be honest, for the rest of
the day we're not gonna use this because

248
00:16:11.596 --> 00:16:16.076
our editor's already configured for
it so, that's nice.

