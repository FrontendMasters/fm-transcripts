WEBVTT

1
00:00:00.000 --> 00:00:01.650
&gt;&gt; Brian Holt: If you're writing React,

2
00:00:01.650 --> 00:00:04.680
there's some code smells that you
definitely want to pay attention to.

3
00:00:04.680 --> 00:00:08.800
One particular thing that you might notice
that's a little bit smelly is we have this

4
00:00:08.800 --> 00:00:11.018
header that lives on several pages, right?

5
00:00:11.018 --> 00:00:13.007
So we have this header here.

6
00:00:13.007 --> 00:00:18.814
And then if you go back to Search, we
have a really similar header here, right?

7
00:00:18.814 --> 00:00:20.640
It's not exactly the same
cuz the input's here.

8
00:00:22.200 --> 00:00:23.130
Similar enough though.

9
00:00:24.410 --> 00:00:27.710
So this is where your brain should be
thinking, hey, I have two concerns on this

10
00:00:27.710 --> 00:00:32.440
page or I have a header concern and
then I have a details route concern.

11
00:00:32.440 --> 00:00:37.770
So what I should be doing here is I should
be extracting this out so that I can have

12
00:00:37.770 --> 00:00:43.950
a reusable header component that I
can just drop into multiple pages.

13
00:00:43.950 --> 00:00:45.144
Go give that a shot.

14
00:00:47.740 --> 00:00:50.715
&gt;&gt; Brian Holt: So
make a file called header.jsx.

15
00:00:52.713 --> 00:00:57.912
&gt;&gt; Brian Holt: We're gonna
import React from 'react'.

16
00:00:57.912 --> 00:01:02.845
Import, we'll do that in just a sec.

17
00:01:02.845 --> 00:01:06.875
And we're gonna say,

18
00:01:06.875 --> 00:01:14.089
const Header = () =&gt; &lt;header&gt; and

19
00:01:14.089 --> 00:01:21.729
with an &lt;h1&gt;&lt;/h1&gt;&lt;/header&gt;,

20
00:01:21.729 --> 00:01:27.467
which is going to be the svideo.

21
00:01:27.467 --> 00:01:30.970
And then we're gonna
export default Header.

22
00:01:33.210 --> 00:01:35.598
&gt;&gt; Speaker 2: Wouldn't you
also want to put it in Flow?

23
00:01:35.598 --> 00:01:36.869
&gt;&gt; Brian Holt: Good call.

24
00:01:41.426 --> 00:01:43.020
&gt;&gt; Brian Holt: Something I
often forget to do.

25
00:01:44.520 --> 00:01:45.600
In fact, when I was writing this code,

26
00:01:45.600 --> 00:01:49.850
I forgot to opt part of the course into
flow and I ended up having to rewrite,

27
00:01:49.850 --> 00:01:55.470
I don't know, 10% of the course cuz
I just forgot to opt it into flow.

28
00:01:55.470 --> 00:01:58.153
So it is something that I often forget.

29
00:02:01.496 --> 00:02:06.001
&gt;&gt; Brian Holt: Okay, so
I go back to details real quick.

30
00:02:06.001 --> 00:02:08.030
And now we have this
nice header component.

31
00:02:09.140 --> 00:02:17.430
So we can import header from ./header.

32
00:02:17.430 --> 00:02:21.257
And then we can just replace
this with header like that.

33
00:02:23.396 --> 00:02:25.240
&gt;&gt; Brian Holt: Something I
haven't mentioned yet,

34
00:02:25.240 --> 00:02:29.110
notice that I'm always calling my personal
components with a capital letter.

35
00:02:30.310 --> 00:02:35.950
Not only is that convention, it's actually
required and enforced by React now.

36
00:02:35.950 --> 00:02:40.460
If you put it as a div like this or
x something,

37
00:02:40.460 --> 00:02:44.560
right, it's going to literally output
an x something tag to the dom.

38
00:02:44.560 --> 00:02:49.350
So it's assuming it's lower case, you
want that literally to be the tag name.

39
00:02:49.350 --> 00:02:52.640
And if it's upper case,
then it's a composite component or

40
00:02:52.640 --> 00:02:54.340
something that you've created, right?

41
00:02:55.640 --> 00:02:58.910
The one exception is, say I was passing
in like a monogenous component from

42
00:02:58.910 --> 00:03:08.720
the parent and was like
this.props.passedInComponent like that.

43
00:03:08.720 --> 00:03:10.960
Obviously you can't have
dot in an HTML tag.

44
00:03:10.960 --> 00:03:15.210
So it knows okay, this is actually
gonna be an anonymous component.

45
00:03:15.210 --> 00:03:17.174
That's the one exception to that rule.

46
00:03:19.228 --> 00:03:20.560
&gt;&gt; Brian Holt: Anyway, make that a header.

47
00:03:22.810 --> 00:03:27.090
So now if we come back in here,
refresh, our header is still there.

48
00:03:28.820 --> 00:03:32.428
That was nice that having
this shared component, so

49
00:03:32.428 --> 00:03:35.058
want to make an improvement, right?

50
00:03:35.058 --> 00:03:37.990
Right now if you click the header,
nothing happens.

51
00:03:37.990 --> 00:03:40.830
Typically when you click the logo, people
expect you to go back to the home page,

52
00:03:40.830 --> 00:03:43.950
that's generally accepted UI pattern.

53
00:03:43.950 --> 00:03:45.700
So let's make that work.

54
00:03:45.700 --> 00:03:53.316
So here we're gonna import a link from
&gt;&gt; Brian Holt: React router dom.

55
00:03:57.352 --> 00:04:00.333
&gt;&gt; Brian Holt: And
then what we're gonna do here is,

56
00:04:02.304 --> 00:04:06.491
&gt;&gt; Brian Holt: inside of the h1,

57
00:04:06.491 --> 00:04:11.725
gonna make this a link,

58
00:04:11.725 --> 00:04:17.743
which is going to go to / and

59
00:04:17.743 --> 00:04:21.157
then close that

60
00:04:29.692 --> 00:04:31.140
&gt;&gt; Brian Holt: What did I do here?

61
00:04:31.140 --> 00:04:32.810
I'm out of order.

62
00:04:32.810 --> 00:04:36.517
Link goes inside, there we go.

63
00:04:40.785 --> 00:04:44.120
&gt;&gt; Brian Holt: So now if I save that,
Refresh over here.

64
00:04:45.690 --> 00:04:48.530
Now, I click on the header and
it'll take me back to landing.

65
00:04:50.780 --> 00:04:54.060
So again, that's one of the big advantages
of extracting components out and

66
00:04:54.060 --> 00:04:57.350
reusing them, is you can upgrade one
thing and it upgraded across the site.

