WEBVTT

1
00:00:00.300 --> 00:00:02.640
&gt;&gt; Brian Holt: We're done with React.

2
00:00:02.640 --> 00:00:05.740
And people are like, what, what happened?

3
00:00:05.740 --> 00:00:07.850
React is really not that big of a library,

4
00:00:07.850 --> 00:00:10.638
there's only 30 methods
total that React exposes.

5
00:00:12.728 --> 00:00:15.120
&gt;&gt; Brian Holt: We're pretty much
done with our app in general.

6
00:00:15.120 --> 00:00:19.571
We haven't made this thing work yet,
but that wouldn't be very hard to do.

7
00:00:19.571 --> 00:00:22.488
We would just move all this
state into App, right?

8
00:00:22.488 --> 00:00:25.151
And then we'd distribute the search
term through Landing and

9
00:00:25.151 --> 00:00:26.798
search term through Search, right?

10
00:00:26.798 --> 00:00:29.946
We've already shown you
how to refactor that so

11
00:00:29.946 --> 00:00:32.394
that you can make that work, right?

12
00:00:32.394 --> 00:00:38.327
So I'm not gonna show you how to do that,
you're welcome to do that on your own.

13
00:00:38.327 --> 00:00:41.409
Right now,
you are armed with enough knowledge to go

14
00:00:41.409 --> 00:00:45.417
build large applications in React,
and that's amazing, right?

15
00:00:47.891 --> 00:00:49.231
&gt;&gt; Brian Holt: For this size of app,

16
00:00:49.231 --> 00:00:53.476
there's absolutely no reason to
introduce something like Redux,

17
00:00:53.476 --> 00:00:58.770
it's just wild over-engineering,
irresponsible over-engineering, right?

18
00:00:58.770 --> 00:01:02.288
However, it's fun to irresponsibly
over-engineer things, right?

19
00:01:02.288 --> 00:01:07.181
But just keep in mind that you can build
large-scale applications using purely

20
00:01:07.181 --> 00:01:10.402
just the techniques that I
just showed you how to do.

21
00:01:10.402 --> 00:01:14.787
So that's why I was pretty cautious to
show you pretty much building an entire

22
00:01:14.787 --> 00:01:19.710
application in React, and now we're gonna
go back and refactoring to include Redux,

23
00:01:19.710 --> 00:01:20.395
all right?

24
00:01:20.395 --> 00:01:22.515
But we're done, that's really it,

25
00:01:22.515 --> 00:01:25.840
that's all you need to really
know about React in general.

26
00:01:25.840 --> 00:01:29.123
So if you don't care about Redux,
just turn off your live stream.

27
00:01:29.123 --> 00:01:31.886
No I'm just kidding, don't tune out,
there's still really cool stuff to come.

28
00:01:31.886 --> 00:01:34.309
In fact, I'm gonna show you
some debugging techniques, and

29
00:01:34.309 --> 00:01:35.949
I'm gonna show you perf tools right now.

30
00:01:35.949 --> 00:01:41.591
So I'm gonna show you some advanced kind
of stuff that you can do about React.

31
00:01:41.591 --> 00:01:44.719
Any questions about React in general,

32
00:01:44.719 --> 00:01:50.322
before we kind of move on to more of
how to debug it and how to profile it?

33
00:01:54.479 --> 00:01:57.209
&gt;&gt; Brian Holt: It really is just
a process, passing down props,

34
00:01:57.209 --> 00:01:58.430
setting state.

35
00:01:58.430 --> 00:02:02.657
That's really the lifecycle of methods,
that's the power of React.

36
00:02:02.657 --> 00:02:06.721
And again, one of my favorite parts
about it, it's a knowable library,

37
00:02:06.721 --> 00:02:09.484
you can know pretty much
everything about React.

38
00:02:09.484 --> 00:02:13.629
Does anyone here want to assert that
they know everything about jQuery?

39
00:02:13.629 --> 00:02:17.124
Does anyone even want to say
that they've used every method?

40
00:02:17.124 --> 00:02:19.434
Well, maybe Mark, I would believe that.

41
00:02:19.434 --> 00:02:21.372
&gt;&gt; Mark: I absolutely have
used every single method,

42
00:02:21.372 --> 00:02:22.800
including internal [INAUDIBLE].

43
00:02:22.800 --> 00:02:23.576
&gt;&gt; Brian Holt: Yeah.
&gt;&gt; Mark: [LAUGH]

44
00:02:23.576 --> 00:02:24.656
&gt;&gt; Brian Holt: So there's maybe

45
00:02:24.656 --> 00:02:28.328
two people, there's Mark and
John Resig, and that's it,

46
00:02:28.328 --> 00:02:30.707
that have used every method in jQuery.

47
00:02:30.707 --> 00:02:31.937
&gt;&gt; Mark: Well on top of the core team.

48
00:02:31.937 --> 00:02:35.653
&gt;&gt; Brian Holt: I'm kidding, I'm sure
there are literally dozens of you.

49
00:02:35.653 --> 00:02:38.706
&gt;&gt; Group: [LAUGH]
&gt;&gt; Brian Holt: [LAUGH] I have not, right?

50
00:02:38.706 --> 00:02:39.484
&gt;&gt; Mark: I know.

51
00:02:39.484 --> 00:02:42.171
&gt;&gt; Brian Holt: I have not,
there's over 200,

52
00:02:42.171 --> 00:02:46.910
approaching 300 methods in jQuery I think,
right?

53
00:02:46.910 --> 00:02:51.250
React again has like 30,
Angular 1 had over 100 for sure, right?

54
00:02:52.710 --> 00:02:55.860
So there's very very few people that have

55
00:02:55.860 --> 00:02:58.240
all of that in their
brain all at once right?

56
00:02:58.240 --> 00:03:02.130
Whereas with React you can really
understand all of the corners of React

57
00:03:02.130 --> 00:03:03.430
pretty easily.

58
00:03:03.430 --> 00:03:07.210
&gt;&gt; Mark: I think the big difference
with React is the fact that you

59
00:03:08.440 --> 00:03:13.050
don't need to know anything
about the DOM at all, right?

60
00:03:13.050 --> 00:03:16.350
And that is the big, hairy part
of that JavaScript in general is,

61
00:03:18.822 --> 00:03:21.335
&gt;&gt; Mark: DOM updating, and DOM methods,

62
00:03:21.335 --> 00:03:23.039
traversing and-
&gt;&gt; Brian Holt: Yeah,

63
00:03:23.039 --> 00:03:27.000
the imperative part of that, right,
like building trees and things like that.

64
00:03:27.000 --> 00:03:30.650
All that stuff is kind done for
you behind the scenes.

65
00:03:30.650 --> 00:03:33.130
All you need to do is you
need to write functions

66
00:03:33.130 --> 00:03:36.600
that generate the markup that you want,
and that's really it, right?

67
00:03:36.600 --> 00:03:39.610
I mean, there's some complications
with lifecycle methods and

68
00:03:39.610 --> 00:03:40.230
things like that, but

69
00:03:40.230 --> 00:03:43.980
you're basically just building functions
that generate markup and that's about it.

70
00:03:43.980 --> 00:03:47.920
&gt;&gt; Mark: Have you ever had to use
componentShouldUpdate() for performance?

71
00:03:47.920 --> 00:03:49.900
&gt;&gt; Brian Holt: Yes, and
I'm gonna show you how right now.

72
00:03:49.900 --> 00:03:54.040
In fact, we have one component in here
that's really inefficiently updating, and

73
00:03:54.040 --> 00:03:57.020
we're gonna use the React
perf tools to profile that.

74
00:03:57.020 --> 00:03:58.770
But we're getting there.

75
00:03:58.770 --> 00:04:00.770
We have one more thing first, yeah?

76
00:04:00.770 --> 00:04:04.170
&gt;&gt; Speaker 4: I was just gonna ask,
so the basic stuff that we've done so

77
00:04:04.170 --> 00:04:09.470
far, what percent of your time when you're
writing React does that usually cover?

78
00:04:09.470 --> 00:04:11.159
Is it usually 90% that?

79
00:04:11.159 --> 00:04:14.150
&gt;&gt; Brian Holt: I'm gonna go with 90,
yeah, I think 90 sounds about good to me.

80
00:04:14.150 --> 00:04:15.270
&gt;&gt; Speaker 4: Cool.

81
00:04:15.270 --> 00:04:19.090
&gt;&gt; Brian Holt: No, I'm gonna go further,
I'm gonna say it's 95.

82
00:04:19.090 --> 00:04:21.028
That last 5% is important.

