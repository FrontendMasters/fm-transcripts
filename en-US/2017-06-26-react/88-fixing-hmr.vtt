WEBVTT

1
00:00:00.495 --> 00:00:05.582
&gt;&gt; Brian Holt: Let's go ahead and make
hot module reload work with our server.

2
00:00:05.582 --> 00:00:08.999
Again, just what I was explaining earlier,
I would typically leave server side

3
00:00:08.999 --> 00:00:12.075
rendering for production only and
have a separate config for dev right?

4
00:00:12.075 --> 00:00:15.324
Often times you're gonna end
up with two Webpack configs.

5
00:00:15.324 --> 00:00:17.319
One for dev and one for production.

6
00:00:17.319 --> 00:00:21.220
We're not gonna do that today but
that's a normal thing to encounter.

7
00:00:23.337 --> 00:00:28.043
&gt;&gt; Brian Holt: But what I want you to
do first is I want you to open your web

8
00:00:28.043 --> 00:00:29.253
pack config.

9
00:00:33.235 --> 00:00:37.910
&gt;&gt; Brian Holt: And
instead of having all of this stuff,

10
00:00:37.910 --> 00:00:42.723
we're gonna do just one and it's gonna be

11
00:00:42.723 --> 00:00:47.414
webpack-hot-middleware/client.

12
00:00:51.119 --> 00:00:57.295
&gt;&gt; Brian Holt: And then you're gonna say,

13
00:00:57.295 --> 00:01:01.671
path equals__Web

14
00:01:01.671 --> 00:01:09.399
Pack_hmr&amp;timeout=2000.

15
00:01:09.399 --> 00:01:12.839
So instead of orienting webpack
to read from the dev server,

16
00:01:12.839 --> 00:01:15.880
we're going to orient it to
read from our API server.

17
00:01:15.880 --> 00:01:18.278
Or, not our API server just
the normal server that we wrote.

18
00:01:20.872 --> 00:01:23.210
&gt;&gt; Brian Holt: Okay, so
that's all you need to do here.

19
00:01:23.210 --> 00:01:25.929
Now I want you to open your server.js.

20
00:01:30.249 --> 00:01:35.053
&gt;&gt; Brian Holt: And up here we're
going to do a couple more imports.

21
00:01:35.053 --> 00:01:39.433
We're gonna say const,

22
00:01:41.083 --> 00:01:45.282
&gt;&gt; Brian Holt: webpackDevMiddleware =

23
00:01:45.282 --> 00:01:53.110
require("webpack-dev-middleware").

24
00:01:53.110 --> 00:01:55.958
This is going to take care of the actual,
like,

25
00:01:55.958 --> 00:01:59.220
feeding new pieces of
code into your module.

26
00:01:59.220 --> 00:02:01.829
And then your also going
to meet the HotMiddleware.

27
00:02:01.829 --> 00:02:08.574
So webpackHotMiddleware.

28
00:02:08.574 --> 00:02:16.988
And that's =
require('webpack-hot-middleware');.

29
00:02:16.988 --> 00:02:20.229
Then you'll also have to
bring in webpack as well.

30
00:02:20.229 --> 00:02:26.205
So const webpack = require('webpack').

31
00:02:26.205 --> 00:02:31.107
And down towards here, you're gonna
have to read your webpack config cuz

32
00:02:31.107 --> 00:02:33.885
we're gonna have to feed that in as well.

33
00:02:33.885 --> 00:02:40.122
So we'll config =
&gt;&gt; Brian Holt: I

34
00:02:40.122 --> 00:02:41.037
guess I can do this up here.

35
00:02:43.960 --> 00:02:49.840
&gt;&gt; Brian Holt: Require ./webpack.config.

36
00:02:49.840 --> 00:02:54.951
Okay, so now I got those and

37
00:02:54.951 --> 00:02:58.956
now what I have to do,

38
00:03:03.626 --> 00:03:05.166
&gt;&gt; Brian Holt: Before public,

39
00:03:05.166 --> 00:03:10.669
we're going to say const
compiler = webpack(config),

40
00:03:10.669 --> 00:03:14.420
so we're instantiating our webpack.

41
00:03:14.420 --> 00:03:19.540
Underneath that,
we're going to say, server.use.

42
00:03:19.540 --> 00:03:24.199
And then here we're going to say,

43
00:03:24.199 --> 00:03:32.884
webpackDevMiddleware(compiler, )
is the first argument.

44
00:03:32.884 --> 00:03:38.286
The second one is an object,
and we're gonna say,

45
00:03:38.286 --> 00:03:43.065
publicPath config.output.publicPath.

46
00:03:47.482 --> 00:03:50.978
&gt;&gt; Brian Holt: And then underneath that,
we're gonna say sever.use,

47
00:03:55.086 --> 00:03:58.667
&gt;&gt; Brian Holt: (WebackHotMiddleware), and

48
00:03:58.667 --> 00:04:01.800
pass that to config as well.

49
00:04:01.800 --> 00:04:02.582
Sorry, the compiler.

50
00:04:14.334 --> 00:04:19.122
&gt;&gt; Brian Holt: Okay, so now basically
we've set up the same server to do server

51
00:04:19.122 --> 00:04:23.570
side rendering, and
worry about hot module replacement.

52
00:04:26.030 --> 00:04:27.330
So now if I come back here and

53
00:04:27.330 --> 00:04:30.260
refresh yeah you are gonna have
to stop your server again.

54
00:04:34.010 --> 00:04:40.420
So little pro tip here,
its annoying to have to restart and

55
00:04:40.420 --> 00:04:44.900
stop your server every single time so
I use a model called node demon.

56
00:04:44.900 --> 00:04:48.730
Think we talked about this a little bit
earlier in the day, and this is just going

57
00:04:48.730 --> 00:04:53.330
to start and stop your server every
single time I change something.

58
00:04:53.330 --> 00:04:57.990
So notice it says this right here,
and then if I come in here and

59
00:04:57.990 --> 00:05:00.390
save this again it's gonna
say something changed.

60
00:05:00.390 --> 00:05:02.420
I'm gonna restart your server again for
you.

61
00:05:02.420 --> 00:05:03.950
So super useful.

62
00:05:03.950 --> 00:05:05.230
That's just something I do.

63
00:05:06.910 --> 00:05:08.650
Okay, now if I come here and

64
00:05:08.650 --> 00:05:14.421
refresh,
&gt;&gt; Brian Holt: It's gonna

65
00:05:14.421 --> 00:05:17.988
take a while cuz it's gonna build on the
first time that you make a request to it.

66
00:05:17.988 --> 00:05:21.223
And now it works and it's gonna say how
module replacement is connected and

67
00:05:21.223 --> 00:05:23.647
everything is gonna work just
the way you anticipated.

68
00:05:27.702 --> 00:05:28.469
&gt;&gt; Brian Holt: Any questions about that?

69
00:05:34.200 --> 00:05:37.696
&gt;&gt; Brian Holt: So again I'm gonna
tell you that this is not typically

70
00:05:37.696 --> 00:05:39.030
what I would do.

71
00:05:39.030 --> 00:05:44.540
I typically reserve server side
rendering just for production,

72
00:05:44.540 --> 00:05:48.640
and then I leave the rest of
it just like the def config.

73
00:05:48.640 --> 00:05:54.520
Because it's a lot less of a problem
to mess around with in development.

74
00:05:54.520 --> 00:06:00.010
I'll just use the web pack
development server, but there

75
00:06:00.010 --> 00:06:04.090
are occasions where you'll have problems
specifically with server site rendering.

76
00:06:04.090 --> 00:06:09.830
So it's good to take a look at this, but
I wouldn't say it's my go to dev process,

77
00:06:09.830 --> 00:06:13.130
but I wanted to show you how
just in case that you wanted to.

78
00:06:13.130 --> 00:06:13.930
It is possible.

79
00:06:16.740 --> 00:06:17.480
Yeah?

80
00:06:17.480 --> 00:06:20.320
&gt;&gt; Speaker 2: What stops hop module
replacement from running outside of

81
00:06:20.320 --> 00:06:20.910
development?

82
00:06:23.240 --> 00:06:24.139
&gt;&gt; Brian Holt: The node environment.

83
00:06:25.760 --> 00:06:27.990
So if you say node m equals production,

84
00:06:27.990 --> 00:06:31.800
hot module replacement
disables itself automatically.

85
00:06:33.530 --> 00:06:38.320
And actually, I'll show you here just
a second when we get to code splitting,

86
00:06:38.320 --> 00:06:43.310
you can actually just come
into your config, right?

87
00:06:43.310 --> 00:06:48.665
Your web pack config,
&gt;&gt; Brian Holt: And say like,

88
00:06:48.665 --> 00:06:53.280
if I'm in development then
add this to the entry right?

89
00:06:53.280 --> 00:06:55.700
If not, then don't add it right?

90
00:06:55.700 --> 00:06:59.290
Cuz you don't wanna send down
that hot module reload code,

91
00:06:59.290 --> 00:07:01.460
unless you're actually
in development right?

92
00:07:01.460 --> 00:07:04.924
So you can just mess with this config
based on what environment it's

93
00:07:04.924 --> 00:07:05.664
being run in.

94
00:07:07.912 --> 00:07:08.962
&gt;&gt; Brian Holt: But
I'll show you that in just a sec.

95
00:07:13.900 --> 00:07:17.070
&gt;&gt; Brian Holt: So I'm gonna push
here real quick, another branch.

96
00:07:17.070 --> 00:07:20.290
And then I'm gonna go back to the def
config because it's gonna be a lot easier

97
00:07:20.290 --> 00:07:21.910
in the next section if we do it that way.

