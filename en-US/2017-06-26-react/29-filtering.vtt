WEBVTT

1
00:00:00.230 --> 00:00:02.887
&gt;&gt; Brian Holt: So
let's actually use search term right.

2
00:00:02.887 --> 00:00:04.977
Right now we're not really
doing anything with it.

3
00:00:04.977 --> 00:00:09.306
I just wanted to show you
that if we replace this

4
00:00:09.306 --> 00:00:13.747
.state.search term here
inside of the h1 and

5
00:00:13.747 --> 00:00:19.645
then we come back over here to
our nice little thing right here.

6
00:00:22.027 --> 00:00:25.523
&gt;&gt; Brian Holt: Notice that we
have nothing right there and

7
00:00:25.523 --> 00:00:30.581
then as soon as I start typing
it's echoed over here, right?

8
00:00:33.247 --> 00:00:35.813
&gt;&gt; Brian Holt: So
this data is bound to this one, so

9
00:00:35.813 --> 00:00:40.700
whatever's in the input is also
gonna be input over there, right?

10
00:00:40.700 --> 00:00:49.378
So this kind of bends back to
what I was talking about earlier.

11
00:00:49.378 --> 00:00:53.208
You have to think of react components in
terms of given a certain set of state and

12
00:00:53.208 --> 00:00:56.648
a certain set of props, this is what
it's going to look like, right?

13
00:00:56.648 --> 00:00:59.834
So you think about react in
terms of snapshots, right?

14
00:00:59.834 --> 00:01:01.605
Given this snapshot of props and

15
00:01:01.605 --> 00:01:05.736
this snapshot of state my reaction point
is always going to look like this,

16
00:01:05.736 --> 00:01:09.032
it's deterministically going
to look like this, right?

17
00:01:09.032 --> 00:01:11.218
Every single time given the state and

18
00:01:11.218 --> 00:01:14.257
given this props its always
going to look this way.

19
00:01:14.257 --> 00:01:18.535
Now what's advantageous about
thinking about your component in this

20
00:01:18.535 --> 00:01:22.605
particular light is you get to
eliminate the axis of time, right?

21
00:01:22.605 --> 00:01:27.289
So I'm sure many of you have debugged
a prob with JQUERY or Angular or

22
00:01:27.289 --> 00:01:28.857
something like that.

23
00:01:28.857 --> 00:01:31.925
Where you have, I have to click
this button and this button and

24
00:01:31.925 --> 00:01:34.709
then this button and
then this broke over here, right?

25
00:01:34.709 --> 00:01:38.870
So you have to go through these series
of just weirdness to get to eventually

26
00:01:38.870 --> 00:01:39.604
this state.

27
00:01:39.604 --> 00:01:44.502
You have to think about events over time
leading to this particular problem, right?

28
00:01:44.502 --> 00:01:50.450
With react components it's just really,
given this state, this breaks, right?

29
00:01:50.450 --> 00:01:55.215
And I feel like that's a much more simple
thing to think about because you no longer

30
00:01:55.215 --> 00:02:00.065
have to think about going through periods
of times to arrive at this point, right?

31
00:02:00.065 --> 00:02:03.840
If I put this state into this component,
it just breaks.

32
00:02:03.840 --> 00:02:05.040
Or doesn't break, right?

33
00:02:08.299 --> 00:02:13.494
&gt;&gt; Brian Holt: So yes, that's what I
wanted to demonstrate to you here,

34
00:02:13.494 --> 00:02:16.365
that given this state, right?

35
00:02:16.365 --> 00:02:19.574
Where this state,
it's going to look like this, right?

36
00:02:19.574 --> 00:02:24.422
So when the state looks like this, that
component is always gonna look like that.

37
00:02:24.422 --> 00:02:26.168
Does that make sense?

38
00:02:26.168 --> 00:02:30.591
Cool, okay, so-
&gt;&gt; Speaker 2: There's a few minor

39
00:02:30.591 --> 00:02:32.427
questions in chat.

40
00:02:35.853 --> 00:02:40.460
&gt;&gt; Speaker 2: Amir's asking
could you recap why the names,

41
00:02:40.460 --> 00:02:43.776
file names are jsx instead of js?

42
00:02:43.776 --> 00:02:45.706
In version two they're all js.

43
00:02:48.398 --> 00:02:51.743
&gt;&gt; Brian Holt: The answer to that question
is in version two they were all js because

44
00:02:51.743 --> 00:02:55.217
that's where it seemed like things
were going with Create React App.

45
00:02:55.217 --> 00:02:59.256
Create React App enforces .js.

46
00:02:59.256 --> 00:03:03.981
And then we switch to the Airbnb
style rules which enforces JSX.

47
00:03:03.981 --> 00:03:05.868
And version one was JSX as well.

48
00:03:05.868 --> 00:03:11.531
[LAUGH] So another words no ones really
decided yet where it's going to be.

49
00:03:11.531 --> 00:03:15.022
I just went with what Airbnb decided.

50
00:03:15.022 --> 00:03:19.324
So yeah, that's why it is,
because the Airbnb rules enforce that.

51
00:03:19.324 --> 00:03:23.535
&gt;&gt; Speaker 2: And could you recap
the tradeoff between using the constructor

52
00:03:23.535 --> 00:03:24.099
vs not?

53
00:03:24.099 --> 00:03:27.809
&gt;&gt; Brian Holt: I just think
this is more succinct, right?

54
00:03:27.809 --> 00:03:33.044
If you use the constructor method
that's Valid ES6 today and this is

55
00:03:33.044 --> 00:03:39.104
using a Stage Two proposal so I like this
better because I find it easier to read.

56
00:03:39.104 --> 00:03:43.795
The other reason why it's going to
be beneficial is because when we

57
00:03:43.795 --> 00:03:47.747
get into flow types,
flow can understand this better.

58
00:03:47.747 --> 00:03:51.237
Which we will talk about
that when we get to flow.

59
00:03:51.237 --> 00:03:56.193
&gt;&gt; Speaker 3: Would we have to use
a constructor if this component

60
00:03:56.193 --> 00:03:58.391
was accessing props.

61
00:03:58.391 --> 00:04:00.638
&gt;&gt; Brian Holt: Nope, so
I see what you're saying,

62
00:04:00.638 --> 00:04:04.273
cuz you have to call super props
inside of the constructor.

63
00:04:04.273 --> 00:04:07.585
So you're overwriting
the react constructor,

64
00:04:07.585 --> 00:04:10.016
if you write your own constructor.

65
00:04:10.016 --> 00:04:13.664
So the default react constructor
will take care of the props for you.

66
00:04:16.353 --> 00:04:17.274
&gt;&gt; Brian Holt: Good question.

67
00:04:20.178 --> 00:04:20.778
&gt;&gt; Brian Holt: Anymore?

68
00:04:25.291 --> 00:04:30.578
&gt;&gt; Brian Holt: Cool, so it's probably
the last thing we'll do today.

69
00:04:30.578 --> 00:04:33.219
Let's actually use searchTerm,

70
00:04:33.219 --> 00:04:38.142
rather than just being something
cute that displays at the top.

71
00:04:38.142 --> 00:04:43.821
What I want to do is, given some
search term, so if I type black,

72
00:04:43.821 --> 00:04:48.468
right, I only want Black Mirror
to show up, right?

73
00:04:48.468 --> 00:04:54.554
So I want to be able to search in real
time my various shows I have up here.

74
00:04:54.554 --> 00:05:00.654
So what we're going to do, cuz we're
gonna do something a little clever.

75
00:05:00.654 --> 00:05:03.350
So we have preload.shows, right?

76
00:05:03.350 --> 00:05:08.935
And we're using that to map
out to a set of components.

77
00:05:08.935 --> 00:05:11.250
So if I want to show less components,

78
00:05:11.250 --> 00:05:16.419
I can do a little bit more functional foo
and I can just filter before I map, right?

79
00:05:16.419 --> 00:05:22.108
So I can just filter out the ones I
don't want based on that search term and

80
00:05:22.108 --> 00:05:25.194
then only display the ones that I want.

81
00:05:25.194 --> 00:05:28.464
So what I'm gonna do here is I'm gonna,

82
00:05:28.464 --> 00:05:32.417
before I call .map,
I'm gonna call .filter.

83
00:05:34.702 --> 00:05:39.626
&gt;&gt; Brian Holt: And what I'm gonna do
here is I'm gonna pass in a show.

84
00:05:39.626 --> 00:05:42.136
So with filter if I return true for

85
00:05:42.136 --> 00:05:45.909
any given item it's going
to keep it in the array.

86
00:05:45.909 --> 00:05:49.915
If I return false it's going
to take it out of the array.

87
00:05:49.915 --> 00:05:52.915
So if I did false right here,right,
I would get nothing, right?

88
00:05:52.915 --> 00:05:56.372
If I put true here,
I would get everything, right?

89
00:05:56.372 --> 00:06:01.169
So what I'm gonna do here is I'm
gonna check to see if the search

90
00:06:01.169 --> 00:06:05.796
term exists in either the title or
the description, right?

91
00:06:05.796 --> 00:06:11.543
So I wanna know, are you in the title,
so show.title or

92
00:06:11.543 --> 00:06:16.084
the description, so show.description.

93
00:06:20.828 --> 00:06:22.220
&gt;&gt; Brian Holt: And then I'm gonna say.

94
00:06:26.064 --> 00:06:28.678
&gt;&gt; Brian Holt: Yeah,
I think this is the best way to do it.

95
00:06:28.678 --> 00:06:29.703
Whatever!

96
00:06:31.308 --> 00:06:33.286
&gt;&gt; Brian Holt: I want to
be case insensitive, right?

97
00:06:33.286 --> 00:06:39.205
So I'm gonna say toUppercase,
&gt;&gt; Brian Holt: .indexOf,

98
00:06:39.205 --> 00:06:43.093
so I'm gonna check if it
exists anywhere in the string.

99
00:06:45.125 --> 00:06:50.217
&gt;&gt; Brian Holt: That's gonna be
this.state .search term, right?

100
00:06:50.217 --> 00:06:55.072
So I'm gonna check if this.search
term exists inside of the show.

101
00:06:55.072 --> 00:06:56.897
Which I'm also gonna put to uppercase,
right?

102
00:06:56.897 --> 00:07:00.211
Because I want to make this
totally case insensitive and

103
00:07:00.211 --> 00:07:04.454
then I'm just gonna check to see if
it's greater than or equal to zero.

104
00:07:07.358 --> 00:07:08.993
&gt;&gt; Brian Holt: Whoops,
that should be a dot.

105
00:07:12.652 --> 00:07:13.715
&gt;&gt; Brian Holt: This is a little dense,

106
00:07:13.715 --> 00:07:16.062
you could pull this out if
this made you feel better.

107
00:07:18.305 --> 00:07:22.302
&gt;&gt; Brian Holt: But
let's just kind of recap here, all right?

108
00:07:22.302 --> 00:07:25.416
So filter, right,
we're doing a filter on this.

109
00:07:27.199 --> 00:07:30.257
&gt;&gt; Brian Holt: This I'm putting show
title and show description in one string

110
00:07:30.257 --> 00:07:33.670
together, right, so I can check
both the description and the title.

111
00:07:33.670 --> 00:07:37.657
I can put it in either order it
doesn't really matter, okay?

112
00:07:37.657 --> 00:07:41.477
I'm putting them to upper case because
I want to take case sensitivity out of

113
00:07:41.477 --> 00:07:42.260
the question.

114
00:07:42.260 --> 00:07:46.482
And then asking in this
uppercase string right here

115
00:07:46.482 --> 00:07:51.006
can you find search term,
also in uppercase, right?

116
00:07:51.006 --> 00:07:54.968
Cuz index of is gonna give you somewhere,
if it's greater than or

117
00:07:54.968 --> 00:07:59.796
equal to zero, it exists in the string,
and if it doesn't exist in the string,

118
00:07:59.796 --> 00:08:02.412
it's gonna return negative one, right?

119
00:08:02.412 --> 00:08:06.886
So true if it's in the string, or
false if it's not in the string, right?

120
00:08:06.886 --> 00:08:11.209
And that's what we're
gonna be filtering on.

121
00:08:11.209 --> 00:08:12.345
How do we feel about that?

122
00:08:14.293 --> 00:08:15.468
&gt;&gt; Brian Holt: It's a little dense but

123
00:08:15.468 --> 00:08:17.826
this is a good way of hacking at search,
right?

124
00:08:17.826 --> 00:08:19.692
This isn't exactly elastic search.

125
00:08:19.692 --> 00:08:22.952
I think their algorithm's a little
bit more sophisticated, but

126
00:08:22.952 --> 00:08:25.092
this'll do the job for what we're doing.

127
00:08:25.092 --> 00:08:29.688
So now, if I type black,
it's only gonna show Black Mirror and

128
00:08:29.688 --> 00:08:32.131
Orange is the New Black, right?

129
00:08:32.131 --> 00:08:39.159
If I type house, it's gonna type House of
Cards, or game, I get Game of Thrones.

130
00:08:47.572 --> 00:08:50.043
&gt;&gt; Brian Holt: Come on,
that's pretty cool, right, pretty cool?

131
00:08:50.043 --> 00:08:51.758
Pretty cool.

132
00:08:51.758 --> 00:08:55.066
Now, yes!

133
00:08:55.066 --> 00:08:59.252
So this is what I'm getting at, and what I
keep harping on, is givien this state, and

134
00:08:59.252 --> 00:09:02.640
given these props, this is what
this component looks like, right.

135
00:09:02.640 --> 00:09:08.651
So with the snapshot that, I could even,
here's a good way of doing it, right.

136
00:09:08.651 --> 00:09:10.253
So we can set the default state.

137
00:09:10.253 --> 00:09:12.322
So if I put game right here,
and I save it,

138
00:09:12.322 --> 00:09:14.643
what's going to be
rendered on first render?

139
00:09:17.171 --> 00:09:20.502
&gt;&gt; Brian Holt: Just Game of Thrones,
right?

140
00:09:20.502 --> 00:09:24.254
So given that snapshot, where the search
term is game, then it's gonna be only

141
00:09:24.254 --> 00:09:27.900
showing Game of Thrones, then as soon
as I delete it, I get everything back.

142
00:09:31.345 --> 00:09:33.290
&gt;&gt; Brian Holt: Does that make sense?

143
00:09:33.290 --> 00:09:37.073
So this is like,
it only took me six goddamn hours, but

144
00:09:37.073 --> 00:09:41.457
we eventually got to the point
of why React is amazing, right?

145
00:09:41.457 --> 00:09:44.761
I think this is a really powerful,
intuitive and

146
00:09:44.761 --> 00:09:47.510
performant way of writing Java Script.

147
00:09:47.510 --> 00:09:52.206
I think it's a way to write scalable apps.

148
00:09:52.206 --> 00:09:56.276
And the interesting thing is you can come
back later, and I mean barring this,

149
00:09:56.276 --> 00:09:59.300
I'd probably abstract this out
into some sort of module or

150
00:09:59.300 --> 00:10:01.719
something actually
a little bit more robust.

151
00:10:01.719 --> 00:10:03.350
But barring this little mess right here,

152
00:10:03.350 --> 00:10:05.503
this is actually pretty easy
to read through, right?

153
00:10:05.503 --> 00:10:10.919
It's pretty intuitive that given this
state, you get this sort of output.

154
00:10:10.919 --> 00:10:16.297
I find it easy to use the term Azura.

155
00:10:16.297 --> 00:10:17.755
We use it about, right?

156
00:10:23.292 --> 00:10:24.499
&gt;&gt; Brian Holt: Any questions?

157
00:10:32.533 --> 00:10:37.070
&gt;&gt; Brian Holt: Yeah, this is one of the
things that really made me realize this is

158
00:10:37.070 --> 00:10:39.639
great, I want to keep writing this.

159
00:10:43.425 --> 00:10:46.842
&gt;&gt; Brian Holt: Someone pointed out to me
the other day that the posters are of

160
00:10:46.842 --> 00:10:47.648
uneven size.

161
00:10:47.648 --> 00:10:51.075
Now I can't unsee it.

162
00:10:51.075 --> 00:10:52.611
&gt;&gt; Speaker 2: You push.

163
00:10:52.611 --> 00:10:55.132
&gt;&gt; Brian Holt: Yeah, definately.

164
00:10:55.132 --> 00:11:00.352
&gt;&gt; Speaker 2: There's a few people who
are missing something along the way.

165
00:11:00.352 --> 00:11:03.575
&gt;&gt; Brian Holt: Easy to do, I mean we
are writing a pretty big app together.

166
00:11:03.575 --> 00:11:08.489
&gt;&gt; Speaker 2: Yeah, I love how many
people have written into us how

167
00:11:08.489 --> 00:11:11.738
this course gave them a job right?

168
00:11:11.738 --> 00:11:16.605
Because it's like so real world that
people got, you now know how to build

169
00:11:16.605 --> 00:11:20.856
a reacts production app and
I got this job because of it.

170
00:11:20.856 --> 00:11:21.899
&gt;&gt; Brian Holt: It's super rewarding.

171
00:11:21.899 --> 00:11:25.019
So I was at a user group,

172
00:11:25.019 --> 00:11:30.332
the modern web meetup group in San Jose.

173
00:11:30.332 --> 00:11:32.957
Last week some guy was on the phone.

174
00:11:32.957 --> 00:11:36.280
It was a little rude, but
it was pretty cool too.

175
00:11:36.280 --> 00:11:40.409
He walks up to me and says, hey, I got
a job at Facebook because of your course,

176
00:11:40.409 --> 00:11:41.609
and then just ran off.

177
00:11:41.609 --> 00:11:47.894
[LAUGH] So I was like, thank you,
or you're welcome, or I don't know.

178
00:11:47.894 --> 00:11:51.886
I was both offended and bewildered and
honored all at the same time.

179
00:11:51.886 --> 00:11:53.390
More honored, it was super cool.

180
00:11:53.390 --> 00:11:55.048
No, it's awesome to hear that kinda stuff.

181
00:11:55.048 --> 00:11:59.476
&gt;&gt; Speaker 2: Yeah, the whole point of
that is software development is hard,

182
00:11:59.476 --> 00:12:00.053
right?

183
00:12:00.053 --> 00:12:04.172
Building a real-world application is
difficult, there's a lot of moving peices.

184
00:12:04.172 --> 00:12:04.932
&gt;&gt; Brian Holt: For sure.

185
00:12:04.932 --> 00:12:09.012
&gt;&gt; Speaker 2: You're sorta de-mistifying
each piece, especially with the videos,

186
00:12:09.012 --> 00:12:11.589
people can kind of come back to it and
all that.

187
00:12:11.589 --> 00:12:12.951
&gt;&gt; Brian Holt: For sure.

188
00:12:12.951 --> 00:12:15.197
&gt;&gt; Speaker 2: But
it is daunting, cuz it is hard.

189
00:12:15.197 --> 00:12:19.354
That's why people get paid a lot of
money to write this kind of stuff.

190
00:12:19.354 --> 00:12:20.698
&gt;&gt; Brian Holt: For sure, for sure,

191
00:12:20.698 --> 00:12:25.625
that's why this class is structured the
way it is, I like I like exercises that

192
00:12:25.625 --> 00:12:29.523
I leave for you to do on your own and
connect the dots yourself.

193
00:12:29.523 --> 00:12:31.830
But that's more useful for,
I feel like, algorithms and

194
00:12:31.830 --> 00:12:33.442
like little bite sized pieces, right?

195
00:12:33.442 --> 00:12:38.520
We're talking about modern application
development, and that's not an exercises,

196
00:12:38.520 --> 00:12:43.198
like okay, build a Netflix app, go, and
I'm just gonna sit over here, right?

197
00:12:43.198 --> 00:12:44.490
That doesn't work, right?

198
00:12:44.490 --> 00:12:47.522
We need to sit down together and
build things and it's useful for

199
00:12:47.522 --> 00:12:50.116
you to type things even if
you don't understand them.

200
00:12:50.116 --> 00:12:51.096
At least for me,

201
00:12:51.096 --> 00:12:55.369
the act of typing something helps me
to connect dots in my brain, right?

202
00:12:55.369 --> 00:12:59.599
Especially, I put all the pieces together
and then I step back and it's like, okay,

203
00:12:59.599 --> 00:13:02.534
now I see that it was a puzzle,
it's a picture of something.

