WEBVTT

1
00:00:00.480 --> 00:00:03.490
&gt;&gt; Brian Holt: So far,
we've just been running this from file.

2
00:00:03.490 --> 00:00:05.230
If you look at my path up here.

3
00:00:05.230 --> 00:00:10.880
When you're using the file protocol, I'm
gonna talk from a Unix-based perspective.

4
00:00:10.880 --> 00:00:15.370
I don't know how it works in Windows, but
I imagine there are similar problems.

5
00:00:15.370 --> 00:00:17.300
There's just a lot of limitations, right?

6
00:00:19.340 --> 00:00:22.580
So you don't wanna be doing this very
long for any sort of decent dev process.

7
00:00:22.580 --> 00:00:25.220
It's useful for writing CSS and
stuff like that, but

8
00:00:25.220 --> 00:00:27.190
much more than that if
falls apart pretty quickly.

9
00:00:27.190 --> 00:00:30.560
In other words,
we need a static file server.

10
00:00:30.560 --> 00:00:34.697
Now we could bring in
something like an HTTP server.

11
00:00:34.697 --> 00:00:41.432
We could bring in simple python,
simple HDP server from python or PHP-S.

12
00:00:41.432 --> 00:00:42.670
There's a bunch of ways to do it.

13
00:00:42.670 --> 00:00:45.940
However, there is a particular
tool called webpack dev server

14
00:00:45.940 --> 00:00:47.250
that makes this a lot easier.

15
00:00:47.250 --> 00:00:48.640
And it's gonna buy us a lot more too.

16
00:00:48.640 --> 00:00:50.600
So we're gonna go ahead and
introduce that real quick.

17
00:00:52.270 --> 00:00:54.430
So I want you to go to
your webpack config.

18
00:00:54.430 --> 00:00:56.550
And there's really only one thing
that we're gonna need to do.

19
00:00:56.550 --> 00:00:59.880
We're gonna have one more object,
you can put it really anywhere.

20
00:00:59.880 --> 00:01:09.241
Just call it devServer.
&gt;&gt; Brian Holt: And I'm gonna put in here

21
00:01:09.241 --> 00:01:19.161
a public path.
&gt;&gt; Brian Holt: So

22
00:01:19.161 --> 00:01:25.058
this is letting Web Pack know where you
anticipate your bundle being served from,

23
00:01:25.058 --> 00:01:29.587
so that whenever you go to serve
files from that it knows where to

24
00:01:29.587 --> 00:01:33.790
go grab those files, and
where they're being output to.

25
00:01:35.360 --> 00:01:39.510
Now, for us we have a public directory and
we're serving from public.

26
00:01:40.760 --> 00:01:44.230
That's just coincidence that
they're the same thing.

27
00:01:44.230 --> 00:01:47.670
I could be serving from
the public directory, but

28
00:01:47.670 --> 00:01:50.700
it could be called like
Static Assets on my server.

29
00:01:50.700 --> 00:01:54.229
So this is the name of the path on
the server if that makes any sense.

30
00:01:58.384 --> 00:02:01.478
&gt;&gt; Brian Holt: So, now what I can do here,

31
00:02:01.478 --> 00:02:05.515
is I can come to my command line, And

32
00:02:05.515 --> 00:02:12.245
I'm gonna if you're running
watch stop your watch and then

33
00:02:12.245 --> 00:02:18.461
do ./node modules.bin/webpack-dev-server.

34
00:02:24.431 --> 00:02:27.902
&gt;&gt; Brian Holt: So now it's gonna run
a server for me, at localhost 8080.

35
00:02:27.902 --> 00:02:31.079
It's gonna serve all your
output from /public, but

36
00:02:31.079 --> 00:02:34.264
it's also going to be doing the watch for
you as well.

37
00:02:34.264 --> 00:02:35.439
So every time you save something,

38
00:02:35.439 --> 00:02:37.269
it's going to be constantly
recompiling your code.

39
00:02:39.360 --> 00:02:43.080
So it's like wash and your static file
server just rolled up into one thing.

40
00:02:44.390 --> 00:02:45.668
So now if I go to local host 8080,

41
00:02:45.668 --> 00:02:49.820
[LAUGH] things are actually serving
the way they should, right?

42
00:02:49.820 --> 00:02:51.300
That's where the image came from.

43
00:02:53.230 --> 00:02:57.040
So, what I want you to do real quick,
it's important that we're gonna

44
00:02:57.040 --> 00:03:01.860
take a second and emphasize it, cuz people
always miss this when I do this workshop.

45
00:03:01.860 --> 00:03:07.029
Go to your index.html.
&gt;&gt; Brian Holt: I'm gonna wait,

46
00:03:07.029 --> 00:03:12.345
make sure everyone's there.
&gt;&gt; Brian Holt: And then in front of public

47
00:03:12.345 --> 00:03:17.300
in both places, both in the script and
the link, please put a leading slash.

48
00:03:21.030 --> 00:03:23.490
It works now because
we're on the home page.

49
00:03:23.490 --> 00:03:29.140
But as we having different paths, that
relative path is going to be incorrect.

50
00:03:29.140 --> 00:03:30.685
So we always want it to serve

51
00:03:30.685 --> 00:03:35.594
from /public.
&gt;&gt; Brian Holt: Did

52
00:03:35.594 --> 00:03:37.028
everyone put two slashes?

53
00:03:37.028 --> 00:03:42.280
[LAUGH] Okay, cool, I believe you.

54
00:03:42.280 --> 00:03:45.048
And if you ask me the question, I'm going
to throw something at you, I swear.

55
00:03:45.048 --> 00:03:48.240
[LAUGH] Just kidding.

56
00:03:48.240 --> 00:03:49.050
I mean, maybe.

57
00:03:49.050 --> 00:03:50.335
But don't test me.

58
00:03:50.335 --> 00:03:58.310
[COUGH] Cool.
&gt;&gt; Brian Holt: So this is awesome, right?

59
00:03:58.310 --> 00:03:58.970
The dev server.

60
00:03:58.970 --> 00:04:03.790
It's one of the really nice parts
about Web Pack as it shifts with this

61
00:04:03.790 --> 00:04:07.050
death server, and
we're only scratching the surface.

62
00:04:07.050 --> 00:04:08.450
In fact,
I wanna show you something else too.

63
00:04:08.450 --> 00:04:11.030
Let's go back and
reintroduce some sort of linting error.

64
00:04:11.030 --> 00:04:13.360
So cont x=5.

65
00:04:13.360 --> 00:04:17.002
Lint error, open your console here, and

66
00:04:17.002 --> 00:04:21.282
you're gonna see right
away some sort of error.

67
00:04:26.027 --> 00:04:27.270
&gt;&gt; Brian Holt: But now,

68
00:04:27.270 --> 00:04:32.570
if I get rid of it, save it, it's gone.

69
00:04:32.570 --> 00:04:35.830
So again, another part of
webpack-dev-server is every time

70
00:04:35.830 --> 00:04:39.009
the bundle refreshes, it's just gonna
hard-refresh your browser for you.

71
00:04:40.660 --> 00:04:43.820
Which is also pretty nice, right,
cuz you can just save it, and

72
00:04:43.820 --> 00:04:45.580
then go over to your browser and
it's gonna be reloaded.

73
00:04:46.780 --> 00:04:50.020
Now, inevitably someone wants to
ask me about Hot Module Reload,

74
00:04:50.020 --> 00:04:52.320
we're gonna do it in a little bit.

75
00:04:52.320 --> 00:04:57.050
Not yet, hold your horses.
&gt;&gt; Brian Holt: We're not there yet.

76
00:05:00.200 --> 00:05:01.370
Okay?

77
00:05:01.370 --> 00:05:05.720
So, go ahead.
&gt;&gt; Speaker 2: Someone asked about studying

78
00:05:05.720 --> 00:05:10.340
all this tooling by ourselves versus
using something like Create React app.

79
00:05:11.480 --> 00:05:12.300
&gt;&gt; Brian Holt: So

80
00:05:12.300 --> 00:05:16.810
yes, Create React app is a really
cool piece of technology.

81
00:05:16.810 --> 00:05:17.500
So again,

82
00:05:17.500 --> 00:05:21.060
a lot of people's common complaint is
that, the tooling is so complicated.

83
00:05:21.060 --> 00:05:23.070
And difficult to set up and
difficult to understand.

84
00:05:23.070 --> 00:05:26.440
Like, I'm giving a three day workshop,
just so you can understand the tooling,

85
00:05:26.440 --> 00:05:26.940
right.

86
00:05:26.940 --> 00:05:28.510
That's about half the workshop.

87
00:05:29.560 --> 00:05:33.500
Something like Create React app,
totally obscures all of this from you.

88
00:05:33.500 --> 00:05:37.570
And it just works,
it just works straight out of the box.

89
00:05:37.570 --> 00:05:43.148
The tradeoff there is that you
have no control over your tools.

90
00:05:43.148 --> 00:05:47.112
So Create React app is really a great
way to scaffold up a project,

91
00:05:47.112 --> 00:05:48.417
get rolling with it.

92
00:05:48.417 --> 00:05:51.969
And then what create react app does for
you,

93
00:05:51.969 --> 00:05:56.410
is it allows you to eject
all of the term is eject.

94
00:05:56.410 --> 00:05:59.470
It removes itself from the project and
it gives you all of the configs.

95
00:06:00.690 --> 00:06:03.720
So you're not locked into using
Create React app all the time.

96
00:06:03.720 --> 00:06:08.110
So it ejects the webpack config,
the babel config, the ESlint config.

97
00:06:08.110 --> 00:06:10.300
So it's kind of an all or nothing thing.

98
00:06:10.300 --> 00:06:14.610
You either use Create React app or
you don't [LAUGH].

99
00:06:14.610 --> 00:06:18.780
So, the trade off here is if you're
willing to give up that control

100
00:06:18.780 --> 00:06:22.740
it's amazing and totally worth it, because
the product they set up for you is really,

101
00:06:22.740 --> 00:06:23.240
really great.

102
00:06:24.430 --> 00:06:28.450
You can build large scale operations
on Create React app no problem.

103
00:06:28.450 --> 00:06:32.010
They give you great dev config,
they give you great production config.

104
00:06:32.010 --> 00:06:35.520
However, if you even need to change
one thing, you have to eject it.

105
00:06:36.860 --> 00:06:42.530
So, we're not using it today because
I want you to touch the tools.

106
00:06:42.530 --> 00:06:44.900
I want you to feel the tools,
I want you to feel why you have them.

107
00:06:44.900 --> 00:06:47.790
I want you to understand what each one
of them does and how to set them up.

108
00:06:47.790 --> 00:06:50.040
So when you go to your individual
companies, and projects,

109
00:06:50.040 --> 00:06:53.890
and clients, that you know,
yourself how to manipulate the tools and

110
00:06:53.890 --> 00:06:58.690
get the best performance, and address
all the needs for what you're doing.

111
00:07:00.520 --> 00:07:05.900
So, if you're interested in Create React
app, I have another repo on my GitHub

112
00:07:05.900 --> 00:07:09.140
that's a similar type project
that we're doing right now, but

113
00:07:09.140 --> 00:07:11.230
it uses Create React app.

114
00:07:11.230 --> 00:07:14.920
And it's much more focused on Reacts and
Reducts rather then on the tooling.

115
00:07:14.920 --> 00:07:19.330
A lot of this workshop focuses on the
tooling, so you're welcome to go in and

116
00:07:19.330 --> 00:07:20.575
compare and contrast.

117
00:07:20.575 --> 00:07:25.609
That'll be open source forever, so
you're welcome to check it out.

118
00:07:25.609 --> 00:07:27.768
&gt;&gt; Speaker 3: I appreciate this,

119
00:07:27.768 --> 00:07:32.851
cuz in the past it's been and it works.

120
00:07:32.851 --> 00:07:35.110
And I don't even know
how it's [INAUDIBLE].

121
00:07:35.110 --> 00:07:36.510
&gt;&gt; Brian Holt: Right, it's total black

122
00:07:36.510 --> 00:07:39.390
magic, it's a total black box right.
&gt;&gt; Speaker 3: Yeah.

123
00:07:39.390 --> 00:07:40.990
&gt;&gt; Speaker 4: What is the repo for

124
00:07:40.990 --> 00:07:45.919
the example that you've got on here?
&gt;&gt; Brian Holt: Its

125
00:07:45.919 --> 00:07:51.605
NHO.LT/redux.
&gt;&gt; Brian Holt: I

126
00:07:51.605 --> 00:07:53.868
think I have some updating to do for
it but

127
00:07:53.868 --> 00:07:59.755
it should be 99% good.
&gt;&gt; Brian Holt: You

128
00:07:59.755 --> 00:08:02.330
build a pet adoption app,
which is pretty fun.

