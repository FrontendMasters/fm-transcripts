WEBVTT

1
00:00:00.154 --> 00:00:02.585
&gt;&gt; Brian Holt: Let's do
something kind of fun.

2
00:00:02.585 --> 00:00:07.025
There's a tool called Istanbul, it's been
around for a long time for JavaScript.

3
00:00:07.025 --> 00:00:08.865
It does test coverage.

4
00:00:08.865 --> 00:00:12.081
It can be kind of a pain to
wire up particularly with like,

5
00:00:12.081 --> 00:00:14.968
Mocha and
some of these other testing frameworks.

6
00:00:14.968 --> 00:00:17.966
It's already built into Jest, so
you don't have to do anything.

7
00:00:17.966 --> 00:00:19.445
It's kind of for free.

8
00:00:19.445 --> 00:00:26.902
So we can do yarn test
yarn test -- --coverage.

9
00:00:28.960 --> 00:00:31.895
&gt;&gt; Brian Holt: And it's going
to run our test with, let's see.

10
00:00:31.895 --> 00:00:34.391
Let's just make it so
you can see the nice table.

11
00:00:36.327 --> 00:00:39.495
&gt;&gt; Brian Holt: It's gonna
output this nice line of like,

12
00:00:39.495 --> 00:00:43.635
this is how much you're
covering your file with tests.

13
00:00:43.635 --> 00:00:47.338
So with search.jsx we got
a 100% test coverage,

14
00:00:47.338 --> 00:00:50.473
it's hitting literally every line of Jest.

15
00:00:50.473 --> 00:00:51.340
ShowCard?

16
00:00:51.340 --> 00:00:53.378
We got 80% of it.

17
00:00:53.378 --> 00:00:56.971
A 100% of branches and 0% of functions.

18
00:00:56.971 --> 00:01:01.874
So, just by importing ShowCard,
we're kinda validating ShowCard is

19
00:01:01.874 --> 00:01:06.051
probably at least going to not
have any syntax errors right?

20
00:01:06.051 --> 00:01:08.371
But we really haven't
tested much more than that.

21
00:01:08.371 --> 00:01:12.132
And then it's saying all files
that the test suite knows about,

22
00:01:12.132 --> 00:01:15.695
we have 88% coverage of
statements which is pretty cool.

23
00:01:17.167 --> 00:01:20.702
&gt;&gt; Brian Holt: Furthermore what you can do
is you can actually cd into this coverage

24
00:01:20.702 --> 00:01:22.508
directory that I created for you.

25
00:01:22.508 --> 00:01:25.401
And you can go into the lcov-report.

26
00:01:27.908 --> 00:01:34.580
&gt;&gt; Brian Holt: And
then you can say open index.html.

27
00:01:34.580 --> 00:01:37.852
This is, let's say I can make
this a little bigger for you.

28
00:01:37.852 --> 00:01:42.107
This is an auto generated
report from Istanbul.

29
00:01:42.107 --> 00:01:44.666
So I can click into ShowCard and
I can see,

30
00:01:44.666 --> 00:01:47.313
it's like hey this never got run, right.

31
00:01:47.313 --> 00:01:50.175
This part in here, this red par.

32
00:01:50.175 --> 00:01:55.106
But, I at least saw this,
I at least saw this, right.

33
00:01:56.124 --> 00:02:00.666
&gt;&gt; Brian Holt: And
then you can come in here to search.jsx.

34
00:02:00.666 --> 00:02:08.012
And this is something that I think
is pretty cool for you to see.

35
00:02:08.012 --> 00:02:10.686
If you look down here on line 28,

36
00:02:10.686 --> 00:02:15.962
this got run 60 times just in
the span of our little tests, right.

37
00:02:15.962 --> 00:02:20.023
That was for, yeah,
all the various tests that we ran.

38
00:02:20.023 --> 00:02:24.027
So this lets you know,
like this part right here, line 28,

39
00:02:24.027 --> 00:02:26.799
that's gotta be a pretty optimized code,

40
00:02:26.799 --> 00:02:31.345
because just with a couple re-renders,
we ran this code 60 times.

41
00:02:33.521 --> 00:02:36.235
&gt;&gt; Brian Holt: So
this might even tell you something,

42
00:02:36.235 --> 00:02:40.687
like this particular toUpperCase
business we're doing here.

43
00:02:40.687 --> 00:02:42.936
We should probably cache that, right?

44
00:02:42.936 --> 00:02:47.091
Because running toUpperCase with doing
this template string a bunch of times,

45
00:02:47.091 --> 00:02:48.899
it could be a lot more performant.

46
00:02:48.899 --> 00:02:50.308
Especially if you're gonna
be doing this a lot.

47
00:02:50.308 --> 00:02:53.698
So all this good stuff to know.

48
00:02:53.698 --> 00:03:00.081
Same with this map right here, 47 times,
all things that you might wanna consider.

49
00:03:01.553 --> 00:03:03.153
&gt;&gt; Brian Holt: Any questions?

50
00:03:03.153 --> 00:03:04.593
It's pretty cool, right?

51
00:03:04.593 --> 00:03:08.868
All this stuff we just got for
free cuz Jest just does it for you.

52
00:03:08.868 --> 00:03:13.581
Which is coming from Istanbul,
which is a pretty cool library.

53
00:03:13.581 --> 00:03:17.190
Another reason why I like Jest,
cuz setting this up can be kind of a pain.

54
00:03:22.501 --> 00:03:27.190
&gt;&gt; Brian Holt: So let's go just
put that into our package.json,

55
00:03:27.190 --> 00:03:30.470
so we can have that kind of forever.

56
00:03:30.470 --> 00:03:37.802
So we're gonna do one more underneath test
here, and it's gonna be test:coverage.

57
00:03:37.802 --> 00:03:41.030
And it's gonna be jest --coverage.

58
00:03:47.470 --> 00:03:51.711
&gt;&gt; Brian Holt: So something that people
tell me that I probably do too much is I

59
00:03:51.711 --> 00:03:55.395
put too much into the scripts
part of package.json.

60
00:03:55.395 --> 00:04:00.733
There's no reason I can't just
do yarn test -- --coverage.

61
00:04:00.733 --> 00:04:04.961
The problem is I forget this
stuff all the time, right?

62
00:04:04.961 --> 00:04:08.930
If I don't run coverage very often,
which to be honest with you I don't,

63
00:04:08.930 --> 00:04:11.440
I forget the name of
that godamn parameter is.

64
00:04:11.440 --> 00:04:14.240
But it's really easy for
me to open the package.json and say cool,

65
00:04:14.240 --> 00:04:15.484
here's all the stuff I can do.

66
00:04:15.484 --> 00:04:19.002
So that's why I put everything into here.

67
00:04:19.002 --> 00:04:24.109
So, something I wanted to kind
of say is people take test

68
00:04:24.109 --> 00:04:29.432
covers to be like a gospel,
like a core matrix of the code,

69
00:04:29.432 --> 00:04:33.907
and I think it's kind of
bullshit in my opinion.

70
00:04:33.907 --> 00:04:40.123
Reason being is that this says that you
have 80% test coverage of showCard.

71
00:04:40.123 --> 00:04:43.633
We have not tested a thing about ShowCard,
all we did was import it.

72
00:04:43.633 --> 00:04:47.063
We haven't really validated anything
that it's supposed to actually be doing.

73
00:04:47.063 --> 00:04:51.389
So this gives you good feelings about how
much coverage you have about ShowCard and

74
00:04:51.389 --> 00:04:53.280
you should now have good feelings.

75
00:04:53.280 --> 00:04:57.337
You should not have them, because
we're not testing it at all, right?

76
00:04:57.337 --> 00:05:01.356
So be extremely careful about how
much faith you put into coverage.

77
00:05:01.356 --> 00:05:03.646
It's a good secondary metric,
don't get me wrong.

78
00:05:03.646 --> 00:05:07.738
If you have high test coverage,
that's a positive indication

79
00:05:07.738 --> 00:05:12.368
of things that you are doing, but
because you have high test coverage,

80
00:05:12.368 --> 00:05:15.472
do not feel good about yourself,
[LAUGH] right?

81
00:05:15.472 --> 00:05:16.353
That's all I wanna say.

82
00:05:18.682 --> 00:05:24.102
&gt;&gt; Speaker 2: Functions column a little
more reliable on that, would it show 0%?

83
00:05:24.102 --> 00:05:25.894
&gt;&gt; Brian Holt: I'm gonna say no,

84
00:05:25.894 --> 00:05:31.165
I mean it's certainly not
a good thing that it's 0%.

85
00:05:31.165 --> 00:05:34.781
But you could have a 100%
function coverage and

86
00:05:34.781 --> 00:05:37.398
still not really be doing anything.

87
00:05:37.398 --> 00:05:38.142
Yeah.

88
00:05:41.303 --> 00:05:43.717
&gt;&gt; Brian Holt: I mean, in this particular
case where it's zero out of one.

89
00:05:43.717 --> 00:05:47.588
That is a strong indication that you're
not actually really doing anything.

90
00:05:47.588 --> 00:05:50.693
But I can still see cases where you
would have a be pretty high and

91
00:05:50.693 --> 00:05:51.637
still not really.

92
00:05:55.606 --> 00:05:59.186
&gt;&gt; Brian Holt: So I would say,
if we go back to that,

93
00:05:59.186 --> 00:06:03.933
this is a good way of
deriving negative signals.

94
00:06:03.933 --> 00:06:07.831
So if these numbers are low,
then you definitely have a problem, right?

95
00:06:07.831 --> 00:06:10.965
If they're high you might
still have a problem.

96
00:06:10.965 --> 00:06:13.365
That's how I wanna phrase that.

97
00:06:13.365 --> 00:06:14.601
&gt;&gt; Speaker 3: I think
I just missed a step,

98
00:06:14.601 --> 00:06:16.570
how do you get to that
screen on your browser?

99
00:06:16.570 --> 00:06:19.699
&gt;&gt; Brian Holt: So
if you go in here to your

100
00:06:19.699 --> 00:06:24.283
project,
&gt;&gt; Brian Holt: When you run

101
00:06:24.283 --> 00:06:28.218
coverage it generates this
directory right there, right?

102
00:06:28.218 --> 00:06:29.657
So I just opened it in my browser.

103
00:06:29.657 --> 00:06:35.935
So you can go into cd coverage,
and then it's lcov-report.

104
00:06:35.935 --> 00:06:38.887
And then,
this is just a website that you can open.

105
00:06:38.887 --> 00:06:42.759
So I just said open index.html,
which, that's a Mac thing.

106
00:06:42.759 --> 00:06:44.844
So if you're using Linux, but

107
00:06:44.844 --> 00:06:49.509
if you're using Mac that'll just
open it in your favorite browser.

