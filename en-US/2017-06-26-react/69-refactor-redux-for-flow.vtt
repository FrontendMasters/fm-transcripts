WEBVTT

1
00:00:00.410 --> 00:00:01.980
&gt;&gt; Brian Holt: So
kinda to recap where we were,

2
00:00:01.980 --> 00:00:06.240
we've now integrated Redux into
our application, it now works.

3
00:00:06.240 --> 00:00:10.010
So if I type black right there,
and I go into Black Mirror and

4
00:00:10.010 --> 00:00:12.770
then I come back out of it,
notice that black is still up there.

5
00:00:14.450 --> 00:00:16.748
That's because Redux
is keeping that state.

6
00:00:21.612 --> 00:00:22.503
&gt;&gt; Brian Holt: And, yeah, so

7
00:00:22.503 --> 00:00:24.270
we were able to do that.

8
00:00:24.270 --> 00:00:28.620
It's not fun to refactor to include Redux,
cuz it involves

9
00:00:28.620 --> 00:00:32.480
touching a lot of pieces of your code, and
those sorts of refactors are the worst.

10
00:00:32.480 --> 00:00:34.880
There's lots of potential for
breakage, but

11
00:00:34.880 --> 00:00:38.050
now that it's in there it's actually
pretty convenient to keep using it and

12
00:00:38.050 --> 00:00:42.710
to keep dispatching actions via
the reducers and all that kind of stuff.

13
00:00:43.820 --> 00:00:48.790
So something that we have not done yet is
we have not integrated flow into Redux yet

14
00:00:48.790 --> 00:00:52.480
and I did this on purpose because you
can do Redux, again, without flow.

15
00:00:52.480 --> 00:00:57.040
I wanted to show you how to do that,
but now that you've seen how to do

16
00:00:57.040 --> 00:01:01.320
Redux without flow, I wanna go back and
refactor to include flow and luckily,

17
00:01:01.320 --> 00:01:04.370
because of the patterns that we followed,
it's not gonna be terribly difficult.

18
00:01:05.520 --> 00:01:09.180
So the first thing I want you to do
is we're gonna open our type's file.

19
00:01:12.940 --> 00:01:15.310
This is inside of your
flow type directory.

20
00:01:16.410 --> 00:01:18.090
We'll gonna add three new types in here.

21
00:01:20.890 --> 00:01:25.150
For the most part of easy like
already rely on the part with it.

22
00:01:25.150 --> 00:01:29.110
If you notice inside
your MPM Directory here,

23
00:01:29.110 --> 00:01:34.590
down here you're gonna have some Redux
types down here already included,

24
00:01:34.590 --> 00:01:40.290
but what we're gonna do now is
we're going to go type our actions.

25
00:01:41.650 --> 00:01:46.180
And [COUGH] I admit that I totally
lifted this from the Facebook F8 app,

26
00:01:46.180 --> 00:01:50.290
that's kind of like
the best example app for

27
00:01:50.290 --> 00:01:53.630
how to use Flow with various
different components.

28
00:01:53.630 --> 00:01:55.290
So definitely one I would
suggest checking out.

29
00:01:56.830 --> 00:02:02.000
It was their open source app that
they wrote for their F8 conference.

30
00:02:04.020 --> 00:02:07.760
So the first thing we're gonna do is we're
going to declare all of the potential

31
00:02:07.760 --> 00:02:10.540
action types that we could,
that we can have.

32
00:02:10.540 --> 00:02:15.792
So the first one we'll gonna say is

33
00:02:15.792 --> 00:02:24.140
declare type ActionType
= 'SET_SEARCH_TERM'.

34
00:02:24.140 --> 00:02:28.705
This is what we'll call in enumerated
type, which, if you've worked in various

35
00:02:28.705 --> 00:02:33.260
other program languages,
you will usually see here and there.

36
00:02:33.260 --> 00:02:35.530
This is just saying,
I have this action type, and for

37
00:02:35.530 --> 00:02:38.480
this particular case our action type
can literally only be this string.

38
00:02:38.480 --> 00:02:42.390
If it's literally anything else,
you're gonna get a type checker error.

39
00:02:42.390 --> 00:02:45.700
However, as we add more action types,
we're just gonna keep adding them there,

40
00:02:45.700 --> 00:02:48.580
and so an action type can be
one of these strings, right?

41
00:02:48.580 --> 00:02:51.660
So for
this particular one it's set search term.

42
00:02:51.660 --> 00:02:54.160
So the second thing that we're gonna have,

43
00:02:54.160 --> 00:02:58.040
is we're going to have an action
type that's gonna be generic.

44
00:02:58.040 --> 00:03:03.560
So we're gonna say declare type ActionT,
and

45
00:03:03.560 --> 00:03:08.070
this is gonna take in an A,
which is gonna be an ActionType.

46
00:03:11.050 --> 00:03:15.620
That's gonna take in a P,
which is going to be some sort of payload.

47
00:03:17.420 --> 00:03:22.840
So we're just using A and
P to B generic types, right?

48
00:03:22.840 --> 00:03:24.260
I'll show you how to use this momentarily.

49
00:03:24.260 --> 00:03:29.880
So the first thing is gonna have the type,
right, cuz every action has a type.

50
00:03:29.880 --> 00:03:34.173
It's gonna be A and
it's gonna have the payload,

51
00:03:34.173 --> 00:03:39.449
which is gonna be P.
&gt;&gt; Brian Holt: Okay.

52
00:03:46.066 --> 00:03:49.950
&gt;&gt; Brian Holt: There we go.

53
00:03:49.950 --> 00:03:54.630
So these two types are purely for
internal use inside of this type file.

54
00:03:54.630 --> 00:03:57.280
The one that we're actually going
to export out into the world

55
00:03:57.280 --> 00:03:59.080
is called Action.

56
00:03:59.080 --> 00:04:05.165
So we're going to export Type Action

57
00:04:05.165 --> 00:04:13.424
= ActionT&lt;'SET_SEARCH_TERM', string.

58
00:04:13.424 --> 00:04:17.197
Type Action = ActtionT&lt;'SET_SEARCH_TERM,

59
00:04:17.197 --> 00:04:25.076
string.
&gt;&gt; Brian Holt: So

60
00:04:25.076 --> 00:04:28.508
we have action type, this is always
going to be a string, in this case,

61
00:04:28.508 --> 00:04:31.540
it's always gonna be the set
search term string, right?

62
00:04:31.540 --> 00:04:36.880
We have this kind of generic action type
that's gonna take in, as you can see here,

63
00:04:36.880 --> 00:04:39.270
it takes in this parameter and
this parameter.

64
00:04:39.270 --> 00:04:44.130
So it takes in an action type and it takes
in a payload type of some sort, right?

65
00:04:44.130 --> 00:04:46.850
Cuz your payloads can vary
from action to action, right?

66
00:04:46.850 --> 00:04:48.430
We're actually gonna write
one here momentarily,

67
00:04:48.430 --> 00:04:51.060
that it's gonna be an object, right?

68
00:04:51.060 --> 00:04:55.620
But for this particular one,
it's just gonna be a generic P, right?

69
00:04:55.620 --> 00:04:58.150
And the payload's going to be that, right?

70
00:04:58.150 --> 00:05:02.509
So for every time that we have
a SET_SEARCH_TERM action,

71
00:05:02.509 --> 00:05:06.100
it's type is going to be string for
the payload, right?

72
00:05:06.100 --> 00:05:10.530
Does that make sense?
&gt;&gt; Brian Holt: Sort of?

73
00:05:10.530 --> 00:05:11.190
&gt;&gt; Speaker 2: Could you explain that

74
00:05:11.190 --> 00:05:13.810
syntax?
&gt;&gt; Brian Holt: The angle

75
00:05:13.810 --> 00:05:14.900
brackets?
&gt;&gt; Speaker 2: Yeah.

76
00:05:14.900 --> 00:05:15.520
&gt;&gt; Brian Holt: Sure, so

77
00:05:15.520 --> 00:05:18.050
when you do these angle brackets,

78
00:05:18.050 --> 00:05:22.718
this is like parameters that you're
giving to that particular item.

79
00:05:22.718 --> 00:05:29.160
So for examplem you've done this earlier
where we had an array of show, right?

80
00:05:29.160 --> 00:05:33.590
So we're handing another
type to this type.

81
00:05:33.590 --> 00:05:35.480
So, in particular for this array of show,

82
00:05:35.480 --> 00:05:39.100
it's going to go validate that everything
inside of it is a show, right?

83
00:05:39.100 --> 00:05:41.980
For ours here that we're doing
we're gonna validate that

84
00:05:41.980 --> 00:05:45.370
the first item is going to
be the type of the action.

85
00:05:45.370 --> 00:05:50.660
And the second type, the P, is going to
be whatever the type of the payload is.

86
00:05:50.660 --> 00:05:56.060
So the payload for SET_SEARCH_TERMS
is always going to be a string.

87
00:05:56.060 --> 00:05:58.880
So if I try and create a SET_SEARCH_TERM
action that's a number,

88
00:05:58.880 --> 00:06:00.130
it's gonna fail my type checker,

89
00:06:00.130 --> 00:06:03.208
which is exactly what I want it to do.
&gt;&gt; Speaker 2: For sure, I guess

90
00:06:03.208 --> 00:06:06.797
I was curious is that an ES 6 [CROSSTALK].
&gt;&gt; Brian Holt: This is a flow,

91
00:06:06.797 --> 00:06:08.028
purely flow stuff, yeah.
&gt;&gt; Speaker 2: Okay,

92
00:06:08.028 --> 00:06:10.911
gotcha.
&gt;&gt; Brian Holt: Good

93
00:06:10.911 --> 00:06:15.172
question.
&gt;&gt; Brian Holt: And

94
00:06:15.172 --> 00:06:19.184
then what I'll do here for action,
right now, the only action

95
00:06:19.184 --> 00:06:23.210
that I have in this application
is this set search term action.

96
00:06:23.210 --> 00:06:26.330
But as we come and add more actions,
what we're gonna say is

97
00:06:26.330 --> 00:06:29.790
this can be this kind of action or
it can be this kind of action, right?

98
00:06:29.790 --> 00:06:32.230
We'll create each different kind
of action that we can have.

99
00:06:33.310 --> 00:06:36.320
Which will be great because flow will
actually be the one that's like hey,

100
00:06:36.320 --> 00:06:40.050
you're dispatched in this action and
that's not a valid action, right?

101
00:06:40.050 --> 00:06:43.043
That's gonna save you a ton of bugs
that way, but that you're not gonna be

102
00:06:43.043 --> 00:06:47.817
dispatching wrong sorts of actions.
&gt;&gt; Brian Holt: So

103
00:06:47.817 --> 00:06:50.926
this will get us started, and
as we go do the next actions,

104
00:06:50.926 --> 00:06:55.250
when we get to the asynchronous actions,
we'll go write another action types.

105
00:06:55.250 --> 00:06:57.909
You can see what it looks like when there
are multiple different types of actions.

106
00:07:01.470 --> 00:07:05.212
Okay, so, now we have to go opt
in all of our files to flow.

107
00:07:05.212 --> 00:07:12.178
So open reducers,
&gt;&gt; Brian Holt: And say at flow.

108
00:07:12.178 --> 00:07:16.344
Open store,

109
00:07:16.344 --> 00:07:20.509
add at flow,

110
00:07:20.509 --> 00:07:28.100
open action creators.

111
00:07:28.100 --> 00:07:31.352
By the way, you will still be getting this
lint error, we'll be fixing that here in

112
00:07:31.352 --> 00:07:33.814
just a little bit, but
if you're still seeing ESLint errors,

113
00:07:33.814 --> 00:07:38.736
that's expected.
&gt;&gt; Brian Holt: Save

114
00:07:38.736 --> 00:07:41.981
action creators.
&gt;&gt; Brian Holt: And

115
00:07:41.981 --> 00:07:47.980
then lastly we have actions, and we'll
need to go opt that one into Flow as well.

