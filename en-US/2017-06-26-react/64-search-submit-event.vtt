WEBVTT

1
00:00:00.500 --> 00:00:02.960
&gt;&gt; Brian Holt: So definitely is
something that we would wanna do

2
00:00:02.960 --> 00:00:05.840
because we wanna make search
read from as well, right?

3
00:00:05.840 --> 00:00:10.395
Cuz now we have searchTerm in reducts and
we have search as state of search, right?

4
00:00:10.395 --> 00:00:16.430
So lets go to search.jsx,

5
00:00:16.430 --> 00:00:19.990
and lets go break all of our tests again
which is exactly what we're gonna do.

6
00:00:21.270 --> 00:00:26.445
So we're gonna import { connect }

7
00:00:26.445 --> 00:00:34.633
from "react-redux".
&gt;&gt; Brian Holt: Okay,

8
00:00:34.633 --> 00:00:36.830
so we are actually going
to use our context here.

9
00:00:36.830 --> 00:00:40.560
So we're gonna see how to use context.

10
00:00:40.560 --> 00:00:48.253
Okay, so we have search which,
&gt;&gt; Brian Holt: Okay,

11
00:00:48.253 --> 00:00:49.780
that's what we're doing wrong here.

12
00:00:51.500 --> 00:00:56.150
Yep, so sideline this for a second.

13
00:00:56.150 --> 00:00:59.938
We actually need to go back to landing for
a second and finish doing this.

14
00:00:59.938 --> 00:01:05.013
Cuz the problem is we have no way of
actually getting to the search page,

15
00:01:05.013 --> 00:01:07.220
with our search term, right?

16
00:01:08.760 --> 00:01:13.140
So what we wanna do here is,
we're gonna be, import React, import that,

17
00:01:13.140 --> 00:01:16.420
and then we're gonna import Link,
which we did.

18
00:01:16.420 --> 00:01:23.229
We're going to import Object,
&gt;&gt; Brian Holt: From prop types,

19
00:01:23.229 --> 00:01:28.796
which I'll show you why in just a second.
&gt;&gt; Brian Holt: And

20
00:01:28.796 --> 00:01:30.191
we have a search term that's all good.

21
00:01:30.191 --> 00:01:34.634
We're gonna turn landing into a class
now because we're gonna have to do,

22
00:01:34.634 --> 00:01:37.510
we're gonna have to have methods.

23
00:01:37.510 --> 00:01:39.670
So class, let's just do it this way.

24
00:01:42.200 --> 00:01:46.666
Class landing, extends Reatc.Component.

25
00:01:46.666 --> 00:01:52.147
You have to import that up here

26
00:01:52.147 --> 00:01:58.354
as well.
&gt;&gt; Brian Holt: Okay,

27
00:01:58.354 --> 00:02:04.598
it's gonna have a render method.
&gt;&gt; Brian Holt: Which is just going to,

28
00:02:09.719 --> 00:02:14.071
&gt;&gt; Brian Holt: Return that, okay, and

29
00:02:14.071 --> 00:02:19.470
then I need have is this props.

30
00:02:19.470 --> 00:02:23.336
Which rewind to have up here, so

31
00:02:23.336 --> 00:02:30.685
props are that,
&gt;&gt; Brian Holt: Then again, I

32
00:02:30.685 --> 00:02:34.730
just love to sing the phrases are prettier
this is super ugly formatted, right?

33
00:02:37.650 --> 00:02:42.890
But the nice thing about it is, as soon
as I save, prettier just rescues me and

34
00:02:42.890 --> 00:02:45.970
fixes all of my indentations and
stuff like that, I really like that.

35
00:02:48.910 --> 00:02:52.620
So now we have to refer to
props as this stop props.

36
00:02:52.620 --> 00:02:59.770
So this stop props there,
and why did you do that?

37
00:02:59.770 --> 00:03:06.820
I don't want you to,
&gt;&gt; Brian Holt: There

38
00:03:06.820 --> 00:03:14.222
we go.
&gt;&gt; Brian Holt: Nice

39
00:03:14.222 --> 00:03:19.569
if those are on multiple lines.
&gt;&gt; Brian Holt: Cool.

40
00:03:25.000 --> 00:03:26.720
&gt;&gt; Brian Holt: So now we've agreed for

41
00:03:26.720 --> 00:03:31.536
a factor to be in ENX class, now what
we want to do is any time the user

42
00:03:31.536 --> 00:03:36.180
hits Enter in landing,
we want to route them to the search page,

43
00:03:36.180 --> 00:03:39.139
right?
&gt;&gt; Brian Holt: So

44
00:03:39.139 --> 00:03:43.130
the way we're gonna have to do that.

45
00:03:43.130 --> 00:03:46.160
Is we're gonna have to listen for
an enter keys, right?

46
00:03:46.160 --> 00:03:50.030
And as soon as they hit Enter,
we're going to change the location from

47
00:03:50.030 --> 00:03:51.900
the landing page to the search page,
right?

48
00:03:53.630 --> 00:03:56.660
So the way you do that is you have to get

49
00:03:56.660 --> 00:03:58.420
access to what's called
the history object.

50
00:03:58.420 --> 00:04:03.855
And so you're gonna say static,

51
00:04:03.855 --> 00:04:08.321
contextTypes = history:

52
00:04:08.321 --> 00:04:16.017
object.
&gt;&gt; Brian Holt: So

53
00:04:16.017 --> 00:04:20.427
what this is, one it's just
a good idea to declare that this

54
00:04:20.427 --> 00:04:24.960
component has a dependency
on this context item.

55
00:04:24.960 --> 00:04:29.660
But the other thing is, unless you declare
to react, it's like, hey I'm gonna be

56
00:04:29.660 --> 00:04:34.320
looking for this context item,
React actively hides context from you.

57
00:04:34.320 --> 00:04:38.896
The reason why is it does not want you
to use it unless you explicitly mean to.

58
00:04:38.896 --> 00:04:43.880
So it's gonna force you to say,
no React, I actually do want history.

59
00:04:43.880 --> 00:04:47.072
Otherwise, if I say this.context.history,
despite the fact that

60
00:04:47.072 --> 00:04:50.275
it's actually technically there,
it's not gonna let me access it.

61
00:04:50.275 --> 00:04:54.489
So you actually have to opt into that.

62
00:05:01.228 --> 00:05:01.857
&gt;&gt; Brian Holt: Okay, so

63
00:05:01.857 --> 00:05:04.460
the way we're going to make this work.

64
00:05:05.920 --> 00:05:10.540
And I find this to be a useful
way of handling events,

65
00:05:10.540 --> 00:05:12.065
in particular of keyboards.

66
00:05:12.065 --> 00:05:16.578
Cuz you can actually just have a form
above it, and then say, onSubmit.

67
00:05:16.578 --> 00:05:25.335
This.goToSearch.
&gt;&gt; Brian Holt: I will say

68
00:05:25.335 --> 00:05:28.846
this is not the only way to do it, this
is just one way I've found nice to do it.

69
00:05:41.166 --> 00:05:42.430
&gt;&gt; Brian Holt: Okay, and now we just need

70
00:05:42.430 --> 00:05:50.169
to write this go to search function.
&gt;&gt; Brian Holt: So

71
00:05:50.169 --> 00:05:53.000
goToSearch, goToSearch,
we're gonna make it

72
00:05:53.000 --> 00:05:57.220
an arrow function because it's going
to refer to something on context.

73
00:05:57.220 --> 00:06:01.366
So it's gonna be equal to,

74
00:06:01.366 --> 00:06:05.876
event: SyntheticEvent like

75
00:06:05.876 --> 00:06:11.789
that.
&gt;&gt; Brian Holt: And

76
00:06:11.789 --> 00:06:15.840
then, the first thing we're gonna
say is event.preventDefault.

77
00:06:15.840 --> 00:06:19.770
I'm sure many of you
have done that before.

78
00:06:19.770 --> 00:06:26.950
This is going to prevent
the forum from submitting.

79
00:06:26.950 --> 00:06:34.780
And then we're gonna say this,
&gt;&gt; Brian Holt: I didn't even use that.

80
00:06:38.850 --> 00:06:42.440
Well, yeah, okay.

81
00:06:44.130 --> 00:06:47.800
We actually don't even need
the context types here.

82
00:06:47.800 --> 00:06:52.340
I forgot the React router changes
the way that they do context types.

83
00:06:52.340 --> 00:06:56.400
So go ahead and delete that, and
delete the object from prop types.

84
00:06:59.730 --> 00:07:04.000
And instead,
you're gonna say this.props history, so

85
00:07:04.000 --> 00:07:08.610
the way they used to work with
react router like v3 and v4,

86
00:07:08.610 --> 00:07:13.750
is that you had to opt in and
use context types, access history.

87
00:07:13.750 --> 00:07:17.250
Now it's actually injected to every route.

88
00:07:17.250 --> 00:07:21.941
So we can actually, because landing
is a route it has access to history.

89
00:07:21.941 --> 00:07:28.834
So we're gonna say this.props.history.push

90
00:07:31.144 --> 00:07:31.994
&gt;&gt; Brian Holt: /search.

91
00:07:36.662 --> 00:07:37.850
&gt;&gt; Brian Holt: Okay.

92
00:07:37.850 --> 00:07:40.720
It's gonna say hey,
I don't know what history is.

93
00:07:40.720 --> 00:07:42.489
This is what flow is gonna say.

94
00:07:44.300 --> 00:07:46.940
Luckily we can type that pretty well.

95
00:07:47.960 --> 00:07:52.208
So come up here and say, import type.

96
00:07:56.385 --> 00:07:59.233
&gt;&gt; Brian Holt: {RouterHistory, yep,

97
00:07:59.233 --> 00:08:05.370
RouterHistory} from 'react-router-dom'.

98
00:08:05.370 --> 00:08:09.607
And then we can say
history is a RouterHistory

99
00:08:09.607 --> 00:08:13.572
type.
&gt;&gt; Brian Holt: That fixes

100
00:08:13.572 --> 00:08:17.450
everything.
&gt;&gt; Brian Holt: Yeah.

101
00:08:17.450 --> 00:08:18.290
&gt;&gt; Speaker 2: Yeah, there's a few

102
00:08:18.290 --> 00:08:19.020
different things.

103
00:08:19.020 --> 00:08:25.600
Could you use a redirect component?
&gt;&gt; Brian Holt: Totally could.

104
00:08:25.600 --> 00:08:29.832
So there's an imperative way and
a declarative way of doing it.

105
00:08:29.832 --> 00:08:34.844
So, react-router has a redirect
component that, if a redirect

106
00:08:34.844 --> 00:08:40.050
component ever gets rendered,
then it redirects somewhere else.

107
00:08:41.140 --> 00:08:45.200
I'm a little uneasy with that paradigm,
because you would

108
00:08:46.550 --> 00:08:50.110
do something like if blonde,
then redirect this way.

109
00:08:53.800 --> 00:08:57.450
Yeah, I prefer to just
use history directly, but

110
00:08:57.450 --> 00:09:02.330
that's up to you.
&gt;&gt; Speaker 2: Does

111
00:09:02.330 --> 00:09:07.050
using Redux eliminate the need to
use local React component states

112
00:09:07.050 --> 00:09:11.410
since each component can subscribe to
the particular portion of the Redux state?

113
00:09:12.660 --> 00:09:14.300
&gt;&gt; Brian Holt: That is up to you,

114
00:09:14.300 --> 00:09:19.085
I'm gonna say that the way I choose
to write React when I have Redux,

115
00:09:19.085 --> 00:09:21.700
cuz I kinda separate two
different kinds of state.

116
00:09:21.700 --> 00:09:26.150
I have application state and
I have view state, right?

117
00:09:26.150 --> 00:09:28.980
View state is something that's like
particular to the presentation.

118
00:09:28.980 --> 00:09:34.470
It's gonna be like is this in focus or
where am I scrolling like those

119
00:09:34.470 --> 00:09:39.170
sorts of things that have to do with how
I'm presenting my particular component.

120
00:09:39.170 --> 00:09:41.460
I still have that dev in react state.

121
00:09:41.460 --> 00:09:46.540
And then application state is things like,
things that came back from the API.

122
00:09:46.540 --> 00:09:52.600
And those sorts of things that could
be used across the application.

123
00:09:52.600 --> 00:09:55.540
That's kind of up to you how you
dev that up, I would say that

124
00:09:55.540 --> 00:10:00.250
the dividing between application and view
state is a pretty common way to do it.

125
00:10:00.250 --> 00:10:03.752
But totally up to you.
&gt;&gt; Speaker 2: Yeah,

126
00:10:03.752 --> 00:10:09.565
some people are saying that a global
apps state versus a local component,

127
00:10:09.565 --> 00:10:13.127
use set state for
the local component state,

128
00:10:13.127 --> 00:10:15.939
versus a global app state.
&gt;&gt; Brian Holt: Yep, totally.

129
00:10:22.754 --> 00:10:25.942
&gt;&gt; Speaker 2: Can't you use history

130
00:10:25.942 --> 00:10:30.176
directly from the router?
&gt;&gt; Brian Holt: I mean,

131
00:10:30.176 --> 00:10:31.139
this works this way.

132
00:10:31.139 --> 00:10:34.179
I think this is a good way of doing it.

133
00:10:34.179 --> 00:10:40.050
There's other ways to accessing history,
but I think this is good.

