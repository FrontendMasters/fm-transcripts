WEBVTT

1
00:00:00.500 --> 00:00:02.960
&gt;&gt; Brian Holt: So definitely is
something that we would wanna do

2
00:00:02.960 --> 00:00:05.840
because we wanna make search
read from as well, right?

3
00:00:05.840 --> 00:00:10.395
Cuz now we have searchTerm in reducts and
we have search as state of search, right?

4
00:00:10.395 --> 00:00:16.430
So lets go to search.jsx,

5
00:00:16.430 --> 00:00:19.990
and lets go break all of our tests again
which is exactly what we're gonna do.

6
00:00:21.270 --> 00:00:26.100
So we're gonna import { connect

7
00:00:26.100 --> 00:00:30.244
} from "react-redux".

8
00:00:34.312 --> 00:00:36.830
&gt;&gt; Brian Holt: Okay, so we are actually
going to use our context here.

9
00:00:36.830 --> 00:00:40.560
So we're gonna see how to use context.

10
00:00:40.560 --> 00:00:48.253
Okay, so we have search which,
&gt;&gt; Brian Holt: Okay,

11
00:00:48.253 --> 00:00:49.780
that's what we're doing wrong here.

12
00:00:51.500 --> 00:00:56.150
Yep, so sideline this for a second.

13
00:00:56.150 --> 00:00:59.938
We actually need to go back to landing for
a second and finish doing this.

14
00:00:59.938 --> 00:01:05.013
Cuz the problem is we have no way of
actually getting to the search page,

15
00:01:05.013 --> 00:01:07.220
with our search term, right?

16
00:01:08.760 --> 00:01:13.140
So what we wanna do here is,
we're gonna be, import React, import that,

17
00:01:13.140 --> 00:01:16.420
and then we're gonna import Link,
which we did.

18
00:01:16.420 --> 00:01:23.229
We're going to import Object,
&gt;&gt; Brian Holt: From prop types,

19
00:01:23.229 --> 00:01:26.187
which I'll show you why in just a second.

20
00:01:28.670 --> 00:01:30.191
&gt;&gt; Brian Holt: And
we have a search term that's all good.

21
00:01:30.191 --> 00:01:34.634
We're gonna turn landing into a class
now because we're gonna have to do,

22
00:01:34.634 --> 00:01:37.510
we're gonna have to have methods.

23
00:01:37.510 --> 00:01:39.670
So class, let's just do it this way.

24
00:01:42.200 --> 00:01:46.666
Class landing, extends Reatc.Component.

25
00:01:46.666 --> 00:01:53.907
You have to import that up here as well.

26
00:01:58.072 --> 00:01:59.724
&gt;&gt; Brian Holt: Okay,
it's gonna have a render method.

27
00:02:03.820 --> 00:02:04.598
&gt;&gt; Brian Holt: Which is just going to,

28
00:02:09.719 --> 00:02:14.071
&gt;&gt; Brian Holt: Return that, okay, and

29
00:02:14.071 --> 00:02:19.470
then I need have is this props.

30
00:02:19.470 --> 00:02:23.336
Which rewind to have up here, so

31
00:02:23.336 --> 00:02:30.685
props are that,
&gt;&gt; Brian Holt: Then again, I

32
00:02:30.685 --> 00:02:34.730
just love to sing the phrases are prettier
this is super ugly formatted, right?

33
00:02:37.650 --> 00:02:42.890
But the nice thing about it is, as soon
as I save, prettier just rescues me and

34
00:02:42.890 --> 00:02:45.970
fixes all of my indentations and
stuff like that, I really like that.

35
00:02:48.910 --> 00:02:52.620
So now we have to refer to
props as this stop props.

36
00:02:52.620 --> 00:02:59.770
So this stop props there,
and why did you do that?

37
00:02:59.770 --> 00:03:06.991
I don't want you to,
&gt;&gt; Brian Holt: There we go.

38
00:03:14.032 --> 00:03:15.510
&gt;&gt; Brian Holt: Nice if those
are on multiple lines.

39
00:03:19.143 --> 00:03:19.643
&gt;&gt; Brian Holt: Cool.

40
00:03:25.000 --> 00:03:28.698
&gt;&gt; Brian Holt: So now we've agreed for
a factor to be in ENX class,

41
00:03:28.698 --> 00:03:33.256
now what we want to do is any time
the user hits Enter in landing,

42
00:03:33.256 --> 00:03:36.789
we want to route them to the search page,
right?

43
00:03:38.918 --> 00:03:43.130
&gt;&gt; Brian Holt: So
the way we're gonna have to do that.

44
00:03:43.130 --> 00:03:46.160
Is we're gonna have to listen for
an enter keys, right?

45
00:03:46.160 --> 00:03:50.030
And as soon as they hit Enter,
we're going to change the location from

46
00:03:50.030 --> 00:03:51.900
the landing page to the search page,
right?

47
00:03:53.630 --> 00:03:56.660
So the way you do that is you have to get

48
00:03:56.660 --> 00:03:58.420
access to what's called
the history object.

49
00:03:58.420 --> 00:04:03.855
And so you're gonna say static,

50
00:04:03.855 --> 00:04:09.880
contextTypes = history: object.

51
00:04:15.841 --> 00:04:20.074
&gt;&gt; Brian Holt: So what this is,
one it's just a good idea to declare that

52
00:04:20.074 --> 00:04:24.960
this component has a dependency
on this context item.

53
00:04:24.960 --> 00:04:29.660
But the other thing is, unless you declare
to react, it's like, hey I'm gonna be

54
00:04:29.660 --> 00:04:34.320
looking for this context item,
React actively hides context from you.

55
00:04:34.320 --> 00:04:38.896
The reason why is it does not want you
to use it unless you explicitly mean to.

56
00:04:38.896 --> 00:04:43.880
So it's gonna force you to say,
no React, I actually do want history.

57
00:04:43.880 --> 00:04:47.072
Otherwise, if I say this.context.history,
despite the fact that

58
00:04:47.072 --> 00:04:50.275
it's actually technically there,
it's not gonna let me access it.

59
00:04:50.275 --> 00:04:54.489
So you actually have to opt into that.

60
00:05:01.228 --> 00:05:04.460
&gt;&gt; Brian Holt: Okay, so
the way we're going to make this work.

61
00:05:05.920 --> 00:05:10.540
And I find this to be a useful
way of handling events,

62
00:05:10.540 --> 00:05:12.065
in particular of keyboards.

63
00:05:12.065 --> 00:05:16.578
Cuz you can actually just have a form
above it, and then say, onSubmit.

64
00:05:16.578 --> 00:05:20.785
This.goToSearch.

65
00:05:24.903 --> 00:05:26.793
&gt;&gt; Brian Holt: I will say this
is not the only way to do it,

66
00:05:26.793 --> 00:05:28.846
this is just one way
I've found nice to do it.

67
00:05:41.166 --> 00:05:44.214
&gt;&gt; Brian Holt: Okay, and now we just need
to write this go to search function.

68
00:05:50.031 --> 00:05:54.036
&gt;&gt; Brian Holt: So goToSearch, goToSearch,
we're gonna make it an arrow function

69
00:05:54.036 --> 00:05:57.220
because it's going to refer
to something on context.

70
00:05:57.220 --> 00:06:01.366
So it's gonna be equal to,

71
00:06:01.366 --> 00:06:06.964
event: SyntheticEvent like that.

72
00:06:11.581 --> 00:06:15.840
&gt;&gt; Brian Holt: And then, the first thing
we're gonna say is event.preventDefault.

73
00:06:15.840 --> 00:06:19.770
I'm sure many of you
have done that before.

74
00:06:19.770 --> 00:06:26.950
This is going to prevent
the forum from submitting.

75
00:06:26.950 --> 00:06:34.780
And then we're gonna say this,
&gt;&gt; Brian Holt: I didn't even use that.

76
00:06:38.850 --> 00:06:42.440
Well, yeah, okay.

77
00:06:44.130 --> 00:06:47.800
We actually don't even need
the context types here.

78
00:06:47.800 --> 00:06:52.340
I forgot the React router changes
the way that they do context types.

79
00:06:52.340 --> 00:06:56.400
So go ahead and delete that, and
delete the object from prop types.

80
00:06:59.730 --> 00:07:04.000
And instead,
you're gonna say this.props history, so

81
00:07:04.000 --> 00:07:08.610
the way they used to work with
react router like v3 and v4,

82
00:07:08.610 --> 00:07:13.750
is that you had to opt in and
use context types, access history.

83
00:07:13.750 --> 00:07:17.250
Now it's actually injected to every route.

84
00:07:17.250 --> 00:07:21.941
So we can actually, because landing
is a route it has access to history.

85
00:07:21.941 --> 00:07:28.834
So we're gonna say this.props.history.push

86
00:07:31.144 --> 00:07:31.994
&gt;&gt; Brian Holt: /search.

87
00:07:36.662 --> 00:07:37.850
&gt;&gt; Brian Holt: Okay.

88
00:07:37.850 --> 00:07:40.720
It's gonna say hey,
I don't know what history is.

89
00:07:40.720 --> 00:07:42.489
This is what flow is gonna say.

90
00:07:44.300 --> 00:07:46.940
Luckily we can type that pretty well.

91
00:07:47.960 --> 00:07:52.208
So come up here and say, import type.

92
00:07:56.385 --> 00:07:59.233
&gt;&gt; Brian Holt: {RouterHistory, yep,

93
00:07:59.233 --> 00:08:05.370
RouterHistory} from 'react-router-dom'.

94
00:08:05.370 --> 00:08:10.282
And then we can say history
is a RouterHistory type.

95
00:08:13.349 --> 00:08:13.870
&gt;&gt; Brian Holt: That fixes everything.

96
00:08:17.350 --> 00:08:18.290
&gt;&gt; Brian Holt: Yeah.
&gt;&gt; Speaker 2: Yeah, there's a few

97
00:08:18.290 --> 00:08:19.020
different things.

98
00:08:19.020 --> 00:08:23.600
Could you use a redirect component?

99
00:08:24.600 --> 00:08:25.600
&gt;&gt; Brian Holt: Totally could.

100
00:08:25.600 --> 00:08:29.832
So there's an imperative way and
a declarative way of doing it.

101
00:08:29.832 --> 00:08:34.844
So, react-router has a redirect
component that, if a redirect

102
00:08:34.844 --> 00:08:40.050
component ever gets rendered,
then it redirects somewhere else.

103
00:08:41.140 --> 00:08:45.200
I'm a little uneasy with that paradigm,
because you would

104
00:08:46.550 --> 00:08:50.110
do something like if blonde,
then redirect this way.

105
00:08:53.800 --> 00:08:57.990
Yeah, I prefer to just use history
directly, but that's up to you.

106
00:09:02.120 --> 00:09:04.980
&gt;&gt; Speaker 2: Does using Redux
eliminate the need to use

107
00:09:04.980 --> 00:09:10.240
local React component states since each
component can subscribe to the particular

108
00:09:10.240 --> 00:09:11.410
portion of the Redux state?

109
00:09:12.660 --> 00:09:17.680
&gt;&gt; Brian Holt: That is up to you, I'm
gonna say that the way I choose to write

110
00:09:17.680 --> 00:09:21.700
React when I have Redux, cuz I kinda
separate two different kinds of state.

111
00:09:21.700 --> 00:09:26.150
I have application state and
I have view state, right?

112
00:09:26.150 --> 00:09:28.980
View state is something that's like
particular to the presentation.

113
00:09:28.980 --> 00:09:34.470
It's gonna be like is this in focus or
where am I scrolling like those

114
00:09:34.470 --> 00:09:39.170
sorts of things that have to do with how
I'm presenting my particular component.

115
00:09:39.170 --> 00:09:41.460
I still have that dev in react state.

116
00:09:41.460 --> 00:09:46.540
And then application state is things like,
things that came back from the API.

117
00:09:46.540 --> 00:09:52.600
And those sorts of things that could
be used across the application.

118
00:09:52.600 --> 00:09:55.540
That's kind of up to you how you
dev that up, I would say that

119
00:09:55.540 --> 00:10:00.250
the dividing between application and view
state is a pretty common way to do it.

120
00:10:00.250 --> 00:10:02.070
But totally up to you.

121
00:10:03.190 --> 00:10:07.972
&gt;&gt; Speaker 2: Yeah, some people are saying
that a global apps state versus

122
00:10:07.972 --> 00:10:10.877
a local component, use set state for

123
00:10:10.877 --> 00:10:15.299
the local component state,
versus a global app state.

124
00:10:15.299 --> 00:10:15.939
&gt;&gt; Brian Holt: Yep, totally.

125
00:10:22.754 --> 00:10:29.804
&gt;&gt; Speaker 2: Can't you use
history directly from the router?

126
00:10:29.804 --> 00:10:31.139
&gt;&gt; Brian Holt: I mean,
this works this way.

127
00:10:31.139 --> 00:10:34.179
I think this is a good way of doing it.

128
00:10:34.179 --> 00:10:40.050
There's other ways to accessing history,
but I think this is good.

