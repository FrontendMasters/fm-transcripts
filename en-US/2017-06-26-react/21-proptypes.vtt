WEBVTT

1
00:00:00.251 --> 00:00:03.951
&gt;&gt; Brian Holt: So I just push up v3-7,
so if you are following me along,

2
00:00:03.951 --> 00:00:05.361
that's where we are.

3
00:00:05.361 --> 00:00:08.336
And we are now going to fix
all of our linting errors, and

4
00:00:08.336 --> 00:00:12.341
hopefully from here on out, I won't
make you ignore lint errors anymore.

5
00:00:12.341 --> 00:00:17.503
Believe me, it pains my soul to see the
red outline on there, I just can't even.

6
00:00:17.503 --> 00:00:23.974
So I'm going to help you
also be able to not even.

7
00:00:23.974 --> 00:00:29.443
So what's going on here is
there is a package that used

8
00:00:29.443 --> 00:00:35.648
to be included with React in and
of itself called propTypes.

9
00:00:35.648 --> 00:00:39.842
As of 15.5,
they are no longer packaged with React.

10
00:00:39.842 --> 00:00:43.922
This is an effort to kind of trim
down the internal library of what

11
00:00:43.922 --> 00:00:46.427
React includes and doesn't include.

12
00:00:46.427 --> 00:00:51.340
It still isn't quite a clean break,
because there are certain parts of React

13
00:00:51.340 --> 00:00:55.420
that still rely on propTypes if you
want to be able to use them, so

14
00:00:55.420 --> 00:00:57.253
that's an ongoing effort.

15
00:00:57.253 --> 00:01:01.818
But they stripped out propTypes and
they also stripped out something called

16
00:01:01.818 --> 00:01:06.468
createClass, which we are not using at
all today cuz it's been deprecated.

17
00:01:06.468 --> 00:01:08.483
And they stripped out
a couple of other things.

18
00:01:08.483 --> 00:01:12.306
So I'm gonna show you first how to use
propTypes, because it is useful for

19
00:01:12.306 --> 00:01:12.993
you to know.

20
00:01:12.993 --> 00:01:15.602
Eventually we're going
to get to using Flow.

21
00:01:15.602 --> 00:01:18.944
And once we get to using Flow,

22
00:01:18.944 --> 00:01:24.444
that kind of supersedes our need for
propTypes.

23
00:01:24.444 --> 00:01:28.823
But I would say that using propTypes
is more popular than using Flow.

24
00:01:28.823 --> 00:01:31.704
So it's useful for
you to have that knowledge, and

25
00:01:31.704 --> 00:01:33.249
then we can get rid of them.

26
00:01:33.249 --> 00:01:37.237
So I want you to go and

27
00:01:37.237 --> 00:01:41.228
say import shape and

28
00:01:41.228 --> 00:01:46.640
string from prop-types.

29
00:01:46.640 --> 00:01:51.563
So prop-types is the actual
library that used to be included

30
00:01:51.563 --> 00:01:53.887
with React in and of itself.

31
00:01:53.887 --> 00:02:01.667
And only a month or
two ago was it stripped out, okay?

32
00:02:01.667 --> 00:02:07.047
Then we're gonna do underneath here,
underneath ShowCard we're gonna

33
00:02:07.047 --> 00:02:14.883
say ShowCard.propTypes,
&gt;&gt; Brian Holt: And

34
00:02:14.883 --> 00:02:19.282
I guess I should say propTypes
are by no means required,

35
00:02:19.282 --> 00:02:22.475
notice this is a linting error, right?

36
00:02:22.475 --> 00:02:25.417
And our app still builds,
it still runs just fine.

37
00:02:25.417 --> 00:02:28.164
What propTypes are gonna do is
kind of a two fold thing for you.

38
00:02:28.164 --> 00:02:32.516
First of all,
it's going to be a run time check for you,

39
00:02:32.516 --> 00:02:37.629
to see if you're including
the right properties into ShowCard.

40
00:02:37.629 --> 00:02:40.490
So what we're gonna do here,
is we're gonna say show,

41
00:02:42.371 --> 00:02:45.007
&gt;&gt; Brian Holt: shape, and then we're going

42
00:02:45.007 --> 00:02:51.550
to identify all the different properties
that we expect to be on the show.

43
00:02:51.550 --> 00:02:58.470
So we expect there to be at poster,
that's gonna be string.isRequired.

44
00:02:58.470 --> 00:03:05.166
We're gonna do title, which is also
going to be a string.isRequired.

45
00:03:05.166 --> 00:03:09.882
Then we're gonna do year,
which is a string as well, and

46
00:03:09.882 --> 00:03:12.452
that's going to be Required.

47
00:03:12.452 --> 00:03:19.902
And description which is going
to be a string.isRequired

48
00:03:19.902 --> 00:03:24.925
as well as the show itself is required.

49
00:03:24.925 --> 00:03:26.473
No more linting errors, right?

50
00:03:26.473 --> 00:03:27.525
So they all went away.

51
00:03:27.525 --> 00:03:31.134
So let's talk about what
actually propTypes are.

52
00:03:31.134 --> 00:03:32.556
So we did shape, right?

53
00:03:32.556 --> 00:03:38.157
Shape just means object, right?

54
00:03:38.157 --> 00:03:43.267
And I totally could just
do I think this works,

55
00:03:43.267 --> 00:03:46.551
so I could do shape like that.

56
00:03:54.767 --> 00:03:56.613
&gt;&gt; Brian Holt: Yep, yep, yep, yep, okay,

57
00:03:56.613 --> 00:03:58.323
so we could do this, right?

58
00:03:58.323 --> 00:04:00.695
And you could just say it's
going to be an object, and

59
00:04:00.695 --> 00:04:03.065
you would do this if you had
a case of it was an object and

60
00:04:03.065 --> 00:04:05.509
you didn't know what it was
gonna look like coming in.

61
00:04:05.509 --> 00:04:07.709
However, we know what it's
gonna look like, and so

62
00:04:07.709 --> 00:04:10.871
we're also going to identify the things
that are inside of shape, right?

63
00:04:10.871 --> 00:04:15.577
So we're gonna identify poster,
title, year, and description.

64
00:04:15.577 --> 00:04:22.284
If you do not put an isRequired, then as
you might imagine, it's optional, right?

65
00:04:22.284 --> 00:04:30.623
So it means that it's not going to send
you an error saying, hey you forgot this.

66
00:04:30.623 --> 00:04:34.377
I kind of wish that they had done
isRequired as being the default and

67
00:04:34.377 --> 00:04:35.450
then isOptional,

68
00:04:35.450 --> 00:04:41.086
because usually things are required.
&gt;&gt; Brian Holt: Also

69
00:04:41.086 --> 00:04:45.089
according to the Airbnb config, if it's
optional you have to give it a default

70
00:04:45.089 --> 00:04:47.334
prop.
&gt;&gt; Brian Holt: And

71
00:04:47.334 --> 00:04:51.935
you would do default props the same way,
you would say showcard.defaultprops equals

72
00:04:51.935 --> 00:04:58.810
whatever you want them to be by default.
&gt;&gt; Brian Holt: Okay, so any questions?

73
00:04:58.810 --> 00:05:03.048
And then the other thing I
wanted to say about propTypes.

74
00:05:03.048 --> 00:05:06.700
These run time checks are not incredibly
useful, they're kind of useful in that

75
00:05:06.700 --> 00:05:09.773
it'll tell you in the consoles like hey,
you forgot this, right?

76
00:05:09.773 --> 00:05:13.128
The real use for
these is that it's documentation, right?

77
00:05:13.128 --> 00:05:13.910
Anyone that comes in and

78
00:05:13.910 --> 00:05:16.267
looks at this component is gonna look
instantly down at the propTypes.

79
00:05:16.267 --> 00:05:19.562
It's like okay, it's gonna take in a show
and it's gonna have poster, title, year,

80
00:05:19.562 --> 00:05:20.283
and description.

81
00:05:20.283 --> 00:05:24.431
It's just like a summary of what the API
for that particular component is.

82
00:05:24.431 --> 00:05:27.962
That is,
I'm gonna say 95% of the use case.

83
00:05:27.962 --> 00:05:31.117
Cuz again, runtime checks,
by the time it's in runtime,

84
00:05:31.117 --> 00:05:34.030
you see they're broken and
you know it or not, right?

85
00:05:34.030 --> 00:05:38.766
Sometimes it'll be useful, it's like I
didn't know it wasn't including that.

86
00:05:38.766 --> 00:05:42.277
What happens if I say foo, and

87
00:05:42.277 --> 00:05:47.345
it's a string that's required, right?

88
00:05:47.345 --> 00:05:51.830
So now if I go into here,
and I refresh, yeah,

89
00:05:51.830 --> 00:05:56.315
ignore the show.foo thing,
worry about that

90
00:05:56.315 --> 00:06:02.048
later.
&gt;&gt; Brian Holt: Maybe let's do it this way,

91
00:06:11.381 --> 00:06:12.365
&gt;&gt; Brian Holt: Refresh again.

92
00:06:14.307 --> 00:06:15.519
&gt;&gt; Brian Holt: Okay, so right here this is

93
00:06:15.519 --> 00:06:16.690
what I'm talking about.

94
00:06:16.690 --> 00:06:22.891
It's gonna say, hey,
you said foo was required.

95
00:06:22.891 --> 00:06:31.483
No, ignore that too.
&gt;&gt; Brian Holt: It

96
00:06:31.483 --> 00:06:36.206
should give you an error saying, I wonder
if it's just being covered up by ESLint.

97
00:06:36.206 --> 00:06:42.038
But in any case, it should send you
an error into the console saying hey,

98
00:06:42.038 --> 00:06:45.493
this is not there, and it should be there.

99
00:06:45.493 --> 00:06:47.563
So that's kind of the point.

100
00:06:47.563 --> 00:06:50.995
Yeah?
&gt;&gt; Speaker 2: Can you give us an example

101
00:06:50.995 --> 00:06:53.914
of default propTypes?
&gt;&gt; Brian Holt: Yeah,

102
00:06:53.914 --> 00:06:58.578
we'll see if I can remember off the top of
my head, I think it just looks like this.

103
00:06:58.578 --> 00:07:03.509
And,
&gt;&gt; Brian Holt: We'll be using

104
00:07:03.509 --> 00:07:04.408
it later for sure.

105
00:07:16.800 --> 00:07:18.537
&gt;&gt; Brian Holt: And
let's just put it out here for fun

106
00:07:44.029 --> 00:07:44.993
&gt;&gt; Brian Holt: So default props,

107
00:07:44.993 --> 00:07:52.142
I think that's what it should be.
&gt;&gt; Brian Holt: Yeah,

108
00:07:52.142 --> 00:07:56.006
so you can see right there it's
rendering out stuff right there, right?

109
00:07:56.006 --> 00:08:00.088
So just saying like hey,
if you don't pass in these props,

110
00:08:00.088 --> 00:08:02.222
this is the default prop type.

111
00:08:02.222 --> 00:08:05.545
So again, these are not
technically required by React, but

112
00:08:05.545 --> 00:08:09.077
they are required by the Airbnb ESLint
rules that we're using.

113
00:08:09.077 --> 00:08:13.605
Reason being is that it just eliminates a
class of problem that you can have, right?

114
00:08:13.605 --> 00:08:20.082
How many times have you gone to say,
props.show.description.toUppercase and

115
00:08:20.082 --> 00:08:25.737
it was undefined instead of being
a string and so you got a runtime error.

116
00:08:25.737 --> 00:08:28.765
So it'll just eliminate
the class of error.

117
00:08:28.765 --> 00:08:32.347
In other words, its kinda annoying,
but ultimately useful.

