WEBVTT

1
00:00:00.000 --> 00:00:03.996
&gt;&gt; Brian Holt: Let's go put into
our package.json how to build.

2
00:00:03.996 --> 00:00:06.146
So we're gonna put build.

3
00:00:08.200 --> 00:00:12.088
&gt;&gt; Brian Holt: Now notice, I don't have
webpack installed globally right now

4
00:00:12.088 --> 00:00:14.974
because I was running it
from the node modules.

5
00:00:14.974 --> 00:00:18.301
Well, I can actually
just put webpack here and

6
00:00:18.301 --> 00:00:23.164
when you do yarn build or MPN run build,
it's actually smart enough

7
00:00:23.164 --> 00:00:28.134
to look first in its node modules
to see if it's there first, right?

8
00:00:28.134 --> 00:00:32.879
So every time I wanna build,
I'm just gonna say

9
00:00:32.879 --> 00:00:37.992
yarn webpack and
it's gonna build for me, right?

10
00:00:39.346 --> 00:00:44.699
&gt;&gt; Brian Holt: So
I just put build right there.

11
00:00:44.699 --> 00:00:50.000
So now if I go back to my command line and

12
00:00:50.000 --> 00:00:57.146
I say clear, yarn build,
notice it runs webpack.

13
00:00:59.771 --> 00:01:01.478
&gt;&gt; Brian Holt: And same thing happens.

14
00:01:02.956 --> 00:01:07.480
&gt;&gt; Brian Holt: Now I wanna show you
something else that's kind of a cool

15
00:01:07.480 --> 00:01:08.448
trick too.

16
00:01:08.448 --> 00:01:10.588
Say I wanted to run it with a -p again.

17
00:01:10.588 --> 00:01:16.258
I can say yarn build --, everything
after the -- is going to be provided

18
00:01:16.258 --> 00:01:21.749
as a command line argument to
the command being run underneath, right?

19
00:01:21.749 --> 00:01:26.630
So if I say -p,
notice it's gonna say webpack -p, right?

20
00:01:26.630 --> 00:01:29.049
So if you just wanna try
something out real quick,

21
00:01:29.049 --> 00:01:30.668
that's a easy cheap way to do it.

22
00:01:32.181 --> 00:01:34.208
&gt;&gt; Brian Holt: And
as was pointed out earlier,

23
00:01:34.208 --> 00:01:39.087
what's annoying about what's happening
right now is that I have to run build

24
00:01:39.087 --> 00:01:43.834
every single time I run a change of
file which is like a non-starter for me.

25
00:01:43.834 --> 00:01:45.517
I'm way too lazy to have to do that.

26
00:01:45.517 --> 00:01:49.961
So luckily webpack takes care of that for
you.

27
00:01:49.961 --> 00:01:58.161
If I just provide --watch,
&gt;&gt; Brian Holt: That's gonna build once and

28
00:01:58.161 --> 00:02:03.143
now notice that it doesn't exit,
it's still going.

29
00:02:03.143 --> 00:02:10.572
If I come in here to clientapp.jsx and
I change this to be like,

30
00:02:10.572 --> 00:02:16.193
instead of Silicon Valley I
put House of Cards.

31
00:02:16.193 --> 00:02:18.011
And I save it.

32
00:02:18.011 --> 00:02:23.064
Notice it rebuilt really fast because
it keeps everything in memory for you.

33
00:02:23.064 --> 00:02:26.987
And now if I refresh here,
it says House of Cards.

34
00:02:28.895 --> 00:02:33.478
&gt;&gt; Brian Holt: Any questions about that?

35
00:02:34.619 --> 00:02:35.294
&gt;&gt; Brian Holt: So again,

36
00:02:35.294 --> 00:02:40.180
let's go put that into our package.json
cuz I think that's useful to have.

37
00:02:40.180 --> 00:02:45.879
So what we're gonna do
here is we're gonna say,

38
00:02:45.879 --> 00:02:51.169
watch and it's gonna be webpack --watch.

39
00:02:53.964 --> 00:03:00.444
&gt;&gt; Brian Holt: Okay, and
now you can just say yarn watch,

40
00:03:00.444 --> 00:03:04.949
and you're off to the races.

41
00:03:04.949 --> 00:03:09.813
So the last thing I wanna
do that I wanna show you.

42
00:03:09.813 --> 00:03:12.435
So if I say, yarn lint right now,

43
00:03:12.435 --> 00:03:16.951
it's gonna lose its mind
about the bundle file, right?

44
00:03:16.951 --> 00:03:22.215
Because it's gonna have literally
every ESLint problem there is.

45
00:03:22.215 --> 00:03:24.097
We don't care, right?

46
00:03:24.097 --> 00:03:29.070
It's compiled code, we don't care
if it passes lint or not, right?

47
00:03:29.070 --> 00:03:32.837
We care that our source code passes lint.

48
00:03:32.837 --> 00:03:36.357
So real quick,
I want you to go create a new file, and

49
00:03:36.357 --> 00:03:38.920
I want you to call it .eslintignore.

50
00:03:38.920 --> 00:03:41.709
I think is what it's called.

51
00:03:41.709 --> 00:03:42.742
Yep.

52
00:03:43.761 --> 00:03:47.129
&gt;&gt; Brian Holt: And
then inside of .eslintignore,

53
00:03:47.129 --> 00:03:52.134
I want you to put public/ and
node_modules/ right?

54
00:03:52.134 --> 00:03:57.863
Because if some node maintainer
is not passing your lint rules,

55
00:03:57.863 --> 00:04:02.226
then you don't care about that either,
right?

56
00:04:02.226 --> 00:04:06.312
&gt;&gt; Speaker 2: Can you go
back to package.json?

57
00:04:06.312 --> 00:04:07.886
&gt;&gt; Brian Holt: Yeah, sure.

58
00:04:09.938 --> 00:04:14.546
&gt;&gt; Brian Holt: Now right after this,
I'll push a brand so

59
00:04:14.546 --> 00:04:20.827
you can have all the build,
config, and stuff like that.

60
00:04:22.796 --> 00:04:26.494
&gt;&gt; Brian Holt: So now,
if I come back here, and I say yarn lint,

61
00:04:26.494 --> 00:04:29.040
we should be passing lint again.

62
00:04:30.741 --> 00:04:35.756
&gt;&gt; Brian Holt: So if you ever have
errors with lint, the best thing to do

63
00:04:35.756 --> 00:04:41.963
is just ignore them, that's
ultimately what I'm getting at here.

64
00:04:41.963 --> 00:04:44.612
That's a joke, don't do that, [COUGH] but

65
00:04:44.612 --> 00:04:47.567
you can definitely ignore
your bundled files.

66
00:04:49.668 --> 00:04:53.955
&gt;&gt; Brian Holt: And the other thing I
believe I should check, I'm pretty sure

67
00:04:53.955 --> 00:04:59.164
prettier also reads your .eslintignore so
that's also helpful as well.

