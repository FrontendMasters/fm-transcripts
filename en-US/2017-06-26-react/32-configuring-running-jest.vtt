WEBVTT

1
00:00:00.340 --> 00:00:02.390
&gt;&gt; Brian Holt: Now we have this test,
so how do we run it?

2
00:00:02.390 --> 00:00:05.000
Let's go back to your
command line really quick.

3
00:00:06.350 --> 00:00:08.560
I have web pack running but
you don't have to have it running.

4
00:00:08.560 --> 00:00:09.850
I'm just gonna leave it cuz I'm lazy.

5
00:00:11.040 --> 00:00:11.541
Okay.

6
00:00:11.541 --> 00:00:18.206
And then what we're gonna do,
we're gonna say, ./node_modules/.bin/jest.

7
00:00:18.206 --> 00:00:19.690
Right.

8
00:00:19.690 --> 00:00:21.680
Or if you have Jest Global installed,
you can do that too.

9
00:00:24.040 --> 00:00:30.383
So, if I run that, it's automatically
gonna find Search.spec.jsx,

10
00:00:30.383 --> 00:00:35.720
and then it's going to fail
because it doesn't know import.

11
00:00:37.010 --> 00:00:39.550
That's right.
So let's go fix that too.

12
00:00:42.800 --> 00:00:46.430
So the problem is if we go back here,

13
00:00:48.220 --> 00:00:52.080
this is trying to be run in node and
node doesn't know how to do import, right?

14
00:00:52.080 --> 00:00:54.570
We've kind of talked about
that a little bit yesterday.

15
00:00:54.570 --> 00:00:57.100
That node does not yet
understand imports and text.

16
00:00:57.100 --> 00:00:58.540
And also even if it did,

17
00:00:58.540 --> 00:01:03.060
it would get here and it would throw
up because it doesn't understand jsx.

18
00:01:03.060 --> 00:01:08.540
Now what we're gonna have to do; is
we're gonna have to go our babel rc.

19
00:01:08.540 --> 00:01:12.200
So, we are back here.

20
00:01:12.200 --> 00:01:17.609
We're gonna have to add another top
level thing that's gonna say, hey,

21
00:01:17.609 --> 00:01:22.687
when in the testing environment you
need to also transform modules.

22
00:01:22.687 --> 00:01:25.255
So you're gonna put an env up here,

23
00:01:25.255 --> 00:01:29.288
which by the way is different
from than this env, okay?

24
00:01:29.288 --> 00:01:34.580
This is the babel preset env and
this is environmental..

25
00:01:35.760 --> 00:01:39.200
Doing different transformations
based on environmental variables.

26
00:01:39.200 --> 00:01:44.497
That's what this env refers to.
&gt;&gt; Brian Holt: Okay, and

27
00:01:44.497 --> 00:01:51.090
we're we're saying when node env
equals test, then run this plugin.

28
00:01:51.090 --> 00:01:52.740
That's what we're gonna do.

29
00:01:52.740 --> 00:01:59.204
So plugins,
&gt;&gt; Brian Holt: And all we're gonna do,

30
00:01:59.204 --> 00:02:04.297
the only additional
plugin that we're gonna

31
00:02:04.297 --> 00:02:11.142
run is
"transform-es2015-modules-commonjs".

32
00:02:14.613 --> 00:02:18.007
&gt;&gt; Brian Holt: And that gives, anyway It's

33
00:02:18.007 --> 00:02:23.360
actually, technically, this would work.

34
00:02:23.360 --> 00:02:27.130
You can also do babel-plugin,
if you wanna be totally verbose,

35
00:02:27.130 --> 00:02:30.360
like up here we did
transform-class-properties.

36
00:02:30.360 --> 00:02:33.137
If you omit the babel-plugin part, so

37
00:02:33.137 --> 00:02:37.910
if you just did that,
babel inserted for you, it's up to you.

38
00:02:37.910 --> 00:02:40.850
My notes will have both versions of it,
so either way.

39
00:02:40.850 --> 00:02:44.388
You don't have to be consistent.

40
00:02:44.388 --> 00:02:49.985
So we need to go add this
"transform-es2015-modules-commonjs" for

41
00:02:49.985 --> 00:02:52.288
the test environment, right.

42
00:02:52.288 --> 00:02:57.463
The reason we have to do this is that when
you're in the node environment, you have

43
00:02:57.463 --> 00:03:03.760
to transform es2015 modules to common js
or node's not gonna understand it, right.

44
00:03:03.760 --> 00:03:08.030
So we're saying when node env equals test,
we're gonna run this plugin right here.

45
00:03:09.190 --> 00:03:11.720
Keep in mind it's also going
to run everything up here.

46
00:03:11.720 --> 00:03:14.900
All of these ones up at the top,
it's always going to run 100% of the time,

47
00:03:14.900 --> 00:03:17.550
and that's also going to run this one.

48
00:03:17.550 --> 00:03:18.050
Oops.

49
00:03:19.330 --> 00:03:22.430
It's also going to run this one,

50
00:03:22.430 --> 00:03:28.763
this babel plugin-transform-
es201- modules-commonjs.

51
00:03:28.763 --> 00:03:35.455
It's also going to run this one
only in the test environment, okay?

52
00:03:35.455 --> 00:03:42.990
So, save that, and now we're going
to go back to our command line.

53
00:03:44.350 --> 00:03:48.340
And going to say NODE_ENV=test.

54
00:03:48.340 --> 00:03:52.695
By the way, this works for Bash, so
if you're in something like Fish,

55
00:03:52.695 --> 00:03:54.960
you have to do something different.

56
00:03:56.040 --> 00:03:58.004
I can show you for fish.
I don't know how to do it for ZSH or

57
00:03:58.004 --> 00:03:59.020
any of the other ones.

58
00:03:59.020 --> 00:04:04.244
So, anyway, node or not, we're gonna

59
00:04:04.244 --> 00:04:09.180
do .modules.bin/jest like that.

60
00:04:09.180 --> 00:04:11.530
So again this is for Bash.

61
00:04:11.530 --> 00:04:14.040
But I'm assuming if you're using another
shell that you're smart enough to

62
00:04:14.040 --> 00:04:18.680
translate that into something else.

63
00:04:22.020 --> 00:04:23.870
Okay?
Now it's able to understand

64
00:04:23.870 --> 00:04:27.922
what's going on.
&gt;&gt; Brian Holt: So

65
00:04:27.922 --> 00:04:33.450
let's talk about snapshots and
what we actually tested there, right?

66
00:04:33.450 --> 00:04:35.940
Cuz what we did was pretty terse.

67
00:04:35.940 --> 00:04:40.294
So if we come back to our spec.jsx,
spec.jsx,

68
00:04:40.294 --> 00:04:45.540
the search one,
what we did is we brought in search.

69
00:04:45.540 --> 00:04:48.212
So, this search component right here,
right?

70
00:04:48.212 --> 00:04:53.050
The one we wrote yesterday.
&gt;&gt; Brian Holt: We

71
00:04:53.050 --> 00:04:56.200
then rendered it out with
no additional parameters.

72
00:04:58.000 --> 00:05:01.128
We then took that component, and
we made it to a JSON structure.

73
00:05:01.128 --> 00:05:08.040
And then Jest has this fantastic ability
to do what's called snapshot testing.

74
00:05:08.040 --> 00:05:11.620
The first time you run Jest snapshot
testing, it's just going to

75
00:05:11.620 --> 00:05:15.190
accept the first time that you have
run it is the correct version.

76
00:05:15.190 --> 00:05:19.160
Then, in the future, it's going to
test to see if that's changed, right?

77
00:05:20.270 --> 00:05:22.771
So, if you actually look inside
of your test directory now.

78
00:05:22.771 --> 00:05:26.200
There's actually an underscore
underscore snapshots.

79
00:05:26.200 --> 00:05:27.840
Take a look there and open it.

80
00:05:27.840 --> 00:05:32.405
You can see that there's
a search.spec.jsx.snap and

81
00:05:32.405 --> 00:05:36.880
what you can see here is you can see
what it's actually rendering out.

82
00:05:39.840 --> 00:05:42.961
You can see it has a div up here,
a header, an H1, input.

83
00:05:42.961 --> 00:05:50.220
All of this stuff up here,
which is really cool, right?

84
00:05:50.220 --> 00:05:54.860
Now if I go back to search.spec.jsx,
sorry,

85
00:05:54.860 --> 00:05:58.476
what I meant is back to search.jsx.

86
00:05:58.476 --> 00:06:04.046
And I change this to be,
I don't know, something like, well,

87
00:06:04.046 --> 00:06:09.737
here in the header if I change this
to be something else in the H1.

88
00:06:09.737 --> 00:06:12.905
And I come back here and run this again,

89
00:06:12.905 --> 00:06:17.240
it's gonna fail my test
because something changed.

90
00:06:17.240 --> 00:06:18.593
Right.
It's gonna say,

91
00:06:18.593 --> 00:06:21.997
hey this used to have svideo and
now you have something else,

92
00:06:21.997 --> 00:06:25.950
your test now is failing
because something's changed.

93
00:06:25.950 --> 00:06:30.100
Now you might be telling yourself,
well sometimes my markup changes, right,

94
00:06:30.100 --> 00:06:31.520
like I want it to change.

95
00:06:31.520 --> 00:06:36.300
The cool thing about this is it's
actually quite easy to update.

96
00:06:36.300 --> 00:06:39.610
So once I see it's like no I actually
do want it to say something else,

97
00:06:39.610 --> 00:06:43.310
I just run Jest again with -u.

98
00:06:43.310 --> 00:06:45.571
And now it's going to
go rewrite my snapshot.

99
00:06:45.571 --> 00:06:49.580
And so now when I run it again,
its gonna pass, right?

100
00:06:49.580 --> 00:06:51.540
Because now I've accepted
that as the truth.

101
00:06:51.540 --> 00:06:54.614
So again, if you go back to our snap,

102
00:06:54.614 --> 00:06:59.099
now it says something else in here.
&gt;&gt; Audience 1: I know a couple of

103
00:06:59.099 --> 00:07:03.921
us are still getting
an unexpected token import after

104
00:07:03.921 --> 00:07:05.634
that update.
&gt;&gt; Brian Holt: Sure.

105
00:07:05.634 --> 00:07:06.168
&gt;&gt; Audience 1: I'm sure other people

106
00:07:06.168 --> 00:07:08.670
are as well.
&gt;&gt; Brian Holt: So,

107
00:07:08.670 --> 00:07:10.530
let's go look at our babel rc again.

108
00:07:13.190 --> 00:07:15.095
So, you need this env thing right here.

109
00:07:15.095 --> 00:07:16.270
Right.
Down at the bottom.

110
00:07:18.240 --> 00:07:22.215
So that in the test environment,
it's running this plugin,

111
00:07:22.215 --> 00:07:26.445
transform-es2015-modules-commonjs.
&gt;&gt; Brian Holt: If you don't have that

112
00:07:26.445 --> 00:07:31.730
you're gonna have a bad time.
&gt;&gt; Audience 1: It's just a typo for

113
00:07:31.730 --> 00:07:32.648
me, thank you.

114
00:07:32.648 --> 00:07:33.156
&gt;&gt; Brian Holt: Okay [LAUGH]

115
00:07:33.156 --> 00:07:33.779
&gt;&gt; Audience 1: Okay.
&gt;&gt; Brian Holt: [LAUGH]

116
00:07:33.779 --> 00:07:34.665
&gt;&gt; Audience 2: How do you create

117
00:07:34.665 --> 00:07:38.340
the snapshot again?
&gt;&gt; Brian Holt: [COUGH] So-

118
00:07:38.340 --> 00:07:39.650
&gt;&gt; Audience 2: That's a command thing?

119
00:07:39.650 --> 00:07:40.563
&gt;&gt; Brian Holt: When you create it for

120
00:07:40.563 --> 00:07:43.961
the first time you just have to run Jest,
it will just create it automatically,

121
00:07:43.961 --> 00:07:46.335
if it doesn't have one for
that particular snapshot.

122
00:07:46.335 --> 00:07:47.900
&gt;&gt; Audience 2: Okay interesting, and

123
00:07:47.900 --> 00:07:53.590
yeah cuz mine just runs, but it shows
the test passing but no snapshots.

124
00:07:53.590 --> 00:07:54.305
Is that creating any?
&gt;&gt; Brian Holt: So

125
00:07:54.305 --> 00:07:58.100
you need to have it inside of your spec,
right?

126
00:07:58.100 --> 00:08:03.420
So it's looking for this call right here,
the tomatchSnapshot.

127
00:08:03.420 --> 00:08:04.400
So that's all it's doing.

128
00:08:04.400 --> 00:08:07.530
Like this to snapshot function's
just saying like hey I'm going to

129
00:08:07.530 --> 00:08:12.340
be providing you some sort of JSON
structure, right, that's all it is.

130
00:08:12.340 --> 00:08:15.800
And then it's gonna just do that
snapshot sort of testing for

131
00:08:15.800 --> 00:08:17.247
you.
&gt;&gt; Audience 2: Yep,

132
00:08:17.247 --> 00:08:21.201
I was just missing the parenthesis.
&gt;&gt; Brian Holt: There you go.

133
00:08:21.201 --> 00:08:22.140
&gt;&gt; Audience 2: [LAUGH]

134
00:08:22.140 --> 00:08:23.060
&gt;&gt; Brian Holt: What's cool about this is,

135
00:08:23.060 --> 00:08:25.190
this is not just for React.

136
00:08:25.190 --> 00:08:28.030
So obviously, this is very well fitted for
React, right.

137
00:08:28.030 --> 00:08:30.400
But you could totally do this
with API responses, right.

138
00:08:30.400 --> 00:08:33.270
If you have like, if you're testing
in API, and you're expecting to

139
00:08:33.270 --> 00:08:37.240
return a certain JSON structure, you can
use snapshot testing for that as well.

140
00:08:39.170 --> 00:08:41.130
Be assured that you're,

141
00:08:41.130 --> 00:08:46.120
like the structure of your JSON for
your API is not changing over

142
00:08:46.120 --> 00:08:49.010
time unless you anticipate it to do that.
&gt;&gt; Audience 2: So

143
00:08:49.010 --> 00:08:54.220
could you kind of do a test driven design
where you'd actually layout your snapshot

144
00:08:54.220 --> 00:08:57.500
ahead of time and then say,
okay I expect my component to match.

145
00:08:57.500 --> 00:08:58.415
&gt;&gt; Brian Holt: I would not do that.

146
00:08:58.415 --> 00:09:03.460
Snapshot.spec.jsx, in fact,
I think it says it in there.

147
00:09:03.460 --> 00:09:07.280
I'm not telling you what you can and
can't do, by all means.

148
00:09:07.280 --> 00:09:09.370
You were not suppose
to edit these by hand.

149
00:09:11.810 --> 00:09:15.770
The other thing that people,
which may not be intuitive,

150
00:09:15.770 --> 00:09:17.966
is you are supposed to
check this in the Git.

151
00:09:17.966 --> 00:09:20.530
Right?
So if you ship this to someone else,

152
00:09:20.530 --> 00:09:22.990
they're supposed to get
the same snapshot as you.

153
00:09:22.990 --> 00:09:25.560
A lot of times people
feel kind of icky about

154
00:09:25.560 --> 00:09:27.860
checking in things that
are machine generated.

155
00:09:27.860 --> 00:09:31.640
But in this particular case
you wanna check these in, just

156
00:09:31.640 --> 00:09:36.095
cuz they are part of your testing suite.
&gt;&gt; Audience 2: And

157
00:09:36.095 --> 00:09:41.650
the __tests that you created,
that's a pre-defined path, right?

158
00:09:41.650 --> 00:09:46.539
I mean, cuz I didn't see where
we defined that anywhere.

159
00:09:46.539 --> 00:09:47.040
&gt;&gt; Brian Holt: No, so

160
00:09:47.040 --> 00:09:50.030
JS is a really smart testing suite.

161
00:09:50.030 --> 00:09:52.280
That it's just going to scour
your entire code base for

162
00:09:52.280 --> 00:09:56.220
things that say .spec.js, .jsx.

163
00:09:56.220 --> 00:09:58.939
So we could really put it in
that top level directory, but

164
00:09:58.939 --> 00:10:04.010
Airbnbs es.config is forcing us to
put it inside of the test directory.

165
00:10:05.820 --> 00:10:10.400
So if for me personally I want my test
to live as close to the components of

166
00:10:10.400 --> 00:10:14.100
the test as possible, right, so
that if I go into a directory and

167
00:10:14.100 --> 00:10:17.360
I see that test directory and I can just
open it and I can see all the test that

168
00:10:17.360 --> 00:10:21.510
pertain to those things,
I want them to live as close as possible.

169
00:10:21.510 --> 00:10:24.150
Not everyone shares that
particular desire right?

170
00:10:24.150 --> 00:10:27.353
Sometimes they wanna have their tests
totally separate in another directory

171
00:10:27.353 --> 00:10:30.470
that's totally aside from their code,
and its all your decision to make.

172
00:10:33.100 --> 00:10:37.530
But I'm right, that's what I'm getting at.

173
00:10:37.530 --> 00:10:40.250
Cool, questions about Snapshot testing?

174
00:10:40.250 --> 00:10:41.158
It's pretty magical, right?

175
00:10:41.158 --> 00:10:44.444
Pretty magical.

176
00:10:44.444 --> 00:10:48.500
Yeah.
&gt;&gt; Audience 3: How is Jest invoking babel?

177
00:10:48.500 --> 00:10:49.040
&gt;&gt; Brian Holt: It just does it

178
00:10:49.040 --> 00:10:51.790
automatically.
&gt;&gt; Audience 3: Okay.

179
00:10:51.790 --> 00:10:53.060
&gt;&gt; Brian Holt: It does, is the answer to

180
00:10:53.060 --> 00:10:54.890
that question [LAUGH].
&gt;&gt; Audience 3: Okay.

181
00:10:54.890 --> 00:11:01.010
And I don't see like any transpiled
JS files sitting anywhere.

182
00:11:01.010 --> 00:11:04.720
So is it just a in-memory pipeline that.
&gt;&gt; Brian Holt: Yeah,

183
00:11:04.720 --> 00:11:07.640
I think so, is the answer that question?

184
00:11:07.640 --> 00:11:10.150
I'm not exactly sure
where it's storing that?

185
00:11:10.150 --> 00:11:12.670
I mean there is babel cache and
things like that.

186
00:11:12.670 --> 00:11:16.191
But my guess is it might ready into
something like top directory something

187
00:11:16.191 --> 00:11:17.130
like that.

188
00:11:17.130 --> 00:11:18.776
But that's conjection,

189
00:11:18.776 --> 00:11:23.010
I'm not actually sure Yeah, Mark?
&gt;&gt; Audience 3: If I change one file and

190
00:11:23.010 --> 00:11:24.470
want to update the Snapshot,

191
00:11:24.470 --> 00:11:28.330
how do I do that?
&gt;&gt; Brian Holt: So if I come back here, so

192
00:11:28.330 --> 00:11:31.620
actually I'm gonna change
my title to be correct, so

193
00:11:31.620 --> 00:11:33.490
I'm gonna go back to svideo here.

194
00:11:33.490 --> 00:11:37.820
I'm also gonna get rid of this
initial string, so that search term.

195
00:11:38.870 --> 00:11:40.180
So I've modified it.

196
00:11:40.180 --> 00:11:44.080
If I run it again, right, it's gonna
fail cuz I changed my markup, right?

197
00:11:44.080 --> 00:11:46.850
It's gonna change in several places,
right?

198
00:11:46.850 --> 00:11:50.056
So like you know, before it was
only rendering out Game of Thrones,

199
00:11:50.056 --> 00:11:52.640
because I had game as
the initial search thing.

200
00:11:52.640 --> 00:11:57.633
Now it's rendering out everything.
&gt;&gt; Brian Holt: Okay,

201
00:11:57.633 --> 00:11:59.690
so that's why it's failing right now.

202
00:12:00.710 --> 00:12:06.733
So the answer to the online question,
I just run it again but with -u.

203
00:12:06.733 --> 00:12:11.580
If I run it again with -u,
it's gonna update the snapshots.

204
00:12:11.580 --> 00:12:16.440
I'm asserting that what I just
output is now the new truth.

205
00:12:16.440 --> 00:12:19.070
So now it's back to what it is.

206
00:12:19.070 --> 00:12:24.190
And if we go back and
look at our snapshot You can see here,

207
00:12:24.190 --> 00:12:26.840
it's all of this stuff.

208
00:12:35.380 --> 00:12:37.020
Other questions?
&gt;&gt; Audience 2: Who made

209
00:12:37.020 --> 00:12:38.850
Jest?
&gt;&gt; Brian Holt: Facebook.

210
00:12:38.850 --> 00:12:41.470
&gt;&gt; Audience 2: Is that Facebook?

211
00:12:41.470 --> 00:12:43.662
And you said it's jasmine underneath?
&gt;&gt; Brian Holt: Yup, jasmine two.

212
00:12:43.662 --> 00:12:45.104
&gt;&gt; Audience 2: Jasmine two, so

213
00:12:45.104 --> 00:12:49.080
what's the difference?
&gt;&gt; Brian Holt: Snapshots are specific to

214
00:12:49.080 --> 00:12:54.131
Jest, the smart finding of files is
specific to Jest, the automatic running

215
00:12:54.131 --> 00:12:59.664
of babel, it's just has a bunch of these
convenience features built on top of Jest.

216
00:13:01.010 --> 00:13:05.145
Another really cool thing is with Jest,
if you have a bunch of tests that you're

217
00:13:05.145 --> 00:13:09.321
running, like whole speeds, it'll run
them in parallel so it'll go faster.

218
00:13:09.321 --> 00:13:12.930
It will run the tests that last failed
first so that you can hopefully fail

219
00:13:12.930 --> 00:13:16.320
faster, rather than having to wait
to go through the entire test suite.

220
00:13:16.320 --> 00:13:21.070
There's just a whole boat load of really
useful things that they're doing for you.

221
00:13:23.130 --> 00:13:24.785
Yeah, cool indeed I think so.
&gt;&gt; Audience 1: Okay.

222
00:13:24.785 --> 00:13:29.490
May be a specific question but,
if you only want to update one or

223
00:13:29.490 --> 00:13:34.690
two files and not run the whole -u,
I imagine the -u is

224
00:13:34.690 --> 00:13:37.370
globally updating your tests.
&gt;&gt; Brian Holt: It is.

225
00:13:37.370 --> 00:13:39.280
I don't know.
&gt;&gt; Audience 1: You don't run into that

226
00:13:39.280 --> 00:13:40.780
often though?
&gt;&gt; Brian Holt: Yeah,

227
00:13:40.780 --> 00:13:43.180
I haven't run into that often enough.

228
00:13:43.180 --> 00:13:49.380
I'm wanna, let's see if we can figure
out we show a man just I don't know.

229
00:13:49.380 --> 00:13:53.101
I think you can pass a specific file
string, I don't know if you can do like

230
00:13:53.101 --> 00:13:56.341
per test level or prior to do that
per file level, I don't know,

231
00:13:56.341 --> 00:13:59.920
that's the answer to your question.
&gt;&gt; Audience 1: I must in this case if you

232
00:13:59.920 --> 00:14:05.000
wanna do that
&gt;&gt; Brian Holt: So,

233
00:14:05.000 --> 00:14:07.230
I'm getting sick of running
the super long command.

234
00:14:07.230 --> 00:14:09.650
So let's actually just go put
that into our package adjacent.

235
00:14:12.720 --> 00:14:14.720
So we're gonna put in
two commands real quick.

236
00:14:14.720 --> 00:14:18.480
The first one,
as you might imagine, is test jest.

237
00:14:18.480 --> 00:14:23.200
Pretty easy.
&gt;&gt; Brian Holt: The only

238
00:14:23.200 --> 00:14:26.417
thing that it Jest has is it
has a lot of mocking abilities,

239
00:14:26.417 --> 00:14:29.253
the kinda stuff that comes
with sign on built-in.

240
00:14:29.253 --> 00:14:32.886
I don't really know too much about them,
cuz they kind of a pain to use and

241
00:14:32.886 --> 00:14:35.930
I think mocking, a lot of times,
does more harm than good.

242
00:14:35.930 --> 00:14:37.770
[LAUGH] But it's all there.

243
00:14:39.830 --> 00:14:43.490
So, as you remember, even though I
don't have Jest globally installed,

244
00:14:43.490 --> 00:14:45.600
it can pull string from the node modules.

245
00:14:45.600 --> 00:14:46.690
And then I'm gonna create another one.

246
00:14:46.690 --> 00:14:54.110
And it's going to be test:update and
it's gonna be jest -u.

