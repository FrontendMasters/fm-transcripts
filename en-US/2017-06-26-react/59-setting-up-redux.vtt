WEBVTT

1
00:00:00.008 --> 00:00:02.400
&gt;&gt; Brian Holt: First thing we're gonna do
here is we're going to define our default

2
00:00:02.400 --> 00:00:07.482
state.
&gt;&gt; Brian Holt: So

3
00:00:07.482 --> 00:00:14.868
that's going to be equal to searchTerm.
&gt;&gt; Brian Holt: So,

4
00:00:14.868 --> 00:00:18.749
but we're gonna migrate first to
Redux is we're gonna take the search

5
00:00:18.749 --> 00:00:22.150
term searching and
we're going to migrate that into Redux.

6
00:00:22.150 --> 00:00:25.985
And then we're gonna make both landing and
search read from our Redux store for it.

7
00:00:25.985 --> 00:00:30.926
So const rootReducer =

8
00:00:30.926 --> 00:00:37.104
(state = DEFAULT_STATE,

9
00:00:37.104 --> 00:00:44.720
action)
&gt;&gt; Brian Holt: Okay?

10
00:00:44.720 --> 00:00:46.350
And I guess the other
thing is worth mentioning.

11
00:00:46.350 --> 00:00:51.160
I'm gonna show you how to do this
without flow first because flow

12
00:00:53.350 --> 00:00:56.850
makes Redux better,
in my opinion but again,

13
00:00:56.850 --> 00:00:59.130
it's more levels of
complexity on top of it.

14
00:00:59.130 --> 00:01:01.873
So I wanna show you how
to do it without first.

15
00:01:01.873 --> 00:01:07.370
So, switch (action.type) and

16
00:01:07.370 --> 00:01:11.729
default return state, and

17
00:01:11.729 --> 00:01:16.664
export default rootReducer.

18
00:01:16.664 --> 00:01:25.070
So let's talk about
what we did here first.

19
00:01:25.070 --> 00:01:27.730
At the top level of every
store is one reducer,

20
00:01:27.730 --> 00:01:30.820
right, in that case it's the rootReducer.

21
00:01:30.820 --> 00:01:34.330
And again,
when I say reducer it takes in state,

22
00:01:34.330 --> 00:01:37.710
it's takes it in action and
a returned state.

23
00:01:37.710 --> 00:01:39.010
That is what a rootReducer does.

24
00:01:39.010 --> 00:01:42.920
It has no side effects to borrow
from our functional friends and

25
00:01:42.920 --> 00:01:44.580
their terminologies.

26
00:01:44.580 --> 00:01:48.640
That means that I can call this 10
billion times with the same state and

27
00:01:48.640 --> 00:01:52.170
the same action and I'm always gonna
get the same state out of it, right?

28
00:01:52.170 --> 00:01:53.850
So you don't want anything
happening around it.

29
00:01:53.850 --> 00:01:58.980
You don't want it to have like a counter
here and say like counter++, right?

30
00:01:58.980 --> 00:02:02.250
Cuz that would be a side effect, right?

31
00:02:02.250 --> 00:02:05.190
That means if I call it 10 billion times,

32
00:02:05.190 --> 00:02:07.500
I'm gonna get different answers
every single time, right?

33
00:02:07.500 --> 00:02:09.030
I want it to be the same thing.

34
00:02:09.030 --> 00:02:13.910
Given the same input in, I want
the same output out every single time.

35
00:02:15.380 --> 00:02:22.118
That is absolutely essential with Redux.
&gt;&gt; Brian Holt: Okay,

36
00:02:22.118 --> 00:02:25.048
so you're gonna have one rootReducer, and

37
00:02:25.048 --> 00:02:30.800
then inevitably that rootReducer is
going to dispatch to other reducers.

38
00:02:30.800 --> 00:02:34.730
So to borrow a Flux terminology for
those of you who are familiar with Flux.

39
00:02:34.730 --> 00:02:37.670
The rootReducer is pretty much
the dispatch function, right.

40
00:02:37.670 --> 00:02:40.250
It's gonna take in and
that it's going to give that off

41
00:02:40.250 --> 00:02:43.760
to another reducer which is actually
gonna take care of the transformation.

42
00:02:43.760 --> 00:02:47.270
In this particular case,
we have no other reducers yet,

43
00:02:47.270 --> 00:02:50.920
we're just instantiating our rootReducer,
okay.

44
00:02:51.950 --> 00:02:54.180
Two other things about the rootReducer
that you have to know.

45
00:02:54.180 --> 00:02:56.880
It needs to take care
of the DEFAULT_STATE,

46
00:02:56.880 --> 00:02:58.036
which is what we've done here.

47
00:02:58.036 --> 00:03:06.340
This is ES6 to say, if state is undefined,
if this is called without state,

48
00:03:06.340 --> 00:03:10.198
then the default state is
going to be made state, right.

49
00:03:10.198 --> 00:03:13.010
So if state is undefined,
then it's going to be this, right.

50
00:03:13.010 --> 00:03:17.080
Here at the search term with
being empty string, okay.

51
00:03:17.080 --> 00:03:20.800
So it needs to take care
of this DEFAULT_STATE.

52
00:03:20.800 --> 00:03:24.460
Cuz the first thing that Redux is gonna do
is it's going to call the rootReducer with

53
00:03:24.460 --> 00:03:27.280
no state, to get the initial state, okay?

54
00:03:29.850 --> 00:03:32.160
Okay, the second thing is,

55
00:03:32.160 --> 00:03:36.060
is it needs to handle actions that it
doesn't know what they are, right?

56
00:03:36.060 --> 00:03:41.150
So in this particular case If it
doesn't know what the action type is,

57
00:03:41.150 --> 00:03:44.680
then it's just going to return state,
right.

58
00:03:44.680 --> 00:03:48.620
So if I call this with some random
action and it's just gonna say, cool,

59
00:03:48.620 --> 00:03:51.880
I don't know what it is here
have the state back, right.

60
00:03:51.880 --> 00:03:53.234
That's the second thing
that it has to has to

61
00:03:53.234 --> 00:03:57.564
do.
&gt;&gt; Brian Holt: Let's talk about what

62
00:03:57.564 --> 00:03:59.150
actions are for a second.

63
00:03:59.150 --> 00:04:03.570
Action are objects, and that's really
at the most base level what they are.

64
00:04:05.480 --> 00:04:10.340
They're gonna have a type which
is going to be a string, right?

65
00:04:10.340 --> 00:04:15.860
And, they're gonna have a payload
which is going to be a thing, right.

66
00:04:15.860 --> 00:04:20.242
It could be a string, it could be
a number, it could be a boolean,

67
00:04:20.242 --> 00:04:24.228
it could be another object,
it can be any number of things,

68
00:04:24.228 --> 00:04:29.517
right.
&gt;&gt; Brian Holt: And

69
00:04:29.517 --> 00:04:32.240
furthermore, they don't
actually have to be anything.

70
00:04:32.240 --> 00:04:34.860
Nothing is enforcing it to look like this.

71
00:04:34.860 --> 00:04:37.140
It's just a really good
idea to make it like this.

72
00:04:37.140 --> 00:04:40.086
This is called a Flux standard action,

73
00:04:40.086 --> 00:04:43.670
which is a defined way
of dispatching actions.

74
00:04:43.670 --> 00:04:48.159
So if you follow the the Flux standard
action way of creating actions then things

75
00:04:48.159 --> 00:04:52.648
that are created for Flux and things that
are created for MobX and all these other

76
00:04:52.648 --> 00:04:57.418
kind of state management systems, are also
going to work with your system, right.

77
00:04:57.418 --> 00:05:00.755
That's what the idea of using
Flux standard actions is for.

78
00:05:00.755 --> 00:05:04.056
That's why it's always called payload,
it's always called type.

79
00:05:04.056 --> 00:05:07.602
There's two others that we're not
gonna worry about, which is error,

80
00:05:07.602 --> 00:05:09.705
which is gonna be something else.

81
00:05:09.705 --> 00:05:12.885
And then the last one is
going to be metadata.

82
00:05:13.890 --> 00:05:16.451
Which is gonna be an object of other
metadata that you wanna include

83
00:05:16.451 --> 00:05:18.040
with your action.

84
00:05:18.040 --> 00:05:19.420
Again, we're not gonna use these today.

85
00:05:19.420 --> 00:05:26.231
We're just gonna use type in payload.
&gt;&gt; Brian Holt: Okay.

86
00:05:26.231 --> 00:05:31.978
So here we have basically the most
basic reducer that we can have.

87
00:05:31.978 --> 00:05:36.433
Okay, now I want you to go and
create another file

88
00:05:36.433 --> 00:05:41.420
called store.js.
&gt;&gt; Brian Holt: Looks like my notes

89
00:05:41.420 --> 00:05:48.545
are wrong here.
&gt;&gt; Brian Holt: Which is

90
00:05:48.545 --> 00:05:54.110
unfortunate.
&gt;&gt; Brian Holt: So you're going to import.

91
00:05:57.606 --> 00:06:02.676
&gt;&gt; Brian Holt: { CreateStore } from redux,

92
00:06:02.676 --> 00:06:08.721
and we're going to import reducer,

93
00:06:08.721 --> 00:06:13.791
well what ever you can call it,

94
00:06:13.791 --> 00:06:19.870
import reducer from ./reducers.

95
00:06:19.870 --> 00:06:23.913
I'm gonna say const store =

96
00:06:23.913 --> 00:06:29.520
createStore(reducer) and

97
00:06:29.520 --> 00:06:33.686
then we're going to export default store.

98
00:06:33.686 --> 00:06:38.140
[BLANK AUDIO] So

99
00:06:38.140 --> 00:06:43.060
there's not usually gonna be too
much to the store part of your app.

100
00:06:43.060 --> 00:06:47.270
If you're gonna do any other configuration
like introducing middlewares,

101
00:06:47.270 --> 00:06:50.450
which we'll talk about momentarily,
that stuff is gonna live here.

102
00:06:50.450 --> 00:06:52.422
But usually there's not
a whole lot to store.

103
00:06:56.659 --> 00:07:00.125
&gt;&gt; Brian Holt: Okay, I want you to create

104
00:07:00.125 --> 00:07:08.965
another file called actions.js.
&gt;&gt; Brian Holt: And

105
00:07:08.965 --> 00:07:14.735
what we're gonna do here in actions
is we're just gonna say export.

106
00:07:14.735 --> 00:07:19.656
Const SET_SEARCH_TERM =

107
00:07:19.656 --> 00:07:27.082
SET_SEARCH_TERM.
&gt;&gt; Brian Holt: So

108
00:07:27.082 --> 00:07:30.126
this is something that I do and
I would say something that is common but

109
00:07:30.126 --> 00:07:32.240
not something that you
necessarily have to do.

110
00:07:33.480 --> 00:07:40.150
Rather than, this is gonna yell you for
not making it.

111
00:07:40.150 --> 00:07:45.066
I'm just gonna do blah = blah,
I don't know.

112
00:07:45.066 --> 00:07:47.930
Anyway, is gonna yell at you for

113
00:07:47.930 --> 00:07:51.620
now because when you have one export
it wants it to be default, right?

114
00:07:51.620 --> 00:07:53.289
And this is a named export.

115
00:07:54.570 --> 00:07:58.210
so I would say for
now ignore it, it will fix it.

116
00:07:58.210 --> 00:08:00.270
Because eventually we'll have
more than one action type.

117
00:08:02.200 --> 00:08:02.836
Okay, so

118
00:08:02.836 --> 00:08:08.247
the reason why I do this this way where I
have these constants in this file is we're

119
00:08:08.247 --> 00:08:13.890
going to be referencing SET_SEARCH_TERM
in multiple different places.

120
00:08:13.890 --> 00:08:17.360
So it's good to have that reading
from one particular source.

121
00:08:17.360 --> 00:08:20.610
You don't have to do it this way and in
particular, when we start doing with flow,

122
00:08:20.610 --> 00:08:22.520
it will become mostly irrelevant.

123
00:08:22.520 --> 00:08:24.980
But I will still tell you that
I think this is a good idea.

124
00:08:26.680 --> 00:08:31.377
It is, sometimes, useful to have this
be a variable instead of it having

125
00:08:31.377 --> 00:08:35.335
like just referencing the string
literal set search terms.

126
00:08:35.335 --> 00:08:37.619
So I will say that this
is a common pattern so

127
00:08:37.619 --> 00:08:41.552
I encourage you to follow along and
then later make a decision of whether or

128
00:08:41.552 --> 00:08:44.330
not you wanna follow it.
&gt;&gt; Brian Holt: So

129
00:08:44.330 --> 00:08:47.231
this file is just gonna be a bunch
of constants being exported and

130
00:08:47.231 --> 00:08:51.870
that's it.
&gt;&gt; Brian Holt: And often the same thing,

131
00:08:51.870 --> 00:08:54.920
they don't have to be,
I'm just really bad at naming things and

132
00:08:54.920 --> 00:08:56.850
I'm even worse at naming things twice.

133
00:08:58.790 --> 00:09:03.950
So, oOkay,
make a new file called actionCreators.

134
00:09:08.365 --> 00:09:11.714
&gt;&gt; Brian Holt: Okay, and import {

135
00:09:11.714 --> 00:09:19.085
SET_SEARCH_TERM }
&gt;&gt; Brian Holt: From

136
00:09:19.085 --> 00:09:25.099
./actions.
&gt;&gt; Brian Holt: And

137
00:09:25.099 --> 00:09:31.799
then here we're gonna export a function.
&gt;&gt; Brian Holt: setSearchTerm

138
00:09:31.799 --> 00:09:39.212
which takes in a search term.
&gt;&gt; Brian Holt: And

139
00:09:39.212 --> 00:09:44.735
it returns.
&gt;&gt; Brian Holt: Type

140
00:09:44.735 --> 00:09:49.557
is going to be SET_SEARCH_TERM and

141
00:09:49.557 --> 00:09:52.823
the payload is going to be

142
00:09:52.823 --> 00:10:00.637
searchTerm.
&gt;&gt; Brian Holt: So,

143
00:10:00.637 --> 00:10:03.052
again it's gonna yell at you
because it's gonna wanna say,

144
00:10:03.052 --> 00:10:06.270
hey you only have one export,
there should be a default export.

145
00:10:06.270 --> 00:10:08.848
Just ignore it for
now cuz eventually we'll come back and

146
00:10:08.848 --> 00:10:13.661
have multiple exports.
&gt;&gt; Brian Holt: So again, the action

147
00:10:13.661 --> 00:10:18.164
creators is kind of optional but
I'm gonna say it's not really optional.

148
00:10:18.164 --> 00:10:23.105
What an action creator does is it takes
in, in this case, a search term and

149
00:10:23.105 --> 00:10:27.730
then it's going to return to you
a well-formatted action that can go

150
00:10:27.730 --> 00:10:29.822
straight into Redux, right.

151
00:10:29.822 --> 00:10:34.990
So given this or given this input,
this is a valid action for it, right?

152
00:10:34.990 --> 00:10:37.680
And then this is what's
going to go into Redux

153
00:10:37.680 --> 00:10:40.540
which is gonna hit the reducer, right?

154
00:10:40.540 --> 00:10:43.530
It's gonna switch on the action type,
right?

155
00:10:43.530 --> 00:10:48.096
And then based on that input,
it's going to update your store in some

156
00:10:48.096 --> 00:10:52.878
particular way.
&gt;&gt; Brian Holt: In fact,

157
00:10:52.878 --> 00:10:55.542
let's go back to reducer.js and

158
00:10:55.542 --> 00:11:01.167
let's actually make the reducer
that's going to do the update here.

159
00:11:01.167 --> 00:11:07.219
So we're gonna have const setSearchTerm
which is gonna be a reducer function.

160
00:11:07.219 --> 00:11:13.234
It's gonna take in state and
action, and given that.

161
00:11:18.169 --> 00:11:21.197
&gt;&gt; Brian Holt: It's going to return

162
00:11:21.197 --> 00:11:26.751
Object.assign empty object state and

163
00:11:26.751 --> 00:11:35.176
another object with {
searchTerm: action.payload }.

164
00:11:42.806 --> 00:11:44.282
&gt;&gt; Brian Holt: Okay, so Object.assign,

165
00:11:44.282 --> 00:11:48.776
if you're not familiar with it, It's gonna
basically do a left merge of this object.

166
00:11:48.776 --> 00:11:55.050
So this is an empty object so its a brand
new object so we're not modifying state.

167
00:11:55.050 --> 00:11:59.143
This is key,
do not modify the original state, right,

168
00:11:59.143 --> 00:12:03.880
you need to return a new state,
not modify the old one.

169
00:12:03.880 --> 00:12:09.070
Even if you say like,
state.searchTerm and then return that.

170
00:12:09.070 --> 00:12:12.780
Don't do that either,
that doesn't count, don't do it.

171
00:12:12.780 --> 00:12:15.462
You're gonna run into a ton of problems.

172
00:12:15.462 --> 00:12:18.110
Mostly that your stuff won't
update because it's just gonna do

173
00:12:18.110 --> 00:12:20.840
a shallow check to see if
the states changed or not.

174
00:12:20.840 --> 00:12:24.290
And if it's the same object that's being
returned because of the shallow check,

175
00:12:24.290 --> 00:12:26.310
it's gonna assume nothing is changed.

176
00:12:26.310 --> 00:12:29.150
So, you must return new state.

177
00:12:29.150 --> 00:12:31.240
Let's emphasize that again.

178
00:12:31.240 --> 00:12:33.660
You must return a new object.

179
00:12:33.660 --> 00:12:35.380
Don't return the old one, okay.

180
00:12:36.580 --> 00:12:38.370
So new object.

181
00:12:38.370 --> 00:12:40.960
We're going to merge all the state
that was in there previously.

182
00:12:40.960 --> 00:12:44.050
We don't wanna overwrite anything
that's already in state, right.

183
00:12:44.050 --> 00:12:47.840
And then the last thing, the only thing
that we wanna overwrite is the searchTerm.

184
00:12:47.840 --> 00:12:49.280
So this one's going to
be the most salient.

185
00:12:49.280 --> 00:12:51.820
So this is the one that's going to
actually end up being in there.

186
00:12:51.820 --> 00:12:55.710
So this is going to override whatever
searchTerm that state had in this new

187
00:12:55.710 --> 00:12:57.195
object, right?

188
00:12:57.195 --> 00:13:03.060
Object.assign this came with ES6 so
that's all that that does.

189
00:13:04.250 --> 00:13:07.120
So now we've created this
function here setSearchTerm.

190
00:13:08.510 --> 00:13:11.500
So now we need to go right
into our rootReducer,

191
00:13:11.500 --> 00:13:13.130
into inside of the switch statement.

192
00:13:14.140 --> 00:13:22.310
So here we're gonna say
case SET_SEARCH_TERM.

193
00:13:22.310 --> 00:13:25.750
I guess we need to go import that as well.

194
00:13:25.750 --> 00:13:30.000
So up here at the top

195
00:13:30.000 --> 00:13:39.050
SET_SEARCH_TERM from ./actions.

196
00:13:39.050 --> 00:13:42.440
This is why I was saying that you need to
use SET_SEARCH_TERM in multiple places,

197
00:13:42.440 --> 00:13:45.860
that's why I like having one
constant to represent all of them.

198
00:13:45.860 --> 00:13:48.310
So you don't have a fat finger problem.

199
00:13:48.310 --> 00:13:55.160
I have fat fingers, so that's why.
&gt;&gt; Brian Holt: And

200
00:13:55.160 --> 00:14:02.890
then here, we wanna return
setSearchTerm with state and action.

201
00:14:02.890 --> 00:14:09.655
Okay, we're getting a lint error here
&gt;&gt; Brian Holt: And

202
00:14:09.655 --> 00:14:13.279
that's because this is a one-liner, right,
and all we're doing is returning so

203
00:14:13.279 --> 00:14:16.698
if you remember, you can do implicit
returns and with A‌i‌r‌b‌n‌b‌'s

204
00:14:16.698 --> 00:14:25.424
configurals you have to.
&gt;&gt; Brian Holt: And get

205
00:14:25.424 --> 00:14:31.502
rid of these ones down here at the end.
&gt;&gt; Brian Holt: So

206
00:14:31.502 --> 00:14:33.440
again, all I did was
make this a one-liner.

207
00:14:33.440 --> 00:14:34.800
This is now an implicit return.

208
00:14:36.050 --> 00:14:39.975
So now we have the SetSearchTerm,
this is also reducer, right.

209
00:14:39.975 --> 00:14:43.478
So the root reducer delegates
to the SetSearchTerm reducer.

210
00:14:43.478 --> 00:14:47.260
I just wanted to make you
familiar with that terminology.

211
00:14:47.260 --> 00:14:49.030
A reducer is anything
that takes in state and

212
00:14:49.030 --> 00:14:52.740
action returns new state,
that's the whole contract there.

