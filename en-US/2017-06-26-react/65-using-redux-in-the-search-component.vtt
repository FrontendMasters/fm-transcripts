WEBVTT

1
00:00:00.220 --> 00:00:06.435
&gt;&gt; Brian Holt: So let's go to Search,
so let's go to search.jsx.

2
00:00:06.435 --> 00:00:13.160
Come into search.jsx, we import
connect up here, ShowCard and Header.

3
00:00:13.160 --> 00:00:15.890
Cool, that all looks really good.

4
00:00:15.890 --> 00:00:20.698
What's gonna be really cool
about what we're gonna do,

5
00:00:20.698 --> 00:00:24.813
is we're going to eliminate
state from search.

6
00:00:24.813 --> 00:00:25.603
And we're going to eliminate
handleSearchTermChange,

7
00:00:34.069 --> 00:00:35.752
&gt;&gt; Brian Holt: And we're gonna eliminate

8
00:00:35.752 --> 00:00:36.562
props here.

9
00:00:39.937 --> 00:00:41.547
&gt;&gt; Brian Holt: So
all this stuff is going away,

10
00:00:41.547 --> 00:00:44.900
which means Search has now become
a status functional component.

11
00:00:44.900 --> 00:00:48.756
So now we can migrate this back into
something that's a little bit more simple.

12
00:00:48.756 --> 00:00:55.901
So I'm going to say,
const Search equals this,

13
00:00:55.901 --> 00:01:01.139
and we're going to get rid of that.

14
00:01:09.423 --> 00:01:14.697
&gt;&gt; Brian Holt: Okay, so now this is
back to being not a class anymore but

15
00:01:14.697 --> 00:01:16.503
being a function.

16
00:01:16.503 --> 00:01:20.434
It's gonna take in props,
which are going to be,

17
00:01:20.434 --> 00:01:23.537
we're gonna have to type those props.

18
00:01:23.537 --> 00:01:27.988
It's gonna take in searchTerm
which is gonna be a string and

19
00:01:27.988 --> 00:01:32.449
it's gonna take in shows which
is gonna be an array of show.

20
00:01:37.646 --> 00:01:42.947
&gt;&gt; Brian Holt: Then here instead
of saying searchTerm equals that

21
00:01:42.947 --> 00:01:48.130
we're gonna say is equal
to props.searchTerm.

22
00:01:48.130 --> 00:01:54.498
And handleSearchTermChange is going to be
equal to props.handleSearchTermChange,

23
00:01:54.498 --> 00:01:57.342
which we'll write here momentarily.

24
00:02:01.390 --> 00:02:05.320
&gt;&gt; Brian Holt: I guess that's
one worth putting on there,

25
00:02:05.320 --> 00:02:10.004
is handleSearchTermChange
is gonna be a function.

26
00:02:10.004 --> 00:02:16.520
Instead of having props.shows,
it gonna just be just that, no this.

27
00:02:16.520 --> 00:02:20.289
This is gonna be props.searchTerm.

28
00:02:23.852 --> 00:02:27.460
&gt;&gt; Brian Holt: That's getting them just
a little bit more succinct each time.

29
00:02:34.089 --> 00:02:35.040
&gt;&gt; Brian Holt: Not even that.

30
00:02:35.040 --> 00:02:35.810
I forgot, okay.

31
00:02:35.810 --> 00:02:40.117
So actually dropped this
handleSearchTermChange.

32
00:02:40.117 --> 00:02:41.557
Because now what we can do,

33
00:02:41.557 --> 00:02:45.442
instead of making search have to worry
about handleSearchTermChange and

34
00:02:45.442 --> 00:02:49.340
all these kind of stuff, it can just
make header write directly to Redux.

35
00:02:49.340 --> 00:02:52.182
And it doesn't have to be
the intermediary anymore,right?

36
00:02:55.772 --> 00:03:00.401
&gt;&gt; Brian Holt: So
actually get rid of all of that.

37
00:03:00.401 --> 00:03:04.927
And this is just gonna be showSearch now.

38
00:03:04.927 --> 00:03:07.978
Yep, yep, yep, yep, that's exactly it.

39
00:03:11.842 --> 00:03:17.807
&gt;&gt; Brian Holt: And now we're going
to filter on props.searchTerm.

40
00:03:17.807 --> 00:03:19.371
Why is that upset?

41
00:03:24.517 --> 00:03:25.232
&gt;&gt; Brian Holt: That's right.

42
00:03:30.209 --> 00:03:34.570
&gt;&gt; Brian Holt: So, we're gonna run up
against to a flow edge case right now.

43
00:03:34.570 --> 00:03:37.850
It's pretty good about following through,
but

44
00:03:37.850 --> 00:03:42.333
because we're inside of a block,
which is inside of a block here.

45
00:03:42.333 --> 00:03:47.004
It actually can't follow it
further enough for ESlint to say,

46
00:03:47.004 --> 00:03:50.011
hey you're never using this prop type.

47
00:03:50.011 --> 00:03:53.407
We actually are,
it's just ESlint can't go that deep.

48
00:03:53.407 --> 00:03:55.421
It's not smart enough, right?

49
00:03:55.421 --> 00:03:59.793
It's not actually evaluating your code,
it's doing static analysis.

50
00:03:59.793 --> 00:04:02.780
So what we're gonna do here,
is we're just gonna say.

51
00:04:02.780 --> 00:04:05.890
I know that this is what you think,
but you're actually wrong.

52
00:04:05.890 --> 00:04:11.644
Eslint-disable-line react/

53
00:04:11.644 --> 00:04:16.783
no-unused-prop-types.

54
00:04:19.520 --> 00:04:23.491
&gt;&gt; Brian Holt: And this is just us telling
eslint, no, I know better than you.

55
00:04:28.037 --> 00:04:32.537
&gt;&gt; Brian Holt: Okay, now we need to
make a maps state to props down here, so

56
00:04:32.537 --> 00:04:40.734
we're going to say, const mapStateToprops
&gt;&gt; Brian Holt: Equals state.

57
00:04:40.734 --> 00:04:47.765
And we're going to return an object
of searchTerm is state.searchTerm.

58
00:04:50.743 --> 00:04:55.456
&gt;&gt; Brian Holt: And then we're gonna
call connect with mapStateToProps

59
00:05:08.049 --> 00:05:09.312
&gt;&gt; Brian Holt: And we don't need this

60
00:05:09.312 --> 00:05:10.915
component up here anymore.

61
00:05:15.096 --> 00:05:15.777
&gt;&gt; Brian Holt: Okay, so

62
00:05:15.777 --> 00:05:21.480
now we've successfully disentangled
that component state from Search.

63
00:05:21.480 --> 00:05:25.600
It's now totally reading from Redux,
and it no longer has to care

64
00:05:25.600 --> 00:05:28.360
about writing to Redux because that's
gonna become header's problem.

