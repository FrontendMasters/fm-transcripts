WEBVTT

1
00:00:00.200 --> 00:00:02.820
&gt;&gt; Brian Holt: What we're gonna do now
is we're gonna go refactor our reducers

2
00:00:02.820 --> 00:00:04.140
a little bit.

3
00:00:04.140 --> 00:00:08.172
And you're also probably gonna be getting
some flow typing errors here because it's

4
00:00:08.172 --> 00:00:10.030
gonna sa,y I can't tell what this is.

5
00:00:14.049 --> 00:00:16.880
&gt;&gt; Brian Holt: But
we're gonna do something kinda cool here.

6
00:00:16.880 --> 00:00:20.751
So, I wanted to show you how to write
your own rootReducer to show you that

7
00:00:20.751 --> 00:00:23.862
rootReducer is nothing more
than just taking an action and

8
00:00:23.862 --> 00:00:26.158
routing it to some other reducer, right?

9
00:00:26.158 --> 00:00:27.955
It's a pretty simple function.

10
00:00:27.955 --> 00:00:32.382
So it's really easy to write yourself,
however there's a function from Redux

11
00:00:32.382 --> 00:00:36.611
called combine reducers that will
actually write this function for you, so

12
00:00:36.611 --> 00:00:40.726
you don't have to go in and write that
switch case for every single thing.

13
00:00:40.726 --> 00:00:45.066
Furthermore, it's actually going to silo
each piece of your state into its own

14
00:00:45.066 --> 00:00:47.608
reducer, which is pretty
cool in my opinion.

15
00:00:47.608 --> 00:00:50.023
So let's go ahead and do that.

16
00:00:50.023 --> 00:00:55.263
Up here, we're going to import,
&gt;&gt; Brian Holt: CombineReducers,

17
00:00:58.323 --> 00:00:59.478
&gt;&gt; Brian Holt: from

18
00:01:01.142 --> 00:01:01.958
&gt;&gt; Brian Holt: 'redux'.

19
00:01:03.384 --> 00:01:04.306
&gt;&gt; Brian Holt: Okay?

20
00:01:06.875 --> 00:01:11.835
&gt;&gt; Brian Holt: Now what we're gonna do,
&gt;&gt; Brian Holt: Is we're gonna

21
00:01:11.835 --> 00:01:14.700
refactor setSearchTerm a little bit.

22
00:01:14.700 --> 00:01:18.885
First thing is we're gonna call
the reducer the same thing as the name of

23
00:01:18.885 --> 00:01:19.595
the state.

24
00:01:19.595 --> 00:01:23.146
So instead of being setSearchTerm,
we're just gonna call it searchTerm, and

25
00:01:23.146 --> 00:01:24.954
I'll show you why here in just a second.

26
00:01:29.239 --> 00:01:33.734
&gt;&gt; Brian Holt: Okay, then state is going
to represent not the whole state of your

27
00:01:33.734 --> 00:01:39.311
entire redux store, it's going to
represent just that piece of state, right?

28
00:01:39.311 --> 00:01:43.023
So the default state for this is not
going to be this object up here, in fact,

29
00:01:43.023 --> 00:01:44.879
you can just go ahead and delete that.

30
00:01:46.600 --> 00:01:51.000
The default state of searchTerm is
going to be empty string, right?

31
00:01:53.280 --> 00:01:56.610
Cuz now this reducer is only going
to worry about searchTerm and

32
00:01:56.610 --> 00:01:57.970
nothing else, okay?

33
00:02:00.070 --> 00:02:02.759
Action, as you may have guessed,
is an action,

34
00:02:02.759 --> 00:02:05.061
which is that type which we just created.

35
00:02:07.995 --> 00:02:10.083
&gt;&gt; Brian Holt: And then here we're gonna
have to make this a whole method body.

36
00:02:14.978 --> 00:02:15.789
&gt;&gt; Brian Holt: And what this is gonna do

37
00:02:15.789 --> 00:02:18.470
here,
&gt;&gt; Brian Holt: I think you can

38
00:02:18.470 --> 00:02:19.093
even just get rid of that.

39
00:02:21.295 --> 00:02:23.882
&gt;&gt; Brian Holt: So now this reducer
is going to get run on every

40
00:02:23.882 --> 00:02:25.594
single action that happens.

41
00:02:25.594 --> 00:02:31.480
So you need to make sure and check that
it's the correct action for this reducer.

42
00:02:31.480 --> 00:02:39.422
So we're gonna say if (action.type
==== SET_SERACH_TERM),

43
00:02:39.422 --> 00:02:46.090
then you're going to return
action.payLoad, right?

44
00:02:46.090 --> 00:02:49.025
Otherwise you're just
going to return state.

45
00:03:00.184 --> 00:03:01.266
&gt;&gt; Brian Holt: Okay?

46
00:03:02.895 --> 00:03:04.502
&gt;&gt; Brian Holt: So
this is the new way that we're going to be

47
00:03:04.502 --> 00:03:05.670
writing reducers from now on.

48
00:03:05.670 --> 00:03:10.670
We're gonna write these single
responsibility reducers, and we're

49
00:03:10.670 --> 00:03:14.850
not gonna have this big reducers, worry
about multiple piece of state all at once.

50
00:03:14.850 --> 00:03:19.994
This is only gonna worry about
searchTerm and that's it, okay?

51
00:03:19.994 --> 00:03:25.132
You can actually just delete
all of rootReducer here and

52
00:03:25.132 --> 00:03:30.490
we're gonna say const
rootReducer = combineReducers,

53
00:03:30.490 --> 00:03:35.749
and what we wanna have here
is searchTerm: searchTerm.

54
00:03:38.323 --> 00:03:42.885
&gt;&gt; Brian Holt: So what this is saying
here is we have this piece of state

55
00:03:42.885 --> 00:03:47.349
called searchTerm, and
the one reducer that worries

56
00:03:47.349 --> 00:03:52.000
about searchTerm is called searchTerm,
right?

57
00:03:52.000 --> 00:03:54.059
Now the reason why I called
this searchTerm is so

58
00:03:54.059 --> 00:03:56.337
that I could take advantage
of a little ES6 nicety.

59
00:03:56.337 --> 00:04:01.829
Which is, if I have searchTerm: searchTerm
I can actually just say searchTerm and

60
00:04:01.829 --> 00:04:04.320
just cut it down to one thing.

61
00:04:04.320 --> 00:04:05.310
It's a new thing with ES6,

62
00:04:05.310 --> 00:04:10.239
it's just me being super lazy,
that's the sum of the story here.

63
00:04:12.050 --> 00:04:17.190
But searchTerm right there is the exact
same thing as searchTerm: searchTerm.

64
00:04:18.280 --> 00:04:20.270
So that's what combineReducers does for
you.

65
00:04:21.670 --> 00:04:25.437
I still see I have an error here,
could not resolve name.

66
00:04:30.802 --> 00:04:32.112
&gt;&gt; Brian Holt: Okay, sorry.

67
00:04:32.112 --> 00:04:33.550
So go back to your types file.

68
00:04:36.859 --> 00:04:40.065
&gt;&gt; Brian Holt: And you need to say it
ActionT equals, which is something I

69
00:04:40.065 --> 00:04:43.740
forgot there, and then you also
need the bar here and the bar here.

70
00:04:43.740 --> 00:04:47.768
And that's just the notation for
declaring the types like this.

71
00:04:51.279 --> 00:04:52.570
&gt;&gt; Brian Holt: Okay, and
that should fix our problems.

72
00:04:52.570 --> 00:04:55.399
So that's what I just fixed right there,
what I have highlighted.

73
00:05:02.026 --> 00:05:04.340
&gt;&gt; Brian Holt: Cool, and
now go back to reducers.

74
00:05:04.340 --> 00:05:05.490
&gt;&gt; Speaker 2: Sorry,
what are the bars for?

75
00:05:05.490 --> 00:05:07.123
Is that needed in generic types?

76
00:05:07.123 --> 00:05:07.925
&gt;&gt; Brian Holt: Mm-hm.

77
00:05:14.649 --> 00:05:16.563
&gt;&gt; Brian Holt: So go back to reducers and

78
00:05:16.563 --> 00:05:22.406
now hopefully action will be pleased
with what you've done, just make sure

79
00:05:32.942 --> 00:05:33.942
&gt;&gt; Brian Holt: Cool, so now we have to go

80
00:05:33.942 --> 00:05:37.200
fix something else, but that's okay,
we'll fix that here just momentarily.

81
00:05:37.200 --> 00:05:39.904
So that is correct,
that is working as expected.

82
00:05:43.387 --> 00:05:45.900
&gt;&gt; Brian Holt: Yep, cool.

83
00:05:45.900 --> 00:05:48.130
So combineReducers is really great.

84
00:05:48.130 --> 00:05:54.560
What I like about it is now searchTerm is
very much siloed just to this particular

85
00:05:54.560 --> 00:05:58.400
reducer and other reducers that don't
care about it will not see it, right?

86
00:05:58.400 --> 00:06:01.740
So all of that object merging and
stuff that we were doing previously

87
00:06:01.740 --> 00:06:04.682
combineReducer is just gonna do for
you behind the scenes.

88
00:06:08.566 --> 00:06:11.433
&gt;&gt; Brian Holt: And you can actually use
combineReducers kind of in tandem with

89
00:06:11.433 --> 00:06:12.510
other things as well.

90
00:06:12.510 --> 00:06:16.020
Like say you do have

91
00:06:16.020 --> 00:06:18.580
a reducer that needs to worry about
multiple pieces state all at once.

92
00:06:18.580 --> 00:06:23.910
You can write your own reducer
that takes care of those cases.

93
00:06:24.940 --> 00:06:26.230
And then at the bottom,

94
00:06:26.230 --> 00:06:32.650
use combineReducers to deal with all
the other single responsibility ones.

95
00:06:32.650 --> 00:06:34.100
So you can use combineReducers and

96
00:06:34.100 --> 00:06:37.570
write your own reducers all at once,
that's an acceptable way to go as well.

97
00:06:39.390 --> 00:06:43.480
So, I typically use combineReducers, but

98
00:06:43.480 --> 00:06:47.000
I wanted you to see that it's not
very complicated what it does.

99
00:06:47.000 --> 00:06:48.313
So, cool.

100
00:06:52.232 --> 00:06:56.961
&gt;&gt; Brian Holt: So I think the last
thing we have to do is go set a type on

101
00:06:56.961 --> 00:06:58.689
action creators.

102
00:07:00.100 --> 00:07:04.247
So we have searchTerm here, and we just
to need to tell it that that is a string.

103
00:07:09.115 --> 00:07:11.296
&gt;&gt; Brian Holt: It's still
pissed off about ESLint,

104
00:07:11.296 --> 00:07:14.630
but we are getting there in just a second.

105
00:07:14.630 --> 00:07:18.780
What I want to do is say
export default here, right?

106
00:07:20.000 --> 00:07:21.836
But that's not what we wanna do.

107
00:07:28.637 --> 00:07:33.582
&gt;&gt; Brian Holt: Okay, any questions about
combineReducers or how we typed redux?

108
00:07:37.252 --> 00:07:40.907
&gt;&gt; Brian Holt: That's really it for
reducts itself, right?

109
00:07:40.907 --> 00:07:44.990
That's pretty much all
the surface area for reducts.

110
00:07:44.990 --> 00:07:49.587
We're gonna get in in augments, some of
the abilities of reducts when we get into

111
00:07:49.587 --> 00:07:52.371
asynchronous actions,
but for now that's it.

