WEBVTT

1
00:00:00.450 --> 00:00:03.010
&gt;&gt; Brian Holt: So, yeah,
I just wanted to emphasize, especially for

2
00:00:03.010 --> 00:00:07.410
future video watchers that this is
version three, so make sure that you're

3
00:00:07.410 --> 00:00:11.820
on the correct course website because
there are three versions of it.

4
00:00:11.820 --> 00:00:17.666
Just wanted to show you right here,
that there are versions 1, 2, and 3.

5
00:00:17.666 --> 00:00:21.912
With the v3, there's not really a good
reason to watch v 2 anymore, but

6
00:00:21.912 --> 00:00:24.257
there is still good reason to watch v1.

7
00:00:24.257 --> 00:00:26.174
v1 is gonna to use createClass,

8
00:00:26.174 --> 00:00:30.260
which we are not gonna to use
createClass at all today.

9
00:00:30.260 --> 00:00:33.362
And if this doesn't make sense to you,
that's okay, cuz it's deprecated.

10
00:00:35.500 --> 00:00:38.019
It uses Mocha, Chai, and
Sinon for testing, so

11
00:00:38.019 --> 00:00:41.951
if you wanna see how React testing
looks with those particular frameworks,

12
00:00:41.951 --> 00:00:43.809
that's a good reason to look at it.

13
00:00:43.809 --> 00:00:47.326
v1 and
v2 use what's called Standard ESLint,

14
00:00:47.326 --> 00:00:50.254
and today we're gonna be using AirBnB.

15
00:00:50.254 --> 00:00:53.061
And then there's just a bunch
of other stuff down here,

16
00:00:53.061 --> 00:00:55.350
you can look at that at your leisure.

17
00:00:55.350 --> 00:00:57.930
So there are links to v1 and v2 on here.

18
00:00:57.930 --> 00:00:59.870
But, again, today, we're gonna be on v3.

19
00:01:01.070 --> 00:01:06.500
You can always be assured that the one
that's at this particular URL, which

20
00:01:06.500 --> 00:01:13.140
is also easy to get to at nho.lt/react,
will always be the most up-to-date one.

21
00:01:13.140 --> 00:01:16.363
And then I'll move the other
ones to different links.

22
00:01:19.284 --> 00:01:23.221
&gt;&gt; Brian Holt: Really excited that
Frontend Masters gives me the time and

23
00:01:23.221 --> 00:01:27.520
[COUGH] resources to be able to go and
develop this course.

24
00:01:27.520 --> 00:01:32.190
All of this material will live online,
free, forever, and yeah,

25
00:01:32.190 --> 00:01:34.580
you can watch the videos on
Frontend Masters, which is pretty sweet.

26
00:01:35.660 --> 00:01:37.870
So a little introduction about me.

27
00:01:37.870 --> 00:01:39.988
My name's Brian Holt.

28
00:01:39.988 --> 00:01:44.810
Currently living in San Francisco but
originally from Salt Lake City.

29
00:01:44.810 --> 00:01:48.050
Just really, really happy to be here.

30
00:01:48.050 --> 00:01:49.670
Previously worked at Netflix and Reddit.

31
00:01:51.270 --> 00:01:54.130
And yeah,
this is the complete intro to React.

32
00:01:55.150 --> 00:02:00.167
So let's talk about the structure of how
this particular workshop is gonna work.

33
00:02:00.167 --> 00:02:02.719
A lot of times when you
get into React tutorials,

34
00:02:02.719 --> 00:02:06.340
they're just gonna throw you to
straight into the deep end, right?

35
00:02:06.340 --> 00:02:10.450
It's like out of the box you have to
setup a Webpack, and then Babel, and then

36
00:02:10.450 --> 00:02:14.270
testing frameworks, and just all these
different tools right out of the box.

37
00:02:14.270 --> 00:02:17.790
And a common refrain amongst
new developers with React is

38
00:02:17.790 --> 00:02:18.950
it's too complicated.

39
00:02:18.950 --> 00:02:20.120
There's too much going on.

40
00:02:20.120 --> 00:02:22.720
There's too much magic and
I don't really get it,

41
00:02:22.720 --> 00:02:26.584
which is really frustrating to me because
it doesn't have to be that way, right?

42
00:02:27.900 --> 00:02:31.254
React itself, at least the way
that you interact with React,

43
00:02:31.254 --> 00:02:32.811
is actually really simple.

44
00:02:32.811 --> 00:02:37.138
And then we build all this complexity
on top of it to make it easier, right?

45
00:02:37.138 --> 00:02:39.706
So I'm gonna use two terms here,
simple and easy,

46
00:02:39.706 --> 00:02:42.635
which I'm borrowing from a talk
called Simple Made Easy,

47
00:02:42.635 --> 00:02:47.670
which I definitely suggest you go watch,
but to kind of define those terms for you.

48
00:02:47.670 --> 00:02:52.260
Something can be easy and complex, and
something can be simple and hard, right?

49
00:02:52.260 --> 00:02:54.870
So easy just means that it's
really easy to get done, but

50
00:02:54.870 --> 00:02:56.060
it can be very complicated.

51
00:02:56.060 --> 00:03:00.610
And simple means that the thing itself is
actually fairly simple, or in other words,

52
00:03:00.610 --> 00:03:05.230
not complex, but it could be really
hard to wrap your mind around, right?

53
00:03:05.230 --> 00:03:07.810
So my best example of that is Redux,
right?

54
00:03:07.810 --> 00:03:10.790
A lot of people find Redux to be very
simple, cuz there's not much to it.

55
00:03:10.790 --> 00:03:15.090
But it's pretty hard, it's a pretty
hard library to get your mind around.

56
00:03:15.090 --> 00:03:20.920
So anyway, what I wanna say is that
we're gonna start with barebones React,

57
00:03:20.920 --> 00:03:22.370
with literally nothing else.

58
00:03:22.370 --> 00:03:25.520
We're gonna not even like include a
separately script file, we're going to put

59
00:03:25.520 --> 00:03:30.620
it straight to the HTML to show you that
it really is a pretty simple library.

60
00:03:31.990 --> 00:03:33.320
And then, as we are gonna keep going,

61
00:03:33.320 --> 00:03:37.390
we're gonna keep introducing new
tools to make our lives easier.

62
00:03:37.390 --> 00:03:39.770
But in the process of introducing tools,

63
00:03:39.770 --> 00:03:43.290
we make our application more complex,
right?

64
00:03:43.290 --> 00:03:45.955
So, basically, what I'm trying
to say is I'm gonna try and

65
00:03:45.955 --> 00:03:48.006
justify the complexity
of the tooling to you.

66
00:03:48.006 --> 00:03:48.737
And along the way,

67
00:03:48.737 --> 00:03:51.720
hopefully you'll be able to understand
the tools that we're using as well.

68
00:03:53.980 --> 00:03:59.740
So, yeah, with React, typically,
you're not using just React, right?

69
00:03:59.740 --> 00:04:03.301
You can, React by itself can
build complicated apps and

70
00:04:03.301 --> 00:04:07.270
there's no reason to even
introduce a build step.

71
00:04:07.270 --> 00:04:08.870
So it can be done.

72
00:04:08.870 --> 00:04:14.240
However, it's gonna make your life
easier if you do have these tools.

73
00:04:14.240 --> 00:04:17.830
So, by showing you these tools and
justifying the complexity, I'm hoping that

74
00:04:17.830 --> 00:04:22.630
you'll see why they're there and embrace
the complexity for the sake of ease.

75
00:04:24.700 --> 00:04:28.410
Furthermore, you don't have to use any
of these tools that we're using today.

76
00:04:28.410 --> 00:04:31.620
For example, we're gonna be using Flow
later in the day, maybe tomorrow,

77
00:04:31.620 --> 00:04:36.680
probably tomorrow, but you can use
TypeScript, that's totally okay.

78
00:04:36.680 --> 00:04:38.040
These are all just choices.

79
00:04:38.040 --> 00:04:40.826
I've made a bunch of choices for you, and

80
00:04:40.826 --> 00:04:45.310
hopefully you can see where to pull
out these tools and your own in.

81
00:04:45.310 --> 00:04:47.590
React is kind of a choose
your own adventure, right?

82
00:04:47.590 --> 00:04:51.470
It's not necessarily this is the one
way to do everything, right?

83
00:04:51.470 --> 00:04:53.500
It's not so
prescriptive like Meteor, right?

84
00:04:53.500 --> 00:04:56.910
Meteor is amazing but
you don't get many choices with Meteor.

85
00:04:56.910 --> 00:04:58.600
You get some, but not very many.

86
00:04:58.600 --> 00:05:00.290
With React, it's kind of an open field for

87
00:05:00.290 --> 00:05:02.545
you to kind of put
the different pieces together.

88
00:05:02.545 --> 00:05:05.876
Bu that means you get stuck putting
all the pieces together as well,

89
00:05:05.876 --> 00:05:09.853
so,
&gt;&gt; Brian Holt: Cool, so, yes,

90
00:05:09.853 --> 00:05:14.069
you're gonna be able to
plugin own pieces in.

91
00:05:14.069 --> 00:05:18.105
And I'll be sure along the way to
highlight different alternatives that you

92
00:05:18.105 --> 00:05:20.160
can definitely use.

93
00:05:20.160 --> 00:05:25.090
So today we'll be using things like Node,
Webpack, Jest, Enzyme, Yarn, Prettier,

94
00:05:25.090 --> 00:05:31.890
ESLint, React Router, Flow, we're gonna
use the AirBnB config for ESLint.

95
00:05:31.890 --> 00:05:34.638
These are all the different kind
of technologies we're gonna use.

96
00:05:34.638 --> 00:05:37.747
If you don't already have
Node installed at this point,

97
00:05:37.747 --> 00:05:41.453
please make sure that you get that done,
sooner rather than later.

98
00:05:41.453 --> 00:05:45.381
As long as you're above four, I don't
think we're gonna be using anything that's

99
00:05:45.381 --> 00:05:46.778
more complicated than that.

100
00:05:46.778 --> 00:05:52.105
You really could get by on .0.12,
I do not recommend it though.

101
00:05:52.105 --> 00:05:59.683
[LAUGH] I will be on 7.10, and actually I
saw that today, 8, is getting released.

102
00:05:59.683 --> 00:06:00.883
We will not be using eight.

103
00:06:00.883 --> 00:06:05.500
[LAUGH]
Cool.

104
00:06:05.500 --> 00:06:08.920
There's a ton of spelling errors and
stuff like this on the repo, so

105
00:06:08.920 --> 00:06:12.160
if you see them feel
free to file an issue,

106
00:06:12.160 --> 00:06:17.240
open a pull request, angry tweets,
all these things work at getting at me.

107
00:06:17.240 --> 00:06:19.160
So, cool.

108
00:06:20.710 --> 00:06:24.270
So lets go ahead and get started.

109
00:06:25.610 --> 00:06:30.200
So the first thing is I'm gonna need you
to go clone the start branch, which I have

110
00:06:30.200 --> 00:06:33.940
a nice little link there for you,
which I'm going to do with you as well.

111
00:06:36.000 --> 00:06:40.100
Along the way I am going to be
pushing up branches to this repo.

112
00:06:40.100 --> 00:06:43.250
In fact, you can see here,
there's a lot of branches.

113
00:06:44.370 --> 00:06:49.083
I'll be prefixing everything with v3,
but today we're gonna go ahead and

114
00:06:49.083 --> 00:06:50.270
start with start.

115
00:06:52.700 --> 00:06:54.829
So I'm not gonna be talking too
much about how to use Git today.

116
00:06:56.130 --> 00:06:59.080
There's plenty of tutorials for
that online, but

117
00:06:59.080 --> 00:07:01.470
I will show you how to go ahead and
clone this Git branch.

118
00:07:01.470 --> 00:07:06.197
So I'm just gonna come here,
I'm going to grab this URL,

119
00:07:06.197 --> 00:07:12.086
I'm going to go to my command line,
and I'm gonna say git clone, that.

120
00:07:15.358 --> 00:07:20.309
&gt;&gt; Brian Holt: And I need to get
the start branch, too, so I'm gonna say,

121
00:07:20.309 --> 00:07:22.645
git fetch origin start.

122
00:07:22.645 --> 00:07:24.293
I have to go into the repo first.

123
00:07:28.106 --> 00:07:30.705
&gt;&gt; Brian Holt: Okay, and
then I'm gonna, git checkout start.

124
00:07:33.166 --> 00:07:34.930
&gt;&gt; Brian Holt: So just to make sure.

125
00:07:36.120 --> 00:07:38.790
Yep, and I am now on the v3 start branch.

126
00:07:40.760 --> 00:07:43.047
Okay, so it should look
a little something like this.

127
00:07:45.040 --> 00:07:48.523
&gt;&gt; Brian Holt: [COUGH] Just to kinda
give you a little bit of a tour around,

128
00:07:48.523 --> 00:07:51.294
you're gonna have an .editorconfig file.

129
00:07:51.294 --> 00:07:55.062
This is only if you use EditorConfig,
which is a nice plug-in for

130
00:07:55.062 --> 00:07:57.002
almost every different editor.

131
00:07:57.002 --> 00:08:00.460
It's just going to set all of your editor
preferences automatically for you for

132
00:08:00.460 --> 00:08:02.010
that particular project.

133
00:08:02.010 --> 00:08:04.300
So in this particular case, it's gonna
make sure that you have two spaces for

134
00:08:04.300 --> 00:08:10.095
indents, it's gonna be using spaces
not tabs, all these different things.

135
00:08:10.095 --> 00:08:12.657
.gitignore, just a bunch of
stuffs that we should ignore.

136
00:08:14.865 --> 00:08:16.203
&gt;&gt; Brian Holt: Let's actually
just open this in Sublime.

137
00:08:16.203 --> 00:08:20.738
I'm gonna be using Sublime today because
that's what I know how [LAUGH] too use.

138
00:08:20.738 --> 00:08:25.042
I have no horse in this
particular battle of,

139
00:08:25.042 --> 00:08:28.793
which ever to use, I just don't care.

140
00:08:28.793 --> 00:08:32.516
[LAUGH] I actually had
an amusing talk today.

141
00:08:32.516 --> 00:08:34.732
I was arguing, well, arguing, yeah,

142
00:08:34.732 --> 00:08:37.740
arguing with someone about
semicolons this morning.

143
00:08:37.740 --> 00:08:42.532
And have I spent more characters typing
out arguing about semicolons than I have

144
00:08:42.532 --> 00:08:46.480
saved from not writing semicolons,
which I found quite ironic.

145
00:08:48.220 --> 00:08:51.270
So, okay, let's look at what we have here.

146
00:08:51.270 --> 00:08:53.758
So we have a data.json file,

147
00:08:53.758 --> 00:08:58.044
which is going to be a bunch
of TV shows kind of data.

148
00:08:58.044 --> 00:09:02.860
This is what we're gonna be building today
as kind of a video viewing sort of app.

149
00:09:02.860 --> 00:09:08.448
So this just has a bunch of titles,
descriptions, that sort of thing.

150
00:09:08.448 --> 00:09:10.672
It's in data.json.

151
00:09:10.672 --> 00:09:12.463
You have a package.json file.

152
00:09:12.463 --> 00:09:15.690
I have locked out these dependencies for
you.

153
00:09:15.690 --> 00:09:19.820
The reason being is that typically you
don't wanna lock down dependencies like I

154
00:09:19.820 --> 00:09:23.410
have here, but when someone
tries this workshop in a year,

155
00:09:23.410 --> 00:09:27.550
right, if they don't get the same
dependencies, everything's gonna break.

156
00:09:27.550 --> 00:09:31.902
I cannot tell you how many times I get
tweeted about, hey, this is broken and

157
00:09:31.902 --> 00:09:34.894
it's because they're trying
a newer version of one

158
00:09:34.894 --> 00:09:36.803
of these particular libraries.

159
00:09:36.803 --> 00:09:41.104
So, anyways, suffice to say, these are all
our dependencies, which is crazy, right,

160
00:09:41.104 --> 00:09:44.200
when you look at how many
dependencies we're bringing in here.

161
00:09:44.200 --> 00:09:46.890
But hopefully,
it'll make sense throughout the day.

162
00:09:48.750 --> 00:09:51.510
Then we had this ratings API.js.

163
00:09:51.510 --> 00:09:57.210
So previously, this used the Open Movie
Database to pull different metadata for

164
00:09:57.210 --> 00:09:59.910
these movie or TV shows down.

165
00:09:59.910 --> 00:10:03.636
Unfortunately, that API
went private [LAUGH], so

166
00:10:03.636 --> 00:10:06.208
I kind of wrote here just a quick and

167
00:10:06.208 --> 00:10:12.259
dirty little API server that you can run
for yourself, so this will always work.

168
00:10:12.259 --> 00:10:16.990
So that's all this does,
it's just a tiny little Express server,

169
00:10:16.990 --> 00:10:20.600
which I'll show you how to run it later.

170
00:10:20.600 --> 00:10:22.480
And lastly, there's a lock file,

171
00:10:22.480 --> 00:10:25.437
this is a lock file to lock
down all of the dependencies.

172
00:10:25.437 --> 00:10:27.550
So, cool.

173
00:10:27.550 --> 00:10:29.277
So that's everything
that should be included.

174
00:10:29.277 --> 00:10:32.250
And there's some CSS and
images and whatnot.

175
00:10:33.760 --> 00:10:35.430
So we'll be using those as well.

176
00:10:37.940 --> 00:10:42.629
Okay, so going back here,
this is literally the notes that I have

177
00:10:42.629 --> 00:10:47.420
that I'm going to be reading from
while I teach you this workshop.

178
00:10:47.420 --> 00:10:50.610
So if you fall behind, or if you
wanna see something a different way,

179
00:10:50.610 --> 00:10:53.440
or see what I'm reading here,
it's all available here.

180
00:10:53.440 --> 00:10:55.530
And that's actually what I
have on this laptop here.

