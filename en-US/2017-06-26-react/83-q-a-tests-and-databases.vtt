WEBVTT

1
00:00:00.410 --> 00:00:05.402
&gt;&gt; Speaker 1: What would you do to
manage database content updates that

2
00:00:05.402 --> 00:00:09.114
might break the code or break the test?
&gt;&gt; Brian Holt: Well,

3
00:00:09.114 --> 00:00:11.540
your test should never be reading
directly from the database.

4
00:00:11.540 --> 00:00:15.464
That's a big code smell right there
that if you're testing that integration,

5
00:00:15.464 --> 00:00:18.228
that's too much,
that's too much death to your test.

6
00:00:18.228 --> 00:00:19.268
So with Redux,

7
00:00:19.268 --> 00:00:24.881
what you're gonna do is you're going to
grab what a database response looks like.

8
00:00:24.881 --> 00:00:29.513
And then you're going to pass that in as
the action, and then you'll test that.

9
00:00:29.513 --> 00:00:33.667
And then you're probably gonna wanna have
some sort of integration test that tests

10
00:00:33.667 --> 00:00:35.579
your whole app top to bottom, right.

11
00:00:35.579 --> 00:00:38.821
Maybe that's Selenium,
maybe that's I don't know something else.

12
00:00:38.821 --> 00:00:43.375
And you should also have server side
tests that would catch regressions in

13
00:00:43.375 --> 00:00:47.347
terms of like the shape of your
API responses on the server side.

14
00:00:47.347 --> 00:00:53.122
So yeah, there should be several layers
of testing that should catch that,

15
00:00:53.122 --> 00:00:56.115
so that's not necessary to test here.

16
00:00:56.115 --> 00:01:00.020
I think that's the answer to that,
or at least that's what I would do.

