WEBVTT

1
00:00:00.380 --> 00:00:03.396
Let's start with a bit of knowledge.

2
00:00:03.396 --> 00:00:05.390
Let's talk about strings.

3
00:00:05.390 --> 00:00:08.135
What is something
interesting about strings?

4
00:00:11.790 --> 00:00:14.008
Anything interesting at all?

5
00:00:14.008 --> 00:00:15.512
&gt;&gt; They're primitive type.

6
00:00:15.512 --> 00:00:18.330
&gt;&gt; Yeah, they're primitive type, yeah.

7
00:00:18.330 --> 00:00:21.109
Which is also deceiving because
JavaScript likes to trick you.

8
00:00:21.109 --> 00:00:22.687
It's a primitive type, but

9
00:00:22.687 --> 00:00:26.630
there is also methods that
are on a string that I can call.

10
00:00:26.630 --> 00:00:30.365
In fact, these are some useful methods for
strings.

11
00:00:30.365 --> 00:00:34.178
Split is useful because using split I
can turn a string into an array, and

12
00:00:34.178 --> 00:00:38.070
then once I have the array I
can do whatever I want with it.

13
00:00:38.070 --> 00:00:40.369
LowerCase if you're dealing
with a lot of strings,

14
00:00:40.369 --> 00:00:43.505
having to putting them all in
lowercase if you're comparing strings,

15
00:00:43.505 --> 00:00:45.663
things like that, just so
useful nothing, no.

16
00:00:45.663 --> 00:00:50.446
Substring or sub STR, depending which
one you like to use to get a part of

17
00:00:50.446 --> 00:00:54.670
a string out of another string and
starts with is amazing.

18
00:00:54.670 --> 00:00:58.722
It wasn't around to a couple of years ago.

19
00:00:58.722 --> 00:01:01.445
In the old days, maybe regular expressions
and all this stuff starts with is so

20
00:01:01.445 --> 00:01:02.440
great ends with this.

21
00:01:02.440 --> 00:01:06.785
There's such useful methods, probably the
main thing I'd say to know about strings,

22
00:01:06.785 --> 00:01:08.204
the strings are immutable.

23
00:01:08.204 --> 00:01:09.890
Once you create a string,
you can't change it.

24
00:01:09.890 --> 00:01:12.255
And if you do change it,
you're actually creating another string.

25
00:01:12.255 --> 00:01:14.611
And it's important to know that if
you're missing a lot of strings,

26
00:01:14.611 --> 00:01:16.530
you're actually just creating more and
more strings.

27
00:01:16.530 --> 00:01:20.012
So if you watch the graph, if you're
doing a memory profile, you'll see

28
00:01:20.012 --> 00:01:24.022
the garselecter go up and down, and up and
down if you're creating a lot of strings.

29
00:01:24.022 --> 00:01:27.374
Generally, it's useful to turn a string
into an array and then manipulate it and

30
00:01:27.374 --> 00:01:30.148
turn it back into a string rather
than creating a bunch of strings.

