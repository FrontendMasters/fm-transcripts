WEBVTT

1
00:00:00.000 --> 00:00:03.008
So if I wanted to make something sleep,

2
00:00:03.008 --> 00:00:08.120
that would mean I wanted to do
something similar to the bounce.

3
00:00:08.120 --> 00:00:13.860
I want a function that's not gonna
execute until some elapsed time.

4
00:00:13.860 --> 00:00:18.320
So at some point, I'm gonna use
a set timeout, somewhere in there.

5
00:00:18.320 --> 00:00:21.570
But I wanna use a promise
because we're using async await.

6
00:00:21.570 --> 00:00:23.855
So let's code that up.

7
00:00:23.855 --> 00:00:24.957
Close you.

8
00:00:29.887 --> 00:00:34.382
All right, so again, the method
of tackling any problem is I need

9
00:00:34.382 --> 00:00:38.570
a function that takes time,
and we're gonna call it sleep.

10
00:00:38.570 --> 00:00:42.682
So function sleep, and

11
00:00:42.682 --> 00:00:46.799
it's gonna take time.

12
00:00:46.799 --> 00:00:52.708
And I'm gonna make this long because it's,
I'm gonna break this out like this.

13
00:00:52.708 --> 00:00:56.024
But essentially because
we're using an async method,

14
00:00:56.024 --> 00:00:59.750
we know we wanna use a promise
in this particular one.

15
00:00:59.750 --> 00:01:02.944
So I can say return a new Promise.

16
00:01:06.990 --> 00:01:10.966
And Promises always have,
I always wanna call it a callback, but

17
00:01:10.966 --> 00:01:12.351
it's not a callback.

18
00:01:12.351 --> 00:01:17.470
It's called an executor, because it will
eventually always execute this function.

19
00:01:17.470 --> 00:01:22.732
And it's gonna have two,
all Promises have resolve and reject.

20
00:01:24.153 --> 00:01:28.809
As in you set, hey, when this returned,
is this valid or is not valid?

21
00:01:28.809 --> 00:01:31.174
But in this case,
we're not gonna use reject.

22
00:01:31.174 --> 00:01:33.288
I just put that in there for giggles.

23
00:01:37.550 --> 00:01:40.190
So we have a Promise, we have a function.

24
00:01:40.190 --> 00:01:43.580
It's gonna return a Promise, and
it's gonna resolve at some point.

25
00:01:43.580 --> 00:01:45.215
So the resolve to actually return,

26
00:01:45.215 --> 00:01:48.580
let's say I'm done processing,
we have to invoke resolve.

27
00:01:49.670 --> 00:01:53.599
But we wanna wait x seconds,
and how do we wait again?

28
00:01:53.599 --> 00:01:54.821
&gt;&gt; Set a time out.

29
00:01:54.821 --> 00:01:58.288
&gt;&gt; Yes, so I'm gonna say, setTimeout.

30
00:02:01.798 --> 00:02:06.582
Timeout, which of course
takes some function.

31
00:02:10.696 --> 00:02:14.477
And we want setTimeout to run for
the sleep second, so

32
00:02:14.477 --> 00:02:16.248
we want to run it at time.

33
00:02:18.099 --> 00:02:22.501
And whenever the time has elapsed,
we're gonna resolve.

34
00:02:24.754 --> 00:02:26.870
And that is how you
build a sleep function.

35
00:02:28.010 --> 00:02:31.940
So now, going back to our example,
it's going to sleep, it's gonna wait.

36
00:02:31.940 --> 00:02:33.040
We're not waiting for any value.

37
00:02:33.040 --> 00:02:34.954
We don't care what the value is.

38
00:02:34.954 --> 00:02:36.345
We're gonna wait 500 milliseconds.

39
00:02:36.345 --> 00:02:38.170
Whatever we pass in,
it`s gonna execute this.

40
00:02:38.170 --> 00:02:38.820
It's gonna hit this.

41
00:02:38.820 --> 00:02:41.310
It's gonna wait another 500 milliseconds.

42
00:02:41.310 --> 00:02:42.150
It's gonna print this.

43
00:02:43.680 --> 00:02:46.950
I consider this a pretty
decent interview question.

44
00:02:46.950 --> 00:02:49.500
Cuz it's like, do you understand Promises,
do you understand setTimeout?

45
00:02:49.500 --> 00:02:51.800
Do you understand how
Promises get resolved?

46
00:02:51.800 --> 00:02:54.260
Without going into too much detail.

47
00:02:55.280 --> 00:02:58.310
Now, the other question
I was gonna ask you, and

48
00:02:58.310 --> 00:03:01.130
I'm not gonna ask you this
one cuz it's challenging,

49
00:03:01.130 --> 00:03:05.130
is, given some function that has
a signature that finishes the callback.

50
00:03:05.130 --> 00:03:08.370
So kind of like old-school JavaScript,
or a lot of modern node functions,

51
00:03:08.370 --> 00:03:09.780
you can do this, too.

52
00:03:09.780 --> 00:03:13.477
How would I promisefy this function so
that I can say,

53
00:03:13.477 --> 00:03:16.117
.then, .then, .then, .then?

54
00:03:16.117 --> 00:03:20.934
I'm not gonna go into that one because
it would take a while to go over,

55
00:03:20.934 --> 00:03:23.804
but I can show you the solution real fast.

56
00:03:23.804 --> 00:03:28.658
[SOUND] Answers.

57
00:03:28.658 --> 00:03:30.970
And when you see it, you're gonna groan.

58
00:03:30.970 --> 00:03:32.150
You'll be like, why, Jem?

59
00:03:32.150 --> 00:03:33.544
Why would you do that to us?

60
00:03:35.309 --> 00:03:38.412
A little messy, but similar idea.

61
00:03:38.412 --> 00:03:41.068
You have a function that's gonna
eventually return a function, and

62
00:03:41.068 --> 00:03:44.480
then when you invoke that, it's gonna
be a Promise, so you can chain it.

63
00:03:44.480 --> 00:03:48.600
So it's a function that takes a function
that returns another function and

64
00:03:48.600 --> 00:03:50.120
returns a Promise.

65
00:03:50.120 --> 00:03:53.569
That Promise is just gonna resolve,
and then you call that.

66
00:03:53.569 --> 00:03:55.963
And you concat all the arguments together,

67
00:03:55.963 --> 00:03:58.570
with the last one being
the callback function.

68
00:03:58.570 --> 00:03:59.380
Just like you would.

69
00:03:59.380 --> 00:04:02.350
So it calls the callback
once the promise resolves.

70
00:04:03.620 --> 00:04:06.730
It's more of a mental model
of how you would do this

71
00:04:06.730 --> 00:04:10.100
that I find more important than actually
understanding the nitty-gritty of it.

72
00:04:10.100 --> 00:04:12.770
But ignore that you saw that.

73
00:04:12.770 --> 00:04:14.440
Go ahead and try to promisefy something,

74
00:04:14.440 --> 00:04:16.610
because it is an interview
question people will ask you.

75
00:04:16.610 --> 00:04:19.300
And it's probably one of
people's least favorite things.

76
00:04:19.300 --> 00:04:23.910
Because you just, I never thought,
how would I promisefy something?

77
00:04:23.910 --> 00:04:25.300
I never gave it any thought.

78
00:04:25.300 --> 00:04:27.717
So go ahead and try that one at
home when you have a chance.

