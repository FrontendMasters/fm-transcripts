WEBVTT

1
00:00:00.370 --> 00:00:02.689
&gt;&gt; Shirley Wu: Let's talk about D3.

2
00:00:02.689 --> 00:00:08.215
So like you saw in that little exercise,
going from the data to

3
00:00:08.215 --> 00:00:14.660
SVG shapes can be kind of overwhelming
if you don't have the tools.

4
00:00:14.660 --> 00:00:19.400
And that's exactly one of the many
things that D3 is good for.

5
00:00:19.400 --> 00:00:23.070
So I want to talk a little
bit about the D3 API.

6
00:00:24.990 --> 00:00:30.246
So I mentioned earlier that D3 can be
intimidating because of the enter,

7
00:00:30.246 --> 00:00:33.315
update, exit pattern and how that works.

8
00:00:33.315 --> 00:00:38.845
But I think one of the other
reasons why D3 can be so

9
00:00:38.845 --> 00:00:44.786
intimidating is because of
the sheer size of the API.

10
00:00:44.786 --> 00:00:48.940
The bold parts are the modules, and
these are just some modules, and

11
00:00:48.940 --> 00:00:53.464
then there's a lot of different
functionality under each of the modules.

12
00:00:53.464 --> 00:00:58.575
But today I kinda want to break
down all of the D3 API and

13
00:00:58.575 --> 00:01:05.371
kind of talk about the parts that
are relevant to us and what we want to do.

14
00:01:05.371 --> 00:01:09.981
And in particular for
what we're going to do next I want to talk

15
00:01:09.981 --> 00:01:14.324
about scales ad shapes which
will help us calculate the x,

16
00:01:14.324 --> 00:01:18.850
y coordinates or
the path strings that we saw earlier.

17
00:01:18.850 --> 00:01:23.630
And it will help us go from the raw
data of the temperatures and

18
00:01:23.630 --> 00:01:28.148
dates and go to the x,
y width height or the path strings.

19
00:01:28.148 --> 00:01:30.943
Yeah, so let's talk about that.

20
00:01:30.943 --> 00:01:34.717
So let's start again with the bar chart.

21
00:01:34.717 --> 00:01:38.642
And again, for
each of the bars what we want to do is

22
00:01:38.642 --> 00:01:43.510
create a rectangle element that has x,
y, width and height.

23
00:01:45.800 --> 00:01:51.985
And so to do that we want to use
this thing called scales in SVG.

24
00:01:51.985 --> 00:01:58.165
And the way that I like to think about
scales is that there is a input, and

25
00:01:58.165 --> 00:02:04.610
in D3, we call it domain, and
then output, and we call it range.

26
00:02:04.610 --> 00:02:09.530
And the way that I like to think
about scales is that we use it to

27
00:02:09.530 --> 00:02:14.474
map from the raw data attributes, domain,
to the display, which is a range.

28
00:02:14.474 --> 00:02:20.110
So basically, if we take for

29
00:02:20.110 --> 00:02:26.610
example the temperate data, it's like
going from translating the date to the x

30
00:02:28.910 --> 00:02:32.590
axis, and
maybe the temperature to the y axis, and

31
00:02:32.590 --> 00:02:35.470
maybe some other value to the opacity,
etc.

32
00:02:35.470 --> 00:02:40.277
So translating raw data into
what we need to draw the SVG

33
00:02:40.277 --> 00:02:46.440
elements.
&gt;&gt; Shirley Wu: And

34
00:02:46.440 --> 00:02:50.747
some examples of this is, for example,

35
00:02:50.747 --> 00:02:58.740
let's say we have a domain that's
minimum is 0 and the maximum is 100.

36
00:02:59.960 --> 00:03:03.251
And then we just want to map
it to a range of 0 to 1.

37
00:03:03.251 --> 00:03:06.987
Maybe this is we're trying to map
some raw data to opacity, let's say,

38
00:03:06.987 --> 00:03:08.650
and this is how it goes, right?

39
00:03:10.480 --> 00:03:15.850
Well, if we're using scaleLinear it's
a very straightforward 1 to 1 mapping,

40
00:03:15.850 --> 00:03:20.160
so 0 goes to 0, 20 goes to 0.2,
100 goes to 1, etc.

41
00:03:22.350 --> 00:03:25.470
We can also flip things around and
be like okay,

42
00:03:25.470 --> 00:03:29.720
my domain, the minimum is 0,
the maximum is 100.

43
00:03:29.720 --> 00:03:35.110
But for the range I want to have it such

44
00:03:35.110 --> 00:03:40.280
that the 0 maps to 500 and
that 100 maps to 0.

45
00:03:40.280 --> 00:03:46.342
So the 0 goes to 500, 20 goes to 400,
etc, until 100 goes to 0.

46
00:03:46.342 --> 00:03:50.260
And the reason why this is useful is for
the y axis.

47
00:03:50.260 --> 00:03:56.850
And I mentioned earlier that SVG
coordinate systems, it starts out at 0,

48
00:03:56.850 --> 00:04:00.690
and at the top, and
then it increases going down.

49
00:04:00.690 --> 00:04:06.260
So that's why,
let's say I want my 0 value,

50
00:04:07.320 --> 00:04:10.860
if I have a temperature that's 0,
I want it to be at the bottom.

51
00:04:10.860 --> 00:04:15.360
But the bottom is,
let's say, the 500 pixels.

52
00:04:15.360 --> 00:04:19.440
And I want my temperature for 50 degrees,
let's say, to be in the middle, and

53
00:04:19.440 --> 00:04:20.880
the middle would be 250.

54
00:04:20.880 --> 00:04:25.916
And then I want my highest temperature,
100 degrees, to be at

55
00:04:25.916 --> 00:04:31.880
the very top of my chart, which in the
coordinate system is a y position of 0.

56
00:04:31.880 --> 00:04:35.140
And that's why scales
are extremely helpful,

57
00:04:35.140 --> 00:04:38.493
because it does the mapping so
we don't have to.

58
00:04:38.493 --> 00:04:42.690
And as an example, I want to tell you
that one time, I was teaching with

59
00:04:42.690 --> 00:04:47.243
one of my friends, and just to drive
this point home, he tried to hand code,

60
00:04:47.243 --> 00:04:51.323
just the scale linear,
which is like the most basic scale, right?

61
00:04:51.323 --> 00:04:53.762
It's just like a 1 to 1 linear mapping.

62
00:04:53.762 --> 00:04:57.201
And he tried to hand code scale linear.

63
00:04:57.201 --> 00:05:01.384
And then it took us three or four
tries to get all the edge cases right.

64
00:05:01.384 --> 00:05:05.700
I can't remember where we got caught
up on, but it took us a while.

65
00:05:05.700 --> 00:05:11.220
And so D3 is just really great at giving
us these kinds of utility functions,

66
00:05:11.220 --> 00:05:14.470
so make even something as
trivial as this really easy,

67
00:05:14.470 --> 00:05:18.100
or something that looks really trivial,
but not trivial, easy.

68
00:05:19.520 --> 00:05:21.750
So yeah, these are our scales.

69
00:05:21.750 --> 00:05:25.777
And to use them in your code,
what you want to do is,

70
00:05:25.777 --> 00:05:30.557
let's say you have your data and,
like I mentioned before,

71
00:05:30.557 --> 00:05:33.577
you need a min and max for your domain.

72
00:05:33.577 --> 00:05:39.304
And so the way that you can calculate
it is D3 has these functions,

73
00:05:39.304 --> 00:05:43.097
d3.min or d3.max, that will help you.

74
00:05:43.097 --> 00:05:47.939
If you give it an array and an accessor
it will return the min and max for,

75
00:05:47.939 --> 00:05:54.178
this example is with dates.
&gt;&gt; Shirley Wu: Or

76
00:05:54.178 --> 00:06:00.181
you can use one of my favorite functions,
d3.extent,

77
00:06:00.181 --> 00:06:05.693
which gives you back the min and
max in an array form.

78
00:06:05.693 --> 00:06:09.344
So this is getting the min and
max temperatures,

79
00:06:09.344 --> 00:06:13.720
I'll put it to the extent,
and then I create my scale.

80
00:06:13.720 --> 00:06:18.394
So, my x-scale, I want it to be scale
of time, because I got back the min and

81
00:06:18.394 --> 00:06:19.060
max date.

82
00:06:19.060 --> 00:06:23.801
I give the domain an array of the min and
max dates and

83
00:06:23.801 --> 00:06:26.785
I tell it to map from 0 to width.

84
00:06:26.785 --> 00:06:31.475
And then for the y-scale,
I'm using a scaleLinear, and

85
00:06:31.475 --> 00:06:34.826
then I'm passing in domain(extent),

86
00:06:34.826 --> 00:06:38.477
because the extent is an array of min and
max.

87
00:06:38.477 --> 00:06:41.959
And I'm saying map
the minimum to the height,

88
00:06:41.959 --> 00:06:43.928
and map the maximum to 0.

89
00:06:49.816 --> 00:06:53.799
&gt;&gt; Shirley Wu: Cool.
&gt;&gt; Shirley Wu: And

90
00:06:53.799 --> 00:06:59.300
I wrote down a few of
the scales I use quite often.

91
00:06:59.300 --> 00:07:05.060
And I broke it down by what kind of
data types you might use it for.

92
00:07:05.060 --> 00:07:10.270
So the first part is quantitative domains,
and

93
00:07:10.270 --> 00:07:13.430
so something like the temperature
I mentioned earlier.

94
00:07:13.430 --> 00:07:19.460
And so far if you have a continuous
domain and a continuous range,

95
00:07:19.460 --> 00:07:25.051
so that could be the temperature
going into x, y positions,

96
00:07:25.051 --> 00:07:30.554
you want to use scaleLinear,
or scaleLog, or scaleTime.

97
00:07:30.554 --> 00:07:35.223
If you have a continuous domain but
a discrete range,

98
00:07:35.223 --> 00:07:38.232
this is a really interesting one,

99
00:07:38.232 --> 00:07:42.612
I think I've only have how
to use this a few times.

100
00:07:42.612 --> 00:07:46.849
But one time when I was making
those flowers I showed earlier,

101
00:07:46.849 --> 00:07:51.739
I wanted to map the number of IMDB votes,
which is a continuous domain,

102
00:07:51.739 --> 00:07:55.725
into the number of pedals,
which is a discrete range.

103
00:07:55.725 --> 00:07:58.515
And that's when I used this scaleQuantize.

104
00:07:58.515 --> 00:08:02.185
Not used too often, I don't think,
but really good to know.

105
00:08:03.950 --> 00:08:09.960
And of course with categorical,
when you have a discrete domain.

106
00:08:09.960 --> 00:08:15.790
So, genres, and
you want to map it to, let's say,

107
00:08:15.790 --> 00:08:21.420
a discrete range, like different colors,
you want to use scale ordinal.

108
00:08:21.420 --> 00:08:26.374
And then if you have a discrete domain but
a continuous range, so

109
00:08:26.374 --> 00:08:32.634
like when we were talking about the bar
charts and we had the domain being genres.

110
00:08:32.634 --> 00:08:39.105
But then we wanted to map the genres to
somewhere on an exposition, on an x axis,

111
00:08:39.105 --> 00:08:45.009
so that's a continuous range,
scaleBand is really helpful with that.

112
00:08:45.009 --> 00:08:49.174
Yeah, so these are some of the scales.

113
00:08:49.174 --> 00:08:54.741
There's, I wanna say five or
six others that D3 provides,

114
00:08:54.741 --> 00:09:00.088
and I would say if you've the time or
if you're interested

115
00:09:00.088 --> 00:09:04.691
read through the D3 API for
each of these scales.

116
00:09:04.691 --> 00:09:08.828
But these are the ones,
I think, I will recommend,

117
00:09:08.828 --> 00:09:14.015
because these are the ones that
we probably will use quite often.

