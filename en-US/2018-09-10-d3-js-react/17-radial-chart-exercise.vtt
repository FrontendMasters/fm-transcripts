WEBVTT

1
00:00:00.000 --> 00:00:05.151
&gt;&gt; Shirley Wu: In this case,
what we want to do is use

2
00:00:05.151 --> 00:00:09.971
a linear scale to map, actually,

3
00:00:09.971 --> 00:00:15.058
the high,
&gt;&gt; Shirley Wu: Just the high temperature,

4
00:00:15.058 --> 00:00:20.163
I think, to the radius.
&gt;&gt; Shirley Wu: And

5
00:00:20.163 --> 00:00:26.303
then use an arc generator
to generate a string for

6
00:00:26.303 --> 00:00:31.394
the d attribute of each of the paths where

7
00:00:31.394 --> 00:00:38.613
the startAngle is the date and
the endAngle is date + 1.

8
00:00:38.613 --> 00:00:43.104
And the innerRadius is the lower
temperature, and the outerRadius is

9
00:00:43.104 --> 00:00:48.037
the higher temperature.
&gt;&gt; Shirley Wu: And

10
00:00:48.037 --> 00:00:55.855
then return an array of objects where
each of the objects has that path,

11
00:00:55.855 --> 00:00:59.911
that d attribute to draw a path with.

12
00:00:59.911 --> 00:01:02.071
And if you want to give it a fill,

13
00:01:02.071 --> 00:01:06.504
we can give it a fill.
&gt;&gt; Shirley Wu: So,

14
00:01:08.782 --> 00:01:10.343
&gt;&gt; Shirley Wu: Any questions about it

15
00:01:10.343 --> 00:01:11.840
before we start?

16
00:01:11.840 --> 00:01:15.450
And this is the last of
the kind of data calculations

17
00:01:15.450 --> 00:01:17.940
example.
&gt;&gt; Speaker 2: When you say the end

18
00:01:17.940 --> 00:01:19.410
angle is date plus one,

19
00:01:19.410 --> 00:01:21.930
do you mean add a day to the date?
&gt;&gt; Shirley Wu: Yeah,

20
00:01:21.930 --> 00:01:26.100
so this one, again, a great question.

21
00:01:26.100 --> 00:01:30.820
So, I think you can do it either, yes,

22
00:01:30.820 --> 00:01:36.490
add a day, or you can kind of figure out

23
00:01:36.490 --> 00:01:41.050
what the angle of each slice should be and
then use index.

24
00:01:43.150 --> 00:01:46.140
And then, actually,
let's just do just that part together.

25
00:01:47.400 --> 00:01:54.117
So let's calculate together.
&gt;&gt; Shirley Wu: The angle for

26
00:01:54.117 --> 00:01:57.431
each slice, and I believe for this one,

27
00:01:57.431 --> 00:02:00.764
it takes radians.
&gt;&gt; Shirley Wu: So

28
00:02:00.764 --> 00:02:05.537
I think some things [LAUGH] in d3,
I think d3 operates in radians and

29
00:02:05.537 --> 00:02:09.070
I think SVG takes degrees,
something like that.

30
00:02:09.070 --> 00:02:13.655
So I always end up having to Google,
cuz, when I'm creating these things,

31
00:02:13.655 --> 00:02:18.039
sometimes it will ask for radians and
sometimes it will ask for degrees.

32
00:02:18.039 --> 00:02:20.320
And I think this one is radians.

33
00:02:20.320 --> 00:02:25.796
But what I want to do here is
basically get the angle for

34
00:02:25.796 --> 00:02:30.552
each slice and so
that should be, basically,

35
00:02:34.003 --> 00:02:38.745
&gt;&gt; Shirley Wu: The 2 pi, divide by 365,

36
00:02:38.745 --> 00:02:43.309
because I have 365 days.

37
00:02:43.309 --> 00:02:47.003
And that should be the angle for
each slice.

38
00:02:47.003 --> 00:02:50.606
So that's 2 * Math.PI,

39
00:02:50.606 --> 00:02:55.665
divide by,
&gt;&gt; Shirley Wu: 365, or

40
00:02:55.665 --> 00:03:01.692
in this case, I'm gonna just say
data.length, which is also 365.

41
00:03:01.692 --> 00:03:06.458
And then what you can imagine doing is

42
00:03:06.458 --> 00:03:11.685
that the startAngle is equal to the index

43
00:03:11.685 --> 00:03:16.465
of your slice times perSliceAngle.

44
00:03:16.465 --> 00:03:21.769
And the endAngle is just
the index + 1 of your

45
00:03:21.769 --> 00:03:28.638
perSliceAngle.
&gt;&gt; Shirley Wu: So

46
00:03:28.638 --> 00:03:31.060
I think that mightbe
the easier way to do it.

47
00:03:31.060 --> 00:03:35.861
The other way to do it is l create
a timescale and then add a day for

48
00:03:35.861 --> 00:03:39.856
the endAngle, etc,
which is a little bit painful.

