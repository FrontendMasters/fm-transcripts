WEBVTT

1
00:00:00.000 --> 00:00:03.864
&gt;&gt; Shirley Wu: What you are doing
data visualization and react,

2
00:00:03.864 --> 00:00:08.654
I think that's one of the best
things of using them together.

3
00:00:08.654 --> 00:00:13.349
That you get these kind of really fancy
interactions that look really complex,

4
00:00:13.349 --> 00:00:14.410
for nearly free.

5
00:00:14.410 --> 00:00:19.834
This is really easy to implement and
I'm going to show you how.

6
00:00:19.834 --> 00:00:24.145
So, like with the axes,
what we want to do is

7
00:00:24.145 --> 00:00:28.936
create a brush instance
in componentDidMount.

8
00:00:28.936 --> 00:00:32.808
We want to define the brushable
area with this extent.

9
00:00:32.808 --> 00:00:37.274
So in this case the extent
is defining this, so

10
00:00:37.274 --> 00:00:43.455
this is the top left corner and
this is the bottom right corner and

11
00:00:43.455 --> 00:00:48.722
all this means that it's saying like,
a user can brush

12
00:00:48.722 --> 00:00:54.476
between those points within that area but
not more past it.

13
00:00:54.476 --> 00:00:56.611
And so that's pretty important or

14
00:00:56.611 --> 00:01:01.468
else you can imagine if we don't define
that, then somebody might just try and

15
00:01:01.468 --> 00:01:04.943
do a brush from this corner
to this corner or something.

16
00:01:04.943 --> 00:01:09.352
And you want to be able to limit
to just say to this bar chart.

17
00:01:09.352 --> 00:01:15.251
So that's what this .extent is for,
quite important.

18
00:01:15.251 --> 00:01:20.103
Also very important pass in a function to

19
00:01:20.103 --> 00:01:24.819
execute on every brush interactions.

20
00:01:24.819 --> 00:01:30.498
So if like the person is dragging
the brush or after they they've

21
00:01:30.498 --> 00:01:36.191
drag the brush and they've let go
pass in a function to execute.

22
00:01:36.191 --> 00:01:41.386
When that happens and that's important
because, well you'll see in a little

23
00:01:41.386 --> 00:01:47.660
bit what D3 brush gives you and then we'll
talk about why that's really important.

24
00:01:47.660 --> 00:01:55.520
Like before, in render,
&gt;&gt; Shirley Wu: Create the group component.

25
00:01:55.520 --> 00:01:59.610
And then in componentDidMount
instead of componentDidUpdate

26
00:01:59.610 --> 00:02:02.940
in componentDidMount because
you only need to do this once.

27
00:02:02.940 --> 00:02:07.835
You need to, you only in D3 only need
to create these DOM elements once.

28
00:02:07.835 --> 00:02:12.526
So, in componentDidMount,
select that group and

29
00:02:12.526 --> 00:02:18.260
call the brush generator function and
this is all it takes.

30
00:02:18.260 --> 00:02:24.760
This first part, this render,
and this third part, and then

31
00:02:26.480 --> 00:02:32.660
some function to execute
after the brush is released.

32
00:02:32.660 --> 00:02:38.280
And that's all you need for
The functionality you saw before.

33
00:02:38.280 --> 00:02:43.640
So let's add that interaction
into the bar chart so

34
00:02:43.640 --> 00:02:45.998
that we can see exactly how easy it is.

35
00:02:45.998 --> 00:02:55.553
So,
&gt;&gt; Shirley Wu: What we want to do is,

36
00:02:55.553 --> 00:02:58.220
actually let me, so this is a.

37
00:02:59.380 --> 00:03:02.420
Live, you can play with this, so
this is kind of the functionlity.

38
00:03:05.450 --> 00:03:09.170
So let's do that first.

39
00:03:09.170 --> 00:03:13.990
Okay so we have the bar chart
that we ended up with before,

40
00:03:13.990 --> 00:03:18.944
and then let's add the brush capability.

41
00:03:20.570 --> 00:03:25.760
So, what I mentioned before is that we
need to do this end component amount.

42
00:03:28.680 --> 00:03:33.226
So first, let's create the brush and
component amount.

43
00:03:33.226 --> 00:03:39.013
This .brush is equal to d3.brush and
then we're going to give

44
00:03:39.013 --> 00:03:44.060
it the brushable area with extent and
we passed that in.

45
00:03:44.060 --> 00:03:46.433
It's an array of arrays.

46
00:03:46.433 --> 00:03:49.175
And so we give it,

47
00:03:51.492 --> 00:03:56.377
&gt;&gt; Shirley Wu: The top left corner.

48
00:03:56.377 --> 00:04:00.571
And in that case, for us,

49
00:04:00.571 --> 00:04:08.581
the top left is the exposition
is margin.left and

50
00:04:08.581 --> 00:04:14.492
then the y position is margin.top,

51
00:04:14.492 --> 00:04:19.641
and then this is our bottom right

52
00:04:19.641 --> 00:04:24.616
corner of the brushable area.

53
00:04:24.616 --> 00:04:32.113
And that is width minus margin.right and

54
00:04:32.113 --> 00:04:37.261
height minus margin.top.

55
00:04:43.649 --> 00:04:46.843
&gt;&gt; Shirley Wu: So we've defined that.

56
00:04:46.843 --> 00:04:52.691
And then we're just
gonna do a function for

57
00:04:52.691 --> 00:04:55.615
when the event ends,

58
00:04:55.615 --> 00:05:01.802
when the brushing ends, do something here.

59
00:05:01.802 --> 00:05:05.157
So, I'll leave that blank for now.

60
00:05:05.157 --> 00:05:10.291
And then, and here in the render,

61
00:05:10.291 --> 00:05:18.965
I'm going to create a group with
a rough brush like I did for

62
00:05:18.965 --> 00:05:23.247
the axis
&gt;&gt; Shirley Wu: And

63
00:05:23.247 --> 00:05:28.287
then I'm going to select that using

64
00:05:28.287 --> 00:05:33.695
d3.this.refs.brush
&gt;&gt; Shirley Wu: And

65
00:05:33.695 --> 00:05:37.434
then I'm going to call this.brush.

66
00:05:37.434 --> 00:05:42.516
And so those are the three things
I mentioned and now you can

67
00:05:42.516 --> 00:05:49.710
see I have this little rectangle that
I can drag around and use as a brush.

68
00:05:49.710 --> 00:05:55.131
Now you might have
noticed that even though

69
00:05:55.131 --> 00:06:03.424
I'm dragging it around nothing
is happening within this chart.

70
00:06:03.424 --> 00:06:07.045
Nothing is getting grayed out,
nothing over here is getting grayed

71
00:06:07.045 --> 00:06:11.558
out.
&gt;&gt; Shirley Wu: And

72
00:06:11.558 --> 00:06:16.615
the reason for
that is because all D3 brush does for

73
00:06:16.615 --> 00:06:21.089
us is it gives us this
little interactivity.

74
00:06:21.089 --> 00:06:26.274
And then, while you're brushing or

75
00:06:26.274 --> 00:06:33.977
on brush end and
it gives you D3.event.selection.

76
00:06:33.977 --> 00:06:39.260
And what that does is give us

77
00:06:39.260 --> 00:06:44.313
then i am going to make this

78
00:06:44.313 --> 00:06:49.152
brush X, oops, sorry.

79
00:06:49.152 --> 00:06:52.036
I am just going to make
it a horizontal brush, so

80
00:06:52.036 --> 00:06:55.931
brush X is a horizontal brush and
brush Y is a vertical brush, and

81
00:06:55.931 --> 00:06:59.482
then if it is just brush,
it is a brush in both directions.

82
00:06:59.482 --> 00:07:04.557
So for us today, I'm just going to
use a horizontal brush like this.

83
00:07:04.557 --> 00:07:09.192
And then you can see these tiny little,

84
00:07:09.192 --> 00:07:14.250
so, what D3 gives us with D3 brush is this

85
00:07:14.250 --> 00:07:19.182
functionality as well as these numbers.

86
00:07:19.182 --> 00:07:26.041
Which is basically your
&gt;&gt; Shirley Wu: This

87
00:07:26.041 --> 00:07:30.465
is your x0 and this your x1.

88
00:07:30.465 --> 00:07:37.749
So basically it gives us back the x
position of the left hand side and

89
00:07:37.749 --> 00:07:42.056
the x position of your right hand side.

90
00:07:42.056 --> 00:07:46.304
And this is really important

91
00:07:46.304 --> 00:07:51.260
because then what I can do is say,

92
00:07:51.260 --> 00:07:57.986
I want the 2x positions so
i can say- min x and

93
00:07:57.986 --> 00:08:04.359
max x is equal to d3.event .selection.

94
00:08:04.359 --> 00:08:09.567
And then this is another place where

95
00:08:09.567 --> 00:08:16.338
d3-scale is really cool
because I can then,

96
00:08:16.338 --> 00:08:21.648
oops.
&gt;&gt; Shirley Wu: Say give me back.

97
00:08:32.567 --> 00:08:34.079
&gt;&gt; Shirley Wu: For the min x,

98
00:08:34.079 --> 00:08:39.170
give me back the corresponding dates.

99
00:08:39.170 --> 00:08:44.515
So the x scale that we learned about
at the very beginning of the class.

100
00:08:44.515 --> 00:08:49.221
That one was taking a date and
turning it into a x value, right?

101
00:08:49.221 --> 00:08:54.769
But scales are really cool in D3,
because if you just do it .invert,

102
00:08:54.769 --> 00:08:57.589
what you can do is give it an x value,

103
00:08:57.589 --> 00:09:01.838
give it a range, and
it will give you back the domain.

104
00:09:01.838 --> 00:09:05.501
So if I just do this right now,

105
00:09:05.501 --> 00:09:10.483
what I'm going to get
is the date of this x

106
00:09:10.483 --> 00:09:18.484
position
&gt;&gt; Shirley Wu: So

107
00:09:18.484 --> 00:09:23.347
if I do that it's gonna give me, so
it's telling me it's April 10th.

108
00:09:23.347 --> 00:09:27.056
So this is April 10th, and
then you can imagine if I do

109
00:09:28.858 --> 00:09:32.000
&gt;&gt; Shirley Wu: xScale.invert then max.

110
00:09:34.300 --> 00:09:37.822
Then as soon as I do this,
it will tell me,

111
00:09:37.822 --> 00:09:43.782
this exposition is February 6th,
and this exposition is June 3rd.

112
00:09:43.782 --> 00:09:47.263
And now from here on, everything is react,

113
00:09:47.263 --> 00:09:51.690
because basically what we
want to do is propagate.

114
00:09:51.690 --> 00:09:56.610
So we just want to set this
on the parent component.

115
00:09:56.610 --> 00:09:59.780
We want this to be a state
on the parent component.

116
00:09:59.780 --> 00:10:04.840
So let me open up app.js and

117
00:10:04.840 --> 00:10:12.160
I have this thing called range that
I'm going to give a time range.

118
00:10:13.490 --> 00:10:18.975
And then I already have this function
that I wrote called update range.

119
00:10:18.975 --> 00:10:24.704
All that is is takes that array and
sets state.

120
00:10:24.704 --> 00:10:30.541
I'm going to pass both
of those into my charts.

121
00:10:30.541 --> 00:10:34.808
So I'm going to pass in, on top of
the data, I'm going to pass in that range.

122
00:10:34.808 --> 00:10:37.115
And I'm going to pass in that function.

123
00:10:37.115 --> 00:10:41.433
And I've done that for
the bar chart above right here.

124
00:10:41.433 --> 00:10:45.185
I've done that for the radio chart and

125
00:10:45.185 --> 00:10:51.408
right now I'm gonna do it for
the chart that we're modifying.

126
00:10:51.408 --> 00:10:55.294
So I say, this.state.range and

127
00:10:55.294 --> 00:11:01.996
updateRange is equal to
this.updateRange the function.

128
00:11:01.996 --> 00:11:05.839
And now I can go back into my Chart.js and

129
00:11:05.839 --> 00:11:11.850
at the very end of this function,
I can say that this.

130
00:11:11.850 --> 00:11:17.780
Alt props, dot, update range,
and passing that range.

131
00:11:17.780 --> 00:11:22.498
And then, once I do this,

132
00:11:22.498 --> 00:11:29.810
everything here updates accordingly.

133
00:11:29.810 --> 00:11:33.600
But notice were one more
step away from being done.

134
00:11:33.600 --> 00:11:37.970
Because right now everything
here is still colored.

135
00:11:37.970 --> 00:11:40.540
And that is as simple as saying,

136
00:11:41.920 --> 00:11:47.110
when we're calculating the bars, let's
calculate if it should be colored or not.

137
00:11:47.110 --> 00:11:52.117
If this particular bar should be colored
or not, and the way that we want

138
00:11:52.117 --> 00:11:57.762
to do that is let's say,
&gt;&gt; Shirley Wu: Let's

139
00:11:57.762 --> 00:12:02.747
get the range out of the props.
&gt;&gt; Shirley Wu: And

140
00:12:02.747 --> 00:12:06.951
we'll say if there's no range, or

141
00:12:06.951 --> 00:12:12.422
if this,
&gt;&gt; Shirley Wu: or

142
00:12:12.422 --> 00:12:17.807
if this bar, the date of this bar

143
00:12:17.807 --> 00:12:23.992
is greater than the minimum dates and

144
00:12:23.992 --> 00:12:28.994
less than the maximum dates.

145
00:12:28.994 --> 00:12:35.416
Than it should be colored and so in here
in the fill we'll just say is, colored.

146
00:12:35.416 --> 00:12:39.587
and it should be colored then, and
let's use the color scale, and

147
00:12:39.587 --> 00:12:41.612
if not let's pass in some grey.

148
00:12:41.612 --> 00:12:48.860
And, yes.
&gt;&gt; Shirley Wu: That

149
00:12:48.860 --> 00:12:52.284
is not what I was expecting.

150
00:12:52.284 --> 00:12:57.854
It is colored.
&gt;&gt; Speaker 2: Arranged

151
00:12:57.854 --> 00:13:00.170
out lane?
&gt;&gt; Shirley Wu: Thank you so much.

152
00:13:00.170 --> 00:13:01.803
Yes, cuz it's an array.

153
00:13:01.803 --> 00:13:02.990
Thank you.

154
00:13:02.990 --> 00:13:06.835
Yes, so if there's range.length,
thank you.

155
00:13:06.835 --> 00:13:12.422
And now, if I do the brush,
everything is hooked up.

156
00:13:12.422 --> 00:13:17.605
And these will be colored within and
gray without.

157
00:13:17.605 --> 00:13:21.838
And because I have this same
exact code on the radio chart and

158
00:13:21.838 --> 00:13:28.870
the other bar chart
&gt;&gt; Shirley Wu: The brushing will work.

159
00:13:30.480 --> 00:13:31.620
Look at that.

160
00:13:31.620 --> 00:13:35.930
That's so that's really interesting
because I have this brushing and

161
00:13:35.930 --> 00:13:40.000
this brushing and so whatever is the
latest brush will overwrite the other one.

162
00:13:41.570 --> 00:13:46.397
Not, I think that's more
a bug than a feature, but.

163
00:13:46.397 --> 00:13:52.899
But the point is the point is Look.

164
00:13:52.899 --> 00:13:54.571
That's how easy it was.

165
00:13:54.571 --> 00:13:57.121
Those three steps to
draw the brushable area.

166
00:13:57.121 --> 00:14:02.548
And then using D3.event.selection,
getting the min x and

167
00:14:02.548 --> 00:14:09.761
the max x, inverting that back to the
dates, setting that on the root component.

168
00:14:09.761 --> 00:14:14.919
And then from there on, it's everything
you probably already usually do with your

169
00:14:14.919 --> 00:14:20.373
React.Components to get this interaction,
like this very fancy looking interaction

170
00:14:20.373 --> 00:14:27.078
that actually doesn't need that much code.
&gt;&gt; Speaker 3: Can you talk

171
00:14:27.078 --> 00:14:30.600
a little bit more about that invert part?
&gt;&gt; Shirley Wu: Yeah.

172
00:14:32.960 --> 00:14:37.500
So there's actually not much
more to say other than to say so

173
00:14:37.500 --> 00:14:40.760
scales are to go from
your domain to the range.

174
00:14:40.760 --> 00:14:45.439
But sometimes you just want to go
from the range to the domain, and

175
00:14:45.439 --> 00:14:48.858
when that happens,
you want to use dot invert.

176
00:14:48.858 --> 00:14:54.043
And so this is really, really,
great when you have user interaction and

177
00:14:54.043 --> 00:14:59.993
especially if that user interaction gives
you back an x-y position on the screen or

178
00:14:59.993 --> 00:15:01.609
something like that.

179
00:15:01.609 --> 00:15:04.910
And you want to ma that
back to your raw data so

180
00:15:04.910 --> 00:15:09.303
that you can do something like
filtering or aggregating.

181
00:15:09.303 --> 00:15:14.199
So you can imagine, you can do the same
exact thing if this was like a 2

182
00:15:14.199 --> 00:15:19.535
dimensional brush, and then you can
get the y, the min y, the max y, etc.

183
00:15:19.535 --> 00:15:25.227
And then get the temperature back,
that's also another thing.

184
00:15:25.227 --> 00:15:28.962
And let me filter by the temperature, and

185
00:15:28.962 --> 00:15:34.739
only color the bars where it's
within that temperature range.

186
00:15:34.739 --> 00:15:36.952
So you can do something like that also.

187
00:15:36.952 --> 00:15:40.687
And that's what invar is
really really good for.

188
00:15:40.687 --> 00:15:42.551
And I think you can do this for

189
00:15:42.551 --> 00:15:47.784
almost every single scale I think you can
do this for almost every single scale.

190
00:15:47.784 --> 00:15:52.113
Instead of going from your raw
data to the screen space, it's for

191
00:15:52.113 --> 00:15:56.139
when you want go from your screen
space back to your raw data.

192
00:15:56.139 --> 00:15:57.896
Yeah.

193
00:15:57.896 --> 00:16:01.005
Thank you for that question.
&gt;&gt; Speaker 4: You'd use brush for.

194
00:16:01.005 --> 00:16:01.789
&gt;&gt; Speaker 4: Do you use brush for

195
00:16:01.789 --> 00:16:03.556
anything besides just coloring the data?

196
00:16:03.556 --> 00:16:06.156
I'm assuming you can change of data set,
zoom in,

197
00:16:06.156 --> 00:16:08.788
or?
&gt;&gt; Shirley Wu: So I can show you something

198
00:16:08.788 --> 00:16:14.509
that's not my example.
&gt;&gt; Shirley Wu: But

199
00:16:14.509 --> 00:16:15.789
it's called Crossfilter.

200
00:16:15.789 --> 00:16:19.804
I think this is not maintained anymore.

201
00:16:19.804 --> 00:16:25.303
But you can imagine, for example this is,
I think, airline time performance.

202
00:16:25.303 --> 00:16:29.719
So this whole thing is a dataset and
then this is talking about

203
00:16:29.719 --> 00:16:33.976
,it's like just a bunch of histograms and
times of days.

204
00:16:33.976 --> 00:16:39.392
So you can brush and
filter let's say like you just want

205
00:16:39.392 --> 00:16:44.474
to see airplanes that I
guess go between 6 AM to 2.

206
00:16:44.474 --> 00:16:48.882
You want to see the ones that are,
have it,

207
00:16:48.882 --> 00:16:54.646
arrival delay of, I mean,
that’s a bad, [LAUGH] Line.

208
00:16:54.646 --> 00:16:58.586
[LAUGH] I mean,
do you want to see all the ones that have,

209
00:16:58.586 --> 00:17:04.426
are going long distances, maybe these
are cross continental, wait, hold on.

210
00:17:04.426 --> 00:17:09.512
Cross ocean and lets say you want it to

211
00:17:09.512 --> 00:17:16.894
see it in maybe you only want
to see it in spring time and

212
00:17:16.894 --> 00:17:22.190
then that nose down your data set.

213
00:17:22.190 --> 00:17:26.944
And this is really, really cool cuz

214
00:17:26.944 --> 00:17:31.859
it's really cool for exploratory,

215
00:17:31.859 --> 00:17:38.530
visualizations where like
where I guess more to.

216
00:17:40.100 --> 00:17:43.520
Be able to filter down by a bunch of
different dimensions of the data and

217
00:17:43.520 --> 00:17:46.770
then come to like a final results.

218
00:17:46.770 --> 00:17:53.644
And this is I think the most common
way I see brush is being used but

219
00:17:53.644 --> 00:17:58.115
obviously there is like other examples.

220
00:17:58.115 --> 00:18:02.047
This one's a fun one.

221
00:18:02.047 --> 00:18:06.259
I think this is like the RGB.

222
00:18:06.259 --> 00:18:10.692
And then if you move it around her.

223
00:18:10.692 --> 00:18:15.168
[LAUGH] It just shows you
the color makeup of that section I

224
00:18:15.168 --> 00:18:21.296
believe.
&gt;&gt; Shirley Wu: So

225
00:18:21.296 --> 00:18:25.056
anywhere from useful to fun.

226
00:18:25.056 --> 00:18:26.788
[LAUGH]
&gt;&gt; Speaker 4: Arc you

227
00:18:26.788 --> 00:18:29.160
were talking about earlier?
&gt;&gt; Shirley Wu: Sorry, what?

228
00:18:29.160 --> 00:18:31.460
&gt;&gt; Speaker 4: What's the data arc you were

229
00:18:34.750 --> 00:18:37.142
talking about earlier?
&gt;&gt; Shirley Wu: Yeah, I, yeah.

230
00:18:37.142 --> 00:18:41.036
[LAUGH]
&gt;&gt; Shirley Wu: So I mean,

231
00:18:41.036 --> 00:18:48.493
it's basically the funnest part of all of
this is thinking about applications for

232
00:18:48.493 --> 00:18:55.100
each of these functionalities that
might be outside of the box, right?

233
00:18:55.100 --> 00:18:57.620
Like these might be the things that
people usually do with it, but

234
00:18:57.620 --> 00:19:03.000
then if you can think of where else this
can be applied that's the fun part, right?

235
00:19:03.000 --> 00:19:04.620
So, yeah, this is brushes.

236
00:19:04.620 --> 00:19:09.180
And I wanted to show it
because it's really fun.

237
00:19:09.180 --> 00:19:11.450
And it's quite easy.

238
00:19:11.450 --> 00:19:18.760
So, I think those cross-filter examples
are maybe six or seven years old.

239
00:19:18.760 --> 00:19:23.139
And I think it's If I remember
correctly it's relatively

240
00:19:23.139 --> 00:19:27.884
complicated to do this but
then in React it's super easy to do.

241
00:19:27.884 --> 00:19:32.921
Because React is all about
interactions with one section of

242
00:19:32.921 --> 00:19:38.574
your page that will update other
parts of your page really easily.

