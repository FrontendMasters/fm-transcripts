WEBVTT

1
00:00:00.000 --> 00:00:03.799
Let's talk a little bit about
building libraries with Vite.

2
00:00:03.799 --> 00:00:05.952
There's a lot of reasons you
might want to build a library,

3
00:00:05.952 --> 00:00:08.203
maybe you just want to create
an open source library, great.

4
00:00:08.203 --> 00:00:13.355
Vite is really great for that, especially
if it's like, I've got TypeScript or

5
00:00:13.355 --> 00:00:17.249
whatever, or I'm working with
a bunch of different file types.

6
00:00:17.249 --> 00:00:23.089
We can generate files that
are regular old JavaScript.

7
00:00:23.089 --> 00:00:27.654
And as I said before, at the current
moment, we live in a world where

8
00:00:27.654 --> 00:00:32.061
the JavaScript ecosystem is somewhat
split between Common JS and

9
00:00:32.061 --> 00:00:35.681
ES modules, so
maybe you wanna output both, right?

10
00:00:35.681 --> 00:00:38.482
And maybe you wanted to
write in TypeScript, or

11
00:00:38.482 --> 00:00:40.862
maybe you're making a design system and

12
00:00:40.862 --> 00:00:45.080
you wanna actually output components
with the CSS, so on and so forth.

13
00:00:45.080 --> 00:00:49.112
Now, if you think about this, this
shouldn't be all that hard, and it's not.

14
00:00:49.112 --> 00:00:51.924
But what has been the entry point for

15
00:00:51.924 --> 00:00:55.591
every single Vite example we've done so
far?

16
00:00:55.591 --> 00:00:57.377
Index.html, right?

17
00:00:57.377 --> 00:01:01.918
Well, how's that gonna work with
the library that you're building, right?

18
00:01:01.918 --> 00:01:03.979
That doesn't really make sense, right?

19
00:01:03.979 --> 00:01:09.316
Cuz Vite's main purpose is to go ahead and

20
00:01:09.316 --> 00:01:13.287
try to build client side apps.

21
00:01:13.287 --> 00:01:18.318
That said, to no one's surprise, it does
have a mode set up for making libraries.

22
00:01:18.318 --> 00:01:20.780
Would anyone like to venture,
I guess, what the mode for

23
00:01:20.780 --> 00:01:22.180
creating libraries is called?

24
00:01:26.072 --> 00:01:26.971
&gt;&gt; Library.

25
00:01:26.971 --> 00:01:29.493
&gt;&gt; Library what?

26
00:01:29.493 --> 00:01:30.162
Mode to creating libraries?

27
00:01:30.162 --> 00:01:31.289
&gt;&gt; Library freeze.

28
00:01:31.289 --> 00:01:33.964
&gt;&gt; We'll go with that,
library freeze, library mode.

29
00:01:33.964 --> 00:01:37.580
I don't know if they're actually
specific on if it's mode.

30
00:01:37.580 --> 00:01:39.361
I think it's called library mode.

31
00:01:39.361 --> 00:01:42.564
We'll find out, cool.

32
00:01:42.564 --> 00:01:48.043
And basically,
we just have to kind of opt into

33
00:01:48.043 --> 00:01:53.241
a few extra features, and this is, again,

34
00:01:53.241 --> 00:01:58.159
us going into our configuration again for

35
00:01:58.159 --> 00:02:01.265
the first time in a while.

36
00:02:01.265 --> 00:02:08.080
And so, for instance,
I might do with components and

37
00:02:08.080 --> 00:02:15.360
then have you all do with one
of these files, we'll see.

38
00:02:15.360 --> 00:02:19.070
The beginning piece is somebody's.

39
00:02:19.070 --> 00:02:23.223
Let's go into those
components I had before.

40
00:02:23.223 --> 00:02:25.670
Or I have the other repo,
the Vite components.

41
00:02:25.670 --> 00:02:28.146
Let me go in there.

42
00:02:30.728 --> 00:02:35.294
Vite components, I'll just open that
up real quick and we'll take a look.

43
00:02:35.294 --> 00:02:39.563
Just make a new branch now
called live coding, no.

44
00:02:42.023 --> 00:02:47.924
The live coding, awesome.

45
00:02:47.924 --> 00:02:53.286
All right, so in here I've got,
it's based on the React template.

46
00:02:53.286 --> 00:02:58.981
The only things I put in here is the
world's simplest button with some classes,

47
00:02:58.981 --> 00:03:04.602
and an input field, right, to kind of
be the basis of a design system, right?

48
00:03:04.602 --> 00:03:07.513
If I wanna make a library
full of these files now,

49
00:03:07.513 --> 00:03:12.284
it could be components, it could be just
a bunch of utility functions, right?

50
00:03:12.284 --> 00:03:19.832
What we do with the library is totally
agnostic, but it's the same basic idea.

51
00:03:19.832 --> 00:03:23.827
There are just a few things that
we need to kind of put in place.

52
00:03:23.827 --> 00:03:26.529
So in here I do have a Vite
config cuz we had React in here.

53
00:03:26.529 --> 00:03:31.138
This is very similar to what you
saw when we created a template.

54
00:03:31.138 --> 00:03:36.041
One of the cool things is that
the Vite team understands that

55
00:03:36.041 --> 00:03:41.140
if you make a library,
you might also want to make a website for

56
00:03:41.140 --> 00:03:45.850
that library, or
at least run a development server where

57
00:03:45.850 --> 00:03:50.787
you can see the components or
something along those lines.

58
00:03:50.787 --> 00:03:56.417
And so, it does allow you to both have
everything we have at the index.html file,

59
00:03:56.417 --> 00:03:59.924
and then also that it could
even just be storybook or

60
00:03:59.924 --> 00:04:04.273
something along those lines,
depends on what you're doing.

61
00:04:04.273 --> 00:04:08.799
And then also, actually, instead of using
HTML file as the entry point, I actually

62
00:04:08.799 --> 00:04:12.940
give you the ability to specify, no,
no, like what we're used to see in Webpack

63
00:04:12.940 --> 00:04:17.594
and all those, like start at this
file .js, and then the imports from there,

64
00:04:17.594 --> 00:04:20.591
and then build it into a dist
directory as we would see.

65
00:04:20.591 --> 00:04:24.449
And what we're gonna do is we're gonna
try to build it for both Common JS and

66
00:04:24.449 --> 00:04:28.632
ES Modules as well, and you can do other
formats if you really want to, I don't.

67
00:04:28.632 --> 00:04:33.527
And you kinda work through the process
cuz the initial step is easy, but then

68
00:04:33.527 --> 00:04:38.445
getting it fully in a way that you can
consume it takes a few more extra steps.

69
00:04:38.445 --> 00:04:40.978
So, in here there is also a build option.

70
00:04:40.978 --> 00:04:43.948
There's a whole bunch of
things we can tweak in here,

71
00:04:43.948 --> 00:04:45.800
like you won't tweak that many.

72
00:04:45.800 --> 00:04:48.179
As you can see,
we've gotten a lot of power so

73
00:04:48.179 --> 00:04:52.508
far out of doing very little to our Vite
Config other than popping in some plugins.

74
00:04:52.508 --> 00:04:57.168
But now we've become
the kind of people who

75
00:04:57.168 --> 00:05:01.837
want to go ahead and build some libraries.

76
00:05:01.837 --> 00:05:06.061
So with this, so we can say build, and
then to get into library mode, we just

77
00:05:06.061 --> 00:05:10.494
say lib, that's why I don't remember,
is it library mode or library freeze?

78
00:05:10.494 --> 00:05:14.137
What are you angry about?

79
00:05:14.137 --> 00:05:16.843
Yeah, it just doesn't like,
I haven't put anything in here.

80
00:05:16.843 --> 00:05:18.578
Where we give it an entry.

81
00:05:18.578 --> 00:05:24.157
So I've got this index.ts which is just
exporting out these two components,

82
00:05:24.157 --> 00:05:26.873
that seems like a good place to start.

83
00:05:26.873 --> 00:05:33.106
And so we'll say, entry, and
can I just do a dirname in this file?

84
00:05:33.106 --> 00:05:39.767
I forgot, dirname,
that resolve's gonna come from path.

85
00:05:39.767 --> 00:05:45.357
Path dirname, and
then I'm gonna say source, and

86
00:05:45.357 --> 00:05:52.000
then what, components, cool,
and I give my library name.

87
00:05:52.000 --> 00:05:53.783
What's the name you'd
like design system be?

88
00:05:53.783 --> 00:05:55.700
Anyone have a strong opinion?

89
00:05:59.410 --> 00:06:01.222
There's thinking faces, but
I hear no, anyone suggest?

90
00:06:01.222 --> 00:06:02.206
What's that?

91
00:06:02.206 --> 00:06:03.692
&gt;&gt; Just do Frontend Masters.

92
00:06:03.692 --> 00:06:04.980
&gt;&gt; Frontend Masters, that's it.

93
00:06:04.980 --> 00:06:08.956
I'm in charge of the Frontend Masters
design system now.

94
00:06:18.021 --> 00:06:21.893
That's ridiculous, but it'll work.

95
00:06:21.893 --> 00:06:26.746
And then fileName, and this is what
we want the output file to be.

96
00:06:26.746 --> 00:06:30.829
Frontend master's design system,
let's give it the name of it.

97
00:06:30.829 --> 00:06:34.081
And let's see what happens if
I do an npm run build now.

98
00:06:37.814 --> 00:06:43.539
You can see that it produced two files,
one of dot js,

99
00:06:43.539 --> 00:06:49.009
that is my ES module, and
another one that is a UMD,

100
00:06:49.009 --> 00:06:53.479
which is universal module declaration.

101
00:06:53.479 --> 00:06:55.940
It's one of those things where you
didn't realize we were gonna ever say

102
00:06:55.940 --> 00:06:56.715
the letters out loud.

103
00:06:56.715 --> 00:06:58.640
That sounds about, right?
I know the U is universal,

104
00:06:58.640 --> 00:07:00.112
the M seems like module.

105
00:07:00.112 --> 00:07:03.500
And then definition,
I don't know, who knows?

106
00:07:03.500 --> 00:07:06.163
Somebody definitely knows,
I can see this in the chat, and

107
00:07:06.163 --> 00:07:09.051
then you can tell me in a second,
or somebody can live follow up.

108
00:07:09.051 --> 00:07:12.268
And so we get these two files,
and also style.css,

109
00:07:12.268 --> 00:07:15.132
cuz that's actually
pulled in there as well.

110
00:07:15.132 --> 00:07:17.806
And it will generate those files for
me, right?

111
00:07:17.806 --> 00:07:21.371
And you can look in here and,
yeah, you know what?

112
00:07:21.371 --> 00:07:25.132
Let me tell you a problem
with my design system.

113
00:07:25.132 --> 00:07:28.805
It's 19 kilobytes.

114
00:07:28.805 --> 00:07:32.309
Let's look at the code that I'm shipping.

115
00:07:32.309 --> 00:07:38.061
That's my button CSS.

116
00:07:38.061 --> 00:07:40.817
My input's got even less cuz I got lazy.

117
00:07:40.817 --> 00:07:46.455
And that shouldn't be 19 kilobytes.

118
00:07:46.455 --> 00:07:49.665
Why is it 19 kilobytes?

119
00:07:49.665 --> 00:07:53.160
Cuz we've decided to
bundle in all of React.

120
00:07:53.160 --> 00:07:57.273
Which makes sense if you think about it,
right?

121
00:07:57.273 --> 00:08:01.830
Because in a lot of these build tools,

122
00:08:01.830 --> 00:08:06.254
React is implicitly also imported.

123
00:08:06.254 --> 00:08:11.570
If you're using JSX, you used to have to
do the import React in every single file.

124
00:08:11.570 --> 00:08:14.225
If you realize,
why you don't have to do that anymore,

125
00:08:14.225 --> 00:08:15.815
it's because they do it for you.

126
00:08:15.815 --> 00:08:19.080
So we've bundled in all of React.

127
00:08:19.080 --> 00:08:24.162
Is it fair to say that anyone
consuming my new awesome

128
00:08:24.162 --> 00:08:29.140
design system of React
components is using React?

129
00:08:29.140 --> 00:08:34.550
How badly do you think they want a second
version of React in their application?

130
00:08:34.550 --> 00:08:38.100
Those could potentially be a different
version of React, completely.

131
00:08:38.100 --> 00:08:40.426
They probably don't, right?

132
00:08:40.426 --> 00:08:42.268
But Vite is doing what you told it to do!

133
00:08:42.268 --> 00:08:47.053
It's bundled everything up for
you just like you asked, cuz it doesn't

134
00:08:47.053 --> 00:08:51.683
know about your dependencies that
are needed unknown dependencies,

135
00:08:51.683 --> 00:08:55.932
it just knows you said bundle
this stuff up, you require stuff.

136
00:08:55.932 --> 00:08:57.404
I did what I was asked, right?

137
00:08:57.404 --> 00:08:59.255
And it's been doing a lot
of tree shaking for you,

138
00:08:59.255 --> 00:09:01.870
a lot of code splitting on your behalf,
so we're gonna cut it a break.

139
00:09:01.870 --> 00:09:10.523
We just need to basically tell it what
exactly we would like to do in this case.

140
00:09:10.523 --> 00:09:13.450
And so, that's relatively easy.

141
00:09:13.450 --> 00:09:16.179
All we have to do is give it
a little bit of information.

142
00:09:16.179 --> 00:09:18.879
Now, we talked about in the beginning,
when we're in development,

143
00:09:18.879 --> 00:09:21.833
it's the esbuild doing a lot of stuff,
you can tweak all the options esbuild.

144
00:09:21.833 --> 00:09:25.388
And when we build for,
quote unquote, production or

145
00:09:25.388 --> 00:09:29.504
the output of my library,
then we're using RollUp, right?

146
00:09:29.504 --> 00:09:31.966
And Vite is just standing on
the shoulder of these giants and

147
00:09:31.966 --> 00:09:33.256
has a bunch of options in here.

148
00:09:33.256 --> 00:09:36.841
And so, well,
we're going to say, hey, RollUp,

149
00:09:36.841 --> 00:09:40.438
let me tell you what not to include,
React, right?

150
00:09:40.438 --> 00:09:43.356
Because we're gonna assume that they
have React as a pure dependency, and

151
00:09:43.356 --> 00:09:44.574
we're not going to bundle it.

152
00:09:44.574 --> 00:09:49.313
And so we do need to say that out loud.

153
00:09:49.313 --> 00:09:54.231
So here we can go as well into,
what is it?

154
00:09:58.532 --> 00:10:03.992
RollupOptions, and we can basically say

155
00:10:03.992 --> 00:10:08.988
what the external dependencies are.

156
00:10:08.988 --> 00:10:12.190
And so for the external dependencies,
we're gonna say React.

157
00:10:12.190 --> 00:10:14.420
We know it's not just React
that we've got to worry about.

158
00:10:14.420 --> 00:10:18.836
I don't think we actually
pull in React DOM.

159
00:10:18.836 --> 00:10:21.700
And then there's this, if you're using
React, you gotta worry about this one.

160
00:10:21.700 --> 00:10:24.010
If you're using like Vue or
something, you're making a Vue one,

161
00:10:24.010 --> 00:10:25.504
you don't have to think about this stuff.

162
00:10:25.504 --> 00:10:31.433
React.js runtime, we also just
don't want included either, right?

163
00:10:31.433 --> 00:10:37.629
And theoretically that will work for
a lot of the UMD declarations.

164
00:10:37.629 --> 00:10:43.089
And there's other options in there too,

165
00:10:43.089 --> 00:10:47.461
if I'm remembering correctly.

166
00:10:47.461 --> 00:10:51.249
Yeah, you can see in Common JS,
ES Modules, UMD, and then IFIS,

167
00:10:51.249 --> 00:10:54.702
which are what immediately
invoked function expressions,

168
00:10:54.702 --> 00:10:57.882
like the way we used to do
modules before we had modules,

169
00:10:57.882 --> 00:11:00.879
which is just a function
where you pass the stuff in.

170
00:11:00.879 --> 00:11:05.842
And so just need to know the names of
the things that it should expect to be

171
00:11:05.842 --> 00:11:07.429
globally available.

172
00:11:07.429 --> 00:11:10.345
And this really only matters to
some of those other formats, but

173
00:11:10.345 --> 00:11:12.190
we're trying to be good citizens here.

174
00:11:12.190 --> 00:11:18.742
And we'll say output, and
we'll just say that the globals are.

175
00:11:18.742 --> 00:11:22.000
And it's basically the name of
the import and then the global,

176
00:11:22.000 --> 00:11:25.705
we should assume React is available
if we're using these components.

177
00:11:25.705 --> 00:11:30.855
So we'll say, we would otherwise import
React, assume that there is a React

178
00:11:30.855 --> 00:11:36.259
object that has already been imported by
the consuming library or the consumer.

179
00:11:36.259 --> 00:11:37.321
We are the consuming library.

180
00:11:37.321 --> 00:11:44.660
And we'll just say,
react-dom as well, right?

181
00:11:44.660 --> 00:11:45.805
And now let's go build again.

182
00:11:48.425 --> 00:11:49.607
Hey, look at that.

183
00:11:49.607 --> 00:11:54.857
We went down from 13 kilobytes
to 0.5 kilobytes, right?

184
00:11:54.857 --> 00:12:00.060
Cuz we just didn't put all
of React in there as well.

185
00:12:00.060 --> 00:12:06.829
There is a little bit more work
that we need to do though.

186
00:12:06.829 --> 00:12:11.769
As you noticed, one of the nice
things is if we look at the build,

187
00:12:11.769 --> 00:12:15.440
those CSS modules are bundled
in there as well.

188
00:12:15.440 --> 00:12:16.460
Here we'll save so we get a little bit.

189
00:12:16.460 --> 00:12:21.872
So we get all of that for free and
they are scoped, which is pretty cool.

190
00:12:21.872 --> 00:12:23.953
I, for some reason,
decided to base style some stuff.

191
00:12:23.953 --> 00:12:28.016
We could turn those into classes and
it would work too.

192
00:12:28.016 --> 00:12:30.610
So those will be global because
they were just on the base.

193
00:12:30.610 --> 00:12:35.240
But our CSS modules are, in fact,

194
00:12:35.240 --> 00:12:39.072
scoped as appropriate, and

195
00:12:39.072 --> 00:12:43.551
I'm unclear how well we can see.

196
00:12:43.551 --> 00:12:48.667
But we might have one issue that we
need to deal with, which is we've got

197
00:12:48.667 --> 00:12:54.657
the classes in here, it looks like I might
have to squint in a second and figure out.

198
00:12:54.657 --> 00:12:59.139
It looks like that 0.5 kilobytes was
a little bit too small in this case.

199
00:12:59.139 --> 00:13:04.595
So I'm gonna peek at this real quick and
see if I made an obvious boo boo.

200
00:13:04.595 --> 00:13:09.925
So we go ahead and run our build,
and 0.5 K looks a little small.

201
00:13:09.925 --> 00:13:14.720
And if I look in here,
there ain't nothing, right?

202
00:13:14.720 --> 00:13:18.997
And so, I mean, there's a JSX runtime.

203
00:13:18.997 --> 00:13:22.168
And maybe we need to tweak that as well.

204
00:13:22.168 --> 00:13:26.671
But if we look, the issue is that
the way that I have this index.ts,

205
00:13:26.671 --> 00:13:32.450
we're actually exporting the star, but
the defaults are not necessarily included.

206
00:13:32.450 --> 00:13:36.566
So what I need to do, this is why
I hate default exports by the way.

207
00:13:36.566 --> 00:13:40.320
Who knows what I was thinking at the time?

208
00:13:40.320 --> 00:13:44.247
And so, we'll go in here,
we'll just export both of those.

209
00:13:44.247 --> 00:13:46.390
And again, we're gonna squint
at minified code for a second.

210
00:13:46.390 --> 00:13:48.130
But this looks a little bit more crap.

211
00:13:48.130 --> 00:13:50.089
We don't have React, right?

212
00:13:50.089 --> 00:13:53.769
All right, looks closer to a kilobyte,
and we can kind of see,

213
00:13:53.769 --> 00:13:57.113
if we squint hard enough,
those are the button classes.

214
00:13:57.113 --> 00:14:01.252
There's a dangerous prop
that we saw earlier, right?

215
00:14:01.252 --> 00:14:06.353
We've got the minified version
where we've got the button,

216
00:14:06.353 --> 00:14:12.052
we've got the input kind of like in
this one file in this case as well.

217
00:14:12.052 --> 00:14:17.598
And we've got the styles,
as we saw before in here too,

218
00:14:17.598 --> 00:14:20.792
and so that's all nice to have.

219
00:14:20.792 --> 00:14:26.473
And so we are at the beginnings of,
let's do this,

220
00:14:26.473 --> 00:14:30.980
react/jsx-runtime in there as well.

221
00:14:33.478 --> 00:14:38.256
I actually don't know what that
resolves to, so we're gonna leave it.

222
00:14:38.256 --> 00:14:41.503
And so, all right, we've got all of
that kind of in place cuz it wasn't

223
00:14:41.503 --> 00:14:44.320
actually pulling the library,
it was just a reference to it,

224
00:14:44.320 --> 00:14:46.891
which is probably fine cuz
it's one with side effects.

225
00:14:46.891 --> 00:14:51.289
If you looked at when we saw
the build before, I'll show you,

226
00:14:51.289 --> 00:14:54.291
it wasn't storing it into a thing.

227
00:14:54.291 --> 00:14:56.627
It's got the JSX in there.

228
00:14:56.627 --> 00:15:00.264
At this point it's not bundling it in
there, so I'm willing to say that for

229
00:15:00.264 --> 00:15:01.730
this point I'm cool with it.

