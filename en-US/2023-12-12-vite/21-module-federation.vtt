WEBVTT

1
00:00:00.000 --> 00:00:05.596
So let's talk about how to do
module federation using Vite.

2
00:00:05.596 --> 00:00:10.433
Module federation is,
a term of art which I'm pretty sure was

3
00:00:10.433 --> 00:00:13.791
made up by the Webpack team but it's cool.

4
00:00:13.791 --> 00:00:19.718
But it is mostly the popular in a lot of
the micro-frontend architecture, which I'm

5
00:00:19.718 --> 00:00:25.253
just gonna go on record saying, I don't
think it's the best idea in the world.

6
00:00:25.253 --> 00:00:28.548
But there are use cases,
even if you whether or

7
00:00:28.548 --> 00:00:32.869
not you agree with me on that one,
where it is kind of useful.

8
00:00:32.869 --> 00:00:37.043
So the idea is if you have a bunch of
smaller apps that all need the same

9
00:00:37.043 --> 00:00:41.001
component, and the library would
theoretically work except,

10
00:00:41.001 --> 00:00:43.657
let's say you update the navbar, right?

11
00:00:43.657 --> 00:00:46.775
Well, now you've got to push
that new navbar to every repo,

12
00:00:46.775 --> 00:00:49.599
which I would say,
I just don't have that many repos.

13
00:00:49.599 --> 00:00:52.455
But it's not always that easy.

14
00:00:52.455 --> 00:00:56.277
And, for instance, this is something
that I need to do because we have a team

15
00:00:56.277 --> 00:00:58.514
portal, we have a marketing site, right?

16
00:00:58.514 --> 00:01:00.514
We just got a navbar,
just one thing about navbar.

17
00:01:00.514 --> 00:01:03.888
And then you have the question
of wouldn't it be nice that

18
00:01:03.888 --> 00:01:08.056
we had the same navbar on the dark
side and the education side of money?

19
00:01:08.056 --> 00:01:10.297
Yeah, that would be nice.

20
00:01:10.297 --> 00:01:14.021
And what I don't wanna do,
is every time I build a navbar,

21
00:01:14.021 --> 00:01:18.505
what I don't wanna do is then have to
then bump the package version of my

22
00:01:18.505 --> 00:01:21.256
library in four different repos, right?

23
00:01:21.256 --> 00:01:22.721
Will I do it if I need to, sure.

24
00:01:22.721 --> 00:01:25.099
Do I want to, no.

25
00:01:25.099 --> 00:01:29.706
So what module federation does is
basically allows you to build a library

26
00:01:29.706 --> 00:01:34.460
and then put it somewhere on the Internet,
VSL S3 bucket, what have you,

27
00:01:34.460 --> 00:01:38.333
wherever you want somewhere
where it's hosted by a server.

28
00:01:38.333 --> 00:01:41.681
And then the consuming apps can load and

29
00:01:41.681 --> 00:01:46.562
fetch that module at runtime and
put it in place, right?

30
00:01:46.562 --> 00:01:50.888
So it's kind of an extension on
what we have with the library, but

31
00:01:50.888 --> 00:01:54.674
then we also want the ability
to kind of serve it, right?

32
00:01:54.674 --> 00:02:00.228
And then you need those other ones to know
how to kind of get that remote module,

33
00:02:00.228 --> 00:02:02.935
fetch it, and install it in the page.

34
00:02:02.935 --> 00:02:07.057
And like I said, that is in a lot
of ways very powerful, right?

35
00:02:07.057 --> 00:02:11.777
Because it saves you a lot of work
because now you can just literally update

36
00:02:11.777 --> 00:02:16.591
the module and then everyone who needs
it has the new version immediately.

37
00:02:16.591 --> 00:02:20.045
It terrifies me I'm willing to do it for
the marketing side.

38
00:02:20.045 --> 00:02:24.211
It terrifies me for the code app
because a change by one team could

39
00:02:24.211 --> 00:02:28.997
theoretically affect something on
the product that I can get paged over,

40
00:02:28.997 --> 00:02:32.959
and I don't like getting woken
up in the middle of the night.

41
00:02:32.959 --> 00:02:37.518
So we will do it on stuff
where I have a fallback, and

42
00:02:37.518 --> 00:02:41.205
fall back to the old navbar,
otherwise, but

43
00:02:41.205 --> 00:02:45.972
taking down production cuz
a deploy is a different thing.

44
00:02:45.972 --> 00:02:49.409
But I think there
are architectures built on it.

45
00:02:49.409 --> 00:02:52.456
And there are a lot of really
practical use cases as well.

46
00:02:52.456 --> 00:02:57.075
And I think when you need it and
when used with a little bit of discretion,

47
00:02:57.075 --> 00:02:58.611
is a powerful pattern.

48
00:02:58.611 --> 00:03:05.536
So there is a plugin that we can use,
this origin, it's a namespaced plugin.

49
00:03:05.536 --> 00:03:10.284
But originjs/vite-plugin-federation,

50
00:03:10.284 --> 00:03:17.471
you can use this on both the hosting
side as well as the receiving side.

51
00:03:17.471 --> 00:03:22.330
So we'll go ahead and
we'll give it a shot in our component app

52
00:03:22.330 --> 00:03:26.822
that we were using earlier,
that's the consuming app.

53
00:03:32.350 --> 00:03:37.612
Cool, and let's make sure
I've got all that committed.

54
00:03:37.612 --> 00:03:39.544
Yes, I do.

55
00:03:39.544 --> 00:03:44.848
We're gonna do git checkout -b

56
00:03:44.848 --> 00:03:51.534
live-coding-module-federation.

57
00:03:51.534 --> 00:03:55.443
Cool, and we've got all that in place.

58
00:03:55.443 --> 00:03:57.377
So let's do that npm install now.

59
00:03:57.377 --> 00:04:01.752
We've got the npm install originjs
module federation save-dev.

60
00:04:01.752 --> 00:04:02.816
We've got that in place.

61
00:04:02.816 --> 00:04:07.089
And so now, we're gonna swap out
some of our configuration before,

62
00:04:07.089 --> 00:04:11.227
cuz now we're gonna build this
library a little bit differently.

63
00:04:11.227 --> 00:04:16.659
So in this case,
we don't need all of the same plugins.

64
00:04:16.659 --> 00:04:21.770
Theoretically, I don't even think
I need the react one per se.

65
00:04:21.770 --> 00:04:24.356
So let's take it out for a second.

66
00:04:24.356 --> 00:04:29.592
We'll take out almost all this stuff,
cuz now we're effectively

67
00:04:29.592 --> 00:04:34.097
gonna serve this module in
a different version, right?

68
00:04:34.097 --> 00:04:36.484
Too many braces, cool.

69
00:04:36.484 --> 00:04:39.898
So now we can pull out all of this.

70
00:04:39.898 --> 00:04:44.581
And what we're going to say is,

71
00:04:47.255 --> 00:04:53.021
Well, actually,
we need to keep the react one, I'm sorry.

72
00:04:53.021 --> 00:04:55.731
Got a little carried away there.

73
00:04:55.731 --> 00:05:00.961
All right, so we've got the react,
put that back in there, cuz like, awesome.

74
00:05:00.961 --> 00:05:07.358
And then what we're gonna
do is we're gonna pull in,

75
00:05:07.358 --> 00:05:11.909
import federation from that origin,

76
00:05:11.909 --> 00:05:15.477
yeah, that's what we want.

77
00:05:15.477 --> 00:05:17.801
It's nice when it completely
works on your behalf.

78
00:05:17.801 --> 00:05:25.125
And so the component is gonna be our host,
no this is gonna be the remote app.

79
00:05:25.125 --> 00:05:28.023
And so what we'll say is,

80
00:05:30.736 --> 00:05:36.161
We'll say the name here, yeah,
remote app, whatever you wanna say.

81
00:05:36.161 --> 00:05:40.241
All right, and so
we've got the federation,

82
00:05:40.241 --> 00:05:43.697
which kind of sounds very star tricky.

83
00:05:43.697 --> 00:05:45.256
So I'm kinda into it.

84
00:05:45.256 --> 00:05:49.334
We do need to say,
federation, there we go.

85
00:05:49.334 --> 00:05:53.863
And here now we should have some
order completely on our hands,

86
00:05:53.863 --> 00:05:56.606
we'll say name, fem-components.

87
00:06:00.322 --> 00:06:01.978
Right, we've got that.

88
00:06:01.978 --> 00:06:03.321
All right, so the file name.

89
00:06:03.321 --> 00:06:06.844
The file name is basically when we go and
ask for a component,

90
00:06:06.844 --> 00:06:10.922
there's gotta be a file that's kind
of generated that's gonna say,

91
00:06:10.922 --> 00:06:13.431
here's the component that you asked for.

92
00:06:13.431 --> 00:06:19.821
And so, the convention most of
the time is this remoteEntry.

93
00:06:19.821 --> 00:06:21.608
So as long as it's the same,

94
00:06:21.608 --> 00:06:25.488
it doesn't actually matter,
but we'll have that in place.

95
00:06:25.488 --> 00:06:28.998
And then you'd have to say,
basically, what it exposes, right?

96
00:06:28.998 --> 00:06:32.071
And so,
what are the modules that are available?

97
00:06:32.071 --> 00:06:37.185
And this is pretty straightforward,

98
00:06:37.185 --> 00:06:42.137
so this is something like, button is

99
00:06:42.137 --> 00:06:47.425
the src/components/button.tsx.

100
00:06:47.425 --> 00:06:52.863
And then we can do the input too,

101
00:06:52.863 --> 00:07:00.929
which is ./src/components/input.tsx.

102
00:07:00.929 --> 00:07:06.354
Awesome, and then very similar to what
we had with the externals before,

103
00:07:06.354 --> 00:07:11.953
we'll say shared and we'll go through and
we'll say, okay, like react,

104
00:07:11.953 --> 00:07:17.467
they should start consuming this plugin
they should already have react and

105
00:07:17.467 --> 00:07:19.948
react-dom, sweet, and yeah.

106
00:07:19.948 --> 00:07:23.007
Let's try that out.

107
00:07:27.997 --> 00:07:33.008
And let's make sure that we've got
the correct format for the module.

108
00:07:33.008 --> 00:07:35.835
So I'm gonna say, esnext.

109
00:07:35.835 --> 00:07:39.128
Remember if I need that corrected,
but panicky enough that I

110
00:07:39.128 --> 00:07:42.693
wanna make sure that I've got
the correct format of the modules.

111
00:07:42.693 --> 00:07:48.144
And that should do the trick
in terms of serving, right?

112
00:07:48.144 --> 00:07:51.163
Then we also need to then receive, right?

113
00:07:51.163 --> 00:07:55.486
And so we had that other library before.

114
00:07:55.486 --> 00:07:58.408
Let's see, let's go in here.

115
00:07:58.408 --> 00:07:59.834
We got this vite-react.

116
00:07:59.834 --> 00:08:02.082
Let's pull this one up.

117
00:08:02.082 --> 00:08:09.500
And then the consuming code
is very similar as well.

118
00:08:09.500 --> 00:08:11.739
So we can kinda pull that together too.

119
00:08:11.739 --> 00:08:17.254
And so here we're gonna say, Vite-react.

120
00:08:17.254 --> 00:08:21.661
We will get rid of these for a second cuz
we're not pulling in the library anymore.

121
00:08:21.661 --> 00:08:24.823
We do need to install the same
library that we had earlier.

122
00:08:24.823 --> 00:08:31.129
So this npm install @originjs, right?

123
00:08:31.129 --> 00:08:33.967
And cool, so
we've got that in place, and so

124
00:08:33.967 --> 00:08:38.624
we'll go into the vite.config here
as well, and we'll do a little bit.

125
00:08:38.624 --> 00:08:43.077
It's very similar except we're
now on the receiving end.

126
00:08:43.077 --> 00:08:45.946
I gotta import that up
here as we did before.

127
00:08:51.959 --> 00:08:59.847
@originjs, except this point
we are now on the host side.

128
00:08:59.847 --> 00:09:06.806
So we'll say, name,
Host-app, then the remotes.

129
00:09:06.806 --> 00:09:11.215
And so this is where and like TypeScript
is gonna get a little angry with us.

130
00:09:11.215 --> 00:09:14.028
You could figure out clever
ways of getting the type files.

131
00:09:14.028 --> 00:09:16.954
Generally speaking, what I do is I, well,

132
00:09:16.954 --> 00:09:20.209
actually receive apps on
my end are JavaScript.

133
00:09:20.209 --> 00:09:23.677
The one with the components on
my end is the TypeScript one.

134
00:09:23.677 --> 00:09:27.660
At this point I would also have a library
with the types in it cuz that's better

135
00:09:27.660 --> 00:09:28.714
than trying to get.

136
00:09:28.714 --> 00:09:31.963
TypeScript gets very angry in your
editor if you don't have like,

137
00:09:31.963 --> 00:09:35.224
the VS code doesn't know that
they're remotely somewhere else.

138
00:09:35.224 --> 00:09:38.547
So having the types locally makes sense,
but we're not gonna worry about that.

139
00:09:38.547 --> 00:09:40.668
We'll probably do it mostly in JavaScript.

140
00:09:40.668 --> 00:09:43.308
And then you kinda give
it effectively like,

141
00:09:43.308 --> 00:09:46.719
we're gonna treat it almost
like it's a module, right?

142
00:09:46.719 --> 00:09:50.994
So you give it some, we'll call
it the other one, femd as before.

143
00:09:50.994 --> 00:09:56.087
We call it vite-react components,
we'll call it femds.

144
00:09:56.087 --> 00:10:01.875
And that is going to be the location
of the remote server, right?

145
00:10:01.875 --> 00:10:03.795
For me right now, this is all local.

146
00:10:03.795 --> 00:10:08.127
What I'm gonna end up doing is,
I'll use the preview server,

147
00:10:08.127 --> 00:10:10.756
just as a local host so we can get to it.

148
00:10:10.756 --> 00:10:15.366
So we'll say localhost:4173, and

149
00:10:15.366 --> 00:10:18.928
then /assets/remoteEntry.

150
00:10:18.928 --> 00:10:21.400
That's the same file we
set on the other side.

151
00:10:21.400 --> 00:10:26.056
So as long as they match,
we should be good to go.

152
00:10:26.056 --> 00:10:33.668
And then we just say, again,
the shared is react and,

153
00:10:33.668 --> 00:10:39.904
no, Someone remind me, I gotta put
a comment in there since I'm done typing.

154
00:10:42.451 --> 00:10:49.266
All right, so let's go in this one here
and we're gonna just host it real quick.

155
00:10:49.266 --> 00:10:50.733
So we'll do an npm run build.

156
00:10:55.277 --> 00:10:57.215
Cool, and
you can say it did a whole bunch of stuff.

157
00:10:57.215 --> 00:11:01.858
The plugin is doing most of the work here,
is put together the things we need.

158
00:11:01.858 --> 00:11:05.393
If some of these dependencies
are on the other side, we might not

159
00:11:05.393 --> 00:11:09.663
choose to have this as a library that
helps concatenate class names, right?

160
00:11:09.663 --> 00:11:14.572
You can choose the level of which you
wanna have some other libraries included

161
00:11:14.572 --> 00:11:15.110
or not.

162
00:11:15.110 --> 00:11:18.549
That all depends on your
particular situation, but

163
00:11:18.549 --> 00:11:23.328
you can see that we've got very
similar to what we've seen previously.

164
00:11:23.328 --> 00:11:28.168
If I wanted to take out the vite.svg,
I could do copy public directory as well.

165
00:11:28.168 --> 00:11:31.697
Right now, this could be an app
that I also choose to host,

166
00:11:31.697 --> 00:11:35.099
that is its own thing and
is also serving these modules.

167
00:11:35.099 --> 00:11:38.748
So I'm gonna keep it cuz I think
that's totally fine in my case.

168
00:11:38.748 --> 00:11:44.141
Now the big difference here is that we
don't have these at build time, right?

169
00:11:44.141 --> 00:11:46.318
We are fetching them after the fact.

170
00:11:46.318 --> 00:11:48.331
Now, depending on your
framework of choice,

171
00:11:48.331 --> 00:11:50.094
this is gonna be a little bit different.

172
00:11:50.094 --> 00:11:53.769
It's gonna be a little bit different
in Vue than Svelte, than React.

173
00:11:53.769 --> 00:11:58.185
With React, if we're doing loading
of components that are asynchronous,

174
00:11:58.185 --> 00:12:01.432
we've got to use suspense and
react.lazy to go get it.

175
00:12:01.432 --> 00:12:03.945
Totally fine, if you're using Vue,
if you're using Svelte,

176
00:12:03.945 --> 00:12:05.583
the semantic's are gonna be different.

177
00:12:05.583 --> 00:12:09.776
The important part is how to set up
both what is kind of the remote,

178
00:12:09.776 --> 00:12:11.759
where the components are, and

179
00:12:11.759 --> 00:12:15.666
then on the receiving end,
how to pull those components in.

180
00:12:15.666 --> 00:12:20.518
So what we'll do is we'll go
back over to the receiving end,

181
00:12:20.518 --> 00:12:23.766
and in here we're basically gonna say,

182
00:12:25.841 --> 00:12:29.864
const Button =

183
00:12:29.864 --> 00:12:34.815
react.lazy, and

184
00:12:34.815 --> 00:12:41.394
we'll say, And

185
00:12:41.394 --> 00:12:46.192
react.lazy basically takes one of these
import statements that we've seen before.

186
00:12:46.192 --> 00:12:48.377
So we'll have import,
and what do I call it?

187
00:12:48.377 --> 00:12:52.964
Fem, and
I'm not writing this in the right file.

188
00:12:52.964 --> 00:12:55.386
So good,
cuz I needed to go back to this file.

189
00:12:55.386 --> 00:12:57.226
I called it just femds.

190
00:13:00.836 --> 00:13:05.932
Cool, so we'll

191
00:13:05.932 --> 00:13:12.121
do femds/button.

192
00:13:12.121 --> 00:13:14.969
And like I said, I can do,

193
00:13:17.293 --> 00:13:21.464
Stuff in terms of the types.

194
00:13:21.464 --> 00:13:24.323
Again, I would probably
have a DTS file here and

195
00:13:24.323 --> 00:13:27.981
just pull it in along those lines,
depending if you need it.

196
00:13:27.981 --> 00:13:30.685
We're not gonna worry too much
about the types right now, but

197
00:13:30.685 --> 00:13:32.983
what we are gonna do is
we're gonna get that button.

198
00:13:32.983 --> 00:13:36.702
We do need to put this
inside of react.suspense.

199
00:13:41.579 --> 00:13:44.976
So this react suspense is, again, this is
react specific, if you're not using react,

200
00:13:44.976 --> 00:13:45.763
you don't need it.

201
00:13:45.763 --> 00:13:50.486
But it's basically saying some
asynchronous stuff is happening in here.

202
00:13:50.486 --> 00:13:58.778
So we'll go ahead and we'll say, Yeah,

203
00:13:58.778 --> 00:14:02.422
let's put that in place, and we do need
to make sure that the server is running.

204
00:14:02.422 --> 00:14:04.935
This is the stuff that
scares me of all this stuff.

205
00:14:04.935 --> 00:14:08.431
Now, S3 VSL, it's a little bit
I'm being a little hyperbolic,

206
00:14:08.431 --> 00:14:11.804
because at the end of the day when
we did all that code splitting,

207
00:14:11.804 --> 00:14:14.574
we were fetching stuff
remotely even in our own app.

208
00:14:14.574 --> 00:14:17.199
It's just mostly like if you
have a third-party dependency,

209
00:14:17.199 --> 00:14:18.940
you have another thing that could break.

