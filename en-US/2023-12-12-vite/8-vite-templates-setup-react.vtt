WEBVTT

1
00:00:00.220 --> 00:00:02.564
Without that,
let's actually look at the templates.

2
00:00:02.564 --> 00:00:04.799
Because I think it is pretty good for

3
00:00:04.799 --> 00:00:09.491
demonstrating the next big question
that if you have not set it all out yet,

4
00:00:09.491 --> 00:00:13.611
you have thought about which is,
all right, can I use React now?

5
00:00:13.611 --> 00:00:14.600
Can I use Vue now?

6
00:00:14.600 --> 00:00:15.639
Can I use Svelte?

7
00:00:15.639 --> 00:00:16.600
Can I use whatever?

8
00:00:16.600 --> 00:00:19.190
And I would say get off my lawn.

9
00:00:19.190 --> 00:00:25.480
But I will show you how to do it
because it is shockingly easy as well.

10
00:00:25.480 --> 00:00:32.160
So I'm gonna go and I'm just gonna
show you how to use a template.

11
00:00:32.160 --> 00:00:36.915
And so we can go ahead, and
we'll take a look in the answer for

12
00:00:36.915 --> 00:00:41.671
how to support a given framework
will be in the template, and

13
00:00:41.671 --> 00:00:45.700
to nobody's surprise,
shockingly easy as well.

14
00:00:45.700 --> 00:00:48.373
And so we'll go up,
I'll go up a level here.

15
00:00:48.373 --> 00:00:54.850
And I'm just gonna say your choice of,
if you use npm, this is npm create vite,

16
00:00:54.850 --> 00:00:59.990
I almost slipped, @latest, and
then where you want it to go.

17
00:00:59.990 --> 00:01:03.804
So we'll call it vite-react.

18
00:01:03.804 --> 00:01:10.439
And if you don't give it any arguments,
It gives you this very pretty list, right?

19
00:01:10.439 --> 00:01:14.766
You could have it wire together, I had
a repo with a bunch of files in it, but

20
00:01:14.766 --> 00:01:16.921
guess what that started its life as?

21
00:01:16.921 --> 00:01:18.719
One of these templates, right?

22
00:01:18.719 --> 00:01:21.673
So you can do it with vanilla JavaScript.

23
00:01:21.673 --> 00:01:26.113
These are the built-in official ones,
there's other things, Heidi and others.

24
00:01:26.113 --> 00:01:29.733
Let's go take a look.

25
00:01:29.733 --> 00:01:31.965
The Electron and a Vitextra.

26
00:01:31.965 --> 00:01:35.685
All right, that one's new,
I don't really know what that one is,

27
00:01:35.685 --> 00:01:37.464
I'm gonna find out that later.

28
00:01:37.464 --> 00:01:41.787
But for our point, all right,
I called the directory React.

29
00:01:41.787 --> 00:01:45.615
We want React, it can be whatever, the
answer's gonna be, everyone's like, React,

30
00:01:45.615 --> 00:01:46.133
all right?

31
00:01:46.133 --> 00:01:48.194
All right, I know my audience.

32
00:01:48.194 --> 00:01:49.375
Let's do that one.

33
00:01:49.375 --> 00:01:51.238
Look, more choices.

34
00:01:51.238 --> 00:01:53.361
And you saw one of these earlier, right?

35
00:01:53.361 --> 00:01:55.215
We can do it with TypeScript or
without TypeScript.

36
00:01:55.215 --> 00:02:00.158
And then basically, speedy web
compiler is a Rust-based compiler.

37
00:02:00.158 --> 00:02:04.264
Is it as full-featured
as some of the standard

38
00:02:04.264 --> 00:02:07.857
JavaScript ones at this moment in time?

39
00:02:07.857 --> 00:02:09.690
Maybe, maybe not, right?

40
00:02:09.690 --> 00:02:14.469
Not for the most part, but for
those in the room, no, it's not.

41
00:02:14.469 --> 00:02:17.029
If you watch this six months from now,
the answer might've changed.

42
00:02:17.029 --> 00:02:20.417
But at this moment,
it is faster, it is better, but

43
00:02:20.417 --> 00:02:22.881
it is not as battle tested as just not.

44
00:02:22.881 --> 00:02:25.748
This is just processing a JSX.

45
00:02:25.748 --> 00:02:28.611
Let's do without just because I
think it'll make it easier to see.

46
00:02:28.611 --> 00:02:29.870
Do we want with or without TypeScript?

47
00:02:29.870 --> 00:02:32.556
What are our feelings right now?

48
00:02:32.556 --> 00:02:35.818
We don't feel strongly, but yes,
there's a thumbs up for TypeScript.

49
00:02:35.818 --> 00:02:39.742
Okay, and you say done and
we do that vite-react,

50
00:02:39.742 --> 00:02:45.601
we'll do an npm install just so
I don't see red squiggly lines everywhere.

51
00:02:45.601 --> 00:02:47.956
And if you use yarn,
then it's yarn create.

52
00:02:47.956 --> 00:02:52.080
If you use pmpm, it's pmpm create,
it's all the same.

53
00:02:54.380 --> 00:03:01.073
Cool, we've got in place, and
let's just open it up in our editor.

54
00:03:01.073 --> 00:03:05.203
And you can see a very
similar layout here, right?

55
00:03:05.203 --> 00:03:09.027
It did give us a ts.config, it did give
us a vite.config, we'll take a look at

56
00:03:09.027 --> 00:03:12.184
that because that's gonna be
the first time we saw a config file.

57
00:03:12.184 --> 00:03:16.705
So let's look at what it
takes to support React.

58
00:03:16.705 --> 00:03:21.167
You grab plugin-react and
you plugin React.

59
00:03:21.167 --> 00:03:27.750
And now you have full support for
JSX and everything along those lines.

60
00:03:27.750 --> 00:03:33.268
Without even this plugin, since it uses
ES build and ES build has this idea

61
00:03:33.268 --> 00:03:39.237
of a JSX parser, you could theoretically
write your own JSX parser as a fun way.

62
00:03:39.237 --> 00:03:42.914
You can have your own,
cuz all JSX does is it turns the stuff

63
00:03:42.914 --> 00:03:47.887
looks HTML into a function name,
whether it's React, or JSX, or whatever.

64
00:03:47.887 --> 00:03:51.812
And then the node name,
the attributes, and then as children,

65
00:03:51.812 --> 00:03:53.927
it's always gonna compile that.

66
00:03:53.927 --> 00:03:56.566
You can give it a different function
if you wanna write your own

67
00:03:56.566 --> 00:03:58.207
framework during launch, go for it.

68
00:03:58.207 --> 00:04:01.905
Yeah, you could even use it to make
regular vanilla dom nodes if you

69
00:04:01.905 --> 00:04:06.017
really wanted to as well, but
all it's doing is adding this plugin here.

70
00:04:06.017 --> 00:04:08.192
And this is the first time
we're seeing configuration,

71
00:04:08.192 --> 00:04:09.468
so it's worth talking about it.

72
00:04:09.468 --> 00:04:15.856
Really, all you need to do to
have a valid Vite configuration

73
00:04:15.856 --> 00:04:22.007
is to export default some object
that has the right shape.

74
00:04:22.007 --> 00:04:25.703
This define config is useful because
it's using effective whether or

75
00:04:25.703 --> 00:04:28.156
not you use TypeScript, it doesn't matter.

76
00:04:28.156 --> 00:04:32.559
This will work with JavaScript, but
in VS Code, it will use the type

77
00:04:32.559 --> 00:04:37.121
information that the Vite comes with
to help you with autocomplete for

78
00:04:37.121 --> 00:04:42.173
a lot of these, and let you know if you
made a boo boo or misspelled something.

79
00:04:42.173 --> 00:04:43.805
So generally speaking,

80
00:04:43.805 --> 00:04:48.322
I would always use to find config
because why not opt into the safety?

81
00:04:48.322 --> 00:04:52.385
But if you just wanted to have
an object like this, go for it, right?

82
00:04:52.385 --> 00:04:54.326
But that is the entire process, right?

83
00:04:54.326 --> 00:04:57.463
So a lot of these things,
again this is that first act,

84
00:04:57.463 --> 00:04:59.386
right, of it is simple, right?

85
00:04:59.386 --> 00:05:03.751
And it is powerful because all of
a sudden, now I've got whatever framework,

86
00:05:03.751 --> 00:05:06.412
I've got whatever CSS
build tools that I need.

87
00:05:06.412 --> 00:05:11.458
I have all of the common infrastructure
that I personally find myself

88
00:05:11.458 --> 00:05:17.287
wiring up over and over again, and I just
kind of have it all in place ready to go,

89
00:05:17.287 --> 00:05:20.863
and I'm not spending
a bunch of time doing that.

90
00:05:20.863 --> 00:05:24.264
And so you got, yeah, Mark.

91
00:05:24.264 --> 00:05:29.002
&gt;&gt; Somebody was linking to the plugin
checker, have you heard of that?

92
00:05:29.002 --> 00:05:34.301
&gt;&gt; Yeah, there's one that will
check the plugin itself, right?

93
00:05:34.301 --> 00:05:38.192
And also, I think that's the one that does
the TypeScript checking for you, right?

94
00:05:38.192 --> 00:05:39.388
Yeah, I don't want that.

95
00:05:39.388 --> 00:05:42.239
[LAUGH] Personally, right?

96
00:05:42.239 --> 00:05:46.016
So there's Vite plugin checker,
see whenever I made a mistake,

97
00:05:46.016 --> 00:05:49.861
before I got that big box on the screen,
if your types don't work,

98
00:05:49.861 --> 00:05:53.730
it'll do it in a separate process,
it'll show you on the screen.

99
00:05:53.730 --> 00:05:56.578
For me, personally,
having it in the editor and

100
00:05:56.578 --> 00:05:59.850
having it at build time gives
me everything that I need.

101
00:05:59.850 --> 00:06:04.808
Because a lot of times, I like the fact
that it's not blocking me from

102
00:06:04.808 --> 00:06:07.813
rendering when I'm still prototyping.

103
00:06:07.813 --> 00:06:10.883
A lot of times, I'm still figuring stuff
out, I wanna see, does this work at all?

104
00:06:10.883 --> 00:06:13.549
And then I'll kind of add
in some the type safety,

105
00:06:13.549 --> 00:06:17.435
I kinda like treat it like JavaScript
at first and I don't necessarily.

106
00:06:17.435 --> 00:06:19.661
Cuz it'll start yelling at you for
stuff like,

107
00:06:19.661 --> 00:06:22.680
well, your TS config is such a strict and
you used an any in here.

108
00:06:22.680 --> 00:06:27.273
I'm like, I'm still figuring out what I'm
doing, I'm pulling in some library, and

109
00:06:27.273 --> 00:06:28.825
I'm doing object keys on it,

110
00:06:28.825 --> 00:06:31.829
because I'm too lazy to not
do dig through all the types.

111
00:06:31.829 --> 00:06:36.367
So yeah, the Vite plugin checker will
like do all that type checking for you.

112
00:06:36.367 --> 00:06:41.287
I personally don't like that in my
workflow, but I would say if it works for

113
00:06:41.287 --> 00:06:42.390
you, go for it.

114
00:06:42.390 --> 00:06:45.362
The list of official plugins,
you've got your view,

115
00:06:45.362 --> 00:06:48.539
you've got everything you
saw on that list, basically.

116
00:06:48.539 --> 00:06:51.769
And there's a site Awesome-vite,

117
00:06:51.769 --> 00:06:57.611
which has got a whole bunch of
various plugins for various things.

118
00:06:57.611 --> 00:07:01.742
There's our Vite plugin checker
that we talked about earlier,

119
00:07:01.742 --> 00:07:03.890
we'll use some of them later on.

120
00:07:03.890 --> 00:07:07.860
For whatever you need, there's also
various other frameworks in here too that

121
00:07:07.860 --> 00:07:09.527
you can kind of play around with.

122
00:07:09.527 --> 00:07:14.695
The other thing that you can do is,
Rich Harris, the creator of Svelte,

123
00:07:14.695 --> 00:07:19.300
made this tool called degit,
which basically is like Git clon.

124
00:07:19.300 --> 00:07:21.755
If you've a Git cloned and
then removed the Git directory,

125
00:07:21.755 --> 00:07:23.386
cuz you just wanna use it as a template.

126
00:07:23.386 --> 00:07:27.479
You can just use this tool and
give it the name of the repo, and

127
00:07:27.479 --> 00:07:31.092
it will effectively clone it,
and remove the git, so

128
00:07:31.092 --> 00:07:35.776
then you can do your own git in it,
and not have the template history.

129
00:07:35.776 --> 00:07:38.525
And so mostly community plugins use this.

130
00:07:38.525 --> 00:07:41.437
And so what I've done personally is for
all the projects I do,

131
00:07:41.437 --> 00:07:44.297
I've got two templates that I
just use all the time, right?

132
00:07:44.297 --> 00:07:47.538
They're set up with prettier
the way that I like it and es lint,

133
00:07:47.538 --> 00:07:50.797
the way that I like it, and
my ts-config the way that I like it.

134
00:07:50.797 --> 00:07:53.871
Everything's set up and ready to go
to the way that I'm happy, and so

135
00:07:53.871 --> 00:07:56.899
that I can just do this and
I've got my own Vite template ready to go.

136
00:07:56.899 --> 00:07:59.799
So even some of these initial
configuration things once you get

137
00:07:59.799 --> 00:08:02.535
everything nailed down to the way
that makes you happiest or

138
00:08:02.535 --> 00:08:04.245
the way it makes your team happiest.

139
00:08:04.245 --> 00:08:08.015
In a lot of these cases, you can just
basically use the repo as your template,

140
00:08:08.015 --> 00:08:09.178
and you're good to go.

141
00:08:09.178 --> 00:08:12.913
And then occasionally,
I'll update the dependencies and

142
00:08:12.913 --> 00:08:17.030
stuff along those lines, so
I always got a fairly fresh version.

143
00:08:17.030 --> 00:08:21.995
But as an easy way to do either for
any of these community templates,

144
00:08:21.995 --> 00:08:24.953
or to make your own, or you can use mine,

145
00:08:24.953 --> 00:08:31.076
whatever makes you happiest are various
effective ways of using these templates.

146
00:08:31.076 --> 00:08:34.760
Somebody asked if import was
a Vite specific thing or-

147
00:08:34.760 --> 00:08:35.267
&gt;&gt; Nope.

148
00:08:35.267 --> 00:08:36.095
&gt;&gt; Web platform.

149
00:08:36.095 --> 00:08:38.550
&gt;&gt; It is a web platform thing.

150
00:08:38.550 --> 00:08:42.222
Import is not a Vite specific thing,
it is a web platform thing.

151
00:08:42.222 --> 00:08:47.360
It is supported,
by definition, in development,

152
00:08:47.360 --> 00:08:54.617
where actually the browser is using
the ES modules out of the box, right?

153
00:08:54.617 --> 00:08:57.988
Again, not compiling is
faster than compiling, right?

154
00:08:57.988 --> 00:09:02.837
And so most modern browsers have
support for ES modules these days.

155
00:09:02.837 --> 00:09:07.608
So all that import syntax is actually
web platform syntax that just Vite

156
00:09:07.608 --> 00:09:09.288
happens to use, right?

157
00:09:09.288 --> 00:09:12.937
So if you put imports all over the place,
you do all this stuff.

158
00:09:12.937 --> 00:09:15.740
And then you find that
you're not gonna use Vite,

159
00:09:15.740 --> 00:09:20.229
along as you do something that takes
modern web standards, you're good to go.

160
00:09:20.229 --> 00:09:23.865
Especially, because again other
than pulling that React plugin,

161
00:09:23.865 --> 00:09:25.268
we haven't really done,

162
00:09:25.268 --> 00:09:29.877
we've basically just written web platform
code with a little bit of relative links.

163
00:09:29.877 --> 00:09:33.757
And I guess that module.css comes from
post CSS in a way it's configured.

164
00:09:33.757 --> 00:09:38.298
But predominantly, we've been able to
use web platform stuff and using the web

165
00:09:38.298 --> 00:09:42.861
platform and to inform Vite about what
the best thing to do is in this situation.

166
00:09:42.861 --> 00:09:46.486
But these are kind of standards
that should apply broadly.

167
00:09:46.486 --> 00:09:51.558
And don't, even if you've seen that ES
syntax before years and years ago, under

168
00:09:51.558 --> 00:09:56.647
the hood, Babel was compiling it to common
JS and it wasn't actually ES modules.

169
00:09:56.647 --> 00:09:59.960
I've been writing import,
whatever from whatever forever.

170
00:09:59.960 --> 00:10:04.221
Yeah, that was unintentional rhyme,
we'll go with it.

171
00:10:04.221 --> 00:10:08.227
Then in those cases, it was actually
turning into const whatever equals

172
00:10:08.227 --> 00:10:12.903
require, and then the library name, but
these are actually using real ES modules.

173
00:10:12.903 --> 00:10:16.644
In development, at build time,
it is then trying to chunk stuff and

174
00:10:16.644 --> 00:10:20.912
all that stuff to have the widest amount
of support, and do tree shaking, and

175
00:10:20.912 --> 00:10:23.229
code splitting, and all that fun stuff.

176
00:10:23.229 --> 00:10:27.689
&gt;&gt; In ts config, module resolution

177
00:10:27.689 --> 00:10:32.157
Bundler could you explain that.

178
00:10:32.157 --> 00:10:33.215
&gt;&gt; A little bit.

179
00:10:33.215 --> 00:10:38.740
So again, we live in a terrible time for
a lot of reasons, but one of them is

180
00:10:38.740 --> 00:10:44.373
we are currently in this world straddled
between common JS and ES modules.

181
00:10:44.373 --> 00:10:52.315
I know that Bundler is a new algorithm
that came with TypeScript 5, right?

182
00:10:52.315 --> 00:10:55.673
M project doesn't use it because
it would start before then,

183
00:10:55.673 --> 00:10:58.718
theoretically Vite is doing
the bundling in this case.

184
00:10:58.718 --> 00:11:02.677
It's just the semantics on whether or
not you need the file extension, so on and

185
00:11:02.677 --> 00:11:03.220
so forth.

186
00:11:03.220 --> 00:11:05.707
I can't claim to be an expert on that one,
so

187
00:11:05.707 --> 00:11:09.880
I don't wanna say something that's
not definitively right on that one,

188
00:11:09.880 --> 00:11:14.613
because it is one of the newest algorithms
for how TypeScript chooses to bundle it.

189
00:11:14.613 --> 00:11:18.133
Interestingly enough, Vite is the one
doing the bundling in this case,

190
00:11:18.133 --> 00:11:20.338
TypeScript is only doing
the type checking.

191
00:11:20.338 --> 00:11:25.249
So as long as you're not getting
necessarily the red squiggly lines or

192
00:11:25.249 --> 00:11:30.338
errors, TypeScript is not the one
doing the building and compilation.

193
00:11:30.338 --> 00:11:34.844
So it doesn't really concern us at this
point, but it is kind of the default

194
00:11:34.844 --> 00:11:39.367
standard that I grab over and over again,
but for when I'm not using Vite.

195
00:11:39.367 --> 00:11:43.220
But the actual details of the algorithm
itself are not something I'm an expert on.

