WEBVTT

1
00:00:00.000 --> 00:00:05.060
Cool, questions, comments,
concerns, cries of outrage,

2
00:00:05.060 --> 00:00:09.841
someone wanna yell at me about
my opinions on microfrontends.

3
00:00:09.841 --> 00:00:10.836
So I won't hear it.

4
00:00:10.836 --> 00:00:16.148
[LAUGH]
&gt;&gt; Could you explain the return null?

5
00:00:16.148 --> 00:00:19.696
&gt;&gt; It basically saying at any given point,
if you wanna kinda opt out or not,

6
00:00:19.696 --> 00:00:22.342
theoretically returning undefined
will do the same thing.

7
00:00:22.342 --> 00:00:27.760
It's basically like I don't,
what is this one now?

8
00:00:27.760 --> 00:00:31.774
I was just TypeScript or
eslint yelling about something else.

9
00:00:31.774 --> 00:00:34.842
It's basically a way to go,
you can return undefined from this one.

10
00:00:34.842 --> 00:00:38.546
It's a way to say I actually
don't wanna continue, right?

11
00:00:38.546 --> 00:00:43.322
The resolve ideas I believe, if I'm not
mistaken, in case you have like, yeah,

12
00:00:43.322 --> 00:00:46.245
with the SSR flag or
something along those lines.

13
00:00:46.245 --> 00:00:50.327
It's basically it's like I don't wish to
continue down this path with this plugin

14
00:00:50.327 --> 00:00:52.908
at this point,
with this file through this plugin.

15
00:00:52.908 --> 00:00:55.836
&gt;&gt; Is writing your own plugin
better in terms of maintainability?

16
00:00:55.836 --> 00:00:59.470
I saw some plugins with no
action in over two years.

17
00:00:59.470 --> 00:01:03.370
&gt;&gt; I mean, you maintaining it
versus nobody maintaining it.

18
00:01:03.370 --> 00:01:08.319
Yes, right, now the big,
the big question you have to ask

19
00:01:08.319 --> 00:01:12.167
yourself if nobody is maintaining it, yes.

20
00:01:12.167 --> 00:01:15.860
However, are you going to be the next
person who is nobody maintaining it?

21
00:01:15.860 --> 00:01:19.765
You know what I mean?

22
00:01:19.765 --> 00:01:23.386
Yeah, especially if there's
something that doesn't work,

23
00:01:23.386 --> 00:01:27.093
there's nothing stopping you
from forking it either, right?

24
00:01:27.093 --> 00:01:31.193
But think for the common ones, again,
anything that is either nothing that

25
00:01:31.193 --> 00:01:34.024
exists that is maintained,
yeah, write your own.

26
00:01:34.024 --> 00:01:38.966
Should you write your own?

27
00:01:38.966 --> 00:01:44.400
There are more than one markdown
plugins out there, right?

28
00:01:44.400 --> 00:01:46.423
There's more than one YAML plugin.

29
00:01:46.423 --> 00:01:47.860
Do we need another one?

30
00:01:47.860 --> 00:01:51.321
Unless there's something specific
that you need, maybe it's like, yoh,

31
00:01:51.321 --> 00:01:53.994
we use this YAML library that
formats the stuff in this way.

32
00:01:53.994 --> 00:01:56.944
Yeah, you can totally wrap it
in a plugin super easily, but

33
00:01:56.944 --> 00:02:01.253
if it isn't actually maintained one, use
that, but if it's not maintained, yeah,

34
00:02:01.253 --> 00:02:03.334
absolutely, that's kind of the point.

35
00:02:03.334 --> 00:02:04.283
It not existing and

36
00:02:04.283 --> 00:02:08.208
one that doesn't work at as a longer
maintained are basically the same thing.

37
00:02:08.208 --> 00:02:11.524
&gt;&gt; Is microfrontends and
Module Federation the same thing?

38
00:02:11.524 --> 00:02:13.444
&gt;&gt; No, right?

39
00:02:13.444 --> 00:02:16.920
I mean, what is a microfrontend and
we can cut all this.

40
00:02:16.920 --> 00:02:21.925
[LAUGH] For me, l sharing an
navbar across multiple repos,

41
00:02:21.925 --> 00:02:27.459
which have always been separate
that I don't own the docs repo.

42
00:02:27.459 --> 00:02:34.250
I don't own the, but to keep a navbar in sync
totally cuz they are separate.

43
00:02:34.250 --> 00:02:36.775
They both they predate any of us, right?

44
00:02:36.775 --> 00:02:40.441
It's not necessarily an architecture that
point they're totally separate properties.

45
00:02:40.441 --> 00:02:45.100
Using it for that make sense.

46
00:02:45.100 --> 00:02:48.116
Some no, you can use it for other things.

47
00:02:48.116 --> 00:02:50.990
It is most commonly used in microfrontend
architectures.

48
00:02:50.990 --> 00:02:52.295
Hopefully, right,

49
00:02:52.295 --> 00:02:57.223
in this kinda whirlwind tour from the very
simplest you need almost nothing to get

50
00:02:57.223 --> 00:03:01.511
started all the way through to you
can customize literally anything.

51
00:03:01.511 --> 00:03:05.180
You can reformat images on the fly.

52
00:03:05.180 --> 00:03:08.780
You can host pieces of code
that can be remotely fetched.

53
00:03:08.780 --> 00:03:11.365
You can create libraries, right?

54
00:03:11.365 --> 00:03:13.700
Vite and we did all that in a day, right?

55
00:03:13.700 --> 00:03:16.000
A few hours, really, all total.

56
00:03:16.000 --> 00:03:20.719
And both the flexibility and the
simplicity and the speed because Vite is

57
00:03:20.719 --> 00:03:25.451
able to leverage a lot of modern web
technologies to not do a lot of stuff.

58
00:03:25.451 --> 00:03:28.276
Let the browser use its native bundlings,
particularly when we're in development

59
00:03:28.276 --> 00:03:29.880
because we know we're
using a modern browser.

60
00:03:29.880 --> 00:03:34.480
I don't know if any of y'all choose
to use IE6 while developing.

61
00:03:34.480 --> 00:03:39.216
I use Safari because I don't trust that
anyone else on my team is checking stuff

62
00:03:39.216 --> 00:03:41.170
on Safari and I'm the manager.

63
00:03:41.170 --> 00:03:45.813
So, but generally speaking, and
Safari supports these modules,

64
00:03:45.813 --> 00:03:49.811
you have all this stuff in place so
it becomes wildly fast.

65
00:03:49.811 --> 00:03:54.316
And, I think we don't spend enough
time thinking about the faster

66
00:03:54.316 --> 00:03:58.910
something is in development,
the quicker you can make decisions.

67
00:03:58.910 --> 00:04:02.318
If something takes ten seconds to load,
right, versus one second,

68
00:04:02.318 --> 00:04:04.962
especially if on a second monitor,
you change code,

69
00:04:04.962 --> 00:04:08.407
you see it instantly, as you're
changing something trying to get.

70
00:04:08.407 --> 00:04:12.908
Or your tests are running or something
along those lines, that feedback loop, if

71
00:04:12.908 --> 00:04:17.756
you cut that down by 50%, 75%, the number
of decisions you can make in a day go up.

72
00:04:17.756 --> 00:04:20.983
Because unless you write perfect
code the first time every time,

73
00:04:20.983 --> 00:04:23.339
which at least I've
demonstrated I can't do.

74
00:04:23.339 --> 00:04:26.742
All right, unless you're better than me,
which you might be.

75
00:04:26.742 --> 00:04:31.467
Right, it's usually about do something,
get feedback, and see bunch of red, right,

76
00:04:31.467 --> 00:04:33.555
realize you've made booboo, right?

77
00:04:33.555 --> 00:04:38.901
Look at booboo, fix it the quicker,
you can get that feedback loop, I think we

78
00:04:38.901 --> 00:04:44.899
underestimate the power of sometimes being
a faster developer is not thinking faster.

79
00:04:44.899 --> 00:04:48.832
It's just finding out that you made
a bad thought faster, right, and

80
00:04:48.832 --> 00:04:50.040
recovering from it.

81
00:04:50.040 --> 00:04:53.103
And the more you cut that down,
the more powerful it is, and

82
00:04:53.103 --> 00:04:56.497
the less time you spend fighting
with your build system, right?

83
00:04:56.497 --> 00:05:01.721
Even as we're doing every wild
thing that we could think of in our

84
00:05:01.721 --> 00:05:07.719
time together is still relatively
with a lot of things straightforward,

85
00:05:07.719 --> 00:05:13.641
right, especially as I'm talking and
typing at the same time, right?

86
00:05:13.641 --> 00:05:18.153
And those times that gets you back to the
important part of the application cuz I've

87
00:05:18.153 --> 00:05:22.230
lost weeks of my life fighting with
certain build tools that I won't name.

88
00:05:22.230 --> 00:05:28.330
Multiple of them, honestly,
a decade's worth of them.

89
00:05:28.330 --> 00:05:31.076
I could name them all, and
it'll just make me sad.

90
00:05:31.076 --> 00:05:34.817
A lot of them start with the letter G,

91
00:05:34.817 --> 00:05:40.389
multiple of them,
some I'm not doing this right now.

92
00:05:40.389 --> 00:05:40.907
[LAUGH] But

93
00:05:40.907 --> 00:05:45.190
the idea that we have a place where we're
using modern web platform features.

94
00:05:45.190 --> 00:05:48.326
We've got super fast tools built in
Go and Rust.

95
00:05:48.326 --> 00:05:52.167
We've got the idea that there's ergonomics
around how simple can this be and

96
00:05:52.167 --> 00:05:53.360
out of the box it works.

97
00:05:53.360 --> 00:05:56.882
And then you can extend
it as much as you want,

98
00:05:56.882 --> 00:05:59.861
I think is a wildly powerful pattern.

99
00:05:59.861 --> 00:06:02.552
It's the first time I don't hate a build
tool after using it for two years.

100
00:06:02.552 --> 00:06:05.954
&gt;&gt; Does it make sense to invest in
learning the lower-level rollup

101
00:06:05.954 --> 00:06:09.986
functionality as well or does Vite
provide enough transparency via rollup

102
00:06:09.986 --> 00:06:10.562
options?

103
00:06:10.562 --> 00:06:13.490
&gt;&gt; Yeah, effectively,
if you're writing a Vite plugin,

104
00:06:13.490 --> 00:06:15.693
you're writing a rollup plugin, right?

105
00:06:15.693 --> 00:06:20.281
Vite adds two or three extra things what
your Vite configuration is cuz rollup

106
00:06:20.281 --> 00:06:22.902
doesn't have the idea of a server, right?

107
00:06:22.902 --> 00:06:24.490
It's just a build tool.

108
00:06:24.490 --> 00:06:25.650
So Vite adds a few things.

109
00:06:25.650 --> 00:06:29.144
You're effectively writing a rollup
plug-in for really reals, right?

110
00:06:29.144 --> 00:06:34.398
There's a few, I think it's true to say
all rollup plug-ins are Vite plug-ins but

111
00:06:34.398 --> 00:06:39.580
not all Vite plug-ins are rollup plug-ins
cuz they have a few extra hooks in them.

112
00:06:39.580 --> 00:06:44.006
And for the little options, external and
stuff along those lines, but

113
00:06:44.006 --> 00:06:46.602
generally speaking, in my experience.

114
00:06:46.602 --> 00:06:51.661
And again, the experience of using it for
two years but in my own use cases,

115
00:06:51.661 --> 00:06:56.076
right, is that if you are looking
up how to do something in Vite and

116
00:06:56.076 --> 00:06:58.270
it involves a roll-up option.

117
00:06:58.270 --> 00:07:00.111
You'll find it looking for
how to do it in Vite.

118
00:07:00.111 --> 00:07:02.408
You don't I mean?

119
00:07:02.408 --> 00:07:05.619
I would say in the plugins,
if you go to the plugin docs for Vite,

120
00:07:05.619 --> 00:07:08.910
they're like go read the roll-up
plug-in docs first, right?

121
00:07:08.910 --> 00:07:12.819
So yes, in that case, but I think
the general day-to-day usage, I mean,

122
00:07:12.819 --> 00:07:14.114
there's a whole bunch.

123
00:07:14.114 --> 00:07:16.523
I've read every single
Vite option that there is.

124
00:07:16.523 --> 00:07:20.784
How many of them did you see me use today?

125
00:07:20.784 --> 00:07:23.491
Not that many, right?

126
00:07:23.491 --> 00:07:28.454
Cuz I think a lot of the power is that
in how I write my JavaScript code by

127
00:07:28.454 --> 00:07:32.661
kind of using modern conventions,
I get so much for free.

128
00:07:32.661 --> 00:07:36.144
If there's a problem you need to solve,
you go into the Vite's docs, but yeah,

129
00:07:36.144 --> 00:07:38.465
do you wanna use lightning
CSS instead of post-CSS?

130
00:07:38.465 --> 00:07:40.986
Cool, there's an option for that.

131
00:07:40.986 --> 00:07:44.121
There's all sorts of
little things like that.

132
00:07:44.121 --> 00:07:49.277
Most of those I don't tend to tweak.

133
00:07:49.277 --> 00:07:51.916
I spoke it.
I could pull up the Vite config,

134
00:07:51.916 --> 00:07:55.227
there's the pattern is
the app makes sense, and

135
00:07:55.227 --> 00:08:00.744
leaning into stuff like the glob imports
and stuff along those lines make sense.

136
00:08:00.744 --> 00:08:03.583
But in terms of getting
all the way to the bottom,

137
00:08:03.583 --> 00:08:07.748
I would say if that's the intellectual
exercise you wanna do go for it.

138
00:08:07.748 --> 00:08:10.241
I don't think that you need to per se.

139
00:08:10.241 --> 00:08:15.281
I think we covered the greatest hits
of everything you need to know today.

140
00:08:15.281 --> 00:08:20.213
But yeah, you might have a very esoteric
use case or something off the beaten path,

141
00:08:20.213 --> 00:08:21.067
I do, right?

142
00:08:21.067 --> 00:08:24.013
Those are not the things I chose to
include because if it's something that

143
00:08:24.013 --> 00:08:26.959
only really applies to the unique
nature of the business I'm working on,

144
00:08:26.959 --> 00:08:28.929
it's felt like the not
the best use of your time.

145
00:08:28.929 --> 00:08:31.389
Did I have a section on
writing your own JSX parser?

146
00:08:31.389 --> 00:08:32.673
Yes.
Did I even choose to include it?

147
00:08:32.673 --> 00:08:33.515
No.

148
00:08:33.515 --> 00:08:36.890
Right, because how many of y'all
are gonna do that tomorrow at work?

149
00:08:36.890 --> 00:08:39.605
Nobody, right?

150
00:08:39.605 --> 00:08:41.640
Could you write your own hot
module replacement logic?

151
00:08:41.640 --> 00:08:42.697
Yes.

152
00:08:42.697 --> 00:08:43.197
Should you?

153
00:08:43.197 --> 00:08:44.493
Probably not.

154
00:08:44.493 --> 00:08:47.488
Right, so there are, I think,
if you're gonna build your own library,

155
00:08:47.488 --> 00:08:48.610
your own framework, yes.

156
00:08:48.610 --> 00:08:52.016
Right, in terms of the building apps,
I think some of the patterns and

157
00:08:52.016 --> 00:08:55.905
some of the features that make your life
easier, the ability to change images.

158
00:08:55.905 --> 00:08:58.589
Then figure out the post-CSS
plugins you might need,

159
00:08:58.589 --> 00:09:02.278
like, you wanna do stuff with fonts
that makes it a little bit easier.

160
00:09:02.278 --> 00:09:06.131
All that stuff is I think powerful,
but getting all the way to the bottom.

161
00:09:06.131 --> 00:09:09.609
Unless you're building a library, a lot of
this stuff is in there for library and

162
00:09:09.609 --> 00:09:10.585
framework authors.

163
00:09:10.585 --> 00:09:13.214
They are being used, just not by you.

164
00:09:13.214 --> 00:09:17.750
Thank you so much, and I hope you
get to use this in the applications

165
00:09:17.750 --> 00:09:22.457
you're building and I hope it speeds
up your development workflow.

166
00:09:22.457 --> 00:09:23.195
[APPLAUSE]

