WEBVTT

1
00:00:00.230 --> 00:00:04.516
Hi, my name is Steve Kinney, and
I am the head of front and engineering and

2
00:00:04.516 --> 00:00:07.640
developer tools at
a company called Temporal.

3
00:00:07.640 --> 00:00:12.494
And Vite is one of those technologies
that I've been using now for

4
00:00:12.494 --> 00:00:16.740
two and a half years every day
across all of our projects.

5
00:00:16.740 --> 00:00:21.710
So the good news is that I've got
a lot of experience using it.

6
00:00:21.710 --> 00:00:26.574
The bad news is that for two years and
five months of that two and a half years,

7
00:00:26.574 --> 00:00:30.982
I definitely thought it was pronounced
Vite, and so I have rapidly,

8
00:00:30.982 --> 00:00:34.784
and internal conversations with my team,
called it Vite.

9
00:00:34.784 --> 00:00:38.532
So I have been practicing calling
it Vite the entire time, and

10
00:00:38.532 --> 00:00:43.453
we're gonna see if I slip up at all, and
I don't think I will, I think I got this.

11
00:00:43.453 --> 00:00:48.612
It started out very simple,
I'd love to tell you it was

12
00:00:48.612 --> 00:00:54.011
a conscientious choice of
evaluating every build tool.

13
00:00:54.011 --> 00:00:58.685
For me personally, I don't like
fighting with my build tools, and

14
00:00:58.685 --> 00:01:03.278
a large portion of my career has
been fighting with my build tools.

15
00:01:03.278 --> 00:01:07.805
And when we started building
the new version of our UI for

16
00:01:07.805 --> 00:01:12.908
open source product at Temporal,
we choose to use SvelteKit,

17
00:01:12.908 --> 00:01:17.723
which was pretty 1.0 at the time,
which was a choice,

18
00:01:17.723 --> 00:01:21.697
but it by default is built on top of Vite,
right?

19
00:01:21.697 --> 00:01:26.023
And it was one of those pleasant surprises
to recalibrate one's brain to find out

20
00:01:26.023 --> 00:01:30.093
that, wow, this is actually pretty great
and everything that I wanna do for

21
00:01:30.093 --> 00:01:31.893
every weird use case that I have.

22
00:01:31.893 --> 00:01:34.776
Well, as we go through stuff,
I'll talk about what some of those are.

23
00:01:34.776 --> 00:01:38.540
But working on an open source
product that also has a cloud piece,

24
00:01:38.540 --> 00:01:43.263
has a bunch of weird requirements that I
was dreading when some of the requirements

25
00:01:43.263 --> 00:01:44.435
came down the line.

26
00:01:44.435 --> 00:01:48.159
And solving almost all them
in Vite was shockingly easy,

27
00:01:48.159 --> 00:01:52.592
sometimes in under half an hour or
an hour once comfortable with it.

28
00:01:52.592 --> 00:01:55.621
So what we're gonna do is we'll talk
a little bit about what Vite is,

29
00:01:55.621 --> 00:01:56.834
why it's pretty amazing.

30
00:01:56.834 --> 00:02:01.651
And then enough that you will know how
to do almost anything, from the very

31
00:02:01.651 --> 00:02:06.701
basics to the weird things that are unique
to whatever place you work at or will

32
00:02:06.701 --> 00:02:12.630
work at the future, and how to kind of
bend it to your will in our time together.

33
00:02:12.630 --> 00:02:15.934
So let's talk about,
let's just clarify what exactly Vite is,

34
00:02:15.934 --> 00:02:19.069
cuz it's actually a little more
nuanced than we would think.

35
00:02:19.069 --> 00:02:24.236
It calls itself the next generation
of frontend tooling, which is a good

36
00:02:24.236 --> 00:02:29.840
marketing line, and, actually,
when we dig in a little bit, true, right?

37
00:02:29.840 --> 00:02:32.404
And we'll talk about what that means.

38
00:02:32.404 --> 00:02:36.074
I think the unofficial subtitle of this
course is all the things that shouldn't be

39
00:02:36.074 --> 00:02:38.430
hard but are,
maybe they don't have to be, right?

40
00:02:38.430 --> 00:02:43.416
And if you've ever spent a portion of your
time fighting with a certain built tool

41
00:02:43.416 --> 00:02:47.609
that won't go named, then you
kinda know what I'm talking about.

42
00:02:47.609 --> 00:02:50.457
And it's kind of refreshing to find out
that it's both easy, but a lot of times

43
00:02:50.457 --> 00:02:53.584
things are easy, you're like, well, that
just means it doesn't do a lot, right?

44
00:02:53.584 --> 00:02:56.316
And what I think is pretty
incredible is both easy and

45
00:02:56.316 --> 00:02:59.359
simple to kind of do the basics,
cuz I don't wanna spend,

46
00:02:59.359 --> 00:03:02.524
that fear in your heart when you
go to start a new project, and

47
00:03:02.524 --> 00:03:06.838
then you remember how much boilerplate
you're going to have to do to get started.

48
00:03:06.838 --> 00:03:10.825
A lot of times I'm like,
I don't have time for that, right?

49
00:03:10.825 --> 00:03:13.639
And with Vite, you'll actually see in
the very beginning how quickly we can get

50
00:03:13.639 --> 00:03:14.613
something up and running.

51
00:03:14.613 --> 00:03:15.654
And then by the end,

52
00:03:15.654 --> 00:03:19.221
you'll see how far we can take it
all the way to production use cases.

53
00:03:19.221 --> 00:03:21.752
And like I said before, all of our apps,

54
00:03:21.752 --> 00:03:26.591
large enough apps usually exist in some
kind of ecosystem of a company that's

55
00:03:26.591 --> 00:03:29.729
got all sorts of little
nuances that are special.

56
00:03:29.729 --> 00:03:32.173
And we'll kinda talk about how
it's extensible as well, and

57
00:03:32.173 --> 00:03:34.578
we'll kinda go through that
when we do the overall outline.

58
00:03:34.578 --> 00:03:38.412
So I could make a bunch of slides,
but I think the Vite homepage and

59
00:03:38.412 --> 00:03:42.040
those little six boxes along
the bottom there kinda do a pretty

60
00:03:42.040 --> 00:03:45.275
good job at giving you
the initial value prop, right?

61
00:03:45.275 --> 00:03:49.830
This idea of a very fast instant server
start, and we'll talk about how that

62
00:03:49.830 --> 00:03:53.544
works and why it works, but
Vite is I believe French for fast.

63
00:03:53.544 --> 00:03:57.496
So it better be fast, otherwise it's
immediately lying out the gate, and

64
00:03:57.496 --> 00:03:58.320
luckily it is.

65
00:03:59.400 --> 00:04:03.700
And that kind of next generation build on
modern web technologies allows it to do

66
00:04:03.700 --> 00:04:07.998
a lot of these things like the hot module
reloading that is way faster than some of

67
00:04:07.998 --> 00:04:09.821
the other previous build tools.

68
00:04:09.821 --> 00:04:14.612
At the same time, it is built on top
of a lot of prior art, literally,

69
00:04:14.612 --> 00:04:18.678
which means you get a pretty
robust ecosystem of plugins.

70
00:04:18.678 --> 00:04:22.120
So that we'll look at how to extend it,
we'll look at how to do custom stuff.

71
00:04:22.120 --> 00:04:25.308
We'll look at how to do stuff that I've
had to do kind of just in some of my

72
00:04:25.308 --> 00:04:26.275
unique situations.

73
00:04:26.275 --> 00:04:29.788
But the nice part is,
is that there's also a very, very,

74
00:04:29.788 --> 00:04:34.111
very robust ecosystem of plugins so
that maybe you just don't have to.

75
00:04:34.111 --> 00:04:38.447
Generally speaking, a good Google search
will probably find that somebody has

76
00:04:38.447 --> 00:04:42.310
already encountered that problem and
solved for it as well.

77
00:04:42.310 --> 00:04:46.819
And so I kinda think about this,
our time together in four acts.

78
00:04:46.819 --> 00:04:49.779
Act one is Vite is simple, right?

79
00:04:49.779 --> 00:04:53.909
We will see how quickly and easy it is
to get up and running with it, right?

80
00:04:53.909 --> 00:04:58.595
And how fast it is to start iterating on
whatever idea that you have, so on and so

81
00:04:58.595 --> 00:04:59.097
forth.

82
00:04:59.097 --> 00:05:02.856
At the same time,
we're gonna see that Vite is powerful.

83
00:05:02.856 --> 00:05:07.259
And what I mean by that is there's
a lot of best practices in our

84
00:05:07.259 --> 00:05:12.103
industry that a lot of times we
don't do cuz they're hard, right?

85
00:05:12.103 --> 00:05:17.572
And that getting that infrastructure
in place is a full-time job.

86
00:05:17.572 --> 00:05:20.091
And it doesn't have to be
cuz a lot of those things,

87
00:05:20.091 --> 00:05:22.083
the tooling exists already in Vite, and

88
00:05:22.083 --> 00:05:25.990
we just gotta figure out where it's
hiding from us and how to use it.

89
00:05:25.990 --> 00:05:29.654
And then the next part is that
Vite is super flexible, right?

90
00:05:29.654 --> 00:05:35.110
And the weird bespoke situations for
us, that we can totally solve.

91
00:05:35.110 --> 00:05:38.637
And there are a lot of plugins that exist,
and when there isn't,

92
00:05:38.637 --> 00:05:40.251
Vite is super extensible,.

93
00:05:40.251 --> 00:05:43.683
It's using Under the Hood for
a lot of the build pieces,

94
00:05:43.683 --> 00:05:46.969
Roll Up, which has been around for
a very long time and

95
00:05:46.969 --> 00:05:51.083
has a very powerful plugin system
with a lot of prior art around it.

96
00:05:51.083 --> 00:05:55.269
So you can basically bend it
to do whatever you need to do.

97
00:05:55.269 --> 00:05:59.369
Kind of more specifically across
those four acts we're gonna look

98
00:05:59.369 --> 00:06:03.175
at getting up and running, and
just kinda getting started and

99
00:06:03.175 --> 00:06:07.801
understanding how to first fire up
a Vite app and what's involved in that.

100
00:06:07.801 --> 00:06:11.023
The act of building it,
the fun of bringing in CSS, and

101
00:06:11.023 --> 00:06:13.274
the various ways that you can do that.

102
00:06:13.274 --> 00:06:16.847
We'll be mostly writing JavaScript today,
but

103
00:06:16.847 --> 00:06:20.855
I would be remiss If I didn't
at least recognize that,

104
00:06:20.855 --> 00:06:26.168
in my day-to-day life, in a lot of
engineers, TypeScript is kind of,

105
00:06:26.168 --> 00:06:30.635
in a lot of ways, the lingua franca for
a lot of these things.

106
00:06:30.635 --> 00:06:36.375
As well as you will probably have one
of any number of front-end frameworks.

107
00:06:36.375 --> 00:06:39.496
And so we'll look at how to integrate
all of those and get up and

108
00:06:39.496 --> 00:06:41.549
running super easily with that as well.

109
00:06:41.549 --> 00:06:44.993
We're not gonna be focusing on building
anything with those frameworks, but

110
00:06:44.993 --> 00:06:48.955
we'll kind of say, here's how to bring in,
whether it's React, or Svelte, or Vue, or

111
00:06:48.955 --> 00:06:52.268
what have you, bringing in any of those
frameworks and working with them.

112
00:06:52.268 --> 00:06:56.256
Then optimizing static assets,
all the other images and

113
00:06:56.256 --> 00:06:59.670
stuff that we may work
with in our applications.

114
00:06:59.670 --> 00:07:02.505
Then we'll look at building libraries for
either the browser or for node,

115
00:07:02.505 --> 00:07:05.030
it doesn't really matter,
the technique is basically the same.

116
00:07:05.030 --> 00:07:09.439
That could be anything from a set of
utilities, to maybe you're seeking

117
00:07:09.439 --> 00:07:13.938
to actually just build a library, or
stuff for building a design system.

118
00:07:13.938 --> 00:07:17.819
Maybe you share components across
the organization, you wanna have a library

119
00:07:17.819 --> 00:07:21.890
that you can consume, or serve up
to the other applications as well.

120
00:07:21.890 --> 00:07:25.081
We'll look at some things that
are somewhat popular in some of the other

121
00:07:25.081 --> 00:07:28.589
build tools that kinda, as I was talking
to a lot of people preparing for this,

122
00:07:28.589 --> 00:07:31.590
they were like, well,
I need to have module federation.

123
00:07:31.590 --> 00:07:34.300
And so
we'll talk about both what that is and

124
00:07:34.300 --> 00:07:36.870
as well as how to implement it using Vite.

125
00:07:36.870 --> 00:07:42.083
And then we'll look at some basic
examples of how you can then extend Vite,

126
00:07:42.083 --> 00:07:46.487
once we got that foundation,
to do whatever you want, right?

127
00:07:46.487 --> 00:07:49.476
Whether that's kind of just integrate
with into your ecosystem, or

128
00:07:49.476 --> 00:07:52.718
maybe you work with a certain file format
that you want to be able to parse and

129
00:07:52.718 --> 00:07:54.069
use within your application.

130
00:07:54.069 --> 00:07:56.483
It's not like,
Vite doesn't support that, well.

131
00:07:56.483 --> 00:07:58.624
It's actually no,
you can easily add all of that.

132
00:07:58.624 --> 00:08:03.169
And so we'll kind of look at all those
things during our time together, and

133
00:08:03.169 --> 00:08:05.781
we'll kind of take a tour of those things.

134
00:08:05.781 --> 00:08:10.169
So Vite is kind of interesting because I
would say that it effectively stands on

135
00:08:10.169 --> 00:08:12.103
the shoulders of giants, right?

136
00:08:12.103 --> 00:08:15.951
A lot of times when we think about
all of these tools, we're like,

137
00:08:15.951 --> 00:08:20.213
well, I could use this tool, but
that's good in development cases, but

138
00:08:20.213 --> 00:08:23.750
then I need a different tool for
when I build for production.

139
00:08:23.750 --> 00:08:26.378
The really great part about Vite
is that it is built on a bunch

140
00:08:26.378 --> 00:08:27.490
of other tools, right?

141
00:08:27.490 --> 00:08:32.882
And so you don't necessarily have to make
those decisions cuz Vite has already done

142
00:08:32.882 --> 00:08:37.890
the work of wiring up a bunch of other
different battle-tested solutions and

143
00:08:37.890 --> 00:08:43.281
kind of made a suite of them that kind of
uses certain tools where they're currently

144
00:08:43.281 --> 00:08:48.003
the best, and then other tools where
they might also be the best as well.

145
00:08:48.003 --> 00:08:53.666
So one of the tools is esbuild, and this
is, again, a shot from the website here.

146
00:08:53.666 --> 00:08:57.380
The important part here is that top line,
right?

147
00:08:57.380 --> 00:09:02.344
esbuild is a AST parser written in Go,
right?

148
00:09:02.344 --> 00:09:04.363
I think it's hilarious
that when I started,

149
00:09:04.363 --> 00:09:06.593
almost all of the front end
build tools like SASS or

150
00:09:06.593 --> 00:09:10.043
whatever were built in Ruby, and then
we rewrote them all in JavaScript, and

151
00:09:10.043 --> 00:09:13.526
now we're rewriting them all in Go and
Rust, cuz they're that much faster.

152
00:09:13.526 --> 00:09:18.268
But I think the chart speaks for
itself on esbuild now.

153
00:09:18.268 --> 00:09:22.377
esbuild is used mostly in development,
for the development server.

154
00:09:22.377 --> 00:09:27.224
And the nice part is,
is that Vite uses esbuild to

155
00:09:27.224 --> 00:09:30.783
serve native ECMAScript modules.

156
00:09:30.783 --> 00:09:34.980
And ECMAScript modules are pretty cool
because that's kind of like the syntax

157
00:09:34.980 --> 00:09:39.749
you've used before, like import whatever
from, that syntax, is actually somewhat,

158
00:09:39.749 --> 00:09:43.880
with the browsers we're all using,
supported in the browser, right?

159
00:09:43.880 --> 00:09:47.100
As you go back to legacy browsers,
not so much, but for

160
00:09:47.100 --> 00:09:51.441
most of the browsers that we're using
when we develop our applications,

161
00:09:51.441 --> 00:09:54.044
we have native supports for these modules.

162
00:09:54.044 --> 00:09:58.410
And what's really cool about that is,
if you've used something like Webpack,

163
00:09:58.410 --> 00:10:01.890
an older version of Webpack or
whatever, we don't have those.

164
00:10:01.890 --> 00:10:06.251
So what Webpack does is it bundles it and
then serves it up in a script tag, right?

165
00:10:06.251 --> 00:10:10.439
And that means every time you make
a change, we've gotta re-bundle the entire

166
00:10:10.439 --> 00:10:14.516
application, figure out what changed
through the hot module replacement.

167
00:10:14.516 --> 00:10:17.804
And doing stuff takes longer
than not doing stuff.

168
00:10:17.804 --> 00:10:22.270
So when you're not bundling, and you're
just letting the browser actually fetch

169
00:10:22.270 --> 00:10:26.480
a bunch of different modules locally and
just swapping out just that module and

170
00:10:26.480 --> 00:10:29.921
not having to do any bundling in
node to serve it up for yourself,

171
00:10:29.921 --> 00:10:32.579
turns out that that's very,
very, very fast.

172
00:10:32.579 --> 00:10:34.375
And there are some other tools,

173
00:10:34.375 --> 00:10:37.634
like you can opt in if you're
using something like React or

174
00:10:37.634 --> 00:10:42.111
something along those lines to some other
tool called the Speedy Web Compiler.

175
00:10:42.111 --> 00:10:43.853
This one's written in Rust, right?

176
00:10:43.853 --> 00:10:48.260
Again, incredibly fast for kind of parsing
all your JSX and stuff along those lines.

177
00:10:49.740 --> 00:10:52.766
Even though ES modules are supported
in most of the evergreen

178
00:10:52.766 --> 00:10:56.026
browsers at this point, at the moment,
Vite still uses Rollup,

179
00:10:56.026 --> 00:10:58.961
which we'll take a look at in a second,
for the bundling.

180
00:10:58.961 --> 00:11:03.901
Because there's still optimizations
one can do to bundle assets

181
00:11:03.901 --> 00:11:09.039
that are going to be shipped at
the same time always into one bundle.

182
00:11:09.039 --> 00:11:13.161
And so when we're in development, we don't
really care about how many HTTP requests

183
00:11:13.161 --> 00:11:16.070
we're making cuz we're
talking to localhost, right?

184
00:11:16.070 --> 00:11:18.993
But there are still,
I think in this day and age,

185
00:11:18.993 --> 00:11:24.056
cases where doing some of the bundling
that we've seen from Rollup, from webpack,

186
00:11:24.056 --> 00:11:28.902
from a lot of these other things,
is, in the year of 2023, 2024, still

187
00:11:28.902 --> 00:11:33.857
probably the fastest and most efficient
way to serve production assets, right?

188
00:11:33.857 --> 00:11:38.115
You get the tree shaking, you get all
the stuff you can do at compile time,

189
00:11:38.115 --> 00:11:40.742
that give you a super
fast production build.

190
00:11:40.742 --> 00:11:46.008
And I think, very candidly, the Vite team
has said, if that reality changes and

191
00:11:46.008 --> 00:11:50.963
using esbuild and just native ES modules
turns out a year, two years, three

192
00:11:50.963 --> 00:11:56.170
years from now to be kind of the path
forward, they're open to switching to it.

193
00:11:56.170 --> 00:12:00.668
But right now, using Rollup is, I think,
one of the better ways to build for

194
00:12:00.668 --> 00:12:01.523
production.

195
00:12:01.523 --> 00:12:07.100
And the nice part is that Rollup having,
I don't know exactly how old Rollup is,

196
00:12:07.100 --> 00:12:13.190
but I know that I have been using it for
since 2017, 2018, so that old at least.

197
00:12:13.190 --> 00:12:16.556
And that means that the ecosystem
around the plugins,

198
00:12:16.556 --> 00:12:21.168
the fact that there's probably something
already built off the shelf that

199
00:12:21.168 --> 00:12:24.336
you can just use is incredibly
convenient as well.

200
00:12:24.336 --> 00:12:26.738
And it does a lot for
you behind the scenes.

201
00:12:26.738 --> 00:12:30.221
I also had a logo for post CSS up
there in the very beginning, right?

202
00:12:30.221 --> 00:12:36.040
And so out of the box, you're getting CSS
pre-processing and transpilation, right?

203
00:12:36.040 --> 00:12:38.545
You don't have to opt into any of it, but

204
00:12:38.545 --> 00:12:41.439
you will be able to add
stuff through post CSS.

205
00:12:41.439 --> 00:12:47.087
You get the code splitting,
it will go ahead and try to parallelize.

206
00:12:47.087 --> 00:12:50.132
If you are dynamically requesting one
module and that immediately is gonna

207
00:12:50.132 --> 00:12:53.177
request another one, at build time
using Rollup it'll figure that out and

208
00:12:53.177 --> 00:12:55.998
it'll just bundle all together,
makes things as fast as possible.

209
00:12:55.998 --> 00:12:58.971
These are things that exist that
you don't even have to know

210
00:12:58.971 --> 00:13:02.133
what I'm talking about right
now because it doesn't matter.

211
00:13:02.133 --> 00:13:05.973
It happens, don't think about it,
don't worry about it,

212
00:13:05.973 --> 00:13:08.169
just understand that it's fast.

213
00:13:08.169 --> 00:13:12.478
We are, for the most part, there'll be
a little bit of React towards the end,

214
00:13:12.478 --> 00:13:15.501
and there's no real expectation
that you know React.

215
00:13:15.501 --> 00:13:20.151
But it's just to kind of show what
it's like to pull in a framework, and

216
00:13:20.151 --> 00:13:23.655
that seemed like the easiest
kind of obvious choice.

217
00:13:23.655 --> 00:13:28.205
But Vite integrates with lots of different
frameworks, and when we even show

218
00:13:28.205 --> 00:13:33.037
how to pull in one of them, you'll see how
easy it is to pull in any of them, right?

219
00:13:33.037 --> 00:13:35.326
I use Svelte in my day to day, but

220
00:13:35.326 --> 00:13:39.731
also React a lot because that's
the world that I live in.

221
00:13:39.731 --> 00:13:42.709
These are some of the ones that
are officially supported with official

222
00:13:42.709 --> 00:13:45.281
plugins, but I'll show you where
the community ones are for

223
00:13:45.281 --> 00:13:46.910
almost anything you could ever want.

224
00:13:46.910 --> 00:13:50.654
And in a lot of cases,
you're like Vite sounds a lot like Vue,

225
00:13:50.654 --> 00:13:53.400
that's because it's got the same creator.

226
00:13:53.400 --> 00:13:55.939
So it is the default build tool for
all Vue apps.

227
00:13:55.939 --> 00:14:00.771
It is the default build tool for
all Svelte apps, SvelteKit rather,

228
00:14:00.771 --> 00:14:05.204
which is kind of next, but for
Svelte, but by the Svelte team.

229
00:14:05.204 --> 00:14:09.046
And so it is actually
the foundational build tool for

230
00:14:09.046 --> 00:14:14.450
at least two of these, but
works great with all of them as well.

231
00:14:14.450 --> 00:14:16.441
And it's got a lot of features.

232
00:14:16.441 --> 00:14:19.741
We're not gonna kinda go too much
into these, cuz generally speaking,

233
00:14:19.741 --> 00:14:22.674
if you are using some kind of framework,
these are done for you.

234
00:14:22.674 --> 00:14:26.277
These are kind of those things that
are there mostly for library authors,

235
00:14:26.277 --> 00:14:29.530
but there is kind of built in support for
hot module reloading, for

236
00:14:29.530 --> 00:14:31.988
server-side rendering,
and all those things.

237
00:14:31.988 --> 00:14:34.868
I've got sections written on that, we can
kind of explore if we're interested, but

238
00:14:34.868 --> 00:14:37.668
for the most part, they are ones that,
unless you are writing your own framework,

239
00:14:37.668 --> 00:14:40.320
there's probably something you're using
that's kind of got that built in.

240
00:14:40.320 --> 00:14:43.095
If you're using any of the kind of
official plugins and templates,

241
00:14:43.095 --> 00:14:46.258
you will get all of this for free and you
will never think about it and you will be

242
00:14:46.258 --> 00:14:49.443
happy, and life will go on and you'll
go back to building your application.

