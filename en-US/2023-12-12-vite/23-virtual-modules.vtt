WEBVTT

1
00:00:00.220 --> 00:00:04.204
So yeah, there's other notes in the video
but the kind of the one other major thing

2
00:00:04.204 --> 00:00:08.180
that I think it's tricky like,
do you need to write a plugin tomorrow?

3
00:00:08.180 --> 00:00:09.750
No, you do not need to
write a plugin tomorrow.

4
00:00:11.270 --> 00:00:16.230
When you know that you need to,
is it nice to know that you can write?

5
00:00:16.230 --> 00:00:21.937
Yes, and writing a plug in is one of those
things that particularly in Vite, it's

6
00:00:21.937 --> 00:00:28.140
a little gnarly because Vite is like a set
of extra abstractions over Rollup plugins.

7
00:00:28.140 --> 00:00:32.873
So one kind of needs to read both docs,
and there are a shocking

8
00:00:32.873 --> 00:00:37.710
number of like hooks that most
of which you do not need, right?

9
00:00:39.200 --> 00:00:45.140
And the reason that you need to build
a plugin will be, in your heart of hearts,

10
00:00:45.140 --> 00:00:49.820
when you need a plugin and
amongst all of the rollup plugins and

11
00:00:49.820 --> 00:00:55.140
all of the Vite plugins,
the plugin you need does not exist.

12
00:00:55.140 --> 00:00:59.911
What you need to do will be so specific,
we're gonna go over the general

13
00:00:59.911 --> 00:01:04.602
high level piece, but there are,
if we looked at like awesome Vite and

14
00:01:04.602 --> 00:01:08.519
awesome Rollup,
there are hundreds of plugins, right?

15
00:01:08.519 --> 00:01:13.635
So by the time you've exhausted all
of the community plugins and none of

16
00:01:13.635 --> 00:01:19.107
them do what you want, you are a little
bit in terra incognita at that point.

17
00:01:19.107 --> 00:01:24.490
But we will kinda talk about like just
some basic examples that we can use.

18
00:01:24.490 --> 00:01:28.131
And sometimes like there's
little niceties, right,

19
00:01:28.131 --> 00:01:33.320
that you can add to your own development
experience that are somewhat helpful,

20
00:01:33.320 --> 00:01:36.890
and I think that there's a lot
of value in that as well.

21
00:01:38.650 --> 00:01:44.730
The nice part about a Vite plugin is
effectively it's just a function, right?

22
00:01:44.730 --> 00:01:50.921
It's just a function that
conforms to a certain shape,

23
00:01:50.921 --> 00:01:58.181
but beyond that it's not like
really like some real crazy magic.

24
00:01:58.181 --> 00:02:01.287
And there are some conventions
I think are interesting.

25
00:02:01.287 --> 00:02:05.927
The plugins we've seen so far, like React,
that's just basically taking probably,

26
00:02:05.927 --> 00:02:09.752
it might just be JSX, I'm pretty
sure it'll take any JavaScript file,

27
00:02:09.752 --> 00:02:13.075
cuz React has always been a little
loosey-goosey on whether or

28
00:02:13.075 --> 00:02:15.984
not you have to do a .jsx or
a .js and either will work.

29
00:02:15.984 --> 00:02:21.743
But basically, you say,
when you have a plugin, effectively,

30
00:02:21.743 --> 00:02:28.780
every single module that you import is
flowing through that function, right?

31
00:02:28.780 --> 00:02:32.870
The plugin is just a function,
every module flows through it.

32
00:02:32.870 --> 00:02:36.319
There are lots of these different hooks,
you can do, okay,

33
00:02:36.319 --> 00:02:38.660
we're about to finish the build.

34
00:02:38.660 --> 00:02:42.060
Okay, I've just got the what
are we trying to import?

35
00:02:42.060 --> 00:02:46.645
Okay, we're about to load the file from
the file system, you could go in there and

36
00:02:46.645 --> 00:02:49.060
hot swap it with something else.

37
00:02:49.060 --> 00:02:54.118
There's a transform hook which is
like we've parsed it into an AST and

38
00:02:54.118 --> 00:02:57.140
now I wanna mutate the AST, right?

39
00:02:57.140 --> 00:03:02.244
There are various points in the process
in the lifecycle of your code going from

40
00:03:02.244 --> 00:03:07.970
file-on-file system to build a thing where
you can interject your thought process and

41
00:03:07.970 --> 00:03:11.240
say, I would like to do something now,
right?

42
00:03:11.240 --> 00:03:15.873
And we saw before, that could be run
it through sharp, which is what Vite image

43
00:03:15.873 --> 00:03:20.750
tools did, which is the ability to
resize the image, so on and so forth.

44
00:03:20.750 --> 00:03:23.857
The React plug-in is simply taking it and

45
00:03:23.857 --> 00:03:27.958
saying, okay,
I wanna run it through the JSX parser.

46
00:03:27.958 --> 00:03:32.856
Whether that's SWC or Babel, or
depending on the plugin you're using,

47
00:03:32.856 --> 00:03:36.574
something in the way that's
always been done, right?

48
00:03:36.574 --> 00:03:41.571
We could say, hey, if this ends in .yaml,
I just wanna take a any of

49
00:03:41.571 --> 00:03:47.100
the libraries that will translate YAML
into JSON, and take the YAML file,

50
00:03:47.100 --> 00:03:51.965
shove it in there, and
spit me out JSON file, right, anything.

51
00:03:51.965 --> 00:03:55.550
If you have a bespoke file
type at your company and

52
00:03:55.550 --> 00:04:00.971
you have some library to parse it,
right, you could theoretically parse

53
00:04:00.971 --> 00:04:06.580
it into a JavaScript object and then be
able to have it and access it, right?

54
00:04:06.580 --> 00:04:11.739
And one of the conventions I do think
is kinda cool, though, is a term from

55
00:04:11.739 --> 00:04:17.480
Rollup but Vite is taking its bundling
from Rollup called virtual modules.

56
00:04:17.480 --> 00:04:18.980
What is a virtual module?

57
00:04:18.980 --> 00:04:25.360
Virtual module is this idea of, it's not
actually on your file system, right?

58
00:04:25.360 --> 00:04:30.904
It is a file that doesn't really exist,
but then you can import it and use it and

59
00:04:30.904 --> 00:04:36.196
your plugin will go, you gonna try to
Import whatever from virtual colon,

60
00:04:36.196 --> 00:04:41.488
and the virtual is optional but
like let's say virtual is the convention,

61
00:04:41.488 --> 00:04:44.760
virtual colon, whatever it's called.

62
00:04:44.760 --> 00:04:49.711
You say like, Vite's like, okay, I'm gonna
go try to resolve this module you go, hey,

63
00:04:49.711 --> 00:04:53.426
virtual colon workspace,
which is one that I have in the code base,

64
00:04:53.426 --> 00:04:56.040
I'll just show you in a second.

65
00:04:56.040 --> 00:05:00.504
It will say like let me let me tell you
what the file system would have told you.

66
00:05:00.504 --> 00:05:04.920
Don't read the file system, I'm going
to give you the contents of a file and

67
00:05:04.920 --> 00:05:05.960
you deal with it.

68
00:05:05.960 --> 00:05:10.420
I should show you, I showed you in
the development version of the website.

69
00:05:10.420 --> 00:05:15.400
I have this open in Visual Studio code so
I can like click on any

70
00:05:15.400 --> 00:05:20.102
given file as I'm like working
on this course and see it.

71
00:05:20.102 --> 00:05:24.102
And then as I'm reading through it,
like, I see typo, I can go and

72
00:05:24.102 --> 00:05:28.275
just hit this button and opens that file,
and just to make my life easier.

73
00:05:28.275 --> 00:05:36.990
And so, here is the plugin, right?

74
00:05:36.990 --> 00:05:41.380
That is a use case I'm using for
a virtual module.

75
00:05:41.380 --> 00:05:44.950
And so, I have this module
called virtual:workspace.

76
00:05:44.950 --> 00:05:49.948
And all it really does is it's giving
me the directory that this project is

77
00:05:49.948 --> 00:05:51.490
based out of, right?

78
00:05:51.490 --> 00:05:55.481
And so, if you look at this link,
it's really small down there,

79
00:05:55.481 --> 00:06:00.300
it's vscode://file on my file system,
and that's what it does.

80
00:06:00.300 --> 00:06:05.231
But I need to know the first part
of that file path, right, or

81
00:06:05.231 --> 00:06:07.177
actually, a lot of it.

82
00:06:07.177 --> 00:06:11.216
So what it allows me to do
is I can kind of go and

83
00:06:11.216 --> 00:06:16.050
there is no virtual:workspace
in my project.

84
00:06:16.050 --> 00:06:19.846
But when Vite says,
we're importing something from

85
00:06:19.846 --> 00:06:24.416
virtual:workspace I step in with
that load hook there and I say, yo,

86
00:06:24.416 --> 00:06:29.460
if you are virtual:workspace,
don't load anything from the file system.

87
00:06:29.460 --> 00:06:32.665
Don't even go looking for
anything from the file system, right?

88
00:06:32.665 --> 00:06:37.744
What I want you to do is I literally
just give it a string of JavaScript that

89
00:06:37.744 --> 00:06:42.598
I wanted to pretend this is what you
found on the file system, right?

90
00:06:42.598 --> 00:06:46.044
And so
in this case when the project loads,

91
00:06:46.044 --> 00:06:50.940
this gives me the path of
the actual project itself.

92
00:06:50.940 --> 00:06:56.899
And I basically say, hey,
if you're the one we're looking for,

93
00:06:56.899 --> 00:06:59.356
go ahead and pull this one.

94
00:06:59.356 --> 00:07:04.602
There's a \0 in here,
let's pull it up in the real code.

95
00:07:14.840 --> 00:07:18.778
No, that one, I'll find it for
you in a second.

96
00:07:18.778 --> 00:07:23.875
There's a \0 here, it's just I think
got stripped out of the rendered file,

97
00:07:23.875 --> 00:07:25.960
we'll grab it in a second.

98
00:07:25.960 --> 00:07:30.783
And that's just a convention that is
like totally not a valid module name

99
00:07:30.783 --> 00:07:34.592
that tells the rest of Rollup
ignore this thing, right?

100
00:07:34.592 --> 00:07:37.482
It's a totally bogus one, but
then I don't have to type it.

101
00:07:37.482 --> 00:07:41.622
And so we turn it into that so that every
other plugin will ignore it and we'll say,

102
00:07:41.622 --> 00:07:46.182
hey, if you're the module I'm looking for,
never load it from the file system, right,

103
00:07:46.182 --> 00:07:47.150
give it this file.

104
00:07:47.150 --> 00:07:51.696
You could write this in another file,
for me it's a one-liner where it just

105
00:07:51.696 --> 00:07:55.320
basically gives me a function
that takes the current file and

106
00:07:55.320 --> 00:07:59.430
prefixes it wherever this project
is on my file system, right?

107
00:07:59.430 --> 00:08:00.930
And you can do this for
a whole bunch of things.

108
00:08:00.930 --> 00:08:06.311
We had a request in our app where we
have a bunch of companies who have

109
00:08:06.311 --> 00:08:12.653
sensitive data, and we are technically
an open source app, and we actually,

110
00:08:12.653 --> 00:08:18.350
on our server, encrypt all their data,
but they can look it in the UI.

111
00:08:18.350 --> 00:08:23.135
So what they want to do is they
wanted some way to know what SHA of

112
00:08:23.135 --> 00:08:24.830
the UI that we had.

113
00:08:24.830 --> 00:08:28.282
So in case somebody from security wanted
to audit the code to make sure we weren't

114
00:08:28.282 --> 00:08:30.971
secretly waiting for it to render
on the DOM and report it back,

115
00:08:30.971 --> 00:08:33.280
they could see what SHA was and
audit the code.

116
00:08:33.280 --> 00:08:37.838
And so I could theoretically
have a virtual:gitSha, right,

117
00:08:37.838 --> 00:08:41.284
that would then get the latest commit,
right?

118
00:08:41.284 --> 00:08:45.006
Even at build time, right,
when you go to the GitHub actions, and

119
00:08:45.006 --> 00:08:47.401
then interpolate it into my application,

120
00:08:47.401 --> 00:08:51.337
even though that's not written on
the file system anywhere, right?

121
00:08:51.337 --> 00:08:57.360
And so, the nice part about this plugin
is that it is very small, all right?

122
00:08:57.360 --> 00:09:01.966
It is effectively we've got the name of
this, we are just kind of resolving the ID

123
00:09:01.966 --> 00:09:04.540
instead of looking for
it in the file system or

124
00:09:04.540 --> 00:09:08.645
anything like that to one that like
it is known shouldn't be anywhere.

125
00:09:08.645 --> 00:09:12.340
And then I am basically saying this is
what you would have found on the file

126
00:09:12.340 --> 00:09:13.600
system, right?

127
00:09:13.600 --> 00:09:20.344
And there's a whole bunch of other ones
that you can do like wire two together,

128
00:09:20.344 --> 00:09:25.540
there's a Million markdown plugins for
Vite, right?

129
00:09:25.540 --> 00:09:30.400
We'll write one real quick cuz I think it
will demonstrate how this works, and then

130
00:09:30.400 --> 00:09:35.340
maybe do one to inline critical CSS if we
needed to, or something along those lines.

131
00:09:35.340 --> 00:09:41.265
Just to kind of demonstrate what
these things will look like.

132
00:09:41.265 --> 00:09:43.160
So, which one are we more interested in?

133
00:09:43.160 --> 00:09:43.920
You wanna do a markdown?

134
00:09:45.510 --> 00:09:46.920
Yeah, there's nodding.

135
00:09:46.920 --> 00:09:51.720
Cool, let's do the markdown one,
and take a look at that.

136
00:09:51.720 --> 00:09:55.810
And just see that,
they are not that scary.

137
00:09:55.810 --> 00:10:02.350
And again, whatever use case you need,
will probably be somewhat esoteric.

138
00:10:02.350 --> 00:10:06.975
But then I was just annoyed by switching
back and forth between my browser and

139
00:10:06.975 --> 00:10:11.236
my code editor and jumping to the right
file as I was working on this, so

140
00:10:11.236 --> 00:10:13.010
I wrote this plugin.

141
00:10:13.010 --> 00:10:17.746
But then I was thinking to myself, it
would be cool if in my app, since you can

142
00:10:17.746 --> 00:10:22.980
see both the module you're importing and
the importing module everywhere.

143
00:10:22.980 --> 00:10:28.486
I could even in development have, if I
double click or shift click open any given

144
00:10:28.486 --> 00:10:33.840
component in my app, that component
jumped directly to that file, right?

145
00:10:33.840 --> 00:10:37.410
There's little things, not to say you
should do all these things you like, but

146
00:10:37.410 --> 00:10:40.502
there's little things you can add
depending on your use case that you

147
00:10:40.502 --> 00:10:41.670
might need.

148
00:10:41.670 --> 00:10:45.426
The virtual modules are cool if you use
something like contentful and you have

149
00:10:45.426 --> 00:10:49.140
your data in a CMS somewhere and you
wanna just pull it at build time, right?

150
00:10:49.140 --> 00:10:54.340
That's another option, right,
that you can go for and do that as well.

151
00:10:54.340 --> 00:10:57.508
There's a bunch of, it's one of those
things where it's just most of the common

152
00:10:57.508 --> 00:11:00.583
cases that you can think off the top of
your head, somebody did think of that and

153
00:11:00.583 --> 00:11:01.930
there's a plug in.

154
00:11:01.930 --> 00:11:06.157
But for the very unique case that you will
come across at some point in the next

155
00:11:06.157 --> 00:11:09.416
year, two years, whatever,
it's a powerful pattern.

156
00:11:09.416 --> 00:11:13.984
And we'll go through some basic ones just
to show that it's not nearly as scary as

157
00:11:13.984 --> 00:11:15.406
you think it is, right?

158
00:11:15.406 --> 00:11:18.441
You can make a scary,
you can get very involved,

159
00:11:18.441 --> 00:11:21.932
I'm sure that image tools one
is a pretty large plugin.

160
00:11:21.932 --> 00:11:25.418
But for most of the little things that you
might need to do that like make your life

161
00:11:25.418 --> 00:11:27.135
easier, and this is kind of like Act four

162
00:11:27.135 --> 00:11:29.550
"Vite is extensible",
it's pretty straightforward.

