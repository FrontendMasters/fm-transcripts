WEBVTT

1
00:00:00.280 --> 00:00:04.920
Now, the only other things we really
need to do to make this a real deal

2
00:00:04.920 --> 00:00:09.800
library is actually not Vite related,
is basically put some additional

3
00:00:09.800 --> 00:00:15.084
information in package.json, being like,
here's what the good stuff is.

4
00:00:15.084 --> 00:00:20.692
When we say import our fancy module,
right, what file, right?

5
00:00:20.692 --> 00:00:22.081
When we say import React,

6
00:00:22.081 --> 00:00:26.325
there's something in the package.json
saying where do we start to get React?

7
00:00:26.325 --> 00:00:27.557
And like I said earlier,

8
00:00:27.557 --> 00:00:31.384
everything is hard because there's
two module systems currently, right?

9
00:00:31.384 --> 00:00:35.829
There's still CommonJS, and
there's also ES modules, and

10
00:00:35.829 --> 00:00:39.943
we've chosen to support both
cuz we're good citizens.

11
00:00:39.943 --> 00:00:46.519
So what we're gonna do is just make
some changes to our package.json.

12
00:00:46.519 --> 00:00:51.686
And I'll do it all up here so
it's easy to find.

13
00:00:51.686 --> 00:00:55.596
So old node with CommonJS,
you would have a main.

14
00:00:55.596 --> 00:00:57.683
And that main would be kind of
what we were saying before,

15
00:00:57.683 --> 00:00:59.040
the main file that you wanna pull in.

16
00:00:59.040 --> 00:01:03.925
So we'd have that dist, and
then we decided to call it, and

17
00:01:03.925 --> 00:01:06.670
now here's the tricky part.

18
00:01:06.670 --> 00:01:08.551
Old stuff, we need the CommonJS one.

19
00:01:08.551 --> 00:01:10.525
New stuff, we need the ES module.

20
00:01:10.525 --> 00:01:13.645
Try to hold that in your brain, cuz I'm
gonna need help holding it in my brain.

21
00:01:13.645 --> 00:01:16.605
So I'm gonna put it in all your brains,
it'll be easier.

22
00:01:16.605 --> 00:01:21.326
So we've got that dist, and

23
00:01:21.326 --> 00:01:25.863
we call femds.umd.cjs.

24
00:01:25.863 --> 00:01:26.952
Everything's hard.

25
00:01:26.952 --> 00:01:35.532
And then the module for those ES modules
will be the other file, that ./dist.

26
00:01:35.532 --> 00:01:37.157
If anyone sees me make a typo,

27
00:01:37.157 --> 00:01:41.130
don't assume that I'm doing
some four-dimensional chess.

28
00:01:41.130 --> 00:01:44.346
With the file name,
I'm probably just making a typo.

29
00:01:44.346 --> 00:01:48.205
So we've got those two, and
then the other one, and honestly,

30
00:01:48.205 --> 00:01:51.240
do I theoretically know
why I have to do all this?

31
00:01:51.240 --> 00:01:52.875
Yes, do I really, truly?

32
00:01:52.875 --> 00:01:56.109
I know that I have to for
various different bundlers.

33
00:01:56.109 --> 00:01:59.649
Some of these aren't even in
the official spec for package.json, but

34
00:01:59.649 --> 00:02:01.420
you kind of need all of them to work.

35
00:02:01.420 --> 00:02:06.013
So then again, we need to basically say,

36
00:02:06.013 --> 00:02:10.620
we'll go ahead and we'll say, import.

37
00:02:13.434 --> 00:02:18.629
And so the import is, again,
our ES modules, and so that's going to be.

38
00:02:18.629 --> 00:02:22.610
So if they've used import to pull it in,
we wanna give them the ES module.

39
00:02:22.610 --> 00:02:26.399
If they require as CommonJS,

40
00:02:26.399 --> 00:02:32.970
we will give them the common.js file,
right?

41
00:02:32.970 --> 00:02:35.770
And then, that should do the trick.

42
00:02:35.770 --> 00:02:38.730
There is one more thing we can add
here if we wanna be good people.

43
00:02:38.730 --> 00:02:39.850
Does everyone wanna be good people?

44
00:02:41.040 --> 00:02:42.620
For the most part, mediocre.

45
00:02:42.620 --> 00:02:45.190
We're on the fence on whether or
not we wanna be good people.

46
00:02:45.190 --> 00:02:47.520
We're trending, yes, right?

47
00:02:47.520 --> 00:02:52.520
We can say that the types are located

48
00:02:52.520 --> 00:02:57.360
at dist/index.d.ts, right?

49
00:02:57.360 --> 00:03:00.357
So that way,
we've pointed where the types are, and

50
00:03:00.357 --> 00:03:04.000
you see index.d.ts is actually
pulling in these other two.

51
00:03:04.000 --> 00:03:05.680
So we'll get all the types as well.

52
00:03:05.680 --> 00:03:07.331
Even if they're not using TypeScript,

53
00:03:07.331 --> 00:03:09.230
we'll get the IntelliSense
in there as well.

54
00:03:11.000 --> 00:03:14.700
And yeah, that should give us
most of our package, right?

55
00:03:14.700 --> 00:03:19.110
So lib mode, again, we give an entry
point, we say what formats we want.

56
00:03:19.110 --> 00:03:22.806
If you are just doing regular JavaScript,
or even just TypeScript files,

57
00:03:22.806 --> 00:03:26.211
if it's like library of utility
functions or something that does not

58
00:03:26.211 --> 00:03:29.810
involve a component library,
do you need to worry about injecting CSS?

59
00:03:29.810 --> 00:03:31.080
No, right?

60
00:03:31.080 --> 00:03:35.081
Or if you do wanna include any of the
third party libraries you happen to pull

61
00:03:35.081 --> 00:03:35.790
in, great.

62
00:03:35.790 --> 00:03:38.380
We're going to assume
that they have React.

63
00:03:38.380 --> 00:03:42.230
We're going to assume that
we wanna inject the CSS.

64
00:03:42.230 --> 00:03:43.920
So we did a little bit of extra work.

65
00:03:43.920 --> 00:03:46.250
We did just generate the types for free.

66
00:03:46.250 --> 00:03:47.980
So that was pretty cool.

67
00:03:47.980 --> 00:03:53.882
And let's go ahead and
let's see if it works, Dustin?

68
00:03:53.882 --> 00:03:58.020
&gt;&gt; Does the CSS inject plugin work
the same with SASS or LESS, and

69
00:03:58.020 --> 00:04:01.854
library mode work the same
with the CSS pre-processor?

70
00:04:01.854 --> 00:04:06.539
&gt;&gt; It should, I will couch that with,
I mostly just use

71
00:04:06.539 --> 00:04:11.771
PostCSS these days,
I don't use Sass that much anymore.

72
00:04:11.771 --> 00:04:16.795
So it should asterisk, little cross thing,
caret, every disclaimer around it,

73
00:04:16.795 --> 00:04:20.690
because it is just going through
Vite the same way we saw before.

74
00:04:20.690 --> 00:04:25.450
Vite shouldn't care in terms of
library mode, but I tend to, 99.9999,

75
00:04:25.450 --> 00:04:29.300
actually 100% of the time,
if we count the last three years,

76
00:04:29.300 --> 00:04:32.530
tend to use PostCSS,
mostly cuz it's already there.

77
00:04:32.530 --> 00:04:36.164
Sass is great, that's not a dig on Sass,
but for most of the things I need,

78
00:04:36.164 --> 00:04:39.560
especially worldwide predominantly
use Tailwind these days.

79
00:04:39.560 --> 00:04:41.340
I haven't used Sass in a while.

80
00:04:41.340 --> 00:04:44.078
So I don't wanna say like,
of course, it does.

81
00:04:44.078 --> 00:04:45.750
I believe it does.

82
00:04:45.750 --> 00:04:49.297
But that's a fun experiment
at some point as well.

83
00:04:49.297 --> 00:04:52.988
All right, so real quick.

84
00:04:52.988 --> 00:04:55.115
So it's in vite-components.

85
00:04:55.115 --> 00:04:57.595
I made that vite-react before.

86
00:04:57.595 --> 00:05:03.058
So, I think in here we can do, what is it,

87
00:05:03.058 --> 00:05:09.742
npm link, vite-components.

88
00:05:09.742 --> 00:05:13.986
And all npm link does is it installs
it from another directory on your file

89
00:05:13.986 --> 00:05:14.551
system.

90
00:05:14.551 --> 00:05:17.240
If you use pmpm,
you can do a whole manual repo setup and

91
00:05:17.240 --> 00:05:19.229
have a bunch of stuff in the same folder,

92
00:05:19.229 --> 00:05:23.462
that's beyond like the scope of our time
together, we're just talking about Vite.

93
00:05:23.462 --> 00:05:28.385
But npm link should do the trick for
the most part.

94
00:05:28.385 --> 00:05:35.419
If we look in our package.json in here,
you can see, where is it?

95
00:05:40.423 --> 00:05:41.303
Where'd it go?

96
00:05:44.491 --> 00:05:48.520
It might just be, I think maybe in
this case, it's pmpm most of the time.

97
00:05:48.520 --> 00:05:51.975
Let's just look in node modules.

98
00:05:51.975 --> 00:05:56.321
What did I call this library?

99
00:05:59.828 --> 00:06:02.877
In my package.json, that's important.

100
00:06:02.877 --> 00:06:07.047
Called it vite-components,
okay, let's see.

101
00:06:08.819 --> 00:06:11.333
We did npm link,
it looks like everything was fine.

102
00:06:11.333 --> 00:06:18.342
All right, before I over think it,
we'll go into our vite-react.

103
00:06:21.443 --> 00:06:24.576
If I scroll down into my files.

104
00:06:24.576 --> 00:06:25.875
Yeah, it's here, we're good, we're great.

105
00:06:25.875 --> 00:06:28.982
We're doing wonderful.

106
00:06:28.982 --> 00:06:32.207
I think pmpm will do it a little
bit differently, but cool.

107
00:06:32.207 --> 00:06:34.774
So let's go in here and let's see.

108
00:06:38.519 --> 00:06:39.440
Let's not do it in this file.

109
00:06:39.440 --> 00:06:41.112
Let's do it in our app.

110
00:06:52.604 --> 00:06:55.341
That's not filling me with,

111
00:07:04.330 --> 00:07:08.198
Cool, it says we're not using it yet,
sweet.

112
00:07:08.198 --> 00:07:10.975
Let's go ahead, we'll just console.log
it real fast and then, actually,

113
00:07:10.975 --> 00:07:11.670
you know what?

114
00:07:11.670 --> 00:07:12.915
We're gonna do it.
We're gonna go all the way.

115
00:07:24.765 --> 00:07:26.418
It knows Input was one.

116
00:07:26.418 --> 00:07:28.800
My types must be working.

117
00:07:28.800 --> 00:07:33.120
All right, so in here, we're gonna
just go, let's clear out most of this.

118
00:07:33.120 --> 00:07:36.151
And we're just gonna see,
hopefully, with any luck,

119
00:07:36.151 --> 00:07:40.230
cuz it's one of those things we code
a little bit too much without looking.

120
00:07:40.230 --> 00:07:42.470
You gotta wonder where I'm feeling good.

121
00:07:42.470 --> 00:07:49.290
So we'll say Input, yeah, it's fine.

122
00:07:49.290 --> 00:07:54.961
And then we'll say Button, look, it knows
it has a dangerous property, that's cool.

123
00:07:54.961 --> 00:08:00.528
Cuz my types are included and
yeah, we're not using that.

124
00:08:00.528 --> 00:08:02.703
So let's go ahead,

125
00:08:09.060 --> 00:08:13.058
Look at that, with the styles and
everything built in, right?

126
00:08:13.058 --> 00:08:16.731
And some of those are a little bit
tedious, right, you gotta put the DTS in

127
00:08:16.731 --> 00:08:20.298
there, you gotta inject the styles,
but you set that up once, right?

128
00:08:20.298 --> 00:08:24.847
And now I could just add more and
more components to this library.

129
00:08:24.847 --> 00:08:27.853
They're gonna come with the styles,
they're gonna come with everything,

130
00:08:27.853 --> 00:08:29.620
they're gonna come with the types, right?

131
00:08:29.620 --> 00:08:32.513
I can kinda build on that toolkit myself,
and

132
00:08:32.513 --> 00:08:38.180
other than a little bit of an initial
setup that we all did together, right?

133
00:08:38.180 --> 00:08:40.074
We've got the boilerplate for
producing this.

134
00:08:40.074 --> 00:08:44.634
So I could run npm publish at this point,
and publish my components and

135
00:08:44.634 --> 00:08:47.042
you could npm install them, right?

136
00:08:47.042 --> 00:08:48.710
I do not wanna be on the hook for
maintaining them.

137
00:08:48.710 --> 00:08:53.425
So I'm gonna be doing that
right now because it's a button

138
00:08:53.425 --> 00:08:55.860
with a style on it, right?

139
00:08:55.860 --> 00:09:00.506
But the process of making reusable code
with Vite, and then consuming it in

140
00:09:00.506 --> 00:09:06.280
another Vite application is incredibly
powerful, and an interesting way to do it.

141
00:09:06.280 --> 00:09:09.224
When I was preparing for this, there
was a lot of people who using Webpack,

142
00:09:09.224 --> 00:09:11.072
like, Vite seems great,
but I can't use it.

143
00:09:11.072 --> 00:09:11.779
I'm like, why can't you use it?

144
00:09:11.779 --> 00:09:13.576
I'm like, I need module federation.

145
00:09:13.576 --> 00:09:15.504
You all know what module federation is?

146
00:09:15.504 --> 00:09:17.355
Good, cuz I had to learn that.

147
00:09:17.355 --> 00:09:20.547
It's basically the ability to remotely
pull one in at runtime with a very

148
00:09:20.547 --> 00:09:21.132
fancy name.

149
00:09:21.132 --> 00:09:25.298
I'm like, that's a very simple
concept with a very complicated name.

150
00:09:25.298 --> 00:09:28.790
It turns out Vite can very easily
support module federation.

151
00:09:28.790 --> 00:09:31.093
And so what we'll do next is
we'll kinda look at that and

152
00:09:31.093 --> 00:09:32.565
we'll see how that process works.

153
00:09:32.565 --> 00:09:35.902
And we'll kinda have two applications
that can kinda pull things in at runtime.

154
00:09:35.902 --> 00:09:39.458
We'll talk a little bit more about what
that is and how it works as well, and

155
00:09:39.458 --> 00:09:40.257
how to set it up.

