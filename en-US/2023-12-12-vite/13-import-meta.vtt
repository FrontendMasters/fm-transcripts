WEBVTT 1 00:00:00.300 --> 00:00:04.787 Right, so that's a great segue into talking a little bit more about some of
2
00:00:04.787 --> 00:00:07.010
the other things that are on import.

3
00:00:07.010 --> 00:00:11.483
And one of the best ways to figure out
what else is on import is just to do

4
00:00:11.483 --> 00:00:16.830
everyone's favorite thing,
which is just console.log things.

5
00:00:16.830 --> 00:00:19.251
I understand there's a whole
bunch of tools out there, but

6
00:00:19.251 --> 00:00:20.329
you know which one I like?

7
00:00:21.460 --> 00:00:24.330
I like me some console log.

8
00:00:24.330 --> 00:00:25.884
So we have import meta,

9
00:00:25.884 --> 00:00:30.460
import meta this part of it is
definitely part of web standard.

10
00:00:30.460 --> 00:00:35.348
If you are in like node using ES modules,
you can do import meta.url that

11
00:00:35.348 --> 00:00:39.840
is a standard like what they is
the current URL of the file.

12
00:00:39.840 --> 00:00:44.263
But if we look at importmeta
in our tooling real quick,

13
00:00:44.263 --> 00:00:47.980
in our console, so you've got that URL.

14
00:00:47.980 --> 00:00:51.540
And then you've also got Vite adds in .env.

15
00:00:51.540 --> 00:00:56.181
And you can see that
it'll actually show you

16
00:00:56.181 --> 00:01:00.930
some environment variables in this case.

17
00:01:00.930 --> 00:01:04.389
And what's important to note
is that in development, sure,

18
00:01:04.389 --> 00:01:08.640
yeah, these are whatever the current
environment is in production.

19
00:01:08.640 --> 00:01:12.112
It is whatever the environment was
when you built the app, right,

20
00:01:12.112 --> 00:01:17.240
because you're building static assets that
don't have access to any of this anymore.

21
00:01:17.240 --> 00:01:22.495
But you can kind of see some, I think some
of the more useful ones are this dev,

22
00:01:22.495 --> 00:01:25.620
right, am I in development or not?

23
00:01:25.620 --> 00:01:28.482
If I show you,
here I'll show you real quick, and

24
00:01:28.482 --> 00:01:32.445
we'll talk a little bit more about
this when we look at some plugins.

25
00:01:32.445 --> 00:01:38.320
But if I go to my local version of
the course website, I am very lazy.

26
00:01:38.320 --> 00:01:40.923
And I made myself this open
in Visual Studio Code, so

27
00:01:40.923 --> 00:01:44.711
it'll open Visual Studio Code in
the Markdown file I'm looking at right now

28
00:01:44.711 --> 00:01:46.088
that's on my file system.

29
00:01:46.088 --> 00:01:50.053
And I'll show you the plugin a little
bit if you really want to see it, but

30
00:01:50.053 --> 00:01:54.798
that's using that like, okay, if you know
import.meta.env, if I'm in dev mode,

31
00:01:54.798 --> 00:01:59.413
show me this, otherwise, this doesn't mean
anything right to somebody who sees it

32
00:01:59.413 --> 00:02:00.975
on the production website.

33
00:02:00.975 --> 00:02:05.246
So it's like things that I only show in
development, and this could be all sorts

34
00:02:05.246 --> 00:02:09.580
of things, like if you wanted to have some
kind of way to load different state into

35
00:02:09.580 --> 00:02:13.710
your store, like in Redux or
whatever, when you're in development.

36
00:02:13.710 --> 00:02:16.306
You could have like certain
things that you show, or

37
00:02:16.306 --> 00:02:19.374
like mock out the API only in development,
so on and so forth,

38
00:02:19.374 --> 00:02:22.640
using like mock service worker or
something like that.

39
00:02:22.640 --> 00:02:26.240
The dev and prod flags are super useful.

40
00:02:26.240 --> 00:02:29.692
If we go back,
we can see the base URL, like, yeah,

41
00:02:29.692 --> 00:02:33.301
I could change that to have
a subdirectory, whether or

42
00:02:33.301 --> 00:02:38.180
not we're using server side rendering for
that page, so on and so forth.

43
00:02:38.180 --> 00:02:40.970
The mode, right now is development.

44
00:02:40.970 --> 00:02:49.700
If I were to go to, it would be build in
the case of build So on and so forth.

45
00:02:49.700 --> 00:02:54.155
And we can actually add more
things in here, as well,

46
00:02:54.155 --> 00:02:56.730
by adding environment files.

47
00:02:58.030 --> 00:03:01.378
And so environment files are a way
to basically have other environment

48
00:03:01.378 --> 00:03:02.010
variables.

49
00:03:02.010 --> 00:03:02.956
And there's some rules,

50
00:03:02.956 --> 00:03:05.840
because it's not just going to take any
environment variable in your machine.

51
00:03:05.840 --> 00:03:08.450
That would be bad, right?

52
00:03:08.450 --> 00:03:12.290
Because that's everything
even at build time.

53
00:03:12.290 --> 00:03:13.440
What OS are you running?

54
00:03:13.440 --> 00:03:17.824
And if you do process at env in Node you
can see it's a giant file of stuff you

55
00:03:17.824 --> 00:03:22.860
probably are not super interested in
shipping in your client side code, right?

56
00:03:22.860 --> 00:03:27.011
And so
you notice that even in that environment,

57
00:03:27.011 --> 00:03:31.575
there's not a lot in there,
but I can make a new file.

58
00:03:31.575 --> 00:03:35.792
I can say .env, and in here,
I can put an environment variable, and

59
00:03:35.792 --> 00:03:37.849
you're gonna see it not happen.

60
00:03:37.849 --> 00:03:42.724
You won't see me equals hi,
and as you can guess,

61
00:03:42.724 --> 00:03:48.298
what happens is you will not
see it because out of the box,

62
00:03:48.298 --> 00:03:55.180
V itewill only include ones that have
the prefix Vite, can you change this?

63
00:03:55.180 --> 00:03:56.650
Of course you can change it, right?

64
00:03:56.650 --> 00:03:58.722
But it does make you like have to,

65
00:03:58.722 --> 00:04:03.140
like opt in to allow listing
an environment variable, right?

66
00:04:03.140 --> 00:04:06.280
So now you can see that it's
definitely in place there.

67
00:04:06.280 --> 00:04:11.344
One of the things that I
learned the hard way If

68
00:04:11.344 --> 00:04:16.273
you look in the part
that I wrote about this,

69
00:04:16.273 --> 00:04:23.440
I think it's in this no it's
in this other section over here.

70
00:04:23.440 --> 00:04:26.850
I wrote import.meta.env.

71
00:04:26.850 --> 00:04:30.694
Because it will actually even replace
any of those values in your HTML as well

72
00:04:30.694 --> 00:04:34.070
[LAUGH] I was like, why do I have
this big JavaScript object in here?

73
00:04:34.070 --> 00:04:37.880
And I went to like 'cause it made
the formatting all weird and

74
00:04:37.880 --> 00:04:41.841
went to go like search where I'm
like I didn't write all that,

75
00:04:41.841 --> 00:04:44.551
that's why I had to
escape it a little bit.

76
00:04:44.551 --> 00:04:45.933
But it will actually,

77
00:04:45.933 --> 00:04:49.512
it can even interpolate those
values in your HTML as well.

78
00:04:49.512 --> 00:04:54.598
But yeah, so you can ask if you just have
to put this Vite like you won't see me and

79
00:04:54.598 --> 00:04:58.133
then like anything while
you will see me now, right?

80
00:04:58.133 --> 00:05:01.750
Like, it's now a lie that
I prefixed it with Vite.

81
00:05:01.750 --> 00:05:05.709
And so to have a variable that's
available in your client side code,

82
00:05:05.709 --> 00:05:10.349
it does need to be prefixed with Vite in
this case, but like, you can change it,

83
00:05:10.349 --> 00:05:12.420
I just don't, I will use Vite in ours.

84
00:05:12.420 --> 00:05:13.120
You can make it "app".

85
00:05:13.120 --> 00:05:14.690
You can make it whatever you want.

86
00:05:14.690 --> 00:05:19.218
And the other thing that you can do is
this environment .env will be loaded in

87
00:05:19.218 --> 00:05:21.900
all environments, right?

88
00:05:21.900 --> 00:05:24.180
You can do for different modes.

89
00:05:24.180 --> 00:05:33.090
So, for instance .env.local, right?

90
00:05:33.090 --> 00:05:36.440
For instance, will only be loaded
doing local development, right?

91
00:05:36.440 --> 00:05:38.660
So this is the mock data.

92
00:05:38.660 --> 00:05:42.396
If you have a different endpoint in
development than you do in production,

93
00:05:42.396 --> 00:05:45.140
you might have a different
setup here as well, right?

94
00:05:45.140 --> 00:05:45.967
And so here I can go.

95
00:05:57.037 --> 00:06:00.772
Right, and this could be a different
database, name and password and

96
00:06:00.772 --> 00:06:03.000
URL in this case and
you will see all that.

97
00:06:03.000 --> 00:06:07.328
So now if I want to go build this,
that one would not appear in

98
00:06:07.328 --> 00:06:11.760
the build because it's only
in local development, right?

99
00:06:11.760 --> 00:06:14.584
And so you have ones that you can do for
production, you have ones you can do for

100
00:06:14.584 --> 00:06:16.910
local, and you can set the environment
variables as you want.

101
00:06:16.910 --> 00:06:21.670
And these are added in
by Vite in this case.

102
00:06:21.670 --> 00:06:25.510
And so we have it set up for
different endpoints.

103
00:06:25.510 --> 00:06:29.235
Like, locally, yeah,
we have a server running localhost 3000,

104
00:06:29.235 --> 00:06:33.400
in production it's got a fully qualified
domain name, so on and so forth.

105
00:06:33.400 --> 00:06:36.720
You can set all these things, and
you basically kind of get it for free, and

106
00:06:36.720 --> 00:06:39.580
it's like reading these files
as you go through, right?

107
00:06:39.580 --> 00:06:42.240
And like I said, if you don't put
the prefix, you don't get it.

108
00:06:42.240 --> 00:06:43.829
So that's the only, like,

109
00:06:43.829 --> 00:06:47.880
kind of tasty note that you need to
kind of keep in mind in this case.

110
00:06:47.880 --> 00:06:50.650
&gt;&gt; To import.meta,
it doesn't seem to work with TS config.

111
00:06:50.650 --> 00:06:54.084
If we're setting up a proxy,
how do we get the environment variable?

112
00:06:54.084 --> 00:06:55.700
&gt;&gt; That's a good question.

113
00:06:55.700 --> 00:07:00.340
Okay, so if you are using, let's go
ahead and let's make a new file in here.

114
00:07:00.340 --> 00:07:04.150
And let's watch TypeScript
get angry with us, right?

115
00:07:04.150 --> 00:07:11.400
We'll say angry.ts, right, and
let's say we want to do console.log.

116
00:07:11.400 --> 00:07:17.140
What is it?
import.meta.env, right?

117
00:07:17.140 --> 00:07:18.890
It's very upset with us, right?

118
00:07:18.890 --> 00:07:20.829
Because import, that's a web standard.

119
00:07:20.829 --> 00:07:21.865
Import.meta, that's a web standard.

120
00:07:21.865 --> 00:07:24.450
Import.meta.url, that's a web standard.

121
00:07:28.235 --> 00:07:34.080
Import.meta.env, that's
a Vite-specific thing, right?

122
00:07:34.080 --> 00:07:35.950
And so he's like, now what?

123
00:07:35.950 --> 00:07:41.940
All that you need to do is have somewhere,
right, like.

124
00:07:41.940 --> 00:07:45.027
I you'll, you'll see this in the,
if you choose TypeScript,

125
00:07:45.027 --> 00:07:48.704
you'll probably actually even see this in
that template that we did with React and

126
00:07:48.704 --> 00:07:50.120
TypeScript as well.

127
00:07:50.120 --> 00:07:53.040
There's some kind of any,
it doesn't have to be vite.d.ts.

128
00:07:53.040 --> 00:07:55.760
It could be any,
any one of your declaration files.

129
00:07:55.760 --> 00:07:58.550
Yeah, there's reference types,
vite/client.

130
00:07:58.550 --> 00:08:03.120
If you put this in, like, this is going to
say, you can actually refer to it in your

131
00:08:03.120 --> 00:08:07.891
TS config too, but it's going to say, hey,
vite, pull in all the types that you know

132
00:08:07.891 --> 00:08:12.110
about from like that you're adding in for
all the stuff that you're doing.

133
00:08:12.110 --> 00:08:14.789
So now if let's go grab this and

134
00:08:14.789 --> 00:08:20.885
bring it back over to the other
project and now if we look at angry.ts.

135
00:08:20.885 --> 00:08:25.326
It's totally happy with the env
because we're basically,

136
00:08:25.326 --> 00:08:30.984
Vite has stepped in and added all of its
types and declared them on the modules for

137
00:08:30.984 --> 00:08:34.700
everything that it's
adding into the scene.

138
00:08:34.700 --> 00:08:40.136
So if you are, other than changing the .ts
if you're using Vite-specific stuff,

139
00:08:40.136 --> 00:08:45.520
all you need is a d.ts file with
a reference to the client types for vite.

140
00:08:45.520 --> 00:08:48.090
And you will then get all those types for
free.

141
00:08:48.090 --> 00:08:52.292
Awesome, and so but then what about
we're not out of the woods yet,

142
00:08:52.292 --> 00:08:54.075
we're not out of the woods.

143
00:08:54.075 --> 00:08:58.977
So let's do, I don't know what
happens over there all time,

144
00:08:58.977 --> 00:09:02.440
import.meta.env, what was it?

145
00:09:02.440 --> 00:09:04.628
VITE, you won't see me or you will see me

146
00:09:11.811 --> 00:09:15.095
That one gets marked as any,
it works because vite's like they're

147
00:09:15.095 --> 00:09:17.353
probably putting stuff
on this environment.

148
00:09:17.353 --> 00:09:20.360
So it works but
no one feels good about this, right?

149
00:09:20.360 --> 00:09:23.379
And so in this case,
if you are going to define your own,

150
00:09:23.379 --> 00:09:27.770
now they are all going to be strings, but
we don't know if this one exists or not.

151
00:09:27.770 --> 00:09:30.080
I would really like to like know.

152
00:09:31.490 --> 00:09:33.081
So I'll kind of show you.

153
00:09:33.081 --> 00:09:37.473
I actually like, for this purpose,
I grabbed the one from my own app.

154
00:09:37.473 --> 00:09:42.120
I'll just kind of show you because we
don't use a ton of these variables.

155
00:09:42.120 --> 00:09:46.452
I'll just kind of show you the one that I
use in our app, which is you can basically

156
00:09:46.452 --> 00:09:50.789
take that interface because if you looked
back over here is that import.meta M,

157
00:09:50.789 --> 00:09:53.502
that's what's vite's
adding to the equation.

158
00:09:53.502 --> 00:09:56.736
What I can do is then for
the ones that I know that we have, so

159
00:09:56.736 --> 00:10:00.301
like we have a cloud product,
we have an open-source product,

160
00:10:00.301 --> 00:10:04.320
they have slightly different APIs
of the servers that we talk to.

161
00:10:04.320 --> 00:10:07.840
And so
I can theoretically have conditions.

162
00:10:07.840 --> 00:10:11.409
Okay, if we're targeting our
cloud product, hit this endpoint,

163
00:10:11.409 --> 00:10:14.990
if we're targeting the open source,
do this other thing, right?

164
00:10:14.990 --> 00:10:17.987
And then at build time,
those will get actually compressed into,

165
00:10:17.987 --> 00:10:19.720
whatever the build target was.

166
00:10:19.720 --> 00:10:20.720
And I don't have to think about it.

167
00:10:20.720 --> 00:10:23.990
So I can build two different
versions of the app.

168
00:10:23.990 --> 00:10:28.845
So I just, defined as a read only
string in my application, but for

169
00:10:28.845 --> 00:10:32.850
the most part That's all
I'm really adding in there.

170
00:10:32.850 --> 00:10:37.930
And I'm adding all of whether or
not we're in Vitest.

171
00:10:37.930 --> 00:10:39.680
I practice saying Vite a lot.

172
00:10:39.680 --> 00:10:41.510
I did not practice saying Vitest.

173
00:10:42.610 --> 00:10:45.673
And now I'm scared to watch
the Enterprise UI workshop because do I

174
00:10:45.673 --> 00:10:47.470
just call it Vitest the entire time?

175
00:10:47.470 --> 00:10:52.981
I have to, right, because I didn't
even think to practice that, in that case.

176
00:10:52.981 --> 00:10:53.910
Vitest, right?

177
00:10:53.910 --> 00:10:55.790
We were growing as people
were becoming better.

178
00:10:55.790 --> 00:10:58.955
We're learning,
we're pronouncing things right.

179
00:10:58.955 --> 00:11:01.400
And so I can like pull in those as well.

180
00:11:01.400 --> 00:11:04.732
And then yeah, so if using TypeScript and
you need the types around this stuff,

181
00:11:04.732 --> 00:11:05.527
super easy to add,

182
00:11:05.527 --> 00:11:08.480
you add this you get most of the types for
any of your custom stuff.

183
00:11:08.480 --> 00:11:11.810
You can basically just add
those classes on there as well.

184
00:11:11.810 --> 00:11:15.030
And you will get it and
have everything there as well.

185
00:11:15.030 --> 00:11:18.030
So that was a great
question with great timing.

186
00:11:18.030 --> 00:11:21.713
And there's not like a lot
like environment variables are

187
00:11:21.713 --> 00:11:27.020
environment variables you know, the ones
that you need, right, based on your app.

188
00:11:27.020 --> 00:11:28.200
They're a little bit different for
everyone.

189
00:11:28.200 --> 00:11:31.077
Most of you are probably not
building something different for

190
00:11:31.077 --> 00:11:34.961
an open-source product versus a cloud
product, but you might have development.

191
00:11:34.961 --> 00:11:39.057
Because the thing about working on
an open-source server is I can run my own

192
00:11:39.057 --> 00:11:43.750
product, localhost, the real deal, but
for most people that's not true, right?

193
00:11:43.750 --> 00:11:47.479
So you might have your SQLite database or
your mock API or something like that,

194
00:11:47.479 --> 00:11:50.926
only use mock service worker,
which is something for mocking out APIs,

195
00:11:50.926 --> 00:11:53.527
client-side, if we're in
development otherwise,

196
00:11:53.527 --> 00:11:55.210
fall through to the regular app.

197
00:11:55.210 --> 00:11:58.828
Those are all options, but those are all
very, what you need will depend on your

198
00:11:58.828 --> 00:12:01.852
setup, but the way that you solve it,
is always gonna be the same,

199
00:12:01.852 --> 00:12:05.890
which is to define whatever environment
variables you need for that information.

200
00:12:05.890 --> 00:12:08.890
You can pull them in as you need them,
and everything's gonna be great.

