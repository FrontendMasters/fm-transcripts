WEBVTT

1
00:00:00.069 --> 00:00:05.182
The other really kinda powerful one
that I actually use a lot is, and

2
00:00:05.182 --> 00:00:10.045
this is again a Vite specific one,
is this idea of a glob import.

3
00:00:10.045 --> 00:00:12.512
Is everyone familiar
with the term glob means?

4
00:00:12.512 --> 00:00:18.447
It's yeah you give it some pattern and
it'll match all the files that match that.

5
00:00:18.447 --> 00:00:24.591
So for instance, let's try let's kind
of explore it together in this case.

6
00:00:24.591 --> 00:00:27.121
Let's go back into my index actually.

7
00:00:27.121 --> 00:00:30.143
So that will give me just the name.

8
00:00:30.143 --> 00:00:31.599
After it all tree shakes out.

9
00:00:31.599 --> 00:00:37.349
But let's say I have a whole
directory of files, right?

10
00:00:37.349 --> 00:00:39.908
And I wanna get all of them, right?

11
00:00:39.908 --> 00:00:44.621
I have files in my code base where it's,

12
00:00:44.621 --> 00:00:49.621
especially the ones that don't use Vite.

13
00:00:49.621 --> 00:00:53.981
On our marketing site,
we have a carousel of logos, right?

14
00:00:53.981 --> 00:01:00.024
That is a lot of import lines, or a lot of
file paths over and over and over again.

15
00:01:00.024 --> 00:01:05.065
And the other places in our application,
a lot of times,

16
00:01:05.065 --> 00:01:11.585
I will grab the API responses that
are JSON for bugs and things that broke.

17
00:01:11.585 --> 00:01:13.926
And I wanna run tests against all of them,
right?

18
00:01:13.926 --> 00:01:18.194
But, so the product works and
has workflows, right?

19
00:01:18.194 --> 00:01:23.413
Import a failing workflow, import a
completed workflow, import it, yada, yada.

20
00:01:23.413 --> 00:01:27.384
I've got to import 10 files, and
then I will iterate over them and

21
00:01:27.384 --> 00:01:28.993
run all the tests, right?

22
00:01:28.993 --> 00:01:32.925
And now every time I add a new file in
there, I've got to add another import, so

23
00:01:32.925 --> 00:01:33.769
on and so forth.

24
00:01:33.769 --> 00:01:38.078
Import.glob gives us the ability
to give it a pattern and

25
00:01:38.078 --> 00:01:42.387
it will go basically search
whatever that file path is and

26
00:01:42.387 --> 00:01:46.728
give you an object of all
the files that matched, right?

27
00:01:46.728 --> 00:01:51.439
An earlier version of the course
website used this because I

28
00:01:51.439 --> 00:01:56.534
think I showed you I have that
directory full of markdown files.

29
00:01:56.534 --> 00:02:01.090
I can basically say okay cool pull in all
the markdown files from this folder and

30
00:02:01.090 --> 00:02:04.142
now as I add new files they
would just be in that glob.

31
00:02:04.142 --> 00:02:06.071
So let's kinda explore it together, and

32
00:02:06.071 --> 00:02:09.223
I'll give you a little challenge to
play around with it in a second.

33
00:02:09.223 --> 00:02:14.576
So I've got my folder full of characters.

34
00:02:14.576 --> 00:02:18.172
I've also got this folder full of logos,
which are basically,

35
00:02:18.172 --> 00:02:22.367
I just went to the Vite repo and grabbed
the folder with all the templates and

36
00:02:22.367 --> 00:02:25.181
each one of them has a logo
of one of the templates.

37
00:02:25.181 --> 00:02:26.501
So I just grabbed all of those.

38
00:02:26.501 --> 00:02:31.238
And let's say that I don't wanna
have to know what's in this folder,

39
00:02:31.238 --> 00:02:35.835
I just wanna say grab me all of
the SVGs out of this folder, right?

40
00:02:35.835 --> 00:02:37.141
So what would that look like?

41
00:02:37.141 --> 00:02:42.126
So let's see, we could, let's go back
into index, it's a little playground, I like it.

42
00:02:42.126 --> 00:02:46.882
We could do import.meta.glob
which is just for

43
00:02:46.882 --> 00:02:50.829
us mentioned so it had to say Vite today.

44
00:02:50.829 --> 00:02:56.316
I don't get to say glob outside
loud enough so I'm pretty stoked

45
00:02:56.316 --> 00:03:01.613
about that we'll say dot logos and
you could say star dot SVG.

46
00:03:01.613 --> 00:03:06.555
If you wanted to also have it traverse
down, any subdirectory, you can do star,

47
00:03:06.555 --> 00:03:11.368
star, slash, star, which is, okay,
logos and all of its subdirectories.

48
00:03:11.368 --> 00:03:12.902
Keep going, right?

49
00:03:12.902 --> 00:03:14.669
Find me all of them.

50
00:03:14.669 --> 00:03:16.766
And let's go take a look.

51
00:03:16.766 --> 00:03:21.526
And let's say,
this is we know that import.

52
00:03:21.526 --> 00:03:25.990
Usually returns a promise, right?

53
00:03:25.990 --> 00:03:33.549
So, what we'll do, we'll just start with,
then console.log, right?

54
00:03:33.549 --> 00:03:35.971
Just to see what we get, right?

55
00:03:35.971 --> 00:03:40.002
And we'll go in there, and
you can kinda actually.

56
00:03:40.002 --> 00:03:44.422
In the index.js we kinda get to see it
which is under the hood it actually did in

57
00:03:44.422 --> 00:03:45.857
the translation level.

58
00:03:45.857 --> 00:03:50.880
Where it's like it found all the files and
gave us an object where

59
00:03:50.880 --> 00:03:56.946
it's all the file paths that matched and
then an import statement with that.

60
00:03:56.946 --> 00:04:01.350
Those are all promises that then
also need to resolve in this sense.

61
00:04:01.350 --> 00:04:02.556
But basically, we'll find all of them.

62
00:04:02.556 --> 00:04:06.002
So, if I add or remove a different SVG,

63
00:04:06.002 --> 00:04:10.289
I don't have to change my code anymore,
right.

64
00:04:10.289 --> 00:04:13.245
I can add new, if it's the carousel,
I can add new logos.

65
00:04:13.245 --> 00:04:15.007
They're all gonna get globbed in there.

66
00:04:15.007 --> 00:04:19.656
I don't have to sit there and okay,
we put the logo for this company in there.

67
00:04:19.656 --> 00:04:23.190
Now let me go also import that file and
add it to the array, so on and so

68
00:04:23.190 --> 00:04:24.066
forth, right?

69
00:04:24.066 --> 00:04:26.733
This will effectively do it for me.

70
00:04:26.733 --> 00:04:32.156
Now let's go ahead and let's just,
let's do something with this,

71
00:04:32.156 --> 00:04:35.253
just to kinda show the full piece of it.

72
00:04:35.253 --> 00:04:38.170
And so we'll say.

73
00:04:38.170 --> 00:04:39.665
I don't think I can call it module.

74
00:04:39.665 --> 00:04:44.986
I think in, yeah, I can't in common
JS because it's a reserved word,

75
00:04:44.986 --> 00:04:47.928
but if I'm in an ES module file, I can.

76
00:04:47.928 --> 00:04:53.155
So we'll say, so
the module is going, let's do that,

77
00:04:53.155 --> 00:05:00.069
console.log(module), and
we'll go into the console at this point.

78
00:05:00.069 --> 00:05:01.328
Because that's the entire object.

79
00:05:01.328 --> 00:05:06.058
So I can do the

80
00:05:14.066 --> 00:05:14.897
Path.

81
00:05:18.657 --> 00:05:20.264
Path module.

82
00:05:33.242 --> 00:05:36.622
Path and module.

83
00:05:36.622 --> 00:05:43.414
Angry at me, do I need to work now?

84
00:05:43.414 --> 00:05:45.618
And the parentheses in there?

85
00:05:45.618 --> 00:05:49.517
One more parenthesis, there we go.

86
00:05:49.517 --> 00:05:51.869
So now you can see it's going
through all of them and

87
00:05:51.869 --> 00:05:54.013
they are still promises in this case,
right?

88
00:05:54.013 --> 00:05:58.689
But what I could do at this point is I
could say I really only need the module I

89
00:05:58.689 --> 00:05:59.454
could say.

90
00:06:04.031 --> 00:06:04.901
Let's do.

91
00:06:12.738 --> 00:06:17.569
And we'll just do one more
console.log real quick just to

92
00:06:17.569 --> 00:06:22.607
kind of see as you can see as I
work through the object itself.

93
00:06:22.607 --> 00:06:26.376
Gotta call it, so they are lazily
loaded as you need them, right?

94
00:06:26.376 --> 00:06:30.626
So that's why it's not fetching
them all it's like as you go and

95
00:06:30.626 --> 00:06:35.443
refer to any given one of them, it will
then go ahead and begin to load it.

96
00:06:35.443 --> 00:06:37.862
So we've got all that in place.

97
00:06:37.862 --> 00:06:39.450
And if you do know that
you need all of them.

98
00:06:39.450 --> 00:06:41.927
You don't necessarily have
to go through all of this.

99
00:06:41.927 --> 00:06:45.245
You can for instance, so

100
00:06:45.245 --> 00:06:50.618
the image was what do we got in there now?

101
00:06:50.618 --> 00:06:53.034
So in module,
you've got the default, right?

102
00:06:53.034 --> 00:06:55.305
And because they're not named
in this case is just SVGs.

103
00:06:55.305 --> 00:06:58.717
Remember when I said before,

104
00:06:58.717 --> 00:07:03.355
it's to use export.const cuz I get it as

105
00:07:03.355 --> 00:07:08.549
a property otherwise it's called default.

106
00:07:08.549 --> 00:07:13.397
And those are going to be
the URLs that Vite uses, right?

107
00:07:13.397 --> 00:07:15.946
In this case,
it is mostly the same as the path to.

108
00:07:15.946 --> 00:07:21.579
But, what we can do is we
could say with that image,

109
00:07:21.579 --> 00:07:30.916
what we're gonna do is We'll say, again,

110
00:07:30.916 --> 00:07:35.862
if you have a framework, this becomes
a little bit easier, but we can do it.

111
00:07:35.862 --> 00:07:40.560
Create element, image,

112
00:07:40.560 --> 00:07:47.826
say image source, equal, call it URL.

113
00:07:47.826 --> 00:07:54.794
Image source is URL of that and
we'll say content equals.

114
00:07:59.783 --> 00:08:05.741
Now we should be able to do
content.appendChild with that image.

115
00:08:08.294 --> 00:08:11.569
I will explain to you I
hate this in a second.

116
00:08:11.569 --> 00:08:15.844
Okay, cool, now we've got a bunch of
images for reasons I don't understand.

117
00:08:15.844 --> 00:08:20.479
The Vite logo in all the repos is
phenomenally larger than the rest

118
00:08:20.479 --> 00:08:21.414
of the SVGs.

119
00:08:21.414 --> 00:08:23.437
One could find some tooling
that with resize it.

120
00:08:23.437 --> 00:08:26.356
But there are also SVGs you can
scale into whatever you want.

121
00:08:26.356 --> 00:08:28.110
So we could say something.

122
00:08:34.139 --> 00:08:39.417
Image height is, I don't know, 200?

123
00:08:39.417 --> 00:08:40.671
Now they're all the same.

124
00:08:40.671 --> 00:08:43.919
But anything we added,
if I can go ahead and,

125
00:08:43.919 --> 00:08:47.178
you know what,
let's take the Vite one out.

126
00:08:47.178 --> 00:08:49.193
I don't wanna deal with that anymore.

127
00:08:49.193 --> 00:08:49.789
It's gone,

128
00:08:49.789 --> 00:08:53.325
I didn't have to change any code,
whatever goes in that directory is there.

129
00:08:53.325 --> 00:08:56.517
This is great if I have a whole bunch
of fixture data that wanna run my test

130
00:08:56.517 --> 00:08:57.274
suite through.

131
00:08:57.274 --> 00:09:01.286
Cool as I add new fixture data, I don't
have to then pull it in, import it,

132
00:09:01.286 --> 00:09:02.323
put it in an array.

133
00:09:02.323 --> 00:09:04.303
It's gonna go in there,
it's gonna pull it all in.

134
00:09:04.303 --> 00:09:09.538
But who enjoyed watching me
unwrap all those promises?

135
00:09:09.538 --> 00:09:11.475
Who felt good about that?

136
00:09:11.475 --> 00:09:15.920
Everyone like watching that that
felt like I wanna do that later.

137
00:09:15.920 --> 00:09:17.593
Nobody wants to do that later.

138
00:09:17.593 --> 00:09:21.702
So, and
they know that because this is all fake.

139
00:09:21.702 --> 00:09:24.256
Vite is reading the file system and

140
00:09:24.256 --> 00:09:28.758
interpolating in those values
is not happening at runtime.

141
00:09:28.758 --> 00:09:31.450
And it gave me those promises
that I could pull in there and

142
00:09:31.450 --> 00:09:34.255
that's cool because then for
any given one of those files,

143
00:09:34.255 --> 00:09:36.743
I have to use it before it's
included in the bundle.

144
00:09:36.743 --> 00:09:42.077
So it's looking out for me, but I don't
wanna be looked out for I just wanna

145
00:09:42.077 --> 00:09:47.516
put images on the page without having
to dot then all over the place, right?

146
00:09:47.516 --> 00:09:51.526
And that is not an uncommon pattern,
right?

147
00:09:51.526 --> 00:09:57.893
So the other thing that we
could do is paste this in here.

148
00:09:57.893 --> 00:09:59.043
And we can say.

149
00:10:02.899 --> 00:10:06.398
Eager is true,
let's just console.log that.

150
00:10:11.222 --> 00:10:19.802
Now if you look, it has already resolved
all the promises for me, right?

151
00:10:19.802 --> 00:10:24.113
So now I don't have to go and resolve each
one is saying get get all of them and

152
00:10:24.113 --> 00:10:25.699
give me their actual data.

153
00:10:25.699 --> 00:10:29.586
If we use the JSON files, you wouldn't
have to, you'd get the default but

154
00:10:29.586 --> 00:10:31.637
you'd get all the properties as well.

155
00:10:31.637 --> 00:10:33.979
But at this point,
it will go read the directory and

156
00:10:33.979 --> 00:10:36.931
automatically just pull in all
the files immediately, right?

157
00:10:36.931 --> 00:10:38.745
Now there are all gonna be loaded in.

158
00:10:38.745 --> 00:10:44.604
I don't have to import each one or
resolve the promise, it's all good to go.

159
00:10:44.604 --> 00:10:46.565
And I can then render them on the page and

160
00:10:46.565 --> 00:10:49.432
again there are a bunch of is
it one that you use every day?

161
00:10:49.432 --> 00:10:53.410
No, is it one that when you use
it it saves you a ton of work?

162
00:10:53.410 --> 00:10:56.429
Yes, right and that's what we're here for

