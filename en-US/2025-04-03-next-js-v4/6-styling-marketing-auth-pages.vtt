WEBVTT

1
00:00:00.240 --> 00:00:02.814
&gt;&gt; Scott Moss: Now we're gonna
dive further into that and

2
00:00:02.814 --> 00:00:06.820
actually not just have null components
that return hello world and

3
00:00:06.820 --> 00:00:11.471
start building out some of these pages,
starting with our marketing pages or

4
00:00:11.471 --> 00:00:14.592
what I like to call
the signed-out experience.

5
00:00:14.592 --> 00:00:17.354
So anything that doesn't
require a user to be signed in,

6
00:00:17.354 --> 00:00:20.800
we're just gonna go ahead and
scaffold out all those pages.

7
00:00:20.800 --> 00:00:23.451
Don't worry, I'm not gonna sit here and

8
00:00:23.451 --> 00:00:26.267
make you hand-code a bunch of CSS and
divs.

9
00:00:26.267 --> 00:00:30.015
We'll just copy and paste those
because they're unrelated to Next.js.

10
00:00:30.015 --> 00:00:34.650
But I want you to go through the motions
of that and then we'll talk about

11
00:00:34.650 --> 00:00:40.289
prerendering and static pages, and what
does that mean, and what is Next.js doing,

12
00:00:40.289 --> 00:00:44.715
and optimizations there, and
all different types of things, so.

13
00:00:44.715 --> 00:00:49.895
But for now, let's start talking
about styling in Next.js.

14
00:00:49.895 --> 00:00:54.925
So TL DR, there are an infinite
amount of ways to style in Next.js,

15
00:00:54.925 --> 00:01:01.290
because Next.js is just React and React
has an infinite amount of ways to style.

16
00:01:01.290 --> 00:01:04.790
So there are a few ways,
there are CSS modules.

17
00:01:06.250 --> 00:01:10.507
I don't know who uses this anymore,
but you have that.

18
00:01:10.507 --> 00:01:12.103
So what is the CSS module?

19
00:01:12.103 --> 00:01:14.138
Well, it kinda looks like this.

20
00:01:14.138 --> 00:01:18.282
If you don't know what a CSS module is,
it's kinda in the name.

21
00:01:18.282 --> 00:01:19.954
It makes a module out of your CSS.

22
00:01:19.954 --> 00:01:24.513
But really the best part about CSS
modules is that it scopes your CSS so

23
00:01:24.513 --> 00:01:27.750
it doesn't have conflicts
in the global space.

24
00:01:27.750 --> 00:01:33.870
So it'll basically create random class
values for the styles that you make so

25
00:01:33.870 --> 00:01:38.879
you can apply them to your components so
they don't conflict.

26
00:01:38.879 --> 00:01:43.170
So it's scoping your CSS with
the components in which they belong to,

27
00:01:43.170 --> 00:01:46.735
so you don't have to have this
global styles, even though

28
00:01:46.735 --> 00:01:51.335
the components that those styles might
be for aren't even on the page yet.

29
00:01:51.335 --> 00:01:55.418
So this cleans up your CSS a lot, so
you're only loading in a CSS that's

30
00:01:55.418 --> 00:01:58.848
specific to the component and
not all the CSS at one time.

31
00:01:58.848 --> 00:02:00.820
So that's what it looks like.

32
00:02:02.000 --> 00:02:03.600
How do you do it?

33
00:02:03.600 --> 00:02:06.048
Pretty simple, you can go here,
anywhere you want.

34
00:02:06.048 --> 00:02:08.424
Let's say I wanna make one for
this new page.

35
00:02:08.424 --> 00:02:17.710
I wanna call it newissues.modules.css,
like this.

36
00:02:19.130 --> 00:02:24.760
And if you've never written CSS modules,
it's pretty much kinda like CSS.

37
00:02:24.760 --> 00:02:27.641
So for instance, I can give this,
I don't know, let's go in here.

38
00:02:27.641 --> 00:02:32.495
Let's say I wanna have a div in here and

39
00:02:32.495 --> 00:02:36.604
I have a button in here, hello.

40
00:02:36.604 --> 00:02:39.411
And I wanna add a class to this.

41
00:02:39.411 --> 00:02:43.785
So what I can do is I can go in here,
I can say, for

42
00:02:43.785 --> 00:02:48.276
my button,
I want a background color of red, right?

43
00:02:48.276 --> 00:02:49.547
So I have a button.

44
00:02:49.547 --> 00:02:52.903
And then what I can do is I
can import my CSS module.

45
00:02:52.903 --> 00:02:58.220
So I'll just call it styles,
and I can say from that.

46
00:02:58.220 --> 00:03:01.721
And then now, what I can do,
what does this do?

47
00:03:01.721 --> 00:03:03.583
TypeScript, okay.

48
00:03:03.583 --> 00:03:06.802
Now, what I can do is I can go in here and

49
00:03:06.802 --> 00:03:11.448
I can say className and
I can say {styles.button}.

50
00:03:11.448 --> 00:03:15.898
And that's typed, so
we get that free type stuff there.

51
00:03:15.898 --> 00:03:20.866
So now this is going to
be included in this page.

52
00:03:20.866 --> 00:03:23.306
So I would only see this styles
when I load this page up.

53
00:03:23.306 --> 00:03:28.474
So let's go check it out,
see what happened there.

54
00:03:28.474 --> 00:03:34.025
So that was issues/new, I think.

55
00:03:34.025 --> 00:03:35.910
Yeah, there we go, we got our red button.

56
00:03:37.190 --> 00:03:43.811
So that's CSS modules,
you can add as many as you want here.

57
00:03:43.811 --> 00:03:48.863
And the name of the class
is the name of the property

58
00:03:48.863 --> 00:03:52.962
on the object when you import it in, so.

59
00:03:52.962 --> 00:03:56.757
But if you were to go look at this in
the DOM, it's not gonna say button,

60
00:03:56.757 --> 00:03:59.310
this is how it creates
conflict-free styles.

61
00:03:59.310 --> 00:04:03.413
So you can see right here, it's this.

62
00:04:03.413 --> 00:04:07.489
It's the name of the file,
the name of the class, and

63
00:04:07.489 --> 00:04:13.572
then some random value to make sure it
doesn't conflict with global space CSS.

64
00:04:16.047 --> 00:04:17.238
And that's CSS modules.

65
00:04:17.238 --> 00:04:18.458
It's a good approach, it's great.

66
00:04:18.458 --> 00:04:19.127
It's been around for a while.

67
00:04:19.127 --> 00:04:24.652
You could do this in React,
but who's doing this?

68
00:04:24.652 --> 00:04:26.783
[LAUGH] Who's actually doing this?

69
00:04:26.783 --> 00:04:27.851
I don't know.

70
00:04:27.851 --> 00:04:31.292
You definitely don't wanna do
this if you're making a library.

71
00:04:31.292 --> 00:04:37.556
My goodness, if you make a library and
it has CSS, I'm never gonna use it.

72
00:04:37.556 --> 00:04:41.041
So don't ever do this,
this is only for application stuff.

73
00:04:41.041 --> 00:04:43.196
But it works and it works really great.

74
00:04:43.196 --> 00:04:46.806
And maybe you need to use this for
a specific reason, there you go.

75
00:04:46.806 --> 00:04:50.243
So that's CSS modules.

76
00:04:50.243 --> 00:04:52.244
You have global CSS, this is great.

77
00:04:52.244 --> 00:04:55.532
Global CSS is exactly what you
think it is, we already have some.

78
00:04:55.532 --> 00:05:00.350
This is where you would put global things.

79
00:05:00.350 --> 00:05:05.138
So perfect place for CSS variables,
perfect place to set up Tailwind.

80
00:05:05.138 --> 00:05:11.560
Perfect place to set up things that are
gonna work the same on every single page.

81
00:05:12.700 --> 00:05:14.457
So yeah, you just put that in there, and

82
00:05:14.457 --> 00:05:17.980
then the really good strategy is
import that in your RootLayout.

83
00:05:17.980 --> 00:05:21.823
So as long as you import that file,
you don't need a variable or a from,

84
00:05:21.823 --> 00:05:24.286
you just import it, it'll get included.

85
00:05:24.286 --> 00:05:28.396
So by putting this on the RootLayout,
that means it'll be on every single page

86
00:05:28.396 --> 00:05:31.340
because everything is
inherited from the RootLayout.

87
00:05:33.563 --> 00:05:38.752
So highly recommend putting
that type of stuff like fonts,

88
00:05:38.752 --> 00:05:45.412
themes, CSS variables, Tailwind things,
inside of a global style file.

89
00:05:45.412 --> 00:05:50.330
Don't abuse it, don't put all your
component stuff in a global CSS file.

90
00:05:50.330 --> 00:05:52.548
Do something else,
this is just for global stuff.

91
00:05:52.548 --> 00:05:56.918
So try to keep your global CSS small in my
opinion, and then use something else for

92
00:05:56.918 --> 00:06:00.276
everything else, and
we'll talk about the other options.

93
00:06:00.276 --> 00:06:05.340
But yeah,
you will most likely always use this.

94
00:06:05.340 --> 00:06:08.916
Especially if you're using Tailwind,
you will almost always use global CSS.

95
00:06:08.916 --> 00:06:10.848
You don't have to call it global,
that's not a special name,

96
00:06:10.848 --> 00:06:12.284
you can call it whatever
the hell you want.

97
00:06:12.284 --> 00:06:14.122
It doesn't have to be
in the app directory,

98
00:06:14.122 --> 00:06:15.640
it could be anywhere in your app.

99
00:06:15.640 --> 00:06:16.896
That's just a convention.

100
00:06:16.896 --> 00:06:22.820
Okay, Tailwind, yeah, just use this,
[LAUGH] just use Tailwind.

101
00:06:23.880 --> 00:06:27.118
We'll get into it when we
talk about rendering and

102
00:06:27.118 --> 00:06:30.908
stuff in a little bit, but
honestly, just use Tailwind.

103
00:06:30.908 --> 00:06:33.587
It's just gonna save you so much time.

104
00:06:35.433 --> 00:06:36.990
And it's really good for

105
00:06:36.990 --> 00:06:42.045
compatibility when it comes to a lot of
the server side stuff that React does now.

106
00:06:42.045 --> 00:06:45.410
Just being able to use classes that you
didn't have to make is just so easy.

107
00:06:45.410 --> 00:06:48.053
So use Tailwind or
something like Tailwind, I think,

108
00:06:48.053 --> 00:06:49.990
is probably the best approach.

109
00:06:49.990 --> 00:06:53.661
And this is coming from someone, and
I think I'm on tape saying this here,

110
00:06:53.661 --> 00:06:57.382
that I just don't like Tailwind, and
now I use Tailwind for everything.

111
00:06:57.382 --> 00:06:59.030
So yes.

112
00:06:59.030 --> 00:07:01.438
&gt;&gt; Speaker 2: What's
your opinion on Shadcn?

113
00:07:01.438 --> 00:07:02.854
&gt;&gt; Scott Moss: I think Shadcn is great.

114
00:07:02.854 --> 00:07:05.025
I think it's good, I think it looks good.

115
00:07:05.025 --> 00:07:07.242
I think I understand it now,
but I still don't like it.

116
00:07:07.242 --> 00:07:11.400
Is like I never understood why people
want to copy and paste components when

117
00:07:11.400 --> 00:07:15.732
the whole point of a component library
is that I don't have to maintain it.

118
00:07:15.732 --> 00:07:18.583
So if I have to copy and
paste it and now I'm maintaining it,

119
00:07:18.583 --> 00:07:19.924
then why am I doing this?

120
00:07:19.924 --> 00:07:24.875
But when I look at it from
the perspective of being able to, one,

121
00:07:24.875 --> 00:07:28.360
get things done very quickly,
and then two,

122
00:07:28.360 --> 00:07:32.684
less about maintaining but
more about customizing.

123
00:07:32.684 --> 00:07:38.480
It does feel better to go in and customize
a component that I have full access

124
00:07:38.480 --> 00:07:44.644
to versus hoping that that component
library author created the right props and

125
00:07:44.644 --> 00:07:49.071
the right witchcraft for
me to customize this dropdown.

126
00:07:49.071 --> 00:07:51.707
I think people try to do that with
headless components and stuff, but

127
00:07:51.707 --> 00:07:52.896
they never really feel right.

128
00:07:52.896 --> 00:07:55.979
The only way to really do it is just
have access to the whole component, and

129
00:07:55.979 --> 00:07:57.141
that's what Shadcn does.

130
00:07:57.141 --> 00:07:59.376
So I look at it from that angle,
it makes sense.

131
00:07:59.376 --> 00:08:03.321
If you look at it from the angle
of using AI to write code for you,

132
00:08:03.321 --> 00:08:07.498
Shadcn is the God, because AI can
just understand that so easily.

133
00:08:07.498 --> 00:08:10.844
So I don't know if the author
knew that ahead of time, but

134
00:08:10.844 --> 00:08:15.547
because of AI, it's probably one of
the best libraries, I think, out there.

135
00:08:15.547 --> 00:08:17.864
But personally, I don't like it.

136
00:08:17.864 --> 00:08:19.848
&gt;&gt; Speaker 2: What component
library do you use?

137
00:08:19.848 --> 00:08:22.048
&gt;&gt; Scott Moss: I don't,
I don't use a component library anymore.

138
00:08:22.048 --> 00:08:23.716
I just use Tailwind, that's it.

139
00:08:23.716 --> 00:08:29.318
And if I need some functionality,
I'll find something like this,

140
00:08:29.318 --> 00:08:33.743
like Ark that has absolutely
no styles whatsoever and

141
00:08:33.743 --> 00:08:36.806
it's just functional components.

142
00:08:36.806 --> 00:08:39.779
It's like, I need a carousel right quick.

143
00:08:39.779 --> 00:08:45.192
I'll just use this carousel thing,
and I'll use that.

144
00:08:45.192 --> 00:08:46.886
It's mostly headless.

145
00:08:46.886 --> 00:08:50.370
But even then, I almost don't use this.

146
00:08:50.370 --> 00:08:52.600
It's weird, I don't really use component.

147
00:08:52.600 --> 00:08:57.200
I'm in this phase where I just try to
keep everything super simple and basic.

148
00:08:57.200 --> 00:08:59.656
So I feel like I don't
need that stuff anymore.

149
00:08:59.656 --> 00:09:04.160
But if I had to, yeah, I would have
reached for something like this.

150
00:09:04.160 --> 00:09:08.240
But no component libraries,
I just use Tailwind.

151
00:09:08.240 --> 00:09:12.072
So [LAUGH] you wanna follow somebody
else when it comes down to this path.

152
00:09:12.072 --> 00:09:15.680
This is not the right way,
this is just after years of pain.

153
00:09:15.680 --> 00:09:21.740
So if you haven't had that pain,
don't do this [LAUGH], do something else.

154
00:09:23.070 --> 00:09:25.550
But I have to give props
where props are due.

155
00:09:25.550 --> 00:09:30.963
Shadcn, Tailwind, great tools,
changed the community.

156
00:09:30.963 --> 00:09:34.910
I mean, shit, v0 wouldn't exist without
Shadcn and Tailwind, let's be real.

157
00:09:34.910 --> 00:09:39.114
And v0's a pretty good product, so
yeah, it's doing something right.

158
00:09:39.114 --> 00:09:40.334
Yep?
&gt;&gt; Speaker 3: Do you have any thoughts on

159
00:09:40.334 --> 00:09:40.973
Material UI?

160
00:09:40.973 --> 00:09:42.271
Have you used it?

161
00:09:42.271 --> 00:09:45.106
&gt;&gt; Scott Moss: When Material UI
came out almost a decade ago, or

162
00:09:45.106 --> 00:09:47.812
however long it came out,
I was a big fan of it.

163
00:09:47.812 --> 00:09:52.562
Now, I hate it [LAUGH],
it's just so bloated.

164
00:09:52.562 --> 00:09:58.342
It's just so much like, I think, I don't
know, I gotta give credit to the designers

165
00:09:58.342 --> 00:10:03.402
at Google and Alphabet, because it's
a great product and I still go back to

166
00:10:03.402 --> 00:10:08.498
it sometimes to get certain color
palettes and fonts and things like that.

167
00:10:08.498 --> 00:10:11.783
But I'm just not a fan of it,
I'm kinda over it.

168
00:10:11.783 --> 00:10:14.288
It's too enterprise for me.

169
00:10:14.288 --> 00:10:18.113
And if you start changing it so
much, it's not even Material anymore,

170
00:10:18.113 --> 00:10:20.428
it's just like some Frankenstein thing.

171
00:10:20.428 --> 00:10:26.290
So unless you really love that aesthetic,
it's just too opinionated for me.

172
00:10:26.290 --> 00:10:32.871
I prefer something way less opinionated,
way simpler than Material.

173
00:10:32.871 --> 00:10:34.933
I think Material was created for

174
00:10:34.933 --> 00:10:38.529
people who wanted their apps
to look like Android apps.

175
00:10:38.529 --> 00:10:42.677
And I don't want all my apps to look like
Android apps, so [LAUGH] because of that,

176
00:10:42.677 --> 00:10:44.030
I don't really like it.

177
00:10:44.030 --> 00:10:45.701
Yeah, just use Tailwind.

178
00:10:45.701 --> 00:10:49.858
Tailwind 4 is out,
just trust me, it's good.

179
00:10:49.858 --> 00:10:52.365
I hated it, but it's really good.

180
00:10:52.365 --> 00:10:55.947
I have to swallow that pill,
it's really good.

181
00:10:55.947 --> 00:10:57.670
You also can do CSS and JavaScript.

182
00:10:57.670 --> 00:11:00.900
This is not unique to Next.js.

183
00:11:00.900 --> 00:11:04.726
You've heard of style components,
you've heard of, you know what,

184
00:11:04.726 --> 00:11:06.016
they have a whole list.

185
00:11:06.016 --> 00:11:07.169
Let me show you.

186
00:11:07.169 --> 00:11:09.092
They have a whole thing.

187
00:11:09.092 --> 00:11:11.075
You heard of all these things.

188
00:11:11.075 --> 00:11:13.840
These are all CSS and JS things.

189
00:11:13.840 --> 00:11:17.144
So there's some version of using CSS and
JavaScript.

190
00:11:17.144 --> 00:11:18.694
There's pros and cons to that.

191
00:11:18.694 --> 00:11:23.398
When you're just thinking of
purely single page application,

192
00:11:23.398 --> 00:11:26.284
this is probably not that big of a deal.

193
00:11:26.284 --> 00:11:31.186
Once you start doing React server
components and stuff, yeah, good luck,

194
00:11:31.186 --> 00:11:34.494
it's not really gonna work,
at least not easily.

195
00:11:34.494 --> 00:11:39.960
You're at the mercy of these
authors here of getting it right.

196
00:11:39.960 --> 00:11:44.632
So me personally, I would never use CSS
and JavaScript, I just would never do it.

197
00:11:44.632 --> 00:11:47.510
It's just not worth the limit,
is not worth the squeeze to me,

198
00:11:47.510 --> 00:11:48.446
I would never do it.

199
00:11:48.446 --> 00:11:51.801
I would never use a library that uses it.

200
00:11:51.801 --> 00:11:55.711
I mean, as soon as we talking
about something like this,

201
00:11:55.711 --> 00:11:57.836
I'm already not interested.

202
00:11:57.836 --> 00:12:00.310
I don't wanna have to do this,
I don't wanna have to maintain.

203
00:12:00.310 --> 00:12:04.773
I don't wanna have to build
the system that ensures my styles get

204
00:12:04.773 --> 00:12:07.014
put in the right place on my app.

205
00:12:07.014 --> 00:12:09.235
I just want that done for
me, why are we doing this?

206
00:12:09.235 --> 00:12:12.275
So I don't know why people
would have to do this.

207
00:12:12.275 --> 00:12:19.287
I think there's something that you have
to do because you are using one of these.

208
00:12:19.287 --> 00:12:22.194
Quick shoutout to something you've
probably never seen, styled-jsx.

209
00:12:22.194 --> 00:12:26.475
This is something that you
get to get in next year.

210
00:12:26.475 --> 00:12:32.171
So they're gonna show me, my God, they're
not even showing me an example of it.

211
00:12:32.171 --> 00:12:35.540
It basically is like,
let me just look it up.

212
00:12:35.540 --> 00:12:37.108
Cool, you get to do this.

213
00:12:37.108 --> 00:12:42.204
You get to add a style tag in your JSX,
&gt;&gt; Scott Moss: And

214
00:12:42.204 --> 00:12:45.369
then you get to use JSX but a CSS string.

215
00:12:45.369 --> 00:12:48.624
So if you fancy that, you can do that.

216
00:12:48.624 --> 00:12:51.561
I guess this is a better
version of CSS and JavaScript.

217
00:12:51.561 --> 00:12:58.246
But again, if I wanted to use Vue,
I'd use Vue [LAUGH].

218
00:12:58.246 --> 00:13:04.032
So I don't know, to me, I think this is
like, it's another tool in your tool belt.

219
00:13:04.032 --> 00:13:07.090
But if you're building
a proper application,

220
00:13:07.090 --> 00:13:10.385
you have access to the tooling and
the foundation.

221
00:13:10.385 --> 00:13:15.164
Yeah, I think this is something,
in fringe environments, I don't know,

222
00:13:15.164 --> 00:13:20.247
maybe using some email thing that allows
you to write React for email templates,

223
00:13:20.247 --> 00:13:24.898
but only on their app, and you have to
ship the whole template as a bundle.

224
00:13:24.898 --> 00:13:26.898
And you don't have access
to a build system, so

225
00:13:26.898 --> 00:13:28.599
you need to find a way to package styles.

226
00:13:28.599 --> 00:13:30.284
This might be a good alternative.

227
00:13:30.284 --> 00:13:35.167
I don't know, but if I have full control
over everything, I'm using Tailwind and

228
00:13:35.167 --> 00:13:37.347
global CSS and I'm calling it a day.

229
00:13:37.347 --> 00:13:39.715
It works for everything,
it works on every environment.

230
00:13:39.715 --> 00:13:43.723
It works on the edge, it works on
the server, it works on the client,

231
00:13:43.723 --> 00:13:46.503
it works on my computer,
it works everywhere.

232
00:13:46.503 --> 00:13:48.776
So I'm just gonna do that.

233
00:13:48.776 --> 00:13:51.026
But you got options.

234
00:13:53.176 --> 00:13:57.017
&gt;&gt; Scott Moss: And then, of course,
for all the OGs out there,

235
00:13:57.017 --> 00:13:59.658
we got those CSS preprocessors.

236
00:13:59.658 --> 00:14:02.572
Whoever here used Stylus before?

237
00:14:02.572 --> 00:14:04.142
Damn, am I that old?

238
00:14:04.142 --> 00:14:07.433
[LAUGH] I used to love Stylus.

239
00:14:07.433 --> 00:14:10.536
This would be my thing, I hated Sass.

240
00:14:10.536 --> 00:14:12.970
And what was the other one, Less?

241
00:14:12.970 --> 00:14:14.530
That one kinda died.

242
00:14:14.530 --> 00:14:16.001
Yeah, Stylus was the best one, man.

243
00:14:16.001 --> 00:14:19.604
Tj Holowaychuk went crazy on that library.

244
00:14:19.604 --> 00:14:22.410
But, yeah, you can use those too.

245
00:14:22.410 --> 00:14:24.946
You could even use them in
combination with CSS modules.

246
00:14:24.946 --> 00:14:29.739
But I feel like, what is that library?

247
00:14:29.739 --> 00:14:30.676
What is it called?

248
00:14:30.676 --> 00:14:35.185
Yeah, I feel like PostCSS kinda
just killed preprocessors anyway.

249
00:14:35.185 --> 00:14:39.300
So that's why I said, again,
why would you use this?

250
00:14:39.300 --> 00:14:45.202
If you're still using Sass today,
greenfield, it needs to be studied,

251
00:14:45.202 --> 00:14:50.642
[LAUGH] because I don't know why
you're opting in to use that today.

252
00:14:50.642 --> 00:14:56.642
Now, if that's legacy, pat on the back,
bravo, kudos, Nobel Peace Prize, I get it.

253
00:14:56.642 --> 00:14:58.882
But you choosing this?

254
00:14:58.882 --> 00:15:03.394
Come on, we need to have a conversation,
we need a podcast episode.

255
00:15:03.394 --> 00:15:08.931
So don't do that,
just use Tailwind, in my opinion.

256
00:15:08.931 --> 00:15:12.275
&gt;&gt; Speaker 4: What about defining
the style attribute, like on a div or

257
00:15:12.275 --> 00:15:13.048
something?

258
00:15:13.048 --> 00:15:18.423
Are you just treating that same way as the
styled-jsx kind of in terms of philosophy?

259
00:15:18.423 --> 00:15:21.360
&gt;&gt; Scott Moss: Yeah, I mean,
if you're putting a style on the div,

260
00:15:21.360 --> 00:15:24.641
that means you're doing it client side,
I would imagine.

261
00:15:24.641 --> 00:15:32.545
There's some state that you have client
side that you wanna bind to a style.

262
00:15:32.545 --> 00:15:36.529
In that case, I guess that's fine, cuz
you're already on the client anyway, so

263
00:15:36.529 --> 00:15:38.047
you're not being penalized.

264
00:15:38.047 --> 00:15:39.388
Yeah, I guess that's totally fine.

265
00:15:39.388 --> 00:15:45.158
But that wouldn't be my
main source of styling.

266
00:15:45.158 --> 00:15:50.058
That would be a very specific use case,
I need to change the positioning,

267
00:15:50.058 --> 00:15:54.959
the x- and y-coordinates of this
element based off of a scroll thing, so

268
00:15:54.959 --> 00:15:57.744
I'm gonna use a style tag, yeah, sure.

269
00:15:57.744 --> 00:16:00.785
I mean, because you essentially are doing
that when you're using animation

270
00:16:00.785 --> 00:16:02.434
libraries anyway, so that makes sense.

271
00:16:02.434 --> 00:16:08.054
But I'm not gonna draw boxes and change
fonts with that, that's not gonna happen.

272
00:16:08.054 --> 00:16:11.096
But if you're using React Native,
you have to do that,

273
00:16:11.096 --> 00:16:13.837
that's the only way to
really get it to work, so.

274
00:16:13.837 --> 00:16:18.857
But here, no, I'm just using Tailwind,
and I'd rather just

275
00:16:18.857 --> 00:16:24.258
use whatever Tailwind has for
extending their styles than to fiddle

276
00:16:24.258 --> 00:16:30.250
around with something that's not
gonna be compatible tomorrow, right?

277
00:16:30.250 --> 00:16:32.595
So I'd rather, how do they do it?

278
00:16:32.595 --> 00:16:33.531
Right here.

279
00:16:33.531 --> 00:16:37.508
So I'd rather do like this
inside of a CSS file and

280
00:16:37.508 --> 00:16:42.361
make custom classes and
custom Tailwind themes guaranteed

281
00:16:42.361 --> 00:16:46.551
to work no matter what than
the alternative [LAUGH].

282
00:16:46.551 --> 00:16:51.060
So yeah, because I can take these
styles and take it to any framework.

283
00:16:51.060 --> 00:16:53.775
It's gonna look exactly the same,
it's gonna do the exact same thing, so.

