WEBVTT

1
00:00:00.480 --> 00:00:02.766
&gt;&gt; Scott Moss: Testing,
anybody here use Vitest?

2
00:00:02.766 --> 00:00:05.016
Okay, cool,
we're just going to use Vitest.

3
00:00:05.016 --> 00:00:08.400
So there really isn't a lot of
Next js specific things in here.

4
00:00:08.400 --> 00:00:13.480
Most of it is like React specific because
again, when it comes to like rendering and

5
00:00:13.480 --> 00:00:16.952
things like APIs,
Next js just leans on the standards.

6
00:00:16.952 --> 00:00:18.714
It leans on Web standards for APIs,

7
00:00:18.714 --> 00:00:21.784
it leans on React very heavily
when it comes to rendering.

8
00:00:21.784 --> 00:00:25.510
So whatever you have to do in React,
whatever you have to do with testing any

9
00:00:25.510 --> 00:00:29.710
other API, it's pretty much the same thing
you have to do in here with some caveats,

10
00:00:29.710 --> 00:00:32.476
like small amounts of things
that are super simple.

11
00:00:32.476 --> 00:00:36.782
But we're going to use Vitest,
which is a really popular testing library,

12
00:00:36.782 --> 00:00:39.540
with some other helpers and
things like that.

13
00:00:39.540 --> 00:00:42.331
We're going to mock out
the DOM with JS DOM for

14
00:00:42.331 --> 00:00:46.844
simulating browser environments in
the server, which is pretty cool.

15
00:00:46.844 --> 00:00:49.632
I remember JS Dom was
like just coming out,

16
00:00:49.632 --> 00:00:52.420
I remember you had to run your JavaScript,

17
00:00:52.420 --> 00:00:57.214
your client test in the unit test in
the browser and see the output there.

18
00:00:57.214 --> 00:01:00.502
Like it's crazy that you could just do
that, you don't have to do that anymore.

19
00:01:00.502 --> 00:01:03.850
Or it's crazy that you used to have to do
that cuz this is just so much simpler.

20
00:01:05.150 --> 00:01:07.182
Yeah, I'm just walking through,
like how to set this up.

21
00:01:07.182 --> 00:01:13.230
You don't need to set this up because,
do I have this?

22
00:01:13.230 --> 00:01:18.078
Yeah, I already have it in the repo,
I believe, or I'm on the main branch, so

23
00:01:18.078 --> 00:01:21.971
of course I'm saying that,
but let me check out to, yes,

24
00:01:21.971 --> 00:01:24.256
it's not in the repo, I'm lying.

25
00:01:24.256 --> 00:01:27.980
Let me check out to,
where's the last one I left out on, 13?

26
00:01:29.080 --> 00:01:31.675
I think it was 13, let me see.

27
00:01:34.657 --> 00:01:40.880
No, I went to 15 because there was
one branch that didn't have any code.

28
00:01:40.880 --> 00:01:45.510
The edge config branch didn't have
any code, so I skipped it and

29
00:01:45.510 --> 00:01:49.472
checked out the 15 because
testing is branch 16.

30
00:01:49.472 --> 00:01:52.560
Okay, so let's be on 15 then, that works.

31
00:01:52.560 --> 00:01:56.112
Cool, so we can go ahead and set this up.

32
00:01:56.112 --> 00:01:58.904
What I meant to say is all your
dependencies are actually installed, but

33
00:01:58.904 --> 00:02:00.304
we do need to set all this stuff up.

34
00:02:00.304 --> 00:02:04.184
Again, this is not Next js specific, so we
can just mostly copy and paste this stuff.

35
00:02:04.184 --> 00:02:08.060
And I'll give antidotes on things
that are specific to Next js, but

36
00:02:08.060 --> 00:02:10.904
most of this you would
do on any React project.

37
00:02:10.904 --> 00:02:14.250
So there's nothing special
about Next js here.

38
00:02:14.250 --> 00:02:17.483
There's some stuff here, so
I'll talk about this, but everything

39
00:02:17.483 --> 00:02:20.818
else is just not specific to Next js,
so go ahead and do an NPM install.

40
00:02:20.818 --> 00:02:27.082
I'm gonna do this just in case,
whoa, whoa, whoa, relax.

41
00:02:27.082 --> 00:02:28.596
Install all those things.

42
00:02:34.572 --> 00:02:39.492
There's a lot of stuff here, so we got
a Vitest, we got the plugin for React,

43
00:02:39.492 --> 00:02:43.280
we got this thing right here
because we use relative paths or

44
00:02:43.280 --> 00:02:47.350
special paths with the @ sign,
this handles that.

45
00:02:47.350 --> 00:02:51.298
This testing library helps us with React
with as far as like rendering components

46
00:02:51.298 --> 00:02:52.870
and things like that.

47
00:02:52.870 --> 00:02:57.160
This testing library for the DOM pretty
much helps us with mocking out the DOM,

48
00:02:57.160 --> 00:03:00.085
which sits on top of this
other library called JS DOM,

49
00:03:00.085 --> 00:03:02.726
which is a virtual DOM
outside of the browser.

50
00:03:02.726 --> 00:03:04.480
So, it's a lot of stuff going on here.

51
00:03:05.980 --> 00:03:12.305
First thing we need to do is set
up our Vitest config.mjs, so

52
00:03:12.305 --> 00:03:19.156
I'll do that on the root,
I'll say the vitest.config.mjs.

53
00:03:19.156 --> 00:03:24.826
If you don't know what MJS is,
this is the syntax that Node uses for

54
00:03:24.826 --> 00:03:30.920
you to tell it that this file is
gonna use the new ES modules syntax.

55
00:03:30.920 --> 00:03:34.268
Because node by default
didn't support this,

56
00:03:34.268 --> 00:03:38.760
it supported CommonJS,
which is the require statement.

57
00:03:38.760 --> 00:03:43.413
So they're now converging and now the
browsers and Node both use this syntax,

58
00:03:43.413 --> 00:03:47.712
but to tell Node that you're doing that,
you have to use the MJS syntax or

59
00:03:47.712 --> 00:03:50.976
you have to specifically say
it in your package JSON.

60
00:03:50.976 --> 00:03:55.890
You have to put type module in here, but
so, MJS just means, hey, I'm using this.

61
00:03:55.890 --> 00:04:00.370
Otherwise you got to use require and
nobody wants to use require.

62
00:04:00.370 --> 00:04:04.484
So we're in the JSDOM environment,
we wanna test all these files, so

63
00:04:04.484 --> 00:04:07.594
anything that ends with .test or
.spec globals.

64
00:04:07.594 --> 00:04:11.349
This just means that if you've
ever written a test and

65
00:04:11.349 --> 00:04:16.386
you have to do the different suites
like describe it tests the expect.

66
00:04:16.386 --> 00:04:19.362
If you want all those things globally
without having to import them,

67
00:04:19.362 --> 00:04:20.474
you put global true.

68
00:04:20.474 --> 00:04:22.781
And then a setup file is just a file that,
hey,

69
00:04:22.781 --> 00:04:25.746
we need you to run this file
first before you do anything.

70
00:04:25.746 --> 00:04:29.039
And typically this is where you set up
your global mocks and stuff like that,

71
00:04:29.039 --> 00:04:30.444
which is what we're gonna do.

72
00:04:30.444 --> 00:04:33.938
We're gonna mock things out globally
because every test we run needs to have

73
00:04:33.938 --> 00:04:36.240
these mocks, so
why not just do them in one place?

74
00:04:38.060 --> 00:04:42.740
So for those mocks,
we'll grab this file right here,

75
00:04:42.740 --> 00:04:47.134
the vitest.setup.ts,
and I'll go through it.

76
00:04:47.134 --> 00:04:53.059
Vitest.setup.ts.

77
00:04:56.256 --> 00:04:57.478
So what am I doing here?

78
00:04:57.478 --> 00:05:01.108
Just mocking out some of the packages
that I run into issues with,

79
00:05:01.108 --> 00:05:03.495
specifically around like browser stuff.

80
00:05:03.495 --> 00:05:06.667
Cuz we're not gonna be running
this code in the browser,

81
00:05:06.667 --> 00:05:10.870
we're gonna be running this code in Node,
mocking out the DOM.

82
00:05:10.870 --> 00:05:15.507
But the DOM doesn't always have a lot
of this stuff as far as like stuff on

83
00:05:15.507 --> 00:05:20.456
the window, the browser stuff, so
mocking out all this navigation stuff,

84
00:05:20.456 --> 00:05:23.096
mocking out a lot of this image stuff.

85
00:05:23.096 --> 00:05:25.375
Next js does some pretty crazy
stuff with the image component,

86
00:05:25.375 --> 00:05:26.672
even though we're not using it.

87
00:05:26.672 --> 00:05:30.460
Same thing with the link component,
mocking that out to just create

88
00:05:30.460 --> 00:05:35.288
an anchor tag cuz this link component does
like prefetching and all this other stuff.

89
00:05:35.288 --> 00:05:39.792
So just mock it out, and those are the
ones that I typically have issues with.

90
00:05:39.792 --> 00:05:43.158
So it's pretty easy to mock
stuff out with Vitest,

91
00:05:43.158 --> 00:05:47.024
you just call the mock function
the name of the package.

92
00:05:47.024 --> 00:05:51.552
This returns a function,
in this function, you return an object.

93
00:05:51.552 --> 00:05:56.242
This object is keyed with the things
that are exported from here and

94
00:05:56.242 --> 00:06:00.088
then you can provide your
own implementation of it.

95
00:06:00.088 --> 00:06:02.342
So I'm saying, hey,
if somebody does use router,

96
00:06:02.342 --> 00:06:04.024
this is what I want you to give them.

97
00:06:04.024 --> 00:06:07.261
Somebody does use path, give them this,
somebody does use search params,

98
00:06:07.261 --> 00:06:08.930
give them this.

99
00:06:08.930 --> 00:06:10.125
Just mocking it out.

100
00:06:16.231 --> 00:06:20.254
&gt;&gt; Scott Moss: All righty, so
now we just want to set up our commands so

101
00:06:20.254 --> 00:06:23.514
we can just set up these
three testing ones.

102
00:06:23.514 --> 00:06:29.490
We're only gonna use one, but we're
gonna set these up in our package JSON.

103
00:06:29.490 --> 00:06:33.866
We got a test command,
we have a test UI command.

104
00:06:33.866 --> 00:06:37.725
I put this here because sometimes
you might have different

105
00:06:37.725 --> 00:06:40.795
tests like unit test and
then like UI test, and

106
00:06:40.795 --> 00:06:44.402
you can actually add like
different flags and stuff.

107
00:06:44.402 --> 00:06:47.536
And then coverage is just telling you how
much of the stuff you've actually tested.

