WEBVTT

1
00:00:00.400 --> 00:00:05.052
&gt;&gt; Scott Moss: So what we're gonna do is
start setting up some of these routes and

2
00:00:05.052 --> 00:00:09.788
things like that, so I'm gonna hop
into the next lesson that talks

3
00:00:09.788 --> 00:00:13.780
about those routes and
we're gonna start making them.

4
00:00:15.680 --> 00:00:19.737
So before we jump into it, let's just talk
a little bit about like static dynamic

5
00:00:19.737 --> 00:00:23.435
layouts, I promise we're gonna get
to the code, I know people are like,

6
00:00:23.435 --> 00:00:25.690
write some code, get this app done.

7
00:00:25.690 --> 00:00:28.601
Static routes are pretty much
what you think they are,

8
00:00:28.601 --> 00:00:32.398
these are routes that have static
information and they don't change,

9
00:00:32.398 --> 00:00:36.002
so Next JS by default will pre render
these and just send back HTML.

10
00:00:36.002 --> 00:00:40.802
So these are indexed static
websites that never change, and

11
00:00:40.802 --> 00:00:43.154
then we have dynamic routes,

12
00:00:43.154 --> 00:00:47.834
these are routes that typically
have parameters in them.

13
00:00:47.834 --> 00:00:51.692
So the way you can annotate
a dynamic route in Next JS

14
00:00:51.692 --> 00:00:55.820
is you can use inside the directory for
that route, and

15
00:00:55.820 --> 00:01:00.276
I'll just kind of show you you
can do something like this.

16
00:01:00.276 --> 00:01:05.518
So let's say I wanna make a route that's
dynamic, so inside of the app folder,

17
00:01:05.518 --> 00:01:10.057
let's say I have a folder called users and
I wanna show user profile,

18
00:01:10.057 --> 00:01:13.908
so I'll make a new folder in
here called id, like that.

19
00:01:13.908 --> 00:01:18.009
And then inside of there I have to put
a page, so this is a dynamic route, so

20
00:01:18.009 --> 00:01:21.317
this is gonna create a route for
user, that user's id, and

21
00:01:21.317 --> 00:01:26.022
then that's the route, whatever is on
this page, that's what's gonna render.

22
00:01:26.022 --> 00:01:31.333
So this is a dynamic route,
whereas a static route would

23
00:01:31.333 --> 00:01:36.305
just be like settings, and
then I would go in here and

24
00:01:36.305 --> 00:01:41.126
I would say page, and
now that's a static route.

25
00:01:41.126 --> 00:01:44.026
That's always gonna be settings,
it's always going to be static,

26
00:01:44.026 --> 00:01:47.476
at least as far as like what the route is
concerned about the data could be dynamic,

27
00:01:47.476 --> 00:01:50.160
we'll talk about that later,
but the page itself is static.

28
00:01:50.160 --> 00:01:54.985
So that's the difference dynamic static,
pretty simple, there's some more advanced

29
00:01:54.985 --> 00:01:58.391
things like catch all routes, so
you can do like the dot, dot,

30
00:01:58.391 --> 00:02:01.944
dot spread opera spread syntax
followed by the parameter name.

31
00:02:01.944 --> 00:02:06.768
And this will catch every route, so in
this example, if I have app docs with this

32
00:02:06.768 --> 00:02:10.800
spread of topic, that means I will
match any sub-path of docs, so

33
00:02:10.800 --> 00:02:15.876
it doesn't matter how nested it goes,
I'm just gonna match match that, right?

34
00:02:15.876 --> 00:02:19.923
If I want that to be inclusive and also
include or I guess it's either inclusive

35
00:02:19.923 --> 00:02:23.417
or optional, however you wanna
describe it, and also catch docs,

36
00:02:23.417 --> 00:02:27.364
then I can just put two brackets around
it and then It'll do the same thing.

37
00:02:27.364 --> 00:02:33.447
So this would catch this, but it will
also just catch Slash docs as well,

38
00:02:33.447 --> 00:02:38.835
this is really great for
like content type websites where I think

39
00:02:38.835 --> 00:02:44.176
Vercel's documentation website
does exactly this, right.

40
00:02:44.176 --> 00:02:49.028
If you kind of look at the structure of
their URLs, it's like slash Docs app,

41
00:02:49.028 --> 00:02:51.716
which I'm guessing it's app router, and

42
00:02:51.716 --> 00:02:55.280
then they have like all these
sub topics and stuff here.

43
00:02:55.280 --> 00:02:58.936
I would imagine they just probably put a
spread here that matches all this because

44
00:02:58.936 --> 00:03:01.515
each one of these doesn't
matter which topic I click on,

45
00:03:01.515 --> 00:03:04.640
it's the exact same page,
it's just different content, right.

46
00:03:04.640 --> 00:03:08.455
It's literally the same page, the layout,
everything's exactly the same, so

47
00:03:08.455 --> 00:03:13.050
I would imagine they just did a spread
operator there and then they dynamically.

48
00:03:13.050 --> 00:03:17.062
Well they definitely did pre rendering
with like get static params but

49
00:03:17.062 --> 00:03:21.006
the spread operator allows them to
just make one route in their app for

50
00:03:21.006 --> 00:03:24.298
all those pages versus having
to make multiple every.

51
00:03:24.298 --> 00:03:27.005
Instead of having to
manually make a route for

52
00:03:27.005 --> 00:03:31.992
each one of those topics inside their file
structure which will be bad, alrighty,

53
00:03:31.992 --> 00:03:36.409
layouts only thing you need to know
about layouts is that they're what you

54
00:03:36.409 --> 00:03:39.234
would have used layouts for
in React anyway.

55
00:03:39.234 --> 00:03:44.985
They're just built into Next js, they are
components that wrap pages and they never

56
00:03:44.985 --> 00:03:50.874
change, it's pretty simple if you want a
layout, in fact we already have one here.

57
00:03:50.874 --> 00:03:53.760
Its job is to in this case,
this is the root layout,

58
00:03:53.760 --> 00:03:57.184
so it's kind of like the index
HTML as well, its job is just to

59
00:03:57.184 --> 00:04:01.574
render its children which are it's routes,
that's all the layout does.

60
00:04:01.574 --> 00:04:06.006
And everything in here never re renders no
matter what, it's always gonna be here.

61
00:04:06.006 --> 00:04:08.704
Which is great because if you
change routes all the time and

62
00:04:08.704 --> 00:04:12.173
you had some navigation elements on
the page that you didn't want to change

63
00:04:12.173 --> 00:04:14.070
because they should just stay there.

64
00:04:14.070 --> 00:04:18.297
You wanna put that in a layout, if that
navigation item re rendered on every route

65
00:04:18.297 --> 00:04:20.162
change, that would be annoying and

66
00:04:20.162 --> 00:04:24.702
possibly a performance hit depending on
what you're doing that navigation layout.

67
00:04:24.702 --> 00:04:29.827
So you wanna put things like navigation
things like that inside of a layout,

68
00:04:29.827 --> 00:04:34.230
set up global styles like I'm doing here,
things like that, and

69
00:04:34.230 --> 00:04:37.890
then yeah,
you can have as many layouts as you want.

70
00:04:37.890 --> 00:04:39.947
You put a layout in a folder and

71
00:04:39.947 --> 00:04:45.626
then each route will look to its closest
ancestor to determine what layout to use,

72
00:04:45.626 --> 00:04:50.050
so in this case you have to have
a root layout for the whole app.

73
00:04:50.050 --> 00:04:53.919
And then if I wanted just the users for
folder to have a specific layout,

74
00:04:53.919 --> 00:04:58.304
I can put a layout on this folder, if I
wanted settings to have a specific layout,

75
00:04:58.304 --> 00:05:00.262
I can put a layout on this folder.

76
00:05:00.262 --> 00:05:03.310
And they also inherit so
the layout inside the settings, and

77
00:05:03.310 --> 00:05:07.313
the users will also be embedded inside
the layout in the root so they get nested,

78
00:05:07.313 --> 00:05:10.982
if you want the layout to change,
then swap out layout with a template.

79
00:05:10.982 --> 00:05:14.690
It's the exact same thing as a layout
except for it changes on every route, so

80
00:05:14.690 --> 00:05:18.512
this is great, if your layout has like
animations in it or client site state that

81
00:05:18.512 --> 00:05:22.284
has to be changed, then yeah, you
probably want to use a template instead.

82
00:05:22.284 --> 00:05:27.338
Last two things we got route groups,
route groups are cool

83
00:05:27.338 --> 00:05:31.773
because you can do stuff like this,
so let's say,

84
00:05:31.773 --> 00:05:37.540
let me just get rid of these right quick,
let's say I want to.

85
00:05:37.540 --> 00:05:40.197
I'm making an app and actually this is
what we're gonna do, we're gonna have

86
00:05:40.197 --> 00:05:42.764
an app where there's like a marketing
side which are like static pages.

87
00:05:42.764 --> 00:05:46.730
And then we're gonna have like a dashboard
side that's an actual app, I wanna

88
00:05:46.730 --> 00:05:51.102
separate them to have different layouts,
but I don't want the URL to reflect that.

89
00:05:51.102 --> 00:05:54.497
So for instance,
I don't want the URL to say marketing and

90
00:05:54.497 --> 00:05:56.576
then have all the marketing pages,

91
00:05:56.576 --> 00:06:01.150
that would be gross maybe I don't want
the URL to have app or dashboard in it.

92
00:06:01.150 --> 00:06:06.363
So what you can do is you can make a route
group, so if I make a new folder here,

93
00:06:06.363 --> 00:06:11.918
put it in parentheses and say marketing
and then I can do whatever I want in here.

94
00:06:11.918 --> 00:06:16.019
So in this case I'll make a new folder or
yeah, say a new folder and

95
00:06:16.019 --> 00:06:21.312
we'll call it like, this is the about
page, what this is gonna do is it's gonna

96
00:06:21.312 --> 00:06:26.432
create a route called slash about,
not marketing about but just slash about.

97
00:06:26.432 --> 00:06:30.950
But by putting it in this marketing group,
I can put a layout in here and

98
00:06:30.950 --> 00:06:35.010
now everything in this marketing
group would share this layout

99
00:06:35.010 --> 00:06:40.250
without the consequence of the URL
also having the word marketing in it.

100
00:06:40.250 --> 00:06:44.566
That's all this is, so it's just
like creating another sub route, but

101
00:06:44.566 --> 00:06:46.971
it doesn't actually show up in the URL,

102
00:06:46.971 --> 00:06:51.173
it's just for the case of I need these
routes to share a common layout.

103
00:06:51.173 --> 00:06:54.466
But I don't wanna change
the URL structure, so

104
00:06:54.466 --> 00:06:58.680
that's what a route group is,
it's really great for that.

105
00:06:58.680 --> 00:07:04.752
Does that layout also
inherit the root layout.

106
00:07:04.752 --> 00:07:09.977
Yeah, layouts always inherit
other layouts, there really is,

107
00:07:09.977 --> 00:07:14.510
the only way to get around that is,
so if you have.

108
00:07:14.510 --> 00:07:18.532
Right now I have a root layout,
I could get rid of this root layout and

109
00:07:18.532 --> 00:07:21.638
make another route group and
put a layout in there and

110
00:07:21.638 --> 00:07:25.078
then technically I don't have
one root layout anymore.

111
00:07:25.078 --> 00:07:30.062
Now I have in root layouts and depending
on what route I go to, it'll use that, but

112
00:07:30.062 --> 00:07:31.578
other than that, yeah,

113
00:07:31.578 --> 00:07:35.912
at some point it's always gonna
inherit from its nearest ancestor.

114
00:07:35.912 --> 00:07:37.328
So if you use the route groups,

115
00:07:37.328 --> 00:07:40.536
you don't need necessarily the root
layout in the app directory.

116
00:07:40.536 --> 00:07:44.442
Right, exactly, because right now
I don't have an index page, so

117
00:07:44.442 --> 00:07:47.296
I could make an index page
right here on the app.

118
00:07:47.296 --> 00:07:50.112
But because this is technically
not part of the URL,

119
00:07:50.112 --> 00:07:54.144
I could put the index page in here and
this is technically the index page of my

120
00:07:54.144 --> 00:07:57.272
website right now because this
does not exist in the URL.

121
00:07:57.272 --> 00:08:01.499
So it's still just slash, this is still
just slash, so in that case I could

122
00:08:01.499 --> 00:08:05.700
just put the layout in here and not
have it here and it would be just fine.

123
00:08:05.700 --> 00:08:09.111
But as soon as I try to go to,
if I had another route out here,

124
00:08:09.111 --> 00:08:12.113
it'd be like, wait,
I don't have a layout, and

125
00:08:12.113 --> 00:08:16.556
then it will break because the layout
would have been in a marketing group.

126
00:08:16.556 --> 00:08:20.406
And yeah, the last thing before we make
these routes is the link component,

127
00:08:20.406 --> 00:08:24.136
we'll use this one's pretty self
explanatory, don't use anchor tag,

128
00:08:24.136 --> 00:08:26.278
use link component, what does this do?

129
00:08:26.278 --> 00:08:29.480
Same thing as anchor tag,
except it prefetches and

130
00:08:29.480 --> 00:08:32.767
it does client side routing,
client side routing.

131
00:08:32.767 --> 00:08:36.960
If you've ever used any router framework
you've had something like this,

132
00:08:36.960 --> 00:08:41.163
same thing, it just does prefetching,
so use this, it comes from Next js.

