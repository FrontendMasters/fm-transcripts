WEBVTT

1
00:00:00.400 --> 00:00:03.576
&gt;&gt; Student: Could we have a kind
of middleware for server actions?

2
00:00:03.576 --> 00:00:08.367
It could do getCurrentUser and
return a standard error code so

3
00:00:08.367 --> 00:00:11.416
that we don't clutter our functions?

4
00:00:11.416 --> 00:00:12.197
&gt;&gt; Scott Moss: That's a great question.

5
00:00:12.197 --> 00:00:16.153
Because server actions are just functions,
you can just make a function for that and

6
00:00:16.153 --> 00:00:20.128
you can make a higher-order function that
works as middleware for your functions.

7
00:00:20.128 --> 00:00:25.082
You can use whatever pattern you want to
do that because they're just functions.

8
00:00:25.082 --> 00:00:28.222
There is nothing that
Next.js will need to do.

9
00:00:28.222 --> 00:00:31.502
So if you don't want to clutter your
code with the same logic, yeah,

10
00:00:31.502 --> 00:00:34.162
you can make a higher-order
function that does that and

11
00:00:34.162 --> 00:00:38.032
then calls your server action when it's
done, which is a great pattern, yeah.

12
00:00:38.032 --> 00:00:41.434
So yeah,
I decided to not do the delete stuff so

13
00:00:41.434 --> 00:00:44.151
we can get to more important things.

14
00:00:44.151 --> 00:00:48.730
But essentially the useTransition hook,
it's really simple.

15
00:00:48.730 --> 00:00:52.131
First of all, it has nothing to do
with Next.js, it is a react thing.

16
00:00:52.131 --> 00:00:55.169
So if you don't know more
about these new hooks, again,

17
00:00:55.169 --> 00:00:59.870
check out Brian Holt's course, he covers
this pretty well, I'm pretty sure he does.

18
00:00:59.870 --> 00:01:05.328
But essentially, the transition hook
allows us to wrap a server action,

19
00:01:05.328 --> 00:01:10.433
so in this case deleteIssue, and
we get access to the status of that,

20
00:01:10.433 --> 00:01:12.910
so whether or not it's pending.

21
00:01:12.910 --> 00:01:16.868
So this is great for showing a loader
while you're still deleting.

22
00:01:16.868 --> 00:01:20.443
It's pretty much the same thing we
did with the useActionState hook.

23
00:01:20.443 --> 00:01:26.678
But you don't need a form, you can just
do it, in this case, on a click, right?

24
00:01:26.678 --> 00:01:31.673
So on a click, I'm calling handleDelete
and doing the startTransition here.

25
00:01:31.673 --> 00:01:34.478
So essentially,
as you call startTransition, and

26
00:01:34.478 --> 00:01:37.616
the great thing about this is
that it won't affect the UI.

27
00:01:37.616 --> 00:01:41.184
So whatever you do in here
won't block the UI in any way.

28
00:01:41.184 --> 00:01:43.220
That's the whole point of it.

29
00:01:43.220 --> 00:01:46.756
So this is great for doing things
that have to happen on the server,

30
00:01:46.756 --> 00:01:49.535
cuz they won't affect
the actual user interface and

31
00:01:49.535 --> 00:01:53.163
slow things down, if you have
an animation or something like that.

32
00:01:53.163 --> 00:01:56.724
They just added support for
async callbacks in the startTransition,

33
00:01:56.724 --> 00:01:57.728
which is great.

34
00:01:57.728 --> 00:02:02.098
But yeah, if you are doing
something on a user interaction and

35
00:02:02.098 --> 00:02:05.711
that user interaction has
to call a server action,

36
00:02:05.711 --> 00:02:10.640
just do the useTransition hook,
do your logic, and you're done.

37
00:02:10.640 --> 00:02:12.290
&gt;&gt; Student: So you wouldn't use this for

38
00:02:12.290 --> 00:02:15.660
something that needs to
give the user UI feedback?

39
00:02:15.660 --> 00:02:20.791
&gt;&gt; Scott Moss: You wouldn't use this
to do this to give the user something.

40
00:02:20.791 --> 00:02:21.761
I mean, you can.

41
00:02:21.761 --> 00:02:23.108
If you were updating a state in here,

42
00:02:23.108 --> 00:02:24.894
there's nothing stopping
you from doing that.

43
00:02:24.894 --> 00:02:28.406
That's still gonna cause a re-render
if you wanna update a state.

44
00:02:28.406 --> 00:02:32.257
But in that case,
you don't even need to startTransition,

45
00:02:32.257 --> 00:02:37.030
just get rid of it and just call
deleteIssue directly in the handleDelete.

46
00:02:37.030 --> 00:02:38.244
&gt;&gt; Student: And that works,

47
00:02:38.244 --> 00:02:43.813
because this deleteIssue button is by
default a server component, right?

48
00:02:43.813 --> 00:02:45.243
&gt;&gt; Scott Moss: Yeah, it's a server action.

49
00:02:47.335 --> 00:02:50.367
&gt;&gt; Student: Well, but
it's not a client component, right?

50
00:02:50.367 --> 00:02:53.321
&gt;&gt; Scott Moss: Yeah, you can't use hooks
unless you are in a client component.

51
00:02:53.321 --> 00:02:56.269
So if you see a hook,
you're always in a client component.

52
00:02:56.269 --> 00:02:59.083
You just can't use hooks on a server-
&gt;&gt; Student: So you'd have to use

53
00:02:59.083 --> 00:03:04.008
transition here to call- No,
you don't have to.

54
00:03:04.008 --> 00:03:08.170
&gt;&gt; Scott Moss: You literally do not have
to use transition here to call await

55
00:03:08.170 --> 00:03:08.830
delete.

56
00:03:08.830 --> 00:03:13.740
It'll still call it, because essentially
this is just an HTTP request.

57
00:03:13.740 --> 00:03:14.484
&gt;&gt; Student: Right, right, right.

58
00:03:14.484 --> 00:03:15.487
&gt;&gt; Scott Moss: Yeah.
&gt;&gt; Student: Okay, yeah.

59
00:03:15.487 --> 00:03:18.613
&gt;&gt; Scott Moss: So the client component
doesn't know the difference,

60
00:03:18.613 --> 00:03:21.282
it doesn't know,
it's just an HTTP request.

61
00:03:21.282 --> 00:03:25.389
But if you don't want that request
interfering with what's happening

62
00:03:25.389 --> 00:03:30.327
on the page, it's literally the equivalent
of putting this in a useEffect, right?

63
00:03:30.327 --> 00:03:31.358
If you put this in a useEffect,

64
00:03:31.358 --> 00:03:33.516
it won't really interfere with
what's happening on the page.

65
00:03:33.516 --> 00:03:35.835
That's essentially what this is.

66
00:03:38.075 --> 00:03:41.225
&gt;&gt; Scott Moss: How many times have you
made a function in the useEffect and

67
00:03:41.225 --> 00:03:43.869
then called the function
in the same useEffect?

68
00:03:43.869 --> 00:03:45.622
That's how you'd have to
make an HTTP request,

69
00:03:45.622 --> 00:03:47.131
you'd have to make a useEffect, right?

70
00:03:47.131 --> 00:03:49.237
You'd have to do something like this.

71
00:03:49.237 --> 00:03:53.509
You have to say useEffect,
&gt;&gt; Scott Moss: And

72
00:03:53.509 --> 00:03:55.827
then you have to say do the thing.

73
00:03:58.546 --> 00:04:00.977
&gt;&gt; Scott Moss: And then underneath it,
you have to call doThing.

74
00:04:00.977 --> 00:04:04.824
Because you can't do asynchronous
things in a client component, so

75
00:04:04.824 --> 00:04:08.023
this is how you have to do
an asynchronous thing, right?

76
00:04:08.023 --> 00:04:08.752
This is how you would do the thing.

77
00:04:08.752 --> 00:04:14.504
That's gross, so instead, you can just
call useTransition and do it here.

