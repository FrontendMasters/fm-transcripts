WEBVTT

1
00:00:00.105 --> 00:00:00.820
&gt;&gt; Scott Moss: All right, so,

2
00:00:00.820 --> 00:00:03.544
what we're gonna do now is we're
gonna make all these routes.

3
00:00:03.544 --> 00:00:07.933
So, for our app we need, I mean,
I pretty much put it all here.

4
00:00:07.933 --> 00:00:09.967
We need a root layout,
if we don't have it already.

5
00:00:09.967 --> 00:00:15.651
We need an auth route group with a
/signin and /signup.

6
00:00:15.651 --> 00:00:21.625
We need a marketing group for
the marketing pages.

7
00:00:21.625 --> 00:00:24.042
We need a layout inside of there and
we need at least the index.

8
00:00:24.042 --> 00:00:26.902
There's a couple more pages if you
wanna make them, but they're so

9
00:00:26.902 --> 00:00:29.421
redundant I didn't feel like
putting you guys through it.

10
00:00:29.421 --> 00:00:31.183
We need a Dashboard route.

11
00:00:31.183 --> 00:00:36.092
It also has its own layup and
its... layup... layout and

12
00:00:36.092 --> 00:00:39.661
its own root page and then issues.

13
00:00:39.661 --> 00:00:43.381
We have one for new, and then we
have this dynamic issues with an id.

14
00:00:43.381 --> 00:00:46.397
So, looking at this,
go make all these routes.

15
00:00:46.397 --> 00:00:50.538
What you should do if you want this to
work, is when you go make these routes and

16
00:00:50.538 --> 00:00:53.166
we're gonna make it
together inside the pages.

17
00:00:53.166 --> 00:00:56.470
For each one of these routes, you have to
have a component that returns something.

18
00:00:56.470 --> 00:01:02.378
It can return null, but it has to return
something, and it'll break if you don't.

19
00:01:02.378 --> 00:01:08.168
So, let's make these routes.

20
00:01:08.168 --> 00:01:11.549
First thing is our root layout
that's already made, so,

21
00:01:11.549 --> 00:01:14.450
don't have to touch that,
gonna keep that here.

22
00:01:14.450 --> 00:01:16.244
The second thing is our marketing.

23
00:01:16.244 --> 00:01:19.695
Since I just made this,
I'm gonna go ahead and play off of it.

24
00:01:19.695 --> 00:01:24.540
I'll get rid of this about,
we have a layout here, so, I'm going to.

25
00:01:24.540 --> 00:01:26.058
Wait, does marketing have layout?

26
00:01:26.058 --> 00:01:27.130
Marketing does have layout.

27
00:01:27.130 --> 00:01:33.958
So, I'm just going to say,
so, we have our layout.

28
00:01:33.958 --> 00:01:41.270
And the one rule here is you have to
default export your pages with Next.js.

29
00:01:41.270 --> 00:01:44.155
So, you can do it like this,
you can do a function declaration.

30
00:01:44.155 --> 00:01:48.309
There's no wrong way to do it, but
it has to be a default export for pages.

31
00:01:48.309 --> 00:01:51.078
For components or anything else, it
doesn't matter, whatever you want to do.

32
00:01:51.078 --> 00:01:54.040
But for something that ends in a layout or
a page or

33
00:01:54.040 --> 00:01:58.892
one of those special files that I talked
about, you have to do a default export.

34
00:01:58.892 --> 00:02:05.081
That's how it knows what component you
want to be recognized as the route.

35
00:02:05.081 --> 00:02:09.050
So, in the case of a layout, like I said,
you can return whatever you want, but

36
00:02:09.050 --> 00:02:12.160
because it is a layout,
you just need to make sure you return.

37
00:02:12.160 --> 00:02:14.197
You render the children in here, right?

38
00:02:14.197 --> 00:02:17.758
So the children is gonna
be props that you get in.

39
00:02:17.758 --> 00:02:20.809
So, that's the hello world of a layout.

40
00:02:20.809 --> 00:02:22.113
It's just render the children.

41
00:02:26.174 --> 00:02:29.846
Cool, and then for the marketing page,
just going to hello World.

42
00:02:29.846 --> 00:02:32.134
For that, this is literally the roots.

43
00:02:32.134 --> 00:02:34.762
This is what you would see on our
landing page if you went here.

44
00:02:34.762 --> 00:02:37.519
So I'm just gonna call this home.

45
00:02:37.519 --> 00:02:44.620
Call whatever you want, and
I'll just render home like that.

46
00:02:46.866 --> 00:02:49.760
Pretty simple,
just got to return something here.

47
00:02:49.760 --> 00:02:52.710
So, if we were to start this and
try to go here,

48
00:02:52.710 --> 00:02:57.435
assuming the rest of the app isn't broken,
we should be able to see this.

49
00:02:57.435 --> 00:03:04.254
So, I'm going to run this.

50
00:03:04.254 --> 00:03:05.981
I keep wanting to run bun so bad.

51
00:03:08.669 --> 00:03:09.848
Start that.

52
00:03:13.213 --> 00:03:15.301
Cool, and I see home, right?

53
00:03:15.301 --> 00:03:17.984
So, I'm in my layout.

54
00:03:17.984 --> 00:03:22.056
My marketing routing group has a layout
and then that layout gets put in a layout.

55
00:03:22.056 --> 00:03:24.584
Okay, so we got that.

56
00:03:24.584 --> 00:03:27.722
We need to make a directory for Dashboard.

57
00:03:27.722 --> 00:03:30.687
I'm gonna say Dashboard like that.

58
00:03:30.687 --> 00:03:37.301
It also has a layout, so I'm gonna say,
layout.tsx and it also has a page.

59
00:03:37.301 --> 00:03:41.559
So I'm gonna say page.tsx like that.

60
00:03:43.348 --> 00:03:44.647
And same thing.

61
00:03:44.647 --> 00:03:49.404
I'll just say Dashboard layouts.

62
00:03:49.404 --> 00:03:52.691
You can call these whatever you want.

63
00:03:52.691 --> 00:03:57.172
I noticed that if you use function

64
00:03:57.172 --> 00:04:01.653
declaration in the error stack,

65
00:04:01.653 --> 00:04:06.302
you'll see the name of it show up.

66
00:04:06.302 --> 00:04:09.562
Whereas I think with this, I don't
know if it shows it in error stack, or

67
00:04:09.562 --> 00:04:11.600
maybe they fixed it,
but it didn't used to.

68
00:04:11.600 --> 00:04:15.455
But that might be the only
difference I can think of.

69
00:04:15.455 --> 00:04:18.372
Again, because it's a layout, we just
need to make sure we render our children.

70
00:04:18.372 --> 00:04:21.033
If you don't render the children here,

71
00:04:21.033 --> 00:04:24.092
what do you think you
would see in this layout?

72
00:04:24.092 --> 00:04:24.790
&gt;&gt; Student: Nothing.

73
00:04:24.790 --> 00:04:25.594
&gt;&gt; Scott Moss: Yeah, you see nothing.

74
00:04:25.594 --> 00:04:28.691
You just see the layout and not the route.

75
00:04:28.691 --> 00:04:33.220
So, the whole point of the layout is
just to pass through it's children,

76
00:04:33.220 --> 00:04:34.398
the active route.

77
00:04:34.398 --> 00:04:36.269
So, you have to do that.

78
00:04:38.604 --> 00:04:40.654
&gt;&gt; Scott Moss: And then for
the page, same thing.

79
00:04:53.592 --> 00:04:56.815
&gt;&gt; Scott Moss: Cool, so
now we got our Dashboard page.

80
00:04:56.815 --> 00:05:02.688
So this should allow me to go to
/dashboard and I should see Dashboard.

81
00:05:02.688 --> 00:05:03.601
Let's see.

82
00:05:05.674 --> 00:05:07.272
&gt;&gt; Scott Moss: Cool, see Dashboard.

83
00:05:13.533 --> 00:05:15.554
&gt;&gt; Scott Moss: All right,
what else do we need to make?

84
00:05:15.554 --> 00:05:19.456
We need to make the issue stuff.

85
00:05:19.456 --> 00:05:22.776
So the issues, one, we need to make
a page for /new and then a page for

86
00:05:22.776 --> 00:05:24.798
/id/edit and
then the auth stuff.

87
00:05:24.798 --> 00:05:26.902
So let's do that,
I'll start with the auth stuff.

88
00:05:26.902 --> 00:05:30.558
So, for auth stuff we need
a route group called auth,

89
00:05:30.558 --> 00:05:35.222
and then, inside of here we need
two folders, one called signup.

90
00:05:35.222 --> 00:05:37.767
So get in a habit of like if
you need to make a route,

91
00:05:37.767 --> 00:05:41.180
you have to make a folder and
then you have to make the file, right?

92
00:05:41.180 --> 00:05:43.774
Because in the pages directory,
it was different.

93
00:05:43.774 --> 00:05:47.664
The pages directory, the name of the file
was the route that you were gonna make.

94
00:05:47.664 --> 00:05:51.643
So, you didn't have to make a route.tsx or
whatever,

95
00:05:51.643 --> 00:05:54.700
you would do signup.tsx or signin.tsx.

96
00:05:54.700 --> 00:05:56.583
The name of the file would
have been the route.

97
00:05:56.583 --> 00:06:00.638
In the app directory, the name of
the route is the directory name, and

98
00:06:00.638 --> 00:06:02.163
the file is always route.

99
00:06:02.163 --> 00:06:05.926
It's always gonna be route.tsx,
no matter what the path is.

100
00:06:05.926 --> 00:06:08.437
The path is the directory name,
not the file name.

101
00:06:08.437 --> 00:06:12.219
So in this case, I have signup,
I need to also make sign in.

102
00:06:12.219 --> 00:06:14.221
So these are two different directories.

103
00:06:14.221 --> 00:06:17.610
They both have their own route or
I'm sorry, page.

104
00:06:25.800 --> 00:06:29.524
&gt;&gt; Scott Moss: And
I'll just say, const signup.

105
00:06:40.343 --> 00:06:45.159
&gt;&gt; Scott Moss: And just return literally
whatever you want cuz we're gonna make all

106
00:06:45.159 --> 00:06:46.330
this a reality.

107
00:06:46.330 --> 00:06:49.795
I'm just gonna copy that,
take it into sign in and

108
00:06:49.795 --> 00:06:52.112
just replace it all with sign in.

109
00:06:58.668 --> 00:07:04.428
&gt;&gt; Scott Moss: So
this should allow me to go to /.

110
00:07:04.428 --> 00:07:09.722
Is it /auth, /signin, or.

111
00:07:09.722 --> 00:07:10.983
&gt;&gt; Student: Just /signin?

112
00:07:10.983 --> 00:07:13.152
&gt;&gt; Scott Moss: Exactly,
just /signin.

113
00:07:13.152 --> 00:07:17.388
Because that's a route group,
it's not part of the URL, right?

114
00:07:17.388 --> 00:07:22.035
If I got rid of these parentheses,
it would be /auth/signin, and

115
00:07:22.035 --> 00:07:23.626
that's just tacky.

116
00:07:23.626 --> 00:07:28.746
So, don't do that.

117
00:07:28.746 --> 00:07:31.761
Use the route groups, be sophisticated.

118
00:07:31.761 --> 00:07:33.655
Elevate yourself and your team.

119
00:07:33.655 --> 00:07:39.989
[LAUGH] And then, issues, so, new folder.

120
00:07:39.989 --> 00:07:41.449
This one we do want in the URL.

121
00:07:41.449 --> 00:07:43.653
So I'm gonna say issues.

122
00:07:43.653 --> 00:07:47.656
And then, two new subfolders in here.

123
00:07:47.656 --> 00:07:54.906
One's gonna be called new, another one's
gonna be called id, so it's dynamic.

124
00:07:54.906 --> 00:07:58.110
And then inside the id one is
another folder called edit,

125
00:07:58.110 --> 00:08:00.662
cuz we wanna be able to
edit an issue by the id.

126
00:08:00.662 --> 00:08:04.238
And then inside of that
one we want a page.

127
00:08:04.238 --> 00:08:06.231
And then the same thing
inside of new we want a page.

128
00:08:09.794 --> 00:08:11.033
&gt;&gt; Scott Moss: Cool.

129
00:08:14.124 --> 00:08:15.900
&gt;&gt; Scott Moss: And
got to put some stuff in here.

130
00:08:15.900 --> 00:08:19.978
So, I'll just say, edit issue page.

131
00:08:33.756 --> 00:08:35.497
&gt;&gt; Scott Moss: Cool, got that.

132
00:08:35.497 --> 00:08:38.593
And then, same thing with the new page.

133
00:08:38.593 --> 00:08:44.174
Just gonna copy and paste, new issue page.

134
00:08:44.174 --> 00:08:44.994
New.

135
00:08:48.749 --> 00:08:54.912
&gt;&gt; Scott Moss: All right, and with that,
we should have all of our routes set up.

136
00:08:54.912 --> 00:08:58.606
Like I said, there are some more in
the marketing, I have FAQ pricing,

137
00:08:58.606 --> 00:08:59.479
all that stuff.

138
00:08:59.479 --> 00:09:02.891
You wanna set that up, you can set that
up, it's the same, it's all the same.

139
00:09:02.891 --> 00:09:05.630
I didn't wanna force you to do all that.

140
00:09:05.630 --> 00:09:11.391
So now, I should be able
to go to /issues/new.

141
00:09:11.391 --> 00:09:16.044
I see that, and then I should be
able to go to /issues/ literally

142
00:09:16.044 --> 00:09:19.799
anything cuz it's a dynamic variable,
/edit.

143
00:09:19.799 --> 00:09:21.626
Then I should see the edit issue page.

144
00:09:28.341 --> 00:09:31.855
&gt;&gt; Scott Moss: Cool, notice we didn't have
to stop our server to introduce any of

145
00:09:31.855 --> 00:09:35.371
those changes Next.js has a really
good build system that does hot

146
00:09:35.371 --> 00:09:36.580
module replacement.

147
00:09:36.580 --> 00:09:41.208
And all the things you've come to
expect from a decent tooling setup,

148
00:09:41.208 --> 00:09:44.196
you get that for free,
so it's pretty good.

149
00:09:44.196 --> 00:09:47.974
You don't really have to do stuff, even if
you change the environment variable file,

150
00:09:47.974 --> 00:09:49.643
it will recognize that and change it.

151
00:09:49.643 --> 00:09:52.593
So obviously there's more
to it than just this, but

152
00:09:52.593 --> 00:09:54.684
I would say this is like 80% of it.

153
00:09:54.684 --> 00:09:58.287
You can make a full app just by doing
more of what I just showed you.

154
00:09:58.287 --> 00:10:01.404
There's really advanced routing stuff,
but honestly,

155
00:10:01.404 --> 00:10:04.647
I've never used that stuff in production,
never had to, so

156
00:10:04.647 --> 00:10:08.161
I don't know what people are making
[LAUGH] that they needed that.

157
00:10:08.161 --> 00:10:13.095
But I'm guessing the Next.js team, the
Vercel team, added it for a reason, but I

158
00:10:13.095 --> 00:10:18.190
personally have never had to use anything
outside of what I'm showing you right now.

159
00:10:18.190 --> 00:10:24.811
Maybe I'm doing it wrong,
[LAUGH] but this is just my opinion.

160
00:10:24.811 --> 00:10:25.997
&gt;&gt; Scott Moss: Cool.

161
00:10:25.997 --> 00:10:30.840
&gt;&gt; Student: Someone said the red
is probably because you have.

162
00:10:30.840 --> 00:10:33.784
&gt;&gt; Student 2: It's TypeScripts.

163
00:10:33.784 --> 00:10:36.915
&gt;&gt; Student: The children has any type.

164
00:10:36.915 --> 00:10:38.294
&gt;&gt; Scott Moss: What red?

165
00:10:38.294 --> 00:10:39.956
This?
&gt;&gt; Student: And it needs a type.

166
00:10:39.956 --> 00:10:41.658
&gt;&gt; Scott Moss: Yeah,
this needs type, yeah,

167
00:10:41.658 --> 00:10:45.376
sorry, you're gonna learn from me
that I just ignore typescript errors.

168
00:10:45.376 --> 00:10:49.691
So, if you're wondering why there's a red
squiggly there and I'm not concerned,

169
00:10:49.691 --> 00:10:52.508
it's because I've just
ignored typescript errors.

170
00:10:52.508 --> 00:10:54.428
And it's just if I want,

171
00:10:54.428 --> 00:10:59.273
I mean, I guess I could add,
yeah, I forgot the one that they,

172
00:10:59.273 --> 00:11:04.136
I think it's component with children or
something like that.

173
00:11:04.136 --> 00:11:09.584
Component with,
I don't even know the type that you would

174
00:11:09.584 --> 00:11:16.822
even need from react that has the specific
props with children, there it is.

175
00:11:16.822 --> 00:11:21.682
Yeah, I could do that and then I could
just come here, and I could put it,

176
00:11:21.682 --> 00:11:24.098
I could put it here too, actually.

177
00:11:24.098 --> 00:11:28.598
Say props with children and then you
can add some props here, but, yeah,

178
00:11:28.598 --> 00:11:31.225
I just come to ignore typescript errors.

179
00:11:31.225 --> 00:11:36.050
But yeah, the red squiggly is just,
yeah, it's just typescript doing,

180
00:11:36.050 --> 00:11:40.818
it's doing its job, it's doing its job,
I don't really care about it.

181
00:11:40.818 --> 00:11:43.263
&gt;&gt; Student: App router
organization question.

182
00:11:43.263 --> 00:11:45.337
&gt;&gt; Scott Moss: Yeah.

183
00:11:45.337 --> 00:11:47.864
&gt;&gt; Student: Just in terms of directory
structure it's in your editor,

184
00:11:47.864 --> 00:11:49.026
it's all alphabetical and

185
00:11:49.026 --> 00:11:52.270
you've got actions API components
along with the different directories.

186
00:11:52.270 --> 00:11:57.179
Would it be possible to organize it so
that you just have your routes in one area

187
00:11:57.179 --> 00:12:01.423
and then your components folder,
for example, somewhere else?

188
00:12:01.423 --> 00:12:04.845
&gt;&gt; Scott Moss: Yep, you don't have to put
any of this stuff in the app directory,

189
00:12:04.845 --> 00:12:06.817
the app directory is just for routes.

190
00:12:06.817 --> 00:12:11.537
Yeah, so if you wanted to for instance,
you can see I have database here,

191
00:12:11.537 --> 00:12:13.151
lessons, Lib scripts.

192
00:12:13.151 --> 00:12:16.727
You could take the components and
just move them out of the app directory,

193
00:12:16.727 --> 00:12:17.656
which I used to do.

194
00:12:17.656 --> 00:12:21.796
It wasn't until two months ago that I
started putting in App Directory and

195
00:12:21.796 --> 00:12:24.997
I don't have a good reason,
it's just I got bored, so,

196
00:12:24.997 --> 00:12:27.097
[LAUGH] I moved it into App Directory.

197
00:12:27.097 --> 00:12:29.778
&gt;&gt; Student: Does the API
directory need to be in there?

198
00:12:29.778 --> 00:12:33.714
&gt;&gt; Scott Moss: The API directory does
need to be in the app directory, yeah,

199
00:12:33.714 --> 00:12:38.648
anything dealing with routes or pages
have to be in the app directory, yeah.

200
00:12:38.648 --> 00:12:43.753
&gt;&gt; Student: And the chat is split, some
people really care about the typescript.

201
00:12:43.753 --> 00:12:46.733
&gt;&gt; Scott Moss: Clearly, clearly, clearly.

202
00:12:46.733 --> 00:12:50.728
&gt;&gt; Student: Someone said, I thought
I was the only one who ignored types.

203
00:12:50.728 --> 00:12:54.830
&gt;&gt; Scott Moss: No, as you see, when we
deploy, I'm going to ignore all types,

204
00:12:54.830 --> 00:12:58.202
I'm gonna tell our build
system to ignore all types.

205
00:12:58.202 --> 00:13:04.284
It's just not worth it for me,
there are times where I do want the types,

206
00:13:04.284 --> 00:13:09.490
but then there are times where it's,
I didn't pass this in.

207
00:13:09.490 --> 00:13:11.637
React passed this in,
I don't really need to type this,

208
00:13:11.637 --> 00:13:14.202
I'm never gonna do anything with this,
I personally don't care.

209
00:13:14.202 --> 00:13:17.679
But if it's something that I'm making,
yeah, I wanna type that,

210
00:13:17.679 --> 00:13:20.914
I definitely wanna type that
because I'm responsible for it.

211
00:13:20.914 --> 00:13:24.246
But I'm betting that react's gonna do
its job in passing the children here and

212
00:13:24.246 --> 00:13:25.875
it's always gonna be the same shape.

213
00:13:25.875 --> 00:13:28.943
So, yeah,
I don't really care about typing that,

214
00:13:28.943 --> 00:13:33.294
I feel that should already be typed,
but that's neither here nor there.

215
00:13:33.294 --> 00:13:37.259
So, I get it, I think it's kind
of if you go to someone's house,

216
00:13:37.259 --> 00:13:39.937
it's what level of mess can they tolerate?

217
00:13:39.937 --> 00:13:44.430
Some people can only tolerate one sock on
the ground, some people can have rotten

218
00:13:44.430 --> 00:13:47.617
food on the ground, and
they can just function that way.

219
00:13:47.617 --> 00:13:52.307
So, it's just for me, it's somewhere in
the middle when it comes to typescript,

220
00:13:52.307 --> 00:13:55.992
I have my limits, but
when it comes to framework specific stuff,

221
00:13:55.992 --> 00:13:58.685
I care less,
it's not my thing, yeah, yeah.

222
00:13:58.685 --> 00:14:02.971
&gt;&gt; Student: Is there common
helper types from next for

223
00:14:02.971 --> 00:14:07.757
some of the more next
specific typing things.

224
00:14:07.757 --> 00:14:12.078
&gt;&gt; Scott Moss: Yeah, Next.js specific
typing stuff from my experience is usually

225
00:14:12.078 --> 00:14:17.005
server-side things, so next response,
next request, a lot of that stuff.

226
00:14:17.005 --> 00:14:22.088
Not really a lot on the client side
because as you'll see Next.js doesn't

227
00:14:22.088 --> 00:14:27.261
have any opinions on the client side
when it comes to actually writing code.

228
00:14:27.261 --> 00:14:32.222
A lot of the client-side stuff is these
file structures and opinions here, and

229
00:14:32.222 --> 00:14:36.530
then anything else is a thing that
you import that's already typed.

230
00:14:36.530 --> 00:14:40.095
So, they don't have specific things,
they just use react on the client,

231
00:14:40.095 --> 00:14:41.406
it's pretty thin, yeah.

232
00:14:41.406 --> 00:14:42.480
Yep, Mark.

233
00:14:42.480 --> 00:14:48.118
&gt;&gt; Mark: Does app marketing,
in parentheses, /layout.tsx,

234
00:14:48.118 --> 00:14:53.645
override the app/layout.tsx
or how do those interact?

235
00:14:53.645 --> 00:14:58.148
&gt;&gt; Scott Moss: I will visually
show you how that interacts, so

236
00:14:58.148 --> 00:15:05.593
I'm gonna go in here and let me just put
something in here that says marketing.

237
00:15:05.593 --> 00:15:11.164
And then I'll put the children in here and
then I will go into the root one and

238
00:15:11.164 --> 00:15:15.674
then I'll say root and
then I will go to marketing, I guess,

239
00:15:15.674 --> 00:15:18.516
yeah, I'll just go to the root page.

240
00:15:18.516 --> 00:15:23.834
Guess we're kind of already here, but so
you can see right here, here's the root

241
00:15:23.834 --> 00:15:29.017
layout, here's the marketing layout,
and then here is the actual homepage.

242
00:15:29.017 --> 00:15:32.548
So to answer your question,
how does it interfere?

243
00:15:32.548 --> 00:15:35.147
It doesn't, it just gets nested, so

244
00:15:35.147 --> 00:15:39.048
marketing layout becomes
a child of the root layout, and

245
00:15:39.048 --> 00:15:44.348
then the home is a child of the marketing
layout, so they just become nested.

246
00:15:44.348 --> 00:15:48.301
&gt;&gt; Student: So the root groups are still
nested inside its parent directory.

247
00:15:48.301 --> 00:15:52.913
&gt;&gt; Scott Moss: Yep, exactly,
it's always, there is no way of opting

248
00:15:52.913 --> 00:15:57.835
out of that other than, like,
trying to split instead of.

249
00:15:57.835 --> 00:16:02.787
The only way to really opt out of,
not being inherited is to,

250
00:16:02.787 --> 00:16:04.743
not have a root layout.

251
00:16:04.743 --> 00:16:09.968
And literally every single
route that you have is part

252
00:16:09.968 --> 00:16:15.670
of some route group, and
you don't have look right here.

253
00:16:15.670 --> 00:16:19.373
We don't have a page, well, actually,
I'll just show you, so look,

254
00:16:19.373 --> 00:16:21.700
we have a page here in the marketing,
right?

255
00:16:21.700 --> 00:16:24.021
What do you think will happen if
I just put a page on the root?

256
00:16:24.021 --> 00:16:28.567
[INAUDIBLE]
&gt;&gt; Scott Moss: Let's see,

257
00:16:28.567 --> 00:16:32.264
cuz now technically we have two of them,

258
00:16:32.264 --> 00:16:37.809
we have two home pages because
this does not exist in the URL,

259
00:16:37.809 --> 00:16:41.423
so this technically is our index page.

260
00:16:43.459 --> 00:16:46.621
&gt;&gt; Scott Moss: If I try to do this and
go home, look at that,

261
00:16:46.621 --> 00:16:50.819
it decided not to render this one and
it rendered this one.

262
00:16:50.819 --> 00:16:55.179
So, it's gonna take precedence
over whichever is the closest, so

263
00:16:55.179 --> 00:16:57.098
it rendered the root layout.

264
00:16:57.098 --> 00:17:00.529
It saw that there was an index page, so
it rendered that, this just got ignored,

265
00:17:00.529 --> 00:17:02.684
so this is a collision,
this is a route collision.

266
00:17:02.684 --> 00:17:06.068
So, when you start doing
these grouped routes,

267
00:17:06.068 --> 00:17:10.204
you wanna be careful not to
have these collisions, right?

268
00:17:10.204 --> 00:17:12.525
So how do you know if
you have a collision?

269
00:17:12.525 --> 00:17:17.257
Well, you have to think about what
the actual route that's gonna render

270
00:17:17.257 --> 00:17:19.971
when this page is routed
to in the browser.

271
00:17:19.971 --> 00:17:23.923
So, in this case the actual route is
just / cuz this doesn't exist, so

272
00:17:23.923 --> 00:17:27.213
if I had another page in here,
that would be a third conflict.

273
00:17:27.213 --> 00:17:30.897
Had a page inside of Dashboard, that would
not be a conflict because Dashboard is

274
00:17:30.897 --> 00:17:32.972
actually in the URL, so it'd be Dashboard.

275
00:17:32.972 --> 00:17:37.049
So, this is not a conflict because this
exists in the URL, so the only other

276
00:17:37.049 --> 00:17:41.549
potential conflict could be in here, so
you wanna make sure you account for that.

277
00:17:41.549 --> 00:17:47.046
But if I were to put every single
potential route in its own route group,

278
00:17:47.046 --> 00:17:50.252
if I put Dashboard in its own route group,

279
00:17:50.252 --> 00:17:55.866
I put issues in its own route group,
I wouldn't need this root layout.

280
00:17:55.866 --> 00:18:00.627
The route groups would have their own root
layouts, but then you'd be writing all

281
00:18:00.627 --> 00:18:04.840
this global stuff all over again
every single time, which is annoying.

282
00:18:04.840 --> 00:18:09.174
So, I think you should
always have at least a root

283
00:18:09.174 --> 00:18:12.145
layout that reflects both your.

284
00:18:12.145 --> 00:18:14.976
If you are making an app that
does marketing and an actual app,

285
00:18:14.976 --> 00:18:17.378
just have a root layout
that's just bare minimums.

286
00:18:17.378 --> 00:18:21.501
Hey, it doesn't matter if you're on
the signed-out experience or the sign in

287
00:18:21.501 --> 00:18:25.886
experience, they're all gonna use this
title or this font or something like that.

288
00:18:25.886 --> 00:18:30.560
And then from there you break it down to
the specific layouts per either route

289
00:18:30.560 --> 00:18:32.983
group or route path, like Dashboard.

