WEBVTT

1
00:00:00.000 --> 00:00:03.935
[MUSIC]

2
00:00:03.935 --> 00:00:05.590
&gt;&gt; Kyle: All that was
a long preamble to say.

3
00:00:05.590 --> 00:00:08.966
We wanna attach click
handlers to these two

4
00:00:08.966 --> 00:00:12.200
links.
&gt;&gt; Kyle: And

5
00:00:12.200 --> 00:00:17.255
there's couple of different
ways that we can do that, but

6
00:00:17.255 --> 00:00:23.032
the easiest is for me to say- you'll
notice that there is a control

7
00:00:23.032 --> 00:00:28.010
a js-controls wrapper div
around the two header links.

8
00:00:29.580 --> 00:00:33.890
So if I were to find
an element by attribute, and

9
00:00:33.890 --> 00:00:37.110
this is the syntax you use for
finding things by attribute.

10
00:00:37.110 --> 00:00:44.150
We put brackets in, rel=js-controls.

11
00:00:44.150 --> 00:00:47.040
What that means is go find
any element in the page

12
00:00:47.040 --> 00:00:50.050
that has a rel attribute
whose value is js controls.

13
00:00:52.120 --> 00:00:57.745
So I'm saying here go
find one of those and

14
00:00:57.745 --> 00:01:04.390
get me-
&gt;&gt; Kyle: The child element,

15
00:01:04.390 --> 00:01:12.098
js-register.
&gt;&gt; Kyle: It's

16
00:01:12.098 --> 00:01:14.390
a question about rels having
more than one element.

17
00:01:14.390 --> 00:01:19.000
Yeah, as you'll notice here in my HTML,
I've got multiple rel attributes here.

18
00:01:20.530 --> 00:01:24.600
And I only care about one of them,
it's the js-register.

19
00:01:24.600 --> 00:01:27.720
All right, so
now I wanna say a child element

20
00:01:27.720 --> 00:01:32.430
where the rel attribute has js control or
js registers somewhere in it.

21
00:01:32.430 --> 00:01:35.207
So that is almost the same,

22
00:01:39.165 --> 00:01:43.390
&gt;&gt; Kyle: Except when you * = js-register,

23
00:01:43.390 --> 00:01:48.310
that's one way of me getting at that link.

24
00:01:49.320 --> 00:01:53.981
You also might note that if I make js
register totally unique,then I don't even

25
00:01:53.981 --> 00:02:02.181
really need this part.
&gt;&gt; Kyle: And

26
00:02:02.181 --> 00:02:06.179
if I want both of these links to
be attached with the same handler,

27
00:02:06.179 --> 00:02:08.810
which I do, I can use the compound syntax.

28
00:02:08.810 --> 00:02:13.325
I can do a comma here and

29
00:02:13.325 --> 00:02:18.830
say, rel*= js-login.

30
00:02:18.830 --> 00:02:22.443
So here I'm saying go get me
an element that has js register

31
00:02:22.443 --> 00:02:25.172
as its rel attribute and
another one that has

32
00:02:25.172 --> 00:02:30.048
js login in its rel attribute.
&gt;&gt; Kyle: I know in my page

33
00:02:30.048 --> 00:02:32.350
there's only gonna be
one of each of those, so

34
00:02:32.350 --> 00:02:35.199
I know I now have a collection
of only those two elements.

35
00:02:36.410 --> 00:02:41.500
There's literally a half dozen other ways
that I can write that same line of code.

36
00:02:41.500 --> 00:02:46.300
You also should have been provided
in addition to the js org,

37
00:02:46.300 --> 00:02:48.730
you would have gotten the js
org solutions folder.

38
00:02:50.260 --> 00:02:54.370
And you'll notice in that js org solutions
folder I have broken down tasks one, two,

39
00:02:54.370 --> 00:02:55.550
three, and four.

40
00:02:55.550 --> 00:03:00.090
Those mapped to the high level task
that we're doing in our read me.

41
00:03:00.090 --> 00:03:04.620
So task one is the completed
form of this task.

42
00:03:04.620 --> 00:03:07.610
Task two is the completed form
of task two and so forth.

43
00:03:07.610 --> 00:03:12.665
So if I took a quick little cheat
peek at the solution file for

44
00:03:12.665 --> 00:03:18.590
header.js.

45
00:03:18.590 --> 00:03:22.530
This is another way of doing it, which is

46
00:03:22.530 --> 00:03:27.200
I'm going to attach not even to the
controls but to the header element itself.

47
00:03:30.080 --> 00:03:37.530
You notice in my index HTML, I also
have an element here called js-header.

48
00:03:37.530 --> 00:03:41.840
And there's a thing called event bubbling,
which means if I click on something and

49
00:03:41.840 --> 00:03:43.220
I don't have a handler on that,

50
00:03:43.220 --> 00:03:48.110
the bubble will make that event fire
on any of its parent elements, too.

51
00:03:48.110 --> 00:03:52.650
So I could take advantage of attaching
a click handler to the header element, and

52
00:03:52.650 --> 00:03:57.690
these link clicks will just bubble up for
me, which is nice and convenient.

53
00:03:57.690 --> 00:04:00.830
So that's actually the way I'm
going to prefer to do this.

54
00:04:00.830 --> 00:04:04.680
But like I said, there's like a dozen
other ways that you could do it.

55
00:04:04.680 --> 00:04:05.450
&gt;&gt; Speaker 2: Did you cover that?

56
00:04:05.450 --> 00:04:08.251
What does that star mean?
&gt;&gt; Kyle: Star means find it anywhere

57
00:04:08.251 --> 00:04:08.757
in the value,

58
00:04:08.757 --> 00:04:15.719
if you're gonna have multiple values.
&gt;&gt; Kyle: So

59
00:04:15.719 --> 00:04:18.670
I'm instead going to attach
to the header element.

60
00:04:18.670 --> 00:04:24.310
I'm going to attach a click
handler on click, and

61
00:04:24.310 --> 00:04:31.940
I want to limit my clicks to only
ones that were on those js elements.

62
00:04:31.940 --> 00:04:39.350
So if we come back to our index HTML, I
wanna limit it to js register or js login.

63
00:04:39.350 --> 00:04:42.704
There is a couple different
ways of going about that,

64
00:04:42.704 --> 00:04:46.885
but the easiest way to go about that
is to give it a string that says.

65
00:04:58.024 --> 00:04:59.534
&gt;&gt; Kyle: So it just needs to be one of

66
00:04:59.534 --> 00:05:06.366
the things that has a js- in it.
&gt;&gt; Kyle: And

67
00:05:06.366 --> 00:05:10.970
actually I'm going to slightly
switch from my solution file.

68
00:05:10.970 --> 00:05:13.634
I'm gonna go back to using
controls rather than header here.

69
00:05:23.700 --> 00:05:25.504
&gt;&gt; Kyle: Finally, we give it a click

70
00:05:25.504 --> 00:05:34.648
handler.
&gt;&gt; Kyle: So,

71
00:05:34.648 --> 00:05:38.428
what we know inside to this function
is that if we get this function called,

72
00:05:38.428 --> 00:05:41.968
we know that one of our two links was
clicked, which is what we wanted,

73
00:05:41.968 --> 00:05:44.849
we wanna make sure that one of
our two things was clicked.

74
00:05:54.943 --> 00:05:56.577
&gt;&gt; Kyle: Now, in terms of event

75
00:05:56.577 --> 00:05:59.060
management with jQuery.

76
00:05:59.060 --> 00:06:02.540
You've probably, if you've had any
experience with jQuery before or you or

77
00:06:02.540 --> 00:06:05.210
you've read Stack Overflow posts,
you've probably seen people

78
00:06:05.210 --> 00:06:09.230
do things like return false,
which we don't want to do here.

79
00:06:09.230 --> 00:06:13.440
So there's another way of managing
this event so that we handle it and

80
00:06:13.440 --> 00:06:15.950
it doesn't bubble anywhere
do anything else.

81
00:06:15.950 --> 00:06:22.710
And that's to call evt.preventDefault,

82
00:06:22.710 --> 00:06:27.278
evt.stopPropagation, and

83
00:06:27.278 --> 00:06:32.949
evt.stopImmediatePropagation.

84
00:06:38.063 --> 00:06:40.179
&gt;&gt; Kyle: So that just simply means
that we're handling the event,

85
00:06:40.179 --> 00:06:42.826
we don't want it to bubble anywhere else,
we're gonna take care of it.

