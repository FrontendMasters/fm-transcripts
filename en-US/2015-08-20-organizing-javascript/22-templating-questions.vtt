WEBVTT

1
00:00:00.008 --> 00:00:05.100
&gt;&gt; Student: Quick question.

2
00:00:05.100 --> 00:00:06.280
&gt;&gt; Kyle Simpson: Yes.

3
00:00:06.280 --> 00:00:09.952
&gt;&gt; Student: Is there a way that I can tell
the watch to ignore certain file name?

4
00:00:09.952 --> 00:00:12.578
&gt;&gt; Kyle Simpson: Yeah.
If you look at the documentation for

5
00:00:12.578 --> 00:00:18.069
the watch module, there's all kinds of
special configuration filters and stuff.

6
00:00:18.069 --> 00:00:18.878
&gt;&gt; Student: Read special file.

7
00:00:18.878 --> 00:00:20.006
&gt;&gt; Kyle Simpson: Yeah.

8
00:00:26.416 --> 00:00:29.764
&gt;&gt; Kyle Simpson: I don't see any other
questions a couple people just mentioning

9
00:00:29.764 --> 00:00:34.460
that they do or don't like certain things
about the templates, but all right.

10
00:00:34.460 --> 00:00:37.270
So the next thing [COUGH] that we
wanna talk about that's how I'm

11
00:00:37.270 --> 00:00:38.600
reusing my template engine.

12
00:00:38.600 --> 00:00:41.470
So I'm doing my rendering
exactly the same in both places.

13
00:00:41.470 --> 00:00:43.300
And actually let me
just prove that to you.

14
00:00:43.300 --> 00:00:45.650
So here I show you how I'm
doing it on the server.

15
00:00:45.650 --> 00:00:49.340
I'm calling that View.getPageHTML.

16
00:00:49.340 --> 00:00:53.669
If I open up web &gt; JS &gt; View.js,

17
00:00:53.669 --> 00:00:57.480
now let's look at pages.

18
00:00:57.480 --> 00:00:58.820
Pages as my page controller,

19
00:00:58.820 --> 00:01:02.180
if I look at that this is the thing
that's running in the browser.

20
00:01:02.180 --> 00:01:07.770
And whenever something is asked for
like if we try to load up a, so

21
00:01:07.770 --> 00:01:13.787
this one is my click handler for
links that I basically wanna ajaxify.

22
00:01:13.787 --> 00:01:18.870
I'm listening for any links that
aren't marked as being a ignorable.

23
00:01:18.870 --> 00:01:23.760
And if I recognize the href of
that tag as being an internal

24
00:01:23.760 --> 00:01:28.631
page that I have a template for,
then I simply call this gotoPage

25
00:01:28.631 --> 00:01:33.970
function which not terribly surprisingly

26
00:01:33.970 --> 00:01:39.050
is going to call view.getPageContentHTML,
okay?

27
00:01:39.050 --> 00:01:40.922
So it's the exact same path and

28
00:01:40.922 --> 00:01:45.535
this code ends up running exactly
identically between server and browser.

29
00:01:51.501 --> 00:01:57.480
&gt;&gt; Kyle Simpson: Okay, let's see,
would you say react would be good here.

30
00:01:59.260 --> 00:02:05.585
React is awesome, but I think it's a much
bigger hammer than most people need.

31
00:02:05.585 --> 00:02:07.306
That's what I'll say.

32
00:02:07.306 --> 00:02:07.995
Okay.

33
00:02:11.584 --> 00:02:12.394
&gt;&gt; Kyle Simpson: By the way,

34
00:02:12.394 --> 00:02:17.032
on that topic of like what are other
potential options or whatever.

35
00:02:17.032 --> 00:02:19.528
I don't know how many of you
here in person or online or

36
00:02:19.528 --> 00:02:21.640
listening to the video
have heard of Ember.

37
00:02:21.640 --> 00:02:27.120
But it's one of the big three,

38
00:02:27.120 --> 00:02:30.150
if you also there's ember
there's angular there's reacts.

39
00:02:30.150 --> 00:02:34.830
It's one of the big three at the moment
in that whole like framework rendering

40
00:02:34.830 --> 00:02:36.650
the sort of thing.

41
00:02:36.650 --> 00:02:38.200
Now I'm not using Ember.

42
00:02:38.200 --> 00:02:39.930
I'm not a Ember user.

43
00:02:39.930 --> 00:02:41.850
I know quite a few people who are.

44
00:02:41.850 --> 00:02:43.010
They're really smart people.

45
00:02:43.010 --> 00:02:44.450
So I am not in any way shape or

46
00:02:44.450 --> 00:02:48.260
form suggesting that Ember's
bad because I don't use it.

47
00:02:48.260 --> 00:02:50.520
It's way overkill for what I need.

48
00:02:50.520 --> 00:02:52.090
And that's why I don't use it.

49
00:02:52.090 --> 00:02:54.990
I always start with the simple
stuff first rather than

50
00:02:54.990 --> 00:02:58.190
pull in a huge framework that
is mostly what I don't need.

51
00:02:58.190 --> 00:03:02.350
But there's one particular point
I wanna bring up about Ember, and

52
00:03:02.350 --> 00:03:07.470
this is a praise of them more than,
it's not a criticism at all.

53
00:03:07.470 --> 00:03:11.290
Just recently Ember released
a whole series of new stuff.

54
00:03:11.290 --> 00:03:13.570
And if you have kept up at all or

55
00:03:13.570 --> 00:03:17.080
read anything about it,
they released a new thing called Glimmer,

56
00:03:17.080 --> 00:03:20.020
which is a new way of doing their
renderings and stuff like that.

57
00:03:20.020 --> 00:03:23.610
Where they're looking at their template
partials they call them different things

58
00:03:23.610 --> 00:03:26.410
but if they're essentially
template partials and figuring out

59
00:03:26.410 --> 00:03:30.730
the minimum template partial that needs
to be rendered and then redoing it.

60
00:03:30.730 --> 00:03:35.550
That's really, really cool stuff and
that's exactly why I built

61
00:03:35.550 --> 00:03:39.270
grips five years ago cuz I was
doing that exact same thing.

62
00:03:39.270 --> 00:03:43.630
So I'm really excited to see a really
smart set of people come along with a much

63
00:03:43.630 --> 00:03:46.660
bigger platform than me, and
they're starting to do the same stuff.

64
00:03:46.660 --> 00:03:52.500
And then they have their server
side engine, the EmberCLI tool.

65
00:03:52.500 --> 00:03:55.590
The name is escaping me, but they have

66
00:03:57.290 --> 00:04:01.720
now a process where you can run
the rendering on the server and

67
00:04:01.720 --> 00:04:06.200
node just the same as you can run
the Ember app in the browser.

68
00:04:06.200 --> 00:04:09.960
And if you dig into the details of
how that particular tool works,

69
00:04:09.960 --> 00:04:13.190
it's exactly the same ideas
that I'm espousing here.

70
00:04:13.190 --> 00:04:17.830
Reusing the code in both places, doing
initial page load render in the server,

71
00:04:17.830 --> 00:04:19.470
and then letting the app take over and

72
00:04:19.470 --> 00:04:22.340
progressively enhance
to a single page app.

73
00:04:22.340 --> 00:04:24.870
That's exactly the same stuff
I've been talking about here.

74
00:04:24.870 --> 00:04:30.020
It's an entirely compatible with the ideas
that I've had with middle end for years.

75
00:04:30.020 --> 00:04:33.770
So I'm super excited even though Ember
is maybe more overkill than I need.

76
00:04:33.770 --> 00:04:36.820
I'm super excited that
a really smart group of people

77
00:04:36.820 --> 00:04:40.300
has come to similar conclusions and
they're now pushing that forward.

78
00:04:40.300 --> 00:04:43.540
We're gonna see a lot more people get on
that bandwagon I think cuz there's a lot

79
00:04:43.540 --> 00:04:48.220
of value to this simple idea of being
able to share code and have it work yet.

80
00:04:48.220 --> 00:04:51.190
Fast boot that's exactly
what it's talking about.

81
00:04:51.190 --> 00:04:52.440
&gt;&gt; Student 2: People doing the same thing

82
00:04:52.440 --> 00:04:53.920
with react right now,
&gt;&gt; Kyle Simpson: Of course.

83
00:04:53.920 --> 00:04:57.230
&gt;&gt; Student 2: Rendering the templates
&gt;&gt; Kyle Simpson: Yeah, absolutely.

84
00:04:57.230 --> 00:04:59.340
&gt;&gt; Student 2: On both sides,
and then the same with Angular.

85
00:04:59.340 --> 00:05:04.357
And I know Angular too right now,
if you look at their reading notes,

86
00:05:04.357 --> 00:05:09.270
they're discussing this concept,
I mean in detail I believe.

87
00:05:09.270 --> 00:05:10.148
&gt;&gt; Kyle Simpson: So the good news is,

88
00:05:10.148 --> 00:05:13.525
over the next couple years basically
everybody's gonna be doing it, okay?

89
00:05:13.525 --> 00:05:14.430
&gt;&gt; Student 2: Yeah.
&gt;&gt; Kyle Simpson: And you can do it

90
00:05:14.430 --> 00:05:18.410
the simple way with no frameworks and
just a little bit of code yourself.

91
00:05:18.410 --> 00:05:21.170
Or you can use a framework and
the frameworks are gonna be doing it but

92
00:05:21.170 --> 00:05:23.770
the value is in the idea
not the implementation.

