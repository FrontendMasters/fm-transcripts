WEBVTT

1
00:00:00.000 --> 00:00:03.858
[MUSIC]

2
00:00:03.858 --> 00:00:04.644
&gt;&gt; Kyle: Let's see,

3
00:00:04.644 --> 00:00:09.540
are there any last questions that I
haven't answered about this exercise?

4
00:00:09.540 --> 00:00:11.060
Yeah
&gt;&gt; Speaker 2: Not about this exercise,

5
00:00:11.060 --> 00:00:14.550
more in general, testing.
&gt;&gt; Kyle: Testing.

6
00:00:16.480 --> 00:00:19.128
Yeah, obviously that was way outside
of the scope of things that I

7
00:00:19.128 --> 00:00:19.907
wanted to do here.

8
00:00:19.907 --> 00:00:27.960
But I do typically write
a smaller subset of unit tests.

9
00:00:27.960 --> 00:00:31.070
And what I would look at in
a shared environment like this

10
00:00:31.070 --> 00:00:34.210
is the stuff that I wanna unit
test is the stuff that's shared.

11
00:00:35.350 --> 00:00:39.424
Because that's the stuff that I know
can run agnostic of its environment.

12
00:00:39.424 --> 00:00:43.627
So that validator rule for example,
that's a really easy thing to unit test.

13
00:00:43.627 --> 00:00:45.728
Cuz I know I can just stuff
a bunch of data in it and

14
00:00:45.728 --> 00:00:48.810
I'm asserting that I'm gonna
get the right answers out.

15
00:00:48.810 --> 00:00:53.550
So, I typically, again, I know that
a lot of people have their different

16
00:00:53.550 --> 00:00:56.070
opinions on what test frameworks
they like or whatever.

17
00:00:56.070 --> 00:01:00.130
There's a real simple one that's
still powerful enough for

18
00:01:00.130 --> 00:01:02.762
most of what I use, and that's QUnit.

19
00:01:02.762 --> 00:01:07.470
And I use QUnit to do my basic assertions
of little unit tests like that.

20
00:01:07.470 --> 00:01:10.540
Most of the time, I don't even
need the asynchronous capability.

21
00:01:10.540 --> 00:01:13.100
If I need an asynchronous test, Mocha

22
00:01:13.100 --> 00:01:17.270
is another suite that's maybe a little
bit better at doing asynchronous testing.

23
00:01:17.270 --> 00:01:20.510
But I don't go to the real extreme
routes that other people do,

24
00:01:20.510 --> 00:01:23.240
there's a lot of great
testing frameworks out there.

25
00:01:23.240 --> 00:01:26.960
But I'll do a QUnit for
a basic set of unit tests.

26
00:01:26.960 --> 00:01:31.450
And then I will do regression tests for
my integration in my browser.

27
00:01:33.540 --> 00:01:37.170
And that'll test all the other paths,
kinda the full package all together.

28
00:01:38.890 --> 00:01:43.920
Again, minimal, I start with no test and
work until I have confidence on it.

29
00:01:43.920 --> 00:01:47.656
Instead of assuming that I need to
write lots and lots and lots and

30
00:01:47.656 --> 00:01:53.273
lots of tests.
&gt;&gt; Kyle: Okay,

31
00:01:53.273 --> 00:01:56.220
I'll just leave you with this.

32
00:01:56.220 --> 00:01:57.690
JavaScript's really awesome but

33
00:01:57.690 --> 00:02:00.840
it's even more awesome when
you can use it in both places.

34
00:02:01.960 --> 00:02:04.900
And I hope that what you got out
of this last bit of our talk

35
00:02:04.900 --> 00:02:08.740
together is that once you get
confident with all of JavaScript.

36
00:02:08.740 --> 00:02:12.850
Once you spent a little bit of effort
learning things like coercion and

37
00:02:12.850 --> 00:02:14.740
the other parts of JavaScript.

38
00:02:14.740 --> 00:02:17.700
It's a really easy thing to write

39
00:02:17.700 --> 00:02:20.370
a basic Node server that does
the things you need it to do.

40
00:02:20.370 --> 00:02:23.380
You don't actually need to spend
a lot of time being an expert.

41
00:02:23.380 --> 00:02:27.450
I am in no way, shape,
or form a Node expert.

42
00:02:27.450 --> 00:02:30.270
On the whole scope of things,

43
00:02:30.270 --> 00:02:34.290
I'm not actually that high on the ladder
scale in terms of my Node skills.

44
00:02:34.290 --> 00:02:39.260
I'm competent but I'm certainly not some
kind of crazy hacker expert or whatever.

45
00:02:39.260 --> 00:02:43.115
But I know enough about JavaScript that
I can get done what I need to get done.

46
00:02:43.115 --> 00:02:47.946
And that I hope is the biggest message
take away here, learn JavaScript and

47
00:02:47.946 --> 00:02:53.200
use all of JavaScript and use
JavaScript across your whole app, Okay?

48
00:02:53.200 --> 00:02:55.070
Thanks for being here,
it was an honor to be here.

49
00:02:55.070 --> 00:02:59.872
One last quick thing just to
remind everyone that this is my

50
00:02:59.872 --> 00:03:01.833
contact information.

51
00:03:01.833 --> 00:03:06.600
And I'll just leave you with that to say,
is there a question I missed?

52
00:03:06.600 --> 00:03:08.760
Which direction would you
go if you were to scale up?

53
00:03:10.260 --> 00:03:14.140
I assume the question means if I
needed something more framework-ish,

54
00:03:14.140 --> 00:03:15.690
which direction would I go?

55
00:03:15.690 --> 00:03:18.758
The next step up is I'd move to Express or

56
00:03:18.758 --> 00:03:23.176
maybe KOA.
&gt;&gt; Kyle: So I'm not sure if that

57
00:03:23.176 --> 00:03:26.371
was exactly the question.
&gt;&gt; Speaker 3: The other question was,

58
00:03:26.371 --> 00:03:28.720
can you share this code that-
&gt;&gt; Kyle: Yeah, absolutely,

59
00:03:28.720 --> 00:03:33.280
the current state of things as I just
wrote it, that'll be part of a zip file.

60
00:03:34.330 --> 00:03:37.900
I'll send out a zip file that has
the corrected stuff that I messed up

61
00:03:37.900 --> 00:03:39.064
plus this new stuff.

62
00:03:39.064 --> 00:03:41.590
So that'll be sent out, so
you'll have this copy of this code.

63
00:03:41.590 --> 00:03:45.110
It'll also probably end up
on GitHub pretty quick but

64
00:03:45.110 --> 00:03:47.130
I'll send a zip file to you so
you have it right away.

65
00:03:49.250 --> 00:03:50.050
Okay, well,

66
00:03:50.050 --> 00:03:54.690
what I was saying on this last slide,
as an open ended invitation to anyone that

67
00:03:54.690 --> 00:03:59.330
ever takes one of my workshops I mean
it when I say that it's impossible for

68
00:03:59.330 --> 00:04:02.900
you to have completely, fully uncompressed
everything that we talked about today.

69
00:04:02.900 --> 00:04:04.380
There's a lot to go through.

70
00:04:04.380 --> 00:04:08.130
So I encourage you not let this be the
last moment that you ever look at these

71
00:04:08.130 --> 00:04:10.240
exercises or look at the slides.

72
00:04:10.240 --> 00:04:11.850
Go back over them,
go back over your notes,

73
00:04:11.850 --> 00:04:14.840
try the exercise stuff that
we did from scratch, try it.

74
00:04:15.900 --> 00:04:19.970
And you may need to try it a few times and
it's quite likely that you're going

75
00:04:19.970 --> 00:04:24.660
to run into some problem or frustration or
question or something that we missed.

76
00:04:24.660 --> 00:04:27.040
So I want to invite you to
feel free to reach out and

77
00:04:27.040 --> 00:04:28.410
ask questions from here on out.

78
00:04:28.410 --> 00:04:31.040
There's lots of different ways to
get ahold of me, Ttweet at me,

79
00:04:31.040 --> 00:04:32.770
send me an email, whatever.

80
00:04:32.770 --> 00:04:36.220
All the time, I get emails from
former attendees of workshops and

81
00:04:36.220 --> 00:04:37.440
I love helping people.

82
00:04:37.440 --> 00:04:40.960
So if there's anything that I can do
more than I've already done to help

83
00:04:40.960 --> 00:04:44.110
increase your awareness,
your learning of JavaScript, and

84
00:04:44.110 --> 00:04:48.050
your appreciation of this platform,
feel free to let me know.

85
00:04:48.050 --> 00:04:50.070
It's been an honor being here,
thanks for all your time and attention.

