WEBVTT

1
00:00:00.000 --> 00:00:03.839
[MUSIC]

2
00:00:03.839 --> 00:00:06.938
&gt;&gt; Kyle Simpson: That the work that we're
gonna do on the details pane is a little

3
00:00:06.938 --> 00:00:10.490
more complex than that one, but
less complex than the header.

4
00:00:10.490 --> 00:00:10.990
Okay.

5
00:00:14.110 --> 00:00:14.770
Check the Read Me.

6
00:00:14.770 --> 00:00:16.120
What does it say to do?

7
00:00:16.120 --> 00:00:20.110
The Read Me says you wanna set up
an event handler that listens for

8
00:00:20.110 --> 00:00:21.800
clicks on items in the carousel.

9
00:00:23.240 --> 00:00:24.920
And whenever that
carousel item is clicked,

10
00:00:24.920 --> 00:00:29.530
you pull the ID from its real attribute,
and

11
00:00:29.530 --> 00:00:33.770
you do another AJAX request to load it in,
put its contents into the content dish.

12
00:00:35.790 --> 00:00:40.740
Basically, it's gonna be a lot like
what we did in the header file, but

13
00:00:40.740 --> 00:00:41.780
maybe a little bit simpler.

14
00:00:43.890 --> 00:00:47.900
So, essentially what I'm saying here
is we wanna attach a click handler so

15
00:00:47.900 --> 00:00:52.950
that when I click on one of these icons,
that

16
00:00:52.950 --> 00:00:57.420
click handler fires,
it lets us know which icon we clicked on.

17
00:00:57.420 --> 00:01:02.990
When we go to the HTML, you'll notice
that each item in the carousel

18
00:01:02.990 --> 00:01:06.250
has its own number,
it has an ID, basically.

19
00:01:07.350 --> 00:01:13.750
So, we wanna grab that number, and then
that is the file that we want to AJAX in.

20
00:01:13.750 --> 00:01:19.278
So if I click on the one that has a -0,
we wanna load a file called 0.html.

21
00:01:19.278 --> 00:01:23.100
And if I click on -1,
we load one 1.html, and so forth.

22
00:01:24.120 --> 00:01:24.990
Okay?

23
00:01:24.990 --> 00:01:26.520
So, I'm gonna get you started, and

24
00:01:26.520 --> 00:01:31.000
then I'll give you a minute and see if
you can figure out what to do from here.

25
00:01:31.000 --> 00:01:34.910
So, I'm inside of the Details folder.

26
00:01:34.910 --> 00:01:38.420
I mean, I'm inside of the Details file,
and I already have set up for

27
00:01:38.420 --> 00:01:40.430
you references to the variables.

28
00:01:41.830 --> 00:01:43.970
There's an Item's element.

29
00:01:43.970 --> 00:01:47.060
And a Content element, and those
are the two that we are going to need.

30
00:01:47.060 --> 00:01:50.030
So, I want to attach a click
handler to the items elements.

31
00:01:50.030 --> 00:01:54.950
I will say items.on, it's a click handler.

32
00:01:54.950 --> 00:01:59.080
I'm going to be delegating from
the individual elements inside of it.

33
00:02:00.590 --> 00:02:03.690
So, we come back to the index HTML.

34
00:02:03.690 --> 00:02:07.270
We'll notice that I'm delegating
from elements that all have a rel

35
00:02:07.270 --> 00:02:08.740
that starts with that value.

36
00:02:09.760 --> 00:02:16.677
So, I can say rel-
&gt;&gt; Kyle Simpson: Hat

37
00:02:16.677 --> 00:02:22.920
equals is it starts with
$equals is the exist in,

38
00:02:22.920 --> 00:02:27.231
either one of those will work, and

39
00:02:27.231 --> 00:02:31.750
I want to do an event handler.

40
00:02:31.750 --> 00:02:36.270
Now, before I let you go on this
task to try your next step,

41
00:02:36.270 --> 00:02:40.260
I want to suggest that instead
of doing these inline functions,

42
00:02:40.260 --> 00:02:43.520
you pull that out as its
own function declaration.

43
00:02:43.520 --> 00:02:47.500
This is a stylistic thing
more than a functional thing.

44
00:02:48.570 --> 00:02:53.890
So, give it a name like personClicked or

45
00:02:53.890 --> 00:02:58.870
iconClicked, and
use that name as your event handler.

46
00:03:02.180 --> 00:03:07.160
Okay, so your next task,
knowing which actual icon was clicked,

47
00:03:07.160 --> 00:03:09.250
how are you going to pull
out that rel attribute?

48
00:03:10.250 --> 00:03:14.580
Try that, try setting up your ID
value by pulling out that number

49
00:03:14.580 --> 00:03:16.220
from its rel attribute.

50
00:03:16.220 --> 00:03:18.600
And I'll give you 90 seconds
to try your hand at that.

51
00:03:20.510 --> 00:03:23.450
It seems like there's some people in the
chat room that are mentioning that they're

52
00:03:23.450 --> 00:03:25.670
struggling, stuff isn't working for them.

53
00:03:25.670 --> 00:03:28.800
I'd recommend opening up your console and

54
00:03:28.800 --> 00:03:32.900
seeing if there are JavaScript errors that
are happening when you're doing stuff,

55
00:03:32.900 --> 00:03:37.370
if you click a button and some kind of
error happens here, that's a problem.

56
00:03:37.370 --> 00:03:40.360
That could mean that we have a variable
named incorrectly or something like that.

57
00:03:40.360 --> 00:03:43.210
So, looking at your console
while running things,

58
00:03:43.210 --> 00:03:46.430
if you see stuff just silently not
working the way it's supposed to,

59
00:03:46.430 --> 00:03:49.100
check to see if you're getting JavaScript
errors, and that might be a place to look.

60
00:03:50.650 --> 00:03:54.780
All right, so the step that I needed to do
here was get the ID of the person that was

61
00:03:54.780 --> 00:03:55.490
clicked on, right?

62
00:03:55.490 --> 00:03:58.220
So, I can say var ID is equal to.

63
00:03:58.220 --> 00:04:03.206
Now, event.target is the icon clicked on,
so we can say invent.target.

64
00:04:03.206 --> 00:04:04.742
Everybody with me?

65
00:04:08.343 --> 00:04:10.920
&gt;&gt; Kyle Simpson: Now, what do we wanna do?

66
00:04:10.920 --> 00:04:13.509
We need to pull out its-
&gt;&gt; Speaker 2: Range.

67
00:04:13.509 --> 00:04:14.719
&gt;&gt; Kyle Simpson: Rel attribute?

68
00:04:14.719 --> 00:04:16.716
&gt;&gt; Speaker 3: Yeah, .attr.

69
00:04:16.716 --> 00:04:19.297
&gt;&gt; Kyle Simpson: .Attr rel.

70
00:04:21.843 --> 00:04:25.260
&gt;&gt; Kyle Simpson: Now,
that's going to give us the whole value.

71
00:04:25.260 --> 00:04:29.970
It's going to give us js-item-0,
for example.

72
00:04:29.970 --> 00:04:34.170
And we only want that last a little part,
right?

73
00:04:34.170 --> 00:04:36.360
So, there's a couple of
different ways to do that.

74
00:04:36.360 --> 00:04:39.970
But the trick that I'll use
is a regular expression.

75
00:04:41.050 --> 00:04:46.050
And you could also do substrings by
looking at its index from the back or

76
00:04:46.050 --> 00:04:49.940
whatever, but there's a neat little trick
with regular expressions where you simply

77
00:04:49.940 --> 00:04:54.030
replace everything that isn't that
final number with an empty string.

78
00:04:54.030 --> 00:04:55.440
So, I can say replace.

79
00:04:56.900 --> 00:04:58.980
I see the question,
I'll get to in just a moment.

80
00:04:58.980 --> 00:05:04.057
I can do replace everything
from the beginning

81
00:05:04.057 --> 00:05:07.840
up until that final set of digits.

82
00:05:09.962 --> 00:05:13.630
&gt;&gt; Kyle Simpson: Which is \d,
that comes at the end.

83
00:05:13.630 --> 00:05:20.209
And I can say, keep that thing
by wrapping it in a parentheses,

84
00:05:20.209 --> 00:05:24.689
and everything else I'm gonna get rid of.

85
00:05:31.492 --> 00:05:34.933
&gt;&gt; Kyle Simpson: So, if you don't speak
regular expression, don't feel bad,

86
00:05:34.933 --> 00:05:37.490
it took me a long time
to learn it as well.

87
00:05:37.490 --> 00:05:42.337
But, what I'm basically saying is start
at the beginning of my string value, dot

88
00:05:42.337 --> 00:05:47.620
means match any character and star means
keep going until I match something else.

89
00:05:47.620 --> 00:05:50.845
This parentheses set says I wanna
capture that thing so I can keep it,

90
00:05:50.845 --> 00:05:56.000
/d is a decimal character, so it's one
of the zero through nine and plus says

91
00:05:56.000 --> 00:06:02.000
I can have more than one of them,
in case I have more items in my thing.

92
00:06:02.000 --> 00:06:06.400
And then what I'm replacing that whole
match with is only what was inside

93
00:06:06.400 --> 00:06:10.110
the parentheses, so I'm basically
ditching all the rest of the stuff.

94
00:06:14.950 --> 00:06:15.580
Yeah, sorry.

95
00:06:15.580 --> 00:06:17.788
I always fall into the habit.

96
00:06:17.788 --> 00:06:22.700
Okay, so, the hat symbol says start
at the beginning of the string,

97
00:06:22.700 --> 00:06:29.180
dot dot star means match everything
until we get to some number characters.

98
00:06:29.180 --> 00:06:34.260
And then the end of our string, and then
$1 means pull in the stuff that was inside

99
00:06:34.260 --> 00:06:39.390
of this set of parentheses, okay?

100
00:06:39.390 --> 00:06:43.960
Quick little tip about dealing
with JavaScript bugging.

101
00:06:43.960 --> 00:06:46.700
If you're trying to verify
that you've got the correct ID

102
00:06:46.700 --> 00:06:51.110
here, most people do a console.log.

103
00:06:51.110 --> 00:06:52.420
That's the old school way of doing it.

104
00:06:52.420 --> 00:06:55.390
I'm gonna show you a quick way
of dealing with the debugger,

105
00:06:55.390 --> 00:06:57.030
if you're using something like Chrome, and

106
00:06:57.030 --> 00:07:02.490
if you're not using Chrome, Firefox does
have one, but it's not as good right now.

107
00:07:02.490 --> 00:07:06.510
But there's a way to set a break point,
and we could do that in the editor, or

108
00:07:06.510 --> 00:07:09.030
we could do it in our code
by typing the word debugger.

109
00:07:12.360 --> 00:07:14.871
So, I'm just temporarily
going to insert that word.

110
00:07:18.631 --> 00:07:20.381
&gt;&gt; Kyle Simpson: And
I want to verify that I am, in fact,

111
00:07:20.381 --> 00:07:21.770
getting the correct ID value.

112
00:07:21.770 --> 00:07:26.160
So I'm gonna switch over,
I'm going to open up my developer console.

113
00:07:26.160 --> 00:07:27.600
&gt;&gt; Speaker 4: Do a save first?

114
00:07:27.600 --> 00:07:28.850
&gt;&gt; Kyle Simpson: I thought I did a save.

115
00:07:28.850 --> 00:07:30.210
&gt;&gt; Speaker 4: Maybe you did,
I didn't see it.

116
00:07:30.210 --> 00:07:30.710
&gt;&gt; Kyle Simpson: Yeah, it's saved.

117
00:07:31.920 --> 00:07:35.630
Okay, so
I've got my developer console open here.

118
00:07:35.630 --> 00:07:40.570
And when I refresh the page,
when I click on one of

119
00:07:40.570 --> 00:07:44.170
these items, it's gonna switch me into the
debugger, because it's going to catch that

120
00:07:44.170 --> 00:07:49.100
breakpoint that it runs across when
it finds the buggers statement, or

121
00:07:49.100 --> 00:07:52.324
it's going to give me an error here,
so we know we have some sort of error.

122
00:07:52.324 --> 00:07:54.180
All right, so unrecognized expression,

123
00:07:54.180 --> 00:07:58.240
let's go back there and
see what was I doing wrong.

124
00:08:00.230 --> 00:08:01.328
Because I did it in the brackets.

125
00:08:01.328 --> 00:08:04.507
[LAUGH] Okay.

126
00:08:04.507 --> 00:08:05.490
Oops.

127
00:08:05.490 --> 00:08:06.140
All right, let's try it again.

128
00:08:06.140 --> 00:08:09.420
Let's refresh the page, click on an icon,

129
00:08:11.110 --> 00:08:14.630
now we're in interactive debugging
mode inside the developer tools.

130
00:08:14.630 --> 00:08:15.320
Okay?

131
00:08:15.320 --> 00:08:18.410
And you'll notice that we
are at this break point.

132
00:08:18.410 --> 00:08:23.110
And one of the things that the breakpoint
is showing me, if I collapse this one,

133
00:08:23.110 --> 00:08:24.950
because I don't care about my Call Stack.

134
00:08:24.950 --> 00:08:28.730
You'll notice that it's showing me my
local variables that currently exist.

135
00:08:28.730 --> 00:08:31.650
So, I have a local variable called ID,
and guess what?

136
00:08:31.650 --> 00:08:33.240
What's its value?

137
00:08:33.240 --> 00:08:35.500
It's one, which is what we expect.

138
00:08:35.500 --> 00:08:38.690
And a zero based system,
I clicked on the second item, so

139
00:08:38.690 --> 00:08:40.520
I'm expecting to get ID one.

140
00:08:40.520 --> 00:08:46.530
Now, I could click it one more time
just to verify that I get ID two,

141
00:08:46.530 --> 00:08:48.090
or I could get ID zero.

142
00:08:48.090 --> 00:08:50.530
So, I verified that my
ID logic is correct.

143
00:08:50.530 --> 00:08:55.450
It was just a quick little glimpse
at using the developer tools to your

144
00:08:55.450 --> 00:08:58.926
advantage, instead of always
falling back on console.log.

145
00:08:58.926 --> 00:09:01.990
All right, let's take out the debugger,
we don't need that there now.

146
00:09:01.990 --> 00:09:04.500
We verified that our
ID statements correct.

147
00:09:04.500 --> 00:09:06.270
Now, what do we want to do
with that ID statement?

148
00:09:09.010 --> 00:09:10.889
We want to make an AJAX call with it,
right?

149
00:09:12.100 --> 00:09:17.008
That ID .HTML is the file
that we want to load, so,

150
00:09:17.008 --> 00:09:20.786
remember we do AJAX, what's our URL?

151
00:09:20.786 --> 00:09:23.420
ID plus HTML.

152
00:09:23.420 --> 00:09:25.560
There's one additional detail here,

153
00:09:25.560 --> 00:09:30.200
which is that these files are actually
in a sub folder called details.

154
00:09:30.200 --> 00:09:31.530
So, we want to put that on the beginning.

155
00:09:33.710 --> 00:09:35.354
So, that's the file we wanna load.

156
00:09:36.978 --> 00:09:38.556
&gt;&gt; Kyle Simpson: We need
to give it a callback.

157
00:09:40.328 --> 00:09:42.845
&gt;&gt; Kyle Simpson: That is going
to receive the contents.

158
00:09:45.630 --> 00:09:47.306
&gt;&gt; Kyle Simpson: Actually,
I'm sorry that's not how jQuery works,

159
00:09:47.306 --> 00:09:48.710
it doesn't use the callback there.

160
00:09:48.710 --> 00:09:50.610
We have to pass that
into the .then function.

161
00:09:52.570 --> 00:09:53.993
It's gonna receive the contents.

162
00:09:56.715 --> 00:10:00.450
&gt;&gt; Kyle Simpson: One other little thing,
jQuery kind of is annoying that you have

163
00:10:00.450 --> 00:10:04.610
to tell it, don't parse anything,
I want you to treat it as just text.

164
00:10:04.610 --> 00:10:08.629
So, we say data type text here.

165
00:10:14.381 --> 00:10:16.319
&gt;&gt; Kyle Simpson: So,
at this point in my code,

166
00:10:16.319 --> 00:10:21.139
I should have a contents variable that
has the contents of that HTML file.

167
00:10:30.133 --> 00:10:31.626
&gt;&gt; Kyle Simpson: What do we do next?

168
00:10:37.661 --> 00:10:42.473
&gt;&gt; Kyle Simpson: Content.html,
contents, $content being

169
00:10:42.473 --> 00:10:47.910
the variable that's pointing
at our details pane.

170
00:10:57.780 --> 00:11:02.690
Only verify against the solutions for, and
make sure I didn't mix that up somehow.

171
00:11:10.460 --> 00:11:13.380
I'm gonna change it just for
the sake of future exercises.

172
00:11:13.380 --> 00:11:16.440
I'm gonna change this to LoadPerson,
cuz that's what I intended to call it.

173
00:11:16.440 --> 00:11:19.438
So, instead of PersonClicked,
I'm gonna call it LoadPerson.

174
00:11:23.936 --> 00:11:24.967
&gt;&gt; Kyle Simpson: So, conceptually,

175
00:11:24.967 --> 00:11:27.495
that should be all the steps
that were necessary.

176
00:11:27.495 --> 00:11:31.215
Let me click on an icon and
load its contents into a div.

177
00:11:32.295 --> 00:11:34.345
So, let's try it, let's see if that works.

178
00:11:36.515 --> 00:11:39.835
I don't need my debug tools open.

179
00:11:41.740 --> 00:11:47.104
If I click on this icon, sure enough,
it loaded the person in,

180
00:11:47.104 --> 00:11:50.556
and if I click that icon and
then that icon

181
00:12:01.180 --> 00:12:02.110
&gt;&gt; Kyle Simpson: Now, I recognize

182
00:12:02.110 --> 00:12:06.140
that I already wrote a bunch of code for
you, but the sanity check that I want to

183
00:12:06.140 --> 00:12:08.998
give you here is that we did
not have to write more than.

184
00:12:10.949 --> 00:12:15.392
&gt;&gt; Kyle Simpson: Seven, eight lines of
code to wire ourselves up with a fairly

185
00:12:15.392 --> 00:12:19.780
interesting task that
we click on an element.

186
00:12:19.780 --> 00:12:24.274
We pull out something about that element,
we make an AJAX request to a file system

187
00:12:24.274 --> 00:12:26.717
or to a URL to grab
the contents of that file,

188
00:12:26.717 --> 00:12:30.490
and then we stuff it in an entirely
different part of the page.

189
00:12:30.490 --> 00:12:32.660
We actually didn't have to do
a lot of work to make that happen.

190
00:12:35.330 --> 00:12:39.465
And, as I said earlier,

191
00:12:39.465 --> 00:12:44.400
99% of the work that we had to do was
well, maybe in this case a little

192
00:12:44.400 --> 00:12:47.840
less than 90% because we had
regular expressions involved.

193
00:12:47.840 --> 00:12:51.350
But 80% of the work was
just using the jQuery API.

194
00:12:52.780 --> 00:12:55.840
Which you learn once, and then it's
just a tool like any other hammer, and

195
00:12:55.840 --> 00:12:56.580
you can swing it.

196
00:13:06.852 --> 00:13:09.240
&gt;&gt; Kyle Simpson: All right,
any questions about task two?

197
00:13:10.640 --> 00:13:11.570
&gt;&gt; Speaker 5: Did you get that one?

198
00:13:12.630 --> 00:13:13.500
&gt;&gt; Kyle Simpson: Did I get what?

199
00:13:13.500 --> 00:13:14.260
&gt;&gt; Speaker 5: That one question.

200
00:13:15.650 --> 00:13:16.300
&gt;&gt; Kyle Simpson: What's the question?

201
00:13:17.880 --> 00:13:21.239
&gt;&gt; Speaker 6: He was asking about
that line, it's line 12 now.

202
00:13:26.055 --> 00:13:27.710
&gt;&gt; Kyle Simpson: He's
asking about this line.

203
00:13:27.710 --> 00:13:34.490
Yep.
So, each one of these, if I replace them

204
00:13:34.490 --> 00:13:40.290
just to simplify, cuz we know that those
are just selecting elements in the page,

205
00:13:40.290 --> 00:13:45.250
what we're left with is an element
arrow element arrow element.

206
00:13:45.250 --> 00:13:50.170
In CSS, that little right hand
arrow is direct descendant.

207
00:13:50.170 --> 00:13:55.140
So, what I'm saying is find this
element then find its direct child, and

208
00:13:55.140 --> 00:13:56.500
then find its direct child, and

209
00:13:58.700 --> 00:14:03.190
those elements I'm specifying
what those attribute things.

210
00:14:03.190 --> 00:14:06.190
So I'm saying rel equals JS carousal,
JS content, and JS items.

211
00:14:06.190 --> 00:14:14.639
Technically, I could have probably
gotten away with doing just JS items.

212
00:14:16.900 --> 00:14:20.150
Assuming, of course,
that JS items is totally unique.

213
00:14:21.290 --> 00:14:23.436
Here I'm making it more unique.

214
00:14:23.436 --> 00:14:26.235
Theoretically, it could have another
JS item somewhere else on the page,

215
00:14:26.235 --> 00:14:29.440
I'm making it more unique by
giving it a specific path.

