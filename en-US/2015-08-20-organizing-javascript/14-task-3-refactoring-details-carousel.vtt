WEBVTT

1
00:00:00.102 --> 00:00:03.959
[MUSIC]

2
00:00:03.959 --> 00:00:05.130
&gt;&gt; Kyle Simpson: Let's look at step three.

3
00:00:05.130 --> 00:00:09.130
I want you to observe something,
again, we're

4
00:00:09.130 --> 00:00:13.890
kind of trying to take a higher level view
of what's happening here in this code.

5
00:00:16.260 --> 00:00:19.100
Okay, so don't get too much
focused on the syntax and

6
00:00:19.100 --> 00:00:20.644
let's think more about conceptuals.

7
00:00:20.644 --> 00:00:26.670
What does the details js, what does
the details module signify to you?

8
00:00:26.670 --> 00:00:31.050
What is its job?
&gt;&gt; Speaker 2: To display details.

9
00:00:33.060 --> 00:00:33.930
&gt;&gt; Kyle Simpson: Display details,

10
00:00:33.930 --> 00:00:37.780
but really more just to manage
the details page, right?

11
00:00:37.780 --> 00:00:41.463
What is the carousel modules job?
&gt;&gt; Speaker 3: Manage

12
00:00:41.463 --> 00:00:42.690
the carousel.
&gt;&gt; Kyle Simpson: Manage

13
00:00:42.690 --> 00:00:43.970
the carousel, right?

14
00:00:43.970 --> 00:00:48.120
So, would you consider it to be
kind of a weird code organization

15
00:00:48.120 --> 00:00:52.790
if the carousel module
had details specific

16
00:00:52.790 --> 00:00:55.070
code inside of it?
&gt;&gt; Speaker 3: Yes.

17
00:00:55.070 --> 00:00:55.750
&gt;&gt; Kyle Simpson: That would look

18
00:00:55.750 --> 00:00:59.410
weird to have, if we're going to all
the trouble to have separate modules,

19
00:00:59.410 --> 00:01:01.320
we want them to be independent, right?

20
00:01:02.660 --> 00:01:08.460
Same question, if I had carousel specific
code inside of my details module,

21
00:01:08.460 --> 00:01:11.580
that would equally seem not appropriate.

22
00:01:11.580 --> 00:01:14.500
Would seem like too much
mixture of the two, right?

23
00:01:14.500 --> 00:01:18.679
If we're properly structuring our modules
we want to put code where it belongs,

24
00:01:19.810 --> 00:01:21.180
is the point I'm making.

25
00:01:21.180 --> 00:01:23.810
So, let's go back to our code and
see the current state of things.

26
00:01:25.360 --> 00:01:28.910
Do you see anything inside of the details
folder that looks like it's directly

27
00:01:28.910 --> 00:01:34.000
related to the carousel?
&gt;&gt; Speaker 3: We're searching for

28
00:01:34.000 --> 00:01:36.190
the-
&gt;&gt; Speaker 2: Items.

29
00:01:37.420 --> 00:01:39.058
&gt;&gt; Kyle Simpson: Basically all of init.

30
00:01:39.058 --> 00:01:40.700
[LAUGH]
&gt;&gt; Speaker 3: Yes.

31
00:01:40.700 --> 00:01:42.270
&gt;&gt; Kyle Simpson: Most or, these two lines,

32
00:01:42.270 --> 00:01:47.130
two of the three lines in init
are related to the carousel, but

33
00:01:47.130 --> 00:01:49.280
we're dealing with them
inside of the details module.

34
00:01:50.620 --> 00:01:54.120
The point I'm making is that even though
this function, even though this code is

35
00:01:54.120 --> 00:01:59.910
functional, it gets the job done,
it's kind of not organized well.

36
00:01:59.910 --> 00:02:04.000
It would be better if we could
figure out a way to take

37
00:02:04.000 --> 00:02:08.730
the carousel specific code and keep it
entirely within the carousel module, and

38
00:02:08.730 --> 00:02:11.280
keep the details code entirely
within the details module.

39
00:02:12.590 --> 00:02:15.950
So, this next step of
task three is to observe

40
00:02:15.950 --> 00:02:18.860
that that code belongs over
in the carousel module.

41
00:02:18.860 --> 00:02:23.708
So the first thing I'm just going to do,
is take those two pieces of code,

42
00:02:23.708 --> 00:02:28.871
I'm going to copy them, delete them,
and I'm going to move over the carousel

43
00:02:28.871 --> 00:02:33.280
module and I'm going to put them in here,
down here at the bottom.

44
00:02:34.750 --> 00:02:36.850
Just my first step of
figuring out how to organize,

45
00:02:36.850 --> 00:02:39.720
because this is really where those belong,
okay.

46
00:02:39.720 --> 00:02:42.120
Now, one thing right off
the bat that I'll notice,

47
00:02:42.120 --> 00:02:44.920
which actually should have
been a good clue to us.

48
00:02:44.920 --> 00:02:46.740
Remember I just moved
in this items variable?

49
00:02:46.740 --> 00:02:51.090
We already have one,
we're already getting the items variable.

50
00:02:51.090 --> 00:02:54.580
So we don't need this items
variable anymore at all.

51
00:02:54.580 --> 00:02:59.450
That one is superfluous and unnecessary,
which is a clue to us that it was

52
00:02:59.450 --> 00:03:03.779
not in the right place to begin with,
if we had to do that that look up twice.

53
00:03:03.779 --> 00:03:06.057
Does everybody see that?

54
00:03:06.057 --> 00:03:08.550
So that should have
jumped out at us before.

55
00:03:08.550 --> 00:03:11.320
But now that we're focusing on the right
things, now we'll look at this and

56
00:03:11.320 --> 00:03:14.940
say, okay, so that stuff,
I didn't even need it, but

57
00:03:14.940 --> 00:03:18.910
I do use the items thing
to make my click handler.

58
00:03:18.910 --> 00:03:20.740
Now, I do have this problem,

59
00:03:20.740 --> 00:03:26.615
which is that the loadPerson function
doesn't exist in this module.

60
00:03:26.615 --> 00:03:30.410
Where does it exist?
&gt;&gt; Speaker 3: Details.

61
00:03:30.410 --> 00:03:31.010
&gt;&gt; Kyle Simpson: It exists in

62
00:03:31.010 --> 00:03:31.749
details, right.

63
00:03:33.350 --> 00:03:37.115
All right, now let's look inside of
details and see, is any of this code

64
00:03:37.115 --> 00:03:40.695
related to the carousel, and
any of the stuff inside of loadPerson,

65
00:03:40.695 --> 00:03:46.613
is that related to the carousel?
&gt;&gt; Kyle Simpson: I

66
00:03:46.613 --> 00:03:51.310
would suggest that line four is pretty
heavily related to the carousel.

67
00:03:51.310 --> 00:03:55.780
Because we're looking specifically
at a rel attribute of an item that

68
00:03:55.780 --> 00:03:57.150
sits inside of the carousel.

69
00:03:58.230 --> 00:04:01.778
So, everybody see that?
&gt;&gt; Kyle Simpson: So

70
00:04:01.778 --> 00:04:05.380
line four also looks to me to
be a line that should move out.

71
00:04:05.380 --> 00:04:08.140
So I'm going to take it out for
right now, okay?

72
00:04:10.010 --> 00:04:11.540
And I want to put it over
here in the carousel, and

73
00:04:11.540 --> 00:04:13.270
I got to figure out where
am I going to put it?

74
00:04:13.270 --> 00:04:17.150
Well, I need a function to
go in place of loadPerson.

75
00:04:17.150 --> 00:04:22.940
So, why don't I call this one clickPerson?

76
00:04:22.940 --> 00:04:28.160
And the name here is important,
because I'm suggesting that the carousel

77
00:04:28.160 --> 00:04:33.480
module does not actually care what
happens after you click the person.

78
00:04:35.160 --> 00:04:40.190
That capability, that concern,
belongs to the details module.

79
00:04:40.190 --> 00:04:43.130
The carousel just says, I just need
you to be able to click something,

80
00:04:43.130 --> 00:04:44.421
I don't care what you
do with it after that.

81
00:04:44.421 --> 00:04:48.491
Does everybody see that concept
that I'm trying to get at?

82
00:04:48.491 --> 00:04:50.900
So let's call it clickPerson,

83
00:04:50.900 --> 00:04:55.190
because that actually signifies more
directly what it's supposed to do.

84
00:04:55.190 --> 00:04:58.750
It is an event handler,
clickPerson is an event handler,

85
00:04:58.750 --> 00:05:03.020
and that line of code
needs to go right here.

86
00:05:03.020 --> 00:05:03.990
So everybody with me on that?

87
00:05:06.440 --> 00:05:10.469
And let's take that named function and
use that in place, so

88
00:05:10.469 --> 00:05:16.198
we've got it now in place of loadPerson.
&gt;&gt; Kyle Simpson: Now,

89
00:05:16.198 --> 00:05:20.460
if we just left the code like this,
nothing would happen, right?

90
00:05:20.460 --> 00:05:24.399
We'd pull out the ID, but nothing would
happen over there in that other module.

91
00:05:26.360 --> 00:05:29.200
The details module wouldn't
actually do the loading.

92
00:05:29.200 --> 00:05:33.830
So, let's consider what's happening
over here in the details module.

93
00:05:35.110 --> 00:05:36.547
There's no more event, so

94
00:05:36.547 --> 00:05:40.970
this is not an event handler anymore.
&gt;&gt; Kyle Simpson: But

95
00:05:40.970 --> 00:05:44.790
what does this function
primarily depend upon?

96
00:05:44.790 --> 00:05:46.290
There's one piece of information that it

97
00:05:46.290 --> 00:05:47.040
needs.
&gt;&gt; Speaker 3: ID.

98
00:05:47.040 --> 00:05:48.020
&gt;&gt; Kyle Simpson: Everybody see that?

99
00:05:48.020 --> 00:05:48.720
It needs an ID.

100
00:05:50.920 --> 00:05:54.370
We've taken things where
previously we had two different

101
00:05:54.370 --> 00:05:57.100
concerns packed together
in the same function.

102
00:05:57.100 --> 00:06:00.450
We've now split them out into
two separate functions, and

103
00:06:00.450 --> 00:06:03.000
separated them into two
entirely different modules.

104
00:06:04.140 --> 00:06:08.410
That's a process that we call
abstraction in programming, okay?

105
00:06:08.410 --> 00:06:13.360
So here, I have a loadPerson function that
I should be able to call with any ID.

106
00:06:13.360 --> 00:06:16.800
It doesn't matter where the ID comes from,
does it?

107
00:06:16.800 --> 00:06:19.043
I mean I could just call loadPerson three,
and

108
00:06:19.043 --> 00:06:21.120
I would want it to load
up the third person.

109
00:06:22.530 --> 00:06:24.860
So, from the perspective
of the details module,

110
00:06:24.860 --> 00:06:26.440
he doesn't care at all
where it comes from.

111
00:06:29.600 --> 00:06:31.610
And from the perspective of the carousel,

112
00:06:31.610 --> 00:06:33.600
he doesn't care at all what
you do with the click.

113
00:06:34.690 --> 00:06:42.810
So, we can simply delegate that behavior
by putting loadPerson on our public API.

114
00:06:45.110 --> 00:06:49.100
So if I put loadPerson
on the public API for

115
00:06:49.100 --> 00:06:53.800
the details module, it means I'm not
dealing with an event handler at all.

116
00:06:53.800 --> 00:06:57.190
I don't care where
the loadPerson call comes from.

117
00:06:57.190 --> 00:07:00.072
It could come from a click event,
it could come from an ajax, I don't care.

118
00:07:00.072 --> 00:07:01.530
It just comes from somewhere.

119
00:07:01.530 --> 00:07:05.180
So you just call loadPerson, that's
my perspective in the details module.

120
00:07:05.180 --> 00:07:06.750
In the carousel module,

121
00:07:06.750 --> 00:07:11.790
I only care that you should load a person,
but I don't care how that happens.

122
00:07:11.790 --> 00:07:13.540
I don't care about any of those details.

123
00:07:13.540 --> 00:07:15.690
So here, what am I going to do?

124
00:07:15.690 --> 00:07:20.710
I'm going to call Details.loadPerson.

125
00:07:20.710 --> 00:07:23.680
And what do I need to pass to it?
&gt;&gt; Speaker 3: The ID.

126
00:07:23.680 --> 00:07:24.686
&gt;&gt; Kyle Simpson: The ID that I calculated.

127
00:07:33.029 --> 00:07:34.736
&gt;&gt; Kyle Simpson: Way more important than

128
00:07:34.736 --> 00:07:36.867
the syntax of what I just did,

129
00:07:36.867 --> 00:07:41.724
is the concept of what I just did.
&gt;&gt; Kyle Simpson: Looking at

130
00:07:41.724 --> 00:07:46.210
a piece of code and analyzing, is this
piece of code in the correct location?

131
00:07:47.330 --> 00:07:50.400
Maybe one of the most important skills
that you can have as a developer in

132
00:07:50.400 --> 00:07:52.480
any language, but
definitely in JavaScript.

133
00:07:53.680 --> 00:07:58.010
Looking at a piece of code and
identifying, is this properly organized?

134
00:07:58.010 --> 00:08:00.540
Does it make sense for
that piece of code to go here?

135
00:08:00.540 --> 00:08:05.630
It might be and here listen to me,
it might be easier for

136
00:08:05.630 --> 00:08:09.890
it to be there but it might be
conceptually wrong for it to be there.

137
00:08:12.340 --> 00:08:16.730
In fact, I would suggest in my career,
been at this about 15 years,

138
00:08:16.730 --> 00:08:21.830
far more often than it ought to be,
the easy spot is the wrong spot.

139
00:08:24.340 --> 00:08:26.412
Being able to look at a piece of code and
think critically,

140
00:08:26.412 --> 00:08:29.390
does it make sense conceptually for
that thing to be here?

141
00:08:29.390 --> 00:08:31.788
That's the organization skill
that we're talking about.

142
00:08:31.788 --> 00:08:35.228
So what did I use to my advantage?

143
00:08:35.228 --> 00:08:38.960
Well, I used the idea that I
know how to declare a function.

144
00:08:38.960 --> 00:08:41.100
I used the idea that I know
how to call a function.

145
00:08:42.130 --> 00:08:46.888
And, importantly to our discussion, I used
the idea that I know how easy it is to

146
00:08:46.888 --> 00:08:55.405
expose something on my public API.
&gt;&gt; Speaker 4: Just one thing,

147
00:08:55.405 --> 00:08:57.196
on line 14, we don't need items anymore.

148
00:08:57.196 --> 00:09:01.129
And details.

149
00:09:01.129 --> 00:09:02.070
Right?

150
00:09:02.070 --> 00:09:03.490
It's not used anywhere.
&gt;&gt; Kyle Simpson: That's correct.

151
00:09:03.490 --> 00:09:05.710
Yes, we're not using items anymore,
so I can take that diversion out.

152
00:09:06.820 --> 00:09:07.320
Good catch.

153
00:09:09.570 --> 00:09:12.080
All right, just to make sure I didn't
mess something up, let's test it.

154
00:09:13.800 --> 00:09:15.140
Test our code.

155
00:09:15.140 --> 00:09:19.290
We're not adding any new functionality,
we're just improving the organization.

156
00:09:19.290 --> 00:09:21.741
Should still be able to click these and

157
00:09:21.741 --> 00:09:29.210
load them.
&gt;&gt; Kyle Simpson: [COUGH]

158
00:09:29.210 --> 00:09:35.930
This is a rabbit hole that could go
way deeper in a normal application.

159
00:09:35.930 --> 00:09:39.970
I set this up that that's the end of
the rabbit hole in that particular case.

160
00:09:39.970 --> 00:09:44.480
Because we've done basically the practical
amount of refactoring that's necessary.

161
00:09:44.480 --> 00:09:48.270
You could do more refactoring, but you're
not going to get as much of a payoff for

162
00:09:48.270 --> 00:09:49.980
it as we just saw there, the moving.

163
00:09:49.980 --> 00:09:53.110
So, I artificially
constructed this problem so

164
00:09:53.110 --> 00:09:56.220
that you could see the solution and
why the solution is useful, but

165
00:09:56.220 --> 00:09:59.940
it's way more important that you
understand how I did that than what I did.

166
00:10:01.770 --> 00:10:04.460
How I thought about it,
the questions that I asked,

167
00:10:04.460 --> 00:10:07.430
the tools that I pulled out of
my tool box to make that happen.

168
00:10:08.590 --> 00:10:12.850
Maybe the most important thing I teach
you all day long is that thinking, okay?

