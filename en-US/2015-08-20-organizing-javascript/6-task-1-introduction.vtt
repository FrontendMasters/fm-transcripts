WEBVTT

1
00:00:00.000 --> 00:00:03.810
[MUSIC]

2
00:00:03.810 --> 00:00:07.468
&gt;&gt; Kyle Simpson: Let's
look at our app in page.

3
00:00:07.468 --> 00:00:11.150
I've implied a couple of things
by this silly little design.

4
00:00:11.150 --> 00:00:14.360
One is that we've got a little carousel
here that I should be able to go left and

5
00:00:14.360 --> 00:00:15.630
right in my carousel.

6
00:00:15.630 --> 00:00:18.190
You'll notice that it's not functional,

7
00:00:18.190 --> 00:00:21.490
we're gonna let you wire up
the events to make that functional.

8
00:00:22.490 --> 00:00:25.050
And then you notice this big blue
area over here on the right.

9
00:00:25.050 --> 00:00:27.100
What does that thing signify?

10
00:00:27.100 --> 00:00:32.300
Essentially that signifies a details pane,
that if I were to click one of these

11
00:00:33.450 --> 00:00:38.470
items in my carousel list, it would show
up a set of details about that person.

12
00:00:38.470 --> 00:00:43.220
So my stupid little example here is,
this is like a page for

13
00:00:43.220 --> 00:00:47.080
a company that provides tech support and
you're trying to schedule one of these

14
00:00:47.080 --> 00:00:50.830
individuals to come out to your office and
help you with your computer.

15
00:00:50.830 --> 00:00:55.410
So you've got a list of the available tech
support technicians that you can click on

16
00:00:55.410 --> 00:00:58.500
and see their details and
figure out who you wanna schedule, okay.

17
00:00:58.500 --> 00:01:03.228
So it's just my basic little metaphor for
what this app is supposed to be.

18
00:01:06.324 --> 00:01:09.255
&gt;&gt; Kyle Simpson: [COUGH] So
we're gonna wire up these events and

19
00:01:09.255 --> 00:01:13.960
these functionalities first just
getting our feet wet with using jQuery

20
00:01:13.960 --> 00:01:16.250
to do a couple of basic tasks.

21
00:01:16.250 --> 00:01:21.700
But our much more important focus here is
on how the code that I've already written,

22
00:01:21.700 --> 00:01:24.630
how can we improve it
to organize it better?

23
00:01:24.630 --> 00:01:27.260
And that's really where we're gonna
solidify a lot of the discussions that we

24
00:01:27.260 --> 00:01:30.890
were just having about what's the purpose
of a module and a closure, whatever,

25
00:01:30.890 --> 00:01:34.250
we're gonna see why that's such
a useful tool for code organization.

26
00:01:36.110 --> 00:01:44.170
So starting with the first task,
it says open up header.js.

27
00:01:44.170 --> 00:01:46.030
So let's do that.

28
00:01:46.030 --> 00:01:49.272
In your directory you're
gonna have a header.js file.

29
00:01:49.272 --> 00:01:52.246
Js, header.js.

30
00:01:54.965 --> 00:01:55.895
it's empty.

31
00:01:55.895 --> 00:01:57.335
That's super not helpful, right.

32
00:01:57.335 --> 00:02:00.375
This is where you get to write some code,
right.

33
00:02:00.375 --> 00:02:03.205
Now what's the purpose, what are we trying
to have it do, it says open up the file.

34
00:02:03.205 --> 00:02:04.005
Let's go back to the Read Me.

35
00:02:04.005 --> 00:02:05.245
What's the purpose?

36
00:02:05.245 --> 00:02:10.257
In this file you're going to attach
event handlers for the header links.

37
00:02:10.257 --> 00:02:13.377
When you use a jQuery document ready
event handler to make sure that your

38
00:02:13.377 --> 00:02:15.120
code doesn't run too early.

39
00:02:15.120 --> 00:02:19.440
So first step, if you haven't
had much experience with jQuery,

40
00:02:20.650 --> 00:02:24.325
is you're gonna want, we can take out
that comment, you're gonna wanna say,

41
00:02:24.325 --> 00:02:27.269
(document).ready.

42
00:02:29.780 --> 00:02:32.350
And all the code that we're
gonna write right now.

43
00:02:32.350 --> 00:02:34.010
We're gonna put inside
of that ready function.

44
00:02:36.450 --> 00:02:40.720
What document ready does, it is a special
event that your browser fires that lets

45
00:02:40.720 --> 00:02:45.430
you know that the DOM has been parsed and
it's ready to go.

46
00:02:45.430 --> 00:02:48.420
[COUGH]
So

47
00:02:48.420 --> 00:02:51.014
if we're gonna do anything
with the DOM like we are here.

48
00:02:51.014 --> 00:02:53.220
We wanna make sure that
we're in a ready state.

49
00:02:55.670 --> 00:02:57.770
Now let's go back to the design.

50
00:02:59.940 --> 00:03:01.140
If we look at the design here.

51
00:03:01.140 --> 00:03:04.580
You'll notice that I got
a couple of links up here.

52
00:03:04.580 --> 00:03:08.130
That imply or they link to pages.

53
00:03:08.130 --> 00:03:09.920
Like one is for registering,
the ones for log in.

54
00:03:09.920 --> 00:03:13.750
If I click them right now,
you notice I do a full page refresh,

55
00:03:13.750 --> 00:03:16.910
full page load to one of those other
files which is not at all what I want.

56
00:03:16.910 --> 00:03:19.571
What I want user experience wise,

57
00:03:19.571 --> 00:03:25.001
is that clicking on one of the links
pops up that page in a modal, okay.

58
00:03:25.001 --> 00:03:26.520
Now the modal already exists.

59
00:03:26.520 --> 00:03:29.440
You don't have to define the modal or
its CSS or anything.

60
00:03:29.440 --> 00:03:33.960
But we need to actually invoke that
model and have it load the code,

61
00:03:33.960 --> 00:03:37.010
load the URL from one of these
links that's clicked on.

62
00:03:38.190 --> 00:03:38.690
Okay.

63
00:03:40.620 --> 00:03:45.438
So our first step is to
set up a click handler.

64
00:03:45.438 --> 00:03:49.610
And we wanna figure out on what do I
want to attach my click handler to.

65
00:03:50.870 --> 00:03:53.250
Well there are some links there
that we wanna attach to, so

66
00:03:53.250 --> 00:03:56.930
you should probably
open up the index.html.

67
00:03:56.930 --> 00:03:59.617
And get a little bit familiar with
the markup that I've provided.

68
00:04:01.908 --> 00:04:06.969
&gt;&gt; Kyle Simpson: Specifically, I'll call
your attention to these links right here,

69
00:04:06.969 --> 00:04:10.412
which are in fact the register and
login links.

70
00:04:18.690 --> 00:04:21.320
&gt;&gt; Kyle Simpson: So
what we wanna do is get those links and

71
00:04:21.320 --> 00:04:25.227
attach event handlers to them so
that when they are clicked

72
00:04:25.227 --> 00:04:29.550
they fire our event handlers
rather than just doing a navigate.

73
00:04:30.570 --> 00:04:35.150
Now I've provided these rel attributes

74
00:04:35.150 --> 00:04:38.730
on all of these different elements
that you need to interact with.

75
00:04:38.730 --> 00:04:44.579
You notice I'm saying the rel = and then
I have a value in there like js-register.

76
00:04:44.579 --> 00:04:48.150
There's lots of different
schools of thought.

77
00:04:48.150 --> 00:04:53.580
We're on task 1, it's being asked in
the chatroom what tasks, where on task 1.

78
00:04:53.580 --> 00:04:56.860
And we're on the first step of task 1.

79
00:04:56.860 --> 00:05:01.120
There's lots of different schools of
thought of how from your JavaScript code

80
00:05:01.120 --> 00:05:04.284
should you figure out what elements
in the DOM you want to interact with.

81
00:05:04.284 --> 00:05:09.185
A lot of people like to put
an ID on their element and

82
00:05:09.185 --> 00:05:10.685
then look up the element by its ID.

83
00:05:10.685 --> 00:05:15.965
It's a very common and very powerful,
practice your pattern.

84
00:05:15.965 --> 00:05:20.655
I'm not a big fan of that approach and
the reason is that IDs are usually

85
00:05:20.655 --> 00:05:24.025
more used in your CSS.

86
00:05:24.025 --> 00:05:27.820
If I open up the CSS file
that's provided with the site.

87
00:05:29.620 --> 00:05:33.500
Probably the part that I'm least
proud of because I'm not really a CSS

88
00:05:33.500 --> 00:05:34.880
person at all.

89
00:05:34.880 --> 00:05:39.010
But you notice in my CSS, I have several
places where I'm referencing elements

90
00:05:39.010 --> 00:05:43.700
by their ID like pound page and I've got
a few down here like pound carousel.

91
00:05:43.700 --> 00:05:47.350
IDs are much more commonly
associated with attaching

92
00:05:47.350 --> 00:05:49.630
styles to a specific element in your page.

93
00:05:51.540 --> 00:05:56.440
And the problem is not on small projects
but on big projects what you'll

94
00:05:56.440 --> 00:06:01.030
very quickly learn in your JavaScript
career, is that it's very common, for

95
00:06:01.030 --> 00:06:06.070
somebody to come through and re-factor the
markup of your page and change out the IDs

96
00:06:06.070 --> 00:06:10.598
or to change the way the CSS works and
to pick different ID values.

97
00:06:10.598 --> 00:06:14.260
And if your JavaScript is also
relying on that information,

98
00:06:14.260 --> 00:06:16.370
then your JavaScript breaks.

99
00:06:16.370 --> 00:06:20.550
So it's just one more piece that you have
to maintain, if you change an ID and

100
00:06:20.550 --> 00:06:24.330
it's used for CSS and you change an ID and
it's also used for JavaScript,

101
00:06:24.330 --> 00:06:26.570
now you're not gonna fix
them in both places.

102
00:06:26.570 --> 00:06:27.860
So I prefer.

103
00:06:27.860 --> 00:06:30.660
I don't care what happens to the CSS
folks, I'm not a CSS person so

104
00:06:30.660 --> 00:06:32.012
they can do whatever they want.

105
00:06:32.012 --> 00:06:35.749
But in the JavaScript world I don't
like to use ID's because I don't

106
00:06:35.749 --> 00:06:38.779
like to have to worry that
somebody is gonna come back and

107
00:06:38.779 --> 00:06:40.980
make me have to change a bunch of my code.

108
00:06:40.980 --> 00:06:44.917
&gt;&gt; Speaker 2: Just a quick [INAUDIBLE]
smacks guy has the same thing to say

109
00:06:44.917 --> 00:06:47.304
about IDs in relationship to CSS.

110
00:06:47.304 --> 00:06:48.878
&gt;&gt; Kyle Simpson: Good,
he's a smart dude so

111
00:06:48.878 --> 00:06:53.820
that probably means that I'm just
cribbing off of some other smart person.

112
00:06:53.820 --> 00:06:56.210
So, I don't like to use
IDs in my JavaScript.

113
00:06:56.210 --> 00:07:01.430
A lot of people use IDs in JavaScript and
class names only for CSS.

114
00:07:03.020 --> 00:07:06.010
Still it's not my particular brand.

115
00:07:06.010 --> 00:07:13.530
So another thing that people will do
is they will attach a data attribute.

116
00:07:13.530 --> 00:07:14.940
That's a new HTML5 thing.

117
00:07:14.940 --> 00:07:18.670
It'll attach a data attribute for
looking at elements.

118
00:07:18.670 --> 00:07:22.340
My preferred approach,
this is all just a preamble to say,

119
00:07:22.340 --> 00:07:25.160
my preferred approach is
to use the rel attribute.

120
00:07:25.160 --> 00:07:29.260
The reason I like this
attribute is that it is valid

121
00:07:29.260 --> 00:07:32.370
on nearly every single
element in your page.

122
00:07:32.370 --> 00:07:35.980
But almost all elements,
it doesn't mean anything on them.

123
00:07:35.980 --> 00:07:38.940
So it's just sitting there valid but
it has no meaning.

124
00:07:38.940 --> 00:07:42.220
Which means it's a nice little
like hook for us to use.

125
00:07:42.220 --> 00:07:44.100
&gt;&gt; Speaker 3: What was
its purpose originally?

126
00:07:44.100 --> 00:07:47.420
&gt;&gt; Kyle Simpson: So
what rel means, is relationship.

127
00:07:48.530 --> 00:07:49.200
Okay?

128
00:07:49.200 --> 00:07:55.430
Now look at, for example,
rel nofollow on an a tag.

129
00:07:55.430 --> 00:07:56.580
That's actually a real thing.

130
00:07:56.580 --> 00:07:58.450
That's not something I've made up.

131
00:07:58.450 --> 00:08:00.680
Rel nofollow on &lt;a&gt; tags.

132
00:08:00.680 --> 00:08:03.090
What that tells a search engine is.

133
00:08:03.090 --> 00:08:06.010
The relationship between
the page that I'm linking to and

134
00:08:06.010 --> 00:08:08.450
my page is no relationship at all.

135
00:08:08.450 --> 00:08:10.870
Don't follow it,
don't give it any search engine juice.

136
00:08:10.870 --> 00:08:13.450
And that's a very common
thing in the SEO world

137
00:08:13.450 --> 00:08:16.350
is to put nofollow
relationships on your links.

138
00:08:16.350 --> 00:08:18.720
For pages that you're linking to for
information but

139
00:08:18.720 --> 00:08:21.010
you're not endorsing them in any way.

140
00:08:21.010 --> 00:08:25.410
Okay, so here rel means
the relationship between my page and

141
00:08:25.410 --> 00:08:29.140
some other page.

142
00:08:29.140 --> 00:08:33.420
Another place that rel is used that you'll
very commonly see is on the link tag.

143
00:08:34.700 --> 00:08:42.480
And here the relationship is pointing at
another file, not a URL, but another file.

144
00:08:42.480 --> 00:08:45.094
And it's saying the relationship
between that file and

145
00:08:45.094 --> 00:08:47.323
my file is that I want to
use him as a stylesheet.

146
00:08:49.480 --> 00:08:51.105
&gt;&gt; Kyle Simpson: But
in both of those places,

147
00:08:51.105 --> 00:08:55.320
relationship means relationship
between myself and some other entity.

148
00:08:56.510 --> 00:09:01.490
So I, Kyle, took that and
extended it slightly,

149
00:09:01.490 --> 00:09:04.670
I pushed the envelope a little bit
further and I said, if I wanted to

150
00:09:04.670 --> 00:09:08.850
define a relationship between a DOM
element and my JavaScript code.

151
00:09:10.310 --> 00:09:14.270
Then I can use the rel attribute
to give it some identifier for

152
00:09:14.270 --> 00:09:17.450
the relationship between element and
JavaScript code.

153
00:09:17.450 --> 00:09:20.890
So that's why I like rel is that
it defines a relationship here.

154
00:09:20.890 --> 00:09:25.440
In this case it gives an identifier
that I can hook to, and the relationship

155
00:09:25.440 --> 00:09:29.080
is telling me that's something I'm only
gonna use for JavaScript purposes.

156
00:09:29.080 --> 00:09:31.644
Not gonna use it for
any other purpose other than JavaScript.

157
00:09:35.027 --> 00:09:37.880
&gt;&gt; Kyle Simpson: Lots of different
schools of thought on it.

158
00:09:37.880 --> 00:09:40.310
You don't have to get too wrapped up
if you totally disagree with me and

159
00:09:40.310 --> 00:09:43.240
you like to use ideas or
that's the way you end up

160
00:09:43.240 --> 00:09:46.090
if the company does that where you work,
that's totally fine too.

161
00:09:46.090 --> 00:09:47.440
But I like to use rel attribute, so

162
00:09:47.440 --> 00:09:51.940
the code that we're working with, that'll
be kinda already going with the flow.

