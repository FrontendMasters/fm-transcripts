WEBVTT

1
00:00:00.016 --> 00:00:04.147
&gt;&gt; Brian Holt: Okay, so start our
template here and then the completed one,

2
00:00:04.147 --> 00:00:08.049
we already did that, so
we are gonna go into our projects.

3
00:00:08.049 --> 00:00:10.918
Nothing in here is
particularly interesting.

4
00:00:10.918 --> 00:00:16.633
The only thing is here I have an image
of everyone's favorite tiny terrorist,

5
00:00:16.633 --> 00:00:18.377
which is my dog, Luna.

6
00:00:18.377 --> 00:00:23.148
But feel free if you want to just replace
Luna.jpg with your image that you want

7
00:00:23.148 --> 00:00:26.780
to be edited, cuz we're gonna
make a little image editor.

8
00:00:28.756 --> 00:00:33.352
&gt;&gt; Brian Holt: Okay,
so let's hop into this,

9
00:00:33.352 --> 00:00:38.291
and we're gonna create a file here

10
00:00:38.291 --> 00:00:42.903
in source called slider.jsx.

11
00:00:42.903 --> 00:00:49.519
We're going to export default,
&gt;&gt; Brian Holt: Function Slider,

12
00:00:49.519 --> 00:00:54.195
and this is gonna have value,
defferedValue.

13
00:00:57.135 --> 00:00:59.560
&gt;&gt; Brian Holt: All right,
I just called it deffered, I guess, yeah.

14
00:00:59.560 --> 00:01:03.993
Unchanged name and

15
00:01:03.993 --> 00:01:08.464
max,
&gt;&gt; Brian Holt: Okay.

16
00:01:10.062 --> 00:01:12.287
&gt;&gt; Brian Holt: And
then we're going to return,

17
00:01:12.287 --> 00:01:16.503
this is actually just gonna be
like the actual slider control.

18
00:01:16.503 --> 00:01:20.188
So you're gonna have an LI,

19
00:01:20.188 --> 00:01:26.338
I'm gonna call this className ="slider".

20
00:01:26.338 --> 00:01:30.099
And we're gonna have label and

21
00:01:30.099 --> 00:01:34.591
it's gonna be htmlFor=(name).

22
00:01:39.287 --> 00:01:44.320
&gt;&gt; Brian Holt: Name, and
then underneath that we're

23
00:01:44.320 --> 00:01:48.743
gonna say, if value is not equal to

24
00:01:48.743 --> 00:01:54.182
deferred,
&gt;&gt; Brian Holt: Then

25
00:01:54.182 --> 00:01:57.012
we're gonna say it's updating.

26
00:02:00.376 --> 00:02:05.805
&gt;&gt; Brian Holt: And if it's done,
then we'll just not put anything, okay?

27
00:02:05.805 --> 00:02:12.486
And then we're gonna have an input here,
&gt;&gt; Brian Holt: And a bunch of stuff.

28
00:02:12.486 --> 00:02:15.824
So type is gonna be equal to range,

29
00:02:15.824 --> 00:02:20.437
that's what we call
sliders in browser speak.

30
00:02:20.437 --> 00:02:25.161
Name, id is name, name is name,
min is gonna be equal to zero,

31
00:02:25.161 --> 00:02:29.708
cuz I think everything that we
are gonna be doing is zero, and

32
00:02:29.708 --> 00:02:32.853
then the max is just
gonna be equal to max.

33
00:02:34.758 --> 00:02:39.182
&gt;&gt; Brian Holt: And then value is
going to be equal to value, and

34
00:02:39.182 --> 00:02:43.175
onChange is going to be equal to onChange.

35
00:02:46.476 --> 00:02:50.531
&gt;&gt; Brian Holt: Okay, close that tag and
then we're gonna have an output,

36
00:02:52.515 --> 00:02:56.398
&gt;&gt; Brian Holt: htmlFor=(name), and

37
00:02:56.398 --> 00:03:03.977
actual value is going to be value,
&gt;&gt; Brian Holt: And

38
00:03:03.977 --> 00:03:10.186
deferred value is going to be deferred.

39
00:03:10.186 --> 00:03:12.542
So mostly a lot of this is just so

40
00:03:12.542 --> 00:03:18.178
we can actually see how much is lagging
across, dragging these sliders.

41
00:03:18.178 --> 00:03:20.394
Beyond that, not that interesting.

42
00:03:20.394 --> 00:03:24.866
This part is actually kind
of interesting right here,

43
00:03:24.866 --> 00:03:28.766
this is how you tell if
something is out of sync.

44
00:03:28.766 --> 00:03:33.607
They don't give you a, is updating flag.

45
00:03:33.607 --> 00:03:36.310
So the way that you check that is
if you see a value and deferred or

46
00:03:36.310 --> 00:03:38.920
not the same thing,
then you know that they're outta sync.

47
00:03:41.096 --> 00:03:41.807
&gt;&gt; Brian Holt: Which is good, right?

48
00:03:41.807 --> 00:03:45.267
That's actually what we want, we want
deferred and value to be different.

49
00:03:47.491 --> 00:03:52.081
&gt;&gt; Brian Holt: Okay, now we're gonna go
create a file here called display image.

50
00:03:52.081 --> 00:03:59.184
Display image.jsx, and
we're going to import img from images/,

51
00:03:59.184 --> 00:04:05.806
if you're just using my file,
then just do, it's Luna.jpg.

52
00:04:05.806 --> 00:04:11.912
But if you put your own file to do in
there, just put your path in there.

53
00:04:11.912 --> 00:04:19.039
Const JANK_DELAY, we're gonna put 100
milliseconds of delay in renders,

54
00:04:19.039 --> 00:04:24.817
and then we're going to export
default function display image.

55
00:04:24.817 --> 00:04:27.545
And then we're gonna
take in a filter style.

56
00:04:29.794 --> 00:04:32.658
&gt;&gt; Brian Holt: This is just gonna be a CSS
string of all the filters that we want to

57
00:04:32.658 --> 00:04:33.622
apply to something.

58
00:04:33.622 --> 00:04:38.069
We're gonna take that same expensive
render function that we used before,

59
00:04:38.069 --> 00:04:42.518
again, just to really make this super
obvious of where this can be helpful.

60
00:04:44.604 --> 00:04:49.171
&gt;&gt; Brian Holt: Generally, don't suggest
shipping this function in your code,

61
00:04:49.171 --> 00:04:52.033
that's a Brian Holt pro tip right there.

62
00:04:54.957 --> 00:04:59.408
&gt;&gt; Brian Holt: Performance.now,
it does remind me at my first job,

63
00:04:59.408 --> 00:05:04.054
I found Someone was doing UI testing and
had artificially

64
00:05:04.054 --> 00:05:09.112
slowed down the UI and
then left it in there for several years.

65
00:05:09.112 --> 00:05:12.734
And everyone's like, this page is always
really slow, and no one knew why, but

66
00:05:12.734 --> 00:05:13.916
no one wanted to touch it.

67
00:05:13.916 --> 00:05:15.784
So it just stayed for a long time.

68
00:05:15.784 --> 00:05:18.840
&gt;&gt; Speaker 2: Then you get to
introduce the performance enhancement.

69
00:05:18.840 --> 00:05:22.161
&gt;&gt; Brian Holt: Man, I looked like I
was the Greek god of performance.

70
00:05:22.161 --> 00:05:25.990
So I was like,
I have fixed the [LAUGH] web page.

71
00:05:25.990 --> 00:05:29.134
Yep, that's how I got a promotion.

72
00:05:29.134 --> 00:05:31.859
That's not true.

73
00:05:33.551 --> 00:05:36.239
&gt;&gt; Brian Holt: But the developer that
had introduced it had left already, so

74
00:05:36.239 --> 00:05:38.626
we did get to make fun of that
person behind their back.

75
00:05:40.724 --> 00:05:44.346
&gt;&gt; Brian Holt: Okay return null, this is
the exact same one that we did before.

76
00:05:47.666 --> 00:05:49.934
&gt;&gt; Brian Holt: And
then we're going to return,

77
00:05:49.934 --> 00:05:53.337
we're gonna put this into
these empty tags here.

78
00:05:53.337 --> 00:05:58.146
Then we're gonna first do
an expensive render, and

79
00:05:58.146 --> 00:06:01.863
then we're gonna do img src=(img),

80
00:06:01.863 --> 00:06:07.110
alt equals whatever you wanna say,
I'm gonna say Luna,

81
00:06:07.110 --> 00:06:13.908
and then style=((filter: filterStyle)),
something like that.

82
00:06:15.917 --> 00:06:19.046
&gt;&gt; Brian Holt: And then we're just
gonna say &lt;p&gt;Last render:&lt;/p&gt; so

83
00:06:19.046 --> 00:06:23.107
that you can kinda keep track of this as
well, of how frequently this changes.

84
00:06:23.107 --> 00:06:27.039
Date.now(), okay,

85
00:06:27.039 --> 00:06:31.726
that is it for display image.

86
00:06:31.726 --> 00:06:36.391
Basically, we're simulating that this is
a very expensive image to render that

87
00:06:36.391 --> 00:06:38.724
the image processing is going on here and

88
00:06:38.724 --> 00:06:42.037
then it's not just CSS and
it's gonna go really slowly.

89
00:06:44.409 --> 00:06:51.808
&gt;&gt; Brian Holt: Okay, now that we have
this, let's go ahead over to app.jsx.

90
00:06:54.808 --> 00:07:00.507
&gt;&gt; Brian Holt: Okay,
import useState from react.

91
00:07:00.507 --> 00:07:04.462
Import slider from slider, and

92
00:07:04.462 --> 00:07:09.734
import display image from display image,

93
00:07:09.734 --> 00:07:13.988
and export default function app.

94
00:07:13.988 --> 00:07:22.095
And we're gonna have some several
hooks here const blur, set blur.

95
00:07:23.796 --> 00:07:25.954
&gt;&gt; Brian Holt: useState, and
we'll have this one start at zero.

96
00:07:25.954 --> 00:07:28.044
This one will go from like 0 to 20 pixels,

97
00:07:28.044 --> 00:07:31.332
cuz once you're beyond 20 pixels of blur,
it's blurry, right?

98
00:07:31.332 --> 00:07:34.919
It doesn't help [LAUGH]
to get further blurry.

99
00:07:34.919 --> 00:07:38.439
Const, brightness, brightness, wow,

100
00:07:38.439 --> 00:07:42.752
damn, that's not capitalized,
setbrightness.

101
00:07:42.752 --> 00:07:48.489
This one will have start at 100 cuz
100 brightness is a normal image.

102
00:07:48.489 --> 00:07:55.085
So useState 100 and then we'll allow
people to set it from 0 to 200.

103
00:07:55.085 --> 00:08:00.788
Const contrast,
I think it's the same thing here for

104
00:08:00.788 --> 00:08:06.248
contrast, setcontrast = useState(100).

105
00:08:06.248 --> 00:08:13.726
And then const saturate,
&gt;&gt; Brian Holt: Setsaturate,

106
00:08:16.524 --> 00:08:18.702
&gt;&gt; Brian Holt: This action again,

107
00:08:18.702 --> 00:08:22.165
retrospect is a 2020 here.

108
00:08:22.165 --> 00:08:26.697
But this would have actually been
a perfect use case for use reducer.

109
00:08:26.697 --> 00:08:27.904
I hadn't really thought about that, but

110
00:08:27.904 --> 00:08:29.637
this would actually be really
good to use with use reducer.

111
00:08:29.637 --> 00:08:34.071
So that's a revision that
I leave to you to to do

112
00:08:34.071 --> 00:08:38.522
after this is go refactor
this to use reducer.

113
00:08:38.522 --> 00:08:42.515
Const sepia setSepia, that always
happens with me with use reducers,

114
00:08:42.515 --> 00:08:44.844
I'll write like this entire function and

115
00:08:44.844 --> 00:08:49.320
then I'll realize later this would have
been way simpler with the use reducer.

116
00:08:51.800 --> 00:08:54.268
&gt;&gt; Brian Holt: useState(0).

117
00:08:54.268 --> 00:08:56.365
Okay, we're gonna make a filter string.

118
00:08:56.365 --> 00:09:02.293
So filter style equals blur, and we're
just gonna make this a string like this.

119
00:09:04.232 --> 00:09:11.648
&gt;&gt; Brian Holt: Blur is going to be,
&gt;&gt; Brian Holt: Blur px.

120
00:09:15.399 --> 00:09:21.521
&gt;&gt; Brian Holt: Brightness is going to be,
this is just all valid CSS,

121
00:09:21.521 --> 00:09:26.313
but brightness percent, you can actually

122
00:09:26.313 --> 00:09:30.719
do the rest of these pretty similarly.

123
00:09:30.719 --> 00:09:35.331
So this one, and this one can be contrast,

124
00:09:35.331 --> 00:09:39.815
this one and this one can be saturate, and

125
00:09:39.815 --> 00:09:43.548
this one and this one can be sepia.

126
00:09:43.548 --> 00:09:48.726
If you're not following on VS Code,
it's, it's command D that

127
00:09:48.726 --> 00:09:53.727
I'm hitting that allows me to
select the next version of this.

128
00:09:53.727 --> 00:09:56.401
And then I can type both
of them at the same time.

129
00:09:56.401 --> 00:09:59.704
Most of my expertise in VS Code
comes from someone on the VS Code

130
00:09:59.704 --> 00:10:03.401
team yelling at me when I was not
doing something that they had built.

131
00:10:05.365 --> 00:10:08.804
&gt;&gt; Brian Holt: Learn by shame is actually
a very powerful way of doing things.

132
00:10:08.804 --> 00:10:15.057
That's why I'm proposing a rebrand in
front of masters to shaming masters.

133
00:10:15.057 --> 00:10:17.312
Send me my check in the mail, okay.

134
00:10:17.312 --> 00:10:23.806
&lt;div className="app"&gt;.

135
00:10:23.806 --> 00:10:29.818
&lt;h1&gt; will be deferred values, okay.

136
00:10:29.818 --> 00:10:33.417
And then we'll put our
display image up here, and

137
00:10:33.417 --> 00:10:36.856
the filter style will be
equal to filterStyle.

138
00:10:38.942 --> 00:10:42.927
You definitely could have parsed all
of these directy into display image and

139
00:10:42.927 --> 00:10:44.181
just use that in there.

140
00:10:44.181 --> 00:10:47.666
&gt;&gt; Brian Holt: I liked this because
it still encapsulates everything, and

141
00:10:47.666 --> 00:10:50.681
it's actually what display images needs,
right?

142
00:10:50.681 --> 00:10:53.813
So it made sense for me to do that,
display image here would still

143
00:10:53.813 --> 00:10:57.644
be memoizable, because this will change
every time that something changes.

144
00:10:57.644 --> 00:11:01.447
That's kinda the thought process
that I have in the back of my head.

145
00:11:01.447 --> 00:11:05.260
Both are valid, though, okay, and

146
00:11:05.260 --> 00:11:09.821
then we're gonna have a &lt;ul&gt; of sliders.

147
00:11:09.821 --> 00:11:14.015
Could really go for
a slider myself right now.

148
00:11:14.015 --> 00:11:21.138
Value equals blur,
&gt;&gt; Brian Holt: Deferred, we're

149
00:11:21.138 --> 00:11:24.939
just gonna make this like all the same
right now, so it's also going to be blur.

150
00:11:27.142 --> 00:11:32.173
&gt;&gt; Brian Holt: And
on change is going to be

151
00:11:32.173 --> 00:11:39.954
e, setBlur(e.target.value!),

152
00:11:39.954 --> 00:11:44.301
name="Blur", and

153
00:11:44.301 --> 00:11:47.746
max="20".

154
00:11:55.514 --> 00:12:00.480
&gt;&gt; Brian Holt: Okay, so that's blur, and
we just need to do the same thing for

155
00:12:00.480 --> 00:12:01.616
all of these.

156
00:12:01.616 --> 00:12:06.397
Again, if I was doing this by myself,
I would probably just say, hey,

157
00:12:06.397 --> 00:12:10.318
copilot, use all these hooks,
rewrite all these for me.

158
00:12:10.318 --> 00:12:14.216
But let's just go ahead and I don't know,
do you wanna see if it works?

159
00:12:14.216 --> 00:12:16.100
Let's see if it works.

160
00:12:16.100 --> 00:12:23.975
So,
&gt;&gt; Brian Holt: Give me a slider for

161
00:12:23.975 --> 00:12:28.303
each of the react hooks that I have.

162
00:12:32.288 --> 00:12:33.670
&gt;&gt; Brian Holt: See how we do.

163
00:12:38.037 --> 00:12:41.328
&gt;&gt; Brian Holt: It's using Cloud 3.7
Sonnet, which is usually pretty good.

164
00:12:44.088 --> 00:12:45.912
&gt;&gt; Brian Holt: I think I might
have it on the thinking model.

165
00:12:45.912 --> 00:12:47.298
It takes a lot longer, but

166
00:12:47.298 --> 00:12:50.326
the code you end up getting
usually ends up being better.

167
00:12:52.649 --> 00:12:54.561
&gt;&gt; Brian Holt: Man,
it even got the max numbers right,

168
00:12:54.561 --> 00:12:56.595
which actually I find pretty impressive.

169
00:12:56.595 --> 00:13:00.755
So again,
all I had to do is generate a slider for

170
00:13:00.755 --> 00:13:04.918
brightness, contrast, saturate and sepia.

171
00:13:08.139 --> 00:13:10.595
&gt;&gt; Brian Holt: I think I'm most impressed
that I actually got the max numbers right.

172
00:13:10.595 --> 00:13:13.250
I was expecting to have
to fix those at the end.

173
00:13:15.951 --> 00:13:19.037
&gt;&gt; Brian Holt: Cool,
any questions about that?

174
00:13:21.998 --> 00:13:28.068
&gt;&gt; Brian Holt: Right,
I need to run the server, please do that.

175
00:13:28.068 --> 00:13:31.582
This one does not have a server component,
so you don't need to do that.

176
00:13:34.140 --> 00:13:35.742
&gt;&gt; Brian Holt: So just npm run dev is

177
00:13:35.742 --> 00:13:37.877
fine,
&gt;&gt; Brian Holt: And

178
00:13:37.877 --> 00:13:39.312
let's try running this again.

179
00:13:39.312 --> 00:13:43.826
So we have our tiny terrorist right here.

180
00:13:43.826 --> 00:13:46.422
All these are set to correct things.

181
00:13:46.422 --> 00:13:50.202
And then kinda jank, right?

