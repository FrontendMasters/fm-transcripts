WEBVTT

1
00:00:00.000 --> 00:00:02.254
&gt;&gt; Brian Holt: So
let's refactor to use optimistic,

2
00:00:02.254 --> 00:00:04.653
we're also gonna use transition again.

3
00:00:04.653 --> 00:00:11.354
So at the top here,
we're going to import use optimistic,

4
00:00:11.354 --> 00:00:16.996
and we're going to say,
useTransition, okay?

5
00:00:16.996 --> 00:00:20.080
We're going to do a up here.

6
00:00:20.080 --> 00:00:26.224
The top we're gonna say
const isPending and

7
00:00:26.224 --> 00:00:29.885
startTransition again.

8
00:00:31.930 --> 00:00:36.001
&gt;&gt; Brian Holt: Because useTransition.

9
00:00:36.001 --> 00:00:42.945
And then underneath this
one we're gonna say,

10
00:00:42.945 --> 00:00:48.154
const (optimisticThoughts, and

11
00:00:48.154 --> 00:00:53.016
addOptimisticThought are going

12
00:00:53.016 --> 00:00:57.539
to be equal to useOptimistic.

13
00:00:57.539 --> 00:01:01.369
And then the first thing is we're gonna
give it thoughts cuz that's the one that

14
00:01:01.369 --> 00:01:03.272
it's going to populate itself off of.

15
00:01:03.272 --> 00:01:05.946
Then we're gonna give
it an update function.

16
00:01:05.946 --> 00:01:10.725
So we're gonna say oldThoughts,
newThought.

17
00:01:12.813 --> 00:01:16.518
&gt;&gt; Brian Holt: Okay,
and then I'm gonna say,

18
00:01:16.518 --> 00:01:20.780
new Thought,...oldThoughts.

19
00:01:23.059 --> 00:01:25.359
&gt;&gt; Brian Holt: You could even do something
like, I have this in reverse order.

20
00:01:25.359 --> 00:01:27.189
Anyway, we'll talk about that in a second.

21
00:01:27.189 --> 00:01:30.527
Okay, so
now I have this optimisticThoughts array,

22
00:01:30.527 --> 00:01:35.200
which is basically just going to be
thoughts most of the time, except when I

23
00:01:35.200 --> 00:01:39.964
call this addOptimistic thought,
these two are gonna differ a little bit.

24
00:01:39.964 --> 00:01:44.712
And then once they're reconciled,
then they'll be the same thing again.

25
00:01:44.712 --> 00:01:47.253
So inside of postDeepThought.

26
00:01:49.699 --> 00:01:52.056
&gt;&gt; Brian Holt: We're gonna
come down here to setThoughts.

27
00:01:55.452 --> 00:02:00.056
&gt;&gt; Brian Holt: So
I'm gonna say down here, startTransition.

28
00:02:00.056 --> 00:02:05.663
You might be wondering, it's like,
do I have to put this in a transition?

29
00:02:05.663 --> 00:02:08.282
And I believe the answer is yes,

30
00:02:08.282 --> 00:02:13.620
cuz you have to mark this as being
like a low priority re-render.

31
00:02:13.620 --> 00:02:16.628
And so
this all just works inside of transitions.

32
00:02:21.866 --> 00:02:23.626
&gt;&gt; Brian Holt: I have this
entire thing marked as one.

33
00:02:23.626 --> 00:02:26.304
Is that really what I wanna do?

34
00:02:26.304 --> 00:02:30.275
Yeah, I mean,
I guess let's just follow my notes here.

35
00:02:30.275 --> 00:02:32.581
So I think you could actually
just mark it at the end, but

36
00:02:32.581 --> 00:02:35.100
we're just gonna do the whole
thing inside of a transition.

37
00:02:43.885 --> 00:02:47.535
&gt;&gt; Brian Holt: To make sure this is
async it is, that's totally fine.

38
00:02:47.535 --> 00:02:49.834
Cool, that all sounds good.

39
00:02:49.834 --> 00:02:58.077
And then inside of this,
&gt;&gt; Brian Holt: Yeah,

40
00:02:58.077 --> 00:03:00.696
we're gonna do up here as well,

41
00:03:00.696 --> 00:03:05.552
very first thing we're gonna
say addOptimisticThought.

42
00:03:05.552 --> 00:03:10.598
You could just put directly the thought
in there but I'm gonna do this, dollar

43
00:03:10.598 --> 00:03:15.891
sign this, and I'm gonna say thought and
then I'm just gonna put a loading here.

44
00:03:19.605 --> 00:03:23.977
&gt;&gt; Brian Holt: So then the user
knows this hasn't really been sent.

45
00:03:23.977 --> 00:03:27.397
I'm showing you that it's been sent,
but it actually hasn't been sent yet.

46
00:03:27.397 --> 00:03:31.423
And then once this actually setThoughts,
newThoughts gets called down here,

47
00:03:31.423 --> 00:03:33.537
this will implicitly drop this, right?

48
00:03:33.537 --> 00:03:38.497
Because whatever comes back from the API
is going to include just the normal

49
00:03:38.497 --> 00:03:39.529
value, okay?

50
00:03:39.529 --> 00:03:40.513
So close here.

51
00:03:40.513 --> 00:03:43.989
The last thing that we need to do here
is instead of mapping over thoughts,

52
00:03:43.989 --> 00:03:46.136
we're gonna map over optimisticThoughts.

53
00:03:49.786 --> 00:03:52.669
&gt;&gt; Brian Holt: So now what do we expect?

54
00:03:52.669 --> 00:03:58.349
I'm gonna type in here
some real deep thoughts.

55
00:03:58.349 --> 00:04:01.478
I'm gonna call this and
the notice that shows the right away,

56
00:04:01.478 --> 00:04:04.917
which is really cool, and
it shows this loading indicator as well.

57
00:04:04.917 --> 00:04:06.690
And then once it actually hits the API,

58
00:04:06.690 --> 00:04:08.963
it's gonna say some real deep thoughts,
right?

59
00:04:08.963 --> 00:04:13.460
So it actually drops the loading,
this feels snappy, right?

60
00:04:13.460 --> 00:04:17.192
This feels really good,
I don't know, it feels good to me.

61
00:04:17.192 --> 00:04:22.120
Let's for funsies,
I'm gonna turn this up to 90% error rate.

62
00:04:22.120 --> 00:04:24.835
So you see what it looks
like when you don't do it.

63
00:04:27.576 --> 00:04:34.335
&gt;&gt; Brian Holt: So if I say lol here, this
thought was not deep enough do better.

64
00:04:34.335 --> 00:04:35.750
It just drops it, right?

65
00:04:35.750 --> 00:04:38.712
Because it sees like this nothing
actually got added to this.

66
00:04:38.712 --> 00:04:42.662
And so once that's transition ends and
nothing's been added to it,

67
00:04:42.662 --> 00:04:45.396
it's just gonna go back
to the original state.

68
00:04:45.396 --> 00:04:47.137
So I don't have to write
any additional machinery.

69
00:04:47.137 --> 00:04:49.605
It just goes back to the original state
that we started at the beginning of

70
00:04:49.605 --> 00:04:50.216
the transition.

71
00:04:53.376 --> 00:04:55.282
&gt;&gt; Brian Holt: Cool, right?

72
00:04:55.282 --> 00:04:58.372
Any deep thoughts?

73
00:05:05.520 --> 00:05:08.502
&gt;&gt; Brian Holt: Some of these
other ones were pretty funny.

74
00:05:08.502 --> 00:05:12.407
People say no JS is not blocking, but I
found it blocks me from having meaningful

75
00:05:12.407 --> 00:05:16.037
relationships with anyone who doesn't
know what a callback is, [LAUGH].

76
00:05:16.037 --> 00:05:18.671
It's just true, hurts a little.

77
00:05:18.671 --> 00:05:22.912
Sometimes I stay awake at
night wondering if I'm

78
00:05:22.912 --> 00:05:27.679
manipulating the DOM or
if the DOM is manipulating me.

79
00:05:27.679 --> 00:05:31.909
Some really good deep thoughts here.

80
00:05:31.909 --> 00:05:39.112
Cool, any questions about optimism,
just in general?

81
00:05:39.112 --> 00:05:41.410
Are you optimistic?

82
00:05:41.410 --> 00:05:43.165
I don't know if I am.

83
00:05:43.165 --> 00:05:49.108
This does prove the point that this
has to be wrapped in a transition or

84
00:05:49.108 --> 00:05:50.756
it doesn't work.

85
00:05:50.756 --> 00:05:56.566
You can see that it's getting mad at
me for not having this wrapped in one.

86
00:05:56.566 --> 00:06:00.642
So if we add back the transition here,
which we should.

87
00:06:04.352 --> 00:06:09.205
&gt;&gt; Brian Holt: And now I'm going to add a
bunch here, and you'll notice that it has

88
00:06:09.205 --> 00:06:13.807
some kinda strange behavior that
now it's duplicating them and

89
00:06:13.807 --> 00:06:19.028
re-adding them back, and
eventually it'll reconcile to be correct.

90
00:06:19.028 --> 00:06:23.137
The real issue here is that
we're not deduplicating up here.

91
00:06:23.137 --> 00:06:28.134
We could add some more logic in here
that we wouldn't add these optimistic

92
00:06:28.134 --> 00:06:32.648
values at the same time that
the optimistic value exists in there,

93
00:06:32.648 --> 00:06:36.864
particularly when there's
multiple here and here merging.

94
00:06:36.864 --> 00:06:40.286
So these don't have IDs, and
I'm not gonna code this on the fly, but

95
00:06:40.286 --> 00:06:42.234
that's where you would add the logic.

96
00:06:42.234 --> 00:06:45.638
Is just making sure that
you're being judicious about

97
00:06:45.638 --> 00:06:48.306
where you're adding optimistic values.

98
00:06:48.306 --> 00:06:50.214
&gt;&gt; Speaker 2: Do you have any thoughts or

99
00:06:50.214 --> 00:06:54.651
deep thoughts on how to handle
errors with user optimistic?

100
00:06:54.651 --> 00:06:56.552
Or what's the flow for handling errors?

101
00:06:56.552 --> 00:06:58.451
&gt;&gt; Brian Holt: Yeah, I mean,
we saw it a little bit.

102
00:06:58.451 --> 00:07:04.708
Let's just momentarily turn
this back up to like 0.9 here.

103
00:07:04.708 --> 00:07:08.306
&gt;&gt; Speaker 3: [COUGH]
&gt;&gt; Brian Holt: So I mean, you can see here

104
00:07:08.306 --> 00:07:13.771
that I did just the lazy thing and
showed an alert.

105
00:07:13.771 --> 00:07:17.070
So obviously never use alert Like that.

106
00:07:17.070 --> 00:07:18.901
It's just the biggest user anti-pattern.

107
00:07:18.901 --> 00:07:23.057
It's like user hostile, obviously.

108
00:07:23.057 --> 00:07:25.943
So I like the way that iMessage does it,

109
00:07:25.943 --> 00:07:29.623
where it still shows you
kinda optimistic value.

110
00:07:29.623 --> 00:07:32.955
But it just has a big red
exclamation point on it that says,

111
00:07:32.955 --> 00:07:36.768
you tried to send this,
do you wanna try and send it again, right?

112
00:07:36.768 --> 00:07:38.570
Because it didn't succeed.

113
00:07:38.570 --> 00:07:44.009
So in a messaging app, or something like
here, we could just show a red exclamation

114
00:07:44.009 --> 00:07:49.473
point there and say, I do wanna send this,
it is deep enough, believe me, right?

115
00:07:49.473 --> 00:07:51.560
And then you would try and resend it.

116
00:07:51.560 --> 00:07:58.496
But it's a UI design problem and
not necessarily a React problem, right?

