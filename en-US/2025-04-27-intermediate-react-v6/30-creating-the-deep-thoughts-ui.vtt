WEBVTT

1
00:00:00.000 --> 00:00:02.893
&gt;&gt; Brian Holt: So
we opened our starter project.

2
00:00:02.893 --> 00:00:03.899
I have a link there.

3
00:00:03.899 --> 00:00:06.261
You ran npm run install.

4
00:00:06.261 --> 00:00:08.967
That's all good.

5
00:00:08.967 --> 00:00:10.360
Let me open this.

6
00:00:10.360 --> 00:00:14.652
I did already open it.

7
00:00:14.652 --> 00:00:17.596
So I have a little server here.

8
00:00:17.596 --> 00:00:19.530
I have some deep thoughts.

9
00:00:19.530 --> 00:00:23.964
Some of these are deeply funny, and
some of them are less funny, but again,

10
00:00:23.964 --> 00:00:28.397
generated by ChatGpt, and we are going
to allow users, when they have a deep

11
00:00:28.397 --> 00:00:33.063
thought, to come in and type their deep
thought and put it in, and then save it.

12
00:00:33.063 --> 00:00:35.519
That's all the server does.

13
00:00:35.519 --> 00:00:39.129
So it just basically
responds to deep thoughts.

14
00:00:39.129 --> 00:00:44.313
And we're also, I put in a 20% error rate,
so that you can see what these look like.

15
00:00:44.313 --> 00:00:47.356
That's what everyone gets afraid of when
like with these optimistic UI updates,

16
00:00:47.356 --> 00:00:49.001
is like what happens if there's a problem?

17
00:00:49.001 --> 00:00:53.662
And the nice thing is this kind of whole
thing kind of just takes cares of problems

18
00:00:53.662 --> 00:00:54.231
as we go.

19
00:00:54.231 --> 00:00:57.148
So I'll show you, but if you see
errors that it's intentional, and

20
00:00:57.148 --> 00:00:59.977
I made that configurable here, so
we have a delay of five seconds.

21
00:00:59.977 --> 00:01:02.073
Here, so
you can see the updates happening, and

22
00:01:02.073 --> 00:01:05.810
this has an error rate of 20%, but feel
free, like while you're developing this,

23
00:01:05.810 --> 00:01:08.854
you can turn it down to like 5% or
just zero, or something like that.

24
00:01:08.854 --> 00:01:12.647
I'll leave it at point two.

25
00:01:12.647 --> 00:01:15.789
Okay, so
let's build a UI that shows deep thoughts.

26
00:01:15.789 --> 00:01:18.710
So open app.jsx here.

27
00:01:23.189 --> 00:01:28.688
&gt;&gt; Brian Holt: And
we are gonna say export thoughts and

28
00:01:28.688 --> 00:01:34.019
setThoughts, export, I don't know

29
00:01:34.019 --> 00:01:40.850
why export const rather
= useState from react,

30
00:01:40.850 --> 00:01:45.848
so we gotta import that at the top and

31
00:01:45.848 --> 00:01:49.531
it'll be an empty array.

32
00:01:49.531 --> 00:01:52.683
Our deepThoughts,
I I just called this thoughts, so

33
00:01:52.683 --> 00:01:54.653
we'll just call that thoughts.

34
00:01:54.653 --> 00:01:58.440
Const thought and setThought.

35
00:01:58.440 --> 00:02:03.380
So this is gonna be actually what
the user types into the form,

36
00:02:03.380 --> 00:02:07.757
equals use state, and
it'll just be an empty string.

37
00:02:07.757 --> 00:02:14.397
And then async function

38
00:02:14.397 --> 00:02:20.043
PostDeepThought.

39
00:02:20.043 --> 00:02:26.586
We're gonna setThought to
be empty when that happens,

40
00:02:26.586 --> 00:02:33.823
and then going to say const
response = await Fetch thoughts,

41
00:02:33.823 --> 00:02:40.661
and we can give a configuration so
the method will be POST.

42
00:02:44.124 --> 00:02:49.842
&gt;&gt; Brian Holt: Headers will be,
we just said that

43
00:02:49.842 --> 00:02:57.736
it's a content-Type:application/json.

44
00:03:02.715 --> 00:03:03.840
&gt;&gt; Brian Holt: Okay.

45
00:03:07.493 --> 00:03:15.963
&gt;&gt; Brian Holt: And
body is JSON.stringify and thought.

46
00:03:15.963 --> 00:03:21.041
So this is how we're going to get
thoughts back from the API, and

47
00:03:21.041 --> 00:03:26.965
we're gonna say, just so that we can
really call out when we have an error,

48
00:03:26.965 --> 00:03:31.222
if response.ok or if not,
if the response is not ok.

49
00:03:31.222 --> 00:03:36.109
Rather, then we're gonna do the most
lovely form of UI that exists

50
00:03:36.109 --> 00:03:37.342
in the browser.

51
00:03:37.342 --> 00:03:42.259
Day an alert and
you're to say this thought was not

52
00:03:42.259 --> 00:03:47.597
deep enough.,
&gt;&gt; Brian Holt: Do better.

53
00:03:49.404 --> 00:03:51.665
&gt;&gt; Brian Holt: And then we'll just return.

54
00:03:53.290 --> 00:03:55.902
&gt;&gt; Brian Holt: And then we'll say const.

55
00:03:57.476 --> 00:04:04.735
&gt;&gt; Brian Holt: Thoughts,
newThoughts = await response.json and

56
00:04:04.735 --> 00:04:09.251
set thoughts to be new thoughts so

57
00:04:09.251 --> 00:04:12.636
I have it so that the API,

58
00:04:12.636 --> 00:04:18.119
every single time reach returns back all

59
00:04:18.119 --> 00:04:23.296
of the thoughts that exist in memory.

60
00:04:24.728 --> 00:04:25.567
&gt;&gt; Brian Holt: Okay.

61
00:04:31.572 --> 00:04:34.722
&gt;&gt; Brian Holt: So I should say that we're
doing this just kind of the old way,

62
00:04:34.722 --> 00:04:38.367
which is what users are gonna type
in something, they're gonna wait.

63
00:04:38.367 --> 00:04:41.508
And then once the API comes back,
then they'll see everything, right?

64
00:04:41.508 --> 00:04:46.088
And you'll see it's kind of jarring
that you enter something, and

65
00:04:46.088 --> 00:04:50.345
then you have to wait before you
actually see your client-side

66
00:04:50.345 --> 00:04:53.095
information show up into the UI, okay?

67
00:04:53.095 --> 00:04:57.047
And then we're going to return div,

68
00:04:57.047 --> 00:05:01.903
className = app, I forgot the effect here.

69
00:05:01.903 --> 00:05:04.253
Let's go back to that.

70
00:05:04.253 --> 00:05:06.203
We'll do that first.

71
00:05:06.203 --> 00:05:08.365
So let's do the effect.

72
00:05:08.365 --> 00:05:11.587
We're gonna say use effect.

73
00:05:11.587 --> 00:05:15.663
And notice that this imported
that at the top, use effect.

74
00:05:20.582 --> 00:05:27.859
&gt;&gt; Brian Holt: Okay, and
then we're just gonna fetch thoughts.

75
00:05:27.859 --> 00:05:29.837
And then I didn't even
bother to make this async.

76
00:05:29.837 --> 00:05:32.450
I just did it with promises.

77
00:05:32.450 --> 00:05:38.511
Then res.json,

78
00:05:38.511 --> 00:05:42.553
then data.

79
00:05:45.295 --> 00:05:48.671
&gt;&gt; Brian Holt: Set, thoughts, data.

80
00:05:51.989 --> 00:05:54.723
&gt;&gt; Brian Holt: You could make this async
if you wanted to, but this was so short,

81
00:05:54.723 --> 00:05:57.485
I was like, no, I'm just gonna
do this directly with promises.

82
00:06:00.466 --> 00:06:01.591
&gt;&gt; Brian Holt: Okay, empty array.

83
00:06:01.591 --> 00:06:04.162
We're only gonna run this
at the beginning, and

84
00:06:04.162 --> 00:06:05.737
then now we can do our markup.

85
00:06:05.737 --> 00:06:08.663
Return div,

86
00:06:08.663 --> 00:06:14.249
className = "app" and

87
00:06:14.249 --> 00:06:18.771
h1 Deep Thoughts.

88
00:06:18.771 --> 00:06:22.233
This was in, but
I had just watched the latest SNL, and

89
00:06:22.233 --> 00:06:24.805
they had deep thoughts with Jack Handy.

90
00:06:24.805 --> 00:06:25.767
Does anyone remember those?

91
00:06:25.767 --> 00:06:33.346
I loved those when I was a kid,
and so that's what inspired these.

92
00:06:33.346 --> 00:06:36.244
form on submit,

93
00:06:36.244 --> 00:06:41.008
we'll do a function here.

94
00:06:41.008 --> 00:06:47.359
And e.preventDefault as you do, cuz you
don't want to actually submit the page.

95
00:06:47.359 --> 00:06:51.476
And then you will do a postDeepThought.

96
00:06:53.947 --> 00:06:59.172
&gt;&gt; Brian Holt: Okay, and then we'll

97
00:06:59.172 --> 00:07:06.323
have a label htmlForThought.

98
00:07:06.323 --> 00:07:07.800
What's on your mind?

99
00:07:10.707 --> 00:07:12.840
&gt;&gt; Brian Holt: Okay, and
then you'll have a text area.

100
00:07:16.126 --> 00:07:18.902
&gt;&gt; Brian Holt: id = thought.

101
00:07:18.902 --> 00:07:20.365
name = thought.

102
00:07:24.461 --> 00:07:26.398
&gt;&gt; Brian Holt: Rows = 5.

103
00:07:29.483 --> 00:07:34.072
&gt;&gt; Brian Holt: Calls = 33 just think I
messed around with these a little bit

104
00:07:34.072 --> 00:07:35.755
until they got right.

105
00:07:35.755 --> 00:07:40.672
value = thought and

106
00:07:40.672 --> 00:07:47.324
on change = e setThought,

107
00:07:47.324 --> 00:07:52.539
e.target.value.

108
00:07:52.539 --> 00:07:53.804
I think that's it for that.

109
00:07:53.804 --> 00:08:01.879
Yep, then we'll have
a button type = submit.

110
00:08:06.970 --> 00:08:12.000
&gt;&gt; Brian Holt: You could put
something like here, like submit or

111
00:08:12.000 --> 00:08:16.683
direct my thoughts into the ether,
up to you.

112
00:08:16.683 --> 00:08:21.071
It depends on how deep you
want to get with this, okay?

113
00:08:21.071 --> 00:08:26.718
And then after that, we're just going
to have a UL of all of our thoughts.

114
00:08:26.718 --> 00:08:32.240
So thoughts.map.

115
00:08:32.240 --> 00:08:38.328
And then you'll have thought and index.

116
00:08:38.328 --> 00:08:43.305
And then we will have that return an Li

117
00:08:43.305 --> 00:08:47.972
with a key of thought and thought.

118
00:08:47.972 --> 00:08:54.312
Actually, no, I'm thinking technically
these thoughts don't have to be unique,

119
00:08:54.312 --> 00:08:59.785
so you probably just want to do this
with index either or though, okay?.

120
00:09:04.107 --> 00:09:11.294
&gt;&gt; Brian Holt: So I don't think anything
here just looks particularly surprising,

121
00:09:11.294 --> 00:09:16.304
but let's see how we do
let's open our app here.

122
00:09:16.304 --> 00:09:17.418
Are we running our server?

123
00:09:17.418 --> 00:09:18.006
We're not running our server.

124
00:09:18.006 --> 00:09:21.710
Make sure you're on your server, and

125
00:09:21.710 --> 00:09:25.760
NPM run dev you need dev server first, and

126
00:09:25.760 --> 00:09:31.572
then I need to open another one and
say, NPM run dev client.

127
00:09:31.572 --> 00:09:35.474
Okay, now we should be able to run this.

128
00:09:35.474 --> 00:09:40.477
So, deep thoughts, what's on your mind,

129
00:09:40.477 --> 00:09:44.410
and some of these are quite funny.

130
00:09:44.410 --> 00:09:45.315
This one really caught me.

131
00:09:45.315 --> 00:09:47.479
If debugging is the process
of removing bugs, and

132
00:09:47.479 --> 00:09:49.603
programming must be
the process of adding them.

133
00:09:49.603 --> 00:09:52.932
I'm an excellent programmer.

134
00:09:52.932 --> 00:09:57.629
Some of these are funny,
some of them are not.

135
00:09:57.629 --> 00:10:02.354
I thought the world was cruel and unfair,

136
00:10:02.354 --> 00:10:07.493
then I tried to vertically
center a div cool.

137
00:10:07.493 --> 00:10:12.241
So, if I put like LOL or
something like that in here, and

138
00:10:12.241 --> 00:10:15.685
I say direct my thoughts into the ether.

139
00:10:15.685 --> 00:10:17.983
Notice it's just gonna sit there for
a while, and

140
00:10:17.983 --> 00:10:19.742
then eventually it's gonna show up.

141
00:10:19.742 --> 00:10:26.736
Here, that thought wasn't
deep enough try that again.

142
00:10:33.518 --> 00:10:36.109
&gt;&gt; Brian Holt: Wow, what did I do here?

143
00:10:36.109 --> 00:10:39.750
I must have said this to be setThought,
right?

144
00:10:39.750 --> 00:10:41.868
And it's actually supposed
to be setThoughts.

145
00:10:41.868 --> 00:10:44.387
That's hilarious [LAUGH].

146
00:10:44.387 --> 00:10:49.610
So line 21 here.

147
00:10:49.610 --> 00:10:54.603
Make sure inside of your post
deepThought that this is supposed to

148
00:10:54.603 --> 00:10:59.163
be I put set thought here
you're supposed to setThoughts.

149
00:10:59.163 --> 00:11:01.213
The dangers of calling these
the same thing, right?

150
00:11:01.213 --> 00:11:04.284
This is not the first
time this happened to me.

151
00:11:04.284 --> 00:11:06.700
Okay, let me try that again.

152
00:11:18.794 --> 00:11:19.950
&gt;&gt; Brian Holt: One sentence is gonna work.

153
00:11:19.950 --> 00:11:23.655
20% it could happen
pretty much of the time.

154
00:11:23.655 --> 00:11:24.771
Yeah, there it is, right?

155
00:11:24.771 --> 00:11:27.946
So then it eventually shows up there.

156
00:11:27.946 --> 00:11:31.979
So, we can absolutely
engineer around this, right?

157
00:11:31.979 --> 00:11:35.481
We could optimistically ourselves
add it into the thoughts, and

158
00:11:35.481 --> 00:11:39.249
then if there's an error case,
then we go back and remove it, right?

159
00:11:39.249 --> 00:11:43.389
I'm sure you're Function,
you're going through your head of like,

160
00:11:43.389 --> 00:11:46.365
how could I do this without
additional machinery?

161
00:11:46.365 --> 00:11:50.909
I'm gonna show you how to make this a bit
easier with the use of use optimistic.

