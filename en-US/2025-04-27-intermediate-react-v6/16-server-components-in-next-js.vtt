WEBVTT

1
00:00:00.000 --> 00:00:04.703
&gt;&gt; Brian Holt: So,
let's do some more server components.

2
00:00:04.703 --> 00:00:09.554
Let's write my route, so inside of app,

3
00:00:09.554 --> 00:00:14.821
new directory, my, and as you might guess,

4
00:00:14.821 --> 00:00:19.822
we need a page.js you might be wondering.

5
00:00:19.822 --> 00:00:22.112
Why are these like lowercase?

6
00:00:22.112 --> 00:00:24.939
Why are they JSX, not JS,
and all or other way around?

7
00:00:24.939 --> 00:00:26.766
Why are they not JSX?

8
00:00:26.766 --> 00:00:29.529
It's just the way the next does it.

9
00:00:29.529 --> 00:00:31.589
I really can't give you much
better answer than that.

10
00:00:31.589 --> 00:00:34.254
Some people are very allergic to JSX.

11
00:00:34.254 --> 00:00:36.111
Is that a file extension?

12
00:00:36.111 --> 00:00:37.884
And what I say is I don't care.

13
00:00:37.884 --> 00:00:38.609
It makes so

14
00:00:38.609 --> 00:00:43.855
little difference to me that I just lean
into whatever the code base is doing.

15
00:00:43.855 --> 00:00:45.826
I do capitalize.

16
00:00:45.826 --> 00:00:48.660
Some people are allergic to that
because Linux is case-insensitive.

17
00:00:48.660 --> 00:00:52.423
And then you run into weird
issues because, like Windows,

18
00:00:52.423 --> 00:00:53.935
can be case sensitive.

19
00:00:53.935 --> 00:00:55.081
Again, I don't care.

20
00:00:55.081 --> 00:00:59.661
[LAUGH] never rely on capitalization,
I think, is my core advice for you.

21
00:00:59.661 --> 00:01:02.398
We're gonna do something really
similar to what we did before, but

22
00:01:02.398 --> 00:01:04.185
we're gonna do it from a next perspective.

23
00:01:04.185 --> 00:01:10.613
So, we're gonna do an async
database from SQLite 3.

24
00:01:10.613 --> 00:01:15.087
And again,
this assumes you are user one, right?

25
00:01:15.087 --> 00:01:17.214
Cuz we're not doing any auth.

26
00:01:17.214 --> 00:01:24.725
Export default async function MyNotes.

27
00:01:27.348 --> 00:01:31.407
&gt;&gt; Brian Holt: And we're gonna
do an async function FetchNotes.

28
00:01:31.407 --> 00:01:34.095
And we already did this once, so
I might have you just copy and

29
00:01:34.095 --> 00:01:37.223
paste those queries, cuz it's not
interesting to write them again.

30
00:01:37.223 --> 00:01:42.885
So const db = await,

31
00:01:42.885 --> 00:01:49.492
async database.open,

32
00:01:49.492 --> 00:01:55.473
yeah ./notes.db.

33
00:01:55.473 --> 00:02:00.187
I think this is run from the root of
the project, so it should be okay.

34
00:02:00.187 --> 00:02:03.595
But we'll find out, I'm sure,
when it yells at us.

35
00:02:03.595 --> 00:02:10.773
Const fromPromise, and
we're gonna copy here in a second,

36
00:02:10.773 --> 00:02:15.558
and then we're gonna do the same thing,

37
00:02:15.558 --> 00:02:19.230
const toPromise = copy here.

38
00:02:24.098 --> 00:02:29.757
&gt;&gt; Brian Holt: Okay, and
we'll do that here in just a second,

39
00:02:29.757 --> 00:02:34.425
and then we're gonna do const (from,

40
00:02:34.425 --> 00:02:41.373
to) = await promise.all(fromPromise,
to Promise.

41
00:02:41.373 --> 00:02:42.554
If you're not aware,

42
00:02:42.554 --> 00:02:46.608
this almost never makes a difference
because this is happening all locally.

43
00:02:46.608 --> 00:02:49.416
But this will make sure that these
two things happen in parallel,

44
00:02:49.416 --> 00:02:52.595
as opposed to if we did a weight here and
a weight here would be sequential.

45
00:02:52.595 --> 00:02:56.336
And since we're doing two queries,
we want them to happen at the same time.

46
00:02:56.336 --> 00:02:58.984
That's the magic of doing
like the await promise.all.

47
00:03:02.582 --> 00:03:09.247
&gt;&gt; Brian Holt: Okay, and
then we will just return from and to.

48
00:03:09.247 --> 00:03:12.762
Let's go copy these queries cuz ain't
nobody wanna write that, right?

49
00:03:19.769 --> 00:03:22.574
&gt;&gt; Brian Holt: I might have you copy this
markup as well, just cuz it's so long.

50
00:03:25.235 --> 00:03:31.267
&gt;&gt; Brian Holt: So,
this is the from promise right there.

51
00:03:31.267 --> 00:03:34.749
This might even be, I think this is
actually literally the exact same one that

52
00:03:34.749 --> 00:03:37.764
we had written before, and
the two promise looks really similar.

53
00:03:37.764 --> 00:03:42.408
It's just changing to from the two,
by the way.

54
00:03:45.762 --> 00:03:48.200
&gt;&gt; Brian Holt: Okay, right,
this should look pretty.

55
00:03:48.200 --> 00:03:49.582
Let's get rid of that,
let's get rid of that.

56
00:03:49.582 --> 00:03:52.026
Look, really similar.

57
00:03:52.026 --> 00:03:58.521
The real big difference here is
from user to user, that's all.

58
00:03:58.521 --> 00:04:05.021
Now we have this function here, and we can
just say const notes = await fetchNotes.

59
00:04:09.512 --> 00:04:11.597
&gt;&gt; Brian Holt: Okay, and return.

60
00:04:11.597 --> 00:04:16.243
Again, this is essentially
exactly what we did before, but

61
00:04:16.243 --> 00:04:19.170
we're gonna do twice for to and from.

62
00:04:19.170 --> 00:04:21.988
So, let's again,
because we've already covered this before.

63
00:04:21.988 --> 00:04:29.429
Let's just go ahead and grab this markup,
unless you really want to write it,

64
00:04:29.429 --> 00:04:34.529
and then don't let me stand
in the way of your dreams.

65
00:04:34.529 --> 00:04:39.177
Don't let your dreams be dreams.

66
00:04:39.177 --> 00:04:42.848
And there you go.

67
00:04:42.848 --> 00:04:47.790
So, my notes to you,
this goes through the notes from you, and

68
00:04:47.790 --> 00:04:50.040
this goes through the from.

69
00:04:53.531 --> 00:04:55.324
&gt;&gt; Brian Holt: Make sense, yeah.

70
00:04:58.732 --> 00:05:01.409
&gt;&gt; Brian Holt: Okay, so
server components on next.

71
00:05:01.409 --> 00:05:06.138
That's the whole thing,
like you've already been through,

72
00:05:06.138 --> 00:05:12.125
the way worse way of writing this, so
doing it the easier way seems much better.

73
00:05:12.125 --> 00:05:14.166
So, we're here on NotePasser.

74
00:05:14.166 --> 00:05:17.190
We're gonna go to my notes, and

75
00:05:17.190 --> 00:05:23.249
you should see essentially
everything from Brian and to Brian.

76
00:05:23.249 --> 00:05:26.201
Notes from you and notes to you.

77
00:05:26.201 --> 00:05:29.205
So, you can see here Tanner
was quite rude to me.

78
00:05:29.205 --> 00:05:31.490
Webpack config broke again.

79
00:05:31.490 --> 00:05:35.347
That's actually just fair because
I literally did just do that.

80
00:05:35.347 --> 00:05:38.845
This one as well made me laugh,

81
00:05:38.845 --> 00:05:44.498
your function names
are longer than my patients,

82
00:05:44.498 --> 00:05:48.551
anyway, vs code suggested I quit.

83
00:05:48.551 --> 00:05:52.262
Any questions about server
components in terms of next,

84
00:05:52.262 --> 00:05:57.375
it should feel very similar because
it's more or less the same thing, right?

85
00:05:57.375 --> 00:06:02.141
It's just that we didn't have to
deal with all of the same problems,

86
00:06:02.141 --> 00:06:06.505
but let's take a look at this,
because this might be helpful.

87
00:06:06.505 --> 00:06:09.091
Actually, I think you must
have to do it this way.

88
00:06:09.091 --> 00:06:13.762
Yeah, so
you can see they have these like question.

89
00:06:13.762 --> 00:06:14.894
This is probably hard to see.

90
00:06:14.894 --> 00:06:16.314
Can I make this part bigger?

91
00:06:16.314 --> 00:06:22.134
Yeah, they had this like question
make RSC equals blah, right?

92
00:06:22.134 --> 00:06:26.666
This is like their own kind of
like way of passing stuff back and

93
00:06:26.666 --> 00:06:28.242
forth to the flight.

94
00:06:28.242 --> 00:06:33.585
And if you look at the response here,
does this look familiar to you?

95
00:06:33.585 --> 00:06:35.415
It's all just flight protocol again,
right?

96
00:06:35.415 --> 00:06:41.090
Obviously, it's way more complicated, but
at the end of the day, it's just shipping.

97
00:06:41.090 --> 00:06:44.688
Back and forth markup,
just in kind of a coded way,

98
00:06:44.688 --> 00:06:47.794
in a more compact way, it's cool, right?

99
00:06:47.794 --> 00:06:49.075
I think it's cool.

100
00:06:49.075 --> 00:06:52.180
Maybe I'm broken but in this
particular case, I think I am right.

101
00:06:52.180 --> 00:06:53.098
I think it is cool.

