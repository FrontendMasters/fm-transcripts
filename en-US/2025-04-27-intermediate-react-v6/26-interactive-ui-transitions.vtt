WEBVTT

1
00:00:00.220 --> 00:00:05.545
&gt;&gt; Brian Holt: So transitions, these next
three, they're actually somewhat similar,

2
00:00:05.545 --> 00:00:10.619
just kind of in goals, but they all
have to do with perceived performance

3
00:00:10.619 --> 00:00:15.293
that we're actually not going to
make React more faster, right?

4
00:00:15.293 --> 00:00:20.082
We're gonna make it so that the user
feels more performance, right?

5
00:00:20.082 --> 00:00:22.596
So let's hop into transitions.

6
00:00:22.596 --> 00:00:25.576
This particular problem
here happens to me a lot.

7
00:00:25.576 --> 00:00:30.015
How many of you have buttons on your
remotes that have Netflix or Hulu or

8
00:00:30.015 --> 00:00:33.703
Uncle Pete's Streaming Services,
I called it here, and

9
00:00:33.703 --> 00:00:38.390
you go to press a button and you
accidentally press the wrong one, right?

10
00:00:38.390 --> 00:00:42.220
And you spend the worst 15 seconds of your
life, waiting for this app to load so

11
00:00:42.220 --> 00:00:45.780
that you can close it and get to
the actual thing that you meant to, right?

12
00:00:45.780 --> 00:00:48.173
And just panicking, pressing the button,

13
00:00:48.173 --> 00:00:50.702
unwilling to waste 15
more seconds on this.

14
00:00:50.702 --> 00:00:54.513
This particular problem where you click
something, the UI does something and

15
00:00:54.513 --> 00:00:57.110
you're locked into a state
until it finishes loading

16
00:00:57.110 --> 00:00:58.970
is exactly what transitions are for.

17
00:00:58.970 --> 00:01:00.061
It's essentially like,

18
00:01:00.061 --> 00:01:02.941
I'm gonna just start doing something
larger underneath the scene.

19
00:01:02.941 --> 00:01:06.685
A good example of this is changing pages.

20
00:01:06.685 --> 00:01:09.376
But I'm still going to
leave the UI reactive so

21
00:01:09.376 --> 00:01:13.181
that the user can change their mind or
do something else, right?

22
00:01:13.181 --> 00:01:16.508
That's the entire purpose of transitions,

23
00:01:16.508 --> 00:01:22.298
keep your UI responsive while you're
doing something larger under the hood.

24
00:01:22.298 --> 00:01:26.726
Yeah, so same thing, you've been on
a website, maybe your banking website,

25
00:01:26.726 --> 00:01:31.419
my banking website does this where, I'll
click on send a transfer or something like

26
00:01:31.419 --> 00:01:35.607
that, and I accidentally click get
a new mortgage or something like that.

27
00:01:35.607 --> 00:01:39.160
And I'm like, no, I don't need
another mortgage, I have a house,

28
00:01:39.160 --> 00:01:40.280
thank you very much.

29
00:01:40.280 --> 00:01:43.210
So yeah,
we're trying to annoy our users less.

30
00:01:43.210 --> 00:01:45.122
So this is what transitions are for,

31
00:01:45.122 --> 00:01:48.278
they keep you eyes interactive
while loading is happening.

32
00:01:48.278 --> 00:01:49.878
So we're gonna build a little app.

33
00:01:49.878 --> 00:01:54.901
I've made an intentionally slow
APIs to kind of exaggerate this.

34
00:01:54.901 --> 00:01:59.420
And then we're gonna be using this
really fun useTransition hook, and

35
00:01:59.420 --> 00:02:02.520
it makes the whole thing
not terribly hard to do.

36
00:02:02.520 --> 00:02:07.688
So we're gonna open this project here,

37
00:02:07.688 --> 00:02:11.184
and I have the starter, and

38
00:02:11.184 --> 00:02:17.268
we're gonna be opening transitions, right?

39
00:02:17.268 --> 00:02:22.040
So I'm gonna open that in my
VS Code editor, transitions.

40
00:02:22.040 --> 00:02:25.194
So another very
similar-looking project here,

41
00:02:25.194 --> 00:02:27.520
this is gonna be a scoreboard app, so

42
00:02:27.520 --> 00:02:32.711
we're gonna be able to look at the various
different scores for different teams.

43
00:02:32.711 --> 00:02:34.804
So I have a server.js here,

44
00:02:34.804 --> 00:02:40.139
really all it's doing is it's keeping
track of seven different games.

45
00:02:40.139 --> 00:02:46.764
So home and away for each one of them and
then some interval, right?

46
00:02:46.764 --> 00:02:51.158
So every 10 to 60 seconds,
it's going to increment a score for

47
00:02:51.158 --> 00:02:53.209
each players or for each team.

48
00:02:55.792 --> 00:02:58.415
&gt;&gt; Brian Holt: And then this WAIT_TIME
here, so you can mess with these,

49
00:02:58.415 --> 00:03:01.515
feel free to change these numbers if
you wanna make it feel different.

50
00:03:01.515 --> 00:03:05.769
Every API request is artificially
slowed down by five seconds so

51
00:03:05.769 --> 00:03:09.564
that you can have time to see
the transitions happening.

52
00:03:09.564 --> 00:03:12.454
So just to get this running to
show you what it looks like,

53
00:03:12.454 --> 00:03:16.490
if you go into transitions and you just
say npm run, I think it's dev:server,

54
00:03:16.490 --> 00:03:19.946
something like that,
you'll get something that looks like this.

55
00:03:19.946 --> 00:03:24.373
And you can see here,
they all start out at 1, 1, and

56
00:03:24.373 --> 00:03:28.527
then over time,
they'll start changing scores.

57
00:03:31.644 --> 00:03:33.326
&gt;&gt; Brian Holt: Cool, so
you can just leave that running,

58
00:03:33.326 --> 00:03:35.210
there's no harm in just
leaving that running.

59
00:03:35.210 --> 00:03:37.303
We'll eventually come over here as well.

60
00:03:37.303 --> 00:03:41.043
I can just create another terminal, and

61
00:03:41.043 --> 00:03:46.438
I'm gonna say npm run dev:client and
this will run vite.

62
00:03:46.438 --> 00:03:49.289
No, you have to do npm install as well.

63
00:03:49.289 --> 00:03:52.559
Make sure you do that, and
then run npm run dev:client.

64
00:03:55.105 --> 00:03:55.917
&gt;&gt; Brian Holt: Okay, and

65
00:03:55.917 --> 00:04:00.620
now I can open this ,and you can
see it just says transitions.

66
00:04:00.620 --> 00:04:06.083
So we need to go actually
code up our app here.

67
00:04:06.083 --> 00:04:10.872
Other pieces of code in here that might be
interesting to you, this is all the teams.

68
00:04:10.872 --> 00:04:13.251
This is just used by server.js, but

69
00:04:13.251 --> 00:04:16.569
feel free to modify them
if you're feeling funny.

70
00:04:16.569 --> 00:04:21.321
This is a very normal Vite config,
it's doing a proxy so

71
00:04:21.321 --> 00:04:25.578
that we can make a request
through port 3000.

72
00:04:25.578 --> 00:04:33.167
And there's a bunch of images here that
were definitely generated by ChatGPT.

73
00:04:33.167 --> 00:04:37.761
Okay, Client, this is literally
the same as the last one, and

74
00:04:37.761 --> 00:04:40.894
then App.jsx, that is what we see there.

75
00:04:40.894 --> 00:04:44.962
And then, obviously, there's
a style.css which has all the styles.

76
00:04:47.072 --> 00:04:50.440
&gt;&gt; Brian Holt: Okay, so
that's the starter template.

77
00:04:50.440 --> 00:04:56.919
You've run npm install,
we've run both dev:server and dev:client.

78
00:04:56.919 --> 00:05:01.902
And everything else is pretty
standard React project.

79
00:05:01.902 --> 00:05:03.636
So there is one API endpoint.

80
00:05:03.636 --> 00:05:06.311
In fact, we can even just
look at it if you want to.

81
00:05:06.311 --> 00:05:09.778
localhost:5173/score, and

82
00:05:09.778 --> 00:05:14.928
then you just say game= some
number between 1 and 7.

83
00:05:14.928 --> 00:05:16.498
And we should get back a response.

84
00:05:16.498 --> 00:05:20.091
And notice that it takes a while,
that's from the artificial slowdown.

85
00:05:20.091 --> 00:05:22.298
And it'll give you the score for

86
00:05:22.298 --> 00:05:25.748
the Memory Leaks versus
the Garbage Collectors.

87
00:05:26.857 --> 00:05:28.777
&gt;&gt; Brian Holt: Okay, so
we'll be using this API.

