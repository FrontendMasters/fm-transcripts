WEBVTT

1
00:00:00.242 --> 00:00:03.120
&gt;&gt; Brian Holt: Okay, so next step,
should we build the next step?

2
00:00:03.120 --> 00:00:04.190
Sounds kind of fun, right?

3
00:00:04.190 --> 00:00:04.946
Let's do it.

4
00:00:04.946 --> 00:00:10.127
All right, so you can copy and
paste this, that's what I'm gonna do.

5
00:00:10.127 --> 00:00:16.633
I'm gonna build a new one here and
we're gonna call this one mkdir next,

6
00:00:16.633 --> 00:00:23.156
cd next and then I'm gonna run
npx create-next-app@15.1.7.

7
00:00:23.156 --> 00:00:24.245
We're doing js today,

8
00:00:24.245 --> 00:00:27.632
I'm sure some of you are wondering
why I'm not doing this in TypeScript.

9
00:00:27.632 --> 00:00:31.941
I'm just trying to remove barriers
from you and learning React.

10
00:00:31.941 --> 00:00:32.831
I love TypeScript.

11
00:00:32.831 --> 00:00:36.180
I technically was part of the TypeScript
team when I was at Microsoft,

12
00:00:36.180 --> 00:00:39.440
cuz that VS code team, TypeScript
team is kind of all the same team.

13
00:00:39.440 --> 00:00:44.091
So I love it, but I just want you to
have the most access to the information

14
00:00:44.091 --> 00:00:48.304
possible, and I don't want TypeScript
to get in the way of that.

15
00:00:48.304 --> 00:00:53.357
We're doing the app router,
we're gonna do a source directory, and

16
00:00:53.357 --> 00:00:59.200
we're gonna use turbopack, which is like
the rust powered version of webpack.

17
00:00:59.200 --> 00:01:02.577
And probably oversimplifying that, but

18
00:01:02.577 --> 00:01:07.116
it's the Vercel official build product for
Next.js.

19
00:01:07.116 --> 00:01:10.397
Okay, what do you wanna call it?

20
00:01:10.397 --> 00:01:15.523
My-super-cool-note-app.

21
00:01:15.523 --> 00:01:17.539
Do you want to use ESLint?

22
00:01:17.539 --> 00:01:20.205
Sure, yes, no, I don't know, no.

23
00:01:20.205 --> 00:01:23.804
We're not doing Tailwind today,
I'm not gonna do the import alias,

24
00:01:23.804 --> 00:01:25.089
you could if you want to.

25
00:01:30.685 --> 00:01:33.359
&gt;&gt; Brian Holt: And
we should get a whole app, all right.

26
00:01:37.089 --> 00:01:43.694
&gt;&gt; Brian Holt: So, yeah,
there we go, code..

27
00:01:46.658 --> 00:01:51.513
&gt;&gt; Brian Holt: Maybe, okay,
cd my-super-cool-notes-app.

28
00:01:56.950 --> 00:02:01.658
&gt;&gt; Brian Holt: Okay, so couple more things
to install here, we need our doodle.css,

29
00:02:01.658 --> 00:02:02.592
npm install.

30
00:02:02.592 --> 00:02:08.354
Doodle.css@0.0.2,

31
00:02:08.354 --> 00:02:15.960
promised-sqlite3@2.1.0 and

32
00:02:15.960 --> 00:02:21.032
sqlite3@5.1.7.

33
00:02:23.459 --> 00:02:26.524
&gt;&gt; Brian Holt: Again, feel free to copy
and paste those directly on my notes.

34
00:02:34.727 --> 00:02:35.586
&gt;&gt; Brian Holt: Do I care about any those?

35
00:02:35.586 --> 00:02:37.301
Nope, sure don't care.

36
00:02:37.301 --> 00:02:39.793
No one cares about warnings.

37
00:02:39.793 --> 00:02:44.750
And then I'm gonna copy that same notes.db
file that we had in our other project.

38
00:02:44.750 --> 00:02:50.606
Okay, so same file we're gonna
work with the exact same notes.db.

39
00:02:50.606 --> 00:02:53.041
Yeah, it looks like I put
a seed file there as well.

40
00:02:53.041 --> 00:02:56.567
I thought some of you might wanna
use Postgres or something like that,

41
00:02:56.567 --> 00:02:57.300
feel free to.

42
00:03:01.468 --> 00:03:05.523
&gt;&gt; Brian Holt: There's also a very good
Postgres course on Frontend Masters.

43
00:03:05.523 --> 00:03:08.023
Again, taught by just
a stunningly handsome young man.

44
00:03:08.023 --> 00:03:12.061
[LAUGH] I don't know why, when I'm
speaking of myself in the third person,

45
00:03:12.061 --> 00:03:13.801
I have to be steadily handsome.

46
00:03:13.801 --> 00:03:20.124
Aspirational, I guess, vanity, who knows?

47
00:03:20.124 --> 00:03:22.215
No one can know.

48
00:03:22.215 --> 00:03:26.617
Okay, so let's get going on this.

49
00:03:26.617 --> 00:03:32.335
This is a Next.js project,
there's a config file here.

50
00:03:32.335 --> 00:03:35.282
We don't have anything in it,
that's totally fine.

51
00:03:35.282 --> 00:03:37.830
Jsconfig, this is for
Typescript reading and

52
00:03:37.830 --> 00:03:40.586
Javascript project,
that's what that's for.

53
00:03:40.586 --> 00:03:43.197
There's a bunch of stuff in here,

54
00:03:43.197 --> 00:03:48.429
you can leave it in here if you want to,
that's totally fine with me.

55
00:03:48.429 --> 00:03:54.086
And then we're gonna go to source/page.js,
so this is the app router,

56
00:03:54.086 --> 00:03:57.930
and there's a page router,
which is different.

57
00:03:57.930 --> 00:04:02.653
Not talking at all about the page router
today, this is just the app router today.

58
00:04:02.653 --> 00:04:08.019
Just two different ways of creating routes
in Next.js is essentially what it is.

59
00:04:08.019 --> 00:04:11.650
I have my /directory, and
in that /directory I have the page, and

60
00:04:11.650 --> 00:04:15.234
that's going to be the page that's
rendered whenever that is it.

61
00:04:15.234 --> 00:04:20.988
So if I make, I don't know, just a blah,
right, and I put a page.js in blah,

62
00:04:20.988 --> 00:04:26.066
then whenever I go to /blah,
it'll render the page inside of that.

63
00:04:26.066 --> 00:04:27.083
I also have a layout and

64
00:04:27.083 --> 00:04:30.360
anything that's a child of that will
be rendered inside of that layout.

65
00:04:30.360 --> 00:04:35.146
So you'll notice here that it has
children, the page is going to be

66
00:04:35.146 --> 00:04:40.540
rendered inside of the children there
as well, so that's what layout is.

67
00:04:40.540 --> 00:04:41.813
And this is what I was talking about,

68
00:04:41.813 --> 00:04:44.044
I'm pretty sure this would qualify
as static site generation.

69
00:04:44.044 --> 00:04:49.538
So this part of it's actually generated
beforehand, totally on the server,

70
00:04:49.538 --> 00:04:54.367
and then that's filled with the page.js
is like a child component or

71
00:04:54.367 --> 00:04:56.797
a child React app, essentially.

72
00:04:56.797 --> 00:05:00.263
Okay, not that you ever really have
to care about that they don't make

73
00:05:00.263 --> 00:05:03.746
the distinction for you, so
you don't have to make the distinction.

74
00:05:03.746 --> 00:05:08.821
Okay, so page.js delete all that,
just total nonsense.

75
00:05:08.821 --> 00:05:11.176
Just kidding, I'm sure it's fine,
but I don't care.

76
00:05:11.176 --> 00:05:16.765
Import Link from "next/link";.

77
00:05:19.098 --> 00:05:21.905
&gt;&gt; Brian Holt: And then we're
just gonna make a homepage here,

78
00:05:21.905 --> 00:05:25.811
of all the essentially lessons that
you and I are gonna do together.

79
00:05:25.811 --> 00:05:31.143
default function Home(), return and

80
00:05:31.143 --> 00:05:38.527
then just a pretty basic
little ul here unordered list.

81
00:05:42.555 --> 00:05:50.879
&gt;&gt; Brian Holt: li and then we're just
gonna do a Link and href = My Notes.

82
00:05:50.879 --> 00:05:53.723
So links here are basically like a tags,
right?

83
00:05:53.723 --> 00:06:00.711
Anchor tags for Next.js apps and
we're just gonna make four of these,

84
00:06:00.711 --> 00:06:05.380
so you might as well just copy and
paste like me.

85
00:06:05.380 --> 00:06:10.309
And My Notes is going to be going
to /my the next one here is

86
00:06:10.309 --> 00:06:15.472
going to be going to write, so
we're gonna do Write a Note.

87
00:06:18.944 --> 00:06:24.383
&gt;&gt; Brian Holt: And
then we're gonna do /teacher,

88
00:06:24.383 --> 00:06:31.583
which is gonna be the super
Secret Teacher Feed.

89
00:06:31.583 --> 00:06:35.671
And then the last one is for
all my existential friends out there,

90
00:06:35.671 --> 00:06:38.285
we're gonna do a "who-am-i" route.

91
00:06:38.285 --> 00:06:42.999
We're gonna peer into our own souls and
wonder who we are.

92
00:06:48.651 --> 00:06:51.743
&gt;&gt; Brian Holt: You don't need the
explanation point and question might but

93
00:06:51.743 --> 00:06:53.811
it felt appropriate, so I put it there.

94
00:06:53.811 --> 00:06:57.587
Okay, let's go ahead and

95
00:06:57.587 --> 00:07:01.540
go into to layout.js now.

96
00:07:01.540 --> 00:07:06.733
Delete that and import

97
00:07:06.733 --> 00:07:13.297
Link from "next/link".

98
00:07:13.297 --> 00:07:19.505
Import "doodle.css/doodle.css" and

99
00:07:19.505 --> 00:07:26.717
import "./global.css", which reminds me,

100
00:07:26.717 --> 00:07:31.425
let's go ahead and go grab that.

101
00:07:31.425 --> 00:07:35.849
I have it here, where do I have it?

102
00:07:35.849 --> 00:07:39.437
Looks like I forgot to put it in there,
that's something to fix their destined.

103
00:07:39.437 --> 00:07:42.738
Github/btholt/Irv6-project, and

104
00:07:42.738 --> 00:07:48.116
let's just grab it from completed here,
cuz I know this one works.

105
00:07:48.116 --> 00:07:51.824
Next.js src/app, this globals.css,

106
00:07:51.824 --> 00:07:55.846
that's really the one
that I care about here.

107
00:07:55.846 --> 00:08:01.178
Raw, copy and paste and
then we're gonna come back over here and

108
00:08:01.178 --> 00:08:07.321
not this one, nobody likes that one
anymore, we're done with that one.

109
00:08:10.756 --> 00:08:13.043
&gt;&gt; Brian Holt: Here we're
going to put in globals.css,

110
00:08:13.043 --> 00:08:16.993
we're just gonna replace all of that
with much superior css that I wrote.

111
00:08:16.993 --> 00:08:21.346
Much better than the people of Vercel, and
you can delete the page.modules at css,

112
00:08:21.346 --> 00:08:23.265
cuz we don't need that one anymore.

113
00:08:26.274 --> 00:08:30.520
&gt;&gt; Brian Holt: Okay, and then we're

114
00:08:30.520 --> 00:08:35.660
going back to layout.js,

115
00:08:35.660 --> 00:08:42.371
export const metadata = title:.

116
00:08:42.371 --> 00:08:45.530
"Note Passer", this is all the stuff
that's gonna be put into the head,

117
00:08:45.530 --> 00:08:46.547
essentially, right?

118
00:08:46.547 --> 00:08:52.865
If you've ever used React helmet,
this produce that as well.

119
00:08:52.865 --> 00:08:56.720
React 19 now has better ways of putting
stuff into the head implicitly.

120
00:08:56.720 --> 00:09:01.090
If you render a link,
it knows that that never goes in the body,

121
00:09:01.090 --> 00:09:05.305
so it can put stuff in the head for
you, so it's pretty neat.

122
00:09:05.305 --> 00:09:11.431
description: "Example app for

123
00:09:11.431 --> 00:09:16.244
Frontend Masters", and

124
00:09:16.244 --> 00:09:21.058
then export default async

125
00:09:21.058 --> 00:09:25.443
function RootLayout.

126
00:09:25.443 --> 00:09:30.480
It's gonna take in children,

127
00:09:30.480 --> 00:09:38.622
and we're just gonna
return html lang="en".

128
00:09:38.622 --> 00:09:44.087
body className, we need the doodle one,

129
00:09:44.087 --> 00:09:47.833
so that the css shows up, and

130
00:09:47.833 --> 00:09:52.687
then nav, h1, we'll have a Link.

131
00:09:56.859 --> 00:10:02.898
&gt;&gt; Brian Holt: href="/",
we'll call this Note Passer and

132
00:10:02.898 --> 00:10:08.657
then under nav, we're gonna have children.

133
00:10:08.657 --> 00:10:10.559
Pretty simple so far, root layout here.

134
00:10:10.559 --> 00:10:13.122
So again,
layout will be the most outer one and

135
00:10:13.122 --> 00:10:15.503
then inside of layout will have page.js.

136
00:10:15.503 --> 00:10:19.134
These are significant names to Next.js,
right?

137
00:10:19.134 --> 00:10:21.971
Next.js is going to be looking for
these specific file names,

138
00:10:21.971 --> 00:10:23.958
which is how everything gets put together.

139
00:10:23.958 --> 00:10:28.829
I don't like this pattern to be super
frank, cuz I could see a new developer

140
00:10:28.829 --> 00:10:33.642
coming into this code base being like,
why is this put together, right?

141
00:10:33.642 --> 00:10:36.387
How is layout and page linked together?

142
00:10:36.387 --> 00:10:39.492
There's no explicit way that those are,

143
00:10:39.492 --> 00:10:43.491
you just have to know that
Next.js does that for you.

144
00:10:43.491 --> 00:10:48.260
When I learned Rails for the first time,
when I was a much younger developer and

145
00:10:48.260 --> 00:10:51.235
Rails was super hot,
I'm dating myself again.

146
00:10:51.235 --> 00:10:53.195
That was hard for me,
that was really hard for

147
00:10:53.195 --> 00:10:55.575
me because I didn't understand
how things got built.

148
00:10:55.575 --> 00:10:58.632
But here we are, more than a decade later.

149
00:10:58.632 --> 00:11:01.571
&gt;&gt; Speaker 2: Do you have to name
the components root layout and

150
00:11:01.571 --> 00:11:03.798
home as well as that also [INAUDIBLE]?

151
00:11:03.798 --> 00:11:07.707
&gt;&gt; Brian Holt: No, that's just for
what I was talking about before which is

152
00:11:07.707 --> 00:11:11.782
the debug ability of it all,
you could totally leave this out.

153
00:11:11.782 --> 00:11:17.016
It does have to be the default, that's
important that it has to be the default.

154
00:11:17.016 --> 00:11:22.157
Export and the metadata that has to be
called metadata, the variable names,

155
00:11:22.157 --> 00:11:26.605
the exports matter, but this is just for
making it more readable.

156
00:11:26.605 --> 00:11:28.902
It's good question, though.

157
00:11:28.902 --> 00:11:32.842
Okay, this should run.

158
00:11:32.842 --> 00:11:37.075
Probably runs, I don't know, YOLO, YOLO.

159
00:11:37.075 --> 00:11:41.153
We're gonna do npm, is it just dev?

160
00:11:41.153 --> 00:11:46.782
Lucky guess and
I'm gonna open ths up in 3000.

161
00:11:46.782 --> 00:11:52.674
Globals.css, let's go find that.

162
00:11:52.674 --> 00:11:55.307
&gt;&gt; Speaker 3: Can you call
it global in the import?

163
00:11:55.307 --> 00:11:57.685
&gt;&gt; Brian Holt: Like a noob, right?

164
00:11:57.685 --> 00:12:00.199
Here we go, okay.

165
00:12:00.199 --> 00:12:01.322
So there we go.

166
00:12:01.322 --> 00:12:03.911
Note Passer,
we can always click to go here.

167
00:12:03.911 --> 00:12:04.868
None of these are gonna work, right?

168
00:12:04.868 --> 00:12:07.522
So you're gonna get 404s
on each one of these.

169
00:12:07.522 --> 00:12:11.330
But now we have a place for all
the components that we're about to build.

170
00:12:14.287 --> 00:12:15.728
&gt;&gt; Brian Holt: But
hopefully you're already seeing,

171
00:12:15.728 --> 00:12:17.641
Next.js is a pretty productive framework,
right?

172
00:12:17.641 --> 00:12:23.234
We didn't have to do a whole lot, and
this just kinda worked pretty quickly.

173
00:12:23.234 --> 00:12:27.133
Static route, neat,
I had not seen that before.

174
00:12:30.953 --> 00:12:31.769
&gt;&gt; Brian Holt: Anyway.

175
00:12:31.769 --> 00:12:32.954
&gt;&gt; Speaker 4: Is that just the next thing?

176
00:12:32.954 --> 00:12:37.574
&gt;&gt; Brian Holt: Yeah, so it'll forward
server failures onto your client so

177
00:12:37.574 --> 00:12:39.483
you see them right away.

178
00:12:39.483 --> 00:12:41.407
There's a lot of good thinking going,

179
00:12:41.407 --> 00:12:44.798
it's their core business hosting
next apps is their core business.

180
00:12:44.798 --> 00:12:46.526
And so they need everyone to use Next.js,

181
00:12:46.526 --> 00:12:49.802
and then they need to be the best place to
host Next.js, so that you use for sale.

182
00:12:49.802 --> 00:12:53.986
It's great business,
to be honest to you, it works for me.

183
00:12:53.986 --> 00:12:57.023
I know exactly what's happening to me,
but I'm still gonna do it.

184
00:12:57.023 --> 00:12:59.927
By the way,
I like server component, right?

185
00:12:59.927 --> 00:13:03.366
You didn't even know you're writing
one and these are server components.

186
00:13:03.366 --> 00:13:08.440
So take that for
what you will, it is very cool.

