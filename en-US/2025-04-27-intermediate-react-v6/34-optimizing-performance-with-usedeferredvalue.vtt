WEBVTT

1
00:00:00.000 --> 00:00:04.153
&gt;&gt; Brian Holt: Again, this is largely
coming from the expensive render function.

2
00:00:04.153 --> 00:00:08.026
If you turn that off,
this actually works really well, but

3
00:00:08.026 --> 00:00:13.451
I'm sure you can imagine, like, just that,
even on this, really fast MacBook,

4
00:00:13.451 --> 00:00:17.965
it's just like that slider is just like,
not moving, super great.

5
00:00:17.965 --> 00:00:19.771
This would cause a lot of
jank in other parts of.

6
00:00:19.771 --> 00:00:23.676
For a UI, imagine if you had a video
playing on another part of it,

7
00:00:23.676 --> 00:00:26.741
you would definitely see
some jank on that as well.

8
00:00:26.741 --> 00:00:31.445
But notice that the actual value and
the deferred value are the same thing.

9
00:00:31.445 --> 00:00:33.605
That's because they're literally
the same thing at the moment.

10
00:00:33.605 --> 00:00:40.435
So let's go and actually fix this
now with use deferred value.

11
00:00:40.435 --> 00:00:44.785
So let's go look at my notes really quick.

12
00:00:44.785 --> 00:00:47.509
Yeah, I mentioned this before.

13
00:00:47.509 --> 00:00:51.176
In the past, you would have
had to use like, throttle or

14
00:00:51.176 --> 00:00:56.093
debounce to essentially just delay in
this until you actually were happy at

15
00:00:56.093 --> 00:01:00.793
the value that settled that great
article on what this is on CSS tricks.

16
00:01:00.793 --> 00:01:03.575
If you want to get really into
the depth of what that is.

17
00:01:03.575 --> 00:01:08.838
I refer to it probably at least a yearly,
like the annual, Brian needs

18
00:01:08.838 --> 00:01:14.564
to use throttle and bounce, and
can't remember which one it's a holiday.

19
00:01:14.564 --> 00:01:17.281
But we're gonna use use deferred value,

20
00:01:17.281 --> 00:01:20.625
which actually makes this
way easier to deal with.

21
00:01:20.625 --> 00:01:25.603
Okay, so we're gonna usedeferredvalue
here to basically say like

22
00:01:25.603 --> 00:01:28.670
these are like low priority renderings.

23
00:01:28.670 --> 00:01:31.687
When you finish everything and
you like that's high priority.

24
00:01:31.687 --> 00:01:35.991
So I guess that bears mentioning
everything by default in react is a high

25
00:01:35.991 --> 00:01:39.738
priority render and
you can only mark things as low priority.

26
00:01:39.738 --> 00:01:43.276
When you do useDeferredValue,
use optimistic transitions,

27
00:01:43.276 --> 00:01:47.416
all those things you're basically
saying I am explicitly marking this as

28
00:01:47.416 --> 00:01:50.770
less important than other
things that you're rendering.

29
00:01:50.770 --> 00:01:53.019
So that's what we're gonna do right now.

30
00:01:53.019 --> 00:02:01.445
We are gonna go use deferred
value to do just that.

31
00:02:01.445 --> 00:02:03.135
So used the deferred value.

32
00:02:05.560 --> 00:02:12.436
&gt;&gt; Brian Holt: Okay, and then
underneath here we're gonna say const,

33
00:02:12.436 --> 00:02:17.604
deferred blur equals use deferred value.

34
00:02:17.604 --> 00:02:21.955
Blur, not blue, a blur.

35
00:02:21.955 --> 00:02:26.327
And then we're just going to
have a bunch of these, I mean,

36
00:02:26.327 --> 00:02:32.112
I guess you can again come in here and
say, I don't need sonnet with thinking.

37
00:02:32.112 --> 00:02:35.622
I think I just need sonnet,

38
00:02:35.622 --> 00:02:41.127
give me a deferred value for
each of my hooks

39
00:02:47.309 --> 00:02:49.127
&gt;&gt; Brian Holt: Pretty good, right?

40
00:02:49.127 --> 00:02:50.856
Feel like I missed one.

41
00:02:50.856 --> 00:02:54.371
No that's correct,
because I already did one of them.

42
00:02:54.371 --> 00:02:59.591
Deferred brightness, deferred contrast,
divert saturated sepia,

43
00:02:59.591 --> 00:03:04.293
brightness, contrast, saturates,
saturate sepia, okay?

44
00:03:04.293 --> 00:03:09.868
And then all of these,
we just got to replace with this.

45
00:03:15.022 --> 00:03:20.882
&gt;&gt; Brian Holt: Okay,
for contrast, saturate,

46
00:03:20.882 --> 00:03:26.140
sepia, those kind of things.

47
00:03:29.723 --> 00:03:32.523
&gt;&gt; Brian Holt: Okay, I mean, everything
else essentially stays the same.

48
00:03:32.523 --> 00:03:38.194
The only thing that's gonna be different
here is now we're gonna have like just so

49
00:03:38.194 --> 00:03:40.506
you can see the difference here.

50
00:03:40.506 --> 00:03:45.568
Deferred brightness, deferred contrast,

51
00:03:45.568 --> 00:03:50.100
deferred saturate and deferred sepia.

52
00:03:55.655 --> 00:04:02.078
&gt;&gt; Brian Holt: But
now if we go look at our app over here.

53
00:04:02.078 --> 00:04:05.079
You can see that we still
got the jank on the slider.

54
00:04:05.079 --> 00:04:08.537
That's somewhat intended, but

55
00:04:08.537 --> 00:04:13.856
you can see that we have
these delays essentially.

56
00:04:13.856 --> 00:04:18.324
And we can actually make this much

57
00:04:18.324 --> 00:04:23.430
better if we go in and say memo on here,

58
00:04:23.430 --> 00:04:27.909
right, import memo from React.

59
00:04:27.909 --> 00:04:30.009
Cause again, this is still changing,

60
00:04:30.009 --> 00:04:33.073
which is still causing
the re-render of display image.

61
00:04:33.073 --> 00:04:37.782
So we need to be explicitly say,
don't change this unless this is changed,

62
00:04:37.782 --> 00:04:38.600
which is if.

63
00:04:38.600 --> 00:04:41.641
Because we're using deferred
values here in our filter style,

64
00:04:41.641 --> 00:04:44.410
this isn't gonna change until
one of the values changes.

65
00:04:46.686 --> 00:04:50.350
&gt;&gt; Brian Holt: Okay, so
here we're gonna say memo.

66
00:04:57.832 --> 00:05:00.572
&gt;&gt; Brian Holt: And now,
if we come back over here.

67
00:05:00.572 --> 00:05:05.580
This is gonna look way better, I notice
that it's not updating every single time.

68
00:05:05.580 --> 00:05:11.754
Look at that last render, it only does
it when it finally stops updating and

69
00:05:11.754 --> 00:05:17.838
you kind of get the lose some of the nice
effect of it updating in real time.

70
00:05:17.838 --> 00:05:20.601
But I think that's verbal to jink.

71
00:05:20.601 --> 00:05:26.022
Because again, if we got rid of jink and
we just made this one,

72
00:05:26.022 --> 00:05:30.421
much more pleasant experience that way,
right?

73
00:05:30.421 --> 00:05:35.664
But you can see there's even a little
bit of updating and delay there.

74
00:05:38.727 --> 00:05:41.716
&gt;&gt; Brian Holt: Yeah,
that is a used deferred value.

75
00:05:41.716 --> 00:05:46.391
So it allows you to basically lag
those kind of things until the react

76
00:05:46.391 --> 00:05:50.505
compiler can catch up so
that you cause less jank in your UI.

77
00:05:50.505 --> 00:05:53.420
But you can see I had to use
this in concert with memo or

78
00:05:53.420 --> 00:05:57.809
else it was still pointless because it
was still updating at the parent level.

79
00:05:57.809 --> 00:06:00.731
Yeah, and again, this is memoized.

80
00:06:00.731 --> 00:06:04.786
If we look at app.jsx,
this will be the same between renders,

81
00:06:04.786 --> 00:06:09.148
so therefore the memoization will
work correctly because this will

82
00:06:09.148 --> 00:06:11.451
only be using the deferred values.

83
00:06:11.451 --> 00:06:15.774
Yep, so anytime you have these heavy
computations and you're really trying to

84
00:06:15.774 --> 00:06:19.593
avoid re-rendering them, but
the values could update frequently.

85
00:06:19.593 --> 00:06:22.604
That kind of problem space
is where the deferred values

86
00:06:22.604 --> 00:06:24.182
end up being super helpful.

87
00:06:28.517 --> 00:06:30.879
&gt;&gt; Brian Holt: Yeah, and
like I mentioned previously,

88
00:06:30.879 --> 00:06:35.141
what's nice about this is like on a fast
computer, this will update a lot.

89
00:06:35.141 --> 00:06:39.839
If you're on a very slow computer,
it'll update less frequently,

90
00:06:39.839 --> 00:06:43.573
we don't have to write any
logic to accommodate that.

91
00:06:43.573 --> 00:06:46.141
React just kind of takes care of it for
us.

92
00:06:46.141 --> 00:06:52.911
That's really the what's special
about use deferred value.

