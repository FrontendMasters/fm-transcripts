WEBVTT

1
00:00:00.000 --> 00:00:03.829
&gt;&gt; Brian Holt: We're gonna get into
the various render modes of React,

2
00:00:03.829 --> 00:00:07.350
We're kinda ramp up into
React server components.

3
00:00:07.350 --> 00:00:12.027
I'm gonna argue, kinda four different
modalities of writing React, and

4
00:00:12.027 --> 00:00:16.927
I call them render modes that's just a
term that I threw out there it's not like

5
00:00:16.927 --> 00:00:18.805
an official React term here.

6
00:00:18.805 --> 00:00:22.666
And the other thing that can be kind of
confusing about this is you can kind of

7
00:00:22.666 --> 00:00:23.892
mix and match of these so

8
00:00:23.892 --> 00:00:27.222
that they're not really all
mutually exclusive to each other.

9
00:00:27.222 --> 00:00:30.122
So don't think of it as like four
different verticals it's just four

10
00:00:30.122 --> 00:00:33.033
different techniques that sometimes
can mix and sometimes can't.

11
00:00:33.033 --> 00:00:37.296
The first one that we're not going to
do together, because it's literally

12
00:00:37.296 --> 00:00:41.501
the entire point of the complete intro
to React v9 is client-side react.

13
00:00:41.501 --> 00:00:45.600
You did it, hopefully by the time you got
here that this is not the first time I've

14
00:00:45.600 --> 00:00:48.028
written React, that's client-side React.

15
00:00:48.028 --> 00:00:52.176
You ship an entire Javascript
bundle down to a webpage,

16
00:00:52.176 --> 00:00:57.204
it gets run by V8 or Spidermonkey or
Javascript Core, there it is,

17
00:00:57.204 --> 00:01:02.346
or something like that and
it renders the app out to the page, right?

18
00:01:02.346 --> 00:01:07.808
It's kind of like the traditional spa, the
single page application, kind of approach.

19
00:01:07.808 --> 00:01:12.665
I'm terming that client side React again,
I don't think that's an official term,

20
00:01:12.665 --> 00:01:14.700
maybe just the obvious term for it.

21
00:01:14.700 --> 00:01:19.648
Your server does nothing for you, all it
does is just, it ships some index, dot,

22
00:01:19.648 --> 00:01:21.945
HTML file with a JavaScript bundle and

23
00:01:21.945 --> 00:01:24.840
everything all the magic
happens client side.

24
00:01:24.840 --> 00:01:29.100
So this is the way that we've written
React for a very, very long time,

25
00:01:29.100 --> 00:01:33.573
on ten plus years, and we will continue
writing React like this for a very,

26
00:01:33.573 --> 00:01:34.584
very long time.

27
00:01:34.584 --> 00:01:38.778
The point that I want you to take away is
everything that I'm about to show you on

28
00:01:38.778 --> 00:01:41.078
the server side stuff It's all optional.

29
00:01:41.078 --> 00:01:43.585
It's all opt-in and
you should have a reason for

30
00:01:43.585 --> 00:01:48.053
adopting these techniques, you shouldn't
just say like, server components,

31
00:01:48.053 --> 00:01:51.132
they're out now I guess I have
to write server components.

32
00:01:51.132 --> 00:01:54.598
Server components should be answering
a problem that you have and

33
00:01:54.598 --> 00:01:58.705
same with everything I'm about to
show you, like server-side rendering.

34
00:01:58.705 --> 00:02:02.183
There should be a reason that you're doing
it, you should measure it, and you should

35
00:02:02.183 --> 00:02:05.276
make sure that's actually solving
the problem that you want it to solve aaid

36
00:02:05.276 --> 00:02:08.733
differently It's not just it's not just
a slam dunk win every single time, right?

37
00:02:08.733 --> 00:02:13.361
It's a tool that should be measured,
that's why I put this like not so

38
00:02:13.361 --> 00:02:14.387
hot take here.

39
00:02:14.387 --> 00:02:17.840
Start with client side,
React on all of your projects,

40
00:02:17.840 --> 00:02:22.764
unless you know that you need Next, or
you're just already shipping next maybe

41
00:02:22.764 --> 00:02:25.868
there's no reason to adopt
some of these things.

42
00:02:25.868 --> 00:02:29.956
Yeah, they're all contextual
performance enhancements, so

43
00:02:29.956 --> 00:02:33.219
you should make sure it
helps whenever you ship it.

44
00:02:33.219 --> 00:02:36.407
And you should actually make sure that
you have a need for the performance that

45
00:02:36.407 --> 00:02:40.005
you're about to ship because it introduces
a decent amount of complexity to your app.

46
00:02:40.005 --> 00:02:44.920
So that's my hot take is you
don't need to nextify everything,

47
00:02:44.920 --> 00:02:50.391
you should nextify some things,
probably, but not all of the things.

48
00:02:50.391 --> 00:02:55.567
And to be abundantly clear, I love next,
I actually really enjoy it as a product.

49
00:02:55.567 --> 00:02:59.757
This entire course that you're
looking at is a next app, right?

50
00:02:59.757 --> 00:03:03.136
I ship it at Neon,
I shipped it to previous companies,

51
00:03:03.136 --> 00:03:06.450
Vercel is one of my closest
partners at Neon, right?

52
00:03:06.450 --> 00:03:13.578
Legitimately very much enjoy it so,
don't take this as me rating on next.

53
00:03:13.578 --> 00:03:16.425
Okay, I have a lot of feelings.

54
00:03:16.425 --> 00:03:20.223
Okay, that's just really, what I'm trying
to say is I got a lot of feelings.

55
00:03:20.223 --> 00:03:23.450
And thanks for being group therapy for me.

56
00:03:23.450 --> 00:03:28.295
Okay, so we're gonna write
kind of the original ways

57
00:03:28.295 --> 00:03:32.181
of doing React server-side components.

58
00:03:32.181 --> 00:03:36.534
We're gonna start with SSG and
then we're going to move on to SSR,

59
00:03:36.534 --> 00:03:39.976
static site generation and
server site rendering.

60
00:03:39.976 --> 00:03:43.984
So, yeah, fun fact, this entire
website is done with SSG with next js,

61
00:03:43.984 --> 00:03:45.838
which I think it's really cool.

62
00:03:45.838 --> 00:03:51.466
They didn't really have to build SSG
into next js, but they did so you can.

63
00:03:51.466 --> 00:03:56.399
So if you click on this, is the repo for
the actual app itself, and

64
00:03:56.399 --> 00:04:00.997
the magic really happens here
in this next Config, I think.

65
00:04:00.997 --> 00:04:05.620
Yeah, this port, export that line
right there I know it's tiny.

66
00:04:05.620 --> 00:04:10.091
This line right there basically says,
I want you to just render everything and

67
00:04:10.091 --> 00:04:13.410
put it into the directory that
can be served statically and

68
00:04:13.410 --> 00:04:16.210
then it's all shipped to GitHub pages,
right?

69
00:04:16.210 --> 00:04:19.661
So, what's nice about all of these course
websites is they don't have to pay for

70
00:04:19.661 --> 00:04:21.910
the Any of them,
which is great thank you, Github.

71
00:04:21.910 --> 00:04:27.826
I essentially just described exactly
what static site generation is, right?

72
00:04:27.826 --> 00:04:31.782
I have a bunch of code or I have
a bunch of content that's relatively,

73
00:04:31.782 --> 00:04:36.022
we'll call it inert, Inert meaning
that it's not really interactive.

74
00:04:36.022 --> 00:04:39.757
This is just a content website
that you're looking at, right?

75
00:04:39.757 --> 00:04:44.549
It's just a bunch of texts that, and
I wanted to have common pages and

76
00:04:44.549 --> 00:04:50.169
really in reality, what I wanted is that
I wanna write everything marked down and

77
00:04:50.169 --> 00:04:53.084
I wanna to end up in nice looking webpage.

78
00:04:53.084 --> 00:04:56.501
That is 100% of why I built
this all with next js.

79
00:04:56.501 --> 00:05:00.865
So it's just for static content if
you're doing a marketing sites or

80
00:05:00.865 --> 00:05:05.603
tutorial sites or anything, it's just
text on a page or images on a page and

81
00:05:05.603 --> 00:05:10.287
there's not really any interactivity
to it SSG is exactly what you want.

82
00:05:10.287 --> 00:05:13.905
And there's some way to kind of,
you can sprinkle a little React

83
00:05:13.905 --> 00:05:18.676
interactivity on top of it there's all
sorts of really cool hybrid methodologies.

84
00:05:18.676 --> 00:05:21.342
This site in particular
you can see there's, like,

85
00:05:21.342 --> 00:05:23.010
no interactivity to it, right?

86
00:05:23.010 --> 00:05:25.628
It's basically just functionally,
just HTML,

87
00:05:25.628 --> 00:05:27.882
we're gonna build that by hand together.

88
00:05:27.882 --> 00:05:32.076
So what I want you to do,
you can open a terminal here,

89
00:05:32.076 --> 00:05:34.882
I'm just gonna do it on my desktop.

90
00:05:34.882 --> 00:05:38.695
Deskto, desktop, okay, and
I'm just gona make dir, and

91
00:05:38.695 --> 00:05:41.821
we're gonna call it SSG,
and we go into SSG, and

92
00:05:41.821 --> 00:05:46.502
then I'm gonna to say, npm,
init-y you can, if you leave off the -y.

93
00:05:46.502 --> 00:05:50.420
You can answer all the questions like,
what's this called?

94
00:05:50.420 --> 00:05:54.860
What license is this and I am not about
that life, I just like generate me

95
00:05:54.860 --> 00:05:59.750
a package.JSON, I do not care what's
in it, we are going to run npm install.

96
00:05:59.750 --> 00:06:04.734
I'm or just i, if you're trying to
save calories on finger strokes,

97
00:06:04.734 --> 00:06:06.344
I'm gonna say React.

98
00:06:06.344 --> 00:06:12.115
You can say React at 19 if you want to,
if you're watching this in the future,

99
00:06:12.115 --> 00:06:17.975
if React 20 is out, then hopefully I'm
coming back soon to teach React 20 but

100
00:06:17.975 --> 00:06:21.532
feel free to just say React and
React DOM at 19.

101
00:06:21.532 --> 00:06:26.680
Okay, I'm gonna open this in my
VScode editor, so you can see

102
00:06:26.680 --> 00:06:32.726
here I have React and react DOM installed
here I have a package lock file.

103
00:06:32.726 --> 00:06:37.977
So far so
good we're gonna be kind of weaving in and

104
00:06:37.977 --> 00:06:41.236
out of common js and es module.

105
00:06:41.236 --> 00:06:42.403
The reason being for

106
00:06:42.403 --> 00:06:47.003
that is, sometimes switching back and
forth between ES modules and common js,

107
00:06:47.003 --> 00:06:50.588
which is the two different ways
of packaging apps and node js.

108
00:06:50.588 --> 00:06:54.445
Is just really it requires so much
boilerplate code to get all the things

109
00:06:54.445 --> 00:06:58.750
connected together that I decided it was
just gonna be easier for me to just say,

110
00:06:58.750 --> 00:07:01.961
for this part, we're gonna do ES modules,
for this part,

111
00:07:01.961 --> 00:07:04.624
we're gonna do common js,
so that's just why.

112
00:07:04.624 --> 00:07:10.447
I promise that whenever I can,
I use ES modules.

113
00:07:10.447 --> 00:07:14.473
For this one, we can use ES modules so
we're gonna say type module if you don't

114
00:07:14.473 --> 00:07:17.463
know what those are,
I'll talk about them momentarily.

115
00:07:17.463 --> 00:07:21.362
But this is basically saying you can use
the import Syntax instead of the required

116
00:07:21.362 --> 00:07:22.519
syntax for for node JS.

117
00:07:22.519 --> 00:07:26.984
And in particular for this one, we're not
gonna do JSX cuz we're just gonna skip

118
00:07:26.984 --> 00:07:29.479
doing Babel altogether
to keep this really,

119
00:07:29.479 --> 00:07:34.077
really simple because the React code is
actually not the interesting part of this,

120
00:07:34.077 --> 00:07:38.319
that's the node code that's
kind of interesting about this.

121
00:07:38.319 --> 00:07:41.771
&gt;&gt; Brian Holt: Okay, and by not doing
JSX we don't have to have Babel, veat,

122
00:07:41.771 --> 00:07:44.313
Webpack, any of those
things involved here,

123
00:07:44.313 --> 00:07:46.680
we can just write it all in vanilla,
no JS.

124
00:07:46.680 --> 00:07:53.189
All right, we're gonna create another file
here, it's gonna be called index.html,

125
00:07:53.189 --> 00:07:58.239
you can put whatever you want in here,
I'm just gonna put html:5.

126
00:07:58.239 --> 00:08:03.199
This is just like a very, yeah,
html:5, this is called emmett,

127
00:08:03.199 --> 00:08:06.419
which is kind of a dead
art now because of AI,

128
00:08:06.419 --> 00:08:10.005
but I still use it out of
just pure muscle memory.

129
00:08:10.005 --> 00:08:13.619
If you do html:5, then,
just hit Enter here,

130
00:08:13.619 --> 00:08:16.891
you'll get this just
empty shell of an app.

131
00:08:16.891 --> 00:08:20.968
You can really delete these
top two lines here as well and

132
00:08:20.968 --> 00:08:25.851
I'm just going to call this like
React SSG or something like that.

133
00:08:25.851 --> 00:08:32.205
Okay, and then we're gonna
put a div ID equals root and

134
00:08:32.205 --> 00:08:37.042
then we're gonna put a special comment in

135
00:08:37.042 --> 00:08:41.481
here that looks something like that.

136
00:08:41.481 --> 00:08:46.292
All right, so you might look at,
what the hell is this?

137
00:08:46.292 --> 00:08:50.223
These two things put together like that,
and

138
00:08:50.223 --> 00:08:55.303
then my font combines all four
glyphs into one mega glyph.

139
00:08:55.303 --> 00:08:57.657
So it's an HTML comment, right?

140
00:09:01.963 --> 00:09:07.566
&gt;&gt; Brian Holt: Okay, so then we're gonna
split the string on this particular

141
00:09:07.566 --> 00:09:13.921
string here and it makes it really
easy to find, which is why we do that.

142
00:09:13.921 --> 00:09:19.236
In other words, we're going to
replace this with React code.

