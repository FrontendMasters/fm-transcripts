WEBVTT

1
00:00:00.000 --> 00:00:03.896
Okay, that was riveting, right?

2
00:00:03.896 --> 00:00:07.144
[LAUGH] Let's see if I can
do this in 10 seconds.

3
00:00:07.144 --> 00:00:08.079
No, just kidding.

4
00:00:08.079 --> 00:00:10.638
But it was pretty quick and
that was intentional.

5
00:00:10.638 --> 00:00:13.802
I always liked the first exercise
to be pretty straightforward.

6
00:00:13.802 --> 00:00:18.938
And I should probably count all that
by saying if it was not quick for

7
00:00:18.938 --> 00:00:20.783
you, don't feel bad.

8
00:00:20.783 --> 00:00:26.105
But this is what we're doing here
is adding a link to the post route.

9
00:00:26.105 --> 00:00:30.712
So the link component comes
actually from react router and

10
00:00:30.712 --> 00:00:33.728
it's just wrapped lightly by remix.

11
00:00:33.728 --> 00:00:37.915
And so we have link to the post route.

12
00:00:37.915 --> 00:00:39.555
So we're gonna slash posts.

13
00:00:39.555 --> 00:00:42.960
And so if I save this and
come over here and click on blog posts,

14
00:00:42.960 --> 00:00:46.971
that's gonna take me to a 404 page
cuz I haven't made that route yet.

15
00:00:46.971 --> 00:00:49.077
So let's come back over here and

16
00:00:49.077 --> 00:00:52.833
we're gonna make a new route
following the convention.

17
00:00:52.833 --> 00:00:57.121
The file convention that
remix currently supports.

18
00:00:57.121 --> 00:01:01.918
I say currently, because actually
in version two we're thinking about

19
00:01:01.918 --> 00:01:05.702
switching this convention
a bit to make it scale better.

20
00:01:05.702 --> 00:01:08.600
And just make it a little
bit nicer to work with.

21
00:01:08.600 --> 00:01:12.857
And fun fact, you can actually
configure this convention yourself.

22
00:01:12.857 --> 00:01:17.028
And somebody actually has built
a package that you can use to

23
00:01:17.028 --> 00:01:20.878
use the convention that
we're thinking about today.

24
00:01:20.878 --> 00:01:25.024
So if you wanted, it's a remix flat
files or something like that and

25
00:01:25.024 --> 00:01:26.423
is what it's called.

26
00:01:26.423 --> 00:01:31.106
But you can configure
routes at build time.

27
00:01:31.106 --> 00:01:34.652
Programmatically within the remix.config.

28
00:01:34.652 --> 00:01:39.972
If we do end up switching the remix
convention with the next version

29
00:01:39.972 --> 00:01:44.824
of remix then we'll also release
a package that allows you.

30
00:01:44.824 --> 00:01:47.050
To use the old convention so
you can upgrade and

31
00:01:47.050 --> 00:01:49.292
not have to move your
files all over the place.

32
00:01:49.292 --> 00:01:53.029
In addition we'll probably also have
a code mod that will automatically move

33
00:01:53.029 --> 00:01:54.015
your files for you.

34
00:01:54.015 --> 00:01:58.827
So don't worry remix is built by three.

35
00:01:58.827 --> 00:02:03.936
Well, is headed by three people who
have been maintaining NPM packages for

36
00:02:03.936 --> 00:02:05.164
a very long time.

37
00:02:05.164 --> 00:02:07.174
We totally understand
how frustrating it is,

38
00:02:07.174 --> 00:02:09.602
to have breaking changes that
like blow everything up.

39
00:02:09.602 --> 00:02:11.638
So, yeah.

40
00:02:11.638 --> 00:02:14.347
Ryan and Michael have been maintaining
react router for a long time.

41
00:02:14.347 --> 00:02:19.213
It's used by, the majority of the react to
community I built a testing library also

42
00:02:19.213 --> 00:02:21.866
used by the majority of
the react community.

43
00:02:21.866 --> 00:02:25.386
We are very cognizant of
breaking changes and so

44
00:02:25.386 --> 00:02:30.497
any breaking changes in V2 will have
a nice and smooth upgrade path.

45
00:02:30.497 --> 00:02:34.197
So anyway this is the convention that
we have currently and it's nice.

46
00:02:34.197 --> 00:02:38.968
So we're gonna make posts/index.jtsx and

47
00:02:38.968 --> 00:02:47.513
this is the route module that's gonna be
rendered when the post route is active.

48
00:02:47.513 --> 00:02:54.373
So coming back over to the readme I'm just
gonna copy this for our default export.

49
00:02:54.373 --> 00:02:56.447
Default, function.

50
00:02:56.447 --> 00:02:59.309
I'm gonna call this the posts route.

51
00:03:01.780 --> 00:03:02.735
And there we go.

52
00:03:02.735 --> 00:03:08.286
So now if I go to blog posts there it is,
posts, hooray, magic!

53
00:03:08.286 --> 00:03:10.270
Cool.

54
00:03:10.270 --> 00:03:18.681
That is it for this one any questions
about the file based routing convention.

55
00:03:18.681 --> 00:03:19.900
Yes.

56
00:03:19.900 --> 00:03:23.886
&gt;&gt; Flat routes what
are the received benefits.

57
00:03:23.886 --> 00:03:29.244
&gt;&gt; Yeah, so the benefits will become
more clear when we start getting

58
00:03:29.244 --> 00:03:35.379
into nested routing but a lot of it has
to do with the parent route is a module.

59
00:03:35.379 --> 00:03:37.331
And then all of its children
go into a folder and

60
00:03:37.331 --> 00:03:40.396
they're like separate in the file
system just the way it's organized.

61
00:03:40.396 --> 00:03:43.008
And so it's kinda annoying
when you have a lot of routes.

62
00:03:43.008 --> 00:03:47.879
So the flat file routes just allow
the parent route to be right

63
00:03:47.879 --> 00:03:50.180
next to all of its children.

64
00:03:50.180 --> 00:03:53.883
And in addition, when you get a sizable
application with a lot of routes,

65
00:03:53.883 --> 00:03:57.365
you have just tons of folders to go
through and it's super annoying.

66
00:03:57.365 --> 00:03:59.979
So this will help reduce that.

67
00:03:59.979 --> 00:04:03.414
The the trade off, of course,
is now because they're flat,

68
00:04:03.414 --> 00:04:06.201
you just have a lot of files
in a single directory.

69
00:04:06.201 --> 00:04:09.165
And so this is why I think
it's actually quite nice

70
00:04:09.165 --> 00:04:11.707
that you can configure the convention or
or

71
00:04:11.707 --> 00:04:15.886
make make up your own convention
however you like in the remix config.

72
00:04:15.886 --> 00:04:21.192
But even in the case where you've got
lots of files, I actually still think

73
00:04:21.192 --> 00:04:26.939
that's not a big deal because what are you
trying to do you're on your day to day.

74
00:04:26.939 --> 00:04:30.451
If you get a message from
your PM that says, hey,

75
00:04:30.451 --> 00:04:33.973
we need you to update this
feature on this thing.

76
00:04:33.973 --> 00:04:37.563
Well, it's always gonna come with
what page is this on, right?

77
00:04:37.563 --> 00:04:41.929
And so,
your objective is how fast can I go from?

78
00:04:41.929 --> 00:04:45.811
I know what page this is on to
the file that this code is in.

79
00:04:45.811 --> 00:04:49.298
And in both cases just
having a convention makes it

80
00:04:49.298 --> 00:04:52.962
really easy to find which
file you're looking for.

81
00:04:52.962 --> 00:04:57.676
So I'm not super concerned about having
a directory with a ton of files in it.

82
00:04:57.676 --> 00:05:01.530
And on top of that I believe
that the convention allows for

83
00:05:01.530 --> 00:05:06.267
directories as well but we're not
gonna go too deep into that I tried to

84
00:05:06.267 --> 00:05:10.862
avoid talking about things that
haven't shipped officially yet.

85
00:05:10.862 --> 00:05:14.759
But I want you just to be aware
that the convention could change.

86
00:05:14.759 --> 00:05:18.853
&gt;&gt; When using use loader data,
is there a way to show a spinner or

87
00:05:18.853 --> 00:05:22.562
a loader to show the user that
the data is being loaded?

88
00:05:22.562 --> 00:05:26.572
&gt;&gt; Yeah, so we're not gonna get
into showing loading spinners for

89
00:05:26.572 --> 00:05:30.520
the loader today, but
in the advanced remix workshop, we do.

90
00:05:30.520 --> 00:05:32.610
We talked about the different API,
which we'll use for that.

