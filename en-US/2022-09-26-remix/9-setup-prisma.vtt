WEBVTT

1
00:00:00.210 --> 00:00:02.757
We have two more pieces to this.

2
00:00:02.757 --> 00:00:06.064
And we wanna switch over to prisma for
our data.

3
00:00:06.064 --> 00:00:09.665
So we can actually save this and then we
also want to optimize our data loading.

4
00:00:09.665 --> 00:00:13.585
So actually the first
thing that I'm gonna do is

5
00:00:13.585 --> 00:00:17.905
update this getPosts to
actually read from prisma.

6
00:00:17.905 --> 00:00:23.017
So I've got this prisma thing that
is coming from our db server thing.

7
00:00:23.017 --> 00:00:27.611
This little tilde here is just
a helper thing that is built

8
00:00:27.611 --> 00:00:32.215
into Remix to resolve anything
under the app directory.

9
00:00:32.215 --> 00:00:35.382
So you can find this file in db.server.

10
00:00:35.382 --> 00:00:38.134
And this is responsible for
setting up the prisma client.

11
00:00:38.134 --> 00:00:41.067
It does some wonky things in
here that are explained there.

12
00:00:41.067 --> 00:00:42.646
So you can read that later if you want.

13
00:00:42.646 --> 00:00:45.946
But now we have access
to our Prisma client.

14
00:00:45.946 --> 00:00:48.512
If you've never used Prisma before,
that's okay.

15
00:00:48.512 --> 00:00:49.866
This is not a Prisma workshop.

16
00:00:49.866 --> 00:00:53.534
I gave you code snippets that you
can use throughout the workshop.

17
00:00:53.534 --> 00:01:01.302
But basically we already have our data
schema set up for us for our posts.

18
00:01:01.302 --> 00:01:04.929
Shoot maybe we don't know that's right
we don't have our schema set up.

19
00:01:04.929 --> 00:01:09.515
So let me add our schema or
add this to our schema.

20
00:01:09.515 --> 00:01:14.949
Here's our model, it's a, post, and our
model has a slug, that's gonna be our ID,

21
00:01:14.949 --> 00:01:20.256
the title and markdown and then we'll add
created at and updated because, why not?

22
00:01:20.256 --> 00:01:24.898
It could be useful for display, when was
last time this blog post was updated?

23
00:01:24.898 --> 00:01:30.881
So we have that, but
we also need to update our seed script.

24
00:01:30.881 --> 00:01:34.328
So that it will automatically add some
posts to the database that we can work

25
00:01:34.328 --> 00:01:36.749
with, so
we don't have to create them all the time.

26
00:01:36.749 --> 00:01:39.318
So I'm going to borrow
the seat script as well so

27
00:01:39.318 --> 00:01:41.639
we can save ourselves
a little bit of time.

28
00:01:44.401 --> 00:01:48.944
So what this is gonna do
is the seat script actually

29
00:01:48.944 --> 00:01:54.039
creates our user for us and
then it has our posts in here.

30
00:01:54.039 --> 00:01:58.969
So, just an array of posts here's our slug
title markdown, and then down here for

31
00:01:58.969 --> 00:02:02.479
each one of those posts we just
absurd to create that post.

32
00:02:02.479 --> 00:02:06.810
We're gonna attach script warning here
because Prisma does hasn't been updated to

33
00:02:06.810 --> 00:02:08.221
know about our new schema.

34
00:02:08.221 --> 00:02:13.798
For its TypeScript so the last thing that
we need to do for this piece is inside

35
00:02:13.798 --> 00:02:19.307
of this data loading directory we're
going to run MPX Prisma migrate dev.

36
00:02:19.307 --> 00:02:24.686
To create a new migration and we're
going to add posts and there we go cool.

37
00:02:24.686 --> 00:02:30.058
So now typescript is happy because
Prisma now knows about the post model.

38
00:02:30.058 --> 00:02:32.456
And we have some posts in our database.

39
00:02:32.456 --> 00:02:36.983
So again not a prison Workshop but
Prisma is pretty rad.

40
00:02:36.983 --> 00:02:39.011
Anybody here use prisma before?

41
00:02:39.011 --> 00:02:41.872
You can raise your hand on online too,
if you want.

42
00:02:41.872 --> 00:02:43.094
It is awesome.

43
00:02:43.094 --> 00:02:46.298
If you've used it, then you're
probably like, yeah, it is awesome.

44
00:02:46.298 --> 00:02:48.516
Okay, so prisma.post.

45
00:02:48.516 --> 00:02:51.289
We're going to find many.

46
00:02:51.289 --> 00:02:53.904
And we're just gonna get them
all give me all the posts.

47
00:02:53.904 --> 00:02:59.750
And what's really great about this
is we still have type safety,

48
00:02:59.750 --> 00:03:03.269
from the database all the way to our UI.

49
00:03:03.269 --> 00:03:04.927
I just love that.

50
00:03:04.927 --> 00:03:07.053
How did I ever write
code without TypeScript?

51
00:03:07.053 --> 00:03:07.660
I don't know.

52
00:03:07.660 --> 00:03:10.091
I legitimately do not know.

53
00:03:10.091 --> 00:03:16.667
Okay, so
let's get this app started up again.

54
00:03:16.667 --> 00:03:20.646
And now we have no posts because
I forgot to run the seed script.

55
00:03:20.646 --> 00:03:24.900
So last thing we need
to do is npx prisma dv

56
00:03:24.900 --> 00:03:29.541
seed to get our posts
put into the database.

57
00:03:29.541 --> 00:03:33.009
There they are, like magic.

58
00:03:33.009 --> 00:03:35.805
Okay, great.

59
00:03:35.805 --> 00:03:40.568
One last thing that I wanna do here,
and that is one of the cool things

60
00:03:40.568 --> 00:03:45.498
about the fact that this is a loader and
that it runs only on the server,

61
00:03:45.498 --> 00:03:51.286
is that you get the opportunity to filter
out the stuff that your UI doesn't need.

62
00:03:51.286 --> 00:03:54.953
And you can perform calculations
you do all sorts of

63
00:03:54.953 --> 00:03:57.520
things before it ends up in your UI.

64
00:03:57.520 --> 00:04:01.726
What's the number one reason people go
to Graph QL, I actually don't know but

65
00:04:01.726 --> 00:04:02.564
I would guess.

66
00:04:02.564 --> 00:04:07.284
That's one of the main reasons people go
to Graph QL is the data over fetching

67
00:04:07.284 --> 00:04:07.965
problem.

68
00:04:07.965 --> 00:04:11.342
They've got like 30 different endpoints
they need to go get data from.

69
00:04:11.342 --> 00:04:12.905
And so they hit every one of them.

70
00:04:12.905 --> 00:04:16.292
Sometimes they have to wait for this one
before they can fetch this one, right.

71
00:04:16.292 --> 00:04:17.949
And so it just like takes a long time.

72
00:04:17.949 --> 00:04:20.669
It's tons of data downloaded to
the user's device, it makes it slow.

73
00:04:20.669 --> 00:04:23.064
And so they say, Graph QL and
just make a resolver.

74
00:04:23.064 --> 00:04:24.297
That happens on the server side.

75
00:04:24.297 --> 00:04:26.510
So it can like resolve these queries.

76
00:04:26.510 --> 00:04:30.359
And off I go, I'm only getting
the data in the UI that I need.

77
00:04:30.359 --> 00:04:31.240
Well, guess what?

78
00:04:31.240 --> 00:04:33.007
You have that with the loader.

79
00:04:33.007 --> 00:04:34.026
You solve that problem.

80
00:04:34.026 --> 00:04:36.194
That problem does not exist in remix.

81
00:04:36.194 --> 00:04:41.687
If we were to say, hey, all I actually
care about is the slug and the title.

82
00:04:41.687 --> 00:04:42.527
Well check this out.

83
00:04:42.527 --> 00:04:44.168
I can say post.map.

84
00:04:45.399 --> 00:04:52.495
And then we'll get a slug from p.slug and
title from p.title and poof.

85
00:04:52.495 --> 00:04:54.249
Now I'm only sending the data I want.

86
00:04:54.249 --> 00:04:59.077
So here let's actually let's compare
this to make sure that we're

87
00:04:59.077 --> 00:05:01.544
doing what we think we're doing.

88
00:05:01.544 --> 00:05:06.437
So I come over here, we'll go to this.

89
00:05:06.437 --> 00:05:09.776
Look at our data request preview.

90
00:05:09.776 --> 00:05:12.045
We've got posts, and
look at all that nonsense.

91
00:05:12.045 --> 00:05:12.836
I don't need that.

92
00:05:12.836 --> 00:05:14.323
Who needs that markdown in there?

93
00:05:14.323 --> 00:05:17.278
So there's a ton of markdown,
all that stuff.

94
00:05:17.278 --> 00:05:18.710
I'm just looking at a list of the posts.

95
00:05:18.710 --> 00:05:19.805
I don't need all that stuff.

96
00:05:19.805 --> 00:05:24.995
So now we just simplify it down to
just the stuff that our UI needs,

97
00:05:27.124 --> 00:05:30.032
And now, all we're getting
is the stuff our UI needs.

98
00:05:30.032 --> 00:05:33.635
Graph QL has other use cases for sure.

99
00:05:33.635 --> 00:05:38.424
But this ain't 1, when you're using remix.

100
00:05:38.424 --> 00:05:39.457
I think that's cool.

101
00:05:39.457 --> 00:05:42.511
Now, on top of that,
we have something even better with prisma.

102
00:05:42.511 --> 00:05:50.716
And that is we have select
title through and slug through.

103
00:05:50.716 --> 00:05:54.216
So now we can at the database level
only query this stuff that we want.

104
00:05:54.216 --> 00:05:57.510
Prisma is awesome that way but
if you're making fetcher calls or

105
00:05:57.510 --> 00:05:58.856
whatever you're doing.

106
00:05:58.856 --> 00:06:04.130
Yeah, you can totally just filter
out the stuff your UI doesn't need.

107
00:06:04.130 --> 00:06:06.464
It's pretty bad.

108
00:06:06.464 --> 00:06:10.582
Okay, last thing I'm gonna do is
when I interact with the database,

109
00:06:10.582 --> 00:06:14.558
I like to do that in a separate file
models file that takes care of all

110
00:06:14.558 --> 00:06:16.552
interaction with the database.

111
00:06:16.552 --> 00:06:19.224
I just think that scales nicer.

112
00:06:19.224 --> 00:06:23.087
So we're going to get take this.

113
00:06:23.087 --> 00:06:25.529
We're going to move it to models.

114
00:06:25.529 --> 00:06:29.962
And I'm going to make a file
called post.server.ts.

115
00:06:29.962 --> 00:06:34.321
The dot server on here
is not always necessary.

116
00:06:34.321 --> 00:06:38.710
But what it does is it indicates to the
developer that this is only supposed to

117
00:06:38.710 --> 00:06:41.468
have server stuff, and
it indicates to remix.

118
00:06:41.468 --> 00:06:45.310
That when it's doing the client build,
it can just skip over this file.

119
00:06:45.310 --> 00:06:49.853
It doesn't even need to bother resolving
those dependencies or anything else.

120
00:06:49.853 --> 00:06:51.769
So that is what this is all about.

121
00:06:51.769 --> 00:06:55.603
So we're gonna export this and
instead of get posting an essay,

122
00:06:55.603 --> 00:07:00.147
get post list items that we're not
indicating this gets your posts like no,

123
00:07:00.147 --> 00:07:02.568
it's just the list items for the posts.

124
00:07:02.568 --> 00:07:06.402
So now we can say get post list items.

125
00:07:06.402 --> 00:07:10.776
And we're basically in the same spot this
if this were the user experience I was

126
00:07:10.776 --> 00:07:12.970
trying to create this is how I would do it

