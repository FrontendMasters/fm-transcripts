WEBVTT

1
00:00:00.082 --> 00:00:03.203
We're going to talk about
environment variables, again,

2
00:00:03.203 --> 00:00:06.812
it's really important I must emphasize
to you that you only do this for

3
00:00:06.812 --> 00:00:10.013
environment variables you're
okay ending up on the client.

4
00:00:10.013 --> 00:00:12.799
You do not want to do this for
all environment variables or

5
00:00:12.799 --> 00:00:14.721
whatever cuz that could be really bad.

6
00:00:14.721 --> 00:00:19.697
So let's first talk about the problem,
what are we trying to accomplish here?

7
00:00:19.697 --> 00:00:23.787
So I'm going to come into, yeah,

8
00:00:23.787 --> 00:00:29.443
let's go into admin, index, that'll work.

9
00:00:29.443 --> 00:00:36.747
And we'll say process env ADMIN_EMAIL.

10
00:00:36.747 --> 00:00:38.741
Did I spell that right, EMAIL?

11
00:00:38.741 --> 00:00:40.205
There we go, right?

12
00:00:40.205 --> 00:00:45.525
So that's what I, my objective is
admin email should go right here.

13
00:00:45.525 --> 00:00:48.334
And again, I've got this environment
variable configured in here.

14
00:00:48.334 --> 00:00:52.989
Remix automatically reads that .env file,
in production you should have these set as

15
00:00:52.989 --> 00:00:56.767
environment variables in whatever
hosting provider you're using.

16
00:00:56.767 --> 00:00:59.402
However, every one of
them does it differently,

17
00:00:59.402 --> 00:01:01.168
you have to look up how they do it.

18
00:01:01.168 --> 00:01:04.682
But during development,
the .env file works great.

19
00:01:04.682 --> 00:01:09.822
And so I just want to print
out what is the admin email?

20
00:01:09.822 --> 00:01:13.061
So if I come over here,
go to admin, the root route,

21
00:01:13.061 --> 00:01:16.610
I'm gonna get unexpected
error process is not defined.

22
00:01:16.610 --> 00:01:18.035
What garbage is this?

23
00:01:18.035 --> 00:01:20.513
And what's really annoying is,

24
00:01:20.513 --> 00:01:25.567
if I look at the server rendered stuff,
admin email is right there.

25
00:01:25.567 --> 00:01:26.699
So it actually works.

26
00:01:26.699 --> 00:01:28.412
If I turn off JavaScript, it works.

27
00:01:28.412 --> 00:01:32.035
I dehanced my project.

28
00:01:32.035 --> 00:01:32.772
Remember that?

29
00:01:32.772 --> 00:01:39.399
Yeah, so the problem is that
the browser does not have process.

30
00:01:39.399 --> 00:01:41.403
It has a processing
instruction apparently.

31
00:01:41.403 --> 00:01:44.354
[LAUGH] But it doesn't have process so

32
00:01:44.354 --> 00:01:49.315
that is this is not going to work
not in your React components.

33
00:01:49.315 --> 00:01:54.723
Now it would work in a loader again
like that works just fine and

34
00:01:54.723 --> 00:01:59.507
so what you could do is you
could say export to a function

35
00:01:59.507 --> 00:02:04.919
that's a loader and
return a JSON response with adminEmail.

36
00:02:09.027 --> 00:02:17.253
And we'll bring in JSON from remix node.

37
00:02:17.253 --> 00:02:25.684
Cool, and then we can say,
useLoaderData Admin email.

38
00:02:25.684 --> 00:02:26.656
And there we go.

39
00:02:26.656 --> 00:02:32.481
Now it works out an email.

40
00:02:32.481 --> 00:02:34.712
That's great.

41
00:02:34.712 --> 00:02:38.221
However, I don't wanna do that.

42
00:02:38.221 --> 00:02:40.978
You didn't even wanna wait for
me to type all that.

43
00:02:40.978 --> 00:02:42.142
I could tell.

44
00:02:42.142 --> 00:02:44.081
You're like man I'm going
to type the whole thing.

45
00:02:44.081 --> 00:02:45.091
Yes, I did.

46
00:02:45.091 --> 00:02:46.681
And it was not cool.

47
00:02:46.681 --> 00:02:48.039
I don't want to do that.

48
00:02:48.039 --> 00:02:51.933
And the reason I don't want to do that is
because, well, here it's bringing back.

49
00:02:51.933 --> 00:02:56.408
This will never change through the entire
lifetime of while this application is

50
00:02:56.408 --> 00:03:00.629
running until the next deploy or
until I change the environment variable.

51
00:03:00.629 --> 00:03:02.540
That value won't change.

52
00:03:02.540 --> 00:03:08.287
So why do I care to send that
to the client like this?

53
00:03:08.287 --> 00:03:11.733
I could just have that, or

54
00:03:11.733 --> 00:03:16.754
why do I have it as part of this loader?

55
00:03:16.754 --> 00:03:20.694
If I anywhere else that I want to do
this I'd have to have another loader for

56
00:03:20.694 --> 00:03:24.019
that, it'd be really annoying
I don't want to do that.

57
00:03:24.019 --> 00:03:28.635
Because this doesn't change during
the lifetime of the users experience on

58
00:03:28.635 --> 00:03:32.601
the app, I think that it's it would
actually be better to instead

59
00:03:32.601 --> 00:03:34.205
just have this be global.

60
00:03:34.205 --> 00:03:39.053
You typically don't do global stuff in
web apps it's not the best to just say

61
00:03:39.053 --> 00:03:43.828
let's global everything because if
those things can change now you have to

62
00:03:43.828 --> 00:03:48.711
start talking about subscriptions and
render and use mutable data source.

63
00:03:48.711 --> 00:03:52.773
So yeah, we don't wanna do that typically,
but for this,

64
00:03:52.773 --> 00:03:54.979
I think it totally makes sense.

65
00:03:54.979 --> 00:03:59.121
And I have a convention that
I really like for this.

66
00:03:59.121 --> 00:04:04.684
And that convention involves
a global env variable.

67
00:04:04.684 --> 00:04:10.365
So, again, because this runs both
on the client and on the server,

68
00:04:10.365 --> 00:04:16.663
I need to have a way to define a global
env for both the client and the server.

69
00:04:16.663 --> 00:04:21.001
So, let's do the server first because
this is gonna blow up on the server side

70
00:04:21.001 --> 00:04:21.547
as well.

71
00:04:21.547 --> 00:04:24.936
If we look at our console output,
we're gonna get yeah,

72
00:04:24.936 --> 00:04:28.465
just a ton of nonsense reference
error env is not to find, so

73
00:04:28.465 --> 00:04:31.238
it's let's deal with
the server side first.

74
00:04:31.238 --> 00:04:34.923
For the server,
you have this entry.server file.

75
00:04:34.923 --> 00:04:39.597
That is the first part of your
code that's going to run or

76
00:04:39.597 --> 00:04:43.682
get imported when your server starts up,
okay?

77
00:04:43.682 --> 00:04:48.515
Now again, I probably should mention
that we're using the remix server module

78
00:04:48.515 --> 00:04:53.431
which has an express server underneath
the hood that is serving all these pages.

79
00:04:53.431 --> 00:04:58.679
You can actually integrate remix
within another express server or

80
00:04:58.679 --> 00:05:02.891
within a fastly or
faster phi I always forget or a COA or

81
00:05:02.891 --> 00:05:07.129
like whatever other node
framework that you want to.

82
00:05:07.129 --> 00:05:08.998
And they're all going to
be a little bit different.

83
00:05:08.998 --> 00:05:13.782
But this entry server typically is
going to be the first bit of your code

84
00:05:13.782 --> 00:05:15.170
that's imported.

85
00:05:15.170 --> 00:05:21.651
And so
here I can say global.env equals admin,

86
00:05:21.651 --> 00:05:27.008
email process env admin email, okay?

87
00:05:27.008 --> 00:05:30.674
And so now my server renderer is going
to work and actually you see a flash,

88
00:05:30.674 --> 00:05:31.514
do you see that?

89
00:05:31.514 --> 00:05:36.489
It flashes for a second before hydration
kicks in because now the client is busted.

90
00:05:36.489 --> 00:05:41.945
But that server renderer totally works
because we now have that defined.

91
00:05:41.945 --> 00:05:43.137
Where is that?

92
00:05:43.137 --> 00:05:46.165
There it is.

93
00:05:46.165 --> 00:05:49.617
Great, so now on the client side,
we have well,

94
00:05:49.617 --> 00:05:54.267
you might think, well,
it'll just be the entry.client.

95
00:05:54.267 --> 00:05:59.950
Well, yes, this is the first bit of your
code that actually executes on the client.

96
00:05:59.950 --> 00:06:02.663
However, this only executes on the client.

97
00:06:02.663 --> 00:06:07.479
So you can't say window.env
equals anything with

98
00:06:07.479 --> 00:06:12.078
process env because again wait a second,
okay?

99
00:06:12.078 --> 00:06:14.669
[LAUGH] Process is not defined.

100
00:06:14.669 --> 00:06:18.187
I'm not sure why that what it's okay.

101
00:06:18.187 --> 00:06:19.826
Anybody, do you know what it is?

102
00:06:19.826 --> 00:06:20.669
&gt;&gt; Servers working.

103
00:06:20.669 --> 00:06:25.120
&gt;&gt; The server works, but the reason that
it's not blowing up hydration is because

104
00:06:25.120 --> 00:06:27.452
this line blows up before we can hydrate.

105
00:06:27.452 --> 00:06:29.531
[LAUGH] So it's actually not hydrating.

106
00:06:29.531 --> 00:06:30.585
So that's fun.

107
00:06:30.585 --> 00:06:33.661
The whole app actually still works
even though we're not hydrating.

108
00:06:33.661 --> 00:06:34.822
That's hilarious.

109
00:06:34.822 --> 00:06:36.130
That's fun.

110
00:06:36.130 --> 00:06:40.551
Okay, so yes, this is not going to work
if you wanna have JavaScript to work.

111
00:06:40.551 --> 00:06:41.930
So what are we gonna do?

112
00:06:41.930 --> 00:06:46.201
Well, we actually are going
to use a loader for this.

113
00:06:46.201 --> 00:06:48.627
We're gonna go into our root.

114
00:06:48.627 --> 00:06:51.825
And we'll have an ENV as prose or

115
00:06:51.825 --> 00:06:56.332
admin email process.env.ADMIN_EMAIL.

116
00:06:58.914 --> 00:07:02.493
And now I can get my data
from use loader data.

117
00:07:06.128 --> 00:07:13.287
And I'm going to add a script
with dangerously set inner HTML.

118
00:07:13.287 --> 00:07:17.015
I'm going to generate JavaScript,

119
00:07:17.015 --> 00:07:21.954
window.env equals JSON stringify data.env.

120
00:07:26.662 --> 00:07:28.265
There we go.

121
00:07:28.265 --> 00:07:30.669
You got a format code like a Neanderthal.

122
00:07:30.669 --> 00:07:36.459
Okay, now we have a global
env in the client.

123
00:07:36.459 --> 00:07:39.395
And we have a global env on the server
type scripts and I'm happy but

124
00:07:39.395 --> 00:07:40.400
we can fix that later.

125
00:07:42.915 --> 00:07:48.708
Ta-da, admin email and
no full page refreshes anymore, hooray!

126
00:07:48.708 --> 00:07:53.615
Okay, so quick review for
the server side, we can go in,

127
00:07:53.615 --> 00:07:56.903
in our entry server say global.ENV.

128
00:07:56.903 --> 00:08:00.122
And so
now when this code runs on the server,

129
00:08:00.122 --> 00:08:04.220
that server renders just
fine because it's on global.

130
00:08:04.220 --> 00:08:05.993
That's how you do it in node.

131
00:08:05.993 --> 00:08:10.409
And then on the client,
we're going into our app right here.

132
00:08:10.409 --> 00:08:17.608
And we're going to use our loader to
get it from the server into the client.

133
00:08:17.608 --> 00:08:20.495
Interestingly, you could actually say,

134
00:08:20.495 --> 00:08:24.033
global.env right here,
and that would also work.

135
00:08:24.033 --> 00:08:28.076
Here you go because it's global, cool.

136
00:08:28.076 --> 00:08:33.865
All right, great, so let's make
TypeScript not super angry about this.

137
00:08:33.865 --> 00:08:38.024
I'm going to make a file
called env.server.Ts and

138
00:08:38.024 --> 00:08:43.033
this is going to have a function
called get env and that's going

139
00:08:43.033 --> 00:08:48.254
to return my env and we're going
to export that function so nope.

140
00:08:48.254 --> 00:08:52.269
Thanks though admin email.

141
00:08:52.269 --> 00:08:53.614
There we go.

142
00:08:53.614 --> 00:08:55.743
And so now we can come in here.

143
00:08:55.743 --> 00:09:00.551
We'll say getEnv and

144
00:09:00.551 --> 00:09:06.164
an entry server getEnv.

145
00:09:06.164 --> 00:09:09.315
Okay, pleasure skill is
still not happy about this.

146
00:09:09.315 --> 00:09:13.409
So the next thing we're going to do, I
actually I think I just gave this to you,

147
00:09:13.409 --> 00:09:15.597
because it's kind of TypeScript stuff.

148
00:09:15.597 --> 00:09:18.787
And this is not a TypeScript workshop.

149
00:09:18.787 --> 00:09:23.673
So we'll come over here
to declare global ENV.

150
00:09:23.673 --> 00:09:25.792
So what how do we get the type of the ENV?

151
00:09:25.792 --> 00:09:29.931
We're going to say type ENV
equals type of getEnv and

152
00:09:29.931 --> 00:09:32.480
we want the return type of that.

153
00:09:32.480 --> 00:09:37.727
So return type, nice,
handy generic to get the type of the env.

154
00:09:37.727 --> 00:09:40.382
So now, our env has the admin email.

155
00:09:40.382 --> 00:09:45.332
This is great because in our files where
we want to start referencing this we can

156
00:09:45.332 --> 00:09:47.510
say env.get some autocomplete.

157
00:09:47.510 --> 00:09:49.989
So that's fancy.

158
00:09:49.989 --> 00:09:52.793
But that could be a string or undefined.

159
00:09:52.793 --> 00:09:57.773
In most cases, you're not going to
function properly if your environment

160
00:09:57.773 --> 00:09:59.677
variables are not defined.

161
00:09:59.677 --> 00:10:03.949
So the last thing we're going to do
is say invariant on admin email.

162
00:10:07.824 --> 00:10:11.347
And Admin email is not set.

163
00:10:11.347 --> 00:10:15.404
So now our env will
require the admin email.

164
00:10:15.404 --> 00:10:20.620
And if for some reason that's not defined,
then you'll get an error on startup.

165
00:10:20.620 --> 00:10:25.040
And so that your server won't startup,
won't deploy, and

166
00:10:25.040 --> 00:10:28.169
your old app will still work, hopefully.

167
00:10:28.169 --> 00:10:32.091
The existing deploy should still work,
hopefully, and

168
00:10:32.091 --> 00:10:34.223
everything should be golden.

169
00:10:34.223 --> 00:10:37.970
And now you have a way where you
can anywhere in the app reference

170
00:10:37.970 --> 00:10:42.357
your global environment variables
because you set it to global here, and

171
00:10:42.357 --> 00:10:44.003
you set it to global there.

172
00:10:44.003 --> 00:10:47.287
Again, please don't put like
a ton of nonsense on this object.

173
00:10:47.287 --> 00:10:50.635
It really should just be the stuff
you want in the client, and

174
00:10:50.635 --> 00:10:55.036
just the stuff that doesn't change during
the lifetime of the app should just be

175
00:10:55.036 --> 00:10:56.890
environment variables, okay?

176
00:10:56.890 --> 00:10:59.375
Great, that was fun.

177
00:10:59.375 --> 00:11:02.669
Any questions or
anything before we move on?

178
00:11:02.669 --> 00:11:05.939
&gt;&gt; Is this how you'd recommend
approaching this in production?

179
00:11:05.939 --> 00:11:07.299
Or is it more of a demo and

180
00:11:07.299 --> 00:11:11.517
there's a package plug in that handles
the ENV passing like this for you?

181
00:11:11.517 --> 00:11:12.685
&gt;&gt; Yeah, good question.

182
00:11:12.685 --> 00:11:16.735
So I think at the heart of the question
is, hmm, that seems like a lot of work.

183
00:11:16.735 --> 00:11:21.518
[LAUGH] I'd rather not have
to do that myself at least

184
00:11:21.518 --> 00:11:25.422
I'm not trying to downplay or anything.

185
00:11:25.422 --> 00:11:28.972
I don't think that I would
install a package for

186
00:11:28.972 --> 00:11:34.580
this if it existed just because I don't
think it's that much work myself.

187
00:11:34.580 --> 00:11:37.290
And I'd prefer to have
the code in front of me so

188
00:11:37.290 --> 00:11:40.985
I can modify it as needed without
having to learn some package.

189
00:11:40.985 --> 00:11:44.053
This is absolutely how
I do it in production.

190
00:11:44.053 --> 00:11:47.803
I didn't mention it before, but
my app is 27,000 lines of code and

191
00:11:47.803 --> 00:11:51.381
when we're talking remix,
that's actually pretty significant.

192
00:11:51.381 --> 00:11:55.742
Because Remix is like,
a lot smaller than what I used to write.

193
00:11:55.742 --> 00:11:59.771
So and it works great for me.

194
00:11:59.771 --> 00:12:04.647
So I don't think that I'm unaware
of a package that does this but

195
00:12:04.647 --> 00:12:10.338
really in essence you literally just
have one file that holds a function for

196
00:12:10.338 --> 00:12:14.970
getting the environment variables
you want shared across.

197
00:12:14.970 --> 00:12:19.499
Do you go to your entry server to set this
and then you go to your route to set this

198
00:12:19.499 --> 00:12:23.488
width and then there's a little bit
of work in the loader I suppose.

199
00:12:23.488 --> 00:12:26.011
But other than that that's kind of it so

200
00:12:26.011 --> 00:12:29.460
I'm not sure I would care
to do that any differently.

