WEBVTT

1
00:00:00.000 --> 00:00:04.121
[MUSIC]

2
00:00:04.121 --> 00:00:05.853
&gt;&gt; Jafar Husain: Now let's try and
implement concatMap,

3
00:00:05.853 --> 00:00:07.420
I think it's already up here.

4
00:00:07.420 --> 00:00:11.812
But the reason why we're implementing
concatMap is that it's such a common

5
00:00:11.812 --> 00:00:16.340
pattern to go map, map, map and then
follow up with a concatAll, concatAll,

6
00:00:16.340 --> 00:00:18.212
etc., and flatten out again.

7
00:00:18.212 --> 00:00:21.280
But because you're often doing a map
followed by a concatAll, well,

8
00:00:21.280 --> 00:00:23.412
why don't we just save
ourselves some typing and

9
00:00:23.412 --> 00:00:26.020
fuse those into one
function called concatMap?

10
00:00:26.020 --> 00:00:26.870
And so, as you can see here,

11
00:00:26.870 --> 00:00:31.130
it's relatively straightforward,
concatMap takes a function.

12
00:00:31.130 --> 00:00:34.940
Now the one catch is that it expects
that function to return an array.

13
00:00:34.940 --> 00:00:38.113
Because we're gonna take some flat array,
presumably, and

14
00:00:38.113 --> 00:00:41.773
then map over it to apply a function
to each item, creating a new array,

15
00:00:41.773 --> 00:00:44.842
with the resulting array being
a two-dimensional array.

16
00:00:44.842 --> 00:00:46.500
So in other words,
it has to be two dimensional so

17
00:00:46.500 --> 00:00:48.130
that we can apply concatAll to it.

18
00:00:48.130 --> 00:00:49.640
So-
&gt;&gt; Speaker 2: [INAUDIBLE]

19
00:00:49.640 --> 00:00:50.232
&gt;&gt; Jafar Husain: Yeah, absolutely.

20
00:00:50.232 --> 00:00:55.490
So concatMap takes
a projection function that's

21
00:00:55.490 --> 00:01:00.990
expected to return an array when given
a value, and then it flattens it out.

22
00:01:02.470 --> 00:01:05.852
So here we have Spanish,
French and English words, right.

23
00:01:09.344 --> 00:01:12.090
&gt;&gt; Jafar Husain: 0, 1 and 2,
a bunch of words for them.

24
00:01:12.090 --> 00:01:15.350
We can take all those and
call concatMap, right?

25
00:01:15.350 --> 00:01:19.810
And look up the return.

26
00:01:19.810 --> 00:01:23.700
In this case any of these methods,
excuse me,

27
00:01:23.700 --> 00:01:28.756
one of any of these items from Spanish,
French, English words, and

28
00:01:28.756 --> 00:01:31.200
that'll create a two-dimensional array and
will flatten it all out.

29
00:01:33.500 --> 00:01:36.530
So it's just a map followed by
a concatAll, nothing to it,

30
00:01:36.530 --> 00:01:37.740
just a convenience function.

31
00:01:37.740 --> 00:01:41.160
So whenever you see concatMap you
gotta realize we're using a map, or

32
00:01:41.160 --> 00:01:43.990
deepening one level of nesting, and
then we're flattening it out again.

33
00:01:43.990 --> 00:01:46.740
So it's convenient to do those
things at the same time.

34
00:01:46.740 --> 00:01:50.460
So let's use concatMap to
retrieve the ID title and

35
00:01:50.460 --> 00:01:55.200
the 150x200 box URL for every video.

36
00:01:55.200 --> 00:01:59.260
So I think we solved this
problem earlier with map.

37
00:01:59.260 --> 00:02:02.901
Sorry, let me just make sure it's
not showing all the answers here and

38
00:02:02.901 --> 00:02:03.836
restart the lab.

39
00:02:13.955 --> 00:02:16.219
&gt;&gt; Jafar Husain: Which
exercise were we on?

40
00:02:16.219 --> 00:02:17.098
&gt;&gt; Speaker 3: 14.
&gt;&gt; Jafar Husain: 14?

41
00:02:17.098 --> 00:02:17.943
Thanks very much.

42
00:02:23.549 --> 00:02:24.432
&gt;&gt; Jafar Husain: I think.

43
00:02:26.456 --> 00:02:27.411
&gt;&gt; Jafar Husain: Here we go.

44
00:02:49.596 --> 00:02:52.906
&gt;&gt; Jafar Husain: Okay, so we're on 14.

45
00:02:52.906 --> 00:02:54.450
Let's try this out.

46
00:02:54.450 --> 00:02:57.699
So our previous solution just used map and
concatAll.

47
00:02:59.300 --> 00:03:03.497
So we're gonna map over each movieList.

48
00:03:03.497 --> 00:03:09.733
And each movieList has a collection of
videos, which we'll map over as well.

49
00:03:14.962 --> 00:03:17.820
&gt;&gt; Jafar Husain: Each video
has a boxart collection.

50
00:03:17.820 --> 00:03:22.347
Now, remember, instead of creating
the object right now, we've gotta wait and

51
00:03:22.347 --> 00:03:26.954
keep mapping until every object we need to
create our result is bound to a variable.

52
00:03:26.954 --> 00:03:28.866
And so we're gonna map, now, over boxes.

53
00:03:28.866 --> 00:03:30.751
Actually, technically
we're gonna filter first.

54
00:03:30.751 --> 00:03:35.826
We're gonna look for the boxart with

55
00:03:35.826 --> 00:03:41.398
a width of 150 and a height of 200.

56
00:03:41.398 --> 00:03:45.531
I'm gonna bring that to the next line,
cuz I'm gonna follow that up with a map.

57
00:03:45.531 --> 00:03:50.320
And I'm gonna map over that, and I'm
gonna grab just the URL of that boxart.

58
00:03:50.320 --> 00:03:53.990
Well, actually, technically now that
I've got boxart bound to a variable,

59
00:03:53.990 --> 00:03:57.790
video is bound to a variable, I have
everything I need to create my result.

60
00:03:57.790 --> 00:04:01.625
So I'm just gonna create the final result,
which is ID title.

61
00:04:06.564 --> 00:04:08.206
&gt;&gt; Jafar Husain: Let me
pull up the video ID.

62
00:04:11.189 --> 00:04:13.904
&gt;&gt; Jafar Husain: And
video title, and the box art,

63
00:04:13.904 --> 00:04:17.660
which in this case is actually the URL,
right?

64
00:04:17.660 --> 00:04:19.590
So this is what the result
supposed to look like.

65
00:04:19.590 --> 00:04:24.566
So instead of just the boxart, or instead
of whole boxart, I'm just gonna pull out

66
00:04:24.566 --> 00:04:28.492
the URL property, and
I'm gonna finish up the JSON object here.

67
00:04:28.492 --> 00:04:34.100
And then finish up my map, and
then finish up my other map.

68
00:04:36.387 --> 00:04:39.967
&gt;&gt; Jafar Husain: And now all I'm going
to apply concatAll because I wanna

69
00:04:39.967 --> 00:04:40.888
flatten out.

70
00:04:44.020 --> 00:04:46.121
&gt;&gt; Jafar Husain: Two levels,
I'm gonna apply two concatAlls.

71
00:04:48.902 --> 00:04:52.789
&gt;&gt; Jafar Husain: So
I'm gonna see, perfect.

72
00:05:03.844 --> 00:05:06.500
&gt;&gt; Jafar Husain: So that was
the solution to the previous example.

73
00:05:06.500 --> 00:05:08.650
Now concatMap is really simple.

74
00:05:08.650 --> 00:05:14.432
Any place you see a map followed by
a concatAll you can replace that.

75
00:05:14.432 --> 00:05:15.634
We should line up here.

76
00:05:22.128 --> 00:05:24.777
&gt;&gt; Jafar Husain: Yes,
you can replace that with a concatMap,

77
00:05:24.777 --> 00:05:27.090
which is just gonna need its function.

78
00:05:28.090 --> 00:05:30.600
So now I'm gonna delete one concatAll,
I'm gonna go here.

79
00:05:31.970 --> 00:05:35.920
So how do I know that this
concatAll follows this map?

80
00:05:35.920 --> 00:05:38.450
Because of good formatting practice.

81
00:05:38.450 --> 00:05:40.366
I can identify it with my eye, right?

82
00:05:40.366 --> 00:05:44.400
This is why it's so important that we
learn how to format large expressions.

83
00:05:44.400 --> 00:05:46.750
It's not that large expressions
are too complicated.

84
00:05:46.750 --> 00:05:49.565
Just like any regular program, if you

85
00:05:49.565 --> 00:05:53.025
got rid of all the tabs in your program
it would be totally unreadable, right?

86
00:05:53.025 --> 00:05:55.665
It's not that it's too complicated
to have loops in your program.

87
00:05:55.665 --> 00:05:58.355
It's just that you need
tabs to visually guide your

88
00:05:58.355 --> 00:06:00.465
eye about what the structure
of the program is.

89
00:06:00.465 --> 00:06:05.295
And so I'm gonna take map here,
replace that with concatMap.

90
00:06:05.295 --> 00:06:07.295
And now we have a shorter
version of the answer.

91
00:06:07.295 --> 00:06:08.825
I still get that same
missing argument list,

92
00:06:08.825 --> 00:06:12.160
that might have to do with the fact
I'm using arrow functions here.

93
00:06:12.160 --> 00:06:14.121
I'm not sure, but I'll show the answer and

94
00:06:14.121 --> 00:06:17.051
I'll prove to you it's the same
answer with the long functions.

95
00:06:22.405 --> 00:06:25.129
&gt;&gt; Jafar Husain: Okay, it's just the same
thing with functions written the long way.

96
00:06:30.281 --> 00:06:32.686
&gt;&gt; Jafar Husain: I'm gonna slightly change
the formatting here so that lines up, but

97
00:06:32.686 --> 00:06:34.100
that's the way it's supposed to look.

