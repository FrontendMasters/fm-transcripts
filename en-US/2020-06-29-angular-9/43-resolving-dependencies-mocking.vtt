WEBVTT

1
00:00:00.560 --> 00:00:08.020
All right, so
now let's address these errors.

2
00:00:08.020 --> 00:00:11.650
And so I'm going to try to
fix these in real time.

3
00:00:11.650 --> 00:00:16.230
And let's, and
the reason why I want to do this because

4
00:00:16.230 --> 00:00:20.190
you're going to run into this I run into
this all the time is you start coding and

5
00:00:20.190 --> 00:00:22.930
then also this is like I
don't know what to do.

6
00:00:22.930 --> 00:00:25.210
So let's go to the courses component.

7
00:00:25.210 --> 00:00:28.580
And it's saying no provider for
HTTP client.

8
00:00:30.240 --> 00:00:32.803
So if we go into our courses component,

9
00:00:36.246 --> 00:00:41.422
Rather, I wanted to do the spec Here.

10
00:00:43.338 --> 00:00:46.920
You'll notice that,
this trace this out real quick.

11
00:00:49.002 --> 00:00:55.720
So, In our courses component,
we're pulling into courses service.

12
00:01:00.418 --> 00:01:06.770
The courses service,
has a dependency, on HTTP client.

13
00:01:06.770 --> 00:01:10.160
And so now, Angular is trying
to spin up this component,

14
00:01:10.160 --> 00:01:16.140
that has a dependency on a service,
that has a dependency on another service.

15
00:01:16.140 --> 00:01:22.492
And so there's a couple ways to fix this.

16
00:01:22.492 --> 00:01:27.100
So one way to fix this is to import

17
00:01:30.210 --> 00:01:32.640
the HTTP client module.

18
00:01:36.830 --> 00:01:41.360
And I think this is actually
import HTTP client module.

19
00:01:43.060 --> 00:01:48.630
And so if I save this,
then this should service or make that

20
00:01:48.630 --> 00:01:53.470
particular HTTP client that
instance available to the test.

21
00:01:53.470 --> 00:01:59.449
So now you'll notice here let
me just double down, because

22
00:02:03.047 --> 00:02:06.560
Yeah, so, since gone now
let's look at course details.

23
00:02:06.560 --> 00:02:13.640
So I can just run through and I can
fix some of these problems right away.

24
00:02:13.640 --> 00:02:18.650
So this is part of this is just
getting your dependencies satisfied.

25
00:02:19.700 --> 00:02:20.470
So imports.

26
00:02:22.560 --> 00:02:24.980
I believe it's forms module.

27
00:02:24.980 --> 00:02:27.830
Let's go to the courses service.

28
00:02:27.830 --> 00:02:29.780
I think it was angry there.

29
00:02:31.270 --> 00:02:35.234
And if we go into the spec here,

30
00:02:35.234 --> 00:02:39.352
that finger testing module, so

31
00:02:39.352 --> 00:02:44.852
we're missing this here, not a problem.

32
00:02:44.852 --> 00:02:47.040
We'll leave this low for just a second.

33
00:02:47.040 --> 00:02:54.250
This back here and cannot read property
ID of undefined, not a problem.

34
00:02:54.250 --> 00:02:59.640
What I really wanted to point
out is that we basically that,

35
00:02:59.640 --> 00:03:02.510
by satisfying that module,
it's now able to render, and

36
00:03:02.510 --> 00:03:06.660
it's just simply saying,
I don't know what the idea is.

37
00:03:06.660 --> 00:03:11.090
So there's trying to render it and
it's like I don't know what to do with id.

38
00:03:11.090 --> 00:03:14.921
But we did satisfy that dependency.

39
00:03:14.921 --> 00:03:19.950
And so I'm gonna leave this here for
just a moment and Instead of

40
00:03:22.381 --> 00:03:27.875
Going into and importing the,

41
00:03:31.359 --> 00:03:33.710
I'm gonna do, yes, we'll start here.

42
00:03:33.710 --> 00:03:38.328
So in our courses, component specs,

43
00:03:38.328 --> 00:03:42.378
let me just close all the others.

44
00:03:42.378 --> 00:03:50.720
We're injecting this HTTP client module.

45
00:03:50.720 --> 00:03:56.570
But really, what I want to do
is because for unit tests,

46
00:03:56.570 --> 00:04:01.021
you don't want to spend something up and
have to actually have to make calls

47
00:04:01.021 --> 00:04:06.830
to the remote server that's
not the point of that.

48
00:04:06.830 --> 00:04:11.140
And so now,
what you have is this concept of

49
00:04:13.180 --> 00:04:15.580
basically mocks and stubs.

50
00:04:15.580 --> 00:04:22.389
And so what you can do is you can just
create and so I'm going to delete this.

51
00:04:23.560 --> 00:04:29.240
Instead of importing this is we
know that our courses component

52
00:04:29.240 --> 00:04:32.040
relies on, so let me pull this back up.

53
00:04:33.520 --> 00:04:36.340
It relies on this courses service.

54
00:04:36.340 --> 00:04:42.088
And so what I can do is instead,

55
00:04:42.088 --> 00:04:48.041
I can create A stub for this,

56
00:04:48.041 --> 00:04:54.826
so I can just go const And we'll go

57
00:04:57.338 --> 00:05:01.921
Courses service stub, and

58
00:05:01.921 --> 00:05:10.310
generally I'll start with
just an empty object.

59
00:05:10.310 --> 00:05:13.930
And then what you can do is say because
we really want to test our component,

60
00:05:13.930 --> 00:05:19.170
we don't need to test everything
down the road is we'll go here and

61
00:05:19.170 --> 00:05:25.630
then within our test module,
we're going to say,

62
00:05:28.200 --> 00:05:33.160
I want to provide this to this module.

63
00:05:33.160 --> 00:05:39.617
But instead of using the real courses,

64
00:05:39.617 --> 00:05:44.320
service I want to use value.

65
00:05:48.509 --> 00:05:50.757
CoursesServiceStub.

66
00:05:53.049 --> 00:05:57.050
And so what this does is it's
just going to override that and

67
00:05:57.050 --> 00:05:58.900
we're going to use a stub.

68
00:05:58.900 --> 00:06:01.380
So let's save this and
let's see what happens.

69
00:06:02.490 --> 00:06:04.670
So if we go back into our testbed.

70
00:06:07.902 --> 00:06:11.762
Course services and so
that is actually let me refresh this,

71
00:06:11.762 --> 00:06:13.510
I may have just broke this.

72
00:06:14.660 --> 00:06:18.391
Disconnect, there we go.

73
00:06:18.391 --> 00:06:25.310
All right, so You'll see here and
this is what I wanted to pull out.

74
00:06:25.310 --> 00:06:29.829
So this courses component
should create but

75
00:06:29.829 --> 00:06:35.220
this course services all
is not a function perfect.

76
00:06:35.220 --> 00:06:39.866
And so now what we'll do is we
can come back into here and

77
00:06:39.866 --> 00:06:42.602
We'll just add on this object.

78
00:06:46.270 --> 00:06:49.709
Typically what I'll do is just
like a no op function, so

79
00:06:49.709 --> 00:06:51.710
it just doesn't do anything.

80
00:06:51.710 --> 00:06:53.000
So let's save this again.

81
00:06:55.270 --> 00:07:00.700
Go back into our testbed,
And if we go down here.

82
00:07:04.121 --> 00:07:10.167
It's saying OK, but
subscribe is undefined,

83
00:07:10.167 --> 00:07:17.130
and so we just need to continue
to kind of stub this out.

84
00:07:17.130 --> 00:07:22.070
Because if we go back into our code here,
you'll see that, and of course,

85
00:07:22.070 --> 00:07:30.050
this component in the HTTP call
itself is it returns essentially,

86
00:07:30.050 --> 00:07:34.442
something that you could like
an object that you can then subscribe.

87
00:07:34.442 --> 00:07:39.099
And so, we'll go back into here and

88
00:07:39.099 --> 00:07:43.300
let's just take a step at this.

89
00:07:47.984 --> 00:07:55.847
So I'm just kind of mocking out,
Another no op.

90
00:07:59.302 --> 00:08:02.240
There we go.

91
00:08:02.240 --> 00:08:05.392
And so when we call all this going to
return an object that then you can call

92
00:08:05.392 --> 00:08:06.070
subscribe on.

93
00:08:12.700 --> 00:08:13.600
All right.

94
00:08:13.600 --> 00:08:19.260
And so you can see here,
we still have kind of these work

95
00:08:19.260 --> 00:08:24.350
like Layton tests, but more importantly,
what I wanted to call out is that

96
00:08:25.880 --> 00:08:30.947
it's as you start to focus on
testing on something in isolation,

97
00:08:30.947 --> 00:08:36.390
one of the best ways to do
that is using a mock or stub.

