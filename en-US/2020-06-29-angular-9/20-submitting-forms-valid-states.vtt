WEBVTT

1
00:00:00.710 --> 00:00:05.257
All right, so
to kind of wrap up this particular module,

2
00:00:05.257 --> 00:00:08.973
there's one other thing
that I want to cover.

3
00:00:08.973 --> 00:00:17.646
And that is the submit button.

4
00:00:17.646 --> 00:00:20.800
And so, we're going to go type submit.

5
00:00:22.560 --> 00:00:30.233
And I'm gonna take off, The click handler,

6
00:00:30.233 --> 00:00:35.476
and the reason being is because,

7
00:00:35.476 --> 00:00:42.790
there is a submit DOM
event that we can bind to.

8
00:00:42.790 --> 00:00:45.950
So, I have no idea what that is.

9
00:00:45.950 --> 00:00:52.040
Wait a second, just picked it up,
color, we're gonna set this to primary.

10
00:00:53.150 --> 00:00:58.890
And we'll go up to
the form element itself.

11
00:00:58.890 --> 00:01:04.341
And we're going to bind to submit and
when we do this,

12
00:01:04.341 --> 00:01:09.197
we're going to essentially
call saveCourse.

13
00:01:11.870 --> 00:01:18.185
And, Because this method doesn't exist,

14
00:01:18.185 --> 00:01:24.901
I'll go here and
I'll add this in, saveCourse.

15
00:01:31.260 --> 00:01:34.295
And I'm just going to console log this,

16
00:01:37.590 --> 00:01:45.103
SaveCourse, Okay?

17
00:01:50.364 --> 00:01:52.778
I'm going to pull up the console,
we'll go here.

18
00:01:52.778 --> 00:01:56.154
Submit, saveCourse.

19
00:01:56.154 --> 00:02:01.760
What I can also do is if you put it here,
you can hit Enter.

20
00:02:01.760 --> 00:02:04.660
So it will also,
this is kind of a nice touch.

21
00:02:04.660 --> 00:02:08.860
If you just want hit Enter to submit,
it will capture that as well.

22
00:02:10.020 --> 00:02:14.120
Now, one last piece before
we kind of wrap this up is,

23
00:02:15.930 --> 00:02:23.420
you'll notice here that we're tracking,
is this form in a valid state?

24
00:02:23.420 --> 00:02:28.900
Well, if it's not in a valid state,
what we need to do is probably not

25
00:02:28.900 --> 00:02:33.580
allow the user to submit the form.

26
00:02:33.580 --> 00:02:37.870
And so what we can do here
is we can essentially just

27
00:02:38.960 --> 00:02:43.470
bind to the disabled attribute and
we will just say,

28
00:02:45.500 --> 00:02:51.490
the form is invalid,
don't allow it to submit.

29
00:02:51.490 --> 00:02:54.305
So we'll go here, back into our app.

30
00:02:56.021 --> 00:03:03.514
And notice, now submit is disabled
because the form value is false.

31
00:03:03.514 --> 00:03:07.419
The minute, it's satisfied,

32
00:03:07.419 --> 00:03:11.467
I can then submit or if I cancel and

33
00:03:11.467 --> 00:03:17.259
I start to type in,
now it becomes valid again.

34
00:03:17.259 --> 00:03:20.456
So what?

35
00:03:20.456 --> 00:03:26.509
In summary,
when we create in template driven forms,

36
00:03:26.509 --> 00:03:34.018
and kind of a simple condensed version,
is when you add just a form.

37
00:03:34.018 --> 00:03:38.633
When Angular sees this form element
Is that it's going to do some

38
00:03:38.633 --> 00:03:41.460
things under the hood for free for you.

39
00:03:42.580 --> 00:03:48.750
And one of them is to create a form
controller that keeps track of

40
00:03:48.750 --> 00:03:54.510
not only the value of your entire form,
but is it in a valid state.

41
00:03:54.510 --> 00:03:58.970
And so you can, using ngForm,
assign that to a local template reference,

42
00:03:58.970 --> 00:04:03.490
which you can then use to say,
if it's not valid, don't submit it.

43
00:04:04.880 --> 00:04:10.430
You can also attach the Submit event
handler directly to the form element so

44
00:04:10.430 --> 00:04:15.250
that when you hit Enter,
that then will call, but of course,

45
00:04:15.250 --> 00:04:20.200
in your component class
that you would like.

46
00:04:20.200 --> 00:04:22.520
The other piece is, in this case,

47
00:04:22.520 --> 00:04:27.760
we're using Angular Material is
we have matInput, camel case,

48
00:04:27.760 --> 00:04:32.940
but ngModel itself is
where we can then bind to

49
00:04:32.940 --> 00:04:37.680
the individual properties
of the selected course.

50
00:04:37.680 --> 00:04:41.981
So that is, I believe,
nicely encapsulates what,

51
00:04:41.981 --> 00:04:47.553
when we talk about template driven forms,
kind of the main pieces so

52
00:04:47.553 --> 00:04:52.760
that when you have a form,
you have a form controller.

53
00:04:52.760 --> 00:04:57.420
And that manages not only
the state of the form, but

54
00:04:57.420 --> 00:05:00.000
the correctness or
the validity of the form.

55
00:05:00.000 --> 00:05:05.353
And you can then track that using ngForm,

56
00:05:05.353 --> 00:05:09.320
and then essentially attached
to your basic event handler.

57
00:05:09.320 --> 00:05:15.300
So we're going to do a small challenge
where we're just going to add a few more

58
00:05:16.420 --> 00:05:21.770
form elements to this and
then we'll move on from there.

