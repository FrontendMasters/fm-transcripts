WEBVTT

1
00:00:01.320 --> 00:00:03.070
All right, who wants to see the solution?

2
00:00:03.070 --> 00:00:04.238
So, all right.

3
00:00:04.238 --> 00:00:07.270
Welcome back.

4
00:00:07.270 --> 00:00:10.340
Thank you for persevering.

5
00:00:10.340 --> 00:00:17.920
Let me show you the answer,
the solution to this particular challenge.

6
00:00:17.920 --> 00:00:19.320
So hopping into the code.

7
00:00:20.770 --> 00:00:27.720
We need to finish these two methods here.

8
00:00:27.720 --> 00:00:32.994
So for update, the difference is when you

9
00:00:32.994 --> 00:00:38.115
are doing a post or
a put to a single item in

10
00:00:38.115 --> 00:00:43.842
a collection versus the collection itself,

11
00:00:43.842 --> 00:00:48.663
you have to denote that with an ID and so

12
00:00:48.663 --> 00:00:54.992
what you can do here is
although return this HTTP,

13
00:00:54.992 --> 00:01:01.088
post This geturl and

14
00:01:01.088 --> 00:01:05.634
we're going to see very quickly,

15
00:01:05.634 --> 00:01:10.190
an opportunity to optimize this.

16
00:01:18.495 --> 00:01:26.241
Course ID And
then we'll pass in the course.

17
00:01:29.850 --> 00:01:33.460
So, I'm gonna leave this here for
a second.

18
00:01:33.460 --> 00:01:35.360
Hopefully everybody is there.

19
00:01:35.360 --> 00:01:40.178
Your brains are ahead
of me by three steps.

20
00:01:40.178 --> 00:01:44.495
For delete all I need to do is just

21
00:01:47.673 --> 00:01:53.050
Call delete and then just hit
the endpoint that has the ID.

22
00:01:54.690 --> 00:01:57.460
And in this case I am gonna do course.

23
00:01:58.460 --> 00:02:00.580
Well, we can just do courseId it's fine.

24
00:02:04.580 --> 00:02:09.280
And so you notice here,
these are almost identical.

25
00:02:09.280 --> 00:02:14.770
The one thing I do it's updating I
do put they're almost identical.

26
00:02:14.770 --> 00:02:18.810
I don't know of a good reason why
I only posted put, I haven't.

27
00:02:18.810 --> 00:02:21.510
I think they're pretty much the same,
there may be some

28
00:02:21.510 --> 00:02:25.990
philosophical difference but
just semantically for me post is great.

29
00:02:25.990 --> 00:02:27.950
Put is I'm basically putting this back.

30
00:02:27.950 --> 00:02:30.520
So that is what makes sense to me.

31
00:02:30.520 --> 00:02:36.724
And if we look at these URLs
these are almost identical.

32
00:02:36.724 --> 00:02:42.070
So what we can do is get urlById,

33
00:02:42.070 --> 00:02:48.011
and I'm just going to pass an ID in.

34
00:02:48.011 --> 00:02:54.565
And so I'm just optimizing
this kind of on the fly.

35
00:02:57.915 --> 00:03:02.186
So I don't have to keep doing
the same stuff over and over.

36
00:03:02.186 --> 00:03:07.625
Now the one thing that I've noticed
is I don't think I have the,

37
00:03:07.625 --> 00:03:11.780
model doesn't have an end,
or a forward slash.

38
00:03:11.780 --> 00:03:15.678
I'm gonna add this in here and
there we go.

39
00:03:15.678 --> 00:03:20.313
And so
now what I can do is this geturlByIdD.

40
00:03:20.313 --> 00:03:25.375
And we'll just pass in course ID and

41
00:03:25.375 --> 00:03:30.950
then over here, we'll chop this out.

42
00:03:38.106 --> 00:03:42.192
UrlById, and
we'll just in this case put courseId.

43
00:03:42.192 --> 00:03:46.640
Boom all right?

44
00:03:46.640 --> 00:03:53.051
Then what I can also do here,
just because I know you

45
00:03:53.051 --> 00:04:00.445
geturlById and
we'll just pass in courseId.

46
00:04:02.100 --> 00:04:05.920
So just doing a get
operation on this endpoint.

47
00:04:05.920 --> 00:04:09.500
And from here, I can actually delete this,
I don't need it.

48
00:04:11.070 --> 00:04:16.240
And we have a pretty functional
remote application service.

49
00:04:16.240 --> 00:04:18.614
So let's hop into our course component.

50
00:04:18.614 --> 00:04:23.966
And Yes,

51
00:04:23.966 --> 00:04:29.046
so the base URL contains the slash here,
the forward slash,

52
00:04:29.046 --> 00:04:35.934
which then we put the courses on that and
then after that, then we have to add that.

53
00:04:35.934 --> 00:04:37.014
So it would have broke and

54
00:04:37.014 --> 00:04:39.440
then we would have basically
had to go back and fix that.

55
00:04:39.440 --> 00:04:40.370
So a good catch.

56
00:04:40.370 --> 00:04:45.250
So what was being pointed out is that
the base URL has a forward slash, but

57
00:04:45.250 --> 00:04:46.280
I don't have one here.

58
00:04:46.280 --> 00:04:50.870
So when I put the ID in it would
look like that, and that would work.

59
00:04:50.870 --> 00:04:51.839
So, good catch.

60
00:04:51.839 --> 00:04:56.168
I've actually been hit by that many,
many times.

61
00:04:56.168 --> 00:05:00.450
All right, so now, what we can do is

62
00:05:03.530 --> 00:05:08.430
just take this here,
I'm just going to paste this in.

63
00:05:08.430 --> 00:05:15.788
So these are almost identical the
differences we're doing, update or create.

64
00:05:15.788 --> 00:05:19.257
Then from here, same thing.

65
00:05:22.564 --> 00:05:26.707
That when we're doing this operation and
so this is a bit of a,

66
00:05:26.707 --> 00:05:31.250
I think a transitionary step in I
think it's started to flesh out and

67
00:05:31.250 --> 00:05:33.740
we got more into advanced concepts.

68
00:05:35.250 --> 00:05:40.642
You would not see this but for
now, this is totally fine.

69
00:05:43.892 --> 00:05:49.081
What we do need to do is where

70
00:05:49.081 --> 00:05:54.949
we're calling load courses,

71
00:05:54.949 --> 00:05:57.664
we also need to

72
00:06:02.884 --> 00:06:07.026
Reset selected course, and so

73
00:06:07.026 --> 00:06:13.249
this is where this gets super,
super tricky.

74
00:06:13.249 --> 00:06:22.270
I need to make an architectural decision
right now of how do I want to handle this?

75
00:06:22.270 --> 00:06:23.330
This is how I'm gonna handle it.

76
00:06:23.330 --> 00:06:24.900
I'm gonna create a new method.

77
00:06:24.900 --> 00:06:31.009
So my temptation was in load courses,
to just add this method in here like this.

78
00:06:33.270 --> 00:06:36.940
The problem with this is that I'm breaking
the single responsibility principle.

79
00:06:36.940 --> 00:06:41.920
More importantly,
is that I'm coupling this

80
00:06:41.920 --> 00:06:45.990
call to get all the services to
this other reset selected service.

81
00:06:45.990 --> 00:06:49.570
And so what happens if I actually want to
get the services but I don't need to reset

82
00:06:49.570 --> 00:06:56.640
and so you're better off being very
intentional about that kind of thing.

83
00:06:56.640 --> 00:07:01.440
So, typically what I'll do is
instead of going and forcing it at,

84
00:07:02.450 --> 00:07:06.420
like a fine grained component level, which
is here like I don't want work function

85
00:07:06.420 --> 00:07:11.430
level, is I'll create
a composition method to do this.

86
00:07:11.430 --> 00:07:17.090
So in this case,
I'm just going to go refreshCourses here.

87
00:07:17.090 --> 00:07:24.007
And what this is gonna do is
resetSelecedCourse, this.loadcourses.

88
00:07:25.700 --> 00:07:29.240
And so this is again I would
consider this a transition step,

89
00:07:29.240 --> 00:07:32.640
but it is going to solve our problems.

90
00:07:32.640 --> 00:07:35.074
So now, just go here.

91
00:07:35.074 --> 00:07:39.143
Boom, boom.

92
00:07:39.143 --> 00:07:42.730
All right.

93
00:07:42.730 --> 00:07:47.550
And let's see if this is going to work.

94
00:07:48.930 --> 00:07:52.110
So here we go.

95
00:07:52.110 --> 00:07:55.254
Let me create a new course test,

96
00:07:55.254 --> 00:08:00.858
I no longer have the energy to be clever,
let's Submit.

97
00:08:00.858 --> 00:08:05.845
And notice when I submitted it, it reset
and then it showed up at the bottom and

98
00:08:05.845 --> 00:08:07.248
then I can delete it.

99
00:08:07.248 --> 00:08:10.709
I can update it

100
00:08:13.326 --> 00:08:18.387
Here, Submit, actually,
let us say I am 40% done,

101
00:08:18.387 --> 00:08:22.180
and I love this course by Marc G, Submit.

102
00:08:22.180 --> 00:08:27.432
And notice it is now updated here and
it is also refreshing and

103
00:08:27.432 --> 00:08:31.840
so now, at this point, this is,

104
00:08:31.840 --> 00:08:35.250
I would say a pretty functional
application, but there's still some

105
00:08:35.250 --> 00:08:40.790
improvements that we can make, especially
around component driven architecture.

