WEBVTT

1
00:00:00.200 --> 00:00:03.360
Alright, so
now what I wanna do is I want to introduce

2
00:00:04.820 --> 00:00:08.750
one more piece here that,
or an additional piece.

3
00:00:08.750 --> 00:00:11.070
And that is Debug Element.

4
00:00:11.070 --> 00:00:18.510
So let me go, let DE for
DebugElement and we'll import this and

5
00:00:18.510 --> 00:00:22.940
from here.

6
00:00:22.940 --> 00:00:28.860
Let's go into our second
before each block.

7
00:00:28.860 --> 00:00:30.670
And let's grab this.

8
00:00:30.670 --> 00:00:36.380
So what Debug Element does,
is it basically

9
00:00:36.380 --> 00:00:42.160
gives you like the HTML Element or

10
00:00:42.160 --> 00:00:45.690
the angular version of the HTML
element under the hood.

11
00:00:45.690 --> 00:00:49.560
So you can start to access it.

12
00:00:49.560 --> 00:00:53.740
So what you can do now is,
first of all, we'll go,

13
00:00:53.740 --> 00:00:59.410
we'll pull this down just a second,
pull my notes back up.

14
00:00:59.410 --> 00:01:06.820
And we'll just pull this right
off the fixture debug element.

15
00:01:06.820 --> 00:01:07.980
There we go.

16
00:01:07.980 --> 00:01:12.770
And so now what we can do,
is we can use this to query

17
00:01:12.770 --> 00:01:17.100
the template of the component.

18
00:01:17.100 --> 00:01:23.490
And so let's go and Let's spin this up and
see this in action.

19
00:01:23.490 --> 00:01:24.470
So we're gonna do this.

20
00:01:25.940 --> 00:01:30.550
I'm gonna leave this test here and
we'll go.

21
00:01:33.010 --> 00:01:35.959
It should render the correct title.

22
00:01:43.970 --> 00:01:47.277
And within this,

23
00:01:47.277 --> 00:01:52.794
we're going to capture the.

24
00:01:52.794 --> 00:01:56.489
One thing I need to do is let
me actually in our template.

25
00:01:57.970 --> 00:02:05.800
Let's create, we're gonna create an h1
tag, and we're going to render the title.

26
00:02:05.800 --> 00:02:09.580
So now we actually have something
to test in our template.

27
00:02:10.890 --> 00:02:12.509
All right, so back to our spec.

28
00:02:13.830 --> 00:02:18.430
And so we're gonna create
a reference to that h1 tag.

29
00:02:18.430 --> 00:02:21.530
And how we're gonna do that is
using the debug element query.

30
00:02:22.822 --> 00:02:28.210
Then within this method call,
we can use this by class.

31
00:02:28.210 --> 00:02:36.770
And so, this essentially allows
us to query, the debug elements.

32
00:02:36.770 --> 00:02:40.240
So we're saying we want to query it by,
in this case, CSS.

33
00:02:40.240 --> 00:02:43.050
So these kind of work hand in hand.

34
00:02:43.050 --> 00:02:46.420
And so recording by CSS.

35
00:02:46.420 --> 00:02:50.220
I kinda like how this actually
reads in a very natural fashion.

36
00:02:50.220 --> 00:02:54.890
And then we're just going to grab,
the h1 tag.

37
00:02:56.360 --> 00:02:57.734
So what's this is angry about.

38
00:03:02.419 --> 00:03:05.940
Make sure I imported this correct, yes.

39
00:03:07.300 --> 00:03:08.000
There we go.

40
00:03:10.000 --> 00:03:12.800
And Let's try to re-import this.

41
00:03:12.800 --> 00:03:17.795
So this is where again,
you have to be careful of your imports.

42
00:03:19.668 --> 00:03:22.730
Let me see if this didn't give me
a hint of where this is coming from.

43
00:03:22.730 --> 00:03:25.330
Yeah, so
we want the one from the platform browser.

44
00:03:26.370 --> 00:03:28.520
And that's how that works.

45
00:03:28.520 --> 00:03:29.150
All right.
So

46
00:03:29.150 --> 00:03:32.720
then from here,
now that we have a reference to that.

47
00:03:32.720 --> 00:03:36.167
We can say expect h1,

48
00:03:36.167 --> 00:03:40.892
native element, inner text.

49
00:03:44.940 --> 00:03:46.974
To be and let's go ahead and

50
00:03:46.974 --> 00:03:52.819
fail this real quick just to show that it
is failing or that we have hooked us up.

51
00:03:55.951 --> 00:03:57.311
Save this.

52
00:03:57.311 --> 00:04:02.151
And then let's go into our

53
00:04:02.151 --> 00:04:06.994
code and let's look for,

54
00:04:10.940 --> 00:04:15.239
The just components so expected

55
00:04:18.552 --> 00:04:22.630
This dot, this empty quote to be fail.

56
00:04:22.630 --> 00:04:25.100
So, two things are happening.

57
00:04:25.100 --> 00:04:30.693
One, we expected it to be hello world and
there was nothing.

58
00:04:32.030 --> 00:04:34.810
So that's the first part, but
it's definitely not fail.

59
00:04:34.810 --> 00:04:39.768
So let's go ahead and step in and let's
iterate on this and get this working.

60
00:04:39.768 --> 00:04:46.790
So, title, title, let's just double check.

61
00:04:46.790 --> 00:04:50.170
Okay, so now what is going on here?

62
00:04:51.520 --> 00:04:57.330
Well, if we go into our spec,
you'll notice this fixture.detect changes.

63
00:04:57.330 --> 00:05:00.640
So let's put this in here.

64
00:05:00.640 --> 00:05:02.560
And let's run this again.

65
00:05:02.560 --> 00:05:05.540
And then we'll talk
about what is happening.

66
00:05:05.540 --> 00:05:14.891
So Now you'll see that.

67
00:05:14.891 --> 00:05:16.436
Let me just bump this up.

68
00:05:16.436 --> 00:05:20.276
It's rendering.

69
00:05:20.276 --> 00:05:22.900
But now, it's still not Hello user.

70
00:05:22.900 --> 00:05:25.340
So, what happened here?

71
00:05:25.340 --> 00:05:28.330
So before it was just
an empty string that was like

72
00:05:28.330 --> 00:05:30.990
that the binding had never even run.

73
00:05:30.990 --> 00:05:35.740
And so the template was
actually displaying nothing.

74
00:05:35.740 --> 00:05:39.410
And the reason for that is.

75
00:05:39.410 --> 00:05:47.910
That in the testing environment
change detection is not automatic.

76
00:05:47.910 --> 00:05:51.260
Because, what the angular team
wants to do is give you the ability

77
00:05:51.260 --> 00:05:56.060
to have fine grained control of how
you step through your application.

78
00:05:56.060 --> 00:06:01.390
So when you make a change that you
can verify that it hasn't rendered or

79
00:06:01.390 --> 00:06:03.120
that some pre step has happened,.

80
00:06:03.120 --> 00:06:05.690
Then you force the manual
change detection.

81
00:06:05.690 --> 00:06:08.160
Then you can verify it.

82
00:06:08.160 --> 00:06:11.900
And so this is why one,
when you make a change or

83
00:06:11.900 --> 00:06:15.980
you want to test the template, you need to

84
00:06:17.120 --> 00:06:22.350
essentially force the fixture to detect
changes so it can update the template.

85
00:06:22.350 --> 00:06:26.550
So as a matter of really just convention.

86
00:06:26.550 --> 00:06:30.060
That you always run that
in the before each.

87
00:06:30.060 --> 00:06:35.830
So now let me talk about why there
are these two before each blocks.

88
00:06:35.830 --> 00:06:41.780
So the first one, really the difference
here is that it's asynchronous.

89
00:06:41.780 --> 00:06:45.100
And so
what this does is as you're configuring.

90
00:06:45.100 --> 00:06:49.920
You're testing module and
if you have a component that has

91
00:06:50.950 --> 00:06:57.170
a remote template that you need
to give the testing environment

92
00:06:57.170 --> 00:07:00.810
an opportunity to make those asynchronous
calls and pull those templates in.

93
00:07:00.810 --> 00:07:03.980
And so this is actually
an asynchronous operation.

94
00:07:03.980 --> 00:07:09.760
And so this is why it runs
this in an async block,

95
00:07:09.760 --> 00:07:13.470
and then everything else
in a synchronous block.

96
00:07:13.470 --> 00:07:15.850
And so it's just to take into account,

97
00:07:15.850 --> 00:07:22.260
that you may have external templates that
you need to pull in a synchronously.

98
00:07:22.260 --> 00:07:26.790
So now let's fix this test and
let's get a green.

99
00:07:28.620 --> 00:07:33.253
And then let's just see one more
example of this real quick.

100
00:07:33.253 --> 00:07:38.073
Let's go, component,

101
00:07:38.073 --> 00:07:43.584
title equals hey there and.

102
00:07:43.584 --> 00:07:49.750
And copy this back down.

103
00:07:49.750 --> 00:07:50.549
We'll go here.

104
00:07:53.431 --> 00:07:57.797
Let's run this again and see what happens.

105
00:08:02.655 --> 00:08:04.780
Notice same thing.

106
00:08:04.780 --> 00:08:08.860
Expected Hello users to be either but
it wasn't.

107
00:08:08.860 --> 00:08:11.760
So again, just

108
00:08:11.760 --> 00:08:15.335
pointing this out twice because if you're
testing the template in the component.

109
00:08:15.335 --> 00:08:21.254
You could get

110
00:08:21.254 --> 00:08:28.000
bit by this particular issue and
so, detect changes.

111
00:08:29.550 --> 00:08:37.057
And if we run this again, then we're good.

