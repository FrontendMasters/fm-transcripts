WEBVTT

1
00:00:00.151 --> 00:00:04.601
With that said,
I'm going to just move the slides off, and

2
00:00:04.601 --> 00:00:07.720
let me just build something from the COI.

3
00:00:07.720 --> 00:00:12.601
And we can kind of get into
by actually looking and

4
00:00:12.601 --> 00:00:19.282
seeing what these pieces are and
how they fit into an application.

5
00:00:19.282 --> 00:00:24.693
So I'm going to if at all possible again,
please reference the slides.

6
00:00:24.693 --> 00:00:27.018
But I think it's just for me,

7
00:00:27.018 --> 00:00:31.298
certainly more gratifying to
just to actually code and

8
00:00:31.298 --> 00:00:36.333
see where it takes us as well as
if I mess up or something happens.

9
00:00:36.333 --> 00:00:40.511
Even I think there's value in seeing
how somebody kinda works through that.

10
00:00:40.511 --> 00:00:45.911
And so what I'm gonna do,
I'm gonna go back to my desktop,

11
00:00:45.911 --> 00:00:49.805
and I'm going to install the angular CLI.

12
00:00:49.805 --> 00:00:55.323
And so
how I do this is MPMI-gangular/CLI and

13
00:00:55.323 --> 00:00:58.577
then what I'm going to do so

14
00:00:58.577 --> 00:01:03.105
that we don't hit like angular 10 or

15
00:01:03.105 --> 00:01:08.353
something and none of these commands work.

16
00:01:08.353 --> 00:01:12.868
I'm going to pin this to
a specific version, and so

17
00:01:12.868 --> 00:01:16.447
in this case, we're gonna do a 9.1.

18
00:01:16.447 --> 00:01:20.011
So we'll just paste this in and

19
00:01:20.011 --> 00:01:24.260
you can see here npm i -g @angular so

20
00:01:24.260 --> 00:01:30.033
now with NPM namespaces/cli and then @9.1.

21
00:01:30.033 --> 00:01:35.900
And so I'm just going to install this,
And depending on your network and

22
00:01:35.900 --> 00:01:40.648
your kind of the machine that you're on,
this shouldn't take too long.

23
00:01:40.648 --> 00:01:44.323
So I already had this
installed full disclosure so

24
00:01:44.323 --> 00:01:47.479
it was a little bit faster,
but here we go.

25
00:01:47.479 --> 00:01:53.971
And then what I'm going to do is I'm going
to generate a new angular application.

26
00:01:53.971 --> 00:01:56.438
And so, I'm gonna generate it and

27
00:01:56.438 --> 00:02:00.619
then we'll talk about what you
actually get from the CLI.

28
00:02:00.619 --> 00:02:06.144
And I think this is where in my opinion
when they introduced the angular CLI, I

29
00:02:06.144 --> 00:02:12.271
think this is where Angular is a framework
and as a platform got really, really good.

30
00:02:12.271 --> 00:02:16.397
Because before, you would either have
to find like a starter project or

31
00:02:16.397 --> 00:02:19.647
you'd have to put everything
kind of together by hand.

32
00:02:19.647 --> 00:02:24.960
And this just takes a lot of
the pain points, out of that,

33
00:02:24.960 --> 00:02:29.522
so ng new, and
we'll just go angular workshop.

34
00:02:29.522 --> 00:02:34.098
So what this is going to do is
generate a new Angular project,

35
00:02:34.098 --> 00:02:37.618
and we're going to call
it Angular workshop.

36
00:02:37.618 --> 00:02:43.012
So I'm gonna hit Enter, and this is
going to ask me a couple questions and

37
00:02:43.012 --> 00:02:46.205
so, I am going to go with Angular routing.

38
00:02:46.205 --> 00:02:48.924
And what style sheet
format would you like?

39
00:02:48.924 --> 00:02:51.452
So I'm gonna just gonna go with SCSS.

40
00:02:53.790 --> 00:02:59.193
And it's just going to generate
this application for you,

41
00:02:59.193 --> 00:03:05.041
so it generated the code and
now it's installing the packages.

42
00:03:05.041 --> 00:03:09.445
When this is finished,
what you're going to have is a fully

43
00:03:09.445 --> 00:03:13.333
working Angular application
right out of the gate.

44
00:03:13.333 --> 00:03:17.434
More importantly,
is that not only is it going to work, but

45
00:03:17.434 --> 00:03:22.695
you're going to have a development server
to test it on or to run it against.

46
00:03:22.695 --> 00:03:27.843
You're also going to have a test
runner to run your unit test,

47
00:03:27.843 --> 00:03:31.507
an end to end test
runner using protractor,

48
00:03:31.507 --> 00:03:36.966
which I recommend actually using Cypress,
but it still exists.

49
00:03:36.966 --> 00:03:41.915
And as well some options
in terms of building

50
00:03:41.915 --> 00:03:45.939
the application and deploying it.

51
00:03:45.939 --> 00:03:50.619
All right, so this has installed, and so

52
00:03:50.619 --> 00:03:55.702
I'm going to just hop
into this directory and

53
00:03:55.702 --> 00:03:59.330
I'm just going to go NPM start.

54
00:03:59.330 --> 00:04:03.931
So notice at this point
I'm three commands in, and

55
00:04:03.931 --> 00:04:08.211
it's going to look very
similar to the workshop

56
00:04:08.211 --> 00:04:12.919
project that we downloaded
that you saw me install,

57
00:04:12.919 --> 00:04:19.450
because that's built on the angular
CLI and so generating the modules.

58
00:04:19.450 --> 00:04:23.273
Once that's done we can
we can check that out,

59
00:04:23.273 --> 00:04:27.881
I will address this now because
it has come up in chats for

60
00:04:27.881 --> 00:04:32.607
this workshop because this
is a fundamentals workshop.

61
00:04:32.607 --> 00:04:36.088
I'm not going to get into nx workspaces,

62
00:04:36.088 --> 00:04:40.170
I think nx workspaces are really,
really good.

63
00:04:40.170 --> 00:04:45.479
But there's a lot of moving pieces and
I think for somebody learning Angular,

64
00:04:45.479 --> 00:04:49.106
that amount of cognitive
overhead is just a bit much.

65
00:04:49.106 --> 00:04:54.086
And so per chance maybe we do like
an extension of this workshop around,

66
00:04:54.086 --> 00:04:58.824
applied Angular concepts,
that's where I would talk about that.

67
00:04:58.824 --> 00:05:03.502
But I wanna be really cognizant of for
a new developer, or

68
00:05:03.502 --> 00:05:06.623
somebody just getting into Angular,

69
00:05:06.623 --> 00:05:11.707
what is the lowest barrier to
entry that we can we can achieve.

70
00:05:11.707 --> 00:05:16.075
And so this is why in this case,
I opted not to go with NX and

71
00:05:16.075 --> 00:05:19.275
we're just going straight with the CLI.

72
00:05:21.033 --> 00:05:25.489
Okay, so, localhost 4200, and

73
00:05:25.489 --> 00:05:28.979
this is what this generated.

74
00:05:28.979 --> 00:05:29.539
And so,

75
00:05:29.539 --> 00:05:35.065
what we have here is a working application
with a web server right out of the gates.

76
00:05:35.065 --> 00:05:41.019
And I feel like I'm just kind of old
person saying when I was your age, I had

77
00:05:41.019 --> 00:05:47.093
to walk to school up a hill in the snow,
and I had a cloud of dirt for dessert.

78
00:05:47.093 --> 00:05:51.870
But it's really,
really nice when you do not have

79
00:05:51.870 --> 00:05:56.774
to assemble all the pieces
of your stack together.

80
00:05:56.774 --> 00:06:00.670
And so even to the point of,
I use View, I use REACT,

81
00:06:00.670 --> 00:06:05.098
I think at this point most kind
of the big three frameworks,

82
00:06:05.098 --> 00:06:08.551
I would put Ember in there
as well as I suppose,

83
00:06:08.551 --> 00:06:12.385
is that they've really
achieved feature parity.

84
00:06:12.385 --> 00:06:16.061
And so, this whole idea of like,
well, this framework or

85
00:06:16.061 --> 00:06:20.199
this framework, I think that's
really not the right question.

86
00:06:20.199 --> 00:06:22.668
Because I think fundamentally,

87
00:06:22.668 --> 00:06:27.878
I can do really good state management
in Angular or REACT or with View.

88
00:06:27.878 --> 00:06:33.197
And that exist I think it it comes
down to a lot of contextual and

89
00:06:33.197 --> 00:06:38.224
possibly even philosophical
preferences that you have.

90
00:06:38.224 --> 00:06:42.802
The one thing that I will say
that I do appreciate about

91
00:06:42.802 --> 00:06:47.706
Angular versus REACT is that
it's batteries included.

92
00:06:47.706 --> 00:06:52.791
And so, if I'm doing react Ulsan, it's
like, well, what router do I wanna use?

93
00:06:52.791 --> 00:06:57.352
What do I want to use for state management
and you have to make those choices and

94
00:06:57.352 --> 00:07:01.493
you have the option to make those
choices based on your organization or

95
00:07:01.493 --> 00:07:02.707
your preferences.

96
00:07:02.707 --> 00:07:06.480
With Angular,
is they just makes them opinionated, but

97
00:07:06.480 --> 00:07:08.770
not restrictive choices for you.

98
00:07:08.770 --> 00:07:12.334
And I think that's a really big plus that,

99
00:07:12.334 --> 00:07:17.392
I've three commands in, and
I have a working application.

100
00:07:17.392 --> 00:07:23.984
Now, a couple things, one, they put
some really helpful links right in here.

101
00:07:23.984 --> 00:07:29.326
And so learn Angular,
they've got a pretty exhaustive

102
00:07:29.326 --> 00:07:34.111
tutorial here,
I do reference it occasionally.

103
00:07:34.111 --> 00:07:38.429
More importantly, the CLI documentation
and I really recommend and

104
00:07:38.429 --> 00:07:42.460
we'll see this throughout the day
is I will leverage the CLI.

105
00:07:42.460 --> 00:07:48.005
But there's a lot of velocity that you
can achieve by leveraging the CLI,

106
00:07:48.005 --> 00:07:50.249
especially the generators.

107
00:07:50.249 --> 00:07:54.072
And now what we have here and
this is what I think is really,

108
00:07:54.072 --> 00:07:56.426
really cool is what do you wanna do?

109
00:07:56.426 --> 00:08:02.121
Well, I'd like to add a component where
you click here ng generate component x,

110
00:08:02.121 --> 00:08:02.641
y, z.

111
00:08:02.641 --> 00:08:06.647
And so it's giving you these commands,
so for instance,

112
00:08:06.647 --> 00:08:10.832
ng add Angular Material, and
we'll do that one in a minute.

113
00:08:10.832 --> 00:08:15.824
But if you need to add a dependency or
you want to run your test,

114
00:08:15.824 --> 00:08:21.299
you can do that right here or
even if you wanna build for production.

115
00:08:21.299 --> 00:08:24.461
Which is going to generate
a much more condensed

116
00:08:24.461 --> 00:08:29.364
optimized version that you would
actually put onto a production server,

117
00:08:29.364 --> 00:08:33.730
maybe drop that into s3 or
James textile, whatever you prefer.

118
00:08:33.730 --> 00:08:37.761
So here, this is something
I frequently use is that,

119
00:08:37.761 --> 00:08:41.715
I like material design and
I like Angular material.

120
00:08:41.715 --> 00:08:46.027
I think there's some really
good components there, and so

121
00:08:46.027 --> 00:08:48.536
I will go and I would just add this.

122
00:08:48.536 --> 00:08:54.438
So, if I go here,
I'm gonna create a new tab and

123
00:08:54.438 --> 00:08:57.841
this is in the same folder.

124
00:08:57.841 --> 00:09:01.166
And if I just go ng add @angular material,
and

125
00:09:01.166 --> 00:09:04.843
what I'm going to do is I'm
gonna pin this as well.

126
00:09:08.776 --> 00:09:12.732
And it's just gonna go out and
it's gonna look for this dependency.

127
00:09:12.732 --> 00:09:20.045
And once it finds it, it's going to ask a
couple questions about what to do the CIO.

128
00:09:20.045 --> 00:09:26.928
We'll go with Indigo pink, there we go,
set up global Angular Material,

129
00:09:26.928 --> 00:09:30.877
typography styles, I will go with, yes.

130
00:09:30.877 --> 00:09:34.344
What this does is it adds
in a couple fonts and

131
00:09:34.344 --> 00:09:38.200
the material icons right
into the application.

132
00:09:38.200 --> 00:09:43.140
Being that I'm lazy I typically, this is
kinda like an all you can eat buffet for

133
00:09:43.140 --> 00:09:44.042
developers.

134
00:09:44.042 --> 00:09:49.902
So I'll just say yes,
I will do browser animations,

135
00:09:49.902 --> 00:09:55.905
and this is going to go ahead and
add this, there we go.

136
00:09:55.905 --> 00:10:01.499
So what this did is it updated the module,
index.HTML in the style,

137
00:10:01.499 --> 00:10:05.647
so with that said,
let's hop into this project and

138
00:10:05.647 --> 00:10:11.352
let me just kinda show you the main
pieces, and how they fit together.

139
00:10:11.352 --> 00:10:15.483
And that'll set the context for us to
really, I think, get into components and

140
00:10:15.483 --> 00:10:17.590
launch off into building our own thing.

