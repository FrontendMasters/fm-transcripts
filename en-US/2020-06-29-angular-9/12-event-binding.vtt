WEBVTT

1
00:00:00.200 --> 00:00:02.510
We've done straight interpolation.

2
00:00:02.510 --> 00:00:03.780
We've done property binding.

3
00:00:03.780 --> 00:00:06.095
And we've done two way binding.

4
00:00:06.095 --> 00:00:09.650
But I want to do one more.

5
00:00:11.060 --> 00:00:13.645
And this is event binding.

6
00:00:13.645 --> 00:00:17.907
And so we'll go back in, here and

7
00:00:17.907 --> 00:00:24.012
I'm going to just do,
see if I get a map button.

8
00:00:27.639 --> 00:00:28.330
There we go.

9
00:00:28.330 --> 00:00:35.022
Now you'll notice when I generated this,
using this code, the VS code extension or

10
00:00:35.022 --> 00:00:39.750
plugin that I had, it went ahead and
generated this for me.

11
00:00:39.750 --> 00:00:44.560
So let's do something here.

12
00:00:44.560 --> 00:00:48.200
I'm gonna change this to update.

13
00:00:48.200 --> 00:00:51.703
And I'm gonna say update color.

14
00:00:54.488 --> 00:00:58.543
And when we go and we do click,

15
00:01:01.211 --> 00:01:03.510
It's going to call this method.

16
00:01:03.510 --> 00:01:05.320
So we're binding to an event.

17
00:01:05.320 --> 00:01:07.320
And so if I go back here.

18
00:01:08.870 --> 00:01:12.213
Now notice we don't have a method called
update color yet, so I'll go update color.

19
00:01:15.047 --> 00:01:19.878
And who can think of the most
amazing color in the world?

20
00:01:19.878 --> 00:01:23.986
Let me think here.

21
00:01:26.973 --> 00:01:29.858
Salmon, somebody said salmon, I agree.

22
00:01:29.858 --> 00:01:33.624
So, what we're gonna do here,

23
00:01:33.624 --> 00:01:39.349
we're going to go
this.themecolor = salmon.

24
00:01:39.349 --> 00:01:47.320
And what I'm also going to do is
console.log UPDate COLOR WHOOP WHOOP.

25
00:01:50.308 --> 00:01:51.503
Okay?

26
00:01:51.503 --> 00:01:54.796
So back into our code.

27
00:01:54.796 --> 00:01:59.170
And when I click this,
what's going to happen,

28
00:01:59.170 --> 00:02:02.914
it's going to capture that click event.

29
00:02:02.914 --> 00:02:06.880
And it's going to call the method
on the component class.

30
00:02:06.880 --> 00:02:09.820
And so I'm gonna pull up the console here.

31
00:02:09.820 --> 00:02:15.446
And when I click down here,
UPDate COLOR WHOOP WHOOP,

32
00:02:15.446 --> 00:02:22.170
I don't know if I really need to
zoom in but you can kinda see that,

33
00:02:22.170 --> 00:02:26.574
is it's capturing the native DOM event and

34
00:02:26.574 --> 00:02:31.588
then it's calling the method
on the component,

35
00:02:31.588 --> 00:02:35.283
which in this case is UPDate COLOR.

36
00:02:35.283 --> 00:02:40.647
And so we're logging out so
we can see it, but, more importantly,

37
00:02:40.647 --> 00:02:46.486
is when I did this, I captured this
event and then updated this property on

38
00:02:46.486 --> 00:02:51.498
the class which then rippled
through the rest of our bindings.

39
00:02:51.498 --> 00:02:58.246
Now let's talk about this template and
what's happening here just briefly.

40
00:02:58.246 --> 00:03:05.550
You'll notice that we're taking click,
and we're wrapping parentheses around it.

41
00:03:06.590 --> 00:03:11.560
Well, we can do this with
really any DOM event.

42
00:03:11.560 --> 00:03:17.311
And so I haven't done all of these,

43
00:03:17.311 --> 00:03:22.486
but for instance, if you go to,

44
00:03:22.486 --> 00:03:26.336
I think MDN DOM events.

45
00:03:26.336 --> 00:03:31.504
Event reference, so
this is the Mozilla Developer Network.

46
00:03:31.504 --> 00:03:39.440
You can see just a ton of DOM events
that exist, native DOM events.

47
00:03:39.440 --> 00:03:45.460
And you can actually bind to any of
these DOM events in the browser.

48
00:03:45.460 --> 00:03:50.378
And the difference is that in AngularJS,
what they had done,

49
00:03:50.378 --> 00:03:54.738
and let me see if I can find
a real quick example of this.

50
00:04:00.986 --> 00:04:03.300
This is actually a pretty good example.

51
00:04:05.220 --> 00:04:10.064
It's always so weird looking at this, but
you'll notice like ng-submit, is that they

52
00:04:10.064 --> 00:04:14.797
essentially created this wrapper for every
single event that they wanted to surface.

53
00:04:14.797 --> 00:04:20.270
And they said like,
let's not do that anymore.

54
00:04:20.270 --> 00:04:24.085
Instead, let's just bind to
the native DOM events, and

55
00:04:24.085 --> 00:04:26.717
not have to write a bunch of extra code.

56
00:04:26.717 --> 00:04:30.917
And so we can take for
instance Mouseenter,

57
00:04:30.917 --> 00:04:37.740
I could go back into the template here,
and I can bind to this DOM event.

58
00:04:37.740 --> 00:04:41.446
So I'll save this, and
with a little bit of luck,

59
00:04:41.446 --> 00:04:45.615
that when I mouse over,
notice it captured that event.

60
00:04:45.615 --> 00:04:50.307
And so this is really really
really powerful because now,

61
00:04:50.307 --> 00:04:55.667
any DOM event that's being surfaced,
and there's a lot of them,

62
00:04:55.667 --> 00:04:59.784
is you can now capture and
essentially leverage and

63
00:04:59.784 --> 00:05:03.735
then use that as a hook
back into your component.

