WEBVTT

1
00:00:00.210 --> 00:00:01.250
Welcome back.

2
00:00:01.250 --> 00:00:06.310
Let's go ahead and
see the solution for this challenge.

3
00:00:06.310 --> 00:00:10.660
So the first thing I'm gonna do is
I'm going to hop into the CLI and

4
00:00:10.660 --> 00:00:16.080
let's go with NGGC and

5
00:00:16.080 --> 00:00:21.030
I believe I said users, and
as always I like to do a dry run.

6
00:00:22.420 --> 00:00:27.643
So you can see here that because
we have two modules in our route,

7
00:00:27.643 --> 00:00:30.951
we have to be a little bit more specific.

8
00:00:38.633 --> 00:00:40.220
Now let's give this another spin.

9
00:00:42.330 --> 00:00:43.088
Very good.

10
00:00:43.088 --> 00:00:45.528
All right, run this without the flag.

11
00:00:50.757 --> 00:00:56.830
All right, let's hop into our code,
and let us wire this up.

12
00:00:59.820 --> 00:01:02.380
So we go into our app routing module.

13
00:01:03.380 --> 00:01:08.110
We're going to add in a route for
our user.

14
00:01:08.110 --> 00:01:13.195
So, path component.

15
00:01:23.170 --> 00:01:25.893
Users component.

16
00:01:25.893 --> 00:01:26.650
We'll clean this up.

17
00:01:26.650 --> 00:01:27.862
There we go.

18
00:01:27.862 --> 00:01:32.610
And so not too hard, so far,
pretty straightforward.

19
00:01:32.610 --> 00:01:36.444
And then let's go into
our app component dot Ts.

20
00:01:36.444 --> 00:01:38.880
Let me just duplicate this line.

21
00:01:38.880 --> 00:01:44.530
And we're going to go users and
I'm going to guess here.

22
00:01:47.180 --> 00:01:49.870
And assume that there
is an icon called user.

23
00:01:49.870 --> 00:01:53.170
If not, I will come back and fix that.

24
00:01:53.170 --> 00:01:54.930
All right?

25
00:01:54.930 --> 00:01:59.290
So quite possibly in
just a matter of moments,

26
00:01:59.290 --> 00:02:04.371
we may have completed this challenge,
let's go here.

27
00:02:04.371 --> 00:02:05.883
No, no icon.

28
00:02:05.883 --> 00:02:07.270
Let me check here.

29
00:02:07.270 --> 00:02:09.350
We go to app component.

30
00:02:09.350 --> 00:02:10.790
What do we use up here?

31
00:02:12.070 --> 00:02:12.860
Person.

32
00:02:12.860 --> 00:02:13.360
All right.

33
00:02:14.840 --> 00:02:15.340
Not a problem.

34
00:02:15.340 --> 00:02:20.740
We'll just reuse the one from the logout
button, back into our code, there we go.

35
00:02:21.870 --> 00:02:28.690
So we're at home and now we are on user,

36
00:02:28.690 --> 00:02:33.197
active courses, user, and then login.

37
00:02:33.197 --> 00:02:34.710
And so there you have it.

38
00:02:36.020 --> 00:02:37.490
Angular rehtoric fundamentals.

39
00:02:39.810 --> 00:02:44.220
This is the crux of what you're going to
use in most of your day to day work and

40
00:02:45.840 --> 00:02:50.220
I think the Angular team has done a really
good job of really kind of streamlining

41
00:02:50.220 --> 00:02:51.310
a lot of this to wire up.

42
00:02:51.310 --> 00:02:57.992
And I really enjoy or I use quite a bit
the lazy loading module mechanism to

43
00:02:57.992 --> 00:03:03.300
streamline application,
really the performance for the user.

44
00:03:03.300 --> 00:03:08.465
So I think they did a really good job
because that didn't exist for a long time

45
00:03:08.465 --> 00:03:13.485
and now it does and you saw that it was
not too cumbersome to hook that up, so

