WEBVTT

1
00:00:00.040 --> 00:00:04.482
For this module, we're going to
talk about Angular routing, so

2
00:00:04.482 --> 00:00:10.154
we built a bunch of components, we have a
lot of stuff in our application right now.

3
00:00:10.154 --> 00:00:15.262
But if you've noticed for
us to go from one kind of component or

4
00:00:15.262 --> 00:00:20.467
feature to another, we have to
go up into the address bar here,

5
00:00:20.467 --> 00:00:24.100
and we kind of have to
manually type this in,

6
00:00:24.100 --> 00:00:28.152
which not a super great experience for
the user.

7
00:00:28.152 --> 00:00:33.621
So, in this module, we're going to one,
talk about how to set up routing,

8
00:00:33.621 --> 00:00:36.873
how to navigate to routes
from the template.

9
00:00:36.873 --> 00:00:41.622
I will also show you how to do
a lazy load a template, and

10
00:00:41.622 --> 00:00:47.717
then how to dynamically navigate to
a route using the router service,

11
00:00:47.717 --> 00:00:49.802
so let's get started.

12
00:00:49.802 --> 00:00:54.633
In our app component.ts,
there is this links array, so

13
00:00:54.633 --> 00:00:59.767
I went ahead and stubbed this
out in from the starter branch,

14
00:00:59.767 --> 00:01:04.197
and because we have two
components home in courses,

15
00:01:04.197 --> 00:01:10.464
it's just a basic structure describing
what that route would look like.

16
00:01:10.464 --> 00:01:16.468
So path we gave it an icon, a title etc,
so what I wanna do first and

17
00:01:16.468 --> 00:01:21.715
foremost is let's hop into
our app.component.html,

18
00:01:21.715 --> 00:01:24.902
and let's build the side nav out.

19
00:01:24.902 --> 00:01:29.550
So I'm just going to build the nav
the list out of the items, and

20
00:01:29.550 --> 00:01:34.569
then we'll talk about how to
actually navigate, to those routes.

21
00:01:34.569 --> 00:01:39.358
So, I'm going to create a nav element, and

22
00:01:39.358 --> 00:01:44.536
then from here,
we're going to use links, but

23
00:01:44.536 --> 00:01:49.598
we're gonna decorate
this with a mat button,

24
00:01:52.461 --> 00:01:54.865
We'll give it a class of nav link,

25
00:02:00.408 --> 00:02:04.265
And then we're going to use a G4.

26
00:02:04.265 --> 00:02:08.868
So we're just going to iterate
over our links collection.

27
00:02:08.868 --> 00:02:13.662
So "let link, Of links",

28
00:02:13.662 --> 00:02:17.153
I'll just start to break this down,
so it doesn't get too crowded.

29
00:02:20.775 --> 00:02:24.663
And then, within the anchor tag,

30
00:02:24.663 --> 00:02:29.624
we're gonna go ahead and
use a map icon and,

31
00:02:29.624 --> 00:02:34.065
we're gonna bind that to link.icon,

32
00:02:37.519 --> 00:02:42.672
And then underneath of that,
we're just going display link.title, so

33
00:02:42.672 --> 00:02:47.671
this is nothing to do with routing
just yet, it's just basic Angular.

34
00:02:47.671 --> 00:02:53.574
So let me just verify that I did this
correct, links path, there we go.

35
00:02:53.574 --> 00:02:56.083
All right, let's hop into the app and

36
00:02:56.083 --> 00:02:59.939
let's just make sure that it's rendering,
there we go.

37
00:02:59.939 --> 00:03:04.543
So right now we have these buttons,
but when I click on them,

38
00:03:04.543 --> 00:03:06.360
nothing is happening.

39
00:03:06.360 --> 00:03:11.230
So, what we need to do now,
is we need to essentially create a way

40
00:03:11.230 --> 00:03:15.845
that when we click on this anchor tag,
we can go to the route.

41
00:03:15.845 --> 00:03:21.634
So one thing that we could do is add in
an href because we know what the route is,

42
00:03:21.634 --> 00:03:27.714
but there's a better way to do that, and
that's using the built in router link.

43
00:03:27.714 --> 00:03:32.311
And so,
we're going to do router link here, and

44
00:03:32.311 --> 00:03:37.582
we are going to bind to this so
this is property binding,

45
00:03:37.582 --> 00:03:43.429
and then we're going to bind
this to link.path, all right?

46
00:03:46.783 --> 00:03:52.369
And so if we go back to our app, now we
have the ability when we click on this,

47
00:03:52.369 --> 00:03:56.670
this is now navigating to
the appropriate route.

48
00:03:56.670 --> 00:04:03.677
And if we actually inspect this element,
Let me we just drag this up here so

49
00:04:03.677 --> 00:04:09.528
we can see this, that On our anchor tag,

50
00:04:09.528 --> 00:04:14.998
if we go down, and you look in the href,
it's going ahead and

51
00:04:14.998 --> 00:04:20.272
it's actually filling in
essentially that path for you.

52
00:04:20.272 --> 00:04:24.277
But it's also in relation to,
let's say you have like nested routes or

53
00:04:24.277 --> 00:04:28.018
whatever it's actually keeping
track of where you are in relation

54
00:04:28.018 --> 00:04:31.441
to the rest of the link tree and
then filling that out for you.

55
00:04:31.441 --> 00:04:36.399
So, it's just really nice to not have
to worry about well am I in relation to

56
00:04:36.399 --> 00:04:37.672
this or whatever.

57
00:04:37.672 --> 00:04:40.468
So if you're doing like relative routes,

58
00:04:40.468 --> 00:04:44.592
router link does a really good
job of figuring that out for you.

59
00:04:44.592 --> 00:04:50.350
And so now we have the ability to
link from one route to another.

