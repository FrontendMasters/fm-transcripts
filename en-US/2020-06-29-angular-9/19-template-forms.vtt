WEBVTT

1
00:00:00.260 --> 00:00:07.280
Let's move on to the next module,
which is template forms.

2
00:00:07.280 --> 00:00:10.440
And so the reason or
the impetus behind this is

3
00:00:13.050 --> 00:00:18.390
we're kind of dumping
this object into the DOM.

4
00:00:18.390 --> 00:00:21.730
But that's not super helpful.

5
00:00:21.730 --> 00:00:26.070
And so, what we want to do is
we want to introduce the ability

6
00:00:26.070 --> 00:00:29.742
to manipulate this form.

7
00:00:29.742 --> 00:00:35.620
And so, this is where we're
going to replace this with,

8
00:00:37.360 --> 00:00:41.530
in this case, a basic form
using just a template binding.

9
00:00:41.530 --> 00:00:43.222
So, if we go into.

10
00:00:48.514 --> 00:00:53.514
The courses component, and into our course

11
00:00:53.514 --> 00:00:58.379
details, we're going to now take this and

12
00:00:58.379 --> 00:01:04.520
we're going to start to
convert this into a form.

13
00:01:04.520 --> 00:01:09.000
When you are using forms,
much to my embarrassment,

14
00:01:09.000 --> 00:01:14.010
make sure that you import the forms
module as well as if you're

15
00:01:14.010 --> 00:01:19.010
doing reactive forms,
make sure you import that module.

16
00:01:19.010 --> 00:01:24.920
So when you start to work with forms,
what you need to do is in

17
00:01:26.050 --> 00:01:31.880
your top level module,
usually you need to import forms module,

18
00:01:33.180 --> 00:01:37.810
or if you're doing reactive forms,
you need to import reactive forms module.

19
00:01:37.810 --> 00:01:40.220
Because what will happen is,
if we take this out and

20
00:01:40.220 --> 00:01:45.000
I tried to access, for instance, NgModule
or any of the form stuff underlying, one,

21
00:01:45.000 --> 00:01:51.780
I'm going to throw an air, two,
on live television it's not going to work.

22
00:01:52.810 --> 00:01:57.420
Now, another thing we'll elaborate a
little bit more when we get into component

23
00:01:57.420 --> 00:02:03.940
testing, but when, because I now
have a dependency on forms module.

24
00:02:04.970 --> 00:02:11.120
For, or we're going to add it into
the courses component, that when

25
00:02:11.120 --> 00:02:16.230
I go to write the test, I need to make
sure to add that module into the test.

26
00:02:16.230 --> 00:02:22.568
So, one of the biggest things when you're
testing, really anything is satisfying

27
00:02:22.568 --> 00:02:31.030
the dependencies for
that particular unit under test.

28
00:02:31.030 --> 00:02:33.840
And so, just kind of putting
that is a placeholder in there.

29
00:02:33.840 --> 00:02:40.700
So, in our component, let's get started.

30
00:02:40.700 --> 00:02:41.510
All right.

31
00:02:41.510 --> 00:02:46.390
So, what we're going to do is I'm going

32
00:02:46.390 --> 00:02:50.982
to just take, and I'm going to wrap,

33
00:02:50.982 --> 00:02:56.737
the card content and
the card actions in a form.

34
00:02:59.188 --> 00:03:01.390
All right?

35
00:03:01.390 --> 00:03:06.230
And because we're now using a form module,

36
00:03:06.230 --> 00:03:10.000
Angular is going to do
some stuff under the hood.

37
00:03:10.000 --> 00:03:16.670
One of these things that it's going
to do is it's going to create,

38
00:03:17.700 --> 00:03:22.280
essentially a form controller which can
then contain other form controllers.

39
00:03:22.280 --> 00:03:28.150
Which manages not only the data of
the form, but the correctness of the form.

40
00:03:28.150 --> 00:03:33.940
And so, this is where, when you start to
think about forms, it's important to, one,

41
00:03:33.940 --> 00:03:38.010
realize that you're not only manipulating
the data and you need to reflect that.

42
00:03:38.010 --> 00:03:43.642
But as well, you need to think about,

43
00:03:43.642 --> 00:03:49.098
is this form state correct enough for

44
00:03:49.098 --> 00:03:54.387
me to do an additional action on it?

45
00:03:54.387 --> 00:03:58.095
So, the question is,
am I going to talk about the pros and

46
00:03:58.095 --> 00:04:01.210
cons of template forms
versus reactive forms?

47
00:04:01.210 --> 00:04:01.750
Yes.

48
00:04:01.750 --> 00:04:06.290
I would definitely get into
that a bit later today.

49
00:04:06.290 --> 00:04:11.350
But in the meantime,
let's see this in action.

50
00:04:11.350 --> 00:04:16.720
So, what I'm gonna do is I'm going to
create a local template variable and

51
00:04:16.720 --> 00:04:24.170
I'm just gonna call this form, and then
within this, I'm going to just do ngForm.

52
00:04:24.170 --> 00:04:27.083
Now, what this does,
or allows us to do is,

53
00:04:27.083 --> 00:04:32.330
now it's under the hood,
Angular is creating a form

54
00:04:32.330 --> 00:04:37.670
control to kind of monitor what
is happening with the form.

55
00:04:37.670 --> 00:04:42.640
And then, we're essentially assigning that
reference to a local template variable,

56
00:04:42.640 --> 00:04:45.180
which we'll see in just a moment.

57
00:04:45.180 --> 00:04:52.823
But in order for this to work,
I kind of need to add in a Form control.

58
00:04:52.823 --> 00:04:56.530
So, let's take, and
I'm going to delete this

59
00:04:58.360 --> 00:05:02.970
here, and
let's start to build out this form.

60
00:05:02.970 --> 00:05:09.900
Now that I have this form defined,
I'm going to create a mat form field.

61
00:05:09.900 --> 00:05:15.760
So this is a Angular Material mechanism.

62
00:05:15.760 --> 00:05:21.220
And then within this,
I'm gonna create a text input.

63
00:05:21.220 --> 00:05:28.250
So, we'll just go input, and
we'll start to flesh this out.

64
00:05:28.250 --> 00:05:33.120
Now, what you have to be
super careful of is making

65
00:05:33.120 --> 00:05:37.770
sure that you get the correct case, so
it's not staircase but it is camel case.

66
00:05:39.090 --> 00:05:40.430
Trust me, from experience,

67
00:05:40.430 --> 00:05:44.410
if you mess this up,
it will be incredibly embarrassing.

68
00:05:44.410 --> 00:05:48.680
So, make sure that you use camel case,
not staircase.

69
00:05:48.680 --> 00:05:56.291
And then, because we have an input,
we'll go ngModel,

70
00:05:56.291 --> 00:06:01.218
and we are going to bind two Current.

71
00:06:02.769 --> 00:06:05.920
Course.

72
00:06:05.920 --> 00:06:08.650
Or, I think it's actually selected course,
there we go, title.

73
00:06:09.820 --> 00:06:12.750
And, I'm gonna break
this to a separate line.

74
00:06:14.262 --> 00:06:19.132
[LAUGH] And,

75
00:06:19.132 --> 00:06:24.039
we're also going to type equals text,

76
00:06:24.039 --> 00:06:27.330
and name equals title.

77
00:06:27.330 --> 00:06:30.908
So, let's stop there, and

78
00:06:30.908 --> 00:06:37.170
let's see if we can even
get this to render.

79
00:06:37.170 --> 00:06:42.260
So, over here, we got the title,
but we have an error.

80
00:06:42.260 --> 00:06:44.980
We cannot read property of
title because it's null.

81
00:06:46.150 --> 00:06:48.170
And so,
there's a couple ways to solve this.

82
00:06:48.170 --> 00:06:53.340
But what I recommend is to start with,

83
00:06:53.340 --> 00:06:56.600
especially when dealing with a form,
start with an empty object,

84
00:06:56.600 --> 00:07:02.470
that you can then bind to until you have a
selected object that you're going to edit.

85
00:07:02.470 --> 00:07:08.937
And so, a lot of times I will reuse the
same form to create and update an object.

86
00:07:08.937 --> 00:07:13.962
And so, what we're going to do is

87
00:07:13.962 --> 00:07:20.063
we're going to hop into our component,

88
00:07:20.063 --> 00:07:24.011
and we're going to create

89
00:07:24.011 --> 00:07:29.050
a resetSelectedCourse method.

90
00:07:29.050 --> 00:07:32.369
And we're going to create an empty,
course.

91
00:07:34.270 --> 00:07:38.120
And this is going to have an id of null,
I'll just fix this real quick.

92
00:07:39.220 --> 00:07:42.710
Checking on my Zoom room to
make sure that they're not

93
00:07:42.710 --> 00:07:44.960
throwing their hands in the air
like they just don't care.

94
00:07:46.100 --> 00:07:53.018
So id is null, good, description here,

95
00:07:53.018 --> 00:07:57.768
and we have percentComplete

96
00:08:03.159 --> 00:08:08.850
We'll go with 0, and
it looks like I spelt that right and

97
00:08:08.850 --> 00:08:13.604
for whatever reason, I know why, false.

98
00:08:18.354 --> 00:08:19.090
All right.

99
00:08:19.090 --> 00:08:24.076
And then, what we're going to do
is we're just going to go this

100
00:08:24.076 --> 00:08:27.195
selectedCourse equals emptyCourse.

101
00:08:32.861 --> 00:08:34.810
All right.

102
00:08:34.810 --> 00:08:36.540
Now, we're going to take a moment.

103
00:08:36.540 --> 00:08:42.170
And I want to touch on a component topic
that we haven't gotten to just yet.

104
00:08:42.170 --> 00:08:43.920
And that's lifecycle hooks.

105
00:08:43.920 --> 00:08:48.520
And so, within a component,
there are a variety of things that happen

106
00:08:48.520 --> 00:08:52.510
within its lifecycle,
it's created, is destroyed.

107
00:08:52.510 --> 00:08:57.330
It's initialized, a number of things
that its bindings are updated, etc.

108
00:08:57.330 --> 00:09:05.710
And so, within every component,
there are what we call lifecycle hooks

109
00:09:05.710 --> 00:09:10.690
that allow us to tap into
those lifecycle events.

110
00:09:10.690 --> 00:09:12.720
And so, when you generate a new component,

111
00:09:13.910 --> 00:09:17.670
what you will see is you have this
method here for instance ngOnInit.

112
00:09:17.670 --> 00:09:21.670
So, this is the most common
life cycle hook, and

113
00:09:21.670 --> 00:09:26.930
this is fired when your component
is essentially initialized,

114
00:09:26.930 --> 00:09:33.170
or all of the bindings have been satisfied
and so, you'll see here in ngOnInit.

115
00:09:33.170 --> 00:09:37.520
And, it's really considered a best
practice that if you're using a lifecycle

116
00:09:37.520 --> 00:09:44.300
hook, that you add the interface, or you
implement the interface to the component.

117
00:09:44.300 --> 00:09:50.400
So if I took this off, just for a second,
you'll see that this should get angry.

118
00:09:50.400 --> 00:09:53.870
And so it's saying,
you did not implement OnInit.

119
00:09:53.870 --> 00:09:58.920
So, you are basically in violation
of this interface contract.

120
00:09:58.920 --> 00:10:03.420
And so, the reason why you
especially want ngOnInit is that

121
00:10:03.420 --> 00:10:07.310
if you put logic in a constructor,
when is it fired?

122
00:10:07.310 --> 00:10:08.720
Well, immediately.

123
00:10:08.720 --> 00:10:13.030
You have no control over
when that code is executed.

124
00:10:13.030 --> 00:10:14.352
It's also very hard to test.

125
00:10:14.352 --> 00:10:19.330
With ngOnInit, if you're waiting for
asynchronous data that you're binding to,

126
00:10:19.330 --> 00:10:24.055
well, you can safely say, or
more safely say that this data is here,

127
00:10:24.055 --> 00:10:27.450
when the component is initialized.

128
00:10:27.450 --> 00:10:31.430
And so, this is where you'll put
any kind of initialization code for

129
00:10:31.430 --> 00:10:34.870
your component into lifecycle hooks.

130
00:10:34.870 --> 00:10:39.890
So, what I'm gonna do here,
reset selected course, drop this in, and

131
00:10:39.890 --> 00:10:41.230
we're going to save.

132
00:10:41.230 --> 00:10:45.894
And so, what we're essentially
doing is resetting this to

133
00:10:45.894 --> 00:10:48.610
an emptyCourse to initialize it.

134
00:10:48.610 --> 00:10:55.860
So, if I go back here and select this,
now we have Angular 9 Fundamentals.

135
00:10:55.860 --> 00:11:00.310
Let me just refresh this, make sure I
am not throwing any errors in the code.

136
00:11:00.310 --> 00:11:03.770
So, we are looking good, and
the reason is I'm no longer

137
00:11:03.770 --> 00:11:08.620
binding to a null, or
property on a null object.

138
00:11:08.620 --> 00:11:13.680
Instead, I am initializing
this to an empty component.

139
00:11:13.680 --> 00:11:16.905
And what we can do here, is.

140
00:11:22.057 --> 00:11:23.078
I'm going to create.

141
00:11:26.670 --> 00:11:28.546
A cancel method.

142
00:11:30.360 --> 00:11:36.240
And we'll just go this
resetSelectedCourse, all right?

143
00:11:36.240 --> 00:11:41.627
So, within this method when it's hit,
it's just going to reset.

144
00:11:41.627 --> 00:11:48.509
So, if I go back to my
courses component here,

145
00:11:48.509 --> 00:11:52.214
let me put in button, and

146
00:11:52.214 --> 00:11:56.979
we're just going to go cancel,

147
00:11:56.979 --> 00:12:00.869
or rather to it like this.

148
00:12:00.869 --> 00:12:05.935
And then, we'll go,
we'll set this to type button,

149
00:12:05.935 --> 00:12:11.016
we'll flesh this out a bit
more in just a moment, but.

150
00:12:15.580 --> 00:12:16.390
Mat-button.

151
00:12:16.390 --> 00:12:20.330
So, this is snake hiss I hope,
if not, zoom I see you.

152
00:12:21.340 --> 00:12:27.070
And, we'll go click, and

153
00:12:27.070 --> 00:12:30.590
we'll go cancel, right?

154
00:12:30.590 --> 00:12:32.270
Let's check this in.

155
00:12:32.270 --> 00:12:37.930
See, so there we go, select, cancel.

156
00:12:37.930 --> 00:12:39.016
It just sets it back to nothing.

157
00:12:39.016 --> 00:12:41.352
All right.

158
00:12:41.352 --> 00:12:48.530
So now, let's talk about
this local template variable

159
00:12:50.130 --> 00:12:55.600
that we created, now that we have
a form to actually work with,

160
00:12:55.600 --> 00:13:00.395
and see what this is doing.

161
00:13:00.395 --> 00:13:04.130
We'll, look at this form
reference that we created.

162
00:13:04.130 --> 00:13:09.470
And we'll just kind of see what is
happening here, like what is the stone.

163
00:13:09.470 --> 00:13:13.429
So, if I go under the card,
let me see here,

164
00:13:13.429 --> 00:13:18.245
I think I can actually just
put it in here, maybe not,

165
00:13:18.245 --> 00:13:22.326
but we'll try and
we'll just dump this out.

166
00:13:26.438 --> 00:13:30.315
So, we're just going to go pre and

167
00:13:30.315 --> 00:13:34.068
we're going to go form.value.

168
00:13:37.325 --> 00:13:39.870
We'll go json.

169
00:13:39.870 --> 00:13:46.500
Let me duplicate that, and
let me go form.valid, all right?

170
00:13:46.500 --> 00:13:47.000
Let's see if this renders.

171
00:13:50.110 --> 00:13:51.380
All right.

172
00:13:51.380 --> 00:13:56.070
Now, as I said, template reference or
form reference is,

173
00:13:56.070 --> 00:14:02.560
you're not only keeping track of
the value of the form, but is it valid?

174
00:14:02.560 --> 00:14:05.550
So now, if I type in title,

175
00:14:06.590 --> 00:14:10.190
you can see that I'm tracking
the value of the entire form.

176
00:14:11.290 --> 00:14:14.690
And, if I go back, and

177
00:14:14.690 --> 00:14:17.360
right now I don't have any indication
whether it's valid or not.

178
00:14:17.360 --> 00:14:22.600
So, if I go here and I go required, now,

179
00:14:22.600 --> 00:14:26.310
if there's nothing there,
the form is in an invalid state.

180
00:14:26.310 --> 00:14:29.320
So now, you'll see, is it valid?

181
00:14:29.320 --> 00:14:30.180
No, it's not.

182
00:14:30.180 --> 00:14:35.834
And so, the minute I start typing,
then it goes to true.

183
00:14:35.834 --> 00:14:39.290
And so, then it's now valid.

184
00:14:39.290 --> 00:14:44.890
And here are, or
here is the value of the form.

185
00:14:44.890 --> 00:14:49.534
So, if I come back into the code,
let me just duplicate this real quick.

186
00:14:52.105 --> 00:14:55.370
And, let's go with description.

187
00:14:58.798 --> 00:15:05.130
And, or let's actually,
just because this is a placeholder,

188
00:15:05.130 --> 00:15:11.740
we will make title required,
we'll make description optional.

189
00:15:11.740 --> 00:15:13.300
So, I actually did that backwards.

190
00:15:14.740 --> 00:15:16.640
So, back to the app.

191
00:15:16.640 --> 00:15:20.760
Now, you'll see, because I have
added an additional entry model,

192
00:15:20.760 --> 00:15:22.980
that is attached to
the entire form control.

193
00:15:22.980 --> 00:15:25.080
So, is it valid?

194
00:15:25.080 --> 00:15:26.550
No.

195
00:15:26.550 --> 00:15:27.830
Is it valid now?

196
00:15:27.830 --> 00:15:32.530
Yes, if I go cancel, it's no longer valid.

197
00:15:32.530 --> 00:15:37.860
So, as I start to type this in,
now it's valid.

198
00:15:37.860 --> 00:15:41.820
If I remove the title,
it's not only invalid, but

199
00:15:41.820 --> 00:15:46.937
you can see that the form control
is surfacing some stuff for

200
00:15:46.937 --> 00:15:54.230
us to then check,
is this an invalid state, yes or no?

201
00:15:54.230 --> 00:15:57.570
And then,
we can essentially act upon that.

