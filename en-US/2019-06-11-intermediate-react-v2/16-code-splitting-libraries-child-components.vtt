WEBVTT

1
00:00:00.270 --> 00:00:06.865
&gt;&gt; Brian Holt: That's going to
&gt;&gt; Brian Holt: Details here.

2
00:00:06.865 --> 00:00:11.023
Well, first thing I wanted to call out
here is notice the details has no concept

3
00:00:11.023 --> 00:00:13.230
that it's being lazily loaded, right?

4
00:00:13.230 --> 00:00:14.787
I just wrote a normal details component.

5
00:00:14.787 --> 00:00:17.595
I didn't modify anything inside
of this to make it lazily loaded.

6
00:00:17.595 --> 00:00:21.072
It's blissfully unaware
of how it is loaded.

7
00:00:21.072 --> 00:00:24.406
So that's pretty cool as well, I didn't
have to modify anything in details.

8
00:00:24.406 --> 00:00:29.477
But let's just assume for a second that

9
00:00:29.477 --> 00:00:34.548
here I say import_from 'lodash' and

10
00:00:34.548 --> 00:00:40.095
let's import moment as well from moment.

11
00:00:40.095 --> 00:00:42.707
So these are two pretty big libraries,
right?

12
00:00:42.707 --> 00:00:47.140
And here, just so
that we can say we used them,

13
00:00:47.140 --> 00:00:51.137
we'll say console.log(_ moment).

14
00:00:55.108 --> 00:00:56.598
&gt;&gt; Brian Holt: It is called moment, right?

15
00:00:56.598 --> 00:00:57.486
&gt;&gt; Speaker 2: moment.js.

16
00:00:57.486 --> 00:00:58.446
&gt;&gt; Brian Holt: moment.js?

17
00:01:04.337 --> 00:01:06.613
&gt;&gt; Brian Holt: Let's check.

18
00:01:06.613 --> 00:01:09.138
I just choose those two cuz I
know that they're relatively big.

19
00:01:11.183 --> 00:01:12.139
&gt;&gt; Brian Holt: No, it's this one.

20
00:01:14.936 --> 00:01:17.795
&gt;&gt; Brian Holt: So it's gonna go and
install those really quickly.

21
00:01:28.364 --> 00:01:29.745
&gt;&gt; Brian Holt: But notice that lodash and

22
00:01:29.745 --> 00:01:32.386
moment are not a part of the other bundle,
right?

23
00:01:32.386 --> 00:01:35.801
They're not a part of SearchParams or
anything like that,

24
00:01:35.801 --> 00:01:37.520
they're unique to details.

25
00:01:37.520 --> 00:01:39.969
So parcel is smart enough to say, hey,

26
00:01:39.969 --> 00:01:43.902
I know that this is never gonna
be loaded in the other bundle, so

27
00:01:43.902 --> 00:01:48.766
I can just include it in this bundle,
&gt;&gt; Brian Holt: Okay?

28
00:01:50.568 --> 00:01:55.550
&gt;&gt; Brian Holt: So now if I refresh the
page, notice that this bundle got huge,

29
00:01:55.550 --> 00:01:58.370
right now it's 747 kilobytes.

30
00:01:58.370 --> 00:02:02.420
And you can see that there were loading
out these two things are logging

31
00:02:02.420 --> 00:02:03.181
out rather.

32
00:02:05.307 --> 00:02:08.487
&gt;&gt; Brian Holt: So one don't load all of
moment and don't load all the lodash,

33
00:02:08.487 --> 00:02:10.051
I think that might be my point.

34
00:02:10.051 --> 00:02:14.554
But besides that point, you wanna
find like heavy points to split your

35
00:02:14.554 --> 00:02:18.831
application and if you're not
shaving off a significant amount,

36
00:02:18.831 --> 00:02:22.367
it's a worse user experience
having to wait, right?

37
00:02:22.367 --> 00:02:27.463
So it's a tool that you should use, but
you should be careful where you use it.

38
00:02:29.723 --> 00:02:32.078
&gt;&gt; Brian Holt: So we can go back
over to App here as well, and

39
00:02:32.078 --> 00:02:35.153
we can do the exact same thing
with SearchParams as well.

40
00:02:39.974 --> 00:02:41.567
&gt;&gt; Brian Holt: Now notice
I didn't change Suspense,

41
00:02:41.567 --> 00:02:43.696
we're using the same Suspense thing here,
right?

42
00:02:43.696 --> 00:02:49.401
But if I refresh the page,
now notice that if you go to Network,

43
00:02:49.401 --> 00:02:53.832
SearchParams is its own bundle as well,
right?

44
00:02:53.832 --> 00:02:58.921
So SearchParams, and then I go to
the other one, and it'll load this one.

45
00:02:58.921 --> 00:02:59.794
But hey, you know what's cool?

46
00:02:59.794 --> 00:03:04.067
If I go back, now, to the other one,
notice it doesn't load it again, right?

47
00:03:04.067 --> 00:03:08.939
It already has it so
it is able to just instantly execute that.

48
00:03:08.939 --> 00:03:11.832
So, you'll only take that
performance hit once.

49
00:03:14.479 --> 00:03:15.911
&gt;&gt; Brian Holt: And
you can do this anywhere,

50
00:03:15.911 --> 00:03:19.420
it doesn't have to just be on a route,
we could go into details, right?

51
00:03:19.420 --> 00:03:21.932
And notice we're loading model up here,
but

52
00:03:21.932 --> 00:03:26.241
we don't actually need Modal up front
right we only need Modal to click on it.

53
00:03:26.241 --> 00:03:31.320
So we could get rid of this and

54
00:03:31.320 --> 00:03:38.946
say const Modal=lazy import./Modal.

55
00:03:41.779 --> 00:03:45.974
&gt;&gt; Brian Holt: Right, because the Modal
is not initially used, right?

56
00:03:45.974 --> 00:03:52.128
The Modal is only used if
showModal happens, right?

57
00:03:52.128 --> 00:03:57.167
So now if I save this and go back over
here, and I go to one of the animal pages

58
00:04:10.694 --> 00:04:12.196
&gt;&gt; Brian Holt: Not sure what I did there.

59
00:04:12.196 --> 00:04:15.899
Yeah, you need to import
lazy as well from React,

60
00:04:15.899 --> 00:04:18.904
cuz that's needs to be a real function.

61
00:04:18.904 --> 00:04:21.958
So I'm told,
&gt;&gt; Brian Holt: And

62
00:04:21.958 --> 00:04:25.433
then from there now this works.

63
00:04:25.433 --> 00:04:31.703
Now if you go into network, notice we've
loaded app we've loaded details but

64
00:04:31.703 --> 00:04:35.697
if I click Adopt here,
we get Modal there as well.

65
00:04:35.697 --> 00:04:36.982
Which is pretty cool as well.

66
00:04:36.982 --> 00:04:39.406
It makes code splitting on
these places really simple, but

67
00:04:39.406 --> 00:04:41.694
this is even worse this is
only 10 kilobytes, right?

68
00:04:41.694 --> 00:04:43.295
Because it's not that much JavaScript.

69
00:04:43.295 --> 00:04:46.318
But just to show you like
you can split on libraries,

70
00:04:46.318 --> 00:04:50.872
you can split on a bunch of stuff as well,
it doesn't just have to be on routes.

71
00:04:55.865 --> 00:04:59.347
&gt;&gt; Brian Holt: And the other thing that's
cool as well, that's worth calling out.

72
00:04:59.347 --> 00:05:03.083
Notice I didn't put a new Suspense
component anywhere either,

73
00:05:03.083 --> 00:05:05.724
it's still using this
top level one up here.

74
00:05:05.724 --> 00:05:09.156
So you can have different Suspense
components in different places, or you can

75
00:05:09.156 --> 00:05:12.540
one top level one as well, that's up to
you and how you wanna design your app.

