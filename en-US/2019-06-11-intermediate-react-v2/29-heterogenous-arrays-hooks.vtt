WEBVTT

1
00:00:00.180 --> 00:00:01.400
&gt;&gt; Brian: Let's go to useDropdown.

2
00:00:02.510 --> 00:00:08.434
So we're gonna rename useDropdown.js,

3
00:00:08.434 --> 00:00:12.060
rename that to be dot tsx.

4
00:00:16.770 --> 00:00:18.720
It thinks it's happy, now it's upset.

5
00:00:18.720 --> 00:00:19.563
Okay, great.

6
00:00:23.712 --> 00:00:27.030
&gt;&gt; Brian: So we need to update or
get a couple more things from this.

7
00:00:27.030 --> 00:00:33.289
We need this to import set
state action and dispatch.

8
00:00:36.415 --> 00:00:37.850
&gt;&gt; Brian: Okay, what is label?

9
00:00:37.850 --> 00:00:44.243
Label is a,
&gt;&gt; Brian: String.

10
00:00:44.243 --> 00:00:51.007
I pasted the wrong thing in my notes so,
&gt;&gt; Brian: DefaultState

11
00:00:51.007 --> 00:00:52.212
is going to be an any.

12
00:00:55.135 --> 00:00:58.762
&gt;&gt; Brian: And
options is going to be a array of strings.

13
00:01:09.706 --> 00:01:12.834
&gt;&gt; Brian: So drop down in and
of itself is a function component.

14
00:01:18.378 --> 00:01:20.338
&gt;&gt; Brian: So
it will grab that from React as well.

15
00:01:22.947 --> 00:01:24.420
&gt;&gt; Brian: And then,
does it know updateState is?

16
00:01:24.420 --> 00:01:27.060
Yeah, that's a dispatch and
dropdown, and state.

17
00:01:28.650 --> 00:01:35.410
So we could even go as far and say,
&gt;&gt; Brian: Let's see, state.

18
00:01:39.329 --> 00:01:40.015
&gt;&gt; Brian: State.

19
00:01:48.215 --> 00:01:48.833
&gt;&gt; Brian: Yeah.

20
00:01:52.298 --> 00:01:54.535
&gt;&gt; Brian: So in this case, we don't
actually know what states gonna be,

21
00:01:54.535 --> 00:01:55.560
actually we do, don't we?

22
00:01:55.560 --> 00:01:58.921
State is always going to be a string.

23
00:02:01.081 --> 00:02:01.875
&gt;&gt; Brian: That's true.

24
00:02:01.875 --> 00:02:03.215
So make this a string.

25
00:02:07.053 --> 00:02:10.064
&gt;&gt; Brian: Because you're
dealing with a select, right?

26
00:02:10.064 --> 00:02:12.043
And that select is always going
to be dealing with strings.

27
00:02:12.043 --> 00:02:16.147
So you can just go ahead and
force everyone to give you strings.

28
00:02:18.612 --> 00:02:20.385
&gt;&gt; Brian: Okay, and then I guess we
didn't actually need these ones, so

29
00:02:20.385 --> 00:02:21.360
you can go ahead and delete those.

30
00:02:22.870 --> 00:02:24.612
SetStateAction and Dispatch, okay.

31
00:02:32.308 --> 00:02:34.380
&gt;&gt; Brian: Cool,
any questions about useDropdown?

32
00:02:34.380 --> 00:02:35.530
It was pretty straightforward.

33
00:02:35.530 --> 00:02:38.430
You just have to identify the parameters
and everything else kinda fell into place.

34
00:02:38.430 --> 00:02:42.170
And then, we just kind of refined
useDropdown a little bit to make sure this

35
00:02:42.170 --> 00:02:46.590
is definitely a function component and
not just generic JSX.

36
00:02:46.590 --> 00:02:50.286
Nothing you've really have to distinguish
that very often, but might as well.

37
00:02:53.828 --> 00:03:00.811
&gt;&gt; Brian: I got like ten more minutes now,
eight more minutes to finish it, okay?

38
00:03:03.531 --> 00:03:05.657
&gt;&gt; Brian: So
let's go finish search params now.

39
00:03:09.850 --> 00:03:18.250
&gt;&gt; Brian: We renamed that to .tsx.

40
00:03:18.250 --> 00:03:21.270
We need to tell that this is a
FunctionComponent, so let's go grab that.

41
00:03:22.730 --> 00:03:26.140
Results can be upset at,
because we haven't defined results yet.

42
00:03:27.320 --> 00:03:33.045
And we're also need to get import

43
00:03:33.045 --> 00:03:40.623
RouteCmponentProps from reach/Router.

44
00:03:40.623 --> 00:03:43.439
Okay, we'll move that up there.

45
00:03:48.552 --> 00:03:54.100
&gt;&gt; Brian: And then,
we also need animal from the master/pet.

46
00:03:54.100 --> 00:03:55.110
So animal, like that.

47
00:03:56.540 --> 00:03:58.714
So search params is a function component.

48
00:04:03.358 --> 00:04:08.669
&gt;&gt; Brian: And it takes its components,
a route component props,

49
00:04:08.669 --> 00:04:16.133
It itself is not expecting any sort of
ID or anything coming from Reach Router.

50
00:04:16.133 --> 00:04:20.250
It doesn't have any wildcards or
variables in its URL.

51
00:04:20.250 --> 00:04:23.324
So we don't have to give this
one any sort of parameters,

52
00:04:23.324 --> 00:04:25.063
whereas we did before, right?

53
00:04:28.133 --> 00:04:33.637
&gt;&gt; Brian: Then,
the one that we have to do here is

54
00:04:33.637 --> 00:04:39.640
useDropdown, "Animal", ANIMALS.

55
00:04:39.640 --> 00:04:44.135
The one that I'm looking for is,
&gt;&gt; Brian: This is

56
00:04:44.135 --> 00:04:48.150
another one of this where
the pets becomes a never, right?

57
00:04:48.150 --> 00:04:51.360
It gives us an array but it won't let us
touch it, so you have to tell it here.

58
00:04:51.360 --> 00:04:55.603
This is an array, but this is eventually
going to be an array of animal,

59
00:04:55.603 --> 00:04:57.678
that are coming back from the API.

60
00:05:02.573 --> 00:05:04.950
&gt;&gt; Brian: And same with thing with breeds.

61
00:05:04.950 --> 00:05:07.685
This is going to be as string array.

62
00:05:11.200 --> 00:05:15.777
&gt;&gt; Brian: Type, location string,
breed string, or dispatch, right?

63
00:05:15.777 --> 00:05:20.638
So this is what we needed to
change about us drop down.

64
00:05:20.638 --> 00:05:27.331
So here's the issue, we're giving back
Breed and it's sees each one of these and

65
00:05:27.331 --> 00:05:32.771
is like I don't know if this is
always gonna come in the same order.

66
00:05:32.771 --> 00:05:35.130
So I'm just gonna assume that
it comes always out of order.

67
00:05:35.130 --> 00:05:36.200
We know this isn't the case.

68
00:05:36.200 --> 00:05:40.390
If we go back to use dropdown that
state dropdown and state update,

69
00:05:40.390 --> 00:05:42.490
state always comes back in this order.

70
00:05:42.490 --> 00:05:45.820
So we actually have to be more
specific than we were previously,

71
00:05:45.820 --> 00:05:49.400
despite the fact that
useDropdown was happy before.

72
00:05:49.400 --> 00:05:51.030
What's being used is unhappy and

73
00:05:51.030 --> 00:05:53.700
the problem is not there it's
actually in the useDropdown.

74
00:05:55.090 --> 00:05:57.066
So here we have to give it back,

75
00:05:57.066 --> 00:06:01.400
it's like no this is very much
gonna be string FunctionComponent.

76
00:06:02.450 --> 00:06:07.536
It's actually gonna be
a ReactComponentElement.

77
00:06:10.021 --> 00:06:16.836
&gt;&gt; Brian: Nope, it's a,
&gt;&gt; Brian: Let's just go FunctionComponent,

78
00:06:16.836 --> 00:06:18.710
cuz that's technically what it is.

79
00:06:18.710 --> 00:06:23.207
And then this is gonna
be a SetStateAction.

80
00:06:29.253 --> 00:06:30.334
&gt;&gt; Brian: And
this is gonna take in a string.

81
00:06:35.831 --> 00:06:37.830
&gt;&gt; Brian: And
let's go see if that fixed our problem.

82
00:06:37.830 --> 00:06:39.030
Okay, it did.

83
00:06:39.030 --> 00:06:42.040
So let's go ahead and just chit chat for
a second about what happened here.

84
00:06:43.250 --> 00:06:45.473
This was actually probably
a really good problem for

85
00:06:45.473 --> 00:06:48.252
you to ,because I think I've
rewritten this like three times and

86
00:06:48.252 --> 00:06:51.047
I run into it every single time that
I forget that I need to do this.

87
00:06:53.785 --> 00:06:58.683
&gt;&gt; Brian: So when you give Typescript an
array, and it's a mixed array, right, or

88
00:06:58.683 --> 00:07:00.270
a heterogenous array.

89
00:07:01.320 --> 00:07:04.850
It's going to assume that all the elements
can come in any order, right?

90
00:07:04.850 --> 00:07:09.750
So I gave it here a string,
an element, and a function.

91
00:07:09.750 --> 00:07:12.270
I assume that this can come
back to me in any order.

92
00:07:12.270 --> 00:07:14.120
So I had to go back and say, nope.

93
00:07:14.120 --> 00:07:17.735
It's very much this, this, this,
and never anything else, right?

94
00:07:19.640 --> 00:07:22.542
So now if I go back to
Pet it's gonna look at,

95
00:07:22.542 --> 00:07:25.530
or not Pet,
we were in SearchParams rather.

96
00:07:27.130 --> 00:07:30.650
It knows that's gonna be a string,
I know that.

97
00:07:30.650 --> 00:07:31.473
So it's okay.

98
00:07:31.473 --> 00:07:34.260
Does that makes sense?

99
00:07:37.844 --> 00:07:41.905
&gt;&gt; Brian: So let's go do results.

100
00:07:47.798 --> 00:07:51.505
&gt;&gt; Brian: Rename this to be Results.tsx.

101
00:07:56.428 --> 00:08:00.642
&gt;&gt; Brian: So we need to grab
FunctionComponent from up here,

102
00:08:00.642 --> 00:08:02.507
FunctionComponent.

103
00:08:02.507 --> 00:08:08.211
And we need to grab Import Animal

104
00:08:08.211 --> 00:08:15.405
from @frontendmasters/pet, okay?

105
00:08:15.405 --> 00:08:20.990
We're gonna say this takes an interface

106
00:08:20.990 --> 00:08:26.252
of IProps being pets: Animal array.

107
00:08:26.252 --> 00:08:32.424
And then results here is
a FunctionComponent with IProps.

108
00:08:38.583 --> 00:08:39.749
&gt;&gt; Brian: And I think that's it.

109
00:08:39.749 --> 00:08:41.647
I think now results should be happy.

110
00:08:44.420 --> 00:08:46.612
&gt;&gt; Brian: And
those pets is an animal array now.

111
00:08:46.612 --> 00:08:51.410
And now if we go back to SearchParams,
I think this should be happy too now.

112
00:08:53.490 --> 00:08:54.120
Where's my error?

113
00:08:55.690 --> 00:08:57.230
UpdateBreed, this wasn't happy.

114
00:08:57.230 --> 00:08:58.060
What's wrong with this?

115
00:09:01.160 --> 00:09:02.776
New state strings forward, okay.

116
00:09:02.776 --> 00:09:05.720
So rather than do that,
we're gonna come back here and

117
00:09:05.720 --> 00:09:08.478
say this is actually gonna
be the SetStateAction.

118
00:09:08.478 --> 00:09:09.619
I thought that's what that was.

119
00:09:17.894 --> 00:09:18.806
&gt;&gt; Brian: Dispatch, maybe?

120
00:09:21.325 --> 00:09:22.170
&gt;&gt; Brian: Let's try that.

121
00:09:28.792 --> 00:09:34.010
&gt;&gt; Brian: And,
&gt;&gt; Brian: Okay, it seems happy with that.

122
00:09:35.040 --> 00:09:35.540
Okay.

123
00:09:38.978 --> 00:09:41.840
&gt;&gt; Brian: So to recap what happened there,
I gave it the wrong type.

124
00:09:41.840 --> 00:09:44.290
So I was looking at what I was
calling updateBreeds later,

125
00:09:44.290 --> 00:09:46.700
I was like I don't understand
what this is, right?

126
00:09:46.700 --> 00:09:48.090
So instead what I did is, I went and

127
00:09:48.090 --> 00:09:52.820
grabbed a different type from React called
Dispatch, and that one it was happy with.

