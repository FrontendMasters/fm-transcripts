WEBVTT

1
00:00:00.500 --> 00:00:01.618
&gt;&gt; Brian Holt: We're
gonna do one more test,

2
00:00:01.618 --> 00:00:02.996
which is the hairiest one of them all.

3
00:00:05.570 --> 00:00:11.039
&gt;&gt; Brian Holt: And we're gonna say expect,

4
00:00:11.039 --> 00:00:18.478
where is that, container.firstChild

5
00:00:18.478 --> 00:00:23.519
toMatchInlineSnapshot.

6
00:00:27.082 --> 00:00:30.247
&gt;&gt; Brian Holt: That's it.

7
00:00:30.247 --> 00:00:35.220
So, what a snapshot is, is it's going
to go render this entire thing out.

8
00:00:35.220 --> 00:00:38.597
And the first time it runs it, it's just
going to dump all the markup in there.

9
00:00:38.597 --> 00:00:41.513
And then it's gonna say,
I assume every time after this,

10
00:00:41.513 --> 00:00:43.500
it's going to match, right?

11
00:00:43.500 --> 00:00:50.700
So if I say npm run test,
it's gonna say one new snapshot's written.

12
00:00:50.700 --> 00:00:53.780
And you can go in here and you can see,
this is what it looks like

13
00:00:56.040 --> 00:01:00.370
given that input, right?

14
00:01:03.530 --> 00:01:05.500
So if I go into details, for example.

15
00:01:05.500 --> 00:01:08.095
Or not details,
let's look at SearchParams.

16
00:01:11.220 --> 00:01:13.770
&gt;&gt; Brian Holt: And
I change the markup just a little bit.

17
00:01:13.770 --> 00:01:18.590
Let's say this is location, cuz maybe
they're not living there, I dunno.

18
00:01:19.950 --> 00:01:23.799
And I run this again,
it'll fail the test, right?

19
00:01:23.799 --> 00:01:27.650
Because now it's diverged, right.

20
00:01:27.650 --> 00:01:32.193
It's gonna say, hey,
you said that this was gonna match, and

21
00:01:32.193 --> 00:01:34.180
now it says question mark.

22
00:01:34.180 --> 00:01:35.900
Like, I don't know what to do with this,
right?

23
00:01:37.440 --> 00:01:39.802
So this is what I would
call a low-confidence test.

24
00:01:39.802 --> 00:01:43.110
It's low-effort, low-confidence,
but it's also free, right?

25
00:01:43.110 --> 00:01:49.000
I just match the snapshot, and now I can
see, if I change something over here and

26
00:01:49.000 --> 00:01:53.150
the snapshot's breaking over there,
that's a problem, right?

27
00:01:53.150 --> 00:01:56.070
But let's say I intended to put
those question marks there.

28
00:01:56.070 --> 00:02:01.781
All I have to do is say, oops,

29
00:02:01.781 --> 00:02:07.035
terminal, npm run test and

30
00:02:07.035 --> 00:02:13.440
then I just put -- --update.

31
00:02:13.440 --> 00:02:17.006
Which basically means I'm
saying jest --update.

32
00:02:17.006 --> 00:02:20.060
So this -- means pass this on to jest,
right?

33
00:02:21.100 --> 00:02:24.650
So if I run that this way, or
it's not, sorry, it's not that.

34
00:02:24.650 --> 00:02:26.294
It's -u.

35
00:02:28.720 --> 00:02:30.220
It's gonna say, you meant to do that?

36
00:02:30.220 --> 00:02:33.560
Okay, I'm going to update my snapshot.

37
00:02:33.560 --> 00:02:40.850
And so now, if we go back in here, to my
search params, if I put location, right?

38
00:02:40.850 --> 00:02:43.400
Now you see it's written in there.

39
00:02:43.400 --> 00:02:44.060
Which is cool.

40
00:02:47.380 --> 00:02:51.230
So I would just say put that
in your package.json as well.

41
00:02:51.230 --> 00:02:52.167
So you have test.

42
00:02:52.167 --> 00:02:56.444
I would put another line that's

43
00:02:56.444 --> 00:03:01.204
test:update and put -u in there.

44
00:03:01.204 --> 00:03:05.136
And we're gonna show you two more,

45
00:03:05.136 --> 00:03:09.470
test watch, which is jest --watch.

46
00:03:09.470 --> 00:03:13.520
And test:coverage, which is going

47
00:03:13.520 --> 00:03:18.302
to be,
&gt;&gt; Brian Holt: jest --coverage.

48
00:03:18.302 --> 00:03:21.302
So jest --coverage.

49
00:03:24.682 --> 00:03:27.277
&gt;&gt; Brian Holt: Okay, so
I showed you what update is.

50
00:03:27.277 --> 00:03:28.996
If you do npm run test watch now,

51
00:03:28.996 --> 00:03:32.184
it's gonna go into an interactive
mode that's gonna see,

52
00:03:32.184 --> 00:03:36.346
everytime that you save your code,
it's going to rerun your tests, right?

53
00:03:36.346 --> 00:03:38.960
And then it's going to only
rerun tests that are failing.

54
00:03:40.530 --> 00:03:42.600
So I'm just gonna click a, and
it's gonna run all my tests, and

55
00:03:42.600 --> 00:03:43.810
it's gonna say, everything's fine.

56
00:03:45.990 --> 00:03:49.540
And so, it puts it into this interactive
mode so that you can fix tests on the fly.

57
00:03:49.540 --> 00:03:51.288
It's really quite nice.

58
00:03:51.288 --> 00:03:55.013
So you can say only change ones
that have done something like that.

59
00:03:55.013 --> 00:04:00.963
Or if I go into SearchParams right now,
SearchParams,

60
00:04:00.963 --> 00:04:05.404
and say location, and I change this now.

61
00:04:05.404 --> 00:04:07.110
And make it fail.

62
00:04:07.110 --> 00:04:09.610
It'll run that test again because
it sees that this one's changed.

63
00:04:09.610 --> 00:04:11.524
It's like, this one failed, right?

64
00:04:14.258 --> 00:04:17.817
&gt;&gt; Brian Holt: And so it puts it into this
interactive mode, which is really cool.

65
00:04:20.230 --> 00:04:21.810
&gt;&gt; Brian Holt: Last
thing I wanna show you,

66
00:04:21.810 --> 00:04:27.506
let's just put this back the way it was so
it passes again.

67
00:04:31.258 --> 00:04:32.791
&gt;&gt; Brian Holt: There, it passed.

68
00:04:32.791 --> 00:04:37.216
So last thing I want to show you here,
if I do npm run tests:coverage,

69
00:04:37.216 --> 00:04:41.716
this is going to run istanbul on your
project, if you know what that is,

70
00:04:41.716 --> 00:04:44.470
which is a test coverage tool.

71
00:04:44.470 --> 00:04:47.200
So, now let's just make this
maybe a little bit bigger.

72
00:04:48.600 --> 00:04:53.585
Gives me a nice graph, it's like, okay,
your pet component has 100% of statements

73
00:04:53.585 --> 00:04:58.789
covered, it has 50% of branches, 100%
of functions and 100% of lines covered.

74
00:04:58.789 --> 00:05:01.940
So it's saying, hey,
you're missing this one though, right?

75
00:05:01.940 --> 00:05:06.080
So it lets you know how much of your code
base is actually covered by test coverage.

76
00:05:07.230 --> 00:05:08.393
Now, we can actually go
one further than this.

77
00:05:08.393 --> 00:05:13.391
It generated this lcov directory,
or no, coverage directory.

78
00:05:13.391 --> 00:05:15.046
So cd coverage.

79
00:05:15.046 --> 00:05:17.287
And then if you go into
the lcov directory,

80
00:05:17.287 --> 00:05:21.290
which I don't know what that really
stands for, but, lcov-report.

81
00:05:21.290 --> 00:05:24.860
And then I say open index.html.

82
00:05:24.860 --> 00:05:26.645
This is gonna open this in my browser, and

83
00:05:26.645 --> 00:05:29.820
it's gonna give me a nice little
dashboard of all this stuff.

84
00:05:29.820 --> 00:05:32.170
So I can actually click
in to use drop down, and

85
00:05:32.170 --> 00:05:34.625
see, I missed these lines, right.

86
00:05:34.625 --> 00:05:36.470
This never gets run, right?

87
00:05:36.470 --> 00:05:38.117
But I can see this part right here.

88
00:05:38.117 --> 00:05:39.750
This got run 19 times.

89
00:05:39.750 --> 00:05:41.690
So it's real good to go, right?

90
00:05:43.930 --> 00:05:45.650
So this gives me like a nice dashboard.

91
00:05:45.650 --> 00:05:49.170
And I can see, I have other files here
that are not covered at all, for example.

92
00:05:50.930 --> 00:05:51.569
So again,

93
00:05:51.569 --> 00:05:56.190
I don't really like using test coverage
too much as a metric of code quality.

94
00:05:56.190 --> 00:06:01.020
I think it's like measuring a house by how
many nails you put into it, which is odd.

95
00:06:01.020 --> 00:06:02.590
But okay, sure, right.

96
00:06:02.590 --> 00:06:06.710
It's maybe indicative, but
definitely not like causative, right.

97
00:06:08.320 --> 00:06:12.350
So I think if you have 100% test coverage,
you're writing too many tests.

98
00:06:12.350 --> 00:06:13.118
Just my opinion.

99
00:06:16.740 --> 00:06:17.420
&gt;&gt; Brian Holt: Cool.

100
00:06:17.420 --> 00:06:20.400
Any questions about
tests that I showed you?

101
00:06:20.400 --> 00:06:21.440
This is not exhaustive.

102
00:06:21.440 --> 00:06:24.240
This is just kind of
your first foray into it.

103
00:06:24.240 --> 00:06:26.440
And if you want to learn more,
go watch Kent's course.

104
00:06:29.970 --> 00:06:31.250
&gt;&gt; Brian Holt: Any other
questions in general?

105
00:06:31.250 --> 00:06:34.193
That's the end of intermediate React.

106
00:06:34.193 --> 00:06:37.454
&gt;&gt; [APPLAUSE]

