WEBVTT

1
00:00:00.250 --> 00:00:06.086
&gt;&gt; Brian Holt: So let's go down to use
Context, so Context.js right here.

2
00:00:08.112 --> 00:00:11.777
&gt;&gt; Brian Holt: Now, notice I have first
level, second level, third level,

3
00:00:11.777 --> 00:00:15.315
fourth level, and
then I have James Jameson the firstborn.

4
00:00:17.410 --> 00:00:19.130
I think I was a couple of whiskeys deep,
so

5
00:00:19.130 --> 00:00:21.006
that's the most creativity I could muster.

6
00:00:23.046 --> 00:00:25.508
&gt;&gt; Brian Holt: So
context is solving this problem.

7
00:00:25.508 --> 00:00:28.509
Which, if you need to
know more about context,

8
00:00:28.509 --> 00:00:33.027
I implore you to take the Intro to React,
cuz that talks about context.

9
00:00:33.027 --> 00:00:36.266
But just to tell you, it solves the
problem of having to do prop drilling of

10
00:00:36.266 --> 00:00:39.821
passing parent to child, parent to child,
as well as covering things that Redux

11
00:00:39.821 --> 00:00:42.776
would normally cover,
which is like application-level state.

12
00:00:44.860 --> 00:00:46.876
So here I'm creating
a context with a fake object.

13
00:00:46.876 --> 00:00:51.218
This is just letting people
know the shape of the object.

14
00:00:51.218 --> 00:00:55.717
And this is an updater function.

15
00:00:55.717 --> 00:00:58.291
Or this would be called
an identity function technically,

16
00:00:58.291 --> 00:01:00.000
but not that it really needs to be that.

17
00:01:00.000 --> 00:01:02.870
But suffice to say this
is the shape of a hook.

18
00:01:02.870 --> 00:01:04.200
Okay?

19
00:01:04.200 --> 00:01:07.840
Here is actually where this matters,
here on levelFive, right?

20
00:01:07.840 --> 00:01:11.875
Where I create this, well,
that's down here at the bottom, so

21
00:01:11.875 --> 00:01:15.710
let's actually start all the way
down here at the level one.

22
00:01:15.710 --> 00:01:18.340
Or ContextComponent, rather.

23
00:01:18.340 --> 00:01:21.783
So here,
I'm creating a useState hook, right?

24
00:01:21.783 --> 00:01:28.212
With the name James Jameson 1 and
his email address.

25
00:01:28.212 --> 00:01:31.714
But I could totally change this to Bob or
something like that, right?

26
00:01:31.714 --> 00:01:33.820
Notice that would change down here.

27
00:01:33.820 --> 00:01:36.454
But I'm creating this in
the top-level component.

28
00:01:36.454 --> 00:01:38.923
I'm putting this provider above it.

29
00:01:38.923 --> 00:01:41.100
And then I'm rendering down to level two.

30
00:01:42.480 --> 00:01:47.910
Level three, level four,
and then level five here.

31
00:01:47.910 --> 00:01:49.140
Here I'm reading through the context.

32
00:01:49.140 --> 00:01:52.956
Notice I didn't pass it through all these
various different levels of components.

33
00:01:52.956 --> 00:01:56.805
But I'm reading out of the context
here using useContext, all right?

34
00:01:56.805 --> 00:01:59.532
So then I get user and set user down here.

35
00:01:59.532 --> 00:02:04.410
And here if I click increment,
it's incrementing this

36
00:02:04.410 --> 00:02:09.302
despite the fact that the hook
lives all the way up here.

37
00:02:09.302 --> 00:02:13.840
So useContext allows you to read and
write to context in this fashion.

38
00:02:16.423 --> 00:02:18.926
&gt;&gt; Brian Holt: Any
questions about useContext?

39
00:02:18.926 --> 00:02:21.076
Again, there’s a whole section on
it in the Complete Intro to React.

40
00:02:21.076 --> 00:02:25.148
So if context itself is confusing to you,
I’d implore you to take a look at that

