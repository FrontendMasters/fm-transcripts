WEBVTT

1
00:00:00.000 --> 00:00:04.282
&gt;&gt; Brian: So let's go fix another one,
let's go fix details,js here.

2
00:00:04.282 --> 00:00:09.173
So I'm gonna go to details.js,
we wanna say rename, and we want to rename

3
00:00:09.173 --> 00:00:13.927
this .tsx and obviously it's gonna
be upset about a great many things.

4
00:00:16.300 --> 00:00:18.651
&gt;&gt; Brian: So first of all,
it's gonna be upset by carousel and

5
00:00:18.651 --> 00:00:20.906
error boundary because
those aren't typed yet.

6
00:00:20.906 --> 00:00:22.648
And we have it in strict mode,

7
00:00:22.648 --> 00:00:26.076
which basically means we
don't accept any ANYs, right?

8
00:00:26.076 --> 00:00:29.189
And ANY is like,
it doesn't know what carousel is.

9
00:00:29.189 --> 00:00:33.818
So it's just like, I don't know what
this is, and I'm upset about it, right?

10
00:00:33.818 --> 00:00:37.010
So it's gonna be underlying this in red,

11
00:00:37.010 --> 00:00:41.677
this is going to be an error until
you go type this one as well.

12
00:00:41.677 --> 00:00:44.497
So probably correct order of things
is we probably could've gone and

13
00:00:44.497 --> 00:00:47.085
done carousel and error boundary first,
but we'll get to it.

14
00:00:47.085 --> 00:00:49.752
So for now let's just deal
with these kinds of errors.

15
00:00:54.105 --> 00:00:56.902
&gt;&gt; Brian: So
the first thing to know is that, React,

16
00:00:56.902 --> 00:01:01.813
you have to tell it what kind of props
it's gonna get, for classes that is.

17
00:01:01.813 --> 00:01:04.614
So we're gonna give it
a type parameter here, and

18
00:01:04.614 --> 00:01:07.694
we're gonna say that this
is a RouteComponentProps.

19
00:01:07.694 --> 00:01:10.514
And you can see there that it's like,
I think I know what that is, right?

20
00:01:10.514 --> 00:01:13.783
So if I click that it's gonna
grab that from reach router.

21
00:01:17.236 --> 00:01:19.434
&gt;&gt; Brian: And then this in of itself,

22
00:01:19.434 --> 00:01:24.317
these RouteComponentProps
also takes another parameter.

23
00:01:24.317 --> 00:01:27.321
So it's like a function call
within a function call and

24
00:01:27.321 --> 00:01:30.537
we have to tell it what kind of
things you can expect to get.

25
00:01:30.537 --> 00:01:33.641
So we're gonna tell that, hey,
we're expecting to get an id, and

26
00:01:33.641 --> 00:01:34.899
that's gonna be a string.

27
00:01:41.806 --> 00:01:42.470
&gt;&gt; Brian: Okay, so

28
00:01:42.470 --> 00:01:48.372
now it knows that this.props.id is either
gonna be a string or undefined, right?

29
00:01:48.372 --> 00:01:51.211
Because what happens if they
get to the details route

30
00:01:51.211 --> 00:01:52.959
without getting an id, right?

31
00:01:52.959 --> 00:01:55.034
So we have to provide for that.

32
00:01:55.034 --> 00:01:59.703
So what happens when we get to
componentDidMount and there's no string?

33
00:01:59.703 --> 00:02:01.522
Well, you're in a world of hurt.

34
00:02:01.522 --> 00:02:05.194
You need an id or
you should not be on the details page.

35
00:02:05.194 --> 00:02:09.503
We tell that RouteComponents, right,

36
00:02:09.503 --> 00:02:14.707
that's going to get
a parameter of id:string.

37
00:02:14.707 --> 00:02:18.037
Now, it's basically gonna say,
I think you're gonna get an id, but

38
00:02:18.037 --> 00:02:19.234
it might not come right?

39
00:02:19.234 --> 00:02:20.661
So that's what the id?

40
00:02:20.661 --> 00:02:22.608
is, like, I don't know, it might come.

41
00:02:22.608 --> 00:02:25.856
So that means we have to provide for
what happens if it's not there.

42
00:02:25.856 --> 00:02:30.332
So what happens if we get to the details
page and there was no id provided?

43
00:02:30.332 --> 00:02:32.834
That's what you and
I need to decide right now.

44
00:02:32.834 --> 00:02:37.076
Well, if you get to this page and
there's no id, you can't stay on this

45
00:02:37.076 --> 00:02:41.988
page because I can't show you any pet if I
don't have any id for the pet to show you.

46
00:02:41.988 --> 00:02:48.290
So we're just gonna say if
there is no this.props.id,

47
00:02:48.290 --> 00:02:52.360
you're gonna say navigate to /, so

48
00:02:52.360 --> 00:02:56.841
go back to the homepage and then return.

49
00:02:56.841 --> 00:02:59.760
So that takes care of part of this.

50
00:02:59.760 --> 00:03:03.675
So now we know by the time we get
down here, this is definitely here,

51
00:03:03.675 --> 00:03:05.682
it's definitely gonna be there.

52
00:03:05.682 --> 00:03:10.019
But the problem is
pet.animal expects what?

53
00:03:10.019 --> 00:03:12.234
It expects that to be a number, right?

54
00:03:12.234 --> 00:03:14.794
So let's just do a little
of magic here and

55
00:03:14.794 --> 00:03:17.436
say well now you're
a number [LAUGH] right?

56
00:03:17.436 --> 00:03:21.165
So if I put that unary plus there it's

57
00:03:21.165 --> 00:03:25.866
gonna coerce that from
a string into a number.

58
00:03:25.866 --> 00:03:30.139
Okay and then now it says okay,
I know what an animal is and

59
00:03:30.139 --> 00:03:31.751
an animal has a name.

60
00:03:31.751 --> 00:03:33.484
And that's a string, and it has a type.

61
00:03:33.484 --> 00:03:35.692
And that's a string,
and it has an address.

62
00:03:35.692 --> 00:03:37.987
And that's an object
that's an address type.

63
00:03:37.987 --> 00:03:42.578
And if I click on that, I can go,
okay, well, address here.

64
00:03:42.578 --> 00:03:45.467
And then it has an address here, right?

65
00:03:45.467 --> 00:03:47.477
Now I'm just looking at
the type definition.

66
00:03:47.477 --> 00:03:49.468
So I can see what does
an organization look like?

67
00:03:49.468 --> 00:03:55.364
It always has a name, but
it has an email or it doesn't, right?

68
00:03:55.364 --> 00:03:58.154
So this is pretty good
documentation that I can look at.

69
00:03:58.154 --> 00:04:00.067
It's fantastic because I wrote it.

70
00:04:00.067 --> 00:04:04.931
Just kidding, well I mean I did
write it but it's not fantastic.

71
00:04:04.931 --> 00:04:07.506
And I just set up by doing Cmd
+ click on something here.

72
00:04:07.506 --> 00:04:09.882
Like I can just Cmd + click on contact,
and

73
00:04:09.882 --> 00:04:13.587
it can take me into the type
definition to see what that looks like.

74
00:04:13.587 --> 00:04:18.224
Or you can just hover on it,
and if I had written JS docs,

75
00:04:18.224 --> 00:04:22.196
you would've seen those here as well,
right?

76
00:04:22.196 --> 00:04:27.070
Whereas if I look at React.Component here,
that one doesn't have it either.

77
00:04:27.070 --> 00:04:31.780
Some of these will have bits of
documentation with it as well.

78
00:04:31.780 --> 00:04:37.115
Like if you do documents.querySelector,
something like that,

79
00:04:37.115 --> 00:04:40.935
right, these ones
are super well documented.

80
00:04:40.935 --> 00:04:43.928
It will tell you, returns the first
element that is a descendant of the node

81
00:04:43.928 --> 00:04:45.462
that matches the selectors, right?

82
00:04:45.462 --> 00:04:48.590
So it actually has inline documentation.

83
00:04:48.590 --> 00:04:51.990
But that requires that the person
is not a lazy teacher, and

84
00:04:51.990 --> 00:04:54.107
previously did that which I did not.

85
00:04:58.887 --> 00:05:03.335
&gt;&gt; Brian: Okay, so
that takes care of this.

86
00:05:03.335 --> 00:05:07.032
One of the things that any modes going
to really, really encourage us to do

87
00:05:07.032 --> 00:05:10.506
we don't have to, you can see that
these are warnings, not errors.

88
00:05:10.506 --> 00:05:14.451
Is that it wants to know is,
is this public or is this private?

89
00:05:14.451 --> 00:05:17.333
Well, everything in react component
is being called by react.

90
00:05:17.333 --> 00:05:18.868
So it's technically gonna be public,
right?

91
00:05:18.868 --> 00:05:25.222
So I'm just gonna say this is a public
state and this is a public component.

92
00:05:25.222 --> 00:05:30.047
ComponentDidMount that is, right,
cuz react is calling into these things.

93
00:05:30.047 --> 00:05:39.042
But if I said like,
&gt;&gt; Brian: private thing = blah.

94
00:05:39.042 --> 00:05:42.812
So now this is private, TypeScript will
catch if anyone else is trying to call,

95
00:05:42.812 --> 00:05:46.722
it's like no, no, no, that's private,
you don't get to touch that, right?

96
00:05:46.722 --> 00:05:50.474
Whereas if it's public then it's okay for
other things to access it,

97
00:05:50.474 --> 00:05:54.682
but now TypeScript will be the enforcer
to make sure these things are private.

98
00:05:54.682 --> 00:05:55.973
Which is pretty cool as well.

99
00:05:55.973 --> 00:05:57.315
We won't be using that today, but

100
00:05:57.315 --> 00:05:59.500
I just wanted to call that out
as something that I liked.

101
00:06:03.903 --> 00:06:10.341
&gt;&gt; Brian: Okay,
&gt;&gt; Brian: Everything else here,

102
00:06:10.341 --> 00:06:12.079
it's able to figure out pretty well.

103
00:06:12.079 --> 00:06:14.991
I mean, this, it doesn't really care for.

104
00:06:14.991 --> 00:06:18.982
If you want to, you can type this and
say this is gonna be an error.

105
00:06:18.982 --> 00:06:22.037
And you'll have to put
these in parentheses.

106
00:06:22.037 --> 00:06:24.160
But now it knows like okay,
this is an error.

107
00:06:24.160 --> 00:06:27.128
So you can give little hints here and
there.

108
00:06:27.128 --> 00:06:28.933
All of these, we're gonna say public.

109
00:06:33.208 --> 00:06:37.259
&gt;&gt; Brian: this.state.url, it's like hey,
I don't know what that is.

110
00:06:37.259 --> 00:06:39.412
So can you tell me what this.state.url is?

111
00:06:39.412 --> 00:06:41.923
And it's like,
I don't know what these are either.

112
00:06:41.923 --> 00:06:46.294
So there's two ways we can
handle this.state being unknown.

113
00:06:46.294 --> 00:06:48.459
One of them, we could go up here and

114
00:06:48.459 --> 00:06:52.663
we can give it a second parameter
after the RouteComponents here.

115
00:06:52.663 --> 00:06:55.341
So the first one is props,
the second one is state.

116
00:06:55.341 --> 00:06:59.638
Or in my opinion, better if we go set
a default value for all of these,

117
00:06:59.638 --> 00:07:03.654
TypeScript will figure everything
out just on its own, right?

118
00:07:03.654 --> 00:07:10.257
So if I say,
I'm just gonna go get a default value for

119
00:07:10.257 --> 00:07:15.369
name, that's going to be "" animal, "",

120
00:07:15.369 --> 00:07:22.581
location, "", description, "", media.

121
00:07:22.581 --> 00:07:26.234
That's gonna be an array.

122
00:07:26.234 --> 00:07:29.601
url is "" and breed is "".

123
00:07:35.072 --> 00:07:38.645
&gt;&gt; Brian: So now it knows okay,
if I say this.state.animal,

124
00:07:38.645 --> 00:07:40.397
that's gonna be a string.

125
00:07:40.397 --> 00:07:41.371
You told me that.

126
00:07:43.632 --> 00:07:45.599
&gt;&gt; Brian: This only works
with public class properties.

127
00:07:45.599 --> 00:07:48.360
If you're doing this inside of
a constructor, this doesn't work.

128
00:07:48.360 --> 00:07:51.836
You do have to actually use this
other method of saying, okay,

129
00:07:51.836 --> 00:07:54.737
this is gonna be this and
that and whatever, right?

130
00:07:54.737 --> 00:07:58.457
So the S part of this is the state
that you're gonna give it.

131
00:08:02.001 --> 00:08:04.128
&gt;&gt; Brian: But
because we have public class properties,

132
00:08:04.128 --> 00:08:05.661
it knows how to understand this.

133
00:08:05.661 --> 00:08:06.908
So we have one more problem.

134
00:08:06.908 --> 00:08:09.504
So notice that all this stuff is fine now.

135
00:08:09.504 --> 00:08:12.139
We have one more problem, probably.

136
00:08:18.029 --> 00:08:22.198
&gt;&gt; Brian: Notice that the type
here on this media is a never.

137
00:08:22.198 --> 00:08:23.758
That's not a good thing, right?

138
00:08:23.758 --> 00:08:27.459
This basically means like, all right
you told me this is an array, but

139
00:08:27.459 --> 00:08:31.597
you didn't tell me what kind of array it
is, so I'll let you have an array, but

140
00:08:31.597 --> 00:08:33.260
never touch it, [LAUGH] right?

141
00:08:33.260 --> 00:08:34.995
That's kind of what it's telling you here.

142
00:08:34.995 --> 00:08:38.585
So we have to tell it what kind
of stuff is gonna go into it.

143
00:08:38.585 --> 00:08:39.766
So I'll show you how to do that.

144
00:08:39.766 --> 00:08:45.009
You're gonna come up here to media and
you're gonna say as Photo[ ].

145
00:08:45.009 --> 00:08:50.200
And so Photo is going to come from
frontendmasters/pet right here.

146
00:08:50.200 --> 00:08:52.284
So this is gonna be a Photo.

147
00:08:55.140 --> 00:09:00.073
&gt;&gt; Brian: Now,
&gt;&gt; Brian: If I go down here and

148
00:09:00.073 --> 00:09:04.025
look at media, wherever that went, media.

149
00:09:07.598 --> 00:09:11.473
&gt;&gt; Brian: It's gonna say okay,
cool, you can use that now.

150
00:09:11.473 --> 00:09:17.791
&gt;&gt; Speaker 2: Can you use multiple
media types like video, for example?

151
00:09:17.791 --> 00:09:18.852
&gt;&gt; Brian: You definitely could, and

152
00:09:18.852 --> 00:09:21.078
then you would have what's
called a union type, right?

153
00:09:21.078 --> 00:09:25.922
So then you would have to show
TypeScript if this is of type video,

154
00:09:25.922 --> 00:09:29.019
then it has these kind of things, right?

155
00:09:29.019 --> 00:09:33.801
And you have to do some what's called type
refinement to figure out which kind your

156
00:09:33.801 --> 00:09:36.384
dealing with, but it can be mixed, right.

157
00:09:36.384 --> 00:09:38.997
I don't know if I'm gonna show
you anything like that today, but

158
00:09:38.997 --> 00:09:40.958
just look up type refinement,
and you'll see.

159
00:09:45.308 --> 00:09:46.775
&gt;&gt; Brian: Cool, that was a good question.

160
00:09:50.601 --> 00:09:54.889
&gt;&gt; Brian: Okay, down here, we're gonna
say, it's not like I don't know what these

161
00:09:54.889 --> 00:09:57.516
props are and
I'm uncomfortable about that.

162
00:09:57.516 --> 00:10:00.108
So the first thing we're
gonna tell it here is,

163
00:10:02.484 --> 00:10:04.351
&gt;&gt; Brian: These props are gonna be exactly

164
00:10:04.351 --> 00:10:06.155
the same as these ones up here.

165
00:10:06.155 --> 00:10:13.126
So you can actually just
Copy+Paste these ones.

166
00:10:13.126 --> 00:10:16.404
The routeComponents with
the string in there.

167
00:10:16.404 --> 00:10:21.071
And we're just going to pass
that into that, like that.

168
00:10:24.532 --> 00:10:25.656
&gt;&gt; Brian: And then everything is happy.

169
00:10:30.682 --> 00:10:35.423
&gt;&gt; Brian: And I think the only thing that
it's upset about right now is these two

170
00:10:35.423 --> 00:10:37.397
imports at the top, right?

171
00:10:37.397 --> 00:10:40.517
So you can see there I have red
right there, and it's like,

172
00:10:40.517 --> 00:10:43.027
hey there's problems with this file,
right?

173
00:10:43.027 --> 00:10:47.988
But for now I can't fix these until
I go and fix these other files.

174
00:10:47.988 --> 00:10:51.200
But so if I turn strict mode off of here,
then it would be fine.

