WEBVTT

1
00:00:00.200 --> 00:00:01.700
&gt;&gt; Brian Holt: So let's just talk
about TypeScript for a second.

2
00:00:01.700 --> 00:00:05.170
First of all, this is going to
be specifically how React and

3
00:00:05.170 --> 00:00:06.160
TypeScript intersect.

4
00:00:07.300 --> 00:00:10.764
So while I'm going to be
explaining TypeScript as I go,

5
00:00:10.764 --> 00:00:15.264
there is a full TypeScript course from
Mike North on FrontendMasters and

6
00:00:15.264 --> 00:00:16.903
Mike's a great teacher.

7
00:00:16.903 --> 00:00:20.906
I used to work with him at LinkedIn and
so if you need like a more in depth

8
00:00:20.906 --> 00:00:25.620
introduction and delve into that Mike's
course is a great place to get started.

9
00:00:27.030 --> 00:00:31.620
So what is TypeScript,
why do I wanna use it.

10
00:00:31.620 --> 00:00:34.500
Why is it useful with react this
answer some of those questions.

11
00:00:35.710 --> 00:00:44.430
So if I have I'm just gonna open a new
file here and closes for just a second.

12
00:00:44.430 --> 00:00:47.986
And I'm gonna put this in,
Change Language Mode, TypeScript.

13
00:00:50.144 --> 00:00:56.409
&gt;&gt; Brian Holt: So if I have a variable
here that says var x = 5, right?

14
00:00:56.409 --> 00:01:04.198
And then I say, x.toUpperCase(),
&gt;&gt; Brian Holt: Now,

15
00:01:04.198 --> 00:01:08.400
normally JavaScript's like cool,
I'll give that a shot.

16
00:01:08.400 --> 00:01:10.910
Like you have no idea if that's
gonna work or not, right?

17
00:01:10.910 --> 00:01:13.457
You and I can see right away
that this is a number and

18
00:01:13.457 --> 00:01:16.378
this definitely doesn't have
a two UpperCase, right?

19
00:01:18.099 --> 00:01:22.565
&gt;&gt; Brian Holt: But TypeScript is
gonna yell at you and say hey, idiot,

20
00:01:22.565 --> 00:01:26.120
like number doesn't have a two UpperCase.

21
00:01:26.120 --> 00:01:29.290
Now this is a very simplified case, right?

22
00:01:29.290 --> 00:01:34.800
But this is going to save us from run time
production errors because of types, right?

23
00:01:34.800 --> 00:01:38.200
Now what I could do here
is I could say that and

24
00:01:38.200 --> 00:01:44.140
all of a sudden, okay that's a string,
that's gonna work, right?

25
00:01:46.420 --> 00:01:51.460
So these are the kinds of things that
types of going to save you from.

26
00:01:51.460 --> 00:01:56.270
It's gonna save you from calling
to application a number it's

27
00:01:56.270 --> 00:02:00.180
gonna save you from calling toUpperCase,
right.

28
00:02:01.250 --> 00:02:04.990
That's an easy one to do but it's gonna
say hey, toUpperCase isn't a thing.

29
00:02:04.990 --> 00:02:08.810
Did you mean toUpperCase I did, thank you.

30
00:02:08.810 --> 00:02:15.030
And you can actually say, change
spelling it will just fix it for you.

31
00:02:15.030 --> 00:02:17.660
Like there's some pretty cool stuff like
that that TypeScript can just do for

32
00:02:17.660 --> 00:02:18.430
you automatically.

33
00:02:19.720 --> 00:02:24.115
But in my opinion, one of the better
parts about this if I just say x dot,

34
00:02:24.115 --> 00:02:27.060
right I don't even have
to look at MDN anymore.

35
00:02:27.060 --> 00:02:30.380
It just immediately appears in my editor.

36
00:02:30.380 --> 00:02:34.750
It's like hey, let's do split and

37
00:02:34.750 --> 00:02:37.680
then well,
I need to figure out what the splitter is.

38
00:02:37.680 --> 00:02:40.431
Let's do /, right, and
then I'm gonna do, okay,

39
00:02:40.431 --> 00:02:42.460
how many of them do I want to do, right?

40
00:02:42.460 --> 00:02:46.210
And it's giving me in line
documentation as I'm writing code,

41
00:02:47.650 --> 00:02:49.510
like that's magical right.

42
00:02:53.390 --> 00:03:00.920
Or let's just say like I import
pet from afrontendmaster/pet.

43
00:03:00.920 --> 00:03:05.350
This is an API that you don't know, I know
it cuz I wrote it, right, but you don't.

44
00:03:05.350 --> 00:03:08.240
But I can just say pet dot,
okay, well cool.

45
00:03:09.400 --> 00:03:15.180
So let's get animals and
what kind of params can I have?

46
00:03:15.180 --> 00:03:20.563
So I can put, well I can give it gender or
organization or size,

47
00:03:20.563 --> 00:03:27.716
but let's go with like,
&gt;&gt; Brian Holt: Let's search by type.

48
00:03:30.174 --> 00:03:33.530
&gt;&gt; Brian Holt: Okay, and
we'll put cat there, right?

49
00:03:35.010 --> 00:03:38.350
Okay, so now I'm searching by cat and
then if I hit dot that's like okay,

50
00:03:38.350 --> 00:03:40.110
well this is a promise, okay?

51
00:03:40.110 --> 00:03:44.061
That's neat and then data.

52
00:03:44.061 --> 00:03:46.710
I don't know what data is, but
we're gonna take a lot at it, right?

53
00:03:46.710 --> 00:03:51.400
And then I'll say data.,
animals, animals or pagination,

54
00:03:53.080 --> 00:03:59.740
and then animals., okay,
this looks like this is an array, right?

55
00:03:59.740 --> 00:04:05.840
So forEach and then animal.

56
00:04:08.890 --> 00:04:14.340
Animal., okay, so
this can have age and colors and

57
00:04:14.340 --> 00:04:20.040
description and this is like interactive
documentation on the fly, right?

58
00:04:20.040 --> 00:04:23.720
This is so cool that I don't even have to
look at the docs anymore, and, Joke's on

59
00:04:23.720 --> 00:04:26.860
you, I didn't write any documentation,
so there is no docs to look at, right?

60
00:04:26.860 --> 00:04:27.737
So this is all you get.

61
00:04:29.927 --> 00:04:32.620
&gt;&gt; Brian Holt: But I get all this
just at my fingertips, right?

62
00:04:32.620 --> 00:04:37.660
And if I try and say animal.,
I don't know, what's

63
00:04:37.660 --> 00:04:40.330
something that you might think,
legs, right?

64
00:04:40.330 --> 00:04:43.807
That's not really a thing,
it's gonna say, hey, that's not a thing.

65
00:04:43.807 --> 00:04:51.240
You can't do that or
this is another way this could be helpful.

66
00:04:51.240 --> 00:04:54.060
There is another API called animal.

67
00:04:54.060 --> 00:05:01.829
If I say animal and then say dot then
it's gonna be upset at me because.

68
00:05:02.930 --> 00:05:04.800
It's like, hey, this thing requires an ID,

69
00:05:04.800 --> 00:05:07.780
if you don't give it an ID
then this doesn't work, right?

70
00:05:08.960 --> 00:05:11.500
So there's just a bunch of stuff
like this that it's gonna do for

71
00:05:11.500 --> 00:05:14.460
you behind the scenes, stuff that you
would have never thought about before.

72
00:05:16.430 --> 00:05:21.480
And it just works beautifully with visual
studio code because, let me just tell you,

73
00:05:21.480 --> 00:05:25.600
I sit with the visuals to do your code
team, and the TypeScript team is across,

74
00:05:25.600 --> 00:05:26.230
the hall, right?

75
00:05:26.230 --> 00:05:29.250
So, they're just constantly yelling each
other back and forth across the hall.

76
00:05:30.770 --> 00:05:34.530
So, a lot of your favorite features in
visuals to do your code are coming from

77
00:05:34.530 --> 00:05:35.821
the TypeScript team actually.

