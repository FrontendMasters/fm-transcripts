WEBVTT

1
00:00:00.080 --> 00:00:03.092
&gt;&gt; Steve Kinney: The idea of background
agents is asynchronous remote agents and

2
00:00:03.092 --> 00:00:05.520
cursor that can operate
in a remote environment.

3
00:00:05.520 --> 00:00:08.160
So they're not running on your machine,
right?

4
00:00:08.160 --> 00:00:11.843
Which does give us a few prerequisites,
which is in order for

5
00:00:11.843 --> 00:00:15.040
them then to read and update your code.

6
00:00:15.040 --> 00:00:19.120
Your code needs to be somewhere
it can read and update it, right?

7
00:00:20.720 --> 00:00:23.200
Generally speaking, that place is GitHub.

8
00:00:23.200 --> 00:00:24.360
How do they do what they do?

9
00:00:24.360 --> 00:00:26.360
You clone a repository,
they clone the repository.

10
00:00:26.360 --> 00:00:27.730
They work on a separate branch.

11
00:00:27.730 --> 00:00:30.709
You can define stuff like the environment
and stuff along those lines,

12
00:00:30.709 --> 00:00:32.610
which you can do in all these tools.

13
00:00:32.610 --> 00:00:38.290
They work without direct supervision,
but they generate a pull request.

14
00:00:38.290 --> 00:00:43.570
You can check in on them via a web app,
which you can also do.

15
00:00:43.570 --> 00:00:48.210
All this stuff applies also
to OpenAI's codecs as well.

16
00:00:48.210 --> 00:00:53.931
And because they're using a very
traditional git workflow,

17
00:00:53.931 --> 00:00:59.000
you can very easily spin up
multiple of these, right?

18
00:00:59.000 --> 00:01:03.430
Because they're just going to clone the
repo in their own separate environment,

19
00:01:03.430 --> 00:01:05.560
do their thing and open up a pr, right?

20
00:01:05.560 --> 00:01:10.689
So you can imagine if I opened up
four different chats in cursor in my

21
00:01:10.689 --> 00:01:16.840
editor on one branch and said go for it,
they are going to crash into each other.

22
00:01:18.520 --> 00:01:22.324
There's a science to this if one is
surgical about where you point them, but

23
00:01:22.324 --> 00:01:23.800
it's not a good science.

24
00:01:23.800 --> 00:01:29.780
Some use cases like I have predominantly
done it for this code based analysis and

25
00:01:29.780 --> 00:01:34.520
documentation, particularly
full disclosure and honesty.

26
00:01:34.520 --> 00:01:40.398
There are some days where
I get into the vibe and

27
00:01:40.398 --> 00:01:47.000
then I have to go,
what happened here, right?

28
00:01:47.000 --> 00:01:49.720
As it has created a lot of abstractions.

29
00:01:50.760 --> 00:01:54.399
Even that one little demo we saw of the
agent earlier, it was subclassing errors,

30
00:01:54.399 --> 00:01:55.930
which is actually really great and

31
00:01:55.930 --> 00:01:59.093
something I didn't do all that often
until I actually saw it do it a bunch

32
00:01:59.093 --> 00:02:02.900
of times because then you can say
instanceof it's great, you should do it.

33
00:02:02.900 --> 00:02:07.563
But you can imagine on a large
enough feature, small things,

34
00:02:07.563 --> 00:02:11.601
it's like over time,
it's little like proactive,

35
00:02:11.601 --> 00:02:17.940
I'm gonna do this extra thing or this
little judgment calls tend to compound.

36
00:02:17.940 --> 00:02:23.032
And I have definitely found myself in
places where I am laser focused on

37
00:02:23.032 --> 00:02:28.209
one thing and I'm looking at that very
closely and I am not paying nearly

38
00:02:28.209 --> 00:02:33.150
good enough attention to the little
ad libs it's doing on the side.

39
00:02:33.150 --> 00:02:35.310
Like I had one situation
where I was just trying.

40
00:02:35.310 --> 00:02:41.470
There's not great testing support for
Chrome extensions with Playwright.

41
00:02:41.470 --> 00:02:46.849
And so I was very focused on getting
that working and did not realize and

42
00:02:46.849 --> 00:02:51.863
I should have, if I followed my
own advice, which I Learned about

43
00:02:51.863 --> 00:02:57.560
that advice through messing things
up royally, like repeatedly.

44
00:02:57.560 --> 00:03:00.189
So I guess it's a chicken or
the egg issue,

45
00:03:00.189 --> 00:03:04.440
realized that I had to blow everything
away and start fresh, right?

46
00:03:04.440 --> 00:03:08.851
And like sometimes that was useful too
because like I did it all by hand after

47
00:03:08.851 --> 00:03:12.701
that, but I knew the shape of what
I was doing and so I knocked it all

48
00:03:12.701 --> 00:03:16.950
out arguably in the same amount of
time it took me to vibe it, right?

49
00:03:16.950 --> 00:03:21.190
With like 10th of the line of code
that I completely understood.

50
00:03:21.190 --> 00:03:22.950
And so do I regret that?

51
00:03:22.950 --> 00:03:28.230
Cuz I've spent longer handcrafting
throwaway code before in my life too.

52
00:03:29.830 --> 00:03:33.430
So yeah, the code analysis and
documentation though even.

53
00:03:33.430 --> 00:03:36.084
And there were some patterns that I still
kept that branch around because there

54
00:03:36.084 --> 00:03:38.710
are some things that I'm like, I'm
gonna take a few of those ideas, right?

55
00:03:38.710 --> 00:03:40.923
And so like sometimes having to
explain to you, like I will say this,

56
00:03:40.923 --> 00:03:42.310
I've said it before, I'll say it again.

57
00:03:43.720 --> 00:03:47.941
Using it as a learning tool for either
a code basis that you want to figure out

58
00:03:47.941 --> 00:03:53.640
how they work or sometimes, especially if
it's not your own, solely written by you.

59
00:03:53.640 --> 00:03:58.146
Using any of these tools to
just go explain this to me is

60
00:03:58.146 --> 00:04:00.760
an incredibly powerful tool.

61
00:04:02.360 --> 00:04:06.540
Any kind of code wide chores and
maintenance of hey,

62
00:04:06.540 --> 00:04:10.150
we're going to refactor this or
honestly I.

63
00:04:11.670 --> 00:04:16.504
At temporal,
we did this partially with I think it

64
00:04:16.504 --> 00:04:21.670
was Claude code Tailwind
three to tailwind four.

65
00:04:21.670 --> 00:04:22.390
You know what I mean?

66
00:04:22.390 --> 00:04:25.562
Alex had to have hand on keyboard for

67
00:04:25.562 --> 00:04:30.390
a lot of that but
large swaths of just the tedium.

68
00:04:30.390 --> 00:04:31.270
Right?

69
00:04:31.270 --> 00:04:35.095
He was able to like find a way to
express what he wanted to do and

70
00:04:35.095 --> 00:04:37.440
have done across the code base.

71
00:04:37.440 --> 00:04:43.840
Predictable bug fixes or
design tweaks like hey, my favorite joke.

72
00:04:44.960 --> 00:04:45.960
Because it's not really a joke.

73
00:04:45.960 --> 00:04:46.640
I see it all the time.

74
00:04:46.640 --> 00:04:49.280
Every time I hear a war
story from a front end team.

75
00:04:49.280 --> 00:04:52.960
It took 25 pull requests to
change the color of a button.

76
00:04:52.960 --> 00:04:54.480
I was like micro front ends?

77
00:04:55.520 --> 00:05:00.294
And so for those things,
I guess automating all of those with

78
00:05:00.294 --> 00:05:05.067
these agents would be good and
stuff along those lines I think

79
00:05:05.067 --> 00:05:10.220
are great use cases for
this limits and considerations.

80
00:05:10.220 --> 00:05:14.940
Again they use these max mode compatible
models so they are going to cost you.

81
00:05:14.940 --> 00:05:18.620
You are not in the loop to hit
the escape key or cancel and

82
00:05:18.620 --> 00:05:20.780
give it feedback and guidance.

83
00:05:22.779 --> 00:05:27.286
You do need to turn off privacy
mode which I have the advantage of

84
00:05:27.286 --> 00:05:30.700
previously working on
an open source project.

85
00:05:30.700 --> 00:05:34.230
So there was no privacy anyway.

86
00:05:34.230 --> 00:05:38.556
So I was never concerned
about those things other than

87
00:05:38.556 --> 00:05:41.830
triggering it from either Git or Slack.

88
00:05:41.830 --> 00:05:42.950
There is no API.

89
00:05:42.950 --> 00:05:44.990
There's promises and illusions APIs.

90
00:05:44.990 --> 00:05:51.267
But as an engineer, I know never to
trust estimates from engineers or

91
00:05:51.267 --> 00:05:58.070
product managers because they're
trusting estimates from engineers.

92
00:05:58.070 --> 00:05:59.670
So that's just a delusion of that.

