WEBVTT

1
00:00:00.021 --> 00:00:03.125
&gt;&gt; Steve Kinney: Let's look at like
a Cloud MD file that is legit,

2
00:00:03.125 --> 00:00:07.920
like the one that I've just been kind
of like playing around with, right.

3
00:00:09.440 --> 00:00:14.000
Does it really like respond to my threats?

4
00:00:14.000 --> 00:00:16.076
I'm not totally sure, right?

5
00:00:16.076 --> 00:00:20.080
Am I trying to stop it from
doing enterprise fizzbuzz?

6
00:00:20.080 --> 00:00:22.458
In a lot of cases, yes.

7
00:00:22.458 --> 00:00:26.528
Right, I'm not saying all of
this works all the time, but

8
00:00:26.528 --> 00:00:30.764
you can kind of see at least like
I will learn in public here and

9
00:00:30.764 --> 00:00:36.275
show it because a lot of times I'm just
trying to spec out does this work at all.

10
00:00:36.275 --> 00:00:41.007
And I don't need a full
internationalization setup for

11
00:00:41.007 --> 00:00:44.540
finding out if this project has any legs.

12
00:00:46.620 --> 00:00:50.300
And so some of this is a work
in progress to figure out.

13
00:00:51.820 --> 00:00:53.500
And honestly some of it is working.

14
00:00:54.600 --> 00:00:55.537
Which one?
Not entirely sure.

15
00:00:55.537 --> 00:00:59.800
But these are the things
that actually do truly work.

16
00:00:59.800 --> 00:01:03.160
I have another command when we get to
commands that I'll show you in a second.

17
00:01:04.920 --> 00:01:10.200
I get as many details as I can give
it about exactly what I'm doing.

18
00:01:10.200 --> 00:01:11.320
Some of this is.

19
00:01:11.320 --> 00:01:19.087
And I'll show you I will pull in project
requirements, so on and so forth.

20
00:01:19.087 --> 00:01:24.608
But go look for
if we have a utility function before.

21
00:01:24.608 --> 00:01:28.346
[LAUGH] Must have been really angry for

22
00:01:28.346 --> 00:01:35.111
doing his technical vandalism
to make another function, right?

23
00:01:35.111 --> 00:01:37.666
But crawl through repo,
only edit files on the ticket.

24
00:01:37.666 --> 00:01:42.600
Again, trying to put a lot as possible,
right?

25
00:01:42.600 --> 00:01:46.201
If a constant is only used by one file,

26
00:01:46.201 --> 00:01:50.940
use dependency injection so
I can test it easier.

27
00:01:52.380 --> 00:01:53.900
There's some.

28
00:01:53.900 --> 00:01:57.980
That's an otherwise reasonable looking
markdown table about what the rules for

29
00:01:57.980 --> 00:02:01.740
a Chrome extension is and what scripts
can go where, so on and so forth.

30
00:02:01.740 --> 00:02:05.882
But I don't need polyfills for
everything because I'm building

31
00:02:05.882 --> 00:02:10.624
a Chrome again the more details you can
put in here, the better you are to get

32
00:02:10.624 --> 00:02:15.160
where I can use service worker stuff,
the more details you can give it.

33
00:02:15.160 --> 00:02:16.743
I've got the eslint rules
that we talked about earlier.

34
00:02:16.743 --> 00:02:21.292
This is a project that has my 600 line
Eslint config that we were talking on

35
00:02:21.292 --> 00:02:22.727
those earlier slides.

36
00:02:22.727 --> 00:02:27.220
And you begin to kind of like, I'm trying
to figure out the way to message passing.

37
00:02:27.220 --> 00:02:32.869
I have not truly figured it out myself
just yet, but I have these abstractions so

38
00:02:32.869 --> 00:02:37.340
don't use Chrome's because I
have this whole retry policy and

39
00:02:37.340 --> 00:02:41.159
you begin to kind of over time
explain to it what to do.

40
00:02:41.159 --> 00:02:46.047
I have this other thing which I
can use with local storage where

41
00:02:46.047 --> 00:02:51.029
I choose to use lit web components
versus svelte components and

42
00:02:51.029 --> 00:02:57.710
different concepts and you begin to fully
start to explain what you're doing here.

43
00:02:57.710 --> 00:03:04.660
And honestly, it seems ridiculous,
but I got a lot fewer problems.

44
00:03:06.810 --> 00:03:11.644
And here, as you build it up, the other
thing I think I said before is you

45
00:03:11.644 --> 00:03:14.801
can start to build out
these reference files.

46
00:03:14.801 --> 00:03:20.156
I said before not only from
pulled in docs from the APIs

47
00:03:20.156 --> 00:03:24.916
from that context 7
service we saw earlier, so

48
00:03:24.916 --> 00:03:28.730
I could have it reference those docs.

49
00:03:31.040 --> 00:03:38.720
I can pull in what I'm trying to build and
I use this for something I call.

50
00:03:38.720 --> 00:03:41.520
I don't know, maybe other people call it.

51
00:03:41.520 --> 00:03:44.720
Sometimes we talk a lot about
conserving the context window.

52
00:03:45.840 --> 00:03:48.800
Sometimes literally this
file's existence is.

53
00:03:48.800 --> 00:03:50.630
So I can remind you what
project we're building.

54
00:03:50.630 --> 00:03:55.944
It's like I'm putting this into context
on purpose as well as I want to

55
00:03:55.944 --> 00:04:01.550
use HAR files so I don't keep hitting
the OpenAI, like APIs all the time.

56
00:04:01.550 --> 00:04:05.933
I will pull in these markdown
files as I need them.

57
00:04:05.933 --> 00:04:09.433
And then these are research, and

58
00:04:09.433 --> 00:04:14.808
plans that I am literally
working on a lot of times.

59
00:04:14.808 --> 00:04:19.192
And like when I think they are ready,
right, I will reference them like,

60
00:04:19.192 --> 00:04:23.718
okay, this is what we're building
today and I'll kind of show you, like,

61
00:04:23.718 --> 00:04:25.223
here, let's try this.

62
00:04:25.223 --> 00:04:29.591
We'll go into Claude.

63
00:04:29.591 --> 00:04:34.420
Yes, we've been in here before.

64
00:04:34.420 --> 00:04:39.620
Let's just make this
biggerize this all the way.

65
00:04:39.620 --> 00:04:44.188
There are a few modes in claude,
like I said,

66
00:04:44.188 --> 00:04:49.239
we have the models and
we have that CloudMD file and

67
00:04:49.239 --> 00:04:52.980
we can reference any of these files.

68
00:04:52.980 --> 00:04:56.280
But we have a few different
modes that we can go into.

69
00:04:56.280 --> 00:05:03.078
If you hit Shift tab,
you can switch from the normal mode where

70
00:05:03.078 --> 00:05:09.560
I approve everything to auto
accept edits to plan mode.

71
00:05:09.560 --> 00:05:13.720
Plan mode, my friends, is the moneymaker.

72
00:05:13.720 --> 00:05:17.349
Plan mode is like,
let's go through everything and

73
00:05:17.349 --> 00:05:21.550
you come up with a plan and
we will workshop it together.

74
00:05:21.550 --> 00:05:25.441
Plan mode by itself,
I will almost always use in CLAUDE code.

75
00:05:25.441 --> 00:05:28.752
And this is arguably why I use CLAUDE
code more than Cursor right now.

76
00:05:28.752 --> 00:05:30.270
Wait until cursor drops.

77
00:05:30.270 --> 00:05:31.149
The same feature in a week.

78
00:05:32.910 --> 00:05:37.476
But I use this a lot in conjunction
with any of these other files I think

79
00:05:37.476 --> 00:05:38.910
I was talking about.

80
00:05:38.910 --> 00:05:43.094
I haven't decided that
I'm going to do TRPC or

81
00:05:43.094 --> 00:05:47.720
JSON RPC for messaging or
what the gap analysis is.

82
00:05:47.720 --> 00:05:49.560
But I will be working on these.

83
00:05:49.560 --> 00:05:51.480
So a number of different tools
I'll talk about at the end.

84
00:05:58.040 --> 00:06:05.669
Let's say we wanted to do TRPC messaging.

85
00:06:05.669 --> 00:06:10.509
This is going back and forth and
what I have and what I want to do and so

86
00:06:10.509 --> 00:06:14.830
what I will do in a lot of these
cases I will have these plans or

87
00:06:14.830 --> 00:06:20.710
product requirements like this if I wanted
to build a color contrast inspector or

88
00:06:20.710 --> 00:06:25.840
whatever where I've got these
requirements for what I want to build.

89
00:06:25.840 --> 00:06:30.766
And in a lot of cases I will also
have one do I have it here along

90
00:06:30.766 --> 00:06:35.022
with what is the technology
stack that I want to do.

91
00:06:35.022 --> 00:06:37.377
And I will write out a lot of these plans.

92
00:06:37.377 --> 00:06:40.614
Yeah, I'm spending a lot
of time in markdown, right?

93
00:06:40.614 --> 00:06:44.443
Because arguably coming up with
the plan of how it should work again,

94
00:06:44.443 --> 00:06:48.220
if we want to do TRPC for
communication, whatever, what have you.

95
00:06:48.220 --> 00:06:53.175
Working through all this stuff and
getting to a plan where I will edit it,

96
00:06:53.175 --> 00:06:57.660
I will refine it until I get a place
where I like this is a good plan.

97
00:06:57.660 --> 00:07:06.186
And then what I will do is I
will go into plan mode and

98
00:07:06.186 --> 00:07:11.871
I will say let's find that one and

99
00:07:11.871 --> 00:07:18.790
product summary and come up with a plan.

100
00:07:18.790 --> 00:07:22.991
Again, this plan has got like several

101
00:07:22.991 --> 00:07:27.595
hundred lines of markdown on it, right?

102
00:07:27.595 --> 00:07:34.896
Come up with a plan to refactor
messaging system to use trpc.

103
00:07:34.896 --> 00:07:40.005
Okay, so I'm actually going to get
to show you a bunch of things all

104
00:07:40.005 --> 00:07:45.130
at the same time because I don't
know what model I'm on right now.

105
00:07:45.130 --> 00:07:48.574
Also copy and
pasting out of this box is a pain.

106
00:07:48.574 --> 00:07:53.210
So I don't want to do that because
it's not like a real UI box.

107
00:07:53.210 --> 00:07:58.675
What I'm going to do is I'm going to hit
it, but then I'm going to frolicking.

108
00:07:58.675 --> 00:08:00.753
That was good.

109
00:08:00.753 --> 00:08:03.933
I'm gonna hit Escape which
just stops what it's doing.

110
00:08:03.933 --> 00:08:07.940
And I can actually interject again where
I'm just going to say model is opus.

111
00:08:07.940 --> 00:08:14.186
In this case, I can hit up and
go back to where it was.

112
00:08:14.186 --> 00:08:18.600
What's gonna happen is it's going to
now read through that entire plan.

113
00:08:21.640 --> 00:08:25.326
It's going to then find the files that
were referenced in there it is reading

114
00:08:25.326 --> 00:08:28.453
those files and again I'm doing
like this part I will do in opus.

115
00:08:28.453 --> 00:08:31.070
All right, so check it out.

116
00:08:31.070 --> 00:08:36.406
So I had to read the entire thing and
before it did anything,

117
00:08:36.406 --> 00:08:40.049
I should definitely start a new branch.

118
00:08:40.049 --> 00:08:43.010
I can go do that in another
terminal window in a second.

119
00:08:43.010 --> 00:08:44.961
But you can go ahead and

120
00:08:44.961 --> 00:08:50.420
read through its entire plan on
what it plans on doing, right?

121
00:08:50.420 --> 00:08:52.660
It's gonna install some dependencies.

122
00:08:52.660 --> 00:08:55.520
It is gonna say that Zod
is already available.

123
00:08:55.520 --> 00:08:57.320
It's gonna use Zod V4.

124
00:08:57.320 --> 00:09:00.120
Great, it's gonna do this in four.

125
00:09:00.120 --> 00:09:05.160
All these LLMs are obsessed with
giving you timelines in weeks.

126
00:09:05.160 --> 00:09:05.710
&gt;&gt; Speaker 2: So weird.

127
00:09:05.710 --> 00:09:12.280
&gt;&gt; Steve Kinney: It's like it divides it
across four sprints depending on the day.

128
00:09:12.280 --> 00:09:15.960
Sometime I'll be like,
I will edit it to like phases.

129
00:09:15.960 --> 00:09:18.209
Sure.
The weak thing I love,

130
00:09:18.209 --> 00:09:20.450
I mean maybe it's right.

131
00:09:20.450 --> 00:09:22.330
Maybe I have bad expectations, honestly.

132
00:09:24.170 --> 00:09:26.446
And so it's gonna tell you the entire
plan and what it's going to do.

133
00:09:26.446 --> 00:09:29.426
And again, I'm a little hand
waving because I'm talking.

134
00:09:29.426 --> 00:09:31.271
But read it.

135
00:09:31.271 --> 00:09:34.830
And you have two choices at this point,
all right.

136
00:09:34.830 --> 00:09:38.311
You read through all of this,
this is why I love this tool.

137
00:09:38.311 --> 00:09:40.310
It comes up with a solid plan.

138
00:09:40.310 --> 00:09:43.430
The benefits, the risk mitigation.

139
00:09:43.430 --> 00:09:48.200
It's just like, yo,
you're gonna have a bundle size increase.

140
00:09:48.200 --> 00:09:51.294
I as a team of one who
knows TRPC pretty well,

141
00:09:51.294 --> 00:09:53.980
that's not gonna keep me up at night.

142
00:09:53.980 --> 00:09:59.260
But like, okay, it's gonna have all yada
yada yada, no regression performance.

143
00:09:59.260 --> 00:09:59.900
We'll see.

144
00:10:01.100 --> 00:10:03.580
And then you have this choice or
really three choices.

145
00:10:03.580 --> 00:10:05.420
No, you can be.

146
00:10:05.420 --> 00:10:06.740
It's not like no, start over.

147
00:10:06.740 --> 00:10:08.193
No, I'm gonna give you feedback.

148
00:10:08.193 --> 00:10:10.393
Or like no,
did you think about this or no,

149
00:10:10.393 --> 00:10:12.730
please don't pull in that library, right?

150
00:10:12.730 --> 00:10:14.629
But part of the reason this plan was so

151
00:10:14.629 --> 00:10:17.230
robust is not because
Claude is a magical beast.

152
00:10:17.230 --> 00:10:22.003
It's because I gave it like a 200 line
markdown file that I worked on while I was

153
00:10:22.003 --> 00:10:24.270
having it fix lint issues.

154
00:10:24.270 --> 00:10:28.078
And that's the nice part is I
can think big brain thoughts

155
00:10:28.078 --> 00:10:30.230
while I'm not finding out why.

156
00:10:30.230 --> 00:10:36.612
I still don't understand how
Overflow X works in css.

157
00:10:36.612 --> 00:10:39.619
Every time I think I do, I don't, right?

158
00:10:39.619 --> 00:10:43.140
And so you can either say yes or
you say keep planning.

159
00:10:43.140 --> 00:10:48.907
And this is the trick that I do like on
a big plan like this when I've written

160
00:10:48.907 --> 00:10:54.954
the 200 line markdown file and I know
that I have draconian ESLINT rules and

161
00:10:54.954 --> 00:10:59.630
pre commit hooks as we talked about and
all of these things.

162
00:10:59.630 --> 00:11:02.870
And there's a plan and I have git.

163
00:11:02.870 --> 00:11:05.150
I can hit yes and auto accept the edits.

164
00:11:05.150 --> 00:11:07.435
Because again, check it in.

165
00:11:07.435 --> 00:11:08.598
Don't be like me, check it into git.

166
00:11:08.598 --> 00:11:13.113
You hit Yes, and here's the move that I
will pull because I used OPUS to come up

167
00:11:13.113 --> 00:11:16.468
with that plan and
I wish there was a better way to do this.

168
00:11:16.468 --> 00:11:20.561
I'm gonna hit Enter, I'm gonna hit Escape.

169
00:11:20.561 --> 00:11:25.048
I'm gonna switch the model back cause I
ain't paying for that back down to Sonic.

170
00:11:25.048 --> 00:11:31.274
Cuz I feel pretty good about the plan.

171
00:11:31.274 --> 00:11:36.382
Now, the other thing you can do is
if I used ultrathink on Opus, like,

172
00:11:36.382 --> 00:11:42.707
one would argue the 32,000 tokens,
31,999 tokens of extra reasoning for

173
00:11:42.707 --> 00:11:47.580
the plan with OPUS was probably
going to be worth the cost, right?

174
00:11:49.020 --> 00:11:51.020
So, like, you might consider doing that.

175
00:11:51.020 --> 00:11:55.340
I'll talk about, like, ways to,
like, automate some of that.

176
00:11:55.340 --> 00:11:57.317
At this point,
I set the model back to Sonnet and

177
00:11:57.317 --> 00:11:58.860
I'll usually just write continue.

178
00:12:00.460 --> 00:12:03.190
And then what you're going to see
is it's going to make a to do list.

179
00:12:03.190 --> 00:12:05.910
Ideally, we lost frolicking.

180
00:12:09.910 --> 00:12:13.273
So, yeah,
to do list where you can go ahead and

181
00:12:13.273 --> 00:12:16.550
you can see the steps it's going to take.

182
00:12:16.550 --> 00:12:19.244
Now look at this.

183
00:12:19.244 --> 00:12:21.090
Not, look how cool it is.

184
00:12:21.090 --> 00:12:22.436
Seriously, look at it.

185
00:12:22.436 --> 00:12:27.375
Because occasionally you will see it
about to do something where you're like,

186
00:12:27.375 --> 00:12:28.562
yo, no, no, no.

187
00:12:28.562 --> 00:12:33.176
So at any point you can either say,
you can hit Escape.

188
00:12:33.176 --> 00:12:36.322
Really, at these checkpoints,
you can hit Escape anytime you want and

189
00:12:36.322 --> 00:12:38.220
you can interrupt it and it will continue.

190
00:12:38.220 --> 00:12:40.560
You won't lose everything
that's happening.

191
00:12:40.560 --> 00:12:42.080
It will continue.

192
00:12:42.080 --> 00:12:45.040
It's asking for permission to
run a bash command for bun add.

193
00:12:45.040 --> 00:12:48.440
Again, you can choose which ones get
auto allowed, which ones get denied.

194
00:12:48.440 --> 00:12:52.310
I am tired of installing dependencies on
my behalf, so it has to check in with me.

195
00:12:52.310 --> 00:12:55.368
So you can go in here and
you can hit escape at any point and

196
00:12:55.368 --> 00:12:57.335
it'll work through the to do list.

197
00:12:57.335 --> 00:12:59.766
But like, look at what it's
going to do because again,

198
00:12:59.766 --> 00:13:03.570
you don't necessarily need to waste tokens
and get reset, so on and so forth, right?

199
00:13:03.570 --> 00:13:08.740
So like you, in my experience at
least it benefits you to be like,

200
00:13:08.740 --> 00:13:10.890
involved in the process.

201
00:13:10.890 --> 00:13:15.450
But okay, yeah, this seems legit,
manifesting, simmering.

202
00:13:15.450 --> 00:13:19.290
And also there's some beautiful
ones in there occasionally.

203
00:13:21.010 --> 00:13:22.492
And it will start going
through this process.

204
00:13:22.492 --> 00:13:25.491
And like I said, the nice part about
when it breaks into phases, no,

205
00:13:25.491 --> 00:13:28.336
they don't take eight to ten weeks or
two, three weeks each, but

206
00:13:28.336 --> 00:13:30.690
it will check in with you
in between each one, right?

207
00:13:30.690 --> 00:13:34.893
Which is either A, a great time to be
like, yo, you didn't do the thing, or

208
00:13:34.893 --> 00:13:37.570
B, make a git commit
like I've been saying.

209
00:13:37.570 --> 00:13:40.850
And then you can kind of like stop in and
check on these plans.

210
00:13:40.850 --> 00:13:43.330
So there's a few other things.

211
00:13:43.330 --> 00:13:49.808
Let's just check if the slides
make use of any of them.

212
00:13:49.808 --> 00:13:54.339
A few more rules I just
want to cover real quick is

213
00:13:54.339 --> 00:13:59.438
understand that you are talking
to an LLM that is going

214
00:13:59.438 --> 00:14:04.422
to read the file once things
that are not going to work

215
00:14:04.422 --> 00:14:09.670
Thinking that this is a thing,
it doesn't know time.

216
00:14:09.670 --> 00:14:11.270
Try to get it to tell you what date it is.

217
00:14:13.050 --> 00:14:14.672
Try to get it to generate a uuid.

218
00:14:14.672 --> 00:14:17.079
It can't do it, right?

219
00:14:17.079 --> 00:14:20.687
So if you say, reread this every 30
minutes, it doesn't know what 30 minutes

220
00:14:20.687 --> 00:14:23.481
are and it doesn't know what time
it was or anything like that.

221
00:14:23.481 --> 00:14:26.890
We'll talk about commands and
stuff that you can do.

222
00:14:26.890 --> 00:14:29.290
But you need to realize
that it is not magic.

223
00:14:29.290 --> 00:14:30.970
It is simply a statistical model.

224
00:14:30.970 --> 00:14:34.600
And the better your plan is,
and the more you feed it in,

225
00:14:34.600 --> 00:14:37.236
the better your results are going to be.

226
00:14:37.236 --> 00:14:41.944
You can have it a lot of times if it
has a long to do list, I'll be like,

227
00:14:41.944 --> 00:14:47.061
actually write that to do list to tasks
markdown as a markdown checklist and

228
00:14:47.061 --> 00:14:49.442
check each one off as you go along.

229
00:14:49.442 --> 00:14:52.655
This way,
if the contact window gets compacted,

230
00:14:52.655 --> 00:14:55.032
the plan is written down somewhere.

231
00:14:55.032 --> 00:14:56.386
I know where it was in the plan.

232
00:14:56.386 --> 00:14:58.160
I can say, take the last one and do it.

233
00:14:58.160 --> 00:14:59.368
I think I told you before.

234
00:14:59.368 --> 00:15:03.288
Another thing we tried is having
a CSV file with what is approved and

235
00:15:03.288 --> 00:15:04.480
not approved to do.

236
00:15:05.760 --> 00:15:09.102
And say, read this file and
figure out what the next task is and

237
00:15:09.102 --> 00:15:10.960
check in with me.

238
00:15:10.960 --> 00:15:14.075
The more of that that you give it,
the more structure,

239
00:15:14.075 --> 00:15:15.985
the better your results will be.

240
00:15:15.985 --> 00:15:19.276
You can have multiple Claude MD files.

241
00:15:19.276 --> 00:15:23.100
So you know how we said cursor rules,
you could target given files.

242
00:15:23.100 --> 00:15:28.482
You can't necessarily do it with cloud
MD files, but if you put one in source

243
00:15:28.482 --> 00:15:34.300
design systemcomponents, if it enters
that directory, it will read that file.

244
00:15:34.300 --> 00:15:37.073
You can do it upper directory
of you have a monorepo.

245
00:15:37.073 --> 00:15:41.500
Here's the monorepo rules and in the back
end we want to have these rules.

246
00:15:41.500 --> 00:15:45.758
Some amount of your architecture and
the way you've structured your code also

247
00:15:45.758 --> 00:15:48.160
makes some of this either easier or
harder.

