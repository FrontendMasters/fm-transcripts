WEBVTT

1
00:00:00.753 --> 00:00:06.401
&gt;&gt; Steve Kinney: The other popular
thing that comes up a lot is this idea

2
00:00:06.401 --> 00:00:12.434
of what's called MCP Server or
Model Context Protocol.

3
00:00:12.434 --> 00:00:13.420
To be clear,

4
00:00:13.420 --> 00:00:19.450
one Model Context Protocol servers are not
unique to just the AI coding agents.

5
00:00:19.450 --> 00:00:24.071
You can use them in the cloud desktop app,

6
00:00:24.071 --> 00:00:30.289
definitely the OpenAI SDK API
as well as the Gemini one.

7
00:00:30.289 --> 00:00:35.530
It is a standard for
Manthropic that has taken some amount

8
00:00:35.530 --> 00:00:40.564
of foothold across all of
the other providers as well.

9
00:00:40.564 --> 00:00:44.937
And the best way to think about this, and
we'll see in a slide in a second, but

10
00:00:44.937 --> 00:00:49.245
is think about as ways to extend the
functionality of a given LLM that you're

11
00:00:49.245 --> 00:00:50.140
working with.

12
00:00:50.140 --> 00:00:54.800
Here's a collection of me taking various
runs at metaphors all on one slide.

13
00:00:54.800 --> 00:00:57.717
Choose the metaphor that
makes you the happiest,

14
00:00:57.717 --> 00:01:00.019
you can consider it like APIs for LLMs.

15
00:01:00.019 --> 00:01:03.380
The same way you would
hit the Twilio API or

16
00:01:03.380 --> 00:01:08.002
the stripe API,
you can also hit MCP server APIs as well.

17
00:01:08.002 --> 00:01:11.131
In fact, a lot of MCP servers
are wrappers over APIs.

18
00:01:11.131 --> 00:01:15.918
They're basically saying, hey,
hey, Claude or ChatGPT or

19
00:01:15.918 --> 00:01:19.966
Gemini, tell me that you
want to hit the GitHub API,

20
00:01:19.966 --> 00:01:23.756
I'll do it and
give you the result effectively.

21
00:01:23.756 --> 00:01:25.629
That's a better metaphor than I
wrote on any of these slides.

22
00:01:25.629 --> 00:01:30.528
Basically, it is the core way that
any of these coding agent framework

23
00:01:30.528 --> 00:01:33.518
thingies can connect to other services and

24
00:01:33.518 --> 00:01:37.601
do additional things outside
of what they can do, right.

25
00:01:37.601 --> 00:01:39.778
And they are relatively easy to do.

26
00:01:39.778 --> 00:01:44.302
Again, we are not doing a full
talk on everything MCP today,

27
00:01:44.302 --> 00:01:47.683
we're doing just enough so
we can go use one.

28
00:01:47.683 --> 00:01:53.935
And so, there's some kind of host in this
case that is Cursor or Claude code for us.

29
00:01:53.935 --> 00:01:57.107
What are some examples?

30
00:01:57.107 --> 00:01:58.694
Okay, I don't have JIRA anymore.

31
00:01:58.694 --> 00:02:01.516
I would have totally used one that
can pull in stories from Jira and

32
00:02:01.516 --> 00:02:04.872
just like pull from Jira and do stuff
with Jira and manage all my Jira tickets.

33
00:02:04.872 --> 00:02:07.086
Because I'm writing all these
documents now about features.

34
00:02:07.086 --> 00:02:09.174
I could have written them in JIRA and
pulled them in.

35
00:02:09.174 --> 00:02:12.405
I understand Die a hero will live
long enough to become the villain.

36
00:02:12.405 --> 00:02:17.366
But you can have it like, reach out
to Jira and pull in the next story

37
00:02:17.366 --> 00:02:21.942
with all of its acceptance criteria and
stuff along those lines.

38
00:02:21.942 --> 00:02:27.189
Or GitHub to pull in issues which
Cursor has built in, as we saw before.

39
00:02:27.189 --> 00:02:33.327
I could just connect it then Claude code
if you have that GitHub command line tool.

40
00:02:33.327 --> 00:02:36.129
The GH tool can also do
most of the GitHub stuff.

41
00:02:36.129 --> 00:02:40.721
I don't tend to install that GitHub one
too often because each one has its own

42
00:02:40.721 --> 00:02:42.317
built-in way to do that.

43
00:02:42.317 --> 00:02:46.938
The other ones that a lot of
people use are one that's

44
00:02:46.938 --> 00:02:50.730
just like wraps, like a Postgres driver.

45
00:02:50.730 --> 00:02:55.951
Let this one sink in for
a second, you can trust your

46
00:02:55.951 --> 00:03:01.179
LLM agent to execute
Postgres commands directly.

47
00:03:01.179 --> 00:03:03.780
Remember that screenshot I said before?

48
00:03:03.780 --> 00:03:06.376
Whatever dropped our entire database?

49
00:03:06.376 --> 00:03:08.599
You can do that too.

50
00:03:08.599 --> 00:03:12.531
The Supabase one is actually super
interesting because you can like.

51
00:03:12.531 --> 00:03:16.087
And what you should be doing
the PostgreSQL one too is you need

52
00:03:16.087 --> 00:03:17.980
to pull in the schemas, right?

53
00:03:17.980 --> 00:03:21.285
Like yeah, you could have gotten
the schema yourself, put in a markdown or

54
00:03:21.285 --> 00:03:21.816
JSON file.

55
00:03:21.816 --> 00:03:28.890
Getting the ability to get the schemas of
your data structures itself can be useful.

56
00:03:28.890 --> 00:03:34.476
Another one that is useful is
the ability to like drive playwright or

57
00:03:34.476 --> 00:03:38.791
puppeteer or
firecrawl which is like a web scraper.

58
00:03:38.791 --> 00:03:45.256
So it can then spin up a puppeteer
browser and do stuff like scrape the web.

59
00:03:45.256 --> 00:03:50.398
The more limitations that we need to
deal with is one, what is the thing

60
00:03:50.398 --> 00:03:55.378
that I care the most about which is
keeping the context window tidy.

61
00:03:55.378 --> 00:04:01.099
The way that these tools work
is you register MCP server and

62
00:04:01.099 --> 00:04:04.384
it goes I can do all these things.

63
00:04:04.384 --> 00:04:09.388
I can open up GitHub issues and I can
close pull requests, and I can drop your

64
00:04:09.388 --> 00:04:14.959
database from the Postgres1, and I can get
your Supa base schema, and I can cool.

65
00:04:14.959 --> 00:04:18.792
You need to tell the LLM all
the tools it has available.

66
00:04:18.792 --> 00:04:24.266
Guess what that eats into again
in that context window is tokens.

67
00:04:24.266 --> 00:04:29.249
So, if you are using max mode or
one of these fancier models,

68
00:04:29.249 --> 00:04:31.709
or in the case of Claude code.

69
00:04:31.709 --> 00:04:35.090
If you are one of the fancy plans, you can
switch between the Opus and Sonnet, but

70
00:04:35.090 --> 00:04:36.505
your rate limits are different.

71
00:04:36.505 --> 00:04:38.781
They are cutting into your rate limits.

72
00:04:38.781 --> 00:04:44.263
So going like crazy and
installing all of them just

73
00:04:44.263 --> 00:04:51.582
because is going to hurt cost you
be a waste any one of those choose.

74
00:04:51.582 --> 00:04:55.203
So yeah, some of the ones that exist,
as I said before,

75
00:04:55.203 --> 00:04:57.298
the GitHub one is a thing again.

76
00:04:57.298 --> 00:04:58.267
It can do everything.

77
00:04:58.267 --> 00:05:02.901
You can go in there, grab a personal
access token for whatever you wanted.

78
00:05:02.901 --> 00:05:04.261
Like hey, I want you like.

79
00:05:04.261 --> 00:05:06.407
And I think there's some really
powerful stuff with this one.

80
00:05:06.407 --> 00:05:10.505
Like as somebody used to run
an open-source project and

81
00:05:10.505 --> 00:05:15.211
dreaded clicking on the issues to see and
having to triage them,

82
00:05:15.211 --> 00:05:20.114
like being able to pull them into
like JIRA or something like that.

83
00:05:20.114 --> 00:05:23.615
Or like do some amount of triage,
like automatically tag them at least and

84
00:05:23.615 --> 00:05:24.801
put them in categories so

85
00:05:24.801 --> 00:05:28.538
I can like process a given one than just
going through in chronological order.

86
00:05:28.538 --> 00:05:31.633
Totally, I mean you can have it
change like GitHub workflows.

87
00:05:31.633 --> 00:05:35.384
Anything you can do with the GitHub API,
it's a wrapper over the API.

88
00:05:35.384 --> 00:05:37.870
So if you can do with the GitHub API%,

89
00:05:37.870 --> 00:05:42.392
you can do it with the GitHub MCP
server with the token as you set it up.

90
00:05:42.392 --> 00:05:45.856
The one that I have not used simply
because right now I don't have a designer.

91
00:05:45.856 --> 00:05:47.957
I still worked at my last job.

92
00:05:47.957 --> 00:05:50.101
I can't decide where to hook this up, and

93
00:05:50.101 --> 00:05:53.302
I definitely would have used it
hooks into Figma's dev mode.

94
00:05:53.302 --> 00:05:55.364
Which kind of gives you the shape and

95
00:05:55.364 --> 00:05:59.358
structure of the components in
a given design and lets it query that.

96
00:05:59.358 --> 00:06:03.102
So you can literally build
probably not to my standards,

97
00:06:03.102 --> 00:06:08.094
but things that look like the Figma
design, and they're like presently for

98
00:06:08.094 --> 00:06:11.214
the first time in four
years I don't use Figma.

99
00:06:11.214 --> 00:06:13.081
But I will and I will use it again and

100
00:06:13.081 --> 00:06:16.380
you can pull that stuff in which
I think is super cool notion.

101
00:06:16.380 --> 00:06:21.808
So, I keep a lot of my documents
in markdown files right now.

102
00:06:21.808 --> 00:06:23.140
But historically Ryl and

103
00:06:23.140 --> 00:06:26.384
I have used Notion as where we
kept all of our documentation.

104
00:06:26.384 --> 00:06:27.325
We probably will at some point.

105
00:06:27.325 --> 00:06:31.045
So this allows it to kind of like hook
into a Notion database query Notion,

106
00:06:31.045 --> 00:06:31.887
get documents.

107
00:06:31.887 --> 00:06:35.088
So you can kind of start to keep
either your product requirements or

108
00:06:35.088 --> 00:06:38.748
your implementation plans outside of
Markdown files and somewhere else and

109
00:06:38.748 --> 00:06:41.796
let the model go in and
pull all the stuff out of Notion, right.

110
00:06:41.796 --> 00:06:45.499
Again, it's ways to connect
outside services from your LLM and

111
00:06:45.499 --> 00:06:47.978
like not all of these
will be useful to you.

112
00:06:47.978 --> 00:06:52.289
And that Cursor dot directory, guess what,

113
00:06:52.289 --> 00:06:55.696
has like hundreds of them, right?

114
00:06:55.696 --> 00:06:58.177
There's also like an awesome MCP list and
so

115
00:06:58.177 --> 00:07:01.340
you can go find the ones I
would say like again in silver.

116
00:07:01.340 --> 00:07:07.498
They have a token cost just installing
anyone you want, just cause dumb right?

117
00:07:07.498 --> 00:07:14.082
Hey, there's a tool that would actually
change my workflow install it.

118
00:07:14.082 --> 00:07:17.721
Jira has one,
I will use it if I still use Jira.

119
00:07:17.721 --> 00:07:25.075
So no judgment, so
this is Cursor Directory MCP.

120
00:07:25.075 --> 00:07:28.447
Cursors got that at Web Search but
if you wanted to use Brave, great.

121
00:07:28.447 --> 00:07:34.440
Cursor's got a slack integration but there
is stuff like the Stripe API or anything

122
00:07:34.440 --> 00:07:40.102
along those lines that you wanted to hook
into that you find it use definitely.

123
00:07:40.102 --> 00:07:41.968
It's worth a look and experimentation.

124
00:07:41.968 --> 00:07:45.957
We'll show how to install
one in a second one,

125
00:07:45.957 --> 00:07:50.354
I use a lot even though I
probably don't need to be,

126
00:07:50.354 --> 00:07:53.957
is context 7 which all this is a website.

127
00:07:53.957 --> 00:07:58.154
Where somebody has ingested the docs for
tons of libraries and

128
00:07:58.154 --> 00:08:02.925
frameworks and cut them up into
smaller pieces that are LLM friendly.

129
00:08:02.925 --> 00:08:07.668
So if you wanted just the Svelte docs and
using Svelte runes,

130
00:08:07.668 --> 00:08:13.155
you could say, hey Claude,
whatever cursor, go get me those docs and

131
00:08:13.155 --> 00:08:17.619
write them to this markdown file so
I can reference them.

132
00:08:17.619 --> 00:08:21.291
Or like ephemerally go get them and
put them into the context, right?

133
00:08:21.291 --> 00:08:24.795
And so I've been using like, could I
also that I have a website where I could

134
00:08:24.795 --> 00:08:26.588
totally go copy and paste that stuff.

135
00:08:26.588 --> 00:08:30.450
Yes, so you got to decide.

136
00:08:30.450 --> 00:08:33.366
But it's also nice to get up to
date prompts and just like again,

137
00:08:33.366 --> 00:08:36.447
it's a place where we talked about
this background agents before.

138
00:08:36.447 --> 00:08:42.114
Could you have a scheduled task that said,
like, hey, go look at my code, figure out

139
00:08:42.114 --> 00:08:47.493
what the relevant documentation that we
would want and go add markdown files to.

140
00:08:47.493 --> 00:08:50.862
Like I keep a folder called reference,
you can keep them with another one called

141
00:08:50.862 --> 00:08:53.740
docs, I don't care what you call it and
go pull those into the repo.

