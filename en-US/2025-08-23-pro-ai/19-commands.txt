[00:00:00]
>> Steve Kinney: Another powerful tool. Like, once you have that all set up and we've got the plan modes and we talked about that, there is one other mode that is the secret mode, which I shouldn't tell you about, but you're going to find out anyway and you're adults. So if you start Claude and let's say dash, dash, continue.

[00:00:25]
So it picks up the last session because otherwise that will be lost to time. Or I can hit resume and you do this one. What do you think that one does? Now you get this and you can Shift+Tab to turn that on and off. It just gives you kind of a fourth mode in there.

[00:00:53]
That one, I played with that one before. Hackathon mode. That's why I was in a bad mood on Friday. Real bad mood on Friday. That's the one I get reset hard and rewrote all by hand on Monday. I flew a little too close to the sun. So don't do that one.

[00:01:14]
But the nice part is when I did that, dash continue, I jumped right back in. And it has the to do list. It stores that to do list in those JSON L files in your home directory. So you're not necessarily gonna lose anything. It knows where it was.

[00:01:28]
Previously, it didn't have this mode up until a month ago, two, three weeks ago, I don't really remember when. And I used to do this as markdown files and markdown checklists, which were nice because sometimes I would do a few of them and check them off. And that's kind of cool.

[00:01:42]
But you can just at this point use it like this as well. So you can say continue and it will continue down that checklist, finagling so on and so forth. While that does its thing, let's talk about commands. We saw that it was an add dir model. You can make your own.

[00:02:06]
You remember when we did notepads with cursor? Same basic idea. So you can take any common. If you find yourself typing the same thing over and over again, make it a command file. I'll show you how to do that in a second. I'll show you the ones I have in the repo that I'm currently working on.

[00:02:24]
But any of these, it's just a shortcut for what you want to do. And so the actual things you might want to trigger, you do in commands, the actual roles you put in the commands files. Let's take a look at what that looks like. Commands, we saw notepads.

[00:02:45]
We've seen enough markdown files in our life to Kind of get the gist of what's going on here. Commands are just things very much like the notepads in cursor, things that you might find yourself repeating often. And so they're accessible. Just doing like lint in this case. And effectively what that will do is it will put this body of text into my prompt.

[00:03:12]
That's it. In this case, run the following commands. Make sure that everything passes successfully, yada yada yada. Ignore the warnings, because I have some of those file length ones I showed you earlier. Set to warn, not error, but you must address all the errors. And where do you think this extra line came from?

[00:03:33]
Shockingly pretty good. I'll show you another way that you can handle that in a second. Another one that I get a lot of use out of is. And again, whatever you type theoretically comes after the end of the prompt. So I am still probably putting a rando paragraph of my thoughts and feelings.

[00:04:04]
I usually I use TextMate, which is just an old text edit from whatever, which I constantly have 1000 windows open where I've typed all sorts of random scratch pad stuff. So a lot of times I have. While I was fixing the lint rules, I was like brainstorming some thoughts and feelings and stuff like that.

[00:04:22]
And sometimes I was doing it in Gemini or with chatgpt and bouncing stuff back and forth. So I got thoughts. And so a few things in this one is anything with a exclamation point in front of it. It will run as a BASH command, so you can interpolate BASH commands in there.

[00:04:43]
I'll show you another one in a second, which is cool because it has a web search and you put the MCPC things with documents and you can reference a bunch of files that you already have if you want to synthesize stuff. And so I'll kinda use that to kind of build some of those files you saw on there.

[00:05:03]
And then a lot of times I will be sitting there and editing them. The other one that I think that I'll use a lot, which is I have this shell script is all it's really doing is running git status and finding my uncommitted files. It's like review all the following rules and make sure all the important function classes and methods have JSDOC documentation explaining what they do and their purpose so we can understand them later.

[00:05:28]
And then it will interpolate all of these files. I think I have the script might make it a bolded markdown list because it doesn't need that. But I am who I am. If you could put whatever you type will be at the end of the file unless you put dollar arguments in it and then you can kind of interpolate it in there somewhere else.

[00:05:46]
And again if you ention files they'll get pulled into the context. So I believe goal is literally review productsummary markdown and I will pull that entire file into context immediately. So I have a few of my own rules that are ridiculous but I don't wanna type that. I don't wanna remember that.

[00:06:07]
I just know that I would do goal. It will go pull in that file into context. We talked a lot about keeping stuff we don't want out of context. This allows me to pull files I do want into context and just run common commands that I might otherwise use.

[00:06:22]
This is like a copy of my claude MD file. It was an experiment but I will kind of have a bunch of these that I will kind of just trigger at any given point.

