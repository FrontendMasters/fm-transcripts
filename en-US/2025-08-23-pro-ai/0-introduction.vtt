WEBVTT

1
00:00:00.240 --> 00:00:05.681
&gt;&gt; Speaker 1: We're going to talk a little
bit today about building your own or

2
00:00:05.681 --> 00:00:11.022
customizing or learning to live
with an AI developer setup, or

3
00:00:11.022 --> 00:00:16.261
put another way,
using various AI tools 2 + in particular,

4
00:00:16.261 --> 00:00:22.240
to kind of aid on a good day in
your software engineering journey.

5
00:00:22.240 --> 00:00:28.960
Or as the kids like to say, vibe coding,
which I get it when I hear that term.

6
00:00:28.960 --> 00:00:33.562
It brings up the image of a YouTuber who
built a SaaS company in a weekend and

7
00:00:33.562 --> 00:00:36.000
wants you to know about it.

8
00:00:36.000 --> 00:00:39.760
The term, in fairness, does come
from one of the founders of OpenAI.

9
00:00:41.280 --> 00:00:46.000
I think it really captures
a lot of the experience

10
00:00:46.000 --> 00:00:50.080
where you start to get into a flow state.

11
00:00:50.080 --> 00:00:53.979
You're working with some of
these tools that are generating

12
00:00:53.979 --> 00:00:55.590
a bunch of stuff, code.

13
00:00:55.590 --> 00:00:57.630
Allegedly, things feel good.

14
00:00:57.630 --> 00:01:02.092
You feel like you're some kind of wizard
of sorts until you hit this part that

15
00:01:02.092 --> 00:01:05.550
I've kind of got highlighted
here that I really love.

16
00:01:05.550 --> 00:01:08.350
The code grows beyond
my usual comprehension.

17
00:01:08.350 --> 00:01:11.470
I have to really read through it for
a while, right?

18
00:01:11.470 --> 00:01:17.270
And I think that that, like, summarizes
a lot of the like flow that myself.

19
00:01:17.270 --> 00:01:19.526
A lot of people nodding
the room right now are like,

20
00:01:19.526 --> 00:01:22.830
giving me the hint that that
might be a shared experience.

21
00:01:22.830 --> 00:01:26.861
And then a lot of the other people I've
talked to kind of like on this journey of

22
00:01:26.861 --> 00:01:30.831
kind of experience, which is like,
getting to the point where it's like,

23
00:01:30.831 --> 00:01:32.730
wait a second, where did this go?

24
00:01:32.730 --> 00:01:35.908
And so a big theme of our talk
today is gonna be about, like,

25
00:01:35.908 --> 00:01:38.642
not only what are these tools and
how do I use them and

26
00:01:38.642 --> 00:01:43.210
am I missing out on something and
has the gravy train left the station?

27
00:01:43.210 --> 00:01:48.075
When we convince you that that is not
true, then there will also be the like,

28
00:01:48.075 --> 00:01:51.970
how do we actually, like,
corral the complexity, right?

29
00:01:51.970 --> 00:01:58.160
Cause on one hand, these tools are really
great at generating a lot of code quickly.

30
00:01:58.160 --> 00:02:02.582
On the other hand, anyone who has ever
dropped into a legacy code base with lots

31
00:02:02.582 --> 00:02:05.600
of code can tell you that's
not always a great thing.

32
00:02:07.280 --> 00:02:12.035
There are some fundamental
principles that I think,

33
00:02:12.035 --> 00:02:19.230
once we wrap our head around them, take
a little bit of magic out, which is good.

34
00:02:19.230 --> 00:02:22.910
Cause it's a statistical model, there
shouldn't be that much magic in it, right.

35
00:02:22.910 --> 00:02:25.707
And kind of help us
understand what's going on so

36
00:02:25.707 --> 00:02:30.415
we can begin to corral that complexity,
put in some safeguards, understand it,

37
00:02:30.415 --> 00:02:33.030
figure out how to make best use of it,
right?

38
00:02:33.030 --> 00:02:38.244
And so, like, less that, like, it seems
like some sorcery, and more that it

39
00:02:38.244 --> 00:02:43.790
seems like, you know, a kind of various
approaches to like, what we do every day.

40
00:02:43.790 --> 00:02:48.324
Am I central thesis that I'M
going to argue to you is

41
00:02:48.324 --> 00:02:52.963
there are a bunch of decades
old best practices in our

42
00:02:52.963 --> 00:02:57.709
industry that a lot of times
we sometimes play fast and

43
00:02:57.709 --> 00:03:02.270
loose with that actually work really well.

44
00:03:02.270 --> 00:03:05.470
I aspire to have the best
git discipline in the world.

45
00:03:05.470 --> 00:03:08.270
Sometimes I write a bunch of code and
then I make the commits later.

46
00:03:09.390 --> 00:03:11.310
I aspire to do test driven development.

47
00:03:13.110 --> 00:03:17.581
Sometimes, sometimes I write a bunch
of code and then I write the test and

48
00:03:17.581 --> 00:03:21.540
kind of seeing how some of those
principles actually really kind

49
00:03:21.540 --> 00:03:25.910
of come into play in really
interesting ways in this case as well.

50
00:03:25.910 --> 00:03:30.042
And we'll kind of get a sense for
how all these things work because like,

51
00:03:30.042 --> 00:03:34.513
at the end of the day, writing software
has always just been about trying to use

52
00:03:34.513 --> 00:03:38.650
something that like somewhat resembles
human language to get a computer

53
00:03:38.650 --> 00:03:42.243
which only understands like
millions of on and off switches and

54
00:03:42.243 --> 00:03:46.630
electrons going through a copper wire
to do the thing we want it to do.

55
00:03:46.630 --> 00:03:48.030
Right, and that is the name of the game.

56
00:03:48.030 --> 00:03:49.910
It has always been the name of the game.

57
00:03:49.910 --> 00:03:55.953
Whether you're putting in punch cards,
writing assembly or Ruby or Shockwave,

58
00:03:55.953 --> 00:04:02.310
Flash or JavaScript or what have you,
the levels of abstraction keep rising.

59
00:04:02.310 --> 00:04:06.121
I'm no longer in my day to day
Life as a JavaScript engineer,

60
00:04:06.121 --> 00:04:09.636
manually managing memory,
some weak maps here there,

61
00:04:09.636 --> 00:04:12.650
sometimes worried about
garbage collection.

62
00:04:12.650 --> 00:04:13.610
Sure.

63
00:04:13.610 --> 00:04:16.833
I think as the levels of extraction
keep rising, there is more and

64
00:04:16.833 --> 00:04:20.890
more opportunities to do more, to have
more leverage in the things we're doing.

65
00:04:23.210 --> 00:04:26.272
I think a lot of today is about how do we
get that leverage, how do we learn how to

66
00:04:26.272 --> 00:04:29.100
use some of these tools to get that
leverage and not be on the other side of

67
00:04:29.100 --> 00:04:33.050
it where we think we're being productive
but actually slowing ourselves down.

68
00:04:33.050 --> 00:04:37.791
I think it just comes to most things
like kind of like understanding some of

69
00:04:37.791 --> 00:04:42.225
the basic concepts in Primitives all
of a sudden makes this wild magic

70
00:04:42.225 --> 00:04:47.060
an understandable thing that you at
least know how to somewhat control.

71
00:04:47.060 --> 00:04:50.340
At least turned sorcery into alchemy,
which we'll take for now.

72
00:04:51.780 --> 00:04:57.140
And AI tools are very good at
generating lots of code, right?

73
00:04:57.140 --> 00:05:01.839
But there's kind of, if you think about
even career progressions, there's a joke

74
00:05:01.839 --> 00:05:06.590
that as you move up the career ladder,
you write less and less code.

75
00:05:06.590 --> 00:05:08.430
That's a fair joke.

76
00:05:08.430 --> 00:05:11.216
It's also true that as you move up and
up the career ladder,

77
00:05:11.216 --> 00:05:12.990
you get paid more, right?

78
00:05:12.990 --> 00:05:18.093
So generally speaking, we could say that
maybe that kind of systems thinking and

79
00:05:18.093 --> 00:05:21.630
high level stuff is also
the interesting and hard part.

80
00:05:21.630 --> 00:05:25.202
And so I have this hypothesis,
especially for junior engineers or

81
00:05:25.202 --> 00:05:28.579
people earlier on, it is really
hard to get some of that stuff,

82
00:05:28.579 --> 00:05:33.210
systems thinking and architecture and
large code bases, large, messy code bases.

83
00:05:34.570 --> 00:05:38.469
Early on in your career, kind of have to
just work at companies that have existed

84
00:05:38.469 --> 00:05:42.019
longer than you've been working to
inherit all sorts of wild stuff, and

85
00:05:42.019 --> 00:05:44.969
then have to dig out to
earn that experience.

86
00:05:44.969 --> 00:05:48.747
But the good news is you can generate
huge messes on your own now and

87
00:05:48.747 --> 00:05:52.730
figure out how to navigate them and
work through everything.

88
00:05:52.730 --> 00:05:54.970
So that's going to be a part of
what we're talking about today.

