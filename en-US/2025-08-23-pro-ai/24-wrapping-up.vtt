WEBVTT

1
00:00:00.080 --> 00:00:04.400
&gt;&gt; Steve Kinney: One thing that I will say
is there are some tools outside of cursor

2
00:00:04.400 --> 00:00:08.240
and Claude code that I
think are super useful.

3
00:00:08.240 --> 00:00:12.960
One is, if you haven't seen before,
Google has this tool called NotebookLM.

4
00:00:12.960 --> 00:00:18.880
And NotebookLM lets you drag in
a bunch of stuff, paste in text.

5
00:00:18.880 --> 00:00:22.000
The most powerful is YouTube videos,
right?

6
00:00:22.000 --> 00:00:26.302
Where it will transcribe
the entire YouTube video and

7
00:00:26.302 --> 00:00:28.890
grab all of that stuff, right?

8
00:00:28.890 --> 00:00:31.850
PDFs, books, whatever.

9
00:00:31.850 --> 00:00:35.199
You drop it all in and
then when you ask it questions,

10
00:00:35.199 --> 00:00:38.410
it only looks at the stuff you dropped in,
right?

11
00:00:38.410 --> 00:00:41.290
It's not like using its big LLM brain.

12
00:00:41.290 --> 00:00:45.850
It does this weird thing where it'll make
a podcast with two people talk about it.

13
00:00:45.850 --> 00:00:48.330
The craziest feature.

14
00:00:48.330 --> 00:00:49.690
No, it gets crazier.

15
00:00:49.690 --> 00:00:51.370
It's two people talking about it.

16
00:00:53.110 --> 00:00:57.990
You can now interrupt,
you put it in interactive mode.

17
00:00:57.990 --> 00:01:01.110
You hit unmute, like on a Zoom call.

18
00:01:01.110 --> 00:01:02.510
Hey, I got a question.

19
00:01:02.510 --> 00:01:07.268
And they stop talking and
answer your question

20
00:01:07.268 --> 00:01:12.070
with a lot of treating
you [LAUGH] like a child.

21
00:01:12.070 --> 00:01:15.110
But you know, that's a great question.

22
00:01:15.110 --> 00:01:17.670
So glad you asked it.

23
00:01:17.670 --> 00:01:20.070
Which is sometimes validating
cause it wasn't a good question.

24
00:01:21.990 --> 00:01:25.364
And you can make study guides and
briefing docs, but you can throw in again,

25
00:01:25.364 --> 00:01:27.830
a whole bunch of YouTube videos and
discover button.

26
00:01:27.830 --> 00:01:30.278
You can actually just kind
of do a Google search and

27
00:01:30.278 --> 00:01:32.390
add a bunch of things in there at once.

28
00:01:32.390 --> 00:01:33.310
So you can build up.

29
00:01:33.310 --> 00:01:37.372
There's 100 sources in here right now
about multi agent orchestration and

30
00:01:37.372 --> 00:01:40.310
Chrome extensions,
which is why I chose to mix that.

31
00:01:40.310 --> 00:01:40.870
Whatever.

32
00:01:43.110 --> 00:01:46.530
But it actually transcribed
a bunch of YouTube videos and

33
00:01:46.530 --> 00:01:48.960
it will reference everything, right?

34
00:01:48.960 --> 00:01:52.572
So then you can go and
actually read more like hyper fix it,

35
00:01:52.572 --> 00:01:55.840
like focus it down to something,
so on and so forth.

36
00:01:57.840 --> 00:02:00.000
And so that thing is really cool.

37
00:02:00.000 --> 00:02:06.413
The other thing that you can do in Gemini,
and I think you can do it in ChatGPT,

38
00:02:06.413 --> 00:02:12.320
I just do it in Gemini,
is you can make these things called gems.

39
00:02:12.320 --> 00:02:15.721
We talked a lot before about building
those implementation plans and

40
00:02:15.721 --> 00:02:17.680
product requirements.

41
00:02:17.680 --> 00:02:18.840
You can create one.

42
00:02:18.840 --> 00:02:20.080
How do I edit you?

43
00:02:22.880 --> 00:02:25.532
Okay, I can't edit you
because on a business plan,

44
00:02:25.532 --> 00:02:29.330
which is my own custom domain, anyway,
you give it effectively a prompt,

45
00:02:29.330 --> 00:02:33.280
like a sub agent and you say, here's
the structure of an architecture plan.

46
00:02:36.880 --> 00:02:41.511
Only respond to me in this way very
much like those sub agents that you

47
00:02:41.511 --> 00:02:44.770
can chat with and
work on a bunch of those ideas.

48
00:02:45.810 --> 00:02:50.411
But like we said before, Gemini, O3 and

49
00:02:50.411 --> 00:02:55.410
Opus have absolutely huge context windows.

50
00:02:57.330 --> 00:03:02.290
One thing that I really like is
this website called repomix.

51
00:03:02.290 --> 00:03:07.699
What repomix does is you can either
take a zip file of a code repository,

52
00:03:07.699 --> 00:03:12.280
a folder or a link to the GitHub repo and
you can say I want.

53
00:03:12.280 --> 00:03:18.621
It'll basically smush it all down into a
single file that is parsable by an LLM and

54
00:03:18.621 --> 00:03:23.760
you can even say ignore the test files or
ignore some other stuff.

55
00:03:23.760 --> 00:03:28.880
Or if the docs of a site use docusaurus
and they have a GitHub repo and they're

56
00:03:28.880 --> 00:03:33.600
all MDX files, you can be like grab
all the MDX files out of this repo and

57
00:03:33.600 --> 00:03:38.880
put it in this manifest where it'll be
all those files concatenated with a file

58
00:03:38.880 --> 00:03:44.090
structure and some other notes of what
you either want to include or exclude.

59
00:03:44.090 --> 00:03:48.368
So you can get it down to the size and
then you can drop that entire repo into

60
00:03:48.368 --> 00:03:53.370
Gemini and start asking questions about
how it's structured and what it's doing.

61
00:03:55.210 --> 00:03:58.570
Which is great for getting a sense
even sometimes your own code base.

62
00:03:58.570 --> 00:04:03.764
I've done it for help me get a sense
of if I wanted to do this thing,

63
00:04:03.764 --> 00:04:06.700
what are the moving pieces, right?

64
00:04:06.700 --> 00:04:11.609
And I can like process a whole
bunch of information really,

65
00:04:11.609 --> 00:04:15.940
really fast and
like get a sense of the entire thing.

66
00:04:15.940 --> 00:04:18.860
So let's go, I don't know, let's grab
this repo just for the funsies of it.

67
00:04:20.060 --> 00:04:21.659
So paste that in.

68
00:04:21.659 --> 00:04:22.860
Sure, sure, sure.

69
00:04:22.860 --> 00:04:25.020
It feels pretty small, so
we'll grab the entire thing.

70
00:04:26.700 --> 00:04:29.980
You can like compress the code so
on and so forth.

71
00:04:29.980 --> 00:04:33.182
If it's really big,
you should probably download it

72
00:04:33.182 --> 00:04:37.040
because they all get angry if you
try to paste that much stuff in.

73
00:04:38.640 --> 00:04:41.821
And you can go ahead and
download it and then just feed it,

74
00:04:41.821 --> 00:04:46.393
upload it back into Gemini and be like,
explain to me what this project does, what

75
00:04:46.393 --> 00:04:51.440
is the architecture for, how do they test
it, what's the state management of this?

76
00:04:51.440 --> 00:04:56.880
And kind of get a sense of all of
these things and see what they are.

77
00:04:56.880 --> 00:05:00.400
And again,
you can kinda see the beginning of this.

78
00:05:00.400 --> 00:05:03.371
It'll show you the repository information,

79
00:05:03.371 --> 00:05:08.243
some things that guide the LLM, the file
structure, so on and so forth, and

80
00:05:08.243 --> 00:05:12.300
then effectively all the contents
of every file put together.

81
00:05:12.300 --> 00:05:16.335
So I think a lot of these tools both for
generating code, but

82
00:05:16.335 --> 00:05:20.140
also I like to pull the train
back into the station.

83
00:05:20.140 --> 00:05:23.901
I kind of believe that for everyone
who's just generated a bunch of code and

84
00:05:23.901 --> 00:05:27.420
they don't know what it does,
it is going to end poorly.

85
00:05:27.420 --> 00:05:32.540
I do think that again, the output of the
code has never really been the hard part.

86
00:05:32.540 --> 00:05:35.053
It's about trade offs,
it's about Complexity,

87
00:05:35.053 --> 00:05:36.860
it's about all of these things.

88
00:05:36.860 --> 00:05:38.940
And that has always been the tricky part.

89
00:05:38.940 --> 00:05:42.540
And that doesn't change, right?

90
00:05:42.540 --> 00:05:47.190
And so I think that all of the automated
code and pumping, because again,

91
00:05:47.190 --> 00:05:50.420
yeah, you're like,
I write a lot of JavaScript.

92
00:05:50.420 --> 00:05:52.392
Cool.
Your JavaScript gets compiled into C,

93
00:05:52.392 --> 00:05:54.220
which gets compiled into assembly.

94
00:05:54.220 --> 00:05:56.940
You were far away from the electrons
going through the copper wire.

95
00:05:56.940 --> 00:05:58.060
Anyway, don't worry about it.

96
00:05:59.340 --> 00:06:02.378
But I think it does raise
the premium on the human clarity,

97
00:06:02.378 --> 00:06:04.300
all of the structure around it.

98
00:06:04.300 --> 00:06:09.520
I get less craziness out of these LLMs
because I have the draconian ESLINT rules,

99
00:06:09.520 --> 00:06:14.431
because I have a lot of those hooks in
there now because I have the commands and

100
00:06:14.431 --> 00:06:16.460
the tests and stuff like that.

101
00:06:18.060 --> 00:06:18.820
You know what I mean?

102
00:06:18.820 --> 00:06:21.782
And having those fundamentals and
understand how it works,

103
00:06:21.782 --> 00:06:23.940
even if you're not producing all the code.

104
00:06:23.940 --> 00:06:27.804
Because if you do start to wrap,
wrap your head around this stuff,

105
00:06:27.804 --> 00:06:31.610
maybe fixing lint rules wasn't
the best use of your time anyway.

106
00:06:32.890 --> 00:06:35.930
Or taking stuff from one
data structure into another.

107
00:06:35.930 --> 00:06:38.907
And again, you can get more design
reviews, you can get more refactors,

108
00:06:38.907 --> 00:06:42.089
you can throw in real systems,
you can get stuff explained to you.

109
00:06:42.089 --> 00:06:45.090
And those have always
been the promotion paths.

110
00:06:45.090 --> 00:06:50.044
And the way up in your career is thinking
of those things so on and so forth, and

111
00:06:50.044 --> 00:06:52.890
not just the raw production of the code.

112
00:06:52.890 --> 00:06:58.070
But like I said, learning how to harness
these tools is a skill in and of itself.

113
00:06:58.070 --> 00:07:00.790
Suspicion is needing to know how
to code is never gonna go away.

114
00:07:00.790 --> 00:07:03.990
Cause you know, like, I think it's
still code at the end of the day.

115
00:07:03.990 --> 00:07:07.073
And some like these things create
enough messes as we've seen, that like,

116
00:07:07.073 --> 00:07:09.830
occasionally you're gonna have to
go in there yourself and fix it.

117
00:07:11.190 --> 00:07:15.491
But like, it's also a way to get exposure
to things that I think that like,

118
00:07:15.491 --> 00:07:19.030
it is harder to get exposure
early in your career as well.

119
00:07:19.030 --> 00:07:23.270
And like, see a bunch of stuff and
like learn really, really fast.

120
00:07:23.270 --> 00:07:27.114
And then as you kind of get a sense for
how to wield it and how to use it,

121
00:07:27.114 --> 00:07:31.760
even if it's just a weird suspicion
about what model to use for what, right?

122
00:07:31.760 --> 00:07:33.480
And that'll change every few weeks.

123
00:07:33.480 --> 00:07:35.360
Don't worry about it.

124
00:07:35.360 --> 00:07:39.360
I think you end up with a lot of like,
interesting insights.

125
00:07:39.360 --> 00:07:42.223
And like I said,
there will be a lot of engineers with 20,

126
00:07:42.223 --> 00:07:45.600
25 years experience who go like,
this isn't real, right?

127
00:07:45.600 --> 00:07:49.396
And it gives you the ability to get
that ability to build up those skills so

128
00:07:49.396 --> 00:07:53.628
that when we need somebody who knows about
this stuff, it turns out that you are on

129
00:07:53.628 --> 00:07:57.580
equal footing with somebody who's got
a decade more experience than you.

130
00:07:57.580 --> 00:08:01.216
I think it's a great opportunity
to both generate code and

131
00:08:01.216 --> 00:08:05.816
like play with side projects and like
honestly be productive on a day to day

132
00:08:05.816 --> 00:08:10.140
basis knowing that there are caveats and
that it can go wildly wrong.

133
00:08:10.140 --> 00:08:12.820
And again, I had a few.

134
00:08:12.820 --> 00:08:15.922
I had a good day or
two with stuff like this mid last week,

135
00:08:15.922 --> 00:08:20.020
I had a bad day on Friday and
I rewrote it all by hand on Monday.

136
00:08:20.020 --> 00:08:20.660
Right.

137
00:08:20.660 --> 00:08:23.885
But arguably did even working
through these processes and

138
00:08:23.885 --> 00:08:28.230
defining what I wanted, did that make
writing by hand easier at the end?

139
00:08:28.230 --> 00:08:30.710
Probably just seeing the shape.

140
00:08:30.710 --> 00:08:34.470
There are some pieces of that garbage code
that I threw away that I have on a branch.

141
00:08:34.470 --> 00:08:39.350
I'm like, I did like that idea over there
and I am better off for that stuff.

142
00:08:39.350 --> 00:08:42.516
And so kind of don't treat it as
I'm gonna make an entire thing or

143
00:08:42.516 --> 00:08:44.990
the fact that when you tried it,
it didn't work.

144
00:08:44.990 --> 00:08:46.310
I don't think it works for anyone.

145
00:08:46.310 --> 00:08:52.440
Maybe I'm wrong, but I do think that there
is a lot of value in diving in deep.

146
00:08:52.440 --> 00:08:55.365
And I say that maybe I'm just, I don't
know, two and a half, three months,

147
00:08:55.365 --> 00:08:56.760
four months of doing this every day.

148
00:08:56.760 --> 00:08:58.480
I could have just lied to myself too.

149
00:08:58.480 --> 00:09:01.600
But I'm pretty sure that
there's a there there.

150
00:09:01.600 --> 00:09:06.944
And I think like a lot of what we're
doing to harness it is just tests and

151
00:09:06.944 --> 00:09:11.840
lengths and like get disciplined,
so on and so forth, right?

152
00:09:11.840 --> 00:09:15.120
Just at a higher level of
abstraction in a lot of cases.

153
00:09:15.120 --> 00:09:16.320
Yeah.

154
00:09:16.320 --> 00:09:17.680
So thank you so much.

