WEBVTT

1
00:00:00.320 --> 00:00:03.228
&gt;&gt; Steve Kinney: The one
that came out four or

2
00:00:03.228 --> 00:00:09.280
five days ago is this new
concept called subagents.

3
00:00:09.280 --> 00:00:15.277
And there have been a lot of what we could
maybe call frameworks around Claude and

4
00:00:15.277 --> 00:00:16.004
Cursor.

5
00:00:16.004 --> 00:00:20.676
Where it's definitely a somewhat
hacky system of commands and

6
00:00:20.676 --> 00:00:26.560
hooks in an MCP server to try to create
these different roles and personas.

7
00:00:26.560 --> 00:00:29.752
And it's super kinda wild to watch.

8
00:00:29.752 --> 00:00:34.511
Some of them have an idea of
there's a product owner and

9
00:00:34.511 --> 00:00:39.683
there's a Scrum master and
then there is a head engineer and

10
00:00:39.683 --> 00:00:43.290
then there is the engineering manager.

11
00:00:43.290 --> 00:00:47.788
And you give them these commands, you
kinda give it enough context to have it

12
00:00:47.788 --> 00:00:52.330
believe it's one of those things and
then only use these certain tools.

13
00:00:52.330 --> 00:00:55.737
So hot take is Rylan and
I played around with them.

14
00:00:55.737 --> 00:00:56.655
We're like,

15
00:00:56.655 --> 00:01:01.556
this doesn't make us feel any more
productive than just using these tools.

16
00:01:01.556 --> 00:01:05.681
But there are some people who won't stop,
they're on YouTube,

17
00:01:05.681 --> 00:01:08.391
they're really into talking about them.

18
00:01:08.391 --> 00:01:11.301
Maybe they're having
better results than I am.

19
00:01:11.301 --> 00:01:16.019
They must be because Claude added it
as a feature to the actual thing, so

20
00:01:16.019 --> 00:01:19.179
now I don't have to learn
any of these systems.

21
00:01:19.179 --> 00:01:23.268
But subagents do something that
none of these other systems do.

22
00:01:23.268 --> 00:01:26.011
Which is basically you
have your main agent,

23
00:01:26.011 --> 00:01:30.568
that's the one where you fire up Claude,
Claude-continue, whatever.

24
00:01:30.568 --> 00:01:34.671
You fire up Claude, that's your
main agent, and your main agent has

25
00:01:34.671 --> 00:01:38.650
a context window, right,
talked about that once or twice today.

26
00:01:39.690 --> 00:01:44.007
The cool thing is subagents have
their own context window, right?

27
00:01:44.007 --> 00:01:48.844
Which means they don't share the main
context window, which means you can

28
00:01:48.844 --> 00:01:53.560
splinter off your context windows
without polluting the main one.

29
00:01:53.560 --> 00:01:57.552
And each one has their own mini-context
window that it does stuff with,

30
00:01:57.552 --> 00:02:01.400
which means you can avoid compaction and
all those other things.

31
00:02:01.400 --> 00:02:06.990
And it can do stuff with its own persona
and then do its thing, get the result,

32
00:02:06.990 --> 00:02:11.384
and just respond back with
the result back to the main agent.

33
00:02:11.384 --> 00:02:14.500
So it gives you a way to shard and
preserve.

34
00:02:14.500 --> 00:02:17.412
You're still paying the token cost for
uses limit, in fact,

35
00:02:17.412 --> 00:02:20.880
you'll probably run it up faster
because you're parallelizing it.

36
00:02:20.880 --> 00:02:26.240
But in terms of you losing packets of
information, you are preserving it.

37
00:02:27.760 --> 00:02:30.087
So yeah, it gets its own system prompt.

38
00:02:30.087 --> 00:02:34.079
This is one of the things I don't
understand how this works at all,

39
00:02:34.079 --> 00:02:38.800
telling an AI that it is a frontend
architect, it gets it to better decisions.

40
00:02:38.800 --> 00:02:42.244
Yes, and I don't really know why,
I've read the stuff,

41
00:02:42.244 --> 00:02:45.706
I went real deep, and yet
I'm still like, I don't know.

42
00:02:45.706 --> 00:02:50.281
But it gets its own system prompt, it
can be convinced that it looks at things

43
00:02:50.281 --> 00:02:53.515
from a certain angle,
somehow, wildly, it works.

44
00:02:53.515 --> 00:02:58.469
But more importantly, the ability to have
sharded context windows and then being

45
00:02:58.469 --> 00:03:03.207
able to pull them back without overloading
the main context window is really,

46
00:03:03.207 --> 00:03:05.210
to me, what makes it wild.

47
00:03:05.210 --> 00:03:08.690
And so you can access this at
any time by doing /agents.

48
00:03:08.690 --> 00:03:11.259
And you can go ahead and it'll say, hey,

49
00:03:11.259 --> 00:03:14.070
would you like to see
what agents you have?

50
00:03:14.070 --> 00:03:18.102
And you can do it at a user level and

51
00:03:18.102 --> 00:03:22.150
you can do it at a project level.

52
00:03:22.150 --> 00:03:25.126
This is the only one where I
do have one at a user level,

53
00:03:25.126 --> 00:03:29.625
which is called copyeditor, which is,
fix my typos, [LAUGH] with enough knowing

54
00:03:29.625 --> 00:03:34.400
about what is a TypeScript word and not
actually a typo, but please fix my typos.

55
00:03:34.400 --> 00:03:38.492
That one I have as a user level, cuz thank
you, to all of you who have opened pull

56
00:03:38.492 --> 00:03:41.716
requests up onto my course materials,
finding all my typos.

57
00:03:41.716 --> 00:03:45.040
I aspire to not make you
have to do that anymore.

58
00:03:45.040 --> 00:03:49.891
So that one I have at a user level cuz I
make typos across all my projects, and

59
00:03:49.891 --> 00:03:53.440
that one I felt comfortable
knowing that I make typos.

60
00:03:55.360 --> 00:03:59.760
So /agents will pull it up,
we'll see that in a second.

61
00:04:00.780 --> 00:04:04.543
As somebody who used to
be a frontend-architect,

62
00:04:04.543 --> 00:04:09.617
making a subagent who I've convinced
is a previous version of myself

63
00:04:09.617 --> 00:04:14.180
is a very surreal experience,
and why it works is weird to me.

64
00:04:14.180 --> 00:04:16.949
But look, a typo and test-strategist.

65
00:04:16.949 --> 00:04:20.460
Unfortunately, this does
not work on keynote slides.

66
00:04:22.220 --> 00:04:27.079
But you can kind of create, and I'll show
you how you make one of these in a second,

67
00:04:27.079 --> 00:04:31.885
but you can create these subagents with
all of this, hey, your job is to do this.

68
00:04:31.885 --> 00:04:34.609
These are things you care about,
look at it, and

69
00:04:34.609 --> 00:04:37.146
it'll be loaded up with
that system prompt.

70
00:04:37.146 --> 00:04:40.166
And you can say,
you only have access to these tools,

71
00:04:40.166 --> 00:04:42.258
you only have access to these tools.

72
00:04:42.258 --> 00:04:45.460
You can load in, theoretically,
all those at-commands work.

73
00:04:45.460 --> 00:04:50.116
So you could basically have with different
references to different files, and

74
00:04:50.116 --> 00:04:55.480
again, everything that they get does not
go into the main agent's context window.

75
00:04:55.480 --> 00:04:59.981
So you can say for a moment you
have all this stuff in context,

76
00:04:59.981 --> 00:05:04.280
do your thing and
give a report back to the main agent.

77
00:05:04.280 --> 00:05:08.584
And then so that main agent does not have
its context window all polluted, it does

78
00:05:08.584 --> 00:05:13.320
the thing, it comes back with its thoughts
and opinions, very tidy, neat package.

79
00:05:13.320 --> 00:05:16.244
Sure, it's costing you a lot of tokens
because you're doing now four different

80
00:05:16.244 --> 00:05:19.480
things and reporting back, but
you're not polluting the context window.

81
00:05:19.480 --> 00:05:24.168
So frontend-architecture that's like
that one in back, You see this a lot in

82
00:05:24.168 --> 00:05:28.440
the frameworks I was reading and
it seems to work, I don't believe it.

83
00:05:30.280 --> 00:05:34.920
The one that I use the most is.

84
00:05:34.920 --> 00:05:38.545
I think I said there's all those commands
and prompts and rules that we saw earlier,

85
00:05:38.545 --> 00:05:40.240
you are a senior TypeScript engineer.

86
00:05:40.240 --> 00:05:45.105
I've never gotten better results from
convincing an AI that it's just supposed

87
00:05:45.105 --> 00:05:50.290
to be better at it than it is, you are a
junior engineer, ask all of the questions.

88
00:05:50.290 --> 00:05:53.474
Anything that is unclear, point it out and

89
00:05:53.474 --> 00:05:59.410
bring back all of your concerns around
this project, worth its weight in gold.

90
00:06:00.530 --> 00:06:04.930
And so it just comes back with everything,
it's like, what do you mean by that?

91
00:06:04.930 --> 00:06:08.581
And a lot of times I'll have that right to
a list of questions that I will then have

92
00:06:08.581 --> 00:06:09.410
to go and answer.

