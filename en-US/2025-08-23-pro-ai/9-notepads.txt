[00:00:00]
>> Steve Kinney: You could probably guess what a notepad is just from the name. It's a place where you keep notes. The reason that I don't use these as often anymore is that they are a cursor feature. There's nothing wrong with that. Cursor is great, we like Cursor, we're looking at Cursor right now.

[00:00:18]
And cursor features are available to Cursor. However, let's say I wanted to use that. OpenAI codecs. Ain't no notepads there. Let's say I want to use Claude code. No notepads there. Do you know what works everywhere? Markdown files. Lot of markdown files. But there are some nice things you do in your notepad and then you can just include that body of text and then you just reference it.

[00:00:52]
Like you could reference a file, but it's not on your file system. Effectively, I like markdown files cuz they're on my file system. I can check them to version control. I can share between tools. Nice part about these is they're not on my file system. Not checked into version control.

[00:01:04]
Figure out what you need. I these days tend to use more of the markdown files. But like, I also work on a project by myself these days for the last three months. And I think that if I was checking in random markdown files into git all the time, my teammates would kill me.

[00:01:21]
So your mileage may vary. There are good parts or there are bad parts. There are bad parts, are there good parts? You can add them and include them in the context. You can edit them. You can also do Cmd+Shift+P and add more. You give them a good name.

[00:01:39]
You can pull them into the context. They are ephemeral to your environment. A lot of these tools have, again, we saw those user rules versus project rules and all those things. There's a lot of things that you want checked and shared on your team, but sometimes you need your personal space.

[00:01:55]
Sometimes you need just the things. It's like the debate that has raged on in every engineering team that I've ever worked on is, do you check VS code into git? Not here to answer it. I've been on both sides. I've not even been consistent over the years. It's like, if I like the settings, yes, put them in there.

[00:02:16]
If I don't like the settings, they better not be in there. So it's basically, am I the boss or not? So some best practices use descriptive names. It's got the same rules for everything else. Because again, managing the context window is the Name of the game. Rules are always on.

[00:02:35]
Notepads effectively are ephemeral. They're not stored in git. You can pull them in when you need, but only when you need, because tokens aren't free. Again, even if you think you're on a plan where they're free, you are rate limited in some way, shape or form. So we can say notepad create and open a new notepad.

[00:03:02]
We can argue that you never even have to reference this one to the AI agent. This is also nice because if you're not checking that markdown file into git because you don't want everyone to see it, we all know you left it on your desktop, we all know your desktop is a mess and you might as well at least have it in the project or in your editor.

[00:03:22]
So there's that too. But again, where I think what's really important here and where I would say that using notepads, and we'll see you can do this with commands in cloud code as well, is you can ention files. So let's say, hey, for this one feature, we've got a reducer over here, we've got a context API over here, we've got the test file here, and maybe we've got a markdown file that has again, the product requirements for what we're working on.

[00:03:47]
You do not want to keep typing that. If you said something like look at use calculator and before doing anything has the utilities that you need before making new ones. You can mention other rules, you can mention other files. And now let's give this thing a name. Where'd it go on my tiny screen?

[00:04:27]
There it is. I can do it here we'll say like. And so now, let's say you have, and I guess also look at math. And now you can just do calculator notes, which you pull in this file and it will then pull in the other pieces. So if you have a reusable set of prompt.

[00:04:58]
Sometimes the Notepad file, again, advantages, it's not in version control, it's not on the file system. Disadvantages, it's not in version control, it's not in file system. Hey, today I am working on this thing with these files I'm prompting all the time. I'm getting tired of writing this.

[00:05:16]
You can go ahead and make a note and then you don't have to keep it. The other one, here's one that I have this as a claude command, but here's one for you you can argue this should be a rule format. Having it fix your lint errors and your type check errors.

[00:05:57]
You can get to the point where it gets reliable will save you hours a day.

