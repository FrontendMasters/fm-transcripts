[00:00:00]
>> Steve Kinney: We are going to, like I said, a few other mini tools will make appearances, but we're going to talk about two tools in particular today. They are the hot ones right now, for lack of a better term, which is Cursor and Claude code. We're going to look at some other ones because there's a bunch of different paradigms in which you see these tools work.

[00:00:25]
If you're going to ask me the question right now, which one, I will tell you that I use both. Cursor is if it looks like VS Code, that's a decent thought. It is effectively a fork of VS Code insofar that if I think if you pull in the GitHub extension and you try to OAuth in to GitHub, it'll be like would you like to give VS Code permission to connect to GitHub, right?

[00:00:53]
So it is effectively a superset-ish these days. VS Code has increasingly more and more of these features built into it. But we'll use Cursor because I think it is still the one that most people go to for this. A lot of this comes down to UX paradigms. Cursor, what's really great about it is you are, again, in your editor.

[00:01:15]
You've got that side panel that kinda looks like ChatGPT, right? In your code, you can kinda see the changes it wants to make, accept and you can highlight pieces of code and ask to do things. You kind of in there, right, versus some other AI tools we see.

[00:01:29]
Sometimes it's like go off and do a thing and come back to me, like Deep Research or OpenAI's Operator or Codex, as we'll see later. And so there's a lot of really great things about having a kind of an immersive experience. Claude Code, on the other hand, is a terminal app.

[00:01:47]
So all you vim users can rejoice and it runs in your terminal and kind of you're kind of again, you're there, but you're not necessarily in the code at the same time as the agent is. Again, there are advantages to that too, because you're not tied to what thing are you looking at at this moment either.

[00:02:09]
Now, which one do I use? Well, Cursor is like a VS Code kind of thing, and Claude Code runs the terminal and VS Code has a terminal built in. The answer to which one I use is yes to various degrees, depending on what I want to do. If it's like, hey, I'm staring at a function that I need to refactor, I'm probably doing it in Cursor.

[00:02:35]
If I've got, hey, I need to change the arguments of every iteration of this function across the entire code base. I'm probably doing that from cloud code. There are other paradigms, as we'll see. This is OpenAI's codex, which takes a totally different approach to accomplish the same thing, which is you point it at a git repo and you tell it what you want.

[00:02:59]
You can chat with it a little bit, you can see what it's thinking and then guide it. And it comes up like, here's my plan and you can kind of approve it or not. And if you approve it, it will open up a PR. So now you're taking a different approach, which is more of that traditional code reviewer kind of piece where you're commenting on the pull request.

[00:03:19]
And again, the answer is yes, right? I mean, this is incredibly powerful because if I have. Because for a lot of these tools, we think a lot of these in terms of generating the code because that's where we see the memes, the people smiling with money bags on YouTube.

[00:03:35]
But I think writing code is important. But understanding code bases is sometimes an interesting part too. And all these tools a lot of times understand they've indexed the entire code base, they can get a sense of it. And so for a tool like this, a lot of times I'll have spent the day coding and then I will walk away from the computer as I promised my wife and then I will pull out my phone and I got some questions about the overall architecture or some ideas.

[00:04:02]
I can kick some of these things off remotely and then come back and look at them in the morning, right? So the answer of which one is sometimes like it depends, or yes, depending on how much kind of firm pieces you want in there. But quick disclaimer just to kind of set expectations.

[00:04:21]
Best things in life are free. These apparently are not the best things in life. So Cursor does have a free 14 day trial of the pro plan. There's some other plans too, but everything we care about today is at least in the pro plan. After you get moved down to the hobby plan where you still have most kind of purposely, we'll touch on some of the things that are not totally in the hobby plan, but you just have less of it.

[00:04:50]
And then there's some other stuff that is in the fancy plan, which is the stuff you would never expect to be in a free plan and you probably don't care about unless you work in corporate it, which is SSO and SAML and enterprise grade privacy and all those which you should care about but you don't care about right now with your little fun project apps that we're going to play with.

[00:05:13]
That said, our buddy Claude Code on the other hand, at this moment does not have a free plan. Now, the way we're gonna handle today is we're gonna talk about cursor first. We are then gonna kind of have a blended portion of the show and then things that you could.

[00:05:30]
If you want to flip over to Claude Code and get that experience too, you can, you wanna stay in cursor, you can as well. That said, if you wanna get a feel for kind of the terminal-based approach, Google has a Gemini CLI, which other than missing a few features which again might very much have at some point.

[00:05:51]
As long as you have a Google account is free within certain amounts too, and so that will apply as well. So if you wanna get a taste of that, that is an option for you. So there's various ways to kind of play along with this.

