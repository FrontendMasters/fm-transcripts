WEBVTT

1
00:00:00.061 --> 00:00:03.760
&gt;&gt; Steve Kinney: Okay, so
starting Claude up, typing Claude.

2
00:00:04.880 --> 00:00:06.720
Do you trust this folder?

3
00:00:06.720 --> 00:00:07.360
I do.

4
00:00:09.680 --> 00:00:13.508
So a few things that
you have options here.

5
00:00:13.508 --> 00:00:17.680
Typing slash will get you a kind of
list of all of the funneled options.

6
00:00:17.680 --> 00:00:21.360
Some tasty notes that don't necessarily
deserve their own sections.

7
00:00:21.360 --> 00:00:26.740
Add dir Add directory so
let's say you are in a monorepo or

8
00:00:26.740 --> 00:00:31.672
the other day Rylan is working
on this one library for

9
00:00:31.672 --> 00:00:36.383
abstracting calls between OpenAI,
anthropic,

10
00:00:36.383 --> 00:00:41.000
yada yada yada in a way
that we needed it to.

11
00:00:41.000 --> 00:00:42.320
I had that cloned down.

12
00:00:42.320 --> 00:00:43.660
I was NPM linking it, and so

13
00:00:43.660 --> 00:00:46.880
I wanted to go read some of
the documentation files from that one.

14
00:00:46.880 --> 00:00:49.187
You can basically say add
this other sibling or

15
00:00:49.187 --> 00:00:52.040
other directory into things
you're allowed to access.

16
00:00:54.440 --> 00:00:55.308
Bug is to complain.

17
00:00:55.308 --> 00:01:00.200
Clear and compact, we saw,
don't look at that one.

18
00:01:01.800 --> 00:01:02.681
Export is kind of cool.

19
00:01:02.681 --> 00:01:08.360
So one of the things about Claude is
theoretically, not theoretically, really.

20
00:01:08.360 --> 00:01:12.363
In your home directory
there is a CLAUDE file and

21
00:01:12.363 --> 00:01:16.566
it actually just has what's
called a JSON L file,

22
00:01:16.566 --> 00:01:22.930
which is JSON lines where you could
have many JSON files in a single file.

23
00:01:22.930 --> 00:01:27.897
And basically all of your
conversations in all of

24
00:01:27.897 --> 00:01:32.260
your directories on your computer are just

25
00:01:32.260 --> 00:01:36.876
stored in plain text
JSON on the file system.

26
00:01:36.876 --> 00:01:40.450
It means you can go look at whatever
is recorded at any given point.

27
00:01:40.450 --> 00:01:42.210
You can also do export.

28
00:01:42.210 --> 00:01:45.771
And there's not a lot to see in this
particular one because I haven't done

29
00:01:45.771 --> 00:01:48.759
anything yet where it will literally
either save it to a file or

30
00:01:48.759 --> 00:01:50.150
write it to your clipboard.

31
00:01:50.150 --> 00:01:51.470
Basically, everything on that screen.

32
00:01:51.470 --> 00:01:55.990
But you can go ahead and
see every single thing it did.

33
00:01:55.990 --> 00:02:00.094
If you're somewhat curious,
which I think is super useful, Dr.

34
00:02:00.094 --> 00:02:04.931
Is like if something's not working,
we'll talk about hooks IDE it will if you

35
00:02:04.931 --> 00:02:09.720
open it up in the terminal in either
VS Code or Cursor or possibly another IDE.

36
00:02:09.720 --> 00:02:11.901
I don't know, it will go ahead and

37
00:02:11.901 --> 00:02:16.566
install its own VS Code extension where
it can show you side by side diffs,

38
00:02:16.566 --> 00:02:20.954
kind of like Cursor does, but
not nearly as good and stuff like that.

39
00:02:20.954 --> 00:02:22.892
And it'll show it to you in there as well.

40
00:02:22.892 --> 00:02:24.977
Install the GitHub app.

41
00:02:24.977 --> 00:02:30.545
We'll set up some GitHub actions where you
can then in your own pull request God and

42
00:02:30.545 --> 00:02:31.845
ask it a question.

43
00:02:31.845 --> 00:02:34.520
And that will just be set up
like GitHub Action for you.

44
00:02:34.520 --> 00:02:35.640
Log in and log out.

45
00:02:37.480 --> 00:02:41.375
Memory will actually just
be your cloud MD file,

46
00:02:41.375 --> 00:02:45.365
which we'll see in a second
model we saw earlier,

47
00:02:45.365 --> 00:02:50.970
which is the ability to proxy in
between Sonnet and opus permissions.

48
00:02:50.970 --> 00:02:54.256
If you're like you're no longer
allowed to run git commands,

49
00:02:54.256 --> 00:02:56.610
you can basically deny it that ability.

50
00:02:56.610 --> 00:02:58.529
You can deny it or you can allow it.

51
00:02:58.529 --> 00:03:00.770
Please don't ever ask me
again about git commands.

52
00:03:00.770 --> 00:03:03.570
Or you are allowed to git status but
not git commit.

53
00:03:03.570 --> 00:03:06.050
Or you're allowed to git commit but
not git push.

54
00:03:06.050 --> 00:03:08.290
Or you can do bash but
you can't git whatever.

55
00:03:09.510 --> 00:03:14.440
You can tweak all of those things
because all of those settings will also

56
00:03:14.440 --> 00:03:18.150
show up in this cloud
directory under Settings JSON.

57
00:03:18.150 --> 00:03:23.590
The other ones that are super interesting
are resume where I have done this

58
00:03:23.590 --> 00:03:29.040
before where Cursor wanted to update or
VS code wanted to update, I quit.

59
00:03:29.040 --> 00:03:30.307
I kind of was in the middle of something.

60
00:03:30.307 --> 00:03:32.498
You can hit resume in
this case I don't like.

61
00:03:32.498 --> 00:03:33.297
This is a brand new thing.

62
00:03:33.297 --> 00:03:37.090
I don't have any message but you can find
any previous session that you've done cuz

63
00:03:37.090 --> 00:03:39.597
they're all stored in JSON
files on your file system.

64
00:03:39.597 --> 00:03:41.450
I'll just load any one of those back up.

65
00:03:42.730 --> 00:03:45.530
You can also start with continue and
it'll be the last one.

66
00:03:45.530 --> 00:03:49.866
If you want Vim mode, have at it.

67
00:03:49.866 --> 00:03:54.427
If you are in the middle of vibing and
want to upgrade your plan,

68
00:03:54.427 --> 00:03:57.622
they will take your
money from you happily.

69
00:03:57.622 --> 00:04:02.558
This one's super useful though.

70
00:04:02.558 --> 00:04:08.320
So what this one does is effectively
the more important part here is it'll show

71
00:04:08.320 --> 00:04:13.817
you the model and if you are, if you hit
a rate limit on Opus or if you hit a rate

72
00:04:13.817 --> 00:04:18.912
limit overall, you will see when
you are in their good graces again.

73
00:04:18.912 --> 00:04:23.282
You can get a sense of when you're allowed
to use whatever model for a second time.

74
00:04:23.282 --> 00:04:25.984
You can check all those out, but

75
00:04:25.984 --> 00:04:31.307
you can get a sense of what you
have going on, so on and so forth.

76
00:04:31.307 --> 00:04:32.571
I think I have multiple installations.

77
00:04:32.571 --> 00:04:36.016
I installed it again to get you
those screenshots from earlier, so

78
00:04:36.016 --> 00:04:37.870
I'll deal with that at some point.

79
00:04:37.870 --> 00:04:40.160
But it's not bothering anyone right now.

80
00:04:40.160 --> 00:04:42.120
So yeah, you can install
all those different things.

81
00:04:42.120 --> 00:04:44.922
But yeah, the slash status is useful
if you are getting rate limited or

82
00:04:44.922 --> 00:04:46.741
you're just curious what model you're on.

83
00:04:46.741 --> 00:04:52.212
But you can also just do that slash
model that I showed you earlier, right?

84
00:04:52.212 --> 00:04:55.458
You can swap, you're like hey,
I want to use Sonnet for this thing.

85
00:04:55.458 --> 00:04:59.967
And like I said before,
I spent a lot of time jockeying back and

86
00:04:59.967 --> 00:05:04.305
forth because again,
six to eight times more tokens on opus

87
00:05:04.305 --> 00:05:09.249
planning Big brain thought if I'm
coming up with A PRD in one file and

88
00:05:09.249 --> 00:05:12.320
an implementation plan in another file.

89
00:05:12.320 --> 00:05:14.680
I'll maybe do all that in Opus and
review it.

90
00:05:14.680 --> 00:05:19.278
And then for the fix my lint errors,

91
00:05:19.278 --> 00:05:22.965
we'll let Sana do that one.

92
00:05:22.965 --> 00:05:27.938
Cool, so the most important
thing when you first start

93
00:05:27.938 --> 00:05:32.480
on a project is you do this /init, right?

94
00:05:32.480 --> 00:05:37.478
And one of the best parts,
I don't know what this is called,

95
00:05:37.478 --> 00:05:41.006
but the verbs that it just cycles through,

96
00:05:41.006 --> 00:05:44.934
particularly when you get angry,
are a treat.

97
00:05:44.934 --> 00:05:46.961
This one's not great, but

98
00:05:46.961 --> 00:05:52.437
don't sleep on the ridiculous stuff
it says as I demo this to you, right?

99
00:05:52.437 --> 00:05:53.308
It's worth it.

100
00:05:53.308 --> 00:05:54.807
This is not the most.

101
00:05:54.807 --> 00:05:58.900
We can kind of also see the token usage,
which strikes you as,

102
00:05:58.900 --> 00:06:00.570
why do I need to see this?

103
00:06:01.850 --> 00:06:02.730
You care.

104
00:06:03.930 --> 00:06:09.090
When you see the seconds going up and
you don't see the tokens going up, right?

105
00:06:09.090 --> 00:06:12.477
It means like, your test suite
is just sitting there stalling.

106
00:06:12.477 --> 00:06:15.962
Or like it's tried to
start up a dev server and

107
00:06:15.962 --> 00:06:21.303
that blocked the terminal the same
way Vite holds the entire thread.

108
00:06:21.303 --> 00:06:24.300
Or like a server does and
you might need to intervene.

109
00:06:24.300 --> 00:06:28.612
It will timeout after two minutes,
but that's like two minutes,

110
00:06:28.612 --> 00:06:32.385
which doesn't feel long in
the grand sense of things, but

111
00:06:32.385 --> 00:06:36.251
like it is when you're watching,
like a pot of water boil.

112
00:06:36.251 --> 00:06:39.140
All right, so
do you want to make this edit?

113
00:06:39.140 --> 00:06:40.820
So you have two choices.

114
00:06:40.820 --> 00:06:42.460
You have this yes and yes.

115
00:06:42.460 --> 00:06:44.500
And don't ask again this session,

116
00:06:44.500 --> 00:06:47.220
I'm going to tell you
which one you should use.

117
00:06:47.220 --> 00:06:51.968
I'm going to tell you which
one you're going to use.

118
00:06:51.968 --> 00:06:53.664
Cool, cool, cool, I think it showed you.

119
00:06:53.664 --> 00:06:54.673
I just had this really small.

120
00:06:54.673 --> 00:06:58.012
If you have the VS coder
Cursor extensions,

121
00:06:58.012 --> 00:07:01.271
I'll show you in the side panel over here.

122
00:07:01.271 --> 00:07:04.149
Cool, cool, cool, so it goes ahead and

123
00:07:04.149 --> 00:07:07.968
you don't have necessarily
all of those rule files.

124
00:07:07.968 --> 00:07:09.500
There's some other different
files that we'll see.

125
00:07:09.500 --> 00:07:14.214
Like you had with cursor,
you basically have this one claw MD file,

126
00:07:14.214 --> 00:07:18.440
which is everything that you
need to know about the project.

127
00:07:18.440 --> 00:07:22.666
And like I said, if you don't have one,
you hit Init, and

128
00:07:22.666 --> 00:07:24.485
it will make one for you.

129
00:07:24.485 --> 00:07:28.950
And it does the things you think it does.

130
00:07:28.950 --> 00:07:31.071
It tells it about, like.

131
00:07:31.071 --> 00:07:35.453
And you can see it definitely
read my file system, right?

132
00:07:35.453 --> 00:07:42.194
It discusses the project architecture,
how we use the state management.

133
00:07:42.194 --> 00:07:46.842
Again, it's like overall a synopsis
on what this project does and

134
00:07:46.842 --> 00:07:51.822
is and how I need to turn off that
markdown linter that I had to catch my own

135
00:07:51.822 --> 00:07:56.636
logical errors when I was doing
the notes which I'll do in a second but

136
00:07:56.636 --> 00:07:59.390
components use typescript inferior.

137
00:07:59.390 --> 00:08:02.910
It does a pretty good job of
understanding the code base.

138
00:08:02.910 --> 00:08:05.695
It did spend a decent
amount of time doing that.

139
00:08:05.695 --> 00:08:07.444
How we do the testing and

140
00:08:07.444 --> 00:08:12.265
your job is to curate this again
Cursor had a bunch of rules files.

141
00:08:12.265 --> 00:08:15.720
Claude code has this one file.

142
00:08:15.720 --> 00:08:20.680
The only I think true downside of using
both is now guess what you've signed up

143
00:08:20.680 --> 00:08:22.374
for keeping them in sync.

144
00:08:22.374 --> 00:08:23.042
Ask me how I know that.

145
00:08:23.042 --> 00:08:26.027
That can be problematic.

146
00:08:26.027 --> 00:08:29.188
Cool, so on and so forth.

147
00:08:29.188 --> 00:08:32.061
You can begin to refine this over
time with your preferences more about

148
00:08:32.061 --> 00:08:32.894
the architecture.

149
00:08:32.894 --> 00:08:39.180
If you do whatever you can reference
another file it will go read that file.

150
00:08:39.180 --> 00:08:41.840
Here's the PSA that you've
heard a thousand times today.

151
00:08:41.840 --> 00:08:44.960
Sure, write more in there, more detail,
at all the files in the world.

152
00:08:44.960 --> 00:08:49.605
It will read this file every time or
before at least it starts doing something.

153
00:08:49.605 --> 00:08:51.064
As long as it'll make sure
it has this file in context.

154
00:08:51.064 --> 00:08:51.969
Not every time but

155
00:08:51.969 --> 00:08:55.899
if it's already in context it's not going
to put it a second time in context.

156
00:08:55.899 --> 00:08:58.607
But it will make sure it's
in there all the time.

157
00:08:58.607 --> 00:09:04.412
But even figured out like the various
eslint rules I was talking about earlier

158
00:09:04.412 --> 00:09:10.590
that I installed it knows roughly most of
the things that are going on pretty well.

159
00:09:10.590 --> 00:09:17.610
Your job is to kind of curate this and
work with it, right?

160
00:09:17.610 --> 00:09:22.797
So like I said,
there are both the positives.

161
00:09:22.797 --> 00:09:28.020
Definitely do this and
don't you ever as you saw with

162
00:09:28.020 --> 00:09:33.134
that some of those rules
that I showed you earlier.

163
00:09:33.134 --> 00:09:36.348
Yeah, it's like a general
purpose Cursor rule.

164
00:09:36.348 --> 00:09:39.319
I'll show you the one I'm using
the project I'm doing in a second.

165
00:09:39.319 --> 00:09:42.343
You can reference other files or
other folders it should read or

166
00:09:42.343 --> 00:09:45.038
anything it needs to know
problem solving approaches.

167
00:09:45.038 --> 00:09:48.040
I even have make sure you
run lint every single time.

168
00:09:48.040 --> 00:09:53.280
So the other thing you can
do is at any given point

169
00:09:53.280 --> 00:09:58.913
in that little command line
window if you do pound,

170
00:09:58.913 --> 00:10:03.110
you can almost, where'd it go?

171
00:10:03.110 --> 00:10:03.932
There you are.

172
00:10:03.932 --> 00:10:11.044
If you hit the pound sign you can
kind of see the autocomplete here,

173
00:10:11.044 --> 00:10:16.632
pound add to memory you can be like,
all files should

174
00:10:16.632 --> 00:10:22.990
be kebab case you can choose
project memory or user memory.

175
00:10:22.990 --> 00:10:27.088
Again I want them all
readily accessible and

176
00:10:27.088 --> 00:10:32.958
because stuff like the work projects
are in bun the projects I do

177
00:10:32.958 --> 00:10:38.938
here in NPM I tend to keep
everything it's markdown, landing,

178
00:10:38.938 --> 00:10:43.950
whatever, but
it will add that to your cloud MD file.

179
00:10:43.950 --> 00:10:49.343
So in a pinch and if you see it doing
something you can kind of like,

180
00:10:49.343 --> 00:10:51.218
hey, just remember.

181
00:10:51.218 --> 00:10:53.770
And it will go ahead and
it will add it to that Cloud MD file.

182
00:10:53.770 --> 00:10:55.161
Like, in the moment,
you can always go in there.

183
00:10:55.161 --> 00:10:56.010
It's just a markdown file.

184
00:10:56.010 --> 00:10:58.350
You can edit yourself whenever you want.

