WEBVTT

1
00:00:00.280 --> 00:00:03.020
So let's go through and
let's play with an example.

2
00:00:03.020 --> 00:00:07.750
So I've got this area for
mapping exercises,

3
00:00:07.750 --> 00:00:12.722
and let's go play around
with this a little bit,

4
00:00:12.722 --> 00:00:16.739
this is in the mapping directory here.

5
00:00:16.739 --> 00:00:19.625
Here we have, Get character is
a fake promise in this case,

6
00:00:19.625 --> 00:00:23.408
it's a fake API request, is a JSON file
and here you can see the answer sheet.

7
00:00:23.408 --> 00:00:28.743
But go ahead, from this promise Get
me the first one in the database and

8
00:00:28.743 --> 00:00:30.739
get plucked the name out.

9
00:00:30.739 --> 00:00:37.800
That seems fine, that's good, so
what we want to do at this point is,

10
00:00:37.800 --> 00:00:42.630
we wanna be able to map
these in different ways.

11
00:00:42.630 --> 00:00:47.830
But what happens if we wanted
to get four characters?

12
00:00:47.830 --> 00:00:52.616
We wanted to go get, one, two, three and
four, so we could do something like

13
00:01:01.629 --> 00:01:03.690
of 1, 2, 3, and 4.

14
00:01:03.690 --> 00:01:07.690
And maybe this is what we get back from
the API that they were looking for.

15
00:01:07.690 --> 00:01:11.429
And what I wanna do is,
I wanna take those numbers, and

16
00:01:11.429 --> 00:01:14.370
we'll see I'm gonna do this wrong first.

17
00:01:14.370 --> 00:01:17.919
We'll map them and
we'll say, for that number,

18
00:01:21.616 --> 00:01:23.993
I want to go get that character.

19
00:01:23.993 --> 00:01:26.015
Let's start with the full
character at this point.

20
00:01:29.781 --> 00:01:33.180
And we'll get that Nth character.

21
00:01:36.410 --> 00:01:38.723
And you can see that
this doesn't work great,

22
00:01:38.723 --> 00:01:42.750
and if you look under the hood
these are a bunch of observables.

23
00:01:42.750 --> 00:01:45.503
So I can merge map them, instead of a map

24
00:01:52.283 --> 00:01:54.912
We gotta require that one,
swap this one out.

25
00:02:00.585 --> 00:02:04.760
Now you can see it pulls in, each one
of them, as its own independent piece.

26
00:02:04.760 --> 00:02:09.418
So, it's taking, hey, I need,
these ideas in the database,

27
00:02:09.418 --> 00:02:14.680
go fire them off in parallel,
as they come back, put them on the page.

28
00:02:14.680 --> 00:02:18.743
So these are all getting fired
in parallel and as they come in,

29
00:02:18.743 --> 00:02:21.290
they are getting handled.

30
00:02:21.290 --> 00:02:26.789
And so you begin to play around with
pieces of this as we go through.

31
00:02:29.342 --> 00:02:31.500
So we have the ability to
switch between things.

32
00:02:31.500 --> 00:02:35.840
This seems kind of interesting for
us, like what could we do here?

33
00:02:35.840 --> 00:02:40.159
I think switch map is one of
the more interesting ones, and

34
00:02:40.159 --> 00:02:43.333
once you wrap your head around switch map,

35
00:02:43.333 --> 00:02:48.910
you can also theoretically get a sense
around how to deal with exhaustion.

36
00:02:48.910 --> 00:02:50.400
Just what logic do you want?

37
00:02:50.400 --> 00:02:55.474
To write the usage and syntax isn't
too different, versus the idea of

38
00:02:55.474 --> 00:03:01.210
figuring out how to deal with different
pieces of this along the way.

39
00:03:01.210 --> 00:03:03.745
So I'll actually show you
a simple implementation of it and

40
00:03:03.745 --> 00:03:06.000
we play around with it
a little bit as well.

41
00:03:06.000 --> 00:03:09.000
We'll look at it,
we'll try to implement it, also.

42
00:03:09.000 --> 00:03:12.250
So I have this playground that I built.

43
00:03:13.600 --> 00:03:16.160
And this is the under
the hood piece of it.

44
00:03:17.820 --> 00:03:21.372
Well, actually, I'll take it for
a spin in a second, but

45
00:03:21.372 --> 00:03:25.470
we've got the start and
the stop that we've seen before.

46
00:03:25.470 --> 00:03:27.651
We've got this ability to clear,
all that does is clear out the DOM,

47
00:03:27.651 --> 00:03:29.330
it's not really important for us.

48
00:03:29.330 --> 00:03:32.100
But we're gonna merge, play and pause.

49
00:03:32.100 --> 00:03:37.404
And then, we're gonna switch between,
if it's running, we're gonna switch

50
00:03:37.404 --> 00:03:42.328
between whatever observable we care
about ,or this special observable.

51
00:03:42.328 --> 00:03:45.120
There's two, two is a strong word, but

52
00:03:45.120 --> 00:03:49.650
there are two special
observables that RX JS gives us.

53
00:03:49.650 --> 00:03:50.810
One is called NEVER.

54
00:03:50.810 --> 00:03:53.650
And the other one is called EMPTY.

55
00:03:53.650 --> 00:03:57.040
Just as a random guess,
what do you think NEVER does?

56
00:03:58.370 --> 00:03:59.710
&gt;&gt; Never-
&gt;&gt; Nothing.

57
00:03:59.710 --> 00:04:01.390
&gt;&gt; Nothing, never emits.

58
00:04:01.390 --> 00:04:02.900
It never completes.

59
00:04:02.900 --> 00:04:06.070
It's just like a black hole of observable.

60
00:04:06.070 --> 00:04:07.510
Nothing happens.

61
00:04:07.510 --> 00:04:12.800
And EMPTY will basically,
immediately complete.

62
00:04:12.800 --> 00:04:16.834
Like I don't wanna do anything here,
I am actually done, like that's it,

63
00:04:16.834 --> 00:04:17.850
we're finished.

64
00:04:17.850 --> 00:04:21.184
So if you look at this switch map code,
we have the true and

65
00:04:21.184 --> 00:04:22.785
the false coming through.

66
00:04:22.785 --> 00:04:27.374
Just like we had that one, two, three,
four previously, either true or

67
00:04:27.374 --> 00:04:29.012
false is coming through.

68
00:04:29.012 --> 00:04:32.010
That value is again true or false.

69
00:04:32.010 --> 00:04:36.784
If it's running, I would love to switch to
this observable from the very beginning,

70
00:04:36.784 --> 00:04:41.161
and forget what you were doing, if
another like anything else was happening,

71
00:04:41.161 --> 00:04:44.440
because theoretically never
could have been happening.

72
00:04:44.440 --> 00:04:50.332
If it is false,
Then switch to this NEVER observable.

73
00:04:50.332 --> 00:04:54.223
So means that when we're running well
listen to whatever, this could be,

74
00:04:54.223 --> 00:04:55.780
for instance, an interval.

75
00:04:55.780 --> 00:04:58.785
You can see how this might work for
our timer, where we say,

76
00:04:58.785 --> 00:05:02.230
cool switch that interval
that's counting away.

77
00:05:02.230 --> 00:05:07.836
If it's false,
redirect to the NEVER observable.

78
00:05:07.836 --> 00:05:12.757
So now we have the ability to change
the flow based on other events

79
00:05:12.757 --> 00:05:15.230
that come through in this case.

