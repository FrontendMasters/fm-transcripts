WEBVTT

1
00:00:00.000 --> 00:00:04.789
All right, so our mission was to get
comfortable with timer interval I

2
00:00:04.789 --> 00:00:07.386
think we're all pros at this point and

3
00:00:07.386 --> 00:00:11.629
then the idea of subscribing
unsubscribing to observables.

4
00:00:11.629 --> 00:00:16.786
Now the we talked about this before
we lead into this which is we're

5
00:00:16.786 --> 00:00:22.682
gonna have to do things like store
the observable kinda in the module scope,

6
00:00:22.682 --> 00:00:25.001
kinda like the global scope.

7
00:00:25.001 --> 00:00:27.779
Because we don't have
the tools to kind of start and

8
00:00:27.779 --> 00:00:30.310
stop I talked a big game
with like generators.

9
00:00:30.310 --> 00:00:34.692
Which kinda this is in this case rice
generating a number at a regular interval.

10
00:00:34.692 --> 00:00:37.432
And again we could start we could stop and
we skip and

11
00:00:37.432 --> 00:00:39.865
could switch between
them we can do all that.

12
00:00:39.865 --> 00:00:43.889
Again we have not put that all
together in our tool set yet so

13
00:00:43.889 --> 00:00:48.916
our goal right now is just get
comfortable subscribing, subscribing.

14
00:00:48.916 --> 00:00:52.258
Dealing with the idea that we could have,
events coming from our,

15
00:00:52.258 --> 00:00:55.193
sort of a stream of observable
bands coming from a button.

16
00:00:55.193 --> 00:00:59.086
Setting all that up and
then we'll begin to kind of refine it and

17
00:00:59.086 --> 00:01:00.784
refactor it as we go along.

18
00:01:00.784 --> 00:01:04.878
So here we have a basic counter.

19
00:01:04.878 --> 00:01:11.892
And we wanna do is start by basically
listening to stuff on that.

20
00:01:11.892 --> 00:01:14.576
We wanna subscribe to events
that come from start button,

21
00:01:14.576 --> 00:01:17.440
we wanna subscribe to events
that come from the pause button.

22
00:01:17.440 --> 00:01:21.632
So in this case, we will say, Start,

23
00:01:26.595 --> 00:01:31.612
Subscribe, I'll pass that in a function.

24
00:01:31.612 --> 00:01:37.481
And in this case we will go ahead and
we'll create one up here.

25
00:01:42.590 --> 00:01:47.199
And we'll say when we go ahead and
we start we'll set the interval.

26
00:01:52.059 --> 00:01:55.935
And we'll subscribe to it as well and

27
00:01:55.935 --> 00:02:03.321
in this case we're going to call set
count and we need the dollar sign.

28
00:02:04.976 --> 00:02:12.200
And here we'll actually make
an interval in this case.

29
00:02:12.200 --> 00:02:17.726
Will subscribe to it and when they hit

30
00:02:17.726 --> 00:02:24.505
the pause button we'll go ahead and
we will,

31
00:02:34.147 --> 00:02:38.615
Right, and so
we should have that in place.

32
00:02:38.615 --> 00:02:42.535
And now we have this, and
let's go ahead and let's try it out.

33
00:02:42.535 --> 00:02:44.420
And iterates every second.

34
00:02:44.420 --> 00:02:47.198
Now we can pause it.

35
00:02:47.198 --> 00:02:50.348
And it starts over because we get a brand
new observable each time we're creating

36
00:02:50.348 --> 00:02:52.590
a new interval observable,
it starts in the same place.

37
00:02:52.590 --> 00:02:56.599
Now, this in this case is technically,
our subscription because

38
00:02:56.599 --> 00:03:01.050
this is creating the observable, and
we have subscribe up here, right?

39
00:03:01.050 --> 00:03:05.772
So really, what we could do is say,
I want one observable

40
00:03:09.420 --> 00:03:11.651
And that will store the subscription.

41
00:03:16.700 --> 00:03:23.577
And so take the same observable, And

42
00:03:23.577 --> 00:03:27.512
will subscribe and unsubscribe from it

43
00:03:33.109 --> 00:03:36.700
Both it feels a little weird with
the fact that we're storing this up here.

44
00:03:36.700 --> 00:03:40.621
But it's also not totally dissimilar from
thing we might store ,we might hold on to

45
00:03:40.621 --> 00:03:43.938
a subscription when react mounts
that component we might subscribe.

46
00:03:43.938 --> 00:03:48.120
When the component is about to
unmount we might unsubscribe from it.

47
00:03:48.120 --> 00:03:52.025
Use effect,
Angular has built in syntax for this.

48
00:03:52.025 --> 00:03:56.150
Spelt will, you wrap it slightly
to get it to both, subscribe and

49
00:03:56.150 --> 00:03:57.575
unsubscribe as well.

50
00:03:57.575 --> 00:03:59.640
And we've got the subscription.

51
00:03:59.640 --> 00:04:01.844
Now it'd be great if we
could actually like,

52
00:04:01.844 --> 00:04:05.208
kind of just take the difference of
events coming from the buttons and

53
00:04:05.208 --> 00:04:07.890
handle this all internally
in our observable stream.

54
00:04:07.890 --> 00:04:12.824
We're not totally there yet,
but we should be able to do it.

55
00:04:12.824 --> 00:04:14.220
Not too long from now.

