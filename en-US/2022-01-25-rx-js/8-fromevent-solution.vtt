WEBVTT

1
00:00:00.220 --> 00:00:02.730
So, yeah, super straightforward.

2
00:00:02.730 --> 00:00:08.109
Our job is to find the button,
create an observable

3
00:00:08.109 --> 00:00:13.550
from the button,
subscribe it to the button.

4
00:00:13.550 --> 00:00:18.957
And then upon subscribing,
whenever we hear an event,

5
00:00:18.957 --> 00:00:23.115
add a very simple notification to the DOM.

6
00:00:23.115 --> 00:00:25.911
So, we know that from event.

7
00:00:28.503 --> 00:00:32.611
Can take an HTML element and
then what we wanna listen for.

8
00:00:32.611 --> 00:00:35.498
Now the interesting part here is
just like an event listener will

9
00:00:35.498 --> 00:00:39.078
theoretically retrofitted to the event
whether or not you store in a variable or

10
00:00:39.078 --> 00:00:41.495
not, and then you have to do
all that stuff like cool.

11
00:00:41.495 --> 00:00:43.922
If you ever want to remove
that event listener,

12
00:00:43.922 --> 00:00:47.806
you better have stored that function
into a variable, so then you can remove

13
00:00:47.806 --> 00:00:52.155
the reference to that function from the
event listener, so on and so forth, right?

14
00:00:52.155 --> 00:00:57.374
From event seeks to protect you from all
of that fun stuff with event listeners and

15
00:00:57.374 --> 00:00:59.150
kind of encapsulate that.

16
00:00:59.150 --> 00:01:02.810
So now you can create your stream.

17
00:01:02.810 --> 00:01:06.274
You can subscribe and unsubscribe as
its own separate, then you'll get

18
00:01:06.274 --> 00:01:09.530
back an object that will allow you
to unsubscribe so on and so forth.

19
00:01:09.530 --> 00:01:12.770
So here, we'll say,
I'll call button clicks,

20
00:01:12.770 --> 00:01:16.410
that seems like a really good name for
this observable.

21
00:01:17.500 --> 00:01:23.090
And so what we'll say is,
we'll subscribe to it in this case.

22
00:01:23.090 --> 00:01:25.460
So button clicks, and will subscribe.

23
00:01:27.000 --> 00:01:30.820
And we'll say, when that happens,
we want to add the message to the Dom.

24
00:01:32.560 --> 00:01:35.835
Cool, all right, and so
let's just make sure that, that works.

25
00:01:35.835 --> 00:01:41.119
So we'll go here to generate observables
from events except I will use the one

26
00:01:41.119 --> 00:01:46.237
that is local cuz I use production 1,
what's gonna happen and we can see,

27
00:01:46.237 --> 00:01:51.273
we get what we think we're gonna get
here which is when the click happens,

28
00:01:51.273 --> 00:01:54.471
it will go ahead and
run the listener, right?

29
00:01:54.471 --> 00:01:59.110
We could theoretically take this and
do other things with it as well.

30
00:01:59.110 --> 00:02:03.510
So if we wanted to go in here and
we wanted to say, okay,

31
00:02:03.510 --> 00:02:08.007
not only that, but I would also,
log it to the console or

32
00:02:08.007 --> 00:02:12.350
we could even alert, yeah,
let's alert, why not.

33
00:02:18.494 --> 00:02:22.057
Alright, so
we have one stream of events happening and

34
00:02:22.057 --> 00:02:25.783
then we can subscribe 2 to
multiple things in this case.

35
00:02:28.524 --> 00:02:35.809
So now we'll go ahead, we'll refresh,
you can see that I get the alert and

36
00:02:35.809 --> 00:02:40.448
also I get the notification
on the page as well.

37
00:02:40.448 --> 00:02:45.005
So as a bunch of other things that
we'll do as time goes on like clearly

38
00:02:45.005 --> 00:02:49.878
the ability to click buttons and interact
with the UI is a thing that is kind

39
00:02:49.878 --> 00:02:53.689
of core to what we all do,
building user interfaces.

40
00:02:53.689 --> 00:02:56.165
So we will kind of play with
this more in a little bit.

41
00:02:56.165 --> 00:02:57.052
But right now,

42
00:02:57.052 --> 00:03:01.359
we're kind of just building up that
tool set of fundamentals in this case.

