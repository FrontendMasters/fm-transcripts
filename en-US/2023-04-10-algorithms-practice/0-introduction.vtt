WEBVTT

1
00:00:00.440 --> 00:00:01.870
I'm thrilled to be back.

2
00:00:01.870 --> 00:00:04.030
Thank you for joining live, online.

3
00:00:04.030 --> 00:00:07.210
Thank you for joining virtually
later through recordings.

4
00:00:07.210 --> 00:00:09.350
It's fantastic to have you here.

5
00:00:09.350 --> 00:00:13.377
Thank you to the Frontend Masters' staff
who I quite literally owe my career to

6
00:00:13.377 --> 00:00:16.793
because I got my start teaching
because Mark called me up one day and

7
00:00:16.793 --> 00:00:18.750
he was like, come up here and teach.

8
00:00:18.750 --> 00:00:22.825
And it took me a few weeks to convince
myself I'd come up to cold Minnesota in

9
00:00:22.825 --> 00:00:24.131
November, December.

10
00:00:24.131 --> 00:00:29.760
But I came up here and
my whole career blossomed from doing that.

11
00:00:29.760 --> 00:00:35.280
So, I thank Mark and his staff for
all the fantastic stuff that they've done.

12
00:00:35.280 --> 00:00:37.040
They're the best in the business.

13
00:00:37.040 --> 00:00:39.400
I teach exclusively at Frontend Masters.

14
00:00:39.400 --> 00:00:41.880
I don't record anywhere else
because they're the best.

15
00:00:41.880 --> 00:00:45.632
So, there's lots of my courses
on here that you can find and

16
00:00:45.632 --> 00:00:50.090
some really fantastic other
courses on Frontend Masters.

17
00:00:50.090 --> 00:00:54.192
I watched some of the algorithms
courses that other teachers have done,

18
00:00:54.192 --> 00:00:58.092
just to get a sense of what's being
presented, making sure that I'm

19
00:00:58.092 --> 00:01:01.678
presenting things both consistently but
also in my own voice.

20
00:01:01.678 --> 00:01:04.620
So there's some really fantastic ones.

21
00:01:04.620 --> 00:01:06.871
I think one actually
just came out recently,

22
00:01:06.871 --> 00:01:10.740
ThePrimeagen how to algorithms course,
it was really fantastic.

23
00:01:10.740 --> 00:01:14.240
So, check out all of those great
resources on here as well.

24
00:01:15.800 --> 00:01:20.061
All right, so
just as some recommended reading,

25
00:01:20.061 --> 00:01:25.620
depends on kind of your
background with computer science.

26
00:01:25.620 --> 00:01:29.635
I feel like a lot of times people
get upset with this general topic,

27
00:01:29.635 --> 00:01:34.295
because the first Google that you do and
you land on a Wikipedia page, and they

28
00:01:34.295 --> 00:01:38.763
start throwing a bunch of mathematical
symbols or complex terminology.

29
00:01:38.763 --> 00:01:41.728
And it might feel like this
general idea of algorithms and

30
00:01:41.728 --> 00:01:45.920
data structures is hard unless you
have some sort of formal background.

31
00:01:45.920 --> 00:01:50.070
I do have a computer science background,
but it's 25 years old at this point.

32
00:01:50.070 --> 00:01:54.228
So, I think at least half if not
the majority of my skills in this

33
00:01:54.228 --> 00:01:58.934
area are the practical on the job
skills rather than all the theoretical

34
00:01:58.934 --> 00:02:01.440
stuff you get taught in school.

35
00:02:01.440 --> 00:02:06.055
And what I hope you take away from that is
that not that education isn't helpful, but

36
00:02:06.055 --> 00:02:07.605
that it's not requisite.

37
00:02:07.605 --> 00:02:10.748
It's not a requirement that
you've gone through some sort of

38
00:02:10.748 --> 00:02:13.625
hardcore course to be
able to learn this stuff.

39
00:02:13.625 --> 00:02:15.395
And I found these books
a couple of years ago.

40
00:02:15.395 --> 00:02:18.817
I've started with the Computer Science
Distilled and then a couple years later,

41
00:02:18.817 --> 00:02:20.895
the unleashed one came out.

42
00:02:20.895 --> 00:02:23.908
I'm not even gonna try to pronounce
this guy's name because I'm sure I'll

43
00:02:23.908 --> 00:02:24.860
butcher it.

44
00:02:24.860 --> 00:02:30.093
But the books are fantastic,
especially the Computer Science Distilled,

45
00:02:30.093 --> 00:02:34.998
it really is like, if you have
a computer science background then it's

46
00:02:34.998 --> 00:02:38.861
a review of those things it
sort of hits the high topics.

47
00:02:38.861 --> 00:02:40.411
And say, yeah I remember,

48
00:02:40.411 --> 00:02:43.513
red black tree or
I remember this kind of sword or whatever.

49
00:02:43.513 --> 00:02:46.780
But it doesn't get too into the weeds,
it's an outline.

50
00:02:46.780 --> 00:02:50.760
It's a roadmap of the things that you
might wanna go back and check on.

51
00:02:50.760 --> 00:02:53.439
If you don't have a computer
science background,

52
00:02:53.439 --> 00:02:57.613
it's actually a really fantastic outline
of things that you could go dig into to

53
00:02:57.613 --> 00:03:02.180
learn computer science without having gone
through, say a four year college degree.

54
00:03:02.180 --> 00:03:05.439
So, I really highly recommend that book.

55
00:03:05.439 --> 00:03:10.369
And a lot of the things that I use in sort
of a practical sense are founded in things

56
00:03:10.369 --> 00:03:13.150
that you might read in this book.

57
00:03:13.150 --> 00:03:15.211
So, by the name, it's both theory and

58
00:03:15.211 --> 00:03:19.030
practice and I think that's really
kind of the way to go with this stuff.

59
00:03:19.030 --> 00:03:20.652
So, I recommend those books.

60
00:03:20.652 --> 00:03:23.518
I don't have any affiliate links,
I'm not getting anything for it.

61
00:03:23.518 --> 00:03:27.250
But I do think those are very
useful books to read.

62
00:03:27.250 --> 00:03:30.340
A couple of disclaimers,
I kind of already have hinted at this.

63
00:03:30.340 --> 00:03:35.164
But the other courses that Frontend
Masters has and other resources that you

64
00:03:35.164 --> 00:03:39.532
find out there in the world,
tend to take a pretty straightforward,

65
00:03:39.532 --> 00:03:43.099
what I would call almost
an academic lecture approach.

66
00:03:43.099 --> 00:03:47.890
And I don't mean this in a disparaging
way, but there's kind of a standard set of

67
00:03:47.890 --> 00:03:52.472
topics that you're supposed to go over
that map similar to what you learn in,

68
00:03:52.472 --> 00:03:56.138
your first couple of semesters
of a computer science degree,

69
00:03:56.138 --> 00:03:58.206
taking data structures courses.

70
00:03:58.206 --> 00:04:02.752
And I want you to think of
this course as not that.

71
00:04:02.752 --> 00:04:05.643
There are other great courses,
again, Theprimeagen and

72
00:04:05.643 --> 00:04:08.005
others, other great
courses on those topics.

73
00:04:08.005 --> 00:04:10.137
This I want you to think of
more like your lab course.

74
00:04:10.137 --> 00:04:14.711
If you've taken a college course where
you had to do a lecture and a lab,

75
00:04:14.711 --> 00:04:18.233
I want you to think of this
one more like the lab course.

76
00:04:18.233 --> 00:04:24.946
Second disclaimer might
ruffle a bit of feathers.

77
00:04:24.946 --> 00:04:29.340
But we're using JavaScript, but
I'm like, we have to use JavaScript.

78
00:04:29.340 --> 00:04:31.351
I'm not like, I want to use JavaScript,

79
00:04:31.351 --> 00:04:33.716
this is absolutely the right language for
this.

80
00:04:33.716 --> 00:04:38.587
It's the most widespread language, and
I don't think anybody can deny that.

81
00:04:38.587 --> 00:04:45.288
And I've built an entire career
being happy with JavaScript.

82
00:04:45.288 --> 00:04:50.321
Personally, I kind of consider myself in
a transition point to post JavaScript.

83
00:04:50.321 --> 00:04:51.740
But JavaScript is gonna be around, and

84
00:04:51.740 --> 00:04:54.715
I'm gonna be writing JavaScript until
the end of my career, I'm quite certain.

85
00:04:54.715 --> 00:04:59.377
So, we have to use JavaScript,
it's a great language.

86
00:04:59.377 --> 00:05:00.457
There are pros and

87
00:05:00.457 --> 00:05:04.562
cons to us taking on a topic like
this in a language like JavaScript.

88
00:05:04.562 --> 00:05:09.096
One of the pros is its accessibility,
is how easy it is to get things done.

89
00:05:09.096 --> 00:05:13.477
How much of the underlying mechanisms
you don't have to worry about because

90
00:05:13.477 --> 00:05:17.182
JavaScript the language is taking
care of those things for you.

91
00:05:17.182 --> 00:05:21.135
And that goes for garbage collection,
it goes for typing, it goes for

92
00:05:21.135 --> 00:05:22.341
all kinds of things.

93
00:05:22.341 --> 00:05:26.688
The downside to that is that most of
the theory behind data structures and

94
00:05:26.688 --> 00:05:31.046
algorithms is based on you being able
to have control over those things.

95
00:05:31.046 --> 00:05:34.444
So, it doesn't mean that none
of its applicable to JavaScript.

96
00:05:34.444 --> 00:05:39.221
But for example, there are algorithms
that are written specifically because

97
00:05:39.221 --> 00:05:44.210
they know that in a language where memory
is contiguously marked and you go from one

98
00:05:44.210 --> 00:05:48.795
place to another in an array,
then those are contiguous memory segments.

99
00:05:48.795 --> 00:05:53.066
And accessing the next element in
the array is basically a no-op,

100
00:05:53.066 --> 00:05:55.822
it's just a single addition of a pointer.

101
00:05:55.822 --> 00:05:58.973
They're based on that sort
of internal knowledge.

102
00:05:58.973 --> 00:06:01.782
And we would apply the same
algorithm to JavaScript, and

103
00:06:01.782 --> 00:06:03.715
while we might get great performance,

104
00:06:03.715 --> 00:06:07.594
we're not gonna get the performance
that the algorithm designers intended.

105
00:06:07.594 --> 00:06:10.644
Because we're not using at all
the same kind of mechanism,

106
00:06:10.644 --> 00:06:13.764
we're several levels higher
in abstraction at that point.

107
00:06:13.764 --> 00:06:17.805
So, do take with a bit of a grain of
salt when you get into those hardcore

108
00:06:17.805 --> 00:06:18.637
algorithms.

109
00:06:18.637 --> 00:06:20.782
I'm talking about things like
quicksort and stuff like that.

110
00:06:20.782 --> 00:06:24.550
If you get into the deepness
of these algorithms,

111
00:06:24.550 --> 00:06:29.304
you do have to take with a grain of
salt that what you are coding in

112
00:06:29.304 --> 00:06:34.240
JavaScript may functionally work,
but may not have the same kind

113
00:06:34.240 --> 00:06:38.571
of characteristics that
the original design intended.

114
00:06:38.571 --> 00:06:42.712
Another example is, it may be easy for
you to code an algorithm where you create

115
00:06:42.712 --> 00:06:46.382
an array and return it and then spread
that array into a bigger array.

116
00:06:46.382 --> 00:06:51.576
And that's just sort of, it seems in
the JavaScript world as a free operation,

117
00:06:51.576 --> 00:06:56.550
but you're creating a tremendous
amount of garbage collection pressure.

118
00:06:56.550 --> 00:07:00.200
And that's something that the designers of
many of the classical algorithms never had

119
00:07:00.200 --> 00:07:00.902
to worry about.

120
00:07:00.902 --> 00:07:04.892
They did not worry that, right in
the middle of my really fast operation,

121
00:07:04.892 --> 00:07:08.893
it's gonna throw up a garbage collector
that blocks the thread or something.

122
00:07:08.893 --> 00:07:12.827
So, there are lots of balances that we
have to take, which is again why I treat

123
00:07:12.827 --> 00:07:15.929
this more like a lab course than
a theory or academic course.

124
00:07:15.929 --> 00:07:20.262
Lots of balances that we have to play
between the processing and the memory.

125
00:07:20.262 --> 00:07:23.596
In fact, we'll get into some of that
kind of memory management stuff

126
00:07:23.596 --> 00:07:25.094
in a garbage collected world.

127
00:07:25.094 --> 00:07:29.121
Those are things that, the original
founders of, data structures science and

128
00:07:29.121 --> 00:07:32.909
computer science, they wouldn't have
even needed to concern themselves

129
00:07:32.909 --> 00:07:36.660
with because they used systems that
didn't have those same properties.

130
00:07:36.660 --> 00:07:39.574
So, that's what I mean when I
sort of shrug and say, man,

131
00:07:39.574 --> 00:07:42.504
we have to use JavaScript,
we're gonna use JavaScript.

132
00:07:42.504 --> 00:07:46.841
I don't have anything, I don't hold
any grudges against JavaScript,

133
00:07:46.841 --> 00:07:49.400
but in a perfect world, you'd probably be

134
00:07:49.400 --> 00:07:53.894
tackling the learning of this through
one of those lower level languages.

135
00:07:53.894 --> 00:07:57.365
But then again, 99% of us aren't
gonna go learn those languages.

136
00:07:57.365 --> 00:08:02.551
So, we don't wanna be stuck and
gate kept out of the knowledge of this and

137
00:08:02.551 --> 00:08:06.974
there's plenty to be gained from
applying proper thinking in

138
00:08:06.974 --> 00:08:11.241
whatever layer of abstraction
you're working in, okay?

139
00:08:11.241 --> 00:08:14.935
So just, so you're aware, keep those
caveats in mind as we go forward.

