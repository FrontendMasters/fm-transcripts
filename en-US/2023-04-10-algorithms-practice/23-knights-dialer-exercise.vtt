WEBVTT

1
00:00:00.000 --> 00:00:03.800
Hopefully, at the midway
point through our exercises,

2
00:00:03.800 --> 00:00:07.761
you're starting to develop
a little bit more confidence,

3
00:00:07.761 --> 00:00:12.534
a little less tenseness over tackling
these algorithmic challenges.

4
00:00:12.534 --> 00:00:17.581
And hopefully,
the takeaway that you're getting here is

5
00:00:17.581 --> 00:00:23.356
that there's no writing the big
algorithm all at once, top down.

6
00:00:23.356 --> 00:00:28.498
That it's always a tiny little series of
increments and improvements and additions.

7
00:00:28.498 --> 00:00:31.261
It's little tiny Lego pieces that
we build on top of each other.

8
00:00:31.261 --> 00:00:32.980
And that's how you see
me writing the code.

9
00:00:32.980 --> 00:00:36.436
That's exactly the best
that I can recommend for

10
00:00:36.436 --> 00:00:39.311
you as algorithmists as you go forward.

11
00:00:41.990 --> 00:00:46.471
We're gonna transition
into the next exercise,

12
00:00:46.471 --> 00:00:49.679
which is called Knight's Dialer.

13
00:00:49.679 --> 00:00:54.777
This is a classic problem, and it has been

14
00:00:54.777 --> 00:01:00.908
used in various big name
company job interviews.

15
00:01:00.908 --> 00:01:05.911
FAANG-type companies have, at one time or
another, used problems like this.

16
00:01:05.911 --> 00:01:09.992
So it's one of the classic ones,
and there are in fact linked in

17
00:01:09.992 --> 00:01:13.777
the project repo on this workshop,
linked in the readme.

18
00:01:13.777 --> 00:01:18.339
There's a link to a series of blog
post that an interviewer from

19
00:01:18.339 --> 00:01:22.140
Amazon wrote about it and
about ways to approach it.

20
00:01:22.140 --> 00:01:25.339
So I recommend you go and check those out,

21
00:01:25.339 --> 00:01:29.555
read through those as further
research on this topic.

22
00:01:29.555 --> 00:01:33.120
I've put put my own little
twist on the Knight's Dialer,

23
00:01:33.120 --> 00:01:37.650
and I think it's gonna provide some nice,
meaty stuff for us to dig into.

24
00:01:37.650 --> 00:01:41.449
And so, we'll be settled into
this exercise for a while.

25
00:01:41.449 --> 00:01:45.429
There are several different
concepts that we wanna explore.

26
00:01:45.429 --> 00:01:49.717
And we will push the envelope quite a bit,
but you're on firm ground now.

27
00:01:49.717 --> 00:01:52.818
So even though it might start
to look a little unfamiliar,

28
00:01:52.818 --> 00:01:55.360
don't lose that confidence,
you can do this.

29
00:01:57.600 --> 00:01:59.440
What is the Knight's Dialer?

30
00:01:59.440 --> 00:02:02.497
Building off of the concept
of the chessboard before,

31
00:02:02.497 --> 00:02:04.698
it's kind of a nice little extension.

32
00:02:04.698 --> 00:02:09.937
What if of our chessboard was actually the
numeric keypad from an old-school phone?

33
00:02:09.937 --> 00:02:15.626
I'm old enough to remember when phones
actually had push buttons like this.

34
00:02:15.626 --> 00:02:21.022
And I remember that there were phones that
didn't even have the little asterisk and

35
00:02:21.022 --> 00:02:25.899
the star button, they were literally
just blank spaces like you see here.

36
00:02:25.899 --> 00:02:29.243
So this is the theoretical setup,
obviously,

37
00:02:29.243 --> 00:02:34.018
it's kind of a silly example,
it sits in a more theoretical space.

38
00:02:34.018 --> 00:02:38.873
But it is gonna help us to learn
a lot of different concepts

39
00:02:38.873 --> 00:02:41.514
within the broader DSA space.

40
00:02:41.514 --> 00:02:45.932
The premise of this problem
is the knight piece,

41
00:02:45.932 --> 00:02:50.691
the K-N-I-G-H-T piece,
in the game of chess.

42
00:02:50.691 --> 00:02:53.745
For those of you that
are familiar with chess,

43
00:02:53.745 --> 00:02:58.302
you know that the knight moves in
an L pattern, one over and two down.

44
00:02:58.302 --> 00:03:03.701
And so we might think of the knight if
it were moving on a numeric keypad.

45
00:03:03.701 --> 00:03:08.431
If it started on the 1 key, it might
move from the one key over to the 6 key,

46
00:03:08.431 --> 00:03:11.530
or it might move from the 1
key down to the 8 key.

47
00:03:11.530 --> 00:03:15.257
Those are the two places
that you could move as

48
00:03:15.257 --> 00:03:18.309
a knight if you started on the 1 key.

49
00:03:18.309 --> 00:03:20.219
Hopefully that make sense.

50
00:03:20.219 --> 00:03:22.914
If you start on the 6 key,
where can you move?

51
00:03:26.618 --> 00:03:29.488
&gt;&gt; 7, 1 or 0.

52
00:03:29.488 --> 00:03:30.608
&gt;&gt; Not 4?

53
00:03:33.148 --> 00:03:34.198
You said 4?

54
00:03:34.198 --> 00:03:35.788
&gt;&gt; No, 7, 1 or 0.

55
00:03:35.788 --> 00:03:38.049
&gt;&gt; You said or 0, I thought you said 4, 0.

56
00:03:38.049 --> 00:03:39.707
[LAUGH]
&gt;&gt; I'm gonna show the action.

57
00:03:39.707 --> 00:03:43.747
&gt;&gt; Correct 7,1 and also 0.

58
00:03:43.747 --> 00:03:46.856
0 is a valid move, okay?

59
00:03:46.856 --> 00:03:49.078
So what about the 5 key?

60
00:03:49.078 --> 00:03:50.818
If you're on the 5 key,
where can you move?

61
00:03:56.561 --> 00:03:59.951
No one, not a trick question,
it's pretty straightforward.

62
00:03:59.951 --> 00:04:02.419
There's nowhere to move
if you're on the 5 key.

63
00:04:02.419 --> 00:04:06.489
And vice versa, there's no other
key that could move to the 5 key.

64
00:04:06.489 --> 00:04:07.915
So we could have just left it out, but

65
00:04:07.915 --> 00:04:10.138
then that would have looked
like a really weird dial pad.

66
00:04:10.138 --> 00:04:13.104
So we leave it in,
even though we're all gonna admit and

67
00:04:13.104 --> 00:04:16.144
agree the 5 key doesn't really
matter in this problem.

68
00:04:16.144 --> 00:04:22.187
So there are ten numbers, but really only
nine of them actually matter, you with me?

69
00:04:22.187 --> 00:04:29.537
All right, the key question
that we need to start with is,

70
00:04:29.537 --> 00:04:33.440
what are the nearby keys to me?

71
00:04:33.440 --> 00:04:37.346
In other words, what are the places
that I can move, if I'm on the 1 key,

72
00:04:37.346 --> 00:04:39.150
the answer is 6 and 8.

73
00:04:39.150 --> 00:04:43.494
If I'm on the 2 key, the answer is 7 and
9, if I'm on the 6 key,

74
00:04:43.494 --> 00:04:45.640
it's 1, 7, and 0, right?

75
00:04:45.640 --> 00:04:49.794
So this notion of determining what are my
nearby keys, that's gonna be one core

76
00:04:49.794 --> 00:04:52.895
thing that we need to solve,
that'll be one of our things.

77
00:04:52.895 --> 00:04:57.005
And indeed, if you look at the code in
the repo, you'll see there's a todo for

78
00:04:57.005 --> 00:04:59.140
us to figure out what are my nearby keys.

79
00:05:00.630 --> 00:05:04.982
The second part of the problem
is knowing that information,

80
00:05:04.982 --> 00:05:07.553
once I know what my nearby keys are.

81
00:05:07.553 --> 00:05:11.865
If I started on any given key,
like the 1 key, and

82
00:05:11.865 --> 00:05:18.057
I told you that you could make
a certain number of hops, like 4 or 20.

83
00:05:18.057 --> 00:05:22.696
What are all of the possible
different paths that you might

84
00:05:22.696 --> 00:05:25.069
take making all those jumps?

85
00:05:25.069 --> 00:05:28.423
In fact,
how many different paths could you take,

86
00:05:28.423 --> 00:05:32.793
if you started on a given key and
you made a certain number of jumps?

87
00:05:32.793 --> 00:05:37.530
And the first thing that you should
observe about that is that I

88
00:05:37.530 --> 00:05:41.278
could start on the 1 key and
jump to the 6th key.

89
00:05:41.278 --> 00:05:45.238
And then I could jump right back to
the 1 key, that's a totally valid move.

90
00:05:45.238 --> 00:05:49.380
So given only the count of
hops that I can take and

91
00:05:49.380 --> 00:05:54.249
the starting key,
tell me the count of how many possible

92
00:05:54.249 --> 00:05:58.718
different paths I could
take around this dial pad.

93
00:05:58.718 --> 00:06:01.757
That's the classic statement
of the Knight's Dialer.

94
00:06:01.757 --> 00:06:04.936
It's a counting problem, you with me?

95
00:06:04.936 --> 00:06:08.619
We're not really asking you to draw out
all the pads or anything like that,

96
00:06:08.619 --> 00:06:11.555
list them all out,
we're simply asking you to count them.

97
00:06:11.555 --> 00:06:16.185
There are a lot of counting problems in
algorithmics, and this is one of them.

98
00:06:18.136 --> 00:06:22.679
But here's where I've extended things
because there's a third kind of problem

99
00:06:22.679 --> 00:06:26.040
that we might tackle within
the scope of Knight's Dialer.

100
00:06:26.040 --> 00:06:30.720
It's one that I find more
interesting even than the counting.

101
00:06:30.720 --> 00:06:35.382
Which is, what are the paths
that I can take from any

102
00:06:35.382 --> 00:06:40.379
given starting key without
ever hitting any repeats?

103
00:06:43.019 --> 00:06:45.815
In other words,
I'm not gonna allow 1, 6, 1.

104
00:06:45.815 --> 00:06:49.809
I'm gonna have to go from 1, 6, and
then to 7, and then to 2, and then to 9.

105
00:06:49.809 --> 00:06:50.958
What are those paths?

106
00:06:50.958 --> 00:06:52.438
How many of those are there?

107
00:06:52.438 --> 00:06:54.188
You with me?

108
00:06:54.188 --> 00:06:57.689
That's an extension to this problem
that is not part of the normal classical

109
00:06:57.689 --> 00:06:59.669
statement, but we're gonna track that.

110
00:06:59.669 --> 00:07:03.335
So that'll be our third
part of this problem,

111
00:07:03.335 --> 00:07:06.440
is we want to compute the unique paths.

112
00:07:06.440 --> 00:07:11.130
Or there's another way of saying this
in DSA and computer science terms.

113
00:07:11.130 --> 00:07:16.757
Which is to say that the paths that we're
counting are what we call cyclic paths,

114
00:07:16.757 --> 00:07:18.592
meaning we allow cycles.

115
00:07:18.592 --> 00:07:22.609
And we also want to enumerate,
or go through,

116
00:07:22.609 --> 00:07:28.280
all of the acyclic paths,
meaning paths that do not have cycles.

117
00:07:28.280 --> 00:07:32.335
So we are counting the cyclic
paths because there are many,

118
00:07:32.335 --> 00:07:34.697
many, many, many more of those.

119
00:07:34.697 --> 00:07:38.709
And we're going to actually
enumerate acyclic paths,

120
00:07:38.709 --> 00:07:42.133
cuz it's actually very
small number of those.

121
00:07:42.133 --> 00:07:46.702
If you think about it, there's only
nine possible numbers to jump to.

122
00:07:46.702 --> 00:07:52.651
So what is the longest possible
acyclic path, 9, right?

123
00:07:54.991 --> 00:07:57.953
That's the longest possible,
actually eight jumps, but

124
00:07:57.953 --> 00:07:59.681
nine numbers that we would visit.

125
00:07:59.681 --> 00:08:02.461
That's the longest possible path, so

126
00:08:02.461 --> 00:08:07.359
we want to list out all of those
acyclic paths from a starting number.

