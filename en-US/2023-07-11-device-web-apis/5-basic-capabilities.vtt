WEBVTT

1
00:00:00.150 --> 00:00:04.940
Let's start talking about basic
capabilities that we won't cover today.

2
00:00:04.940 --> 00:00:09.000
And I will explain why we are not
going to cover this today.

3
00:00:09.000 --> 00:00:12.790
First, how many capabilities
do we have on the web?

4
00:00:12.790 --> 00:00:16.696
Hundreds, actually,
because even without counting CSS,

5
00:00:16.696 --> 00:00:19.157
just talking about JavaScript APIs.

6
00:00:19.157 --> 00:00:23.384
How many APIs are we going to
cover today in this workshop?

7
00:00:23.384 --> 00:00:30.560
36, so we will spend minutes talking
about 36 different capabilities.

8
00:00:30.560 --> 00:00:35.173
But there are a lot of other
capabilities that are more core, or

9
00:00:35.173 --> 00:00:41.130
more on the edge, like use cases,
that we are not going to cover today.

10
00:00:41.130 --> 00:00:43.910
I will just mention that that exists,
and that's all.

11
00:00:43.910 --> 00:00:48.387
And for the basic capabilities, you have
the Frontend Masters library that you know

12
00:00:48.387 --> 00:00:52.121
is the best library out there to
learn about web development, right?

13
00:00:52.121 --> 00:00:59.147
And you will find a lot of information and
experience with those APIs.

14
00:00:59.147 --> 00:01:02.560
And that's, for example,
using the Fetch API for networking.

15
00:01:02.560 --> 00:01:04.670
Web Workers for threading.

16
00:01:04.670 --> 00:01:08.370
Remember, we are not going
to talk about these today.

17
00:01:08.370 --> 00:01:13.530
WebAssembly, that lets you
run WebAssembly modules that

18
00:01:13.530 --> 00:01:19.532
are actually native code that you
can write with a lot of languages,

19
00:01:19.532 --> 00:01:23.680
from C to Kotlin, to Swift, to TypeScript.

20
00:01:23.680 --> 00:01:28.470
You compile that into native code and
then you can run it natively.

21
00:01:28.470 --> 00:01:32.550
So WebSockets,
that's how to open the socket to a server.

22
00:01:32.550 --> 00:01:35.660
WebRTC, real-time communication.

23
00:01:35.660 --> 00:01:36.721
Web performance APIs,

24
00:01:36.721 --> 00:01:40.280
I have another workshop here at
Frontend Masters on web performance.

25
00:01:40.280 --> 00:01:45.176
The network information API that will let
you know if you are connected through

26
00:01:45.176 --> 00:01:48.400
Wi-Fi, 4G, if you're offline or not.

27
00:01:48.400 --> 00:01:53.540
Device memory that's,
how much RAM do you have in the computer?

28
00:01:53.540 --> 00:01:54.563
That's very specific.

29
00:01:54.563 --> 00:01:58.604
WebOTP, that's a one-time password.

30
00:01:58.604 --> 00:02:01.490
I'm not sure if you've ever heard
about that, one-time password?

31
00:02:01.490 --> 00:02:05.251
So that's when you get an SMS
with a confirmation code,

32
00:02:05.251 --> 00:02:07.980
when you are signing up in your website.

33
00:02:09.570 --> 00:02:14.143
There is an API now that can read the code
from the SMS, from JavaScript, so

34
00:02:14.143 --> 00:02:18.807
then you don't need the user to go to
the messages, copy and paste the code.

35
00:02:18.807 --> 00:02:21.730
And so that's an API for doing that.

36
00:02:21.730 --> 00:02:25.540
Web crypto that has nothing to do with
cryptocurrencies or the blockchain.

37
00:02:25.540 --> 00:02:29.314
It's had to do with cryptography,
the original cryptography,

38
00:02:29.314 --> 00:02:31.927
that if you wanna encrypt or
decrypt, okay?

39
00:02:31.927 --> 00:02:37.869
Things, so we are not going
to cover these capabilities.

40
00:02:37.869 --> 00:02:41.795
Also we won't cover storage capabilities,
why?

41
00:02:41.795 --> 00:02:46.739
Because in Frontend Masters you
already have another course on this,

42
00:02:46.739 --> 00:02:50.359
and probably you know that
guy that appears there.

43
00:02:50.359 --> 00:02:53.685
So there is a Web Storage APIs
course that I did,

44
00:02:53.685 --> 00:02:57.762
that there we cover web storage,
that's local storage,

45
00:02:57.762 --> 00:03:02.604
IndexedDB, cache storage, and
how to access the real FileSystem.

46
00:03:02.604 --> 00:03:05.863
So how to open files and
write files in the FileSystem.

47
00:03:05.863 --> 00:03:09.100
So we won't touch those APIs today.

48
00:03:11.050 --> 00:03:16.477
Also, we won't be covering today a lot of
UI capabilities that can be around CSS,

49
00:03:16.477 --> 00:03:20.110
or things around, for
example, web components.

50
00:03:20.110 --> 00:03:26.409
If you're interested in that,
I also did a workshop on Vanilla JS.

51
00:03:26.409 --> 00:03:29.217
CSS, we won't cover that, or Canvas,

52
00:03:29.217 --> 00:03:33.440
it's an API to render graphics
on the screen, low-level.

53
00:03:33.440 --> 00:03:38.780
WebGL for 3D, pointer lock,
this is typically for gaming.

54
00:03:38.780 --> 00:03:42.166
In that case, you can use your mouse or
your trackpad and

55
00:03:42.166 --> 00:03:44.660
you won't see the cursor anymore.

56
00:03:44.660 --> 00:03:49.953
You can use that to just move, for
example, a viewpoint in a game.

57
00:03:49.953 --> 00:03:51.247
So that's pointer lock.

58
00:03:51.247 --> 00:03:56.109
A screen capture that will let you, for
example, if you are doing a meet or

59
00:03:56.109 --> 00:04:01.100
a Zoom call, and you wanna share
your screen, that's how that works.

60
00:04:01.100 --> 00:04:03.600
So there is an API that
will capture your screen.

61
00:04:04.760 --> 00:04:06.940
So we won't cover that.

62
00:04:06.940 --> 00:04:10.760
Also, we won't cover
basic PWA capabilities.

63
00:04:10.760 --> 00:04:14.030
Don't worry, we have a lot of capabilities
that are pretty cool that we will see.

64
00:04:14.030 --> 00:04:15.893
It's not just negative stuff here.

65
00:04:15.893 --> 00:04:20.916
So on Frontend Masters after
this course you can go get my,

66
00:04:20.916 --> 00:04:27.376
Build PWA from Scratch course where
you will learn about service workers,

67
00:04:27.376 --> 00:04:32.396
the Web App Manifest that will
let you create a PWA that will

68
00:04:32.396 --> 00:04:37.035
install an icon on a user's
computer as a native app.

69
00:04:37.035 --> 00:04:42.131
Background capabilities, so can we
execute JavaScript in the background?

70
00:04:42.131 --> 00:04:46.614
So there are a couple of APIs
that we took in another workshop,

71
00:04:46.614 --> 00:04:49.120
a full day on that, okay?

72
00:04:49.120 --> 00:04:53.284
So that's page visibility, background
sync, that will let you execute or

73
00:04:53.284 --> 00:04:54.920
sync data in the background.

74
00:04:54.920 --> 00:05:00.488
So if the user is closing your web app,
or even if it's closing the browser,

75
00:05:00.488 --> 00:05:04.670
background fetch, and
even web push and notification.

76
00:05:04.670 --> 00:05:09.611
So if you wanna send a notification from
the server to your users while the user is

77
00:05:09.611 --> 00:05:13.178
not even using your app, well,
there is an API for that.

78
00:05:13.178 --> 00:05:14.758
It's called Web Push, okay?

79
00:05:14.758 --> 00:05:18.827
And it has its own unique problems,
advantages.

80
00:05:18.827 --> 00:05:22.714
Now it's available on iOS as well,
only for PWAs.

81
00:05:22.714 --> 00:05:24.942
Well, if you wanna get more into that, so

82
00:05:24.942 --> 00:05:29.230
you have JavaScript in the background
workshop at Frontend Masters as well.

83
00:05:29.230 --> 00:05:32.830
It's a full day on that topic.

84
00:05:32.830 --> 00:05:33.996
And again here,

85
00:05:33.996 --> 00:05:40.006
I'm just listing a lot of capabilities
that I'm not saying they're not important.

86
00:05:40.006 --> 00:05:47.767
But in fact they are important enough to
have a full day only on those APIs, okay?

87
00:05:47.767 --> 00:05:53.772
Media session, as well, that's how you can
play audio or video in the background,

88
00:05:53.772 --> 00:05:58.013
and have controls even if the user
gets out of your website.

89
00:05:58.013 --> 00:06:00.467
You can continue playing in
the background and then for

90
00:06:00.467 --> 00:06:02.182
example you can use your Apple Watch.

91
00:06:02.182 --> 00:06:08.440
Or if you're in a car, you can use
Android Auto or CarPlay from iOS.

92
00:06:08.440 --> 00:06:13.383
And then stop, pause, and
play with your audio from the car to your

93
00:06:13.383 --> 00:06:17.550
web app that is currently
being executed in your phone.

94
00:06:19.120 --> 00:06:22.196
Security capabilities,
also we won't cover.

95
00:06:22.196 --> 00:06:27.189
I think this is the last workshop that
I'm promoting from Frontend Masters

96
00:06:27.189 --> 00:06:27.990
that I did.

97
00:06:27.990 --> 00:06:33.199
For example, if you want web
authentication, that for example,

98
00:06:33.199 --> 00:06:38.221
it's a new way that we have today
on the web to log in into websites

99
00:06:38.221 --> 00:06:43.906
without passwords, what is known
as password-less authentication.

100
00:06:43.906 --> 00:06:46.270
So if you wanna see how to do that,

101
00:06:46.270 --> 00:06:50.070
that's a very nice capability
on the web these days,

102
00:06:50.070 --> 00:06:56.159
that lets you use credential management so
you can store credentials client-side.

103
00:06:56.159 --> 00:07:01.250
It's like storage for credentials,
like username and password, for example.

104
00:07:01.250 --> 00:07:05.100
And you can use these for, for
example, face ID with your iPhone.

105
00:07:05.100 --> 00:07:10.836
So if you wanna log in your users in
your website with face ID, or touch ID,

106
00:07:10.836 --> 00:07:16.810
or Windows Hello on desktop,
then you can use those APIs, okay?

107
00:07:16.810 --> 00:07:20.670
That's a huge capability API
that you have on the web.

108
00:07:20.670 --> 00:07:26.329
And from today, what I want you to take is
to remember that API exists, and is there.

109
00:07:26.329 --> 00:07:30.285
And if you wanna get deeper
into that after this video,

110
00:07:30.285 --> 00:07:35.276
you have more videos to watch and
more workshops to do with more code.

