WEBVTT

1
00:00:00.170 --> 00:00:01.527
Vibration.

2
00:00:01.527 --> 00:00:05.825
You've heard how we were
vibrating the gamepad, but

3
00:00:05.825 --> 00:00:10.124
also there is a very simple
API targeting phones that is

4
00:00:10.124 --> 00:00:14.236
currently available in Chrome and
Android mainly,

5
00:00:14.236 --> 00:00:19.301
only Chrome and only Android,
where you can vibrate the phone.

6
00:00:19.301 --> 00:00:23.798
We'll just once and
you pass a number of milliseconds or

7
00:00:23.798 --> 00:00:27.147
you can pass a pattern that's an array and

8
00:00:27.147 --> 00:00:31.453
the first one is vibration,
the second one is pulse,

9
00:00:31.453 --> 00:00:36.644
vibration, pulse, vibration,
pulse, vibration, pulse.

10
00:00:36.644 --> 00:00:41.133
So you can express in milliseconds
the pattern that you wanna play,

11
00:00:41.133 --> 00:00:45.796
the vibration pattern that you wanna
play on that particular device.

12
00:00:46.796 --> 00:00:48.978
Okay, it was just that.

13
00:00:48.978 --> 00:00:53.229
&gt;&gt; It was vibration pulse and
what was the last one?

14
00:00:53.229 --> 00:00:53.960
&gt;&gt; Another vibration.

15
00:00:53.960 --> 00:01:01.329
So it's vibration pulse, it's always two
kinds of numbers, always in milliseconds.

16
00:01:01.329 --> 00:01:05.138
Is vibration pause, vibration pause,
vibration pause, that's about it.

17
00:01:09.086 --> 00:01:11.415
Battery status.

18
00:01:11.415 --> 00:01:15.499
So for example,
in our web app, Cookie Master,

19
00:01:15.499 --> 00:01:20.678
we're going to connect to
Bluetooth that is using of course,

20
00:01:20.678 --> 00:01:25.572
battery, and a game pad,
everything consumes battery.

21
00:01:25.572 --> 00:01:29.830
And maybe we can check,
hey, the battery's low,

22
00:01:29.830 --> 00:01:33.899
is 5%,
maybe we can alert the user about that.

23
00:01:33.899 --> 00:01:36.920
So for that we have battery status.

24
00:01:36.920 --> 00:01:43.493
It's an API that will give you information
about the current battery status and

25
00:01:43.493 --> 00:01:50.376
a lot of events that you can use to know,
for example, if the charging is changing.

26
00:01:50.376 --> 00:01:55.467
Charging changing means you are charging
or you are not charging, okay?

27
00:01:55.467 --> 00:01:57.936
So you have the power connected or not and

28
00:01:57.936 --> 00:02:01.141
when you change that it
will execute your callback.

29
00:02:01.141 --> 00:02:05.512
Levelchange is when the battery
level is going down or up.

30
00:02:05.512 --> 00:02:11.004
Chargingtimechange is when it's,
the estimation it's giving you that,

31
00:02:11.004 --> 00:02:16.344
okay, we will get these charged in
an hour or something like that, yeah.

32
00:02:16.344 --> 00:02:18.887
&gt;&gt; So a lot of these that
you're showing doesn't work,

33
00:02:18.887 --> 00:02:22.559
how many browsers are there like not
those green ones and you would probably,

34
00:02:22.559 --> 00:02:25.800
I'm asking, would you still be able
to use these APIs on anything?

35
00:02:25.800 --> 00:02:29.191
Like if it's an API that you
would make a request to,

36
00:02:29.191 --> 00:02:32.054
in the cloud or
some other server like that?

37
00:02:32.054 --> 00:02:34.157
Are all these available,
just like you have to pay for

38
00:02:34.157 --> 00:02:35.389
them in different instances?

39
00:02:35.389 --> 00:02:36.886
&gt;&gt; Well, let's see.
So let's go and

40
00:02:36.886 --> 00:02:40.110
check first the current compatibility.

41
00:02:40.110 --> 00:02:45.075
So the current compatibility for battery
status is Chrome and Edge on desktop,

42
00:02:45.075 --> 00:02:49.001
Chrome for Android, Samsung internet and
then we have Opera,

43
00:02:49.001 --> 00:02:51.532
Android browser, blah, blah, blah.

44
00:02:51.532 --> 00:02:56.920
So it's currently three quarters
of the users, which is not bad.

45
00:02:56.920 --> 00:03:01.852
Yeah, it's not an iPhone,
but it's still if you have

46
00:03:01.852 --> 00:03:06.903
it you will still offer a service
to three or four users.

47
00:03:06.903 --> 00:03:11.446
Do we have any alternative
in case you are in iOS?

48
00:03:11.446 --> 00:03:15.119
It will depend on the case, on the API.

49
00:03:15.119 --> 00:03:18.475
In the case of the battery status,
there is no other way to get that.

50
00:03:18.475 --> 00:03:19.872
There is no service,

51
00:03:19.872 --> 00:03:24.150
no one can let you know the current
battery status of that device.

52
00:03:24.150 --> 00:03:27.873
So the only alternative you have is,
for example,

53
00:03:27.873 --> 00:03:32.548
if you really need to create an app,
so your app is based on that,

54
00:03:32.548 --> 00:03:36.116
then there are not so
many use cases, I know one.

55
00:03:36.116 --> 00:03:38.113
Do you know the app Die With Me?

56
00:03:38.113 --> 00:03:43.228
I know the name sounds scary,
Die With Me is an app that you

57
00:03:43.228 --> 00:03:48.996
can use only when you have less
than 5% of your battery, okay?

58
00:03:48.996 --> 00:03:53.499
So the idea is that, first,
it's an app that is black and white, so

59
00:03:53.499 --> 00:03:55.634
it's not using a lot of screen.

60
00:03:55.634 --> 00:04:00.966
And the idea is to chat with people
that are on the same train, as you are.

61
00:04:00.966 --> 00:04:06.945
You don't know who they are,
it's just chatting before we die, okay?

62
00:04:06.945 --> 00:04:09.717
That's the app,
that's the only thing the app is doing.

63
00:04:09.717 --> 00:04:14.937
Well, if you need to do this with
the web and you need to cover iPhone,

64
00:04:14.937 --> 00:04:19.443
the only way to do that is to
publish the PWA in the App Store.

65
00:04:19.443 --> 00:04:22.535
So if you can still use HTML,
CSS and JavaScript, but

66
00:04:22.535 --> 00:04:25.422
then you will need to create
like a little plugin,

67
00:04:25.422 --> 00:04:29.861
a little part of your app that will be
native, in this case, it can be Swift.

68
00:04:29.861 --> 00:04:34.568
And that Swift will provide to JavaScript
the API that you don't have, but

69
00:04:34.568 --> 00:04:38.602
you must go through the App Store,
that's the difference, but

70
00:04:38.602 --> 00:04:41.688
you don't have other way
to do that from Safari.

71
00:04:41.688 --> 00:04:43.488
Idle detection.

72
00:04:43.488 --> 00:04:49.357
So, the API is also pretty simple,
we just check if we do have permission.

73
00:04:49.357 --> 00:04:52.071
We ask for permission actually,
we request permission, and

74
00:04:52.071 --> 00:04:53.542
then we create an idle detector.

75
00:04:53.542 --> 00:04:55.815
What's they the idea?

76
00:04:55.815 --> 00:04:59.964
The idea is to know if the user
is still there or not, okay,

77
00:04:59.964 --> 00:05:01.840
that's kind of the idea.

78
00:05:01.840 --> 00:05:06.360
And some apps are using this,
I mean, the main use case for

79
00:05:06.360 --> 00:05:12.464
this is a chat application, when you see
that the user is still online or away.

80
00:05:12.464 --> 00:05:16.573
Do you realize that some chat applications
are showing you when you are online,

81
00:05:16.573 --> 00:05:17.318
you are away?

82
00:05:17.318 --> 00:05:22.004
Well, they're using algorithms from the
operating system to know if you're still

83
00:05:22.004 --> 00:05:22.798
there or not.

84
00:05:22.798 --> 00:05:26.927
If you're moving your mouse after
a few seconds or a few minutes,

85
00:05:26.927 --> 00:05:30.092
nothing happens,
it will go into idle, okay,?

86
00:05:30.092 --> 00:05:34.972
And then you can do something, you can
decrease the frequency of your timers just

87
00:05:34.972 --> 00:05:38.731
to reduce battery because it
seems like the user is not there.

88
00:05:38.731 --> 00:05:43.506
Or for example, there are some
video systems similar to Netflix

89
00:05:43.506 --> 00:05:48.202
that after a while it will tell you,
hey, are you still there?

90
00:05:48.202 --> 00:05:52.944
Like hey, move something so we know you're
still there, if not we are not going to

91
00:05:52.944 --> 00:05:56.956
waste bandwidth showing you a video
that you're not seeing, okay?

92
00:05:56.956 --> 00:05:59.648
So it's just that but from JavaScript.

93
00:05:59.648 --> 00:06:03.739
So you can know the user state and
the screen state.

94
00:06:03.739 --> 00:06:08.277
The different screen state means
the screen might be locked, for example.

95
00:06:08.277 --> 00:06:12.721
And user state means that we know the user
is there, the user has just touched

96
00:06:12.721 --> 00:06:16.341
something, even if it's not in
the web app, maybe in the OS.

97
00:06:16.341 --> 00:06:20.456
Maybe the user has just seen
a notification or the user is on WhatsApp,

98
00:06:20.456 --> 00:06:24.777
so we know the user is still there so
it will give you the user is active, but

99
00:06:24.777 --> 00:06:25.780
not in your app.

