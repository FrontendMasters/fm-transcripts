WEBVTT

1
00:00:00.240 --> 00:00:05.171
Okay the next one Geolocation API,
that was, as I mentioned,

2
00:00:05.171 --> 00:00:09.276
one of the first capabilities
available on the web.

3
00:00:09.276 --> 00:00:10.965
So the Geolocation API.

4
00:00:10.965 --> 00:00:13.296
How does it work?

5
00:00:13.296 --> 00:00:18.258
Actually it reads user's location,
but how?

6
00:00:18.258 --> 00:00:23.562
Question for you, how do you know
which providers or which methods

7
00:00:23.562 --> 00:00:29.161
do you know that phone or a computer
can use to locate the user on Earth?

8
00:00:29.161 --> 00:00:30.020
&gt;&gt; GPS.

9
00:00:30.020 --> 00:00:32.819
&gt;&gt; GPS, that's the most common one.

10
00:00:32.819 --> 00:00:34.239
&gt;&gt; Radio towers have.

11
00:00:34.239 --> 00:00:39.362
&gt;&gt; Radio towers with cells,
actually, that was used a lot

12
00:00:39.362 --> 00:00:44.160
at the beginning of the let's
say smartphone era but

13
00:00:44.160 --> 00:00:48.629
to locate the user with
cell towers that location

14
00:00:48.629 --> 00:00:52.897
happens server side our server side.

15
00:00:52.897 --> 00:00:56.057
It happens on the carrier server side.

16
00:00:56.057 --> 00:01:03.402
So right now, all if you are here in Frontend
Masters' office in Minneapolis and

17
00:01:03.402 --> 00:01:09.537
your phone is currently connected
to a cell here of your carrier.

18
00:01:09.537 --> 00:01:12.825
It can be anyone, Verizon, T-Mobile, AT&amp;T.

19
00:01:12.825 --> 00:01:16.986
And they know that you're here,
but not your phone,

20
00:01:16.986 --> 00:01:21.807
because your phone,
the only thing that knows is the cell ID.

21
00:01:21.807 --> 00:01:26.643
It knows that you are in X carrier and
what's the cell ID.

22
00:01:26.643 --> 00:01:28.053
What do you do with the cell ID?

23
00:01:28.053 --> 00:01:29.671
It's just an ID.

24
00:01:29.671 --> 00:01:33.252
It's where the tower is, in which
building is the tower, I don't know.

25
00:01:33.252 --> 00:01:35.711
Because I'm not the carrier,

26
00:01:35.711 --> 00:01:40.543
I don't have their database of cells and
addresses, okay?

27
00:01:40.543 --> 00:01:43.593
So that's why originally Apple and

28
00:01:43.593 --> 00:01:47.963
Google they were making
agreements with carriers so

29
00:01:47.963 --> 00:01:52.941
they can share the data with you
via your phone can get it but

30
00:01:52.941 --> 00:01:59.467
that's not a case anymore, so let's
say that today that's not on a phone.

31
00:01:59.467 --> 00:02:01.715
That's not typically how
it's going to locate you.

32
00:02:01.715 --> 00:02:07.185
GPS has to do with receiving
signal from satellites.

33
00:02:07.185 --> 00:02:08.349
It needs four.

34
00:02:08.349 --> 00:02:09.441
There is a process there.

35
00:02:09.441 --> 00:02:12.941
We're not going to get too deep to
that because as web developers,

36
00:02:12.941 --> 00:02:14.264
we don't care too much.

37
00:02:14.264 --> 00:02:16.745
But I do have a question for you.

38
00:02:16.745 --> 00:02:18.867
So if I open any browser,

39
00:02:18.867 --> 00:02:23.932
I will open Canary because I
think I'm not logged in there.

40
00:02:23.932 --> 00:02:28.228
So it's like an empty.

41
00:02:28.228 --> 00:02:34.360
If I'm going to googlemaps.com,
google maps,

42
00:02:34.360 --> 00:02:39.327
will give me here a way to locate myself.

43
00:02:39.327 --> 00:02:42.819
And if I click there,
it's asking me for permission.

44
00:02:42.819 --> 00:02:45.922
So that's the geolocation
permission dialog.

45
00:02:45.922 --> 00:02:49.958
I will say hello, by the way, it's off.

46
00:02:49.958 --> 00:02:50.765
Why?

47
00:02:50.765 --> 00:02:57.184
Because my Mac is not given
permission to Canary.

48
00:02:57.184 --> 00:02:58.487
So I will do that.

49
00:02:58.487 --> 00:03:01.838
I will use my finger privacy of
security blah blah blah blah.

50
00:03:01.838 --> 00:03:06.401
Now I can try again And

51
00:03:06.401 --> 00:03:13.573
it's getting the current location and
at one point I will get a location.

52
00:03:13.573 --> 00:03:16.219
We are there, okay?

53
00:03:16.219 --> 00:03:21.709
And it's even showing me
within the block where I am.

54
00:03:21.709 --> 00:03:23.029
How is that working?

55
00:03:23.029 --> 00:03:26.000
&gt;&gt; That's too precise for IP address.

56
00:03:26.000 --> 00:03:32.934
&gt;&gt; The IP address, the precision of an IP
address is here in the US, the city.

57
00:03:32.934 --> 00:03:37.222
In the rest of the world, the country and
sometimes not even the country

58
00:03:37.222 --> 00:03:41.585
because sometimes providers they
are in different countries in Europe for

59
00:03:41.585 --> 00:03:45.375
example, there the same provider
is in different countries and

60
00:03:45.375 --> 00:03:47.463
they share the IP address ranges.

61
00:03:47.463 --> 00:03:53.536
So then you are in France and it says
that you're in Belgium GPS I'm on a Mac.

62
00:03:53.536 --> 00:03:55.631
Do I have GPS on a Mac?

63
00:03:55.631 --> 00:03:57.973
&gt;&gt; Is it located by Wi-Fi or Bluetooth?

64
00:03:57.973 --> 00:04:00.404
&gt;&gt; By Wi-Fi or Bluetooth.

65
00:04:00.404 --> 00:04:01.549
Let's see Bluetooth.

66
00:04:01.549 --> 00:04:04.832
I can turn off Bluetooth.

67
00:04:04.832 --> 00:04:06.618
And you will see that's not Bluetooth.

68
00:04:06.618 --> 00:04:07.264
And so why?

69
00:04:07.264 --> 00:04:10.463
How Bluetooth will tell me where I am?

70
00:04:10.463 --> 00:04:14.093
Bluetooth is a way that we have
to communicate two devices.

71
00:04:14.093 --> 00:04:15.914
Up to eight actually.

72
00:04:15.914 --> 00:04:21.072
But yeah, unless we have Bluetooth
beacons here in the room that for

73
00:04:21.072 --> 00:04:25.794
some reason Chrome knows where we are,
that's not the case.

74
00:04:25.794 --> 00:04:29.804
But Wi-Fi sounds better.

75
00:04:29.804 --> 00:04:33.525
So in fact, it's Wi-Fi.

76
00:04:33.525 --> 00:04:34.654
How?

77
00:04:34.654 --> 00:04:38.252
In fact the procedure is
actually pretty good, okay?

78
00:04:38.252 --> 00:04:39.194
It's actually pretty good.

79
00:04:39.194 --> 00:04:41.271
So how is that working?

80
00:04:41.271 --> 00:04:44.283
So, I'm going to simplify
this a little bit.

81
00:04:44.283 --> 00:04:46.558
But the idea is that
when you're in a while,

82
00:04:46.558 --> 00:04:50.325
you don't need to be connected to
a Wi-Fi by the way, what's going on?

83
00:04:50.325 --> 00:04:55.499
Is that there is a list of have
Wi-Fis surrounding me. Each Wi-Fi

84
00:04:55.499 --> 00:05:00.776
has a list of information,
not just the Wi-Fi for example,

85
00:05:00.776 --> 00:05:05.948
if I press my option key,
I could get more information about

86
00:05:05.948 --> 00:05:12.701
the-Wi Fi not just the IP address but
be SSID channel the country code noise.

87
00:05:12.701 --> 00:05:17.443
The idea is that the browser is taking
the whole list of Wi-Fi around me,

88
00:05:17.443 --> 00:05:22.420
of access points around me, with all
that metadata of each access point that

89
00:05:22.420 --> 00:05:26.018
you see here,
not just the Wi-Fi that I'm logged in.

90
00:05:26.018 --> 00:05:31.008
That list you send in that list, and you
can include the Starbucks that we have on

91
00:05:31.008 --> 00:05:35.475
the other block, the Wi-Fi from
the Starbucks All that list is going to

92
00:05:35.475 --> 00:05:38.698
a Google server because
I'm using Google Chrome.

93
00:05:38.698 --> 00:05:43.871
And Google says, yeah, that's the Frontend
Masters' office in Minneapolis.

94
00:05:43.871 --> 00:05:45.732
How does Google know that?

95
00:05:45.732 --> 00:05:48.361
Because of two sources.

96
00:05:48.361 --> 00:05:52.609
First, there are cars
that are browsing cities.

97
00:05:52.609 --> 00:05:54.637
With the Street View cars.

98
00:05:54.637 --> 00:05:58.200
They also have a Wi-Fi antenna and
GPS, and

99
00:05:58.200 --> 00:06:04.379
they're scanning all the cities and
they're matching SSIDs from Wi-Fi.

100
00:06:04.379 --> 00:06:09.655
That's the identifier from
access points and GPS locations.

101
00:06:09.655 --> 00:06:15.610
And the second source of data is us
we are collecting information for

102
00:06:15.610 --> 00:06:19.892
Google or
Apple based if you have iOS or Android,

103
00:06:19.892 --> 00:06:23.547
that if there is a new
access point here and

104
00:06:23.547 --> 00:06:29.606
one floor up there if many people
is reporting that new access point,

105
00:06:29.606 --> 00:06:33.914
they will add that access
point to the database.

106
00:06:33.914 --> 00:06:35.826
And that's my computer but

107
00:06:35.826 --> 00:06:40.409
it's not just the computer this
also works for the phone as well.

108
00:06:40.409 --> 00:06:43.829
Your phone is trying Wi-Fi first, why?

109
00:06:43.829 --> 00:06:50.328
Because it's faster and cheaper than GPS,
cheaper in money we pay for use that GPS.

110
00:06:50.328 --> 00:06:55.504
Actually, we pay for using the GPS because
it's managed by the US government,

111
00:06:55.504 --> 00:06:59.691
but we pay, I think it's around
20 cents when you buy a phone.

112
00:06:59.691 --> 00:07:03.041
It's just like a donation to the service.

113
00:07:03.041 --> 00:07:08.151
But I'm not talking about that cost,
I'm talking about battery cost,

114
00:07:08.151 --> 00:07:12.106
because we need to turn on
a radio that needs to get data.

115
00:07:12.106 --> 00:07:17.010
It's a timestamp with metadata from
the satellite and that's costing battery,

116
00:07:17.010 --> 00:07:19.696
so that's why your phone prefers Wi-Fi.

117
00:07:19.696 --> 00:07:24.387
That doesn't mean if you're walking on
the street and you open Google Maps, it's

118
00:07:24.387 --> 00:07:29.011
using Wi-Fi, even if you're not connected
through Wi-Fi, so using your 4G or

119
00:07:29.011 --> 00:07:33.795
5G connection, it's sending the list of
Wi-Fis around you to locate you faster.

120
00:07:33.795 --> 00:07:38.445
That doesn't work if you are driving,
you're driving in the highway and

121
00:07:38.445 --> 00:07:43.320
you're going too fast to actually read
your Wi-Fis around you and know where

122
00:07:43.320 --> 00:07:48.292
you are because when you get that
information, you're probably a mile away.

123
00:07:48.292 --> 00:07:53.107
The API that we are going to
use is provider agnostic,

124
00:07:53.107 --> 00:07:57.601
which means we won't know
if we get the location,

125
00:07:57.601 --> 00:08:02.962
if it's GPS, if it's clone us if it's or
if it's Wi-Fi.

126
00:08:02.962 --> 00:08:03.837
We don't know.

127
00:08:03.837 --> 00:08:04.819
We don't care.

128
00:08:04.819 --> 00:08:07.607
We can't ask for something different.

129
00:08:07.607 --> 00:08:11.449
We just ask the browser
I want the location.

130
00:08:11.449 --> 00:08:14.834
Do wherever you can to give me a location.

131
00:08:14.834 --> 00:08:19.608
You will get some information where
you may infer what's going on.

132
00:08:19.608 --> 00:08:24.881
For example, the data that you
receive will include accuracy.

133
00:08:24.881 --> 00:08:27.520
In that case, you can say, well,

134
00:08:27.520 --> 00:08:32.441
it looks like satellite-based or
looks like we have a problem.

135
00:08:32.441 --> 00:08:34.172
It needs user permission.

136
00:08:34.172 --> 00:08:35.697
We already seen that.

137
00:08:35.697 --> 00:08:40.080
It relies on the browser or
in the operating system service.

138
00:08:40.080 --> 00:08:43.373
So what happens if you have
a phone with no SIM card?

139
00:08:43.373 --> 00:08:47.851
In that case, the only way is to use GPS.

140
00:08:47.851 --> 00:08:55.450
A phone with no SIM card, no data plan,
takes a while to get GPS location.

141
00:08:55.450 --> 00:08:59.488
I remember I once was in India,
so I'm a frequent traveler,

142
00:08:59.488 --> 00:09:05.127
I've been to 73 countries and I remember
the worst experience with GPS was India.

143
00:09:05.127 --> 00:09:08.372
I didn't have a SIM card at
the time when I was there.

144
00:09:08.372 --> 00:09:10.783
It was like ten years ago.

145
00:09:10.783 --> 00:09:16.737
It wasn't easy to get a SIM card and
sometimes GPS was taking 3 or

146
00:09:16.737 --> 00:09:22.267
4 minutes on an iPhone to get
a location on a crowded place.

147
00:09:22.267 --> 00:09:24.511
So it works only in the foreground.

148
00:09:24.511 --> 00:09:31.261
So as a web developer, you cannot read
user's location in the background.

149
00:09:31.261 --> 00:09:34.707
Native apps can do that, not websites.

150
00:09:34.707 --> 00:09:39.113
So that means API is not suitable for
geofencing or beacon base location.

151
00:09:39.113 --> 00:09:43.109
Beacon base location is the proposal
that we have from the chat of

152
00:09:43.109 --> 00:09:46.741
using Bluetooth beacons to
actually detect where we are.

153
00:09:46.741 --> 00:09:49.997
We can use that for
indoor location if you're on the mall, for

154
00:09:49.997 --> 00:09:51.257
example in an airport.

155
00:09:51.257 --> 00:09:57.131
Using those beacons, you can improve the
indoor location or which floor are you?

156
00:09:57.131 --> 00:09:59.049
On which gate are you?

157
00:09:59.049 --> 00:10:04.078
And geofencing is a technique
on apps that will let you

158
00:10:04.078 --> 00:10:09.120
know when the user gets in or
out a geographical area.

159
00:10:09.120 --> 00:10:11.454
So I'm in the city, out of the city.

160
00:10:11.454 --> 00:10:15.026
Well, with web apps,
we cannot do geofencing.

161
00:10:15.026 --> 00:10:19.462
They say there were a couple of proposals,
but

162
00:10:19.462 --> 00:10:24.942
none of those proposals
actually got any mature, okay?

163
00:10:24.942 --> 00:10:29.585
&gt;&gt; This is specifically for GPS all this-
&gt;&gt; This is specific for

164
00:10:29.585 --> 00:10:34.343
the Geolocation API and
the Geolocation API is agnostic so

165
00:10:34.343 --> 00:10:40.459
that means that only in the real world
today is GPS or Wi-Fi Those are the two

166
00:10:40.459 --> 00:10:46.604
options that typically you would have
on a web app to get users' location.

167
00:10:46.604 --> 00:10:49.817
But you cannot ask for one in particular.

168
00:10:49.817 --> 00:10:52.712
There is one option that is kind of that,
but

169
00:10:52.712 --> 00:10:55.776
it's not really saying, I want Wi-Fi, no.

