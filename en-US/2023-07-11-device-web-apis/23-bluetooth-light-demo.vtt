WEBVTT

1
00:00:00.523 --> 00:00:04.171
So I have here with me Bluetooth lights.

2
00:00:04.171 --> 00:00:08.567
It can be any light, but again,
this is not a standard service, so

3
00:00:08.567 --> 00:00:11.643
we need to actually
understand how that work.

4
00:00:11.643 --> 00:00:15.771
And actually,
I google the name of these lights and

5
00:00:15.771 --> 00:00:21.063
I tried to find if someone has
already understood how these work.

6
00:00:21.063 --> 00:00:27.015
And I found a Python library to work with
the slides with all the services ID,

7
00:00:27.015 --> 00:00:31.484
some characteristic IDs, so
then I can use it in my code.

8
00:00:31.484 --> 00:00:33.154
Let's look at the code.

9
00:00:33.154 --> 00:00:36.281
Let's go and look at the code Bluetooth.

10
00:00:40.713 --> 00:00:44.132
And actually,
because it was so complicated,

11
00:00:44.132 --> 00:00:48.669
I created a new file,
BTLights.js, BluetoothLights.js.

12
00:00:48.669 --> 00:00:50.752
So look at this.

13
00:00:50.752 --> 00:00:53.212
This is how a service ID looks like.

14
00:00:53.212 --> 00:00:56.794
This is the service ID for these lights.

15
00:00:56.794 --> 00:01:01.568
And then the lights have different
characteristics for changing the color,

16
00:01:01.568 --> 00:01:04.659
for checking the power,
for whatever they have.

17
00:01:04.659 --> 00:01:08.449
And they have one characteristic
ID like that one.

18
00:01:08.449 --> 00:01:10.953
And by the way, who is defining this?

19
00:01:10.953 --> 00:01:12.525
The manufacturer.

20
00:01:12.525 --> 00:01:14.185
They can use any value.

21
00:01:14.185 --> 00:01:21.694
So there is no list of IDs by manufacturer
on a Bluetooth foundation website, no.

22
00:01:21.694 --> 00:01:23.294
So it's just that.

23
00:01:23.294 --> 00:01:28.406
So I'm requesting a device, and
here you can see the difference.

24
00:01:28.406 --> 00:01:32.575
I can ask for
a device with a prefix, Govee,

25
00:01:32.575 --> 00:01:36.308
that's the name, that's the brand.

26
00:01:36.308 --> 00:01:38.103
And I can ask for optional services.

27
00:01:38.103 --> 00:01:41.004
I want a device with that ID.

28
00:01:41.004 --> 00:01:42.017
But I don't need that.

29
00:01:42.017 --> 00:01:45.590
So I can just say I want all the devices,

30
00:01:45.590 --> 00:01:51.456
I want the device with that name,
or I just want all the devices.

31
00:01:51.456 --> 00:01:57.720
And the problem is that the list
will be really, really large.

32
00:01:57.720 --> 00:02:02.481
Let me show you an example
that we have here,

33
00:02:02.481 --> 00:02:05.450
the Web Bluetooth tester.

34
00:02:05.450 --> 00:02:09.047
This is a tester to test this API,

35
00:02:09.047 --> 00:02:13.928
where you can actually
pick all the devices or

36
00:02:13.928 --> 00:02:17.152
just one by prefix, by name.

37
00:02:17.152 --> 00:02:23.661
And when you click Get Bluetooth
Device Info, let's say all devices,

38
00:02:23.661 --> 00:02:28.342
now these are all the Bluetooth
devices around me.

39
00:02:28.342 --> 00:02:33.318
And there are more,
lots of Bluetooth devices we have and

40
00:02:33.318 --> 00:02:38.604
we don't know, Apple watches,
headphones, computers,

41
00:02:38.604 --> 00:02:42.765
laptops, a lot of things
they have Bluetooth.

42
00:02:42.765 --> 00:02:46.792
So then you can pick one,
we have a Samsung The Frame 65.

43
00:02:46.792 --> 00:02:49.852
I'm not sure if from here,
maybe it from a neighbor,

44
00:02:49.852 --> 00:02:53.592
maybe it's not from this apartment,
and they can pair with it and

45
00:02:53.592 --> 00:02:56.527
they can see the information,
some information.

46
00:02:56.527 --> 00:03:03.167
Samsung The Frame 65, okay, with the ID,
and it's not yet connected.

47
00:03:03.167 --> 00:03:05.781
Probably, we'll need the connection or
something like that.

48
00:03:05.781 --> 00:03:09.640
And you can get the services and
do something with it.

49
00:03:09.640 --> 00:03:13.200
So it can get really complicated.

50
00:03:13.200 --> 00:03:18.039
So on this here, so
after I have the device, okay,

51
00:03:18.039 --> 00:03:22.767
I have different functions,
turn on, turn off,

52
00:03:22.767 --> 00:03:26.389
more brightness, less brightness.

53
00:03:26.389 --> 00:03:31.415
And look at that,
that's the bytes that I need to send for

54
00:03:31.415 --> 00:03:38.253
that special operation, turnOn,
turnOff, and it's calling writeData.

55
00:03:38.253 --> 00:03:42.942
writeData is that code that
is connecting to the device,

56
00:03:42.942 --> 00:03:47.339
getting the service,
getting the characteristic,

57
00:03:47.339 --> 00:03:53.101
converting that string into an actual
array of bytes for JavaScript,

58
00:03:53.101 --> 00:03:57.714
and finally writing that
value to the characteristic.

59
00:03:57.714 --> 00:04:00.419
So it gets complex.

60
00:04:00.419 --> 00:04:04.445
You need experience working with
binary data, and also to understand,

61
00:04:04.445 --> 00:04:05.237
what is this?

62
00:04:05.237 --> 00:04:07.693
Well, this comes from a manual or

63
00:04:07.693 --> 00:04:13.331
from someone that already sniffed
the device to understand how that works.

64
00:04:13.331 --> 00:04:17.824
In fact, the last digit,
it's actually, in this case,

65
00:04:17.824 --> 00:04:22.052
a digit that is for
error checking, it's a checksum.

66
00:04:22.052 --> 00:04:25.857
And you need to understand which
protocol they're using for

67
00:04:25.857 --> 00:04:27.952
that to actually make that work.

68
00:04:27.952 --> 00:04:32.983
So let's see if we can call,
because right now we

69
00:04:32.983 --> 00:04:38.160
are exporting these turnOn,
turnOff from here.

70
00:04:38.160 --> 00:04:40.749
And now on our app.js,

71
00:04:40.749 --> 00:04:47.103
we have an alertTimerFinished
where we do several stuff.

72
00:04:47.103 --> 00:04:51.200
For example, when the timer finishes,

73
00:04:51.200 --> 00:04:54.943
I'm calling a rumble on my gamepad.

74
00:04:54.943 --> 00:04:58.946
So then you will hear when the timer
finishes, you will hear a rumble.

75
00:04:58.946 --> 00:05:02.014
And then if we do have
a Bluetooth connected,

76
00:05:02.014 --> 00:05:05.580
I'm sending different
messages with set timeout.

77
00:05:05.580 --> 00:05:10.797
So that means in 0 seconds, so
right now, 300 milliseconds,

78
00:05:10.797 --> 00:05:17.991
300 milliseconds, and doing all these kind
of chain commands to the Bluetooth device.

79
00:05:17.991 --> 00:05:19.091
So let's try this.

80
00:05:19.091 --> 00:05:21.840
So I'm going to start cooking.

81
00:05:21.840 --> 00:05:26.054
I'm going to the next step,
that's the one that lets me add a timer,

82
00:05:26.054 --> 00:05:29.625
and I'm going to connect both
the gamepad and the lights.

83
00:05:33.564 --> 00:05:36.128
And I'm going to add a timer.

84
00:05:36.128 --> 00:05:37.284
Let's wait for it.

85
00:05:43.075 --> 00:05:50.295
And now we have alerts everywhere saying,
hey, hey, hey, your eggs, okay?

86
00:05:50.295 --> 00:05:52.327
Your chicken is ready.

87
00:05:52.327 --> 00:05:56.680
And remember the idea here is that you
can add more than one and they will, for

88
00:05:56.680 --> 00:06:00.026
every step, you can add more than one and
have them there.

89
00:06:00.026 --> 00:06:05.327
And remember, we can also use the speech
synthesis to shout, hey, hey, the chicken.

90
00:06:05.327 --> 00:06:06.896
Hey, we can do that.

91
00:06:06.896 --> 00:06:11.459
We can add something really
quickly to our code.

92
00:06:11.459 --> 00:06:17.228
In our code, that part is currently
in app.js, like in the main part, we

93
00:06:17.228 --> 00:06:23.858
have an alertTimerFinished function that
is called every time a timer is finished.

94
00:06:23.858 --> 00:06:27.287
And in this case,
you can see with this code,

95
00:06:27.287 --> 00:06:31.808
I'm rumbling a gamepad,
if I do have a gamepad connected.

96
00:06:31.808 --> 00:06:34.751
And then if I have
a Bluetooth light connected,

97
00:06:34.751 --> 00:06:39.622
I'm calling this code that is turning
on and off and changing the brightness.

98
00:06:39.622 --> 00:06:41.782
I can change the colors as well, and

99
00:06:41.782 --> 00:06:45.312
everything that the Bluetooth
device is offering to you.

100
00:06:45.312 --> 00:06:50.373
But just have in mind that everything
looks complicated when you look at it,

101
00:06:50.373 --> 00:06:54.186
okay, because it has to do
with hardware manipulation.

102
00:06:54.186 --> 00:06:56.854
You need to understand
how that hardware works.

103
00:06:56.854 --> 00:07:01.070
And most of the hardware out there,
at least the commercial hardware,

104
00:07:01.070 --> 00:07:03.399
is typically not open, it's closed.

105
00:07:03.399 --> 00:07:07.749
So we need to find,
hack a way to get into how to do that.

106
00:07:07.749 --> 00:07:11.424
But for example,
some interesting ideas, in fact,

107
00:07:11.424 --> 00:07:15.846
I was about to do that, but I said,
too many devices I have here.

108
00:07:15.846 --> 00:07:20.351
But for cooking,
you also have Bluetooth thermometers for

109
00:07:20.351 --> 00:07:22.974
the meat, for example, iGrill.

110
00:07:22.974 --> 00:07:28.715
And we do have all the characteristic
IDs and service IDs for those devices.

111
00:07:28.715 --> 00:07:35.276
So you can also receive alerts when the
meat is reaching the expected temperature.

112
00:07:35.276 --> 00:07:39.963
And you can get alert in your
web app through Bluetooth, and

113
00:07:39.963 --> 00:07:44.482
then speak, or watch the lights,
or whatever you want.

114
00:07:44.482 --> 00:07:47.367
So that's the idea of
connecting devices on web app.

115
00:07:47.367 --> 00:07:51.548
Yeah, they are not going to probably
do this on a newspaper website, okay?

116
00:07:51.548 --> 00:07:56.549
This is more experimental to play
with games or to do something fun.

117
00:07:56.549 --> 00:08:01.289
It's not for every website, okay,
but that's how Bluetooth works.

118
00:08:01.289 --> 00:08:02.678
Well, that's all for Bluetooth.

119
00:08:02.678 --> 00:08:05.906
Remember, it's not on Safari,
that means not on the iPhone.

120
00:08:05.906 --> 00:08:08.690
By the way,
if you wanna try this on iPhone,

121
00:08:08.690 --> 00:08:13.210
there is a Web Bluetooth browser in
the app store that is using Safari and

122
00:08:13.210 --> 00:08:16.249
is injecting a Web Bluetooth
implementation.

123
00:08:16.249 --> 00:08:18.951
It's just for
fun because no user will actually go and

124
00:08:18.951 --> 00:08:21.183
download the browser just for
your web app.

125
00:08:21.183 --> 00:08:25.233
But if you wanna play with it on iOS,
it's possible.

126
00:08:25.233 --> 00:08:27.430
So there is one browser available.

