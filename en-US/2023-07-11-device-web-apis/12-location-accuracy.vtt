WEBVTT

1
00:00:00.270 --> 00:00:04.987
We have to see something else
before leaving geolocation, and

2
00:00:04.987 --> 00:00:06.770
it has to live with iOS.

3
00:00:07.890 --> 00:00:12.886
Since iOS and iPadOS 14,
users can decide if they want

4
00:00:12.886 --> 00:00:17.840
to share with apps precise or
imprecise location.

5
00:00:17.840 --> 00:00:20.880
If you have an iPhone,
you probably have seen that.

6
00:00:20.880 --> 00:00:24.510
When you see the dialog,
I'm talking about native apps.

7
00:00:24.510 --> 00:00:28.886
When you see the dialog about
getting location permission,

8
00:00:28.886 --> 00:00:32.860
you can decide if you want precise or
imprecise.

9
00:00:32.860 --> 00:00:36.975
The problem with web apps is that for
the iOS,

10
00:00:36.975 --> 00:00:40.562
Safari is one app for all the websites.

11
00:00:40.562 --> 00:00:45.433
So, if the user,
the first website that they have visited,

12
00:00:45.433 --> 00:00:51.068
with geolocation on that phone,
if the user has selected imprecise,

13
00:00:51.068 --> 00:00:56.510
every website from that moment
will get imprecise location.

14
00:00:56.510 --> 00:00:57.100
And what's that?

15
00:00:58.510 --> 00:01:05.110
It will give you roughly the city,
or in big city is the neighborhood.

16
00:01:05.110 --> 00:01:06.450
That's all.

17
00:01:06.450 --> 00:01:11.091
It will pick a random place there,
and there is no API to know in

18
00:01:11.091 --> 00:01:15.399
which mode the user is,
at least from a web point of view.

19
00:01:16.620 --> 00:01:20.243
For imprecise, in my testing,
you will typically get

20
00:01:20.243 --> 00:01:25.970
the accuracy property between 3000 and
9000, that's meters.

21
00:01:25.970 --> 00:01:29.260
So that's around between 2 and 6 miles.

22
00:01:29.260 --> 00:01:35.335
So that's a way to know when you look at
the property from the results of the call

23
00:01:35.335 --> 00:01:40.790
back, if it's on that range,
you know we are in the imprecise world.

24
00:01:42.370 --> 00:01:48.300
It's smart enough, that system,
to work okay with borders.

25
00:01:48.300 --> 00:01:52.151
I know, if you are close to
the border to Mexico or Canada or

26
00:01:52.151 --> 00:01:55.924
between France and Spain,
if you are in the French side,

27
00:01:55.924 --> 00:02:00.100
it will give you an imprecise location,
but in France, okay?

28
00:02:01.110 --> 00:02:02.960
So it won't cross borders.

29
00:02:02.960 --> 00:02:06.478
So you will get the real country,
at least, or

30
00:02:06.478 --> 00:02:09.194
the real state or province, okay?

31
00:02:09.194 --> 00:02:11.180
In that case, it's good.

32
00:02:11.180 --> 00:02:14.340
It's not just a random place around.

33
00:02:14.340 --> 00:02:18.097
It will try to keep the same city,
at least, okay?

34
00:02:18.097 --> 00:02:18.921
Makes sense?

35
00:02:18.921 --> 00:02:23.901
And Android 12 has something similar,
but the issue is,

36
00:02:23.901 --> 00:02:28.483
in the case of progressive web app,
is per app, not for

37
00:02:28.483 --> 00:02:31.280
Chrome as a whole as with Safari.

