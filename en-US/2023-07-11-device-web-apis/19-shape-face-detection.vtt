WEBVTT

1
00:00:00.270 --> 00:00:04.083
Okay, so we've seen then how
to use the Web Speech API for

2
00:00:04.083 --> 00:00:09.560
both recognizing what the user is
saying and to let the web app speak.

3
00:00:09.560 --> 00:00:14.260
So now it's time to talk a little
bit about the camera and visual.

4
00:00:14.260 --> 00:00:17.200
And we're going to talk
about shape detection.

5
00:00:17.200 --> 00:00:22.893
Shape Detection API, it's actually today,
let's say, between yellow and red.

6
00:00:22.893 --> 00:00:27.890
One of the parts is light green,
it's Chromium-based only.

7
00:00:27.890 --> 00:00:34.163
The idea is to actually detect things
with the camera without actually

8
00:00:34.163 --> 00:00:39.900
opening the camera and
analyzing the image by ourselves.

9
00:00:39.900 --> 00:00:42.783
So for example, we have a BarcodeDetector.

10
00:00:42.783 --> 00:00:45.702
It works with 2D barcodes or QR codes,

11
00:00:45.702 --> 00:00:49.730
Chrome on Android only,
if you wanna try this.

12
00:00:49.730 --> 00:00:55.520
It's actually pretty simple, three lines,
and you have a QR code reader.

13
00:00:56.580 --> 00:01:00.460
It's not just barcode,
we have FaceDetector.

14
00:01:00.460 --> 00:01:03.250
That's the API that I was
mentioning that you have today.

15
00:01:03.250 --> 00:01:07.410
That will give you something,
in this case, the object that you receive.

16
00:01:07.410 --> 00:01:12.629
Will give you coordinates within
the image of the face as a rectangle.

17
00:01:12.629 --> 00:01:16.308
And each part, the nose,
the mouth, and each eye.

18
00:01:16.308 --> 00:01:20.470
And you will get x and y, width,
and height for where the eye is.

19
00:01:21.540 --> 00:01:24.250
That's all, okay,
that's the face detector.

20
00:01:24.250 --> 00:01:29.010
And also we have a TextDetector
that is basically OCR.

21
00:01:29.010 --> 00:01:31.599
So it takes text that you
have in an image, and

22
00:01:31.599 --> 00:01:34.680
it will give you the text
representation as a string.

23
00:01:36.410 --> 00:01:38.963
It's actually pretty simple to use,

24
00:01:38.963 --> 00:01:44.690
the problem is that it's not on iOS or
desktop, it's just on Android.

25
00:01:44.690 --> 00:01:48.550
And how do we know which
part is available or not?

26
00:01:48.550 --> 00:01:50.300
Well, the API is called Shape Detection.

27
00:01:50.300 --> 00:01:54.326
So let's, for example,
go to Chrome status,

28
00:01:57.463 --> 00:02:01.491
And look for the feature, Shape.

29
00:02:02.779 --> 00:02:07.250
And here we have the Face Detection API,
the Text Detection API, and then Barcode.

30
00:02:07.250 --> 00:02:11.950
If you go to Barcode,
it says, enable by default.

31
00:02:11.950 --> 00:02:16.495
So that is shipped, so it's ready to use.

32
00:02:16.495 --> 00:02:22.088
Text Detection, in developer trial,
so we need to enable the flag.

33
00:02:22.088 --> 00:02:25.425
And Face Detection also
in developer trial.

34
00:02:25.425 --> 00:02:29.965
So in this case, if you wanna use them,
it's pretty cool.

35
00:02:29.965 --> 00:02:33.738
Cuz I use that for
create a quick web app for a kid.

36
00:02:33.738 --> 00:02:38.992
It's actually a kid that is not reading
yet that can point to a text, and

37
00:02:38.992 --> 00:02:44.613
using a speech synthesis, it can read
aloud what's in there, it's whoa.

38
00:02:44.613 --> 00:02:49.480
And it's just five, six lines of
JavaScript, that's all you need.

39
00:02:49.480 --> 00:02:54.845
But in this case, it's a feature that
you need to enable, okay, makes sense?

40
00:02:54.845 --> 00:02:57.585
So it's not going to work for the rest.

41
00:02:57.585 --> 00:02:58.999
For the rest, I mean,

42
00:02:58.999 --> 00:03:02.956
there are a lot of open source
libraries that can open a camera.

43
00:03:02.956 --> 00:03:09.572
Or take an image and do the analysis for
a QR code reading, face detection, or OCR.

44
00:03:09.572 --> 00:03:13.658
But it will take more CPU, and
you will need to use a library, okay?

45
00:03:16.104 --> 00:03:19.865
So we're here have an example,
that the one that reads the text, think.

46
00:03:21.486 --> 00:03:29.274
Look at that PAN AM, so hopefully,
That's Google Flights a few decades ago,

47
00:03:29.274 --> 00:03:33.390
[LAUGH] and it will give you the text
immediately, almost, on Android.

48
00:03:34.930 --> 00:03:36.990
So Media Devices got
to do with the camera.

49
00:03:36.990 --> 00:03:39.820
I'm not going to spend too
much time talking about these,

50
00:03:39.820 --> 00:03:41.510
because this has been for a while.

51
00:03:41.510 --> 00:03:44.750
There are a lot of content
around how to open the camera.

52
00:03:44.750 --> 00:03:48.556
But Media Devices was known as
a getUserMedia for a long time,

53
00:03:48.556 --> 00:03:52.440
because that was the name of the function,
okay?

54
00:03:52.440 --> 00:03:54.573
But now it's officially Media Devices.

55
00:03:54.573 --> 00:03:59.065
It will let you open the microphone and
camera, and/or a camera, and

56
00:03:59.065 --> 00:04:01.100
get the stream of that.

57
00:04:01.100 --> 00:04:04.814
You can use the stream that is
coming from the camera to, for

58
00:04:04.814 --> 00:04:07.750
example, feed a video element.

59
00:04:07.750 --> 00:04:12.260
Or you can take each frame and
parse it with JavaScript and do something.

60
00:04:13.790 --> 00:04:16.050
And that's all, the API ends there.

61
00:04:16.050 --> 00:04:18.097
The thing is,
what do you wanna do with the image?

62
00:04:18.097 --> 00:04:21.076
If you want to take a picture,
if you wanna analyze something.

63
00:04:21.076 --> 00:04:24.120
Something that is kind of new.

64
00:04:25.180 --> 00:04:27.970
It's another API that is Chromium only.

65
00:04:27.970 --> 00:04:35.368
It's called Advanced Control Camera, that
is also known as PTZ, pan, tilt, and zoom.

66
00:04:35.368 --> 00:04:40.114
That will let you manipulate pan,
tilt, and zoom for a camera.

67
00:04:40.114 --> 00:04:43.174
So then you can adjust the input stream,

68
00:04:43.174 --> 00:04:47.495
you can have some controls over your page,
adjust that.

69
00:04:47.495 --> 00:04:52.443
For example Zoom is using that,
or StreamYard, these web apps that let you

70
00:04:52.443 --> 00:04:56.910
stream over Twitch, YouTube,
Facebook Live, or Instagram.

71
00:04:58.170 --> 00:05:01.024
It's useful for
mixing it with UI controls,

72
00:05:01.024 --> 00:05:03.362
where the user can actually zoom in.

73
00:05:03.362 --> 00:05:07.107
It's difficult to use this
from your own code, for you,

74
00:05:07.107 --> 00:05:10.158
as developers,
to decide which value to use.

75
00:05:10.158 --> 00:05:12.430
Typically, the user will
pick the right value.

