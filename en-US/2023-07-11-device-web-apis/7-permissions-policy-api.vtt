WEBVTT

1
00:00:00.000 --> 00:00:06.039
APIs are typically enabled by
default on the main navigation.

2
00:00:06.039 --> 00:00:07.358
What's the main navigation?

3
00:00:07.358 --> 00:00:10.675
The HTML document that was
loaded with your web app.

4
00:00:10.675 --> 00:00:15.984
But if you have iframes that
are mostly coming from another origin,

5
00:00:15.984 --> 00:00:21.385
so cross-origin iframes,
most of the time, it depends on the API,

6
00:00:21.385 --> 00:00:26.528
but most of the time,
the API won't be available for the iframe.

7
00:00:26.528 --> 00:00:31.533
This was because it was
used in the wrong way.

8
00:00:31.533 --> 00:00:38.064
For example, today,
typically, ads are iframes.

9
00:00:38.064 --> 00:00:43.625
So then you have an ad in a newspaper
that was reading your geolocation,

10
00:00:43.625 --> 00:00:46.694
or your sensors, or things like that.

11
00:00:46.694 --> 00:00:52.222
So today, if you have a website
with cross-origin iframes,

12
00:00:52.222 --> 00:00:57.553
you have to apply,
you have to opt in for those APIs, okay?

13
00:00:57.553 --> 00:01:02.173
So if you wanna turn a capability on or
off, we do have a way to do that,

14
00:01:02.173 --> 00:01:05.069
because also, it's enabled by default.

15
00:01:05.069 --> 00:01:09.731
And probably you're thinking, I'm not
going to use Bluetooth in my website.

16
00:01:09.731 --> 00:01:12.270
And you say, well, it's okay,
if I'm not using it,

17
00:01:12.270 --> 00:01:14.438
what's the problem if my
code is not using it?

18
00:01:14.438 --> 00:01:18.701
But anyone can go to the console and
write some code and

19
00:01:18.701 --> 00:01:22.316
that code will be executed
with your origin.

20
00:01:22.316 --> 00:01:23.202
Makes sense?

21
00:01:23.202 --> 00:01:29.297
It's not a big risk, but anyway, you can
be a bank and then you can have a plugin,

22
00:01:29.297 --> 00:01:34.498
or someone can be injecting a script
somehow and reading your user's

23
00:01:34.498 --> 00:01:40.075
location or something, using
the permission from the bank's website.

24
00:01:40.075 --> 00:01:45.772
So you may wanna turn off from
a security point of view or capability.

25
00:01:45.772 --> 00:01:46.560
For that,

26
00:01:46.560 --> 00:01:52.435
we have an spec known as permissions
policy that has changed its name recently.

27
00:01:52.435 --> 00:01:56.395
Before, it was known as feature policy.

28
00:01:56.395 --> 00:02:00.750
The spec is not a Charscape API, so
that's why we won't cover it too much.

29
00:02:00.750 --> 00:02:05.287
I will show you how that works,
but it's just an HTTP header.

30
00:02:05.287 --> 00:02:05.889
Where?

31
00:02:05.889 --> 00:02:08.970
From your server when you
are serving the HTML,

32
00:02:08.970 --> 00:02:13.374
you can specify that header,
it's called permissions-policy.

33
00:02:13.374 --> 00:02:16.295
And for iframes, it's an HTML attribute.

34
00:02:16.295 --> 00:02:20.830
So the same value that you can
send a financial HTTP header

35
00:02:20.830 --> 00:02:23.959
can be set as an attribute for iframes.

36
00:02:23.959 --> 00:02:25.153
This is how it looks like.

37
00:02:25.153 --> 00:02:29.107
So for example,
permissions policy:geolocation=, and

38
00:02:29.107 --> 00:02:32.681
in parentheses, in this case,
you can express self.

39
00:02:32.681 --> 00:02:37.906
That is, I'm enabling geolocation for
my website, for my origin,

40
00:02:37.906 --> 00:02:43.869
and also for these other two, or three,
or four, or infinite other domains.

41
00:02:43.869 --> 00:02:48.732
So in this case, you are kind of enabled
cross-domain usage for geolocation.

42
00:02:48.732 --> 00:02:52.446
This is an HTTP header,
not the JavaScript API.

43
00:02:52.446 --> 00:02:55.457
If you wanna remove the permission,

44
00:02:55.457 --> 00:03:00.517
you use the name of the capability
equals empty parentheses.

45
00:03:00.517 --> 00:03:01.347
In that case,

46
00:03:01.347 --> 00:03:06.275
it's an empty list, so no one has access
to geolocation on this particular domain.

47
00:03:06.275 --> 00:03:10.145
If you open the console,
you try to use API,

48
00:03:10.145 --> 00:03:13.910
it will deny you access to the capability,

49
00:03:13.910 --> 00:03:19.673
because the server set so for
this HTML, for this web app, okay?

50
00:03:19.673 --> 00:03:21.087
Make sense?

51
00:03:21.087 --> 00:03:27.209
You can define multiple policies at
the same time in just one definition.

52
00:03:27.209 --> 00:03:30.762
Such as, in this case,
we have geolocation, space,

53
00:03:30.762 --> 00:03:35.656
camera, space, picture-in-picture,
that's another capability.

54
00:03:35.656 --> 00:03:39.336
So in this case, for geolocation,
you have a declaration of domains.

55
00:03:39.336 --> 00:03:44.270
For camera, you have a star, meaning
that anyone in this navigation load

56
00:03:44.270 --> 00:03:48.502
can access the camera and
picture-in-picture is disabled.

57
00:03:48.502 --> 00:03:52.910
And also, you can express
several permissions policy,

58
00:03:55.030 --> 00:03:57.359
HTTP headers in the same load.

59
00:03:57.359 --> 00:04:02.923
In this case, in another line,
you also disable Bluetooth, okay?

60
00:04:02.923 --> 00:04:06.684
So with this,
you can have final control over,

61
00:04:06.684 --> 00:04:11.208
which capabilities will be available for
your website.

62
00:04:11.208 --> 00:04:13.358
And then we have permissions API.

63
00:04:13.358 --> 00:04:18.946
This is the first API that we will see,
the real API, one of 36.

64
00:04:18.946 --> 00:04:23.547
It looks, I mean,
the name is strong, right,

65
00:04:23.547 --> 00:04:28.275
permissions API, but it's chaos, actually.

66
00:04:28.275 --> 00:04:35.682
So the idea of the API was to bring
all the permissions in one places.

67
00:04:35.682 --> 00:04:39.179
Because in the history
of web capabilities,

68
00:04:39.179 --> 00:04:41.760
every API was different, okay?

69
00:04:41.760 --> 00:04:46.641
I think that the first real capability
that we added was geolocation and

70
00:04:46.641 --> 00:04:48.684
the iPhone was the first one.

71
00:04:48.684 --> 00:04:53.270
When Steve Jobs presented the iPhone and
Safari for the iPhone, and

72
00:04:53.270 --> 00:04:56.902
he was saying that web apps
were the way to grade apps.

73
00:04:56.902 --> 00:05:00.721
Apple at that point didn't have
the app store or native apps,

74
00:05:00.721 --> 00:05:05.127
didn't have the idea of the app store and
they were promoting web apps,

75
00:05:05.127 --> 00:05:08.669
the power of the web, okay,
that an old Apple, anyway.

76
00:05:08.669 --> 00:05:14.035
And they added capabilities,
they added Canvas for 2D drawing.

77
00:05:14.035 --> 00:05:17.963
And later on, they added geolocation,
that was the first one,

78
00:05:17.963 --> 00:05:20.675
the first capability API that we've seen.

79
00:05:20.675 --> 00:05:25.085
And it was chaos to know if
you had permission or not.

80
00:05:25.085 --> 00:05:29.357
And every new API that appeared in
the market, a new capability API,

81
00:05:29.357 --> 00:05:30.395
has its own API.

82
00:05:30.395 --> 00:05:33.457
So that's why they created
the Permissions API.

83
00:05:33.457 --> 00:05:34.935
What's the problem?

84
00:05:34.935 --> 00:05:37.853
That today, it depends on the browser.

85
00:05:37.853 --> 00:05:43.651
Some capabilities are in the API,
in this one in permissions API and

86
00:05:43.651 --> 00:05:48.024
some are not, and
you don't know which one is in and

87
00:05:48.024 --> 00:05:51.706
it's a really narrow sub list of options.

88
00:05:51.706 --> 00:05:53.492
What's the deal here?

89
00:05:53.492 --> 00:05:57.909
You call navigator permissions query and
an object.

90
00:05:57.909 --> 00:06:02.789
In this case, with a name, such as
the name I wanna check for geolocation.

91
00:06:02.789 --> 00:06:08.623
And then, we check the state of that
response, the state is a string.

92
00:06:08.623 --> 00:06:11.760
It can be granted, so you're good to go.

93
00:06:11.760 --> 00:06:14.810
For this origin,
you can use the Geolocation API.

94
00:06:14.810 --> 00:06:18.107
You can be prompt,
which means we don't know yet.

95
00:06:18.107 --> 00:06:24.872
So next time you try it,
we will prompt the user or deny.

96
00:06:24.872 --> 00:06:29.279
And if it doesn't support that
permission at all, such as geolocation,

97
00:06:29.279 --> 00:06:31.836
now it says in this phone, in this device,

98
00:06:31.836 --> 00:06:36.049
we don't have a Geolocation API,
it will throw an exception, okay?

99
00:06:36.049 --> 00:06:40.323
So it's nice, the problem is that is
not available for every capability.

100
00:06:40.323 --> 00:06:44.310
So only for a few, and
each browser has its own sub list.

101
00:06:44.310 --> 00:06:50.844
So I would argue that not a lot of
web apps are actually using this API.

