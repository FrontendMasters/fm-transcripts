WEBVTT

00:00:00.050 --> 00:00:04.060
Will Sentance: 시작하죠. Seth, 첫 번째 라인입니다.
여기서 뭘 하죠?

00:00:04.060 --> 00:00:05.540
해봐요.

00:00:05.540 --> 00:00:07.630
Seth: oncify라는 함수요.

00:00:07.630 --> 00:00:11.880
Will Sentance: 좋아요, Global Memory로 가죠.

00:00:14.040 --> 00:00:17.300
oncify가 저장됐죠.

00:00:17.300 --> 00:00:19.570
다음 라인은, Jasmine.

00:00:19.570 --> 00:00:22.180
Jasmine: multiplyBy2를 함수로 선언해요.

00:00:22.180 --> 00:00:28.420
Will Sentance: 이거죠. multiplyBy2는 함수고,

00:00:28.420 --> 00:00:32.930
이건 함수고, 입력으로 num을 받고
결과로 num * 2를 내죠.

00:00:32.930 --> 00:00:33.991
다음 라인.

00:00:33.991 --> 00:00:36.605
Seth: [웅얼웅얼]
Will Sentance: 맞았어요.

00:00:36.605 --> 00:00:39.110
내가 물어볼 거라는 걸 Seth가 알고 있었네요.

00:00:39.110 --> 00:00:42.797
어쨌든, left-hand 영역부터요. Bivanesh.

00:00:42.797 --> 00:00:44.876
Bivanesh: oncifiedMultiplyBy2요.

00:00:44.876 --> 00:00:50.308
Will Sentance: 맞았어요.
그리고 이걸 보는 모든 사람들은

00:00:50.308 --> 00:00:57.417
oncify가 어떻게든  multiplyBy2를 한 번만 호출하도록
변형시킬거라고 생각할거예요.

00:00:57.417 --> 00:01:00.398
저장된 후에 함수를 편집할 수 있나요, Virginia?

00:01:00.398 --> 00:01:02.301
Virginia: 아뇨.
Will Sentance: 아니죠. 그 대신.

00:01:02.301 --> 00:01:06.758
우린 코드를 읽는 사람이
이게 편집된다고 생각하도록 속일거예요.

00:01:06.758 --> 00:01:09.425
하지만 실제로는, 음 그리고 문제가 있어요 그렇죠?

00:01:09.425 --> 00:01:10.850
어떤 의미에선 더 읽기 쉬울건데,

00:01:10.850 --> 00:01:13.870
그건 내부적으로 동작할 필요가 없어서
디버그하기가 더 어렵겠죠.

00:01:13.870 --> 00:01:14.714
우린 알게 될거예요.

00:01:14.714 --> 00:01:19.150
우린 실제로 oncifiedMutilplyBy2를
백팩을 가진 새로운 함수로 만들겁니다.

00:01:19.150 --> 00:01:23.893
그리고 oncifiedMultiplyBy2의 백팩에
multiplyBy2 함수를

00:01:23.893 --> 00:01:26.090
저장할 거예요.

00:01:26.090 --> 00:01:29.310
우린 거기에 단순한 데이터 이상을 저장하는거예요.

00:01:29.310 --> 00:01:33.610
우린 oncifiedMultiplyBy2의 백팩에
함수를 저장할 수도 있어요.

00:01:33.610 --> 00:01:39.905
oncifiedMultiplyBy2는

00:01:39.905 --> 00:01:46.199
호출 결과가 될겁니다.

00:01:46.199 --> 00:01:51.338
oncify(multiplyBy2)의 결과죠.

00:01:51.338 --> 00:01:54.490
이거죠. 여러분 모두 다같이,
새로운-?

00:01:54.490 --> 00:01:56.038
학생들: Execution Context요.

00:01:56.038 --> 00:02:01.469
Will Sentance: 너무 아름다워요. 이거죠.
너무 크지 않게할께요. 이것의 주 작업은

00:02:01.469 --> 00:02:08.450
oncifiedMultiplyBy2에 저장될 함수를 세팅하는거니까요.

00:02:09.970 --> 00:02:15.480
그리고 그것의 영구적인 메모리인 백팩에
2개의 요소가 들어갈거예요.

00:02:15.480 --> 00:02:17.374
multiplyBy2 함수와,

00:02:17.374 --> 00:02:20.096
counter가 얼마나 그게 실행됐는지 추적할겁니다.

00:02:20.096 --> 00:02:22.650
그게 oncify 내부에서 처리하는 일이예요.

00:02:22.650 --> 00:02:27.437
그럼 그 안으로 들어가보죠. Local Memory에서,
처음 처리하는게 뭐죠 Michael?

00:02:27.437 --> 00:02:29.589
oncify의 Local Memory에서요?

00:02:29.589 --> 00:02:30.788
Michael: counter요?

00:02:30.788 --> 00:02:32.050
Will Sentance: 그건 2번째죠.

00:02:32.050 --> 00:02:33.502
우리가 필요한 처음 것은 뭐죠?

00:02:33.502 --> 00:02:34.612
Michael: 아, convertMe요.

00:02:34.612 --> 00:02:37.978
Will Sentance: 맞았어요. convertMe라는 파라미터죠.

00:02:37.978 --> 00:02:41.550
거기엔 뭐가 저장되죠? Michael?

00:02:41.550 --> 00:02:42.310
Michael: multiplyBy2요.

00:02:42.310 --> 00:02:45.379
Will Sentance: multiplyBy2 기능의 전체죠.

00:02:45.379 --> 00:02:50.407
이거고, 입력으로 num이고, 반환은 num * 2죠.

00:02:50.407 --> 00:02:51.833
좋아요. counter가 있고요.

00:02:51.833 --> 00:02:55.858
그리고 마지막으로, Andrew.
oncify의 내부에서 하는 마지막은요?

00:02:55.858 --> 00:03:00.927
아주 크고, 끝에서 두 번째 거였죠.
우리가 저장하는 가장 큰 게 뭐죠?

00:03:00.927 --> 00:03:01.815
함수요?

00:03:01.815 --> 00:03:03.178
그 함수의 이름은 뭐죠?

00:03:03.178 --> 00:03:07.612
Andrew: inner요.
Will Sentance: inner죠. 이렇게요.

00:03:07.612 --> 00:03:10.274
이거죠.

00:03:10.274 --> 00:03:11.528
근데 우리가 뭔가를 빼먹었어요.

00:03:11.528 --> 00:03:14.651
우리가 다른 함수의 실행 내부에서 함수를 저장했을 때,

00:03:14.651 --> 00:03:15.608
또 뭐가 일어나죠?

00:03:17.263 --> 00:03:18.703
Will Sentance: Jasmine, 제가

00:03:18.703 --> 00:03:22.451
oncify의 실행 내부에서
inner 함수를 저장했을 때 뭘 얻죠?

00:03:22.451 --> 00:03:23.767
Jasmine: Execution Context요?

00:03:23.767 --> 00:03:26.020
Will Sentance: 저장했을 때는 아니죠.

00:03:26.020 --> 00:03:27.461
Jasmine: 백팩이요.

00:03:27.461 --> 00:03:30.539
Will Sentance: 제가 얻는 건 링크죠.

00:03:30.539 --> 00:03:36.940
전 이걸 백팩이라고 부르진 않을거예요.
이 둘러싼 전체 메모리에 대한 링크를 얻죠.

00:03:40.202 --> 00:03:45.106
Will Sentance: 그 말은, Sam.
inner라고 하는 기능을 반환할 때,

00:03:45.106 --> 00:03:50.018
어떤 Global Label로 집어넣죠, Sam?

00:03:50.018 --> 00:03:53.778
oncify의 내부에 선언된 기능은 inner죠.

00:03:53.778 --> 00:03:57.218
그게 반환되면 어떤 Global Label로 가죠, Sam?

00:03:57.218 --> 00:04:00.644
Sam: oncifiedMultiplyBy2요.
Will Sentance: oncifiedMultiplyBy2죠.

00:04:00.644 --> 00:04:05.633
제가 이걸 반환 할 때,

00:04:05.633 --> 00:04:10.082
여기로 나오죠.
inner로 만들어졌던 함수가요.

00:04:10.082 --> 00:04:10.700
이렇게요.

00:04:10.700 --> 00:04:12.570
이건 inner로 만들어졌었어요.

00:04:12.570 --> 00:04:15.460
이거랑 같이 오는건요? Virginia?

00:04:15.460 --> 00:04:18.443
Virginia: 백팩이요.
Will Sentance: 백팩이죠. 맞았어요.

00:04:18.443 --> 00:04:24.618
여기에 붙어있고, 이 안에 뭐가 있나 보죠.

00:04:24.618 --> 00:04:29.554
이 안엔 뭐가 있을까요?

00:04:29.554 --> 00:04:30.550
Jasmine?

00:04:35.662 --> 00:04:38.038
Will Sentance: 어떤 함수가 백팩 안에 있을까요?

00:04:38.038 --> 00:04:38.937
Jasmine: multiplyBy2요

00:04:38.937 --> 00:04:42.410
Will Sentance: multiplyBy2죠.

00:04:42.410 --> 00:04:44.950
근데 이거 진짜 장난아니죠?

00:04:44.950 --> 00:04:49.504
우린 oncifiedMultiplyBy2를 원했는데,

00:04:49.504 --> 00:04:53.621
multiplyBy2를 실행할 수 있는거잖아요.

00:04:53.621 --> 00:04:59.434
이게 oncifiedMultiplyBy2인가요? multiplyBy2인가요?

00:04:59.434 --> 00:05:04.920
이건 inner로 불렸던 새로운 함수고
우리가 저장한 백팩을 가지고 있죠.

00:05:05.930 --> 00:05:11.477
oncifiy에 뭐가 전달되건,
그 안에 inner가 생성됐고

00:05:11.477 --> 00:05:15.329
이걸 다 끌어서, inner의 뒤에 붙이는거죠.

00:05:15.329 --> 00:05:19.504
inner가 하는 일은 oncifiedMultiplyBy2라는 새로운 이름으로

00:05:19.504 --> 00:05:23.120
백팩 안을 보면서 결정하는거예요.

00:05:23.120 --> 00:05:25.210
그것의 유일한 일은 백팩을 살펴보는거죠.

00:05:25.210 --> 00:05:29.247
백팩에 있는 multiplyBy2 함수를 실행할 수 있나요?

00:05:29.247 --> 00:05:33.388
그럼 백팩의 다른 하나는 뭐죠, Jasmine?

00:05:33.388 --> 00:05:34.556
Jasmine: 저 근데 질문 먼저 해도 되나요?

00:05:34.556 --> 00:05:35.389
Will Sentance: 잠깐만 기다려주세요. 약속해요.

00:05:35.389 --> 00:05:37.244
백팩에 있는 다른 건 뭐죠. Jasmine?

00:05:37.244 --> 00:05:38.043
Jasmine: counter요.

00:05:38.043 --> 00:05:39.960
Will Sentance: counter는 뭘로 되어있죠?

00:05:39.960 --> 00:05:41.120
Jasmine: 0이요.

00:05:41.120 --> 00:05:42.290
Will Sentance: 0이죠.

00:05:42.290 --> 00:05:43.200
말해봐요. Jasmine.

00:05:43.200 --> 00:05:48.340
Jasmine: 그럼 백팩은 inner 함수가
만들어질 때 한 번 만들어진건가요?

00:05:48.340 --> 00:05:49.904
Will Sentance: inner가 생성되자마자

00:05:49.904 --> 00:05:53.180
그것을 감싸는 Local Memory에 대한 링크를 얻어요.

00:05:53.180 --> 00:06:00.120
oncifiy의 실행에서 inner가 반환될 때 어디로 가죠?

00:06:00.120 --> 00:06:02.739
Jasmine: oncified-
Will Sentance: oncifiedMultiplyBy2죠.

00:06:02.739 --> 00:06:06.560
그리고 여기 모든 데이터를 끌고가요.

00:06:06.560 --> 00:06:07.990
그럼 그 데이터가 뭐죠?

00:06:07.990 --> 00:06:14.070
우리가 메모리에 들고 있고 변형하길 원하는 함수죠.

00:06:14.070 --> 00:06:20.383
그리고 counter로 이건 multiplyBy2가

00:06:20.383 --> 00:06:26.698
oncifiedMultiplyBy2 내부에서
이전에 실행이 된 걸 추적할거구요.

00:06:26.698 --> 00:06:31.240
좋아요. 이 시점에서 이 Exeuction Context는요?
여러분? 사라지죠.

00:06:32.530 --> 00:06:33.060
맞았어요.